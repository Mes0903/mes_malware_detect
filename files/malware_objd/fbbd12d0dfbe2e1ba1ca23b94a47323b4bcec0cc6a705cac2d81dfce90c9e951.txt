
fbbd12d0dfbe2e1ba1ca23b94a47323b4bcec0cc6a705cac2d81dfce90c9e951.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    al,0x10
  401002:	inc    eax
  401003:	add    BYTE PTR [ebx],al
  401005:	pop    es
  401006:	inc    edx
  401007:	outs   dx,DWORD PTR ds:[esi]
  401008:	outs   dx,DWORD PTR ds:[esi]
  401009:	ins    BYTE PTR es:[edi],dx
  40100a:	gs popa 
  40100c:	outs   dx,BYTE PTR ds:[esi]
  40100d:	add    DWORD PTR [eax],eax
  40100f:	add    BYTE PTR [eax],al
  401011:	add    BYTE PTR [ecx],al
  401013:	add    BYTE PTR [eax],al
  401015:	add    BYTE PTR [eax],al
  401017:	adc    BYTE PTR [eax+0x0],al
  40101a:	add    eax,0x736c6146
  40101f:	gs add al,0x54
  401022:	jb     0x401099
  401024:	lea    eax,gs:[eax+0x0]
  401028:	sub    al,0x10
  40102a:	inc    eax
  40102b:	add    BYTE PTR [edx],al
  40102d:	add    al,0x43
  40102f:	push   0x17261
  401034:	add    BYTE PTR [eax],al
  401036:	add    bh,bh
  401038:	add    BYTE PTR [eax],al
  40103a:	add    BYTE PTR [eax+0x401040],dl
  401040:	add    DWORD PTR [edi],eax
  401042:	dec    ecx
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	je     0x4010ab
  401046:	addr16 gs jb 0x40104e
  40104a:	add    BYTE PTR [eax],al
  40104c:	add    BYTE PTR [eax+0x7fffffff],al
  401052:	mov    eax,eax
  401054:	pop    eax
  401055:	adc    BYTE PTR [eax+0x0],al
  401058:	add    DWORD PTR [edx+eax*2],eax
  40105b:	jns    0x4010d1
  40105d:	add    DWORD PTR gs:[eax],eax
  401060:	add    BYTE PTR [eax],al
  401062:	add    bh,bh
  401064:	add    BYTE PTR [eax],al
  401066:	add    BYTE PTR [eax+0x40106c],dl
  40106c:	adc    BYTE PTR ds:0x36746e49,al
  401072:	xor    al,0x0
  401074:	add    BYTE PTR [eax],al
  401076:	add    BYTE PTR [eax],al
  401078:	add    BYTE PTR [eax],al
  40107a:	cmp    bh,0xff
  40107d:	(bad)  
  40107e:	(bad)  
  40107f:	(bad)  
  401080:	(bad)  
  401081:	(bad)  
  401082:	jg     0x401014
  401084:	mov    BYTE PTR [eax],dl
  401086:	inc    eax
  401087:	add    BYTE PTR [edx],cl
  401089:	push   es
  40108a:	jae    0x401100
  40108c:	jb     0x4010f7
  40108e:	outs   dx,BYTE PTR ds:[esi]
  40108f:	fcom   QWORD PTR [bx+si]
  401092:	inc    eax
	...
  4010af:	add    ah,bl
  4010b1:	adc    BYTE PTR [eax+0x0],al
  4010b4:	add    al,0x0
  4010b6:	add    BYTE PTR [eax],al
  4010b8:	add    BYTE PTR [eax],al
  4010ba:	add    BYTE PTR [eax],al
  4010bc:	rol    BYTE PTR [edx+0x40],1
  4010bf:	add    ah,bl
  4010c1:	inc    edx
  4010c2:	inc    eax
  4010c3:	add    al,ah
  4010c5:	inc    edx
  4010c6:	inc    eax
  4010c7:	add    ah,ah
  4010c9:	inc    edx
  4010ca:	inc    eax
  4010cb:	add    al,bl
  4010cd:	inc    edx
  4010ce:	inc    eax
  4010cf:	add    BYTE PTR [eax],bh
  4010d1:	inc    eax
  4010d2:	inc    eax
  4010d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4010d7:	add    BYTE PTR [eax+0x7004040],dl
  4010dd:	push   esp
  4010de:	dec    edi
  4010df:	bound  ebp,QWORD PTR [edx+0x65]
  4010e2:	arpl   WORD PTR [eax+ebp*8+0x10],si
  4010e6:	inc    eax
  4010e7:	add    BYTE PTR [edi],al
  4010e9:	pop    es
  4010ea:	push   esp
  4010eb:	dec    edi
  4010ec:	bound  ebp,QWORD PTR [edx+0x65]
  4010ef:	arpl   WORD PTR [esp+ebx*8+0x10],si
  4010f3:	inc    eax
  4010f4:	add    BYTE PTR [eax],al
  4010f6:	add    BYTE PTR [eax],al
  4010f8:	add    BYTE PTR [eax],al
  4010fa:	add    BYTE PTR [esi],al
  4010fc:	push   ebx
  4010fd:	jns    0x401172
  4010ff:	je     0x401166
  401101:	ins    DWORD PTR es:[edi],dx
  401102:	add    BYTE PTR [eax],al
  401104:	or     BYTE PTR [ecx],dl
  401106:	inc    eax
  401107:	add    BYTE PTR [edi],cl
  401109:	or     cl,BYTE PTR [ecx+0x49]
  40110c:	outs   dx,BYTE PTR ds:[esi]
  40110d:	je     0x401174
  40110f:	jb     0x401177
  401111:	popa   
  401112:	arpl   WORD PTR [ebp+0x0],sp
  401115:	add    BYTE PTR [eax],al
  401117:	add    BYTE PTR [ecx],al
	...
  401121:	rol    BYTE PTR [eax],0x0
  401124:	add    BYTE PTR [eax],al
  401126:	add    BYTE PTR [eax],al
  401128:	inc    esi
  401129:	push   es
  40112a:	push   ebx
  40112b:	jns    0x4011a0
  40112d:	je     0x401194
  40112f:	ins    DWORD PTR es:[edi],dx
  401130:	add    eax,DWORD PTR [eax]
  401132:	(bad)  
  401133:	dec    esp
  401135:	add    DWORD PTR [esp+0x4],0xfffffff8
  40113a:	jmp    0x406b14
  40113f:	add    DWORD PTR [esp+0x4],0xfffffff8
  401144:	jmp    0x406b3c
  401149:	add    DWORD PTR [esp+0x4],0xfffffff8
  40114e:	jmp    0x406b50
  401153:	int3   
  401154:	int3   
  401155:	xor    eax,0x3f004011
  40115a:	adc    DWORD PTR [eax+0x0],eax
  40115d:	dec    ecx
  40115e:	adc    DWORD PTR [eax+0x0],eax
  401161:	add    DWORD PTR [eax],eax
	...
  40116b:	add    BYTE PTR [eax],al
  40116d:	rol    BYTE PTR [eax],0x0
  401170:	add    BYTE PTR [eax],al
  401172:	add    BYTE PTR [eax],al
  401174:	inc    esi
  401175:	push   ebp
  401176:	adc    DWORD PTR [eax+0x0],eax
  401179:	or     BYTE PTR [eax],al
  40117b:	add    BYTE PTR [eax],al
  40117d:	add    BYTE PTR [eax],al
  40117f:	add    BYTE PTR [eax],al
  401181:	lea    eax,[eax+0x0]
  401184:	rcl    BYTE PTR [ecx],1
  401186:	inc    eax
  401187:	add    BYTE PTR [ecx+0x11],ah
  40118a:	inc    eax
	...
  4011a3:	add    al,dl
  4011a5:	adc    DWORD PTR [eax+0x0],eax
  4011a8:	or     al,0x0
  4011aa:	add    BYTE PTR [eax],al
  4011ac:	nop
  4011ad:	adc    BYTE PTR [eax+0x0],al
  4011b0:	rol    BYTE PTR [edx+0x40],1
  4011b3:	add    al,ch
  4011b5:	push   0x40
  4011b7:	add    ah,dh
  4011b9:	push   0x40
  4011bb:	add    ah,ah
  4011bd:	inc    edx
  4011be:	inc    eax
  4011bf:	add    al,bl
  4011c1:	inc    edx
  4011c2:	inc    eax
  4011c3:	add    BYTE PTR [ebx+ebp*2],al
  4011c6:	inc    eax
  4011c7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4011cb:	add    BYTE PTR [eax+0x11004040],dl
  4011d1:	push   esp
  4011d2:	dec    ecx
  4011d3:	outs   dx,BYTE PTR ds:[esi]
  4011d4:	je     0x40123b
  4011d6:	jb     0x40123e
  4011d8:	popa   
  4011d9:	arpl   WORD PTR [ebp+0x64],sp
  4011dc:	dec    edi
  4011dd:	bound  ebp,QWORD PTR [edx+0x65]
  4011e0:	arpl   WORD PTR [ebx+ecx*4-0x40],si
  4011e4:	call   0x44051fa
  4011e9:	or     DWORD PTR [esp+eax*2+0x61],edx
  4011ed:	je     0x401254
  4011ef:	push   esp
  4011f0:	imul   ebp,DWORD PTR [ebp+0x65],0x3c25ff01
  4011f7:	xchg   esp,eax
  4011f8:	inc    edi
  4011f9:	add    BYTE PTR [ebx+0x3825ffc0],cl
  4011ff:	xchg   esp,eax
  401200:	inc    edi
  401201:	add    BYTE PTR [ebx+0x3425ffc0],cl
  401207:	xchg   esp,eax
  401208:	inc    edi
  401209:	add    BYTE PTR [ebx+0x3025ffc0],cl
  40120f:	xchg   esp,eax
  401210:	inc    edi
  401211:	add    BYTE PTR [ebx+0x2c25ffc0],cl
  401217:	xchg   esp,eax
  401218:	inc    edi
  401219:	add    BYTE PTR [ebx+0x2825ffc0],cl
  40121f:	xchg   esp,eax
  401220:	inc    edi
  401221:	add    BYTE PTR [ebx+0x2425ffc0],cl
  401227:	xchg   esp,eax
  401228:	inc    edi
  401229:	add    BYTE PTR [ebx+0x2025ffc0],cl
  40122f:	xchg   esp,eax
  401230:	inc    edi
  401231:	add    BYTE PTR [ebx+0x1c25ffc0],cl
  401237:	xchg   esp,eax
  401238:	inc    edi
  401239:	add    BYTE PTR [ebx+0x1825ffc0],cl
  40123f:	xchg   esp,eax
  401240:	inc    edi
  401241:	add    BYTE PTR [ebx+0x1425ffc0],cl
  401247:	xchg   esp,eax
  401248:	inc    edi
  401249:	add    BYTE PTR [ebx+0x1025ffc0],cl
  40124f:	xchg   esp,eax
  401250:	inc    edi
  401251:	add    BYTE PTR [ebx-0x67da0040],cl
  401257:	xchg   ebx,eax
  401258:	inc    edi
  401259:	add    BYTE PTR [ebx+0xc25ffc0],cl
  40125f:	xchg   esp,eax
  401260:	inc    edi
  401261:	add    BYTE PTR [ebx+0x825ffc0],cl
  401267:	xchg   esp,eax
  401268:	inc    edi
  401269:	add    BYTE PTR [ebx+0x425ffc0],cl
  40126f:	xchg   esp,eax
  401270:	inc    edi
  401271:	add    BYTE PTR [ebx+0x25ffc0],cl
  401277:	xchg   esp,eax
  401278:	inc    edi
  401279:	add    BYTE PTR [ebx-0x6bda0040],cl
  40127f:	xchg   ebx,eax
  401280:	inc    edi
  401281:	add    BYTE PTR [ebx-0x3da0040],cl
  401287:	xchg   ebx,eax
  401288:	inc    edi
  401289:	add    BYTE PTR [ebx-0x7da0040],cl
  40128f:	xchg   ebx,eax
  401290:	inc    edi
  401291:	add    BYTE PTR [ebx-0xbda0040],cl
  401297:	xchg   ebx,eax
  401298:	inc    edi
  401299:	add    BYTE PTR [ebx-0xfda0040],cl
  40129f:	xchg   ebx,eax
  4012a0:	inc    edi
  4012a1:	add    BYTE PTR [ebx-0x13da0040],cl
  4012a7:	xchg   ebx,eax
  4012a8:	inc    edi
  4012a9:	add    BYTE PTR [ebx-0x17da0040],cl
  4012af:	xchg   ebx,eax
  4012b0:	inc    edi
  4012b1:	add    BYTE PTR [ebx-0x1bda0040],cl
  4012b7:	xchg   ebx,eax
  4012b8:	inc    edi
  4012b9:	add    BYTE PTR [ebx-0x1fda0040],cl
  4012bf:	xchg   ebx,eax
  4012c0:	inc    edi
  4012c1:	add    BYTE PTR [ebx-0x23da0040],cl
  4012c7:	xchg   ebx,eax
  4012c8:	inc    edi
  4012c9:	add    BYTE PTR [ebx-0x27da0040],cl
  4012cf:	xchg   ebx,eax
  4012d0:	inc    edi
  4012d1:	add    BYTE PTR [ebx-0x2bda0040],cl
  4012d7:	xchg   ebx,eax
  4012d8:	inc    edi
  4012d9:	add    BYTE PTR [ebx-0x2fda0040],cl
  4012df:	xchg   ebx,eax
  4012e0:	inc    edi
  4012e1:	add    BYTE PTR [ebx-0x6fda0040],cl
  4012e7:	xchg   ebx,eax
  4012e8:	inc    edi
  4012e9:	add    BYTE PTR [ebx-0x33da0040],cl
  4012ef:	xchg   ebx,eax
  4012f0:	inc    edi
  4012f1:	add    BYTE PTR [ebx-0x37da0040],cl
  4012f7:	xchg   ebx,eax
  4012f8:	inc    edi
  4012f9:	add    BYTE PTR [ebx-0x3bda0040],cl
  4012ff:	xchg   ebx,eax
  401300:	inc    edi
  401301:	add    BYTE PTR [ebx-0x7fda0040],cl
  401307:	xchg   ebx,eax
  401308:	inc    edi
  401309:	add    BYTE PTR [ebx+0x7c25ffc0],cl
  40130f:	xchg   ebx,eax
  401310:	inc    edi
  401311:	add    BYTE PTR [ebx+0x7825ffc0],cl
  401317:	xchg   ebx,eax
  401318:	inc    edi
  401319:	add    BYTE PTR [ebx-0x3fda0040],cl
  40131f:	xchg   ebx,eax
  401320:	inc    edi
  401321:	add    BYTE PTR [ebx-0x43da0040],cl
  401327:	xchg   ebx,eax
  401328:	inc    edi
  401329:	add    BYTE PTR [ebx+0x7025ffc0],cl
  40132f:	xchg   ebx,eax
  401330:	inc    edi
  401331:	add    BYTE PTR [ebx+0x6c25ffc0],cl
  401337:	xchg   ebx,eax
  401338:	inc    edi
  401339:	add    BYTE PTR [ebx+0x6825ffc0],cl
  40133f:	xchg   ebx,eax
  401340:	inc    edi
  401341:	add    BYTE PTR [ebx-0x47da0040],cl
  401347:	xchg   ebx,eax
  401348:	inc    edi
  401349:	add    BYTE PTR [ebx-0x4bda0040],cl
  40134f:	xchg   ebx,eax
  401350:	inc    edi
  401351:	add    BYTE PTR [ebx-0x4fda0040],cl
  401357:	xchg   ebx,eax
  401358:	inc    edi
  401359:	add    BYTE PTR [ebx-0x3b7cac40],cl
  40135f:	mov    esp,0xabb
  401364:	add    BYTE PTR [eax+ebp*8+0x61],dl
  401368:	(bad)  
  401369:	(bad)  
  40136a:	push   esi
  40136c:	inc    esp
  40136d:	and    al,0x2c
  40136f:	add    DWORD PTR [ebp+eax*1+0xf],esi
  401373:	mov    bh,0x5c
  401375:	and    al,0x30
  401377:	mov    eax,ebx
  401379:	add    esp,0x44
  40137c:	pop    ebx
  40137d:	ret    
  40137e:	mov    eax,eax
  401380:	jmp    DWORD PTR ds:0x4793ac
  401386:	mov    eax,eax
  401388:	jmp    DWORD PTR ds:0x4793a8
  40138e:	mov    eax,eax
  401390:	jmp    DWORD PTR ds:0x4793a4
  401396:	mov    eax,eax
  401398:	jmp    DWORD PTR ds:0x47938c
  40139e:	mov    eax,eax
  4013a0:	(bad)  
  4013a1:	(bad)  
  4013a2:	(bad)  
  4013a3:	call   DWORD PTR [edi+0x0]
  4013a6:	add    BYTE PTR [eax],al
  4013a8:	inc    esi
  4013a9:	popa   
  4013aa:	jae    0x401420
  4013ac:	dec    ebp
  4013ad:	dec    ebp
  4013ae:	and    BYTE PTR [edx+0x6f],al
  4013b1:	jb     0x40141f
  4013b3:	popa   
  4013b4:	outs   dx,BYTE PTR ds:[esi]
  4013b5:	and    BYTE PTR fs:[ebp+0x64],al
  4013b9:	imul   esi,DWORD PTR [ecx+ebp*2+0x6f],0x20a9206e
  4013c1:	xor    dh,BYTE PTR [eax]
  4013c3:	xor    BYTE PTR [esp+ebp*1],dh
  4013c6:	and    BYTE PTR [edx],dh
  4013c8:	xor    BYTE PTR [eax],dh
  4013ca:	xor    eax,0x65695020
  4013cf:	jb     0x401443
  4013d1:	and    BYTE PTR gs:[ebp+eiz*2+0x20],ch
  4013d6:	push   edx
  4013d7:	imul   esp,DWORD PTR [ebx+0x68],0x202f2065
  4013de:	push   eax
  4013df:	jb     0x401450
  4013e1:	data16 gs jae 0x401458
  4013e5:	imul   ebp,DWORD PTR [edi+0x6e],0x53206c61
  4013ec:	outs   dx,DWORD PTR ds:[esi]
  4013ed:	data16 je 0x401467
  4013f0:	popa   
  4013f1:	jb     0x401458
  4013f3:	and    BYTE PTR [ebp+eiz*2+0x76],al
  4013f7:	gs ins BYTE PTR es:[edi],dx
  4013f9:	outs   dx,DWORD PTR ds:[esi]
  4013fa:	jo     0x401469
  4013fc:	outs   dx,BYTE PTR gs:[esi]
  4013fe:	je     0x401400
  401400:	lock cmpxchg BYTE PTR [ecx],dl
  401404:	ret    
  401405:	lea    eax,[eax+0x0]
  401408:	mov    ecx,DWORD PTR [eax]
  40140a:	mov    DWORD PTR [edx],ecx
  40140c:	mov    ecx,DWORD PTR [eax+0x4]
  40140f:	mov    eax,DWORD PTR [eax+0x8]
  401412:	mov    DWORD PTR [edx+0x4],ecx
  401415:	mov    DWORD PTR [edx+0x8],eax
  401418:	ret    
  401419:	lea    eax,[eax+0x0]
  40141c:	mov    ecx,DWORD PTR [eax]
  40141e:	mov    DWORD PTR [edx],ecx
  401420:	mov    ecx,DWORD PTR [eax+0x4]
  401423:	mov    DWORD PTR [edx+0x4],ecx
  401426:	mov    ecx,DWORD PTR [eax+0x8]
  401429:	mov    DWORD PTR [edx+0x8],ecx
  40142c:	mov    ecx,DWORD PTR [eax+0xc]
  40142f:	mov    eax,DWORD PTR [eax+0x10]
  401432:	mov    DWORD PTR [edx+0xc],ecx
  401435:	mov    DWORD PTR [edx+0x10],eax
  401438:	ret    
  401439:	lea    eax,[eax+0x0]
  40143c:	mov    ecx,DWORD PTR [eax]
  40143e:	mov    DWORD PTR [edx],ecx
  401440:	mov    ecx,DWORD PTR [eax+0x4]
  401443:	mov    DWORD PTR [edx+0x4],ecx
  401446:	mov    ecx,DWORD PTR [eax+0x8]
  401449:	mov    DWORD PTR [edx+0x8],ecx
  40144c:	mov    ecx,DWORD PTR [eax+0xc]
  40144f:	mov    DWORD PTR [edx+0xc],ecx
  401452:	mov    ecx,DWORD PTR [eax+0x10]
  401455:	mov    DWORD PTR [edx+0x10],ecx
  401458:	mov    ecx,DWORD PTR [eax+0x14]
  40145b:	mov    eax,DWORD PTR [eax+0x18]
  40145e:	mov    DWORD PTR [edx+0x14],ecx
  401461:	mov    DWORD PTR [edx+0x18],eax
  401464:	ret    
  401465:	lea    eax,[eax+0x0]
  401468:	fild   QWORD PTR [eax]
  40146a:	fild   QWORD PTR [eax+0x8]
  40146d:	fild   QWORD PTR [eax+0x10]
  401470:	fild   QWORD PTR [eax+0x18]
  401473:	mov    ecx,DWORD PTR [eax+0x20]
  401476:	mov    DWORD PTR [edx+0x20],ecx
  401479:	fistp  QWORD PTR [edx+0x18]
  40147c:	fistp  QWORD PTR [edx+0x10]
  40147f:	fistp  QWORD PTR [edx+0x8]
  401482:	fistp  QWORD PTR [edx]
  401484:	ret    
  401485:	lea    eax,[eax+0x0]
  401488:	fild   QWORD PTR [eax]
  40148a:	fild   QWORD PTR [eax+0x8]
  40148d:	fild   QWORD PTR [eax+0x10]
  401490:	fild   QWORD PTR [eax+0x18]
  401493:	fild   QWORD PTR [eax+0x20]
  401496:	mov    ecx,DWORD PTR [eax+0x28]
  401499:	mov    DWORD PTR [edx+0x28],ecx
  40149c:	fistp  QWORD PTR [edx+0x20]
  40149f:	fistp  QWORD PTR [edx+0x18]
  4014a2:	fistp  QWORD PTR [edx+0x10]
  4014a5:	fistp  QWORD PTR [edx+0x8]
  4014a8:	fistp  QWORD PTR [edx]
  4014aa:	ret    
  4014ab:	nop
  4014ac:	fild   QWORD PTR [eax]
  4014ae:	fild   QWORD PTR [eax+0x8]
  4014b1:	fild   QWORD PTR [eax+0x10]
  4014b4:	fild   QWORD PTR [eax+0x18]
  4014b7:	fild   QWORD PTR [eax+0x20]
  4014ba:	fild   QWORD PTR [eax+0x28]
  4014bd:	mov    ecx,DWORD PTR [eax+0x30]
  4014c0:	mov    DWORD PTR [edx+0x30],ecx
  4014c3:	fistp  QWORD PTR [edx+0x28]
  4014c6:	fistp  QWORD PTR [edx+0x20]
  4014c9:	fistp  QWORD PTR [edx+0x18]
  4014cc:	fistp  QWORD PTR [edx+0x10]
  4014cf:	fistp  QWORD PTR [edx+0x8]
  4014d2:	fistp  QWORD PTR [edx]
  4014d4:	ret    
  4014d5:	lea    eax,[eax+0x0]
  4014d8:	fild   QWORD PTR [eax]
  4014da:	fild   QWORD PTR [eax+0x8]
  4014dd:	fild   QWORD PTR [eax+0x10]
  4014e0:	fild   QWORD PTR [eax+0x18]
  4014e3:	fild   QWORD PTR [eax+0x20]
  4014e6:	fild   QWORD PTR [eax+0x28]
  4014e9:	fild   QWORD PTR [eax+0x30]
  4014ec:	mov    ecx,DWORD PTR [eax+0x38]
  4014ef:	mov    DWORD PTR [edx+0x38],ecx
  4014f2:	fistp  QWORD PTR [edx+0x30]
  4014f5:	fistp  QWORD PTR [edx+0x28]
  4014f8:	fistp  QWORD PTR [edx+0x20]
  4014fb:	fistp  QWORD PTR [edx+0x18]
  4014fe:	fistp  QWORD PTR [edx+0x10]
  401501:	fistp  QWORD PTR [edx+0x8]
  401504:	fistp  QWORD PTR [edx]
  401506:	ret    
  401507:	nop
  401508:	fild   QWORD PTR [eax]
  40150a:	fild   QWORD PTR [eax+0x8]
  40150d:	fild   QWORD PTR [eax+0x10]
  401510:	fild   QWORD PTR [eax+0x18]
  401513:	fild   QWORD PTR [eax+0x20]
  401516:	fild   QWORD PTR [eax+0x28]
  401519:	fild   QWORD PTR [eax+0x30]
  40151c:	fild   QWORD PTR [eax+0x38]
  40151f:	mov    ecx,DWORD PTR [eax+0x40]
  401522:	mov    DWORD PTR [edx+0x40],ecx
  401525:	fistp  QWORD PTR [edx+0x38]
  401528:	fistp  QWORD PTR [edx+0x30]
  40152b:	fistp  QWORD PTR [edx+0x28]
  40152e:	fistp  QWORD PTR [edx+0x20]
  401531:	fistp  QWORD PTR [edx+0x18]
  401534:	fistp  QWORD PTR [edx+0x10]
  401537:	fistp  QWORD PTR [edx+0x8]
  40153a:	fistp  QWORD PTR [edx]
  40153c:	ret    
  40153d:	lea    eax,[eax+0x0]
  401540:	sub    ecx,0xc
  401543:	add    eax,ecx
  401545:	add    edx,ecx
  401547:	neg    ecx
  401549:	jns    0x40155e
  40154b:	fild   QWORD PTR [ecx+eax*1]
  40154e:	fild   QWORD PTR [ecx+eax*1+0x8]
  401552:	fistp  QWORD PTR [ecx+edx*1+0x8]
  401556:	fistp  QWORD PTR [ecx+edx*1]
  401559:	add    ecx,0x10
  40155c:	js     0x40154b
  40155e:	fild   QWORD PTR [ecx+eax*1]
  401561:	fistp  QWORD PTR [ecx+edx*1]
  401564:	mov    eax,DWORD PTR [ecx+eax*1+0x8]
  401568:	mov    DWORD PTR [ecx+edx*1+0x8],eax
  40156c:	ret    
  40156d:	lea    eax,[eax+0x0]
  401570:	sub    ecx,0x4
  401573:	add    eax,ecx
  401575:	add    edx,ecx
  401577:	neg    ecx
  401579:	fild   QWORD PTR [ecx+eax*1]
  40157c:	fistp  QWORD PTR [ecx+edx*1]
  40157f:	add    ecx,0x8
  401582:	js     0x401579
  401584:	mov    eax,DWORD PTR [ecx+eax*1]
  401587:	mov    DWORD PTR [ecx+edx*1],eax
  40158a:	ret    
  40158b:	nop
  40158c:	mov    ecx,DWORD PTR [eax+0x4]
  40158f:	mov    edx,DWORD PTR [eax]
  401591:	cmp    ecx,edx
  401593:	mov    DWORD PTR [ecx],edx
  401595:	mov    DWORD PTR [edx+0x4],ecx
  401598:	je     0x40159c
  40159a:	ret    
  40159b:	nop
  40159c:	sub    ecx,0x46e7a0
  4015a2:	mov    edx,ecx
  4015a4:	shr    ecx,0x3
  4015a7:	movzx  edx,dh
  4015aa:	mov    eax,0xfffffffe
  4015af:	rol    eax,cl
  4015b1:	and    DWORD PTR [edx*4+0x46e720],eax
  4015b8:	jne    0x40159a
  4015ba:	mov    eax,0xfffffffe
  4015bf:	mov    ecx,edx
  4015c1:	rol    eax,cl
  4015c3:	and    DWORD PTR ds:0x46e71c,eax
  4015c9:	ret    
  4015ca:	mov    eax,eax
  4015cc:	sub    edx,0xb30
  4015d2:	shr    edx,0x8
  4015d5:	sub    edx,0x3ff
  4015db:	sbb    ecx,ecx
  4015dd:	and    edx,ecx
  4015df:	add    edx,0x3ff
  4015e5:	lea    ecx,[edx*8+0x46e7a0]
  4015ec:	mov    edx,DWORD PTR [ecx+0x4]
  4015ef:	cmp    edx,ecx
  4015f1:	mov    DWORD PTR [eax],ecx
  4015f3:	mov    DWORD PTR [eax+0x4],edx
  4015f6:	mov    DWORD PTR [edx],eax
  4015f8:	mov    DWORD PTR [ecx+0x4],eax
  4015fb:	je     0x401600
  4015fd:	ret    
  4015fe:	nop
  4015ff:	nop
  401600:	sub    ecx,0x46e7a0
  401606:	mov    edx,ecx
  401608:	shr    ecx,0x3
  40160b:	movzx  edx,dh
  40160e:	mov    eax,0x1
  401613:	shl    eax,cl
  401615:	or     DWORD PTR [edx*4+0x46e720],eax
  40161c:	mov    eax,0x1
  401621:	mov    ecx,edx
  401623:	shl    eax,cl
  401625:	or     DWORD PTR ds:0x46e71c,eax
  40162b:	ret    
  40162c:	cmp    DWORD PTR ds:0x46e718,0x0
  401633:	jne    0x401638
  401635:	ret    
  401636:	nop
  401637:	nop
  401638:	mov    eax,ds:0x46e714
  40163d:	test   BYTE PTR [eax-0x4],0x1
  401641:	jne    0x401668
  401643:	or     DWORD PTR [eax-0x4],0x8
  401647:	mov    edx,DWORD PTR ds:0x46e718
  40164d:	sub    eax,edx
  40164f:	lea    ecx,[edx+0x3]
  401652:	mov    DWORD PTR [eax-0x4],ecx
  401655:	mov    DWORD PTR [edx+eax*1-0x8],edx
  401659:	cmp    edx,0xb30
  40165f:	jae    0x4015cc
  401665:	ret    
  401666:	nop
  401667:	nop
  401668:	mov    edx,0xfffffff0
  40166d:	and    edx,DWORD PTR [eax-0x4]
  401670:	cmp    edx,0xb30
  401676:	jb     0x40168a
  401678:	call   0x40158c
  40167d:	mov    eax,ds:0x46e714
  401682:	mov    edx,0xfffffff0
  401687:	and    edx,DWORD PTR [eax-0x4]
  40168a:	mov    ecx,DWORD PTR ds:0x46e718
  401690:	sub    eax,ecx
  401692:	add    edx,ecx
  401694:	jmp    0x40164f
  401696:	ret    
  401697:	nop
  401698:	push   ebx
  401699:	mov    ebx,eax
  40169b:	call   0x40162c
  4016a0:	push   0x4
  4016a2:	push   0x1000
  4016a7:	push   0x13fff0
  4016ac:	push   0x0
  4016ae:	call   0x401380
  4016b3:	test   eax,eax
  4016b5:	je     0x401704
  4016b7:	mov    edx,DWORD PTR ds:0x46e704
  4016bd:	mov    ecx,eax
  4016bf:	mov    DWORD PTR [ecx],0x46e700
  4016c5:	mov    ds:0x46e704,eax
  4016ca:	mov    DWORD PTR [ecx+0x4],edx
  4016cd:	mov    DWORD PTR [edx],eax
  4016cf:	mov    edx,eax
  4016d1:	add    edx,0x13fff0
  4016d7:	mov    ecx,edx
  4016d9:	sub    ecx,0x4
  4016dc:	mov    DWORD PTR [ecx],0x2
  4016e2:	mov    ecx,0x13ffe0
  4016e7:	sub    ecx,ebx
  4016e9:	mov    DWORD PTR ds:0x46e718,ecx
  4016ef:	sub    edx,ebx
  4016f1:	mov    eax,edx
  4016f3:	mov    ds:0x46e714,eax
  4016f8:	or     ebx,0x2
  4016fb:	mov    edx,eax
  4016fd:	sub    edx,0x4
  401700:	mov    DWORD PTR [edx],ebx
  401702:	pop    ebx
  401703:	ret    
  401704:	xor    eax,eax
  401706:	mov    ds:0x46e718,eax
  40170b:	xor    eax,eax
  40170d:	pop    ebx
  40170e:	ret    
  40170f:	nop
  401710:	cmp    BYTE PTR ds:0x46e045,0x0
  401717:	je     0x401756
  401719:	jmp    0x401744
  40171b:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401722:	jne    0x401744
  401724:	push   0x0
  401726:	call   0x401390
  40172b:	mov    ecx,0x4707a0
  401730:	mov    dl,0x1
  401732:	xor    eax,eax
  401734:	call   0x401400
  401739:	test   al,al
  40173b:	je     0x401756
  40173d:	push   0xa
  40173f:	call   0x401390
  401744:	mov    ecx,0x4707a0
  401749:	mov    dl,0x1
  40174b:	xor    eax,eax
  40174d:	call   0x401400
  401752:	test   al,al
  401754:	jne    0x40171b
  401756:	ret    
  401757:	nop
  401758:	push   ebx
  401759:	push   esi
  40175a:	push   edi
  40175b:	push   ebp
  40175c:	mov    ebp,eax
  40175e:	lea    esi,[ebp+0x10010]
  401764:	dec    esi
  401765:	add    esi,0x4
  401768:	and    esi,0xffff0000
  40176e:	push   0x4
  401770:	push   0x101000
  401775:	push   esi
  401776:	push   0x0
  401778:	call   0x401380
  40177d:	mov    ebx,eax
  40177f:	test   ebx,ebx
  401781:	je     0x4017b3
  401783:	mov    edi,ebx
  401785:	mov    DWORD PTR [edi+0x8],ebp
  401788:	or     esi,0x4
  40178b:	mov    DWORD PTR [edi+0xc],esi
  40178e:	call   0x401710
  401793:	mov    eax,ds:0x4707a8
  401798:	mov    DWORD PTR [edi],0x4707a4
  40179e:	mov    DWORD PTR ds:0x4707a8,ebx
  4017a4:	mov    DWORD PTR [edi+0x4],eax
  4017a7:	mov    DWORD PTR [eax],ebx
  4017a9:	mov    BYTE PTR ds:0x4707a0,0x0
  4017b0:	add    ebx,0x10
  4017b3:	mov    eax,ebx
  4017b5:	pop    ebp
  4017b6:	pop    edi
  4017b7:	pop    esi
  4017b8:	pop    ebx
  4017b9:	ret    
  4017ba:	mov    eax,eax
  4017bc:	push   ebx
  4017bd:	push   esi
  4017be:	push   edi
  4017bf:	push   ebp
  4017c0:	add    esp,0xffffffdc
  4017c3:	mov    esi,eax
  4017c5:	sub    esi,0x10
  4017c8:	call   0x401710
  4017cd:	mov    eax,esi
  4017cf:	mov    edx,DWORD PTR [eax]
  4017d1:	mov    DWORD PTR [esp],edx
  4017d4:	mov    edx,DWORD PTR [eax+0x4]
  4017d7:	mov    DWORD PTR [esp+0x4],edx
  4017db:	mov    edx,DWORD PTR [eax+0xc]
  4017de:	test   dl,0x8
  4017e1:	jne    0x4017fd
  4017e3:	push   0x8000
  4017e8:	push   0x0
  4017ea:	push   esi
  4017eb:	call   0x401388
  4017f0:	test   eax,eax
  4017f2:	je     0x4017f8
  4017f4:	xor    edi,edi
  4017f6:	jmp    0x401837
  4017f8:	or     edi,0xffffffff
  4017fb:	jmp    0x401837
  4017fd:	mov    ebx,esi
  4017ff:	mov    ebp,edx
  401801:	and    ebp,0xfffffff0
  401804:	xor    edi,edi
  401806:	push   0x1c
  401808:	lea    eax,[esp+0xc]
  40180c:	push   eax
  40180d:	push   ebx
  40180e:	call   0x401324
  401813:	push   0x8000
  401818:	push   0x0
  40181a:	push   ebx
  40181b:	call   0x401388
  401820:	test   eax,eax
  401822:	jne    0x401829
  401824:	or     edi,0xffffffff
  401827:	jmp    0x401837
  401829:	mov    esi,DWORD PTR [esp+0x14]
  40182d:	cmp    ebp,esi
  40182f:	jbe    0x401837
  401831:	sub    ebp,esi
  401833:	add    ebx,esi
  401835:	jmp    0x401806
  401837:	test   edi,edi
  401839:	jne    0x40184e
  40183b:	mov    eax,DWORD PTR [esp+0x4]
  40183f:	mov    edx,DWORD PTR [esp]
  401842:	mov    DWORD PTR [eax],edx
  401844:	mov    eax,DWORD PTR [esp]
  401847:	mov    edx,DWORD PTR [esp+0x4]
  40184b:	mov    DWORD PTR [eax+0x4],edx
  40184e:	mov    BYTE PTR ds:0x4707a0,0x0
  401855:	mov    eax,edi
  401857:	add    esp,0x24
  40185a:	pop    ebp
  40185b:	pop    edi
  40185c:	pop    esi
  40185d:	pop    ebx
  40185e:	ret    
  40185f:	nop
  401860:	push   ebx
  401861:	push   esi
  401862:	push   edi
  401863:	push   ebp
  401864:	add    esp,0xffffffe0
  401867:	mov    esi,edx
  401869:	mov    edi,eax
  40186b:	mov    eax,edi
  40186d:	sub    eax,0x4
  401870:	mov    eax,DWORD PTR [eax]
  401872:	mov    ebx,eax
  401874:	and    ebx,0xfffffff0
  401877:	sub    ebx,0x14
  40187a:	cmp    ebx,esi
  40187c:	jae    0x401963
  401882:	mov    edx,ebx
  401884:	shr    edx,0x2
  401887:	add    edx,ebx
  401889:	cmp    edx,esi
  40188b:	jbe    0x401891
  40188d:	mov    ebp,edx
  40188f:	jmp    0x401893
  401891:	mov    ebp,esi
  401893:	mov    edx,edi
  401895:	sub    edx,0x10
  401898:	and    eax,0xfffffff0
  40189b:	add    edx,eax
  40189d:	mov    DWORD PTR [esp],edx
  4018a0:	push   0x1c
  4018a2:	lea    eax,[esp+0x8]
  4018a6:	push   eax
  4018a7:	mov    eax,DWORD PTR [esp+0x8]
  4018ab:	push   eax
  4018ac:	call   0x401324
  4018b1:	cmp    DWORD PTR [esp+0x14],0x10000
  4018b9:	jne    0x40192b
  4018bb:	and    DWORD PTR [esp+0x10],0xffff0000
  4018c3:	mov    edx,esi
  4018c5:	sub    edx,ebx
  4018c7:	mov    eax,DWORD PTR [esp+0x10]
  4018cb:	cmp    edx,eax
  4018cd:	jae    0x40192b
  4018cf:	mov    edx,ebp
  4018d1:	sub    edx,ebx
  4018d3:	add    edx,0x10000
  4018d9:	dec    edx
  4018da:	and    edx,0xffff0000
  4018e0:	mov    ebx,edx
  4018e2:	cmp    eax,ebx
  4018e4:	jae    0x4018e8
  4018e6:	mov    ebx,eax
  4018e8:	push   0x4
  4018ea:	push   0x2000
  4018ef:	push   ebx
  4018f0:	mov    eax,DWORD PTR [esp+0xc]
  4018f4:	push   eax
  4018f5:	call   0x401380
  4018fa:	test   eax,eax
  4018fc:	je     0x40192b
  4018fe:	push   0x4
  401900:	push   0x1000
  401905:	push   ebx
  401906:	mov    eax,DWORD PTR [esp+0xc]
  40190a:	push   eax
  40190b:	call   0x401380
  401910:	test   eax,eax
  401912:	je     0x40192b
  401914:	mov    eax,edi
  401916:	sub    eax,0x10
  401919:	mov    DWORD PTR [eax+0x8],esi
  40191c:	mov    edx,eax
  40191e:	add    ebx,DWORD PTR [edx+0xc]
  401921:	or     ebx,0x8
  401924:	mov    DWORD PTR [edx+0xc],ebx
  401927:	mov    ebx,edi
  401929:	jmp    0x4019a2
  40192b:	mov    eax,ebp
  40192d:	call   0x4019ac
  401932:	mov    ebx,eax
  401934:	test   ebx,ebx
  401936:	je     0x4019a2
  401938:	cmp    ebp,0x40a2c
  40193e:	jbe    0x401948
  401940:	mov    eax,ebx
  401942:	sub    eax,0x10
  401945:	mov    DWORD PTR [eax+0x8],esi
  401948:	mov    eax,edi
  40194a:	sub    eax,0x10
  40194d:	mov    eax,DWORD PTR [eax+0x8]
  401950:	mov    edx,ebx
  401952:	mov    ecx,edi
  401954:	xchg   ecx,eax
  401955:	call   0x401540
  40195a:	mov    eax,edi
  40195c:	call   0x401d30
  401961:	jmp    0x4019a2
  401963:	shr    ebx,1
  401965:	cmp    esi,ebx
  401967:	jb     0x401973
  401969:	mov    ebx,edi
  40196b:	sub    edi,0x10
  40196e:	mov    DWORD PTR [edi+0x8],esi
  401971:	jmp    0x4019a2
  401973:	mov    eax,esi
  401975:	call   0x4019ac
  40197a:	mov    ebx,eax
  40197c:	test   ebx,ebx
  40197e:	je     0x4019a2
  401980:	cmp    esi,0x40a2c
  401986:	jbe    0x401990
  401988:	mov    eax,edi
  40198a:	sub    eax,0x10
  40198d:	mov    DWORD PTR [eax+0x8],esi
  401990:	mov    edx,ebx
  401992:	mov    eax,edi
  401994:	mov    ecx,esi
  401996:	call   0x401570
  40199b:	mov    eax,edi
  40199d:	call   0x401d30
  4019a2:	mov    eax,ebx
  4019a4:	add    esp,0x20
  4019a7:	pop    ebp
  4019a8:	pop    edi
  4019a9:	pop    esi
  4019aa:	pop    ebx
  4019ab:	ret    
  4019ac:	lea    edx,[eax+0x3]
  4019af:	shr    edx,0x3
  4019b2:	cmp    eax,0xa2c
  4019b7:	push   ebx
  4019b8:	mov    cl,BYTE PTR ds:0x46e045
  4019be:	ja     0x401c0c
  4019c4:	test   cl,cl
  4019c6:	movzx  eax,BYTE PTR [edx+0x46e5b8]
  4019cd:	lea    ebx,[eax*8+0x46104c]
  4019d4:	jne    0x401a2c
  4019d6:	mov    edx,DWORD PTR [ebx+0x4]
  4019d9:	mov    eax,DWORD PTR [edx+0x8]
  4019dc:	mov    ecx,0xfffffff8
  4019e1:	cmp    edx,ebx
  4019e3:	je     0x4019fc
  4019e5:	add    DWORD PTR [edx+0xc],0x1
  4019e9:	and    ecx,DWORD PTR [eax-0x4]
  4019ec:	mov    DWORD PTR [edx+0x8],ecx
  4019ef:	mov    DWORD PTR [eax-0x4],edx
  4019f2:	je     0x401a1c
  4019f4:	mov    BYTE PTR [ebx],0x0
  4019f7:	pop    ebx
  4019f8:	ret    
  4019f9:	nop
  4019fa:	nop
  4019fb:	nop
  4019fc:	mov    edx,DWORD PTR [ebx+0x10]
  4019ff:	movzx  ecx,WORD PTR [ebx+0x2]
  401a03:	add    ecx,eax
  401a05:	cmp    eax,DWORD PTR [ebx+0xc]
  401a08:	ja     0x401a80
  401a0a:	add    DWORD PTR [edx+0xc],0x1
  401a0e:	mov    DWORD PTR [ebx+0x8],ecx
  401a11:	mov    BYTE PTR [ebx],0x0
  401a14:	mov    DWORD PTR [eax-0x4],edx
  401a17:	pop    ebx
  401a18:	ret    
  401a19:	nop
  401a1a:	nop
  401a1b:	nop
  401a1c:	mov    ecx,DWORD PTR [edx+0x4]
  401a1f:	mov    DWORD PTR [ecx+0x14],ebx
  401a22:	mov    DWORD PTR [ebx+0x4],ecx
  401a25:	mov    BYTE PTR [ebx],0x0
  401a28:	pop    ebx
  401a29:	ret    
  401a2a:	nop
  401a2b:	nop
  401a2c:	mov    eax,0x100
  401a31:	lock cmpxchg BYTE PTR [ebx],ah
  401a35:	je     0x4019d6
  401a37:	add    ebx,0x20
  401a3a:	mov    eax,0x100
  401a3f:	lock cmpxchg BYTE PTR [ebx],ah
  401a43:	je     0x4019d6
  401a45:	add    ebx,0x20
  401a48:	mov    eax,0x100
  401a4d:	lock cmpxchg BYTE PTR [ebx],ah
  401a51:	je     0x4019d6
  401a53:	sub    ebx,0x40
  401a56:	pause  
  401a58:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401a5f:	jne    0x401a2c
  401a61:	push   0x0
  401a63:	call   0x401390
  401a68:	mov    eax,0x100
  401a6d:	lock cmpxchg BYTE PTR [ebx],ah
  401a71:	je     0x4019d6
  401a77:	push   0xa
  401a79:	call   0x401390
  401a7e:	jmp    0x401a2c
  401a80:	push   esi
  401a81:	push   edi
  401a82:	cmp    BYTE PTR ds:0x46e045,0x0
  401a89:	je     0x401ac4
  401a8b:	mov    eax,0x100
  401a90:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401a98:	je     0x401ac4
  401a9a:	pause  
  401a9c:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401aa3:	jne    0x401a8b
  401aa5:	push   0x0
  401aa7:	call   0x401390
  401aac:	mov    eax,0x100
  401ab1:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401ab9:	je     0x401ac4
  401abb:	push   0xa
  401abd:	call   0x401390
  401ac2:	jmp    0x401a8b
  401ac4:	movsx  esi,BYTE PTR [ebx+0x1]
  401ac8:	and    esi,DWORD PTR ds:0x46e71c
  401ace:	je     0x401b40
  401ad0:	bsf    eax,esi
  401ad3:	lea    esi,[eax*8+0x0]
  401ada:	mov    ecx,DWORD PTR [eax*4+0x46e720]
  401ae1:	bsf    ecx,ecx
  401ae4:	lea    ecx,[ecx+esi*4]
  401ae7:	lea    edi,[ecx*8+0x46e7a0]
  401aee:	mov    esi,DWORD PTR [edi+0x4]
  401af1:	mov    edx,DWORD PTR [esi+0x4]
  401af4:	mov    DWORD PTR [edi+0x4],edx
  401af7:	mov    DWORD PTR [edx],edi
  401af9:	cmp    edi,edx
  401afb:	jne    0x401b14
  401afd:	mov    edx,0xfffffffe
  401b02:	rol    edx,cl
  401b04:	and    DWORD PTR [eax*4+0x46e720],edx
  401b0b:	jne    0x401b14
  401b0d:	btr    DWORD PTR ds:0x46e71c,eax
  401b14:	mov    edi,0xfffffff0
  401b19:	and    edi,DWORD PTR [esi-0x4]
  401b1c:	cmp    edi,0x10a60
  401b22:	jb     0x401b90
  401b24:	mov    edx,edi
  401b26:	movzx  edi,WORD PTR [ebx+0x1a]
  401b2a:	sub    edx,edi
  401b2c:	lea    eax,[edi+esi*1]
  401b2f:	lea    ecx,[edx+0x3]
  401b32:	mov    DWORD PTR [eax-0x4],ecx
  401b35:	mov    DWORD PTR [edx+eax*1-0x8],edx
  401b39:	call   0x4015cc
  401b3e:	jmp    0x401b95
  401b40:	movzx  ecx,WORD PTR [ebx+0x18]
  401b44:	mov    edi,DWORD PTR ds:0x46e718
  401b4a:	cmp    edi,ecx
  401b4c:	jb     0x401b74
  401b4e:	mov    esi,DWORD PTR ds:0x46e714
  401b54:	movzx  ecx,WORD PTR [ebx+0x1a]
  401b58:	lea    edx,[ecx+0xb30]
  401b5e:	cmp    edi,edx
  401b60:	jb     0x401b64
  401b62:	mov    edi,ecx
  401b64:	sub    esi,edi
  401b66:	sub    DWORD PTR ds:0x46e718,edi
  401b6c:	mov    DWORD PTR ds:0x46e714,esi
  401b72:	jmp    0x401b95
  401b74:	movzx  eax,WORD PTR [ebx+0x1a]
  401b78:	mov    edi,eax
  401b7a:	call   0x401698
  401b7f:	mov    esi,eax
  401b81:	test   eax,eax
  401b83:	jne    0x401b95
  401b85:	mov    ds:0x46e710,al
  401b8a:	mov    BYTE PTR [ebx],al
  401b8c:	pop    edi
  401b8d:	pop    esi
  401b8e:	pop    ebx
  401b8f:	ret    
  401b90:	and    BYTE PTR [edi+esi*1-0x4],0xf7
  401b95:	lea    ecx,[edi+0x6]
  401b98:	mov    DWORD PTR [esi-0x4],ecx
  401b9b:	xor    eax,eax
  401b9d:	mov    ds:0x46e710,al
  401ba2:	mov    DWORD PTR [esi],ebx
  401ba4:	mov    DWORD PTR [esi+0x8],eax
  401ba7:	mov    DWORD PTR [esi+0xc],0x1
  401bae:	mov    DWORD PTR [ebx+0x10],esi
  401bb1:	lea    eax,[esi+0x20]
  401bb4:	movzx  ecx,WORD PTR [ebx+0x2]
  401bb8:	lea    edx,[ecx+eax*1]
  401bbb:	mov    DWORD PTR [ebx+0x8],edx
  401bbe:	add    edi,esi
  401bc0:	sub    edi,ecx
  401bc2:	mov    DWORD PTR [ebx+0xc],edi
  401bc5:	mov    BYTE PTR [ebx],0x0
  401bc8:	mov    DWORD PTR [eax-0x4],esi
  401bcb:	pop    edi
  401bcc:	pop    esi
  401bcd:	pop    ebx
  401bce:	ret    
  401bcf:	nop
  401bd0:	mov    eax,0x100
  401bd5:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401bdd:	je     0x401c2a
  401bdf:	pause  
  401be1:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401be8:	jne    0x401bd0
  401bea:	push   0x0
  401bec:	call   0x401390
  401bf1:	mov    eax,0x100
  401bf6:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401bfe:	je     0x401c2a
  401c00:	push   0xa
  401c02:	call   0x401390
  401c07:	jmp    0x401bd0
  401c09:	nop
  401c0a:	nop
  401c0b:	nop
  401c0c:	cmp    eax,0x40a2c
  401c11:	ja     0x401d24
  401c17:	lea    ebx,[eax+0xd3]
  401c1d:	and    ebx,0xffffff00
  401c23:	add    ebx,0x30
  401c26:	test   cl,cl
  401c28:	jne    0x401bd0
  401c2a:	lea    edx,[ebx-0xb30]
  401c30:	mov    ecx,edx
  401c32:	shr    edx,0xd
  401c35:	shr    ecx,0x8
  401c38:	mov    eax,0xffffffff
  401c3d:	shl    eax,cl
  401c3f:	and    eax,DWORD PTR [edx*4+0x46e720]
  401c46:	je     0x401c54
  401c48:	and    ecx,0xffffffe0
  401c4b:	bsf    eax,eax
  401c4e:	or     ecx,eax
  401c50:	jmp    0x401cb0
  401c52:	nop
  401c53:	nop
  401c54:	mov    eax,0xfffffffe
  401c59:	mov    ecx,edx
  401c5b:	shl    eax,cl
  401c5d:	and    eax,DWORD PTR ds:0x46e71c
  401c63:	je     0x401c7c
  401c65:	bsf    edx,eax
  401c68:	mov    eax,DWORD PTR [edx*4+0x46e720]
  401c6f:	bsf    ecx,eax
  401c72:	mov    eax,edx
  401c74:	shl    eax,0x5
  401c77:	or     ecx,eax
  401c79:	jmp    0x401cb0
  401c7b:	nop
  401c7c:	mov    ecx,DWORD PTR ds:0x46e718
  401c82:	sub    ecx,ebx
  401c84:	jb     0x401ca0
  401c86:	mov    eax,ds:0x46e714
  401c8b:	sub    eax,ebx
  401c8d:	mov    ds:0x46e714,eax
  401c92:	mov    DWORD PTR ds:0x46e718,ecx
  401c98:	or     ebx,0x2
  401c9b:	mov    DWORD PTR [eax-0x4],ebx
  401c9e:	jmp    0x401ca7
  401ca0:	mov    eax,ebx
  401ca2:	call   0x401698
  401ca7:	mov    BYTE PTR ds:0x46e710,0x0
  401cae:	pop    ebx
  401caf:	ret    
  401cb0:	push   esi
  401cb1:	push   edi
  401cb2:	lea    edi,[ecx*8+0x46e7a0]
  401cb9:	mov    esi,DWORD PTR [edi+0x4]
  401cbc:	mov    eax,DWORD PTR [esi+0x4]
  401cbf:	mov    DWORD PTR [edi+0x4],eax
  401cc2:	mov    DWORD PTR [eax],edi
  401cc4:	cmp    edi,eax
  401cc6:	jne    0x401cdf
  401cc8:	mov    eax,0xfffffffe
  401ccd:	rol    eax,cl
  401ccf:	and    DWORD PTR [edx*4+0x46e720],eax
  401cd6:	jne    0x401cdf
  401cd8:	btr    DWORD PTR ds:0x46e71c,edx
  401cdf:	mov    edi,0xfffffff0
  401ce4:	and    edi,DWORD PTR [esi-0x4]
  401ce7:	mov    edx,edi
  401ce9:	sub    edx,ebx
  401ceb:	je     0x401d0c
  401ced:	lea    eax,[ebx+esi*1]
  401cf0:	lea    ecx,[edx+0x3]
  401cf3:	mov    DWORD PTR [eax-0x4],ecx
  401cf6:	mov    DWORD PTR [edx+eax*1-0x8],edx
  401cfa:	cmp    edx,0xb30
  401d00:	jb     0x401d11
  401d02:	call   0x4015cc
  401d07:	jmp    0x401d11
  401d09:	nop
  401d0a:	nop
  401d0b:	nop
  401d0c:	and    BYTE PTR [edi+esi*1-0x4],0xf7
  401d11:	lea    ecx,[ebx+0x2]
  401d14:	mov    DWORD PTR [esi-0x4],ecx
  401d17:	mov    BYTE PTR ds:0x46e710,0x0
  401d1e:	mov    eax,esi
  401d20:	pop    edi
  401d21:	pop    esi
  401d22:	pop    ebx
  401d23:	ret    
  401d24:	pop    ebx
  401d25:	test   eax,eax
  401d27:	jns    0x401758
  401d2d:	xor    eax,eax
  401d2f:	ret    
  401d30:	mov    edx,DWORD PTR [eax-0x4]
  401d33:	test   dl,0x7
  401d36:	mov    ecx,eax
  401d38:	push   ebx
  401d39:	mov    bl,BYTE PTR ds:0x46e045
  401d3f:	jne    0x401e28
  401d45:	test   bl,bl
  401d47:	mov    ebx,DWORD PTR [edx]
  401d49:	jne    0x401dac
  401d4b:	sub    DWORD PTR [edx+0xc],0x1
  401d4f:	mov    eax,DWORD PTR [edx+0x8]
  401d52:	je     0x401d80
  401d54:	test   eax,eax
  401d56:	mov    DWORD PTR [edx+0x8],ecx
  401d59:	lea    eax,[eax+0x1]
  401d5c:	mov    DWORD PTR [ecx-0x4],eax
  401d5f:	je     0x401d68
  401d61:	xor    eax,eax
  401d63:	mov    BYTE PTR [ebx],al
  401d65:	pop    ebx
  401d66:	ret    
  401d67:	nop
  401d68:	mov    ecx,DWORD PTR [ebx+0x4]
  401d6b:	mov    DWORD PTR [edx+0x14],ebx
  401d6e:	mov    DWORD PTR [edx+0x4],ecx
  401d71:	mov    DWORD PTR [ecx+0x14],edx
  401d74:	mov    DWORD PTR [ebx+0x4],edx
  401d77:	mov    BYTE PTR [ebx],0x0
  401d7a:	xor    eax,eax
  401d7c:	pop    ebx
  401d7d:	ret    
  401d7e:	nop
  401d7f:	nop
  401d80:	test   eax,eax
  401d82:	je     0x401d97
  401d84:	mov    eax,DWORD PTR [edx+0x14]
  401d87:	mov    ecx,DWORD PTR [edx+0x4]
  401d8a:	mov    DWORD PTR [eax+0x4],ecx
  401d8d:	mov    DWORD PTR [ecx+0x14],eax
  401d90:	xor    eax,eax
  401d92:	cmp    DWORD PTR [ebx+0x10],edx
  401d95:	jne    0x401d9a
  401d97:	mov    DWORD PTR [ebx+0xc],eax
  401d9a:	mov    BYTE PTR [ebx],al
  401d9c:	mov    eax,edx
  401d9e:	mov    edx,DWORD PTR [edx-0x4]
  401da1:	mov    bl,BYTE PTR ds:0x46e045
  401da7:	jmp    0x401e31
  401dac:	mov    eax,0x100
  401db1:	lock cmpxchg BYTE PTR [ebx],ah
  401db5:	je     0x401d4b
  401db7:	pause  
  401db9:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401dc0:	jne    0x401dac
  401dc2:	push   ecx
  401dc3:	push   edx
  401dc4:	push   0x0
  401dc6:	call   0x401390
  401dcb:	pop    edx
  401dcc:	pop    ecx
  401dcd:	mov    eax,0x100
  401dd2:	lock cmpxchg BYTE PTR [ebx],ah
  401dd6:	je     0x401d4b
  401ddc:	push   ecx
  401ddd:	push   edx
  401dde:	push   0xa
  401de0:	call   0x401390
  401de5:	pop    edx
  401de6:	pop    ecx
  401de7:	jmp    0x401dac
  401de9:	nop
  401dea:	nop
  401deb:	nop
  401dec:	mov    eax,0x100
  401df1:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401df9:	je     0x401e3d
  401dfb:	pause  
  401dfd:	cmp    BYTE PTR ds:0x46e5ad,0x0
  401e04:	jne    0x401dec
  401e06:	push   0x0
  401e08:	call   0x401390
  401e0d:	mov    eax,0x100
  401e12:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  401e1a:	je     0x401e3d
  401e1c:	push   0xa
  401e1e:	call   0x401390
  401e23:	jmp    0x401dec
  401e25:	nop
  401e26:	nop
  401e27:	nop
  401e28:	test   dl,0x5
  401e2b:	jne    0x401f18
  401e31:	and    edx,0xfffffff0
  401e34:	test   bl,bl
  401e36:	mov    ebx,edx
  401e38:	push   esi
  401e39:	mov    esi,eax
  401e3b:	jne    0x401dec
  401e3d:	test   DWORD PTR [ebx+esi*1-0x4],0x1
  401e45:	mov    ecx,DWORD PTR [ebx+esi*1-0x4]
  401e49:	jne    0x401e80
  401e4b:	or     ecx,0x8
  401e4e:	mov    DWORD PTR [ebx+esi*1-0x4],ecx
  401e52:	test   BYTE PTR [esi-0x4],0x8
  401e56:	jne    0x401e98
  401e58:	cmp    ebx,0x13ffe0
  401e5e:	je     0x401eb0
  401e60:	lea    eax,[ebx+0x3]
  401e63:	mov    DWORD PTR [esi-0x4],eax
  401e66:	mov    DWORD PTR [ebx+esi*1-0x8],ebx
  401e6a:	mov    eax,esi
  401e6c:	mov    edx,ebx
  401e6e:	call   0x4015cc
  401e73:	mov    BYTE PTR ds:0x46e710,0x0
  401e7a:	xor    eax,eax
  401e7c:	pop    esi
  401e7d:	pop    ebx
  401e7e:	ret    
  401e7f:	nop
  401e80:	lea    eax,[ebx+esi*1]
  401e83:	and    ecx,0xfffffff0
  401e86:	add    ebx,ecx
  401e88:	cmp    ecx,0xb30
  401e8e:	jb     0x401e52
  401e90:	call   0x40158c
  401e95:	jmp    0x401e52
  401e97:	nop
  401e98:	mov    ecx,DWORD PTR [esi-0x8]
  401e9b:	sub    esi,ecx
  401e9d:	add    ebx,ecx
  401e9f:	cmp    ecx,0xb30
  401ea5:	jb     0x401e58
  401ea7:	mov    eax,esi
  401ea9:	call   0x40158c
  401eae:	jmp    0x401e58
  401eb0:	cmp    DWORD PTR ds:0x46e718,0x13ffe0
  401eba:	jne    0x401ee8
  401ebc:	sub    esi,0x10
  401ebf:	mov    eax,DWORD PTR [esi]
  401ec1:	mov    edx,DWORD PTR [esi+0x4]
  401ec4:	mov    DWORD PTR [eax+0x4],edx
  401ec7:	mov    DWORD PTR [edx],eax
  401ec9:	mov    BYTE PTR ds:0x46e710,0x0
  401ed0:	push   0x8000
  401ed5:	push   0x0
  401ed7:	push   esi
  401ed8:	call   0x401388
  401edd:	cmp    eax,0x1
  401ee0:	sbb    eax,eax
  401ee2:	pop    esi
  401ee3:	pop    ebx
  401ee4:	ret    
  401ee5:	nop
  401ee6:	nop
  401ee7:	nop
  401ee8:	lea    ebx,[esi+0x13ffe0]
  401eee:	call   0x40162c
  401ef3:	mov    DWORD PTR [ebx-0x4],0x2
  401efa:	mov    DWORD PTR ds:0x46e718,0x13ffe0
  401f04:	mov    DWORD PTR ds:0x46e714,ebx
  401f0a:	mov    BYTE PTR ds:0x46e710,0x0
  401f11:	xor    eax,eax
  401f13:	pop    esi
  401f14:	pop    ebx
  401f15:	ret    
  401f16:	nop
  401f17:	nop
  401f18:	pop    ebx
  401f19:	test   dl,0x3
  401f1c:	je     0x4017bc
  401f22:	mov    eax,0xffffffff
  401f27:	ret    
  401f28:	mov    ecx,DWORD PTR [eax-0x4]
  401f2b:	test   cl,0x7
  401f2e:	push   ebx
  401f2f:	push   esi
  401f30:	mov    esi,eax
  401f32:	jne    0x401fc0
  401f38:	mov    ebx,DWORD PTR [ecx]
  401f3a:	movzx  ecx,WORD PTR [ebx+0x2]
  401f3e:	sub    ecx,0x4
  401f41:	cmp    ecx,edx
  401f43:	jb     0x401f7c
  401f45:	lea    ebx,[edx*4+0x40]
  401f4c:	cmp    ebx,ecx
  401f4e:	jb     0x401f54
  401f50:	pop    esi
  401f51:	pop    ebx
  401f52:	ret    
  401f53:	nop
  401f54:	mov    ebx,edx
  401f56:	mov    eax,edx
  401f58:	call   0x4019ac
  401f5d:	test   eax,eax
  401f5f:	je     0x401f77
  401f61:	mov    ecx,ebx
  401f63:	mov    edx,eax
  401f65:	mov    ebx,eax
  401f67:	mov    eax,esi
  401f69:	call   0x401570
  401f6e:	mov    eax,esi
  401f70:	call   0x401d30
  401f75:	mov    eax,ebx
  401f77:	pop    esi
  401f78:	pop    ebx
  401f79:	ret    
  401f7a:	nop
  401f7b:	nop
  401f7c:	lea    ecx,[ecx+ecx*1+0x20]
  401f80:	push   edi
  401f81:	mov    edi,edx
  401f83:	xor    eax,eax
  401f85:	sub    ecx,edx
  401f87:	adc    eax,0xffffffff
  401f8a:	and    eax,ecx
  401f8c:	add    eax,edx
  401f8e:	call   0x4019ac
  401f93:	test   eax,eax
  401f95:	je     0x401fbb
  401f97:	cmp    edi,0x40a2c
  401f9d:	jbe    0x401fa2
  401f9f:	mov    DWORD PTR [eax-0x8],edi
  401fa2:	movzx  ecx,WORD PTR [ebx+0x2]
  401fa6:	sub    ecx,0x4
  401fa9:	mov    edx,eax
  401fab:	mov    edi,eax
  401fad:	mov    eax,esi
  401faf:	call   DWORD PTR [ebx+0x1c]
  401fb2:	mov    eax,esi
  401fb4:	call   0x401d30
  401fb9:	mov    eax,edi
  401fbb:	pop    edi
  401fbc:	pop    esi
  401fbd:	pop    ebx
  401fbe:	ret    
  401fbf:	nop
  401fc0:	test   cl,0x5
  401fc3:	jne    0x402230
  401fc9:	mov    ebx,ecx
  401fcb:	and    ecx,0xfffffff0
  401fce:	push   edi
  401fcf:	lea    edi,[ecx+eax*1]
  401fd2:	sub    ecx,0x4
  401fd5:	and    ebx,0xf
  401fd8:	cmp    edx,ecx
  401fda:	push   ebp
  401fdb:	ja     0x4020f0
  401fe1:	lea    ebp,[edx+edx*1]
  401fe4:	cmp    ebp,ecx
  401fe6:	jb     0x401ff0
  401fe8:	pop    ebp
  401fe9:	pop    edi
  401fea:	pop    esi
  401feb:	pop    ebx
  401fec:	ret    
  401fed:	nop
  401fee:	nop
  401fef:	nop
  401ff0:	cmp    edx,0xb2c
  401ff6:	jae    0x40200d
  401ff8:	cmp    edx,0x2cc
  401ffe:	jb     0x4020c8
  402004:	mov    edx,0xb2c
  402009:	cmp    ecx,edx
  40200b:	jbe    0x401fe8
  40200d:	lea    ebp,[edx+0xd3]
  402013:	and    ebp,0xffffff00
  402019:	add    ebp,0x30
  40201c:	add    ecx,0x4
  40201f:	sub    ecx,ebp
  402021:	cmp    BYTE PTR ds:0x46e045,0x0
  402028:	je     0x402070
  40202a:	mov    eax,0x100
  40202f:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  402037:	je     0x402068
  402039:	pause  
  40203b:	cmp    BYTE PTR ds:0x46e5ad,0x0
  402042:	jne    0x40202a
  402044:	push   ecx
  402045:	push   0x0
  402047:	call   0x401390
  40204c:	pop    ecx
  40204d:	mov    eax,0x100
  402052:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  40205a:	je     0x402068
  40205c:	push   ecx
  40205d:	push   0xa
  40205f:	call   0x401390
  402064:	pop    ecx
  402065:	jmp    0x40202a
  402067:	nop
  402068:	mov    ebx,0xf
  40206d:	and    ebx,DWORD PTR [esi-0x4]
  402070:	or     ebx,ebp
  402072:	mov    DWORD PTR [esi-0x4],ebx
  402075:	mov    ebx,ecx
  402077:	mov    edx,DWORD PTR [edi-0x4]
  40207a:	test   dl,0x1
  40207d:	jne    0x402088
  40207f:	or     edx,0x8
  402082:	mov    DWORD PTR [edi-0x4],edx
  402085:	jmp    0x40209e
  402087:	nop
  402088:	mov    eax,edi
  40208a:	and    edx,0xfffffff0
  40208d:	add    ebx,edx
  40208f:	add    edi,edx
  402091:	cmp    edx,0xb30
  402097:	jb     0x40209e
  402099:	call   0x40158c
  40209e:	mov    DWORD PTR [edi-0x8],ebx
  4020a1:	lea    eax,[ebx+0x3]
  4020a4:	mov    DWORD PTR [esi+ebp*1-0x4],eax
  4020a8:	cmp    ebx,0xb30
  4020ae:	jb     0x4020ba
  4020b0:	lea    eax,[esi+ebp*1]
  4020b3:	mov    edx,ebx
  4020b5:	call   0x4015cc
  4020ba:	mov    BYTE PTR ds:0x46e710,0x0
  4020c1:	mov    eax,esi
  4020c3:	pop    ebp
  4020c4:	pop    edi
  4020c5:	pop    esi
  4020c6:	pop    ebx
  4020c7:	ret    
  4020c8:	mov    edi,edx
  4020ca:	mov    eax,edx
  4020cc:	call   0x4019ac
  4020d1:	test   eax,eax
  4020d3:	je     0x4020eb
  4020d5:	mov    ebp,eax
  4020d7:	mov    edx,eax
  4020d9:	mov    eax,esi
  4020db:	mov    ecx,edi
  4020dd:	call   0x401570
  4020e2:	mov    eax,esi
  4020e4:	call   0x401d30
  4020e9:	mov    eax,ebp
  4020eb:	pop    ebp
  4020ec:	pop    edi
  4020ed:	pop    esi
  4020ee:	pop    ebx
  4020ef:	ret    
  4020f0:	mov    eax,DWORD PTR [edi-0x4]
  4020f3:	test   al,0x1
  4020f5:	je     0x4021e8
  4020fb:	and    eax,0xfffffff0
  4020fe:	lea    ebp,[ecx+eax*1]
  402101:	cmp    edx,ebp
  402103:	ja     0x4021e8
  402109:	cmp    BYTE PTR ds:0x46e045,0x0
  402110:	je     0x40216d
  402112:	mov    eax,0x100
  402117:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  40211f:	je     0x402154
  402121:	pause  
  402123:	cmp    BYTE PTR ds:0x46e5ad,0x0
  40212a:	jne    0x402112
  40212c:	push   ecx
  40212d:	push   edx
  40212e:	push   0x0
  402130:	call   0x401390
  402135:	pop    edx
  402136:	pop    ecx
  402137:	mov    eax,0x100
  40213c:	lock cmpxchg BYTE PTR ds:0x46e710,ah
  402144:	je     0x402154
  402146:	push   ecx
  402147:	push   edx
  402148:	push   0xa
  40214a:	call   0x401390
  40214f:	pop    edx
  402150:	pop    ecx
  402151:	jmp    0x402112
  402153:	nop
  402154:	mov    ebx,0xf
  402159:	and    ebx,DWORD PTR [esi-0x4]
  40215c:	mov    eax,DWORD PTR [edi-0x4]
  40215f:	test   al,0x1
  402161:	je     0x4021e1
  402163:	and    eax,0xfffffff0
  402166:	lea    ebp,[ecx+eax*1]
  402169:	cmp    edx,ebp
  40216b:	ja     0x4021e1
  40216d:	cmp    eax,0xb30
  402172:	jb     0x40217f
  402174:	mov    eax,edi
  402176:	push   ecx
  402177:	push   edx
  402178:	call   0x40158c
  40217d:	pop    edx
  40217e:	pop    ecx
  40217f:	mov    eax,ecx
  402181:	shr    eax,0x2
  402184:	add    eax,ecx
  402186:	xor    edi,edi
  402188:	sub    eax,edx
  40218a:	adc    edi,0xffffffff
  40218d:	and    eax,edi
  40218f:	lea    eax,[edx+eax*1+0xd3]
  402196:	and    eax,0xffffff00
  40219b:	add    eax,0x30
  40219e:	lea    edx,[ebp+0x4]
  4021a1:	sub    edx,eax
  4021a3:	ja     0x4021b0
  4021a5:	and    DWORD PTR [esi+ebp*1],0xfffffff7
  4021a9:	add    ebp,0x4
  4021ac:	jmp    0x4021cc
  4021ae:	nop
  4021af:	nop
  4021b0:	mov    DWORD PTR [esi+ebp*1-0x4],edx
  4021b4:	lea    edi,[edx+0x3]
  4021b7:	mov    DWORD PTR [eax+esi*1-0x4],edi
  4021bb:	mov    ebp,eax
  4021bd:	cmp    edx,0xb30
  4021c3:	jb     0x4021cc
  4021c5:	add    eax,esi
  4021c7:	call   0x4015cc
  4021cc:	or     ebp,ebx
  4021ce:	mov    DWORD PTR [esi-0x4],ebp
  4021d1:	mov    BYTE PTR ds:0x46e710,0x0
  4021d8:	mov    eax,esi
  4021da:	pop    ebp
  4021db:	pop    edi
  4021dc:	pop    esi
  4021dd:	pop    ebx
  4021de:	ret    
  4021df:	nop
  4021e0:	nop
  4021e1:	mov    BYTE PTR ds:0x46e710,0x0
  4021e8:	mov    eax,ecx
  4021ea:	shr    eax,0x2
  4021ed:	add    eax,ecx
  4021ef:	xor    edi,edi
  4021f1:	sub    eax,edx
  4021f3:	adc    edi,0xffffffff
  4021f6:	and    eax,edi
  4021f8:	add    eax,edx
  4021fa:	mov    ebp,eax
  4021fc:	mov    edi,ecx
  4021fe:	push   edx
  4021ff:	call   0x4019ac
  402204:	pop    edx
  402205:	test   eax,eax
  402207:	je     0x4021da
  402209:	cmp    ebp,0x40a2c
  40220f:	jbe    0x402214
  402211:	mov    DWORD PTR [eax-0x8],edx
  402214:	mov    ebp,eax
  402216:	mov    edx,eax
  402218:	mov    eax,esi
  40221a:	mov    ecx,edi
  40221c:	call   0x401540
  402221:	mov    eax,esi
  402223:	call   0x401d30
  402228:	mov    eax,ebp
  40222a:	pop    ebp
  40222b:	pop    edi
  40222c:	pop    esi
  40222d:	pop    ebx
  40222e:	ret    
  40222f:	nop
  402230:	pop    esi
  402231:	pop    ebx
  402232:	test   cl,0x3
  402235:	je     0x401860
  40223b:	xor    eax,eax
  40223d:	ret    
  40223e:	mov    eax,eax
  402240:	push   ebx
  402241:	lea    ebx,[eax-0x1]
  402244:	and    ebx,0xfffffffc
  402247:	call   0x4019ac
  40224c:	cmp    eax,0x1
  40224f:	sbb    ecx,ecx
  402251:	lea    edx,[ebx+eax*1]
  402254:	or     ebx,ecx
  402256:	cmp    ebx,0x40a2c
  40225c:	jae    0x40226e
  40225e:	neg    ebx
  402260:	fldz   
  402262:	fst    QWORD PTR [ebx+edx*1]
  402265:	add    ebx,0x8
  402268:	js     0x402262
  40226a:	mov    DWORD PTR [edx],ecx
  40226c:	ffree  st(0)
  40226e:	pop    ebx
  40226f:	ret    
  402270:	mov    ecx,eax
  402272:	mov    edx,ecx
  402274:	sub    edx,0x4
  402277:	mov    edx,DWORD PTR [edx]
  402279:	and    edx,0xfffffff0
  40227c:	add    edx,ecx
  40227e:	mov    eax,edx
  402280:	mov    edx,eax
  402282:	sub    edx,0x4
  402285:	mov    edx,DWORD PTR [edx]
  402287:	and    edx,0xfffffff0
  40228a:	test   edx,edx
  40228c:	jne    0x402290
  40228e:	xor    eax,eax
  402290:	ret    
  402291:	lea    eax,[eax+0x0]
  402294:	cmp    DWORD PTR ds:0x46e718,0x0
  40229b:	je     0x4022b7
  40229d:	mov    edx,DWORD PTR ds:0x46e714
  4022a3:	cmp    edx,eax
  4022a5:	jb     0x4022b7
  4022a7:	mov    edx,eax
  4022a9:	add    edx,0x13fff0
  4022af:	cmp    edx,DWORD PTR ds:0x46e714
  4022b5:	jae    0x4022bb
  4022b7:	add    eax,0x10
  4022ba:	ret    
  4022bb:	cmp    DWORD PTR ds:0x46e718,0x13ffe0
  4022c5:	je     0x4022ce
  4022c7:	mov    eax,ds:0x46e714
  4022cc:	jmp    0x4022d0
  4022ce:	xor    eax,eax
  4022d0:	ret    
  4022d1:	lea    eax,[eax+0x0]
  4022d4:	push   ebx
  4022d5:	push   esi
  4022d6:	mov    ebx,eax
  4022d8:	add    ebx,0x20
  4022db:	mov    DWORD PTR [edx],ebx
  4022dd:	mov    edx,DWORD PTR [eax]
  4022df:	cmp    eax,DWORD PTR [edx+0x10]
  4022e2:	jne    0x4022ec
  4022e4:	mov    ebx,DWORD PTR [edx+0x8]
  4022e7:	cmp    ebx,DWORD PTR [edx+0xc]
  4022ea:	jbe    0x402305
  4022ec:	mov    esi,eax
  4022ee:	mov    ebx,esi
  4022f0:	sub    ebx,0x4
  4022f3:	mov    ebx,DWORD PTR [ebx]
  4022f5:	and    ebx,0xfffffff0
  4022f8:	add    ebx,esi
  4022fa:	movzx  eax,WORD PTR [edx+0x2]
  4022fe:	sub    ebx,eax
  402300:	mov    DWORD PTR [ecx],ebx
  402302:	pop    esi
  402303:	pop    ebx
  402304:	ret    
  402305:	mov    eax,DWORD PTR [edx+0x8]
  402308:	dec    eax
  402309:	mov    DWORD PTR [ecx],eax
  40230b:	pop    esi
  40230c:	pop    ebx
  40230d:	ret    
  40230e:	mov    eax,eax
  402310:	push   edi
  402311:	mov    edi,edx
  402313:	add    eax,0x1
  402316:	mov    edx,0x89705f41
  40231b:	mul    edx
  40231d:	shr    eax,0x1e
  402320:	mov    ecx,edx
  402322:	and    edx,0x1fffffff
  402328:	shr    ecx,0x1d
  40232b:	lea    edx,[edx+edx*4]
  40232e:	add    edx,eax
  402330:	mov    eax,ecx
  402332:	or     eax,0x30
  402335:	mov    BYTE PTR [edi],al
  402337:	mov    eax,edx
  402339:	cmp    ecx,0x1
  40233c:	sbb    edi,0xffffffff
  40233f:	shr    eax,0x1c
  402342:	and    edx,0xfffffff
  402348:	or     ecx,eax
  40234a:	or     eax,0x30
  40234d:	mov    BYTE PTR [edi],al
  40234f:	lea    eax,[edx+edx*4]
  402352:	lea    edx,[edx+edx*4]
  402355:	cmp    ecx,0x1
  402358:	sbb    edi,0xffffffff
  40235b:	shr    eax,0x1b
  40235e:	and    edx,0x7ffffff
  402364:	or     ecx,eax
  402366:	or     eax,0x30
  402369:	mov    BYTE PTR [edi],al
  40236b:	lea    eax,[edx+edx*4]
  40236e:	lea    edx,[edx+edx*4]
  402371:	cmp    ecx,0x1
  402374:	sbb    edi,0xffffffff
  402377:	shr    eax,0x1a
  40237a:	and    edx,0x3ffffff
  402380:	or     ecx,eax
  402382:	or     eax,0x30
  402385:	mov    BYTE PTR [edi],al
  402387:	lea    eax,[edx+edx*4]
  40238a:	lea    edx,[edx+edx*4]
  40238d:	cmp    ecx,0x1
  402390:	sbb    edi,0xffffffff
  402393:	shr    eax,0x19
  402396:	and    edx,0x1ffffff
  40239c:	or     ecx,eax
  40239e:	or     eax,0x30
  4023a1:	mov    BYTE PTR [edi],al
  4023a3:	lea    eax,[edx+edx*4]
  4023a6:	lea    edx,[edx+edx*4]
  4023a9:	cmp    ecx,0x1
  4023ac:	sbb    edi,0xffffffff
  4023af:	shr    eax,0x18
  4023b2:	and    edx,0xffffff
  4023b8:	or     ecx,eax
  4023ba:	or     eax,0x30
  4023bd:	mov    BYTE PTR [edi],al
  4023bf:	lea    eax,[edx+edx*4]
  4023c2:	lea    edx,[edx+edx*4]
  4023c5:	cmp    ecx,0x1
  4023c8:	sbb    edi,0xffffffff
  4023cb:	shr    eax,0x17
  4023ce:	and    edx,0x7fffff
  4023d4:	or     ecx,eax
  4023d6:	or     eax,0x30
  4023d9:	mov    BYTE PTR [edi],al
  4023db:	lea    eax,[edx+edx*4]
  4023de:	lea    edx,[edx+edx*4]
  4023e1:	cmp    ecx,0x1
  4023e4:	sbb    edi,0xffffffff
  4023e7:	shr    eax,0x16
  4023ea:	and    edx,0x3fffff
  4023f0:	or     ecx,eax
  4023f2:	or     eax,0x30
  4023f5:	mov    BYTE PTR [edi],al
  4023f7:	lea    eax,[edx+edx*4]
  4023fa:	lea    edx,[edx+edx*4]
  4023fd:	cmp    ecx,0x1
  402400:	sbb    edi,0xffffffff
  402403:	shr    eax,0x15
  402406:	and    edx,0x1fffff
  40240c:	or     ecx,eax
  40240e:	or     eax,0x30
  402411:	mov    BYTE PTR [edi],al
  402413:	lea    eax,[edx+edx*4]
  402416:	cmp    ecx,0x1
  402419:	sbb    edi,0xffffffff
  40241c:	shr    eax,0x14
  40241f:	or     eax,0x30
  402422:	mov    BYTE PTR [edi],al
  402424:	lea    eax,[edi+0x1]
  402427:	pop    edi
  402428:	ret    
  402429:	lea    eax,[eax+0x0]
  40242c:	push   ebx
  40242d:	push   esi
  40242e:	mov    esi,ecx
  402430:	mov    ebx,edx
  402432:	mov    edx,ebx
  402434:	mov    ecx,esi
  402436:	call   0x403090
  40243b:	mov    eax,ebx
  40243d:	add    eax,esi
  40243f:	pop    esi
  402440:	pop    ebx
  402441:	ret    
  402442:	mov    eax,eax
  402444:	push   ebp
  402445:	mov    ebp,esp
  402447:	push   ebx
  402448:	mov    edx,eax
  40244a:	cmp    edx,0xffff
  402450:	jbe    0x4024ba
  402452:	test   dl,0x3
  402455:	jne    0x4024ba
  402457:	mov    edx,DWORD PTR [ebp+0x8]
  40245a:	mov    edx,DWORD PTR [edx-0x1c]
  40245d:	mov    ecx,eax
  40245f:	cmp    edx,ecx
  402461:	ja     0x402473
  402463:	mov    ebx,DWORD PTR [ebp+0x8]
  402466:	mov    ebx,DWORD PTR [ebp+0x8]
  402469:	add    edx,DWORD PTR [ebx-0x10]
  40246c:	add    ecx,0x4
  40246f:	cmp    edx,ecx
  402471:	jae    0x40248a
  402473:	mov    edx,DWORD PTR [ebp+0x8]
  402476:	xor    ecx,ecx
  402478:	mov    DWORD PTR [edx-0x10],ecx
  40247b:	push   0x1c
  40247d:	mov    edx,DWORD PTR [ebp+0x8]
  402480:	add    edx,0xffffffe4
  402483:	push   edx
  402484:	push   eax
  402485:	call   0x401324
  40248a:	mov    eax,DWORD PTR [ebp+0x8]
  40248d:	cmp    DWORD PTR [eax-0x10],0x4
  402491:	jb     0x4024b1
  402493:	mov    eax,DWORD PTR [ebp+0x8]
  402496:	cmp    DWORD PTR [eax-0xc],0x1000
  40249d:	jne    0x4024b1
  40249f:	mov    eax,DWORD PTR [ebp+0x8]
  4024a2:	test   BYTE PTR [eax-0x8],0xf6
  4024a6:	je     0x4024b1
  4024a8:	mov    eax,DWORD PTR [ebp+0x8]
  4024ab:	test   BYTE PTR [eax-0x7],0x1
  4024af:	je     0x4024b5
  4024b1:	xor    eax,eax
  4024b3:	jmp    0x4024bc
  4024b5:	mov    al,0x1
  4024b7:	pop    ebx
  4024b8:	pop    ebp
  4024b9:	ret    
  4024ba:	xor    eax,eax
  4024bc:	pop    ebx
  4024bd:	pop    ebp
  4024be:	ret    
  4024bf:	nop
  4024c0:	push   ebp
  4024c1:	mov    ebp,esp
  4024c3:	push   ebx
  4024c4:	push   esi
  4024c5:	push   edi
  4024c6:	mov    edi,edx
  4024c8:	mov    ebx,eax
  4024ca:	cmp    edi,0x3e8
  4024d0:	jge    0x402537
  4024d2:	mov    eax,DWORD PTR [ebp+0x8]
  4024d5:	push   eax
  4024d6:	mov    eax,ebx
  4024d8:	add    eax,0xffffffb4
  4024db:	call   0x402444
  4024e0:	pop    ecx
  4024e1:	test   al,al
  4024e3:	je     0x402537
  4024e5:	mov    eax,DWORD PTR [ebp+0x8]
  4024e8:	push   eax
  4024e9:	mov    eax,ebx
  4024eb:	add    eax,0xffffffdc
  4024ee:	call   0x402444
  4024f3:	pop    ecx
  4024f4:	test   al,al
  4024f6:	je     0x402537
  4024f8:	mov    eax,ebx
  4024fa:	add    eax,0xffffffdc
  4024fd:	mov    esi,DWORD PTR [eax]
  4024ff:	mov    eax,ebx
  402501:	add    eax,0xffffffb4
  402504:	cmp    ebx,DWORD PTR [eax]
  402506:	jne    0x40252f
  402508:	test   esi,esi
  40250a:	je     0x402533
  40250c:	mov    eax,DWORD PTR [ebp+0x8]
  40250f:	push   eax
  402510:	mov    eax,esi
  402512:	call   0x402444
  402517:	pop    ecx
  402518:	test   al,al
  40251a:	je     0x40252f
  40251c:	mov    eax,DWORD PTR [ebp+0x8]
  40251f:	push   eax
  402520:	lea    edx,[edi+0x1]
  402523:	mov    eax,DWORD PTR [esi]
  402525:	call   0x4024c0
  40252a:	pop    ecx
  40252b:	test   al,al
  40252d:	jne    0x402533
  40252f:	xor    eax,eax
  402531:	jmp    0x402539
  402533:	mov    al,0x1
  402535:	jmp    0x402539
  402537:	xor    eax,eax
  402539:	pop    edi
  40253a:	pop    esi
  40253b:	pop    ebx
  40253c:	pop    ebp
  40253d:	ret    
  40253e:	mov    eax,eax
  402540:	push   ebp
  402541:	mov    ebp,esp
  402543:	add    esp,0xffffffe4
  402546:	push   ebx
  402547:	mov    ebx,DWORD PTR [eax]
  402549:	xor    eax,eax
  40254b:	mov    DWORD PTR [ebp-0x10],eax
  40254e:	push   ebp
  40254f:	xor    edx,edx
  402551:	mov    eax,ebx
  402553:	call   0x4024c0
  402558:	pop    ecx
  402559:	test   al,al
  40255b:	jne    0x40255f
  40255d:	xor    ebx,ebx
  40255f:	mov    eax,ebx
  402561:	pop    ebx
  402562:	mov    esp,ebp
  402564:	pop    ebp
  402565:	ret    
  402566:	mov    eax,eax
  402568:	cmp    BYTE PTR ds:0x46e045,0x0
  40256f:	je     0x4025ae
  402571:	jmp    0x40259c
  402573:	cmp    BYTE PTR ds:0x46e5ad,0x0
  40257a:	jne    0x40259c
  40257c:	push   0x0
  40257e:	call   0x401390
  402583:	mov    ecx,0x4707b8
  402588:	mov    dl,0x1
  40258a:	xor    eax,eax
  40258c:	call   0x401400
  402591:	test   al,al
  402593:	je     0x4025ae
  402595:	push   0xa
  402597:	call   0x401390
  40259c:	mov    ecx,0x4707b8
  4025a1:	mov    dl,0x1
  4025a3:	xor    eax,eax
  4025a5:	call   0x401400
  4025aa:	test   al,al
  4025ac:	jne    0x402573
  4025ae:	cmp    DWORD PTR ds:0x4707b4,0x0
  4025b5:	jne    0x4025cf
  4025b7:	push   0x4
  4025b9:	push   0x1000
  4025be:	push   0x10000
  4025c3:	push   0x0
  4025c5:	call   0x401380
  4025ca:	mov    ds:0x4707b4,eax
  4025cf:	cmp    DWORD PTR ds:0x4707b4,0x0
  4025d6:	setne  al
  4025d9:	ret    
  4025da:	mov    eax,eax
  4025dc:	push   ebx
  4025dd:	mov    ebx,eax
  4025df:	call   0x402568
  4025e4:	test   al,al
  4025e6:	je     0x402611
  4025e8:	mov    eax,ds:0x4707b4
  4025ed:	cmp    DWORD PTR [eax],0x3ffe
  4025f3:	jge    0x402611
  4025f5:	mov    eax,ds:0x4707b4
  4025fa:	mov    eax,DWORD PTR [eax]
  4025fc:	mov    edx,DWORD PTR ds:0x4707b4
  402602:	mov    DWORD PTR [edx+eax*4+0x4],ebx
  402606:	mov    eax,ds:0x4707b4
  40260b:	inc    DWORD PTR [eax]
  40260d:	mov    al,0x1
  40260f:	jmp    0x402613
  402611:	xor    eax,eax
  402613:	mov    BYTE PTR ds:0x4707b8,0x0
  40261a:	pop    ebx
  40261b:	ret    
  40261c:	push   ebx
  40261d:	push   esi
  40261e:	push   edi
  40261f:	mov    esi,eax
  402621:	mov    edi,0x4707b4
  402626:	xor    ebx,ebx
  402628:	cmp    DWORD PTR [edi],0x0
  40262b:	je     0x40266c
  40262d:	call   0x402568
  402632:	test   al,al
  402634:	je     0x40266c
  402636:	mov    eax,DWORD PTR [edi]
  402638:	mov    edx,DWORD PTR [eax]
  40263a:	dec    edx
  40263b:	test   edx,edx
  40263d:	jl     0x402665
  40263f:	inc    edx
  402640:	xor    eax,eax
  402642:	mov    ecx,DWORD PTR [edi]
  402644:	cmp    esi,DWORD PTR [ecx+eax*4+0x4]
  402648:	jne    0x402661
  40264a:	mov    edx,DWORD PTR [edi]
  40264c:	mov    edx,DWORD PTR [edx]
  40264e:	mov    ecx,DWORD PTR [edi]
  402650:	mov    edx,DWORD PTR [ecx+edx*4]
  402653:	mov    ecx,DWORD PTR [edi]
  402655:	mov    DWORD PTR [ecx+eax*4+0x4],edx
  402659:	mov    edx,DWORD PTR [edi]
  40265b:	dec    DWORD PTR [edx]
  40265d:	mov    bl,0x1
  40265f:	jmp    0x402665
  402661:	inc    eax
  402662:	dec    edx
  402663:	jne    0x402642
  402665:	mov    BYTE PTR ds:0x4707b8,0x0
  40266c:	mov    eax,ebx
  40266e:	pop    edi
  40266f:	pop    esi
  402670:	pop    ebx
  402671:	ret    
  402672:	mov    eax,eax
  402674:	push   ebp
  402675:	mov    ebp,esp
  402677:	add    esp,0xffffffe0
  40267a:	push   ebx
  40267b:	push   esi
  40267c:	push   edi
  40267d:	mov    DWORD PTR [ebp-0x4],eax
  402680:	mov    eax,DWORD PTR [ebp-0x4]
  402683:	mov    eax,DWORD PTR [eax]
  402685:	sub    eax,0x46104c
  40268b:	shr    eax,0x5
  40268e:	shl    eax,0x8
  402691:	mov    edx,DWORD PTR [ebp+0x8]
  402694:	lea    esi,[edx+eax*8-0x1b800]
  40269b:	lea    ecx,[ebp-0x1c]
  40269e:	lea    edx,[ebp-0x18]
  4026a1:	mov    eax,DWORD PTR [ebp-0x4]
  4026a4:	call   0x4022d4
  4026a9:	jmp    0x4027ab
  4026ae:	mov    eax,DWORD PTR [ebp-0x18]
  4026b1:	sub    eax,0x4
  4026b4:	test   BYTE PTR [eax],0x1
  4026b7:	jne    0x40279f
  4026bd:	mov    eax,DWORD PTR [ebp-0x18]
  4026c0:	call   0x40261c
  4026c5:	test   al,al
  4026c7:	jne    0x40279f
  4026cd:	mov    eax,DWORD PTR [ebp+0x8]
  4026d0:	mov    BYTE PTR [eax-0x1b801],0x0
  4026d7:	xor    ebx,ebx
  4026d9:	mov    eax,DWORD PTR [ebp-0x18]
  4026dc:	call   0x402540
  4026e1:	mov    edi,eax
  4026e3:	test   edi,edi
  4026e5:	jne    0x402773
  4026eb:	mov    eax,DWORD PTR [ebp-0x18]
  4026ee:	cmp    DWORD PTR [eax],0x100
  4026f4:	jae    0x40279b
  4026fa:	mov    eax,DWORD PTR [ebp-0x18]
  4026fd:	add    eax,0x4
  402700:	mov    eax,DWORD PTR [eax]
  402702:	mov    DWORD PTR [ebp-0xc],eax
  402705:	cmp    DWORD PTR [ebp-0xc],0x0
  402709:	jle    0x40279b
  40270f:	mov    eax,DWORD PTR [ebp-0x4]
  402712:	mov    eax,DWORD PTR [eax]
  402714:	movzx  eax,WORD PTR [eax+0x2]
  402718:	sub    eax,0xd
  40271b:	cmp    eax,DWORD PTR [ebp-0xc]
  40271e:	jl     0x40279b
  402720:	mov    eax,DWORD PTR [ebp-0x18]
  402723:	add    eax,0x8
  402726:	mov    DWORD PTR [ebp-0x10],eax
  402729:	mov    BYTE PTR [ebp-0x11],0x1
  40272d:	mov    eax,DWORD PTR [ebp-0xc]
  402730:	test   eax,eax
  402732:	jle    0x40275e
  402734:	mov    DWORD PTR [ebp-0x20],eax
  402737:	cmp    BYTE PTR [ebp-0x11],0x0
  40273b:	je     0x40274d
  40273d:	mov    eax,DWORD PTR [ebp-0x10]
  402740:	cmp    BYTE PTR [eax],0x20
  402743:	jb     0x40274d
  402745:	mov    eax,DWORD PTR [ebp-0x10]
  402748:	cmp    BYTE PTR [eax],0x80
  40274b:	jb     0x402751
  40274d:	xor    eax,eax
  40274f:	jmp    0x402753
  402751:	mov    al,0x1
  402753:	mov    BYTE PTR [ebp-0x11],al
  402756:	inc    DWORD PTR [ebp-0x10]
  402759:	dec    DWORD PTR [ebp-0x20]
  40275c:	jne    0x402737
  40275e:	cmp    BYTE PTR [ebp-0x11],0x0
  402762:	je     0x40279b
  402764:	mov    eax,DWORD PTR [ebp-0x10]
  402767:	cmp    BYTE PTR [eax],0x0
  40276a:	jne    0x40279b
  40276c:	mov    ebx,0x1
  402771:	jmp    0x40279b
  402773:	mov    ebx,0x2
  402778:	cmp    edi,DWORD PTR [esi+ebx*8]
  40277b:	je     0x40278c
  40277d:	cmp    DWORD PTR [esi+ebx*8],0x0
  402781:	je     0x40278c
  402783:	inc    ebx
  402784:	cmp    ebx,0xff
  40278a:	jle    0x402778
  40278c:	cmp    ebx,0xff
  402792:	jg     0x402799
  402794:	mov    DWORD PTR [esi+ebx*8],edi
  402797:	jmp    0x40279b
  402799:	xor    ebx,ebx
  40279b:	inc    DWORD PTR [esi+ebx*8+0x4]
  40279f:	mov    eax,DWORD PTR [ebp-0x4]
  4027a2:	mov    eax,DWORD PTR [eax]
  4027a4:	movzx  eax,WORD PTR [eax+0x2]
  4027a8:	add    DWORD PTR [ebp-0x18],eax
  4027ab:	mov    eax,DWORD PTR [ebp-0x18]
  4027ae:	cmp    eax,DWORD PTR [ebp-0x1c]
  4027b1:	jbe    0x4026ae
  4027b7:	pop    edi
  4027b8:	pop    esi
  4027b9:	pop    ebx
  4027ba:	mov    esp,ebp
  4027bc:	pop    ebp
  4027bd:	ret    
  4027be:	mov    eax,eax
  4027c0:	push   ebp
  4027c1:	mov    ebp,esp
  4027c3:	push   eax
  4027c4:	mov    eax,0x27
  4027c9:	add    esp,0xfffff004
  4027cf:	push   eax
  4027d0:	dec    eax
  4027d1:	jne    0x4027c9
  4027d3:	mov    eax,DWORD PTR [ebp-0x4]
  4027d6:	add    esp,0xfffff6dc
  4027dc:	push   ebx
  4027dd:	push   esi
  4027de:	push   edi
  4027df:	lea    eax,[ebp-0x1b800]
  4027e5:	xor    ecx,ecx
  4027e7:	mov    edx,0x1b800
  4027ec:	call   0x4037c8
  4027f1:	lea    eax,[ebp-0x1f828]
  4027f7:	xor    ecx,ecx
  4027f9:	mov    edx,0x4000
  4027fe:	call   0x4037c8
  402803:	xor    eax,eax
  402805:	mov    DWORD PTR [ebp-0x1b808],eax
  40280b:	mov    BYTE PTR [ebp-0x1b801],0x1
  402812:	mov    edi,DWORD PTR ds:0x46e704
  402818:	jmp    0x40289f
  40281d:	mov    eax,edi
  40281f:	call   0x402294
  402824:	mov    ebx,eax
  402826:	test   ebx,ebx
  402828:	je     0x40289c
  40282a:	mov    eax,ebx
  40282c:	sub    eax,0x4
  40282f:	mov    esi,DWORD PTR [eax]
  402831:	test   esi,0x1
  402837:	jne    0x40288f
  402839:	test   esi,0x4
  40283f:	je     0x40284c
  402841:	push   ebp
  402842:	mov    eax,ebx
  402844:	call   0x402674
  402849:	pop    ecx
  40284a:	jmp    0x40288f
  40284c:	cmp    DWORD PTR [ebp-0x1b808],0x1000
  402856:	jge    0x40288f
  402858:	and    esi,0xfffffff0
  40285b:	sub    esi,0x4
  40285e:	mov    DWORD PTR [ebp-0x1b814],esi
  402864:	mov    eax,ebx
  402866:	call   0x40261c
  40286b:	test   al,al
  40286d:	jne    0x40288f
  40286f:	mov    BYTE PTR [ebp-0x1b801],0x0
  402876:	mov    eax,DWORD PTR [ebp-0x1b808]
  40287c:	mov    edx,DWORD PTR [ebp-0x1b814]
  402882:	mov    DWORD PTR [ebp+eax*4-0x1f828],edx
  402889:	inc    DWORD PTR [ebp-0x1b808]
  40288f:	mov    eax,ebx
  402891:	call   0x402270
  402896:	mov    ebx,eax
  402898:	test   ebx,ebx
  40289a:	jne    0x40282a
  40289c:	mov    edi,DWORD PTR [edi+0x4]
  40289f:	cmp    edi,0x46e700
  4028a5:	jne    0x40281d
  4028ab:	mov    ebx,DWORD PTR ds:0x4707a8
  4028b1:	jmp    0x4028ea
  4028b3:	mov    eax,ebx
  4028b5:	add    eax,0x10
  4028b8:	call   0x40261c
  4028bd:	test   al,al
  4028bf:	jne    0x4028e7
  4028c1:	mov    BYTE PTR [ebp-0x1b801],0x0
  4028c8:	mov    esi,DWORD PTR [ebx+0xc]
  4028cb:	and    esi,0xfffffff0
  4028ce:	sub    esi,0x4
  4028d1:	sub    esi,0x10
  4028d4:	mov    eax,DWORD PTR [ebp-0x1b808]
  4028da:	mov    DWORD PTR [ebp+eax*4-0x1f828],esi
  4028e1:	inc    DWORD PTR [ebp-0x1b808]
  4028e7:	mov    ebx,DWORD PTR [ebx+0x4]
  4028ea:	cmp    ebx,0x4707a4
  4028f0:	je     0x4028fe
  4028f2:	cmp    DWORD PTR [ebp-0x1b808],0x1000
  4028fc:	jl     0x4028b3
  4028fe:	cmp    BYTE PTR [ebp-0x1b801],0x0
  402905:	jne    0x402b63
  40290b:	mov    BYTE PTR [ebp-0x1b809],0x0
  402912:	xor    eax,eax
  402914:	mov    DWORD PTR [ebp-0x1b818],eax
  40291a:	lea    edx,[ebp-0x27828]
  402920:	mov    eax,0x402b6c
  402925:	mov    ecx,0x28
  40292a:	call   0x40242c
  40292f:	mov    ebx,eax
  402931:	mov    DWORD PTR [ebp-0x1b810],0x37
  40293b:	mov    DWORD PTR [ebp-0x1b824],0x46104e
  402945:	lea    eax,[ebp-0x1b004]
  40294b:	mov    DWORD PTR [ebp-0x1b828],eax
  402951:	mov    eax,DWORD PTR [ebp-0x1b824]
  402957:	movzx  eax,WORD PTR [eax]
  40295a:	sub    eax,0x4
  40295d:	mov    DWORD PTR [ebp-0x1b81c],eax
  402963:	mov    BYTE PTR [ebp-0x1b80a],0x0
  40296a:	mov    edi,0xff
  40296f:	mov    eax,DWORD PTR [ebp-0x1b828]
  402975:	mov    esi,eax
  402977:	lea    eax,[ebp-0x20029]
  40297d:	cmp    ebx,eax
  40297f:	ja     0x402a8e
  402985:	cmp    DWORD PTR [esi],0x0
  402988:	jbe    0x402a81
  40298e:	cmp    BYTE PTR [ebp-0x1b809],0x0
  402995:	jne    0x4029b1
  402997:	mov    eax,0x402b98
  40299c:	mov    ecx,0x27
  4029a1:	mov    edx,ebx
  4029a3:	call   0x40242c
  4029a8:	mov    ebx,eax
  4029aa:	mov    BYTE PTR [ebp-0x1b809],0x1
  4029b1:	cmp    BYTE PTR [ebp-0x1b80a],0x0
  4029b8:	jne    0x402a09
  4029ba:	mov    BYTE PTR [ebx],0xd
  4029bd:	inc    ebx
  4029be:	mov    BYTE PTR [ebx],0xa
  4029c1:	inc    ebx
  4029c2:	mov    eax,DWORD PTR [ebp-0x1b818]
  4029c8:	inc    eax
  4029c9:	mov    edx,ebx
  4029cb:	call   0x402310
  4029d0:	mov    ebx,eax
  4029d2:	mov    BYTE PTR [ebx],0x20
  4029d5:	inc    ebx
  4029d6:	mov    BYTE PTR [ebx],0x2d
  4029d9:	inc    ebx
  4029da:	mov    BYTE PTR [ebx],0x20
  4029dd:	inc    ebx
  4029de:	mov    edx,ebx
  4029e0:	mov    eax,DWORD PTR [ebp-0x1b81c]
  4029e6:	call   0x402310
  4029eb:	mov    ebx,eax
  4029ed:	mov    eax,0x402bc0
  4029f2:	mov    ecx,0x8
  4029f7:	mov    edx,ebx
  4029f9:	call   0x40242c
  4029fe:	mov    ebx,eax
  402a00:	mov    BYTE PTR [ebp-0x1b80a],0x1
  402a07:	jmp    0x402a11
  402a09:	mov    BYTE PTR [ebx],0x2c
  402a0c:	inc    ebx
  402a0d:	mov    BYTE PTR [ebx],0x20
  402a10:	inc    ebx
  402a11:	mov    eax,edi
  402a13:	sub    eax,0x1
  402a16:	jb     0x402a1c
  402a18:	je     0x402a31
  402a1a:	jmp    0x402a46
  402a1c:	mov    eax,0x402bcc
  402a21:	mov    ecx,0x7
  402a26:	mov    edx,ebx
  402a28:	call   0x40242c
  402a2d:	mov    ebx,eax
  402a2f:	jmp    0x402a6a
  402a31:	mov    eax,0x402bd4
  402a36:	mov    ecx,0x6
  402a3b:	mov    edx,ebx
  402a3d:	call   0x40242c
  402a42:	mov    ebx,eax
  402a44:	jmp    0x402a6a
  402a46:	lea    edx,[ebp-0x27928]
  402a4c:	mov    eax,DWORD PTR [esi-0x4]
  402a4f:	call   0x403f80
  402a54:	movzx  ecx,BYTE PTR [ebp-0x27928]
  402a5b:	lea    eax,[ebp-0x27927]
  402a61:	mov    edx,ebx
  402a63:	call   0x40242c
  402a68:	mov    ebx,eax
  402a6a:	mov    BYTE PTR [ebx],0x20
  402a6d:	inc    ebx
  402a6e:	mov    BYTE PTR [ebx],0x78
  402a71:	inc    ebx
  402a72:	mov    BYTE PTR [ebx],0x20
  402a75:	inc    ebx
  402a76:	mov    eax,DWORD PTR [esi]
  402a78:	mov    edx,ebx
  402a7a:	call   0x402310
  402a7f:	mov    ebx,eax
  402a81:	dec    edi
  402a82:	sub    esi,0x8
  402a85:	cmp    edi,0xffffffff
  402a88:	jne    0x402977
  402a8e:	mov    eax,DWORD PTR [ebp-0x1b81c]
  402a94:	mov    DWORD PTR [ebp-0x1b818],eax
  402a9a:	add    DWORD PTR [ebp-0x1b828],0x800
  402aa4:	add    DWORD PTR [ebp-0x1b824],0x20
  402aab:	dec    DWORD PTR [ebp-0x1b810]
  402ab1:	jne    0x402951
  402ab7:	cmp    DWORD PTR [ebp-0x1b808],0x0
  402abe:	jle    0x402b3a
  402ac0:	cmp    BYTE PTR [ebp-0x1b809],0x0
  402ac7:	je     0x402ad9
  402ac9:	mov    BYTE PTR [ebx],0xd
  402acc:	inc    ebx
  402acd:	mov    BYTE PTR [ebx],0xa
  402ad0:	inc    ebx
  402ad1:	mov    BYTE PTR [ebx],0xd
  402ad4:	inc    ebx
  402ad5:	mov    BYTE PTR [ebx],0xa
  402ad8:	inc    ebx
  402ad9:	mov    eax,0x402bdc
  402ade:	mov    ecx,0x3c
  402ae3:	mov    edx,ebx
  402ae5:	call   0x40242c
  402aea:	mov    ebx,eax
  402aec:	mov    edi,DWORD PTR [ebp-0x1b808]
  402af2:	dec    edi
  402af3:	test   edi,edi
  402af5:	jb     0x402b3a
  402af7:	inc    edi
  402af8:	mov    DWORD PTR [ebp-0x1b820],0x0
  402b02:	lea    esi,[ebp-0x1f828]
  402b08:	cmp    DWORD PTR [ebp-0x1b820],0x0
  402b0f:	je     0x402b19
  402b11:	mov    BYTE PTR [ebx],0x2c
  402b14:	inc    ebx
  402b15:	mov    BYTE PTR [ebx],0x20
  402b18:	inc    ebx
  402b19:	mov    eax,DWORD PTR [esi]
  402b1b:	mov    edx,ebx
  402b1d:	call   0x402310
  402b22:	mov    ebx,eax
  402b24:	lea    eax,[ebp-0x20029]
  402b2a:	cmp    ebx,eax
  402b2c:	ja     0x402b3a
  402b2e:	inc    DWORD PTR [ebp-0x1b820]
  402b34:	add    esi,0x4
  402b37:	dec    edi
  402b38:	jne    0x402b08
  402b3a:	mov    eax,0x402c1c
  402b3f:	mov    ecx,0x3
  402b44:	mov    edx,ebx
  402b46:	call   0x40242c
  402b4b:	push   0x2010
  402b50:	push   0x402c20
  402b55:	lea    eax,[ebp-0x27828]
  402b5b:	push   eax
  402b5c:	push   0x0
  402b5e:	call   0x40127c
  402b63:	pop    edi
  402b64:	pop    esi
  402b65:	pop    ebx
  402b66:	mov    esp,ebp
  402b68:	pop    ebp
  402b69:	ret    
  402b6a:	add    BYTE PTR [eax],al
  402b6c:	inc    ecx
  402b6d:	outs   dx,BYTE PTR ds:[esi]
  402b6e:	and    BYTE PTR [ebp+0x6e],dh
  402b71:	gs js  0x402be4
  402b74:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  402b79:	and    BYTE PTR [ebp+0x65],ch
  402b7c:	ins    DWORD PTR es:[edi],dx
  402b7d:	outs   dx,DWORD PTR ds:[esi]
  402b7e:	jb     0x402bf9
  402b80:	and    BYTE PTR [ebp+eiz*2+0x61],ch
  402b84:	imul   esp,DWORD PTR [eax],0x68
  402b87:	popa   
  402b88:	jae    0x402baa
  402b8a:	outs   dx,DWORD PTR ds:[esi]
  402b8b:	arpl   WORD PTR [ebx+0x75],sp
  402b8e:	jb     0x402c02
  402b90:	gs fs and BYTE PTR cs:[eax],al
  402b95:	add    BYTE PTR [eax],al
  402b97:	add    BYTE PTR [eax+ebp*2+0x65],dl
  402b9b:	and    BYTE PTR [ebp+0x6e],dh
  402b9e:	gs js  0x402c11
  402ba1:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  402ba6:	and    BYTE PTR [ebx+0x6d],dh
  402ba9:	popa   
  402baa:	ins    BYTE PTR es:[edi],dx
  402bab:	ins    BYTE PTR es:[edi],dx
  402bac:	and    BYTE PTR [edx+0x6c],ah
  402baf:	outs   dx,DWORD PTR ds:[esi]
  402bb0:	arpl   WORD PTR [ebx+0x20],bp
  402bb3:	ins    BYTE PTR es:[edi],dx
  402bb4:	gs popa 
  402bb6:	imul   esi,DWORD PTR [ebx+0x20],0x61
  402bba:	jb     0x402c21
  402bbc:	cmp    cl,BYTE PTR ds:0x6220000a
  402bc2:	jns    0x402c38
  402bc4:	gs jae 0x402c01
  402bc7:	and    BYTE PTR [eax],al
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp+0x6e],dl
  402bce:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  402bd2:	outs   dx,BYTE PTR ds:[esi]
  402bd3:	add    BYTE PTR [ebx+0x74],dl
  402bd6:	jb     0x402c41
  402bd8:	outs   dx,BYTE PTR ds:[esi]
  402bd9:	add    BYTE PTR [bx+si],al
  402bdc:	push   esp
  402bdd:	push   0x69732065
  402be2:	jp     0x402c49
  402be4:	jae    0x402c06
  402be6:	outs   dx,DWORD PTR ds:[esi]
  402be7:	data16 and BYTE PTR [ebp+0x6e],dh
  402beb:	gs js  0x402c5e
  402bee:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  402bf3:	and    BYTE PTR [ebp+eiz*2+0x61],ch
  402bf7:	imul   esp,DWORD PTR [ebp+0x64],0x20
  402bfb:	ins    DWORD PTR es:[edi],dx
  402bfc:	gs imul esi,DWORD PTR fs:[ebp+0x6d],0x646e6120
  402c05:	and    BYTE PTR [ecx+eiz*2+0x72],ch
  402c09:	and    BYTE PTR gs:[bp+si+0x6c],ah
  402c0e:	outs   dx,DWORD PTR ds:[esi]
  402c0f:	arpl   WORD PTR [ebx+0x73],bp
  402c12:	and    BYTE PTR [ecx+0x72],ah
  402c15:	cmp    ah,BYTE PTR gs:[eax]
  402c18:	add    BYTE PTR [eax],al
  402c1a:	add    BYTE PTR [eax],al
  402c1c:	or     eax,0x5500000a
  402c21:	outs   dx,BYTE PTR ds:[esi]
  402c22:	gs js  0x402c95
  402c25:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  402c2a:	and    BYTE PTR [ebp+0x65],cl
  402c2d:	ins    DWORD PTR es:[edi],dx
  402c2e:	outs   dx,DWORD PTR ds:[esi]
  402c2f:	jb     0x402caa
  402c31:	and    BYTE PTR [ebp+eiz*2+0x61],cl
  402c35:	imul   eax,DWORD PTR [eax],0x0
  402c38:	push   esi
  402c39:	push   edi
  402c3a:	xor    eax,eax
  402c3c:	xor    esi,esi
  402c3e:	mov    edx,0x46104e
  402c43:	cmp    BYTE PTR ds:0x46e6fe,0x0
  402c4a:	je     0x402c51
  402c4c:	test   BYTE PTR [edx],0xf
  402c4f:	jne    0x402c6e
  402c51:	movzx  edi,WORD PTR [edx]
  402c54:	shr    edi,0x3
  402c57:	mov    ecx,esi
  402c59:	add    ecx,ecx
  402c5b:	add    ecx,ecx
  402c5d:	cmp    edi,eax
  402c5f:	jbe    0x402c6c
  402c61:	mov    BYTE PTR [eax+0x46e5b8],cl
  402c67:	inc    eax
  402c68:	cmp    edi,eax
  402c6a:	ja     0x402c61
  402c6c:	mov    eax,edi
  402c6e:	inc    esi
  402c6f:	add    edx,0x20
  402c72:	cmp    esi,0x37
  402c75:	jne    0x402c43
  402c77:	pop    edi
  402c78:	pop    esi
  402c79:	ret    
  402c7a:	mov    eax,eax
  402c7c:	push   ebx
  402c7d:	push   esi
  402c7e:	push   edi
  402c7f:	mov    esi,0x37
  402c84:	mov    ebx,0x461068
  402c89:	cmp    DWORD PTR [ebx],0x0
  402c8c:	jne    0x402c94
  402c8e:	mov    DWORD PTR [ebx],0x401540
  402c94:	lea    eax,[ebx-0x1c]
  402c97:	mov    DWORD PTR [ebx-0x8],eax
  402c9a:	lea    eax,[ebx-0x1c]
  402c9d:	mov    DWORD PTR [ebx-0x18],eax
  402ca0:	xor    eax,eax
  402ca2:	mov    DWORD PTR [ebx-0x10],eax
  402ca5:	mov    DWORD PTR [ebx-0x14],0x1
  402cac:	movzx  eax,WORD PTR [ebx-0x1a]
  402cb0:	add    eax,eax
  402cb2:	add    eax,eax
  402cb4:	lea    eax,[eax+eax*2]
  402cb7:	add    eax,0xef
  402cbc:	and    eax,0xffffff00
  402cc1:	add    eax,0x30
  402cc4:	cmp    eax,0xb30
  402cc9:	jae    0x402cd0
  402ccb:	mov    eax,0xb30
  402cd0:	add    eax,0x4d0
  402cd5:	shr    eax,0xd
  402cd8:	cmp    eax,0x7
  402cdb:	jbe    0x402ce2
  402cdd:	mov    eax,0x7
  402ce2:	mov    ecx,eax
  402ce4:	mov    dl,0xff
  402ce6:	shl    dl,cl
  402ce8:	mov    BYTE PTR [ebx-0x1b],dl
  402ceb:	shl    eax,0xd
  402cee:	add    ax,0xb30
  402cf2:	mov    WORD PTR [ebx-0x4],ax
  402cf6:	movzx  edi,WORD PTR [ebx-0x1a]
  402cfa:	movzx  eax,di
  402cfd:	mov    ecx,eax
  402cff:	shl    ecx,0x4
  402d02:	lea    ecx,[ecx+ecx*2]
  402d05:	add    ecx,0xef
  402d0b:	and    ecx,0xffffff00
  402d11:	add    ecx,0x30
  402d14:	cmp    ecx,0x7330
  402d1a:	jae    0x402d21
  402d1c:	mov    ecx,0x7330
  402d21:	cmp    ecx,0xff30
  402d27:	jbe    0x402d2e
  402d29:	mov    ecx,0xff30
  402d2e:	mov    eax,ecx
  402d30:	sub    eax,0x20
  402d33:	movzx  edx,di
  402d36:	mov    ecx,edx
  402d38:	xor    edx,edx
  402d3a:	div    ecx
  402d3c:	imul   di
  402d3f:	add    ax,0xef
  402d43:	and    ax,0xff00
  402d47:	add    ax,0x30
  402d4b:	mov    WORD PTR [ebx-0x2],ax
  402d4f:	add    ebx,0x20
  402d52:	dec    esi
  402d53:	jne    0x402c89
  402d59:	call   0x402c38
  402d5e:	mov    DWORD PTR ds:0x46e700,0x46e700
  402d68:	mov    DWORD PTR ds:0x46e704,0x46e700
  402d72:	mov    esi,0x400
  402d77:	mov    edx,0x46e7a0
  402d7c:	mov    eax,edx
  402d7e:	mov    DWORD PTR [eax],eax
  402d80:	mov    DWORD PTR [eax+0x4],eax
  402d83:	add    edx,0x8
  402d86:	dec    esi
  402d87:	jne    0x402d7c
  402d89:	mov    DWORD PTR ds:0x4707a4,0x4707a4
  402d93:	mov    DWORD PTR ds:0x4707a8,0x4707a4
  402d9d:	pop    edi
  402d9e:	pop    esi
  402d9f:	pop    ebx
  402da0:	ret    
  402da1:	lea    eax,[eax+0x0]
  402da4:	push   ebx
  402da5:	push   esi
  402da6:	push   edi
  402da7:	push   ebp
  402da8:	mov    ebx,0x46e700
  402dad:	mov    esi,0x4707a4
  402db2:	mov    edi,DWORD PTR [ebx+0x4]
  402db5:	jmp    0x402dc9
  402db7:	mov    ebp,DWORD PTR [edi+0x4]
  402dba:	push   0x8000
  402dbf:	push   0x0
  402dc1:	push   edi
  402dc2:	call   0x401388
  402dc7:	mov    edi,ebp
  402dc9:	cmp    edi,ebx
  402dcb:	jne    0x402db7
  402dcd:	mov    edx,0x37
  402dd2:	mov    eax,0x46104c
  402dd7:	mov    ecx,eax
  402dd9:	mov    DWORD PTR [eax+0x14],ecx
  402ddc:	mov    ecx,eax
  402dde:	mov    DWORD PTR [eax+0x4],ecx
  402de1:	mov    DWORD PTR [eax+0x8],0x1
  402de8:	xor    ecx,ecx
  402dea:	mov    DWORD PTR [eax+0xc],ecx
  402ded:	add    eax,0x20
  402df0:	dec    edx
  402df1:	jne    0x402dd7
  402df3:	mov    DWORD PTR [ebx],ebx
  402df5:	mov    DWORD PTR [ebx+0x4],ebx
  402df8:	mov    edx,0x400
  402dfd:	mov    ecx,0x46e7a0
  402e02:	mov    eax,ecx
  402e04:	mov    DWORD PTR [eax],eax
  402e06:	mov    DWORD PTR [eax+0x4],eax
  402e09:	add    ecx,0x8
  402e0c:	dec    edx
  402e0d:	jne    0x402e02
  402e0f:	mov    ebx,DWORD PTR [esi+0x4]
  402e12:	jmp    0x402e26
  402e14:	mov    edi,DWORD PTR [ebx+0x4]
  402e17:	push   0x8000
  402e1c:	push   0x0
  402e1e:	push   ebx
  402e1f:	call   0x401388
  402e24:	mov    ebx,edi
  402e26:	cmp    ebx,esi
  402e28:	jne    0x402e14
  402e2a:	mov    DWORD PTR [esi],esi
  402e2c:	mov    DWORD PTR [esi+0x4],esi
  402e2f:	pop    ebp
  402e30:	pop    edi
  402e31:	pop    esi
  402e32:	pop    ebx
  402e33:	ret    
  402e34:	cmp    DWORD PTR ds:0x4707bc,0x0
  402e3b:	je     0x402e4f
  402e3d:	mov    eax,ds:0x4707bc
  402e42:	push   eax
  402e43:	call   0x401398
  402e48:	xor    eax,eax
  402e4a:	mov    ds:0x4707bc,eax
  402e4f:	cmp    BYTE PTR ds:0x46e5ac,0x0
  402e56:	je     0x402e5d
  402e58:	call   0x4027c0
  402e5d:	cmp    DWORD PTR ds:0x4707b4,0x0
  402e64:	je     0x402e7f
  402e66:	push   0x8000
  402e6b:	push   0x0
  402e6d:	mov    eax,ds:0x4707b4
  402e72:	push   eax
  402e73:	call   0x401388
  402e78:	xor    eax,eax
  402e7a:	mov    ds:0x4707b4,eax
  402e7f:	call   0x402da4
  402e84:	ret    
  402e85:	lea    eax,[eax+0x0]
  402e88:	test   eax,eax
  402e8a:	je     0x402e96
  402e8c:	call   DWORD PTR ds:0x461738
  402e92:	test   eax,eax
  402e94:	je     0x402e98
  402e96:	repz ret 
  402e98:	mov    al,0x1
  402e9a:	jmp    0x402ff0
  402e9f:	ret    
  402ea0:	test   eax,eax
  402ea2:	jle    0x402eb7
  402ea4:	call   DWORD PTR ds:0x46172c
  402eaa:	test   eax,eax
  402eac:	je     0x402eb0
  402eae:	repz ret 
  402eb0:	mov    al,0x1
  402eb2:	jmp    0x402ff0
  402eb7:	xor    eax,eax
  402eb9:	repz ret 
  402ebb:	nop
  402ebc:	test   eax,eax
  402ebe:	je     0x402eca
  402ec0:	call   DWORD PTR ds:0x461730
  402ec6:	test   eax,eax
  402ec8:	jne    0x402ecc
  402eca:	repz ret 
  402ecc:	mov    al,0x2
  402ece:	jmp    0x402ff0
  402ed3:	ret    
  402ed4:	mov    ecx,DWORD PTR [eax]
  402ed6:	test   ecx,ecx
  402ed8:	je     0x402f0c
  402eda:	test   edx,edx
  402edc:	je     0x402ef6
  402ede:	push   eax
  402edf:	mov    eax,ecx
  402ee1:	call   DWORD PTR ds:0x461734
  402ee7:	pop    ecx
  402ee8:	or     eax,eax
  402eea:	je     0x402f05
  402eec:	mov    DWORD PTR [ecx],eax
  402eee:	ret    
  402eef:	mov    al,0x2
  402ef1:	jmp    0x402ff0
  402ef6:	mov    DWORD PTR [eax],edx
  402ef8:	mov    eax,ecx
  402efa:	call   DWORD PTR ds:0x461730
  402f00:	or     eax,eax
  402f02:	jne    0x402eef
  402f04:	ret    
  402f05:	mov    al,0x1
  402f07:	jmp    0x402ff0
  402f0c:	test   edx,edx
  402f0e:	je     0x402f20
  402f10:	push   eax
  402f11:	mov    eax,edx
  402f13:	call   DWORD PTR ds:0x46172c
  402f19:	pop    ecx
  402f1a:	or     eax,eax
  402f1c:	je     0x402f05
  402f1e:	mov    DWORD PTR [ecx],eax
  402f20:	ret    
  402f21:	lea    eax,[eax+0x0]
  402f24:	call   0x407080
  402f29:	cmp    DWORD PTR [eax+0x0],0x0
  402f30:	je     0x402f41
  402f32:	call   0x407080
  402f37:	mov    eax,DWORD PTR [eax+0x0]
  402f3d:	mov    eax,DWORD PTR [eax+0x8]
  402f40:	ret    
  402f41:	xor    eax,eax
  402f43:	ret    
  402f44:	call   0x407080
  402f49:	cmp    DWORD PTR [eax+0x0],0x0
  402f50:	je     0x402f61
  402f52:	call   0x407080
  402f57:	mov    eax,DWORD PTR [eax+0x0]
  402f5d:	mov    eax,DWORD PTR [eax+0x4]
  402f60:	ret    
  402f61:	xor    eax,eax
  402f63:	ret    
  402f64:	push   ebx
  402f65:	push   esi
  402f66:	call   0x407080
  402f6b:	cmp    DWORD PTR [eax+0x0],0x0
  402f72:	je     0x402f8e
  402f74:	call   0x407080
  402f79:	mov    esi,DWORD PTR [eax+0x0]
  402f7f:	mov    ebx,DWORD PTR [esi+0x8]
  402f82:	call   0x407080
  402f87:	xor    eax,eax
  402f89:	mov    DWORD PTR [esi+0x8],eax
  402f8c:	jmp    0x402f90
  402f8e:	xor    ebx,ebx
  402f90:	mov    eax,ebx
  402f92:	pop    esi
  402f93:	pop    ebx
  402f94:	ret    
  402f95:	lea    eax,[eax+0x0]
  402f98:	mov    DWORD PTR ds:0x461004,edx
  402f9e:	call   0x404e9c
  402fa3:	ret    
  402fa4:	push   ebx
  402fa5:	push   esi
  402fa6:	mov    esi,edx
  402fa8:	mov    ebx,eax
  402faa:	and    bl,0x7f
  402fad:	cmp    DWORD PTR ds:0x46e008,0x0
  402fb4:	je     0x402fc0
  402fb6:	mov    edx,esi
  402fb8:	mov    eax,ebx
  402fba:	call   DWORD PTR ds:0x46e008
  402fc0:	test   bl,bl
  402fc2:	jne    0x402fd1
  402fc4:	call   0x407080
  402fc9:	mov    ebx,DWORD PTR [eax+0x4]
  402fcf:	jmp    0x402fe0
  402fd1:	cmp    bl,0x18
  402fd4:	ja     0x402fe0
  402fd6:	movzx  eax,bl
  402fd9:	movzx  ebx,BYTE PTR [eax+0x461744]
  402fe0:	movzx  eax,bl
  402fe3:	mov    edx,esi
  402fe5:	call   0x402f98
  402fea:	pop    esi
  402feb:	pop    ebx
  402fec:	ret    
  402fed:	lea    eax,[eax+0x0]
  402ff0:	and    eax,0x7f
  402ff3:	mov    edx,DWORD PTR [esp]
  402ff6:	jmp    0x402fa4
  402ffb:	ret    
  402ffc:	push   eax
  402ffd:	push   edx
  402ffe:	push   ecx
  402fff:	call   0x407080
  403004:	cmp    DWORD PTR [eax+0x4],0x0
  40300b:	pop    ecx
  40300c:	pop    edx
  40300d:	pop    eax
  40300e:	jne    0x403011
  403010:	ret    
  403011:	xor    eax,eax
  403013:	jmp    0x402ff0
  403018:	ret    
  403019:	lea    eax,[eax+0x0]
  40301c:	push   ebx
  40301d:	mov    ebx,eax
  40301f:	call   0x407080
  403024:	mov    DWORD PTR [eax+0x4],ebx
  40302a:	pop    ebx
  40302b:	ret    
  40302c:	push   esi
  40302d:	push   edi
  40302e:	mov    esi,eax
  403030:	mov    edi,DWORD PTR [esp+0xc]
  403034:	xor    eax,eax
  403036:	or     al,BYTE PTR [esi]
  403038:	je     0x403065
  40303a:	test   edx,edx
  40303c:	jle    0x403056
  40303e:	cmp    edx,eax
  403040:	jg     0x40305d
  403042:	sub    eax,edx
  403044:	inc    eax
  403045:	test   ecx,ecx
  403047:	jl     0x40305d
  403049:	cmp    ecx,eax
  40304b:	jg     0x403061
  40304d:	add    esi,edx
  40304f:	mov    BYTE PTR [edi],cl
  403051:	inc    edi
  403052:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403054:	jmp    0x403067
  403056:	mov    edx,0x1
  40305b:	jmp    0x403042
  40305d:	xor    ecx,ecx
  40305f:	jmp    0x40304d
  403061:	mov    ecx,eax
  403063:	jmp    0x40304d
  403065:	mov    BYTE PTR [edi],al
  403067:	pop    edi
  403068:	pop    esi
  403069:	ret    0x4
  40306c:	ret    
  40306d:	lea    eax,[eax+0x0]
  403070:	push   ebx
  403071:	call   0x407080
  403076:	mov    ebx,DWORD PTR [eax+0x4]
  40307c:	call   0x407080
  403081:	xor    edx,edx
  403083:	mov    DWORD PTR [eax+0x4],edx
  403089:	mov    eax,ebx
  40308b:	pop    ebx
  40308c:	ret    
  40308d:	lea    eax,[eax+0x0]
  403090:	cmp    eax,edx
  403092:	je     0x4030c5
  403094:	cmp    ecx,0x20
  403097:	ja     0x403115
  403099:	sub    ecx,0x8
  40309c:	jg     0x4030a5
  40309e:	jmp    DWORD PTR [ecx*4+0x4030e8]
  4030a5:	fild   QWORD PTR [ecx+eax*1]
  4030a8:	fild   QWORD PTR [eax]
  4030aa:	cmp    ecx,0x8
  4030ad:	jle    0x4030c0
  4030af:	fild   QWORD PTR [eax+0x8]
  4030b2:	cmp    ecx,0x10
  4030b5:	jle    0x4030bd
  4030b7:	fild   QWORD PTR [eax+0x10]
  4030ba:	fistp  QWORD PTR [edx+0x10]
  4030bd:	fistp  QWORD PTR [edx+0x8]
  4030c0:	fistp  QWORD PTR [edx]
  4030c2:	fistp  QWORD PTR [ecx+edx*1]
  4030c5:	ret    
  4030c6:	nop
  4030c7:	nop
  4030c8:	lds    esi,FWORD PTR [eax]
  4030ca:	inc    eax
  4030cb:	add    BYTE PTR [esi+0x31],al
  4030ce:	inc    eax
  4030cf:	add    BYTE PTR [ecx+esi*1+0x40],cl
  4030d3:	add    BYTE PTR [ebx+0x31],dl
  4030d6:	inc    eax
  4030d7:	add    BYTE PTR [eax+0x31],ah
  4030da:	inc    eax
  4030db:	add    BYTE PTR [ebp+0x31],ah
  4030de:	inc    eax
  4030df:	add    BYTE PTR [eax+0x31],dh
  4030e2:	inc    eax
  4030e3:	add    BYTE PTR [ebp+0x31],bh
  4030e6:	inc    eax
  4030e7:	add    BYTE PTR [eax+0x52004031],cl
  4030ed:	fild   QWORD PTR [eax]
  4030ef:	lea    eax,[ecx+eax*1-0x8]
  4030f3:	lea    ecx,[edx+ecx*1-0x8]
  4030f7:	fild   QWORD PTR [eax]
  4030f9:	push   ecx
  4030fa:	neg    ecx
  4030fc:	and    edx,0xfffffff8
  4030ff:	lea    ecx,[edx+ecx*1+0x8]
  403103:	pop    edx
  403104:	fild   QWORD PTR [ecx+eax*1]
  403107:	fistp  QWORD PTR [ecx+edx*1]
  40310a:	add    ecx,0x8
  40310d:	jl     0x403104
  40310f:	fistp  QWORD PTR [edx]
  403111:	pop    edx
  403112:	fistp  QWORD PTR [edx]
  403114:	ret    
  403115:	jle    0x403145
  403117:	cmp    eax,edx
  403119:	ja     0x4030ec
  40311b:	sub    edx,ecx
  40311d:	cmp    eax,edx
  40311f:	lea    edx,[ecx+edx*1]
  403122:	jbe    0x4030ec
  403124:	sub    ecx,0x8
  403127:	push   ecx
  403128:	fild   QWORD PTR [ecx+eax*1]
  40312b:	fild   QWORD PTR [eax]
  40312d:	add    ecx,edx
  40312f:	and    ecx,0xfffffff8
  403132:	sub    ecx,edx
  403134:	fild   QWORD PTR [ecx+eax*1]
  403137:	fistp  QWORD PTR [ecx+edx*1]
  40313a:	sub    ecx,0x8
  40313d:	jg     0x403134
  40313f:	pop    ecx
  403140:	fistp  QWORD PTR [edx]
  403142:	fistp  QWORD PTR [ecx+edx*1]
  403145:	ret    
  403146:	movzx  ecx,BYTE PTR [eax]
  403149:	mov    BYTE PTR [edx],cl
  40314b:	ret    
  40314c:	movzx  ecx,WORD PTR [eax]
  40314f:	mov    WORD PTR [edx],cx
  403152:	ret    
  403153:	mov    cx,WORD PTR [eax]
  403156:	mov    al,BYTE PTR [eax+0x2]
  403159:	mov    WORD PTR [edx],cx
  40315c:	mov    BYTE PTR [edx+0x2],al
  40315f:	ret    
  403160:	mov    ecx,DWORD PTR [eax]
  403162:	mov    DWORD PTR [edx],ecx
  403164:	ret    
  403165:	mov    ecx,DWORD PTR [eax]
  403167:	mov    al,BYTE PTR [eax+0x4]
  40316a:	mov    DWORD PTR [edx],ecx
  40316c:	mov    BYTE PTR [edx+0x4],al
  40316f:	ret    
  403170:	mov    ecx,DWORD PTR [eax]
  403172:	mov    ax,WORD PTR [eax+0x4]
  403176:	mov    DWORD PTR [edx],ecx
  403178:	mov    WORD PTR [edx+0x4],ax
  40317c:	ret    
  40317d:	mov    ecx,DWORD PTR [eax]
  40317f:	mov    eax,DWORD PTR [eax+0x3]
  403182:	mov    DWORD PTR [edx],ecx
  403184:	mov    DWORD PTR [edx+0x3],eax
  403187:	ret    
  403188:	fild   QWORD PTR [eax]
  40318a:	fistp  QWORD PTR [edx]
  40318c:	ret    
  40318d:	lea    eax,[eax+0x0]
  403190:	push   ebx
  403191:	push   esi
  403192:	push   edi
  403193:	push   ebp
  403194:	push   ecx
  403195:	mov    esi,edx
  403197:	mov    ebx,eax
  403199:	jmp    0x4031a3
  40319b:	push   ebx
  40319c:	call   0x401254
  4031a1:	mov    ebx,eax
  4031a3:	cmp    BYTE PTR [ebx],0x0
  4031a6:	je     0x4031ad
  4031a8:	cmp    BYTE PTR [ebx],0x20
  4031ab:	jbe    0x40319b
  4031ad:	cmp    BYTE PTR [ebx],0x22
  4031b0:	jne    0x4031bd
  4031b2:	cmp    BYTE PTR [ebx+0x1],0x22
  4031b6:	jne    0x4031bd
  4031b8:	add    ebx,0x2
  4031bb:	jmp    0x4031a3
  4031bd:	xor    ebp,ebp
  4031bf:	mov    DWORD PTR [esp],ebx
  4031c2:	jmp    0x40320c
  4031c4:	cmp    BYTE PTR [ebx],0x22
  4031c7:	jne    0x4031fc
  4031c9:	push   ebx
  4031ca:	call   0x401254
  4031cf:	mov    ebx,eax
  4031d1:	jmp    0x4031e3
  4031d3:	push   ebx
  4031d4:	call   0x401254
  4031d9:	mov    edi,eax
  4031db:	mov    eax,edi
  4031dd:	sub    eax,ebx
  4031df:	add    ebp,eax
  4031e1:	mov    ebx,edi
  4031e3:	cmp    BYTE PTR [ebx],0x0
  4031e6:	je     0x4031ed
  4031e8:	cmp    BYTE PTR [ebx],0x22
  4031eb:	jne    0x4031d3
  4031ed:	cmp    BYTE PTR [ebx],0x0
  4031f0:	je     0x40320c
  4031f2:	push   ebx
  4031f3:	call   0x401254
  4031f8:	mov    ebx,eax
  4031fa:	jmp    0x40320c
  4031fc:	push   ebx
  4031fd:	call   0x401254
  403202:	mov    edi,eax
  403204:	mov    eax,edi
  403206:	sub    eax,ebx
  403208:	add    ebp,eax
  40320a:	mov    ebx,edi
  40320c:	cmp    BYTE PTR [ebx],0x20
  40320f:	ja     0x4031c4
  403211:	mov    eax,esi
  403213:	mov    edx,ebp
  403215:	call   0x4056a8
  40321a:	mov    ebx,DWORD PTR [esp]
  40321d:	mov    ebp,DWORD PTR [esi]
  40321f:	xor    esi,esi
  403221:	jmp    0x40327d
  403223:	cmp    BYTE PTR [ebx],0x22
  403226:	jne    0x403264
  403228:	push   ebx
  403229:	call   0x401254
  40322e:	mov    ebx,eax
  403230:	jmp    0x40324b
  403232:	push   ebx
  403233:	call   0x401254
  403238:	mov    edi,eax
  40323a:	cmp    edi,ebx
  40323c:	jbe    0x40324b
  40323e:	movzx  eax,BYTE PTR [ebx]
  403241:	mov    BYTE PTR [ebp+esi*1+0x0],al
  403245:	inc    ebx
  403246:	inc    esi
  403247:	cmp    edi,ebx
  403249:	ja     0x40323e
  40324b:	cmp    BYTE PTR [ebx],0x0
  40324e:	je     0x403255
  403250:	cmp    BYTE PTR [ebx],0x22
  403253:	jne    0x403232
  403255:	cmp    BYTE PTR [ebx],0x0
  403258:	je     0x40327d
  40325a:	push   ebx
  40325b:	call   0x401254
  403260:	mov    ebx,eax
  403262:	jmp    0x40327d
  403264:	push   ebx
  403265:	call   0x401254
  40326a:	mov    edi,eax
  40326c:	cmp    edi,ebx
  40326e:	jbe    0x40327d
  403270:	movzx  eax,BYTE PTR [ebx]
  403273:	mov    BYTE PTR [ebp+esi*1+0x0],al
  403277:	inc    ebx
  403278:	inc    esi
  403279:	cmp    edi,ebx
  40327b:	ja     0x403270
  40327d:	cmp    BYTE PTR [ebx],0x20
  403280:	ja     0x403223
  403282:	mov    eax,ebx
  403284:	pop    edx
  403285:	pop    ebp
  403286:	pop    edi
  403287:	pop    esi
  403288:	pop    ebx
  403289:	ret    
  40328a:	mov    eax,eax
  40328c:	push   ebx
  40328d:	push   esi
  40328e:	push   edi
  40328f:	add    esp,0xfffffef8
  403295:	mov    ebx,edx
  403297:	mov    esi,eax
  403299:	mov    eax,ebx
  40329b:	call   0x404f88
  4032a0:	test   esi,esi
  4032a2:	jne    0x4032c2
  4032a4:	push   0x105
  4032a9:	lea    eax,[esp+0x4]
  4032ad:	push   eax
  4032ae:	push   0x0
  4032b0:	call   0x4012b4
  4032b5:	mov    ecx,eax
  4032b7:	mov    edx,esp
  4032b9:	mov    eax,ebx
  4032bb:	call   0x405078
  4032c0:	jmp    0x4032e0
  4032c2:	call   0x40129c
  4032c7:	mov    edi,eax
  4032c9:	mov    edx,ebx
  4032cb:	mov    eax,edi
  4032cd:	call   0x403190
  4032d2:	mov    edi,eax
  4032d4:	test   esi,esi
  4032d6:	je     0x4032e0
  4032d8:	cmp    DWORD PTR [ebx],0x0
  4032db:	je     0x4032e0
  4032dd:	dec    esi
  4032de:	jmp    0x4032c9
  4032e0:	add    esp,0x108
  4032e6:	pop    edi
  4032e7:	pop    esi
  4032e8:	pop    ebx
  4032e9:	ret    
  4032ea:	mov    eax,eax
  4032ec:	push   ebx
  4032ed:	xor    ebx,ebx
  4032ef:	imul   edx,DWORD PTR [ebx+0x461008],0x8088405
  4032f9:	inc    edx
  4032fa:	mov    DWORD PTR [ebx+0x461008],edx
  403300:	mul    edx
  403302:	mov    eax,edx
  403304:	pop    ebx
  403305:	ret    
  403306:	mov    eax,eax
  403308:	cmp    al,0x61
  40330a:	jb     0x403312
  40330c:	cmp    al,0x7a
  40330e:	ja     0x403312
  403310:	sub    al,0x20
  403312:	ret    
  403313:	nop
  403314:	sub    esp,0xc
  403317:	fnstcw WORD PTR [esp]
  40331a:	fnstcw WORD PTR [esp+0x2]
  40331e:	fwait
  40331f:	or     WORD PTR [esp+0x2],0xf00
  403326:	fldcw  WORD PTR [esp+0x2]
  40332a:	fistp  QWORD PTR [esp+0x4]
  40332e:	fldcw  WORD PTR [esp]
  403332:	pop    ecx
  403333:	pop    eax
  403334:	pop    edx
  403335:	ret    
  403336:	mov    eax,eax
  403338:	cmp    DWORD PTR ds:0x46e028,0x0
  40333f:	je     0x403347
  403341:	call   DWORD PTR ds:0x46e028
  403347:	mov    eax,0xd2
  40334c:	jmp    0x404ea8
  403351:	ret    
  403352:	mov    eax,eax
  403354:	push   ebx
  403355:	push   esi
  403356:	mov    esi,edx
  403358:	mov    ebx,eax
  40335a:	movzx  eax,WORD PTR [ebx+0x4]
  40335e:	cmp    ax,0xd7b0
  403362:	jb     0x40336a
  403364:	cmp    ax,0xd7b3
  403368:	jbe    0x403371
  40336a:	mov    ebx,0x66
  40336f:	jmp    0x40339c
  403371:	cmp    ax,0xd7b0
  403375:	je     0x40337e
  403377:	mov    eax,ebx
  403379:	call   0x4036e4
  40337e:	mov    WORD PTR [ebx+0x4],si
  403382:	cmp    BYTE PTR [ebx+0x48],0x0
  403386:	jne    0x403395
  403388:	cmp    DWORD PTR [ebx+0x18],0x0
  40338c:	jne    0x403395
  40338e:	mov    DWORD PTR [ebx+0x18],0x403470
  403395:	mov    eax,ebx
  403397:	call   DWORD PTR [ebx+0x18]
  40339a:	mov    ebx,eax
  40339c:	test   ebx,ebx
  40339e:	je     0x4033a7
  4033a0:	mov    eax,ebx
  4033a2:	call   0x40301c
  4033a7:	mov    eax,ebx
  4033a9:	pop    esi
  4033aa:	pop    ebx
  4033ab:	ret    
  4033ac:	mov    dx,0xd7b2
  4033b0:	call   0x403354
  4033b5:	ret    
  4033b6:	mov    eax,eax
  4033b8:	mov    dx,0xd7b3
  4033bc:	call   0x403354
  4033c1:	ret    
  4033c2:	mov    eax,eax
  4033c4:	push   ebx
  4033c5:	mov    ebx,eax
  4033c7:	xor    eax,eax
  4033c9:	mov    DWORD PTR [ebx+0x10],eax
  4033cc:	xor    eax,eax
  4033ce:	mov    DWORD PTR [ebx+0xc],eax
  4033d1:	push   0x0
  4033d3:	lea    eax,[ebx+0x10]
  4033d6:	push   eax
  4033d7:	mov    eax,DWORD PTR [ebx+0x8]
  4033da:	push   eax
  4033db:	mov    eax,DWORD PTR [ebx+0x14]
  4033de:	push   eax
  4033df:	mov    eax,DWORD PTR [ebx]
  4033e1:	push   eax
  4033e2:	call   0x401224
  4033e7:	test   eax,eax
  4033e9:	jne    0x4033f9
  4033eb:	call   0x4012a4
  4033f0:	cmp    eax,0x6d
  4033f3:	jne    0x4033fb
  4033f5:	xor    eax,eax
  4033f7:	pop    ebx
  4033f8:	ret    
  4033f9:	xor    eax,eax
  4033fb:	pop    ebx
  4033fc:	ret    
  4033fd:	lea    eax,[eax+0x0]
  403400:	xor    eax,eax
  403402:	ret    
  403403:	nop
  403404:	push   ebx
  403405:	push   esi
  403406:	push   ecx
  403407:	mov    ebx,eax
  403409:	mov    esi,DWORD PTR [ebx+0xc]
  40340c:	test   esi,esi
  40340e:	jne    0x403414
  403410:	xor    eax,eax
  403412:	jmp    0x40343a
  403414:	push   0x0
  403416:	lea    eax,[esp+0x4]
  40341a:	push   eax
  40341b:	push   esi
  40341c:	mov    eax,DWORD PTR [ebx+0x14]
  40341f:	push   eax
  403420:	mov    eax,DWORD PTR [ebx]
  403422:	push   eax
  403423:	call   0x40124c
  403428:	test   eax,eax
  40342a:	jne    0x403433
  40342c:	call   0x4012a4
  403431:	jmp    0x403435
  403433:	xor    eax,eax
  403435:	xor    edx,edx
  403437:	mov    DWORD PTR [ebx+0xc],edx
  40343a:	pop    edx
  40343b:	pop    esi
  40343c:	pop    ebx
  40343d:	ret    
  40343e:	mov    eax,eax
  403440:	push   ebx
  403441:	mov    ebx,eax
  403443:	push   ebx
  403444:	call   0x4011f4
  403449:	dec    eax
  40344a:	sete   al
  40344d:	pop    ebx
  40344e:	ret    
  40344f:	nop
  403450:	push   ebx
  403451:	mov    ebx,eax
  403453:	mov    WORD PTR [ebx+0x4],0xd7b0
  403459:	mov    eax,DWORD PTR [ebx]
  40345b:	call   0x403440
  403460:	test   al,al
  403462:	jne    0x40346b
  403464:	call   0x4012a4
  403469:	pop    ebx
  40346a:	ret    
  40346b:	xor    eax,eax
  40346d:	pop    ebx
  40346e:	ret    
  40346f:	nop
  403470:	push   esi
  403471:	mov    esi,eax
  403473:	xor    eax,eax
  403475:	mov    DWORD PTR [esi+0xc],eax
  403478:	mov    DWORD PTR [esi+0x10],eax
  40347b:	mov    ax,WORD PTR [esi+0x4]
  40347f:	sub    eax,0xd7b1
  403484:	je     0x403491
  403486:	dec    eax
  403487:	je     0x4034a9
  403489:	dec    eax
  40348a:	je     0x4034ba
  40348c:	jmp    0x4035f8
  403491:	mov    eax,0x80000000
  403496:	mov    edx,0x1
  40349b:	mov    ecx,0x3
  4034a0:	mov    DWORD PTR [esi+0x1c],0x4033c4
  4034a7:	jmp    0x4034d0
  4034a9:	mov    eax,0x40000000
  4034ae:	mov    edx,0x1
  4034b3:	mov    ecx,0x2
  4034b8:	jmp    0x4034c9
  4034ba:	mov    eax,0xc0000000
  4034bf:	mov    edx,0x1
  4034c4:	mov    ecx,0x3
  4034c9:	mov    DWORD PTR [esi+0x1c],0x403404
  4034d0:	mov    DWORD PTR [esi+0x24],0x403450
  4034d7:	mov    DWORD PTR [esi+0x20],0x403400
  4034de:	cmp    BYTE PTR [esi+0x48],0x0
  4034e2:	je     0x40359a
  4034e8:	push   0x0
  4034ea:	push   0x80
  4034ef:	push   ecx
  4034f0:	push   0x0
  4034f2:	push   edx
  4034f3:	push   eax
  4034f4:	lea    eax,[esi+0x48]
  4034f7:	push   eax
  4034f8:	call   0x4011fc
  4034fd:	cmp    eax,0xffffffff
  403500:	je     0x40360e
  403506:	mov    DWORD PTR [esi],eax
  403508:	cmp    WORD PTR [esi+0x4],0xd7b3
  40350e:	jne    0x4035d7
  403514:	dec    WORD PTR [esi+0x4]
  403518:	push   0x0
  40351a:	push   DWORD PTR [esi]
  40351c:	call   0x40120c
  403521:	inc    eax
  403522:	je     0x40360e
  403528:	sub    eax,0x81
  40352d:	jae    0x403531
  40352f:	xor    eax,eax
  403531:	push   0x0
  403533:	push   0x0
  403535:	push   eax
  403536:	push   DWORD PTR [esi]
  403538:	call   0x40123c
  40353d:	inc    eax
  40353e:	je     0x40360e
  403544:	push   0x0
  403546:	mov    edx,esp
  403548:	push   0x0
  40354a:	push   edx
  40354b:	push   0x80
  403550:	lea    edx,[esi+0x14c]
  403556:	push   edx
  403557:	push   DWORD PTR [esi]
  403559:	call   0x401224
  40355e:	pop    edx
  40355f:	dec    eax
  403560:	jne    0x40360e
  403566:	xor    eax,eax
  403568:	cmp    eax,edx
  40356a:	jae    0x4035d7
  40356c:	cmp    BYTE PTR [esi+eax*1+0x14c],0xe
  403574:	je     0x403579
  403576:	inc    eax
  403577:	jmp    0x403568
  403579:	push   0x2
  40357b:	push   0x0
  40357d:	sub    eax,edx
  40357f:	push   eax
  403580:	push   DWORD PTR [esi]
  403582:	call   0x40123c
  403587:	inc    eax
  403588:	je     0x40360e
  40358e:	push   DWORD PTR [esi]
  403590:	call   0x401234
  403595:	dec    eax
  403596:	jne    0x40360e
  403598:	jmp    0x4035d7
  40359a:	lea    eax,[esi+0x14c]
  4035a0:	mov    DWORD PTR [esi+0x8],0x80
  4035a7:	mov    DWORD PTR [esi+0x24],0x403400
  4035ae:	mov    DWORD PTR [esi+0x14],eax
  4035b1:	cmp    WORD PTR [esi+0x4],0xd7b2
  4035b7:	je     0x4035bd
  4035b9:	push   0xfffffff6
  4035bb:	jmp    0x4035cb
  4035bd:	cmp    esi,0x46e3e0
  4035c3:	jne    0x4035c9
  4035c5:	push   0xfffffff4
  4035c7:	jmp    0x4035cb
  4035c9:	push   0xfffffff5
  4035cb:	call   0x401214
  4035d0:	cmp    eax,0xffffffff
  4035d3:	je     0x40360e
  4035d5:	mov    DWORD PTR [esi],eax
  4035d7:	cmp    WORD PTR [esi+0x4],0xd7b1
  4035dd:	je     0x4035f6
  4035df:	push   DWORD PTR [esi]
  4035e1:	call   0x401204
  4035e6:	test   eax,eax
  4035e8:	je     0x4035fa
  4035ea:	cmp    eax,0x2
  4035ed:	jne    0x4035f6
  4035ef:	mov    DWORD PTR [esi+0x20],0x403404
  4035f6:	xor    eax,eax
  4035f8:	pop    esi
  4035f9:	ret    
  4035fa:	push   DWORD PTR [esi]
  4035fc:	call   0x4011f4
  403601:	mov    WORD PTR [esi+0x4],0xd7b0
  403607:	mov    eax,0x69
  40360c:	jmp    0x4035f8
  40360e:	mov    WORD PTR [esi+0x4],0xd7b0
  403614:	call   0x4012a4
  403619:	jmp    0x4035f8
  40361b:	ret    
  40361c:	push   ebx
  40361d:	push   esi
  40361e:	mov    esi,edx
  403620:	mov    ebx,eax
  403622:	mov    eax,ebx
  403624:	xor    ecx,ecx
  403626:	mov    edx,0x14c
  40362b:	call   0x4037c8
  403630:	lea    eax,[ebx+0x14c]
  403636:	mov    DWORD PTR [ebx+0x14],eax
  403639:	mov    WORD PTR [ebx+0x4],0xd7b0
  40363f:	movzx  eax,BYTE PTR ds:0x461034
  403646:	mov    WORD PTR [ebx+0x6],ax
  40364a:	mov    DWORD PTR [ebx+0x8],0x80
  403651:	mov    DWORD PTR [ebx+0x18],0x403470
  403658:	mov    eax,esi
  40365a:	call   0x405248
  40365f:	push   eax
  403660:	mov    eax,esi
  403662:	call   0x405418
  403667:	lea    edx,[ebx+0x48]
  40366a:	pop    ecx
  40366b:	call   0x403090
  403670:	mov    eax,esi
  403672:	call   0x405248
  403677:	mov    BYTE PTR [ebx+eax*1+0x48],0x0
  40367c:	xor    eax,eax
  40367e:	pop    esi
  40367f:	pop    ebx
  403680:	ret    
  403681:	lea    eax,[eax+0x0]
  403684:	push   ebx
  403685:	movzx  ecx,WORD PTR [eax+0x4]
  403689:	sub    cx,0xd7b1
  40368e:	je     0x40369f
  403690:	dec    ecx
  403691:	sub    cx,0x2
  403695:	jae    0x4036a3
  403697:	mov    ebx,edx
  403699:	call   ebx
  40369b:	mov    ebx,eax
  40369d:	jmp    0x4036ba
  40369f:	xor    ebx,ebx
  4036a1:	jmp    0x4036ba
  4036a3:	cmp    eax,0x46e214
  4036a8:	je     0x4036b1
  4036aa:	cmp    eax,0x46e3e0
  4036af:	jne    0x4036b5
  4036b1:	xor    ebx,ebx
  4036b3:	jmp    0x4036ba
  4036b5:	mov    ebx,0x67
  4036ba:	test   ebx,ebx
  4036bc:	je     0x4036c5
  4036be:	mov    eax,ebx
  4036c0:	call   0x40301c
  4036c5:	mov    eax,ebx
  4036c7:	pop    ebx
  4036c8:	ret    
  4036c9:	lea    eax,[eax+0x0]
  4036cc:	mov    edx,DWORD PTR [eax+0x1c]
  4036cf:	call   0x403684
  4036d4:	ret    
  4036d5:	lea    eax,[eax+0x0]
  4036d8:	mov    edx,DWORD PTR [eax+0x20]
  4036db:	call   0x403684
  4036e0:	ret    
  4036e1:	lea    eax,[eax+0x0]
  4036e4:	push   ebx
  4036e5:	push   esi
  4036e6:	mov    ebx,eax
  4036e8:	xor    esi,esi
  4036ea:	movzx  eax,WORD PTR [ebx+0x4]
  4036ee:	cmp    ax,0xd7b1
  4036f2:	jb     0x403723
  4036f4:	cmp    ax,0xd7b3
  4036f8:	ja     0x403723
  4036fa:	and    ax,0xd7b2
  4036fe:	cmp    ax,0xd7b2
  403702:	jne    0x40370b
  403704:	mov    eax,ebx
  403706:	call   DWORD PTR [ebx+0x1c]
  403709:	mov    esi,eax
  40370b:	test   esi,esi
  40370d:	jne    0x403716
  40370f:	mov    eax,ebx
  403711:	call   DWORD PTR [ebx+0x24]
  403714:	mov    esi,eax
  403716:	test   esi,esi
  403718:	je     0x403735
  40371a:	mov    eax,esi
  40371c:	call   0x40301c
  403721:	jmp    0x403735
  403723:	cmp    ebx,0x46e048
  403729:	je     0x403735
  40372b:	mov    eax,0x67
  403730:	call   0x40301c
  403735:	mov    eax,esi
  403737:	pop    esi
  403738:	pop    ebx
  403739:	ret    
  40373a:	mov    eax,eax
  40373c:	push   ebx
  40373d:	movzx  ebx,BYTE PTR [edx]
  403740:	cmp    cl,bl
  403742:	jbe    0x403746
  403744:	mov    ecx,ebx
  403746:	mov    BYTE PTR [eax],cl
  403748:	inc    edx
  403749:	inc    eax
  40374a:	movzx  ecx,cl
  40374d:	xchg   edx,eax
  40374e:	call   0x403090
  403753:	pop    ebx
  403754:	ret    
  403755:	lea    eax,[eax+0x0]
  403758:	push   ebx
  403759:	push   esi
  40375a:	push   ecx
  40375b:	mov    esi,ecx
  40375d:	shr    esi,0x2
  403760:	je     0x403788
  403762:	mov    ecx,DWORD PTR [eax]
  403764:	mov    ebx,DWORD PTR [edx]
  403766:	cmp    ecx,ebx
  403768:	jne    0x4037af
  40376a:	dec    esi
  40376b:	je     0x403782
  40376d:	mov    ecx,DWORD PTR [eax+0x4]
  403770:	mov    ebx,DWORD PTR [edx+0x4]
  403773:	cmp    ecx,ebx
  403775:	jne    0x4037af
  403777:	add    eax,0x8
  40377a:	add    edx,0x8
  40377d:	dec    esi
  40377e:	jne    0x403762
  403780:	jmp    0x403788
  403782:	add    eax,0x4
  403785:	add    edx,0x4
  403788:	pop    esi
  403789:	and    esi,0x3
  40378c:	je     0x4037c4
  40378e:	mov    cl,BYTE PTR [eax]
  403790:	cmp    cl,BYTE PTR [edx]
  403792:	jne    0x4037c4
  403794:	dec    esi
  403795:	je     0x4037aa
  403797:	mov    cl,BYTE PTR [eax+0x1]
  40379a:	cmp    cl,BYTE PTR [edx+0x1]
  40379d:	jne    0x4037c4
  40379f:	dec    esi
  4037a0:	je     0x4037aa
  4037a2:	mov    cl,BYTE PTR [eax+0x2]
  4037a5:	cmp    cl,BYTE PTR [edx+0x2]
  4037a8:	jne    0x4037c4
  4037aa:	xor    eax,eax
  4037ac:	pop    esi
  4037ad:	pop    ebx
  4037ae:	ret    
  4037af:	pop    esi
  4037b0:	cmp    cl,bl
  4037b2:	jne    0x4037c4
  4037b4:	cmp    ch,bh
  4037b6:	jne    0x4037c4
  4037b8:	shr    ecx,0x10
  4037bb:	shr    ebx,0x10
  4037be:	cmp    cl,bl
  4037c0:	jne    0x4037c4
  4037c2:	cmp    ch,bh
  4037c4:	pop    esi
  4037c5:	pop    ebx
  4037c6:	ret    
  4037c7:	nop
  4037c8:	cmp    edx,0x20
  4037cb:	mov    ch,cl
  4037cd:	jl     0x40380c
  4037cf:	mov    WORD PTR [eax],cx
  4037d2:	mov    WORD PTR [eax+0x2],cx
  4037d6:	mov    WORD PTR [eax+0x4],cx
  4037da:	mov    WORD PTR [eax+0x6],cx
  4037de:	sub    edx,0x10
  4037e1:	fld    QWORD PTR [eax]
  4037e3:	fst    QWORD PTR [edx+eax*1]
  4037e6:	fst    QWORD PTR [edx+eax*1+0x8]
  4037ea:	mov    ecx,eax
  4037ec:	and    ecx,0x7
  4037ef:	sub    ecx,0x8
  4037f2:	sub    eax,ecx
  4037f4:	add    edx,ecx
  4037f6:	add    eax,edx
  4037f8:	neg    edx
  4037fa:	fst    QWORD PTR [edx+eax*1]
  4037fd:	fst    QWORD PTR [edx+eax*1+0x8]
  403801:	add    edx,0x10
  403804:	jl     0x4037fa
  403806:	ffree  st(0)
  403808:	ret    
  403809:	nop
  40380a:	nop
  40380b:	nop
  40380c:	test   edx,edx
  40380e:	jle    0x403860
  403810:	mov    BYTE PTR [edx+eax*1-0x1],cl
  403814:	and    edx,0xfffffffe
  403817:	neg    edx
  403819:	lea    edx,[edx*2+0x403860]
  403820:	jmp    edx
  403822:	nop
  403823:	nop
  403824:	mov    WORD PTR [eax+0x1c],cx
  403828:	mov    WORD PTR [eax+0x1a],cx
  40382c:	mov    WORD PTR [eax+0x18],cx
  403830:	mov    WORD PTR [eax+0x16],cx
  403834:	mov    WORD PTR [eax+0x14],cx
  403838:	mov    WORD PTR [eax+0x12],cx
  40383c:	mov    WORD PTR [eax+0x10],cx
  403840:	mov    WORD PTR [eax+0xe],cx
  403844:	mov    WORD PTR [eax+0xc],cx
  403848:	mov    WORD PTR [eax+0xa],cx
  40384c:	mov    WORD PTR [eax+0x8],cx
  403850:	mov    WORD PTR [eax+0x6],cx
  403854:	mov    WORD PTR [eax+0x4],cx
  403858:	mov    WORD PTR [eax+0x2],cx
  40385c:	mov    WORD PTR [eax],cx
  40385f:	ret    
  403860:	ret    
  403861:	lea    eax,[eax+0x0]
  403864:	push   ebx
  403865:	push   esi
  403866:	push   edi
  403867:	push   edx
  403868:	sub    esp,0x14
  40386b:	mov    edi,ecx
  40386d:	mov    esi,eax
  40386f:	cdq    
  403870:	xor    eax,edx
  403872:	sub    eax,edx
  403874:	mov    ecx,0xa
  403879:	xor    ebx,ebx
  40387b:	xor    edx,edx
  40387d:	div    ecx
  40387f:	add    edx,0x30
  403882:	mov    BYTE PTR [esp+ebx*1],dl
  403885:	inc    ebx
  403886:	test   eax,eax
  403888:	jne    0x40387b
  40388a:	test   esi,esi
  40388c:	jge    0x403893
  40388e:	mov    BYTE PTR [esp+ebx*1],0x2d
  403892:	inc    ebx
  403893:	mov    BYTE PTR [edi],bl
  403895:	inc    edi
  403896:	mov    ecx,DWORD PTR [esp+0x14]
  40389a:	cmp    ecx,0xff
  4038a0:	jle    0x4038a7
  4038a2:	mov    ecx,0xff
  4038a7:	sub    ecx,ebx
  4038a9:	jle    0x4038b2
  4038ab:	add    BYTE PTR [edi-0x1],cl
  4038ae:	mov    al,0x20
  4038b0:	rep stos BYTE PTR es:[edi],al
  4038b2:	mov    al,BYTE PTR [esp+ebx*1-0x1]
  4038b6:	mov    BYTE PTR [edi],al
  4038b8:	inc    edi
  4038b9:	dec    ebx
  4038ba:	jne    0x4038b2
  4038bc:	add    esp,0x18
  4038bf:	pop    edi
  4038c0:	pop    esi
  4038c1:	pop    ebx
  4038c2:	ret    
  4038c3:	nop
  4038c4:	push   ebx
  4038c5:	push   esi
  4038c6:	push   edi
  4038c7:	mov    esi,eax
  4038c9:	push   eax
  4038ca:	test   eax,eax
  4038cc:	je     0x40393a
  4038ce:	xor    eax,eax
  4038d0:	xor    ebx,ebx
  4038d2:	mov    edi,0xccccccc
  4038d7:	mov    bl,BYTE PTR [esi]
  4038d9:	inc    esi
  4038da:	cmp    bl,0x20
  4038dd:	je     0x4038d7
  4038df:	mov    ch,0x0
  4038e1:	cmp    bl,0x2d
  4038e4:	je     0x403948
  4038e6:	cmp    bl,0x2b
  4038e9:	je     0x40394a
  4038eb:	cmp    bl,0x24
  4038ee:	je     0x40394f
  4038f0:	cmp    bl,0x78
  4038f3:	je     0x40394f
  4038f5:	cmp    bl,0x58
  4038f8:	je     0x40394f
  4038fa:	cmp    bl,0x30
  4038fd:	jne    0x403912
  4038ff:	mov    bl,BYTE PTR [esi]
  403901:	inc    esi
  403902:	cmp    bl,0x78
  403905:	je     0x40394f
  403907:	cmp    bl,0x58
  40390a:	je     0x40394f
  40390c:	test   bl,bl
  40390e:	je     0x403930
  403910:	jmp    0x403916
  403912:	test   bl,bl
  403914:	je     0x403943
  403916:	sub    bl,0x30
  403919:	cmp    bl,0x9
  40391c:	ja     0x403943
  40391e:	cmp    eax,edi
  403920:	ja     0x403943
  403922:	lea    eax,[eax+eax*4]
  403925:	add    eax,eax
  403927:	add    eax,ebx
  403929:	mov    bl,BYTE PTR [esi]
  40392b:	inc    esi
  40392c:	test   bl,bl
  40392e:	jne    0x403916
  403930:	dec    ch
  403932:	je     0x40393d
  403934:	test   eax,eax
  403936:	jge    0x40398c
  403938:	jmp    0x403943
  40393a:	inc    esi
  40393b:	jmp    0x403943
  40393d:	neg    eax
  40393f:	jle    0x40398c
  403941:	js     0x40398c
  403943:	pop    ebx
  403944:	sub    esi,ebx
  403946:	jmp    0x40398f
  403948:	inc    ch
  40394a:	mov    bl,BYTE PTR [esi]
  40394c:	inc    esi
  40394d:	jmp    0x4038eb
  40394f:	mov    edi,0xfffffff
  403954:	mov    bl,BYTE PTR [esi]
  403956:	inc    esi
  403957:	test   bl,bl
  403959:	je     0x40393a
  40395b:	cmp    bl,0x61
  40395e:	jb     0x403963
  403960:	sub    bl,0x20
  403963:	sub    bl,0x30
  403966:	cmp    bl,0x9
  403969:	jbe    0x403976
  40396b:	sub    bl,0x11
  40396e:	cmp    bl,0x5
  403971:	ja     0x403943
  403973:	add    bl,0xa
  403976:	cmp    eax,edi
  403978:	ja     0x403943
  40397a:	shl    eax,0x4
  40397d:	add    eax,ebx
  40397f:	mov    bl,BYTE PTR [esi]
  403981:	inc    esi
  403982:	test   bl,bl
  403984:	jne    0x40395b
  403986:	dec    ch
  403988:	jne    0x40398c
  40398a:	neg    eax
  40398c:	pop    ecx
  40398d:	xor    esi,esi
  40398f:	mov    DWORD PTR [edx],esi
  403991:	pop    edi
  403992:	pop    esi
  403993:	pop    ebx
  403994:	ret    
  403995:	lea    eax,[eax+0x0]
  403998:	push   ebx
  403999:	mov    ebx,eax
  40399b:	cmp    ebx,0x46e214
  4039a1:	je     0x4039ab
  4039a3:	cmp    ebx,0x46e3e0
  4039a9:	jne    0x4039bd
  4039ab:	movzx  eax,BYTE PTR ds:0x461034
  4039b2:	mov    WORD PTR [ebx+0x6],ax
  4039b6:	mov    eax,ebx
  4039b8:	call   0x4033ac
  4039bd:	cmp    WORD PTR [ebx+0x4],0xd7b2
  4039c3:	sete   al
  4039c6:	mov    ebx,eax
  4039c8:	test   bl,bl
  4039ca:	jne    0x4039d6
  4039cc:	mov    eax,0x69
  4039d1:	call   0x40301c
  4039d6:	mov    eax,ebx
  4039d8:	pop    ebx
  4039d9:	ret    
  4039da:	mov    eax,eax
  4039dc:	push   esi
  4039dd:	push   edi
  4039de:	mov    esi,edx
  4039e0:	cmp    WORD PTR [eax+0x4],0xd7b2
  4039e6:	je     0x4039f7
  4039e8:	push   eax
  4039e9:	push   edx
  4039ea:	push   ecx
  4039eb:	call   0x403998
  4039f0:	test   al,al
  4039f2:	pop    ecx
  4039f3:	pop    edx
  4039f4:	pop    eax
  4039f5:	je     0x403a2c
  4039f7:	mov    edi,DWORD PTR [eax+0x14]
  4039fa:	add    edi,DWORD PTR [eax+0xc]
  4039fd:	mov    edx,DWORD PTR [eax+0x8]
  403a00:	sub    edx,DWORD PTR [eax+0xc]
  403a03:	cmp    edx,ecx
  403a05:	jg     0x403a27
  403a07:	add    DWORD PTR [eax+0xc],edx
  403a0a:	sub    ecx,edx
  403a0c:	push   eax
  403a0d:	push   ecx
  403a0e:	mov    ecx,edx
  403a10:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a12:	call   DWORD PTR [eax+0x1c]
  403a15:	test   eax,eax
  403a17:	jne    0x403a1d
  403a19:	pop    ecx
  403a1a:	pop    eax
  403a1b:	jmp    0x4039f7
  403a1d:	call   0x40301c
  403a22:	pop    ecx
  403a23:	pop    eax
  403a24:	pop    edi
  403a25:	pop    esi
  403a26:	ret    
  403a27:	add    DWORD PTR [eax+0xc],ecx
  403a2a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2c:	pop    edi
  403a2d:	pop    esi
  403a2e:	ret    
  403a2f:	nop
  403a30:	mov    ecx,edx
  403a32:	mov    edx,0x403a60
  403a37:	cmp    ecx,0x40
  403a3a:	jle    0x403aa0
  403a3c:	sub    ecx,0x40
  403a3f:	push   eax
  403a40:	push   ecx
  403a41:	mov    ecx,0x40
  403a46:	call   0x4039dc
  403a4b:	call   0x407080
  403a50:	cmp    DWORD PTR [eax+0x4],0x0
  403a57:	jne    0x403a5d
  403a59:	pop    ecx
  403a5a:	pop    eax
  403a5b:	jmp    0x403a32
  403a5d:	pop    ecx
  403a5e:	pop    eax
  403a5f:	ret    
  403a60:	and    BYTE PTR [eax],ah
  403a62:	and    BYTE PTR [eax],ah
  403a64:	and    BYTE PTR [eax],ah
  403a66:	and    BYTE PTR [eax],ah
  403a68:	and    BYTE PTR [eax],ah
  403a6a:	and    BYTE PTR [eax],ah
  403a6c:	and    BYTE PTR [eax],ah
  403a6e:	and    BYTE PTR [eax],ah
  403a70:	and    BYTE PTR [eax],ah
  403a72:	and    BYTE PTR [eax],ah
  403a74:	and    BYTE PTR [eax],ah
  403a76:	and    BYTE PTR [eax],ah
  403a78:	and    BYTE PTR [eax],ah
  403a7a:	and    BYTE PTR [eax],ah
  403a7c:	and    BYTE PTR [eax],ah
  403a7e:	and    BYTE PTR [eax],ah
  403a80:	and    BYTE PTR [eax],ah
  403a82:	and    BYTE PTR [eax],ah
  403a84:	and    BYTE PTR [eax],ah
  403a86:	and    BYTE PTR [eax],ah
  403a88:	and    BYTE PTR [eax],ah
  403a8a:	and    BYTE PTR [eax],ah
  403a8c:	and    BYTE PTR [eax],ah
  403a8e:	and    BYTE PTR [eax],ah
  403a90:	and    BYTE PTR [eax],ah
  403a92:	and    BYTE PTR [eax],ah
  403a94:	and    BYTE PTR [eax],ah
  403a96:	and    BYTE PTR [eax],ah
  403a98:	and    BYTE PTR [eax],ah
  403a9a:	and    BYTE PTR [eax],ah
  403a9c:	and    BYTE PTR [eax],ah
  403a9e:	and    BYTE PTR [eax],ah
  403aa0:	test   ecx,ecx
  403aa2:	jg     0x4039dc
  403aa8:	ret    
  403aa9:	lea    eax,[eax+0x0]
  403aac:	push   ebx
  403aad:	push   esi
  403aae:	push   edi
  403aaf:	add    esp,0xfffffee0
  403ab5:	mov    edi,ecx
  403ab7:	mov    esi,edx
  403ab9:	mov    ebx,eax
  403abb:	lea    ecx,[esp+0x20]
  403abf:	xor    edx,edx
  403ac1:	mov    eax,esi
  403ac3:	call   0x403864
  403ac8:	lea    edx,[esp+0x20]
  403acc:	mov    eax,esp
  403ace:	mov    cl,0x1f
  403ad0:	call   0x40373c
  403ad5:	mov    edx,esp
  403ad7:	mov    eax,ebx
  403ad9:	mov    ecx,edi
  403adb:	call   0x403af4
  403ae0:	add    esp,0x120
  403ae6:	pop    edi
  403ae7:	pop    esi
  403ae8:	pop    ebx
  403ae9:	ret    
  403aea:	mov    eax,eax
  403aec:	xor    ecx,ecx
  403aee:	call   0x403aac
  403af3:	ret    
  403af4:	push   ebx
  403af5:	push   esi
  403af6:	mov    ebx,edx
  403af8:	mov    esi,eax
  403afa:	movzx  eax,BYTE PTR [ebx]
  403afd:	mov    edx,ecx
  403aff:	sub    edx,eax
  403b01:	mov    eax,esi
  403b03:	call   0x403a30
  403b08:	movzx  ecx,BYTE PTR [ebx]
  403b0b:	lea    edx,[ebx+0x1]
  403b0e:	mov    eax,esi
  403b10:	call   0x4039dc
  403b15:	pop    esi
  403b16:	pop    ebx
  403b17:	ret    
  403b18:	push   ebx
  403b19:	push   esi
  403b1a:	push   ecx
  403b1b:	mov    ebx,eax
  403b1d:	test   BYTE PTR [ebx+0x6],0x1
  403b21:	je     0x403b3e
  403b23:	mov    BYTE PTR [esp],0xd
  403b27:	mov    BYTE PTR [esp+0x1],0xa
  403b2c:	mov    edx,esp
  403b2e:	mov    eax,ebx
  403b30:	mov    ecx,0x2
  403b35:	call   0x4039dc
  403b3a:	mov    esi,eax
  403b3c:	jmp    0x403b52
  403b3e:	mov    BYTE PTR [esp],0xa
  403b42:	mov    edx,esp
  403b44:	mov    eax,ebx
  403b46:	mov    ecx,0x1
  403b4b:	call   0x4039dc
  403b50:	mov    esi,eax
  403b52:	mov    eax,ebx
  403b54:	call   0x4036d8
  403b59:	mov    eax,esi
  403b5b:	pop    edx
  403b5c:	pop    esi
  403b5d:	pop    ebx
  403b5e:	ret    
  403b5f:	nop
  403b60:	push   esi
  403b61:	push   edi
  403b62:	mov    esi,eax
  403b64:	mov    edi,edx
  403b66:	and    ecx,0xff
  403b6c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b6e:	pop    edi
  403b6f:	pop    esi
  403b70:	ret    
  403b71:	lea    eax,[eax+0x0]
  403b74:	jmp    0x403b7c
  403b79:	ret    
  403b7a:	mov    eax,eax
  403b7c:	push   ebx
  403b7d:	xor    ebx,ebx
  403b7f:	test   eax,eax
  403b81:	jl     0x403bd0
  403b83:	je     0x403c23
  403b89:	cmp    eax,0x1400
  403b8e:	jge    0x403c15
  403b94:	mov    edx,eax
  403b96:	and    edx,0x1f
  403b99:	lea    edx,[edx+edx*4]
  403b9c:	fld    TBYTE PTR [ebx+edx*2+0x403c2f]
  403ba3:	fmulp  st(1),st
  403ba5:	shr    eax,0x5
  403ba8:	je     0x403c23
  403baa:	mov    edx,eax
  403bac:	and    edx,0xf
  403baf:	je     0x403bbd
  403bb1:	lea    edx,[edx+edx*4]
  403bb4:	fld    TBYTE PTR [ebx+edx*2+0x403d65]
  403bbb:	fmulp  st(1),st
  403bbd:	shr    eax,0x4
  403bc0:	je     0x403c23
  403bc2:	lea    eax,[eax+eax*4]
  403bc5:	fld    TBYTE PTR [ebx+eax*2+0x403dfb]
  403bcc:	fmulp  st(1),st
  403bce:	jmp    0x403c23
  403bd0:	neg    eax
  403bd2:	cmp    eax,0x1400
  403bd7:	jge    0x403c1f
  403bd9:	mov    edx,eax
  403bdb:	and    edx,0x1f
  403bde:	lea    edx,[edx+edx*4]
  403be1:	fld    TBYTE PTR [ebx+edx*2+0x403c2f]
  403be8:	fdivp  st(1),st
  403bea:	shr    eax,0x5
  403bed:	je     0x403c23
  403bef:	mov    edx,eax
  403bf1:	and    edx,0xf
  403bf4:	je     0x403c02
  403bf6:	lea    edx,[edx+edx*4]
  403bf9:	fld    TBYTE PTR [ebx+edx*2+0x403d65]
  403c00:	fdivp  st(1),st
  403c02:	shr    eax,0x4
  403c05:	je     0x403c23
  403c07:	lea    eax,[eax+eax*4]
  403c0a:	fld    TBYTE PTR [ebx+eax*2+0x403dfb]
  403c11:	fdivp  st(1),st
  403c13:	jmp    0x403c23
  403c15:	fstp   st(0)
  403c17:	fld    TBYTE PTR [ebx+0x403c25]
  403c1d:	jmp    0x403c23
  403c1f:	fstp   st(0)
  403c21:	fldz   
  403c23:	pop    ebx
  403c24:	ret    
  403c25:	add    BYTE PTR [eax],al
  403c27:	add    BYTE PTR [eax],al
  403c29:	add    BYTE PTR [eax],al
  403c2b:	add    BYTE PTR [eax+0x7fff],al
  403c31:	add    BYTE PTR [eax],al
  403c33:	add    BYTE PTR [eax],al
  403c35:	add    BYTE PTR [eax+0x3fff],al
  403c3b:	add    BYTE PTR [eax],al
  403c3d:	add    BYTE PTR [eax],al
  403c3f:	add    BYTE PTR [eax+0x4002],ah
  403c45:	add    BYTE PTR [eax],al
  403c47:	add    BYTE PTR [eax],al
  403c49:	add    al,cl
  403c4b:	add    eax,0x40
  403c50:	add    BYTE PTR [eax],al
  403c52:	add    BYTE PTR [eax],al
  403c54:	cli    
  403c55:	or     BYTE PTR [eax+0x0],al
  403c58:	add    BYTE PTR [eax],al
  403c5a:	add    BYTE PTR [eax],al
  403c5c:	add    BYTE PTR [eax-0x64],al
  403c5f:	or     al,0x40
  403c61:	add    BYTE PTR [eax],al
  403c63:	add    BYTE PTR [eax],al
  403c65:	add    BYTE PTR [eax],al
  403c67:	push   eax
  403c68:	ret    
  403c69:	cmovo  eax,DWORD PTR [eax]
  403c6c:	add    BYTE PTR [eax],al
  403c6e:	add    BYTE PTR [eax],al
  403c70:	add    BYTE PTR [esp+esi*8],ah
  403c73:	adc    al,BYTE PTR [eax+0x0]
  403c76:	add    BYTE PTR [eax],al
  403c78:	add    BYTE PTR [eax],al
  403c7a:	adc    BYTE PTR [esi+0x401698],0x0
  403c81:	add    BYTE PTR [eax],al
  403c83:	add    BYTE PTR [eax],ah
  403c85:	mov    esp,0x4019be
  403c8a:	add    BYTE PTR [eax],al
  403c8c:	add    BYTE PTR [eax],al
  403c8e:	sub    BYTE PTR [ebx-0x12],ch
  403c91:	sbb    al,0x40
  403c93:	add    BYTE PTR [eax],al
  403c95:	add    BYTE PTR [eax],al
  403c97:	add    cl,bh
  403c99:	add    dl,BYTE PTR [ebp+0x4020]
  403c9f:	add    BYTE PTR [eax],al
  403ca1:	inc    eax
  403ca2:	mov    bh,0x43
  403ca4:	mov    edx,0x4023
  403ca9:	add    BYTE PTR [eax],al
  403cab:	adc    BYTE PTR [ebp+0x4026e8d4],ah
  403cb1:	add    BYTE PTR [eax],al
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	sub    ah,bh
  403cb7:	test   BYTE PTR [ecx+0x402a],dl
  403cbd:	add    BYTE PTR [eax-0x4a19df0c],al
  403cc3:	sub    eax,0x40
  403cc8:	mov    al,ds:0xe35fa931
  403ccd:	xor    BYTE PTR [eax+0x0],al
  403cd0:	add    BYTE PTR [eax],al
  403cd2:	add    al,0xbf
  403cd4:	leave  
  403cd5:	sbb    ecx,DWORD PTR [esi+0x4034]
  403cdb:	add    ch,al
  403cdd:	cs mov esp,0x4037b1a2
  403ce3:	add    BYTE PTR [eax],al
  403ce5:	inc    eax
  403ce6:	jbe    0x403d22
  403ce8:	imul   ecx,DWORD PTR [ebx],0xffffffde
  403ceb:	cmp    al,BYTE PTR [eax+0x0]
  403cee:	add    al,ch
  403cf0:	mov    DWORD PTR [ebx+eiz*1],eax
  403cf3:	(bad)  
  403cf4:	mov    bh,BYTE PTR [esi]
  403cf6:	inc    eax
  403cf7:	add    BYTE PTR [eax],al
  403cf9:	bound  ebp,QWORD PTR [ebp+eax*8+0x41ad78eb]
  403d00:	inc    eax
  403d01:	add    BYTE PTR [eax+0x26b7177a],al
  403d07:	xlat   BYTE PTR ds:[ebx]
  403d08:	fadd   DWORD PTR [eax+eax*2+0x0]
  403d0c:	nop
  403d0d:	lods   al,BYTE PTR ds:[esi]
  403d0e:	outs   dx,BYTE PTR ds:[esi]
  403d0f:	xor    bh,BYTE PTR [eax-0x7a]
  403d12:	xchg   DWORD PTR [eax+0x40],ecx
  403d15:	add    BYTE PTR [edi+edx*2+0x68163f0a],dh
  403d1c:	test   eax,0xa100404b
  403d21:	in     eax,dx
  403d22:	int3   
  403d23:	into   
  403d24:	sbb    eax,edx
  403d26:	ror    DWORD PTR [esi+0x40],cl
  403d29:	mov    al,ds:0x61401484
  403d2e:	push   ecx
  403d2f:	pop    ecx
  403d30:	test   BYTE PTR [edx+0x40],dl
  403d33:	enter  0x19a5,0x90
  403d37:	mov    ecx,0x55a56fa5
  403d3c:	inc    eax
  403d3d:	cmp    cl,BYTE PTR [edi]
  403d3f:	and    ah,dh
  403d41:	daa    
  403d42:	(bad)  
  403d43:	retf   
  403d44:	into   
  403d45:	pop    eax
  403d46:	inc    eax
  403d47:	test   BYTE PTR [ecx],cl
  403d49:	xchg   esp,eax
  403d4a:	clc    
  403d4b:	js     0x403d86
  403d4d:	aas    
  403d4e:	sbb    DWORD PTR [eax+eax*2-0x1b],0xd736b90b
  403d56:	pop    es
  403d57:	(bad)  
  403d58:	mov    eax,ds:0x4edf405f
  403d5d:	addr16 add al,0xcd
  403d60:	leave  
  403d61:	repnz leave 
  403d63:	bound  eax,QWORD PTR [eax-0x6a]
  403d66:	and    al,BYTE PTR [ecx+0x6f7c4045]
  403d6c:	cld    
  403d6d:	gs inc eax
  403d6f:	sahf   
  403d70:	mov    ch,0x70
  403d72:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  403d78:	inc    eax
  403d79:	aad    0xa6
  403d7b:	iret   
  403d7c:	dec    DWORD PTR [ecx+0x1f]
  403d7f:	js     0x403d43
  403d81:	rol    DWORD PTR [eax-0x5d],cl
  403d84:	adc    al,0x9b
  403d86:	lds    edx,FWORD PTR [esi]
  403d88:	stos   DWORD PTR es:[edi],eax
  403d89:	mov    bl,0xef
  403d8b:	cmp    eax,0xe98ce041
  403d90:	or     cl,0x47
  403d93:	mov    edx,0xaa41a893
  403d98:	pop    ss
  403d99:	out    0x7f,al
  403d9b:	sub    esp,DWORD PTR [ecx+0x4212b616]
  403da1:	imul   edx,DWORD PTR [ebp+0x27],0x39
  403da5:	(bad)  
  403da6:	div    DWORD PTR [eax-0x20]
  403da9:	jl     0x403ded
  403dab:	xor    cl,cl
  403dad:	cmp    al,0xe3
  403daf:	call   DWORD PTR [esi+0x42e78a52]
  403db5:	mov    ds,esi
  403db7:	stc    
  403db8:	popf   
  403db9:	sti    
  403dba:	jmp    0x403e3a
  403dbc:	stos   BYTE PTR es:[edi],al
  403dbd:	push   ecx
  403dbe:	inc    ebx
  403dbf:	mov    WORD PTR [edi],gs
  403dc1:	push   0x5c
  403dc3:	sbb    esp,edi
  403dc5:	sar    BYTE PTR es:[ebx-0x331c89bd],cl
  403dcc:	repnz sub DWORD PTR [edi],ebp
  403dcf:	test   BYTE PTR [ecx+0xad24426],al
  403dd5:	nop
  403dd6:	fild   DWORD PTR [eax]
  403dd8:	daa    
  403dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dda:	lahf   
  403ddb:	nop
  403ddc:	inc    esp
  403ddd:	pop    ss
  403dde:	stos   BYTE PTR es:[edi],al
  403ddf:	clc    
  403de0:	scas   al,BYTE PTR es:[edi]
  403de1:	adc    bl,ah
  403de3:	(bad)
  403de6:	inc    esp
  403de7:	pop    ecx
  403de8:	pushf  
  403de9:	mov    al,0xe9
  403deb:	pop    es
  403dec:	pushf  
  403ded:	mov    dh,dl
  403def:	fs inc ebp
  403df1:	aam    0xf3
  403df3:	imul   ebx
  403df5:	loope  0x403e41
  403df7:	jp     0x403d8e
  403df9:	iret   
  403dfa:	inc    ebp
  403dfb:	bound  esp,QWORD PTR [edx-0x2723f86b]
  403e01:	ds mov eax,0x91c74639
  403e07:	push   cs
  403e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e09:	scas   al,BYTE PTR es:[edi]
  403e0a:	mov    al,ds:0x46a3e319
  403e0f:	pop    ss
  403e10:	or     al,0x75
  403e12:	add    DWORD PTR [esi+0x48c97675],0x93a7e44d
  403e1c:	cmp    DWORD PTR [ebx],edi
  403e1e:	xor    eax,0x53edb2b8
  403e23:	in     eax,0x5d
  403e25:	cmp    eax,0x8b3b5dc5
  403e2a:	sahf   
  403e2b:	xchg   edx,eax
  403e2c:	pop    edx
  403e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2e:	lock mov eax,ds:0xa554c020
  403e34:	mov    WORD PTR [edi],?
  403e36:	popa   
  403e37:	mov    ebx,DWORD PTR [edx-0x75]
  403e3a:	fsub   DWORD PTR ds:0xdbf9895d
  403e40:	addr16 clc 
  403e42:	repz daa 
  403e44:	mov    edi,0xdd5dc8a2
  403e49:	sub    BYTE PTR [esi-0x65],0x97
  403e4d:	and    BYTE PTR [edx-0x3b9fadfe],cl
  403e53:	and    eax,0xd559f075
  403e58:	outs   dx,BYTE PTR ds:[esi]
  403e59:	bound  edx,QWORD PTR [ecx]
  403e5b:	xor    eax,0xc37bcaae
  403e60:	jmp    DWORD PTR ds:0x479388
  403e66:	mov    eax,eax
  403e68:	push   ebx
  403e69:	xor    ebx,ebx
  403e6b:	push   0x0
  403e6d:	call   0x403e60
  403e72:	cmp    eax,0x7
  403e75:	jne    0x403e93
  403e77:	push   0x1
  403e79:	call   0x403e60
  403e7e:	and    eax,0xff00
  403e83:	cmp    eax,0xd00
  403e88:	je     0x403e91
  403e8a:	cmp    eax,0x400
  403e8f:	jne    0x403e93
  403e91:	mov    bl,0x1
  403e93:	mov    eax,ebx
  403e95:	pop    ebx
  403e96:	ret    
  403e97:	nop
  403e98:	push   ebp
  403e99:	mov    ebp,esp
  403e9b:	add    esp,0xfffffff4
  403e9e:	movzx  eax,WORD PTR ds:0x461024
  403ea5:	mov    DWORD PTR [ebp-0x8],eax
  403ea8:	lea    eax,[ebp-0x4]
  403eab:	push   eax
  403eac:	push   0x1
  403eae:	push   0x0
  403eb0:	push   0x403f30
  403eb5:	push   0x80000002
  403eba:	call   0x40130c
  403ebf:	test   eax,eax
  403ec1:	jne    0x403f10
  403ec3:	xor    eax,eax
  403ec5:	push   ebp
  403ec6:	push   0x403f09
  403ecb:	push   DWORD PTR fs:[eax]
  403ece:	mov    DWORD PTR fs:[eax],esp
  403ed1:	mov    DWORD PTR [ebp-0xc],0x4
  403ed8:	lea    eax,[ebp-0xc]
  403edb:	push   eax
  403edc:	lea    eax,[ebp-0x8]
  403edf:	push   eax
  403ee0:	push   0x0
  403ee2:	push   0x0
  403ee4:	push   0x403f4c
  403ee9:	mov    eax,DWORD PTR [ebp-0x4]
  403eec:	push   eax
  403eed:	call   0x401314
  403ef2:	xor    eax,eax
  403ef4:	pop    edx
  403ef5:	pop    ecx
  403ef6:	pop    ecx
  403ef7:	mov    DWORD PTR fs:[eax],edx
  403efa:	push   0x403f10
  403eff:	mov    eax,DWORD PTR [ebp-0x4]
  403f02:	push   eax
  403f03:	call   0x401304
  403f08:	ret    
  403f09:	jmp    0x40481c
  403f0e:	jmp    0x403eff
  403f10:	movzx  eax,WORD PTR ds:0x461024
  403f17:	and    ax,0xffc0
  403f1b:	movzx  edx,WORD PTR [ebp-0x8]
  403f1f:	and    dx,0x3f
  403f23:	or     ax,dx
  403f26:	mov    ds:0x461024,ax
  403f2c:	mov    esp,ebp
  403f2e:	pop    ebp
  403f2f:	ret    
  403f30:	push   ebx
  403f31:	dec    edi
  403f32:	inc    esi
  403f33:	push   esp
  403f34:	push   edi
  403f35:	inc    ecx
  403f36:	push   edx
  403f37:	inc    ebp
  403f38:	pop    esp
  403f39:	inc    edx
  403f3a:	outs   dx,DWORD PTR ds:[esi]
  403f3b:	jb     0x403fa9
  403f3d:	popa   
  403f3e:	outs   dx,BYTE PTR ds:[esi]
  403f3f:	fs pop esp
  403f41:	inc    esp
  403f42:	gs ins BYTE PTR es:[edi],dx
  403f44:	jo     0x403fae
  403f46:	imul   ebx,DWORD PTR [edx+edx*2+0x54],0x5046004c
  403f4e:	push   ebp
  403f4f:	dec    ebp
  403f50:	popa   
  403f51:	jae    0x403fbe
  403f53:	push   esi
  403f54:	popa   
  403f55:	ins    BYTE PTR es:[edi],dx
  403f56:	jne    0x403fbd
  403f58:	add    BYTE PTR [eax],al
  403f5a:	add    BYTE PTR [eax],al
  403f5c:	fninit 
  403f5e:	fldcw  WORD PTR ds:0x461024
  403f65:	ret    
  403f66:	mov    eax,eax
  403f68:	mov    al,0x4
  403f6a:	jmp    0x402ff0
  403f6f:	ret    
  403f70:	mov    al,0x5
  403f72:	jmp    0x402ff0
  403f77:	ret    
  403f78:	mov    eax,DWORD PTR [eax]
  403f7a:	mov    edx,eax
  403f7c:	mov    eax,edx
  403f7e:	ret    
  403f7f:	nop
  403f80:	push   esi
  403f81:	push   edi
  403f82:	mov    edi,edx
  403f84:	mov    esi,DWORD PTR [eax-0x2c]
  403f87:	xor    ecx,ecx
  403f89:	mov    cl,BYTE PTR [esi]
  403f8b:	inc    ecx
  403f8c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8e:	pop    edi
  403f8f:	pop    esi
  403f90:	ret    
  403f91:	lea    eax,[eax+0x0]
  403f94:	push   ebp
  403f95:	mov    ebp,esp
  403f97:	add    esp,0xfffffefc
  403f9d:	push   ebx
  403f9e:	push   esi
  403f9f:	xor    ecx,ecx
  403fa1:	mov    DWORD PTR [ebp-0x4],ecx
  403fa4:	mov    esi,edx
  403fa6:	mov    ebx,eax
  403fa8:	xor    eax,eax
  403faa:	push   ebp
  403fab:	push   0x40401b
  403fb0:	push   DWORD PTR fs:[eax]
  403fb3:	mov    DWORD PTR fs:[eax],esp
  403fb6:	lea    edx,[ebp-0x104]
  403fbc:	mov    eax,ebx
  403fbe:	call   0x403f80
  403fc3:	lea    edx,[ebp-0x104]
  403fc9:	lea    eax,[ebp-0x4]
  403fcc:	call   0x4051ec
  403fd1:	mov    eax,esi
  403fd3:	call   0x405248
  403fd8:	push   eax
  403fd9:	mov    eax,esi
  403fdb:	call   0x405418
  403fe0:	push   eax
  403fe1:	mov    eax,DWORD PTR [ebp-0x4]
  403fe4:	call   0x405248
  403fe9:	push   eax
  403fea:	mov    eax,DWORD PTR [ebp-0x4]
  403fed:	call   0x405418
  403ff2:	push   eax
  403ff3:	push   0x1
  403ff5:	push   0x800
  403ffa:	call   0x40125c
  403fff:	cmp    eax,0x2
  404002:	sete   bl
  404005:	xor    eax,eax
  404007:	pop    edx
  404008:	pop    ecx
  404009:	pop    ecx
  40400a:	mov    DWORD PTR fs:[eax],edx
  40400d:	push   0x404022
  404012:	lea    eax,[ebp-0x4]
  404015:	call   0x404f88
  40401a:	ret    
  40401b:	jmp    0x40481c
  404020:	jmp    0x404012
  404022:	mov    eax,ebx
  404024:	pop    esi
  404025:	pop    ebx
  404026:	mov    esp,ebp
  404028:	pop    ebp
  404029:	ret    
  40402a:	mov    eax,eax
  40402c:	mov    eax,DWORD PTR [eax-0x24]
  40402f:	test   eax,eax
  404031:	je     0x404035
  404033:	mov    eax,DWORD PTR [eax]
  404035:	ret    
  404036:	mov    eax,eax
  404038:	push   ebx
  404039:	mov    ebx,eax
  40403b:	mov    eax,ebx
  40403d:	call   0x404068
  404042:	call   0x402ea0
  404047:	mov    edx,eax
  404049:	mov    eax,ebx
  40404b:	call   0x4040ac
  404050:	pop    ebx
  404051:	ret    
  404052:	mov    eax,eax
  404054:	push   ebx
  404055:	mov    ebx,eax
  404057:	mov    eax,ebx
  404059:	call   0x404104
  40405e:	mov    eax,ebx
  404060:	call   0x402ebc
  404065:	pop    ebx
  404066:	ret    
  404067:	nop
  404068:	add    eax,0xffffffd8
  40406b:	mov    eax,DWORD PTR [eax]
  40406d:	ret    
  40406e:	mov    eax,eax
  404070:	test   dl,dl
  404072:	je     0x40407c
  404074:	add    esp,0xfffffff0
  404077:	call   0x4043ac
  40407c:	test   dl,dl
  40407e:	je     0x40408f
  404080:	call   0x404404
  404085:	pop    DWORD PTR fs:0x0
  40408c:	add    esp,0xc
  40408f:	ret    
  404090:	call   0x404454
  404095:	test   dl,dl
  404097:	jle    0x40409e
  404099:	call   0x4043fc
  40409e:	ret    
  40409f:	nop
  4040a0:	test   eax,eax
  4040a2:	je     0x4040ab
  4040a4:	mov    dl,0x1
  4040a6:	mov    ecx,DWORD PTR [eax]
  4040a8:	call   DWORD PTR [ecx-0x4]
  4040ab:	ret    
  4040ac:	push   ebx
  4040ad:	push   esi
  4040ae:	push   edi
  4040af:	mov    ebx,eax
  4040b1:	mov    edi,edx
  4040b3:	stos   DWORD PTR es:[edi],eax
  4040b4:	mov    ecx,DWORD PTR [ebx-0x28]
  4040b7:	xor    eax,eax
  4040b9:	push   ecx
  4040ba:	shr    ecx,0x2
  4040bd:	dec    ecx
  4040be:	rep stos DWORD PTR es:[edi],eax
  4040c0:	pop    ecx
  4040c1:	and    ecx,0x3
  4040c4:	rep stos BYTE PTR es:[edi],al
  4040c6:	mov    eax,edx
  4040c8:	mov    edx,esp
  4040ca:	mov    ecx,DWORD PTR [ebx-0x48]
  4040cd:	test   ecx,ecx
  4040cf:	je     0x4040d2
  4040d1:	push   ecx
  4040d2:	mov    ebx,DWORD PTR [ebx-0x24]
  4040d5:	test   ebx,ebx
  4040d7:	je     0x4040dd
  4040d9:	mov    ebx,DWORD PTR [ebx]
  4040db:	jmp    0x4040ca
  4040dd:	cmp    esp,edx
  4040df:	je     0x4040fe
  4040e1:	pop    ebx
  4040e2:	mov    ecx,DWORD PTR [ebx]
  4040e4:	add    ebx,0x4
  4040e7:	mov    esi,DWORD PTR [ebx+0x10]
  4040ea:	test   esi,esi
  4040ec:	je     0x4040f4
  4040ee:	mov    edi,DWORD PTR [ebx+0x14]
  4040f1:	mov    DWORD PTR [edi+eax*1],esi
  4040f4:	add    ebx,0x1c
  4040f7:	dec    ecx
  4040f8:	jne    0x4040e7
  4040fa:	cmp    esp,edx
  4040fc:	jne    0x4040e1
  4040fe:	pop    edi
  4040ff:	pop    esi
  404100:	pop    ebx
  404101:	ret    
  404102:	mov    eax,eax
  404104:	push   ebx
  404105:	push   esi
  404106:	mov    ebx,eax
  404108:	mov    esi,eax
  40410a:	mov    esi,DWORD PTR [esi]
  40410c:	mov    edx,DWORD PTR [esi-0x40]
  40410f:	mov    esi,DWORD PTR [esi-0x24]
  404112:	test   edx,edx
  404114:	je     0x40411d
  404116:	call   0x405b04
  40411b:	mov    eax,ebx
  40411d:	test   esi,esi
  40411f:	jne    0x40410a
  404121:	pop    esi
  404122:	pop    ebx
  404123:	ret    
  404124:	xchg   ecx,edx
  404126:	cmp    ecx,0xff000000
  40412c:	jae    0x40413f
  40412e:	cmp    ecx,0xfe000000
  404134:	jb     0x40413d
  404136:	movsx  ecx,cx
  404139:	add    ecx,DWORD PTR [eax]
  40413b:	jmp    DWORD PTR [ecx]
  40413d:	jmp    ecx
  40413f:	and    ecx,0xffffff
  404145:	add    ecx,eax
  404147:	mov    eax,edx
  404149:	mov    edx,DWORD PTR [ecx]
  40414b:	jmp    0x406ab0
  404150:	ret    
  404151:	lea    eax,[eax+0x0]
  404154:	push   ebp
  404155:	mov    ebp,esp
  404157:	add    esp,0xfffffff8
  40415a:	push   ebx
  40415b:	push   esi
  40415c:	push   edi
  40415d:	xor    ebx,ebx
  40415f:	mov    DWORD PTR [ebp-0x8],ebx
  404162:	mov    esi,ecx
  404164:	mov    DWORD PTR [ebp-0x4],edx
  404167:	mov    edi,eax
  404169:	xor    eax,eax
  40416b:	push   ebp
  40416c:	push   0x4041d8
  404171:	push   DWORD PTR fs:[eax]
  404174:	mov    DWORD PTR fs:[eax],esp
  404177:	xor    eax,eax
  404179:	mov    DWORD PTR [esi],eax
  40417b:	mov    edx,DWORD PTR [ebp-0x4]
  40417e:	mov    eax,DWORD PTR [edi]
  404180:	call   0x4041e8
  404185:	mov    ebx,eax
  404187:	test   ebx,ebx
  404189:	je     0x4041bc
  40418b:	mov    eax,DWORD PTR [ebx+0x14]
  40418e:	test   eax,eax
  404190:	je     0x4041a5
  404192:	add    edi,eax
  404194:	mov    DWORD PTR [esi],edi
  404196:	cmp    DWORD PTR [esi],0x0
  404199:	je     0x4041bc
  40419b:	mov    eax,DWORD PTR [esi]
  40419d:	push   eax
  40419e:	mov    eax,DWORD PTR [eax]
  4041a0:	call   DWORD PTR [eax+0x4]
  4041a3:	jmp    0x4041bc
  4041a5:	lea    ecx,[ebp-0x8]
  4041a8:	mov    edx,DWORD PTR [ebx+0x18]
  4041ab:	mov    eax,edi
  4041ad:	call   0x404124
  4041b2:	mov    edx,DWORD PTR [ebp-0x8]
  4041b5:	mov    eax,esi
  4041b7:	call   0x406ab0
  4041bc:	cmp    DWORD PTR [esi],0x0
  4041bf:	setne  bl
  4041c2:	xor    eax,eax
  4041c4:	pop    edx
  4041c5:	pop    ecx
  4041c6:	pop    ecx
  4041c7:	mov    DWORD PTR fs:[eax],edx
  4041ca:	push   0x4041df
  4041cf:	lea    eax,[ebp-0x8]
  4041d2:	call   0x406a98
  4041d7:	ret    
  4041d8:	jmp    0x40481c
  4041dd:	jmp    0x4041cf
  4041df:	mov    eax,ebx
  4041e1:	pop    edi
  4041e2:	pop    esi
  4041e3:	pop    ebx
  4041e4:	pop    ecx
  4041e5:	pop    ecx
  4041e6:	pop    ebp
  4041e7:	ret    
  4041e8:	push   ebx
  4041e9:	push   esi
  4041ea:	mov    ebx,eax
  4041ec:	mov    eax,DWORD PTR [ebx-0x48]
  4041ef:	test   eax,eax
  4041f1:	je     0x40421c
  4041f3:	mov    ecx,DWORD PTR [eax]
  4041f5:	add    eax,0x4
  4041f8:	mov    esi,DWORD PTR [edx]
  4041fa:	cmp    esi,DWORD PTR [eax]
  4041fc:	jne    0x404216
  4041fe:	mov    esi,DWORD PTR [edx+0x4]
  404201:	cmp    esi,DWORD PTR [eax+0x4]
  404204:	jne    0x404216
  404206:	mov    esi,DWORD PTR [edx+0x8]
  404209:	cmp    esi,DWORD PTR [eax+0x8]
  40420c:	jne    0x404216
  40420e:	mov    esi,DWORD PTR [edx+0xc]
  404211:	cmp    esi,DWORD PTR [eax+0xc]
  404214:	je     0x404229
  404216:	add    eax,0x1c
  404219:	dec    ecx
  40421a:	jne    0x4041f8
  40421c:	mov    ebx,DWORD PTR [ebx-0x24]
  40421f:	test   ebx,ebx
  404221:	je     0x404227
  404223:	mov    ebx,DWORD PTR [ebx]
  404225:	jmp    0x4041ec
  404227:	xor    eax,eax
  404229:	pop    esi
  40422a:	pop    ebx
  40422b:	ret    
  40422c:	push   ebx
  40422d:	push   esi
  40422e:	mov    esi,edx
  404230:	mov    ebx,eax
  404232:	test   ebx,ebx
  404234:	je     0x404243
  404236:	mov    edx,esi
  404238:	mov    eax,DWORD PTR [ebx]
  40423a:	call   0x4042b4
  40423f:	test   al,al
  404241:	jne    0x404248
  404243:	xor    eax,eax
  404245:	pop    esi
  404246:	pop    ebx
  404247:	ret    
  404248:	mov    al,0x1
  40424a:	pop    esi
  40424b:	pop    ebx
  40424c:	ret    
  40424d:	lea    eax,[eax+0x0]
  404250:	test   eax,eax
  404252:	je     0x40426a
  404254:	mov    ecx,eax
  404256:	mov    ecx,DWORD PTR [ecx]
  404258:	cmp    ecx,edx
  40425a:	je     0x40426a
  40425c:	mov    ecx,DWORD PTR [ecx-0x24]
  40425f:	test   ecx,ecx
  404261:	jne    0x404256
  404263:	mov    al,0xa
  404265:	jmp    0x402ff0
  40426a:	ret    
  40426b:	nop
  40426c:	push   edi
  40426d:	xchg   esi,eax
  40426e:	jmp    0x404272
  404270:	mov    esi,DWORD PTR [esi]
  404272:	mov    edi,DWORD PTR [esi-0x30]
  404275:	test   edi,edi
  404277:	je     0x404286
  404279:	movzx  ecx,WORD PTR [edi]
  40427c:	push   ecx
  40427d:	add    edi,0x2
  404280:	repnz scas ax,WORD PTR es:[edi]
  404283:	je     0x40428f
  404285:	pop    ecx
  404286:	mov    esi,DWORD PTR [esi-0x24]
  404289:	test   esi,esi
  40428b:	jne    0x404270
  40428d:	pop    edi
  40428e:	ret    
  40428f:	pop    eax
  404290:	add    eax,eax
  404292:	sub    eax,ecx
  404294:	mov    esi,DWORD PTR [edi+eax*2-0x4]
  404298:	pop    edi
  404299:	ret    
  40429a:	mov    eax,eax
  40429c:	push   eax
  40429d:	push   ecx
  40429e:	mov    eax,DWORD PTR [eax]
  4042a0:	call   0x40426c
  4042a5:	pop    ecx
  4042a6:	pop    eax
  4042a7:	je     0x4042ab
  4042a9:	jmp    esi
  4042ab:	pop    ecx
  4042ac:	jmp    0x403338
  4042b1:	ret    
  4042b2:	mov    eax,eax
  4042b4:	jmp    0x4042b8
  4042b6:	mov    eax,DWORD PTR [eax]
  4042b8:	cmp    eax,edx
  4042ba:	je     0x4042c4
  4042bc:	mov    eax,DWORD PTR [eax-0x24]
  4042bf:	test   eax,eax
  4042c1:	jne    0x4042b6
  4042c3:	ret    
  4042c4:	mov    al,0x1
  4042c6:	ret    
  4042c7:	nop
  4042c8:	add    eax,0xffffffc4
  4042cb:	mov    eax,DWORD PTR [eax]
  4042cd:	ret    
  4042ce:	mov    eax,eax
  4042d0:	mov    eax,0x8000ffff
  4042d5:	ret    
  4042d6:	mov    eax,eax
  4042d8:	ret    
  4042d9:	lea    eax,[eax+0x0]
  4042dc:	ret    
  4042dd:	lea    eax,[eax+0x0]
  4042e0:	ret    
  4042e1:	lea    eax,[eax+0x0]
  4042e4:	push   esi
  4042e5:	mov    si,WORD PTR [edx]
  4042e8:	or     si,si
  4042eb:	je     0x404304
  4042ed:	cmp    si,0xc000
  4042f2:	jae    0x404304
  4042f4:	push   eax
  4042f5:	mov    eax,DWORD PTR [eax]
  4042f7:	call   0x40426c
  4042fc:	pop    eax
  4042fd:	je     0x404304
  4042ff:	mov    ecx,esi
  404301:	pop    esi
  404302:	jmp    ecx
  404304:	pop    esi
  404305:	mov    ecx,DWORD PTR [eax]
  404307:	jmp    DWORD PTR [ecx-0x10]
  40430a:	ret    
  40430b:	nop
  40430c:	push   ebx
  40430d:	push   esi
  40430e:	push   edi
  40430f:	xor    ecx,ecx
  404311:	xor    edi,edi
  404313:	mov    bl,BYTE PTR [edx]
  404315:	jmp    0x404319
  404317:	mov    eax,DWORD PTR [eax]
  404319:	mov    esi,DWORD PTR [eax-0x34]
  40431c:	test   esi,esi
  40431e:	je     0x404335
  404320:	mov    di,WORD PTR [esi]
  404323:	add    esi,0x2
  404326:	mov    cl,BYTE PTR [esi+0x6]
  404329:	cmp    cl,bl
  40432b:	je     0x404342
  40432d:	mov    cx,WORD PTR [esi]
  404330:	add    esi,ecx
  404332:	dec    edi
  404333:	jne    0x404326
  404335:	mov    eax,DWORD PTR [eax-0x24]
  404338:	test   eax,eax
  40433a:	jne    0x404317
  40433c:	jmp    0x404356
  40433e:	mov    bl,BYTE PTR [edx]
  404340:	jmp    0x40432d
  404342:	mov    ch,0x0
  404344:	mov    bl,BYTE PTR [ecx+esi*1+0x6]
  404348:	xor    bl,BYTE PTR [ecx+edx*1]
  40434b:	and    bl,0xdf
  40434e:	jne    0x40433e
  404350:	dec    ecx
  404351:	jne    0x404344
  404353:	mov    eax,DWORD PTR [esi+0x2]
  404356:	pop    edi
  404357:	pop    esi
  404358:	pop    ebx
  404359:	ret    
  40435a:	mov    eax,eax
  40435c:	push   ebx
  40435d:	push   esi
  40435e:	push   edi
  40435f:	xor    ecx,ecx
  404361:	xor    edi,edi
  404363:	mov    bl,BYTE PTR [edx]
  404365:	push   eax
  404366:	mov    eax,DWORD PTR [eax]
  404368:	mov    esi,DWORD PTR [eax-0x38]
  40436b:	test   esi,esi
  40436d:	je     0x404383
  40436f:	mov    di,WORD PTR [esi]
  404372:	add    esi,0x6
  404375:	mov    cl,BYTE PTR [esi+0x6]
  404378:	cmp    cl,bl
  40437a:	je     0x404394
  40437c:	lea    esi,[ecx+esi*1+0x7]
  404380:	dec    edi
  404381:	jne    0x404375
  404383:	mov    eax,DWORD PTR [eax-0x24]
  404386:	test   eax,eax
  404388:	jne    0x404366
  40438a:	pop    edx
  40438b:	jmp    0x4043a8
  40438d:	mov    bl,BYTE PTR [edx]
  40438f:	mov    cl,BYTE PTR [esi+0x6]
  404392:	jmp    0x40437c
  404394:	mov    bl,BYTE PTR [ecx+esi*1+0x6]
  404398:	xor    bl,BYTE PTR [ecx+edx*1]
  40439b:	and    bl,0xdf
  40439e:	jne    0x40438d
  4043a0:	dec    ecx
  4043a1:	jne    0x404394
  4043a3:	mov    eax,DWORD PTR [esi]
  4043a5:	pop    edx
  4043a6:	add    eax,edx
  4043a8:	pop    edi
  4043a9:	pop    esi
  4043aa:	pop    ebx
  4043ab:	ret    
  4043ac:	push   edx
  4043ad:	push   ecx
  4043ae:	push   ebx
  4043af:	test   dl,dl
  4043b1:	jl     0x4043b6
  4043b3:	call   DWORD PTR [eax-0xc]
  4043b6:	xor    edx,edx
  4043b8:	lea    ecx,[esp+0x10]
  4043bc:	mov    ebx,DWORD PTR fs:[edx]
  4043bf:	mov    DWORD PTR [ecx],ebx
  4043c1:	mov    DWORD PTR [ecx+0x8],ebp
  4043c4:	mov    DWORD PTR [ecx+0x4],0x4043d5
  4043cb:	mov    DWORD PTR [ecx+0xc],eax
  4043ce:	mov    DWORD PTR fs:[edx],ecx
  4043d1:	pop    ebx
  4043d2:	pop    ecx
  4043d3:	pop    edx
  4043d4:	ret    
  4043d5:	jmp    0x404568
  4043da:	mov    eax,DWORD PTR [esp+0x2c]
  4043de:	mov    eax,DWORD PTR [eax+0xc]
  4043e1:	test   eax,eax
  4043e3:	je     0x4043f3
  4043e5:	mov    ecx,DWORD PTR [eax]
  4043e7:	mov    dl,0x81
  4043e9:	push   eax
  4043ea:	call   DWORD PTR [ecx-0x4]
  4043ed:	pop    eax
  4043ee:	call   0x4043fc
  4043f3:	call   0x404924
  4043f8:	ret    
  4043f9:	lea    eax,[eax+0x0]
  4043fc:	mov    edx,DWORD PTR [eax]
  4043fe:	call   DWORD PTR [edx-0x8]
  404401:	ret    
  404402:	mov    eax,eax
  404404:	push   ebp
  404405:	mov    ebp,esp
  404407:	push   ecx
  404408:	push   ebx
  404409:	push   esi
  40440a:	push   edi
  40440b:	mov    DWORD PTR [ebp-0x4],eax
  40440e:	xor    edx,edx
  404410:	push   ebp
  404411:	push   0x404433
  404416:	push   DWORD PTR fs:[edx]
  404419:	mov    DWORD PTR fs:[edx],esp
  40441c:	mov    eax,DWORD PTR [ebp-0x4]
  40441f:	mov    edx,DWORD PTR [eax]
  404421:	call   DWORD PTR [edx-0x1c]
  404424:	mov    eax,DWORD PTR [ebp-0x4]
  404427:	pop    DWORD PTR fs:0x0
  40442e:	add    esp,0x8
  404431:	jmp    0x40444c
  404433:	jmp    0x404568
  404438:	mov    dl,0x1
  40443a:	mov    eax,DWORD PTR [ebp-0x4]
  40443d:	call   0x404454
  404442:	call   0x404924
  404447:	call   0x404978
  40444c:	pop    edi
  40444d:	pop    esi
  40444e:	pop    ebx
  40444f:	pop    ecx
  404450:	pop    ebp
  404451:	ret    
  404452:	mov    eax,eax
  404454:	test   dl,dl
  404456:	jg     0x404459
  404458:	ret    
  404459:	push   eax
  40445a:	push   edx
  40445b:	mov    edx,DWORD PTR [eax]
  40445d:	call   DWORD PTR [edx-0x18]
  404460:	pop    edx
  404461:	pop    eax
  404462:	ret    
  404463:	nop
  404464:	cmp    BYTE PTR ds:0x461028,0x1
  40446b:	jbe    0x40447e
  40446d:	push   0x0
  40446f:	push   0x0
  404471:	push   0x0
  404473:	push   0xeedfadf
  404478:	call   DWORD PTR ds:0x46e014
  40447e:	ret    
  40447f:	nop
  404480:	cmp    BYTE PTR ds:0x461028,0x0
  404487:	je     0x4044a0
  404489:	push   eax
  40448a:	push   eax
  40448b:	push   edx
  40448c:	push   esp
  40448d:	push   0x2
  40448f:	push   0x0
  404491:	push   0xeedfae4
  404496:	call   DWORD PTR ds:0x46e014
  40449c:	add    esp,0x8
  40449f:	pop    eax
  4044a0:	ret    
  4044a1:	lea    eax,[eax+0x0]
  4044a4:	push   esp
  4044a5:	push   0x1
  4044a7:	push   0x0
  4044a9:	push   0xeedfae0
  4044ae:	call   DWORD PTR ds:0x46e014
  4044b4:	add    esp,0x4
  4044b7:	pop    eax
  4044b8:	ret    
  4044b9:	lea    eax,[eax+0x0]
  4044bc:	cmp    BYTE PTR ds:0x461028,0x1
  4044c3:	jbe    0x4044ce
  4044c5:	push   eax
  4044c6:	push   DWORD PTR [ebx+0x4]
  4044c9:	jmp    0x4044a4
  4044ce:	ret    
  4044cf:	nop
  4044d0:	cmp    BYTE PTR ds:0x461028,0x1
  4044d7:	jbe    0x4044e0
  4044d9:	push   eax
  4044da:	push   ebx
  4044db:	jmp    0x4044a4
  4044e0:	ret    
  4044e1:	lea    eax,[eax+0x0]
  4044e4:	test   ecx,ecx
  4044e6:	je     0x404501
  4044e8:	mov    eax,DWORD PTR [ecx+0x1]
  4044eb:	cmp    BYTE PTR [ecx],0xe9
  4044ee:	je     0x4044fc
  4044f0:	cmp    BYTE PTR [ecx],0xeb
  4044f3:	jne    0x404501
  4044f5:	movsx  eax,al
  4044f8:	inc    ecx
  4044f9:	inc    ecx
  4044fa:	jmp    0x4044ff
  4044fc:	add    ecx,0x5
  4044ff:	add    ecx,eax
  404501:	ret    
  404502:	mov    eax,eax
  404504:	cmp    BYTE PTR ds:0x461028,0x1
  40450b:	jbe    0x40452a
  40450d:	push   eax
  40450e:	push   edx
  40450f:	push   ecx
  404510:	call   0x4044e4
  404515:	push   ecx
  404516:	push   esp
  404517:	push   0x1
  404519:	push   0x0
  40451b:	push   0xeedfae1
  404520:	call   DWORD PTR ds:0x46e014
  404526:	pop    ecx
  404527:	pop    ecx
  404528:	pop    edx
  404529:	pop    eax
  40452a:	ret    
  40452b:	nop
  40452c:	cmp    BYTE PTR ds:0x461028,0x1
  404533:	jbe    0x404547
  404535:	push   edx
  404536:	push   esp
  404537:	push   0x1
  404539:	push   0x0
  40453b:	push   0xeedfae2
  404540:	call   DWORD PTR ds:0x46e014
  404546:	pop    edx
  404547:	ret    
  404548:	push   eax
  404549:	push   edx
  40454a:	cmp    BYTE PTR ds:0x461028,0x1
  404551:	jbe    0x404563
  404553:	push   esp
  404554:	push   0x2
  404556:	push   0x0
  404558:	push   0xeedfae3
  40455d:	call   DWORD PTR ds:0x46e014
  404563:	pop    edx
  404564:	pop    eax
  404565:	ret    
  404566:	mov    eax,eax
  404568:	mov    eax,DWORD PTR [esp+0x4]
  40456c:	test   DWORD PTR [eax+0x4],0x6
  404573:	jne    0x40468c
  404579:	cmp    DWORD PTR [eax],0xeedfade
  40457f:	mov    edx,DWORD PTR [eax+0x18]
  404582:	mov    ecx,DWORD PTR [eax+0x14]
  404585:	je     0x4045f5
  404587:	cld    
  404588:	call   0x403f5c
  40458d:	mov    edx,DWORD PTR ds:0x46e010
  404593:	test   edx,edx
  404595:	je     0x40468c
  40459b:	call   edx
  40459d:	test   eax,eax
  40459f:	je     0x40468c
  4045a5:	mov    edx,DWORD PTR [esp+0xc]
  4045a9:	mov    ecx,DWORD PTR [esp+0x4]
  4045ad:	cmp    DWORD PTR [ecx],0xeefface
  4045b3:	je     0x4045ec
  4045b5:	call   0x404480
  4045ba:	cmp    BYTE PTR ds:0x46102c,0x0
  4045c1:	jbe    0x4045ec
  4045c3:	cmp    BYTE PTR ds:0x461028,0x0
  4045ca:	ja     0x4045ec
  4045cc:	lea    ecx,[esp+0x4]
  4045d0:	push   eax
  4045d1:	push   ecx
  4045d2:	call   0x401244
  4045d7:	cmp    eax,0x0
  4045da:	pop    eax
  4045db:	je     0x40468c
  4045e1:	mov    edx,eax
  4045e3:	mov    eax,DWORD PTR [esp+0x4]
  4045e7:	mov    ecx,DWORD PTR [eax+0xc]
  4045ea:	jmp    0x40461c
  4045ec:	mov    edx,eax
  4045ee:	mov    eax,DWORD PTR [esp+0x4]
  4045f2:	mov    ecx,DWORD PTR [eax+0xc]
  4045f5:	cmp    BYTE PTR ds:0x46102c,0x1
  4045fc:	jbe    0x40461c
  4045fe:	cmp    BYTE PTR ds:0x461028,0x0
  404605:	ja     0x40461c
  404607:	push   eax
  404608:	lea    eax,[esp+0x8]
  40460c:	push   edx
  40460d:	push   ecx
  40460e:	push   eax
  40460f:	call   0x401244
  404614:	cmp    eax,0x0
  404617:	pop    ecx
  404618:	pop    edx
  404619:	pop    eax
  40461a:	je     0x40468c
  40461c:	or     DWORD PTR [eax+0x4],0x2
  404620:	push   ebx
  404621:	xor    ebx,ebx
  404623:	push   esi
  404624:	push   edi
  404625:	push   ebp
  404626:	mov    ebx,DWORD PTR fs:[ebx]
  404629:	push   ebx
  40462a:	push   eax
  40462b:	push   edx
  40462c:	push   ecx
  40462d:	mov    edx,DWORD PTR [esp+0x28]
  404631:	push   0x0
  404633:	push   eax
  404634:	push   0x404640
  404639:	push   edx
  40463a:	call   DWORD PTR ds:0x46e018
  404640:	mov    edi,DWORD PTR [esp+0x28]
  404644:	call   0x407080
  404649:	push   DWORD PTR [eax+0x0]
  40464f:	mov    DWORD PTR [eax+0x0],esp
  404655:	mov    ebp,DWORD PTR [edi+0x8]
  404658:	mov    ebx,DWORD PTR [edi+0x4]
  40465b:	mov    DWORD PTR [edi+0x4],0x40466c
  404662:	add    ebx,0x5
  404665:	call   0x4044d0
  40466a:	jmp    ebx
  40466c:	jmp    0x4048c4
  404671:	call   0x407080
  404676:	mov    ecx,DWORD PTR [eax+0x0]
  40467c:	mov    edx,DWORD PTR [ecx]
  40467e:	mov    DWORD PTR [eax+0x0],edx
  404684:	mov    eax,DWORD PTR [ecx+0x8]
  404687:	jmp    0x4040a0
  40468c:	mov    eax,0x1
  404691:	ret    
  404692:	mov    eax,eax
  404694:	mov    eax,DWORD PTR [esp+0x4]
  404698:	test   DWORD PTR [eax+0x4],0x6
  40469f:	jne    0x404814
  4046a5:	cmp    DWORD PTR [eax],0xeedfade
  4046ab:	je     0x4046cc
  4046ad:	cld    
  4046ae:	call   0x403f5c
  4046b3:	mov    edx,DWORD PTR ds:0x46e00c
  4046b9:	test   edx,edx
  4046bb:	je     0x404814
  4046c1:	call   edx
  4046c3:	test   eax,eax
  4046c5:	jne    0x4046d1
  4046c7:	jmp    0x404814
  4046cc:	mov    eax,DWORD PTR [eax+0x18]
  4046cf:	mov    eax,DWORD PTR [eax]
  4046d1:	mov    edx,DWORD PTR [esp+0x8]
  4046d5:	push   ebx
  4046d6:	push   esi
  4046d7:	push   edi
  4046d8:	push   ebp
  4046d9:	mov    ecx,DWORD PTR [edx+0x4]
  4046dc:	mov    ebx,DWORD PTR [ecx+0x5]
  4046df:	lea    esi,[ecx+0x9]
  4046e2:	mov    ebp,eax
  4046e4:	mov    eax,DWORD PTR [esi]
  4046e6:	test   eax,eax
  4046e8:	je     0x40472d
  4046ea:	mov    edi,ebp
  4046ec:	jmp    0x4046f0
  4046ee:	mov    edi,DWORD PTR [edi]
  4046f0:	mov    eax,DWORD PTR [eax]
  4046f2:	cmp    eax,edi
  4046f4:	je     0x40472d
  4046f6:	mov    ecx,DWORD PTR [eax-0x28]
  4046f9:	cmp    ecx,DWORD PTR [edi-0x28]
  4046fc:	jne    0x404715
  4046fe:	mov    eax,DWORD PTR [eax-0x2c]
  404701:	mov    edx,DWORD PTR [edi-0x2c]
  404704:	xor    ecx,ecx
  404706:	mov    cl,BYTE PTR [eax]
  404708:	cmp    cl,BYTE PTR [edx]
  40470a:	jne    0x404715
  40470c:	inc    eax
  40470d:	inc    edx
  40470e:	call   0x403758
  404713:	je     0x40472d
  404715:	mov    edi,DWORD PTR [edi-0x24]
  404718:	mov    eax,DWORD PTR [esi]
  40471a:	test   edi,edi
  40471c:	jne    0x4046ee
  40471e:	add    esi,0x8
  404721:	dec    ebx
  404722:	jne    0x4046e4
  404724:	pop    ebp
  404725:	pop    edi
  404726:	pop    esi
  404727:	pop    ebx
  404728:	jmp    0x404814
  40472d:	mov    eax,DWORD PTR [esp+0x14]
  404731:	cmp    DWORD PTR [eax],0xeedfade
  404737:	mov    edx,DWORD PTR [eax+0x18]
  40473a:	mov    ecx,DWORD PTR [eax+0x14]
  40473d:	je     0x404780
  40473f:	call   DWORD PTR ds:0x46e010
  404745:	mov    edx,DWORD PTR [esp+0x1c]
  404749:	call   0x404480
  40474e:	cmp    BYTE PTR ds:0x46102c,0x0
  404755:	jbe    0x404775
  404757:	cmp    BYTE PTR ds:0x461028,0x0
  40475e:	ja     0x404775
  404760:	lea    ecx,[esp+0x4]
  404764:	push   eax
  404765:	push   ecx
  404766:	call   0x401244
  40476b:	cmp    eax,0x0
  40476e:	pop    eax
  40476f:	je     0x404814
  404775:	mov    edx,eax
  404777:	mov    eax,DWORD PTR [esp+0x14]
  40477b:	mov    ecx,DWORD PTR [eax+0xc]
  40477e:	jmp    0x4047a7
  404780:	cmp    BYTE PTR ds:0x46102c,0x1
  404787:	jbe    0x4047a7
  404789:	cmp    BYTE PTR ds:0x461028,0x0
  404790:	ja     0x4047a7
  404792:	push   eax
  404793:	lea    eax,[esp+0x8]
  404797:	push   edx
  404798:	push   ecx
  404799:	push   eax
  40479a:	call   0x401244
  40479f:	cmp    eax,0x0
  4047a2:	pop    ecx
  4047a3:	pop    edx
  4047a4:	pop    eax
  4047a5:	je     0x404814
  4047a7:	xor    ebx,ebx
  4047a9:	mov    ebx,DWORD PTR fs:[ebx]
  4047ac:	push   ebx
  4047ad:	push   eax
  4047ae:	push   edx
  4047af:	push   ecx
  4047b0:	mov    edx,DWORD PTR [esp+0x28]
  4047b4:	or     DWORD PTR [eax+0x4],0x2
  4047b8:	push   esi
  4047b9:	push   0x0
  4047bb:	push   eax
  4047bc:	push   0x4047c8
  4047c1:	push   edx
  4047c2:	call   DWORD PTR ds:0x46e018
  4047c8:	pop    ebx
  4047c9:	mov    edi,DWORD PTR [esp+0x28]
  4047cd:	call   0x407080
  4047d2:	push   DWORD PTR [eax+0x0]
  4047d8:	mov    DWORD PTR [eax+0x0],esp
  4047de:	mov    ebp,DWORD PTR [edi+0x8]
  4047e1:	mov    DWORD PTR [edi+0x4],0x4047f4
  4047e8:	mov    eax,DWORD PTR [esp+0x8]
  4047ec:	call   0x4044bc
  4047f1:	jmp    DWORD PTR [ebx+0x4]
  4047f4:	jmp    0x4048c4
  4047f9:	call   0x407080
  4047fe:	mov    ecx,DWORD PTR [eax+0x0]
  404804:	mov    edx,DWORD PTR [ecx]
  404806:	mov    DWORD PTR [eax+0x0],edx
  40480c:	mov    eax,DWORD PTR [ecx+0x8]
  40480f:	jmp    0x4040a0
  404814:	mov    eax,0x1
  404819:	ret    
  40481a:	mov    eax,eax
  40481c:	mov    eax,DWORD PTR [esp+0x4]
  404820:	test   DWORD PTR [eax+0x4],0x6
  404827:	je     0x4048bc
  40482d:	push   ebx
  40482e:	xor    ebx,ebx
  404830:	push   esi
  404831:	push   edi
  404832:	push   ebp
  404833:	push   ebp
  404834:	push   0x40489c
  404839:	push   DWORD PTR fs:[ebx]
  40483c:	mov    DWORD PTR fs:[ebx],esp
  40483f:	mov    ebx,DWORD PTR fs:[ebx]
  404842:	mov    edx,DWORD PTR [eax+0x18]
  404845:	mov    ecx,DWORD PTR [eax+0x14]
  404848:	push   ebx
  404849:	push   eax
  40484a:	push   edx
  40484b:	push   ecx
  40484c:	mov    edi,DWORD PTR [esp+0x34]
  404850:	call   0x407080
  404855:	push   DWORD PTR [eax+0x0]
  40485b:	mov    DWORD PTR [eax+0x0],esp
  404861:	mov    ecx,DWORD PTR [edi+0x4]
  404864:	mov    ebp,DWORD PTR [edi+0x8]
  404867:	mov    DWORD PTR [edi+0x4],0x40489c
  40486e:	add    ecx,0x5
  404871:	call   0x404504
  404876:	call   ecx
  404878:	call   0x407080
  40487d:	mov    ecx,DWORD PTR [eax+0x0]
  404883:	mov    edx,DWORD PTR [ecx]
  404885:	mov    DWORD PTR [eax+0x0],edx
  40488b:	add    esp,0x14
  40488e:	xor    eax,eax
  404890:	pop    edx
  404891:	pop    ecx
  404892:	pop    ecx
  404893:	mov    DWORD PTR fs:[eax],edx
  404896:	pop    ebp
  404897:	pop    edi
  404898:	pop    esi
  404899:	pop    ebx
  40489a:	jmp    0x4048bc
  40489c:	jmp    0x4048c4
  4048a1:	call   0x407080
  4048a6:	mov    ecx,DWORD PTR [eax+0x0]
  4048ac:	mov    edx,DWORD PTR [ecx]
  4048ae:	mov    DWORD PTR [eax+0x0],edx
  4048b4:	mov    eax,DWORD PTR [ecx+0x8]
  4048b7:	jmp    0x4040a0
  4048bc:	mov    eax,0x1
  4048c1:	ret    
  4048c2:	mov    eax,eax
  4048c4:	mov    eax,DWORD PTR [esp+0x4]
  4048c8:	mov    edx,DWORD PTR [esp+0x8]
  4048cc:	test   DWORD PTR [eax+0x4],0x6
  4048d3:	je     0x4048f4
  4048d5:	mov    ecx,DWORD PTR [edx+0x4]
  4048d8:	mov    DWORD PTR [edx+0x4],0x4048f4
  4048df:	push   ebx
  4048e0:	push   esi
  4048e1:	push   edi
  4048e2:	push   ebp
  4048e3:	mov    ebp,DWORD PTR [edx+0x8]
  4048e6:	add    ecx,0x5
  4048e9:	call   0x404504
  4048ee:	call   ecx
  4048f0:	pop    ebp
  4048f1:	pop    edi
  4048f2:	pop    esi
  4048f3:	pop    ebx
  4048f4:	mov    eax,0x1
  4048f9:	ret    
  4048fa:	mov    eax,eax
  4048fc:	or     eax,eax
  4048fe:	jne    0x40490a
  404900:	mov    eax,0xd8
  404905:	call   0x404ea8
  40490a:	pop    edx
  40490b:	push   esp
  40490c:	push   ebp
  40490d:	push   edi
  40490e:	push   esi
  40490f:	push   ebx
  404910:	push   eax
  404911:	push   edx
  404912:	push   esp
  404913:	push   0x7
  404915:	push   0x1
  404917:	push   0xeedfade
  40491c:	push   edx
  40491d:	jmp    DWORD PTR ds:0x46e014
  404923:	ret    
  404924:	mov    eax,DWORD PTR [esp+0x30]
  404928:	mov    DWORD PTR [eax+0x4],0x40496f
  40492f:	call   0x407080
  404934:	mov    edx,DWORD PTR [eax+0x0]
  40493a:	mov    ecx,DWORD PTR [edx]
  40493c:	mov    DWORD PTR [eax+0x0],ecx
  404942:	mov    eax,DWORD PTR [edx+0xc]
  404945:	and    DWORD PTR [eax+0x4],0xfffffffd
  404949:	cmp    DWORD PTR [eax],0xeedfade
  40494f:	je     0x40495e
  404951:	mov    eax,DWORD PTR [edx+0x8]
  404954:	call   0x4040a0
  404959:	call   0x404464
  40495e:	xor    eax,eax
  404960:	add    esp,0x14
  404963:	mov    edx,DWORD PTR fs:[eax]
  404966:	pop    ecx
  404967:	mov    edx,DWORD PTR [edx]
  404969:	mov    DWORD PTR [ecx],edx
  40496b:	pop    ebp
  40496c:	pop    edi
  40496d:	pop    esi
  40496e:	pop    ebx
  40496f:	mov    eax,0x1
  404974:	ret    
  404975:	lea    eax,[eax+0x0]
  404978:	call   0x407080
  40497d:	mov    edx,DWORD PTR [eax+0x0]
  404983:	mov    ecx,DWORD PTR [edx]
  404985:	mov    DWORD PTR [eax+0x0],ecx
  40498b:	mov    eax,DWORD PTR [edx+0x8]
  40498e:	call   0x4040a0
  404993:	pop    edx
  404994:	mov    esp,DWORD PTR [esp+0x2c]
  404998:	xor    eax,eax
  40499a:	pop    ecx
  40499b:	mov    DWORD PTR fs:[eax],ecx
  40499e:	pop    eax
  40499f:	pop    ebp
  4049a0:	call   0x40452c
  4049a5:	jmp    edx
  4049a7:	ret    
  4049a8:	xor    edx,edx
  4049aa:	mov    ecx,DWORD PTR [esp+0x8]
  4049ae:	mov    eax,DWORD PTR [esp+0x4]
  4049b2:	add    ecx,0x5
  4049b5:	mov    DWORD PTR fs:[edx],eax
  4049b8:	call   ecx
  4049ba:	ret    0xc
  4049bd:	ret    
  4049be:	mov    eax,eax
  4049c0:	push   ebp
  4049c1:	mov    ebp,esp
  4049c3:	mov    edx,DWORD PTR [ebp+0x8]
  4049c6:	mov    eax,DWORD PTR [edx]
  4049c8:	cmp    eax,0xc0000092
  4049cd:	jg     0x4049fb
  4049cf:	je     0x404a2d
  4049d1:	cmp    eax,0xc000008e
  4049d6:	jg     0x4049ed
  4049d8:	je     0x404a31
  4049da:	sub    eax,0xc0000005
  4049df:	je     0x404a3d
  4049e1:	sub    eax,0x87
  4049e6:	je     0x404a25
  4049e8:	dec    eax
  4049e9:	je     0x404a39
  4049eb:	jmp    0x404a4d
  4049ed:	add    eax,0x3fffff71
  4049f2:	sub    eax,0x2
  4049f5:	jb     0x404a2d
  4049f7:	je     0x404a29
  4049f9:	jmp    0x404a4d
  4049fb:	cmp    eax,0xc0000096
  404a00:	jg     0x404a13
  404a02:	je     0x404a41
  404a04:	sub    eax,0xc0000093
  404a09:	je     0x404a39
  404a0b:	dec    eax
  404a0c:	je     0x404a21
  404a0e:	dec    eax
  404a0f:	je     0x404a35
  404a11:	jmp    0x404a4d
  404a13:	sub    eax,0xc00000fd
  404a18:	je     0x404a49
  404a1a:	sub    eax,0x3d
  404a1d:	je     0x404a45
  404a1f:	jmp    0x404a4d
  404a21:	mov    al,0xc8
  404a23:	jmp    0x404a4f
  404a25:	mov    al,0xc9
  404a27:	jmp    0x404a4f
  404a29:	mov    al,0xcd
  404a2b:	jmp    0x404a4f
  404a2d:	mov    al,0xcf
  404a2f:	jmp    0x404a4f
  404a31:	mov    al,0xc8
  404a33:	jmp    0x404a4f
  404a35:	mov    al,0xd7
  404a37:	jmp    0x404a4f
  404a39:	mov    al,0xce
  404a3b:	jmp    0x404a4f
  404a3d:	mov    al,0xd8
  404a3f:	jmp    0x404a4f
  404a41:	mov    al,0xda
  404a43:	jmp    0x404a4f
  404a45:	mov    al,0xd9
  404a47:	jmp    0x404a4f
  404a49:	mov    al,0xca
  404a4b:	jmp    0x404a4f
  404a4d:	mov    al,0xff
  404a4f:	movzx  eax,al
  404a52:	mov    edx,DWORD PTR [edx+0xc]
  404a55:	call   0x402f98
  404a5a:	pop    ebp
  404a5b:	ret    0x4
  404a5e:	mov    eax,eax
  404a60:	mov    eax,DWORD PTR [esp+0x4]
  404a64:	test   DWORD PTR [eax+0x4],0x6
  404a6b:	jne    0x404afa
  404a71:	cmp    BYTE PTR ds:0x461028,0x0
  404a78:	ja     0x404a89
  404a7a:	lea    eax,[esp+0x4]
  404a7e:	push   eax
  404a7f:	call   0x401244
  404a84:	cmp    eax,0x0
  404a87:	je     0x404afa
  404a89:	mov    eax,DWORD PTR [esp+0x4]
  404a8d:	cld    
  404a8e:	call   0x403f5c
  404a93:	mov    edx,DWORD PTR [esp+0x8]
  404a97:	push   0x0
  404a99:	push   eax
  404a9a:	push   0x404aa6
  404a9f:	push   edx
  404aa0:	call   DWORD PTR ds:0x46e018
  404aa6:	mov    ebx,DWORD PTR [esp+0x4]
  404aaa:	cmp    DWORD PTR [ebx],0xeedfade
  404ab0:	mov    edx,DWORD PTR [ebx+0x14]
  404ab3:	mov    eax,DWORD PTR [ebx+0x18]
  404ab6:	je     0x404ad5
  404ab8:	mov    edx,DWORD PTR ds:0x46e010
  404abe:	test   edx,edx
  404ac0:	je     0x4049c0
  404ac6:	mov    eax,ebx
  404ac8:	call   edx
  404aca:	test   eax,eax
  404acc:	je     0x4049c0
  404ad2:	mov    edx,DWORD PTR [ebx+0xc]
  404ad5:	call   0x404548
  404ada:	mov    ecx,DWORD PTR ds:0x46e004
  404ae0:	test   ecx,ecx
  404ae2:	je     0x404ae6
  404ae4:	call   ecx
  404ae6:	mov    ecx,DWORD PTR [esp+0x4]
  404aea:	mov    eax,0xd9
  404aef:	mov    edx,DWORD PTR [ecx+0x14]
  404af2:	mov    DWORD PTR [esp],edx
  404af5:	jmp    0x404ea8
  404afa:	xor    eax,eax
  404afc:	ret    
  404afd:	lea    eax,[eax+0x0]
  404b00:	xor    edx,edx
  404b02:	lea    eax,[ebp-0xc]
  404b05:	mov    ecx,DWORD PTR fs:[edx]
  404b08:	mov    DWORD PTR fs:[edx],eax
  404b0b:	mov    DWORD PTR [eax],ecx
  404b0d:	mov    DWORD PTR [eax+0x4],0x404a60
  404b14:	mov    DWORD PTR [eax+0x8],ebp
  404b17:	mov    ds:0x4707c4,eax
  404b1c:	ret    
  404b1d:	lea    eax,[eax+0x0]
  404b20:	xor    edx,edx
  404b22:	mov    eax,ds:0x4707c4
  404b27:	test   eax,eax
  404b29:	je     0x404b47
  404b2b:	mov    ecx,DWORD PTR fs:[edx]
  404b2e:	cmp    eax,ecx
  404b30:	jne    0x404b3a
  404b32:	mov    eax,DWORD PTR [eax]
  404b34:	mov    DWORD PTR fs:[edx],eax
  404b37:	ret    
  404b38:	mov    ecx,DWORD PTR [ecx]
  404b3a:	cmp    ecx,0xffffffff
  404b3d:	je     0x404b47
  404b3f:	cmp    DWORD PTR [ecx],eax
  404b41:	jne    0x404b38
  404b43:	mov    eax,DWORD PTR [eax]
  404b45:	mov    DWORD PTR [ecx],eax
  404b47:	ret    
  404b48:	push   ebp
  404b49:	mov    ebp,esp
  404b4b:	push   ebx
  404b4c:	push   esi
  404b4d:	push   edi
  404b4e:	mov    eax,ds:0x4707c8
  404b53:	test   eax,eax
  404b55:	je     0x404ba5
  404b57:	mov    ebx,DWORD PTR ds:0x4707cc
  404b5d:	mov    edi,DWORD PTR [eax+0x4]
  404b60:	xor    eax,eax
  404b62:	push   ebp
  404b63:	push   0x404b91
  404b68:	push   DWORD PTR fs:[eax]
  404b6b:	mov    DWORD PTR fs:[eax],esp
  404b6e:	test   ebx,ebx
  404b70:	jle    0x404b87
  404b72:	dec    ebx
  404b73:	mov    DWORD PTR ds:0x4707cc,ebx
  404b79:	mov    esi,DWORD PTR [edi+ebx*8+0x4]
  404b7d:	test   esi,esi
  404b7f:	je     0x404b83
  404b81:	call   esi
  404b83:	test   ebx,ebx
  404b85:	jg     0x404b72
  404b87:	xor    eax,eax
  404b89:	pop    edx
  404b8a:	pop    ecx
  404b8b:	pop    ecx
  404b8c:	mov    DWORD PTR fs:[eax],edx
  404b8f:	jmp    0x404ba5
  404b91:	jmp    0x404568
  404b96:	call   0x404b48
  404b9b:	call   0x404924
  404ba0:	call   0x404978
  404ba5:	pop    edi
  404ba6:	pop    esi
  404ba7:	pop    ebx
  404ba8:	pop    ebp
  404ba9:	ret    
  404baa:	mov    eax,eax
  404bac:	push   ebp
  404bad:	mov    ebp,esp
  404baf:	push   ecx
  404bb0:	push   ebx
  404bb1:	push   esi
  404bb2:	push   edi
  404bb3:	mov    eax,ds:0x4707c8
  404bb8:	test   eax,eax
  404bba:	je     0x404c0d
  404bbc:	mov    edi,DWORD PTR [eax]
  404bbe:	xor    ebx,ebx
  404bc0:	mov    eax,DWORD PTR [eax+0x4]
  404bc3:	mov    DWORD PTR [ebp-0x4],eax
  404bc6:	xor    eax,eax
  404bc8:	push   ebp
  404bc9:	push   0x404bf9
  404bce:	push   DWORD PTR fs:[eax]
  404bd1:	mov    DWORD PTR fs:[eax],esp
  404bd4:	cmp    edi,ebx
  404bd6:	jle    0x404bef
  404bd8:	mov    eax,DWORD PTR [ebp-0x4]
  404bdb:	mov    esi,DWORD PTR [eax+ebx*8]
  404bde:	inc    ebx
  404bdf:	mov    DWORD PTR ds:0x4707cc,ebx
  404be5:	test   esi,esi
  404be7:	je     0x404beb
  404be9:	call   esi
  404beb:	cmp    edi,ebx
  404bed:	jg     0x404bd8
  404bef:	xor    eax,eax
  404bf1:	pop    edx
  404bf2:	pop    ecx
  404bf3:	pop    ecx
  404bf4:	mov    DWORD PTR fs:[eax],edx
  404bf7:	jmp    0x404c0d
  404bf9:	jmp    0x404568
  404bfe:	call   0x404b48
  404c03:	call   0x404924
  404c08:	call   0x404978
  404c0d:	pop    edi
  404c0e:	pop    esi
  404c0f:	pop    ebx
  404c10:	pop    ecx
  404c11:	pop    ebp
  404c12:	ret    
  404c13:	nop
  404c14:	mov    DWORD PTR ds:0x46e014,0x40121c
  404c1e:	mov    DWORD PTR ds:0x46e018,0x40122c
  404c28:	mov    ds:0x4707c8,eax
  404c2d:	xor    eax,eax
  404c2f:	mov    ds:0x4707cc,eax
  404c34:	mov    DWORD PTR ds:0x4707d0,edx
  404c3a:	mov    eax,DWORD PTR [edx+0x4]
  404c3d:	mov    ds:0x46e02c,eax
  404c42:	call   0x404b00
  404c47:	mov    BYTE PTR ds:0x46e034,0x0
  404c4e:	call   0x404bac
  404c53:	ret    
  404c54:	push   ebx
  404c55:	xor    ebx,ebx
  404c57:	push   edi
  404c58:	push   esi
  404c59:	mov    edi,DWORD PTR [eax+ebx*1]
  404c5c:	lea    esi,[eax+ebx*1+0x4]
  404c60:	mov    eax,DWORD PTR [esi+0x4]
  404c63:	mov    edx,DWORD PTR [esi]
  404c65:	mov    eax,DWORD PTR [eax+ebx*1]
  404c68:	add    edx,ebx
  404c6a:	call   0x406f48
  404c6f:	add    esi,0x8
  404c72:	dec    edi
  404c73:	jne    0x404c60
  404c75:	pop    esi
  404c76:	pop    edi
  404c77:	pop    ebx
  404c78:	ret    
  404c79:	lea    eax,[eax+0x0]
  404c7c:	push   ebx
  404c7d:	xor    ebx,ebx
  404c7f:	push   edi
  404c80:	push   esi
  404c81:	mov    edi,DWORD PTR [eax+ebx*1]
  404c84:	lea    esi,[eax+ebx*1+0x4]
  404c88:	mov    eax,DWORD PTR [esi+0x4]
  404c8b:	mov    edx,DWORD PTR [esi]
  404c8d:	mov    eax,DWORD PTR [eax+ebx*1]
  404c90:	add    eax,DWORD PTR [esi+0x8]
  404c93:	mov    DWORD PTR [edx+ebx*1],eax
  404c96:	add    esi,0xc
  404c99:	dec    edi
  404c9a:	jne    0x404c88
  404c9c:	pop    esi
  404c9d:	pop    edi
  404c9e:	pop    ebx
  404c9f:	ret    
  404ca0:	push   ebx
  404ca1:	push   esi
  404ca2:	push   edi
  404ca3:	mov    edi,0x461768
  404ca8:	mov    bl,0x10
  404caa:	mov    esi,DWORD PTR ds:0x461000
  404cb0:	mov    eax,esi
  404cb2:	mov    ecx,0xa
  404cb7:	cdq    
  404cb8:	idiv   ecx
  404cba:	add    dl,0x30
  404cbd:	movzx  eax,bl
  404cc0:	mov    BYTE PTR [edi+eax*1],dl
  404cc3:	mov    ecx,0xa
  404cc8:	mov    eax,esi
  404cca:	cdq    
  404ccb:	idiv   ecx
  404ccd:	mov    esi,eax
  404ccf:	dec    ebx
  404cd0:	test   esi,esi
  404cd2:	jne    0x404cb0
  404cd4:	mov    bl,0x1c
  404cd6:	mov    esi,DWORD PTR ds:0x461004
  404cdc:	mov    eax,esi
  404cde:	and    eax,0xf
  404ce1:	movzx  eax,BYTE PTR [eax+0x461788]
  404ce8:	movzx  edx,bl
  404ceb:	mov    BYTE PTR [edi+edx*1],al
  404cee:	mov    ecx,0x10
  404cf3:	mov    eax,esi
  404cf5:	xor    edx,edx
  404cf7:	div    ecx
  404cf9:	mov    esi,eax
  404cfb:	dec    ebx
  404cfc:	test   esi,esi
  404cfe:	jne    0x404cdc
  404d00:	pop    edi
  404d01:	pop    esi
  404d02:	pop    ebx
  404d03:	ret    
  404d04:	xor    eax,eax
  404d06:	xchg   DWORD PTR ds:0x461000,eax
  404d0c:	neg    eax
  404d0e:	sbb    eax,eax
  404d10:	inc    eax
  404d11:	mov    edi,0x4707c0
  404d16:	mov    ebx,DWORD PTR [edi+0x18]
  404d19:	mov    ebp,DWORD PTR [edi+0x14]
  404d1c:	push   DWORD PTR [edi+0x1c]
  404d1f:	push   DWORD PTR [edi+0x20]
  404d22:	mov    esi,DWORD PTR [edi]
  404d24:	mov    ecx,0xb
  404d29:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2b:	pop    edi
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	ret    
  404d32:	mov    eax,eax
  404d34:	push   ecx
  404d35:	cmp    BYTE PTR ds:0x46e044,0x0
  404d3c:	je     0x404d95
  404d3e:	cmp    WORD PTR ds:0x46e218,0xd7b2
  404d47:	jne    0x404d5d
  404d49:	cmp    DWORD PTR ds:0x46e220,0x0
  404d50:	jbe    0x404d5d
  404d52:	mov    eax,0x46e214
  404d57:	call   DWORD PTR ds:0x46e230
  404d5d:	push   0x0
  404d5f:	lea    eax,[esp+0x4]
  404d63:	push   eax
  404d64:	push   0x1e
  404d66:	push   0x461768
  404d6b:	push   0xfffffff5
  404d6d:	call   0x401214
  404d72:	push   eax
  404d73:	call   0x40124c
  404d78:	push   0x0
  404d7a:	lea    eax,[esp+0x4]
  404d7e:	push   eax
  404d7f:	push   0x2
  404d81:	push   0x404dbc
  404d86:	push   0xfffffff5
  404d88:	call   0x401214
  404d8d:	push   eax
  404d8e:	call   0x40124c
  404d93:	pop    edx
  404d94:	ret    
  404d95:	cmp    BYTE PTR ds:0x461030,0x0
  404d9c:	jne    0x404db1
  404d9e:	push   0x0
  404da0:	push   0x461760
  404da5:	push   0x461768
  404daa:	push   0x0
  404dac:	call   0x40127c
  404db1:	pop    edx
  404db2:	ret    
  404db3:	add    bh,bh
  404db5:	(bad)  
  404db6:	(bad)  
  404db7:	inc    DWORD PTR [edx]
  404db9:	add    BYTE PTR [eax],al
  404dbb:	add    BYTE PTR ds:0x5300000a,cl
  404dc1:	push   esi
  404dc2:	push   edi
  404dc3:	push   ebp
  404dc4:	mov    ebx,0x4707c0
  404dc9:	mov    edi,0x46e040
  404dce:	cmp    BYTE PTR [ebx+0x28],0x0
  404dd2:	jne    0x404de8
  404dd4:	cmp    DWORD PTR [edi],0x0
  404dd7:	je     0x404de8
  404dd9:	mov    eax,DWORD PTR [edi]
  404ddb:	mov    esi,eax
  404ddd:	xor    eax,eax
  404ddf:	mov    DWORD PTR [edi],eax
  404de1:	call   esi
  404de3:	cmp    DWORD PTR [edi],0x0
  404de6:	jne    0x404dd9
  404de8:	cmp    DWORD PTR ds:0x461004,0x0
  404def:	je     0x404e02
  404df1:	call   0x404ca0
  404df6:	call   0x404d34
  404dfb:	xor    eax,eax
  404dfd:	mov    ds:0x461004,eax
  404e02:	cmp    BYTE PTR [ebx+0x28],0x2
  404e06:	jne    0x404e16
  404e08:	cmp    DWORD PTR ds:0x461000,0x0
  404e0f:	jne    0x404e16
  404e11:	xor    eax,eax
  404e13:	mov    DWORD PTR [ebx+0xc],eax
  404e16:	call   0x404b48
  404e1b:	cmp    BYTE PTR [ebx+0x28],0x1
  404e1f:	jbe    0x404e2a
  404e21:	cmp    DWORD PTR ds:0x461000,0x0
  404e28:	je     0x404e4d
  404e2a:	mov    edi,DWORD PTR [ebx+0x10]
  404e2d:	test   edi,edi
  404e2f:	je     0x404e4d
  404e31:	mov    eax,edi
  404e33:	call   0x406a28
  404e38:	mov    ebp,DWORD PTR [ebx+0x10]
  404e3b:	mov    esi,DWORD PTR [ebp+0x10]
  404e3e:	cmp    esi,DWORD PTR [ebp+0x4]
  404e41:	je     0x404e4d
  404e43:	test   esi,esi
  404e45:	je     0x404e4d
  404e47:	push   esi
  404e48:	call   0x401294
  404e4d:	call   0x404b20
  404e52:	cmp    BYTE PTR [ebx+0x28],0x1
  404e56:	jne    0x404e5b
  404e58:	call   DWORD PTR [ebx+0x24]
  404e5b:	cmp    BYTE PTR [ebx+0x28],0x0
  404e5f:	je     0x404e66
  404e61:	call   0x404d04
  404e66:	cmp    DWORD PTR [ebx],0x0
  404e69:	jne    0x404e85
  404e6b:	cmp    DWORD PTR ds:0x46e024,0x0
  404e72:	je     0x404e7a
  404e74:	call   DWORD PTR ds:0x46e024
  404e7a:	mov    eax,ds:0x461000
  404e7f:	push   eax
  404e80:	call   0x401274
  404e85:	mov    eax,DWORD PTR [ebx]
  404e87:	mov    esi,eax
  404e89:	mov    edi,ebx
  404e8b:	mov    ecx,0xb
  404e90:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e92:	jmp    0x404e02
  404e97:	pop    ebp
  404e98:	pop    edi
  404e99:	pop    esi
  404e9a:	pop    ebx
  404e9b:	ret    
  404e9c:	mov    ds:0x461000,eax
  404ea1:	call   0x404dc0
  404ea6:	ret    
  404ea7:	nop
  404ea8:	pop    DWORD PTR ds:0x461004
  404eae:	jmp    0x404e9c
  404eb3:	ret    
  404eb4:	push   ebx
  404eb5:	cmp    DWORD PTR ds:0x46e020,0x0
  404ebc:	jne    0x404ec7
  404ebe:	mov    al,0x15
  404ec0:	call   0x402ff0
  404ec5:	pop    ebx
  404ec6:	ret    
  404ec7:	push   DWORD PTR [esp+0x4]
  404ecb:	call   DWORD PTR ds:0x46e020
  404ed1:	pop    ebx
  404ed2:	ret    
  404ed3:	nop
  404ed4:	push   ebp
  404ed5:	mov    ebp,esp
  404ed7:	call   0x403f5c
  404edc:	push   ebp
  404edd:	xor    ecx,ecx
  404edf:	push   0x404a60
  404ee4:	mov    edx,DWORD PTR fs:[ecx]
  404ee7:	push   edx
  404ee8:	mov    DWORD PTR fs:[ecx],esp
  404eeb:	mov    eax,DWORD PTR [ebp+0x8]
  404eee:	mov    ecx,DWORD PTR [eax+0x4]
  404ef1:	mov    edx,DWORD PTR [eax]
  404ef3:	push   ecx
  404ef4:	push   edx
  404ef5:	call   0x402ebc
  404efa:	pop    edx
  404efb:	pop    eax
  404efc:	call   edx
  404efe:	xor    edx,edx
  404f00:	pop    ecx
  404f01:	mov    DWORD PTR fs:[edx],ecx
  404f04:	pop    ecx
  404f05:	pop    ebp
  404f06:	pop    ebp
  404f07:	ret    0x4
  404f0a:	mov    eax,eax
  404f0c:	push   ebp
  404f0d:	mov    ebp,esp
  404f0f:	push   ecx
  404f10:	push   ebx
  404f11:	push   esi
  404f12:	push   edi
  404f13:	mov    ebx,ecx
  404f15:	mov    DWORD PTR [ebp-0x4],edx
  404f18:	mov    edi,eax
  404f1a:	mov    esi,DWORD PTR [ebp+0x10]
  404f1d:	cmp    DWORD PTR ds:0x461038,0x0
  404f24:	je     0x404f32
  404f26:	mov    edx,esi
  404f28:	mov    eax,ebx
  404f2a:	call   DWORD PTR ds:0x461038
  404f30:	jmp    0x404f41
  404f32:	mov    eax,0x8
  404f37:	call   0x402ea0
  404f3c:	mov    DWORD PTR [eax],ebx
  404f3e:	mov    DWORD PTR [eax+0x4],esi
  404f41:	mov    BYTE PTR ds:0x46e045,0x1
  404f48:	mov    edx,DWORD PTR [ebp+0x8]
  404f4b:	push   edx
  404f4c:	mov    edx,DWORD PTR [ebp+0xc]
  404f4f:	push   edx
  404f50:	push   eax
  404f51:	mov    eax,0x404ed4
  404f56:	push   eax
  404f57:	mov    eax,DWORD PTR [ebp-0x4]
  404f5a:	push   eax
  404f5b:	push   edi
  404f5c:	call   0x401264
  404f61:	pop    edi
  404f62:	pop    esi
  404f63:	pop    ebx
  404f64:	pop    ecx
  404f65:	pop    ebp
  404f66:	ret    0xc
  404f69:	lea    eax,[eax+0x0]
  404f6c:	push   ebx
  404f6d:	mov    ebx,eax
  404f6f:	cmp    DWORD PTR ds:0x46103c,0x0
  404f76:	je     0x404f80
  404f78:	mov    eax,ebx
  404f7a:	call   DWORD PTR ds:0x46103c
  404f80:	push   ebx
  404f81:	call   0x40126c
  404f86:	pop    ebx
  404f87:	ret    
  404f88:	mov    edx,DWORD PTR [eax]
  404f8a:	test   edx,edx
  404f8c:	je     0x404faa
  404f8e:	mov    DWORD PTR [eax],0x0
  404f94:	mov    ecx,DWORD PTR [edx-0x8]
  404f97:	dec    ecx
  404f98:	jl     0x404faa
  404f9a:	lock dec DWORD PTR [edx-0x8]
  404f9e:	jne    0x404faa
  404fa0:	push   eax
  404fa1:	lea    eax,[edx-0x8]
  404fa4:	call   0x402ebc
  404fa9:	pop    eax
  404faa:	ret    
  404fab:	nop
  404fac:	push   ebx
  404fad:	push   esi
  404fae:	mov    ebx,eax
  404fb0:	mov    esi,edx
  404fb2:	mov    edx,DWORD PTR [ebx]
  404fb4:	test   edx,edx
  404fb6:	je     0x404fd2
  404fb8:	mov    DWORD PTR [ebx],0x0
  404fbe:	mov    ecx,DWORD PTR [edx-0x8]
  404fc1:	dec    ecx
  404fc2:	jl     0x404fd2
  404fc4:	lock dec DWORD PTR [edx-0x8]
  404fc8:	jne    0x404fd2
  404fca:	lea    eax,[edx-0x8]
  404fcd:	call   0x402ebc
  404fd2:	add    ebx,0x4
  404fd5:	dec    esi
  404fd6:	jne    0x404fb2
  404fd8:	pop    esi
  404fd9:	pop    ebx
  404fda:	ret    
  404fdb:	nop
  404fdc:	test   edx,edx
  404fde:	je     0x405004
  404fe0:	mov    ecx,DWORD PTR [edx-0x8]
  404fe3:	inc    ecx
  404fe4:	jg     0x405000
  404fe6:	push   eax
  404fe7:	push   edx
  404fe8:	mov    eax,DWORD PTR [edx-0x4]
  404feb:	call   0x40504c
  404ff0:	mov    edx,eax
  404ff2:	pop    eax
  404ff3:	push   edx
  404ff4:	mov    ecx,DWORD PTR [eax-0x4]
  404ff7:	call   0x403090
  404ffc:	pop    edx
  404ffd:	pop    eax
  404ffe:	jmp    0x405004
  405000:	lock inc DWORD PTR [edx-0x8]
  405004:	xchg   DWORD PTR [eax],edx
  405006:	test   edx,edx
  405008:	je     0x40501e
  40500a:	mov    ecx,DWORD PTR [edx-0x8]
  40500d:	dec    ecx
  40500e:	jl     0x40501e
  405010:	lock dec DWORD PTR [edx-0x8]
  405014:	jne    0x40501e
  405016:	lea    eax,[edx-0x8]
  405019:	call   0x402ebc
  40501e:	ret    
  40501f:	nop
  405020:	test   edx,edx
  405022:	je     0x40502e
  405024:	mov    ecx,DWORD PTR [edx-0x8]
  405027:	inc    ecx
  405028:	jle    0x40502e
  40502a:	lock inc DWORD PTR [edx-0x8]
  40502e:	xchg   DWORD PTR [eax],edx
  405030:	test   edx,edx
  405032:	je     0x405048
  405034:	mov    ecx,DWORD PTR [edx-0x8]
  405037:	dec    ecx
  405038:	jl     0x405048
  40503a:	lock dec DWORD PTR [edx-0x8]
  40503e:	jne    0x405048
  405040:	lea    eax,[edx-0x8]
  405043:	call   0x402ebc
  405048:	ret    
  405049:	lea    eax,[eax+0x0]
  40504c:	test   eax,eax
  40504e:	jle    0x405074
  405050:	push   eax
  405051:	add    eax,0xa
  405054:	and    eax,0xfffffffe
  405057:	push   eax
  405058:	call   0x402ea0
  40505d:	pop    edx
  40505e:	mov    WORD PTR [edx+eax*1-0x2],0x0
  405065:	add    eax,0x8
  405068:	pop    edx
  405069:	mov    DWORD PTR [eax-0x4],edx
  40506c:	mov    DWORD PTR [eax-0x8],0x1
  405073:	ret    
  405074:	xor    eax,eax
  405076:	ret    
  405077:	nop
  405078:	push   ebx
  405079:	push   esi
  40507a:	push   edi
  40507b:	mov    ebx,eax
  40507d:	mov    esi,edx
  40507f:	mov    edi,ecx
  405081:	mov    eax,edi
  405083:	call   0x40504c
  405088:	mov    ecx,edi
  40508a:	mov    edi,eax
  40508c:	test   esi,esi
  40508e:	je     0x405099
  405090:	mov    edx,eax
  405092:	mov    eax,esi
  405094:	call   0x403090
  405099:	mov    eax,ebx
  40509b:	call   0x404f88
  4050a0:	mov    DWORD PTR [ebx],edi
  4050a2:	pop    edi
  4050a3:	pop    esi
  4050a4:	pop    ebx
  4050a5:	ret    
  4050a6:	mov    eax,eax
  4050a8:	push   ebp
  4050a9:	mov    ebp,esp
  4050ab:	push   0x0
  4050ad:	push   0x0
  4050af:	push   edx
  4050b0:	push   eax
  4050b1:	mov    eax,DWORD PTR [ebp+0x8]
  4050b4:	push   eax
  4050b5:	push   ecx
  4050b6:	push   0x0
  4050b8:	mov    eax,ds:0x46e5b4
  4050bd:	push   eax
  4050be:	call   0x40131c
  4050c3:	pop    ebp
  4050c4:	ret    0x4
  4050c7:	nop
  4050c8:	push   ebp
  4050c9:	mov    ebp,esp
  4050cb:	push   edx
  4050cc:	push   eax
  4050cd:	mov    eax,DWORD PTR [ebp+0x8]
  4050d0:	push   eax
  4050d1:	push   ecx
  4050d2:	push   0x0
  4050d4:	mov    eax,ds:0x46e5b4
  4050d9:	push   eax
  4050da:	call   0x4012fc
  4050df:	pop    ebp
  4050e0:	ret    0x4
  4050e3:	nop
  4050e4:	push   ebx
  4050e5:	push   esi
  4050e6:	push   edi
  4050e7:	push   ebp
  4050e8:	add    esp,0xfffff004
  4050ee:	push   eax
  4050ef:	add    esp,0xfffffffc
  4050f2:	mov    esi,ecx
  4050f4:	mov    DWORD PTR [esp],edx
  4050f7:	mov    edi,eax
  4050f9:	test   esi,esi
  4050fb:	jg     0x405106
  4050fd:	mov    eax,edi
  4050ff:	call   0x404f88
  405104:	jmp    0x405165
  405106:	lea    ebp,[esi+0x1]
  405109:	cmp    ebp,0x7ff
  40510f:	jge    0x405139
  405111:	push   esi
  405112:	lea    eax,[esp+0x8]
  405116:	mov    ecx,DWORD PTR [esp+0x4]
  40511a:	mov    edx,0xfff
  40511f:	call   0x4050a8
  405124:	mov    ebx,eax
  405126:	test   ebx,ebx
  405128:	jl     0x405139
  40512a:	lea    edx,[esp+0x4]
  40512e:	mov    eax,edi
  405130:	mov    ecx,ebx
  405132:	call   0x405078
  405137:	jmp    0x405165
  405139:	mov    ebx,ebp
  40513b:	add    ebx,ebx
  40513d:	mov    eax,edi
  40513f:	mov    edx,ebx
  405141:	call   0x4056a8
  405146:	push   esi
  405147:	mov    eax,DWORD PTR [edi]
  405149:	mov    ecx,DWORD PTR [esp+0x4]
  40514d:	mov    edx,ebx
  40514f:	call   0x4050a8
  405154:	mov    ebx,eax
  405156:	test   ebx,ebx
  405158:	jge    0x40515c
  40515a:	xor    ebx,ebx
  40515c:	mov    eax,edi
  40515e:	mov    edx,ebx
  405160:	call   0x4056a8
  405165:	add    esp,0x1004
  40516b:	pop    ebp
  40516c:	pop    edi
  40516d:	pop    esi
  40516e:	pop    ebx
  40516f:	ret    
  405170:	push   edx
  405171:	mov    edx,esp
  405173:	mov    ecx,0x1
  405178:	call   0x405078
  40517d:	pop    edx
  40517e:	ret    
  40517f:	nop
  405180:	xor    ecx,ecx
  405182:	test   edx,edx
  405184:	je     0x4051a7
  405186:	push   edx
  405187:	cmp    cl,BYTE PTR [edx]
  405189:	je     0x4051a2
  40518b:	cmp    cl,BYTE PTR [edx+0x1]
  40518e:	je     0x4051a1
  405190:	cmp    cl,BYTE PTR [edx+0x2]
  405193:	je     0x4051a0
  405195:	cmp    cl,BYTE PTR [edx+0x3]
  405198:	je     0x40519f
  40519a:	add    edx,0x4
  40519d:	jmp    0x405187
  40519f:	inc    edx
  4051a0:	inc    edx
  4051a1:	inc    edx
  4051a2:	mov    ecx,edx
  4051a4:	pop    edx
  4051a5:	sub    ecx,edx
  4051a7:	jmp    0x405078
  4051ac:	ret    
  4051ad:	lea    eax,[eax+0x0]
  4051b0:	xor    ecx,ecx
  4051b2:	test   edx,edx
  4051b4:	je     0x4051e3
  4051b6:	push   edx
  4051b7:	cmp    cx,WORD PTR [edx]
  4051ba:	je     0x4051dc
  4051bc:	cmp    cx,WORD PTR [edx+0x2]
  4051c0:	je     0x4051d9
  4051c2:	cmp    cx,WORD PTR [edx+0x4]
  4051c6:	je     0x4051d6
  4051c8:	cmp    cx,WORD PTR [edx+0x6]
  4051cc:	je     0x4051d3
  4051ce:	add    edx,0x8
  4051d1:	jmp    0x4051b7
  4051d3:	add    edx,0x2
  4051d6:	add    edx,0x2
  4051d9:	add    edx,0x2
  4051dc:	mov    ecx,edx
  4051de:	pop    edx
  4051df:	sub    ecx,edx
  4051e1:	shr    ecx,1
  4051e3:	jmp    0x4050e4
  4051e8:	ret    
  4051e9:	lea    eax,[eax+0x0]
  4051ec:	xor    ecx,ecx
  4051ee:	mov    cl,BYTE PTR [edx]
  4051f0:	inc    edx
  4051f1:	jmp    0x405078
  4051f6:	ret    
  4051f7:	nop
  4051f8:	push   edi
  4051f9:	push   eax
  4051fa:	push   ecx
  4051fb:	mov    edi,edx
  4051fd:	xor    eax,eax
  4051ff:	repnz scas al,BYTE PTR es:[edi]
  405201:	jne    0x405205
  405203:	not    ecx
  405205:	pop    eax
  405206:	add    ecx,eax
  405208:	pop    eax
  405209:	pop    edi
  40520a:	jmp    0x405078
  40520f:	ret    
  405210:	xor    ecx,ecx
  405212:	test   edx,edx
  405214:	je     0x40521b
  405216:	mov    ecx,DWORD PTR [edx-0x4]
  405219:	shr    ecx,1
  40521b:	jmp    0x4050e4
  405220:	ret    
  405221:	lea    eax,[eax+0x0]
  405224:	push   ebx
  405225:	test   edx,edx
  405227:	je     0x405241
  405229:	mov    ebx,DWORD PTR [edx-0x4]
  40522c:	test   ebx,ebx
  40522e:	je     0x405241
  405230:	cmp    ecx,ebx
  405232:	jl     0x405236
  405234:	mov    ecx,ebx
  405236:	mov    BYTE PTR [eax],cl
  405238:	inc    eax
  405239:	xchg   edx,eax
  40523a:	call   0x403090
  40523f:	pop    ebx
  405240:	ret    
  405241:	mov    BYTE PTR [eax],0x0
  405244:	pop    ebx
  405245:	ret    
  405246:	mov    eax,eax
  405248:	test   eax,eax
  40524a:	je     0x405251
  40524c:	sub    eax,0x4
  40524f:	mov    eax,DWORD PTR [eax]
  405251:	ret    
  405252:	mov    eax,eax
  405254:	test   edx,edx
  405256:	je     0x40529e
  405258:	mov    ecx,DWORD PTR [eax]
  40525a:	test   ecx,ecx
  40525c:	je     0x404fdc
  405262:	push   ebx
  405263:	push   esi
  405264:	push   edi
  405265:	mov    ebx,eax
  405267:	mov    esi,edx
  405269:	mov    edi,DWORD PTR [ecx-0x4]
  40526c:	mov    edx,DWORD PTR [esi-0x4]
  40526f:	add    edx,edi
  405271:	jo     0x405299
  405273:	cmp    esi,ecx
  405275:	je     0x40528e
  405277:	call   0x4056a8
  40527c:	mov    eax,esi
  40527e:	mov    ecx,DWORD PTR [esi-0x4]
  405281:	mov    edx,DWORD PTR [ebx]
  405283:	add    edx,edi
  405285:	call   0x403090
  40528a:	pop    edi
  40528b:	pop    esi
  40528c:	pop    ebx
  40528d:	ret    
  40528e:	call   0x4056a8
  405293:	mov    eax,DWORD PTR [ebx]
  405295:	mov    ecx,edi
  405297:	jmp    0x405281
  405299:	jmp    0x403f70
  40529e:	ret    
  40529f:	nop
  4052a0:	test   edx,edx
  4052a2:	je     0x405307
  4052a4:	test   ecx,ecx
  4052a6:	je     0x404fdc
  4052ac:	cmp    edx,DWORD PTR [eax]
  4052ae:	je     0x40530e
  4052b0:	cmp    ecx,DWORD PTR [eax]
  4052b2:	je     0x4052c2
  4052b4:	push   eax
  4052b5:	push   ecx
  4052b6:	call   0x404fdc
  4052bb:	pop    edx
  4052bc:	pop    eax
  4052bd:	jmp    0x405254
  4052c2:	push   ebx
  4052c3:	push   esi
  4052c4:	push   edi
  4052c5:	mov    ebx,edx
  4052c7:	mov    esi,ecx
  4052c9:	push   eax
  4052ca:	mov    eax,DWORD PTR [ebx-0x4]
  4052cd:	add    eax,DWORD PTR [esi-0x4]
  4052d0:	jo     0x405315
  4052d2:	call   0x40504c
  4052d7:	mov    edi,eax
  4052d9:	mov    edx,eax
  4052db:	mov    eax,ebx
  4052dd:	mov    ecx,DWORD PTR [ebx-0x4]
  4052e0:	call   0x403090
  4052e5:	mov    edx,edi
  4052e7:	mov    eax,esi
  4052e9:	mov    ecx,DWORD PTR [esi-0x4]
  4052ec:	add    edx,DWORD PTR [ebx-0x4]
  4052ef:	call   0x403090
  4052f4:	pop    eax
  4052f5:	mov    edx,edi
  4052f7:	test   edi,edi
  4052f9:	je     0x4052fe
  4052fb:	dec    DWORD PTR [edi-0x8]
  4052fe:	call   0x404fdc
  405303:	pop    edi
  405304:	pop    esi
  405305:	pop    ebx
  405306:	ret    
  405307:	mov    edx,ecx
  405309:	jmp    0x404fdc
  40530e:	mov    edx,ecx
  405310:	jmp    0x405254
  405315:	jmp    0x403f70
  40531a:	ret    
  40531b:	nop
  40531c:	push   ebx
  40531d:	push   esi
  40531e:	push   edi
  40531f:	push   edx
  405320:	push   eax
  405321:	mov    ebx,edx
  405323:	xor    edi,edi
  405325:	mov    ecx,DWORD PTR [esp+edx*4+0x14]
  405329:	test   ecx,ecx
  40532b:	je     0x405339
  40532d:	cmp    DWORD PTR [eax],ecx
  40532f:	jne    0x405339
  405331:	mov    edi,ecx
  405333:	mov    eax,DWORD PTR [ecx-0x4]
  405336:	dec    edx
  405337:	jmp    0x40533b
  405339:	xor    eax,eax
  40533b:	mov    ecx,DWORD PTR [esp+edx*4+0x14]
  40533f:	test   ecx,ecx
  405341:	je     0x40534e
  405343:	add    eax,DWORD PTR [ecx-0x4]
  405346:	jo     0x4053a7
  405348:	cmp    edi,ecx
  40534a:	jne    0x40534e
  40534c:	xor    edi,edi
  40534e:	dec    edx
  40534f:	jne    0x40533b
  405351:	test   edi,edi
  405353:	je     0x40536c
  405355:	mov    edx,eax
  405357:	mov    eax,DWORD PTR [esp]
  40535a:	mov    esi,DWORD PTR [edi-0x4]
  40535d:	call   0x4056a8
  405362:	mov    edi,DWORD PTR [esp]
  405365:	push   DWORD PTR [edi]
  405367:	add    esi,DWORD PTR [edi]
  405369:	dec    ebx
  40536a:	jmp    0x405374
  40536c:	call   0x40504c
  405371:	push   eax
  405372:	mov    esi,eax
  405374:	mov    eax,DWORD PTR [esp+ebx*4+0x18]
  405378:	mov    edx,esi
  40537a:	test   eax,eax
  40537c:	je     0x405388
  40537e:	mov    ecx,DWORD PTR [eax-0x4]
  405381:	add    esi,ecx
  405383:	call   0x403090
  405388:	dec    ebx
  405389:	jne    0x405374
  40538b:	pop    edx
  40538c:	pop    eax
  40538d:	test   edi,edi
  40538f:	jne    0x40539d
  405391:	test   edx,edx
  405393:	je     0x405398
  405395:	dec    DWORD PTR [edx-0x8]
  405398:	call   0x404fdc
  40539d:	pop    edx
  40539e:	pop    edi
  40539f:	pop    esi
  4053a0:	pop    ebx
  4053a1:	pop    eax
  4053a2:	lea    esp,[esp+edx*4]
  4053a5:	jmp    eax
  4053a7:	jmp    0x403f70
  4053ac:	ret    
  4053ad:	lea    eax,[eax+0x0]
  4053b0:	cmp    eax,edx
  4053b2:	je     0x4053e4
  4053b4:	test   eax,edx
  4053b6:	je     0x4053f8
  4053b8:	movzx  ecx,BYTE PTR [eax]
  4053bb:	sub    cl,BYTE PTR [edx]
  4053bd:	jne    0x4053e4
  4053bf:	push   ebx
  4053c0:	mov    ebx,DWORD PTR [eax-0x4]
  4053c3:	sub    ebx,DWORD PTR [edx-0x4]
  4053c6:	push   ebx
  4053c7:	adc    ecx,0xffffffff
  4053ca:	and    ecx,ebx
  4053cc:	sub    ecx,DWORD PTR [eax-0x4]
  4053cf:	sub    eax,ecx
  4053d1:	sub    edx,ecx
  4053d3:	mov    ebx,DWORD PTR [ecx+eax*1]
  4053d6:	xor    ebx,DWORD PTR [ecx+edx*1]
  4053d9:	jne    0x4053e5
  4053db:	add    ecx,0x4
  4053de:	js     0x4053d3
  4053e0:	pop    eax
  4053e1:	add    eax,eax
  4053e3:	pop    ebx
  4053e4:	ret    
  4053e5:	bsf    ebx,ebx
  4053e8:	shr    ebx,0x3
  4053eb:	add    ecx,ebx
  4053ed:	jns    0x4053e0
  4053ef:	mov    al,BYTE PTR [ecx+eax*1]
  4053f2:	cmp    al,BYTE PTR [ecx+edx*1]
  4053f5:	pop    ebx
  4053f6:	pop    ebx
  4053f7:	ret    
  4053f8:	test   eax,eax
  4053fa:	je     0x405404
  4053fc:	test   edx,edx
  4053fe:	jne    0x4053b8
  405400:	cmp    DWORD PTR [eax-0x4],edx
  405403:	ret    
  405404:	cmp    eax,DWORD PTR [edx-0x4]
  405407:	ret    
  405408:	test   eax,eax
  40540a:	je     0x405416
  40540c:	mov    edx,DWORD PTR [eax-0x8]
  40540f:	inc    edx
  405410:	jle    0x405416
  405412:	lock inc DWORD PTR [eax-0x8]
  405416:	ret    
  405417:	nop
  405418:	test   eax,eax
  40541a:	je     0x405426
  40541c:	ret    
  40541d:	(bad)  
  40541e:	(bad)  
  40541f:	(bad)  
  405420:	inc    DWORD PTR [eax]
  405422:	add    BYTE PTR [eax],al
  405424:	add    BYTE PTR [eax],al
  405426:	mov    eax,0x405425
  40542b:	ret    
  40542c:	mov    edx,DWORD PTR [eax]
  40542e:	test   edx,edx
  405430:	je     0x40546a
  405432:	mov    ecx,DWORD PTR [edx-0x8]
  405435:	dec    ecx
  405436:	je     0x40546a
  405438:	push   ebx
  405439:	mov    ebx,eax
  40543b:	mov    eax,DWORD PTR [edx-0x4]
  40543e:	call   0x40504c
  405443:	mov    edx,eax
  405445:	mov    eax,DWORD PTR [ebx]
  405447:	mov    DWORD PTR [ebx],edx
  405449:	push   eax
  40544a:	mov    ecx,DWORD PTR [eax-0x4]
  40544d:	call   0x403090
  405452:	pop    eax
  405453:	mov    ecx,DWORD PTR [eax-0x8]
  405456:	dec    ecx
  405457:	jl     0x405467
  405459:	lock dec DWORD PTR [eax-0x8]
  40545d:	jne    0x405467
  40545f:	lea    eax,[eax-0x8]
  405462:	call   0x402ebc
  405467:	mov    edx,DWORD PTR [ebx]
  405469:	pop    ebx
  40546a:	mov    eax,edx
  40546c:	ret    
  40546d:	lea    eax,[eax+0x0]
  405470:	jmp    0x40542c
  405475:	ret    
  405476:	mov    eax,eax
  405478:	jmp    0x40542c
  40547d:	ret    
  40547e:	mov    eax,eax
  405480:	push   ebx
  405481:	test   eax,eax
  405483:	je     0x4054b2
  405485:	mov    ebx,DWORD PTR [eax-0x4]
  405488:	test   ebx,ebx
  40548a:	je     0x4054b2
  40548c:	dec    edx
  40548d:	jl     0x4054aa
  40548f:	cmp    edx,ebx
  405491:	jge    0x4054b2
  405493:	sub    ebx,edx
  405495:	test   ecx,ecx
  405497:	jl     0x4054b2
  405499:	cmp    ecx,ebx
  40549b:	jg     0x4054ae
  40549d:	add    edx,eax
  40549f:	mov    eax,DWORD PTR [esp+0x8]
  4054a3:	call   0x405078
  4054a8:	jmp    0x4054bb
  4054aa:	xor    edx,edx
  4054ac:	jmp    0x405493
  4054ae:	mov    ecx,ebx
  4054b0:	jmp    0x40549d
  4054b2:	mov    eax,DWORD PTR [esp+0x8]
  4054b6:	call   0x404f88
  4054bb:	pop    ebx
  4054bc:	ret    0x4
  4054bf:	ret    
  4054c0:	push   ebx
  4054c1:	push   esi
  4054c2:	push   edi
  4054c3:	mov    ebx,eax
  4054c5:	mov    esi,edx
  4054c7:	mov    edi,ecx
  4054c9:	call   0x405470
  4054ce:	mov    edx,DWORD PTR [ebx]
  4054d0:	test   edx,edx
  4054d2:	je     0x405504
  4054d4:	mov    ecx,DWORD PTR [edx-0x4]
  4054d7:	dec    esi
  4054d8:	jl     0x405504
  4054da:	cmp    esi,ecx
  4054dc:	jge    0x405504
  4054de:	test   edi,edi
  4054e0:	jle    0x405504
  4054e2:	sub    ecx,esi
  4054e4:	cmp    edi,ecx
  4054e6:	jle    0x4054ea
  4054e8:	mov    edi,ecx
  4054ea:	sub    ecx,edi
  4054ec:	add    edx,esi
  4054ee:	lea    eax,[edi+edx*1]
  4054f1:	call   0x403090
  4054f6:	mov    edx,DWORD PTR [ebx]
  4054f8:	mov    eax,ebx
  4054fa:	mov    edx,DWORD PTR [edx-0x4]
  4054fd:	sub    edx,edi
  4054ff:	call   0x4056a8
  405504:	pop    edi
  405505:	pop    esi
  405506:	pop    ebx
  405507:	ret    
  405508:	test   eax,eax
  40550a:	je     0x405562
  40550c:	push   ebx
  40550d:	push   esi
  40550e:	push   edi
  40550f:	push   ebp
  405510:	mov    ebx,eax
  405512:	mov    esi,edx
  405514:	mov    edi,ecx
  405516:	mov    edx,DWORD PTR [edx]
  405518:	push   edx
  405519:	test   edx,edx
  40551b:	je     0x405520
  40551d:	mov    edx,DWORD PTR [edx-0x4]
  405520:	dec    edi
  405521:	jge    0x405525
  405523:	xor    edi,edi
  405525:	cmp    edi,edx
  405527:	jle    0x40552b
  405529:	mov    edi,edx
  40552b:	mov    ebp,DWORD PTR [ebx-0x4]
  40552e:	mov    eax,esi
  405530:	add    edx,ebp
  405532:	call   0x4056a8
  405537:	pop    eax
  405538:	cmp    eax,ebx
  40553a:	jne    0x40553e
  40553c:	mov    ebx,DWORD PTR [esi]
  40553e:	mov    eax,DWORD PTR [esi]
  405540:	lea    edx,[edi+ebp*1]
  405543:	mov    ecx,DWORD PTR [eax-0x4]
  405546:	sub    ecx,edx
  405548:	add    edx,eax
  40554a:	add    eax,edi
  40554c:	call   0x403090
  405551:	mov    eax,ebx
  405553:	mov    edx,DWORD PTR [esi]
  405555:	mov    ecx,ebp
  405557:	add    edx,edi
  405559:	call   0x403090
  40555e:	pop    ebp
  40555f:	pop    edi
  405560:	pop    esi
  405561:	pop    ebx
  405562:	ret    
  405563:	nop
  405564:	push   ebx
  405565:	push   esi
  405566:	add    esp,0xfffffff0
  405569:	test   edx,edx
  40556b:	je     0x4055bb
  40556d:	test   eax,eax
  40556f:	je     0x4055bb
  405571:	mov    esi,DWORD PTR [edx-0x4]
  405574:	mov    ebx,DWORD PTR [eax-0x4]
  405577:	cmp    esi,ebx
  405579:	jl     0x4055bb
  40557b:	test   ebx,ebx
  40557d:	jle    0x4055bb
  40557f:	dec    ebx
  405580:	add    esi,edx
  405582:	add    edx,ebx
  405584:	mov    DWORD PTR [esp+0x8],esi
  405588:	add    eax,ebx
  40558a:	mov    DWORD PTR [esp+0x4],edx
  40558e:	neg    ebx
  405590:	movzx  ecx,BYTE PTR [eax]
  405593:	mov    DWORD PTR [esp],ebx
  405596:	jne    0x405635
  40559c:	sub    esi,0x2
  40559f:	mov    DWORD PTR [esp+0xc],esi
  4055a3:	cmp    cl,BYTE PTR [edx]
  4055a5:	je     0x4055e8
  4055a7:	cmp    cl,BYTE PTR [edx+0x1]
  4055aa:	je     0x4055f8
  4055ac:	add    edx,0x2
  4055af:	cmp    edx,DWORD PTR [esp+0xc]
  4055b3:	jb     0x4055bf
  4055b5:	cmp    edx,DWORD PTR [esp+0x8]
  4055b9:	jb     0x4055a3
  4055bb:	xor    eax,eax
  4055bd:	jmp    0x4055ef
  4055bf:	cmp    cl,BYTE PTR [edx]
  4055c1:	je     0x4055e8
  4055c3:	cmp    cl,BYTE PTR [edx+0x1]
  4055c6:	je     0x4055f8
  4055c8:	cmp    cl,BYTE PTR [edx+0x2]
  4055cb:	je     0x4055e5
  4055cd:	cmp    cl,BYTE PTR [edx+0x3]
  4055d0:	je     0x4055f5
  4055d2:	add    edx,0x4
  4055d5:	cmp    edx,DWORD PTR [esp+0xc]
  4055d9:	jb     0x4055bf
  4055db:	cmp    edx,DWORD PTR [esp+0x8]
  4055df:	jb     0x4055a3
  4055e1:	xor    eax,eax
  4055e3:	jmp    0x4055ef
  4055e5:	add    edx,0x2
  4055e8:	inc    edx
  4055e9:	mov    eax,edx
  4055eb:	sub    eax,DWORD PTR [esp+0x4]
  4055ef:	add    esp,0x10
  4055f2:	pop    esi
  4055f3:	pop    ebx
  4055f4:	ret    
  4055f5:	add    edx,0x2
  4055f8:	add    edx,0x2
  4055fb:	xor    eax,eax
  4055fd:	cmp    edx,DWORD PTR [esp+0x8]
  405601:	ja     0x405609
  405603:	mov    eax,edx
  405605:	sub    eax,DWORD PTR [esp+0x4]
  405609:	add    esp,0x10
  40560c:	pop    esi
  40560d:	pop    ebx
  40560e:	ret    
  40560f:	cmp    cl,BYTE PTR [edx]
  405611:	je     0x405688
  405613:	cmp    cl,BYTE PTR [edx+0x1]
  405616:	je     0x40565b
  405618:	cmp    cl,BYTE PTR [edx+0x2]
  40561b:	je     0x405685
  40561d:	cmp    cl,BYTE PTR [edx+0x3]
  405620:	je     0x405658
  405622:	add    edx,0x4
  405625:	cmp    edx,DWORD PTR [esp+0xc]
  405629:	jb     0x40560f
  40562b:	cmp    edx,DWORD PTR [esp+0x8]
  40562f:	jb     0x40563c
  405631:	xor    eax,eax
  405633:	jmp    0x40567f
  405635:	sub    esi,0x2
  405638:	mov    DWORD PTR [esp+0xc],esi
  40563c:	cmp    cl,BYTE PTR [edx]
  40563e:	je     0x405688
  405640:	cmp    cl,BYTE PTR [edx+0x1]
  405643:	je     0x40565b
  405645:	add    edx,0x2
  405648:	cmp    edx,DWORD PTR [esp+0xc]
  40564c:	jb     0x40560f
  40564e:	cmp    edx,DWORD PTR [esp+0x8]
  405652:	jb     0x40563c
  405654:	xor    eax,eax
  405656:	jmp    0x40567f
  405658:	add    edx,0x2
  40565b:	mov    esi,DWORD PTR [esp]
  40565e:	movzx  ebx,WORD PTR [eax+esi*1]
  405662:	cmp    bx,WORD PTR [edx+esi*1+0x1]
  405667:	jne    0x405645
  405669:	add    esi,0x2
  40566c:	jl     0x40565e
  40566e:	add    edx,0x2
  405671:	xor    eax,eax
  405673:	cmp    edx,DWORD PTR [esp+0x8]
  405677:	ja     0x40567f
  405679:	mov    eax,edx
  40567b:	sub    eax,DWORD PTR [esp+0x4]
  40567f:	add    esp,0x10
  405682:	pop    esi
  405683:	pop    ebx
  405684:	ret    
  405685:	add    edx,0x2
  405688:	mov    esi,DWORD PTR [esp]
  40568b:	movzx  ebx,WORD PTR [eax+esi*1]
  40568f:	cmp    bx,WORD PTR [edx+esi*1]
  405693:	jne    0x405640
  405695:	add    esi,0x2
  405698:	jl     0x40568b
  40569a:	inc    edx
  40569b:	mov    eax,edx
  40569d:	sub    eax,DWORD PTR [esp+0x4]
  4056a1:	add    esp,0x10
  4056a4:	pop    esi
  4056a5:	pop    ebx
  4056a6:	ret    
  4056a7:	nop
  4056a8:	push   ebx
  4056a9:	push   esi
  4056aa:	push   edi
  4056ab:	mov    ebx,eax
  4056ad:	mov    esi,edx
  4056af:	xor    edi,edi
  4056b1:	test   edx,edx
  4056b3:	jle    0x4056fd
  4056b5:	mov    eax,DWORD PTR [ebx]
  4056b7:	test   eax,eax
  4056b9:	je     0x4056de
  4056bb:	cmp    DWORD PTR [eax-0x8],0x1
  4056bf:	jne    0x4056de
  4056c1:	sub    eax,0x8
  4056c4:	add    edx,0x9
  4056c7:	push   eax
  4056c8:	mov    eax,esp
  4056ca:	call   0x402ed4
  4056cf:	pop    eax
  4056d0:	add    eax,0x8
  4056d3:	mov    DWORD PTR [ebx],eax
  4056d5:	mov    DWORD PTR [eax-0x4],esi
  4056d8:	mov    BYTE PTR [esi+eax*1],0x0
  4056dc:	jmp    0x405706
  4056de:	mov    eax,edx
  4056e0:	call   0x40504c
  4056e5:	mov    edi,eax
  4056e7:	mov    eax,DWORD PTR [ebx]
  4056e9:	test   eax,eax
  4056eb:	je     0x4056fd
  4056ed:	mov    edx,edi
  4056ef:	mov    ecx,DWORD PTR [eax-0x4]
  4056f2:	cmp    ecx,esi
  4056f4:	jl     0x4056f8
  4056f6:	mov    ecx,esi
  4056f8:	call   0x403090
  4056fd:	mov    eax,ebx
  4056ff:	call   0x404f88
  405704:	mov    DWORD PTR [ebx],edi
  405706:	pop    edi
  405707:	pop    esi
  405708:	pop    ebx
  405709:	ret    
  40570a:	mov    eax,eax
  40570c:	push   ebx
  40570d:	push   esi
  40570e:	push   edi
  40570f:	mov    ebx,eax
  405711:	mov    esi,edx
  405713:	mov    edi,ecx
  405715:	mov    eax,ecx
  405717:	call   0x404f88
  40571c:	test   esi,esi
  40571e:	jle    0x405732
  405720:	mov    eax,esi
  405722:	call   0x40504c
  405727:	mov    DWORD PTR [edi],eax
  405729:	mov    edx,esi
  40572b:	mov    cl,bl
  40572d:	call   0x4037c8
  405732:	pop    edi
  405733:	pop    esi
  405734:	pop    ebx
  405735:	ret    
  405736:	mov    eax,eax
  405738:	xor    ecx,ecx
  40573a:	call   0x405740
  40573f:	ret    
  405740:	push   ebx
  405741:	mov    ebx,edx
  405743:	mov    edx,ecx
  405745:	xor    ecx,ecx
  405747:	test   ebx,ebx
  405749:	je     0x405750
  40574b:	mov    ecx,DWORD PTR [ebx-0x4]
  40574e:	sub    edx,ecx
  405750:	push   ecx
  405751:	call   0x403a30
  405756:	pop    ecx
  405757:	mov    edx,ebx
  405759:	pop    ebx
  40575a:	jmp    0x4039dc
  40575f:	ret    
  405760:	mov    al,0x1
  405762:	jmp    0x402ff0
  405767:	ret    
  405768:	test   eax,eax
  40576a:	je     0x40577c
  40576c:	push   eax
  40576d:	push   0x0
  40576f:	call   0x40132c
  405774:	test   eax,eax
  405776:	je     0x405760
  40577c:	ret    
  40577d:	lea    eax,[eax+0x0]
  405780:	xchg   DWORD PTR [eax],edx
  405782:	test   edx,edx
  405784:	je     0x40578c
  405786:	push   edx
  405787:	call   0x40133c
  40578c:	ret    
  40578d:	lea    eax,[eax+0x0]
  405790:	mov    edx,DWORD PTR [eax]
  405792:	test   edx,edx
  405794:	je     0x4057a4
  405796:	mov    DWORD PTR [eax],0x0
  40579c:	push   eax
  40579d:	push   edx
  40579e:	call   0x40133c
  4057a3:	pop    eax
  4057a4:	ret    
  4057a5:	lea    eax,[eax+0x0]
  4057a8:	push   ebx
  4057a9:	push   esi
  4057aa:	mov    ebx,eax
  4057ac:	mov    esi,edx
  4057ae:	mov    eax,DWORD PTR [ebx]
  4057b0:	test   eax,eax
  4057b2:	je     0x4057c0
  4057b4:	mov    DWORD PTR [ebx],0x0
  4057ba:	push   eax
  4057bb:	call   0x40133c
  4057c0:	add    ebx,0x4
  4057c3:	dec    esi
  4057c4:	jne    0x4057ae
  4057c6:	pop    esi
  4057c7:	pop    ebx
  4057c8:	ret    
  4057c9:	lea    eax,[eax+0x0]
  4057cc:	cmp    DWORD PTR [eax],edx
  4057ce:	je     0x4057f3
  4057d0:	test   edx,edx
  4057d2:	je     0x405790
  4057d8:	mov    ecx,DWORD PTR [edx-0x4]
  4057db:	shr    ecx,1
  4057dd:	je     0x405790
  4057e3:	push   ecx
  4057e4:	push   edx
  4057e5:	push   eax
  4057e6:	call   0x401334
  4057eb:	test   eax,eax
  4057ed:	je     0x405760
  4057f3:	ret    
  4057f4:	push   ebx
  4057f5:	push   esi
  4057f6:	push   edi
  4057f7:	push   ebp
  4057f8:	add    esp,0xfffff004
  4057fe:	push   eax
  4057ff:	add    esp,0xfffffffc
  405802:	mov    esi,ecx
  405804:	mov    DWORD PTR [esp],edx
  405807:	mov    edi,eax
  405809:	test   esi,esi
  40580b:	jg     0x405816
  40580d:	mov    eax,edi
  40580f:	call   0x405790
  405814:	jmp    0x405873
  405816:	lea    ebp,[esi+0x1]
  405819:	cmp    ebp,0x7ff
  40581f:	jge    0x405849
  405821:	push   esi
  405822:	lea    eax,[esp+0x8]
  405826:	mov    ecx,DWORD PTR [esp+0x4]
  40582a:	mov    edx,0x7ff
  40582f:	call   0x4050c8
  405834:	mov    ebx,eax
  405836:	test   ebx,ebx
  405838:	jle    0x405849
  40583a:	lea    edx,[esp+0x4]
  40583e:	mov    eax,edi
  405840:	mov    ecx,ebx
  405842:	call   0x405880
  405847:	jmp    0x405873
  405849:	mov    ebx,ebp
  40584b:	mov    eax,edi
  40584d:	mov    edx,ebx
  40584f:	call   0x4059dc
  405854:	push   esi
  405855:	mov    eax,DWORD PTR [edi]
  405857:	mov    ecx,DWORD PTR [esp+0x4]
  40585b:	mov    edx,ebx
  40585d:	call   0x4050c8
  405862:	mov    ebx,eax
  405864:	test   ebx,ebx
  405866:	jge    0x40586a
  405868:	xor    ebx,ebx
  40586a:	mov    eax,edi
  40586c:	mov    edx,ebx
  40586e:	call   0x4059dc
  405873:	add    esp,0x1004
  405879:	pop    ebp
  40587a:	pop    edi
  40587b:	pop    esi
  40587c:	pop    ebx
  40587d:	ret    
  40587e:	mov    eax,eax
  405880:	test   ecx,ecx
  405882:	je     0x405790
  405888:	push   eax
  405889:	push   ecx
  40588a:	push   edx
  40588b:	call   0x40132c
  405890:	test   eax,eax
  405892:	je     0x405760
  405898:	pop    edx
  405899:	push   DWORD PTR [edx]
  40589b:	mov    DWORD PTR [edx],eax
  40589d:	call   0x40133c
  4058a2:	ret    
  4058a3:	nop
  4058a4:	xor    ecx,ecx
  4058a6:	test   edx,edx
  4058a8:	je     0x4058d7
  4058aa:	push   edx
  4058ab:	cmp    cx,WORD PTR [edx]
  4058ae:	je     0x4058d0
  4058b0:	cmp    cx,WORD PTR [edx+0x2]
  4058b4:	je     0x4058cd
  4058b6:	cmp    cx,WORD PTR [edx+0x4]
  4058ba:	je     0x4058ca
  4058bc:	cmp    cx,WORD PTR [edx+0x6]
  4058c0:	je     0x4058c7
  4058c2:	add    edx,0x8
  4058c5:	jmp    0x4058ab
  4058c7:	add    edx,0x2
  4058ca:	add    edx,0x2
  4058cd:	add    edx,0x2
  4058d0:	mov    ecx,edx
  4058d2:	pop    edx
  4058d3:	sub    ecx,edx
  4058d5:	shr    ecx,1
  4058d7:	jmp    0x405880
  4058dc:	ret    
  4058dd:	lea    eax,[eax+0x0]
  4058e0:	xor    ecx,ecx
  4058e2:	test   edx,edx
  4058e4:	je     0x4058e9
  4058e6:	mov    ecx,DWORD PTR [edx-0x4]
  4058e9:	jmp    0x4057f4
  4058ee:	ret    
  4058ef:	nop
  4058f0:	test   eax,eax
  4058f2:	je     0x4058f8
  4058f4:	ret    
  4058f5:	nop
  4058f6:	add    BYTE PTR [eax],al
  4058f8:	mov    eax,0x4058f6
  4058fd:	ret    
  4058fe:	mov    eax,eax
  405900:	test   eax,eax
  405902:	je     0x405909
  405904:	mov    eax,DWORD PTR [eax-0x4]
  405907:	shr    eax,1
  405909:	ret    
  40590a:	mov    eax,eax
  40590c:	push   ebx
  40590d:	push   esi
  40590e:	push   edi
  40590f:	mov    esi,eax
  405911:	mov    edi,edx
  405913:	cmp    eax,edx
  405915:	je     0x405989
  405917:	test   esi,esi
  405919:	je     0x40596c
  40591b:	test   edi,edi
  40591d:	je     0x405973
  40591f:	mov    eax,DWORD PTR [esi-0x4]
  405922:	mov    edx,DWORD PTR [edi-0x4]
  405925:	sub    eax,edx
  405927:	ja     0x40592b
  405929:	add    edx,eax
  40592b:	push   edx
  40592c:	shr    edx,0x2
  40592f:	je     0x405957
  405931:	mov    ecx,DWORD PTR [esi]
  405933:	mov    ebx,DWORD PTR [edi]
  405935:	cmp    ecx,ebx
  405937:	jne    0x40597a
  405939:	dec    edx
  40593a:	je     0x405951
  40593c:	mov    ecx,DWORD PTR [esi+0x4]
  40593f:	mov    ebx,DWORD PTR [edi+0x4]
  405942:	cmp    ecx,ebx
  405944:	jne    0x40597a
  405946:	add    esi,0x8
  405949:	add    edi,0x8
  40594c:	dec    edx
  40594d:	jne    0x405931
  40594f:	jmp    0x405957
  405951:	add    esi,0x4
  405954:	add    edi,0x4
  405957:	pop    edx
  405958:	and    edx,0x2
  40595b:	je     0x405968
  40595d:	mov    cx,WORD PTR [esi]
  405960:	mov    bx,WORD PTR [edi]
  405963:	cmp    cx,bx
  405966:	jne    0x405989
  405968:	add    eax,eax
  40596a:	jmp    0x405989
  40596c:	mov    edx,DWORD PTR [edi-0x4]
  40596f:	sub    eax,edx
  405971:	jmp    0x405989
  405973:	mov    eax,DWORD PTR [esi-0x4]
  405976:	sub    eax,edx
  405978:	jmp    0x405989
  40597a:	pop    edx
  40597b:	cmp    cx,bx
  40597e:	jne    0x405989
  405980:	shr    ecx,0x10
  405983:	shr    ebx,0x10
  405986:	cmp    cx,bx
  405989:	pop    edi
  40598a:	pop    esi
  40598b:	pop    ebx
  40598c:	ret    
  40598d:	lea    eax,[eax+0x0]
  405990:	push   ebp
  405991:	mov    ebp,esp
  405993:	push   ebx
  405994:	push   esi
  405995:	push   edi
  405996:	mov    edi,ecx
  405998:	mov    ebx,edx
  40599a:	mov    esi,eax
  40599c:	mov    eax,esi
  40599e:	call   0x405900
  4059a3:	cmp    ebx,0x1
  4059a6:	jge    0x4059ac
  4059a8:	xor    ebx,ebx
  4059aa:	jmp    0x4059b3
  4059ac:	dec    ebx
  4059ad:	cmp    eax,ebx
  4059af:	jge    0x4059b3
  4059b1:	mov    ebx,eax
  4059b3:	test   edi,edi
  4059b5:	jge    0x4059bb
  4059b7:	xor    eax,eax
  4059b9:	jmp    0x4059c3
  4059bb:	sub    eax,ebx
  4059bd:	cmp    edi,eax
  4059bf:	jge    0x4059c3
  4059c1:	mov    eax,edi
  4059c3:	mov    edx,ebx
  4059c5:	add    edx,edx
  4059c7:	add    edx,esi
  4059c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4059cc:	xchg   ecx,eax
  4059cd:	call   0x405880
  4059d2:	pop    edi
  4059d3:	pop    esi
  4059d4:	pop    ebx
  4059d5:	pop    ebp
  4059d6:	ret    0x4
  4059d9:	lea    eax,[eax+0x0]
  4059dc:	push   ebx
  4059dd:	push   esi
  4059de:	push   edi
  4059df:	mov    esi,edx
  4059e1:	mov    edi,eax
  4059e3:	xor    ebx,ebx
  4059e5:	test   esi,esi
  4059e7:	jle    0x405a10
  4059e9:	mov    eax,esi
  4059eb:	call   0x405768
  4059f0:	mov    ebx,eax
  4059f2:	mov    eax,DWORD PTR [edi]
  4059f4:	call   0x405900
  4059f9:	test   eax,eax
  4059fb:	jle    0x405a10
  4059fd:	cmp    esi,eax
  4059ff:	jge    0x405a03
  405a01:	mov    eax,esi
  405a03:	mov    ecx,eax
  405a05:	add    ecx,ecx
  405a07:	mov    edx,ebx
  405a09:	mov    eax,DWORD PTR [edi]
  405a0b:	call   0x403090
  405a10:	mov    eax,edi
  405a12:	mov    edx,ebx
  405a14:	call   0x405780
  405a19:	pop    edi
  405a1a:	pop    esi
  405a1b:	pop    ebx
  405a1c:	ret    
  405a1d:	lea    eax,[eax+0x0]
  405a20:	mov    edx,DWORD PTR [eax]
  405a22:	test   edx,edx
  405a24:	je     0x405a3e
  405a26:	push   eax
  405a27:	mov    ecx,DWORD PTR [edx-0x4]
  405a2a:	shr    ecx,1
  405a2c:	push   ecx
  405a2d:	push   edx
  405a2e:	call   0x40132c
  405a33:	pop    edx
  405a34:	test   eax,eax
  405a36:	je     0x405760
  405a3c:	mov    DWORD PTR [edx],eax
  405a3e:	ret    
  405a3f:	nop
  405a40:	xor    ecx,ecx
  405a42:	push   ebx
  405a43:	mov    cl,BYTE PTR [edx+0x1]
  405a46:	push   esi
  405a47:	push   edi
  405a48:	mov    ebx,eax
  405a4a:	lea    esi,[ecx+edx*1+0xa]
  405a4e:	mov    edi,DWORD PTR [ecx+edx*1+0x6]
  405a52:	mov    edx,DWORD PTR [esi]
  405a54:	mov    eax,DWORD PTR [esi+0x4]
  405a57:	add    eax,ebx
  405a59:	mov    edx,DWORD PTR [edx]
  405a5b:	mov    ecx,0x1
  405a60:	call   0x405a70
  405a65:	add    esi,0x8
  405a68:	dec    edi
  405a69:	jg     0x405a52
  405a6b:	pop    edi
  405a6c:	pop    esi
  405a6d:	pop    ebx
  405a6e:	ret    
  405a6f:	nop
  405a70:	test   ecx,ecx
  405a72:	je     0x405b02
  405a78:	push   ebx
  405a79:	push   esi
  405a7a:	push   edi
  405a7b:	mov    ebx,eax
  405a7d:	mov    esi,edx
  405a7f:	mov    edi,ecx
  405a81:	xor    edx,edx
  405a83:	mov    al,BYTE PTR [esi]
  405a85:	mov    dl,BYTE PTR [esi+0x1]
  405a88:	xor    ecx,ecx
  405a8a:	cmp    al,0xa
  405a8c:	je     0x405ab0
  405a8e:	cmp    al,0xb
  405a90:	je     0x405ab0
  405a92:	cmp    al,0xc
  405a94:	je     0x405aba
  405a96:	cmp    al,0xd
  405a98:	je     0x405acd
  405a9a:	cmp    al,0xe
  405a9c:	je     0x405aeb
  405a9e:	cmp    al,0xf
  405aa0:	je     0x405ab0
  405aa2:	cmp    al,0x11
  405aa4:	je     0x405ab0
  405aa6:	mov    al,0x2
  405aa8:	pop    edi
  405aa9:	pop    esi
  405aaa:	pop    ebx
  405aab:	jmp    0x402ff0
  405ab0:	mov    DWORD PTR [ebx],ecx
  405ab2:	add    ebx,0x4
  405ab5:	dec    edi
  405ab6:	jg     0x405ab0
  405ab8:	jmp    0x405aff
  405aba:	mov    DWORD PTR [ebx],ecx
  405abc:	mov    DWORD PTR [ebx+0x4],ecx
  405abf:	mov    DWORD PTR [ebx+0x8],ecx
  405ac2:	mov    DWORD PTR [ebx+0xc],ecx
  405ac5:	add    ebx,0x10
  405ac8:	dec    edi
  405ac9:	jg     0x405aba
  405acb:	jmp    0x405aff
  405acd:	push   ebp
  405ace:	mov    ebp,edx
  405ad0:	mov    edx,DWORD PTR [esi+ebp*1+0xa]
  405ad4:	mov    eax,ebx
  405ad6:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405ada:	mov    ecx,DWORD PTR [esi+ebp*1+0x6]
  405ade:	mov    edx,DWORD PTR [edx]
  405ae0:	call   0x405a70
  405ae5:	dec    edi
  405ae6:	jg     0x405ad0
  405ae8:	pop    ebp
  405ae9:	jmp    0x405aff
  405aeb:	push   ebp
  405aec:	mov    ebp,edx
  405aee:	mov    eax,ebx
  405af0:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405af4:	mov    edx,esi
  405af6:	call   0x405a40
  405afb:	dec    edi
  405afc:	jg     0x405aee
  405afe:	pop    ebp
  405aff:	pop    edi
  405b00:	pop    esi
  405b01:	pop    ebx
  405b02:	ret    
  405b03:	nop
  405b04:	xor    ecx,ecx
  405b06:	push   ebx
  405b07:	mov    cl,BYTE PTR [edx+0x1]
  405b0a:	push   esi
  405b0b:	push   edi
  405b0c:	mov    ebx,eax
  405b0e:	lea    esi,[ecx+edx*1+0xa]
  405b12:	mov    edi,DWORD PTR [ecx+edx*1+0x6]
  405b16:	mov    edx,DWORD PTR [esi]
  405b18:	mov    eax,DWORD PTR [esi+0x4]
  405b1b:	add    eax,ebx
  405b1d:	mov    edx,DWORD PTR [edx]
  405b1f:	mov    ecx,0x1
  405b24:	call   0x405b50
  405b29:	add    esi,0x8
  405b2c:	dec    edi
  405b2d:	jg     0x405b16
  405b2f:	mov    eax,ebx
  405b31:	pop    edi
  405b32:	pop    esi
  405b33:	pop    ebx
  405b34:	ret    
  405b35:	lea    eax,[eax+0x0]
  405b38:	cmp    DWORD PTR ds:0x461010,0x0
  405b3f:	je     0x405b48
  405b41:	call   DWORD PTR ds:0x461010
  405b47:	ret    
  405b48:	mov    al,0x10
  405b4a:	call   0x402ff0
  405b4f:	ret    
  405b50:	cmp    ecx,0x0
  405b53:	je     0x405c39
  405b59:	push   eax
  405b5a:	push   ebx
  405b5b:	push   esi
  405b5c:	push   edi
  405b5d:	mov    ebx,eax
  405b5f:	mov    esi,edx
  405b61:	mov    edi,ecx
  405b63:	xor    edx,edx
  405b65:	mov    al,BYTE PTR [esi]
  405b67:	mov    dl,BYTE PTR [esi+0x1]
  405b6a:	cmp    al,0xa
  405b6c:	je     0x405b93
  405b6e:	cmp    al,0xb
  405b70:	je     0x405bb0
  405b72:	cmp    al,0xc
  405b74:	je     0x405bc7
  405b76:	cmp    al,0xd
  405b78:	je     0x405bd6
  405b7a:	cmp    al,0xe
  405b7c:	je     0x405bf4
  405b7e:	cmp    al,0xf
  405b80:	je     0x405c0a
  405b86:	cmp    al,0x11
  405b88:	je     0x405c19
  405b8e:	jmp    0x405c2a
  405b93:	cmp    ecx,0x1
  405b96:	mov    eax,ebx
  405b98:	jg     0x405ba4
  405b9a:	call   0x404f88
  405b9f:	jmp    0x405c35
  405ba4:	mov    edx,ecx
  405ba6:	call   0x404fac
  405bab:	jmp    0x405c35
  405bb0:	cmp    ecx,0x1
  405bb3:	mov    eax,ebx
  405bb5:	jg     0x405bbe
  405bb7:	call   0x405790
  405bbc:	jmp    0x405c35
  405bbe:	mov    edx,ecx
  405bc0:	call   0x4057a8
  405bc5:	jmp    0x405c35
  405bc7:	mov    eax,ebx
  405bc9:	add    ebx,0x10
  405bcc:	call   0x405b38
  405bd1:	dec    edi
  405bd2:	jg     0x405bc7
  405bd4:	jmp    0x405c35
  405bd6:	push   ebp
  405bd7:	mov    ebp,edx
  405bd9:	mov    edx,DWORD PTR [esi+ebp*1+0xa]
  405bdd:	mov    eax,ebx
  405bdf:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405be3:	mov    ecx,DWORD PTR [esi+ebp*1+0x6]
  405be7:	mov    edx,DWORD PTR [edx]
  405be9:	call   0x405b50
  405bee:	dec    edi
  405bef:	jg     0x405bd9
  405bf1:	pop    ebp
  405bf2:	jmp    0x405c35
  405bf4:	push   ebp
  405bf5:	mov    ebp,edx
  405bf7:	mov    eax,ebx
  405bf9:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405bfd:	mov    edx,esi
  405bff:	call   0x405b04
  405c04:	dec    edi
  405c05:	jg     0x405bf7
  405c07:	pop    ebp
  405c08:	jmp    0x405c35
  405c0a:	mov    eax,ebx
  405c0c:	add    ebx,0x4
  405c0f:	call   0x406a98
  405c14:	dec    edi
  405c15:	jg     0x405c0a
  405c17:	jmp    0x405c35
  405c19:	mov    eax,ebx
  405c1b:	mov    edx,esi
  405c1d:	add    ebx,0x4
  405c20:	call   0x4063bc
  405c25:	dec    edi
  405c26:	jg     0x405c19
  405c28:	jmp    0x405c35
  405c2a:	pop    edi
  405c2b:	pop    esi
  405c2c:	pop    ebx
  405c2d:	pop    eax
  405c2e:	mov    al,0x2
  405c30:	jmp    0x402ff0
  405c35:	pop    edi
  405c36:	pop    esi
  405c37:	pop    ebx
  405c38:	pop    eax
  405c39:	ret    
  405c3a:	mov    eax,eax
  405c3c:	mov    ecx,0x1
  405c41:	jmp    0x405b50
  405c46:	ret    
  405c47:	nop
  405c48:	xor    ecx,ecx
  405c4a:	push   ebx
  405c4b:	mov    cl,BYTE PTR [edx+0x1]
  405c4e:	push   esi
  405c4f:	push   edi
  405c50:	mov    ebx,eax
  405c52:	lea    esi,[ecx+edx*1+0xa]
  405c56:	mov    edi,DWORD PTR [ecx+edx*1+0x6]
  405c5a:	mov    edx,DWORD PTR [esi]
  405c5c:	mov    eax,DWORD PTR [esi+0x4]
  405c5f:	add    eax,ebx
  405c61:	mov    edx,DWORD PTR [edx]
  405c63:	mov    ecx,0x1
  405c68:	call   0x405c90
  405c6d:	add    esi,0x8
  405c70:	dec    edi
  405c71:	jg     0x405c5a
  405c73:	pop    edi
  405c74:	pop    esi
  405c75:	pop    ebx
  405c76:	ret    
  405c77:	nop
  405c78:	cmp    DWORD PTR ds:0x461014,0x0
  405c7f:	je     0x405c88
  405c81:	call   DWORD PTR ds:0x461014
  405c87:	ret    
  405c88:	mov    al,0x10
  405c8a:	call   0x402ff0
  405c8f:	ret    
  405c90:	push   ebx
  405c91:	push   esi
  405c92:	push   edi
  405c93:	test   ecx,ecx
  405c95:	je     0x405d4b
  405c9b:	mov    ebx,eax
  405c9d:	mov    esi,edx
  405c9f:	mov    edi,ecx
  405ca1:	xor    edx,edx
  405ca3:	mov    al,BYTE PTR [esi]
  405ca5:	mov    dl,BYTE PTR [esi+0x1]
  405ca8:	cmp    al,0xa
  405caa:	je     0x405cce
  405cac:	cmp    al,0xb
  405cae:	je     0x405cdd
  405cb0:	cmp    al,0xc
  405cb2:	je     0x405cec
  405cb4:	cmp    al,0xd
  405cb6:	je     0x405cfb
  405cb8:	cmp    al,0xe
  405cba:	je     0x405d19
  405cbc:	cmp    al,0xf
  405cbe:	je     0x405d2f
  405cc0:	cmp    al,0x11
  405cc2:	je     0x405d3e
  405cc4:	mov    al,0x2
  405cc6:	pop    edi
  405cc7:	pop    esi
  405cc8:	pop    ebx
  405cc9:	jmp    0x402ff0
  405cce:	mov    eax,DWORD PTR [ebx]
  405cd0:	add    ebx,0x4
  405cd3:	call   0x405408
  405cd8:	dec    edi
  405cd9:	jg     0x405cce
  405cdb:	jmp    0x405d4b
  405cdd:	mov    eax,ebx
  405cdf:	add    ebx,0x4
  405ce2:	call   0x405a20
  405ce7:	dec    edi
  405ce8:	jg     0x405cdd
  405cea:	jmp    0x405d4b
  405cec:	mov    eax,ebx
  405cee:	add    ebx,0x10
  405cf1:	call   0x405c78
  405cf6:	dec    edi
  405cf7:	jg     0x405cec
  405cf9:	jmp    0x405d4b
  405cfb:	push   ebp
  405cfc:	mov    ebp,edx
  405cfe:	mov    edx,DWORD PTR [esi+ebp*1+0xa]
  405d02:	mov    eax,ebx
  405d04:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405d08:	mov    ecx,DWORD PTR [esi+ebp*1+0x6]
  405d0c:	mov    edx,DWORD PTR [edx]
  405d0e:	call   0x405c90
  405d13:	dec    edi
  405d14:	jg     0x405cfe
  405d16:	pop    ebp
  405d17:	jmp    0x405d4b
  405d19:	push   ebp
  405d1a:	mov    ebp,edx
  405d1c:	mov    eax,ebx
  405d1e:	add    ebx,DWORD PTR [esi+ebp*1+0x2]
  405d22:	mov    edx,esi
  405d24:	call   0x405c48
  405d29:	dec    edi
  405d2a:	jg     0x405d1c
  405d2c:	pop    ebp
  405d2d:	jmp    0x405d4b
  405d2f:	mov    eax,DWORD PTR [ebx]
  405d31:	add    ebx,0x4
  405d34:	call   0x406adc
  405d39:	dec    edi
  405d3a:	jg     0x405d2f
  405d3c:	jmp    0x405d4b
  405d3e:	mov    eax,DWORD PTR [ebx]
  405d40:	add    ebx,0x4
  405d43:	call   0x406420
  405d48:	dec    edi
  405d49:	jg     0x405d3e
  405d4b:	pop    edi
  405d4c:	pop    esi
  405d4d:	pop    ebx
  405d4e:	ret    
  405d4f:	nop
  405d50:	cmp    DWORD PTR ds:0x461018,0x0
  405d57:	je     0x405d60
  405d59:	call   DWORD PTR ds:0x461018
  405d5f:	ret    
  405d60:	mov    al,0x10
  405d62:	call   0x402ff0
  405d67:	ret    
  405d68:	push   ebx
  405d69:	push   esi
  405d6a:	push   edi
  405d6b:	push   ebp
  405d6c:	mov    ebx,eax
  405d6e:	mov    esi,edx
  405d70:	xor    eax,eax
  405d72:	mov    al,BYTE PTR [ecx+0x1]
  405d75:	lea    edi,[eax+ecx*1+0xa]
  405d79:	mov    ebp,DWORD PTR [edi-0x4]
  405d7c:	xor    eax,eax
  405d7e:	mov    ecx,DWORD PTR [edi-0x8]
  405d81:	push   ecx
  405d82:	mov    ecx,DWORD PTR [edi+0x4]
  405d85:	sub    ecx,eax
  405d87:	jle    0x405d94
  405d89:	mov    edx,eax
  405d8b:	add    eax,esi
  405d8d:	add    edx,ebx
  405d8f:	call   0x403090
  405d94:	mov    eax,DWORD PTR [edi+0x4]
  405d97:	mov    edx,DWORD PTR [edi]
  405d99:	mov    edx,DWORD PTR [edx]
  405d9b:	mov    cl,BYTE PTR [edx]
  405d9d:	cmp    cl,0xa
  405da0:	je     0x405dd3
  405da2:	cmp    cl,0xb
  405da5:	je     0x405de4
  405da7:	cmp    cl,0xc
  405daa:	je     0x405df5
  405dac:	cmp    cl,0xd
  405daf:	je     0x405e06
  405db1:	cmp    cl,0xe
  405db4:	je     0x405e26
  405db6:	cmp    cl,0xf
  405db9:	je     0x405e3f
  405dbf:	cmp    cl,0x11
  405dc2:	je     0x405e50
  405dc8:	mov    al,0x2
  405dca:	pop    ebp
  405dcb:	pop    edi
  405dcc:	pop    esi
  405dcd:	pop    ebx
  405dce:	jmp    0x402ff0
  405dd3:	mov    edx,DWORD PTR [eax+esi*1]
  405dd6:	add    eax,ebx
  405dd8:	call   0x404fdc
  405ddd:	mov    eax,0x4
  405de2:	jmp    0x405e61
  405de4:	mov    edx,DWORD PTR [eax+esi*1]
  405de7:	add    eax,ebx
  405de9:	call   0x4057cc
  405dee:	mov    eax,0x4
  405df3:	jmp    0x405e61
  405df5:	lea    edx,[eax+esi*1]
  405df8:	add    eax,ebx
  405dfa:	call   0x405d50
  405dff:	mov    eax,0x10
  405e04:	jmp    0x405e61
  405e06:	xor    ecx,ecx
  405e08:	mov    cl,BYTE PTR [edx+0x1]
  405e0b:	push   DWORD PTR [ecx+edx*1+0x2]
  405e0f:	push   DWORD PTR [ecx+edx*1+0x6]
  405e13:	mov    ecx,DWORD PTR [ecx+edx*1+0xa]
  405e17:	mov    ecx,DWORD PTR [ecx]
  405e19:	lea    edx,[eax+esi*1]
  405e1c:	add    eax,ebx
  405e1e:	call   0x405e84
  405e23:	pop    eax
  405e24:	jmp    0x405e61
  405e26:	xor    ecx,ecx
  405e28:	mov    cl,BYTE PTR [edx+0x1]
  405e2b:	mov    ecx,DWORD PTR [ecx+edx*1+0x2]
  405e2f:	push   ecx
  405e30:	mov    ecx,edx
  405e32:	lea    edx,[eax+esi*1]
  405e35:	add    eax,ebx
  405e37:	call   0x405d68
  405e3c:	pop    eax
  405e3d:	jmp    0x405e61
  405e3f:	mov    edx,DWORD PTR [eax+esi*1]
  405e42:	add    eax,ebx
  405e44:	call   0x406ab0
  405e49:	mov    eax,0x4
  405e4e:	jmp    0x405e61
  405e50:	mov    ecx,edx
  405e52:	mov    edx,DWORD PTR [eax+esi*1]
  405e55:	add    eax,ebx
  405e57:	call   0x4063f8
  405e5c:	mov    eax,0x4
  405e61:	add    eax,DWORD PTR [edi+0x4]
  405e64:	add    edi,0x8
  405e67:	dec    ebp
  405e68:	jne    0x405d82
  405e6e:	pop    ecx
  405e6f:	sub    ecx,eax
  405e71:	jle    0x405e7d
  405e73:	lea    edx,[eax+ebx*1]
  405e76:	add    eax,esi
  405e78:	call   0x403090
  405e7d:	pop    ebp
  405e7e:	pop    edi
  405e7f:	pop    esi
  405e80:	pop    ebx
  405e81:	ret    
  405e82:	mov    eax,eax
  405e84:	push   ebx
  405e85:	push   esi
  405e86:	push   edi
  405e87:	push   ebp
  405e88:	mov    ebx,eax
  405e8a:	mov    esi,edx
  405e8c:	mov    edi,ecx
  405e8e:	mov    ebp,DWORD PTR [esp+0x14]
  405e92:	mov    cl,BYTE PTR [edi]
  405e94:	cmp    cl,0xa
  405e97:	je     0x405eca
  405e99:	cmp    cl,0xb
  405e9c:	je     0x405ee1
  405e9e:	cmp    cl,0xc
  405ea1:	je     0x405ef5
  405ea3:	cmp    cl,0xd
  405ea6:	je     0x405f09
  405ea8:	cmp    cl,0xe
  405eab:	je     0x405f2c
  405ead:	cmp    cl,0xf
  405eb0:	je     0x405f49
  405eb6:	cmp    cl,0x11
  405eb9:	je     0x405f5d
  405ebf:	mov    al,0x2
  405ec1:	pop    ebp
  405ec2:	pop    edi
  405ec3:	pop    esi
  405ec4:	pop    ebx
  405ec5:	jmp    0x402ff0
  405eca:	mov    eax,ebx
  405ecc:	mov    edx,DWORD PTR [esi]
  405ece:	call   0x404fdc
  405ed3:	add    ebx,0x4
  405ed6:	add    esi,0x4
  405ed9:	dec    ebp
  405eda:	jne    0x405eca
  405edc:	jmp    0x405f71
  405ee1:	mov    eax,ebx
  405ee3:	mov    edx,DWORD PTR [esi]
  405ee5:	call   0x4057cc
  405eea:	add    ebx,0x4
  405eed:	add    esi,0x4
  405ef0:	dec    ebp
  405ef1:	jne    0x405ee1
  405ef3:	jmp    0x405f71
  405ef5:	mov    eax,ebx
  405ef7:	mov    edx,esi
  405ef9:	call   0x405d50
  405efe:	add    ebx,0x10
  405f01:	add    esi,0x10
  405f04:	dec    ebp
  405f05:	jne    0x405ef5
  405f07:	jmp    0x405f71
  405f09:	xor    ecx,ecx
  405f0b:	mov    cl,BYTE PTR [edi+0x1]
  405f0e:	lea    edi,[ecx+edi*1+0x2]
  405f12:	mov    eax,ebx
  405f14:	mov    edx,esi
  405f16:	mov    ecx,DWORD PTR [edi+0x8]
  405f19:	mov    ecx,DWORD PTR [ecx]
  405f1b:	push   DWORD PTR [edi+0x4]
  405f1e:	call   0x405e84
  405f23:	add    ebx,DWORD PTR [edi]
  405f25:	add    esi,DWORD PTR [edi]
  405f27:	dec    ebp
  405f28:	jne    0x405f12
  405f2a:	jmp    0x405f71
  405f2c:	mov    eax,ebx
  405f2e:	mov    edx,esi
  405f30:	mov    ecx,edi
  405f32:	call   0x405d68
  405f37:	xor    eax,eax
  405f39:	mov    al,BYTE PTR [edi+0x1]
  405f3c:	add    ebx,DWORD PTR [eax+edi*1+0x2]
  405f40:	add    esi,DWORD PTR [eax+edi*1+0x2]
  405f44:	dec    ebp
  405f45:	jne    0x405f2c
  405f47:	jmp    0x405f71
  405f49:	mov    eax,ebx
  405f4b:	mov    edx,DWORD PTR [esi]
  405f4d:	call   0x406ab0
  405f52:	add    ebx,0x4
  405f55:	add    esi,0x4
  405f58:	dec    ebp
  405f59:	jne    0x405f49
  405f5b:	jmp    0x405f71
  405f5d:	mov    eax,ebx
  405f5f:	mov    edx,DWORD PTR [esi]
  405f61:	mov    ecx,edi
  405f63:	call   0x4063f8
  405f68:	add    ebx,0x4
  405f6b:	add    esi,0x4
  405f6e:	dec    ebp
  405f6f:	jne    0x405f5d
  405f71:	pop    ebp
  405f72:	pop    edi
  405f73:	pop    esi
  405f74:	pop    ebx
  405f75:	ret    0x4
  405f78:	ret    
  405f79:	lea    eax,[eax+0x0]
  405f7c:	push   eax
  405f7d:	call   0x405c3c
  405f82:	pop    eax
  405f83:	call   0x402ebc
  405f88:	ret    
  405f89:	lea    eax,[eax+0x0]
  405f8c:	mov    al,0x11
  405f8e:	jmp    0x402ff0
  405f93:	ret    
  405f94:	push   edx
  405f95:	push   eax
  405f96:	mov    eax,DWORD PTR [esp+0x10]
  405f9a:	mul    DWORD PTR [esp]
  405f9d:	mov    ecx,eax
  405f9f:	mov    eax,DWORD PTR [esp+0x4]
  405fa3:	mul    DWORD PTR [esp+0xc]
  405fa7:	add    ecx,eax
  405fa9:	mov    eax,DWORD PTR [esp]
  405fac:	mul    DWORD PTR [esp+0xc]
  405fb0:	add    edx,ecx
  405fb2:	pop    ecx
  405fb3:	pop    ecx
  405fb4:	ret    0x8
  405fb7:	ret    
  405fb8:	push   edx
  405fb9:	push   eax
  405fba:	mov    eax,DWORD PTR [esp+0x10]
  405fbe:	mul    DWORD PTR [esp]
  405fc1:	mov    ecx,eax
  405fc3:	mov    eax,DWORD PTR [esp+0x4]
  405fc7:	mul    DWORD PTR [esp+0xc]
  405fcb:	add    ecx,eax
  405fcd:	mov    eax,DWORD PTR [esp]
  405fd0:	mul    DWORD PTR [esp+0xc]
  405fd4:	add    edx,ecx
  405fd6:	pop    ecx
  405fd7:	pop    ecx
  405fd8:	ret    0x8
  405fdb:	ret    
  405fdc:	push   ebx
  405fdd:	push   esi
  405fde:	push   edi
  405fdf:	push   ebp
  405fe0:	add    esp,0xffffffec
  405fe3:	mov    DWORD PTR [esp],edx
  405fe6:	mov    esi,eax
  405fe8:	mov    ebp,0x1
  405fed:	xor    edi,edi
  405fef:	mov    DWORD PTR [esp+0x8],0x0
  405ff7:	mov    DWORD PTR [esp+0xc],0x0
  405fff:	test   esi,esi
  406001:	jne    0x40600e
  406003:	mov    eax,DWORD PTR [esp]
  406006:	mov    DWORD PTR [eax],ebp
  406008:	jmp    0x4061e4
  40600d:	inc    ebp
  40600e:	cmp    BYTE PTR [esi+ebp*1-0x1],0x20
  406013:	je     0x40600d
  406015:	mov    BYTE PTR [esp+0x10],0x0
  40601a:	movzx  eax,BYTE PTR [esi+ebp*1-0x1]
  40601f:	cmp    al,0x2d
  406021:	jne    0x40602b
  406023:	mov    BYTE PTR [esp+0x10],0x1
  406028:	inc    ebp
  406029:	jmp    0x406030
  40602b:	cmp    al,0x2b
  40602d:	jne    0x406030
  40602f:	inc    ebp
  406030:	mov    bl,0x1
  406032:	cmp    BYTE PTR [esi+ebp*1-0x1],0x24
  406037:	je     0x406063
  406039:	movzx  eax,BYTE PTR [esi+ebp*1-0x1]
  40603e:	call   0x403308
  406043:	cmp    al,0x58
  406045:	je     0x406063
  406047:	cmp    BYTE PTR [esi+ebp*1-0x1],0x30
  40604c:	jne    0x406119
  406052:	movzx  eax,BYTE PTR [esi+ebp*1]
  406056:	call   0x403308
  40605b:	cmp    al,0x58
  40605d:	jne    0x406119
  406063:	cmp    BYTE PTR [esi+ebp*1-0x1],0x30
  406068:	jne    0x40606b
  40606a:	inc    ebp
  40606b:	inc    ebp
  40606c:	movzx  ecx,BYTE PTR [esi+ebp*1-0x1]
  406071:	mov    eax,ecx
  406073:	add    al,0xd0
  406075:	sub    al,0xa
  406077:	jb     0x406087
  406079:	add    al,0xf9
  40607b:	sub    al,0x6
  40607d:	jb     0x40608f
  40607f:	add    al,0xe6
  406081:	sub    al,0x6
  406083:	jb     0x406097
  406085:	jmp    0x4060f2
  406087:	movzx  edi,cl
  40608a:	sub    edi,0x30
  40608d:	jmp    0x40609d
  40608f:	movzx  edi,cl
  406092:	sub    edi,0x37
  406095:	jmp    0x40609d
  406097:	movzx  edi,cl
  40609a:	sub    edi,0x57
  40609d:	cmp    DWORD PTR [esp+0xc],0x0
  4060a2:	jne    0x4060ad
  4060a4:	cmp    DWORD PTR [esp+0x8],0x0
  4060a9:	jb     0x4060f2
  4060ab:	jmp    0x4060af
  4060ad:	jl     0x4060f2
  4060af:	cmp    DWORD PTR [esp+0xc],0xfffffff
  4060b7:	jne    0x4060c2
  4060b9:	cmp    DWORD PTR [esp+0x8],0xffffffff
  4060be:	jbe    0x4060c4
  4060c0:	jmp    0x4060f2
  4060c2:	jg     0x4060f2
  4060c4:	mov    eax,edi
  4060c6:	cdq    
  4060c7:	push   edx
  4060c8:	push   eax
  4060c9:	mov    eax,DWORD PTR [esp+0x10]
  4060cd:	mov    edx,DWORD PTR [esp+0x14]
  4060d1:	shld   edx,eax,0x4
  4060d5:	shl    eax,0x4
  4060d8:	add    eax,DWORD PTR [esp]
  4060db:	adc    edx,DWORD PTR [esp+0x4]
  4060df:	add    esp,0x8
  4060e2:	mov    DWORD PTR [esp+0x8],eax
  4060e6:	mov    DWORD PTR [esp+0xc],edx
  4060ea:	inc    ebp
  4060eb:	xor    ebx,ebx
  4060ed:	jmp    0x40606c
  4060f2:	cmp    BYTE PTR [esp+0x10],0x0
  4060f7:	je     0x4061ca
  4060fd:	mov    eax,DWORD PTR [esp+0x8]
  406101:	mov    edx,DWORD PTR [esp+0xc]
  406105:	neg    eax
  406107:	adc    edx,0x0
  40610a:	neg    edx
  40610c:	mov    DWORD PTR [esp+0x8],eax
  406110:	mov    DWORD PTR [esp+0xc],edx
  406114:	jmp    0x4061ca
  406119:	movzx  eax,BYTE PTR [esi+ebp*1-0x1]
  40611e:	add    al,0xd0
  406120:	sub    al,0xa
  406122:	jae    0x406183
  406124:	movzx  edi,BYTE PTR [esi+ebp*1-0x1]
  406129:	sub    edi,0x30
  40612c:	cmp    DWORD PTR [esp+0xc],0x0
  406131:	jne    0x40613c
  406133:	cmp    DWORD PTR [esp+0x8],0x0
  406138:	jb     0x406183
  40613a:	jmp    0x40613e
  40613c:	jl     0x406183
  40613e:	cmp    DWORD PTR [esp+0xc],0xccccccc
  406146:	jne    0x406154
  406148:	cmp    DWORD PTR [esp+0x8],0xcccccccc
  406150:	jbe    0x406156
  406152:	jmp    0x406183
  406154:	jg     0x406183
  406156:	push   0x0
  406158:	push   0xa
  40615a:	mov    eax,DWORD PTR [esp+0x10]
  40615e:	mov    edx,DWORD PTR [esp+0x14]
  406162:	call   0x405f94
  406167:	push   edx
  406168:	push   eax
  406169:	mov    eax,edi
  40616b:	cdq    
  40616c:	add    eax,DWORD PTR [esp]
  40616f:	adc    edx,DWORD PTR [esp+0x4]
  406173:	add    esp,0x8
  406176:	mov    DWORD PTR [esp+0x8],eax
  40617a:	mov    DWORD PTR [esp+0xc],edx
  40617e:	inc    ebp
  40617f:	xor    ebx,ebx
  406181:	jmp    0x406119
  406183:	cmp    BYTE PTR [esp+0x10],0x0
  406188:	je     0x4061a1
  40618a:	mov    eax,DWORD PTR [esp+0x8]
  40618e:	mov    edx,DWORD PTR [esp+0xc]
  406192:	neg    eax
  406194:	adc    edx,0x0
  406197:	neg    edx
  406199:	mov    DWORD PTR [esp+0x8],eax
  40619d:	mov    DWORD PTR [esp+0xc],edx
  4061a1:	cmp    DWORD PTR [esp+0xc],0x0
  4061a6:	jne    0x4061ad
  4061a8:	cmp    DWORD PTR [esp+0x8],0x0
  4061ad:	je     0x4061ca
  4061af:	cmp    DWORD PTR [esp+0xc],0x0
  4061b4:	jne    0x4061c0
  4061b6:	cmp    DWORD PTR [esp+0x8],0x0
  4061bb:	setb   al
  4061be:	jmp    0x4061c3
  4061c0:	setl   al
  4061c3:	cmp    al,BYTE PTR [esp+0x10]
  4061c7:	je     0x4061ca
  4061c9:	dec    ebp
  4061ca:	cmp    BYTE PTR [esi+ebp*1-0x1],0x0
  4061cf:	setne  al
  4061d2:	or     bl,al
  4061d4:	je     0x4061dd
  4061d6:	mov    eax,DWORD PTR [esp]
  4061d9:	mov    DWORD PTR [eax],ebp
  4061db:	jmp    0x4061e4
  4061dd:	mov    eax,DWORD PTR [esp]
  4061e0:	xor    edx,edx
  4061e2:	mov    DWORD PTR [eax],edx
  4061e4:	mov    eax,DWORD PTR [esp+0x8]
  4061e8:	mov    edx,DWORD PTR [esp+0xc]
  4061ec:	add    esp,0x14
  4061ef:	pop    ebp
  4061f0:	pop    edi
  4061f1:	pop    esi
  4061f2:	pop    ebx
  4061f3:	ret    
  4061f4:	test   eax,eax
  4061f6:	je     0x4061fb
  4061f8:	mov    eax,DWORD PTR [eax-0x4]
  4061fb:	ret    
  4061fc:	call   0x4061f4
  406201:	dec    eax
  406202:	ret    
  406203:	nop
  406204:	push   ebp
  406205:	mov    ebp,esp
  406207:	push   DWORD PTR [ebp+0x8]
  40620a:	call   0x405e84
  40620f:	pop    ebp
  406210:	ret    0x4
  406213:	nop
  406214:	jmp    0x405b50
  406219:	ret    
  40621a:	mov    eax,eax
  40621c:	call   0x4063bc
  406221:	ret    
  406222:	mov    eax,eax
  406224:	push   ebp
  406225:	mov    ebp,esp
  406227:	add    esp,0xffffffe0
  40622a:	push   ebx
  40622b:	push   esi
  40622c:	push   edi
  40622d:	mov    DWORD PTR [ebp-0x8],ecx
  406230:	mov    esi,edx
  406232:	mov    DWORD PTR [ebp-0x4],eax
  406235:	mov    ebx,DWORD PTR [ebp-0x4]
  406238:	mov    ebx,DWORD PTR [ebx]
  40623a:	mov    eax,DWORD PTR [ebp+0x8]
  40623d:	mov    edi,DWORD PTR [eax]
  40623f:	test   edi,edi
  406241:	jg     0x40625d
  406243:	test   edi,edi
  406245:	jge    0x40624e
  406247:	mov    al,0x4
  406249:	call   0x402ff0
  40624e:	mov    eax,DWORD PTR [ebp-0x4]
  406251:	mov    edx,esi
  406253:	call   0x40621c
  406258:	jmp    0x4063a6
  40625d:	xor    eax,eax
  40625f:	mov    DWORD PTR [ebp-0x10],eax
  406262:	test   ebx,ebx
  406264:	je     0x406271
  406266:	sub    ebx,0x4
  406269:	mov    eax,DWORD PTR [ebx]
  40626b:	mov    DWORD PTR [ebp-0x10],eax
  40626e:	sub    ebx,0x4
  406271:	movzx  eax,BYTE PTR [esi+0x1]
  406275:	add    esi,eax
  406277:	mov    eax,esi
  406279:	mov    edx,DWORD PTR [eax+0x2]
  40627c:	mov    DWORD PTR [ebp-0x18],edx
  40627f:	mov    edx,DWORD PTR [eax+0x6]
  406282:	test   edx,edx
  406284:	je     0x40628a
  406286:	mov    esi,DWORD PTR [edx]
  406288:	jmp    0x40628c
  40628a:	xor    esi,esi
  40628c:	mov    eax,edi
  40628e:	imul   DWORD PTR [ebp-0x18]
  406291:	mov    DWORD PTR [ebp-0x1c],eax
  406294:	mov    eax,DWORD PTR [ebp-0x1c]
  406297:	cdq    
  406298:	idiv   edi
  40629a:	cmp    eax,DWORD PTR [ebp-0x18]
  40629d:	je     0x4062a6
  40629f:	mov    al,0x4
  4062a1:	call   0x402ff0
  4062a6:	add    DWORD PTR [ebp-0x1c],0x8
  4062aa:	test   ebx,ebx
  4062ac:	je     0x4062b3
  4062ae:	cmp    DWORD PTR [ebx],0x1
  4062b1:	jne    0x4062e8
  4062b3:	mov    DWORD PTR [ebp-0x20],ebx
  4062b6:	cmp    edi,DWORD PTR [ebp-0x10]
  4062b9:	jge    0x4062d8
  4062bb:	test   esi,esi
  4062bd:	je     0x4062d8
  4062bf:	mov    eax,ebx
  4062c1:	add    eax,0x8
  4062c4:	mov    edx,edi
  4062c6:	imul   edx,DWORD PTR [ebp-0x18]
  4062ca:	add    eax,edx
  4062cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4062cf:	sub    ecx,edi
  4062d1:	mov    edx,esi
  4062d3:	call   0x406214
  4062d8:	lea    eax,[ebp-0x20]
  4062db:	mov    edx,DWORD PTR [ebp-0x1c]
  4062de:	call   0x402ed4
  4062e3:	mov    ebx,DWORD PTR [ebp-0x20]
  4062e6:	jmp    0x406346
  4062e8:	dec    DWORD PTR [ebx]
  4062ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4062ed:	call   0x402ea0
  4062f2:	mov    ebx,eax
  4062f4:	mov    eax,DWORD PTR [ebp-0x10]
  4062f7:	mov    DWORD PTR [ebp-0x14],eax
  4062fa:	cmp    edi,DWORD PTR [ebp-0x14]
  4062fd:	jge    0x406302
  4062ff:	mov    DWORD PTR [ebp-0x14],edi
  406302:	test   esi,esi
  406304:	je     0x406330
  406306:	mov    edx,DWORD PTR [ebp-0x14]
  406309:	imul   edx,DWORD PTR [ebp-0x18]
  40630d:	mov    eax,ebx
  40630f:	add    eax,0x8
  406312:	xor    ecx,ecx
  406314:	call   0x4037c8
  406319:	mov    eax,DWORD PTR [ebp-0x14]
  40631c:	push   eax
  40631d:	mov    edx,DWORD PTR [ebp-0x4]
  406320:	mov    edx,DWORD PTR [edx]
  406322:	mov    eax,ebx
  406324:	add    eax,0x8
  406327:	mov    ecx,esi
  406329:	call   0x406204
  40632e:	jmp    0x406346
  406330:	mov    ecx,DWORD PTR [ebp-0x14]
  406333:	imul   ecx,DWORD PTR [ebp-0x18]
  406337:	mov    edx,ebx
  406339:	add    edx,0x8
  40633c:	mov    eax,DWORD PTR [ebp-0x4]
  40633f:	mov    eax,DWORD PTR [eax]
  406341:	call   0x403090
  406346:	mov    DWORD PTR [ebx],0x1
  40634c:	add    ebx,0x4
  40634f:	mov    DWORD PTR [ebx],edi
  406351:	add    ebx,0x4
  406354:	mov    edx,edi
  406356:	sub    edx,DWORD PTR [ebp-0x10]
  406359:	imul   edx,DWORD PTR [ebp-0x18]
  40635d:	mov    eax,DWORD PTR [ebp-0x18]
  406360:	imul   eax,DWORD PTR [ebp-0x10]
  406364:	add    eax,ebx
  406366:	xor    ecx,ecx
  406368:	call   0x4037c8
  40636d:	cmp    DWORD PTR [ebp-0x8],0x1
  406371:	jle    0x4063a1
  406373:	add    DWORD PTR [ebp+0x8],0x4
  406377:	dec    DWORD PTR [ebp-0x8]
  40637a:	dec    edi
  40637b:	test   edi,edi
  40637d:	jl     0x4063a1
  40637f:	inc    edi
  406380:	mov    DWORD PTR [ebp-0xc],0x0
  406387:	mov    eax,DWORD PTR [ebp+0x8]
  40638a:	push   eax
  40638b:	mov    eax,DWORD PTR [ebp-0xc]
  40638e:	lea    eax,[ebx+eax*4]
  406391:	mov    ecx,DWORD PTR [ebp-0x8]
  406394:	mov    edx,esi
  406396:	call   0x406224
  40639b:	inc    DWORD PTR [ebp-0xc]
  40639e:	dec    edi
  40639f:	jne    0x406387
  4063a1:	mov    eax,DWORD PTR [ebp-0x4]
  4063a4:	mov    DWORD PTR [eax],ebx
  4063a6:	pop    edi
  4063a7:	pop    esi
  4063a8:	pop    ebx
  4063a9:	mov    esp,ebp
  4063ab:	pop    ebp
  4063ac:	ret    0x4
  4063af:	nop
  4063b0:	push   esp
  4063b1:	add    DWORD PTR [esp],0x4
  4063b5:	call   0x406224
  4063ba:	ret    
  4063bb:	nop
  4063bc:	mov    ecx,DWORD PTR [eax]
  4063be:	test   ecx,ecx
  4063c0:	je     0x4063f5
  4063c2:	mov    DWORD PTR [eax],0x0
  4063c8:	lock dec DWORD PTR [ecx-0x8]
  4063cc:	jne    0x4063f5
  4063ce:	push   eax
  4063cf:	mov    eax,ecx
  4063d1:	xor    ecx,ecx
  4063d3:	mov    cl,BYTE PTR [edx+0x1]
  4063d6:	mov    edx,DWORD PTR [ecx+edx*1+0x6]
  4063da:	test   edx,edx
  4063dc:	je     0x4063ec
  4063de:	mov    ecx,DWORD PTR [eax-0x4]
  4063e1:	test   ecx,ecx
  4063e3:	je     0x4063ec
  4063e5:	mov    edx,DWORD PTR [edx]
  4063e7:	call   0x405b50
  4063ec:	sub    eax,0x8
  4063ef:	call   0x402ebc
  4063f4:	pop    eax
  4063f5:	ret    
  4063f6:	mov    eax,eax
  4063f8:	push   ebx
  4063f9:	mov    ebx,DWORD PTR [eax]
  4063fb:	test   edx,edx
  4063fd:	je     0x406403
  4063ff:	lock inc DWORD PTR [edx-0x8]
  406403:	test   ebx,ebx
  406405:	je     0x40641b
  406407:	lock dec DWORD PTR [ebx-0x8]
  40640b:	jne    0x40641b
  40640d:	push   eax
  40640e:	push   edx
  40640f:	mov    edx,ecx
  406411:	inc    DWORD PTR [ebx-0x8]
  406414:	call   0x4063bc
  406419:	pop    edx
  40641a:	pop    eax
  40641b:	mov    DWORD PTR [eax],edx
  40641d:	pop    ebx
  40641e:	ret    
  40641f:	nop
  406420:	test   eax,eax
  406422:	je     0x406428
  406424:	lock inc DWORD PTR [eax-0x8]
  406428:	ret    
  406429:	lea    eax,[eax+0x0]
  40642c:	add    esp,0xffffffe4
  40642f:	push   0x1c
  406431:	lea    edx,[esp+0x4]
  406435:	push   edx
  406436:	push   eax
  406437:	call   0x401324
  40643c:	cmp    DWORD PTR [esp+0x10],0x1000
  406444:	jne    0x40644c
  406446:	mov    eax,DWORD PTR [esp+0x4]
  40644a:	jmp    0x40644e
  40644c:	xor    eax,eax
  40644e:	add    esp,0x1c
  406451:	ret    
  406452:	mov    eax,eax
  406454:	push   ebx
  406455:	push   esi
  406456:	add    esp,0xfffffef8
  40645c:	mov    ebx,eax
  40645e:	cmp    DWORD PTR [ebx+0x10],0x0
  406462:	jne    0x40648f
  406464:	push   0x105
  406469:	lea    eax,[esp+0x4]
  40646d:	push   eax
  40646e:	mov    eax,DWORD PTR [ebx+0x4]
  406471:	push   eax
  406472:	call   0x4012b4
  406477:	mov    eax,esp
  406479:	mov    dl,0x1
  40647b:	call   0x4066b8
  406480:	mov    esi,eax
  406482:	mov    DWORD PTR [ebx+0x10],esi
  406485:	test   esi,esi
  406487:	jne    0x40648f
  406489:	mov    eax,DWORD PTR [ebx+0x4]
  40648c:	mov    DWORD PTR [ebx+0x10],eax
  40648f:	mov    eax,DWORD PTR [ebx+0x10]
  406492:	add    esp,0x108
  406498:	pop    esi
  406499:	pop    ebx
  40649a:	ret    
  40649b:	nop
  40649c:	push   ebx
  40649d:	push   esi
  40649e:	push   edi
  40649f:	mov    esi,eax
  4064a1:	mov    ebx,DWORD PTR ds:0x461040
  4064a7:	test   ebx,ebx
  4064a9:	je     0x4064cb
  4064ab:	cmp    esi,DWORD PTR [ebx+0x4]
  4064ae:	je     0x4064ba
  4064b0:	cmp    esi,DWORD PTR [ebx+0x8]
  4064b3:	je     0x4064ba
  4064b5:	cmp    esi,DWORD PTR [ebx+0xc]
  4064b8:	jne    0x4064c5
  4064ba:	mov    eax,ebx
  4064bc:	call   0x406454
  4064c1:	mov    edi,eax
  4064c3:	jmp    0x4064cd
  4064c5:	mov    ebx,DWORD PTR [ebx]
  4064c7:	test   ebx,ebx
  4064c9:	jne    0x4064ab
  4064cb:	mov    edi,esi
  4064cd:	mov    eax,edi
  4064cf:	pop    edi
  4064d0:	pop    esi
  4064d1:	pop    ebx
  4064d2:	ret    
  4064d3:	nop
  4064d4:	push   ebx
  4064d5:	push   esi
  4064d6:	mov    esi,eax
  4064d8:	jmp    0x4064e2
  4064da:	push   esi
  4064db:	call   0x401254
  4064e0:	mov    esi,eax
  4064e2:	movzx  ebx,BYTE PTR [esi]
  4064e5:	test   bl,bl
  4064e7:	je     0x4064ee
  4064e9:	cmp    bl,0x5c
  4064ec:	jne    0x4064da
  4064ee:	mov    eax,esi
  4064f0:	pop    esi
  4064f1:	pop    ebx
  4064f2:	ret    
  4064f3:	nop
  4064f4:	push   ebp
  4064f5:	mov    ebp,esp
  4064f7:	add    esp,0xfffffdac
  4064fd:	push   ebx
  4064fe:	push   esi
  4064ff:	push   edi
  406500:	mov    DWORD PTR [ebp-0x8],edx
  406503:	mov    DWORD PTR [ebp-0x4],eax
  406506:	mov    eax,DWORD PTR [ebp-0x4]
  406509:	mov    DWORD PTR [ebp-0xc],eax
  40650c:	push   0x406694
  406511:	call   0x4012bc
  406516:	mov    DWORD PTR [ebp-0x10],eax
  406519:	cmp    DWORD PTR [ebp-0x10],0x0
  40651d:	je     0x406562
  40651f:	push   0x4066a4
  406524:	mov    eax,DWORD PTR [ebp-0x10]
  406527:	push   eax
  406528:	call   0x4012c4
  40652d:	mov    ebx,eax
  40652f:	test   ebx,ebx
  406531:	je     0x406562
  406533:	push   0x105
  406538:	lea    eax,[ebp-0x253]
  40653e:	push   eax
  40653f:	mov    eax,DWORD PTR [ebp-0x4]
  406542:	push   eax
  406543:	call   ebx
  406545:	test   eax,eax
  406547:	je     0x406562
  406549:	mov    eax,DWORD PTR [ebp-0x8]
  40654c:	push   eax
  40654d:	lea    eax,[ebp-0x253]
  406553:	push   eax
  406554:	mov    eax,DWORD PTR [ebp-0x4]
  406557:	push   eax
  406558:	call   0x4012ec
  40655d:	jmp    0x40668a
  406562:	mov    eax,DWORD PTR [ebp-0x4]
  406565:	cmp    BYTE PTR [eax],0x5c
  406568:	jne    0x4065a2
  40656a:	mov    eax,DWORD PTR [ebp-0x4]
  40656d:	cmp    BYTE PTR [eax+0x1],0x5c
  406571:	jne    0x40668a
  406577:	mov    eax,DWORD PTR [ebp-0x4]
  40657a:	add    eax,0x2
  40657d:	call   0x4064d4
  406582:	mov    esi,eax
  406584:	cmp    BYTE PTR [esi],0x0
  406587:	je     0x40668a
  40658d:	lea    eax,[esi+0x1]
  406590:	call   0x4064d4
  406595:	mov    esi,eax
  406597:	cmp    BYTE PTR [esi],0x0
  40659a:	je     0x40668a
  4065a0:	jmp    0x4065a8
  4065a2:	mov    esi,DWORD PTR [ebp-0x4]
  4065a5:	add    esi,0x2
  4065a8:	mov    ebx,esi
  4065aa:	sub    ebx,DWORD PTR [ebp-0x4]
  4065ad:	lea    eax,[ebx+0x1]
  4065b0:	push   eax
  4065b1:	mov    eax,DWORD PTR [ebp-0x4]
  4065b4:	push   eax
  4065b5:	lea    eax,[ebp-0x253]
  4065bb:	push   eax
  4065bc:	call   0x4012ec
  4065c1:	jmp    0x40666d
  4065c6:	lea    eax,[esi+0x1]
  4065c9:	call   0x4064d4
  4065ce:	mov    edi,eax
  4065d0:	mov    eax,edi
  4065d2:	sub    eax,esi
  4065d4:	add    eax,ebx
  4065d6:	inc    eax
  4065d7:	cmp    eax,0x105
  4065dc:	jg     0x40668a
  4065e2:	mov    eax,edi
  4065e4:	sub    eax,esi
  4065e6:	inc    eax
  4065e7:	push   eax
  4065e8:	push   esi
  4065e9:	lea    eax,[ebp-0x253]
  4065ef:	add    eax,ebx
  4065f1:	push   eax
  4065f2:	call   0x4012ec
  4065f7:	lea    eax,[ebp-0x14e]
  4065fd:	push   eax
  4065fe:	lea    eax,[ebp-0x253]
  406604:	push   eax
  406605:	call   0x40128c
  40660a:	mov    DWORD PTR [ebp-0x10],eax
  40660d:	cmp    DWORD PTR [ebp-0x10],0xffffffff
  406611:	je     0x40668a
  406613:	mov    eax,DWORD PTR [ebp-0x10]
  406616:	push   eax
  406617:	call   0x401284
  40661c:	lea    eax,[ebp-0x122]
  406622:	push   eax
  406623:	call   0x4012f4
  406628:	lea    edx,[ebx+0x1]
  40662b:	add    eax,edx
  40662d:	inc    eax
  40662e:	cmp    eax,0x105
  406633:	jg     0x40668a
  406635:	mov    BYTE PTR [ebp+ebx*1-0x253],0x5c
  40663d:	mov    eax,0x105
  406642:	sub    eax,ebx
  406644:	dec    eax
  406645:	push   eax
  406646:	lea    eax,[ebp-0x122]
  40664c:	push   eax
  40664d:	lea    eax,[ebp-0x253]
  406653:	add    eax,ebx
  406655:	inc    eax
  406656:	push   eax
  406657:	call   0x4012ec
  40665c:	lea    eax,[ebp-0x122]
  406662:	push   eax
  406663:	call   0x4012f4
  406668:	inc    eax
  406669:	add    ebx,eax
  40666b:	mov    esi,edi
  40666d:	cmp    BYTE PTR [esi],0x0
  406670:	jne    0x4065c6
  406676:	mov    eax,DWORD PTR [ebp-0x8]
  406679:	push   eax
  40667a:	lea    eax,[ebp-0x253]
  406680:	push   eax
  406681:	mov    eax,DWORD PTR [ebp-0x4]
  406684:	push   eax
  406685:	call   0x4012ec
  40668a:	mov    eax,DWORD PTR [ebp-0xc]
  40668d:	pop    edi
  40668e:	pop    esi
  40668f:	pop    ebx
  406690:	mov    esp,ebp
  406692:	pop    ebp
  406693:	ret    
  406694:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  406698:	gs ins BYTE PTR es:[edi],dx
  40669a:	xor    esi,DWORD PTR [edx]
  40669c:	cs fs ins BYTE PTR es:[edi],dx
  40669f:	ins    BYTE PTR es:[edi],dx
  4066a0:	add    BYTE PTR [eax],al
  4066a2:	add    BYTE PTR [eax],al
  4066a4:	inc    edi
  4066a5:	gs je  0x4066f4
  4066a8:	outs   dx,DWORD PTR ds:[esi]
  4066a9:	outs   dx,BYTE PTR ds:[esi]
  4066aa:	addr16 push eax
  4066ac:	popa   
  4066ad:	je     0x406717
  4066af:	dec    esi
  4066b0:	popa   
  4066b1:	ins    DWORD PTR es:[edi],dx
  4066b2:	gs inc ecx
  4066b4:	add    BYTE PTR [eax],al
  4066b6:	add    BYTE PTR [eax],al
  4066b8:	push   ebp
  4066b9:	mov    ebp,esp
  4066bb:	add    esp,0xfffffee0
  4066c1:	push   ebx
  4066c2:	push   esi
  4066c3:	mov    DWORD PTR [ebp-0x4],eax
  4066c6:	push   0x105
  4066cb:	lea    eax,[ebp-0x11d]
  4066d1:	push   eax
  4066d2:	push   0x0
  4066d4:	call   0x4012b4
  4066d9:	mov    BYTE PTR [ebp-0x12],0x0
  4066dd:	lea    eax,[ebp-0x8]
  4066e0:	push   eax
  4066e1:	push   0xf0019
  4066e6:	push   0x0
  4066e8:	push   0x4068e8
  4066ed:	push   0x80000001
  4066f2:	call   0x40130c
  4066f7:	test   eax,eax
  4066f9:	je     0x40673b
  4066fb:	lea    eax,[ebp-0x8]
  4066fe:	push   eax
  4066ff:	push   0xf0019
  406704:	push   0x0
  406706:	push   0x4068e8
  40670b:	push   0x80000002
  406710:	call   0x40130c
  406715:	test   eax,eax
  406717:	je     0x40673b
  406719:	lea    eax,[ebp-0x8]
  40671c:	push   eax
  40671d:	push   0xf0019
  406722:	push   0x0
  406724:	push   0x406904
  406729:	push   0x80000001
  40672e:	call   0x40130c
  406733:	test   eax,eax
  406735:	jne    0x4067c4
  40673b:	xor    eax,eax
  40673d:	push   ebp
  40673e:	push   0x4067bd
  406743:	push   DWORD PTR fs:[eax]
  406746:	mov    DWORD PTR fs:[eax],esp
  406749:	mov    DWORD PTR [ebp-0x18],0x5
  406750:	lea    eax,[ebp-0x11d]
  406756:	mov    edx,0x105
  40675b:	call   0x4064f4
  406760:	lea    eax,[ebp-0x18]
  406763:	push   eax
  406764:	lea    eax,[ebp-0x12]
  406767:	push   eax
  406768:	push   0x0
  40676a:	push   0x0
  40676c:	lea    eax,[ebp-0x11d]
  406772:	push   eax
  406773:	mov    eax,DWORD PTR [ebp-0x8]
  406776:	push   eax
  406777:	call   0x401314
  40677c:	test   eax,eax
  40677e:	je     0x4067a2
  406780:	lea    eax,[ebp-0x18]
  406783:	push   eax
  406784:	lea    eax,[ebp-0x12]
  406787:	push   eax
  406788:	push   0x0
  40678a:	push   0x0
  40678c:	push   0x406924
  406791:	mov    eax,DWORD PTR [ebp-0x8]
  406794:	push   eax
  406795:	call   0x401314
  40679a:	test   eax,eax
  40679c:	je     0x4067a2
  40679e:	mov    BYTE PTR [ebp-0x12],0x0
  4067a2:	mov    BYTE PTR [ebp-0xe],0x0
  4067a6:	xor    eax,eax
  4067a8:	pop    edx
  4067a9:	pop    ecx
  4067aa:	pop    ecx
  4067ab:	mov    DWORD PTR fs:[eax],edx
  4067ae:	push   0x4067c4
  4067b3:	mov    eax,DWORD PTR [ebp-0x8]
  4067b6:	push   eax
  4067b7:	call   0x401304
  4067bc:	ret    
  4067bd:	jmp    0x40481c
  4067c2:	jmp    0x4067b3
  4067c4:	push   0x105
  4067c9:	mov    eax,DWORD PTR [ebp-0x4]
  4067cc:	push   eax
  4067cd:	lea    eax,[ebp-0x11d]
  4067d3:	push   eax
  4067d4:	call   0x4012ec
  4067d9:	push   0x5
  4067db:	lea    eax,[ebp-0xd]
  4067de:	push   eax
  4067df:	push   0x3
  4067e1:	call   0x4012d4
  4067e6:	push   eax
  4067e7:	call   0x4012ac
  4067ec:	xor    esi,esi
  4067ee:	cmp    BYTE PTR [ebp-0x11d],0x0
  4067f5:	je     0x4068de
  4067fb:	cmp    BYTE PTR [ebp-0xd],0x0
  4067ff:	jne    0x40680b
  406801:	cmp    BYTE PTR [ebp-0x12],0x0
  406805:	je     0x4068de
  40680b:	lea    eax,[ebp-0x11d]
  406811:	push   eax
  406812:	call   0x4012f4
  406817:	mov    ebx,eax
  406819:	lea    eax,[ebp-0x11d]
  40681f:	add    ebx,eax
  406821:	jmp    0x406824
  406823:	dec    ebx
  406824:	cmp    BYTE PTR [ebx],0x2e
  406827:	je     0x406833
  406829:	lea    eax,[ebp-0x11d]
  40682f:	cmp    ebx,eax
  406831:	jne    0x406823
  406833:	lea    eax,[ebp-0x11d]
  406839:	cmp    ebx,eax
  40683b:	je     0x4068de
  406841:	inc    ebx
  406842:	cmp    BYTE PTR [ebp-0x12],0x0
  406846:	je     0x406870
  406848:	mov    edx,ebx
  40684a:	sub    edx,eax
  40684c:	mov    eax,0x105
  406851:	sub    eax,edx
  406853:	push   eax
  406854:	lea    eax,[ebp-0x12]
  406857:	push   eax
  406858:	push   ebx
  406859:	call   0x4012ec
  40685e:	push   0x2
  406860:	push   0x0
  406862:	lea    eax,[ebp-0x11d]
  406868:	push   eax
  406869:	call   0x4012dc
  40686e:	mov    esi,eax
  406870:	test   esi,esi
  406872:	jne    0x4068de
  406874:	cmp    BYTE PTR [ebp-0xd],0x0
  406878:	je     0x4068de
  40687a:	lea    eax,[ebp-0x11d]
  406880:	mov    edx,ebx
  406882:	sub    edx,eax
  406884:	mov    eax,0x105
  406889:	sub    eax,edx
  40688b:	push   eax
  40688c:	lea    eax,[ebp-0xd]
  40688f:	push   eax
  406890:	push   ebx
  406891:	call   0x4012ec
  406896:	push   0x2
  406898:	push   0x0
  40689a:	lea    eax,[ebp-0x11d]
  4068a0:	push   eax
  4068a1:	call   0x4012dc
  4068a6:	mov    esi,eax
  4068a8:	test   esi,esi
  4068aa:	jne    0x4068de
  4068ac:	mov    BYTE PTR [ebp-0xb],0x0
  4068b0:	lea    eax,[ebp-0x11d]
  4068b6:	mov    edx,ebx
  4068b8:	sub    edx,eax
  4068ba:	mov    eax,0x105
  4068bf:	sub    eax,edx
  4068c1:	push   eax
  4068c2:	lea    eax,[ebp-0xd]
  4068c5:	push   eax
  4068c6:	push   ebx
  4068c7:	call   0x4012ec
  4068cc:	push   0x2
  4068ce:	push   0x0
  4068d0:	lea    eax,[ebp-0x11d]
  4068d6:	push   eax
  4068d7:	call   0x4012dc
  4068dc:	mov    esi,eax
  4068de:	mov    eax,esi
  4068e0:	pop    esi
  4068e1:	pop    ebx
  4068e2:	mov    esp,ebp
  4068e4:	pop    ebp
  4068e5:	ret    
  4068e6:	add    BYTE PTR [eax],al
  4068e8:	push   ebx
  4068e9:	outs   dx,DWORD PTR ds:[esi]
  4068ea:	data16 je 0x406964
  4068ed:	popa   
  4068ee:	jb     0x406955
  4068f0:	pop    esp
  4068f1:	inc    edx
  4068f2:	outs   dx,DWORD PTR ds:[esi]
  4068f3:	jb     0x406961
  4068f5:	popa   
  4068f6:	outs   dx,BYTE PTR ds:[esi]
  4068f7:	fs pop esp
  4068f9:	dec    esp
  4068fa:	outs   dx,DWORD PTR ds:[esi]
  4068fb:	arpl   WORD PTR [ecx+0x6c],sp
  4068fe:	gs jae 0x406901
  406901:	add    BYTE PTR [eax],al
  406903:	add    BYTE PTR [ebx+0x6f],dl
  406906:	data16 je 0x406980
  406909:	popa   
  40690a:	jb     0x406971
  40690c:	pop    esp
  40690d:	inc    edx
  40690e:	outs   dx,DWORD PTR ds:[esi]
  40690f:	jb     0x40697d
  406911:	popa   
  406912:	outs   dx,BYTE PTR ds:[esi]
  406913:	fs pop esp
  406915:	inc    esp
  406916:	gs ins BYTE PTR es:[edi],dx
  406918:	jo     0x406982
  40691a:	imul   ebx,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  406922:	jae    0x406924
  406924:	add    BYTE PTR [eax],al
  406926:	add    BYTE PTR [eax],al
  406928:	call   0x406938
  40692d:	ret    
  40692e:	mov    eax,eax
  406930:	call   0x406958
  406935:	ret    
  406936:	mov    eax,eax
  406938:	push   ebx
  406939:	mov    ebx,eax
  40693b:	mov    eax,0x8
  406940:	call   0x402ea0
  406945:	mov    edx,DWORD PTR ds:0x461044
  40694b:	mov    DWORD PTR [eax],edx
  40694d:	mov    DWORD PTR [eax+0x4],ebx
  406950:	mov    ds:0x461044,eax
  406955:	pop    ebx
  406956:	ret    
  406957:	nop
  406958:	push   ebx
  406959:	push   esi
  40695a:	push   edi
  40695b:	push   ebp
  40695c:	mov    ebp,eax
  40695e:	mov    edi,DWORD PTR ds:0x461044
  406964:	test   edi,edi
  406966:	je     0x406989
  406968:	mov    eax,DWORD PTR [edi+0x4]
  40696b:	cmp    eax,ebp
  40696d:	jne    0x406989
  40696f:	mov    eax,ds:0x461044
  406974:	mov    eax,DWORD PTR [eax]
  406976:	mov    ds:0x461044,eax
  40697b:	mov    edx,0x8
  406980:	mov    eax,edi
  406982:	call   0x402ebc
  406987:	jmp    0x4069b6
  406989:	mov    ebx,edi
  40698b:	test   ebx,ebx
  40698d:	je     0x4069b6
  40698f:	mov    esi,DWORD PTR [ebx]
  406991:	test   esi,esi
  406993:	je     0x4069b0
  406995:	mov    eax,DWORD PTR [esi+0x4]
  406998:	cmp    eax,ebp
  40699a:	jne    0x4069b0
  40699c:	mov    edi,esi
  40699e:	mov    eax,DWORD PTR [esi]
  4069a0:	mov    DWORD PTR [ebx],eax
  4069a2:	mov    edx,0x8
  4069a7:	mov    eax,edi
  4069a9:	call   0x402ebc
  4069ae:	jmp    0x4069b6
  4069b0:	mov    ebx,DWORD PTR [ebx]
  4069b2:	test   ebx,ebx
  4069b4:	jne    0x40698f
  4069b6:	pop    ebp
  4069b7:	pop    edi
  4069b8:	pop    esi
  4069b9:	pop    ebx
  4069ba:	ret    
  4069bb:	nop
  4069bc:	push   ebp
  4069bd:	mov    ebp,esp
  4069bf:	add    esp,0xfffffff8
  4069c2:	push   ebx
  4069c3:	push   esi
  4069c4:	push   edi
  4069c5:	mov    DWORD PTR [ebp-0x4],eax
  4069c8:	mov    eax,ds:0x461044
  4069cd:	mov    DWORD PTR [ebp-0x8],eax
  4069d0:	cmp    DWORD PTR [ebp-0x8],0x0
  4069d4:	je     0x406a0f
  4069d6:	xor    eax,eax
  4069d8:	push   ebp
  4069d9:	push   0x4069f7
  4069de:	push   DWORD PTR fs:[eax]
  4069e1:	mov    DWORD PTR fs:[eax],esp
  4069e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4069e7:	mov    eax,DWORD PTR [ebp-0x4]
  4069ea:	call   DWORD PTR [ebx+0x4]
  4069ed:	xor    eax,eax
  4069ef:	pop    edx
  4069f0:	pop    ecx
  4069f1:	pop    ecx
  4069f2:	mov    DWORD PTR fs:[eax],edx
  4069f5:	jmp    0x406a01
  4069f7:	jmp    0x404568
  4069fc:	call   0x404978
  406a01:	mov    eax,DWORD PTR [ebp-0x8]
  406a04:	mov    eax,DWORD PTR [eax]
  406a06:	mov    DWORD PTR [ebp-0x8],eax
  406a09:	cmp    DWORD PTR [ebp-0x8],0x0
  406a0d:	jne    0x4069d6
  406a0f:	pop    edi
  406a10:	pop    esi
  406a11:	pop    ebx
  406a12:	pop    ecx
  406a13:	pop    ecx
  406a14:	pop    ebp
  406a15:	ret    
  406a16:	mov    eax,eax
  406a18:	mov    edx,DWORD PTR ds:0x461040
  406a1e:	mov    DWORD PTR [eax],edx
  406a20:	mov    ds:0x461040,eax
  406a25:	ret    
  406a26:	mov    eax,eax
  406a28:	push   ebp
  406a29:	mov    ebp,esp
  406a2b:	push   ecx
  406a2c:	mov    DWORD PTR [ebp-0x4],eax
  406a2f:	xor    edx,edx
  406a31:	push   ebp
  406a32:	push   0x406a8c
  406a37:	push   DWORD PTR fs:[edx]
  406a3a:	mov    DWORD PTR fs:[edx],esp
  406a3d:	mov    eax,DWORD PTR [ebp-0x4]
  406a40:	mov    eax,DWORD PTR [eax+0x4]
  406a43:	call   0x4069bc
  406a48:	xor    eax,eax
  406a4a:	pop    edx
  406a4b:	pop    ecx
  406a4c:	pop    ecx
  406a4d:	mov    DWORD PTR fs:[eax],edx
  406a50:	push   0x406a93
  406a55:	mov    eax,DWORD PTR [ebp-0x4]
  406a58:	cmp    eax,DWORD PTR ds:0x461040
  406a5e:	jne    0x406a6c
  406a60:	mov    eax,DWORD PTR [ebp-0x4]
  406a63:	mov    eax,DWORD PTR [eax]
  406a65:	mov    ds:0x461040,eax
  406a6a:	jmp    0x406a8b
  406a6c:	mov    eax,ds:0x461040
  406a71:	test   eax,eax
  406a73:	je     0x406a8b
  406a75:	mov    edx,DWORD PTR [eax]
  406a77:	cmp    edx,DWORD PTR [ebp-0x4]
  406a7a:	jne    0x406a85
  406a7c:	mov    edx,DWORD PTR [ebp-0x4]
  406a7f:	mov    edx,DWORD PTR [edx]
  406a81:	mov    DWORD PTR [eax],edx
  406a83:	jmp    0x406a8b
  406a85:	mov    eax,DWORD PTR [eax]
  406a87:	test   eax,eax
  406a89:	jne    0x406a75
  406a8b:	ret    
  406a8c:	jmp    0x40481c
  406a91:	jmp    0x406a55
  406a93:	pop    ecx
  406a94:	pop    ebp
  406a95:	ret    
  406a96:	mov    eax,eax
  406a98:	mov    edx,DWORD PTR [eax]
  406a9a:	test   edx,edx
  406a9c:	je     0x406aac
  406a9e:	mov    DWORD PTR [eax],0x0
  406aa4:	push   eax
  406aa5:	push   edx
  406aa6:	mov    eax,DWORD PTR [edx]
  406aa8:	call   DWORD PTR [eax+0x8]
  406aab:	pop    eax
  406aac:	ret    
  406aad:	lea    eax,[eax+0x0]
  406ab0:	test   edx,edx
  406ab2:	je     0x406acd
  406ab4:	push   edx
  406ab5:	push   eax
  406ab6:	mov    eax,DWORD PTR [edx]
  406ab8:	push   edx
  406ab9:	call   DWORD PTR [eax+0x4]
  406abc:	pop    eax
  406abd:	mov    ecx,DWORD PTR [eax]
  406abf:	pop    DWORD PTR [eax]
  406ac1:	test   ecx,ecx
  406ac3:	jne    0x406ac6
  406ac5:	ret    
  406ac6:	mov    eax,DWORD PTR [ecx]
  406ac8:	push   ecx
  406ac9:	call   DWORD PTR [eax+0x8]
  406acc:	ret    
  406acd:	mov    ecx,DWORD PTR [eax]
  406acf:	test   ecx,ecx
  406ad1:	mov    DWORD PTR [eax],edx
  406ad3:	je     0x406adb
  406ad5:	mov    eax,DWORD PTR [ecx]
  406ad7:	push   ecx
  406ad8:	call   DWORD PTR [eax+0x8]
  406adb:	ret    
  406adc:	test   eax,eax
  406ade:	je     0x406ae6
  406ae0:	push   eax
  406ae1:	mov    eax,DWORD PTR [eax]
  406ae3:	call   DWORD PTR [eax+0x4]
  406ae6:	ret    
  406ae7:	nop
  406ae8:	add    eax,0x4
  406aeb:	push   eax
  406aec:	call   0x40134c
  406af1:	ret    
  406af2:	mov    eax,eax
  406af4:	cmp    DWORD PTR [eax+0x4],0x0
  406af8:	je     0x406b01
  406afa:	mov    al,0x2
  406afc:	call   0x402ff0
  406b01:	ret    
  406b02:	mov    eax,eax
  406b04:	call   0x404038
  406b09:	mov    DWORD PTR [eax+0x4],0x1
  406b10:	ret    
  406b11:	lea    eax,[eax+0x0]
  406b14:	push   ebp
  406b15:	mov    ebp,esp
  406b17:	push   ebx
  406b18:	mov    ebx,DWORD PTR [ebp+0x8]
  406b1b:	mov    ecx,DWORD PTR [ebp+0x10]
  406b1e:	mov    edx,DWORD PTR [ebp+0xc]
  406b21:	mov    eax,ebx
  406b23:	call   0x404154
  406b28:	test   al,al
  406b2a:	je     0x406b30
  406b2c:	xor    eax,eax
  406b2e:	jmp    0x406b35
  406b30:	mov    eax,0x80004002
  406b35:	pop    ebx
  406b36:	pop    ebp
  406b37:	ret    0xc
  406b3a:	mov    eax,eax
  406b3c:	push   ebp
  406b3d:	mov    ebp,esp
  406b3f:	mov    eax,DWORD PTR [ebp+0x8]
  406b42:	add    eax,0x4
  406b45:	push   eax
  406b46:	call   0x401344
  406b4b:	pop    ebp
  406b4c:	ret    0x4
  406b4f:	nop
  406b50:	push   ebp
  406b51:	mov    ebp,esp
  406b53:	push   ebx
  406b54:	push   esi
  406b55:	mov    ebx,DWORD PTR [ebp+0x8]
  406b58:	lea    eax,[ebx+0x4]
  406b5b:	push   eax
  406b5c:	call   0x40134c
  406b61:	mov    esi,eax
  406b63:	test   esi,esi
  406b65:	jne    0x406b70
  406b67:	mov    dl,0x1
  406b69:	mov    eax,ebx
  406b6b:	mov    ecx,DWORD PTR [eax]
  406b6d:	call   DWORD PTR [ecx-0x4]
  406b70:	mov    eax,esi
  406b72:	pop    esi
  406b73:	pop    ebx
  406b74:	pop    ebp
  406b75:	ret    0x4
  406b78:	push   ebp
  406b79:	mov    ebp,esp
  406b7b:	add    esp,0xfffffff8
  406b7e:	push   ebx
  406b7f:	push   esi
  406b80:	mov    DWORD PTR [ebp-0x8],ecx
  406b83:	mov    DWORD PTR [ebp-0x4],edx
  406b86:	xor    edx,edx
  406b88:	cmp    DWORD PTR [ebp-0x8],0x0
  406b8c:	je     0x406c4a
  406b92:	xor    esi,esi
  406b94:	xor    ecx,ecx
  406b96:	test   eax,eax
  406b98:	je     0x406c25
  406b9e:	jmp    0x406c0c
  406ba0:	mov    edx,DWORD PTR [ebp-0x8]
  406ba3:	movzx  edx,WORD PTR [edx+ecx*2]
  406ba7:	inc    ecx
  406ba8:	cmp    edx,0x7f
  406bab:	ja     0x406bb3
  406bad:	mov    BYTE PTR [eax+esi*1],dl
  406bb0:	inc    esi
  406bb1:	jmp    0x406c0c
  406bb3:	cmp    edx,0x7ff
  406bb9:	jbe    0x406bec
  406bbb:	lea    ebx,[esi+0x3]
  406bbe:	cmp    ebx,DWORD PTR [ebp-0x4]
  406bc1:	ja     0x406c16
  406bc3:	mov    ebx,edx
  406bc5:	shr    ebx,0xc
  406bc8:	or     bl,0xe0
  406bcb:	mov    BYTE PTR [eax+esi*1],bl
  406bce:	mov    ebx,edx
  406bd0:	shr    ebx,0x6
  406bd3:	and    bl,0x3f
  406bd6:	or     bl,0x80
  406bd9:	mov    BYTE PTR [eax+esi*1+0x1],bl
  406bdd:	and    dl,0x3f
  406be0:	or     dl,0x80
  406be3:	mov    BYTE PTR [eax+esi*1+0x2],dl
  406be7:	add    esi,0x3
  406bea:	jmp    0x406c0c
  406bec:	lea    ebx,[esi+0x2]
  406bef:	cmp    ebx,DWORD PTR [ebp-0x4]
  406bf2:	ja     0x406c16
  406bf4:	mov    ebx,edx
  406bf6:	shr    ebx,0x6
  406bf9:	or     bl,0xc0
  406bfc:	mov    BYTE PTR [eax+esi*1],bl
  406bff:	and    dl,0x3f
  406c02:	or     dl,0x80
  406c05:	mov    BYTE PTR [eax+esi*1+0x1],dl
  406c09:	add    esi,0x2
  406c0c:	cmp    ecx,DWORD PTR [ebp+0x8]
  406c0f:	jae    0x406c16
  406c11:	cmp    esi,DWORD PTR [ebp-0x4]
  406c14:	jb     0x406ba0
  406c16:	cmp    esi,DWORD PTR [ebp-0x4]
  406c19:	jb     0x406c1f
  406c1b:	mov    esi,DWORD PTR [ebp-0x4]
  406c1e:	dec    esi
  406c1f:	mov    BYTE PTR [eax+esi*1],0x0
  406c23:	jmp    0x406c47
  406c25:	cmp    ecx,DWORD PTR [ebp+0x8]
  406c28:	jae    0x406c47
  406c2a:	mov    eax,DWORD PTR [ebp-0x8]
  406c2d:	movzx  edx,WORD PTR [eax+ecx*2]
  406c31:	inc    ecx
  406c32:	cmp    edx,0x7f
  406c35:	jbe    0x406c41
  406c37:	cmp    edx,0x7ff
  406c3d:	jbe    0x406c40
  406c3f:	inc    esi
  406c40:	inc    esi
  406c41:	inc    esi
  406c42:	cmp    ecx,DWORD PTR [ebp+0x8]
  406c45:	jb     0x406c2a
  406c47:	lea    edx,[esi+0x1]
  406c4a:	mov    eax,edx
  406c4c:	pop    esi
  406c4d:	pop    ebx
  406c4e:	pop    ecx
  406c4f:	pop    ecx
  406c50:	pop    ebp
  406c51:	ret    0x4
  406c54:	push   ebp
  406c55:	mov    ebp,esp
  406c57:	add    esp,0xfffffff0
  406c5a:	push   ebx
  406c5b:	push   esi
  406c5c:	mov    DWORD PTR [ebp-0xc],ecx
  406c5f:	mov    DWORD PTR [ebp-0x8],edx
  406c62:	mov    DWORD PTR [ebp-0x4],eax
  406c65:	cmp    DWORD PTR [ebp-0xc],0x0
  406c69:	jne    0x406c75
  406c6b:	xor    eax,eax
  406c6d:	mov    DWORD PTR [ebp-0x10],eax
  406c70:	jmp    0x406d79
  406c75:	mov    DWORD PTR [ebp-0x10],0xffffffff
  406c7c:	xor    eax,eax
  406c7e:	xor    esi,esi
  406c80:	cmp    DWORD PTR [ebp-0x4],0x0
  406c84:	je     0x406d2b
  406c8a:	jmp    0x406d09
  406c8c:	mov    edx,DWORD PTR [ebp-0xc]
  406c8f:	movzx  ecx,BYTE PTR [edx+esi*1]
  406c93:	inc    esi
  406c94:	test   cl,0x80
  406c97:	je     0x406d01
  406c99:	cmp    esi,DWORD PTR [ebp+0x8]
  406c9c:	jae    0x406d79
  406ca2:	and    ecx,0x3f
  406ca5:	test   cl,0x20
  406ca8:	je     0x406cd6
  406caa:	mov    edx,DWORD PTR [ebp-0xc]
  406cad:	movzx  edx,BYTE PTR [edx+esi*1]
  406cb1:	inc    esi
  406cb2:	mov    ebx,edx
  406cb4:	and    bl,0xc0
  406cb7:	cmp    bl,0x80
  406cba:	jne    0x406d79
  406cc0:	cmp    esi,DWORD PTR [ebp+0x8]
  406cc3:	jae    0x406d79
  406cc9:	and    dl,0x3f
  406ccc:	movzx  edx,dl
  406ccf:	shl    ecx,0x6
  406cd2:	or     edx,ecx
  406cd4:	mov    ecx,edx
  406cd6:	mov    edx,DWORD PTR [ebp-0xc]
  406cd9:	movzx  edx,BYTE PTR [edx+esi*1]
  406cdd:	inc    esi
  406cde:	mov    ebx,edx
  406ce0:	and    bl,0xc0
  406ce3:	cmp    bl,0x80
  406ce6:	jne    0x406d79
  406cec:	and    dl,0x3f
  406cef:	movzx  edx,dl
  406cf2:	shl    ecx,0x6
  406cf5:	or     dx,cx
  406cf8:	mov    ecx,DWORD PTR [ebp-0x4]
  406cfb:	mov    WORD PTR [ecx+eax*2],dx
  406cff:	jmp    0x406d08
  406d01:	mov    edx,DWORD PTR [ebp-0x4]
  406d04:	mov    WORD PTR [edx+eax*2],cx
  406d08:	inc    eax
  406d09:	cmp    esi,DWORD PTR [ebp+0x8]
  406d0c:	jae    0x406d17
  406d0e:	cmp    eax,DWORD PTR [ebp-0x8]
  406d11:	jb     0x406c8c
  406d17:	cmp    eax,DWORD PTR [ebp-0x8]
  406d1a:	jb     0x406d20
  406d1c:	mov    eax,DWORD PTR [ebp-0x8]
  406d1f:	dec    eax
  406d20:	mov    edx,DWORD PTR [ebp-0x4]
  406d23:	mov    WORD PTR [edx+eax*2],0x0
  406d29:	jmp    0x406d75
  406d2b:	cmp    esi,DWORD PTR [ebp+0x8]
  406d2e:	jae    0x406d75
  406d30:	mov    edx,DWORD PTR [ebp-0xc]
  406d33:	movzx  edx,BYTE PTR [edx+esi*1]
  406d37:	inc    esi
  406d38:	test   dl,0x80
  406d3b:	je     0x406d6f
  406d3d:	cmp    esi,DWORD PTR [ebp+0x8]
  406d40:	jae    0x406d79
  406d42:	and    dl,0x3f
  406d45:	test   dl,0x20
  406d48:	je     0x406d5f
  406d4a:	mov    edx,DWORD PTR [ebp-0xc]
  406d4d:	movzx  edx,BYTE PTR [edx+esi*1]
  406d51:	inc    esi
  406d52:	and    dl,0xc0
  406d55:	cmp    dl,0x80
  406d58:	jne    0x406d79
  406d5a:	cmp    esi,DWORD PTR [ebp+0x8]
  406d5d:	jae    0x406d79
  406d5f:	mov    edx,DWORD PTR [ebp-0xc]
  406d62:	movzx  edx,BYTE PTR [edx+esi*1]
  406d66:	inc    esi
  406d67:	and    dl,0xc0
  406d6a:	cmp    dl,0x80
  406d6d:	jne    0x406d79
  406d6f:	inc    eax
  406d70:	cmp    esi,DWORD PTR [ebp+0x8]
  406d73:	jb     0x406d30
  406d75:	inc    eax
  406d76:	mov    DWORD PTR [ebp-0x10],eax
  406d79:	mov    eax,DWORD PTR [ebp-0x10]
  406d7c:	pop    esi
  406d7d:	pop    ebx
  406d7e:	mov    esp,ebp
  406d80:	pop    ebp
  406d81:	ret    0x4
  406d84:	push   ebp
  406d85:	mov    ebp,esp
  406d87:	add    esp,0xfffffff8
  406d8a:	push   ebx
  406d8b:	push   esi
  406d8c:	xor    ecx,ecx
  406d8e:	mov    DWORD PTR [ebp-0x4],ecx
  406d91:	mov    DWORD PTR [ebp-0x8],edx
  406d94:	mov    esi,eax
  406d96:	xor    eax,eax
  406d98:	push   ebp
  406d99:	push   0x406e30
  406d9e:	push   DWORD PTR fs:[eax]
  406da1:	mov    DWORD PTR fs:[eax],esp
  406da4:	mov    eax,DWORD PTR [ebp-0x8]
  406da7:	call   0x404f88
  406dac:	mov    eax,esi
  406dae:	xor    edx,edx
  406db0:	call   0x40590c
  406db5:	je     0x406e1a
  406db7:	mov    eax,esi
  406db9:	call   0x405900
  406dbe:	lea    edx,[eax+eax*2]
  406dc1:	lea    eax,[ebp-0x4]
  406dc4:	call   0x4056a8
  406dc9:	mov    ebx,DWORD PTR [ebp-0x4]
  406dcc:	test   ebx,ebx
  406dce:	je     0x406dd5
  406dd0:	sub    ebx,0x4
  406dd3:	mov    ebx,DWORD PTR [ebx]
  406dd5:	mov    eax,esi
  406dd7:	call   0x405900
  406ddc:	push   eax
  406ddd:	mov    eax,esi
  406ddf:	call   0x4058f0
  406de4:	push   eax
  406de5:	mov    eax,DWORD PTR [ebp-0x4]
  406de8:	call   0x405418
  406ded:	lea    edx,[ebx+0x1]
  406df0:	pop    ecx
  406df1:	call   0x406b78
  406df6:	test   eax,eax
  406df8:	jle    0x406e07
  406dfa:	mov    edx,eax
  406dfc:	dec    edx
  406dfd:	lea    eax,[ebp-0x4]
  406e00:	call   0x4056a8
  406e05:	jmp    0x406e0f
  406e07:	lea    eax,[ebp-0x4]
  406e0a:	call   0x404f88
  406e0f:	mov    eax,DWORD PTR [ebp-0x8]
  406e12:	mov    edx,DWORD PTR [ebp-0x4]
  406e15:	call   0x404fdc
  406e1a:	xor    eax,eax
  406e1c:	pop    edx
  406e1d:	pop    ecx
  406e1e:	pop    ecx
  406e1f:	mov    DWORD PTR fs:[eax],edx
  406e22:	push   0x406e37
  406e27:	lea    eax,[ebp-0x4]
  406e2a:	call   0x404f88
  406e2f:	ret    
  406e30:	jmp    0x40481c
  406e35:	jmp    0x406e27
  406e37:	pop    esi
  406e38:	pop    ebx
  406e39:	pop    ecx
  406e3a:	pop    ecx
  406e3b:	pop    ebp
  406e3c:	ret    
  406e3d:	lea    eax,[eax+0x0]
  406e40:	push   ebp
  406e41:	mov    ebp,esp
  406e43:	add    esp,0xfffffff4
  406e46:	push   ebx
  406e47:	push   esi
  406e48:	xor    ecx,ecx
  406e4a:	mov    DWORD PTR [ebp-0x4],ecx
  406e4d:	mov    DWORD PTR [ebp-0x8],edx
  406e50:	mov    esi,eax
  406e52:	xor    eax,eax
  406e54:	push   ebp
  406e55:	push   0x406eeb
  406e5a:	push   DWORD PTR fs:[eax]
  406e5d:	mov    DWORD PTR fs:[eax],esp
  406e60:	mov    eax,DWORD PTR [ebp-0x8]
  406e63:	call   0x405790
  406e68:	test   esi,esi
  406e6a:	je     0x406ed5
  406e6c:	mov    DWORD PTR [ebp-0xc],esi
  406e6f:	mov    ebx,DWORD PTR [ebp-0xc]
  406e72:	mov    eax,ebx
  406e74:	test   eax,eax
  406e76:	je     0x406e7d
  406e78:	sub    eax,0x4
  406e7b:	mov    eax,DWORD PTR [eax]
  406e7d:	lea    edx,[ebp-0x4]
  406e80:	xchg   edx,eax
  406e81:	call   0x4059dc
  406e86:	test   ebx,ebx
  406e88:	je     0x406e8f
  406e8a:	sub    ebx,0x4
  406e8d:	mov    ebx,DWORD PTR [ebx]
  406e8f:	push   ebx
  406e90:	mov    eax,DWORD PTR [ebp-0x4]
  406e93:	call   0x405900
  406e98:	inc    eax
  406e99:	push   eax
  406e9a:	mov    eax,esi
  406e9c:	call   0x405418
  406ea1:	push   eax
  406ea2:	mov    eax,DWORD PTR [ebp-0x4]
  406ea5:	call   0x4058f0
  406eaa:	pop    ecx
  406eab:	pop    edx
  406eac:	call   0x406c54
  406eb1:	test   eax,eax
  406eb3:	jle    0x406ec2
  406eb5:	mov    edx,eax
  406eb7:	dec    edx
  406eb8:	lea    eax,[ebp-0x4]
  406ebb:	call   0x4059dc
  406ec0:	jmp    0x406eca
  406ec2:	lea    eax,[ebp-0x4]
  406ec5:	call   0x405790
  406eca:	mov    eax,DWORD PTR [ebp-0x8]
  406ecd:	mov    edx,DWORD PTR [ebp-0x4]
  406ed0:	call   0x4057cc
  406ed5:	xor    eax,eax
  406ed7:	pop    edx
  406ed8:	pop    ecx
  406ed9:	pop    ecx
  406eda:	mov    DWORD PTR fs:[eax],edx
  406edd:	push   0x406ef2
  406ee2:	lea    eax,[ebp-0x4]
  406ee5:	call   0x405790
  406eea:	ret    
  406eeb:	jmp    0x40481c
  406ef0:	jmp    0x406ee2
  406ef2:	pop    esi
  406ef3:	pop    ebx
  406ef4:	mov    esp,ebp
  406ef6:	pop    ebp
  406ef7:	ret    
  406ef8:	push   ebp
  406ef9:	mov    ebp,esp
  406efb:	push   0x0
  406efd:	push   ebx
  406efe:	push   esi
  406eff:	mov    esi,edx
  406f01:	mov    ebx,eax
  406f03:	xor    eax,eax
  406f05:	push   ebp
  406f06:	push   0x406f3b
  406f0b:	push   DWORD PTR fs:[eax]
  406f0e:	mov    DWORD PTR fs:[eax],esp
  406f11:	lea    eax,[ebp-0x4]
  406f14:	mov    edx,ebx
  406f16:	call   0x4058e0
  406f1b:	mov    eax,DWORD PTR [ebp-0x4]
  406f1e:	mov    edx,esi
  406f20:	call   0x406d84
  406f25:	xor    eax,eax
  406f27:	pop    edx
  406f28:	pop    ecx
  406f29:	pop    ecx
  406f2a:	mov    DWORD PTR fs:[eax],edx
  406f2d:	push   0x406f42
  406f32:	lea    eax,[ebp-0x4]
  406f35:	call   0x405790
  406f3a:	ret    
  406f3b:	jmp    0x40481c
  406f40:	jmp    0x406f32
  406f42:	pop    esi
  406f43:	pop    ebx
  406f44:	pop    ecx
  406f45:	pop    ebp
  406f46:	ret    
  406f47:	nop
  406f48:	push   ebx
  406f49:	push   esi
  406f4a:	add    esp,0xfffff004
  406f50:	push   eax
  406f51:	mov    esi,edx
  406f53:	mov    ebx,eax
  406f55:	test   ebx,ebx
  406f57:	je     0x406f96
  406f59:	cmp    DWORD PTR [ebx+0x4],0x10000
  406f60:	jge    0x406f8c
  406f62:	push   0x1000
  406f67:	lea    eax,[esp+0x4]
  406f6b:	push   eax
  406f6c:	mov    eax,DWORD PTR [ebx+0x4]
  406f6f:	push   eax
  406f70:	mov    eax,DWORD PTR [ebx]
  406f72:	mov    eax,DWORD PTR [eax]
  406f74:	call   0x40649c
  406f79:	push   eax
  406f7a:	call   0x4012e4
  406f7f:	mov    ecx,eax
  406f81:	mov    edx,esp
  406f83:	mov    eax,esi
  406f85:	call   0x405078
  406f8a:	jmp    0x406f96
  406f8c:	mov    eax,esi
  406f8e:	mov    edx,DWORD PTR [ebx+0x4]
  406f91:	call   0x405180
  406f96:	add    esp,0x1000
  406f9c:	pop    esi
  406f9d:	pop    ebx
  406f9e:	ret    
  406f9f:	nop
  406fa0:	jmp    DWORD PTR ds:0x4793a0
  406fa6:	mov    eax,eax
  406fa8:	push   ebp
  406fa9:	mov    ebp,esp
  406fab:	xor    eax,eax
  406fad:	push   ebp
  406fae:	push   0x406ffc
  406fb3:	push   DWORD PTR fs:[eax]
  406fb6:	mov    DWORD PTR fs:[eax],esp
  406fb9:	inc    DWORD PTR ds:0x46e5b0
  406fbf:	jne    0x406fee
  406fc1:	mov    eax,0x46e048
  406fc6:	call   0x4036e4
  406fcb:	mov    eax,0x46e214
  406fd0:	call   0x4036e4
  406fd5:	mov    eax,0x46e3e0
  406fda:	call   0x4036e4
  406fdf:	call   0x402e34
  406fe4:	mov    eax,0x461048
  406fe9:	call   0x404f88
  406fee:	xor    eax,eax
  406ff0:	pop    edx
  406ff1:	pop    ecx
  406ff2:	pop    ecx
  406ff3:	mov    DWORD PTR fs:[eax],edx
  406ff6:	push   0x407003
  406ffb:	ret    
  406ffc:	jmp    0x40481c
  407001:	jmp    0x406ffb
  407003:	pop    ebp
  407004:	ret    
  407005:	lea    eax,[eax+0x0]
  407008:	jmp    DWORD PTR ds:0x479450
  40700e:	mov    eax,eax
  407010:	jmp    DWORD PTR ds:0x47944c
  407016:	mov    eax,eax
  407018:	jmp    DWORD PTR ds:0x479448
  40701e:	mov    eax,eax
  407020:	jmp    DWORD PTR ds:0x479444
  407026:	mov    eax,eax
  407028:	push   eax
  407029:	push   0x40
  40702b:	call   0x407010
  407030:	ret    
  407031:	lea    eax,[eax+0x0]
  407034:	mov    eax,0xc
  407039:	ret    
  40703a:	mov    eax,eax
  40703c:	push   ebx
  40703d:	call   0x407034
  407042:	mov    ebx,eax
  407044:	test   ebx,ebx
  407046:	je     0x40707e
  407048:	cmp    DWORD PTR ds:0x461798,0xffffffff
  40704f:	jne    0x40705b
  407051:	mov    eax,0xe2
  407056:	call   0x404ea8
  40705b:	mov    eax,ebx
  40705d:	call   0x407028
  407062:	test   eax,eax
  407064:	jne    0x407072
  407066:	mov    eax,0xe2
  40706b:	call   0x404ea8
  407070:	jmp    0x40707e
  407072:	push   eax
  407073:	mov    eax,ds:0x461798
  407078:	push   eax
  407079:	call   0x407020
  40707e:	pop    ebx
  40707f:	ret    
  407080:	mov    cl,BYTE PTR ds:0x4707ec
  407086:	mov    eax,ds:0x461798
  40708b:	test   cl,cl
  40708d:	jne    0x4070b5
  40708f:	mov    edx,DWORD PTR fs:0x2c
  407096:	mov    eax,DWORD PTR [edx+eax*4]
  407099:	ret    
  40709a:	call   0x40703c
  40709f:	mov    eax,ds:0x461798
  4070a4:	push   eax
  4070a5:	call   0x407018
  4070aa:	test   eax,eax
  4070ac:	je     0x4070af
  4070ae:	ret    
  4070af:	mov    eax,ds:0x4707f4
  4070b4:	ret    
  4070b5:	push   eax
  4070b6:	call   0x407018
  4070bb:	test   eax,eax
  4070bd:	je     0x40709a
  4070bf:	ret    
  4070c0:	mov    eax,0x4617a0
  4070c5:	call   0x406a18
  4070ca:	ret    
  4070cb:	nop
  4070cc:	push   ebx
  4070cd:	mov    ebx,eax
  4070cf:	xor    eax,eax
  4070d1:	mov    ds:0x461798,eax
  4070d6:	push   0x0
  4070d8:	call   0x407008
  4070dd:	mov    ds:0x4707f0,eax
  4070e2:	mov    eax,ds:0x4707f0
  4070e7:	mov    ds:0x4617a4,eax
  4070ec:	xor    eax,eax
  4070ee:	mov    ds:0x4617a8,eax
  4070f3:	xor    eax,eax
  4070f5:	mov    ds:0x4617ac,eax
  4070fa:	call   0x4070c0
  4070ff:	mov    edx,0x4617a0
  407104:	mov    eax,ebx
  407106:	call   0x404c14
  40710b:	pop    ebx
  40710c:	ret    
  40710d:	lea    eax,[eax+0x0]
  407110:	jmp    DWORD PTR ds:0x479588
  407116:	mov    eax,eax
  407118:	jmp    DWORD PTR ds:0x479584
  40711e:	mov    eax,eax
  407120:	jmp    DWORD PTR ds:0x479580
  407126:	mov    eax,eax
  407128:	jmp    DWORD PTR ds:0x47957c
  40712e:	mov    eax,eax
  407130:	jmp    DWORD PTR ds:0x479578
  407136:	mov    eax,eax
  407138:	jmp    DWORD PTR ds:0x479574
  40713e:	mov    eax,eax
  407140:	jmp    DWORD PTR ds:0x47956c
  407146:	mov    eax,eax
  407148:	jmp    DWORD PTR ds:0x479568
  40714e:	mov    eax,eax
  407150:	jmp    DWORD PTR ds:0x479564
  407156:	mov    eax,eax
  407158:	jmp    DWORD PTR ds:0x479560
  40715e:	mov    eax,eax
  407160:	jmp    DWORD PTR ds:0x47955c
  407166:	mov    eax,eax
  407168:	jmp    DWORD PTR ds:0x479558
  40716e:	mov    eax,eax
  407170:	jmp    DWORD PTR ds:0x479554
  407176:	mov    eax,eax
  407178:	jmp    DWORD PTR ds:0x479550
  40717e:	mov    eax,eax
  407180:	jmp    DWORD PTR ds:0x47954c
  407186:	mov    eax,eax
  407188:	jmp    DWORD PTR ds:0x479548
  40718e:	mov    eax,eax
  407190:	jmp    DWORD PTR ds:0x479544
  407196:	mov    eax,eax
  407198:	jmp    DWORD PTR ds:0x479540
  40719e:	mov    eax,eax
  4071a0:	jmp    DWORD PTR ds:0x47953c
  4071a6:	mov    eax,eax
  4071a8:	jmp    DWORD PTR ds:0x479538
  4071ae:	mov    eax,eax
  4071b0:	jmp    DWORD PTR ds:0x479534
  4071b6:	mov    eax,eax
  4071b8:	jmp    DWORD PTR ds:0x479530
  4071be:	mov    eax,eax
  4071c0:	jmp    DWORD PTR ds:0x47952c
  4071c6:	mov    eax,eax
  4071c8:	jmp    DWORD PTR ds:0x479528
  4071ce:	mov    eax,eax
  4071d0:	jmp    DWORD PTR ds:0x479524
  4071d6:	mov    eax,eax
  4071d8:	jmp    DWORD PTR ds:0x479520
  4071de:	mov    eax,eax
  4071e0:	jmp    DWORD PTR ds:0x47951c
  4071e6:	mov    eax,eax
  4071e8:	jmp    DWORD PTR ds:0x479518
  4071ee:	mov    eax,eax
  4071f0:	jmp    DWORD PTR ds:0x479514
  4071f6:	mov    eax,eax
  4071f8:	jmp    DWORD PTR ds:0x479510
  4071fe:	mov    eax,eax
  407200:	jmp    DWORD PTR ds:0x47950c
  407206:	mov    eax,eax
  407208:	jmp    DWORD PTR ds:0x479508
  40720e:	mov    eax,eax
  407210:	jmp    DWORD PTR ds:0x479504
  407216:	mov    eax,eax
  407218:	jmp    DWORD PTR ds:0x479500
  40721e:	mov    eax,eax
  407220:	jmp    DWORD PTR ds:0x4794fc
  407226:	mov    eax,eax
  407228:	jmp    DWORD PTR ds:0x4794f8
  40722e:	mov    eax,eax
  407230:	jmp    DWORD PTR ds:0x4794f4
  407236:	mov    eax,eax
  407238:	jmp    DWORD PTR ds:0x4794f0
  40723e:	mov    eax,eax
  407240:	jmp    DWORD PTR ds:0x4794ec
  407246:	mov    eax,eax
  407248:	jmp    DWORD PTR ds:0x4794e8
  40724e:	mov    eax,eax
  407250:	jmp    DWORD PTR ds:0x4794e4
  407256:	mov    eax,eax
  407258:	jmp    DWORD PTR ds:0x4794e0
  40725e:	mov    eax,eax
  407260:	jmp    DWORD PTR ds:0x4794dc
  407266:	mov    eax,eax
  407268:	jmp    DWORD PTR ds:0x4794d8
  40726e:	mov    eax,eax
  407270:	jmp    DWORD PTR ds:0x4794d4
  407276:	mov    eax,eax
  407278:	jmp    DWORD PTR ds:0x4794d0
  40727e:	mov    eax,eax
  407280:	jmp    DWORD PTR ds:0x4794cc
  407286:	mov    eax,eax
  407288:	jmp    DWORD PTR ds:0x4794c8
  40728e:	mov    eax,eax
  407290:	jmp    DWORD PTR ds:0x4794c4
  407296:	mov    eax,eax
  407298:	jmp    DWORD PTR ds:0x4794c0
  40729e:	mov    eax,eax
  4072a0:	jmp    DWORD PTR ds:0x4794bc
  4072a6:	mov    eax,eax
  4072a8:	jmp    DWORD PTR ds:0x4794b8
  4072ae:	mov    eax,eax
  4072b0:	jmp    DWORD PTR ds:0x4794b4
  4072b6:	mov    eax,eax
  4072b8:	jmp    DWORD PTR ds:0x4794b0
  4072be:	mov    eax,eax
  4072c0:	jmp    DWORD PTR ds:0x4794ac
  4072c6:	mov    eax,eax
  4072c8:	jmp    DWORD PTR ds:0x4794a8
  4072ce:	mov    eax,eax
  4072d0:	jmp    DWORD PTR ds:0x4794a4
  4072d6:	mov    eax,eax
  4072d8:	jmp    DWORD PTR ds:0x4794a0
  4072de:	mov    eax,eax
  4072e0:	jmp    DWORD PTR ds:0x47949c
  4072e6:	mov    eax,eax
  4072e8:	jmp    DWORD PTR ds:0x479498
  4072ee:	mov    eax,eax
  4072f0:	jmp    DWORD PTR ds:0x479494
  4072f6:	mov    eax,eax
  4072f8:	jmp    DWORD PTR ds:0x479490
  4072fe:	mov    eax,eax
  407300:	jmp    DWORD PTR ds:0x47948c
  407306:	mov    eax,eax
  407308:	jmp    DWORD PTR ds:0x479488
  40730e:	mov    eax,eax
  407310:	jmp    DWORD PTR ds:0x479484
  407316:	mov    eax,eax
  407318:	jmp    DWORD PTR ds:0x479480
  40731e:	mov    eax,eax
  407320:	jmp    DWORD PTR ds:0x47947c
  407326:	mov    eax,eax
  407328:	jmp    DWORD PTR ds:0x47946c
  40732e:	mov    eax,eax
  407330:	jmp    DWORD PTR ds:0x479474
  407336:	mov    eax,eax
  407338:	jmp    DWORD PTR ds:0x479470
  40733e:	mov    eax,eax
  407340:	jmp    DWORD PTR ds:0x479468
  407346:	mov    eax,eax
  407348:	jmp    DWORD PTR ds:0x479464
  40734e:	mov    eax,eax
  407350:	jmp    DWORD PTR ds:0x479460
  407356:	mov    eax,eax
  407358:	jmp    DWORD PTR ds:0x47945c
  40735e:	mov    eax,eax
  407360:	jmp    DWORD PTR ds:0x479458
  407366:	mov    eax,eax
  407368:	xor    ecx,ecx
  40736a:	call   0x4037c8
  40736f:	ret    
  407370:	push   ebp
  407371:	mov    ebp,esp
  407373:	xor    eax,eax
  407375:	push   ebp
  407376:	push   0x4073ab
  40737b:	push   DWORD PTR fs:[eax]
  40737e:	mov    DWORD PTR fs:[eax],esp
  407381:	inc    DWORD PTR ds:0x4707f8
  407387:	jne    0x40739d
  407389:	cmp    DWORD PTR ds:0x4707fc,0x0
  407390:	je     0x40739d
  407392:	mov    eax,ds:0x4707fc
  407397:	push   eax
  407398:	call   0x4071c8
  40739d:	xor    eax,eax
  40739f:	pop    edx
  4073a0:	pop    ecx
  4073a1:	pop    ecx
  4073a2:	mov    DWORD PTR fs:[eax],edx
  4073a5:	push   0x4073b2
  4073aa:	ret    
  4073ab:	jmp    0x40481c
  4073b0:	jmp    0x4073aa
  4073b2:	pop    ebp
  4073b3:	ret    
  4073b4:	lock pop es
  4073b6:	inc    edi
  4073b7:	add    al,dh
  4073b9:	inc    DWORD PTR [eax]
  4073bb:	add    al,dh
  4073bd:	pop    es
  4073be:	inc    edi
  4073bf:	add    cl,dh
  4073c1:	inc    DWORD PTR [eax]
  4073c3:	add    al,dh
  4073c5:	pop    es
  4073c6:	inc    edi
  4073c7:	add    dl,dh
  4073c9:	inc    DWORD PTR [eax]
  4073cb:	add    al,dh
  4073cd:	pop    es
  4073ce:	inc    edi
  4073cf:	add    bl,dh
  4073d1:	inc    DWORD PTR [eax]
  4073d3:	add    al,dh
  4073d5:	pop    es
  4073d6:	inc    edi
  4073d7:	add    ah,dh
  4073d9:	inc    DWORD PTR [eax]
  4073db:	add    al,dh
  4073dd:	pop    es
  4073de:	inc    edi
  4073df:	add    ch,dh
  4073e1:	inc    DWORD PTR [eax]
  4073e3:	add    al,dh
  4073e5:	pop    es
  4073e6:	inc    edi
  4073e7:	add    dh,dh
  4073e9:	inc    DWORD PTR [eax]
  4073eb:	add    al,dh
  4073ed:	pop    es
  4073ee:	inc    edi
  4073ef:	add    bh,dh
  4073f1:	inc    DWORD PTR [eax]
  4073f3:	add    al,dh
  4073f5:	pop    es
  4073f6:	inc    edi
  4073f7:	add    al,bh
  4073f9:	inc    DWORD PTR [eax]
  4073fb:	add    al,dh
  4073fd:	pop    es
  4073fe:	inc    edi
  4073ff:	add    cl,bh
  407401:	inc    DWORD PTR [eax]
  407403:	add    al,dh
  407405:	pop    es
  407406:	inc    edi
  407407:	add    dl,bh
  407409:	inc    DWORD PTR [eax]
  40740b:	add    al,dh
  40740d:	pop    es
  40740e:	inc    edi
  40740f:	add    bl,bh
  407411:	inc    DWORD PTR [eax]
  407413:	add    al,dh
  407415:	pop    es
  407416:	inc    edi
  407417:	add    ah,bh
  407419:	inc    DWORD PTR [eax]
  40741b:	add    al,dh
  40741d:	pop    es
  40741e:	inc    edi
  40741f:	add    ch,bh
  407421:	inc    DWORD PTR [eax]
  407423:	add    al,dh
  407425:	pop    es
  407426:	inc    edi
  407427:	add    dh,bh
  407429:	inc    DWORD PTR [eax]
  40742b:	add    al,dh
  40742d:	pop    es
  40742e:	inc    edi
  40742f:	add    bh,bh
  407431:	inc    DWORD PTR [eax]
  407433:	add    al,dh
  407435:	pop    es
  407436:	inc    edi
  407437:	add    al,ah
  407439:	inc    DWORD PTR [eax]
  40743b:	add    al,dh
  40743d:	pop    es
  40743e:	inc    edi
  40743f:	add    cl,ah
  407441:	inc    DWORD PTR [eax]
  407443:	add    al,dh
  407445:	pop    es
  407446:	inc    edi
  407447:	add    dl,ah
  407449:	inc    DWORD PTR [eax]
  40744b:	add    al,dh
  40744d:	pop    es
  40744e:	inc    edi
  40744f:	add    bl,ah
  407451:	inc    DWORD PTR [eax]
  407453:	add    al,dh
  407455:	pop    es
  407456:	inc    edi
  407457:	add    ah,ah
  407459:	inc    DWORD PTR [eax]
  40745b:	add    al,dh
  40745d:	pop    es
  40745e:	inc    edi
  40745f:	add    ch,ah
  407461:	inc    DWORD PTR [eax]
  407463:	add    al,dh
  407465:	pop    es
  407466:	inc    edi
  407467:	add    dh,ah
  407469:	inc    DWORD PTR [eax]
  40746b:	add    al,dh
  40746d:	pop    es
  40746e:	inc    edi
  40746f:	add    bh,ah
  407471:	inc    DWORD PTR [eax]
  407473:	add    al,dh
  407475:	pop    es
  407476:	inc    edi
  407477:	add    al,ch
  407479:	inc    DWORD PTR [eax]
  40747b:	add    al,dh
  40747d:	pop    es
  40747e:	inc    edi
  40747f:	add    cl,ch
  407481:	inc    DWORD PTR [eax]
  407483:	add    al,dh
  407485:	pop    es
  407486:	inc    edi
  407487:	add    dl,ch
  407489:	inc    DWORD PTR [eax]
  40748b:	add    al,dh
  40748d:	pop    es
  40748e:	inc    edi
  40748f:	add    bl,ch
  407491:	inc    DWORD PTR [eax]
  407493:	add    al,dh
  407495:	pop    es
  407496:	inc    edi
  407497:	add    ah,ch
  407499:	inc    DWORD PTR [eax]
  40749b:	add    al,dh
  40749d:	pop    es
  40749e:	inc    edi
  40749f:	add    ch,ch
  4074a1:	inc    DWORD PTR [eax]
  4074a3:	add    al,dh
  4074a5:	pop    es
  4074a6:	inc    edi
  4074a7:	add    dh,ch
  4074a9:	inc    DWORD PTR [eax]
  4074ab:	add    al,dh
  4074ad:	pop    es
  4074ae:	inc    edi
  4074af:	add    bh,ch
  4074b1:	inc    DWORD PTR [eax]
  4074b3:	add    al,dh
  4074b5:	pop    es
  4074b6:	inc    edi
  4074b7:	add    al,dl
  4074b9:	inc    DWORD PTR [eax]
  4074bb:	add    al,dh
  4074bd:	pop    es
  4074be:	inc    edi
  4074bf:	add    cl,dl
  4074c1:	inc    DWORD PTR [eax]
  4074c3:	add    al,dh
  4074c5:	pop    es
  4074c6:	inc    edi
  4074c7:	add    dl,dl
  4074c9:	inc    DWORD PTR [eax]
  4074cb:	add    al,dh
  4074cd:	pop    es
  4074ce:	inc    edi
  4074cf:	add    bl,dl
  4074d1:	inc    DWORD PTR [eax]
  4074d3:	add    al,dh
  4074d5:	pop    es
  4074d6:	inc    edi
  4074d7:	add    ah,dl
  4074d9:	inc    DWORD PTR [eax]
  4074db:	add    al,dh
  4074dd:	pop    es
  4074de:	inc    edi
  4074df:	add    ch,dl
  4074e1:	inc    DWORD PTR [eax]
  4074e3:	add    al,dh
  4074e5:	pop    es
  4074e6:	inc    edi
  4074e7:	add    dh,dl
  4074e9:	inc    DWORD PTR [eax]
  4074eb:	add    al,dh
  4074ed:	pop    es
  4074ee:	inc    edi
  4074ef:	add    bh,dl
  4074f1:	inc    DWORD PTR [eax]
  4074f3:	add    al,dh
  4074f5:	pop    es
  4074f6:	inc    edi
  4074f7:	add    al,bl
  4074f9:	inc    DWORD PTR [eax]
  4074fb:	add    al,dh
  4074fd:	pop    es
  4074fe:	inc    edi
  4074ff:	add    cl,bl
  407501:	inc    DWORD PTR [eax]
  407503:	add    al,dh
  407505:	pop    es
  407506:	inc    edi
  407507:	add    dl,bl
  407509:	inc    DWORD PTR [eax]
  40750b:	add    al,dh
  40750d:	pop    es
  40750e:	inc    edi
  40750f:	add    bl,bl
  407511:	inc    DWORD PTR [eax]
  407513:	add    al,dh
  407515:	pop    es
  407516:	inc    edi
  407517:	add    ah,bl
  407519:	inc    DWORD PTR [eax]
  40751b:	add    al,dh
  40751d:	pop    es
  40751e:	inc    edi
  40751f:	add    ch,bl
  407521:	inc    DWORD PTR [eax]
  407523:	add    al,dh
  407525:	pop    es
  407526:	inc    edi
  407527:	add    dh,bl
  407529:	inc    DWORD PTR [eax]
  40752b:	add    al,dh
  40752d:	pop    es
  40752e:	inc    edi
  40752f:	add    bh,bl
  407531:	inc    DWORD PTR [eax]
  407533:	add    al,dh
  407535:	pop    es
  407536:	inc    edi
  407537:	add    al,al
  407539:	inc    DWORD PTR [eax]
  40753b:	add    al,dh
  40753d:	pop    es
  40753e:	inc    edi
  40753f:	add    cl,al
  407541:	inc    DWORD PTR [eax]
  407543:	add    al,dh
  407545:	pop    es
  407546:	inc    edi
  407547:	add    dl,al
  407549:	inc    DWORD PTR [eax]
  40754b:	add    al,dh
  40754d:	pop    es
  40754e:	inc    edi
  40754f:	add    bl,al
  407551:	inc    DWORD PTR [eax]
  407553:	add    al,dh
  407555:	pop    es
  407556:	inc    edi
  407557:	add    ah,al
  407559:	inc    DWORD PTR [eax]
  40755b:	add    al,dh
  40755d:	pop    es
  40755e:	inc    edi
  40755f:	add    ch,al
  407561:	inc    DWORD PTR [eax]
  407563:	add    al,dh
  407565:	pop    es
  407566:	inc    edi
  407567:	add    dh,al
  407569:	inc    DWORD PTR [eax]
  40756b:	add    al,dh
  40756d:	pop    es
  40756e:	inc    edi
  40756f:	add    bh,al
  407571:	inc    DWORD PTR [eax]
  407573:	add    al,dh
  407575:	pop    es
  407576:	inc    edi
  407577:	add    al,cl
  407579:	inc    DWORD PTR [eax]
  40757b:	add    al,dh
  40757d:	pop    es
  40757e:	inc    edi
  40757f:	add    cl,cl
  407581:	inc    DWORD PTR [eax]
  407583:	add    al,dh
  407585:	pop    es
  407586:	inc    edi
  407587:	add    dl,cl
  407589:	inc    DWORD PTR [eax]
  40758b:	add    al,dh
  40758d:	pop    es
  40758e:	inc    edi
  40758f:	add    bl,cl
  407591:	inc    DWORD PTR [eax]
  407593:	add    al,dh
  407595:	pop    es
  407596:	inc    edi
  407597:	add    ah,cl
  407599:	inc    DWORD PTR [eax]
  40759b:	add    al,dh
  40759d:	pop    es
  40759e:	inc    edi
  40759f:	add    ch,cl
  4075a1:	inc    DWORD PTR [eax]
  4075a3:	add    al,dh
  4075a5:	pop    es
  4075a6:	inc    edi
  4075a7:	add    dh,cl
  4075a9:	inc    DWORD PTR [eax]
  4075ab:	add    al,dh
  4075ad:	pop    es
  4075ae:	inc    edi
  4075af:	add    bh,cl
  4075b1:	inc    DWORD PTR [eax]
  4075b3:	add    al,dh
  4075b5:	pop    es
  4075b6:	inc    edi
  4075b7:	add    BYTE PTR [eax-0xfffff01],dh
  4075bd:	pop    es
  4075be:	inc    edi
  4075bf:	add    BYTE PTR [ecx-0xfffff01],dh
  4075c5:	pop    es
  4075c6:	inc    edi
  4075c7:	add    BYTE PTR [edx-0xfffff01],dh
  4075cd:	pop    es
  4075ce:	inc    edi
  4075cf:	add    BYTE PTR [ebx-0xfffff01],dh
  4075d5:	pop    es
  4075d6:	inc    edi
  4075d7:	add    BYTE PTR [edi+edi*8+0x7f00000],dh
  4075de:	inc    edi
  4075df:	add    BYTE PTR [ebp-0xfffff01],dh
  4075e5:	pop    es
  4075e6:	inc    edi
  4075e7:	add    BYTE PTR [esi-0xfffff01],dh
  4075ed:	pop    es
  4075ee:	inc    edi
  4075ef:	add    BYTE PTR [edi-0xfffff01],dh
  4075f5:	pop    es
  4075f6:	inc    edi
  4075f7:	add    BYTE PTR [eax-0xfffff01],bh
  4075fd:	pop    es
  4075fe:	inc    edi
  4075ff:	add    BYTE PTR [ecx-0xfffff01],bh
  407605:	pop    es
  407606:	inc    edi
  407607:	add    BYTE PTR [edx-0xfffff01],bh
  40760d:	pop    es
  40760e:	inc    edi
  40760f:	add    BYTE PTR [ebx-0xfffff01],bh
  407615:	pop    es
  407616:	inc    edi
  407617:	add    BYTE PTR [edi+edi*8+0x7f00000],bh
  40761e:	inc    edi
  40761f:	add    BYTE PTR [ebp-0xfffff01],bh
  407625:	pop    es
  407626:	inc    edi
  407627:	add    BYTE PTR [esi-0xfffff01],bh
  40762d:	pop    es
  40762e:	inc    edi
  40762f:	add    BYTE PTR [edi-0xfffff01],bh
  407635:	pop    es
  407636:	inc    edi
  407637:	add    BYTE PTR [eax-0xfffff01],ah
  40763d:	pop    es
  40763e:	inc    edi
  40763f:	add    BYTE PTR [ecx-0xfffff01],ah
  407645:	pop    es
  407646:	inc    edi
  407647:	add    BYTE PTR [edx-0xfffff01],ah
  40764d:	pop    es
  40764e:	inc    edi
  40764f:	add    BYTE PTR [ebx-0xfffff01],ah
  407655:	pop    es
  407656:	inc    edi
  407657:	add    BYTE PTR [edi+edi*8+0x7f00000],ah
  40765e:	inc    edi
  40765f:	add    BYTE PTR [ebp-0xfffff01],ah
  407665:	pop    es
  407666:	inc    edi
  407667:	add    BYTE PTR [esi-0xfffff01],ah
  40766d:	pop    es
  40766e:	inc    edi
  40766f:	add    BYTE PTR [edi-0xfffff01],ah
  407675:	pop    es
  407676:	inc    edi
  407677:	add    BYTE PTR [eax-0xfffff01],ch
  40767d:	pop    es
  40767e:	inc    edi
  40767f:	add    BYTE PTR [ecx-0xfffff01],ch
  407685:	pop    es
  407686:	inc    edi
  407687:	add    BYTE PTR [edx-0xfffff01],ch
  40768d:	pop    es
  40768e:	inc    edi
  40768f:	add    BYTE PTR [ebx-0xfffff01],ch
  407695:	pop    es
  407696:	inc    edi
  407697:	add    BYTE PTR [edi+edi*8+0x76a00000],ch
  40769e:	inc    eax
  40769f:	add    BYTE PTR [ecx],dl
  4076a1:	push   es
  4076a2:	push   esp
  4076a3:	inc    edx
  4076a4:	jns    0x40771a
  4076a6:	gs jae 0x4076aa
  4076a9:	add    BYTE PTR [eax],al
  4076ab:	add    BYTE PTR [eax],al
  4076ad:	add    BYTE PTR [eax],al
  4076af:	add    BYTE PTR [ecx],dl
  4076b1:	add    BYTE PTR [eax],al
  4076b3:	add    BYTE PTR [eax+edx*1+0x40],dl
  4076b7:	add    BYTE PTR [eax],cl
  4076b9:	push   ebx
  4076ba:	jns    0x40772f
  4076bc:	push   ebp
  4076bd:	je     0x407728
  4076bf:	ins    BYTE PTR es:[edi],dx
  4076c0:	jae    0x40764f
  4076c2:	inc    eax
  4076c3:	add    al,cl
  4076c5:	jbe    0x407707
  4076c7:	add    BYTE PTR [edx],cl
  4076c9:	or     DWORD PTR [esi+eax*2+0x69],edx
  4076cd:	ins    BYTE PTR es:[edi],dx
  4076ce:	gs dec esi
  4076d0:	popa   
  4076d1:	ins    DWORD PTR es:[edi],dx
  4076d2:	gs nop
  4076d4:	fdiv   DWORD PTR [esi+0x40]
  4076d7:	add    BYTE PTR [esi],cl
  4076d9:	or     dl,BYTE PTR [ebx+edx*2+0x65]
  4076dd:	popa   
  4076de:	jb     0x407743
  4076e0:	push   0x60636552
  4076e5:	add    DWORD PTR [eax],eax
  4076e7:	add    BYTE PTR [ecx],al
  4076e9:	add    BYTE PTR [eax],al
  4076eb:	add    ah,al
  4076ed:	jbe    0x40772f
  4076ef:	add    BYTE PTR [eax+eax*1],dl
  4076f2:	add    BYTE PTR [eax],al
  4076f4:	inc    eax
  4076f5:	ja     0x407737
	...
  4076ff:	add    BYTE PTR [eax+0x77],al
  407702:	inc    eax
	...
  407713:	add    BYTE PTR [edx+0x77],dl
  407716:	inc    eax
  407717:	add    BYTE PTR [eax+eax*1],cl
  40771a:	add    BYTE PTR [eax],al
  40771c:	nop
  40771d:	adc    BYTE PTR [eax+0x0],al
  407720:	rol    BYTE PTR [edx+0x40],1
  407723:	add    ah,bl
  407725:	inc    edx
  407726:	inc    eax
  407727:	add    al,ah
  407729:	inc    edx
  40772a:	inc    eax
  40772b:	add    ah,ah
  40772d:	inc    edx
  40772e:	inc    eax
  40772f:	add    al,bl
  407731:	inc    edx
  407732:	inc    eax
  407733:	add    BYTE PTR [eax],bh
  407735:	inc    eax
  407736:	inc    eax
  407737:	add    BYTE PTR [eax+eax*2+0x40],dl
  40773b:	add    BYTE PTR [eax+0xe004040],dl
  407741:	add    BYTE PTR [eax],al
  407743:	add    BYTE PTR [eax],al
  407745:	add    BYTE PTR [ecx],al
  407747:	add    BYTE PTR [eax],al
  407749:	add    BYTE PTR [eax+edx*1+0x40040],al
  407750:	add    BYTE PTR [eax],al
  407752:	or     DWORD PTR [ebp+0x78],eax
  407755:	arpl   WORD PTR [ebp+0x70],sp
  407758:	je     0x4077c3
  40775a:	outs   dx,DWORD PTR ds:[esi]
  40775b:	outs   dx,BYTE PTR ds:[esi]
  40775c:	test   al,0x77
  40775e:	inc    eax
	...
  40777b:	add    BYTE PTR [eax+0x10004077],ch
  407781:	add    BYTE PTR [eax],al
  407783:	add    ah,dh
  407785:	jbe    0x4077c7
  407787:	add    al,dl
  407789:	inc    edx
  40778a:	inc    eax
  40778b:	add    ah,bl
  40778d:	inc    edx
  40778e:	inc    eax
  40778f:	add    al,ah
  407791:	inc    edx
  407792:	inc    eax
  407793:	add    ah,ah
  407795:	inc    edx
  407796:	inc    eax
  407797:	add    al,bl
  407799:	inc    edx
  40779a:	inc    eax
  40779b:	add    BYTE PTR [eax],bh
  40779d:	inc    eax
  40779e:	inc    eax
  40779f:	add    BYTE PTR [eax-0x36],al
  4077a2:	inc    eax
  4077a3:	add    BYTE PTR [eax+0xe004040],dl
  4077a9:	inc    ebp
  4077aa:	dec    eax
  4077ab:	gs popa 
  4077ad:	jo     0x4077f4
  4077af:	js     0x407814
  4077b1:	gs jo  0x407828
  4077b4:	imul   ebp,DWORD PTR [edi+0x6e],0x40780490
	...
  4077d7:	add    BYTE PTR [eax+edi*2],al
  4077da:	inc    eax
  4077db:	add    BYTE PTR [eax],dl
  4077dd:	add    BYTE PTR [eax],al
  4077df:	add    BYTE PTR [edi+esi*2+0x40],bl
  4077e3:	add    al,dl
  4077e5:	inc    edx
  4077e6:	inc    eax
  4077e7:	add    ah,bl
  4077e9:	inc    edx
  4077ea:	inc    eax
  4077eb:	add    al,ah
  4077ed:	inc    edx
  4077ee:	inc    eax
  4077ef:	add    ah,ah
  4077f1:	inc    edx
  4077f2:	inc    eax
  4077f3:	add    al,bl
  4077f5:	inc    edx
  4077f6:	inc    eax
  4077f7:	add    BYTE PTR [eax],bh
  4077f9:	inc    eax
  4077fa:	inc    eax
  4077fb:	add    BYTE PTR [eax-0x36],al
  4077fe:	inc    eax
  4077ff:	add    BYTE PTR [eax+0xc004040],dl
  407805:	inc    ebp
  407806:	dec    edi
  407807:	jne    0x40787d
  407809:	dec    edi
  40780a:	dec    bp
  40780c:	gs ins DWORD PTR es:[edi],dx
  40780e:	outs   dx,DWORD PTR ds:[esi]
  40780f:	jb     0x40788a
  407811:	lea    eax,[eax+0x0]
  407814:	pusha  
  407815:	js     0x407857
	...
  407833:	add    BYTE PTR [eax+0x78],ah
  407836:	inc    eax
  407837:	add    BYTE PTR [eax],dl
  407839:	add    BYTE PTR [eax],al
  40783b:	add    ah,dh
  40783d:	jbe    0x40787f
  40783f:	add    al,dl
  407841:	inc    edx
  407842:	inc    eax
  407843:	add    ah,bl
  407845:	inc    edx
  407846:	inc    eax
  407847:	add    al,ah
  407849:	inc    edx
  40784a:	inc    eax
  40784b:	add    ah,ah
  40784d:	inc    edx
  40784e:	inc    eax
  40784f:	add    al,bl
  407851:	inc    edx
  407852:	inc    eax
  407853:	add    BYTE PTR [eax],bh
  407855:	inc    eax
  407856:	inc    eax
  407857:	add    BYTE PTR [eax+eax*2+0x40],dl
  40785b:	add    BYTE PTR [eax+0xb004040],dl
  407861:	inc    ebp
  407862:	dec    ecx
  407863:	outs   dx,BYTE PTR ds:[esi]
  407864:	dec    edi
  407865:	jne    0x4078db
  407867:	inc    ebp
  407868:	jb     0x4078dc
  40786a:	outs   dx,DWORD PTR ds:[esi]
  40786b:	jb     0x407825
  40786d:	js     0x4078af
	...
  40788b:	add    BYTE PTR [eax+0x10004078],bh
  407891:	add    BYTE PTR [eax],al
  407893:	add    ah,dh
  407895:	jbe    0x4078d7
  407897:	add    al,dl
  407899:	inc    edx
  40789a:	inc    eax
  40789b:	add    ah,bl
  40789d:	inc    edx
  40789e:	inc    eax
  40789f:	add    al,ah
  4078a1:	inc    edx
  4078a2:	inc    eax
  4078a3:	add    ah,ah
  4078a5:	inc    edx
  4078a6:	inc    eax
  4078a7:	add    al,bl
  4078a9:	inc    edx
  4078aa:	inc    eax
  4078ab:	add    BYTE PTR [eax],bh
  4078ad:	inc    eax
  4078ae:	inc    eax
  4078af:	add    BYTE PTR [eax+eax*2+0x40],dl
  4078b3:	add    BYTE PTR [eax+0x9004040],dl
  4078b9:	inc    ebp
  4078ba:	inc    ebp
  4078bb:	js     0x407931
  4078bd:	gs jb  0x40792e
  4078c0:	popa   
  4078c1:	ins    BYTE PTR es:[edi],dx
  4078c2:	mov    eax,eax
  4078c4:	adc    BYTE PTR [ecx+0x40],bh
	...
  4078e3:	add    BYTE PTR [eax],dl
  4078e5:	jns    0x407927
  4078e7:	add    BYTE PTR [eax],dl
  4078e9:	add    BYTE PTR [eax],al
  4078eb:	add    BYTE PTR [eax+edi*2+0x40],ch
  4078ef:	add    al,dl
  4078f1:	inc    edx
  4078f2:	inc    eax
  4078f3:	add    ah,bl
  4078f5:	inc    edx
  4078f6:	inc    eax
  4078f7:	add    al,ah
  4078f9:	inc    edx
  4078fa:	inc    eax
  4078fb:	add    ah,ah
  4078fd:	inc    edx
  4078fe:	inc    eax
  4078ff:	add    al,bl
  407901:	inc    edx
  407902:	inc    eax
  407903:	add    BYTE PTR [eax],bh
  407905:	inc    eax
  407906:	inc    eax
  407907:	add    BYTE PTR [eax+eax*2+0x40],dl
  40790b:	add    BYTE PTR [eax+0x12004040],dl
  407911:	inc    ebp
  407912:	inc    ebp
  407913:	js     0x407989
  407915:	gs jb  0x407986
  407918:	popa   
  407919:	ins    BYTE PTR es:[edi],dx
  40791a:	inc    ebp
  40791b:	js     0x407980
  40791d:	gs jo  0x407994
  407920:	imul   ebp,DWORD PTR [edi+0x6e],0x40797090
	...
  407943:	add    BYTE PTR [eax+0x79],dh
  407946:	inc    eax
  407947:	add    BYTE PTR [eax],dl
  407949:	add    BYTE PTR [eax],al
  40794b:	add    BYTE PTR [eax+edi*2+0x40],ch
  40794f:	add    al,dl
  407951:	inc    edx
  407952:	inc    eax
  407953:	add    ah,bl
  407955:	inc    edx
  407956:	inc    eax
  407957:	add    al,ah
  407959:	inc    edx
  40795a:	inc    eax
  40795b:	add    ah,ah
  40795d:	inc    edx
  40795e:	inc    eax
  40795f:	add    al,bl
  407961:	inc    edx
  407962:	inc    eax
  407963:	add    BYTE PTR [eax],bh
  407965:	inc    eax
  407966:	inc    eax
  407967:	add    BYTE PTR [eax+eax*2+0x40],dl
  40796b:	add    BYTE PTR [eax+0x9004040],dl
  407971:	inc    ebp
  407972:	dec    ecx
  407973:	outs   dx,BYTE PTR ds:[esi]
  407974:	je     0x4079bb
  407976:	jb     0x4079ea
  407978:	outs   dx,DWORD PTR ds:[esi]
  407979:	jb     0x407906
  40797b:	ror    al,0x79
  40797e:	inc    eax
	...
  40799b:	add    al,cl
  40799d:	jns    0x4079df
  40799f:	add    BYTE PTR [eax],dl
  4079a1:	add    BYTE PTR [eax],al
  4079a3:	add    BYTE PTR [ecx+edi*2],ah
  4079a6:	inc    eax
  4079a7:	add    al,dl
  4079a9:	inc    edx
  4079aa:	inc    eax
  4079ab:	add    ah,bl
  4079ad:	inc    edx
  4079ae:	inc    eax
  4079af:	add    al,ah
  4079b1:	inc    edx
  4079b2:	inc    eax
  4079b3:	add    ah,ah
  4079b5:	inc    edx
  4079b6:	inc    eax
  4079b7:	add    al,bl
  4079b9:	inc    edx
  4079ba:	inc    eax
  4079bb:	add    BYTE PTR [eax],bh
  4079bd:	inc    eax
  4079be:	inc    eax
  4079bf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4079c3:	add    BYTE PTR [eax+0xa004040],dl
  4079c9:	inc    ebp
  4079ca:	inc    esp
  4079cb:	imul   esi,DWORD PTR [esi+0x42],0x72655a79
  4079d2:	outs   dx,DWORD PTR ds:[esi]
  4079d3:	nop
  4079d4:	and    BYTE PTR [edx+0x40],bh
	...
  4079f3:	add    BYTE PTR [eax],ah
  4079f5:	jp     0x407a37
  4079f7:	add    BYTE PTR [eax],dl
  4079f9:	add    BYTE PTR [eax],al
  4079fb:	add    BYTE PTR [ecx+edi*2],ah
  4079fe:	inc    eax
  4079ff:	add    al,dl
  407a01:	inc    edx
  407a02:	inc    eax
  407a03:	add    ah,bl
  407a05:	inc    edx
  407a06:	inc    eax
  407a07:	add    al,ah
  407a09:	inc    edx
  407a0a:	inc    eax
  407a0b:	add    ah,ah
  407a0d:	inc    edx
  407a0e:	inc    eax
  407a0f:	add    al,bl
  407a11:	inc    edx
  407a12:	inc    eax
  407a13:	add    BYTE PTR [eax],bh
  407a15:	inc    eax
  407a16:	inc    eax
  407a17:	add    BYTE PTR [eax+eax*2+0x40],dl
  407a1b:	add    BYTE PTR [eax+0xb004040],dl
  407a21:	inc    ebp
  407a22:	push   edx
  407a23:	popa   
  407a24:	outs   dx,BYTE PTR ds:[esi]
  407a25:	addr16 gs inc ebp
  407a28:	jb     0x407a9c
  407a2a:	outs   dx,DWORD PTR ds:[esi]
  407a2b:	jb     0x407aa5
  407a2d:	jp     0x407a6f
	...
  407a4b:	add    BYTE PTR [eax+0x7a],bh
  407a4e:	inc    eax
  407a4f:	add    BYTE PTR [eax],dl
  407a51:	add    BYTE PTR [eax],al
  407a53:	add    BYTE PTR [ecx+edi*2],ah
  407a56:	inc    eax
  407a57:	add    al,dl
  407a59:	inc    edx
  407a5a:	inc    eax
  407a5b:	add    ah,bl
  407a5d:	inc    edx
  407a5e:	inc    eax
  407a5f:	add    al,ah
  407a61:	inc    edx
  407a62:	inc    eax
  407a63:	add    ah,ah
  407a65:	inc    edx
  407a66:	inc    eax
  407a67:	add    al,bl
  407a69:	inc    edx
  407a6a:	inc    eax
  407a6b:	add    BYTE PTR [eax],bh
  407a6d:	inc    eax
  407a6e:	inc    eax
  407a6f:	add    BYTE PTR [eax+eax*2+0x40],dl
  407a73:	add    BYTE PTR [eax+0xc004040],dl
  407a79:	inc    ebp
  407a7a:	dec    ecx
  407a7b:	outs   dx,BYTE PTR ds:[esi]
  407a7c:	je     0x407acd
  407a7e:	jbe    0x407ae5
  407a80:	jb     0x407ae8
  407a82:	ins    BYTE PTR es:[edi],dx
  407a83:	outs   dx,DWORD PTR ds:[esi]
  407a84:	ja     0x407a13
  407a86:	inc    eax
  407a87:	add    ah,dl
  407a89:	jp     0x407acb
	...
  407aa7:	add    ah,dl
  407aa9:	jp     0x407aeb
  407aab:	add    BYTE PTR [eax],dl
  407aad:	add    BYTE PTR [eax],al
  407aaf:	add    BYTE PTR [eax+edi*2+0x40],ch
  407ab3:	add    al,dl
  407ab5:	inc    edx
  407ab6:	inc    eax
  407ab7:	add    ah,bl
  407ab9:	inc    edx
  407aba:	inc    eax
  407abb:	add    al,ah
  407abd:	inc    edx
  407abe:	inc    eax
  407abf:	add    ah,ah
  407ac1:	inc    edx
  407ac2:	inc    eax
  407ac3:	add    al,bl
  407ac5:	inc    edx
  407ac6:	inc    eax
  407ac7:	add    BYTE PTR [eax],bh
  407ac9:	inc    eax
  407aca:	inc    eax
  407acb:	add    BYTE PTR [eax+eax*2+0x40],dl
  407acf:	add    BYTE PTR [eax+0xa004040],dl
  407ad5:	inc    ebp
  407ad6:	dec    ebp
  407ad7:	popa   
  407ad8:	je     0x407b42
  407ada:	inc    ebp
  407adb:	jb     0x407b4f
  407add:	outs   dx,DWORD PTR ds:[esi]
  407ade:	jb     0x407a70
  407ae0:	sub    al,0x7b
  407ae2:	inc    eax
	...
  407aff:	add    BYTE PTR [ebx+edi*2],ch
  407b02:	inc    eax
  407b03:	add    BYTE PTR [eax],dl
  407b05:	add    BYTE PTR [eax],al
  407b07:	add    BYTE PTR [eax-0x2fffbf86],cl
  407b0d:	inc    edx
  407b0e:	inc    eax
  407b0f:	add    ah,bl
  407b11:	inc    edx
  407b12:	inc    eax
  407b13:	add    al,ah
  407b15:	inc    edx
  407b16:	inc    eax
  407b17:	add    ah,ah
  407b19:	inc    edx
  407b1a:	inc    eax
  407b1b:	add    al,bl
  407b1d:	inc    edx
  407b1e:	inc    eax
  407b1f:	add    BYTE PTR [eax],bh
  407b21:	inc    eax
  407b22:	inc    eax
  407b23:	add    BYTE PTR [eax+eax*2+0x40],dl
  407b27:	add    BYTE PTR [eax+0xa004040],dl
  407b2d:	inc    ebp
  407b2e:	dec    ecx
  407b2f:	outs   dx,BYTE PTR ds:[esi]
  407b30:	jbe    0x407b93
  407b32:	ins    BYTE PTR es:[edi],dx
  407b33:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x407b8490
	...
  407b57:	add    BYTE PTR [ebx+edi*2+0x100040],al
  407b5e:	add    BYTE PTR [eax],al
  407b60:	mov    BYTE PTR [edx+0x40],bh
  407b63:	add    al,dl
  407b65:	inc    edx
  407b66:	inc    eax
  407b67:	add    ah,bl
  407b69:	inc    edx
  407b6a:	inc    eax
  407b6b:	add    al,ah
  407b6d:	inc    edx
  407b6e:	inc    eax
  407b6f:	add    ah,ah
  407b71:	inc    edx
  407b72:	inc    eax
  407b73:	add    al,bl
  407b75:	inc    edx
  407b76:	inc    eax
  407b77:	add    BYTE PTR [eax],bh
  407b79:	inc    eax
  407b7a:	inc    eax
  407b7b:	add    BYTE PTR [eax+eax*2+0x40],dl
  407b7f:	add    BYTE PTR [eax+0xb004040],dl
  407b85:	inc    ebp
  407b86:	pop    edx
  407b87:	gs jb  0x407bf9
  407b8a:	inc    esp
  407b8b:	imul   esi,DWORD PTR [esi+0x69],0x7bdc6564
  407b92:	inc    eax
	...
  407baf:	add    ah,bl
  407bb1:	jnp    0x407bf3
  407bb3:	add    BYTE PTR [eax],dl
  407bb5:	add    BYTE PTR [eax],al
  407bb7:	add    BYTE PTR [eax-0x2fffbf86],cl
  407bbd:	inc    edx
  407bbe:	inc    eax
  407bbf:	add    ah,bl
  407bc1:	inc    edx
  407bc2:	inc    eax
  407bc3:	add    al,ah
  407bc5:	inc    edx
  407bc6:	inc    eax
  407bc7:	add    ah,ah
  407bc9:	inc    edx
  407bca:	inc    eax
  407bcb:	add    al,bl
  407bcd:	inc    edx
  407bce:	inc    eax
  407bcf:	add    BYTE PTR [eax],bh
  407bd1:	inc    eax
  407bd2:	inc    eax
  407bd3:	add    BYTE PTR [eax+eax*2+0x40],dl
  407bd7:	add    BYTE PTR [eax+0x9004040],dl
  407bdd:	inc    ebp
  407bde:	dec    edi
  407bdf:	jbe    0x407c46
  407be1:	jb     0x407c49
  407be3:	ins    BYTE PTR es:[edi],dx
  407be4:	outs   dx,DWORD PTR ds:[esi]
  407be5:	ja     0x407b72
  407be7:	shl    BYTE PTR [esp+edi*2],0x40
	...
  407c07:	add    BYTE PTR [esp+edi*2],dh
  407c0a:	inc    eax
  407c0b:	add    BYTE PTR [eax],dl
  407c0d:	add    BYTE PTR [eax],al
  407c0f:	add    BYTE PTR [eax-0x2fffbf86],cl
  407c15:	inc    edx
  407c16:	inc    eax
  407c17:	add    ah,bl
  407c19:	inc    edx
  407c1a:	inc    eax
  407c1b:	add    al,ah
  407c1d:	inc    edx
  407c1e:	inc    eax
  407c1f:	add    ah,ah
  407c21:	inc    edx
  407c22:	inc    eax
  407c23:	add    al,bl
  407c25:	inc    edx
  407c26:	inc    eax
  407c27:	add    BYTE PTR [eax],bh
  407c29:	inc    eax
  407c2a:	inc    eax
  407c2b:	add    BYTE PTR [eax+eax*2+0x40],dl
  407c2f:	add    BYTE PTR [eax+0xa004040],dl
  407c35:	inc    ebp
  407c36:	push   ebp
  407c37:	outs   dx,BYTE PTR ds:[esi]
  407c38:	fs gs jb 0x407ca2
  407c3c:	ins    BYTE PTR es:[edi],dx
  407c3d:	outs   dx,DWORD PTR ds:[esi]
  407c3e:	ja     0x407bd0
  407c40:	mov    WORD PTR [eax+eax*2+0x0],?
	...
  407c60:	mov    WORD PTR [eax+eax*2+0x0],?
  407c64:	adc    BYTE PTR [eax],al
  407c66:	add    BYTE PTR [eax],al
  407c68:	pop    esp
  407c69:	ja     0x407cab
  407c6b:	add    al,dl
  407c6d:	inc    edx
  407c6e:	inc    eax
  407c6f:	add    ah,bl
  407c71:	inc    edx
  407c72:	inc    eax
  407c73:	add    al,ah
  407c75:	inc    edx
  407c76:	inc    eax
  407c77:	add    ah,ah
  407c79:	inc    edx
  407c7a:	inc    eax
  407c7b:	add    al,bl
  407c7d:	inc    edx
  407c7e:	inc    eax
  407c7f:	add    BYTE PTR [eax],bh
  407c81:	inc    eax
  407c82:	inc    eax
  407c83:	add    BYTE PTR [eax-0x36],al
  407c86:	inc    eax
  407c87:	add    BYTE PTR [eax+0xf004040],dl
  407c8d:	inc    ebp
  407c8e:	dec    ecx
  407c8f:	outs   dx,BYTE PTR ds:[esi]
  407c90:	jbe    0x407cf3
  407c92:	ins    BYTE PTR es:[edi],dx
  407c93:	imul   esp,DWORD PTR [eax+edx*2+0x6f],0x65746e69
  407c9b:	jb     0x407c85
  407c9d:	jl     0x407cdf
	...
  407cbb:	add    al,ch
  407cbd:	jl     0x407cff
  407cbf:	add    BYTE PTR [eax+eax*1],cl
  407cc2:	add    BYTE PTR [eax],al
  407cc4:	hlt    
  407cc5:	jbe    0x407d07
  407cc7:	add    al,dl
  407cc9:	inc    edx
  407cca:	inc    eax
  407ccb:	add    ah,bl
  407ccd:	inc    edx
  407cce:	inc    eax
  407ccf:	add    al,ah
  407cd1:	inc    edx
  407cd2:	inc    eax
  407cd3:	add    ah,ah
  407cd5:	inc    edx
  407cd6:	inc    eax
  407cd7:	add    al,bl
  407cd9:	inc    edx
  407cda:	inc    eax
  407cdb:	add    BYTE PTR [eax],bh
  407cdd:	inc    eax
  407cde:	inc    eax
  407cdf:	add    BYTE PTR [eax+eax*2+0x40],dl
  407ce3:	add    BYTE PTR [eax+0xc004040],dl
  407ce9:	inc    ebp
  407cea:	dec    ecx
  407ceb:	outs   dx,BYTE PTR ds:[esi]
  407cec:	jbe    0x407d4f
  407cee:	ins    BYTE PTR es:[edi],dx
  407cef:	imul   esp,DWORD PTR [ebx+eax*2+0x61],0x408d7473
  407cf7:	add    BYTE PTR [ebp+edi*2+0x40],al
	...
  407d17:	add    BYTE PTR [ebp+edi*2+0x40],al
  407d1b:	add    BYTE PTR [eax+eax*1],cl
  407d1e:	add    BYTE PTR [eax],al
  407d20:	hlt    
  407d21:	jbe    0x407d63
  407d23:	add    al,dl
  407d25:	inc    edx
  407d26:	inc    eax
  407d27:	add    ah,bl
  407d29:	inc    edx
  407d2a:	inc    eax
  407d2b:	add    al,ah
  407d2d:	inc    edx
  407d2e:	inc    eax
  407d2f:	add    ah,ah
  407d31:	inc    edx
  407d32:	inc    eax
  407d33:	add    al,bl
  407d35:	inc    edx
  407d36:	inc    eax
  407d37:	add    BYTE PTR [eax],bh
  407d39:	inc    eax
  407d3a:	inc    eax
  407d3b:	add    BYTE PTR [eax+eax*2+0x40],dl
  407d3f:	add    BYTE PTR [eax+0xd004040],dl
  407d45:	inc    ebp
  407d46:	inc    ebx
  407d47:	outs   dx,DWORD PTR ds:[esi]
  407d48:	outs   dx,BYTE PTR ds:[esi]
  407d49:	jbe    0x407db0
  407d4b:	jb     0x407dc1
  407d4d:	inc    ebp
  407d4e:	jb     0x407dc2
  407d50:	outs   dx,DWORD PTR ds:[esi]
  407d51:	jb     0x407cde
  407d53:	shl    BYTE PTR [eax+0x407d],0x0
	...
  407d72:	add    BYTE PTR [eax],al
  407d74:	mov    al,ds:0x1000407d
  407d79:	add    BYTE PTR [eax],al
  407d7b:	add    BYTE PTR [eax+edi*2+0x40],ch
  407d7f:	add    al,dl
  407d81:	inc    edx
  407d82:	inc    eax
  407d83:	add    ah,bl
  407d85:	inc    edx
  407d86:	inc    eax
  407d87:	add    al,ah
  407d89:	inc    edx
  407d8a:	inc    eax
  407d8b:	add    ah,ah
  407d8d:	inc    edx
  407d8e:	inc    eax
  407d8f:	add    al,bl
  407d91:	inc    edx
  407d92:	inc    eax
  407d93:	add    BYTE PTR [eax],bh
  407d95:	inc    eax
  407d96:	inc    eax
  407d97:	add    BYTE PTR [eax+eax*2+0x40],dl
  407d9b:	add    BYTE PTR [eax+0x10004040],dl
  407da1:	inc    ebp
  407da2:	inc    ecx
  407da3:	arpl   WORD PTR [ebx+0x65],sp
  407da6:	jae    0x407e1b
  407da8:	push   esi
  407da9:	imul   ebp,DWORD PTR [edi+0x6c],0x6f697461
  407db0:	outs   dx,BYTE PTR ds:[esi]
  407db1:	lea    eax,[eax+0x0]
  407db4:	add    BYTE PTR [esi+0x40],bh
	...
  407dd3:	add    BYTE PTR [eax],al
  407dd5:	jle    0x407e17
  407dd7:	add    BYTE PTR [eax],dl
  407dd9:	add    BYTE PTR [eax],al
  407ddb:	add    BYTE PTR [eax+edi*2+0x40],ch
  407ddf:	add    al,dl
  407de1:	inc    edx
  407de2:	inc    eax
  407de3:	add    ah,bl
  407de5:	inc    edx
  407de6:	inc    eax
  407de7:	add    al,ah
  407de9:	inc    edx
  407dea:	inc    eax
  407deb:	add    ah,ah
  407ded:	inc    edx
  407dee:	inc    eax
  407def:	add    al,bl
  407df1:	inc    edx
  407df2:	inc    eax
  407df3:	add    BYTE PTR [eax],bh
  407df5:	inc    eax
  407df6:	inc    eax
  407df7:	add    BYTE PTR [eax+eax*2+0x40],dl
  407dfb:	add    BYTE PTR [eax+0xa004040],dl
  407e01:	inc    ebp
  407e02:	push   eax
  407e03:	jb     0x407e6e
  407e05:	jbe    0x407e70
  407e07:	ins    BYTE PTR es:[edi],dx
  407e08:	gs addr16 gs nop
  407e0c:	pop    eax
  407e0d:	jle    0x407e4f
	...
  407e2b:	add    BYTE PTR [eax+0x7e],bl
  407e2e:	inc    eax
  407e2f:	add    BYTE PTR [eax],dl
  407e31:	add    BYTE PTR [eax],al
  407e33:	add    BYTE PTR [eax+edi*2+0x40],ch
  407e37:	add    al,dl
  407e39:	inc    edx
  407e3a:	inc    eax
  407e3b:	add    ah,bl
  407e3d:	inc    edx
  407e3e:	inc    eax
  407e3f:	add    al,ah
  407e41:	inc    edx
  407e42:	inc    eax
  407e43:	add    ah,ah
  407e45:	inc    edx
  407e46:	inc    eax
  407e47:	add    al,bl
  407e49:	inc    edx
  407e4a:	inc    eax
  407e4b:	add    BYTE PTR [eax],bh
  407e4d:	inc    eax
  407e4e:	inc    eax
  407e4f:	add    BYTE PTR [eax+eax*2+0x40],dl
  407e53:	add    BYTE PTR [eax+0xe004040],dl
  407e59:	inc    ebp
  407e5a:	push   ebx
  407e5b:	je     0x407ebe
  407e5d:	arpl   WORD PTR [ebx+0x4f],bp
  407e60:	jbe    0x407ec7
  407e62:	jb     0x407eca
  407e64:	ins    BYTE PTR es:[edi],dx
  407e65:	outs   dx,DWORD PTR ds:[esi]
  407e66:	ja     0x407df8
  407e68:	mov    ah,0x7e
  407e6a:	inc    eax
	...
  407e87:	add    BYTE PTR [esi+edi*2+0x100040],dh
  407e8e:	add    BYTE PTR [eax],al
  407e90:	ins    BYTE PTR es:[edi],dx
  407e91:	js     0x407ed3
  407e93:	add    al,dl
  407e95:	inc    edx
  407e96:	inc    eax
  407e97:	add    ah,bl
  407e99:	inc    edx
  407e9a:	inc    eax
  407e9b:	add    al,ah
  407e9d:	inc    edx
  407e9e:	inc    eax
  407e9f:	add    ah,ah
  407ea1:	inc    edx
  407ea2:	inc    eax
  407ea3:	add    al,bl
  407ea5:	inc    edx
  407ea6:	inc    eax
  407ea7:	add    BYTE PTR [eax],bh
  407ea9:	inc    eax
  407eaa:	inc    eax
  407eab:	add    BYTE PTR [eax+eax*2+0x40],dl
  407eaf:	add    BYTE PTR [eax+0x9004040],dl
  407eb5:	inc    ebp
  407eb6:	inc    ebx
  407eb7:	outs   dx,DWORD PTR ds:[esi]
  407eb8:	outs   dx,BYTE PTR ds:[esi]
  407eb9:	je     0x407f2d
  407ebb:	outs   dx,DWORD PTR ds:[esi]
  407ebc:	ins    BYTE PTR es:[edi],dx
  407ebd:	inc    ebx
  407ebe:	mov    eax,eax
  407ec0:	or     al,0x7f
  407ec2:	inc    eax
	...
  407edf:	add    BYTE PTR [edi+edi*2],cl
  407ee2:	inc    eax
  407ee3:	add    BYTE PTR [eax+eax*1],cl
  407ee6:	add    BYTE PTR [eax],al
  407ee8:	hlt    
  407ee9:	jbe    0x407f2b
  407eeb:	add    al,dl
  407eed:	inc    edx
  407eee:	inc    eax
  407eef:	add    ah,bl
  407ef1:	inc    edx
  407ef2:	inc    eax
  407ef3:	add    al,ah
  407ef5:	inc    edx
  407ef6:	inc    eax
  407ef7:	add    ah,ah
  407ef9:	inc    edx
  407efa:	inc    eax
  407efb:	add    al,bl
  407efd:	inc    edx
  407efe:	inc    eax
  407eff:	add    BYTE PTR [eax],bh
  407f01:	inc    eax
  407f02:	inc    eax
  407f03:	add    BYTE PTR [eax+eax*2+0x40],dl
  407f07:	add    BYTE PTR [eax+0xd004040],dl
  407f0d:	inc    ebp
  407f0e:	push   esi
  407f0f:	popa   
  407f10:	jb     0x407f7b
  407f12:	popa   
  407f13:	outs   dx,BYTE PTR ds:[esi]
  407f14:	je     0x407f5b
  407f16:	jb     0x407f8a
  407f18:	outs   dx,DWORD PTR ds:[esi]
  407f19:	jb     0x407ea6
  407f1b:	shr    BYTE PTR [eax+0x7f],0x40
	...
  407f3b:	add    BYTE PTR [eax+0x7f],ch
  407f3e:	inc    eax
  407f3f:	add    BYTE PTR [eax+eax*1],cl
  407f42:	add    BYTE PTR [eax],al
  407f44:	hlt    
  407f45:	jbe    0x407f87
  407f47:	add    al,dl
  407f49:	inc    edx
  407f4a:	inc    eax
  407f4b:	add    ah,bl
  407f4d:	inc    edx
  407f4e:	inc    eax
  407f4f:	add    al,ah
  407f51:	inc    edx
  407f52:	inc    eax
  407f53:	add    ah,ah
  407f55:	inc    edx
  407f56:	inc    eax
  407f57:	add    al,bl
  407f59:	inc    edx
  407f5a:	inc    eax
  407f5b:	add    BYTE PTR [eax],bh
  407f5d:	inc    eax
  407f5e:	inc    eax
  407f5f:	add    BYTE PTR [eax+eax*2+0x40],dl
  407f63:	add    BYTE PTR [eax+0x10004040],dl
  407f69:	inc    ebp
  407f6a:	inc    ecx
  407f6b:	jae    0x407fe0
  407f6d:	gs jb  0x407fe4
  407f70:	imul   ebp,DWORD PTR [edi+0x6e],0x6c696146
  407f77:	gs lea eax,fs:[eax+0x0]
  407f7c:	enter  0x407f,0x0
	...
  407f9c:	enter  0x407f,0x0
  407fa0:	or     al,0x0
  407fa2:	add    BYTE PTR [eax],al
  407fa4:	hlt    
  407fa5:	jbe    0x407fe7
  407fa7:	add    al,dl
  407fa9:	inc    edx
  407faa:	inc    eax
  407fab:	add    ah,bl
  407fad:	inc    edx
  407fae:	inc    eax
  407faf:	add    al,ah
  407fb1:	inc    edx
  407fb2:	inc    eax
  407fb3:	add    ah,ah
  407fb5:	inc    edx
  407fb6:	inc    eax
  407fb7:	add    al,bl
  407fb9:	inc    edx
  407fba:	inc    eax
  407fbb:	add    BYTE PTR [eax],bh
  407fbd:	inc    eax
  407fbe:	inc    eax
  407fbf:	add    BYTE PTR [eax+eax*2+0x40],dl
  407fc3:	add    BYTE PTR [eax+0xe004040],dl
  407fc9:	inc    ebp
  407fca:	inc    ecx
  407fcb:	bound  esi,QWORD PTR [ebx+0x74]
  407fce:	jb     0x408031
  407fd0:	arpl   WORD PTR [ebp+eax*2+0x72],si
  407fd4:	jb     0x408045
  407fd6:	jb     0x407f68
  407fd8:	and    al,0x80
  407fda:	inc    eax
	...
  407ff7:	add    BYTE PTR [eax+eax*4],ah
  407ffa:	inc    eax
  407ffb:	add    BYTE PTR [eax+eax*1],cl
  407ffe:	add    BYTE PTR [eax],al
  408000:	hlt    
  408001:	jbe    0x408043
  408003:	add    al,dl
  408005:	inc    edx
  408006:	inc    eax
  408007:	add    ah,bl
  408009:	inc    edx
  40800a:	inc    eax
  40800b:	add    al,ah
  40800d:	inc    edx
  40800e:	inc    eax
  40800f:	add    ah,ah
  408011:	inc    edx
  408012:	inc    eax
  408013:	add    al,bl
  408015:	inc    edx
  408016:	inc    eax
  408017:	add    BYTE PTR [eax],bh
  408019:	inc    eax
  40801a:	inc    eax
  40801b:	add    BYTE PTR [eax+eax*2+0x40],dl
  40801f:	add    BYTE PTR [eax+0xe004040],dl
  408025:	inc    ebp
  408026:	dec    ecx
  408027:	outs   dx,BYTE PTR ds:[esi]
  408028:	je     0x408090
  40802a:	inc    ebx
  40802b:	popa   
  40802c:	jae    0x4080a2
  40802e:	inc    ebp
  40802f:	jb     0x4080a3
  408031:	outs   dx,DWORD PTR ds:[esi]
  408032:	jb     0x407fc4
  408034:	add    BYTE PTR [eax+0x40],0x0
	...
  408053:	add    BYTE PTR [eax+0x10004080],al
  408059:	add    BYTE PTR [eax],al
  40805b:	add    ah,dh
  40805d:	jbe    0x40809f
  40805f:	add    al,dl
  408061:	inc    edx
  408062:	inc    eax
  408063:	add    ah,bl
  408065:	inc    edx
  408066:	inc    eax
  408067:	add    al,ah
  408069:	inc    edx
  40806a:	inc    eax
  40806b:	add    ah,ah
  40806d:	inc    edx
  40806e:	inc    eax
  40806f:	add    al,bl
  408071:	inc    edx
  408072:	inc    eax
  408073:	add    BYTE PTR [eax],bh
  408075:	inc    eax
  408076:	inc    eax
  408077:	add    BYTE PTR [eax+eax*2+0x40],dl
  40807b:	add    BYTE PTR [eax+0x8004040],dl
  408081:	inc    ebp
  408082:	dec    edi
  408083:	push   ebx
  408084:	inc    ebp
  408085:	jb     0x4080f9
  408087:	outs   dx,DWORD PTR ds:[esi]
  408088:	jb     0x408017
  40808a:	inc    eax
  40808b:	add    al,bl
  40808d:	add    BYTE PTR [eax+0x0],0x0
	...
  4080a9:	add    BYTE PTR [eax],al
  4080ab:	add    al,bl
  4080ad:	add    BYTE PTR [eax+0x0],0xc
  4080b1:	add    BYTE PTR [eax],al
  4080b3:	add    ah,dh
  4080b5:	jbe    0x4080f7
  4080b7:	add    al,dl
  4080b9:	inc    edx
  4080ba:	inc    eax
  4080bb:	add    ah,bl
  4080bd:	inc    edx
  4080be:	inc    eax
  4080bf:	add    al,ah
  4080c1:	inc    edx
  4080c2:	inc    eax
  4080c3:	add    ah,ah
  4080c5:	inc    edx
  4080c6:	inc    eax
  4080c7:	add    al,bl
  4080c9:	inc    edx
  4080ca:	inc    eax
  4080cb:	add    BYTE PTR [eax],bh
  4080cd:	inc    eax
  4080ce:	inc    eax
  4080cf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4080d3:	add    BYTE PTR [eax+0x12004040],dl
  4080d9:	inc    ebp
  4080da:	push   ebx
  4080db:	popa   
  4080dc:	data16 arpl WORD PTR gs:[ecx+0x6c],sp
  4080e1:	ins    BYTE PTR es:[edi],dx
  4080e2:	inc    ebp
  4080e3:	js     0x408148
  4080e5:	gs jo  0x40815c
  4080e8:	imul   ebp,DWORD PTR [edi+0x6e],0x4080f090
  4080ef:	add    BYTE PTR ds:0x34322e03,cl
  4080f5:	xor    BYTE PTR [eax],al
  4080f7:	add    BYTE PTR [eax],al
  4080f9:	or     al,0x0
  4080fb:	add    BYTE PTR [eax],al
  4080fd:	test   BYTE PTR [eax],dl
  4080ff:	inc    eax
  408100:	add    BYTE PTR [ebp-0x7ef7ffc0],cl
  408106:	inc    eax
  408107:	add    BYTE PTR ds:0x34332e03,cl
  40810d:	xor    BYTE PTR [eax],al
  40810f:	add    BYTE PTR [eax],al
  408111:	or     al,0x0
  408113:	add    BYTE PTR [eax],al
  408115:	test   BYTE PTR [eax],dl
  408117:	inc    eax
  408118:	add    BYTE PTR [ebp-0x7edfffc0],cl
  40811e:	inc    eax
  40811f:	add    BYTE PTR ds:0x34342e03,cl
  408125:	sbb    al,0x0
  408127:	add    BYTE PTR [eax],al
  408129:	pop    es
  40812a:	add    BYTE PTR [eax],al
  40812c:	add    BYTE PTR [eax+edx*1+0x408d0040],al
  408133:	add    BYTE PTR [eax],bh
  408135:	add    DWORD PTR [eax+0x0],0x352e030d
  40813c:	xor    al,0x1c
  40813e:	add    BYTE PTR [eax],al
  408140:	add    BYTE PTR [edi],al
  408142:	add    BYTE PTR [eax],al
  408144:	add    BYTE PTR [eax+edx*1+0x408d0040],al
  40814b:	add    BYTE PTR [eax-0x7f],dl
  40814e:	inc    eax
  40814f:	add    BYTE PTR [esi],cl
  408151:	andps  xmm0,XMMWORD PTR [esi+0x6f]
  408155:	jb     0x4081c4
  408157:	popa   
  408158:	je     0x4081ad
  40815a:	gs je  0x4081d1
  40815d:	imul   ebp,DWORD PTR [esi+0x67],0xc073
  408164:	add    BYTE PTR [ebx],cl
  408166:	add    BYTE PTR [eax],al
  408168:	add    BYTE PTR [eax+edx*1+0x80040],al
  40816f:	add    BYTE PTR [eax],al
  408171:	test   BYTE PTR [eax],dl
  408173:	inc    eax
  408174:	add    BYTE PTR [eax+eax*1],cl
  408177:	add    BYTE PTR [eax],al
  408179:	test   BYTE PTR [eax],dl
  40817b:	inc    eax
  40817c:	add    BYTE PTR [eax],dl
  40817e:	add    BYTE PTR [eax],al
  408180:	add    BYTE PTR [eax+edx*1+0x140040],al
  408187:	add    BYTE PTR [eax],al
  408189:	test   BYTE PTR [eax],dl
  40818b:	inc    eax
  40818c:	add    BYTE PTR [eax],bl
  40818e:	add    BYTE PTR [eax],al
  408190:	add    BYTE PTR [eax+edx*1+0x1c0040],al
  408197:	add    BYTE PTR [eax],al
  408199:	test   BYTE PTR [eax],dl
  40819b:	inc    eax
  40819c:	add    BYTE PTR [eax],ah
  40819e:	add    BYTE PTR [eax],al
  4081a0:	add    ah,ch
  4081a2:	add    BYTE PTR [eax+0x0],0x24
  4081a6:	add    BYTE PTR [eax],al
  4081a8:	add    BYTE PTR [ecx+eax*4],al
  4081ab:	inc    eax
  4081ac:	add    BYTE PTR [eax+eax*1+0x0],dl
  4081b0:	add    BYTE PTR [ecx+eax*4],bl
  4081b3:	inc    eax
  4081b4:	add    BYTE PTR [eax+eax*1-0x7ecc0000],al
  4081bb:	inc    eax
  4081bc:	add    BYTE PTR [eax-0x73000000],ah
  4081c2:	inc    eax
  4081c3:	add    al,cl
  4081c5:	add    DWORD PTR [eax+0x0],0x372e0311
  4081cc:	xor    al,0x4
  4081ce:	add    BYTE PTR [eax],al
  4081d0:	add    BYTE PTR [eax+edx*1+0x480040],al
  4081d7:	add    BYTE PTR [eax],al
  4081d9:	test   BYTE PTR [eax],dl
  4081db:	inc    eax
  4081dc:	add    BYTE PTR [eax],cl
  4081de:	push   ebx
  4081df:	jns    0x408254
  4081e1:	push   ebp
  4081e2:	je     0x40824d
  4081e4:	ins    BYTE PTR es:[edi],dx
  4081e5:	jae    0x408172
  4081e7:	shr    ah,0x81
  4081ea:	inc    eax
  4081eb:	add    BYTE PTR [ecx],dl
  4081ed:	add    ebp,DWORD PTR [esi]
  4081ef:	cmp    BYTE PTR [esp+eax*1],dh
  4081f2:	add    BYTE PTR [eax],al
  4081f4:	add    BYTE PTR [eax+edx*1+0x480040],al
  4081fb:	add    BYTE PTR [eax],al
  4081fd:	test   BYTE PTR [eax],dl
  4081ff:	inc    eax
  408200:	add    BYTE PTR [eax],cl
  408202:	push   ebx
  408203:	jns    0x408278
  408205:	push   ebp
  408206:	je     0x408271
  408208:	ins    BYTE PTR es:[edi],dx
  408209:	jae    0x408196
  40820b:	sar    bh,0xff
  40820e:	(bad)  
  40820f:	inc    DWORD PTR [ecx]
  408211:	add    BYTE PTR [eax],al
  408213:	add    BYTE PTR [eax+eax*1],ah
  408216:	add    BYTE PTR [eax],al
  408218:	add    BYTE PTR fs:[eax+0x0],0x0
	...
  408235:	add    BYTE PTR [eax],al
  408237:	add    BYTE PTR [edx+eax*4+0x40],ah
  40823b:	add    BYTE PTR [eax+eax*1+0x0],al
  40823f:	add    BYTE PTR [eax-0x2fffbff0],dl
  408245:	inc    edx
  408246:	inc    eax
  408247:	add    ah,bl
  408249:	inc    edx
  40824a:	inc    eax
  40824b:	add    al,ah
  40824d:	inc    edx
  40824e:	inc    eax
  40824f:	add    ah,ah
  408251:	inc    edx
  408252:	inc    eax
  408253:	add    al,bl
  408255:	inc    edx
  408256:	inc    eax
  408257:	add    BYTE PTR [eax],bh
  408259:	inc    eax
  40825a:	inc    eax
  40825b:	add    BYTE PTR [eax+eax*2+0x40],dl
  40825f:	add    BYTE PTR [eax],bl
  408261:	fild   WORD PTR [eax+0x0]
  408264:	adc    edx,DWORD PTR [esp+edx*2+0x68]
  408268:	jb     0x4082cf
  40826a:	popa   
  40826b:	fs dec esp
  40826d:	outs   dx,DWORD PTR ds:[esi]
  40826e:	arpl   WORD PTR [ecx+0x6c],sp
  408271:	inc    ebx
  408272:	outs   dx,DWORD PTR ds:[esi]
  408273:	jne    0x4082e3
  408275:	je     0x4082dc
  408277:	jb     0x408245
  408279:	add    eax,0xffffffd4
  40827c:	jmp    0x40e254
  408281:	add    eax,0xffffffd4
  408284:	jmp    0x40e2c4
  408289:	add    eax,0xffffffd4
  40828c:	jmp    0x40e158
  408291:	add    eax,0xffffffd4
  408294:	jmp    0x40e204
  408299:	add    DWORD PTR [esp+0x4],0xffffffd4
  40829e:	jmp    0x406b14
  4082a3:	add    DWORD PTR [esp+0x4],0xffffffd4
  4082a8:	jmp    0x406b3c
  4082ad:	add    DWORD PTR [esp+0x4],0xffffffd4
  4082b2:	jmp    0x406b50
  4082b7:	int3   
  4082b8:	cdq    
  4082b9:	add    BYTE PTR [eax+0x0],0xa3
  4082bd:	add    BYTE PTR [eax+0x0],0xad
  4082c1:	add    BYTE PTR [eax+0x0],0x79
  4082c5:	add    BYTE PTR [eax+0x0],0x81
  4082c9:	add    BYTE PTR [eax+0x0],0x89
  4082cd:	add    BYTE PTR [eax+0x0],0x91
  4082d1:	add    BYTE PTR [eax+0x0],0x1
  4082d5:	add    BYTE PTR [eax],al
  4082d7:	add    BYTE PTR [edx-0x74],dl
  4082da:	adc    BYTE PTR [ebx-0x71],bh
  4082dd:	sbb    eax,0xdf9c4cdb
  4082e2:	push   edi
  4082e3:	loopne 0x408356
  4082e5:	sbb    DWORD PTR ds:0x4082b83f,edi
  4082eb:	add    BYTE PTR [eax+eax*1],ch
  4082ee:	add    BYTE PTR [eax],al
  4082f0:	add    BYTE PTR [eax],al
  4082f2:	add    BYTE PTR [eax],al
  4082f4:	inc    eax
  4082f5:	add    DWORD PTR [eax+0x0],0xffffffd4
  4082f9:	add    BYTE PTR [eax+0x0],0x0
	...
  408311:	add    BYTE PTR [eax],al
  408313:	add    BYTE PTR [eax-0x7d],al
  408316:	inc    eax
  408317:	add    BYTE PTR [eax],dh
  408319:	add    BYTE PTR [eax],al
  40831b:	add    BYTE PTR [ecx+edx*1+0x42d00040],al
  408322:	inc    eax
  408323:	add    al,ch
  408325:	push   0x40
  408327:	add    ah,dh
  408329:	push   0x40
  40832b:	add    ah,ah
  40832d:	inc    edx
  40832e:	inc    eax
  40832f:	add    al,bl
  408331:	inc    edx
  408332:	inc    eax
  408333:	add    BYTE PTR [ebx+ebp*2],al
  408336:	inc    eax
  408337:	add    BYTE PTR [eax+eax*2+0x40],dl
  40833b:	add    ah,cl
  40833d:	loopne 0x40837f
  40833f:	add    BYTE PTR [esp+edx*2],ah
  408342:	dec    ebp
  408343:	jne    0x4083b1
  408345:	je     0x4083b0
  408347:	push   edx
  408348:	gs popa 
  40834a:	fs inc ebp
  40834c:	js     0x4083b1
  40834e:	ins    BYTE PTR es:[edi],dx
  40834f:	jne    0x4083c4
  408351:	imul   esi,DWORD PTR [esi+0x65],0x74697257
  408358:	gs push ebx
  40835a:	jns    0x4083ca
  40835c:	arpl   WORD PTR [eax+0x72],bp
  40835f:	outs   dx,DWORD PTR ds:[esi]
  408360:	outs   dx,BYTE PTR ds:[esi]
  408361:	imul   edi,DWORD PTR [edx+0x65],0x408d72
  408368:	push   ebp
  408369:	mov    ebp,esp
  40836b:	push   ebx
  40836c:	mov    ebx,edx
  40836e:	mov    edx,eax
  408370:	shr    edx,0x10
  408373:	div    bx
  408376:	mov    ebx,DWORD PTR [ebp+0x8]
  408379:	mov    WORD PTR [ecx],ax
  40837c:	mov    WORD PTR [ebx],dx
  40837f:	pop    ebx
  408380:	pop    ebp
  408381:	ret    0x4
  408384:	push   ebx
  408385:	mov    ebx,eax
  408387:	mov    ecx,ebx
  408389:	mov    dl,0x1
  40838b:	mov    eax,ds:0x407cf8
  408390:	call   0x40c970
  408395:	call   0x4048fc
  40839a:	pop    ebx
  40839b:	ret    
  40839c:	push   ebx
  40839d:	push   esi
  40839e:	push   edi
  40839f:	mov    edi,ecx
  4083a1:	mov    esi,edx
  4083a3:	mov    ebx,eax
  4083a5:	push   esi
  4083a6:	push   edi
  4083a7:	mov    ecx,ebx
  4083a9:	mov    dl,0x1
  4083ab:	mov    eax,ds:0x407cf8
  4083b0:	call   0x40c9ac
  4083b5:	call   0x4048fc
  4083ba:	pop    edi
  4083bb:	pop    esi
  4083bc:	pop    ebx
  4083bd:	ret    
  4083be:	mov    eax,eax
  4083c0:	push   ebx
  4083c1:	push   edi
  4083c2:	push   esi
  4083c3:	test   eax,eax
  4083c5:	mov    esi,eax
  4083c7:	mov    edi,edx
  4083c9:	mov    eax,edx
  4083cb:	je     0x40840e
  4083cd:	mov    edx,DWORD PTR [esi-0x4]
  4083d0:	test   edx,edx
  4083d2:	je     0x40840e
  4083d4:	mov    ebx,edx
  4083d6:	call   0x4056a8
  4083db:	mov    edi,DWORD PTR [edi]
  4083dd:	mov    eax,DWORD PTR [ebx+esi*1-0x4]
  4083e1:	mov    ecx,eax
  4083e3:	or     eax,0x80808080
  4083e8:	mov    edx,eax
  4083ea:	sub    eax,0x7b7b7b7b
  4083ef:	xor    edx,ecx
  4083f1:	or     eax,0x80808080
  4083f6:	sub    eax,0x66666666
  4083fb:	and    eax,edx
  4083fd:	shr    eax,0x2
  408400:	sub    ecx,eax
  408402:	mov    DWORD PTR [ebx+edi*1-0x4],ecx
  408406:	sub    ebx,0x1
  408409:	and    ebx,0xfffffffc
  40840c:	jmp    0x40843d
  40840e:	pop    esi
  40840f:	pop    edi
  408410:	pop    ebx
  408411:	jmp    0x404f88
  408416:	mov    eax,DWORD PTR [ebx+esi*1]
  408419:	mov    ecx,eax
  40841b:	or     eax,0x80808080
  408420:	mov    edx,eax
  408422:	sub    eax,0x7b7b7b7b
  408427:	xor    edx,ecx
  408429:	or     eax,0x80808080
  40842e:	sub    eax,0x66666666
  408433:	and    eax,edx
  408435:	shr    eax,0x2
  408438:	sub    ecx,eax
  40843a:	mov    DWORD PTR [ebx+edi*1],ecx
  40843d:	sub    ebx,0x4
  408440:	jae    0x408416
  408442:	pop    esi
  408443:	pop    edi
  408444:	pop    ebx
  408445:	ret    
  408446:	mov    eax,eax
  408448:	push   ebx
  408449:	push   edi
  40844a:	push   esi
  40844b:	test   eax,eax
  40844d:	mov    esi,eax
  40844f:	mov    edi,edx
  408451:	mov    eax,edx
  408453:	je     0x408496
  408455:	mov    edx,DWORD PTR [esi-0x4]
  408458:	test   edx,edx
  40845a:	je     0x408496
  40845c:	mov    ebx,edx
  40845e:	call   0x4056a8
  408463:	mov    edi,DWORD PTR [edi]
  408465:	mov    eax,DWORD PTR [ebx+esi*1-0x4]
  408469:	mov    ecx,eax
  40846b:	or     eax,0x80808080
  408470:	mov    edx,eax
  408472:	sub    eax,0x5b5b5b5b
  408477:	xor    edx,ecx
  408479:	or     eax,0x80808080
  40847e:	sub    eax,0x66666666
  408483:	and    eax,edx
  408485:	shr    eax,0x2
  408488:	add    ecx,eax
  40848a:	mov    DWORD PTR [ebx+edi*1-0x4],ecx
  40848e:	sub    ebx,0x1
  408491:	and    ebx,0xfffffffc
  408494:	jmp    0x4084c5
  408496:	pop    esi
  408497:	pop    edi
  408498:	pop    ebx
  408499:	jmp    0x404f88
  40849e:	mov    eax,DWORD PTR [ebx+esi*1]
  4084a1:	mov    ecx,eax
  4084a3:	or     eax,0x80808080
  4084a8:	mov    edx,eax
  4084aa:	sub    eax,0x5b5b5b5b
  4084af:	xor    edx,ecx
  4084b1:	or     eax,0x80808080
  4084b6:	sub    eax,0x66666666
  4084bb:	and    eax,edx
  4084bd:	shr    eax,0x2
  4084c0:	add    ecx,eax
  4084c2:	mov    DWORD PTR [ebx+edi*1],ecx
  4084c5:	sub    ebx,0x4
  4084c8:	jae    0x40849e
  4084ca:	pop    esi
  4084cb:	pop    edi
  4084cc:	pop    ebx
  4084cd:	ret    
  4084ce:	mov    eax,eax
  4084d0:	cmp    eax,edx
  4084d2:	je     0x408522
  4084d4:	test   eax,edx
  4084d6:	je     0x408525
  4084d8:	movzx  ecx,BYTE PTR [edx]
  4084db:	cmp    cl,BYTE PTR [eax]
  4084dd:	je     0x4084e5
  4084df:	movzx  eax,BYTE PTR [eax]
  4084e2:	sub    eax,ecx
  4084e4:	ret    
  4084e5:	push   ebx
  4084e6:	mov    ebx,DWORD PTR [eax-0x4]
  4084e9:	xor    ecx,ecx
  4084eb:	sub    ebx,DWORD PTR [edx-0x4]
  4084ee:	push   ebx
  4084ef:	adc    ecx,0xffffffff
  4084f2:	and    ecx,ebx
  4084f4:	sub    ecx,DWORD PTR [eax-0x4]
  4084f7:	sub    eax,ecx
  4084f9:	sub    edx,ecx
  4084fb:	mov    ebx,DWORD PTR [ecx+eax*1]
  4084fe:	xor    ebx,DWORD PTR [ecx+edx*1]
  408501:	jne    0x40850b
  408503:	add    ecx,0x4
  408506:	js     0x4084fb
  408508:	pop    eax
  408509:	pop    ebx
  40850a:	ret    
  40850b:	bsf    ebx,ebx
  40850e:	shr    ebx,0x3
  408511:	add    ecx,ebx
  408513:	jns    0x408508
  408515:	movzx  eax,BYTE PTR [ecx+eax*1]
  408519:	movzx  edx,BYTE PTR [ecx+edx*1]
  40851d:	sub    eax,edx
  40851f:	pop    ebx
  408520:	pop    ebx
  408521:	ret    
  408522:	xor    eax,eax
  408524:	ret    
  408525:	test   eax,eax
  408527:	je     0x408531
  408529:	test   edx,edx
  40852b:	jne    0x4084d8
  40852d:	mov    eax,DWORD PTR [eax-0x4]
  408530:	ret    
  408531:	sub    eax,DWORD PTR [edx-0x4]
  408534:	ret    
  408535:	lea    eax,[eax+0x0]
  408538:	add    eax,ecx
  40853a:	add    edx,ecx
  40853c:	xor    ecx,0xffffffff
  40853f:	add    eax,0xfffffff8
  408542:	add    edx,0xfffffff8
  408545:	add    ecx,0x9
  408548:	push   ebx
  408549:	jg     0x40858e
  40854b:	mov    ebx,DWORD PTR [ecx+eax*1]
  40854e:	cmp    ebx,DWORD PTR [ecx+edx*1]
  408551:	jne    0x4085c5
  408553:	lea    ebx,[ecx+eax*1]
  408556:	add    ecx,0x4
  408559:	and    ebx,0x3
  40855c:	sub    ecx,ebx
  40855e:	jg     0x40858e
  408560:	mov    ebx,DWORD PTR [ecx+eax*1]
  408563:	cmp    ebx,DWORD PTR [ecx+edx*1]
  408566:	jne    0x4085c5
  408568:	mov    ebx,DWORD PTR [ecx+eax*1+0x4]
  40856c:	cmp    ebx,DWORD PTR [ecx+edx*1+0x4]
  408570:	jne    0x4085c5
  408572:	add    ecx,0x8
  408575:	jg     0x40858e
  408577:	mov    ebx,DWORD PTR [ecx+eax*1]
  40857a:	cmp    ebx,DWORD PTR [ecx+edx*1]
  40857d:	jne    0x4085c5
  40857f:	mov    ebx,DWORD PTR [ecx+eax*1+0x4]
  408583:	cmp    ebx,DWORD PTR [ecx+edx*1+0x4]
  408587:	jne    0x4085c5
  408589:	add    ecx,0x8
  40858c:	jle    0x408560
  40858e:	cmp    ecx,0x4
  408591:	jg     0x40859e
  408593:	mov    ebx,DWORD PTR [ecx+eax*1]
  408596:	cmp    ebx,DWORD PTR [ecx+edx*1]
  408599:	jne    0x4085c5
  40859b:	add    ecx,0x4
  40859e:	cmp    ecx,0x6
  4085a1:	jg     0x4085b0
  4085a3:	movzx  ebx,WORD PTR [ecx+eax*1]
  4085a7:	cmp    bx,WORD PTR [ecx+edx*1]
  4085ab:	jne    0x4085c5
  4085ad:	add    ecx,0x2
  4085b0:	cmp    ecx,0x7
  4085b3:	jg     0x4085be
  4085b5:	movzx  ebx,BYTE PTR [eax+0x7]
  4085b9:	cmp    bl,BYTE PTR [edx+0x7]
  4085bc:	jne    0x4085c5
  4085be:	mov    eax,0x1
  4085c3:	pop    ebx
  4085c4:	ret    
  4085c5:	xor    eax,eax
  4085c7:	pop    ebx
  4085c8:	ret    
  4085c9:	lea    eax,[eax+0x0]
  4085cc:	test   eax,eax
  4085ce:	jne    0x4085da
  4085d0:	test   edx,edx
  4085d2:	je     0x4085d9
  4085d4:	mov    eax,DWORD PTR [edx-0x4]
  4085d7:	neg    eax
  4085d9:	ret    
  4085da:	test   edx,edx
  4085dc:	jne    0x4085e2
  4085de:	mov    eax,DWORD PTR [eax-0x4]
  4085e1:	ret    
  4085e2:	push   ebx
  4085e3:	push   ebp
  4085e4:	push   esi
  4085e5:	mov    ebp,DWORD PTR [eax-0x4]
  4085e8:	mov    ebx,DWORD PTR [edx-0x4]
  4085eb:	sub    ebp,ebx
  4085ed:	sbb    ecx,ecx
  4085ef:	and    ecx,ebp
  4085f1:	add    ecx,ebx
  4085f3:	lea    esi,[ecx+eax*1]
  4085f6:	add    edx,ecx
  4085f8:	neg    ecx
  4085fa:	je     0x40865f
  4085fc:	movzx  eax,WORD PTR [ecx+esi*1]
  408600:	movzx  ebx,WORD PTR [ecx+edx*1]
  408604:	cmp    eax,ebx
  408606:	je     0x40865a
  408608:	cmp    al,bl
  40860a:	je     0x408638
  40860c:	mov    ah,0x0
  40860e:	mov    bh,0x0
  408610:	cmp    al,0x61
  408612:	jl     0x40861b
  408614:	cmp    al,0x7a
  408616:	jg     0x40861b
  408618:	sub    eax,0x20
  40861b:	cmp    bl,0x61
  40861e:	jl     0x408628
  408620:	cmp    bl,0x7a
  408623:	jg     0x408628
  408625:	sub    ebx,0x20
  408628:	sub    eax,ebx
  40862a:	jne    0x408661
  40862c:	movzx  eax,WORD PTR [ecx+esi*1]
  408630:	movzx  ebx,WORD PTR [ecx+edx*1]
  408634:	cmp    ah,bh
  408636:	je     0x40865a
  408638:	shr    eax,0x8
  40863b:	shr    ebx,0x8
  40863e:	cmp    al,0x61
  408640:	jl     0x408649
  408642:	cmp    al,0x7a
  408644:	jg     0x408649
  408646:	sub    eax,0x20
  408649:	cmp    bl,0x61
  40864c:	jl     0x408656
  40864e:	cmp    bl,0x7a
  408651:	jg     0x408656
  408653:	sub    ebx,0x20
  408656:	sub    eax,ebx
  408658:	jne    0x408661
  40865a:	add    ecx,0x2
  40865d:	jl     0x4085fc
  40865f:	mov    eax,ebp
  408661:	pop    esi
  408662:	pop    ebp
  408663:	pop    ebx
  408664:	ret    
  408665:	lea    eax,[eax+0x0]
  408668:	cmp    eax,edx
  40866a:	je     0x408685
  40866c:	or     eax,eax
  40866e:	je     0x408687
  408670:	or     edx,edx
  408672:	je     0x408688
  408674:	mov    ecx,DWORD PTR [eax-0x4]
  408677:	cmp    ecx,DWORD PTR [edx-0x4]
  40867a:	jne    0x408688
  40867c:	call   0x4085cc
  408681:	test   eax,eax
  408683:	jne    0x408688
  408685:	mov    al,0x1
  408687:	ret    
  408688:	xor    eax,eax
  40868a:	ret    
  40868b:	nop
  40868c:	push   ebx
  40868d:	push   esi
  40868e:	push   edi
  40868f:	mov    edi,edx
  408691:	mov    esi,eax
  408693:	mov    eax,esi
  408695:	test   eax,eax
  408697:	je     0x40869e
  408699:	sub    eax,0x4
  40869c:	mov    eax,DWORD PTR [eax]
  40869e:	mov    ebx,eax
  4086a0:	mov    eax,esi
  4086a2:	call   0x405418
  4086a7:	mov    edx,eax
  4086a9:	mov    eax,edi
  4086ab:	mov    ecx,ebx
  4086ad:	call   0x405078
  4086b2:	test   ebx,ebx
  4086b4:	jle    0x4086bf
  4086b6:	push   ebx
  4086b7:	mov    eax,DWORD PTR [edi]
  4086b9:	push   eax
  4086ba:	call   0x407338
  4086bf:	pop    edi
  4086c0:	pop    esi
  4086c1:	pop    ebx
  4086c2:	ret    
  4086c3:	nop
  4086c4:	push   ebx
  4086c5:	push   esi
  4086c6:	push   edi
  4086c7:	push   ebp
  4086c8:	mov    ebp,edx
  4086ca:	mov    edi,eax
  4086cc:	mov    ebx,edi
  4086ce:	test   ebx,ebx
  4086d0:	je     0x4086d7
  4086d2:	sub    ebx,0x4
  4086d5:	mov    ebx,DWORD PTR [ebx]
  4086d7:	mov    esi,ebp
  4086d9:	test   esi,esi
  4086db:	je     0x4086e2
  4086dd:	sub    esi,0x4
  4086e0:	mov    esi,DWORD PTR [esi]
  4086e2:	push   esi
  4086e3:	mov    eax,ebp
  4086e5:	call   0x405418
  4086ea:	push   eax
  4086eb:	push   ebx
  4086ec:	mov    eax,edi
  4086ee:	call   0x405418
  4086f3:	push   eax
  4086f4:	push   0x1
  4086f6:	push   0x400
  4086fb:	call   0x407148
  408700:	sub    eax,0x2
  408703:	pop    ebp
  408704:	pop    edi
  408705:	pop    esi
  408706:	pop    ebx
  408707:	ret    
  408708:	push   ebx
  408709:	push   esi
  40870a:	push   edi
  40870b:	push   ebp
  40870c:	mov    ebp,edx
  40870e:	mov    edi,eax
  408710:	mov    eax,edi
  408712:	test   eax,eax
  408714:	je     0x40871b
  408716:	sub    eax,0x4
  408719:	mov    eax,DWORD PTR [eax]
  40871b:	mov    esi,eax
  40871d:	mov    ebx,0x1
  408722:	jmp    0x408725
  408724:	inc    ebx
  408725:	cmp    esi,ebx
  408727:	jl     0x408730
  408729:	cmp    BYTE PTR [edi+ebx*1-0x1],0x20
  40872e:	jbe    0x408724
  408730:	cmp    esi,ebx
  408732:	jge    0x40873e
  408734:	mov    eax,ebp
  408736:	call   0x404f88
  40873b:	jmp    0x408754
  40873d:	dec    esi
  40873e:	cmp    BYTE PTR [edi+esi*1-0x1],0x20
  408743:	jbe    0x40873d
  408745:	push   ebp
  408746:	mov    ecx,esi
  408748:	sub    ecx,ebx
  40874a:	inc    ecx
  40874b:	mov    edx,ebx
  40874d:	mov    eax,edi
  40874f:	call   0x405480
  408754:	pop    ebp
  408755:	pop    edi
  408756:	pop    esi
  408757:	pop    ebx
  408758:	ret    
  408759:	lea    eax,[eax+0x0]
  40875c:	push   ebx
  40875d:	push   esi
  40875e:	push   edi
  40875f:	mov    edi,edx
  408761:	mov    esi,eax
  408763:	mov    eax,esi
  408765:	test   eax,eax
  408767:	je     0x40876e
  408769:	sub    eax,0x4
  40876c:	mov    eax,DWORD PTR [eax]
  40876e:	mov    ebx,0x1
  408773:	jmp    0x408776
  408775:	inc    ebx
  408776:	cmp    eax,ebx
  408778:	jl     0x408781
  40877a:	cmp    BYTE PTR [esi+ebx*1-0x1],0x20
  40877f:	jbe    0x408775
  408781:	push   edi
  408782:	mov    ecx,0x7fffffff
  408787:	mov    edx,ebx
  408789:	mov    eax,esi
  40878b:	call   0x405480
  408790:	pop    edi
  408791:	pop    esi
  408792:	pop    ebx
  408793:	ret    
  408794:	push   ebx
  408795:	push   esi
  408796:	push   edi
  408797:	mov    edi,edx
  408799:	mov    esi,eax
  40879b:	mov    eax,esi
  40879d:	test   eax,eax
  40879f:	je     0x4087a6
  4087a1:	sub    eax,0x4
  4087a4:	mov    eax,DWORD PTR [eax]
  4087a6:	mov    ebx,eax
  4087a8:	jmp    0x4087ab
  4087aa:	dec    ebx
  4087ab:	test   ebx,ebx
  4087ad:	jle    0x4087b6
  4087af:	cmp    BYTE PTR [esi+ebx*1-0x1],0x20
  4087b4:	jbe    0x4087aa
  4087b6:	push   edi
  4087b7:	mov    ecx,ebx
  4087b9:	mov    edx,0x1
  4087be:	mov    eax,esi
  4087c0:	call   0x405480
  4087c5:	pop    edi
  4087c6:	pop    esi
  4087c7:	pop    ebx
  4087c8:	ret    
  4087c9:	lea    eax,[eax+0x0]
  4087cc:	push   ebx
  4087cd:	push   esi
  4087ce:	push   edi
  4087cf:	push   ebp
  4087d0:	push   ecx
  4087d1:	mov    DWORD PTR [esp],ecx
  4087d4:	mov    ebx,edx
  4087d6:	mov    edi,eax
  4087d8:	mov    eax,DWORD PTR [esp]
  4087db:	call   0x404f88
  4087e0:	cmp    DWORD PTR [edi],0x0
  4087e3:	je     0x4088cd
  4087e9:	mov    eax,DWORD PTR [edi]
  4087eb:	cmp    bl,BYTE PTR [eax]
  4087ed:	jne    0x4088cd
  4087f3:	inc    DWORD PTR [edi]
  4087f5:	mov    ebp,0x1
  4087fa:	mov    esi,DWORD PTR [edi]
  4087fc:	mov    eax,DWORD PTR [edi]
  4087fe:	mov    edx,ebx
  408800:	call   0x40d5ec
  408805:	mov    DWORD PTR [edi],eax
  408807:	jmp    0x40881f
  408809:	inc    DWORD PTR [edi]
  40880b:	mov    eax,DWORD PTR [edi]
  40880d:	cmp    bl,BYTE PTR [eax]
  40880f:	jne    0x408824
  408811:	inc    DWORD PTR [edi]
  408813:	inc    ebp
  408814:	mov    eax,DWORD PTR [edi]
  408816:	mov    edx,ebx
  408818:	call   0x40d5ec
  40881d:	mov    DWORD PTR [edi],eax
  40881f:	cmp    DWORD PTR [edi],0x0
  408822:	jne    0x408809
  408824:	cmp    DWORD PTR [edi],0x0
  408827:	jne    0x408832
  408829:	mov    eax,esi
  40882b:	call   0x4091d4
  408830:	mov    DWORD PTR [edi],eax
  408832:	mov    eax,DWORD PTR [edi]
  408834:	sub    eax,esi
  408836:	cmp    eax,0x1
  408839:	jle    0x4088cd
  40883f:	mov    edx,eax
  408841:	sub    edx,ebp
  408843:	je     0x4088cd
  408849:	cmp    ebp,0x1
  40884c:	jne    0x40885d
  40884e:	mov    ecx,eax
  408850:	dec    ecx
  408851:	mov    eax,DWORD PTR [esp]
  408854:	mov    edx,esi
  408856:	call   0x405078
  40885b:	jmp    0x4088cd
  40885d:	mov    edx,eax
  40885f:	sub    edx,ebp
  408861:	mov    eax,DWORD PTR [esp]
  408864:	call   0x4056a8
  408869:	mov    eax,DWORD PTR [esp]
  40886c:	mov    eax,DWORD PTR [eax]
  40886e:	call   0x405418
  408873:	mov    ebp,eax
  408875:	mov    edx,ebx
  408877:	mov    eax,esi
  408879:	call   0x40d5ec
  40887e:	mov    DWORD PTR [edi],eax
  408880:	jmp    0x4088ac
  408882:	inc    DWORD PTR [edi]
  408884:	mov    eax,DWORD PTR [edi]
  408886:	cmp    bl,BYTE PTR [eax]
  408888:	jne    0x4088b1
  40888a:	mov    ecx,DWORD PTR [edi]
  40888c:	sub    ecx,esi
  40888e:	mov    edx,ebp
  408890:	mov    eax,esi
  408892:	call   0x403090
  408897:	mov    eax,DWORD PTR [edi]
  408899:	sub    eax,esi
  40889b:	add    ebp,eax
  40889d:	inc    DWORD PTR [edi]
  40889f:	mov    esi,DWORD PTR [edi]
  4088a1:	mov    eax,DWORD PTR [edi]
  4088a3:	mov    edx,ebx
  4088a5:	call   0x40d5ec
  4088aa:	mov    DWORD PTR [edi],eax
  4088ac:	cmp    DWORD PTR [edi],0x0
  4088af:	jne    0x408882
  4088b1:	cmp    DWORD PTR [edi],0x0
  4088b4:	jne    0x4088bf
  4088b6:	mov    eax,esi
  4088b8:	call   0x4091d4
  4088bd:	mov    DWORD PTR [edi],eax
  4088bf:	mov    ecx,DWORD PTR [edi]
  4088c1:	sub    ecx,esi
  4088c3:	dec    ecx
  4088c4:	mov    edx,ebp
  4088c6:	mov    eax,esi
  4088c8:	call   0x403090
  4088cd:	pop    edx
  4088ce:	pop    ebp
  4088cf:	pop    edi
  4088d0:	pop    esi
  4088d1:	pop    ebx
  4088d2:	ret    
  4088d3:	nop
  4088d4:	push   esi
  4088d5:	push   edi
  4088d6:	mov    edi,eax
  4088d8:	xor    eax,eax
  4088da:	mov    esi,edi
  4088dc:	mov    ecx,esi
  4088de:	test   ecx,ecx
  4088e0:	je     0x4088e7
  4088e2:	sub    ecx,0x4
  4088e5:	mov    ecx,DWORD PTR [ecx]
  4088e7:	test   ecx,ecx
  4088e9:	jne    0x4088ef
  4088eb:	mov    cl,0x1
  4088ed:	jmp    0x408910
  4088ef:	movzx  ecx,BYTE PTR [edi]
  4088f2:	add    cl,0xbf
  4088f5:	sub    cl,0x1a
  4088f8:	jb     0x40890b
  4088fa:	sub    cl,0x4
  4088fd:	je     0x40890b
  4088ff:	add    cl,0xfe
  408902:	sub    cl,0x1a
  408905:	jb     0x40890b
  408907:	xor    ecx,ecx
  408909:	jmp    0x40890d
  40890b:	mov    cl,0x1
  40890d:	xor    cl,0x1
  408910:	test   cl,cl
  408912:	jne    0x40899d
  408918:	test   dl,dl
  40891a:	je     0x40895f
  40891c:	mov    edx,esi
  40891e:	test   edx,edx
  408920:	je     0x408927
  408922:	sub    edx,0x4
  408925:	mov    edx,DWORD PTR [edx]
  408927:	sub    edx,0x2
  40892a:	jl     0x40899b
  40892c:	inc    edx
  40892d:	mov    esi,0x2
  408932:	movzx  ecx,BYTE PTR [edi+esi*1-0x1]
  408937:	sub    cl,0x2e
  40893a:	je     0x408959
  40893c:	add    cl,0xfe
  40893f:	sub    cl,0xa
  408942:	jb     0x408959
  408944:	add    cl,0xf9
  408947:	sub    cl,0x1a
  40894a:	jb     0x408959
  40894c:	sub    cl,0x4
  40894f:	je     0x408959
  408951:	add    cl,0xfe
  408954:	sub    cl,0x1a
  408957:	jae    0x40899d
  408959:	inc    esi
  40895a:	dec    edx
  40895b:	jne    0x408932
  40895d:	jmp    0x40899b
  40895f:	mov    edx,esi
  408961:	test   edx,edx
  408963:	je     0x40896a
  408965:	sub    edx,0x4
  408968:	mov    edx,DWORD PTR [edx]
  40896a:	sub    edx,0x2
  40896d:	jl     0x40899b
  40896f:	inc    edx
  408970:	mov    esi,0x2
  408975:	movzx  ecx,BYTE PTR [edi+esi*1-0x1]
  40897a:	add    cl,0xd0
  40897d:	sub    cl,0xa
  408980:	jb     0x408997
  408982:	add    cl,0xf9
  408985:	sub    cl,0x1a
  408988:	jb     0x408997
  40898a:	sub    cl,0x4
  40898d:	je     0x408997
  40898f:	add    cl,0xfe
  408992:	sub    cl,0x1a
  408995:	jae    0x40899d
  408997:	inc    esi
  408998:	dec    edx
  408999:	jne    0x408975
  40899b:	mov    al,0x1
  40899d:	pop    edi
  40899e:	pop    esi
  40899f:	ret    
  4089a0:	or     cl,cl
  4089a2:	jne    0x4089bb
  4089a4:	or     eax,eax
  4089a6:	jns    0x4089b6
  4089a8:	neg    eax
  4089aa:	call   0x4089b6
  4089af:	mov    al,0x2d
  4089b1:	inc    ecx
  4089b2:	dec    esi
  4089b3:	mov    BYTE PTR [esi],al
  4089b5:	ret    
  4089b6:	mov    ecx,0xa
  4089bb:	push   edx
  4089bc:	push   esi
  4089bd:	xor    edx,edx
  4089bf:	div    ecx
  4089c1:	dec    esi
  4089c2:	add    dl,0x30
  4089c5:	cmp    dl,0x3a
  4089c8:	jb     0x4089cd
  4089ca:	add    dl,0x7
  4089cd:	mov    BYTE PTR [esi],dl
  4089cf:	or     eax,eax
  4089d1:	jne    0x4089bd
  4089d3:	pop    ecx
  4089d4:	pop    edx
  4089d5:	sub    ecx,esi
  4089d7:	sub    edx,ecx
  4089d9:	jbe    0x4089eb
  4089db:	add    ecx,edx
  4089dd:	mov    al,0x30
  4089df:	sub    esi,edx
  4089e1:	jmp    0x4089e6
  4089e3:	mov    BYTE PTR [edx+esi*1],al
  4089e6:	dec    edx
  4089e7:	jne    0x4089e3
  4089e9:	mov    BYTE PTR [esi],al
  4089eb:	ret    
  4089ec:	push   esi
  4089ed:	mov    esi,esp
  4089ef:	sub    esp,0x10
  4089f2:	xor    ecx,ecx
  4089f4:	push   edx
  4089f5:	xor    edx,edx
  4089f7:	call   0x4089a0
  4089fc:	mov    edx,esi
  4089fe:	pop    eax
  4089ff:	call   0x405078
  408a04:	add    esp,0x10
  408a07:	pop    esi
  408a08:	ret    
  408a09:	lea    eax,[eax+0x0]
  408a0c:	or     cl,cl
  408a0e:	jne    0x408a40
  408a10:	mov    ecx,0xa
  408a15:	test   DWORD PTR [eax+0x4],0x80000000
  408a1c:	je     0x408a40
  408a1e:	push   DWORD PTR [eax+0x4]
  408a21:	push   DWORD PTR [eax]
  408a23:	mov    eax,esp
  408a25:	neg    DWORD PTR [esp]
  408a28:	adc    DWORD PTR [esp+0x4],0x0
  408a2d:	neg    DWORD PTR [esp+0x4]
  408a31:	call   0x408a40
  408a36:	mov    BYTE PTR [esi-0x1],0x2d
  408a3a:	dec    esi
  408a3b:	inc    ecx
  408a3c:	add    esp,0x8
  408a3f:	ret    
  408a40:	push   esi
  408a41:	sub    esp,0x4
  408a44:	fnstcw WORD PTR [esp+0x2]
  408a48:	fnstcw WORD PTR [esp]
  408a4b:	or     WORD PTR [esp],0xf00
  408a51:	fldcw  WORD PTR [esp]
  408a54:	mov    WORD PTR [esp],cx
  408a58:	fld1   
  408a5a:	test   DWORD PTR [eax+0x4],0x80000000
  408a61:	je     0x408a8a
  408a63:	push   DWORD PTR [eax+0x4]
  408a66:	push   DWORD PTR [eax]
  408a68:	and    DWORD PTR [esp+0x4],0x7fffffff
  408a70:	push   0x7fffffff
  408a75:	push   0xffffffff
  408a7a:	fild   QWORD PTR [esp+0x8]
  408a7e:	fild   QWORD PTR [esp]
  408a81:	fadd   st,st(2)
  408a83:	faddp  st(1),st
  408a85:	add    esp,0x10
  408a88:	jmp    0x408a8c
  408a8a:	fild   QWORD PTR [eax]
  408a8c:	fild   WORD PTR [esp]
  408a8f:	fld    st(1)
  408a91:	dec    esi
  408a92:	fprem  
  408a94:	fistp  WORD PTR [esp]
  408a97:	fdiv   st(1),st
  408a99:	mov    al,BYTE PTR [esp]
  408a9c:	add    al,0x30
  408a9e:	cmp    al,0x3a
  408aa0:	jb     0x408aa4
  408aa2:	add    al,0x7
  408aa4:	mov    BYTE PTR [esi],al
  408aa6:	fld    st(1)
  408aa8:	fcom   st(3)
  408aaa:	fstsw  ax
  408aad:	sahf   
  408aae:	jae    0x408a91
  408ab0:	fldcw  WORD PTR [esp+0x2]
  408ab4:	add    esp,0x4
  408ab7:	ffree  st(3)
  408ab9:	ffree  st(2)
  408abb:	ffree  st(1)
  408abd:	ffree  st(0)
  408abf:	pop    ecx
  408ac0:	sub    ecx,esi
  408ac2:	sub    edx,ecx
  408ac4:	jbe    0x408ad6
  408ac6:	sub    esi,edx
  408ac8:	mov    al,0x30
  408aca:	add    ecx,edx
  408acc:	jmp    0x408ad1
  408ace:	mov    BYTE PTR [edx+esi*1],al
  408ad1:	dec    edx
  408ad2:	jne    0x408ace
  408ad4:	mov    BYTE PTR [esi],al
  408ad6:	ret    
  408ad7:	nop
  408ad8:	push   ebp
  408ad9:	mov    ebp,esp
  408adb:	push   esi
  408adc:	mov    esi,esp
  408ade:	sub    esp,0x20
  408ae1:	xor    ecx,ecx
  408ae3:	push   eax
  408ae4:	xor    edx,edx
  408ae6:	lea    eax,[ebp+0x8]
  408ae9:	call   0x408a0c
  408aee:	mov    edx,esi
  408af0:	pop    eax
  408af1:	call   0x405078
  408af6:	add    esp,0x20
  408af9:	pop    esi
  408afa:	pop    ebp
  408afb:	ret    0x8
  408afe:	mov    eax,eax
  408b00:	cmp    edx,0x20
  408b03:	jbe    0x408b07
  408b05:	xor    edx,edx
  408b07:	push   esi
  408b08:	mov    esi,esp
  408b0a:	sub    esp,0x20
  408b0d:	push   ecx
  408b0e:	mov    ecx,0x10
  408b13:	call   0x4089a0
  408b18:	mov    edx,esi
  408b1a:	pop    eax
  408b1b:	call   0x405078
  408b20:	add    esp,0x20
  408b23:	pop    esi
  408b24:	ret    
  408b25:	lea    eax,[eax+0x0]
  408b28:	push   ebx
  408b29:	push   esi
  408b2a:	add    esp,0xfffffff4
  408b2d:	mov    ebx,eax
  408b2f:	mov    edx,esp
  408b31:	mov    eax,ebx
  408b33:	call   0x4038c4
  408b38:	mov    esi,eax
  408b3a:	cmp    DWORD PTR [esp],0x0
  408b3e:	je     0x408b59
  408b40:	mov    DWORD PTR [esp+0x4],ebx
  408b44:	mov    BYTE PTR [esp+0x8],0xb
  408b49:	lea    edx,[esp+0x4]
  408b4d:	mov    eax,ds:0x46dbc0
  408b52:	xor    ecx,ecx
  408b54:	call   0x40839c
  408b59:	mov    eax,esi
  408b5b:	add    esp,0xc
  408b5e:	pop    esi
  408b5f:	pop    ebx
  408b60:	ret    
  408b61:	lea    eax,[eax+0x0]
  408b64:	push   ebx
  408b65:	push   ecx
  408b66:	mov    ebx,edx
  408b68:	mov    edx,esp
  408b6a:	call   0x4038c4
  408b6f:	cmp    DWORD PTR [esp],0x0
  408b73:	je     0x408b77
  408b75:	mov    eax,ebx
  408b77:	pop    edx
  408b78:	pop    ebx
  408b79:	ret    
  408b7a:	mov    eax,eax
  408b7c:	push   ebx
  408b7d:	push   esi
  408b7e:	push   ecx
  408b7f:	mov    esi,edx
  408b81:	mov    ebx,eax
  408b83:	mov    edx,esp
  408b85:	mov    eax,ebx
  408b87:	call   0x4038c4
  408b8c:	mov    DWORD PTR [esi],eax
  408b8e:	cmp    DWORD PTR [esp],0x0
  408b92:	sete   al
  408b95:	pop    edx
  408b96:	pop    esi
  408b97:	pop    ebx
  408b98:	ret    
  408b99:	lea    eax,[eax+0x0]
  408b9c:	push   ebp
  408b9d:	mov    ebp,esp
  408b9f:	add    esp,0xfffffff4
  408ba2:	lea    edx,[ebp-0xc]
  408ba5:	call   0x405fdc
  408baa:	mov    DWORD PTR [ebp-0x8],eax
  408bad:	mov    DWORD PTR [ebp-0x4],edx
  408bb0:	cmp    DWORD PTR [ebp-0xc],0x0
  408bb4:	je     0x408bc2
  408bb6:	mov    eax,DWORD PTR [ebp+0x8]
  408bb9:	mov    DWORD PTR [ebp-0x8],eax
  408bbc:	mov    eax,DWORD PTR [ebp+0xc]
  408bbf:	mov    DWORD PTR [ebp-0x4],eax
  408bc2:	mov    eax,DWORD PTR [ebp-0x8]
  408bc5:	mov    edx,DWORD PTR [ebp-0x4]
  408bc8:	mov    esp,ebp
  408bca:	pop    ebp
  408bcb:	ret    0x8
  408bce:	mov    eax,eax
  408bd0:	mov    eax,ds:0x470908
  408bd5:	call   0x4061f4
  408bda:	test   eax,eax
  408bdc:	jne    0x408c07
  408bde:	push   0x1
  408be0:	mov    eax,0x470908
  408be5:	mov    ecx,0x1
  408bea:	mov    edx,DWORD PTR ds:0x4081c4
  408bf0:	call   0x4063b0
  408bf5:	add    esp,0x4
  408bf8:	mov    eax,ds:0x470908
  408bfd:	mov    edx,0x408c48
  408c02:	call   0x404fdc
  408c07:	mov    eax,ds:0x47090c
  408c0c:	call   0x4061f4
  408c11:	test   eax,eax
  408c13:	jne    0x408c3e
  408c15:	push   0x1
  408c17:	mov    eax,0x47090c
  408c1c:	mov    ecx,0x1
  408c21:	mov    edx,DWORD PTR ds:0x4081e8
  408c27:	call   0x4063b0
  408c2c:	add    esp,0x4
  408c2f:	mov    eax,ds:0x47090c
  408c34:	mov    edx,0x408c58
  408c39:	call   0x404fdc
  408c3e:	ret    
  408c3f:	add    bh,bh
  408c41:	(bad)  
  408c42:	(bad)  
  408c43:	inc    DWORD PTR [eax+eax*1]
  408c46:	add    BYTE PTR [eax],al
  408c48:	push   esp
  408c49:	jb     0x408cc0
  408c4b:	add    BYTE PTR gs:[eax],al
  408c4e:	add    BYTE PTR [eax],al
  408c50:	(bad)  
  408c51:	(bad)  
  408c52:	(bad)  
  408c53:	inc    DWORD PTR ds:0x46000000
  408c59:	popa   
  408c5a:	ins    BYTE PTR es:[edi],dx
  408c5b:	jae    0x408cc2
  408c5d:	add    BYTE PTR [eax],al
  408c5f:	add    BYTE PTR [ebp-0x75],dl
  408c62:	in     al,dx
  408c63:	add    esp,0xffffffec
  408c66:	push   ebx
  408c67:	push   esi
  408c68:	push   edi
  408c69:	mov    BYTE PTR [ebp-0x1],0x0
  408c6d:	test   edx,edx
  408c6f:	jl     0x408cd7
  408c71:	inc    edx
  408c72:	mov    DWORD PTR [ebp-0xc],edx
  408c75:	mov    ebx,eax
  408c77:	mov    eax,DWORD PTR [ebp+0x8]
  408c7a:	mov    eax,DWORD PTR [eax-0x4]
  408c7d:	mov    DWORD PTR [ebp-0x10],eax
  408c80:	mov    eax,DWORD PTR [ebx]
  408c82:	mov    DWORD PTR [ebp-0x14],eax
  408c85:	mov    esi,DWORD PTR [ebp-0x10]
  408c88:	test   esi,esi
  408c8a:	je     0x408c91
  408c8c:	sub    esi,0x4
  408c8f:	mov    esi,DWORD PTR [esi]
  408c91:	mov    edi,DWORD PTR [ebp-0x14]
  408c94:	test   edi,edi
  408c96:	je     0x408c9d
  408c98:	sub    edi,0x4
  408c9b:	mov    edi,DWORD PTR [edi]
  408c9d:	push   edi
  408c9e:	mov    eax,DWORD PTR [ebp-0x14]
  408ca1:	call   0x405418
  408ca6:	push   eax
  408ca7:	push   esi
  408ca8:	mov    eax,DWORD PTR [ebp-0x10]
  408cab:	call   0x405418
  408cb0:	push   eax
  408cb1:	push   0x1
  408cb3:	push   0x400
  408cb8:	call   0x407148
  408cbd:	sub    eax,0x2
  408cc0:	test   eax,eax
  408cc2:	sete   al
  408cc5:	test   al,al
  408cc7:	je     0x408ccf
  408cc9:	mov    BYTE PTR [ebp-0x1],0x1
  408ccd:	jmp    0x408cd7
  408ccf:	add    ebx,0x4
  408cd2:	dec    DWORD PTR [ebp-0xc]
  408cd5:	jne    0x408c77
  408cd7:	movzx  eax,BYTE PTR [ebp-0x1]
  408cdb:	pop    edi
  408cdc:	pop    esi
  408cdd:	pop    ebx
  408cde:	mov    esp,ebp
  408ce0:	pop    ebp
  408ce1:	ret    
  408ce2:	mov    eax,eax
  408ce4:	push   ebp
  408ce5:	mov    ebp,esp
  408ce7:	add    esp,0xfffffff0
  408cea:	push   ebx
  408ceb:	mov    ebx,edx
  408ced:	mov    DWORD PTR [ebp-0x4],eax
  408cf0:	lea    edx,[ebp-0x10]
  408cf3:	mov    eax,DWORD PTR [ebp-0x4]
  408cf6:	call   0x40a670
  408cfb:	mov    edx,eax
  408cfd:	test   dl,dl
  408cff:	je     0x408d13
  408d01:	fld    TBYTE PTR [ebp-0x10]
  408d04:	fcomp  DWORD PTR ds:0x408d64
  408d0a:	fstsw  ax
  408d0d:	sahf   
  408d0e:	setne  BYTE PTR [ebx]
  408d11:	jmp    0x408d5c
  408d13:	call   0x408bd0
  408d18:	push   ebp
  408d19:	mov    eax,ds:0x470908
  408d1e:	call   0x4061fc
  408d23:	mov    edx,eax
  408d25:	mov    eax,ds:0x470908
  408d2a:	call   0x408c60
  408d2f:	pop    ecx
  408d30:	mov    edx,eax
  408d32:	test   dl,dl
  408d34:	je     0x408d3b
  408d36:	mov    BYTE PTR [ebx],0x1
  408d39:	jmp    0x408d5c
  408d3b:	push   ebp
  408d3c:	mov    eax,ds:0x47090c
  408d41:	call   0x4061fc
  408d46:	mov    edx,eax
  408d48:	mov    eax,ds:0x47090c
  408d4d:	call   0x408c60
  408d52:	pop    ecx
  408d53:	mov    edx,eax
  408d55:	test   dl,dl
  408d57:	je     0x408d5c
  408d59:	mov    BYTE PTR [ebx],0x0
  408d5c:	mov    eax,edx
  408d5e:	pop    ebx
  408d5f:	mov    esp,ebp
  408d61:	pop    ebp
  408d62:	ret    
  408d63:	add    BYTE PTR [eax],al
  408d65:	add    BYTE PTR [eax],al
  408d67:	add    bh,bh
  408d69:	(bad)  
  408d6a:	(bad)  
  408d6b:	inc    DWORD PTR [ecx]
  408d6d:	add    BYTE PTR [eax],al
  408d6f:	add    BYTE PTR [eax],dh
  408d71:	add    BYTE PTR [eax],al
  408d73:	add    bh,bh
  408d75:	(bad)  
  408d76:	(bad)  
  408d77:	inc    DWORD PTR [edx]
  408d79:	add    BYTE PTR [eax],al
  408d7b:	add    BYTE PTR ds:0x53000031,ch
  408d81:	push   esi
  408d82:	mov    esi,ecx
  408d84:	mov    ebx,eax
  408d86:	test   dl,dl
  408d88:	je     0x408db6
  408d8a:	call   0x408bd0
  408d8f:	test   bl,bl
  408d91:	je     0x408da4
  408d93:	mov    eax,esi
  408d95:	mov    edx,DWORD PTR ds:0x470908
  408d9b:	mov    edx,DWORD PTR [edx]
  408d9d:	call   0x404fdc
  408da2:	jmp    0x408dc7
  408da4:	mov    eax,esi
  408da6:	mov    edx,DWORD PTR ds:0x47090c
  408dac:	mov    edx,DWORD PTR [edx]
  408dae:	call   0x404fdc
  408db3:	pop    esi
  408db4:	pop    ebx
  408db5:	ret    
  408db6:	mov    eax,esi
  408db8:	movzx  edx,bl
  408dbb:	mov    edx,DWORD PTR [edx*4+0x461830]
  408dc2:	call   0x404fdc
  408dc7:	pop    esi
  408dc8:	pop    ebx
  408dc9:	ret    
  408dca:	mov    eax,eax
  408dcc:	push   ebx
  408dcd:	push   esi
  408dce:	push   edi
  408dcf:	mov    ebx,edx
  408dd1:	mov    edi,eax
  408dd3:	or     eax,0xffffffff
  408dd6:	mov    esi,ebx
  408dd8:	and    esi,0x3
  408ddb:	cmp    esi,0x2
  408dde:	ja     0x408e1f
  408de0:	mov    edx,ebx
  408de2:	and    edx,0xf0
  408de8:	cmp    edx,0x40
  408deb:	ja     0x408e1f
  408ded:	push   0x0
  408def:	push   0x80
  408df4:	push   0x3
  408df6:	push   0x0
  408df8:	mov    eax,ebx
  408dfa:	and    eax,0xf0
  408dff:	shr    eax,0x4
  408e02:	mov    eax,DWORD PTR [eax*4+0x461844]
  408e09:	push   eax
  408e0a:	mov    eax,DWORD PTR [esi*4+0x461838]
  408e11:	push   eax
  408e12:	mov    eax,edi
  408e14:	call   0x405418
  408e19:	push   eax
  408e1a:	call   0x407168
  408e1f:	pop    edi
  408e20:	pop    esi
  408e21:	pop    ebx
  408e22:	ret    
  408e23:	nop
  408e24:	push   ebx
  408e25:	push   esi
  408e26:	push   edi
  408e27:	push   ecx
  408e28:	mov    edi,ecx
  408e2a:	mov    esi,edx
  408e2c:	mov    ebx,eax
  408e2e:	push   0x0
  408e30:	lea    eax,[esp+0x4]
  408e34:	push   eax
  408e35:	push   edi
  408e36:	push   esi
  408e37:	push   ebx
  408e38:	call   0x4072d0
  408e3d:	test   eax,eax
  408e3f:	jne    0x408e48
  408e41:	mov    DWORD PTR [esp],0xffffffff
  408e48:	mov    eax,DWORD PTR [esp]
  408e4b:	pop    edx
  408e4c:	pop    edi
  408e4d:	pop    esi
  408e4e:	pop    ebx
  408e4f:	ret    
  408e50:	push   ebx
  408e51:	push   esi
  408e52:	push   edi
  408e53:	push   ecx
  408e54:	mov    edi,ecx
  408e56:	mov    esi,edx
  408e58:	mov    ebx,eax
  408e5a:	push   0x0
  408e5c:	lea    eax,[esp+0x4]
  408e60:	push   eax
  408e61:	push   edi
  408e62:	push   esi
  408e63:	push   ebx
  408e64:	call   0x407320
  408e69:	test   eax,eax
  408e6b:	jne    0x408e74
  408e6d:	mov    DWORD PTR [esp],0xffffffff
  408e74:	mov    eax,DWORD PTR [esp]
  408e77:	pop    edx
  408e78:	pop    edi
  408e79:	pop    esi
  408e7a:	pop    ebx
  408e7b:	ret    
  408e7c:	push   ebp
  408e7d:	mov    ebp,esp
  408e7f:	add    esp,0xfffffff8
  408e82:	push   ebx
  408e83:	push   esi
  408e84:	mov    esi,edx
  408e86:	mov    ebx,eax
  408e88:	mov    eax,DWORD PTR [ebp+0x8]
  408e8b:	mov    DWORD PTR [ebp-0x8],eax
  408e8e:	mov    eax,DWORD PTR [ebp+0xc]
  408e91:	mov    DWORD PTR [ebp-0x4],eax
  408e94:	push   esi
  408e95:	lea    eax,[ebp-0x4]
  408e98:	push   eax
  408e99:	mov    eax,DWORD PTR [ebp-0x8]
  408e9c:	push   eax
  408e9d:	push   ebx
  408e9e:	call   0x407300
  408ea3:	mov    DWORD PTR [ebp-0x8],eax
  408ea6:	cmp    DWORD PTR [ebp-0x8],0xffffffff
  408eaa:	jne    0x408ebc
  408eac:	call   0x407230
  408eb1:	test   eax,eax
  408eb3:	je     0x408ebc
  408eb5:	mov    DWORD PTR [ebp-0x4],0xffffffff
  408ebc:	mov    eax,DWORD PTR [ebp-0x8]
  408ebf:	mov    edx,DWORD PTR [ebp-0x4]
  408ec2:	pop    esi
  408ec3:	pop    ebx
  408ec4:	pop    ecx
  408ec5:	pop    ecx
  408ec6:	pop    ebp
  408ec7:	ret    0x8
  408eca:	mov    eax,eax
  408ecc:	push   ebx
  408ecd:	mov    ebx,eax
  408ecf:	mov    eax,ebx
  408ed1:	call   0x405418
  408ed6:	push   eax
  408ed7:	call   0x407218
  408edc:	cmp    eax,0xffffffff
  408edf:	je     0x408ee5
  408ee1:	test   al,0x10
  408ee3:	je     0x408ee9
  408ee5:	xor    eax,eax
  408ee7:	pop    ebx
  408ee8:	ret    
  408ee9:	mov    al,0x1
  408eeb:	pop    ebx
  408eec:	ret    
  408eed:	lea    eax,[eax+0x0]
  408ef0:	push   ebx
  408ef1:	push   esi
  408ef2:	add    esp,0xfffffff8
  408ef5:	mov    ebx,eax
  408ef7:	jmp    0x408f13
  408ef9:	lea    eax,[ebx+0x20]
  408efc:	push   eax
  408efd:	mov    eax,DWORD PTR [ebx+0x1c]
  408f00:	push   eax
  408f01:	call   0x4071b8
  408f06:	test   eax,eax
  408f08:	jne    0x408f13
  408f0a:	call   0x407230
  408f0f:	mov    esi,eax
  408f11:	jmp    0x408f6c
  408f13:	mov    eax,DWORD PTR [ebx+0x20]
  408f16:	and    eax,DWORD PTR [ebx+0x18]
  408f19:	jne    0x408ef9
  408f1b:	push   esp
  408f1c:	lea    eax,[ebx+0x34]
  408f1f:	push   eax
  408f20:	call   0x4071a0
  408f25:	push   ebx
  408f26:	lea    eax,[ebx+0x2]
  408f29:	push   eax
  408f2a:	lea    eax,[esp+0x8]
  408f2e:	push   eax
  408f2f:	call   0x407198
  408f34:	mov    eax,DWORD PTR [ebx+0x40]
  408f37:	xor    edx,edx
  408f39:	push   edx
  408f3a:	push   eax
  408f3b:	mov    eax,DWORD PTR [ebx+0x3c]
  408f3e:	xor    edx,edx
  408f40:	mov    edx,eax
  408f42:	xor    eax,eax
  408f44:	or     eax,DWORD PTR [esp]
  408f47:	or     edx,DWORD PTR [esp+0x4]
  408f4b:	add    esp,0x8
  408f4e:	mov    DWORD PTR [ebx+0x8],eax
  408f51:	mov    DWORD PTR [ebx+0xc],edx
  408f54:	mov    eax,DWORD PTR [ebx+0x20]
  408f57:	mov    DWORD PTR [ebx+0x10],eax
  408f5a:	lea    eax,[ebx+0x14]
  408f5d:	lea    edx,[ebx+0x4c]
  408f60:	mov    ecx,0x104
  408f65:	call   0x4051f8
  408f6a:	xor    esi,esi
  408f6c:	mov    eax,esi
  408f6e:	pop    ecx
  408f6f:	pop    edx
  408f70:	pop    esi
  408f71:	pop    ebx
  408f72:	ret    
  408f73:	nop
  408f74:	push   ebx
  408f75:	push   esi
  408f76:	push   edi
  408f77:	mov    ebx,ecx
  408f79:	mov    edi,eax
  408f7b:	not    edx
  408f7d:	and    edx,0x16
  408f80:	mov    DWORD PTR [ebx+0x18],edx
  408f83:	lea    eax,[ebx+0x20]
  408f86:	push   eax
  408f87:	mov    eax,edi
  408f89:	call   0x405418
  408f8e:	push   eax
  408f8f:	call   0x4071b0
  408f94:	mov    esi,eax
  408f96:	mov    DWORD PTR [ebx+0x1c],esi
  408f99:	cmp    esi,0xffffffff
  408f9c:	je     0x408fb4
  408f9e:	mov    eax,ebx
  408fa0:	call   0x408ef0
  408fa5:	mov    esi,eax
  408fa7:	test   esi,esi
  408fa9:	je     0x408fbb
  408fab:	mov    eax,ebx
  408fad:	call   0x408fe8
  408fb2:	jmp    0x408fbb
  408fb4:	call   0x407230
  408fb9:	mov    esi,eax
  408fbb:	mov    eax,esi
  408fbd:	pop    edi
  408fbe:	pop    esi
  408fbf:	pop    ebx
  408fc0:	ret    
  408fc1:	lea    eax,[eax+0x0]
  408fc4:	push   ebx
  408fc5:	mov    ebx,eax
  408fc7:	lea    eax,[ebx+0x20]
  408fca:	push   eax
  408fcb:	mov    eax,DWORD PTR [ebx+0x1c]
  408fce:	push   eax
  408fcf:	call   0x4071b8
  408fd4:	test   eax,eax
  408fd6:	je     0x408fe1
  408fd8:	mov    eax,ebx
  408fda:	call   0x408ef0
  408fdf:	pop    ebx
  408fe0:	ret    
  408fe1:	call   0x407230
  408fe6:	pop    ebx
  408fe7:	ret    
  408fe8:	push   ebx
  408fe9:	mov    ebx,eax
  408feb:	mov    eax,DWORD PTR [ebx+0x1c]
  408fee:	cmp    eax,0xffffffff
  408ff1:	je     0x409000
  408ff3:	push   eax
  408ff4:	call   0x4071a8
  408ff9:	mov    DWORD PTR [ebx+0x1c],0xffffffff
  409000:	pop    ebx
  409001:	ret    
  409002:	mov    eax,eax
  409004:	push   ebx
  409005:	push   esi
  409006:	push   edi
  409007:	push   ebp
  409008:	mov    esi,edx
  40900a:	mov    ebx,eax
  40900c:	mov    eax,esi
  40900e:	test   eax,eax
  409010:	je     0x409017
  409012:	sub    eax,0x4
  409015:	mov    eax,DWORD PTR [eax]
  409017:	mov    edi,eax
  409019:	mov    eax,ebx
  40901b:	call   0x405418
  409020:	mov    ebp,eax
  409022:	test   edi,edi
  409024:	jle    0x40904f
  409026:	movzx  ebx,BYTE PTR [esi+edi*1-0x1]
  40902b:	test   bl,bl
  40902d:	je     0x40904a
  40902f:	mov    edx,ebx
  409031:	mov    eax,ebp
  409033:	call   0x409270
  409038:	test   eax,eax
  40903a:	je     0x40904a
  40903c:	mov    edx,edi
  40903e:	mov    eax,esi
  409040:	call   0x40d168
  409045:	cmp    al,0x2
  409047:	jne    0x40904f
  409049:	dec    edi
  40904a:	dec    edi
  40904b:	test   edi,edi
  40904d:	jg     0x409026
  40904f:	mov    eax,edi
  409051:	pop    ebp
  409052:	pop    edi
  409053:	pop    esi
  409054:	pop    ebx
  409055:	ret    
  409056:	mov    eax,eax
  409058:	push   ebx
  409059:	push   esi
  40905a:	push   edi
  40905b:	mov    edi,edx
  40905d:	mov    ebx,eax
  40905f:	mov    edx,ebx
  409061:	mov    eax,0x40908c
  409066:	call   0x409004
  40906b:	mov    esi,eax
  40906d:	push   edi
  40906e:	lea    edx,[esi+0x1]
  409071:	mov    ecx,0x7fffffff
  409076:	mov    eax,ebx
  409078:	call   0x405480
  40907d:	pop    edi
  40907e:	pop    esi
  40907f:	pop    ebx
  409080:	ret    
  409081:	add    BYTE PTR [eax],al
  409083:	add    bh,bh
  409085:	(bad)  
  409086:	(bad)  
  409087:	inc    DWORD PTR [edx]
  409089:	add    BYTE PTR [eax],al
  40908b:	add    BYTE PTR [edx+edi*1+0x0],bl
  40908f:	add    BYTE PTR [ebx+0x56],dl
  409092:	push   edi
  409093:	mov    edi,edx
  409095:	mov    esi,eax
  409097:	mov    edx,esi
  409099:	mov    eax,0x4090d4
  40909e:	call   0x409004
  4090a3:	mov    ebx,eax
  4090a5:	test   ebx,ebx
  4090a7:	jle    0x4090c1
  4090a9:	cmp    BYTE PTR [esi+ebx*1-0x1],0x2e
  4090ae:	jne    0x4090c1
  4090b0:	push   edi
  4090b1:	mov    ecx,0x7fffffff
  4090b6:	mov    edx,ebx
  4090b8:	mov    eax,esi
  4090ba:	call   0x405480
  4090bf:	jmp    0x4090c8
  4090c1:	mov    eax,edi
  4090c3:	call   0x404f88
  4090c8:	pop    edi
  4090c9:	pop    esi
  4090ca:	pop    ebx
  4090cb:	ret    
  4090cc:	(bad)  
  4090cd:	(bad)  
  4090ce:	(bad)  
  4090cf:	inc    DWORD PTR [ebx]
  4090d1:	add    BYTE PTR [eax],al
  4090d3:	add    BYTE PTR [esi],ch
  4090d5:	pop    esp
  4090d6:	cmp    al,BYTE PTR [eax]
  4090d8:	push   ebx
  4090d9:	push   esi
  4090da:	add    esp,0xfffffef8
  4090e0:	mov    esi,edx
  4090e2:	mov    ebx,eax
  4090e4:	push   esp
  4090e5:	lea    eax,[esp+0x8]
  4090e9:	push   eax
  4090ea:	push   0x104
  4090ef:	mov    eax,ebx
  4090f1:	call   0x405418
  4090f6:	push   eax
  4090f7:	call   0x407228
  4090fc:	mov    ecx,eax
  4090fe:	lea    edx,[esp+0x4]
  409102:	mov    eax,esi
  409104:	call   0x405078
  409109:	add    esp,0x108
  40910f:	pop    esi
  409110:	pop    ebx
  409111:	ret    
  409112:	mov    eax,eax
  409114:	push   ebp
  409115:	mov    ebp,esp
  409117:	add    esp,0xffffffe8
  40911a:	push   ebx
  40911b:	mov    eax,DWORD PTR [ebp+0x8]
  40911e:	test   eax,eax
  409120:	jne    0x409124
  409122:	xor    eax,eax
  409124:	lea    edx,[ebp-0x10]
  409127:	push   edx
  409128:	lea    edx,[ebp-0xc]
  40912b:	push   edx
  40912c:	lea    edx,[ebp-0x8]
  40912f:	push   edx
  409130:	lea    edx,[ebp-0x4]
  409133:	push   edx
  409134:	push   eax
  409135:	call   0x407200
  40913a:	mov    ebx,eax
  40913c:	mov    eax,DWORD PTR [ebp-0x4]
  40913f:	imul   DWORD PTR [ebp-0x8]
  409142:	xor    edx,edx
  409144:	mov    DWORD PTR [ebp-0x18],eax
  409147:	mov    DWORD PTR [ebp-0x14],edx
  40914a:	mov    eax,DWORD PTR [ebp-0xc]
  40914d:	xor    edx,edx
  40914f:	push   edx
  409150:	push   eax
  409151:	mov    eax,DWORD PTR [ebp-0x18]
  409154:	mov    edx,DWORD PTR [ebp-0x14]
  409157:	call   0x405f94
  40915c:	mov    ecx,DWORD PTR [ebp+0xc]
  40915f:	mov    DWORD PTR [ecx],eax
  409161:	mov    DWORD PTR [ecx+0x4],edx
  409164:	mov    eax,DWORD PTR [ebp-0x10]
  409167:	xor    edx,edx
  409169:	push   edx
  40916a:	push   eax
  40916b:	mov    eax,DWORD PTR [ebp-0x18]
  40916e:	mov    edx,DWORD PTR [ebp-0x14]
  409171:	call   0x405f94
  409176:	mov    ecx,DWORD PTR [ebp+0x10]
  409179:	mov    DWORD PTR [ecx],eax
  40917b:	mov    DWORD PTR [ecx+0x4],edx
  40917e:	mov    eax,ebx
  409180:	pop    ebx
  409181:	mov    esp,ebp
  409183:	pop    ebp
  409184:	ret    0x10
  409187:	nop
  409188:	push   ebx
  409189:	mov    ebx,eax
  40918b:	push   0x0
  40918d:	mov    eax,ebx
  40918f:	call   0x405418
  409194:	push   eax
  409195:	call   0x407158
  40919a:	cmp    eax,0x1
  40919d:	sbb    eax,eax
  40919f:	inc    eax
  4091a0:	pop    ebx
  4091a1:	ret    
  4091a2:	mov    eax,eax
  4091a4:	cmp    BYTE PTR [eax],0x0
  4091a7:	je     0x4091cf
  4091a9:	mov    edx,eax
  4091ab:	neg    edx
  4091ad:	add    eax,0x1
  4091b0:	and    eax,0xfffffffe
  4091b3:	mov    cx,WORD PTR [eax]
  4091b6:	add    eax,0x2
  4091b9:	test   cl,ch
  4091bb:	jne    0x4091b3
  4091bd:	test   cl,cl
  4091bf:	je     0x4091ca
  4091c1:	test   ch,ch
  4091c3:	jne    0x4091b3
  4091c5:	lea    eax,[edx+eax*1-0x1]
  4091c9:	ret    
  4091ca:	lea    eax,[edx+eax*1-0x2]
  4091ce:	ret    
  4091cf:	xor    eax,eax
  4091d1:	ret    
  4091d2:	mov    eax,eax
  4091d4:	mov    edx,edi
  4091d6:	mov    edi,eax
  4091d8:	mov    ecx,0xffffffff
  4091dd:	xor    al,al
  4091df:	repnz scas al,BYTE PTR es:[edi]
  4091e1:	lea    eax,[edi-0x1]
  4091e4:	mov    edi,edx
  4091e6:	ret    
  4091e7:	nop
  4091e8:	push   esi
  4091e9:	mov    esi,eax
  4091eb:	xchg   edx,eax
  4091ec:	call   0x403090
  4091f1:	mov    eax,esi
  4091f3:	pop    esi
  4091f4:	ret    
  4091f5:	lea    eax,[eax+0x0]
  4091f8:	push   edi
  4091f9:	push   esi
  4091fa:	push   ebx
  4091fb:	mov    esi,eax
  4091fd:	mov    edi,edx
  4091ff:	mov    ebx,ecx
  409201:	xor    al,al
  409203:	test   ecx,ecx
  409205:	je     0x40920c
  409207:	repnz scas al,BYTE PTR es:[edi]
  409209:	jne    0x40920c
  40920b:	inc    ecx
  40920c:	sub    ebx,ecx
  40920e:	mov    edi,esi
  409210:	mov    esi,edx
  409212:	mov    edx,edi
  409214:	mov    ecx,ebx
  409216:	shr    ecx,0x2
  409219:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40921b:	mov    ecx,ebx
  40921d:	and    ecx,0x3
  409220:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409222:	stos   BYTE PTR es:[edi],al
  409223:	mov    eax,edx
  409225:	pop    ebx
  409226:	pop    esi
  409227:	pop    edi
  409228:	ret    
  409229:	lea    eax,[eax+0x0]
  40922c:	push   edi
  40922d:	push   esi
  40922e:	push   ebx
  40922f:	mov    edi,edx
  409231:	mov    esi,eax
  409233:	mov    ebx,ecx
  409235:	xor    eax,eax
  409237:	or     ecx,ecx
  409239:	je     0x40926a
  40923b:	repnz scas al,BYTE PTR es:[edi]
  40923d:	sub    ebx,ecx
  40923f:	mov    ecx,ebx
  409241:	mov    edi,edx
  409243:	xor    edx,edx
  409245:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409247:	je     0x40926a
  409249:	mov    al,BYTE PTR [esi-0x1]
  40924c:	cmp    al,0x61
  40924e:	jb     0x409256
  409250:	cmp    al,0x7a
  409252:	ja     0x409256
  409254:	sub    al,0x20
  409256:	mov    dl,BYTE PTR [edi-0x1]
  409259:	cmp    dl,0x61
  40925c:	jb     0x409266
  40925e:	cmp    dl,0x7a
  409261:	ja     0x409266
  409263:	sub    dl,0x20
  409266:	sub    eax,edx
  409268:	je     0x409245
  40926a:	pop    ebx
  40926b:	pop    esi
  40926c:	pop    edi
  40926d:	ret    
  40926e:	mov    eax,eax
  409270:	jmp    0x40927a
  409272:	test   cl,cl
  409274:	jne    0x409279
  409276:	xor    eax,eax
  409278:	ret    
  409279:	inc    eax
  40927a:	movzx  ecx,BYTE PTR [eax]
  40927d:	cmp    dl,cl
  40927f:	jne    0x409272
  409281:	ret    
  409282:	mov    eax,eax
  409284:	push   edi
  409285:	push   esi
  409286:	push   ebx
  409287:	or     eax,eax
  409289:	je     0x4092cf
  40928b:	or     edx,edx
  40928d:	je     0x4092cf
  40928f:	mov    ebx,eax
  409291:	mov    edi,edx
  409293:	xor    al,al
  409295:	mov    ecx,0xffffffff
  40929a:	repnz scas al,BYTE PTR es:[edi]
  40929c:	not    ecx
  40929e:	dec    ecx
  40929f:	je     0x4092cf
  4092a1:	mov    esi,ecx
  4092a3:	mov    edi,ebx
  4092a5:	mov    ecx,0xffffffff
  4092aa:	repnz scas al,BYTE PTR es:[edi]
  4092ac:	not    ecx
  4092ae:	sub    ecx,esi
  4092b0:	jbe    0x4092cf
  4092b2:	mov    edi,ebx
  4092b4:	lea    ebx,[esi-0x1]
  4092b7:	mov    esi,edx
  4092b9:	lods   al,BYTE PTR ds:[esi]
  4092ba:	repnz scas al,BYTE PTR es:[edi]
  4092bc:	jne    0x4092cf
  4092be:	mov    eax,ecx
  4092c0:	push   edi
  4092c1:	mov    ecx,ebx
  4092c3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c5:	pop    edi
  4092c6:	mov    ecx,eax
  4092c8:	jne    0x4092b7
  4092ca:	lea    eax,[edi-0x1]
  4092cd:	jmp    0x4092d1
  4092cf:	xor    eax,eax
  4092d1:	pop    ebx
  4092d2:	pop    esi
  4092d3:	pop    edi
  4092d4:	ret    
  4092d5:	lea    eax,[eax+0x0]
  4092d8:	push   ebx
  4092d9:	mov    ebx,eax
  4092db:	add    ebx,0x4
  4092de:	mov    eax,ebx
  4092e0:	call   0x402ea0
  4092e5:	mov    DWORD PTR [eax],ebx
  4092e7:	add    eax,0x4
  4092ea:	pop    ebx
  4092eb:	ret    
  4092ec:	push   ebx
  4092ed:	push   esi
  4092ee:	mov    ebx,eax
  4092f0:	test   ebx,ebx
  4092f2:	jne    0x4092f9
  4092f4:	xor    eax,eax
  4092f6:	pop    esi
  4092f7:	pop    ebx
  4092f8:	ret    
  4092f9:	mov    eax,ebx
  4092fb:	call   0x4091a4
  409300:	mov    esi,eax
  409302:	inc    esi
  409303:	mov    eax,esi
  409305:	call   0x4092d8
  40930a:	mov    ecx,esi
  40930c:	mov    edx,ebx
  40930e:	call   0x4091e8
  409313:	pop    esi
  409314:	pop    ebx
  409315:	ret    
  409316:	mov    eax,eax
  409318:	push   ebx
  409319:	push   esi
  40931a:	push   edi
  40931b:	add    esp,0xffffffd8
  40931e:	mov    ebx,ecx
  409320:	mov    esi,edx
  409322:	mov    edi,eax
  409324:	cmp    ebx,0x1f
  409327:	jbe    0x40932e
  409329:	mov    ebx,0x1f
  40932e:	mov    edx,ebx
  409330:	dec    edx
  409331:	mov    eax,esi
  409333:	call   0x40d18c
  409338:	cmp    al,0x1
  40933a:	jne    0x40933d
  40933c:	dec    ebx
  40933d:	mov    eax,esp
  40933f:	mov    ecx,ebx
  409341:	mov    edx,esi
  409343:	call   0x4091e8
  409348:	mov    BYTE PTR [esp+ebx*1],0x0
  40934c:	mov    eax,esp
  40934e:	mov    DWORD PTR [esp+0x20],eax
  409352:	mov    BYTE PTR [esp+0x24],0x6
  409357:	lea    edx,[esp+0x20]
  40935b:	mov    eax,DWORD PTR [edi*4+0x461858]
  409362:	xor    ecx,ecx
  409364:	call   0x40839c
  409369:	add    esp,0x28
  40936c:	pop    edi
  40936d:	pop    esi
  40936e:	pop    ebx
  40936f:	ret    
  409370:	push   ebx
  409371:	mov    ecx,DWORD PTR ds:0x46de80
  409377:	cmp    DWORD PTR [ecx],0x0
  40937a:	je     0x409388
  40937c:	mov    ebx,DWORD PTR ds:0x46de80
  409382:	mov    ebx,DWORD PTR [ebx]
  409384:	call   ebx
  409386:	pop    ebx
  409387:	ret    
  409388:	mov    al,0x10
  40938a:	call   0x402ff0
  40938f:	pop    ebx
  409390:	ret    
  409391:	lea    eax,[eax+0x0]
  409394:	push   ebx
  409395:	mov    ebx,eax
  409397:	mov    eax,ebx
  409399:	call   0x404f88
  40939e:	pop    ebx
  40939f:	ret    
  4093a0:	push   ebp
  4093a1:	mov    ebp,esp
  4093a3:	push   ebx
  4093a4:	movzx  ebx,BYTE PTR [ebp+0x14]
  4093a8:	push   ebx
  4093a9:	mov    ebx,DWORD PTR [ebp+0x10]
  4093ac:	push   ebx
  4093ad:	mov    ebx,DWORD PTR [ebp+0xc]
  4093b0:	push   ebx
  4093b1:	mov    ebx,DWORD PTR [ebp+0x8]
  4093b4:	push   ebx
  4093b5:	call   0x409ff8
  4093ba:	pop    ebx
  4093bb:	pop    ebp
  4093bc:	ret    0x10
  4093bf:	nop
  4093c0:	push   ebp
  4093c1:	mov    ebp,esp
  4093c3:	add    esp,0xffffff94
  4093c6:	push   ebx
  4093c7:	xor    ebx,ebx
  4093c9:	mov    DWORD PTR [ebp-0x14],ebx
  4093cc:	push   ebx
  4093cd:	push   esi
  4093ce:	push   edi
  4093cf:	mov    edi,eax
  4093d1:	mov    esi,ecx
  4093d3:	xor    eax,eax
  4093d5:	mov    DWORD PTR [ebp-0x4],eax
  4093d8:	add    ecx,DWORD PTR [ebp+0x10]
  4093db:	mov    DWORD PTR [ebp-0x8],edi
  4093de:	xor    eax,eax
  4093e0:	mov    DWORD PTR [ebp-0xc],eax
  4093e3:	mov    DWORD PTR [ebp-0x10],eax
  4093e6:	mov    DWORD PTR [ebp-0x14],eax
  4093e9:	or     edx,edx
  4093eb:	je     0x4093fa
  4093ed:	cmp    esi,ecx
  4093ef:	je     0x4093fa
  4093f1:	lods   al,BYTE PTR ds:[esi]
  4093f2:	cmp    al,0x25
  4093f4:	je     0x409404
  4093f6:	stos   BYTE PTR es:[edi],al
  4093f7:	dec    edx
  4093f8:	jne    0x4093ed
  4093fa:	mov    eax,edi
  4093fc:	sub    eax,DWORD PTR [ebp-0x8]
  4093ff:	jmp    0x409727
  409404:	cmp    esi,ecx
  409406:	je     0x4093fa
  409408:	lods   al,BYTE PTR ds:[esi]
  409409:	cmp    al,0x25
  40940b:	je     0x4093f6
  40940d:	lea    ebx,[esi-0x2]
  409410:	mov    DWORD PTR [ebp-0x18],ebx
  409413:	mov    BYTE PTR [ebp-0x19],al
  409416:	cmp    al,0x2d
  409418:	jne    0x40941f
  40941a:	cmp    esi,ecx
  40941c:	je     0x4093fa
  40941e:	lods   al,BYTE PTR ds:[esi]
  40941f:	call   0x4094a2
  409424:	cmp    al,0x3a
  409426:	jne    0x409432
  409428:	mov    DWORD PTR [ebp-0xc],ebx
  40942b:	cmp    esi,ecx
  40942d:	je     0x4093fa
  40942f:	lods   al,BYTE PTR ds:[esi]
  409430:	jmp    0x409413
  409432:	mov    DWORD PTR [ebp-0x20],ebx
  409435:	mov    ebx,0xffffffff
  40943a:	cmp    al,0x2e
  40943c:	jne    0x409448
  40943e:	cmp    esi,ecx
  409440:	je     0x4093fa
  409442:	lods   al,BYTE PTR ds:[esi]
  409443:	call   0x4094a2
  409448:	mov    DWORD PTR [ebp-0x24],ebx
  40944b:	mov    DWORD PTR [ebp-0x28],esi
  40944e:	push   ecx
  40944f:	push   edx
  409450:	call   0x4094ea
  409455:	pop    edx
  409456:	mov    ebx,DWORD PTR [ebp-0x20]
  409459:	sub    ebx,ecx
  40945b:	jae    0x40945f
  40945d:	xor    ebx,ebx
  40945f:	cmp    BYTE PTR [ebp-0x19],0x2d
  409463:	jne    0x40946f
  409465:	sub    edx,ecx
  409467:	jae    0x40946d
  409469:	add    ecx,edx
  40946b:	xor    edx,edx
  40946d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946f:	xchg   ecx,ebx
  409471:	sub    edx,ecx
  409473:	jae    0x409479
  409475:	add    ecx,edx
  409477:	xor    edx,edx
  409479:	mov    al,0x20
  40947b:	rep stos BYTE PTR es:[edi],al
  40947d:	xchg   ecx,ebx
  40947f:	sub    edx,ecx
  409481:	jae    0x409487
  409483:	add    ecx,edx
  409485:	xor    edx,edx
  409487:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409489:	cmp    DWORD PTR [ebp-0x10],0x0
  40948d:	je     0x409499
  40948f:	push   edx
  409490:	lea    eax,[ebp-0x10]
  409493:	call   0x409394
  409498:	pop    edx
  409499:	pop    ecx
  40949a:	mov    esi,DWORD PTR [ebp-0x28]
  40949d:	jmp    0x4093e9
  4094a2:	xor    ebx,ebx
  4094a4:	cmp    al,0x2a
  4094a6:	je     0x4094ca
  4094a8:	cmp    al,0x30
  4094aa:	jb     0x4094e9
  4094ac:	cmp    al,0x39
  4094ae:	ja     0x4094e9
  4094b0:	imul   ebx,ebx,0xa
  4094b6:	sub    al,0x30
  4094b8:	movzx  eax,al
  4094bb:	add    ebx,eax
  4094bd:	cmp    esi,ecx
  4094bf:	je     0x4094c4
  4094c1:	lods   al,BYTE PTR ds:[esi]
  4094c2:	jmp    0x4094a8
  4094c4:	pop    eax
  4094c5:	jmp    0x4093fa
  4094ca:	mov    eax,DWORD PTR [ebp-0xc]
  4094cd:	cmp    eax,DWORD PTR [ebp+0x8]
  4094d0:	jg     0x4094e4
  4094d2:	inc    DWORD PTR [ebp-0xc]
  4094d5:	mov    ebx,DWORD PTR [ebp+0xc]
  4094d8:	cmp    BYTE PTR [ebx+eax*8+0x4],0x0
  4094dd:	mov    ebx,DWORD PTR [ebx+eax*8]
  4094e0:	je     0x4094e4
  4094e2:	xor    ebx,ebx
  4094e4:	cmp    esi,ecx
  4094e6:	je     0x4094c4
  4094e8:	lods   al,BYTE PTR ds:[esi]
  4094e9:	ret    
  4094ea:	and    al,0xdf
  4094ec:	mov    cl,al
  4094ee:	mov    eax,0x1
  4094f3:	mov    ebx,DWORD PTR [ebp-0xc]
  4094f6:	cmp    ebx,DWORD PTR [ebp+0x8]
  4094f9:	jg     0x409557
  4094fb:	inc    DWORD PTR [ebp-0xc]
  4094fe:	mov    esi,DWORD PTR [ebp+0xc]
  409501:	lea    esi,[esi+ebx*8]
  409504:	mov    eax,DWORD PTR [esi]
  409506:	movzx  edx,BYTE PTR [esi+0x4]
  40950a:	jmp    DWORD PTR [edx*4+0x409511]
  409511:	mov    ds:0x55004095,al
  409516:	xchg   ebp,eax
  409517:	inc    eax
  409518:	add    bl,bl
  40951a:	xchg   ebp,eax
  40951b:	inc    eax
  40951c:	add    BYTE PTR [edx+0xb004096],ah
  409522:	xchg   esi,eax
  409523:	inc    eax
  409524:	add    BYTE PTR [ebx+0x63004096],al
  40952a:	xchg   esi,eax
  40952b:	inc    eax
  40952c:	add    BYTE PTR [ebp-0x6b],dl
  40952f:	inc    eax
  409530:	add    BYTE PTR [ebp-0x6b],dl
  409533:	inc    eax
  409534:	add    BYTE PTR [ebp-0x6b],dl
  409537:	inc    eax
  409538:	add    BYTE PTR [esi+edx*4],bl
  40953b:	inc    eax
  40953c:	add    BYTE PTR [edi-0x6a],al
  40953f:	inc    eax
  409540:	add    BYTE PTR [esi-0x15ffbf6a],bl
  409546:	xchg   ebp,eax
  409547:	inc    eax
  409548:	add    BYTE PTR [ebp-0x6b],dl
  40954b:	inc    eax
  40954c:	add    BYTE PTR [ebx],ah
  40954e:	xchg   esi,eax
  40954f:	inc    eax
  409550:	add    BYTE PTR [ebp+edx*4+0x40],ch
  409554:	add    BYTE PTR [ecx],dh
  409556:	shr    al,0xbb
  409559:	add    DWORD PTR [eax],eax
  40955b:	add    BYTE PTR [ebx+0x4d8be855],cl
  409561:	fsubr  DWORD PTR [ecx]
  409563:	ror    DWORD PTR [ebx-0x531703a3],1
  409569:	std    
  40956a:	(bad)  
  40956b:	dec    DWORD PTR [ebp+0x558bb775]
  409571:	fadd   QWORD PTR [ebx+0x27620fa]
  409577:	xor    edx,edx
  409579:	mov    ebx,ecx
  40957b:	sub    cl,0x44
  40957e:	je     0x408a0c
  409584:	mov    ecx,0x10
  409589:	cmp    bl,0x58
  40958c:	je     0x408a0c
  409592:	mov    ecx,0xa
  409597:	cmp    bl,0x55
  40959a:	je     0x408a0c
  4095a0:	jmp    0x409555
  4095a2:	lea    esi,[ebp-0x59]
  4095a5:	mov    edx,DWORD PTR [ebp-0x24]
  4095a8:	mov    ebx,ecx
  4095aa:	cmp    edx,0x10
  4095ad:	jbe    0x4095b1
  4095af:	xor    edx,edx
  4095b1:	sub    cl,0x44
  4095b4:	je     0x4089a0
  4095ba:	mov    ecx,0x10
  4095bf:	cmp    bl,0x58
  4095c2:	je     0x4089a0
  4095c8:	mov    ecx,0xa
  4095cd:	cmp    bl,0x55
  4095d0:	je     0x4089a0
  4095d6:	jmp    0x409555
  4095db:	cmp    cl,0x53
  4095de:	jne    0x409555
  4095e4:	mov    ecx,0x1
  4095e9:	ret    
  4095ea:	cmp    cl,0x53
  4095ed:	jne    0x409555
  4095f3:	cmp    WORD PTR [eax],0x1
  4095f7:	jbe    0x409608
  4095f9:	mov    edx,eax
  4095fb:	lea    eax,[ebp-0x10]
  4095fe:	call   0x409370
  409603:	mov    esi,DWORD PTR [ebp-0x10]
  409606:	jmp    0x409652
  409608:	xor    ecx,ecx
  40960a:	ret    
  40960b:	cmp    cl,0x53
  40960e:	jne    0x409555
  409614:	mov    esi,eax
  409616:	lods   al,BYTE PTR ds:[esi]
  409617:	movzx  ecx,al
  40961a:	jmp    0x409659
  40961c:	mov    esi,0x4051b0
  409621:	jmp    0x409628
  409623:	mov    esi,0x405210
  409628:	add    esi,DWORD PTR [ebp-0x4]
  40962b:	cmp    cl,0x53
  40962e:	jne    0x409555
  409634:	mov    edx,eax
  409636:	lea    eax,[ebp-0x14]
  409639:	push   ebx
  40963a:	mov    ebx,DWORD PTR [ebp-0x4]
  40963d:	call   esi
  40963f:	pop    ebx
  409640:	mov    esi,DWORD PTR [ebp-0x14]
  409643:	mov    eax,esi
  409645:	jmp    0x409652
  409647:	cmp    cl,0x53
  40964a:	jne    0x409555
  409650:	mov    esi,eax
  409652:	or     esi,esi
  409654:	je     0x409608
  409656:	mov    ecx,DWORD PTR [esi-0x4]
  409659:	cmp    ecx,DWORD PTR [ebp-0x24]
  40965c:	ja     0x40965f
  40965e:	ret    
  40965f:	mov    ecx,DWORD PTR [ebp-0x24]
  409662:	ret    
  409663:	cmp    cl,0x53
  409666:	jne    0x409555
  40966c:	mov    esi,eax
  40966e:	push   edi
  40966f:	mov    edi,eax
  409671:	xor    al,al
  409673:	mov    ecx,DWORD PTR [ebp-0x24]
  409676:	jecxz  0x40967d
  409678:	repnz scas al,BYTE PTR es:[edi]
  40967a:	jne    0x40967d
  40967c:	dec    edi
  40967d:	mov    ecx,edi
  40967f:	sub    ecx,esi
  409681:	pop    edi
  409682:	ret    
  409683:	cmp    cl,0x50
  409686:	jne    0x409555
  40968c:	mov    edx,0x8
  409691:	mov    ecx,0x10
  409696:	lea    esi,[ebp-0x59]
  409699:	jmp    0x4089a0
  40969e:	mov    bh,0x1
  4096a0:	jmp    0x4096a4
  4096a2:	mov    bh,0x0
  4096a4:	mov    esi,eax
  4096a6:	mov    bl,0x0
  4096a8:	cmp    cl,0x47
  4096ab:	je     0x4096ec
  4096ad:	mov    bl,0x1
  4096af:	cmp    cl,0x45
  4096b2:	je     0x4096ec
  4096b4:	mov    bl,0x2
  4096b6:	cmp    cl,0x46
  4096b9:	je     0x4096cd
  4096bb:	mov    bl,0x3
  4096bd:	cmp    cl,0x4e
  4096c0:	je     0x4096cd
  4096c2:	cmp    cl,0x4d
  4096c5:	jne    0x409555
  4096cb:	mov    bl,0x4
  4096cd:	mov    eax,0x12
  4096d2:	mov    edx,DWORD PTR [ebp-0x24]
  4096d5:	cmp    edx,eax
  4096d7:	jbe    0x4096fe
  4096d9:	mov    edx,0x2
  4096de:	cmp    cl,0x4d
  4096e1:	jne    0x4096fe
  4096e3:	movzx  edx,BYTE PTR ds:0x470808
  4096ea:	jmp    0x4096fe
  4096ec:	mov    eax,DWORD PTR [ebp-0x24]
  4096ef:	mov    edx,0x3
  4096f4:	cmp    eax,0x12
  4096f7:	jbe    0x4096fe
  4096f9:	mov    eax,0xf
  4096fe:	push   ebx
  4096ff:	push   eax
  409700:	push   edx
  409701:	lea    eax,[ebp-0x69]
  409704:	mov    edx,esi
  409706:	movzx  ecx,bh
  409709:	mov    ebx,DWORD PTR [ebp-0x4]
  40970c:	call   0x409d24
  409711:	mov    ecx,eax
  409713:	lea    esi,[ebp-0x69]
  409716:	ret    
  409717:	push   ebx
  409718:	push   eax
  409719:	lea    eax,[ebp-0x14]
  40971c:	mov    ebx,DWORD PTR [ebp-0x4]
  40971f:	call   0x404f88
  409724:	pop    eax
  409725:	pop    ebx
  409726:	ret    
  409727:	call   0x409717
  40972c:	pop    edi
  40972d:	pop    esi
  40972e:	pop    ebx
  40972f:	pop    ebx
  409730:	mov    esp,ebp
  409732:	pop    ebp
  409733:	ret    0xc
  409736:	mov    eax,eax
  409738:	push   ebp
  409739:	mov    ebp,esp
  40973b:	add    esp,0xffffff94
  40973e:	push   ebx
  40973f:	xor    ebx,ebx
  409741:	mov    DWORD PTR [ebp-0x14],ebx
  409744:	push   ebx
  409745:	push   esi
  409746:	push   edi
  409747:	mov    edi,eax
  409749:	mov    esi,ecx
  40974b:	xor    eax,eax
  40974d:	mov    DWORD PTR [ebp-0x4],eax
  409750:	add    ecx,DWORD PTR [ebp+0x14]
  409753:	mov    DWORD PTR [ebp-0x8],edi
  409756:	xor    eax,eax
  409758:	mov    DWORD PTR [ebp-0xc],eax
  40975b:	mov    DWORD PTR [ebp-0x10],eax
  40975e:	mov    DWORD PTR [ebp-0x14],eax
  409761:	or     edx,edx
  409763:	je     0x409772
  409765:	cmp    esi,ecx
  409767:	je     0x409772
  409769:	lods   al,BYTE PTR ds:[esi]
  40976a:	cmp    al,0x25
  40976c:	je     0x40977c
  40976e:	stos   BYTE PTR es:[edi],al
  40976f:	dec    edx
  409770:	jne    0x409765
  409772:	mov    eax,edi
  409774:	sub    eax,DWORD PTR [ebp-0x8]
  409777:	jmp    0x409aa3
  40977c:	cmp    esi,ecx
  40977e:	je     0x409772
  409780:	lods   al,BYTE PTR ds:[esi]
  409781:	cmp    al,0x25
  409783:	je     0x40976e
  409785:	lea    ebx,[esi-0x2]
  409788:	mov    DWORD PTR [ebp-0x18],ebx
  40978b:	mov    BYTE PTR [ebp-0x19],al
  40978e:	cmp    al,0x2d
  409790:	jne    0x409797
  409792:	cmp    esi,ecx
  409794:	je     0x409772
  409796:	lods   al,BYTE PTR ds:[esi]
  409797:	call   0x40981a
  40979c:	cmp    al,0x3a
  40979e:	jne    0x4097aa
  4097a0:	mov    DWORD PTR [ebp-0xc],ebx
  4097a3:	cmp    esi,ecx
  4097a5:	je     0x409772
  4097a7:	lods   al,BYTE PTR ds:[esi]
  4097a8:	jmp    0x40978b
  4097aa:	mov    DWORD PTR [ebp-0x20],ebx
  4097ad:	mov    ebx,0xffffffff
  4097b2:	cmp    al,0x2e
  4097b4:	jne    0x4097c0
  4097b6:	cmp    esi,ecx
  4097b8:	je     0x409772
  4097ba:	lods   al,BYTE PTR ds:[esi]
  4097bb:	call   0x40981a
  4097c0:	mov    DWORD PTR [ebp-0x24],ebx
  4097c3:	mov    DWORD PTR [ebp-0x28],esi
  4097c6:	push   ecx
  4097c7:	push   edx
  4097c8:	call   0x409862
  4097cd:	pop    edx
  4097ce:	mov    ebx,DWORD PTR [ebp-0x20]
  4097d1:	sub    ebx,ecx
  4097d3:	jae    0x4097d7
  4097d5:	xor    ebx,ebx
  4097d7:	cmp    BYTE PTR [ebp-0x19],0x2d
  4097db:	jne    0x4097e7
  4097dd:	sub    edx,ecx
  4097df:	jae    0x4097e5
  4097e1:	add    ecx,edx
  4097e3:	xor    edx,edx
  4097e5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e7:	xchg   ecx,ebx
  4097e9:	sub    edx,ecx
  4097eb:	jae    0x4097f1
  4097ed:	add    ecx,edx
  4097ef:	xor    edx,edx
  4097f1:	mov    al,0x20
  4097f3:	rep stos BYTE PTR es:[edi],al
  4097f5:	xchg   ecx,ebx
  4097f7:	sub    edx,ecx
  4097f9:	jae    0x4097ff
  4097fb:	add    ecx,edx
  4097fd:	xor    edx,edx
  4097ff:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409801:	cmp    DWORD PTR [ebp-0x10],0x0
  409805:	je     0x409811
  409807:	push   edx
  409808:	lea    eax,[ebp-0x10]
  40980b:	call   0x409394
  409810:	pop    edx
  409811:	pop    ecx
  409812:	mov    esi,DWORD PTR [ebp-0x28]
  409815:	jmp    0x409761
  40981a:	xor    ebx,ebx
  40981c:	cmp    al,0x2a
  40981e:	je     0x409842
  409820:	cmp    al,0x30
  409822:	jb     0x409861
  409824:	cmp    al,0x39
  409826:	ja     0x409861
  409828:	imul   ebx,ebx,0xa
  40982e:	sub    al,0x30
  409830:	movzx  eax,al
  409833:	add    ebx,eax
  409835:	cmp    esi,ecx
  409837:	je     0x40983c
  409839:	lods   al,BYTE PTR ds:[esi]
  40983a:	jmp    0x409820
  40983c:	pop    eax
  40983d:	jmp    0x409772
  409842:	mov    eax,DWORD PTR [ebp-0xc]
  409845:	cmp    eax,DWORD PTR [ebp+0xc]
  409848:	jg     0x40985c
  40984a:	inc    DWORD PTR [ebp-0xc]
  40984d:	mov    ebx,DWORD PTR [ebp+0x10]
  409850:	cmp    BYTE PTR [ebx+eax*8+0x4],0x0
  409855:	mov    ebx,DWORD PTR [ebx+eax*8]
  409858:	je     0x40985c
  40985a:	xor    ebx,ebx
  40985c:	cmp    esi,ecx
  40985e:	je     0x40983c
  409860:	lods   al,BYTE PTR ds:[esi]
  409861:	ret    
  409862:	and    al,0xdf
  409864:	mov    cl,al
  409866:	mov    eax,0x1
  40986b:	mov    ebx,DWORD PTR [ebp-0xc]
  40986e:	cmp    ebx,DWORD PTR [ebp+0xc]
  409871:	jg     0x4098cf
  409873:	inc    DWORD PTR [ebp-0xc]
  409876:	mov    esi,DWORD PTR [ebp+0x10]
  409879:	lea    esi,[esi+ebx*8]
  40987c:	mov    eax,DWORD PTR [esi]
  40987e:	movzx  edx,BYTE PTR [esi+0x4]
  409882:	jmp    DWORD PTR [edx*4+0x409889]
  409889:	sbb    bl,BYTE PTR [ecx-0x6732ffc0]
  40988f:	inc    eax
  409890:	add    BYTE PTR [ebx-0x67],dl
  409893:	inc    eax
  409894:	add    BYTE PTR [edx],bl
  409896:	call   0x40:0x99830040
  40989d:	sti    
  40989e:	cdq    
  40989f:	inc    eax
  4098a0:	add    bl,bl
  4098a2:	cdq    
  4098a3:	inc    eax
  4098a4:	add    ch,cl
  4098a6:	cwde   
  4098a7:	inc    eax
  4098a8:	add    ch,cl
  4098aa:	cwde   
  4098ab:	inc    eax
  4098ac:	add    ch,cl
  4098ae:	cwde   
  4098af:	inc    eax
  4098b0:	add    BYTE PTR [ecx+ebx*4-0x6640ffc0],dl
  4098b7:	inc    eax
  4098b8:	add    BYTE PTR [esi],dl
  4098ba:	call   0x40:0x99620040
  4098c1:	int    0x98
  4098c3:	inc    eax
  4098c4:	add    BYTE PTR [ebx-0x1bffbf67],bl
  4098ca:	cwde   
  4098cb:	inc    eax
  4098cc:	add    BYTE PTR [ecx],dh
  4098ce:	shr    al,0xbf
  4098d1:	add    DWORD PTR [eax],eax
  4098d3:	add    BYTE PTR [ebx+0x4d8be855],cl
  4098d9:	fsubr  DWORD PTR [ecx]
  4098db:	ror    DWORD PTR [ebx+0x34e8fc5d],1
  4098e1:	cli    
  4098e2:	(bad)  
  4098e3:	dec    DWORD PTR [ebp+0x558bb775]
  4098e9:	fadd   QWORD PTR [ebx+0x27620fa]
  4098ef:	xor    edx,edx
  4098f1:	mov    ebx,ecx
  4098f3:	sub    cl,0x44
  4098f6:	je     0x408a0c
  4098fc:	mov    ecx,0x10
  409901:	cmp    bl,0x58
  409904:	je     0x408a0c
  40990a:	mov    ecx,0xa
  40990f:	cmp    bl,0x55
  409912:	je     0x408a0c
  409918:	jmp    0x4098cd
  40991a:	lea    esi,[ebp-0x59]
  40991d:	mov    edx,DWORD PTR [ebp-0x24]
  409920:	mov    ebx,ecx
  409922:	cmp    edx,0x10
  409925:	jbe    0x409929
  409927:	xor    edx,edx
  409929:	sub    cl,0x44
  40992c:	je     0x4089a0
  409932:	mov    ecx,0x10
  409937:	cmp    bl,0x58
  40993a:	je     0x4089a0
  409940:	mov    ecx,0xa
  409945:	cmp    bl,0x55
  409948:	je     0x4089a0
  40994e:	jmp    0x4098cd
  409953:	cmp    cl,0x53
  409956:	jne    0x4098cd
  40995c:	mov    ecx,0x1
  409961:	ret    
  409962:	cmp    cl,0x53
  409965:	jne    0x4098cd
  40996b:	cmp    WORD PTR [eax],0x1
  40996f:	jbe    0x409980
  409971:	mov    edx,eax
  409973:	lea    eax,[ebp-0x10]
  409976:	call   0x409370
  40997b:	mov    esi,DWORD PTR [ebp-0x10]
  40997e:	jmp    0x4099ca
  409980:	xor    ecx,ecx
  409982:	ret    
  409983:	cmp    cl,0x53
  409986:	jne    0x4098cd
  40998c:	mov    esi,eax
  40998e:	lods   al,BYTE PTR ds:[esi]
  40998f:	movzx  ecx,al
  409992:	jmp    0x4099d1
  409994:	mov    esi,0x4051b0
  409999:	jmp    0x4099a0
  40999b:	mov    esi,0x405210
  4099a0:	add    esi,DWORD PTR [ebp-0x4]
  4099a3:	cmp    cl,0x53
  4099a6:	jne    0x4098cd
  4099ac:	mov    edx,eax
  4099ae:	lea    eax,[ebp-0x14]
  4099b1:	push   ebx
  4099b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4099b5:	call   esi
  4099b7:	pop    ebx
  4099b8:	mov    esi,DWORD PTR [ebp-0x14]
  4099bb:	mov    eax,esi
  4099bd:	jmp    0x4099ca
  4099bf:	cmp    cl,0x53
  4099c2:	jne    0x4098cd
  4099c8:	mov    esi,eax
  4099ca:	or     esi,esi
  4099cc:	je     0x409980
  4099ce:	mov    ecx,DWORD PTR [esi-0x4]
  4099d1:	cmp    ecx,DWORD PTR [ebp-0x24]
  4099d4:	ja     0x4099d7
  4099d6:	ret    
  4099d7:	mov    ecx,DWORD PTR [ebp-0x24]
  4099da:	ret    
  4099db:	cmp    cl,0x53
  4099de:	jne    0x4098cd
  4099e4:	mov    esi,eax
  4099e6:	push   edi
  4099e7:	mov    edi,eax
  4099e9:	xor    al,al
  4099eb:	mov    ecx,DWORD PTR [ebp-0x24]
  4099ee:	jecxz  0x4099f5
  4099f0:	repnz scas al,BYTE PTR es:[edi]
  4099f2:	jne    0x4099f5
  4099f4:	dec    edi
  4099f5:	mov    ecx,edi
  4099f7:	sub    ecx,esi
  4099f9:	pop    edi
  4099fa:	ret    
  4099fb:	cmp    cl,0x50
  4099fe:	jne    0x4098cd
  409a04:	mov    edx,0x8
  409a09:	mov    ecx,0x10
  409a0e:	lea    esi,[ebp-0x59]
  409a11:	jmp    0x4089a0
  409a16:	mov    bh,0x1
  409a18:	jmp    0x409a1c
  409a1a:	mov    bh,0x0
  409a1c:	mov    esi,eax
  409a1e:	mov    bl,0x0
  409a20:	cmp    cl,0x47
  409a23:	je     0x409a64
  409a25:	mov    bl,0x1
  409a27:	cmp    cl,0x45
  409a2a:	je     0x409a64
  409a2c:	mov    bl,0x2
  409a2e:	cmp    cl,0x46
  409a31:	je     0x409a45
  409a33:	mov    bl,0x3
  409a35:	cmp    cl,0x4e
  409a38:	je     0x409a45
  409a3a:	cmp    cl,0x4d
  409a3d:	jne    0x4098cd
  409a43:	mov    bl,0x4
  409a45:	mov    eax,0x12
  409a4a:	mov    edx,DWORD PTR [ebp-0x24]
  409a4d:	cmp    edx,eax
  409a4f:	jbe    0x409a76
  409a51:	mov    edx,0x2
  409a56:	cmp    cl,0x4d
  409a59:	jne    0x409a76
  409a5b:	mov    edx,DWORD PTR [ebp+0x8]
  409a5e:	movzx  edx,BYTE PTR [edx+0x4]
  409a62:	jmp    0x409a76
  409a64:	mov    eax,DWORD PTR [ebp-0x24]
  409a67:	mov    edx,0x3
  409a6c:	cmp    eax,0x12
  409a6f:	jbe    0x409a76
  409a71:	mov    eax,0xf
  409a76:	push   ebx
  409a77:	push   eax
  409a78:	push   edx
  409a79:	mov    edx,DWORD PTR [ebp+0x8]
  409a7c:	push   edx
  409a7d:	lea    eax,[ebp-0x69]
  409a80:	mov    edx,esi
  409a82:	movzx  ecx,bh
  409a85:	mov    ebx,DWORD PTR [ebp-0x4]
  409a88:	call   0x4093a0
  409a8d:	mov    ecx,eax
  409a8f:	lea    esi,[ebp-0x69]
  409a92:	ret    
  409a93:	push   ebx
  409a94:	push   eax
  409a95:	lea    eax,[ebp-0x14]
  409a98:	mov    ebx,DWORD PTR [ebp-0x4]
  409a9b:	call   0x404f88
  409aa0:	pop    eax
  409aa1:	pop    ebx
  409aa2:	ret    
  409aa3:	call   0x409a93
  409aa8:	pop    edi
  409aa9:	pop    esi
  409aaa:	pop    ebx
  409aab:	pop    ebx
  409aac:	mov    esp,ebp
  409aae:	pop    ebp
  409aaf:	ret    0x10
  409ab2:	mov    eax,eax
  409ab4:	push   ebp
  409ab5:	mov    ebp,esp
  409ab7:	push   ebx
  409ab8:	push   esi
  409ab9:	push   edi
  409aba:	mov    esi,ecx
  409abc:	mov    edi,edx
  409abe:	mov    ebx,eax
  409ac0:	test   ebx,ebx
  409ac2:	je     0x409aeb
  409ac4:	test   esi,esi
  409ac6:	je     0x409aeb
  409ac8:	mov    eax,esi
  409aca:	call   0x4091a4
  409acf:	push   eax
  409ad0:	mov    eax,DWORD PTR [ebp+0xc]
  409ad3:	push   eax
  409ad4:	mov    eax,DWORD PTR [ebp+0x8]
  409ad7:	push   eax
  409ad8:	mov    ecx,esi
  409ada:	mov    eax,ebx
  409adc:	mov    edx,edi
  409ade:	call   0x4093c0
  409ae3:	mov    BYTE PTR [ebx+eax*1],0x0
  409ae7:	mov    eax,ebx
  409ae9:	jmp    0x409aed
  409aeb:	xor    eax,eax
  409aed:	pop    edi
  409aee:	pop    esi
  409aef:	pop    ebx
  409af0:	pop    ebp
  409af1:	ret    0x8
  409af4:	push   ebp
  409af5:	mov    ebp,esp
  409af7:	push   ecx
  409af8:	mov    ecx,DWORD PTR [ebp+0x8]
  409afb:	xchg   ecx,eax
  409afc:	xchg   ecx,edx
  409afe:	call   0x409b20
  409b03:	pop    ebp
  409b04:	ret    0x4
  409b07:	nop
  409b08:	push   ebp
  409b09:	mov    ebp,esp
  409b0b:	push   ecx
  409b0c:	mov    ecx,DWORD PTR [ebp+0xc]
  409b0f:	push   ecx
  409b10:	mov    ecx,DWORD PTR [ebp+0x8]
  409b13:	xchg   ecx,eax
  409b14:	xchg   ecx,edx
  409b16:	call   0x409bfc
  409b1b:	pop    ebp
  409b1c:	ret    0x8
  409b1f:	nop
  409b20:	push   ebp
  409b21:	mov    ebp,esp
  409b23:	add    esp,0xfffff004
  409b29:	push   eax
  409b2a:	add    esp,0xfffffff4
  409b2d:	push   ebx
  409b2e:	push   esi
  409b2f:	push   edi
  409b30:	mov    DWORD PTR [ebp-0x8],ecx
  409b33:	mov    DWORD PTR [ebp-0x4],edx
  409b36:	mov    edi,eax
  409b38:	mov    ebx,0x1000
  409b3d:	mov    edx,DWORD PTR [ebp-0x4]
  409b40:	mov    eax,edx
  409b42:	test   eax,eax
  409b44:	je     0x409b4b
  409b46:	sub    eax,0x4
  409b49:	mov    eax,DWORD PTR [eax]
  409b4b:	cmp    eax,0xc00
  409b50:	jge    0x409b7e
  409b52:	mov    eax,edx
  409b54:	test   eax,eax
  409b56:	je     0x409b5d
  409b58:	sub    eax,0x4
  409b5b:	mov    eax,DWORD PTR [eax]
  409b5d:	push   eax
  409b5e:	mov    eax,DWORD PTR [ebp-0x8]
  409b61:	push   eax
  409b62:	mov    eax,DWORD PTR [ebp+0x8]
  409b65:	push   eax
  409b66:	mov    ecx,DWORD PTR [ebp-0x4]
  409b69:	lea    eax,[ebp-0x100c]
  409b6f:	mov    edx,0xfff
  409b74:	call   0x4093c0
  409b79:	mov    DWORD PTR [ebp-0xc],eax
  409b7c:	jmp    0x409b8e
  409b7e:	mov    eax,edx
  409b80:	test   eax,eax
  409b82:	je     0x409b89
  409b84:	sub    eax,0x4
  409b87:	mov    eax,DWORD PTR [eax]
  409b89:	mov    ebx,eax
  409b8b:	mov    DWORD PTR [ebp-0xc],ebx
  409b8e:	mov    eax,ebx
  409b90:	dec    eax
  409b91:	cmp    eax,DWORD PTR [ebp-0xc]
  409b94:	jg     0x409be3
  409b96:	jmp    0x409bcf
  409b98:	add    ebx,ebx
  409b9a:	mov    eax,edi
  409b9c:	call   0x404f88
  409ba1:	mov    eax,edi
  409ba3:	mov    edx,ebx
  409ba5:	call   0x4056a8
  409baa:	mov    esi,DWORD PTR [ebp-0x4]
  409bad:	test   esi,esi
  409baf:	je     0x409bb6
  409bb1:	sub    esi,0x4
  409bb4:	mov    esi,DWORD PTR [esi]
  409bb6:	push   esi
  409bb7:	mov    eax,DWORD PTR [ebp-0x8]
  409bba:	push   eax
  409bbb:	mov    eax,DWORD PTR [ebp+0x8]
  409bbe:	push   eax
  409bbf:	mov    ecx,DWORD PTR [ebp-0x4]
  409bc2:	mov    edx,ebx
  409bc4:	dec    edx
  409bc5:	mov    eax,DWORD PTR [edi]
  409bc7:	call   0x4093c0
  409bcc:	mov    DWORD PTR [ebp-0xc],eax
  409bcf:	mov    eax,ebx
  409bd1:	dec    eax
  409bd2:	cmp    eax,DWORD PTR [ebp-0xc]
  409bd5:	jle    0x409b98
  409bd7:	mov    eax,edi
  409bd9:	mov    edx,DWORD PTR [ebp-0xc]
  409bdc:	call   0x4056a8
  409be1:	jmp    0x409bf3
  409be3:	lea    edx,[ebp-0x100c]
  409be9:	mov    eax,edi
  409beb:	mov    ecx,DWORD PTR [ebp-0xc]
  409bee:	call   0x405078
  409bf3:	pop    edi
  409bf4:	pop    esi
  409bf5:	pop    ebx
  409bf6:	mov    esp,ebp
  409bf8:	pop    ebp
  409bf9:	ret    0x4
  409bfc:	push   ebp
  409bfd:	mov    ebp,esp
  409bff:	add    esp,0xfffff004
  409c05:	push   eax
  409c06:	add    esp,0xfffffff4
  409c09:	push   ebx
  409c0a:	push   esi
  409c0b:	push   edi
  409c0c:	mov    DWORD PTR [ebp-0x8],ecx
  409c0f:	mov    DWORD PTR [ebp-0x4],edx
  409c12:	mov    edi,eax
  409c14:	mov    ebx,0x1000
  409c19:	mov    edx,DWORD PTR [ebp-0x4]
  409c1c:	mov    eax,edx
  409c1e:	test   eax,eax
  409c20:	je     0x409c27
  409c22:	sub    eax,0x4
  409c25:	mov    eax,DWORD PTR [eax]
  409c27:	cmp    eax,0xc00
  409c2c:	jge    0x409c5e
  409c2e:	mov    eax,edx
  409c30:	test   eax,eax
  409c32:	je     0x409c39
  409c34:	sub    eax,0x4
  409c37:	mov    eax,DWORD PTR [eax]
  409c39:	push   eax
  409c3a:	mov    eax,DWORD PTR [ebp-0x8]
  409c3d:	push   eax
  409c3e:	mov    eax,DWORD PTR [ebp+0xc]
  409c41:	push   eax
  409c42:	mov    eax,DWORD PTR [ebp+0x8]
  409c45:	push   eax
  409c46:	mov    ecx,DWORD PTR [ebp-0x4]
  409c49:	lea    eax,[ebp-0x100c]
  409c4f:	mov    edx,0xfff
  409c54:	call   0x409738
  409c59:	mov    DWORD PTR [ebp-0xc],eax
  409c5c:	jmp    0x409c6e
  409c5e:	mov    eax,edx
  409c60:	test   eax,eax
  409c62:	je     0x409c69
  409c64:	sub    eax,0x4
  409c67:	mov    eax,DWORD PTR [eax]
  409c69:	mov    ebx,eax
  409c6b:	mov    DWORD PTR [ebp-0xc],ebx
  409c6e:	mov    eax,ebx
  409c70:	dec    eax
  409c71:	cmp    eax,DWORD PTR [ebp-0xc]
  409c74:	jg     0x409cc7
  409c76:	jmp    0x409cb3
  409c78:	add    ebx,ebx
  409c7a:	mov    eax,edi
  409c7c:	call   0x404f88
  409c81:	mov    eax,edi
  409c83:	mov    edx,ebx
  409c85:	call   0x4056a8
  409c8a:	mov    esi,DWORD PTR [ebp-0x4]
  409c8d:	test   esi,esi
  409c8f:	je     0x409c96
  409c91:	sub    esi,0x4
  409c94:	mov    esi,DWORD PTR [esi]
  409c96:	push   esi
  409c97:	mov    eax,DWORD PTR [ebp-0x8]
  409c9a:	push   eax
  409c9b:	mov    eax,DWORD PTR [ebp+0xc]
  409c9e:	push   eax
  409c9f:	mov    eax,DWORD PTR [ebp+0x8]
  409ca2:	push   eax
  409ca3:	mov    ecx,DWORD PTR [ebp-0x4]
  409ca6:	mov    edx,ebx
  409ca8:	dec    edx
  409ca9:	mov    eax,DWORD PTR [edi]
  409cab:	call   0x409738
  409cb0:	mov    DWORD PTR [ebp-0xc],eax
  409cb3:	mov    eax,ebx
  409cb5:	dec    eax
  409cb6:	cmp    eax,DWORD PTR [ebp-0xc]
  409cb9:	jle    0x409c78
  409cbb:	mov    eax,edi
  409cbd:	mov    edx,DWORD PTR [ebp-0xc]
  409cc0:	call   0x4056a8
  409cc5:	jmp    0x409cd7
  409cc7:	lea    edx,[ebp-0x100c]
  409ccd:	mov    eax,edi
  409ccf:	mov    ecx,DWORD PTR [ebp-0xc]
  409cd2:	call   0x405078
  409cd7:	pop    edi
  409cd8:	pop    esi
  409cd9:	pop    ebx
  409cda:	mov    esp,ebp
  409cdc:	pop    ebp
  409cdd:	ret    0x8
  409ce0:	push   esi
  409ce1:	xor    esi,esi
  409ce3:	stos   BYTE PTR es:[edi],al
  409ce4:	or     bl,bl
  409ce6:	jne    0x409cec
  409ce8:	xor    edx,edx
  409cea:	jmp    0x409cf6
  409cec:	or     edx,edx
  409cee:	jge    0x409cf6
  409cf0:	mov    al,0x2d
  409cf2:	neg    edx
  409cf4:	jmp    0x409cfc
  409cf6:	or     ah,ah
  409cf8:	je     0x409cfd
  409cfa:	mov    al,ah
  409cfc:	stos   BYTE PTR es:[edi],al
  409cfd:	xchg   edx,eax
  409cfe:	push   eax
  409cff:	mov    ebx,esp
  409d01:	xor    edx,edx
  409d03:	div    DWORD PTR [esi+0x46186c]
  409d09:	add    dl,0x30
  409d0c:	mov    BYTE PTR [ebx],dl
  409d0e:	inc    ebx
  409d0f:	dec    ecx
  409d10:	or     eax,eax
  409d12:	jne    0x409d01
  409d14:	or     ecx,ecx
  409d16:	jg     0x409d01
  409d18:	dec    ebx
  409d19:	mov    al,BYTE PTR [ebx]
  409d1b:	stos   BYTE PTR es:[edi],al
  409d1c:	cmp    ebx,esp
  409d1e:	jne    0x409d18
  409d20:	pop    eax
  409d21:	pop    esi
  409d22:	ret    
  409d23:	nop
  409d24:	push   ebp
  409d25:	mov    ebp,esp
  409d27:	add    esp,0xffffffd4
  409d2a:	push   edi
  409d2b:	push   esi
  409d2c:	push   ebx
  409d2d:	mov    DWORD PTR [ebp-0x4],eax
  409d30:	mov    al,ds:0x470807
  409d35:	mov    BYTE PTR [ebp-0x5],al
  409d38:	mov    al,ds:0x470806
  409d3d:	mov    BYTE PTR [ebp-0x6],al
  409d40:	mov    eax,ds:0x470800
  409d45:	mov    DWORD PTR [ebp-0xc],eax
  409d48:	mov    al,ds:0x470804
  409d4d:	mov    BYTE PTR [ebp-0xd],al
  409d50:	mov    al,ds:0x470805
  409d55:	mov    BYTE PTR [ebp-0xe],al
  409d58:	mov    DWORD PTR [ebp-0x14],0x0
  409d5f:	mov    eax,0x13
  409d64:	cmp    cl,0x0
  409d67:	jne    0x409d80
  409d69:	mov    eax,DWORD PTR [ebp+0xc]
  409d6c:	cmp    eax,0x2
  409d6f:	jge    0x409d76
  409d71:	mov    eax,0x2
  409d76:	cmp    eax,0x12
  409d79:	jle    0x409d80
  409d7b:	mov    eax,0x12
  409d80:	mov    DWORD PTR [ebp+0xc],eax
  409d83:	push   eax
  409d84:	mov    eax,0x270f
  409d89:	cmp    BYTE PTR [ebp+0x10],0x2
  409d8d:	jb     0x409d92
  409d8f:	mov    eax,DWORD PTR [ebp+0x8]
  409d92:	push   eax
  409d93:	lea    eax,[ebp-0x2c]
  409d96:	call   0x40a2d0
  409d9b:	mov    edi,DWORD PTR [ebp-0x4]
  409d9e:	movzx  eax,WORD PTR [ebp-0x2c]
  409da2:	sub    eax,0x7fff
  409da7:	cmp    eax,0x2
  409daa:	jae    0x409dc6
  409dac:	mov    ecx,eax
  409dae:	call   0x409e23
  409db3:	lea    esi,[ecx+ecx*2+0x409e14]
  409dba:	add    esi,DWORD PTR [ebp-0x14]
  409dbd:	mov    ecx,0x3
  409dc2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc4:	jmp    0x409df3
  409dc6:	lea    esi,[ebp-0x29]
  409dc9:	movzx  ebx,BYTE PTR [ebp+0x10]
  409dcd:	cmp    bl,0x1
  409dd0:	je     0x409de2
  409dd2:	cmp    bl,0x4
  409dd5:	ja     0x409de0
  409dd7:	movsx  eax,WORD PTR [ebp-0x2c]
  409ddb:	cmp    eax,DWORD PTR [ebp+0xc]
  409dde:	jle    0x409de2
  409de0:	mov    bl,0x0
  409de2:	lea    ebx,[ebx*4+0x409e00]
  409de9:	add    ebx,DWORD PTR [ebp-0x14]
  409dec:	mov    ebx,DWORD PTR [ebx]
  409dee:	add    ebx,DWORD PTR [ebp-0x14]
  409df1:	call   ebx
  409df3:	mov    eax,edi
  409df5:	sub    eax,DWORD PTR [ebp-0x4]
  409df8:	pop    ebx
  409df9:	pop    esi
  409dfa:	pop    edi
  409dfb:	jmp    0x409ff1
  409e00:	sub    eax,0x8900409e
  409e05:	sahf   
  409e06:	inc    eax
  409e07:	add    al,al
  409e09:	sahf   
  409e0a:	inc    eax
  409e0b:	add    al,al
  409e0d:	sahf   
  409e0e:	inc    eax
  409e0f:	add    BYTE PTR [edx],ch
  409e11:	lahf   
  409e12:	inc    eax
  409e13:	add    BYTE PTR [ecx+0x4e],cl
  409e16:	inc    esi
  409e17:	dec    esi
  409e18:	inc    ecx
  409e19:	dec    esi
  409e1a:	lods   al,BYTE PTR ds:[esi]
  409e1b:	or     al,al
  409e1d:	jne    0x409e22
  409e1f:	mov    al,0x30
  409e21:	dec    esi
  409e22:	ret    
  409e23:	cmp    BYTE PTR [ebp-0x2a],0x0
  409e27:	je     0x409e2c
  409e29:	mov    al,0x2d
  409e2b:	stos   BYTE PTR es:[edi],al
  409e2c:	ret    
  409e2d:	call   0x409e23
  409e32:	movsx  ecx,WORD PTR [ebp-0x2c]
  409e36:	xor    edx,edx
  409e38:	cmp    ecx,DWORD PTR [ebp+0xc]
  409e3b:	jg     0x409e5a
  409e3d:	cmp    ecx,0xfffffffd
  409e40:	jl     0x409e5a
  409e42:	or     ecx,ecx
  409e44:	jg     0x409e60
  409e46:	mov    al,0x30
  409e48:	stos   BYTE PTR es:[edi],al
  409e49:	cmp    BYTE PTR [esi],0x0
  409e4c:	je     0x409e88
  409e4e:	mov    al,BYTE PTR [ebp-0x5]
  409e51:	stos   BYTE PTR es:[edi],al
  409e52:	neg    ecx
  409e54:	mov    al,0x30
  409e56:	rep stos BYTE PTR es:[edi],al
  409e58:	jmp    0x409e74
  409e5a:	mov    ecx,0x1
  409e5f:	inc    edx
  409e60:	lods   al,BYTE PTR ds:[esi]
  409e61:	or     al,al
  409e63:	je     0x409e7c
  409e65:	stos   BYTE PTR es:[edi],al
  409e66:	loop   0x409e60
  409e68:	lods   al,BYTE PTR ds:[esi]
  409e69:	or     al,al
  409e6b:	je     0x409e80
  409e6d:	mov    ah,al
  409e6f:	mov    al,BYTE PTR [ebp-0x5]
  409e72:	stos   WORD PTR es:[edi],ax
  409e74:	lods   al,BYTE PTR ds:[esi]
  409e75:	or     al,al
  409e77:	je     0x409e80
  409e79:	stos   BYTE PTR es:[edi],al
  409e7a:	jmp    0x409e74
  409e7c:	mov    al,0x30
  409e7e:	rep stos BYTE PTR es:[edi],al
  409e80:	or     edx,edx
  409e82:	je     0x409e88
  409e84:	xor    eax,eax
  409e86:	jmp    0x409ea6
  409e88:	ret    
  409e89:	call   0x409e23
  409e8e:	call   0x409e1a
  409e93:	mov    ah,BYTE PTR [ebp-0x5]
  409e96:	stos   WORD PTR es:[edi],ax
  409e98:	mov    ecx,DWORD PTR [ebp+0xc]
  409e9b:	dec    ecx
  409e9c:	call   0x409e1a
  409ea1:	stos   BYTE PTR es:[edi],al
  409ea2:	loop   0x409e9c
  409ea4:	mov    ah,0x2b
  409ea6:	mov    ecx,DWORD PTR [ebp+0x8]
  409ea9:	cmp    ecx,0x4
  409eac:	jbe    0x409eb0
  409eae:	xor    ecx,ecx
  409eb0:	mov    al,0x45
  409eb2:	mov    bl,BYTE PTR [ebp-0x29]
  409eb5:	movsx  edx,WORD PTR [ebp-0x2c]
  409eb9:	dec    edx
  409eba:	call   0x409ce0
  409ebf:	ret    
  409ec0:	call   0x409e23
  409ec5:	mov    edx,DWORD PTR [ebp+0x8]
  409ec8:	cmp    edx,0x12
  409ecb:	jb     0x409ed2
  409ecd:	mov    edx,0x12
  409ed2:	movsx  ecx,WORD PTR [ebp-0x2c]
  409ed6:	or     ecx,ecx
  409ed8:	jg     0x409edf
  409eda:	mov    al,0x30
  409edc:	stos   BYTE PTR es:[edi],al
  409edd:	jmp    0x409f09
  409edf:	xor    ebx,ebx
  409ee1:	cmp    BYTE PTR [ebp+0x10],0x2
  409ee5:	je     0x409ef1
  409ee7:	mov    eax,ecx
  409ee9:	dec    eax
  409eea:	mov    bl,0x3
  409eec:	div    bl
  409eee:	mov    bl,ah
  409ef0:	inc    ebx
  409ef1:	call   0x409e1a
  409ef6:	stos   BYTE PTR es:[edi],al
  409ef7:	dec    ecx
  409ef8:	je     0x409f09
  409efa:	dec    ebx
  409efb:	jne    0x409ef1
  409efd:	mov    al,BYTE PTR [ebp-0x6]
  409f00:	test   al,al
  409f02:	je     0x409ef1
  409f04:	stos   BYTE PTR es:[edi],al
  409f05:	mov    bl,0x3
  409f07:	jmp    0x409ef1
  409f09:	or     edx,edx
  409f0b:	je     0x409f29
  409f0d:	mov    al,BYTE PTR [ebp-0x5]
  409f10:	test   al,al
  409f12:	je     0x409f15
  409f14:	stos   BYTE PTR es:[edi],al
  409f15:	jecxz  0x409f20
  409f17:	mov    al,0x30
  409f19:	stos   BYTE PTR es:[edi],al
  409f1a:	dec    edx
  409f1b:	je     0x409f29
  409f1d:	inc    ecx
  409f1e:	jne    0x409f19
  409f20:	call   0x409e1a
  409f25:	stos   BYTE PTR es:[edi],al
  409f26:	dec    edx
  409f27:	jne    0x409f20
  409f29:	ret    
  409f2a:	xor    ebx,ebx
  409f2c:	mov    bl,BYTE PTR [ebp-0xd]
  409f2f:	mov    ecx,0x3
  409f34:	cmp    BYTE PTR [ebp-0x2a],0x0
  409f38:	je     0x409f42
  409f3a:	mov    bl,BYTE PTR [ebp-0xe]
  409f3d:	mov    ecx,0x40f
  409f42:	cmp    bl,cl
  409f44:	jbe    0x409f48
  409f46:	mov    bl,cl
  409f48:	add    bl,ch
  409f4a:	lea    ebx,[ebx+ebx*4+0x409f8d]
  409f51:	add    ebx,DWORD PTR [ebp-0x14]
  409f54:	mov    ecx,0x5
  409f59:	mov    al,BYTE PTR [ebx]
  409f5b:	cmp    al,0x40
  409f5d:	je     0x409f7d
  409f5f:	push   ecx
  409f60:	push   ebx
  409f61:	cmp    al,0x24
  409f63:	je     0x409f6c
  409f65:	cmp    al,0x2a
  409f67:	je     0x409f73
  409f69:	stos   BYTE PTR es:[edi],al
  409f6a:	jmp    0x409f78
  409f6c:	call   0x409f7e
  409f71:	jmp    0x409f78
  409f73:	call   0x409ec5
  409f78:	pop    ebx
  409f79:	pop    ecx
  409f7a:	inc    ebx
  409f7b:	loop   0x409f59
  409f7d:	ret    
  409f7e:	push   esi
  409f7f:	mov    esi,DWORD PTR [ebp-0xc]
  409f82:	test   esi,esi
  409f84:	je     0x409f8b
  409f86:	mov    ecx,DWORD PTR [esi-0x4]
  409f89:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f8b:	pop    esi
  409f8c:	ret    
  409f8d:	and    al,0x2a
  409f8f:	inc    eax
  409f90:	inc    eax
  409f91:	inc    eax
  409f92:	sub    ah,BYTE PTR [eax+eax*2]
  409f95:	inc    eax
  409f96:	inc    eax
  409f97:	and    al,0x20
  409f99:	sub    al,BYTE PTR [eax+0x40]
  409f9c:	sub    ah,BYTE PTR [eax]
  409f9e:	and    al,0x40
  409fa0:	inc    eax
  409fa1:	sub    BYTE PTR [edx+ebp*1],ah
  409fa4:	sub    DWORD PTR [eax+0x2d],eax
  409fa7:	and    al,0x2a
  409fa9:	inc    eax
  409faa:	inc    eax
  409fab:	and    al,0x2d
  409fad:	sub    al,BYTE PTR [eax+0x40]
  409fb0:	and    al,0x2a
  409fb2:	sub    eax,0x2a284040
  409fb7:	and    al,0x29
  409fb9:	inc    eax
  409fba:	sub    eax,0x4040242a
  409fbf:	sub    ch,BYTE PTR ds:0x2a404024
  409fc5:	and    al,0x2d
  409fc7:	inc    eax
  409fc8:	inc    eax
  409fc9:	sub    eax,0x4024202a
  409fce:	sub    eax,0x402a2024
  409fd3:	sub    ah,BYTE PTR [eax]
  409fd5:	and    al,0x2d
  409fd7:	inc    eax
  409fd8:	and    al,0x20
  409fda:	sub    ch,BYTE PTR ds:0x2d202440
  409fe0:	sub    al,BYTE PTR [eax+0x2a]
  409fe3:	sub    eax,0x28402420
  409fe8:	and    al,0x20
  409fea:	sub    ch,BYTE PTR [ecx]
  409fec:	sub    BYTE PTR [edx],ch
  409fee:	and    BYTE PTR [ecx+ebp*1],ah
  409ff1:	mov    esp,ebp
  409ff3:	pop    ebp
  409ff4:	ret    0xc
  409ff7:	nop
  409ff8:	push   ebp
  409ff9:	mov    ebp,esp
  409ffb:	add    esp,0xffffffd4
  409ffe:	push   edi
  409fff:	push   esi
  40a000:	push   ebx
  40a001:	mov    DWORD PTR [ebp-0x4],eax
  40a004:	mov    eax,DWORD PTR [ebp+0x8]
  40a007:	mov    al,BYTE PTR [eax+0x3]
  40a00a:	mov    BYTE PTR [ebp-0x5],al
  40a00d:	mov    eax,DWORD PTR [ebp+0x8]
  40a010:	mov    al,BYTE PTR [eax+0x2]
  40a013:	mov    BYTE PTR [ebp-0x6],al
  40a016:	mov    eax,DWORD PTR [ebp+0x8]
  40a019:	mov    eax,DWORD PTR [eax+0x8]
  40a01c:	mov    DWORD PTR [ebp-0xc],eax
  40a01f:	mov    eax,DWORD PTR [ebp+0x8]
  40a022:	mov    al,BYTE PTR [eax]
  40a024:	mov    BYTE PTR [ebp-0xd],al
  40a027:	mov    eax,DWORD PTR [ebp+0x8]
  40a02a:	mov    al,BYTE PTR [eax+0x1]
  40a02d:	mov    BYTE PTR [ebp-0xe],al
  40a030:	mov    DWORD PTR [ebp-0x14],0x0
  40a037:	mov    eax,0x13
  40a03c:	cmp    cl,0x0
  40a03f:	jne    0x40a058
  40a041:	mov    eax,DWORD PTR [ebp+0x10]
  40a044:	cmp    eax,0x2
  40a047:	jge    0x40a04e
  40a049:	mov    eax,0x2
  40a04e:	cmp    eax,0x12
  40a051:	jle    0x40a058
  40a053:	mov    eax,0x12
  40a058:	mov    DWORD PTR [ebp+0x10],eax
  40a05b:	push   eax
  40a05c:	mov    eax,0x270f
  40a061:	cmp    BYTE PTR [ebp+0x14],0x2
  40a065:	jb     0x40a06a
  40a067:	mov    eax,DWORD PTR [ebp+0xc]
  40a06a:	push   eax
  40a06b:	lea    eax,[ebp-0x2c]
  40a06e:	call   0x40a2d0
  40a073:	mov    edi,DWORD PTR [ebp-0x4]
  40a076:	movzx  eax,WORD PTR [ebp-0x2c]
  40a07a:	sub    eax,0x7fff
  40a07f:	cmp    eax,0x2
  40a082:	jae    0x40a09e
  40a084:	mov    ecx,eax
  40a086:	call   0x40a0fb
  40a08b:	lea    esi,[ecx+ecx*2+0x40a0ec]
  40a092:	add    esi,DWORD PTR [ebp-0x14]
  40a095:	mov    ecx,0x3
  40a09a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a09c:	jmp    0x40a0cb
  40a09e:	lea    esi,[ebp-0x29]
  40a0a1:	movzx  ebx,BYTE PTR [ebp+0x14]
  40a0a5:	cmp    bl,0x1
  40a0a8:	je     0x40a0ba
  40a0aa:	cmp    bl,0x4
  40a0ad:	ja     0x40a0b8
  40a0af:	movsx  eax,WORD PTR [ebp-0x2c]
  40a0b3:	cmp    eax,DWORD PTR [ebp+0x10]
  40a0b6:	jle    0x40a0ba
  40a0b8:	mov    bl,0x0
  40a0ba:	lea    ebx,[ebx*4+0x40a0d8]
  40a0c1:	add    ebx,DWORD PTR [ebp-0x14]
  40a0c4:	mov    ebx,DWORD PTR [ebx]
  40a0c6:	add    ebx,DWORD PTR [ebp-0x14]
  40a0c9:	call   ebx
  40a0cb:	mov    eax,edi
  40a0cd:	sub    eax,DWORD PTR [ebp-0x4]
  40a0d0:	pop    ebx
  40a0d1:	pop    esi
  40a0d2:	pop    edi
  40a0d3:	jmp    0x40a2c9
  40a0d8:	add    eax,0x610040a1
  40a0dd:	mov    eax,ds:0xa1980040
  40a0e2:	inc    eax
  40a0e3:	add    BYTE PTR [eax+0x20040a1],bl
  40a0e9:	mov    ds:0x4e490040,al
  40a0ee:	inc    esi
  40a0ef:	dec    esi
  40a0f0:	inc    ecx
  40a0f1:	dec    esi
  40a0f2:	lods   al,BYTE PTR ds:[esi]
  40a0f3:	or     al,al
  40a0f5:	jne    0x40a0fa
  40a0f7:	mov    al,0x30
  40a0f9:	dec    esi
  40a0fa:	ret    
  40a0fb:	cmp    BYTE PTR [ebp-0x2a],0x0
  40a0ff:	je     0x40a104
  40a101:	mov    al,0x2d
  40a103:	stos   BYTE PTR es:[edi],al
  40a104:	ret    
  40a105:	call   0x40a0fb
  40a10a:	movsx  ecx,WORD PTR [ebp-0x2c]
  40a10e:	xor    edx,edx
  40a110:	cmp    ecx,DWORD PTR [ebp+0x10]
  40a113:	jg     0x40a132
  40a115:	cmp    ecx,0xfffffffd
  40a118:	jl     0x40a132
  40a11a:	or     ecx,ecx
  40a11c:	jg     0x40a138
  40a11e:	mov    al,0x30
  40a120:	stos   BYTE PTR es:[edi],al
  40a121:	cmp    BYTE PTR [esi],0x0
  40a124:	je     0x40a160
  40a126:	mov    al,BYTE PTR [ebp-0x5]
  40a129:	stos   BYTE PTR es:[edi],al
  40a12a:	neg    ecx
  40a12c:	mov    al,0x30
  40a12e:	rep stos BYTE PTR es:[edi],al
  40a130:	jmp    0x40a14c
  40a132:	mov    ecx,0x1
  40a137:	inc    edx
  40a138:	lods   al,BYTE PTR ds:[esi]
  40a139:	or     al,al
  40a13b:	je     0x40a154
  40a13d:	stos   BYTE PTR es:[edi],al
  40a13e:	loop   0x40a138
  40a140:	lods   al,BYTE PTR ds:[esi]
  40a141:	or     al,al
  40a143:	je     0x40a158
  40a145:	mov    ah,al
  40a147:	mov    al,BYTE PTR [ebp-0x5]
  40a14a:	stos   WORD PTR es:[edi],ax
  40a14c:	lods   al,BYTE PTR ds:[esi]
  40a14d:	or     al,al
  40a14f:	je     0x40a158
  40a151:	stos   BYTE PTR es:[edi],al
  40a152:	jmp    0x40a14c
  40a154:	mov    al,0x30
  40a156:	rep stos BYTE PTR es:[edi],al
  40a158:	or     edx,edx
  40a15a:	je     0x40a160
  40a15c:	xor    eax,eax
  40a15e:	jmp    0x40a17e
  40a160:	ret    
  40a161:	call   0x40a0fb
  40a166:	call   0x40a0f2
  40a16b:	mov    ah,BYTE PTR [ebp-0x5]
  40a16e:	stos   WORD PTR es:[edi],ax
  40a170:	mov    ecx,DWORD PTR [ebp+0x10]
  40a173:	dec    ecx
  40a174:	call   0x40a0f2
  40a179:	stos   BYTE PTR es:[edi],al
  40a17a:	loop   0x40a174
  40a17c:	mov    ah,0x2b
  40a17e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a181:	cmp    ecx,0x4
  40a184:	jbe    0x40a188
  40a186:	xor    ecx,ecx
  40a188:	mov    al,0x45
  40a18a:	mov    bl,BYTE PTR [ebp-0x29]
  40a18d:	movsx  edx,WORD PTR [ebp-0x2c]
  40a191:	dec    edx
  40a192:	call   0x409ce0
  40a197:	ret    
  40a198:	call   0x40a0fb
  40a19d:	mov    edx,DWORD PTR [ebp+0xc]
  40a1a0:	cmp    edx,0x12
  40a1a3:	jb     0x40a1aa
  40a1a5:	mov    edx,0x12
  40a1aa:	movsx  ecx,WORD PTR [ebp-0x2c]
  40a1ae:	or     ecx,ecx
  40a1b0:	jg     0x40a1b7
  40a1b2:	mov    al,0x30
  40a1b4:	stos   BYTE PTR es:[edi],al
  40a1b5:	jmp    0x40a1e1
  40a1b7:	xor    ebx,ebx
  40a1b9:	cmp    BYTE PTR [ebp+0x14],0x2
  40a1bd:	je     0x40a1c9
  40a1bf:	mov    eax,ecx
  40a1c1:	dec    eax
  40a1c2:	mov    bl,0x3
  40a1c4:	div    bl
  40a1c6:	mov    bl,ah
  40a1c8:	inc    ebx
  40a1c9:	call   0x40a0f2
  40a1ce:	stos   BYTE PTR es:[edi],al
  40a1cf:	dec    ecx
  40a1d0:	je     0x40a1e1
  40a1d2:	dec    ebx
  40a1d3:	jne    0x40a1c9
  40a1d5:	mov    al,BYTE PTR [ebp-0x6]
  40a1d8:	test   al,al
  40a1da:	je     0x40a1c9
  40a1dc:	stos   BYTE PTR es:[edi],al
  40a1dd:	mov    bl,0x3
  40a1df:	jmp    0x40a1c9
  40a1e1:	or     edx,edx
  40a1e3:	je     0x40a201
  40a1e5:	mov    al,BYTE PTR [ebp-0x5]
  40a1e8:	test   al,al
  40a1ea:	je     0x40a1ed
  40a1ec:	stos   BYTE PTR es:[edi],al
  40a1ed:	jecxz  0x40a1f8
  40a1ef:	mov    al,0x30
  40a1f1:	stos   BYTE PTR es:[edi],al
  40a1f2:	dec    edx
  40a1f3:	je     0x40a201
  40a1f5:	inc    ecx
  40a1f6:	jne    0x40a1f1
  40a1f8:	call   0x40a0f2
  40a1fd:	stos   BYTE PTR es:[edi],al
  40a1fe:	dec    edx
  40a1ff:	jne    0x40a1f8
  40a201:	ret    
  40a202:	xor    ebx,ebx
  40a204:	mov    bl,BYTE PTR [ebp-0xd]
  40a207:	mov    ecx,0x3
  40a20c:	cmp    BYTE PTR [ebp-0x2a],0x0
  40a210:	je     0x40a21a
  40a212:	mov    bl,BYTE PTR [ebp-0xe]
  40a215:	mov    ecx,0x40f
  40a21a:	cmp    bl,cl
  40a21c:	jbe    0x40a220
  40a21e:	mov    bl,cl
  40a220:	add    bl,ch
  40a222:	lea    ebx,[ebx+ebx*4+0x40a265]
  40a229:	add    ebx,DWORD PTR [ebp-0x14]
  40a22c:	mov    ecx,0x5
  40a231:	mov    al,BYTE PTR [ebx]
  40a233:	cmp    al,0x40
  40a235:	je     0x40a255
  40a237:	push   ecx
  40a238:	push   ebx
  40a239:	cmp    al,0x24
  40a23b:	je     0x40a244
  40a23d:	cmp    al,0x2a
  40a23f:	je     0x40a24b
  40a241:	stos   BYTE PTR es:[edi],al
  40a242:	jmp    0x40a250
  40a244:	call   0x40a256
  40a249:	jmp    0x40a250
  40a24b:	call   0x40a19d
  40a250:	pop    ebx
  40a251:	pop    ecx
  40a252:	inc    ebx
  40a253:	loop   0x40a231
  40a255:	ret    
  40a256:	push   esi
  40a257:	mov    esi,DWORD PTR [ebp-0xc]
  40a25a:	test   esi,esi
  40a25c:	je     0x40a263
  40a25e:	mov    ecx,DWORD PTR [esi-0x4]
  40a261:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a263:	pop    esi
  40a264:	ret    
  40a265:	and    al,0x2a
  40a267:	inc    eax
  40a268:	inc    eax
  40a269:	inc    eax
  40a26a:	sub    ah,BYTE PTR [eax+eax*2]
  40a26d:	inc    eax
  40a26e:	inc    eax
  40a26f:	and    al,0x20
  40a271:	sub    al,BYTE PTR [eax+0x40]
  40a274:	sub    ah,BYTE PTR [eax]
  40a276:	and    al,0x40
  40a278:	inc    eax
  40a279:	sub    BYTE PTR [edx+ebp*1],ah
  40a27c:	sub    DWORD PTR [eax+0x2d],eax
  40a27f:	and    al,0x2a
  40a281:	inc    eax
  40a282:	inc    eax
  40a283:	and    al,0x2d
  40a285:	sub    al,BYTE PTR [eax+0x40]
  40a288:	and    al,0x2a
  40a28a:	sub    eax,0x2a284040
  40a28f:	and    al,0x29
  40a291:	inc    eax
  40a292:	sub    eax,0x4040242a
  40a297:	sub    ch,BYTE PTR ds:0x2a404024
  40a29d:	and    al,0x2d
  40a29f:	inc    eax
  40a2a0:	inc    eax
  40a2a1:	sub    eax,0x4024202a
  40a2a6:	sub    eax,0x402a2024
  40a2ab:	sub    ah,BYTE PTR [eax]
  40a2ad:	and    al,0x2d
  40a2af:	inc    eax
  40a2b0:	and    al,0x20
  40a2b2:	sub    ch,BYTE PTR ds:0x2d202440
  40a2b8:	sub    al,BYTE PTR [eax+0x2a]
  40a2bb:	sub    eax,0x28402420
  40a2c0:	and    al,0x20
  40a2c2:	sub    ch,BYTE PTR [ecx]
  40a2c4:	sub    BYTE PTR [edx],ch
  40a2c6:	and    BYTE PTR [ecx+ebp*1],ah
  40a2c9:	mov    esp,ebp
  40a2cb:	pop    ebp
  40a2cc:	ret    0x10
  40a2cf:	nop
  40a2d0:	push   ebp
  40a2d1:	mov    ebp,esp
  40a2d3:	add    esp,0xffffffe0
  40a2d6:	push   edi
  40a2d7:	push   esi
  40a2d8:	push   ebx
  40a2d9:	mov    ebx,eax
  40a2db:	mov    esi,edx
  40a2dd:	mov    DWORD PTR [ebp-0x4],0x0
  40a2e4:	cmp    cl,0x0
  40a2e7:	je     0x40a2f3
  40a2e9:	call   0x40a41f
  40a2ee:	jmp    0x40a4f3
  40a2f3:	call   0x40a2fd
  40a2f8:	jmp    0x40a4f3
  40a2fd:	mov    ax,WORD PTR [esi+0x8]
  40a301:	mov    edx,eax
  40a303:	and    eax,0x7fff
  40a308:	je     0x40a328
  40a30a:	cmp    eax,0x7fff
  40a30f:	jne    0x40a333
  40a311:	test   WORD PTR [esi+0x6],0x8000
  40a317:	je     0x40a32a
  40a319:	cmp    DWORD PTR [esi],0x0
  40a31c:	jne    0x40a327
  40a31e:	cmp    DWORD PTR [esi+0x4],0x80000000
  40a325:	je     0x40a32a
  40a327:	inc    eax
  40a328:	xor    edx,edx
  40a32a:	mov    BYTE PTR [ebx+0x3],0x0
  40a32e:	jmp    0x40a400
  40a333:	fld    TBYTE PTR [esi]
  40a335:	sub    eax,0x3fff
  40a33a:	imul   eax,eax,0x4d10
  40a340:	sar    eax,0x10
  40a343:	inc    eax
  40a344:	mov    DWORD PTR [ebp-0x8],eax
  40a347:	mov    eax,0x12
  40a34c:	sub    eax,DWORD PTR [ebp-0x8]
  40a34f:	fabs   
  40a351:	push   ebx
  40a352:	mov    ebx,DWORD PTR [ebp-0x4]
  40a355:	call   0x403b74
  40a35a:	pop    ebx
  40a35b:	frndint 
  40a35d:	mov    edi,DWORD PTR [ebp-0x4]
  40a360:	fld    TBYTE PTR [edi+0x461860]
  40a366:	fcomp  st(1)
  40a368:	fstsw  WORD PTR [ebp-0xa]
  40a36c:	fwait
  40a36d:	test   WORD PTR [ebp-0xa],0x4100
  40a373:	je     0x40a37e
  40a375:	fidiv  DWORD PTR [edi+0x46186c]
  40a37b:	inc    DWORD PTR [ebp-0x8]
  40a37e:	fbstp  TBYTE PTR [ebp-0x18]
  40a381:	lea    edi,[ebx+0x3]
  40a384:	mov    edx,0x9
  40a389:	fwait
  40a38a:	mov    al,BYTE PTR [edx+ebp*1-0x19]
  40a38e:	mov    ah,al
  40a390:	shr    al,0x4
  40a393:	and    ah,0xf
  40a396:	add    ax,0x3030
  40a39a:	stos   WORD PTR es:[edi],ax
  40a39c:	dec    edx
  40a39d:	jne    0x40a38a
  40a39f:	xor    al,al
  40a3a1:	stos   BYTE PTR es:[edi],al
  40a3a2:	mov    edi,DWORD PTR [ebp-0x8]
  40a3a5:	add    edi,DWORD PTR [ebp+0x8]
  40a3a8:	jns    0x40a3b1
  40a3aa:	xor    eax,eax
  40a3ac:	jmp    0x40a328
  40a3b1:	cmp    edi,DWORD PTR [ebp+0xc]
  40a3b4:	jb     0x40a3b9
  40a3b6:	mov    edi,DWORD PTR [ebp+0xc]
  40a3b9:	cmp    edi,0x12
  40a3bc:	jae    0x40a3e5
  40a3be:	cmp    BYTE PTR [ebx+edi*1+0x3],0x35
  40a3c3:	jb     0x40a3ea
  40a3c5:	mov    BYTE PTR [ebx+edi*1+0x3],0x0
  40a3ca:	dec    edi
  40a3cb:	js     0x40a3da
  40a3cd:	inc    BYTE PTR [ebx+edi*1+0x3]
  40a3d1:	cmp    BYTE PTR [ebx+edi*1+0x3],0x39
  40a3d6:	ja     0x40a3c5
  40a3d8:	jmp    0x40a3f9
  40a3da:	mov    WORD PTR [ebx+0x3],0x31
  40a3e0:	inc    DWORD PTR [ebp-0x8]
  40a3e3:	jmp    0x40a3f9
  40a3e5:	mov    edi,0x12
  40a3ea:	mov    BYTE PTR [ebx+edi*1+0x3],0x0
  40a3ef:	dec    edi
  40a3f0:	js     0x40a40b
  40a3f2:	cmp    BYTE PTR [ebx+edi*1+0x3],0x30
  40a3f7:	je     0x40a3ea
  40a3f9:	mov    dx,WORD PTR [esi+0x8]
  40a3fd:	mov    eax,DWORD PTR [ebp-0x8]
  40a400:	shr    dx,0xf
  40a404:	mov    WORD PTR [ebx],ax
  40a407:	mov    BYTE PTR [ebx+0x2],dl
  40a40a:	ret    
  40a40b:	xor    edx,edx
  40a40d:	jmp    0x40a3fd
  40a40f:	or     al,BYTE PTR [eax]
  40a411:	add    BYTE PTR [eax],al
  40a413:	add    BYTE PTR fs:[eax],al
  40a416:	add    al,ch
  40a418:	add    eax,DWORD PTR [eax]
  40a41a:	add    BYTE PTR [eax],dl
  40a41c:	daa    
  40a41d:	add    BYTE PTR [eax],al
  40a41f:	mov    eax,DWORD PTR [esi]
  40a421:	mov    edx,DWORD PTR [esi+0x4]
  40a424:	mov    ecx,eax
  40a426:	or     ecx,edx
  40a428:	je     0x40a4e5
  40a42e:	or     edx,edx
  40a430:	jns    0x40a439
  40a432:	neg    edx
  40a434:	neg    eax
  40a436:	sbb    edx,0x0
  40a439:	xor    ecx,ecx
  40a43b:	mov    edi,DWORD PTR [ebp+0x8]
  40a43e:	or     edi,edi
  40a440:	jge    0x40a444
  40a442:	xor    edi,edi
  40a444:	cmp    edi,0x4
  40a447:	jl     0x40a468
  40a449:	mov    edi,0x4
  40a44e:	inc    ecx
  40a44f:	sub    eax,0xa7640000
  40a454:	sbb    edx,0xde0b6b3
  40a45a:	jae    0x40a44e
  40a45c:	dec    ecx
  40a45d:	add    eax,0xa7640000
  40a462:	adc    edx,0xde0b6b3
  40a468:	mov    DWORD PTR [ebp-0x20],eax
  40a46b:	mov    DWORD PTR [ebp-0x1c],edx
  40a46e:	fild   QWORD PTR [ebp-0x20]
  40a471:	mov    edx,edi
  40a473:	mov    eax,0x4
  40a478:	sub    eax,edx
  40a47a:	je     0x40a486
  40a47c:	mov    edi,DWORD PTR [ebp-0x4]
  40a47f:	fidiv  DWORD PTR [edi+eax*4+0x40a40b]
  40a486:	fbstp  TBYTE PTR [ebp-0x18]
  40a489:	lea    edi,[ebx+0x3]
  40a48c:	fwait
  40a48d:	or     ecx,ecx
  40a48f:	jne    0x40a4ac
  40a491:	mov    ecx,0x9
  40a496:	mov    al,BYTE PTR [ecx+ebp*1-0x19]
  40a49a:	mov    ah,al
  40a49c:	shr    al,0x4
  40a49f:	jne    0x40a4bf
  40a4a1:	mov    al,ah
  40a4a3:	and    al,0xf
  40a4a5:	jne    0x40a4c6
  40a4a7:	dec    ecx
  40a4a8:	jne    0x40a496
  40a4aa:	jmp    0x40a4e5
  40a4ac:	mov    al,cl
  40a4ae:	add    al,0x30
  40a4b0:	stos   BYTE PTR es:[edi],al
  40a4b1:	mov    ecx,0x9
  40a4b6:	mov    al,BYTE PTR [ecx+ebp*1-0x19]
  40a4ba:	mov    ah,al
  40a4bc:	shr    al,0x4
  40a4bf:	add    al,0x30
  40a4c1:	stos   BYTE PTR es:[edi],al
  40a4c2:	mov    al,ah
  40a4c4:	and    al,0xf
  40a4c6:	add    al,0x30
  40a4c8:	stos   BYTE PTR es:[edi],al
  40a4c9:	dec    ecx
  40a4ca:	jne    0x40a4b6
  40a4cc:	mov    eax,edi
  40a4ce:	lea    ecx,[ebx+edx*1+0x3]
  40a4d2:	sub    eax,ecx
  40a4d4:	mov    BYTE PTR [edi],0x0
  40a4d7:	dec    edi
  40a4d8:	cmp    BYTE PTR [edi],0x30
  40a4db:	je     0x40a4d4
  40a4dd:	mov    edx,DWORD PTR [esi+0x4]
  40a4e0:	shr    edx,0x1f
  40a4e3:	jmp    0x40a4ec
  40a4e5:	xor    eax,eax
  40a4e7:	xor    edx,edx
  40a4e9:	mov    BYTE PTR [ebx+0x3],al
  40a4ec:	mov    WORD PTR [ebx],ax
  40a4ef:	mov    BYTE PTR [ebx+0x2],dl
  40a4f2:	ret    
  40a4f3:	pop    ebx
  40a4f4:	pop    esi
  40a4f5:	pop    edi
  40a4f6:	mov    esp,ebp
  40a4f8:	pop    ebp
  40a4f9:	ret    0x8
  40a4fc:	push   ebp
  40a4fd:	mov    ebp,esp
  40a4ff:	add    esp,0xfffffff4
  40a502:	push   edi
  40a503:	push   esi
  40a504:	push   ebx
  40a505:	mov    esi,eax
  40a507:	mov    edi,edx
  40a509:	mov    DWORD PTR [ebp-0x4],0x0
  40a510:	mov    al,ds:0x470807
  40a515:	mov    BYTE PTR [ebp-0x5],al
  40a518:	mov    ebx,ecx
  40a51a:	fstcw  WORD PTR [ebp-0x8]
  40a51e:	fclex  
  40a521:	fldcw  WORD PTR ds:0x461870
  40a527:	fldz   
  40a529:	call   0x40a5b3
  40a52e:	mov    bh,BYTE PTR [esi]
  40a530:	cmp    bh,0x2b
  40a533:	je     0x40a53a
  40a535:	cmp    bh,0x2d
  40a538:	jne    0x40a53b
  40a53a:	inc    esi
  40a53b:	mov    ecx,esi
  40a53d:	call   0x40a5be
  40a542:	xor    edx,edx
  40a544:	mov    al,BYTE PTR [esi]
  40a546:	cmp    al,BYTE PTR [ebp-0x5]
  40a549:	jne    0x40a553
  40a54b:	inc    esi
  40a54c:	call   0x40a5be
  40a551:	neg    edx
  40a553:	cmp    ecx,esi
  40a555:	je     0x40a5a6
  40a557:	mov    al,BYTE PTR [esi]
  40a559:	and    al,0xdf
  40a55b:	cmp    al,0x45
  40a55d:	jne    0x40a569
  40a55f:	inc    esi
  40a560:	push   edx
  40a561:	call   0x40a5da
  40a566:	pop    eax
  40a567:	add    edx,eax
  40a569:	call   0x40a5b3
  40a56e:	cmp    BYTE PTR [esi],0x0
  40a571:	jne    0x40a5a6
  40a573:	mov    eax,edx
  40a575:	cmp    bl,0x1
  40a578:	jne    0x40a57d
  40a57a:	add    eax,0x4
  40a57d:	push   ebx
  40a57e:	mov    ebx,DWORD PTR [ebp-0x4]
  40a581:	call   0x403b74
  40a586:	pop    ebx
  40a587:	cmp    bh,0x2d
  40a58a:	jne    0x40a58e
  40a58c:	fchs   
  40a58e:	cmp    bl,0x0
  40a591:	je     0x40a597
  40a593:	fistp  QWORD PTR [edi]
  40a595:	jmp    0x40a599
  40a597:	fstp   TBYTE PTR [edi]
  40a599:	fstsw  ax
  40a59c:	test   ax,0x9
  40a5a0:	jne    0x40a5a8
  40a5a2:	mov    al,0x1
  40a5a4:	jmp    0x40a5aa
  40a5a6:	fstp   st(0)
  40a5a8:	xor    eax,eax
  40a5aa:	fclex  
  40a5ad:	fldcw  WORD PTR [ebp-0x8]
  40a5b0:	fwait
  40a5b1:	jmp    0x40a609
  40a5b3:	lods   al,BYTE PTR ds:[esi]
  40a5b4:	or     al,al
  40a5b6:	je     0x40a5bc
  40a5b8:	cmp    al,0x20
  40a5ba:	je     0x40a5b3
  40a5bc:	dec    esi
  40a5bd:	ret    
  40a5be:	xor    eax,eax
  40a5c0:	xor    edx,edx
  40a5c2:	lods   al,BYTE PTR ds:[esi]
  40a5c3:	sub    al,0x3a
  40a5c5:	add    al,0xa
  40a5c7:	jae    0x40a5d8
  40a5c9:	fimul  DWORD PTR ds:0x46186c
  40a5cf:	mov    DWORD PTR [ebp-0xc],eax
  40a5d2:	fiadd  DWORD PTR [ebp-0xc]
  40a5d5:	inc    edx
  40a5d6:	jmp    0x40a5c2
  40a5d8:	dec    esi
  40a5d9:	ret    
  40a5da:	xor    eax,eax
  40a5dc:	xor    edx,edx
  40a5de:	mov    cl,BYTE PTR [esi]
  40a5e0:	cmp    cl,0x2b
  40a5e3:	je     0x40a5ea
  40a5e5:	cmp    cl,0x2d
  40a5e8:	jne    0x40a5eb
  40a5ea:	inc    esi
  40a5eb:	mov    al,BYTE PTR [esi]
  40a5ed:	sub    al,0x3a
  40a5ef:	add    al,0xa
  40a5f1:	jae    0x40a601
  40a5f3:	inc    esi
  40a5f4:	imul   edx,edx,0xa
  40a5f7:	add    edx,eax
  40a5f9:	cmp    edx,0x1f4
  40a5ff:	jb     0x40a5eb
  40a601:	cmp    cl,0x2d
  40a604:	jne    0x40a608
  40a606:	neg    edx
  40a608:	ret    
  40a609:	pop    ebx
  40a60a:	pop    esi
  40a60b:	pop    edi
  40a60c:	mov    esp,ebp
  40a60e:	pop    ebp
  40a60f:	ret    
  40a610:	push   ebp
  40a611:	mov    ebp,esp
  40a613:	add    esp,0xffffffc0
  40a616:	push   ebx
  40a617:	mov    ebx,eax
  40a619:	push   0x0
  40a61b:	push   0xf
  40a61d:	push   0x0
  40a61f:	lea    edx,[ebp+0x8]
  40a622:	lea    eax,[ebp-0x40]
  40a625:	xor    ecx,ecx
  40a627:	call   0x409d24
  40a62c:	mov    ecx,eax
  40a62e:	lea    edx,[ebp-0x40]
  40a631:	mov    eax,ebx
  40a633:	call   0x405078
  40a638:	pop    ebx
  40a639:	mov    esp,ebp
  40a63b:	pop    ebp
  40a63c:	ret    0xc
  40a63f:	nop
  40a640:	push   ebp
  40a641:	mov    ebp,esp
  40a643:	add    esp,0xffffffc0
  40a646:	push   ebx
  40a647:	mov    ebx,eax
  40a649:	push   0x0
  40a64b:	push   0x0
  40a64d:	push   0x0
  40a64f:	lea    edx,[ebp+0x8]
  40a652:	lea    eax,[ebp-0x40]
  40a655:	mov    cl,0x1
  40a657:	call   0x409d24
  40a65c:	mov    ecx,eax
  40a65e:	lea    edx,[ebp-0x40]
  40a661:	mov    eax,ebx
  40a663:	call   0x405078
  40a668:	pop    ebx
  40a669:	mov    esp,ebp
  40a66b:	pop    ebp
  40a66c:	ret    0x8
  40a66f:	nop
  40a670:	push   ebx
  40a671:	push   esi
  40a672:	mov    esi,edx
  40a674:	mov    ebx,eax
  40a676:	mov    eax,ebx
  40a678:	call   0x405418
  40a67d:	mov    edx,esi
  40a67f:	xor    ecx,ecx
  40a681:	call   0x40a4fc
  40a686:	pop    esi
  40a687:	pop    ebx
  40a688:	ret    
  40a689:	lea    eax,[eax+0x0]
  40a68c:	push   ebx
  40a68d:	push   esi
  40a68e:	add    esp,0xfffffff4
  40a691:	mov    esi,edx
  40a693:	mov    ebx,eax
  40a695:	mov    eax,ebx
  40a697:	call   0x405418
  40a69c:	mov    edx,esp
  40a69e:	xor    ecx,ecx
  40a6a0:	call   0x40a4fc
  40a6a5:	test   al,al
  40a6a7:	je     0x40a6af
  40a6a9:	fld    TBYTE PTR [esp]
  40a6ac:	fstp   QWORD PTR [esi]
  40a6ae:	fwait
  40a6af:	add    esp,0xc
  40a6b2:	pop    esi
  40a6b3:	pop    ebx
  40a6b4:	ret    
  40a6b5:	lea    eax,[eax+0x0]
  40a6b8:	push   ebx
  40a6b9:	push   esi
  40a6ba:	add    esp,0xfffffff4
  40a6bd:	mov    esi,edx
  40a6bf:	mov    ebx,eax
  40a6c1:	mov    eax,ebx
  40a6c3:	call   0x405418
  40a6c8:	mov    edx,esp
  40a6ca:	xor    ecx,ecx
  40a6cc:	call   0x40a4fc
  40a6d1:	test   al,al
  40a6d3:	je     0x40a6db
  40a6d5:	fld    TBYTE PTR [esp]
  40a6d8:	fstp   DWORD PTR [esi]
  40a6da:	fwait
  40a6db:	add    esp,0xc
  40a6de:	pop    esi
  40a6df:	pop    ebx
  40a6e0:	ret    
  40a6e1:	lea    eax,[eax+0x0]
  40a6e4:	push   ebx
  40a6e5:	push   esi
  40a6e6:	mov    esi,edx
  40a6e8:	mov    ebx,eax
  40a6ea:	mov    eax,ebx
  40a6ec:	call   0x405418
  40a6f1:	mov    edx,esi
  40a6f3:	mov    cl,0x1
  40a6f5:	call   0x40a4fc
  40a6fa:	pop    esi
  40a6fb:	pop    ebx
  40a6fc:	ret    
  40a6fd:	lea    eax,[eax+0x0]
  40a700:	push   ebp
  40a701:	mov    ebp,esp
  40a703:	push   ebx
  40a704:	xor    ebx,ebx
  40a706:	mov    ecx,eax
  40a708:	fld    QWORD PTR [ebp+0x8]
  40a70b:	fmul   DWORD PTR [ebx+0x461874]
  40a711:	sub    esp,0x8
  40a714:	fistp  QWORD PTR [esp]
  40a717:	fwait
  40a718:	pop    eax
  40a719:	pop    edx
  40a71a:	or     edx,edx
  40a71c:	jns    0x40a72f
  40a71e:	neg    edx
  40a720:	neg    eax
  40a722:	sbb    edx,0x0
  40a725:	div    DWORD PTR [ebx+0x461878]
  40a72b:	neg    eax
  40a72d:	jmp    0x40a735
  40a72f:	div    DWORD PTR [ebx+0x461878]
  40a735:	add    eax,0xa955a
  40a73a:	mov    DWORD PTR [ecx],edx
  40a73c:	mov    DWORD PTR [ecx+0x4],eax
  40a73f:	pop    ebx
  40a740:	pop    ebp
  40a741:	ret    0x8
  40a744:	push   ebp
  40a745:	mov    ebp,esp
  40a747:	add    esp,0xfffffff8
  40a74a:	push   esi
  40a74b:	mov    esi,DWORD PTR [ebp+0xc]
  40a74e:	mov    BYTE PTR [ebp-0x1],0x0
  40a752:	cmp    ax,0x18
  40a756:	jae    0x40a7a5
  40a758:	cmp    dx,0x3c
  40a75c:	jae    0x40a7a5
  40a75e:	cmp    cx,0x3c
  40a762:	jae    0x40a7a5
  40a764:	cmp    si,0x3e8
  40a769:	jae    0x40a7a5
  40a76b:	movzx  eax,ax
  40a76e:	imul   eax,eax,0x36ee80
  40a774:	movzx  edx,dx
  40a777:	imul   edx,edx,0xea60
  40a77d:	add    eax,edx
  40a77f:	movzx  edx,cx
  40a782:	imul   edx,edx,0x3e8
  40a788:	add    eax,edx
  40a78a:	movzx  edx,si
  40a78d:	add    eax,edx
  40a78f:	mov    DWORD PTR [ebp-0x8],eax
  40a792:	fild   DWORD PTR [ebp-0x8]
  40a795:	fdiv   DWORD PTR ds:0x40a7b0
  40a79b:	mov    eax,DWORD PTR [ebp+0x8]
  40a79e:	fstp   QWORD PTR [eax]
  40a7a0:	fwait
  40a7a1:	mov    BYTE PTR [ebp-0x1],0x1
  40a7a5:	movzx  eax,BYTE PTR [ebp-0x1]
  40a7a9:	pop    esi
  40a7aa:	pop    ecx
  40a7ab:	pop    ecx
  40a7ac:	pop    ebp
  40a7ad:	ret    0x8
  40a7b0:	or     bl,0xa4
  40a7b3:	dec    esp
  40a7b4:	push   ebp
  40a7b5:	mov    ebp,esp
  40a7b7:	add    esp,0xfffffff8
  40a7ba:	push   ebx
  40a7bb:	push   esi
  40a7bc:	push   edi
  40a7bd:	mov    edi,ecx
  40a7bf:	mov    esi,edx
  40a7c1:	mov    ebx,eax
  40a7c3:	movzx  eax,WORD PTR [ebp+0x8]
  40a7c7:	push   eax
  40a7c8:	lea    eax,[ebp-0x8]
  40a7cb:	push   eax
  40a7cc:	mov    ecx,edi
  40a7ce:	mov    edx,esi
  40a7d0:	mov    eax,ebx
  40a7d2:	call   0x40a744
  40a7d7:	test   al,al
  40a7d9:	jne    0x40a7e5
  40a7db:	mov    eax,ds:0x46dc5c
  40a7e0:	call   0x408384
  40a7e5:	fld    QWORD PTR [ebp-0x8]
  40a7e8:	pop    edi
  40a7e9:	pop    esi
  40a7ea:	pop    ebx
  40a7eb:	pop    ecx
  40a7ec:	pop    ecx
  40a7ed:	pop    ebp
  40a7ee:	ret    0x4
  40a7f1:	lea    eax,[eax+0x0]
  40a7f4:	push   ebp
  40a7f5:	mov    ebp,esp
  40a7f7:	add    esp,0xfffffff4
  40a7fa:	push   ebx
  40a7fb:	push   esi
  40a7fc:	push   edi
  40a7fd:	mov    edi,ecx
  40a7ff:	mov    esi,edx
  40a801:	mov    ebx,eax
  40a803:	lea    eax,[ebp-0x4]
  40a806:	push   eax
  40a807:	push   DWORD PTR [ebp+0x10]
  40a80a:	push   DWORD PTR [ebp+0xc]
  40a80d:	lea    eax,[ebp-0xc]
  40a810:	call   0x40a700
  40a815:	mov    eax,DWORD PTR [ebp-0xc]
  40a818:	lea    ecx,[ebp-0x2]
  40a81b:	mov    dx,0xea60
  40a81f:	call   0x408368
  40a824:	push   esi
  40a825:	mov    ecx,ebx
  40a827:	movzx  eax,WORD PTR [ebp-0x2]
  40a82b:	mov    dx,0x3c
  40a82f:	call   0x408368
  40a834:	mov    eax,DWORD PTR [ebp+0x8]
  40a837:	push   eax
  40a838:	mov    ecx,edi
  40a83a:	movzx  eax,WORD PTR [ebp-0x4]
  40a83e:	mov    dx,0x3e8
  40a842:	call   0x408368
  40a847:	pop    edi
  40a848:	pop    esi
  40a849:	pop    ebx
  40a84a:	mov    esp,ebp
  40a84c:	pop    ebp
  40a84d:	ret    0xc
  40a850:	push   ebx
  40a851:	push   esi
  40a852:	mov    ecx,eax
  40a854:	movzx  eax,cx
  40a857:	and    eax,0x3
  40a85a:	test   eax,eax
  40a85c:	jne    0x40a87f
  40a85e:	movzx  ebx,cx
  40a861:	mov    eax,ebx
  40a863:	mov    esi,0x64
  40a868:	xor    edx,edx
  40a86a:	div    esi
  40a86c:	test   edx,edx
  40a86e:	jne    0x40a884
  40a870:	mov    eax,ebx
  40a872:	mov    ecx,0x190
  40a877:	xor    edx,edx
  40a879:	div    ecx
  40a87b:	test   edx,edx
  40a87d:	je     0x40a884
  40a87f:	xor    eax,eax
  40a881:	pop    esi
  40a882:	pop    ebx
  40a883:	ret    
  40a884:	mov    al,0x1
  40a886:	pop    esi
  40a887:	pop    ebx
  40a888:	ret    
  40a889:	lea    eax,[eax+0x0]
  40a88c:	push   ebp
  40a88d:	mov    ebp,esp
  40a88f:	add    esp,0xfffffff8
  40a892:	push   ebx
  40a893:	push   esi
  40a894:	push   edi
  40a895:	mov    ebx,ecx
  40a897:	mov    edi,edx
  40a899:	mov    WORD PTR [ebp-0x2],ax
  40a89d:	mov    BYTE PTR [ebp-0x3],0x0
  40a8a1:	movzx  eax,WORD PTR [ebp-0x2]
  40a8a5:	call   0x40a850
  40a8aa:	and    eax,0x7f
  40a8ad:	lea    eax,[eax+eax*2]
  40a8b0:	lea    esi,[eax*8+0x4617d8]
  40a8b7:	cmp    WORD PTR [ebp-0x2],0x1
  40a8bc:	jb     0x40a948
  40a8c2:	cmp    WORD PTR [ebp-0x2],0x270f
  40a8c8:	ja     0x40a948
  40a8ca:	cmp    di,0x1
  40a8ce:	jb     0x40a948
  40a8d0:	cmp    di,0xc
  40a8d4:	ja     0x40a948
  40a8d6:	cmp    bx,0x1
  40a8da:	jb     0x40a948
  40a8dc:	movzx  eax,di
  40a8df:	cmp    bx,WORD PTR [esi+eax*2-0x2]
  40a8e4:	ja     0x40a948
  40a8e6:	movzx  eax,di
  40a8e9:	dec    eax
  40a8ea:	test   eax,eax
  40a8ec:	jle    0x40a8fc
  40a8ee:	mov    ecx,0x1
  40a8f3:	add    bx,WORD PTR [esi+ecx*2-0x2]
  40a8f8:	inc    ecx
  40a8f9:	dec    eax
  40a8fa:	jne    0x40a8f3
  40a8fc:	movzx  ecx,WORD PTR [ebp-0x2]
  40a900:	dec    ecx
  40a901:	mov    eax,ecx
  40a903:	mov    esi,0x64
  40a908:	cdq    
  40a909:	idiv   esi
  40a90b:	imul   esi,ecx,0x16d
  40a911:	mov    edx,ecx
  40a913:	test   edx,edx
  40a915:	jns    0x40a91a
  40a917:	add    edx,0x3
  40a91a:	sar    edx,0x2
  40a91d:	add    esi,edx
  40a91f:	sub    esi,eax
  40a921:	mov    eax,ecx
  40a923:	mov    ecx,0x190
  40a928:	cdq    
  40a929:	idiv   ecx
  40a92b:	add    esi,eax
  40a92d:	movzx  eax,bx
  40a930:	add    esi,eax
  40a932:	sub    esi,0xa955a
  40a938:	mov    DWORD PTR [ebp-0x8],esi
  40a93b:	fild   DWORD PTR [ebp-0x8]
  40a93e:	mov    eax,DWORD PTR [ebp+0x8]
  40a941:	fstp   QWORD PTR [eax]
  40a943:	fwait
  40a944:	mov    BYTE PTR [ebp-0x3],0x1
  40a948:	movzx  eax,BYTE PTR [ebp-0x3]
  40a94c:	pop    edi
  40a94d:	pop    esi
  40a94e:	pop    ebx
  40a94f:	pop    ecx
  40a950:	pop    ecx
  40a951:	pop    ebp
  40a952:	ret    0x4
  40a955:	lea    eax,[eax+0x0]
  40a958:	push   ebx
  40a959:	push   esi
  40a95a:	push   edi
  40a95b:	add    esp,0xfffffff8
  40a95e:	mov    edi,ecx
  40a960:	mov    esi,edx
  40a962:	mov    ebx,eax
  40a964:	push   esp
  40a965:	mov    ecx,edi
  40a967:	mov    edx,esi
  40a969:	mov    eax,ebx
  40a96b:	call   0x40a88c
  40a970:	test   al,al
  40a972:	jne    0x40a97e
  40a974:	mov    eax,ds:0x46dd60
  40a979:	call   0x408384
  40a97e:	fld    QWORD PTR [esp]
  40a981:	pop    ecx
  40a982:	pop    edx
  40a983:	pop    edi
  40a984:	pop    esi
  40a985:	pop    ebx
  40a986:	ret    
  40a987:	nop
  40a988:	push   ebp
  40a989:	mov    ebp,esp
  40a98b:	add    esp,0xffffffe8
  40a98e:	push   ebx
  40a98f:	push   esi
  40a990:	mov    DWORD PTR [ebp-0xc],ecx
  40a993:	mov    DWORD PTR [ebp-0x8],edx
  40a996:	mov    DWORD PTR [ebp-0x4],eax
  40a999:	mov    ebx,DWORD PTR [ebp+0x8]
  40a99c:	push   DWORD PTR [ebp+0x10]
  40a99f:	push   DWORD PTR [ebp+0xc]
  40a9a2:	lea    eax,[ebp-0x18]
  40a9a5:	call   0x40a700
  40a9aa:	mov    ecx,DWORD PTR [ebp-0x14]
  40a9ad:	test   ecx,ecx
  40a9af:	jg     0x40a9d5
  40a9b1:	mov    eax,DWORD PTR [ebp-0x4]
  40a9b4:	mov    WORD PTR [eax],0x0
  40a9b9:	mov    eax,DWORD PTR [ebp-0x8]
  40a9bc:	mov    WORD PTR [eax],0x0
  40a9c1:	mov    eax,DWORD PTR [ebp-0xc]
  40a9c4:	mov    WORD PTR [eax],0x0
  40a9c9:	mov    WORD PTR [ebx],0x0
  40a9ce:	xor    edx,edx
  40a9d0:	jmp    0x40aac7
  40a9d5:	mov    eax,ecx
  40a9d7:	mov    esi,0x7
  40a9dc:	cdq    
  40a9dd:	idiv   esi
  40a9df:	inc    edx
  40a9e0:	mov    WORD PTR [ebx],dx
  40a9e3:	dec    ecx
  40a9e4:	mov    bx,0x1
  40a9e8:	cmp    ecx,0x23ab1
  40a9ee:	jl     0x40aa03
  40a9f0:	sub    ecx,0x23ab1
  40a9f6:	add    bx,0x190
  40a9fb:	cmp    ecx,0x23ab1
  40aa01:	jge    0x40a9f0
  40aa03:	lea    eax,[ebp-0xe]
  40aa06:	push   eax
  40aa07:	lea    eax,[ebp-0x10]
  40aa0a:	mov    dx,0x8eac
  40aa0e:	xchg   ecx,eax
  40aa0f:	call   0x408368
  40aa14:	cmp    WORD PTR [ebp-0x10],0x4
  40aa19:	jne    0x40aa25
  40aa1b:	dec    WORD PTR [ebp-0x10]
  40aa1f:	add    WORD PTR [ebp-0xe],0x8eac
  40aa25:	imul   ax,WORD PTR [ebp-0x10],0x64
  40aa2a:	add    bx,ax
  40aa2d:	lea    eax,[ebp-0xe]
  40aa30:	push   eax
  40aa31:	lea    ecx,[ebp-0x10]
  40aa34:	movzx  eax,WORD PTR [ebp-0xe]
  40aa38:	mov    dx,0x5b5
  40aa3c:	call   0x408368
  40aa41:	movzx  eax,WORD PTR [ebp-0x10]
  40aa45:	add    eax,eax
  40aa47:	add    eax,eax
  40aa49:	add    bx,ax
  40aa4c:	lea    eax,[ebp-0xe]
  40aa4f:	push   eax
  40aa50:	lea    ecx,[ebp-0x10]
  40aa53:	movzx  eax,WORD PTR [ebp-0xe]
  40aa57:	mov    dx,0x16d
  40aa5b:	call   0x408368
  40aa60:	cmp    WORD PTR [ebp-0x10],0x4
  40aa65:	jne    0x40aa71
  40aa67:	dec    WORD PTR [ebp-0x10]
  40aa6b:	add    WORD PTR [ebp-0xe],0x16d
  40aa71:	add    bx,WORD PTR [ebp-0x10]
  40aa75:	mov    eax,ebx
  40aa77:	call   0x40a850
  40aa7c:	mov    edx,eax
  40aa7e:	movzx  eax,dl
  40aa81:	lea    eax,[eax+eax*2]
  40aa84:	lea    esi,[eax*8+0x4617d8]
  40aa8b:	mov    ax,0x1
  40aa8f:	movzx  ecx,ax
  40aa92:	movzx  ecx,WORD PTR [esi+ecx*2-0x2]
  40aa97:	mov    WORD PTR [ebp-0x10],cx
  40aa9b:	movzx  ecx,WORD PTR [ebp-0xe]
  40aa9f:	cmp    cx,WORD PTR [ebp-0x10]
  40aaa3:	jb     0x40aab0
  40aaa5:	movzx  ecx,WORD PTR [ebp-0x10]
  40aaa9:	sub    WORD PTR [ebp-0xe],cx
  40aaad:	inc    eax
  40aaae:	jmp    0x40aa8f
  40aab0:	mov    ecx,DWORD PTR [ebp-0x4]
  40aab3:	mov    WORD PTR [ecx],bx
  40aab6:	mov    ecx,DWORD PTR [ebp-0x8]
  40aab9:	mov    WORD PTR [ecx],ax
  40aabc:	movzx  eax,WORD PTR [ebp-0xe]
  40aac0:	inc    eax
  40aac1:	mov    ecx,DWORD PTR [ebp-0xc]
  40aac4:	mov    WORD PTR [ecx],ax
  40aac7:	mov    eax,edx
  40aac9:	pop    esi
  40aaca:	pop    ebx
  40aacb:	mov    esp,ebp
  40aacd:	pop    ebp
  40aace:	ret    0xc
  40aad1:	lea    eax,[eax+0x0]
  40aad4:	push   ebp
  40aad5:	mov    ebp,esp
  40aad7:	push   ecx
  40aad8:	push   esi
  40aad9:	mov    esi,eax
  40aadb:	push   DWORD PTR [ebp+0xc]
  40aade:	push   DWORD PTR [ebp+0x8]
  40aae1:	lea    eax,[ebp-0x2]
  40aae4:	push   eax
  40aae5:	mov    eax,esi
  40aae7:	call   0x40a988
  40aaec:	pop    esi
  40aaed:	pop    ecx
  40aaee:	pop    ebp
  40aaef:	ret    0x8
  40aaf2:	mov    eax,eax
  40aaf4:	push   ebp
  40aaf5:	mov    ebp,esp
  40aaf7:	add    esp,0xfffffff8
  40aafa:	push   DWORD PTR [ebp+0xc]
  40aafd:	push   DWORD PTR [ebp+0x8]
  40ab00:	lea    eax,[ebp-0x8]
  40ab03:	call   0x40a700
  40ab08:	mov    eax,DWORD PTR [ebp-0x4]
  40ab0b:	mov    ecx,0x7
  40ab10:	cdq    
  40ab11:	idiv   ecx
  40ab13:	mov    eax,edx
  40ab15:	inc    eax
  40ab16:	pop    ecx
  40ab17:	pop    ecx
  40ab18:	pop    ebp
  40ab19:	ret    0x8
  40ab1c:	add    esp,0xffffffe0
  40ab1f:	lea    eax,[esp+0x8]
  40ab23:	push   eax
  40ab24:	call   0x407238
  40ab29:	movzx  ecx,WORD PTR [esp+0xe]
  40ab2e:	movzx  edx,WORD PTR [esp+0xa]
  40ab33:	movzx  eax,WORD PTR [esp+0x8]
  40ab38:	call   0x40a958
  40ab3d:	fstp   QWORD PTR [esp+0x18]
  40ab41:	fwait
  40ab42:	movzx  eax,WORD PTR [esp+0x16]
  40ab47:	push   eax
  40ab48:	movzx  ecx,WORD PTR [esp+0x18]
  40ab4d:	movzx  edx,WORD PTR [esp+0x16]
  40ab52:	movzx  eax,WORD PTR [esp+0x14]
  40ab57:	call   0x40a7b4
  40ab5c:	fadd   QWORD PTR [esp+0x18]
  40ab60:	fstp   QWORD PTR [esp]
  40ab63:	fld    QWORD PTR [esp]
  40ab67:	add    esp,0x20
  40ab6a:	ret    
  40ab6b:	nop
  40ab6c:	add    esp,0xfffffff0
  40ab6f:	push   esp
  40ab70:	call   0x407238
  40ab75:	movzx  eax,WORD PTR [esp]
  40ab79:	add    esp,0x10
  40ab7c:	ret    
  40ab7d:	lea    eax,[eax+0x0]
  40ab80:	push   ebp
  40ab81:	mov    ebp,esp
  40ab83:	push   ebx
  40ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab87:	mov    ebx,0x100
  40ab8c:	sub    ebx,DWORD PTR [ecx-0x104]
  40ab92:	cmp    edx,ebx
  40ab94:	jge    0x40ab98
  40ab96:	mov    ebx,edx
  40ab98:	test   ebx,ebx
  40ab9a:	je     0x40abb6
  40ab9c:	mov    edx,DWORD PTR [ebp+0x8]
  40ab9f:	mov    edx,DWORD PTR [edx-0x104]
  40aba5:	mov    ecx,DWORD PTR [ebp+0x8]
  40aba8:	lea    edx,[ecx+edx*1-0x100]
  40abaf:	mov    ecx,ebx
  40abb1:	call   0x403090
  40abb6:	mov    eax,DWORD PTR [ebp+0x8]
  40abb9:	add    DWORD PTR [eax-0x104],ebx
  40abbf:	pop    ebx
  40abc0:	pop    ebp
  40abc1:	ret    
  40abc2:	mov    eax,eax
  40abc4:	push   ebp
  40abc5:	mov    ebp,esp
  40abc7:	mov    edx,eax
  40abc9:	test   edx,edx
  40abcb:	je     0x40abd2
  40abcd:	sub    edx,0x4
  40abd0:	mov    edx,DWORD PTR [edx]
  40abd2:	mov    ecx,DWORD PTR [ebp+0x8]
  40abd5:	push   ecx
  40abd6:	call   0x40ab80
  40abdb:	pop    ecx
  40abdc:	pop    ebp
  40abdd:	ret    
  40abde:	mov    eax,eax
  40abe0:	push   ebp
  40abe1:	mov    ebp,esp
  40abe3:	add    esp,0xffffffe0
  40abe6:	push   ebx
  40abe7:	push   esi
  40abe8:	mov    esi,edx
  40abea:	mov    ebx,eax
  40abec:	mov    eax,DWORD PTR [ebp+0x8]
  40abef:	push   eax
  40abf0:	push   0x4
  40abf2:	mov    DWORD PTR [ebp-0x20],esi
  40abf5:	mov    BYTE PTR [ebp-0x1c],0x0
  40abf9:	mov    DWORD PTR [ebp-0x18],ebx
  40abfc:	mov    BYTE PTR [ebp-0x14],0x0
  40ac00:	lea    eax,[ebp-0x20]
  40ac03:	push   eax
  40ac04:	push   0x1
  40ac06:	mov    ecx,0x46187c
  40ac0b:	lea    eax,[ebp-0x10]
  40ac0e:	mov    edx,0x10
  40ac13:	call   0x4093c0
  40ac18:	mov    edx,eax
  40ac1a:	lea    eax,[ebp-0x10]
  40ac1d:	call   0x40ab80
  40ac22:	pop    ecx
  40ac23:	pop    esi
  40ac24:	pop    ebx
  40ac25:	mov    esp,ebp
  40ac27:	pop    ebp
  40ac28:	ret    
  40ac29:	lea    eax,[eax+0x0]
  40ac2c:	push   ebp
  40ac2d:	mov    ebp,esp
  40ac2f:	push   ebx
  40ac30:	mov    eax,DWORD PTR [ebp+0x8]
  40ac33:	add    eax,0xfffffffc
  40ac36:	mov    edx,DWORD PTR [eax]
  40ac38:	jmp    0x40ac3c
  40ac3a:	inc    DWORD PTR [eax]
  40ac3c:	mov    ecx,DWORD PTR [eax]
  40ac3e:	movzx  ecx,BYTE PTR [ecx]
  40ac41:	mov    ebx,DWORD PTR [ebp+0x8]
  40ac44:	cmp    cl,BYTE PTR [ebx-0x5]
  40ac47:	je     0x40ac3a
  40ac49:	mov    eax,DWORD PTR [eax]
  40ac4b:	sub    eax,edx
  40ac4d:	inc    eax
  40ac4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ac51:	mov    DWORD PTR [edx-0xc],eax
  40ac54:	pop    ebx
  40ac55:	pop    ebp
  40ac56:	ret    
  40ac57:	nop
  40ac58:	push   ebp
  40ac59:	mov    ebp,esp
  40ac5b:	mov    eax,DWORD PTR [ebp+0x8]
  40ac5e:	cmp    BYTE PTR [eax-0x13],0x0
  40ac62:	jne    0x40ac8e
  40ac64:	mov    eax,DWORD PTR [ebp+0x8]
  40ac67:	mov    eax,DWORD PTR [eax+0x8]
  40ac6a:	push   DWORD PTR [eax+0xc]
  40ac6d:	push   DWORD PTR [eax+0x8]
  40ac70:	mov    eax,DWORD PTR [ebp+0x8]
  40ac73:	lea    ecx,[eax-0x12]
  40ac76:	mov    eax,DWORD PTR [ebp+0x8]
  40ac79:	lea    edx,[eax-0x10]
  40ac7c:	mov    eax,DWORD PTR [ebp+0x8]
  40ac7f:	add    eax,0xfffffff2
  40ac82:	call   0x40aad4
  40ac87:	mov    eax,DWORD PTR [ebp+0x8]
  40ac8a:	mov    BYTE PTR [eax-0x13],0x1
  40ac8e:	pop    ebp
  40ac8f:	ret    
  40ac90:	push   ebp
  40ac91:	mov    ebp,esp
  40ac93:	mov    eax,DWORD PTR [ebp+0x8]
  40ac96:	cmp    BYTE PTR [eax-0x1d],0x0
  40ac9a:	jne    0x40accd
  40ac9c:	mov    eax,DWORD PTR [ebp+0x8]
  40ac9f:	mov    eax,DWORD PTR [eax+0x8]
  40aca2:	push   DWORD PTR [eax+0xc]
  40aca5:	push   DWORD PTR [eax+0x8]
  40aca8:	mov    eax,DWORD PTR [ebp+0x8]
  40acab:	add    eax,0xffffffe4
  40acae:	push   eax
  40acaf:	mov    eax,DWORD PTR [ebp+0x8]
  40acb2:	lea    ecx,[eax-0x1a]
  40acb5:	mov    eax,DWORD PTR [ebp+0x8]
  40acb8:	lea    edx,[eax-0x18]
  40acbb:	mov    eax,DWORD PTR [ebp+0x8]
  40acbe:	add    eax,0xffffffea
  40acc1:	call   0x40a7f4
  40acc6:	mov    eax,DWORD PTR [ebp+0x8]
  40acc9:	mov    BYTE PTR [eax-0x1d],0x1
  40accd:	pop    ebp
  40acce:	ret    
  40accf:	nop
  40acd0:	push   ebp
  40acd1:	mov    ebp,esp
  40acd3:	add    esp,0xfffffee4
  40acd9:	push   ebx
  40acda:	push   esi
  40acdb:	xor    ecx,ecx
  40acdd:	mov    DWORD PTR [ebp-0x11c],ecx
  40ace3:	mov    DWORD PTR [ebp-0x4],ecx
  40ace6:	mov    ebx,edx
  40ace8:	mov    esi,eax
  40acea:	xor    eax,eax
  40acec:	push   ebp
  40aced:	push   0x40ae32
  40acf2:	push   DWORD PTR fs:[eax]
  40acf5:	mov    DWORD PTR fs:[eax],esp
  40acf8:	mov    eax,ebx
  40acfa:	call   0x404f88
  40acff:	mov    eax,DWORD PTR [ebp+0x8]
  40ad02:	movzx  eax,WORD PTR [eax-0xe]
  40ad06:	mov    WORD PTR [ebp-0x14],ax
  40ad0a:	mov    eax,DWORD PTR [ebp+0x8]
  40ad0d:	movzx  eax,WORD PTR [eax-0x10]
  40ad11:	mov    WORD PTR [ebp-0x12],ax
  40ad15:	mov    eax,DWORD PTR [ebp+0x8]
  40ad18:	movzx  eax,WORD PTR [eax-0x12]
  40ad1c:	mov    WORD PTR [ebp-0xe],ax
  40ad20:	lea    eax,[ebp-0x4]
  40ad23:	mov    edx,0x40ae48
  40ad28:	call   0x405020
  40ad2d:	push   0x100
  40ad32:	lea    eax,[ebp-0x114]
  40ad38:	push   eax
  40ad39:	mov    eax,DWORD PTR [ebp-0x4]
  40ad3c:	call   0x405418
  40ad41:	push   eax
  40ad42:	lea    eax,[ebp-0x14]
  40ad45:	push   eax
  40ad46:	push   0x4
  40ad48:	call   0x407278
  40ad4d:	push   eax
  40ad4e:	call   0x4071f8
  40ad53:	test   eax,eax
  40ad55:	je     0x40ae11
  40ad5b:	mov    eax,ebx
  40ad5d:	lea    edx,[ebp-0x114]
  40ad63:	mov    ecx,0x100
  40ad68:	call   0x4051f8
  40ad6d:	dec    esi
  40ad6e:	jne    0x40ae11
  40ad74:	mov    eax,ds:0x4708c4
  40ad79:	sub    eax,0x4
  40ad7c:	je     0x40ada4
  40ad7e:	sub    eax,0xd
  40ad81:	jne    0x40ae11
  40ad87:	push   ebx
  40ad88:	mov    eax,DWORD PTR [ebx]
  40ad8a:	mov    edx,0x1
  40ad8f:	call   0x40d344
  40ad94:	mov    ecx,eax
  40ad96:	mov    eax,DWORD PTR [ebx]
  40ad98:	mov    edx,0x1
  40ad9d:	call   0x405480
  40ada2:	jmp    0x40ae11
  40ada4:	cmp    DWORD PTR ds:0x4708c8,0x1
  40adab:	jne    0x40ae11
  40adad:	mov    eax,DWORD PTR [ebx]
  40adaf:	mov    DWORD PTR [ebp-0x118],eax
  40adb5:	mov    esi,DWORD PTR [ebp-0x118]
  40adbb:	test   esi,esi
  40adbd:	je     0x40adc4
  40adbf:	sub    esi,0x4
  40adc2:	mov    esi,DWORD PTR [esi]
  40adc4:	mov    eax,DWORD PTR [ebx]
  40adc6:	mov    edx,esi
  40adc8:	call   0x40d1a4
  40adcd:	cmp    eax,0x4
  40add0:	jne    0x40ae11
  40add2:	mov    eax,DWORD PTR [ebx]
  40add4:	mov    edx,0x3
  40add9:	call   0x40d2c0
  40adde:	mov    esi,eax
  40ade0:	lea    eax,[ebp-0x114]
  40ade6:	add    esi,eax
  40ade8:	dec    esi
  40ade9:	lea    eax,[ebp-0x11c]
  40adef:	mov    edx,esi
  40adf1:	call   0x405180
  40adf6:	mov    eax,DWORD PTR [ebp-0x11c]
  40adfc:	mov    edx,0x2
  40ae01:	call   0x40d344
  40ae06:	mov    ecx,eax
  40ae08:	mov    eax,ebx
  40ae0a:	mov    edx,esi
  40ae0c:	call   0x405078
  40ae11:	xor    eax,eax
  40ae13:	pop    edx
  40ae14:	pop    ecx
  40ae15:	pop    ecx
  40ae16:	mov    DWORD PTR fs:[eax],edx
  40ae19:	push   0x40ae39
  40ae1e:	lea    eax,[ebp-0x11c]
  40ae24:	call   0x404f88
  40ae29:	lea    eax,[ebp-0x4]
  40ae2c:	call   0x404f88
  40ae31:	ret    
  40ae32:	jmp    0x40481c
  40ae37:	jmp    0x40ae1e
  40ae39:	pop    esi
  40ae3a:	pop    ebx
  40ae3b:	mov    esp,ebp
  40ae3d:	pop    ebp
  40ae3e:	ret    
  40ae3f:	add    bh,bh
  40ae41:	(bad)  
  40ae42:	(bad)  
  40ae43:	inc    DWORD PTR [edx]
  40ae45:	add    BYTE PTR [eax],al
  40ae47:	add    BYTE PTR [edi+0x67],ah
  40ae4a:	add    BYTE PTR [eax],al
  40ae4c:	push   ebp
  40ae4d:	mov    ebp,esp
  40ae4f:	add    esp,0xfffffee8
  40ae55:	push   ebx
  40ae56:	push   esi
  40ae57:	xor    ecx,ecx
  40ae59:	mov    DWORD PTR [ebp-0x4],ecx
  40ae5c:	mov    ebx,edx
  40ae5e:	mov    esi,eax
  40ae60:	xor    eax,eax
  40ae62:	push   ebp
  40ae63:	push   0x40af3a
  40ae68:	push   DWORD PTR fs:[eax]
  40ae6b:	mov    DWORD PTR fs:[eax],esp
  40ae6e:	mov    eax,ebx
  40ae70:	call   0x404f88
  40ae75:	mov    eax,DWORD PTR [ebp+0x8]
  40ae78:	movzx  eax,WORD PTR [eax-0xe]
  40ae7c:	mov    WORD PTR [ebp-0x14],ax
  40ae80:	mov    eax,DWORD PTR [ebp+0x8]
  40ae83:	movzx  eax,WORD PTR [eax-0x10]
  40ae87:	mov    WORD PTR [ebp-0x12],ax
  40ae8b:	mov    eax,DWORD PTR [ebp+0x8]
  40ae8e:	movzx  eax,WORD PTR [eax-0x12]
  40ae92:	mov    WORD PTR [ebp-0xe],ax
  40ae96:	cmp    esi,0x2
  40ae99:	jg     0x40aeaa
  40ae9b:	lea    eax,[ebp-0x4]
  40ae9e:	mov    edx,0x40af50
  40aea3:	call   0x405020
  40aea8:	jmp    0x40aeb7
  40aeaa:	lea    eax,[ebp-0x4]
  40aead:	mov    edx,0x40af5c
  40aeb2:	call   0x405020
  40aeb7:	push   0x100
  40aebc:	lea    eax,[ebp-0x114]
  40aec2:	push   eax
  40aec3:	mov    eax,DWORD PTR [ebp-0x4]
  40aec6:	call   0x405418
  40aecb:	push   eax
  40aecc:	lea    eax,[ebp-0x14]
  40aecf:	push   eax
  40aed0:	push   0x4
  40aed2:	call   0x407278
  40aed7:	push   eax
  40aed8:	call   0x4071f8
  40aedd:	test   eax,eax
  40aedf:	je     0x40af24
  40aee1:	mov    eax,ebx
  40aee3:	lea    edx,[ebp-0x114]
  40aee9:	mov    ecx,0x100
  40aeee:	call   0x4051f8
  40aef3:	dec    esi
  40aef4:	jne    0x40af24
  40aef6:	mov    eax,DWORD PTR [ebx]
  40aef8:	cmp    BYTE PTR [eax],0x30
  40aefb:	jne    0x40af24
  40aefd:	mov    eax,DWORD PTR [ebx]
  40aeff:	mov    DWORD PTR [ebp-0x118],eax
  40af05:	mov    esi,DWORD PTR [ebp-0x118]
  40af0b:	test   esi,esi
  40af0d:	je     0x40af14
  40af0f:	sub    esi,0x4
  40af12:	mov    esi,DWORD PTR [esi]
  40af14:	push   ebx
  40af15:	mov    ecx,esi
  40af17:	dec    ecx
  40af18:	mov    eax,DWORD PTR [ebx]
  40af1a:	mov    edx,0x2
  40af1f:	call   0x405480
  40af24:	xor    eax,eax
  40af26:	pop    edx
  40af27:	pop    ecx
  40af28:	pop    ecx
  40af29:	mov    DWORD PTR fs:[eax],edx
  40af2c:	push   0x40af41
  40af31:	lea    eax,[ebp-0x4]
  40af34:	call   0x404f88
  40af39:	ret    
  40af3a:	jmp    0x40481c
  40af3f:	jmp    0x40af31
  40af41:	pop    esi
  40af42:	pop    ebx
  40af43:	mov    esp,ebp
  40af45:	pop    ebp
  40af46:	ret    
  40af47:	add    bh,bh
  40af49:	(bad)  
  40af4a:	(bad)  
  40af4b:	inc    DWORD PTR [edx]
  40af4d:	add    BYTE PTR [eax],al
  40af4f:	add    BYTE PTR [ecx+0x79],bh
  40af52:	add    BYTE PTR [eax],al
  40af54:	(bad)  
  40af55:	(bad)  
  40af56:	(bad)  
  40af57:	inc    DWORD PTR [eax+eax*1]
  40af5a:	add    BYTE PTR [eax],al
  40af5c:	jns    0x40afd7
  40af5e:	jns    0x40afd9
  40af60:	add    BYTE PTR [eax],al
  40af62:	add    BYTE PTR [eax],al
  40af64:	push   ebp
  40af65:	mov    ebp,esp
  40af67:	add    esp,0xffffffd4
  40af6a:	push   ebx
  40af6b:	push   esi
  40af6c:	push   edi
  40af6d:	xor    edx,edx
  40af6f:	mov    DWORD PTR [ebp-0x2c],edx
  40af72:	mov    DWORD PTR [ebp-0x28],edx
  40af75:	mov    DWORD PTR [ebp-0x4],eax
  40af78:	lea    edi,[ebp-0x4]
  40af7b:	xor    eax,eax
  40af7d:	push   ebp
  40af7e:	push   0x40b6e8
  40af83:	push   DWORD PTR fs:[eax]
  40af86:	mov    DWORD PTR fs:[eax],esp
  40af89:	cmp    DWORD PTR [edi],0x0
  40af8c:	je     0x40b6cd
  40af92:	mov    eax,DWORD PTR [ebp+0x8]
  40af95:	cmp    DWORD PTR [eax-0x108],0x2
  40af9c:	jge    0x40b6cd
  40afa2:	mov    eax,DWORD PTR [ebp+0x8]
  40afa5:	inc    DWORD PTR [eax-0x108]
  40afab:	mov    BYTE PTR [ebp-0x1e],0x20
  40afaf:	mov    BYTE PTR [ebp-0x13],0x0
  40afb3:	mov    BYTE PTR [ebp-0x1d],0x0
  40afb7:	mov    BYTE PTR [ebp-0x1f],0x0
  40afbb:	jmp    0x40b6b9
  40afc0:	mov    eax,DWORD PTR [edi]
  40afc2:	movzx  eax,BYTE PTR [eax]
  40afc5:	mov    BYTE PTR [ebp-0x5],al
  40afc8:	movzx  eax,BYTE PTR [ebp-0x5]
  40afcc:	movzx  eax,al
  40afcf:	bt     DWORD PTR ds:0x461808,eax
  40afd6:	jae    0x40afff
  40afd8:	mov    eax,DWORD PTR [ebp+0x8]
  40afdb:	push   eax
  40afdc:	mov    eax,DWORD PTR [edi]
  40afde:	call   0x40d3b4
  40afe3:	mov    edx,eax
  40afe5:	mov    eax,DWORD PTR [edi]
  40afe7:	call   0x40ab80
  40afec:	pop    ecx
  40afed:	mov    eax,DWORD PTR [edi]
  40afef:	call   0x40d3d4
  40aff4:	mov    DWORD PTR [edi],eax
  40aff6:	mov    BYTE PTR [ebp-0x1e],0x20
  40affa:	jmp    0x40b6b9
  40afff:	mov    eax,DWORD PTR [edi]
  40b001:	call   0x40d3d4
  40b006:	mov    DWORD PTR [edi],eax
  40b008:	movzx  ebx,BYTE PTR [ebp-0x5]
  40b00c:	mov    eax,ebx
  40b00e:	add    al,0x9f
  40b010:	sub    al,0x1a
  40b012:	jae    0x40b017
  40b014:	sub    bl,0x20
  40b017:	mov    eax,ebx
  40b019:	add    al,0xbf
  40b01b:	sub    al,0x1a
  40b01d:	jae    0x40b02f
  40b01f:	cmp    bl,0x4d
  40b022:	jne    0x40b02c
  40b024:	cmp    BYTE PTR [ebp-0x1e],0x48
  40b028:	jne    0x40b02c
  40b02a:	mov    bl,0x4e
  40b02c:	mov    BYTE PTR [ebp-0x1e],bl
  40b02f:	movzx  eax,bl
  40b032:	add    eax,0xffffffde
  40b035:	cmp    eax,0x38
  40b038:	ja     0x40b6a7
  40b03e:	movzx  eax,BYTE PTR [eax+0x40b04c]
  40b045:	jmp    DWORD PTR [eax*4+0x40b085]
  40b04c:	sldt   WORD PTR [eax]
  40b04f:	add    BYTE PTR [eax],al
  40b051:	sldt   WORD PTR [eax]
  40b054:	add    BYTE PTR [eax],al
  40b056:	add    BYTE PTR [eax],al
  40b058:	add    BYTE PTR ds:0x0,cl
  40b05e:	add    BYTE PTR [eax],al
  40b060:	add    BYTE PTR [eax],al
  40b062:	add    BYTE PTR [eax],al
  40b064:	push   cs
  40b065:	add    BYTE PTR [eax],al
  40b067:	add    BYTE PTR [eax],al
  40b069:	add    BYTE PTR [eax],al
  40b06b:	or     eax,DWORD PTR [eax]
  40b06d:	or     al,0x5
  40b06f:	add    eax,DWORD PTR [eax]
  40b071:	add    al,BYTE PTR [esi]
  40b073:	add    BYTE PTR [eax],al
  40b075:	add    BYTE PTR [eax],al
  40b077:	add    al,0x7
  40b079:	add    BYTE PTR [eax],al
  40b07b:	add    BYTE PTR [eax],al
  40b07d:	or     BYTE PTR [ecx],cl
  40b07f:	add    BYTE PTR [eax],al
  40b081:	add    BYTE PTR [eax],al
  40b083:	add    DWORD PTR [edx],ecx
  40b085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b086:	mov    dh,0x40
  40b088:	add    ch,al
  40b08a:	mov    al,0x40
  40b08c:	add    BYTE PTR [ecx+esi*4],dl
  40b08f:	inc    eax
  40b090:	add    BYTE PTR [ecx-0x4f],al
  40b093:	inc    eax
  40b094:	add    BYTE PTR [esi-0x4f],ch
  40b097:	inc    eax
  40b098:	add    bl,dl
  40b09a:	mov    cl,0x40
  40b09c:	add    BYTE PTR [eax-0x7bffbf4e],al
  40b0a2:	mov    bl,0x40
  40b0a4:	add    BYTE PTR [ebp-0x19ffbf4d],dh
  40b0aa:	mov    bl,0x40
  40b0ac:	add    BYTE PTR [ebx],bl
  40b0ae:	mov    ah,0x40
  40b0b0:	add    BYTE PTR [esp+esi*4+0x40],cl
  40b0b4:	add    BYTE PTR [ecx+0x170040b5],bh
  40b0ba:	mov    dh,0x40
  40b0bc:	add    BYTE PTR [edx],bh
  40b0be:	mov    dh,0x40
  40b0c0:	add    BYTE PTR [ecx-0x4a],bl
  40b0c3:	inc    eax
  40b0c4:	add    BYTE PTR [ebp-0x18],dl
  40b0c7:	popa   
  40b0c8:	sti    
  40b0c9:	(bad)  
  40b0ca:	call   FWORD PTR [ecx+0x55]
  40b0cd:	call   0x40ac58
  40b0d2:	pop    ecx
  40b0d3:	cmp    DWORD PTR [ebp-0xc],0x2
  40b0d7:	jg     0x40b0fc
  40b0d9:	mov    eax,DWORD PTR [ebp+0x8]
  40b0dc:	push   eax
  40b0dd:	movzx  eax,WORD PTR [ebp-0xe]
  40b0e1:	mov    ecx,0x64
  40b0e6:	xor    edx,edx
  40b0e8:	div    ecx
  40b0ea:	mov    eax,edx
  40b0ec:	mov    edx,0x2
  40b0f1:	call   0x40abe0
  40b0f6:	pop    ecx
  40b0f7:	jmp    0x40b6b9
  40b0fc:	mov    eax,DWORD PTR [ebp+0x8]
  40b0ff:	push   eax
  40b100:	movzx  eax,WORD PTR [ebp-0xe]
  40b104:	mov    edx,0x4
  40b109:	call   0x40abe0
  40b10e:	pop    ecx
  40b10f:	jmp    0x40b6b9
  40b114:	push   ebp
  40b115:	call   0x40ac2c
  40b11a:	pop    ecx
  40b11b:	push   ebp
  40b11c:	call   0x40ac58
  40b121:	pop    ecx
  40b122:	mov    eax,DWORD PTR [ebp+0x8]
  40b125:	push   eax
  40b126:	push   ebp
  40b127:	lea    edx,[ebp-0x28]
  40b12a:	mov    eax,DWORD PTR [ebp-0xc]
  40b12d:	call   0x40acd0
  40b132:	pop    ecx
  40b133:	mov    eax,DWORD PTR [ebp-0x28]
  40b136:	call   0x40abc4
  40b13b:	pop    ecx
  40b13c:	jmp    0x40b6b9
  40b141:	push   ebp
  40b142:	call   0x40ac2c
  40b147:	pop    ecx
  40b148:	push   ebp
  40b149:	call   0x40ac58
  40b14e:	pop    ecx
  40b14f:	mov    eax,DWORD PTR [ebp+0x8]
  40b152:	push   eax
  40b153:	push   ebp
  40b154:	lea    edx,[ebp-0x2c]
  40b157:	mov    eax,DWORD PTR [ebp-0xc]
  40b15a:	call   0x40ae4c
  40b15f:	pop    ecx
  40b160:	mov    eax,DWORD PTR [ebp-0x2c]
  40b163:	call   0x40abc4
  40b168:	pop    ecx
  40b169:	jmp    0x40b6b9
  40b16e:	push   ebp
  40b16f:	call   0x40ac2c
  40b174:	pop    ecx
  40b175:	push   ebp
  40b176:	call   0x40ac58
  40b17b:	pop    ecx
  40b17c:	mov    eax,DWORD PTR [ebp-0xc]
  40b17f:	dec    eax
  40b180:	sub    eax,0x2
  40b183:	jb     0x40b189
  40b185:	je     0x40b19f
  40b187:	jmp    0x40b1b9
  40b189:	mov    eax,DWORD PTR [ebp+0x8]
  40b18c:	push   eax
  40b18d:	movzx  eax,WORD PTR [ebp-0x10]
  40b191:	mov    edx,DWORD PTR [ebp-0xc]
  40b194:	call   0x40abe0
  40b199:	pop    ecx
  40b19a:	jmp    0x40b6b9
  40b19f:	mov    eax,DWORD PTR [ebp+0x8]
  40b1a2:	push   eax
  40b1a3:	movzx  eax,WORD PTR [ebp-0x10]
  40b1a7:	mov    eax,DWORD PTR [eax*4+0x470824]
  40b1ae:	call   0x40abc4
  40b1b3:	pop    ecx
  40b1b4:	jmp    0x40b6b9
  40b1b9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1bc:	push   eax
  40b1bd:	movzx  eax,WORD PTR [ebp-0x10]
  40b1c1:	mov    eax,DWORD PTR [eax*4+0x470854]
  40b1c8:	call   0x40abc4
  40b1cd:	pop    ecx
  40b1ce:	jmp    0x40b6b9
  40b1d3:	push   ebp
  40b1d4:	call   0x40ac2c
  40b1d9:	pop    ecx
  40b1da:	mov    eax,DWORD PTR [ebp-0xc]
  40b1dd:	dec    eax
  40b1de:	sub    eax,0x2
  40b1e1:	jb     0x40b1ed
  40b1e3:	je     0x40b20a
  40b1e5:	dec    eax
  40b1e6:	je     0x40b231
  40b1e8:	dec    eax
  40b1e9:	je     0x40b258
  40b1eb:	jmp    0x40b26c
  40b1ed:	push   ebp
  40b1ee:	call   0x40ac58
  40b1f3:	pop    ecx
  40b1f4:	mov    eax,DWORD PTR [ebp+0x8]
  40b1f7:	push   eax
  40b1f8:	movzx  eax,WORD PTR [ebp-0x12]
  40b1fc:	mov    edx,DWORD PTR [ebp-0xc]
  40b1ff:	call   0x40abe0
  40b204:	pop    ecx
  40b205:	jmp    0x40b6b9
  40b20a:	mov    eax,DWORD PTR [ebp+0x8]
  40b20d:	push   eax
  40b20e:	mov    eax,DWORD PTR [ebp+0x8]
  40b211:	push   DWORD PTR [eax+0xc]
  40b214:	push   DWORD PTR [eax+0x8]
  40b217:	call   0x40aaf4
  40b21c:	movzx  eax,ax
  40b21f:	mov    eax,DWORD PTR [eax*4+0x470884]
  40b226:	call   0x40abc4
  40b22b:	pop    ecx
  40b22c:	jmp    0x40b6b9
  40b231:	mov    eax,DWORD PTR [ebp+0x8]
  40b234:	push   eax
  40b235:	mov    eax,DWORD PTR [ebp+0x8]
  40b238:	push   DWORD PTR [eax+0xc]
  40b23b:	push   DWORD PTR [eax+0x8]
  40b23e:	call   0x40aaf4
  40b243:	movzx  eax,ax
  40b246:	mov    eax,DWORD PTR [eax*4+0x4708a0]
  40b24d:	call   0x40abc4
  40b252:	pop    ecx
  40b253:	jmp    0x40b6b9
  40b258:	mov    eax,DWORD PTR [ebp+0x8]
  40b25b:	push   eax
  40b25c:	mov    eax,ds:0x47080c
  40b261:	call   0x40af64
  40b266:	pop    ecx
  40b267:	jmp    0x40b6b9
  40b26c:	mov    eax,DWORD PTR [ebp+0x8]
  40b26f:	push   eax
  40b270:	mov    eax,ds:0x470810
  40b275:	call   0x40af64
  40b27a:	pop    ecx
  40b27b:	jmp    0x40b6b9
  40b280:	push   ebp
  40b281:	call   0x40ac2c
  40b286:	pop    ecx
  40b287:	push   ebp
  40b288:	call   0x40ac90
  40b28d:	pop    ecx
  40b28e:	mov    BYTE PTR [ebp-0x20],0x0
  40b292:	mov    esi,DWORD PTR [edi]
  40b294:	jmp    0x40b32f
  40b299:	movzx  eax,BYTE PTR [esi]
  40b29c:	movzx  eax,al
  40b29f:	bt     DWORD PTR ds:0x461808,eax
  40b2a6:	jae    0x40b2b3
  40b2a8:	mov    eax,esi
  40b2aa:	call   0x40d3d4
  40b2af:	mov    esi,eax
  40b2b1:	jmp    0x40b32f
  40b2b3:	movzx  eax,BYTE PTR [esi]
  40b2b6:	cmp    eax,0x48
  40b2b9:	jg     0x40b2ce
  40b2bb:	je     0x40b338
  40b2bd:	sub    eax,0x22
  40b2c0:	je     0x40b325
  40b2c2:	sub    eax,0x5
  40b2c5:	je     0x40b325
  40b2c7:	sub    eax,0x1a
  40b2ca:	je     0x40b2da
  40b2cc:	jmp    0x40b32e
  40b2ce:	sub    eax,0x61
  40b2d1:	je     0x40b2da
  40b2d3:	sub    eax,0x7
  40b2d6:	je     0x40b338
  40b2d8:	jmp    0x40b32e
  40b2da:	cmp    BYTE PTR [ebp-0x20],0x0
  40b2de:	jne    0x40b32e
  40b2e0:	mov    edx,0x40b6f8
  40b2e5:	mov    ecx,0x5
  40b2ea:	mov    eax,esi
  40b2ec:	call   0x40922c
  40b2f1:	test   eax,eax
  40b2f3:	je     0x40b31f
  40b2f5:	mov    edx,0x40b700
  40b2fa:	mov    ecx,0x3
  40b2ff:	mov    eax,esi
  40b301:	call   0x40922c
  40b306:	test   eax,eax
  40b308:	je     0x40b31f
  40b30a:	mov    edx,0x40b704
  40b30f:	mov    ecx,0x4
  40b314:	mov    eax,esi
  40b316:	call   0x40922c
  40b31b:	test   eax,eax
  40b31d:	jne    0x40b338
  40b31f:	mov    BYTE PTR [ebp-0x1f],0x1
  40b323:	jmp    0x40b338
  40b325:	movzx  eax,BYTE PTR [ebp-0x20]
  40b329:	xor    al,0x1
  40b32b:	mov    BYTE PTR [ebp-0x20],al
  40b32e:	inc    esi
  40b32f:	cmp    BYTE PTR [esi],0x0
  40b332:	jne    0x40b299
  40b338:	movzx  eax,WORD PTR [ebp-0x16]
  40b33c:	mov    WORD PTR [ebp-0x22],ax
  40b340:	cmp    BYTE PTR [ebp-0x1f],0x0
  40b344:	je     0x40b361
  40b346:	cmp    WORD PTR [ebp-0x22],0x0
  40b34b:	jne    0x40b355
  40b34d:	mov    WORD PTR [ebp-0x22],0xc
  40b353:	jmp    0x40b361
  40b355:	cmp    WORD PTR [ebp-0x22],0xc
  40b35a:	jbe    0x40b361
  40b35c:	sub    WORD PTR [ebp-0x22],0xc
  40b361:	cmp    DWORD PTR [ebp-0xc],0x2
  40b365:	jle    0x40b36e
  40b367:	mov    DWORD PTR [ebp-0xc],0x2
  40b36e:	mov    eax,DWORD PTR [ebp+0x8]
  40b371:	push   eax
  40b372:	movzx  eax,WORD PTR [ebp-0x22]
  40b376:	mov    edx,DWORD PTR [ebp-0xc]
  40b379:	call   0x40abe0
  40b37e:	pop    ecx
  40b37f:	jmp    0x40b6b9
  40b384:	push   ebp
  40b385:	call   0x40ac2c
  40b38a:	pop    ecx
  40b38b:	push   ebp
  40b38c:	call   0x40ac90
  40b391:	pop    ecx
  40b392:	cmp    DWORD PTR [ebp-0xc],0x2
  40b396:	jle    0x40b39f
  40b398:	mov    DWORD PTR [ebp-0xc],0x2
  40b39f:	mov    eax,DWORD PTR [ebp+0x8]
  40b3a2:	push   eax
  40b3a3:	movzx  eax,WORD PTR [ebp-0x18]
  40b3a7:	mov    edx,DWORD PTR [ebp-0xc]
  40b3aa:	call   0x40abe0
  40b3af:	pop    ecx
  40b3b0:	jmp    0x40b6b9
  40b3b5:	push   ebp
  40b3b6:	call   0x40ac2c
  40b3bb:	pop    ecx
  40b3bc:	push   ebp
  40b3bd:	call   0x40ac90
  40b3c2:	pop    ecx
  40b3c3:	cmp    DWORD PTR [ebp-0xc],0x2
  40b3c7:	jle    0x40b3d0
  40b3c9:	mov    DWORD PTR [ebp-0xc],0x2
  40b3d0:	mov    eax,DWORD PTR [ebp+0x8]
  40b3d3:	push   eax
  40b3d4:	movzx  eax,WORD PTR [ebp-0x1a]
  40b3d8:	mov    edx,DWORD PTR [ebp-0xc]
  40b3db:	call   0x40abe0
  40b3e0:	pop    ecx
  40b3e1:	jmp    0x40b6b9
  40b3e6:	push   ebp
  40b3e7:	call   0x40ac2c
  40b3ec:	pop    ecx
  40b3ed:	cmp    DWORD PTR [ebp-0xc],0x1
  40b3f1:	jne    0x40b407
  40b3f3:	mov    eax,DWORD PTR [ebp+0x8]
  40b3f6:	push   eax
  40b3f7:	mov    eax,ds:0x470820
  40b3fc:	call   0x40af64
  40b401:	pop    ecx
  40b402:	jmp    0x40b6b9
  40b407:	mov    eax,DWORD PTR [ebp+0x8]
  40b40a:	push   eax
  40b40b:	mov    eax,ds:0x470824
  40b410:	call   0x40af64
  40b415:	pop    ecx
  40b416:	jmp    0x40b6b9
  40b41b:	push   ebp
  40b41c:	call   0x40ac2c
  40b421:	pop    ecx
  40b422:	push   ebp
  40b423:	call   0x40ac90
  40b428:	pop    ecx
  40b429:	cmp    DWORD PTR [ebp-0xc],0x3
  40b42d:	jle    0x40b436
  40b42f:	mov    DWORD PTR [ebp-0xc],0x3
  40b436:	mov    eax,DWORD PTR [ebp+0x8]
  40b439:	push   eax
  40b43a:	movzx  eax,WORD PTR [ebp-0x1c]
  40b43e:	mov    edx,DWORD PTR [ebp-0xc]
  40b441:	call   0x40abe0
  40b446:	pop    ecx
  40b447:	jmp    0x40b6b9
  40b44c:	push   ebp
  40b44d:	call   0x40ac90
  40b452:	pop    ecx
  40b453:	mov    esi,DWORD PTR [edi]
  40b455:	dec    esi
  40b456:	mov    edx,0x40b6f8
  40b45b:	mov    ecx,0x5
  40b460:	mov    eax,esi
  40b462:	call   0x40922c
  40b467:	test   eax,eax
  40b469:	jne    0x40b492
  40b46b:	cmp    WORD PTR [ebp-0x16],0xc
  40b470:	jb     0x40b475
  40b472:	add    esi,0x3
  40b475:	mov    eax,DWORD PTR [ebp+0x8]
  40b478:	push   eax
  40b479:	mov    edx,0x2
  40b47e:	mov    eax,esi
  40b480:	call   0x40ab80
  40b485:	pop    ecx
  40b486:	add    DWORD PTR [edi],0x4
  40b489:	mov    BYTE PTR [ebp-0x1f],0x1
  40b48d:	jmp    0x40b6b9
  40b492:	mov    edx,0x40b700
  40b497:	mov    ecx,0x3
  40b49c:	mov    eax,esi
  40b49e:	call   0x40922c
  40b4a3:	test   eax,eax
  40b4a5:	jne    0x40b4ce
  40b4a7:	cmp    WORD PTR [ebp-0x16],0xc
  40b4ac:	jb     0x40b4b1
  40b4ae:	add    esi,0x2
  40b4b1:	mov    eax,DWORD PTR [ebp+0x8]
  40b4b4:	push   eax
  40b4b5:	mov    edx,0x1
  40b4ba:	mov    eax,esi
  40b4bc:	call   0x40ab80
  40b4c1:	pop    ecx
  40b4c2:	add    DWORD PTR [edi],0x2
  40b4c5:	mov    BYTE PTR [ebp-0x1f],0x1
  40b4c9:	jmp    0x40b6b9
  40b4ce:	mov    edx,0x40b704
  40b4d3:	mov    ecx,0x4
  40b4d8:	mov    eax,esi
  40b4da:	call   0x40922c
  40b4df:	test   eax,eax
  40b4e1:	jne    0x40b516
  40b4e3:	cmp    WORD PTR [ebp-0x16],0xc
  40b4e8:	jae    0x40b4fb
  40b4ea:	mov    eax,DWORD PTR [ebp+0x8]
  40b4ed:	push   eax
  40b4ee:	mov    eax,ds:0x470818
  40b4f3:	call   0x40abc4
  40b4f8:	pop    ecx
  40b4f9:	jmp    0x40b50a
  40b4fb:	mov    eax,DWORD PTR [ebp+0x8]
  40b4fe:	push   eax
  40b4ff:	mov    eax,ds:0x47081c
  40b504:	call   0x40abc4
  40b509:	pop    ecx
  40b50a:	add    DWORD PTR [edi],0x3
  40b50d:	mov    BYTE PTR [ebp-0x1f],0x1
  40b511:	jmp    0x40b6b9
  40b516:	mov    edx,0x40b70c
  40b51b:	mov    ecx,0x4
  40b520:	mov    eax,esi
  40b522:	call   0x40922c
  40b527:	test   eax,eax
  40b529:	jne    0x40b55c
  40b52b:	push   ebp
  40b52c:	call   0x40ac58
  40b531:	pop    ecx
  40b532:	mov    eax,DWORD PTR [ebp+0x8]
  40b535:	push   eax
  40b536:	mov    eax,DWORD PTR [ebp+0x8]
  40b539:	push   DWORD PTR [eax+0xc]
  40b53c:	push   DWORD PTR [eax+0x8]
  40b53f:	call   0x40aaf4
  40b544:	movzx  eax,ax
  40b547:	mov    eax,DWORD PTR [eax*4+0x4708a0]
  40b54e:	call   0x40abc4
  40b553:	pop    ecx
  40b554:	add    DWORD PTR [edi],0x3
  40b557:	jmp    0x40b6b9
  40b55c:	mov    edx,0x40b714
  40b561:	mov    ecx,0x3
  40b566:	mov    eax,esi
  40b568:	call   0x40922c
  40b56d:	test   eax,eax
  40b56f:	jne    0x40b5a2
  40b571:	push   ebp
  40b572:	call   0x40ac58
  40b577:	pop    ecx
  40b578:	mov    eax,DWORD PTR [ebp+0x8]
  40b57b:	push   eax
  40b57c:	mov    eax,DWORD PTR [ebp+0x8]
  40b57f:	push   DWORD PTR [eax+0xc]
  40b582:	push   DWORD PTR [eax+0x8]
  40b585:	call   0x40aaf4
  40b58a:	movzx  eax,ax
  40b58d:	mov    eax,DWORD PTR [eax*4+0x470884]
  40b594:	call   0x40abc4
  40b599:	pop    ecx
  40b59a:	add    DWORD PTR [edi],0x2
  40b59d:	jmp    0x40b6b9
  40b5a2:	mov    eax,DWORD PTR [ebp+0x8]
  40b5a5:	push   eax
  40b5a6:	lea    eax,[ebp-0x5]
  40b5a9:	mov    edx,0x1
  40b5ae:	call   0x40ab80
  40b5b3:	pop    ecx
  40b5b4:	jmp    0x40b6b9
  40b5b9:	push   ebp
  40b5ba:	call   0x40ac2c
  40b5bf:	pop    ecx
  40b5c0:	mov    eax,DWORD PTR [ebp+0x8]
  40b5c3:	push   eax
  40b5c4:	mov    eax,ds:0x47080c
  40b5c9:	call   0x40af64
  40b5ce:	pop    ecx
  40b5cf:	push   ebp
  40b5d0:	call   0x40ac90
  40b5d5:	pop    ecx
  40b5d6:	cmp    WORD PTR [ebp-0x16],0x0
  40b5db:	jne    0x40b5ef
  40b5dd:	cmp    WORD PTR [ebp-0x18],0x0
  40b5e2:	jne    0x40b5ef
  40b5e4:	cmp    WORD PTR [ebp-0x1a],0x0
  40b5e9:	je     0x40b6b9
  40b5ef:	mov    eax,DWORD PTR [ebp+0x8]
  40b5f2:	push   eax
  40b5f3:	mov    eax,0x40b718
  40b5f8:	mov    edx,0x1
  40b5fd:	call   0x40ab80
  40b602:	pop    ecx
  40b603:	mov    eax,DWORD PTR [ebp+0x8]
  40b606:	push   eax
  40b607:	mov    eax,ds:0x470824
  40b60c:	call   0x40af64
  40b611:	pop    ecx
  40b612:	jmp    0x40b6b9
  40b617:	cmp    BYTE PTR ds:0x470809,0x0
  40b61e:	je     0x40b6b9
  40b624:	mov    eax,DWORD PTR [ebp+0x8]
  40b627:	push   eax
  40b628:	mov    eax,0x470809
  40b62d:	mov    edx,0x1
  40b632:	call   0x40ab80
  40b637:	pop    ecx
  40b638:	jmp    0x40b6b9
  40b63a:	cmp    BYTE PTR ds:0x470814,0x0
  40b641:	je     0x40b6b9
  40b643:	mov    eax,DWORD PTR [ebp+0x8]
  40b646:	push   eax
  40b647:	mov    eax,0x470814
  40b64c:	mov    edx,0x1
  40b651:	call   0x40ab80
  40b656:	pop    ecx
  40b657:	jmp    0x40b6b9
  40b659:	mov    esi,DWORD PTR [edi]
  40b65b:	jmp    0x40b67b
  40b65d:	mov    eax,DWORD PTR [edi]
  40b65f:	movzx  eax,BYTE PTR [eax]
  40b662:	movzx  eax,al
  40b665:	bt     DWORD PTR ds:0x461808,eax
  40b66c:	jae    0x40b679
  40b66e:	mov    eax,DWORD PTR [edi]
  40b670:	call   0x40d3d4
  40b675:	mov    DWORD PTR [edi],eax
  40b677:	jmp    0x40b67b
  40b679:	inc    DWORD PTR [edi]
  40b67b:	mov    eax,DWORD PTR [edi]
  40b67d:	cmp    BYTE PTR [eax],0x0
  40b680:	je     0x40b68c
  40b682:	mov    eax,DWORD PTR [edi]
  40b684:	movzx  eax,BYTE PTR [eax]
  40b687:	cmp    al,BYTE PTR [ebp-0x5]
  40b68a:	jne    0x40b65d
  40b68c:	mov    eax,DWORD PTR [ebp+0x8]
  40b68f:	push   eax
  40b690:	mov    edx,DWORD PTR [edi]
  40b692:	sub    edx,esi
  40b694:	mov    eax,esi
  40b696:	call   0x40ab80
  40b69b:	pop    ecx
  40b69c:	mov    eax,DWORD PTR [edi]
  40b69e:	cmp    BYTE PTR [eax],0x0
  40b6a1:	je     0x40b6b9
  40b6a3:	inc    DWORD PTR [edi]
  40b6a5:	jmp    0x40b6b9
  40b6a7:	mov    eax,DWORD PTR [ebp+0x8]
  40b6aa:	push   eax
  40b6ab:	lea    eax,[ebp-0x5]
  40b6ae:	mov    edx,0x1
  40b6b3:	call   0x40ab80
  40b6b8:	pop    ecx
  40b6b9:	mov    eax,DWORD PTR [edi]
  40b6bb:	cmp    BYTE PTR [eax],0x0
  40b6be:	jne    0x40afc0
  40b6c4:	mov    eax,DWORD PTR [ebp+0x8]
  40b6c7:	dec    DWORD PTR [eax-0x108]
  40b6cd:	xor    eax,eax
  40b6cf:	pop    edx
  40b6d0:	pop    ecx
  40b6d1:	pop    ecx
  40b6d2:	mov    DWORD PTR fs:[eax],edx
  40b6d5:	push   0x40b6ef
  40b6da:	lea    eax,[ebp-0x2c]
  40b6dd:	mov    edx,0x2
  40b6e2:	call   0x404fac
  40b6e7:	ret    
  40b6e8:	jmp    0x40481c
  40b6ed:	jmp    0x40b6da
  40b6ef:	pop    edi
  40b6f0:	pop    esi
  40b6f1:	pop    ebx
  40b6f2:	mov    esp,ebp
  40b6f4:	pop    ebp
  40b6f5:	ret    
  40b6f6:	add    BYTE PTR [eax],al
  40b6f8:	inc    ecx
  40b6f9:	dec    ebp
  40b6fa:	das    
  40b6fb:	push   eax
  40b6fc:	dec    ebp
  40b6fd:	add    BYTE PTR [eax],al
  40b6ff:	add    BYTE PTR [ecx+0x2f],al
  40b702:	push   eax
  40b703:	add    BYTE PTR [ecx+0x4d],al
  40b706:	push   eax
  40b707:	dec    ebp
  40b708:	add    BYTE PTR [eax],al
  40b70a:	add    BYTE PTR [eax],al
  40b70c:	inc    ecx
  40b70d:	inc    ecx
  40b70e:	inc    ecx
  40b70f:	inc    ecx
  40b710:	add    BYTE PTR [eax],al
  40b712:	add    BYTE PTR [eax],al
  40b714:	inc    ecx
  40b715:	inc    ecx
  40b716:	inc    ecx
  40b717:	add    BYTE PTR [eax],ah
  40b719:	add    BYTE PTR [eax],al
  40b71b:	add    BYTE PTR [ebp-0x75],dl
  40b71e:	in     al,dx
  40b71f:	add    esp,0xfffffef8
  40b725:	push   ebx
  40b726:	push   esi
  40b727:	mov    ebx,edx
  40b729:	mov    esi,eax
  40b72b:	xor    eax,eax
  40b72d:	mov    DWORD PTR [ebp-0x104],eax
  40b733:	xor    eax,eax
  40b735:	mov    DWORD PTR [ebp-0x108],eax
  40b73b:	test   ebx,ebx
  40b73d:	je     0x40b74a
  40b73f:	push   ebp
  40b740:	mov    eax,ebx
  40b742:	call   0x40af64
  40b747:	pop    ecx
  40b748:	jmp    0x40b756
  40b74a:	push   ebp
  40b74b:	mov    eax,0x40b774
  40b750:	call   0x40af64
  40b755:	pop    ecx
  40b756:	lea    edx,[ebp-0x100]
  40b75c:	mov    eax,esi
  40b75e:	mov    ecx,DWORD PTR [ebp-0x104]
  40b764:	call   0x405078
  40b769:	pop    esi
  40b76a:	pop    ebx
  40b76b:	mov    esp,ebp
  40b76d:	pop    ebp
  40b76e:	ret    0x8
  40b771:	add    BYTE PTR [eax],al
  40b773:	add    BYTE PTR [ebx+0x0],al
  40b776:	add    BYTE PTR [eax],al
  40b778:	push   ebx
  40b779:	push   esi
  40b77a:	push   edi
  40b77b:	mov    edi,edx
  40b77d:	mov    esi,eax
  40b77f:	mov    ebx,DWORD PTR [edi]
  40b781:	jmp    0x40b784
  40b783:	inc    ebx
  40b784:	mov    eax,esi
  40b786:	call   0x405248
  40b78b:	cmp    ebx,eax
  40b78d:	jg     0x40b796
  40b78f:	cmp    BYTE PTR [esi+ebx*1-0x1],0x20
  40b794:	je     0x40b783
  40b796:	mov    DWORD PTR [edi],ebx
  40b798:	pop    edi
  40b799:	pop    esi
  40b79a:	pop    ebx
  40b79b:	ret    
  40b79c:	push   ebp
  40b79d:	mov    ebp,esp
  40b79f:	add    esp,0xfffffff4
  40b7a2:	push   ebx
  40b7a3:	push   esi
  40b7a4:	push   edi
  40b7a5:	mov    DWORD PTR [ebp-0x8],ecx
  40b7a8:	mov    DWORD PTR [ebp-0x4],edx
  40b7ab:	mov    edi,eax
  40b7ad:	mov    BYTE PTR [ebp-0x9],0x0
  40b7b1:	mov    eax,DWORD PTR [ebp+0x8]
  40b7b4:	mov    BYTE PTR [eax],0x0
  40b7b7:	mov    edx,DWORD PTR [ebp-0x4]
  40b7ba:	mov    eax,edi
  40b7bc:	call   0x40b778
  40b7c1:	mov    ebx,DWORD PTR [ebp-0x4]
  40b7c4:	mov    ebx,DWORD PTR [ebx]
  40b7c6:	xor    esi,esi
  40b7c8:	jmp    0x40b7e0
  40b7ca:	mov    eax,esi
  40b7cc:	add    eax,eax
  40b7ce:	lea    eax,[eax+eax*4]
  40b7d1:	movzx  edx,BYTE PTR [edi+ebx*1-0x1]
  40b7d6:	sub    dx,0x30
  40b7da:	add    ax,dx
  40b7dd:	mov    esi,eax
  40b7df:	inc    ebx
  40b7e0:	mov    eax,edi
  40b7e2:	call   0x405248
  40b7e7:	cmp    ebx,eax
  40b7e9:	jg     0x40b7fd
  40b7eb:	movzx  eax,BYTE PTR [edi+ebx*1-0x1]
  40b7f0:	add    al,0xd0
  40b7f2:	sub    al,0xa
  40b7f4:	jae    0x40b7fd
  40b7f6:	cmp    si,0x3e8
  40b7fb:	jb     0x40b7ca
  40b7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40b800:	cmp    ebx,DWORD PTR [eax]
  40b802:	jle    0x40b821
  40b804:	mov    eax,ebx
  40b806:	mov    edx,DWORD PTR [ebp-0x4]
  40b809:	mov    edx,DWORD PTR [edx]
  40b80b:	sub    al,dl
  40b80d:	mov    edx,DWORD PTR [ebp+0x8]
  40b810:	mov    BYTE PTR [edx],al
  40b812:	mov    eax,DWORD PTR [ebp-0x4]
  40b815:	mov    DWORD PTR [eax],ebx
  40b817:	mov    eax,DWORD PTR [ebp-0x8]
  40b81a:	mov    WORD PTR [eax],si
  40b81d:	mov    BYTE PTR [ebp-0x9],0x1
  40b821:	movzx  eax,BYTE PTR [ebp-0x9]
  40b825:	pop    edi
  40b826:	pop    esi
  40b827:	pop    ebx
  40b828:	mov    esp,ebp
  40b82a:	pop    ebp
  40b82b:	ret    0x4
  40b82e:	mov    eax,eax
  40b830:	push   ebp
  40b831:	mov    ebp,esp
  40b833:	add    esp,0xffffffec
  40b836:	push   ebx
  40b837:	push   esi
  40b838:	push   edi
  40b839:	xor    ebx,ebx
  40b83b:	mov    DWORD PTR [ebp-0x14],ebx
  40b83e:	mov    ebx,ecx
  40b840:	mov    DWORD PTR [ebp-0x8],edx
  40b843:	mov    DWORD PTR [ebp-0x4],eax
  40b846:	xor    eax,eax
  40b848:	push   ebp
  40b849:	push   0x40b8f6
  40b84e:	push   DWORD PTR fs:[eax]
  40b851:	mov    DWORD PTR fs:[eax],esp
  40b854:	mov    BYTE PTR [ebp-0x9],0x0
  40b858:	test   ebx,ebx
  40b85a:	je     0x40b8e0
  40b860:	mov    edx,DWORD PTR [ebp-0x8]
  40b863:	mov    eax,DWORD PTR [ebp-0x4]
  40b866:	call   0x40b778
  40b86b:	mov    esi,ebx
  40b86d:	test   esi,esi
  40b86f:	je     0x40b876
  40b871:	sub    esi,0x4
  40b874:	mov    esi,DWORD PTR [esi]
  40b876:	lea    eax,[ebp-0x14]
  40b879:	push   eax
  40b87a:	mov    edx,DWORD PTR [ebp-0x8]
  40b87d:	mov    edx,DWORD PTR [edx]
  40b87f:	mov    ecx,esi
  40b881:	mov    eax,DWORD PTR [ebp-0x4]
  40b884:	call   0x405480
  40b889:	mov    eax,DWORD PTR [ebp-0x14]
  40b88c:	mov    DWORD PTR [ebp-0x10],eax
  40b88f:	mov    esi,ebx
  40b891:	test   esi,esi
  40b893:	je     0x40b89a
  40b895:	sub    esi,0x4
  40b898:	mov    esi,DWORD PTR [esi]
  40b89a:	mov    edi,DWORD PTR [ebp-0x10]
  40b89d:	test   edi,edi
  40b89f:	je     0x40b8a6
  40b8a1:	sub    edi,0x4
  40b8a4:	mov    edi,DWORD PTR [edi]
  40b8a6:	push   edi
  40b8a7:	mov    eax,DWORD PTR [ebp-0x10]
  40b8aa:	call   0x405418
  40b8af:	push   eax
  40b8b0:	push   esi
  40b8b1:	mov    eax,ebx
  40b8b3:	call   0x405418
  40b8b8:	push   eax
  40b8b9:	push   0x1
  40b8bb:	push   0x400
  40b8c0:	call   0x407148
  40b8c5:	sub    eax,0x2
  40b8c8:	test   eax,eax
  40b8ca:	jne    0x40b8e0
  40b8cc:	mov    eax,ebx
  40b8ce:	test   eax,eax
  40b8d0:	je     0x40b8d7
  40b8d2:	sub    eax,0x4
  40b8d5:	mov    eax,DWORD PTR [eax]
  40b8d7:	mov    edx,DWORD PTR [ebp-0x8]
  40b8da:	add    DWORD PTR [edx],eax
  40b8dc:	mov    BYTE PTR [ebp-0x9],0x1
  40b8e0:	xor    eax,eax
  40b8e2:	pop    edx
  40b8e3:	pop    ecx
  40b8e4:	pop    ecx
  40b8e5:	mov    DWORD PTR fs:[eax],edx
  40b8e8:	push   0x40b8fd
  40b8ed:	lea    eax,[ebp-0x14]
  40b8f0:	call   0x404f88
  40b8f5:	ret    
  40b8f6:	jmp    0x40481c
  40b8fb:	jmp    0x40b8ed
  40b8fd:	movzx  eax,BYTE PTR [ebp-0x9]
  40b901:	pop    edi
  40b902:	pop    esi
  40b903:	pop    ebx
  40b904:	mov    esp,ebp
  40b906:	pop    ebp
  40b907:	ret    
  40b908:	push   ebx
  40b909:	push   esi
  40b90a:	push   edi
  40b90b:	push   ecx
  40b90c:	mov    BYTE PTR [esp],cl
  40b90f:	mov    edi,edx
  40b911:	mov    esi,eax
  40b913:	xor    ebx,ebx
  40b915:	mov    edx,edi
  40b917:	mov    eax,esi
  40b919:	call   0x40b778
  40b91e:	mov    eax,esi
  40b920:	test   eax,eax
  40b922:	je     0x40b929
  40b924:	sub    eax,0x4
  40b927:	mov    eax,DWORD PTR [eax]
  40b929:	cmp    eax,DWORD PTR [edi]
  40b92b:	jl     0x40b93d
  40b92d:	mov    eax,DWORD PTR [edi]
  40b92f:	movzx  eax,BYTE PTR [esi+eax*1-0x1]
  40b934:	cmp    al,BYTE PTR [esp]
  40b937:	jne    0x40b93d
  40b939:	inc    DWORD PTR [edi]
  40b93b:	mov    bl,0x1
  40b93d:	mov    eax,ebx
  40b93f:	pop    edx
  40b940:	pop    edi
  40b941:	pop    esi
  40b942:	pop    ebx
  40b943:	ret    
  40b944:	push   ebx
  40b945:	push   esi
  40b946:	push   edi
  40b947:	mov    esi,eax
  40b949:	xor    ebx,ebx
  40b94b:	mov    edi,0x1
  40b950:	jmp    0x40b97c
  40b952:	movzx  eax,BYTE PTR [esi+edi*1-0x1]
  40b957:	and    al,0xdf
  40b959:	sub    al,0x44
  40b95b:	je     0x40b977
  40b95d:	dec    al
  40b95f:	je     0x40b96b
  40b961:	sub    al,0x8
  40b963:	je     0x40b973
  40b965:	sub    al,0xc
  40b967:	je     0x40b96f
  40b969:	jmp    0x40b97b
  40b96b:	mov    bl,0x2
  40b96d:	jmp    0x40b989
  40b96f:	mov    bl,0x2
  40b971:	jmp    0x40b989
  40b973:	xor    ebx,ebx
  40b975:	jmp    0x40b989
  40b977:	mov    bl,0x1
  40b979:	jmp    0x40b989
  40b97b:	inc    edi
  40b97c:	mov    eax,esi
  40b97e:	call   0x405248
  40b983:	cmp    edi,eax
  40b985:	jle    0x40b952
  40b987:	xor    ebx,ebx
  40b989:	mov    eax,ebx
  40b98b:	pop    edi
  40b98c:	pop    esi
  40b98d:	pop    ebx
  40b98e:	ret    
  40b98f:	nop
  40b990:	push   ebx
  40b991:	push   esi
  40b992:	mov    ebx,edx
  40b994:	mov    esi,eax
  40b996:	jmp    0x40b9ba
  40b998:	mov    eax,DWORD PTR [ebx]
  40b99a:	movzx  eax,BYTE PTR [esi+eax*1-0x1]
  40b99f:	movzx  eax,al
  40b9a2:	bt     DWORD PTR ds:0x461808,eax
  40b9a9:	jae    0x40b9b8
  40b9ab:	mov    edx,DWORD PTR [ebx]
  40b9ad:	mov    eax,esi
  40b9af:	call   0x40d414
  40b9b4:	mov    DWORD PTR [ebx],eax
  40b9b6:	jmp    0x40b9ba
  40b9b8:	inc    DWORD PTR [ebx]
  40b9ba:	mov    eax,esi
  40b9bc:	call   0x405248
  40b9c1:	cmp    eax,DWORD PTR [ebx]
  40b9c3:	jl     0x40b9d2
  40b9c5:	mov    eax,DWORD PTR [ebx]
  40b9c7:	movzx  eax,BYTE PTR [esi+eax*1-0x1]
  40b9cc:	add    al,0xd0
  40b9ce:	sub    al,0xa
  40b9d0:	jae    0x40b998
  40b9d2:	pop    esi
  40b9d3:	pop    ebx
  40b9d4:	ret    
  40b9d5:	lea    eax,[eax+0x0]
  40b9d8:	push   ebx
  40b9d9:	push   esi
  40b9da:	push   edi
  40b9db:	push   ebp
  40b9dc:	push   ecx
  40b9dd:	mov    ebp,eax
  40b9df:	xor    eax,eax
  40b9e1:	mov    DWORD PTR [esp],eax
  40b9e4:	mov    edi,0x7
  40b9e9:	mov    ebx,0x4708d0
  40b9ee:	mov    esi,0x4708ec
  40b9f3:	cmp    DWORD PTR [ebx],0x0
  40b9f6:	je     0x40ba21
  40b9f8:	mov    eax,ebp
  40b9fa:	call   0x405418
  40b9ff:	push   eax
  40ba00:	mov    eax,DWORD PTR [ebx]
  40ba02:	call   0x405418
  40ba07:	pop    edx
  40ba08:	call   0x40d518
  40ba0d:	test   eax,eax
  40ba0f:	je     0x40ba18
  40ba11:	mov    eax,DWORD PTR [esi]
  40ba13:	mov    DWORD PTR [esp],eax
  40ba16:	jmp    0x40ba21
  40ba18:	add    esi,0x4
  40ba1b:	add    ebx,0x4
  40ba1e:	dec    edi
  40ba1f:	jne    0x40b9f3
  40ba21:	mov    eax,DWORD PTR [esp]
  40ba24:	pop    edx
  40ba25:	pop    ebp
  40ba26:	pop    edi
  40ba27:	pop    esi
  40ba28:	pop    ebx
  40ba29:	ret    
  40ba2a:	mov    eax,eax
  40ba2c:	push   ebp
  40ba2d:	mov    ebp,esp
  40ba2f:	push   ebx
  40ba30:	mov    ebx,eax
  40ba32:	cmp    DWORD PTR ds:0x4708c4,0x12
  40ba39:	jne    0x40ba75
  40ba3b:	cmp    ebx,0x63
  40ba3e:	jg     0x40ba64
  40ba40:	call   0x40ab6c
  40ba45:	movzx  ecx,ax
  40ba48:	mov    eax,DWORD PTR [ebp+0x8]
  40ba4b:	mov    eax,DWORD PTR [eax-0x4]
  40ba4e:	cdq    
  40ba4f:	xor    eax,edx
  40ba51:	sub    eax,edx
  40ba53:	add    ecx,eax
  40ba55:	mov    eax,ecx
  40ba57:	mov    ecx,0x64
  40ba5c:	cdq    
  40ba5d:	idiv   ecx
  40ba5f:	imul   eax,eax,0x64
  40ba62:	add    ebx,eax
  40ba64:	mov    eax,DWORD PTR [ebp+0x8]
  40ba67:	cmp    DWORD PTR [eax-0x4],0x0
  40ba6b:	jle    0x40ba7b
  40ba6d:	mov    eax,DWORD PTR [ebp+0x8]
  40ba70:	neg    DWORD PTR [eax-0x4]
  40ba73:	jmp    0x40ba7b
  40ba75:	mov    eax,DWORD PTR [ebp+0x8]
  40ba78:	dec    DWORD PTR [eax-0x4]
  40ba7b:	mov    eax,DWORD PTR [ebp+0x8]
  40ba7e:	mov    eax,DWORD PTR [eax-0x4]
  40ba81:	add    eax,ebx
  40ba83:	pop    ebx
  40ba84:	pop    ebp
  40ba85:	ret    
  40ba86:	mov    eax,eax
  40ba88:	push   ebp
  40ba89:	mov    ebp,esp
  40ba8b:	add    esp,0xffffffd8
  40ba8e:	push   ebx
  40ba8f:	push   esi
  40ba90:	push   edi
  40ba91:	xor    ebx,ebx
  40ba93:	mov    DWORD PTR [ebp-0x28],ebx
  40ba96:	mov    DWORD PTR [ebp-0x24],ebx
  40ba99:	mov    DWORD PTR [ebp-0x20],ebx
  40ba9c:	mov    DWORD PTR [ebp-0x8],ebx
  40ba9f:	mov    DWORD PTR [ebp-0xc],ecx
  40baa2:	mov    ebx,edx
  40baa4:	mov    esi,eax
  40baa6:	xor    eax,eax
  40baa8:	push   ebp
  40baa9:	push   0x40bdaa
  40baae:	push   DWORD PTR fs:[eax]
  40bab1:	mov    DWORD PTR fs:[eax],esp
  40bab4:	xor    edi,edi
  40bab6:	mov    WORD PTR [ebp-0x16],0x0
  40babc:	mov    WORD PTR [ebp-0x18],0x0
  40bac2:	mov    BYTE PTR [ebp-0x1c],0x0
  40bac6:	mov    BYTE PTR [ebp-0xd],0x0
  40baca:	mov    eax,ds:0x47080c
  40bacf:	call   0x40b944
  40bad4:	mov    BYTE PTR [ebp-0xe],al
  40bad7:	xor    eax,eax
  40bad9:	mov    DWORD PTR [ebp-0x4],eax
  40badc:	mov    eax,ds:0x47080c
  40bae1:	cmp    BYTE PTR [eax],0x67
  40bae4:	jne    0x40bb1a
  40bae6:	mov    edx,ebx
  40bae8:	mov    eax,esi
  40baea:	call   0x40b990
  40baef:	lea    eax,[ebp-0x20]
  40baf2:	push   eax
  40baf3:	mov    ecx,DWORD PTR [ebx]
  40baf5:	dec    ecx
  40baf6:	mov    edx,0x1
  40bafb:	mov    eax,esi
  40bafd:	call   0x405480
  40bb02:	mov    eax,DWORD PTR [ebp-0x20]
  40bb05:	lea    edx,[ebp-0x8]
  40bb08:	call   0x408708
  40bb0d:	mov    eax,DWORD PTR [ebp-0x8]
  40bb10:	call   0x40b9d8
  40bb15:	mov    DWORD PTR [ebp-0x4],eax
  40bb18:	jmp    0x40bb36
  40bb1a:	mov    edx,DWORD PTR ds:0x47080c
  40bb20:	mov    eax,0x40bdc4
  40bb25:	call   0x40d4e0
  40bb2a:	test   eax,eax
  40bb2c:	jle    0x40bb36
  40bb2e:	mov    eax,ds:0x4708ec
  40bb33:	mov    DWORD PTR [ebp-0x4],eax
  40bb36:	lea    eax,[ebp-0x19]
  40bb39:	push   eax
  40bb3a:	lea    ecx,[ebp-0x10]
  40bb3d:	mov    edx,ebx
  40bb3f:	mov    eax,esi
  40bb41:	call   0x40b79c
  40bb46:	test   al,al
  40bb48:	je     0x40bd87
  40bb4e:	mov    edx,ebx
  40bb50:	movzx  ecx,BYTE PTR ds:0x470809
  40bb57:	mov    eax,esi
  40bb59:	call   0x40b908
  40bb5e:	test   al,al
  40bb60:	je     0x40bd87
  40bb66:	lea    eax,[ebp-0x1a]
  40bb69:	push   eax
  40bb6a:	lea    ecx,[ebp-0x12]
  40bb6d:	mov    edx,ebx
  40bb6f:	mov    eax,esi
  40bb71:	call   0x40b79c
  40bb76:	test   al,al
  40bb78:	je     0x40bd87
  40bb7e:	mov    edx,ebx
  40bb80:	movzx  ecx,BYTE PTR ds:0x470809
  40bb87:	mov    eax,esi
  40bb89:	call   0x40b908
  40bb8e:	test   al,al
  40bb90:	je     0x40bc68
  40bb96:	lea    eax,[ebp-0x1b]
  40bb99:	push   eax
  40bb9a:	lea    ecx,[ebp-0x14]
  40bb9d:	mov    edx,ebx
  40bb9f:	mov    eax,esi
  40bba1:	call   0x40b79c
  40bba6:	test   al,al
  40bba8:	je     0x40bd87
  40bbae:	movzx  eax,BYTE PTR [ebp-0xe]
  40bbb2:	sub    al,0x1
  40bbb4:	jb     0x40bbbe
  40bbb6:	je     0x40bbdb
  40bbb8:	dec    al
  40bbba:	je     0x40bbf8
  40bbbc:	jmp    0x40bc13
  40bbbe:	movzx  edi,WORD PTR [ebp-0x14]
  40bbc2:	movzx  eax,BYTE PTR [ebp-0x1b]
  40bbc6:	mov    BYTE PTR [ebp-0x1c],al
  40bbc9:	movzx  eax,WORD PTR [ebp-0x10]
  40bbcd:	mov    WORD PTR [ebp-0x16],ax
  40bbd1:	movzx  eax,WORD PTR [ebp-0x12]
  40bbd5:	mov    WORD PTR [ebp-0x18],ax
  40bbd9:	jmp    0x40bc13
  40bbdb:	movzx  edi,WORD PTR [ebp-0x14]
  40bbdf:	movzx  eax,BYTE PTR [ebp-0x1b]
  40bbe3:	mov    BYTE PTR [ebp-0x1c],al
  40bbe6:	movzx  eax,WORD PTR [ebp-0x12]
  40bbea:	mov    WORD PTR [ebp-0x16],ax
  40bbee:	movzx  eax,WORD PTR [ebp-0x10]
  40bbf2:	mov    WORD PTR [ebp-0x18],ax
  40bbf6:	jmp    0x40bc13
  40bbf8:	movzx  edi,WORD PTR [ebp-0x10]
  40bbfc:	movzx  eax,BYTE PTR [ebp-0x19]
  40bc00:	mov    BYTE PTR [ebp-0x1c],al
  40bc03:	movzx  eax,WORD PTR [ebp-0x12]
  40bc07:	mov    WORD PTR [ebp-0x16],ax
  40bc0b:	movzx  eax,WORD PTR [ebp-0x14]
  40bc0f:	mov    WORD PTR [ebp-0x18],ax
  40bc13:	cmp    DWORD PTR [ebp-0x4],0x0
  40bc17:	jle    0x40bc27
  40bc19:	push   ebp
  40bc1a:	movzx  eax,di
  40bc1d:	call   0x40ba2c
  40bc22:	pop    ecx
  40bc23:	mov    edi,eax
  40bc25:	jmp    0x40bc97
  40bc27:	cmp    BYTE PTR [ebp-0x1c],0x2
  40bc2b:	ja     0x40bc97
  40bc2d:	call   0x40ab6c
  40bc32:	movzx  ecx,ax
  40bc35:	movzx  eax,WORD PTR ds:0x4617d4
  40bc3c:	sub    ecx,eax
  40bc3e:	mov    eax,ecx
  40bc40:	push   ecx
  40bc41:	mov    ecx,0x64
  40bc46:	cdq    
  40bc47:	idiv   ecx
  40bc49:	pop    ecx
  40bc4a:	imul   ax,ax,0x64
  40bc4e:	add    di,ax
  40bc51:	cmp    WORD PTR ds:0x4617d4,0x0
  40bc59:	jbe    0x40bc97
  40bc5b:	movzx  eax,di
  40bc5e:	cmp    ecx,eax
  40bc60:	jle    0x40bc97
  40bc62:	add    di,0x64
  40bc66:	jmp    0x40bc97
  40bc68:	call   0x40ab6c
  40bc6d:	mov    edi,eax
  40bc6f:	cmp    BYTE PTR [ebp-0xe],0x1
  40bc73:	jne    0x40bc87
  40bc75:	movzx  eax,WORD PTR [ebp-0x10]
  40bc79:	mov    WORD PTR [ebp-0x18],ax
  40bc7d:	movzx  eax,WORD PTR [ebp-0x12]
  40bc81:	mov    WORD PTR [ebp-0x16],ax
  40bc85:	jmp    0x40bc97
  40bc87:	movzx  eax,WORD PTR [ebp-0x10]
  40bc8b:	mov    WORD PTR [ebp-0x16],ax
  40bc8f:	movzx  eax,WORD PTR [ebp-0x12]
  40bc93:	mov    WORD PTR [ebp-0x18],ax
  40bc97:	mov    edx,ebx
  40bc99:	movzx  ecx,BYTE PTR ds:0x470809
  40bca0:	mov    eax,esi
  40bca2:	call   0x40b908
  40bca7:	mov    edx,ebx
  40bca9:	mov    eax,esi
  40bcab:	call   0x40b778
  40bcb0:	cmp    BYTE PTR ds:0x4708cc,0x0
  40bcb7:	je     0x40bd71
  40bcbd:	mov    edx,DWORD PTR ds:0x47080c
  40bcc3:	mov    eax,0x40bdd0
  40bcc8:	call   0x405564
  40bccd:	test   eax,eax
  40bccf:	je     0x40bd71
  40bcd5:	mov    eax,ds:0x470820
  40bcda:	movzx  eax,BYTE PTR [eax]
  40bcdd:	add    al,0xd0
  40bcdf:	sub    al,0xa
  40bce1:	jae    0x40bcf5
  40bce3:	mov    edx,ebx
  40bce5:	mov    eax,esi
  40bce7:	call   0x40b990
  40bcec:	jmp    0x40bd71
  40bcf1:	jmp    0x40bcf5
  40bcf3:	inc    DWORD PTR [ebx]
  40bcf5:	mov    eax,esi
  40bcf7:	call   0x405248
  40bcfc:	cmp    eax,DWORD PTR [ebx]
  40bcfe:	jl     0x40bd09
  40bd00:	mov    eax,DWORD PTR [ebx]
  40bd02:	cmp    BYTE PTR [esi+eax*1-0x1],0x20
  40bd07:	jne    0x40bcf3
  40bd09:	mov    edx,ebx
  40bd0b:	mov    eax,esi
  40bd0d:	call   0x40b778
  40bd12:	mov    eax,esi
  40bd14:	call   0x405248
  40bd19:	cmp    eax,DWORD PTR [ebx]
  40bd1b:	jl     0x40bd71
  40bd1d:	lea    eax,[ebp-0x24]
  40bd20:	push   eax
  40bd21:	mov    eax,ds:0x470818
  40bd26:	call   0x405248
  40bd2b:	mov    ecx,eax
  40bd2d:	mov    edx,DWORD PTR [ebx]
  40bd2f:	mov    eax,esi
  40bd31:	call   0x405480
  40bd36:	mov    edx,DWORD PTR [ebp-0x24]
  40bd39:	mov    eax,ds:0x470818
  40bd3e:	call   0x4086c4
  40bd43:	test   eax,eax
  40bd45:	je     0x40bd71
  40bd47:	lea    eax,[ebp-0x28]
  40bd4a:	push   eax
  40bd4b:	mov    eax,ds:0x47081c
  40bd50:	call   0x405248
  40bd55:	mov    ecx,eax
  40bd57:	mov    edx,DWORD PTR [ebx]
  40bd59:	mov    eax,esi
  40bd5b:	call   0x405480
  40bd60:	mov    edx,DWORD PTR [ebp-0x28]
  40bd63:	mov    eax,ds:0x47081c
  40bd68:	call   0x4086c4
  40bd6d:	test   eax,eax
  40bd6f:	jne    0x40bcf5
  40bd71:	mov    eax,DWORD PTR [ebp-0xc]
  40bd74:	push   eax
  40bd75:	movzx  ecx,WORD PTR [ebp-0x18]
  40bd79:	movzx  edx,WORD PTR [ebp-0x16]
  40bd7d:	mov    eax,edi
  40bd7f:	call   0x40a88c
  40bd84:	mov    BYTE PTR [ebp-0xd],al
  40bd87:	xor    eax,eax
  40bd89:	pop    edx
  40bd8a:	pop    ecx
  40bd8b:	pop    ecx
  40bd8c:	mov    DWORD PTR fs:[eax],edx
  40bd8f:	push   0x40bdb1
  40bd94:	lea    eax,[ebp-0x28]
  40bd97:	mov    edx,0x3
  40bd9c:	call   0x404fac
  40bda1:	lea    eax,[ebp-0x8]
  40bda4:	call   0x404f88
  40bda9:	ret    
  40bdaa:	jmp    0x40481c
  40bdaf:	jmp    0x40bd94
  40bdb1:	movzx  eax,BYTE PTR [ebp-0xd]
  40bdb5:	pop    edi
  40bdb6:	pop    esi
  40bdb7:	pop    ebx
  40bdb8:	mov    esp,ebp
  40bdba:	pop    ebp
  40bdbb:	ret    
  40bdbc:	(bad)  
  40bdbd:	(bad)  
  40bdbe:	(bad)  
  40bdbf:	inc    DWORD PTR [ecx]
  40bdc1:	add    BYTE PTR [eax],al
  40bdc3:	add    BYTE PTR [ebp+0x0],ah
  40bdc6:	add    BYTE PTR [eax],al
  40bdc8:	(bad)  
  40bdc9:	(bad)  
  40bdca:	(bad)  
  40bdcb:	inc    DWORD PTR [ebx]
  40bdcd:	add    BYTE PTR [eax],al
  40bdcf:	add    BYTE PTR [esp+eiz*2+0x64],ah
  40bdd3:	add    BYTE PTR [ebx+0x56],dl
  40bdd6:	push   edi
  40bdd7:	push   ebp
  40bdd8:	add    esp,0xfffffff0
  40bddb:	mov    DWORD PTR [esp],ecx
  40bdde:	mov    esi,edx
  40bde0:	mov    ebp,eax
  40bde2:	xor    ebx,ebx
  40bde4:	or     edi,0xffffffff
  40bde7:	mov    edx,esi
  40bde9:	mov    ecx,DWORD PTR ds:0x470818
  40bdef:	mov    eax,ebp
  40bdf1:	call   0x40b830
  40bdf6:	test   al,al
  40bdf8:	jne    0x40be0c
  40bdfa:	mov    edx,esi
  40bdfc:	mov    ecx,0x40bfbc
  40be01:	mov    eax,ebp
  40be03:	call   0x40b830
  40be08:	test   al,al
  40be0a:	je     0x40be10
  40be0c:	xor    edi,edi
  40be0e:	jmp    0x40be3a
  40be10:	mov    edx,esi
  40be12:	mov    ecx,DWORD PTR ds:0x47081c
  40be18:	mov    eax,ebp
  40be1a:	call   0x40b830
  40be1f:	test   al,al
  40be21:	jne    0x40be35
  40be23:	mov    edx,esi
  40be25:	mov    ecx,0x40bfc8
  40be2a:	mov    eax,ebp
  40be2c:	call   0x40b830
  40be31:	test   al,al
  40be33:	je     0x40be3a
  40be35:	mov    edi,0xc
  40be3a:	test   edi,edi
  40be3c:	jl     0x40be47
  40be3e:	mov    edx,esi
  40be40:	mov    eax,ebp
  40be42:	call   0x40b778
  40be47:	lea    eax,[esp+0xc]
  40be4b:	push   eax
  40be4c:	lea    ecx,[esp+0x8]
  40be50:	mov    edx,esi
  40be52:	mov    eax,ebp
  40be54:	call   0x40b79c
  40be59:	test   al,al
  40be5b:	je     0x40bfa9
  40be61:	mov    WORD PTR [esp+0x6],0x0
  40be68:	mov    WORD PTR [esp+0x8],0x0
  40be6f:	mov    WORD PTR [esp+0xa],0x0
  40be76:	mov    edx,esi
  40be78:	movzx  ecx,BYTE PTR ds:0x470814
  40be7f:	mov    eax,ebp
  40be81:	call   0x40b908
  40be86:	test   al,al
  40be88:	je     0x40bf00
  40be8a:	lea    eax,[esp+0xc]
  40be8e:	push   eax
  40be8f:	lea    ecx,[esp+0xa]
  40be93:	mov    edx,esi
  40be95:	mov    eax,ebp
  40be97:	call   0x40b79c
  40be9c:	test   al,al
  40be9e:	je     0x40bfa9
  40bea4:	mov    edx,esi
  40bea6:	movzx  ecx,BYTE PTR ds:0x470814
  40bead:	mov    eax,ebp
  40beaf:	call   0x40b908
  40beb4:	test   al,al
  40beb6:	je     0x40bf00
  40beb8:	lea    eax,[esp+0xc]
  40bebc:	push   eax
  40bebd:	lea    ecx,[esp+0xc]
  40bec1:	mov    edx,esi
  40bec3:	mov    eax,ebp
  40bec5:	call   0x40b79c
  40beca:	test   al,al
  40becc:	je     0x40bfa9
  40bed2:	mov    edx,esi
  40bed4:	movzx  ecx,BYTE PTR ds:0x470807
  40bedb:	mov    eax,ebp
  40bedd:	call   0x40b908
  40bee2:	test   al,al
  40bee4:	je     0x40bf00
  40bee6:	lea    eax,[esp+0xc]
  40beea:	push   eax
  40beeb:	lea    ecx,[esp+0xe]
  40beef:	mov    edx,esi
  40bef1:	mov    eax,ebp
  40bef3:	call   0x40b79c
  40bef8:	test   al,al
  40befa:	je     0x40bfa9
  40bf00:	test   edi,edi
  40bf02:	jge    0x40bf57
  40bf04:	mov    edx,esi
  40bf06:	mov    ecx,DWORD PTR ds:0x470818
  40bf0c:	mov    eax,ebp
  40bf0e:	call   0x40b830
  40bf13:	test   al,al
  40bf15:	jne    0x40bf29
  40bf17:	mov    edx,esi
  40bf19:	mov    ecx,0x40bfbc
  40bf1e:	mov    eax,ebp
  40bf20:	call   0x40b830
  40bf25:	test   al,al
  40bf27:	je     0x40bf2d
  40bf29:	xor    edi,edi
  40bf2b:	jmp    0x40bf57
  40bf2d:	mov    edx,esi
  40bf2f:	mov    ecx,DWORD PTR ds:0x47081c
  40bf35:	mov    eax,ebp
  40bf37:	call   0x40b830
  40bf3c:	test   al,al
  40bf3e:	jne    0x40bf52
  40bf40:	mov    edx,esi
  40bf42:	mov    ecx,0x40bfc8
  40bf47:	mov    eax,ebp
  40bf49:	call   0x40b830
  40bf4e:	test   al,al
  40bf50:	je     0x40bf57
  40bf52:	mov    edi,0xc
  40bf57:	test   edi,edi
  40bf59:	jl     0x40bf7f
  40bf5b:	cmp    WORD PTR [esp+0x4],0x0
  40bf61:	je     0x40bfa9
  40bf63:	cmp    WORD PTR [esp+0x4],0xc
  40bf69:	ja     0x40bfa9
  40bf6b:	cmp    WORD PTR [esp+0x4],0xc
  40bf71:	jne    0x40bf7a
  40bf73:	mov    WORD PTR [esp+0x4],0x0
  40bf7a:	add    WORD PTR [esp+0x4],di
  40bf7f:	mov    edx,esi
  40bf81:	mov    eax,ebp
  40bf83:	call   0x40b778
  40bf88:	movzx  eax,WORD PTR [esp+0xa]
  40bf8d:	push   eax
  40bf8e:	mov    eax,DWORD PTR [esp+0x4]
  40bf92:	push   eax
  40bf93:	movzx  ecx,WORD PTR [esp+0x10]
  40bf98:	movzx  edx,WORD PTR [esp+0xe]
  40bf9d:	movzx  eax,WORD PTR [esp+0xc]
  40bfa2:	call   0x40a744
  40bfa7:	mov    ebx,eax
  40bfa9:	mov    eax,ebx
  40bfab:	add    esp,0x10
  40bfae:	pop    ebp
  40bfaf:	pop    edi
  40bfb0:	pop    esi
  40bfb1:	pop    ebx
  40bfb2:	ret    
  40bfb3:	add    bh,bh
  40bfb5:	(bad)  
  40bfb6:	(bad)  
  40bfb7:	inc    DWORD PTR [edx]
  40bfb9:	add    BYTE PTR [eax],al
  40bfbb:	add    BYTE PTR [ecx+0x4d],al
  40bfbe:	add    BYTE PTR [eax],al
  40bfc0:	(bad)  
  40bfc1:	(bad)  
  40bfc2:	(bad)  
  40bfc3:	inc    DWORD PTR [edx]
  40bfc5:	add    BYTE PTR [eax],al
  40bfc7:	add    BYTE PTR [eax+0x4d],dl
  40bfca:	add    BYTE PTR [eax],al
  40bfcc:	push   ebx
  40bfcd:	push   esi
  40bfce:	push   ecx
  40bfcf:	mov    esi,edx
  40bfd1:	mov    ebx,eax
  40bfd3:	mov    DWORD PTR [esp],0x1
  40bfda:	mov    ecx,esi
  40bfdc:	mov    edx,esp
  40bfde:	mov    eax,ebx
  40bfe0:	call   0x40bdd4
  40bfe5:	test   al,al
  40bfe7:	je     0x40bffc
  40bfe9:	mov    eax,ebx
  40bfeb:	test   eax,eax
  40bfed:	je     0x40bff4
  40bfef:	sub    eax,0x4
  40bff2:	mov    eax,DWORD PTR [eax]
  40bff4:	cmp    eax,DWORD PTR [esp]
  40bff7:	setl   al
  40bffa:	jmp    0x40bffe
  40bffc:	xor    eax,eax
  40bffe:	pop    edx
  40bfff:	pop    esi
  40c000:	pop    ebx
  40c001:	ret    
  40c002:	mov    eax,eax
  40c004:	push   ebx
  40c005:	push   esi
  40c006:	push   edi
  40c007:	add    esp,0xffffffe8
  40c00a:	mov    edi,edx
  40c00c:	mov    esi,eax
  40c00e:	mov    bl,0x1
  40c010:	mov    DWORD PTR [esp],0x1
  40c017:	xor    eax,eax
  40c019:	mov    DWORD PTR [esp+0x10],eax
  40c01d:	mov    DWORD PTR [esp+0x14],eax
  40c021:	lea    ecx,[esp+0x8]
  40c025:	mov    edx,esp
  40c027:	mov    eax,esi
  40c029:	call   0x40ba88
  40c02e:	test   al,al
  40c030:	jne    0x40c036
  40c032:	mov    al,0x1
  40c034:	jmp    0x40c059
  40c036:	mov    eax,esi
  40c038:	test   eax,eax
  40c03a:	je     0x40c041
  40c03c:	sub    eax,0x4
  40c03f:	mov    eax,DWORD PTR [eax]
  40c041:	cmp    eax,DWORD PTR [esp]
  40c044:	jge    0x40c04a
  40c046:	mov    al,0x1
  40c048:	jmp    0x40c057
  40c04a:	lea    ecx,[esp+0x10]
  40c04e:	mov    edx,esp
  40c050:	mov    eax,esi
  40c052:	call   0x40bdd4
  40c057:	xor    al,0x1
  40c059:	test   al,al
  40c05b:	je     0x40c06a
  40c05d:	mov    edx,edi
  40c05f:	mov    eax,esi
  40c061:	call   0x40bfcc
  40c066:	mov    ebx,eax
  40c068:	jmp    0x40c092
  40c06a:	fld    QWORD PTR [esp+0x8]
  40c06e:	fcomp  DWORD PTR ds:0x40c09c
  40c074:	fstsw  ax
  40c077:	sahf   
  40c078:	jb     0x40c087
  40c07a:	fld    QWORD PTR [esp+0x8]
  40c07e:	fadd   QWORD PTR [esp+0x10]
  40c082:	fstp   QWORD PTR [edi]
  40c084:	fwait
  40c085:	jmp    0x40c092
  40c087:	fld    QWORD PTR [esp+0x8]
  40c08b:	fsub   QWORD PTR [esp+0x10]
  40c08f:	fstp   QWORD PTR [edi]
  40c091:	fwait
  40c092:	mov    eax,ebx
  40c094:	add    esp,0x18
  40c097:	pop    edi
  40c098:	pop    esi
  40c099:	pop    ebx
  40c09a:	ret    
  40c09b:	add    BYTE PTR [eax],al
  40c09d:	add    BYTE PTR [eax],al
  40c09f:	add    BYTE PTR [ebx-0x7f],dl
  40c0a2:	les    eax,FWORD PTR [eax]
  40c0a4:	(bad)  
  40c0a5:	(bad)  
  40c0a6:	dec    DWORD PTR [ebx+0x68006ada]
  40c0ac:	add    BYTE PTR [ecx],al
  40c0ae:	add    BYTE PTR [eax],al
  40c0b0:	lea    edx,[esp+0x8]
  40c0b4:	push   edx
  40c0b5:	push   0x0
  40c0b7:	push   eax
  40c0b8:	push   0x0
  40c0ba:	push   0x3200
  40c0bf:	call   0x4071c0
  40c0c4:	jmp    0x40c0c7
  40c0c6:	dec    eax
  40c0c7:	test   eax,eax
  40c0c9:	jle    0x40c0da
  40c0cb:	movzx  edx,BYTE PTR [esp+eax*1-0x1]
  40c0d0:	sub    dl,0x21
  40c0d3:	jb     0x40c0c6
  40c0d5:	sub    dl,0xd
  40c0d8:	je     0x40c0c6
  40c0da:	mov    edx,esp
  40c0dc:	mov    ecx,ebx
  40c0de:	xchg   ecx,eax
  40c0df:	call   0x405078
  40c0e4:	add    esp,0x100
  40c0ea:	pop    ebx
  40c0eb:	ret    
  40c0ec:	push   ebp
  40c0ed:	mov    ebp,esp
  40c0ef:	add    esp,0xffffff00
  40c0f5:	push   ebx
  40c0f6:	push   esi
  40c0f7:	mov    esi,ecx
  40c0f9:	mov    ebx,DWORD PTR [ebp+0x8]
  40c0fc:	push   0x100
  40c101:	lea    ecx,[ebp-0x100]
  40c107:	push   ecx
  40c108:	push   edx
  40c109:	push   eax
  40c10a:	call   0x407240
  40c10f:	test   eax,eax
  40c111:	jle    0x40c125
  40c113:	mov    ecx,eax
  40c115:	dec    ecx
  40c116:	lea    edx,[ebp-0x100]
  40c11c:	mov    eax,ebx
  40c11e:	call   0x405078
  40c123:	jmp    0x40c12e
  40c125:	mov    eax,ebx
  40c127:	mov    edx,esi
  40c129:	call   0x404fdc
  40c12e:	pop    esi
  40c12f:	pop    ebx
  40c130:	mov    esp,ebp
  40c132:	pop    ebp
  40c133:	ret    0x4
  40c136:	mov    eax,eax
  40c138:	push   ebx
  40c139:	push   esi
  40c13a:	push   edi
  40c13b:	push   ecx
  40c13c:	mov    ebx,ecx
  40c13e:	mov    esi,edx
  40c140:	mov    edi,eax
  40c142:	push   0x2
  40c144:	lea    eax,[esp+0x4]
  40c148:	push   eax
  40c149:	push   esi
  40c14a:	push   edi
  40c14b:	call   0x407240
  40c150:	test   eax,eax
  40c152:	jle    0x40c15a
  40c154:	movzx  eax,BYTE PTR [esp]
  40c158:	jmp    0x40c15c
  40c15a:	mov    eax,ebx
  40c15c:	pop    edx
  40c15d:	pop    edi
  40c15e:	pop    esi
  40c15f:	pop    ebx
  40c160:	ret    
  40c161:	lea    eax,[eax+0x0]
  40c164:	push   ebp
  40c165:	mov    ebp,esp
  40c167:	push   ecx
  40c168:	push   ebx
  40c169:	push   esi
  40c16a:	push   edi
  40c16b:	mov    DWORD PTR [ebp-0x4],ecx
  40c16e:	mov    edi,edx
  40c170:	mov    esi,eax
  40c172:	mov    ebx,DWORD PTR [ebp+0x8]
  40c175:	push   ebx
  40c176:	mov    eax,DWORD PTR [ebp+0x10]
  40c179:	mov    eax,DWORD PTR [eax-0x4]
  40c17c:	xor    ecx,ecx
  40c17e:	mov    edx,esi
  40c180:	call   0x40c0ec
  40c185:	cmp    DWORD PTR [ebx],0x0
  40c188:	jne    0x40c197
  40c18a:	mov    eax,DWORD PTR [ebp-0x4]
  40c18d:	mov    eax,DWORD PTR [eax+edi*4]
  40c190:	mov    edx,ebx
  40c192:	call   0x406f48
  40c197:	pop    edi
  40c198:	pop    esi
  40c199:	pop    ebx
  40c19a:	pop    ecx
  40c19b:	pop    ebp
  40c19c:	ret    0x8
  40c19f:	nop
  40c1a0:	push   ebp
  40c1a1:	mov    ebp,esp
  40c1a3:	xor    ecx,ecx
  40c1a5:	push   ecx
  40c1a6:	push   ecx
  40c1a7:	push   ecx
  40c1a8:	push   ecx
  40c1a9:	push   ecx
  40c1aa:	push   ecx
  40c1ab:	push   ebx
  40c1ac:	push   esi
  40c1ad:	push   edi
  40c1ae:	xor    eax,eax
  40c1b0:	push   ebp
  40c1b1:	push   0x40c2b3
  40c1b6:	push   DWORD PTR fs:[eax]
  40c1b9:	mov    DWORD PTR fs:[eax],esp
  40c1bc:	call   0x407278
  40c1c1:	mov    DWORD PTR [ebp-0x4],eax
  40c1c4:	mov    ebx,0x1
  40c1c9:	mov    esi,0x470828
  40c1ce:	mov    edi,0x470858
  40c1d3:	push   ebp
  40c1d4:	push   0xb
  40c1d6:	lea    eax,[ebp-0xc]
  40c1d9:	push   eax
  40c1da:	mov    ecx,0x461880
  40c1df:	mov    edx,ebx
  40c1e1:	dec    edx
  40c1e2:	lea    eax,[ebx+0x44]
  40c1e5:	dec    eax
  40c1e6:	call   0x40c164
  40c1eb:	pop    ecx
  40c1ec:	mov    edx,DWORD PTR [ebp-0xc]
  40c1ef:	mov    eax,esi
  40c1f1:	call   0x404fdc
  40c1f6:	push   ebp
  40c1f7:	push   0xb
  40c1f9:	lea    eax,[ebp-0x10]
  40c1fc:	push   eax
  40c1fd:	mov    ecx,0x4618b0
  40c202:	mov    edx,ebx
  40c204:	dec    edx
  40c205:	lea    eax,[ebx+0x38]
  40c208:	dec    eax
  40c209:	call   0x40c164
  40c20e:	pop    ecx
  40c20f:	mov    edx,DWORD PTR [ebp-0x10]
  40c212:	mov    eax,edi
  40c214:	call   0x404fdc
  40c219:	inc    ebx
  40c21a:	add    edi,0x4
  40c21d:	add    esi,0x4
  40c220:	cmp    ebx,0xd
  40c223:	jne    0x40c1d3
  40c225:	mov    ebx,0x1
  40c22a:	mov    esi,0x470888
  40c22f:	mov    edi,0x4708a4
  40c234:	lea    eax,[ebx+0x5]
  40c237:	mov    ecx,0x7
  40c23c:	cdq    
  40c23d:	idiv   ecx
  40c23f:	mov    DWORD PTR [ebp-0x8],edx
  40c242:	push   ebp
  40c243:	push   0x6
  40c245:	lea    eax,[ebp-0x14]
  40c248:	push   eax
  40c249:	mov    ecx,0x4618e0
  40c24e:	mov    edx,ebx
  40c250:	dec    edx
  40c251:	mov    eax,DWORD PTR [ebp-0x8]
  40c254:	add    eax,0x31
  40c257:	call   0x40c164
  40c25c:	pop    ecx
  40c25d:	mov    edx,DWORD PTR [ebp-0x14]
  40c260:	mov    eax,esi
  40c262:	call   0x404fdc
  40c267:	push   ebp
  40c268:	push   0x6
  40c26a:	lea    eax,[ebp-0x18]
  40c26d:	push   eax
  40c26e:	mov    ecx,0x4618fc
  40c273:	mov    edx,ebx
  40c275:	dec    edx
  40c276:	mov    eax,DWORD PTR [ebp-0x8]
  40c279:	add    eax,0x2a
  40c27c:	call   0x40c164
  40c281:	pop    ecx
  40c282:	mov    edx,DWORD PTR [ebp-0x18]
  40c285:	mov    eax,edi
  40c287:	call   0x404fdc
  40c28c:	inc    ebx
  40c28d:	add    edi,0x4
  40c290:	add    esi,0x4
  40c293:	cmp    ebx,0x8
  40c296:	jne    0x40c234
  40c298:	xor    eax,eax
  40c29a:	pop    edx
  40c29b:	pop    ecx
  40c29c:	pop    ecx
  40c29d:	mov    DWORD PTR fs:[eax],edx
  40c2a0:	push   0x40c2ba
  40c2a5:	lea    eax,[ebp-0x18]
  40c2a8:	mov    edx,0x4
  40c2ad:	call   0x404fac
  40c2b2:	ret    
  40c2b3:	jmp    0x40481c
  40c2b8:	jmp    0x40c2a5
  40c2ba:	pop    edi
  40c2bb:	pop    esi
  40c2bc:	pop    ebx
  40c2bd:	mov    esp,ebp
  40c2bf:	pop    ebp
  40c2c0:	ret    
  40c2c1:	lea    eax,[eax+0x0]
  40c2c4:	push   ebp
  40c2c5:	mov    ebp,esp
  40c2c7:	push   ebx
  40c2c8:	push   esi
  40c2c9:	xor    esi,esi
  40c2cb:	mov    ebx,0x1
  40c2d0:	jmp    0x40c2d8
  40c2d2:	cmp    ebx,0x7
  40c2d5:	je     0x40c2f6
  40c2d7:	inc    ebx
  40c2d8:	cmp    DWORD PTR [ebx*4+0x4708cc],0x0
  40c2e0:	jne    0x40c2d2
  40c2e2:	lea    eax,[ebx*4+0x4708cc]
  40c2e9:	mov    edx,DWORD PTR [ebp+0x8]
  40c2ec:	call   0x405180
  40c2f1:	mov    esi,0x1
  40c2f6:	mov    eax,esi
  40c2f8:	pop    esi
  40c2f9:	pop    ebx
  40c2fa:	pop    ebp
  40c2fb:	ret    0x4
  40c2fe:	mov    eax,eax
  40c300:	push   ebp
  40c301:	mov    ebp,esp
  40c303:	push   0x0
  40c305:	push   ebx
  40c306:	push   esi
  40c307:	xor    eax,eax
  40c309:	push   ebp
  40c30a:	push   0x40c365
  40c30f:	push   DWORD PTR fs:[eax]
  40c312:	mov    DWORD PTR fs:[eax],esp
  40c315:	xor    esi,esi
  40c317:	mov    ebx,0x1
  40c31c:	jmp    0x40c324
  40c31e:	cmp    ebx,0x7
  40c321:	je     0x40c34f
  40c323:	inc    ebx
  40c324:	cmp    DWORD PTR [ebx*4+0x4708e8],0xffffffff
  40c32c:	jne    0x40c31e
  40c32e:	lea    eax,[ebp-0x4]
  40c331:	mov    edx,DWORD PTR [ebp+0x8]
  40c334:	call   0x405180
  40c339:	mov    eax,DWORD PTR [ebp-0x4]
  40c33c:	xor    edx,edx
  40c33e:	call   0x408b64
  40c343:	mov    DWORD PTR [ebx*4+0x4708e8],eax
  40c34a:	mov    esi,0x1
  40c34f:	xor    eax,eax
  40c351:	pop    edx
  40c352:	pop    ecx
  40c353:	pop    ecx
  40c354:	mov    DWORD PTR fs:[eax],edx
  40c357:	push   0x40c36c
  40c35c:	lea    eax,[ebp-0x4]
  40c35f:	call   0x404f88
  40c364:	ret    
  40c365:	jmp    0x40481c
  40c36a:	jmp    0x40c35c
  40c36c:	mov    eax,esi
  40c36e:	pop    esi
  40c36f:	pop    ebx
  40c370:	pop    ecx
  40c371:	pop    ebp
  40c372:	ret    0x4
  40c375:	lea    eax,[eax+0x0]
  40c378:	push   ebp
  40c379:	mov    ebp,esp
  40c37b:	push   0x0
  40c37d:	push   esi
  40c37e:	xor    eax,eax
  40c380:	push   ebp
  40c381:	push   0x40c40f
  40c386:	push   DWORD PTR fs:[eax]
  40c389:	mov    DWORD PTR fs:[eax],esp
  40c38c:	lea    eax,[ebp-0x4]
  40c38f:	push   eax
  40c390:	call   0x407278
  40c395:	mov    ecx,0x40c424
  40c39a:	mov    edx,0x100b
  40c39f:	call   0x40c0ec
  40c3a4:	mov    eax,DWORD PTR [ebp-0x4]
  40c3a7:	mov    edx,0x1
  40c3ac:	call   0x408b64
  40c3b1:	mov    esi,eax
  40c3b3:	mov    eax,esi
  40c3b5:	add    eax,0xfffffffd
  40c3b8:	sub    eax,0x3
  40c3bb:	jae    0x40c3f9
  40c3bd:	push   0x4
  40c3bf:	push   esi
  40c3c0:	call   0x407278
  40c3c5:	push   eax
  40c3c6:	push   0x40c2c4
  40c3cb:	call   0x407188
  40c3d0:	mov    edx,0x7
  40c3d5:	mov    eax,0x4708ec
  40c3da:	mov    DWORD PTR [eax],0xffffffff
  40c3e0:	add    eax,0x4
  40c3e3:	dec    edx
  40c3e4:	jne    0x40c3da
  40c3e6:	push   0x3
  40c3e8:	push   esi
  40c3e9:	call   0x407278
  40c3ee:	push   eax
  40c3ef:	push   0x40c300
  40c3f4:	call   0x407188
  40c3f9:	xor    eax,eax
  40c3fb:	pop    edx
  40c3fc:	pop    ecx
  40c3fd:	pop    ecx
  40c3fe:	mov    DWORD PTR fs:[eax],edx
  40c401:	push   0x40c416
  40c406:	lea    eax,[ebp-0x4]
  40c409:	call   0x404f88
  40c40e:	ret    
  40c40f:	jmp    0x40481c
  40c414:	jmp    0x40c406
  40c416:	pop    esi
  40c417:	pop    ecx
  40c418:	pop    ebp
  40c419:	ret    
  40c41a:	add    BYTE PTR [eax],al
  40c41c:	(bad)  
  40c41d:	(bad)  
  40c41e:	(bad)  
  40c41f:	inc    DWORD PTR [ecx]
  40c421:	add    BYTE PTR [eax],al
  40c423:	add    BYTE PTR [ecx],dh
  40c425:	add    BYTE PTR [eax],al
  40c427:	add    BYTE PTR [ebp-0x75],dl
  40c42a:	in     al,dx
  40c42b:	xor    ecx,ecx
  40c42d:	push   ecx
  40c42e:	push   ecx
  40c42f:	push   ecx
  40c430:	push   ecx
  40c431:	push   ecx
  40c432:	push   ebx
  40c433:	push   esi
  40c434:	push   edi
  40c435:	mov    edi,edx
  40c437:	mov    esi,eax
  40c439:	xor    eax,eax
  40c43b:	push   ebp
  40c43c:	push   0x40c5f8
  40c441:	push   DWORD PTR fs:[eax]
  40c444:	mov    DWORD PTR fs:[eax],esp
  40c447:	mov    ebx,0x1
  40c44c:	mov    eax,edi
  40c44e:	call   0x404f88
  40c453:	lea    eax,[ebp-0x8]
  40c456:	push   eax
  40c457:	call   0x407278
  40c45c:	mov    ecx,0x40c610
  40c461:	mov    edx,0x1009
  40c466:	call   0x40c0ec
  40c46b:	mov    eax,DWORD PTR [ebp-0x8]
  40c46e:	mov    edx,0x1
  40c473:	call   0x408b64
  40c478:	add    eax,0xfffffffd
  40c47b:	sub    eax,0x3
  40c47e:	jb     0x40c5ce
  40c484:	mov    eax,ds:0x4708c4
  40c489:	sub    eax,0x4
  40c48c:	je     0x40c49a
  40c48e:	add    eax,0xfffffff3
  40c491:	sub    eax,0x2
  40c494:	jb     0x40c49a
  40c496:	xor    eax,eax
  40c498:	jmp    0x40c49c
  40c49a:	mov    al,0x1
  40c49c:	test   al,al
  40c49e:	je     0x40c4d7
  40c4a0:	jmp    0x40c4c7
  40c4a2:	movzx  eax,BYTE PTR [esi+ebx*1-0x1]
  40c4a7:	sub    al,0x47
  40c4a9:	je     0x40c4c6
  40c4ab:	sub    al,0x20
  40c4ad:	je     0x40c4c6
  40c4af:	lea    eax,[ebp-0xc]
  40c4b2:	movzx  edx,BYTE PTR [esi+ebx*1-0x1]
  40c4b7:	call   0x405170
  40c4bc:	mov    edx,DWORD PTR [ebp-0xc]
  40c4bf:	mov    eax,edi
  40c4c1:	call   0x405254
  40c4c6:	inc    ebx
  40c4c7:	mov    eax,esi
  40c4c9:	call   0x405248
  40c4ce:	cmp    ebx,eax
  40c4d0:	jle    0x40c4a2
  40c4d2:	jmp    0x40c5dd
  40c4d7:	mov    eax,edi
  40c4d9:	mov    edx,esi
  40c4db:	call   0x404fdc
  40c4e0:	jmp    0x40c5dd
  40c4e5:	movzx  eax,BYTE PTR [esi+ebx*1-0x1]
  40c4ea:	movzx  eax,al
  40c4ed:	bt     DWORD PTR ds:0x461808,eax
  40c4f4:	jae    0x40c524
  40c4f6:	mov    edx,ebx
  40c4f8:	mov    eax,esi
  40c4fa:	call   0x40d3dc
  40c4ff:	mov    DWORD PTR [ebp-0x4],eax
  40c502:	lea    eax,[ebp-0x10]
  40c505:	push   eax
  40c506:	mov    ecx,DWORD PTR [ebp-0x4]
  40c509:	mov    edx,ebx
  40c50b:	mov    eax,esi
  40c50d:	call   0x405480
  40c512:	mov    edx,DWORD PTR [ebp-0x10]
  40c515:	mov    eax,edi
  40c517:	call   0x405254
  40c51c:	add    ebx,DWORD PTR [ebp-0x4]
  40c51f:	jmp    0x40c5ce
  40c524:	mov    edx,0x40c614
  40c529:	lea    eax,[esi+ebx*1-0x1]
  40c52d:	mov    ecx,0x2
  40c532:	call   0x40922c
  40c537:	test   eax,eax
  40c539:	jne    0x40c54d
  40c53b:	mov    eax,edi
  40c53d:	mov    edx,0x40c620
  40c542:	call   0x405254
  40c547:	inc    ebx
  40c548:	jmp    0x40c5cd
  40c54d:	mov    edx,0x40c624
  40c552:	lea    eax,[esi+ebx*1-0x1]
  40c556:	mov    ecx,0x4
  40c55b:	call   0x40922c
  40c560:	test   eax,eax
  40c562:	jne    0x40c575
  40c564:	mov    eax,edi
  40c566:	mov    edx,0x40c634
  40c56b:	call   0x405254
  40c570:	add    ebx,0x3
  40c573:	jmp    0x40c5cd
  40c575:	mov    edx,0x40c63c
  40c57a:	lea    eax,[esi+ebx*1-0x1]
  40c57e:	mov    ecx,0x2
  40c583:	call   0x40922c
  40c588:	test   eax,eax
  40c58a:	jne    0x40c59b
  40c58c:	mov    eax,edi
  40c58e:	mov    edx,0x40c648
  40c593:	call   0x405254
  40c598:	inc    ebx
  40c599:	jmp    0x40c5cd
  40c59b:	movzx  eax,BYTE PTR [esi+ebx*1-0x1]
  40c5a0:	sub    al,0x59
  40c5a2:	je     0x40c5a8
  40c5a4:	sub    al,0x20
  40c5a6:	jne    0x40c5b6
  40c5a8:	mov    eax,edi
  40c5aa:	mov    edx,0x40c654
  40c5af:	call   0x405254
  40c5b4:	jmp    0x40c5cd
  40c5b6:	lea    eax,[ebp-0x14]
  40c5b9:	movzx  edx,BYTE PTR [esi+ebx*1-0x1]
  40c5be:	call   0x405170
  40c5c3:	mov    edx,DWORD PTR [ebp-0x14]
  40c5c6:	mov    eax,edi
  40c5c8:	call   0x405254
  40c5cd:	inc    ebx
  40c5ce:	mov    eax,esi
  40c5d0:	call   0x405248
  40c5d5:	cmp    ebx,eax
  40c5d7:	jle    0x40c4e5
  40c5dd:	xor    eax,eax
  40c5df:	pop    edx
  40c5e0:	pop    ecx
  40c5e1:	pop    ecx
  40c5e2:	mov    DWORD PTR fs:[eax],edx
  40c5e5:	push   0x40c5ff
  40c5ea:	lea    eax,[ebp-0x14]
  40c5ed:	mov    edx,0x4
  40c5f2:	call   0x404fac
  40c5f7:	ret    
  40c5f8:	jmp    0x40481c
  40c5fd:	jmp    0x40c5ea
  40c5ff:	pop    edi
  40c600:	pop    esi
  40c601:	pop    ebx
  40c602:	mov    esp,ebp
  40c604:	pop    ebp
  40c605:	ret    
  40c606:	add    BYTE PTR [eax],al
  40c608:	(bad)  
  40c609:	(bad)  
  40c60a:	(bad)  
  40c60b:	inc    DWORD PTR [ecx]
  40c60d:	add    BYTE PTR [eax],al
  40c60f:	add    BYTE PTR [ecx],dh
  40c611:	add    BYTE PTR [eax],al
  40c613:	add    BYTE PTR [edi+0x67],ah
  40c616:	add    BYTE PTR [eax],al
  40c618:	(bad)  
  40c619:	(bad)  
  40c61a:	(bad)  
  40c61b:	inc    DWORD PTR [ebx]
  40c61d:	add    BYTE PTR [eax],al
  40c61f:	add    BYTE PTR [edi+0x67],ah
  40c622:	add    BYTE PTR [bx+di+0x79],bh
  40c626:	jns    0x40c6a1
  40c628:	add    BYTE PTR [eax],al
  40c62a:	add    BYTE PTR [eax],al
  40c62c:	(bad)  
  40c62d:	(bad)  
  40c62e:	(bad)  
  40c62f:	inc    DWORD PTR [eax+eax*1]
  40c632:	add    BYTE PTR [eax],al
  40c634:	gs gs gs add BYTE PTR gs:[eax],al
  40c63a:	add    BYTE PTR [eax],al
  40c63c:	jns    0x40c6b7
  40c63e:	add    BYTE PTR [eax],al
  40c640:	(bad)  
  40c641:	(bad)  
  40c642:	(bad)  
  40c643:	inc    DWORD PTR [edx]
  40c645:	add    BYTE PTR [eax],al
  40c647:	add    BYTE PTR [ebp+0x65],ah
  40c64a:	add    BYTE PTR [eax],al
  40c64c:	(bad)  
  40c64d:	(bad)  
  40c64e:	(bad)  
  40c64f:	inc    DWORD PTR [ecx]
  40c651:	add    BYTE PTR [eax],al
  40c653:	add    BYTE PTR [ebp+0x0],ah
  40c656:	add    BYTE PTR [eax],al
  40c658:	test   eax,eax
  40c65a:	je     0x40c661
  40c65c:	sub    eax,0x1000
  40c661:	ret    
  40c662:	mov    eax,eax
  40c664:	push   ebp
  40c665:	mov    ebp,esp
  40c667:	add    esp,0xfffffba8
  40c66d:	push   ebx
  40c66e:	push   esi
  40c66f:	push   edi
  40c670:	mov    DWORD PTR [ebp-0x4],ecx
  40c673:	mov    ebx,edx
  40c675:	mov    esi,eax
  40c677:	push   0x1c
  40c679:	lea    eax,[ebp-0x330]
  40c67f:	push   eax
  40c680:	push   ebx
  40c681:	call   0x407310
  40c686:	cmp    DWORD PTR [ebp-0x320],0x1000
  40c690:	jne    0x40c6ae
  40c692:	push   0x105
  40c697:	lea    eax,[ebp-0x212]
  40c69d:	push   eax
  40c69e:	mov    eax,DWORD PTR [ebp-0x32c]
  40c6a4:	push   eax
  40c6a5:	call   0x407250
  40c6aa:	test   eax,eax
  40c6ac:	jne    0x40c6d1
  40c6ae:	push   0x105
  40c6b3:	lea    eax,[ebp-0x212]
  40c6b9:	push   eax
  40c6ba:	mov    eax,ds:0x4707f0
  40c6bf:	push   eax
  40c6c0:	call   0x407250
  40c6c5:	mov    eax,ebx
  40c6c7:	call   0x40c658
  40c6cc:	mov    DWORD PTR [ebp-0x8],eax
  40c6cf:	jmp    0x40c6da
  40c6d1:	sub    ebx,DWORD PTR [ebp-0x32c]
  40c6d7:	mov    DWORD PTR [ebp-0x8],ebx
  40c6da:	lea    eax,[ebp-0x212]
  40c6e0:	mov    dl,0x5c
  40c6e2:	call   0x40d5b8
  40c6e7:	mov    edx,eax
  40c6e9:	inc    edx
  40c6ea:	lea    eax,[ebp-0x10d]
  40c6f0:	mov    ecx,0x104
  40c6f5:	call   0x4091f8
  40c6fa:	mov    ebx,0x40c7e4
  40c6ff:	mov    edi,0x40c7e4
  40c704:	mov    eax,esi
  40c706:	mov    edx,DWORD PTR ds:0x4076f4
  40c70c:	call   0x40422c
  40c711:	test   al,al
  40c713:	je     0x40c736
  40c715:	mov    eax,DWORD PTR [esi+0x4]
  40c718:	call   0x405418
  40c71d:	mov    ebx,eax
  40c71f:	mov    eax,ebx
  40c721:	call   0x4091a4
  40c726:	test   eax,eax
  40c728:	je     0x40c736
  40c72a:	cmp    BYTE PTR [ebx+eax*1-0x1],0x2e
  40c72f:	je     0x40c736
  40c731:	mov    edi,0x40c7e8
  40c736:	push   0x100
  40c73b:	lea    eax,[ebp-0x312]
  40c741:	push   eax
  40c742:	mov    eax,ds:0x46de88
  40c747:	mov    eax,DWORD PTR [eax+0x4]
  40c74a:	push   eax
  40c74b:	mov    eax,ds:0x4707f0
  40c750:	call   0x40649c
  40c755:	push   eax
  40c756:	call   0x407348
  40c75b:	lea    edx,[ebp-0x458]
  40c761:	mov    eax,DWORD PTR [esi]
  40c763:	call   0x403f80
  40c768:	lea    eax,[ebp-0x458]
  40c76e:	mov    DWORD PTR [ebp-0x358],eax
  40c774:	mov    BYTE PTR [ebp-0x354],0x4
  40c77b:	lea    eax,[ebp-0x10d]
  40c781:	mov    DWORD PTR [ebp-0x350],eax
  40c787:	mov    BYTE PTR [ebp-0x34c],0x6
  40c78e:	mov    eax,DWORD PTR [ebp-0x8]
  40c791:	mov    DWORD PTR [ebp-0x348],eax
  40c797:	mov    BYTE PTR [ebp-0x344],0x5
  40c79e:	mov    DWORD PTR [ebp-0x340],ebx
  40c7a4:	mov    BYTE PTR [ebp-0x33c],0x6
  40c7ab:	mov    DWORD PTR [ebp-0x338],edi
  40c7b1:	mov    BYTE PTR [ebp-0x334],0x6
  40c7b8:	lea    eax,[ebp-0x358]
  40c7be:	push   eax
  40c7bf:	push   0x4
  40c7c1:	lea    ecx,[ebp-0x312]
  40c7c7:	mov    edx,DWORD PTR [ebp+0x8]
  40c7ca:	mov    eax,DWORD PTR [ebp-0x4]
  40c7cd:	call   0x409ab4
  40c7d2:	mov    eax,DWORD PTR [ebp-0x4]
  40c7d5:	call   0x4091a4
  40c7da:	pop    edi
  40c7db:	pop    esi
  40c7dc:	pop    ebx
  40c7dd:	mov    esp,ebp
  40c7df:	pop    ebp
  40c7e0:	ret    0x4
  40c7e3:	add    BYTE PTR [eax],al
  40c7e5:	add    BYTE PTR [eax],al
  40c7e7:	add    BYTE PTR [esi],ch
  40c7e9:	add    BYTE PTR [eax],al
  40c7eb:	add    BYTE PTR [ecx-0x4433c],al
  40c7f1:	jmp    FWORD PTR [eax+0x0]
  40c7f4:	add    al,0x0
  40c7f6:	add    BYTE PTR [ebp-0x17b7dbb4],cl
  40c7fc:	fs (bad) 
  40c7fe:	(bad)  
  40c7ff:	jmp    DWORD PTR [ecx+0x46dd90]
  40c805:	cmp    BYTE PTR [eax],0x0
  40c808:	je     0x40c868
  40c80a:	mov    eax,ds:0x46db54
  40c80f:	call   0x4036cc
  40c814:	call   0x402ffc
  40c819:	lea    eax,[esp+0x44]
  40c81d:	push   eax
  40c81e:	lea    eax,[esp+0x48]
  40c822:	push   eax
  40c823:	call   0x407330
  40c828:	push   0x0
  40c82a:	lea    eax,[esp+0x4]
  40c82e:	push   eax
  40c82f:	lea    eax,[esp+0x4c]
  40c833:	call   0x4091a4
  40c838:	push   eax
  40c839:	lea    eax,[esp+0x50]
  40c83d:	push   eax
  40c83e:	push   0xfffffff4
  40c840:	call   0x407268
  40c845:	push   eax
  40c846:	call   0x407320
  40c84b:	push   0x0
  40c84d:	lea    eax,[esp+0x4]
  40c851:	push   eax
  40c852:	push   0x2
  40c854:	push   0x40c8b0
  40c859:	push   0xfffffff4
  40c85b:	call   0x407268
  40c860:	push   eax
  40c861:	call   0x407320
  40c866:	jmp    0x40c89e
  40c868:	push   0x40
  40c86a:	lea    eax,[esp+0x8]
  40c86e:	push   eax
  40c86f:	mov    eax,ds:0x46db10
  40c874:	mov    eax,DWORD PTR [eax+0x4]
  40c877:	push   eax
  40c878:	mov    eax,ds:0x4707f0
  40c87d:	call   0x40649c
  40c882:	push   eax
  40c883:	call   0x407348
  40c888:	push   0x2010
  40c88d:	lea    eax,[esp+0x8]
  40c891:	push   eax
  40c892:	lea    eax,[esp+0x4c]
  40c896:	push   eax
  40c897:	push   0x0
  40c899:	call   0x407350
  40c89e:	add    esp,0x444
  40c8a4:	ret    
  40c8a5:	add    BYTE PTR [eax],al
  40c8a7:	add    bh,bh
  40c8a9:	(bad)  
  40c8aa:	(bad)  
  40c8ab:	inc    DWORD PTR [edx]
  40c8ad:	add    BYTE PTR [eax],al
  40c8af:	add    BYTE PTR ds:0x5300000a,cl
  40c8b5:	push   esi
  40c8b6:	push   edi
  40c8b7:	test   dl,dl
  40c8b9:	je     0x40c8c3
  40c8bb:	add    esp,0xfffffff0
  40c8be:	call   0x4043ac
  40c8c3:	mov    esi,ecx
  40c8c5:	mov    ebx,edx
  40c8c7:	mov    edi,eax
  40c8c9:	lea    eax,[edi+0x4]
  40c8cc:	mov    edx,esi
  40c8ce:	call   0x404fdc
  40c8d3:	mov    eax,edi
  40c8d5:	test   bl,bl
  40c8d7:	je     0x40c8e8
  40c8d9:	call   0x404404
  40c8de:	pop    DWORD PTR fs:0x0
  40c8e5:	add    esp,0xc
  40c8e8:	mov    eax,edi
  40c8ea:	pop    edi
  40c8eb:	pop    esi
  40c8ec:	pop    ebx
  40c8ed:	ret    
  40c8ee:	mov    eax,eax
  40c8f0:	push   ebp
  40c8f1:	mov    ebp,esp
  40c8f3:	push   0x0
  40c8f5:	push   ebx
  40c8f6:	push   esi
  40c8f7:	push   edi
  40c8f8:	test   dl,dl
  40c8fa:	je     0x40c904
  40c8fc:	add    esp,0xfffffff0
  40c8ff:	call   0x4043ac
  40c904:	mov    esi,ecx
  40c906:	mov    ebx,edx
  40c908:	mov    edi,eax
  40c90a:	xor    eax,eax
  40c90c:	push   ebp
  40c90d:	push   0x40c94a
  40c912:	push   DWORD PTR fs:[eax]
  40c915:	mov    DWORD PTR fs:[eax],esp
  40c918:	lea    eax,[ebp-0x4]
  40c91b:	push   eax
  40c91c:	mov    edx,DWORD PTR [ebp+0xc]
  40c91f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c922:	mov    eax,esi
  40c924:	call   0x409af4
  40c929:	mov    edx,DWORD PTR [ebp-0x4]
  40c92c:	lea    eax,[edi+0x4]
  40c92f:	call   0x404fdc
  40c934:	xor    eax,eax
  40c936:	pop    edx
  40c937:	pop    ecx
  40c938:	pop    ecx
  40c939:	mov    DWORD PTR fs:[eax],edx
  40c93c:	push   0x40c951
  40c941:	lea    eax,[ebp-0x4]
  40c944:	call   0x404f88
  40c949:	ret    
  40c94a:	jmp    0x40481c
  40c94f:	jmp    0x40c941
  40c951:	mov    eax,edi
  40c953:	test   bl,bl
  40c955:	je     0x40c966
  40c957:	call   0x404404
  40c95c:	pop    DWORD PTR fs:0x0
  40c963:	add    esp,0xc
  40c966:	mov    eax,edi
  40c968:	pop    edi
  40c969:	pop    esi
  40c96a:	pop    ebx
  40c96b:	pop    ecx
  40c96c:	pop    ebp
  40c96d:	ret    0x8
  40c970:	push   ebx
  40c971:	push   esi
  40c972:	push   edi
  40c973:	test   dl,dl
  40c975:	je     0x40c97f
  40c977:	add    esp,0xfffffff0
  40c97a:	call   0x4043ac
  40c97f:	mov    esi,ecx
  40c981:	mov    ebx,edx
  40c983:	mov    edi,eax
  40c985:	lea    edx,[edi+0x4]
  40c988:	mov    eax,esi
  40c98a:	call   0x406f48
  40c98f:	mov    eax,edi
  40c991:	test   bl,bl
  40c993:	je     0x40c9a4
  40c995:	call   0x404404
  40c99a:	pop    DWORD PTR fs:0x0
  40c9a1:	add    esp,0xc
  40c9a4:	mov    eax,edi
  40c9a6:	pop    edi
  40c9a7:	pop    esi
  40c9a8:	pop    ebx
  40c9a9:	ret    
  40c9aa:	mov    eax,eax
  40c9ac:	push   ebp
  40c9ad:	mov    ebp,esp
  40c9af:	push   0x0
  40c9b1:	push   0x0
  40c9b3:	push   ebx
  40c9b4:	push   esi
  40c9b5:	push   edi
  40c9b6:	test   dl,dl
  40c9b8:	je     0x40c9c2
  40c9ba:	add    esp,0xfffffff0
  40c9bd:	call   0x4043ac
  40c9c2:	mov    esi,ecx
  40c9c4:	mov    ebx,edx
  40c9c6:	mov    edi,eax
  40c9c8:	xor    eax,eax
  40c9ca:	push   ebp
  40c9cb:	push   0x40ca18
  40c9d0:	push   DWORD PTR fs:[eax]
  40c9d3:	mov    DWORD PTR fs:[eax],esp
  40c9d6:	lea    eax,[ebp-0x4]
  40c9d9:	push   eax
  40c9da:	lea    edx,[ebp-0x8]
  40c9dd:	mov    eax,esi
  40c9df:	call   0x406f48
  40c9e4:	mov    eax,DWORD PTR [ebp-0x8]
  40c9e7:	mov    edx,DWORD PTR [ebp+0xc]
  40c9ea:	mov    ecx,DWORD PTR [ebp+0x8]
  40c9ed:	call   0x409af4
  40c9f2:	mov    edx,DWORD PTR [ebp-0x4]
  40c9f5:	lea    eax,[edi+0x4]
  40c9f8:	call   0x404fdc
  40c9fd:	xor    eax,eax
  40c9ff:	pop    edx
  40ca00:	pop    ecx
  40ca01:	pop    ecx
  40ca02:	mov    DWORD PTR fs:[eax],edx
  40ca05:	push   0x40ca1f
  40ca0a:	lea    eax,[ebp-0x8]
  40ca0d:	mov    edx,0x2
  40ca12:	call   0x404fac
  40ca17:	ret    
  40ca18:	jmp    0x40481c
  40ca1d:	jmp    0x40ca0a
  40ca1f:	mov    eax,edi
  40ca21:	test   bl,bl
  40ca23:	je     0x40ca34
  40ca25:	call   0x404404
  40ca2a:	pop    DWORD PTR fs:0x0
  40ca31:	add    esp,0xc
  40ca34:	mov    eax,edi
  40ca36:	pop    edi
  40ca37:	pop    esi
  40ca38:	pop    ebx
  40ca39:	pop    ecx
  40ca3a:	pop    ecx
  40ca3b:	pop    ebp
  40ca3c:	ret    0x8
  40ca3f:	nop
  40ca40:	cmp    BYTE PTR [eax+0xc],0x0
  40ca44:	je     0x40ca4b
  40ca46:	call   0x404054
  40ca4b:	ret    
  40ca4c:	push   eax
  40ca4d:	retf   0x40
  40ca50:	push   cs
  40ca51:	or     DWORD PTR [ebp+eax*2+0x72],edx
  40ca55:	jb     0x40cac6
  40ca57:	jb     0x40caab
  40ca59:	arpl   WORD PTR gs:[eax],cx
  40ca5c:	add    BYTE PTR [eax],al
  40ca5e:	add    BYTE PTR [ecx],al
  40ca60:	add    BYTE PTR [eax],al
  40ca62:	add    BYTE PTR [eax+edx*1+0x40040],al
  40ca69:	add    BYTE PTR [eax],al
  40ca6b:	nop
  40ca6c:	push   ebx
  40ca6d:	push   esi
  40ca6e:	add    esp,0xfffffff8
  40ca71:	xor    ebx,ebx
  40ca73:	call   0x403070
  40ca78:	mov    esi,eax
  40ca7a:	jmp    0x40ca7d
  40ca7c:	inc    ebx
  40ca7d:	cmp    ebx,0x6
  40ca80:	jg     0x40ca8b
  40ca82:	cmp    esi,DWORD PTR [ebx*8+0x461918]
  40ca89:	jne    0x40ca7c
  40ca8b:	cmp    ebx,0x6
  40ca8e:	jg     0x40caa5
  40ca90:	mov    ecx,DWORD PTR [ebx*8+0x46191c]
  40ca97:	mov    dl,0x1
  40ca99:	mov    eax,ds:0x407814
  40ca9e:	call   0x40c8b4
  40caa3:	jmp    0x40cac2
  40caa5:	mov    DWORD PTR [esp],esi
  40caa8:	mov    BYTE PTR [esp+0x4],0x0
  40caad:	push   esp
  40caae:	push   0x0
  40cab0:	mov    ecx,DWORD PTR ds:0x46db0c
  40cab6:	mov    dl,0x1
  40cab8:	mov    eax,ds:0x407814
  40cabd:	call   0x40c9ac
  40cac2:	mov    DWORD PTR [eax+0xc],esi
  40cac5:	pop    ecx
  40cac6:	pop    edx
  40cac7:	pop    esi
  40cac8:	pop    ebx
  40cac9:	ret    
  40caca:	mov    eax,eax
  40cacc:	ror    dl,1
  40cace:	inc    eax
  40cacf:	add    BYTE PTR [esi],cl
  40cad1:	or     dl,BYTE PTR [ebp+eax*2+0x78]
  40cad5:	arpl   WORD PTR [ebp+0x70],sp
  40cad8:	je     0x40cb2c
  40cada:	arpl   WORD PTR gs:[eax],cx
  40cadd:	add    BYTE PTR [eax],al
  40cadf:	add    BYTE PTR [ecx],al
  40cae1:	add    BYTE PTR [eax],al
  40cae3:	add    BYTE PTR [eax+edx*1+0x40040],al
  40caea:	add    BYTE PTR [eax],al
  40caec:	push   ebx
  40caed:	mov    ebx,edx
  40caef:	mov    edx,eax
  40caf1:	dec    dl
  40caf3:	je     0x40cb01
  40caf5:	dec    dl
  40caf7:	je     0x40cb09
  40caf9:	dec    edx
  40cafa:	sub    dl,0x16
  40cafd:	jb     0x40cb11
  40caff:	jmp    0x40cb2b
  40cb01:	mov    edx,DWORD PTR ds:0x470914
  40cb07:	jmp    0x40cb32
  40cb09:	mov    edx,DWORD PTR ds:0x470918
  40cb0f:	jmp    0x40cb32
  40cb11:	movzx  eax,al
  40cb14:	lea    eax,[eax*8+0x461938]
  40cb1b:	mov    ecx,DWORD PTR [eax+0x4]
  40cb1e:	mov    eax,DWORD PTR [eax]
  40cb20:	mov    dl,0x1
  40cb22:	call   0x40c8b4
  40cb27:	mov    edx,eax
  40cb29:	jmp    0x40cb32
  40cb2b:	call   0x40ca6c
  40cb30:	mov    edx,eax
  40cb32:	push   ebx
  40cb33:	mov    eax,edx
  40cb35:	jmp    0x4048fc
  40cb3a:	pop    ebx
  40cb3b:	ret    
  40cb3c:	push   ebp
  40cb3d:	mov    ebp,esp
  40cb3f:	add    esp,0xffffffe0
  40cb42:	push   ebx
  40cb43:	push   esi
  40cb44:	push   edi
  40cb45:	xor    ebx,ebx
  40cb47:	mov    DWORD PTR [ebp-0x20],ebx
  40cb4a:	mov    DWORD PTR [ebp-0x4],ebx
  40cb4d:	mov    edi,ecx
  40cb4f:	mov    esi,edx
  40cb51:	mov    ebx,eax
  40cb53:	xor    eax,eax
  40cb55:	push   ebp
  40cb56:	push   0x40cbd8
  40cb5b:	push   DWORD PTR fs:[eax]
  40cb5e:	mov    DWORD PTR fs:[eax],esp
  40cb61:	test   ebx,ebx
  40cb63:	je     0x40cb71
  40cb65:	lea    eax,[ebp-0x4]
  40cb68:	mov    edx,ebx
  40cb6a:	call   0x405020
  40cb6f:	jmp    0x40cb7e
  40cb71:	lea    edx,[ebp-0x4]
  40cb74:	mov    eax,ds:0x46dd6c
  40cb79:	call   0x406f48
  40cb7e:	mov    eax,DWORD PTR [ebp-0x4]
  40cb81:	mov    DWORD PTR [ebp-0x1c],eax
  40cb84:	mov    BYTE PTR [ebp-0x18],0xb
  40cb88:	mov    DWORD PTR [ebp-0x14],esi
  40cb8b:	mov    BYTE PTR [ebp-0x10],0xb
  40cb8f:	mov    DWORD PTR [ebp-0xc],edi
  40cb92:	mov    BYTE PTR [ebp-0x8],0x0
  40cb96:	lea    eax,[ebp-0x1c]
  40cb99:	push   eax
  40cb9a:	push   0x2
  40cb9c:	lea    edx,[ebp-0x20]
  40cb9f:	mov    eax,ds:0x46ddd8
  40cba4:	call   0x406f48
  40cba9:	mov    ecx,DWORD PTR [ebp-0x20]
  40cbac:	mov    dl,0x1
  40cbae:	mov    eax,ds:0x407f1c
  40cbb3:	call   0x40c8f0
  40cbb8:	mov    ebx,eax
  40cbba:	xor    eax,eax
  40cbbc:	pop    edx
  40cbbd:	pop    ecx
  40cbbe:	pop    ecx
  40cbbf:	mov    DWORD PTR fs:[eax],edx
  40cbc2:	push   0x40cbdf
  40cbc7:	lea    eax,[ebp-0x20]
  40cbca:	call   0x404f88
  40cbcf:	lea    eax,[ebp-0x4]
  40cbd2:	call   0x404f88
  40cbd7:	ret    
  40cbd8:	jmp    0x40481c
  40cbdd:	jmp    0x40cbc7
  40cbdf:	mov    eax,ebx
  40cbe1:	pop    edi
  40cbe2:	pop    esi
  40cbe3:	pop    ebx
  40cbe4:	mov    esp,ebp
  40cbe6:	pop    ebp
  40cbe7:	ret    
  40cbe8:	mov    esp,ecx
  40cbea:	mov    DWORD PTR [esp],edx
  40cbed:	mov    ebp,DWORD PTR [ebp+0x0]
  40cbf0:	jmp    0x4048fc
  40cbf5:	ret    
  40cbf6:	mov    eax,eax
  40cbf8:	push   ebp
  40cbf9:	mov    ebp,esp
  40cbfb:	call   0x40cb3c
  40cc00:	lea    ecx,[ebp+0x8]
  40cc03:	add    ecx,0x4
  40cc06:	mov    edx,DWORD PTR [ebp+0x8]
  40cc09:	call   0x40cbe8
  40cc0e:	pop    ebp
  40cc0f:	ret    0x4
  40cc12:	mov    eax,eax
  40cc14:	mov    ecx,DWORD PTR ds:0x46db34
  40cc1a:	mov    dl,0x1
  40cc1c:	mov    eax,ds:0x407f7c
  40cc21:	call   0x40c970
  40cc26:	call   0x4048fc
  40cc2b:	ret    
  40cc2c:	mov    eax,DWORD PTR [eax]
  40cc2e:	cmp    eax,0xc0000092
  40cc33:	jg     0x40cc61
  40cc35:	je     0x40cc90
  40cc37:	cmp    eax,0xc000008e
  40cc3c:	jg     0x40cc53
  40cc3e:	je     0x40cc93
  40cc40:	sub    eax,0xc0000005
  40cc45:	je     0x40cc9c
  40cc47:	sub    eax,0x87
  40cc4c:	je     0x40cc8a
  40cc4e:	dec    eax
  40cc4f:	je     0x40cc99
  40cc51:	jmp    0x40cca8
  40cc53:	add    eax,0x3fffff71
  40cc58:	sub    eax,0x2
  40cc5b:	jb     0x40cc90
  40cc5d:	je     0x40cc96
  40cc5f:	jmp    0x40cca8
  40cc61:	cmp    eax,0xc0000096
  40cc66:	jg     0x40cc79
  40cc68:	je     0x40cc9f
  40cc6a:	sub    eax,0xc0000093
  40cc6f:	je     0x40cc99
  40cc71:	dec    eax
  40cc72:	je     0x40cc87
  40cc74:	dec    eax
  40cc75:	je     0x40cc8d
  40cc77:	jmp    0x40cca8
  40cc79:	sub    eax,0xc00000fd
  40cc7e:	je     0x40cca5
  40cc80:	sub    eax,0x3d
  40cc83:	je     0x40cca2
  40cc85:	jmp    0x40cca8
  40cc87:	mov    al,0x3
  40cc89:	ret    
  40cc8a:	mov    al,0x4
  40cc8c:	ret    
  40cc8d:	mov    al,0x5
  40cc8f:	ret    
  40cc90:	mov    al,0x6
  40cc92:	ret    
  40cc93:	mov    al,0x7
  40cc95:	ret    
  40cc96:	mov    al,0x8
  40cc98:	ret    
  40cc99:	mov    al,0x9
  40cc9b:	ret    
  40cc9c:	mov    al,0xb
  40cc9e:	ret    
  40cc9f:	mov    al,0xc
  40cca1:	ret    
  40cca2:	mov    al,0xd
  40cca4:	ret    
  40cca5:	mov    al,0xe
  40cca7:	ret    
  40cca8:	mov    al,0x16
  40ccaa:	ret    
  40ccab:	nop
  40ccac:	push   ebx
  40ccad:	mov    ebx,eax
  40ccaf:	mov    eax,ebx
  40ccb1:	call   0x40cc2c
  40ccb6:	movzx  eax,al
  40ccb9:	mov    eax,DWORD PTR [eax*8+0x461938]
  40ccc0:	pop    ebx
  40ccc1:	ret    
  40ccc2:	mov    eax,eax
  40ccc4:	push   ebp
  40ccc5:	mov    ebp,esp
  40ccc7:	add    esp,0xfffffe90
  40cccd:	push   ebx
  40ccce:	push   esi
  40cccf:	xor    eax,eax
  40ccd1:	mov    DWORD PTR [ebp-0x170],eax
  40ccd7:	mov    DWORD PTR [ebp-0x14c],eax
  40ccdd:	mov    DWORD PTR [ebp-0x154],eax
  40cce3:	mov    DWORD PTR [ebp-0x150],eax
  40cce9:	mov    DWORD PTR [ebp-0x4],eax
  40ccec:	xor    eax,eax
  40ccee:	push   ebp
  40ccef:	push   0x40ce7f
  40ccf4:	push   DWORD PTR fs:[eax]
  40ccf7:	mov    DWORD PTR fs:[eax],esp
  40ccfa:	mov    eax,DWORD PTR [ebp+0x8]
  40ccfd:	mov    ebx,DWORD PTR [eax-0x4]
  40cd00:	cmp    DWORD PTR [ebx+0x14],0x0
  40cd04:	jne    0x40cd15
  40cd06:	lea    edx,[ebp-0x4]
  40cd09:	mov    eax,ds:0x46deb8
  40cd0e:	call   0x406f48
  40cd13:	jmp    0x40cd22
  40cd15:	lea    edx,[ebp-0x4]
  40cd18:	mov    eax,ds:0x46dd2c
  40cd1d:	call   0x406f48
  40cd22:	mov    esi,DWORD PTR [ebx+0x18]
  40cd25:	push   0x1c
  40cd27:	lea    eax,[ebp-0x20]
  40cd2a:	push   eax
  40cd2b:	mov    eax,DWORD PTR [ebx+0xc]
  40cd2e:	push   eax
  40cd2f:	call   0x407310
  40cd34:	cmp    DWORD PTR [ebp-0x10],0x1000
  40cd3b:	jne    0x40cdf4
  40cd41:	push   0x105
  40cd46:	lea    eax,[ebp-0x125]
  40cd4c:	push   eax
  40cd4d:	mov    eax,DWORD PTR [ebp-0x1c]
  40cd50:	push   eax
  40cd51:	call   0x407250
  40cd56:	test   eax,eax
  40cd58:	je     0x40cdf4
  40cd5e:	mov    eax,DWORD PTR [ebx+0xc]
  40cd61:	mov    DWORD PTR [ebp-0x148],eax
  40cd67:	mov    BYTE PTR [ebp-0x144],0x5
  40cd6e:	lea    eax,[ebp-0x150]
  40cd74:	lea    edx,[ebp-0x125]
  40cd7a:	mov    ecx,0x105
  40cd7f:	call   0x4051f8
  40cd84:	mov    eax,DWORD PTR [ebp-0x150]
  40cd8a:	lea    edx,[ebp-0x14c]
  40cd90:	call   0x409058
  40cd95:	mov    eax,DWORD PTR [ebp-0x14c]
  40cd9b:	mov    DWORD PTR [ebp-0x140],eax
  40cda1:	mov    BYTE PTR [ebp-0x13c],0xb
  40cda8:	mov    eax,DWORD PTR [ebp-0x4]
  40cdab:	mov    DWORD PTR [ebp-0x138],eax
  40cdb1:	mov    BYTE PTR [ebp-0x134],0xb
  40cdb8:	mov    DWORD PTR [ebp-0x130],esi
  40cdbe:	mov    BYTE PTR [ebp-0x12c],0x5
  40cdc5:	lea    eax,[ebp-0x148]
  40cdcb:	push   eax
  40cdcc:	push   0x3
  40cdce:	lea    edx,[ebp-0x154]
  40cdd4:	mov    eax,ds:0x46ddb8
  40cdd9:	call   0x406f48
  40cdde:	mov    ecx,DWORD PTR [ebp-0x154]
  40cde4:	mov    dl,0x1
  40cde6:	mov    eax,ds:0x407d54
  40cdeb:	call   0x40c8f0
  40cdf0:	mov    ebx,eax
  40cdf2:	jmp    0x40ce4e
  40cdf4:	mov    eax,DWORD PTR [ebx+0xc]
  40cdf7:	mov    DWORD PTR [ebp-0x16c],eax
  40cdfd:	mov    BYTE PTR [ebp-0x168],0x5
  40ce04:	mov    eax,DWORD PTR [ebp-0x4]
  40ce07:	mov    DWORD PTR [ebp-0x164],eax
  40ce0d:	mov    BYTE PTR [ebp-0x160],0xb
  40ce14:	mov    DWORD PTR [ebp-0x15c],esi
  40ce1a:	mov    BYTE PTR [ebp-0x158],0x5
  40ce21:	lea    eax,[ebp-0x16c]
  40ce27:	push   eax
  40ce28:	push   0x2
  40ce2a:	lea    edx,[ebp-0x170]
  40ce30:	mov    eax,ds:0x46dd48
  40ce35:	call   0x406f48
  40ce3a:	mov    ecx,DWORD PTR [ebp-0x170]
  40ce40:	mov    dl,0x1
  40ce42:	mov    eax,ds:0x407d54
  40ce47:	call   0x40c8f0
  40ce4c:	mov    ebx,eax
  40ce4e:	xor    eax,eax
  40ce50:	pop    edx
  40ce51:	pop    ecx
  40ce52:	pop    ecx
  40ce53:	mov    DWORD PTR fs:[eax],edx
  40ce56:	push   0x40ce86
  40ce5b:	lea    eax,[ebp-0x170]
  40ce61:	call   0x404f88
  40ce66:	lea    eax,[ebp-0x154]
  40ce6c:	mov    edx,0x3
  40ce71:	call   0x404fac
  40ce76:	lea    eax,[ebp-0x4]
  40ce79:	call   0x404f88
  40ce7e:	ret    
  40ce7f:	jmp    0x40481c
  40ce84:	jmp    0x40ce5b
  40ce86:	mov    eax,ebx
  40ce88:	pop    esi
  40ce89:	pop    ebx
  40ce8a:	mov    esp,ebp
  40ce8c:	pop    ebp
  40ce8d:	ret    
  40ce8e:	mov    eax,eax
  40ce90:	push   ebp
  40ce91:	mov    ebp,esp
  40ce93:	add    esp,0xfffffff0
  40ce96:	push   ebx
  40ce97:	xor    edx,edx
  40ce99:	mov    DWORD PTR [ebp-0x10],edx
  40ce9c:	mov    DWORD PTR [ebp-0x4],eax
  40ce9f:	xor    eax,eax
  40cea1:	push   ebp
  40cea2:	push   0x40cf49
  40cea7:	push   DWORD PTR fs:[eax]
  40ceaa:	mov    DWORD PTR fs:[eax],esp
  40cead:	mov    eax,DWORD PTR [ebp-0x4]
  40ceb0:	call   0x40cc2c
  40ceb5:	movzx  eax,al
  40ceb8:	mov    edx,eax
  40ceba:	add    edx,0xfffffffd
  40cebd:	sub    edx,0x8
  40cec0:	jb     0x40ceca
  40cec2:	je     0x40cee1
  40cec4:	dec    edx
  40cec5:	sub    edx,0xa
  40cec8:	jae    0x40ceec
  40ceca:	lea    eax,[eax*8+0x461938]
  40ced1:	mov    ecx,DWORD PTR [eax+0x4]
  40ced4:	mov    eax,DWORD PTR [eax]
  40ced6:	mov    dl,0x1
  40ced8:	call   0x40c8b4
  40cedd:	mov    ebx,eax
  40cedf:	jmp    0x40cf1c
  40cee1:	push   ebp
  40cee2:	call   0x40ccc4
  40cee7:	pop    ecx
  40cee8:	mov    ebx,eax
  40ceea:	jmp    0x40cf1c
  40ceec:	mov    eax,DWORD PTR [ebp-0x4]
  40ceef:	mov    eax,DWORD PTR [eax]
  40cef1:	mov    DWORD PTR [ebp-0xc],eax
  40cef4:	mov    BYTE PTR [ebp-0x8],0x0
  40cef8:	lea    eax,[ebp-0xc]
  40cefb:	push   eax
  40cefc:	push   0x0
  40cefe:	lea    edx,[ebp-0x10]
  40cf01:	mov    eax,ds:0x46da64
  40cf06:	call   0x406f48
  40cf0b:	mov    ecx,DWORD PTR [ebp-0x10]
  40cf0e:	mov    dl,0x1
  40cf10:	mov    eax,ds:0x4078c4
  40cf15:	call   0x40c8f0
  40cf1a:	mov    ebx,eax
  40cf1c:	mov    eax,ebx
  40cf1e:	mov    edx,DWORD PTR ds:0x40786c
  40cf24:	call   0x40422c
  40cf29:	test   al,al
  40cf2b:	je     0x40cf33
  40cf2d:	mov    eax,DWORD PTR [ebp-0x4]
  40cf30:	mov    DWORD PTR [ebx+0xc],eax
  40cf33:	xor    eax,eax
  40cf35:	pop    edx
  40cf36:	pop    ecx
  40cf37:	pop    ecx
  40cf38:	mov    DWORD PTR fs:[eax],edx
  40cf3b:	push   0x40cf50
  40cf40:	lea    eax,[ebp-0x10]
  40cf43:	call   0x404f88
  40cf48:	ret    
  40cf49:	jmp    0x40481c
  40cf4e:	jmp    0x40cf40
  40cf50:	mov    eax,ebx
  40cf52:	pop    ebx
  40cf53:	mov    esp,ebp
  40cf55:	pop    ebp
  40cf56:	ret    
  40cf57:	nop
  40cf58:	call   0x40c7ec
  40cf5d:	mov    eax,0x1
  40cf62:	call   0x404e9c
  40cf67:	ret    
  40cf68:	mov    ecx,DWORD PTR ds:0x46db1c
  40cf6e:	mov    dl,0x1
  40cf70:	mov    eax,ds:0x4077b8
  40cf75:	call   0x40c970
  40cf7a:	mov    ds:0x470914,eax
  40cf7f:	mov    ecx,DWORD PTR ds:0x46dce4
  40cf85:	mov    dl,0x1
  40cf87:	mov    eax,ds:0x407c40
  40cf8c:	call   0x40c970
  40cf91:	mov    ds:0x470918,eax
  40cf96:	mov    eax,ds:0x46da7c
  40cf9b:	mov    DWORD PTR [eax],0x40caec
  40cfa1:	mov    eax,ds:0x46dba0
  40cfa6:	mov    DWORD PTR [eax],0x40cf58
  40cfac:	mov    eax,ds:0x46daf8
  40cfb1:	mov    edx,DWORD PTR ds:0x4076f4
  40cfb7:	mov    DWORD PTR [eax],edx
  40cfb9:	mov    eax,ds:0x46db80
  40cfbe:	mov    DWORD PTR [eax],0x40ccac
  40cfc4:	mov    eax,ds:0x46dba8
  40cfc9:	mov    DWORD PTR [eax],0x40ce90
  40cfcf:	mov    eax,0x40cbf8
  40cfd4:	mov    edx,DWORD PTR ds:0x46dd18
  40cfda:	mov    DWORD PTR [edx],eax
  40cfdc:	mov    eax,0x40cc14
  40cfe1:	mov    edx,DWORD PTR ds:0x46da5c
  40cfe7:	mov    DWORD PTR [edx],eax
  40cfe9:	ret    
  40cfea:	mov    eax,eax
  40cfec:	cmp    DWORD PTR ds:0x470914,0x0
  40cff3:	je     0x40d00f
  40cff5:	mov    eax,ds:0x470914
  40cffa:	mov    BYTE PTR [eax+0xc],0x1
  40cffe:	mov    eax,ds:0x470914
  40d003:	mov    edx,DWORD PTR [eax]
  40d005:	call   DWORD PTR [edx-0x8]
  40d008:	xor    eax,eax
  40d00a:	mov    ds:0x470914,eax
  40d00f:	cmp    DWORD PTR ds:0x470918,0x0
  40d016:	je     0x40d032
  40d018:	mov    eax,ds:0x470918
  40d01d:	mov    BYTE PTR [eax+0xc],0x1
  40d021:	mov    eax,ds:0x470918
  40d026:	call   0x4040a0
  40d02b:	xor    eax,eax
  40d02d:	mov    ds:0x470918,eax
  40d032:	mov    eax,ds:0x46da7c
  40d037:	xor    edx,edx
  40d039:	mov    DWORD PTR [eax],edx
  40d03b:	mov    eax,ds:0x46dba0
  40d040:	xor    edx,edx
  40d042:	mov    DWORD PTR [eax],edx
  40d044:	mov    eax,ds:0x46daf8
  40d049:	xor    edx,edx
  40d04b:	mov    DWORD PTR [eax],edx
  40d04d:	mov    eax,ds:0x46db80
  40d052:	xor    edx,edx
  40d054:	mov    DWORD PTR [eax],edx
  40d056:	mov    eax,ds:0x46dba8
  40d05b:	xor    edx,edx
  40d05d:	mov    DWORD PTR [eax],edx
  40d05f:	mov    eax,ds:0x46dd18
  40d064:	xor    edx,edx
  40d066:	mov    DWORD PTR [eax],edx
  40d068:	call   0x402f24
  40d06d:	test   eax,eax
  40d06f:	je     0x40d082
  40d071:	call   0x402f44
  40d076:	push   eax
  40d077:	call   0x402f24
  40d07c:	pop    edx
  40d07d:	call   0x40cf58
  40d082:	ret    
  40d083:	nop
  40d084:	add    esp,0xffffff6c
  40d08a:	mov    DWORD PTR [esp],0x94
  40d091:	push   esp
  40d092:	call   0x407290
  40d097:	test   eax,eax
  40d099:	je     0x40d0eb
  40d09b:	mov    eax,DWORD PTR [esp+0x10]
  40d09f:	mov    ds:0x4617c0,eax
  40d0a4:	mov    eax,DWORD PTR [esp+0x4]
  40d0a8:	mov    ds:0x4617c4,eax
  40d0ad:	mov    eax,DWORD PTR [esp+0x8]
  40d0b1:	mov    ds:0x4617c8,eax
  40d0b6:	cmp    DWORD PTR ds:0x4617c0,0x1
  40d0bd:	jne    0x40d0cf
  40d0bf:	mov    eax,DWORD PTR [esp+0xc]
  40d0c3:	and    eax,0xffff
  40d0c8:	mov    ds:0x4617cc,eax
  40d0cd:	jmp    0x40d0d8
  40d0cf:	mov    eax,DWORD PTR [esp+0xc]
  40d0d3:	mov    ds:0x4617cc,eax
  40d0d8:	mov    eax,0x4617d0
  40d0dd:	lea    edx,[esp+0x14]
  40d0e1:	mov    ecx,0x80
  40d0e6:	call   0x4051f8
  40d0eb:	add    esp,0x94
  40d0f1:	ret    
  40d0f2:	mov    eax,eax
  40d0f4:	push   esi
  40d0f5:	push   edi
  40d0f6:	mov    edi,edx
  40d0f8:	xor    edx,edx
  40d0fa:	test   eax,eax
  40d0fc:	je     0x40d160
  40d0fe:	cmp    BYTE PTR [eax+edi*1],0x0
  40d102:	je     0x40d160
  40d104:	test   edi,edi
  40d106:	jne    0x40d11b
  40d108:	movzx  eax,BYTE PTR [eax]
  40d10b:	movzx  eax,al
  40d10e:	bt     DWORD PTR ds:0x461808,eax
  40d115:	jae    0x40d160
  40d117:	mov    dl,0x1
  40d119:	jmp    0x40d160
  40d11b:	mov    esi,edi
  40d11d:	dec    esi
  40d11e:	jmp    0x40d121
  40d120:	dec    esi
  40d121:	test   esi,esi
  40d123:	jl     0x40d135
  40d125:	movzx  ecx,BYTE PTR [eax+esi*1]
  40d129:	movzx  ecx,cl
  40d12c:	bt     DWORD PTR ds:0x461808,ecx
  40d133:	jb     0x40d120
  40d135:	mov    ecx,edi
  40d137:	sub    ecx,esi
  40d139:	and    ecx,0x80000001
  40d13f:	jns    0x40d146
  40d141:	dec    ecx
  40d142:	or     ecx,0xfffffffe
  40d145:	inc    ecx
  40d146:	test   ecx,ecx
  40d148:	jne    0x40d14e
  40d14a:	mov    dl,0x2
  40d14c:	jmp    0x40d160
  40d14e:	movzx  eax,BYTE PTR [eax+edi*1]
  40d152:	movzx  eax,al
  40d155:	bt     DWORD PTR ds:0x461808,eax
  40d15c:	jae    0x40d160
  40d15e:	mov    dl,0x1
  40d160:	mov    eax,edx
  40d162:	pop    edi
  40d163:	pop    esi
  40d164:	ret    
  40d165:	lea    eax,[eax+0x0]
  40d168:	push   ebx
  40d169:	push   esi
  40d16a:	mov    esi,edx
  40d16c:	mov    ebx,eax
  40d16e:	xor    eax,eax
  40d170:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d177:	je     0x40d188
  40d179:	mov    eax,ebx
  40d17b:	call   0x405418
  40d180:	mov    edx,esi
  40d182:	dec    edx
  40d183:	call   0x40d0f4
  40d188:	pop    esi
  40d189:	pop    ebx
  40d18a:	ret    
  40d18b:	nop
  40d18c:	xor    ecx,ecx
  40d18e:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d195:	je     0x40d19e
  40d197:	call   0x40d0f4
  40d19c:	mov    ecx,eax
  40d19e:	mov    eax,ecx
  40d1a0:	ret    
  40d1a1:	lea    eax,[eax+0x0]
  40d1a4:	push   ebx
  40d1a5:	mov    ebx,eax
  40d1a7:	mov    ecx,ebx
  40d1a9:	test   ecx,ecx
  40d1ab:	je     0x40d1b2
  40d1ad:	sub    ecx,0x4
  40d1b0:	mov    ecx,DWORD PTR [ecx]
  40d1b2:	cmp    edx,ecx
  40d1b4:	jle    0x40d1c1
  40d1b6:	mov    edx,ebx
  40d1b8:	test   edx,edx
  40d1ba:	je     0x40d1c1
  40d1bc:	sub    edx,0x4
  40d1bf:	mov    edx,DWORD PTR [edx]
  40d1c1:	call   0x40d1c8
  40d1c6:	pop    ebx
  40d1c7:	ret    
  40d1c8:	push   ebx
  40d1c9:	push   esi
  40d1ca:	push   edi
  40d1cb:	push   ebp
  40d1cc:	mov    ebp,edx
  40d1ce:	mov    edi,eax
  40d1d0:	xor    esi,esi
  40d1d2:	test   ebp,ebp
  40d1d4:	jg     0x40d1da
  40d1d6:	mov    al,0x1
  40d1d8:	jmp    0x40d1ea
  40d1da:	mov    eax,edi
  40d1dc:	test   eax,eax
  40d1de:	je     0x40d1e5
  40d1e0:	sub    eax,0x4
  40d1e3:	mov    eax,DWORD PTR [eax]
  40d1e5:	cmp    eax,ebp
  40d1e7:	setl   al
  40d1ea:	test   al,al
  40d1ec:	jne    0x40d228
  40d1ee:	mov    esi,ebp
  40d1f0:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d1f7:	je     0x40d228
  40d1f9:	mov    ebx,0x1
  40d1fe:	xor    esi,esi
  40d200:	cmp    ebp,ebx
  40d202:	jl     0x40d228
  40d204:	movzx  eax,BYTE PTR [edi+ebx*1-0x1]
  40d209:	movzx  eax,al
  40d20c:	bt     DWORD PTR ds:0x461808,eax
  40d213:	jae    0x40d222
  40d215:	mov    edx,ebx
  40d217:	mov    eax,edi
  40d219:	call   0x40d414
  40d21e:	mov    ebx,eax
  40d220:	jmp    0x40d223
  40d222:	inc    ebx
  40d223:	inc    esi
  40d224:	cmp    ebp,ebx
  40d226:	jge    0x40d204
  40d228:	mov    eax,esi
  40d22a:	pop    ebp
  40d22b:	pop    edi
  40d22c:	pop    esi
  40d22d:	pop    ebx
  40d22e:	ret    
  40d22f:	nop
  40d230:	push   ebp
  40d231:	mov    ebp,esp
  40d233:	add    esp,0xfffffff4
  40d236:	push   ebx
  40d237:	push   esi
  40d238:	push   edi
  40d239:	mov    DWORD PTR [ebp-0x8],ecx
  40d23c:	mov    DWORD PTR [ebp-0x4],edx
  40d23f:	mov    edi,eax
  40d241:	mov    eax,edi
  40d243:	test   eax,eax
  40d245:	je     0x40d24c
  40d247:	sub    eax,0x4
  40d24a:	mov    eax,DWORD PTR [eax]
  40d24c:	mov    DWORD PTR [ebp-0xc],eax
  40d24f:	mov    esi,0x1
  40d254:	mov    ebx,0x1
  40d259:	jmp    0x40d27b
  40d25b:	inc    esi
  40d25c:	movzx  eax,BYTE PTR [edi+ebx*1-0x1]
  40d261:	movzx  eax,al
  40d264:	bt     DWORD PTR ds:0x461808,eax
  40d26b:	jae    0x40d27a
  40d26d:	mov    edx,ebx
  40d26f:	mov    eax,edi
  40d271:	call   0x40d414
  40d276:	mov    ebx,eax
  40d278:	jmp    0x40d27b
  40d27a:	inc    ebx
  40d27b:	cmp    ebx,DWORD PTR [ebp-0xc]
  40d27e:	jge    0x40d285
  40d280:	cmp    esi,DWORD PTR [ebp-0x4]
  40d283:	jl     0x40d25b
  40d285:	cmp    esi,DWORD PTR [ebp-0x4]
  40d288:	jne    0x40d2ac
  40d28a:	cmp    ebx,DWORD PTR [ebp-0xc]
  40d28d:	jge    0x40d2ac
  40d28f:	movzx  eax,BYTE PTR [edi+ebx*1-0x1]
  40d294:	movzx  eax,al
  40d297:	bt     DWORD PTR ds:0x461808,eax
  40d29e:	jae    0x40d2ac
  40d2a0:	mov    edx,ebx
  40d2a2:	mov    eax,edi
  40d2a4:	call   0x40d414
  40d2a9:	dec    eax
  40d2aa:	mov    ebx,eax
  40d2ac:	mov    eax,DWORD PTR [ebp-0x8]
  40d2af:	mov    DWORD PTR [eax],esi
  40d2b1:	mov    eax,DWORD PTR [ebp+0x8]
  40d2b4:	mov    DWORD PTR [eax],ebx
  40d2b6:	pop    edi
  40d2b7:	pop    esi
  40d2b8:	pop    ebx
  40d2b9:	mov    esp,ebp
  40d2bb:	pop    ebp
  40d2bc:	ret    0x4
  40d2bf:	nop
  40d2c0:	push   ebx
  40d2c1:	push   esi
  40d2c2:	push   edi
  40d2c3:	add    esp,0xfffffff8
  40d2c6:	mov    ebx,edx
  40d2c8:	mov    esi,eax
  40d2ca:	xor    eax,eax
  40d2cc:	mov    DWORD PTR [esp],eax
  40d2cf:	test   ebx,ebx
  40d2d1:	jg     0x40d2d7
  40d2d3:	mov    al,0x1
  40d2d5:	jmp    0x40d2e7
  40d2d7:	mov    eax,esi
  40d2d9:	test   eax,eax
  40d2db:	je     0x40d2e2
  40d2dd:	sub    eax,0x4
  40d2e0:	mov    eax,DWORD PTR [eax]
  40d2e2:	cmp    eax,ebx
  40d2e4:	setl   al
  40d2e7:	test   al,al
  40d2e9:	jne    0x40d338
  40d2eb:	cmp    ebx,0x1
  40d2ee:	jle    0x40d335
  40d2f0:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d2f7:	je     0x40d335
  40d2f9:	push   esp
  40d2fa:	lea    ecx,[esp+0x8]
  40d2fe:	mov    edi,ebx
  40d300:	dec    edi
  40d301:	mov    edx,edi
  40d303:	mov    eax,esi
  40d305:	call   0x40d230
  40d30a:	cmp    edi,DWORD PTR [esp+0x4]
  40d30e:	jle    0x40d314
  40d310:	mov    al,0x1
  40d312:	jmp    0x40d325
  40d314:	mov    eax,esi
  40d316:	test   eax,eax
  40d318:	je     0x40d31f
  40d31a:	sub    eax,0x4
  40d31d:	mov    eax,DWORD PTR [eax]
  40d31f:	cmp    eax,DWORD PTR [esp]
  40d322:	setle  al
  40d325:	test   al,al
  40d327:	je     0x40d330
  40d329:	xor    eax,eax
  40d32b:	mov    DWORD PTR [esp],eax
  40d32e:	jmp    0x40d338
  40d330:	inc    DWORD PTR [esp]
  40d333:	jmp    0x40d338
  40d335:	mov    DWORD PTR [esp],ebx
  40d338:	mov    eax,DWORD PTR [esp]
  40d33b:	pop    ecx
  40d33c:	pop    edx
  40d33d:	pop    edi
  40d33e:	pop    esi
  40d33f:	pop    ebx
  40d340:	ret    
  40d341:	lea    eax,[eax+0x0]
  40d344:	push   ebx
  40d345:	push   esi
  40d346:	add    esp,0xfffffff8
  40d349:	mov    ebx,eax
  40d34b:	xor    eax,eax
  40d34d:	mov    DWORD PTR [esp],eax
  40d350:	test   edx,edx
  40d352:	jle    0x40d3aa
  40d354:	mov    esi,ebx
  40d356:	mov    eax,esi
  40d358:	test   eax,eax
  40d35a:	je     0x40d361
  40d35c:	sub    eax,0x4
  40d35f:	mov    eax,DWORD PTR [eax]
  40d361:	cmp    eax,edx
  40d363:	jge    0x40d372
  40d365:	mov    eax,esi
  40d367:	test   eax,eax
  40d369:	je     0x40d370
  40d36b:	sub    eax,0x4
  40d36e:	mov    eax,DWORD PTR [eax]
  40d370:	mov    edx,eax
  40d372:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d379:	je     0x40d3a7
  40d37b:	push   esp
  40d37c:	lea    ecx,[esp+0x8]
  40d380:	mov    eax,ebx
  40d382:	call   0x40d230
  40d387:	mov    eax,esi
  40d389:	test   eax,eax
  40d38b:	je     0x40d392
  40d38d:	sub    eax,0x4
  40d390:	mov    eax,DWORD PTR [eax]
  40d392:	cmp    eax,DWORD PTR [esp]
  40d395:	jge    0x40d3aa
  40d397:	mov    eax,esi
  40d399:	test   eax,eax
  40d39b:	je     0x40d3a2
  40d39d:	sub    eax,0x4
  40d3a0:	mov    eax,DWORD PTR [eax]
  40d3a2:	mov    DWORD PTR [esp],eax
  40d3a5:	jmp    0x40d3aa
  40d3a7:	mov    DWORD PTR [esp],edx
  40d3aa:	mov    eax,DWORD PTR [esp]
  40d3ad:	pop    ecx
  40d3ae:	pop    edx
  40d3af:	pop    esi
  40d3b0:	pop    ebx
  40d3b1:	ret    
  40d3b2:	mov    eax,eax
  40d3b4:	push   ebx
  40d3b5:	mov    ebx,eax
  40d3b7:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d3be:	je     0x40d3ca
  40d3c0:	push   ebx
  40d3c1:	call   0x407328
  40d3c6:	sub    eax,ebx
  40d3c8:	pop    ebx
  40d3c9:	ret    
  40d3ca:	mov    eax,0x1
  40d3cf:	pop    ebx
  40d3d0:	ret    
  40d3d1:	lea    eax,[eax+0x0]
  40d3d4:	push   eax
  40d3d5:	call   0x407328
  40d3da:	ret    
  40d3db:	nop
  40d3dc:	push   ebx
  40d3dd:	push   esi
  40d3de:	mov    esi,edx
  40d3e0:	mov    ebx,eax
  40d3e2:	mov    eax,0x1
  40d3e7:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d3ee:	je     0x40d410
  40d3f0:	movzx  edx,BYTE PTR [ebx+esi*1-0x1]
  40d3f5:	movzx  edx,dl
  40d3f8:	bt     DWORD PTR ds:0x461808,edx
  40d3ff:	jae    0x40d410
  40d401:	mov    eax,ebx
  40d403:	call   0x405418
  40d408:	add    eax,esi
  40d40a:	dec    eax
  40d40b:	call   0x40d3b4
  40d410:	pop    esi
  40d411:	pop    ebx
  40d412:	ret    
  40d413:	nop
  40d414:	push   ebx
  40d415:	push   esi
  40d416:	mov    ebx,edx
  40d418:	mov    esi,eax
  40d41a:	lea    eax,[ebx+0x1]
  40d41d:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d424:	je     0x40d448
  40d426:	movzx  edx,BYTE PTR [esi+ebx*1-0x1]
  40d42b:	movzx  edx,dl
  40d42e:	bt     DWORD PTR ds:0x461808,edx
  40d435:	jae    0x40d448
  40d437:	mov    eax,esi
  40d439:	call   0x405418
  40d43e:	add    eax,ebx
  40d440:	dec    eax
  40d441:	call   0x40d3b4
  40d446:	add    eax,ebx
  40d448:	pop    esi
  40d449:	pop    ebx
  40d44a:	ret    
  40d44b:	nop
  40d44c:	push   ebx
  40d44d:	push   esi
  40d44e:	mov    ebx,edx
  40d450:	mov    esi,eax
  40d452:	test   ebx,ebx
  40d454:	jle    0x40d468
  40d456:	mov    eax,esi
  40d458:	test   eax,eax
  40d45a:	je     0x40d461
  40d45c:	sub    eax,0x4
  40d45f:	mov    eax,DWORD PTR [eax]
  40d461:	cmp    eax,ebx
  40d463:	setge  al
  40d466:	jmp    0x40d46a
  40d468:	xor    eax,eax
  40d46a:	test   al,al
  40d46c:	je     0x40d478
  40d46e:	cmp    BYTE PTR [esi+ebx*1-0x1],0x5c
  40d473:	sete   al
  40d476:	jmp    0x40d47a
  40d478:	xor    eax,eax
  40d47a:	test   al,al
  40d47c:	je     0x40d48f
  40d47e:	mov    edx,ebx
  40d480:	mov    eax,esi
  40d482:	call   0x40d168
  40d487:	test   al,al
  40d489:	sete   al
  40d48c:	pop    esi
  40d48d:	pop    ebx
  40d48e:	ret    
  40d48f:	xor    eax,eax
  40d491:	pop    esi
  40d492:	pop    ebx
  40d493:	ret    
  40d494:	push   ebx
  40d495:	push   esi
  40d496:	push   ecx
  40d497:	mov    ebx,edx
  40d499:	mov    esi,eax
  40d49b:	mov    eax,ebx
  40d49d:	mov    edx,esi
  40d49f:	call   0x404fdc
  40d4a4:	mov    eax,DWORD PTR [ebx]
  40d4a6:	mov    DWORD PTR [esp],eax
  40d4a9:	mov    esi,DWORD PTR [esp]
  40d4ac:	test   esi,esi
  40d4ae:	je     0x40d4b5
  40d4b0:	sub    esi,0x4
  40d4b3:	mov    esi,DWORD PTR [esi]
  40d4b5:	mov    eax,DWORD PTR [ebx]
  40d4b7:	mov    edx,esi
  40d4b9:	call   0x40d44c
  40d4be:	test   al,al
  40d4c0:	jne    0x40d4ce
  40d4c2:	mov    eax,ebx
  40d4c4:	mov    edx,0x40d4dc
  40d4c9:	call   0x405254
  40d4ce:	pop    edx
  40d4cf:	pop    esi
  40d4d0:	pop    ebx
  40d4d1:	ret    
  40d4d2:	add    BYTE PTR [eax],al
  40d4d4:	(bad)  
  40d4d5:	(bad)  
  40d4d6:	(bad)  
  40d4d7:	inc    DWORD PTR [ecx]
  40d4d9:	add    BYTE PTR [eax],al
  40d4db:	add    BYTE PTR [eax+eax*1+0x0],bl
  40d4df:	add    BYTE PTR [ebx+0x56],dl
  40d4e2:	push   edi
  40d4e3:	push   ebp
  40d4e4:	mov    esi,edx
  40d4e6:	mov    ebx,eax
  40d4e8:	xor    edi,edi
  40d4ea:	mov    eax,ebx
  40d4ec:	call   0x405418
  40d4f1:	push   eax
  40d4f2:	mov    eax,esi
  40d4f4:	call   0x405418
  40d4f9:	mov    ebp,eax
  40d4fb:	mov    eax,ebp
  40d4fd:	pop    edx
  40d4fe:	call   0x40d518
  40d503:	mov    ebx,eax
  40d505:	test   ebx,ebx
  40d507:	je     0x40d50e
  40d509:	mov    edi,ebx
  40d50b:	sub    edi,ebp
  40d50d:	inc    edi
  40d50e:	mov    eax,edi
  40d510:	pop    ebp
  40d511:	pop    edi
  40d512:	pop    esi
  40d513:	pop    ebx
  40d514:	ret    
  40d515:	lea    eax,[eax+0x0]
  40d518:	push   ebx
  40d519:	push   esi
  40d51a:	push   edi
  40d51b:	push   ebp
  40d51c:	add    esp,0xfffffff8
  40d51f:	mov    ebp,edx
  40d521:	mov    esi,eax
  40d523:	xor    ebx,ebx
  40d525:	test   esi,esi
  40d527:	je     0x40d5ae
  40d52d:	cmp    BYTE PTR [esi],0x0
  40d530:	je     0x40d5ae
  40d532:	test   ebp,ebp
  40d534:	je     0x40d5ae
  40d536:	cmp    BYTE PTR [ebp+0x0],0x0
  40d53a:	je     0x40d5ae
  40d53c:	mov    eax,esi
  40d53e:	call   0x4091a4
  40d543:	mov    DWORD PTR [esp],eax
  40d546:	mov    eax,ebp
  40d548:	call   0x4091a4
  40d54d:	mov    edi,eax
  40d54f:	mov    edx,ebp
  40d551:	mov    eax,esi
  40d553:	call   0x409284
  40d558:	mov    ebx,eax
  40d55a:	jmp    0x40d59b
  40d55c:	mov    edx,ebx
  40d55e:	sub    edx,esi
  40d560:	mov    eax,esi
  40d562:	call   0x40d18c
  40d567:	mov    BYTE PTR [esp+0x4],al
  40d56b:	cmp    BYTE PTR [esp+0x4],0x2
  40d570:	je     0x40d587
  40d572:	push   edi
  40d573:	push   ebp
  40d574:	push   edi
  40d575:	push   ebx
  40d576:	push   0x0
  40d578:	push   0x400
  40d57d:	call   0x407148
  40d582:	cmp    eax,0x2
  40d585:	je     0x40d5ae
  40d587:	cmp    BYTE PTR [esp+0x4],0x1
  40d58c:	jne    0x40d58f
  40d58e:	inc    ebx
  40d58f:	inc    ebx
  40d590:	mov    edx,ebp
  40d592:	mov    eax,ebx
  40d594:	call   0x409284
  40d599:	mov    ebx,eax
  40d59b:	test   ebx,ebx
  40d59d:	je     0x40d5ac
  40d59f:	mov    eax,ebx
  40d5a1:	sub    eax,esi
  40d5a3:	mov    edx,DWORD PTR [esp]
  40d5a6:	sub    edx,eax
  40d5a8:	cmp    edi,edx
  40d5aa:	jbe    0x40d55c
  40d5ac:	xor    ebx,ebx
  40d5ae:	mov    eax,ebx
  40d5b0:	pop    ecx
  40d5b1:	pop    edx
  40d5b2:	pop    ebp
  40d5b3:	pop    edi
  40d5b4:	pop    esi
  40d5b5:	pop    ebx
  40d5b6:	ret    
  40d5b7:	nop
  40d5b8:	push   ebx
  40d5b9:	push   esi
  40d5ba:	push   edi
  40d5bb:	mov    ebx,edx
  40d5bd:	mov    esi,eax
  40d5bf:	mov    edx,ebx
  40d5c1:	mov    eax,esi
  40d5c3:	call   0x40d5ec
  40d5c8:	mov    esi,eax
  40d5ca:	mov    edi,esi
  40d5cc:	test   bl,bl
  40d5ce:	je     0x40d5e6
  40d5d0:	test   esi,esi
  40d5d2:	je     0x40d5e6
  40d5d4:	mov    edi,esi
  40d5d6:	inc    esi
  40d5d7:	mov    edx,ebx
  40d5d9:	mov    eax,esi
  40d5db:	call   0x40d5ec
  40d5e0:	mov    esi,eax
  40d5e2:	test   esi,esi
  40d5e4:	jne    0x40d5d4
  40d5e6:	mov    eax,edi
  40d5e8:	pop    edi
  40d5e9:	pop    esi
  40d5ea:	pop    ebx
  40d5eb:	ret    
  40d5ec:	push   ebx
  40d5ed:	push   esi
  40d5ee:	push   edi
  40d5ef:	mov    ebx,edx
  40d5f1:	mov    esi,eax
  40d5f3:	mov    edx,ebx
  40d5f5:	mov    eax,esi
  40d5f7:	call   0x409270
  40d5fc:	mov    edi,eax
  40d5fe:	test   edi,edi
  40d600:	je     0x40d626
  40d602:	mov    edx,edi
  40d604:	sub    edx,esi
  40d606:	mov    eax,esi
  40d608:	call   0x40d18c
  40d60d:	sub    al,0x1
  40d60f:	jb     0x40d626
  40d611:	je     0x40d615
  40d613:	jmp    0x40d616
  40d615:	inc    edi
  40d616:	inc    edi
  40d617:	mov    edx,ebx
  40d619:	mov    eax,edi
  40d61b:	call   0x409270
  40d620:	mov    edi,eax
  40d622:	test   edi,edi
  40d624:	jne    0x40d602
  40d626:	mov    eax,edi
  40d628:	pop    edi
  40d629:	pop    esi
  40d62a:	pop    ebx
  40d62b:	ret    
  40d62c:	push   ebp
  40d62d:	mov    ebp,esp
  40d62f:	push   ecx
  40d630:	push   ebx
  40d631:	push   esi
  40d632:	push   edi
  40d633:	mov    edi,DWORD PTR [ebp+0x8]
  40d636:	add    edi,0xffffffec
  40d639:	push   edi
  40d63a:	push   0x0
  40d63c:	call   0x4071e8
  40d641:	xor    esi,esi
  40d643:	jmp    0x40d66f
  40d645:	movzx  eax,BYTE PTR [edi+esi*1+0x6]
  40d64a:	movzx  ebx,BYTE PTR [edi+esi*1+0x7]
  40d64f:	sub    bl,al
  40d651:	jb     0x40d66c
  40d653:	inc    ebx
  40d654:	mov    BYTE PTR [ebp-0x1],al
  40d657:	movzx  eax,BYTE PTR [ebp-0x1]
  40d65b:	movzx  eax,al
  40d65e:	bts    DWORD PTR ds:0x461808,eax
  40d665:	inc    BYTE PTR [ebp-0x1]
  40d668:	dec    bl
  40d66a:	jne    0x40d657
  40d66c:	add    esi,0x2
  40d66f:	cmp    esi,0xc
  40d672:	jge    0x40d67f
  40d674:	movzx  eax,BYTE PTR [edi+esi*1+0x6]
  40d679:	or     al,BYTE PTR [edi+esi*1+0x7]
  40d67d:	jne    0x40d645
  40d67f:	pop    edi
  40d680:	pop    esi
  40d681:	pop    ebx
  40d682:	pop    ecx
  40d683:	pop    ebp
  40d684:	ret    
  40d685:	lea    eax,[eax+0x0]
  40d688:	push   ebp
  40d689:	mov    ebp,esp
  40d68b:	add    esp,0xffffffec
  40d68e:	push   ebx
  40d68f:	push   esi
  40d690:	push   edi
  40d691:	mov    esi,0x4708c0
  40d696:	mov    DWORD PTR [esi],0x409
  40d69c:	mov    DWORD PTR [esi+0x4],0x9
  40d6a3:	mov    DWORD PTR [esi+0x8],0x1
  40d6aa:	call   0x407278
  40d6af:	test   eax,eax
  40d6b1:	je     0x40d6b5
  40d6b3:	mov    DWORD PTR [esi],eax
  40d6b5:	test   ax,ax
  40d6b8:	je     0x40d6d0
  40d6ba:	mov    edx,eax
  40d6bc:	and    dx,0x3ff
  40d6c1:	movzx  edx,dx
  40d6c4:	mov    DWORD PTR [esi+0x4],edx
  40d6c7:	movzx  eax,ax
  40d6ca:	shr    eax,0xa
  40d6cd:	mov    DWORD PTR [esi+0x8],eax
  40d6d0:	push   esi
  40d6d1:	mov    esi,0x40d72c
  40d6d6:	mov    edi,0x461808
  40d6db:	mov    ecx,0x8
  40d6e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e2:	pop    esi
  40d6e3:	cmp    DWORD PTR ds:0x4617c4,0x4
  40d6ea:	jle    0x40d6fb
  40d6ec:	cmp    DWORD PTR ds:0x4617c0,0x2
  40d6f3:	jne    0x40d6fb
  40d6f5:	mov    BYTE PTR [esi+0xd],0x1
  40d6f9:	jmp    0x40d70a
  40d6fb:	push   0x4a
  40d6fd:	call   0x407340
  40d702:	test   eax,eax
  40d704:	setne  al
  40d707:	mov    BYTE PTR [esi+0xd],al
  40d70a:	push   0x2a
  40d70c:	call   0x407340
  40d711:	test   eax,eax
  40d713:	setne  bl
  40d716:	mov    BYTE PTR [esi+0xc],bl
  40d719:	test   bl,bl
  40d71b:	je     0x40d724
  40d71d:	push   ebp
  40d71e:	call   0x40d62c
  40d723:	pop    ecx
  40d724:	pop    edi
  40d725:	pop    esi
  40d726:	pop    ebx
  40d727:	mov    esp,ebp
  40d729:	pop    ebp
  40d72a:	ret    
	...
  40d74b:	add    BYTE PTR [ebp-0x75],dl
  40d74e:	in     al,dx
  40d74f:	mov    ecx,0x8
  40d754:	push   0x0
  40d756:	push   0x0
  40d758:	dec    ecx
  40d759:	jne    0x40d754
  40d75b:	push   ebx
  40d75c:	xor    eax,eax
  40d75e:	push   ebp
  40d75f:	push   0x40da17
  40d764:	push   DWORD PTR fs:[eax]
  40d767:	mov    DWORD PTR fs:[eax],esp
  40d76a:	call   0x40d688
  40d76f:	call   0x40c1a0
  40d774:	cmp    BYTE PTR ds:0x4708cc,0x0
  40d77b:	je     0x40d782
  40d77d:	call   0x40c378
  40d782:	call   0x407278
  40d787:	mov    ebx,eax
  40d789:	lea    eax,[ebp-0x10]
  40d78c:	push   eax
  40d78d:	xor    ecx,ecx
  40d78f:	mov    edx,0x14
  40d794:	mov    eax,ebx
  40d796:	call   0x40c0ec
  40d79b:	mov    edx,DWORD PTR [ebp-0x10]
  40d79e:	mov    eax,0x470800
  40d7a3:	call   0x404fdc
  40d7a8:	lea    eax,[ebp-0x14]
  40d7ab:	push   eax
  40d7ac:	mov    ecx,0x40da2c
  40d7b1:	mov    edx,0x1b
  40d7b6:	mov    eax,ebx
  40d7b8:	call   0x40c0ec
  40d7bd:	mov    eax,DWORD PTR [ebp-0x14]
  40d7c0:	xor    edx,edx
  40d7c2:	call   0x408b64
  40d7c7:	mov    ds:0x470804,al
  40d7cc:	lea    eax,[ebp-0x18]
  40d7cf:	push   eax
  40d7d0:	mov    ecx,0x40da2c
  40d7d5:	mov    edx,0x1c
  40d7da:	mov    eax,ebx
  40d7dc:	call   0x40c0ec
  40d7e1:	mov    eax,DWORD PTR [ebp-0x18]
  40d7e4:	xor    edx,edx
  40d7e6:	call   0x408b64
  40d7eb:	mov    ds:0x470805,al
  40d7f0:	mov    cl,0x2c
  40d7f2:	mov    edx,0xf
  40d7f7:	mov    eax,ebx
  40d7f9:	call   0x40c138
  40d7fe:	mov    ds:0x470806,al
  40d803:	mov    cl,0x2e
  40d805:	mov    edx,0xe
  40d80a:	mov    eax,ebx
  40d80c:	call   0x40c138
  40d811:	mov    ds:0x470807,al
  40d816:	lea    eax,[ebp-0x1c]
  40d819:	push   eax
  40d81a:	mov    ecx,0x40da2c
  40d81f:	mov    edx,0x19
  40d824:	mov    eax,ebx
  40d826:	call   0x40c0ec
  40d82b:	mov    eax,DWORD PTR [ebp-0x1c]
  40d82e:	xor    edx,edx
  40d830:	call   0x408b64
  40d835:	mov    ds:0x470808,al
  40d83a:	mov    cl,0x2f
  40d83c:	mov    edx,0x1d
  40d841:	mov    eax,ebx
  40d843:	call   0x40c138
  40d848:	mov    ds:0x470809,al
  40d84d:	lea    eax,[ebp-0x24]
  40d850:	push   eax
  40d851:	mov    ecx,0x40da38
  40d856:	mov    edx,0x1f
  40d85b:	mov    eax,ebx
  40d85d:	call   0x40c0ec
  40d862:	mov    eax,DWORD PTR [ebp-0x24]
  40d865:	lea    edx,[ebp-0x20]
  40d868:	call   0x40c428
  40d86d:	mov    edx,DWORD PTR [ebp-0x20]
  40d870:	mov    eax,0x47080c
  40d875:	call   0x404fdc
  40d87a:	lea    eax,[ebp-0x2c]
  40d87d:	push   eax
  40d87e:	mov    ecx,0x40da48
  40d883:	mov    edx,0x20
  40d888:	mov    eax,ebx
  40d88a:	call   0x40c0ec
  40d88f:	mov    eax,DWORD PTR [ebp-0x2c]
  40d892:	lea    edx,[ebp-0x28]
  40d895:	call   0x40c428
  40d89a:	mov    edx,DWORD PTR [ebp-0x28]
  40d89d:	mov    eax,0x470810
  40d8a2:	call   0x404fdc
  40d8a7:	mov    cl,0x3a
  40d8a9:	mov    edx,0x1e
  40d8ae:	mov    eax,ebx
  40d8b0:	call   0x40c138
  40d8b5:	mov    ds:0x470814,al
  40d8ba:	lea    eax,[ebp-0x30]
  40d8bd:	push   eax
  40d8be:	mov    ecx,0x40da60
  40d8c3:	mov    edx,0x28
  40d8c8:	mov    eax,ebx
  40d8ca:	call   0x40c0ec
  40d8cf:	mov    edx,DWORD PTR [ebp-0x30]
  40d8d2:	mov    eax,0x470818
  40d8d7:	call   0x404fdc
  40d8dc:	lea    eax,[ebp-0x34]
  40d8df:	push   eax
  40d8e0:	mov    ecx,0x40da6c
  40d8e5:	mov    edx,0x29
  40d8ea:	mov    eax,ebx
  40d8ec:	call   0x40c0ec
  40d8f1:	mov    edx,DWORD PTR [ebp-0x34]
  40d8f4:	mov    eax,0x47081c
  40d8f9:	call   0x404fdc
  40d8fe:	lea    eax,[ebp-0x8]
  40d901:	call   0x404f88
  40d906:	lea    eax,[ebp-0xc]
  40d909:	call   0x404f88
  40d90e:	lea    eax,[ebp-0x38]
  40d911:	push   eax
  40d912:	mov    ecx,0x40da2c
  40d917:	mov    edx,0x25
  40d91c:	mov    eax,ebx
  40d91e:	call   0x40c0ec
  40d923:	mov    eax,DWORD PTR [ebp-0x38]
  40d926:	xor    edx,edx
  40d928:	call   0x408b64
  40d92d:	test   eax,eax
  40d92f:	jne    0x40d940
  40d931:	lea    eax,[ebp-0x4]
  40d934:	mov    edx,0x40da78
  40d939:	call   0x405020
  40d93e:	jmp    0x40d94d
  40d940:	lea    eax,[ebp-0x4]
  40d943:	mov    edx,0x40da84
  40d948:	call   0x405020
  40d94d:	lea    eax,[ebp-0x3c]
  40d950:	push   eax
  40d951:	mov    ecx,0x40da2c
  40d956:	mov    edx,0x23
  40d95b:	mov    eax,ebx
  40d95d:	call   0x40c0ec
  40d962:	mov    eax,DWORD PTR [ebp-0x3c]
  40d965:	xor    edx,edx
  40d967:	call   0x408b64
  40d96c:	test   eax,eax
  40d96e:	jne    0x40d9af
  40d970:	lea    eax,[ebp-0x40]
  40d973:	push   eax
  40d974:	mov    ecx,0x40da2c
  40d979:	mov    edx,0x1005
  40d97e:	mov    eax,ebx
  40d980:	call   0x40c0ec
  40d985:	mov    eax,DWORD PTR [ebp-0x40]
  40d988:	xor    edx,edx
  40d98a:	call   0x408b64
  40d98f:	test   eax,eax
  40d991:	jne    0x40d9a2
  40d993:	lea    eax,[ebp-0xc]
  40d996:	mov    edx,0x40da90
  40d99b:	call   0x405020
  40d9a0:	jmp    0x40d9af
  40d9a2:	lea    eax,[ebp-0x8]
  40d9a5:	mov    edx,0x40daa0
  40d9aa:	call   0x405020
  40d9af:	push   DWORD PTR [ebp-0x8]
  40d9b2:	push   DWORD PTR [ebp-0x4]
  40d9b5:	push   0x40dab0
  40d9ba:	push   DWORD PTR [ebp-0xc]
  40d9bd:	mov    eax,0x470820
  40d9c2:	mov    edx,0x4
  40d9c7:	call   0x40531c
  40d9cc:	push   DWORD PTR [ebp-0x8]
  40d9cf:	push   DWORD PTR [ebp-0x4]
  40d9d2:	push   0x40dabc
  40d9d7:	push   DWORD PTR [ebp-0xc]
  40d9da:	mov    eax,0x470824
  40d9df:	mov    edx,0x4
  40d9e4:	call   0x40531c
  40d9e9:	mov    cl,0x2c
  40d9eb:	mov    edx,0xc
  40d9f0:	mov    eax,ebx
  40d9f2:	call   0x40c138
  40d9f7:	mov    ds:0x4708ce,al
  40d9fc:	xor    eax,eax
  40d9fe:	pop    edx
  40d9ff:	pop    ecx
  40da00:	pop    ecx
  40da01:	mov    DWORD PTR fs:[eax],edx
  40da04:	push   0x40da1e
  40da09:	lea    eax,[ebp-0x40]
  40da0c:	mov    edx,0x10
  40da11:	call   0x404fac
  40da16:	ret    
  40da17:	jmp    0x40481c
  40da1c:	jmp    0x40da09
  40da1e:	pop    ebx
  40da1f:	mov    esp,ebp
  40da21:	pop    ebp
  40da22:	ret    
  40da23:	add    bh,bh
  40da25:	(bad)  
  40da26:	(bad)  
  40da27:	inc    DWORD PTR [ecx]
  40da29:	add    BYTE PTR [eax],al
  40da2b:	add    BYTE PTR [eax],dh
  40da2d:	add    BYTE PTR [eax],al
  40da2f:	add    bh,bh
  40da31:	(bad)  
  40da32:	(bad)  
  40da33:	inc    DWORD PTR [esi]
  40da35:	add    BYTE PTR [eax],al
  40da37:	add    BYTE PTR [ebp+0x2f],ch
  40da3a:	fs das 
  40da3c:	jns    0x40dab7
  40da3e:	add    BYTE PTR [eax],al
  40da40:	(bad)  
  40da41:	(bad)  
  40da42:	(bad)  
  40da43:	dec    DWORD PTR [eax+eax*1]
  40da46:	add    BYTE PTR [eax],al
  40da48:	ins    DWORD PTR es:[edi],dx
  40da49:	ins    DWORD PTR es:[edi],dx
  40da4a:	ins    DWORD PTR es:[edi],dx
  40da4b:	ins    DWORD PTR es:[edi],dx
  40da4c:	and    BYTE PTR [esp+ebp*1+0x20],ah
  40da50:	jns    0x40dacb
  40da52:	jns    0x40dacd
  40da54:	add    BYTE PTR [eax],al
  40da56:	add    BYTE PTR [eax],al
  40da58:	(bad)  
  40da59:	(bad)  
  40da5a:	(bad)  
  40da5b:	inc    DWORD PTR [edx]
  40da5d:	add    BYTE PTR [eax],al
  40da5f:	add    BYTE PTR [ecx+0x6d],ah
  40da62:	add    BYTE PTR [eax],al
  40da64:	(bad)  
  40da65:	(bad)  
  40da66:	(bad)  
  40da67:	inc    DWORD PTR [edx]
  40da69:	add    BYTE PTR [eax],al
  40da6b:	add    BYTE PTR [eax+0x6d],dh
  40da6e:	add    BYTE PTR [eax],al
  40da70:	(bad)  
  40da71:	(bad)  
  40da72:	(bad)  
  40da73:	inc    DWORD PTR [ecx]
  40da75:	add    BYTE PTR [eax],al
  40da77:	add    BYTE PTR [eax+0x0],ch
  40da7a:	add    BYTE PTR [eax],al
  40da7c:	(bad)  
  40da7d:	(bad)  
  40da7e:	(bad)  
  40da7f:	inc    DWORD PTR [edx]
  40da81:	add    BYTE PTR [eax],al
  40da83:	add    BYTE PTR [eax+0x68],ch
  40da86:	add    BYTE PTR [eax],al
  40da88:	(bad)  
  40da89:	(bad)  
  40da8a:	(bad)  
  40da8b:	inc    DWORD PTR ds:0x20000000
  40da91:	inc    ecx
  40da92:	dec    ebp
  40da93:	push   eax
  40da94:	dec    ebp
  40da95:	add    BYTE PTR [eax],al
  40da97:	add    bh,bh
  40da99:	(bad)  
  40da9a:	(bad)  
  40da9b:	inc    DWORD PTR ds:0x41000000
  40daa1:	dec    ebp
  40daa2:	push   eax
  40daa3:	dec    ebp
  40daa4:	and    BYTE PTR [eax],al
  40daa6:	add    BYTE PTR [eax],al
  40daa8:	(bad)  
  40daa9:	(bad)  
  40daaa:	(bad)  
  40daab:	inc    DWORD PTR [ebx]
  40daad:	add    BYTE PTR [eax],al
  40daaf:	add    BYTE PTR [edx],bh
  40dab1:	ins    DWORD PTR es:[edi],dx
  40dab2:	ins    DWORD PTR es:[edi],dx
  40dab3:	add    bh,bh
  40dab5:	(bad)  
  40dab6:	(bad)  
  40dab7:	inc    DWORD PTR [esi]
  40dab9:	add    BYTE PTR [eax],al
  40dabb:	add    BYTE PTR [edx],bh
  40dabd:	ins    DWORD PTR es:[edi],dx
  40dabe:	ins    DWORD PTR es:[edi],dx
  40dabf:	cmp    dh,BYTE PTR [ebx+0x73]
  40dac2:	add    BYTE PTR [eax],al
  40dac4:	push   ebp
  40dac5:	mov    ebp,esp
  40dac7:	push   0x0
  40dac9:	push   0x0
  40dacb:	push   0x0
  40dacd:	push   0x0
  40dacf:	push   0x0
  40dad1:	push   0x0
  40dad3:	push   0x0
  40dad5:	push   ebx
  40dad6:	push   esi
  40dad7:	push   edi
  40dad8:	mov    DWORD PTR [ebp-0x14],ecx
  40dadb:	mov    DWORD PTR [ebp-0x10],edx
  40dade:	mov    ebx,eax
  40dae0:	mov    esi,DWORD PTR [ebp+0x8]
  40dae3:	xor    eax,eax
  40dae5:	push   ebp
  40dae6:	push   0x40dc0d
  40daeb:	push   DWORD PTR fs:[eax]
  40daee:	mov    DWORD PTR fs:[eax],esp
  40daf1:	test   BYTE PTR [ebp+0xc],0x2
  40daf5:	je     0x40db0e
  40daf7:	lea    edx,[ebp-0x4]
  40dafa:	mov    eax,ebx
  40dafc:	call   0x40868c
  40db01:	lea    edx,[ebp-0x8]
  40db04:	mov    eax,DWORD PTR [ebp-0x10]
  40db07:	call   0x40868c
  40db0c:	jmp    0x40db23
  40db0e:	lea    eax,[ebp-0x4]
  40db11:	mov    edx,ebx
  40db13:	call   0x405020
  40db18:	lea    eax,[ebp-0x8]
  40db1b:	mov    edx,DWORD PTR [ebp-0x10]
  40db1e:	call   0x405020
  40db23:	lea    eax,[ebp-0xc]
  40db26:	mov    edx,ebx
  40db28:	call   0x405020
  40db2d:	mov    eax,esi
  40db2f:	call   0x404f88
  40db34:	jmp    0x40dbe0
  40db39:	mov    edx,DWORD PTR [ebp-0x4]
  40db3c:	mov    eax,DWORD PTR [ebp-0x8]
  40db3f:	call   0x40d4e0
  40db44:	mov    ebx,eax
  40db46:	test   ebx,ebx
  40db48:	jne    0x40db59
  40db4a:	mov    eax,esi
  40db4c:	mov    edx,DWORD PTR [ebp-0xc]
  40db4f:	call   0x405254
  40db54:	jmp    0x40dbea
  40db59:	push   DWORD PTR [esi]
  40db5b:	lea    eax,[ebp-0x1c]
  40db5e:	push   eax
  40db5f:	mov    ecx,ebx
  40db61:	dec    ecx
  40db62:	mov    edx,0x1
  40db67:	mov    eax,DWORD PTR [ebp-0xc]
  40db6a:	call   0x405480
  40db6f:	push   DWORD PTR [ebp-0x1c]
  40db72:	push   DWORD PTR [ebp-0x14]
  40db75:	mov    eax,esi
  40db77:	mov    edx,0x3
  40db7c:	call   0x40531c
  40db81:	mov    edi,DWORD PTR [ebp-0x10]
  40db84:	test   edi,edi
  40db86:	je     0x40db8d
  40db88:	sub    edi,0x4
  40db8b:	mov    edi,DWORD PTR [edi]
  40db8d:	lea    eax,[ebp-0xc]
  40db90:	push   eax
  40db91:	lea    edx,[edi+ebx*1]
  40db94:	mov    ecx,0x7fffffff
  40db99:	mov    eax,DWORD PTR [ebp-0xc]
  40db9c:	call   0x405480
  40dba1:	test   BYTE PTR [ebp+0xc],0x1
  40dba5:	jne    0x40dbb3
  40dba7:	mov    eax,esi
  40dba9:	mov    edx,DWORD PTR [ebp-0xc]
  40dbac:	call   0x405254
  40dbb1:	jmp    0x40dbea
  40dbb3:	mov    eax,DWORD PTR [ebp-0x8]
  40dbb6:	mov    DWORD PTR [ebp-0x18],eax
  40dbb9:	cmp    DWORD PTR [ebp-0x18],0x0
  40dbbd:	je     0x40dbca
  40dbbf:	mov    eax,DWORD PTR [ebp-0x18]
  40dbc2:	sub    eax,0x4
  40dbc5:	mov    eax,DWORD PTR [eax]
  40dbc7:	mov    DWORD PTR [ebp-0x18],eax
  40dbca:	lea    eax,[ebp-0x4]
  40dbcd:	push   eax
  40dbce:	mov    edx,DWORD PTR [ebp-0x18]
  40dbd1:	add    edx,ebx
  40dbd3:	mov    ecx,0x7fffffff
  40dbd8:	mov    eax,DWORD PTR [ebp-0x4]
  40dbdb:	call   0x405480
  40dbe0:	cmp    DWORD PTR [ebp-0x4],0x0
  40dbe4:	jne    0x40db39
  40dbea:	xor    eax,eax
  40dbec:	pop    edx
  40dbed:	pop    ecx
  40dbee:	pop    ecx
  40dbef:	mov    DWORD PTR fs:[eax],edx
  40dbf2:	push   0x40dc14
  40dbf7:	lea    eax,[ebp-0x1c]
  40dbfa:	call   0x404f88
  40dbff:	lea    eax,[ebp-0xc]
  40dc02:	mov    edx,0x3
  40dc07:	call   0x404fac
  40dc0c:	ret    
  40dc0d:	jmp    0x40481c
  40dc12:	jmp    0x40dbf7
  40dc14:	pop    edi
  40dc15:	pop    esi
  40dc16:	pop    ebx
  40dc17:	mov    esp,ebp
  40dc19:	pop    ebp
  40dc1a:	ret    0x8
  40dc1d:	lea    eax,[eax+0x0]
  40dc20:	and    al,0xdc
  40dc22:	inc    eax
  40dc23:	add    BYTE PTR [ecx],dl
  40dc25:	push   cs
  40dc26:	push   esp
  40dc27:	push   ebp
  40dc28:	outs   dx,BYTE PTR ds:[esi]
  40dc29:	imul   esi,DWORD PTR [eax+ecx*2+0x61],0x72416873
  40dc31:	jb     0x40dc94
  40dc33:	jns    0x40dc4d
  40dc35:	add    BYTE PTR [eax],al
  40dc37:	add    BYTE PTR [eax],al
  40dc39:	add    BYTE PTR [eax],al
  40dc3b:	add    bh,bh
  40dc3d:	(bad)  
  40dc3e:	(bad)  
  40dc3f:	inc    DWORD PTR [eax]
  40dc41:	add    BYTE PTR [eax],al
  40dc43:	add    BYTE PTR [eax],cl
  40dc45:	push   ebx
  40dc46:	jns    0x40dcbb
  40dc48:	push   ebp
  40dc49:	je     0x40dcb4
  40dc4b:	ins    BYTE PTR es:[edi],dx
  40dc4c:	jae    0x40dbdb
  40dc4e:	inc    eax
  40dc4f:	add    BYTE PTR [esp+ebx*8+0x40],dl
  40dc53:	add    BYTE PTR [esi],cl
  40dc55:	or     edx,DWORD PTR [ebp+ecx*2+0x6f]
  40dc59:	fs jne 0x40dcc8
  40dc5c:	gs dec ecx
  40dc5e:	outs   dx,BYTE PTR ds:[esi]
  40dc5f:	outs   dx,WORD PTR ds:[esi]
  40dc61:	or     BYTE PTR [eax],al
  40dc63:	add    BYTE PTR [eax],al
  40dc65:	add    DWORD PTR [eax],eax
  40dc67:	add    BYTE PTR [eax],al
  40dc69:	and    ah,bl
  40dc6b:	inc    eax
  40dc6c:	add    BYTE PTR [eax+eax*1],al
  40dc6f:	add    BYTE PTR [eax],al
  40dc71:	lea    eax,[eax+0x0]
  40dc74:	push   esi
  40dc75:	push   ebx
  40dc76:	mov    esi,eax
  40dc78:	xor    eax,eax
  40dc7a:	rol    eax,0x5
  40dc7d:	mov    bl,BYTE PTR [esi]
  40dc7f:	cmp    bl,0x0
  40dc82:	je     0x40dc96
  40dc84:	cmp    bl,0x41
  40dc87:	jl     0x40dc91
  40dc89:	cmp    bl,0x5a
  40dc8c:	jg     0x40dc91
  40dc8e:	or     bl,0x20
  40dc91:	xor    al,bl
  40dc93:	inc    esi
  40dc94:	jmp    0x40dc7a
  40dc96:	pop    ebx
  40dc97:	pop    esi
  40dc98:	ret    
  40dc99:	ret    
  40dc9a:	mov    eax,eax
  40dc9c:	push   ebx
  40dc9d:	push   esi
  40dc9e:	push   edi
  40dc9f:	push   ebp
  40dca0:	add    esp,0xfffffff4
  40dca3:	mov    edx,DWORD PTR ds:0x46dde8
  40dca9:	mov    edx,DWORD PTR [edx]
  40dcab:	test   edx,edx
  40dcad:	je     0x40dcba
  40dcaf:	cmp    eax,DWORD PTR [edx+0x4]
  40dcb2:	je     0x40dcba
  40dcb4:	mov    edx,DWORD PTR [edx]
  40dcb6:	test   edx,edx
  40dcb8:	jne    0x40dcaf
  40dcba:	mov    DWORD PTR [esp],edx
  40dcbd:	cmp    DWORD PTR [esp],0x0
  40dcc1:	je     0x40ddac
  40dcc7:	mov    eax,DWORD PTR [esp]
  40dcca:	cmp    DWORD PTR [eax+0x14],0x0
  40dcce:	je     0x40ddac
  40dcd4:	mov    eax,DWORD PTR [esp]
  40dcd7:	mov    ebx,DWORD PTR [eax+0x14]
  40dcda:	cmp    BYTE PTR [ebx],0x0
  40dcdd:	je     0x40dce9
  40dcdf:	mov    DWORD PTR [esp+0x8],0x47091c
  40dce7:	jmp    0x40dcf1
  40dce9:	mov    DWORD PTR [esp+0x8],0x471910
  40dcf1:	mov    eax,DWORD PTR [ebx+0x4]
  40dcf4:	call   0x4061fc
  40dcf9:	mov    ebp,eax
  40dcfb:	test   ebp,ebp
  40dcfd:	jl     0x40dd97
  40dd03:	inc    ebp
  40dd04:	xor    esi,esi
  40dd06:	lea    edi,[esi+esi*2]
  40dd09:	mov    eax,DWORD PTR [ebx+0x4]
  40dd0c:	cmp    DWORD PTR [eax+edi*8+0x4],0x0
  40dd11:	je     0x40dd27
  40dd13:	mov    eax,DWORD PTR [ebx+0x4]
  40dd16:	mov    eax,DWORD PTR [eax+edi*8]
  40dd19:	lea    edx,[esi+esi*2]
  40dd1c:	mov    ecx,DWORD PTR [ebx+0x4]
  40dd1f:	mov    edx,DWORD PTR [ecx+edx*8+0x4]
  40dd23:	mov    DWORD PTR [edx],eax
  40dd25:	jmp    0x40dd73
  40dd27:	mov    eax,DWORD PTR [ebx+0x4]
  40dd2a:	cmp    DWORD PTR [eax+edi*8+0xc],0x0
  40dd2f:	je     0x40dd73
  40dd31:	lea    eax,[esi+esi*2]
  40dd34:	mov    edx,DWORD PTR [ebx+0x4]
  40dd37:	mov    eax,DWORD PTR [edx+eax*8+0xc]
  40dd3b:	call   0x40dc74
  40dd40:	mov    ecx,0x3fd
  40dd45:	xor    edx,edx
  40dd47:	div    ecx
  40dd49:	mov    DWORD PTR [esp+0x4],edx
  40dd4d:	mov    eax,DWORD PTR [esp+0x8]
  40dd51:	mov    edx,DWORD PTR [esp+0x4]
  40dd55:	mov    eax,DWORD PTR [eax+edx*4]
  40dd58:	mov    edx,DWORD PTR [ebx+0x4]
  40dd5b:	lea    edx,[edx+edi*8]
  40dd5e:	cmp    eax,edx
  40dd60:	jne    0x40dd73
  40dd62:	mov    eax,DWORD PTR [ebx+0x4]
  40dd65:	mov    eax,DWORD PTR [eax+edi*8]
  40dd68:	mov    edx,DWORD PTR [esp+0x8]
  40dd6c:	mov    ecx,DWORD PTR [esp+0x4]
  40dd70:	mov    DWORD PTR [edx+ecx*4],eax
  40dd73:	mov    eax,DWORD PTR [ebx+0x4]
  40dd76:	cmp    DWORD PTR [eax+edi*8],0x0
  40dd7a:	je     0x40dd8f
  40dd7c:	mov    eax,DWORD PTR [ebx+0x4]
  40dd7f:	mov    eax,DWORD PTR [eax+edi*8+0x4]
  40dd83:	lea    edx,[esi+esi*2]
  40dd86:	mov    ecx,DWORD PTR [ebx+0x4]
  40dd89:	mov    edx,DWORD PTR [ecx+edx*8]
  40dd8c:	mov    DWORD PTR [edx+0x4],eax
  40dd8f:	inc    esi
  40dd90:	dec    ebp
  40dd91:	jne    0x40dd06
  40dd97:	mov    edx,DWORD PTR ds:0x40dc50
  40dd9d:	mov    eax,ebx
  40dd9f:	call   0x405f7c
  40dda4:	mov    eax,DWORD PTR [esp]
  40dda7:	xor    edx,edx
  40dda9:	mov    DWORD PTR [eax+0x14],edx
  40ddac:	add    esp,0xc
  40ddaf:	pop    ebp
  40ddb0:	pop    edi
  40ddb1:	pop    esi
  40ddb2:	pop    ebx
  40ddb3:	ret    
  40ddb4:	jmp    DWORD PTR ds:0x479590
  40ddba:	mov    eax,eax
  40ddbc:	call   0x407230
  40ddc1:	call   0x40ddc8
  40ddc6:	ret    
  40ddc7:	nop
  40ddc8:	push   ebp
  40ddc9:	mov    ebp,esp
  40ddcb:	add    esp,0xffffffec
  40ddce:	push   ebx
  40ddcf:	xor    edx,edx
  40ddd1:	mov    DWORD PTR [ebp-0x14],edx
  40ddd4:	mov    ebx,eax
  40ddd6:	xor    eax,eax
  40ddd8:	push   ebp
  40ddd9:	push   0x40de53
  40ddde:	push   DWORD PTR fs:[eax]
  40dde1:	mov    DWORD PTR fs:[eax],esp
  40dde4:	test   ebx,ebx
  40dde6:	je     0x40de1f
  40dde8:	mov    DWORD PTR [ebp-0x10],ebx
  40ddeb:	mov    BYTE PTR [ebp-0xc],0x0
  40ddef:	lea    edx,[ebp-0x14]
  40ddf2:	mov    eax,ebx
  40ddf4:	call   0x40c0a0
  40ddf9:	mov    eax,DWORD PTR [ebp-0x14]
  40ddfc:	mov    DWORD PTR [ebp-0x8],eax
  40ddff:	mov    BYTE PTR [ebp-0x4],0xb
  40de03:	lea    eax,[ebp-0x10]
  40de06:	push   eax
  40de07:	push   0x1
  40de09:	mov    ecx,DWORD PTR ds:0x46dd5c
  40de0f:	mov    dl,0x1
  40de11:	mov    eax,ds:0x408034
  40de16:	call   0x40c9ac
  40de1b:	mov    edx,eax
  40de1d:	jmp    0x40de33
  40de1f:	mov    ecx,DWORD PTR ds:0x46de4c
  40de25:	mov    dl,0x1
  40de27:	mov    eax,ds:0x408034
  40de2c:	call   0x40c970
  40de31:	mov    edx,eax
  40de33:	mov    DWORD PTR [edx+0xc],ebx
  40de36:	mov    eax,edx
  40de38:	call   0x4048fc
  40de3d:	xor    eax,eax
  40de3f:	pop    edx
  40de40:	pop    ecx
  40de41:	pop    ecx
  40de42:	mov    DWORD PTR fs:[eax],edx
  40de45:	push   0x40de5a
  40de4a:	lea    eax,[ebp-0x14]
  40de4d:	call   0x404f88
  40de52:	ret    
  40de53:	jmp    0x40481c
  40de58:	jmp    0x40de4a
  40de5a:	pop    ebx
  40de5b:	mov    esp,ebp
  40de5d:	pop    ebp
  40de5e:	ret    
  40de5f:	nop
  40de60:	push   ebx
  40de61:	mov    ebx,eax
  40de63:	test   ebx,ebx
  40de65:	jne    0x40de6c
  40de67:	call   0x40ddbc
  40de6c:	mov    eax,ebx
  40de6e:	pop    ebx
  40de6f:	ret    
  40de70:	push   ebx
  40de71:	push   esi
  40de72:	mov    esi,0x461a00
  40de77:	jmp    0x40de8b
  40de79:	mov    ebx,DWORD PTR [esi]
  40de7b:	mov    eax,DWORD PTR [ebx]
  40de7d:	mov    DWORD PTR [esi],eax
  40de7f:	mov    edx,0x8
  40de84:	mov    eax,ebx
  40de86:	call   0x402ebc
  40de8b:	cmp    DWORD PTR [esi],0x0
  40de8e:	jne    0x40de79
  40de90:	pop    esi
  40de91:	pop    ebx
  40de92:	ret    
  40de93:	nop
  40de94:	push   ebx
  40de95:	push   0x40decc
  40de9a:	call   0x407258
  40de9f:	mov    ebx,eax
  40dea1:	test   ebx,ebx
  40dea3:	je     0x40deb5
  40dea5:	push   0x40dedc
  40deaa:	push   ebx
  40deab:	call   0x407260
  40deb0:	mov    ds:0x46182c,eax
  40deb5:	cmp    DWORD PTR ds:0x46182c,0x0
  40debc:	jne    0x40dec8
  40debe:	mov    eax,0x409114
  40dec3:	mov    ds:0x46182c,eax
  40dec8:	pop    ebx
  40dec9:	ret    
  40deca:	add    BYTE PTR [eax],al
  40decc:	imul   esp,DWORD PTR [ebp+0x72],0x6e
  40ded0:	gs ins BYTE PTR es:[edi],dx
  40ded2:	xor    esi,DWORD PTR [edx]
  40ded4:	cs fs ins BYTE PTR es:[edi],dx
  40ded7:	ins    BYTE PTR es:[edi],dx
  40ded8:	add    BYTE PTR [eax],al
  40deda:	add    BYTE PTR [eax],al
  40dedc:	inc    edi
  40dedd:	gs je  0x40df24
  40dee0:	imul   esi,DWORD PTR [ebx+0x6b],0x65657246
  40dee7:	push   ebx
  40dee8:	jo     0x40df4b
  40deea:	arpl   WORD PTR [ebp+0x45],sp
  40deed:	js     0x40df30
  40deef:	add    BYTE PTR [edx+0x1],bh
  40def5:	xchg   edx,eax
  40def6:	lock xadd DWORD PTR [edx],eax
  40defa:	inc    eax
  40defb:	ret    
  40defc:	mov    edx,0xffffffff
  40df01:	xchg   edx,eax
  40df02:	lock xadd DWORD PTR [edx],eax
  40df06:	dec    eax
  40df07:	ret    
  40df08:	xchg   DWORD PTR [eax],edx
  40df0a:	mov    eax,edx
  40df0c:	ret    
  40df0d:	lea    eax,[eax+0x0]
  40df10:	xchg   edx,eax
  40df11:	lock xadd DWORD PTR [edx],eax
  40df15:	ret    
  40df16:	mov    eax,eax
  40df18:	push   ebx
  40df19:	push   esi
  40df1a:	push   edi
  40df1b:	push   ebp
  40df1c:	push   ecx
  40df1d:	call   0x404454
  40df22:	mov    BYTE PTR [esp],dl
  40df25:	mov    ebp,eax
  40df27:	xor    edi,edi
  40df29:	mov    ebx,DWORD PTR [ebp+edi*4+0x4]
  40df2d:	xor    eax,eax
  40df2f:	mov    DWORD PTR [ebp+edi*4+0x4],eax
  40df33:	test   ebx,ebx
  40df35:	je     0x40df46
  40df37:	mov    esi,ebx
  40df39:	mov    ebx,DWORD PTR [ebx]
  40df3b:	mov    eax,esi
  40df3d:	call   0x402ebc
  40df42:	test   ebx,ebx
  40df44:	jne    0x40df37
  40df46:	inc    edi
  40df47:	cmp    edi,0x10
  40df4a:	jne    0x40df29
  40df4c:	movzx  edx,BYTE PTR [esp]
  40df50:	and    dl,0xfc
  40df53:	mov    eax,ebp
  40df55:	call   0x404090
  40df5a:	cmp    BYTE PTR [esp],0x0
  40df5e:	jle    0x40df67
  40df60:	mov    eax,ebp
  40df62:	call   0x4043fc
  40df67:	pop    edx
  40df68:	pop    ebp
  40df69:	pop    edi
  40df6a:	pop    esi
  40df6b:	pop    ebx
  40df6c:	ret    
  40df6d:	lea    eax,[eax+0x0]
  40df70:	push   ebp
  40df71:	mov    ebp,esp
  40df73:	push   ecx
  40df74:	call   0x4071f0
  40df79:	mov    WORD PTR [ebp-0x2],ax
  40df7d:	movzx  eax,BYTE PTR [ebp-0x2]
  40df81:	xor    al,BYTE PTR [ebp-0x1]
  40df84:	and    al,0xf
  40df86:	pop    ecx
  40df87:	pop    ebp
  40df88:	ret    
  40df89:	lea    eax,[eax+0x0]
  40df8c:	push   ebx
  40df8d:	push   esi
  40df8e:	push   edi
  40df8f:	push   ebp
  40df90:	push   ecx
  40df91:	mov    DWORD PTR [esp],edx
  40df94:	mov    edi,eax
  40df96:	mov    eax,edi
  40df98:	call   0x40df70
  40df9d:	mov    ebx,eax
  40df9f:	call   0x4071f0
  40dfa4:	mov    esi,eax
  40dfa6:	movzx  eax,bl
  40dfa9:	mov    ebp,DWORD PTR [edi+eax*4+0x4]
  40dfad:	jmp    0x40dfb2
  40dfaf:	mov    ebp,DWORD PTR [ebp+0x0]
  40dfb2:	test   ebp,ebp
  40dfb4:	je     0x40dfbb
  40dfb6:	cmp    esi,DWORD PTR [ebp+0x4]
  40dfb9:	jne    0x40dfaf
  40dfbb:	test   ebp,ebp
  40dfbd:	jne    0x40dff6
  40dfbf:	mov    eax,edi
  40dfc1:	call   0x40e014
  40dfc6:	mov    ebp,eax
  40dfc8:	test   ebp,ebp
  40dfca:	jne    0x40dff6
  40dfcc:	mov    eax,0x10
  40dfd1:	call   0x402e88
  40dfd6:	mov    ebp,eax
  40dfd8:	mov    DWORD PTR [ebp+0x4],esi
  40dfdb:	mov    DWORD PTR [ebp+0x8],0x7fffffff
  40dfe2:	mov    DWORD PTR [ebp+0x0],ebp
  40dfe5:	movzx  eax,bl
  40dfe8:	lea    eax,[edi+eax*4+0x4]
  40dfec:	mov    edx,ebp
  40dfee:	call   0x40df08
  40dff3:	mov    DWORD PTR [ebp+0x0],eax
  40dff6:	mov    eax,DWORD PTR [esp]
  40dff9:	mov    DWORD PTR [eax],ebp
  40dffb:	pop    edx
  40dffc:	pop    ebp
  40dffd:	pop    edi
  40dffe:	pop    esi
  40dfff:	pop    ebx
  40e000:	ret    
  40e001:	lea    eax,[eax+0x0]
  40e004:	mov    eax,DWORD PTR [edx]
  40e006:	xor    ecx,ecx
  40e008:	mov    DWORD PTR [eax+0x4],ecx
  40e00b:	mov    eax,DWORD PTR [edx]
  40e00d:	xor    edx,edx
  40e00f:	mov    DWORD PTR [eax+0x8],edx
  40e012:	ret    
  40e013:	nop
  40e014:	push   ebx
  40e015:	push   esi
  40e016:	mov    ebx,eax
  40e018:	mov    eax,ebx
  40e01a:	call   0x40df70
  40e01f:	movzx  eax,al
  40e022:	mov    ebx,DWORD PTR [ebx+eax*4+0x4]
  40e026:	test   ebx,ebx
  40e028:	je     0x40e051
  40e02a:	lea    eax,[ebx+0x8]
  40e02d:	mov    edx,0x7fffffff
  40e032:	call   0x40df08
  40e037:	mov    esi,eax
  40e039:	cmp    esi,0x7fffffff
  40e03f:	je     0x40e04b
  40e041:	call   0x4071f0
  40e046:	mov    DWORD PTR [ebx+0x4],eax
  40e049:	jmp    0x40e051
  40e04b:	mov    ebx,DWORD PTR [ebx]
  40e04d:	test   ebx,ebx
  40e04f:	jne    0x40e02a
  40e051:	mov    eax,ebx
  40e053:	pop    esi
  40e054:	pop    ebx
  40e055:	ret    
  40e056:	mov    eax,eax
  40e058:	push   ebx
  40e059:	push   esi
  40e05a:	test   dl,dl
  40e05c:	je     0x40e066
  40e05e:	add    esp,0xfffffff0
  40e061:	call   0x4043ac
  40e066:	mov    ebx,edx
  40e068:	mov    esi,eax
  40e06a:	xor    edx,edx
  40e06c:	mov    eax,esi
  40e06e:	call   0x404070
  40e073:	mov    DWORD PTR [esi+0xc],0xffff
  40e07a:	push   0x0
  40e07c:	push   0xffffffff
  40e07e:	push   0xffffffff
  40e080:	push   0x0
  40e082:	call   0x407160
  40e087:	mov    DWORD PTR [esi+0x10],eax
  40e08a:	push   0x0
  40e08c:	push   0x0
  40e08e:	push   0x0
  40e090:	push   0x0
  40e092:	call   0x407160
  40e097:	mov    DWORD PTR [esi+0x14],eax
  40e09a:	mov    DWORD PTR [esi+0x18],0xffffffff
  40e0a1:	mov    dl,0x1
  40e0a3:	mov    eax,ds:0x408218
  40e0a8:	call   0x404070
  40e0ad:	mov    DWORD PTR [esi+0x20],eax
  40e0b0:	mov    eax,esi
  40e0b2:	test   bl,bl
  40e0b4:	je     0x40e0c5
  40e0b6:	call   0x404404
  40e0bb:	pop    DWORD PTR fs:0x0
  40e0c2:	add    esp,0xc
  40e0c5:	mov    eax,esi
  40e0c7:	pop    esi
  40e0c8:	pop    ebx
  40e0c9:	ret    
  40e0ca:	mov    eax,eax
  40e0cc:	push   ebx
  40e0cd:	push   esi
  40e0ce:	call   0x404454
  40e0d3:	mov    ebx,edx
  40e0d5:	mov    esi,eax
  40e0d7:	mov    eax,esi
  40e0d9:	call   0x40e158
  40e0de:	mov    edx,ebx
  40e0e0:	and    dl,0xfc
  40e0e3:	mov    eax,esi
  40e0e5:	call   0x404090
  40e0ea:	mov    eax,DWORD PTR [esi+0x10]
  40e0ed:	push   eax
  40e0ee:	call   0x407140
  40e0f3:	mov    eax,DWORD PTR [esi+0x14]
  40e0f6:	push   eax
  40e0f7:	call   0x407140
  40e0fc:	mov    eax,DWORD PTR [esi+0x20]
  40e0ff:	call   0x4040a0
  40e104:	test   bl,bl
  40e106:	jle    0x40e10f
  40e108:	mov    eax,esi
  40e10a:	call   0x4043fc
  40e10f:	pop    esi
  40e110:	pop    ebx
  40e111:	ret    
  40e112:	mov    eax,eax
  40e114:	mov    eax,DWORD PTR [eax+0x10]
  40e117:	push   eax
  40e118:	call   0x4072d8
  40e11d:	ret    
  40e11e:	mov    eax,eax
  40e120:	mov    eax,DWORD PTR [eax+0x10]
  40e123:	push   eax
  40e124:	call   0x4072f8
  40e129:	ret    
  40e12a:	mov    eax,eax
  40e12c:	mov    eax,DWORD PTR [eax+0x14]
  40e12f:	push   eax
  40e130:	call   0x4072f8
  40e135:	ret    
  40e136:	mov    eax,eax
  40e138:	mov    edx,DWORD PTR [eax+0x18]
  40e13b:	push   edx
  40e13c:	mov    eax,DWORD PTR [eax+0x10]
  40e13f:	push   eax
  40e140:	call   0x407318
  40e145:	ret    
  40e146:	mov    eax,eax
  40e148:	mov    edx,DWORD PTR [eax+0x18]
  40e14b:	push   edx
  40e14c:	mov    eax,DWORD PTR [eax+0x14]
  40e14f:	push   eax
  40e150:	call   0x407318
  40e155:	ret    
  40e156:	mov    eax,eax
  40e158:	push   ebx
  40e159:	push   esi
  40e15a:	push   edi
  40e15b:	push   ebp
  40e15c:	add    esp,0xfffffff8
  40e15f:	mov    ebp,eax
  40e161:	mov    bl,0x1
  40e163:	call   0x4071f0
  40e168:	mov    edi,eax
  40e16a:	cmp    edi,DWORD PTR [ebp+0x24]
  40e16d:	je     0x40e1f7
  40e173:	mov    eax,ebp
  40e175:	call   0x40e114
  40e17a:	mov    eax,DWORD PTR [ebp+0x28]
  40e17d:	mov    DWORD PTR [esp+0x4],eax
  40e181:	mov    edx,esp
  40e183:	mov    eax,DWORD PTR [ebp+0x20]
  40e186:	call   0x40df8c
  40e18b:	mov    eax,DWORD PTR [esp]
  40e18e:	cmp    DWORD PTR [eax+0xc],0x0
  40e192:	seta   bl
  40e195:	test   bl,bl
  40e197:	je     0x40e1bd
  40e199:	lea    eax,[ebp+0xc]
  40e19c:	call   0x40def0
  40e1a1:	jmp    0x40e1bd
  40e1a3:	lea    eax,[ebp+0xc]
  40e1a6:	mov    edx,0xffff
  40e1ab:	call   0x40df10
  40e1b0:	mov    esi,eax
  40e1b2:	test   esi,esi
  40e1b4:	je     0x40e1bd
  40e1b6:	mov    eax,ebp
  40e1b8:	call   0x40e148
  40e1bd:	lea    eax,[ebp+0xc]
  40e1c0:	mov    edx,0xffff0001
  40e1c5:	call   0x40df10
  40e1ca:	cmp    eax,0xffff
  40e1cf:	jne    0x40e1a3
  40e1d1:	mov    eax,ebp
  40e1d3:	call   0x40e114
  40e1d8:	test   bl,bl
  40e1da:	je     0x40e1e4
  40e1dc:	lea    eax,[ebp+0xc]
  40e1df:	call   0x40defc
  40e1e4:	mov    DWORD PTR [ebp+0x24],edi
  40e1e7:	lea    eax,[ebp+0x28]
  40e1ea:	call   0x40def0
  40e1ef:	dec    eax
  40e1f0:	cmp    eax,DWORD PTR [esp+0x4]
  40e1f4:	sete   bl
  40e1f7:	inc    DWORD PTR [ebp+0x1c]
  40e1fa:	mov    eax,ebx
  40e1fc:	pop    ecx
  40e1fd:	pop    edx
  40e1fe:	pop    ebp
  40e1ff:	pop    edi
  40e200:	pop    esi
  40e201:	pop    ebx
  40e202:	ret    
  40e203:	nop
  40e204:	push   ebx
  40e205:	push   ecx
  40e206:	mov    ebx,eax
  40e208:	mov    edx,esp
  40e20a:	mov    eax,DWORD PTR [ebx+0x20]
  40e20d:	call   0x40df8c
  40e212:	dec    DWORD PTR [ebx+0x1c]
  40e215:	cmp    DWORD PTR [ebx+0x1c],0x0
  40e219:	jne    0x40e23b
  40e21b:	xor    eax,eax
  40e21d:	mov    DWORD PTR [ebx+0x24],eax
  40e220:	lea    eax,[ebx+0xc]
  40e223:	mov    edx,0xffff
  40e228:	call   0x40df10
  40e22d:	mov    eax,ebx
  40e22f:	call   0x40e12c
  40e234:	mov    eax,ebx
  40e236:	call   0x40e120
  40e23b:	mov    eax,DWORD PTR [esp]
  40e23e:	cmp    DWORD PTR [eax+0xc],0x0
  40e242:	jne    0x40e24e
  40e244:	mov    edx,esp
  40e246:	mov    eax,DWORD PTR [ebx+0x20]
  40e249:	call   0x40e004
  40e24e:	pop    edx
  40e24f:	pop    ebx
  40e250:	ret    
  40e251:	lea    eax,[eax+0x0]
  40e254:	push   ebx
  40e255:	push   esi
  40e256:	push   edi
  40e257:	push   ecx
  40e258:	mov    edi,eax
  40e25a:	mov    edx,esp
  40e25c:	mov    eax,DWORD PTR [edi+0x20]
  40e25f:	call   0x40df8c
  40e264:	mov    eax,DWORD PTR [esp]
  40e267:	inc    DWORD PTR [eax+0xc]
  40e26a:	mov    eax,DWORD PTR [esp]
  40e26d:	cmp    DWORD PTR [eax+0xc],0x1
  40e271:	seta   bl
  40e274:	call   0x4071f0
  40e279:	cmp    eax,DWORD PTR [edi+0x24]
  40e27c:	je     0x40e2be
  40e27e:	test   bl,bl
  40e280:	jne    0x40e2be
  40e282:	mov    eax,edi
  40e284:	call   0x40e138
  40e289:	jmp    0x40e2b2
  40e28b:	lea    eax,[edi+0xc]
  40e28e:	call   0x40def0
  40e293:	mov    esi,eax
  40e295:	cmp    esi,0xffff
  40e29b:	jne    0x40e2a4
  40e29d:	mov    eax,edi
  40e29f:	call   0x40e12c
  40e2a4:	push   0x0
  40e2a6:	call   0x40ddb4
  40e2ab:	mov    eax,edi
  40e2ad:	call   0x40e138
  40e2b2:	lea    eax,[edi+0xc]
  40e2b5:	call   0x40defc
  40e2ba:	test   eax,eax
  40e2bc:	jle    0x40e28b
  40e2be:	pop    edx
  40e2bf:	pop    edi
  40e2c0:	pop    esi
  40e2c1:	pop    ebx
  40e2c2:	ret    
  40e2c3:	nop
  40e2c4:	push   ebx
  40e2c5:	push   ecx
  40e2c6:	mov    ebx,eax
  40e2c8:	mov    edx,esp
  40e2ca:	mov    eax,DWORD PTR [ebx+0x20]
  40e2cd:	call   0x40df8c
  40e2d2:	mov    eax,DWORD PTR [esp]
  40e2d5:	dec    DWORD PTR [eax+0xc]
  40e2d8:	mov    eax,DWORD PTR [esp]
  40e2db:	cmp    DWORD PTR [eax+0xc],0x0
  40e2df:	jne    0x40e329
  40e2e1:	mov    edx,esp
  40e2e3:	mov    eax,DWORD PTR [ebx+0x20]
  40e2e6:	call   0x40e004
  40e2eb:	call   0x4071f0
  40e2f0:	cmp    eax,DWORD PTR [ebx+0x24]
  40e2f3:	je     0x40e329
  40e2f5:	lea    eax,[ebx+0xc]
  40e2f8:	call   0x40def0
  40e2fd:	mov    ecx,eax
  40e2ff:	cmp    ecx,0xffff
  40e305:	jne    0x40e310
  40e307:	mov    eax,ebx
  40e309:	call   0x40e12c
  40e30e:	jmp    0x40e329
  40e310:	test   ecx,ecx
  40e312:	jg     0x40e329
  40e314:	mov    eax,ecx
  40e316:	mov    ecx,0xffff
  40e31b:	cdq    
  40e31c:	idiv   ecx
  40e31e:	test   edx,edx
  40e320:	jne    0x40e329
  40e322:	mov    eax,ebx
  40e324:	call   0x40e12c
  40e329:	pop    edx
  40e32a:	pop    ebx
  40e32b:	ret    
  40e32c:	mov    edx,DWORD PTR [eax]
  40e32e:	xor    ecx,ecx
  40e330:	mov    DWORD PTR [eax],ecx
  40e332:	mov    eax,edx
  40e334:	call   0x4040a0
  40e339:	ret    
  40e33a:	mov    eax,eax
  40e33c:	push   ebx
  40e33d:	push   esi
  40e33e:	push   edi
  40e33f:	mov    edi,ecx
  40e341:	mov    esi,edx
  40e343:	mov    ebx,eax
  40e345:	test   ebx,ebx
  40e347:	je     0x40e354
  40e349:	push   edi
  40e34a:	push   esi
  40e34b:	push   ebx
  40e34c:	mov    eax,DWORD PTR [ebx]
  40e34e:	call   DWORD PTR [eax]
  40e350:	test   eax,eax
  40e352:	je     0x40e358
  40e354:	xor    eax,eax
  40e356:	jmp    0x40e35a
  40e358:	mov    al,0x1
  40e35a:	pop    edi
  40e35b:	pop    esi
  40e35c:	pop    ebx
  40e35d:	ret    
  40e35e:	mov    eax,eax
  40e360:	push   ebp
  40e361:	mov    ebp,esp
  40e363:	push   0x0
  40e365:	push   ebx
  40e366:	push   esi
  40e367:	push   edi
  40e368:	mov    edi,ecx
  40e36a:	mov    esi,edx
  40e36c:	mov    ebx,eax
  40e36e:	xor    eax,eax
  40e370:	push   ebp
  40e371:	push   0x40e3d7
  40e376:	push   DWORD PTR fs:[eax]
  40e379:	mov    DWORD PTR fs:[eax],esp
  40e37c:	test   ebx,ebx
  40e37e:	je     0x40e3b9
  40e380:	lea    eax,[ebp-0x4]
  40e383:	call   0x406a98
  40e388:	mov    ecx,eax
  40e38a:	mov    edx,0x40e3e8
  40e38f:	mov    eax,ebx
  40e391:	call   0x404154
  40e396:	test   al,al
  40e398:	je     0x40e3aa
  40e39a:	mov    ecx,edi
  40e39c:	mov    edx,esi
  40e39e:	mov    eax,DWORD PTR [ebp-0x4]
  40e3a1:	call   0x40e33c
  40e3a6:	test   al,al
  40e3a8:	jne    0x40e3bd
  40e3aa:	mov    ecx,edi
  40e3ac:	mov    edx,esi
  40e3ae:	mov    eax,ebx
  40e3b0:	call   0x404154
  40e3b5:	test   al,al
  40e3b7:	jne    0x40e3bd
  40e3b9:	xor    eax,eax
  40e3bb:	jmp    0x40e3bf
  40e3bd:	mov    al,0x1
  40e3bf:	mov    ebx,eax
  40e3c1:	xor    eax,eax
  40e3c3:	pop    edx
  40e3c4:	pop    ecx
  40e3c5:	pop    ecx
  40e3c6:	mov    DWORD PTR fs:[eax],edx
  40e3c9:	push   0x40e3de
  40e3ce:	lea    eax,[ebp-0x4]
  40e3d1:	call   0x406a98
  40e3d6:	ret    
  40e3d7:	jmp    0x40481c
  40e3dc:	jmp    0x40e3ce
  40e3de:	mov    eax,ebx
  40e3e0:	pop    edi
  40e3e1:	pop    esi
  40e3e2:	pop    ebx
  40e3e3:	pop    ecx
  40e3e4:	pop    ebp
  40e3e5:	ret    
	...
  40e3ee:	add    BYTE PTR [eax],al
  40e3f0:	rol    BYTE PTR [eax],0x0
  40e3f3:	add    BYTE PTR [eax],al
  40e3f5:	add    BYTE PTR [eax],al
  40e3f7:	inc    esi
  40e3f8:	push   ebx
  40e3f9:	mov    ebx,DWORD PTR ds:0x46dde8
  40e3ff:	mov    ebx,DWORD PTR [ebx]
  40e401:	test   ebx,ebx
  40e403:	je     0x40e424
  40e405:	cmp    DWORD PTR [ebx+0x14],0x0
  40e409:	je     0x40e41e
  40e40b:	mov    edx,DWORD PTR ds:0x40dc50
  40e411:	mov    eax,DWORD PTR [ebx+0x14]
  40e414:	call   0x405f7c
  40e419:	xor    eax,eax
  40e41b:	mov    DWORD PTR [ebx+0x14],eax
  40e41e:	mov    ebx,DWORD PTR [ebx]
  40e420:	test   ebx,ebx
  40e422:	jne    0x40e405
  40e424:	pop    ebx
  40e425:	ret    
  40e426:	mov    eax,eax
  40e428:	sbb    eax,0xfc000000
  40e42d:	sbb    DWORD PTR [esi+0x0],eax
  40e430:	sbb    al,0xdd
  40e432:	inc    esi
  40e433:	add    ah,dh
  40e435:	sbb    DWORD PTR [esi+0x0],eax
  40e438:	and    ah,bl
  40e43a:	inc    esi
  40e43b:	add    ah,ch
  40e43d:	sbb    DWORD PTR [esi+0x0],eax
  40e440:	fiadd  DWORD PTR fs:[esi+0x0]
  40e444:	in     al,0x19
  40e446:	inc    esi
  40e447:	add    BYTE PTR [ebp+ebx*8+0x46],ch
  40e44b:	add    ah,bl
  40e44d:	sbb    DWORD PTR [esi+0x0],eax
  40e450:	pushf  
  40e451:	fld    QWORD PTR [esi+0x0]
  40e454:	aam    0x19
  40e456:	inc    esi
  40e457:	add    BYTE PTR [eax],bh
  40e459:	fild   DWORD PTR [esi+0x0]
  40e45c:	int3   
  40e45d:	sbb    DWORD PTR [esi+0x0],eax
  40e460:	add    ah,bl
  40e462:	inc    esi
  40e463:	add    ah,al
  40e465:	sbb    DWORD PTR [esi+0x0],eax
  40e468:	and    dl,bl
  40e46a:	inc    esi
  40e46b:	add    BYTE PTR [ecx+ebx*1-0x23a7ffba],bh
  40e472:	inc    esi
  40e473:	add    BYTE PTR [ecx+ebx*1-0x235fffba],dh
  40e47a:	inc    esi
  40e47b:	add    BYTE PTR [ecx+ebx*1-0x2437ffba],ch
  40e482:	inc    esi
  40e483:	add    BYTE PTR [ecx+ebx*1-0x242bffba],ah
  40e48a:	inc    esi
  40e48b:	add    BYTE PTR [ecx+ebx*1-0x21ebffba],bl
  40e492:	inc    esi
  40e493:	add    BYTE PTR [ecx+ebx*1-0x242fffba],dl
  40e49a:	inc    esi
  40e49b:	add    BYTE PTR [ecx+ebx*1-0x216fffba],cl
  40e4a2:	inc    esi
  40e4a3:	add    BYTE PTR [ecx+ebx*1-0x2313ffba],al
  40e4aa:	inc    esi
  40e4ab:	add    BYTE PTR [ecx+ebx*1+0x46],bh
  40e4af:	add    ah,cl
  40e4b1:	fadd   QWORD PTR [esi+0x0]
  40e4b4:	je     0x40e4cf
  40e4b6:	inc    esi
  40e4b7:	add    BYTE PTR [eax+0x6c0046de],bl
  40e4bd:	sbb    DWORD PTR [esi+0x0],eax
  40e4c0:	push   eax
  40e4c1:	fiadd  WORD PTR [esi+0x0]
  40e4c4:	sbb    DWORD PTR fs:[esi+0x0],eax
  40e4c8:	in     al,0xdb
  40e4ca:	inc    esi
  40e4cb:	add    BYTE PTR [ecx+ebx*1+0x46],bl
  40e4cf:	add    BYTE PTR [esi+ebx*8],bl
  40e4d2:	inc    esi
  40e4d3:	add    BYTE PTR [ecx+ebx*1+0x46],dl
  40e4d7:	add    BYTE PTR [eax],dh
  40e4d9:	fiadd  WORD PTR [esi+0x0]
  40e4dc:	dec    esp
  40e4dd:	sbb    DWORD PTR [esi+0x0],eax
  40e4e0:	and    al,0xdb
  40e4e2:	inc    esi
  40e4e3:	add    BYTE PTR [ecx+ebx*1+0x46],al
  40e4e7:	add    ah,al
  40e4e9:	fiadd  DWORD PTR [esi+0x0]
  40e4ec:	cmp    al,0x19
  40e4ee:	inc    esi
  40e4ef:	add    al,al
  40e4f1:	fadd   QWORD PTR [esi+0x0]
  40e4f4:	xor    al,0x19
  40e4f6:	inc    esi
  40e4f7:	add    BYTE PTR [ebp+ebx*8+0x46],ah
  40e4fb:	add    BYTE PTR [ecx+ebx*1],ch
  40e4fe:	inc    esi
  40e4ff:	add    BYTE PTR [eax],dh
  40e501:	fiadd  DWORD PTR [esi+0x0]
  40e504:	and    al,0x19
  40e506:	inc    esi
  40e507:	add    BYTE PTR [eax],dl
  40e509:	fiadd  WORD PTR [esi+0x0]
  40e50c:	sbb    al,0x19
  40e50e:	inc    esi
  40e50f:	add    al,ah
  40e511:	fild   DWORD PTR [esi+0x0]
  40e514:	sub    BYTE PTR [eax],al
  40e516:	add    BYTE PTR [eax],al
  40e518:	adc    al,0x19
  40e51a:	inc    esi
  40e51b:	add    al,bh
  40e51d:	fld    QWORD PTR [esi+0x0]
  40e520:	add    BYTE PTR [eax],al
  40e522:	add    BYTE PTR [eax],al
  40e524:	adc    BYTE PTR [ecx],bl
  40e526:	inc    esi
  40e527:	add    BYTE PTR [edx+ebx*8+0x46],ch
  40e52b:	add    BYTE PTR [eax],al
  40e52d:	add    BYTE PTR [eax],al
  40e52f:	add    BYTE PTR [ecx+ebx*1],cl
  40e532:	inc    esi
  40e533:	add    BYTE PTR [ebp+ebx*8+0x46],dl
  40e537:	add    BYTE PTR [eax],al
  40e539:	add    BYTE PTR [eax],al
  40e53b:	add    BYTE PTR [eax],cl
  40e53d:	sbb    DWORD PTR [esi+0x0],eax
  40e540:	cmp    al,0xda
  40e542:	inc    esi
  40e543:	add    BYTE PTR [eax],al
  40e545:	add    BYTE PTR [eax],al
  40e547:	add    BYTE PTR [ecx+ebx*1],al
  40e54a:	inc    esi
  40e54b:	add    ah,dh
  40e54d:	fiadd  DWORD PTR [esi+0x0]
  40e550:	add    BYTE PTR [eax],al
  40e552:	add    BYTE PTR [eax],al
  40e554:	add    BYTE PTR [ecx],bl
  40e556:	inc    esi
  40e557:	add    ah,ah
  40e559:	fiadd  DWORD PTR [esi+0x0]
  40e55c:	add    BYTE PTR [eax],al
  40e55e:	add    BYTE PTR [eax],al
  40e560:	cld    
  40e561:	sbb    BYTE PTR [esi+0x0],al
  40e564:	mov    dl,bl
  40e566:	inc    esi
  40e567:	add    BYTE PTR [eax],al
  40e569:	add    BYTE PTR [eax],al
  40e56b:	add    al,bh
  40e56d:	sbb    BYTE PTR [esi+0x0],al
  40e570:	(bad)  
  40e572:	inc    esi
  40e573:	add    BYTE PTR [eax],al
  40e575:	add    BYTE PTR [eax],al
  40e577:	add    ah,dh
  40e579:	sbb    BYTE PTR [esi+0x0],al
  40e57c:	call   0x412c5d
  40e581:	add    BYTE PTR [eax],al
  40e583:	add    al,dh
  40e585:	sbb    BYTE PTR [esi+0x0],al
  40e588:	call   0x412c67
  40e58d:	add    BYTE PTR [eax],al
  40e58f:	add    ah,ch
  40e591:	sbb    BYTE PTR [esi+0x0],al
  40e594:	mov    al,0xdc
  40e596:	inc    esi
  40e597:	add    BYTE PTR [eax],al
  40e599:	add    BYTE PTR [eax],al
  40e59b:	add    al,ch
  40e59d:	sbb    BYTE PTR [esi+0x0],al
  40e5a0:	xchg   esp,eax
  40e5a1:	fld    QWORD PTR [esi+0x0]
  40e5a4:	add    BYTE PTR [eax],al
  40e5a6:	add    BYTE PTR [eax],al
  40e5a8:	in     al,0x18
  40e5aa:	inc    esi
  40e5ab:	add    BYTE PTR [ebp+ebx*8+0x46],cl
  40e5b2:	add    BYTE PTR [eax],al
  40e5b4:	loopne 0x40e5ce
  40e5b6:	inc    esi
  40e5b7:	add    BYTE PTR [eax],cl
  40e5b9:	fld    QWORD PTR [esi+0x0]
  40e5bc:	add    BYTE PTR [eax],al
  40e5be:	add    BYTE PTR [eax],al
  40e5c0:	fcomp  QWORD PTR [eax]
  40e5c2:	inc    esi
  40e5c3:	add    ah,al
  40e5c5:	fild   DWORD PTR [esi+0x0]
  40e5c8:	add    BYTE PTR [eax],al
  40e5ca:	add    BYTE PTR [eax],al
  40e5cc:	fcomp  DWORD PTR [eax]
  40e5ce:	inc    esi
  40e5cf:	add    BYTE PTR [eax-0x25],ah
  40e5d2:	inc    esi
  40e5d3:	add    BYTE PTR [eax],al
  40e5d5:	add    BYTE PTR [eax],al
  40e5d7:	add    ah,dl
  40e5d9:	sbb    BYTE PTR [esi+0x0],al
  40e5dc:	cmp    dl,bl
  40e5de:	inc    esi
  40e5df:	add    BYTE PTR [eax],al
  40e5e1:	add    BYTE PTR [eax],al
  40e5e3:	add    al,dl
  40e5e5:	sbb    BYTE PTR [esi+0x0],al
  40e5e8:	mov    ch,bl
  40e5ea:	inc    esi
  40e5eb:	add    BYTE PTR [eax],al
  40e5ed:	add    BYTE PTR [eax],al
  40e5ef:	add    ah,cl
  40e5f1:	sbb    BYTE PTR [esi+0x0],al
  40e5f4:	jl     0x40e5d2
  40e5f6:	inc    esi
  40e5f7:	add    BYTE PTR [eax],al
  40e5f9:	add    BYTE PTR [eax],al
  40e5fb:	add    al,cl
  40e5fd:	sbb    BYTE PTR [esi+0x0],al
  40e600:	push   eax
  40e601:	fild   DWORD PTR [esi+0x0]
  40e604:	add    BYTE PTR [eax],al
  40e606:	add    BYTE PTR [eax],al
  40e608:	les    ebx,FWORD PTR [eax]
  40e60a:	inc    esi
  40e60b:	add    BYTE PTR [esp+ebx*8+0x46],dl
  40e60f:	add    BYTE PTR [eax],al
  40e611:	add    BYTE PTR [eax],al
  40e613:	add    al,al
  40e615:	sbb    BYTE PTR [esi+0x0],al
  40e618:	aam    0xdc
  40e61a:	inc    esi
  40e61b:	add    BYTE PTR [eax],al
  40e61d:	add    BYTE PTR [eax],al
  40e61f:	add    BYTE PTR [eax+ebx*1-0x238fffba],bh
  40e626:	inc    esi
  40e627:	add    BYTE PTR [eax],al
  40e629:	add    BYTE PTR [eax],al
  40e62b:	add    BYTE PTR [eax-0x67ffb9e8],bh
  40e631:	fild   DWORD PTR [esi+0x0]
  40e634:	add    BYTE PTR [eax],al
  40e636:	add    BYTE PTR [eax],al
  40e638:	mov    ah,0x18
  40e63a:	inc    esi
  40e63b:	add    BYTE PTR [edx+ebx*8],dh
  40e63e:	inc    esi
  40e63f:	add    BYTE PTR [eax],al
  40e641:	add    BYTE PTR [eax],al
  40e643:	add    BYTE PTR [eax+0x8004618],dh
  40e649:	fadd   QWORD PTR [esi+0x0]
  40e64c:	add    BYTE PTR [eax],al
  40e64e:	add    BYTE PTR [eax],al
  40e650:	lods   al,BYTE PTR ds:[esi]
  40e651:	sbb    BYTE PTR [esi+0x0],al
  40e654:	cmp    dh,bl
  40e656:	inc    esi
  40e657:	add    BYTE PTR [eax],al
  40e659:	add    BYTE PTR [eax],al
  40e65b:	add    BYTE PTR [eax-0x23ffb9e8],ch
  40e661:	fld    QWORD PTR [esi+0x0]
  40e664:	add    BYTE PTR [eax],al
  40e666:	add    BYTE PTR [eax],al
  40e668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e669:	sbb    BYTE PTR [esi+0x0],al
  40e66c:	lods   al,BYTE PTR ds:[esi]
  40e66d:	fadd   QWORD PTR [esi+0x0]
  40e670:	add    BYTE PTR [eax],al
  40e672:	add    BYTE PTR [eax],al
  40e674:	mov    al,ds:0x20004618
  40e679:	fild   DWORD PTR [esi+0x0]
  40e67c:	add    BYTE PTR [eax],al
  40e67e:	add    BYTE PTR [eax],al
  40e680:	pushf  
  40e681:	sbb    BYTE PTR [esi+0x0],al
  40e684:	inc    esp
  40e685:	fiadd  DWORD PTR [esi+0x0]
  40e688:	add    BYTE PTR [eax],al
  40e68a:	add    BYTE PTR [eax],al
  40e68c:	cwde   
  40e68d:	sbb    BYTE PTR [esi+0x0],al
  40e690:	rcr    ch,1
  40e692:	inc    esi
  40e693:	add    BYTE PTR [eax],al
  40e695:	add    BYTE PTR [eax],al
  40e697:	add    BYTE PTR [eax+ebx*1-0x2143ffba],dl
  40e69e:	inc    esi
  40e69f:	add    BYTE PTR [eax],al
  40e6a1:	add    BYTE PTR [eax],al
  40e6a3:	add    BYTE PTR [eax-0x6fffb9e8],dl
  40e6a9:	fiadd  DWORD PTR [esi+0x0]
  40e6ac:	add    BYTE PTR [eax],al
  40e6ae:	add    BYTE PTR [eax],al
  40e6b0:	mov    WORD PTR [eax],ds
  40e6b2:	inc    esi
  40e6b3:	add    BYTE PTR [edx+ebx*8],bl
  40e6b6:	inc    esi
  40e6b7:	add    BYTE PTR [eax],al
  40e6b9:	add    BYTE PTR [eax],al
  40e6bb:	add    BYTE PTR [eax+0x4618],cl
  40e6c1:	fiadd  WORD PTR [esi+0x0]
  40e6c4:	add    BYTE PTR [eax],al
  40e6c6:	add    BYTE PTR [eax],al
  40e6c8:	test   BYTE PTR [eax],bl
  40e6ca:	inc    esi
  40e6cb:	add    BYTE PTR [eax+0x46dc],ch
  40e6d1:	add    BYTE PTR [eax],al
  40e6d3:	add    BYTE PTR [eax+0x74004618],al
  40e6d9:	fiadd  WORD PTR [esi+0x0]
  40e6dc:	add    BYTE PTR [eax],al
  40e6de:	add    BYTE PTR [eax],al
  40e6e0:	pop    esp
  40e6e1:	sbb    BYTE PTR [esi+0x0],al
  40e6e4:	in     al,dx
  40e6e5:	fild   DWORD PTR [esi+0x0]
  40e6e8:	add    BYTE PTR [eax],al
  40e6ea:	add    BYTE PTR [eax],al
  40e6ec:	pop    eax
  40e6ed:	sbb    BYTE PTR [esi+0x0],al
  40e6f0:	sub    al,0xdb
  40e6f2:	inc    esi
  40e6f3:	add    BYTE PTR [eax],al
  40e6f5:	add    BYTE PTR [eax],al
  40e6f7:	add    BYTE PTR [ebp-0x75],dl
  40e6fa:	in     al,dx
  40e6fb:	xor    eax,eax
  40e6fd:	push   ebp
  40e6fe:	push   0x40e87c
  40e703:	push   DWORD PTR fs:[eax]
  40e706:	mov    DWORD PTR fs:[eax],esp
  40e709:	inc    DWORD PTR ds:0x470910
  40e70f:	jne    0x40e86e
  40e715:	mov    eax,0x472904
  40e71a:	call   0x40e32c
  40e71f:	mov    eax,0x40dc9c
  40e724:	call   0x406958
  40e729:	call   0x40e3f8
  40e72e:	call   0x40de70
  40e733:	call   0x40cfec
  40e738:	mov    eax,0x4617b8
  40e73d:	call   0x404f88
  40e742:	mov    eax,0x4617bc
  40e747:	call   0x405790
  40e74c:	mov    eax,0x4617d0
  40e751:	call   0x404f88
  40e756:	mov    eax,0x470800
  40e75b:	call   0x404f88
  40e760:	mov    eax,0x47080c
  40e765:	call   0x404f88
  40e76a:	mov    eax,0x470810
  40e76f:	call   0x404f88
  40e774:	mov    eax,0x470818
  40e779:	call   0x404f88
  40e77e:	mov    eax,0x47081c
  40e783:	call   0x404f88
  40e788:	mov    eax,0x470820
  40e78d:	call   0x404f88
  40e792:	mov    eax,0x470824
  40e797:	call   0x404f88
  40e79c:	mov    eax,0x470828
  40e7a1:	mov    ecx,0xc
  40e7a6:	mov    edx,DWORD PTR ds:0x401084
  40e7ac:	call   0x405b50
  40e7b1:	mov    eax,0x470858
  40e7b6:	mov    ecx,0xc
  40e7bb:	mov    edx,DWORD PTR ds:0x401084
  40e7c1:	call   0x405b50
  40e7c6:	mov    eax,0x470888
  40e7cb:	mov    ecx,0x7
  40e7d0:	mov    edx,DWORD PTR ds:0x401084
  40e7d6:	call   0x405b50
  40e7db:	mov    eax,0x4708a4
  40e7e0:	mov    ecx,0x7
  40e7e5:	mov    edx,DWORD PTR ds:0x401084
  40e7eb:	call   0x405b50
  40e7f0:	mov    eax,0x4708d0
  40e7f5:	mov    ecx,0x7
  40e7fa:	mov    edx,DWORD PTR ds:0x401084
  40e800:	call   0x405b50
  40e805:	mov    eax,0x470908
  40e80a:	mov    edx,DWORD PTR ds:0x4081c4
  40e810:	call   0x4063bc
  40e815:	mov    eax,0x47090c
  40e81a:	mov    edx,DWORD PTR ds:0x4081e8
  40e820:	call   0x4063bc
  40e825:	mov    eax,0x461828
  40e82a:	call   0x404f88
  40e82f:	mov    eax,0x461830
  40e834:	mov    ecx,0x2
  40e839:	mov    edx,DWORD PTR ds:0x401084
  40e83f:	call   0x405b50
  40e844:	mov    eax,0x461918
  40e849:	mov    ecx,0x7
  40e84e:	mov    edx,DWORD PTR ds:0x40ca4c
  40e854:	call   0x405b50
  40e859:	mov    eax,0x461950
  40e85e:	mov    ecx,0x16
  40e863:	mov    edx,DWORD PTR ds:0x40cacc
  40e869:	call   0x405b50
  40e86e:	xor    eax,eax
  40e870:	pop    edx
  40e871:	pop    ecx
  40e872:	pop    ecx
  40e873:	mov    DWORD PTR fs:[eax],edx
  40e876:	push   0x40e883
  40e87b:	ret    
  40e87c:	jmp    0x40481c
  40e881:	jmp    0x40e87b
  40e883:	pop    ebp
  40e884:	ret    
  40e885:	lea    eax,[eax+0x0]
  40e888:	jmp    DWORD PTR ds:0x4795b4
  40e88e:	mov    eax,eax
  40e890:	jmp    DWORD PTR ds:0x4795b0
  40e896:	mov    eax,eax
  40e898:	jmp    DWORD PTR ds:0x4795ac
  40e89e:	mov    eax,eax
  40e8a0:	jmp    DWORD PTR ds:0x4795a8
  40e8a6:	mov    eax,eax
  40e8a8:	push   ebp
  40e8a9:	mov    ebp,esp
  40e8ab:	cmp    DWORD PTR [ebp+0x10],0x400
  40e8b2:	je     0x40e8bb
  40e8b4:	mov    eax,0x80004001
  40e8b9:	jmp    0x40e8d2
  40e8bb:	movzx  eax,WORD PTR [ebp+0x18]
  40e8bf:	push   eax
  40e8c0:	movzx  eax,WORD PTR [ebp+0x14]
  40e8c4:	push   eax
  40e8c5:	mov    eax,DWORD PTR [ebp+0xc]
  40e8c8:	push   eax
  40e8c9:	mov    eax,DWORD PTR [ebp+0x8]
  40e8cc:	push   eax
  40e8cd:	call   0x40e8a0
  40e8d2:	pop    ebp
  40e8d3:	ret    0x14
  40e8d6:	mov    eax,eax
  40e8d8:	push   ebp
  40e8d9:	mov    ebp,esp
  40e8db:	mov    eax,0x80004001
  40e8e0:	pop    ebp
  40e8e1:	ret    0x8
  40e8e4:	push   ebp
  40e8e5:	mov    ebp,esp
  40e8e7:	mov    eax,0x80004001
  40e8ec:	pop    ebp
  40e8ed:	ret    0xc
  40e8f0:	push   ebp
  40e8f1:	mov    ebp,esp
  40e8f3:	mov    eax,0x80004001
  40e8f8:	pop    ebp
  40e8f9:	ret    0x10
  40e8fc:	push   ebp
  40e8fd:	mov    ebp,esp
  40e8ff:	push   0x0
  40e901:	push   ebx
  40e902:	xor    eax,eax
  40e904:	push   ebp
  40e905:	push   0x40e956
  40e90a:	push   DWORD PTR fs:[eax]
  40e90d:	mov    DWORD PTR fs:[eax],esp
  40e910:	cmp    DWORD PTR [ebp+0xc],0x400
  40e917:	je     0x40e920
  40e919:	mov    ebx,0x80004001
  40e91e:	jmp    0x40e940
  40e920:	lea    eax,[ebp-0x4]
  40e923:	mov    edx,DWORD PTR [ebp+0x8]
  40e926:	call   0x405210
  40e92b:	mov    eax,DWORD PTR [ebp-0x4]
  40e92e:	mov    edx,DWORD PTR [ebp+0x14]
  40e931:	call   0x408b7c
  40e936:	and    eax,0x7f
  40e939:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40e940:	xor    eax,eax
  40e942:	pop    edx
  40e943:	pop    ecx
  40e944:	pop    ecx
  40e945:	mov    DWORD PTR fs:[eax],edx
  40e948:	push   0x40e95d
  40e94d:	lea    eax,[ebp-0x4]
  40e950:	call   0x404f88
  40e955:	ret    
  40e956:	jmp    0x40481c
  40e95b:	jmp    0x40e94d
  40e95d:	mov    eax,ebx
  40e95f:	pop    ebx
  40e960:	pop    ecx
  40e961:	pop    ebp
  40e962:	ret    0x10
  40e965:	lea    eax,[eax+0x0]
  40e968:	push   ebp
  40e969:	mov    ebp,esp
  40e96b:	push   0x0
  40e96d:	push   ebx
  40e96e:	xor    eax,eax
  40e970:	push   ebp
  40e971:	push   0x40e9c2
  40e976:	push   DWORD PTR fs:[eax]
  40e979:	mov    DWORD PTR fs:[eax],esp
  40e97c:	cmp    DWORD PTR [ebp+0xc],0x400
  40e983:	je     0x40e98c
  40e985:	mov    ebx,0x80004001
  40e98a:	jmp    0x40e9ac
  40e98c:	lea    eax,[ebp-0x4]
  40e98f:	mov    edx,DWORD PTR [ebp+0x8]
  40e992:	call   0x405210
  40e997:	mov    eax,DWORD PTR [ebp-0x4]
  40e99a:	mov    edx,DWORD PTR [ebp+0x14]
  40e99d:	call   0x40a6b8
  40e9a2:	and    eax,0x7f
  40e9a5:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40e9ac:	xor    eax,eax
  40e9ae:	pop    edx
  40e9af:	pop    ecx
  40e9b0:	pop    ecx
  40e9b1:	mov    DWORD PTR fs:[eax],edx
  40e9b4:	push   0x40e9c9
  40e9b9:	lea    eax,[ebp-0x4]
  40e9bc:	call   0x404f88
  40e9c1:	ret    
  40e9c2:	jmp    0x40481c
  40e9c7:	jmp    0x40e9b9
  40e9c9:	mov    eax,ebx
  40e9cb:	pop    ebx
  40e9cc:	pop    ecx
  40e9cd:	pop    ebp
  40e9ce:	ret    0x10
  40e9d1:	lea    eax,[eax+0x0]
  40e9d4:	push   ebp
  40e9d5:	mov    ebp,esp
  40e9d7:	push   0x0
  40e9d9:	push   ebx
  40e9da:	xor    eax,eax
  40e9dc:	push   ebp
  40e9dd:	push   0x40ea2e
  40e9e2:	push   DWORD PTR fs:[eax]
  40e9e5:	mov    DWORD PTR fs:[eax],esp
  40e9e8:	cmp    DWORD PTR [ebp+0xc],0x400
  40e9ef:	je     0x40e9f8
  40e9f1:	mov    ebx,0x80004001
  40e9f6:	jmp    0x40ea18
  40e9f8:	lea    eax,[ebp-0x4]
  40e9fb:	mov    edx,DWORD PTR [ebp+0x8]
  40e9fe:	call   0x405210
  40ea03:	mov    eax,DWORD PTR [ebp-0x4]
  40ea06:	mov    edx,DWORD PTR [ebp+0x14]
  40ea09:	call   0x40a68c
  40ea0e:	and    eax,0x7f
  40ea11:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40ea18:	xor    eax,eax
  40ea1a:	pop    edx
  40ea1b:	pop    ecx
  40ea1c:	pop    ecx
  40ea1d:	mov    DWORD PTR fs:[eax],edx
  40ea20:	push   0x40ea35
  40ea25:	lea    eax,[ebp-0x4]
  40ea28:	call   0x404f88
  40ea2d:	ret    
  40ea2e:	jmp    0x40481c
  40ea33:	jmp    0x40ea25
  40ea35:	mov    eax,ebx
  40ea37:	pop    ebx
  40ea38:	pop    ecx
  40ea39:	pop    ebp
  40ea3a:	ret    0x10
  40ea3d:	lea    eax,[eax+0x0]
  40ea40:	push   ebp
  40ea41:	mov    ebp,esp
  40ea43:	push   0x0
  40ea45:	push   ebx
  40ea46:	xor    eax,eax
  40ea48:	push   ebp
  40ea49:	push   0x40ea9a
  40ea4e:	push   DWORD PTR fs:[eax]
  40ea51:	mov    DWORD PTR fs:[eax],esp
  40ea54:	cmp    DWORD PTR [ebp+0xc],0x400
  40ea5b:	je     0x40ea64
  40ea5d:	mov    ebx,0x80004001
  40ea62:	jmp    0x40ea84
  40ea64:	lea    eax,[ebp-0x4]
  40ea67:	mov    edx,DWORD PTR [ebp+0x8]
  40ea6a:	call   0x405210
  40ea6f:	mov    eax,DWORD PTR [ebp-0x4]
  40ea72:	mov    edx,DWORD PTR [ebp+0x14]
  40ea75:	call   0x40c004
  40ea7a:	and    eax,0x7f
  40ea7d:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40ea84:	xor    eax,eax
  40ea86:	pop    edx
  40ea87:	pop    ecx
  40ea88:	pop    ecx
  40ea89:	mov    DWORD PTR fs:[eax],edx
  40ea8c:	push   0x40eaa1
  40ea91:	lea    eax,[ebp-0x4]
  40ea94:	call   0x404f88
  40ea99:	ret    
  40ea9a:	jmp    0x40481c
  40ea9f:	jmp    0x40ea91
  40eaa1:	mov    eax,ebx
  40eaa3:	pop    ebx
  40eaa4:	pop    ecx
  40eaa5:	pop    ebp
  40eaa6:	ret    0x10
  40eaa9:	lea    eax,[eax+0x0]
  40eaac:	push   ebp
  40eaad:	mov    ebp,esp
  40eaaf:	push   0x0
  40eab1:	push   ebx
  40eab2:	xor    eax,eax
  40eab4:	push   ebp
  40eab5:	push   0x40eb06
  40eaba:	push   DWORD PTR fs:[eax]
  40eabd:	mov    DWORD PTR fs:[eax],esp
  40eac0:	cmp    DWORD PTR [ebp+0xc],0x400
  40eac7:	je     0x40ead0
  40eac9:	mov    ebx,0x80004001
  40eace:	jmp    0x40eaf0
  40ead0:	lea    eax,[ebp-0x4]
  40ead3:	mov    edx,DWORD PTR [ebp+0x8]
  40ead6:	call   0x405210
  40eadb:	mov    eax,DWORD PTR [ebp-0x4]
  40eade:	mov    edx,DWORD PTR [ebp+0x14]
  40eae1:	call   0x40a6e4
  40eae6:	and    eax,0x7f
  40eae9:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40eaf0:	xor    eax,eax
  40eaf2:	pop    edx
  40eaf3:	pop    ecx
  40eaf4:	pop    ecx
  40eaf5:	mov    DWORD PTR fs:[eax],edx
  40eaf8:	push   0x40eb0d
  40eafd:	lea    eax,[ebp-0x4]
  40eb00:	call   0x404f88
  40eb05:	ret    
  40eb06:	jmp    0x40481c
  40eb0b:	jmp    0x40eafd
  40eb0d:	mov    eax,ebx
  40eb0f:	pop    ebx
  40eb10:	pop    ecx
  40eb11:	pop    ebp
  40eb12:	ret    0x10
  40eb15:	lea    eax,[eax+0x0]
  40eb18:	push   ebp
  40eb19:	mov    ebp,esp
  40eb1b:	add    esp,0xfffffff8
  40eb1e:	push   ebx
  40eb1f:	xor    eax,eax
  40eb21:	mov    DWORD PTR [ebp-0x8],eax
  40eb24:	xor    eax,eax
  40eb26:	push   ebp
  40eb27:	push   0x40eb85
  40eb2c:	push   DWORD PTR fs:[eax]
  40eb2f:	mov    DWORD PTR fs:[eax],esp
  40eb32:	cmp    DWORD PTR [ebp+0xc],0x400
  40eb39:	je     0x40eb42
  40eb3b:	mov    ebx,0x80004001
  40eb40:	jmp    0x40eb6f
  40eb42:	lea    eax,[ebp-0x8]
  40eb45:	mov    edx,DWORD PTR [ebp+0x8]
  40eb48:	call   0x405210
  40eb4d:	mov    eax,DWORD PTR [ebp-0x8]
  40eb50:	lea    edx,[ebp-0x1]
  40eb53:	call   0x408ce4
  40eb58:	and    eax,0x7f
  40eb5b:	mov    ebx,DWORD PTR [eax*4+0x461a04]
  40eb62:	cmp    BYTE PTR [ebp-0x1],0x1
  40eb66:	cmc    
  40eb67:	sbb    eax,eax
  40eb69:	mov    edx,DWORD PTR [ebp+0x14]
  40eb6c:	mov    WORD PTR [edx],ax
  40eb6f:	xor    eax,eax
  40eb71:	pop    edx
  40eb72:	pop    ecx
  40eb73:	pop    ecx
  40eb74:	mov    DWORD PTR fs:[eax],edx
  40eb77:	push   0x40eb8c
  40eb7c:	lea    eax,[ebp-0x8]
  40eb7f:	call   0x404f88
  40eb84:	ret    
  40eb85:	jmp    0x40481c
  40eb8a:	jmp    0x40eb7c
  40eb8c:	mov    eax,ebx
  40eb8e:	pop    ebx
  40eb8f:	pop    ecx
  40eb90:	pop    ecx
  40eb91:	pop    ebp
  40eb92:	ret    0x10
  40eb95:	lea    eax,[eax+0x0]
  40eb98:	push   ebp
  40eb99:	mov    ebp,esp
  40eb9b:	push   0x0
  40eb9d:	push   ebx
  40eb9e:	mov    eax,DWORD PTR [ebp+0x18]
  40eba1:	test   eax,eax
  40eba3:	je     0x40eba9
  40eba5:	xor    edx,edx
  40eba7:	mov    DWORD PTR [eax],edx
  40eba9:	xor    eax,eax
  40ebab:	push   ebp
  40ebac:	push   0x40ebf8
  40ebb1:	push   DWORD PTR fs:[eax]
  40ebb4:	mov    DWORD PTR fs:[eax],esp
  40ebb7:	cmp    DWORD PTR [ebp+0x10],0x400
  40ebbe:	je     0x40ebc7
  40ebc0:	mov    ebx,0x80004001
  40ebc5:	jmp    0x40ebe2
  40ebc7:	push   DWORD PTR [ebp+0xc]
  40ebca:	push   DWORD PTR [ebp+0x8]
  40ebcd:	lea    eax,[ebp-0x4]
  40ebd0:	call   0x40a640
  40ebd5:	mov    edx,DWORD PTR [ebp-0x4]
  40ebd8:	mov    eax,DWORD PTR [ebp+0x18]
  40ebdb:	call   0x4058e0
  40ebe0:	xor    ebx,ebx
  40ebe2:	xor    eax,eax
  40ebe4:	pop    edx
  40ebe5:	pop    ecx
  40ebe6:	pop    ecx
  40ebe7:	mov    DWORD PTR fs:[eax],edx
  40ebea:	push   0x40ebff
  40ebef:	lea    eax,[ebp-0x4]
  40ebf2:	call   0x404f88
  40ebf7:	ret    
  40ebf8:	jmp    0x40481c
  40ebfd:	jmp    0x40ebef
  40ebff:	mov    eax,ebx
  40ec01:	pop    ebx
  40ec02:	pop    ecx
  40ec03:	pop    ebp
  40ec04:	ret    0x14
  40ec07:	nop
  40ec08:	push   ebp
  40ec09:	mov    ebp,esp
  40ec0b:	push   0x0
  40ec0d:	push   ebx
  40ec0e:	mov    eax,DWORD PTR [ebp+0x18]
  40ec11:	test   eax,eax
  40ec13:	je     0x40ec19
  40ec15:	xor    edx,edx
  40ec17:	mov    DWORD PTR [eax],edx
  40ec19:	xor    eax,eax
  40ec1b:	push   ebp
  40ec1c:	push   0x40ec6a
  40ec21:	push   DWORD PTR fs:[eax]
  40ec24:	mov    DWORD PTR fs:[eax],esp
  40ec27:	cmp    DWORD PTR [ebp+0x10],0x400
  40ec2e:	je     0x40ec37
  40ec30:	mov    ebx,0x80004001
  40ec35:	jmp    0x40ec54
  40ec37:	push   DWORD PTR [ebp+0xc]
  40ec3a:	push   DWORD PTR [ebp+0x8]
  40ec3d:	lea    eax,[ebp-0x4]
  40ec40:	xor    edx,edx
  40ec42:	call   0x40b71c
  40ec47:	mov    eax,DWORD PTR [ebp+0x18]
  40ec4a:	mov    edx,DWORD PTR [ebp-0x4]
  40ec4d:	call   0x4058e0
  40ec52:	xor    ebx,ebx
  40ec54:	xor    eax,eax
  40ec56:	pop    edx
  40ec57:	pop    ecx
  40ec58:	pop    ecx
  40ec59:	mov    DWORD PTR fs:[eax],edx
  40ec5c:	push   0x40ec71
  40ec61:	lea    eax,[ebp-0x4]
  40ec64:	call   0x404f88
  40ec69:	ret    
  40ec6a:	jmp    0x40481c
  40ec6f:	jmp    0x40ec61
  40ec71:	mov    eax,ebx
  40ec73:	pop    ebx
  40ec74:	pop    ecx
  40ec75:	pop    ebp
  40ec76:	ret    0x14
  40ec79:	lea    eax,[eax+0x0]
  40ec7c:	push   ebp
  40ec7d:	mov    ebp,esp
  40ec7f:	push   0x0
  40ec81:	push   ebx
  40ec82:	mov    eax,DWORD PTR [ebp+0x14]
  40ec85:	test   eax,eax
  40ec87:	je     0x40ec8d
  40ec89:	xor    edx,edx
  40ec8b:	mov    DWORD PTR [eax],edx
  40ec8d:	xor    eax,eax
  40ec8f:	push   ebp
  40ec90:	push   0x40ece0
  40ec95:	push   DWORD PTR fs:[eax]
  40ec98:	mov    DWORD PTR fs:[eax],esp
  40ec9b:	cmp    DWORD PTR [ebp+0xc],0x400
  40eca2:	je     0x40ecab
  40eca4:	mov    ebx,0x80004001
  40eca9:	jmp    0x40ecca
  40ecab:	cmp    WORD PTR [ebp+0x8],0x1
  40ecb0:	sbb    eax,eax
  40ecb2:	inc    eax
  40ecb3:	lea    ecx,[ebp-0x4]
  40ecb6:	xor    edx,edx
  40ecb8:	call   0x408d80
  40ecbd:	mov    edx,DWORD PTR [ebp-0x4]
  40ecc0:	mov    eax,DWORD PTR [ebp+0x14]
  40ecc3:	call   0x4058e0
  40ecc8:	xor    ebx,ebx
  40ecca:	xor    eax,eax
  40eccc:	pop    edx
  40eccd:	pop    ecx
  40ecce:	pop    ecx
  40eccf:	mov    DWORD PTR fs:[eax],edx
  40ecd2:	push   0x40ece7
  40ecd7:	lea    eax,[ebp-0x4]
  40ecda:	call   0x404f88
  40ecdf:	ret    
  40ece0:	jmp    0x40481c
  40ece5:	jmp    0x40ecd7
  40ece7:	mov    eax,ebx
  40ece9:	pop    ebx
  40ecea:	pop    ecx
  40eceb:	pop    ebp
  40ecec:	ret    0x10
  40ecef:	nop
  40ecf0:	jmp    DWORD PTR ds:0x4795a4
  40ecf6:	mov    eax,eax
  40ecf8:	jmp    DWORD PTR ds:0x4795a0
  40ecfe:	mov    eax,eax
  40ed00:	jmp    DWORD PTR ds:0x47959c
  40ed06:	mov    eax,eax
  40ed08:	jmp    DWORD PTR ds:0x479598
  40ed0e:	mov    eax,eax
  40ed10:	push   ebp
  40ed11:	mov    ebp,esp
  40ed13:	push   ebx
  40ed14:	mov    ebx,edx
  40ed16:	mov    edx,ebx
  40ed18:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed1b:	cmp    DWORD PTR [ecx-0x4],0x0
  40ed1f:	je     0x40ed36
  40ed21:	push   eax
  40ed22:	mov    eax,DWORD PTR [ebp+0x8]
  40ed25:	mov    eax,DWORD PTR [eax-0x4]
  40ed28:	push   eax
  40ed29:	call   0x407260
  40ed2e:	mov    edx,eax
  40ed30:	test   edx,edx
  40ed32:	jne    0x40ed36
  40ed34:	mov    edx,ebx
  40ed36:	mov    eax,edx
  40ed38:	pop    ebx
  40ed39:	pop    ebp
  40ed3a:	ret    
  40ed3b:	nop
  40ed3c:	push   ebp
  40ed3d:	mov    ebp,esp
  40ed3f:	push   ecx
  40ed40:	push   0x40ef34
  40ed45:	call   0x407258
  40ed4a:	mov    DWORD PTR [ebp-0x4],eax
  40ed4d:	push   ebp
  40ed4e:	mov    edx,0x40e8a8
  40ed53:	mov    eax,0x40ef44
  40ed58:	call   0x40ed10
  40ed5d:	pop    ecx
  40ed5e:	mov    ds:0x472908,eax
  40ed63:	push   ebp
  40ed64:	mov    edx,0x40e8d8
  40ed69:	mov    eax,0x40ef58
  40ed6e:	call   0x40ed10
  40ed73:	pop    ecx
  40ed74:	mov    ds:0x47290c,eax
  40ed79:	push   ebp
  40ed7a:	mov    edx,0x40e8d8
  40ed7f:	mov    eax,0x40ef60
  40ed84:	call   0x40ed10
  40ed89:	pop    ecx
  40ed8a:	mov    ds:0x472910,eax
  40ed8f:	push   ebp
  40ed90:	mov    edx,0x40e8e4
  40ed95:	mov    eax,0x40ef68
  40ed9a:	call   0x40ed10
  40ed9f:	pop    ecx
  40eda0:	mov    ds:0x472914,eax
  40eda5:	push   ebp
  40eda6:	mov    edx,0x40e8e4
  40edab:	mov    eax,0x40ef70
  40edb0:	call   0x40ed10
  40edb5:	pop    ecx
  40edb6:	mov    ds:0x472918,eax
  40edbb:	push   ebp
  40edbc:	mov    edx,0x40e8e4
  40edc1:	mov    eax,0x40ef78
  40edc6:	call   0x40ed10
  40edcb:	pop    ecx
  40edcc:	mov    ds:0x47291c,eax
  40edd1:	push   ebp
  40edd2:	mov    edx,0x40e8e4
  40edd7:	mov    eax,0x40ef80
  40eddc:	call   0x40ed10
  40ede1:	pop    ecx
  40ede2:	mov    ds:0x472920,eax
  40ede7:	push   ebp
  40ede8:	mov    edx,0x40e8e4
  40eded:	mov    eax,0x40ef88
  40edf2:	call   0x40ed10
  40edf7:	pop    ecx
  40edf8:	mov    ds:0x472924,eax
  40edfd:	push   ebp
  40edfe:	mov    edx,0x40e8e4
  40ee03:	mov    eax,0x40ef90
  40ee08:	call   0x40ed10
  40ee0d:	pop    ecx
  40ee0e:	mov    ds:0x472928,eax
  40ee13:	push   ebp
  40ee14:	mov    edx,0x40e8e4
  40ee19:	mov    eax,0x40ef98
  40ee1e:	call   0x40ed10
  40ee23:	pop    ecx
  40ee24:	mov    ds:0x47292c,eax
  40ee29:	push   ebp
  40ee2a:	mov    edx,0x40e8e4
  40ee2f:	mov    eax,0x40efa0
  40ee34:	call   0x40ed10
  40ee39:	pop    ecx
  40ee3a:	mov    ds:0x472930,eax
  40ee3f:	push   ebp
  40ee40:	mov    edx,0x40e8e4
  40ee45:	mov    eax,0x40efa8
  40ee4a:	call   0x40ed10
  40ee4f:	pop    ecx
  40ee50:	mov    ds:0x472934,eax
  40ee55:	push   ebp
  40ee56:	mov    edx,0x40e8f0
  40ee5b:	mov    eax,0x40efb0
  40ee60:	call   0x40ed10
  40ee65:	pop    ecx
  40ee66:	mov    ds:0x472938,eax
  40ee6b:	push   ebp
  40ee6c:	mov    edx,0x40e8fc
  40ee71:	mov    eax,0x40efb8
  40ee76:	call   0x40ed10
  40ee7b:	pop    ecx
  40ee7c:	mov    ds:0x47293c,eax
  40ee81:	push   ebp
  40ee82:	mov    edx,0x40e968
  40ee87:	mov    eax,0x40efc8
  40ee8c:	call   0x40ed10
  40ee91:	pop    ecx
  40ee92:	mov    ds:0x472940,eax
  40ee97:	push   ebp
  40ee98:	mov    edx,0x40e9d4
  40ee9d:	mov    eax,0x40efd8
  40eea2:	call   0x40ed10
  40eea7:	pop    ecx
  40eea8:	mov    ds:0x472944,eax
  40eead:	push   ebp
  40eeae:	mov    edx,0x40ea40
  40eeb3:	mov    eax,0x40efe8
  40eeb8:	call   0x40ed10
  40eebd:	pop    ecx
  40eebe:	mov    ds:0x472948,eax
  40eec3:	push   ebp
  40eec4:	mov    edx,0x40eaac
  40eec9:	mov    eax,0x40eff8
  40eece:	call   0x40ed10
  40eed3:	pop    ecx
  40eed4:	mov    ds:0x47294c,eax
  40eed9:	push   ebp
  40eeda:	mov    edx,0x40eb18
  40eedf:	mov    eax,0x40f008
  40eee4:	call   0x40ed10
  40eee9:	pop    ecx
  40eeea:	mov    ds:0x472950,eax
  40eeef:	push   ebp
  40eef0:	mov    edx,0x40eb98
  40eef5:	mov    eax,0x40f018
  40eefa:	call   0x40ed10
  40eeff:	pop    ecx
  40ef00:	mov    ds:0x472954,eax
  40ef05:	push   ebp
  40ef06:	mov    edx,0x40ec08
  40ef0b:	mov    eax,0x40f028
  40ef10:	call   0x40ed10
  40ef15:	pop    ecx
  40ef16:	mov    ds:0x472958,eax
  40ef1b:	push   ebp
  40ef1c:	mov    edx,0x40ec7c
  40ef21:	mov    eax,0x40f038
  40ef26:	call   0x40ed10
  40ef2b:	pop    ecx
  40ef2c:	mov    ds:0x47295c,eax
  40ef31:	pop    ecx
  40ef32:	pop    ebp
  40ef33:	ret    
  40ef34:	outs   dx,DWORD PTR ds:[esi]
  40ef35:	ins    BYTE PTR es:[edi],dx
  40ef36:	gs popa 
  40ef38:	jne    0x40efae
  40ef3a:	xor    esi,DWORD PTR [edx]
  40ef3c:	cs fs ins BYTE PTR es:[edi],dx
  40ef3f:	ins    BYTE PTR es:[edi],dx
  40ef40:	add    BYTE PTR [eax],al
  40ef42:	add    BYTE PTR [eax],al
  40ef44:	push   esi
  40ef45:	popa   
  40ef46:	jb     0x40efb1
  40ef48:	popa   
  40ef49:	outs   dx,BYTE PTR ds:[esi]
  40ef4a:	je     0x40ef8f
  40ef4c:	push   0x65676e61
  40ef51:	push   esp
  40ef52:	jns    0x40efc4
  40ef54:	gs inc ebp
  40ef56:	js     0x40ef58
  40ef58:	push   esi
  40ef59:	popa   
  40ef5a:	jb     0x40efaa
  40ef5c:	add    BYTE PTR gs:[bx+si],al
  40ef60:	push   esi
  40ef61:	popa   
  40ef62:	jb     0x40efb2
  40ef64:	outs   dx,DWORD PTR ds:[esi]
  40ef65:	je     0x40ef67
  40ef67:	add    BYTE PTR [esi+0x61],dl
  40ef6a:	jb     0x40efad
  40ef6c:	fs add BYTE PTR fs:[eax],al
  40ef70:	push   esi
  40ef71:	popa   
  40ef72:	jb     0x40efc7
  40ef74:	jne    0x40efd8
  40ef76:	add    BYTE PTR [eax],al
  40ef78:	push   esi
  40ef79:	popa   
  40ef7a:	jb     0x40efc9
  40ef7c:	jne    0x40efea
  40ef7e:	add    BYTE PTR [eax],al
  40ef80:	push   esi
  40ef81:	popa   
  40ef82:	jb     0x40efc8
  40ef84:	imul   esi,DWORD PTR [esi+0x0],0x72615600
  40ef8b:	dec    ecx
  40ef8c:	imul   esi,DWORD PTR fs:[esi+0x0],0x4d726156
  40ef94:	outs   dx,DWORD PTR ds:[esi]
  40ef95:	add    BYTE PTR fs:[eax],al
  40ef98:	push   esi
  40ef99:	popa   
  40ef9a:	jb     0x40efdd
  40ef9c:	outs   dx,BYTE PTR ds:[esi]
  40ef9d:	add    BYTE PTR fs:[eax],al
  40efa0:	push   esi
  40efa1:	popa   
  40efa2:	jb     0x40eff3
  40efa4:	jb     0x40efa6
  40efa6:	add    BYTE PTR [eax],al
  40efa8:	push   esi
  40efa9:	popa   
  40efaa:	jb     0x40f004
  40efac:	outs   dx,DWORD PTR ds:[esi]
  40efad:	jb     0x40efaf
  40efaf:	add    BYTE PTR [esi+0x61],dl
  40efb2:	jb     0x40eff7
  40efb4:	ins    DWORD PTR es:[edi],dx
  40efb5:	jo     0x40efb7
  40efb7:	add    BYTE PTR [esi+0x61],dl
  40efba:	jb     0x40f005
  40efbc:	xor    al,0x46
  40efbe:	jb     0x40f02f
  40efc0:	ins    DWORD PTR es:[edi],dx
  40efc1:	push   ebx
  40efc2:	je     0x40f036
  40efc4:	add    BYTE PTR [eax],al
  40efc6:	add    BYTE PTR [eax],al
  40efc8:	push   esi
  40efc9:	popa   
  40efca:	jb     0x40f01e
  40efcc:	xor    al,0x46
  40efce:	jb     0x40f03f
  40efd0:	ins    DWORD PTR es:[edi],dx
  40efd1:	push   ebx
  40efd2:	je     0x40f046
  40efd4:	add    BYTE PTR [eax],al
  40efd6:	add    BYTE PTR [eax],al
  40efd8:	push   esi
  40efd9:	popa   
  40efda:	jb     0x40f02e
  40efdc:	cmp    BYTE PTR [esi+0x72],al
  40efdf:	outs   dx,DWORD PTR ds:[esi]
  40efe0:	ins    DWORD PTR es:[edi],dx
  40efe1:	push   ebx
  40efe2:	je     0x40f056
  40efe4:	add    BYTE PTR [eax],al
  40efe6:	add    BYTE PTR [eax],al
  40efe8:	push   esi
  40efe9:	popa   
  40efea:	jb     0x40f030
  40efec:	popa   
  40efed:	je     0x40f054
  40efef:	inc    esi
  40eff0:	jb     0x40f061
  40eff2:	ins    DWORD PTR es:[edi],dx
  40eff3:	push   ebx
  40eff4:	je     0x40f068
  40eff6:	add    BYTE PTR [eax],al
  40eff8:	push   esi
  40eff9:	popa   
  40effa:	jb     0x40f03f
  40effc:	jns    0x40f044
  40effe:	jb     0x40f06f
  40f000:	ins    DWORD PTR es:[edi],dx
  40f001:	push   ebx
  40f002:	je     0x40f076
  40f004:	add    BYTE PTR [eax],al
  40f006:	add    BYTE PTR [eax],al
  40f008:	push   esi
  40f009:	popa   
  40f00a:	jb     0x40f04e
  40f00c:	outs   dx,DWORD PTR ds:[esi]
  40f00d:	outs   dx,DWORD PTR ds:[esi]
  40f00e:	ins    BYTE PTR es:[edi],dx
  40f00f:	inc    esi
  40f010:	jb     0x40f081
  40f012:	ins    DWORD PTR es:[edi],dx
  40f013:	push   ebx
  40f014:	je     0x40f088
  40f016:	add    BYTE PTR [eax],al
  40f018:	push   esi
  40f019:	popa   
  40f01a:	jb     0x40f05e
  40f01c:	jae    0x40f092
  40f01e:	jb     0x40f066
  40f020:	jb     0x40f091
  40f022:	ins    DWORD PTR es:[edi],dx
  40f023:	inc    ebx
  40f024:	jns    0x40f026
  40f026:	add    BYTE PTR [eax],al
  40f028:	push   esi
  40f029:	popa   
  40f02a:	jb     0x40f06e
  40f02c:	jae    0x40f0a2
  40f02e:	jb     0x40f076
  40f030:	jb     0x40f0a1
  40f032:	ins    DWORD PTR es:[edi],dx
  40f033:	inc    esp
  40f034:	popa   
  40f035:	je     0x40f09c
  40f037:	add    BYTE PTR [esi+0x61],dl
  40f03a:	jb     0x40f07e
  40f03c:	jae    0x40f0b2
  40f03e:	jb     0x40f086
  40f040:	jb     0x40f0b1
  40f042:	ins    DWORD PTR es:[edi],dx
  40f043:	inc    edx
  40f044:	outs   dx,DWORD PTR ds:[esi]
  40f045:	outs   dx,DWORD PTR ds:[esi]
  40f046:	ins    BYTE PTR es:[edi],dx
  40f047:	add    BYTE PTR [ebp-0x75],dl
  40f04a:	in     al,dx
  40f04b:	xor    eax,eax
  40f04d:	push   ebp
  40f04e:	push   0x40f06d
  40f053:	push   DWORD PTR fs:[eax]
  40f056:	mov    DWORD PTR fs:[eax],esp
  40f059:	inc    DWORD PTR ds:0x472960
  40f05f:	xor    eax,eax
  40f061:	pop    edx
  40f062:	pop    ecx
  40f063:	pop    ecx
  40f064:	mov    DWORD PTR fs:[eax],edx
  40f067:	push   0x40f074
  40f06c:	ret    
  40f06d:	jmp    0x40481c
  40f072:	jmp    0x40f06c
  40f074:	pop    ebp
  40f075:	ret    
  40f076:	mov    eax,eax
  40f078:	int3   
  40f079:	add    DWORD PTR [esp+0x4],0xfffffff8
  40f07e:	mov    eax,DWORD PTR [esp+0x4]
  40f082:	mov    eax,DWORD PTR [eax]
  40f084:	jmp    DWORD PTR [eax]
  40f086:	add    DWORD PTR [esp+0x4],0xfffffff8
  40f08b:	jmp    0x4117a4
  40f090:	add    DWORD PTR [esp+0x4],0xfffffff8
  40f095:	jmp    0x4117b0
  40f09a:	jns    0x40f08c
  40f09c:	inc    eax
  40f09d:	add    BYTE PTR [esi-0x6fffbf10],al
  40f0a3:	lock inc eax
  40f0a5:	add    BYTE PTR [ecx],al
	...
  40f0af:	add    BYTE PTR [eax],al
  40f0b1:	add    al,al
  40f0b3:	add    BYTE PTR [eax],al
  40f0b5:	add    BYTE PTR [eax],al
  40f0b7:	add    BYTE PTR [eax],al
  40f0b9:	inc    esi
  40f0ba:	call   0x0:0x80040f0
  40f0c1:	add    BYTE PTR [eax],al
  40f0c3:	add    BYTE PTR [eax],al
  40f0c5:	add    BYTE PTR [ebx+0x40f114c0],cl
  40f0cb:	add    BYTE PTR [esi+0x40f0],ah
	...
  40f0e5:	add    BYTE PTR [eax],al
  40f0e7:	add    BYTE PTR [eax-0xf],dl
  40f0ea:	inc    eax
  40f0eb:	add    BYTE PTR [eax+eax*1],cl
  40f0ee:	add    BYTE PTR [eax],al
  40f0f0:	nop
  40f0f1:	adc    BYTE PTR [eax+0x0],al
  40f0f4:	rol    BYTE PTR [edx+0x40],1
  40f0f7:	add    ah,bl
  40f0f9:	inc    edx
  40f0fa:	inc    eax
  40f0fb:	add    al,ah
  40f0fd:	inc    edx
  40f0fe:	inc    eax
  40f0ff:	add    ah,ah
  40f101:	inc    edx
  40f102:	inc    eax
  40f103:	add    al,bl
  40f105:	inc    edx
  40f106:	inc    eax
  40f107:	add    BYTE PTR [eax],bh
  40f109:	inc    eax
  40f10a:	inc    eax
  40f10b:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f10f:	add    BYTE PTR [eax-0x43ffbeea],bh
  40f115:	pop    ss
  40f116:	inc    ecx
  40f117:	add    BYTE PTR [eax+0x17],cl
  40f11a:	inc    ecx
  40f11b:	add    BYTE PTR [edi+edx*1+0x41],bh
  40f11f:	add    BYTE PTR [edi+edx*1+0x41],bl
  40f123:	add    BYTE PTR [eax+0x44004117],bl
  40f129:	pop    ss
  40f12a:	inc    ecx
  40f12b:	add    BYTE PTR [eax-0xfffbeeb],bh
  40f131:	adc    eax,0x167c0041
  40f136:	inc    ecx
  40f137:	add    BYTE PTR [eax],bh
  40f139:	xor    eax,DWORD PTR [eax+0x0]
  40f13c:	cmp    BYTE PTR [ebx],dh
  40f13e:	inc    eax
  40f13f:	add    BYTE PTR [ebp+edx*1+0x17900041],ch
  40f146:	inc    ecx
  40f147:	add    BYTE PTR [esi+edx*1+0x41],al
  40f14b:	add    BYTE PTR [eax],bh
  40f14d:	push   ss
  40f14e:	inc    ecx
  40f14f:	add    BYTE PTR [edx],dl
  40f151:	push   esp
  40f152:	inc    ebx
  40f153:	jne    0x40f1c8
  40f155:	je     0x40f1c6
  40f157:	ins    DWORD PTR es:[edi],dx
  40f158:	push   esi
  40f159:	popa   
  40f15a:	jb     0x40f1c5
  40f15c:	popa   
  40f15d:	outs   dx,BYTE PTR ds:[esi]
  40f15e:	je     0x40f1b4
  40f160:	jns    0x40f1d2
  40f162:	gs nop
  40f164:	push   0x70040f1
  40f169:	adc    dl,BYTE PTR [ebx+eax*2+0x75]
  40f16d:	jae    0x40f1e3
  40f16f:	outs   dx,DWORD PTR ds:[esi]
  40f170:	ins    DWORD PTR es:[edi],dx
  40f171:	push   esi
  40f172:	popa   
  40f173:	jb     0x40f1de
  40f175:	popa   
  40f176:	outs   dx,BYTE PTR ds:[esi]
  40f177:	je     0x40f1cd
  40f179:	jns    0x40f1eb
  40f17b:	gs adc al,0xf1
  40f17e:	inc    eax
  40f17f:	add    ah,ah
  40f181:	adc    BYTE PTR [eax+0x0],al
  40f184:	add    BYTE PTR [eax],al
  40f186:	or     BYTE PTR [esi+0x61],dl
  40f189:	jb     0x40f1f4
  40f18b:	popa   
  40f18c:	outs   dx,BYTE PTR ds:[esi]
  40f18d:	je     0x40f202
  40f18f:	add    BYTE PTR [eax],al
  40f191:	lea    eax,[eax+0x0]
  40f194:	loopne 0x40f187
  40f196:	inc    eax
	...
  40f1b3:	add    al,ah
  40f1b5:	icebp  
  40f1b6:	inc    eax
  40f1b7:	add    BYTE PTR [eax+eax*1],cl
  40f1ba:	add    BYTE PTR [eax],al
  40f1bc:	sar    BYTE PTR [esi+0x40],0x0
  40f1c0:	rol    BYTE PTR [edx+0x40],1
  40f1c3:	add    ah,bl
  40f1c5:	inc    edx
  40f1c6:	inc    eax
  40f1c7:	add    al,ah
  40f1c9:	inc    edx
  40f1ca:	inc    eax
  40f1cb:	add    ah,ah
  40f1cd:	inc    edx
  40f1ce:	inc    eax
  40f1cf:	add    al,bl
  40f1d1:	inc    edx
  40f1d2:	inc    eax
  40f1d3:	add    BYTE PTR [eax],bh
  40f1d5:	inc    eax
  40f1d6:	inc    eax
  40f1d7:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f1db:	add    BYTE PTR [eax+0x16004040],dl
  40f1e1:	inc    ebp
  40f1e2:	push   esi
  40f1e3:	popa   
  40f1e4:	jb     0x40f24f
  40f1e6:	popa   
  40f1e7:	outs   dx,BYTE PTR ds:[esi]
  40f1e8:	je     0x40f233
  40f1ea:	outs   dx,BYTE PTR ds:[esi]
  40f1eb:	jbe    0x40f24e
  40f1ed:	ins    BYTE PTR es:[edi],dx
  40f1ee:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x6f727245
  40f1f6:	jb     0x40f188
  40f1f8:	inc    esp
  40f1f9:	repnz inc eax
	...
  40f217:	add    BYTE PTR [edx+esi*8+0x40],al
  40f21b:	add    BYTE PTR [eax+eax*1],cl
  40f21e:	add    BYTE PTR [eax],al
  40f220:	sar    BYTE PTR [esi+0x40],0x0
  40f224:	rol    BYTE PTR [edx+0x40],1
  40f227:	add    ah,bl
  40f229:	inc    edx
  40f22a:	inc    eax
  40f22b:	add    al,ah
  40f22d:	inc    edx
  40f22e:	inc    eax
  40f22f:	add    ah,ah
  40f231:	inc    edx
  40f232:	inc    eax
  40f233:	add    al,bl
  40f235:	inc    edx
  40f236:	inc    eax
  40f237:	add    BYTE PTR [eax],bh
  40f239:	inc    eax
  40f23a:	inc    eax
  40f23b:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f23f:	add    BYTE PTR [eax+0x15004040],dl
  40f245:	inc    ebp
  40f246:	push   esi
  40f247:	popa   
  40f248:	jb     0x40f2b3
  40f24a:	popa   
  40f24b:	outs   dx,BYTE PTR ds:[esi]
  40f24c:	je     0x40f2a2
  40f24e:	jns    0x40f2c0
  40f250:	gs inc ebx
  40f252:	popa   
  40f253:	jae    0x40f2c9
  40f255:	inc    ebp
  40f256:	jb     0x40f2ca
  40f258:	outs   dx,DWORD PTR ds:[esi]
  40f259:	jb     0x40f1e6
  40f25b:	shr    BYTE PTR [eax+0x40f2],0x0
	...
  40f27a:	add    BYTE PTR [eax],al
  40f27c:	test   al,0xf2
  40f27e:	inc    eax
  40f27f:	add    BYTE PTR [eax+eax*1],cl
  40f282:	add    BYTE PTR [eax],al
  40f284:	sar    BYTE PTR [esi+0x40],0x0
  40f288:	rol    BYTE PTR [edx+0x40],1
  40f28b:	add    ah,bl
  40f28d:	inc    edx
  40f28e:	inc    eax
  40f28f:	add    al,ah
  40f291:	inc    edx
  40f292:	inc    eax
  40f293:	add    ah,ah
  40f295:	inc    edx
  40f296:	inc    eax
  40f297:	add    al,bl
  40f299:	inc    edx
  40f29a:	inc    eax
  40f29b:	add    BYTE PTR [eax],bh
  40f29d:	inc    eax
  40f29e:	inc    eax
  40f29f:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f2a3:	add    BYTE PTR [eax+0x15004040],dl
  40f2a9:	inc    ebp
  40f2aa:	push   esi
  40f2ab:	popa   
  40f2ac:	jb     0x40f317
  40f2ae:	popa   
  40f2af:	outs   dx,BYTE PTR ds:[esi]
  40f2b0:	je     0x40f301
  40f2b2:	jbe    0x40f319
  40f2b4:	jb     0x40f31c
  40f2b6:	ins    BYTE PTR es:[edi],dx
  40f2b7:	outs   dx,DWORD PTR ds:[esi]
  40f2b8:	ja     0x40f2ff
  40f2ba:	jb     0x40f32e
  40f2bc:	outs   dx,DWORD PTR ds:[esi]
  40f2bd:	jb     0x40f24a
  40f2bf:	ror    BYTE PTR [ebx+esi*8],0x40
	...
  40f2df:	add    BYTE PTR [ebx+esi*8],cl
  40f2e2:	inc    eax
  40f2e3:	add    BYTE PTR [eax+eax*1],cl
  40f2e6:	add    BYTE PTR [eax],al
  40f2e8:	sar    BYTE PTR [esi+0x40],0x0
  40f2ec:	rol    BYTE PTR [edx+0x40],1
  40f2ef:	add    ah,bl
  40f2f1:	inc    edx
  40f2f2:	inc    eax
  40f2f3:	add    al,ah
  40f2f5:	inc    edx
  40f2f6:	inc    eax
  40f2f7:	add    ah,ah
  40f2f9:	inc    edx
  40f2fa:	inc    eax
  40f2fb:	add    al,bl
  40f2fd:	inc    edx
  40f2fe:	inc    eax
  40f2ff:	add    BYTE PTR [eax],bh
  40f301:	inc    eax
  40f302:	inc    eax
  40f303:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f307:	add    BYTE PTR [eax+0x17004040],dl
  40f30d:	inc    ebp
  40f30e:	push   esi
  40f30f:	popa   
  40f310:	jb     0x40f37b
  40f312:	popa   
  40f313:	outs   dx,BYTE PTR ds:[esi]
  40f314:	je     0x40f35f
  40f316:	outs   dx,BYTE PTR ds:[esi]
  40f317:	jbe    0x40f37a
  40f319:	ins    BYTE PTR es:[edi],dx
  40f31a:	imul   esp,DWORD PTR [ecx+eax*2+0x72],0x72724567
  40f322:	outs   dx,DWORD PTR ds:[esi]
  40f323:	jb     0x40f395
  40f325:	repz inc eax
	...
  40f343:	add    BYTE PTR [eax-0xd],dh
  40f346:	inc    eax
  40f347:	add    BYTE PTR [eax+eax*1],cl
  40f34a:	add    BYTE PTR [eax],al
  40f34c:	sar    BYTE PTR [esi+0x40],0x0
  40f350:	rol    BYTE PTR [edx+0x40],1
  40f353:	add    ah,bl
  40f355:	inc    edx
  40f356:	inc    eax
  40f357:	add    al,ah
  40f359:	inc    edx
  40f35a:	inc    eax
  40f35b:	add    ah,ah
  40f35d:	inc    edx
  40f35e:	inc    eax
  40f35f:	add    al,bl
  40f361:	inc    edx
  40f362:	inc    eax
  40f363:	add    BYTE PTR [eax],bh
  40f365:	inc    eax
  40f366:	inc    eax
  40f367:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f36b:	add    BYTE PTR [eax+0x17004040],dl
  40f371:	inc    ebp
  40f372:	push   esi
  40f373:	popa   
  40f374:	jb     0x40f3df
  40f376:	popa   
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	je     0x40f3bc
  40f37a:	popa   
  40f37b:	fs push esi
  40f37d:	popa   
  40f37e:	jb     0x40f3d4
  40f380:	jns    0x40f3f2
  40f382:	gs inc ebp
  40f384:	jb     0x40f3f8
  40f386:	outs   dx,DWORD PTR ds:[esi]
  40f387:	jb     0x40f35d
  40f389:	repz inc eax
	...
  40f3a7:	add    ah,dl
  40f3a9:	repz inc eax
  40f3ab:	add    BYTE PTR [eax+eax*1],cl
  40f3ae:	add    BYTE PTR [eax],al
  40f3b0:	sar    BYTE PTR [esi+0x40],0x0
  40f3b4:	rol    BYTE PTR [edx+0x40],1
  40f3b7:	add    ah,bl
  40f3b9:	inc    edx
  40f3ba:	inc    eax
  40f3bb:	add    al,ah
  40f3bd:	inc    edx
  40f3be:	inc    eax
  40f3bf:	add    ah,ah
  40f3c1:	inc    edx
  40f3c2:	inc    eax
  40f3c3:	add    al,bl
  40f3c5:	inc    edx
  40f3c6:	inc    eax
  40f3c7:	add    BYTE PTR [eax],bh
  40f3c9:	inc    eax
  40f3ca:	inc    eax
  40f3cb:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f3cf:	add    BYTE PTR [eax+0x15004040],dl
  40f3d5:	inc    ebp
  40f3d6:	push   esi
  40f3d7:	popa   
  40f3d8:	jb     0x40f443
  40f3da:	popa   
  40f3db:	outs   dx,BYTE PTR ds:[esi]
  40f3dc:	je     0x40f420
  40f3de:	popa   
  40f3df:	fs dec ecx
  40f3e1:	outs   dx,BYTE PTR ds:[esi]
  40f3e2:	fs gs js 0x40f42b
  40f3e6:	jb     0x40f45a
  40f3e8:	outs   dx,DWORD PTR ds:[esi]
  40f3e9:	jb     0x40f376
  40f3eb:	sar    BYTE PTR [eax],0xf4
  40f3ee:	inc    eax
	...
  40f40b:	add    BYTE PTR [eax],bh
  40f40d:	hlt    
  40f40e:	inc    eax
  40f40f:	add    BYTE PTR [eax+eax*1],cl
  40f412:	add    BYTE PTR [eax],al
  40f414:	sar    BYTE PTR [esi+0x40],0x0
  40f418:	rol    BYTE PTR [edx+0x40],1
  40f41b:	add    ah,bl
  40f41d:	inc    edx
  40f41e:	inc    eax
  40f41f:	add    al,ah
  40f421:	inc    edx
  40f422:	inc    eax
  40f423:	add    ah,ah
  40f425:	inc    edx
  40f426:	inc    eax
  40f427:	add    al,bl
  40f429:	inc    edx
  40f42a:	inc    eax
  40f42b:	add    BYTE PTR [eax],bh
  40f42d:	inc    eax
  40f42e:	inc    eax
  40f42f:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f433:	add    BYTE PTR [eax+0x18004040],dl
  40f439:	inc    ebp
  40f43a:	push   esi
  40f43b:	popa   
  40f43c:	jb     0x40f4a7
  40f43e:	popa   
  40f43f:	outs   dx,BYTE PTR ds:[esi]
  40f440:	je     0x40f483
  40f442:	jb     0x40f4b6
  40f444:	popa   
  40f445:	jns    0x40f493
  40f447:	outs   dx,DWORD PTR ds:[esi]
  40f448:	arpl   WORD PTR [ebx+0x65],bp
  40f44b:	fs inc ebp
  40f44d:	jb     0x40f4c1
  40f44f:	outs   dx,DWORD PTR ds:[esi]
  40f450:	jb     0x40f3df
  40f452:	inc    eax
  40f453:	add    BYTE PTR [eax+0x40f4],ah
	...
  40f471:	add    BYTE PTR [eax],al
  40f473:	add    BYTE PTR [eax+0xc0040f4],ah
  40f479:	add    BYTE PTR [eax],al
  40f47b:	add    al,al
  40f47d:	jle    0x40f4bf
  40f47f:	add    al,dl
  40f481:	inc    edx
  40f482:	inc    eax
  40f483:	add    ah,bl
  40f485:	inc    edx
  40f486:	inc    eax
  40f487:	add    al,ah
  40f489:	inc    edx
  40f48a:	inc    eax
  40f48b:	add    ah,ah
  40f48d:	inc    edx
  40f48e:	inc    eax
  40f48f:	add    al,bl
  40f491:	inc    edx
  40f492:	inc    eax
  40f493:	add    BYTE PTR [eax],bh
  40f495:	inc    eax
  40f496:	inc    eax
  40f497:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f49b:	add    BYTE PTR [eax+0x18004040],dl
  40f4a1:	inc    ebp
  40f4a2:	push   esi
  40f4a3:	popa   
  40f4a4:	jb     0x40f50f
  40f4a6:	popa   
  40f4a7:	outs   dx,BYTE PTR ds:[esi]
  40f4a8:	je     0x40f4eb
  40f4aa:	jb     0x40f51e
  40f4ac:	popa   
  40f4ad:	jns    0x40f4f2
  40f4af:	jb     0x40f516
  40f4b1:	popa   
  40f4b2:	je     0x40f519
  40f4b4:	inc    ebp
  40f4b5:	jb     0x40f529
  40f4b7:	outs   dx,DWORD PTR ds:[esi]
  40f4b8:	jb     0x40f447
  40f4ba:	inc    eax
  40f4bb:	add    BYTE PTR [eax],cl
  40f4bd:	cmc    
  40f4be:	inc    eax
	...
  40f4db:	add    BYTE PTR [eax],cl
  40f4dd:	cmc    
  40f4de:	inc    eax
  40f4df:	add    BYTE PTR [eax+eax*1],cl
  40f4e2:	add    BYTE PTR [eax],al
  40f4e4:	sar    BYTE PTR [esi+0x40],0x0
  40f4e8:	rol    BYTE PTR [edx+0x40],1
  40f4eb:	add    ah,bl
  40f4ed:	inc    edx
  40f4ee:	inc    eax
  40f4ef:	add    al,ah
  40f4f1:	inc    edx
  40f4f2:	inc    eax
  40f4f3:	add    ah,ah
  40f4f5:	inc    edx
  40f4f6:	inc    eax
  40f4f7:	add    al,bl
  40f4f9:	inc    edx
  40f4fa:	inc    eax
  40f4fb:	add    BYTE PTR [eax],bh
  40f4fd:	inc    eax
  40f4fe:	inc    eax
  40f4ff:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f503:	add    BYTE PTR [eax+0x14004040],dl
  40f509:	inc    ebp
  40f50a:	push   esi
  40f50b:	popa   
  40f50c:	jb     0x40f577
  40f50e:	popa   
  40f50f:	outs   dx,BYTE PTR ds:[esi]
  40f510:	je     0x40f560
  40f512:	outs   dx,DWORD PTR ds:[esi]
  40f513:	je     0x40f55e
  40f515:	ins    DWORD PTR es:[edi],dx
  40f516:	jo     0x40f584
  40f518:	inc    ebp
  40f519:	jb     0x40f58d
  40f51b:	outs   dx,DWORD PTR ds:[esi]
  40f51c:	jb     0x40f4ab
  40f51e:	inc    eax
  40f51f:	add    BYTE PTR [ebp+esi*8+0x40],ch
	...
  40f53f:	add    BYTE PTR [ebp+esi*8+0x40],ch
  40f543:	add    BYTE PTR [eax+eax*1],cl
  40f546:	add    BYTE PTR [eax],al
  40f548:	sar    BYTE PTR [esi+0x40],0x0
  40f54c:	rol    BYTE PTR [edx+0x40],1
  40f54f:	add    ah,bl
  40f551:	inc    edx
  40f552:	inc    eax
  40f553:	add    al,ah
  40f555:	inc    edx
  40f556:	inc    eax
  40f557:	add    ah,ah
  40f559:	inc    edx
  40f55a:	inc    eax
  40f55b:	add    al,bl
  40f55d:	inc    edx
  40f55e:	inc    eax
  40f55f:	add    BYTE PTR [eax],bh
  40f561:	inc    eax
  40f562:	inc    eax
  40f563:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f567:	add    BYTE PTR [eax+0x18004040],dl
  40f56d:	inc    ebp
  40f56e:	push   esi
  40f56f:	popa   
  40f570:	jb     0x40f5db
  40f572:	popa   
  40f573:	outs   dx,BYTE PTR ds:[esi]
  40f574:	je     0x40f5c5
  40f576:	jne    0x40f5ec
  40f578:	dec    edi
  40f579:	dec    bp
  40f57b:	gs ins DWORD PTR es:[edi],dx
  40f57d:	outs   dx,DWORD PTR ds:[esi]
  40f57e:	jb     0x40f5f9
  40f580:	inc    ebp
  40f581:	jb     0x40f5f5
  40f583:	outs   dx,DWORD PTR ds:[esi]
  40f584:	jb     0x40f513
  40f586:	inc    eax
  40f587:	add    ah,dl
  40f589:	cmc    
  40f58a:	inc    eax
	...
  40f5a7:	add    ah,dl
  40f5a9:	cmc    
  40f5aa:	inc    eax
  40f5ab:	add    BYTE PTR [eax+eax*1],cl
  40f5ae:	add    BYTE PTR [eax],al
  40f5b0:	sar    BYTE PTR [esi+0x40],0x0
  40f5b4:	rol    BYTE PTR [edx+0x40],1
  40f5b7:	add    ah,bl
  40f5b9:	inc    edx
  40f5ba:	inc    eax
  40f5bb:	add    al,ah
  40f5bd:	inc    edx
  40f5be:	inc    eax
  40f5bf:	add    ah,ah
  40f5c1:	inc    edx
  40f5c2:	inc    eax
  40f5c3:	add    al,bl
  40f5c5:	inc    edx
  40f5c6:	inc    eax
  40f5c7:	add    BYTE PTR [eax],bh
  40f5c9:	inc    eax
  40f5ca:	inc    eax
  40f5cb:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f5cf:	add    BYTE PTR [eax+0x17004040],dl
  40f5d5:	inc    ebp
  40f5d6:	push   esi
  40f5d7:	popa   
  40f5d8:	jb     0x40f643
  40f5da:	popa   
  40f5db:	outs   dx,BYTE PTR ds:[esi]
  40f5dc:	je     0x40f633
  40f5de:	outs   dx,BYTE PTR ds:[esi]
  40f5df:	gs js  0x40f652
  40f5e2:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  40f5e7:	inc    ebp
  40f5e8:	jb     0x40f65c
  40f5ea:	outs   dx,DWORD PTR ds:[esi]
  40f5eb:	jb     0x40f625
  40f5ed:	test   BYTE PTR [eax+0x0],0x0
	...
  40f609:	add    BYTE PTR [eax],al
  40f60b:	add    BYTE PTR [eax],bh
  40f60d:	test   BYTE PTR [eax+0x0],0xc
  40f611:	add    BYTE PTR [eax],al
  40f613:	add    al,al
  40f615:	jle    0x40f657
  40f617:	add    al,dl
  40f619:	inc    edx
  40f61a:	inc    eax
  40f61b:	add    ah,bl
  40f61d:	inc    edx
  40f61e:	inc    eax
  40f61f:	add    al,ah
  40f621:	inc    edx
  40f622:	inc    eax
  40f623:	add    ah,ah
  40f625:	inc    edx
  40f626:	inc    eax
  40f627:	add    al,bl
  40f629:	inc    edx
  40f62a:	inc    eax
  40f62b:	add    BYTE PTR [eax],bh
  40f62d:	inc    eax
  40f62e:	inc    eax
  40f62f:	add    BYTE PTR [eax+eax*2+0x40],dl
  40f633:	add    BYTE PTR [eax+0x15004040],dl
  40f639:	inc    ebp
  40f63a:	push   esi
  40f63b:	popa   
  40f63c:	jb     0x40f6a7
  40f63e:	popa   
  40f63f:	outs   dx,BYTE PTR ds:[esi]
  40f640:	je     0x40f686
  40f642:	imul   esi,DWORD PTR [ebx+0x70],0x68637461
  40f649:	inc    ebp
  40f64a:	jb     0x40f6be
  40f64c:	outs   dx,DWORD PTR ds:[esi]
  40f64d:	jb     0x40f5da
  40f64f:	rcl    BYTE PTR [ebp-0x75],0xec
  40f653:	push   0x0
  40f655:	xor    eax,eax
  40f657:	push   ebp
  40f658:	push   0x40f69a
  40f65d:	push   DWORD PTR fs:[eax]
  40f660:	mov    DWORD PTR fs:[eax],esp
  40f663:	lea    edx,[ebp-0x4]
  40f666:	mov    eax,ds:0x46dca0
  40f66b:	call   0x406f48
  40f670:	mov    ecx,DWORD PTR [ebp-0x4]
  40f673:	mov    dl,0x1
  40f675:	mov    eax,ds:0x40f1f8
  40f67a:	call   0x40c8b4
  40f67f:	call   0x4048fc
  40f684:	xor    eax,eax
  40f686:	pop    edx
  40f687:	pop    ecx
  40f688:	pop    ecx
  40f689:	mov    DWORD PTR fs:[eax],edx
  40f68c:	push   0x40f6a1
  40f691:	lea    eax,[ebp-0x4]
  40f694:	call   0x404f88
  40f699:	ret    
  40f69a:	jmp    0x40481c
  40f69f:	jmp    0x40f691
  40f6a1:	pop    ecx
  40f6a2:	pop    ebp
  40f6a3:	ret    
  40f6a4:	push   ebp
  40f6a5:	mov    ebp,esp
  40f6a7:	add    esp,0xffffffe4
  40f6aa:	push   ebx
  40f6ab:	push   esi
  40f6ac:	xor    ecx,ecx
  40f6ae:	mov    DWORD PTR [ebp-0x14],ecx
  40f6b1:	mov    DWORD PTR [ebp-0x18],ecx
  40f6b4:	mov    DWORD PTR [ebp-0x1c],ecx
  40f6b7:	mov    esi,edx
  40f6b9:	mov    ebx,eax
  40f6bb:	xor    eax,eax
  40f6bd:	push   ebp
  40f6be:	push   0x40f733
  40f6c3:	push   DWORD PTR fs:[eax]
  40f6c6:	mov    DWORD PTR fs:[eax],esp
  40f6c9:	lea    edx,[ebp-0x14]
  40f6cc:	mov    eax,ebx
  40f6ce:	call   0x411388
  40f6d3:	mov    eax,DWORD PTR [ebp-0x14]
  40f6d6:	mov    DWORD PTR [ebp-0x10],eax
  40f6d9:	mov    BYTE PTR [ebp-0xc],0xb
  40f6dd:	lea    edx,[ebp-0x18]
  40f6e0:	mov    eax,esi
  40f6e2:	call   0x411388
  40f6e7:	mov    eax,DWORD PTR [ebp-0x18]
  40f6ea:	mov    DWORD PTR [ebp-0x8],eax
  40f6ed:	mov    BYTE PTR [ebp-0x4],0xb
  40f6f1:	lea    eax,[ebp-0x10]
  40f6f4:	push   eax
  40f6f5:	push   0x1
  40f6f7:	lea    edx,[ebp-0x1c]
  40f6fa:	mov    eax,ds:0x46da2c
  40f6ff:	call   0x406f48
  40f704:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f707:	mov    dl,0x1
  40f709:	mov    eax,ds:0x40f1f8
  40f70e:	call   0x40c8f0
  40f713:	call   0x4048fc
  40f718:	xor    eax,eax
  40f71a:	pop    edx
  40f71b:	pop    ecx
  40f71c:	pop    ecx
  40f71d:	mov    DWORD PTR fs:[eax],edx
  40f720:	push   0x40f73a
  40f725:	lea    eax,[ebp-0x1c]
  40f728:	mov    edx,0x3
  40f72d:	call   0x404fac
  40f732:	ret    
  40f733:	jmp    0x40481c
  40f738:	jmp    0x40f725
  40f73a:	pop    esi
  40f73b:	pop    ebx
  40f73c:	mov    esp,ebp
  40f73e:	pop    ebp
  40f73f:	ret    
  40f740:	push   ebp
  40f741:	mov    ebp,esp
  40f743:	push   0x0
  40f745:	xor    eax,eax
  40f747:	push   ebp
  40f748:	push   0x40f78a
  40f74d:	push   DWORD PTR fs:[eax]
  40f750:	mov    DWORD PTR fs:[eax],esp
  40f753:	lea    edx,[ebp-0x4]
  40f756:	mov    eax,ds:0x46dc58
  40f75b:	call   0x406f48
  40f760:	mov    ecx,DWORD PTR [ebp-0x4]
  40f763:	mov    dl,0x1
  40f765:	mov    eax,ds:0x40f194
  40f76a:	call   0x40c8b4
  40f76f:	call   0x4048fc
  40f774:	xor    eax,eax
  40f776:	pop    edx
  40f777:	pop    ecx
  40f778:	pop    ecx
  40f779:	mov    DWORD PTR fs:[eax],edx
  40f77c:	push   0x40f791
  40f781:	lea    eax,[ebp-0x4]
  40f784:	call   0x404f88
  40f789:	ret    
  40f78a:	jmp    0x40481c
  40f78f:	jmp    0x40f781
  40f791:	pop    ecx
  40f792:	pop    ebp
  40f793:	ret    
  40f794:	push   ebp
  40f795:	mov    ebp,esp
  40f797:	add    esp,0xffffffe4
  40f79a:	push   ebx
  40f79b:	push   esi
  40f79c:	xor    ecx,ecx
  40f79e:	mov    DWORD PTR [ebp-0x14],ecx
  40f7a1:	mov    DWORD PTR [ebp-0x18],ecx
  40f7a4:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7a7:	mov    esi,edx
  40f7a9:	mov    ebx,eax
  40f7ab:	xor    eax,eax
  40f7ad:	push   ebp
  40f7ae:	push   0x40f823
  40f7b3:	push   DWORD PTR fs:[eax]
  40f7b6:	mov    DWORD PTR fs:[eax],esp
  40f7b9:	lea    edx,[ebp-0x14]
  40f7bc:	mov    eax,ebx
  40f7be:	call   0x411388
  40f7c3:	mov    eax,DWORD PTR [ebp-0x14]
  40f7c6:	mov    DWORD PTR [ebp-0x10],eax
  40f7c9:	mov    BYTE PTR [ebp-0xc],0xb
  40f7cd:	lea    edx,[ebp-0x18]
  40f7d0:	mov    eax,esi
  40f7d2:	call   0x411388
  40f7d7:	mov    eax,DWORD PTR [ebp-0x18]
  40f7da:	mov    DWORD PTR [ebp-0x8],eax
  40f7dd:	mov    BYTE PTR [ebp-0x4],0xb
  40f7e1:	lea    eax,[ebp-0x10]
  40f7e4:	push   eax
  40f7e5:	push   0x1
  40f7e7:	lea    edx,[ebp-0x1c]
  40f7ea:	mov    eax,ds:0x46dd20
  40f7ef:	call   0x406f48
  40f7f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7f7:	mov    dl,0x1
  40f7f9:	mov    eax,ds:0x40f25c
  40f7fe:	call   0x40c8f0
  40f803:	call   0x4048fc
  40f808:	xor    eax,eax
  40f80a:	pop    edx
  40f80b:	pop    ecx
  40f80c:	pop    ecx
  40f80d:	mov    DWORD PTR fs:[eax],edx
  40f810:	push   0x40f82a
  40f815:	lea    eax,[ebp-0x1c]
  40f818:	mov    edx,0x3
  40f81d:	call   0x404fac
  40f822:	ret    
  40f823:	jmp    0x40481c
  40f828:	jmp    0x40f815
  40f82a:	pop    esi
  40f82b:	pop    ebx
  40f82c:	mov    esp,ebp
  40f82e:	pop    ebp
  40f82f:	ret    
  40f830:	push   ebp
  40f831:	mov    ebp,esp
  40f833:	push   0x0
  40f835:	xor    eax,eax
  40f837:	push   ebp
  40f838:	push   0x40f87a
  40f83d:	push   DWORD PTR fs:[eax]
  40f840:	mov    DWORD PTR fs:[eax],esp
  40f843:	lea    edx,[ebp-0x4]
  40f846:	mov    eax,ds:0x46dc00
  40f84b:	call   0x406f48
  40f850:	mov    ecx,DWORD PTR [ebp-0x4]
  40f853:	mov    dl,0x1
  40f855:	mov    eax,ds:0x40f454
  40f85a:	call   0x40c8b4
  40f85f:	call   0x4048fc
  40f864:	xor    eax,eax
  40f866:	pop    edx
  40f867:	pop    ecx
  40f868:	pop    ecx
  40f869:	mov    DWORD PTR fs:[eax],edx
  40f86c:	push   0x40f881
  40f871:	lea    eax,[ebp-0x4]
  40f874:	call   0x404f88
  40f879:	ret    
  40f87a:	jmp    0x40481c
  40f87f:	jmp    0x40f871
  40f881:	pop    ecx
  40f882:	pop    ebp
  40f883:	ret    
  40f884:	push   ebp
  40f885:	mov    ebp,esp
  40f887:	mov    ecx,0x8
  40f88c:	push   0x0
  40f88e:	push   0x0
  40f890:	dec    ecx
  40f891:	jne    0x40f88c
  40f893:	push   ebx
  40f894:	mov    ebx,eax
  40f896:	xor    eax,eax
  40f898:	push   ebp
  40f899:	push   0x40fac9
  40f89e:	push   DWORD PTR fs:[eax]
  40f8a1:	mov    DWORD PTR fs:[eax],esp
  40f8a4:	mov    eax,ebx
  40f8a6:	cmp    eax,0x8002000a
  40f8ab:	jg     0x40f8e6
  40f8ad:	je     0x40f94d
  40f8b3:	cmp    eax,0x80020005
  40f8b8:	jg     0x40f8d7
  40f8ba:	je     0x40f913
  40f8bc:	sub    eax,0x80004001
  40f8c1:	je     0x40f9bf
  40f8c7:	sub    eax,0xbffe
  40f8cc:	je     0x40fa2e
  40f8d2:	jmp    0x40fa51
  40f8d7:	sub    eax,0x80020008
  40f8dc:	je     0x40f91d
  40f8de:	dec    eax
  40f8df:	je     0x40f943
  40f8e1:	jmp    0x40fa51
  40f8e6:	sub    eax,0x8002000b
  40f8eb:	je     0x40f973
  40f8f1:	sub    eax,0x2
  40f8f4:	je     0x40f999
  40f8fa:	sub    eax,0x50001
  40f8ff:	je     0x40f9e5
  40f905:	sub    eax,0x49
  40f908:	je     0x40fa0b
  40f90e:	jmp    0x40fa51
  40f913:	call   0x40f650
  40f918:	jmp    0x40faa1
  40f91d:	lea    edx,[ebp-0x4]
  40f920:	mov    eax,ds:0x46de2c
  40f925:	call   0x406f48
  40f92a:	mov    ecx,DWORD PTR [ebp-0x4]
  40f92d:	mov    dl,0x1
  40f92f:	mov    eax,ds:0x40f324
  40f934:	call   0x40c8b4
  40f939:	call   0x4048fc
  40f93e:	jmp    0x40faa1
  40f943:	call   0x40f740
  40f948:	jmp    0x40faa1
  40f94d:	lea    edx,[ebp-0x8]
  40f950:	mov    eax,ds:0x46daac
  40f955:	call   0x406f48
  40f95a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f95d:	mov    dl,0x1
  40f95f:	mov    eax,ds:0x40f25c
  40f964:	call   0x40c8b4
  40f969:	call   0x4048fc
  40f96e:	jmp    0x40faa1
  40f973:	lea    edx,[ebp-0xc]
  40f976:	mov    eax,ds:0x46dd9c
  40f97b:	call   0x406f48
  40f980:	mov    ecx,DWORD PTR [ebp-0xc]
  40f983:	mov    dl,0x1
  40f985:	mov    eax,ds:0x40f388
  40f98a:	call   0x40c8b4
  40f98f:	call   0x4048fc
  40f994:	jmp    0x40faa1
  40f999:	lea    edx,[ebp-0x10]
  40f99c:	mov    eax,ds:0x46de94
  40f9a1:	call   0x406f48
  40f9a6:	mov    ecx,DWORD PTR [ebp-0x10]
  40f9a9:	mov    dl,0x1
  40f9ab:	mov    eax,ds:0x40f3ec
  40f9b0:	call   0x40c8b4
  40f9b5:	call   0x4048fc
  40f9ba:	jmp    0x40faa1
  40f9bf:	lea    edx,[ebp-0x14]
  40f9c2:	mov    eax,ds:0x46dcd0
  40f9c7:	call   0x406f48
  40f9cc:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9cf:	mov    dl,0x1
  40f9d1:	mov    eax,ds:0x40f4bc
  40f9d6:	call   0x40c8b4
  40f9db:	call   0x4048fc
  40f9e0:	jmp    0x40faa1
  40f9e5:	lea    edx,[ebp-0x18]
  40f9e8:	mov    eax,ds:0x46db1c
  40f9ed:	call   0x406f48
  40f9f2:	mov    ecx,DWORD PTR [ebp-0x18]
  40f9f5:	mov    dl,0x1
  40f9f7:	mov    eax,ds:0x40f520
  40f9fc:	call   0x40c8b4
  40fa01:	call   0x4048fc
  40fa06:	jmp    0x40faa1
  40fa0b:	lea    edx,[ebp-0x1c]
  40fa0e:	mov    eax,ds:0x46db38
  40fa13:	call   0x406f48
  40fa18:	mov    ecx,DWORD PTR [ebp-0x1c]
  40fa1b:	mov    dl,0x1
  40fa1d:	mov    eax,ds:0x40f2c0
  40fa22:	call   0x40c8b4
  40fa27:	call   0x4048fc
  40fa2c:	jmp    0x40faa1
  40fa2e:	lea    edx,[ebp-0x20]
  40fa31:	mov    eax,ds:0x46daa8
  40fa36:	call   0x406f48
  40fa3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa3e:	mov    dl,0x1
  40fa40:	mov    eax,ds:0x40f588
  40fa45:	call   0x40c8b4
  40fa4a:	call   0x4048fc
  40fa4f:	jmp    0x40faa1
  40fa51:	mov    eax,ds:0x46de40
  40fa56:	mov    eax,DWORD PTR [eax]
  40fa58:	mov    DWORD PTR [ebp-0x38],eax
  40fa5b:	mov    BYTE PTR [ebp-0x34],0xb
  40fa5f:	mov    DWORD PTR [ebp-0x30],ebx
  40fa62:	mov    BYTE PTR [ebp-0x2c],0x0
  40fa66:	lea    edx,[ebp-0x3c]
  40fa69:	mov    eax,ebx
  40fa6b:	call   0x40c0a0
  40fa70:	mov    eax,DWORD PTR [ebp-0x3c]
  40fa73:	mov    DWORD PTR [ebp-0x28],eax
  40fa76:	mov    BYTE PTR [ebp-0x24],0xb
  40fa7a:	lea    eax,[ebp-0x38]
  40fa7d:	push   eax
  40fa7e:	push   0x2
  40fa80:	lea    edx,[ebp-0x40]
  40fa83:	mov    eax,ds:0x46dc04
  40fa88:	call   0x406f48
  40fa8d:	mov    ecx,DWORD PTR [ebp-0x40]
  40fa90:	mov    dl,0x1
  40fa92:	mov    eax,ds:0x407ec0
  40fa97:	call   0x40c8f0
  40fa9c:	call   0x4048fc
  40faa1:	xor    eax,eax
  40faa3:	pop    edx
  40faa4:	pop    ecx
  40faa5:	pop    ecx
  40faa6:	mov    DWORD PTR fs:[eax],edx
  40faa9:	push   0x40fad0
  40faae:	lea    eax,[ebp-0x40]
  40fab1:	mov    edx,0x2
  40fab6:	call   0x404fac
  40fabb:	lea    eax,[ebp-0x20]
  40fabe:	mov    edx,0x8
  40fac3:	call   0x404fac
  40fac8:	ret    
  40fac9:	jmp    0x40481c
  40face:	jmp    0x40faae
  40fad0:	pop    ebx
  40fad1:	mov    esp,ebp
  40fad3:	pop    ebp
  40fad4:	ret    
  40fad5:	lea    eax,[eax+0x0]
  40fad8:	test   eax,eax
  40fada:	je     0x40fae1
  40fadc:	call   0x40f884
  40fae1:	ret    
  40fae2:	mov    eax,eax
  40fae4:	push   ebx
  40fae5:	test   eax,eax
  40fae7:	je     0x40fb15
  40fae9:	mov    ebx,eax
  40faeb:	sub    ebx,0x80020005
  40faf1:	je     0x40fafa
  40faf3:	sub    ebx,0x5
  40faf6:	je     0x40fb05
  40faf8:	jmp    0x40fb10
  40fafa:	mov    eax,edx
  40fafc:	mov    edx,ecx
  40fafe:	call   0x40f6a4
  40fb03:	jmp    0x40fb15
  40fb05:	mov    eax,edx
  40fb07:	mov    edx,ecx
  40fb09:	call   0x40f794
  40fb0e:	jmp    0x40fb15
  40fb10:	call   0x40f884
  40fb15:	pop    ebx
  40fb16:	ret    
  40fb17:	nop
  40fb18:	push   ebp
  40fb19:	mov    ebp,esp
  40fb1b:	push   0x0
  40fb1d:	xor    eax,eax
  40fb1f:	push   ebp
  40fb20:	push   0x40fb62
  40fb25:	push   DWORD PTR fs:[eax]
  40fb28:	mov    DWORD PTR fs:[eax],esp
  40fb2b:	lea    edx,[ebp-0x4]
  40fb2e:	mov    eax,ds:0x46da20
  40fb33:	call   0x406f48
  40fb38:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb3b:	mov    dl,0x1
  40fb3d:	mov    eax,ds:0x40f5ec
  40fb42:	call   0x40c8b4
  40fb47:	call   0x4048fc
  40fb4c:	xor    eax,eax
  40fb4e:	pop    edx
  40fb4f:	pop    ecx
  40fb50:	pop    ecx
  40fb51:	mov    DWORD PTR fs:[eax],edx
  40fb54:	push   0x40fb69
  40fb59:	lea    eax,[ebp-0x4]
  40fb5c:	call   0x404f88
  40fb61:	ret    
  40fb62:	jmp    0x40481c
  40fb67:	jmp    0x40fb59
  40fb69:	pop    ecx
  40fb6a:	pop    ebp
  40fb6b:	ret    
  40fb6c:	push   ebx
  40fb6d:	mov    ebx,eax
  40fb6f:	mov    eax,ebx
  40fb71:	call   0x40fe04
  40fb76:	mov    WORD PTR [ebx],0x1
  40fb7b:	pop    ebx
  40fb7c:	ret    
  40fb7d:	lea    eax,[eax+0x0]
  40fb80:	push   ebp
  40fb81:	mov    ebp,esp
  40fb83:	push   ebx
  40fb84:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb87:	add    ecx,0xfffffd00
  40fb8d:	mov    edx,DWORD PTR [ecx+eax*8+0x4]
  40fb91:	add    edx,DWORD PTR [ecx+eax*8]
  40fb94:	mov    ebx,DWORD PTR [ebp+0x8]
  40fb97:	cmp    edx,DWORD PTR [ebx+eax*4-0x100]
  40fb9e:	setg   dl
  40fba1:	dec    eax
  40fba2:	test   dl,dl
  40fba4:	je     0x40fbaa
  40fba6:	test   eax,eax
  40fba8:	jge    0x40fb8d
  40fbaa:	mov    eax,edx
  40fbac:	pop    ebx
  40fbad:	pop    ebp
  40fbae:	ret    
  40fbaf:	nop
  40fbb0:	push   ebp
  40fbb1:	mov    ebp,esp
  40fbb3:	push   ebx
  40fbb4:	push   esi
  40fbb5:	mov    dl,0x1
  40fbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbba:	inc    DWORD PTR [ecx+eax*4-0x100]
  40fbc1:	mov    ecx,DWORD PTR [ebp+0x8]
  40fbc4:	mov    ecx,DWORD PTR [ecx+eax*8-0x2fc]
  40fbcb:	mov    ebx,ecx
  40fbcd:	mov    esi,DWORD PTR [ebp+0x8]
  40fbd0:	add    ebx,DWORD PTR [esi+eax*8-0x300]
  40fbd7:	mov    esi,DWORD PTR [ebp+0x8]
  40fbda:	cmp    ebx,DWORD PTR [esi+eax*4-0x100]
  40fbe1:	jg     0x40fc05
  40fbe3:	test   eax,eax
  40fbe5:	jne    0x40fbeb
  40fbe7:	xor    edx,edx
  40fbe9:	jmp    0x40fc05
  40fbeb:	mov    edx,DWORD PTR [ebp+0x8]
  40fbee:	mov    edx,DWORD PTR [ebp+0x8]
  40fbf1:	mov    DWORD PTR [edx+eax*4-0x100],ecx
  40fbf8:	mov    edx,DWORD PTR [ebp+0x8]
  40fbfb:	push   edx
  40fbfc:	dec    eax
  40fbfd:	call   0x40fbb0
  40fc02:	pop    ecx
  40fc03:	mov    edx,eax
  40fc05:	mov    eax,edx
  40fc07:	pop    esi
  40fc08:	pop    ebx
  40fc09:	pop    ebp
  40fc0a:	ret    
  40fc0b:	nop
  40fc0c:	push   ebp
  40fc0d:	mov    ebp,esp
  40fc0f:	add    esp,0xfffffce8
  40fc15:	push   ebx
  40fc16:	push   esi
  40fc17:	push   edi
  40fc18:	mov    DWORD PTR [ebp-0x304],eax
  40fc1e:	mov    eax,DWORD PTR [ebp-0x304]
  40fc24:	test   BYTE PTR [eax+0x1],0x20
  40fc28:	jne    0x40fc34
  40fc2a:	mov    eax,0x80070057
  40fc2f:	call   0x40fad8
  40fc34:	mov    eax,DWORD PTR [ebp-0x304]
  40fc3a:	movzx  eax,WORD PTR [eax]
  40fc3d:	mov    edx,eax
  40fc3f:	and    dx,0xfff
  40fc44:	cmp    dx,0xc
  40fc48:	jne    0x40fd70
  40fc4e:	mov    edx,DWORD PTR [ebp-0x304]
  40fc54:	test   ah,0x40
  40fc57:	je     0x40fc6c
  40fc59:	mov    eax,DWORD PTR [ebp-0x304]
  40fc5f:	mov    eax,DWORD PTR [eax+0x8]
  40fc62:	mov    eax,DWORD PTR [eax]
  40fc64:	mov    DWORD PTR [ebp-0x308],eax
  40fc6a:	jmp    0x40fc7b
  40fc6c:	mov    eax,DWORD PTR [ebp-0x304]
  40fc72:	mov    eax,DWORD PTR [eax+0x8]
  40fc75:	mov    DWORD PTR [ebp-0x308],eax
  40fc7b:	mov    eax,DWORD PTR [ebp-0x308]
  40fc81:	movzx  eax,WORD PTR [eax]
  40fc84:	mov    DWORD PTR [ebp-0x310],eax
  40fc8a:	mov    ebx,DWORD PTR [ebp-0x310]
  40fc90:	dec    ebx
  40fc91:	test   ebx,ebx
  40fc93:	jl     0x40fd00
  40fc95:	inc    ebx
  40fc96:	xor    edi,edi
  40fc98:	lea    esi,[ebp-0x300]
  40fc9e:	mov    eax,esi
  40fca0:	mov    DWORD PTR [ebp-0x318],eax
  40fca6:	mov    eax,DWORD PTR [ebp-0x318]
  40fcac:	add    eax,0x4
  40fcaf:	push   eax
  40fcb0:	lea    eax,[edi+0x1]
  40fcb3:	push   eax
  40fcb4:	mov    eax,DWORD PTR [ebp-0x308]
  40fcba:	push   eax
  40fcbb:	call   0x40ecf8
  40fcc0:	call   0x40fad8
  40fcc5:	lea    eax,[ebp-0x30c]
  40fccb:	push   eax
  40fccc:	lea    eax,[edi+0x1]
  40fccf:	push   eax
  40fcd0:	mov    eax,DWORD PTR [ebp-0x308]
  40fcd6:	push   eax
  40fcd7:	call   0x40ed00
  40fcdc:	call   0x40fad8
  40fce1:	mov    eax,DWORD PTR [ebp-0x318]
  40fce7:	mov    edx,DWORD PTR [ebp-0x30c]
  40fced:	sub    edx,DWORD PTR [eax+0x4]
  40fcf0:	inc    edx
  40fcf1:	mov    eax,DWORD PTR [ebp-0x318]
  40fcf7:	mov    DWORD PTR [eax],edx
  40fcf9:	inc    edi
  40fcfa:	add    esi,0x8
  40fcfd:	dec    ebx
  40fcfe:	jne    0x40fc9e
  40fd00:	mov    ebx,DWORD PTR [ebp-0x310]
  40fd06:	dec    ebx
  40fd07:	test   ebx,ebx
  40fd09:	jl     0x40fd25
  40fd0b:	inc    ebx
  40fd0c:	lea    eax,[ebp-0x2fc]
  40fd12:	lea    edx,[ebp-0x100]
  40fd18:	mov    ecx,DWORD PTR [eax]
  40fd1a:	mov    DWORD PTR [edx],ecx
  40fd1c:	add    edx,0x4
  40fd1f:	add    eax,0x8
  40fd22:	dec    ebx
  40fd23:	jne    0x40fd18
  40fd25:	push   ebp
  40fd26:	mov    ebx,DWORD PTR [ebp-0x310]
  40fd2c:	dec    ebx
  40fd2d:	mov    eax,ebx
  40fd2f:	call   0x40fb80
  40fd34:	pop    ecx
  40fd35:	test   al,al
  40fd37:	je     0x40fd63
  40fd39:	lea    eax,[ebp-0x314]
  40fd3f:	push   eax
  40fd40:	lea    eax,[ebp-0x100]
  40fd46:	push   eax
  40fd47:	mov    eax,DWORD PTR [ebp-0x308]
  40fd4d:	push   eax
  40fd4e:	call   0x40ed08
  40fd53:	call   0x40fad8
  40fd58:	mov    eax,DWORD PTR [ebp-0x314]
  40fd5e:	call   0x40fe04
  40fd63:	push   ebp
  40fd64:	mov    eax,ebx
  40fd66:	call   0x40fbb0
  40fd6b:	pop    ecx
  40fd6c:	test   al,al
  40fd6e:	jne    0x40fd25
  40fd70:	mov    eax,DWORD PTR [ebp-0x304]
  40fd76:	push   eax
  40fd77:	call   0x40e890
  40fd7c:	call   0x40fad8
  40fd81:	pop    edi
  40fd82:	pop    esi
  40fd83:	pop    ebx
  40fd84:	mov    esp,ebp
  40fd86:	pop    ebp
  40fd87:	ret    
  40fd88:	push   ebx
  40fd89:	push   esi
  40fd8a:	push   ecx
  40fd8b:	mov    ebx,eax
  40fd8d:	movzx  esi,WORD PTR [ebx]
  40fd90:	cmp    si,0x14
  40fd94:	jae    0x40fda3
  40fd96:	push   ebx
  40fd97:	call   0x40e890
  40fd9c:	call   0x40fad8
  40fda1:	jmp    0x40fdff
  40fda3:	cmp    si,0x100
  40fda8:	jne    0x40fdb9
  40fdaa:	mov    WORD PTR [ebx],0x0
  40fdaf:	lea    eax,[ebx+0x8]
  40fdb2:	call   0x404f88
  40fdb7:	jmp    0x40fdff
  40fdb9:	cmp    si,0x101
  40fdbe:	jne    0x40fdca
  40fdc0:	mov    eax,ebx
  40fdc2:	call   DWORD PTR ds:0x472978
  40fdc8:	jmp    0x40fdff
  40fdca:	test   si,0x2000
  40fdcf:	je     0x40fdda
  40fdd1:	mov    eax,ebx
  40fdd3:	call   0x40fc0c
  40fdd8:	jmp    0x40fdff
  40fdda:	mov    edx,esp
  40fddc:	mov    eax,esi
  40fdde:	call   0x4117e4
  40fde3:	test   al,al
  40fde5:	je     0x40fdf3
  40fde7:	mov    edx,ebx
  40fde9:	mov    eax,DWORD PTR [esp]
  40fdec:	mov    ecx,DWORD PTR [eax]
  40fdee:	call   DWORD PTR [ecx+0x24]
  40fdf1:	jmp    0x40fdff
  40fdf3:	push   ebx
  40fdf4:	call   0x40e890
  40fdf9:	push   ebx
  40fdfa:	call   0x40e888
  40fdff:	pop    edx
  40fe00:	pop    esi
  40fe01:	pop    ebx
  40fe02:	ret    
  40fe03:	nop
  40fe04:	test   WORD PTR [eax],0xbfe8
  40fe09:	jne    0x40fe11
  40fe0b:	mov    WORD PTR [eax],0x0
  40fe10:	ret    
  40fe11:	call   0x40fd88
  40fe16:	ret    
  40fe17:	nop
  40fe18:	push   eax
  40fe19:	call   0x40fe04
  40fe1e:	pop    eax
  40fe1f:	ret    
  40fe20:	push   ebp
  40fe21:	mov    ebp,esp
  40fe23:	push   ebx
  40fe24:	mov    ecx,DWORD PTR [ebp+0x8]
  40fe27:	add    ecx,0xfffffd00
  40fe2d:	mov    edx,DWORD PTR [ecx+eax*8+0x4]
  40fe31:	add    edx,DWORD PTR [ecx+eax*8]
  40fe34:	mov    ebx,DWORD PTR [ebp+0x8]
  40fe37:	cmp    edx,DWORD PTR [ebx+eax*4-0x100]
  40fe3e:	setg   dl
  40fe41:	dec    eax
  40fe42:	test   dl,dl
  40fe44:	je     0x40fe4a
  40fe46:	test   eax,eax
  40fe48:	jge    0x40fe2d
  40fe4a:	mov    eax,edx
  40fe4c:	pop    ebx
  40fe4d:	pop    ebp
  40fe4e:	ret    
  40fe4f:	nop
  40fe50:	push   ebp
  40fe51:	mov    ebp,esp
  40fe53:	push   ebx
  40fe54:	push   esi
  40fe55:	mov    dl,0x1
  40fe57:	mov    ecx,DWORD PTR [ebp+0x8]
  40fe5a:	inc    DWORD PTR [ecx+eax*4-0x100]
  40fe61:	mov    ecx,DWORD PTR [ebp+0x8]
  40fe64:	mov    ecx,DWORD PTR [ecx+eax*8-0x2fc]
  40fe6b:	mov    ebx,ecx
  40fe6d:	mov    esi,DWORD PTR [ebp+0x8]
  40fe70:	add    ebx,DWORD PTR [esi+eax*8-0x300]
  40fe77:	mov    esi,DWORD PTR [ebp+0x8]
  40fe7a:	cmp    ebx,DWORD PTR [esi+eax*4-0x100]
  40fe81:	jg     0x40fea5
  40fe83:	test   eax,eax
  40fe85:	jne    0x40fe8b
  40fe87:	xor    edx,edx
  40fe89:	jmp    0x40fea5
  40fe8b:	mov    edx,DWORD PTR [ebp+0x8]
  40fe8e:	mov    edx,DWORD PTR [ebp+0x8]
  40fe91:	mov    DWORD PTR [edx+eax*4-0x100],ecx
  40fe98:	mov    edx,DWORD PTR [ebp+0x8]
  40fe9b:	push   edx
  40fe9c:	dec    eax
  40fe9d:	call   0x40fe50
  40fea2:	pop    ecx
  40fea3:	mov    edx,eax
  40fea5:	mov    eax,edx
  40fea7:	pop    esi
  40fea8:	pop    ebx
  40fea9:	pop    ebp
  40feaa:	ret    
  40feab:	nop
  40feac:	push   ebp
  40fead:	mov    ebp,esp
  40feaf:	add    esp,0xfffffce0
  40feb5:	push   ebx
  40feb6:	push   esi
  40feb7:	push   edi
  40feb8:	mov    DWORD PTR [ebp-0x308],ecx
  40febe:	mov    ebx,edx
  40fec0:	mov    DWORD PTR [ebp-0x304],eax
  40fec6:	test   BYTE PTR [ebx+0x1],0x20
  40feca:	jne    0x40fed6
  40fecc:	mov    eax,0x80070057
  40fed1:	call   0x40fad8
  40fed6:	movzx  eax,WORD PTR [ebx]
  40fed9:	mov    edx,eax
  40fedb:	and    dx,0xfff
  40fee0:	cmp    dx,0xc
  40fee4:	jne    0x41005d
  40feea:	test   ah,0x40
  40feed:	je     0x40fefc
  40feef:	mov    eax,DWORD PTR [ebx+0x8]
  40fef2:	mov    eax,DWORD PTR [eax]
  40fef4:	mov    DWORD PTR [ebp-0x314],eax
  40fefa:	jmp    0x40ff05
  40fefc:	mov    eax,DWORD PTR [ebx+0x8]
  40feff:	mov    DWORD PTR [ebp-0x314],eax
  40ff05:	mov    eax,DWORD PTR [ebp-0x314]
  40ff0b:	movzx  eax,WORD PTR [eax]
  40ff0e:	mov    DWORD PTR [ebp-0x310],eax
  40ff14:	mov    ebx,DWORD PTR [ebp-0x310]
  40ff1a:	dec    ebx
  40ff1b:	test   ebx,ebx
  40ff1d:	jl     0x40ff8a
  40ff1f:	inc    ebx
  40ff20:	xor    edi,edi
  40ff22:	lea    esi,[ebp-0x300]
  40ff28:	mov    eax,esi
  40ff2a:	mov    DWORD PTR [ebp-0x320],eax
  40ff30:	mov    eax,DWORD PTR [ebp-0x320]
  40ff36:	add    eax,0x4
  40ff39:	push   eax
  40ff3a:	lea    eax,[edi+0x1]
  40ff3d:	push   eax
  40ff3e:	mov    eax,DWORD PTR [ebp-0x314]
  40ff44:	push   eax
  40ff45:	call   0x40ecf8
  40ff4a:	call   0x40fad8
  40ff4f:	lea    eax,[ebp-0x30c]
  40ff55:	push   eax
  40ff56:	lea    eax,[edi+0x1]
  40ff59:	push   eax
  40ff5a:	mov    eax,DWORD PTR [ebp-0x314]
  40ff60:	push   eax
  40ff61:	call   0x40ed00
  40ff66:	call   0x40fad8
  40ff6b:	mov    eax,DWORD PTR [ebp-0x320]
  40ff71:	mov    edx,DWORD PTR [ebp-0x30c]
  40ff77:	sub    edx,DWORD PTR [eax+0x4]
  40ff7a:	inc    edx
  40ff7b:	mov    eax,DWORD PTR [ebp-0x320]
  40ff81:	mov    DWORD PTR [eax],edx
  40ff83:	inc    edi
  40ff84:	add    esi,0x8
  40ff87:	dec    ebx
  40ff88:	jne    0x40ff28
  40ff8a:	lea    eax,[ebp-0x300]
  40ff90:	push   eax
  40ff91:	mov    eax,DWORD PTR [ebp-0x310]
  40ff97:	push   eax
  40ff98:	push   0xc
  40ff9a:	call   0x40ecf0
  40ff9f:	mov    esi,eax
  40ffa1:	test   esi,esi
  40ffa3:	jne    0x40ffaa
  40ffa5:	call   0x40f830
  40ffaa:	mov    eax,DWORD PTR [ebp-0x304]
  40ffb0:	call   0x40fe04
  40ffb5:	mov    eax,DWORD PTR [ebp-0x304]
  40ffbb:	mov    WORD PTR [eax],0x200c
  40ffc0:	mov    eax,DWORD PTR [ebp-0x304]
  40ffc6:	mov    DWORD PTR [eax+0x8],esi
  40ffc9:	mov    ebx,DWORD PTR [ebp-0x310]
  40ffcf:	dec    ebx
  40ffd0:	test   ebx,ebx
  40ffd2:	jl     0x40ffee
  40ffd4:	inc    ebx
  40ffd5:	lea    eax,[ebp-0x2fc]
  40ffdb:	lea    edx,[ebp-0x100]
  40ffe1:	mov    ecx,DWORD PTR [eax]
  40ffe3:	mov    DWORD PTR [edx],ecx
  40ffe5:	add    edx,0x4
  40ffe8:	add    eax,0x8
  40ffeb:	dec    ebx
  40ffec:	jne    0x40ffe1
  40ffee:	push   ebp
  40ffef:	mov    ebx,DWORD PTR [ebp-0x310]
  40fff5:	dec    ebx
  40fff6:	mov    eax,ebx
  40fff8:	call   0x40fe20
  40fffd:	pop    ecx
  40fffe:	test   al,al
  410000:	je     0x41004e
  410002:	lea    eax,[ebp-0x318]
  410008:	push   eax
  410009:	lea    eax,[ebp-0x100]
  41000f:	push   eax
  410010:	mov    eax,DWORD PTR [ebp-0x314]
  410016:	push   eax
  410017:	call   0x40ed08
  41001c:	call   0x40fad8
  410021:	lea    eax,[ebp-0x31c]
  410027:	push   eax
  410028:	lea    eax,[ebp-0x100]
  41002e:	push   eax
  41002f:	push   esi
  410030:	call   0x40ed08
  410035:	call   0x40fad8
  41003a:	mov    eax,DWORD PTR [ebp-0x318]
  410040:	mov    edx,eax
  410042:	mov    eax,DWORD PTR [ebp-0x31c]
  410048:	call   DWORD PTR [ebp-0x308]
  41004e:	push   ebp
  41004f:	mov    eax,ebx
  410051:	call   0x40fe50
  410056:	pop    ecx
  410057:	test   al,al
  410059:	jne    0x40ffee
  41005b:	jmp    0x41006f
  41005d:	push   ebx
  41005e:	mov    eax,DWORD PTR [ebp-0x304]
  410064:	push   eax
  410065:	call   0x40e898
  41006a:	call   0x40fad8
  41006f:	pop    edi
  410070:	pop    esi
  410071:	pop    ebx
  410072:	mov    esp,ebp
  410074:	pop    ebp
  410075:	ret    
  410076:	mov    eax,eax
  410078:	call   0x41012c
  41007d:	ret    
  41007e:	mov    eax,eax
  410080:	push   ebx
  410081:	push   esi
  410082:	push   edi
  410083:	push   ecx
  410084:	mov    esi,edx
  410086:	mov    ebx,eax
  410088:	test   WORD PTR [ebx],0xbfe8
  41008d:	je     0x410096
  41008f:	mov    eax,ebx
  410091:	call   0x40fd88
  410096:	movzx  edi,WORD PTR [esi]
  410099:	cmp    di,0x14
  41009d:	jae    0x4100ad
  41009f:	push   esi
  4100a0:	push   ebx
  4100a1:	call   0x40e898
  4100a6:	call   0x40fad8
  4100ab:	jmp    0x410126
  4100ad:	cmp    di,0x100
  4100b2:	jne    0x4100cb
  4100b4:	mov    WORD PTR [ebx],0x100
  4100b9:	xor    eax,eax
  4100bb:	mov    DWORD PTR [ebx+0x8],eax
  4100be:	lea    eax,[ebx+0x8]
  4100c1:	mov    edx,DWORD PTR [esi+0x8]
  4100c4:	call   0x404fdc
  4100c9:	jmp    0x410126
  4100cb:	cmp    di,0x101
  4100d0:	jne    0x4100e5
  4100d2:	mov    WORD PTR [ebx],di
  4100d5:	mov    eax,DWORD PTR [esi+0x8]
  4100d8:	mov    DWORD PTR [ebx+0x8],eax
  4100db:	mov    eax,ebx
  4100dd:	call   DWORD PTR ds:0x472980
  4100e3:	jmp    0x410126
  4100e5:	test   di,0x2000
  4100ea:	je     0x4100fc
  4100ec:	mov    ecx,0x410078
  4100f1:	mov    edx,esi
  4100f3:	mov    eax,ebx
  4100f5:	call   0x40feac
  4100fa:	jmp    0x410126
  4100fc:	mov    edx,esp
  4100fe:	mov    eax,edi
  410100:	call   0x4117e4
  410105:	test   al,al
  410107:	je     0x41011a
  410109:	push   0x0
  41010b:	mov    ecx,esi
  41010d:	mov    edx,ebx
  41010f:	mov    eax,DWORD PTR [esp+0x4]
  410113:	mov    ebx,DWORD PTR [eax]
  410115:	call   DWORD PTR [ebx+0x28]
  410118:	jmp    0x410126
  41011a:	push   esi
  41011b:	push   ebx
  41011c:	call   0x40e898
  410121:	call   0x40fad8
  410126:	pop    edx
  410127:	pop    edi
  410128:	pop    esi
  410129:	pop    ebx
  41012a:	ret    
  41012b:	nop
  41012c:	push   ebx
  41012d:	push   esi
  41012e:	mov    ebx,edx
  410130:	mov    esi,eax
  410132:	cmp    esi,ebx
  410134:	je     0x41016c
  410136:	test   WORD PTR [ebx],0xbfe8
  41013b:	jne    0x410163
  41013d:	test   WORD PTR [esi],0xbfe8
  410142:	je     0x41014b
  410144:	mov    eax,esi
  410146:	call   0x40fd88
  41014b:	mov    eax,DWORD PTR [ebx]
  41014d:	mov    DWORD PTR [esi],eax
  41014f:	mov    eax,DWORD PTR [ebx+0x4]
  410152:	mov    DWORD PTR [esi+0x4],eax
  410155:	mov    eax,DWORD PTR [ebx+0x8]
  410158:	mov    DWORD PTR [esi+0x8],eax
  41015b:	mov    eax,DWORD PTR [ebx+0xc]
  41015e:	mov    DWORD PTR [esi+0xc],eax
  410161:	jmp    0x41016c
  410163:	mov    edx,ebx
  410165:	mov    eax,esi
  410167:	call   0x410080
  41016c:	pop    esi
  41016d:	pop    ebx
  41016e:	ret    
  41016f:	nop
  410170:	push   ebp
  410171:	mov    ebp,esp
  410173:	push   ebx
  410174:	mov    ebx,eax
  410176:	mov    eax,ebx
  410178:	call   0x405790
  41017d:	push   eax
  41017e:	push   0x0
  410180:	push   0x400
  410185:	push   DWORD PTR [ebp+0xc]
  410188:	push   DWORD PTR [ebp+0x8]
  41018b:	mov    eax,ds:0x46dab8
  410190:	mov    eax,DWORD PTR [eax]
  410192:	call   eax
  410194:	mov    cx,0x8
  410198:	mov    dx,0x6
  41019c:	call   0x40fae4
  4101a1:	pop    ebx
  4101a2:	pop    ebp
  4101a3:	ret    0x8
  4101a6:	mov    eax,eax
  4101a8:	push   ebp
  4101a9:	mov    ebp,esp
  4101ab:	push   ebx
  4101ac:	mov    ebx,eax
  4101ae:	mov    eax,ebx
  4101b0:	call   0x405790
  4101b5:	push   eax
  4101b6:	push   0x0
  4101b8:	push   0x400
  4101bd:	push   DWORD PTR [ebp+0xc]
  4101c0:	push   DWORD PTR [ebp+0x8]
  4101c3:	mov    eax,ds:0x46dc80
  4101c8:	mov    eax,DWORD PTR [eax]
  4101ca:	call   eax
  4101cc:	mov    cx,0x8
  4101d0:	mov    dx,0x7
  4101d4:	call   0x40fae4
  4101d9:	pop    ebx
  4101da:	pop    ebp
  4101db:	ret    0x8
  4101de:	mov    eax,eax
  4101e0:	push   ebp
  4101e1:	mov    ebp,esp
  4101e3:	xor    ecx,ecx
  4101e5:	push   ecx
  4101e6:	push   ecx
  4101e7:	push   ecx
  4101e8:	push   ecx
  4101e9:	push   ebx
  4101ea:	push   esi
  4101eb:	mov    ebx,edx
  4101ed:	mov    esi,eax
  4101ef:	xor    eax,eax
  4101f1:	push   ebp
  4101f2:	push   0x410298
  4101f7:	push   DWORD PTR fs:[eax]
  4101fa:	mov    DWORD PTR fs:[eax],esp
  4101fd:	mov    eax,ebx
  4101ff:	call   0x405790
  410204:	push   eax
  410205:	push   0x0
  410207:	push   0x400
  41020c:	push   esi
  41020d:	mov    eax,ds:0x46ddac
  410212:	mov    eax,DWORD PTR [eax]
  410214:	call   eax
  410216:	mov    cx,0x8
  41021a:	mov    dx,0xb
  41021e:	call   0x40fae4
  410223:	movzx  eax,BYTE PTR ds:0x461a18
  41022a:	sub    al,0x1
  41022c:	jb     0x41027d
  41022e:	je     0x410236
  410230:	dec    al
  410232:	je     0x410257
  410234:	jmp    0x410278
  410236:	lea    eax,[ebp-0x8]
  410239:	mov    edx,DWORD PTR [ebx]
  41023b:	call   0x405210
  410240:	mov    eax,DWORD PTR [ebp-0x8]
  410243:	lea    edx,[ebp-0x4]
  410246:	call   0x408448
  41024b:	mov    edx,DWORD PTR [ebp-0x4]
  41024e:	mov    eax,ebx
  410250:	call   0x4058e0
  410255:	jmp    0x41027d
  410257:	lea    eax,[ebp-0x10]
  41025a:	mov    edx,DWORD PTR [ebx]
  41025c:	call   0x405210
  410261:	mov    eax,DWORD PTR [ebp-0x10]
  410264:	lea    edx,[ebp-0xc]
  410267:	call   0x4083c0
  41026c:	mov    edx,DWORD PTR [ebp-0xc]
  41026f:	mov    eax,ebx
  410271:	call   0x4058e0
  410276:	jmp    0x41027d
  410278:	call   0x40f740
  41027d:	xor    eax,eax
  41027f:	pop    edx
  410280:	pop    ecx
  410281:	pop    ecx
  410282:	mov    DWORD PTR fs:[eax],edx
  410285:	push   0x41029f
  41028a:	lea    eax,[ebp-0x10]
  41028d:	mov    edx,0x4
  410292:	call   0x404fac
  410297:	ret    
  410298:	jmp    0x40481c
  41029d:	jmp    0x41028a
  41029f:	pop    esi
  4102a0:	pop    ebx
  4102a1:	mov    esp,ebp
  4102a3:	pop    ebp
  4102a4:	ret    
  4102a5:	lea    eax,[eax+0x0]
  4102a8:	push   ebp
  4102a9:	mov    ebp,esp
  4102ab:	add    esp,0xffffffe8
  4102ae:	push   ebx
  4102af:	push   esi
  4102b0:	xor    ecx,ecx
  4102b2:	mov    DWORD PTR [ebp-0x14],ecx
  4102b5:	mov    DWORD PTR [ebp-0x18],ecx
  4102b8:	mov    esi,edx
  4102ba:	mov    ebx,eax
  4102bc:	xor    eax,eax
  4102be:	push   ebp
  4102bf:	push   0x410367
  4102c4:	push   DWORD PTR fs:[eax]
  4102c7:	mov    DWORD PTR fs:[eax],esp
  4102ca:	lea    eax,[ebp-0x10]
  4102cd:	push   eax
  4102ce:	call   0x40e888
  4102d3:	xor    eax,eax
  4102d5:	push   ebp
  4102d6:	push   0x410345
  4102db:	push   DWORD PTR fs:[eax]
  4102de:	mov    DWORD PTR fs:[eax],esp
  4102e1:	push   0x8
  4102e3:	push   0x0
  4102e5:	push   0x400
  4102ea:	push   ebx
  4102eb:	lea    eax,[ebp-0x10]
  4102ee:	push   eax
  4102ef:	mov    eax,ds:0x46ddcc
  4102f4:	mov    eax,DWORD PTR [eax]
  4102f6:	call   eax
  4102f8:	movzx  edx,WORD PTR [ebx]
  4102fb:	mov    cx,0x100
  4102ff:	call   0x40fae4
  410304:	lea    eax,[ebp-0x14]
  410307:	push   eax
  410308:	lea    eax,[ebp-0x18]
  41030b:	mov    edx,DWORD PTR [ebp-0x8]
  41030e:	call   0x4058a4
  410313:	mov    eax,DWORD PTR [ebp-0x18]
  410316:	mov    ecx,0x7fffffff
  41031b:	mov    edx,0x1
  410320:	call   0x405990
  410325:	mov    edx,DWORD PTR [ebp-0x14]
  410328:	mov    eax,esi
  41032a:	call   0x405210
  41032f:	xor    eax,eax
  410331:	pop    edx
  410332:	pop    ecx
  410333:	pop    ecx
  410334:	mov    DWORD PTR fs:[eax],edx
  410337:	push   0x41034c
  41033c:	lea    eax,[ebp-0x10]
  41033f:	call   0x40fe04
  410344:	ret    
  410345:	jmp    0x40481c
  41034a:	jmp    0x41033c
  41034c:	xor    eax,eax
  41034e:	pop    edx
  41034f:	pop    ecx
  410350:	pop    ecx
  410351:	mov    DWORD PTR fs:[eax],edx
  410354:	push   0x41036e
  410359:	lea    eax,[ebp-0x18]
  41035c:	mov    edx,0x2
  410361:	call   0x4057a8
  410366:	ret    
  410367:	jmp    0x40481c
  41036c:	jmp    0x410359
  41036e:	pop    esi
  41036f:	pop    ebx
  410370:	mov    esp,ebp
  410372:	pop    ebp
  410373:	ret    
  410374:	push   ebp
  410375:	mov    ebp,esp
  410377:	add    esp,0xfffffff0
  41037a:	push   ebx
  41037b:	push   esi
  41037c:	mov    esi,edx
  41037e:	mov    ebx,eax
  410380:	lea    eax,[ebp-0x10]
  410383:	push   eax
  410384:	call   0x40e888
  410389:	xor    eax,eax
  41038b:	push   ebp
  41038c:	push   0x4103ca
  410391:	push   DWORD PTR fs:[eax]
  410394:	mov    DWORD PTR fs:[eax],esp
  410397:	mov    edx,ebx
  410399:	lea    eax,[ebp-0x10]
  41039c:	call   0x41012c
  4103a1:	lea    eax,[ebp-0x10]
  4103a4:	call   DWORD PTR ds:0x47297c
  4103aa:	lea    edx,[ebp-0x10]
  4103ad:	mov    eax,esi
  4103af:	call   0x410460
  4103b4:	xor    eax,eax
  4103b6:	pop    edx
  4103b7:	pop    ecx
  4103b8:	pop    ecx
  4103b9:	mov    DWORD PTR fs:[eax],edx
  4103bc:	push   0x4103d1
  4103c1:	lea    eax,[ebp-0x10]
  4103c4:	call   0x40fe04
  4103c9:	ret    
  4103ca:	jmp    0x40481c
  4103cf:	jmp    0x4103c1
  4103d1:	pop    esi
  4103d2:	pop    ebx
  4103d3:	mov    esp,ebp
  4103d5:	pop    ebp
  4103d6:	ret    
  4103d7:	nop
  4103d8:	push   ebp
  4103d9:	mov    ebp,esp
  4103db:	add    esp,0xffffffe4
  4103de:	push   ebx
  4103df:	mov    DWORD PTR [ebp-0x4],edx
  4103e2:	mov    ebx,eax
  4103e4:	mov    eax,DWORD PTR [ebp-0x4]
  4103e7:	test   eax,eax
  4103e9:	je     0x4103ef
  4103eb:	xor    edx,edx
  4103ed:	mov    DWORD PTR [eax],edx
  4103ef:	lea    edx,[ebp-0xc]
  4103f2:	movzx  eax,WORD PTR [ebx]
  4103f5:	call   0x4117e4
  4103fa:	mov    BYTE PTR [ebp-0x5],al
  4103fd:	cmp    BYTE PTR [ebp-0x5],0x0
  410401:	je     0x410454
  410403:	lea    eax,[ebp-0x1c]
  410406:	push   eax
  410407:	call   0x40e888
  41040c:	xor    eax,eax
  41040e:	push   ebp
  41040f:	push   0x41044d
  410414:	push   DWORD PTR fs:[eax]
  410417:	mov    DWORD PTR fs:[eax],esp
  41041a:	push   0x100
  41041f:	mov    ecx,ebx
  410421:	lea    edx,[ebp-0x1c]
  410424:	mov    eax,DWORD PTR [ebp-0xc]
  410427:	mov    ebx,DWORD PTR [eax]
  410429:	call   DWORD PTR [ebx+0x1c]
  41042c:	mov    eax,DWORD PTR [ebp-0x4]
  41042f:	mov    edx,DWORD PTR [ebp-0x14]
  410432:	call   0x404fdc
  410437:	xor    eax,eax
  410439:	pop    edx
  41043a:	pop    ecx
  41043b:	pop    ecx
  41043c:	mov    DWORD PTR fs:[eax],edx
  41043f:	push   0x410454
  410444:	lea    eax,[ebp-0x1c]
  410447:	call   0x40fe04
  41044c:	ret    
  41044d:	jmp    0x40481c
  410452:	jmp    0x410444
  410454:	movzx  eax,BYTE PTR [ebp-0x5]
  410458:	pop    ebx
  410459:	mov    esp,ebp
  41045b:	pop    ebp
  41045c:	ret    
  41045d:	lea    eax,[eax+0x0]
  410460:	push   ebp
  410461:	mov    ebp,esp
  410463:	mov    ecx,0xe
  410468:	push   0x0
  41046a:	push   0x0
  41046c:	dec    ecx
  41046d:	jne    0x410468
  41046f:	push   ecx
  410470:	push   ebx
  410471:	push   esi
  410472:	mov    ebx,edx
  410474:	mov    esi,eax
  410476:	xor    eax,eax
  410478:	push   ebp
  410479:	push   0x41098c
  41047e:	push   DWORD PTR fs:[eax]
  410481:	mov    DWORD PTR fs:[eax],esp
  410484:	movzx  eax,WORD PTR [ebx]
  410487:	movzx  edx,ax
  41048a:	cmp    edx,0x14
  41048d:	ja     0x4106c9
  410493:	jmp    DWORD PTR [edx*4+0x41049a]
  41049a:	out    dx,al
  41049b:	add    al,0x41
  41049d:	add    dl,bh
  41049f:	add    al,0x41
  4104a1:	add    BYTE PTR [edx],ah
  4104a3:	add    eax,0x53d0041
  4104a8:	inc    ecx
  4104a9:	add    BYTE PTR [edi+0x5],dl
  4104ac:	inc    ecx
  4104ad:	add    BYTE PTR [eax+0x5],bh
  4104b0:	inc    ecx
  4104b1:	add    BYTE PTR [ecx-0x49ffbefb],bl
  4104b7:	add    eax,0x5d30041
  4104bc:	inc    ecx
  4104bd:	add    BYTE PTR [eax-0x36ffbefa],dh
  4104c3:	push   es
  4104c4:	inc    ecx
  4104c5:	add    al,bh
  4104c7:	add    eax,0x69f0041
  4104cc:	inc    ecx
  4104cd:	add    BYTE PTR [eax-0x36ffbefa],dh
  4104d3:	push   es
  4104d4:	inc    ecx
  4104d5:	add    cl,cl
  4104d7:	push   es
  4104d8:	inc    ecx
  4104d9:	add    BYTE PTR [ebx],dl
  4104db:	push   es
  4104dc:	inc    ecx
  4104dd:	add    BYTE PTR [esi],ch
  4104df:	push   es
  4104e0:	inc    ecx
  4104e1:	add    BYTE PTR [ecx+0x6],cl
  4104e4:	inc    ecx
  4104e5:	add    BYTE PTR [esi+eax*1+0x41],ah
  4104e9:	add    BYTE PTR [edx-0x74ffbefa],al
  4104ef:	(bad)  
  4104f0:	call   0x404f88
  4104f5:	jmp    0x41093d
  4104fa:	cmp    BYTE PTR ds:0x461a0c,0x0
  410501:	je     0x410510
  410503:	mov    dx,0x100
  410507:	mov    ax,0x1
  41050b:	call   0x40f6a4
  410510:	mov    eax,esi
  410512:	mov    edx,DWORD PTR ds:0x461a10
  410518:	call   0x404fdc
  41051d:	jmp    0x41093d
  410522:	lea    edx,[ebp-0x4]
  410525:	movsx  eax,WORD PTR [ebx+0x8]
  410529:	call   0x4089ec
  41052e:	mov    edx,DWORD PTR [ebp-0x4]
  410531:	mov    eax,esi
  410533:	call   0x404fdc
  410538:	jmp    0x41093d
  41053d:	lea    edx,[ebp-0x8]
  410540:	mov    eax,DWORD PTR [ebx+0x8]
  410543:	call   0x4089ec
  410548:	mov    edx,DWORD PTR [ebp-0x8]
  41054b:	mov    eax,esi
  41054d:	call   0x404fdc
  410552:	jmp    0x41093d
  410557:	fld    DWORD PTR [ebx+0x8]
  41055a:	add    esp,0xfffffff4
  41055d:	fstp   TBYTE PTR [esp]
  410560:	fwait
  410561:	lea    eax,[ebp-0xc]
  410564:	call   0x40a610
  410569:	mov    edx,DWORD PTR [ebp-0xc]
  41056c:	mov    eax,esi
  41056e:	call   0x404fdc
  410573:	jmp    0x41093d
  410578:	fld    QWORD PTR [ebx+0x8]
  41057b:	add    esp,0xfffffff4
  41057e:	fstp   TBYTE PTR [esp]
  410581:	fwait
  410582:	lea    eax,[ebp-0x10]
  410585:	call   0x40a610
  41058a:	mov    edx,DWORD PTR [ebp-0x10]
  41058d:	mov    eax,esi
  41058f:	call   0x404fdc
  410594:	jmp    0x41093d
  410599:	push   DWORD PTR [ebx+0xc]
  41059c:	push   DWORD PTR [ebx+0x8]
  41059f:	lea    eax,[ebp-0x14]
  4105a2:	call   0x410170
  4105a7:	mov    edx,DWORD PTR [ebp-0x14]
  4105aa:	mov    eax,esi
  4105ac:	call   0x405210
  4105b1:	jmp    0x41093d
  4105b6:	push   DWORD PTR [ebx+0xc]
  4105b9:	push   DWORD PTR [ebx+0x8]
  4105bc:	lea    eax,[ebp-0x18]
  4105bf:	call   0x4101a8
  4105c4:	mov    edx,DWORD PTR [ebp-0x18]
  4105c7:	mov    eax,esi
  4105c9:	call   0x405210
  4105ce:	jmp    0x41093d
  4105d3:	lea    eax,[ebp-0x1c]
  4105d6:	push   eax
  4105d7:	mov    eax,DWORD PTR [ebx+0x8]
  4105da:	mov    ecx,0x7fffffff
  4105df:	mov    edx,0x1
  4105e4:	call   0x405990
  4105e9:	mov    edx,DWORD PTR [ebp-0x1c]
  4105ec:	mov    eax,esi
  4105ee:	call   0x405210
  4105f3:	jmp    0x41093d
  4105f8:	lea    edx,[ebp-0x20]
  4105fb:	movzx  eax,WORD PTR [ebx+0x8]
  4105ff:	call   0x4101e0
  410604:	mov    edx,DWORD PTR [ebp-0x20]
  410607:	mov    eax,esi
  410609:	call   0x405210
  41060e:	jmp    0x41093d
  410613:	lea    edx,[ebp-0x24]
  410616:	movsx  eax,BYTE PTR [ebx+0x8]
  41061a:	call   0x4089ec
  41061f:	mov    edx,DWORD PTR [ebp-0x24]
  410622:	mov    eax,esi
  410624:	call   0x404fdc
  410629:	jmp    0x41093d
  41062e:	lea    edx,[ebp-0x28]
  410631:	movzx  eax,BYTE PTR [ebx+0x8]
  410635:	call   0x4089ec
  41063a:	mov    edx,DWORD PTR [ebp-0x28]
  41063d:	mov    eax,esi
  41063f:	call   0x404fdc
  410644:	jmp    0x41093d
  410649:	lea    edx,[ebp-0x2c]
  41064c:	movzx  eax,WORD PTR [ebx+0x8]
  410650:	call   0x4089ec
  410655:	mov    edx,DWORD PTR [ebp-0x2c]
  410658:	mov    eax,esi
  41065a:	call   0x404fdc
  41065f:	jmp    0x41093d
  410664:	mov    eax,DWORD PTR [ebx+0x8]
  410667:	xor    edx,edx
  410669:	push   edx
  41066a:	push   eax
  41066b:	lea    eax,[ebp-0x30]
  41066e:	call   0x408ad8
  410673:	mov    edx,DWORD PTR [ebp-0x30]
  410676:	mov    eax,esi
  410678:	call   0x404fdc
  41067d:	jmp    0x41093d
  410682:	push   DWORD PTR [ebx+0xc]
  410685:	push   DWORD PTR [ebx+0x8]
  410688:	lea    eax,[ebp-0x34]
  41068b:	call   0x408ad8
  410690:	mov    edx,DWORD PTR [ebp-0x34]
  410693:	mov    eax,esi
  410695:	call   0x404fdc
  41069a:	jmp    0x41093d
  41069f:	mov    eax,DWORD PTR [ebx+0x8]
  4106a2:	mov    edx,eax
  4106a4:	mov    eax,esi
  4106a6:	call   0x410460
  4106ab:	jmp    0x41093d
  4106b0:	lea    edx,[ebp-0x38]
  4106b3:	mov    eax,ebx
  4106b5:	call   0x4102a8
  4106ba:	mov    edx,DWORD PTR [ebp-0x38]
  4106bd:	mov    eax,esi
  4106bf:	call   0x404fdc
  4106c4:	jmp    0x41093d
  4106c9:	mov    edx,eax
  4106cb:	sub    dx,0x100
  4106d0:	je     0x4106d9
  4106d2:	dec    dx
  4106d5:	je     0x4106e8
  4106d7:	jmp    0x410701
  4106d9:	mov    eax,esi
  4106db:	mov    edx,DWORD PTR [ebx+0x8]
  4106de:	call   0x404fdc
  4106e3:	jmp    0x41093d
  4106e8:	lea    edx,[ebp-0x3c]
  4106eb:	mov    eax,ebx
  4106ed:	call   0x410374
  4106f2:	mov    edx,DWORD PTR [ebp-0x3c]
  4106f5:	mov    eax,esi
  4106f7:	call   0x404fdc
  4106fc:	jmp    0x41093d
  410701:	test   ah,0x40
  410704:	je     0x410915
  41070a:	movzx  eax,ax
  41070d:	and    eax,0xffffbfff
  410712:	cmp    eax,0x14
  410715:	ja     0x4108ff
  41071b:	jmp    DWORD PTR [eax*4+0x410722]
  410722:	dec    DWORD PTR [eax]
  410724:	inc    ecx
  410725:	add    bh,bh
  410727:	or     BYTE PTR [ecx+0x0],al
  41072a:	jbe    0x410733
  41072c:	inc    ecx
  41072d:	add    BYTE PTR [ebx-0x50ffbef9],dl
  410733:	pop    es
  410734:	inc    ecx
  410735:	add    dl,dl
  410737:	pop    es
  410738:	inc    ecx
  410739:	add    ch,dh
  41073b:	pop    es
  41073c:	inc    ecx
  41073d:	add    BYTE PTR [eax+ecx*1],dl
  410740:	inc    ecx
  410741:	add    BYTE PTR [ebx],dh
  410743:	or     BYTE PTR [ecx+0x0],al
  410746:	dec    DWORD PTR [eax]
  410748:	inc    ecx
  410749:	add    bh,bh
  41074b:	or     BYTE PTR [ecx+0x0],al
  41074e:	inc    esp
  41074f:	or     BYTE PTR [ecx+0x0],al
  410752:	icebp  
  410753:	or     BYTE PTR [ecx+0x0],al
  410756:	dec    DWORD PTR [eax]
  410758:	inc    ecx
  410759:	add    bh,bh
  41075b:	or     BYTE PTR [ecx+0x0],al
  41075e:	dec    DWORD PTR [eax]
  410760:	inc    ecx
  410761:	add    BYTE PTR [ecx+0x8],ah
  410764:	inc    ecx
  410765:	add    BYTE PTR [esi+0x8],bh
  410768:	inc    ecx
  410769:	add    BYTE PTR [ebx-0x47ffbef8],bl
  41076f:	or     BYTE PTR [ecx+0x0],al
  410772:	aad    0x8
  410774:	inc    ecx
  410775:	add    BYTE PTR [ebp+0x438bc055],cl
  41077b:	or     BYTE PTR [edi],cl
  41077d:	mov    edi,0x8268e800
  410782:	(bad)  
  410783:	dec    DWORD PTR [ebx-0x39743fab]
  410789:	call   0x404fdc
  41078e:	jmp    0x41093d
  410793:	lea    edx,[ebp-0x44]
  410796:	mov    eax,DWORD PTR [ebx+0x8]
  410799:	mov    eax,DWORD PTR [eax]
  41079b:	call   0x4089ec
  4107a0:	mov    edx,DWORD PTR [ebp-0x44]
  4107a3:	mov    eax,esi
  4107a5:	call   0x404fdc
  4107aa:	jmp    0x41093d
  4107af:	mov    eax,DWORD PTR [ebx+0x8]
  4107b2:	fld    DWORD PTR [eax]
  4107b4:	add    esp,0xfffffff4
  4107b7:	fstp   TBYTE PTR [esp]
  4107ba:	fwait
  4107bb:	lea    eax,[ebp-0x48]
  4107be:	call   0x40a610
  4107c3:	mov    edx,DWORD PTR [ebp-0x48]
  4107c6:	mov    eax,esi
  4107c8:	call   0x404fdc
  4107cd:	jmp    0x41093d
  4107d2:	mov    eax,DWORD PTR [ebx+0x8]
  4107d5:	fld    QWORD PTR [eax]
  4107d7:	add    esp,0xfffffff4
  4107da:	fstp   TBYTE PTR [esp]
  4107dd:	fwait
  4107de:	lea    eax,[ebp-0x4c]
  4107e1:	call   0x40a610
  4107e6:	mov    edx,DWORD PTR [ebp-0x4c]
  4107e9:	mov    eax,esi
  4107eb:	call   0x404fdc
  4107f0:	jmp    0x41093d
  4107f5:	mov    eax,DWORD PTR [ebx+0x8]
  4107f8:	push   DWORD PTR [eax+0x4]
  4107fb:	push   DWORD PTR [eax]
  4107fd:	lea    eax,[ebp-0x50]
  410800:	call   0x410170
  410805:	mov    edx,DWORD PTR [ebp-0x50]
  410808:	mov    eax,esi
  41080a:	call   0x405210
  41080f:	jmp    0x41093d
  410814:	mov    eax,DWORD PTR [ebx+0x8]
  410817:	push   DWORD PTR [eax+0x4]
  41081a:	push   DWORD PTR [eax]
  41081c:	lea    eax,[ebp-0x54]
  41081f:	call   0x4101a8
  410824:	mov    edx,DWORD PTR [ebp-0x54]
  410827:	mov    eax,esi
  410829:	call   0x405210
  41082e:	jmp    0x41093d
  410833:	mov    eax,esi
  410835:	mov    edx,DWORD PTR [ebx+0x8]
  410838:	mov    edx,DWORD PTR [edx]
  41083a:	call   0x4051b0
  41083f:	jmp    0x41093d
  410844:	lea    edx,[ebp-0x58]
  410847:	mov    eax,DWORD PTR [ebx+0x8]
  41084a:	movzx  eax,WORD PTR [eax]
  41084d:	call   0x4101e0
  410852:	mov    edx,DWORD PTR [ebp-0x58]
  410855:	mov    eax,esi
  410857:	call   0x405210
  41085c:	jmp    0x41093d
  410861:	lea    edx,[ebp-0x5c]
  410864:	mov    eax,DWORD PTR [ebx+0x8]
  410867:	movsx  eax,BYTE PTR [eax]
  41086a:	call   0x4089ec
  41086f:	mov    edx,DWORD PTR [ebp-0x5c]
  410872:	mov    eax,esi
  410874:	call   0x404fdc
  410879:	jmp    0x41093d
  41087e:	lea    edx,[ebp-0x60]
  410881:	mov    eax,DWORD PTR [ebx+0x8]
  410884:	movzx  eax,BYTE PTR [eax]
  410887:	call   0x4089ec
  41088c:	mov    edx,DWORD PTR [ebp-0x60]
  41088f:	mov    eax,esi
  410891:	call   0x404fdc
  410896:	jmp    0x41093d
  41089b:	lea    edx,[ebp-0x64]
  41089e:	mov    eax,DWORD PTR [ebx+0x8]
  4108a1:	movzx  eax,WORD PTR [eax]
  4108a4:	call   0x4089ec
  4108a9:	mov    edx,DWORD PTR [ebp-0x64]
  4108ac:	mov    eax,esi
  4108ae:	call   0x404fdc
  4108b3:	jmp    0x41093d
  4108b8:	mov    eax,DWORD PTR [ebx+0x8]
  4108bb:	mov    eax,DWORD PTR [eax]
  4108bd:	xor    edx,edx
  4108bf:	push   edx
  4108c0:	push   eax
  4108c1:	lea    eax,[ebp-0x68]
  4108c4:	call   0x408ad8
  4108c9:	mov    edx,DWORD PTR [ebp-0x68]
  4108cc:	mov    eax,esi
  4108ce:	call   0x404fdc
  4108d3:	jmp    0x41093d
  4108d5:	mov    eax,DWORD PTR [ebx+0x8]
  4108d8:	push   DWORD PTR [eax+0x4]
  4108db:	push   DWORD PTR [eax]
  4108dd:	lea    eax,[ebp-0x6c]
  4108e0:	call   0x408ad8
  4108e5:	mov    edx,DWORD PTR [ebp-0x6c]
  4108e8:	mov    eax,esi
  4108ea:	call   0x404fdc
  4108ef:	jmp    0x41093d
  4108f1:	mov    eax,DWORD PTR [ebx+0x8]
  4108f4:	mov    edx,eax
  4108f6:	mov    eax,esi
  4108f8:	call   0x410460
  4108fd:	jmp    0x41093d
  4108ff:	lea    edx,[ebp-0x70]
  410902:	mov    eax,ebx
  410904:	call   0x4102a8
  410909:	mov    edx,DWORD PTR [ebp-0x70]
  41090c:	mov    eax,esi
  41090e:	call   0x404fdc
  410913:	jmp    0x41093d
  410915:	mov    eax,esi
  410917:	call   0x404f88
  41091c:	mov    edx,eax
  41091e:	mov    eax,ebx
  410920:	call   0x4103d8
  410925:	test   al,al
  410927:	jne    0x41093d
  410929:	lea    edx,[ebp-0x74]
  41092c:	mov    eax,ebx
  41092e:	call   0x4102a8
  410933:	mov    edx,DWORD PTR [ebp-0x74]
  410936:	mov    eax,esi
  410938:	call   0x404fdc
  41093d:	xor    eax,eax
  41093f:	pop    edx
  410940:	pop    ecx
  410941:	pop    ecx
  410942:	mov    DWORD PTR fs:[eax],edx
  410945:	push   0x410993
  41094a:	lea    eax,[ebp-0x74]
  41094d:	mov    edx,0x7
  410952:	call   0x404fac
  410957:	lea    eax,[ebp-0x58]
  41095a:	mov    edx,0x3
  41095f:	call   0x4057a8
  410964:	lea    eax,[ebp-0x4c]
  410967:	mov    edx,0xb
  41096c:	call   0x404fac
  410971:	lea    eax,[ebp-0x20]
  410974:	mov    edx,0x4
  410979:	call   0x4057a8
  41097e:	lea    eax,[ebp-0x10]
  410981:	mov    edx,0x4
  410986:	call   0x404fac
  41098b:	ret    
  41098c:	jmp    0x40481c
  410991:	jmp    0x41094a
  410993:	pop    esi
  410994:	pop    ebx
  410995:	mov    esp,ebp
  410997:	pop    ebp
  410998:	ret    
  410999:	lea    eax,[eax+0x0]
  41099c:	push   ebp
  41099d:	mov    ebp,esp
  41099f:	add    esp,0xffffffec
  4109a2:	push   ebx
  4109a3:	push   esi
  4109a4:	xor    ecx,ecx
  4109a6:	mov    DWORD PTR [ebp-0x14],ecx
  4109a9:	mov    esi,edx
  4109ab:	mov    ebx,eax
  4109ad:	xor    eax,eax
  4109af:	push   ebp
  4109b0:	push   0x410a46
  4109b5:	push   DWORD PTR fs:[eax]
  4109b8:	mov    DWORD PTR fs:[eax],esp
  4109bb:	lea    eax,[ebp-0x10]
  4109be:	push   eax
  4109bf:	call   0x40e888
  4109c4:	xor    eax,eax
  4109c6:	push   ebp
  4109c7:	push   0x410a29
  4109cc:	push   DWORD PTR fs:[eax]
  4109cf:	mov    DWORD PTR fs:[eax],esp
  4109d2:	push   0x8
  4109d4:	push   0x0
  4109d6:	push   0x400
  4109db:	push   ebx
  4109dc:	lea    eax,[ebp-0x10]
  4109df:	push   eax
  4109e0:	mov    eax,ds:0x46ddcc
  4109e5:	mov    eax,DWORD PTR [eax]
  4109e7:	call   eax
  4109e9:	movzx  edx,WORD PTR [ebx]
  4109ec:	mov    cx,0x8
  4109f0:	call   0x40fae4
  4109f5:	push   esi
  4109f6:	lea    eax,[ebp-0x14]
  4109f9:	mov    edx,DWORD PTR [ebp-0x8]
  4109fc:	call   0x4058a4
  410a01:	mov    eax,DWORD PTR [ebp-0x14]
  410a04:	mov    ecx,0x7fffffff
  410a09:	mov    edx,0x1
  410a0e:	call   0x405990
  410a13:	xor    eax,eax
  410a15:	pop    edx
  410a16:	pop    ecx
  410a17:	pop    ecx
  410a18:	mov    DWORD PTR fs:[eax],edx
  410a1b:	push   0x410a30
  410a20:	lea    eax,[ebp-0x10]
  410a23:	call   0x40fe04
  410a28:	ret    
  410a29:	jmp    0x40481c
  410a2e:	jmp    0x410a20
  410a30:	xor    eax,eax
  410a32:	pop    edx
  410a33:	pop    ecx
  410a34:	pop    ecx
  410a35:	mov    DWORD PTR fs:[eax],edx
  410a38:	push   0x410a4d
  410a3d:	lea    eax,[ebp-0x14]
  410a40:	call   0x405790
  410a45:	ret    
  410a46:	jmp    0x40481c
  410a4b:	jmp    0x410a3d
  410a4d:	pop    esi
  410a4e:	pop    ebx
  410a4f:	mov    esp,ebp
  410a51:	pop    ebp
  410a52:	ret    
  410a53:	nop
  410a54:	push   ebp
  410a55:	mov    ebp,esp
  410a57:	add    esp,0xfffffff0
  410a5a:	push   ebx
  410a5b:	push   esi
  410a5c:	mov    esi,edx
  410a5e:	mov    ebx,eax
  410a60:	lea    eax,[ebp-0x10]
  410a63:	push   eax
  410a64:	call   0x40e888
  410a69:	xor    eax,eax
  410a6b:	push   ebp
  410a6c:	push   0x410aaa
  410a71:	push   DWORD PTR fs:[eax]
  410a74:	mov    DWORD PTR fs:[eax],esp
  410a77:	mov    edx,ebx
  410a79:	lea    eax,[ebp-0x10]
  410a7c:	call   0x41012c
  410a81:	lea    eax,[ebp-0x10]
  410a84:	call   DWORD PTR ds:0x47297c
  410a8a:	lea    edx,[ebp-0x10]
  410a8d:	mov    eax,esi
  410a8f:	call   0x410b80
  410a94:	xor    eax,eax
  410a96:	pop    edx
  410a97:	pop    ecx
  410a98:	pop    ecx
  410a99:	mov    DWORD PTR fs:[eax],edx
  410a9c:	push   0x410ab1
  410aa1:	lea    eax,[ebp-0x10]
  410aa4:	call   0x40fe04
  410aa9:	ret    
  410aaa:	jmp    0x40481c
  410aaf:	jmp    0x410aa1
  410ab1:	pop    esi
  410ab2:	pop    ebx
  410ab3:	mov    esp,ebp
  410ab5:	pop    ebp
  410ab6:	ret    
  410ab7:	nop
  410ab8:	push   ebp
  410ab9:	mov    ebp,esp
  410abb:	add    esp,0xffffffe0
  410abe:	push   ebx
  410abf:	xor    ecx,ecx
  410ac1:	mov    DWORD PTR [ebp-0x20],ecx
  410ac4:	mov    DWORD PTR [ebp-0x4],edx
  410ac7:	mov    ebx,eax
  410ac9:	mov    eax,DWORD PTR [ebp-0x4]
  410acc:	test   eax,eax
  410ace:	je     0x410ad4
  410ad0:	xor    edx,edx
  410ad2:	mov    DWORD PTR [eax],edx
  410ad4:	xor    eax,eax
  410ad6:	push   ebp
  410ad7:	push   0x410b70
  410adc:	push   DWORD PTR fs:[eax]
  410adf:	mov    DWORD PTR fs:[eax],esp
  410ae2:	lea    edx,[ebp-0xc]
  410ae5:	movzx  eax,WORD PTR [ebx]
  410ae8:	call   0x4117e4
  410aed:	mov    BYTE PTR [ebp-0x5],al
  410af0:	cmp    BYTE PTR [ebp-0x5],0x0
  410af4:	je     0x410b5a
  410af6:	lea    eax,[ebp-0x1c]
  410af9:	push   eax
  410afa:	call   0x40e888
  410aff:	xor    eax,eax
  410b01:	push   ebp
  410b02:	push   0x410b53
  410b07:	push   DWORD PTR fs:[eax]
  410b0a:	mov    DWORD PTR fs:[eax],esp
  410b0d:	push   0x8
  410b0f:	mov    ecx,ebx
  410b11:	lea    edx,[ebp-0x1c]
  410b14:	mov    eax,DWORD PTR [ebp-0xc]
  410b17:	mov    ebx,DWORD PTR [eax]
  410b19:	call   DWORD PTR [ebx+0x1c]
  410b1c:	mov    eax,DWORD PTR [ebp-0x4]
  410b1f:	push   eax
  410b20:	lea    eax,[ebp-0x20]
  410b23:	mov    edx,DWORD PTR [ebp-0x14]
  410b26:	call   0x4058a4
  410b2b:	mov    eax,DWORD PTR [ebp-0x20]
  410b2e:	mov    ecx,0x7fffffff
  410b33:	mov    edx,0x1
  410b38:	call   0x405990
  410b3d:	xor    eax,eax
  410b3f:	pop    edx
  410b40:	pop    ecx
  410b41:	pop    ecx
  410b42:	mov    DWORD PTR fs:[eax],edx
  410b45:	push   0x410b5a
  410b4a:	lea    eax,[ebp-0x1c]
  410b4d:	call   0x40fe04
  410b52:	ret    
  410b53:	jmp    0x40481c
  410b58:	jmp    0x410b4a
  410b5a:	xor    eax,eax
  410b5c:	pop    edx
  410b5d:	pop    ecx
  410b5e:	pop    ecx
  410b5f:	mov    DWORD PTR fs:[eax],edx
  410b62:	push   0x410b77
  410b67:	lea    eax,[ebp-0x20]
  410b6a:	call   0x405790
  410b6f:	ret    
  410b70:	jmp    0x40481c
  410b75:	jmp    0x410b67
  410b77:	movzx  eax,BYTE PTR [ebp-0x5]
  410b7b:	pop    ebx
  410b7c:	mov    esp,ebp
  410b7e:	pop    ebp
  410b7f:	ret    
  410b80:	push   ebp
  410b81:	mov    ebp,esp
  410b83:	mov    ecx,0xe
  410b88:	push   0x0
  410b8a:	push   0x0
  410b8c:	dec    ecx
  410b8d:	jne    0x410b88
  410b8f:	push   ebx
  410b90:	push   esi
  410b91:	mov    ebx,edx
  410b93:	mov    esi,eax
  410b95:	xor    eax,eax
  410b97:	push   ebp
  410b98:	push   0x4110c5
  410b9d:	push   DWORD PTR fs:[eax]
  410ba0:	mov    DWORD PTR fs:[eax],esp
  410ba3:	movzx  eax,WORD PTR [ebx]
  410ba6:	movzx  edx,ax
  410ba9:	cmp    edx,0x14
  410bac:	ja     0x410ddb
  410bb2:	jmp    DWORD PTR [edx*4+0x410bb9]
  410bb9:	or     eax,0x1900410c
  410bbe:	or     al,0x41
  410bc0:	add    BYTE PTR [ecx+0xc],al
  410bc3:	inc    ecx
  410bc4:	add    BYTE PTR [esp+ecx*1+0x41],bl
  410bc8:	add    BYTE PTR [esi+0xc],dh
  410bcb:	inc    ecx
  410bcc:	add    BYTE PTR [edi-0x47ffbef4],dl
  410bd2:	or     al,0x41
  410bd4:	add    ch,dl
  410bd6:	or     al,0x41
  410bd8:	add    dl,dh
  410bda:	or     al,0x41
  410bdc:	add    dl,al
  410bde:	or     eax,0xddb0041
  410be3:	inc    ecx
  410be4:	add    BYTE PTR [edx],cl
  410be6:	or     eax,0xdb10041
  410beb:	inc    ecx
  410bec:	add    dl,al
  410bee:	or     eax,0xddb0041
  410bf3:	inc    ecx
  410bf4:	add    bl,bl
  410bf6:	or     eax,0xd250041
  410bfb:	inc    ecx
  410bfc:	add    BYTE PTR [eax+0xd],al
  410bff:	inc    ecx
  410c00:	add    BYTE PTR [ebx+0xd],bl
  410c03:	inc    ecx
  410c04:	add    BYTE PTR [esi+0xd],dh
  410c07:	inc    ecx
  410c08:	add    BYTE PTR [ebp+ecx*1-0x3974ffbf],dl
  410c0f:	call   0x405790
  410c14:	jmp    0x41104f
  410c19:	cmp    BYTE PTR ds:0x461a0c,0x0
  410c20:	je     0x410c2f
  410c22:	mov    dx,0x8
  410c26:	mov    ax,0x1
  410c2a:	call   0x40f6a4
  410c2f:	mov    eax,esi
  410c31:	mov    edx,DWORD PTR ds:0x461a10
  410c37:	call   0x4058e0
  410c3c:	jmp    0x41104f
  410c41:	lea    edx,[ebp-0x4]
  410c44:	movsx  eax,WORD PTR [ebx+0x8]
  410c48:	call   0x4089ec
  410c4d:	mov    edx,DWORD PTR [ebp-0x4]
  410c50:	mov    eax,esi
  410c52:	call   0x4058e0
  410c57:	jmp    0x41104f
  410c5c:	lea    edx,[ebp-0x8]
  410c5f:	mov    eax,DWORD PTR [ebx+0x8]
  410c62:	call   0x4089ec
  410c67:	mov    edx,DWORD PTR [ebp-0x8]
  410c6a:	mov    eax,esi
  410c6c:	call   0x4058e0
  410c71:	jmp    0x41104f
  410c76:	fld    DWORD PTR [ebx+0x8]
  410c79:	add    esp,0xfffffff4
  410c7c:	fstp   TBYTE PTR [esp]
  410c7f:	fwait
  410c80:	lea    eax,[ebp-0xc]
  410c83:	call   0x40a610
  410c88:	mov    edx,DWORD PTR [ebp-0xc]
  410c8b:	mov    eax,esi
  410c8d:	call   0x4058e0
  410c92:	jmp    0x41104f
  410c97:	fld    QWORD PTR [ebx+0x8]
  410c9a:	add    esp,0xfffffff4
  410c9d:	fstp   TBYTE PTR [esp]
  410ca0:	fwait
  410ca1:	lea    eax,[ebp-0x10]
  410ca4:	call   0x40a610
  410ca9:	mov    edx,DWORD PTR [ebp-0x10]
  410cac:	mov    eax,esi
  410cae:	call   0x4058e0
  410cb3:	jmp    0x41104f
  410cb8:	push   DWORD PTR [ebx+0xc]
  410cbb:	push   DWORD PTR [ebx+0x8]
  410cbe:	lea    eax,[ebp-0x14]
  410cc1:	call   0x410170
  410cc6:	mov    edx,DWORD PTR [ebp-0x14]
  410cc9:	mov    eax,esi
  410ccb:	call   0x4057cc
  410cd0:	jmp    0x41104f
  410cd5:	push   DWORD PTR [ebx+0xc]
  410cd8:	push   DWORD PTR [ebx+0x8]
  410cdb:	lea    eax,[ebp-0x18]
  410cde:	call   0x4101a8
  410ce3:	mov    edx,DWORD PTR [ebp-0x18]
  410ce6:	mov    eax,esi
  410ce8:	call   0x4057cc
  410ced:	jmp    0x41104f
  410cf2:	push   esi
  410cf3:	mov    eax,DWORD PTR [ebx+0x8]
  410cf6:	mov    ecx,0x7fffffff
  410cfb:	mov    edx,0x1
  410d00:	call   0x405990
  410d05:	jmp    0x41104f
  410d0a:	lea    edx,[ebp-0x1c]
  410d0d:	movzx  eax,WORD PTR [ebx+0x8]
  410d11:	call   0x4101e0
  410d16:	mov    edx,DWORD PTR [ebp-0x1c]
  410d19:	mov    eax,esi
  410d1b:	call   0x4057cc
  410d20:	jmp    0x41104f
  410d25:	lea    edx,[ebp-0x20]
  410d28:	movsx  eax,BYTE PTR [ebx+0x8]
  410d2c:	call   0x4089ec
  410d31:	mov    edx,DWORD PTR [ebp-0x20]
  410d34:	mov    eax,esi
  410d36:	call   0x4058e0
  410d3b:	jmp    0x41104f
  410d40:	lea    edx,[ebp-0x24]
  410d43:	movzx  eax,BYTE PTR [ebx+0x8]
  410d47:	call   0x4089ec
  410d4c:	mov    edx,DWORD PTR [ebp-0x24]
  410d4f:	mov    eax,esi
  410d51:	call   0x4058e0
  410d56:	jmp    0x41104f
  410d5b:	lea    edx,[ebp-0x28]
  410d5e:	movzx  eax,WORD PTR [ebx+0x8]
  410d62:	call   0x4089ec
  410d67:	mov    edx,DWORD PTR [ebp-0x28]
  410d6a:	mov    eax,esi
  410d6c:	call   0x4058e0
  410d71:	jmp    0x41104f
  410d76:	mov    eax,DWORD PTR [ebx+0x8]
  410d79:	xor    edx,edx
  410d7b:	push   edx
  410d7c:	push   eax
  410d7d:	lea    eax,[ebp-0x2c]
  410d80:	call   0x408ad8
  410d85:	mov    edx,DWORD PTR [ebp-0x2c]
  410d88:	mov    eax,esi
  410d8a:	call   0x4058e0
  410d8f:	jmp    0x41104f
  410d94:	push   DWORD PTR [ebx+0xc]
  410d97:	push   DWORD PTR [ebx+0x8]
  410d9a:	lea    eax,[ebp-0x30]
  410d9d:	call   0x408ad8
  410da2:	mov    edx,DWORD PTR [ebp-0x30]
  410da5:	mov    eax,esi
  410da7:	call   0x4058e0
  410dac:	jmp    0x41104f
  410db1:	mov    eax,DWORD PTR [ebx+0x8]
  410db4:	mov    edx,eax
  410db6:	mov    eax,esi
  410db8:	call   0x410b80
  410dbd:	jmp    0x41104f
  410dc2:	lea    edx,[ebp-0x34]
  410dc5:	mov    eax,ebx
  410dc7:	call   0x41099c
  410dcc:	mov    edx,DWORD PTR [ebp-0x34]
  410dcf:	mov    eax,esi
  410dd1:	call   0x4057cc
  410dd6:	jmp    0x41104f
  410ddb:	mov    edx,eax
  410ddd:	sub    dx,0x100
  410de2:	je     0x410deb
  410de4:	dec    dx
  410de7:	je     0x410dfa
  410de9:	jmp    0x410e13
  410deb:	mov    eax,esi
  410ded:	mov    edx,DWORD PTR [ebx+0x8]
  410df0:	call   0x4058e0
  410df5:	jmp    0x41104f
  410dfa:	lea    edx,[ebp-0x38]
  410dfd:	mov    eax,ebx
  410dff:	call   0x410a54
  410e04:	mov    edx,DWORD PTR [ebp-0x38]
  410e07:	mov    eax,esi
  410e09:	call   0x4057cc
  410e0e:	jmp    0x41104f
  410e13:	test   ah,0x40
  410e16:	je     0x411027
  410e1c:	movzx  eax,ax
  410e1f:	and    eax,0xffffbfff
  410e24:	cmp    eax,0x14
  410e27:	ja     0x411011
  410e2d:	jmp    DWORD PTR [eax*4+0x410e34]
  410e34:	adc    DWORD PTR [eax],edx
  410e36:	inc    ecx
  410e37:	add    BYTE PTR [ecx],dl
  410e39:	adc    BYTE PTR [ecx+0x0],al
  410e3c:	mov    BYTE PTR [esi],cl
  410e3e:	inc    ecx
  410e3f:	add    BYTE PTR [ebp-0x3effbef2],ah
  410e45:	push   cs
  410e46:	inc    ecx
  410e47:	add    ah,ah
  410e49:	push   cs
  410e4a:	inc    ecx
  410e4b:	add    BYTE PTR [edi],al
  410e4d:	cmovno eax,DWORD PTR [eax]
  410e50:	cmovno eax,DWORD PTR es:[eax]
  410e54:	inc    ebp
  410e55:	cmovno eax,DWORD PTR [eax]
  410e58:	adc    DWORD PTR [eax],edx
  410e5a:	inc    ecx
  410e5b:	add    BYTE PTR [ecx],dl
  410e5d:	adc    BYTE PTR [ecx+0x0],al
  410e60:	push   esi
  410e61:	cmovno eax,DWORD PTR [eax]
  410e64:	add    edx,DWORD PTR [eax]
  410e66:	inc    ecx
  410e67:	add    BYTE PTR [ecx],dl
  410e69:	adc    BYTE PTR [ecx+0x0],al
  410e6c:	adc    DWORD PTR [eax],edx
  410e6e:	inc    ecx
  410e6f:	add    BYTE PTR [ecx],dl
  410e71:	adc    BYTE PTR [ecx+0x0],al
  410e74:	jae    0x410e85
  410e76:	inc    ecx
  410e77:	add    BYTE PTR [eax-0x52ffbef1],dl
  410e7d:	cmovno eax,DWORD PTR [eax]
  410e80:	retf   0x410f
  410e83:	add    bh,ah
  410e85:	cmovno eax,DWORD PTR [eax]
  410e88:	lea    edx,[ebp-0x3c]
  410e8b:	mov    eax,DWORD PTR [ebx+0x8]
  410e8e:	movsx  eax,WORD PTR [eax]
  410e91:	call   0x4089ec
  410e96:	mov    edx,DWORD PTR [ebp-0x3c]
  410e99:	mov    eax,esi
  410e9b:	call   0x4058e0
  410ea0:	jmp    0x41104f
  410ea5:	lea    edx,[ebp-0x40]
  410ea8:	mov    eax,DWORD PTR [ebx+0x8]
  410eab:	mov    eax,DWORD PTR [eax]
  410ead:	call   0x4089ec
  410eb2:	mov    edx,DWORD PTR [ebp-0x40]
  410eb5:	mov    eax,esi
  410eb7:	call   0x4058e0
  410ebc:	jmp    0x41104f
  410ec1:	mov    eax,DWORD PTR [ebx+0x8]
  410ec4:	fld    DWORD PTR [eax]
  410ec6:	add    esp,0xfffffff4
  410ec9:	fstp   TBYTE PTR [esp]
  410ecc:	fwait
  410ecd:	lea    eax,[ebp-0x44]
  410ed0:	call   0x40a610
  410ed5:	mov    edx,DWORD PTR [ebp-0x44]
  410ed8:	mov    eax,esi
  410eda:	call   0x4058e0
  410edf:	jmp    0x41104f
  410ee4:	mov    eax,DWORD PTR [ebx+0x8]
  410ee7:	fld    QWORD PTR [eax]
  410ee9:	add    esp,0xfffffff4
  410eec:	fstp   TBYTE PTR [esp]
  410eef:	fwait
  410ef0:	lea    eax,[ebp-0x48]
  410ef3:	call   0x40a610
  410ef8:	mov    edx,DWORD PTR [ebp-0x48]
  410efb:	mov    eax,esi
  410efd:	call   0x4058e0
  410f02:	jmp    0x41104f
  410f07:	mov    eax,DWORD PTR [ebx+0x8]
  410f0a:	push   DWORD PTR [eax+0x4]
  410f0d:	push   DWORD PTR [eax]
  410f0f:	lea    eax,[ebp-0x4c]
  410f12:	call   0x410170
  410f17:	mov    edx,DWORD PTR [ebp-0x4c]
  410f1a:	mov    eax,esi
  410f1c:	call   0x4057cc
  410f21:	jmp    0x41104f
  410f26:	mov    eax,DWORD PTR [ebx+0x8]
  410f29:	push   DWORD PTR [eax+0x4]
  410f2c:	push   DWORD PTR [eax]
  410f2e:	lea    eax,[ebp-0x50]
  410f31:	call   0x4101a8
  410f36:	mov    edx,DWORD PTR [ebp-0x50]
  410f39:	mov    eax,esi
  410f3b:	call   0x4057cc
  410f40:	jmp    0x41104f
  410f45:	mov    eax,esi
  410f47:	mov    edx,DWORD PTR [ebx+0x8]
  410f4a:	mov    edx,DWORD PTR [edx]
  410f4c:	call   0x4058a4
  410f51:	jmp    0x41104f
  410f56:	lea    edx,[ebp-0x54]
  410f59:	mov    eax,DWORD PTR [ebx+0x8]
  410f5c:	movzx  eax,WORD PTR [eax]
  410f5f:	call   0x4101e0
  410f64:	mov    edx,DWORD PTR [ebp-0x54]
  410f67:	mov    eax,esi
  410f69:	call   0x4057cc
  410f6e:	jmp    0x41104f
  410f73:	lea    edx,[ebp-0x58]
  410f76:	mov    eax,DWORD PTR [ebx+0x8]
  410f79:	movsx  eax,BYTE PTR [eax]
  410f7c:	call   0x4089ec
  410f81:	mov    edx,DWORD PTR [ebp-0x58]
  410f84:	mov    eax,esi
  410f86:	call   0x4058e0
  410f8b:	jmp    0x41104f
  410f90:	lea    edx,[ebp-0x5c]
  410f93:	mov    eax,DWORD PTR [ebx+0x8]
  410f96:	movzx  eax,BYTE PTR [eax]
  410f99:	call   0x4089ec
  410f9e:	mov    edx,DWORD PTR [ebp-0x5c]
  410fa1:	mov    eax,esi
  410fa3:	call   0x4058e0
  410fa8:	jmp    0x41104f
  410fad:	lea    edx,[ebp-0x60]
  410fb0:	mov    eax,DWORD PTR [ebx+0x8]
  410fb3:	movzx  eax,WORD PTR [eax]
  410fb6:	call   0x4089ec
  410fbb:	mov    edx,DWORD PTR [ebp-0x60]
  410fbe:	mov    eax,esi
  410fc0:	call   0x4058e0
  410fc5:	jmp    0x41104f
  410fca:	mov    eax,DWORD PTR [ebx+0x8]
  410fcd:	mov    eax,DWORD PTR [eax]
  410fcf:	xor    edx,edx
  410fd1:	push   edx
  410fd2:	push   eax
  410fd3:	lea    eax,[ebp-0x64]
  410fd6:	call   0x408ad8
  410fdb:	mov    edx,DWORD PTR [ebp-0x64]
  410fde:	mov    eax,esi
  410fe0:	call   0x4058e0
  410fe5:	jmp    0x41104f
  410fe7:	mov    eax,DWORD PTR [ebx+0x8]
  410fea:	push   DWORD PTR [eax+0x4]
  410fed:	push   DWORD PTR [eax]
  410fef:	lea    eax,[ebp-0x68]
  410ff2:	call   0x408ad8
  410ff7:	mov    edx,DWORD PTR [ebp-0x68]
  410ffa:	mov    eax,esi
  410ffc:	call   0x4058e0
  411001:	jmp    0x41104f
  411003:	mov    eax,DWORD PTR [ebx+0x8]
  411006:	mov    edx,eax
  411008:	mov    eax,esi
  41100a:	call   0x410b80
  41100f:	jmp    0x41104f
  411011:	lea    edx,[ebp-0x6c]
  411014:	mov    eax,ebx
  411016:	call   0x41099c
  41101b:	mov    edx,DWORD PTR [ebp-0x6c]
  41101e:	mov    eax,esi
  411020:	call   0x4057cc
  411025:	jmp    0x41104f
  411027:	mov    eax,esi
  411029:	call   0x405790
  41102e:	mov    edx,eax
  411030:	mov    eax,ebx
  411032:	call   0x410ab8
  411037:	test   al,al
  411039:	jne    0x41104f
  41103b:	lea    edx,[ebp-0x70]
  41103e:	mov    eax,ebx
  411040:	call   0x41099c
  411045:	mov    edx,DWORD PTR [ebp-0x70]
  411048:	mov    eax,esi
  41104a:	call   0x4057cc
  41104f:	xor    eax,eax
  411051:	pop    edx
  411052:	pop    ecx
  411053:	pop    ecx
  411054:	mov    DWORD PTR fs:[eax],edx
  411057:	push   0x4110cc
  41105c:	lea    eax,[ebp-0x70]
  41105f:	mov    edx,0x2
  411064:	call   0x4057a8
  411069:	lea    eax,[ebp-0x68]
  41106c:	mov    edx,0x5
  411071:	call   0x404fac
  411076:	lea    eax,[ebp-0x54]
  411079:	mov    edx,0x3
  41107e:	call   0x4057a8
  411083:	lea    eax,[ebp-0x48]
  411086:	mov    edx,0x4
  41108b:	call   0x404fac
  411090:	lea    eax,[ebp-0x38]
  411093:	mov    edx,0x2
  411098:	call   0x4057a8
  41109d:	lea    eax,[ebp-0x30]
  4110a0:	mov    edx,0x5
  4110a5:	call   0x404fac
  4110aa:	lea    eax,[ebp-0x1c]
  4110ad:	mov    edx,0x3
  4110b2:	call   0x4057a8
  4110b7:	lea    eax,[ebp-0x10]
  4110ba:	mov    edx,0x4
  4110bf:	call   0x404fac
  4110c4:	ret    
  4110c5:	jmp    0x40481c
  4110ca:	jmp    0x41105c
  4110cc:	pop    esi
  4110cd:	pop    ebx
  4110ce:	mov    esp,ebp
  4110d0:	pop    ebp
  4110d1:	ret    
  4110d2:	mov    eax,eax
  4110d4:	push   ebx
  4110d5:	push   esi
  4110d6:	push   edi
  4110d7:	mov    ebx,ecx
  4110d9:	mov    esi,edx
  4110db:	mov    edi,eax
  4110dd:	test   WORD PTR [edi],0xbfe8
  4110e2:	je     0x4110eb
  4110e4:	mov    eax,edi
  4110e6:	call   0x40fd88
  4110eb:	cmp    BYTE PTR ds:0x461a14,0x0
  4110f2:	je     0x411104
  4110f4:	movsx  eax,bl
  4110f7:	movzx  eax,WORD PTR [eax*2+0x461a28]
  4110ff:	mov    WORD PTR [edi],ax
  411102:	jmp    0x411109
  411104:	mov    WORD PTR [edi],0x3
  411109:	mov    DWORD PTR [edi+0x8],esi
  41110c:	pop    edi
  41110d:	pop    esi
  41110e:	pop    ebx
  41110f:	ret    
  411110:	push   ebp
  411111:	mov    ebp,esp
  411113:	push   ebx
  411114:	mov    ebx,eax
  411116:	test   WORD PTR [ebx],0xbfe8
  41111b:	je     0x411124
  41111d:	mov    eax,ebx
  41111f:	call   0x40fd88
  411124:	mov    WORD PTR [ebx],0x14
  411129:	mov    eax,DWORD PTR [ebp+0x8]
  41112c:	mov    DWORD PTR [ebx+0x8],eax
  41112f:	mov    eax,DWORD PTR [ebp+0xc]
  411132:	mov    DWORD PTR [ebx+0xc],eax
  411135:	pop    ebx
  411136:	pop    ebp
  411137:	ret    0x8
  41113a:	mov    eax,eax
  41113c:	push   ebx
  41113d:	push   esi
  41113e:	mov    ebx,edx
  411140:	mov    esi,eax
  411142:	test   WORD PTR [esi],0xbfe8
  411147:	je     0x411150
  411149:	mov    eax,esi
  41114b:	call   0x40fd88
  411150:	mov    WORD PTR [esi],0xb
  411155:	cmp    bl,0x1
  411158:	cmc    
  411159:	sbb    eax,eax
  41115b:	mov    WORD PTR [esi+0x8],ax
  41115f:	pop    esi
  411160:	pop    ebx
  411161:	ret    
  411162:	mov    eax,eax
  411164:	push   eax
  411165:	call   0x40fe04
  41116a:	pop    eax
  41116b:	mov    WORD PTR [eax],0x5
  411170:	fstp   QWORD PTR [eax+0x8]
  411173:	fwait
  411174:	ret    
  411175:	lea    eax,[eax+0x0]
  411178:	push   eax
  411179:	call   0x40fe04
  41117e:	pop    eax
  41117f:	mov    WORD PTR [eax],0x7
  411184:	fstp   QWORD PTR [eax+0x8]
  411187:	fwait
  411188:	ret    
  411189:	lea    eax,[eax+0x0]
  41118c:	push   eax
  41118d:	call   0x40fe04
  411192:	pop    eax
  411193:	mov    WORD PTR [eax],0x6
  411198:	fistp  QWORD PTR [eax+0x8]
  41119b:	fwait
  41119c:	ret    
  41119d:	lea    eax,[eax+0x0]
  4111a0:	push   ebx
  4111a1:	push   esi
  4111a2:	mov    esi,edx
  4111a4:	mov    ebx,eax
  4111a6:	test   WORD PTR [ebx],0xbfe8
  4111ab:	je     0x4111b4
  4111ad:	mov    eax,ebx
  4111af:	call   0x40fd88
  4111b4:	xor    eax,eax
  4111b6:	mov    DWORD PTR [ebx+0x8],eax
  4111b9:	mov    WORD PTR [ebx],0x100
  4111be:	lea    eax,[ebx+0x8]
  4111c1:	mov    edx,esi
  4111c3:	call   0x404fdc
  4111c8:	pop    esi
  4111c9:	pop    ebx
  4111ca:	ret    
  4111cb:	nop
  4111cc:	push   ebx
  4111cd:	push   esi
  4111ce:	mov    esi,edx
  4111d0:	mov    ebx,eax
  4111d2:	test   WORD PTR [ebx],0xbfe8
  4111d7:	je     0x4111e0
  4111d9:	mov    eax,ebx
  4111db:	call   0x40fd88
  4111e0:	xor    eax,eax
  4111e2:	mov    DWORD PTR [ebx+0x8],eax
  4111e5:	mov    WORD PTR [ebx],0x8
  4111ea:	lea    eax,[ebx+0x8]
  4111ed:	push   eax
  4111ee:	mov    ecx,0x7fffffff
  4111f3:	mov    edx,0x1
  4111f8:	mov    eax,esi
  4111fa:	call   0x405990
  4111ff:	pop    esi
  411200:	pop    ebx
  411201:	ret    
  411202:	mov    eax,eax
  411204:	cmp    WORD PTR [eax],0x8
  411208:	jb     0x411224
  41120a:	push   DWORD PTR [eax+0xc]
  41120d:	push   DWORD PTR [eax+0x8]
  411210:	push   DWORD PTR [eax+0x4]
  411213:	push   DWORD PTR [eax]
  411215:	mov    WORD PTR [eax],0x0
  41121a:	mov    edx,esp
  41121c:	call   0x41012c
  411221:	add    esp,0x10
  411224:	ret    
  411225:	lea    eax,[eax+0x0]
  411228:	(bad)  
  411229:	(bad)  
  41122a:	(bad)  
  41122b:	inc    DWORD PTR ds:0x45000000
  411231:	ins    DWORD PTR es:[edi],dx
  411232:	jo     0x4112a8
  411234:	jns    0x411236
  411236:	add    BYTE PTR [eax],al
  411238:	(bad)  
  411239:	(bad)  
  41123a:	(bad)  
  41123b:	inc    DWORD PTR [eax+eax*1]
  41123e:	add    BYTE PTR [eax],al
  411240:	dec    esi
  411241:	jne    0x4112af
  411243:	ins    BYTE PTR es:[edi],dx
  411244:	add    BYTE PTR [eax],al
  411246:	add    BYTE PTR [eax],al
  411248:	(bad)  
  411249:	(bad)  
  41124a:	(bad)  
  41124b:	dec    DWORD PTR [eax]
  41124d:	add    BYTE PTR [eax],al
  41124f:	add    BYTE PTR [ebx+0x6d],dl
  411252:	popa   
  411253:	ins    BYTE PTR es:[edi],dx
  411254:	ins    BYTE PTR es:[edi],dx
  411255:	imul   ebp,DWORD PTR [esi+0x74],0x0
  41125c:	(bad)  
  41125d:	(bad)  
  41125e:	(bad)  
  41125f:	inc    DWORD PTR [edi]
  411261:	add    BYTE PTR [eax],al
  411263:	add    BYTE PTR [ecx+0x6e],cl
  411266:	je     0x4112cd
  411268:	addr16 gs jb 0x41126c
  41126c:	(bad)  
  41126d:	(bad)  
  41126e:	(bad)  
  41126f:	inc    DWORD PTR [esi]
  411271:	add    BYTE PTR [eax],al
  411273:	add    BYTE PTR [ebx+0x69],dl
  411276:	outs   dx,BYTE PTR ds:[esi]
  411277:	ins    BYTE PTR es:[di],dx
  411279:	add    BYTE PTR gs:[eax],al
  41127c:	(bad)  
  41127d:	(bad)  
  41127e:	(bad)  
  41127f:	inc    DWORD PTR [esi]
  411281:	add    BYTE PTR [eax],al
  411283:	add    BYTE PTR [edi+ebp*2+0x75],al
  411287:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41128b:	add    bh,bh
  41128d:	(bad)  
  41128e:	(bad)  
  41128f:	dec    DWORD PTR [eax]
  411291:	add    BYTE PTR [eax],al
  411293:	add    BYTE PTR [ebx+0x75],al
  411296:	jb     0x41130a
  411298:	outs   dx,BYTE PTR gs:[esi]
  41129a:	arpl   WORD PTR [ecx+0x0],di
  41129d:	add    BYTE PTR [eax],al
  41129f:	add    bh,bh
  4112a1:	(bad)  
  4112a2:	(bad)  
  4112a3:	inc    DWORD PTR [eax+eax*1]
  4112a6:	add    BYTE PTR [eax],al
  4112a8:	inc    esp
  4112a9:	popa   
  4112aa:	je     0x411311
  4112ac:	add    BYTE PTR [eax],al
  4112ae:	add    BYTE PTR [eax],al
  4112b0:	(bad)  
  4112b1:	(bad)  
  4112b2:	(bad)  
  4112b3:	inc    DWORD PTR [esi]
  4112b5:	add    BYTE PTR [eax],al
  4112b7:	add    BYTE PTR [edi+0x6c],cl
  4112ba:	gs push ebx
  4112bc:	je     0x411330
  4112be:	add    BYTE PTR [eax],al
  4112c0:	(bad)  
  4112c1:	(bad)  
  4112c2:	(bad)  
  4112c3:	dec    DWORD PTR [eax]
  4112c5:	add    BYTE PTR [eax],al
  4112c7:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4112cb:	jo     0x41132e
  4112cd:	je     0x411332
  4112cf:	push   0x0
  4112d4:	(bad)  
  4112d5:	(bad)  
  4112d6:	(bad)  
  4112d7:	inc    DWORD PTR ds:0x45000000
  4112dd:	jb     0x411351
  4112df:	outs   dx,DWORD PTR ds:[esi]
  4112e0:	jb     0x4112e2
  4112e2:	add    BYTE PTR [eax],al
  4112e4:	(bad)  
  4112e5:	(bad)  
  4112e6:	(bad)  
  4112e7:	inc    DWORD PTR [edi]
  4112e9:	add    BYTE PTR [eax],al
  4112eb:	add    BYTE PTR [edx+0x6f],al
  4112ee:	outs   dx,DWORD PTR ds:[esi]
  4112ef:	ins    BYTE PTR es:[edi],dx
  4112f0:	gs popa 
  4112f2:	outs   dx,BYTE PTR ds:[esi]
  4112f3:	add    bh,bh
  4112f5:	(bad)  
  4112f6:	(bad)  
  4112f7:	inc    DWORD PTR [edi]
  4112f9:	add    BYTE PTR [eax],al
  4112fb:	add    BYTE PTR [esi+0x61],dl
  4112fe:	jb     0x411369
  411300:	popa   
  411301:	outs   dx,BYTE PTR ds:[esi]
  411302:	je     0x411304
  411304:	(bad)  
  411305:	(bad)  
  411306:	(bad)  
  411307:	inc    DWORD PTR [edi]
  411309:	add    BYTE PTR [eax],al
  41130b:	add    BYTE PTR [ebp+0x6e],dl
  41130e:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  411312:	outs   dx,BYTE PTR ds:[esi]
  411313:	add    bh,bh
  411315:	(bad)  
  411316:	(bad)  
  411317:	inc    DWORD PTR [edi]
  411319:	add    BYTE PTR [eax],al
  41131b:	add    BYTE PTR [ebp+eiz*2+0x63],al
  41131f:	imul   ebp,DWORD PTR [ebp+0x61],0xffff006c
  411326:	(bad)  
  411327:	inc    DWORD PTR [ebx]
  411329:	add    BYTE PTR [eax],al
  41132b:	add    BYTE PTR [eax+esi*1],ah
  41132e:	inc    esi
  41132f:	add    bh,bh
  411331:	(bad)  
  411332:	(bad)  
  411333:	dec    DWORD PTR [eax]
  411335:	add    BYTE PTR [eax],al
  411337:	add    BYTE PTR [ebx+0x68],dl
  41133a:	outs   dx,DWORD PTR ds:[esi]
  41133b:	jb     0x4113b1
  41133d:	dec    ecx
  41133e:	outs   dx,BYTE PTR ds:[esi]
  41133f:	je     0x411341
  411341:	add    BYTE PTR [eax],al
  411343:	add    bh,bh
  411345:	(bad)  
  411346:	(bad)  
  411347:	inc    DWORD PTR [eax+eax*1]
  41134a:	add    BYTE PTR [eax],al
  41134c:	inc    edx
  41134d:	jns    0x4113c3
  41134f:	add    BYTE PTR gs:[eax],al
  411352:	add    BYTE PTR [eax],al
  411354:	(bad)  
  411355:	(bad)  
  411356:	(bad)  
  411357:	inc    DWORD PTR [eax+eax*1]
  41135a:	add    BYTE PTR [eax],al
  41135c:	push   edi
  41135d:	outs   dx,DWORD PTR ds:[esi]
  41135e:	jb     0x4113c4
  411360:	add    BYTE PTR [eax],al
  411362:	add    BYTE PTR [eax],al
  411364:	(bad)  
  411365:	(bad)  
  411366:	(bad)  
  411367:	dec    DWORD PTR [eax]
  411369:	add    BYTE PTR [eax],al
  41136b:	add    BYTE PTR [edi+ebp*2+0x6e],cl
  41136f:	addr16 push edi
  411371:	outs   dx,DWORD PTR ds:[esi]
  411372:	jb     0x4113d8
  411374:	add    BYTE PTR [eax],al
  411376:	add    BYTE PTR [eax],al
  411378:	(bad)  
  411379:	(bad)  
  41137a:	(bad)  
  41137b:	inc    DWORD PTR ds:0x49000000
  411381:	outs   dx,BYTE PTR ds:[esi]
  411382:	je     0x4113ba
  411384:	xor    al,0x0
  411386:	add    BYTE PTR [eax],al
  411388:	push   ebp
  411389:	mov    ebp,esp
  41138b:	add    esp,0xfffffdf8
  411391:	push   ebx
  411392:	push   esi
  411393:	push   edi
  411394:	xor    ecx,ecx
  411396:	mov    DWORD PTR [ebp-0x208],ecx
  41139c:	mov    esi,edx
  41139e:	mov    ebx,eax
  4113a0:	xor    eax,eax
  4113a2:	push   ebp
  4113a3:	push   0x4114ae
  4113a8:	push   DWORD PTR fs:[eax]
  4113ab:	mov    DWORD PTR fs:[eax],esp
  4113ae:	mov    edi,ebx
  4113b0:	and    di,0xfff
  4113b5:	cmp    di,0x14
  4113b9:	ja     0x4113d1
  4113bb:	mov    eax,esi
  4113bd:	movzx  edx,di
  4113c0:	mov    edx,DWORD PTR [edx*4+0x461a34]
  4113c7:	call   0x404fdc
  4113cc:	jmp    0x41146f
  4113d1:	cmp    bx,0x100
  4113d6:	jne    0x4113e9
  4113d8:	mov    eax,esi
  4113da:	mov    edx,0x4114c4
  4113df:	call   0x404fdc
  4113e4:	jmp    0x41146f
  4113e9:	cmp    bx,0x101
  4113ee:	jne    0x4113fe
  4113f0:	mov    eax,esi
  4113f2:	mov    edx,0x4114d4
  4113f7:	call   0x404fdc
  4113fc:	jmp    0x41146f
  4113fe:	lea    edx,[ebp-0x4]
  411401:	mov    eax,ebx
  411403:	call   0x4117e4
  411408:	test   al,al
  41140a:	je     0x411447
  41140c:	lea    eax,[ebp-0x104]
  411412:	push   eax
  411413:	lea    edx,[ebp-0x204]
  411419:	mov    eax,DWORD PTR [ebp-0x4]
  41141c:	mov    eax,DWORD PTR [eax]
  41141e:	call   0x403f80
  411423:	lea    eax,[ebp-0x204]
  411429:	mov    ecx,0x7fffffff
  41142e:	mov    edx,0x2
  411433:	call   0x40302c
  411438:	lea    edx,[ebp-0x104]
  41143e:	mov    eax,esi
  411440:	call   0x4051ec
  411445:	jmp    0x41146f
  411447:	lea    ecx,[ebp-0x208]
  41144d:	movzx  eax,di
  411450:	mov    edx,0x4
  411455:	call   0x408b00
  41145a:	mov    ecx,DWORD PTR [ebp-0x208]
  411460:	mov    edx,DWORD PTR ds:0x46de40
  411466:	mov    edx,DWORD PTR [edx]
  411468:	mov    eax,esi
  41146a:	call   0x4052a0
  41146f:	test   bh,0x20
  411472:	je     0x411482
  411474:	mov    ecx,DWORD PTR [esi]
  411476:	mov    eax,esi
  411478:	mov    edx,0x4114e0
  41147d:	call   0x4052a0
  411482:	test   bh,0x40
  411485:	je     0x411495
  411487:	mov    ecx,DWORD PTR [esi]
  411489:	mov    eax,esi
  41148b:	mov    edx,0x4114f0
  411490:	call   0x4052a0
  411495:	xor    eax,eax
  411497:	pop    edx
  411498:	pop    ecx
  411499:	pop    ecx
  41149a:	mov    DWORD PTR fs:[eax],edx
  41149d:	push   0x4114b5
  4114a2:	lea    eax,[ebp-0x208]
  4114a8:	call   0x404f88
  4114ad:	ret    
  4114ae:	jmp    0x40481c
  4114b3:	jmp    0x4114a2
  4114b5:	pop    edi
  4114b6:	pop    esi
  4114b7:	pop    ebx
  4114b8:	mov    esp,ebp
  4114ba:	pop    ebp
  4114bb:	ret    
  4114bc:	(bad)  
  4114bd:	(bad)  
  4114be:	(bad)  
  4114bf:	inc    DWORD PTR [esi]
  4114c1:	add    BYTE PTR [eax],al
  4114c3:	add    BYTE PTR [ebx+0x74],dl
  4114c6:	jb     0x411531
  4114c8:	outs   dx,BYTE PTR ds:[esi]
  4114c9:	add    BYTE PTR [bx+si],al
  4114cc:	(bad)  
  4114cd:	(bad)  
  4114ce:	(bad)  
  4114cf:	inc    DWORD PTR [ebx]
  4114d1:	add    BYTE PTR [eax],al
  4114d3:	add    BYTE PTR [ecx+0x6e],al
  4114d6:	jns    0x4114d8
  4114d8:	(bad)  
  4114d9:	(bad)  
  4114da:	(bad)  
  4114db:	inc    DWORD PTR [esi]
  4114dd:	add    BYTE PTR [eax],al
  4114df:	add    BYTE PTR [ecx+0x72],al
  4114e2:	jb     0x411545
  4114e4:	jns    0x411506
  4114e6:	add    BYTE PTR [eax],al
  4114e8:	(bad)  
  4114e9:	(bad)  
  4114ea:	(bad)  
  4114eb:	inc    DWORD PTR [esi]
  4114ed:	add    BYTE PTR [eax],al
  4114ef:	add    BYTE PTR [edx+0x79],al
  4114f2:	push   edx
  4114f3:	data16 and BYTE PTR gs:[eax],al
  4114f7:	add    BYTE PTR [ebx+0x56],dl
  4114fa:	mov    esi,edx
  4114fc:	mov    ebx,eax
  4114fe:	mov    eax,ebx
  411500:	call   0x40fe04
  411505:	mov    WORD PTR [ebx],0xa
  41150a:	mov    DWORD PTR [ebx+0x8],esi
  41150d:	pop    esi
  41150e:	pop    ebx
  41150f:	ret    
  411510:	mov    edx,0x80020004
  411515:	call   0x4114f8
  41151a:	ret    
  41151b:	nop
  41151c:	and    BYTE PTR ds:0x3110041,dl
  411522:	xor    BYTE PTR cs:[edx],dh
  411525:	add    al,0x0
  411527:	add    BYTE PTR [eax],al
  411529:	add    BYTE PTR [eax],al
  41152b:	add    BYTE PTR [eax],al
  41152d:	(bad)  
  41152e:	(bad)  
  41152f:	(bad)  
  411530:	jmp    DWORD PTR [ecx+esi*8+0x40]
  411534:	add    BYTE PTR [eax],cl
  411536:	push   esi
  411537:	popa   
  411538:	jb     0x4115a3
  41153a:	popa   
  41153b:	outs   dx,BYTE PTR ds:[esi]
  41153c:	je     0x4115b1
  41153e:	mov    eax,eax
  411540:	push   ebp
  411541:	mov    ebp,esp
  411543:	push   ebx
  411544:	push   esi
  411545:	mov    esi,0x472988
  41154a:	push   0x47298c
  41154f:	call   0x407180
  411554:	xor    edx,edx
  411556:	push   ebp
  411557:	push   0x4115a1
  41155c:	push   DWORD PTR fs:[edx]
  41155f:	mov    DWORD PTR fs:[edx],esp
  411562:	mov    eax,DWORD PTR [esi]
  411564:	call   0x4061f4
  411569:	mov    ebx,eax
  41156b:	dec    ebx
  41156c:	cmp    ebx,0x0
  41156f:	jl     0x411589
  411571:	mov    eax,DWORD PTR [esi]
  411573:	mov    eax,DWORD PTR [eax+ebx*4]
  411576:	cmp    eax,DWORD PTR ds:0x461a1c
  41157c:	je     0x411583
  41157e:	call   0x4040a0
  411583:	dec    ebx
  411584:	cmp    ebx,0xffffffff
  411587:	jne    0x411571
  411589:	xor    eax,eax
  41158b:	pop    edx
  41158c:	pop    ecx
  41158d:	pop    ecx
  41158e:	mov    DWORD PTR fs:[eax],edx
  411591:	push   0x4115a8
  411596:	push   0x47298c
  41159b:	call   0x4072a8
  4115a0:	ret    
  4115a1:	jmp    0x40481c
  4115a6:	jmp    0x411596
  4115a8:	pop    esi
  4115a9:	pop    ebx
  4115aa:	pop    ebp
  4115ab:	ret    
  4115ac:	push   ebp
  4115ad:	mov    ebp,esp
  4115af:	call   0x41176c
  4115b4:	pop    ebp
  4115b5:	ret    0x4
  4115b8:	push   ebx
  4115b9:	push   esi
  4115ba:	push   edi
  4115bb:	push   ecx
  4115bc:	mov    esi,ecx
  4115be:	mov    edi,edx
  4115c0:	mov    ebx,eax
  4115c2:	mov    edx,esp
  4115c4:	movzx  eax,WORD PTR [esi]
  4115c7:	call   0x4117e4
  4115cc:	test   al,al
  4115ce:	je     0x4115e4
  4115d0:	movzx  eax,WORD PTR [ebx+0x4]
  4115d4:	push   eax
  4115d5:	mov    ecx,esi
  4115d7:	mov    edx,edi
  4115d9:	mov    eax,DWORD PTR [esp+0x4]
  4115dd:	mov    ebx,DWORD PTR [eax]
  4115df:	call   DWORD PTR [ebx+0x1c]
  4115e2:	jmp    0x4115eb
  4115e4:	mov    eax,ebx
  4115e6:	call   0x411764
  4115eb:	pop    edx
  4115ec:	pop    edi
  4115ed:	pop    esi
  4115ee:	pop    ebx
  4115ef:	ret    
  4115f0:	push   ebp
  4115f1:	mov    ebp,esp
  4115f3:	add    esp,0xfffffff8
  4115f6:	push   ebx
  4115f7:	push   esi
  4115f8:	push   edi
  4115f9:	mov    esi,ecx
  4115fb:	mov    DWORD PTR [ebp-0x4],edx
  4115fe:	mov    ebx,eax
  411600:	mov    edi,DWORD PTR [ebp+0x8]
  411603:	cmp    di,WORD PTR [ebx+0x4]
  411607:	je     0x411628
  411609:	lea    edx,[ebp-0x8]
  41160c:	movzx  eax,WORD PTR [esi]
  41160f:	call   0x4117e4
  411614:	test   al,al
  411616:	je     0x411628
  411618:	push   edi
  411619:	mov    ecx,esi
  41161b:	mov    edx,DWORD PTR [ebp-0x4]
  41161e:	mov    eax,DWORD PTR [ebp-0x8]
  411621:	mov    ebx,DWORD PTR [eax]
  411623:	call   DWORD PTR [ebx+0x1c]
  411626:	jmp    0x41162f
  411628:	mov    eax,ebx
  41162a:	call   0x411764
  41162f:	pop    edi
  411630:	pop    esi
  411631:	pop    ebx
  411632:	pop    ecx
  411633:	pop    ecx
  411634:	pop    ebp
  411635:	ret    0x4
  411638:	push   ebp
  411639:	mov    ebp,esp
  41163b:	call   0x41176c
  411640:	pop    ebp
  411641:	ret    0x4
  411644:	push   ebp
  411645:	mov    ebp,esp
  411647:	push   ecx
  411648:	push   ebx
  411649:	push   esi
  41164a:	push   edi
  41164b:	mov    edi,edx
  41164d:	mov    esi,eax
  41164f:	lea    eax,[ebp-0x1]
  411652:	push   eax
  411653:	mov    edx,edi
  411655:	mov    eax,esi
  411657:	mov    ebx,DWORD PTR [eax]
  411659:	call   DWORD PTR [ebx+0x38]
  41165c:	movzx  eax,BYTE PTR [ebp-0x1]
  411660:	mov    edx,DWORD PTR [ebp+0x8]
  411663:	lea    edx,[edx+edx*2]
  411666:	add    edx,0x461a88
  41166c:	movzx  eax,BYTE PTR [edx+eax*1-0x2a]
  411671:	pop    edi
  411672:	pop    esi
  411673:	pop    ebx
  411674:	pop    ecx
  411675:	pop    ebp
  411676:	ret    0x4
  411679:	lea    eax,[eax+0x0]
  41167c:	push   ebx
  41167d:	push   esi
  41167e:	push   edi
  41167f:	push   ebp
  411680:	push   ecx
  411681:	mov    esi,ecx
  411683:	mov    edi,edx
  411685:	mov    ebx,eax
  411687:	mov    ecx,esp
  411689:	mov    edx,esi
  41168b:	mov    eax,ebx
  41168d:	mov    ebp,DWORD PTR [eax]
  41168f:	call   DWORD PTR [ebp+0xc]
  411692:	test   al,al
  411694:	je     0x4116a8
  411696:	movzx  eax,WORD PTR [esp]
  41169a:	push   eax
  41169b:	mov    ecx,esi
  41169d:	mov    edx,edi
  41169f:	mov    eax,ebx
  4116a1:	mov    ebx,DWORD PTR [eax]
  4116a3:	call   DWORD PTR [ebx+0x1c]
  4116a6:	jmp    0x4116af
  4116a8:	mov    eax,ebx
  4116aa:	call   0x411764
  4116af:	pop    edx
  4116b0:	pop    ebp
  4116b1:	pop    edi
  4116b2:	pop    esi
  4116b3:	pop    ebx
  4116b4:	ret    
  4116b5:	lea    eax,[eax+0x0]
  4116b8:	push   ebp
  4116b9:	mov    ebp,esp
  4116bb:	add    esp,0xfffffff8
  4116be:	call   0x404454
  4116c3:	mov    BYTE PTR [ebp-0x5],dl
  4116c6:	mov    DWORD PTR [ebp-0x4],eax
  4116c9:	push   0x47298c
  4116ce:	call   0x407180
  4116d3:	xor    edx,edx
  4116d5:	push   ebp
  4116d6:	push   0x41171b
  4116db:	push   DWORD PTR fs:[edx]
  4116de:	mov    DWORD PTR fs:[edx],esp
  4116e1:	mov    eax,DWORD PTR [ebp-0x4]
  4116e4:	movzx  eax,WORD PTR [eax+0x4]
  4116e8:	test   ax,ax
  4116eb:	je     0x411703
  4116ed:	movzx  eax,ax
  4116f0:	mov    edx,DWORD PTR ds:0x472988
  4116f6:	mov    ecx,DWORD PTR ds:0x461a1c
  4116fc:	mov    DWORD PTR [edx+eax*4-0x400],ecx
  411703:	xor    eax,eax
  411705:	pop    edx
  411706:	pop    ecx
  411707:	pop    ecx
  411708:	mov    DWORD PTR fs:[eax],edx
  41170b:	push   0x411722
  411710:	push   0x47298c
  411715:	call   0x4072a8
  41171a:	ret    
  41171b:	jmp    0x40481c
  411720:	jmp    0x411710
  411722:	movzx  edx,BYTE PTR [ebp-0x5]
  411726:	and    dl,0xfc
  411729:	mov    eax,DWORD PTR [ebp-0x4]
  41172c:	call   0x404090
  411731:	cmp    BYTE PTR [ebp-0x5],0x0
  411735:	jle    0x41173f
  411737:	mov    eax,DWORD PTR [ebp-0x4]
  41173a:	call   0x4043fc
  41173f:	pop    ecx
  411740:	pop    ecx
  411741:	pop    ebp
  411742:	ret    
  411743:	nop
  411744:	xor    eax,eax
  411746:	ret    
  411747:	nop
  411748:	push   ebp
  411749:	mov    ebp,esp
  41174b:	mov    edx,DWORD PTR [ebp+0x8]
  41174e:	movzx  eax,WORD PTR [eax+0x4]
  411752:	mov    WORD PTR [edx],ax
  411755:	mov    al,0x1
  411757:	pop    ebp
  411758:	ret    0x4
  41175b:	nop
  41175c:	mov    WORD PTR [ecx],0x8
  411761:	mov    al,0x1
  411763:	ret    
  411764:	call   0x40f650
  411769:	ret    
  41176a:	mov    eax,eax
  41176c:	call   0x40f740
  411771:	ret    
  411772:	mov    eax,eax
  411774:	call   0x40fb18
  411779:	ret    
  41177a:	mov    eax,eax
  41177c:	push   ebp
  41177d:	mov    ebp,esp
  41177f:	mov    edx,DWORD PTR [ebp+0x8]
  411782:	movzx  eax,WORD PTR [eax+0x4]
  411786:	mov    WORD PTR [edx],ax
  411789:	mov    al,0x1
  41178b:	pop    ebp
  41178c:	ret    0x4
  41178f:	nop
  411790:	call   0x41176c
  411795:	ret    
  411796:	mov    eax,eax
  411798:	push   ebp
  411799:	mov    ebp,esp
  41179b:	call   0x411774
  4117a0:	pop    ebp
  4117a1:	ret    0x8
  4117a4:	push   ebp
  4117a5:	mov    ebp,esp
  4117a7:	or     eax,0xffffffff
  4117aa:	pop    ebp
  4117ab:	ret    0x4
  4117ae:	mov    eax,eax
  4117b0:	push   ebp
  4117b1:	mov    ebp,esp
  4117b3:	or     eax,0xffffffff
  4117b6:	pop    ebp
  4117b7:	ret    0x4
  4117ba:	mov    eax,eax
  4117bc:	push   ebp
  4117bd:	mov    ebp,esp
  4117bf:	push   ebx
  4117c0:	mov    ebx,DWORD PTR [ebp+0x8]
  4117c3:	mov    ecx,DWORD PTR [ebp+0x10]
  4117c6:	mov    edx,DWORD PTR [ebp+0xc]
  4117c9:	mov    eax,ebx
  4117cb:	call   0x404154
  4117d0:	test   al,al
  4117d2:	je     0x4117d8
  4117d4:	xor    eax,eax
  4117d6:	jmp    0x4117dd
  4117d8:	mov    eax,0x80004002
  4117dd:	pop    ebx
  4117de:	pop    ebp
  4117df:	ret    0xc
  4117e2:	mov    eax,eax
  4117e4:	push   ebp
  4117e5:	mov    ebp,esp
  4117e7:	push   ecx
  4117e8:	push   ebx
  4117e9:	push   esi
  4117ea:	push   edi
  4117eb:	mov    esi,edx
  4117ed:	mov    ebx,eax
  4117ef:	cmp    DWORD PTR ds:0x472988,0x0
  4117f6:	je     0x411806
  4117f8:	cmp    bx,0x100
  4117fd:	jb     0x411806
  4117ff:	cmp    bx,0x7ff
  411804:	jbe    0x41180a
  411806:	xor    eax,eax
  411808:	jmp    0x41180c
  41180a:	mov    al,0x1
  41180c:	mov    BYTE PTR [ebp-0x1],al
  41180f:	cmp    BYTE PTR [ebp-0x1],0x0
  411813:	je     0x411893
  411815:	push   0x47298c
  41181a:	call   0x407180
  41181f:	xor    eax,eax
  411821:	push   ebp
  411822:	push   0x41188c
  411827:	push   DWORD PTR fs:[eax]
  41182a:	mov    DWORD PTR fs:[eax],esp
  41182d:	mov    eax,ds:0x472988
  411832:	call   0x4061f4
  411837:	movzx  edi,bx
  41183a:	mov    edx,edi
  41183c:	sub    edx,0x100
  411842:	cmp    eax,edx
  411844:	setg   BYTE PTR [ebp-0x1]
  411848:	cmp    BYTE PTR [ebp-0x1],0x0
  41184c:	je     0x411874
  41184e:	mov    eax,ds:0x472988
  411853:	mov    eax,DWORD PTR [eax+edi*4-0x400]
  41185a:	mov    DWORD PTR [esi],eax
  41185c:	cmp    DWORD PTR [esi],0x0
  41185f:	je     0x41186b
  411861:	mov    eax,DWORD PTR [esi]
  411863:	cmp    eax,DWORD PTR ds:0x461a1c
  411869:	jne    0x41186f
  41186b:	xor    eax,eax
  41186d:	jmp    0x411871
  41186f:	mov    al,0x1
  411871:	mov    BYTE PTR [ebp-0x1],al
  411874:	xor    eax,eax
  411876:	pop    edx
  411877:	pop    ecx
  411878:	pop    ecx
  411879:	mov    DWORD PTR fs:[eax],edx
  41187c:	push   0x411893
  411881:	push   0x47298c
  411886:	call   0x4072a8
  41188b:	ret    
  41188c:	jmp    0x40481c
  411891:	jmp    0x411881
  411893:	movzx  eax,BYTE PTR [ebp-0x1]
  411897:	pop    edi
  411898:	pop    esi
  411899:	pop    ebx
  41189a:	pop    ecx
  41189b:	pop    ebp
  41189c:	ret    
  41189d:	lea    eax,[eax+0x0]
  4118a0:	push   ebp
  4118a1:	mov    ebp,esp
  4118a3:	add    esp,0xfffffef0
  4118a9:	push   ebx
  4118aa:	push   esi
  4118ab:	push   edi
  4118ac:	xor    ecx,ecx
  4118ae:	mov    DWORD PTR [ebp-0x10],ecx
  4118b1:	mov    DWORD PTR [ebp-0x8],edx
  4118b4:	mov    DWORD PTR [ebp-0x4],eax
  4118b7:	xor    eax,eax
  4118b9:	push   ebp
  4118ba:	push   0x411976
  4118bf:	push   DWORD PTR fs:[eax]
  4118c2:	mov    DWORD PTR fs:[eax],esp
  4118c5:	mov    BYTE PTR [ebp-0x9],0x0
  4118c9:	push   0x47298c
  4118ce:	call   0x407180
  4118d3:	xor    eax,eax
  4118d5:	push   ebp
  4118d6:	push   0x411959
  4118db:	push   DWORD PTR fs:[eax]
  4118de:	mov    DWORD PTR fs:[eax],esp
  4118e1:	mov    eax,ds:0x472988
  4118e6:	call   0x4061fc
  4118eb:	mov    esi,eax
  4118ed:	test   esi,esi
  4118ef:	jl     0x411941
  4118f1:	inc    esi
  4118f2:	xor    edi,edi
  4118f4:	mov    eax,ds:0x472988
  4118f9:	mov    ebx,DWORD PTR [eax+edi*4]
  4118fc:	test   ebx,ebx
  4118fe:	je     0x41193d
  411900:	cmp    ebx,DWORD PTR ds:0x461a1c
  411906:	je     0x41193d
  411908:	lea    edx,[ebp-0x110]
  41190e:	mov    eax,DWORD PTR [ebx]
  411910:	call   0x403f80
  411915:	lea    edx,[ebp-0x110]
  41191b:	lea    eax,[ebp-0x10]
  41191e:	call   0x4051ec
  411923:	mov    eax,DWORD PTR [ebp-0x10]
  411926:	mov    edx,DWORD PTR [ebp-0x4]
  411929:	call   0x408668
  41192e:	test   al,al
  411930:	je     0x41193d
  411932:	mov    eax,DWORD PTR [ebp-0x8]
  411935:	mov    DWORD PTR [eax],ebx
  411937:	mov    BYTE PTR [ebp-0x9],0x1
  41193b:	jmp    0x411941
  41193d:	inc    edi
  41193e:	dec    esi
  41193f:	jne    0x4118f4
  411941:	xor    eax,eax
  411943:	pop    edx
  411944:	pop    ecx
  411945:	pop    ecx
  411946:	mov    DWORD PTR fs:[eax],edx
  411949:	push   0x411960
  41194e:	push   0x47298c
  411953:	call   0x4072a8
  411958:	ret    
  411959:	jmp    0x40481c
  41195e:	jmp    0x41194e
  411960:	xor    eax,eax
  411962:	pop    edx
  411963:	pop    ecx
  411964:	pop    ecx
  411965:	mov    DWORD PTR fs:[eax],edx
  411968:	push   0x41197d
  41196d:	lea    eax,[ebp-0x10]
  411970:	call   0x404f88
  411975:	ret    
  411976:	jmp    0x40481c
  41197b:	jmp    0x41196d
  41197d:	movzx  eax,BYTE PTR [ebp-0x9]
  411981:	pop    edi
  411982:	pop    esi
  411983:	pop    ebx
  411984:	mov    esp,ebp
  411986:	pop    ebp
  411987:	ret    
  411988:	call   0x40fb6c
  41198d:	ret    
  41198e:	mov    eax,eax
  411990:	push   ebp
  411991:	mov    ebp,esp
  411993:	xor    eax,eax
  411995:	push   ebp
  411996:	push   0x4119ff
  41199b:	push   DWORD PTR fs:[eax]
  41199e:	mov    DWORD PTR fs:[eax],esp
  4119a1:	inc    DWORD PTR ds:0x472984
  4119a7:	jne    0x4119f1
  4119a9:	call   0x411540
  4119ae:	push   0x47298c
  4119b3:	call   0x407170
  4119b8:	mov    eax,0x472964
  4119bd:	call   0x40fe18
  4119c2:	mov    eax,0x461a10
  4119c7:	call   0x404f88
  4119cc:	mov    eax,0x461a34
  4119d1:	mov    ecx,0x15
  4119d6:	mov    edx,DWORD PTR ds:0x401084
  4119dc:	call   0x405b50
  4119e1:	mov    eax,0x472988
  4119e6:	mov    edx,DWORD PTR ds:0x41151c
  4119ec:	call   0x4063bc
  4119f1:	xor    eax,eax
  4119f3:	pop    edx
  4119f4:	pop    ecx
  4119f5:	pop    ecx
  4119f6:	mov    DWORD PTR fs:[eax],edx
  4119f9:	push   0x411a06
  4119fe:	ret    
  4119ff:	jmp    0x40481c
  411a04:	jmp    0x4119fe
  411a06:	pop    ebp
  411a07:	ret    
  411a08:	lock pop es
  411a0a:	inc    edi
  411a0b:	add    BYTE PTR [ebp-0xfffff01],ch
  411a11:	pop    es
  411a12:	inc    edi
  411a13:	add    BYTE PTR [esi-0xfffff01],ch
  411a19:	pop    es
  411a1a:	inc    edi
  411a1b:	add    BYTE PTR [edi-0xfffff01],ch
  411a21:	pop    es
  411a22:	inc    edi
  411a23:	add    BYTE PTR [eax-0xfffff01],dl
  411a29:	pop    es
  411a2a:	inc    edi
  411a2b:	add    BYTE PTR [ecx-0xfffff01],dl
  411a31:	pop    es
  411a32:	inc    edi
  411a33:	add    BYTE PTR [edx-0xfffff01],dl
  411a39:	pop    es
  411a3a:	inc    edi
  411a3b:	add    BYTE PTR [ebx-0xfffff01],dl
  411a41:	pop    es
  411a42:	inc    edi
  411a43:	add    BYTE PTR [edi+edi*8+0x7f00000],dl
  411a4a:	inc    edi
  411a4b:	add    BYTE PTR [ebp-0xfffff01],dl
  411a51:	pop    es
  411a52:	inc    edi
  411a53:	add    BYTE PTR [esi-0xfffff01],dl
  411a59:	pop    es
  411a5a:	inc    edi
  411a5b:	add    BYTE PTR [edi-0xfffff01],dl
  411a61:	pop    es
  411a62:	inc    edi
  411a63:	add    BYTE PTR [eax-0xfffff01],bl
  411a69:	pop    es
  411a6a:	inc    edi
  411a6b:	add    BYTE PTR [ecx-0xfffff01],bl
  411a71:	pop    es
  411a72:	inc    edi
  411a73:	add    BYTE PTR [edx-0xfffff01],bl
  411a79:	pop    es
  411a7a:	inc    edi
  411a7b:	add    BYTE PTR [ebx-0xfffff01],bl
  411a81:	pop    es
  411a82:	inc    edi
  411a83:	add    BYTE PTR [edi+edi*8+0x7f00000],bl
  411a8a:	inc    edi
  411a8b:	add    BYTE PTR [ebp-0xfffff01],bl
  411a91:	pop    es
  411a92:	inc    edi
  411a93:	add    BYTE PTR [esi-0xfffff01],bl
  411a99:	pop    es
  411a9a:	inc    edi
  411a9b:	add    BYTE PTR [edi-0xfffff01],bl
  411aa1:	pop    es
  411aa2:	inc    edi
  411aa3:	add    BYTE PTR [eax-0xfffff01],al
  411aa9:	pop    es
  411aaa:	inc    edi
  411aab:	add    BYTE PTR [ecx-0xfffff01],al
  411ab1:	pop    es
  411ab2:	inc    edi
  411ab3:	add    BYTE PTR [edx-0xfffff01],al
  411ab9:	pop    es
  411aba:	inc    edi
  411abb:	add    BYTE PTR [ebx-0xfffff01],al
  411ac1:	pop    es
  411ac2:	inc    edi
  411ac3:	add    BYTE PTR [edi+edi*8+0x7f00000],al
  411aca:	inc    edi
  411acb:	add    BYTE PTR [ebp-0xfffff01],al
  411ad1:	pop    es
  411ad2:	inc    edi
  411ad3:	add    BYTE PTR [esi-0xfffff01],al
  411ad9:	pop    es
  411ada:	inc    edi
  411adb:	add    BYTE PTR [edi-0xfffff01],al
  411ae1:	pop    es
  411ae2:	inc    edi
  411ae3:	add    BYTE PTR [eax-0xfffff01],cl
  411ae9:	pop    es
  411aea:	inc    edi
  411aeb:	add    BYTE PTR [ecx-0xffff01],cl
  411af1:	(bad)  
  411af2:	(bad)  
  411af3:	inc    DWORD PTR ds:0x46000000
  411af9:	popa   
  411afa:	ins    BYTE PTR es:[edi],dx
  411afb:	jae    0x411b62
  411afd:	add    BYTE PTR [eax],al
  411aff:	add    bh,bh
  411b01:	(bad)  
  411b02:	(bad)  
  411b03:	inc    DWORD PTR [eax+eax*1]
  411b06:	add    BYTE PTR [eax],al
  411b08:	push   esp
  411b09:	jb     0x411b80
  411b0b:	add    BYTE PTR gs:[eax],al
  411b0e:	add    BYTE PTR [eax],al
  411b10:	(bad)  
  411b11:	(bad)  
  411b12:	(bad)  
  411b13:	inc    DWORD PTR [ecx]
  411b15:	add    BYTE PTR [eax],al
  411b17:	add    BYTE PTR [esi],ch
  411b19:	add    BYTE PTR [eax],al
  411b1b:	add    BYTE PTR [ecx],dh
  411b1d:	ror    BYTE PTR [edx+0x448d0150],cl
  411b23:	adc    BYTE PTR [edx],al
  411b25:	ret    
  411b26:	mov    eax,eax
  411b28:	push   ebx
  411b29:	push   esi
  411b2a:	push   edi
  411b2b:	test   edx,edx
  411b2d:	je     0x411b6a
  411b2f:	xor    ecx,ecx
  411b31:	mov    cl,BYTE PTR [eax+0x1]
  411b34:	mov    eax,DWORD PTR [eax+ecx*1+0xb]
  411b38:	mov    eax,DWORD PTR [eax]
  411b3a:	mov    cl,BYTE PTR [eax+0x1]
  411b3d:	lea    esi,[eax+ecx*1+0xf]
  411b41:	mov    edi,DWORD PTR [eax+ecx*1+0x7]
  411b45:	xor    eax,eax
  411b47:	mov    cl,BYTE PTR [esi]
  411b49:	cmp    ecx,DWORD PTR [edx-0x4]
  411b4c:	jne    0x411b61
  411b4e:	mov    bl,BYTE PTR [ecx+edx*1-0x1]
  411b52:	xor    bl,BYTE PTR [ecx+esi*1]
  411b55:	test   bl,0xdf
  411b58:	jne    0x411b5f
  411b5a:	dec    ecx
  411b5b:	jne    0x411b4e
  411b5d:	jmp    0x411b6d
  411b5f:	mov    cl,BYTE PTR [esi]
  411b61:	inc    eax
  411b62:	lea    esi,[ecx+esi*1+0x1]
  411b66:	cmp    eax,edi
  411b68:	jle    0x411b47
  411b6a:	or     eax,0xffffffff
  411b6d:	pop    edi
  411b6e:	pop    esi
  411b6f:	pop    ebx
  411b70:	ret    
  411b71:	lea    eax,[eax+0x0]
  411b74:	push   ebx
  411b75:	push   esi
  411b76:	mov    esi,edx
  411b78:	mov    ebx,eax
  411b7a:	cmp    BYTE PTR [ebx],0x1
  411b7d:	jne    0x411b89
  411b7f:	mov    eax,esi
  411b81:	call   0x408b28
  411b86:	pop    esi
  411b87:	pop    ebx
  411b88:	ret    
  411b89:	mov    eax,ebx
  411b8b:	call   0x411b1c
  411b90:	cmp    DWORD PTR [eax+0x1],0x0
  411b94:	jge    0x411bca
  411b96:	mov    edx,DWORD PTR ds:0x461a9c
  411b9c:	mov    eax,esi
  411b9e:	call   0x408668
  411ba3:	test   al,al
  411ba5:	je     0x411bab
  411ba7:	xor    eax,eax
  411ba9:	jmp    0x411bd3
  411bab:	mov    edx,DWORD PTR ds:0x461aa0
  411bb1:	mov    eax,esi
  411bb3:	call   0x408668
  411bb8:	test   al,al
  411bba:	je     0x411bc1
  411bbc:	or     eax,0xffffffff
  411bbf:	jmp    0x411bd3
  411bc1:	mov    eax,esi
  411bc3:	call   0x408b28
  411bc8:	jmp    0x411bd3
  411bca:	mov    edx,esi
  411bcc:	mov    eax,ebx
  411bce:	call   0x411b28
  411bd3:	pop    esi
  411bd4:	pop    ebx
  411bd5:	ret    
  411bd6:	mov    eax,eax
  411bd8:	push   ebx
  411bd9:	push   esi
  411bda:	push   edi
  411bdb:	test   eax,eax
  411bdd:	je     0x411c44
  411bdf:	mov    ecx,edx
  411be1:	or     edx,edx
  411be3:	je     0x411bf0
  411be5:	mov    cl,BYTE PTR [edx-0x4]
  411be8:	mov    ch,BYTE PTR [edx]
  411bea:	and    ecx,0xdfff
  411bf0:	xor    ebx,ebx
  411bf2:	mov    bl,BYTE PTR [eax+0x1]
  411bf5:	lea    esi,[eax+ebx*1+0x2]
  411bf9:	mov    bl,BYTE PTR [esi+0xa]
  411bfc:	movzx  edi,WORD PTR [esi+ebx*1+0xb]
  411c01:	test   edi,edi
  411c03:	je     0x411c1d
  411c05:	lea    eax,[esi+ebx*1+0xd]
  411c09:	mov    bx,WORD PTR [eax+0x1a]
  411c0d:	and    bh,0xdf
  411c10:	cmp    ebx,ecx
  411c12:	je     0x411c32
  411c14:	mov    bh,0x0
  411c16:	dec    edi
  411c17:	lea    eax,[eax+ebx*1+0x1b]
  411c1b:	jne    0x411c09
  411c1d:	mov    eax,DWORD PTR [esi+0x4]
  411c20:	test   eax,eax
  411c22:	je     0x411c44
  411c24:	mov    eax,DWORD PTR [eax]
  411c26:	jmp    0x411bf0
  411c28:	mov    ch,BYTE PTR [edx]
  411c2a:	and    ch,0xdf
  411c2d:	mov    bl,BYTE PTR [eax+0x1a]
  411c30:	jmp    0x411c14
  411c32:	mov    bh,0x0
  411c34:	mov    ch,BYTE PTR [ebx+edx*1-0x1]
  411c38:	xor    ch,BYTE PTR [eax+ebx*1+0x1a]
  411c3c:	test   ch,0xdf
  411c3f:	jne    0x411c28
  411c41:	dec    ebx
  411c42:	jne    0x411c34
  411c44:	pop    edi
  411c45:	pop    esi
  411c46:	pop    ebx
  411c47:	ret    
  411c48:	push   ebx
  411c49:	push   esi
  411c4a:	push   edi
  411c4b:	xor    ecx,ecx
  411c4d:	mov    esi,eax
  411c4f:	mov    cl,BYTE PTR [eax+0x1]
  411c52:	mov    edi,edx
  411c54:	xor    eax,eax
  411c56:	movzx  ecx,WORD PTR [esi+ecx*1+0xa]
  411c5b:	rep stos DWORD PTR es:[edi],eax
  411c5d:	mov    cl,BYTE PTR [esi+0x1]
  411c60:	lea    esi,[esi+ecx*1+0x2]
  411c64:	mov    cl,BYTE PTR [esi+0xa]
  411c67:	movzx  eax,WORD PTR [esi+ecx*1+0xb]
  411c6c:	test   eax,eax
  411c6e:	je     0x411c8b
  411c70:	lea    edi,[esi+ecx*1+0xd]
  411c74:	movzx  ebx,WORD PTR [edi+0x18]
  411c78:	mov    cl,BYTE PTR [edi+0x1a]
  411c7b:	cmp    DWORD PTR [edx+ebx*4],0x0
  411c7f:	jne    0x411c84
  411c81:	mov    DWORD PTR [edx+ebx*4],edi
  411c84:	lea    edi,[edi+ecx*1+0x1b]
  411c88:	dec    eax
  411c89:	jne    0x411c74
  411c8b:	mov    esi,DWORD PTR [esi+0x4]
  411c8e:	xor    ecx,ecx
  411c90:	test   esi,esi
  411c92:	je     0x411c98
  411c94:	mov    esi,DWORD PTR [esi]
  411c96:	jmp    0x411c5d
  411c98:	pop    edi
  411c99:	pop    esi
  411c9a:	pop    ebx
  411c9b:	ret    
  411c9c:	push   ebx
  411c9d:	push   edi
  411c9e:	mov    edi,DWORD PTR [edx]
  411ca0:	mov    edi,DWORD PTR [edi]
  411ca2:	mov    bl,0x4
  411ca4:	cmp    BYTE PTR [edi],0x7
  411ca7:	je     0x411cb2
  411ca9:	xor    ecx,ecx
  411cab:	mov    cl,BYTE PTR [edi+0x1]
  411cae:	mov    bl,BYTE PTR [edi+ecx*1+0x2]
  411cb2:	mov    ecx,DWORD PTR [edx+0x4]
  411cb5:	cmp    BYTE PTR [edx+0x7],0xfe
  411cb9:	mov    edx,DWORD PTR [edx+0x10]
  411cbc:	jb     0x411cc9
  411cbe:	ja     0x411ccd
  411cc0:	movsx  ecx,cx
  411cc3:	add    ecx,DWORD PTR [eax]
  411cc5:	call   DWORD PTR [ecx]
  411cc7:	jmp    0x411ce6
  411cc9:	call   ecx
  411ccb:	jmp    0x411ce6
  411ccd:	and    ecx,0xffffff
  411cd3:	add    ecx,eax
  411cd5:	mov    al,BYTE PTR [ecx]
  411cd7:	cmp    bl,0x2
  411cda:	jb     0x411ce6
  411cdc:	mov    ax,WORD PTR [ecx]
  411cdf:	cmp    bl,0x4
  411ce2:	jb     0x411ce6
  411ce4:	mov    eax,DWORD PTR [ecx]
  411ce6:	cmp    bl,0x4
  411ce9:	jae    0x411d0a
  411ceb:	cmp    bl,0x2
  411cee:	jae    0x411d00
  411cf0:	cmp    bl,0x0
  411cf3:	movsx  eax,al
  411cf6:	je     0x411d0a
  411cf8:	and    eax,0xff
  411cfd:	pop    edi
  411cfe:	pop    ebx
  411cff:	ret    
  411d00:	movsx  eax,ax
  411d03:	je     0x411d0a
  411d05:	and    eax,0xffff
  411d0a:	pop    edi
  411d0b:	pop    ebx
  411d0c:	ret    
  411d0d:	lea    eax,[eax+0x0]
  411d10:	push   ebx
  411d11:	push   esi
  411d12:	push   edi
  411d13:	mov    edi,edx
  411d15:	mov    esi,DWORD PTR [edi]
  411d17:	mov    esi,DWORD PTR [esi]
  411d19:	mov    bl,0x4
  411d1b:	cmp    BYTE PTR [esi],0x7
  411d1e:	je     0x411d29
  411d20:	xor    ebx,ebx
  411d22:	mov    bl,BYTE PTR [esi+0x1]
  411d25:	mov    bl,BYTE PTR [esi+ebx*1+0x2]
  411d29:	mov    edx,DWORD PTR [edi+0x10]
  411d2c:	cmp    edx,0x80000000
  411d32:	jne    0x411d36
  411d34:	mov    edx,ecx
  411d36:	mov    esi,DWORD PTR [edi+0x8]
  411d39:	cmp    BYTE PTR [edi+0xb],0xfe
  411d3d:	ja     0x411d4e
  411d3f:	jb     0x411d4a
  411d41:	movsx  esi,si
  411d44:	add    esi,DWORD PTR [eax]
  411d46:	call   DWORD PTR [esi]
  411d48:	jmp    0x411d67
  411d4a:	call   esi
  411d4c:	jmp    0x411d67
  411d4e:	and    esi,0xffffff
  411d54:	add    eax,esi
  411d56:	mov    BYTE PTR [eax],cl
  411d58:	cmp    bl,0x2
  411d5b:	jb     0x411d67
  411d5d:	mov    WORD PTR [eax],cx
  411d60:	cmp    bl,0x4
  411d63:	jb     0x411d67
  411d65:	mov    DWORD PTR [eax],ecx
  411d67:	pop    edi
  411d68:	pop    esi
  411d69:	pop    ebx
  411d6a:	ret    
  411d6b:	nop
  411d6c:	push   ebp
  411d6d:	mov    ebp,esp
  411d6f:	push   0x0
  411d71:	push   ebx
  411d72:	push   esi
  411d73:	push   edi
  411d74:	mov    edi,edx
  411d76:	mov    ebx,eax
  411d78:	xor    eax,eax
  411d7a:	push   ebp
  411d7b:	push   0x411dfb
  411d80:	push   DWORD PTR fs:[eax]
  411d83:	mov    DWORD PTR fs:[eax],esp
  411d86:	mov    eax,ebx
  411d88:	call   0x411b1c
  411d8d:	mov    esi,DWORD PTR [eax+0x1]
  411d90:	movzx  eax,BYTE PTR [ebx]
  411d93:	dec    al
  411d95:	je     0x411da1
  411d97:	dec    al
  411d99:	je     0x411dae
  411d9b:	sub    al,0x7
  411d9d:	je     0x411dae
  411d9f:	jmp    0x411dda
  411da1:	mov    eax,edi
  411da3:	call   0x408b28
  411da8:	mov    ebx,eax
  411daa:	sub    ebx,esi
  411dac:	jmp    0x411de5
  411dae:	mov    ebx,edi
  411db0:	test   ebx,ebx
  411db2:	je     0x411db9
  411db4:	sub    ebx,0x4
  411db7:	mov    ebx,DWORD PTR [ebx]
  411db9:	lea    eax,[ebp-0x4]
  411dbc:	push   eax
  411dbd:	mov    ecx,ebx
  411dbf:	dec    ecx
  411dc0:	mov    edx,0x2
  411dc5:	mov    eax,edi
  411dc7:	call   0x405480
  411dcc:	mov    eax,DWORD PTR [ebp-0x4]
  411dcf:	call   0x408b28
  411dd4:	mov    ebx,eax
  411dd6:	sub    ebx,esi
  411dd8:	jmp    0x411de5
  411dda:	mov    edx,edi
  411ddc:	mov    eax,ebx
  411dde:	call   0x411b74
  411de3:	mov    ebx,eax
  411de5:	xor    eax,eax
  411de7:	pop    edx
  411de8:	pop    ecx
  411de9:	pop    ecx
  411dea:	mov    DWORD PTR fs:[eax],edx
  411ded:	push   0x411e02
  411df2:	lea    eax,[ebp-0x4]
  411df5:	call   0x404f88
  411dfa:	ret    
  411dfb:	jmp    0x40481c
  411e00:	jmp    0x411df2
  411e02:	mov    eax,ebx
  411e04:	pop    edi
  411e05:	pop    esi
  411e06:	pop    ebx
  411e07:	pop    ecx
  411e08:	pop    ebp
  411e09:	ret    
  411e0a:	mov    eax,eax
  411e0c:	push   esi
  411e0d:	push   edi
  411e0e:	mov    esi,edx
  411e10:	mov    edx,DWORD PTR [esi+0x10]
  411e13:	cmp    edx,0x80000000
  411e19:	jne    0x411e1d
  411e1b:	mov    edx,ecx
  411e1d:	mov    edi,DWORD PTR [esi+0x8]
  411e20:	cmp    BYTE PTR [esi+0xb],0xfe
  411e24:	ja     0x411e37
  411e26:	jb     0x411e32
  411e28:	movsx  edi,di
  411e2b:	add    edi,DWORD PTR [eax]
  411e2d:	call   DWORD PTR [edi]
  411e2f:	pop    edi
  411e30:	pop    esi
  411e31:	ret    
  411e32:	call   edi
  411e34:	pop    edi
  411e35:	pop    esi
  411e36:	ret    
  411e37:	and    edi,0xffffff
  411e3d:	add    edi,eax
  411e3f:	mov    eax,DWORD PTR [esi]
  411e41:	mov    eax,DWORD PTR [eax]
  411e43:	mov    esi,ecx
  411e45:	xor    ecx,ecx
  411e47:	mov    cl,BYTE PTR [eax+0x1]
  411e4a:	mov    cl,BYTE PTR [eax+ecx*1+0x2]
  411e4e:	lods   al,BYTE PTR ds:[esi]
  411e4f:	cmp    al,cl
  411e51:	jb     0x411e55
  411e53:	mov    al,cl
  411e55:	stos   BYTE PTR es:[edi],al
  411e56:	mov    cl,al
  411e58:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e5a:	pop    edi
  411e5b:	pop    esi
  411e5c:	ret    
  411e5d:	lea    eax,[eax+0x0]
  411e60:	push   ebx
  411e61:	push   esi
  411e62:	push   edi
  411e63:	add    esp,0xffffff00
  411e69:	mov    edi,ecx
  411e6b:	mov    esi,edx
  411e6d:	mov    ebx,eax
  411e6f:	mov    eax,esp
  411e71:	mov    edx,edi
  411e73:	mov    ecx,0xff
  411e78:	call   0x405224
  411e7d:	mov    ecx,esp
  411e7f:	mov    edx,esi
  411e81:	mov    eax,ebx
  411e83:	call   0x411e0c
  411e88:	add    esp,0x100
  411e8e:	pop    edi
  411e8f:	pop    esi
  411e90:	pop    ebx
  411e91:	ret    
  411e92:	mov    eax,eax
  411e94:	push   ebx
  411e95:	push   esi
  411e96:	mov    esi,edx
  411e98:	mov    ebx,eax
  411e9a:	mov    eax,ebx
  411e9c:	mov    edx,esi
  411e9e:	call   0x404fdc
  411ea3:	pop    esi
  411ea4:	pop    ebx
  411ea5:	ret    
  411ea6:	mov    eax,eax
  411ea8:	push   esi
  411ea9:	push   edi
  411eaa:	mov    esi,edx
  411eac:	mov    edx,DWORD PTR [esi+0x10]
  411eaf:	cmp    edx,0x80000000
  411eb5:	jne    0x411eb9
  411eb7:	mov    edx,ecx
  411eb9:	mov    edi,DWORD PTR [esi+0x8]
  411ebc:	cmp    BYTE PTR [esi+0xb],0xfe
  411ec0:	ja     0x411ed3
  411ec2:	jb     0x411ece
  411ec4:	movsx  edi,di
  411ec7:	add    edi,DWORD PTR [eax]
  411ec9:	call   DWORD PTR [edi]
  411ecb:	pop    edi
  411ecc:	pop    esi
  411ecd:	ret    
  411ece:	call   edi
  411ed0:	pop    edi
  411ed1:	pop    esi
  411ed2:	ret    
  411ed3:	and    edi,0xffffff
  411ed9:	add    eax,edi
  411edb:	mov    edx,ecx
  411edd:	call   0x411e94
  411ee2:	pop    edi
  411ee3:	pop    esi
  411ee4:	ret    
  411ee5:	lea    eax,[eax+0x0]
  411ee8:	push   ebp
  411ee9:	mov    ebp,esp
  411eeb:	push   0x0
  411eed:	push   ebx
  411eee:	push   esi
  411eef:	push   edi
  411ef0:	mov    edi,ecx
  411ef2:	mov    esi,edx
  411ef4:	mov    ebx,eax
  411ef6:	xor    eax,eax
  411ef8:	push   ebp
  411ef9:	push   0x411f30
  411efe:	push   DWORD PTR fs:[eax]
  411f01:	mov    DWORD PTR fs:[eax],esp
  411f04:	lea    eax,[ebp-0x4]
  411f07:	mov    edx,edi
  411f09:	call   0x4058e0
  411f0e:	mov    ecx,DWORD PTR [ebp-0x4]
  411f11:	mov    edx,esi
  411f13:	mov    eax,ebx
  411f15:	call   0x411f70
  411f1a:	xor    eax,eax
  411f1c:	pop    edx
  411f1d:	pop    ecx
  411f1e:	pop    ecx
  411f1f:	mov    DWORD PTR fs:[eax],edx
  411f22:	push   0x411f37
  411f27:	lea    eax,[ebp-0x4]
  411f2a:	call   0x405790
  411f2f:	ret    
  411f30:	jmp    0x40481c
  411f35:	jmp    0x411f27
  411f37:	pop    edi
  411f38:	pop    esi
  411f39:	pop    ebx
  411f3a:	pop    ecx
  411f3b:	pop    ebp
  411f3c:	ret    
  411f3d:	lea    eax,[eax+0x0]
  411f40:	push   ebx
  411f41:	mov    ebx,DWORD PTR [edx]
  411f43:	mov    ebx,DWORD PTR [ebx]
  411f45:	movzx  ebx,BYTE PTR [ebx]
  411f48:	sub    bl,0x5
  411f4b:	je     0x411f58
  411f4d:	sub    bl,0x5
  411f50:	je     0x411f5f
  411f52:	dec    bl
  411f54:	je     0x411f66
  411f56:	jmp    0x411f6b
  411f58:	call   0x411e60
  411f5d:	pop    ebx
  411f5e:	ret    
  411f5f:	call   0x411ea8
  411f64:	pop    ebx
  411f65:	ret    
  411f66:	call   0x411ee8
  411f6b:	pop    ebx
  411f6c:	ret    
  411f6d:	lea    eax,[eax+0x0]
  411f70:	push   ebp
  411f71:	mov    ebp,esp
  411f73:	add    esp,0xfffffff4
  411f76:	push   ebx
  411f77:	push   esi
  411f78:	push   edi
  411f79:	xor    ebx,ebx
  411f7b:	mov    DWORD PTR [ebp-0xc],ebx
  411f7e:	mov    edi,ecx
  411f80:	mov    ebx,edx
  411f82:	mov    esi,eax
  411f84:	xor    eax,eax
  411f86:	push   ebp
  411f87:	push   0x412037
  411f8c:	push   DWORD PTR fs:[eax]
  411f8f:	mov    DWORD PTR fs:[eax],esp
  411f92:	mov    eax,DWORD PTR [ebx]
  411f94:	mov    eax,DWORD PTR [eax]
  411f96:	movzx  eax,BYTE PTR [eax]
  411f99:	sub    al,0x5
  411f9b:	je     0x411fa7
  411f9d:	sub    al,0x5
  411f9f:	je     0x411fa7
  411fa1:	dec    al
  411fa3:	je     0x411fbf
  411fa5:	jmp    0x412021
  411fa7:	lea    eax,[ebp-0xc]
  411faa:	mov    edx,edi
  411fac:	call   0x405210
  411fb1:	mov    ecx,DWORD PTR [ebp-0xc]
  411fb4:	mov    edx,ebx
  411fb6:	mov    eax,esi
  411fb8:	call   0x411f40
  411fbd:	jmp    0x412021
  411fbf:	mov    eax,DWORD PTR [ebx+0x8]
  411fc2:	mov    edx,eax
  411fc4:	and    edx,0xff000000
  411fca:	cmp    edx,0xff000000
  411fd0:	jne    0x411fe7
  411fd2:	mov    ebx,eax
  411fd4:	and    ebx,0xffffff
  411fda:	add    ebx,esi
  411fdc:	mov    eax,ebx
  411fde:	mov    edx,edi
  411fe0:	call   0x4057cc
  411fe5:	jmp    0x412021
  411fe7:	cmp    edx,0xfe000000
  411fed:	jne    0x411ffd
  411fef:	mov    edx,DWORD PTR [esi]
  411ff1:	movsx  eax,ax
  411ff4:	add    edx,eax
  411ff6:	mov    eax,DWORD PTR [edx]
  411ff8:	mov    DWORD PTR [ebp-0x8],eax
  411ffb:	jmp    0x412000
  411ffd:	mov    DWORD PTR [ebp-0x8],eax
  412000:	mov    DWORD PTR [ebp-0x4],esi
  412003:	mov    eax,DWORD PTR [ebx+0x10]
  412006:	cmp    eax,0x80000000
  41200b:	jne    0x412017
  41200d:	mov    edx,edi
  41200f:	mov    eax,DWORD PTR [ebp-0x4]
  412012:	call   DWORD PTR [ebp-0x8]
  412015:	jmp    0x412021
  412017:	mov    ecx,edi
  412019:	mov    edx,eax
  41201b:	mov    eax,DWORD PTR [ebp-0x4]
  41201e:	call   DWORD PTR [ebp-0x8]
  412021:	xor    eax,eax
  412023:	pop    edx
  412024:	pop    ecx
  412025:	pop    ecx
  412026:	mov    DWORD PTR fs:[eax],edx
  412029:	push   0x41203e
  41202e:	lea    eax,[ebp-0xc]
  412031:	call   0x404f88
  412036:	ret    
  412037:	jmp    0x40481c
  41203c:	jmp    0x41202e
  41203e:	pop    edi
  41203f:	pop    esi
  412040:	pop    ebx
  412041:	mov    esp,ebp
  412043:	pop    ebp
  412044:	ret    
  412045:	lea    eax,[eax+0x0]
  412048:	push   ebp
  412049:	mov    ebp,esp
  41204b:	add    esp,0xfffffff8
  41204e:	push   ebx
  41204f:	push   esi
  412050:	push   edi
  412051:	mov    esi,edx
  412053:	mov    edi,eax
  412055:	mov    ebx,DWORD PTR [esi+0x8]
  412058:	mov    eax,DWORD PTR [esi]
  41205a:	mov    eax,DWORD PTR [eax]
  41205c:	call   0x411b1c
  412061:	movzx  eax,BYTE PTR [eax]
  412064:	mov    edx,ebx
  412066:	and    edx,0xff000000
  41206c:	cmp    edx,0xff000000
  412072:	jne    0x4120ef
  412074:	mov    edx,ebx
  412076:	and    edx,0xffffff
  41207c:	add    edx,edi
  41207e:	and    eax,0x7f
  412081:	cmp    eax,0x4
  412084:	ja     0x412233
  41208a:	jmp    DWORD PTR [eax*4+0x412091]
  412091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412092:	and    BYTE PTR [ecx+0x0],al
  412095:	mov    al,0x20
  412097:	inc    ecx
  412098:	add    BYTE PTR [ebx-0x2cffbee0],bh
  41209e:	and    BYTE PTR [ecx+0x0],al
  4120a1:	fisub  WORD PTR [eax]
  4120a3:	inc    ecx
  4120a4:	add    bl,bl
  4120a6:	ins    DWORD PTR es:[edi],dx
  4120a7:	or     cl,bl
  4120a9:	sbb    bl,BYTE PTR [ebx+0x183e9]
  4120af:	add    bl,bl
  4120b1:	ins    DWORD PTR es:[edi],dx
  4120b2:	or     ch,bl
  4120b4:	sbb    bl,BYTE PTR [ebx+0x178e9]
  4120ba:	add    BYTE PTR [ebx+0x2890845],cl
  4120c0:	mov    eax,DWORD PTR [ebp+0xc]
  4120c3:	mov    DWORD PTR [edx+0x4],eax
  4120c6:	mov    ax,WORD PTR [ebp+0x10]
  4120ca:	mov    WORD PTR [edx+0x8],ax
  4120ce:	jmp    0x412233
  4120d3:	fld    TBYTE PTR [ebp+0x8]
  4120d6:	fistp  QWORD PTR [edx]
  4120d8:	fwait
  4120d9:	jmp    0x412233
  4120de:	fld    TBYTE PTR [ebp+0x8]
  4120e1:	fmul   DWORD PTR ds:0x41223c
  4120e7:	fistp  QWORD PTR [edx]
  4120e9:	fwait
  4120ea:	jmp    0x412233
  4120ef:	cmp    edx,0xfe000000
  4120f5:	jne    0x412105
  4120f7:	mov    edx,DWORD PTR [edi]
  4120f9:	movsx  ecx,bx
  4120fc:	add    edx,ecx
  4120fe:	mov    edx,DWORD PTR [edx]
  412100:	mov    DWORD PTR [ebp-0x8],edx
  412103:	jmp    0x412108
  412105:	mov    DWORD PTR [ebp-0x8],ebx
  412108:	mov    DWORD PTR [ebp-0x4],edi
  41210b:	mov    edx,DWORD PTR [esi+0x10]
  41210e:	cmp    edx,0x80000000
  412114:	jne    0x4121b1
  41211a:	and    eax,0x7f
  41211d:	cmp    eax,0x4
  412120:	ja     0x412233
  412126:	jmp    DWORD PTR [eax*4+0x41212d]
  41212d:	inc    ecx
  41212e:	and    DWORD PTR [ecx+0x0],eax
  412131:	push   esi
  412132:	and    DWORD PTR [ecx+0x0],eax
  412135:	imul   esp,DWORD PTR [ecx],0x41
  412138:	add    BYTE PTR [ecx-0x69ffbedf],al
  41213e:	and    DWORD PTR [ecx+0x0],eax
  412141:	fld    TBYTE PTR [ebp+0x8]
  412144:	add    esp,0xfffffffc
  412147:	fstp   DWORD PTR [esp]
  41214a:	fwait
  41214b:	mov    eax,DWORD PTR [ebp-0x4]
  41214e:	call   DWORD PTR [ebp-0x8]
  412151:	jmp    0x412233
  412156:	fld    TBYTE PTR [ebp+0x8]
  412159:	add    esp,0xfffffff8
  41215c:	fstp   QWORD PTR [esp]
  41215f:	fwait
  412160:	mov    eax,DWORD PTR [ebp-0x4]
  412163:	call   DWORD PTR [ebp-0x8]
  412166:	jmp    0x412233
  41216b:	movzx  eax,WORD PTR [ebp+0x10]
  41216f:	push   eax
  412170:	push   DWORD PTR [ebp+0xc]
  412173:	push   DWORD PTR [ebp+0x8]
  412176:	mov    eax,DWORD PTR [ebp-0x4]
  412179:	call   DWORD PTR [ebp-0x8]
  41217c:	jmp    0x412233
  412181:	fld    TBYTE PTR [ebp+0x8]
  412184:	add    esp,0xfffffff8
  412187:	fistp  QWORD PTR [esp]
  41218a:	fwait
  41218b:	mov    eax,DWORD PTR [ebp-0x4]
  41218e:	call   DWORD PTR [ebp-0x8]
  412191:	jmp    0x412233
  412196:	fld    TBYTE PTR [ebp+0x8]
  412199:	fmul   DWORD PTR ds:0x41223c
  41219f:	add    esp,0xfffffff8
  4121a2:	fistp  QWORD PTR [esp]
  4121a5:	fwait
  4121a6:	mov    eax,DWORD PTR [ebp-0x4]
  4121a9:	call   DWORD PTR [ebp-0x8]
  4121ac:	jmp    0x412233
  4121b1:	and    eax,0x7f
  4121b4:	cmp    eax,0x4
  4121b7:	ja     0x412233
  4121b9:	jmp    DWORD PTR [eax*4+0x4121c0]
  4121c0:	aam    0x21
  4121c2:	inc    ecx
  4121c3:	add    dh,ah
  4121c5:	and    DWORD PTR [ecx+0x0],eax
  4121c8:	clc    
  4121c9:	and    DWORD PTR [ecx+0x0],eax
  4121cc:	or     esp,DWORD PTR [edx]
  4121ce:	inc    ecx
  4121cf:	add    BYTE PTR ds:0xdb004122,bl
  4121d5:	ins    DWORD PTR es:[edi],dx
  4121d6:	or     BYTE PTR [ebx+0x1cd9fcc4],al
  4121dc:	and    al,0x9b
  4121de:	mov    eax,DWORD PTR [ebp-0x4]
  4121e1:	call   DWORD PTR [ebp-0x8]
  4121e4:	jmp    0x412233
  4121e6:	fld    TBYTE PTR [ebp+0x8]
  4121e9:	add    esp,0xfffffff8
  4121ec:	fstp   QWORD PTR [esp]
  4121ef:	fwait
  4121f0:	mov    eax,DWORD PTR [ebp-0x4]
  4121f3:	call   DWORD PTR [ebp-0x8]
  4121f6:	jmp    0x412233
  4121f8:	movzx  eax,WORD PTR [ebp+0x10]
  4121fc:	push   eax
  4121fd:	push   DWORD PTR [ebp+0xc]
  412200:	push   DWORD PTR [ebp+0x8]
  412203:	mov    eax,DWORD PTR [ebp-0x4]
  412206:	call   DWORD PTR [ebp-0x8]
  412209:	jmp    0x412233
  41220b:	fld    TBYTE PTR [ebp+0x8]
  41220e:	add    esp,0xfffffff8
  412211:	fistp  QWORD PTR [esp]
  412214:	fwait
  412215:	mov    eax,DWORD PTR [ebp-0x4]
  412218:	call   DWORD PTR [ebp-0x8]
  41221b:	jmp    0x412233
  41221d:	fld    TBYTE PTR [ebp+0x8]
  412220:	fmul   DWORD PTR ds:0x41223c
  412226:	add    esp,0xfffffff8
  412229:	fistp  QWORD PTR [esp]
  41222c:	fwait
  41222d:	mov    eax,DWORD PTR [ebp-0x4]
  412230:	call   DWORD PTR [ebp-0x8]
  412233:	pop    edi
  412234:	pop    esi
  412235:	pop    ebx
  412236:	pop    ecx
  412237:	pop    ecx
  412238:	pop    ebp
  412239:	ret    0xc
  41223c:	add    BYTE PTR [eax+0x1c],al
  41223f:	inc    esi
  412240:	push   ebx
  412241:	push   esi
  412242:	mov    esi,edx
  412244:	mov    ebx,eax
  412246:	mov    eax,ebx
  412248:	mov    edx,esi
  41224a:	call   0x41012c
  41224f:	pop    esi
  412250:	pop    ebx
  412251:	ret    
  412252:	mov    eax,eax
  412254:	push   esi
  412255:	push   edi
  412256:	mov    esi,edx
  412258:	mov    edx,DWORD PTR [esi+0x10]
  41225b:	cmp    edx,0x80000000
  412261:	jne    0x412265
  412263:	mov    edx,ecx
  412265:	mov    edi,DWORD PTR [esi+0x8]
  412268:	cmp    BYTE PTR [esi+0xb],0xfe
  41226c:	ja     0x41227f
  41226e:	jb     0x41227a
  412270:	movsx  edi,di
  412273:	add    edi,DWORD PTR [eax]
  412275:	call   DWORD PTR [edi]
  412277:	pop    edi
  412278:	pop    esi
  412279:	ret    
  41227a:	call   edi
  41227c:	pop    edi
  41227d:	pop    esi
  41227e:	ret    
  41227f:	and    edi,0xffffff
  412285:	add    eax,edi
  412287:	mov    edx,ecx
  412289:	call   0x412240
  41228e:	pop    edi
  41228f:	pop    esi
  412290:	ret    
  412291:	lea    eax,[eax+0x0]
  412294:	push   ebx
  412295:	mov    ebx,DWORD PTR [edx+0x8]
  412298:	cmp    BYTE PTR [edx+0xb],0xfe
  41229c:	ja     0x4122b5
  41229e:	mov    edx,DWORD PTR [edx+0x10]
  4122a1:	push   DWORD PTR [ecx+0x4]
  4122a4:	push   DWORD PTR [ecx]
  4122a6:	jb     0x4122b1
  4122a8:	movsx  ebx,bx
  4122ab:	add    ebx,DWORD PTR [eax]
  4122ad:	call   DWORD PTR [ebx]
  4122af:	pop    ebx
  4122b0:	ret    
  4122b1:	call   ebx
  4122b3:	pop    ebx
  4122b4:	ret    
  4122b5:	and    ebx,0xffffff
  4122bb:	add    eax,ebx
  4122bd:	mov    edx,DWORD PTR [ecx]
  4122bf:	mov    ebx,DWORD PTR [ecx+0x4]
  4122c2:	mov    DWORD PTR [eax],edx
  4122c4:	mov    DWORD PTR [eax+0x4],ebx
  4122c7:	pop    ebx
  4122c8:	ret    
  4122c9:	lea    eax,[eax+0x0]
  4122cc:	push   ebp
  4122cd:	mov    ebp,esp
  4122cf:	cmp    BYTE PTR [edx+0xb],0xfe
  4122d3:	mov    ecx,DWORD PTR [edx+0x8]
  4122d6:	ja     0x4122f0
  4122d8:	mov    edx,DWORD PTR [edx+0x10]
  4122db:	push   DWORD PTR [ebp+0xc]
  4122de:	push   DWORD PTR [ebp+0x8]
  4122e1:	jb     0x4122ec
  4122e3:	movsx  ecx,cx
  4122e6:	add    ecx,DWORD PTR [eax]
  4122e8:	call   DWORD PTR [ecx]
  4122ea:	jmp    0x412303
  4122ec:	call   ecx
  4122ee:	jmp    0x412303
  4122f0:	and    ecx,0xffffff
  4122f6:	add    eax,ecx
  4122f8:	mov    edx,DWORD PTR [ebp+0x8]
  4122fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4122fe:	mov    DWORD PTR [eax],edx
  412300:	mov    DWORD PTR [eax+0x4],ecx
  412303:	pop    ebp
  412304:	ret    0x8
  412307:	nop
  412308:	push   ebx
  412309:	push   esi
  41230a:	add    esp,0xfffffff8
  41230d:	mov    esi,ecx
  41230f:	mov    ecx,DWORD PTR [edx+0x8]
  412312:	mov    ebx,ecx
  412314:	and    ebx,0xff000000
  41231a:	cmp    ebx,0xff000000
  412320:	jne    0x412337
  412322:	mov    ebx,ecx
  412324:	and    ebx,0xffffff
  41232a:	add    ebx,eax
  41232c:	mov    eax,ebx
  41232e:	mov    edx,esi
  412330:	call   0x406ab0
  412335:	jmp    0x412374
  412337:	cmp    ebx,0xfe000000
  41233d:	jne    0x41234d
  41233f:	mov    ebx,DWORD PTR [eax]
  412341:	movsx  ecx,cx
  412344:	add    ebx,ecx
  412346:	mov    ecx,DWORD PTR [ebx]
  412348:	mov    DWORD PTR [esp],ecx
  41234b:	jmp    0x412350
  41234d:	mov    DWORD PTR [esp],ecx
  412350:	mov    DWORD PTR [esp+0x4],eax
  412354:	mov    eax,DWORD PTR [edx+0x10]
  412357:	cmp    eax,0x80000000
  41235c:	jne    0x412369
  41235e:	mov    edx,esi
  412360:	mov    eax,DWORD PTR [esp+0x4]
  412364:	call   DWORD PTR [esp]
  412367:	jmp    0x412374
  412369:	mov    ecx,esi
  41236b:	mov    edx,eax
  41236d:	mov    eax,DWORD PTR [esp+0x4]
  412371:	call   DWORD PTR [esp]
  412374:	pop    ecx
  412375:	pop    edx
  412376:	pop    esi
  412377:	pop    ebx
  412378:	ret    
  412379:	lea    eax,[eax+0x0]
  41237c:	push   ebp
  41237d:	mov    ebp,esp
  41237f:	xor    eax,eax
  412381:	push   ebp
  412382:	push   0x4123c2
  412387:	push   DWORD PTR fs:[eax]
  41238a:	mov    DWORD PTR fs:[eax],esp
  41238d:	inc    DWORD PTR ds:0x4729a4
  412393:	jne    0x4123b4
  412395:	mov    eax,0x461a9c
  41239a:	mov    ecx,0x2
  41239f:	mov    edx,DWORD PTR ds:0x401084
  4123a5:	call   0x405b50
  4123aa:	mov    eax,0x461aa4
  4123af:	call   0x404f88
  4123b4:	xor    eax,eax
  4123b6:	pop    edx
  4123b7:	pop    ecx
  4123b8:	pop    ecx
  4123b9:	mov    DWORD PTR fs:[eax],edx
  4123bc:	push   0x4123c9
  4123c1:	ret    
  4123c2:	jmp    0x40481c
  4123c7:	jmp    0x4123c1
  4123c9:	pop    ebp
  4123ca:	ret    
  4123cb:	nop
  4123cc:	shl    BYTE PTR [ebx],1
  4123ce:	inc    ecx
  4123cf:	add    BYTE PTR [eax],cl
  4123d1:	or     al,0x54
  4123d3:	dec    esi
  4123d4:	outs   dx,DWORD PTR ds:[esi]
  4123d5:	je     0x412440
  4123d7:	data16 jns 0x41241f
  4123da:	jbe    0x412441
  4123dc:	outs   dx,BYTE PTR ds:[esi]
  4123dd:	je     0x4123df
  4123df:	add    DWORD PTR [eax],ecx
  4123e1:	push   es
  4123e2:	push   ebx
  4123e3:	outs   dx,BYTE PTR gs:[esi]
  4123e5:	fs gs jb 0x4123f0
  4123e9:	push   esp
  4123ea:	dec    edi
  4123eb:	bound  ebp,QWORD PTR [edx+0x65]
  4123ee:	arpl   WORD PTR [eax+eax*1-0x1c],si
  4123f2:	adc    BYTE PTR [eax+0x0],al
  4123f5:	lea    eax,[eax+0x0]
  4123f8:	inc    esp
  4123f9:	and    al,0x41
	...
  412417:	add    BYTE PTR [esp+0x41],al
  41241b:	add    BYTE PTR [eax+eax*1],cl
  41241e:	add    BYTE PTR [eax],al
  412420:	hlt    
  412421:	jbe    0x412463
  412423:	add    al,dl
  412425:	inc    edx
  412426:	inc    eax
  412427:	add    ah,bl
  412429:	inc    edx
  41242a:	inc    eax
  41242b:	add    al,ah
  41242d:	inc    edx
  41242e:	inc    eax
  41242f:	add    ah,ah
  412431:	inc    edx
  412432:	inc    eax
  412433:	add    al,bl
  412435:	inc    edx
  412436:	inc    eax
  412437:	add    BYTE PTR [eax],bh
  412439:	inc    eax
  41243a:	inc    eax
  41243b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41243f:	add    BYTE PTR [eax+0xc004040],dl
  412445:	inc    ebp
  412446:	push   ebx
  412447:	je     0x4124bb
  412449:	gs popa 
  41244b:	ins    DWORD PTR es:[edi],dx
  41244c:	inc    ebp
  41244d:	jb     0x4124c1
  41244f:	outs   dx,DWORD PTR ds:[esi]
  412450:	jb     0x4123df
  412452:	inc    eax
  412453:	add    BYTE PTR [eax+0x4124],ah
	...
  412471:	add    BYTE PTR [eax],al
  412473:	add    BYTE PTR [eax+0xc004124],ah
  412479:	add    BYTE PTR [eax],al
  41247b:	add    al,bh
  41247d:	and    eax,DWORD PTR [ecx+0x0]
  412480:	rol    BYTE PTR [edx+0x40],1
  412483:	add    ah,bl
  412485:	inc    edx
  412486:	inc    eax
  412487:	add    al,ah
  412489:	inc    edx
  41248a:	inc    eax
  41248b:	add    ah,ah
  41248d:	inc    edx
  41248e:	inc    eax
  41248f:	add    al,bl
  412491:	inc    edx
  412492:	inc    eax
  412493:	add    BYTE PTR [eax],bh
  412495:	inc    eax
  412496:	inc    eax
  412497:	add    BYTE PTR [eax+eax*2+0x40],dl
  41249b:	add    BYTE PTR [eax+0x10004040],dl
  4124a1:	inc    ebp
  4124a2:	inc    esi
  4124a3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x61657274
  4124ab:	ins    DWORD PTR es:[edi],dx
  4124ac:	inc    ebp
  4124ad:	jb     0x412521
  4124af:	outs   dx,DWORD PTR ds:[esi]
  4124b0:	jb     0x41243f
  4124b2:	inc    eax
  4124b3:	add    BYTE PTR [eax],al
  4124b5:	and    eax,0x41
	...
  4124d2:	add    BYTE PTR [eax],al
  4124d4:	add    BYTE PTR ds:0xc0041,ah
  4124da:	add    BYTE PTR [eax],al
  4124dc:	push   esp
  4124dd:	and    al,0x41
  4124df:	add    al,dl
  4124e1:	inc    edx
  4124e2:	inc    eax
  4124e3:	add    ah,bl
  4124e5:	inc    edx
  4124e6:	inc    eax
  4124e7:	add    al,ah
  4124e9:	inc    edx
  4124ea:	inc    eax
  4124eb:	add    ah,ah
  4124ed:	inc    edx
  4124ee:	inc    eax
  4124ef:	add    al,bl
  4124f1:	inc    edx
  4124f2:	inc    eax
  4124f3:	add    BYTE PTR [eax],bh
  4124f5:	inc    eax
  4124f6:	inc    eax
  4124f7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4124fb:	add    BYTE PTR [eax+0xd004040],dl
  412501:	inc    ebp
  412502:	inc    esi
  412503:	inc    ebx
  412504:	jb     0x41256b
  412506:	popa   
  412507:	je     0x41256e
  412509:	inc    ebp
  41250a:	jb     0x41257e
  41250c:	outs   dx,DWORD PTR ds:[esi]
  41250d:	jb     0x41249a
  41250f:	rcr    BYTE PTR [ebp+eiz*1+0x41],0x0
	...
  412530:	pop    esp
  412531:	and    eax,0xc0041
  412536:	add    BYTE PTR [eax],al
  412538:	push   esp
  412539:	and    al,0x41
  41253b:	add    al,dl
  41253d:	inc    edx
  41253e:	inc    eax
  41253f:	add    ah,bl
  412541:	inc    edx
  412542:	inc    eax
  412543:	add    al,ah
  412545:	inc    edx
  412546:	inc    eax
  412547:	add    ah,ah
  412549:	inc    edx
  41254a:	inc    eax
  41254b:	add    al,bl
  41254d:	inc    edx
  41254e:	inc    eax
  41254f:	add    BYTE PTR [eax],bh
  412551:	inc    eax
  412552:	inc    eax
  412553:	add    BYTE PTR [eax+eax*2+0x40],dl
  412557:	add    BYTE PTR [eax+0xb004040],dl
  41255d:	inc    ebp
  41255e:	inc    esi
  41255f:	dec    edi
  412560:	jo     0x4125c7
  412562:	outs   dx,BYTE PTR ds:[esi]
  412563:	inc    ebp
  412564:	jb     0x4125d8
  412566:	outs   dx,DWORD PTR ds:[esi]
  412567:	jb     0x41251d
  412569:	and    eax,0x41
	...
  412586:	add    BYTE PTR [eax],al
  412588:	mov    ah,0x25
  41258a:	inc    ecx
  41258b:	add    BYTE PTR [eax+eax*1],cl
  41258e:	add    BYTE PTR [eax],al
  412590:	clc    
  412591:	and    eax,DWORD PTR [ecx+0x0]
  412594:	rol    BYTE PTR [edx+0x40],1
  412597:	add    ah,bl
  412599:	inc    edx
  41259a:	inc    eax
  41259b:	add    al,ah
  41259d:	inc    edx
  41259e:	inc    eax
  41259f:	add    ah,ah
  4125a1:	inc    edx
  4125a2:	inc    eax
  4125a3:	add    al,bl
  4125a5:	inc    edx
  4125a6:	inc    eax
  4125a7:	add    BYTE PTR [eax],bh
  4125a9:	inc    eax
  4125aa:	inc    eax
  4125ab:	add    BYTE PTR [eax+eax*2+0x40],dl
  4125af:	add    BYTE PTR [eax+0xb004040],dl
  4125b5:	inc    ebp
  4125b6:	inc    esi
  4125b7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x72],0x6f727245
  4125bf:	jb     0x4125cd
  4125c1:	es inc ecx
	...
  4125df:	add    BYTE PTR [esi+eiz*1],cl
  4125e2:	inc    ecx
  4125e3:	add    BYTE PTR [eax+eax*1],cl
  4125e6:	add    BYTE PTR [eax],al
  4125e8:	push   0xd0004125
  4125ed:	inc    edx
  4125ee:	inc    eax
  4125ef:	add    ah,bl
  4125f1:	inc    edx
  4125f2:	inc    eax
  4125f3:	add    al,ah
  4125f5:	inc    edx
  4125f6:	inc    eax
  4125f7:	add    ah,ah
  4125f9:	inc    edx
  4125fa:	inc    eax
  4125fb:	add    al,bl
  4125fd:	inc    edx
  4125fe:	inc    eax
  4125ff:	add    BYTE PTR [eax],bh
  412601:	inc    eax
  412602:	inc    eax
  412603:	add    BYTE PTR [eax+eax*2+0x40],dl
  412607:	add    BYTE PTR [eax+0xa004040],dl
  41260d:	inc    ebp
  41260e:	push   edx
  41260f:	gs popa 
  412611:	fs inc ebp
  412613:	jb     0x412687
  412615:	outs   dx,DWORD PTR ds:[esi]
  412616:	jb     0x4125a8
  412618:	fs es inc ecx
	...
  412637:	add    BYTE PTR [esi+eiz*1+0x41],ah
  41263b:	add    BYTE PTR [eax+eax*1],cl
  41263e:	add    BYTE PTR [eax],al
  412640:	push   0xd0004125
  412645:	inc    edx
  412646:	inc    eax
  412647:	add    ah,bl
  412649:	inc    edx
  41264a:	inc    eax
  41264b:	add    al,ah
  41264d:	inc    edx
  41264e:	inc    eax
  41264f:	add    ah,ah
  412651:	inc    edx
  412652:	inc    eax
  412653:	add    al,bl
  412655:	inc    edx
  412656:	inc    eax
  412657:	add    BYTE PTR [eax],bh
  412659:	inc    eax
  41265a:	inc    eax
  41265b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41265f:	add    BYTE PTR [eax+0xb004040],dl
  412665:	inc    ebp
  412666:	push   edi
  412667:	jb     0x4126d2
  412669:	je     0x4126d0
  41266b:	inc    ebp
  41266c:	jb     0x4126e0
  41266e:	outs   dx,DWORD PTR ds:[esi]
  41266f:	jb     0x41262d
  412671:	es inc ecx
	...
  41268f:	add    BYTE PTR [esi+eiz*1+0xc0041],bh
  412696:	add    BYTE PTR [eax],al
  412698:	push   0xd0004125
  41269d:	inc    edx
  41269e:	inc    eax
  41269f:	add    ah,bl
  4126a1:	inc    edx
  4126a2:	inc    eax
  4126a3:	add    al,ah
  4126a5:	inc    edx
  4126a6:	inc    eax
  4126a7:	add    ah,ah
  4126a9:	inc    edx
  4126aa:	inc    eax
  4126ab:	add    al,bl
  4126ad:	inc    edx
  4126ae:	inc    eax
  4126af:	add    BYTE PTR [eax],bh
  4126b1:	inc    eax
  4126b2:	inc    eax
  4126b3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4126b7:	add    BYTE PTR [eax+0xe004040],dl
  4126bd:	inc    ebp
  4126be:	inc    ebx
  4126bf:	ins    BYTE PTR es:[edi],dx
  4126c0:	popa   
  4126c1:	jae    0x412736
  4126c3:	dec    esi
  4126c4:	outs   dx,DWORD PTR ds:[esi]
  4126c5:	je     0x41270d
  4126c7:	outs   dx,DWORD PTR ds:[esi]
  4126c8:	jne    0x412738
  4126ca:	fs nop
  4126cc:	sbb    BYTE PTR [edi],ah
  4126ce:	inc    ecx
	...
  4126eb:	add    BYTE PTR [eax],bl
  4126ed:	daa    
  4126ee:	inc    ecx
  4126ef:	add    BYTE PTR [eax+eax*1],cl
  4126f2:	add    BYTE PTR [eax],al
  4126f4:	hlt    
  4126f5:	jbe    0x412737
  4126f7:	add    al,dl
  4126f9:	inc    edx
  4126fa:	inc    eax
  4126fb:	add    ah,bl
  4126fd:	inc    edx
  4126fe:	inc    eax
  4126ff:	add    al,ah
  412701:	inc    edx
  412702:	inc    eax
  412703:	add    ah,ah
  412705:	inc    edx
  412706:	inc    eax
  412707:	add    al,bl
  412709:	inc    edx
  41270a:	inc    eax
  41270b:	add    BYTE PTR [eax],bh
  41270d:	inc    eax
  41270e:	inc    eax
  41270f:	add    BYTE PTR [eax+eax*2+0x40],dl
  412713:	add    BYTE PTR [eax+0xa004040],dl
  412719:	inc    ebp
  41271a:	dec    esp
  41271b:	imul   esi,DWORD PTR [ebx+0x74],0x6f727245
  412722:	jb     0x4126b4
  412724:	jo     0x41274d
  412726:	inc    ecx
	...
  412743:	add    BYTE PTR [eax+0x27],dh
  412746:	inc    ecx
  412747:	add    BYTE PTR [eax+eax*1],cl
  41274a:	add    BYTE PTR [eax],al
  41274c:	hlt    
  41274d:	jbe    0x41278f
  41274f:	add    al,dl
  412751:	inc    edx
  412752:	inc    eax
  412753:	add    ah,bl
  412755:	inc    edx
  412756:	inc    eax
  412757:	add    al,ah
  412759:	inc    edx
  41275a:	inc    eax
  41275b:	add    ah,ah
  41275d:	inc    edx
  41275e:	inc    eax
  41275f:	add    al,bl
  412761:	inc    edx
  412762:	inc    eax
  412763:	add    BYTE PTR [eax],bh
  412765:	inc    eax
  412766:	inc    eax
  412767:	add    BYTE PTR [eax+eax*2+0x40],dl
  41276b:	add    BYTE PTR [eax+0x10004040],dl
  412771:	inc    ebp
  412772:	push   ebx
  412773:	je     0x4127e7
  412775:	imul   ebp,DWORD PTR [esi+0x67],0x7473694c
  41277c:	inc    ebp
  41277d:	jb     0x4127f1
  41277f:	outs   dx,DWORD PTR ds:[esi]
  412780:	jb     0x41270f
  412782:	inc    eax
  412783:	add    al,dl
  412785:	daa    
  412786:	inc    ecx
	...
  4127a3:	add    al,dl
  4127a5:	daa    
  4127a6:	inc    ecx
  4127a7:	add    BYTE PTR [eax+eax*1],cl
  4127aa:	add    BYTE PTR [eax],al
  4127ac:	hlt    
  4127ad:	jbe    0x4127ef
  4127af:	add    al,dl
  4127b1:	inc    edx
  4127b2:	inc    eax
  4127b3:	add    ah,bl
  4127b5:	inc    edx
  4127b6:	inc    eax
  4127b7:	add    al,ah
  4127b9:	inc    edx
  4127ba:	inc    eax
  4127bb:	add    ah,ah
  4127bd:	inc    edx
  4127be:	inc    eax
  4127bf:	add    al,bl
  4127c1:	inc    edx
  4127c2:	inc    eax
  4127c3:	add    BYTE PTR [eax],bh
  4127c5:	inc    eax
  4127c6:	inc    eax
  4127c7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4127cb:	add    BYTE PTR [eax+0xf004040],dl
  4127d1:	inc    ebp
  4127d2:	inc    ebx
  4127d3:	outs   dx,DWORD PTR ds:[esi]
  4127d4:	ins    DWORD PTR es:[edi],dx
  4127d5:	jo     0x412846
  4127d7:	outs   dx,BYTE PTR ds:[esi]
  4127d8:	outs   dx,BYTE PTR gs:[esi]
  4127da:	je     0x412821
  4127dc:	jb     0x412850
  4127de:	outs   dx,DWORD PTR ds:[esi]
  4127df:	jb     0x41280d
  4127e1:	sub    BYTE PTR [ecx+0x0],al
	...
  412800:	cmp    al,0x28
  412802:	inc    ecx
  412803:	add    BYTE PTR [eax],dl
  412805:	add    BYTE PTR [eax],al
  412807:	add    BYTE PTR [eax-0x2fffbff0],dl
  41280d:	inc    edx
  41280e:	inc    eax
  41280f:	add    ah,bl
  412811:	inc    edx
  412812:	inc    eax
  412813:	add    al,ah
  412815:	inc    edx
  412816:	inc    eax
  412817:	add    ah,ah
  412819:	inc    edx
  41281a:	inc    eax
  41281b:	add    al,bl
  41281d:	inc    edx
  41281e:	inc    eax
  41281f:	add    BYTE PTR [eax],bh
  412821:	inc    eax
  412822:	inc    eax
  412823:	add    BYTE PTR [eax+eax*2+0x40],dl
  412827:	add    BYTE PTR [eax],bl
  412829:	cmp    eax,DWORD PTR [ecx+0x0]
  41282c:	cwde   
  41282d:	cmp    al,0x41
  41282f:	add    ah,bl
  412831:	ds inc ecx
  412833:	add    BYTE PTR [ebx+edi*1+0x41],ch
  412837:	add    ah,ah
  412839:	cmp    eax,DWORD PTR [ecx+0x0]
  41283c:	add    eax,0x73694c54
  412841:	je     0x4127ce
  412843:	rcl    BYTE PTR [eax+0x4128],0x0
	...
  412862:	add    BYTE PTR [eax],al
  412864:	nop
  412865:	sub    BYTE PTR [ecx+0x0],al
  412868:	and    al,0x0
  41286a:	add    BYTE PTR [eax],al
  41286c:	nop
  41286d:	adc    BYTE PTR [eax+0x0],al
  412870:	rol    BYTE PTR [edx+0x40],1
  412873:	add    ah,bl
  412875:	inc    edx
  412876:	inc    eax
  412877:	add    al,ah
  412879:	inc    edx
  41287a:	inc    eax
  41287b:	add    ah,ah
  41287d:	inc    edx
  41287e:	inc    eax
  41287f:	add    al,bl
  412881:	inc    edx
  412882:	inc    eax
  412883:	add    BYTE PTR [eax],bh
  412885:	inc    eax
  412886:	inc    eax
  412887:	add    BYTE PTR [eax+eax*2+0x40],dl
  41288b:	add    BYTE PTR [edi+edi*1],dh
  41288e:	inc    ecx
  41288f:	add    BYTE PTR [ebx],cl
  412891:	push   esp
  412892:	push   esp
  412893:	push   0x64616572
  412898:	dec    esp
  412899:	imul   esi,DWORD PTR [ebx+0x74],0x4128e8
	...
  4128ac:	adc    al,0x29
  4128ae:	inc    ecx
	...
  4128b7:	add    ah,dh
  4128b9:	sub    BYTE PTR [ecx+0x0],al
  4128bc:	add    ch,BYTE PTR [ecx]
  4128be:	inc    ecx
  4128bf:	add    BYTE PTR [eax+eax*1],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	nop
  4128c5:	adc    BYTE PTR [eax+0x0],al
  4128c8:	rol    BYTE PTR [edx+0x40],1
  4128cb:	add    ah,bl
  4128cd:	inc    edx
  4128ce:	inc    eax
  4128cf:	add    al,ah
  4128d1:	inc    edx
  4128d2:	inc    eax
  4128d3:	add    ah,ah
  4128d5:	inc    edx
  4128d6:	inc    eax
  4128d7:	add    al,bl
  4128d9:	inc    edx
  4128da:	inc    eax
  4128db:	add    BYTE PTR [eax],bh
  4128dd:	inc    eax
  4128de:	inc    eax
  4128df:	add    BYTE PTR [eax+eax*2+0x40],dl
  4128e3:	add    BYTE PTR [eax+0x40],bl
  4128e6:	inc    ecx
  4128e7:	add    BYTE PTR [eax+0x41],ch
  4128ea:	inc    ecx
  4128eb:	add    BYTE PTR [eax+0x41],dh
  4128ee:	inc    ecx
  4128ef:	add    BYTE PTR [eax+eax*2+0x20041],al
  4128f6:	(bad)  
  4128f7:	(bad)  
  4128f8:	(bad)  
  4128f9:	jmp    DWORD PTR [edx+eax*2]
  4128fc:	inc    ecx
  4128fd:	add    BYTE PTR [ecx+eax*2+0x41],dh
  412901:	add    BYTE PTR [ebx],cl
  412903:	push   esp
  412904:	push   eax
  412905:	gs jb  0x41297b
  412908:	imul   esi,DWORD PTR [ebx+0x74],0x8b746e65
  41290f:	rcl    BYTE PTR [ecx+ebp*1],0x41
  412913:	add    BYTE PTR [edi],al
  412915:	or     edx,DWORD PTR [eax+edx*2+0x65]
  412919:	jb     0x41298e
  41291b:	imul   esi,DWORD PTR [ebx+0x74],0xe8746e65
  412922:	sub    BYTE PTR [ecx+0x0],al
  412925:	in     al,0x10
  412927:	inc    eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [edi],al
  41292c:	inc    ebx
  41292d:	ins    BYTE PTR es:[edi],dx
  41292e:	popa   
  41292f:	jae    0x4129a4
  412931:	gs jae 0x412934
  412934:	add    BYTE PTR [ebp+0x29840040],cl
  41293a:	inc    ecx
	...
  412947:	add    al,cl
  412949:	sub    DWORD PTR [ecx+0x0],eax
	...
  412954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412955:	sub    DWORD PTR [ecx+0x0],eax
  412958:	mov    dl,0x29
  41295a:	inc    ecx
  41295b:	add    BYTE PTR [eax+eax*1],cl
  41295e:	add    BYTE PTR [eax],al
  412960:	pushf  
  412961:	sub    BYTE PTR [ecx+0x0],al
  412964:	rol    BYTE PTR [edx+0x40],1
  412967:	add    ah,bl
  412969:	inc    edx
  41296a:	inc    eax
  41296b:	add    al,ah
  41296d:	inc    edx
  41296e:	inc    eax
  41296f:	add    ah,ah
  412971:	inc    edx
  412972:	inc    eax
  412973:	add    al,bl
  412975:	inc    edx
  412976:	inc    eax
  412977:	add    BYTE PTR [eax],bh
  412979:	inc    eax
  41297a:	inc    eax
  41297b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41297f:	add    BYTE PTR [ebx+eax*2+0x41],ah
  412983:	add    BYTE PTR [eax+0x41],ch
  412986:	inc    ecx
  412987:	add    BYTE PTR [eax+0x41],dh
  41298a:	inc    ecx
  41298b:	add    BYTE PTR [eax+eax*2+0x43d00041],al
  412992:	inc    ecx
  412993:	add    BYTE PTR [eax-0x1fffbebc],dh
  412999:	inc    esp
  41299a:	inc    ecx
  41299b:	add    al,bl
  41299d:	inc    esp
  41299e:	inc    ecx
  41299f:	add    BYTE PTR [ebx+eax*2],ch
  4129a2:	inc    ecx
  4129a3:	add    BYTE PTR [edx],al
  4129a5:	add    bh,bh
  4129a7:	(bad)  
  4129a8:	(bad)  
  4129a9:	jmp    FWORD PTR [esp+eax*2+0x43f80041]
  4129b0:	inc    ecx
  4129b1:	add    BYTE PTR [edi],cl
  4129b3:	push   esp
  4129b4:	inc    ebx
  4129b5:	outs   dx,DWORD PTR ds:[esi]
  4129b6:	ins    BYTE PTR es:[edi],dx
  4129b7:	ins    BYTE PTR es:[edi],dx
  4129b8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4129bd:	outs   dx,BYTE PTR ds:[esi]
  4129be:	dec    ecx
  4129bf:	je     0x412a26
  4129c1:	ins    DWORD PTR es:[edi],dx
  4129c2:	mov    eax,eax
  4129c4:	enter  0x4129,0x0
  4129c8:	pop    es
  4129c9:	andps  xmm0,XMMWORD PTR [ebx+0x6f]
  4129cd:	ins    BYTE PTR es:[edi],dx
  4129ce:	ins    BYTE PTR es:[edi],dx
  4129cf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4129d4:	outs   dx,BYTE PTR ds:[esi]
  4129d5:	dec    ecx
  4129d6:	je     0x412a3d
  4129d8:	ins    DWORD PTR es:[edi],dx
  4129d9:	test   BYTE PTR [ecx],ch
  4129db:	inc    ecx
  4129dc:	add    BYTE PTR [eax],dl
  4129de:	sub    DWORD PTR [ecx+0x0],eax
  4129e1:	add    BYTE PTR [eax],al
  4129e3:	pop    es
  4129e4:	inc    ebx
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	popa   
  4129e7:	jae    0x412a5c
  4129e9:	gs jae 0x4129ec
  4129ec:	add    BYTE PTR [ebp+0x2a3c0040],cl
  4129f2:	inc    ecx
	...
  4129fb:	add    BYTE PTR [edx+ebp*1+0x41],ah
  4129ff:	add    BYTE PTR [eax+0x412a],ah
  412a05:	add    BYTE PTR [eax],al
  412a07:	add    BYTE PTR [eax],al
  412a09:	add    BYTE PTR [eax],al
  412a0b:	add    BYTE PTR [esi+0x2a],dh
  412a0e:	inc    ecx
  412a0f:	add    BYTE PTR [eax+0x1800412a],dl
  412a15:	add    BYTE PTR [eax],al
  412a17:	add    BYTE PTR [eax+ebp*1+0x42d00041],bl
  412a1e:	inc    eax
  412a1f:	add    ah,bl
  412a21:	inc    edx
  412a22:	inc    eax
  412a23:	add    al,ah
  412a25:	inc    edx
  412a26:	inc    eax
  412a27:	add    ah,ah
  412a29:	inc    edx
  412a2a:	inc    eax
  412a2b:	add    al,bl
  412a2d:	inc    edx
  412a2e:	inc    eax
  412a2f:	add    BYTE PTR [eax],bh
  412a31:	inc    eax
  412a32:	inc    eax
  412a33:	add    BYTE PTR [eax+eax*2+0x40],dl
  412a37:	add    BYTE PTR [ebp+eax*2+0x41],bl
  412a3b:	add    BYTE PTR [eax+0x41],ch
  412a3e:	inc    ecx
  412a3f:	add    BYTE PTR [eax+0x41],dh
  412a42:	inc    ecx
  412a43:	add    al,cl
  412a45:	inc    ebp
  412a46:	inc    ecx
  412a47:	add    ah,bl
  412a49:	dec    ecx
  412a4a:	inc    ecx
  412a4b:	add    al,ah
  412a4d:	dec    ecx
  412a4e:	inc    ecx
  412a4f:	add    ah,ah
  412a51:	dec    ecx
  412a52:	inc    ecx
  412a53:	add    ah,dl
  412a55:	dec    ecx
  412a56:	inc    ecx
  412a57:	add    al,bl
  412a59:	dec    ecx
  412a5a:	inc    ecx
  412a5b:	add    BYTE PTR [eax+0x46],ah
  412a5e:	inc    ecx
  412a5f:	add    ah,bl
  412a61:	inc    esi
  412a62:	inc    ecx
  412a63:	add    BYTE PTR [esi],cl
  412a65:	add    BYTE PTR [eax],al
  412a67:	add    BYTE PTR [eax],al
  412a69:	add    BYTE PTR [ecx],al
  412a6b:	add    BYTE PTR [eax],al
  412a6d:	add    BYTE PTR [eax+edx*1+0x140040],al
  412a74:	add    BYTE PTR [eax],al
  412a76:	add    al,0x0
  412a78:	std    
  412a79:	(bad)  
  412a7a:	cld    
  412a7b:	(bad)  
  412a7c:	sti    
  412a7d:	(bad)  
  412a7e:	(bad)  
  412a7f:	(bad)  
  412a80:	call   0xec416bcb
  412a85:	inc    esi
  412a86:	inc    ecx
  412a87:	add    al,bh
  412a89:	inc    esi
  412a8a:	inc    ecx
  412a8b:	add    BYTE PTR [edi+eax*2],dh
  412a8e:	inc    ecx
  412a8f:	add    BYTE PTR [ebx],cl
  412a91:	push   esp
  412a92:	inc    ebx
  412a93:	outs   dx,DWORD PTR ds:[esi]
  412a94:	ins    BYTE PTR es:[edi],dx
  412a95:	ins    BYTE PTR es:[edi],dx
  412a96:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412a9b:	outs   dx,BYTE PTR ds:[esi]
  412a9c:	mov    al,ds:0x700412a
  412aa1:	or     edx,DWORD PTR [ebx+eax*2+0x6f]
  412aa5:	ins    BYTE PTR es:[edi],dx
  412aa6:	ins    BYTE PTR es:[edi],dx
  412aa7:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412aac:	outs   dx,BYTE PTR ds:[esi]
  412aad:	cmp    al,0x2a
  412aaf:	inc    ecx
  412ab0:	add    BYTE PTR [eax],dl
  412ab2:	sub    DWORD PTR [ecx+0x0],eax
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	pop    es
  412ab8:	inc    ebx
  412ab9:	ins    BYTE PTR es:[edi],dx
  412aba:	popa   
  412abb:	jae    0x412b30
  412abd:	gs jae 0x412ac0
  412ac0:	add    BYTE PTR [ebp+0x2b100040],cl
  412ac6:	inc    ecx
	...
  412ad3:	add    BYTE PTR [eax+0x2b],bl
  412ad6:	inc    ecx
	...
  412adf:	add    BYTE PTR [eax],bh
  412ae1:	sub    eax,DWORD PTR [ecx+0x0]
  412ae4:	inc    eax
  412ae5:	sub    eax,DWORD PTR [ecx+0x0]
  412ae8:	sbb    al,0x0
  412aea:	add    BYTE PTR [eax],al
  412aec:	lock sub DWORD PTR [ecx+0x0],eax
  412af0:	rol    BYTE PTR [edx+0x40],1
  412af3:	add    ah,bl
  412af5:	inc    edx
  412af6:	inc    eax
  412af7:	add    al,ah
  412af9:	inc    edx
  412afa:	inc    eax
  412afb:	add    ah,ah
  412afd:	inc    edx
  412afe:	inc    eax
  412aff:	add    al,bl
  412b01:	inc    edx
  412b02:	inc    eax
  412b03:	add    BYTE PTR [eax],bh
  412b05:	inc    eax
  412b06:	inc    eax
  412b07:	add    BYTE PTR [eax+eax*2+0x40],dl
  412b0b:	add    BYTE PTR [ebp+eax*2+0x41],bl
  412b0f:	add    BYTE PTR [eax+0x41],ch
  412b12:	inc    ecx
  412b13:	add    BYTE PTR [eax+0x41],dh
  412b16:	inc    ecx
  412b17:	add    al,cl
  412b19:	inc    ebp
  412b1a:	inc    ecx
  412b1b:	add    ah,bl
  412b1d:	dec    ecx
  412b1e:	inc    ecx
  412b1f:	add    al,ah
  412b21:	dec    ecx
  412b22:	inc    ecx
  412b23:	add    ah,ah
  412b25:	dec    ecx
  412b26:	inc    ecx
  412b27:	add    ah,dl
  412b29:	dec    ecx
  412b2a:	inc    ecx
  412b2b:	add    al,bl
  412b2d:	dec    ecx
  412b2e:	inc    ecx
  412b2f:	add    BYTE PTR [eax+0x46],ah
  412b32:	inc    ecx
  412b33:	add    ah,bl
  412b35:	inc    esi
  412b36:	inc    ecx
  412b37:	add    BYTE PTR [ecx],al
  412b39:	add    bh,bh
  412b3b:	dec    DWORD PTR [edx+ecx*2+0x41]
  412b3f:	add    BYTE PTR [eax],dl
  412b41:	push   esp
  412b42:	dec    edi
  412b43:	ja     0x412bb3
  412b45:	gs fs inc ebx
  412b48:	outs   dx,DWORD PTR ds:[esi]
  412b49:	ins    BYTE PTR es:[edi],dx
  412b4a:	ins    BYTE PTR es:[edi],dx
  412b4b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412b50:	outs   dx,BYTE PTR ds:[esi]
  412b51:	lea    eax,[eax+0x0]
  412b54:	pop    eax
  412b55:	sub    eax,DWORD PTR [ecx+0x0]
  412b58:	pop    es
  412b59:	adc    BYTE PTR [edi+ecx*2+0x77],dl
  412b5d:	outs   dx,BYTE PTR ds:[esi]
  412b5e:	gs fs inc ebx
  412b61:	outs   dx,DWORD PTR ds:[esi]
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	ins    BYTE PTR es:[edi],dx
  412b64:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412b69:	outs   dx,BYTE PTR ds:[esi]
  412b6a:	adc    BYTE PTR [ebx],ch
  412b6c:	inc    ecx
  412b6d:	add    BYTE PTR [edx+ebp*1+0x41],bl
  412b74:	pop    es
  412b75:	inc    ebx
  412b76:	ins    BYTE PTR es:[edi],dx
  412b77:	popa   
  412b78:	jae    0x412bed
  412b7a:	gs jae 0x412b7d
  412b7d:	add    BYTE PTR [ebx+0x412b84c0],cl
  412b83:	add    BYTE PTR [edi],cl
  412b85:	cmovns edx,DWORD PTR [ebx+0x74]
  412b89:	jb     0x412bf4
  412b8b:	outs   dx,BYTE PTR ds:[esi]
  412b8c:	addr16 jae 0x412bd0
  412b8f:	fs popa 
  412b91:	jo     0x412c07
  412b93:	gs jb  0x412b9a
  412b96:	adc    DWORD PTR [eax+0x0],eax
  412b99:	add    DWORD PTR [edi+ebp*1],esi
  412b9c:	pushf  
  412b9d:	jae    0x412b8b
  412b9f:	push   edx
  412ba0:	rcl    BYTE PTR [ecx],1
  412ba2:	sahf   
  412ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba4:	add    BYTE PTR [eax],ah
  412ba6:	scas   eax,DWORD PTR es:[edi]
  412ba7:	cmp    eax,0x4307da82
  412bac:	ins    BYTE PTR es:[edi],dx
  412bad:	popa   
  412bae:	jae    0x412c23
  412bb0:	gs jae 0x412bb5
  412bb3:	add    bh,bh
  412bb5:	dec    DWORD PTR [ebx+0x412c04c0]
	...
  412bc3:	add    BYTE PTR [esp+ebp*1+0x2cac0041],al
  412bca:	inc    ecx
	...
  412bd7:	add    BYTE PTR [esi+0x1800412c],bl
  412bdd:	add    BYTE PTR [eax],al
  412bdf:	add    BYTE PTR [eax+ebp*1+0x42d00041],bl
  412be6:	inc    eax
  412be7:	add    ah,bl
  412be9:	inc    edx
  412bea:	inc    eax
  412beb:	add    al,ah
  412bed:	inc    edx
  412bee:	inc    eax
  412bef:	add    ah,ah
  412bf1:	inc    edx
  412bf2:	inc    eax
  412bf3:	add    al,bl
  412bf5:	inc    edx
  412bf6:	inc    eax
  412bf7:	add    BYTE PTR [eax],bh
  412bf9:	inc    eax
  412bfa:	inc    eax
  412bfb:	add    BYTE PTR [eax+eax*2+0x40],dl
  412bff:	add    BYTE PTR [eax+0x4a],dl
  412c02:	inc    ecx
  412c03:	add    BYTE PTR [eax+0x41],ch
  412c06:	inc    ecx
  412c07:	add    BYTE PTR [eax-0x7fffbeb4],ch
  412c0d:	dec    ebx
  412c0e:	inc    ecx
  412c0f:	add    BYTE PTR [eax],bh
  412c11:	xor    eax,DWORD PTR [eax+0x0]
  412c14:	lods   al,BYTE PTR ds:[esi]
  412c15:	dec    edi
  412c16:	inc    ecx
  412c17:	add    BYTE PTR [eax],bh
  412c19:	xor    eax,DWORD PTR [eax+0x0]
  412c1c:	adc    al,0x50
  412c1e:	inc    ecx
  412c1f:	add    BYTE PTR [eax+edx*2+0x41],ch
  412c23:	add    BYTE PTR [ebp+edx*2+0x55d40041],ah
  412c2a:	inc    ecx
  412c2b:	add    BYTE PTR [eax+0x57],al
  412c2e:	inc    ecx
  412c2f:	add    ah,ch
  412c31:	push   edi
  412c32:	inc    ecx
  412c33:	add    BYTE PTR [eax-0x4fffbea7],dl
  412c39:	pop    esp
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [eax-0x5bffbeb6],al
  412c41:	dec    edx
  412c42:	inc    ecx
  412c43:	add    al,cl
  412c45:	dec    edx
  412c46:	inc    ecx
  412c47:	add    BYTE PTR [eax],bh
  412c49:	xor    eax,DWORD PTR [eax+0x0]
  412c4c:	cmp    BYTE PTR [ebx],dh
  412c4e:	inc    eax
  412c4f:	add    BYTE PTR [esi+ecx*2+0x41],al
  412c53:	add    BYTE PTR [eax],bl
  412c55:	push   eax
  412c56:	inc    ecx
  412c57:	add    BYTE PTR [eax],dh
  412c59:	push   edx
  412c5a:	inc    ecx
  412c5b:	add    BYTE PTR [edx+edx*2+0x53900041],bh
  412c62:	inc    ecx
  412c63:	add    BYTE PTR [eax],bh
  412c65:	xor    eax,DWORD PTR [eax+0x0]
  412c68:	les    edx,FWORD PTR [ebx+0x41]
  412c6b:	add    ah,dh
  412c6d:	push   ebx
  412c6e:	inc    ecx
  412c6f:	add    BYTE PTR [eax+0x54],cl
  412c72:	inc    ecx
  412c73:	add    ah,dh
  412c75:	push   esp
  412c76:	inc    ecx
  412c77:	add    BYTE PTR [eax-0x1fffbeaa],cl
  412c7d:	push   esi
  412c7e:	inc    ecx
  412c7f:	add    BYTE PTR [edi+edx*2+0xe0041],bl
  412c86:	add    BYTE PTR [eax],al
  412c88:	add    BYTE PTR [eax],al
  412c8a:	add    al,BYTE PTR [eax]
  412c8c:	add    BYTE PTR [eax],al
  412c8e:	test   BYTE PTR [eax],dl
  412c90:	inc    eax
  412c91:	add    BYTE PTR [eax],cl
  412c93:	add    BYTE PTR [eax],al
  412c95:	add    BYTE PTR [eax+0x1400412b],al
  412c9b:	add    BYTE PTR [eax],al
  412c9d:	add    BYTE PTR [eax],cl
  412c9f:	push   esp
  412ca0:	push   ebx
  412ca1:	je     0x412d15
  412ca3:	imul   ebp,DWORD PTR [esi+0x67],0x2cac9073
  412caa:	inc    ecx
  412cab:	add    BYTE PTR [edi],al
  412cad:	or     BYTE PTR [ebx+edx*2+0x74],dl
  412cb1:	jb     0x412d1c
  412cb3:	outs   dx,BYTE PTR ds:[esi]
  412cb4:	addr16 jae 0x412cbb
  412cb7:	sub    al,0x41
  412cb9:	add    BYTE PTR [eax],dl
  412cbb:	sub    DWORD PTR [ecx+0x0],eax
  412cbe:	add    BYTE PTR [eax],al
  412cc0:	pop    es
  412cc1:	inc    ebx
  412cc2:	ins    BYTE PTR es:[edi],dx
  412cc3:	popa   
  412cc4:	jae    0x412d39
  412cc6:	gs jae 0x412cc9
  412cc9:	add    BYTE PTR [ebx+0x412cd0c0],cl
  412ccf:	add    BYTE PTR [esi],cl
  412cd1:	or     edx,DWORD PTR [ebx+edx*2+0x74]
  412cd5:	jb     0x412d40
  412cd7:	outs   dx,BYTE PTR ds:[esi]
  412cd8:	addr16 dec ecx
  412cda:	je     0x412d41
  412cdc:	ins    DWORD PTR es:[edi],dx
  412cdd:	or     BYTE PTR [eax],al
  412cdf:	add    BYTE PTR [eax],al
  412ce1:	add    DWORD PTR [eax],eax
  412ce3:	add    BYTE PTR [eax],al
  412ce5:	test   BYTE PTR [eax],dl
  412ce7:	inc    eax
  412ce8:	add    BYTE PTR [eax],al
  412cea:	add    BYTE PTR [eax],al
  412cec:	add    BYTE PTR [ebp+0x2d3c0040],cl
  412cf2:	inc    ecx
	...
  412cff:	add    ah,ah
  412d01:	sub    eax,0x41
	...
  412d0e:	add    BYTE PTR [eax],al
  412d10:	aam    0x2d
  412d12:	inc    ecx
  412d13:	add    BYTE PTR [eax],bh
  412d15:	add    BYTE PTR [eax],al
  412d17:	add    BYTE PTR [eax-0x2fffbed5],bh
  412d1d:	inc    edx
  412d1e:	inc    eax
  412d1f:	add    ah,bl
  412d21:	inc    edx
  412d22:	inc    eax
  412d23:	add    al,ah
  412d25:	inc    edx
  412d26:	inc    eax
  412d27:	add    ah,ah
  412d29:	inc    edx
  412d2a:	inc    eax
  412d2b:	add    al,bl
  412d2d:	inc    edx
  412d2e:	inc    eax
  412d2f:	add    BYTE PTR [eax],bh
  412d31:	inc    eax
  412d32:	inc    eax
  412d33:	add    BYTE PTR [eax+eax*2+0x40],dl
  412d37:	add    BYTE PTR [eax],ch
  412d39:	pop    ebp
  412d3a:	inc    ecx
  412d3b:	add    BYTE PTR [eax+0x41],ch
  412d3e:	inc    ecx
  412d3f:	add    BYTE PTR [eax-0x7fffbeb4],ch
  412d45:	dec    ebx
  412d46:	inc    ecx
  412d47:	add    al,ah
  412d49:	pop    edi
  412d4a:	inc    ecx
  412d4b:	add    BYTE PTR [eax+eiz*2],dl
  412d4e:	inc    ecx
  412d4f:	add    BYTE PTR [eax],bl
  412d51:	pusha  
  412d52:	inc    ecx
  412d53:	add    BYTE PTR [eax+eiz*2],bl
  412d56:	inc    ecx
  412d57:	add    BYTE PTR [eax+edx*2+0x41],ch
  412d5b:	add    BYTE PTR [ecx+eiz*2+0x61f00041],dl
  412d62:	inc    ecx
  412d63:	add    ah,al
  412d65:	bound  eax,QWORD PTR [ecx+0x0]
  412d68:	in     al,dx
  412d69:	push   edi
  412d6a:	inc    ecx
  412d6b:	add    al,ah
  412d6d:	bound  eax,QWORD PTR [ecx+0x0]
  412d70:	pusha  
  412d71:	arpl   WORD PTR [ecx+0x0],ax
  412d74:	test   BYTE PTR [ebp+0x41],bl
  412d77:	add    BYTE PTR [ebp+ebx*2+0x4ac80041],dl
  412d7e:	inc    ecx
  412d7f:	add    BYTE PTR [eax],dh
  412d81:	pop    esi
  412d82:	inc    ecx
  412d83:	add    BYTE PTR [eax+0x5e],dh
  412d86:	inc    ecx
  412d87:	add    ah,bl
  412d89:	pop    esi
  412d8a:	inc    ecx
  412d8b:	add    BYTE PTR [eax],bl
  412d8d:	push   eax
  412d8e:	inc    ecx
  412d8f:	add    BYTE PTR [eax+0x60],bh
  412d92:	inc    ecx
  412d93:	add    BYTE PTR [edx+edx*2+0x53900041],bh
  412d9a:	inc    ecx
  412d9b:	add    BYTE PTR [eax+eiz*2+0x60c40041],dh
  412da2:	inc    ecx
  412da3:	add    ah,dh
  412da5:	push   ebx
  412da6:	inc    ecx
  412da7:	add    BYTE PTR [eax+0x54],cl
  412daa:	inc    ecx
  412dab:	add    ah,dh
  412dad:	push   esp
  412dae:	inc    ecx
  412daf:	add    BYTE PTR [eax-0x1fffbeaa],cl
  412db5:	push   esi
  412db6:	inc    ecx
  412db7:	add    BYTE PTR [edi+edx*2+0x5df80041],bl
  412dbe:	inc    ecx
  412dbf:	add    BYTE PTR [esi+ebx*2],dl
  412dc2:	inc    ecx
  412dc3:	add    BYTE PTR [eax],bl
  412dc5:	popa   
  412dc6:	inc    ecx
  412dc7:	add    BYTE PTR [edi+ebx*2+0x41],bl
  412dcb:	add    BYTE PTR [eax],bl
  412dcd:	arpl   WORD PTR [ecx+0x0],ax
  412dd0:	sub    BYTE PTR [ebx+0x41],ah
  412dd3:	add    BYTE PTR [ebx],cl
  412dd5:	push   esp
  412dd6:	push   ebx
  412dd7:	je     0x412e4b
  412dd9:	imul   ebp,DWORD PTR [esi+0x67],0x7473694c
  412de0:	in     al,0x2d
  412de2:	inc    ecx
  412de3:	add    BYTE PTR [edi],al
  412de5:	or     edx,DWORD PTR [ebx+edx*2+0x74]
  412de9:	jb     0x412e54
  412deb:	outs   dx,BYTE PTR ds:[esi]
  412dec:	addr16 dec esp
  412dee:	imul   esi,DWORD PTR [ebx+0x74],0x412d3c
  412df5:	test   al,0x2c
  412df7:	inc    ecx
  412df8:	add    BYTE PTR [eax],al
  412dfa:	add    BYTE PTR [edi],al
  412dfc:	inc    ebx
  412dfd:	ins    BYTE PTR es:[edi],dx
  412dfe:	popa   
  412dff:	jae    0x412e74
  412e01:	gs jae 0x412e04
  412e04:	add    BYTE PTR [ebp+0x2e540040],cl
  412e0a:	inc    ecx
	...
  412e27:	add    BYTE PTR [eax+0x2e],dh
  412e2a:	inc    ecx
  412e2b:	add    BYTE PTR [eax+eax*1],al
  412e2e:	add    BYTE PTR [eax],al
  412e30:	nop
  412e31:	adc    BYTE PTR [eax+0x0],al
  412e34:	rol    BYTE PTR [edx+0x40],1
  412e37:	add    ah,bl
  412e39:	inc    edx
  412e3a:	inc    eax
  412e3b:	add    al,ah
  412e3d:	inc    edx
  412e3e:	inc    eax
  412e3f:	add    ah,ah
  412e41:	inc    edx
  412e42:	inc    eax
  412e43:	add    al,bl
  412e45:	inc    edx
  412e46:	inc    eax
  412e47:	add    BYTE PTR [eax],bh
  412e49:	inc    eax
  412e4a:	inc    eax
  412e4b:	add    BYTE PTR [eax+eax*2+0x40],dl
  412e4f:	add    BYTE PTR [eax+0x18004040],dl
  412e55:	fs inc ecx
  412e57:	add    BYTE PTR [esp+eiz*2+0x41],ah
  412e5b:	add    BYTE PTR [esp+eiz*2+0x41],bh
  412e5f:	add    BYTE PTR [eax],bh
  412e61:	xor    eax,DWORD PTR [eax+0x0]
  412e64:	cmp    BYTE PTR [ebx],dh
  412e66:	inc    eax
  412e67:	add    BYTE PTR [eiz*2+0x65a00041],bl
  412e6e:	inc    ecx
  412e6f:	add    BYTE PTR [edi],al
  412e71:	push   esp
  412e72:	push   ebx
  412e73:	je     0x412ee7
  412e75:	gs popa 
  412e77:	ins    DWORD PTR es:[edi],dx
  412e78:	les    ebp,FWORD PTR [esi]
  412e7a:	inc    ecx
	...
  412e97:	add    al,ah
  412e99:	cs inc ecx
  412e9b:	add    BYTE PTR [eax],cl
  412e9d:	add    BYTE PTR [eax],al
  412e9f:	add    BYTE PTR [eax],cl
  412ea1:	cs inc ecx
  412ea3:	add    al,dl
  412ea5:	inc    edx
  412ea6:	inc    eax
  412ea7:	add    ah,bl
  412ea9:	inc    edx
  412eaa:	inc    eax
  412eab:	add    al,ah
  412ead:	inc    edx
  412eae:	inc    eax
  412eaf:	add    ah,ah
  412eb1:	inc    edx
  412eb2:	inc    eax
  412eb3:	add    al,bl
  412eb5:	inc    edx
  412eb6:	inc    eax
  412eb7:	add    BYTE PTR [eax],bh
  412eb9:	inc    eax
  412eba:	inc    eax
  412ebb:	add    BYTE PTR [eax+eax*2+0x40],dl
  412ebf:	add    BYTE PTR [eax+0x18004040],dl
  412ec5:	fs inc ecx
  412ec7:	add    al,dl
  412ec9:	inc    cx
  412ecb:	add    ah,ah
  412ecd:	inc    cx
  412ecf:	add    BYTE PTR [esi+eiz*2+0x66940041],al
  412ed6:	inc    ecx
  412ed7:	add    BYTE PTR [eiz*2+0x66a40041],bl
  412ede:	inc    ecx
  412edf:	add    BYTE PTR ds:0x6e614854,cl
  412ee5:	fs ins BYTE PTR es:[edi],dx
  412ee7:	gs push ebx
  412ee9:	je     0x412f5d
  412eeb:	gs popa 
  412eed:	ins    DWORD PTR es:[edi],dx
  412eee:	mov    eax,eax
  412ef0:	cmp    al,0x2f
  412ef2:	inc    ecx
	...
  412efb:	add    BYTE PTR [eax+0x2f],bl
  412efe:	inc    ecx
	...
  412f0f:	add    BYTE PTR [edx+0x2f],ch
  412f12:	inc    ecx
  412f13:	add    BYTE PTR [eax+eax*1],cl
  412f16:	add    BYTE PTR [eax],al
  412f18:	js     0x412f48
  412f1a:	inc    ecx
  412f1b:	add    al,dl
  412f1d:	inc    edx
  412f1e:	inc    eax
  412f1f:	add    ah,bl
  412f21:	inc    edx
  412f22:	inc    eax
  412f23:	add    al,ah
  412f25:	inc    edx
  412f26:	inc    eax
  412f27:	add    ah,ah
  412f29:	inc    edx
  412f2a:	inc    eax
  412f2b:	add    al,bl
  412f2d:	inc    edx
  412f2e:	inc    eax
  412f2f:	add    BYTE PTR [eax],bh
  412f31:	inc    eax
  412f32:	inc    eax
  412f33:	add    BYTE PTR [eax+eax*2+0x40],dl
  412f37:	add    ah,al
  412f39:	push   0x64180041
  412f3e:	inc    ecx
  412f3f:	add    al,dl
  412f41:	inc    cx
  412f43:	add    ah,ah
  412f45:	inc    cx
  412f47:	add    BYTE PTR [esi+eiz*2+0x66940041],al
  412f4e:	inc    ecx
  412f4f:	add    BYTE PTR [eiz*2+0x66a40041],bl
  412f56:	inc    ecx
  412f57:	add    BYTE PTR [esi],cl
  412f59:	add    BYTE PTR [eax],al
  412f5b:	add    BYTE PTR [eax],al
  412f5d:	add    BYTE PTR [ecx],al
  412f5f:	add    BYTE PTR [eax],al
  412f61:	add    BYTE PTR [eax+edx*1+0x80040],al
  412f68:	add    BYTE PTR [eax],al
  412f6a:	or     edx,DWORD PTR [esi+eax*2+0x69]
  412f6e:	ins    BYTE PTR es:[edi],dx
  412f6f:	gs push ebx
  412f71:	je     0x412fe5
  412f73:	gs popa 
  412f75:	ins    DWORD PTR es:[edi],dx
  412f76:	mov    eax,eax
  412f78:	les    ebp,FWORD PTR [edi]
  412f7a:	inc    ecx
	...
  412f97:	add    al,ah
  412f99:	das    
  412f9a:	inc    ecx
  412f9b:	add    BYTE PTR [eax],dl
  412f9d:	add    BYTE PTR [eax],al
  412f9f:	add    BYTE PTR [eax],cl
  412fa1:	cs inc ecx
  412fa3:	add    al,dl
  412fa5:	inc    edx
  412fa6:	inc    eax
  412fa7:	add    ah,bl
  412fa9:	inc    edx
  412faa:	inc    eax
  412fab:	add    al,ah
  412fad:	inc    edx
  412fae:	inc    eax
  412faf:	add    ah,ah
  412fb1:	inc    edx
  412fb2:	inc    eax
  412fb3:	add    al,bl
  412fb5:	inc    edx
  412fb6:	inc    eax
  412fb7:	add    BYTE PTR [eax],bh
  412fb9:	inc    eax
  412fba:	inc    eax
  412fbb:	add    BYTE PTR [eax+eax*2+0x40],dl
  412fbf:	add    BYTE PTR [eax+0x18004040],dl
  412fc5:	fs inc ecx
  412fc7:	add    BYTE PTR [esp+eiz*2+0x41],ah
  412fcb:	add    BYTE PTR [esp+eiz*2+0x41],bh
  412fcf:	add    BYTE PTR [eax],al
  412fd1:	imul   eax,DWORD PTR [ecx+0x0],0x403338
  412fd8:	cmp    BYTE PTR [ecx+0x41],ch
  412fdb:	add    BYTE PTR [eax+0x13004165],ah
  412fe1:	push   esp
  412fe2:	inc    ebx
  412fe3:	jne    0x413058
  412fe5:	je     0x413056
  412fe7:	ins    DWORD PTR es:[edi],dx
  412fe8:	dec    ebp
  412fe9:	gs ins DWORD PTR es:[edi],dx
  412feb:	outs   dx,DWORD PTR ds:[esi]
  412fec:	jb     0x413067
  412fee:	push   ebx
  412fef:	je     0x413063
  412ff1:	gs popa 
  412ff3:	ins    DWORD PTR es:[edi],dx
  412ff4:	inc    eax
  412ff5:	xor    BYTE PTR [ecx+0x0],al
	...
  413014:	pusha  
  413015:	xor    BYTE PTR [ecx+0x0],al
  413018:	adc    al,0x0
  41301a:	add    BYTE PTR [eax],al
  41301c:	js     0x41304d
  41301e:	inc    ecx
  41301f:	add    al,dl
  413021:	inc    edx
  413022:	inc    eax
  413023:	add    ah,bl
  413025:	inc    edx
  413026:	inc    eax
  413027:	add    al,ah
  413029:	inc    edx
  41302a:	inc    eax
  41302b:	add    ah,ah
  41302d:	inc    edx
  41302e:	inc    eax
  41302f:	add    al,bl
  413031:	inc    edx
  413032:	inc    eax
  413033:	add    BYTE PTR [eax],bh
  413035:	inc    eax
  413036:	inc    eax
  413037:	add    BYTE PTR [eax+eax*2+0x40],dl
  41303b:	add    BYTE PTR [ecx+ebp*2+0x41],bl
  41303f:	add    BYTE PTR [eax],bl
  413041:	fs inc ecx
  413043:	add    al,cl
  413045:	imul   eax,DWORD PTR [ecx+0x0],0x41647c
  41304c:	add    BYTE PTR [ecx+0x41],ch
  41304f:	add    BYTE PTR [edx+ebp*2+0x41],dh
  413053:	add    BYTE PTR [eax],bh
  413055:	imul   eax,DWORD PTR [ecx+0x0],0x4165a0
  41305c:	hlt    
  41305d:	imul   eax,DWORD PTR [ecx+0x0],0x654d540d
  413064:	ins    DWORD PTR es:[edi],dx
  413065:	outs   dx,DWORD PTR ds:[esi]
  413066:	jb     0x4130e1
  413068:	push   ebx
  413069:	je     0x4130dd
  41306b:	gs popa 
  41306d:	ins    DWORD PTR es:[edi],dx
  41306e:	mov    eax,eax
  413070:	mov    esp,0x4130
  413075:	add    BYTE PTR [eax],al
  413077:	add    BYTE PTR [eax],al
  413079:	add    BYTE PTR [eax],al
  41307b:	add    al,bl
  41307d:	xor    BYTE PTR [ecx+0x0],al
	...
  413090:	jmp    0x0:0xc004130
  413097:	add    BYTE PTR [eax],cl
  413099:	cs inc ecx
  41309b:	add    al,dl
  41309d:	inc    edx
  41309e:	inc    eax
  41309f:	add    ah,bl
  4130a1:	inc    edx
  4130a2:	inc    eax
  4130a3:	add    al,ah
  4130a5:	inc    edx
  4130a6:	inc    eax
  4130a7:	add    ah,ah
  4130a9:	inc    edx
  4130aa:	inc    eax
  4130ab:	add    al,bl
  4130ad:	inc    edx
  4130ae:	inc    eax
  4130af:	add    BYTE PTR [eax],bh
  4130b1:	inc    eax
  4130b2:	inc    eax
  4130b3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4130b7:	add    BYTE PTR [eax+0x18004040],dl
  4130bd:	fs inc ecx
  4130bf:	add    al,ah
  4130c1:	imul   eax,DWORD PTR [ecx+0x0],0x7c
  4130c5:	fs inc ecx
  4130c7:	add    BYTE PTR [eax],cl
  4130c9:	imul   eax,DWORD PTR [ecx+0x0],0x48
  4130cd:	imul   eax,DWORD PTR [ecx+0x0],0xffffff80
  4130d1:	imul   eax,DWORD PTR [ecx+0x0],0xffffffa0
  4130d5:	gs inc ecx
  4130d7:	add    BYTE PTR [esi],cl
  4130d9:	add    BYTE PTR [eax],al
  4130db:	add    BYTE PTR [eax],al
  4130dd:	add    BYTE PTR [ecx],al
  4130df:	add    BYTE PTR [eax],al
  4130e1:	add    BYTE PTR [eax+edx*1+0x40040],al
  4130e8:	add    BYTE PTR [eax],al
  4130ea:	or     eax,0x72745354
  4130ef:	imul   ebp,DWORD PTR [esi+0x67],0x65727453
  4130f6:	popa   
  4130f7:	ins    DWORD PTR es:[edi],dx
  4130f8:	inc    esp
  4130f9:	xor    DWORD PTR [ecx+0x0],eax
	...
  413118:	push   esp
  413119:	xor    DWORD PTR [ecx+0x0],eax
  41311c:	sub    BYTE PTR [eax],al
  41311e:	add    BYTE PTR [eax],al
  413120:	nop
  413121:	adc    BYTE PTR [eax+0x0],al
  413124:	rol    BYTE PTR [edx+0x40],1
  413127:	add    ah,bl
  413129:	inc    edx
  41312a:	inc    eax
  41312b:	add    al,ah
  41312d:	inc    edx
  41312e:	inc    eax
  41312f:	add    ah,ah
  413131:	inc    edx
  413132:	inc    eax
  413133:	add    al,bl
  413135:	inc    edx
  413136:	inc    eax
  413137:	add    BYTE PTR [eax],bh
  413139:	inc    eax
  41313a:	inc    eax
  41313b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41313f:	add    BYTE PTR [esp+ebp*2+0x41],al
  413143:	add    BYTE PTR [esp+ebp*2+0x41],ch
  413147:	add    BYTE PTR [eax],bh
  413149:	xor    eax,DWORD PTR [eax+0x0]
  41314c:	cmp    BYTE PTR [ebx],dh
  41314e:	inc    eax
  41314f:	add    BYTE PTR [eax],bh
  413151:	xor    eax,DWORD PTR [eax+0x0]
  413154:	push   es
  413155:	push   esp
  413156:	inc    esi
  413157:	imul   ebp,DWORD PTR [ebp+eiz*2+0x72],0x4131a890
	...
  413167:	add    ah,dl
  413169:	xor    DWORD PTR [ecx+0x0],eax
	...
  41317c:	out    0x31,al
  41317e:	inc    ecx
  41317f:	add    BYTE PTR [eax+eax*1+0x30f80000],cl
  413186:	inc    ecx
  413187:	add    al,dl
  413189:	inc    edx
  41318a:	inc    eax
  41318b:	add    ah,bl
  41318d:	inc    edx
  41318e:	inc    eax
  41318f:	add    al,ah
  413191:	inc    edx
  413192:	inc    eax
  413193:	add    ah,ah
  413195:	inc    edx
  413196:	inc    eax
  413197:	add    al,bl
  413199:	inc    edx
  41319a:	inc    eax
  41319b:	add    BYTE PTR [eax],bh
  41319d:	inc    eax
  41319e:	inc    eax
  41319f:	add    BYTE PTR [eax+eax*2+0x40],dl
  4131a3:	add    al,ah
  4131a5:	jo     0x4131e8
  4131a7:	add    BYTE PTR [esp+ebp*2+0x41],ch
  4131ab:	add    BYTE PTR [eax+0x71],al
  4131ae:	inc    ecx
  4131af:	add    BYTE PTR [ecx+esi*2+0x41],bh
  4131b3:	add    BYTE PTR [ebp+esi*2+0x41],cl
  4131b7:	add    BYTE PTR [eax+0x72],bh
  4131ba:	inc    ecx
  4131bb:	add    ah,cl
  4131bd:	xchg   ecx,eax
  4131be:	inc    ecx
  4131bf:	add    BYTE PTR [edx+esi*2+0x73240041],bl
  4131c6:	inc    ecx
  4131c7:	add    BYTE PTR [edx+edx*4-0x6d7bffbf],bl
  4131ce:	inc    ecx
  4131cf:	add    BYTE PTR [ebx+eax*4],dl
  4131d2:	inc    ecx
  4131d3:	add    BYTE PTR [esi],cl
  4131d5:	add    BYTE PTR [eax],al
  4131d7:	add    BYTE PTR [eax],al
  4131d9:	add    BYTE PTR [ecx],al
  4131db:	add    BYTE PTR [eax],al
  4131dd:	add    BYTE PTR [eax+edx*1+0x800040],al
  4131e4:	add    BYTE PTR [eax],al
  4131e6:	pop    es
  4131e7:	push   esp
  4131e8:	push   edx
  4131e9:	gs popa 
  4131eb:	fs gs jb 0x41317a
  4131ef:	sar    BYTE PTR [edx+esi*1],0x41
	...
  41320f:	add    BYTE PTR [edx+esi*1],bh
  413212:	inc    ecx
  413213:	add    BYTE PTR [eax+eax*1],cl
  413216:	add    BYTE PTR [eax],al
  413218:	hlt    
  413219:	jbe    0x41325b
  41321b:	add    al,dl
  41321d:	inc    edx
  41321e:	inc    eax
  41321f:	add    ah,bl
  413221:	inc    edx
  413222:	inc    eax
  413223:	add    al,ah
  413225:	inc    edx
  413226:	inc    eax
  413227:	add    ah,ah
  413229:	inc    edx
  41322a:	inc    eax
  41322b:	add    al,bl
  41322d:	inc    edx
  41322e:	inc    eax
  41322f:	add    BYTE PTR [eax],bh
  413231:	inc    eax
  413232:	inc    eax
  413233:	add    BYTE PTR [eax+eax*2+0x40],dl
  413237:	add    BYTE PTR [eax+0x7004040],dl
  41323d:	inc    ebp
  41323e:	push   esp
  41323f:	push   0x64616572
  413244:	nop
  413245:	xor    al,BYTE PTR [ecx+0x0]
	...
  413264:	cwde   
  413265:	xor    al,BYTE PTR [ecx+0x0]
  413268:	cmp    al,0x0
  41326a:	add    BYTE PTR [eax],al
  41326c:	nop
  41326d:	adc    BYTE PTR [eax+0x0],al
  413270:	rol    BYTE PTR [edx+0x40],1
  413273:	add    al,al
  413275:	popf   
  413276:	inc    ecx
  413277:	add    al,ah
  413279:	inc    edx
  41327a:	inc    eax
  41327b:	add    ah,ah
  41327d:	inc    edx
  41327e:	inc    eax
  41327f:	add    al,bl
  413281:	inc    edx
  413282:	inc    eax
  413283:	add    BYTE PTR [eax],bh
  413285:	inc    eax
  413286:	inc    eax
  413287:	add    BYTE PTR [eax+eax*2+0x40],dl
  41328b:	add    BYTE PTR [ebp+ebx*4+0x41],cl
  41328f:	add    BYTE PTR [esi+ebx*4+0x41],dh
  413293:	add    BYTE PTR [eax],bh
  413295:	xor    eax,DWORD PTR [eax+0x0]
  413298:	pop    es
  413299:	push   esp
  41329a:	push   esp
  41329b:	push   0x64616572
  4132a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a1:	xor    al,BYTE PTR [ecx+0x0]
  4132a4:	or     cl,BYTE PTR [esi]
  4132a6:	push   esp
  4132a7:	inc    ebx
  4132a8:	outs   dx,DWORD PTR ds:[esi]
  4132a9:	ins    DWORD PTR es:[edi],dx
  4132aa:	jo     0x41331b
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	outs   dx,BYTE PTR gs:[esi]
  4132af:	je     0x4132ff
  4132b1:	popa   
  4132b2:	ins    DWORD PTR es:[edi],dx
  4132b3:	gs int3 
  4132b5:	add    eax,0xffffffd8
  4132b8:	jmp    0x41a9b8
  4132bd:	add    DWORD PTR [esp+0x4],0xffffffd8
  4132c2:	mov    eax,DWORD PTR [esp+0x4]
  4132c6:	mov    eax,DWORD PTR [eax]
  4132c8:	jmp    DWORD PTR [eax+0x28]
  4132cb:	add    DWORD PTR [esp+0x4],0xffffffd8
  4132d0:	jmp    0x41a978
  4132d5:	add    DWORD PTR [esp+0x4],0xffffffd8
  4132da:	jmp    0x41a998
  4132df:	add    DWORD PTR [esp+0x4],0xffffffd4
  4132e4:	mov    eax,DWORD PTR [esp+0x4]
  4132e8:	mov    eax,DWORD PTR [eax]
  4132ea:	jmp    DWORD PTR [eax+0x28]
  4132ed:	add    DWORD PTR [esp+0x4],0xffffffd4
  4132f2:	jmp    0x41a978
  4132f7:	add    DWORD PTR [esp+0x4],0xffffffd4
  4132fc:	jmp    0x41a998
  413301:	mov    ebp,0xcb004132
  413306:	xor    al,BYTE PTR [ecx+0x0]
  413309:	aad    0x32
  41330b:	inc    ecx
  41330c:	add    BYTE PTR [ebp-0x20ffbece],dh
  413312:	xor    al,BYTE PTR [ecx+0x0]
  413315:	in     eax,dx
  413316:	xor    al,BYTE PTR [ecx+0x0]
  413319:	div    DWORD PTR [edx]
  41331b:	inc    ecx
  41331c:	add    BYTE PTR [edx],al
  41331e:	add    BYTE PTR [eax],al
  413320:	add    BYTE PTR [eax+0x18],bl
  413323:	mov    esp,edx
  413325:	xchg   ah,ch
  413327:	pop    ecx
  413328:	inc    ebp
  413329:	(bad)  
  41332a:	int    0x6b
  41332c:	dec    edi
  41332d:	add    BYTE PTR [ecx+0x51],0xed
  413331:	add    DWORD PTR [ebx],esi
  413333:	inc    ecx
  413334:	add    BYTE PTR [eax],ch
	...
  413342:	add    BYTE PTR [eax],al
  413344:	add    al,al
  413346:	add    BYTE PTR [eax],al
  413348:	add    BYTE PTR [eax],al
  41334a:	add    BYTE PTR [eax],al
  41334c:	inc    esi
  41334d:	adc    DWORD PTR [ebx],esi
  41334f:	inc    ecx
  413350:	add    BYTE PTR [eax+eax*1],ch
  413353:	add    BYTE PTR [eax],al
  413355:	add    BYTE PTR [eax],al
  413357:	add    BYTE PTR [eax],al
  413359:	lea    eax,[eax+0x0]
  41335c:	test   al,0x33
  41335e:	inc    ecx
  41335f:	add    BYTE PTR ds:0x4133,bl
  413365:	add    BYTE PTR [eax],al
  413367:	add    al,bl
  413369:	xor    eax,DWORD PTR [ecx+0x0]
  41336c:	pop    esp
  41336d:	xor    al,0x41
	...
  413377:	add    dl,ch
  413379:	xor    eax,DWORD PTR [ecx+0x0]
  41337c:	dec    esp
  41337d:	xor    al,0x41
  41337f:	add    BYTE PTR [eax],dh
  413381:	add    BYTE PTR [eax],al
  413383:	add    BYTE PTR [eax+ebp*1-0x56e7ffbf],bl
  41338a:	inc    ecx
  41338b:	add    ah,bl
  41338d:	inc    edx
  41338e:	inc    eax
  41338f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  413395:	inc    edx
  413396:	inc    eax
  413397:	add    al,bl
  413399:	inc    edx
  41339a:	inc    eax
  41339b:	add    BYTE PTR [eax],bh
  41339d:	inc    eax
  41339e:	inc    eax
  41339f:	add    BYTE PTR [eax+eax*2+0x40],dl
  4133a3:	add    BYTE PTR [edx+eiz*4],ch
  4133a6:	inc    ecx
  4133a7:	add    BYTE PTR [eax+0x41],ch
  4133aa:	inc    ecx
  4133ab:	add    BYTE PTR [eax-0x5b],dh
  4133ae:	inc    ecx
  4133af:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4133b6:	inc    ecx
  4133b7:	add    BYTE PTR [eax],dl
  4133b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ba:	inc    ecx
  4133bb:	add    BYTE PTR [eax-0x5a],bl
  4133be:	inc    ecx
  4133bf:	add    BYTE PTR [eax-0x59],dl
  4133c2:	inc    ecx
  4133c3:	add    BYTE PTR [eax],dh
  4133c5:	test   eax,0xa6680041
  4133ca:	inc    ecx
  4133cb:	add    BYTE PTR [eax-0x5a],ah
  4133ce:	inc    ecx
  4133cf:	add    BYTE PTR [eax],bh
  4133d1:	test   eax,0xa1e00041
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [esi],cl
  4133d9:	add    BYTE PTR [eax],al
  4133db:	add    BYTE PTR [eax],al
  4133dd:	add    BYTE PTR [ecx],al
  4133df:	add    BYTE PTR [eax],al
  4133e1:	add    BYTE PTR [eax+0x8004132],ah
  4133e7:	add    BYTE PTR [eax],al
  4133e9:	add    BYTE PTR [eax],dl
  4133eb:	add    ch,bh
  4133ed:	(bad)  
  4133ee:	cld    
  4133ef:	(bad)  
  4133f0:	sti    
  4133f1:	(bad)  
  4133f2:	(bad)  
  4133f3:	(bad)  
  4133f4:	cli    
  4133f5:	(bad)  
  4133f6:	stc    
  4133f7:	(bad)  
  4133f8:	clc    
  4133f9:	push   edi
  4133fb:	push   esi
  4133fd:	push   ebp
  4133ff:	push   esp
  413401:	push   ebx
  413403:	push   edx
  413405:	(bad)  
  413406:	(bad)  
  413407:	push   ecx
  413409:	push   eax
  41340b:	(bad)  
  41340c:	cld    
  41340d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340e:	inc    ecx
  41340f:	add    BYTE PTR [esi+eiz*4],al
  413412:	inc    ecx
  413413:	add    BYTE PTR [eax],cl
  413415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413416:	inc    ecx
  413417:	add    BYTE PTR [eax],ah
  413419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341a:	inc    ecx
  41341b:	add    BYTE PTR [esi+eiz*4+0x41],dl
  41341f:	add    BYTE PTR [esi+eiz*4],ah
  413422:	inc    ecx
  413423:	add    BYTE PTR [esi+eiz*4],ch
  413426:	inc    ecx
  413427:	add    BYTE PTR [eax],dh
  413429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41342a:	inc    ecx
  41342b:	add    BYTE PTR [esi+eiz*4],bh
  41342e:	inc    ecx
  41342f:	add    al,ch
  413431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413432:	inc    ecx
  413433:	add    ah,bh
  413435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413436:	inc    ecx
  413437:	add    al,cl
  413439:	test   al,0x41
  41343b:	add    BYTE PTR [eax],ch
  41343d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41343e:	inc    ecx
  41343f:	add    BYTE PTR [esi+eiz*4],cl
  413442:	inc    ecx
  413443:	add    al,bh
  413445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413446:	inc    ecx
  413447:	add    al,dh
  413449:	test   al,0x41
  41344b:	add    BYTE PTR [edx],cl
  41344d:	push   esp
  41344e:	inc    ebx
  41344f:	outs   dx,DWORD PTR ds:[esi]
  413450:	ins    DWORD PTR es:[edi],dx
  413451:	jo     0x4134c2
  413453:	outs   dx,BYTE PTR ds:[esi]
  413454:	outs   dx,BYTE PTR gs:[esi]
  413456:	je     0x4133e8
  413458:	pop    esp
  413459:	xor    al,0x41
  41345b:	add    BYTE PTR [edi],al
  41345d:	or     dl,BYTE PTR [ebx+eax*2+0x6f]
  413461:	ins    DWORD PTR es:[edi],dx
  413462:	jo     0x4134d3
  413464:	outs   dx,BYTE PTR ds:[esi]
  413465:	outs   dx,BYTE PTR gs:[esi]
  413467:	je     0x413411
  413469:	xor    eax,DWORD PTR [ecx+0x0]
  41346c:	adc    BYTE PTR [ecx],ch
  41346e:	inc    ecx
  41346f:	add    BYTE PTR [edx],al
  413471:	add    BYTE PTR [edi],al
  413473:	inc    ebx
  413474:	ins    BYTE PTR es:[edi],dx
  413475:	popa   
  413476:	jae    0x4134eb
  413478:	gs jae 0x41347d
  41347b:	add    BYTE PTR [eax+0x8004132],ah
  413481:	add    BYTE PTR [eax],al
  413483:	call   FWORD PTR [eax]
  413485:	add    BYTE PTR [eax],al
  413487:	inc    BYTE PTR [eax]
  413489:	add    BYTE PTR [eax],al
  41348b:	add    BYTE PTR [eax],al
  41348d:	add    BYTE PTR [eax],al
  41348f:	add    BYTE PTR [eax],0x0
  413492:	add    BYTE PTR [eax+0x4e040000],al
  413498:	popa   
  413499:	ins    DWORD PTR es:[edi],dx
  41349a:	gs cmp al,0x10
  41349d:	inc    eax
  41349e:	add    BYTE PTR [eax+eax*1],cl
  4134a1:	add    bh,bh
  4134a3:	or     al,0x0
  4134a5:	add    bh,bh
  4134a7:	add    DWORD PTR [eax],eax
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	add    BYTE PTR [eax],al
  4134ad:	add    BYTE PTR [eax+0x0],al
  4134b3:	add    DWORD PTR [eax],eax
  4134b5:	add    edx,DWORD PTR [ecx+eiz*2+0x67]
  4134b9:	lea    eax,[eax+0x0]
  4134bc:	or     BYTE PTR ds:0x41,dh
	...
  4134da:	add    BYTE PTR [eax],al
  4134dc:	or     BYTE PTR ds:0x140041,dh
  4134e2:	add    BYTE PTR [eax],al
  4134e4:	nop
  4134e5:	adc    BYTE PTR [eax+0x0],al
  4134e8:	rol    BYTE PTR [edx+0x40],1
  4134eb:	add    ah,bl
  4134ed:	inc    edx
  4134ee:	inc    eax
  4134ef:	add    al,ah
  4134f1:	inc    edx
  4134f2:	inc    eax
  4134f3:	add    ah,ah
  4134f5:	inc    edx
  4134f6:	inc    eax
  4134f7:	add    al,bl
  4134f9:	inc    edx
  4134fa:	inc    eax
  4134fb:	add    BYTE PTR [eax],bh
  4134fd:	inc    eax
  4134fe:	inc    eax
  4134ff:	add    BYTE PTR [eax+eax*2+0x40],dl
  413503:	add    al,cl
  413505:	xor    eax,0x54090041
  41350a:	push   edx
  41350b:	gs addr16 inc edi
  41350e:	jb     0x41357f
  413510:	jne    0x413582
  413512:	mov    eax,eax
  413514:	pusha  
  413515:	xor    eax,0x41
	...
  413532:	add    BYTE PTR [eax],al
  413534:	pusha  
  413535:	xor    eax,0x240041
  41353a:	add    BYTE PTR [eax],al
  41353c:	nop
  41353d:	adc    BYTE PTR [eax+0x0],al
  413540:	rol    BYTE PTR [edx+0x40],1
  413543:	add    ah,bl
  413545:	inc    edx
  413546:	inc    eax
  413547:	add    al,ah
  413549:	inc    edx
  41354a:	inc    eax
  41354b:	add    ah,ah
  41354d:	inc    edx
  41354e:	inc    eax
  41354f:	add    al,bl
  413551:	inc    edx
  413552:	inc    eax
  413553:	add    BYTE PTR [eax],bh
  413555:	inc    eax
  413556:	inc    eax
  413557:	add    BYTE PTR [eax+eax*2+0x40],dl
  41355b:	add    BYTE PTR [eax+0xa004137],dh
  413561:	push   esp
  413562:	push   edx
  413563:	gs addr16 inc edi
  413566:	jb     0x4135d7
  413568:	jne    0x4135da
  41356a:	jae    0x4134fc
  41356c:	push   ebp
  41356d:	mov    ebp,esp
  41356f:	push   ecx
  413570:	push   ebx
  413571:	push   esi
  413572:	push   edi
  413573:	test   dl,dl
  413575:	je     0x41357f
  413577:	add    esp,0xfffffff0
  41357a:	call   0x4043ac
  41357f:	mov    edi,ecx
  413581:	mov    BYTE PTR [ebp-0x1],dl
  413584:	mov    ebx,eax
  413586:	xor    edx,edx
  413588:	mov    eax,ebx
  41358a:	call   0x404070
  41358f:	mov    dl,0x1
  413591:	mov    eax,ds:0x4127e0
  413596:	call   0x404070
  41359b:	mov    esi,eax
  41359d:	mov    DWORD PTR [ebx+0xc],esi
  4135a0:	mov    eax,esi
  4135a2:	mov    edx,edi
  4135a4:	call   0x413b38
  4135a9:	mov    eax,ebx
  4135ab:	cmp    BYTE PTR [ebp-0x1],0x0
  4135af:	je     0x4135c0
  4135b1:	call   0x404404
  4135b6:	pop    DWORD PTR fs:0x0
  4135bd:	add    esp,0xc
  4135c0:	mov    eax,ebx
  4135c2:	pop    edi
  4135c3:	pop    esi
  4135c4:	pop    ebx
  4135c5:	pop    ecx
  4135c6:	pop    ebp
  4135c7:	ret    
  4135c8:	push   ebx
  4135c9:	push   esi
  4135ca:	call   0x404454
  4135cf:	mov    ebx,edx
  4135d1:	mov    esi,eax
  4135d3:	mov    edx,ebx
  4135d5:	and    dl,0xfc
  4135d8:	mov    eax,esi
  4135da:	call   0x404090
  4135df:	mov    eax,DWORD PTR [esi+0x4]
  4135e2:	call   0x4040a0
  4135e7:	mov    eax,DWORD PTR [esi+0x8]
  4135ea:	call   0x4040a0
  4135ef:	mov    eax,DWORD PTR [esi+0xc]
  4135f2:	call   0x4040a0
  4135f7:	test   bl,bl
  4135f9:	jle    0x413602
  4135fb:	mov    eax,esi
  4135fd:	call   0x4043fc
  413602:	pop    esi
  413603:	pop    ebx
  413604:	ret    
  413605:	lea    eax,[eax+0x0]
  413608:	push   ebx
  413609:	push   esi
  41360a:	push   edi
  41360b:	push   ebp
  41360c:	push   ecx
  41360d:	mov    DWORD PTR [esp],edx
  413610:	mov    ebx,eax
  413612:	mov    eax,DWORD PTR [ebx+0x4]
  413615:	test   eax,eax
  413617:	je     0x413642
  413619:	mov    ebp,DWORD PTR [eax+0x8]
  41361c:	dec    ebp
  41361d:	test   ebp,ebp
  41361f:	jl     0x413642
  413621:	inc    ebp
  413622:	xor    esi,esi
  413624:	mov    edx,esi
  413626:	mov    eax,DWORD PTR [ebx+0x4]
  413629:	call   0x413c70
  41362e:	mov    edi,eax
  413630:	mov    edx,DWORD PTR [esp]
  413633:	mov    eax,edi
  413635:	call   0x403f94
  41363a:	test   al,al
  41363c:	jne    0x413667
  41363e:	inc    esi
  41363f:	dec    ebp
  413640:	jne    0x413624
  413642:	mov    eax,DWORD PTR [ebx+0x8]
  413645:	test   eax,eax
  413647:	je     0x413665
  413649:	mov    edx,DWORD PTR [esp]
  41364c:	mov    ecx,DWORD PTR [eax]
  41364e:	call   DWORD PTR [ecx+0x54]
  413651:	mov    esi,eax
  413653:	test   esi,esi
  413655:	jl     0x413665
  413657:	mov    edx,esi
  413659:	mov    eax,DWORD PTR [ebx+0x8]
  41365c:	mov    ecx,DWORD PTR [eax]
  41365e:	call   DWORD PTR [ecx+0x18]
  413661:	mov    edi,eax
  413663:	jmp    0x413667
  413665:	xor    edi,edi
  413667:	mov    eax,edi
  413669:	pop    edx
  41366a:	pop    ebp
  41366b:	pop    edi
  41366c:	pop    esi
  41366d:	pop    ebx
  41366e:	ret    
  41366f:	nop
  413670:	push   ebx
  413671:	push   esi
  413672:	mov    ebx,edx
  413674:	mov    esi,eax
  413676:	test   ebx,ebx
  413678:	je     0x41368a
  41367a:	mov    eax,esi
  41367c:	call   0x40642c
  413681:	cmp    ebx,eax
  413683:	je     0x41368a
  413685:	xor    eax,eax
  413687:	pop    esi
  413688:	pop    ebx
  413689:	ret    
  41368a:	mov    al,0x1
  41368c:	pop    esi
  41368d:	pop    ebx
  41368e:	ret    
  41368f:	nop
  413690:	push   ebx
  413691:	push   esi
  413692:	push   edi
  413693:	mov    edi,edx
  413695:	mov    esi,eax
  413697:	mov    eax,DWORD PTR [esi+0xc]
  41369a:	mov    ebx,DWORD PTR [eax+0x8]
  41369d:	dec    ebx
  41369e:	cmp    ebx,0x0
  4136a1:	jl     0x4136c8
  4136a3:	mov    edx,ebx
  4136a5:	mov    eax,DWORD PTR [esi+0xc]
  4136a8:	call   0x413c70
  4136ad:	mov    edx,edi
  4136af:	call   0x413670
  4136b4:	test   al,al
  4136b6:	je     0x4136c2
  4136b8:	mov    edx,ebx
  4136ba:	mov    eax,DWORD PTR [esi+0xc]
  4136bd:	call   0x413b84
  4136c2:	dec    ebx
  4136c3:	cmp    ebx,0xffffffff
  4136c6:	jne    0x4136a3
  4136c8:	mov    eax,DWORD PTR [esi+0x4]
  4136cb:	test   eax,eax
  4136cd:	je     0x4136fd
  4136cf:	mov    ebx,DWORD PTR [eax+0x8]
  4136d2:	dec    ebx
  4136d3:	cmp    ebx,0x0
  4136d6:	jl     0x4136fd
  4136d8:	mov    edx,ebx
  4136da:	mov    eax,DWORD PTR [esi+0x4]
  4136dd:	call   0x413c70
  4136e2:	mov    edx,edi
  4136e4:	call   0x413670
  4136e9:	test   al,al
  4136eb:	je     0x4136f7
  4136ed:	mov    edx,ebx
  4136ef:	mov    eax,DWORD PTR [esi+0x4]
  4136f2:	call   0x413b84
  4136f7:	dec    ebx
  4136f8:	cmp    ebx,0xffffffff
  4136fb:	jne    0x4136d8
  4136fd:	mov    ebx,DWORD PTR [esi+0x8]
  413700:	test   ebx,ebx
  413702:	je     0x413738
  413704:	mov    eax,ebx
  413706:	mov    edx,DWORD PTR [eax]
  413708:	call   DWORD PTR [edx+0x14]
  41370b:	dec    eax
  41370c:	cmp    eax,0x0
  41370f:	jl     0x413738
  413711:	mov    ebx,eax
  413713:	mov    edx,ebx
  413715:	mov    eax,DWORD PTR [esi+0x8]
  413718:	mov    ecx,DWORD PTR [eax]
  41371a:	call   DWORD PTR [ecx+0x18]
  41371d:	mov    edx,edi
  41371f:	call   0x413670
  413724:	test   al,al
  413726:	je     0x413732
  413728:	mov    edx,ebx
  41372a:	mov    eax,DWORD PTR [esi+0x8]
  41372d:	mov    ecx,DWORD PTR [eax]
  41372f:	call   DWORD PTR [ecx+0x48]
  413732:	dec    ebx
  413733:	cmp    ebx,0xffffffff
  413736:	jne    0x413713
  413738:	pop    edi
  413739:	pop    esi
  41373a:	pop    ebx
  41373b:	ret    
  41373c:	push   ebx
  41373d:	push   esi
  41373e:	push   edi
  41373f:	test   dl,dl
  413741:	je     0x41374b
  413743:	add    esp,0xfffffff0
  413746:	call   0x4043ac
  41374b:	mov    ebx,edx
  41374d:	mov    edi,eax
  41374f:	xor    edx,edx
  413751:	mov    eax,edi
  413753:	call   0x404070
  413758:	mov    dl,0x1
  41375a:	mov    eax,ds:0x4127e0
  41375f:	call   0x404070
  413764:	mov    DWORD PTR [edi+0x4],eax
  413767:	lea    eax,[edi+0x8]
  41376a:	push   eax
  41376b:	call   0x4072a0
  413770:	mov    ecx,DWORD PTR ds:0x41289c
  413776:	mov    dl,0x1
  413778:	mov    eax,ds:0x4134bc
  41377d:	call   0x41356c
  413782:	mov    esi,eax
  413784:	mov    eax,DWORD PTR [edi+0x4]
  413787:	mov    edx,esi
  413789:	call   0x413b38
  41378e:	mov    BYTE PTR [esi+0x10],0x1
  413792:	mov    eax,edi
  413794:	test   bl,bl
  413796:	je     0x4137a7
  413798:	call   0x404404
  41379d:	pop    DWORD PTR fs:0x0
  4137a4:	add    esp,0xc
  4137a7:	mov    eax,edi
  4137a9:	pop    edi
  4137aa:	pop    esi
  4137ab:	pop    ebx
  4137ac:	ret    
  4137ad:	lea    eax,[eax+0x0]
  4137b0:	push   ebx
  4137b1:	push   esi
  4137b2:	push   edi
  4137b3:	push   ebp
  4137b4:	call   0x404454
  4137b9:	mov    ebx,edx
  4137bb:	mov    ebp,eax
  4137bd:	lea    eax,[ebp+0x8]
  4137c0:	push   eax
  4137c1:	call   0x407170
  4137c6:	mov    eax,DWORD PTR [ebp+0x4]
  4137c9:	test   eax,eax
  4137cb:	je     0x4137eb
  4137cd:	mov    esi,DWORD PTR [eax+0x8]
  4137d0:	dec    esi
  4137d1:	test   esi,esi
  4137d3:	jl     0x4137eb
  4137d5:	inc    esi
  4137d6:	xor    edi,edi
  4137d8:	mov    eax,DWORD PTR [ebp+0x4]
  4137db:	mov    edx,edi
  4137dd:	call   0x413c70
  4137e2:	call   0x4040a0
  4137e7:	inc    edi
  4137e8:	dec    esi
  4137e9:	jne    0x4137d8
  4137eb:	mov    eax,DWORD PTR [ebp+0x4]
  4137ee:	call   0x4040a0
  4137f3:	mov    edx,ebx
  4137f5:	and    dl,0xfc
  4137f8:	mov    eax,ebp
  4137fa:	call   0x404090
  4137ff:	test   bl,bl
  413801:	jle    0x41380a
  413803:	mov    eax,ebp
  413805:	call   0x4043fc
  41380a:	pop    ebp
  41380b:	pop    edi
  41380c:	pop    esi
  41380d:	pop    ebx
  41380e:	ret    
  41380f:	nop
  413810:	push   ebx
  413811:	push   esi
  413812:	push   edi
  413813:	push   ebp
  413814:	push   ecx
  413815:	mov    DWORD PTR [esp],edx
  413818:	mov    ebp,eax
  41381a:	xor    edi,edi
  41381c:	mov    eax,DWORD PTR [ebp+0x4]
  41381f:	mov    ebx,DWORD PTR [eax+0x8]
  413822:	dec    ebx
  413823:	test   ebx,ebx
  413825:	jl     0x41384c
  413827:	inc    ebx
  413828:	xor    esi,esi
  41382a:	mov    eax,DWORD PTR [ebp+0x4]
  41382d:	mov    edx,esi
  41382f:	call   0x413c70
  413834:	cmp    BYTE PTR [eax+0x10],0x0
  413838:	je     0x413844
  41383a:	mov    edx,DWORD PTR [esp]
  41383d:	call   0x413608
  413842:	mov    edi,eax
  413844:	test   edi,edi
  413846:	jne    0x41384c
  413848:	inc    esi
  413849:	dec    ebx
  41384a:	jne    0x41382a
  41384c:	mov    eax,edi
  41384e:	pop    edx
  41384f:	pop    ebp
  413850:	pop    edi
  413851:	pop    esi
  413852:	pop    ebx
  413853:	ret    
  413854:	add    eax,0x8
  413857:	push   eax
  413858:	call   0x407180
  41385d:	ret    
  41385e:	mov    eax,eax
  413860:	add    eax,0x8
  413863:	push   eax
  413864:	call   0x4072a8
  413869:	ret    
  41386a:	mov    eax,eax
  41386c:	push   ebx
  41386d:	push   esi
  41386e:	push   edi
  41386f:	push   ebp
  413870:	mov    ebp,edx
  413872:	mov    edi,eax
  413874:	mov    eax,DWORD PTR [edi+0x4]
  413877:	mov    ebx,DWORD PTR [eax+0x8]
  41387a:	dec    ebx
  41387b:	cmp    ebx,0x0
  41387e:	jl     0x4138b5
  413880:	mov    eax,DWORD PTR [edi+0x4]
  413883:	mov    edx,ebx
  413885:	call   0x413c70
  41388a:	mov    esi,eax
  41388c:	mov    edx,ebp
  41388e:	mov    eax,esi
  413890:	call   0x413690
  413895:	mov    eax,DWORD PTR [esi+0xc]
  413898:	cmp    DWORD PTR [eax+0x8],0x0
  41389c:	jne    0x4138af
  41389e:	mov    eax,esi
  4138a0:	call   0x4040a0
  4138a5:	mov    eax,DWORD PTR [edi+0x4]
  4138a8:	mov    edx,ebx
  4138aa:	call   0x413b84
  4138af:	dec    ebx
  4138b0:	cmp    ebx,0xffffffff
  4138b3:	jne    0x413880
  4138b5:	pop    ebp
  4138b6:	pop    edi
  4138b7:	pop    esi
  4138b8:	pop    ebx
  4138b9:	ret    
  4138ba:	mov    eax,eax
  4138bc:	push   ebp
  4138bd:	mov    ebp,esp
  4138bf:	add    esp,0xfffffff8
  4138c2:	push   ebx
  4138c3:	push   esi
  4138c4:	push   edi
  4138c5:	mov    DWORD PTR [ebp-0x4],edx
  4138c8:	mov    edi,eax
  4138ca:	xor    eax,eax
  4138cc:	mov    DWORD PTR [ebp-0x8],eax
  4138cf:	mov    eax,ds:0x4729b8
  4138d4:	call   0x413854
  4138d9:	xor    edx,edx
  4138db:	push   ebp
  4138dc:	push   0x413933
  4138e1:	push   DWORD PTR fs:[edx]
  4138e4:	mov    DWORD PTR fs:[edx],esp
  4138e7:	mov    eax,DWORD PTR [edi+0x4]
  4138ea:	mov    ebx,DWORD PTR [eax+0x8]
  4138ed:	dec    ebx
  4138ee:	test   ebx,ebx
  4138f0:	jl     0x41391b
  4138f2:	inc    ebx
  4138f3:	xor    esi,esi
  4138f5:	mov    eax,DWORD PTR [edi+0x4]
  4138f8:	mov    edx,esi
  4138fa:	call   0x413c70
  4138ff:	mov    edx,DWORD PTR [ebp-0x4]
  413902:	call   0x413608
  413907:	mov    DWORD PTR [ebp-0x8],eax
  41390a:	cmp    DWORD PTR [ebp-0x8],0x0
  41390e:	je     0x413917
  413910:	call   0x4049a8
  413915:	jmp    0x41393a
  413917:	inc    esi
  413918:	dec    ebx
  413919:	jne    0x4138f5
  41391b:	xor    eax,eax
  41391d:	pop    edx
  41391e:	pop    ecx
  41391f:	pop    ecx
  413920:	mov    DWORD PTR fs:[eax],edx
  413923:	push   0x41393a
  413928:	mov    eax,ds:0x4729b8
  41392d:	call   0x413860
  413932:	ret    
  413933:	jmp    0x40481c
  413938:	jmp    0x413928
  41393a:	mov    eax,DWORD PTR [ebp-0x8]
  41393d:	pop    edi
  41393e:	pop    esi
  41393f:	pop    ebx
  413940:	pop    ecx
  413941:	pop    ecx
  413942:	pop    ebp
  413943:	ret    
  413944:	mov    eax,DWORD PTR [eax-0x38]
  413947:	or     eax,eax
  413949:	je     0x41394e
  41394b:	mov    eax,DWORD PTR [eax+0x2]
  41394e:	ret    
  41394f:	nop
  413950:	push   ebp
  413951:	mov    ebp,esp
  413953:	add    esp,0xfffffff4
  413956:	push   ebx
  413957:	xor    edx,edx
  413959:	mov    DWORD PTR [ebp-0xc],edx
  41395c:	mov    ebx,eax
  41395e:	xor    eax,eax
  413960:	push   ebp
  413961:	push   0x4139b0
  413966:	push   DWORD PTR fs:[eax]
  413969:	mov    DWORD PTR fs:[eax],esp
  41396c:	mov    DWORD PTR [ebp-0x8],ebx
  41396f:	mov    BYTE PTR [ebp-0x4],0xb
  413973:	lea    eax,[ebp-0x8]
  413976:	push   eax
  413977:	push   0x0
  413979:	lea    edx,[ebp-0xc]
  41397c:	mov    eax,ds:0x46ddfc
  413981:	call   0x406f48
  413986:	mov    ecx,DWORD PTR [ebp-0xc]
  413989:	mov    dl,0x1
  41398b:	mov    eax,ds:0x412670
  413990:	call   0x40c8f0
  413995:	call   0x4048fc
  41399a:	xor    eax,eax
  41399c:	pop    edx
  41399d:	pop    ecx
  41399e:	pop    ecx
  41399f:	mov    DWORD PTR fs:[eax],edx
  4139a2:	push   0x4139b7
  4139a7:	lea    eax,[ebp-0xc]
  4139aa:	call   0x404f88
  4139af:	ret    
  4139b0:	jmp    0x40481c
  4139b5:	jmp    0x4139a7
  4139b7:	pop    ebx
  4139b8:	mov    esp,ebp
  4139ba:	pop    ebp
  4139bb:	ret    
  4139bc:	push   ebp
  4139bd:	mov    ebp,esp
  4139bf:	push   ecx
  4139c0:	push   ebx
  4139c1:	mov    ebx,eax
  4139c3:	mov    eax,ds:0x4729b8
  4139c8:	call   0x413854
  4139cd:	xor    eax,eax
  4139cf:	push   ebp
  4139d0:	push   0x413a02
  4139d5:	push   DWORD PTR fs:[eax]
  4139d8:	mov    DWORD PTR fs:[eax],esp
  4139db:	mov    edx,ebx
  4139dd:	mov    eax,ds:0x4729b8
  4139e2:	call   0x413810
  4139e7:	mov    DWORD PTR [ebp-0x4],eax
  4139ea:	xor    eax,eax
  4139ec:	pop    edx
  4139ed:	pop    ecx
  4139ee:	pop    ecx
  4139ef:	mov    DWORD PTR fs:[eax],edx
  4139f2:	push   0x413a09
  4139f7:	mov    eax,ds:0x4729b8
  4139fc:	call   0x413860
  413a01:	ret    
  413a02:	jmp    0x40481c
  413a07:	jmp    0x4139f7
  413a09:	mov    eax,DWORD PTR [ebp-0x4]
  413a0c:	pop    ebx
  413a0d:	pop    ecx
  413a0e:	pop    ebp
  413a0f:	ret    
  413a10:	push   ebp
  413a11:	mov    ebp,esp
  413a13:	push   ebx
  413a14:	mov    ebx,eax
  413a16:	mov    eax,ds:0x4729b8
  413a1b:	call   0x413854
  413a20:	xor    eax,eax
  413a22:	push   ebp
  413a23:	push   0x413a52
  413a28:	push   DWORD PTR fs:[eax]
  413a2b:	mov    DWORD PTR fs:[eax],esp
  413a2e:	mov    edx,ebx
  413a30:	mov    eax,ds:0x4729b8
  413a35:	call   0x41386c
  413a3a:	xor    eax,eax
  413a3c:	pop    edx
  413a3d:	pop    ecx
  413a3e:	pop    ecx
  413a3f:	mov    DWORD PTR fs:[eax],edx
  413a42:	push   0x413a59
  413a47:	mov    eax,ds:0x4729b8
  413a4c:	call   0x413860
  413a51:	ret    
  413a52:	jmp    0x40481c
  413a57:	jmp    0x413a47
  413a59:	pop    ebx
  413a5a:	pop    ebp
  413a5b:	ret    
  413a5c:	push   ebp
  413a5d:	mov    ebp,esp
  413a5f:	push   ecx
  413a60:	push   ebx
  413a61:	push   esi
  413a62:	push   edi
  413a63:	mov    edi,eax
  413a65:	xor    eax,eax
  413a67:	mov    DWORD PTR [ebp-0x4],eax
  413a6a:	mov    eax,ds:0x4729b4
  413a6f:	call   0x414038
  413a74:	mov    esi,eax
  413a76:	xor    edx,edx
  413a78:	push   ebp
  413a79:	push   0x413ac6
  413a7e:	push   DWORD PTR fs:[edx]
  413a81:	mov    DWORD PTR fs:[edx],esp
  413a84:	mov    ebx,DWORD PTR [esi+0x8]
  413a87:	dec    ebx
  413a88:	cmp    ebx,0x0
  413a8b:	jl     0x413aae
  413a8d:	mov    edx,ebx
  413a8f:	mov    eax,esi
  413a91:	call   0x413c70
  413a96:	cmp    edi,DWORD PTR [eax+0x4]
  413a99:	jne    0x413aa8
  413a9b:	mov    eax,DWORD PTR [eax+0x8]
  413a9e:	mov    DWORD PTR [ebp-0x4],eax
  413aa1:	call   0x4049a8
  413aa6:	jmp    0x413acd
  413aa8:	dec    ebx
  413aa9:	cmp    ebx,0xffffffff
  413aac:	jne    0x413a8d
  413aae:	xor    eax,eax
  413ab0:	pop    edx
  413ab1:	pop    ecx
  413ab2:	pop    ecx
  413ab3:	mov    DWORD PTR fs:[eax],edx
  413ab6:	push   0x413acd
  413abb:	mov    eax,ds:0x4729b4
  413ac0:	call   0x41404c
  413ac5:	ret    
  413ac6:	jmp    0x40481c
  413acb:	jmp    0x413abb
  413acd:	mov    eax,DWORD PTR [ebp-0x4]
  413ad0:	pop    edi
  413ad1:	pop    esi
  413ad2:	pop    ebx
  413ad3:	pop    ecx
  413ad4:	pop    ebp
  413ad5:	ret    
  413ad6:	mov    eax,eax
  413ad8:	push   ebx
  413ad9:	push   esi
  413ada:	push   edi
  413adb:	mov    esi,eax
  413add:	xor    eax,eax
  413adf:	cmp    DWORD PTR ds:0x4729bc,0x0
  413ae6:	je     0x413b13
  413ae8:	mov    edx,DWORD PTR ds:0x4729bc
  413aee:	mov    ebx,DWORD PTR [edx+0x8]
  413af1:	dec    ebx
  413af2:	cmp    ebx,0x0
  413af5:	jl     0x413b13
  413af7:	mov    edx,ebx
  413af9:	mov    eax,ds:0x4729bc
  413afe:	call   0x413c70
  413b03:	mov    edi,eax
  413b05:	mov    eax,esi
  413b07:	call   edi
  413b09:	test   eax,eax
  413b0b:	jne    0x413b13
  413b0d:	dec    ebx
  413b0e:	cmp    ebx,0xffffffff
  413b11:	jne    0x413af7
  413b13:	pop    edi
  413b14:	pop    esi
  413b15:	pop    ebx
  413b16:	ret    
  413b17:	nop
  413b18:	push   ebx
  413b19:	push   esi
  413b1a:	call   0x404454
  413b1f:	mov    ebx,edx
  413b21:	mov    esi,eax
  413b23:	mov    eax,esi
  413b25:	mov    edx,DWORD PTR [eax]
  413b27:	call   DWORD PTR [edx+0x8]
  413b2a:	test   bl,bl
  413b2c:	jle    0x413b35
  413b2e:	mov    eax,esi
  413b30:	call   0x4043fc
  413b35:	pop    esi
  413b36:	pop    ebx
  413b37:	ret    
  413b38:	push   ebx
  413b39:	push   esi
  413b3a:	push   edi
  413b3b:	mov    edi,edx
  413b3d:	mov    ebx,eax
  413b3f:	mov    esi,DWORD PTR [ebx+0x8]
  413b42:	cmp    esi,DWORD PTR [ebx+0xc]
  413b45:	jne    0x413b4d
  413b47:	mov    eax,ebx
  413b49:	mov    edx,DWORD PTR [eax]
  413b4b:	call   DWORD PTR [edx]
  413b4d:	mov    eax,DWORD PTR [ebx+0x4]
  413b50:	mov    DWORD PTR [eax+esi*4],edi
  413b53:	inc    DWORD PTR [ebx+0x8]
  413b56:	test   edi,edi
  413b58:	je     0x413b65
  413b5a:	xor    ecx,ecx
  413b5c:	mov    edx,edi
  413b5e:	mov    eax,ebx
  413b60:	mov    ebx,DWORD PTR [eax]
  413b62:	call   DWORD PTR [ebx+0x4]
  413b65:	mov    eax,esi
  413b67:	pop    edi
  413b68:	pop    esi
  413b69:	pop    ebx
  413b6a:	ret    
  413b6b:	nop
  413b6c:	push   ebx
  413b6d:	mov    ebx,eax
  413b6f:	xor    edx,edx
  413b71:	mov    eax,ebx
  413b73:	call   0x413e68
  413b78:	xor    edx,edx
  413b7a:	mov    eax,ebx
  413b7c:	call   0x413e2c
  413b81:	pop    ebx
  413b82:	ret    
  413b83:	nop
  413b84:	push   ebx
  413b85:	push   esi
  413b86:	push   edi
  413b87:	mov    esi,edx
  413b89:	mov    ebx,eax
  413b8b:	test   esi,esi
  413b8d:	jl     0x413b94
  413b8f:	cmp    esi,DWORD PTR [ebx+0x8]
  413b92:	jl     0x413ba3
  413b94:	mov    edx,DWORD PTR ds:0x46ddb4
  413b9a:	mov    ecx,esi
  413b9c:	mov    eax,DWORD PTR [ebx]
  413b9e:	call   0x413c1c
  413ba3:	mov    eax,DWORD PTR [ebx+0x4]
  413ba6:	mov    edi,DWORD PTR [eax+esi*4]
  413ba9:	dec    DWORD PTR [ebx+0x8]
  413bac:	mov    eax,DWORD PTR [ebx+0x8]
  413baf:	cmp    esi,eax
  413bb1:	jge    0x413bcd
  413bb3:	sub    eax,esi
  413bb5:	mov    ecx,eax
  413bb7:	add    ecx,ecx
  413bb9:	add    ecx,ecx
  413bbb:	mov    eax,DWORD PTR [ebx+0x4]
  413bbe:	lea    edx,[eax+esi*4]
  413bc1:	mov    eax,DWORD PTR [ebx+0x4]
  413bc4:	lea    eax,[eax+esi*4+0x4]
  413bc8:	call   0x403090
  413bcd:	test   edi,edi
  413bcf:	je     0x413bdc
  413bd1:	mov    cl,0x2
  413bd3:	mov    edx,edi
  413bd5:	mov    eax,ebx
  413bd7:	mov    ebx,DWORD PTR [eax]
  413bd9:	call   DWORD PTR [ebx+0x4]
  413bdc:	pop    edi
  413bdd:	pop    esi
  413bde:	pop    ebx
  413bdf:	ret    
  413be0:	mov    eax,DWORD PTR [ebp+0x4]
  413be3:	ret    
  413be4:	push   ebx
  413be5:	push   esi
  413be6:	add    esp,0xfffffff8
  413be9:	mov    esi,ecx
  413beb:	mov    ebx,edx
  413bed:	call   0x413be0
  413bf2:	push   eax
  413bf3:	mov    DWORD PTR [esp+0x4],esi
  413bf7:	mov    BYTE PTR [esp+0x8],0x0
  413bfc:	lea    eax,[esp+0x4]
  413c00:	push   eax
  413c01:	push   0x0
  413c03:	mov    ecx,ebx
  413c05:	mov    dl,0x1
  413c07:	mov    eax,ds:0x4126cc
  413c0c:	call   0x40c8f0
  413c11:	jmp    0x4048fc
  413c16:	pop    ecx
  413c17:	pop    edx
  413c18:	pop    esi
  413c19:	pop    ebx
  413c1a:	ret    
  413c1b:	nop
  413c1c:	push   ebp
  413c1d:	mov    ebp,esp
  413c1f:	push   0x0
  413c21:	push   ebx
  413c22:	push   esi
  413c23:	mov    esi,ecx
  413c25:	mov    ebx,edx
  413c27:	xor    eax,eax
  413c29:	push   ebp
  413c2a:	push   0x413c64
  413c2f:	push   DWORD PTR fs:[eax]
  413c32:	mov    DWORD PTR fs:[eax],esp
  413c35:	lea    edx,[ebp-0x4]
  413c38:	mov    eax,ebx
  413c3a:	call   0x406f48
  413c3f:	mov    edx,DWORD PTR [ebp-0x4]
  413c42:	mov    ecx,esi
  413c44:	mov    eax,ds:0x4127e0
  413c49:	call   0x413be4
  413c4e:	xor    eax,eax
  413c50:	pop    edx
  413c51:	pop    ecx
  413c52:	pop    ecx
  413c53:	mov    DWORD PTR fs:[eax],edx
  413c56:	push   0x413c6b
  413c5b:	lea    eax,[ebp-0x4]
  413c5e:	call   0x404f88
  413c63:	ret    
  413c64:	jmp    0x40481c
  413c69:	jmp    0x413c5b
  413c6b:	pop    esi
  413c6c:	pop    ebx
  413c6d:	pop    ecx
  413c6e:	pop    ebp
  413c6f:	ret    
  413c70:	push   ebx
  413c71:	push   esi
  413c72:	mov    esi,edx
  413c74:	mov    ebx,eax
  413c76:	test   esi,esi
  413c78:	jl     0x413c7f
  413c7a:	cmp    esi,DWORD PTR [ebx+0x8]
  413c7d:	jl     0x413c8e
  413c7f:	mov    edx,DWORD PTR ds:0x46ddb4
  413c85:	mov    ecx,esi
  413c87:	mov    eax,DWORD PTR [ebx]
  413c89:	call   0x413c1c
  413c8e:	mov    eax,DWORD PTR [ebx+0x4]
  413c91:	mov    eax,DWORD PTR [eax+esi*4]
  413c94:	pop    esi
  413c95:	pop    ebx
  413c96:	ret    
  413c97:	nop
  413c98:	mov    edx,DWORD PTR [eax+0xc]
  413c9b:	cmp    edx,0x40
  413c9e:	jle    0x413cae
  413ca0:	mov    ecx,edx
  413ca2:	test   ecx,ecx
  413ca4:	jns    0x413ca9
  413ca6:	add    ecx,0x3
  413ca9:	sar    ecx,0x2
  413cac:	jmp    0x413cbf
  413cae:	cmp    edx,0x8
  413cb1:	jle    0x413cba
  413cb3:	mov    ecx,0x10
  413cb8:	jmp    0x413cbf
  413cba:	mov    ecx,0x4
  413cbf:	add    ecx,edx
  413cc1:	mov    edx,ecx
  413cc3:	call   0x413e2c
  413cc8:	ret    
  413cc9:	lea    eax,[eax+0x0]
  413ccc:	push   ebx
  413ccd:	xor    ecx,ecx
  413ccf:	jmp    0x413cd2
  413cd1:	inc    ecx
  413cd2:	cmp    ecx,DWORD PTR [eax+0x8]
  413cd5:	jge    0x413cdf
  413cd7:	mov    ebx,DWORD PTR [eax+0x4]
  413cda:	cmp    edx,DWORD PTR [ebx+ecx*4]
  413cdd:	jne    0x413cd1
  413cdf:	cmp    ecx,DWORD PTR [eax+0x8]
  413ce2:	jne    0x413ce7
  413ce4:	or     ecx,0xffffffff
  413ce7:	mov    eax,ecx
  413ce9:	pop    ebx
  413cea:	ret    
  413ceb:	nop
  413cec:	push   ebx
  413ced:	push   esi
  413cee:	push   edi
  413cef:	mov    edi,ecx
  413cf1:	mov    esi,edx
  413cf3:	mov    ebx,eax
  413cf5:	test   esi,esi
  413cf7:	jl     0x413cfe
  413cf9:	cmp    esi,DWORD PTR [ebx+0x8]
  413cfc:	jle    0x413d0d
  413cfe:	mov    edx,DWORD PTR ds:0x46ddb4
  413d04:	mov    ecx,esi
  413d06:	mov    eax,DWORD PTR [ebx]
  413d08:	call   0x413c1c
  413d0d:	mov    eax,DWORD PTR [ebx+0x8]
  413d10:	cmp    eax,DWORD PTR [ebx+0xc]
  413d13:	jne    0x413d1b
  413d15:	mov    eax,ebx
  413d17:	mov    edx,DWORD PTR [eax]
  413d19:	call   DWORD PTR [edx]
  413d1b:	mov    eax,DWORD PTR [ebx+0x8]
  413d1e:	cmp    esi,eax
  413d20:	jge    0x413d3c
  413d22:	sub    eax,esi
  413d24:	mov    ecx,eax
  413d26:	add    ecx,ecx
  413d28:	add    ecx,ecx
  413d2a:	mov    eax,DWORD PTR [ebx+0x4]
  413d2d:	lea    edx,[eax+esi*4+0x4]
  413d31:	mov    eax,DWORD PTR [ebx+0x4]
  413d34:	lea    eax,[eax+esi*4]
  413d37:	call   0x403090
  413d3c:	mov    eax,DWORD PTR [ebx+0x4]
  413d3f:	mov    DWORD PTR [eax+esi*4],edi
  413d42:	inc    DWORD PTR [ebx+0x8]
  413d45:	test   edi,edi
  413d47:	je     0x413d54
  413d49:	xor    ecx,ecx
  413d4b:	mov    edx,edi
  413d4d:	mov    eax,ebx
  413d4f:	mov    ebx,DWORD PTR [eax]
  413d51:	call   DWORD PTR [ebx+0x4]
  413d54:	pop    edi
  413d55:	pop    esi
  413d56:	pop    ebx
  413d57:	ret    
  413d58:	mov    edx,DWORD PTR [eax+0x8]
  413d5b:	dec    edx
  413d5c:	call   0x413c70
  413d61:	ret    
  413d62:	mov    eax,eax
  413d64:	push   ebx
  413d65:	push   esi
  413d66:	push   edi
  413d67:	push   ebp
  413d68:	mov    esi,ecx
  413d6a:	mov    edi,edx
  413d6c:	mov    ebx,eax
  413d6e:	cmp    esi,edi
  413d70:	je     0x413db7
  413d72:	test   esi,esi
  413d74:	jl     0x413d7b
  413d76:	cmp    esi,DWORD PTR [ebx+0x8]
  413d79:	jl     0x413d8a
  413d7b:	mov    edx,DWORD PTR ds:0x46ddb4
  413d81:	mov    ecx,esi
  413d83:	mov    eax,DWORD PTR [ebx]
  413d85:	call   0x413c1c
  413d8a:	mov    edx,edi
  413d8c:	mov    eax,ebx
  413d8e:	call   0x413c70
  413d93:	mov    ebp,eax
  413d95:	mov    eax,DWORD PTR [ebx+0x4]
  413d98:	xor    edx,edx
  413d9a:	mov    DWORD PTR [eax+edi*4],edx
  413d9d:	mov    edx,edi
  413d9f:	mov    eax,ebx
  413da1:	call   0x413b84
  413da6:	xor    ecx,ecx
  413da8:	mov    edx,esi
  413daa:	mov    eax,ebx
  413dac:	call   0x413cec
  413db1:	mov    eax,DWORD PTR [ebx+0x4]
  413db4:	mov    DWORD PTR [eax+esi*4],ebp
  413db7:	pop    ebp
  413db8:	pop    edi
  413db9:	pop    esi
  413dba:	pop    ebx
  413dbb:	ret    
  413dbc:	push   ebx
  413dbd:	push   esi
  413dbe:	push   edi
  413dbf:	mov    edi,ecx
  413dc1:	mov    esi,edx
  413dc3:	mov    ebx,eax
  413dc5:	test   esi,esi
  413dc7:	jl     0x413dce
  413dc9:	cmp    esi,DWORD PTR [ebx+0x8]
  413dcc:	jl     0x413ddd
  413dce:	mov    edx,DWORD PTR ds:0x46ddb4
  413dd4:	mov    ecx,esi
  413dd6:	mov    eax,DWORD PTR [ebx]
  413dd8:	call   0x413c1c
  413ddd:	mov    edx,DWORD PTR [ebx+0x4]
  413de0:	mov    eax,DWORD PTR [edx+esi*4]
  413de3:	cmp    edi,eax
  413de5:	je     0x413e08
  413de7:	mov    DWORD PTR [edx+esi*4],edi
  413dea:	test   eax,eax
  413dec:	je     0x413df9
  413dee:	mov    cl,0x2
  413df0:	mov    edx,eax
  413df2:	mov    eax,ebx
  413df4:	mov    esi,DWORD PTR [eax]
  413df6:	call   DWORD PTR [esi+0x4]
  413df9:	test   edi,edi
  413dfb:	je     0x413e08
  413dfd:	xor    ecx,ecx
  413dff:	mov    edx,edi
  413e01:	mov    eax,ebx
  413e03:	mov    ebx,DWORD PTR [eax]
  413e05:	call   DWORD PTR [ebx+0x4]
  413e08:	pop    edi
  413e09:	pop    esi
  413e0a:	pop    ebx
  413e0b:	ret    
  413e0c:	push   ebx
  413e0d:	push   esi
  413e0e:	mov    ebx,eax
  413e10:	mov    eax,ebx
  413e12:	call   0x413ccc
  413e17:	mov    esi,eax
  413e19:	test   esi,esi
  413e1b:	jl     0x413e26
  413e1d:	mov    edx,esi
  413e1f:	mov    eax,ebx
  413e21:	call   0x413b84
  413e26:	mov    eax,esi
  413e28:	pop    esi
  413e29:	pop    ebx
  413e2a:	ret    
  413e2b:	nop
  413e2c:	push   ebx
  413e2d:	push   esi
  413e2e:	mov    esi,edx
  413e30:	mov    ebx,eax
  413e32:	cmp    esi,DWORD PTR [ebx+0x8]
  413e35:	jl     0x413e3f
  413e37:	cmp    esi,0x7ffffff
  413e3d:	jle    0x413e4e
  413e3f:	mov    edx,DWORD PTR ds:0x46dcb8
  413e45:	mov    ecx,esi
  413e47:	mov    eax,DWORD PTR [ebx]
  413e49:	call   0x413c1c
  413e4e:	cmp    esi,DWORD PTR [ebx+0xc]
  413e51:	je     0x413e64
  413e53:	mov    edx,esi
  413e55:	add    edx,edx
  413e57:	add    edx,edx
  413e59:	lea    eax,[ebx+0x4]
  413e5c:	call   0x402ed4
  413e61:	mov    DWORD PTR [ebx+0xc],esi
  413e64:	pop    esi
  413e65:	pop    ebx
  413e66:	ret    
  413e67:	nop
  413e68:	push   ebx
  413e69:	push   esi
  413e6a:	push   edi
  413e6b:	push   ebp
  413e6c:	mov    esi,edx
  413e6e:	mov    ebx,eax
  413e70:	test   esi,esi
  413e72:	jl     0x413e7c
  413e74:	cmp    esi,0x7ffffff
  413e7a:	jle    0x413e8b
  413e7c:	mov    edx,DWORD PTR ds:0x46dc1c
  413e82:	mov    ecx,esi
  413e84:	mov    eax,DWORD PTR [ebx]
  413e86:	call   0x413c1c
  413e8b:	cmp    esi,DWORD PTR [ebx+0xc]
  413e8e:	jle    0x413e99
  413e90:	mov    edx,esi
  413e92:	mov    eax,ebx
  413e94:	call   0x413e2c
  413e99:	mov    eax,DWORD PTR [ebx+0x8]
  413e9c:	cmp    esi,eax
  413e9e:	jle    0x413eba
  413ea0:	mov    edx,DWORD PTR [ebx+0x4]
  413ea3:	lea    edx,[edx+eax*4]
  413ea6:	mov    ecx,esi
  413ea8:	sub    ecx,eax
  413eaa:	mov    eax,ecx
  413eac:	add    eax,eax
  413eae:	add    eax,eax
  413eb0:	xor    ecx,ecx
  413eb2:	xchg   edx,eax
  413eb3:	call   0x4037c8
  413eb8:	jmp    0x413ed1
  413eba:	mov    ebp,eax
  413ebc:	dec    ebp
  413ebd:	mov    edi,esi
  413ebf:	sub    edi,ebp
  413ec1:	jg     0x413ed1
  413ec3:	dec    edi
  413ec4:	mov    edx,ebp
  413ec6:	mov    eax,ebx
  413ec8:	call   0x413b84
  413ecd:	dec    ebp
  413ece:	inc    edi
  413ecf:	jne    0x413ec4
  413ed1:	mov    DWORD PTR [ebx+0x8],esi
  413ed4:	pop    ebp
  413ed5:	pop    edi
  413ed6:	pop    esi
  413ed7:	pop    ebx
  413ed8:	ret    
  413ed9:	lea    eax,[eax+0x0]
  413edc:	ret    
  413edd:	lea    eax,[eax+0x0]
  413ee0:	push   ebx
  413ee1:	push   esi
  413ee2:	test   dl,dl
  413ee4:	je     0x413eee
  413ee6:	add    esp,0xfffffff0
  413ee9:	call   0x4043ac
  413eee:	mov    ebx,edx
  413ef0:	mov    esi,eax
  413ef2:	xor    edx,edx
  413ef4:	mov    eax,esi
  413ef6:	call   0x404070
  413efb:	lea    eax,[esi+0x8]
  413efe:	push   eax
  413eff:	call   0x4072a0
  413f04:	mov    dl,0x1
  413f06:	mov    eax,ds:0x4127e0
  413f0b:	call   0x404070
  413f10:	mov    DWORD PTR [esi+0x4],eax
  413f13:	mov    BYTE PTR [esi+0x20],0x0
  413f17:	mov    eax,esi
  413f19:	test   bl,bl
  413f1b:	je     0x413f2c
  413f1d:	call   0x404404
  413f22:	pop    DWORD PTR fs:0x0
  413f29:	add    esp,0xc
  413f2c:	mov    eax,esi
  413f2e:	pop    esi
  413f2f:	pop    ebx
  413f30:	ret    
  413f31:	lea    eax,[eax+0x0]
  413f34:	push   ebp
  413f35:	mov    ebp,esp
  413f37:	add    esp,0xfffffff8
  413f3a:	call   0x404454
  413f3f:	mov    BYTE PTR [ebp-0x5],dl
  413f42:	mov    DWORD PTR [ebp-0x4],eax
  413f45:	mov    eax,DWORD PTR [ebp-0x4]
  413f48:	call   0x414038
  413f4d:	xor    eax,eax
  413f4f:	push   ebp
  413f50:	push   0x413f97
  413f55:	push   DWORD PTR fs:[eax]
  413f58:	mov    DWORD PTR fs:[eax],esp
  413f5b:	mov    eax,DWORD PTR [ebp-0x4]
  413f5e:	mov    eax,DWORD PTR [eax+0x4]
  413f61:	call   0x4040a0
  413f66:	movzx  edx,BYTE PTR [ebp-0x5]
  413f6a:	and    dl,0xfc
  413f6d:	mov    eax,DWORD PTR [ebp-0x4]
  413f70:	call   0x404090
  413f75:	xor    eax,eax
  413f77:	pop    edx
  413f78:	pop    ecx
  413f79:	pop    ecx
  413f7a:	mov    DWORD PTR fs:[eax],edx
  413f7d:	push   0x413f9e
  413f82:	mov    eax,DWORD PTR [ebp-0x4]
  413f85:	call   0x41404c
  413f8a:	mov    eax,DWORD PTR [ebp-0x4]
  413f8d:	add    eax,0x8
  413f90:	push   eax
  413f91:	call   0x407170
  413f96:	ret    
  413f97:	jmp    0x40481c
  413f9c:	jmp    0x413f82
  413f9e:	cmp    BYTE PTR [ebp-0x5],0x0
  413fa2:	jle    0x413fac
  413fa4:	mov    eax,DWORD PTR [ebp-0x4]
  413fa7:	call   0x4043fc
  413fac:	pop    ecx
  413fad:	pop    ecx
  413fae:	pop    ebp
  413faf:	ret    
  413fb0:	push   ebp
  413fb1:	mov    ebp,esp
  413fb3:	push   ecx
  413fb4:	push   ebx
  413fb5:	mov    ebx,edx
  413fb7:	mov    DWORD PTR [ebp-0x4],eax
  413fba:	mov    eax,DWORD PTR [ebp-0x4]
  413fbd:	call   0x414038
  413fc2:	xor    eax,eax
  413fc4:	push   ebp
  413fc5:	push   0x41402c
  413fca:	push   DWORD PTR fs:[eax]
  413fcd:	mov    DWORD PTR fs:[eax],esp
  413fd0:	mov    eax,DWORD PTR [ebp-0x4]
  413fd3:	cmp    BYTE PTR [eax+0x20],0x1
  413fd7:	je     0x413fe9
  413fd9:	mov    eax,DWORD PTR [ebp-0x4]
  413fdc:	mov    eax,DWORD PTR [eax+0x4]
  413fdf:	mov    edx,ebx
  413fe1:	call   0x413ccc
  413fe6:	inc    eax
  413fe7:	jne    0x413ff8
  413fe9:	mov    eax,DWORD PTR [ebp-0x4]
  413fec:	mov    eax,DWORD PTR [eax+0x4]
  413fef:	mov    edx,ebx
  413ff1:	call   0x413b38
  413ff6:	jmp    0x414016
  413ff8:	mov    eax,DWORD PTR [ebp-0x4]
  413ffb:	cmp    BYTE PTR [eax+0x20],0x2
  413fff:	jne    0x414016
  414001:	mov    edx,DWORD PTR ds:0x46dbf4
  414007:	mov    eax,DWORD PTR [ebp-0x4]
  41400a:	mov    eax,DWORD PTR [eax+0x4]
  41400d:	mov    eax,DWORD PTR [eax]
  41400f:	mov    ecx,ebx
  414011:	call   0x413c1c
  414016:	xor    eax,eax
  414018:	pop    edx
  414019:	pop    ecx
  41401a:	pop    ecx
  41401b:	mov    DWORD PTR fs:[eax],edx
  41401e:	push   0x414033
  414023:	mov    eax,DWORD PTR [ebp-0x4]
  414026:	call   0x41404c
  41402b:	ret    
  41402c:	jmp    0x40481c
  414031:	jmp    0x414023
  414033:	pop    ebx
  414034:	pop    ecx
  414035:	pop    ebp
  414036:	ret    
  414037:	nop
  414038:	push   ebx
  414039:	mov    ebx,eax
  41403b:	lea    eax,[ebx+0x8]
  41403e:	push   eax
  41403f:	call   0x407180
  414044:	mov    eax,DWORD PTR [ebx+0x4]
  414047:	pop    ebx
  414048:	ret    
  414049:	lea    eax,[eax+0x0]
  41404c:	add    eax,0x8
  41404f:	push   eax
  414050:	call   0x4072a8
  414055:	ret    
  414056:	mov    eax,eax
  414058:	push   ebx
  414059:	push   esi
  41405a:	call   0x404454
  41405f:	mov    ebx,edx
  414061:	mov    esi,eax
  414063:	mov    eax,esi
  414065:	call   0x416ff4
  41406a:	mov    edx,ebx
  41406c:	and    dl,0xfc
  41406f:	mov    eax,esi
  414071:	call   0x404090
  414076:	test   bl,bl
  414078:	jle    0x414081
  41407a:	mov    eax,esi
  41407c:	call   0x4043fc
  414081:	pop    esi
  414082:	pop    ebx
  414083:	ret    
  414084:	test   edx,edx
  414086:	je     0x41408e
  414088:	xchg   edx,eax
  414089:	mov    ecx,DWORD PTR [eax]
  41408b:	call   DWORD PTR [ecx]
  41408d:	ret    
  41408e:	xor    edx,edx
  414090:	call   0x414098
  414095:	ret    
  414096:	mov    eax,eax
  414098:	push   ebp
  414099:	mov    ebp,esp
  41409b:	add    esp,0xfffffeec
  4140a1:	push   ebx
  4140a2:	push   esi
  4140a3:	xor    ecx,ecx
  4140a5:	mov    DWORD PTR [ebp-0x4],ecx
  4140a8:	mov    esi,edx
  4140aa:	mov    ebx,eax
  4140ac:	xor    eax,eax
  4140ae:	push   ebp
  4140af:	push   0x41414e
  4140b4:	push   DWORD PTR fs:[eax]
  4140b7:	mov    DWORD PTR fs:[eax],esp
  4140ba:	test   esi,esi
  4140bc:	je     0x4140db
  4140be:	lea    edx,[ebp-0x104]
  4140c4:	mov    eax,DWORD PTR [esi]
  4140c6:	call   0x403f80
  4140cb:	lea    edx,[ebp-0x104]
  4140d1:	lea    eax,[ebp-0x4]
  4140d4:	call   0x4051ec
  4140d9:	jmp    0x4140e8
  4140db:	lea    eax,[ebp-0x4]
  4140de:	mov    edx,0x414164
  4140e3:	call   0x405020
  4140e8:	mov    eax,DWORD PTR [ebp-0x4]
  4140eb:	mov    DWORD PTR [ebp-0x114],eax
  4140f1:	mov    BYTE PTR [ebp-0x110],0xb
  4140f8:	lea    edx,[ebp-0x104]
  4140fe:	mov    eax,DWORD PTR [ebx]
  414100:	call   0x403f80
  414105:	lea    eax,[ebp-0x104]
  41410b:	mov    DWORD PTR [ebp-0x10c],eax
  414111:	mov    BYTE PTR [ebp-0x108],0x4
  414118:	lea    eax,[ebp-0x114]
  41411e:	push   eax
  41411f:	push   0x1
  414121:	mov    ecx,DWORD PTR ds:0x46dc38
  414127:	mov    dl,0x1
  414129:	mov    eax,ds:0x407cf8
  41412e:	call   0x40c9ac
  414133:	call   0x4048fc
  414138:	xor    eax,eax
  41413a:	pop    edx
  41413b:	pop    ecx
  41413c:	pop    ecx
  41413d:	mov    DWORD PTR fs:[eax],edx
  414140:	push   0x414155
  414145:	lea    eax,[ebp-0x4]
  414148:	call   0x404f88
  41414d:	ret    
  41414e:	jmp    0x40481c
  414153:	jmp    0x414145
  414155:	pop    esi
  414156:	pop    ebx
  414157:	mov    esp,ebp
  414159:	pop    ebp
  41415a:	ret    
  41415b:	add    bh,bh
  41415d:	(bad)  
  41415e:	(bad)  
  41415f:	inc    DWORD PTR [ebx]
  414161:	add    BYTE PTR [eax],al
  414163:	add    BYTE PTR [esi+0x69],ch
  414166:	ins    BYTE PTR es:[edi],dx
  414167:	add    BYTE PTR [edx-0xd518],dl
  41416d:	inc    ebx
  41416f:	nop
  414170:	ret    
  414171:	lea    eax,[eax+0x0]
  414174:	push   ebp
  414175:	mov    ebp,esp
  414177:	add    esp,0xfffffefc
  41417d:	push   ebx
  41417e:	push   esi
  41417f:	push   edi
  414180:	xor    ecx,ecx
  414182:	mov    DWORD PTR [ebp-0x4],ecx
  414185:	mov    edi,edx
  414187:	mov    ebx,eax
  414189:	xor    eax,eax
  41418b:	push   ebp
  41418c:	push   0x414209
  414191:	push   DWORD PTR fs:[eax]
  414194:	mov    DWORD PTR fs:[eax],esp
  414197:	lea    edx,[ebp-0x104]
  41419d:	mov    eax,DWORD PTR [ebx]
  41419f:	call   0x403f80
  4141a4:	lea    edx,[ebp-0x104]
  4141aa:	mov    eax,edi
  4141ac:	call   0x4051ec
  4141b1:	mov    eax,ebx
  4141b3:	mov    si,0xffff
  4141b7:	call   0x40429c
  4141bc:	test   eax,eax
  4141be:	je     0x4141f3
  4141c0:	mov    eax,ebx
  4141c2:	mov    si,0xffff
  4141c6:	call   0x40429c
  4141cb:	lea    edx,[ebp-0x4]
  4141ce:	mov    si,0xfffe
  4141d2:	call   0x40429c
  4141d7:	cmp    DWORD PTR [ebp-0x4],0x0
  4141db:	je     0x4141f3
  4141dd:	push   DWORD PTR [ebp-0x4]
  4141e0:	push   0x414220
  4141e5:	push   DWORD PTR [edi]
  4141e7:	mov    eax,edi
  4141e9:	mov    edx,0x3
  4141ee:	call   0x40531c
  4141f3:	xor    eax,eax
  4141f5:	pop    edx
  4141f6:	pop    ecx
  4141f7:	pop    ecx
  4141f8:	mov    DWORD PTR fs:[eax],edx
  4141fb:	push   0x414210
  414200:	lea    eax,[ebp-0x4]
  414203:	call   0x404f88
  414208:	ret    
  414209:	jmp    0x40481c
  41420e:	jmp    0x414200
  414210:	pop    edi
  414211:	pop    esi
  414212:	pop    ebx
  414213:	mov    esp,ebp
  414215:	pop    ebp
  414216:	ret    
  414217:	add    bh,bh
  414219:	(bad)  
  41421a:	(bad)  
  41421b:	inc    DWORD PTR [ecx]
  41421d:	add    BYTE PTR [eax],al
  41421f:	add    BYTE PTR [esi],ch
  414221:	add    BYTE PTR [eax],al
  414223:	add    BYTE PTR [ebx],dh
  414225:	rol    bl,0x90
  414228:	push   ebp
  414229:	mov    ebp,esp
  41422b:	push   ecx
  41422c:	push   ebx
  41422d:	push   esi
  41422e:	push   edi
  41422f:	mov    DWORD PTR [ebp-0x4],edx
  414232:	mov    edi,eax
  414234:	mov    eax,DWORD PTR [ebp-0x4]
  414237:	test   eax,eax
  414239:	je     0x41423f
  41423b:	xor    edx,edx
  41423d:	mov    DWORD PTR [eax],edx
  41423f:	mov    eax,DWORD PTR [ebp-0x4]
  414242:	call   0x406a98
  414247:	test   edi,edi
  414249:	je     0x4142b1
  41424b:	mov    eax,edi
  41424d:	mov    si,0xffff
  414251:	call   0x40429c
  414256:	mov    ebx,eax
  414258:	test   ebx,ebx
  41425a:	jne    0x414289
  41425c:	mov    eax,edi
  41425e:	mov    edx,DWORD PTR ds:0x41335c
  414264:	call   0x40422c
  414269:	test   al,al
  41426b:	je     0x4142b1
  41426d:	test   BYTE PTR [edi+0x1c],0x10
  414271:	je     0x4142b1
  414273:	mov    eax,DWORD PTR [ebp-0x4]
  414276:	call   0x406a98
  41427b:	push   eax
  41427c:	push   0x4142b8
  414281:	push   edi
  414282:	mov    eax,DWORD PTR [edi]
  414284:	call   DWORD PTR [eax+0x28]
  414287:	jmp    0x4142b1
  414289:	mov    eax,edi
  41428b:	mov    edx,DWORD PTR ds:0x41335c
  414291:	call   0x40422c
  414296:	test   al,al
  414298:	je     0x4142a0
  41429a:	test   BYTE PTR [edi+0x1c],0x10
  41429e:	je     0x4142b1
  4142a0:	mov    eax,DWORD PTR [ebp-0x4]
  4142a3:	call   0x406a98
  4142a8:	mov    edx,eax
  4142aa:	mov    eax,ebx
  4142ac:	call   0x414228
  4142b1:	pop    edi
  4142b2:	pop    esi
  4142b3:	pop    ebx
  4142b4:	pop    ecx
  4142b5:	pop    ebp
  4142b6:	ret    
  4142b7:	add    BYTE PTR [edi],al
  4142b9:	call   0xe3e7fc2f
  4142be:	rcl    DWORD PTR [ecx],1
  4142c0:	stos   BYTE PTR es:[edi],al
  4142c1:	mov    cl,0x0
  4142c3:	ror    BYTE PTR [edi-0x4f],0x6f
  4142c7:	mov    esp,0x6aec8b55
  4142cc:	add    BYTE PTR [ebx+0x56],dl
  4142cf:	push   edi
  4142d0:	mov    ebx,ecx
  4142d2:	mov    esi,edx
  4142d4:	mov    edi,eax
  4142d6:	xor    eax,eax
  4142d8:	push   ebp
  4142d9:	push   0x41431d
  4142de:	push   DWORD PTR fs:[eax]
  4142e1:	mov    DWORD PTR fs:[eax],esp
  4142e4:	lea    eax,[ebp-0x4]
  4142e7:	call   0x406a98
  4142ec:	mov    edx,eax
  4142ee:	mov    eax,edi
  4142f0:	call   0x414228
  4142f5:	cmp    DWORD PTR [ebp-0x4],0x0
  4142f9:	je     0x414307
  4142fb:	mov    ecx,ebx
  4142fd:	mov    edx,esi
  4142ff:	mov    eax,DWORD PTR [ebp-0x4]
  414302:	mov    ebx,DWORD PTR [eax]
  414304:	call   DWORD PTR [ebx+0x10]
  414307:	xor    eax,eax
  414309:	pop    edx
  41430a:	pop    ecx
  41430b:	pop    ecx
  41430c:	mov    DWORD PTR fs:[eax],edx
  41430f:	push   0x414324
  414314:	lea    eax,[ebp-0x4]
  414317:	call   0x406a98
  41431c:	ret    
  41431d:	jmp    0x40481c
  414322:	jmp    0x414314
  414324:	pop    edi
  414325:	pop    esi
  414326:	pop    ebx
  414327:	pop    ecx
  414328:	pop    ebp
  414329:	ret    
  41432a:	mov    eax,eax
  41432c:	push   ebx
  41432d:	push   esi
  41432e:	test   dl,dl
  414330:	je     0x41433a
  414332:	add    esp,0xfffffff0
  414335:	call   0x4043ac
  41433a:	mov    ebx,edx
  41433c:	mov    esi,eax
  41433e:	mov    edx,ecx
  414340:	mov    eax,esi
  414342:	mov    ecx,DWORD PTR [eax]
  414344:	call   DWORD PTR [ecx+0x10]
  414347:	mov    eax,esi
  414349:	test   bl,bl
  41434b:	je     0x41435c
  41434d:	call   0x404404
  414352:	pop    DWORD PTR fs:0x0
  414359:	add    esp,0xc
  41435c:	mov    eax,esi
  41435e:	pop    esi
  41435f:	pop    ebx
  414360:	ret    
  414361:	lea    eax,[eax+0x0]
  414364:	push   ebx
  414365:	push   esi
  414366:	call   0x404454
  41436b:	mov    ebx,edx
  41436d:	mov    esi,eax
  41436f:	xor    edx,edx
  414371:	mov    eax,esi
  414373:	mov    ecx,DWORD PTR [eax]
  414375:	call   DWORD PTR [ecx+0x10]
  414378:	mov    edx,ebx
  41437a:	and    dl,0xfc
  41437d:	mov    eax,esi
  41437f:	call   0x414058
  414384:	test   bl,bl
  414386:	jle    0x41438f
  414388:	mov    eax,esi
  41438a:	call   0x4043fc
  41438f:	pop    esi
  414390:	pop    ebx
  414391:	ret    
  414392:	mov    eax,eax
  414394:	push   esi
  414395:	mov    esi,DWORD PTR [eax+0x4]
  414398:	test   esi,esi
  41439a:	je     0x4143b3
  41439c:	cmp    DWORD PTR [esi+0xc],0x0
  4143a0:	jne    0x4143b3
  4143a2:	test   dl,dl
  4143a4:	je     0x4143aa
  4143a6:	xor    edx,edx
  4143a8:	jmp    0x4143ac
  4143aa:	mov    edx,eax
  4143ac:	mov    eax,esi
  4143ae:	mov    ecx,DWORD PTR [eax]
  4143b0:	call   DWORD PTR [ecx+0x1c]
  4143b3:	pop    esi
  4143b4:	ret    
  4143b5:	lea    eax,[eax+0x0]
  4143b8:	mov    edx,DWORD PTR [eax+0x4]
  4143bb:	test   edx,edx
  4143bd:	je     0x4143c9
  4143bf:	mov    edx,DWORD PTR [edx+0x8]
  4143c2:	xchg   edx,eax
  4143c3:	call   0x413ccc
  4143c8:	ret    
  4143c9:	or     eax,0xffffffff
  4143cc:	ret    
  4143cd:	lea    eax,[eax+0x0]
  4143d0:	push   ebx
  4143d1:	push   esi
  4143d2:	add    esp,0xffffff00
  4143d8:	mov    esi,edx
  4143da:	mov    ebx,eax
  4143dc:	mov    edx,esp
  4143de:	mov    eax,DWORD PTR [ebx]
  4143e0:	call   0x403f80
  4143e5:	mov    edx,esp
  4143e7:	mov    eax,esi
  4143e9:	call   0x4051ec
  4143ee:	add    esp,0x100
  4143f4:	pop    esi
  4143f5:	pop    ebx
  4143f6:	ret    
  4143f7:	nop
  4143f8:	push   ebp
  4143f9:	mov    ebp,esp
  4143fb:	add    esp,0xfffffeec
  414401:	push   ebx
  414402:	push   esi
  414403:	push   edi
  414404:	xor    ecx,ecx
  414406:	mov    DWORD PTR [ebp-0x14],ecx
  414409:	mov    edi,edx
  41440b:	mov    ebx,eax
  41440d:	xor    eax,eax
  41440f:	push   ebp
  414410:	push   0x41448d
  414415:	push   DWORD PTR fs:[eax]
  414418:	mov    DWORD PTR fs:[eax],esp
  41441b:	cmp    DWORD PTR [ebx+0x4],0x0
  41441f:	je     0x41445d
  414421:	push   edi
  414422:	lea    edx,[ebp-0x14]
  414425:	mov    eax,DWORD PTR [ebx+0x4]
  414428:	mov    si,0xfffe
  41442c:	call   0x40429c
  414431:	mov    eax,DWORD PTR [ebp-0x14]
  414434:	mov    DWORD PTR [ebp-0x10],eax
  414437:	mov    BYTE PTR [ebp-0xc],0xb
  41443b:	mov    eax,ebx
  41443d:	call   0x4143b8
  414442:	mov    DWORD PTR [ebp-0x8],eax
  414445:	mov    BYTE PTR [ebp-0x4],0x0
  414449:	lea    edx,[ebp-0x10]
  41444c:	mov    ecx,0x1
  414451:	mov    eax,0x4144a4
  414456:	call   0x409af4
  41445b:	jmp    0x414477
  41445d:	lea    edx,[ebp-0x114]
  414463:	mov    eax,DWORD PTR [ebx]
  414465:	call   0x403f80
  41446a:	lea    edx,[ebp-0x114]
  414470:	mov    eax,edi
  414472:	call   0x4051ec
  414477:	xor    eax,eax
  414479:	pop    edx
  41447a:	pop    ecx
  41447b:	pop    ecx
  41447c:	mov    DWORD PTR fs:[eax],edx
  41447f:	push   0x414494
  414484:	lea    eax,[ebp-0x14]
  414487:	call   0x404f88
  41448c:	ret    
  41448d:	jmp    0x40481c
  414492:	jmp    0x414484
  414494:	pop    edi
  414495:	pop    esi
  414496:	pop    ebx
  414497:	mov    esp,ebp
  414499:	pop    ebp
  41449a:	ret    
  41449b:	add    bh,bh
  41449d:	(bad)  
  41449e:	(bad)  
  41449f:	inc    DWORD PTR [esi]
  4144a1:	add    BYTE PTR [eax],al
  4144a3:	add    BYTE PTR ds:0x64255b73,ah
  4144a9:	pop    ebp
  4144aa:	add    BYTE PTR [eax],al
  4144ac:	mov    eax,DWORD PTR [eax+0x4]
  4144af:	ret    
  4144b0:	push   ebx
  4144b1:	push   esi
  4144b2:	mov    esi,edx
  4144b4:	mov    ebx,eax
  4144b6:	mov    eax,DWORD PTR [ebx+0x4]
  4144b9:	cmp    esi,eax
  4144bb:	je     0x4144d5
  4144bd:	test   eax,eax
  4144bf:	je     0x4144c8
  4144c1:	mov    edx,ebx
  4144c3:	call   0x414980
  4144c8:	test   esi,esi
  4144ca:	je     0x4144d5
  4144cc:	mov    edx,ebx
  4144ce:	mov    eax,esi
  4144d0:	call   0x414918
  4144d5:	pop    esi
  4144d6:	pop    ebx
  4144d7:	ret    
  4144d8:	xor    edx,edx
  4144da:	call   0x414394
  4144df:	ret    
  4144e0:	push   ebx
  4144e1:	push   esi
  4144e2:	mov    esi,edx
  4144e4:	mov    ebx,eax
  4144e6:	mov    eax,ebx
  4144e8:	call   0x4143b8
  4144ed:	test   eax,eax
  4144ef:	jl     0x41450c
  4144f1:	cmp    esi,eax
  4144f3:	je     0x41450c
  4144f5:	mov    edx,DWORD PTR [ebx+0x4]
  4144f8:	mov    edx,DWORD PTR [edx+0x8]
  4144fb:	mov    ecx,esi
  4144fd:	xchg   edx,eax
  4144fe:	call   0x413d64
  414503:	mov    dl,0x1
  414505:	mov    eax,ebx
  414507:	call   0x414394
  41450c:	pop    esi
  41450d:	pop    ebx
  41450e:	ret    
  41450f:	nop
  414510:	push   ebx
  414511:	push   esi
  414512:	test   dl,dl
  414514:	je     0x41451e
  414516:	add    esp,0xfffffff0
  414519:	call   0x4043ac
  41451e:	mov    ebx,edx
  414520:	mov    esi,eax
  414522:	mov    DWORD PTR [esi+0x4],ecx
  414525:	mov    dl,0x1
  414527:	mov    eax,ds:0x4127e0
  41452c:	call   0x404070
  414531:	mov    DWORD PTR [esi+0x8],eax
  414534:	xor    ecx,ecx
  414536:	mov    edx,esi
  414538:	mov    eax,esi
  41453a:	call   0x4142c8
  41453f:	mov    eax,esi
  414541:	test   bl,bl
  414543:	je     0x414554
  414545:	call   0x404404
  41454a:	pop    DWORD PTR fs:0x0
  414551:	add    esp,0xc
  414554:	mov    eax,esi
  414556:	pop    esi
  414557:	pop    ebx
  414558:	ret    
  414559:	lea    eax,[eax+0x0]
  41455c:	push   ebx
  41455d:	push   esi
  41455e:	call   0x404454
  414563:	mov    ebx,edx
  414565:	mov    esi,eax
  414567:	mov    DWORD PTR [esi+0xc],0x1
  41456e:	cmp    DWORD PTR [esi+0x8],0x0
  414572:	je     0x41457b
  414574:	mov    eax,esi
  414576:	call   0x414674
  41457b:	mov    cl,0x1
  41457d:	mov    edx,esi
  41457f:	mov    eax,esi
  414581:	call   0x4142c8
  414586:	mov    eax,DWORD PTR [esi+0x8]
  414589:	call   0x4040a0
  41458e:	mov    edx,ebx
  414590:	and    dl,0xfc
  414593:	mov    eax,esi
  414595:	call   0x414058
  41459a:	test   bl,bl
  41459c:	jle    0x4145a5
  41459e:	mov    eax,esi
  4145a0:	call   0x4043fc
  4145a5:	pop    esi
  4145a6:	pop    ebx
  4145a7:	ret    
  4145a8:	push   ebx
  4145a9:	push   ecx
  4145aa:	mov    ebx,eax
  4145ac:	mov    ecx,ebx
  4145ae:	mov    dl,0x1
  4145b0:	mov    eax,DWORD PTR [ebx+0x4]
  4145b3:	call   DWORD PTR [eax+0x1c]
  4145b6:	mov    DWORD PTR [esp],eax
  4145b9:	mov    edx,esp
  4145bb:	mov    eax,ebx
  4145bd:	mov    ecx,DWORD PTR [eax]
  4145bf:	call   DWORD PTR [ecx+0xc]
  4145c2:	mov    eax,DWORD PTR [esp]
  4145c5:	pop    edx
  4145c6:	pop    ebx
  4145c7:	ret    
  4145c8:	push   ebp
  4145c9:	mov    ebp,esp
  4145cb:	push   ecx
  4145cc:	push   ebx
  4145cd:	push   esi
  4145ce:	push   edi
  4145cf:	mov    esi,edx
  4145d1:	mov    DWORD PTR [ebp-0x4],eax
  4145d4:	mov    eax,esi
  4145d6:	mov    edx,DWORD PTR ds:0x4129f0
  4145dc:	call   0x40422c
  4145e1:	test   al,al
  4145e3:	je     0x41464d
  4145e5:	mov    eax,DWORD PTR [ebp-0x4]
  4145e8:	mov    edx,DWORD PTR [eax]
  4145ea:	call   DWORD PTR [edx+0x20]
  4145ed:	xor    eax,eax
  4145ef:	push   ebp
  4145f0:	push   0x414646
  4145f5:	push   DWORD PTR fs:[eax]
  4145f8:	mov    DWORD PTR fs:[eax],esp
  4145fb:	mov    eax,DWORD PTR [ebp-0x4]
  4145fe:	call   0x414674
  414603:	mov    eax,esi
  414605:	call   0x414718
  41460a:	mov    ebx,eax
  41460c:	dec    ebx
  41460d:	test   ebx,ebx
  41460f:	jl     0x414630
  414611:	inc    ebx
  414612:	xor    edi,edi
  414614:	mov    edx,edi
  414616:	mov    eax,esi
  414618:	call   0x414720
  41461d:	push   eax
  41461e:	mov    eax,DWORD PTR [ebp-0x4]
  414621:	call   0x4145a8
  414626:	pop    edx
  414627:	mov    ecx,DWORD PTR [eax]
  414629:	call   DWORD PTR [ecx+0x8]
  41462c:	inc    edi
  41462d:	dec    ebx
  41462e:	jne    0x414614
  414630:	xor    eax,eax
  414632:	pop    edx
  414633:	pop    ecx
  414634:	pop    ecx
  414635:	mov    DWORD PTR fs:[eax],edx
  414638:	push   0x414657
  41463d:	mov    eax,DWORD PTR [ebp-0x4]
  414640:	mov    edx,DWORD PTR [eax]
  414642:	call   DWORD PTR [edx+0x24]
  414645:	ret    
  414646:	jmp    0x40481c
  41464b:	jmp    0x41463d
  41464d:	mov    edx,esi
  41464f:	mov    eax,DWORD PTR [ebp-0x4]
  414652:	call   0x414084
  414657:	pop    edi
  414658:	pop    esi
  414659:	pop    ebx
  41465a:	pop    ecx
  41465b:	pop    ebp
  41465c:	ret    
  41465d:	lea    eax,[eax+0x0]
  414660:	inc    DWORD PTR [eax+0xc]
  414663:	ret    
  414664:	cmp    DWORD PTR [eax+0xc],0x0
  414668:	jne    0x414671
  41466a:	xor    edx,edx
  41466c:	mov    ecx,DWORD PTR [eax]
  41466e:	call   DWORD PTR [ecx+0x1c]
  414671:	ret    
  414672:	mov    eax,eax
  414674:	push   ebp
  414675:	mov    ebp,esp
  414677:	push   ecx
  414678:	push   ebx
  414679:	mov    DWORD PTR [ebp-0x4],eax
  41467c:	mov    eax,DWORD PTR [ebp-0x4]
  41467f:	mov    eax,DWORD PTR [eax+0x8]
  414682:	cmp    DWORD PTR [eax+0x8],0x0
  414686:	jle    0x4146d5
  414688:	mov    eax,DWORD PTR [ebp-0x4]
  41468b:	mov    edx,DWORD PTR [eax]
  41468d:	call   DWORD PTR [edx+0x20]
  414690:	xor    eax,eax
  414692:	push   ebp
  414693:	push   0x4146ce
  414698:	push   DWORD PTR fs:[eax]
  41469b:	mov    DWORD PTR fs:[eax],esp
  41469e:	jmp    0x4146ac
  4146a0:	mov    eax,ebx
  4146a2:	call   0x413d58
  4146a7:	call   0x4040a0
  4146ac:	mov    eax,DWORD PTR [ebp-0x4]
  4146af:	mov    ebx,DWORD PTR [eax+0x8]
  4146b2:	cmp    DWORD PTR [ebx+0x8],0x0
  4146b6:	jg     0x4146a0
  4146b8:	xor    eax,eax
  4146ba:	pop    edx
  4146bb:	pop    ecx
  4146bc:	pop    ecx
  4146bd:	mov    DWORD PTR fs:[eax],edx
  4146c0:	push   0x4146d5
  4146c5:	mov    eax,DWORD PTR [ebp-0x4]
  4146c8:	mov    edx,DWORD PTR [eax]
  4146ca:	call   DWORD PTR [edx+0x24]
  4146cd:	ret    
  4146ce:	jmp    0x40481c
  4146d3:	jmp    0x4146c5
  4146d5:	pop    ebx
  4146d6:	pop    ecx
  4146d7:	pop    ebp
  4146d8:	ret    
  4146d9:	lea    eax,[eax+0x0]
  4146dc:	dec    DWORD PTR [eax+0xc]
  4146df:	call   0x414664
  4146e4:	ret    
  4146e5:	lea    eax,[eax+0x0]
  4146e8:	xor    eax,eax
  4146ea:	ret    
  4146eb:	nop
  4146ec:	push   ebx
  4146ed:	mov    ebx,ecx
  4146ef:	mov    eax,ebx
  4146f1:	call   0x404f88
  4146f6:	pop    ebx
  4146f7:	ret    
  4146f8:	push   ebp
  4146f9:	mov    ebp,esp
  4146fb:	push   ebx
  4146fc:	push   esi
  4146fd:	mov    esi,ecx
  4146ff:	mov    ebx,eax
  414701:	mov    edx,esi
  414703:	mov    eax,ebx
  414705:	call   0x414720
  41470a:	mov    edx,DWORD PTR [ebp+0x8]
  41470d:	mov    ecx,DWORD PTR [eax]
  41470f:	call   DWORD PTR [ecx+0xc]
  414712:	pop    esi
  414713:	pop    ebx
  414714:	pop    ebp
  414715:	ret    0x4
  414718:	mov    eax,DWORD PTR [eax+0x8]
  41471b:	mov    eax,DWORD PTR [eax+0x8]
  41471e:	ret    
  41471f:	nop
  414720:	push   ebx
  414721:	push   esi
  414722:	mov    esi,edx
  414724:	mov    ebx,eax
  414726:	mov    edx,esi
  414728:	mov    eax,DWORD PTR [ebx+0x8]
  41472b:	call   0x413c70
  414730:	pop    esi
  414731:	pop    ebx
  414732:	ret    
  414733:	nop
  414734:	push   ebp
  414735:	mov    ebp,esp
  414737:	add    esp,0xfffffef8
  41473d:	push   ebx
  41473e:	push   esi
  41473f:	push   edi
  414740:	xor    ecx,ecx
  414742:	mov    DWORD PTR [ebp-0x4],ecx
  414745:	mov    DWORD PTR [ebp-0x8],ecx
  414748:	mov    edi,edx
  41474a:	mov    ebx,eax
  41474c:	xor    eax,eax
  41474e:	push   ebp
  41474f:	push   0x4147e2
  414754:	push   DWORD PTR fs:[eax]
  414757:	mov    DWORD PTR fs:[eax],esp
  41475a:	lea    edx,[ebp-0x108]
  414760:	mov    eax,DWORD PTR [ebx]
  414762:	call   0x403f80
  414767:	lea    edx,[ebp-0x108]
  41476d:	mov    eax,edi
  41476f:	call   0x4051ec
  414774:	mov    eax,ebx
  414776:	mov    si,0xffff
  41477a:	call   0x40429c
  41477f:	test   eax,eax
  414781:	je     0x4147c7
  414783:	mov    eax,ebx
  414785:	mov    si,0xffff
  414789:	call   0x40429c
  41478e:	lea    edx,[ebp-0x4]
  414791:	mov    si,0xfffe
  414795:	call   0x40429c
  41479a:	cmp    DWORD PTR [ebp-0x4],0x0
  41479e:	je     0x4147c7
  4147a0:	lea    edx,[ebp-0x8]
  4147a3:	mov    eax,ebx
  4147a5:	call   0x4147fc
  4147aa:	cmp    DWORD PTR [ebp-0x8],0x0
  4147ae:	je     0x4147c7
  4147b0:	push   DWORD PTR [ebp-0x4]
  4147b3:	push   0x4147f8
  4147b8:	push   DWORD PTR [ebp-0x8]
  4147bb:	mov    eax,edi
  4147bd:	mov    edx,0x3
  4147c2:	call   0x40531c
  4147c7:	xor    eax,eax
  4147c9:	pop    edx
  4147ca:	pop    ecx
  4147cb:	pop    ecx
  4147cc:	mov    DWORD PTR fs:[eax],edx
  4147cf:	push   0x4147e9
  4147d4:	lea    eax,[ebp-0x8]
  4147d7:	mov    edx,0x2
  4147dc:	call   0x404fac
  4147e1:	ret    
  4147e2:	jmp    0x40481c
  4147e7:	jmp    0x4147d4
  4147e9:	pop    edi
  4147ea:	pop    esi
  4147eb:	pop    ebx
  4147ec:	mov    esp,ebp
  4147ee:	pop    ebp
  4147ef:	ret    
  4147f0:	(bad)  
  4147f1:	(bad)  
  4147f2:	(bad)  
  4147f3:	inc    DWORD PTR [ecx]
  4147f5:	add    BYTE PTR [eax],al
  4147f7:	add    BYTE PTR [esi],ch
  4147f9:	add    BYTE PTR [eax],al
  4147fb:	add    BYTE PTR [ebp-0x75],dl
  4147fe:	in     al,dx
  4147ff:	add    esp,0xfffffff0
  414802:	push   ebx
  414803:	push   esi
  414804:	push   edi
  414805:	mov    DWORD PTR [ebp-0x8],edx
  414808:	mov    DWORD PTR [ebp-0x4],eax
  41480b:	mov    eax,DWORD PTR [ebp-0x8]
  41480e:	mov    edx,DWORD PTR [ebp-0x4]
  414811:	mov    edx,DWORD PTR [edx+0x14]
  414814:	call   0x404fdc
  414819:	mov    eax,DWORD PTR [ebp-0x4]
  41481c:	mov    si,0xffff
  414820:	call   0x40429c
  414825:	mov    DWORD PTR [ebp-0x10],eax
  414828:	mov    eax,DWORD PTR [ebp-0x8]
  41482b:	cmp    DWORD PTR [eax],0x0
  41482e:	jne    0x41490f
  414834:	cmp    DWORD PTR [ebp-0x10],0x0
  414838:	je     0x41490f
  41483e:	mov    eax,DWORD PTR [ebp-0x10]
  414841:	mov    eax,DWORD PTR [eax]
  414843:	call   0x4042c8
  414848:	test   eax,eax
  41484a:	je     0x41490f
  414850:	mov    eax,DWORD PTR [ebp-0x10]
  414853:	mov    eax,DWORD PTR [eax]
  414855:	call   0x4042c8
  41485a:	call   0x411b1c
  41485f:	mov    ebx,eax
  414861:	test   ebx,ebx
  414863:	je     0x41490f
  414869:	cmp    WORD PTR [ebx+0x8],0x0
  41486e:	je     0x41490f
  414874:	movsx  eax,WORD PTR [ebx+0x8]
  414878:	add    eax,eax
  41487a:	add    eax,eax
  41487c:	call   0x402ea0
  414881:	mov    DWORD PTR [ebp-0xc],eax
  414884:	xor    eax,eax
  414886:	push   ebp
  414887:	push   0x4148fa
  41488c:	push   DWORD PTR fs:[eax]
  41488f:	mov    DWORD PTR fs:[eax],esp
  414892:	mov    eax,DWORD PTR [ebp-0x10]
  414895:	mov    eax,DWORD PTR [eax]
  414897:	call   0x4042c8
  41489c:	mov    edx,DWORD PTR [ebp-0xc]
  41489f:	call   0x411c48
  4148a4:	movsx  edi,WORD PTR [ebx+0x8]
  4148a8:	dec    edi
  4148a9:	test   edi,edi
  4148ab:	jl     0x4148e4
  4148ad:	inc    edi
  4148ae:	xor    ebx,ebx
  4148b0:	mov    eax,DWORD PTR [ebp-0xc]
  4148b3:	mov    esi,DWORD PTR [eax+ebx*4]
  4148b6:	mov    eax,DWORD PTR [esi]
  4148b8:	mov    eax,DWORD PTR [eax]
  4148ba:	cmp    BYTE PTR [eax],0x7
  4148bd:	jne    0x4148e0
  4148bf:	mov    eax,DWORD PTR [ebp-0xc]
  4148c2:	mov    edx,DWORD PTR [eax+ebx*4]
  4148c5:	mov    eax,DWORD PTR [ebp-0x10]
  4148c8:	call   0x411c9c
  4148cd:	cmp    eax,DWORD PTR [ebp-0x4]
  4148d0:	jne    0x4148e0
  4148d2:	mov    eax,DWORD PTR [ebp-0x4]
  4148d5:	add    eax,0x14
  4148d8:	lea    edx,[esi+0x1a]
  4148db:	call   0x4051ec
  4148e0:	inc    ebx
  4148e1:	dec    edi
  4148e2:	jne    0x4148b0
  4148e4:	xor    eax,eax
  4148e6:	pop    edx
  4148e7:	pop    ecx
  4148e8:	pop    ecx
  4148e9:	mov    DWORD PTR fs:[eax],edx
  4148ec:	push   0x414901
  4148f1:	mov    eax,DWORD PTR [ebp-0xc]
  4148f4:	call   0x402ebc
  4148f9:	ret    
  4148fa:	jmp    0x40481c
  4148ff:	jmp    0x4148f1
  414901:	mov    eax,DWORD PTR [ebp-0x8]
  414904:	mov    edx,DWORD PTR [ebp-0x4]
  414907:	mov    edx,DWORD PTR [edx+0x14]
  41490a:	call   0x404fdc
  41490f:	pop    edi
  414910:	pop    esi
  414911:	pop    ebx
  414912:	mov    esp,ebp
  414914:	pop    ebp
  414915:	ret    
  414916:	mov    eax,eax
  414918:	push   ebx
  414919:	push   esi
  41491a:	push   edi
  41491b:	mov    esi,edx
  41491d:	mov    ebx,eax
  41491f:	mov    eax,esi
  414921:	mov    edx,DWORD PTR [ebx+0x4]
  414924:	call   0x40422c
  414929:	test   al,al
  41492b:	jne    0x41493f
  41492d:	mov    edx,DWORD PTR ds:0x46dcf0
  414933:	xor    ecx,ecx
  414935:	mov    eax,ds:0x4127e0
  41493a:	call   0x413c1c
  41493f:	mov    edx,esi
  414941:	mov    eax,DWORD PTR [ebx+0x8]
  414944:	call   0x413b38
  414949:	mov    DWORD PTR [esi+0x4],ebx
  41494c:	mov    eax,DWORD PTR [ebx+0x10]
  41494f:	mov    DWORD PTR [esi+0x8],eax
  414952:	inc    DWORD PTR [ebx+0x10]
  414955:	mov    edx,esi
  414957:	mov    eax,ebx
  414959:	mov    ecx,DWORD PTR [eax]
  41495b:	call   DWORD PTR [ecx+0x18]
  41495e:	xor    ecx,ecx
  414960:	mov    edx,esi
  414962:	mov    eax,ebx
  414964:	mov    edi,DWORD PTR [eax]
  414966:	call   DWORD PTR [edi+0x14]
  414969:	mov    eax,ebx
  41496b:	call   0x414664
  414970:	xor    ecx,ecx
  414972:	mov    edx,esi
  414974:	mov    eax,ebx
  414976:	call   0x4142c8
  41497b:	pop    edi
  41497c:	pop    esi
  41497d:	pop    ebx
  41497e:	ret    
  41497f:	nop
  414980:	push   ebx
  414981:	push   esi
  414982:	push   edi
  414983:	mov    esi,edx
  414985:	mov    ebx,eax
  414987:	mov    cl,0x1
  414989:	mov    edx,esi
  41498b:	mov    eax,ebx
  41498d:	mov    edi,DWORD PTR [eax]
  41498f:	call   DWORD PTR [edi+0x14]
  414992:	mov    eax,DWORD PTR [ebx+0x8]
  414995:	call   0x413d58
  41499a:	cmp    esi,eax
  41499c:	jne    0x4149ac
  41499e:	mov    eax,DWORD PTR [ebx+0x8]
  4149a1:	mov    edx,DWORD PTR [eax+0x8]
  4149a4:	dec    edx
  4149a5:	call   0x413b84
  4149aa:	jmp    0x4149b6
  4149ac:	mov    edx,esi
  4149ae:	mov    eax,DWORD PTR [ebx+0x8]
  4149b1:	call   0x413e0c
  4149b6:	xor    eax,eax
  4149b8:	mov    DWORD PTR [esi+0x4],eax
  4149bb:	mov    cl,0x1
  4149bd:	mov    edx,esi
  4149bf:	mov    eax,ebx
  4149c1:	call   0x4142c8
  4149c6:	mov    eax,ebx
  4149c8:	call   0x414664
  4149cd:	pop    edi
  4149ce:	pop    esi
  4149cf:	pop    ebx
  4149d0:	ret    
  4149d1:	lea    eax,[eax+0x0]
  4149d4:	ret    
  4149d5:	lea    eax,[eax+0x0]
  4149d8:	ret    
  4149d9:	lea    eax,[eax+0x0]
  4149dc:	ret    
  4149dd:	lea    eax,[eax+0x0]
  4149e0:	ret    
  4149e1:	lea    eax,[eax+0x0]
  4149e4:	push   ecx
  4149e5:	mov    DWORD PTR [esp],edx
  4149e8:	sub    cl,0x1
  4149eb:	jb     0x4149f3
  4149ed:	dec    cl
  4149ef:	je     0x4149fc
  4149f1:	jmp    0x414a04
  4149f3:	mov    edx,esp
  4149f5:	mov    ecx,DWORD PTR [eax]
  4149f7:	call   DWORD PTR [ecx+0xc]
  4149fa:	pop    edx
  4149fb:	ret    
  4149fc:	mov    edx,DWORD PTR [esp]
  4149ff:	mov    ecx,DWORD PTR [eax]
  414a01:	call   DWORD PTR [ecx+0x10]
  414a04:	pop    edx
  414a05:	ret    
  414a06:	mov    eax,eax
  414a08:	push   ebp
  414a09:	mov    ebp,esp
  414a0b:	push   ebx
  414a0c:	push   esi
  414a0d:	test   dl,dl
  414a0f:	je     0x414a19
  414a11:	add    esp,0xfffffff0
  414a14:	call   0x4043ac
  414a19:	mov    ebx,edx
  414a1b:	mov    esi,eax
  414a1d:	mov    DWORD PTR [esi+0x18],ecx
  414a20:	mov    ecx,DWORD PTR [ebp+0x8]
  414a23:	xor    edx,edx
  414a25:	mov    eax,esi
  414a27:	call   0x414510
  414a2c:	mov    eax,esi
  414a2e:	test   bl,bl
  414a30:	je     0x414a41
  414a32:	call   0x404404
  414a37:	pop    DWORD PTR fs:0x0
  414a3e:	add    esp,0xc
  414a41:	mov    eax,esi
  414a43:	pop    esi
  414a44:	pop    ebx
  414a45:	pop    ebp
  414a46:	ret    0x4
  414a49:	lea    eax,[eax+0x0]
  414a4c:	mov    eax,DWORD PTR [eax+0x18]
  414a4f:	ret    
  414a50:	push   ebx
  414a51:	push   esi
  414a52:	call   0x404454
  414a57:	mov    ebx,edx
  414a59:	mov    esi,eax
  414a5b:	xor    edx,edx
  414a5d:	mov    eax,esi
  414a5f:	call   0x415768
  414a64:	mov    edx,ebx
  414a66:	and    dl,0xfc
  414a69:	mov    eax,esi
  414a6b:	call   0x414058
  414a70:	test   bl,bl
  414a72:	jle    0x414a7b
  414a74:	mov    eax,esi
  414a76:	call   0x4043fc
  414a7b:	pop    esi
  414a7c:	pop    ebx
  414a7d:	ret    
  414a7e:	mov    eax,eax
  414a80:	push   ebx
  414a81:	push   esi
  414a82:	push   edi
  414a83:	mov    edi,edx
  414a85:	mov    ebx,eax
  414a87:	mov    eax,ebx
  414a89:	mov    edx,DWORD PTR [eax]
  414a8b:	call   DWORD PTR [edx+0x14]
  414a8e:	mov    esi,eax
  414a90:	mov    ecx,edi
  414a92:	mov    edx,esi
  414a94:	mov    eax,ebx
  414a96:	mov    ebx,DWORD PTR [eax]
  414a98:	call   DWORD PTR [ebx+0x60]
  414a9b:	mov    eax,esi
  414a9d:	pop    edi
  414a9e:	pop    esi
  414a9f:	pop    ebx
  414aa0:	ret    
  414aa1:	lea    eax,[eax+0x0]
  414aa4:	push   ebx
  414aa5:	push   esi
  414aa6:	push   edi
  414aa7:	mov    edi,ecx
  414aa9:	mov    esi,eax
  414aab:	mov    eax,esi
  414aad:	mov    ecx,DWORD PTR [eax]
  414aaf:	call   DWORD PTR [ecx+0x38]
  414ab2:	mov    ebx,eax
  414ab4:	mov    ecx,edi
  414ab6:	mov    edx,ebx
  414ab8:	mov    eax,esi
  414aba:	mov    esi,DWORD PTR [eax]
  414abc:	call   DWORD PTR [esi+0x24]
  414abf:	mov    eax,ebx
  414ac1:	pop    edi
  414ac2:	pop    esi
  414ac3:	pop    ebx
  414ac4:	ret    
  414ac5:	lea    eax,[eax+0x0]
  414ac8:	push   ebp
  414ac9:	mov    ebp,esp
  414acb:	add    esp,0xfffffff4
  414ace:	push   ebx
  414acf:	push   esi
  414ad0:	push   edi
  414ad1:	xor    ecx,ecx
  414ad3:	mov    DWORD PTR [ebp-0xc],ecx
  414ad6:	mov    DWORD PTR [ebp-0x8],edx
  414ad9:	mov    DWORD PTR [ebp-0x4],eax
  414adc:	xor    eax,eax
  414ade:	push   ebp
  414adf:	push   0x414b6f
  414ae4:	push   DWORD PTR fs:[eax]
  414ae7:	mov    DWORD PTR fs:[eax],esp
  414aea:	mov    eax,DWORD PTR [ebp-0x4]
  414aed:	call   0x414c38
  414af2:	xor    eax,eax
  414af4:	push   ebp
  414af5:	push   0x414b52
  414afa:	push   DWORD PTR fs:[eax]
  414afd:	mov    DWORD PTR fs:[eax],esp
  414b00:	mov    eax,DWORD PTR [ebp-0x8]
  414b03:	mov    edx,DWORD PTR [eax]
  414b05:	call   DWORD PTR [edx+0x14]
  414b08:	mov    esi,eax
  414b0a:	dec    esi
  414b0b:	test   esi,esi
  414b0d:	jl     0x414b3c
  414b0f:	inc    esi
  414b10:	xor    ebx,ebx
  414b12:	lea    ecx,[ebp-0xc]
  414b15:	mov    edx,ebx
  414b17:	mov    eax,DWORD PTR [ebp-0x8]
  414b1a:	mov    edi,DWORD PTR [eax]
  414b1c:	call   DWORD PTR [edi+0xc]
  414b1f:	mov    eax,DWORD PTR [ebp-0xc]
  414b22:	push   eax
  414b23:	mov    edx,ebx
  414b25:	mov    eax,DWORD PTR [ebp-0x8]
  414b28:	mov    ecx,DWORD PTR [eax]
  414b2a:	call   DWORD PTR [ecx+0x18]
  414b2d:	mov    ecx,eax
  414b2f:	mov    eax,DWORD PTR [ebp-0x4]
  414b32:	pop    edx
  414b33:	mov    edi,DWORD PTR [eax]
  414b35:	call   DWORD PTR [edi+0x3c]
  414b38:	inc    ebx
  414b39:	dec    esi
  414b3a:	jne    0x414b12
  414b3c:	xor    eax,eax
  414b3e:	pop    edx
  414b3f:	pop    ecx
  414b40:	pop    ecx
  414b41:	mov    DWORD PTR fs:[eax],edx
  414b44:	push   0x414b59
  414b49:	mov    eax,DWORD PTR [ebp-0x4]
  414b4c:	call   0x414cf4
  414b51:	ret    
  414b52:	jmp    0x40481c
  414b57:	jmp    0x414b49
  414b59:	xor    eax,eax
  414b5b:	pop    edx
  414b5c:	pop    ecx
  414b5d:	pop    ecx
  414b5e:	mov    DWORD PTR fs:[eax],edx
  414b61:	push   0x414b76
  414b66:	lea    eax,[ebp-0xc]
  414b69:	call   0x404f88
  414b6e:	ret    
  414b6f:	jmp    0x40481c
  414b74:	jmp    0x414b66
  414b76:	pop    edi
  414b77:	pop    esi
  414b78:	pop    ebx
  414b79:	mov    esp,ebp
  414b7b:	pop    ebp
  414b7c:	ret    
  414b7d:	lea    eax,[eax+0x0]
  414b80:	push   ebp
  414b81:	mov    ebp,esp
  414b83:	push   ecx
  414b84:	push   ebx
  414b85:	push   esi
  414b86:	mov    ebx,edx
  414b88:	mov    DWORD PTR [ebp-0x4],eax
  414b8b:	mov    eax,ebx
  414b8d:	mov    edx,DWORD PTR ds:0x412bb8
  414b93:	call   0x40422c
  414b98:	test   al,al
  414b9a:	je     0x414c27
  414ba0:	mov    eax,DWORD PTR [ebp-0x4]
  414ba3:	call   0x414c38
  414ba8:	xor    eax,eax
  414baa:	push   ebp
  414bab:	push   0x414c20
  414bb0:	push   DWORD PTR fs:[eax]
  414bb3:	mov    DWORD PTR fs:[eax],esp
  414bb6:	mov    eax,DWORD PTR [ebp-0x4]
  414bb9:	mov    edx,DWORD PTR [eax]
  414bbb:	call   DWORD PTR [edx+0x44]
  414bbe:	mov    esi,ebx
  414bc0:	movzx  eax,BYTE PTR [esi+0x4]
  414bc4:	mov    edx,DWORD PTR [ebp-0x4]
  414bc7:	mov    BYTE PTR [edx+0x4],al
  414bca:	movzx  eax,BYTE PTR [esi+0xd]
  414bce:	mov    edx,DWORD PTR [ebp-0x4]
  414bd1:	mov    BYTE PTR [edx+0xd],al
  414bd4:	movzx  eax,BYTE PTR [esi+0xc]
  414bd8:	mov    edx,DWORD PTR [ebp-0x4]
  414bdb:	mov    BYTE PTR [edx+0xc],al
  414bde:	movzx  eax,BYTE PTR [esi+0x5]
  414be2:	mov    edx,DWORD PTR [ebp-0x4]
  414be5:	mov    BYTE PTR [edx+0x5],al
  414be8:	mov    eax,DWORD PTR [ebp-0x4]
  414beb:	add    eax,0x8
  414bee:	mov    edx,DWORD PTR [esi+0x8]
  414bf1:	call   0x404fdc
  414bf6:	movzx  eax,BYTE PTR [esi+0xe]
  414bfa:	mov    edx,DWORD PTR [ebp-0x4]
  414bfd:	mov    BYTE PTR [edx+0xe],al
  414c00:	mov    edx,esi
  414c02:	mov    eax,DWORD PTR [ebp-0x4]
  414c05:	mov    ecx,DWORD PTR [eax]
  414c07:	call   DWORD PTR [ecx+0x40]
  414c0a:	xor    eax,eax
  414c0c:	pop    edx
  414c0d:	pop    ecx
  414c0e:	pop    ecx
  414c0f:	mov    DWORD PTR fs:[eax],edx
  414c12:	push   0x414c31
  414c17:	mov    eax,DWORD PTR [ebp-0x4]
  414c1a:	call   0x414cf4
  414c1f:	ret    
  414c20:	jmp    0x40481c
  414c25:	jmp    0x414c17
  414c27:	mov    edx,ebx
  414c29:	mov    eax,DWORD PTR [ebp-0x4]
  414c2c:	call   0x414084
  414c31:	pop    esi
  414c32:	pop    ebx
  414c33:	pop    ecx
  414c34:	pop    ebp
  414c35:	ret    
  414c36:	mov    eax,eax
  414c38:	push   ebx
  414c39:	mov    ebx,eax
  414c3b:	cmp    DWORD PTR [ebx+0x10],0x0
  414c3f:	jne    0x414c4a
  414c41:	mov    dl,0x1
  414c43:	mov    eax,ebx
  414c45:	mov    ecx,DWORD PTR [eax]
  414c47:	call   DWORD PTR [ecx+0x30]
  414c4a:	inc    DWORD PTR [ebx+0x10]
  414c4d:	pop    ebx
  414c4e:	ret    
  414c4f:	nop
  414c50:	push   ebp
  414c51:	mov    ebp,esp
  414c53:	push   ebx
  414c54:	push   esi
  414c55:	mov    eax,DWORD PTR [ebp+0x8]
  414c58:	mov    eax,DWORD PTR [eax-0x4]
  414c5b:	mov    esi,DWORD PTR [eax+0x20]
  414c5e:	test   esi,esi
  414c60:	je     0x414c8f
  414c62:	mov    bl,0x1
  414c64:	mov    eax,DWORD PTR [ebp+0x8]
  414c67:	mov    eax,esi
  414c69:	mov    edx,DWORD PTR ds:0x412bb8
  414c6f:	call   0x40422c
  414c74:	test   al,al
  414c76:	je     0x414c9f
  414c78:	mov    eax,DWORD PTR [ebp+0x8]
  414c7b:	mov    edx,esi
  414c7d:	mov    eax,DWORD PTR [ebp+0x8]
  414c80:	mov    eax,DWORD PTR [eax-0x8]
  414c83:	call   0x414d08
  414c88:	mov    ebx,eax
  414c8a:	xor    bl,0x1
  414c8d:	jmp    0x414c9f
  414c8f:	mov    eax,DWORD PTR [ebp+0x8]
  414c92:	mov    eax,DWORD PTR [eax-0x8]
  414c95:	mov    edx,DWORD PTR [eax]
  414c97:	call   DWORD PTR [edx+0x14]
  414c9a:	test   eax,eax
  414c9c:	setg   bl
  414c9f:	mov    eax,ebx
  414ca1:	pop    esi
  414ca2:	pop    ebx
  414ca3:	pop    ebp
  414ca4:	ret    
  414ca5:	lea    eax,[eax+0x0]
  414ca8:	push   ebp
  414ca9:	mov    ebp,esp
  414cab:	add    esp,0xfffffff8
  414cae:	push   ebx
  414caf:	mov    DWORD PTR [ebp-0x4],edx
  414cb2:	mov    DWORD PTR [ebp-0x8],eax
  414cb5:	mov    eax,DWORD PTR [ebp-0x8]
  414cb8:	push   eax
  414cb9:	push   0x4155d8
  414cbe:	mov    eax,DWORD PTR [ebp-0x8]
  414cc1:	push   eax
  414cc2:	push   0x415994
  414cc7:	push   ebp
  414cc8:	call   0x414c50
  414ccd:	pop    ecx
  414cce:	mov    ecx,eax
  414cd0:	mov    edx,0x414cec
  414cd5:	mov    eax,DWORD PTR [ebp-0x4]
  414cd8:	mov    ebx,DWORD PTR [eax]
  414cda:	call   DWORD PTR [ebx+0x4]
  414cdd:	pop    ebx
  414cde:	pop    ecx
  414cdf:	pop    ecx
  414ce0:	pop    ebp
  414ce1:	ret    
  414ce2:	add    BYTE PTR [eax],al
  414ce4:	(bad)  
  414ce5:	(bad)  
  414ce6:	(bad)  
  414ce7:	inc    DWORD PTR [edi]
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    BYTE PTR [ebx+0x74],dl
  414cee:	jb     0x414d59
  414cf0:	outs   dx,BYTE PTR ds:[esi]
  414cf1:	addr16 jae 0x414cf4
  414cf4:	dec    DWORD PTR [eax+0x10]
  414cf7:	cmp    DWORD PTR [eax+0x10],0x0
  414cfb:	jne    0x414d04
  414cfd:	xor    edx,edx
  414cff:	mov    ecx,DWORD PTR [eax]
  414d01:	call   DWORD PTR [ecx+0x30]
  414d04:	ret    
  414d05:	lea    eax,[eax+0x0]
  414d08:	push   ebp
  414d09:	mov    ebp,esp
  414d0b:	add    esp,0xffffffec
  414d0e:	push   ebx
  414d0f:	push   esi
  414d10:	push   edi
  414d11:	xor    ecx,ecx
  414d13:	mov    DWORD PTR [ebp-0x10],ecx
  414d16:	mov    DWORD PTR [ebp-0x14],ecx
  414d19:	mov    DWORD PTR [ebp-0x8],edx
  414d1c:	mov    DWORD PTR [ebp-0x4],eax
  414d1f:	xor    eax,eax
  414d21:	push   ebp
  414d22:	push   0x414d9d
  414d27:	push   DWORD PTR fs:[eax]
  414d2a:	mov    DWORD PTR fs:[eax],esp
  414d2d:	mov    BYTE PTR [ebp-0x9],0x0
  414d31:	mov    eax,DWORD PTR [ebp-0x4]
  414d34:	mov    edx,DWORD PTR [eax]
  414d36:	call   DWORD PTR [edx+0x14]
  414d39:	mov    ebx,eax
  414d3b:	mov    eax,DWORD PTR [ebp-0x8]
  414d3e:	mov    edx,DWORD PTR [eax]
  414d40:	call   DWORD PTR [edx+0x14]
  414d43:	cmp    ebx,eax
  414d45:	jne    0x414d82
  414d47:	mov    esi,ebx
  414d49:	dec    esi
  414d4a:	test   esi,esi
  414d4c:	jl     0x414d7e
  414d4e:	inc    esi
  414d4f:	xor    ebx,ebx
  414d51:	lea    ecx,[ebp-0x10]
  414d54:	mov    edx,ebx
  414d56:	mov    eax,DWORD PTR [ebp-0x4]
  414d59:	mov    edi,DWORD PTR [eax]
  414d5b:	call   DWORD PTR [edi+0xc]
  414d5e:	mov    eax,DWORD PTR [ebp-0x10]
  414d61:	push   eax
  414d62:	lea    ecx,[ebp-0x14]
  414d65:	mov    edx,ebx
  414d67:	mov    eax,DWORD PTR [ebp-0x8]
  414d6a:	mov    edi,DWORD PTR [eax]
  414d6c:	call   DWORD PTR [edi+0xc]
  414d6f:	mov    edx,DWORD PTR [ebp-0x14]
  414d72:	pop    eax
  414d73:	call   0x4053b0
  414d78:	jne    0x414d82
  414d7a:	inc    ebx
  414d7b:	dec    esi
  414d7c:	jne    0x414d51
  414d7e:	mov    BYTE PTR [ebp-0x9],0x1
  414d82:	xor    eax,eax
  414d84:	pop    edx
  414d85:	pop    ecx
  414d86:	pop    ecx
  414d87:	mov    DWORD PTR fs:[eax],edx
  414d8a:	push   0x414da4
  414d8f:	lea    eax,[ebp-0x14]
  414d92:	mov    edx,0x2
  414d97:	call   0x404fac
  414d9c:	ret    
  414d9d:	jmp    0x40481c
  414da2:	jmp    0x414d8f
  414da4:	movzx  eax,BYTE PTR [ebp-0x9]
  414da8:	pop    edi
  414da9:	pop    esi
  414daa:	pop    ebx
  414dab:	mov    esp,ebp
  414dad:	pop    ebp
  414dae:	ret    
  414daf:	nop
  414db0:	mov    eax,DWORD PTR [ebp+0x4]
  414db3:	ret    
  414db4:	push   ebx
  414db5:	push   esi
  414db6:	add    esp,0xfffffff8
  414db9:	mov    esi,ecx
  414dbb:	mov    ebx,edx
  414dbd:	call   0x414db0
  414dc2:	push   eax
  414dc3:	mov    DWORD PTR [esp+0x4],esi
  414dc7:	mov    BYTE PTR [esp+0x8],0x0
  414dcc:	lea    eax,[esp+0x4]
  414dd0:	push   eax
  414dd1:	push   0x0
  414dd3:	mov    ecx,ebx
  414dd5:	mov    dl,0x1
  414dd7:	mov    eax,ds:0x412724
  414ddc:	call   0x40c8f0
  414de1:	jmp    0x4048fc
  414de6:	pop    ecx
  414de7:	pop    edx
  414de8:	pop    esi
  414de9:	pop    ebx
  414dea:	ret    
  414deb:	nop
  414dec:	push   ebp
  414ded:	mov    ebp,esp
  414def:	push   0x0
  414df1:	push   ebx
  414df2:	push   esi
  414df3:	push   edi
  414df4:	mov    edi,ecx
  414df6:	mov    esi,edx
  414df8:	mov    ebx,eax
  414dfa:	xor    eax,eax
  414dfc:	push   ebp
  414dfd:	push   0x414e34
  414e02:	push   DWORD PTR fs:[eax]
  414e05:	mov    DWORD PTR fs:[eax],esp
  414e08:	lea    edx,[ebp-0x4]
  414e0b:	mov    eax,esi
  414e0d:	call   0x406f48
  414e12:	mov    edx,DWORD PTR [ebp-0x4]
  414e15:	mov    ecx,edi
  414e17:	mov    eax,ebx
  414e19:	call   0x414db4
  414e1e:	xor    eax,eax
  414e20:	pop    edx
  414e21:	pop    ecx
  414e22:	pop    ecx
  414e23:	mov    DWORD PTR fs:[eax],edx
  414e26:	push   0x414e3b
  414e2b:	lea    eax,[ebp-0x4]
  414e2e:	call   0x404f88
  414e33:	ret    
  414e34:	jmp    0x40481c
  414e39:	jmp    0x414e2b
  414e3b:	pop    edi
  414e3c:	pop    esi
  414e3d:	pop    ebx
  414e3e:	pop    ecx
  414e3f:	pop    ebp
  414e40:	ret    
  414e41:	lea    eax,[eax+0x0]
  414e44:	push   ebp
  414e45:	mov    ebp,esp
  414e47:	add    esp,0xfffffff0
  414e4a:	push   ebx
  414e4b:	push   esi
  414e4c:	push   edi
  414e4d:	xor    ebx,ebx
  414e4f:	mov    DWORD PTR [ebp-0x10],ebx
  414e52:	mov    DWORD PTR [ebp-0x4],ebx
  414e55:	mov    esi,ecx
  414e57:	mov    ebx,edx
  414e59:	mov    DWORD PTR [ebp-0x8],eax
  414e5c:	xor    eax,eax
  414e5e:	push   ebp
  414e5f:	push   0x414f1f
  414e64:	push   DWORD PTR fs:[eax]
  414e67:	mov    DWORD PTR fs:[eax],esp
  414e6a:	mov    eax,DWORD PTR [ebp-0x8]
  414e6d:	call   0x414c38
  414e72:	xor    eax,eax
  414e74:	push   ebp
  414e75:	push   0x414efa
  414e7a:	push   DWORD PTR fs:[eax]
  414e7d:	mov    DWORD PTR fs:[eax],esp
  414e80:	lea    ecx,[ebp-0x4]
  414e83:	mov    edx,ebx
  414e85:	mov    eax,DWORD PTR [ebp-0x8]
  414e88:	mov    edi,DWORD PTR [eax]
  414e8a:	call   DWORD PTR [edi+0xc]
  414e8d:	mov    edx,ebx
  414e8f:	mov    eax,DWORD PTR [ebp-0x8]
  414e92:	mov    ecx,DWORD PTR [eax]
  414e94:	call   DWORD PTR [ecx+0x18]
  414e97:	mov    DWORD PTR [ebp-0xc],eax
  414e9a:	lea    ecx,[ebp-0x10]
  414e9d:	mov    edx,esi
  414e9f:	mov    eax,DWORD PTR [ebp-0x8]
  414ea2:	mov    edi,DWORD PTR [eax]
  414ea4:	call   DWORD PTR [edi+0xc]
  414ea7:	mov    ecx,DWORD PTR [ebp-0x10]
  414eaa:	mov    edx,ebx
  414eac:	mov    eax,DWORD PTR [ebp-0x8]
  414eaf:	mov    edi,DWORD PTR [eax]
  414eb1:	call   DWORD PTR [edi+0x20]
  414eb4:	mov    edx,esi
  414eb6:	mov    eax,DWORD PTR [ebp-0x8]
  414eb9:	mov    ecx,DWORD PTR [eax]
  414ebb:	call   DWORD PTR [ecx+0x18]
  414ebe:	mov    ecx,eax
  414ec0:	mov    edx,ebx
  414ec2:	mov    eax,DWORD PTR [ebp-0x8]
  414ec5:	mov    ebx,DWORD PTR [eax]
  414ec7:	call   DWORD PTR [ebx+0x24]
  414eca:	mov    ecx,DWORD PTR [ebp-0x4]
  414ecd:	mov    edx,esi
  414ecf:	mov    eax,DWORD PTR [ebp-0x8]
  414ed2:	mov    ebx,DWORD PTR [eax]
  414ed4:	call   DWORD PTR [ebx+0x20]
  414ed7:	mov    ecx,DWORD PTR [ebp-0xc]
  414eda:	mov    edx,esi
  414edc:	mov    eax,DWORD PTR [ebp-0x8]
  414edf:	mov    ebx,DWORD PTR [eax]
  414ee1:	call   DWORD PTR [ebx+0x24]
  414ee4:	xor    eax,eax
  414ee6:	pop    edx
  414ee7:	pop    ecx
  414ee8:	pop    ecx
  414ee9:	mov    DWORD PTR fs:[eax],edx
  414eec:	push   0x414f01
  414ef1:	mov    eax,DWORD PTR [ebp-0x8]
  414ef4:	call   0x414cf4
  414ef9:	ret    
  414efa:	jmp    0x40481c
  414eff:	jmp    0x414ef1
  414f01:	xor    eax,eax
  414f03:	pop    edx
  414f04:	pop    ecx
  414f05:	pop    ecx
  414f06:	mov    DWORD PTR fs:[eax],edx
  414f09:	push   0x414f26
  414f0e:	lea    eax,[ebp-0x10]
  414f11:	call   0x404f88
  414f16:	lea    eax,[ebp-0x4]
  414f19:	call   0x404f88
  414f1e:	ret    
  414f1f:	jmp    0x40481c
  414f24:	jmp    0x414f0e
  414f26:	pop    edi
  414f27:	pop    esi
  414f28:	pop    ebx
  414f29:	mov    esp,ebp
  414f2b:	pop    ebp
  414f2c:	ret    
  414f2d:	lea    eax,[eax+0x0]
  414f30:	push   ebp
  414f31:	mov    ebp,esp
  414f33:	push   0x0
  414f35:	push   ebx
  414f36:	push   esi
  414f37:	push   edi
  414f38:	mov    ebx,ecx
  414f3a:	mov    edi,edx
  414f3c:	mov    esi,eax
  414f3e:	xor    eax,eax
  414f40:	push   ebp
  414f41:	push   0x414f9f
  414f46:	push   DWORD PTR fs:[eax]
  414f49:	mov    DWORD PTR fs:[eax],esp
  414f4c:	mov    eax,ebx
  414f4e:	mov    edx,edi
  414f50:	call   0x404fdc
  414f55:	mov    eax,esi
  414f57:	call   0x415cf4
  414f5c:	mov    edx,eax
  414f5e:	lea    eax,[ebp-0x4]
  414f61:	call   0x405170
  414f66:	mov    eax,DWORD PTR [ebp-0x4]
  414f69:	mov    edx,DWORD PTR [ebx]
  414f6b:	call   0x40d4e0
  414f70:	test   eax,eax
  414f72:	je     0x414f80
  414f74:	mov    edx,eax
  414f76:	dec    edx
  414f77:	mov    eax,ebx
  414f79:	call   0x4056a8
  414f7e:	jmp    0x414f89
  414f80:	mov    eax,ebx
  414f82:	xor    edx,edx
  414f84:	call   0x4056a8
  414f89:	xor    eax,eax
  414f8b:	pop    edx
  414f8c:	pop    ecx
  414f8d:	pop    ecx
  414f8e:	mov    DWORD PTR fs:[eax],edx
  414f91:	push   0x414fa6
  414f96:	lea    eax,[ebp-0x4]
  414f99:	call   0x404f88
  414f9e:	ret    
  414f9f:	jmp    0x40481c
  414fa4:	jmp    0x414f96
  414fa6:	pop    edi
  414fa7:	pop    esi
  414fa8:	pop    ebx
  414fa9:	pop    ecx
  414faa:	pop    ebp
  414fab:	ret    
  414fac:	mov    edx,DWORD PTR [eax]
  414fae:	call   DWORD PTR [edx+0x14]
  414fb1:	ret    
  414fb2:	mov    eax,eax
  414fb4:	push   ebp
  414fb5:	mov    ebp,esp
  414fb7:	add    esp,0xfffffff8
  414fba:	push   ebx
  414fbb:	push   esi
  414fbc:	xor    ebx,ebx
  414fbe:	mov    DWORD PTR [ebp-0x8],ebx
  414fc1:	mov    DWORD PTR [ebp-0x4],ecx
  414fc4:	mov    esi,edx
  414fc6:	mov    ebx,eax
  414fc8:	xor    eax,eax
  414fca:	push   ebp
  414fcb:	push   0x415005
  414fd0:	push   DWORD PTR fs:[eax]
  414fd3:	mov    DWORD PTR fs:[eax],esp
  414fd6:	lea    ecx,[ebp-0x8]
  414fd9:	mov    edx,esi
  414fdb:	mov    eax,ebx
  414fdd:	mov    esi,DWORD PTR [eax]
  414fdf:	call   DWORD PTR [esi+0xc]
  414fe2:	mov    edx,DWORD PTR [ebp-0x8]
  414fe5:	mov    ecx,DWORD PTR [ebp-0x4]
  414fe8:	mov    eax,ebx
  414fea:	call   0x414f30
  414fef:	xor    eax,eax
  414ff1:	pop    edx
  414ff2:	pop    ecx
  414ff3:	pop    ecx
  414ff4:	mov    DWORD PTR fs:[eax],edx
  414ff7:	push   0x41500c
  414ffc:	lea    eax,[ebp-0x8]
  414fff:	call   0x404f88
  415004:	ret    
  415005:	jmp    0x40481c
  41500a:	jmp    0x414ffc
  41500c:	pop    esi
  41500d:	pop    ebx
  41500e:	pop    ecx
  41500f:	pop    ecx
  415010:	pop    ebp
  415011:	ret    
  415012:	mov    eax,eax
  415014:	xor    eax,eax
  415016:	ret    
  415017:	nop
  415018:	push   ebp
  415019:	mov    ebp,esp
  41501b:	push   0x0
  41501d:	push   ebx
  41501e:	mov    ebx,eax
  415020:	xor    eax,eax
  415022:	push   ebp
  415023:	push   0x41505d
  415028:	push   DWORD PTR fs:[eax]
  41502b:	mov    DWORD PTR fs:[eax],esp
  41502e:	lea    edx,[ebp-0x4]
  415031:	mov    eax,ebx
  415033:	mov    ecx,DWORD PTR [eax]
  415035:	call   DWORD PTR [ecx+0x1c]
  415038:	mov    eax,DWORD PTR [ebp-0x4]
  41503b:	call   0x405418
  415040:	call   0x4092ec
  415045:	mov    ebx,eax
  415047:	xor    eax,eax
  415049:	pop    edx
  41504a:	pop    ecx
  41504b:	pop    ecx
  41504c:	mov    DWORD PTR fs:[eax],edx
  41504f:	push   0x415064
  415054:	lea    eax,[ebp-0x4]
  415057:	call   0x404f88
  41505c:	ret    
  41505d:	jmp    0x40481c
  415062:	jmp    0x415054
  415064:	mov    eax,ebx
  415066:	pop    ebx
  415067:	pop    ecx
  415068:	pop    ebp
  415069:	ret    
  41506a:	mov    eax,eax
  41506c:	push   ebp
  41506d:	mov    ebp,esp
  41506f:	add    esp,0xffffffd8
  415072:	push   ebx
  415073:	push   esi
  415074:	xor    ecx,ecx
  415076:	mov    DWORD PTR [ebp-0x24],ecx
  415079:	mov    DWORD PTR [ebp-0x4],ecx
  41507c:	mov    DWORD PTR [ebp-0x8],ecx
  41507f:	mov    DWORD PTR [ebp-0x10],edx
  415082:	mov    DWORD PTR [ebp-0xc],eax
  415085:	xor    eax,eax
  415087:	push   ebp
  415088:	push   0x415195
  41508d:	push   DWORD PTR fs:[eax]
  415090:	mov    DWORD PTR fs:[eax],esp
  415093:	mov    eax,DWORD PTR [ebp-0xc]
  415096:	mov    edx,DWORD PTR [eax]
  415098:	call   DWORD PTR [edx+0x14]
  41509b:	mov    DWORD PTR [ebp-0x1c],eax
  41509e:	xor    eax,eax
  4150a0:	mov    DWORD PTR [ebp-0x18],eax
  4150a3:	lea    edx,[ebp-0x8]
  4150a6:	mov    eax,DWORD PTR [ebp-0xc]
  4150a9:	call   0x415bcc
  4150ae:	mov    esi,DWORD PTR [ebp-0x1c]
  4150b1:	dec    esi
  4150b2:	test   esi,esi
  4150b4:	jl     0x4150f5
  4150b6:	inc    esi
  4150b7:	mov    DWORD PTR [ebp-0x14],0x0
  4150be:	lea    ecx,[ebp-0x24]
  4150c1:	mov    edx,DWORD PTR [ebp-0x14]
  4150c4:	mov    eax,DWORD PTR [ebp-0xc]
  4150c7:	mov    ebx,DWORD PTR [eax]
  4150c9:	call   DWORD PTR [ebx+0xc]
  4150cc:	mov    eax,DWORD PTR [ebp-0x24]
  4150cf:	mov    DWORD PTR [ebp-0x28],eax
  4150d2:	mov    eax,DWORD PTR [ebp-0x28]
  4150d5:	test   eax,eax
  4150d7:	je     0x4150de
  4150d9:	sub    eax,0x4
  4150dc:	mov    eax,DWORD PTR [eax]
  4150de:	mov    edx,DWORD PTR [ebp-0x8]
  4150e1:	test   edx,edx
  4150e3:	je     0x4150ea
  4150e5:	sub    edx,0x4
  4150e8:	mov    edx,DWORD PTR [edx]
  4150ea:	add    edx,eax
  4150ec:	add    DWORD PTR [ebp-0x18],edx
  4150ef:	inc    DWORD PTR [ebp-0x14]
  4150f2:	dec    esi
  4150f3:	jne    0x4150be
  4150f5:	mov    eax,DWORD PTR [ebp-0x10]
  4150f8:	mov    ecx,DWORD PTR [ebp-0x18]
  4150fb:	xor    edx,edx
  4150fd:	call   0x405078
  415102:	mov    eax,DWORD PTR [ebp-0x10]
  415105:	mov    eax,DWORD PTR [eax]
  415107:	mov    DWORD PTR [ebp-0x20],eax
  41510a:	mov    esi,DWORD PTR [ebp-0x1c]
  41510d:	dec    esi
  41510e:	test   esi,esi
  415110:	jl     0x415172
  415112:	inc    esi
  415113:	mov    DWORD PTR [ebp-0x14],0x0
  41511a:	lea    ecx,[ebp-0x4]
  41511d:	mov    edx,DWORD PTR [ebp-0x14]
  415120:	mov    eax,DWORD PTR [ebp-0xc]
  415123:	mov    ebx,DWORD PTR [eax]
  415125:	call   DWORD PTR [ebx+0xc]
  415128:	mov    eax,DWORD PTR [ebp-0x4]
  41512b:	test   eax,eax
  41512d:	je     0x415134
  41512f:	sub    eax,0x4
  415132:	mov    eax,DWORD PTR [eax]
  415134:	mov    ebx,eax
  415136:	test   ebx,ebx
  415138:	je     0x41514a
  41513a:	mov    edx,DWORD PTR [ebp-0x20]
  41513d:	mov    eax,DWORD PTR [ebp-0x4]
  415140:	mov    ecx,ebx
  415142:	call   0x403090
  415147:	add    DWORD PTR [ebp-0x20],ebx
  41514a:	mov    eax,DWORD PTR [ebp-0x8]
  41514d:	test   eax,eax
  41514f:	je     0x415156
  415151:	sub    eax,0x4
  415154:	mov    eax,DWORD PTR [eax]
  415156:	mov    ebx,eax
  415158:	test   ebx,ebx
  41515a:	je     0x41516c
  41515c:	mov    edx,DWORD PTR [ebp-0x20]
  41515f:	mov    eax,DWORD PTR [ebp-0x8]
  415162:	mov    ecx,ebx
  415164:	call   0x403090
  415169:	add    DWORD PTR [ebp-0x20],ebx
  41516c:	inc    DWORD PTR [ebp-0x14]
  41516f:	dec    esi
  415170:	jne    0x41511a
  415172:	xor    eax,eax
  415174:	pop    edx
  415175:	pop    ecx
  415176:	pop    ecx
  415177:	mov    DWORD PTR fs:[eax],edx
  41517a:	push   0x41519c
  41517f:	lea    eax,[ebp-0x24]
  415182:	call   0x404f88
  415187:	lea    eax,[ebp-0x8]
  41518a:	mov    edx,0x2
  41518f:	call   0x404fac
  415194:	ret    
  415195:	jmp    0x40481c
  41519a:	jmp    0x41517f
  41519c:	pop    esi
  41519d:	pop    ebx
  41519e:	mov    esp,ebp
  4151a0:	pop    ebp
  4151a1:	ret    
  4151a2:	mov    eax,eax
  4151a4:	push   ebp
  4151a5:	mov    ebp,esp
  4151a7:	add    esp,0xfffffff4
  4151aa:	push   ebx
  4151ab:	push   esi
  4151ac:	xor    ebx,ebx
  4151ae:	mov    DWORD PTR [ebp-0x4],ebx
  4151b1:	mov    DWORD PTR [ebp-0xc],ecx
  4151b4:	mov    DWORD PTR [ebp-0x8],edx
  4151b7:	mov    esi,eax
  4151b9:	xor    eax,eax
  4151bb:	push   ebp
  4151bc:	push   0x415223
  4151c1:	push   DWORD PTR fs:[eax]
  4151c4:	mov    DWORD PTR fs:[eax],esp
  4151c7:	mov    edx,DWORD PTR [ebp-0x8]
  4151ca:	mov    eax,esi
  4151cc:	mov    ecx,DWORD PTR [eax]
  4151ce:	call   DWORD PTR [ecx+0x58]
  4151d1:	mov    ebx,eax
  4151d3:	test   ebx,ebx
  4151d5:	jl     0x415205
  4151d7:	lea    ecx,[ebp-0x4]
  4151da:	mov    edx,ebx
  4151dc:	mov    eax,esi
  4151de:	mov    ebx,DWORD PTR [eax]
  4151e0:	call   DWORD PTR [ebx+0xc]
  4151e3:	mov    ebx,DWORD PTR [ebp-0x8]
  4151e6:	test   ebx,ebx
  4151e8:	je     0x4151ef
  4151ea:	sub    ebx,0x4
  4151ed:	mov    ebx,DWORD PTR [ebx]
  4151ef:	mov    eax,DWORD PTR [ebp-0xc]
  4151f2:	push   eax
  4151f3:	lea    edx,[ebx+0x2]
  4151f6:	mov    ecx,0x7fffffff
  4151fb:	mov    eax,DWORD PTR [ebp-0x4]
  4151fe:	call   0x405480
  415203:	jmp    0x41520d
  415205:	mov    eax,DWORD PTR [ebp-0xc]
  415208:	call   0x404f88
  41520d:	xor    eax,eax
  41520f:	pop    edx
  415210:	pop    ecx
  415211:	pop    ecx
  415212:	mov    DWORD PTR fs:[eax],edx
  415215:	push   0x41522a
  41521a:	lea    eax,[ebp-0x4]
  41521d:	call   0x404f88
  415222:	ret    
  415223:	jmp    0x40481c
  415228:	jmp    0x41521a
  41522a:	pop    esi
  41522b:	pop    ebx
  41522c:	mov    esp,ebp
  41522e:	pop    ebp
  41522f:	ret    
  415230:	push   ebp
  415231:	mov    ebp,esp
  415233:	add    esp,0xfffffff4
  415236:	push   ebx
  415237:	push   esi
  415238:	push   edi
  415239:	xor    ecx,ecx
  41523b:	mov    DWORD PTR [ebp-0xc],ecx
  41523e:	mov    DWORD PTR [ebp-0x4],edx
  415241:	mov    ebx,eax
  415243:	xor    eax,eax
  415245:	push   ebp
  415246:	push   0x4152a8
  41524b:	push   DWORD PTR fs:[eax]
  41524e:	mov    DWORD PTR fs:[eax],esp
  415251:	mov    eax,ebx
  415253:	mov    edx,DWORD PTR [eax]
  415255:	call   DWORD PTR [edx+0x14]
  415258:	mov    esi,eax
  41525a:	dec    esi
  41525b:	test   esi,esi
  41525d:	jl     0x41528b
  41525f:	inc    esi
  415260:	mov    DWORD PTR [ebp-0x8],0x0
  415267:	lea    ecx,[ebp-0xc]
  41526a:	mov    edx,DWORD PTR [ebp-0x8]
  41526d:	mov    eax,ebx
  41526f:	mov    edi,DWORD PTR [eax]
  415271:	call   DWORD PTR [edi+0xc]
  415274:	mov    edx,DWORD PTR [ebp-0xc]
  415277:	mov    ecx,DWORD PTR [ebp-0x4]
  41527a:	mov    eax,ebx
  41527c:	mov    edi,DWORD PTR [eax]
  41527e:	call   DWORD PTR [edi+0x34]
  415281:	test   eax,eax
  415283:	je     0x415292
  415285:	inc    DWORD PTR [ebp-0x8]
  415288:	dec    esi
  415289:	jne    0x415267
  41528b:	mov    DWORD PTR [ebp-0x8],0xffffffff
  415292:	xor    eax,eax
  415294:	pop    edx
  415295:	pop    ecx
  415296:	pop    ecx
  415297:	mov    DWORD PTR fs:[eax],edx
  41529a:	push   0x4152af
  41529f:	lea    eax,[ebp-0xc]
  4152a2:	call   0x404f88
  4152a7:	ret    
  4152a8:	jmp    0x40481c
  4152ad:	jmp    0x41529f
  4152af:	mov    eax,DWORD PTR [ebp-0x8]
  4152b2:	pop    edi
  4152b3:	pop    esi
  4152b4:	pop    ebx
  4152b5:	mov    esp,ebp
  4152b7:	pop    ebp
  4152b8:	ret    
  4152b9:	lea    eax,[eax+0x0]
  4152bc:	push   ebp
  4152bd:	mov    ebp,esp
  4152bf:	add    esp,0xffffffe8
  4152c2:	push   ebx
  4152c3:	push   esi
  4152c4:	xor    ecx,ecx
  4152c6:	mov    DWORD PTR [ebp-0x18],ecx
  4152c9:	mov    DWORD PTR [ebp-0x14],ecx
  4152cc:	mov    DWORD PTR [ebp-0x4],ecx
  4152cf:	mov    DWORD PTR [ebp-0x8],edx
  4152d2:	mov    ebx,eax
  4152d4:	xor    eax,eax
  4152d6:	push   ebp
  4152d7:	push   0x41537f
  4152dc:	push   DWORD PTR fs:[eax]
  4152df:	mov    DWORD PTR fs:[eax],esp
  4152e2:	mov    eax,ebx
  4152e4:	mov    edx,DWORD PTR [eax]
  4152e6:	call   DWORD PTR [edx+0x14]
  4152e9:	dec    eax
  4152ea:	test   eax,eax
  4152ec:	jl     0x415355
  4152ee:	inc    eax
  4152ef:	mov    DWORD PTR [ebp-0x10],eax
  4152f2:	mov    DWORD PTR [ebp-0xc],0x0
  4152f9:	lea    ecx,[ebp-0x4]
  4152fc:	mov    edx,DWORD PTR [ebp-0xc]
  4152ff:	mov    eax,ebx
  415301:	mov    esi,DWORD PTR [eax]
  415303:	call   DWORD PTR [esi+0xc]
  415306:	mov    eax,ebx
  415308:	call   0x415cf4
  41530d:	mov    edx,eax
  41530f:	lea    eax,[ebp-0x14]
  415312:	call   0x405170
  415317:	mov    eax,DWORD PTR [ebp-0x14]
  41531a:	mov    edx,DWORD PTR [ebp-0x4]
  41531d:	call   0x40d4e0
  415322:	mov    esi,eax
  415324:	test   esi,esi
  415326:	je     0x41534d
  415328:	lea    eax,[ebp-0x18]
  41532b:	push   eax
  41532c:	mov    ecx,esi
  41532e:	dec    ecx
  41532f:	mov    edx,0x1
  415334:	mov    eax,DWORD PTR [ebp-0x4]
  415337:	call   0x405480
  41533c:	mov    edx,DWORD PTR [ebp-0x18]
  41533f:	mov    ecx,DWORD PTR [ebp-0x8]
  415342:	mov    eax,ebx
  415344:	mov    esi,DWORD PTR [eax]
  415346:	call   DWORD PTR [esi+0x34]
  415349:	test   eax,eax
  41534b:	je     0x41535c
  41534d:	inc    DWORD PTR [ebp-0xc]
  415350:	dec    DWORD PTR [ebp-0x10]
  415353:	jne    0x4152f9
  415355:	mov    DWORD PTR [ebp-0xc],0xffffffff
  41535c:	xor    eax,eax
  41535e:	pop    edx
  41535f:	pop    ecx
  415360:	pop    ecx
  415361:	mov    DWORD PTR fs:[eax],edx
  415364:	push   0x415386
  415369:	lea    eax,[ebp-0x18]
  41536c:	mov    edx,0x2
  415371:	call   0x404fac
  415376:	lea    eax,[ebp-0x4]
  415379:	call   0x404f88
  41537e:	ret    
  41537f:	jmp    0x40481c
  415384:	jmp    0x415369
  415386:	mov    eax,DWORD PTR [ebp-0xc]
  415389:	pop    esi
  41538a:	pop    ebx
  41538b:	mov    esp,ebp
  41538d:	pop    ebp
  41538e:	ret    
  41538f:	nop
  415390:	push   ebx
  415391:	push   esi
  415392:	push   edi
  415393:	push   ebp
  415394:	mov    ebp,edx
  415396:	mov    edi,eax
  415398:	mov    eax,edi
  41539a:	mov    edx,DWORD PTR [eax]
  41539c:	call   DWORD PTR [edx+0x14]
  41539f:	mov    ebx,eax
  4153a1:	dec    ebx
  4153a2:	test   ebx,ebx
  4153a4:	jl     0x4153ba
  4153a6:	inc    ebx
  4153a7:	xor    esi,esi
  4153a9:	mov    edx,esi
  4153ab:	mov    eax,edi
  4153ad:	mov    ecx,DWORD PTR [eax]
  4153af:	call   DWORD PTR [ecx+0x18]
  4153b2:	cmp    ebp,eax
  4153b4:	je     0x4153bd
  4153b6:	inc    esi
  4153b7:	dec    ebx
  4153b8:	jne    0x4153a9
  4153ba:	or     esi,0xffffffff
  4153bd:	mov    eax,esi
  4153bf:	pop    ebp
  4153c0:	pop    edi
  4153c1:	pop    esi
  4153c2:	pop    ebx
  4153c3:	ret    
  4153c4:	push   ebp
  4153c5:	mov    ebp,esp
  4153c7:	push   ecx
  4153c8:	push   ebx
  4153c9:	push   esi
  4153ca:	push   edi
  4153cb:	mov    DWORD PTR [ebp-0x4],ecx
  4153ce:	mov    ebx,edx
  4153d0:	mov    esi,eax
  4153d2:	mov    ecx,DWORD PTR [ebp-0x4]
  4153d5:	mov    edx,ebx
  4153d7:	mov    eax,esi
  4153d9:	mov    edi,DWORD PTR [eax]
  4153db:	call   DWORD PTR [edi+0x60]
  4153de:	mov    ecx,DWORD PTR [ebp+0x8]
  4153e1:	mov    edx,ebx
  4153e3:	mov    eax,esi
  4153e5:	mov    ebx,DWORD PTR [eax]
  4153e7:	call   DWORD PTR [ebx+0x24]
  4153ea:	pop    edi
  4153eb:	pop    esi
  4153ec:	pop    ebx
  4153ed:	pop    ecx
  4153ee:	pop    ebp
  4153ef:	ret    0x4
  4153f2:	mov    eax,eax
  4153f4:	push   ebp
  4153f5:	mov    ebp,esp
  4153f7:	push   ecx
  4153f8:	push   ebx
  4153f9:	mov    ebx,eax
  4153fb:	push   0x20
  4153fd:	mov    ecx,edx
  4153ff:	mov    eax,ds:0x412ef0
  415404:	mov    dl,0x1
  415406:	call   0x41670c
  41540b:	mov    DWORD PTR [ebp-0x4],eax
  41540e:	xor    eax,eax
  415410:	push   ebp
  415411:	push   0x41543c
  415416:	push   DWORD PTR fs:[eax]
  415419:	mov    DWORD PTR fs:[eax],esp
  41541c:	mov    edx,DWORD PTR [ebp-0x4]
  41541f:	mov    eax,ebx
  415421:	mov    ecx,DWORD PTR [eax]
  415423:	call   DWORD PTR [ecx+0x6c]
  415426:	xor    eax,eax
  415428:	pop    edx
  415429:	pop    ecx
  41542a:	pop    ecx
  41542b:	mov    DWORD PTR fs:[eax],edx
  41542e:	push   0x415443
  415433:	mov    eax,DWORD PTR [ebp-0x4]
  415436:	call   0x4040a0
  41543b:	ret    
  41543c:	jmp    0x40481c
  415441:	jmp    0x415433
  415443:	pop    ebx
  415444:	pop    ecx
  415445:	pop    ebp
  415446:	ret    
  415447:	nop
  415448:	push   ebp
  415449:	mov    ebp,esp
  41544b:	add    esp,0xfffffff8
  41544e:	push   ebx
  41544f:	push   esi
  415450:	xor    ecx,ecx
  415452:	mov    DWORD PTR [ebp-0x4],ecx
  415455:	mov    ebx,edx
  415457:	mov    DWORD PTR [ebp-0x8],eax
  41545a:	xor    eax,eax
  41545c:	push   ebp
  41545d:	push   0x4154e5
  415462:	push   DWORD PTR fs:[eax]
  415465:	mov    DWORD PTR fs:[eax],esp
  415468:	mov    eax,DWORD PTR [ebp-0x8]
  41546b:	call   0x414c38
  415470:	xor    eax,eax
  415472:	push   ebp
  415473:	push   0x4154c8
  415478:	push   DWORD PTR fs:[eax]
  41547b:	mov    DWORD PTR fs:[eax],esp
  41547e:	mov    eax,ebx
  415480:	mov    edx,DWORD PTR [eax]
  415482:	call   DWORD PTR [edx]
  415484:	mov    esi,eax
  415486:	mov    eax,ebx
  415488:	call   0x4163e4
  41548d:	sub    esi,eax
  41548f:	lea    eax,[ebp-0x4]
  415492:	mov    ecx,esi
  415494:	xor    edx,edx
  415496:	call   0x405078
  41549b:	mov    edx,DWORD PTR [ebp-0x4]
  41549e:	mov    ecx,esi
  4154a0:	mov    eax,ebx
  4154a2:	mov    ebx,DWORD PTR [eax]
  4154a4:	call   DWORD PTR [ebx+0xc]
  4154a7:	mov    edx,DWORD PTR [ebp-0x4]
  4154aa:	mov    eax,DWORD PTR [ebp-0x8]
  4154ad:	mov    ecx,DWORD PTR [eax]
  4154af:	call   DWORD PTR [ecx+0x2c]
  4154b2:	xor    eax,eax
  4154b4:	pop    edx
  4154b5:	pop    ecx
  4154b6:	pop    ecx
  4154b7:	mov    DWORD PTR fs:[eax],edx
  4154ba:	push   0x4154cf
  4154bf:	mov    eax,DWORD PTR [ebp-0x8]
  4154c2:	call   0x414cf4
  4154c7:	ret    
  4154c8:	jmp    0x40481c
  4154cd:	jmp    0x4154bf
  4154cf:	xor    eax,eax
  4154d1:	pop    edx
  4154d2:	pop    ecx
  4154d3:	pop    ecx
  4154d4:	mov    DWORD PTR fs:[eax],edx
  4154d7:	push   0x4154ec
  4154dc:	lea    eax,[ebp-0x4]
  4154df:	call   0x404f88
  4154e4:	ret    
  4154e5:	jmp    0x40481c
  4154ea:	jmp    0x4154dc
  4154ec:	pop    esi
  4154ed:	pop    ebx
  4154ee:	pop    ecx
  4154ef:	pop    ecx
  4154f0:	pop    ebp
  4154f1:	ret    
  4154f2:	mov    eax,eax
  4154f4:	push   ebp
  4154f5:	mov    ebp,esp
  4154f7:	add    esp,0xfffffff8
  4154fa:	push   ebx
  4154fb:	push   esi
  4154fc:	push   edi
  4154fd:	xor    ebx,ebx
  4154ff:	mov    DWORD PTR [ebp-0x4],ebx
  415502:	mov    esi,ecx
  415504:	mov    ebx,edx
  415506:	mov    DWORD PTR [ebp-0x8],eax
  415509:	xor    eax,eax
  41550b:	push   ebp
  41550c:	push   0x415595
  415511:	push   DWORD PTR fs:[eax]
  415514:	mov    DWORD PTR fs:[eax],esp
  415517:	cmp    esi,ebx
  415519:	je     0x41557f
  41551b:	mov    eax,DWORD PTR [ebp-0x8]
  41551e:	call   0x414c38
  415523:	xor    eax,eax
  415525:	push   ebp
  415526:	push   0x415578
  41552b:	push   DWORD PTR fs:[eax]
  41552e:	mov    DWORD PTR fs:[eax],esp
  415531:	lea    ecx,[ebp-0x4]
  415534:	mov    edx,ebx
  415536:	mov    eax,DWORD PTR [ebp-0x8]
  415539:	mov    edi,DWORD PTR [eax]
  41553b:	call   DWORD PTR [edi+0xc]
  41553e:	mov    edx,ebx
  415540:	mov    eax,DWORD PTR [ebp-0x8]
  415543:	mov    ecx,DWORD PTR [eax]
  415545:	call   DWORD PTR [ecx+0x18]
  415548:	mov    edi,eax
  41554a:	mov    edx,ebx
  41554c:	mov    eax,DWORD PTR [ebp-0x8]
  41554f:	mov    ecx,DWORD PTR [eax]
  415551:	call   DWORD PTR [ecx+0x48]
  415554:	push   edi
  415555:	mov    ecx,DWORD PTR [ebp-0x4]
  415558:	mov    edx,esi
  41555a:	mov    eax,DWORD PTR [ebp-0x8]
  41555d:	mov    ebx,DWORD PTR [eax]
  41555f:	call   DWORD PTR [ebx+0x64]
  415562:	xor    eax,eax
  415564:	pop    edx
  415565:	pop    ecx
  415566:	pop    ecx
  415567:	mov    DWORD PTR fs:[eax],edx
  41556a:	push   0x41557f
  41556f:	mov    eax,DWORD PTR [ebp-0x8]
  415572:	call   0x414cf4
  415577:	ret    
  415578:	jmp    0x40481c
  41557d:	jmp    0x41556f
  41557f:	xor    eax,eax
  415581:	pop    edx
  415582:	pop    ecx
  415583:	pop    ecx
  415584:	mov    DWORD PTR fs:[eax],edx
  415587:	push   0x41559c
  41558c:	lea    eax,[ebp-0x4]
  41558f:	call   0x404f88
  415594:	ret    
  415595:	jmp    0x40481c
  41559a:	jmp    0x41558c
  41559c:	pop    edi
  41559d:	pop    esi
  41559e:	pop    ebx
  41559f:	pop    ecx
  4155a0:	pop    ecx
  4155a1:	pop    ebp
  4155a2:	ret    
  4155a3:	nop
  4155a4:	push   ebx
  4155a5:	push   esi
  4155a6:	push   edi
  4155a7:	push   ebp
  4155a8:	mov    ebp,ecx
  4155aa:	mov    esi,edx
  4155ac:	mov    ebx,eax
  4155ae:	mov    edx,esi
  4155b0:	mov    eax,ebx
  4155b2:	mov    ecx,DWORD PTR [eax]
  4155b4:	call   DWORD PTR [ecx+0x18]
  4155b7:	mov    edi,eax
  4155b9:	mov    edx,esi
  4155bb:	mov    eax,ebx
  4155bd:	mov    ecx,DWORD PTR [eax]
  4155bf:	call   DWORD PTR [ecx+0x48]
  4155c2:	push   edi
  4155c3:	mov    ecx,ebp
  4155c5:	mov    edx,esi
  4155c7:	mov    eax,ebx
  4155c9:	mov    ebx,DWORD PTR [eax]
  4155cb:	call   DWORD PTR [ebx+0x64]
  4155ce:	pop    ebp
  4155cf:	pop    edi
  4155d0:	pop    esi
  4155d1:	pop    ebx
  4155d2:	ret    
  4155d3:	nop
  4155d4:	ret    
  4155d5:	lea    eax,[eax+0x0]
  4155d8:	push   ebp
  4155d9:	mov    ebp,esp
  4155db:	add    esp,0xfffffff4
  4155de:	xor    ecx,ecx
  4155e0:	mov    DWORD PTR [ebp-0xc],ecx
  4155e3:	mov    DWORD PTR [ebp-0x8],edx
  4155e6:	mov    DWORD PTR [ebp-0x4],eax
  4155e9:	xor    eax,eax
  4155eb:	push   ebp
  4155ec:	push   0x41567c
  4155f1:	push   DWORD PTR fs:[eax]
  4155f4:	mov    DWORD PTR fs:[eax],esp
  4155f7:	mov    eax,DWORD PTR [ebp-0x8]
  4155fa:	call   0x418304
  4155ff:	mov    eax,DWORD PTR [ebp-0x4]
  415602:	call   0x414c38
  415607:	xor    eax,eax
  415609:	push   ebp
  41560a:	push   0x415657
  41560f:	push   DWORD PTR fs:[eax]
  415612:	mov    DWORD PTR fs:[eax],esp
  415615:	mov    eax,DWORD PTR [ebp-0x4]
  415618:	mov    edx,DWORD PTR [eax]
  41561a:	call   DWORD PTR [edx+0x44]
  41561d:	jmp    0x415635
  41561f:	lea    edx,[ebp-0xc]
  415622:	mov    eax,DWORD PTR [ebp-0x8]
  415625:	call   0x418c7c
  41562a:	mov    edx,DWORD PTR [ebp-0xc]
  41562d:	mov    eax,DWORD PTR [ebp-0x4]
  415630:	mov    ecx,DWORD PTR [eax]
  415632:	call   DWORD PTR [ecx+0x38]
  415635:	mov    eax,DWORD PTR [ebp-0x8]
  415638:	call   0x417264
  41563d:	test   al,al
  41563f:	je     0x41561f
  415641:	xor    eax,eax
  415643:	pop    edx
  415644:	pop    ecx
  415645:	pop    ecx
  415646:	mov    DWORD PTR fs:[eax],edx
  415649:	push   0x41565e
  41564e:	mov    eax,DWORD PTR [ebp-0x4]
  415651:	call   0x414cf4
  415656:	ret    
  415657:	jmp    0x40481c
  41565c:	jmp    0x41564e
  41565e:	mov    eax,DWORD PTR [ebp-0x8]
  415661:	call   0x41830c
  415666:	xor    eax,eax
  415668:	pop    edx
  415669:	pop    ecx
  41566a:	pop    ecx
  41566b:	mov    DWORD PTR fs:[eax],edx
  41566e:	push   0x415683
  415673:	lea    eax,[ebp-0xc]
  415676:	call   0x404f88
  41567b:	ret    
  41567c:	jmp    0x40481c
  415681:	jmp    0x415673
  415683:	mov    esp,ebp
  415685:	pop    ebp
  415686:	ret    
  415687:	nop
  415688:	push   ebp
  415689:	mov    ebp,esp
  41568b:	push   ecx
  41568c:	push   ebx
  41568d:	mov    ebx,eax
  41568f:	push   0xffff
  415694:	mov    ecx,edx
  415696:	mov    eax,ds:0x412ef0
  41569b:	mov    dl,0x1
  41569d:	call   0x41670c
  4156a2:	mov    DWORD PTR [ebp-0x4],eax
  4156a5:	xor    eax,eax
  4156a7:	push   ebp
  4156a8:	push   0x4156d3
  4156ad:	push   DWORD PTR fs:[eax]
  4156b0:	mov    DWORD PTR fs:[eax],esp
  4156b3:	mov    edx,DWORD PTR [ebp-0x4]
  4156b6:	mov    eax,ebx
  4156b8:	mov    ecx,DWORD PTR [eax]
  4156ba:	call   DWORD PTR [ecx+0x78]
  4156bd:	xor    eax,eax
  4156bf:	pop    edx
  4156c0:	pop    ecx
  4156c1:	pop    ecx
  4156c2:	mov    DWORD PTR fs:[eax],edx
  4156c5:	push   0x4156da
  4156ca:	mov    eax,DWORD PTR [ebp-0x4]
  4156cd:	call   0x4040a0
  4156d2:	ret    
  4156d3:	jmp    0x40481c
  4156d8:	jmp    0x4156ca
  4156da:	pop    ebx
  4156db:	pop    ecx
  4156dc:	pop    ebp
  4156dd:	ret    
  4156de:	mov    eax,eax
  4156e0:	push   ebp
  4156e1:	mov    ebp,esp
  4156e3:	push   0x0
  4156e5:	push   ebx
  4156e6:	push   esi
  4156e7:	mov    esi,edx
  4156e9:	mov    ebx,eax
  4156eb:	xor    eax,eax
  4156ed:	push   ebp
  4156ee:	push   0x415731
  4156f3:	push   DWORD PTR fs:[eax]
  4156f6:	mov    DWORD PTR fs:[eax],esp
  4156f9:	lea    edx,[ebp-0x4]
  4156fc:	mov    eax,ebx
  4156fe:	mov    ecx,DWORD PTR [eax]
  415700:	call   DWORD PTR [ecx+0x1c]
  415703:	mov    eax,DWORD PTR [ebp-0x4]
  415706:	test   eax,eax
  415708:	je     0x41570f
  41570a:	sub    eax,0x4
  41570d:	mov    eax,DWORD PTR [eax]
  41570f:	mov    edx,DWORD PTR [ebp-0x4]
  415712:	mov    ecx,eax
  415714:	mov    eax,esi
  415716:	call   0x416610
  41571b:	xor    eax,eax
  41571d:	pop    edx
  41571e:	pop    ecx
  41571f:	pop    ecx
  415720:	mov    DWORD PTR fs:[eax],edx
  415723:	push   0x415738
  415728:	lea    eax,[ebp-0x4]
  41572b:	call   0x404f88
  415730:	ret    
  415731:	jmp    0x40481c
  415736:	jmp    0x415728
  415738:	pop    esi
  415739:	pop    ebx
  41573a:	pop    ecx
  41573b:	pop    ebp
  41573c:	ret    
  41573d:	lea    eax,[eax+0x0]
  415740:	ret    
  415741:	lea    eax,[eax+0x0]
  415744:	push   ebx
  415745:	push   esi
  415746:	mov    esi,edx
  415748:	mov    ebx,eax
  41574a:	mov    dl,0x2c
  41574c:	mov    eax,ebx
  41574e:	call   0x415c30
  415753:	mov    dl,0x22
  415755:	mov    eax,ebx
  415757:	call   0x415c78
  41575c:	mov    edx,esi
  41575e:	mov    eax,ebx
  415760:	call   0x415a18
  415765:	pop    esi
  415766:	pop    ebx
  415767:	ret    
  415768:	push   ebx
  415769:	push   esi
  41576a:	mov    esi,edx
  41576c:	mov    ebx,eax
  41576e:	cmp    DWORD PTR [ebx+0x14],0x0
  415772:	je     0x41577c
  415774:	mov    eax,DWORD PTR [ebx+0x14]
  415777:	mov    edx,DWORD PTR [eax]
  415779:	call   DWORD PTR [edx+0x10]
  41577c:	lea    eax,[ebx+0x14]
  41577f:	mov    edx,esi
  415781:	call   0x406ab0
  415786:	cmp    DWORD PTR [ebx+0x14],0x0
  41578a:	je     0x415796
  41578c:	mov    edx,ebx
  41578e:	mov    eax,DWORD PTR [ebx+0x14]
  415791:	mov    ecx,DWORD PTR [eax]
  415793:	call   DWORD PTR [ecx+0xc]
  415796:	pop    esi
  415797:	pop    ebx
  415798:	ret    
  415799:	lea    eax,[eax+0x0]
  41579c:	push   ebp
  41579d:	mov    ebp,esp
  41579f:	push   0x0
  4157a1:	push   ebx
  4157a2:	push   esi
  4157a3:	mov    esi,edx
  4157a5:	mov    ebx,eax
  4157a7:	xor    eax,eax
  4157a9:	push   ebp
  4157aa:	push   0x4157df
  4157af:	push   DWORD PTR fs:[eax]
  4157b2:	mov    DWORD PTR fs:[eax],esp
  4157b5:	lea    eax,[ebp-0x4]
  4157b8:	mov    edx,esi
  4157ba:	call   0x405180
  4157bf:	mov    edx,DWORD PTR [ebp-0x4]
  4157c2:	mov    eax,ebx
  4157c4:	mov    ecx,DWORD PTR [eax]
  4157c6:	call   DWORD PTR [ecx+0x2c]
  4157c9:	xor    eax,eax
  4157cb:	pop    edx
  4157cc:	pop    ecx
  4157cd:	pop    ecx
  4157ce:	mov    DWORD PTR fs:[eax],edx
  4157d1:	push   0x4157e6
  4157d6:	lea    eax,[ebp-0x4]
  4157d9:	call   0x404f88
  4157de:	ret    
  4157df:	jmp    0x40481c
  4157e4:	jmp    0x4157d6
  4157e6:	pop    esi
  4157e7:	pop    ebx
  4157e8:	pop    ecx
  4157e9:	pop    ebp
  4157ea:	ret    
  4157eb:	nop
  4157ec:	push   ebp
  4157ed:	mov    ebp,esp
  4157ef:	add    esp,0xffffffe0
  4157f2:	push   ebx
  4157f3:	push   esi
  4157f4:	push   edi
  4157f5:	xor    ecx,ecx
  4157f7:	mov    DWORD PTR [ebp-0x20],ecx
  4157fa:	mov    DWORD PTR [ebp-0x18],ecx
  4157fd:	mov    DWORD PTR [ebp-0x14],ecx
  415800:	mov    DWORD PTR [ebp-0x4],ecx
  415803:	mov    ebx,edx
  415805:	mov    DWORD PTR [ebp-0x8],eax
  415808:	xor    eax,eax
  41580a:	push   ebp
  41580b:	push   0x415975
  415810:	push   DWORD PTR fs:[eax]
  415813:	mov    DWORD PTR fs:[eax],esp
  415816:	mov    eax,DWORD PTR [ebp-0x8]
  415819:	call   0x414c38
  41581e:	xor    edx,edx
  415820:	push   ebp
  415821:	push   0x415943
  415826:	push   DWORD PTR fs:[edx]
  415829:	mov    DWORD PTR fs:[edx],esp
  41582c:	mov    eax,DWORD PTR [ebp-0x8]
  41582f:	mov    edx,DWORD PTR [eax]
  415831:	call   DWORD PTR [edx+0x44]
  415834:	test   ebx,ebx
  415836:	je     0x41592d
  41583c:	lea    edx,[ebp-0x14]
  41583f:	mov    eax,DWORD PTR [ebp-0x8]
  415842:	call   0x415bcc
  415847:	mov    eax,DWORD PTR [ebp-0x14]
  41584a:	mov    edx,0x41598c
  41584f:	call   0x4084d0
  415854:	test   eax,eax
  415856:	jne    0x41589d
  415858:	jmp    0x415893
  41585a:	mov    esi,ebx
  41585c:	jmp    0x41585f
  41585e:	inc    ebx
  41585f:	movzx  eax,BYTE PTR [ebx]
  415862:	test   al,al
  415864:	je     0x41586e
  415866:	sub    al,0xa
  415868:	je     0x41586e
  41586a:	sub    al,0x3
  41586c:	jne    0x41585e
  41586e:	mov    ecx,ebx
  415870:	sub    ecx,esi
  415872:	lea    eax,[ebp-0x4]
  415875:	mov    edx,esi
  415877:	call   0x405078
  41587c:	mov    edx,DWORD PTR [ebp-0x4]
  41587f:	mov    eax,DWORD PTR [ebp-0x8]
  415882:	mov    ecx,DWORD PTR [eax]
  415884:	call   DWORD PTR [ecx+0x38]
  415887:	cmp    BYTE PTR [ebx],0xd
  41588a:	jne    0x41588d
  41588c:	inc    ebx
  41588d:	cmp    BYTE PTR [ebx],0xa
  415890:	jne    0x415893
  415892:	inc    ebx
  415893:	cmp    BYTE PTR [ebx],0x0
  415896:	jne    0x41585a
  415898:	jmp    0x41592d
  41589d:	mov    eax,ds:0x46deb4
  4158a2:	cmp    BYTE PTR [eax+0xc],0x0
  4158a6:	jne    0x4158b2
  4158a8:	mov    eax,0x409284
  4158ad:	mov    DWORD PTR [ebp-0x10],eax
  4158b0:	jmp    0x4158ba
  4158b2:	mov    eax,0x40d518
  4158b7:	mov    DWORD PTR [ebp-0x10],eax
  4158ba:	lea    edx,[ebp-0x18]
  4158bd:	mov    eax,DWORD PTR [ebp-0x8]
  4158c0:	call   0x415bcc
  4158c5:	mov    eax,DWORD PTR [ebp-0x18]
  4158c8:	mov    DWORD PTR [ebp-0x1c],eax
  4158cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158ce:	test   eax,eax
  4158d0:	je     0x4158d7
  4158d2:	sub    eax,0x4
  4158d5:	mov    eax,DWORD PTR [eax]
  4158d7:	mov    DWORD PTR [ebp-0xc],eax
  4158da:	jmp    0x415928
  4158dc:	mov    esi,ebx
  4158de:	lea    edx,[ebp-0x20]
  4158e1:	mov    eax,DWORD PTR [ebp-0x8]
  4158e4:	call   0x415bcc
  4158e9:	mov    eax,DWORD PTR [ebp-0x20]
  4158ec:	call   0x405418
  4158f1:	mov    edx,eax
  4158f3:	mov    eax,ebx
  4158f5:	call   DWORD PTR [ebp-0x10]
  4158f8:	mov    edi,eax
  4158fa:	jmp    0x4158fd
  4158fc:	inc    ebx
  4158fd:	cmp    BYTE PTR [ebx],0x0
  415900:	je     0x415906
  415902:	cmp    edi,ebx
  415904:	jne    0x4158fc
  415906:	mov    ecx,ebx
  415908:	sub    ecx,esi
  41590a:	lea    eax,[ebp-0x4]
  41590d:	mov    edx,esi
  41590f:	call   0x405078
  415914:	mov    edx,DWORD PTR [ebp-0x4]
  415917:	mov    eax,DWORD PTR [ebp-0x8]
  41591a:	mov    ecx,DWORD PTR [eax]
  41591c:	call   DWORD PTR [ecx+0x38]
  41591f:	cmp    edi,ebx
  415921:	jne    0x415928
  415923:	mov    eax,DWORD PTR [ebp-0xc]
  415926:	add    ebx,eax
  415928:	cmp    BYTE PTR [ebx],0x0
  41592b:	jne    0x4158dc
  41592d:	xor    eax,eax
  41592f:	pop    edx
  415930:	pop    ecx
  415931:	pop    ecx
  415932:	mov    DWORD PTR fs:[eax],edx
  415935:	push   0x41594a
  41593a:	mov    eax,DWORD PTR [ebp-0x8]
  41593d:	call   0x414cf4
  415942:	ret    
  415943:	jmp    0x40481c
  415948:	jmp    0x41593a
  41594a:	xor    eax,eax
  41594c:	pop    edx
  41594d:	pop    ecx
  41594e:	pop    ecx
  41594f:	mov    DWORD PTR fs:[eax],edx
  415952:	push   0x41597c
  415957:	lea    eax,[ebp-0x20]
  41595a:	call   0x404f88
  41595f:	lea    eax,[ebp-0x18]
  415962:	mov    edx,0x2
  415967:	call   0x404fac
  41596c:	lea    eax,[ebp-0x4]
  41596f:	call   0x404f88
  415974:	ret    
  415975:	jmp    0x40481c
  41597a:	jmp    0x415957
  41597c:	pop    edi
  41597d:	pop    esi
  41597e:	pop    ebx
  41597f:	mov    esp,ebp
  415981:	pop    ebp
  415982:	ret    
  415983:	add    bh,bh
  415985:	(bad)  
  415986:	(bad)  
  415987:	inc    DWORD PTR [edx]
  415989:	add    BYTE PTR [eax],al
  41598b:	add    BYTE PTR ds:0xc300000a,cl
  415991:	lea    eax,[eax+0x0]
  415994:	push   ebp
  415995:	mov    ebp,esp
  415997:	add    esp,0xfffffff4
  41599a:	push   ebx
  41599b:	push   esi
  41599c:	push   edi
  41599d:	xor    ecx,ecx
  41599f:	mov    DWORD PTR [ebp-0xc],ecx
  4159a2:	mov    DWORD PTR [ebp-0x8],edx
  4159a5:	mov    DWORD PTR [ebp-0x4],eax
  4159a8:	xor    eax,eax
  4159aa:	push   ebp
  4159ab:	push   0x415a0a
  4159b0:	push   DWORD PTR fs:[eax]
  4159b3:	mov    DWORD PTR fs:[eax],esp
  4159b6:	mov    eax,DWORD PTR [ebp-0x8]
  4159b9:	call   0x419840
  4159be:	mov    eax,DWORD PTR [ebp-0x4]
  4159c1:	mov    edx,DWORD PTR [eax]
  4159c3:	call   DWORD PTR [edx+0x14]
  4159c6:	mov    ebx,eax
  4159c8:	dec    ebx
  4159c9:	test   ebx,ebx
  4159cb:	jl     0x4159ec
  4159cd:	inc    ebx
  4159ce:	xor    esi,esi
  4159d0:	lea    ecx,[ebp-0xc]
  4159d3:	mov    edx,esi
  4159d5:	mov    eax,DWORD PTR [ebp-0x4]
  4159d8:	mov    edi,DWORD PTR [eax]
  4159da:	call   DWORD PTR [edi+0xc]
  4159dd:	mov    edx,DWORD PTR [ebp-0xc]
  4159e0:	mov    eax,DWORD PTR [ebp-0x8]
  4159e3:	call   0x4198fc
  4159e8:	inc    esi
  4159e9:	dec    ebx
  4159ea:	jne    0x4159d0
  4159ec:	mov    eax,DWORD PTR [ebp-0x8]
  4159ef:	call   0x419848
  4159f4:	xor    eax,eax
  4159f6:	pop    edx
  4159f7:	pop    ecx
  4159f8:	pop    ecx
  4159f9:	mov    DWORD PTR fs:[eax],edx
  4159fc:	push   0x415a11
  415a01:	lea    eax,[ebp-0xc]
  415a04:	call   0x404f88
  415a09:	ret    
  415a0a:	jmp    0x40481c
  415a0f:	jmp    0x415a01
  415a11:	pop    edi
  415a12:	pop    esi
  415a13:	pop    ebx
  415a14:	mov    esp,ebp
  415a16:	pop    ebp
  415a17:	ret    
  415a18:	push   ebp
  415a19:	mov    ebp,esp
  415a1b:	add    esp,0xfffffff4
  415a1e:	push   ebx
  415a1f:	push   esi
  415a20:	push   edi
  415a21:	xor    ecx,ecx
  415a23:	mov    DWORD PTR [ebp-0x4],ecx
  415a26:	mov    ebx,edx
  415a28:	mov    DWORD PTR [ebp-0x8],eax
  415a2b:	lea    edi,[ebp-0xc]
  415a2e:	xor    eax,eax
  415a30:	push   ebp
  415a31:	push   0x415ba6
  415a36:	push   DWORD PTR fs:[eax]
  415a39:	mov    DWORD PTR fs:[eax],esp
  415a3c:	mov    eax,DWORD PTR [ebp-0x8]
  415a3f:	call   0x414c38
  415a44:	xor    eax,eax
  415a46:	push   ebp
  415a47:	push   0x415b89
  415a4c:	push   DWORD PTR fs:[eax]
  415a4f:	mov    DWORD PTR fs:[eax],esp
  415a52:	mov    eax,DWORD PTR [ebp-0x8]
  415a55:	mov    edx,DWORD PTR [eax]
  415a57:	call   DWORD PTR [edx+0x44]
  415a5a:	mov    eax,ebx
  415a5c:	call   0x405418
  415a61:	mov    DWORD PTR [edi],eax
  415a63:	mov    eax,DWORD PTR [ebp-0x8]
  415a66:	call   0x415c18
  415a6b:	test   al,al
  415a6d:	jne    0x415b66
  415a73:	jmp    0x415a7f
  415a75:	mov    eax,DWORD PTR [edi]
  415a77:	push   eax
  415a78:	call   0x407328
  415a7d:	mov    DWORD PTR [edi],eax
  415a7f:	mov    eax,DWORD PTR [edi]
  415a81:	movzx  eax,BYTE PTR [eax]
  415a84:	dec    eax
  415a85:	sub    al,0x20
  415a87:	jb     0x415a75
  415a89:	jmp    0x415b66
  415a8e:	mov    eax,DWORD PTR [ebp-0x8]
  415a91:	call   0x415c00
  415a96:	cmp    bl,al
  415a98:	jne    0x415ab0
  415a9a:	mov    eax,DWORD PTR [ebp-0x8]
  415a9d:	call   0x415c00
  415aa2:	mov    edx,eax
  415aa4:	lea    ecx,[ebp-0x4]
  415aa7:	mov    eax,edi
  415aa9:	call   0x4087cc
  415aae:	jmp    0x415afa
  415ab0:	mov    esi,DWORD PTR [edi]
  415ab2:	jmp    0x415abe
  415ab4:	mov    eax,DWORD PTR [edi]
  415ab6:	push   eax
  415ab7:	call   0x407328
  415abc:	mov    DWORD PTR [edi],eax
  415abe:	mov    eax,DWORD PTR [ebp-0x8]
  415ac1:	cmp    BYTE PTR [eax+0xe],0x0
  415ac5:	jne    0x415ace
  415ac7:	mov    eax,DWORD PTR [edi]
  415ac9:	cmp    BYTE PTR [eax],0x20
  415acc:	ja     0x415ade
  415ace:	mov    eax,DWORD PTR [ebp-0x8]
  415ad1:	cmp    BYTE PTR [eax+0xe],0x0
  415ad5:	je     0x415aec
  415ad7:	mov    eax,DWORD PTR [edi]
  415ad9:	cmp    BYTE PTR [eax],0x0
  415adc:	je     0x415aec
  415ade:	mov    eax,DWORD PTR [ebp-0x8]
  415ae1:	call   0x415bb4
  415ae6:	mov    edx,DWORD PTR [edi]
  415ae8:	cmp    al,BYTE PTR [edx]
  415aea:	jne    0x415ab4
  415aec:	mov    ecx,DWORD PTR [edi]
  415aee:	sub    ecx,esi
  415af0:	lea    eax,[ebp-0x4]
  415af3:	mov    edx,esi
  415af5:	call   0x405078
  415afa:	mov    edx,DWORD PTR [ebp-0x4]
  415afd:	mov    eax,DWORD PTR [ebp-0x8]
  415b00:	mov    ecx,DWORD PTR [eax]
  415b02:	call   DWORD PTR [ecx+0x38]
  415b05:	mov    eax,DWORD PTR [ebp-0x8]
  415b08:	cmp    BYTE PTR [eax+0xe],0x0
  415b0c:	jne    0x415b24
  415b0e:	jmp    0x415b1a
  415b10:	mov    eax,DWORD PTR [edi]
  415b12:	push   eax
  415b13:	call   0x407328
  415b18:	mov    DWORD PTR [edi],eax
  415b1a:	mov    eax,DWORD PTR [edi]
  415b1c:	movzx  eax,BYTE PTR [eax]
  415b1f:	dec    eax
  415b20:	sub    al,0x20
  415b22:	jb     0x415b10
  415b24:	mov    eax,DWORD PTR [ebp-0x8]
  415b27:	call   0x415bb4
  415b2c:	mov    edx,DWORD PTR [edi]
  415b2e:	cmp    al,BYTE PTR [edx]
  415b30:	jne    0x415b66
  415b32:	mov    esi,DWORD PTR [edi]
  415b34:	push   esi
  415b35:	call   0x407328
  415b3a:	cmp    BYTE PTR [eax],0x0
  415b3d:	jne    0x415b49
  415b3f:	xor    edx,edx
  415b41:	mov    eax,DWORD PTR [ebp-0x8]
  415b44:	mov    ecx,DWORD PTR [eax]
  415b46:	call   DWORD PTR [ecx+0x38]
  415b49:	mov    eax,DWORD PTR [edi]
  415b4b:	push   eax
  415b4c:	call   0x407328
  415b51:	mov    DWORD PTR [edi],eax
  415b53:	mov    eax,DWORD PTR [ebp-0x8]
  415b56:	cmp    BYTE PTR [eax+0xe],0x0
  415b5a:	jne    0x415b66
  415b5c:	mov    eax,DWORD PTR [edi]
  415b5e:	movzx  eax,BYTE PTR [eax]
  415b61:	dec    eax
  415b62:	sub    al,0x20
  415b64:	jb     0x415b49
  415b66:	mov    eax,DWORD PTR [edi]
  415b68:	movzx  ebx,BYTE PTR [eax]
  415b6b:	test   bl,bl
  415b6d:	jne    0x415a8e
  415b73:	xor    eax,eax
  415b75:	pop    edx
  415b76:	pop    ecx
  415b77:	pop    ecx
  415b78:	mov    DWORD PTR fs:[eax],edx
  415b7b:	push   0x415b90
  415b80:	mov    eax,DWORD PTR [ebp-0x8]
  415b83:	call   0x414cf4
  415b88:	ret    
  415b89:	jmp    0x40481c
  415b8e:	jmp    0x415b80
  415b90:	xor    eax,eax
  415b92:	pop    edx
  415b93:	pop    ecx
  415b94:	pop    ecx
  415b95:	mov    DWORD PTR fs:[eax],edx
  415b98:	push   0x415bad
  415b9d:	lea    eax,[ebp-0x4]
  415ba0:	call   0x404f88
  415ba5:	ret    
  415ba6:	jmp    0x40481c
  415bab:	jmp    0x415b9d
  415bad:	pop    edi
  415bae:	pop    esi
  415baf:	pop    ebx
  415bb0:	mov    esp,ebp
  415bb2:	pop    ebp
  415bb3:	ret    
  415bb4:	push   ebx
  415bb5:	mov    ebx,eax
  415bb7:	test   BYTE PTR [ebx+0x4],0x1
  415bbb:	jne    0x415bc6
  415bbd:	mov    dl,0x2c
  415bbf:	mov    eax,ebx
  415bc1:	call   0x415c30
  415bc6:	movzx  eax,BYTE PTR [ebx+0x5]
  415bca:	pop    ebx
  415bcb:	ret    
  415bcc:	push   ebx
  415bcd:	push   esi
  415bce:	mov    esi,edx
  415bd0:	mov    ebx,eax
  415bd2:	test   BYTE PTR [ebx+0x4],0x8
  415bd6:	jne    0x415be4
  415bd8:	mov    edx,0x415bfc
  415bdd:	mov    eax,ebx
  415bdf:	call   0x415c4c
  415be4:	mov    eax,esi
  415be6:	mov    edx,DWORD PTR [ebx+0x8]
  415be9:	call   0x404fdc
  415bee:	pop    esi
  415bef:	pop    ebx
  415bf0:	ret    
  415bf1:	add    BYTE PTR [eax],al
  415bf3:	add    bh,bh
  415bf5:	(bad)  
  415bf6:	(bad)  
  415bf7:	inc    DWORD PTR [edx]
  415bf9:	add    BYTE PTR [eax],al
  415bfb:	add    BYTE PTR ds:0x5300000a,cl
  415c01:	mov    ebx,eax
  415c03:	test   BYTE PTR [ebx+0x4],0x2
  415c07:	jne    0x415c12
  415c09:	mov    dl,0x22
  415c0b:	mov    eax,ebx
  415c0d:	call   0x415c78
  415c12:	movzx  eax,BYTE PTR [ebx+0xc]
  415c16:	pop    ebx
  415c17:	ret    
  415c18:	push   ebx
  415c19:	mov    ebx,eax
  415c1b:	test   BYTE PTR [ebx+0x4],0x10
  415c1f:	jne    0x415c2a
  415c21:	xor    edx,edx
  415c23:	mov    eax,ebx
  415c25:	call   0x415c94
  415c2a:	movzx  eax,BYTE PTR [ebx+0xe]
  415c2e:	pop    ebx
  415c2f:	ret    
  415c30:	push   ebx
  415c31:	push   esi
  415c32:	mov    ebx,edx
  415c34:	mov    esi,eax
  415c36:	cmp    bl,BYTE PTR [esi+0x5]
  415c39:	jne    0x415c41
  415c3b:	test   BYTE PTR [esi+0x4],0x1
  415c3f:	jne    0x415c48
  415c41:	or     BYTE PTR [esi+0x4],0x1
  415c45:	mov    BYTE PTR [esi+0x5],bl
  415c48:	pop    esi
  415c49:	pop    ebx
  415c4a:	ret    
  415c4b:	nop
  415c4c:	push   ebx
  415c4d:	push   esi
  415c4e:	mov    esi,edx
  415c50:	mov    ebx,eax
  415c52:	mov    eax,DWORD PTR [ebx+0x8]
  415c55:	mov    edx,esi
  415c57:	call   0x4053b0
  415c5c:	jne    0x415c64
  415c5e:	test   BYTE PTR [ebx+0x4],0x8
  415c62:	jne    0x415c72
  415c64:	or     BYTE PTR [ebx+0x4],0x8
  415c68:	lea    eax,[ebx+0x8]
  415c6b:	mov    edx,esi
  415c6d:	call   0x404fdc
  415c72:	pop    esi
  415c73:	pop    ebx
  415c74:	ret    
  415c75:	lea    eax,[eax+0x0]
  415c78:	push   ebx
  415c79:	push   esi
  415c7a:	mov    ebx,edx
  415c7c:	mov    esi,eax
  415c7e:	cmp    bl,BYTE PTR [esi+0xc]
  415c81:	jne    0x415c89
  415c83:	test   BYTE PTR [esi+0x4],0x2
  415c87:	jne    0x415c90
  415c89:	or     BYTE PTR [esi+0x4],0x2
  415c8d:	mov    BYTE PTR [esi+0xc],bl
  415c90:	pop    esi
  415c91:	pop    ebx
  415c92:	ret    
  415c93:	nop
  415c94:	push   ebx
  415c95:	push   esi
  415c96:	mov    ebx,edx
  415c98:	mov    esi,eax
  415c9a:	cmp    bl,BYTE PTR [esi+0xe]
  415c9d:	jne    0x415ca5
  415c9f:	test   BYTE PTR [esi+0x4],0x10
  415ca3:	jne    0x415cac
  415ca5:	or     BYTE PTR [esi+0x4],0x10
  415ca9:	mov    BYTE PTR [esi+0xe],bl
  415cac:	pop    esi
  415cad:	pop    ebx
  415cae:	ret    
  415caf:	nop
  415cb0:	push   ebx
  415cb1:	push   esi
  415cb2:	push   edi
  415cb3:	push   ebp
  415cb4:	mov    ebp,ecx
  415cb6:	mov    edi,edx
  415cb8:	mov    ebx,edi
  415cba:	test   ebx,ebx
  415cbc:	je     0x415cc3
  415cbe:	sub    ebx,0x4
  415cc1:	mov    ebx,DWORD PTR [ebx]
  415cc3:	mov    esi,ebp
  415cc5:	test   esi,esi
  415cc7:	je     0x415cce
  415cc9:	sub    esi,0x4
  415ccc:	mov    esi,DWORD PTR [esi]
  415cce:	push   esi
  415ccf:	mov    eax,ebp
  415cd1:	call   0x405418
  415cd6:	push   eax
  415cd7:	push   ebx
  415cd8:	mov    eax,edi
  415cda:	call   0x405418
  415cdf:	push   eax
  415ce0:	push   0x1
  415ce2:	push   0x400
  415ce7:	call   0x407148
  415cec:	sub    eax,0x2
  415cef:	pop    ebp
  415cf0:	pop    edi
  415cf1:	pop    esi
  415cf2:	pop    ebx
  415cf3:	ret    
  415cf4:	push   ebx
  415cf5:	mov    ebx,eax
  415cf7:	test   BYTE PTR [ebx+0x4],0x4
  415cfb:	jne    0x415d06
  415cfd:	mov    dl,0x3d
  415cff:	mov    eax,ebx
  415d01:	call   0x415d0c
  415d06:	movzx  eax,BYTE PTR [ebx+0xd]
  415d0a:	pop    ebx
  415d0b:	ret    
  415d0c:	push   ebx
  415d0d:	push   esi
  415d0e:	mov    ebx,edx
  415d10:	mov    esi,eax
  415d12:	cmp    bl,BYTE PTR [esi+0xd]
  415d15:	jne    0x415d1d
  415d17:	test   BYTE PTR [esi+0x4],0x4
  415d1b:	jne    0x415d24
  415d1d:	or     BYTE PTR [esi+0x4],0x4
  415d21:	mov    BYTE PTR [esi+0xd],bl
  415d24:	pop    esi
  415d25:	pop    ebx
  415d26:	ret    
  415d27:	nop
  415d28:	push   ebx
  415d29:	push   esi
  415d2a:	call   0x404454
  415d2f:	mov    ebx,edx
  415d31:	mov    esi,eax
  415d33:	xor    eax,eax
  415d35:	mov    DWORD PTR [esi+0x28],eax
  415d38:	mov    DWORD PTR [esi+0x2c],eax
  415d3b:	xor    eax,eax
  415d3d:	mov    DWORD PTR [esi+0x30],eax
  415d40:	mov    DWORD PTR [esi+0x34],eax
  415d43:	mov    edx,ebx
  415d45:	and    dl,0xfc
  415d48:	mov    eax,esi
  415d4a:	call   0x414a50
  415d4f:	mov    eax,DWORD PTR [esi+0x1c]
  415d52:	test   eax,eax
  415d54:	je     0x415d66
  415d56:	mov    ecx,eax
  415d58:	mov    eax,DWORD PTR [esi+0x18]
  415d5b:	mov    edx,DWORD PTR ds:0x412ccc
  415d61:	call   0x405b50
  415d66:	xor    eax,eax
  415d68:	mov    DWORD PTR [esi+0x1c],eax
  415d6b:	xor    edx,edx
  415d6d:	mov    eax,esi
  415d6f:	mov    ecx,DWORD PTR [eax]
  415d71:	call   DWORD PTR [ecx+0x28]
  415d74:	test   bl,bl
  415d76:	jle    0x415d7f
  415d78:	mov    eax,esi
  415d7a:	call   0x4043fc
  415d7f:	pop    esi
  415d80:	pop    ebx
  415d81:	ret    
  415d82:	mov    eax,eax
  415d84:	push   ebx
  415d85:	push   esi
  415d86:	mov    esi,eax
  415d88:	xor    ecx,ecx
  415d8a:	mov    eax,esi
  415d8c:	mov    ebx,DWORD PTR [eax]
  415d8e:	call   DWORD PTR [ebx+0x3c]
  415d91:	pop    esi
  415d92:	pop    ebx
  415d93:	ret    
  415d94:	push   ebx
  415d95:	push   esi
  415d96:	push   edi
  415d97:	push   ebp
  415d98:	push   ecx
  415d99:	mov    edi,ecx
  415d9b:	mov    esi,edx
  415d9d:	mov    ebx,eax
  415d9f:	cmp    BYTE PTR [ebx+0x24],0x0
  415da3:	jne    0x415dad
  415da5:	mov    eax,DWORD PTR [ebx+0x1c]
  415da8:	mov    DWORD PTR [esp],eax
  415dab:	jmp    0x415ddc
  415dad:	mov    ecx,esp
  415daf:	mov    edx,esi
  415db1:	mov    eax,ebx
  415db3:	mov    ebp,DWORD PTR [eax]
  415db5:	call   DWORD PTR [ebp+0x8c]
  415dbb:	test   al,al
  415dbd:	je     0x415ddc
  415dbf:	movzx  eax,BYTE PTR [ebx+0x25]
  415dc3:	sub    al,0x1
  415dc5:	jb     0x415ded
  415dc7:	dec    al
  415dc9:	je     0x415dcd
  415dcb:	jmp    0x415ddc
  415dcd:	mov    edx,DWORD PTR ds:0x46db48
  415dd3:	xor    ecx,ecx
  415dd5:	mov    eax,ebx
  415dd7:	call   0x414dec
  415ddc:	push   edi
  415ddd:	mov    ecx,esi
  415ddf:	mov    edx,DWORD PTR [esp+0x4]
  415de3:	mov    eax,ebx
  415de5:	mov    ebx,DWORD PTR [eax]
  415de7:	call   DWORD PTR [ebx+0x88]
  415ded:	mov    eax,DWORD PTR [esp]
  415df0:	pop    edx
  415df1:	pop    ebp
  415df2:	pop    edi
  415df3:	pop    esi
  415df4:	pop    ebx
  415df5:	ret    
  415df6:	mov    eax,eax
  415df8:	push   ebx
  415df9:	cmp    DWORD PTR [eax+0x10],0x0
  415dfd:	jne    0x415e10
  415dff:	cmp    WORD PTR [eax+0x2a],0x0
  415e04:	je     0x415e10
  415e06:	mov    ebx,eax
  415e08:	mov    edx,eax
  415e0a:	mov    eax,DWORD PTR [ebx+0x2c]
  415e0d:	call   DWORD PTR [ebx+0x28]
  415e10:	pop    ebx
  415e11:	ret    
  415e12:	mov    eax,eax
  415e14:	push   ebx
  415e15:	cmp    DWORD PTR [eax+0x10],0x0
  415e19:	jne    0x415e2c
  415e1b:	cmp    WORD PTR [eax+0x32],0x0
  415e20:	je     0x415e2c
  415e22:	mov    ebx,eax
  415e24:	mov    edx,eax
  415e26:	mov    eax,DWORD PTR [ebx+0x34]
  415e29:	call   DWORD PTR [ebx+0x30]
  415e2c:	pop    ebx
  415e2d:	ret    
  415e2e:	mov    eax,eax
  415e30:	push   ebx
  415e31:	mov    ebx,eax
  415e33:	cmp    DWORD PTR [ebx+0x1c],0x0
  415e37:	je     0x415e6c
  415e39:	mov    eax,ebx
  415e3b:	mov    edx,DWORD PTR [eax]
  415e3d:	call   DWORD PTR [edx+0x84]
  415e43:	mov    eax,DWORD PTR [ebx+0x18]
  415e46:	mov    ecx,DWORD PTR [ebx+0x1c]
  415e49:	mov    edx,DWORD PTR ds:0x412ccc
  415e4f:	call   0x405b50
  415e54:	xor    eax,eax
  415e56:	mov    DWORD PTR [ebx+0x1c],eax
  415e59:	xor    edx,edx
  415e5b:	mov    eax,ebx
  415e5d:	mov    ecx,DWORD PTR [eax]
  415e5f:	call   DWORD PTR [ecx+0x28]
  415e62:	mov    eax,ebx
  415e64:	mov    edx,DWORD PTR [eax]
  415e66:	call   DWORD PTR [edx+0x80]
  415e6c:	pop    ebx
  415e6d:	ret    
  415e6e:	mov    eax,eax
  415e70:	push   ebx
  415e71:	push   esi
  415e72:	mov    esi,edx
  415e74:	mov    ebx,eax
  415e76:	test   esi,esi
  415e78:	jl     0x415e7f
  415e7a:	cmp    esi,DWORD PTR [ebx+0x1c]
  415e7d:	jl     0x415e8e
  415e7f:	mov    edx,DWORD PTR ds:0x46ddb4
  415e85:	mov    ecx,esi
  415e87:	mov    eax,ebx
  415e89:	call   0x414dec
  415e8e:	mov    eax,ebx
  415e90:	mov    edx,DWORD PTR [eax]
  415e92:	call   DWORD PTR [edx+0x84]
  415e98:	mov    eax,DWORD PTR [ebx+0x18]
  415e9b:	lea    eax,[eax+esi*8]
  415e9e:	mov    edx,DWORD PTR ds:0x412ccc
  415ea4:	call   0x405c3c
  415ea9:	dec    DWORD PTR [ebx+0x1c]
  415eac:	mov    eax,DWORD PTR [ebx+0x1c]
  415eaf:	cmp    esi,eax
  415eb1:	jge    0x415ecf
  415eb3:	sub    eax,esi
  415eb5:	mov    ecx,eax
  415eb7:	add    ecx,ecx
  415eb9:	add    ecx,ecx
  415ebb:	add    ecx,ecx
  415ebd:	mov    eax,DWORD PTR [ebx+0x18]
  415ec0:	lea    edx,[eax+esi*8]
  415ec3:	mov    eax,DWORD PTR [ebx+0x18]
  415ec6:	lea    eax,[eax+esi*8+0x8]
  415eca:	call   0x403090
  415ecf:	mov    eax,ebx
  415ed1:	mov    edx,DWORD PTR [eax]
  415ed3:	call   DWORD PTR [edx+0x80]
  415ed9:	pop    esi
  415eda:	pop    ebx
  415edb:	ret    
  415edc:	push   ebx
  415edd:	push   esi
  415ede:	push   edi
  415edf:	mov    edi,ecx
  415ee1:	mov    esi,edx
  415ee3:	mov    ebx,eax
  415ee5:	test   esi,esi
  415ee7:	jl     0x415eee
  415ee9:	cmp    esi,DWORD PTR [ebx+0x1c]
  415eec:	jl     0x415efd
  415eee:	mov    edx,DWORD PTR ds:0x46ddb4
  415ef4:	mov    ecx,esi
  415ef6:	mov    eax,ebx
  415ef8:	call   0x414dec
  415efd:	test   edi,edi
  415eff:	jl     0x415f06
  415f01:	cmp    edi,DWORD PTR [ebx+0x1c]
  415f04:	jl     0x415f15
  415f06:	mov    edx,DWORD PTR ds:0x46ddb4
  415f0c:	mov    ecx,edi
  415f0e:	mov    eax,ebx
  415f10:	call   0x414dec
  415f15:	mov    eax,ebx
  415f17:	mov    edx,DWORD PTR [eax]
  415f19:	call   DWORD PTR [edx+0x84]
  415f1f:	mov    ecx,edi
  415f21:	mov    edx,esi
  415f23:	mov    eax,ebx
  415f25:	call   0x415f38
  415f2a:	mov    eax,ebx
  415f2c:	mov    edx,DWORD PTR [eax]
  415f2e:	call   DWORD PTR [edx+0x80]
  415f34:	pop    edi
  415f35:	pop    esi
  415f36:	pop    ebx
  415f37:	ret    
  415f38:	push   ebx
  415f39:	mov    ebx,DWORD PTR [eax+0x18]
  415f3c:	lea    edx,[ebx+edx*8]
  415f3f:	mov    eax,DWORD PTR [eax+0x18]
  415f42:	lea    eax,[eax+ecx*8]
  415f45:	mov    ecx,DWORD PTR [edx]
  415f47:	mov    ebx,DWORD PTR [eax]
  415f49:	mov    DWORD PTR [edx],ebx
  415f4b:	mov    DWORD PTR [eax],ecx
  415f4d:	mov    ecx,DWORD PTR [edx+0x4]
  415f50:	mov    ebx,DWORD PTR [eax+0x4]
  415f53:	mov    DWORD PTR [edx+0x4],ebx
  415f56:	mov    DWORD PTR [eax+0x4],ecx
  415f59:	pop    ebx
  415f5a:	ret    
  415f5b:	nop
  415f5c:	push   ebx
  415f5d:	push   esi
  415f5e:	push   edi
  415f5f:	push   ebp
  415f60:	add    esp,0xffffffec
  415f63:	mov    DWORD PTR [esp+0x4],ecx
  415f67:	mov    DWORD PTR [esp],edx
  415f6a:	mov    edi,eax
  415f6c:	mov    BYTE PTR [esp+0x8],0x0
  415f71:	xor    esi,esi
  415f73:	mov    eax,DWORD PTR [edi+0x1c]
  415f76:	dec    eax
  415f77:	mov    DWORD PTR [esp+0xc],eax
  415f7b:	cmp    esi,DWORD PTR [esp+0xc]
  415f7f:	jg     0x415fca
  415f81:	mov    ebx,DWORD PTR [esp+0xc]
  415f85:	add    ebx,esi
  415f87:	shr    ebx,1
  415f89:	mov    eax,DWORD PTR [edi+0x18]
  415f8c:	mov    edx,DWORD PTR [eax+ebx*8]
  415f8f:	mov    ecx,DWORD PTR [esp]
  415f92:	mov    eax,edi
  415f94:	mov    ebp,DWORD PTR [eax]
  415f96:	call   DWORD PTR [ebp+0x34]
  415f99:	mov    DWORD PTR [esp+0x10],eax
  415f9d:	cmp    DWORD PTR [esp+0x10],0x0
  415fa2:	jge    0x415fa9
  415fa4:	lea    esi,[ebx+0x1]
  415fa7:	jmp    0x415fc4
  415fa9:	mov    eax,ebx
  415fab:	dec    eax
  415fac:	mov    DWORD PTR [esp+0xc],eax
  415fb0:	cmp    DWORD PTR [esp+0x10],0x0
  415fb5:	jne    0x415fc4
  415fb7:	mov    BYTE PTR [esp+0x8],0x1
  415fbc:	cmp    BYTE PTR [edi+0x25],0x1
  415fc0:	je     0x415fc4
  415fc2:	mov    esi,ebx
  415fc4:	cmp    esi,DWORD PTR [esp+0xc]
  415fc8:	jle    0x415f81
  415fca:	mov    eax,DWORD PTR [esp+0x4]
  415fce:	mov    DWORD PTR [eax],esi
  415fd0:	movzx  eax,BYTE PTR [esp+0x8]
  415fd5:	add    esp,0x14
  415fd8:	pop    ebp
  415fd9:	pop    edi
  415fda:	pop    esi
  415fdb:	pop    ebx
  415fdc:	ret    
  415fdd:	lea    eax,[eax+0x0]
  415fe0:	push   ebx
  415fe1:	push   esi
  415fe2:	push   edi
  415fe3:	mov    edi,ecx
  415fe5:	mov    esi,edx
  415fe7:	mov    ebx,eax
  415fe9:	test   esi,esi
  415feb:	jl     0x415ff2
  415fed:	cmp    esi,DWORD PTR [ebx+0x1c]
  415ff0:	jl     0x416001
  415ff2:	mov    edx,DWORD PTR ds:0x46ddb4
  415ff8:	mov    ecx,esi
  415ffa:	mov    eax,ebx
  415ffc:	call   0x414dec
  416001:	mov    eax,edi
  416003:	mov    edx,DWORD PTR [ebx+0x18]
  416006:	mov    edx,DWORD PTR [edx+esi*8]
  416009:	call   0x404fdc
  41600e:	pop    edi
  41600f:	pop    esi
  416010:	pop    ebx
  416011:	ret    
  416012:	mov    eax,eax
  416014:	mov    eax,DWORD PTR [eax+0x20]
  416017:	ret    
  416018:	mov    eax,DWORD PTR [eax+0x1c]
  41601b:	ret    
  41601c:	push   ebx
  41601d:	push   esi
  41601e:	mov    esi,edx
  416020:	mov    ebx,eax
  416022:	test   esi,esi
  416024:	jl     0x41602b
  416026:	cmp    esi,DWORD PTR [ebx+0x1c]
  416029:	jl     0x41603a
  41602b:	mov    edx,DWORD PTR ds:0x46ddb4
  416031:	mov    ecx,esi
  416033:	mov    eax,ebx
  416035:	call   0x414dec
  41603a:	mov    eax,DWORD PTR [ebx+0x18]
  41603d:	mov    eax,DWORD PTR [eax+esi*8+0x4]
  416041:	pop    esi
  416042:	pop    ebx
  416043:	ret    
  416044:	push   esi
  416045:	mov    edx,DWORD PTR [eax+0x20]
  416048:	cmp    edx,0x40
  41604b:	jle    0x41605b
  41604d:	mov    esi,edx
  41604f:	test   esi,esi
  416051:	jns    0x416056
  416053:	add    esi,0x3
  416056:	sar    esi,0x2
  416059:	jmp    0x41606c
  41605b:	cmp    edx,0x8
  41605e:	jle    0x416067
  416060:	mov    esi,0x10
  416065:	jmp    0x41606c
  416067:	mov    esi,0x4
  41606c:	add    esi,edx
  41606e:	mov    edx,esi
  416070:	mov    ecx,DWORD PTR [eax]
  416072:	call   DWORD PTR [ecx+0x28]
  416075:	pop    esi
  416076:	ret    
  416077:	nop
  416078:	push   ebx
  416079:	push   esi
  41607a:	push   ecx
  41607b:	mov    esi,edx
  41607d:	mov    ebx,eax
  41607f:	cmp    BYTE PTR [ebx+0x24],0x0
  416083:	jne    0x416093
  416085:	mov    edx,esi
  416087:	mov    eax,ebx
  416089:	call   0x415230
  41608e:	mov    DWORD PTR [esp],eax
  416091:	jmp    0x4160ac
  416093:	mov    ecx,esp
  416095:	mov    edx,esi
  416097:	mov    eax,ebx
  416099:	mov    ebx,DWORD PTR [eax]
  41609b:	call   DWORD PTR [ebx+0x8c]
  4160a1:	test   al,al
  4160a3:	jne    0x4160ac
  4160a5:	mov    DWORD PTR [esp],0xffffffff
  4160ac:	mov    eax,DWORD PTR [esp]
  4160af:	pop    edx
  4160b0:	pop    esi
  4160b1:	pop    ebx
  4160b2:	ret    
  4160b3:	nop
  4160b4:	push   ebx
  4160b5:	push   esi
  4160b6:	mov    esi,eax
  4160b8:	push   0x0
  4160ba:	mov    eax,esi
  4160bc:	mov    ebx,DWORD PTR [eax]
  4160be:	call   DWORD PTR [ebx+0x64]
  4160c1:	pop    esi
  4160c2:	pop    ebx
  4160c3:	ret    
  4160c4:	push   ebp
  4160c5:	mov    ebp,esp
  4160c7:	push   ebx
  4160c8:	push   esi
  4160c9:	push   edi
  4160ca:	mov    edi,ecx
  4160cc:	mov    esi,edx
  4160ce:	mov    ebx,eax
  4160d0:	cmp    BYTE PTR [ebx+0x24],0x0
  4160d4:	je     0x4160e5
  4160d6:	mov    edx,DWORD PTR ds:0x46dc18
  4160dc:	xor    ecx,ecx
  4160de:	mov    eax,ebx
  4160e0:	call   0x414dec
  4160e5:	test   esi,esi
  4160e7:	jl     0x4160ee
  4160e9:	cmp    esi,DWORD PTR [ebx+0x1c]
  4160ec:	jle    0x4160fd
  4160ee:	mov    edx,DWORD PTR ds:0x46ddb4
  4160f4:	mov    ecx,esi
  4160f6:	mov    eax,ebx
  4160f8:	call   0x414dec
  4160fd:	mov    eax,DWORD PTR [ebp+0x8]
  416100:	push   eax
  416101:	mov    ecx,edi
  416103:	mov    edx,esi
  416105:	mov    eax,ebx
  416107:	mov    ebx,DWORD PTR [eax]
  416109:	call   DWORD PTR [ebx+0x88]
  41610f:	pop    edi
  416110:	pop    esi
  416111:	pop    ebx
  416112:	pop    ebp
  416113:	ret    0x4
  416116:	mov    eax,eax
  416118:	push   ebp
  416119:	mov    ebp,esp
  41611b:	push   ebx
  41611c:	push   esi
  41611d:	push   edi
  41611e:	mov    edi,ecx
  416120:	mov    esi,edx
  416122:	mov    ebx,eax
  416124:	mov    eax,ebx
  416126:	mov    edx,DWORD PTR [eax]
  416128:	call   DWORD PTR [edx+0x84]
  41612e:	mov    eax,DWORD PTR [ebx+0x1c]
  416131:	cmp    eax,DWORD PTR [ebx+0x20]
  416134:	jne    0x41613d
  416136:	mov    eax,ebx
  416138:	call   0x416044
  41613d:	mov    eax,DWORD PTR [ebx+0x1c]
  416140:	cmp    esi,eax
  416142:	jge    0x416164
  416144:	mov    edx,DWORD PTR [ebx+0x18]
  416147:	lea    edx,[edx+esi*8+0x8]
  41614b:	push   edx
  41614c:	mov    edx,DWORD PTR [ebx+0x18]
  41614f:	lea    edx,[edx+esi*8]
  416152:	sub    eax,esi
  416154:	mov    ecx,eax
  416156:	add    ecx,ecx
  416158:	add    ecx,ecx
  41615a:	add    ecx,ecx
  41615c:	mov    eax,edx
  41615e:	pop    edx
  41615f:	call   0x403090
  416164:	mov    eax,DWORD PTR [ebx+0x18]
  416167:	lea    eax,[eax+esi*8]
  41616a:	mov    esi,eax
  41616c:	xor    eax,eax
  41616e:	mov    DWORD PTR [esi],eax
  416170:	mov    eax,DWORD PTR [ebp+0x8]
  416173:	mov    DWORD PTR [esi+0x4],eax
  416176:	mov    eax,esi
  416178:	mov    edx,edi
  41617a:	call   0x404fdc
  41617f:	inc    DWORD PTR [ebx+0x1c]
  416182:	mov    eax,ebx
  416184:	mov    edx,DWORD PTR [eax]
  416186:	call   DWORD PTR [edx+0x80]
  41618c:	pop    edi
  41618d:	pop    esi
  41618e:	pop    ebx
  41618f:	pop    ebp
  416190:	ret    0x4
  416193:	nop
  416194:	push   ebx
  416195:	push   esi
  416196:	push   edi
  416197:	mov    edi,ecx
  416199:	mov    esi,edx
  41619b:	mov    ebx,eax
  41619d:	cmp    BYTE PTR [ebx+0x24],0x0
  4161a1:	je     0x4161b2
  4161a3:	mov    edx,DWORD PTR ds:0x46dc18
  4161a9:	xor    ecx,ecx
  4161ab:	mov    eax,ebx
  4161ad:	call   0x414dec
  4161b2:	test   esi,esi
  4161b4:	jl     0x4161bb
  4161b6:	cmp    esi,DWORD PTR [ebx+0x1c]
  4161b9:	jl     0x4161ca
  4161bb:	mov    edx,DWORD PTR ds:0x46ddb4
  4161c1:	mov    ecx,esi
  4161c3:	mov    eax,ebx
  4161c5:	call   0x414dec
  4161ca:	mov    eax,ebx
  4161cc:	mov    edx,DWORD PTR [eax]
  4161ce:	call   DWORD PTR [edx+0x84]
  4161d4:	mov    eax,DWORD PTR [ebx+0x18]
  4161d7:	lea    eax,[eax+esi*8]
  4161da:	mov    edx,edi
  4161dc:	call   0x404fdc
  4161e1:	mov    eax,ebx
  4161e3:	mov    edx,DWORD PTR [eax]
  4161e5:	call   DWORD PTR [edx+0x80]
  4161eb:	pop    edi
  4161ec:	pop    esi
  4161ed:	pop    ebx
  4161ee:	ret    
  4161ef:	nop
  4161f0:	push   ebx
  4161f1:	push   esi
  4161f2:	push   edi
  4161f3:	mov    edi,ecx
  4161f5:	mov    esi,edx
  4161f7:	mov    ebx,eax
  4161f9:	test   esi,esi
  4161fb:	jl     0x416202
  4161fd:	cmp    esi,DWORD PTR [ebx+0x1c]
  416200:	jl     0x416211
  416202:	mov    edx,DWORD PTR ds:0x46ddb4
  416208:	mov    ecx,esi
  41620a:	mov    eax,ebx
  41620c:	call   0x414dec
  416211:	mov    eax,ebx
  416213:	mov    edx,DWORD PTR [eax]
  416215:	call   DWORD PTR [edx+0x84]
  41621b:	mov    eax,DWORD PTR [ebx+0x18]
  41621e:	mov    DWORD PTR [eax+esi*8+0x4],edi
  416222:	mov    eax,ebx
  416224:	mov    edx,DWORD PTR [eax]
  416226:	call   DWORD PTR [edx+0x80]
  41622c:	pop    edi
  41622d:	pop    esi
  41622e:	pop    ebx
  41622f:	ret    
  416230:	push   ebp
  416231:	mov    ebp,esp
  416233:	add    esp,0xfffffff0
  416236:	push   ebx
  416237:	push   esi
  416238:	mov    DWORD PTR [ebp-0xc],ecx
  41623b:	mov    DWORD PTR [ebp-0x8],edx
  41623e:	mov    DWORD PTR [ebp-0x4],eax
  416241:	mov    ebx,DWORD PTR [ebp-0x8]
  416244:	mov    esi,DWORD PTR [ebp-0xc]
  416247:	mov    eax,DWORD PTR [ebp-0x8]
  41624a:	add    eax,DWORD PTR [ebp-0xc]
  41624d:	shr    eax,1
  41624f:	mov    DWORD PTR [ebp-0x10],eax
  416252:	jmp    0x416255
  416254:	inc    ebx
  416255:	mov    ecx,DWORD PTR [ebp-0x10]
  416258:	mov    edx,ebx
  41625a:	mov    eax,DWORD PTR [ebp-0x4]
  41625d:	call   DWORD PTR [ebp+0x8]
  416260:	test   eax,eax
  416262:	jl     0x416254
  416264:	jmp    0x416267
  416266:	dec    esi
  416267:	mov    ecx,DWORD PTR [ebp-0x10]
  41626a:	mov    edx,esi
  41626c:	mov    eax,DWORD PTR [ebp-0x4]
  41626f:	call   DWORD PTR [ebp+0x8]
  416272:	test   eax,eax
  416274:	jg     0x416266
  416276:	cmp    esi,ebx
  416278:	jl     0x41629a
  41627a:	mov    ecx,esi
  41627c:	mov    edx,ebx
  41627e:	mov    eax,DWORD PTR [ebp-0x4]
  416281:	call   0x415f38
  416286:	cmp    ebx,DWORD PTR [ebp-0x10]
  416289:	jne    0x416290
  41628b:	mov    DWORD PTR [ebp-0x10],esi
  41628e:	jmp    0x416298
  416290:	cmp    esi,DWORD PTR [ebp-0x10]
  416293:	jne    0x416298
  416295:	mov    DWORD PTR [ebp-0x10],ebx
  416298:	inc    ebx
  416299:	dec    esi
  41629a:	cmp    esi,ebx
  41629c:	jge    0x416255
  41629e:	cmp    esi,DWORD PTR [ebp-0x8]
  4162a1:	jle    0x4162b4
  4162a3:	mov    eax,DWORD PTR [ebp+0x8]
  4162a6:	push   eax
  4162a7:	mov    ecx,esi
  4162a9:	mov    edx,DWORD PTR [ebp-0x8]
  4162ac:	mov    eax,DWORD PTR [ebp-0x4]
  4162af:	call   0x416230
  4162b4:	mov    DWORD PTR [ebp-0x8],ebx
  4162b7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4162ba:	jl     0x416241
  4162bc:	pop    esi
  4162bd:	pop    ebx
  4162be:	mov    esp,ebp
  4162c0:	pop    ebp
  4162c1:	ret    0x4
  4162c4:	push   ebx
  4162c5:	push   esi
  4162c6:	mov    esi,edx
  4162c8:	mov    ebx,eax
  4162ca:	mov    edx,esi
  4162cc:	add    edx,edx
  4162ce:	add    edx,edx
  4162d0:	add    edx,edx
  4162d2:	lea    eax,[ebx+0x18]
  4162d5:	call   0x402ed4
  4162da:	mov    DWORD PTR [ebx+0x20],esi
  4162dd:	pop    esi
  4162de:	pop    ebx
  4162df:	ret    
  4162e0:	test   dl,dl
  4162e2:	je     0x4162ed
  4162e4:	mov    edx,DWORD PTR [eax]
  4162e6:	call   DWORD PTR [edx+0x84]
  4162ec:	ret    
  4162ed:	mov    edx,DWORD PTR [eax]
  4162ef:	call   DWORD PTR [edx+0x80]
  4162f5:	ret    
  4162f6:	mov    eax,eax
  4162f8:	push   ebx
  4162f9:	push   esi
  4162fa:	push   edi
  4162fb:	mov    edi,edx
  4162fd:	mov    esi,eax
  4162ff:	mov    eax,DWORD PTR [esi+0x18]
  416302:	mov    ecx,DWORD PTR [eax+ecx*8]
  416305:	mov    eax,DWORD PTR [esi+0x18]
  416308:	mov    edx,DWORD PTR [eax+edi*8]
  41630b:	mov    eax,esi
  41630d:	mov    ebx,DWORD PTR [eax]
  41630f:	call   DWORD PTR [ebx+0x34]
  416312:	pop    edi
  416313:	pop    esi
  416314:	pop    ebx
  416315:	ret    
  416316:	mov    eax,eax
  416318:	mov    edx,0x4162f8
  41631d:	mov    ecx,DWORD PTR [eax]
  41631f:	call   DWORD PTR [ecx+0x94]
  416325:	ret    
  416326:	mov    eax,eax
  416328:	push   ebx
  416329:	push   esi
  41632a:	mov    esi,edx
  41632c:	mov    ebx,eax
  41632e:	cmp    BYTE PTR [ebx+0x24],0x0
  416332:	jne    0x41635c
  416334:	cmp    DWORD PTR [ebx+0x1c],0x1
  416338:	jle    0x41635c
  41633a:	mov    eax,ebx
  41633c:	mov    edx,DWORD PTR [eax]
  41633e:	call   DWORD PTR [edx+0x84]
  416344:	push   esi
  416345:	mov    ecx,DWORD PTR [ebx+0x1c]
  416348:	dec    ecx
  416349:	xor    edx,edx
  41634b:	mov    eax,ebx
  41634d:	call   0x416230
  416352:	mov    eax,ebx
  416354:	mov    edx,DWORD PTR [eax]
  416356:	call   DWORD PTR [edx+0x80]
  41635c:	pop    esi
  41635d:	pop    ebx
  41635e:	ret    
  41635f:	nop
  416360:	push   ebx
  416361:	push   esi
  416362:	push   edi
  416363:	push   ebp
  416364:	mov    ebp,ecx
  416366:	mov    edi,edx
  416368:	cmp    BYTE PTR [eax+0x26],0x0
  41636c:	je     0x4163a7
  41636e:	mov    ebx,edi
  416370:	test   ebx,ebx
  416372:	je     0x416379
  416374:	sub    ebx,0x4
  416377:	mov    ebx,DWORD PTR [ebx]
  416379:	mov    esi,ebp
  41637b:	test   esi,esi
  41637d:	je     0x416384
  41637f:	sub    esi,0x4
  416382:	mov    esi,DWORD PTR [esi]
  416384:	push   esi
  416385:	mov    eax,ebp
  416387:	call   0x405418
  41638c:	push   eax
  41638d:	push   ebx
  41638e:	mov    eax,edi
  416390:	call   0x405418
  416395:	push   eax
  416396:	push   0x0
  416398:	push   0x400
  41639d:	call   0x407148
  4163a2:	sub    eax,0x2
  4163a5:	jmp    0x4163de
  4163a7:	mov    ebx,edi
  4163a9:	test   ebx,ebx
  4163ab:	je     0x4163b2
  4163ad:	sub    ebx,0x4
  4163b0:	mov    ebx,DWORD PTR [ebx]
  4163b2:	mov    esi,ebp
  4163b4:	test   esi,esi
  4163b6:	je     0x4163bd
  4163b8:	sub    esi,0x4
  4163bb:	mov    esi,DWORD PTR [esi]
  4163bd:	push   esi
  4163be:	mov    eax,ebp
  4163c0:	call   0x405418
  4163c5:	push   eax
  4163c6:	push   ebx
  4163c7:	mov    eax,edi
  4163c9:	call   0x405418
  4163ce:	push   eax
  4163cf:	push   0x1
  4163d1:	push   0x400
  4163d6:	call   0x407148
  4163db:	sub    eax,0x2
  4163de:	pop    ebp
  4163df:	pop    edi
  4163e0:	pop    esi
  4163e1:	pop    ebx
  4163e2:	ret    
  4163e3:	nop
  4163e4:	add    esp,0xfffffff8
  4163e7:	push   0x0
  4163e9:	push   0x0
  4163eb:	mov    dl,0x1
  4163ed:	mov    ecx,DWORD PTR [eax]
  4163ef:	call   DWORD PTR [ecx+0x18]
  4163f2:	mov    DWORD PTR [esp],eax
  4163f5:	mov    DWORD PTR [esp+0x4],edx
  4163f9:	mov    eax,DWORD PTR [esp]
  4163fc:	mov    edx,DWORD PTR [esp+0x4]
  416400:	pop    ecx
  416401:	pop    edx
  416402:	ret    
  416403:	nop
  416404:	push   ebp
  416405:	mov    ebp,esp
  416407:	push   DWORD PTR [ebp+0xc]
  41640a:	push   DWORD PTR [ebp+0x8]
  41640d:	xor    edx,edx
  41640f:	mov    ecx,DWORD PTR [eax]
  416411:	call   DWORD PTR [ecx+0x18]
  416414:	pop    ebp
  416415:	ret    0x8
  416418:	push   ebx
  416419:	add    esp,0xfffffff0
  41641c:	mov    ebx,eax
  41641e:	push   0x0
  416420:	push   0x0
  416422:	mov    dl,0x1
  416424:	mov    eax,ebx
  416426:	mov    ecx,DWORD PTR [eax]
  416428:	call   DWORD PTR [ecx+0x18]
  41642b:	mov    DWORD PTR [esp+0x8],eax
  41642f:	mov    DWORD PTR [esp+0xc],edx
  416433:	push   0x0
  416435:	push   0x0
  416437:	mov    dl,0x2
  416439:	mov    eax,ebx
  41643b:	mov    ecx,DWORD PTR [eax]
  41643d:	call   DWORD PTR [ecx+0x18]
  416440:	mov    DWORD PTR [esp],eax
  416443:	mov    DWORD PTR [esp+0x4],edx
  416447:	push   DWORD PTR [esp+0xc]
  41644b:	push   DWORD PTR [esp+0xc]
  41644f:	xor    edx,edx
  416451:	mov    eax,ebx
  416453:	mov    ecx,DWORD PTR [eax]
  416455:	call   DWORD PTR [ecx+0x18]
  416458:	mov    eax,DWORD PTR [esp]
  41645b:	mov    edx,DWORD PTR [esp+0x4]
  41645f:	add    esp,0x10
  416462:	pop    ebx
  416463:	ret    
  416464:	ret    
  416465:	lea    eax,[eax+0x0]
  416468:	push   ebp
  416469:	mov    ebp,esp
  41646b:	push   DWORD PTR [ebp+0xc]
  41646e:	push   DWORD PTR [ebp+0x8]
  416471:	mov    edx,DWORD PTR [eax]
  416473:	call   DWORD PTR [edx+0x8]
  416476:	pop    ebp
  416477:	ret    0x8
  41647a:	mov    eax,eax
  41647c:	push   ebp
  41647d:	mov    ebp,esp
  41647f:	mov    ecx,eax
  416481:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  416485:	jne    0x416492
  416487:	cmp    DWORD PTR [ebp+0x8],0x80000000
  41648e:	jb     0x4164a7
  416490:	jmp    0x416494
  416492:	jl     0x4164a7
  416494:	cmp    DWORD PTR [ebp+0xc],0x0
  416498:	jne    0x4164a5
  41649a:	cmp    DWORD PTR [ebp+0x8],0x7fffffff
  4164a1:	jbe    0x4164be
  4164a3:	jmp    0x4164a7
  4164a5:	jle    0x4164be
  4164a7:	mov    ecx,DWORD PTR ds:0x46de1c
  4164ad:	mov    dl,0x1
  4164af:	mov    eax,ds:0x4079d4
  4164b4:	call   0x40c970
  4164b9:	call   0x4048fc
  4164be:	mov    eax,DWORD PTR [ebp+0x8]
  4164c1:	mov    edx,eax
  4164c3:	mov    eax,ecx
  4164c5:	mov    ecx,DWORD PTR [eax]
  4164c7:	call   DWORD PTR [ecx+0x4]
  4164ca:	pop    ebp
  4164cb:	ret    0x8
  4164ce:	mov    eax,eax
  4164d0:	push   ebp
  4164d1:	mov    ebp,esp
  4164d3:	add    esp,0xfffffef8
  4164d9:	lea    edx,[ebp-0x108]
  4164df:	mov    eax,DWORD PTR [ebp+0x8]
  4164e2:	mov    eax,DWORD PTR [eax-0x4]
  4164e5:	mov    eax,DWORD PTR [eax]
  4164e7:	call   0x403f80
  4164ec:	lea    eax,[ebp-0x108]
  4164f2:	mov    DWORD PTR [ebp-0x8],eax
  4164f5:	mov    BYTE PTR [ebp-0x4],0x4
  4164f9:	lea    eax,[ebp-0x8]
  4164fc:	push   eax
  4164fd:	push   0x0
  4164ff:	mov    ecx,DWORD PTR ds:0x46de54
  416505:	mov    dl,0x1
  416507:	mov    eax,ds:0x4123f8
  41650c:	call   0x40c9ac
  416511:	call   0x4048fc
  416516:	mov    esp,ebp
  416518:	pop    ebp
  416519:	ret    
  41651a:	mov    eax,eax
  41651c:	push   ebp
  41651d:	mov    ebp,esp
  41651f:	add    esp,0xffffffe0
  416522:	push   ebx
  416523:	push   esi
  416524:	mov    WORD PTR [ebp-0x1a],cx
  416528:	mov    esi,edx
  41652a:	mov    DWORD PTR [ebp-0x4],eax
  41652d:	lea    ebx,[ebp-0x20]
  416530:	mov    eax,DWORD PTR [ebp-0x4]
  416533:	mov    DWORD PTR [ebp-0xc],eax
  416536:	mov    eax,DWORD PTR [eax]
  416538:	mov    eax,DWORD PTR [eax+0x18]
  41653b:	mov    DWORD PTR [ebp-0x10],eax
  41653e:	mov    eax,DWORD PTR [ebp-0x4]
  416541:	call   0x403f78
  416546:	mov    DWORD PTR [ebx],eax
  416548:	jmp    0x416553
  41654a:	mov    eax,DWORD PTR [ebx]
  41654c:	call   0x40402c
  416551:	mov    DWORD PTR [ebx],eax
  416553:	cmp    DWORD PTR [ebx],0x0
  416556:	je     0x416562
  416558:	mov    eax,DWORD PTR [ebx]
  41655a:	cmp    eax,DWORD PTR ds:0x412e08
  416560:	jne    0x41654a
  416562:	cmp    DWORD PTR [ebx],0x0
  416565:	jne    0x41656e
  416567:	push   ebp
  416568:	call   0x4164d0
  41656d:	pop    ecx
  41656e:	mov    DWORD PTR [ebp-0x14],ebx
  416571:	mov    eax,DWORD PTR [ebx]
  416573:	mov    eax,DWORD PTR [eax+0x18]
  416576:	mov    DWORD PTR [ebp-0x18],eax
  416579:	mov    eax,DWORD PTR [ebp-0x10]
  41657c:	cmp    eax,DWORD PTR [ebp-0x18]
  41657f:	jne    0x416588
  416581:	push   ebp
  416582:	call   0x4164d0
  416587:	pop    ecx
  416588:	mov    eax,esi
  41658a:	cdq    
  41658b:	push   edx
  41658c:	push   eax
  41658d:	movzx  edx,BYTE PTR [ebp-0x1a]
  416591:	mov    eax,DWORD PTR [ebp-0x4]
  416594:	mov    ecx,DWORD PTR [eax]
  416596:	call   DWORD PTR [ecx+0x18]
  416599:	pop    esi
  41659a:	pop    ebx
  41659b:	mov    esp,ebp
  41659d:	pop    ebp
  41659e:	ret    
  41659f:	nop
  4165a0:	push   ebp
  4165a1:	mov    ebp,esp
  4165a3:	add    esp,0xfffffff8
  4165a6:	push   ebx
  4165a7:	push   esi
  4165a8:	mov    ebx,edx
  4165aa:	mov    esi,eax
  4165ac:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  4165b0:	jne    0x4165bd
  4165b2:	cmp    DWORD PTR [ebp+0x8],0x80000000
  4165b9:	jb     0x4165d2
  4165bb:	jmp    0x4165bf
  4165bd:	jl     0x4165d2
  4165bf:	cmp    DWORD PTR [ebp+0xc],0x0
  4165c3:	jne    0x4165d0
  4165c5:	cmp    DWORD PTR [ebp+0x8],0x7fffffff
  4165cc:	jbe    0x4165e9
  4165ce:	jmp    0x4165d2
  4165d0:	jle    0x4165e9
  4165d2:	mov    ecx,DWORD PTR ds:0x46de1c
  4165d8:	mov    dl,0x1
  4165da:	mov    eax,ds:0x4079d4
  4165df:	call   0x40c970
  4165e4:	call   0x4048fc
  4165e9:	mov    eax,DWORD PTR [ebp+0x8]
  4165ec:	mov    edx,eax
  4165ee:	movzx  ecx,bl
  4165f1:	mov    eax,esi
  4165f3:	mov    ebx,DWORD PTR [eax]
  4165f5:	call   DWORD PTR [ebx+0x14]
  4165f8:	cdq    
  4165f9:	mov    DWORD PTR [ebp-0x8],eax
  4165fc:	mov    DWORD PTR [ebp-0x4],edx
  4165ff:	mov    eax,DWORD PTR [ebp-0x8]
  416602:	mov    edx,DWORD PTR [ebp-0x4]
  416605:	pop    esi
  416606:	pop    ebx
  416607:	pop    ecx
  416608:	pop    ecx
  416609:	pop    ebp
  41660a:	ret    0x8
  41660d:	lea    eax,[eax+0x0]
  416610:	push   ebx
  416611:	push   esi
  416612:	push   edi
  416613:	mov    ebx,ecx
  416615:	mov    edi,edx
  416617:	mov    esi,eax
  416619:	test   ebx,ebx
  41661b:	je     0x416643
  41661d:	mov    edx,edi
  41661f:	mov    ecx,ebx
  416621:	mov    eax,esi
  416623:	mov    esi,DWORD PTR [eax]
  416625:	call   DWORD PTR [esi+0x10]
  416628:	cmp    ebx,eax
  41662a:	je     0x416643
  41662c:	mov    ecx,DWORD PTR ds:0x46dc88
  416632:	mov    dl,0x1
  416634:	mov    eax,ds:0x412618
  416639:	call   0x40c970
  41663e:	call   0x4048fc
  416643:	pop    edi
  416644:	pop    esi
  416645:	pop    ebx
  416646:	ret    
  416647:	nop
  416648:	push   ebx
  416649:	push   esi
  41664a:	push   edi
  41664b:	test   dl,dl
  41664d:	je     0x416657
  41664f:	add    esp,0xfffffff0
  416652:	call   0x4043ac
  416657:	mov    esi,ecx
  416659:	mov    ebx,edx
  41665b:	mov    edi,eax
  41665d:	xor    edx,edx
  41665f:	mov    eax,edi
  416661:	call   0x404070
  416666:	mov    DWORD PTR [edi+0x4],esi
  416669:	mov    eax,edi
  41666b:	test   bl,bl
  41666d:	je     0x41667e
  41666f:	call   0x404404
  416674:	pop    DWORD PTR fs:0x0
  41667b:	add    esp,0xc
  41667e:	mov    eax,edi
  416680:	pop    edi
  416681:	pop    esi
  416682:	pop    ebx
  416683:	ret    
  416684:	mov    eax,DWORD PTR [eax+0x4]
  416687:	call   0x408e24
  41668c:	cmp    eax,0xffffffff
  41668f:	jne    0x416693
  416691:	xor    eax,eax
  416693:	ret    
  416694:	mov    eax,DWORD PTR [eax+0x4]
  416697:	call   0x408e50
  41669c:	cmp    eax,0xffffffff
  41669f:	jne    0x4166a3
  4166a1:	xor    eax,eax
  4166a3:	ret    
  4166a4:	push   ebp
  4166a5:	mov    ebp,esp
  4166a7:	add    esp,0xfffffff8
  4166aa:	push   DWORD PTR [ebp+0xc]
  4166ad:	push   DWORD PTR [ebp+0x8]
  4166b0:	and    edx,0x7f
  4166b3:	mov    eax,DWORD PTR [eax+0x4]
  4166b6:	call   0x408e7c
  4166bb:	mov    DWORD PTR [ebp-0x8],eax
  4166be:	mov    DWORD PTR [ebp-0x4],edx
  4166c1:	mov    eax,DWORD PTR [ebp-0x8]
  4166c4:	mov    edx,DWORD PTR [ebp-0x4]
  4166c7:	pop    ecx
  4166c8:	pop    ecx
  4166c9:	pop    ebp
  4166ca:	ret    0x8
  4166cd:	lea    eax,[eax+0x0]
  4166d0:	push   ebx
  4166d1:	mov    ebx,edx
  4166d3:	mov    ecx,eax
  4166d5:	mov    eax,ebx
  4166d7:	cdq    
  4166d8:	push   edx
  4166d9:	push   eax
  4166da:	mov    eax,ecx
  4166dc:	mov    edx,DWORD PTR [eax]
  4166de:	call   DWORD PTR [edx+0x8]
  4166e1:	pop    ebx
  4166e2:	ret    
  4166e3:	nop
  4166e4:	push   ebp
  4166e5:	mov    ebp,esp
  4166e7:	push   ebx
  4166e8:	mov    ebx,eax
  4166ea:	push   DWORD PTR [ebp+0xc]
  4166ed:	push   DWORD PTR [ebp+0x8]
  4166f0:	xor    edx,edx
  4166f2:	mov    eax,ebx
  4166f4:	mov    ecx,DWORD PTR [eax]
  4166f6:	call   DWORD PTR [ecx+0x18]
  4166f9:	mov    eax,DWORD PTR [ebx+0x4]
  4166fc:	push   eax
  4166fd:	call   0x4072e8
  416702:	call   0x40de60
  416707:	pop    ebx
  416708:	pop    ebp
  416709:	ret    0x8
  41670c:	push   ebp
  41670d:	mov    ebp,esp
  41670f:	push   ebx
  416710:	push   esi
  416711:	test   dl,dl
  416713:	je     0x41671d
  416715:	add    esp,0xfffffff0
  416718:	call   0x4043ac
  41671d:	mov    ebx,edx
  41671f:	mov    esi,eax
  416721:	movzx  eax,WORD PTR [ebp+0x8]
  416725:	push   eax
  416726:	push   0x0
  416728:	xor    edx,edx
  41672a:	mov    eax,esi
  41672c:	call   0x416750
  416731:	mov    eax,esi
  416733:	test   bl,bl
  416735:	je     0x416746
  416737:	call   0x404404
  41673c:	pop    DWORD PTR fs:0x0
  416743:	add    esp,0xc
  416746:	mov    eax,esi
  416748:	pop    esi
  416749:	pop    ebx
  41674a:	pop    ebp
  41674b:	ret    0x4
  41674e:	mov    eax,eax
  416750:	push   ebp
  416751:	mov    ebp,esp
  416753:	add    esp,0xffffffdc
  416756:	push   ebx
  416757:	push   esi
  416758:	push   edi
  416759:	xor    ebx,ebx
  41675b:	mov    DWORD PTR [ebp-0x20],ebx
  41675e:	mov    DWORD PTR [ebp-0x24],ebx
  416761:	mov    DWORD PTR [ebp-0x18],ebx
  416764:	mov    DWORD PTR [ebp-0x1c],ebx
  416767:	test   dl,dl
  416769:	je     0x416773
  41676b:	add    esp,0xfffffff0
  41676e:	call   0x4043ac
  416773:	mov    esi,ecx
  416775:	mov    BYTE PTR [ebp-0x1],dl
  416778:	mov    ebx,eax
  41677a:	mov    edi,DWORD PTR [ebp+0xc]
  41677d:	xor    eax,eax
  41677f:	push   ebp
  416780:	push   0x416898
  416785:	push   DWORD PTR fs:[eax]
  416788:	mov    DWORD PTR fs:[eax],esp
  41678b:	cmp    di,0xffff
  416790:	jne    0x416810
  416792:	push   0x0
  416794:	push   0x80
  416799:	push   0x2
  41679b:	push   0x0
  41679d:	push   0x0
  41679f:	push   0xc0000000
  4167a4:	mov    eax,esi
  4167a6:	call   0x405418
  4167ab:	push   eax
  4167ac:	call   0x407168
  4167b1:	mov    ecx,eax
  4167b3:	xor    edx,edx
  4167b5:	mov    eax,ebx
  4167b7:	call   0x416648
  4167bc:	cmp    DWORD PTR [ebx+0x4],0x0
  4167c0:	jge    0x416873
  4167c6:	lea    edx,[ebp-0x18]
  4167c9:	mov    eax,esi
  4167cb:	call   0x4090d8
  4167d0:	mov    eax,DWORD PTR [ebp-0x18]
  4167d3:	mov    DWORD PTR [ebp-0x14],eax
  4167d6:	mov    BYTE PTR [ebp-0x10],0xb
  4167da:	call   0x407230
  4167df:	lea    edx,[ebp-0x1c]
  4167e2:	call   0x40c0a0
  4167e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4167ea:	mov    DWORD PTR [ebp-0xc],eax
  4167ed:	mov    BYTE PTR [ebp-0x8],0xb
  4167f1:	lea    eax,[ebp-0x14]
  4167f4:	push   eax
  4167f5:	push   0x1
  4167f7:	mov    ecx,DWORD PTR ds:0x46deac
  4167fd:	mov    dl,0x1
  4167ff:	mov    eax,ds:0x4124b4
  416804:	call   0x40c9ac
  416809:	call   0x4048fc
  41680e:	jmp    0x416873
  416810:	movzx  edx,di
  416813:	mov    eax,esi
  416815:	call   0x408dcc
  41681a:	mov    ecx,eax
  41681c:	xor    edx,edx
  41681e:	mov    eax,ebx
  416820:	call   0x416648
  416825:	cmp    DWORD PTR [ebx+0x4],0x0
  416829:	jge    0x416873
  41682b:	lea    edx,[ebp-0x20]
  41682e:	mov    eax,esi
  416830:	call   0x4090d8
  416835:	mov    eax,DWORD PTR [ebp-0x20]
  416838:	mov    DWORD PTR [ebp-0x14],eax
  41683b:	mov    BYTE PTR [ebp-0x10],0xb
  41683f:	call   0x407230
  416844:	lea    edx,[ebp-0x24]
  416847:	call   0x40c0a0
  41684c:	mov    eax,DWORD PTR [ebp-0x24]
  41684f:	mov    DWORD PTR [ebp-0xc],eax
  416852:	mov    BYTE PTR [ebp-0x8],0xb
  416856:	lea    eax,[ebp-0x14]
  416859:	push   eax
  41685a:	push   0x1
  41685c:	mov    ecx,DWORD PTR ds:0x46da28
  416862:	mov    dl,0x1
  416864:	mov    eax,ds:0x412510
  416869:	call   0x40c9ac
  41686e:	call   0x4048fc
  416873:	lea    eax,[ebx+0x8]
  416876:	mov    edx,esi
  416878:	call   0x404fdc
  41687d:	xor    eax,eax
  41687f:	pop    edx
  416880:	pop    ecx
  416881:	pop    ecx
  416882:	mov    DWORD PTR fs:[eax],edx
  416885:	push   0x41689f
  41688a:	lea    eax,[ebp-0x24]
  41688d:	mov    edx,0x4
  416892:	call   0x404fac
  416897:	ret    
  416898:	jmp    0x40481c
  41689d:	jmp    0x41688a
  41689f:	mov    eax,ebx
  4168a1:	cmp    BYTE PTR [ebp-0x1],0x0
  4168a5:	je     0x4168b6
  4168a7:	call   0x404404
  4168ac:	pop    DWORD PTR fs:0x0
  4168b3:	add    esp,0xc
  4168b6:	mov    eax,ebx
  4168b8:	pop    edi
  4168b9:	pop    esi
  4168ba:	pop    ebx
  4168bb:	mov    esp,ebp
  4168bd:	pop    ebp
  4168be:	ret    0x8
  4168c1:	lea    eax,[eax+0x0]
  4168c4:	push   ebx
  4168c5:	push   esi
  4168c6:	call   0x404454
  4168cb:	mov    ebx,edx
  4168cd:	mov    esi,eax
  4168cf:	mov    eax,DWORD PTR [esi+0x4]
  4168d2:	test   eax,eax
  4168d4:	jl     0x4168dc
  4168d6:	push   eax
  4168d7:	call   0x407140
  4168dc:	mov    edx,ebx
  4168de:	and    dl,0xfc
  4168e1:	mov    eax,esi
  4168e3:	call   0x404090
  4168e8:	test   bl,bl
  4168ea:	jle    0x4168f3
  4168ec:	mov    eax,esi
  4168ee:	call   0x4043fc
  4168f3:	pop    esi
  4168f4:	pop    ebx
  4168f5:	ret    
  4168f6:	mov    eax,eax
  4168f8:	mov    DWORD PTR [eax+0x4],edx
  4168fb:	mov    DWORD PTR [eax+0x8],ecx
  4168fe:	ret    
  4168ff:	nop
  416900:	push   ebx
  416901:	push   esi
  416902:	push   edi
  416903:	mov    ebx,eax
  416905:	mov    edi,DWORD PTR [ebx+0xc]
  416908:	test   edi,edi
  41690a:	jl     0x416930
  41690c:	test   ecx,ecx
  41690e:	jl     0x416930
  416910:	mov    esi,DWORD PTR [ebx+0x8]
  416913:	sub    esi,edi
  416915:	test   esi,esi
  416917:	jle    0x416930
  416919:	cmp    ecx,esi
  41691b:	jge    0x41691f
  41691d:	mov    esi,ecx
  41691f:	mov    eax,DWORD PTR [ebx+0x4]
  416922:	add    eax,edi
  416924:	mov    ecx,esi
  416926:	call   0x403090
  41692b:	add    DWORD PTR [ebx+0xc],esi
  41692e:	jmp    0x416932
  416930:	xor    esi,esi
  416932:	mov    eax,esi
  416934:	pop    edi
  416935:	pop    esi
  416936:	pop    ebx
  416937:	ret    
  416938:	sub    cx,0x1
  41693c:	jb     0x416947
  41693e:	je     0x41694c
  416940:	dec    cx
  416943:	je     0x416951
  416945:	jmp    0x416957
  416947:	mov    DWORD PTR [eax+0xc],edx
  41694a:	jmp    0x416957
  41694c:	add    DWORD PTR [eax+0xc],edx
  41694f:	jmp    0x416957
  416951:	add    edx,DWORD PTR [eax+0x8]
  416954:	mov    DWORD PTR [eax+0xc],edx
  416957:	mov    eax,DWORD PTR [eax+0xc]
  41695a:	ret    
  41695b:	nop
  41695c:	push   ebx
  41695d:	push   esi
  41695e:	call   0x404454
  416963:	mov    ebx,edx
  416965:	mov    esi,eax
  416967:	mov    eax,esi
  416969:	call   0x416988
  41696e:	mov    edx,ebx
  416970:	and    dl,0xfc
  416973:	mov    eax,esi
  416975:	call   0x404090
  41697a:	test   bl,bl
  41697c:	jle    0x416985
  41697e:	mov    eax,esi
  416980:	call   0x4043fc
  416985:	pop    esi
  416986:	pop    ebx
  416987:	ret    
  416988:	push   ebx
  416989:	mov    ebx,eax
  41698b:	xor    edx,edx
  41698d:	mov    eax,ebx
  41698f:	call   0x4169a0
  416994:	xor    eax,eax
  416996:	mov    DWORD PTR [ebx+0x8],eax
  416999:	xor    eax,eax
  41699b:	mov    DWORD PTR [ebx+0xc],eax
  41699e:	pop    ebx
  41699f:	ret    
  4169a0:	push   ebx
  4169a1:	push   ecx
  4169a2:	mov    DWORD PTR [esp],edx
  4169a5:	mov    ebx,eax
  4169a7:	mov    edx,esp
  4169a9:	mov    eax,ebx
  4169ab:	mov    ecx,DWORD PTR [eax]
  4169ad:	call   DWORD PTR [ecx+0x1c]
  4169b0:	mov    edx,eax
  4169b2:	mov    ecx,DWORD PTR [ebx+0x8]
  4169b5:	mov    eax,ebx
  4169b7:	call   0x4168f8
  4169bc:	mov    eax,DWORD PTR [esp]
  4169bf:	mov    DWORD PTR [ebx+0x10],eax
  4169c2:	pop    edx
  4169c3:	pop    ebx
  4169c4:	ret    
  4169c5:	lea    eax,[eax+0x0]
  4169c8:	push   ebx
  4169c9:	push   esi
  4169ca:	push   edi
  4169cb:	mov    esi,edx
  4169cd:	mov    ebx,eax
  4169cf:	mov    edi,DWORD PTR [ebx+0xc]
  4169d2:	mov    edx,esi
  4169d4:	mov    eax,ebx
  4169d6:	call   0x4169a0
  4169db:	mov    DWORD PTR [ebx+0x8],esi
  4169de:	cmp    esi,edi
  4169e0:	jge    0x4169ef
  4169e2:	mov    cx,0x2
  4169e6:	xor    edx,edx
  4169e8:	mov    eax,ebx
  4169ea:	mov    ebx,DWORD PTR [eax]
  4169ec:	call   DWORD PTR [ebx+0x14]
  4169ef:	pop    edi
  4169f0:	pop    esi
  4169f1:	pop    ebx
  4169f2:	ret    
  4169f3:	nop
  4169f4:	push   ebx
  4169f5:	push   ecx
  4169f6:	mov    ebx,edx
  4169f8:	cmp    DWORD PTR [ebx],0x0
  4169fb:	jle    0x416a14
  4169fd:	mov    edx,DWORD PTR [ebx]
  4169ff:	cmp    edx,DWORD PTR [eax+0x8]
  416a02:	je     0x416a14
  416a04:	mov    edx,DWORD PTR [ebx]
  416a06:	add    edx,0x1fff
  416a0c:	and    edx,0xffffe000
  416a12:	mov    DWORD PTR [ebx],edx
  416a14:	mov    edx,DWORD PTR [eax+0x4]
  416a17:	mov    DWORD PTR [esp],edx
  416a1a:	mov    ecx,DWORD PTR [ebx]
  416a1c:	mov    edx,DWORD PTR [eax+0x10]
  416a1f:	cmp    ecx,edx
  416a21:	je     0x416a6d
  416a23:	cmp    DWORD PTR [ebx],0x0
  416a26:	jne    0x416a37
  416a28:	mov    eax,DWORD PTR [eax+0x4]
  416a2b:	call   0x402ebc
  416a30:	xor    eax,eax
  416a32:	mov    DWORD PTR [esp],eax
  416a35:	jmp    0x416a6d
  416a37:	test   edx,edx
  416a39:	jne    0x416a47
  416a3b:	mov    eax,DWORD PTR [ebx]
  416a3d:	call   0x402ea0
  416a42:	mov    DWORD PTR [esp],eax
  416a45:	jmp    0x416a50
  416a47:	mov    edx,DWORD PTR [ebx]
  416a49:	mov    eax,esp
  416a4b:	call   0x402ed4
  416a50:	cmp    DWORD PTR [esp],0x0
  416a54:	jne    0x416a6d
  416a56:	mov    ecx,DWORD PTR ds:0x46de48
  416a5c:	mov    dl,0x1
  416a5e:	mov    eax,ds:0x4123f8
  416a63:	call   0x40c970
  416a68:	call   0x4048fc
  416a6d:	mov    eax,DWORD PTR [esp]
  416a70:	pop    edx
  416a71:	pop    ebx
  416a72:	ret    
  416a73:	nop
  416a74:	push   ebx
  416a75:	push   esi
  416a76:	push   edi
  416a77:	push   ebp
  416a78:	mov    esi,ecx
  416a7a:	mov    ebp,edx
  416a7c:	mov    ebx,eax
  416a7e:	mov    eax,DWORD PTR [ebx+0xc]
  416a81:	test   eax,eax
  416a83:	jl     0x416abd
  416a85:	test   esi,esi
  416a87:	jl     0x416abd
  416a89:	mov    edi,eax
  416a8b:	add    edi,esi
  416a8d:	test   edi,edi
  416a8f:	jle    0x416abd
  416a91:	cmp    edi,DWORD PTR [ebx+0x8]
  416a94:	jle    0x416aa7
  416a96:	cmp    edi,DWORD PTR [ebx+0x10]
  416a99:	jle    0x416aa4
  416a9b:	mov    edx,edi
  416a9d:	mov    eax,ebx
  416a9f:	call   0x4169a0
  416aa4:	mov    DWORD PTR [ebx+0x8],edi
  416aa7:	mov    edx,DWORD PTR [ebx+0x4]
  416aaa:	add    edx,DWORD PTR [ebx+0xc]
  416aad:	mov    eax,ebp
  416aaf:	mov    ecx,esi
  416ab1:	call   0x403090
  416ab6:	mov    DWORD PTR [ebx+0xc],edi
  416ab9:	mov    eax,esi
  416abb:	jmp    0x416abf
  416abd:	xor    eax,eax
  416abf:	pop    ebp
  416ac0:	pop    edi
  416ac1:	pop    esi
  416ac2:	pop    ebx
  416ac3:	ret    
  416ac4:	push   ebx
  416ac5:	push   esi
  416ac6:	push   edi
  416ac7:	test   dl,dl
  416ac9:	je     0x416ad3
  416acb:	add    esp,0xfffffff0
  416ace:	call   0x4043ac
  416ad3:	mov    esi,ecx
  416ad5:	mov    ebx,edx
  416ad7:	mov    edi,eax
  416ad9:	xor    edx,edx
  416adb:	mov    eax,edi
  416add:	call   0x404070
  416ae2:	lea    eax,[edi+0x4]
  416ae5:	mov    edx,esi
  416ae7:	call   0x404fdc
  416aec:	mov    eax,edi
  416aee:	test   bl,bl
  416af0:	je     0x416b01
  416af2:	call   0x404404
  416af7:	pop    DWORD PTR fs:0x0
  416afe:	add    esp,0xc
  416b01:	mov    eax,edi
  416b03:	pop    edi
  416b04:	pop    esi
  416b05:	pop    ebx
  416b06:	ret    
  416b07:	nop
  416b08:	push   ebx
  416b09:	push   esi
  416b0a:	push   edi
  416b0b:	mov    edi,edx
  416b0d:	mov    ebx,eax
  416b0f:	mov    eax,DWORD PTR [ebx+0x4]
  416b12:	test   eax,eax
  416b14:	je     0x416b1b
  416b16:	sub    eax,0x4
  416b19:	mov    eax,DWORD PTR [eax]
  416b1b:	mov    esi,eax
  416b1d:	sub    esi,DWORD PTR [ebx+0x8]
  416b20:	cmp    ecx,esi
  416b22:	jge    0x416b26
  416b24:	mov    esi,ecx
  416b26:	lea    eax,[ebx+0x4]
  416b29:	call   0x405478
  416b2e:	mov    edx,DWORD PTR [ebx+0x8]
  416b31:	add    eax,edx
  416b33:	mov    edx,edi
  416b35:	mov    ecx,esi
  416b37:	call   0x403090
  416b3c:	add    DWORD PTR [ebx+0x8],esi
  416b3f:	mov    eax,esi
  416b41:	pop    edi
  416b42:	pop    esi
  416b43:	pop    ebx
  416b44:	ret    
  416b45:	lea    eax,[eax+0x0]
  416b48:	push   ebx
  416b49:	push   esi
  416b4a:	push   edi
  416b4b:	mov    edi,edx
  416b4d:	mov    ebx,eax
  416b4f:	mov    esi,ecx
  416b51:	mov    edx,DWORD PTR [ebx+0x8]
  416b54:	add    edx,esi
  416b56:	lea    eax,[ebx+0x4]
  416b59:	call   0x4056a8
  416b5e:	lea    eax,[ebx+0x4]
  416b61:	call   0x405478
  416b66:	mov    edx,DWORD PTR [ebx+0x8]
  416b69:	lea    edx,[eax+edx*1]
  416b6c:	mov    eax,edi
  416b6e:	mov    ecx,esi
  416b70:	call   0x403090
  416b75:	add    DWORD PTR [ebx+0x8],esi
  416b78:	mov    eax,esi
  416b7a:	pop    edi
  416b7b:	pop    esi
  416b7c:	pop    ebx
  416b7d:	ret    
  416b7e:	mov    eax,eax
  416b80:	push   ebx
  416b81:	sub    cx,0x1
  416b85:	jb     0x416b90
  416b87:	je     0x416b95
  416b89:	dec    cx
  416b8c:	je     0x416b9a
  416b8e:	jmp    0x416bab
  416b90:	mov    DWORD PTR [eax+0x8],edx
  416b93:	jmp    0x416bab
  416b95:	add    DWORD PTR [eax+0x8],edx
  416b98:	jmp    0x416bab
  416b9a:	mov    ecx,DWORD PTR [eax+0x4]
  416b9d:	test   ecx,ecx
  416b9f:	je     0x416ba6
  416ba1:	sub    ecx,0x4
  416ba4:	mov    ecx,DWORD PTR [ecx]
  416ba6:	sub    ecx,edx
  416ba8:	mov    DWORD PTR [eax+0x8],ecx
  416bab:	mov    ecx,DWORD PTR [eax+0x4]
  416bae:	mov    edx,ecx
  416bb0:	test   edx,edx
  416bb2:	je     0x416bb9
  416bb4:	sub    edx,0x4
  416bb7:	mov    edx,DWORD PTR [edx]
  416bb9:	mov    ebx,DWORD PTR [eax+0x8]
  416bbc:	cmp    edx,ebx
  416bbe:	jge    0x416bd0
  416bc0:	mov    edx,ecx
  416bc2:	test   edx,edx
  416bc4:	je     0x416bcb
  416bc6:	sub    edx,0x4
  416bc9:	mov    edx,DWORD PTR [edx]
  416bcb:	mov    DWORD PTR [eax+0x8],edx
  416bce:	jmp    0x416bd9
  416bd0:	test   ebx,ebx
  416bd2:	jge    0x416bd9
  416bd4:	xor    edx,edx
  416bd6:	mov    DWORD PTR [eax+0x8],edx
  416bd9:	mov    eax,DWORD PTR [eax+0x8]
  416bdc:	pop    ebx
  416bdd:	ret    
  416bde:	mov    eax,eax
  416be0:	push   ebx
  416be1:	push   esi
  416be2:	mov    esi,edx
  416be4:	mov    ebx,eax
  416be6:	lea    eax,[ebx+0x4]
  416be9:	mov    edx,esi
  416beb:	call   0x4056a8
  416bf0:	cmp    esi,DWORD PTR [ebx+0x8]
  416bf3:	jge    0x416bf8
  416bf5:	mov    DWORD PTR [ebx+0x8],esi
  416bf8:	pop    esi
  416bf9:	pop    ebx
  416bfa:	ret    
  416bfb:	nop
  416bfc:	push   ebp
  416bfd:	mov    ebp,esp
  416bff:	push   ebx
  416c00:	push   esi
  416c01:	push   edi
  416c02:	test   dl,dl
  416c04:	je     0x416c0e
  416c06:	add    esp,0xfffffff0
  416c09:	call   0x4043ac
  416c0e:	mov    ebx,edx
  416c10:	mov    edi,eax
  416c12:	mov    esi,DWORD PTR [ebp+0x8]
  416c15:	mov    DWORD PTR [edi+0x4],ecx
  416c18:	mov    eax,esi
  416c1a:	call   0x402ea0
  416c1f:	mov    DWORD PTR [edi+0x8],eax
  416c22:	mov    DWORD PTR [edi+0xc],esi
  416c25:	mov    eax,edi
  416c27:	test   bl,bl
  416c29:	je     0x416c3a
  416c2b:	call   0x404404
  416c30:	pop    DWORD PTR fs:0x0
  416c37:	add    esp,0xc
  416c3a:	mov    eax,edi
  416c3c:	pop    edi
  416c3d:	pop    esi
  416c3e:	pop    ebx
  416c3f:	pop    ebp
  416c40:	ret    0x4
  416c43:	nop
  416c44:	push   ebx
  416c45:	push   esi
  416c46:	call   0x404454
  416c4b:	mov    ebx,edx
  416c4d:	mov    esi,eax
  416c4f:	mov    eax,DWORD PTR [esi+0x8]
  416c52:	test   eax,eax
  416c54:	je     0x416c5e
  416c56:	mov    edx,DWORD PTR [esi+0xc]
  416c59:	call   0x402ebc
  416c5e:	test   bl,bl
  416c60:	jle    0x416c69
  416c62:	mov    eax,esi
  416c64:	call   0x4043fc
  416c69:	pop    esi
  416c6a:	pop    ebx
  416c6b:	ret    
  416c6c:	mov    DWORD PTR [eax+0x18],edx
  416c6f:	ret    
  416c70:	mov    esp,0x416c
  416c75:	add    BYTE PTR [eax],al
  416c77:	add    BYTE PTR [eax],al
  416c79:	add    BYTE PTR [eax],al
  416c7b:	add    al,al
  416c7d:	ins    BYTE PTR es:[edi],dx
  416c7e:	inc    ecx
	...
  416c8f:	add    dl,bl
  416c91:	ins    BYTE PTR es:[edi],dx
  416c92:	inc    ecx
  416c93:	add    BYTE PTR [eax],bl
  416c95:	add    BYTE PTR [eax],al
  416c97:	add    BYTE PTR [eax-0x2fffbff0],dl
  416c9d:	inc    edx
  416c9e:	inc    eax
  416c9f:	add    ah,bl
  416ca1:	inc    edx
  416ca2:	inc    eax
  416ca3:	add    al,ah
  416ca5:	inc    edx
  416ca6:	inc    eax
  416ca7:	add    ah,ah
  416ca9:	inc    edx
  416caa:	inc    eax
  416cab:	add    al,bl
  416cad:	inc    edx
  416cae:	inc    eax
  416caf:	add    BYTE PTR [eax],bh
  416cb1:	inc    eax
  416cb2:	inc    eax
  416cb3:	add    BYTE PTR [eax+eax*2+0x40],dl
  416cb7:	add    BYTE PTR [eax-0x17ffbfc0],dl
  416cbd:	ins    DWORD PTR es:[edi],dx
  416cbe:	inc    ecx
  416cbf:	add    BYTE PTR [esi],cl
  416cc1:	add    BYTE PTR [eax],al
  416cc3:	add    BYTE PTR [eax],al
  416cc5:	add    BYTE PTR [edx],al
  416cc7:	add    BYTE PTR [eax],al
  416cc9:	add    BYTE PTR [eax+edx*1+0x100040],al
  416cd0:	add    BYTE PTR [eax],al
  416cd2:	test   BYTE PTR [eax],dl
  416cd4:	inc    eax
  416cd5:	add    BYTE PTR [eax+eax*1],dl
  416cd8:	add    BYTE PTR [eax],al
  416cda:	or     dl,BYTE PTR [eax+edx*2+0x72]
  416cde:	outs   dx,DWORD PTR ds:[esi]
  416cdf:	jo     0x416d27
  416ce1:	imul   edi,DWORD PTR [eax+0x75],0x408d70
  416ce8:	xor    al,0x6d
  416cea:	inc    ecx
	...
  416d07:	add    BYTE PTR [eax],bh
  416d09:	ins    DWORD PTR es:[edi],dx
  416d0a:	inc    ecx
  416d0b:	add    BYTE PTR [eax],bl
  416d0d:	add    BYTE PTR [eax],al
  416d0f:	add    BYTE PTR [eax+0x6c],dh
  416d12:	inc    ecx
  416d13:	add    al,dl
  416d15:	inc    edx
  416d16:	inc    eax
  416d17:	add    ah,bl
  416d19:	inc    edx
  416d1a:	inc    eax
  416d1b:	add    al,ah
  416d1d:	inc    edx
  416d1e:	inc    eax
  416d1f:	add    ah,ah
  416d21:	inc    edx
  416d22:	inc    eax
  416d23:	add    al,bl
  416d25:	inc    edx
  416d26:	inc    eax
  416d27:	add    BYTE PTR [eax],bh
  416d29:	inc    eax
  416d2a:	inc    eax
  416d2b:	add    BYTE PTR [eax+eax*2+0x40],dl
  416d2f:	add    BYTE PTR [eax-0x7ffbfc0],dl
  416d35:	ins    DWORD PTR es:[edi],dx
  416d36:	inc    ecx
  416d37:	add    BYTE PTR [esi],cl
  416d39:	push   esp
  416d3a:	push   eax
  416d3b:	jb     0x416dac
  416d3d:	jo     0x416d88
  416d3f:	outs   dx,BYTE PTR ds:[esi]
  416d40:	je     0x416da8
  416d42:	inc    esi
  416d43:	imul   edi,DWORD PTR [eax+0x75],0x8b559070
  416d4a:	in     al,dx
  416d4b:	push   ebx
  416d4c:	push   esi
  416d4d:	test   dl,dl
  416d4f:	je     0x416d59
  416d51:	add    esp,0xfffffff0
  416d54:	call   0x4043ac
  416d59:	mov    ebx,edx
  416d5b:	mov    esi,eax
  416d5d:	mov    DWORD PTR [esi+0x4],ecx
  416d60:	mov    eax,DWORD PTR [ebp+0x14]
  416d63:	mov    DWORD PTR [esi+0x8],eax
  416d66:	mov    eax,DWORD PTR [ebp+0x10]
  416d69:	mov    DWORD PTR [esi+0xc],eax
  416d6c:	lea    eax,[esi+0x10]
  416d6f:	mov    edx,DWORD PTR [ebp+0xc]
  416d72:	call   0x404fdc
  416d77:	lea    eax,[esi+0x14]
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	call   0x404fdc
  416d82:	mov    eax,esi
  416d84:	test   bl,bl
  416d86:	je     0x416d97
  416d88:	call   0x404404
  416d8d:	pop    DWORD PTR fs:0x0
  416d94:	add    esp,0xc
  416d97:	mov    eax,esi
  416d99:	pop    esi
  416d9a:	pop    ebx
  416d9b:	pop    ebp
  416d9c:	ret    0x10
  416d9f:	nop
  416da0:	push   ebx
  416da1:	push   esi
  416da2:	push   edi
  416da3:	push   ebp
  416da4:	mov    edi,eax
  416da6:	xor    eax,eax
  416da8:	mov    esi,DWORD PTR [edi+0x14]
  416dab:	mov    ebx,esi
  416dad:	jmp    0x416db0
  416daf:	inc    ebx
  416db0:	movzx  edx,BYTE PTR [ebx]
  416db3:	test   dl,dl
  416db5:	je     0x416dbc
  416db7:	sub    dl,0x2e
  416dba:	jne    0x416daf
  416dbc:	cmp    BYTE PTR [ebx],0x0
  416dbf:	je     0x416de3
  416dc1:	mov    ebp,ebx
  416dc3:	sub    ebp,esi
  416dc5:	mov    ecx,ebp
  416dc7:	lea    eax,[edi+0x10]
  416dca:	mov    edx,esi
  416dcc:	call   0x405078
  416dd1:	mov    ecx,ebp
  416dd3:	inc    ecx
  416dd4:	lea    eax,[edi+0x14]
  416dd7:	mov    edx,0x1
  416ddc:	call   0x4054c0
  416de1:	mov    al,0x1
  416de3:	pop    ebp
  416de4:	pop    edi
  416de5:	pop    esi
  416de6:	pop    ebx
  416de7:	ret    
  416de8:	mov    ecx,edx
  416dea:	mov    edx,DWORD PTR [eax+0x4]
  416ded:	mov    eax,DWORD PTR [eax+0xc]
  416df0:	xchg   edx,eax
  416df1:	call   0x411d10
  416df6:	ret    
  416df7:	nop
  416df8:	push   ebp
  416df9:	mov    ebp,esp
  416dfb:	push   0x0
  416dfd:	push   ebx
  416dfe:	push   esi
  416dff:	mov    esi,edx
  416e01:	mov    ebx,eax
  416e03:	xor    eax,eax
  416e05:	push   ebp
  416e06:	push   0x416e6f
  416e0b:	push   DWORD PTR fs:[eax]
  416e0e:	mov    DWORD PTR fs:[eax],esp
  416e11:	lea    eax,[ebp-0x4]
  416e14:	call   0x406a98
  416e19:	test   esi,esi
  416e1b:	je     0x416e4b
  416e1d:	mov    eax,DWORD PTR [ebx+0xc]
  416e20:	mov    eax,DWORD PTR [eax]
  416e22:	mov    eax,DWORD PTR [eax]
  416e24:	call   0x411b1c
  416e29:	add    eax,0x5
  416e2c:	push   eax
  416e2d:	lea    eax,[ebp-0x4]
  416e30:	call   0x406a98
  416e35:	mov    ecx,eax
  416e37:	mov    eax,esi
  416e39:	pop    edx
  416e3a:	call   0x40e360
  416e3f:	test   al,al
  416e41:	jne    0x416e4b
  416e43:	lea    eax,[ebp-0x4]
  416e46:	call   0x406a98
  416e4b:	mov    ecx,DWORD PTR [ebp-0x4]
  416e4e:	mov    edx,DWORD PTR [ebx+0xc]
  416e51:	mov    eax,DWORD PTR [ebx+0x4]
  416e54:	call   0x412308
  416e59:	xor    eax,eax
  416e5b:	pop    edx
  416e5c:	pop    ecx
  416e5d:	pop    ecx
  416e5e:	mov    DWORD PTR fs:[eax],edx
  416e61:	push   0x416e76
  416e66:	lea    eax,[ebp-0x4]
  416e69:	call   0x406a98
  416e6e:	ret    
  416e6f:	jmp    0x40481c
  416e74:	jmp    0x416e66
  416e76:	pop    esi
  416e77:	pop    ebx
  416e78:	pop    ecx
  416e79:	pop    ebp
  416e7a:	ret    
  416e7b:	nop
  416e7c:	push   ebp
  416e7d:	mov    ebp,esp
  416e7f:	add    esp,0xfffffff4
  416e82:	push   ebx
  416e83:	push   esi
  416e84:	push   edi
  416e85:	xor    ecx,ecx
  416e87:	mov    DWORD PTR [ebp-0x4],ecx
  416e8a:	mov    ebx,edx
  416e8c:	mov    esi,eax
  416e8e:	xor    eax,eax
  416e90:	push   ebp
  416e91:	push   0x416f25
  416e96:	push   DWORD PTR fs:[eax]
  416e99:	mov    DWORD PTR fs:[eax],esp
  416e9c:	xor    eax,eax
  416e9e:	mov    DWORD PTR [ebp-0x8],eax
  416ea1:	test   ebx,ebx
  416ea3:	je     0x416f0f
  416ea5:	mov    edi,esi
  416ea7:	jmp    0x416f07
  416ea9:	mov    DWORD PTR [ebp-0xc],ebx
  416eac:	jmp    0x416eaf
  416eae:	inc    ebx
  416eaf:	movzx  eax,BYTE PTR [ebx]
  416eb2:	test   al,al
  416eb4:	je     0x416ebc
  416eb6:	add    al,0xd3
  416eb8:	sub    al,0x2
  416eba:	jae    0x416eae
  416ebc:	mov    ecx,ebx
  416ebe:	sub    ecx,DWORD PTR [ebp-0xc]
  416ec1:	lea    eax,[ebp-0x4]
  416ec4:	mov    edx,DWORD PTR [ebp-0xc]
  416ec7:	call   0x405078
  416ecc:	mov    edx,DWORD PTR [ebp-0x4]
  416ecf:	mov    eax,edi
  416ed1:	call   0x41a700
  416ed6:	mov    esi,eax
  416ed8:	test   esi,esi
  416eda:	jne    0x416eef
  416edc:	mov    edx,0x416f40
  416ee1:	mov    eax,DWORD PTR [ebp-0x4]
  416ee4:	call   0x408668
  416ee9:	test   al,al
  416eeb:	je     0x416eef
  416eed:	mov    esi,edi
  416eef:	test   esi,esi
  416ef1:	je     0x416f0f
  416ef3:	cmp    BYTE PTR [ebx],0x2e
  416ef6:	jne    0x416ef9
  416ef8:	inc    ebx
  416ef9:	cmp    BYTE PTR [ebx],0x2d
  416efc:	jne    0x416eff
  416efe:	inc    ebx
  416eff:	cmp    BYTE PTR [ebx],0x3e
  416f02:	jne    0x416f05
  416f04:	inc    ebx
  416f05:	mov    edi,esi
  416f07:	cmp    BYTE PTR [ebx],0x0
  416f0a:	jne    0x416ea9
  416f0c:	mov    DWORD PTR [ebp-0x8],edi
  416f0f:	xor    eax,eax
  416f11:	pop    edx
  416f12:	pop    ecx
  416f13:	pop    ecx
  416f14:	mov    DWORD PTR fs:[eax],edx
  416f17:	push   0x416f2c
  416f1c:	lea    eax,[ebp-0x4]
  416f1f:	call   0x404f88
  416f24:	ret    
  416f25:	jmp    0x40481c
  416f2a:	jmp    0x416f1c
  416f2c:	mov    eax,DWORD PTR [ebp-0x8]
  416f2f:	pop    edi
  416f30:	pop    esi
  416f31:	pop    ebx
  416f32:	mov    esp,ebp
  416f34:	pop    ebp
  416f35:	ret    
  416f36:	add    BYTE PTR [eax],al
  416f38:	(bad)  
  416f39:	(bad)  
  416f3a:	(bad)  
  416f3b:	inc    DWORD PTR ds:0x4f000000
  416f41:	ja     0x416fb1
  416f43:	gs jb  0x416f46
  416f46:	add    BYTE PTR [eax],al
  416f48:	push   ebp
  416f49:	mov    ebp,esp
  416f4b:	add    esp,0xfffffff8
  416f4e:	push   ebx
  416f4f:	push   esi
  416f50:	push   edi
  416f51:	mov    DWORD PTR [ebp-0x8],edx
  416f54:	mov    DWORD PTR [ebp-0x4],eax
  416f57:	cmp    DWORD PTR ds:0x4729c0,0x0
  416f5e:	je     0x416fea
  416f64:	mov    eax,ds:0x4729c0
  416f69:	call   0x414038
  416f6e:	mov    edi,eax
  416f70:	xor    eax,eax
  416f72:	push   ebp
  416f73:	push   0x416fe3
  416f78:	push   DWORD PTR fs:[eax]
  416f7b:	mov    DWORD PTR fs:[eax],esp
  416f7e:	mov    ebx,DWORD PTR [edi+0x8]
  416f81:	dec    ebx
  416f82:	cmp    ebx,0x0
  416f85:	jl     0x416fcb
  416f87:	mov    edx,ebx
  416f89:	mov    eax,edi
  416f8b:	call   0x413c70
  416f90:	mov    esi,eax
  416f92:	cmp    DWORD PTR [ebp-0x4],0x0
  416f96:	je     0x416fa0
  416f98:	mov    eax,DWORD PTR [esi+0x8]
  416f9b:	cmp    eax,DWORD PTR [ebp-0x4]
  416f9e:	jne    0x416fc5
  416fa0:	cmp    DWORD PTR [ebp-0x8],0x0
  416fa4:	je     0x416fb5
  416fa6:	mov    edx,DWORD PTR [esi+0x10]
  416fa9:	mov    eax,DWORD PTR [ebp-0x8]
  416fac:	call   0x408668
  416fb1:	test   al,al
  416fb3:	je     0x416fc5
  416fb5:	mov    edx,ebx
  416fb7:	mov    eax,edi
  416fb9:	call   0x413b84
  416fbe:	mov    eax,esi
  416fc0:	call   0x4040a0
  416fc5:	dec    ebx
  416fc6:	cmp    ebx,0xffffffff
  416fc9:	jne    0x416f87
  416fcb:	xor    eax,eax
  416fcd:	pop    edx
  416fce:	pop    ecx
  416fcf:	pop    ecx
  416fd0:	mov    DWORD PTR fs:[eax],edx
  416fd3:	push   0x416fea
  416fd8:	mov    eax,ds:0x4729c0
  416fdd:	call   0x41404c
  416fe2:	ret    
  416fe3:	jmp    0x40481c
  416fe8:	jmp    0x416fd8
  416fea:	pop    edi
  416feb:	pop    esi
  416fec:	pop    ebx
  416fed:	pop    ecx
  416fee:	pop    ecx
  416fef:	pop    ebp
  416ff0:	ret    
  416ff1:	lea    eax,[eax+0x0]
  416ff4:	push   ebp
  416ff5:	mov    ebp,esp
  416ff7:	push   ecx
  416ff8:	push   ebx
  416ff9:	push   esi
  416ffa:	push   edi
  416ffb:	mov    DWORD PTR [ebp-0x4],eax
  416ffe:	cmp    DWORD PTR ds:0x4729c0,0x0
  417005:	je     0x417072
  417007:	mov    eax,ds:0x4729c0
  41700c:	call   0x414038
  417011:	mov    edi,eax
  417013:	xor    eax,eax
  417015:	push   ebp
  417016:	push   0x41706b
  41701b:	push   DWORD PTR fs:[eax]
  41701e:	mov    DWORD PTR fs:[eax],esp
  417021:	mov    ebx,DWORD PTR [edi+0x8]
  417024:	dec    ebx
  417025:	cmp    ebx,0x0
  417028:	jl     0x417053
  41702a:	mov    edx,ebx
  41702c:	mov    eax,edi
  41702e:	call   0x413c70
  417033:	mov    esi,eax
  417035:	mov    eax,DWORD PTR [esi+0x4]
  417038:	cmp    eax,DWORD PTR [ebp-0x4]
  41703b:	jne    0x41704d
  41703d:	mov    edx,ebx
  41703f:	mov    eax,edi
  417041:	call   0x413b84
  417046:	mov    eax,esi
  417048:	call   0x4040a0
  41704d:	dec    ebx
  41704e:	cmp    ebx,0xffffffff
  417051:	jne    0x41702a
  417053:	xor    eax,eax
  417055:	pop    edx
  417056:	pop    ecx
  417057:	pop    ecx
  417058:	mov    DWORD PTR fs:[eax],edx
  41705b:	push   0x417072
  417060:	mov    eax,ds:0x4729c0
  417065:	call   0x41404c
  41706a:	ret    
  41706b:	jmp    0x40481c
  417070:	jmp    0x417060
  417072:	pop    edi
  417073:	pop    esi
  417074:	pop    ebx
  417075:	pop    ecx
  417076:	pop    ebp
  417077:	ret    
  417078:	push   ebx
  417079:	mov    ebx,eax
  41707b:	mov    ecx,ebx
  41707d:	mov    dl,0x1
  41707f:	mov    eax,ds:0x4125c0
  417084:	call   0x40c970
  417089:	call   0x4048fc
  41708e:	pop    ebx
  41708f:	ret    
  417090:	mov    eax,ds:0x46dcfc
  417095:	call   0x417078
  41709a:	ret    
  41709b:	nop
  41709c:	push   ebx
  41709d:	add    esp,0xfffffff8
  4170a0:	mov    ebx,eax
  4170a2:	mov    DWORD PTR [esp],ebx
  4170a5:	mov    BYTE PTR [esp+0x4],0xb
  4170aa:	push   esp
  4170ab:	push   0x0
  4170ad:	mov    ecx,DWORD PTR ds:0x46dae0
  4170b3:	mov    dl,0x1
  4170b5:	mov    eax,ds:0x4125c0
  4170ba:	call   0x40c9ac
  4170bf:	call   0x4048fc
  4170c4:	pop    ecx
  4170c5:	pop    edx
  4170c6:	pop    ebx
  4170c7:	ret    
  4170c8:	push   ebx
  4170c9:	call   0x411d6c
  4170ce:	mov    ebx,eax
  4170d0:	cmp    ebx,0xffffffff
  4170d3:	jne    0x4170da
  4170d5:	call   0x417090
  4170da:	mov    eax,ebx
  4170dc:	pop    ebx
  4170dd:	ret    
  4170de:	mov    eax,eax
  4170e0:	push   ebx
  4170e1:	push   esi
  4170e2:	push   edi
  4170e3:	call   0x404454
  4170e8:	mov    ebx,edx
  4170ea:	mov    esi,eax
  4170ec:	mov    edx,DWORD PTR [esi+0x10]
  4170ef:	sub    edx,DWORD PTR [esi+0x14]
  4170f2:	mov    eax,DWORD PTR [esi+0x4]
  4170f5:	mov    cx,0x1
  4170f9:	mov    edi,DWORD PTR [eax]
  4170fb:	call   DWORD PTR [edi+0x14]
  4170fe:	mov    edx,ebx
  417100:	and    dl,0xfc
  417103:	mov    eax,esi
  417105:	call   0x416c44
  41710a:	test   bl,bl
  41710c:	jle    0x417115
  41710e:	mov    eax,esi
  417110:	call   0x4043fc
  417115:	pop    edi
  417116:	pop    esi
  417117:	pop    ebx
  417118:	ret    
  417119:	lea    eax,[eax+0x0]
  41711c:	push   ebx
  41711d:	push   esi
  41711e:	mov    ebx,edx
  417120:	mov    esi,eax
  417122:	mov    eax,esi
  417124:	call   0x418e1c
  417129:	cmp    bl,al
  41712b:	je     0x41713c
  41712d:	dec    DWORD PTR [esi+0x10]
  417130:	mov    eax,esi
  417132:	call   0x418f2c
  417137:	call   0x417090
  41713c:	pop    esi
  41713d:	pop    ebx
  41713e:	ret    
  41713f:	nop
  417140:	push   ebp
  417141:	mov    ebp,esp
  417143:	push   ebx
  417144:	push   esi
  417145:	mov    esi,edx
  417147:	mov    ebx,eax
  417149:	mov    edx,DWORD PTR [ebx+0x80]
  41714f:	mov    eax,esi
  417151:	call   0x408668
  417156:	test   al,al
  417158:	je     0x417174
  41715a:	cmp    WORD PTR [ebp+0x12],0x0
  41715f:	je     0x417174
  417161:	mov    edx,ebx
  417163:	mov    eax,DWORD PTR [ebp+0x14]
  417166:	call   DWORD PTR [ebp+0x10]
  417169:	lea    eax,[ebx+0x80]
  41716f:	call   0x404f88
  417174:	pop    esi
  417175:	pop    ebx
  417176:	pop    ebp
  417177:	ret    0x10
  41717a:	mov    eax,eax
  41717c:	push   ebp
  41717d:	mov    ebp,esp
  41717f:	add    esp,0xfffffff4
  417182:	push   ebx
  417183:	mov    ebx,edx
  417185:	mov    DWORD PTR [ebp-0x4],eax
  417188:	mov    eax,DWORD PTR [ebp-0x4]
  41718b:	mov    edx,DWORD PTR [eax+0x80]
  417191:	mov    eax,ebx
  417193:	call   0x408668
  417198:	test   al,al
  41719a:	je     0x41725a
  4171a0:	cmp    WORD PTR [ebp+0x12],0x0
  4171a5:	je     0x41725a
  4171ab:	mov    eax,DWORD PTR [ebp-0x4]
  4171ae:	call   0x418e1c
  4171b3:	cmp    al,0xa
  4171b5:	je     0x4171d4
  4171b7:	mov    eax,DWORD PTR [ebp-0x4]
  4171ba:	dec    DWORD PTR [eax+0x10]
  4171bd:	mov    eax,DWORD PTR [ebp-0x4]
  4171c0:	call   0x418f2c
  4171c5:	mov    eax,DWORD PTR [ebp-0x4]
  4171c8:	mov    BYTE PTR [eax+0x88],0x1
  4171cf:	call   0x417090
  4171d4:	mov    dl,0x1
  4171d6:	mov    eax,ds:0x412ff4
  4171db:	call   0x404070
  4171e0:	mov    DWORD PTR [ebp-0x8],eax
  4171e3:	xor    eax,eax
  4171e5:	push   ebp
  4171e6:	push   0x417246
  4171eb:	push   DWORD PTR fs:[eax]
  4171ee:	mov    DWORD PTR fs:[eax],esp
  4171f1:	lea    edx,[ebp-0xc]
  4171f4:	mov    ecx,0x4
  4171f9:	mov    eax,DWORD PTR [ebp-0x4]
  4171fc:	call   0x417680
  417201:	mov    edx,DWORD PTR [ebp-0xc]
  417204:	mov    eax,DWORD PTR [ebp-0x8]
  417207:	mov    ecx,DWORD PTR [eax]
  417209:	call   DWORD PTR [ecx+0x4]
  41720c:	mov    eax,DWORD PTR [ebp-0x8]
  41720f:	mov    edx,DWORD PTR [eax+0x4]
  417212:	mov    ecx,DWORD PTR [ebp-0xc]
  417215:	mov    eax,DWORD PTR [ebp-0x4]
  417218:	call   0x417680
  41721d:	mov    eax,DWORD PTR [ebp-0x4]
  417220:	mov    BYTE PTR [eax+0x88],0x1
  417227:	mov    edx,DWORD PTR [ebp-0x8]
  41722a:	mov    eax,DWORD PTR [ebp+0x14]
  41722d:	call   DWORD PTR [ebp+0x10]
  417230:	xor    eax,eax
  417232:	pop    edx
  417233:	pop    ecx
  417234:	pop    ecx
  417235:	mov    DWORD PTR fs:[eax],edx
  417238:	push   0x41724d
  41723d:	mov    eax,DWORD PTR [ebp-0x8]
  417240:	call   0x4040a0
  417245:	ret    
  417246:	jmp    0x40481c
  41724b:	jmp    0x41723d
  41724d:	mov    eax,DWORD PTR [ebp-0x4]
  417250:	add    eax,0x80
  417255:	call   0x404f88
  41725a:	pop    ebx
  41725b:	mov    esp,ebp
  41725d:	pop    ebp
  41725e:	ret    0x10
  417261:	lea    eax,[eax+0x0]
  417264:	push   ebx
  417265:	mov    ebx,eax
  417267:	mov    eax,ebx
  417269:	call   0x418e1c
  41726e:	test   al,al
  417270:	sete   al
  417273:	dec    DWORD PTR [ebx+0x10]
  417276:	pop    ebx
  417277:	ret    
  417278:	push   ebx
  417279:	push   ecx
  41727a:	mov    BYTE PTR [esp],0x0
  41727e:	cmp    WORD PTR [eax+0x62],0x0
  417283:	je     0x417292
  417285:	push   esp
  417286:	mov    ebx,eax
  417288:	mov    ecx,edx
  41728a:	mov    edx,eax
  41728c:	mov    eax,DWORD PTR [ebx+0x64]
  41728f:	call   DWORD PTR [ebx+0x60]
  417292:	movzx  eax,BYTE PTR [esp]
  417296:	pop    edx
  417297:	pop    ebx
  417298:	ret    
  417299:	lea    eax,[eax+0x0]
  41729c:	push   ebp
  41729d:	mov    ebp,esp
  41729f:	add    esp,0xfffffef4
  4172a5:	push   ebx
  4172a6:	push   esi
  4172a7:	mov    DWORD PTR [ebp-0x8],ecx
  4172aa:	mov    DWORD PTR [ebp-0x4],edx
  4172ad:	mov    ebx,eax
  4172af:	mov    esi,DWORD PTR [ebp+0x8]
  4172b2:	cmp    WORD PTR [ebx+0x42],0x0
  4172b7:	je     0x4172fd
  4172b9:	lea    eax,[ebp-0x10c]
  4172bf:	mov    edx,DWORD PTR [ebp-0x8]
  4172c2:	mov    ecx,0xff
  4172c7:	call   0x405224
  4172cc:	lea    edx,[ebp-0x10c]
  4172d2:	mov    eax,DWORD PTR [ebp-0x4]
  4172d5:	mov    eax,DWORD PTR [eax]
  4172d7:	call   0x40430c
  4172dc:	mov    DWORD PTR [esi],eax
  4172de:	mov    eax,DWORD PTR [ebp-0x4]
  4172e1:	mov    DWORD PTR [esi+0x4],eax
  4172e4:	cmp    DWORD PTR [esi],0x0
  4172e7:	sete   BYTE PTR [ebp-0x9]
  4172eb:	push   esi
  4172ec:	lea    eax,[ebp-0x9]
  4172ef:	push   eax
  4172f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4172f3:	mov    edx,ebx
  4172f5:	mov    eax,DWORD PTR [ebx+0x44]
  4172f8:	call   DWORD PTR [ebx+0x40]
  4172fb:	jmp    0x417301
  4172fd:	mov    BYTE PTR [ebp-0x9],0x1
  417301:	cmp    BYTE PTR [ebp-0x9],0x0
  417305:	je     0x41731c
  417307:	mov    eax,DWORD PTR [ebp-0x4]
  41730a:	mov    DWORD PTR [esi+0x4],eax
  41730d:	mov    ecx,DWORD PTR [ebp-0x8]
  417310:	mov    edx,DWORD PTR [ebp-0x4]
  417313:	mov    eax,ebx
  417315:	mov    ebx,DWORD PTR [eax]
  417317:	call   DWORD PTR [ebx+0x1c]
  41731a:	mov    DWORD PTR [esi],eax
  41731c:	pop    esi
  41731d:	pop    ebx
  41731e:	mov    esp,ebp
  417320:	pop    ebp
  417321:	ret    0x4
  417324:	push   ebx
  417325:	push   esi
  417326:	push   edi
  417327:	add    esp,0xfffffef8
  41732d:	mov    esi,ecx
  41732f:	mov    edi,edx
  417331:	mov    ebx,eax
  417333:	lea    eax,[esp+0x8]
  417337:	mov    edx,esi
  417339:	mov    ecx,0xff
  41733e:	call   0x405224
  417343:	lea    edx,[esp+0x8]
  417347:	mov    eax,DWORD PTR [edi]
  417349:	call   0x40430c
  41734e:	mov    DWORD PTR [esp],eax
  417351:	cmp    DWORD PTR [esp],0x0
  417355:	sete   BYTE PTR [esp+0x4]
  41735a:	cmp    WORD PTR [ebx+0x3a],0x0
  41735f:	je     0x417371
  417361:	push   esp
  417362:	lea    eax,[esp+0x8]
  417366:	push   eax
  417367:	mov    ecx,esi
  417369:	mov    edx,ebx
  41736b:	mov    eax,DWORD PTR [ebx+0x3c]
  41736e:	call   DWORD PTR [ebx+0x38]
  417371:	cmp    BYTE PTR [esp+0x4],0x0
  417376:	je     0x41737d
  417378:	call   0x417090
  41737d:	mov    eax,DWORD PTR [esp]
  417380:	add    esp,0x108
  417386:	pop    edi
  417387:	pop    esi
  417388:	pop    ebx
  417389:	ret    
  41738a:	mov    eax,eax
  41738c:	push   ebp
  41738d:	mov    ebp,esp
  41738f:	push   ebx
  417390:	push   esi
  417391:	push   edi
  417392:	mov    edi,eax
  417394:	mov    eax,ds:0x4729c0
  417399:	call   0x414038
  41739e:	mov    esi,eax
  4173a0:	xor    edx,edx
  4173a2:	push   ebp
  4173a3:	push   0x4173fc
  4173a8:	push   DWORD PTR fs:[edx]
  4173ab:	mov    DWORD PTR fs:[edx],esp
  4173ae:	mov    ebx,DWORD PTR [esi+0x8]
  4173b1:	dec    ebx
  4173b2:	cmp    ebx,0x0
  4173b5:	jl     0x4173e4
  4173b7:	mov    edx,ebx
  4173b9:	mov    eax,esi
  4173bb:	call   0x413c70
  4173c0:	mov    edx,DWORD PTR [eax+0x4]
  4173c3:	cmp    edx,DWORD PTR [edi+0x4]
  4173c6:	jne    0x4173de
  4173c8:	mov    edx,DWORD PTR [eax+0xc]
  4173cb:	cmp    edx,DWORD PTR [edi+0xc]
  4173ce:	jne    0x4173de
  4173d0:	call   0x4040a0
  4173d5:	mov    edx,ebx
  4173d7:	mov    eax,esi
  4173d9:	call   0x413b84
  4173de:	dec    ebx
  4173df:	cmp    ebx,0xffffffff
  4173e2:	jne    0x4173b7
  4173e4:	xor    eax,eax
  4173e6:	pop    edx
  4173e7:	pop    ecx
  4173e8:	pop    ecx
  4173e9:	mov    DWORD PTR fs:[eax],edx
  4173ec:	push   0x417403
  4173f1:	mov    eax,ds:0x4729c0
  4173f6:	call   0x41404c
  4173fb:	ret    
  4173fc:	jmp    0x40481c
  417401:	jmp    0x4173f1
  417403:	pop    edi
  417404:	pop    esi
  417405:	pop    ebx
  417406:	pop    ebp
  417407:	ret    
  417408:	push   ebp
  417409:	mov    ebp,esp
  41740b:	add    esp,0xfffffff0
  41740e:	push   ebx
  41740f:	push   esi
  417410:	push   edi
  417411:	xor    edx,edx
  417413:	mov    DWORD PTR [ebp-0x4],edx
  417416:	mov    DWORD PTR [ebp-0x8],eax
  417419:	xor    eax,eax
  41741b:	push   ebp
  41741c:	push   0x41753e
  417421:	push   DWORD PTR fs:[eax]
  417424:	mov    DWORD PTR fs:[eax],esp
  417427:	mov    eax,DWORD PTR [ebp-0x8]
  41742a:	mov    eax,DWORD PTR [eax+0x30]
  41742d:	test   eax,eax
  41742f:	je     0x417528
  417435:	xor    edx,edx
  417437:	push   ebp
  417438:	push   0x417521
  41743d:	push   DWORD PTR fs:[edx]
  417440:	mov    DWORD PTR fs:[edx],esp
  417443:	mov    eax,DWORD PTR [eax+0x8]
  417446:	dec    eax
  417447:	test   eax,eax
  417449:	jl     0x41750b
  41744f:	inc    eax
  417450:	mov    DWORD PTR [ebp-0x10],eax
  417453:	xor    esi,esi
  417455:	mov    eax,DWORD PTR [ebp-0x8]
  417458:	mov    eax,DWORD PTR [eax+0x30]
  41745b:	mov    edx,esi
  41745d:	call   0x413c70
  417462:	mov    ebx,eax
  417464:	lea    eax,[ebp-0x4]
  417467:	mov    edx,DWORD PTR [ebx+0x14]
  41746a:	call   0x405020
  41746f:	lea    edx,[ebp-0x4]
  417472:	mov    eax,DWORD PTR [ebp-0x8]
  417475:	mov    ecx,DWORD PTR [eax]
  417477:	call   DWORD PTR [ecx+0x24]
  41747a:	mov    eax,DWORD PTR [ebx+0x8]
  41747d:	mov    edx,DWORD PTR [ebp-0x4]
  417480:	call   0x416e7c
  417485:	mov    DWORD PTR [ebp-0xc],eax
  417488:	cmp    DWORD PTR [ebp-0xc],0x0
  41748c:	jne    0x4174ab
  41748e:	mov    eax,DWORD PTR [ebp-0x8]
  417491:	cmp    WORD PTR [eax+0x7a],0x0
  417496:	je     0x4174ab
  417498:	lea    eax,[ebp-0xc]
  41749b:	push   eax
  41749c:	mov    edi,DWORD PTR [ebp-0x8]
  41749f:	mov    ecx,DWORD PTR [ebp-0x4]
  4174a2:	mov    edx,DWORD PTR [ebp-0x8]
  4174a5:	mov    eax,DWORD PTR [edi+0x7c]
  4174a8:	call   DWORD PTR [edi+0x78]
  4174ab:	mov    eax,DWORD PTR [ebp-0x8]
  4174ae:	mov    eax,DWORD PTR [eax+0x30]
  4174b1:	mov    edx,esi
  4174b3:	call   0x413c70
  4174b8:	call   0x41738c
  4174bd:	cmp    DWORD PTR [ebp-0xc],0x0
  4174c1:	jne    0x4174f8
  4174c3:	mov    eax,ebx
  4174c5:	call   0x416da0
  4174ca:	test   al,al
  4174cc:	je     0x4174f8
  4174ce:	mov    eax,DWORD PTR [ebp-0x8]
  4174d1:	mov    eax,DWORD PTR [eax+0x30]
  4174d4:	mov    edx,esi
  4174d6:	call   0x413c70
  4174db:	mov    edx,eax
  4174dd:	mov    eax,ds:0x4729c0
  4174e2:	call   0x413fb0
  4174e7:	mov    eax,DWORD PTR [ebp-0x8]
  4174ea:	mov    eax,DWORD PTR [eax+0x30]
  4174ed:	xor    ecx,ecx
  4174ef:	mov    edx,esi
  4174f1:	call   0x413dbc
  4174f6:	jmp    0x417501
  4174f8:	mov    edx,DWORD PTR [ebp-0xc]
  4174fb:	mov    eax,ebx
  4174fd:	mov    ecx,DWORD PTR [eax]
  4174ff:	call   DWORD PTR [ecx]
  417501:	inc    esi
  417502:	dec    DWORD PTR [ebp-0x10]
  417505:	jne    0x417455
  41750b:	xor    eax,eax
  41750d:	pop    edx
  41750e:	pop    ecx
  41750f:	pop    ecx
  417510:	mov    DWORD PTR fs:[eax],edx
  417513:	push   0x417528
  417518:	mov    eax,DWORD PTR [ebp-0x8]
  41751b:	call   0x417570
  417520:	ret    
  417521:	jmp    0x40481c
  417526:	jmp    0x417518
  417528:	xor    eax,eax
  41752a:	pop    edx
  41752b:	pop    ecx
  41752c:	pop    ecx
  41752d:	mov    DWORD PTR fs:[eax],edx
  417530:	push   0x417545
  417535:	lea    eax,[ebp-0x4]
  417538:	call   0x404f88
  41753d:	ret    
  41753e:	jmp    0x40481c
  417543:	jmp    0x417535
  417545:	pop    edi
  417546:	pop    esi
  417547:	pop    ebx
  417548:	mov    esp,ebp
  41754a:	pop    ebp
  41754b:	ret    
  41754c:	push   ebx
  41754d:	mov    ebx,eax
  41754f:	mov    eax,ebx
  417551:	call   0x417644
  417556:	cdq    
  417557:	push   edx
  417558:	push   eax
  417559:	mov    eax,DWORD PTR [ebx+0x4]
  41755c:	call   0x416404
  417561:	xor    eax,eax
  417563:	mov    DWORD PTR [ebx+0x10],eax
  417566:	xor    eax,eax
  417568:	mov    DWORD PTR [ebx+0x14],eax
  41756b:	pop    ebx
  41756c:	ret    
  41756d:	lea    eax,[eax+0x0]
  417570:	push   ebx
  417571:	push   esi
  417572:	push   edi
  417573:	mov    ebx,eax
  417575:	mov    eax,DWORD PTR [ebx+0x30]
  417578:	test   eax,eax
  41757a:	je     0x4175a7
  41757c:	mov    esi,DWORD PTR [eax+0x8]
  41757f:	dec    esi
  417580:	test   esi,esi
  417582:	jl     0x41759a
  417584:	inc    esi
  417585:	xor    edi,edi
  417587:	mov    edx,edi
  417589:	mov    eax,DWORD PTR [ebx+0x30]
  41758c:	call   0x413c70
  417591:	call   0x4040a0
  417596:	inc    edi
  417597:	dec    esi
  417598:	jne    0x417587
  41759a:	mov    eax,DWORD PTR [ebx+0x30]
  41759d:	call   0x4040a0
  4175a2:	xor    eax,eax
  4175a4:	mov    DWORD PTR [ebx+0x30],eax
  4175a7:	pop    edi
  4175a8:	pop    esi
  4175a9:	pop    ebx
  4175aa:	ret    
  4175ab:	nop
  4175ac:	push   ebx
  4175ad:	push   esi
  4175ae:	push   edi
  4175af:	push   ebp
  4175b0:	add    esp,0xfffffff4
  4175b3:	mov    DWORD PTR [esp+0x4],ecx
  4175b7:	mov    DWORD PTR [esp],eax
  4175ba:	mov    eax,edx
  4175bc:	call   0x403f78
  4175c1:	mov    ebp,eax
  4175c3:	jmp    0x41760c
  4175c5:	mov    eax,ebp
  4175c7:	call   0x413944
  4175cc:	mov    esi,eax
  4175ce:	test   esi,esi
  4175d0:	je     0x417603
  4175d2:	movsx  ebx,WORD PTR [esi]
  4175d5:	dec    ebx
  4175d6:	test   ebx,ebx
  4175d8:	jl     0x417603
  4175da:	inc    ebx
  4175db:	mov    DWORD PTR [esp+0x8],0x0
  4175e3:	mov    eax,DWORD PTR [esp+0x8]
  4175e7:	mov    eax,DWORD PTR [esi+eax*4+0x2]
  4175eb:	mov    edi,DWORD PTR [eax]
  4175ed:	mov    edx,DWORD PTR [esp+0x4]
  4175f1:	mov    eax,edi
  4175f3:	call   0x403f94
  4175f8:	test   al,al
  4175fa:	jne    0x417639
  4175fc:	inc    DWORD PTR [esp+0x8]
  417600:	dec    ebx
  417601:	jne    0x4175e3
  417603:	mov    eax,ebp
  417605:	call   0x40402c
  41760a:	mov    ebp,eax
  41760c:	cmp    ebp,DWORD PTR ds:0x41289c
  417612:	jne    0x4175c5
  417614:	mov    eax,DWORD PTR [esp]
  417617:	mov    eax,DWORD PTR [eax+0x84]
  41761d:	test   eax,eax
  41761f:	je     0x41762e
  417621:	mov    edx,DWORD PTR [esp+0x4]
  417625:	call   0x4138bc
  41762a:	mov    edi,eax
  41762c:	jmp    0x417639
  41762e:	mov    eax,DWORD PTR [esp+0x4]
  417632:	call   0x4139bc
  417637:	mov    edi,eax
  417639:	mov    eax,edi
  41763b:	add    esp,0xc
  41763e:	pop    ebp
  41763f:	pop    edi
  417640:	pop    esi
  417641:	pop    ebx
  417642:	ret    
  417643:	nop
  417644:	push   ebx
  417645:	mov    ebx,eax
  417647:	mov    eax,DWORD PTR [ebx+0x4]
  41764a:	call   0x4163e4
  41764f:	mov    edx,DWORD PTR [ebx+0x14]
  417652:	sub    edx,DWORD PTR [ebx+0x10]
  417655:	sub    eax,edx
  417657:	pop    ebx
  417658:	ret    
  417659:	lea    eax,[eax+0x0]
  41765c:	push   ebx
  41765d:	mov    ebx,eax
  41765f:	mov    eax,ebx
  417661:	call   0x418e1c
  417666:	dec    DWORD PTR [ebx+0x10]
  417669:	pop    ebx
  41766a:	ret    
  41766b:	nop
  41766c:	push   ebx
  41766d:	mov    ebx,edx
  41766f:	call   0x418f2c
  417674:	mov    eax,ebx
  417676:	call   0x41709c
  41767b:	pop    ebx
  41767c:	ret    
  41767d:	lea    eax,[eax+0x0]
  417680:	push   esi
  417681:	push   edi
  417682:	push   ebx
  417683:	mov    edi,edx
  417685:	mov    ebx,ecx
  417687:	mov    esi,eax
  417689:	jmp    0x4176c1
  41768b:	mov    ecx,DWORD PTR [esi+0x14]
  41768e:	sub    ecx,DWORD PTR [esi+0x10]
  417691:	ja     0x41769d
  417693:	mov    eax,esi
  417695:	call   0x4176cc
  41769a:	mov    ecx,DWORD PTR [esi+0x14]
  41769d:	cmp    ecx,ebx
  41769f:	jb     0x4176a3
  4176a1:	mov    ecx,ebx
  4176a3:	push   esi
  4176a4:	sub    ebx,ecx
  4176a6:	mov    eax,DWORD PTR [esi+0x8]
  4176a9:	add    eax,DWORD PTR [esi+0x10]
  4176ac:	add    DWORD PTR [esi+0x10],ecx
  4176af:	mov    esi,eax
  4176b1:	mov    edx,ecx
  4176b3:	shr    ecx,0x2
  4176b6:	cld    
  4176b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b9:	mov    ecx,edx
  4176bb:	and    ecx,0x3
  4176be:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c0:	pop    esi
  4176c1:	or     ebx,ebx
  4176c3:	jne    0x41768b
  4176c5:	pop    ebx
  4176c6:	pop    edi
  4176c7:	pop    esi
  4176c8:	ret    
  4176c9:	lea    eax,[eax+0x0]
  4176cc:	push   ebx
  4176cd:	push   esi
  4176ce:	mov    ebx,eax
  4176d0:	mov    edx,DWORD PTR [ebx+0x8]
  4176d3:	mov    ecx,DWORD PTR [ebx+0xc]
  4176d6:	mov    eax,DWORD PTR [ebx+0x4]
  4176d9:	mov    esi,DWORD PTR [eax]
  4176db:	call   DWORD PTR [esi+0xc]
  4176de:	mov    esi,eax
  4176e0:	mov    DWORD PTR [ebx+0x14],esi
  4176e3:	test   esi,esi
  4176e5:	jne    0x4176fe
  4176e7:	mov    ecx,DWORD PTR ds:0x46de08
  4176ed:	mov    dl,0x1
  4176ef:	mov    eax,ds:0x4125c0
  4176f4:	call   0x40c970
  4176f9:	call   0x4048fc
  4176fe:	xor    eax,eax
  417700:	mov    DWORD PTR [ebx+0x10],eax
  417703:	pop    esi
  417704:	pop    ebx
  417705:	ret    
  417706:	mov    eax,eax
  417708:	push   ebp
  417709:	mov    ebp,esp
  41770b:	push   0x0
  41770d:	push   ebx
  41770e:	mov    ebx,eax
  417710:	xor    eax,eax
  417712:	push   ebp
  417713:	push   0x417758
  417718:	push   DWORD PTR fs:[eax]
  41771b:	mov    DWORD PTR fs:[eax],esp
  41771e:	lea    edx,[ebp-0x4]
  417721:	mov    eax,ebx
  417723:	call   0x418c7c
  417728:	mov    eax,DWORD PTR [ebp-0x4]
  41772b:	test   eax,eax
  41772d:	je     0x417734
  41772f:	sub    eax,0x4
  417732:	mov    eax,DWORD PTR [eax]
  417734:	dec    eax
  417735:	jle    0x41773c
  417737:	call   0x417090
  41773c:	mov    eax,DWORD PTR [ebp-0x4]
  41773f:	movzx  ebx,BYTE PTR [eax]
  417742:	xor    eax,eax
  417744:	pop    edx
  417745:	pop    ecx
  417746:	pop    ecx
  417747:	mov    DWORD PTR fs:[eax],edx
  41774a:	push   0x41775f
  41774f:	lea    eax,[ebp-0x4]
  417752:	call   0x404f88
  417757:	ret    
  417758:	jmp    0x40481c
  41775d:	jmp    0x41774f
  41775f:	mov    eax,ebx
  417761:	pop    ebx
  417762:	pop    ecx
  417763:	pop    ebp
  417764:	ret    
  417765:	lea    eax,[eax+0x0]
  417768:	push   ebp
  417769:	mov    ebp,esp
  41776b:	push   0x0
  41776d:	push   ebx
  41776e:	mov    ebx,eax
  417770:	xor    eax,eax
  417772:	push   ebp
  417773:	push   0x4177b4
  417778:	push   DWORD PTR fs:[eax]
  41777b:	mov    DWORD PTR fs:[eax],esp
  41777e:	lea    edx,[ebp-0x4]
  417781:	mov    eax,ebx
  417783:	call   0x418d38
  417788:	mov    eax,DWORD PTR [ebp-0x4]
  41778b:	call   0x405900
  417790:	dec    eax
  417791:	jle    0x417798
  417793:	call   0x417090
  417798:	mov    eax,DWORD PTR [ebp-0x4]
  41779b:	movzx  ebx,WORD PTR [eax]
  41779e:	xor    eax,eax
  4177a0:	pop    edx
  4177a1:	pop    ecx
  4177a2:	pop    ecx
  4177a3:	mov    DWORD PTR fs:[eax],edx
  4177a6:	push   0x4177bb
  4177ab:	lea    eax,[ebp-0x4]
  4177ae:	call   0x405790
  4177b3:	ret    
  4177b4:	jmp    0x40481c
  4177b9:	jmp    0x4177ab
  4177bb:	mov    eax,ebx
  4177bd:	pop    ebx
  4177be:	pop    ecx
  4177bf:	pop    ebp
  4177c0:	ret    
  4177c1:	lea    eax,[eax+0x0]
  4177c4:	push   ebp
  4177c5:	mov    ebp,esp
  4177c7:	push   ecx
  4177c8:	push   ebx
  4177c9:	push   esi
  4177ca:	mov    DWORD PTR [ebp-0x4],edx
  4177cd:	mov    ebx,eax
  4177cf:	mov    eax,DWORD PTR [ebp-0x4]
  4177d2:	mov    edx,DWORD PTR [eax]
  4177d4:	call   DWORD PTR [edx+0x20]
  4177d7:	xor    eax,eax
  4177d9:	push   ebp
  4177da:	push   0x417864
  4177df:	push   DWORD PTR fs:[eax]
  4177e2:	mov    DWORD PTR fs:[eax],esp
  4177e5:	mov    eax,ebx
  4177e7:	call   0x417264
  4177ec:	test   al,al
  4177ee:	jne    0x41783c
  4177f0:	mov    eax,DWORD PTR [ebp-0x4]
  4177f3:	call   0x414674
  4177f8:	jmp    0x41783c
  4177fa:	mov    eax,ebx
  4177fc:	call   0x41765c
  417801:	add    al,0xfe
  417803:	sub    al,0x3
  417805:	jae    0x41780e
  417807:	mov    eax,ebx
  417809:	call   0x418254
  41780e:	mov    eax,DWORD PTR [ebp-0x4]
  417811:	call   0x4145a8
  417816:	mov    esi,eax
  417818:	mov    eax,ebx
  41781a:	call   0x418304
  41781f:	jmp    0x41782a
  417821:	mov    edx,esi
  417823:	mov    eax,ebx
  417825:	call   0x418470
  41782a:	mov    eax,ebx
  41782c:	call   0x417264
  417831:	test   al,al
  417833:	je     0x417821
  417835:	mov    eax,ebx
  417837:	call   0x41830c
  41783c:	mov    eax,ebx
  41783e:	call   0x417264
  417843:	test   al,al
  417845:	je     0x4177fa
  417847:	mov    eax,ebx
  417849:	call   0x41830c
  41784e:	xor    eax,eax
  417850:	pop    edx
  417851:	pop    ecx
  417852:	pop    ecx
  417853:	mov    DWORD PTR fs:[eax],edx
  417856:	push   0x41786b
  41785b:	mov    eax,DWORD PTR [ebp-0x4]
  41785e:	mov    edx,DWORD PTR [eax]
  417860:	call   DWORD PTR [edx+0x24]
  417863:	ret    
  417864:	jmp    0x40481c
  417869:	jmp    0x41785b
  41786b:	pop    esi
  41786c:	pop    ebx
  41786d:	pop    ecx
  41786e:	pop    ebp
  41786f:	ret    
  417870:	je     0x4178ea
  417872:	inc    ecx
  417873:	add    BYTE PTR [ecx],dl
  417875:	add    ebp,DWORD PTR [esi]
  417877:	xor    eax,0x436
  41787c:	add    BYTE PTR [eax],al
  41787e:	add    BYTE PTR [eax],al
  417880:	add    bh,bh
  417882:	(bad)  
  417883:	(bad)  
  417884:	call   FWORD PTR [eax+0x34]
  417887:	inc    ecx
  417888:	add    BYTE PTR [edi],al
  41788a:	inc    ebx
  41788b:	ins    BYTE PTR es:[edi],dx
  41788c:	popa   
  41788d:	jae    0x417902
  41788f:	gs jae 0x41781f
  417892:	inc    eax
  417893:	add    BYTE PTR [ebp-0x75],dl
  417896:	in     al,dx
  417897:	push   ebx
  417898:	push   esi
  417899:	mov    eax,DWORD PTR [ebp+0x8]
  41789c:	mov    eax,DWORD PTR [eax-0x4]
  41789f:	call   0x4061f4
  4178a4:	mov    ebx,eax
  4178a6:	dec    ebx
  4178a7:	test   ebx,ebx
  4178a9:	jl     0x4178c9
  4178ab:	inc    ebx
  4178ac:	xor    esi,esi
  4178ae:	mov    eax,DWORD PTR [ebp+0x8]
  4178b1:	mov    eax,DWORD PTR [eax-0x4]
  4178b4:	mov    edx,DWORD PTR [eax+esi*4]
  4178b7:	mov    eax,DWORD PTR [ebp+0x8]
  4178ba:	mov    eax,DWORD PTR [eax-0x8]
  4178bd:	mov    eax,DWORD PTR [eax+0x34]
  4178c0:	call   0x413b38
  4178c5:	inc    esi
  4178c6:	dec    ebx
  4178c7:	jne    0x4178ae
  4178c9:	pop    esi
  4178ca:	pop    ebx
  4178cb:	pop    ebp
  4178cc:	ret    
  4178cd:	lea    eax,[eax+0x0]
  4178d0:	push   ebp
  4178d1:	mov    ebp,esp
  4178d3:	push   ebx
  4178d4:	push   esi
  4178d5:	push   edi
  4178d6:	mov    edi,eax
  4178d8:	mov    eax,edi
  4178da:	call   0x41a820
  4178df:	mov    esi,eax
  4178e1:	dec    esi
  4178e2:	test   esi,esi
  4178e4:	jl     0x417942
  4178e6:	inc    esi
  4178e7:	xor    ebx,ebx
  4178e9:	mov    edx,ebx
  4178eb:	mov    eax,edi
  4178ed:	call   0x41a7f4
  4178f2:	test   BYTE PTR [eax+0x24],0x4
  4178f6:	je     0x41793e
  4178f8:	mov    eax,DWORD PTR [ebp+0x8]
  4178fb:	mov    eax,DWORD PTR [eax-0x4]
  4178fe:	call   0x4061f4
  417903:	inc    eax
  417904:	push   eax
  417905:	mov    eax,DWORD PTR [ebp+0x8]
  417908:	add    eax,0xfffffffc
  41790b:	mov    ecx,0x1
  417910:	mov    edx,DWORD PTR ds:0x417870
  417916:	call   0x4063b0
  41791b:	add    esp,0x4
  41791e:	mov    edx,ebx
  417920:	mov    eax,edi
  417922:	call   0x41a7f4
  417927:	push   eax
  417928:	mov    eax,DWORD PTR [ebp+0x8]
  41792b:	mov    eax,DWORD PTR [eax-0x4]
  41792e:	call   0x4061f4
  417933:	mov    edx,DWORD PTR [ebp+0x8]
  417936:	mov    edx,DWORD PTR [edx-0x4]
  417939:	pop    ecx
  41793a:	mov    DWORD PTR [edx+eax*4-0x4],ecx
  41793e:	inc    ebx
  41793f:	dec    esi
  417940:	jne    0x4178e9
  417942:	pop    edi
  417943:	pop    esi
  417944:	pop    ebx
  417945:	pop    ebp
  417946:	ret    
  417947:	nop
  417948:	push   ebp
  417949:	mov    ebp,esp
  41794b:	push   ecx
  41794c:	push   ebx
  41794d:	push   esi
  41794e:	push   edi
  41794f:	mov    BYTE PTR [ebp-0x3],dl
  417952:	mov    WORD PTR [ebp-0x2],ax
  417956:	mov    eax,DWORD PTR [ebp+0x8]
  417959:	mov    eax,DWORD PTR [eax-0x4]
  41795c:	call   0x4061f4
  417961:	mov    esi,eax
  417963:	dec    esi
  417964:	test   esi,esi
  417966:	jl     0x4179a9
  417968:	inc    esi
  417969:	xor    ebx,ebx
  41796b:	cmp    BYTE PTR [ebp-0x3],0x0
  41796f:	je     0x41798b
  417971:	mov    eax,DWORD PTR [ebp+0x8]
  417974:	mov    eax,DWORD PTR [eax-0x4]
  417977:	mov    edi,DWORD PTR [eax+ebx*4]
  41797a:	movzx  eax,WORD PTR [edi+0x1c]
  41797e:	or     ax,WORD PTR [ebp-0x2]
  417982:	mov    edx,DWORD PTR [ebp+0x8]
  417985:	mov    WORD PTR [edi+0x1c],ax
  417989:	jmp    0x4179a5
  41798b:	mov    eax,DWORD PTR [ebp+0x8]
  41798e:	mov    eax,DWORD PTR [eax-0x4]
  417991:	mov    edi,DWORD PTR [eax+ebx*4]
  417994:	movzx  eax,WORD PTR [ebp-0x2]
  417998:	not    eax
  41799a:	and    ax,WORD PTR [edi+0x1c]
  41799e:	mov    edx,DWORD PTR [ebp+0x8]
  4179a1:	mov    WORD PTR [edi+0x1c],ax
  4179a5:	inc    ebx
  4179a6:	dec    esi
  4179a7:	jne    0x41796b
  4179a9:	pop    edi
  4179aa:	pop    esi
  4179ab:	pop    ebx
  4179ac:	pop    ecx
  4179ad:	pop    ebp
  4179ae:	ret    
  4179af:	nop
  4179b0:	push   ebp
  4179b1:	mov    ebp,esp
  4179b3:	mov    eax,DWORD PTR [ebp+0x8]
  4179b6:	test   BYTE PTR [eax-0x9],0x1
  4179ba:	jne    0x4179c5
  4179bc:	mov    eax,DWORD PTR [ebp+0x8]
  4179bf:	cmp    DWORD PTR [eax-0x10],0x0
  4179c3:	je     0x4179c9
  4179c5:	xor    eax,eax
  4179c7:	pop    ebp
  4179c8:	ret    
  4179c9:	mov    al,0x1
  4179cb:	pop    ebp
  4179cc:	ret    
  4179cd:	lea    eax,[eax+0x0]
  4179d0:	push   ebp
  4179d1:	mov    ebp,esp
  4179d3:	push   ebx
  4179d4:	push   esi
  4179d5:	mov    esi,eax
  4179d7:	xor    ebx,ebx
  4179d9:	call   0x402f24
  4179de:	mov    edx,DWORD PTR ds:0x4076f4
  4179e4:	call   0x40422c
  4179e9:	test   al,al
  4179eb:	je     0x417a28
  4179ed:	mov    eax,DWORD PTR [ebp+0x8]
  4179f0:	push   eax
  4179f1:	call   0x4179b0
  4179f6:	pop    ecx
  4179f7:	test   al,al
  4179f9:	je     0x417a02
  4179fb:	mov    eax,DWORD PTR [esi]
  4179fd:	call   0x4040a0
  417a02:	xor    eax,eax
  417a04:	mov    DWORD PTR [esi],eax
  417a06:	mov    eax,DWORD PTR [ebp+0x8]
  417a09:	mov    eax,DWORD PTR [eax-0x8]
  417a0c:	xor    edx,edx
  417a0e:	call   0x419124
  417a13:	call   0x402f24
  417a18:	mov    edx,DWORD PTR [eax+0x4]
  417a1b:	mov    eax,DWORD PTR [ebp+0x8]
  417a1e:	mov    eax,DWORD PTR [eax-0x8]
  417a21:	mov    ecx,DWORD PTR [eax]
  417a23:	call   DWORD PTR [ecx+0x10]
  417a26:	mov    ebx,eax
  417a28:	mov    eax,ebx
  417a2a:	pop    esi
  417a2b:	pop    ebx
  417a2c:	pop    ebp
  417a2d:	ret    
  417a2e:	mov    eax,eax
  417a30:	push   ebp
  417a31:	mov    ebp,esp
  417a33:	push   ebx
  417a34:	push   esi
  417a35:	push   edi
  417a36:	xor    eax,eax
  417a38:	push   ebp
  417a39:	push   0x417b16
  417a3e:	push   DWORD PTR fs:[eax]
  417a41:	mov    DWORD PTR fs:[eax],esp
  417a44:	mov    eax,DWORD PTR [ebp+0x8]
  417a47:	mov    edx,DWORD PTR [eax-0x18]
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    eax,DWORD PTR [eax-0x8]
  417a50:	call   0x4192c4
  417a55:	mov    ebx,eax
  417a57:	mov    eax,DWORD PTR [ebp+0x8]
  417a5a:	xor    edx,edx
  417a5c:	mov    DWORD PTR [eax-0x14],edx
  417a5f:	mov    eax,DWORD PTR [ebp+0x8]
  417a62:	mov    eax,DWORD PTR [eax-0x8]
  417a65:	cmp    WORD PTR [eax+0x72],0x0
  417a6a:	je     0x417a87
  417a6c:	mov    eax,DWORD PTR [ebp+0x8]
  417a6f:	add    eax,0xffffffec
  417a72:	push   eax
  417a73:	mov    eax,DWORD PTR [ebp+0x8]
  417a76:	mov    esi,DWORD PTR [eax-0x8]
  417a79:	mov    eax,DWORD PTR [ebp+0x8]
  417a7c:	mov    edx,DWORD PTR [eax-0x8]
  417a7f:	mov    ecx,ebx
  417a81:	mov    eax,DWORD PTR [esi+0x74]
  417a84:	call   DWORD PTR [esi+0x70]
  417a87:	mov    eax,DWORD PTR [ebp+0x8]
  417a8a:	cmp    DWORD PTR [eax-0x14],0x0
  417a8e:	jne    0x417b01
  417a90:	mov    eax,ebx
  417a92:	call   DWORD PTR [eax-0xc]
  417a95:	mov    edx,DWORD PTR [ebp+0x8]
  417a98:	mov    DWORD PTR [edx-0x14],eax
  417a9b:	mov    eax,DWORD PTR [ebp+0x8]
  417a9e:	test   BYTE PTR [eax-0x9],0x4
  417aa2:	je     0x417abb
  417aa4:	mov    eax,DWORD PTR [ebp+0x8]
  417aa7:	mov    eax,DWORD PTR [eax-0x14]
  417aaa:	or     WORD PTR [eax+0x1c],0x1
  417aaf:	mov    eax,DWORD PTR [ebp+0x8]
  417ab2:	mov    eax,DWORD PTR [eax-0x14]
  417ab5:	or     WORD PTR [eax+0x1c],0x200
  417abb:	xor    eax,eax
  417abd:	push   ebp
  417abe:	push   0x417aea
  417ac3:	push   DWORD PTR fs:[eax]
  417ac6:	mov    DWORD PTR fs:[eax],esp
  417ac9:	mov    eax,DWORD PTR [ebp+0x8]
  417acc:	mov    eax,DWORD PTR [eax-0x8]
  417acf:	mov    ecx,DWORD PTR [eax+0x28]
  417ad2:	mov    eax,DWORD PTR [ebp+0x8]
  417ad5:	mov    eax,DWORD PTR [eax-0x14]
  417ad8:	or     edx,0xffffffff
  417adb:	mov    ebx,DWORD PTR [eax]
  417add:	call   DWORD PTR [ebx+0x2c]
  417ae0:	xor    eax,eax
  417ae2:	pop    edx
  417ae3:	pop    ecx
  417ae4:	pop    ecx
  417ae5:	mov    DWORD PTR fs:[eax],edx
  417ae8:	jmp    0x417b01
  417aea:	jmp    0x404568
  417aef:	mov    eax,DWORD PTR [ebp+0x8]
  417af2:	xor    edx,edx
  417af4:	mov    DWORD PTR [eax-0x14],edx
  417af7:	call   0x404924
  417afc:	call   0x404978
  417b01:	mov    eax,DWORD PTR [ebp+0x8]
  417b04:	mov    eax,DWORD PTR [eax-0x14]
  417b07:	or     WORD PTR [eax+0x1c],0x1
  417b0c:	xor    eax,eax
  417b0e:	pop    edx
  417b0f:	pop    ecx
  417b10:	pop    ecx
  417b11:	mov    DWORD PTR fs:[eax],edx
  417b14:	jmp    0x417b39
  417b16:	jmp    0x404568
  417b1b:	mov    eax,DWORD PTR [ebp+0x8]
  417b1e:	push   eax
  417b1f:	mov    eax,DWORD PTR [ebp+0x8]
  417b22:	add    eax,0xffffffec
  417b25:	call   0x4179d0
  417b2a:	pop    ecx
  417b2b:	test   al,al
  417b2d:	jne    0x417b34
  417b2f:	call   0x404924
  417b34:	call   0x404978
  417b39:	pop    edi
  417b3a:	pop    esi
  417b3b:	pop    ebx
  417b3c:	pop    ebp
  417b3d:	ret    
  417b3e:	mov    eax,eax
  417b40:	push   ebp
  417b41:	mov    ebp,esp
  417b43:	push   ebx
  417b44:	push   esi
  417b45:	push   edi
  417b46:	xor    eax,eax
  417b48:	push   ebp
  417b49:	push   0x417bb8
  417b4e:	push   DWORD PTR fs:[eax]
  417b51:	mov    DWORD PTR fs:[eax],esp
  417b54:	mov    eax,DWORD PTR [ebp+0x8]
  417b57:	mov    eax,DWORD PTR [eax-0x8]
  417b5a:	mov    edx,DWORD PTR [eax+0x2c]
  417b5d:	mov    eax,DWORD PTR [ebp+0x8]
  417b60:	mov    eax,DWORD PTR [eax-0x14]
  417b63:	mov    si,0xfff8
  417b67:	call   0x40429c
  417b6c:	mov    eax,DWORD PTR [ebp+0x8]
  417b6f:	lea    ecx,[eax-0x1c]
  417b72:	mov    eax,DWORD PTR [ebp+0x8]
  417b75:	mov    edx,DWORD PTR [eax-0x14]
  417b78:	mov    eax,DWORD PTR [ebp+0x8]
  417b7b:	mov    eax,DWORD PTR [eax-0x8]
  417b7e:	mov    ebx,DWORD PTR [eax]
  417b80:	call   DWORD PTR [ebx+0x20]
  417b83:	mov    eax,DWORD PTR [ebp+0x8]
  417b86:	mov    eax,DWORD PTR [eax-0x14]
  417b89:	test   BYTE PTR [eax+0x1c],0x10
  417b8d:	je     0x417bae
  417b8f:	mov    eax,DWORD PTR [ebp+0x8]
  417b92:	mov    eax,DWORD PTR [eax-0x1c]
  417b95:	call   0x413ad8
  417b9a:	mov    edx,DWORD PTR [ebp+0x8]
  417b9d:	cmp    eax,DWORD PTR [edx-0x14]
  417ba0:	jne    0x417bae
  417ba2:	mov    eax,DWORD PTR [ebp+0x8]
  417ba5:	mov    eax,DWORD PTR [eax-0x14]
  417ba8:	or     WORD PTR [eax+0x1c],0x200
  417bae:	xor    eax,eax
  417bb0:	pop    edx
  417bb1:	pop    ecx
  417bb2:	pop    ecx
  417bb3:	mov    DWORD PTR fs:[eax],edx
  417bb6:	jmp    0x417bdb
  417bb8:	jmp    0x404568
  417bbd:	mov    eax,DWORD PTR [ebp+0x8]
  417bc0:	push   eax
  417bc1:	mov    eax,DWORD PTR [ebp+0x8]
  417bc4:	add    eax,0xffffffec
  417bc7:	call   0x4179d0
  417bcc:	pop    ecx
  417bcd:	test   al,al
  417bcf:	jne    0x417bd6
  417bd1:	call   0x404924
  417bd6:	call   0x404978
  417bdb:	pop    edi
  417bdc:	pop    esi
  417bdd:	pop    ebx
  417bde:	pop    ebp
  417bdf:	ret    
  417be0:	push   ebp
  417be1:	mov    ebp,esp
  417be3:	push   ebx
  417be4:	push   esi
  417be5:	push   edi
  417be6:	xor    eax,eax
  417be8:	push   ebp
  417be9:	push   0x417c5b
  417bee:	push   DWORD PTR fs:[eax]
  417bf1:	mov    DWORD PTR fs:[eax],esp
  417bf4:	mov    eax,DWORD PTR [ebp+0x8]
  417bf7:	mov    edx,DWORD PTR [eax-0x18]
  417bfa:	mov    eax,DWORD PTR [ebp+0x8]
  417bfd:	mov    eax,DWORD PTR [eax-0x8]
  417c00:	call   0x4192c4
  417c05:	mov    ecx,eax
  417c07:	mov    eax,DWORD PTR [ebp+0x8]
  417c0a:	mov    edx,DWORD PTR [eax-0x1c]
  417c0d:	mov    eax,DWORD PTR [ebp+0x8]
  417c10:	mov    eax,DWORD PTR [eax-0x8]
  417c13:	mov    ebx,DWORD PTR [eax]
  417c15:	call   DWORD PTR [ebx+0x14]
  417c18:	mov    edx,DWORD PTR [ebp+0x8]
  417c1b:	mov    DWORD PTR [edx-0x14],eax
  417c1e:	mov    eax,DWORD PTR [ebp+0x8]
  417c21:	mov    eax,DWORD PTR [eax-0x14]
  417c24:	mov    si,0xfff2
  417c28:	call   0x40429c
  417c2d:	mov    ebx,eax
  417c2f:	mov    eax,DWORD PTR [ebp+0x8]
  417c32:	mov    eax,DWORD PTR [eax-0x8]
  417c35:	mov    DWORD PTR [eax+0x2c],ebx
  417c38:	mov    eax,DWORD PTR [ebp+0x8]
  417c3b:	test   ebx,ebx
  417c3d:	jne    0x417c51
  417c3f:	mov    eax,DWORD PTR [ebp+0x8]
  417c42:	mov    eax,DWORD PTR [eax-0x8]
  417c45:	mov    eax,DWORD PTR [eax+0x18]
  417c48:	mov    edx,DWORD PTR [ebp+0x8]
  417c4b:	mov    edx,DWORD PTR [edx-0x8]
  417c4e:	mov    DWORD PTR [edx+0x2c],eax
  417c51:	xor    eax,eax
  417c53:	pop    edx
  417c54:	pop    ecx
  417c55:	pop    ecx
  417c56:	mov    DWORD PTR fs:[eax],edx
  417c59:	jmp    0x417c7e
  417c5b:	jmp    0x404568
  417c60:	mov    eax,DWORD PTR [ebp+0x8]
  417c63:	push   eax
  417c64:	mov    eax,DWORD PTR [ebp+0x8]
  417c67:	add    eax,0xffffffec
  417c6a:	call   0x4179d0
  417c6f:	pop    ecx
  417c70:	test   al,al
  417c72:	jne    0x417c79
  417c74:	call   0x404924
  417c79:	call   0x404978
  417c7e:	pop    edi
  417c7f:	pop    esi
  417c80:	pop    ebx
  417c81:	pop    ebp
  417c82:	ret    
  417c83:	nop
  417c84:	push   ebp
  417c85:	mov    ebp,esp
  417c87:	add    esp,0xffffffd8
  417c8a:	push   ebx
  417c8b:	push   esi
  417c8c:	push   edi
  417c8d:	xor    ecx,ecx
  417c8f:	mov    DWORD PTR [ebp-0x18],ecx
  417c92:	mov    DWORD PTR [ebp-0x1c],ecx
  417c95:	mov    DWORD PTR [ebp-0x4],ecx
  417c98:	mov    DWORD PTR [ebp-0x10],edx
  417c9b:	mov    DWORD PTR [ebp-0x8],eax
  417c9e:	xor    eax,eax
  417ca0:	push   ebp
  417ca1:	push   0x417ea8
  417ca6:	push   DWORD PTR fs:[eax]
  417ca9:	mov    DWORD PTR fs:[eax],esp
  417cac:	lea    ecx,[ebp-0x20]
  417caf:	lea    edx,[ebp-0x9]
  417cb2:	mov    eax,DWORD PTR [ebp-0x8]
  417cb5:	mov    ebx,DWORD PTR [eax]
  417cb7:	call   DWORD PTR [ebx+0x28]
  417cba:	lea    edx,[ebp-0x18]
  417cbd:	mov    eax,DWORD PTR [ebp-0x8]
  417cc0:	call   0x418c40
  417cc5:	lea    edx,[ebp-0x1c]
  417cc8:	mov    eax,DWORD PTR [ebp-0x8]
  417ccb:	call   0x418c40
  417cd0:	mov    eax,DWORD PTR [ebp-0x8]
  417cd3:	mov    eax,DWORD PTR [eax+0x2c]
  417cd6:	mov    DWORD PTR [ebp-0x24],eax
  417cd9:	mov    eax,DWORD PTR [ebp-0x8]
  417cdc:	mov    eax,DWORD PTR [eax+0x1c]
  417cdf:	mov    DWORD PTR [ebp-0x28],eax
  417ce2:	xor    eax,eax
  417ce4:	push   ebp
  417ce5:	push   0x417e78
  417cea:	push   DWORD PTR fs:[eax]
  417ced:	mov    DWORD PTR fs:[eax],esp
  417cf0:	mov    eax,DWORD PTR [ebp-0x10]
  417cf3:	mov    DWORD PTR [ebp-0x14],eax
  417cf6:	cmp    DWORD PTR [ebp-0x14],0x0
  417cfa:	jne    0x417d12
  417cfc:	test   BYTE PTR [ebp-0x9],0x1
  417d00:	je     0x417d0b
  417d02:	push   ebp
  417d03:	call   0x417be0
  417d08:	pop    ecx
  417d09:	jmp    0x417d12
  417d0b:	push   ebp
  417d0c:	call   0x417a30
  417d11:	pop    ecx
  417d12:	cmp    DWORD PTR [ebp-0x14],0x0
  417d16:	je     0x417e58
  417d1c:	xor    eax,eax
  417d1e:	push   ebp
  417d1f:	push   0x417e36
  417d24:	push   DWORD PTR fs:[eax]
  417d27:	mov    DWORD PTR fs:[eax],esp
  417d2a:	push   ebp
  417d2b:	mov    eax,DWORD PTR [ebp-0x14]
  417d2e:	call   0x4178d0
  417d33:	pop    ecx
  417d34:	mov    eax,DWORD PTR [ebp-0x14]
  417d37:	or     WORD PTR [eax+0x1c],0x1
  417d3c:	push   ebp
  417d3d:	mov    dl,0x1
  417d3f:	movzx  eax,WORD PTR ds:0x417ebc
  417d46:	call   0x417948
  417d4b:	pop    ecx
  417d4c:	test   BYTE PTR [ebp-0x9],0x1
  417d50:	jne    0x417d59
  417d52:	push   ebp
  417d53:	call   0x417b40
  417d58:	pop    ecx
  417d59:	cmp    DWORD PTR [ebp-0x14],0x0
  417d5d:	jne    0x417d71
  417d5f:	xor    eax,eax
  417d61:	pop    edx
  417d62:	pop    ecx
  417d63:	pop    ecx
  417d64:	mov    DWORD PTR fs:[eax],edx
  417d67:	call   0x4049a8
  417d6c:	jmp    0x417e7f
  417d71:	mov    eax,DWORD PTR [ebp-0x14]
  417d74:	test   BYTE PTR [eax+0x1d],0x2
  417d78:	je     0x417d83
  417d7a:	mov    eax,DWORD PTR [ebp-0x8]
  417d7d:	mov    edx,DWORD PTR [ebp-0x14]
  417d80:	mov    DWORD PTR [eax+0x1c],edx
  417d83:	mov    eax,DWORD PTR [ebp-0x14]
  417d86:	or     WORD PTR [eax+0x1c],0x2
  417d8b:	push   ebp
  417d8c:	mov    dl,0x1
  417d8e:	movzx  eax,WORD PTR ds:0x417ec0
  417d95:	call   0x417948
  417d9a:	pop    ecx
  417d9b:	mov    edx,DWORD PTR [ebp-0x8]
  417d9e:	mov    eax,DWORD PTR [ebp-0x14]
  417da1:	mov    ecx,DWORD PTR [eax]
  417da3:	call   DWORD PTR [ecx+0x14]
  417da6:	mov    eax,DWORD PTR [ebp-0x14]
  417da9:	and    WORD PTR [eax+0x1c],0xfffd
  417dae:	push   ebp
  417daf:	xor    edx,edx
  417db1:	movzx  eax,WORD PTR ds:0x417ec0
  417db8:	call   0x417948
  417dbd:	pop    ecx
  417dbe:	test   BYTE PTR [ebp-0x9],0x2
  417dc2:	je     0x417dd9
  417dc4:	mov    eax,DWORD PTR [ebp-0x8]
  417dc7:	mov    eax,DWORD PTR [eax+0x2c]
  417dca:	mov    ecx,DWORD PTR [ebp-0x20]
  417dcd:	mov    edx,DWORD PTR [ebp-0x14]
  417dd0:	mov    si,0xfff9
  417dd4:	call   0x40429c
  417dd9:	test   BYTE PTR [ebp-0x9],0x1
  417ddd:	jne    0x417de8
  417ddf:	mov    eax,DWORD PTR [ebp-0x14]
  417de2:	test   BYTE PTR [eax+0x1d],0x2
  417de6:	je     0x417e14
  417de8:	mov    eax,DWORD PTR [ebp-0x8]
  417deb:	mov    eax,DWORD PTR [eax+0x34]
  417dee:	mov    edx,DWORD PTR [ebp-0x14]
  417df1:	call   0x413ccc
  417df6:	test   eax,eax
  417df8:	jge    0x417e2c
  417dfa:	push   ebp
  417dfb:	mov    eax,DWORD PTR [ebp-0x14]
  417dfe:	call   0x417894
  417e03:	pop    ecx
  417e04:	mov    eax,DWORD PTR [ebp-0x8]
  417e07:	mov    eax,DWORD PTR [eax+0x34]
  417e0a:	mov    edx,DWORD PTR [ebp-0x14]
  417e0d:	call   0x413b38
  417e12:	jmp    0x417e2c
  417e14:	push   ebp
  417e15:	mov    eax,DWORD PTR [ebp-0x14]
  417e18:	call   0x417894
  417e1d:	pop    ecx
  417e1e:	mov    eax,DWORD PTR [ebp-0x8]
  417e21:	mov    eax,DWORD PTR [eax+0x34]
  417e24:	mov    edx,DWORD PTR [ebp-0x14]
  417e27:	call   0x413b38
  417e2c:	xor    eax,eax
  417e2e:	pop    edx
  417e2f:	pop    ecx
  417e30:	pop    ecx
  417e31:	mov    DWORD PTR fs:[eax],edx
  417e34:	jmp    0x417e58
  417e36:	jmp    0x404568
  417e3b:	push   ebp
  417e3c:	call   0x4179b0
  417e41:	pop    ecx
  417e42:	test   al,al
  417e44:	je     0x417e4e
  417e46:	mov    eax,DWORD PTR [ebp-0x14]
  417e49:	call   0x4040a0
  417e4e:	call   0x404924
  417e53:	call   0x404978
  417e58:	xor    eax,eax
  417e5a:	pop    edx
  417e5b:	pop    ecx
  417e5c:	pop    ecx
  417e5d:	mov    DWORD PTR fs:[eax],edx
  417e60:	push   0x417e7f
  417e65:	mov    eax,DWORD PTR [ebp-0x8]
  417e68:	mov    edx,DWORD PTR [ebp-0x24]
  417e6b:	mov    DWORD PTR [eax+0x2c],edx
  417e6e:	mov    eax,DWORD PTR [ebp-0x8]
  417e71:	mov    edx,DWORD PTR [ebp-0x28]
  417e74:	mov    DWORD PTR [eax+0x1c],edx
  417e77:	ret    
  417e78:	jmp    0x40481c
  417e7d:	jmp    0x417e65
  417e7f:	xor    eax,eax
  417e81:	pop    edx
  417e82:	pop    ecx
  417e83:	pop    ecx
  417e84:	mov    DWORD PTR fs:[eax],edx
  417e87:	push   0x417eaf
  417e8c:	lea    eax,[ebp-0x1c]
  417e8f:	mov    edx,0x2
  417e94:	call   0x404fac
  417e99:	lea    eax,[ebp-0x4]
  417e9c:	mov    edx,DWORD PTR ds:0x417870
  417ea2:	call   0x4063bc
  417ea7:	ret    
  417ea8:	jmp    0x40481c
  417ead:	jmp    0x417e8c
  417eaf:	mov    eax,DWORD PTR [ebp-0x14]
  417eb2:	pop    edi
  417eb3:	pop    esi
  417eb4:	pop    ebx
  417eb5:	mov    esp,ebp
  417eb7:	pop    ebp
  417eb8:	ret    
  417eb9:	add    BYTE PTR [eax],al
  417ebb:	add    BYTE PTR [ecx],al
  417ebd:	add    BYTE PTR [eax],al
  417ebf:	add    BYTE PTR [edx],al
  417ec1:	add    BYTE PTR [eax],al
  417ec3:	add    BYTE PTR [ebp-0x75],dl
  417ec6:	in     al,dx
  417ec7:	push   ecx
  417ec8:	push   ebx
  417ec9:	mov    ebx,edx
  417ecb:	mov    DWORD PTR [ebp-0x4],eax
  417ece:	mov    eax,DWORD PTR [ebp-0x4]
  417ed1:	cmp    DWORD PTR [eax+0x30],0x0
  417ed5:	jne    0x417f26
  417ed7:	mov    dl,0x1
  417ed9:	mov    eax,ds:0x4127e0
  417ede:	call   0x404070
  417ee3:	mov    edx,DWORD PTR [ebp-0x4]
  417ee6:	mov    DWORD PTR [edx+0x30],eax
  417ee9:	xor    eax,eax
  417eeb:	push   ebp
  417eec:	push   0x417f1f
  417ef1:	push   DWORD PTR fs:[eax]
  417ef4:	mov    DWORD PTR fs:[eax],esp
  417ef7:	mov    edx,ebx
  417ef9:	mov    eax,DWORD PTR [ebp-0x4]
  417efc:	call   0x417f34
  417f01:	mov    eax,DWORD PTR [ebp-0x4]
  417f04:	call   0x417408
  417f09:	xor    eax,eax
  417f0b:	pop    edx
  417f0c:	pop    ecx
  417f0d:	pop    ecx
  417f0e:	mov    DWORD PTR fs:[eax],edx
  417f11:	push   0x417f30
  417f16:	mov    eax,DWORD PTR [ebp-0x4]
  417f19:	call   0x417570
  417f1e:	ret    
  417f1f:	jmp    0x40481c
  417f24:	jmp    0x417f16
  417f26:	mov    edx,ebx
  417f28:	mov    eax,DWORD PTR [ebp-0x4]
  417f2b:	call   0x417f34
  417f30:	pop    ebx
  417f31:	pop    ecx
  417f32:	pop    ebp
  417f33:	ret    
  417f34:	push   ebp
  417f35:	mov    ebp,esp
  417f37:	add    esp,0xfffffff4
  417f3a:	push   ebx
  417f3b:	push   esi
  417f3c:	push   edi
  417f3d:	mov    ebx,edx
  417f3f:	mov    DWORD PTR [ebp-0x4],eax
  417f42:	jmp    0x417f4e
  417f44:	mov    edx,ebx
  417f46:	mov    eax,DWORD PTR [ebp-0x4]
  417f49:	call   0x418470
  417f4e:	mov    eax,DWORD PTR [ebp-0x4]
  417f51:	call   0x417264
  417f56:	test   al,al
  417f58:	je     0x417f44
  417f5a:	mov    eax,DWORD PTR [ebp-0x4]
  417f5d:	call   0x41830c
  417f62:	mov    eax,DWORD PTR [ebp-0x4]
  417f65:	mov    eax,DWORD PTR [eax+0x2c]
  417f68:	mov    DWORD PTR [ebp-0x8],eax
  417f6b:	mov    eax,DWORD PTR [ebp-0x4]
  417f6e:	mov    eax,DWORD PTR [eax+0x28]
  417f71:	mov    DWORD PTR [ebp-0xc],eax
  417f74:	mov    eax,ebx
  417f76:	mov    si,0xfffb
  417f7a:	call   0x40429c
  417f7f:	mov    edx,DWORD PTR [ebp-0x4]
  417f82:	mov    DWORD PTR [edx+0x2c],eax
  417f85:	xor    eax,eax
  417f87:	push   ebp
  417f88:	push   0x417ff6
  417f8d:	push   DWORD PTR fs:[eax]
  417f90:	mov    DWORD PTR fs:[eax],esp
  417f93:	mov    eax,ebx
  417f95:	mov    si,0xfffc
  417f99:	call   0x40429c
  417f9e:	mov    edi,eax
  417fa0:	mov    eax,DWORD PTR [ebp-0x4]
  417fa3:	mov    DWORD PTR [eax+0x28],edi
  417fa6:	test   edi,edi
  417fa8:	jne    0x417fc2
  417faa:	mov    eax,DWORD PTR [ebp-0x4]
  417fad:	mov    eax,DWORD PTR [eax+0x18]
  417fb0:	mov    edx,DWORD PTR [ebp-0x4]
  417fb3:	mov    DWORD PTR [edx+0x28],eax
  417fb6:	jmp    0x417fc2
  417fb8:	xor    edx,edx
  417fba:	mov    eax,DWORD PTR [ebp-0x4]
  417fbd:	call   0x417c84
  417fc2:	mov    eax,DWORD PTR [ebp-0x4]
  417fc5:	call   0x417264
  417fca:	test   al,al
  417fcc:	je     0x417fb8
  417fce:	mov    eax,DWORD PTR [ebp-0x4]
  417fd1:	call   0x41830c
  417fd6:	xor    eax,eax
  417fd8:	pop    edx
  417fd9:	pop    ecx
  417fda:	pop    ecx
  417fdb:	mov    DWORD PTR fs:[eax],edx
  417fde:	push   0x417ffd
  417fe3:	mov    eax,DWORD PTR [ebp-0x4]
  417fe6:	mov    edx,DWORD PTR [ebp-0x8]
  417fe9:	mov    DWORD PTR [eax+0x2c],edx
  417fec:	mov    eax,DWORD PTR [ebp-0x4]
  417fef:	mov    edx,DWORD PTR [ebp-0xc]
  417ff2:	mov    DWORD PTR [eax+0x28],edx
  417ff5:	ret    
  417ff6:	jmp    0x40481c
  417ffb:	jmp    0x417fe3
  417ffd:	pop    edi
  417ffe:	pop    esi
  417fff:	pop    ebx
  418000:	mov    esp,ebp
  418002:	pop    ebp
  418003:	ret    
  418004:	push   ebx
  418005:	add    esp,0xfffffff4
  418008:	mov    ebx,eax
  41800a:	mov    eax,ebx
  41800c:	call   0x418e1c
  418011:	cmp    al,0x5
  418013:	jne    0x418025
  418015:	mov    edx,esp
  418017:	mov    ecx,0xa
  41801c:	mov    eax,ebx
  41801e:	call   0x417680
  418023:	jmp    0x418033
  418025:	dec    DWORD PTR [ebx+0x10]
  418028:	mov    eax,ebx
  41802a:	call   0x41803c
  41802f:	fstp   TBYTE PTR [esp]
  418032:	fld    TBYTE PTR [esp]
  418036:	add    esp,0xc
  418039:	pop    ebx
  41803a:	ret    
  41803b:	nop
  41803c:	push   ebx
  41803d:	add    esp,0xfffffff0
  418040:	mov    ebx,eax
  418042:	mov    eax,ebx
  418044:	call   0x418e1c
  418049:	cmp    al,0x15
  41804b:	jne    0x41805d
  41804d:	mov    edx,esp
  41804f:	mov    ecx,0x8
  418054:	mov    eax,ebx
  418056:	call   0x417680
  41805b:	jmp    0x418077
  41805d:	dec    DWORD PTR [ebx+0x10]
  418060:	mov    eax,ebx
  418062:	call   0x4182c0
  418067:	mov    DWORD PTR [esp+0x8],eax
  41806b:	mov    DWORD PTR [esp+0xc],edx
  41806f:	fild   QWORD PTR [esp+0x8]
  418073:	fstp   QWORD PTR [esp]
  418076:	fld    QWORD PTR [esp]
  41807a:	add    esp,0x10
  41807d:	pop    ebx
  41807e:	ret    
  41807f:	nop
  418080:	push   ebx
  418081:	add    esp,0xfffffff4
  418084:	mov    ebx,eax
  418086:	mov    eax,ebx
  418088:	call   0x418e1c
  41808d:	cmp    al,0xf
  41808f:	jne    0x4180a1
  418091:	mov    edx,esp
  418093:	mov    ecx,0x4
  418098:	mov    eax,ebx
  41809a:	call   0x417680
  41809f:	jmp    0x4180bb
  4180a1:	dec    DWORD PTR [ebx+0x10]
  4180a4:	mov    eax,ebx
  4180a6:	call   0x4182c0
  4180ab:	mov    DWORD PTR [esp+0x4],eax
  4180af:	mov    DWORD PTR [esp+0x8],edx
  4180b3:	fild   QWORD PTR [esp+0x4]
  4180b7:	fstp   DWORD PTR [esp]
  4180ba:	fld    DWORD PTR [esp]
  4180be:	add    esp,0xc
  4180c1:	pop    ebx
  4180c2:	ret    
  4180c3:	nop
  4180c4:	push   ebx
  4180c5:	add    esp,0xfffffff0
  4180c8:	mov    ebx,eax
  4180ca:	mov    eax,ebx
  4180cc:	call   0x418e1c
  4180d1:	cmp    al,0x10
  4180d3:	jne    0x4180e5
  4180d5:	mov    edx,esp
  4180d7:	mov    ecx,0x8
  4180dc:	mov    eax,ebx
  4180de:	call   0x417680
  4180e3:	jmp    0x418105
  4180e5:	dec    DWORD PTR [ebx+0x10]
  4180e8:	mov    eax,ebx
  4180ea:	call   0x4182c0
  4180ef:	mov    DWORD PTR [esp+0x8],eax
  4180f3:	mov    DWORD PTR [esp+0xc],edx
  4180f7:	fild   QWORD PTR [esp+0x8]
  4180fb:	fmul   DWORD PTR ds:0x418110
  418101:	fistp  QWORD PTR [esp]
  418104:	fild   QWORD PTR [esp]
  418108:	add    esp,0x10
  41810b:	pop    ebx
  41810c:	ret    
  41810d:	add    BYTE PTR [eax],al
  41810f:	add    BYTE PTR [eax],al
  418111:	inc    eax
  418112:	sbb    al,0x46
  418114:	push   ebx
  418115:	add    esp,0xfffffff0
  418118:	mov    ebx,eax
  41811a:	mov    eax,ebx
  41811c:	call   0x418e1c
  418121:	cmp    al,0x11
  418123:	jne    0x418135
  418125:	mov    edx,esp
  418127:	mov    ecx,0x8
  41812c:	mov    eax,ebx
  41812e:	call   0x417680
  418133:	jmp    0x41814f
  418135:	dec    DWORD PTR [ebx+0x10]
  418138:	mov    eax,ebx
  41813a:	call   0x4182c0
  41813f:	mov    DWORD PTR [esp+0x8],eax
  418143:	mov    DWORD PTR [esp+0xc],edx
  418147:	fild   QWORD PTR [esp+0x8]
  41814b:	fstp   QWORD PTR [esp]
  41814e:	fld    QWORD PTR [esp]
  418152:	add    esp,0x10
  418155:	pop    ebx
  418156:	ret    
  418157:	nop
  418158:	push   ebx
  418159:	push   esi
  41815a:	push   ecx
  41815b:	mov    esi,edx
  41815d:	mov    ebx,eax
  41815f:	mov    eax,ebx
  418161:	call   0x418e1c
  418166:	and    eax,0x7f
  418169:	cmp    eax,0xd
  41816c:	ja     0x41820f
  418172:	movzx  eax,BYTE PTR [eax+0x418180]
  418179:	jmp    DWORD PTR [eax*4+0x41818e]
  418180:	add    eax,0x0
  418185:	add    BYTE PTR [eax],al
  418187:	add    DWORD PTR [edx],eax
  418189:	add    eax,DWORD PTR [eax]
  41818b:	add    BYTE PTR [eax],al
  41818d:	add    al,0xf
  41818f:	add    BYTE PTR [ecx+0x0],0xa6
  418193:	add    DWORD PTR [ecx+0x0],0x4181d7
  41819a:	in     eax,0x81
  41819c:	inc    ecx
  41819d:	add    bl,dh
  41819f:	add    DWORD PTR [ecx+0x0],0x418201
  4181a6:	mov    edx,esp
  4181a8:	mov    ecx,0x1
  4181ad:	mov    eax,ebx
  4181af:	call   0x417680
  4181b4:	movzx  ecx,BYTE PTR [esp]
  4181b8:	mov    eax,esi
  4181ba:	xor    edx,edx
  4181bc:	call   0x405078
  4181c1:	mov    eax,esi
  4181c3:	call   0x405478
  4181c8:	mov    edx,eax
  4181ca:	movzx  ecx,BYTE PTR [esp]
  4181ce:	mov    eax,ebx
  4181d0:	call   0x417680
  4181d5:	jmp    0x418214
  4181d7:	mov    eax,esi
  4181d9:	mov    edx,0x418220
  4181de:	call   0x404fdc
  4181e3:	jmp    0x418214
  4181e5:	mov    eax,esi
  4181e7:	mov    edx,0x418230
  4181ec:	call   0x404fdc
  4181f1:	jmp    0x418214
  4181f3:	mov    eax,esi
  4181f5:	mov    edx,0x418240
  4181fa:	call   0x404fdc
  4181ff:	jmp    0x418214
  418201:	mov    eax,esi
  418203:	mov    edx,0x41824c
  418208:	call   0x404fdc
  41820d:	jmp    0x418214
  41820f:	call   0x417090
  418214:	pop    edx
  418215:	pop    esi
  418216:	pop    ebx
  418217:	ret    
  418218:	(bad)  
  418219:	(bad)  
  41821a:	(bad)  
  41821b:	inc    DWORD PTR ds:0x46000000
  418221:	popa   
  418222:	ins    BYTE PTR es:[edi],dx
  418223:	jae    0x41828a
  418225:	add    BYTE PTR [eax],al
  418227:	add    bh,bh
  418229:	(bad)  
  41822a:	(bad)  
  41822b:	inc    DWORD PTR [eax+eax*1]
  41822e:	add    BYTE PTR [eax],al
  418230:	push   esp
  418231:	jb     0x4182a8
  418233:	add    BYTE PTR gs:[eax],al
  418236:	add    BYTE PTR [eax],al
  418238:	(bad)  
  418239:	(bad)  
  41823a:	(bad)  
  41823b:	inc    DWORD PTR [ebx]
  41823d:	add    BYTE PTR [eax],al
  41823f:	add    BYTE PTR [esi+0x69],ch
  418242:	ins    BYTE PTR es:[edi],dx
  418243:	add    bh,bh
  418245:	(bad)  
  418246:	(bad)  
  418247:	inc    DWORD PTR [eax+eax*1]
  41824a:	add    BYTE PTR [eax],al
  41824c:	dec    esi
  41824d:	jne    0x4182bb
  41824f:	ins    BYTE PTR es:[edi],dx
  418250:	add    BYTE PTR [eax],al
  418252:	add    BYTE PTR [eax],al
  418254:	push   ebx
  418255:	add    esp,0xfffffff8
  418258:	mov    ebx,eax
  41825a:	mov    eax,ebx
  41825c:	call   0x418e1c
  418261:	sub    al,0x2
  418263:	je     0x41826f
  418265:	dec    al
  418267:	je     0x418289
  418269:	dec    al
  41826b:	je     0x4182a3
  41826d:	jmp    0x4182b3
  41826f:	lea    edx,[esp+0x4]
  418273:	mov    ecx,0x1
  418278:	mov    eax,ebx
  41827a:	call   0x417680
  41827f:	movsx  eax,BYTE PTR [esp+0x4]
  418284:	mov    DWORD PTR [esp],eax
  418287:	jmp    0x4182b8
  418289:	lea    edx,[esp+0x6]
  41828d:	mov    ecx,0x2
  418292:	mov    eax,ebx
  418294:	call   0x417680
  418299:	movsx  eax,WORD PTR [esp+0x6]
  41829e:	mov    DWORD PTR [esp],eax
  4182a1:	jmp    0x4182b8
  4182a3:	mov    edx,esp
  4182a5:	mov    ecx,0x4
  4182aa:	mov    eax,ebx
  4182ac:	call   0x417680
  4182b1:	jmp    0x4182b8
  4182b3:	call   0x417090
  4182b8:	mov    eax,DWORD PTR [esp]
  4182bb:	pop    ecx
  4182bc:	pop    edx
  4182bd:	pop    ebx
  4182be:	ret    
  4182bf:	nop
  4182c0:	push   ebx
  4182c1:	add    esp,0xfffffff8
  4182c4:	mov    ebx,eax
  4182c6:	mov    eax,ebx
  4182c8:	call   0x41765c
  4182cd:	cmp    al,0x13
  4182cf:	jne    0x4182e8
  4182d1:	mov    eax,ebx
  4182d3:	call   0x418e1c
  4182d8:	mov    edx,esp
  4182da:	mov    ecx,0x8
  4182df:	mov    eax,ebx
  4182e1:	call   0x417680
  4182e6:	jmp    0x4182f7
  4182e8:	mov    eax,ebx
  4182ea:	call   0x418254
  4182ef:	cdq    
  4182f0:	mov    DWORD PTR [esp],eax
  4182f3:	mov    DWORD PTR [esp+0x4],edx
  4182f7:	mov    eax,DWORD PTR [esp]
  4182fa:	mov    edx,DWORD PTR [esp+0x4]
  4182fe:	pop    ecx
  4182ff:	pop    edx
  418300:	pop    ebx
  418301:	ret    
  418302:	mov    eax,eax
  418304:	mov    dl,0x1
  418306:	call   0x41711c
  41830b:	ret    
  41830c:	xor    edx,edx
  41830e:	call   0x41711c
  418313:	ret    
  418314:	push   ebx
  418315:	push   esi
  418316:	push   edi
  418317:	mov    edi,ecx
  418319:	mov    esi,edx
  41831b:	mov    ebx,eax
  41831d:	movzx  eax,BYTE PTR ds:0x418350
  418324:	mov    BYTE PTR [esi],al
  418326:	mov    eax,ebx
  418328:	call   0x41765c
  41832d:	and    al,0xf0
  41832f:	cmp    al,0xf0
  418331:	jne    0x41834c
  418333:	mov    eax,ebx
  418335:	call   0x418e1c
  41833a:	and    al,0xf
  41833c:	mov    BYTE PTR [esi],al
  41833e:	test   BYTE PTR [esi],0x2
  418341:	je     0x41834c
  418343:	mov    eax,ebx
  418345:	call   0x418254
  41834a:	mov    DWORD PTR [edi],eax
  41834c:	pop    edi
  41834d:	pop    esi
  41834e:	pop    ebx
  41834f:	ret    
  418350:	add    BYTE PTR [eax],al
  418352:	add    BYTE PTR [eax],al
  418354:	push   ebp
  418355:	mov    ebp,esp
  418357:	add    esp,0xfffffedc
  41835d:	push   ebx
  41835e:	xor    edx,edx
  418360:	mov    DWORD PTR [ebp-0x4],edx
  418363:	mov    ebx,eax
  418365:	xor    eax,eax
  418367:	push   ebp
  418368:	push   0x418445
  41836d:	push   DWORD PTR fs:[eax]
  418370:	mov    DWORD PTR fs:[eax],esp
  418373:	lea    eax,[ebp-0x4]
  418376:	call   0x404f88
  41837b:	mov    eax,DWORD PTR [ebp+0x8]
  41837e:	mov    eax,DWORD PTR [eax-0x4]
  418381:	mov    edx,DWORD PTR ds:0x41335c
  418387:	call   0x40422c
  41838c:	test   al,al
  41838e:	je     0x4183a1
  418390:	lea    eax,[ebp-0x4]
  418393:	mov    edx,DWORD PTR [ebp+0x8]
  418396:	mov    edx,DWORD PTR [edx-0x4]
  418399:	mov    edx,DWORD PTR [edx+0x8]
  41839c:	call   0x405020
  4183a1:	cmp    DWORD PTR [ebp-0x4],0x0
  4183a5:	jne    0x4183c8
  4183a7:	lea    edx,[ebp-0x104]
  4183ad:	mov    eax,DWORD PTR [ebp+0x8]
  4183b0:	mov    eax,DWORD PTR [eax-0x4]
  4183b3:	mov    eax,DWORD PTR [eax]
  4183b5:	call   0x403f80
  4183ba:	lea    edx,[ebp-0x104]
  4183c0:	lea    eax,[ebp-0x4]
  4183c3:	call   0x4051ec
  4183c8:	mov    eax,DWORD PTR [ebp-0x4]
  4183cb:	mov    DWORD PTR [ebp-0x124],eax
  4183d1:	mov    BYTE PTR [ebp-0x120],0xb
  4183d8:	mov    eax,ds:0x46dbbc
  4183dd:	mov    eax,DWORD PTR [eax]
  4183df:	mov    DWORD PTR [ebp-0x11c],eax
  4183e5:	mov    BYTE PTR [ebp-0x118],0xb
  4183ec:	mov    eax,DWORD PTR [ebp+0x8]
  4183ef:	mov    eax,DWORD PTR [eax-0x8]
  4183f2:	mov    DWORD PTR [ebp-0x114],eax
  4183f8:	mov    BYTE PTR [ebp-0x110],0xb
  4183ff:	mov    eax,DWORD PTR [ebx+0x4]
  418402:	mov    DWORD PTR [ebp-0x10c],eax
  418408:	mov    BYTE PTR [ebp-0x108],0xb
  41840f:	lea    eax,[ebp-0x124]
  418415:	push   eax
  418416:	push   0x3
  418418:	mov    ecx,DWORD PTR ds:0x46de18
  41841e:	mov    dl,0x1
  418420:	mov    eax,ds:0x4125c0
  418425:	call   0x40c9ac
  41842a:	call   0x4048fc
  41842f:	xor    eax,eax
  418431:	pop    edx
  418432:	pop    ecx
  418433:	pop    ecx
  418434:	mov    DWORD PTR fs:[eax],edx
  418437:	push   0x41844c
  41843c:	lea    eax,[ebp-0x4]
  41843f:	call   0x404f88
  418444:	ret    
  418445:	jmp    0x40481c
  41844a:	jmp    0x41843c
  41844c:	pop    ebx
  41844d:	mov    esp,ebp
  41844f:	pop    ebp
  418450:	ret    
  418451:	lea    eax,[eax+0x0]
  418454:	push   ebp
  418455:	mov    ebp,esp
  418457:	mov    eax,DWORD PTR [ebp+0x8]
  41845a:	mov    eax,DWORD PTR [eax-0xc]
  41845d:	call   0x418f2c
  418462:	mov    eax,ds:0x46ddec
  418467:	call   0x417078
  41846c:	pop    ebp
  41846d:	ret    
  41846e:	mov    eax,eax
  418470:	push   ebp
  418471:	mov    ebp,esp
  418473:	add    esp,0xffffffe8
  418476:	push   ebx
  418477:	push   esi
  418478:	push   edi
  418479:	xor    ecx,ecx
  41847b:	mov    DWORD PTR [ebp-0x8],ecx
  41847e:	mov    DWORD PTR [ebp-0x4],edx
  418481:	mov    DWORD PTR [ebp-0xc],eax
  418484:	xor    eax,eax
  418486:	push   ebp
  418487:	push   0x4186b8
  41848c:	push   DWORD PTR fs:[eax]
  41848f:	mov    DWORD PTR fs:[eax],esp
  418492:	xor    edx,edx
  418494:	push   ebp
  418495:	push   0x41866a
  41849a:	push   DWORD PTR fs:[edx]
  41849d:	mov    DWORD PTR fs:[edx],esp
  4184a0:	lea    edx,[ebp-0x8]
  4184a3:	mov    eax,DWORD PTR [ebp-0xc]
  4184a6:	call   0x418c40
  4184ab:	xor    edx,edx
  4184ad:	push   ebp
  4184ae:	push   0x418643
  4184b3:	push   DWORD PTR fs:[edx]
  4184b6:	mov    DWORD PTR fs:[edx],esp
  4184b9:	mov    ebx,0x1
  4184be:	mov    eax,DWORD PTR [ebp-0x8]
  4184c1:	test   eax,eax
  4184c3:	je     0x4184ca
  4184c5:	sub    eax,0x4
  4184c8:	mov    eax,DWORD PTR [eax]
  4184ca:	mov    esi,eax
  4184cc:	mov    eax,DWORD PTR [ebp-0x4]
  4184cf:	mov    DWORD PTR [ebp-0x14],eax
  4184d2:	mov    eax,DWORD PTR [ebp-0xc]
  4184d5:	mov    BYTE PTR [eax+0x88],0x1
  4184dc:	mov    DWORD PTR [ebp-0x10],ebx
  4184df:	jmp    0x4184e2
  4184e1:	inc    ebx
  4184e2:	cmp    esi,ebx
  4184e4:	jl     0x4184f0
  4184e6:	mov    eax,DWORD PTR [ebp-0x8]
  4184e9:	cmp    BYTE PTR [eax+ebx*1-0x1],0x2e
  4184ee:	jne    0x4184e1
  4184f0:	mov    eax,DWORD PTR [ebp-0xc]
  4184f3:	add    eax,0x80
  4184f8:	push   eax
  4184f9:	mov    ecx,ebx
  4184fb:	sub    ecx,DWORD PTR [ebp-0x10]
  4184fe:	mov    edx,DWORD PTR [ebp-0x10]
  418501:	mov    eax,DWORD PTR [ebp-0x8]
  418504:	call   0x405480
  418509:	cmp    esi,ebx
  41850b:	jl     0x4185d0
  418511:	mov    eax,DWORD PTR [ebp-0x14]
  418514:	mov    eax,DWORD PTR [eax]
  418516:	call   0x4042c8
  41851b:	mov    edx,DWORD PTR [ebp-0xc]
  41851e:	mov    edx,DWORD PTR [edx+0x80]
  418524:	call   0x411bd8
  418529:	mov    edi,eax
  41852b:	test   edi,edi
  41852d:	jne    0x418590
  41852f:	mov    eax,DWORD PTR [ebp-0xc]
  418532:	add    eax,0x80
  418537:	mov    edx,DWORD PTR [ebp-0x8]
  41853a:	call   0x404fdc
  41853f:	mov    eax,DWORD PTR [ebp-0xc]
  418542:	mov    BYTE PTR [eax+0x88],0x0
  418549:	mov    edx,DWORD PTR [ebp-0xc]
  41854c:	mov    eax,DWORD PTR [ebp-0x14]
  41854f:	mov    ecx,DWORD PTR [eax]
  418551:	call   DWORD PTR [ecx+0x4]
  418554:	mov    eax,DWORD PTR [ebp-0xc]
  418557:	mov    BYTE PTR [eax+0x88],0x1
  41855e:	mov    eax,DWORD PTR [ebp-0xc]
  418561:	cmp    DWORD PTR [eax+0x80],0x0
  418568:	je     0x41857b
  41856a:	mov    eax,DWORD PTR [ebp-0xc]
  41856d:	mov    edx,DWORD PTR [eax+0x80]
  418573:	mov    eax,DWORD PTR [ebp-0xc]
  418576:	call   0x41766c
  41857b:	xor    eax,eax
  41857d:	pop    edx
  41857e:	pop    ecx
  41857f:	pop    ecx
  418580:	mov    DWORD PTR fs:[eax],edx
  418583:	xor    eax,eax
  418585:	pop    edx
  418586:	pop    ecx
  418587:	pop    ecx
  418588:	mov    DWORD PTR fs:[eax],edx
  41858b:	jmp    0x4186a2
  418590:	xor    eax,eax
  418592:	mov    DWORD PTR [ebp-0x18],eax
  418595:	mov    eax,DWORD PTR [edi]
  418597:	mov    eax,DWORD PTR [eax]
  418599:	cmp    BYTE PTR [eax],0x7
  41859c:	jne    0x4185ab
  41859e:	mov    edx,edi
  4185a0:	mov    eax,DWORD PTR [ebp-0x14]
  4185a3:	call   0x411c9c
  4185a8:	mov    DWORD PTR [ebp-0x18],eax
  4185ab:	mov    eax,DWORD PTR [ebp-0x18]
  4185ae:	mov    edx,DWORD PTR ds:0x41289c
  4185b4:	call   0x40422c
  4185b9:	test   al,al
  4185bb:	jne    0x4185c4
  4185bd:	push   ebp
  4185be:	call   0x418454
  4185c3:	pop    ecx
  4185c4:	mov    eax,DWORD PTR [ebp-0x18]
  4185c7:	mov    DWORD PTR [ebp-0x14],eax
  4185ca:	inc    ebx
  4185cb:	jmp    0x4184dc
  4185d0:	mov    eax,DWORD PTR [ebp-0x14]
  4185d3:	mov    eax,DWORD PTR [eax]
  4185d5:	call   0x4042c8
  4185da:	mov    edx,DWORD PTR [ebp-0xc]
  4185dd:	mov    edx,DWORD PTR [edx+0x80]
  4185e3:	call   0x411bd8
  4185e8:	mov    edi,eax
  4185ea:	test   edi,edi
  4185ec:	je     0x4185fd
  4185ee:	mov    ecx,edi
  4185f0:	mov    edx,DWORD PTR [ebp-0x14]
  4185f3:	mov    eax,DWORD PTR [ebp-0xc]
  4185f6:	call   0x41886c
  4185fb:	jmp    0x418639
  4185fd:	mov    eax,DWORD PTR [ebp-0xc]
  418600:	mov    BYTE PTR [eax+0x88],0x0
  418607:	mov    edx,DWORD PTR [ebp-0xc]
  41860a:	mov    eax,DWORD PTR [ebp-0x14]
  41860d:	mov    ecx,DWORD PTR [eax]
  41860f:	call   DWORD PTR [ecx+0x4]
  418612:	mov    eax,DWORD PTR [ebp-0xc]
  418615:	mov    BYTE PTR [eax+0x88],0x1
  41861c:	mov    eax,DWORD PTR [ebp-0xc]
  41861f:	cmp    DWORD PTR [eax+0x80],0x0
  418626:	je     0x418639
  418628:	mov    eax,DWORD PTR [ebp-0xc]
  41862b:	mov    edx,DWORD PTR [eax+0x80]
  418631:	mov    eax,DWORD PTR [ebp-0xc]
  418634:	call   0x41766c
  418639:	xor    eax,eax
  41863b:	pop    edx
  41863c:	pop    ecx
  41863d:	pop    ecx
  41863e:	mov    DWORD PTR fs:[eax],edx
  418641:	jmp    0x418660
  418643:	jmp    0x404694
  418648:	add    DWORD PTR [eax],eax
  41864a:	add    BYTE PTR [eax],al
  41864c:	hlt    
  41864d:	jbe    0x41868f
  41864f:	add    BYTE PTR [esi+eax*4+0x41],dl
  418653:	add    BYTE PTR [ebp-0x18],dl
  418656:	cli    
  418657:	cld    
  418658:	(bad)  
  418659:	call   FWORD PTR [ecx-0x18]
  41865c:	sbb    bl,al
  41865e:	(bad)  
  41865f:	push   DWORD PTR [ebx]
  418661:	rcr    BYTE PTR [edx+0x59],0x59
  418665:	mov    DWORD PTR fs:[eax],edx
  418668:	jmp    0x4186a2
  41866a:	jmp    0x404694
  41866f:	add    DWORD PTR [eax],eax
  418671:	add    BYTE PTR [eax],al
  418673:	hlt    
  418674:	jbe    0x4186b6
  418676:	add    BYTE PTR [ebx-0x7a],bh
  418679:	inc    ecx
  41867a:	add    BYTE PTR [ecx-0xbba743d],cl
  418680:	cmp    BYTE PTR [eax+0x88],0x0
  418687:	je     0x418698
  418689:	mov    edx,DWORD PTR [ebx+0x4]
  41868c:	mov    eax,DWORD PTR [ebp-0xc]
  41868f:	mov    ecx,DWORD PTR [eax]
  418691:	call   DWORD PTR [ecx+0x10]
  418694:	test   al,al
  418696:	jne    0x41869d
  418698:	call   0x404924
  41869d:	call   0x404978
  4186a2:	xor    eax,eax
  4186a4:	pop    edx
  4186a5:	pop    ecx
  4186a6:	pop    ecx
  4186a7:	mov    DWORD PTR fs:[eax],edx
  4186aa:	push   0x4186bf
  4186af:	lea    eax,[ebp-0x8]
  4186b2:	call   0x404f88
  4186b7:	ret    
  4186b8:	jmp    0x40481c
  4186bd:	jmp    0x4186af
  4186bf:	pop    edi
  4186c0:	pop    esi
  4186c1:	pop    ebx
  4186c2:	mov    esp,ebp
  4186c4:	pop    ebp
  4186c5:	ret    
  4186c6:	mov    eax,eax
  4186c8:	push   ebp
  4186c9:	mov    ebp,esp
  4186cb:	add    esp,0xfffffff8
  4186ce:	push   ebx
  4186cf:	push   esi
  4186d0:	push   edi
  4186d1:	mov    edi,ecx
  4186d3:	mov    esi,edx
  4186d5:	mov    DWORD PTR [ebp-0x4],eax
  4186d8:	mov    eax,DWORD PTR [esi]
  4186da:	mov    eax,DWORD PTR [eax]
  4186dc:	call   0x413a5c
  4186e1:	mov    ebx,eax
  4186e3:	test   ebx,ebx
  4186e5:	je     0x418701
  4186e7:	lea    edx,[ebp-0x8]
  4186ea:	mov    eax,edi
  4186ec:	call   ebx
  4186ee:	test   al,al
  4186f0:	je     0x418701
  4186f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4186f5:	mov    edx,esi
  4186f7:	mov    eax,DWORD PTR [ebp-0x4]
  4186fa:	call   0x411d10
  4186ff:	jmp    0x418706
  418701:	call   0x417090
  418706:	pop    edi
  418707:	pop    esi
  418708:	pop    ebx
  418709:	pop    ecx
  41870a:	pop    ecx
  41870b:	pop    ebp
  41870c:	ret    
  41870d:	lea    eax,[eax+0x0]
  418710:	push   ebp
  418711:	mov    ebp,esp
  418713:	push   ebx
  418714:	push   esi
  418715:	push   edi
  418716:	mov    edi,ecx
  418718:	mov    esi,edx
  41871a:	mov    ebx,eax
  41871c:	mov    eax,DWORD PTR [ebp+0x8]
  41871f:	mov    eax,DWORD PTR [eax-0x4]
  418722:	mov    eax,DWORD PTR [eax+0x18]
  418725:	push   eax
  418726:	push   esi
  418727:	push   0x0
  418729:	push   edi
  41872a:	mov    ecx,ebx
  41872c:	mov    dl,0x1
  41872e:	mov    eax,ds:0x416c70
  418733:	call   0x416d48
  418738:	mov    edx,eax
  41873a:	mov    eax,DWORD PTR [ebp+0x8]
  41873d:	mov    eax,DWORD PTR [eax-0x4]
  418740:	mov    eax,DWORD PTR [eax+0x30]
  418743:	call   0x413b38
  418748:	pop    edi
  418749:	pop    esi
  41874a:	pop    ebx
  41874b:	pop    ebp
  41874c:	ret    
  41874d:	lea    eax,[eax+0x0]
  418750:	push   ebp
  418751:	mov    ebp,esp
  418753:	xor    ecx,ecx
  418755:	push   ecx
  418756:	push   ecx
  418757:	push   ecx
  418758:	push   ecx
  418759:	xor    eax,eax
  41875b:	push   ebp
  41875c:	push   0x41879f
  418761:	push   DWORD PTR fs:[eax]
  418764:	mov    DWORD PTR fs:[eax],esp
  418767:	lea    edx,[ebp-0x10]
  41876a:	mov    eax,DWORD PTR [ebp+0x8]
  41876d:	mov    eax,DWORD PTR [eax-0x4]
  418770:	call   0x419548
  418775:	lea    ecx,[ebp-0x10]
  418778:	mov    eax,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [eax-0xc]
  41877e:	mov    eax,DWORD PTR [ebp+0x8]
  418781:	mov    eax,DWORD PTR [eax-0x8]
  418784:	call   0x412254
  418789:	xor    eax,eax
  41878b:	pop    edx
  41878c:	pop    ecx
  41878d:	pop    ecx
  41878e:	mov    DWORD PTR fs:[eax],edx
  418791:	push   0x4187a6
  418796:	lea    eax,[ebp-0x10]
  418799:	call   0x40fe18
  41879e:	ret    
  41879f:	jmp    0x40481c
  4187a4:	jmp    0x418796
  4187a6:	mov    esp,ebp
  4187a8:	pop    ebp
  4187a9:	ret    
  4187aa:	mov    eax,eax
  4187ac:	push   ebp
  4187ad:	mov    ebp,esp
  4187af:	push   0x0
  4187b1:	push   0x0
  4187b3:	xor    eax,eax
  4187b5:	push   ebp
  4187b6:	push   0x41885e
  4187bb:	push   DWORD PTR fs:[eax]
  4187be:	mov    DWORD PTR fs:[eax],esp
  4187c1:	mov    eax,DWORD PTR [ebp+0x8]
  4187c4:	mov    eax,DWORD PTR [eax-0x4]
  4187c7:	call   0x41765c
  4187cc:	cmp    al,0xd
  4187ce:	jne    0x4187f9
  4187d0:	mov    eax,DWORD PTR [ebp+0x8]
  4187d3:	mov    eax,DWORD PTR [eax-0x4]
  4187d6:	call   0x418e1c
  4187db:	lea    eax,[ebp-0x4]
  4187de:	call   0x406a98
  4187e3:	mov    eax,DWORD PTR [ebp+0x8]
  4187e6:	mov    edx,DWORD PTR [eax-0xc]
  4187e9:	mov    eax,DWORD PTR [ebp+0x8]
  4187ec:	mov    eax,DWORD PTR [eax-0x8]
  4187ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4187f2:	call   0x412308
  4187f7:	jmp    0x418840
  4187f9:	mov    eax,DWORD PTR [ebp+0x8]
  4187fc:	mov    eax,DWORD PTR [eax-0x4]
  4187ff:	mov    eax,DWORD PTR [eax+0x18]
  418802:	push   eax
  418803:	mov    eax,DWORD PTR [ebp+0x8]
  418806:	mov    eax,DWORD PTR [eax-0xc]
  418809:	push   eax
  41880a:	push   0x0
  41880c:	lea    edx,[ebp-0x8]
  41880f:	mov    eax,DWORD PTR [ebp+0x8]
  418812:	mov    eax,DWORD PTR [eax-0x4]
  418815:	call   0x418158
  41881a:	mov    eax,DWORD PTR [ebp-0x8]
  41881d:	push   eax
  41881e:	mov    eax,DWORD PTR [ebp+0x8]
  418821:	mov    ecx,DWORD PTR [eax-0x8]
  418824:	mov    dl,0x1
  418826:	mov    eax,ds:0x416ce8
  41882b:	call   0x416d48
  418830:	mov    edx,eax
  418832:	mov    eax,DWORD PTR [ebp+0x8]
  418835:	mov    eax,DWORD PTR [eax-0x4]
  418838:	mov    eax,DWORD PTR [eax+0x30]
  41883b:	call   0x413b38
  418840:	xor    eax,eax
  418842:	pop    edx
  418843:	pop    ecx
  418844:	pop    ecx
  418845:	mov    DWORD PTR fs:[eax],edx
  418848:	push   0x418865
  41884d:	lea    eax,[ebp-0x8]
  418850:	call   0x404f88
  418855:	lea    eax,[ebp-0x4]
  418858:	call   0x406a98
  41885d:	ret    
  41885e:	jmp    0x40481c
  418863:	jmp    0x41884d
  418865:	pop    ecx
  418866:	pop    ecx
  418867:	pop    ebp
  418868:	ret    
  418869:	lea    eax,[eax+0x0]
  41886c:	push   ebp
  41886d:	mov    ebp,esp
  41886f:	push   ecx
  418870:	mov    ecx,0x5
  418875:	push   0x0
  418877:	push   0x0
  418879:	dec    ecx
  41887a:	jne    0x418875
  41887c:	xchg   DWORD PTR [ebp-0x4],ecx
  41887f:	push   ebx
  418880:	mov    DWORD PTR [ebp-0xc],ecx
  418883:	mov    DWORD PTR [ebp-0x8],edx
  418886:	mov    DWORD PTR [ebp-0x4],eax
  418889:	xor    eax,eax
  41888b:	push   ebp
  41888c:	push   0x418b78
  418891:	push   DWORD PTR fs:[eax]
  418894:	mov    DWORD PTR fs:[eax],esp
  418897:	mov    eax,DWORD PTR [ebp-0xc]
  41889a:	cmp    DWORD PTR [eax+0x8],0x0
  41889e:	jne    0x4188e1
  4188a0:	mov    eax,DWORD PTR [ebp-0xc]
  4188a3:	mov    eax,DWORD PTR [eax]
  4188a5:	mov    eax,DWORD PTR [eax]
  4188a7:	cmp    BYTE PTR [eax],0x7
  4188aa:	jne    0x4188d7
  4188ac:	mov    edx,DWORD PTR [ebp-0xc]
  4188af:	mov    eax,DWORD PTR [ebp-0x8]
  4188b2:	call   0x411c9c
  4188b7:	mov    edx,DWORD PTR ds:0x41335c
  4188bd:	call   0x40422c
  4188c2:	test   al,al
  4188c4:	je     0x4188d7
  4188c6:	mov    edx,DWORD PTR [ebp-0xc]
  4188c9:	mov    eax,DWORD PTR [ebp-0x8]
  4188cc:	call   0x411c9c
  4188d1:	test   BYTE PTR [eax+0x24],0x4
  4188d5:	jne    0x4188e1
  4188d7:	mov    eax,ds:0x46dd74
  4188dc:	call   0x417078
  4188e1:	mov    eax,DWORD PTR [ebp-0xc]
  4188e4:	mov    eax,DWORD PTR [eax]
  4188e6:	mov    ebx,DWORD PTR [eax]
  4188e8:	movzx  eax,BYTE PTR [ebx]
  4188eb:	cmp    eax,0x10
  4188ee:	ja     0x418b48
  4188f4:	jmp    DWORD PTR [eax*4+0x4188fb]
  4188fb:	dec    eax
  4188fc:	mov    eax,DWORD PTR [ecx+0x0]
  4188ff:	aas    
  418900:	mov    DWORD PTR [ecx+0x0],eax
  418903:	or     DWORD PTR [ecx-0x7646ffbf],0x41
  41890a:	add    al,ah
  41890c:	mov    DWORD PTR [ecx+0x0],eax
  41890f:	dec    DWORD PTR [ecx-0x75c4ffbf]
  418915:	inc    ecx
  418916:	add    BYTE PTR [edi-0x76],dl
  418919:	inc    ecx
  41891a:	add    ch,al
  41891c:	mov    al,BYTE PTR [ecx+0x0]
  41891f:	sahf   
  418920:	mov    DWORD PTR [ecx+0x0],eax
  418923:	dec    DWORD PTR [ecx-0x75e2ffbf]
  418929:	inc    ecx
  41892a:	add    BYTE PTR [ecx],ah
  41892c:	mov    eax,DWORD PTR [ecx+0x0]
  41892f:	dec    eax
  418930:	mov    eax,DWORD PTR [ecx+0x0]
  418933:	dec    eax
  418934:	mov    eax,DWORD PTR [ecx+0x0]
  418937:	inc    ecx
  418938:	mov    eax,DWORD PTR [ecx+0x0]
  41893b:	sub    cl,BYTE PTR [ebx+0x458b0041]
  418941:	cld    
  418942:	call   0x41765c
  418947:	cmp    al,0x7
  418949:	jne    0x418969
  41894b:	lea    edx,[ebp-0x18]
  41894e:	mov    eax,DWORD PTR [ebp-0x4]
  418951:	call   0x418158
  418956:	mov    ecx,DWORD PTR [ebp-0x18]
  418959:	mov    edx,DWORD PTR [ebp-0xc]
  41895c:	mov    eax,DWORD PTR [ebp-0x8]
  41895f:	call   0x4186c8
  418964:	jmp    0x418b48
  418969:	mov    eax,DWORD PTR [ebp-0x4]
  41896c:	call   0x418254
  418971:	mov    ecx,eax
  418973:	mov    edx,DWORD PTR [ebp-0xc]
  418976:	mov    eax,DWORD PTR [ebp-0x8]
  418979:	call   0x411d10
  41897e:	jmp    0x418b48
  418983:	mov    eax,DWORD PTR [ebp-0x4]
  418986:	call   0x417708
  41898b:	movzx  ecx,al
  41898e:	mov    edx,DWORD PTR [ebp-0xc]
  418991:	mov    eax,DWORD PTR [ebp-0x8]
  418994:	call   0x411d10
  418999:	jmp    0x418b48
  41899e:	mov    eax,DWORD PTR [ebp-0x4]
  4189a1:	call   0x417768
  4189a6:	movzx  ecx,ax
  4189a9:	mov    edx,DWORD PTR [ebp-0xc]
  4189ac:	mov    eax,DWORD PTR [ebp-0x8]
  4189af:	call   0x411d10
  4189b4:	jmp    0x418b48
  4189b9:	lea    edx,[ebp-0x1c]
  4189bc:	mov    eax,DWORD PTR [ebp-0x4]
  4189bf:	call   0x418158
  4189c4:	mov    edx,DWORD PTR [ebp-0x1c]
  4189c7:	mov    eax,ebx
  4189c9:	call   0x411b74
  4189ce:	mov    ecx,eax
  4189d0:	mov    edx,DWORD PTR [ebp-0xc]
  4189d3:	mov    eax,DWORD PTR [ebp-0x8]
  4189d6:	call   0x411d10
  4189db:	jmp    0x418b48
  4189e0:	mov    eax,DWORD PTR [ebp-0x4]
  4189e3:	call   0x418004
  4189e8:	add    esp,0xfffffff4
  4189eb:	fstp   TBYTE PTR [esp]
  4189ee:	fwait
  4189ef:	mov    edx,DWORD PTR [ebp-0xc]
  4189f2:	mov    eax,DWORD PTR [ebp-0x8]
  4189f5:	call   0x412048
  4189fa:	jmp    0x418b48
  4189ff:	lea    edx,[ebp-0x20]
  418a02:	mov    eax,DWORD PTR [ebp-0x4]
  418a05:	call   0x418c7c
  418a0a:	mov    ecx,DWORD PTR [ebp-0x20]
  418a0d:	mov    edx,DWORD PTR [ebp-0xc]
  418a10:	mov    eax,DWORD PTR [ebp-0x8]
  418a13:	call   0x411f40
  418a18:	jmp    0x418b48
  418a1d:	lea    edx,[ebp-0x24]
  418a20:	mov    eax,DWORD PTR [ebp-0x4]
  418a23:	call   0x418d38
  418a28:	mov    ecx,DWORD PTR [ebp-0x24]
  418a2b:	mov    edx,DWORD PTR [ebp-0xc]
  418a2e:	mov    eax,DWORD PTR [ebp-0x8]
  418a31:	call   0x411f70
  418a36:	jmp    0x418b48
  418a3b:	mov    edx,ebx
  418a3d:	mov    eax,DWORD PTR [ebp-0x4]
  418a40:	call   0x418b84
  418a45:	mov    ecx,eax
  418a47:	mov    edx,DWORD PTR [ebp-0xc]
  418a4a:	mov    eax,DWORD PTR [ebp-0x8]
  418a4d:	call   0x411d10
  418a52:	jmp    0x418b48
  418a57:	mov    eax,DWORD PTR [ebp-0x4]
  418a5a:	call   0x41765c
  418a5f:	sub    al,0xd
  418a61:	je     0x418a69
  418a63:	dec    al
  418a65:	je     0x418a83
  418a67:	jmp    0x418aa5
  418a69:	mov    eax,DWORD PTR [ebp-0x4]
  418a6c:	call   0x418e1c
  418a71:	xor    ecx,ecx
  418a73:	mov    edx,DWORD PTR [ebp-0xc]
  418a76:	mov    eax,DWORD PTR [ebp-0x8]
  418a79:	call   0x411d10
  418a7e:	jmp    0x418b48
  418a83:	mov    eax,DWORD PTR [ebp-0x4]
  418a86:	call   0x418e1c
  418a8b:	mov    edx,DWORD PTR [ebp-0xc]
  418a8e:	mov    eax,DWORD PTR [ebp-0x8]
  418a91:	call   0x411c9c
  418a96:	mov    edx,eax
  418a98:	mov    eax,DWORD PTR [ebp-0x4]
  418a9b:	call   0x4177c4
  418aa0:	jmp    0x418b48
  418aa5:	push   ebp
  418aa6:	lea    edx,[ebp-0x28]
  418aa9:	mov    eax,DWORD PTR [ebp-0x4]
  418aac:	call   0x418158
  418ab1:	mov    ecx,DWORD PTR [ebp-0x28]
  418ab4:	mov    edx,DWORD PTR [ebp-0xc]
  418ab7:	mov    eax,DWORD PTR [ebp-0x8]
  418aba:	call   0x418710
  418abf:	pop    ecx
  418ac0:	jmp    0x418b48
  418ac5:	mov    eax,DWORD PTR [ebp-0x4]
  418ac8:	call   0x41765c
  418acd:	cmp    al,0xd
  418acf:	jne    0x418aeb
  418ad1:	mov    eax,DWORD PTR [ebp-0x4]
  418ad4:	call   0x418e1c
  418ad9:	mov    ecx,0x461ab0
  418ade:	mov    edx,DWORD PTR [ebp-0xc]
  418ae1:	mov    eax,DWORD PTR [ebp-0x8]
  418ae4:	call   0x412294
  418ae9:	jmp    0x418b48
  418aeb:	lea    eax,[ebp-0x14]
  418aee:	push   eax
  418aef:	lea    edx,[ebp-0x2c]
  418af2:	mov    eax,DWORD PTR [ebp-0x4]
  418af5:	call   0x418158
  418afa:	mov    ecx,DWORD PTR [ebp-0x2c]
  418afd:	mov    eax,DWORD PTR [ebp-0x4]
  418b00:	mov    edx,DWORD PTR [eax+0x18]
  418b03:	mov    eax,DWORD PTR [ebp-0x4]
  418b06:	mov    ebx,DWORD PTR [eax]
  418b08:	call   DWORD PTR [ebx+0x18]
  418b0b:	cmp    DWORD PTR [ebp-0x14],0x0
  418b0f:	je     0x418b48
  418b11:	lea    ecx,[ebp-0x14]
  418b14:	mov    edx,DWORD PTR [ebp-0xc]
  418b17:	mov    eax,DWORD PTR [ebp-0x8]
  418b1a:	call   0x412294
  418b1f:	jmp    0x418b48
  418b21:	push   ebp
  418b22:	call   0x418750
  418b27:	pop    ecx
  418b28:	jmp    0x418b48
  418b2a:	mov    eax,DWORD PTR [ebp-0x4]
  418b2d:	call   0x4182c0
  418b32:	push   edx
  418b33:	push   eax
  418b34:	mov    edx,DWORD PTR [ebp-0xc]
  418b37:	mov    eax,DWORD PTR [ebp-0x8]
  418b3a:	call   0x4122cc
  418b3f:	jmp    0x418b48
  418b41:	push   ebp
  418b42:	call   0x4187ac
  418b47:	pop    ecx
  418b48:	xor    eax,eax
  418b4a:	pop    edx
  418b4b:	pop    ecx
  418b4c:	pop    ecx
  418b4d:	mov    DWORD PTR fs:[eax],edx
  418b50:	push   0x418b7f
  418b55:	lea    eax,[ebp-0x2c]
  418b58:	mov    edx,0x2
  418b5d:	call   0x404fac
  418b62:	lea    eax,[ebp-0x24]
  418b65:	call   0x405790
  418b6a:	lea    eax,[ebp-0x20]
  418b6d:	mov    edx,0x3
  418b72:	call   0x404fac
  418b77:	ret    
  418b78:	jmp    0x40481c
  418b7d:	jmp    0x418b55
  418b7f:	pop    ebx
  418b80:	mov    esp,ebp
  418b82:	pop    ebp
  418b83:	ret    
  418b84:	push   ebp
  418b85:	mov    ebp,esp
  418b87:	add    esp,0xfffffff8
  418b8a:	push   ebx
  418b8b:	push   esi
  418b8c:	push   edi
  418b8d:	xor    ecx,ecx
  418b8f:	mov    DWORD PTR [ebp-0x4],ecx
  418b92:	mov    ebx,edx
  418b94:	mov    DWORD PTR [ebp-0x8],eax
  418b97:	xor    eax,eax
  418b99:	push   ebp
  418b9a:	push   0x418c2e
  418b9f:	push   DWORD PTR fs:[eax]
  418ba2:	mov    DWORD PTR fs:[eax],esp
  418ba5:	xor    eax,eax
  418ba7:	push   ebp
  418ba8:	push   0x418c01
  418bad:	push   DWORD PTR fs:[eax]
  418bb0:	mov    DWORD PTR fs:[eax],esp
  418bb3:	mov    eax,DWORD PTR [ebp-0x8]
  418bb6:	call   0x418e1c
  418bbb:	cmp    al,0xb
  418bbd:	je     0x418bc4
  418bbf:	call   0x417090
  418bc4:	mov    eax,ebx
  418bc6:	call   0x411b1c
  418bcb:	mov    eax,DWORD PTR [eax+0x1]
  418bce:	mov    esi,DWORD PTR [eax]
  418bd0:	xor    ebx,ebx
  418bd2:	lea    edx,[ebp-0x4]
  418bd5:	mov    eax,DWORD PTR [ebp-0x8]
  418bd8:	call   0x418c40
  418bdd:	cmp    DWORD PTR [ebp-0x4],0x0
  418be1:	je     0x418bf7
  418be3:	mov    edx,DWORD PTR [ebp-0x4]
  418be6:	mov    eax,esi
  418be8:	call   0x4170c8
  418bed:	cmp    eax,0x1f
  418bf0:	ja     0x418bd2
  418bf2:	bts    ebx,eax
  418bf5:	jmp    0x418bd2
  418bf7:	xor    eax,eax
  418bf9:	pop    edx
  418bfa:	pop    ecx
  418bfb:	pop    ecx
  418bfc:	mov    DWORD PTR fs:[eax],edx
  418bff:	jmp    0x418c18
  418c01:	jmp    0x404568
  418c06:	mov    eax,DWORD PTR [ebp-0x8]
  418c09:	call   0x418e30
  418c0e:	call   0x404924
  418c13:	call   0x404978
  418c18:	xor    eax,eax
  418c1a:	pop    edx
  418c1b:	pop    ecx
  418c1c:	pop    ecx
  418c1d:	mov    DWORD PTR fs:[eax],edx
  418c20:	push   0x418c35
  418c25:	lea    eax,[ebp-0x4]
  418c28:	call   0x404f88
  418c2d:	ret    
  418c2e:	jmp    0x40481c
  418c33:	jmp    0x418c25
  418c35:	mov    eax,ebx
  418c37:	pop    edi
  418c38:	pop    esi
  418c39:	pop    ebx
  418c3a:	pop    ecx
  418c3b:	pop    ecx
  418c3c:	pop    ebp
  418c3d:	ret    
  418c3e:	mov    eax,eax
  418c40:	push   ebx
  418c41:	push   esi
  418c42:	push   ecx
  418c43:	mov    esi,edx
  418c45:	mov    ebx,eax
  418c47:	mov    edx,esp
  418c49:	mov    ecx,0x1
  418c4e:	mov    eax,ebx
  418c50:	call   0x417680
  418c55:	movzx  ecx,BYTE PTR [esp]
  418c59:	mov    eax,esi
  418c5b:	xor    edx,edx
  418c5d:	call   0x405078
  418c62:	mov    eax,esi
  418c64:	call   0x405478
  418c69:	mov    edx,eax
  418c6b:	movzx  ecx,BYTE PTR [esp]
  418c6f:	mov    eax,ebx
  418c71:	call   0x417680
  418c76:	pop    edx
  418c77:	pop    esi
  418c78:	pop    ebx
  418c79:	ret    
  418c7a:	mov    eax,eax
  418c7c:	push   ebp
  418c7d:	mov    ebp,esp
  418c7f:	add    esp,0xfffffff8
  418c82:	push   ebx
  418c83:	push   esi
  418c84:	xor    ecx,ecx
  418c86:	mov    DWORD PTR [ebp-0x8],ecx
  418c89:	mov    esi,edx
  418c8b:	mov    ebx,eax
  418c8d:	xor    eax,eax
  418c8f:	push   ebp
  418c90:	push   0x418d29
  418c95:	push   DWORD PTR fs:[eax]
  418c98:	mov    DWORD PTR fs:[eax],esp
  418c9b:	mov    eax,ebx
  418c9d:	call   0x41765c
  418ca2:	sub    al,0x12
  418ca4:	je     0x418caa
  418ca6:	sub    al,0x2
  418ca8:	jne    0x418cc0
  418caa:	lea    edx,[ebp-0x8]
  418cad:	mov    eax,ebx
  418caf:	call   0x418d38
  418cb4:	mov    edx,DWORD PTR [ebp-0x8]
  418cb7:	mov    eax,esi
  418cb9:	call   0x405210
  418cbe:	jmp    0x418d13
  418cc0:	xor    eax,eax
  418cc2:	mov    DWORD PTR [ebp-0x4],eax
  418cc5:	mov    eax,ebx
  418cc7:	call   0x418e1c
  418ccc:	sub    al,0x6
  418cce:	je     0x418cd6
  418cd0:	sub    al,0x6
  418cd2:	je     0x418ce7
  418cd4:	jmp    0x418cf8
  418cd6:	lea    edx,[ebp-0x4]
  418cd9:	mov    ecx,0x1
  418cde:	mov    eax,ebx
  418ce0:	call   0x417680
  418ce5:	jmp    0x418cfd
  418ce7:	lea    edx,[ebp-0x4]
  418cea:	mov    ecx,0x4
  418cef:	mov    eax,ebx
  418cf1:	call   0x417680
  418cf6:	jmp    0x418cfd
  418cf8:	call   0x417090
  418cfd:	mov    eax,esi
  418cff:	mov    edx,DWORD PTR [ebp-0x4]
  418d02:	call   0x4056a8
  418d07:	mov    edx,DWORD PTR [esi]
  418d09:	mov    ecx,DWORD PTR [ebp-0x4]
  418d0c:	mov    eax,ebx
  418d0e:	call   0x417680
  418d13:	xor    eax,eax
  418d15:	pop    edx
  418d16:	pop    ecx
  418d17:	pop    ecx
  418d18:	mov    DWORD PTR fs:[eax],edx
  418d1b:	push   0x418d30
  418d20:	lea    eax,[ebp-0x8]
  418d23:	call   0x405790
  418d28:	ret    
  418d29:	jmp    0x40481c
  418d2e:	jmp    0x418d20
  418d30:	pop    esi
  418d31:	pop    ebx
  418d32:	pop    ecx
  418d33:	pop    ecx
  418d34:	pop    ebp
  418d35:	ret    
  418d36:	mov    eax,eax
  418d38:	push   ebp
  418d39:	mov    ebp,esp
  418d3b:	push   0x0
  418d3d:	push   0x0
  418d3f:	push   0x0
  418d41:	push   ebx
  418d42:	push   esi
  418d43:	mov    esi,edx
  418d45:	mov    ebx,eax
  418d47:	xor    eax,eax
  418d49:	push   ebp
  418d4a:	push   0x418e0f
  418d4f:	push   DWORD PTR fs:[eax]
  418d52:	mov    DWORD PTR fs:[eax],esp
  418d55:	mov    eax,ebx
  418d57:	call   0x41765c
  418d5c:	sub    al,0x6
  418d5e:	je     0x418d64
  418d60:	sub    al,0x6
  418d62:	jne    0x418d7a
  418d64:	lea    edx,[ebp-0xc]
  418d67:	mov    eax,ebx
  418d69:	call   0x418c7c
  418d6e:	mov    edx,DWORD PTR [ebp-0xc]
  418d71:	mov    eax,esi
  418d73:	call   0x4058e0
  418d78:	jmp    0x418df1
  418d7a:	xor    eax,eax
  418d7c:	mov    DWORD PTR [ebp-0x8],eax
  418d7f:	mov    eax,ebx
  418d81:	call   0x418e1c
  418d86:	sub    al,0x12
  418d88:	je     0x418d90
  418d8a:	sub    al,0x2
  418d8c:	je     0x418db9
  418d8e:	jmp    0x418dec
  418d90:	lea    edx,[ebp-0x8]
  418d93:	mov    ecx,0x4
  418d98:	mov    eax,ebx
  418d9a:	call   0x417680
  418d9f:	mov    eax,esi
  418da1:	mov    edx,DWORD PTR [ebp-0x8]
  418da4:	call   0x4059dc
  418da9:	mov    ecx,DWORD PTR [ebp-0x8]
  418dac:	add    ecx,ecx
  418dae:	mov    edx,DWORD PTR [esi]
  418db0:	mov    eax,ebx
  418db2:	call   0x417680
  418db7:	jmp    0x418df1
  418db9:	lea    edx,[ebp-0x8]
  418dbc:	mov    ecx,0x4
  418dc1:	mov    eax,ebx
  418dc3:	call   0x417680
  418dc8:	lea    eax,[ebp-0x4]
  418dcb:	mov    edx,DWORD PTR [ebp-0x8]
  418dce:	call   0x4056a8
  418dd3:	mov    edx,DWORD PTR [ebp-0x4]
  418dd6:	mov    ecx,DWORD PTR [ebp-0x8]
  418dd9:	mov    eax,ebx
  418ddb:	call   0x417680
  418de0:	mov    edx,esi
  418de2:	mov    eax,DWORD PTR [ebp-0x4]
  418de5:	call   0x406e40
  418dea:	jmp    0x418df1
  418dec:	call   0x417090
  418df1:	xor    eax,eax
  418df3:	pop    edx
  418df4:	pop    ecx
  418df5:	pop    ecx
  418df6:	mov    DWORD PTR fs:[eax],edx
  418df9:	push   0x418e16
  418dfe:	lea    eax,[ebp-0xc]
  418e01:	call   0x404f88
  418e06:	lea    eax,[ebp-0x4]
  418e09:	call   0x404f88
  418e0e:	ret    
  418e0f:	jmp    0x40481c
  418e14:	jmp    0x418dfe
  418e16:	pop    esi
  418e17:	pop    ebx
  418e18:	mov    esp,ebp
  418e1a:	pop    ebp
  418e1b:	ret    
  418e1c:	push   ecx
  418e1d:	mov    edx,esp
  418e1f:	mov    ecx,0x1
  418e24:	call   0x417680
  418e29:	movzx  eax,BYTE PTR [esp]
  418e2d:	pop    edx
  418e2e:	ret    
  418e2f:	nop
  418e30:	push   ebp
  418e31:	mov    ebp,esp
  418e33:	push   0x0
  418e35:	push   ebx
  418e36:	mov    ebx,eax
  418e38:	xor    eax,eax
  418e3a:	push   ebp
  418e3b:	push   0x418e6c
  418e40:	push   DWORD PTR fs:[eax]
  418e43:	mov    DWORD PTR fs:[eax],esp
  418e46:	lea    edx,[ebp-0x4]
  418e49:	mov    eax,ebx
  418e4b:	call   0x418c40
  418e50:	cmp    DWORD PTR [ebp-0x4],0x0
  418e54:	jne    0x418e46
  418e56:	xor    eax,eax
  418e58:	pop    edx
  418e59:	pop    ecx
  418e5a:	pop    ecx
  418e5b:	mov    DWORD PTR fs:[eax],edx
  418e5e:	push   0x418e73
  418e63:	lea    eax,[ebp-0x4]
  418e66:	call   0x404f88
  418e6b:	ret    
  418e6c:	jmp    0x40481c
  418e71:	jmp    0x418e63
  418e73:	pop    ebx
  418e74:	pop    ecx
  418e75:	pop    ebp
  418e76:	ret    
  418e77:	nop
  418e78:	push   ebp
  418e79:	mov    ebp,esp
  418e7b:	push   ebx
  418e7c:	mov    ebx,DWORD PTR [ebp+0x8]
  418e7f:	add    ebx,0xfffffffc
  418e82:	jmp    0x418e8b
  418e84:	mov    eax,DWORD PTR [ebx]
  418e86:	call   0x418f2c
  418e8b:	mov    eax,DWORD PTR [ebx]
  418e8d:	call   0x417264
  418e92:	test   al,al
  418e94:	je     0x418e84
  418e96:	mov    eax,DWORD PTR [ebx]
  418e98:	call   0x41830c
  418e9d:	pop    ebx
  418e9e:	pop    ebp
  418e9f:	ret    
  418ea0:	push   ebp
  418ea1:	mov    ebp,esp
  418ea3:	push   ecx
  418ea4:	push   ebx
  418ea5:	mov    ebx,eax
  418ea7:	lea    edx,[ebp-0x4]
  418eaa:	mov    eax,DWORD PTR [ebp+0x8]
  418ead:	mov    eax,DWORD PTR [eax-0x4]
  418eb0:	mov    ecx,0x4
  418eb5:	call   0x417680
  418eba:	mov    edx,DWORD PTR [ebp-0x4]
  418ebd:	imul   edx,ebx
  418ec0:	mov    eax,DWORD PTR [ebp+0x8]
  418ec3:	mov    eax,DWORD PTR [eax-0x4]
  418ec6:	call   0x419338
  418ecb:	pop    ebx
  418ecc:	pop    ecx
  418ecd:	pop    ebp
  418ece:	ret    
  418ecf:	nop
  418ed0:	push   ebp
  418ed1:	mov    ebp,esp
  418ed3:	push   ebx
  418ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  418ed7:	add    ebx,0xfffffffc
  418eda:	jmp    0x418f17
  418edc:	mov    eax,DWORD PTR [ebx]
  418ede:	call   0x41765c
  418ee3:	add    al,0xfe
  418ee5:	sub    al,0x3
  418ee7:	jae    0x418ef0
  418ee9:	mov    eax,DWORD PTR [ebx]
  418eeb:	call   0x418f2c
  418ef0:	mov    eax,DWORD PTR [ebx]
  418ef2:	mov    edx,0x1
  418ef7:	call   0x419338
  418efc:	jmp    0x418f05
  418efe:	mov    eax,DWORD PTR [ebx]
  418f00:	call   0x4190dc
  418f05:	mov    eax,DWORD PTR [ebx]
  418f07:	call   0x417264
  418f0c:	test   al,al
  418f0e:	je     0x418efe
  418f10:	mov    eax,DWORD PTR [ebx]
  418f12:	call   0x41830c
  418f17:	mov    eax,DWORD PTR [ebx]
  418f19:	call   0x417264
  418f1e:	test   al,al
  418f20:	je     0x418edc
  418f22:	mov    eax,DWORD PTR [ebx]
  418f24:	call   0x41830c
  418f29:	pop    ebx
  418f2a:	pop    ebp
  418f2b:	ret    
  418f2c:	push   ebp
  418f2d:	mov    ebp,esp
  418f2f:	add    esp,0xfffffff8
  418f32:	xor    edx,edx
  418f34:	mov    DWORD PTR [ebp-0x8],edx
  418f37:	mov    DWORD PTR [ebp-0x4],eax
  418f3a:	xor    eax,eax
  418f3c:	push   ebp
  418f3d:	push   0x4190d1
  418f42:	push   DWORD PTR fs:[eax]
  418f45:	mov    DWORD PTR fs:[eax],esp
  418f48:	mov    eax,DWORD PTR [ebp-0x4]
  418f4b:	call   0x418e1c
  418f50:	and    eax,0x7f
  418f53:	cmp    eax,0x15
  418f56:	ja     0x4190bb
  418f5c:	jmp    DWORD PTR [eax*4+0x418f63]
  418f63:	mov    ebx,0xc0004190
  418f68:	pop    DWORD PTR [ecx+0x0]
  418f6b:	int3   
  418f6c:	pop    DWORD PTR [ecx+0x0]
  418f6f:	fimul  WORD PTR [edi-0x700fffbf]
  418f75:	inc    ecx
  418f76:	add    BYTE PTR [edx],al
  418f78:	nop
  418f79:	inc    ecx
  418f7a:	add    BYTE PTR [eax+edx*4],dl
  418f7d:	inc    ecx
  418f7e:	add    BYTE PTR [eax+edx*4],dl
  418f81:	inc    ecx
  418f82:	add    BYTE PTR [ebx-0x44ffbe70],bh
  418f88:	nop
  418f89:	inc    ecx
  418f8a:	add    BYTE PTR [eax+edx*4],ah
  418f8d:	inc    ecx
  418f8e:	add    BYTE PTR ds:0x3f004190,dh
  418f94:	nop
  418f95:	inc    ecx
  418f96:	add    BYTE PTR [ebx+0x4d004190],bh
  418f9c:	nop
  418f9d:	inc    ecx
  418f9e:	add    BYTE PTR [esi-0x70],dl
  418fa1:	inc    ecx
  418fa2:	add    BYTE PTR [ebp-0x70],ah
  418fa5:	inc    ecx
  418fa6:	add    BYTE PTR [eax+edx*4+0x41],dh
  418faa:	add    BYTE PTR [ebx-0x6effbe70],al
  418fb0:	nop
  418fb1:	inc    ecx
  418fb2:	add    BYTE PTR [eax-0x51ffbe70],ah
  418fb8:	nop
  418fb9:	inc    ecx
  418fba:	add    cl,ch
  418fbc:	sti    
  418fbd:	add    BYTE PTR [eax],al
  418fbf:	add    BYTE PTR [ebp-0x18],dl
  418fc2:	mov    dl,0xfe
  418fc4:	(bad)  
  418fc5:	call   FWORD PTR [ecx-0x17]
  418fc8:	out    dx,eax
  418fc9:	add    BYTE PTR [eax],al
  418fcb:	add    BYTE PTR [edx+0x1],bh
  418fd1:	mov    eax,DWORD PTR [ebp-0x4]
  418fd4:	call   0x419338
  418fd9:	jmp    0x4190bb
  418fde:	mov    edx,0x2
  418fe3:	mov    eax,DWORD PTR [ebp-0x4]
  418fe6:	call   0x419338
  418feb:	jmp    0x4190bb
  418ff0:	mov    edx,0x4
  418ff5:	mov    eax,DWORD PTR [ebp-0x4]
  418ff8:	call   0x419338
  418ffd:	jmp    0x4190bb
  419002:	mov    edx,0xa
  419007:	mov    eax,DWORD PTR [ebp-0x4]
  41900a:	call   0x419338
  41900f:	jmp    0x4190bb
  419014:	lea    edx,[ebp-0x8]
  419017:	mov    eax,DWORD PTR [ebp-0x4]
  41901a:	call   0x418c40
  41901f:	jmp    0x4190bb
  419024:	push   ebp
  419025:	mov    eax,0x1
  41902a:	call   0x418ea0
  41902f:	pop    ecx
  419030:	jmp    0x4190bb
  419035:	mov    eax,DWORD PTR [ebp-0x4]
  419038:	call   0x418e30
  41903d:	jmp    0x4190bb
  41903f:	push   ebp
  419040:	mov    eax,0x1
  419045:	call   0x418ea0
  41904a:	pop    ecx
  41904b:	jmp    0x4190bb
  41904d:	push   ebp
  41904e:	call   0x418ed0
  419053:	pop    ecx
  419054:	jmp    0x4190bb
  419056:	mov    edx,0x4
  41905b:	mov    eax,DWORD PTR [ebp-0x4]
  41905e:	call   0x419338
  419063:	jmp    0x4190bb
  419065:	mov    edx,0x8
  41906a:	mov    eax,DWORD PTR [ebp-0x4]
  41906d:	call   0x419338
  419072:	jmp    0x4190bb
  419074:	mov    edx,0x8
  419079:	mov    eax,DWORD PTR [ebp-0x4]
  41907c:	call   0x419338
  419081:	jmp    0x4190bb
  419083:	push   ebp
  419084:	mov    eax,0x2
  419089:	call   0x418ea0
  41908e:	pop    ecx
  41908f:	jmp    0x4190bb
  419091:	mov    edx,0x8
  419096:	mov    eax,DWORD PTR [ebp-0x4]
  419099:	call   0x419338
  41909e:	jmp    0x4190bb
  4190a0:	push   ebp
  4190a1:	mov    eax,0x1
  4190a6:	call   0x418ea0
  4190ab:	pop    ecx
  4190ac:	jmp    0x4190bb
  4190ae:	mov    edx,0x8
  4190b3:	mov    eax,DWORD PTR [ebp-0x4]
  4190b6:	call   0x419338
  4190bb:	xor    eax,eax
  4190bd:	pop    edx
  4190be:	pop    ecx
  4190bf:	pop    ecx
  4190c0:	mov    DWORD PTR fs:[eax],edx
  4190c3:	push   0x4190d8
  4190c8:	lea    eax,[ebp-0x8]
  4190cb:	call   0x404f88
  4190d0:	ret    
  4190d1:	jmp    0x40481c
  4190d6:	jmp    0x4190c8
  4190d8:	pop    ecx
  4190d9:	pop    ecx
  4190da:	pop    ebp
  4190db:	ret    
  4190dc:	push   ebp
  4190dd:	mov    ebp,esp
  4190df:	push   0x0
  4190e1:	push   ebx
  4190e2:	mov    ebx,eax
  4190e4:	xor    eax,eax
  4190e6:	push   ebp
  4190e7:	push   0x419119
  4190ec:	push   DWORD PTR fs:[eax]
  4190ef:	mov    DWORD PTR fs:[eax],esp
  4190f2:	lea    edx,[ebp-0x4]
  4190f5:	mov    eax,ebx
  4190f7:	call   0x418c40
  4190fc:	mov    eax,ebx
  4190fe:	call   0x418f2c
  419103:	xor    eax,eax
  419105:	pop    edx
  419106:	pop    ecx
  419107:	pop    ecx
  419108:	mov    DWORD PTR fs:[eax],edx
  41910b:	push   0x419120
  419110:	lea    eax,[ebp-0x4]
  419113:	call   0x404f88
  419118:	ret    
  419119:	jmp    0x40481c
  41911e:	jmp    0x419110
  419120:	pop    ebx
  419121:	pop    ecx
  419122:	pop    ebp
  419123:	ret    
  419124:	push   ebp
  419125:	mov    ebp,esp
  419127:	add    esp,0xfffffff0
  41912a:	push   ebx
  41912b:	push   esi
  41912c:	xor    ecx,ecx
  41912e:	mov    DWORD PTR [ebp-0x10],ecx
  419131:	mov    DWORD PTR [ebp-0xc],ecx
  419134:	mov    ebx,eax
  419136:	xor    eax,eax
  419138:	push   ebp
  419139:	push   0x4191bc
  41913e:	push   DWORD PTR fs:[eax]
  419141:	mov    DWORD PTR fs:[eax],esp
  419144:	test   dl,dl
  419146:	je     0x419172
  419148:	lea    ecx,[ebp-0x8]
  41914b:	lea    edx,[ebp-0x1]
  41914e:	mov    eax,ebx
  419150:	mov    esi,DWORD PTR [eax]
  419152:	call   DWORD PTR [esi+0x28]
  419155:	lea    edx,[ebp-0xc]
  419158:	mov    eax,ebx
  41915a:	call   0x418c40
  41915f:	lea    edx,[ebp-0x10]
  419162:	mov    eax,ebx
  419164:	call   0x418c40
  419169:	jmp    0x419172
  41916b:	mov    eax,ebx
  41916d:	call   0x4190dc
  419172:	mov    eax,ebx
  419174:	call   0x417264
  419179:	test   al,al
  41917b:	je     0x41916b
  41917d:	mov    eax,ebx
  41917f:	call   0x41830c
  419184:	jmp    0x41918f
  419186:	mov    dl,0x1
  419188:	mov    eax,ebx
  41918a:	call   0x419124
  41918f:	mov    eax,ebx
  419191:	call   0x417264
  419196:	test   al,al
  419198:	je     0x419186
  41919a:	mov    eax,ebx
  41919c:	call   0x41830c
  4191a1:	xor    eax,eax
  4191a3:	pop    edx
  4191a4:	pop    ecx
  4191a5:	pop    ecx
  4191a6:	mov    DWORD PTR fs:[eax],edx
  4191a9:	push   0x4191c3
  4191ae:	lea    eax,[ebp-0x10]
  4191b1:	mov    edx,0x2
  4191b6:	call   0x404fac
  4191bb:	ret    
  4191bc:	jmp    0x40481c
  4191c1:	jmp    0x4191ae
  4191c3:	pop    esi
  4191c4:	pop    ebx
  4191c5:	mov    esp,ebp
  4191c7:	pop    ebp
  4191c8:	ret    
  4191c9:	lea    eax,[eax+0x0]
  4191cc:	push   ebp
  4191cd:	mov    ebp,esp
  4191cf:	add    esp,0xfffffff0
  4191d2:	push   ebx
  4191d3:	push   esi
  4191d4:	push   edi
  4191d5:	xor    ebx,ebx
  4191d7:	mov    DWORD PTR [ebp-0x4],ebx
  4191da:	mov    edi,ecx
  4191dc:	mov    esi,edx
  4191de:	mov    ebx,eax
  4191e0:	xor    eax,eax
  4191e2:	push   ebp
  4191e3:	push   0x419271
  4191e8:	push   DWORD PTR fs:[eax]
  4191eb:	mov    DWORD PTR fs:[eax],esp
  4191ee:	lea    eax,[ebp-0x4]
  4191f1:	mov    edx,esi
  4191f3:	call   0x405020
  4191f8:	xor    eax,eax
  4191fa:	mov    DWORD PTR [ebp-0x8],eax
  4191fd:	mov    esi,DWORD PTR [ebx+0x1c]
  419200:	test   esi,esi
  419202:	je     0x419211
  419204:	mov    edx,DWORD PTR [ebp-0x4]
  419207:	mov    eax,esi
  419209:	call   0x41a700
  41920e:	mov    DWORD PTR [ebp-0x8],eax
  419211:	cmp    DWORD PTR [ebp-0x8],0x0
  419215:	jne    0x41925b
  419217:	cmp    WORD PTR [ebx+0x5a],0x0
  41921c:	je     0x41922e
  41921e:	push   edi
  41921f:	lea    eax,[ebp-0x8]
  419222:	push   eax
  419223:	mov    ecx,DWORD PTR [ebp-0x4]
  419226:	mov    edx,ebx
  419228:	mov    eax,DWORD PTR [ebx+0x5c]
  41922b:	call   DWORD PTR [ebx+0x58]
  41922e:	cmp    DWORD PTR [ebp-0x8],0x0
  419232:	jne    0x41925b
  419234:	mov    eax,DWORD PTR [ebp-0x4]
  419237:	mov    DWORD PTR [ebp-0x10],eax
  41923a:	mov    BYTE PTR [ebp-0xc],0xb
  41923e:	lea    eax,[ebp-0x10]
  419241:	push   eax
  419242:	push   0x0
  419244:	mov    ecx,DWORD PTR ds:0x46db8c
  41924a:	mov    dl,0x1
  41924c:	mov    eax,ds:0x4125c0
  419251:	call   0x40c9ac
  419256:	call   0x4048fc
  41925b:	xor    eax,eax
  41925d:	pop    edx
  41925e:	pop    ecx
  41925f:	pop    ecx
  419260:	mov    DWORD PTR fs:[eax],edx
  419263:	push   0x419278
  419268:	lea    eax,[ebp-0x4]
  41926b:	call   0x404f88
  419270:	ret    
  419271:	jmp    0x40481c
  419276:	jmp    0x419268
  419278:	mov    eax,DWORD PTR [ebp-0x8]
  41927b:	pop    edi
  41927c:	pop    esi
  41927d:	pop    ebx
  41927e:	mov    esp,ebp
  419280:	pop    ebp
  419281:	ret    
  419282:	mov    eax,eax
  419284:	push   ebx
  419285:	cmp    WORD PTR [eax+0x52],0x0
  41928a:	je     0x419298
  41928c:	mov    ecx,edx
  41928e:	mov    ebx,eax
  419290:	mov    edx,eax
  419292:	mov    eax,DWORD PTR [ebx+0x54]
  419295:	call   DWORD PTR [ebx+0x50]
  419298:	pop    ebx
  419299:	ret    
  41929a:	mov    eax,eax
  41929c:	push   ebx
  41929d:	push   esi
  41929e:	push   edi
  41929f:	mov    esi,ecx
  4192a1:	mov    ebx,edx
  4192a3:	cmp    WORD PTR [eax+0x4a],0x0
  4192a8:	je     0x4192b7
  4192aa:	push   esi
  4192ab:	mov    edi,eax
  4192ad:	mov    ecx,ebx
  4192af:	mov    edx,eax
  4192b1:	mov    eax,DWORD PTR [edi+0x4c]
  4192b4:	call   DWORD PTR [edi+0x48]
  4192b7:	mov    edx,DWORD PTR [esi]
  4192b9:	mov    eax,ebx
  4192bb:	mov    ecx,DWORD PTR [eax]
  4192bd:	call   DWORD PTR [ecx+0x18]
  4192c0:	pop    edi
  4192c1:	pop    esi
  4192c2:	pop    ebx
  4192c3:	ret    
  4192c4:	push   ebx
  4192c5:	push   esi
  4192c6:	push   ecx
  4192c7:	mov    esi,edx
  4192c9:	mov    ebx,eax
  4192cb:	mov    ecx,esi
  4192cd:	mov    edx,DWORD PTR [ebx+0x18]
  4192d0:	mov    eax,ebx
  4192d2:	call   0x4175ac
  4192d7:	mov    DWORD PTR [esp],eax
  4192da:	cmp    DWORD PTR [esp],0x0
  4192de:	jne    0x4192fd
  4192e0:	cmp    DWORD PTR [ebx+0x1c],0x0
  4192e4:	je     0x4192fd
  4192e6:	mov    eax,DWORD PTR [ebx+0x1c]
  4192e9:	cmp    eax,DWORD PTR [ebx+0x18]
  4192ec:	je     0x4192fd
  4192ee:	mov    ecx,esi
  4192f0:	mov    edx,DWORD PTR [ebx+0x1c]
  4192f3:	mov    eax,ebx
  4192f5:	call   0x4175ac
  4192fa:	mov    DWORD PTR [esp],eax
  4192fd:	cmp    WORD PTR [ebx+0x6a],0x0
  419302:	je     0x41930f
  419304:	push   esp
  419305:	mov    ecx,esi
  419307:	mov    edx,ebx
  419309:	mov    eax,DWORD PTR [ebx+0x6c]
  41930c:	call   DWORD PTR [ebx+0x68]
  41930f:	cmp    DWORD PTR [esp],0x0
  419313:	je     0x419327
  419315:	mov    edx,DWORD PTR ds:0x41335c
  41931b:	mov    eax,DWORD PTR [esp]
  41931e:	call   0x4042b4
  419323:	test   al,al
  419325:	jne    0x41932e
  419327:	mov    eax,esi
  419329:	call   0x413950
  41932e:	mov    eax,DWORD PTR [esp]
  419331:	pop    edx
  419332:	pop    esi
  419333:	pop    ebx
  419334:	ret    
  419335:	lea    eax,[eax+0x0]
  419338:	push   ebx
  419339:	push   esi
  41933a:	add    esp,0xffffff00
  419340:	mov    ebx,edx
  419342:	mov    esi,eax
  419344:	test   ebx,ebx
  419346:	jle    0x419377
  419348:	cmp    ebx,0x100
  41934e:	jle    0x419366
  419350:	mov    edx,esp
  419352:	mov    ecx,0x100
  419357:	mov    eax,esi
  419359:	call   0x417680
  41935e:	sub    ebx,0x100
  419364:	jmp    0x419373
  419366:	mov    edx,esp
  419368:	mov    ecx,ebx
  41936a:	mov    eax,esi
  41936c:	call   0x417680
  419371:	xor    ebx,ebx
  419373:	test   ebx,ebx
  419375:	jg     0x419348
  419377:	add    esp,0x100
  41937d:	pop    esi
  41937e:	pop    ebx
  41937f:	ret    
  419380:	push   ebp
  419381:	mov    ebp,esp
  419383:	add    esp,0xffffffe4
  419386:	push   ebx
  419387:	xor    edx,edx
  419389:	mov    DWORD PTR [ebp-0x4],edx
  41938c:	mov    DWORD PTR [ebp-0x8],edx
  41938f:	mov    ebx,eax
  419391:	xor    eax,eax
  419393:	push   ebp
  419394:	push   0x419529
  419399:	push   DWORD PTR fs:[eax]
  41939c:	mov    DWORD PTR fs:[eax],esp
  41939f:	mov    eax,DWORD PTR [ebp+0x8]
  4193a2:	mov    eax,DWORD PTR [eax-0x4]
  4193a5:	mov    dl,0xa
  4193a7:	call   0x41711c
  4193ac:	xor    eax,eax
  4193ae:	mov    DWORD PTR [ebp-0x10],eax
  4193b1:	mov    dl,0x1
  4193b3:	mov    eax,ds:0x412ff4
  4193b8:	call   0x404070
  4193bd:	mov    DWORD PTR [ebp-0xc],eax
  4193c0:	xor    eax,eax
  4193c2:	push   ebp
  4193c3:	push   0x419504
  4193c8:	push   DWORD PTR fs:[eax]
  4193cb:	mov    DWORD PTR fs:[eax],esp
  4193ce:	mov    dl,0x1
  4193d0:	mov    eax,ds:0x412ff4
  4193d5:	call   0x404070
  4193da:	mov    DWORD PTR [ebp-0x10],eax
  4193dd:	lea    edx,[ebp-0x18]
  4193e0:	mov    eax,DWORD PTR [ebp+0x8]
  4193e3:	mov    eax,DWORD PTR [eax-0x4]
  4193e6:	mov    ecx,0x4
  4193eb:	call   0x417680
  4193f0:	mov    eax,DWORD PTR [ebp-0x18]
  4193f3:	cdq    
  4193f4:	push   edx
  4193f5:	push   eax
  4193f6:	mov    eax,DWORD PTR [ebp-0xc]
  4193f9:	call   0x416468
  4193fe:	mov    eax,DWORD PTR [ebp-0xc]
  419401:	mov    edx,DWORD PTR [eax+0x4]
  419404:	mov    eax,DWORD PTR [ebp+0x8]
  419407:	mov    eax,DWORD PTR [eax-0x4]
  41940a:	mov    ecx,DWORD PTR [ebp-0x18]
  41940d:	call   0x417680
  419412:	push   0x400
  419417:	mov    ecx,DWORD PTR [ebp-0xc]
  41941a:	mov    dl,0x1
  41941c:	mov    eax,ds:0x41315c
  419421:	call   0x416bfc
  419426:	mov    DWORD PTR [ebp-0x14],eax
  419429:	xor    eax,eax
  41942b:	push   ebp
  41942c:	push   0x4194df
  419431:	push   DWORD PTR fs:[eax]
  419434:	mov    DWORD PTR fs:[eax],esp
  419437:	lea    edx,[ebp-0x4]
  41943a:	mov    eax,DWORD PTR [ebp-0x14]
  41943d:	call   0x418c7c
  419442:	lea    edx,[ebp-0x18]
  419445:	mov    ecx,0x4
  41944a:	mov    eax,DWORD PTR [ebp-0x14]
  41944d:	call   0x417680
  419452:	mov    eax,DWORD PTR [ebp-0x18]
  419455:	cdq    
  419456:	push   edx
  419457:	push   eax
  419458:	mov    eax,DWORD PTR [ebp-0x10]
  41945b:	call   0x416468
  419460:	mov    eax,DWORD PTR [ebp-0x10]
  419463:	mov    edx,DWORD PTR [eax+0x4]
  419466:	mov    ecx,DWORD PTR [ebp-0x18]
  419469:	mov    eax,DWORD PTR [ebp-0x14]
  41946c:	call   0x417680
  419471:	lea    edx,[ebp-0x1c]
  419474:	mov    eax,DWORD PTR [ebp-0x4]
  419477:	call   0x4118a0
  41947c:	test   al,al
  41947e:	je     0x41949b
  419480:	lea    eax,[ebp-0x8]
  419483:	call   0x406a98
  419488:	mov    ecx,eax
  41948a:	mov    edx,0x419538
  41948f:	mov    eax,DWORD PTR [ebp-0x1c]
  419492:	call   0x40e360
  419497:	test   al,al
  419499:	jne    0x4194b2
  41949b:	mov    ecx,DWORD PTR ds:0x46de08
  4194a1:	mov    dl,0x1
  4194a3:	mov    eax,ds:0x4125c0
  4194a8:	call   0x40c970
  4194ad:	call   0x4048fc
  4194b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4194b5:	movzx  eax,WORD PTR [eax+0x4]
  4194b9:	mov    WORD PTR [ebx],ax
  4194bc:	mov    edx,ebx
  4194be:	mov    ecx,DWORD PTR [ebp-0x10]
  4194c1:	mov    eax,DWORD PTR [ebp-0x8]
  4194c4:	mov    ebx,DWORD PTR [eax]
  4194c6:	call   DWORD PTR [ebx+0xc]
  4194c9:	xor    eax,eax
  4194cb:	pop    edx
  4194cc:	pop    ecx
  4194cd:	pop    ecx
  4194ce:	mov    DWORD PTR fs:[eax],edx
  4194d1:	push   0x4194e6
  4194d6:	mov    eax,DWORD PTR [ebp-0x14]
  4194d9:	call   0x4040a0
  4194de:	ret    
  4194df:	jmp    0x40481c
  4194e4:	jmp    0x4194d6
  4194e6:	xor    eax,eax
  4194e8:	pop    edx
  4194e9:	pop    ecx
  4194ea:	pop    ecx
  4194eb:	mov    DWORD PTR fs:[eax],edx
  4194ee:	push   0x41950b
  4194f3:	mov    eax,DWORD PTR [ebp-0x10]
  4194f6:	call   0x4040a0
  4194fb:	mov    eax,DWORD PTR [ebp-0xc]
  4194fe:	call   0x4040a0
  419503:	ret    
  419504:	jmp    0x40481c
  419509:	jmp    0x4194f3
  41950b:	xor    eax,eax
  41950d:	pop    edx
  41950e:	pop    ecx
  41950f:	pop    ecx
  419510:	mov    DWORD PTR fs:[eax],edx
  419513:	push   0x419530
  419518:	lea    eax,[ebp-0x8]
  41951b:	call   0x406a98
  419520:	lea    eax,[ebp-0x4]
  419523:	call   0x404f88
  419528:	ret    
  419529:	jmp    0x40481c
  41952e:	jmp    0x419518
  419530:	pop    ebx
  419531:	mov    esp,ebp
  419533:	pop    ebp
  419534:	ret    
  419535:	add    BYTE PTR [eax],al
  419537:	add    BYTE PTR [esi],ah
  419539:	mov    al,ds:0x5e42d60b
  41953e:	sub    cl,BYTE PTR [ebx+edi*4+0x1]
  419542:	aas    
  419543:	sbb    al,0x8f
  419545:	xor    BYTE PTR [edx-0x1374aa72],ah
  41954b:	xor    ecx,ecx
  41954d:	push   ecx
  41954e:	push   ecx
  41954f:	push   ecx
  419550:	push   ecx
  419551:	push   ecx
  419552:	push   ecx
  419553:	push   ecx
  419554:	push   ebx
  419555:	mov    ebx,edx
  419557:	mov    DWORD PTR [ebp-0x4],eax
  41955a:	xor    eax,eax
  41955c:	push   ebp
  41955d:	push   0x41975a
  419562:	push   DWORD PTR fs:[eax]
  419565:	mov    DWORD PTR fs:[eax],esp
  419568:	mov    eax,ebx
  41956a:	call   0x40fe04
  41956f:	mov    eax,DWORD PTR [ebp-0x4]
  419572:	call   0x41765c
  419577:	and    eax,0x7f
  41957a:	cmp    eax,0x15
  41957d:	ja     0x41971d
  419583:	jmp    DWORD PTR [eax*4+0x41958a]
  41958a:	loop   0x419521
  41958c:	inc    ecx
  41958d:	add    BYTE PTR ds:0xfe004197,bl
  419593:	xchg   ebp,eax
  419594:	inc    ecx
  419595:	add    BYTE PTR [ecx],bl
  419597:	xchg   esi,eax
  419598:	inc    ecx
  419599:	add    BYTE PTR [esi+edx*4],dh
  41959c:	inc    ecx
  41959d:	add    BYTE PTR [esi+edx*4+0x41],cl
  4195a1:	add    BYTE PTR [eax+0x1d004196],dh
  4195a7:	xchg   edi,eax
  4195a8:	inc    ecx
  4195a9:	add    dh,bl
  4195ab:	xchg   esi,eax
  4195ac:	inc    ecx
  4195ad:	add    dh,bl
  4195af:	xchg   esi,eax
  4195b0:	inc    ecx
  4195b1:	add    ah,dh
  4195b3:	xchg   esi,eax
  4195b4:	inc    ecx
  4195b5:	add    BYTE PTR ds:0xb0004197,bl
  4195bb:	xchg   esi,eax
  4195bc:	inc    ecx
  4195bd:	add    dl,ah
  4195bf:	xchg   ebp,eax
  4195c0:	inc    ecx
  4195c1:	add    BYTE PTR ds:0x60004197,bl
  4195c7:	xchg   esi,eax
  4195c8:	inc    ecx
  4195c9:	add    BYTE PTR [eax-0x63ffbe6a],cl
  4195cf:	xchg   esi,eax
  4195d0:	inc    ecx
  4195d1:	add    bh,al
  4195d3:	xchg   esi,eax
  4195d4:	inc    ecx
  4195d5:	add    BYTE PTR [edx],cl
  4195d7:	xchg   edi,eax
  4195d8:	inc    ecx
  4195d9:	add    bh,al
  4195db:	xchg   esi,eax
  4195dc:	inc    ecx
  4195dd:	add    BYTE PTR [esi+edx*4+0x41],dh
  4195e1:	add    BYTE PTR [ebx+0x32e8fc45],cl
  4195e7:	clc    
  4195e8:	(bad)  
  4195e9:	(bad)  
  4195ea:	cmp    al,0xd
  4195ec:	je     0x419734
  4195f2:	mov    eax,ebx
  4195f4:	call   0x411988
  4195f9:	jmp    0x419734
  4195fe:	mov    eax,DWORD PTR [ebp-0x4]
  419601:	call   0x418254
  419606:	mov    edx,eax
  419608:	movsx  edx,dl
  41960b:	mov    eax,ebx
  41960d:	mov    cl,0xff
  41960f:	call   0x4110d4
  419614:	jmp    0x419734
  419619:	mov    eax,DWORD PTR [ebp-0x4]
  41961c:	call   0x418254
  419621:	mov    edx,eax
  419623:	movsx  edx,dx
  419626:	mov    eax,ebx
  419628:	mov    cl,0xfe
  41962a:	call   0x4110d4
  41962f:	jmp    0x419734
  419634:	mov    eax,DWORD PTR [ebp-0x4]
  419637:	call   0x418254
  41963c:	mov    edx,eax
  41963e:	mov    eax,ebx
  419640:	mov    cl,0xfc
  419642:	call   0x4110d4
  419647:	jmp    0x419734
  41964c:	mov    eax,DWORD PTR [ebp-0x4]
  41964f:	call   0x418004
  419654:	mov    eax,ebx
  419656:	call   0x411164
  41965b:	jmp    0x419734
  419660:	mov    eax,DWORD PTR [ebp-0x4]
  419663:	call   0x418080
  419668:	mov    eax,ebx
  41966a:	call   0x411164
  41966f:	jmp    0x419734
  419674:	mov    eax,DWORD PTR [ebp-0x4]
  419677:	call   0x41803c
  41967c:	mov    eax,ebx
  41967e:	call   0x411164
  419683:	jmp    0x419734
  419688:	mov    eax,DWORD PTR [ebp-0x4]
  41968b:	call   0x4180c4
  419690:	mov    eax,ebx
  419692:	call   0x41118c
  419697:	jmp    0x419734
  41969c:	mov    eax,DWORD PTR [ebp-0x4]
  41969f:	call   0x418114
  4196a4:	mov    eax,ebx
  4196a6:	call   0x411178
  4196ab:	jmp    0x419734
  4196b0:	lea    edx,[ebp-0x8]
  4196b3:	mov    eax,DWORD PTR [ebp-0x4]
  4196b6:	call   0x418c7c
  4196bb:	mov    edx,DWORD PTR [ebp-0x8]
  4196be:	mov    eax,ebx
  4196c0:	call   0x4111a0
  4196c5:	jmp    0x419734
  4196c7:	lea    edx,[ebp-0xc]
  4196ca:	mov    eax,DWORD PTR [ebp-0x4]
  4196cd:	call   0x418d38
  4196d2:	mov    edx,DWORD PTR [ebp-0xc]
  4196d5:	mov    eax,ebx
  4196d7:	call   0x4111cc
  4196dc:	jmp    0x419734
  4196de:	mov    eax,DWORD PTR [ebp-0x4]
  4196e1:	call   0x418e1c
  4196e6:	cmp    al,0x9
  4196e8:	sete   dl
  4196eb:	mov    eax,ebx
  4196ed:	call   0x41113c
  4196f2:	jmp    0x419734
  4196f4:	push   ebp
  4196f5:	lea    eax,[ebp-0x1c]
  4196f8:	call   0x419380
  4196fd:	pop    ecx
  4196fe:	lea    edx,[ebp-0x1c]
  419701:	mov    eax,ebx
  419703:	call   0x41012c
  419708:	jmp    0x419734
  41970a:	mov    eax,DWORD PTR [ebp-0x4]
  41970d:	call   0x4182c0
  419712:	push   edx
  419713:	push   eax
  419714:	mov    eax,ebx
  419716:	call   0x411110
  41971b:	jmp    0x419734
  41971d:	mov    ecx,DWORD PTR ds:0x46de08
  419723:	mov    dl,0x1
  419725:	mov    eax,ds:0x4125c0
  41972a:	call   0x40c970
  41972f:	call   0x4048fc
  419734:	xor    eax,eax
  419736:	pop    edx
  419737:	pop    ecx
  419738:	pop    ecx
  419739:	mov    DWORD PTR fs:[eax],edx
  41973c:	push   0x419761
  419741:	lea    eax,[ebp-0x1c]
  419744:	call   0x40fe18
  419749:	lea    eax,[ebp-0xc]
  41974c:	call   0x405790
  419751:	lea    eax,[ebp-0x8]
  419754:	call   0x404f88
  419759:	ret    
  41975a:	jmp    0x40481c
  41975f:	jmp    0x419741
  419761:	pop    ebx
  419762:	mov    esp,ebp
  419764:	pop    ebp
  419765:	ret    
  419766:	mov    eax,eax
  419768:	push   esi
  419769:	push   edi
  41976a:	push   ebx
  41976b:	mov    esi,edx
  41976d:	mov    ebx,ecx
  41976f:	mov    edi,eax
  419771:	jmp    0x4197a9
  419773:	mov    ecx,DWORD PTR [edi+0xc]
  419776:	sub    ecx,DWORD PTR [edi+0x10]
  419779:	ja     0x419785
  41977b:	mov    eax,edi
  41977d:	call   0x4197b4
  419782:	mov    ecx,DWORD PTR [edi+0xc]
  419785:	cmp    ecx,ebx
  419787:	jb     0x41978b
  419789:	mov    ecx,ebx
  41978b:	sub    ebx,ecx
  41978d:	push   edi
  41978e:	mov    eax,DWORD PTR [edi+0x8]
  419791:	add    eax,DWORD PTR [edi+0x10]
  419794:	add    DWORD PTR [edi+0x10],ecx
  419797:	mov    edi,eax
  419799:	mov    edx,ecx
  41979b:	shr    ecx,0x2
  41979e:	cld    
  41979f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a1:	mov    ecx,edx
  4197a3:	and    ecx,0x3
  4197a6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a8:	pop    edi
  4197a9:	or     ebx,ebx
  4197ab:	jne    0x419773
  4197ad:	pop    ebx
  4197ae:	pop    edi
  4197af:	pop    esi
  4197b0:	ret    
  4197b1:	lea    eax,[eax+0x0]
  4197b4:	push   ebx
  4197b5:	mov    ebx,eax
  4197b7:	mov    edx,DWORD PTR [ebx+0x8]
  4197ba:	mov    ecx,DWORD PTR [ebx+0x10]
  4197bd:	mov    eax,DWORD PTR [ebx+0x4]
  4197c0:	call   0x416610
  4197c5:	xor    eax,eax
  4197c7:	mov    DWORD PTR [ebx+0x10],eax
  4197ca:	pop    ebx
  4197cb:	ret    
  4197cc:	push   ebx
  4197cd:	push   ecx
  4197ce:	mov    DWORD PTR [esp],edx
  4197d1:	mov    ebx,eax
  4197d3:	cmp    DWORD PTR [esp],0xffffff80
  4197d7:	jl     0x4197f9
  4197d9:	cmp    DWORD PTR [esp],0x7f
  4197dd:	jg     0x4197f9
  4197df:	mov    dl,0x2
  4197e1:	mov    eax,ebx
  4197e3:	call   0x419950
  4197e8:	mov    edx,esp
  4197ea:	mov    ecx,0x1
  4197ef:	mov    eax,ebx
  4197f1:	call   0x419768
  4197f6:	pop    edx
  4197f7:	pop    ebx
  4197f8:	ret    
  4197f9:	cmp    DWORD PTR [esp],0xffff8000
  419800:	jl     0x419824
  419802:	cmp    DWORD PTR [esp],0x7fff
  419809:	jg     0x419824
  41980b:	mov    dl,0x3
  41980d:	mov    eax,ebx
  41980f:	call   0x419950
  419814:	mov    edx,esp
  419816:	mov    ecx,0x2
  41981b:	mov    eax,ebx
  41981d:	call   0x419768
  419822:	jmp    0x41983b
  419824:	mov    dl,0x4
  419826:	mov    eax,ebx
  419828:	call   0x419950
  41982d:	mov    edx,esp
  41982f:	mov    ecx,0x4
  419834:	mov    eax,ebx
  419836:	call   0x419768
  41983b:	pop    edx
  41983c:	pop    ebx
  41983d:	ret    
  41983e:	mov    eax,eax
  419840:	mov    dl,0x1
  419842:	call   0x419950
  419847:	ret    
  419848:	xor    edx,edx
  41984a:	call   0x419950
  41984f:	ret    
  419850:	push   ebx
  419851:	push   esi
  419852:	push   edi
  419853:	add    esp,0xfffffff8
  419856:	mov    edi,ecx
  419858:	mov    esi,edx
  41985a:	mov    ebx,eax
  41985c:	mov    eax,esi
  41985e:	mov    edx,edi
  419860:	call   0x4053b0
  419865:	je     0x4198a0
  419867:	mov    DWORD PTR [esp+0x4],edi
  41986b:	mov    eax,DWORD PTR [esp+0x4]
  41986f:	test   eax,eax
  419871:	je     0x419878
  419873:	sub    eax,0x4
  419876:	mov    eax,DWORD PTR [eax]
  419878:	mov    DWORD PTR [esp],eax
  41987b:	mov    dl,0x14
  41987d:	mov    eax,ebx
  41987f:	call   0x419950
  419884:	mov    edx,esp
  419886:	mov    ecx,0x4
  41988b:	mov    eax,ebx
  41988d:	call   0x419768
  419892:	mov    edx,edi
  419894:	mov    ecx,DWORD PTR [esp]
  419897:	mov    eax,ebx
  419899:	call   0x419768
  41989e:	jmp    0x4198f3
  4198a0:	mov    eax,esi
  4198a2:	test   eax,eax
  4198a4:	je     0x4198ab
  4198a6:	sub    eax,0x4
  4198a9:	mov    eax,DWORD PTR [eax]
  4198ab:	mov    DWORD PTR [esp],eax
  4198ae:	cmp    DWORD PTR [esp],0xff
  4198b5:	jg     0x4198d0
  4198b7:	mov    dl,0x6
  4198b9:	mov    eax,ebx
  4198bb:	call   0x419950
  4198c0:	mov    edx,esp
  4198c2:	mov    ecx,0x1
  4198c7:	mov    eax,ebx
  4198c9:	call   0x419768
  4198ce:	jmp    0x4198e7
  4198d0:	mov    dl,0xc
  4198d2:	mov    eax,ebx
  4198d4:	call   0x419950
  4198d9:	mov    edx,esp
  4198db:	mov    ecx,0x4
  4198e0:	mov    eax,ebx
  4198e2:	call   0x419768
  4198e7:	mov    edx,esi
  4198e9:	mov    ecx,DWORD PTR [esp]
  4198ec:	mov    eax,ebx
  4198ee:	call   0x419768
  4198f3:	pop    ecx
  4198f4:	pop    edx
  4198f5:	pop    edi
  4198f6:	pop    esi
  4198f7:	pop    ebx
  4198f8:	ret    
  4198f9:	lea    eax,[eax+0x0]
  4198fc:	push   ebp
  4198fd:	mov    ebp,esp
  4198ff:	push   0x0
  419901:	push   ebx
  419902:	push   esi
  419903:	mov    esi,edx
  419905:	mov    ebx,eax
  419907:	xor    eax,eax
  419909:	push   ebp
  41990a:	push   0x419941
  41990f:	push   DWORD PTR fs:[eax]
  419912:	mov    DWORD PTR fs:[eax],esp
  419915:	lea    edx,[ebp-0x4]
  419918:	mov    eax,esi
  41991a:	call   0x406ef8
  41991f:	mov    ecx,DWORD PTR [ebp-0x4]
  419922:	mov    edx,esi
  419924:	mov    eax,ebx
  419926:	call   0x419850
  41992b:	xor    eax,eax
  41992d:	pop    edx
  41992e:	pop    ecx
  41992f:	pop    ecx
  419930:	mov    DWORD PTR fs:[eax],edx
  419933:	push   0x419948
  419938:	lea    eax,[ebp-0x4]
  41993b:	call   0x404f88
  419940:	ret    
  419941:	jmp    0x40481c
  419946:	jmp    0x419938
  419948:	pop    esi
  419949:	pop    ebx
  41994a:	pop    ecx
  41994b:	pop    ebp
  41994c:	ret    
  41994d:	lea    eax,[eax+0x0]
  419950:	push   ecx
  419951:	mov    BYTE PTR [esp],dl
  419954:	mov    edx,esp
  419956:	mov    ecx,0x1
  41995b:	call   0x419768
  419960:	pop    edx
  419961:	ret    
  419962:	mov    eax,eax
  419964:	push   0x4729c4
  419969:	call   0x4072a0
  41996e:	push   0x419994
  419973:	push   0x0
  419975:	push   0xffffffff
  419977:	push   0x0
  419979:	call   0x407160
  41997e:	mov    ds:0x4729ac,eax
  419983:	cmp    DWORD PTR ds:0x4729ac,0x0
  41998a:	jne    0x419991
  41998c:	call   0x40ddbc
  419991:	ret    
  419992:	add    BYTE PTR [eax],al
  419994:	add    BYTE PTR [eax],al
  419996:	add    BYTE PTR [eax],al
  419998:	push   0x4729c4
  41999d:	call   0x407170
  4199a2:	mov    eax,ds:0x4729ac
  4199a7:	push   eax
  4199a8:	call   0x407140
  4199ad:	ret    
  4199ae:	mov    eax,eax
  4199b0:	mov    eax,ds:0x4729ac
  4199b5:	push   eax
  4199b6:	call   0x4072d8
  4199bb:	ret    
  4199bc:	push   ebx
  4199bd:	mov    ebx,eax
  4199bf:	push   ebx
  4199c0:	mov    eax,ds:0x4729ac
  4199c5:	push   eax
  4199c6:	call   0x407318
  4199cb:	test   eax,eax
  4199cd:	jne    0x4199d4
  4199cf:	call   0x4199b0
  4199d4:	pop    ebx
  4199d5:	ret    
  4199d6:	mov    eax,eax
  4199d8:	mov    eax,ds:0x4729ac
  4199dd:	push   eax
  4199de:	call   0x4072f8
  4199e3:	ret    
  4199e4:	push   0x4729dc
  4199e9:	call   0x4071e0
  4199ee:	ret    
  4199ef:	nop
  4199f0:	push   0x4729dc
  4199f5:	call   0x4071d0
  4199fa:	ret    
  4199fb:	nop
  4199fc:	push   ebp
  4199fd:	mov    ebp,esp
  4199ff:	add    esp,0xffffffec
  419a02:	push   ebx
  419a03:	push   esi
  419a04:	push   edi
  419a05:	mov    ebx,eax
  419a07:	call   0x4071f0
  419a0c:	mov    edx,DWORD PTR ds:0x46deb0
  419a12:	cmp    eax,DWORD PTR [edx]
  419a14:	je     0x419a3f
  419a16:	call   0x4071f0
  419a1b:	mov    DWORD PTR [ebp-0x14],eax
  419a1e:	mov    BYTE PTR [ebp-0x10],0x0
  419a22:	lea    eax,[ebp-0x14]
  419a25:	push   eax
  419a26:	push   0x0
  419a28:	mov    ecx,DWORD PTR ds:0x46dd24
  419a2e:	mov    dl,0x1
  419a30:	mov    eax,ds:0x4131f0
  419a35:	call   0x40c9ac
  419a3a:	call   0x4048fc
  419a3f:	test   ebx,ebx
  419a41:	jle    0x419a4c
  419a43:	mov    eax,ebx
  419a45:	call   0x4199bc
  419a4a:	jmp    0x419a51
  419a4c:	call   0x4199b0
  419a51:	xor    eax,eax
  419a53:	mov    DWORD PTR [ebp-0xc],eax
  419a56:	push   0x4729c4
  419a5b:	call   0x407180
  419a60:	xor    eax,eax
  419a62:	push   ebp
  419a63:	push   0x419bc1
  419a68:	push   DWORD PTR fs:[eax]
  419a6b:	mov    DWORD PTR fs:[eax],esp
  419a6e:	mov    eax,DWORD PTR [ebp-0xc]
  419a71:	push   eax
  419a72:	push   0x461ab8
  419a77:	call   0x4071d8
  419a7c:	mov    DWORD PTR [ebp-0xc],eax
  419a7f:	xor    eax,eax
  419a81:	push   ebp
  419a82:	push   0x419ba2
  419a87:	push   DWORD PTR fs:[eax]
  419a8a:	mov    DWORD PTR fs:[eax],esp
  419a8d:	cmp    DWORD PTR [ebp-0xc],0x0
  419a91:	je     0x419a9c
  419a93:	mov    eax,DWORD PTR [ebp-0xc]
  419a96:	cmp    DWORD PTR [eax+0x8],0x0
  419a9a:	jg     0x419aa0
  419a9c:	xor    eax,eax
  419a9e:	jmp    0x419aa2
  419aa0:	mov    al,0x1
  419aa2:	mov    BYTE PTR [ebp-0x1],al
  419aa5:	cmp    BYTE PTR [ebp-0x1],0x0
  419aa9:	je     0x419b8c
  419aaf:	jmp    0x419b7f
  419ab4:	xor    edx,edx
  419ab6:	mov    eax,DWORD PTR [ebp-0xc]
  419ab9:	call   0x413c70
  419abe:	mov    DWORD PTR [ebp-0x8],eax
  419ac1:	xor    edx,edx
  419ac3:	mov    eax,DWORD PTR [ebp-0xc]
  419ac6:	call   0x413b84
  419acb:	push   0x4729c4
  419ad0:	call   0x4072a8
  419ad5:	xor    eax,eax
  419ad7:	push   ebp
  419ad8:	push   0x419b45
  419add:	push   DWORD PTR fs:[eax]
  419ae0:	mov    DWORD PTR fs:[eax],esp
  419ae3:	xor    eax,eax
  419ae5:	push   ebp
  419ae6:	push   0x419b06
  419aeb:	push   DWORD PTR fs:[eax]
  419aee:	mov    DWORD PTR fs:[eax],esp
  419af1:	mov    eax,DWORD PTR [ebp-0x8]
  419af4:	mov    ebx,DWORD PTR [eax]
  419af6:	mov    eax,DWORD PTR [ebx+0xc]
  419af9:	call   DWORD PTR [ebx+0x8]
  419afc:	xor    eax,eax
  419afe:	pop    edx
  419aff:	pop    ecx
  419b00:	pop    ecx
  419b01:	mov    DWORD PTR fs:[eax],edx
  419b04:	jmp    0x419b2d
  419b06:	jmp    0x404568
  419b0b:	mov    eax,DWORD PTR [ebp-0x8]
  419b0e:	cmp    BYTE PTR [eax+0x4],0x0
  419b12:	jne    0x419b23
  419b14:	call   0x402f64
  419b19:	mov    edx,DWORD PTR [ebp-0x8]
  419b1c:	mov    edx,DWORD PTR [edx]
  419b1e:	mov    DWORD PTR [edx+0x10],eax
  419b21:	jmp    0x419b28
  419b23:	call   0x404924
  419b28:	call   0x404978
  419b2d:	xor    eax,eax
  419b2f:	pop    edx
  419b30:	pop    ecx
  419b31:	pop    ecx
  419b32:	mov    DWORD PTR fs:[eax],edx
  419b35:	push   0x419b4c
  419b3a:	push   0x4729c4
  419b3f:	call   0x407180
  419b44:	ret    
  419b45:	jmp    0x40481c
  419b4a:	jmp    0x419b3a
  419b4c:	mov    eax,DWORD PTR [ebp-0x8]
  419b4f:	cmp    BYTE PTR [eax+0x4],0x0
  419b53:	jne    0x419b63
  419b55:	mov    eax,DWORD PTR [ebp-0x8]
  419b58:	mov    eax,DWORD PTR [eax+0x8]
  419b5b:	push   eax
  419b5c:	call   0x4072f8
  419b61:	jmp    0x419b7f
  419b63:	mov    eax,DWORD PTR [ebp-0x8]
  419b66:	mov    eax,DWORD PTR [eax]
  419b68:	mov    edx,0x18
  419b6d:	call   0x402ebc
  419b72:	mov    edx,0xc
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	call   0x402ebc
  419b7f:	mov    eax,DWORD PTR [ebp-0xc]
  419b82:	cmp    DWORD PTR [eax+0x8],0x0
  419b86:	jg     0x419ab4
  419b8c:	xor    eax,eax
  419b8e:	pop    edx
  419b8f:	pop    ecx
  419b90:	pop    ecx
  419b91:	mov    DWORD PTR fs:[eax],edx
  419b94:	push   0x419ba9
  419b99:	mov    eax,DWORD PTR [ebp-0xc]
  419b9c:	call   0x4040a0
  419ba1:	ret    
  419ba2:	jmp    0x40481c
  419ba7:	jmp    0x419b99
  419ba9:	xor    eax,eax
  419bab:	pop    edx
  419bac:	pop    ecx
  419bad:	pop    ecx
  419bae:	mov    DWORD PTR fs:[eax],edx
  419bb1:	push   0x419bc8
  419bb6:	push   0x4729c4
  419bbb:	call   0x4072a8
  419bc0:	ret    
  419bc1:	jmp    0x40481c
  419bc6:	jmp    0x419bb6
  419bc8:	movzx  eax,BYTE PTR [ebp-0x1]
  419bcc:	pop    edi
  419bcd:	pop    esi
  419bce:	pop    ebx
  419bcf:	mov    esp,ebp
  419bd1:	pop    ebp
  419bd2:	ret    
  419bd3:	nop
  419bd4:	push   ebp
  419bd5:	mov    ebp,esp
  419bd7:	push   ecx
  419bd8:	push   ebx
  419bd9:	push   esi
  419bda:	push   edi
  419bdb:	mov    DWORD PTR [ebp-0x4],eax
  419bde:	xor    eax,eax
  419be0:	push   ebp
  419be1:	push   0x419c6b
  419be6:	push   DWORD PTR fs:[eax]
  419be9:	mov    DWORD PTR fs:[eax],esp
  419bec:	mov    eax,DWORD PTR [ebp-0x4]
  419bef:	cmp    BYTE PTR [eax+0xd],0x0
  419bf3:	jne    0x419c2a
  419bf5:	xor    eax,eax
  419bf7:	push   ebp
  419bf8:	push   0x419c15
  419bfd:	push   DWORD PTR fs:[eax]
  419c00:	mov    DWORD PTR fs:[eax],esp
  419c03:	mov    eax,DWORD PTR [ebp-0x4]
  419c06:	mov    edx,DWORD PTR [eax]
  419c08:	call   DWORD PTR [edx+0x4]
  419c0b:	xor    eax,eax
  419c0d:	pop    edx
  419c0e:	pop    ecx
  419c0f:	pop    ecx
  419c10:	mov    DWORD PTR fs:[eax],edx
  419c13:	jmp    0x419c2a
  419c15:	jmp    0x404568
  419c1a:	call   0x402f64
  419c1f:	mov    edx,DWORD PTR [ebp-0x4]
  419c22:	mov    DWORD PTR [edx+0x38],eax
  419c25:	call   0x404978
  419c2a:	xor    eax,eax
  419c2c:	pop    edx
  419c2d:	pop    ecx
  419c2e:	pop    ecx
  419c2f:	mov    DWORD PTR fs:[eax],edx
  419c32:	push   0x419c72
  419c37:	mov    eax,DWORD PTR [ebp-0x4]
  419c3a:	movzx  ebx,BYTE PTR [eax+0xf]
  419c3e:	mov    eax,DWORD PTR [ebp-0x4]
  419c41:	mov    esi,DWORD PTR [eax+0x14]
  419c44:	mov    eax,DWORD PTR [ebp-0x4]
  419c47:	mov    edx,DWORD PTR [eax]
  419c49:	call   DWORD PTR [edx]
  419c4b:	mov    eax,DWORD PTR [ebp-0x4]
  419c4e:	mov    BYTE PTR [eax+0x10],0x1
  419c52:	call   0x4199d8
  419c57:	test   bl,bl
  419c59:	je     0x419c63
  419c5b:	mov    eax,DWORD PTR [ebp-0x4]
  419c5e:	call   0x4040a0
  419c63:	mov    eax,esi
  419c65:	call   0x404f6c
  419c6a:	ret    
  419c6b:	jmp    0x40481c
  419c70:	jmp    0x419c37
  419c72:	mov    eax,esi
  419c74:	pop    edi
  419c75:	pop    esi
  419c76:	pop    ebx
  419c77:	pop    ecx
  419c78:	pop    ebp
  419c79:	ret    
  419c7a:	mov    eax,eax
  419c7c:	push   ebp
  419c7d:	mov    ebp,esp
  419c7f:	add    esp,0xfffffff0
  419c82:	push   ebx
  419c83:	push   esi
  419c84:	xor    ebx,ebx
  419c86:	mov    DWORD PTR [ebp-0x10],ebx
  419c89:	test   dl,dl
  419c8b:	je     0x419c95
  419c8d:	add    esp,0xfffffff0
  419c90:	call   0x4043ac
  419c95:	mov    ebx,ecx
  419c97:	mov    BYTE PTR [ebp-0x1],dl
  419c9a:	mov    esi,eax
  419c9c:	xor    eax,eax
  419c9e:	push   ebp
  419c9f:	push   0x419d26
  419ca4:	push   DWORD PTR fs:[eax]
  419ca7:	mov    DWORD PTR fs:[eax],esp
  419caa:	xor    edx,edx
  419cac:	mov    eax,esi
  419cae:	call   0x404070
  419cb3:	call   0x4199e4
  419cb8:	mov    BYTE PTR [esi+0xe],bl
  419cbb:	mov    BYTE PTR [esi+0xc],bl
  419cbe:	push   esi
  419cbf:	push   0x4
  419cc1:	lea    eax,[esi+0x8]
  419cc4:	push   eax
  419cc5:	mov    ecx,0x419bd4
  419cca:	xor    edx,edx
  419ccc:	xor    eax,eax
  419cce:	call   0x404f0c
  419cd3:	mov    ebx,eax
  419cd5:	mov    DWORD PTR [esi+0x4],ebx
  419cd8:	test   ebx,ebx
  419cda:	jne    0x419d10
  419cdc:	call   0x407230
  419ce1:	lea    edx,[ebp-0x10]
  419ce4:	call   0x40c0a0
  419ce9:	mov    eax,DWORD PTR [ebp-0x10]
  419cec:	mov    DWORD PTR [ebp-0xc],eax
  419cef:	mov    BYTE PTR [ebp-0x8],0xb
  419cf3:	lea    eax,[ebp-0xc]
  419cf6:	push   eax
  419cf7:	push   0x0
  419cf9:	mov    ecx,DWORD PTR ds:0x46de34
  419cff:	mov    dl,0x1
  419d01:	mov    eax,ds:0x4131f0
  419d06:	call   0x40c9ac
  419d0b:	call   0x4048fc
  419d10:	xor    eax,eax
  419d12:	pop    edx
  419d13:	pop    ecx
  419d14:	pop    ecx
  419d15:	mov    DWORD PTR fs:[eax],edx
  419d18:	push   0x419d2d
  419d1d:	lea    eax,[ebp-0x10]
  419d20:	call   0x404f88
  419d25:	ret    
  419d26:	jmp    0x40481c
  419d2b:	jmp    0x419d1d
  419d2d:	mov    eax,esi
  419d2f:	cmp    BYTE PTR [ebp-0x1],0x0
  419d33:	je     0x419d44
  419d35:	call   0x404404
  419d3a:	pop    DWORD PTR fs:0x0
  419d41:	add    esp,0xc
  419d44:	mov    eax,esi
  419d46:	pop    esi
  419d47:	pop    ebx
  419d48:	mov    esp,ebp
  419d4a:	pop    ebp
  419d4b:	ret    
  419d4c:	push   ebx
  419d4d:	push   esi
  419d4e:	call   0x404454
  419d53:	mov    ebx,edx
  419d55:	mov    esi,eax
  419d57:	cmp    DWORD PTR [esi+0x8],0x0
  419d5b:	je     0x419d7e
  419d5d:	cmp    BYTE PTR [esi+0x10],0x0
  419d61:	jne    0x419d7e
  419d63:	mov    eax,esi
  419d65:	call   0x41a134
  419d6a:	cmp    BYTE PTR [esi+0xc],0x0
  419d6e:	je     0x419d77
  419d70:	mov    eax,esi
  419d72:	call   0x41a10c
  419d77:	mov    eax,esi
  419d79:	call   0x41a13c
  419d7e:	push   0x0
  419d80:	push   0x0
  419d82:	mov    eax,DWORD PTR [esi]
  419d84:	mov    edx,esi
  419d86:	call   0x419e88
  419d8b:	mov    eax,DWORD PTR [esi+0x4]
  419d8e:	test   eax,eax
  419d90:	je     0x419d98
  419d92:	push   eax
  419d93:	call   0x407140
  419d98:	mov    edx,ebx
  419d9a:	and    dl,0xfc
  419d9d:	mov    eax,esi
  419d9f:	call   0x404090
  419da4:	mov    eax,DWORD PTR [esi+0x38]
  419da7:	call   0x4040a0
  419dac:	call   0x4199f0
  419db1:	test   bl,bl
  419db3:	jle    0x419dbc
  419db5:	mov    eax,esi
  419db7:	call   0x4043fc
  419dbc:	pop    esi
  419dbd:	pop    ebx
  419dbe:	ret    
  419dbf:	nop
  419dc0:	cmp    BYTE PTR [eax+0xc],0x0
  419dc4:	jne    0x419dcb
  419dc6:	call   0x41a10c
  419dcb:	ret    
  419dcc:	push   ebp
  419dcd:	mov    ebp,esp
  419dcf:	add    esp,0xffffffec
  419dd2:	push   ebx
  419dd3:	xor    ecx,ecx
  419dd5:	mov    DWORD PTR [ebp-0x14],ecx
  419dd8:	mov    ebx,edx
  419dda:	xor    eax,eax
  419ddc:	push   ebp
  419ddd:	push   0x419e3a
  419de2:	push   DWORD PTR fs:[eax]
  419de5:	mov    DWORD PTR fs:[eax],esp
  419de8:	test   ebx,ebx
  419dea:	je     0x419e24
  419dec:	lea    edx,[ebp-0x14]
  419def:	mov    eax,ebx
  419df1:	call   0x40c0a0
  419df6:	mov    eax,DWORD PTR [ebp-0x14]
  419df9:	mov    DWORD PTR [ebp-0x10],eax
  419dfc:	mov    BYTE PTR [ebp-0xc],0xb
  419e00:	mov    DWORD PTR [ebp-0x8],ebx
  419e03:	mov    BYTE PTR [ebp-0x4],0x0
  419e07:	lea    eax,[ebp-0x10]
  419e0a:	push   eax
  419e0b:	push   0x1
  419e0d:	mov    ecx,DWORD PTR ds:0x46dc28
  419e13:	mov    dl,0x1
  419e15:	mov    eax,ds:0x4131f0
  419e1a:	call   0x40c9ac
  419e1f:	call   0x4048fc
  419e24:	xor    eax,eax
  419e26:	pop    edx
  419e27:	pop    ecx
  419e28:	pop    ecx
  419e29:	mov    DWORD PTR fs:[eax],edx
  419e2c:	push   0x419e41
  419e31:	lea    eax,[ebp-0x14]
  419e34:	call   0x404f88
  419e39:	ret    
  419e3a:	jmp    0x40481c
  419e3f:	jmp    0x419e31
  419e41:	pop    ebx
  419e42:	mov    esp,ebp
  419e44:	pop    ebp
  419e45:	ret    
  419e46:	mov    eax,eax
  419e48:	push   ebx
  419e49:	mov    ebx,eax
  419e4b:	test   dl,dl
  419e4d:	jne    0x419e5d
  419e4f:	call   0x407230
  419e54:	mov    edx,eax
  419e56:	mov    eax,ebx
  419e58:	call   0x419dcc
  419e5d:	pop    ebx
  419e5e:	ret    
  419e5f:	nop
  419e60:	push   ebx
  419e61:	cmp    WORD PTR [eax+0x1a],0x0
  419e66:	je     0x419e72
  419e68:	mov    ebx,eax
  419e6a:	mov    edx,eax
  419e6c:	mov    eax,DWORD PTR [ebx+0x1c]
  419e6f:	call   DWORD PTR [ebx+0x18]
  419e72:	pop    ebx
  419e73:	ret    
  419e74:	cmp    WORD PTR [eax+0x1a],0x0
  419e79:	je     0x419e86
  419e7b:	push   eax
  419e7c:	push   0x419e60
  419e81:	call   0x41a0e4
  419e86:	ret    
  419e87:	nop
  419e88:	push   ebp
  419e89:	mov    ebp,esp
  419e8b:	push   ebx
  419e8c:	push   esi
  419e8d:	push   edi
  419e8e:	mov    edi,edx
  419e90:	push   0x4729c4
  419e95:	call   0x407180
  419e9a:	xor    eax,eax
  419e9c:	push   ebp
  419e9d:	push   0x419f3a
  419ea2:	push   DWORD PTR fs:[eax]
  419ea5:	mov    DWORD PTR fs:[eax],esp
  419ea8:	cmp    DWORD PTR ds:0x461ab8,0x0
  419eaf:	je     0x419f22
  419eb1:	mov    eax,ds:0x461ab8
  419eb6:	mov    esi,DWORD PTR [eax+0x8]
  419eb9:	dec    esi
  419eba:	cmp    esi,0x0
  419ebd:	jl     0x419f22
  419ebf:	mov    edx,esi
  419ec1:	mov    eax,ds:0x461ab8
  419ec6:	call   0x413c70
  419ecb:	mov    ebx,eax
  419ecd:	cmp    DWORD PTR [ebx+0x8],0x0
  419ed1:	jne    0x419f1c
  419ed3:	test   edi,edi
  419ed5:	je     0x419edd
  419ed7:	mov    eax,DWORD PTR [ebx]
  419ed9:	cmp    edi,DWORD PTR [eax]
  419edb:	je     0x419ef8
  419edd:	cmp    WORD PTR [ebp+0xa],0x0
  419ee2:	je     0x419f1c
  419ee4:	mov    eax,DWORD PTR [ebx]
  419ee6:	mov    eax,DWORD PTR [eax+0x8]
  419ee9:	cmp    eax,DWORD PTR [ebp+0x8]
  419eec:	jne    0x419f1c
  419eee:	mov    eax,DWORD PTR [ebx]
  419ef0:	mov    eax,DWORD PTR [eax+0xc]
  419ef3:	cmp    eax,DWORD PTR [ebp+0xc]
  419ef6:	jne    0x419f1c
  419ef8:	mov    edx,esi
  419efa:	mov    eax,ds:0x461ab8
  419eff:	call   0x413b84
  419f04:	mov    eax,DWORD PTR [ebx]
  419f06:	mov    edx,0x18
  419f0b:	call   0x402ebc
  419f10:	mov    edx,0xc
  419f15:	mov    eax,ebx
  419f17:	call   0x402ebc
  419f1c:	dec    esi
  419f1d:	cmp    esi,0xffffffff
  419f20:	jne    0x419ebf
  419f22:	xor    eax,eax
  419f24:	pop    edx
  419f25:	pop    ecx
  419f26:	pop    ecx
  419f27:	mov    DWORD PTR fs:[eax],edx
  419f2a:	push   0x419f41
  419f2f:	push   0x4729c4
  419f34:	call   0x4072a8
  419f39:	ret    
  419f3a:	jmp    0x40481c
  419f3f:	jmp    0x419f2f
  419f41:	pop    edi
  419f42:	pop    esi
  419f43:	pop    ebx
  419f44:	pop    ebp
  419f45:	ret    0x8
  419f48:	push   ebp
  419f49:	mov    ebp,esp
  419f4b:	add    esp,0xffffffe8
  419f4e:	push   ebx
  419f4f:	mov    BYTE PTR [ebp-0x5],cl
  419f52:	mov    DWORD PTR [ebp-0x4],edx
  419f55:	call   0x4071f0
  419f5a:	mov    edx,DWORD PTR ds:0x46deb0
  419f60:	cmp    eax,DWORD PTR [edx]
  419f62:	jne    0x419f72
  419f64:	mov    ebx,DWORD PTR [ebp-0x4]
  419f67:	mov    eax,DWORD PTR [ebx+0xc]
  419f6a:	call   DWORD PTR [ebx+0x8]
  419f6d:	jmp    0x41a0df
  419f72:	cmp    BYTE PTR [ebp-0x5],0x0
  419f76:	je     0x419f87
  419f78:	mov    eax,0xc
  419f7d:	call   0x402ea0
  419f82:	mov    DWORD PTR [ebp-0xc],eax
  419f85:	jmp    0x419f8d
  419f87:	lea    eax,[ebp-0x18]
  419f8a:	mov    DWORD PTR [ebp-0xc],eax
  419f8d:	movzx  ebx,BYTE PTR [ebp-0x5]
  419f91:	xor    bl,0x1
  419f94:	test   bl,bl
  419f96:	je     0x419fad
  419f98:	push   0x0
  419f9a:	push   0x0
  419f9c:	push   0xffffffff
  419f9e:	push   0x0
  419fa0:	call   0x407160
  419fa5:	mov    edx,DWORD PTR [ebp-0xc]
  419fa8:	mov    DWORD PTR [edx+0x8],eax
  419fab:	jmp    0x419fb5
  419fad:	mov    eax,DWORD PTR [ebp-0xc]
  419fb0:	xor    edx,edx
  419fb2:	mov    DWORD PTR [eax+0x8],edx
  419fb5:	xor    eax,eax
  419fb7:	push   ebp
  419fb8:	push   0x41a0be
  419fbd:	push   DWORD PTR fs:[eax]
  419fc0:	mov    DWORD PTR fs:[eax],esp
  419fc3:	push   0x4729c4
  419fc8:	call   0x407180
  419fcd:	xor    eax,eax
  419fcf:	push   ebp
  419fd0:	push   0x41a097
  419fd5:	push   DWORD PTR fs:[eax]
  419fd8:	mov    DWORD PTR fs:[eax],esp
  419fdb:	mov    eax,DWORD PTR [ebp-0xc]
  419fde:	movzx  edx,BYTE PTR [ebp-0x5]
  419fe2:	mov    BYTE PTR [eax+0x4],dl
  419fe5:	cmp    DWORD PTR ds:0x461ab8,0x0
  419fec:	jne    0x419fff
  419fee:	mov    dl,0x1
  419ff0:	mov    eax,ds:0x4127e0
  419ff5:	call   0x404070
  419ffa:	mov    ds:0x461ab8,eax
  419fff:	mov    eax,DWORD PTR [ebp-0xc]
  41a002:	mov    edx,DWORD PTR [ebp-0x4]
  41a005:	mov    DWORD PTR [eax],edx
  41a007:	mov    edx,DWORD PTR [ebp-0xc]
  41a00a:	mov    eax,ds:0x461ab8
  41a00f:	call   0x413b38
  41a014:	call   0x4199d8
  41a019:	cmp    WORD PTR ds:0x461aaa,0x0
  41a021:	je     0x41a036
  41a023:	mov    eax,DWORD PTR [ebp-0xc]
  41a026:	mov    eax,DWORD PTR [eax]
  41a028:	mov    edx,DWORD PTR [eax]
  41a02a:	mov    eax,DWORD PTR ds:0x461aac
  41a030:	call   DWORD PTR ds:0x461aa8
  41a036:	test   bl,bl
  41a038:	je     0x41a07f
  41a03a:	push   0x4729c4
  41a03f:	call   0x4072a8
  41a044:	xor    eax,eax
  41a046:	push   ebp
  41a047:	push   0x41a078
  41a04c:	push   DWORD PTR fs:[eax]
  41a04f:	mov    DWORD PTR fs:[eax],esp
  41a052:	push   0xffffffff
  41a054:	mov    eax,DWORD PTR [ebp-0xc]
  41a057:	mov    eax,DWORD PTR [eax+0x8]
  41a05a:	push   eax
  41a05b:	call   0x407318
  41a060:	xor    eax,eax
  41a062:	pop    edx
  41a063:	pop    ecx
  41a064:	pop    ecx
  41a065:	mov    DWORD PTR fs:[eax],edx
  41a068:	push   0x41a07f
  41a06d:	push   0x4729c4
  41a072:	call   0x407180
  41a077:	ret    
  41a078:	jmp    0x40481c
  41a07d:	jmp    0x41a06d
  41a07f:	xor    eax,eax
  41a081:	pop    edx
  41a082:	pop    ecx
  41a083:	pop    ecx
  41a084:	mov    DWORD PTR fs:[eax],edx
  41a087:	push   0x41a09e
  41a08c:	push   0x4729c4
  41a091:	call   0x4072a8
  41a096:	ret    
  41a097:	jmp    0x40481c
  41a09c:	jmp    0x41a08c
  41a09e:	xor    eax,eax
  41a0a0:	pop    edx
  41a0a1:	pop    ecx
  41a0a2:	pop    ecx
  41a0a3:	mov    DWORD PTR fs:[eax],edx
  41a0a6:	push   0x41a0c5
  41a0ab:	cmp    BYTE PTR [ebp-0x5],0x0
  41a0af:	jne    0x41a0bd
  41a0b1:	mov    eax,DWORD PTR [ebp-0xc]
  41a0b4:	mov    eax,DWORD PTR [eax+0x8]
  41a0b7:	push   eax
  41a0b8:	call   0x407140
  41a0bd:	ret    
  41a0be:	jmp    0x40481c
  41a0c3:	jmp    0x41a0ab
  41a0c5:	cmp    BYTE PTR [ebp-0x5],0x0
  41a0c9:	jne    0x41a0df
  41a0cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a0ce:	cmp    DWORD PTR [eax+0x10],0x0
  41a0d2:	je     0x41a0df
  41a0d4:	mov    eax,DWORD PTR [ebp-0x4]
  41a0d7:	mov    eax,DWORD PTR [eax+0x10]
  41a0da:	call   0x4048fc
  41a0df:	pop    ebx
  41a0e0:	mov    esp,ebp
  41a0e2:	pop    ebp
  41a0e3:	ret    
  41a0e4:	push   ebp
  41a0e5:	mov    ebp,esp
  41a0e7:	mov    DWORD PTR [eax+0x20],eax
  41a0ea:	xor    edx,edx
  41a0ec:	mov    DWORD PTR [eax+0x30],edx
  41a0ef:	mov    edx,DWORD PTR [ebp+0x8]
  41a0f2:	mov    DWORD PTR [eax+0x28],edx
  41a0f5:	mov    edx,DWORD PTR [ebp+0xc]
  41a0f8:	mov    DWORD PTR [eax+0x2c],edx
  41a0fb:	lea    edx,[eax+0x20]
  41a0fe:	xor    ecx,ecx
  41a100:	mov    eax,DWORD PTR [eax]
  41a102:	call   0x419f48
  41a107:	pop    ebp
  41a108:	ret    0x8
  41a10b:	nop
  41a10c:	push   ebx
  41a10d:	push   esi
  41a10e:	mov    ebx,eax
  41a110:	mov    eax,DWORD PTR [ebx+0x4]
  41a113:	push   eax
  41a114:	call   0x4072e0
  41a119:	mov    esi,eax
  41a11b:	test   esi,esi
  41a11d:	setge  dl
  41a120:	mov    eax,ebx
  41a122:	call   0x419e48
  41a127:	dec    esi
  41a128:	jne    0x41a12e
  41a12a:	mov    BYTE PTR [ebx+0xe],0x0
  41a12e:	pop    esi
  41a12f:	pop    ebx
  41a130:	ret    
  41a131:	lea    eax,[eax+0x0]
  41a134:	mov    BYTE PTR [eax+0xd],0x1
  41a138:	ret    
  41a139:	lea    eax,[eax+0x0]
  41a13c:	push   ebx
  41a13d:	push   esi
  41a13e:	add    esp,0xffffffd8
  41a141:	mov    esi,eax
  41a143:	mov    eax,DWORD PTR [esi+0x4]
  41a146:	mov    DWORD PTR [esp+0x4],eax
  41a14a:	call   0x4071f0
  41a14f:	mov    edx,DWORD PTR ds:0x46deb0
  41a155:	cmp    eax,DWORD PTR [edx]
  41a157:	jne    0x41a1b1
  41a159:	xor    ebx,ebx
  41a15b:	mov    eax,ds:0x4729ac
  41a160:	mov    DWORD PTR [esp+0x8],eax
  41a164:	cmp    ebx,0x2
  41a167:	jne    0x41a17b
  41a169:	push   0x0
  41a16b:	push   0x0
  41a16d:	push   0x0
  41a16f:	push   0x0
  41a171:	lea    eax,[esp+0x1c]
  41a175:	push   eax
  41a176:	call   0x407360
  41a17b:	push   0x40
  41a17d:	push   0x3e8
  41a182:	push   0x0
  41a184:	lea    eax,[esp+0x10]
  41a188:	push   eax
  41a189:	push   0x2
  41a18b:	call   0x407358
  41a190:	mov    ebx,eax
  41a192:	cmp    ebx,0xffffffff
  41a195:	setne  dl
  41a198:	mov    eax,esi
  41a19a:	call   0x419e48
  41a19f:	cmp    ebx,0x1
  41a1a2:	jne    0x41a1ab
  41a1a4:	xor    eax,eax
  41a1a6:	call   0x4199fc
  41a1ab:	test   ebx,ebx
  41a1ad:	jne    0x41a164
  41a1af:	jmp    0x41a1bd
  41a1b1:	push   0xffffffff
  41a1b3:	mov    eax,DWORD PTR [esp+0x8]
  41a1b7:	push   eax
  41a1b8:	call   0x407318
  41a1bd:	push   esp
  41a1be:	mov    eax,DWORD PTR [esp+0x8]
  41a1c2:	push   eax
  41a1c3:	call   0x407210
  41a1c8:	cmp    eax,0x1
  41a1cb:	sbb    edx,edx
  41a1cd:	inc    edx
  41a1ce:	mov    eax,esi
  41a1d0:	call   0x419e48
  41a1d5:	mov    eax,DWORD PTR [esp]
  41a1d8:	add    esp,0x28
  41a1db:	pop    esi
  41a1dc:	pop    ebx
  41a1dd:	ret    
  41a1de:	mov    eax,eax
  41a1e0:	push   ebx
  41a1e1:	push   esi
  41a1e2:	push   edi
  41a1e3:	test   dl,dl
  41a1e5:	je     0x41a1ef
  41a1e7:	add    esp,0xfffffff0
  41a1ea:	call   0x4043ac
  41a1ef:	mov    esi,ecx
  41a1f1:	mov    ebx,edx
  41a1f3:	mov    edi,eax
  41a1f5:	movzx  eax,BYTE PTR ds:0x41a228
  41a1fc:	mov    BYTE PTR [edi+0x24],al
  41a1ff:	test   esi,esi
  41a201:	je     0x41a20c
  41a203:	mov    edx,edi
  41a205:	mov    eax,esi
  41a207:	call   0x41a39c
  41a20c:	mov    eax,edi
  41a20e:	test   bl,bl
  41a210:	je     0x41a221
  41a212:	call   0x404404
  41a217:	pop    DWORD PTR fs:0x0
  41a21e:	add    esp,0xc
  41a221:	mov    eax,edi
  41a223:	pop    edi
  41a224:	pop    esi
  41a225:	pop    ebx
  41a226:	ret    
  41a227:	add    BYTE PTR [ecx],al
  41a229:	add    BYTE PTR [eax],al
  41a22b:	add    BYTE PTR [ebx+0x56],dl
  41a22e:	push   ecx
  41a22f:	call   0x404454
  41a234:	mov    BYTE PTR [esp],dl
  41a237:	mov    ebx,eax
  41a239:	mov    eax,ebx
  41a23b:	call   0x41a494
  41a240:	cmp    DWORD PTR [ebx+0x14],0x0
  41a244:	je     0x41a271
  41a246:	jmp    0x41a25c
  41a248:	mov    edx,DWORD PTR [esi+0x8]
  41a24b:	dec    edx
  41a24c:	mov    eax,esi
  41a24e:	call   0x413c70
  41a253:	mov    cl,0x1
  41a255:	mov    edx,ebx
  41a257:	mov    esi,DWORD PTR [eax]
  41a259:	call   DWORD PTR [esi+0x10]
  41a25c:	mov    esi,DWORD PTR [ebx+0x14]
  41a25f:	test   esi,esi
  41a261:	je     0x41a269
  41a263:	cmp    DWORD PTR [esi+0x8],0x0
  41a267:	jg     0x41a248
  41a269:	lea    eax,[ebx+0x14]
  41a26c:	call   0x40e32c
  41a271:	mov    eax,ebx
  41a273:	call   0x41a438
  41a278:	mov    eax,DWORD PTR [ebx+0x4]
  41a27b:	test   eax,eax
  41a27d:	je     0x41a286
  41a27f:	mov    edx,ebx
  41a281:	call   0x41a400
  41a286:	movzx  edx,BYTE PTR [esp]
  41a28a:	and    dl,0xfc
  41a28d:	mov    eax,ebx
  41a28f:	call   0x414058
  41a294:	cmp    BYTE PTR [esp],0x0
  41a298:	jle    0x41a2a1
  41a29a:	mov    eax,ebx
  41a29c:	call   0x4043fc
  41a2a1:	pop    edx
  41a2a2:	pop    esi
  41a2a3:	pop    ebx
  41a2a4:	ret    
  41a2a5:	lea    eax,[eax+0x0]
  41a2a8:	test   BYTE PTR [eax+0x1c],0x8
  41a2ac:	jne    0x41a2b3
  41a2ae:	call   0x41a494
  41a2b3:	ret    
  41a2b4:	push   ebx
  41a2b5:	push   esi
  41a2b6:	mov    esi,edx
  41a2b8:	mov    ebx,eax
  41a2ba:	mov    eax,DWORD PTR [ebx+0x4]
  41a2bd:	test   eax,eax
  41a2bf:	je     0x41a2c6
  41a2c1:	cmp    eax,DWORD PTR [esi+0x4]
  41a2c4:	je     0x41a2fc
  41a2c6:	cmp    DWORD PTR [ebx+0x14],0x0
  41a2ca:	jne    0x41a2db
  41a2cc:	mov    dl,0x1
  41a2ce:	mov    eax,ds:0x4127e0
  41a2d3:	call   0x404070
  41a2d8:	mov    DWORD PTR [ebx+0x14],eax
  41a2db:	mov    edx,esi
  41a2dd:	mov    eax,DWORD PTR [ebx+0x14]
  41a2e0:	call   0x413ccc
  41a2e5:	test   eax,eax
  41a2e7:	jge    0x41a2fc
  41a2e9:	mov    edx,esi
  41a2eb:	mov    eax,DWORD PTR [ebx+0x14]
  41a2ee:	call   0x413b38
  41a2f3:	mov    edx,ebx
  41a2f5:	mov    eax,esi
  41a2f7:	call   0x41a2b4
  41a2fc:	or     WORD PTR [ebx+0x1c],0x100
  41a302:	pop    esi
  41a303:	pop    ebx
  41a304:	ret    
  41a305:	lea    eax,[eax+0x0]
  41a308:	push   ebx
  41a309:	push   esi
  41a30a:	mov    esi,edx
  41a30c:	mov    ebx,eax
  41a30e:	mov    eax,esi
  41a310:	call   0x418254
  41a315:	mov    WORD PTR [ebx+0x18],ax
  41a319:	pop    esi
  41a31a:	pop    ebx
  41a31b:	ret    
  41a31c:	push   ebx
  41a31d:	push   esi
  41a31e:	mov    esi,edx
  41a320:	mov    ebx,eax
  41a322:	mov    eax,esi
  41a324:	call   0x418254
  41a329:	mov    WORD PTR [ebx+0x1a],ax
  41a32d:	pop    esi
  41a32e:	pop    ebx
  41a32f:	ret    
  41a330:	movzx  eax,WORD PTR [eax+0x18]
  41a334:	xchg   edx,eax
  41a335:	call   0x4197cc
  41a33a:	ret    
  41a33b:	nop
  41a33c:	movzx  eax,WORD PTR [eax+0x1a]
  41a340:	xchg   edx,eax
  41a341:	call   0x4197cc
  41a346:	ret    
  41a347:	nop
  41a348:	push   ebx
  41a349:	push   esi
  41a34a:	mov    esi,edx
  41a34c:	mov    ebx,eax
  41a34e:	cmp    DWORD PTR [ebx+0x10],0x0
  41a352:	jne    0x41a363
  41a354:	mov    dl,0x1
  41a356:	mov    eax,ds:0x4127e0
  41a35b:	call   0x404070
  41a360:	mov    DWORD PTR [ebx+0x10],eax
  41a363:	mov    edx,esi
  41a365:	mov    eax,DWORD PTR [ebx+0x10]
  41a368:	call   0x413b38
  41a36d:	mov    DWORD PTR [esi+0x4],ebx
  41a370:	pop    esi
  41a371:	pop    ebx
  41a372:	ret    
  41a373:	nop
  41a374:	push   ebx
  41a375:	mov    ebx,eax
  41a377:	xor    eax,eax
  41a379:	mov    DWORD PTR [edx+0x4],eax
  41a37c:	mov    eax,DWORD PTR [ebx+0x10]
  41a37f:	call   0x413e0c
  41a384:	mov    eax,DWORD PTR [ebx+0x10]
  41a387:	cmp    DWORD PTR [eax+0x8],0x0
  41a38b:	jne    0x41a397
  41a38d:	call   0x4040a0
  41a392:	xor    eax,eax
  41a394:	mov    DWORD PTR [ebx+0x10],eax
  41a397:	pop    ebx
  41a398:	ret    
  41a399:	lea    eax,[eax+0x0]
  41a39c:	push   ebx
  41a39d:	push   esi
  41a39e:	push   edi
  41a39f:	mov    ebx,edx
  41a3a1:	mov    edi,eax
  41a3a3:	mov    edx,edi
  41a3a5:	mov    eax,ebx
  41a3a7:	mov    si,0xfff5
  41a3ab:	call   0x40429c
  41a3b0:	mov    eax,DWORD PTR [ebx+0x4]
  41a3b3:	test   eax,eax
  41a3b5:	je     0x41a3be
  41a3b7:	mov    edx,ebx
  41a3b9:	call   0x41a400
  41a3be:	mov    eax,DWORD PTR [ebx+0x8]
  41a3c1:	push   eax
  41a3c2:	xor    ecx,ecx
  41a3c4:	mov    edx,ebx
  41a3c6:	mov    eax,edi
  41a3c8:	mov    esi,DWORD PTR [eax]
  41a3ca:	call   DWORD PTR [esi+0x20]
  41a3cd:	mov    edx,ebx
  41a3cf:	mov    eax,edi
  41a3d1:	call   0x41a348
  41a3d6:	mov    dl,0x1
  41a3d8:	mov    eax,ebx
  41a3da:	call   0x41a880
  41a3df:	test   BYTE PTR [edi+0x1c],0x10
  41a3e3:	je     0x41a3f0
  41a3e5:	mov    cl,0x1
  41a3e7:	mov    dl,0x1
  41a3e9:	mov    eax,ebx
  41a3eb:	call   0x41a830
  41a3f0:	xor    ecx,ecx
  41a3f2:	mov    edx,ebx
  41a3f4:	mov    eax,edi
  41a3f6:	mov    ebx,DWORD PTR [eax]
  41a3f8:	call   DWORD PTR [ebx+0x10]
  41a3fb:	pop    edi
  41a3fc:	pop    esi
  41a3fd:	pop    ebx
  41a3fe:	ret    
  41a3ff:	nop
  41a400:	push   ebx
  41a401:	push   esi
  41a402:	push   edi
  41a403:	mov    ebx,edx
  41a405:	mov    esi,eax
  41a407:	push   0x0
  41a409:	mov    ecx,DWORD PTR [ebx+0x8]
  41a40c:	mov    edx,ebx
  41a40e:	mov    eax,esi
  41a410:	mov    edi,DWORD PTR [eax]
  41a412:	call   DWORD PTR [edi+0x20]
  41a415:	mov    cl,0x1
  41a417:	mov    edx,ebx
  41a419:	mov    eax,esi
  41a41b:	mov    edi,DWORD PTR [eax]
  41a41d:	call   DWORD PTR [edi+0x10]
  41a420:	xor    edx,edx
  41a422:	mov    eax,ebx
  41a424:	call   0x41a880
  41a429:	mov    edx,ebx
  41a42b:	mov    eax,esi
  41a42d:	call   0x41a374
  41a432:	pop    edi
  41a433:	pop    esi
  41a434:	pop    ebx
  41a435:	ret    
  41a436:	mov    eax,eax
  41a438:	push   ebx
  41a439:	push   esi
  41a43a:	push   edi
  41a43b:	mov    esi,eax
  41a43d:	jmp    0x41a482
  41a43f:	mov    eax,ebx
  41a441:	call   0x413d58
  41a446:	mov    edi,eax
  41a448:	test   BYTE PTR [edi+0x1d],0x1
  41a44c:	jne    0x41a465
  41a44e:	movzx  eax,WORD PTR ds:0x41a490
  41a455:	and    ax,WORD PTR [esi+0x1c]
  41a459:	movzx  edx,WORD PTR ds:0x41a490
  41a460:	cmp    dx,ax
  41a463:	jne    0x41a470
  41a465:	mov    edx,edi
  41a467:	mov    eax,esi
  41a469:	call   0x41a400
  41a46e:	jmp    0x41a479
  41a470:	mov    edx,edi
  41a472:	mov    eax,esi
  41a474:	call   0x41a374
  41a479:	mov    dl,0x1
  41a47b:	mov    eax,edi
  41a47d:	mov    ecx,DWORD PTR [eax]
  41a47f:	call   DWORD PTR [ecx-0x4]
  41a482:	mov    ebx,DWORD PTR [esi+0x10]
  41a485:	test   ebx,ebx
  41a487:	jne    0x41a43f
  41a489:	pop    edi
  41a48a:	pop    esi
  41a48b:	pop    ebx
  41a48c:	ret    
  41a48d:	add    BYTE PTR [eax],al
  41a48f:	add    BYTE PTR [eax],dl
  41a491:	add    al,BYTE PTR [eax]
  41a493:	add    BYTE PTR [ebx+0x56],dl
  41a496:	push   edi
  41a497:	mov    ebx,eax
  41a499:	test   BYTE PTR [ebx+0x1c],0x8
  41a49d:	jne    0x41a4c9
  41a49f:	or     WORD PTR [ebx+0x1c],0x8
  41a4a4:	mov    eax,DWORD PTR [ebx+0x10]
  41a4a7:	test   eax,eax
  41a4a9:	je     0x41a4c9
  41a4ab:	mov    esi,DWORD PTR [eax+0x8]
  41a4ae:	dec    esi
  41a4af:	test   esi,esi
  41a4b1:	jl     0x41a4c9
  41a4b3:	inc    esi
  41a4b4:	xor    edi,edi
  41a4b6:	mov    edx,edi
  41a4b8:	mov    eax,DWORD PTR [ebx+0x10]
  41a4bb:	call   0x413c70
  41a4c0:	call   0x41a494
  41a4c5:	inc    edi
  41a4c6:	dec    esi
  41a4c7:	jne    0x41a4b6
  41a4c9:	pop    edi
  41a4ca:	pop    esi
  41a4cb:	pop    ebx
  41a4cc:	ret    
  41a4cd:	lea    eax,[eax+0x0]
  41a4d0:	push   ebx
  41a4d1:	mov    ebx,eax
  41a4d3:	mov    eax,DWORD PTR [ebx+0x14]
  41a4d6:	test   eax,eax
  41a4d8:	je     0x41a4f2
  41a4da:	call   0x413e0c
  41a4df:	mov    eax,DWORD PTR [ebx+0x14]
  41a4e2:	cmp    DWORD PTR [eax+0x8],0x0
  41a4e6:	jne    0x41a4f2
  41a4e8:	call   0x4040a0
  41a4ed:	xor    eax,eax
  41a4ef:	mov    DWORD PTR [ebx+0x14],eax
  41a4f2:	pop    ebx
  41a4f3:	ret    
  41a4f4:	push   ebx
  41a4f5:	push   esi
  41a4f6:	mov    esi,edx
  41a4f8:	mov    ebx,eax
  41a4fa:	mov    edx,esi
  41a4fc:	mov    eax,ebx
  41a4fe:	call   0x41a4d0
  41a503:	mov    edx,ebx
  41a505:	mov    eax,esi
  41a507:	call   0x41a4d0
  41a50c:	pop    esi
  41a50d:	pop    ebx
  41a50e:	ret    
  41a50f:	nop
  41a510:	push   ebx
  41a511:	push   esi
  41a512:	push   edi
  41a513:	push   ebp
  41a514:	push   ecx
  41a515:	mov    BYTE PTR [esp],cl
  41a518:	mov    edi,edx
  41a51a:	mov    esi,eax
  41a51c:	cmp    BYTE PTR [esp],0x1
  41a520:	jne    0x41a52f
  41a522:	test   edi,edi
  41a524:	je     0x41a52f
  41a526:	mov    edx,edi
  41a528:	mov    eax,esi
  41a52a:	call   0x41a4f4
  41a52f:	mov    eax,DWORD PTR [esi+0x10]
  41a532:	test   eax,eax
  41a534:	je     0x41a567
  41a536:	mov    ebx,DWORD PTR [eax+0x8]
  41a539:	dec    ebx
  41a53a:	test   ebx,ebx
  41a53c:	jl     0x41a567
  41a53e:	mov    edx,ebx
  41a540:	mov    eax,DWORD PTR [esi+0x10]
  41a543:	call   0x413c70
  41a548:	movzx  ecx,BYTE PTR [esp]
  41a54c:	mov    edx,edi
  41a54e:	mov    ebp,DWORD PTR [eax]
  41a550:	call   DWORD PTR [ebp+0x10]
  41a553:	dec    ebx
  41a554:	mov    eax,DWORD PTR [esi+0x10]
  41a557:	cmp    ebx,DWORD PTR [eax+0x8]
  41a55a:	jl     0x41a563
  41a55c:	mov    eax,DWORD PTR [esi+0x10]
  41a55f:	mov    ebx,DWORD PTR [eax+0x8]
  41a562:	dec    ebx
  41a563:	test   ebx,ebx
  41a565:	jge    0x41a53e
  41a567:	pop    edx
  41a568:	pop    ebp
  41a569:	pop    edi
  41a56a:	pop    esi
  41a56b:	pop    ebx
  41a56c:	ret    
  41a56d:	lea    eax,[eax+0x0]
  41a570:	push   ebp
  41a571:	mov    ebp,esp
  41a573:	push   ecx
  41a574:	push   ebx
  41a575:	push   esi
  41a576:	push   edi
  41a577:	mov    esi,edx
  41a579:	mov    ebx,eax
  41a57b:	xor    eax,eax
  41a57d:	mov    DWORD PTR [ebp-0x4],eax
  41a580:	mov    eax,DWORD PTR [esi+0x20]
  41a583:	test   eax,eax
  41a585:	je     0x41a58d
  41a587:	mov    eax,DWORD PTR [eax+0x18]
  41a58a:	mov    DWORD PTR [ebp-0x4],eax
  41a58d:	push   ebx
  41a58e:	push   0x41a308
  41a593:	push   ebx
  41a594:	push   0x41a330
  41a599:	movzx  eax,WORD PTR [ebx+0x18]
  41a59d:	cmp    ax,WORD PTR [ebp-0x4]
  41a5a1:	setne  cl
  41a5a4:	mov    edx,0x41a5e4
  41a5a9:	mov    eax,esi
  41a5ab:	mov    edi,DWORD PTR [eax]
  41a5ad:	call   DWORD PTR [edi+0x4]
  41a5b0:	push   ebx
  41a5b1:	push   0x41a31c
  41a5b6:	push   ebx
  41a5b7:	push   0x41a33c
  41a5bc:	movzx  eax,WORD PTR [ebp-0x2]
  41a5c0:	cmp    ax,WORD PTR [ebx+0x1a]
  41a5c4:	setne  cl
  41a5c7:	mov    edx,0x41a5f4
  41a5cc:	mov    eax,esi
  41a5ce:	mov    ebx,DWORD PTR [eax]
  41a5d0:	call   DWORD PTR [ebx+0x4]
  41a5d3:	pop    edi
  41a5d4:	pop    esi
  41a5d5:	pop    ebx
  41a5d6:	pop    ecx
  41a5d7:	pop    ebp
  41a5d8:	ret    
  41a5d9:	add    BYTE PTR [eax],al
  41a5db:	add    bh,bh
  41a5dd:	(bad)  
  41a5de:	(bad)  
  41a5df:	inc    DWORD PTR [eax+eax*1]
  41a5e2:	add    BYTE PTR [eax],al
  41a5e4:	dec    esp
  41a5e5:	gs data16 je 0x41a5e9
  41a5e9:	add    BYTE PTR [eax],al
  41a5eb:	add    bh,bh
  41a5ed:	(bad)  
  41a5ee:	(bad)  
  41a5ef:	inc    DWORD PTR [ebx]
  41a5f1:	add    BYTE PTR [eax],al
  41a5f3:	add    BYTE PTR [edi+ebp*2+0x70],dl
  41a5f7:	add    BYTE PTR [ebx],dh
  41a5f9:	rol    bl,0x90
  41a5fc:	push   ebp
  41a5fd:	mov    ebp,esp
  41a5ff:	pop    ebp
  41a600:	ret    0x8
  41a603:	nop
  41a604:	xor    eax,eax
  41a606:	ret    
  41a607:	nop
  41a608:	ret    
  41a609:	lea    eax,[eax+0x0]
  41a60c:	push   ebx
  41a60d:	push   esi
  41a60e:	mov    esi,edx
  41a610:	mov    ebx,eax
  41a612:	mov    eax,esi
  41a614:	mov    edx,DWORD PTR [ebx+0x8]
  41a617:	call   0x404fdc
  41a61c:	pop    esi
  41a61d:	pop    ebx
  41a61e:	ret    
  41a61f:	nop
  41a620:	mov    eax,DWORD PTR [eax+0x4]
  41a623:	ret    
  41a624:	ret    
  41a625:	lea    eax,[eax+0x0]
  41a628:	xor    eax,eax
  41a62a:	ret    
  41a62b:	nop
  41a62c:	ret    
  41a62d:	lea    eax,[eax+0x0]
  41a630:	push   ebx
  41a631:	mov    ebx,eax
  41a633:	or     WORD PTR [ebx+0x1c],0x40
  41a638:	pop    ebx
  41a639:	ret    
  41a63a:	mov    eax,eax
  41a63c:	push   ebx
  41a63d:	mov    ebx,eax
  41a63f:	and    WORD PTR [ebx+0x1c],0xffbf
  41a644:	pop    ebx
  41a645:	ret    
  41a646:	mov    eax,eax
  41a648:	push   ebx
  41a649:	mov    ebx,eax
  41a64b:	and    WORD PTR [ebx+0x1c],0xfffe
  41a650:	pop    ebx
  41a651:	ret    
  41a652:	mov    eax,eax
  41a654:	ret    
  41a655:	lea    eax,[eax+0x0]
  41a658:	xchg   edx,eax
  41a659:	call   0x417ec4
  41a65e:	ret    
  41a65f:	nop
  41a660:	xchg   edx,eax
  41a661:	mov    ecx,DWORD PTR [eax]
  41a663:	call   DWORD PTR [ecx+0x10]
  41a666:	ret    
  41a667:	nop
  41a668:	push   ebp
  41a669:	mov    ebp,esp
  41a66b:	add    esp,0xfffffff4
  41a66e:	push   ebx
  41a66f:	push   esi
  41a670:	push   edi
  41a671:	mov    DWORD PTR [ebp-0x4],ecx
  41a674:	mov    edi,edx
  41a676:	mov    ebx,eax
  41a678:	mov    esi,DWORD PTR [ebp+0x8]
  41a67b:	test   edi,edi
  41a67d:	je     0x41a6c3
  41a67f:	mov    edx,esi
  41a681:	mov    eax,DWORD PTR [ebp-0x4]
  41a684:	call   0x408668
  41a689:	test   al,al
  41a68b:	jne    0x41a6c3
  41a68d:	cmp    ebx,DWORD PTR [edi+0x4]
  41a690:	jne    0x41a6c3
  41a692:	mov    edx,esi
  41a694:	mov    eax,ebx
  41a696:	call   0x41a700
  41a69b:	test   eax,eax
  41a69d:	je     0x41a6c3
  41a69f:	mov    DWORD PTR [ebp-0xc],esi
  41a6a2:	mov    BYTE PTR [ebp-0x8],0xb
  41a6a6:	lea    eax,[ebp-0xc]
  41a6a9:	push   eax
  41a6aa:	push   0x0
  41a6ac:	mov    ecx,DWORD PTR ds:0x46dce0
  41a6b2:	mov    dl,0x1
  41a6b4:	mov    eax,ds:0x412784
  41a6b9:	call   0x40c9ac
  41a6be:	call   0x4048fc
  41a6c3:	test   BYTE PTR [ebx+0x1c],0x10
  41a6c7:	je     0x41a6dd
  41a6c9:	cmp    DWORD PTR [ebx+0x4],0x0
  41a6cd:	je     0x41a6dd
  41a6cf:	push   esi
  41a6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41a6d3:	mov    edx,edi
  41a6d5:	mov    eax,DWORD PTR [ebx+0x4]
  41a6d8:	mov    ebx,DWORD PTR [eax]
  41a6da:	call   DWORD PTR [ebx+0x20]
  41a6dd:	pop    edi
  41a6de:	pop    esi
  41a6df:	pop    ebx
  41a6e0:	mov    esp,ebp
  41a6e2:	pop    ebp
  41a6e3:	ret    0x4
  41a6e6:	mov    eax,eax
  41a6e8:	push   esi
  41a6e9:	mov    esi,eax
  41a6eb:	mov    eax,edx
  41a6ed:	mov    edx,esi
  41a6ef:	mov    si,0xfff4
  41a6f3:	call   0x40429c
  41a6f8:	pop    esi
  41a6f9:	ret    
  41a6fa:	mov    eax,eax
  41a6fc:	ret    
  41a6fd:	lea    eax,[eax+0x0]
  41a700:	push   ebx
  41a701:	push   esi
  41a702:	push   edi
  41a703:	push   ebp
  41a704:	push   ecx
  41a705:	mov    DWORD PTR [esp],edx
  41a708:	mov    edi,eax
  41a70a:	cmp    DWORD PTR [esp],0x0
  41a70e:	je     0x41a743
  41a710:	cmp    DWORD PTR [edi+0x10],0x0
  41a714:	je     0x41a743
  41a716:	mov    eax,DWORD PTR [edi+0x10]
  41a719:	mov    ebx,DWORD PTR [eax+0x8]
  41a71c:	dec    ebx
  41a71d:	test   ebx,ebx
  41a71f:	jl     0x41a743
  41a721:	inc    ebx
  41a722:	xor    ebp,ebp
  41a724:	mov    eax,DWORD PTR [edi+0x10]
  41a727:	mov    edx,ebp
  41a729:	call   0x413c70
  41a72e:	mov    esi,eax
  41a730:	mov    eax,DWORD PTR [esi+0x8]
  41a733:	mov    edx,DWORD PTR [esp]
  41a736:	call   0x408668
  41a73b:	test   al,al
  41a73d:	jne    0x41a745
  41a73f:	inc    ebp
  41a740:	dec    ebx
  41a741:	jne    0x41a724
  41a743:	xor    esi,esi
  41a745:	mov    eax,esi
  41a747:	pop    edx
  41a748:	pop    ebp
  41a749:	pop    edi
  41a74a:	pop    esi
  41a74b:	pop    ebx
  41a74c:	ret    
  41a74d:	lea    eax,[eax+0x0]
  41a750:	push   ebx
  41a751:	push   esi
  41a752:	push   edi
  41a753:	add    esp,0xfffffff8
  41a756:	mov    esi,edx
  41a758:	mov    ebx,eax
  41a75a:	mov    eax,DWORD PTR [ebx+0x8]
  41a75d:	mov    edx,esi
  41a75f:	call   0x4053b0
  41a764:	je     0x41a7d7
  41a766:	test   esi,esi
  41a768:	je     0x41a799
  41a76a:	xor    edx,edx
  41a76c:	mov    eax,esi
  41a76e:	call   0x4088d4
  41a773:	test   al,al
  41a775:	jne    0x41a799
  41a777:	mov    DWORD PTR [esp],esi
  41a77a:	mov    BYTE PTR [esp+0x4],0xb
  41a77f:	push   esp
  41a780:	push   0x0
  41a782:	mov    ecx,DWORD PTR ds:0x46dc60
  41a788:	mov    dl,0x1
  41a78a:	mov    eax,ds:0x412784
  41a78f:	call   0x40c9ac
  41a794:	call   0x4048fc
  41a799:	mov    edi,DWORD PTR [ebx+0x4]
  41a79c:	test   edi,edi
  41a79e:	je     0x41a7af
  41a7a0:	push   esi
  41a7a1:	mov    ecx,DWORD PTR [ebx+0x8]
  41a7a4:	mov    edx,ebx
  41a7a6:	mov    eax,edi
  41a7a8:	mov    edi,DWORD PTR [eax]
  41a7aa:	call   DWORD PTR [edi+0x20]
  41a7ad:	jmp    0x41a7bc
  41a7af:	push   esi
  41a7b0:	mov    ecx,DWORD PTR [ebx+0x8]
  41a7b3:	xor    edx,edx
  41a7b5:	mov    eax,ebx
  41a7b7:	mov    edi,DWORD PTR [eax]
  41a7b9:	call   DWORD PTR [edi+0x20]
  41a7bc:	xor    edx,edx
  41a7be:	mov    eax,ebx
  41a7c0:	call   0x41a880
  41a7c5:	mov    edx,esi
  41a7c7:	mov    eax,ebx
  41a7c9:	call   0x41a7e0
  41a7ce:	mov    dl,0x1
  41a7d0:	mov    eax,ebx
  41a7d2:	call   0x41a880
  41a7d7:	pop    ecx
  41a7d8:	pop    edx
  41a7d9:	pop    edi
  41a7da:	pop    esi
  41a7db:	pop    ebx
  41a7dc:	ret    
  41a7dd:	lea    eax,[eax+0x0]
  41a7e0:	push   ebx
  41a7e1:	push   esi
  41a7e2:	mov    esi,edx
  41a7e4:	mov    ebx,eax
  41a7e6:	lea    eax,[ebx+0x8]
  41a7e9:	mov    edx,esi
  41a7eb:	call   0x404fdc
  41a7f0:	pop    esi
  41a7f1:	pop    ebx
  41a7f2:	ret    
  41a7f3:	nop
  41a7f4:	push   ebx
  41a7f5:	push   esi
  41a7f6:	mov    esi,edx
  41a7f8:	mov    ebx,eax
  41a7fa:	cmp    DWORD PTR [ebx+0x10],0x0
  41a7fe:	jne    0x41a812
  41a800:	mov    edx,DWORD PTR ds:0x46ddb4
  41a806:	mov    ecx,esi
  41a808:	mov    eax,ds:0x4127e0
  41a80d:	call   0x413c1c
  41a812:	mov    edx,esi
  41a814:	mov    eax,DWORD PTR [ebx+0x10]
  41a817:	call   0x413c70
  41a81c:	pop    esi
  41a81d:	pop    ebx
  41a81e:	ret    
  41a81f:	nop
  41a820:	mov    edx,DWORD PTR [eax+0x10]
  41a823:	test   edx,edx
  41a825:	je     0x41a82b
  41a827:	mov    eax,DWORD PTR [edx+0x8]
  41a82a:	ret    
  41a82b:	xor    eax,eax
  41a82d:	ret    
  41a82e:	mov    eax,eax
  41a830:	push   ebx
  41a831:	push   esi
  41a832:	push   edi
  41a833:	push   ebp
  41a834:	push   ecx
  41a835:	mov    BYTE PTR [esp],cl
  41a838:	mov    ebx,edx
  41a83a:	mov    esi,eax
  41a83c:	test   bl,bl
  41a83e:	je     0x41a847
  41a840:	or     WORD PTR [esi+0x1c],0x10
  41a845:	jmp    0x41a84c
  41a847:	and    WORD PTR [esi+0x1c],0xffef
  41a84c:	cmp    BYTE PTR [esp],0x0
  41a850:	je     0x41a879
  41a852:	mov    eax,esi
  41a854:	call   0x41a820
  41a859:	mov    ebp,eax
  41a85b:	dec    ebp
  41a85c:	test   ebp,ebp
  41a85e:	jl     0x41a879
  41a860:	inc    ebp
  41a861:	xor    edi,edi
  41a863:	mov    edx,edi
  41a865:	mov    eax,esi
  41a867:	call   0x41a7f4
  41a86c:	mov    cl,0x1
  41a86e:	mov    edx,ebx
  41a870:	call   0x41a830
  41a875:	inc    edi
  41a876:	dec    ebp
  41a877:	jne    0x41a863
  41a879:	pop    edx
  41a87a:	pop    ebp
  41a87b:	pop    edi
  41a87c:	pop    esi
  41a87d:	pop    ebx
  41a87e:	ret    
  41a87f:	nop
  41a880:	push   ebx
  41a881:	push   esi
  41a882:	push   edi
  41a883:	add    esp,0xffffff00
  41a889:	mov    ebx,edx
  41a88b:	mov    edi,eax
  41a88d:	mov    esi,DWORD PTR [edi+0x4]
  41a890:	test   esi,esi
  41a892:	je     0x41a8bc
  41a894:	mov    eax,esp
  41a896:	mov    edx,DWORD PTR [edi+0x8]
  41a899:	mov    ecx,0xff
  41a89e:	call   0x405224
  41a8a3:	mov    edx,esp
  41a8a5:	mov    eax,esi
  41a8a7:	call   0x40435c
  41a8ac:	test   eax,eax
  41a8ae:	je     0x41a8bc
  41a8b0:	test   bl,bl
  41a8b2:	je     0x41a8b8
  41a8b4:	mov    DWORD PTR [eax],edi
  41a8b6:	jmp    0x41a8bc
  41a8b8:	xor    edx,edx
  41a8ba:	mov    DWORD PTR [eax],edx
  41a8bc:	add    esp,0x100
  41a8c2:	pop    edi
  41a8c3:	pop    esi
  41a8c4:	pop    ebx
  41a8c5:	ret    
  41a8c6:	mov    eax,eax
  41a8c8:	push   ebx
  41a8c9:	push   esi
  41a8ca:	push   edi
  41a8cb:	mov    edi,edx
  41a8cd:	mov    esi,eax
  41a8cf:	mov    edx,esi
  41a8d1:	mov    eax,edi
  41a8d3:	mov    ecx,DWORD PTR [eax]
  41a8d5:	call   DWORD PTR [ecx+0x38]
  41a8d8:	mov    ebx,eax
  41a8da:	test   bl,bl
  41a8dc:	je     0x41a8e7
  41a8de:	mov    edx,esi
  41a8e0:	mov    eax,edi
  41a8e2:	mov    ecx,DWORD PTR [eax]
  41a8e4:	call   DWORD PTR [ecx+0x40]
  41a8e7:	mov    eax,ebx
  41a8e9:	pop    edi
  41a8ea:	pop    esi
  41a8eb:	pop    ebx
  41a8ec:	ret    
  41a8ed:	lea    eax,[eax+0x0]
  41a8f0:	push   ebx
  41a8f1:	push   esi
  41a8f2:	push   edi
  41a8f3:	mov    edi,edx
  41a8f5:	mov    esi,eax
  41a8f7:	mov    edx,esi
  41a8f9:	mov    eax,edi
  41a8fb:	mov    ecx,DWORD PTR [eax]
  41a8fd:	call   DWORD PTR [ecx+0x38]
  41a900:	mov    ebx,eax
  41a902:	test   bl,bl
  41a904:	je     0x41a90f
  41a906:	mov    edx,esi
  41a908:	mov    eax,edi
  41a90a:	mov    ecx,DWORD PTR [eax]
  41a90c:	call   DWORD PTR [ecx+0x3c]
  41a90f:	mov    eax,ebx
  41a911:	pop    edi
  41a912:	pop    esi
  41a913:	pop    ebx
  41a914:	ret    
  41a915:	lea    eax,[eax+0x0]
  41a918:	push   ebx
  41a919:	cmp    DWORD PTR [eax+0x20],0x0
  41a91d:	je     0x41a929
  41a91f:	mov    eax,DWORD PTR [eax+0x20]
  41a922:	mov    ebx,DWORD PTR [eax]
  41a924:	call   DWORD PTR [ebx+0x1c]
  41a927:	pop    ebx
  41a928:	ret    
  41a929:	call   0x4042d0
  41a92e:	pop    ebx
  41a92f:	ret    
  41a930:	push   ebp
  41a931:	mov    ebp,esp
  41a933:	pop    ebp
  41a934:	ret    0x4
  41a937:	nop
  41a938:	push   ebp
  41a939:	mov    ebp,esp
  41a93b:	push   ebx
  41a93c:	push   esi
  41a93d:	push   edi
  41a93e:	mov    edi,DWORD PTR [ebp+0x10]
  41a941:	mov    esi,DWORD PTR [ebp+0xc]
  41a944:	mov    ebx,DWORD PTR [ebp+0x8]
  41a947:	cmp    DWORD PTR [ebx+0x20],0x0
  41a94b:	jne    0x41a967
  41a94d:	mov    ecx,edi
  41a94f:	mov    edx,esi
  41a951:	mov    eax,ebx
  41a953:	call   0x404154
  41a958:	test   al,al
  41a95a:	je     0x41a960
  41a95c:	xor    eax,eax
  41a95e:	jmp    0x41a971
  41a960:	mov    eax,0x80004002
  41a965:	jmp    0x41a971
  41a967:	push   edi
  41a968:	push   esi
  41a969:	mov    eax,DWORD PTR [ebx+0x20]
  41a96c:	push   eax
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	call   DWORD PTR [eax]
  41a971:	pop    edi
  41a972:	pop    esi
  41a973:	pop    ebx
  41a974:	pop    ebp
  41a975:	ret    0xc
  41a978:	push   ebp
  41a979:	mov    ebp,esp
  41a97b:	mov    eax,DWORD PTR [ebp+0x8]
  41a97e:	cmp    DWORD PTR [eax+0x20],0x0
  41a982:	jne    0x41a989
  41a984:	or     eax,0xffffffff
  41a987:	jmp    0x41a992
  41a989:	mov    eax,DWORD PTR [eax+0x20]
  41a98c:	push   eax
  41a98d:	mov    eax,DWORD PTR [eax]
  41a98f:	call   DWORD PTR [eax+0x4]
  41a992:	pop    ebp
  41a993:	ret    0x4
  41a996:	mov    eax,eax
  41a998:	push   ebp
  41a999:	mov    ebp,esp
  41a99b:	mov    eax,DWORD PTR [ebp+0x8]
  41a99e:	cmp    DWORD PTR [eax+0x20],0x0
  41a9a2:	jne    0x41a9a9
  41a9a4:	or     eax,0xffffffff
  41a9a7:	jmp    0x41a9b2
  41a9a9:	mov    eax,DWORD PTR [eax+0x20]
  41a9ac:	push   eax
  41a9ad:	mov    eax,DWORD PTR [eax]
  41a9af:	call   DWORD PTR [eax+0x8]
  41a9b2:	pop    ebp
  41a9b3:	ret    0x4
  41a9b6:	mov    eax,eax
  41a9b8:	ret    
  41a9b9:	lea    eax,[eax+0x0]
  41a9bc:	push   ebp
  41a9bd:	mov    ebp,esp
  41a9bf:	push   ebx
  41a9c0:	push   esi
  41a9c1:	push   edi
  41a9c2:	mov    eax,ds:0x4729b4
  41a9c7:	call   0x414038
  41a9cc:	mov    edi,eax
  41a9ce:	xor    eax,eax
  41a9d0:	push   ebp
  41a9d1:	push   0x41aa11
  41a9d6:	push   DWORD PTR fs:[eax]
  41a9d9:	mov    DWORD PTR fs:[eax],esp
  41a9dc:	mov    ebx,DWORD PTR [edi+0x8]
  41a9df:	dec    ebx
  41a9e0:	test   ebx,ebx
  41a9e2:	jl     0x41a9f9
  41a9e4:	inc    ebx
  41a9e5:	xor    esi,esi
  41a9e7:	mov    edx,esi
  41a9e9:	mov    eax,edi
  41a9eb:	call   0x413c70
  41a9f0:	call   0x4040a0
  41a9f5:	inc    esi
  41a9f6:	dec    ebx
  41a9f7:	jne    0x41a9e7
  41a9f9:	xor    eax,eax
  41a9fb:	pop    edx
  41a9fc:	pop    ecx
  41a9fd:	pop    ecx
  41a9fe:	mov    DWORD PTR fs:[eax],edx
  41aa01:	push   0x41aa18
  41aa06:	mov    eax,ds:0x4729b4
  41aa0b:	call   0x41404c
  41aa10:	ret    
  41aa11:	jmp    0x40481c
  41aa16:	jmp    0x41aa06
  41aa18:	mov    eax,ds:0x4729b4
  41aa1d:	call   0x4040a0
  41aa22:	pop    edi
  41aa23:	pop    esi
  41aa24:	pop    ebx
  41aa25:	pop    ebp
  41aa26:	ret    
  41aa27:	nop
  41aa28:	call   0x413a10
  41aa2d:	ret    
  41aa2e:	mov    eax,eax
  41aa30:	push   ebp
  41aa31:	mov    ebp,esp
  41aa33:	xor    eax,eax
  41aa35:	push   ebp
  41aa36:	push   0x41aad4
  41aa3b:	push   DWORD PTR fs:[eax]
  41aa3e:	mov    DWORD PTR fs:[eax],esp
  41aa41:	inc    DWORD PTR ds:0x4729b0
  41aa47:	jne    0x41aac6
  41aa49:	mov    eax,ds:0x4707f0
  41aa4e:	call   0x413a10
  41aa53:	mov    eax,ds:0x4729a8
  41aa58:	mov    edx,DWORD PTR [eax]
  41aa5a:	call   DWORD PTR [edx+0x14]
  41aa5d:	call   0x41a9bc
  41aa62:	xor    edx,edx
  41aa64:	xor    eax,eax
  41aa66:	call   0x416f48
  41aa6b:	mov    eax,0x4729c0
  41aa70:	call   0x40e32c
  41aa75:	call   0x407080
  41aa7a:	lea    eax,[eax+0x8]
  41aa80:	call   0x40e32c
  41aa85:	mov    eax,0x4729b8
  41aa8a:	call   0x40e32c
  41aa8f:	mov    eax,0x4729a8
  41aa94:	call   0x406a98
  41aa99:	mov    eax,0x41aa28
  41aa9e:	call   0x406930
  41aaa3:	mov    eax,0x461ab8
  41aaa8:	call   0x40e32c
  41aaad:	call   0x419998
  41aab2:	mov    eax,0x4729bc
  41aab7:	call   0x40e32c
  41aabc:	mov    eax,0x4729a8
  41aac1:	call   0x406a98
  41aac6:	xor    eax,eax
  41aac8:	pop    edx
  41aac9:	pop    ecx
  41aaca:	pop    ecx
  41aacb:	mov    DWORD PTR fs:[eax],edx
  41aace:	push   0x41aadb
  41aad3:	ret    
  41aad4:	jmp    0x40481c
  41aad9:	jmp    0x41aad3
  41aadb:	pop    ebp
  41aadc:	ret    
  41aadd:	lea    eax,[eax+0x0]
  41aae0:	sub    al,0xab
  41aae2:	inc    ecx
	...
  41aaff:	add    BYTE PTR [ebx+ebp*4],ch
  41ab02:	inc    ecx
  41ab03:	add    BYTE PTR [eax+eax*1],al
  41ab06:	add    BYTE PTR [eax],al
  41ab08:	nop
  41ab09:	adc    BYTE PTR [eax+0x0],al
  41ab0c:	rol    BYTE PTR [edx+0x40],1
  41ab0f:	add    ah,bl
  41ab11:	inc    edx
  41ab12:	inc    eax
  41ab13:	add    al,ah
  41ab15:	inc    edx
  41ab16:	inc    eax
  41ab17:	add    ah,ah
  41ab19:	inc    edx
  41ab1a:	inc    eax
  41ab1b:	add    al,bl
  41ab1d:	inc    edx
  41ab1e:	inc    eax
  41ab1f:	add    BYTE PTR [eax],bh
  41ab21:	inc    eax
  41ab22:	inc    eax
  41ab23:	add    BYTE PTR [eax+eax*2+0x40],dl
  41ab27:	add    BYTE PTR [eax+0xa004040],dl
  41ab2d:	push   esp
  41ab2e:	dec    ecx
  41ab2f:	fs push ebx
  41ab31:	jns    0x41aba6
  41ab33:	inc    edx
  41ab34:	popa   
  41ab35:	jae    0x41ab9c
  41ab37:	nop
  41ab38:	test   BYTE PTR [ebx+0x41],ch
	...
  41ab56:	add    BYTE PTR [eax],al
  41ab58:	test   BYTE PTR [ebx+0x40041],ch
  41ab5e:	add    BYTE PTR [eax],al
  41ab60:	loopne 0x41ab0c
  41ab62:	inc    ecx
  41ab63:	add    al,dl
  41ab65:	inc    edx
  41ab66:	inc    eax
  41ab67:	add    ah,bl
  41ab69:	inc    edx
  41ab6a:	inc    eax
  41ab6b:	add    al,ah
  41ab6d:	inc    edx
  41ab6e:	inc    eax
  41ab6f:	add    ah,ah
  41ab71:	inc    edx
  41ab72:	inc    eax
  41ab73:	add    al,bl
  41ab75:	inc    edx
  41ab76:	inc    eax
  41ab77:	add    BYTE PTR [eax],bh
  41ab79:	inc    eax
  41ab7a:	inc    eax
  41ab7b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41ab7f:	add    BYTE PTR [eax+0x9004040],dl
  41ab85:	push   esp
  41ab86:	dec    ecx
  41ab87:	fs push ebx
  41ab89:	jns    0x41abfe
  41ab8b:	push   esi
  41ab8c:	inc    ebx
  41ab8d:	dec    esp
  41ab8e:	mov    eax,eax
  41ab90:	push   ebx
  41ab91:	mov    ebx,eax
  41ab93:	mov    BYTE PTR [ebx],0x0
  41ab96:	mov    BYTE PTR [ebx+0x1],0x0
  41ab9a:	lea    eax,[ebx+0x8]
  41ab9d:	mov    edx,0x41ae34
  41aba2:	call   0x404fdc
  41aba7:	mov    BYTE PTR [ebx+0x4],0x2
  41abab:	mov    BYTE PTR [ebx+0x2],0x2c
  41abaf:	mov    BYTE PTR [ebx+0x3],0x2e
  41abb3:	mov    BYTE PTR [ebx+0x5],0x2f
  41abb7:	lea    eax,[ebx+0xc]
  41abba:	mov    edx,0x41ae40
  41abbf:	call   0x404fdc
  41abc4:	lea    eax,[ebx+0x10]
  41abc7:	mov    edx,0x41ae54
  41abcc:	call   0x404fdc
  41abd1:	mov    BYTE PTR [ebx+0x6],0x3a
  41abd5:	lea    eax,[ebx+0x14]
  41abd8:	mov    edx,0x41ae70
  41abdd:	call   0x404fdc
  41abe2:	lea    eax,[ebx+0x18]
  41abe5:	mov    edx,0x41ae7c
  41abea:	call   0x404fdc
  41abef:	lea    eax,[ebx+0x20]
  41abf2:	mov    edx,0x41ae88
  41abf7:	call   0x404fdc
  41abfc:	lea    eax,[ebx+0x1c]
  41abff:	mov    edx,0x41aea0
  41ac04:	call   0x404fdc
  41ac09:	lea    eax,[ebx+0x24]
  41ac0c:	mov    edx,0x41aeb4
  41ac11:	call   0x404fdc
  41ac16:	lea    eax,[ebx+0x28]
  41ac19:	mov    edx,0x41aec0
  41ac1e:	call   0x404fdc
  41ac23:	lea    eax,[ebx+0x2c]
  41ac26:	mov    edx,0x41aecc
  41ac2b:	call   0x404fdc
  41ac30:	lea    eax,[ebx+0x30]
  41ac33:	mov    edx,0x41aed8
  41ac38:	call   0x404fdc
  41ac3d:	lea    eax,[ebx+0x34]
  41ac40:	mov    edx,0x41aee4
  41ac45:	call   0x404fdc
  41ac4a:	lea    eax,[ebx+0x38]
  41ac4d:	mov    edx,0x41aef0
  41ac52:	call   0x404fdc
  41ac57:	lea    eax,[ebx+0x3c]
  41ac5a:	mov    edx,0x41aefc
  41ac5f:	call   0x404fdc
  41ac64:	lea    eax,[ebx+0x40]
  41ac67:	mov    edx,0x41af08
  41ac6c:	call   0x404fdc
  41ac71:	lea    eax,[ebx+0x44]
  41ac74:	mov    edx,0x41af14
  41ac79:	call   0x404fdc
  41ac7e:	lea    eax,[ebx+0x48]
  41ac81:	mov    edx,0x41af20
  41ac86:	call   0x404fdc
  41ac8b:	lea    eax,[ebx+0x4c]
  41ac8e:	mov    edx,0x41af2c
  41ac93:	call   0x404fdc
  41ac98:	lea    eax,[ebx+0x50]
  41ac9b:	mov    edx,0x41af38
  41aca0:	call   0x404fdc
  41aca5:	lea    eax,[ebx+0x54]
  41aca8:	mov    edx,0x41af44
  41acad:	call   0x404fdc
  41acb2:	lea    eax,[ebx+0x58]
  41acb5:	mov    edx,0x41af54
  41acba:	call   0x404fdc
  41acbf:	lea    eax,[ebx+0x5c]
  41acc2:	mov    edx,0x41af68
  41acc7:	call   0x404fdc
  41accc:	lea    eax,[ebx+0x60]
  41accf:	mov    edx,0x41af78
  41acd4:	call   0x404fdc
  41acd9:	lea    eax,[ebx+0x64]
  41acdc:	mov    edx,0x41aee4
  41ace1:	call   0x404fdc
  41ace6:	lea    eax,[ebx+0x68]
  41ace9:	mov    edx,0x41af88
  41acee:	call   0x404fdc
  41acf3:	lea    eax,[ebx+0x6c]
  41acf6:	mov    edx,0x41af98
  41acfb:	call   0x404fdc
  41ad00:	lea    eax,[ebx+0x70]
  41ad03:	mov    edx,0x41afa8
  41ad08:	call   0x404fdc
  41ad0d:	lea    eax,[ebx+0x74]
  41ad10:	mov    edx,0x41afb8
  41ad15:	call   0x404fdc
  41ad1a:	lea    eax,[ebx+0x78]
  41ad1d:	mov    edx,0x41afcc
  41ad22:	call   0x404fdc
  41ad27:	lea    eax,[ebx+0x7c]
  41ad2a:	mov    edx,0x41afdc
  41ad2f:	call   0x404fdc
  41ad34:	lea    eax,[ebx+0x80]
  41ad3a:	mov    edx,0x41aff0
  41ad3f:	call   0x404fdc
  41ad44:	lea    eax,[ebx+0x84]
  41ad4a:	mov    edx,0x41b004
  41ad4f:	call   0x404fdc
  41ad54:	lea    eax,[ebx+0x88]
  41ad5a:	mov    edx,0x41b010
  41ad5f:	call   0x404fdc
  41ad64:	lea    eax,[ebx+0x8c]
  41ad6a:	mov    edx,0x41b01c
  41ad6f:	call   0x404fdc
  41ad74:	lea    eax,[ebx+0x90]
  41ad7a:	mov    edx,0x41b028
  41ad7f:	call   0x404fdc
  41ad84:	lea    eax,[ebx+0x94]
  41ad8a:	mov    edx,0x41b034
  41ad8f:	call   0x404fdc
  41ad94:	lea    eax,[ebx+0x98]
  41ad9a:	mov    edx,0x41b040
  41ad9f:	call   0x404fdc
  41ada4:	lea    eax,[ebx+0x9c]
  41adaa:	mov    edx,0x41b04c
  41adaf:	call   0x404fdc
  41adb4:	lea    eax,[ebx+0xa0]
  41adba:	mov    edx,0x41b058
  41adbf:	call   0x404fdc
  41adc4:	lea    eax,[ebx+0xa4]
  41adca:	mov    edx,0x41b068
  41adcf:	call   0x404fdc
  41add4:	lea    eax,[ebx+0xa8]
  41adda:	mov    edx,0x41b078
  41addf:	call   0x404fdc
  41ade4:	lea    eax,[ebx+0xac]
  41adea:	mov    edx,0x41b088
  41adef:	call   0x404fdc
  41adf4:	lea    eax,[ebx+0xb0]
  41adfa:	mov    edx,0x41b09c
  41adff:	call   0x404fdc
  41ae04:	lea    eax,[ebx+0xb4]
  41ae0a:	mov    edx,0x41b0b0
  41ae0f:	call   0x404fdc
  41ae14:	lea    eax,[ebx+0xb8]
  41ae1a:	mov    edx,0x41b0c0
  41ae1f:	call   0x404fdc
  41ae24:	mov    BYTE PTR [ebx+0x7],0x2c
  41ae28:	pop    ebx
  41ae29:	ret    
  41ae2a:	add    BYTE PTR [eax],al
  41ae2c:	(bad)  
  41ae2d:	(bad)  
  41ae2e:	(bad)  
  41ae2f:	inc    DWORD PTR [ecx]
  41ae31:	add    BYTE PTR [eax],al
  41ae33:	add    BYTE PTR [eax+eax*1],ah
  41ae36:	add    BYTE PTR [eax],al
  41ae38:	(bad)  
  41ae39:	(bad)  
  41ae3a:	(bad)  
  41ae3b:	dec    DWORD PTR [eax]
  41ae3d:	add    BYTE PTR [eax],al
  41ae3f:	add    BYTE PTR [ebp+0x2f],cl
  41ae42:	fs das 
  41ae44:	jns    0x41aebf
  41ae46:	jns    0x41aec1
  41ae48:	add    BYTE PTR [eax],al
  41ae4a:	add    BYTE PTR [eax],al
  41ae4c:	(bad)  
  41ae4d:	(bad)  
  41ae4e:	(bad)  
  41ae4f:	call   DWORD PTR [ebx]
  41ae51:	add    BYTE PTR [eax],al
  41ae53:	add    BYTE PTR [esp+eiz*2+0x64],ah
  41ae57:	fs sub al,0x20
  41ae5a:	dec    ebp
  41ae5b:	dec    ebp
  41ae5c:	dec    ebp
  41ae5d:	dec    ebp
  41ae5e:	and    BYTE PTR [esp+eiz*2+0x2c],ah
  41ae62:	and    BYTE PTR [ecx+0x79],bh
  41ae65:	jns    0x41aee0
  41ae67:	add    bh,bh
  41ae69:	(bad)  
  41ae6a:	(bad)  
  41ae6b:	inc    DWORD PTR [edx]
  41ae6d:	add    BYTE PTR [eax],al
  41ae6f:	add    BYTE PTR [ecx+0x4d],al
  41ae72:	add    BYTE PTR [eax],al
  41ae74:	(bad)  
  41ae75:	(bad)  
  41ae76:	(bad)  
  41ae77:	inc    DWORD PTR [edx]
  41ae79:	add    BYTE PTR [eax],al
  41ae7b:	add    BYTE PTR [eax+0x4d],dl
  41ae7e:	add    BYTE PTR [eax],al
  41ae80:	(bad)  
  41ae81:	(bad)  
  41ae82:	(bad)  
  41ae83:	dec    DWORD PTR [eax+eax*1]
  41ae86:	add    BYTE PTR [eax],al
  41ae88:	push   0x3a6d6d3a
  41ae8d:	jae    0x41af02
  41ae8f:	and    BYTE PTR [ecx+0x4d],al
  41ae92:	push   eax
  41ae93:	dec    ebp
  41ae94:	add    BYTE PTR [eax],al
  41ae96:	add    BYTE PTR [eax],al
  41ae98:	(bad)  
  41ae99:	(bad)  
  41ae9a:	(bad)  
  41ae9b:	dec    DWORD PTR [ecx]
  41ae9d:	add    BYTE PTR [eax],al
  41ae9f:	add    BYTE PTR [eax+0x3a],ch
  41aea2:	ins    DWORD PTR es:[edi],dx
  41aea3:	ins    DWORD PTR es:[edi],dx
  41aea4:	and    BYTE PTR [ecx+0x4d],al
  41aea7:	push   eax
  41aea8:	dec    ebp
  41aea9:	add    BYTE PTR [eax],al
  41aeab:	add    bh,bh
  41aead:	(bad)  
  41aeae:	(bad)  
  41aeaf:	inc    DWORD PTR [ebx]
  41aeb1:	add    BYTE PTR [eax],al
  41aeb3:	add    BYTE PTR [edx+0x61],cl
  41aeb6:	outs   dx,BYTE PTR ds:[esi]
  41aeb7:	add    bh,bh
  41aeb9:	(bad)  
  41aeba:	(bad)  
  41aebb:	inc    DWORD PTR [ebx]
  41aebd:	add    BYTE PTR [eax],al
  41aebf:	add    BYTE PTR [esi+0x65],al
  41aec2:	bound  eax,QWORD PTR [eax]
  41aec4:	(bad)  
  41aec5:	(bad)  
  41aec6:	(bad)  
  41aec7:	inc    DWORD PTR [ebx]
  41aec9:	add    BYTE PTR [eax],al
  41aecb:	add    BYTE PTR [ebp+0x61],cl
  41aece:	jb     0x41aed0
  41aed0:	(bad)  
  41aed1:	(bad)  
  41aed2:	(bad)  
  41aed3:	inc    DWORD PTR [ebx]
  41aed5:	add    BYTE PTR [eax],al
  41aed7:	add    BYTE PTR [ecx+0x70],al
  41aeda:	jb     0x41aedc
  41aedc:	(bad)  
  41aedd:	(bad)  
  41aede:	(bad)  
  41aedf:	inc    DWORD PTR [ebx]
  41aee1:	add    BYTE PTR [eax],al
  41aee3:	add    BYTE PTR [ebp+0x61],cl
  41aee6:	jns    0x41aee8
  41aee8:	(bad)  
  41aee9:	(bad)  
  41aeea:	(bad)  
  41aeeb:	inc    DWORD PTR [ebx]
  41aeed:	add    BYTE PTR [eax],al
  41aeef:	add    BYTE PTR [edx+0x75],cl
  41aef2:	outs   dx,BYTE PTR ds:[esi]
  41aef3:	add    bh,bh
  41aef5:	(bad)  
  41aef6:	(bad)  
  41aef7:	inc    DWORD PTR [ebx]
  41aef9:	add    BYTE PTR [eax],al
  41aefb:	add    BYTE PTR [edx+0x75],cl
  41aefe:	ins    BYTE PTR es:[edi],dx
  41aeff:	add    bh,bh
  41af01:	(bad)  
  41af02:	(bad)  
  41af03:	inc    DWORD PTR [ebx]
  41af05:	add    BYTE PTR [eax],al
  41af07:	add    BYTE PTR [ecx+0x75],al
  41af0a:	addr16 add bh,bh
  41af0d:	(bad)  
  41af0e:	(bad)  
  41af0f:	inc    DWORD PTR [ebx]
  41af11:	add    BYTE PTR [eax],al
  41af13:	add    BYTE PTR [ebx+0x65],dl
  41af16:	jo     0x41af18
  41af18:	(bad)  
  41af19:	(bad)  
  41af1a:	(bad)  
  41af1b:	inc    DWORD PTR [ebx]
  41af1d:	add    BYTE PTR [eax],al
  41af1f:	add    BYTE PTR [edi+0x63],cl
  41af22:	je     0x41af24
  41af24:	(bad)  
  41af25:	(bad)  
  41af26:	(bad)  
  41af27:	inc    DWORD PTR [ebx]
  41af29:	add    BYTE PTR [eax],al
  41af2b:	add    BYTE PTR [esi+0x6f],cl
  41af2e:	jbe    0x41af30
  41af30:	(bad)  
  41af31:	(bad)  
  41af32:	(bad)  
  41af33:	inc    DWORD PTR [ebx]
  41af35:	add    BYTE PTR [eax],al
  41af37:	add    BYTE PTR [ebp+eiz*2+0x63],al
  41af3b:	add    bh,bh
  41af3d:	(bad)  
  41af3e:	(bad)  
  41af3f:	inc    DWORD PTR [edi]
  41af41:	add    BYTE PTR [eax],al
  41af43:	add    BYTE PTR [edx+0x61],cl
  41af46:	outs   dx,BYTE PTR ds:[esi]
  41af47:	jne    0x41afaa
  41af49:	jb     0x41afc4
  41af4b:	add    bh,bh
  41af4d:	(bad)  
  41af4e:	(bad)  
  41af4f:	dec    DWORD PTR [eax]
  41af51:	add    BYTE PTR [eax],al
  41af53:	add    BYTE PTR [esi+0x65],al
  41af56:	bound  esi,QWORD PTR [edx+0x75]
  41af59:	popa   
  41af5a:	jb     0x41afd5
  41af5c:	add    BYTE PTR [eax],al
  41af5e:	add    BYTE PTR [eax],al
  41af60:	(bad)  
  41af61:	(bad)  
  41af62:	(bad)  
  41af63:	inc    DWORD PTR ds:0x4d000000
  41af69:	popa   
  41af6a:	jb     0x41afcf
  41af6c:	push   0xff000000
  41af71:	(bad)  
  41af72:	(bad)  
  41af73:	inc    DWORD PTR ds:0x41000000
  41af79:	jo     0x41afed
  41af7b:	imul   ebp,DWORD PTR [eax+eax*1+0x0],0xffffff00
  41af83:	inc    DWORD PTR [eax+eax*1]
  41af86:	add    BYTE PTR [eax],al
  41af88:	dec    edx
  41af89:	jne    0x41aff9
  41af8b:	add    BYTE PTR gs:[eax],al
  41af8e:	add    BYTE PTR [eax],al
  41af90:	(bad)  
  41af91:	(bad)  
  41af92:	(bad)  
  41af93:	inc    DWORD PTR [eax+eax*1]
  41af96:	add    BYTE PTR [eax],al
  41af98:	dec    edx
  41af99:	jne    0x41b007
  41af9b:	jns    0x41af9d
  41af9d:	add    BYTE PTR [eax],al
  41af9f:	add    bh,bh
  41afa1:	(bad)  
  41afa2:	(bad)  
  41afa3:	inc    DWORD PTR [esi]
  41afa5:	add    BYTE PTR [eax],al
  41afa7:	add    BYTE PTR [ecx+0x75],al
  41afaa:	addr16 jne 0x41b020
  41afad:	je     0x41afaf
  41afaf:	add    bh,bh
  41afb1:	(bad)  
  41afb2:	(bad)  
  41afb3:	dec    DWORD PTR [ecx]
  41afb5:	add    BYTE PTR [eax],al
  41afb7:	add    BYTE PTR [ebx+0x65],dl
  41afba:	jo     0x41b030
  41afbc:	gs ins DWORD PTR es:[edi],dx
  41afbe:	bound  esp,QWORD PTR [ebp+0x72]
  41afc1:	add    BYTE PTR [eax],al
  41afc3:	add    bh,bh
  41afc5:	(bad)  
  41afc6:	(bad)  
  41afc7:	inc    DWORD PTR [edi]
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [edi+0x63],cl
  41afce:	je     0x41b03f
  41afd0:	bound  esp,QWORD PTR [ebp+0x72]
  41afd3:	add    bh,bh
  41afd5:	(bad)  
  41afd6:	(bad)  
  41afd7:	dec    DWORD PTR [eax]
  41afd9:	add    BYTE PTR [eax],al
  41afdb:	add    BYTE PTR [esi+0x6f],cl
  41afde:	jbe    0x41b045
  41afe0:	ins    DWORD PTR es:[edi],dx
  41afe1:	bound  esp,QWORD PTR [ebp+0x72]
  41afe4:	add    BYTE PTR [eax],al
  41afe6:	add    BYTE PTR [eax],al
  41afe8:	(bad)  
  41afe9:	(bad)  
  41afea:	(bad)  
  41afeb:	dec    DWORD PTR [eax]
  41afed:	add    BYTE PTR [eax],al
  41afef:	add    BYTE PTR [ebp+eiz*2+0x63],al
  41aff3:	gs ins DWORD PTR es:[edi],dx
  41aff5:	bound  esp,QWORD PTR [ebp+0x72]
  41aff8:	add    BYTE PTR [eax],al
  41affa:	add    BYTE PTR [eax],al
  41affc:	(bad)  
  41affd:	(bad)  
  41affe:	(bad)  
  41afff:	inc    DWORD PTR [ebx]
  41b001:	add    BYTE PTR [eax],al
  41b003:	add    BYTE PTR [ebx+0x75],dl
  41b006:	outs   dx,BYTE PTR ds:[esi]
  41b007:	add    bh,bh
  41b009:	(bad)  
  41b00a:	(bad)  
  41b00b:	inc    DWORD PTR [ebx]
  41b00d:	add    BYTE PTR [eax],al
  41b00f:	add    BYTE PTR [ebp+0x6f],cl
  41b012:	outs   dx,BYTE PTR ds:[esi]
  41b013:	add    bh,bh
  41b015:	(bad)  
  41b016:	(bad)  
  41b017:	inc    DWORD PTR [ebx]
  41b019:	add    BYTE PTR [eax],al
  41b01b:	add    BYTE PTR [ebp+esi*2+0x65],dl
  41b01f:	add    bh,bh
  41b021:	(bad)  
  41b022:	(bad)  
  41b023:	inc    DWORD PTR [ebx]
  41b025:	add    BYTE PTR [eax],al
  41b027:	add    BYTE PTR [edi+0x65],dl
  41b02a:	fs add bh,bh
  41b02d:	(bad)  
  41b02e:	(bad)  
  41b02f:	inc    DWORD PTR [ebx]
  41b031:	add    BYTE PTR [eax],al
  41b033:	add    BYTE PTR [eax+ebp*2+0x75],dl
  41b037:	add    bh,bh
  41b039:	(bad)  
  41b03a:	(bad)  
  41b03b:	inc    DWORD PTR [ebx]
  41b03d:	add    BYTE PTR [eax],al
  41b03f:	add    BYTE PTR [esi+0x72],al
  41b042:	imul   eax,DWORD PTR [eax],0xffffffff
  41b048:	add    eax,DWORD PTR [eax]
  41b04a:	add    BYTE PTR [eax],al
  41b04c:	push   ebx
  41b04d:	popa   
  41b04e:	je     0x41b050
  41b050:	(bad)  
  41b051:	(bad)  
  41b052:	(bad)  
  41b053:	inc    DWORD PTR [esi]
  41b055:	add    BYTE PTR [eax],al
  41b057:	add    BYTE PTR [ebx+0x75],dl
  41b05a:	outs   dx,BYTE PTR ds:[esi]
  41b05b:	fs popa 
  41b05d:	jns    0x41b05f
  41b05f:	add    bh,bh
  41b061:	(bad)  
  41b062:	(bad)  
  41b063:	inc    DWORD PTR [esi]
  41b065:	add    BYTE PTR [eax],al
  41b067:	add    BYTE PTR [ebp+0x6f],cl
  41b06a:	outs   dx,BYTE PTR ds:[esi]
  41b06b:	fs popa 
  41b06d:	jns    0x41b06f
  41b06f:	add    bh,bh
  41b071:	(bad)  
  41b072:	(bad)  
  41b073:	inc    DWORD PTR [edi]
  41b075:	add    BYTE PTR [eax],al
  41b077:	add    BYTE PTR [ebp+esi*2+0x65],dl
  41b07b:	jae    0x41b0e1
  41b07d:	popa   
  41b07e:	jns    0x41b080
  41b080:	(bad)  
  41b081:	(bad)  
  41b082:	(bad)  
  41b083:	dec    DWORD PTR [ecx]
  41b085:	add    BYTE PTR [eax],al
  41b087:	add    BYTE PTR [edi+0x65],dl
  41b08a:	outs   dx,BYTE PTR fs:[esi]
  41b08c:	gs jae 0x41b0f3
  41b08f:	popa   
  41b090:	jns    0x41b092
  41b092:	add    BYTE PTR [eax],al
  41b094:	(bad)  
  41b095:	(bad)  
  41b096:	(bad)  
  41b097:	dec    DWORD PTR [eax]
  41b099:	add    BYTE PTR [eax],al
  41b09b:	add    BYTE PTR [eax+ebp*2+0x75],dl
  41b09f:	jb     0x41b114
  41b0a1:	fs popa 
  41b0a3:	jns    0x41b0a5
  41b0a5:	add    BYTE PTR [eax],al
  41b0a7:	add    bh,bh
  41b0a9:	(bad)  
  41b0aa:	(bad)  
  41b0ab:	inc    DWORD PTR [esi]
  41b0ad:	add    BYTE PTR [eax],al
  41b0af:	add    BYTE PTR [esi+0x72],al
  41b0b2:	imul   esp,DWORD PTR [ecx+eiz*2+0x79],0xffff0000
  41b0ba:	(bad)  
  41b0bb:	dec    DWORD PTR [eax]
  41b0bd:	add    BYTE PTR [eax],al
  41b0bf:	add    BYTE PTR [ebx+0x61],dl
  41b0c2:	je     0x41b139
  41b0c4:	jb     0x41b12a
  41b0c6:	popa   
  41b0c7:	jns    0x41b0c9
  41b0c9:	add    BYTE PTR [eax],al
  41b0cb:	add    BYTE PTR [ebx-0x2206173e],cl
  41b0d1:	(bad)  
  41b0d2:	inc    ebx
  41b0d4:	push   ebp
  41b0d5:	mov    ebp,esp
  41b0d7:	push   ecx
  41b0d8:	mov    ecx,0x17
  41b0dd:	push   0x0
  41b0df:	push   0x0
  41b0e1:	dec    ecx
  41b0e2:	jne    0x41b0dd
  41b0e4:	push   ecx
  41b0e5:	xchg   DWORD PTR [ebp-0x4],ecx
  41b0e8:	push   ebx
  41b0e9:	push   esi
  41b0ea:	mov    esi,ecx
  41b0ec:	mov    ebx,edx
  41b0ee:	xor    eax,eax
  41b0f0:	push   ebp
  41b0f1:	push   0x41b13d
  41b0f6:	push   DWORD PTR fs:[eax]
  41b0f9:	mov    DWORD PTR fs:[eax],esp
  41b0fc:	lea    eax,[ebp-0xc0]
  41b102:	call   0x41ab90
  41b107:	lea    eax,[ebp-0xc0]
  41b10d:	push   eax
  41b10e:	mov    eax,DWORD PTR [ebp+0x8]
  41b111:	push   eax
  41b112:	mov    edx,esi
  41b114:	mov    ecx,DWORD PTR [ebp+0xc]
  41b117:	mov    eax,ebx
  41b119:	call   0x409b08
  41b11e:	xor    eax,eax
  41b120:	pop    edx
  41b121:	pop    ecx
  41b122:	pop    ecx
  41b123:	mov    DWORD PTR fs:[eax],edx
  41b126:	push   0x41b144
  41b12b:	lea    eax,[ebp-0xc0]
  41b131:	mov    edx,DWORD PTR ds:0x40814c
  41b137:	call   0x405b04
  41b13c:	ret    
  41b13d:	jmp    0x40481c
  41b142:	jmp    0x41b12b
  41b144:	pop    esi
  41b145:	pop    ebx
  41b146:	mov    esp,ebp
  41b148:	pop    ebp
  41b149:	ret    0x8
  41b14c:	mov    eax,edx
  41b14e:	call   0x40e32c
  41b153:	ret    
  41b154:	push   ebx
  41b155:	push   esi
  41b156:	mov    esi,ecx
  41b158:	mov    ebx,edx
  41b15a:	mov    edx,esi
  41b15c:	mov    eax,ebx
  41b15e:	call   0x40d494
  41b163:	pop    esi
  41b164:	pop    ebx
  41b165:	ret    
  41b166:	mov    eax,eax
  41b168:	push   ebp
  41b169:	mov    ebp,esp
  41b16b:	push   ebx
  41b16c:	push   esi
  41b16d:	mov    esi,ecx
  41b16f:	mov    ebx,edx
  41b171:	mov    ecx,DWORD PTR [ebp+0x8]
  41b174:	mov    edx,esi
  41b176:	mov    eax,ebx
  41b178:	call   0x408b00
  41b17d:	pop    esi
  41b17e:	pop    ebx
  41b17f:	pop    ebp
  41b180:	ret    0x4
  41b183:	nop
  41b184:	push   ebp
  41b185:	mov    ebp,esp
  41b187:	push   ebx
  41b188:	mov    ebx,edx
  41b18a:	push   DWORD PTR [ebp+0xc]
  41b18d:	push   DWORD PTR [ebp+0x8]
  41b190:	mov    eax,ebx
  41b192:	call   0x408ad8
  41b197:	pop    ebx
  41b198:	pop    ebp
  41b199:	ret    0x8
  41b19c:	push   ebx
  41b19d:	push   esi
  41b19e:	mov    esi,ecx
  41b1a0:	mov    ebx,edx
  41b1a2:	mov    edx,esi
  41b1a4:	mov    eax,ebx
  41b1a6:	call   0x4089ec
  41b1ab:	pop    esi
  41b1ac:	pop    ebx
  41b1ad:	ret    
  41b1ae:	mov    eax,eax
  41b1b0:	mov    eax,edx
  41b1b2:	mov    edx,ecx
  41b1b4:	call   0x409004
  41b1b9:	ret    
  41b1ba:	mov    eax,eax
  41b1bc:	push   esi
  41b1bd:	push   edi
  41b1be:	mov    eax,ds:0x46de9c
  41b1c3:	mov    esi,eax
  41b1c5:	mov    edi,edx
  41b1c7:	mov    ecx,0x8
  41b1cc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ce:	pop    edi
  41b1cf:	pop    esi
  41b1d0:	ret    
  41b1d1:	lea    eax,[eax+0x0]
  41b1d4:	push   ebp
  41b1d5:	mov    ebp,esp
  41b1d7:	push   ebx
  41b1d8:	push   esi
  41b1d9:	mov    esi,ecx
  41b1db:	mov    ebx,edx
  41b1dd:	movzx  eax,BYTE PTR ds:0x41b1fc
  41b1e4:	push   eax
  41b1e5:	mov    eax,DWORD PTR [ebp+0x8]
  41b1e8:	push   eax
  41b1e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41b1ec:	mov    edx,esi
  41b1ee:	mov    eax,ebx
  41b1f0:	call   0x40dac4
  41b1f5:	pop    esi
  41b1f6:	pop    ebx
  41b1f7:	pop    ebp
  41b1f8:	ret    0x8
  41b1fb:	add    BYTE PTR [eax],al
  41b1fd:	add    BYTE PTR [eax],al
  41b1ff:	add    BYTE PTR [ebp-0x75],dl
  41b202:	in     al,dx
  41b203:	push   0x0
  41b205:	push   ebx
  41b206:	push   esi
  41b207:	mov    esi,edx
  41b209:	mov    ebx,eax
  41b20b:	xor    eax,eax
  41b20d:	push   ebp
  41b20e:	push   0x41b245
  41b213:	push   DWORD PTR fs:[eax]
  41b216:	mov    DWORD PTR fs:[eax],esp
  41b219:	lea    ecx,[ebp-0x4]
  41b21c:	mov    edx,esi
  41b21e:	mov    eax,ebx
  41b220:	call   0x41b2b0
  41b225:	mov    eax,DWORD PTR [ebp-0x4]
  41b228:	call   0x408b28
  41b22d:	mov    ebx,eax
  41b22f:	xor    eax,eax
  41b231:	pop    edx
  41b232:	pop    ecx
  41b233:	pop    ecx
  41b234:	mov    DWORD PTR fs:[eax],edx
  41b237:	push   0x41b24c
  41b23c:	lea    eax,[ebp-0x4]
  41b23f:	call   0x404f88
  41b244:	ret    
  41b245:	jmp    0x40481c
  41b24a:	jmp    0x41b23c
  41b24c:	mov    eax,ebx
  41b24e:	pop    esi
  41b24f:	pop    ebx
  41b250:	pop    ecx
  41b251:	pop    ebp
  41b252:	ret    
  41b253:	nop
  41b254:	push   ebp
  41b255:	mov    ebp,esp
  41b257:	push   0x0
  41b259:	push   ebx
  41b25a:	push   esi
  41b25b:	push   edi
  41b25c:	mov    edi,ecx
  41b25e:	mov    esi,edx
  41b260:	mov    ebx,eax
  41b262:	xor    eax,eax
  41b264:	push   ebp
  41b265:	push   0x41b29e
  41b26a:	push   DWORD PTR fs:[eax]
  41b26d:	mov    DWORD PTR fs:[eax],esp
  41b270:	lea    ecx,[ebp-0x4]
  41b273:	mov    edx,esi
  41b275:	mov    eax,ebx
  41b277:	call   0x41b2b0
  41b27c:	mov    eax,DWORD PTR [ebp-0x4]
  41b27f:	mov    edx,edi
  41b281:	call   0x408b64
  41b286:	mov    ebx,eax
  41b288:	xor    eax,eax
  41b28a:	pop    edx
  41b28b:	pop    ecx
  41b28c:	pop    ecx
  41b28d:	mov    DWORD PTR fs:[eax],edx
  41b290:	push   0x41b2a5
  41b295:	lea    eax,[ebp-0x4]
  41b298:	call   0x404f88
  41b29d:	ret    
  41b29e:	jmp    0x40481c
  41b2a3:	jmp    0x41b295
  41b2a5:	mov    eax,ebx
  41b2a7:	pop    edi
  41b2a8:	pop    esi
  41b2a9:	pop    ebx
  41b2aa:	pop    ecx
  41b2ab:	pop    ebp
  41b2ac:	ret    
  41b2ad:	lea    eax,[eax+0x0]
  41b2b0:	push   ebx
  41b2b1:	push   esi
  41b2b2:	mov    esi,ecx
  41b2b4:	mov    ebx,edx
  41b2b6:	mov    edx,esi
  41b2b8:	mov    eax,ebx
  41b2ba:	call   0x408708
  41b2bf:	pop    esi
  41b2c0:	pop    ebx
  41b2c1:	ret    
  41b2c2:	mov    eax,eax
  41b2c4:	push   ebx
  41b2c5:	push   esi
  41b2c6:	mov    esi,ecx
  41b2c8:	mov    ebx,edx
  41b2ca:	mov    edx,esi
  41b2cc:	mov    eax,ebx
  41b2ce:	call   0x4083c0
  41b2d3:	pop    esi
  41b2d4:	pop    ebx
  41b2d5:	ret    
  41b2d6:	mov    eax,eax
  41b2d8:	add    esp,0xfffffff8
  41b2db:	call   0x40ab1c
  41b2e0:	fstp   QWORD PTR [esp]
  41b2e3:	fld    QWORD PTR [esp]
  41b2e7:	pop    ecx
  41b2e8:	pop    edx
  41b2e9:	ret    
  41b2ea:	mov    eax,eax
  41b2ec:	push   ebp
  41b2ed:	mov    ebp,esp
  41b2ef:	push   0x0
  41b2f1:	push   ebx
  41b2f2:	mov    ebx,ecx
  41b2f4:	xor    eax,eax
  41b2f6:	push   ebp
  41b2f7:	push   0x41b330
  41b2fc:	push   DWORD PTR fs:[eax]
  41b2ff:	mov    DWORD PTR fs:[eax],esp
  41b302:	push   DWORD PTR [ebp+0xc]
  41b305:	push   DWORD PTR [ebp+0x8]
  41b308:	lea    eax,[ebp-0x4]
  41b30b:	call   0x40b71c
  41b310:	mov    eax,ebx
  41b312:	mov    edx,DWORD PTR [ebp-0x4]
  41b315:	call   0x404fdc
  41b31a:	xor    eax,eax
  41b31c:	pop    edx
  41b31d:	pop    ecx
  41b31e:	pop    ecx
  41b31f:	mov    DWORD PTR fs:[eax],edx
  41b322:	push   0x41b337
  41b327:	lea    eax,[ebp-0x4]
  41b32a:	call   0x404f88
  41b32f:	ret    
  41b330:	jmp    0x40481c
  41b335:	jmp    0x41b327
  41b337:	pop    ebx
  41b338:	pop    ecx
  41b339:	pop    ebp
  41b33a:	ret    0x8
  41b33d:	lea    eax,[eax+0x0]
  41b340:	push   ebp
  41b341:	mov    ebp,esp
  41b343:	push   DWORD PTR [ebp+0xc]
  41b346:	push   DWORD PTR [ebp+0x8]
  41b349:	call   0x40aaf4
  41b34e:	pop    ebp
  41b34f:	ret    0x8
  41b352:	mov    eax,eax
  41b354:	push   ebp
  41b355:	mov    ebp,esp
  41b357:	push   DWORD PTR [ebp+0x10]
  41b35a:	push   DWORD PTR [ebp+0xc]
  41b35d:	mov    eax,edx
  41b35f:	mov    edx,ecx
  41b361:	mov    ecx,DWORD PTR [ebp+0x8]
  41b364:	call   0x40aad4
  41b369:	pop    ebp
  41b36a:	ret    0xc
  41b36d:	lea    eax,[eax+0x0]
  41b370:	push   ebp
  41b371:	mov    ebp,esp
  41b373:	add    esp,0xfffffff8
  41b376:	movzx  eax,WORD PTR [ebp+0x8]
  41b37a:	push   eax
  41b37b:	mov    eax,edx
  41b37d:	mov    edx,ecx
  41b37f:	movzx  ecx,WORD PTR [ebp+0xc]
  41b383:	call   0x40a7b4
  41b388:	fstp   QWORD PTR [ebp-0x8]
  41b38b:	fld    QWORD PTR [ebp-0x8]
  41b38f:	pop    ecx
  41b390:	pop    ecx
  41b391:	pop    ebp
  41b392:	ret    0x8
  41b395:	lea    eax,[eax+0x0]
  41b398:	push   ebp
  41b399:	mov    ebp,esp
  41b39b:	add    esp,0xfffffff8
  41b39e:	mov    eax,edx
  41b3a0:	mov    edx,ecx
  41b3a2:	movzx  ecx,WORD PTR [ebp+0x8]
  41b3a6:	call   0x40a958
  41b3ab:	fstp   QWORD PTR [ebp-0x8]
  41b3ae:	fld    QWORD PTR [ebp-0x8]
  41b3b2:	pop    ecx
  41b3b3:	pop    ecx
  41b3b4:	pop    ebp
  41b3b5:	ret    0x4
  41b3b8:	push   ebx
  41b3b9:	push   esi
  41b3ba:	mov    esi,ecx
  41b3bc:	mov    ebx,edx
  41b3be:	mov    edx,esi
  41b3c0:	mov    eax,ebx
  41b3c2:	call   0x40875c
  41b3c7:	pop    esi
  41b3c8:	pop    ebx
  41b3c9:	ret    
  41b3ca:	mov    eax,eax
  41b3cc:	push   ebx
  41b3cd:	push   esi
  41b3ce:	mov    esi,ecx
  41b3d0:	mov    ebx,edx
  41b3d2:	mov    edx,esi
  41b3d4:	mov    eax,ebx
  41b3d6:	call   0x408794
  41b3db:	pop    esi
  41b3dc:	pop    ebx
  41b3dd:	ret    
  41b3de:	mov    eax,eax
  41b3e0:	push   ebx
  41b3e1:	push   esi
  41b3e2:	mov    esi,ecx
  41b3e4:	mov    ebx,edx
  41b3e6:	mov    edx,esi
  41b3e8:	mov    eax,ebx
  41b3ea:	call   0x408448
  41b3ef:	pop    esi
  41b3f0:	pop    ebx
  41b3f1:	ret    
  41b3f2:	mov    eax,eax
  41b3f4:	push   ebp
  41b3f5:	mov    ebp,esp
  41b3f7:	add    esp,0xfffffff4
  41b3fa:	push   ebx
  41b3fb:	push   esi
  41b3fc:	xor    ecx,ecx
  41b3fe:	mov    DWORD PTR [ebp-0xc],ecx
  41b401:	mov    esi,edx
  41b403:	mov    ebx,eax
  41b405:	xor    eax,eax
  41b407:	push   ebp
  41b408:	push   0x41b449
  41b40d:	push   DWORD PTR fs:[eax]
  41b410:	mov    DWORD PTR fs:[eax],esp
  41b413:	push   DWORD PTR [ebp+0xc]
  41b416:	push   DWORD PTR [ebp+0x8]
  41b419:	lea    ecx,[ebp-0xc]
  41b41c:	mov    edx,esi
  41b41e:	mov    eax,ebx
  41b420:	call   0x41b2b0
  41b425:	mov    eax,DWORD PTR [ebp-0xc]
  41b428:	call   0x408b9c
  41b42d:	mov    DWORD PTR [ebp-0x8],eax
  41b430:	mov    DWORD PTR [ebp-0x4],edx
  41b433:	xor    eax,eax
  41b435:	pop    edx
  41b436:	pop    ecx
  41b437:	pop    ecx
  41b438:	mov    DWORD PTR fs:[eax],edx
  41b43b:	push   0x41b450
  41b440:	lea    eax,[ebp-0xc]
  41b443:	call   0x404f88
  41b448:	ret    
  41b449:	jmp    0x40481c
  41b44e:	jmp    0x41b440
  41b450:	mov    eax,DWORD PTR [ebp-0x8]
  41b453:	mov    edx,DWORD PTR [ebp-0x4]
  41b456:	pop    esi
  41b457:	pop    ebx
  41b458:	mov    esp,ebp
  41b45a:	pop    ebp
  41b45b:	ret    0x8
  41b45e:	mov    eax,eax
  41b460:	mov    eax,edx
  41b462:	mov    edx,ecx
  41b464:	call   0x408668
  41b469:	ret    
  41b46a:	mov    eax,eax
  41b46c:	(bad)  
  41b46d:	(bad)  
  41b46e:	(bad)  
  41b46f:	inc    DWORD PTR [ebx]
  41b471:	add    BYTE PTR [eax],al
  41b473:	add    BYTE PTR [ebx+0x75],dl
  41b476:	outs   dx,BYTE PTR ds:[esi]
  41b477:	add    bh,bh
  41b479:	(bad)  
  41b47a:	(bad)  
  41b47b:	inc    DWORD PTR [ebx]
  41b47d:	add    BYTE PTR [eax],al
  41b47f:	add    BYTE PTR [ebp+0x6f],cl
  41b482:	outs   dx,BYTE PTR ds:[esi]
  41b483:	add    bh,bh
  41b485:	(bad)  
  41b486:	(bad)  
  41b487:	inc    DWORD PTR [ebx]
  41b489:	add    BYTE PTR [eax],al
  41b48b:	add    BYTE PTR [ebp+esi*2+0x65],dl
  41b48f:	add    bh,bh
  41b491:	(bad)  
  41b492:	(bad)  
  41b493:	inc    DWORD PTR [ebx]
  41b495:	add    BYTE PTR [eax],al
  41b497:	add    BYTE PTR [edi+0x65],dl
  41b49a:	fs add bh,bh
  41b49d:	(bad)  
  41b49e:	(bad)  
  41b49f:	inc    DWORD PTR [ebx]
  41b4a1:	add    BYTE PTR [eax],al
  41b4a3:	add    BYTE PTR [eax+ebp*2+0x75],dl
  41b4a7:	add    bh,bh
  41b4a9:	(bad)  
  41b4aa:	(bad)  
  41b4ab:	inc    DWORD PTR [ebx]
  41b4ad:	add    BYTE PTR [eax],al
  41b4af:	add    BYTE PTR [esi+0x72],al
  41b4b2:	imul   eax,DWORD PTR [eax],0xffffffff
  41b4b8:	add    eax,DWORD PTR [eax]
  41b4ba:	add    BYTE PTR [eax],al
  41b4bc:	push   ebx
  41b4bd:	popa   
  41b4be:	je     0x41b4c0
  41b4c0:	(bad)  
  41b4c1:	(bad)  
  41b4c2:	(bad)  
  41b4c3:	inc    DWORD PTR [ebx]
  41b4c5:	add    BYTE PTR [eax],al
  41b4c7:	add    BYTE PTR [edx+0x61],cl
  41b4ca:	outs   dx,BYTE PTR ds:[esi]
  41b4cb:	add    bh,bh
  41b4cd:	(bad)  
  41b4ce:	(bad)  
  41b4cf:	inc    DWORD PTR [ebx]
  41b4d1:	add    BYTE PTR [eax],al
  41b4d3:	add    BYTE PTR [esi+0x65],al
  41b4d6:	bound  eax,QWORD PTR [eax]
  41b4d8:	(bad)  
  41b4d9:	(bad)  
  41b4da:	(bad)  
  41b4db:	inc    DWORD PTR [ebx]
  41b4dd:	add    BYTE PTR [eax],al
  41b4df:	add    BYTE PTR [ebp+0x61],cl
  41b4e2:	jb     0x41b4e4
  41b4e4:	(bad)  
  41b4e5:	(bad)  
  41b4e6:	(bad)  
  41b4e7:	inc    DWORD PTR [ebx]
  41b4e9:	add    BYTE PTR [eax],al
  41b4eb:	add    BYTE PTR [ecx+0x70],al
  41b4ee:	jb     0x41b4f0
  41b4f0:	(bad)  
  41b4f1:	(bad)  
  41b4f2:	(bad)  
  41b4f3:	inc    DWORD PTR [ebx]
  41b4f5:	add    BYTE PTR [eax],al
  41b4f7:	add    BYTE PTR [ebp+0x61],cl
  41b4fa:	jns    0x41b4fc
  41b4fc:	(bad)  
  41b4fd:	(bad)  
  41b4fe:	(bad)  
  41b4ff:	inc    DWORD PTR [ebx]
  41b501:	add    BYTE PTR [eax],al
  41b503:	add    BYTE PTR [edx+0x75],cl
  41b506:	outs   dx,BYTE PTR ds:[esi]
  41b507:	add    bh,bh
  41b509:	(bad)  
  41b50a:	(bad)  
  41b50b:	inc    DWORD PTR [ebx]
  41b50d:	add    BYTE PTR [eax],al
  41b50f:	add    BYTE PTR [edx+0x75],cl
  41b512:	ins    BYTE PTR es:[edi],dx
  41b513:	add    bh,bh
  41b515:	(bad)  
  41b516:	(bad)  
  41b517:	inc    DWORD PTR [ebx]
  41b519:	add    BYTE PTR [eax],al
  41b51b:	add    BYTE PTR [ecx+0x75],al
  41b51e:	addr16 add bh,bh
  41b521:	(bad)  
  41b522:	(bad)  
  41b523:	inc    DWORD PTR [ebx]
  41b525:	add    BYTE PTR [eax],al
  41b527:	add    BYTE PTR [ebx+0x65],dl
  41b52a:	jo     0x41b52c
  41b52c:	(bad)  
  41b52d:	(bad)  
  41b52e:	(bad)  
  41b52f:	inc    DWORD PTR [ebx]
  41b531:	add    BYTE PTR [eax],al
  41b533:	add    BYTE PTR [edi+0x63],cl
  41b536:	je     0x41b538
  41b538:	(bad)  
  41b539:	(bad)  
  41b53a:	(bad)  
  41b53b:	inc    DWORD PTR [ebx]
  41b53d:	add    BYTE PTR [eax],al
  41b53f:	add    BYTE PTR [esi+0x6f],cl
  41b542:	jbe    0x41b544
  41b544:	(bad)  
  41b545:	(bad)  
  41b546:	(bad)  
  41b547:	inc    DWORD PTR [ebx]
  41b549:	add    BYTE PTR [eax],al
  41b54b:	add    BYTE PTR [ebp+eiz*2+0x63],al
  41b54f:	add    BYTE PTR [ebp-0x75],dl
  41b552:	in     al,dx
  41b553:	add    esp,0xffffffc4
  41b556:	push   ebx
  41b557:	push   esi
  41b558:	xor    ecx,ecx
  41b55a:	mov    DWORD PTR [ebp-0x3c],ecx
  41b55d:	mov    esi,edx
  41b55f:	mov    ebx,eax
  41b561:	xor    eax,eax
  41b563:	push   ebp
  41b564:	push   0x41b61f
  41b569:	push   DWORD PTR fs:[eax]
  41b56c:	mov    DWORD PTR fs:[eax],esp
  41b56f:	push   DWORD PTR [ebp+0xc]
  41b572:	push   DWORD PTR [ebp+0x8]
  41b575:	lea    eax,[ebp-0x2]
  41b578:	push   eax
  41b579:	lea    ecx,[ebp-0x4]
  41b57c:	lea    edx,[ebp-0x6]
  41b57f:	mov    eax,ebx
  41b581:	call   0x41b354
  41b586:	push   0x5
  41b588:	push   esi
  41b589:	push   DWORD PTR [ebp+0xc]
  41b58c:	push   DWORD PTR [ebp+0x8]
  41b58f:	mov    eax,ebx
  41b591:	call   0x41b340
  41b596:	movzx  eax,ax
  41b599:	mov    eax,DWORD PTR [eax*4+0x461ab8]
  41b5a0:	mov    DWORD PTR [ebp-0x38],eax
  41b5a3:	mov    BYTE PTR [ebp-0x34],0xb
  41b5a7:	movzx  eax,WORD PTR [ebp-0x2]
  41b5ab:	mov    DWORD PTR [ebp-0x30],eax
  41b5ae:	mov    BYTE PTR [ebp-0x2c],0x0
  41b5b2:	movzx  eax,WORD PTR [ebp-0x4]
  41b5b6:	mov    eax,DWORD PTR [eax*4+0x461ad4]
  41b5bd:	mov    DWORD PTR [ebp-0x28],eax
  41b5c0:	mov    BYTE PTR [ebp-0x24],0xb
  41b5c4:	movzx  eax,WORD PTR [ebp-0x6]
  41b5c8:	mov    DWORD PTR [ebp-0x20],eax
  41b5cb:	mov    BYTE PTR [ebp-0x1c],0x0
  41b5cf:	push   DWORD PTR [ebp+0xc]
  41b5d2:	push   DWORD PTR [ebp+0x8]
  41b5d5:	lea    ecx,[ebp-0x3c]
  41b5d8:	mov    edx,0x41b638
  41b5dd:	mov    eax,ebx
  41b5df:	call   0x41b2ec
  41b5e4:	mov    eax,DWORD PTR [ebp-0x3c]
  41b5e7:	mov    DWORD PTR [ebp-0x18],eax
  41b5ea:	mov    BYTE PTR [ebp-0x14],0xb
  41b5ee:	mov    eax,0x41b650
  41b5f3:	mov    DWORD PTR [ebp-0x10],eax
  41b5f6:	mov    BYTE PTR [ebp-0xc],0xb
  41b5fa:	lea    ecx,[ebp-0x38]
  41b5fd:	mov    edx,0x41b65c
  41b602:	mov    eax,ebx
  41b604:	call   0x41b0d4
  41b609:	xor    eax,eax
  41b60b:	pop    edx
  41b60c:	pop    ecx
  41b60d:	pop    ecx
  41b60e:	mov    DWORD PTR fs:[eax],edx
  41b611:	push   0x41b626
  41b616:	lea    eax,[ebp-0x3c]
  41b619:	call   0x404f88
  41b61e:	ret    
  41b61f:	jmp    0x40481c
  41b624:	jmp    0x41b616
  41b626:	pop    esi
  41b627:	pop    ebx
  41b628:	mov    esp,ebp
  41b62a:	pop    ebp
  41b62b:	ret    0x8
  41b62e:	add    BYTE PTR [eax],al
  41b630:	(bad)  
  41b631:	(bad)  
  41b632:	(bad)  
  41b633:	dec    DWORD PTR [eax+eax*1]
  41b636:	add    BYTE PTR [eax],al
  41b638:	dec    eax
  41b639:	dec    eax
  41b63a:	and    bh,BYTE PTR [edx]
  41b63c:	and    ch,BYTE PTR [ebp+0x6d]
  41b63f:	and    bh,BYTE PTR [edx]
  41b641:	and    dh,BYTE PTR [ebx+0x73]
  41b644:	add    BYTE PTR [eax],al
  41b646:	add    BYTE PTR [eax],al
  41b648:	(bad)  
  41b649:	(bad)  
  41b64a:	(bad)  
  41b64b:	inc    DWORD PTR [ebx]
  41b64d:	add    BYTE PTR [eax],al
  41b64f:	add    BYTE PTR [edi+0x4d],al
  41b652:	push   esp
  41b653:	add    bh,bh
  41b655:	(bad)  
  41b656:	(bad)  
  41b657:	call   DWORD PTR [esi]
  41b659:	add    BYTE PTR [eax],al
  41b65b:	add    BYTE PTR ds:0x25202c73,ah
  41b661:	xor    ah,BYTE PTR cs:[eax+eiz*1+0x25]
  41b666:	jae    0x41b688
  41b668:	and    eax,0x2064342e
  41b66d:	and    eax,0x73252073
  41b672:	add    BYTE PTR [eax],al
  41b674:	push   ebp
  41b675:	mov    ebp,esp
  41b677:	xor    eax,eax
  41b679:	push   ebp
  41b67a:	push   0x41b6c5
  41b67f:	push   DWORD PTR fs:[eax]
  41b682:	mov    DWORD PTR fs:[eax],esp
  41b685:	inc    DWORD PTR ds:0x4729e0
  41b68b:	jne    0x41b6b7
  41b68d:	mov    eax,0x461abc
  41b692:	mov    ecx,0x7
  41b697:	mov    edx,DWORD PTR ds:0x401084
  41b69d:	call   0x405b50
  41b6a2:	mov    eax,0x461ad8
  41b6a7:	mov    ecx,0xc
  41b6ac:	mov    edx,DWORD PTR ds:0x401084
  41b6b2:	call   0x405b50
  41b6b7:	xor    eax,eax
  41b6b9:	pop    edx
  41b6ba:	pop    ecx
  41b6bb:	pop    ecx
  41b6bc:	mov    DWORD PTR fs:[eax],edx
  41b6bf:	push   0x41b6cc
  41b6c4:	ret    
  41b6c5:	jmp    0x40481c
  41b6ca:	jmp    0x41b6c4
  41b6cc:	pop    ebp
  41b6cd:	ret    
  41b6ce:	mov    eax,eax
  41b6d0:	sbb    al,0xb7
  41b6d2:	inc    ecx
	...
  41b6ef:	add    BYTE PTR [edi+esi*4],bl
  41b6f2:	inc    ecx
  41b6f3:	add    BYTE PTR [eax+eax*1],al
  41b6f6:	add    BYTE PTR [eax],al
  41b6f8:	cmp    BYTE PTR [ebx+0x42d00041],ch
  41b6fe:	inc    eax
  41b6ff:	add    ah,bl
  41b701:	inc    edx
  41b702:	inc    eax
  41b703:	add    al,ah
  41b705:	inc    edx
  41b706:	inc    eax
  41b707:	add    ah,ah
  41b709:	inc    edx
  41b70a:	inc    eax
  41b70b:	add    al,bl
  41b70d:	inc    edx
  41b70e:	inc    eax
  41b70f:	add    BYTE PTR [eax],bh
  41b711:	inc    eax
  41b712:	inc    eax
  41b713:	add    BYTE PTR [eax+eax*2+0x40],dl
  41b717:	add    BYTE PTR [eax+0xf004040],dl
  41b71d:	push   esp
  41b71e:	dec    ecx
  41b71f:	fs push ebx
  41b721:	jns    0x41b796
  41b723:	dec    esi
  41b724:	popa   
  41b725:	je     0x41b790
  41b727:	jbe    0x41b78e
  41b729:	push   esi
  41b72a:	inc    ebx
  41b72b:	dec    esp
  41b72c:	mov    eax,edx
  41b72e:	mov    edx,ecx
  41b730:	call   0x4086c4
  41b735:	ret    
  41b736:	mov    eax,eax
  41b738:	mov    eax,edx
  41b73a:	mov    edx,ecx
  41b73c:	call   0x40d4e0
  41b741:	ret    
  41b742:	mov    eax,eax
  41b744:	lock pop es
  41b746:	inc    edi
  41b747:	add    BYTE PTR [edx-0xfffff01],cl
  41b74d:	pop    es
  41b74e:	inc    edi
  41b74f:	add    BYTE PTR [ebx-0xfffff01],cl
  41b755:	pop    es
  41b756:	inc    edi
  41b757:	add    BYTE PTR [edi+edi*8+0x7f00000],cl
  41b75e:	inc    edi
  41b75f:	add    BYTE PTR [ebp-0xfffff01],cl
  41b765:	pop    es
  41b766:	inc    edi
  41b767:	add    BYTE PTR [esi-0xfffff01],cl
  41b76d:	pop    es
  41b76e:	inc    edi
  41b76f:	add    BYTE PTR [edi-0xfffff01],cl
  41b775:	pop    es
  41b776:	inc    edi
  41b777:	add    BYTE PTR [eax-0x1],dh
  41b77a:	add    BYTE PTR [eax],al
  41b77c:	lock pop es
  41b77e:	inc    edi
  41b77f:	add    BYTE PTR [ecx-0x1],dh
  41b782:	add    BYTE PTR [eax],al
  41b784:	lock pop es
  41b786:	inc    edi
  41b787:	add    BYTE PTR [edx-0x1],dh
  41b78a:	add    BYTE PTR [eax],al
  41b78c:	lock pop es
  41b78e:	inc    edi
  41b78f:	add    BYTE PTR [ebx-0x1],dh
  41b792:	add    BYTE PTR [eax],al
  41b794:	lock pop es
  41b796:	inc    edi
  41b797:	add    BYTE PTR [edi+edi*8+0x0],dh
  41b79b:	add    al,dh
  41b79d:	pop    es
  41b79e:	inc    edi
  41b79f:	add    BYTE PTR [ebp-0x1],dh
  41b7a2:	add    BYTE PTR [eax],al
  41b7a4:	lock pop es
  41b7a6:	inc    edi
  41b7a7:	add    BYTE PTR [esi-0x1],dh
  41b7aa:	add    BYTE PTR [eax],al
  41b7ac:	lock pop es
  41b7ae:	inc    edi
  41b7af:	add    BYTE PTR [edi-0x1],dh
  41b7b2:	add    BYTE PTR [eax],al
  41b7b4:	lock pop es
  41b7b6:	inc    edi
  41b7b7:	add    BYTE PTR [eax-0x1],bh
  41b7ba:	add    BYTE PTR [eax],al
  41b7bc:	lock pop es
  41b7be:	inc    edi
  41b7bf:	add    BYTE PTR [ecx-0x1],bh
  41b7c2:	add    BYTE PTR [eax],al
  41b7c4:	lock pop es
  41b7c6:	inc    edi
  41b7c7:	add    BYTE PTR [edx-0x1],bh
  41b7ca:	add    BYTE PTR [eax],al
  41b7cc:	lock pop es
  41b7ce:	inc    edi
  41b7cf:	add    BYTE PTR [ebx-0x1],bh
  41b7d2:	add    BYTE PTR [eax],al
  41b7d4:	lock pop es
  41b7d6:	inc    edi
  41b7d7:	add    BYTE PTR [edi+edi*8+0x0],bh
  41b7db:	add    al,dh
  41b7dd:	pop    es
  41b7de:	inc    edi
  41b7df:	add    BYTE PTR [ebp-0x1],bh
  41b7e2:	add    BYTE PTR [eax],al
  41b7e4:	lock pop es
  41b7e6:	inc    edi
  41b7e7:	add    BYTE PTR [esi-0x1],bh
  41b7ea:	add    BYTE PTR [eax],al
  41b7ec:	lock pop es
  41b7ee:	inc    edi
  41b7ef:	add    BYTE PTR [edi-0x1],bh
  41b7f2:	add    BYTE PTR [eax],al
  41b7f4:	lock pop es
  41b7f6:	inc    edi
  41b7f7:	add    BYTE PTR [eax-0x1],ah
  41b7fa:	add    BYTE PTR [eax],al
  41b7fc:	lock pop es
  41b7fe:	inc    edi
  41b7ff:	add    BYTE PTR [ecx-0x1],ah
  41b802:	add    BYTE PTR [eax],al
  41b804:	lock pop es
  41b806:	inc    edi
  41b807:	add    BYTE PTR [edx-0x1],ah
  41b80a:	add    BYTE PTR [eax],al
  41b80c:	lock pop es
  41b80e:	inc    edi
  41b80f:	add    BYTE PTR [ebx-0x1],ah
  41b812:	add    BYTE PTR [eax],al
  41b814:	lock pop es
  41b816:	inc    edi
  41b817:	add    BYTE PTR [edi+edi*8+0x0],ah
  41b81b:	add    al,dh
  41b81d:	pop    es
  41b81e:	inc    edi
  41b81f:	add    BYTE PTR [ebp-0x1],ah
  41b822:	add    BYTE PTR [eax],al
  41b824:	lock pop es
  41b826:	inc    edi
  41b827:	add    BYTE PTR [esi-0x1],ah
  41b82a:	add    BYTE PTR [eax],al
  41b82c:	lock pop es
  41b82e:	inc    edi
  41b82f:	add    BYTE PTR [edi-0x1],ah
  41b832:	add    BYTE PTR [eax],al
  41b834:	lock pop es
  41b836:	inc    edi
  41b837:	add    BYTE PTR [eax-0x1],ch
  41b83a:	add    BYTE PTR [eax],al
  41b83c:	lock pop es
  41b83e:	inc    edi
  41b83f:	add    BYTE PTR [ecx-0x1],ch
  41b842:	add    BYTE PTR [eax],al
  41b844:	lock pop es
  41b846:	inc    edi
  41b847:	add    BYTE PTR [edx-0x1],ch
  41b84a:	add    BYTE PTR [eax],al
  41b84c:	lock pop es
  41b84e:	inc    edi
  41b84f:	add    BYTE PTR [ebx-0x1],ch
  41b852:	add    BYTE PTR [eax],al
  41b854:	lock pop es
  41b856:	inc    edi
  41b857:	add    BYTE PTR [edi+edi*8+0x0],ch
  41b85b:	add    al,dh
  41b85d:	pop    es
  41b85e:	inc    edi
  41b85f:	add    BYTE PTR [ebp-0x1],ch
  41b862:	add    BYTE PTR [eax],al
  41b864:	lock pop es
  41b866:	inc    edi
  41b867:	add    BYTE PTR [esi-0x1],ch
  41b86a:	add    BYTE PTR [eax],al
  41b86c:	lock pop es
  41b86e:	inc    edi
  41b86f:	add    BYTE PTR [edi-0x1],ch
  41b872:	add    BYTE PTR [eax],al
  41b874:	lock pop es
  41b876:	inc    edi
  41b877:	add    BYTE PTR [eax-0x1],dl
  41b87a:	add    BYTE PTR [eax],al
  41b87c:	lock pop es
  41b87e:	inc    edi
  41b87f:	add    BYTE PTR [ecx-0x1],dl
  41b882:	add    BYTE PTR [eax],al
  41b884:	lock pop es
  41b886:	inc    edi
  41b887:	add    BYTE PTR [edx-0x1],dl
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	lock pop es
  41b88e:	inc    edi
  41b88f:	add    BYTE PTR [ebx-0x1],dl
  41b892:	add    BYTE PTR [eax],al
  41b894:	lock pop es
  41b896:	inc    edi
  41b897:	add    BYTE PTR [edi+edi*8+0x0],dl
  41b89b:	add    al,dh
  41b89d:	pop    es
  41b89e:	inc    edi
  41b89f:	add    BYTE PTR [ebp-0x1],dl
  41b8a2:	add    BYTE PTR [eax],al
  41b8a4:	lock pop es
  41b8a6:	inc    edi
  41b8a7:	add    BYTE PTR [esi-0x1],dl
  41b8aa:	add    BYTE PTR [eax],al
  41b8ac:	lock pop es
  41b8ae:	inc    edi
  41b8af:	add    BYTE PTR [edi-0x1],dl
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	lock pop es
  41b8b6:	inc    edi
  41b8b7:	add    BYTE PTR [eax-0x1],bl
  41b8ba:	add    BYTE PTR [eax],al
  41b8bc:	lock pop es
  41b8be:	inc    edi
  41b8bf:	add    BYTE PTR [ecx-0x1],bl
  41b8c2:	add    BYTE PTR [eax],al
  41b8c4:	lock pop es
  41b8c6:	inc    edi
  41b8c7:	add    BYTE PTR [edx-0x1],bl
  41b8ca:	add    BYTE PTR [eax],al
  41b8cc:	lock pop es
  41b8ce:	inc    edi
  41b8cf:	add    BYTE PTR [ebx-0x1],bl
  41b8d2:	add    BYTE PTR [eax],al
  41b8d4:	lock pop es
  41b8d6:	inc    edi
  41b8d7:	add    BYTE PTR [edi+edi*8+0x0],bl
  41b8db:	add    al,dh
  41b8dd:	pop    es
  41b8de:	inc    edi
  41b8df:	add    BYTE PTR [ebp-0x1],bl
  41b8e2:	add    BYTE PTR [eax],al
  41b8e4:	lock pop es
  41b8e6:	inc    edi
  41b8e7:	add    BYTE PTR [esi-0x1],bl
  41b8ea:	add    BYTE PTR [eax],al
  41b8ec:	lock pop es
  41b8ee:	inc    edi
  41b8ef:	add    BYTE PTR [edi-0x1],bl
  41b8f2:	add    BYTE PTR [eax],al
  41b8f4:	lock pop es
  41b8f6:	inc    edi
  41b8f7:	add    BYTE PTR [eax-0x1],al
  41b8fa:	add    BYTE PTR [eax],al
  41b8fc:	lock pop es
  41b8fe:	inc    edi
  41b8ff:	add    BYTE PTR [ecx-0x1],al
  41b902:	add    BYTE PTR [eax],al
  41b904:	lock pop es
  41b906:	inc    edi
  41b907:	add    BYTE PTR [edx-0x1],al
  41b90a:	add    BYTE PTR [eax],al
  41b90c:	lock pop es
  41b90e:	inc    edi
  41b90f:	add    BYTE PTR [ebx-0x1],al
  41b912:	add    BYTE PTR [eax],al
  41b914:	lock pop es
  41b916:	inc    edi
  41b917:	add    BYTE PTR [edi+edi*8+0x0],al
  41b91b:	add    al,dh
  41b91d:	pop    es
  41b91e:	inc    edi
  41b91f:	add    BYTE PTR [ebp-0x1],al
  41b922:	add    BYTE PTR [eax],al
  41b924:	lock pop es
  41b926:	inc    edi
  41b927:	add    BYTE PTR [esi-0x1],al
  41b92a:	add    BYTE PTR [eax],al
  41b92c:	lock pop es
  41b92e:	inc    edi
  41b92f:	add    BYTE PTR [edi-0x1],al
  41b932:	add    BYTE PTR [eax],al
  41b934:	lock pop es
  41b936:	inc    edi
  41b937:	add    BYTE PTR [eax-0x1],cl
  41b93a:	add    BYTE PTR [eax],al
  41b93c:	lock pop es
  41b93e:	inc    edi
  41b93f:	add    BYTE PTR [ecx-0x1],cl
  41b942:	add    BYTE PTR [eax],al
  41b944:	lock pop es
  41b946:	inc    edi
  41b947:	add    BYTE PTR [edx-0x1],cl
  41b94a:	add    BYTE PTR [eax],al
  41b94c:	cwde   
  41b94d:	mov    ecx,0x41
	...
  41b96a:	add    BYTE PTR [eax],al
  41b96c:	pushf  
  41b96d:	mov    ecx,0xc0041
  41b972:	add    BYTE PTR [eax],al
  41b974:	hlt    
  41b975:	jbe    0x41b9b7
  41b977:	add    al,dl
  41b979:	inc    edx
  41b97a:	inc    eax
  41b97b:	add    ah,bl
  41b97d:	inc    edx
  41b97e:	inc    eax
  41b97f:	add    al,ah
  41b981:	inc    edx
  41b982:	inc    eax
  41b983:	add    ah,ah
  41b985:	inc    edx
  41b986:	inc    eax
  41b987:	add    al,bl
  41b989:	inc    edx
  41b98a:	inc    eax
  41b98b:	add    BYTE PTR [eax],bh
  41b98d:	inc    eax
  41b98e:	inc    eax
  41b98f:	add    BYTE PTR [eax+eax*2+0x40],dl
  41b993:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41b999:	mov    ebp,0x450c0041
  41b99e:	dec    ecx
  41b99f:	fs inc ebp
  41b9a1:	js     0x41ba06
  41b9a3:	gs jo  0x41ba1a
  41b9a6:	imul   ebp,DWORD PTR [edi+0x6e],0xf800408d
  41b9ad:	mov    ecx,0x41
	...
  41b9ca:	add    BYTE PTR [eax],al
  41b9cc:	cld    
  41b9cd:	mov    ecx,0xc0041
  41b9d2:	add    BYTE PTR [eax],al
  41b9d4:	dec    esp
  41b9d5:	mov    ecx,0x42d00041
  41b9da:	inc    eax
  41b9db:	add    ah,bl
  41b9dd:	inc    edx
  41b9de:	inc    eax
  41b9df:	add    al,ah
  41b9e1:	inc    edx
  41b9e2:	inc    eax
  41b9e3:	add    ah,ah
  41b9e5:	inc    edx
  41b9e6:	inc    eax
  41b9e7:	add    al,bl
  41b9e9:	inc    edx
  41b9ea:	inc    eax
  41b9eb:	add    BYTE PTR [eax],bh
  41b9ed:	inc    eax
  41b9ee:	inc    eax
  41b9ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  41b9f3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41b9f9:	mov    ebp,0x45120041
  41b9fe:	dec    ecx
  41b9ff:	fs push ebx
  41ba01:	imul   ebp,DWORD PTR [ebp+eiz*2+0x6e],0x63784574
  41ba09:	gs jo  0x41ba80
  41ba0c:	imul   ebp,DWORD PTR [edi+0x6e],0x41ba5c90
	...
  41ba2f:	add    BYTE PTR [eax-0x46],ah
  41ba32:	inc    ecx
  41ba33:	add    BYTE PTR [eax+eax*1],cl
  41ba36:	add    BYTE PTR [eax],al
  41ba38:	lods   al,BYTE PTR ds:[esi]
  41ba39:	mov    ecx,0x42d00041
  41ba3e:	inc    eax
  41ba3f:	add    ah,bl
  41ba41:	inc    edx
  41ba42:	inc    eax
  41ba43:	add    al,ah
  41ba45:	inc    edx
  41ba46:	inc    eax
  41ba47:	add    ah,ah
  41ba49:	inc    edx
  41ba4a:	inc    eax
  41ba4b:	add    al,bl
  41ba4d:	inc    edx
  41ba4e:	inc    eax
  41ba4f:	add    BYTE PTR [eax],bh
  41ba51:	inc    eax
  41ba52:	inc    eax
  41ba53:	add    BYTE PTR [eax+eax*2+0x40],dl
  41ba57:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41ba5d:	mov    ebp,0x45170041
  41ba62:	dec    ecx
  41ba63:	fs inc ebx
  41ba65:	outs   dx,DWORD PTR ds:[esi]
  41ba66:	outs   dx,BYTE PTR ds:[esi]
  41ba67:	outs   dx,BYTE PTR ds:[esi]
  41ba68:	inc    ebx
  41ba69:	ins    BYTE PTR es:[edi],dx
  41ba6a:	outs   dx,DWORD PTR ds:[esi]
  41ba6b:	jae    0x41bad2
  41ba6d:	fs inc edi
  41ba6f:	jb     0x41bad2
  41ba71:	arpl   WORD PTR [ebp+0x66],sp
  41ba74:	jne    0x41bae2
  41ba76:	ins    BYTE PTR es:[edi],dx
  41ba77:	jns    0x41ba3d
  41ba79:	mov    edx,0x41
	...
  41ba96:	add    BYTE PTR [eax],al
  41ba98:	enter  0x41ba,0x0
  41ba9c:	or     al,0x0
  41ba9e:	add    BYTE PTR [eax],al
  41baa0:	dec    esp
  41baa1:	mov    ecx,0x42d00041
  41baa6:	inc    eax
  41baa7:	add    ah,bl
  41baa9:	inc    edx
  41baaa:	inc    eax
  41baab:	add    al,ah
  41baad:	inc    edx
  41baae:	inc    eax
  41baaf:	add    ah,ah
  41bab1:	inc    edx
  41bab2:	inc    eax
  41bab3:	add    al,bl
  41bab5:	inc    edx
  41bab6:	inc    eax
  41bab7:	add    BYTE PTR [eax],bh
  41bab9:	inc    eax
  41baba:	inc    eax
  41babb:	add    BYTE PTR [eax+eax*2+0x40],dl
  41babf:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bac5:	mov    ebp,0x45110041
  41baca:	dec    ecx
  41bacb:	fs push edx
  41bacd:	popa   
  41bace:	outs   dx,BYTE PTR ds:[esi]
  41bacf:	addr16 gs inc ebp
  41bad2:	js     0x41bb37
  41bad4:	gs jo  0x41bb4b
  41bad7:	imul   ebp,DWORD PTR [edi+0x6e],0xbb28c08b
  41bade:	inc    ecx
	...
  41bafb:	add    BYTE PTR [ebx+edi*4],ch
  41bafe:	inc    ecx
  41baff:	add    BYTE PTR [eax+eax*1],cl
  41bb02:	add    BYTE PTR [eax],al
  41bb04:	dec    esp
  41bb05:	mov    ecx,0x42d00041
  41bb0a:	inc    eax
  41bb0b:	add    ah,bl
  41bb0d:	inc    edx
  41bb0e:	inc    eax
  41bb0f:	add    al,ah
  41bb11:	inc    edx
  41bb12:	inc    eax
  41bb13:	add    ah,ah
  41bb15:	inc    edx
  41bb16:	inc    eax
  41bb17:	add    al,bl
  41bb19:	inc    edx
  41bb1a:	inc    eax
  41bb1b:	add    BYTE PTR [eax],bh
  41bb1d:	inc    eax
  41bb1e:	inc    eax
  41bb1f:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bb23:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bb29:	mov    ebp,0x45140041
  41bb2e:	dec    ecx
  41bb2f:	fs push ebx
  41bb31:	outs   dx,DWORD PTR ds:[esi]
  41bb32:	arpl   WORD PTR [ebx+0x65],bp
  41bb35:	je     0x41bb7f
  41bb37:	popa   
  41bb38:	outs   dx,BYTE PTR ds:[esi]
  41bb39:	fs ins BYTE PTR es:[edi],dx
  41bb3b:	gs inc ebp
  41bb3d:	jb     0x41bbb1
  41bb3f:	outs   dx,DWORD PTR ds:[esi]
  41bb40:	jb     0x41bacf
  41bb42:	inc    eax
  41bb43:	add    BYTE PTR [eax+0x41bb],dl
	...
  41bb61:	add    BYTE PTR [eax],al
  41bb63:	add    BYTE PTR [ebx+edi*4+0xc0041],dl
  41bb6a:	add    BYTE PTR [eax],al
  41bb6c:	fdivr  QWORD PTR [edx+0x42d00041]
  41bb72:	inc    eax
  41bb73:	add    ah,bl
  41bb75:	inc    edx
  41bb76:	inc    eax
  41bb77:	add    al,ah
  41bb79:	inc    edx
  41bb7a:	inc    eax
  41bb7b:	add    ah,ah
  41bb7d:	inc    edx
  41bb7e:	inc    eax
  41bb7f:	add    al,bl
  41bb81:	inc    edx
  41bb82:	inc    eax
  41bb83:	add    BYTE PTR [eax],bh
  41bb85:	inc    eax
  41bb86:	inc    eax
  41bb87:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bb8b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bb91:	mov    ebp,0x45140041
  41bb96:	dec    ecx
  41bb97:	fs push eax
  41bb99:	popa   
  41bb9a:	arpl   WORD PTR [ebx+0x61],bp
  41bb9d:	addr16 gs push ebx
  41bba0:	imul   edi,DWORD PTR [edx+0x65],0x426f6f54
  41bba7:	imul   esp,DWORD PTR [edi-0x73],0xbbf80040
  41bbae:	inc    ecx
	...
  41bbcb:	add    ah,bh
  41bbcd:	mov    ebx,0xc0041
  41bbd2:	add    BYTE PTR [eax],al
  41bbd4:	fdivr  QWORD PTR [edx+0x42d00041]
  41bbda:	inc    eax
  41bbdb:	add    ah,bl
  41bbdd:	inc    edx
  41bbde:	inc    eax
  41bbdf:	add    al,ah
  41bbe1:	inc    edx
  41bbe2:	inc    eax
  41bbe3:	add    ah,ah
  41bbe5:	inc    edx
  41bbe6:	inc    eax
  41bbe7:	add    al,bl
  41bbe9:	inc    edx
  41bbea:	inc    eax
  41bbeb:	add    BYTE PTR [eax],bh
  41bbed:	inc    eax
  41bbee:	inc    eax
  41bbef:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bbf3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bbf9:	mov    ebp,0x45120041
  41bbfe:	dec    ecx
  41bbff:	fs dec esi
  41bc01:	outs   dx,DWORD PTR ds:[esi]
  41bc02:	je     0x41bc45
  41bc04:	ins    BYTE PTR es:[edi],dx
  41bc05:	ins    BYTE PTR es:[edi],dx
  41bc06:	inc    edx
  41bc07:	jns    0x41bc7d
  41bc09:	gs jae 0x41bc5f
  41bc0c:	outs   dx,BYTE PTR gs:[esi]
  41bc0e:	je     0x41bba0
  41bc10:	pop    esp
  41bc11:	mov    esp,0x41
	...
  41bc2e:	add    BYTE PTR [eax],al
  41bc30:	pusha  
  41bc31:	mov    esp,0xc0041
  41bc36:	add    BYTE PTR [eax],al
  41bc38:	fdivr  QWORD PTR [edx+0x42d00041]
  41bc3e:	inc    eax
  41bc3f:	add    ah,bl
  41bc41:	inc    edx
  41bc42:	inc    eax
  41bc43:	add    al,ah
  41bc45:	inc    edx
  41bc46:	inc    eax
  41bc47:	add    ah,ah
  41bc49:	inc    edx
  41bc4a:	inc    eax
  41bc4b:	add    al,bl
  41bc4d:	inc    edx
  41bc4e:	inc    eax
  41bc4f:	add    BYTE PTR [eax],bh
  41bc51:	inc    eax
  41bc52:	inc    eax
  41bc53:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bc57:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bc5d:	mov    ebp,0x45150041
  41bc62:	dec    ecx
  41bc63:	fs inc ebx
  41bc65:	outs   dx,DWORD PTR ds:[esi]
  41bc66:	jne    0x41bcd4
  41bc68:	fs dec esi
  41bc6a:	outs   dx,DWORD PTR ds:[esi]
  41bc6b:	je     0x41bcaf
  41bc6d:	imul   ebp,DWORD PTR [esi+0x64],0x6b636f53
  41bc74:	gs je  0x41bc02
  41bc77:	rol    ah,0xbc
  41bc7a:	inc    ecx
	...
  41bc97:	add    al,cl
  41bc99:	mov    esp,0xc0041
  41bc9e:	add    BYTE PTR [eax],al
  41bca0:	fdivr  QWORD PTR [edx+0x42d00041]
  41bca6:	inc    eax
  41bca7:	add    ah,bl
  41bca9:	inc    edx
  41bcaa:	inc    eax
  41bcab:	add    al,ah
  41bcad:	inc    edx
  41bcae:	inc    eax
  41bcaf:	add    ah,ah
  41bcb1:	inc    edx
  41bcb2:	inc    eax
  41bcb3:	add    al,bl
  41bcb5:	inc    edx
  41bcb6:	inc    eax
  41bcb7:	add    BYTE PTR [eax],bh
  41bcb9:	inc    eax
  41bcba:	inc    eax
  41bcbb:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bcbf:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bcc5:	mov    ebp,0x45180041
  41bcca:	dec    ecx
  41bccb:	fs inc ebx
  41bccd:	popa   
  41bcce:	outs   dx,BYTE PTR ds:[esi]
  41bccf:	dec    esi
  41bcd0:	outs   dx,DWORD PTR ds:[esi]
  41bcd1:	je     0x41bd15
  41bcd3:	imul   ebp,DWORD PTR [esi+0x64],0x74726f50
  41bcda:	dec    ecx
  41bcdb:	outs   dx,BYTE PTR ds:[esi]
  41bcdc:	push   edx
  41bcdd:	popa   
  41bcde:	outs   dx,BYTE PTR ds:[esi]
  41bcdf:	lea    eax,gs:[bx+si+0x0]
  41bce4:	xor    BYTE PTR [ebp+0x41],bh
	...
  41bd02:	add    BYTE PTR [eax],al
  41bd04:	xor    al,0xbd
  41bd06:	inc    ecx
  41bd07:	add    BYTE PTR [eax+eax*1],cl
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	fdivr  QWORD PTR [edx+0x42d00041]
  41bd12:	inc    eax
  41bd13:	add    ah,bl
  41bd15:	inc    edx
  41bd16:	inc    eax
  41bd17:	add    al,ah
  41bd19:	inc    edx
  41bd1a:	inc    eax
  41bd1b:	add    ah,ah
  41bd1d:	inc    edx
  41bd1e:	inc    eax
  41bd1f:	add    al,bl
  41bd21:	inc    edx
  41bd22:	inc    eax
  41bd23:	add    BYTE PTR [eax],bh
  41bd25:	inc    eax
  41bd26:	inc    eax
  41bd27:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bd2b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bd31:	mov    ebp,0x45130041
  41bd36:	dec    ecx
  41bd37:	fs dec ecx
  41bd39:	outs   dx,BYTE PTR ds:[esi]
  41bd3a:	jbe    0x41bd9d
  41bd3c:	ins    BYTE PTR es:[edi],dx
  41bd3d:	imul   esp,DWORD PTR [eax+edx*2+0x6f],0x61527472
  41bd45:	outs   dx,BYTE PTR ds:[esi]
  41bd46:	addr16 gs xchg esp,eax
  41bd49:	mov    ebp,0x41
	...
  41bd66:	add    BYTE PTR [eax],al
  41bd68:	cwde   
  41bd69:	mov    ebp,0xc0041
  41bd6e:	add    BYTE PTR [eax],al
  41bd70:	fdivr  QWORD PTR [edx+0x42d00041]
  41bd76:	inc    eax
  41bd77:	add    ah,bl
  41bd79:	inc    edx
  41bd7a:	inc    eax
  41bd7b:	add    al,ah
  41bd7d:	inc    edx
  41bd7e:	inc    eax
  41bd7f:	add    ah,ah
  41bd81:	inc    edx
  41bd82:	inc    eax
  41bd83:	add    al,bl
  41bd85:	inc    edx
  41bd86:	inc    eax
  41bd87:	add    BYTE PTR [eax],bh
  41bd89:	inc    eax
  41bd8a:	inc    eax
  41bd8b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bd8f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bd95:	mov    ebp,0x45220041
  41bd9a:	dec    ecx
  41bd9b:	fs inc ebx
  41bd9d:	popa   
  41bd9e:	outs   dx,BYTE PTR ds:[esi]
  41bd9f:	outs   dx,BYTE PTR ds:[esi]
  41bda0:	outs   dx,DWORD PTR ds:[esi]
  41bda1:	je     0x41bdf6
  41bda3:	gs je  0x41bdef
  41bda6:	push   eax
  41bda7:	push   esi
  41bda8:	gs jb  0x41be1e
  41bdab:	imul   ebp,DWORD PTR [edi+0x6e],0x6e656857
  41bdb2:	inc    ebx
  41bdb3:	outs   dx,DWORD PTR ds:[esi]
  41bdb4:	outs   dx,BYTE PTR ds:[esi]
  41bdb5:	outs   dx,BYTE PTR ds:[esi]
  41bdb6:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  41bdbb:	nop
  41bdbc:	push   ebp
  41bdbd:	mov    ebp,esp
  41bdbf:	push   ecx
  41bdc0:	push   ebx
  41bdc1:	push   esi
  41bdc2:	test   dl,dl
  41bdc4:	je     0x41bdce
  41bdc6:	add    esp,0xfffffff0
  41bdc9:	call   0x4043ac
  41bdce:	mov    DWORD PTR [ebp-0x4],ecx
  41bdd1:	mov    ebx,edx
  41bdd3:	mov    esi,eax
  41bdd5:	mov    eax,DWORD PTR [ebp-0x4]
  41bdd8:	call   0x405408
  41bddd:	xor    eax,eax
  41bddf:	push   ebp
  41bde0:	push   0x41be0d
  41bde5:	push   DWORD PTR fs:[eax]
  41bde8:	mov    DWORD PTR fs:[eax],esp
  41bdeb:	mov    ecx,DWORD PTR [ebp-0x4]
  41bdee:	xor    edx,edx
  41bdf0:	mov    eax,esi
  41bdf2:	call   0x40c8b4
  41bdf7:	xor    eax,eax
  41bdf9:	pop    edx
  41bdfa:	pop    ecx
  41bdfb:	pop    ecx
  41bdfc:	mov    DWORD PTR fs:[eax],edx
  41bdff:	push   0x41be14
  41be04:	lea    eax,[ebp-0x4]
  41be07:	call   0x404f88
  41be0c:	ret    
  41be0d:	jmp    0x40481c
  41be12:	jmp    0x41be04
  41be14:	mov    eax,esi
  41be16:	test   bl,bl
  41be18:	je     0x41be29
  41be1a:	call   0x404404
  41be1f:	pop    DWORD PTR fs:0x0
  41be26:	add    esp,0xc
  41be29:	mov    eax,esi
  41be2b:	pop    esi
  41be2c:	pop    ebx
  41be2d:	pop    ecx
  41be2e:	pop    ebp
  41be2f:	ret    
  41be30:	test   edx,edx
  41be32:	je     0x41be3b
  41be34:	mov    edx,ecx
  41be36:	call   0x41be78
  41be3b:	ret    
  41be3c:	test   dl,dl
  41be3e:	jne    0x41be47
  41be40:	mov    edx,ecx
  41be42:	call   0x41be78
  41be47:	ret    
  41be48:	test   edx,edx
  41be4a:	jne    0x41be53
  41be4c:	mov    edx,ecx
  41be4e:	call   0x41be78
  41be53:	ret    
  41be54:	push   ebp
  41be55:	mov    ebp,esp
  41be57:	cmp    ecx,edx
  41be59:	jg     0x41be60
  41be5b:	cmp    edx,DWORD PTR [ebp+0xc]
  41be5e:	jle    0x41be68
  41be60:	mov    edx,DWORD PTR [ebp+0x8]
  41be63:	call   0x41be78
  41be68:	pop    ebp
  41be69:	ret    0x8
  41be6c:	test   dl,dl
  41be6e:	je     0x41be77
  41be70:	mov    edx,ecx
  41be72:	call   0x41be78
  41be77:	ret    
  41be78:	push   ebx
  41be79:	push   esi
  41be7a:	mov    esi,edx
  41be7c:	mov    ebx,eax
  41be7e:	mov    ecx,esi
  41be80:	mov    dl,0x1
  41be82:	mov    eax,ebx
  41be84:	call   DWORD PTR [eax]
  41be86:	call   0x4048fc
  41be8b:	pop    esi
  41be8c:	pop    ebx
  41be8d:	ret    
  41be8e:	mov    eax,eax
  41be90:	fdivr  QWORD PTR [esi+0x41]
	...
  41beae:	add    BYTE PTR [eax],al
  41beb0:	fdivr  QWORD PTR [esi+0x40041]
  41beb6:	add    BYTE PTR [eax],al
  41beb8:	shl    BYTE PTR [esi+0x42d00041],1
  41bebe:	inc    eax
  41bebf:	add    ah,bl
  41bec1:	inc    edx
  41bec2:	inc    eax
  41bec3:	add    al,ah
  41bec5:	inc    edx
  41bec6:	inc    eax
  41bec7:	add    ah,ah
  41bec9:	inc    edx
  41beca:	inc    eax
  41becb:	add    al,bl
  41becd:	inc    edx
  41bece:	inc    eax
  41becf:	add    BYTE PTR [eax],bh
  41bed1:	inc    eax
  41bed2:	inc    eax
  41bed3:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bed7:	add    BYTE PTR [eax+0xb004040],dl
  41bedd:	push   esp
  41bede:	dec    ecx
  41bedf:	fs push ebx
  41bee1:	jns    0x41bf56
  41bee3:	push   edi
  41bee4:	imul   ebp,DWORD PTR [esi+0x33],0x41bf3432
	...
  41bf07:	add    BYTE PTR [eax],bh
  41bf09:	mov    edi,0xc0041
  41bf0e:	add    BYTE PTR [eax],al
  41bf10:	dec    esp
  41bf11:	mov    ecx,0x42d00041
  41bf16:	inc    eax
  41bf17:	add    ah,bl
  41bf19:	inc    edx
  41bf1a:	inc    eax
  41bf1b:	add    al,ah
  41bf1d:	inc    edx
  41bf1e:	inc    eax
  41bf1f:	add    ah,ah
  41bf21:	inc    edx
  41bf22:	inc    eax
  41bf23:	add    al,bl
  41bf25:	inc    edx
  41bf26:	inc    eax
  41bf27:	add    BYTE PTR [eax],bh
  41bf29:	inc    eax
  41bf2a:	inc    eax
  41bf2b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41bf2f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41bf35:	mov    ebp,0x451f0041
  41bf3a:	dec    ecx
  41bf3b:	fs inc esi
  41bf3d:	popa   
  41bf3e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x65526f54
  41bf46:	je     0x41bfba
  41bf48:	imul   esi,DWORD PTR gs:[esi+0x65],0x656d6954
  41bf50:	pop    edx
  41bf51:	outs   dx,DWORD PTR ds:[esi]
  41bf52:	outs   dx,BYTE PTR ds:[esi]
  41bf53:	gs dec ecx
  41bf55:	outs   dx,BYTE PTR ds:[esi]
  41bf56:	outs   dx,WORD PTR ds:[esi]
  41bf58:	push   ebp
  41bf59:	mov    ebp,esp
  41bf5b:	add    esp,0xffffff44
  41bf61:	push   ebx
  41bf62:	push   esi
  41bf63:	push   edi
  41bf64:	xor    edx,edx
  41bf66:	mov    DWORD PTR [ebp-0xbc],edx
  41bf6c:	mov    DWORD PTR [ebp-0xb8],edx
  41bf72:	mov    esi,eax
  41bf74:	xor    eax,eax
  41bf76:	push   ebp
  41bf77:	push   0x41c072
  41bf7c:	push   DWORD PTR fs:[eax]
  41bf7f:	mov    DWORD PTR fs:[eax],esp
  41bf82:	lea    eax,[ebp-0xb4]
  41bf88:	push   eax
  41bf89:	call   0x407288
  41bf8e:	sub    eax,0xffffffff
  41bf91:	je     0x41bf9e
  41bf93:	dec    eax
  41bf94:	je     0x41bfc7
  41bf96:	dec    eax
  41bf97:	je     0x41bfda
  41bf99:	dec    eax
  41bf9a:	je     0x41bfcf
  41bf9c:	jmp    0x41bfe5
  41bf9e:	lea    edx,[ebp-0xb8]
  41bfa4:	mov    eax,ds:0x46de78
  41bfa9:	call   0x406f48
  41bfae:	mov    ecx,DWORD PTR [ebp-0xb8]
  41bfb4:	mov    dl,0x1
  41bfb6:	mov    eax,ds:0x41bee8
  41bfbb:	call   0x41bdbc
  41bfc0:	call   0x4048fc
  41bfc5:	jmp    0x41c00c
  41bfc7:	mov    ebx,DWORD PTR [ebp-0xb4]
  41bfcd:	jmp    0x41c00c
  41bfcf:	mov    ebx,DWORD PTR [ebp-0xb4]
  41bfd5:	add    ebx,DWORD PTR [ebp-0xc]
  41bfd8:	jmp    0x41c00c
  41bfda:	mov    ebx,DWORD PTR [ebp-0xb4]
  41bfe0:	add    ebx,DWORD PTR [ebp-0x60]
  41bfe3:	jmp    0x41c00c
  41bfe5:	lea    edx,[ebp-0xbc]
  41bfeb:	mov    eax,ds:0x46de78
  41bff0:	call   0x406f48
  41bff5:	mov    ecx,DWORD PTR [ebp-0xbc]
  41bffb:	mov    dl,0x1
  41bffd:	mov    eax,ds:0x41bee8
  41c002:	call   0x41bdbc
  41c007:	call   0x4048fc
  41c00c:	push   0x0
  41c00e:	push   0x0
  41c010:	mov    eax,ebx
  41c012:	cdq    
  41c013:	xor    eax,edx
  41c015:	sub    eax,edx
  41c017:	mov    ecx,eax
  41c019:	mov    eax,ecx
  41c01b:	mov    edi,0x3c
  41c020:	cdq    
  41c021:	idiv   edi
  41c023:	push   eax
  41c024:	mov    eax,ebx
  41c026:	cdq    
  41c027:	xor    eax,edx
  41c029:	sub    eax,edx
  41c02b:	mov    eax,ecx
  41c02d:	mov    ecx,0x3c
  41c032:	cdq    
  41c033:	idiv   ecx
  41c035:	mov    ecx,edx
  41c037:	mov    eax,esi
  41c039:	pop    edx
  41c03a:	call   0x41b370
  41c03f:	fstp   QWORD PTR [ebp-0x8]
  41c042:	fwait
  41c043:	test   ebx,ebx
  41c045:	jle    0x41c054
  41c047:	fld    DWORD PTR ds:0x41c084
  41c04d:	fsub   QWORD PTR [ebp-0x8]
  41c050:	fstp   QWORD PTR [ebp-0x8]
  41c053:	fwait
  41c054:	xor    eax,eax
  41c056:	pop    edx
  41c057:	pop    ecx
  41c058:	pop    ecx
  41c059:	mov    DWORD PTR fs:[eax],edx
  41c05c:	push   0x41c079
  41c061:	lea    eax,[ebp-0xbc]
  41c067:	mov    edx,0x2
  41c06c:	call   0x404fac
  41c071:	ret    
  41c072:	jmp    0x40481c
  41c077:	jmp    0x41c061
  41c079:	fld    QWORD PTR [ebp-0x8]
  41c07c:	pop    edi
  41c07d:	pop    esi
  41c07e:	pop    ebx
  41c07f:	mov    esp,ebp
  41c081:	pop    ebp
  41c082:	ret    
  41c083:	add    BYTE PTR [eax],al
  41c085:	add    BYTE PTR [eax],al
  41c087:	add    BYTE PTR [ecx+0x46dea0],ah
  41c08d:	mov    eax,DWORD PTR [eax]
  41c08f:	ret    
  41c090:	fadd   st(0),st
  41c092:	inc    ecx
	...
  41c0af:	add    ah,ah
  41c0b1:	rol    BYTE PTR [ecx+0x0],0x4
  41c0b5:	add    BYTE PTR [eax],al
  41c0b7:	add    BYTE PTR [eax-0x2fffbff0],dl
  41c0bd:	inc    edx
  41c0be:	inc    eax
  41c0bf:	add    ah,bl
  41c0c1:	inc    edx
  41c0c2:	inc    eax
  41c0c3:	add    al,ah
  41c0c5:	inc    edx
  41c0c6:	inc    eax
  41c0c7:	add    ah,ah
  41c0c9:	inc    edx
  41c0ca:	inc    eax
  41c0cb:	add    al,bl
  41c0cd:	inc    edx
  41c0ce:	inc    eax
  41c0cf:	add    BYTE PTR [eax],bh
  41c0d1:	inc    eax
  41c0d2:	inc    eax
  41c0d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c0d7:	add    BYTE PTR [eax+0x5c004040],dl
  41c0dd:	rol    DWORD PTR [ecx+0x0],0x60
  41c0e1:	rol    DWORD PTR [ecx+0x0],0xe
  41c0e5:	push   esp
  41c0e6:	push   ebx
  41c0e7:	jns    0x41c157
  41c0e9:	arpl   WORD PTR [eax+0x72],bp
  41c0ec:	outs   dx,DWORD PTR ds:[esi]
  41c0ed:	dec    edi
  41c0ee:	bound  ebp,QWORD PTR [edx+0x65]
  41c0f1:	arpl   WORD PTR [eax+edx*4+0x40],si
  41c0f5:	rol    DWORD PTR [ecx+0x0],0x0
	...
  41c111:	add    BYTE PTR [eax],al
  41c113:	add    BYTE PTR [eax-0x3f],cl
  41c116:	inc    ecx
  41c117:	add    BYTE PTR [eax+eax*1],bl
  41c11a:	add    BYTE PTR [eax],al
  41c11c:	nop
  41c11d:	rol    BYTE PTR [ecx+0x0],0xd0
  41c121:	inc    edx
  41c122:	inc    eax
  41c123:	add    ah,bl
  41c125:	inc    edx
  41c126:	inc    eax
  41c127:	add    al,ah
  41c129:	inc    edx
  41c12a:	inc    eax
  41c12b:	add    ah,ah
  41c12d:	inc    edx
  41c12e:	inc    eax
  41c12f:	add    al,bl
  41c131:	inc    edx
  41c132:	inc    eax
  41c133:	add    BYTE PTR [eax],bh
  41c135:	inc    eax
  41c136:	inc    eax
  41c137:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c13b:	add    BYTE PTR [ecx+eax*8-0x3e2bffbf],ah
  41c142:	inc    ecx
  41c143:	add    al,ah
  41c145:	rol    DWORD PTR [ecx+0x0],0x10
  41c149:	push   esp
  41c14a:	inc    ebx
  41c14b:	jb     0x41c1b6
  41c14d:	je     0x41c1b8
  41c14f:	arpl   WORD PTR [ecx+0x6c],sp
  41c152:	push   ebx
  41c153:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41c158:	outs   dx,BYTE PTR ds:[esi]
  41c159:	lea    eax,[eax+0x0]
  41c15c:	ret    
  41c15d:	lea    eax,[eax+0x0]
  41c160:	ret    
  41c161:	lea    eax,[eax+0x0]
  41c164:	push   ebx
  41c165:	push   esi
  41c166:	test   dl,dl
  41c168:	je     0x41c172
  41c16a:	add    esp,0xfffffff0
  41c16d:	call   0x4043ac
  41c172:	mov    ebx,edx
  41c174:	mov    esi,eax
  41c176:	xor    edx,edx
  41c178:	mov    eax,esi
  41c17a:	call   0x404070
  41c17f:	lea    eax,[esi+0x4]
  41c182:	push   eax
  41c183:	call   0x4072a0
  41c188:	mov    eax,esi
  41c18a:	test   bl,bl
  41c18c:	je     0x41c19d
  41c18e:	call   0x404404
  41c193:	pop    DWORD PTR fs:0x0
  41c19a:	add    esp,0xc
  41c19d:	mov    eax,esi
  41c19f:	pop    esi
  41c1a0:	pop    ebx
  41c1a1:	ret    
  41c1a2:	mov    eax,eax
  41c1a4:	push   ebx
  41c1a5:	push   esi
  41c1a6:	call   0x404454
  41c1ab:	mov    ebx,edx
  41c1ad:	mov    esi,eax
  41c1af:	lea    eax,[esi+0x4]
  41c1b2:	push   eax
  41c1b3:	call   0x407170
  41c1b8:	mov    edx,ebx
  41c1ba:	and    dl,0xfc
  41c1bd:	mov    eax,esi
  41c1bf:	call   0x404090
  41c1c4:	test   bl,bl
  41c1c6:	jle    0x41c1cf
  41c1c8:	mov    eax,esi
  41c1ca:	call   0x4043fc
  41c1cf:	pop    esi
  41c1d0:	pop    ebx
  41c1d1:	ret    
  41c1d2:	mov    eax,eax
  41c1d4:	add    eax,0x4
  41c1d7:	push   eax
  41c1d8:	call   0x407180
  41c1dd:	ret    
  41c1de:	mov    eax,eax
  41c1e0:	add    eax,0x4
  41c1e3:	push   eax
  41c1e4:	call   0x4072a8
  41c1e9:	ret    
  41c1ea:	mov    eax,eax
  41c1ec:	mov    edx,DWORD PTR [eax]
  41c1ee:	call   DWORD PTR [edx]
  41c1f0:	ret    
  41c1f1:	lea    eax,[eax+0x0]
  41c1f4:	mov    edx,DWORD PTR [eax]
  41c1f6:	call   DWORD PTR [edx+0x4]
  41c1f9:	ret    
  41c1fa:	mov    eax,eax
  41c1fc:	dec    eax
  41c1fd:	ret    0x41
	...
  41c21c:	dec    eax
  41c21d:	ret    0x41
  41c220:	add    al,0x0
  41c222:	add    BYTE PTR [eax],al
  41c224:	nop
  41c225:	adc    BYTE PTR [eax+0x0],al
  41c228:	rol    BYTE PTR [edx+0x40],1
  41c22b:	add    ah,bl
  41c22d:	inc    edx
  41c22e:	inc    eax
  41c22f:	add    al,ah
  41c231:	inc    edx
  41c232:	inc    eax
  41c233:	add    ah,ah
  41c235:	inc    edx
  41c236:	inc    eax
  41c237:	add    al,bl
  41c239:	inc    edx
  41c23a:	inc    eax
  41c23b:	add    BYTE PTR [eax],bh
  41c23d:	inc    eax
  41c23e:	inc    eax
  41c23f:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c243:	add    BYTE PTR [eax+0x12004040],dl
  41c249:	push   esp
  41c24a:	dec    ecx
  41c24b:	fs push ebx
  41c24d:	je     0x41c2c1
  41c24f:	gs popa 
  41c251:	ins    DWORD PTR es:[edi],dx
  41c252:	dec    eax
  41c253:	gs ins BYTE PTR es:[edi],dx
  41c255:	jo     0x41c2bc
  41c257:	jb     0x41c2af
  41c259:	inc    ebx
  41c25a:	dec    esp
  41c25b:	nop
  41c25c:	push   ebp
  41c25d:	mov    ebp,esp
  41c25f:	push   ecx
  41c260:	push   ebx
  41c261:	push   esi
  41c262:	push   edi
  41c263:	mov    esi,ecx
  41c265:	mov    edi,edx
  41c267:	test   edi,edi
  41c269:	jne    0x41c27f
  41c26b:	mov    ecx,0x32
  41c270:	mov    edx,0x41c328
  41c275:	mov    eax,0x41c364
  41c27a:	call   0x404eb4
  41c27f:	xor    eax,eax
  41c281:	mov    DWORD PTR [ebp-0x4],eax
  41c284:	cmp    DWORD PTR [esi],0x0
  41c287:	jne    0x41c2a0
  41c289:	push   0x0
  41c28b:	mov    eax,esi
  41c28d:	mov    ecx,0x1
  41c292:	mov    edx,DWORD PTR ds:0x40769c
  41c298:	call   0x4063b0
  41c29d:	add    esp,0x4
  41c2a0:	mov    ebx,DWORD PTR [ebp+0xc]
  41c2a3:	cmp    ebx,0xffffffff
  41c2a6:	jne    0x41c2b9
  41c2a8:	mov    eax,edi
  41c2aa:	mov    edx,DWORD PTR [eax]
  41c2ac:	call   DWORD PTR [edx]
  41c2ae:	mov    ebx,eax
  41c2b0:	mov    eax,edi
  41c2b2:	call   0x4163e4
  41c2b7:	sub    ebx,eax
  41c2b9:	test   ebx,ebx
  41c2bb:	je     0x41c315
  41c2bd:	mov    eax,DWORD PTR [esi]
  41c2bf:	call   0x4061f4
  41c2c4:	mov    edx,DWORD PTR [ebp+0x8]
  41c2c7:	add    edx,ebx
  41c2c9:	cmp    eax,edx
  41c2cb:	jge    0x41c2e8
  41c2cd:	mov    eax,DWORD PTR [ebp+0x8]
  41c2d0:	add    eax,ebx
  41c2d2:	push   eax
  41c2d3:	mov    eax,esi
  41c2d5:	mov    ecx,0x1
  41c2da:	mov    edx,DWORD PTR ds:0x40769c
  41c2e0:	call   0x4063b0
  41c2e5:	add    esp,0x4
  41c2e8:	cmp    DWORD PTR [esi],0x0
  41c2eb:	jne    0x41c301
  41c2ed:	mov    ecx,0x4a
  41c2f2:	mov    edx,0x41c328
  41c2f7:	mov    eax,0x41c364
  41c2fc:	call   0x404eb4
  41c301:	mov    eax,DWORD PTR [esi]
  41c303:	mov    edx,DWORD PTR [ebp+0x8]
  41c306:	lea    edx,[eax+edx*1]
  41c309:	mov    ecx,ebx
  41c30b:	mov    eax,edi
  41c30d:	mov    ebx,DWORD PTR [eax]
  41c30f:	call   DWORD PTR [ebx+0xc]
  41c312:	mov    DWORD PTR [ebp-0x4],eax
  41c315:	mov    eax,DWORD PTR [ebp-0x4]
  41c318:	pop    edi
  41c319:	pop    esi
  41c31a:	pop    ebx
  41c31b:	pop    ecx
  41c31c:	pop    ebp
  41c31d:	ret    0x8
  41c320:	(bad)  
  41c321:	(bad)  
  41c322:	(bad)  
  41c323:	push   DWORD PTR [ecx]
  41c325:	add    BYTE PTR [eax],al
  41c327:	add    BYTE PTR [ebx+0x3a],al
  41c32a:	pop    esp
  41c32b:	inc    edx
  41c32c:	jne    0x41c397
  41c32e:	ins    BYTE PTR es:[edi],dx
  41c32f:	fs jae 0x41c38e
  41c332:	push   esp
  41c333:	jo     0x41c376
  41c335:	fs outs dx,DWORD PTR fs:[esi]
  41c338:	outs   dx,BYTE PTR ds:[esi]
  41c339:	jae    0x41c397
  41c33b:	dec    ecx
  41c33c:	outs   dx,BYTE PTR ds:[esi]
  41c33d:	fs jns 0x41c38e
  41c340:	gs je  0x41c39f
  41c343:	push   ebx
  41c344:	jns    0x41c3b9
  41c346:	je     0x41c3ad
  41c348:	ins    DWORD PTR es:[edi],dx
  41c349:	pop    esp
  41c34a:	dec    ecx
  41c34b:	fs push ebx
  41c34d:	je     0x41c3c1
  41c34f:	gs popa 
  41c351:	ins    DWORD PTR es:[edi],dx
  41c352:	push   esi
  41c353:	inc    ebx
  41c354:	dec    esp
  41c355:	cs jo  0x41c3b9
  41c358:	jae    0x41c35a
  41c35a:	add    BYTE PTR [eax],al
  41c35c:	(bad)  
  41c35d:	(bad)  
  41c35e:	(bad)  
  41c35f:	call   DWORD PTR [ecx]
  41c361:	add    BYTE PTR [eax],al
  41c363:	add    BYTE PTR [ecx+0x73],al
  41c366:	jae    0x41c3cd
  41c368:	jb     0x41c3de
  41c36a:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41c371:	ins    BYTE PTR es:[edi],dx
  41c372:	jne    0x41c3e6
  41c374:	add    BYTE PTR gs:[eax],al
  41c377:	add    BYTE PTR [ebp-0x75],dl
  41c37a:	in     al,dx
  41c37b:	push   ebx
  41c37c:	push   esi
  41c37d:	push   edi
  41c37e:	mov    esi,ecx
  41c380:	mov    edi,edx
  41c382:	test   edi,edi
  41c384:	jne    0x41c39a
  41c386:	mov    ecx,0x53
  41c38b:	mov    edx,0x41c3e8
  41c390:	mov    eax,0x41c424
  41c395:	call   0x404eb4
  41c39a:	mov    ebx,DWORD PTR [ebp+0x8]
  41c39d:	test   esi,esi
  41c39f:	je     0x41c3d6
  41c3a1:	cmp    ebx,0xffffffff
  41c3a4:	jne    0x41c3b1
  41c3a6:	mov    eax,esi
  41c3a8:	call   0x4061f4
  41c3ad:	mov    ebx,eax
  41c3af:	jmp    0x41c3c7
  41c3b1:	mov    eax,ebx
  41c3b3:	cdq    
  41c3b4:	push   edx
  41c3b5:	push   eax
  41c3b6:	mov    eax,esi
  41c3b8:	call   0x4061f4
  41c3bd:	cdq    
  41c3be:	push   edx
  41c3bf:	push   eax
  41c3c0:	call   0x41d1f8
  41c3c5:	mov    ebx,eax
  41c3c7:	test   ebx,ebx
  41c3c9:	jle    0x41c3d6
  41c3cb:	mov    edx,esi
  41c3cd:	mov    ecx,ebx
  41c3cf:	mov    eax,edi
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	call   DWORD PTR [ebx+0x10]
  41c3d6:	pop    edi
  41c3d7:	pop    esi
  41c3d8:	pop    ebx
  41c3d9:	pop    ebp
  41c3da:	ret    0x4
  41c3dd:	add    BYTE PTR [eax],al
  41c3df:	add    bh,bh
  41c3e1:	(bad)  
  41c3e2:	(bad)  
  41c3e3:	push   DWORD PTR [ecx]
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	add    BYTE PTR [ebx+0x3a],al
  41c3ea:	pop    esp
  41c3eb:	inc    edx
  41c3ec:	jne    0x41c457
  41c3ee:	ins    BYTE PTR es:[edi],dx
  41c3ef:	fs jae 0x41c44e
  41c3f2:	push   esp
  41c3f3:	jo     0x41c436
  41c3f5:	fs outs dx,DWORD PTR fs:[esi]
  41c3f8:	outs   dx,BYTE PTR ds:[esi]
  41c3f9:	jae    0x41c457
  41c3fb:	dec    ecx
  41c3fc:	outs   dx,BYTE PTR ds:[esi]
  41c3fd:	fs jns 0x41c44e
  41c400:	gs je  0x41c45f
  41c403:	push   ebx
  41c404:	jns    0x41c479
  41c406:	je     0x41c46d
  41c408:	ins    DWORD PTR es:[edi],dx
  41c409:	pop    esp
  41c40a:	dec    ecx
  41c40b:	fs push ebx
  41c40d:	je     0x41c481
  41c40f:	gs popa 
  41c411:	ins    DWORD PTR es:[edi],dx
  41c412:	push   esi
  41c413:	inc    ebx
  41c414:	dec    esp
  41c415:	cs jo  0x41c479
  41c418:	jae    0x41c41a
  41c41a:	add    BYTE PTR [eax],al
  41c41c:	(bad)  
  41c41d:	(bad)  
  41c41e:	(bad)  
  41c41f:	call   DWORD PTR [ecx]
  41c421:	add    BYTE PTR [eax],al
  41c423:	add    BYTE PTR [ecx+0x73],al
  41c426:	jae    0x41c48d
  41c428:	jb     0x41c49e
  41c42a:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41c431:	ins    BYTE PTR es:[edi],dx
  41c432:	jne    0x41c4a6
  41c434:	add    BYTE PTR gs:[eax],al
  41c437:	add    BYTE PTR [esp+eax*8+0x41],al
	...
  41c456:	add    BYTE PTR [eax],al
  41c458:	mov    al,ds:0xc0041c4
  41c45d:	add    BYTE PTR [eax],al
  41c45f:	add    al,dh
  41c461:	cs inc ecx
  41c463:	add    al,dl
  41c465:	inc    edx
  41c466:	inc    eax
  41c467:	add    ah,bl
  41c469:	inc    edx
  41c46a:	inc    eax
  41c46b:	add    al,ah
  41c46d:	inc    edx
  41c46e:	inc    eax
  41c46f:	add    ah,ah
  41c471:	inc    edx
  41c472:	inc    eax
  41c473:	add    al,bl
  41c475:	inc    edx
  41c476:	inc    eax
  41c477:	add    BYTE PTR [eax],bh
  41c479:	inc    eax
  41c47a:	inc    eax
  41c47b:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c47f:	add    ah,al
  41c481:	push   0x64180041
  41c486:	inc    ecx
  41c487:	add    al,dl
  41c489:	inc    cx
  41c48b:	add    ah,ah
  41c48d:	inc    cx
  41c48f:	add    BYTE PTR [esi+eiz*2+0x66940041],al
  41c496:	inc    ecx
  41c497:	add    BYTE PTR [eiz*2+0x66a40041],bl
  41c49e:	inc    ecx
  41c49f:	add    BYTE PTR [eax],bl
  41c4a1:	push   esp
  41c4a2:	push   edx
  41c4a3:	gs popa 
  41c4a5:	fs inc esi
  41c4a7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x756c6378
  41c4af:	jae    0x41c51a
  41c4b1:	jbe    0x41c518
  41c4b3:	push   ebx
  41c4b4:	je     0x41c528
  41c4b6:	gs popa 
  41c4b8:	ins    DWORD PTR es:[edi],dx
  41c4b9:	lea    eax,[eax+0x0]
  41c4bc:	or     ch,al
  41c4be:	inc    ecx
	...
  41c4db:	add    BYTE PTR [eax],dl
  41c4dd:	lds    eax,FWORD PTR [ecx+0x0]
  41c4e0:	sbb    al,0x0
  41c4e2:	add    BYTE PTR [eax],al
  41c4e4:	hlt    
  41c4e5:	rol    BYTE PTR [ecx+0x0],0xd0
  41c4e9:	inc    edx
  41c4ea:	inc    eax
  41c4eb:	add    ah,bl
  41c4ed:	inc    edx
  41c4ee:	inc    eax
  41c4ef:	add    al,ah
  41c4f1:	inc    edx
  41c4f2:	inc    eax
  41c4f3:	add    ah,ah
  41c4f5:	inc    edx
  41c4f6:	inc    eax
  41c4f7:	add    al,bl
  41c4f9:	inc    edx
  41c4fa:	inc    eax
  41c4fb:	add    BYTE PTR [eax],bh
  41c4fd:	inc    eax
  41c4fe:	inc    eax
  41c4ff:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c503:	add    BYTE PTR [ecx+eax*8-0x3e2bffbf],ah
  41c50a:	inc    ecx
  41c50b:	add    al,ah
  41c50d:	rol    DWORD PTR [ecx+0x0],0x12
  41c511:	push   esp
  41c512:	dec    ecx
  41c513:	fs inc ebx
  41c515:	jb     0x41c580
  41c517:	je     0x41c582
  41c519:	arpl   WORD PTR [ecx+0x6c],sp
  41c51c:	push   ebx
  41c51d:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41c522:	outs   dx,BYTE PTR ds:[esi]
  41c523:	nop
  41c524:	jo     0x41c4eb
  41c526:	inc    ecx
	...
  41c543:	add    BYTE PTR [ebp+eax*8+0x41],dh
  41c547:	add    BYTE PTR [eax+eax*1],cl
  41c54a:	add    BYTE PTR [eax],al
  41c54c:	dec    esp
  41c54d:	mov    ecx,0x42d00041
  41c552:	inc    eax
  41c553:	add    ah,bl
  41c555:	inc    edx
  41c556:	inc    eax
  41c557:	add    al,ah
  41c559:	inc    edx
  41c55a:	inc    eax
  41c55b:	add    ah,ah
  41c55d:	inc    edx
  41c55e:	inc    eax
  41c55f:	add    al,bl
  41c561:	inc    edx
  41c562:	inc    eax
  41c563:	add    BYTE PTR [eax],bh
  41c565:	inc    eax
  41c566:	inc    eax
  41c567:	add    BYTE PTR [eax+eax*2+0x40],dl
  41c56b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41c571:	mov    ebp,0x45150041
  41c576:	dec    ecx
  41c577:	fs dec ecx
  41c579:	outs   dx,BYTE PTR ds:[esi]
  41c57a:	jbe    0x41c5dd
  41c57c:	ins    BYTE PTR es:[edi],dx
  41c57d:	imul   esp,DWORD PTR [ecx+ecx*2+0x50],0x64413676
  41c585:	fs jb  0x41c5ed
  41c588:	jae    0x41c5fd
  41c58a:	mov    eax,eax
  41c58c:	nop
  41c58d:	lds    eax,FWORD PTR [ecx+0x0]
  41c590:	add    edx,DWORD PTR [eax]
  41c592:	push   esp
  41c593:	dec    ecx
  41c594:	fs dec ebp
  41c596:	popa   
  41c597:	js     0x41c5e5
  41c599:	imul   ebp,DWORD PTR [esi+0x65],0x69746341
  41c5a0:	outs   dx,DWORD PTR ds:[esi]
  41c5a1:	outs   dx,BYTE PTR ds:[esi]
  41c5a2:	add    DWORD PTR [eax],eax
  41c5a4:	add    BYTE PTR [eax],al
  41c5a6:	add    BYTE PTR [ecx],al
  41c5a8:	add    BYTE PTR [eax],al
  41c5aa:	add    BYTE PTR [ebp+eax*8+0x6d0b0041],cl
  41c5b1:	popa   
  41c5b2:	inc    ebp
  41c5b3:	js     0x41c618
  41c5b5:	gs jo  0x41c62c
  41c5b8:	imul   ebp,DWORD PTR [edi+0x6e],0x53616d07
  41c5bf:	jo     0x41c62d
  41c5c1:	imul   esi,DWORD PTR [eax+ecx*1+0x49],0x6f6c4764
  41c5c9:	bound  esp,QWORD PTR [ecx+0x6c]
  41c5cc:	rol    ch,1
  41c5ce:	inc    ecx
  41c5cf:	add    BYTE PTR [ebx],al
  41c5d1:	or     al,0x54
  41c5d3:	dec    ecx
  41c5d4:	fs dec ecx
  41c5d6:	push   eax
  41c5d7:	push   esi
  41c5d8:	gs jb  0x41c64e
  41c5db:	imul   ebp,DWORD PTR [edi+0x6e],0x1
  41c5e2:	add    BYTE PTR [ecx],al
  41c5e4:	add    BYTE PTR [eax],al
  41c5e6:	add    ah,cl
  41c5e8:	lds    eax,FWORD PTR [ecx+0x0]
  41c5eb:	pop    es
  41c5ec:	dec    ecx
  41c5ed:	fs pop edi
  41c5ef:	dec    ecx
  41c5f0:	push   eax
  41c5f1:	jbe    0x41c627
  41c5f3:	pop    es
  41c5f4:	dec    ecx
  41c5f5:	fs pop edi
  41c5f7:	dec    ecx
  41c5f8:	push   eax
  41c5f9:	jbe    0x41c631
  41c5fb:	or     BYTE PTR [ecx+0x64],cl
  41c5fe:	inc    edi
  41c5ff:	ins    BYTE PTR es:[edi],dx
  41c600:	outs   dx,DWORD PTR ds:[esi]
  41c601:	bound  esp,QWORD PTR [ecx+0x6c]
  41c604:	push   ebx
  41c605:	push   esi
  41c606:	test   dl,dl
  41c608:	je     0x41c612
  41c60a:	add    esp,0xfffffff0
  41c60d:	call   0x4043ac
  41c612:	mov    ebx,edx
  41c614:	mov    esi,eax
  41c616:	push   0x20
  41c618:	xor    edx,edx
  41c61a:	mov    eax,esi
  41c61c:	call   0x41670c
  41c621:	mov    eax,esi
  41c623:	test   bl,bl
  41c625:	je     0x41c636
  41c627:	call   0x404404
  41c62c:	pop    DWORD PTR fs:0x0
  41c633:	add    esp,0xc
  41c636:	mov    eax,esi
  41c638:	pop    esi
  41c639:	pop    ebx
  41c63a:	ret    
  41c63b:	nop
  41c63c:	push   ebp
  41c63d:	mov    ebp,esp
  41c63f:	add    esp,0xfffffff4
  41c642:	push   ebx
  41c643:	push   esi
  41c644:	push   edi
  41c645:	mov    ebx,ecx
  41c647:	test   ebx,ebx
  41c649:	js     0x41c652
  41c64b:	mov    esi,DWORD PTR [edx+ebx*4]
  41c64e:	dec    ebx
  41c64f:	push   esi
  41c650:	jns    0x41c64b
  41c652:	mov    edx,esp
  41c654:	mov    DWORD PTR [ebp-0xc],ecx
  41c657:	mov    DWORD PTR [ebp-0x4],edx
  41c65a:	mov    DWORD PTR [ebp-0x8],eax
  41c65d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c660:	inc    ecx
  41c661:	mov    eax,DWORD PTR [ebp-0x4]
  41c664:	mov    edx,DWORD PTR ds:0x401084
  41c66a:	call   0x405c90
  41c66f:	xor    eax,eax
  41c671:	push   ebp
  41c672:	push   0x41c6d6
  41c677:	push   DWORD PTR fs:[eax]
  41c67a:	mov    DWORD PTR fs:[eax],esp
  41c67d:	mov    esi,DWORD PTR [ebp-0xc]
  41c680:	test   esi,esi
  41c682:	jl     0x41c6b3
  41c684:	inc    esi
  41c685:	xor    edi,edi
  41c687:	mov    ebx,DWORD PTR [ebp-0x4]
  41c68a:	cmp    BYTE PTR [ebp+0x8],0x0
  41c68e:	je     0x41c69e
  41c690:	mov    eax,DWORD PTR [ebp-0x8]
  41c693:	mov    edx,DWORD PTR [ebx]
  41c695:	call   0x4053b0
  41c69a:	je     0x41c6b6
  41c69c:	jmp    0x41c6ac
  41c69e:	mov    edx,DWORD PTR [ebx]
  41c6a0:	mov    eax,DWORD PTR [ebp-0x8]
  41c6a3:	call   0x41d948
  41c6a8:	test   al,al
  41c6aa:	jne    0x41c6b6
  41c6ac:	inc    edi
  41c6ad:	add    ebx,0x4
  41c6b0:	dec    esi
  41c6b1:	jne    0x41c68a
  41c6b3:	or     edi,0xffffffff
  41c6b6:	xor    eax,eax
  41c6b8:	pop    edx
  41c6b9:	pop    ecx
  41c6ba:	pop    ecx
  41c6bb:	mov    DWORD PTR fs:[eax],edx
  41c6be:	push   0x41c6dd
  41c6c3:	mov    eax,DWORD PTR [ebp-0x4]
  41c6c6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c6c9:	inc    ecx
  41c6ca:	mov    edx,DWORD PTR ds:0x401084
  41c6d0:	call   0x405b50
  41c6d5:	ret    
  41c6d6:	jmp    0x40481c
  41c6db:	jmp    0x41c6c3
  41c6dd:	mov    eax,edi
  41c6df:	mov    edi,DWORD PTR [ebp-0x18]
  41c6e2:	mov    esi,DWORD PTR [ebp-0x14]
  41c6e5:	mov    ebx,DWORD PTR [ebp-0x10]
  41c6e8:	mov    esp,ebp
  41c6ea:	pop    ebp
  41c6eb:	ret    0x4
  41c6ee:	mov    eax,eax
  41c6f0:	push   ebp
  41c6f1:	mov    ebp,esp
  41c6f3:	push   ecx
  41c6f4:	push   ebx
  41c6f5:	push   esi
  41c6f6:	push   edi
  41c6f7:	mov    DWORD PTR [ebp-0x4],ecx
  41c6fa:	mov    edi,edx
  41c6fc:	mov    ebx,eax
  41c6fe:	mov    esi,DWORD PTR [ebp+0x8]
  41c701:	mov    eax,ebx
  41c703:	call   0x4061f4
  41c708:	cmp    esi,eax
  41c70a:	jle    0x41c720
  41c70c:	mov    ecx,0x577
  41c711:	mov    edx,0x41c748
  41c716:	mov    eax,0x41c780
  41c71b:	call   0x404eb4
  41c720:	mov    eax,DWORD PTR [ebp-0x4]
  41c723:	mov    eax,DWORD PTR [eax]
  41c725:	mov    edx,DWORD PTR [ebp+0xc]
  41c728:	lea    edx,[eax+edx*1]
  41c72b:	lea    eax,[ebx+edi*1]
  41c72e:	mov    ecx,esi
  41c730:	call   0x403090
  41c735:	pop    edi
  41c736:	pop    esi
  41c737:	pop    ebx
  41c738:	pop    ecx
  41c739:	pop    ebp
  41c73a:	ret    0x8
  41c73d:	add    BYTE PTR [eax],al
  41c73f:	add    bh,bh
  41c741:	(bad)  
  41c742:	(bad)  
  41c743:	jmp    FWORD PTR [esi]
  41c745:	add    BYTE PTR [eax],al
  41c747:	add    BYTE PTR [ebx+0x3a],al
  41c74a:	pop    esp
  41c74b:	inc    edx
  41c74c:	jne    0x41c7b7
  41c74e:	ins    BYTE PTR es:[edi],dx
  41c74f:	fs jae 0x41c7ae
  41c752:	push   esp
  41c753:	jo     0x41c796
  41c755:	fs outs dx,DWORD PTR fs:[esi]
  41c758:	outs   dx,BYTE PTR ds:[esi]
  41c759:	jae    0x41c7b7
  41c75b:	dec    ecx
  41c75c:	outs   dx,BYTE PTR ds:[esi]
  41c75d:	fs jns 0x41c7ae
  41c760:	gs je  0x41c7bf
  41c763:	push   ebx
  41c764:	jns    0x41c7d9
  41c766:	je     0x41c7cd
  41c768:	ins    DWORD PTR es:[edi],dx
  41c769:	pop    esp
  41c76a:	dec    ecx
  41c76b:	fs inc edi
  41c76d:	ins    BYTE PTR es:[edi],dx
  41c76e:	outs   dx,DWORD PTR ds:[esi]
  41c76f:	bound  esp,QWORD PTR [ecx+0x6c]
  41c772:	cs jo  0x41c7d6
  41c775:	jae    0x41c777
  41c777:	add    bh,bh
  41c779:	(bad)  
  41c77a:	(bad)  
  41c77b:	call   DWORD PTR [ecx]
  41c77d:	add    BYTE PTR [eax],al
  41c77f:	add    BYTE PTR [ecx+0x73],al
  41c782:	jae    0x41c7e9
  41c784:	jb     0x41c7fa
  41c786:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41c78d:	ins    BYTE PTR es:[edi],dx
  41c78e:	jne    0x41c802
  41c790:	add    BYTE PTR gs:[eax],al
  41c793:	add    BYTE PTR [ecx+0x66],dl
  41c796:	mov    DWORD PTR [esp],eax
  41c799:	mov    eax,esp
  41c79b:	mov    edx,DWORD PTR [edx]
  41c79d:	add    edx,ecx
  41c79f:	mov    ecx,0x2
  41c7a4:	call   0x403090
  41c7a9:	pop    edx
  41c7aa:	ret    
  41c7ab:	nop
  41c7ac:	push   ecx
  41c7ad:	mov    DWORD PTR [esp],eax
  41c7b0:	mov    eax,esp
  41c7b2:	mov    edx,DWORD PTR [edx]
  41c7b4:	add    edx,ecx
  41c7b6:	mov    ecx,0x4
  41c7bb:	call   0x403090
  41c7c0:	pop    edx
  41c7c1:	ret    
  41c7c2:	mov    eax,eax
  41c7c4:	push   ebp
  41c7c5:	mov    ebp,esp
  41c7c7:	push   ecx
  41c7c8:	push   ebx
  41c7c9:	push   esi
  41c7ca:	push   edi
  41c7cb:	mov    BYTE PTR [ebp-0x1],cl
  41c7ce:	mov    esi,edx
  41c7d0:	mov    ebx,eax
  41c7d2:	cmp    BYTE PTR [ebp+0xc],0x0
  41c7d6:	je     0x41c850
  41c7d8:	mov    eax,esi
  41c7da:	mov    edx,0x41c874
  41c7df:	call   0x4053b0
  41c7e4:	jne    0x41c7f3
  41c7e6:	mov    edx,DWORD PTR [ebx]
  41c7e8:	mov    eax,esi
  41c7ea:	call   0x405564
  41c7ef:	mov    edi,eax
  41c7f1:	jmp    0x41c7ff
  41c7f3:	mov    edx,DWORD PTR [ebx]
  41c7f5:	mov    eax,esi
  41c7f7:	call   DWORD PTR ds:0x461b08
  41c7fd:	mov    edi,eax
  41c7ff:	test   edi,edi
  41c801:	jne    0x41c81c
  41c803:	mov    eax,DWORD PTR [ebp+0x8]
  41c806:	mov    edx,DWORD PTR [ebx]
  41c808:	call   0x404fdc
  41c80d:	cmp    BYTE PTR [ebp-0x1],0x0
  41c811:	je     0x41c861
  41c813:	mov    eax,ebx
  41c815:	call   0x404f88
  41c81a:	jmp    0x41c861
  41c81c:	mov    eax,DWORD PTR [ebp+0x8]
  41c81f:	push   eax
  41c820:	mov    ecx,edi
  41c822:	dec    ecx
  41c823:	mov    eax,DWORD PTR [ebx]
  41c825:	mov    edx,0x1
  41c82a:	call   0x405480
  41c82f:	cmp    BYTE PTR [ebp-0x1],0x0
  41c833:	je     0x41c861
  41c835:	test   esi,esi
  41c837:	je     0x41c83e
  41c839:	sub    esi,0x4
  41c83c:	mov    esi,DWORD PTR [esi]
  41c83e:	push   ebx
  41c83f:	lea    edx,[esi+edi*1]
  41c842:	mov    eax,DWORD PTR [ebx]
  41c844:	mov    ecx,0x7fffffff
  41c849:	call   0x405480
  41c84e:	jmp    0x41c861
  41c850:	mov    eax,DWORD PTR [ebp+0x8]
  41c853:	push   eax
  41c854:	mov    eax,ebx
  41c856:	movzx  ecx,BYTE PTR [ebp-0x1]
  41c85a:	mov    edx,esi
  41c85c:	call   0x41c878
  41c861:	pop    edi
  41c862:	pop    esi
  41c863:	pop    ebx
  41c864:	pop    ecx
  41c865:	pop    ebp
  41c866:	ret    0x8
  41c869:	add    BYTE PTR [eax],al
  41c86b:	add    bh,bh
  41c86d:	(bad)  
  41c86e:	(bad)  
  41c86f:	inc    DWORD PTR [ecx]
  41c871:	add    BYTE PTR [eax],al
  41c873:	add    BYTE PTR [eax],al
  41c875:	add    BYTE PTR [eax],al
  41c877:	add    BYTE PTR [ebp-0x75],dl
  41c87a:	in     al,dx
  41c87b:	push   0x0
  41c87d:	push   0x0
  41c87f:	push   0x0
  41c881:	push   ebx
  41c882:	push   esi
  41c883:	push   edi
  41c884:	mov    BYTE PTR [ebp-0x1],cl
  41c887:	mov    edi,edx
  41c889:	mov    ebx,eax
  41c88b:	xor    eax,eax
  41c88d:	push   ebp
  41c88e:	push   0x41c94c
  41c893:	push   DWORD PTR fs:[eax]
  41c896:	mov    DWORD PTR fs:[eax],esp
  41c899:	mov    eax,edi
  41c89b:	mov    edx,0x41c964
  41c8a0:	call   0x4053b0
  41c8a5:	jne    0x41c8b4
  41c8a7:	mov    edx,DWORD PTR [ebx]
  41c8a9:	mov    eax,edi
  41c8ab:	call   0x405564
  41c8b0:	mov    esi,eax
  41c8b2:	jmp    0x41c8e2
  41c8b4:	lea    ecx,[ebp-0x8]
  41c8b7:	mov    edx,DWORD PTR [ebx]
  41c8b9:	mov    eax,ds:0x41be90
  41c8be:	call   0x41b2c4
  41c8c3:	mov    eax,DWORD PTR [ebp-0x8]
  41c8c6:	push   eax
  41c8c7:	lea    ecx,[ebp-0xc]
  41c8ca:	mov    edx,edi
  41c8cc:	mov    eax,ds:0x41be90
  41c8d1:	call   0x41b2c4
  41c8d6:	mov    eax,DWORD PTR [ebp-0xc]
  41c8d9:	pop    edx
  41c8da:	call   DWORD PTR ds:0x461b08
  41c8e0:	mov    esi,eax
  41c8e2:	test   esi,esi
  41c8e4:	jne    0x41c8ff
  41c8e6:	mov    eax,DWORD PTR [ebp+0x8]
  41c8e9:	mov    edx,DWORD PTR [ebx]
  41c8eb:	call   0x404fdc
  41c8f0:	cmp    BYTE PTR [ebp-0x1],0x0
  41c8f4:	je     0x41c931
  41c8f6:	mov    eax,ebx
  41c8f8:	call   0x404f88
  41c8fd:	jmp    0x41c931
  41c8ff:	mov    eax,DWORD PTR [ebp+0x8]
  41c902:	push   eax
  41c903:	mov    ecx,esi
  41c905:	dec    ecx
  41c906:	mov    eax,DWORD PTR [ebx]
  41c908:	mov    edx,0x1
  41c90d:	call   0x405480
  41c912:	cmp    BYTE PTR [ebp-0x1],0x0
  41c916:	je     0x41c931
  41c918:	test   edi,edi
  41c91a:	je     0x41c921
  41c91c:	sub    edi,0x4
  41c91f:	mov    edi,DWORD PTR [edi]
  41c921:	push   ebx
  41c922:	lea    edx,[edi+esi*1]
  41c925:	mov    eax,DWORD PTR [ebx]
  41c927:	mov    ecx,0x7fffffff
  41c92c:	call   0x405480
  41c931:	xor    eax,eax
  41c933:	pop    edx
  41c934:	pop    ecx
  41c935:	pop    ecx
  41c936:	mov    DWORD PTR fs:[eax],edx
  41c939:	push   0x41c953
  41c93e:	lea    eax,[ebp-0xc]
  41c941:	mov    edx,0x2
  41c946:	call   0x404fac
  41c94b:	ret    
  41c94c:	jmp    0x40481c
  41c951:	jmp    0x41c93e
  41c953:	pop    edi
  41c954:	pop    esi
  41c955:	pop    ebx
  41c956:	mov    esp,ebp
  41c958:	pop    ebp
  41c959:	ret    0x4
  41c95c:	(bad)  
  41c95d:	(bad)  
  41c95e:	(bad)  
  41c95f:	inc    DWORD PTR [ecx]
  41c961:	add    BYTE PTR [eax],al
  41c963:	add    BYTE PTR [eax],al
  41c965:	add    BYTE PTR [eax],al
  41c967:	add    BYTE PTR [ebx+0x448df0c4],al
  41c96d:	and    al,0x8
  41c96f:	push   eax
  41c970:	call   0x4072c0
  41c975:	test   eax,eax
  41c977:	je     0x41c9a3
  41c979:	push   esp
  41c97a:	call   0x4072b8
  41c97f:	test   eax,eax
  41c981:	je     0x41c99c
  41c983:	fild   QWORD PTR [esp]
  41c986:	fild   QWORD PTR [esp+0x8]
  41c98a:	fdivp  st(1),st
  41c98c:	fmul   DWORD PTR ds:0x41c9ac
  41c992:	call   0x403314
  41c997:	and    eax,0xffffffff
  41c99a:	jmp    0x41c9a8
  41c99c:	call   0x407280
  41c9a1:	jmp    0x41c9a8
  41c9a3:	call   0x407280
  41c9a8:	add    esp,0x10
  41c9ab:	ret    
  41c9ac:	add    BYTE PTR [eax],al
  41c9ae:	jp     0x41c9f4
  41c9b0:	cmp    eax,edx
  41c9b2:	ja     0x41c9b9
  41c9b4:	sub    edx,eax
  41c9b6:	mov    eax,edx
  41c9b8:	ret    
  41c9b9:	or     ecx,0xffffffff
  41c9bc:	sub    ecx,eax
  41c9be:	add    edx,ecx
  41c9c0:	mov    eax,edx
  41c9c2:	ret    
  41c9c3:	nop
  41c9c4:	push   ebp
  41c9c5:	mov    ebp,esp
  41c9c7:	push   ebx
  41c9c8:	push   esi
  41c9c9:	push   edi
  41c9ca:	mov    edi,ecx
  41c9cc:	mov    esi,edx
  41c9ce:	mov    ebx,DWORD PTR [ebp+0x8]
  41c9d1:	test   al,al
  41c9d3:	je     0x41c9e0
  41c9d5:	mov    eax,ebx
  41c9d7:	mov    edx,esi
  41c9d9:	call   0x404fdc
  41c9de:	jmp    0x41c9e9
  41c9e0:	mov    eax,ebx
  41c9e2:	mov    edx,edi
  41c9e4:	call   0x404fdc
  41c9e9:	pop    edi
  41c9ea:	pop    esi
  41c9eb:	pop    ebx
  41c9ec:	pop    ebp
  41c9ed:	ret    0x4
  41c9f0:	cmp    al,0x30
  41c9f2:	jb     0x41c9f8
  41c9f4:	cmp    al,0x37
  41c9f6:	jbe    0x41c9fb
  41c9f8:	xor    eax,eax
  41c9fa:	ret    
  41c9fb:	mov    al,0x1
  41c9fd:	ret    
  41c9fe:	mov    eax,eax
  41ca00:	push   ebx
  41ca01:	push   esi
  41ca02:	push   edi
  41ca03:	push   ebp
  41ca04:	mov    edi,eax
  41ca06:	mov    bl,0x1
  41ca08:	mov    eax,edi
  41ca0a:	test   eax,eax
  41ca0c:	je     0x41ca13
  41ca0e:	sub    eax,0x4
  41ca11:	mov    eax,DWORD PTR [eax]
  41ca13:	mov    ebp,eax
  41ca15:	test   ebp,ebp
  41ca17:	jle    0x41ca32
  41ca19:	mov    esi,0x1
  41ca1e:	movzx  eax,BYTE PTR [edi+esi*1-0x1]
  41ca23:	call   0x41c9f0
  41ca28:	test   al,al
  41ca2a:	jne    0x41ca2e
  41ca2c:	xor    ebx,ebx
  41ca2e:	inc    esi
  41ca2f:	dec    ebp
  41ca30:	jne    0x41ca1e
  41ca32:	mov    eax,ebx
  41ca34:	pop    ebp
  41ca35:	pop    edi
  41ca36:	pop    esi
  41ca37:	pop    ebx
  41ca38:	ret    
  41ca39:	lea    eax,[eax+0x0]
  41ca3c:	cmp    al,0x30
  41ca3e:	jb     0x41ca44
  41ca40:	cmp    al,0x39
  41ca42:	jbe    0x41ca57
  41ca44:	cmp    al,0x41
  41ca46:	jb     0x41ca4c
  41ca48:	cmp    al,0x46
  41ca4a:	jbe    0x41ca57
  41ca4c:	cmp    al,0x61
  41ca4e:	jb     0x41ca54
  41ca50:	cmp    al,0x66
  41ca52:	jbe    0x41ca57
  41ca54:	xor    eax,eax
  41ca56:	ret    
  41ca57:	mov    al,0x1
  41ca59:	ret    
  41ca5a:	mov    eax,eax
  41ca5c:	push   ebx
  41ca5d:	push   esi
  41ca5e:	push   edi
  41ca5f:	push   ebp
  41ca60:	mov    edi,eax
  41ca62:	mov    bl,0x1
  41ca64:	mov    eax,edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41ca6f
  41ca6a:	sub    eax,0x4
  41ca6d:	mov    eax,DWORD PTR [eax]
  41ca6f:	mov    ebp,eax
  41ca71:	test   ebp,ebp
  41ca73:	jle    0x41ca8e
  41ca75:	mov    esi,0x1
  41ca7a:	movzx  eax,BYTE PTR [edi+esi*1-0x1]
  41ca7f:	call   0x41ca3c
  41ca84:	test   al,al
  41ca86:	jne    0x41ca8a
  41ca88:	xor    ebx,ebx
  41ca8a:	inc    esi
  41ca8b:	dec    ebp
  41ca8c:	jne    0x41ca7a
  41ca8e:	mov    eax,ebx
  41ca90:	pop    ebp
  41ca91:	pop    edi
  41ca92:	pop    esi
  41ca93:	pop    ebx
  41ca94:	ret    
  41ca95:	lea    eax,[eax+0x0]
  41ca98:	push   ebx
  41ca99:	add    esp,0xfffffff0
  41ca9c:	mov    ebx,eax
  41ca9e:	mov    edx,esp
  41caa0:	mov    eax,ebx
  41caa2:	call   0x405fdc
  41caa7:	cmp    DWORD PTR [esp],0x0
  41caab:	sete   al
  41caae:	add    esp,0x10
  41cab1:	pop    ebx
  41cab2:	ret    
  41cab3:	nop
  41cab4:	push   ebp
  41cab5:	mov    ebp,esp
  41cab7:	add    esp,0xfffffff8
  41caba:	push   ebx
  41cabb:	push   esi
  41cabc:	push   edi
  41cabd:	xor    ecx,ecx
  41cabf:	mov    DWORD PTR [ebp-0x8],ecx
  41cac2:	mov    edi,edx
  41cac4:	mov    DWORD PTR [ebp-0x4],eax
  41cac7:	xor    eax,eax
  41cac9:	push   ebp
  41caca:	push   0x41cb2c
  41cacf:	push   DWORD PTR fs:[eax]
  41cad2:	mov    DWORD PTR fs:[eax],esp
  41cad5:	mov    eax,edi
  41cad7:	call   0x404f88
  41cadc:	mov    esi,0x8
  41cae1:	mov    ebx,DWORD PTR [ebp-0x4]
  41cae4:	push   DWORD PTR [edi]
  41cae6:	push   0x41cb44
  41caeb:	lea    eax,[ebp-0x8]
  41caee:	push   eax
  41caef:	movzx  edx,WORD PTR [ebx]
  41caf2:	mov    ecx,0x4
  41caf7:	mov    eax,ds:0x41be90
  41cafc:	call   0x41b168
  41cb01:	push   DWORD PTR [ebp-0x8]
  41cb04:	mov    eax,edi
  41cb06:	mov    edx,0x3
  41cb0b:	call   0x40531c
  41cb10:	add    ebx,0x2
  41cb13:	dec    esi
  41cb14:	jne    0x41cae4
  41cb16:	xor    eax,eax
  41cb18:	pop    edx
  41cb19:	pop    ecx
  41cb1a:	pop    ecx
  41cb1b:	mov    DWORD PTR fs:[eax],edx
  41cb1e:	push   0x41cb33
  41cb23:	lea    eax,[ebp-0x8]
  41cb26:	call   0x404f88
  41cb2b:	ret    
  41cb2c:	jmp    0x40481c
  41cb31:	jmp    0x41cb23
  41cb33:	pop    edi
  41cb34:	pop    esi
  41cb35:	pop    ebx
  41cb36:	pop    ecx
  41cb37:	pop    ecx
  41cb38:	pop    ebp
  41cb39:	ret    
  41cb3a:	add    BYTE PTR [eax],al
  41cb3c:	(bad)  
  41cb3d:	(bad)  
  41cb3e:	(bad)  
  41cb3f:	inc    DWORD PTR [ecx]
  41cb41:	add    BYTE PTR [eax],al
  41cb43:	add    BYTE PTR [edx],bh
  41cb45:	add    BYTE PTR [eax],al
  41cb47:	add    BYTE PTR [ebp-0x75],dl
  41cb4a:	in     al,dx
  41cb4b:	mov    ecx,0x11
  41cb50:	push   0x0
  41cb52:	push   0x0
  41cb54:	dec    ecx
  41cb55:	jne    0x41cb50
  41cb57:	push   ebx
  41cb58:	push   esi
  41cb59:	push   edi
  41cb5a:	mov    esi,edx
  41cb5c:	mov    ebx,eax
  41cb5e:	xor    eax,eax
  41cb60:	push   ebp
  41cb61:	push   0x41d073
  41cb66:	push   DWORD PTR fs:[eax]
  41cb69:	mov    DWORD PTR fs:[eax],esp
  41cb6c:	mov    eax,esi
  41cb6e:	call   0x404f88
  41cb73:	lea    eax,[ebp-0x4]
  41cb76:	mov    edx,ebx
  41cb78:	call   0x405020
  41cb7d:	mov    eax,DWORD PTR [ebp-0x4]
  41cb80:	test   eax,eax
  41cb82:	je     0x41cb89
  41cb84:	sub    eax,0x4
  41cb87:	mov    eax,DWORD PTR [eax]
  41cb89:	test   eax,eax
  41cb8b:	je     0x41d04d
  41cb91:	mov    eax,DWORD PTR [ebp-0x4]
  41cb94:	cmp    BYTE PTR [eax],0x3a
  41cb97:	jne    0x41cba9
  41cb99:	lea    eax,[ebp-0x4]
  41cb9c:	mov    ecx,DWORD PTR [ebp-0x4]
  41cb9f:	mov    edx,0x41d08c
  41cba4:	call   0x4052a0
  41cba9:	mov    eax,DWORD PTR [ebp-0x4]
  41cbac:	test   eax,eax
  41cbae:	je     0x41cbb5
  41cbb0:	sub    eax,0x4
  41cbb3:	mov    eax,DWORD PTR [eax]
  41cbb5:	mov    edx,DWORD PTR [ebp-0x4]
  41cbb8:	cmp    BYTE PTR [edx+eax*1-0x1],0x3a
  41cbbd:	jne    0x41cbcc
  41cbbf:	lea    eax,[ebp-0x4]
  41cbc2:	mov    edx,0x41d08c
  41cbc7:	call   0x405254
  41cbcc:	xor    eax,eax
  41cbce:	mov    DWORD PTR [ebp-0x8],eax
  41cbd1:	xor    eax,eax
  41cbd3:	mov    DWORD PTR [ebp-0xc],eax
  41cbd6:	mov    eax,DWORD PTR [ebp-0x4]
  41cbd9:	test   eax,eax
  41cbdb:	je     0x41cbe2
  41cbdd:	sub    eax,0x4
  41cbe0:	mov    eax,DWORD PTR [eax]
  41cbe2:	test   eax,eax
  41cbe4:	jle    0x41cc60
  41cbe6:	mov    DWORD PTR [ebp-0x14],eax
  41cbe9:	mov    eax,0x1
  41cbee:	mov    edx,DWORD PTR [ebp-0x4]
  41cbf1:	movzx  edx,BYTE PTR [edx+eax*1-0x1]
  41cbf6:	cmp    edx,0x3a
  41cbf9:	jg     0x41cc0f
  41cbfb:	je     0x41cc3a
  41cbfd:	sub    edx,0x2e
  41cc00:	je     0x41cc24
  41cc02:	add    edx,0xfffffffe
  41cc05:	sub    edx,0xa
  41cc08:	jb     0x41cc5a
  41cc0a:	jmp    0x41d04d
  41cc0f:	add    edx,0xffffffbf
  41cc12:	sub    edx,0x6
  41cc15:	jb     0x41cc50
  41cc17:	add    edx,0xffffffe6
  41cc1a:	sub    edx,0x6
  41cc1d:	jb     0x41cc50
  41cc1f:	jmp    0x41d04d
  41cc24:	inc    DWORD PTR [ebp-0x8]
  41cc27:	cmp    DWORD PTR [ebp-0x8],0x4
  41cc2b:	jge    0x41d04d
  41cc31:	mov    edx,DWORD PTR [ebp-0x8]
  41cc34:	mov    DWORD PTR [ebp+edx*4-0x44],eax
  41cc38:	jmp    0x41cc5a
  41cc3a:	inc    DWORD PTR [ebp-0xc]
  41cc3d:	cmp    DWORD PTR [ebp-0xc],0x8
  41cc41:	jge    0x41d04d
  41cc47:	mov    edx,DWORD PTR [ebp-0xc]
  41cc4a:	mov    DWORD PTR [ebp+edx*4-0x38],eax
  41cc4e:	jmp    0x41cc5a
  41cc50:	cmp    DWORD PTR [ebp-0x8],0x0
  41cc54:	jg     0x41d04d
  41cc5a:	inc    eax
  41cc5b:	dec    DWORD PTR [ebp-0x14]
  41cc5e:	jne    0x41cbee
  41cc60:	mov    eax,DWORD PTR [ebp-0x8]
  41cc63:	test   eax,eax
  41cc65:	je     0x41cc70
  41cc67:	sub    eax,0x3
  41cc6a:	jne    0x41d04d
  41cc70:	cmp    DWORD PTR [ebp-0x8],0x3
  41cc74:	jne    0x41cc97
  41cc76:	mov    eax,DWORD PTR [ebp-0xc]
  41cc79:	add    eax,0xfffffffe
  41cc7c:	sub    eax,0x5
  41cc7f:	jae    0x41d04d
  41cc85:	mov    eax,DWORD PTR [ebp-0xc]
  41cc88:	mov    eax,DWORD PTR [ebp+eax*4-0x38]
  41cc8c:	cmp    eax,DWORD PTR [ebp-0x40]
  41cc8f:	jg     0x41d04d
  41cc95:	jmp    0x41cca6
  41cc97:	mov    eax,DWORD PTR [ebp-0xc]
  41cc9a:	add    eax,0xfffffffe
  41cc9d:	sub    eax,0x6
  41cca0:	jae    0x41d04d
  41cca6:	lea    eax,[ebp-0x48]
  41cca9:	push   eax
  41ccaa:	mov    ecx,DWORD PTR [ebp-0x34]
  41ccad:	dec    ecx
  41ccae:	mov    edx,0x1
  41ccb3:	mov    eax,DWORD PTR [ebp-0x4]
  41ccb6:	call   0x405480
  41ccbb:	mov    ecx,DWORD PTR [ebp-0x48]
  41ccbe:	lea    eax,[ebp-0x44]
  41ccc1:	mov    edx,0x41d098
  41ccc6:	call   0x4052a0
  41cccb:	mov    edx,DWORD PTR [ebp-0x44]
  41ccce:	or     ecx,0xffffffff
  41ccd1:	mov    eax,ds:0x41be90
  41ccd6:	call   0x41b254
  41ccdb:	mov    edi,eax
  41ccdd:	test   edi,edi
  41ccdf:	jl     0x41d04d
  41cce5:	cmp    edi,0xffff
  41cceb:	jg     0x41d04d
  41ccf1:	lea    eax,[ebp-0x4c]
  41ccf4:	push   eax
  41ccf5:	mov    ecx,0x1
  41ccfa:	mov    edx,edi
  41ccfc:	mov    eax,ds:0x41be90
  41cd01:	call   0x41b168
  41cd06:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd09:	mov    eax,esi
  41cd0b:	mov    ecx,0x41d0a4
  41cd10:	call   0x4052a0
  41cd15:	mov    BYTE PTR [ebp-0xd],0x0
  41cd19:	mov    eax,DWORD PTR [ebp-0xc]
  41cd1c:	sub    eax,0x2
  41cd1f:	jl     0x41cdfe
  41cd25:	inc    eax
  41cd26:	mov    DWORD PTR [ebp-0x14],eax
  41cd29:	lea    ebx,[ebp-0x34]
  41cd2c:	mov    eax,DWORD PTR [ebx+0x4]
  41cd2f:	dec    eax
  41cd30:	mov    edi,DWORD PTR [ebx]
  41cd32:	cmp    eax,edi
  41cd34:	jne    0x41cd78
  41cd36:	cmp    BYTE PTR [ebp-0xd],0x0
  41cd3a:	je     0x41cd48
  41cd3c:	mov    eax,esi
  41cd3e:	call   0x404f88
  41cd43:	jmp    0x41d04d
  41cd48:	mov    BYTE PTR [ebp-0xd],0x1
  41cd4c:	mov    eax,0x8
  41cd51:	sub    eax,DWORD PTR [ebp-0xc]
  41cd54:	cmp    DWORD PTR [ebp-0x8],0x0
  41cd58:	jle    0x41cd5d
  41cd5a:	sub    eax,0x2
  41cd5d:	mov    edi,eax
  41cd5f:	test   edi,edi
  41cd61:	jle    0x41cdf2
  41cd67:	mov    eax,esi
  41cd69:	mov    edx,0x41d0b0
  41cd6e:	call   0x405254
  41cd73:	dec    edi
  41cd74:	jne    0x41cd67
  41cd76:	jmp    0x41cdf2
  41cd78:	lea    eax,[ebp-0x54]
  41cd7b:	push   eax
  41cd7c:	mov    ecx,DWORD PTR [ebx+0x4]
  41cd7f:	sub    ecx,edi
  41cd81:	dec    ecx
  41cd82:	mov    edx,edi
  41cd84:	inc    edx
  41cd85:	mov    eax,DWORD PTR [ebp-0x4]
  41cd88:	call   0x405480
  41cd8d:	mov    ecx,DWORD PTR [ebp-0x54]
  41cd90:	lea    eax,[ebp-0x50]
  41cd93:	mov    edx,0x41d098
  41cd98:	call   0x4052a0
  41cd9d:	mov    edx,DWORD PTR [ebp-0x50]
  41cda0:	or     ecx,0xffffffff
  41cda3:	mov    eax,ds:0x41be90
  41cda8:	call   0x41b254
  41cdad:	mov    edi,eax
  41cdaf:	test   edi,edi
  41cdb1:	jl     0x41cdbb
  41cdb3:	cmp    edi,0xffff
  41cdb9:	jle    0x41cdc7
  41cdbb:	mov    eax,esi
  41cdbd:	call   0x404f88
  41cdc2:	jmp    0x41d04d
  41cdc7:	push   DWORD PTR [esi]
  41cdc9:	lea    eax,[ebp-0x58]
  41cdcc:	push   eax
  41cdcd:	mov    ecx,0x1
  41cdd2:	mov    edx,edi
  41cdd4:	mov    eax,ds:0x41be90
  41cdd9:	call   0x41b168
  41cdde:	push   DWORD PTR [ebp-0x58]
  41cde1:	push   0x41d0a4
  41cde6:	mov    eax,esi
  41cde8:	mov    edx,0x3
  41cded:	call   0x40531c
  41cdf2:	add    ebx,0x4
  41cdf5:	dec    DWORD PTR [ebp-0x14]
  41cdf8:	jne    0x41cd2c
  41cdfe:	cmp    DWORD PTR [ebp-0x8],0x0
  41ce02:	jne    0x41ce82
  41ce04:	lea    eax,[ebp-0x60]
  41ce07:	push   eax
  41ce08:	mov    eax,DWORD PTR [ebp-0xc]
  41ce0b:	mov    edx,DWORD PTR [ebp+eax*4-0x38]
  41ce0f:	inc    edx
  41ce10:	mov    ecx,0x7fffffff
  41ce15:	mov    eax,DWORD PTR [ebp-0x4]
  41ce18:	call   0x405480
  41ce1d:	mov    ecx,DWORD PTR [ebp-0x60]
  41ce20:	lea    eax,[ebp-0x5c]
  41ce23:	mov    edx,0x41d098
  41ce28:	call   0x4052a0
  41ce2d:	mov    edx,DWORD PTR [ebp-0x5c]
  41ce30:	or     ecx,0xffffffff
  41ce33:	mov    eax,ds:0x41be90
  41ce38:	call   0x41b254
  41ce3d:	mov    edi,eax
  41ce3f:	test   edi,edi
  41ce41:	jl     0x41ce4b
  41ce43:	cmp    edi,0xffff
  41ce49:	jle    0x41ce57
  41ce4b:	mov    eax,esi
  41ce4d:	call   0x404f88
  41ce52:	jmp    0x41d04d
  41ce57:	push   DWORD PTR [esi]
  41ce59:	lea    eax,[ebp-0x64]
  41ce5c:	push   eax
  41ce5d:	mov    ecx,0x1
  41ce62:	mov    edx,edi
  41ce64:	mov    eax,ds:0x41be90
  41ce69:	call   0x41b168
  41ce6e:	push   DWORD PTR [ebp-0x64]
  41ce71:	push   0x41d0a4
  41ce76:	mov    eax,esi
  41ce78:	mov    edx,0x3
  41ce7d:	call   0x40531c
  41ce82:	cmp    DWORD PTR [ebp-0x8],0x0
  41ce86:	jle    0x41d02c
  41ce8c:	lea    eax,[ebp-0x68]
  41ce8f:	push   eax
  41ce90:	mov    eax,DWORD PTR [ebp-0xc]
  41ce93:	mov    ebx,DWORD PTR [ebp+eax*4-0x38]
  41ce97:	mov    ecx,DWORD PTR [ebp-0x40]
  41ce9a:	sub    ecx,ebx
  41ce9c:	dec    ecx
  41ce9d:	mov    edx,ebx
  41ce9f:	inc    edx
  41cea0:	mov    eax,DWORD PTR [ebp-0x4]
  41cea3:	call   0x405480
  41cea8:	mov    edx,DWORD PTR [ebp-0x68]
  41ceab:	or     ecx,0xffffffff
  41ceae:	mov    eax,ds:0x41be90
  41ceb3:	call   0x41b254
  41ceb8:	mov    edi,eax
  41ceba:	test   edi,edi
  41cebc:	jl     0x41cec6
  41cebe:	cmp    edi,0xff
  41cec4:	jle    0x41ced2
  41cec6:	mov    eax,esi
  41cec8:	call   0x404f88
  41cecd:	jmp    0x41d04d
  41ced2:	lea    eax,[ebp-0x6c]
  41ced5:	push   eax
  41ced6:	mov    ecx,0x2
  41cedb:	mov    edx,edi
  41cedd:	mov    eax,ds:0x41be90
  41cee2:	call   0x41b168
  41cee7:	mov    edx,DWORD PTR [ebp-0x6c]
  41ceea:	mov    eax,esi
  41ceec:	call   0x405254
  41cef1:	lea    eax,[ebp-0x70]
  41cef4:	push   eax
  41cef5:	mov    ecx,DWORD PTR [ebp-0x3c]
  41cef8:	mov    ebx,DWORD PTR [ebp-0x40]
  41cefb:	sub    ecx,ebx
  41cefd:	dec    ecx
  41cefe:	mov    edx,ebx
  41cf00:	inc    edx
  41cf01:	mov    eax,DWORD PTR [ebp-0x4]
  41cf04:	call   0x405480
  41cf09:	mov    edx,DWORD PTR [ebp-0x70]
  41cf0c:	or     ecx,0xffffffff
  41cf0f:	mov    eax,ds:0x41be90
  41cf14:	call   0x41b254
  41cf19:	mov    edi,eax
  41cf1b:	test   edi,edi
  41cf1d:	jl     0x41cf27
  41cf1f:	cmp    edi,0xff
  41cf25:	jle    0x41cf33
  41cf27:	mov    eax,esi
  41cf29:	call   0x404f88
  41cf2e:	jmp    0x41d04d
  41cf33:	push   DWORD PTR [esi]
  41cf35:	lea    eax,[ebp-0x74]
  41cf38:	push   eax
  41cf39:	mov    ecx,0x2
  41cf3e:	mov    edx,edi
  41cf40:	mov    eax,ds:0x41be90
  41cf45:	call   0x41b168
  41cf4a:	push   DWORD PTR [ebp-0x74]
  41cf4d:	push   0x41d0a4
  41cf52:	mov    eax,esi
  41cf54:	mov    edx,0x3
  41cf59:	call   0x40531c
  41cf5e:	lea    eax,[ebp-0x78]
  41cf61:	push   eax
  41cf62:	mov    ecx,DWORD PTR [ebp-0x38]
  41cf65:	mov    ebx,DWORD PTR [ebp-0x3c]
  41cf68:	sub    ecx,ebx
  41cf6a:	dec    ecx
  41cf6b:	mov    edx,ebx
  41cf6d:	inc    edx
  41cf6e:	mov    eax,DWORD PTR [ebp-0x4]
  41cf71:	call   0x405480
  41cf76:	mov    edx,DWORD PTR [ebp-0x78]
  41cf79:	or     ecx,0xffffffff
  41cf7c:	mov    eax,ds:0x41be90
  41cf81:	call   0x41b254
  41cf86:	mov    edi,eax
  41cf88:	test   edi,edi
  41cf8a:	jl     0x41cf94
  41cf8c:	cmp    edi,0xff
  41cf92:	jle    0x41cfa0
  41cf94:	mov    eax,esi
  41cf96:	call   0x404f88
  41cf9b:	jmp    0x41d04d
  41cfa0:	lea    eax,[ebp-0x7c]
  41cfa3:	push   eax
  41cfa4:	mov    ecx,0x2
  41cfa9:	mov    edx,edi
  41cfab:	mov    eax,ds:0x41be90
  41cfb0:	call   0x41b168
  41cfb5:	mov    edx,DWORD PTR [ebp-0x7c]
  41cfb8:	mov    eax,esi
  41cfba:	call   0x405254
  41cfbf:	lea    eax,[ebp-0x80]
  41cfc2:	push   eax
  41cfc3:	mov    edx,DWORD PTR [ebp-0x38]
  41cfc6:	inc    edx
  41cfc7:	mov    ecx,0x3
  41cfcc:	mov    eax,DWORD PTR [ebp-0x4]
  41cfcf:	call   0x405480
  41cfd4:	mov    edx,DWORD PTR [ebp-0x80]
  41cfd7:	or     ecx,0xffffffff
  41cfda:	mov    eax,ds:0x41be90
  41cfdf:	call   0x41b254
  41cfe4:	mov    edi,eax
  41cfe6:	test   edi,edi
  41cfe8:	jl     0x41cff2
  41cfea:	cmp    edi,0xff
  41cff0:	jle    0x41cffb
  41cff2:	mov    eax,esi
  41cff4:	call   0x404f88
  41cff9:	jmp    0x41d04d
  41cffb:	push   DWORD PTR [esi]
  41cffd:	lea    eax,[ebp-0x84]
  41d003:	push   eax
  41d004:	mov    ecx,0x2
  41d009:	mov    edx,edi
  41d00b:	mov    eax,ds:0x41be90
  41d010:	call   0x41b168
  41d015:	push   DWORD PTR [ebp-0x84]
  41d01b:	push   0x41d0a4
  41d020:	mov    eax,esi
  41d022:	mov    edx,0x3
  41d027:	call   0x40531c
  41d02c:	mov    eax,DWORD PTR [esi]
  41d02e:	mov    DWORD PTR [ebp-0x88],eax
  41d034:	mov    eax,DWORD PTR [ebp-0x88]
  41d03a:	test   eax,eax
  41d03c:	je     0x41d043
  41d03e:	sub    eax,0x4
  41d041:	mov    eax,DWORD PTR [eax]
  41d043:	mov    edx,eax
  41d045:	dec    edx
  41d046:	mov    eax,esi
  41d048:	call   0x4056a8
  41d04d:	xor    eax,eax
  41d04f:	pop    edx
  41d050:	pop    ecx
  41d051:	pop    ecx
  41d052:	mov    DWORD PTR fs:[eax],edx
  41d055:	push   0x41d07a
  41d05a:	lea    eax,[ebp-0x84]
  41d060:	mov    edx,0x11
  41d065:	call   0x404fac
  41d06a:	lea    eax,[ebp-0x4]
  41d06d:	call   0x404f88
  41d072:	ret    
  41d073:	jmp    0x40481c
  41d078:	jmp    0x41d05a
  41d07a:	pop    edi
  41d07b:	pop    esi
  41d07c:	pop    ebx
  41d07d:	mov    esp,ebp
  41d07f:	pop    ebp
  41d080:	ret    
  41d081:	add    BYTE PTR [eax],al
  41d083:	add    bh,bh
  41d085:	(bad)  
  41d086:	(bad)  
  41d087:	inc    DWORD PTR [ecx]
  41d089:	add    BYTE PTR [eax],al
  41d08b:	add    BYTE PTR [eax],dh
  41d08d:	add    BYTE PTR [eax],al
  41d08f:	add    bh,bh
  41d091:	(bad)  
  41d092:	(bad)  
  41d093:	inc    DWORD PTR [ecx]
  41d095:	add    BYTE PTR [eax],al
  41d097:	add    BYTE PTR [eax+eax*1],ah
  41d09a:	add    BYTE PTR [eax],al
  41d09c:	(bad)  
  41d09d:	(bad)  
  41d09e:	(bad)  
  41d09f:	inc    DWORD PTR [ecx]
  41d0a1:	add    BYTE PTR [eax],al
  41d0a3:	add    BYTE PTR [edx],bh
  41d0a5:	add    BYTE PTR [eax],al
  41d0a7:	add    bh,bh
  41d0a9:	(bad)  
  41d0aa:	(bad)  
  41d0ab:	inc    DWORD PTR [edx]
  41d0ad:	add    BYTE PTR [eax],al
  41d0af:	add    BYTE PTR [eax],dh
  41d0b1:	cmp    al,BYTE PTR [eax]
  41d0b3:	add    BYTE PTR [ebp-0x75],dl
  41d0b6:	in     al,dx
  41d0b7:	xor    ecx,ecx
  41d0b9:	push   ecx
  41d0ba:	push   ecx
  41d0bb:	push   ecx
  41d0bc:	push   ecx
  41d0bd:	push   ecx
  41d0be:	push   ecx
  41d0bf:	push   ecx
  41d0c0:	push   ebx
  41d0c1:	push   esi
  41d0c2:	push   edi
  41d0c3:	mov    edi,edx
  41d0c5:	mov    ebx,eax
  41d0c7:	xor    eax,eax
  41d0c9:	push   ebp
  41d0ca:	push   0x41d191
  41d0cf:	push   DWORD PTR fs:[eax]
  41d0d2:	mov    DWORD PTR fs:[eax],esp
  41d0d5:	lea    edx,[ebp-0x4]
  41d0d8:	mov    eax,ebx
  41d0da:	call   0x41cb48
  41d0df:	cmp    DWORD PTR [ebp-0x4],0x0
  41d0e3:	jne    0x41d125
  41d0e5:	push   0x0
  41d0e7:	lea    eax,[ebp-0x8]
  41d0ea:	push   eax
  41d0eb:	lea    edx,[ebp-0xc]
  41d0ee:	mov    eax,ds:0x46dc30
  41d0f3:	call   0x406f48
  41d0f8:	mov    eax,DWORD PTR [ebp-0xc]
  41d0fb:	push   eax
  41d0fc:	mov    DWORD PTR [ebp-0x14],ebx
  41d0ff:	mov    BYTE PTR [ebp-0x10],0xb
  41d103:	lea    ecx,[ebp-0x14]
  41d106:	mov    eax,ds:0x41be90
  41d10b:	pop    edx
  41d10c:	call   0x41b0d4
  41d111:	mov    ecx,DWORD PTR [ebp-0x8]
  41d114:	mov    dl,0x1
  41d116:	mov    eax,ds:0x41c524
  41d11b:	call   0x41bdbc
  41d120:	call   0x4048fc
  41d125:	mov    esi,0x8
  41d12a:	mov    ebx,edi
  41d12c:	push   0x1
  41d12e:	lea    eax,[ebp-0x1c]
  41d131:	push   eax
  41d132:	lea    eax,[ebp-0x4]
  41d135:	mov    cl,0x1
  41d137:	mov    edx,0x41d1a8
  41d13c:	call   0x41c7c4
  41d141:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d144:	lea    eax,[ebp-0x18]
  41d147:	mov    edx,0x41d1b4
  41d14c:	call   0x4052a0
  41d151:	mov    edx,DWORD PTR [ebp-0x18]
  41d154:	xor    ecx,ecx
  41d156:	mov    eax,ds:0x41be90
  41d15b:	call   0x41b254
  41d160:	mov    WORD PTR [ebx],ax
  41d163:	add    ebx,0x2
  41d166:	dec    esi
  41d167:	jne    0x41d12c
  41d169:	xor    eax,eax
  41d16b:	pop    edx
  41d16c:	pop    ecx
  41d16d:	pop    ecx
  41d16e:	mov    DWORD PTR fs:[eax],edx
  41d171:	push   0x41d198
  41d176:	lea    eax,[ebp-0x1c]
  41d179:	mov    edx,0x2
  41d17e:	call   0x404fac
  41d183:	lea    eax,[ebp-0xc]
  41d186:	mov    edx,0x3
  41d18b:	call   0x404fac
  41d190:	ret    
  41d191:	jmp    0x40481c
  41d196:	jmp    0x41d176
  41d198:	pop    edi
  41d199:	pop    esi
  41d19a:	pop    ebx
  41d19b:	mov    esp,ebp
  41d19d:	pop    ebp
  41d19e:	ret    
  41d19f:	add    bh,bh
  41d1a1:	(bad)  
  41d1a2:	(bad)  
  41d1a3:	inc    DWORD PTR [ecx]
  41d1a5:	add    BYTE PTR [eax],al
  41d1a7:	add    BYTE PTR [edx],bh
  41d1a9:	add    BYTE PTR [eax],al
  41d1ab:	add    bh,bh
  41d1ad:	(bad)  
  41d1ae:	(bad)  
  41d1af:	inc    DWORD PTR [ecx]
  41d1b1:	add    BYTE PTR [eax],al
  41d1b3:	add    BYTE PTR [eax+eax*1],ah
  41d1b6:	add    BYTE PTR [eax],al
  41d1b8:	push   ebp
  41d1b9:	mov    ebp,esp
  41d1bb:	add    esp,0xfffffff8
  41d1be:	mov    eax,DWORD PTR [ebp+0x10]
  41d1c1:	mov    edx,DWORD PTR [ebp+0x14]
  41d1c4:	cmp    edx,DWORD PTR [ebp+0xc]
  41d1c7:	jne    0x41d1d0
  41d1c9:	cmp    eax,DWORD PTR [ebp+0x8]
  41d1cc:	jae    0x41d1e0
  41d1ce:	jmp    0x41d1d2
  41d1d0:	jge    0x41d1e0
  41d1d2:	mov    eax,DWORD PTR [ebp+0x8]
  41d1d5:	mov    DWORD PTR [ebp-0x8],eax
  41d1d8:	mov    eax,DWORD PTR [ebp+0xc]
  41d1db:	mov    DWORD PTR [ebp-0x4],eax
  41d1de:	jmp    0x41d1ec
  41d1e0:	mov    eax,DWORD PTR [ebp+0x10]
  41d1e3:	mov    DWORD PTR [ebp-0x8],eax
  41d1e6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1e9:	mov    DWORD PTR [ebp-0x4],eax
  41d1ec:	mov    eax,DWORD PTR [ebp-0x8]
  41d1ef:	mov    edx,DWORD PTR [ebp-0x4]
  41d1f2:	pop    ecx
  41d1f3:	pop    ecx
  41d1f4:	pop    ebp
  41d1f5:	ret    0x10
  41d1f8:	push   ebp
  41d1f9:	mov    ebp,esp
  41d1fb:	add    esp,0xfffffff8
  41d1fe:	mov    eax,DWORD PTR [ebp+0x10]
  41d201:	mov    edx,DWORD PTR [ebp+0x14]
  41d204:	cmp    edx,DWORD PTR [ebp+0xc]
  41d207:	jne    0x41d210
  41d209:	cmp    eax,DWORD PTR [ebp+0x8]
  41d20c:	jbe    0x41d220
  41d20e:	jmp    0x41d212
  41d210:	jle    0x41d220
  41d212:	mov    eax,DWORD PTR [ebp+0x8]
  41d215:	mov    DWORD PTR [ebp-0x8],eax
  41d218:	mov    eax,DWORD PTR [ebp+0xc]
  41d21b:	mov    DWORD PTR [ebp-0x4],eax
  41d21e:	jmp    0x41d22c
  41d220:	mov    eax,DWORD PTR [ebp+0x10]
  41d223:	mov    DWORD PTR [ebp-0x8],eax
  41d226:	mov    eax,DWORD PTR [ebp+0x14]
  41d229:	mov    DWORD PTR [ebp-0x4],eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x8]
  41d22f:	mov    edx,DWORD PTR [ebp-0x4]
  41d232:	pop    ecx
  41d233:	pop    ecx
  41d234:	pop    ebp
  41d235:	ret    0x10
  41d238:	call   0x405564
  41d23d:	ret    
  41d23e:	mov    eax,eax
  41d240:	mov    ecx,edx
  41d242:	mov    edx,DWORD PTR ds:0x41be90
  41d248:	xchg   edx,eax
  41d249:	call   0x41b738
  41d24e:	ret    
  41d24f:	nop
  41d250:	push   eax
  41d251:	call   0x407308
  41d256:	ret    
  41d257:	nop
  41d258:	push   ebp
  41d259:	mov    ebp,esp
  41d25b:	add    esp,0xfffffff0
  41d25e:	push   ebx
  41d25f:	push   esi
  41d260:	push   edi
  41d261:	mov    ebx,eax
  41d263:	mov    DWORD PTR [ebp-0x10],0x1000
  41d26a:	mov    eax,ebx
  41d26c:	call   0x405418
  41d271:	mov    DWORD PTR [ebp-0xc],eax
  41d274:	mov    DWORD PTR [ebp-0x8],0xffffffff
  41d27b:	xor    eax,eax
  41d27d:	mov    DWORD PTR [ebp-0x4],eax
  41d280:	xor    eax,eax
  41d282:	push   ebp
  41d283:	push   0x41d2aa
  41d288:	push   DWORD PTR fs:[eax]
  41d28b:	mov    DWORD PTR fs:[eax],esp
  41d28e:	lea    eax,[ebp-0x10]
  41d291:	push   eax
  41d292:	push   0x4
  41d294:	push   0x0
  41d296:	push   0x406d1388
  41d29b:	call   0x4072c8
  41d2a0:	xor    eax,eax
  41d2a2:	pop    edx
  41d2a3:	pop    ecx
  41d2a4:	pop    ecx
  41d2a5:	mov    DWORD PTR fs:[eax],edx
  41d2a8:	jmp    0x41d2b4
  41d2aa:	jmp    0x404568
  41d2af:	call   0x404978
  41d2b4:	pop    edi
  41d2b5:	pop    esi
  41d2b6:	pop    ebx
  41d2b7:	mov    esp,ebp
  41d2b9:	pop    ebp
  41d2ba:	ret    
  41d2bb:	nop
  41d2bc:	push   ebx
  41d2bd:	push   esi
  41d2be:	push   edi
  41d2bf:	push   ebp
  41d2c0:	mov    edi,ecx
  41d2c2:	mov    esi,eax
  41d2c4:	test   dl,dl
  41d2c6:	sete   al
  41d2c9:	mov    edx,eax
  41d2cb:	mov    ecx,0x41d32c
  41d2d0:	mov    eax,ds:0x41b94c
  41d2d5:	call   0x41be6c
  41d2da:	mov    ebp,esi
  41d2dc:	mov    ebx,ebp
  41d2de:	test   ebx,ebx
  41d2e0:	je     0x41d2e7
  41d2e2:	sub    ebx,0x4
  41d2e5:	mov    ebx,DWORD PTR [ebx]
  41d2e7:	push   ebx
  41d2e8:	mov    eax,edi
  41d2ea:	mov    ecx,0x1
  41d2ef:	mov    edx,DWORD PTR ds:0x40769c
  41d2f5:	call   0x4063b0
  41d2fa:	add    esp,0x4
  41d2fd:	test   esi,esi
  41d2ff:	je     0x41d31c
  41d301:	mov    ebx,ebp
  41d303:	test   ebx,ebx
  41d305:	je     0x41d30c
  41d307:	sub    ebx,0x4
  41d30a:	mov    ebx,DWORD PTR [ebx]
  41d30c:	mov    eax,esi
  41d30e:	call   0x405418
  41d313:	mov    edx,DWORD PTR [edi]
  41d315:	mov    ecx,ebx
  41d317:	call   0x403090
  41d31c:	pop    ebp
  41d31d:	pop    edi
  41d31e:	pop    esi
  41d31f:	pop    ebx
  41d320:	ret    
  41d321:	add    BYTE PTR [eax],al
  41d323:	add    bh,bh
  41d325:	(bad)  
  41d326:	(bad)  
  41d327:	call   DWORD PTR [esi]
  41d329:	add    BYTE PTR [eax],al
  41d32b:	add    BYTE PTR [esi+0x6f],cl
  41d32e:	and    BYTE PTR [ebp+0x6e],ah
  41d331:	arpl   WORD PTR [edi+0x64],bp
  41d334:	imul   ebp,DWORD PTR [esi+0x67],0x65707320
  41d33b:	arpl   WORD PTR [ecx+0x66],bp
  41d33e:	imul   esp,DWORD PTR [ebp+0x64],0x5300002e
  41d345:	push   esi
  41d346:	mov    esi,edx
  41d348:	mov    ebx,eax
  41d34a:	push   0x1
  41d34c:	mov    eax,esi
  41d34e:	mov    ecx,0x1
  41d353:	mov    edx,DWORD PTR ds:0x40769c
  41d359:	call   0x4063b0
  41d35e:	add    esp,0x4
  41d361:	mov    eax,DWORD PTR [esi]
  41d363:	mov    BYTE PTR [eax],bl
  41d365:	pop    esi
  41d366:	pop    ebx
  41d367:	ret    
  41d368:	push   ebp
  41d369:	mov    ebp,esp
  41d36b:	push   ebx
  41d36c:	mov    ebx,eax
  41d36e:	push   0x8
  41d370:	mov    eax,ebx
  41d372:	mov    ecx,0x1
  41d377:	mov    edx,DWORD PTR ds:0x40769c
  41d37d:	call   0x4063b0
  41d382:	add    esp,0x4
  41d385:	mov    eax,DWORD PTR [ebx]
  41d387:	mov    edx,DWORD PTR [ebp+0x8]
  41d38a:	mov    DWORD PTR [eax],edx
  41d38c:	mov    edx,DWORD PTR [ebp+0xc]
  41d38f:	mov    DWORD PTR [eax+0x4],edx
  41d392:	pop    ebx
  41d393:	pop    ebp
  41d394:	ret    0x8
  41d397:	nop
  41d398:	push   ebx
  41d399:	push   esi
  41d39a:	mov    ebx,edx
  41d39c:	mov    esi,eax
  41d39e:	push   0x4
  41d3a0:	mov    eax,ebx
  41d3a2:	mov    ecx,0x1
  41d3a7:	mov    edx,DWORD PTR ds:0x40769c
  41d3ad:	call   0x4063b0
  41d3b2:	add    esp,0x4
  41d3b5:	mov    eax,DWORD PTR [ebx]
  41d3b7:	mov    DWORD PTR [eax],esi
  41d3b9:	pop    esi
  41d3ba:	pop    ebx
  41d3bb:	ret    
  41d3bc:	push   ebx
  41d3bd:	push   esi
  41d3be:	mov    ebx,edx
  41d3c0:	mov    esi,eax
  41d3c2:	push   0x4
  41d3c4:	mov    eax,ebx
  41d3c6:	mov    ecx,0x1
  41d3cb:	mov    edx,DWORD PTR ds:0x40769c
  41d3d1:	call   0x4063b0
  41d3d6:	add    esp,0x4
  41d3d9:	mov    eax,DWORD PTR [ebx]
  41d3db:	mov    DWORD PTR [eax],esi
  41d3dd:	pop    esi
  41d3de:	pop    ebx
  41d3df:	ret    
  41d3e0:	push   ebx
  41d3e1:	push   esi
  41d3e2:	mov    ebx,edx
  41d3e4:	mov    esi,eax
  41d3e6:	push   0x2
  41d3e8:	mov    eax,ebx
  41d3ea:	mov    ecx,0x1
  41d3ef:	mov    edx,DWORD PTR ds:0x40769c
  41d3f5:	call   0x4063b0
  41d3fa:	add    esp,0x4
  41d3fd:	mov    eax,DWORD PTR [ebx]
  41d3ff:	mov    WORD PTR [eax],si
  41d402:	pop    esi
  41d403:	pop    ebx
  41d404:	ret    
  41d405:	lea    eax,[eax+0x0]
  41d408:	push   ebx
  41d409:	push   esi
  41d40a:	mov    esi,edx
  41d40c:	mov    ebx,eax
  41d40e:	push   0x1
  41d410:	mov    eax,esi
  41d412:	mov    ecx,0x1
  41d417:	mov    edx,DWORD PTR ds:0x40769c
  41d41d:	call   0x4063b0
  41d422:	add    esp,0x4
  41d425:	mov    eax,DWORD PTR [esi]
  41d427:	mov    BYTE PTR [eax],bl
  41d429:	pop    esi
  41d42a:	pop    ebx
  41d42b:	ret    
  41d42c:	push   ebx
  41d42d:	push   esi
  41d42e:	push   edi
  41d42f:	mov    esi,ecx
  41d431:	mov    ebx,edx
  41d433:	mov    edi,eax
  41d435:	push   ebx
  41d436:	mov    eax,esi
  41d438:	mov    ecx,0x1
  41d43d:	mov    edx,DWORD PTR ds:0x40769c
  41d443:	call   0x4063b0
  41d448:	add    esp,0x4
  41d44b:	push   0x0
  41d44d:	push   ebx
  41d44e:	mov    ecx,esi
  41d450:	xor    edx,edx
  41d452:	mov    eax,edi
  41d454:	call   0x41c6f0
  41d459:	pop    edi
  41d45a:	pop    esi
  41d45b:	pop    ebx
  41d45c:	ret    
  41d45d:	lea    eax,[eax+0x0]
  41d460:	push   ebx
  41d461:	push   esi
  41d462:	mov    esi,edx
  41d464:	mov    ebx,eax
  41d466:	mov    eax,DWORD PTR [ebx]
  41d468:	call   0x4061f4
  41d46d:	cmp    eax,0x4
  41d470:	jge    0x41d486
  41d472:	mov    ecx,0xaca
  41d477:	mov    edx,0x41d498
  41d47c:	mov    eax,0x41d4d0
  41d481:	call   0x404eb4
  41d486:	mov    eax,DWORD PTR [ebx]
  41d488:	mov    DWORD PTR [eax],esi
  41d48a:	pop    esi
  41d48b:	pop    ebx
  41d48c:	ret    
  41d48d:	add    BYTE PTR [eax],al
  41d48f:	add    bh,bh
  41d491:	(bad)  
  41d492:	(bad)  
  41d493:	jmp    FWORD PTR [esi]
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [ebx+0x3a],al
  41d49a:	pop    esp
  41d49b:	inc    edx
  41d49c:	jne    0x41d507
  41d49e:	ins    BYTE PTR es:[edi],dx
  41d49f:	fs jae 0x41d4fe
  41d4a2:	push   esp
  41d4a3:	jo     0x41d4e6
  41d4a5:	fs outs dx,DWORD PTR fs:[esi]
  41d4a8:	outs   dx,BYTE PTR ds:[esi]
  41d4a9:	jae    0x41d507
  41d4ab:	dec    ecx
  41d4ac:	outs   dx,BYTE PTR ds:[esi]
  41d4ad:	fs jns 0x41d4fe
  41d4b0:	gs je  0x41d50f
  41d4b3:	push   ebx
  41d4b4:	jns    0x41d529
  41d4b6:	je     0x41d51d
  41d4b8:	ins    DWORD PTR es:[edi],dx
  41d4b9:	pop    esp
  41d4ba:	dec    ecx
  41d4bb:	fs inc edi
  41d4bd:	ins    BYTE PTR es:[edi],dx
  41d4be:	outs   dx,DWORD PTR ds:[esi]
  41d4bf:	bound  esp,QWORD PTR [ecx+0x6c]
  41d4c2:	cs jo  0x41d526
  41d4c5:	jae    0x41d4c7
  41d4c7:	add    bh,bh
  41d4c9:	(bad)  
  41d4ca:	(bad)  
  41d4cb:	call   DWORD PTR [ecx]
  41d4cd:	add    BYTE PTR [eax],al
  41d4cf:	add    BYTE PTR [ecx+0x73],al
  41d4d2:	jae    0x41d539
  41d4d4:	jb     0x41d54a
  41d4d6:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d4dd:	ins    BYTE PTR es:[edi],dx
  41d4de:	jne    0x41d552
  41d4e0:	add    BYTE PTR gs:[eax],al
  41d4e3:	add    BYTE PTR [ebx+0x56],dl
  41d4e6:	mov    esi,edx
  41d4e8:	mov    ebx,eax
  41d4ea:	mov    eax,ebx
  41d4ec:	call   0x4061f4
  41d4f1:	lea    edx,[esi+0x1]
  41d4f4:	cmp    eax,edx
  41d4f6:	jge    0x41d50c
  41d4f8:	mov    ecx,0xaf8
  41d4fd:	mov    edx,0x41d51c
  41d502:	mov    eax,0x41d554
  41d507:	call   0x404eb4
  41d50c:	movzx  eax,BYTE PTR [ebx+esi*1]
  41d510:	pop    esi
  41d511:	pop    ebx
  41d512:	ret    
  41d513:	add    bh,bh
  41d515:	(bad)  
  41d516:	(bad)  
  41d517:	jmp    FWORD PTR [esi]
  41d519:	add    BYTE PTR [eax],al
  41d51b:	add    BYTE PTR [ebx+0x3a],al
  41d51e:	pop    esp
  41d51f:	inc    edx
  41d520:	jne    0x41d58b
  41d522:	ins    BYTE PTR es:[edi],dx
  41d523:	fs jae 0x41d582
  41d526:	push   esp
  41d527:	jo     0x41d56a
  41d529:	fs outs dx,DWORD PTR fs:[esi]
  41d52c:	outs   dx,BYTE PTR ds:[esi]
  41d52d:	jae    0x41d58b
  41d52f:	dec    ecx
  41d530:	outs   dx,BYTE PTR ds:[esi]
  41d531:	fs jns 0x41d582
  41d534:	gs je  0x41d593
  41d537:	push   ebx
  41d538:	jns    0x41d5ad
  41d53a:	je     0x41d5a1
  41d53c:	ins    DWORD PTR es:[edi],dx
  41d53d:	pop    esp
  41d53e:	dec    ecx
  41d53f:	fs inc edi
  41d541:	ins    BYTE PTR es:[edi],dx
  41d542:	outs   dx,DWORD PTR ds:[esi]
  41d543:	bound  esp,QWORD PTR [ecx+0x6c]
  41d546:	cs jo  0x41d5aa
  41d549:	jae    0x41d54b
  41d54b:	add    bh,bh
  41d54d:	(bad)  
  41d54e:	(bad)  
  41d54f:	call   DWORD PTR [ecx]
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ecx+0x73],al
  41d556:	jae    0x41d5bd
  41d558:	jb     0x41d5ce
  41d55a:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d561:	ins    BYTE PTR es:[edi],dx
  41d562:	jne    0x41d5d6
  41d564:	add    BYTE PTR gs:[eax],al
  41d567:	add    BYTE PTR [ebx+0x56],dl
  41d56a:	mov    esi,edx
  41d56c:	mov    ebx,eax
  41d56e:	mov    eax,ebx
  41d570:	call   0x4061f4
  41d575:	lea    edx,[esi+0x4]
  41d578:	cmp    eax,edx
  41d57a:	jge    0x41d590
  41d57c:	mov    ecx,0xb0b
  41d581:	mov    edx,0x41d5a0
  41d586:	mov    eax,0x41d5d8
  41d58b:	call   0x404eb4
  41d590:	lea    eax,[ebx+esi*1]
  41d593:	mov    eax,DWORD PTR [eax]
  41d595:	pop    esi
  41d596:	pop    ebx
  41d597:	ret    
  41d598:	(bad)  
  41d599:	(bad)  
  41d59a:	(bad)  
  41d59b:	jmp    FWORD PTR [esi]
  41d59d:	add    BYTE PTR [eax],al
  41d59f:	add    BYTE PTR [ebx+0x3a],al
  41d5a2:	pop    esp
  41d5a3:	inc    edx
  41d5a4:	jne    0x41d60f
  41d5a6:	ins    BYTE PTR es:[edi],dx
  41d5a7:	fs jae 0x41d606
  41d5aa:	push   esp
  41d5ab:	jo     0x41d5ee
  41d5ad:	fs outs dx,DWORD PTR fs:[esi]
  41d5b0:	outs   dx,BYTE PTR ds:[esi]
  41d5b1:	jae    0x41d60f
  41d5b3:	dec    ecx
  41d5b4:	outs   dx,BYTE PTR ds:[esi]
  41d5b5:	fs jns 0x41d606
  41d5b8:	gs je  0x41d617
  41d5bb:	push   ebx
  41d5bc:	jns    0x41d631
  41d5be:	je     0x41d625
  41d5c0:	ins    DWORD PTR es:[edi],dx
  41d5c1:	pop    esp
  41d5c2:	dec    ecx
  41d5c3:	fs inc edi
  41d5c5:	ins    BYTE PTR es:[edi],dx
  41d5c6:	outs   dx,DWORD PTR ds:[esi]
  41d5c7:	bound  esp,QWORD PTR [ecx+0x6c]
  41d5ca:	cs jo  0x41d62e
  41d5cd:	jae    0x41d5cf
  41d5cf:	add    bh,bh
  41d5d1:	(bad)  
  41d5d2:	(bad)  
  41d5d3:	call   DWORD PTR [ecx]
  41d5d5:	add    BYTE PTR [eax],al
  41d5d7:	add    BYTE PTR [ecx+0x73],al
  41d5da:	jae    0x41d641
  41d5dc:	jb     0x41d652
  41d5de:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d5e5:	ins    BYTE PTR es:[edi],dx
  41d5e6:	jne    0x41d65a
  41d5e8:	add    BYTE PTR gs:[eax],al
  41d5eb:	add    BYTE PTR [ebx+0x56],dl
  41d5ee:	add    esp,0xfffffff8
  41d5f1:	mov    esi,edx
  41d5f3:	mov    ebx,eax
  41d5f5:	mov    eax,ebx
  41d5f7:	call   0x4061f4
  41d5fc:	lea    edx,[esi+0x8]
  41d5ff:	cmp    eax,edx
  41d601:	jge    0x41d617
  41d603:	mov    ecx,0xb15
  41d608:	mov    edx,0x41d63c
  41d60d:	mov    eax,0x41d674
  41d612:	call   0x404eb4
  41d617:	lea    eax,[ebx+esi*1]
  41d61a:	mov    edx,DWORD PTR [eax]
  41d61c:	mov    DWORD PTR [esp],edx
  41d61f:	mov    edx,DWORD PTR [eax+0x4]
  41d622:	mov    DWORD PTR [esp+0x4],edx
  41d626:	mov    eax,DWORD PTR [esp]
  41d629:	mov    edx,DWORD PTR [esp+0x4]
  41d62d:	pop    ecx
  41d62e:	pop    edx
  41d62f:	pop    esi
  41d630:	pop    ebx
  41d631:	ret    
  41d632:	add    BYTE PTR [eax],al
  41d634:	(bad)  
  41d635:	(bad)  
  41d636:	(bad)  
  41d637:	jmp    FWORD PTR [esi]
  41d639:	add    BYTE PTR [eax],al
  41d63b:	add    BYTE PTR [ebx+0x3a],al
  41d63e:	pop    esp
  41d63f:	inc    edx
  41d640:	jne    0x41d6ab
  41d642:	ins    BYTE PTR es:[edi],dx
  41d643:	fs jae 0x41d6a2
  41d646:	push   esp
  41d647:	jo     0x41d68a
  41d649:	fs outs dx,DWORD PTR fs:[esi]
  41d64c:	outs   dx,BYTE PTR ds:[esi]
  41d64d:	jae    0x41d6ab
  41d64f:	dec    ecx
  41d650:	outs   dx,BYTE PTR ds:[esi]
  41d651:	fs jns 0x41d6a2
  41d654:	gs je  0x41d6b3
  41d657:	push   ebx
  41d658:	jns    0x41d6cd
  41d65a:	je     0x41d6c1
  41d65c:	ins    DWORD PTR es:[edi],dx
  41d65d:	pop    esp
  41d65e:	dec    ecx
  41d65f:	fs inc edi
  41d661:	ins    BYTE PTR es:[edi],dx
  41d662:	outs   dx,DWORD PTR ds:[esi]
  41d663:	bound  esp,QWORD PTR [ecx+0x6c]
  41d666:	cs jo  0x41d6ca
  41d669:	jae    0x41d66b
  41d66b:	add    bh,bh
  41d66d:	(bad)  
  41d66e:	(bad)  
  41d66f:	call   DWORD PTR [ecx]
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+0x73],al
  41d676:	jae    0x41d6dd
  41d678:	jb     0x41d6ee
  41d67a:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d681:	ins    BYTE PTR es:[edi],dx
  41d682:	jne    0x41d6f6
  41d684:	add    BYTE PTR gs:[eax],al
  41d687:	add    BYTE PTR [ebx+0x56],dl
  41d68a:	mov    esi,edx
  41d68c:	mov    ebx,eax
  41d68e:	mov    eax,ebx
  41d690:	call   0x4061f4
  41d695:	lea    edx,[esi+0x2]
  41d698:	cmp    eax,edx
  41d69a:	jge    0x41d6b0
  41d69c:	mov    ecx,0xb1f
  41d6a1:	mov    edx,0x41d6c4
  41d6a6:	mov    eax,0x41d6fc
  41d6ab:	call   0x404eb4
  41d6b0:	lea    eax,[ebx+esi*1]
  41d6b3:	movzx  eax,WORD PTR [eax]
  41d6b6:	pop    esi
  41d6b7:	pop    ebx
  41d6b8:	ret    
  41d6b9:	add    BYTE PTR [eax],al
  41d6bb:	add    bh,bh
  41d6bd:	(bad)  
  41d6be:	(bad)  
  41d6bf:	jmp    FWORD PTR [esi]
  41d6c1:	add    BYTE PTR [eax],al
  41d6c3:	add    BYTE PTR [ebx+0x3a],al
  41d6c6:	pop    esp
  41d6c7:	inc    edx
  41d6c8:	jne    0x41d733
  41d6ca:	ins    BYTE PTR es:[edi],dx
  41d6cb:	fs jae 0x41d72a
  41d6ce:	push   esp
  41d6cf:	jo     0x41d712
  41d6d1:	fs outs dx,DWORD PTR fs:[esi]
  41d6d4:	outs   dx,BYTE PTR ds:[esi]
  41d6d5:	jae    0x41d733
  41d6d7:	dec    ecx
  41d6d8:	outs   dx,BYTE PTR ds:[esi]
  41d6d9:	fs jns 0x41d72a
  41d6dc:	gs je  0x41d73b
  41d6df:	push   ebx
  41d6e0:	jns    0x41d755
  41d6e2:	je     0x41d749
  41d6e4:	ins    DWORD PTR es:[edi],dx
  41d6e5:	pop    esp
  41d6e6:	dec    ecx
  41d6e7:	fs inc edi
  41d6e9:	ins    BYTE PTR es:[edi],dx
  41d6ea:	outs   dx,DWORD PTR ds:[esi]
  41d6eb:	bound  esp,QWORD PTR [ecx+0x6c]
  41d6ee:	cs jo  0x41d752
  41d6f1:	jae    0x41d6f3
  41d6f3:	add    bh,bh
  41d6f5:	(bad)  
  41d6f6:	(bad)  
  41d6f7:	call   DWORD PTR [ecx]
  41d6f9:	add    BYTE PTR [eax],al
  41d6fb:	add    BYTE PTR [ecx+0x73],al
  41d6fe:	jae    0x41d765
  41d700:	jb     0x41d776
  41d702:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d709:	ins    BYTE PTR es:[edi],dx
  41d70a:	jne    0x41d77e
  41d70c:	add    BYTE PTR gs:[eax],al
  41d70f:	add    BYTE PTR [ebx+0x56],dl
  41d712:	push   edi
  41d713:	mov    edi,ecx
  41d715:	mov    esi,edx
  41d717:	mov    ebx,eax
  41d719:	mov    eax,ebx
  41d71b:	call   0x4061f4
  41d720:	lea    edx,[esi+0x10]
  41d723:	cmp    eax,edx
  41d725:	jge    0x41d73b
  41d727:	mov    ecx,0xb36
  41d72c:	mov    edx,0x41d758
  41d731:	mov    eax,0x41d790
  41d736:	call   0x404eb4
  41d73b:	mov    edx,edi
  41d73d:	lea    eax,[ebx+esi*1]
  41d740:	mov    ecx,0x10
  41d745:	call   0x403090
  41d74a:	pop    edi
  41d74b:	pop    esi
  41d74c:	pop    ebx
  41d74d:	ret    
  41d74e:	add    BYTE PTR [eax],al
  41d750:	(bad)  
  41d751:	(bad)  
  41d752:	(bad)  
  41d753:	jmp    FWORD PTR [esi]
  41d755:	add    BYTE PTR [eax],al
  41d757:	add    BYTE PTR [ebx+0x3a],al
  41d75a:	pop    esp
  41d75b:	inc    edx
  41d75c:	jne    0x41d7c7
  41d75e:	ins    BYTE PTR es:[edi],dx
  41d75f:	fs jae 0x41d7be
  41d762:	push   esp
  41d763:	jo     0x41d7a6
  41d765:	fs outs dx,DWORD PTR fs:[esi]
  41d768:	outs   dx,BYTE PTR ds:[esi]
  41d769:	jae    0x41d7c7
  41d76b:	dec    ecx
  41d76c:	outs   dx,BYTE PTR ds:[esi]
  41d76d:	fs jns 0x41d7be
  41d770:	gs je  0x41d7cf
  41d773:	push   ebx
  41d774:	jns    0x41d7e9
  41d776:	je     0x41d7dd
  41d778:	ins    DWORD PTR es:[edi],dx
  41d779:	pop    esp
  41d77a:	dec    ecx
  41d77b:	fs inc edi
  41d77d:	ins    BYTE PTR es:[edi],dx
  41d77e:	outs   dx,DWORD PTR ds:[esi]
  41d77f:	bound  esp,QWORD PTR [ecx+0x6c]
  41d782:	cs jo  0x41d7e6
  41d785:	jae    0x41d787
  41d787:	add    bh,bh
  41d789:	(bad)  
  41d78a:	(bad)  
  41d78b:	call   DWORD PTR [ecx]
  41d78d:	add    BYTE PTR [eax],al
  41d78f:	add    BYTE PTR [ecx+0x73],al
  41d792:	jae    0x41d7f9
  41d794:	jb     0x41d80a
  41d796:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  41d79d:	ins    BYTE PTR es:[edi],dx
  41d79e:	jne    0x41d812
  41d7a0:	add    BYTE PTR gs:[eax],al
  41d7a3:	add    BYTE PTR [ebp-0x75],dl
  41d7a6:	in     al,dx
  41d7a7:	push   ecx
  41d7a8:	push   ebx
  41d7a9:	push   esi
  41d7aa:	push   edi
  41d7ab:	mov    ebx,ecx
  41d7ad:	mov    esi,edx
  41d7af:	mov    DWORD PTR [ebp-0x4],eax
  41d7b2:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b5:	mov    eax,DWORD PTR [ebp-0x4]
  41d7b8:	call   0x406420
  41d7bd:	xor    eax,eax
  41d7bf:	push   ebp
  41d7c0:	push   0x41d84f
  41d7c5:	push   DWORD PTR fs:[eax]
  41d7c8:	mov    DWORD PTR fs:[eax],esp
  41d7cb:	mov    eax,DWORD PTR [ebp-0x4]
  41d7ce:	call   0x4061f4
  41d7d3:	test   eax,eax
  41d7d5:	jg     0x41d7db
  41d7d7:	test   esi,esi
  41d7d9:	je     0x41d7f8
  41d7db:	mov    eax,DWORD PTR [ebp-0x4]
  41d7de:	call   0x4061f4
  41d7e3:	dec    eax
  41d7e4:	push   eax
  41d7e5:	push   0x41d868
  41d7ea:	xor    ecx,ecx
  41d7ec:	mov    edx,esi
  41d7ee:	mov    eax,ds:0x41ba78
  41d7f3:	call   0x41be54
  41d7f8:	mov    eax,DWORD PTR [ebp-0x4]
  41d7fb:	call   0x4061f4
  41d800:	sub    eax,esi
  41d802:	cdq    
  41d803:	push   edx
  41d804:	push   eax
  41d805:	mov    eax,ebx
  41d807:	cdq    
  41d808:	push   edx
  41d809:	push   eax
  41d80a:	call   0x41d1f8
  41d80f:	mov    ebx,eax
  41d811:	mov    eax,edi
  41d813:	mov    edx,ebx
  41d815:	call   0x4056a8
  41d81a:	test   ebx,ebx
  41d81c:	jle    0x41d833
  41d81e:	mov    eax,edi
  41d820:	call   0x405478
  41d825:	mov    edx,eax
  41d827:	mov    eax,DWORD PTR [ebp-0x4]
  41d82a:	add    eax,esi
  41d82c:	mov    ecx,ebx
  41d82e:	call   0x403090
  41d833:	xor    eax,eax
  41d835:	pop    edx
  41d836:	pop    ecx
  41d837:	pop    ecx
  41d838:	mov    DWORD PTR fs:[eax],edx
  41d83b:	push   0x41d856
  41d840:	lea    eax,[ebp-0x4]
  41d843:	mov    edx,DWORD PTR ds:0x40769c
  41d849:	call   0x4063bc
  41d84e:	ret    
  41d84f:	jmp    0x40481c
  41d854:	jmp    0x41d840
  41d856:	pop    edi
  41d857:	pop    esi
  41d858:	pop    ebx
  41d859:	pop    ecx
  41d85a:	pop    ebp
  41d85b:	ret    0x4
  41d85e:	add    BYTE PTR [eax],al
  41d860:	(bad)  
  41d861:	(bad)  
  41d862:	(bad)  
  41d863:	call   DWORD PTR [eax+eax*1]
  41d866:	add    BYTE PTR [eax],al
  41d868:	dec    ecx
  41d869:	outs   dx,BYTE PTR ds:[esi]
  41d86a:	fs gs js 0x41d88e
  41d86e:	outs   dx,DWORD PTR ds:[esi]
  41d86f:	jne    0x41d8e5
  41d871:	and    BYTE PTR [edi+0x66],ch
  41d874:	and    BYTE PTR [edx+0x6f],ah
  41d877:	jne    0x41d8e7
  41d879:	fs jae 0x41d8aa
  41d87c:	add    BYTE PTR [eax],al
  41d87e:	add    BYTE PTR [eax],al
  41d880:	push   ebp
  41d881:	mov    ebp,esp
  41d883:	push   0x0
  41d885:	push   ebx
  41d886:	push   esi
  41d887:	mov    esi,ecx
  41d889:	mov    ebx,edx
  41d88b:	xor    edx,edx
  41d88d:	push   ebp
  41d88e:	push   0x41d8d6
  41d893:	push   DWORD PTR fs:[edx]
  41d896:	mov    DWORD PTR fs:[edx],esp
  41d899:	push   ebx
  41d89a:	push   0x0
  41d89c:	lea    ecx,[ebp-0x4]
  41d89f:	mov    edx,eax
  41d8a1:	mov    eax,ds:0x41c1fc
  41d8a6:	call   0x41c25c
  41d8ab:	mov    ebx,eax
  41d8ad:	push   esi
  41d8ae:	mov    ecx,ebx
  41d8b0:	xor    edx,edx
  41d8b2:	mov    eax,DWORD PTR [ebp-0x4]
  41d8b5:	call   0x41d7a4
  41d8ba:	xor    eax,eax
  41d8bc:	pop    edx
  41d8bd:	pop    ecx
  41d8be:	pop    ecx
  41d8bf:	mov    DWORD PTR fs:[eax],edx
  41d8c2:	push   0x41d8dd
  41d8c7:	lea    eax,[ebp-0x4]
  41d8ca:	mov    edx,DWORD PTR ds:0x40769c
  41d8d0:	call   0x4063bc
  41d8d5:	ret    
  41d8d6:	jmp    0x40481c
  41d8db:	jmp    0x41d8c7
  41d8dd:	pop    esi
  41d8de:	pop    ebx
  41d8df:	pop    ecx
  41d8e0:	pop    ebp
  41d8e1:	ret    
  41d8e2:	mov    eax,eax
  41d8e4:	push   ebp
  41d8e5:	mov    ebp,esp
  41d8e7:	push   0x0
  41d8e9:	push   ebx
  41d8ea:	push   esi
  41d8eb:	mov    ebx,edx
  41d8ed:	mov    esi,eax
  41d8ef:	xor    eax,eax
  41d8f1:	push   ebp
  41d8f2:	push   0x41d93a
  41d8f7:	push   DWORD PTR fs:[eax]
  41d8fa:	mov    DWORD PTR fs:[eax],esp
  41d8fd:	test   ebx,ebx
  41d8ff:	je     0x41d91e
  41d901:	lea    ecx,[ebp-0x4]
  41d904:	mov    dl,0x1
  41d906:	mov    eax,ebx
  41d908:	call   0x41d2bc
  41d90d:	push   0xffffffff
  41d90f:	mov    ecx,DWORD PTR [ebp-0x4]
  41d912:	mov    edx,esi
  41d914:	mov    eax,ds:0x41c1fc
  41d919:	call   0x41c378
  41d91e:	xor    eax,eax
  41d920:	pop    edx
  41d921:	pop    ecx
  41d922:	pop    ecx
  41d923:	mov    DWORD PTR fs:[eax],edx
  41d926:	push   0x41d941
  41d92b:	lea    eax,[ebp-0x4]
  41d92e:	mov    edx,DWORD PTR ds:0x40769c
  41d934:	call   0x4063bc
  41d939:	ret    
  41d93a:	jmp    0x40481c
  41d93f:	jmp    0x41d92b
  41d941:	pop    esi
  41d942:	pop    ebx
  41d943:	pop    ecx
  41d944:	pop    ebp
  41d945:	ret    
  41d946:	mov    eax,eax
  41d948:	push   ebx
  41d949:	push   esi
  41d94a:	mov    esi,edx
  41d94c:	mov    ebx,eax
  41d94e:	mov    ecx,esi
  41d950:	mov    edx,ebx
  41d952:	mov    eax,ds:0x41be90
  41d957:	call   0x41b72c
  41d95c:	test   eax,eax
  41d95e:	sete   al
  41d961:	pop    esi
  41d962:	pop    ebx
  41d963:	ret    
  41d964:	push   ebp
  41d965:	mov    ebp,esp
  41d967:	add    esp,0xfffffff8
  41d96a:	push   ebx
  41d96b:	push   esi
  41d96c:	xor    ebx,ebx
  41d96e:	mov    DWORD PTR [ebp-0x8],ebx
  41d971:	mov    DWORD PTR [ebp-0x4],ecx
  41d974:	mov    ebx,edx
  41d976:	mov    esi,eax
  41d978:	xor    eax,eax
  41d97a:	push   ebp
  41d97b:	push   0x41d9e4
  41d980:	push   DWORD PTR fs:[eax]
  41d983:	mov    DWORD PTR fs:[eax],esp
  41d986:	cmp    ebx,0x1
  41d989:	setl   dl
  41d98c:	mov    ecx,0x41d9fc
  41d991:	mov    eax,ds:0x41b94c
  41d996:	call   0x41be6c
  41d99b:	mov    eax,esi
  41d99d:	test   eax,eax
  41d99f:	je     0x41d9a6
  41d9a1:	sub    eax,0x4
  41d9a4:	mov    eax,DWORD PTR [eax]
  41d9a6:	cmp    eax,ebx
  41d9a8:	jge    0x41d9ae
  41d9aa:	xor    ebx,ebx
  41d9ac:	jmp    0x41d9ce
  41d9ae:	lea    eax,[ebp-0x8]
  41d9b1:	movzx  edx,BYTE PTR [esi+ebx*1-0x1]
  41d9b6:	call   0x405170
  41d9bb:	mov    eax,DWORD PTR [ebp-0x8]
  41d9be:	mov    edx,DWORD PTR [ebp-0x4]
  41d9c1:	call   DWORD PTR ds:0x461b08
  41d9c7:	test   eax,eax
  41d9c9:	setg   al
  41d9cc:	mov    ebx,eax
  41d9ce:	xor    eax,eax
  41d9d0:	pop    edx
  41d9d1:	pop    ecx
  41d9d2:	pop    ecx
  41d9d3:	mov    DWORD PTR fs:[eax],edx
  41d9d6:	push   0x41d9eb
  41d9db:	lea    eax,[ebp-0x8]
  41d9de:	call   0x404f88
  41d9e3:	ret    
  41d9e4:	jmp    0x40481c
  41d9e9:	jmp    0x41d9db
  41d9eb:	mov    eax,ebx
  41d9ed:	pop    esi
  41d9ee:	pop    ebx
  41d9ef:	pop    ecx
  41d9f0:	pop    ecx
  41d9f1:	pop    ebp
  41d9f2:	ret    
  41d9f3:	add    bh,bh
  41d9f5:	(bad)  
  41d9f6:	(bad)  
  41d9f7:	jmp    DWORD PTR [eax]
  41d9f9:	add    BYTE PTR [eax],al
  41d9fb:	add    BYTE PTR [ecx+0x6e],cl
  41d9fe:	jbe    0x41da61
  41da00:	ins    BYTE PTR es:[edi],dx
  41da01:	imul   esp,DWORD PTR [eax+eiz*1+0x41],0x72616843
  41da09:	push   eax
  41da0a:	outs   dx,DWORD PTR ds:[esi]
  41da0b:	jae    0x41da2d
  41da0d:	imul   ebp,DWORD PTR [esi+0x20],0x72616843
  41da14:	dec    ecx
  41da15:	jae    0x41da60
  41da17:	outs   dx,BYTE PTR ds:[esi]
  41da18:	push   ebx
  41da19:	gs je  0x41da4a
  41da1c:	add    BYTE PTR [eax],al
  41da1e:	add    BYTE PTR [eax],al
  41da20:	push   ebp
  41da21:	mov    ebp,esp
  41da23:	xor    eax,eax
  41da25:	push   ebp
  41da26:	push   0x41da56
  41da2b:	push   DWORD PTR fs:[eax]
  41da2e:	mov    DWORD PTR fs:[eax],esp
  41da31:	inc    DWORD PTR ds:0x4729e4
  41da37:	jne    0x41da48
  41da39:	mov    edx,0x4729e8
  41da3e:	mov    eax,ds:0x41be90
  41da43:	call   0x41b14c
  41da48:	xor    eax,eax
  41da4a:	pop    edx
  41da4b:	pop    ecx
  41da4c:	pop    ecx
  41da4d:	mov    DWORD PTR fs:[eax],edx
  41da50:	push   0x41da5d
  41da55:	ret    
  41da56:	jmp    0x40481c
  41da5b:	jmp    0x41da55
  41da5d:	pop    ebp
  41da5e:	ret    
  41da5f:	nop
  41da60:	lods   al,BYTE PTR ds:[esi]
  41da61:	fiadd  DWORD PTR [ecx+0x0]
	...
  41da6c:	mov    al,0xda
  41da6e:	inc    ecx
	...
  41da7f:	add    dl,cl
  41da81:	fiadd  DWORD PTR [ecx+0x0]
  41da84:	sbb    BYTE PTR [eax],al
  41da86:	add    BYTE PTR [eax],al
  41da88:	dec    esp
  41da89:	mov    ecx,0x42d00041
  41da8e:	inc    eax
  41da8f:	add    ah,bl
  41da91:	inc    edx
  41da92:	inc    eax
  41da93:	add    al,ah
  41da95:	inc    edx
  41da96:	inc    eax
  41da97:	add    ah,ah
  41da99:	inc    edx
  41da9a:	inc    eax
  41da9b:	add    al,bl
  41da9d:	inc    edx
  41da9e:	inc    eax
  41da9f:	add    BYTE PTR [eax],bh
  41daa1:	inc    eax
  41daa2:	inc    eax
  41daa3:	add    BYTE PTR [eax+eax*2+0x40],dl
  41daa7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  41daad:	mov    ebp,0xe0041
  41dab2:	add    BYTE PTR [eax],al
  41dab4:	add    BYTE PTR [eax],al
  41dab6:	add    al,BYTE PTR [eax]
  41dab8:	add    BYTE PTR [eax],al
  41daba:	test   BYTE PTR [eax],dl
  41dabc:	inc    eax
  41dabd:	add    BYTE PTR [eax],dl
  41dabf:	add    BYTE PTR [eax],al
  41dac1:	add    BYTE PTR [eax+edx*1+0x140040],al
  41dac8:	add    BYTE PTR [eax],al
  41daca:	adc    eax,DWORD PTR [ebp+0x49]
  41dacd:	fs push edi
  41dacf:	imul   ebp,DWORD PTR [esi+0x73],0x536b636f
  41dad6:	je     0x41db4d
  41dad8:	bound  eax,QWORD PTR [ebp+0x72]
  41dadb:	jb     0x41db4c
  41dadd:	jb     0x41da6a
  41dadf:	rcl    BYTE PTR [ebp-0x75],0xec
  41dae3:	push   0x0
  41dae5:	push   0x0
  41dae7:	push   0x0
  41dae9:	push   ebx
  41daea:	push   esi
  41daeb:	push   edi
  41daec:	test   dl,dl
  41daee:	je     0x41daf8
  41daf0:	add    esp,0xfffffff0
  41daf3:	call   0x4043ac
  41daf8:	mov    edi,ecx
  41dafa:	mov    BYTE PTR [ebp-0x1],dl
  41dafd:	mov    ebx,eax
  41daff:	mov    esi,DWORD PTR [ebp+0x8]
  41db02:	xor    eax,eax
  41db04:	push   ebp
  41db05:	push   0x41db80
  41db0a:	push   DWORD PTR fs:[eax]
  41db0d:	mov    DWORD PTR fs:[eax],esp
  41db10:	lea    eax,[ebx+0x14]
  41db13:	mov    edx,edi
  41db15:	call   0x404fdc
  41db1a:	mov    DWORD PTR [ebx+0xc],esi
  41db1d:	test   esi,esi
  41db1f:	jne    0x41db2e
  41db21:	mov    ecx,edi
  41db23:	xor    edx,edx
  41db25:	mov    eax,ebx
  41db27:	call   0x41bdbc
  41db2c:	jmp    0x41db65
  41db2e:	lea    edx,[ebp-0x8]
  41db31:	mov    eax,esi
  41db33:	call   0x40c0a0
  41db38:	mov    edx,DWORD PTR [ebp-0x8]
  41db3b:	lea    eax,[ebx+0x10]
  41db3e:	call   0x404fdc
  41db43:	push   edi
  41db44:	push   0x41dbb4
  41db49:	push   DWORD PTR [ebx+0x10]
  41db4c:	lea    eax,[ebp-0xc]
  41db4f:	mov    edx,0x3
  41db54:	call   0x40531c
  41db59:	mov    ecx,DWORD PTR [ebp-0xc]
  41db5c:	xor    edx,edx
  41db5e:	mov    eax,ebx
  41db60:	call   0x41bdbc
  41db65:	xor    eax,eax
  41db67:	pop    edx
  41db68:	pop    ecx
  41db69:	pop    ecx
  41db6a:	mov    DWORD PTR fs:[eax],edx
  41db6d:	push   0x41db87
  41db72:	lea    eax,[ebp-0xc]
  41db75:	mov    edx,0x2
  41db7a:	call   0x404fac
  41db7f:	ret    
  41db80:	jmp    0x40481c
  41db85:	jmp    0x41db72
  41db87:	mov    eax,ebx
  41db89:	cmp    BYTE PTR [ebp-0x1],0x0
  41db8d:	je     0x41db9e
  41db8f:	call   0x404404
  41db94:	pop    DWORD PTR fs:0x0
  41db9b:	add    esp,0xc
  41db9e:	mov    eax,ebx
  41dba0:	pop    edi
  41dba1:	pop    esi
  41dba2:	pop    ebx
  41dba3:	mov    esp,ebp
  41dba5:	pop    ebp
  41dba6:	ret    0x4
  41dba9:	add    BYTE PTR [eax],al
  41dbab:	add    bh,bh
  41dbad:	(bad)  
  41dbae:	(bad)  
  41dbaf:	inc    DWORD PTR [edx]
  41dbb1:	add    BYTE PTR [eax],al
  41dbb3:	add    BYTE PTR [edx],bh
  41dbb5:	and    BYTE PTR [eax],al
  41dbb7:	add    BYTE PTR [ebp-0x75],dl
  41dbba:	in     al,dx
  41dbbb:	add    esp,0xfffffff0
  41dbbe:	push   ebx
  41dbbf:	push   esi
  41dbc0:	xor    ecx,ecx
  41dbc2:	mov    DWORD PTR [ebp-0x4],ecx
  41dbc5:	mov    DWORD PTR [ebp-0x8],ecx
  41dbc8:	mov    esi,edx
  41dbca:	mov    ebx,eax
  41dbcc:	xor    eax,eax
  41dbce:	push   ebp
  41dbcf:	push   0x41dc4e
  41dbd4:	push   DWORD PTR fs:[eax]
  41dbd7:	mov    DWORD PTR fs:[eax],esp
  41dbda:	cmp    DWORD PTR ds:0x461b0c,0x0
  41dbe1:	jne    0x41dc1e
  41dbe3:	push   0x276d
  41dbe8:	lea    eax,[ebp-0x4]
  41dbeb:	push   eax
  41dbec:	lea    edx,[ebp-0x8]
  41dbef:	mov    eax,ds:0x46ddb0
  41dbf4:	call   0x406f48
  41dbf9:	mov    eax,DWORD PTR [ebp-0x8]
  41dbfc:	push   eax
  41dbfd:	mov    DWORD PTR [ebp-0x10],ebx
  41dc00:	mov    BYTE PTR [ebp-0xc],0xb
  41dc04:	lea    edx,[ebp-0x10]
  41dc07:	xor    ecx,ecx
  41dc09:	pop    eax
  41dc0a:	call   0x409af4
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc12:	mov    dl,0x1
  41dc14:	mov    eax,ds:0x41da60
  41dc19:	call   0x41dae0
  41dc1e:	mov    eax,ebx
  41dc20:	call   0x405418
  41dc25:	push   eax
  41dc26:	mov    eax,ds:0x461b0c
  41dc2b:	push   eax
  41dc2c:	call   0x407260
  41dc31:	mov    DWORD PTR [esi],eax
  41dc33:	xor    eax,eax
  41dc35:	pop    edx
  41dc36:	pop    ecx
  41dc37:	pop    ecx
  41dc38:	mov    DWORD PTR fs:[eax],edx
  41dc3b:	push   0x41dc55
  41dc40:	lea    eax,[ebp-0x8]
  41dc43:	mov    edx,0x2
  41dc48:	call   0x404fac
  41dc4d:	ret    
  41dc4e:	jmp    0x40481c
  41dc53:	jmp    0x41dc40
  41dc55:	pop    esi
  41dc56:	pop    ebx
  41dc57:	mov    esp,ebp
  41dc59:	pop    ebp
  41dc5a:	ret    
  41dc5b:	nop
  41dc5c:	mov    edx,0x4729ec
  41dc61:	mov    eax,0x41dc7c
  41dc66:	call   0x41dbb8
  41dc6b:	call   DWORD PTR ds:0x4729ec
  41dc71:	ret    
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	(bad)  
  41dc75:	(bad)  
  41dc76:	(bad)  
  41dc77:	dec    DWORD PTR [edx]
  41dc79:	add    BYTE PTR [eax],al
  41dc7b:	add    BYTE PTR [edi+0x53],dl
  41dc7e:	inc    ecx
  41dc7f:	inc    ebx
  41dc80:	ins    BYTE PTR es:[edi],dx
  41dc81:	gs popa 
  41dc83:	outs   dx,BYTE PTR ds:[esi]
  41dc84:	jne    0x41dcf6
  41dc86:	add    BYTE PTR [eax],al
  41dc88:	push   ebp
  41dc89:	mov    ebp,esp
  41dc8b:	mov    edx,0x4729f0
  41dc90:	mov    eax,0x41dcb8
  41dc95:	call   0x41dbb8
  41dc9a:	mov    eax,DWORD PTR [ebp+0x10]
  41dc9d:	push   eax
  41dc9e:	mov    eax,DWORD PTR [ebp+0xc]
  41dca1:	push   eax
  41dca2:	mov    eax,DWORD PTR [ebp+0x8]
  41dca5:	push   eax
  41dca6:	call   DWORD PTR ds:0x4729f0
  41dcac:	pop    ebp
  41dcad:	ret    0xc
  41dcb0:	(bad)  
  41dcb1:	(bad)  
  41dcb2:	(bad)  
  41dcb3:	inc    DWORD PTR [esi]
  41dcb5:	add    BYTE PTR [eax],al
  41dcb7:	add    BYTE PTR [ecx+0x63],ah
  41dcba:	arpl   WORD PTR [ebp+0x70],sp
  41dcbd:	je     0x41dcbf
  41dcbf:	add    BYTE PTR [ebp-0x75],dl
  41dcc2:	in     al,dx
  41dcc3:	mov    edx,0x4729f4
  41dcc8:	mov    eax,0x41dcf0
  41dccd:	call   0x41dbb8
  41dcd2:	mov    eax,DWORD PTR [ebp+0x10]
  41dcd5:	push   eax
  41dcd6:	mov    eax,DWORD PTR [ebp+0xc]
  41dcd9:	push   eax
  41dcda:	mov    eax,DWORD PTR [ebp+0x8]
  41dcdd:	push   eax
  41dcde:	call   DWORD PTR ds:0x4729f4
  41dce4:	pop    ebp
  41dce5:	ret    0xc
  41dce8:	(bad)  
  41dce9:	(bad)  
  41dcea:	(bad)  
  41dceb:	inc    DWORD PTR [eax+eax*1]
  41dcee:	add    BYTE PTR [eax],al
  41dcf0:	bound  ebp,QWORD PTR [ecx+0x6e]
  41dcf3:	add    BYTE PTR fs:[eax],al
  41dcf6:	add    BYTE PTR [eax],al
  41dcf8:	push   ebp
  41dcf9:	mov    ebp,esp
  41dcfb:	mov    edx,0x4729f8
  41dd00:	mov    eax,0x41dd20
  41dd05:	call   0x41dbb8
  41dd0a:	mov    eax,DWORD PTR [ebp+0x8]
  41dd0d:	push   eax
  41dd0e:	call   DWORD PTR ds:0x4729f8
  41dd14:	pop    ebp
  41dd15:	ret    0x4
  41dd18:	(bad)  
  41dd19:	(bad)  
  41dd1a:	(bad)  
  41dd1b:	dec    DWORD PTR [ebx]
  41dd1d:	add    BYTE PTR [eax],al
  41dd1f:	add    BYTE PTR [ebx+0x6c],ah
  41dd22:	outs   dx,DWORD PTR ds:[esi]
  41dd23:	jae    0x41dd8a
  41dd25:	jae    0x41dd96
  41dd27:	arpl   WORD PTR [ebx+0x65],bp
  41dd2a:	je     0x41dd2c
  41dd2c:	push   ebp
  41dd2d:	mov    ebp,esp
  41dd2f:	mov    edx,0x4729fc
  41dd34:	mov    eax,0x41dd5c
  41dd39:	call   0x41dbb8
  41dd3e:	mov    eax,DWORD PTR [ebp+0x10]
  41dd41:	push   eax
  41dd42:	mov    eax,DWORD PTR [ebp+0xc]
  41dd45:	push   eax
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	push   eax
  41dd4a:	call   DWORD PTR ds:0x4729fc
  41dd50:	pop    ebp
  41dd51:	ret    0xc
  41dd54:	(bad)  
  41dd55:	(bad)  
  41dd56:	(bad)  
  41dd57:	inc    DWORD PTR [edi]
  41dd59:	add    BYTE PTR [eax],al
  41dd5b:	add    BYTE PTR [ebx+0x6f],ah
  41dd5e:	outs   dx,BYTE PTR ds:[esi]
  41dd5f:	outs   dx,BYTE PTR ds:[esi]
  41dd60:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  41dd65:	mov    ebp,esp
  41dd67:	mov    edx,0x472a00
  41dd6c:	mov    eax,0x41dd94
  41dd71:	call   0x41dbb8
  41dd76:	mov    eax,DWORD PTR [ebp+0x10]
  41dd79:	push   eax
  41dd7a:	mov    eax,DWORD PTR [ebp+0xc]
  41dd7d:	push   eax
  41dd7e:	mov    eax,DWORD PTR [ebp+0x8]
  41dd81:	push   eax
  41dd82:	call   DWORD PTR ds:0x472a00
  41dd88:	pop    ebp
  41dd89:	ret    0xc
  41dd8c:	(bad)  
  41dd8d:	(bad)  
  41dd8e:	(bad)  
  41dd8f:	dec    DWORD PTR [ebx]
  41dd91:	add    BYTE PTR [eax],al
  41dd93:	add    BYTE PTR [ecx+0x6f],ch
  41dd96:	arpl   WORD PTR [esp+ebp*2+0x73],si
  41dd9a:	outs   dx,DWORD PTR ds:[esi]
  41dd9b:	arpl   WORD PTR [ebx+0x65],bp
  41dd9e:	je     0x41dda0
  41dda0:	push   ebp
  41dda1:	mov    ebp,esp
  41dda3:	mov    edx,0x472a04
  41dda8:	mov    eax,0x41ddd0
  41ddad:	call   0x41dbb8
  41ddb2:	mov    eax,DWORD PTR [ebp+0x10]
  41ddb5:	push   eax
  41ddb6:	mov    eax,DWORD PTR [ebp+0xc]
  41ddb9:	push   eax
  41ddba:	mov    eax,DWORD PTR [ebp+0x8]
  41ddbd:	push   eax
  41ddbe:	call   DWORD PTR ds:0x472a04
  41ddc4:	pop    ebp
  41ddc5:	ret    0xc
  41ddc8:	(bad)  
  41ddc9:	(bad)  
  41ddca:	(bad)  
  41ddcb:	dec    DWORD PTR [ebx]
  41ddcd:	add    BYTE PTR [eax],al
  41ddcf:	add    BYTE PTR [edi+0x65],ah
  41ddd2:	je     0x41de44
  41ddd4:	gs gs jb 0x41de46
  41ddd8:	popa   
  41ddd9:	ins    DWORD PTR es:[edi],dx
  41ddda:	add    BYTE PTR gs:[ebp-0x75],dl
  41ddde:	in     al,dx
  41dddf:	mov    edx,0x472a08
  41dde4:	mov    eax,0x41de0c
  41dde9:	call   0x41dbb8
  41ddee:	mov    eax,DWORD PTR [ebp+0x10]
  41ddf1:	push   eax
  41ddf2:	mov    eax,DWORD PTR [ebp+0xc]
  41ddf5:	push   eax
  41ddf6:	mov    eax,DWORD PTR [ebp+0x8]
  41ddf9:	push   eax
  41ddfa:	call   DWORD PTR ds:0x472a08
  41de00:	pop    ebp
  41de01:	ret    0xc
  41de04:	(bad)  
  41de05:	(bad)  
  41de06:	(bad)  
  41de07:	dec    DWORD PTR [ebx]
  41de09:	add    BYTE PTR [eax],al
  41de0b:	add    BYTE PTR [edi+0x65],ah
  41de0e:	je     0x41de83
  41de10:	outs   dx,DWORD PTR ds:[esi]
  41de11:	arpl   WORD PTR [ebx+0x6e],bp
  41de14:	popa   
  41de15:	ins    DWORD PTR es:[edi],dx
  41de16:	add    BYTE PTR gs:[ebp-0x75],dl
  41de1a:	in     al,dx
  41de1b:	mov    edx,0x472a0c
  41de20:	mov    eax,0x41de50
  41de25:	call   0x41dbb8
  41de2a:	mov    eax,DWORD PTR [ebp+0x18]
  41de2d:	push   eax
  41de2e:	mov    eax,DWORD PTR [ebp+0x14]
  41de31:	push   eax
  41de32:	mov    eax,DWORD PTR [ebp+0x10]
  41de35:	push   eax
  41de36:	mov    eax,DWORD PTR [ebp+0xc]
  41de39:	push   eax
  41de3a:	mov    eax,DWORD PTR [ebp+0x8]
  41de3d:	push   eax
  41de3e:	call   DWORD PTR ds:0x472a0c
  41de44:	pop    ebp
  41de45:	ret    0x14
  41de48:	(bad)  
  41de49:	(bad)  
  41de4a:	(bad)  
  41de4b:	dec    DWORD PTR [edx]
  41de4d:	add    BYTE PTR [eax],al
  41de4f:	add    BYTE PTR [edi+0x65],ah
  41de52:	je     0x41dec7
  41de54:	outs   dx,DWORD PTR ds:[esi]
  41de55:	arpl   WORD PTR [ebx+0x6f],bp
  41de58:	jo     0x41dece
  41de5a:	add    BYTE PTR [eax],al
  41de5c:	push   ebp
  41de5d:	mov    ebp,esp
  41de5f:	mov    edx,0x472a10
  41de64:	mov    eax,0x41de84
  41de69:	call   0x41dbb8
  41de6e:	mov    eax,DWORD PTR [ebp+0x8]
  41de71:	push   eax
  41de72:	call   DWORD PTR ds:0x472a10
  41de78:	pop    ebp
  41de79:	ret    0x4
  41de7c:	(bad)  
  41de7d:	(bad)  
  41de7e:	(bad)  
  41de7f:	inc    DWORD PTR ds:0x68000000
  41de85:	je     0x41def6
  41de87:	outs   dx,BYTE PTR ds:[esi]
  41de88:	ins    BYTE PTR es:[edi],dx
  41de89:	add    BYTE PTR [eax],al
  41de8b:	add    BYTE PTR [ebp-0x75],dl
  41de8e:	in     al,dx
  41de8f:	mov    edx,0x472a14
  41de94:	mov    eax,0x41deb8
  41de99:	call   0x41dbb8
  41de9e:	movzx  eax,WORD PTR [ebp+0x8]
  41dea2:	push   eax
  41dea3:	call   DWORD PTR ds:0x472a14
  41dea9:	pop    ebp
  41deaa:	ret    0x4
  41dead:	add    BYTE PTR [eax],al
  41deaf:	add    bh,bh
  41deb1:	(bad)  
  41deb2:	(bad)  
  41deb3:	inc    DWORD PTR ds:0x68000000
  41deb9:	je     0x41df2a
  41debb:	outs   dx,BYTE PTR ds:[esi]
  41debc:	jae    0x41debe
  41debe:	add    BYTE PTR [eax],al
  41dec0:	push   ebp
  41dec1:	mov    ebp,esp
  41dec3:	mov    edx,0x472a18
  41dec8:	mov    eax,0x41dee8
  41decd:	call   0x41dbb8
  41ded2:	mov    eax,DWORD PTR [ebp+0x8]
  41ded5:	push   eax
  41ded6:	call   DWORD PTR ds:0x472a18
  41dedc:	pop    ebp
  41dedd:	ret    0x4
  41dee0:	(bad)  
  41dee1:	(bad)  
  41dee2:	(bad)  
  41dee3:	dec    DWORD PTR [ecx]
  41dee5:	add    BYTE PTR [eax],al
  41dee7:	add    BYTE PTR [ecx+0x6e],ch
  41deea:	gs je  0x41df4c
  41deed:	popa   
  41deee:	fs fs jb 0x41def2
  41def2:	add    BYTE PTR [eax],al
  41def4:	push   ebp
  41def5:	mov    ebp,esp
  41def7:	mov    edx,0x472a1c
  41defc:	mov    eax,0x41df1c
  41df01:	call   0x41dbb8
  41df06:	push   DWORD PTR [ebp+0x8]
  41df09:	call   DWORD PTR ds:0x472a1c
  41df0f:	pop    ebp
  41df10:	ret    0x4
  41df13:	add    bh,bh
  41df15:	(bad)  
  41df16:	(bad)  
  41df17:	dec    DWORD PTR [ecx]
  41df19:	add    BYTE PTR [eax],al
  41df1b:	add    BYTE PTR [ecx+0x6e],ch
  41df1e:	gs je  0x41df80
  41df21:	outs   dx,BYTE PTR ds:[esi]
  41df22:	je     0x41df93
  41df24:	popa   
  41df25:	add    BYTE PTR [eax],al
  41df27:	add    BYTE PTR [ebp-0x75],dl
  41df2a:	in     al,dx
  41df2b:	mov    edx,0x472a20
  41df30:	mov    eax,0x41df54
  41df35:	call   0x41dbb8
  41df3a:	mov    eax,DWORD PTR [ebp+0xc]
  41df3d:	push   eax
  41df3e:	mov    eax,DWORD PTR [ebp+0x8]
  41df41:	push   eax
  41df42:	call   DWORD PTR ds:0x472a20
  41df48:	pop    ebp
  41df49:	ret    0x8
  41df4c:	(bad)  
  41df4d:	(bad)  
  41df4e:	(bad)  
  41df4f:	inc    DWORD PTR [esi]
  41df51:	add    BYTE PTR [eax],al
  41df53:	add    BYTE PTR [ecx+ebp*2+0x73],ch
  41df57:	je     0x41dfbe
  41df59:	outs   dx,BYTE PTR ds:[esi]
  41df5a:	add    BYTE PTR [eax],al
  41df5c:	push   ebp
  41df5d:	mov    ebp,esp
  41df5f:	mov    edx,0x472a24
  41df64:	mov    eax,0x41df84
  41df69:	call   0x41dbb8
  41df6e:	mov    eax,DWORD PTR [ebp+0x8]
  41df71:	push   eax
  41df72:	call   DWORD PTR ds:0x472a24
  41df78:	pop    ebp
  41df79:	ret    0x4
  41df7c:	(bad)  
  41df7d:	(bad)  
  41df7e:	(bad)  
  41df7f:	inc    DWORD PTR ds:0x6e000000
  41df85:	je     0x41dff6
  41df87:	push   0x6c
  41df8c:	push   ebp
  41df8d:	mov    ebp,esp
  41df8f:	mov    edx,0x472a28
  41df94:	mov    eax,0x41dfb8
  41df99:	call   0x41dbb8
  41df9e:	movzx  eax,WORD PTR [ebp+0x8]
  41dfa2:	push   eax
  41dfa3:	call   DWORD PTR ds:0x472a28
  41dfa9:	pop    ebp
  41dfaa:	ret    0x4
  41dfad:	add    BYTE PTR [eax],al
  41dfaf:	add    bh,bh
  41dfb1:	(bad)  
  41dfb2:	(bad)  
  41dfb3:	inc    DWORD PTR ds:0x6e000000
  41dfb9:	je     0x41e02a
  41dfbb:	push   0x73
  41dfc0:	push   ebp
  41dfc1:	mov    ebp,esp
  41dfc3:	mov    edx,0x472a2c
  41dfc8:	mov    eax,0x41dff4
  41dfcd:	call   0x41dbb8
  41dfd2:	mov    eax,DWORD PTR [ebp+0x14]
  41dfd5:	push   eax
  41dfd6:	mov    eax,DWORD PTR [ebp+0x10]
  41dfd9:	push   eax
  41dfda:	mov    eax,DWORD PTR [ebp+0xc]
  41dfdd:	push   eax
  41dfde:	mov    eax,DWORD PTR [ebp+0x8]
  41dfe1:	push   eax
  41dfe2:	call   DWORD PTR ds:0x472a2c
  41dfe8:	pop    ebp
  41dfe9:	ret    0x10
  41dfec:	(bad)  
  41dfed:	(bad)  
  41dfee:	(bad)  
  41dfef:	inc    DWORD PTR [eax+eax*1]
  41dff2:	add    BYTE PTR [eax],al
  41dff4:	jb     0x41e05b
  41dff6:	arpl   WORD PTR [esi+0x0],si
  41dff9:	add    BYTE PTR [eax],al
  41dffb:	add    BYTE PTR [ebp-0x75],dl
  41dffe:	in     al,dx
  41dfff:	mov    edx,0x472a30
  41e004:	mov    eax,0x41e038
  41e009:	call   0x41dbb8
  41e00e:	mov    eax,DWORD PTR [ebp+0x1c]
  41e011:	push   eax
  41e012:	mov    eax,DWORD PTR [ebp+0x18]
  41e015:	push   eax
  41e016:	mov    eax,DWORD PTR [ebp+0x14]
  41e019:	push   eax
  41e01a:	mov    eax,DWORD PTR [ebp+0x10]
  41e01d:	push   eax
  41e01e:	mov    eax,DWORD PTR [ebp+0xc]
  41e021:	push   eax
  41e022:	mov    eax,DWORD PTR [ebp+0x8]
  41e025:	push   eax
  41e026:	call   DWORD PTR ds:0x472a30
  41e02c:	pop    ebp
  41e02d:	ret    0x18
  41e030:	(bad)  
  41e031:	(bad)  
  41e032:	(bad)  
  41e033:	dec    DWORD PTR [eax]
  41e035:	add    BYTE PTR [eax],al
  41e037:	add    BYTE PTR [edx+0x65],dh
  41e03a:	arpl   WORD PTR [esi+0x66],si
  41e03d:	jb     0x41e0ae
  41e03f:	ins    DWORD PTR es:[edi],dx
  41e040:	add    BYTE PTR [eax],al
  41e042:	add    BYTE PTR [eax],al
  41e044:	push   ebp
  41e045:	mov    ebp,esp
  41e047:	mov    edx,0x472a34
  41e04c:	mov    eax,0x41e07c
  41e051:	call   0x41dbb8
  41e056:	mov    eax,DWORD PTR [ebp+0x18]
  41e059:	push   eax
  41e05a:	mov    eax,DWORD PTR [ebp+0x14]
  41e05d:	push   eax
  41e05e:	mov    eax,DWORD PTR [ebp+0x10]
  41e061:	push   eax
  41e062:	mov    eax,DWORD PTR [ebp+0xc]
  41e065:	push   eax
  41e066:	mov    eax,DWORD PTR [ebp+0x8]
  41e069:	push   eax
  41e06a:	call   DWORD PTR ds:0x472a34
  41e070:	pop    ebp
  41e071:	ret    0x14
  41e074:	(bad)  
  41e075:	(bad)  
  41e076:	(bad)  
  41e077:	inc    DWORD PTR [esi]
  41e079:	add    BYTE PTR [eax],al
  41e07b:	add    BYTE PTR [ebx+0x65],dh
  41e07e:	ins    BYTE PTR es:[edi],dx
  41e07f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e084:	push   ebp
  41e085:	mov    ebp,esp
  41e087:	mov    edx,0x472a38
  41e08c:	mov    eax,0x41e0b8
  41e091:	call   0x41dbb8
  41e096:	mov    eax,DWORD PTR [ebp+0x14]
  41e099:	push   eax
  41e09a:	mov    eax,DWORD PTR [ebp+0x10]
  41e09d:	push   eax
  41e09e:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a1:	push   eax
  41e0a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e0a5:	push   eax
  41e0a6:	call   DWORD PTR ds:0x472a38
  41e0ac:	pop    ebp
  41e0ad:	ret    0x10
  41e0b0:	(bad)  
  41e0b1:	(bad)  
  41e0b2:	(bad)  
  41e0b3:	inc    DWORD PTR [eax+eax*1]
  41e0b6:	add    BYTE PTR [eax],al
  41e0b8:	jae    0x41e11f
  41e0ba:	outs   dx,BYTE PTR ds:[esi]
  41e0bb:	add    BYTE PTR fs:[eax],al
  41e0be:	add    BYTE PTR [eax],al
  41e0c0:	push   ebp
  41e0c1:	mov    ebp,esp
  41e0c3:	mov    edx,0x472a3c
  41e0c8:	mov    eax,0x41e0fc
  41e0cd:	call   0x41dbb8
  41e0d2:	mov    eax,DWORD PTR [ebp+0x1c]
  41e0d5:	push   eax
  41e0d6:	mov    eax,DWORD PTR [ebp+0x18]
  41e0d9:	push   eax
  41e0da:	mov    eax,DWORD PTR [ebp+0x14]
  41e0dd:	push   eax
  41e0de:	mov    eax,DWORD PTR [ebp+0x10]
  41e0e1:	push   eax
  41e0e2:	mov    eax,DWORD PTR [ebp+0xc]
  41e0e5:	push   eax
  41e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  41e0e9:	push   eax
  41e0ea:	call   DWORD PTR ds:0x472a3c
  41e0f0:	pop    ebp
  41e0f1:	ret    0x18
  41e0f4:	(bad)  
  41e0f5:	(bad)  
  41e0f6:	(bad)  
  41e0f7:	inc    DWORD PTR [esi]
  41e0f9:	add    BYTE PTR [eax],al
  41e0fb:	add    BYTE PTR [ebx+0x65],dh
  41e0fe:	outs   dx,BYTE PTR ds:[esi]
  41e0ff:	fs je  0x41e171
  41e102:	add    BYTE PTR [eax],al
  41e104:	push   ebp
  41e105:	mov    ebp,esp
  41e107:	mov    edx,0x472a40
  41e10c:	mov    eax,0x41e13c
  41e111:	call   0x41dbb8
  41e116:	mov    eax,DWORD PTR [ebp+0x18]
  41e119:	push   eax
  41e11a:	mov    eax,DWORD PTR [ebp+0x14]
  41e11d:	push   eax
  41e11e:	mov    eax,DWORD PTR [ebp+0x10]
  41e121:	push   eax
  41e122:	mov    eax,DWORD PTR [ebp+0xc]
  41e125:	push   eax
  41e126:	mov    eax,DWORD PTR [ebp+0x8]
  41e129:	push   eax
  41e12a:	call   DWORD PTR ds:0x472a40
  41e130:	pop    ebp
  41e131:	ret    0x14
  41e134:	(bad)  
  41e135:	(bad)  
  41e136:	(bad)  
  41e137:	dec    DWORD PTR [edx]
  41e139:	add    BYTE PTR [eax],al
  41e13b:	add    BYTE PTR [ebx+0x65],dh
  41e13e:	je     0x41e1b3
  41e140:	outs   dx,DWORD PTR ds:[esi]
  41e141:	arpl   WORD PTR [ebx+0x6f],bp
  41e144:	jo     0x41e1ba
  41e146:	add    BYTE PTR [eax],al
  41e148:	push   ebp
  41e149:	mov    ebp,esp
  41e14b:	mov    edx,0x472a44
  41e150:	mov    eax,0x41e174
  41e155:	call   0x41dbb8
  41e15a:	mov    eax,DWORD PTR [ebp+0xc]
  41e15d:	push   eax
  41e15e:	mov    eax,DWORD PTR [ebp+0x8]
  41e161:	push   eax
  41e162:	call   DWORD PTR ds:0x472a44
  41e168:	pop    ebp
  41e169:	ret    0x8
  41e16c:	(bad)  
  41e16d:	(bad)  
  41e16e:	(bad)  
  41e16f:	dec    DWORD PTR [eax]
  41e171:	add    BYTE PTR [eax],al
  41e173:	add    BYTE PTR [ebx+0x68],dh
  41e176:	jne    0x41e1ec
  41e178:	outs   dx,DWORD PTR fs:[esi]
  41e17a:	ja     0x41e1ea
  41e17c:	add    BYTE PTR [eax],al
  41e17e:	add    BYTE PTR [eax],al
  41e180:	push   ebp
  41e181:	mov    ebp,esp
  41e183:	mov    edx,0x472a48
  41e188:	mov    eax,0x41e1b0
  41e18d:	call   0x41dbb8
  41e192:	mov    eax,DWORD PTR [ebp+0x10]
  41e195:	push   eax
  41e196:	mov    eax,DWORD PTR [ebp+0xc]
  41e199:	push   eax
  41e19a:	mov    eax,DWORD PTR [ebp+0x8]
  41e19d:	push   eax
  41e19e:	call   DWORD PTR ds:0x472a48
  41e1a4:	pop    ebp
  41e1a5:	ret    0xc
  41e1a8:	(bad)  
  41e1a9:	(bad)  
  41e1aa:	(bad)  
  41e1ab:	inc    DWORD PTR [esi]
  41e1ad:	add    BYTE PTR [eax],al
  41e1af:	add    BYTE PTR [ebx+0x6f],dh
  41e1b2:	arpl   WORD PTR [ebx+0x65],bp
  41e1b5:	je     0x41e1b7
  41e1b7:	add    BYTE PTR [ebp-0x75],dl
  41e1ba:	in     al,dx
  41e1bb:	mov    edx,0x472a4c
  41e1c0:	mov    eax,0x41e1e8
  41e1c5:	call   0x41dbb8
  41e1ca:	mov    eax,DWORD PTR [ebp+0x10]
  41e1cd:	push   eax
  41e1ce:	mov    eax,DWORD PTR [ebp+0xc]
  41e1d1:	push   eax
  41e1d2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d5:	push   eax
  41e1d6:	call   DWORD PTR ds:0x472a4c
  41e1dc:	pop    ebp
  41e1dd:	ret    0xc
  41e1e0:	(bad)  
  41e1e1:	(bad)  
  41e1e2:	(bad)  
  41e1e3:	dec    DWORD PTR ds:0x67000000
  41e1e9:	gs je  0x41e254
  41e1ec:	outs   dx,DWORD PTR ds:[esi]
  41e1ed:	jae    0x41e263
  41e1ef:	bound  edi,QWORD PTR [ecx+0x61]
  41e1f2:	fs fs jb 0x41e1f6
  41e1f6:	add    BYTE PTR [eax],al
  41e1f8:	push   ebp
  41e1f9:	mov    ebp,esp
  41e1fb:	mov    edx,0x472a50
  41e200:	mov    eax,0x41e220
  41e205:	call   0x41dbb8
  41e20a:	mov    eax,DWORD PTR [ebp+0x8]
  41e20d:	push   eax
  41e20e:	call   DWORD PTR ds:0x472a50
  41e214:	pop    ebp
  41e215:	ret    0x4
  41e218:	(bad)  
  41e219:	(bad)  
  41e21a:	(bad)  
  41e21b:	dec    DWORD PTR ds:0x67000000
  41e221:	gs je  0x41e28c
  41e224:	outs   dx,DWORD PTR ds:[esi]
  41e225:	jae    0x41e29b
  41e227:	bound  edi,QWORD PTR [ecx+0x6e]
  41e22a:	popa   
  41e22b:	ins    DWORD PTR es:[edi],dx
  41e22c:	add    BYTE PTR gs:[eax],al
  41e22f:	add    BYTE PTR [ebp-0x75],dl
  41e232:	in     al,dx
  41e233:	mov    edx,0x472a54
  41e238:	mov    eax,0x41e25c
  41e23d:	call   0x41dbb8
  41e242:	mov    eax,DWORD PTR [ebp+0xc]
  41e245:	push   eax
  41e246:	mov    eax,DWORD PTR [ebp+0x8]
  41e249:	push   eax
  41e24a:	call   DWORD PTR ds:0x472a54
  41e250:	pop    ebp
  41e251:	ret    0x8
  41e254:	(bad)  
  41e255:	(bad)  
  41e256:	(bad)  
  41e257:	dec    DWORD PTR [ebx]
  41e259:	add    BYTE PTR [eax],al
  41e25b:	add    BYTE PTR [edi+0x65],ah
  41e25e:	je     0x41e2c8
  41e260:	outs   dx,DWORD PTR ds:[esi]
  41e261:	jae    0x41e2d7
  41e263:	outs   dx,BYTE PTR ds:[esi]
  41e264:	popa   
  41e265:	ins    DWORD PTR es:[edi],dx
  41e266:	add    BYTE PTR gs:[ebp-0x75],dl
  41e26a:	in     al,dx
  41e26b:	mov    edx,0x472a58
  41e270:	mov    eax,0x41e294
  41e275:	call   0x41dbb8
  41e27a:	mov    eax,DWORD PTR [ebp+0xc]
  41e27d:	push   eax
  41e27e:	mov    eax,DWORD PTR [ebp+0x8]
  41e281:	push   eax
  41e282:	call   DWORD PTR ds:0x472a58
  41e288:	pop    ebp
  41e289:	ret    0x8
  41e28c:	(bad)  
  41e28d:	(bad)  
  41e28e:	(bad)  
  41e28f:	dec    DWORD PTR ds:0x67000000
  41e295:	gs je  0x41e30b
  41e298:	gs jb  0x41e311
  41e29b:	bound  edi,QWORD PTR [ecx+0x70]
  41e29e:	outs   dx,DWORD PTR ds:[esi]
  41e29f:	jb     0x41e315
  41e2a1:	add    BYTE PTR [eax],al
  41e2a3:	add    BYTE PTR [ebp-0x75],dl
  41e2a6:	in     al,dx
  41e2a7:	mov    edx,0x472a5c
  41e2ac:	mov    eax,0x41e2d0
  41e2b1:	call   0x41dbb8
  41e2b6:	mov    eax,DWORD PTR [ebp+0xc]
  41e2b9:	push   eax
  41e2ba:	mov    eax,DWORD PTR [ebp+0x8]
  41e2bd:	push   eax
  41e2be:	call   DWORD PTR ds:0x472a5c
  41e2c4:	pop    ebp
  41e2c5:	ret    0x8
  41e2c8:	(bad)  
  41e2c9:	(bad)  
  41e2ca:	(bad)  
  41e2cb:	dec    DWORD PTR ds:0x67000000
  41e2d1:	gs je  0x41e347
  41e2d4:	gs jb  0x41e34d
  41e2d7:	bound  edi,QWORD PTR [ecx+0x6e]
  41e2da:	popa   
  41e2db:	ins    DWORD PTR es:[edi],dx
  41e2dc:	add    BYTE PTR gs:[eax],al
  41e2df:	add    BYTE PTR [ebp-0x75],dl
  41e2e2:	in     al,dx
  41e2e3:	mov    edx,0x472a60
  41e2e8:	mov    eax,0x41e308
  41e2ed:	call   0x41dbb8
  41e2f2:	mov    eax,DWORD PTR [ebp+0x8]
  41e2f5:	push   eax
  41e2f6:	call   DWORD PTR ds:0x472a60
  41e2fc:	pop    ebp
  41e2fd:	ret    0x4
  41e300:	(bad)  
  41e301:	(bad)  
  41e302:	(bad)  
  41e303:	call   DWORD PTR [eax]
  41e305:	add    BYTE PTR [eax],al
  41e307:	add    BYTE PTR [edi+0x65],ah
  41e30a:	je     0x41e37c
  41e30c:	jb     0x41e37d
  41e30e:	je     0x41e37f
  41e310:	bound  edi,QWORD PTR [ecx+0x6e]
  41e313:	jne    0x41e382
  41e315:	bound  esp,QWORD PTR [ebp+0x72]
  41e318:	add    BYTE PTR [eax],al
  41e31a:	add    BYTE PTR [eax],al
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	mov    edx,0x472a64
  41e324:	mov    eax,0x41e344
  41e329:	call   0x41dbb8
  41e32e:	mov    eax,DWORD PTR [ebp+0x8]
  41e331:	push   eax
  41e332:	call   DWORD PTR ds:0x472a64
  41e338:	pop    ebp
  41e339:	ret    0x4
  41e33c:	(bad)  
  41e33d:	(bad)  
  41e33e:	(bad)  
  41e33f:	dec    DWORD PTR [esi]
  41e341:	add    BYTE PTR [eax],al
  41e343:	add    BYTE PTR [edi+0x65],ah
  41e346:	je     0x41e3b8
  41e348:	jb     0x41e3b9
  41e34a:	je     0x41e3bb
  41e34c:	bound  edi,QWORD PTR [ecx+0x6e]
  41e34f:	popa   
  41e350:	ins    DWORD PTR es:[edi],dx
  41e351:	add    BYTE PTR gs:[eax],al
  41e354:	push   ebp
  41e355:	mov    ebp,esp
  41e357:	mov    edx,0x472a68
  41e35c:	mov    eax,0x41e37c
  41e361:	call   0x41dbb8
  41e366:	mov    eax,DWORD PTR [ebp+0x8]
  41e369:	push   eax
  41e36a:	call   DWORD PTR ds:0x472a68
  41e370:	pop    ebp
  41e371:	ret    0x4
  41e374:	(bad)  
  41e375:	(bad)  
  41e376:	(bad)  
  41e377:	dec    DWORD PTR [edi]
  41e379:	add    BYTE PTR [eax],al
  41e37b:	add    BYTE PTR [edi+0x53],dl
  41e37e:	inc    ecx
  41e37f:	push   ebx
  41e380:	gs je  0x41e3cf
  41e383:	popa   
  41e384:	jae    0x41e3fa
  41e386:	inc    ebp
  41e387:	jb     0x41e3fb
  41e389:	outs   dx,DWORD PTR ds:[esi]
  41e38a:	jb     0x41e38c
  41e38c:	mov    edx,0x472a6c
  41e391:	mov    eax,0x41e3ac
  41e396:	call   0x41dbb8
  41e39b:	call   DWORD PTR ds:0x472a6c
  41e3a1:	ret    
  41e3a2:	add    BYTE PTR [eax],al
  41e3a4:	(bad)  
  41e3a5:	(bad)  
  41e3a6:	(bad)  
  41e3a7:	dec    DWORD PTR [edi]
  41e3a9:	add    BYTE PTR [eax],al
  41e3ab:	add    BYTE PTR [edi+0x53],dl
  41e3ae:	inc    ecx
  41e3af:	inc    edi
  41e3b0:	gs je  0x41e3ff
  41e3b3:	popa   
  41e3b4:	jae    0x41e42a
  41e3b6:	inc    ebp
  41e3b7:	jb     0x41e42b
  41e3b9:	outs   dx,DWORD PTR ds:[esi]
  41e3ba:	jb     0x41e3bc
  41e3bc:	mov    edx,0x472a70
  41e3c1:	mov    eax,0x41e3dc
  41e3c6:	call   0x41dbb8
  41e3cb:	call   DWORD PTR ds:0x472a70
  41e3d1:	ret    
  41e3d2:	add    BYTE PTR [eax],al
  41e3d4:	(bad)  
  41e3d5:	(bad)  
  41e3d6:	(bad)  
  41e3d7:	dec    DWORD PTR ds:0x57000000
  41e3dd:	push   ebx
  41e3de:	inc    ecx
  41e3df:	dec    ecx
  41e3e0:	jae    0x41e424
  41e3e2:	ins    BYTE PTR es:[edi],dx
  41e3e3:	outs   dx,DWORD PTR ds:[esi]
  41e3e4:	arpl   WORD PTR [ebx+0x69],bp
  41e3e7:	outs   dx,BYTE PTR ds:[esi]
  41e3e8:	add    BYTE PTR [bx+si],al
  41e3eb:	add    BYTE PTR [edx+0x472a74],bh
  41e3f1:	mov    eax,0x41e40c
  41e3f6:	call   0x41dbb8
  41e3fb:	call   DWORD PTR ds:0x472a74
  41e401:	ret    
  41e402:	add    BYTE PTR [eax],al
  41e404:	(bad)  
  41e405:	(bad)  
  41e406:	(bad)  
  41e407:	call   DWORD PTR ds:0x57000000
  41e40d:	push   ebx
  41e40e:	inc    ecx
  41e40f:	push   ebp
  41e410:	outs   dx,BYTE PTR ds:[esi]
  41e411:	push   0x426b6f6f
  41e416:	ins    BYTE PTR es:[edi],dx
  41e417:	outs   dx,DWORD PTR ds:[esi]
  41e418:	arpl   WORD PTR [ebx+0x69],bp
  41e41b:	outs   dx,BYTE PTR ds:[esi]
  41e41c:	addr16 dec eax
  41e41e:	outs   dx,DWORD PTR ds:[esi]
  41e41f:	outs   dx,DWORD PTR ds:[esi]
  41e420:	imul   eax,DWORD PTR [eax],0x0
  41e423:	add    BYTE PTR [ebp-0x75],dl
  41e426:	in     al,dx
  41e427:	mov    edx,0x472a78
  41e42c:	mov    eax,0x41e44c
  41e431:	call   0x41dbb8
  41e436:	mov    eax,DWORD PTR [ebp+0x8]
  41e439:	push   eax
  41e43a:	call   DWORD PTR ds:0x472a78
  41e440:	pop    ebp
  41e441:	ret    0x4
  41e444:	(bad)  
  41e445:	(bad)  
  41e446:	(bad)  
  41e447:	call   DWORD PTR [edx]
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    BYTE PTR [edi+0x53],dl
  41e44e:	inc    ecx
  41e44f:	push   ebx
  41e450:	gs je  0x41e495
  41e453:	ins    BYTE PTR es:[edi],dx
  41e454:	outs   dx,DWORD PTR ds:[esi]
  41e455:	arpl   WORD PTR [ebx+0x69],bp
  41e458:	outs   dx,BYTE PTR ds:[esi]
  41e459:	addr16 dec eax
  41e45b:	outs   dx,DWORD PTR ds:[esi]
  41e45c:	outs   dx,DWORD PTR ds:[esi]
  41e45d:	imul   eax,DWORD PTR [eax],0x0
  41e460:	mov    edx,0x472a7c
  41e465:	mov    eax,0x41e480
  41e46a:	call   0x41dbb8
  41e46f:	call   DWORD PTR ds:0x472a7c
  41e475:	ret    
  41e476:	add    BYTE PTR [eax],al
  41e478:	(bad)  
  41e479:	(bad)  
  41e47a:	(bad)  
  41e47b:	call   DWORD PTR ds:0x57000000
  41e481:	push   ebx
  41e482:	inc    ecx
  41e483:	inc    ebx
  41e484:	popa   
  41e485:	outs   dx,BYTE PTR ds:[esi]
  41e486:	arpl   WORD PTR [ebp+0x6c],sp
  41e489:	inc    edx
  41e48a:	ins    BYTE PTR es:[edi],dx
  41e48b:	outs   dx,DWORD PTR ds:[esi]
  41e48c:	arpl   WORD PTR [ebx+0x69],bp
  41e48f:	outs   dx,BYTE PTR ds:[esi]
  41e490:	addr16 inc ebx
  41e492:	popa   
  41e493:	ins    BYTE PTR es:[edi],dx
  41e494:	ins    BYTE PTR es:[edi],dx
  41e495:	add    BYTE PTR [eax],al
  41e497:	add    BYTE PTR [ebp-0x75],dl
  41e49a:	in     al,dx
  41e49b:	mov    edx,0x472a80
  41e4a0:	mov    eax,0x41e4d4
  41e4a5:	call   0x41dbb8
  41e4aa:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4ad:	push   eax
  41e4ae:	mov    eax,DWORD PTR [ebp+0x18]
  41e4b1:	push   eax
  41e4b2:	mov    eax,DWORD PTR [ebp+0x14]
  41e4b5:	push   eax
  41e4b6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4b9:	push   eax
  41e4ba:	mov    eax,DWORD PTR [ebp+0xc]
  41e4bd:	push   eax
  41e4be:	mov    eax,DWORD PTR [ebp+0x8]
  41e4c1:	push   eax
  41e4c2:	call   DWORD PTR ds:0x472a80
  41e4c8:	pop    ebp
  41e4c9:	ret    0x18
  41e4cc:	(bad)  
  41e4cd:	(bad)  
  41e4ce:	(bad)  
  41e4cf:	call   DWORD PTR ds:0x57000000
  41e4d5:	push   ebx
  41e4d6:	inc    ecx
  41e4d7:	inc    ecx
  41e4d8:	jae    0x41e553
  41e4da:	outs   dx,BYTE PTR ds:[esi]
  41e4db:	arpl   WORD PTR [edi+0x65],ax
  41e4de:	je     0x41e533
  41e4e0:	gs jb  0x41e559
  41e4e3:	inc    edx
  41e4e4:	jns    0x41e534
  41e4e6:	popa   
  41e4e7:	ins    DWORD PTR es:[edi],dx
  41e4e8:	add    BYTE PTR gs:[eax],al
  41e4eb:	add    BYTE PTR [ebp-0x75],dl
  41e4ee:	in     al,dx
  41e4ef:	mov    edx,0x472a84
  41e4f4:	mov    eax,0x41e528
  41e4f9:	call   0x41dbb8
  41e4fe:	mov    eax,DWORD PTR [ebp+0x1c]
  41e501:	push   eax
  41e502:	mov    eax,DWORD PTR [ebp+0x18]
  41e505:	push   eax
  41e506:	mov    eax,DWORD PTR [ebp+0x14]
  41e509:	push   eax
  41e50a:	mov    eax,DWORD PTR [ebp+0x10]
  41e50d:	push   eax
  41e50e:	mov    eax,DWORD PTR [ebp+0xc]
  41e511:	push   eax
  41e512:	mov    eax,DWORD PTR [ebp+0x8]
  41e515:	push   eax
  41e516:	call   DWORD PTR ds:0x472a84
  41e51c:	pop    ebp
  41e51d:	ret    0x18
  41e520:	(bad)  
  41e521:	(bad)  
  41e522:	(bad)  
  41e523:	call   DWORD PTR ds:0x57000000
  41e529:	push   ebx
  41e52a:	inc    ecx
  41e52b:	inc    ecx
  41e52c:	jae    0x41e5a7
  41e52e:	outs   dx,BYTE PTR ds:[esi]
  41e52f:	arpl   WORD PTR [edi+0x65],ax
  41e532:	je     0x41e587
  41e534:	gs jb  0x41e5ad
  41e537:	inc    edx
  41e538:	jns    0x41e58a
  41e53a:	outs   dx,DWORD PTR ds:[esi]
  41e53b:	jb     0x41e5b1
  41e53d:	add    BYTE PTR [eax],al
  41e53f:	add    BYTE PTR [ebp-0x75],dl
  41e542:	in     al,dx
  41e543:	mov    edx,0x472a88
  41e548:	mov    eax,0x41e578
  41e54d:	call   0x41dbb8
  41e552:	mov    eax,DWORD PTR [ebp+0x18]
  41e555:	push   eax
  41e556:	mov    eax,DWORD PTR [ebp+0x14]
  41e559:	push   eax
  41e55a:	mov    eax,DWORD PTR [ebp+0x10]
  41e55d:	push   eax
  41e55e:	mov    eax,DWORD PTR [ebp+0xc]
  41e561:	push   eax
  41e562:	mov    eax,DWORD PTR [ebp+0x8]
  41e565:	push   eax
  41e566:	call   DWORD PTR ds:0x472a88
  41e56c:	pop    ebp
  41e56d:	ret    0x14
  41e570:	(bad)  
  41e571:	(bad)  
  41e572:	(bad)  
  41e573:	call   DWORD PTR [esi]
  41e575:	add    BYTE PTR [eax],al
  41e577:	add    BYTE PTR [edi+0x53],dl
  41e57a:	inc    ecx
  41e57b:	inc    ecx
  41e57c:	jae    0x41e5f7
  41e57e:	outs   dx,BYTE PTR ds:[esi]
  41e57f:	arpl   WORD PTR [edi+0x65],ax
  41e582:	je     0x41e5d4
  41e584:	jb     0x41e5f5
  41e586:	je     0x41e5f7
  41e588:	inc    edx
  41e589:	jns    0x41e5d9
  41e58b:	popa   
  41e58c:	ins    DWORD PTR es:[edi],dx
  41e58d:	add    BYTE PTR gs:[eax],al
  41e590:	push   ebp
  41e591:	mov    ebp,esp
  41e593:	mov    edx,0x472a8c
  41e598:	mov    eax,0x41e5c8
  41e59d:	call   0x41dbb8
  41e5a2:	mov    eax,DWORD PTR [ebp+0x18]
  41e5a5:	push   eax
  41e5a6:	mov    eax,DWORD PTR [ebp+0x14]
  41e5a9:	push   eax
  41e5aa:	mov    eax,DWORD PTR [ebp+0x10]
  41e5ad:	push   eax
  41e5ae:	mov    eax,DWORD PTR [ebp+0xc]
  41e5b1:	push   eax
  41e5b2:	mov    eax,DWORD PTR [ebp+0x8]
  41e5b5:	push   eax
  41e5b6:	call   DWORD PTR ds:0x472a8c
  41e5bc:	pop    ebp
  41e5bd:	ret    0x14
  41e5c0:	(bad)  
  41e5c1:	(bad)  
  41e5c2:	(bad)  
  41e5c3:	call   FWORD PTR [eax]
  41e5c5:	add    BYTE PTR [eax],al
  41e5c7:	add    BYTE PTR [edi+0x53],dl
  41e5ca:	inc    ecx
  41e5cb:	inc    ecx
  41e5cc:	jae    0x41e647
  41e5ce:	outs   dx,BYTE PTR ds:[esi]
  41e5cf:	arpl   WORD PTR [edi+0x65],ax
  41e5d2:	je     0x41e624
  41e5d4:	jb     0x41e645
  41e5d6:	je     0x41e647
  41e5d8:	inc    edx
  41e5d9:	jns    0x41e629
  41e5db:	jne    0x41e64a
  41e5dd:	bound  esp,QWORD PTR [ebp+0x72]
  41e5e0:	add    BYTE PTR [eax],al
  41e5e2:	add    BYTE PTR [eax],al
  41e5e4:	push   ebp
  41e5e5:	mov    ebp,esp
  41e5e7:	mov    edx,0x472a90
  41e5ec:	mov    eax,0x41e61c
  41e5f1:	call   0x41dbb8
  41e5f6:	mov    eax,DWORD PTR [ebp+0x18]
  41e5f9:	push   eax
  41e5fa:	mov    eax,DWORD PTR [ebp+0x14]
  41e5fd:	push   eax
  41e5fe:	mov    eax,DWORD PTR [ebp+0x10]
  41e601:	push   eax
  41e602:	mov    eax,DWORD PTR [ebp+0xc]
  41e605:	push   eax
  41e606:	mov    eax,DWORD PTR [ebp+0x8]
  41e609:	push   eax
  41e60a:	call   DWORD PTR ds:0x472a90
  41e610:	pop    ebp
  41e611:	ret    0x14
  41e614:	(bad)  
  41e615:	(bad)  
  41e616:	(bad)  
  41e617:	call   DWORD PTR ds:0x57000000
  41e61d:	push   ebx
  41e61e:	inc    ecx
  41e61f:	inc    ecx
  41e620:	jae    0x41e69b
  41e622:	outs   dx,BYTE PTR ds:[esi]
  41e623:	arpl   WORD PTR [edi+0x65],ax
  41e626:	je     0x41e670
  41e628:	outs   dx,DWORD PTR ds:[esi]
  41e629:	jae    0x41e69f
  41e62b:	inc    edx
  41e62c:	jns    0x41e67c
  41e62e:	popa   
  41e62f:	ins    DWORD PTR es:[edi],dx
  41e630:	add    BYTE PTR gs:[eax],al
  41e633:	add    BYTE PTR [ebp-0x75],dl
  41e636:	in     al,dx
  41e637:	mov    edx,0x472a94
  41e63c:	mov    eax,0x41e674
  41e641:	call   0x41dbb8
  41e646:	mov    eax,DWORD PTR [ebp+0x20]
  41e649:	push   eax
  41e64a:	mov    eax,DWORD PTR [ebp+0x1c]
  41e64d:	push   eax
  41e64e:	mov    eax,DWORD PTR [ebp+0x18]
  41e651:	push   eax
  41e652:	mov    eax,DWORD PTR [ebp+0x14]
  41e655:	push   eax
  41e656:	mov    eax,DWORD PTR [ebp+0x10]
  41e659:	push   eax
  41e65a:	mov    eax,DWORD PTR [ebp+0xc]
  41e65d:	push   eax
  41e65e:	mov    eax,DWORD PTR [ebp+0x8]
  41e661:	push   eax
  41e662:	call   DWORD PTR ds:0x472a94
  41e668:	pop    ebp
  41e669:	ret    0x1c
  41e66c:	(bad)  
  41e66d:	(bad)  
  41e66e:	(bad)  
  41e66f:	call   DWORD PTR ds:0x57000000
  41e675:	push   ebx
  41e676:	inc    ecx
  41e677:	inc    ecx
  41e678:	jae    0x41e6f3
  41e67a:	outs   dx,BYTE PTR ds:[esi]
  41e67b:	arpl   WORD PTR [edi+0x65],ax
  41e67e:	je     0x41e6c8
  41e680:	outs   dx,DWORD PTR ds:[esi]
  41e681:	jae    0x41e6f7
  41e683:	inc    edx
  41e684:	jns    0x41e6c7
  41e686:	fs fs jb 0x41e68a
  41e68a:	add    BYTE PTR [eax],al
  41e68c:	push   ebp
  41e68d:	mov    ebp,esp
  41e68f:	mov    edx,0x472a98
  41e694:	mov    eax,0x41e6b4
  41e699:	call   0x41dbb8
  41e69e:	mov    eax,DWORD PTR [ebp+0x8]
  41e6a1:	push   eax
  41e6a2:	call   DWORD PTR ds:0x472a98
  41e6a8:	pop    ebp
  41e6a9:	ret    0x4
  41e6ac:	(bad)  
  41e6ad:	(bad)  
  41e6ae:	(bad)  
  41e6af:	call   DWORD PTR ds:0x57000000
  41e6b5:	push   ebx
  41e6b6:	inc    ecx
  41e6b7:	inc    ebx
  41e6b8:	popa   
  41e6b9:	outs   dx,BYTE PTR ds:[esi]
  41e6ba:	arpl   WORD PTR [ebp+0x6c],sp
  41e6bd:	inc    ecx
  41e6be:	jae    0x41e739
  41e6c0:	outs   dx,BYTE PTR ds:[esi]
  41e6c1:	arpl   WORD PTR [edx+0x65],dx
  41e6c4:	jno    0x41e73b
  41e6c6:	gs jae 0x41e73d
  41e6c9:	add    BYTE PTR [eax],al
  41e6cb:	add    BYTE PTR [ebp-0x75],dl
  41e6ce:	in     al,dx
  41e6cf:	mov    edx,0x472a9c
  41e6d4:	mov    eax,0x41e700
  41e6d9:	call   0x41dbb8
  41e6de:	mov    eax,DWORD PTR [ebp+0x14]
  41e6e1:	push   eax
  41e6e2:	mov    eax,DWORD PTR [ebp+0x10]
  41e6e5:	push   eax
  41e6e6:	mov    eax,DWORD PTR [ebp+0xc]
  41e6e9:	push   eax
  41e6ea:	mov    eax,DWORD PTR [ebp+0x8]
  41e6ed:	push   eax
  41e6ee:	call   DWORD PTR ds:0x472a9c
  41e6f4:	pop    ebp
  41e6f5:	ret    0x10
  41e6f8:	(bad)  
  41e6f9:	(bad)  
  41e6fa:	(bad)  
  41e6fb:	dec    DWORD PTR [esi]
  41e6fd:	add    BYTE PTR [eax],al
  41e6ff:	add    BYTE PTR [edi+0x53],dl
  41e702:	inc    ecx
  41e703:	inc    ecx
  41e704:	jae    0x41e77f
  41e706:	outs   dx,BYTE PTR ds:[esi]
  41e707:	arpl   WORD PTR [ebx+0x65],dx
  41e70a:	ins    BYTE PTR es:[edi],dx
  41e70b:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e710:	push   ebp
  41e711:	mov    ebp,esp
  41e713:	mov    edx,0x472aa0
  41e718:	mov    eax,0x41e73c
  41e71d:	call   0x41dbb8
  41e722:	mov    eax,DWORD PTR [ebp+0xc]
  41e725:	push   eax
  41e726:	mov    eax,DWORD PTR [ebp+0x8]
  41e729:	push   eax
  41e72a:	call   DWORD PTR ds:0x472aa0
  41e730:	pop    ebp
  41e731:	ret    0x8
  41e734:	(bad)  
  41e735:	(bad)  
  41e736:	(bad)  
  41e737:	dec    DWORD PTR [eax+eax*1]
  41e73a:	add    BYTE PTR [eax],al
  41e73c:	pop    edi
  41e73d:	pop    edi
  41e73e:	push   edi
  41e73f:	push   ebx
  41e740:	inc    ecx
  41e741:	inc    esi
  41e742:	inc    esp
  41e743:	dec    ecx
  41e744:	jae    0x41e799
  41e746:	gs je  0x41e749
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [ebp-0x75],dl
  41e74e:	in     al,dx
  41e74f:	mov    edx,0x472aa4
  41e754:	mov    eax,0x41e784
  41e759:	call   0x41dbb8
  41e75e:	mov    eax,DWORD PTR [ebp+0x18]
  41e761:	push   eax
  41e762:	mov    eax,DWORD PTR [ebp+0x14]
  41e765:	push   eax
  41e766:	mov    eax,DWORD PTR [ebp+0x10]
  41e769:	push   eax
  41e76a:	mov    eax,DWORD PTR [ebp+0xc]
  41e76d:	push   eax
  41e76e:	mov    eax,DWORD PTR [ebp+0x8]
  41e771:	push   eax
  41e772:	call   DWORD PTR ds:0x472aa4
  41e778:	pop    ebp
  41e779:	ret    0x14
  41e77c:	(bad)  
  41e77d:	(bad)  
  41e77e:	(bad)  
  41e77f:	dec    DWORD PTR [ecx]
  41e781:	add    BYTE PTR [eax],al
  41e783:	add    BYTE PTR [edi+0x53],dl
  41e786:	inc    ecx
  41e787:	inc    ecx
  41e788:	arpl   WORD PTR [ebx+0x65],sp
  41e78b:	jo     0x41e801
  41e78d:	add    BYTE PTR [eax],al
  41e78f:	add    BYTE PTR [ebp-0x75],dl
  41e792:	in     al,dx
  41e793:	mov    edx,0x472aa8
  41e798:	mov    eax,0x41e7b8
  41e79d:	call   0x41dbb8
  41e7a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e7a5:	push   eax
  41e7a6:	call   DWORD PTR ds:0x472aa8
  41e7ac:	pop    ebp
  41e7ad:	ret    0x4
  41e7b0:	(bad)  
  41e7b1:	(bad)  
  41e7b2:	(bad)  
  41e7b3:	dec    DWORD PTR ds:0x57000000
  41e7b9:	push   ebx
  41e7ba:	inc    ecx
  41e7bb:	inc    ebx
  41e7bc:	ins    BYTE PTR es:[edi],dx
  41e7bd:	outs   dx,DWORD PTR ds:[esi]
  41e7be:	jae    0x41e825
  41e7c0:	inc    ebp
  41e7c1:	jbe    0x41e828
  41e7c3:	outs   dx,BYTE PTR ds:[esi]
  41e7c4:	je     0x41e7c6
  41e7c6:	add    BYTE PTR [eax],al
  41e7c8:	push   ebp
  41e7c9:	mov    ebp,esp
  41e7cb:	mov    edx,0x472aac
  41e7d0:	mov    eax,0x41e808
  41e7d5:	call   0x41dbb8
  41e7da:	mov    eax,DWORD PTR [ebp+0x20]
  41e7dd:	push   eax
  41e7de:	mov    eax,DWORD PTR [ebp+0x1c]
  41e7e1:	push   eax
  41e7e2:	mov    eax,DWORD PTR [ebp+0x18]
  41e7e5:	push   eax
  41e7e6:	mov    eax,DWORD PTR [ebp+0x14]
  41e7e9:	push   eax
  41e7ea:	mov    eax,DWORD PTR [ebp+0x10]
  41e7ed:	push   eax
  41e7ee:	mov    eax,DWORD PTR [ebp+0xc]
  41e7f1:	push   eax
  41e7f2:	mov    eax,DWORD PTR [ebp+0x8]
  41e7f5:	push   eax
  41e7f6:	call   DWORD PTR ds:0x472aac
  41e7fc:	pop    ebp
  41e7fd:	ret    0x1c
  41e800:	(bad)  
  41e801:	(bad)  
  41e802:	(bad)  
  41e803:	dec    DWORD PTR [edx]
  41e805:	add    BYTE PTR [eax],al
  41e807:	add    BYTE PTR [edi+0x53],dl
  41e80a:	inc    ecx
  41e80b:	inc    ebx
  41e80c:	outs   dx,DWORD PTR ds:[esi]
  41e80d:	outs   dx,BYTE PTR ds:[esi]
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e814:	mov    edx,0x472ab0
  41e819:	mov    eax,0x41e834
  41e81e:	call   0x41dbb8
  41e823:	call   DWORD PTR ds:0x472ab0
  41e829:	ret    
  41e82a:	add    BYTE PTR [eax],al
  41e82c:	(bad)  
  41e82d:	(bad)  
  41e82e:	(bad)  
  41e82f:	dec    DWORD PTR [esi]
  41e831:	add    BYTE PTR [eax],al
  41e833:	add    BYTE PTR [edi+0x53],dl
  41e836:	inc    ecx
  41e837:	inc    ebx
  41e838:	jb     0x41e89f
  41e83a:	popa   
  41e83b:	je     0x41e8a2
  41e83d:	inc    ebp
  41e83e:	jbe    0x41e8a5
  41e840:	outs   dx,BYTE PTR ds:[esi]
  41e841:	je     0x41e843
  41e843:	add    BYTE PTR [ebp-0x75],dl
  41e846:	in     al,dx
  41e847:	mov    edx,0x472ab4
  41e84c:	mov    eax,0x41e874
  41e851:	call   0x41dbb8
  41e856:	mov    eax,DWORD PTR [ebp+0x10]
  41e859:	push   eax
  41e85a:	mov    eax,DWORD PTR [ebp+0xc]
  41e85d:	push   eax
  41e85e:	mov    eax,DWORD PTR [ebp+0x8]
  41e861:	push   eax
  41e862:	call   DWORD PTR ds:0x472ab4
  41e868:	pop    ebp
  41e869:	ret    0xc
  41e86c:	(bad)  
  41e86d:	(bad)  
  41e86e:	(bad)  
  41e86f:	call   DWORD PTR [ebx]
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR [edi+0x53],dl
  41e876:	inc    ecx
  41e877:	inc    esp
  41e878:	jne    0x41e8ea
  41e87a:	ins    BYTE PTR es:[edi],dx
  41e87b:	imul   esp,DWORD PTR [ebx+0x61],0x6f536574
  41e882:	arpl   WORD PTR [ebx+0x65],bp
  41e885:	je     0x41e8c8
  41e887:	add    BYTE PTR [ebp-0x75],dl
  41e88a:	in     al,dx
  41e88b:	mov    edx,0x472ab8
  41e890:	mov    eax,0x41e8b8
  41e895:	call   0x41dbb8
  41e89a:	mov    eax,DWORD PTR [ebp+0x10]
  41e89d:	push   eax
  41e89e:	mov    eax,DWORD PTR [ebp+0xc]
  41e8a1:	push   eax
  41e8a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e8a5:	push   eax
  41e8a6:	call   DWORD PTR ds:0x472ab8
  41e8ac:	pop    ebp
  41e8ad:	ret    0xc
  41e8b0:	(bad)  
  41e8b1:	(bad)  
  41e8b2:	(bad)  
  41e8b3:	call   DWORD PTR [ebx]
  41e8b5:	add    BYTE PTR [eax],al
  41e8b7:	add    BYTE PTR [edi+0x53],dl
  41e8ba:	inc    ecx
  41e8bb:	inc    esp
  41e8bc:	jne    0x41e92e
  41e8be:	ins    BYTE PTR es:[edi],dx
  41e8bf:	imul   esp,DWORD PTR [ebx+0x61],0x6f536574
  41e8c6:	arpl   WORD PTR [ebx+0x65],bp
  41e8c9:	je     0x41e922
  41e8cb:	add    BYTE PTR [ebp-0x75],dl
  41e8ce:	in     al,dx
  41e8cf:	mov    edx,0x472abc
  41e8d4:	mov    eax,0x41e8fc
  41e8d9:	call   0x41dbb8
  41e8de:	mov    eax,DWORD PTR [ebp+0x10]
  41e8e1:	push   eax
  41e8e2:	mov    eax,DWORD PTR [ebp+0xc]
  41e8e5:	push   eax
  41e8e6:	mov    eax,DWORD PTR [ebp+0x8]
  41e8e9:	push   eax
  41e8ea:	call   DWORD PTR ds:0x472abc
  41e8f0:	pop    ebp
  41e8f1:	ret    0xc
  41e8f4:	(bad)  
  41e8f5:	(bad)  
  41e8f6:	(bad)  
  41e8f7:	call   DWORD PTR [edx]
  41e8f9:	add    BYTE PTR [eax],al
  41e8fb:	add    BYTE PTR [edi+0x53],dl
  41e8fe:	inc    ecx
  41e8ff:	inc    esp
  41e900:	jne    0x41e972
  41e902:	ins    BYTE PTR es:[edi],dx
  41e903:	imul   esp,DWORD PTR [ebx+0x61],0x6f536574
  41e90a:	arpl   WORD PTR [ebx+0x65],bp
  41e90d:	je     0x41e90f
  41e90f:	add    BYTE PTR [ebp-0x75],dl
  41e912:	in     al,dx
  41e913:	mov    edx,0x472ac0
  41e918:	mov    eax,0x41e940
  41e91d:	call   0x41dbb8
  41e922:	mov    eax,DWORD PTR [ebp+0x10]
  41e925:	push   eax
  41e926:	mov    eax,DWORD PTR [ebp+0xc]
  41e929:	push   eax
  41e92a:	mov    eax,DWORD PTR [ebp+0x8]
  41e92d:	push   eax
  41e92e:	call   DWORD PTR ds:0x472ac0
  41e934:	pop    ebp
  41e935:	ret    0xc
  41e938:	(bad)  
  41e939:	(bad)  
  41e93a:	(bad)  
  41e93b:	call   DWORD PTR [eax+eax*1]
  41e93e:	add    BYTE PTR [eax],al
  41e940:	push   edi
  41e941:	push   ebx
  41e942:	inc    ecx
  41e943:	inc    ebp
  41e944:	outs   dx,BYTE PTR ds:[esi]
  41e945:	jne    0x41e9b4
  41e947:	dec    esi
  41e948:	gs je  0x41e9c2
  41e94b:	outs   dx,DWORD PTR ds:[esi]
  41e94c:	jb     0x41e9b9
  41e94e:	inc    ebp
  41e94f:	jbe    0x41e9b6
  41e951:	outs   dx,BYTE PTR ds:[esi]
  41e952:	je     0x41e9c7
  41e954:	add    BYTE PTR [eax],al
  41e956:	add    BYTE PTR [eax],al
  41e958:	push   ebp
  41e959:	mov    ebp,esp
  41e95b:	mov    edx,0x472ac4
  41e960:	mov    eax,0x41e988
  41e965:	call   0x41dbb8
  41e96a:	mov    eax,DWORD PTR [ebp+0x10]
  41e96d:	push   eax
  41e96e:	mov    eax,DWORD PTR [ebp+0xc]
  41e971:	push   eax
  41e972:	mov    eax,DWORD PTR [ebp+0x8]
  41e975:	push   eax
  41e976:	call   DWORD PTR ds:0x472ac4
  41e97c:	pop    ebp
  41e97d:	ret    0xc
  41e980:	(bad)  
  41e981:	(bad)  
  41e982:	(bad)  
  41e983:	call   DWORD PTR [ecx]
  41e985:	add    BYTE PTR [eax],al
  41e987:	add    BYTE PTR [edi+0x53],dl
  41e98a:	inc    ecx
  41e98b:	inc    ebp
  41e98c:	outs   dx,BYTE PTR ds:[esi]
  41e98d:	jne    0x41e9fc
  41e98f:	push   eax
  41e990:	jb     0x41ea01
  41e992:	je     0x41ea03
  41e994:	arpl   WORD PTR [edi+0x6c],bp
  41e997:	jae    0x41e9da
  41e999:	add    BYTE PTR [eax],al
  41e99b:	add    BYTE PTR [ebp-0x75],dl
  41e99e:	in     al,dx
  41e99f:	mov    edx,0x472ac8
  41e9a4:	mov    eax,0x41e9cc
  41e9a9:	call   0x41dbb8
  41e9ae:	mov    eax,DWORD PTR [ebp+0x10]
  41e9b1:	push   eax
  41e9b2:	mov    eax,DWORD PTR [ebp+0xc]
  41e9b5:	push   eax
  41e9b6:	mov    eax,DWORD PTR [ebp+0x8]
  41e9b9:	push   eax
  41e9ba:	call   DWORD PTR ds:0x472ac8
  41e9c0:	pop    ebp
  41e9c1:	ret    0xc
  41e9c4:	(bad)  
  41e9c5:	(bad)  
  41e9c6:	(bad)  
  41e9c7:	call   DWORD PTR [ecx]
  41e9c9:	add    BYTE PTR [eax],al
  41e9cb:	add    BYTE PTR [edi+0x53],dl
  41e9ce:	inc    ecx
  41e9cf:	inc    ebp
  41e9d0:	outs   dx,BYTE PTR ds:[esi]
  41e9d1:	jne    0x41ea40
  41e9d3:	push   eax
  41e9d4:	jb     0x41ea45
  41e9d6:	je     0x41ea47
  41e9d8:	arpl   WORD PTR [edi+0x6c],bp
  41e9db:	jae    0x41ea34
  41e9dd:	add    BYTE PTR [eax],al
  41e9df:	add    BYTE PTR [ebp-0x75],dl
  41e9e2:	in     al,dx
  41e9e3:	mov    edx,0x472acc
  41e9e8:	mov    eax,0x41ea10
  41e9ed:	call   0x41dbb8
  41e9f2:	mov    eax,DWORD PTR [ebp+0x10]
  41e9f5:	push   eax
  41e9f6:	mov    eax,DWORD PTR [ebp+0xc]
  41e9f9:	push   eax
  41e9fa:	mov    eax,DWORD PTR [ebp+0x8]
  41e9fd:	push   eax
  41e9fe:	call   DWORD PTR ds:0x472acc
  41ea04:	pop    ebp
  41ea05:	ret    0xc
  41ea08:	(bad)  
  41ea09:	(bad)  
  41ea0a:	(bad)  
  41ea0b:	call   DWORD PTR [ecx]
  41ea0d:	add    BYTE PTR [eax],al
  41ea0f:	add    BYTE PTR [edi+0x53],dl
  41ea12:	inc    ecx
  41ea13:	inc    ebp
  41ea14:	outs   dx,BYTE PTR ds:[esi]
  41ea15:	jne    0x41ea84
  41ea17:	push   eax
  41ea18:	jb     0x41ea89
  41ea1a:	je     0x41ea8b
  41ea1c:	arpl   WORD PTR [edi+0x6c],bp
  41ea1f:	jae    0x41ea62
  41ea21:	add    BYTE PTR [eax],al
  41ea23:	add    BYTE PTR [ebp-0x75],dl
  41ea26:	in     al,dx
  41ea27:	mov    edx,0x472ad0
  41ea2c:	mov    eax,0x41ea54
  41ea31:	call   0x41dbb8
  41ea36:	mov    eax,DWORD PTR [ebp+0x10]
  41ea39:	push   eax
  41ea3a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea3d:	push   eax
  41ea3e:	mov    eax,DWORD PTR [ebp+0x8]
  41ea41:	push   eax
  41ea42:	call   DWORD PTR ds:0x472ad0
  41ea48:	pop    ebp
  41ea49:	ret    0xc
  41ea4c:	(bad)  
  41ea4d:	(bad)  
  41ea4e:	(bad)  
  41ea4f:	dec    DWORD PTR [esi]
  41ea51:	add    BYTE PTR [eax],al
  41ea53:	add    BYTE PTR [edi+0x53],dl
  41ea56:	inc    ecx
  41ea57:	inc    ebp
  41ea58:	jbe    0x41eabf
  41ea5a:	outs   dx,BYTE PTR ds:[esi]
  41ea5b:	je     0x41eab0
  41ea5d:	gs ins BYTE PTR es:[edi],dx
  41ea5f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41ea64:	push   ebp
  41ea65:	mov    ebp,esp
  41ea67:	mov    edx,0x472ad4
  41ea6c:	mov    eax,0x41ea9c
  41ea71:	call   0x41dbb8
  41ea76:	mov    eax,DWORD PTR [ebp+0x18]
  41ea79:	push   eax
  41ea7a:	mov    eax,DWORD PTR [ebp+0x14]
  41ea7d:	push   eax
  41ea7e:	mov    eax,DWORD PTR [ebp+0x10]
  41ea81:	push   eax
  41ea82:	mov    eax,DWORD PTR [ebp+0xc]
  41ea85:	push   eax
  41ea86:	mov    eax,DWORD PTR [ebp+0x8]
  41ea89:	push   eax
  41ea8a:	call   DWORD PTR ds:0x472ad4
  41ea90:	pop    ebp
  41ea91:	ret    0x14
  41ea94:	(bad)  
  41ea95:	(bad)  
  41ea96:	(bad)  
  41ea97:	call   DWORD PTR [esi]
  41ea99:	add    BYTE PTR [eax],al
  41ea9b:	add    BYTE PTR [edi+0x53],dl
  41ea9e:	inc    ecx
  41ea9f:	inc    edi
  41eaa0:	gs je  0x41eaf2
  41eaa3:	jbe    0x41eb0a
  41eaa5:	jb     0x41eb13
  41eaa7:	popa   
  41eaa8:	jo     0x41eb1a
  41eaaa:	gs fs push edx
  41eaad:	gs jae 0x41eb25
  41eab0:	ins    BYTE PTR es:[edi],dx
  41eab1:	je     0x41eab3
  41eab3:	add    BYTE PTR [ebp-0x75],dl
  41eab6:	in     al,dx
  41eab7:	mov    edx,0x472ad8
  41eabc:	mov    eax,0x41eae4
  41eac1:	call   0x41dbb8
  41eac6:	mov    eax,DWORD PTR [ebp+0x10]
  41eac9:	push   eax
  41eaca:	mov    eax,DWORD PTR [ebp+0xc]
  41eacd:	push   eax
  41eace:	mov    eax,DWORD PTR [ebp+0x8]
  41ead1:	push   eax
  41ead2:	call   DWORD PTR ds:0x472ad8
  41ead8:	pop    ebp
  41ead9:	ret    0xc
  41eadc:	(bad)  
  41eadd:	(bad)  
  41eade:	(bad)  
  41eadf:	dec    DWORD PTR [edi]
  41eae1:	add    BYTE PTR [eax],al
  41eae3:	add    BYTE PTR [edi+0x53],dl
  41eae6:	inc    ecx
  41eae7:	inc    edi
  41eae8:	gs je  0x41eb3c
  41eaeb:	dec    edi
  41eaec:	push   ebx
  41eaed:	inc    edx
  41eaee:	jns    0x41eb3e
  41eaf0:	popa   
  41eaf1:	ins    DWORD PTR es:[edi],dx
  41eaf2:	add    BYTE PTR gs:[ebp-0x75],dl
  41eaf6:	in     al,dx
  41eaf7:	mov    edx,0x472adc
  41eafc:	mov    eax,0x41eb24
  41eb01:	call   0x41dbb8
  41eb06:	mov    eax,DWORD PTR [ebp+0x10]
  41eb09:	push   eax
  41eb0a:	mov    eax,DWORD PTR [ebp+0xc]
  41eb0d:	push   eax
  41eb0e:	mov    eax,DWORD PTR [ebp+0x8]
  41eb11:	push   eax
  41eb12:	call   DWORD PTR ds:0x472adc
  41eb18:	pop    ebp
  41eb19:	ret    0xc
  41eb1c:	(bad)  
  41eb1d:	(bad)  
  41eb1e:	(bad)  
  41eb1f:	dec    DWORD PTR [eax]
  41eb21:	add    BYTE PTR [eax],al
  41eb23:	add    BYTE PTR [edi+0x53],dl
  41eb26:	inc    ecx
  41eb27:	dec    eax
  41eb28:	je     0x41eb99
  41eb2a:	outs   dx,BYTE PTR ds:[esi]
  41eb2b:	ins    BYTE PTR es:[edi],dx
  41eb2c:	add    BYTE PTR [eax],al
  41eb2e:	add    BYTE PTR [eax],al
  41eb30:	push   ebp
  41eb31:	mov    ebp,esp
  41eb33:	mov    edx,0x472ae0
  41eb38:	mov    eax,0x41eb64
  41eb3d:	call   0x41dbb8
  41eb42:	mov    eax,DWORD PTR [ebp+0x10]
  41eb45:	push   eax
  41eb46:	movzx  eax,WORD PTR [ebp+0xc]
  41eb4a:	push   eax
  41eb4b:	mov    eax,DWORD PTR [ebp+0x8]
  41eb4e:	push   eax
  41eb4f:	call   DWORD PTR ds:0x472ae0
  41eb55:	pop    ebp
  41eb56:	ret    0xc
  41eb59:	add    BYTE PTR [eax],al
  41eb5b:	add    bh,bh
  41eb5d:	(bad)  
  41eb5e:	(bad)  
  41eb5f:	dec    DWORD PTR [eax]
  41eb61:	add    BYTE PTR [eax],al
  41eb63:	add    BYTE PTR [edi+0x53],dl
  41eb66:	inc    ecx
  41eb67:	dec    eax
  41eb68:	je     0x41ebd9
  41eb6a:	outs   dx,BYTE PTR ds:[esi]
  41eb6b:	jae    0x41eb6d
  41eb6d:	add    BYTE PTR [eax],al
  41eb6f:	add    BYTE PTR [ebp-0x75],dl
  41eb72:	in     al,dx
  41eb73:	mov    edx,0x472ae4
  41eb78:	mov    eax,0x41ebb8
  41eb7d:	call   0x41dbb8
  41eb82:	mov    eax,DWORD PTR [ebp+0x28]
  41eb85:	push   eax
  41eb86:	mov    eax,DWORD PTR [ebp+0x24]
  41eb89:	push   eax
  41eb8a:	mov    eax,DWORD PTR [ebp+0x20]
  41eb8d:	push   eax
  41eb8e:	mov    eax,DWORD PTR [ebp+0x1c]
  41eb91:	push   eax
  41eb92:	mov    eax,DWORD PTR [ebp+0x18]
  41eb95:	push   eax
  41eb96:	mov    eax,DWORD PTR [ebp+0x14]
  41eb99:	push   eax
  41eb9a:	mov    eax,DWORD PTR [ebp+0x10]
  41eb9d:	push   eax
  41eb9e:	mov    eax,DWORD PTR [ebp+0xc]
  41eba1:	push   eax
  41eba2:	mov    eax,DWORD PTR [ebp+0x8]
  41eba5:	push   eax
  41eba6:	call   DWORD PTR ds:0x472ae4
  41ebac:	pop    ebp
  41ebad:	ret    0x24
  41ebb0:	(bad)  
  41ebb1:	(bad)  
  41ebb2:	(bad)  
  41ebb3:	dec    DWORD PTR [eax]
  41ebb5:	add    BYTE PTR [eax],al
  41ebb7:	add    BYTE PTR [edi+0x53],dl
  41ebba:	inc    ecx
  41ebbb:	dec    ecx
  41ebbc:	outs   dx,DWORD PTR ds:[esi]
  41ebbd:	arpl   WORD PTR [esp+ebp*2+0x0],si
  41ebc1:	add    BYTE PTR [eax],al
  41ebc3:	add    BYTE PTR [ebp-0x75],dl
  41ebc6:	in     al,dx
  41ebc7:	mov    edx,0x472ae8
  41ebcc:	mov    eax,0x41ec08
  41ebd1:	call   0x41dbb8
  41ebd6:	mov    eax,DWORD PTR [ebp+0x24]
  41ebd9:	push   eax
  41ebda:	mov    eax,DWORD PTR [ebp+0x20]
  41ebdd:	push   eax
  41ebde:	mov    eax,DWORD PTR [ebp+0x1c]
  41ebe1:	push   eax
  41ebe2:	mov    eax,DWORD PTR [ebp+0x18]
  41ebe5:	push   eax
  41ebe6:	mov    eax,DWORD PTR [ebp+0x14]
  41ebe9:	push   eax
  41ebea:	mov    eax,DWORD PTR [ebp+0x10]
  41ebed:	push   eax
  41ebee:	mov    eax,DWORD PTR [ebp+0xc]
  41ebf1:	push   eax
  41ebf2:	mov    eax,DWORD PTR [ebp+0x8]
  41ebf5:	push   eax
  41ebf6:	call   DWORD PTR ds:0x472ae8
  41ebfc:	pop    ebp
  41ebfd:	ret    0x20
  41ec00:	(bad)  
  41ec01:	(bad)  
  41ec02:	(bad)  
  41ec03:	dec    DWORD PTR [ebx]
  41ec05:	add    BYTE PTR [eax],al
  41ec07:	add    BYTE PTR [edi+0x53],dl
  41ec0a:	inc    ecx
  41ec0b:	dec    edx
  41ec0c:	outs   dx,DWORD PTR ds:[esi]
  41ec0d:	imul   ebp,DWORD PTR [esi+0x4c],0x666165
  41ec14:	push   ebp
  41ec15:	mov    ebp,esp
  41ec17:	mov    edx,0x472aec
  41ec1c:	mov    eax,0x41ec44
  41ec21:	call   0x41dbb8
  41ec26:	mov    eax,DWORD PTR [ebp+0x10]
  41ec29:	push   eax
  41ec2a:	mov    eax,DWORD PTR [ebp+0xc]
  41ec2d:	push   eax
  41ec2e:	mov    eax,DWORD PTR [ebp+0x8]
  41ec31:	push   eax
  41ec32:	call   DWORD PTR ds:0x472aec
  41ec38:	pop    ebp
  41ec39:	ret    0xc
  41ec3c:	(bad)  
  41ec3d:	(bad)  
  41ec3e:	(bad)  
  41ec3f:	dec    DWORD PTR [eax]
  41ec41:	add    BYTE PTR [eax],al
  41ec43:	add    BYTE PTR [edi+0x53],dl
  41ec46:	inc    ecx
  41ec47:	dec    esi
  41ec48:	je     0x41ecb9
  41ec4a:	push   0x6c
  41ec4f:	add    BYTE PTR [ebp-0x75],dl
  41ec52:	in     al,dx
  41ec53:	mov    edx,0x472af0
  41ec58:	mov    eax,0x41ec84
  41ec5d:	call   0x41dbb8
  41ec62:	mov    eax,DWORD PTR [ebp+0x10]
  41ec65:	push   eax
  41ec66:	movzx  eax,WORD PTR [ebp+0xc]
  41ec6a:	push   eax
  41ec6b:	mov    eax,DWORD PTR [ebp+0x8]
  41ec6e:	push   eax
  41ec6f:	call   DWORD PTR ds:0x472af0
  41ec75:	pop    ebp
  41ec76:	ret    0xc
  41ec79:	add    BYTE PTR [eax],al
  41ec7b:	add    bh,bh
  41ec7d:	(bad)  
  41ec7e:	(bad)  
  41ec7f:	dec    DWORD PTR [eax]
  41ec81:	add    BYTE PTR [eax],al
  41ec83:	add    BYTE PTR [edi+0x53],dl
  41ec86:	inc    ecx
  41ec87:	dec    esi
  41ec88:	je     0x41ecf9
  41ec8a:	push   0x73
  41ec8f:	add    BYTE PTR [ebp-0x75],dl
  41ec92:	in     al,dx
  41ec93:	mov    edx,0x472af4
  41ec98:	mov    eax,0x41ecd0
  41ec9d:	call   0x41dbb8
  41eca2:	mov    eax,DWORD PTR [ebp+0x20]
  41eca5:	push   eax
  41eca6:	mov    eax,DWORD PTR [ebp+0x1c]
  41eca9:	push   eax
  41ecaa:	mov    eax,DWORD PTR [ebp+0x18]
  41ecad:	push   eax
  41ecae:	mov    eax,DWORD PTR [ebp+0x14]
  41ecb1:	push   eax
  41ecb2:	mov    eax,DWORD PTR [ebp+0x10]
  41ecb5:	push   eax
  41ecb6:	mov    eax,DWORD PTR [ebp+0xc]
  41ecb9:	push   eax
  41ecba:	mov    eax,DWORD PTR [ebp+0x8]
  41ecbd:	push   eax
  41ecbe:	call   DWORD PTR ds:0x472af4
  41ecc4:	pop    ebp
  41ecc5:	ret    0x1c
  41ecc8:	(bad)  
  41ecc9:	(bad)  
  41ecca:	(bad)  
  41eccb:	inc    DWORD PTR [edi]
  41eccd:	add    BYTE PTR [eax],al
  41eccf:	add    BYTE PTR [edi+0x53],dl
  41ecd2:	inc    ecx
  41ecd3:	push   edx
  41ecd4:	arpl   WORD PTR gs:[esi+0x0],si
  41ecd8:	push   ebp
  41ecd9:	mov    ebp,esp
  41ecdb:	mov    edx,0x472af8
  41ece0:	mov    eax,0x41ed04
  41ece5:	call   0x41dbb8
  41ecea:	mov    eax,DWORD PTR [ebp+0xc]
  41eced:	push   eax
  41ecee:	mov    eax,DWORD PTR [ebp+0x8]
  41ecf1:	push   eax
  41ecf2:	call   DWORD PTR ds:0x472af8
  41ecf8:	pop    ebp
  41ecf9:	ret    0x8
  41ecfc:	(bad)  
  41ecfd:	(bad)  
  41ecfe:	(bad)  
  41ecff:	call   DWORD PTR [ecx]
  41ed01:	add    BYTE PTR [eax],al
  41ed03:	add    BYTE PTR [edi+0x53],dl
  41ed06:	inc    ecx
  41ed07:	push   edx
  41ed08:	arpl   WORD PTR gs:[esi+0x44],si
  41ed0c:	imul   esi,DWORD PTR [ebx+0x63],0x656e6e6f
  41ed13:	arpl   WORD PTR [eax+eax*1+0x0],si
  41ed17:	add    BYTE PTR [ebp-0x75],dl
  41ed1a:	in     al,dx
  41ed1b:	mov    edx,0x472afc
  41ed20:	mov    eax,0x41ed60
  41ed25:	call   0x41dbb8
  41ed2a:	mov    eax,DWORD PTR [ebp+0x28]
  41ed2d:	push   eax
  41ed2e:	mov    eax,DWORD PTR [ebp+0x24]
  41ed31:	push   eax
  41ed32:	mov    eax,DWORD PTR [ebp+0x20]
  41ed35:	push   eax
  41ed36:	mov    eax,DWORD PTR [ebp+0x1c]
  41ed39:	push   eax
  41ed3a:	mov    eax,DWORD PTR [ebp+0x18]
  41ed3d:	push   eax
  41ed3e:	mov    eax,DWORD PTR [ebp+0x14]
  41ed41:	push   eax
  41ed42:	mov    eax,DWORD PTR [ebp+0x10]
  41ed45:	push   eax
  41ed46:	mov    eax,DWORD PTR [ebp+0xc]
  41ed49:	push   eax
  41ed4a:	mov    eax,DWORD PTR [ebp+0x8]
  41ed4d:	push   eax
  41ed4e:	call   DWORD PTR ds:0x472afc
  41ed54:	pop    ebp
  41ed55:	ret    0x24
  41ed58:	(bad)  
  41ed59:	(bad)  
  41ed5a:	(bad)  
  41ed5b:	dec    DWORD PTR [ebx]
  41ed5d:	add    BYTE PTR [eax],al
  41ed5f:	add    BYTE PTR [edi+0x53],dl
  41ed62:	inc    ecx
  41ed63:	push   edx
  41ed64:	arpl   WORD PTR gs:[esi+0x46],si
  41ed68:	jb     0x41edd9
  41ed6a:	ins    DWORD PTR es:[edi],dx
  41ed6b:	add    BYTE PTR [ebp-0x75],dl
  41ed6e:	in     al,dx
  41ed6f:	mov    edx,0x472b00
  41ed74:	mov    eax,0x41ed94
  41ed79:	call   0x41dbb8
  41ed7e:	mov    eax,DWORD PTR [ebp+0x8]
  41ed81:	push   eax
  41ed82:	call   DWORD PTR ds:0x472b00
  41ed88:	pop    ebp
  41ed89:	ret    0x4
  41ed8c:	(bad)  
  41ed8d:	(bad)  
  41ed8e:	(bad)  
  41ed8f:	dec    DWORD PTR ds:0x57000000
  41ed95:	push   ebx
  41ed96:	inc    ecx
  41ed97:	push   edx
  41ed98:	gs jae 0x41ee00
  41ed9b:	je     0x41ede2
  41ed9d:	jbe    0x41ee04
  41ed9f:	outs   dx,BYTE PTR ds:[esi]
  41eda0:	je     0x41eda2
  41eda2:	add    BYTE PTR [eax],al
  41eda4:	push   ebp
  41eda5:	mov    ebp,esp
  41eda7:	mov    edx,0x472b04
  41edac:	mov    eax,0x41ede4
  41edb1:	call   0x41dbb8
  41edb6:	mov    eax,DWORD PTR [ebp+0x20]
  41edb9:	push   eax
  41edba:	mov    eax,DWORD PTR [ebp+0x1c]
  41edbd:	push   eax
  41edbe:	mov    eax,DWORD PTR [ebp+0x18]
  41edc1:	push   eax
  41edc2:	mov    eax,DWORD PTR [ebp+0x14]
  41edc5:	push   eax
  41edc6:	mov    eax,DWORD PTR [ebp+0x10]
  41edc9:	push   eax
  41edca:	mov    eax,DWORD PTR [ebp+0xc]
  41edcd:	push   eax
  41edce:	mov    eax,DWORD PTR [ebp+0x8]
  41edd1:	push   eax
  41edd2:	call   DWORD PTR ds:0x472b04
  41edd8:	pop    ebp
  41edd9:	ret    0x1c
  41eddc:	(bad)  
  41eddd:	(bad)  
  41edde:	(bad)  
  41eddf:	inc    DWORD PTR [edi]
  41ede1:	add    BYTE PTR [eax],al
  41ede3:	add    BYTE PTR [edi+0x53],dl
  41ede6:	inc    ecx
  41ede7:	push   ebx
  41ede8:	outs   dx,BYTE PTR gs:[esi]
  41edea:	add    BYTE PTR fs:[ebp-0x75],dl
  41edee:	in     al,dx
  41edef:	mov    edx,0x472b08
  41edf4:	mov    eax,0x41ee18
  41edf9:	call   0x41dbb8
  41edfe:	mov    eax,DWORD PTR [ebp+0xc]
  41ee01:	push   eax
  41ee02:	mov    eax,DWORD PTR [ebp+0x8]
  41ee05:	push   eax
  41ee06:	call   DWORD PTR ds:0x472b08
  41ee0c:	pop    ebp
  41ee0d:	ret    0x8
  41ee10:	(bad)  
  41ee11:	(bad)  
  41ee12:	(bad)  
  41ee13:	call   DWORD PTR [ecx]
  41ee15:	add    BYTE PTR [eax],al
  41ee17:	add    BYTE PTR [edi+0x53],dl
  41ee1a:	inc    ecx
  41ee1b:	push   ebx
  41ee1c:	outs   dx,BYTE PTR gs:[esi]
  41ee1e:	fs inc esp
  41ee20:	imul   esi,DWORD PTR [ebx+0x63],0x656e6e6f
  41ee27:	arpl   WORD PTR [eax+eax*1+0x0],si
  41ee2b:	add    BYTE PTR [ebp-0x75],dl
  41ee2e:	in     al,dx
  41ee2f:	mov    edx,0x472b0c
  41ee34:	mov    eax,0x41ee74
  41ee39:	call   0x41dbb8
  41ee3e:	mov    eax,DWORD PTR [ebp+0x28]
  41ee41:	push   eax
  41ee42:	mov    eax,DWORD PTR [ebp+0x24]
  41ee45:	push   eax
  41ee46:	mov    eax,DWORD PTR [ebp+0x20]
  41ee49:	push   eax
  41ee4a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ee4d:	push   eax
  41ee4e:	mov    eax,DWORD PTR [ebp+0x18]
  41ee51:	push   eax
  41ee52:	mov    eax,DWORD PTR [ebp+0x14]
  41ee55:	push   eax
  41ee56:	mov    eax,DWORD PTR [ebp+0x10]
  41ee59:	push   eax
  41ee5a:	mov    eax,DWORD PTR [ebp+0xc]
  41ee5d:	push   eax
  41ee5e:	mov    eax,DWORD PTR [ebp+0x8]
  41ee61:	push   eax
  41ee62:	call   DWORD PTR ds:0x472b0c
  41ee68:	pop    ebp
  41ee69:	ret    0x24
  41ee6c:	(bad)  
  41ee6d:	(bad)  
  41ee6e:	(bad)  
  41ee6f:	dec    DWORD PTR [ecx]
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR [edi+0x53],dl
  41ee76:	inc    ecx
  41ee77:	push   ebx
  41ee78:	outs   dx,BYTE PTR gs:[esi]
  41ee7a:	fs push esp
  41ee7c:	outs   dx,DWORD PTR ds:[esi]
  41ee7d:	add    BYTE PTR [eax],al
  41ee7f:	add    BYTE PTR [ebp-0x75],dl
  41ee82:	in     al,dx
  41ee83:	mov    edx,0x472b10
  41ee88:	mov    eax,0x41eea8
  41ee8d:	call   0x41dbb8
  41ee92:	mov    eax,DWORD PTR [ebp+0x8]
  41ee95:	push   eax
  41ee96:	call   DWORD PTR ds:0x472b10
  41ee9c:	pop    ebp
  41ee9d:	ret    0x4
  41eea0:	(bad)  
  41eea1:	(bad)  
  41eea2:	(bad)  
  41eea3:	dec    DWORD PTR [ebx]
  41eea5:	add    BYTE PTR [eax],al
  41eea7:	add    BYTE PTR [edi+0x53],dl
  41eeaa:	inc    ecx
  41eeab:	push   ebx
  41eeac:	gs je  0x41eef4
  41eeaf:	jbe    0x41ef16
  41eeb1:	outs   dx,BYTE PTR ds:[esi]
  41eeb2:	je     0x41eeb4
  41eeb4:	push   ebp
  41eeb5:	mov    ebp,esp
  41eeb7:	mov    edx,0x472b14
  41eebc:	mov    eax,0x41eef0
  41eec1:	call   0x41dbb8
  41eec6:	mov    eax,DWORD PTR [ebp+0x1c]
  41eec9:	push   eax
  41eeca:	mov    eax,DWORD PTR [ebp+0x18]
  41eecd:	push   eax
  41eece:	mov    eax,DWORD PTR [ebp+0x14]
  41eed1:	push   eax
  41eed2:	mov    eax,DWORD PTR [ebp+0x10]
  41eed5:	push   eax
  41eed6:	mov    eax,DWORD PTR [ebp+0xc]
  41eed9:	push   eax
  41eeda:	mov    eax,DWORD PTR [ebp+0x8]
  41eedd:	push   eax
  41eede:	call   DWORD PTR ds:0x472b14
  41eee4:	pop    ebp
  41eee5:	ret    0x18
  41eee8:	(bad)  
  41eee9:	(bad)  
  41eeea:	(bad)  
  41eeeb:	dec    DWORD PTR [edx]
  41eeed:	add    BYTE PTR [eax],al
  41eeef:	add    BYTE PTR [edi+0x53],dl
  41eef2:	inc    ecx
  41eef3:	push   ebx
  41eef4:	outs   dx,DWORD PTR ds:[esi]
  41eef5:	arpl   WORD PTR [ebx+0x65],bp
  41eef8:	je     0x41ef3b
  41eefa:	add    BYTE PTR [eax],al
  41eefc:	push   ebp
  41eefd:	mov    ebp,esp
  41eeff:	mov    edx,0x472b18
  41ef04:	mov    eax,0x41ef38
  41ef09:	call   0x41dbb8
  41ef0e:	mov    eax,DWORD PTR [ebp+0x1c]
  41ef11:	push   eax
  41ef12:	mov    eax,DWORD PTR [ebp+0x18]
  41ef15:	push   eax
  41ef16:	mov    eax,DWORD PTR [ebp+0x14]
  41ef19:	push   eax
  41ef1a:	mov    eax,DWORD PTR [ebp+0x10]
  41ef1d:	push   eax
  41ef1e:	mov    eax,DWORD PTR [ebp+0xc]
  41ef21:	push   eax
  41ef22:	mov    eax,DWORD PTR [ebp+0x8]
  41ef25:	push   eax
  41ef26:	call   DWORD PTR ds:0x472b18
  41ef2c:	pop    ebp
  41ef2d:	ret    0x18
  41ef30:	(bad)  
  41ef31:	(bad)  
  41ef32:	(bad)  
  41ef33:	dec    DWORD PTR [edx]
  41ef35:	add    BYTE PTR [eax],al
  41ef37:	add    BYTE PTR [edi+0x53],dl
  41ef3a:	inc    ecx
  41ef3b:	push   ebx
  41ef3c:	outs   dx,DWORD PTR ds:[esi]
  41ef3d:	arpl   WORD PTR [ebx+0x65],bp
  41ef40:	je     0x41ef99
  41ef42:	add    BYTE PTR [eax],al
  41ef44:	push   ebp
  41ef45:	mov    ebp,esp
  41ef47:	mov    edx,0x472b1c
  41ef4c:	mov    eax,0x41ef80
  41ef51:	call   0x41dbb8
  41ef56:	mov    eax,DWORD PTR [ebp+0x1c]
  41ef59:	push   eax
  41ef5a:	mov    eax,DWORD PTR [ebp+0x18]
  41ef5d:	push   eax
  41ef5e:	mov    eax,DWORD PTR [ebp+0x14]
  41ef61:	push   eax
  41ef62:	mov    eax,DWORD PTR [ebp+0x10]
  41ef65:	push   eax
  41ef66:	mov    eax,DWORD PTR [ebp+0xc]
  41ef69:	push   eax
  41ef6a:	mov    eax,DWORD PTR [ebp+0x8]
  41ef6d:	push   eax
  41ef6e:	call   DWORD PTR ds:0x472b1c
  41ef74:	pop    ebp
  41ef75:	ret    0x18
  41ef78:	(bad)  
  41ef79:	(bad)  
  41ef7a:	(bad)  
  41ef7b:	dec    DWORD PTR [ecx]
  41ef7d:	add    BYTE PTR [eax],al
  41ef7f:	add    BYTE PTR [edi+0x53],dl
  41ef82:	inc    ecx
  41ef83:	push   ebx
  41ef84:	outs   dx,DWORD PTR ds:[esi]
  41ef85:	arpl   WORD PTR [ebx+0x65],bp
  41ef88:	je     0x41ef8a
  41ef8a:	add    BYTE PTR [eax],al
  41ef8c:	push   ebp
  41ef8d:	mov    ebp,esp
  41ef8f:	mov    edx,0x472b20
  41ef94:	mov    eax,0x41efc4
  41ef99:	call   0x41dbb8
  41ef9e:	mov    eax,DWORD PTR [ebp+0x18]
  41efa1:	push   eax
  41efa2:	mov    eax,DWORD PTR [ebp+0x14]
  41efa5:	push   eax
  41efa6:	mov    eax,DWORD PTR [ebp+0x10]
  41efa9:	push   eax
  41efaa:	mov    eax,DWORD PTR [ebp+0xc]
  41efad:	push   eax
  41efae:	mov    eax,DWORD PTR [ebp+0x8]
  41efb1:	push   eax
  41efb2:	call   DWORD PTR ds:0x472b20
  41efb8:	pop    ebp
  41efb9:	ret    0x14
  41efbc:	(bad)  
  41efbd:	(bad)  
  41efbe:	(bad)  
  41efbf:	call   FWORD PTR [eax]
  41efc1:	add    BYTE PTR [eax],al
  41efc3:	add    BYTE PTR [edi+0x53],dl
  41efc6:	inc    ecx
  41efc7:	push   edi
  41efc8:	popa   
  41efc9:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41efd1:	je     0x41f03c
  41efd3:	jo     0x41f041
  41efd5:	gs inc ebp
  41efd7:	jbe    0x41f03e
  41efd9:	outs   dx,BYTE PTR ds:[esi]
  41efda:	je     0x41f04f
  41efdc:	add    BYTE PTR [eax],al
  41efde:	add    BYTE PTR [eax],al
  41efe0:	push   ebp
  41efe1:	mov    ebp,esp
  41efe3:	mov    edx,0x472b24
  41efe8:	mov    eax,0x41f018
  41efed:	call   0x41dbb8
  41eff2:	mov    eax,DWORD PTR [ebp+0x18]
  41eff5:	push   eax
  41eff6:	mov    eax,DWORD PTR [ebp+0x14]
  41eff9:	push   eax
  41effa:	mov    eax,DWORD PTR [ebp+0x10]
  41effd:	push   eax
  41effe:	mov    eax,DWORD PTR [ebp+0xc]
  41f001:	push   eax
  41f002:	mov    eax,DWORD PTR [ebp+0x8]
  41f005:	push   eax
  41f006:	call   DWORD PTR ds:0x472b24
  41f00c:	pop    ebp
  41f00d:	ret    0x14
  41f010:	(bad)  
  41f011:	(bad)  
  41f012:	(bad)  
  41f013:	call   DWORD PTR [ebx]
  41f015:	add    BYTE PTR [eax],al
  41f017:	add    BYTE PTR [edi+0x53],dl
  41f01a:	inc    ecx
  41f01b:	inc    ecx
  41f01c:	fs fs jb 0x41f085
  41f020:	jae    0x41f095
  41f022:	push   esp
  41f023:	outs   dx,DWORD PTR ds:[esi]
  41f024:	push   ebx
  41f025:	je     0x41f099
  41f027:	imul   ebp,DWORD PTR [esi+0x67],0x8b550041
  41f02e:	in     al,dx
  41f02f:	mov    edx,0x472b28
  41f034:	mov    eax,0x41f064
  41f039:	call   0x41dbb8
  41f03e:	mov    eax,DWORD PTR [ebp+0x18]
  41f041:	push   eax
  41f042:	mov    eax,DWORD PTR [ebp+0x14]
  41f045:	push   eax
  41f046:	mov    eax,DWORD PTR [ebp+0x10]
  41f049:	push   eax
  41f04a:	mov    eax,DWORD PTR [ebp+0xc]
  41f04d:	push   eax
  41f04e:	mov    eax,DWORD PTR [ebp+0x8]
  41f051:	push   eax
  41f052:	call   DWORD PTR ds:0x472b28
  41f058:	pop    ebp
  41f059:	ret    0x14
  41f05c:	(bad)  
  41f05d:	(bad)  
  41f05e:	(bad)  
  41f05f:	call   DWORD PTR [ebx]
  41f061:	add    BYTE PTR [eax],al
  41f063:	add    BYTE PTR [edi+0x53],dl
  41f066:	inc    ecx
  41f067:	inc    ecx
  41f068:	fs fs jb 0x41f0d1
  41f06c:	jae    0x41f0e1
  41f06e:	push   esp
  41f06f:	outs   dx,DWORD PTR ds:[esi]
  41f070:	push   ebx
  41f071:	je     0x41f0e5
  41f073:	imul   ebp,DWORD PTR [esi+0x67],0x8b550057
  41f07a:	in     al,dx
  41f07b:	mov    edx,0x472b2c
  41f080:	mov    eax,0x41f0b0
  41f085:	call   0x41dbb8
  41f08a:	mov    eax,DWORD PTR [ebp+0x18]
  41f08d:	push   eax
  41f08e:	mov    eax,DWORD PTR [ebp+0x14]
  41f091:	push   eax
  41f092:	mov    eax,DWORD PTR [ebp+0x10]
  41f095:	push   eax
  41f096:	mov    eax,DWORD PTR [ebp+0xc]
  41f099:	push   eax
  41f09a:	mov    eax,DWORD PTR [ebp+0x8]
  41f09d:	push   eax
  41f09e:	call   DWORD PTR ds:0x472b2c
  41f0a4:	pop    ebp
  41f0a5:	ret    0x14
  41f0a8:	(bad)  
  41f0a9:	(bad)  
  41f0aa:	(bad)  
  41f0ab:	call   DWORD PTR [edx]
  41f0ad:	add    BYTE PTR [eax],al
  41f0af:	add    BYTE PTR [edi+0x53],dl
  41f0b2:	inc    ecx
  41f0b3:	inc    ecx
  41f0b4:	fs fs jb 0x41f11d
  41f0b8:	jae    0x41f12d
  41f0ba:	push   esp
  41f0bb:	outs   dx,DWORD PTR ds:[esi]
  41f0bc:	push   ebx
  41f0bd:	je     0x41f131
  41f0bf:	imul   ebp,DWORD PTR [esi+0x67],0x8b550000
  41f0c6:	in     al,dx
  41f0c7:	mov    edx,0x472b30
  41f0cc:	mov    eax,0x41f0fc
  41f0d1:	call   0x41dbb8
  41f0d6:	mov    eax,DWORD PTR [ebp+0x18]
  41f0d9:	push   eax
  41f0da:	mov    eax,DWORD PTR [ebp+0x14]
  41f0dd:	push   eax
  41f0de:	mov    eax,DWORD PTR [ebp+0x10]
  41f0e1:	push   eax
  41f0e2:	mov    eax,DWORD PTR [ebp+0xc]
  41f0e5:	push   eax
  41f0e6:	mov    eax,DWORD PTR [ebp+0x8]
  41f0e9:	push   eax
  41f0ea:	call   DWORD PTR ds:0x472b30
  41f0f0:	pop    ebp
  41f0f1:	ret    0x14
  41f0f4:	(bad)  
  41f0f5:	(bad)  
  41f0f6:	(bad)  
  41f0f7:	call   DWORD PTR [ebx]
  41f0f9:	add    BYTE PTR [eax],al
  41f0fb:	add    BYTE PTR [edi+0x53],dl
  41f0fe:	inc    ecx
  41f0ff:	push   ebx
  41f100:	je     0x41f174
  41f102:	imul   ebp,DWORD PTR [esi+0x67],0x64416f54
  41f109:	fs jb  0x41f171
  41f10c:	jae    0x41f181
  41f10e:	inc    ecx
  41f10f:	add    BYTE PTR [ebp-0x75],dl
  41f112:	in     al,dx
  41f113:	mov    edx,0x472b34
  41f118:	mov    eax,0x41f148
  41f11d:	call   0x41dbb8
  41f122:	mov    eax,DWORD PTR [ebp+0x18]
  41f125:	push   eax
  41f126:	mov    eax,DWORD PTR [ebp+0x14]
  41f129:	push   eax
  41f12a:	mov    eax,DWORD PTR [ebp+0x10]
  41f12d:	push   eax
  41f12e:	mov    eax,DWORD PTR [ebp+0xc]
  41f131:	push   eax
  41f132:	mov    eax,DWORD PTR [ebp+0x8]
  41f135:	push   eax
  41f136:	call   DWORD PTR ds:0x472b34
  41f13c:	pop    ebp
  41f13d:	ret    0x14
  41f140:	(bad)  
  41f141:	(bad)  
  41f142:	(bad)  
  41f143:	call   DWORD PTR [ebx]
  41f145:	add    BYTE PTR [eax],al
  41f147:	add    BYTE PTR [edi+0x53],dl
  41f14a:	inc    ecx
  41f14b:	push   ebx
  41f14c:	je     0x41f1c0
  41f14e:	imul   ebp,DWORD PTR [esi+0x67],0x64416f54
  41f155:	fs jb  0x41f1bd
  41f158:	jae    0x41f1cd
  41f15a:	push   edi
  41f15b:	add    BYTE PTR [ebp-0x75],dl
  41f15e:	in     al,dx
  41f15f:	mov    edx,0x472b38
  41f164:	mov    eax,0x41f194
  41f169:	call   0x41dbb8
  41f16e:	mov    eax,DWORD PTR [ebp+0x18]
  41f171:	push   eax
  41f172:	mov    eax,DWORD PTR [ebp+0x14]
  41f175:	push   eax
  41f176:	mov    eax,DWORD PTR [ebp+0x10]
  41f179:	push   eax
  41f17a:	mov    eax,DWORD PTR [ebp+0xc]
  41f17d:	push   eax
  41f17e:	mov    eax,DWORD PTR [ebp+0x8]
  41f181:	push   eax
  41f182:	call   DWORD PTR ds:0x472b38
  41f188:	pop    ebp
  41f189:	ret    0x14
  41f18c:	(bad)  
  41f18d:	(bad)  
  41f18e:	(bad)  
  41f18f:	call   DWORD PTR [edx]
  41f191:	add    BYTE PTR [eax],al
  41f193:	add    BYTE PTR [edi+0x53],dl
  41f196:	inc    ecx
  41f197:	push   ebx
  41f198:	je     0x41f20c
  41f19a:	imul   ebp,DWORD PTR [esi+0x67],0x64416f54
  41f1a1:	fs jb  0x41f209
  41f1a4:	jae    0x41f219
  41f1a6:	add    BYTE PTR [eax],al
  41f1a8:	push   ebp
  41f1a9:	mov    ebp,esp
  41f1ab:	mov    edx,0x472b3c
  41f1b0:	mov    eax,0x41f1d8
  41f1b5:	call   0x41dbb8
  41f1ba:	mov    eax,DWORD PTR [ebp+0x10]
  41f1bd:	push   eax
  41f1be:	mov    eax,DWORD PTR [ebp+0xc]
  41f1c1:	push   eax
  41f1c2:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c5:	push   eax
  41f1c6:	call   DWORD PTR ds:0x472b3c
  41f1cc:	pop    ebp
  41f1cd:	ret    0xc
  41f1d0:	(bad)  
  41f1d1:	(bad)  
  41f1d2:	(bad)  
  41f1d3:	call   DWORD PTR [esi]
  41f1d5:	add    BYTE PTR [eax],al
  41f1d7:	add    BYTE PTR [edi+0x53],dl
  41f1da:	inc    ecx
  41f1db:	dec    esp
  41f1dc:	outs   dx,DWORD PTR ds:[esi]
  41f1dd:	outs   dx,DWORD PTR ds:[esi]
  41f1de:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f1e2:	gs jb  0x41f25b
  41f1e5:	imul   esp,DWORD PTR [ebx+0x65],0x69676542
  41f1ec:	outs   dx,BYTE PTR ds:[esi]
  41f1ed:	inc    ecx
  41f1ee:	add    BYTE PTR [eax],al
  41f1f0:	push   ebp
  41f1f1:	mov    ebp,esp
  41f1f3:	mov    edx,0x472b40
  41f1f8:	mov    eax,0x41f220
  41f1fd:	call   0x41dbb8
  41f202:	mov    eax,DWORD PTR [ebp+0x10]
  41f205:	push   eax
  41f206:	mov    eax,DWORD PTR [ebp+0xc]
  41f209:	push   eax
  41f20a:	mov    eax,DWORD PTR [ebp+0x8]
  41f20d:	push   eax
  41f20e:	call   DWORD PTR ds:0x472b40
  41f214:	pop    ebp
  41f215:	ret    0xc
  41f218:	(bad)  
  41f219:	(bad)  
  41f21a:	(bad)  
  41f21b:	call   DWORD PTR [esi]
  41f21d:	add    BYTE PTR [eax],al
  41f21f:	add    BYTE PTR [edi+0x53],dl
  41f222:	inc    ecx
  41f223:	dec    esp
  41f224:	outs   dx,DWORD PTR ds:[esi]
  41f225:	outs   dx,DWORD PTR ds:[esi]
  41f226:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f22a:	gs jb  0x41f2a3
  41f22d:	imul   esp,DWORD PTR [ebx+0x65],0x69676542
  41f234:	outs   dx,BYTE PTR ds:[esi]
  41f235:	push   edi
  41f236:	add    BYTE PTR [eax],al
  41f238:	push   ebp
  41f239:	mov    ebp,esp
  41f23b:	mov    edx,0x472b44
  41f240:	mov    eax,0x41f268
  41f245:	call   0x41dbb8
  41f24a:	mov    eax,DWORD PTR [ebp+0x10]
  41f24d:	push   eax
  41f24e:	mov    eax,DWORD PTR [ebp+0xc]
  41f251:	push   eax
  41f252:	mov    eax,DWORD PTR [ebp+0x8]
  41f255:	push   eax
  41f256:	call   DWORD PTR ds:0x472b44
  41f25c:	pop    ebp
  41f25d:	ret    0xc
  41f260:	(bad)  
  41f261:	(bad)  
  41f262:	(bad)  
  41f263:	call   DWORD PTR ds:0x57000000
  41f269:	push   ebx
  41f26a:	inc    ecx
  41f26b:	dec    esp
  41f26c:	outs   dx,DWORD PTR ds:[esi]
  41f26d:	outs   dx,DWORD PTR ds:[esi]
  41f26e:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f272:	gs jb  0x41f2eb
  41f275:	imul   esp,DWORD PTR [ebx+0x65],0x69676542
  41f27c:	outs   dx,BYTE PTR ds:[esi]
  41f27d:	add    BYTE PTR [eax],al
  41f27f:	add    BYTE PTR [ebp-0x75],dl
  41f282:	in     al,dx
  41f283:	mov    edx,0x472b48
  41f288:	mov    eax,0x41f2b4
  41f28d:	call   0x41dbb8
  41f292:	mov    eax,DWORD PTR [ebp+0x14]
  41f295:	push   eax
  41f296:	mov    eax,DWORD PTR [ebp+0x10]
  41f299:	push   eax
  41f29a:	mov    eax,DWORD PTR [ebp+0xc]
  41f29d:	push   eax
  41f29e:	mov    eax,DWORD PTR [ebp+0x8]
  41f2a1:	push   eax
  41f2a2:	call   DWORD PTR ds:0x472b48
  41f2a8:	pop    ebp
  41f2a9:	ret    0x10
  41f2ac:	(bad)  
  41f2ad:	(bad)  
  41f2ae:	(bad)  
  41f2af:	call   DWORD PTR ds:0x57000000
  41f2b5:	push   ebx
  41f2b6:	inc    ecx
  41f2b7:	dec    esp
  41f2b8:	outs   dx,DWORD PTR ds:[esi]
  41f2b9:	outs   dx,DWORD PTR ds:[esi]
  41f2ba:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f2be:	gs jb  0x41f337
  41f2c1:	imul   esp,DWORD PTR [ebx+0x65],0x7478654e
  41f2c8:	inc    ecx
  41f2c9:	add    BYTE PTR [eax],al
  41f2cb:	add    BYTE PTR [ebp-0x75],dl
  41f2ce:	in     al,dx
  41f2cf:	mov    edx,0x472b4c
  41f2d4:	mov    eax,0x41f300
  41f2d9:	call   0x41dbb8
  41f2de:	mov    eax,DWORD PTR [ebp+0x14]
  41f2e1:	push   eax
  41f2e2:	mov    eax,DWORD PTR [ebp+0x10]
  41f2e5:	push   eax
  41f2e6:	mov    eax,DWORD PTR [ebp+0xc]
  41f2e9:	push   eax
  41f2ea:	mov    eax,DWORD PTR [ebp+0x8]
  41f2ed:	push   eax
  41f2ee:	call   DWORD PTR ds:0x472b4c
  41f2f4:	pop    ebp
  41f2f5:	ret    0x10
  41f2f8:	(bad)  
  41f2f9:	(bad)  
  41f2fa:	(bad)  
  41f2fb:	call   DWORD PTR ds:0x57000000
  41f301:	push   ebx
  41f302:	inc    ecx
  41f303:	dec    esp
  41f304:	outs   dx,DWORD PTR ds:[esi]
  41f305:	outs   dx,DWORD PTR ds:[esi]
  41f306:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f30a:	gs jb  0x41f383
  41f30d:	imul   esp,DWORD PTR [ebx+0x65],0x7478654e
  41f314:	push   edi
  41f315:	add    BYTE PTR [eax],al
  41f317:	add    BYTE PTR [ebp-0x75],dl
  41f31a:	in     al,dx
  41f31b:	mov    edx,0x472b50
  41f320:	mov    eax,0x41f34c
  41f325:	call   0x41dbb8
  41f32a:	mov    eax,DWORD PTR [ebp+0x14]
  41f32d:	push   eax
  41f32e:	mov    eax,DWORD PTR [ebp+0x10]
  41f331:	push   eax
  41f332:	mov    eax,DWORD PTR [ebp+0xc]
  41f335:	push   eax
  41f336:	mov    eax,DWORD PTR [ebp+0x8]
  41f339:	push   eax
  41f33a:	call   DWORD PTR ds:0x472b50
  41f340:	pop    ebp
  41f341:	ret    0x10
  41f344:	(bad)  
  41f345:	(bad)  
  41f346:	(bad)  
  41f347:	call   DWORD PTR [eax+eax*1]
  41f34a:	add    BYTE PTR [eax],al
  41f34c:	push   edi
  41f34d:	push   ebx
  41f34e:	inc    ecx
  41f34f:	dec    esp
  41f350:	outs   dx,DWORD PTR ds:[esi]
  41f351:	outs   dx,DWORD PTR ds:[esi]
  41f352:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f356:	gs jb  0x41f3cf
  41f359:	imul   esp,DWORD PTR [ebx+0x65],0x7478654e
  41f360:	add    BYTE PTR [eax],al
  41f362:	add    BYTE PTR [eax],al
  41f364:	push   ebp
  41f365:	mov    ebp,esp
  41f367:	mov    edx,0x472b54
  41f36c:	mov    eax,0x41f38c
  41f371:	call   0x41dbb8
  41f376:	mov    eax,DWORD PTR [ebp+0x8]
  41f379:	push   eax
  41f37a:	call   DWORD PTR ds:0x472b54
  41f380:	pop    ebp
  41f381:	ret    0x4
  41f384:	(bad)  
  41f385:	(bad)  
  41f386:	(bad)  
  41f387:	call   DWORD PTR [ebx]
  41f389:	add    BYTE PTR [eax],al
  41f38b:	add    BYTE PTR [edi+0x53],dl
  41f38e:	inc    ecx
  41f38f:	dec    esp
  41f390:	outs   dx,DWORD PTR ds:[esi]
  41f391:	outs   dx,DWORD PTR ds:[esi]
  41f392:	imul   esi,DWORD PTR [ebp+0x70],0x53
  41f396:	gs jb  0x41f40f
  41f399:	imul   esp,DWORD PTR [ebx+0x65],0x646e45
  41f3a0:	push   ebp
  41f3a1:	mov    ebp,esp
  41f3a3:	mov    edx,0x472b58
  41f3a8:	mov    eax,0x41f3c8
  41f3ad:	call   0x41dbb8
  41f3b2:	mov    eax,DWORD PTR [ebp+0x8]
  41f3b5:	push   eax
  41f3b6:	call   DWORD PTR ds:0x472b58
  41f3bc:	pop    ebp
  41f3bd:	ret    0x4
  41f3c0:	(bad)  
  41f3c1:	(bad)  
  41f3c2:	(bad)  
  41f3c3:	call   DWORD PTR [edi]
  41f3c5:	add    BYTE PTR [eax],al
  41f3c7:	add    BYTE PTR [edi+0x53],dl
  41f3ca:	inc    ecx
  41f3cb:	dec    ecx
  41f3cc:	outs   dx,BYTE PTR ds:[esi]
  41f3cd:	jae    0x41f443
  41f3cf:	popa   
  41f3d0:	ins    BYTE PTR es:[edi],dx
  41f3d1:	ins    BYTE PTR es:[edi],dx
  41f3d2:	push   ebx
  41f3d3:	gs jb  0x41f44c
  41f3d6:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f3dd:	jae    0x41f420
  41f3df:	add    BYTE PTR [ebp-0x75],dl
  41f3e2:	in     al,dx
  41f3e3:	mov    edx,0x472b5c
  41f3e8:	mov    eax,0x41f408
  41f3ed:	call   0x41dbb8
  41f3f2:	mov    eax,DWORD PTR [ebp+0x8]
  41f3f5:	push   eax
  41f3f6:	call   DWORD PTR ds:0x472b5c
  41f3fc:	pop    ebp
  41f3fd:	ret    0x4
  41f400:	(bad)  
  41f401:	(bad)  
  41f402:	(bad)  
  41f403:	call   DWORD PTR [edi]
  41f405:	add    BYTE PTR [eax],al
  41f407:	add    BYTE PTR [edi+0x53],dl
  41f40a:	inc    ecx
  41f40b:	dec    ecx
  41f40c:	outs   dx,BYTE PTR ds:[esi]
  41f40d:	jae    0x41f483
  41f40f:	popa   
  41f410:	ins    BYTE PTR es:[edi],dx
  41f411:	ins    BYTE PTR es:[edi],dx
  41f412:	push   ebx
  41f413:	gs jb  0x41f48c
  41f416:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f41d:	jae    0x41f476
  41f41f:	add    BYTE PTR [ebp-0x75],dl
  41f422:	in     al,dx
  41f423:	mov    edx,0x472b60
  41f428:	mov    eax,0x41f448
  41f42d:	call   0x41dbb8
  41f432:	mov    eax,DWORD PTR [ebp+0x8]
  41f435:	push   eax
  41f436:	call   DWORD PTR ds:0x472b60
  41f43c:	pop    ebp
  41f43d:	ret    0x4
  41f440:	(bad)  
  41f441:	(bad)  
  41f442:	(bad)  
  41f443:	call   DWORD PTR [esi]
  41f445:	add    BYTE PTR [eax],al
  41f447:	add    BYTE PTR [edi+0x53],dl
  41f44a:	inc    ecx
  41f44b:	dec    ecx
  41f44c:	outs   dx,BYTE PTR ds:[esi]
  41f44d:	jae    0x41f4c3
  41f44f:	popa   
  41f450:	ins    BYTE PTR es:[edi],dx
  41f451:	ins    BYTE PTR es:[edi],dx
  41f452:	push   ebx
  41f453:	gs jb  0x41f4cc
  41f456:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f45d:	jae    0x41f45f
  41f45f:	add    BYTE PTR [ebp-0x75],dl
  41f462:	in     al,dx
  41f463:	mov    edx,0x472b64
  41f468:	mov    eax,0x41f488
  41f46d:	call   0x41dbb8
  41f472:	mov    eax,DWORD PTR [ebp+0x8]
  41f475:	push   eax
  41f476:	call   DWORD PTR ds:0x472b64
  41f47c:	pop    ebp
  41f47d:	ret    0x4
  41f480:	(bad)  
  41f481:	(bad)  
  41f482:	(bad)  
  41f483:	call   DWORD PTR ds:0x57000000
  41f489:	push   ebx
  41f48a:	inc    ecx
  41f48b:	push   edx
  41f48c:	gs ins DWORD PTR es:[edi],dx
  41f48e:	outs   dx,DWORD PTR ds:[esi]
  41f48f:	jbe    0x41f4f6
  41f491:	push   ebx
  41f492:	gs jb  0x41f50b
  41f495:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f49c:	jae    0x41f49e
  41f49e:	add    BYTE PTR [eax],al
  41f4a0:	push   ebp
  41f4a1:	mov    ebp,esp
  41f4a3:	mov    edx,0x472b68
  41f4a8:	mov    eax,0x41f4d4
  41f4ad:	call   0x41dbb8
  41f4b2:	mov    eax,DWORD PTR [ebp+0x14]
  41f4b5:	push   eax
  41f4b6:	mov    eax,DWORD PTR [ebp+0x10]
  41f4b9:	push   eax
  41f4ba:	mov    eax,DWORD PTR [ebp+0xc]
  41f4bd:	push   eax
  41f4be:	mov    eax,DWORD PTR [ebp+0x8]
  41f4c1:	push   eax
  41f4c2:	call   DWORD PTR ds:0x472b68
  41f4c8:	pop    ebp
  41f4c9:	ret    0x10
  41f4cc:	(bad)  
  41f4cd:	(bad)  
  41f4ce:	(bad)  
  41f4cf:	call   DWORD PTR [edi]
  41f4d1:	add    BYTE PTR [eax],al
  41f4d3:	add    BYTE PTR [edi+0x53],dl
  41f4d6:	inc    ecx
  41f4d7:	inc    edi
  41f4d8:	gs je  0x41f52e
  41f4db:	gs jb  0x41f554
  41f4de:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f4e5:	jae    0x41f530
  41f4e7:	outs   dx,BYTE PTR ds:[esi]
  41f4e8:	outs   dx,WORD PTR ds:[esi]
  41f4ea:	inc    ecx
  41f4eb:	add    BYTE PTR [ebp-0x75],dl
  41f4ee:	in     al,dx
  41f4ef:	mov    edx,0x472b6c
  41f4f4:	mov    eax,0x41f520
  41f4f9:	call   0x41dbb8
  41f4fe:	mov    eax,DWORD PTR [ebp+0x14]
  41f501:	push   eax
  41f502:	mov    eax,DWORD PTR [ebp+0x10]
  41f505:	push   eax
  41f506:	mov    eax,DWORD PTR [ebp+0xc]
  41f509:	push   eax
  41f50a:	mov    eax,DWORD PTR [ebp+0x8]
  41f50d:	push   eax
  41f50e:	call   DWORD PTR ds:0x472b6c
  41f514:	pop    ebp
  41f515:	ret    0x10
  41f518:	(bad)  
  41f519:	(bad)  
  41f51a:	(bad)  
  41f51b:	call   DWORD PTR [edi]
  41f51d:	add    BYTE PTR [eax],al
  41f51f:	add    BYTE PTR [edi+0x53],dl
  41f522:	inc    ecx
  41f523:	inc    edi
  41f524:	gs je  0x41f57a
  41f527:	gs jb  0x41f5a0
  41f52a:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f531:	jae    0x41f57c
  41f533:	outs   dx,BYTE PTR ds:[esi]
  41f534:	outs   dx,WORD PTR ds:[esi]
  41f536:	push   edi
  41f537:	add    BYTE PTR [ebp-0x75],dl
  41f53a:	in     al,dx
  41f53b:	mov    edx,0x472b70
  41f540:	mov    eax,0x41f56c
  41f545:	call   0x41dbb8
  41f54a:	mov    eax,DWORD PTR [ebp+0x14]
  41f54d:	push   eax
  41f54e:	mov    eax,DWORD PTR [ebp+0x10]
  41f551:	push   eax
  41f552:	mov    eax,DWORD PTR [ebp+0xc]
  41f555:	push   eax
  41f556:	mov    eax,DWORD PTR [ebp+0x8]
  41f559:	push   eax
  41f55a:	call   DWORD PTR ds:0x472b70
  41f560:	pop    ebp
  41f561:	ret    0x10
  41f564:	(bad)  
  41f565:	(bad)  
  41f566:	(bad)  
  41f567:	call   DWORD PTR [esi]
  41f569:	add    BYTE PTR [eax],al
  41f56b:	add    BYTE PTR [edi+0x53],dl
  41f56e:	inc    ecx
  41f56f:	inc    edi
  41f570:	gs je  0x41f5c6
  41f573:	gs jb  0x41f5ec
  41f576:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f57d:	jae    0x41f5c8
  41f57f:	outs   dx,BYTE PTR ds:[esi]
  41f580:	outs   dx,WORD PTR ds:[esi]
  41f582:	add    BYTE PTR [eax],al
  41f584:	push   ebp
  41f585:	mov    ebp,esp
  41f587:	mov    edx,0x472b74
  41f58c:	mov    eax,0x41f5b0
  41f591:	call   0x41dbb8
  41f596:	mov    eax,DWORD PTR [ebp+0xc]
  41f599:	push   eax
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	push   eax
  41f59e:	call   DWORD PTR ds:0x472b74
  41f5a4:	pop    ebp
  41f5a5:	ret    0x8
  41f5a8:	(bad)  
  41f5a9:	(bad)  
  41f5aa:	(bad)  
  41f5ab:	call   FWORD PTR [edx]
  41f5ad:	add    BYTE PTR [eax],al
  41f5af:	add    BYTE PTR [edi+0x53],dl
  41f5b2:	inc    ecx
  41f5b3:	inc    ebp
  41f5b4:	outs   dx,BYTE PTR ds:[esi]
  41f5b5:	jne    0x41f624
  41f5b7:	dec    esi
  41f5b8:	popa   
  41f5b9:	ins    DWORD PTR es:[edi],dx
  41f5ba:	gs push ebx
  41f5bc:	jo     0x41f61f
  41f5be:	arpl   WORD PTR [ebp+0x50],sp
  41f5c1:	jb     0x41f632
  41f5c3:	jbe    0x41f62e
  41f5c5:	fs gs jb 0x41f63c
  41f5c9:	inc    ecx
  41f5ca:	add    BYTE PTR [eax],al
  41f5cc:	push   ebp
  41f5cd:	mov    ebp,esp
  41f5cf:	mov    edx,0x472b78
  41f5d4:	mov    eax,0x41f5f8
  41f5d9:	call   0x41dbb8
  41f5de:	mov    eax,DWORD PTR [ebp+0xc]
  41f5e1:	push   eax
  41f5e2:	mov    eax,DWORD PTR [ebp+0x8]
  41f5e5:	push   eax
  41f5e6:	call   DWORD PTR ds:0x472b78
  41f5ec:	pop    ebp
  41f5ed:	ret    0x8
  41f5f0:	(bad)  
  41f5f1:	(bad)  
  41f5f2:	(bad)  
  41f5f3:	call   FWORD PTR [edx]
  41f5f5:	add    BYTE PTR [eax],al
  41f5f7:	add    BYTE PTR [edi+0x53],dl
  41f5fa:	inc    ecx
  41f5fb:	inc    ebp
  41f5fc:	outs   dx,BYTE PTR ds:[esi]
  41f5fd:	jne    0x41f66c
  41f5ff:	dec    esi
  41f600:	popa   
  41f601:	ins    DWORD PTR es:[edi],dx
  41f602:	gs push ebx
  41f604:	jo     0x41f667
  41f606:	arpl   WORD PTR [ebp+0x50],sp
  41f609:	jb     0x41f67a
  41f60b:	jbe    0x41f676
  41f60d:	fs gs jb 0x41f684
  41f611:	push   edi
  41f612:	add    BYTE PTR [eax],al
  41f614:	push   ebp
  41f615:	mov    ebp,esp
  41f617:	mov    edx,0x472b7c
  41f61c:	mov    eax,0x41f640
  41f621:	call   0x41dbb8
  41f626:	mov    eax,DWORD PTR [ebp+0xc]
  41f629:	push   eax
  41f62a:	mov    eax,DWORD PTR [ebp+0x8]
  41f62d:	push   eax
  41f62e:	call   DWORD PTR ds:0x472b7c
  41f634:	pop    ebp
  41f635:	ret    0x8
  41f638:	(bad)  
  41f639:	(bad)  
  41f63a:	(bad)  
  41f63b:	call   FWORD PTR [ecx]
  41f63d:	add    BYTE PTR [eax],al
  41f63f:	add    BYTE PTR [edi+0x53],dl
  41f642:	inc    ecx
  41f643:	inc    ebp
  41f644:	outs   dx,BYTE PTR ds:[esi]
  41f645:	jne    0x41f6b4
  41f647:	dec    esi
  41f648:	popa   
  41f649:	ins    DWORD PTR es:[edi],dx
  41f64a:	gs push ebx
  41f64c:	jo     0x41f6af
  41f64e:	arpl   WORD PTR [ebp+0x50],sp
  41f651:	jb     0x41f6c2
  41f653:	jbe    0x41f6be
  41f655:	fs gs jb 0x41f6cc
  41f659:	add    BYTE PTR [eax],al
  41f65b:	add    BYTE PTR [ebp-0x75],dl
  41f65e:	in     al,dx
  41f65f:	mov    edx,0x472b80
  41f664:	mov    eax,0x41f68c
  41f669:	call   0x41dbb8
  41f66e:	mov    eax,DWORD PTR [ebp+0x10]
  41f671:	push   eax
  41f672:	mov    eax,DWORD PTR [ebp+0xc]
  41f675:	push   eax
  41f676:	mov    eax,DWORD PTR [ebp+0x8]
  41f679:	push   eax
  41f67a:	call   DWORD PTR ds:0x472b80
  41f680:	pop    ebp
  41f681:	ret    0xc
  41f684:	(bad)  
  41f685:	(bad)  
  41f686:	(bad)  
  41f687:	jmp    DWORD PTR [eax]
  41f689:	add    BYTE PTR [eax],al
  41f68b:	add    BYTE PTR [edi+0x53],dl
  41f68e:	inc    ecx
  41f68f:	inc    edi
  41f690:	gs je  0x41f6e6
  41f693:	gs jb  0x41f70c
  41f696:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f69d:	jae    0x41f6ed
  41f69f:	popa   
  41f6a0:	ins    DWORD PTR es:[edi],dx
  41f6a1:	gs inc edx
  41f6a3:	jns    0x41f6e8
  41f6a5:	ins    BYTE PTR es:[edi],dx
  41f6a6:	popa   
  41f6a7:	jae    0x41f71c
  41f6a9:	dec    ecx
  41f6aa:	fs inc ecx
  41f6ac:	add    BYTE PTR [eax],al
  41f6ae:	add    BYTE PTR [eax],al
  41f6b0:	push   ebp
  41f6b1:	mov    ebp,esp
  41f6b3:	mov    edx,0x472b84
  41f6b8:	mov    eax,0x41f6e0
  41f6bd:	call   0x41dbb8
  41f6c2:	mov    eax,DWORD PTR [ebp+0x10]
  41f6c5:	push   eax
  41f6c6:	mov    eax,DWORD PTR [ebp+0xc]
  41f6c9:	push   eax
  41f6ca:	mov    eax,DWORD PTR [ebp+0x8]
  41f6cd:	push   eax
  41f6ce:	call   DWORD PTR ds:0x472b84
  41f6d4:	pop    ebp
  41f6d5:	ret    0xc
  41f6d8:	(bad)  
  41f6d9:	(bad)  
  41f6da:	(bad)  
  41f6db:	jmp    DWORD PTR [eax]
  41f6dd:	add    BYTE PTR [eax],al
  41f6df:	add    BYTE PTR [edi+0x53],dl
  41f6e2:	inc    ecx
  41f6e3:	inc    edi
  41f6e4:	gs je  0x41f73a
  41f6e7:	gs jb  0x41f760
  41f6ea:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f6f1:	jae    0x41f741
  41f6f3:	popa   
  41f6f4:	ins    DWORD PTR es:[edi],dx
  41f6f5:	gs inc edx
  41f6f7:	jns    0x41f73c
  41f6f9:	ins    BYTE PTR es:[edi],dx
  41f6fa:	popa   
  41f6fb:	jae    0x41f770
  41f6fd:	dec    ecx
  41f6fe:	fs push edi
  41f700:	add    BYTE PTR [eax],al
  41f702:	add    BYTE PTR [eax],al
  41f704:	push   ebp
  41f705:	mov    ebp,esp
  41f707:	mov    edx,0x472b88
  41f70c:	mov    eax,0x41f734
  41f711:	call   0x41dbb8
  41f716:	mov    eax,DWORD PTR [ebp+0x10]
  41f719:	push   eax
  41f71a:	mov    eax,DWORD PTR [ebp+0xc]
  41f71d:	push   eax
  41f71e:	mov    eax,DWORD PTR [ebp+0x8]
  41f721:	push   eax
  41f722:	call   DWORD PTR ds:0x472b88
  41f728:	pop    ebp
  41f729:	ret    0xc
  41f72c:	(bad)  
  41f72d:	(bad)  
  41f72e:	(bad)  
  41f72f:	call   FWORD PTR [edi]
  41f731:	add    BYTE PTR [eax],al
  41f733:	add    BYTE PTR [edi+0x53],dl
  41f736:	inc    ecx
  41f737:	inc    edi
  41f738:	gs je  0x41f78e
  41f73b:	gs jb  0x41f7b4
  41f73e:	imul   esp,DWORD PTR [ebx+0x65],0x73616c43
  41f745:	jae    0x41f795
  41f747:	popa   
  41f748:	ins    DWORD PTR es:[edi],dx
  41f749:	gs inc edx
  41f74b:	jns    0x41f790
  41f74d:	ins    BYTE PTR es:[edi],dx
  41f74e:	popa   
  41f74f:	jae    0x41f7c4
  41f751:	dec    ecx
  41f752:	add    BYTE PTR fs:[ebp-0x75],dl
  41f756:	in     al,dx
  41f757:	mov    edx,0x472b8c
  41f75c:	mov    eax,0x41f788
  41f761:	call   0x41dbb8
  41f766:	mov    eax,DWORD PTR [ebp+0x10]
  41f769:	push   eax
  41f76a:	movzx  eax,BYTE PTR [ebp+0xc]
  41f76e:	push   eax
  41f76f:	mov    eax,DWORD PTR [ebp+0x8]
  41f772:	push   eax
  41f773:	call   DWORD PTR ds:0x472b8c
  41f779:	pop    ebp
  41f77a:	ret    0xc
  41f77d:	add    BYTE PTR [eax],al
  41f77f:	add    bh,bh
  41f781:	(bad)  
  41f782:	(bad)  
  41f783:	dec    DWORD PTR [esi]
  41f785:	add    BYTE PTR [eax],al
  41f787:	add    BYTE PTR [edi+0x53],dl
  41f78a:	inc    ecx
  41f78b:	push   ebx
  41f78c:	gs je  0x41f7e2
  41f78f:	gs jb  0x41f808
  41f792:	imul   esp,DWORD PTR [ebx+0x65],0x55000041
  41f799:	mov    ebp,esp
  41f79b:	mov    edx,0x472b90
  41f7a0:	mov    eax,0x41f7cc
  41f7a5:	call   0x41dbb8
  41f7aa:	mov    eax,DWORD PTR [ebp+0x10]
  41f7ad:	push   eax
  41f7ae:	movzx  eax,BYTE PTR [ebp+0xc]
  41f7b2:	push   eax
  41f7b3:	mov    eax,DWORD PTR [ebp+0x8]
  41f7b6:	push   eax
  41f7b7:	call   DWORD PTR ds:0x472b90
  41f7bd:	pop    ebp
  41f7be:	ret    0xc
  41f7c1:	add    BYTE PTR [eax],al
  41f7c3:	add    bh,bh
  41f7c5:	(bad)  
  41f7c6:	(bad)  
  41f7c7:	dec    DWORD PTR [esi]
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [edi+0x53],dl
  41f7ce:	inc    ecx
  41f7cf:	push   ebx
  41f7d0:	gs je  0x41f826
  41f7d3:	gs jb  0x41f84c
  41f7d6:	imul   esp,DWORD PTR [ebx+0x65],0x55000057
  41f7dd:	mov    ebp,esp
  41f7df:	mov    edx,0x472b94
  41f7e4:	mov    eax,0x41f810
  41f7e9:	call   0x41dbb8
  41f7ee:	mov    eax,DWORD PTR [ebp+0x10]
  41f7f1:	push   eax
  41f7f2:	movzx  eax,BYTE PTR [ebp+0xc]
  41f7f6:	push   eax
  41f7f7:	mov    eax,DWORD PTR [ebp+0x8]
  41f7fa:	push   eax
  41f7fb:	call   DWORD PTR ds:0x472b94
  41f801:	pop    ebp
  41f802:	ret    0xc
  41f805:	add    BYTE PTR [eax],al
  41f807:	add    bh,bh
  41f809:	(bad)  
  41f80a:	(bad)  
  41f80b:	dec    DWORD PTR ds:0x57000000
  41f811:	push   ebx
  41f812:	inc    ecx
  41f813:	push   ebx
  41f814:	gs je  0x41f86a
  41f817:	gs jb  0x41f890
  41f81a:	imul   esp,DWORD PTR [ebx+0x65],0x55000000
  41f821:	mov    ebp,esp
  41f823:	mov    edx,0x472b98
  41f828:	mov    eax,0x41f850
  41f82d:	call   0x41dbb8
  41f832:	mov    eax,DWORD PTR [ebp+0x10]
  41f835:	push   eax
  41f836:	mov    eax,DWORD PTR [ebp+0xc]
  41f839:	push   eax
  41f83a:	mov    eax,DWORD PTR [ebp+0x8]
  41f83d:	push   eax
  41f83e:	call   DWORD PTR ds:0x472b98
  41f844:	pop    ebp
  41f845:	ret    0xc
  41f848:	(bad)  
  41f849:	(bad)  
  41f84a:	(bad)  
  41f84b:	call   DWORD PTR [edi]
  41f84d:	add    BYTE PTR [eax],al
  41f84f:	add    BYTE PTR [edi+0x53],dl
  41f852:	inc    ecx
  41f853:	push   eax
  41f854:	jb     0x41f8c5
  41f856:	jbe    0x41f8c1
  41f858:	fs gs jb 0x41f89f
  41f85c:	outs   dx,DWORD PTR ds:[esi]
  41f85d:	outs   dx,BYTE PTR ds:[esi]
  41f85e:	imul   sp,WORD PTR [edi+0x43],0x6168
  41f864:	outs   dx,BYTE PTR ds:[esi]
  41f865:	add    BYTE PTR gs:[di-0x75],dl
  41f86a:	in     al,dx
  41f86b:	mov    edx,0x472b9c
  41f870:	mov    eax,0x41f8a8
  41f875:	call   0x41dbb8
  41f87a:	mov    eax,DWORD PTR [ebp+0x20]
  41f87d:	push   eax
  41f87e:	mov    eax,DWORD PTR [ebp+0x1c]
  41f881:	push   eax
  41f882:	mov    eax,DWORD PTR [ebp+0x18]
  41f885:	push   eax
  41f886:	mov    eax,DWORD PTR [ebp+0x14]
  41f889:	push   eax
  41f88a:	mov    eax,DWORD PTR [ebp+0x10]
  41f88d:	push   eax
  41f88e:	mov    eax,DWORD PTR [ebp+0xc]
  41f891:	push   eax
  41f892:	mov    eax,DWORD PTR [ebp+0x8]
  41f895:	push   eax
  41f896:	call   DWORD PTR ds:0x472b9c
  41f89c:	pop    ebp
  41f89d:	ret    0x1c
  41f8a0:	(bad)  
  41f8a1:	(bad)  
  41f8a2:	(bad)  
  41f8a3:	dec    DWORD PTR [eax+eax*1]
  41f8a6:	add    BYTE PTR [eax],al
  41f8a8:	push   esp
  41f8a9:	jb     0x41f90c
  41f8ab:	outs   dx,BYTE PTR ds:[esi]
  41f8ac:	jae    0x41f91b
  41f8ae:	imul   esi,DWORD PTR [esi+eax*2+0x69],0x656c
  41f8b6:	add    BYTE PTR [eax],al
  41f8b8:	mov    DWORD PTR ds:0x4729ec,0x41dc5c
  41f8c2:	mov    DWORD PTR ds:0x4729f0,0x41dc88
  41f8cc:	mov    DWORD PTR ds:0x4729f4,0x41dcc0
  41f8d6:	mov    DWORD PTR ds:0x4729f8,0x41dcf8
  41f8e0:	mov    DWORD PTR ds:0x4729fc,0x41dd2c
  41f8ea:	mov    DWORD PTR ds:0x472a00,0x41dd64
  41f8f4:	mov    DWORD PTR ds:0x472a04,0x41dda0
  41f8fe:	mov    DWORD PTR ds:0x472a08,0x41dddc
  41f908:	mov    DWORD PTR ds:0x472a0c,0x41de18
  41f912:	mov    DWORD PTR ds:0x472a10,0x41de5c
  41f91c:	mov    DWORD PTR ds:0x472a14,0x41de8c
  41f926:	mov    DWORD PTR ds:0x472a18,0x41dec0
  41f930:	mov    DWORD PTR ds:0x472a1c,0x41def4
  41f93a:	mov    DWORD PTR ds:0x472a20,0x41df28
  41f944:	mov    DWORD PTR ds:0x472a24,0x41df5c
  41f94e:	mov    DWORD PTR ds:0x472a28,0x41df8c
  41f958:	mov    DWORD PTR ds:0x472a2c,0x41dfc0
  41f962:	mov    DWORD PTR ds:0x472a30,0x41dffc
  41f96c:	mov    DWORD PTR ds:0x472a34,0x41e044
  41f976:	mov    DWORD PTR ds:0x472a38,0x41e084
  41f980:	mov    DWORD PTR ds:0x472a3c,0x41e0c0
  41f98a:	mov    DWORD PTR ds:0x472a40,0x41e104
  41f994:	mov    DWORD PTR ds:0x472a44,0x41e148
  41f99e:	mov    DWORD PTR ds:0x472a48,0x41e180
  41f9a8:	mov    DWORD PTR ds:0x472a4c,0x41e1b8
  41f9b2:	mov    DWORD PTR ds:0x472a50,0x41e1f8
  41f9bc:	mov    DWORD PTR ds:0x472a54,0x41e230
  41f9c6:	mov    DWORD PTR ds:0x472a58,0x41e268
  41f9d0:	mov    DWORD PTR ds:0x472a5c,0x41e2a4
  41f9da:	mov    DWORD PTR ds:0x472a60,0x41e2e0
  41f9e4:	mov    DWORD PTR ds:0x472a64,0x41e31c
  41f9ee:	mov    DWORD PTR ds:0x472a68,0x41e354
  41f9f8:	mov    DWORD PTR ds:0x472a6c,0x41e38c
  41fa02:	mov    DWORD PTR ds:0x472a70,0x41e3bc
  41fa0c:	mov    DWORD PTR ds:0x472a74,0x41e3ec
  41fa16:	mov    DWORD PTR ds:0x472a78,0x41e424
  41fa20:	mov    DWORD PTR ds:0x472a7c,0x41e460
  41fa2a:	mov    DWORD PTR ds:0x472a80,0x41e498
  41fa34:	mov    DWORD PTR ds:0x472a84,0x41e4ec
  41fa3e:	mov    DWORD PTR ds:0x472a88,0x41e540
  41fa48:	mov    DWORD PTR ds:0x472a8c,0x41e590
  41fa52:	mov    DWORD PTR ds:0x472a90,0x41e5e4
  41fa5c:	mov    DWORD PTR ds:0x472a94,0x41e634
  41fa66:	mov    DWORD PTR ds:0x472a98,0x41e68c
  41fa70:	mov    DWORD PTR ds:0x472a9c,0x41e6cc
  41fa7a:	mov    DWORD PTR ds:0x472aa0,0x41e710
  41fa84:	mov    DWORD PTR ds:0x472aa4,0x41e74c
  41fa8e:	mov    DWORD PTR ds:0x472aa8,0x41e790
  41fa98:	mov    DWORD PTR ds:0x472aac,0x41e7c8
  41faa2:	mov    DWORD PTR ds:0x472ab0,0x41e814
  41faac:	mov    DWORD PTR ds:0x472ab4,0x41e844
  41fab6:	mov    DWORD PTR ds:0x472ab8,0x41e888
  41fac0:	mov    DWORD PTR ds:0x472abc,0x41e8cc
  41faca:	mov    DWORD PTR ds:0x472ac0,0x41e910
  41fad4:	mov    DWORD PTR ds:0x472ac4,0x41e958
  41fade:	mov    DWORD PTR ds:0x472ac8,0x41e99c
  41fae8:	mov    DWORD PTR ds:0x472acc,0x41e9e0
  41faf2:	mov    DWORD PTR ds:0x472ad0,0x41ea24
  41fafc:	mov    DWORD PTR ds:0x472ad4,0x41ea64
  41fb06:	mov    DWORD PTR ds:0x472ad8,0x41eab4
  41fb10:	mov    DWORD PTR ds:0x472adc,0x41eaf4
  41fb1a:	mov    DWORD PTR ds:0x472ae0,0x41eb30
  41fb24:	mov    DWORD PTR ds:0x472ae4,0x41eb70
  41fb2e:	mov    DWORD PTR ds:0x472ae8,0x41ebc4
  41fb38:	mov    DWORD PTR ds:0x472aec,0x41ec14
  41fb42:	mov    DWORD PTR ds:0x472af0,0x41ec50
  41fb4c:	mov    DWORD PTR ds:0x472af4,0x41ec90
  41fb56:	mov    DWORD PTR ds:0x472af8,0x41ecd8
  41fb60:	mov    DWORD PTR ds:0x472afc,0x41ed18
  41fb6a:	mov    DWORD PTR ds:0x472b00,0x41ed6c
  41fb74:	mov    DWORD PTR ds:0x472b04,0x41eda4
  41fb7e:	mov    DWORD PTR ds:0x472b08,0x41edec
  41fb88:	mov    DWORD PTR ds:0x472b0c,0x41ee2c
  41fb92:	mov    DWORD PTR ds:0x472b10,0x41ee80
  41fb9c:	mov    DWORD PTR ds:0x472b14,0x41eeb4
  41fba6:	mov    DWORD PTR ds:0x472b18,0x41eefc
  41fbb0:	mov    DWORD PTR ds:0x472b1c,0x41ef44
  41fbba:	mov    DWORD PTR ds:0x472b20,0x41ef8c
  41fbc4:	mov    DWORD PTR ds:0x472b24,0x41efe0
  41fbce:	mov    DWORD PTR ds:0x472b28,0x41f02c
  41fbd8:	mov    DWORD PTR ds:0x472b2c,0x41f078
  41fbe2:	mov    DWORD PTR ds:0x472b30,0x41f0c4
  41fbec:	mov    DWORD PTR ds:0x472b34,0x41f110
  41fbf6:	mov    DWORD PTR ds:0x472b38,0x41f15c
  41fc00:	mov    DWORD PTR ds:0x472b3c,0x41f1a8
  41fc0a:	mov    DWORD PTR ds:0x472b40,0x41f1f0
  41fc14:	mov    DWORD PTR ds:0x472b44,0x41f238
  41fc1e:	mov    DWORD PTR ds:0x472b48,0x41f280
  41fc28:	mov    DWORD PTR ds:0x472b4c,0x41f2cc
  41fc32:	mov    DWORD PTR ds:0x472b50,0x41f318
  41fc3c:	mov    DWORD PTR ds:0x472b54,0x41f364
  41fc46:	mov    DWORD PTR ds:0x472b58,0x41f3a0
  41fc50:	mov    DWORD PTR ds:0x472b5c,0x41f3e0
  41fc5a:	mov    DWORD PTR ds:0x472b60,0x41f420
  41fc64:	mov    DWORD PTR ds:0x472b64,0x41f460
  41fc6e:	mov    DWORD PTR ds:0x472b68,0x41f4a0
  41fc78:	mov    DWORD PTR ds:0x472b6c,0x41f4ec
  41fc82:	mov    DWORD PTR ds:0x472b70,0x41f538
  41fc8c:	mov    DWORD PTR ds:0x472b74,0x41f584
  41fc96:	mov    DWORD PTR ds:0x472b78,0x41f5cc
  41fca0:	mov    DWORD PTR ds:0x472b7c,0x41f614
  41fcaa:	mov    DWORD PTR ds:0x472b80,0x41f65c
  41fcb4:	mov    DWORD PTR ds:0x472b84,0x41f6b0
  41fcbe:	mov    DWORD PTR ds:0x472b88,0x41f704
  41fcc8:	mov    DWORD PTR ds:0x472b8c,0x41f754
  41fcd2:	mov    DWORD PTR ds:0x472b90,0x41f798
  41fcdc:	mov    DWORD PTR ds:0x472b94,0x41f7dc
  41fce6:	mov    DWORD PTR ds:0x472b98,0x41f820
  41fcf0:	mov    DWORD PTR ds:0x472b9c,0x41f868
  41fcfa:	ret    
  41fcfb:	nop
  41fcfc:	push   ebp
  41fcfd:	mov    ebp,esp
  41fcff:	add    esp,0xfffffff0
  41fd02:	push   ebx
  41fd03:	push   esi
  41fd04:	push   edi
  41fd05:	mov    edi,ecx
  41fd07:	mov    esi,edx
  41fd09:	mov    ebx,eax
  41fd0b:	lea    eax,[ebp-0x10]
  41fd0e:	push   eax
  41fd0f:	lea    eax,[ebp-0xc]
  41fd12:	push   eax
  41fd13:	lea    eax,[ebp-0x8]
  41fd16:	push   eax
  41fd17:	push   0x4
  41fd19:	lea    eax,[ebp-0x4]
  41fd1c:	push   eax
  41fd1d:	push   0x10
  41fd1f:	push   0x461b10
  41fd24:	push   0xc8000006
  41fd29:	push   ebx
  41fd2a:	call   DWORD PTR ds:0x472ae4
  41fd30:	test   eax,eax
  41fd32:	jne    0x41fd44
  41fd34:	mov    eax,DWORD PTR [ebp+0x8]
  41fd37:	push   eax
  41fd38:	mov    eax,DWORD PTR [ebp+0xc]
  41fd3b:	push   eax
  41fd3c:	push   edi
  41fd3d:	push   esi
  41fd3e:	push   ebx
  41fd3f:	call   DWORD PTR [ebp-0x4]
  41fd42:	jmp    0x41fd47
  41fd44:	or     eax,0xffffffff
  41fd47:	pop    edi
  41fd48:	pop    esi
  41fd49:	pop    ebx
  41fd4a:	mov    esp,ebp
  41fd4c:	pop    ebp
  41fd4d:	ret    0x8
  41fd50:	push   ebp
  41fd51:	mov    ebp,esp
  41fd53:	add    esp,0xfffffff0
  41fd56:	push   ebx
  41fd57:	xor    eax,eax
  41fd59:	mov    DWORD PTR [ebp-0x4],eax
  41fd5c:	mov    DWORD PTR [ebp-0x8],eax
  41fd5f:	xor    eax,eax
  41fd61:	push   ebp
  41fd62:	push   0x41fe1d
  41fd67:	push   DWORD PTR fs:[eax]
  41fd6a:	mov    DWORD PTR fs:[eax],esp
  41fd6d:	cmp    DWORD PTR ds:0x461b0c,0x0
  41fd74:	jne    0x41fe00
  41fd7a:	push   0x41fe30
  41fd7f:	call   0x4072b0
  41fd84:	mov    ds:0x461b0c,eax
  41fd89:	cmp    DWORD PTR ds:0x461b0c,0x0
  41fd90:	jne    0x41fdd8
  41fd92:	call   0x407230
  41fd97:	push   eax
  41fd98:	lea    eax,[ebp-0x4]
  41fd9b:	push   eax
  41fd9c:	lea    edx,[ebp-0x8]
  41fd9f:	mov    eax,ds:0x46dd04
  41fda4:	call   0x406f48
  41fda9:	mov    eax,DWORD PTR [ebp-0x8]
  41fdac:	push   eax
  41fdad:	mov    eax,0x41fe44
  41fdb2:	mov    DWORD PTR [ebp-0x10],eax
  41fdb5:	mov    BYTE PTR [ebp-0xc],0xb
  41fdb9:	lea    edx,[ebp-0x10]
  41fdbc:	xor    ecx,ecx
  41fdbe:	pop    eax
  41fdbf:	call   0x409af4
  41fdc4:	mov    ecx,DWORD PTR [ebp-0x4]
  41fdc7:	mov    dl,0x1
  41fdc9:	mov    eax,ds:0x41da60
  41fdce:	call   0x41dae0
  41fdd3:	call   0x4048fc
  41fdd8:	push   0x41fe50
  41fddd:	mov    eax,ds:0x461b0c
  41fde2:	push   eax
  41fde3:	call   0x407260
  41fde8:	mov    ds:0x472ba4,eax
  41fded:	mov    eax,DWORD PTR [ebp+0xc]
  41fdf0:	push   eax
  41fdf1:	movzx  eax,WORD PTR [ebp+0x8]
  41fdf5:	push   eax
  41fdf6:	call   DWORD PTR ds:0x472ba4
  41fdfc:	mov    ebx,eax
  41fdfe:	jmp    0x41fe02
  41fe00:	xor    ebx,ebx
  41fe02:	xor    eax,eax
  41fe04:	pop    edx
  41fe05:	pop    ecx
  41fe06:	pop    ecx
  41fe07:	mov    DWORD PTR fs:[eax],edx
  41fe0a:	push   0x41fe24
  41fe0f:	lea    eax,[ebp-0x8]
  41fe12:	mov    edx,0x2
  41fe17:	call   0x404fac
  41fe1c:	ret    
  41fe1d:	jmp    0x40481c
  41fe22:	jmp    0x41fe0f
  41fe24:	mov    eax,ebx
  41fe26:	pop    ebx
  41fe27:	mov    esp,ebp
  41fe29:	pop    ebp
  41fe2a:	ret    0x8
  41fe2d:	add    BYTE PTR [eax],al
  41fe2f:	add    BYTE PTR [edi+0x53],dl
  41fe32:	xor    bl,BYTE PTR [edi+0x33]
  41fe35:	xor    ch,BYTE PTR [esi]
  41fe37:	inc    esp
  41fe38:	dec    esp
  41fe39:	dec    esp
  41fe3a:	add    BYTE PTR [eax],al
  41fe3c:	(bad)  
  41fe3d:	(bad)  
  41fe3e:	(bad)  
  41fe3f:	dec    DWORD PTR [edx]
  41fe41:	add    BYTE PTR [eax],al
  41fe43:	add    BYTE PTR [edi+0x53],dl
  41fe46:	xor    bl,BYTE PTR [edi+0x33]
  41fe49:	xor    ch,BYTE PTR [esi]
  41fe4b:	inc    esp
  41fe4c:	dec    esp
  41fe4d:	dec    esp
  41fe4e:	add    BYTE PTR [eax],al
  41fe50:	push   edi
  41fe51:	push   ebx
  41fe52:	inc    ecx
  41fe53:	push   ebx
  41fe54:	je     0x41feb7
  41fe56:	jb     0x41fecc
  41fe58:	jne    0x41feca
  41fe5a:	add    BYTE PTR [eax],al
  41fe5c:	push   ebx
  41fe5d:	push   esi
  41fe5e:	mov    esi,edx
  41fe60:	mov    ebx,eax
  41fe62:	push   esi
  41fe63:	push   ebx
  41fe64:	call   DWORD PTR ds:0x472aa0
  41fe6a:	cmp    eax,0x1
  41fe6d:	sbb    eax,eax
  41fe6f:	inc    eax
  41fe70:	pop    esi
  41fe71:	pop    ebx
  41fe72:	ret    
  41fe73:	nop
  41fe74:	xor    edx,edx
  41fe76:	mov    DWORD PTR [eax],edx
  41fe78:	ret    
  41fe79:	lea    eax,[eax+0x0]
  41fe7c:	mov    edx,eax
  41fe7e:	and    edx,0x3
  41fe81:	test   edx,edx
  41fe83:	je     0x41fe92
  41fe85:	and    eax,0xfffffffc
  41fe88:	add    eax,0x4
  41fe8b:	jae    0x41fe92
  41fe8d:	call   0x403f70
  41fe92:	ret    
  41fe93:	nop
  41fe94:	push   ebx
  41fe95:	push   esi
  41fe96:	mov    ebx,eax
  41fe98:	mov    eax,0xc
  41fe9d:	call   0x41fe7c
  41fea2:	mov    esi,eax
  41fea4:	add    esi,ebx
  41fea6:	jae    0x41fead
  41fea8:	call   0x403f70
  41fead:	sub    esi,0x1
  41feb0:	jae    0x41feb7
  41feb2:	call   0x403f70
  41feb7:	mov    eax,0xc
  41febc:	call   0x41fe7c
  41fec1:	sub    eax,0x1
  41fec4:	jae    0x41fecb
  41fec6:	call   0x403f70
  41fecb:	not    eax
  41fecd:	and    esi,eax
  41fecf:	mov    eax,esi
  41fed1:	pop    esi
  41fed2:	pop    ebx
  41fed3:	ret    
  41fed4:	add    eax,0x4
  41fed7:	jae    0x41fede
  41fed9:	call   0x403f70
  41fede:	sub    eax,0x1
  41fee1:	jae    0x41fee8
  41fee3:	call   0x403f70
  41fee8:	and    eax,0xfffffffc
  41feeb:	ret    
  41feec:	xor    edx,edx
  41feee:	cmp    DWORD PTR [eax+0x10],0xc
  41fef2:	jb     0x41fef7
  41fef4:	mov    edx,DWORD PTR [eax+0x14]
  41fef7:	mov    eax,edx
  41fef9:	ret    
  41fefa:	mov    eax,eax
  41fefc:	push   ebx
  41fefd:	push   esi
  41fefe:	push   edi
  41feff:	mov    ebx,edx
  41ff01:	mov    esi,eax
  41ff03:	test   ebx,ebx
  41ff05:	jne    0x41ff10
  41ff07:	mov    eax,esi
  41ff09:	call   0x41feec
  41ff0e:	jmp    0x41ff51
  41ff10:	mov    edi,ebx
  41ff12:	mov    eax,DWORD PTR [edi]
  41ff14:	call   0x41fe94
  41ff19:	add    eax,ebx
  41ff1b:	jae    0x41ff22
  41ff1d:	call   0x403f70
  41ff22:	add    eax,0xc
  41ff25:	jae    0x41ff2c
  41ff27:	call   0x403f70
  41ff2c:	mov    edx,DWORD PTR [esi+0x14]
  41ff2f:	add    edx,DWORD PTR [esi+0x10]
  41ff32:	jae    0x41ff39
  41ff34:	call   0x403f70
  41ff39:	cmp    eax,edx
  41ff3b:	jbe    0x41ff41
  41ff3d:	xor    eax,eax
  41ff3f:	jmp    0x41ff51
  41ff41:	mov    eax,DWORD PTR [edi]
  41ff43:	call   0x41fe94
  41ff48:	add    eax,ebx
  41ff4a:	jae    0x41ff51
  41ff4c:	call   0x403f70
  41ff51:	pop    edi
  41ff52:	pop    esi
  41ff53:	pop    ebx
  41ff54:	ret    
  41ff55:	lea    eax,[eax+0x0]
  41ff58:	push   ebx
  41ff59:	mov    ebx,eax
  41ff5b:	mov    eax,0xc
  41ff60:	call   0x41fed4
  41ff65:	add    eax,ebx
  41ff67:	jae    0x41ff6e
  41ff69:	call   0x403f70
  41ff6e:	pop    ebx
  41ff6f:	ret    
  41ff70:	push   ebx
  41ff71:	mov    ebx,eax
  41ff73:	mov    eax,0xc
  41ff78:	call   0x41fed4
  41ff7d:	add    eax,ebx
  41ff7f:	jae    0x41ff86
  41ff81:	call   0x403f70
  41ff86:	pop    ebx
  41ff87:	ret    
  41ff88:	push   ebp
  41ff89:	mov    ebp,esp
  41ff8b:	xor    eax,eax
  41ff8d:	push   ebp
  41ff8e:	push   0x41ffad
  41ff93:	push   DWORD PTR fs:[eax]
  41ff96:	mov    DWORD PTR fs:[eax],esp
  41ff99:	inc    DWORD PTR ds:0x472ba0
  41ff9f:	xor    eax,eax
  41ffa1:	pop    edx
  41ffa2:	pop    ecx
  41ffa3:	pop    ecx
  41ffa4:	mov    DWORD PTR fs:[eax],edx
  41ffa7:	push   0x41ffb4
  41ffac:	ret    
  41ffad:	jmp    0x40481c
  41ffb2:	jmp    0x41ffac
  41ffb4:	pop    ebp
  41ffb5:	ret    
  41ffb6:	mov    eax,eax
  41ffb8:	push   ebx
  41ffb9:	mov    edx,eax
  41ffbb:	cmp    edx,0xb
  41ffbe:	ja     0x420047
  41ffc4:	jmp    DWORD PTR [edx*4+0x41ffcb]
  41ffcb:	inc    edi
  41ffcc:	add    BYTE PTR [edx+0x0],al
  41ffcf:	sti    
  41ffd0:	inc    DWORD PTR [ecx+0x0]
  41ffd3:	(bad)  
  41ffd4:	inc    DWORD PTR [ecx+0x0]
  41ffd7:	push   es
  41ffd8:	add    BYTE PTR [edx+0x0],al
  41ffdb:	or     eax,0x14004200
  41ffe0:	add    BYTE PTR [edx+0x0],al
  41ffe3:	sbb    eax,DWORD PTR [eax]
  41ffe5:	inc    edx
  41ffe6:	add    BYTE PTR [edx],ah
  41ffe8:	add    BYTE PTR [edx+0x0],al
  41ffeb:	sub    DWORD PTR [eax],eax
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],dh
  41fff0:	add    BYTE PTR [edx+0x0],al
  41fff3:	aaa    
  41fff4:	add    BYTE PTR [edx+0x0],al
  41fff7:	add    BYTE PTR ds:[edx+0x0],al
  41fffb:	xor    ebx,ebx
  41fffd:	jmp    0x420049
  41ffff:	mov    ebx,0x2afa
  420004:	jmp    0x420049
  420006:	mov    ebx,0x2726
  42000b:	jmp    0x420049
  42000d:	mov    ebx,0x2afb
  420012:	jmp    0x420049
  420014:	mov    ebx,0x273f
  420019:	jmp    0x420049
  42001b:	mov    ebx,0x8
  420020:	jmp    0x420049
  420022:	mov    ebx,0x2afc
  420027:	jmp    0x420049
  420029:	mov    ebx,0x2af9
  42002e:	jmp    0x420049
  420030:	mov    ebx,0x277d
  420035:	jmp    0x420049
  420037:	mov    ebx,0x273c
  42003c:	jmp    0x420049
  42003e:	xor    ebx,ebx
  420040:	call   0x40ddbc
  420045:	jmp    0x420049
  420047:	mov    ebx,eax
  420049:	mov    eax,ebx
  42004b:	pop    ebx
  42004c:	ret    
  42004d:	lea    eax,[eax+0x0]
  420050:	push   0x0
  420052:	push   0x461b30
  420057:	call   0x4071d8
  42005c:	test   eax,eax
  42005e:	jns    0x420065
  420060:	call   0x403f68
  420065:	test   eax,eax
  420067:	je     0x42008b
  420069:	mov    BYTE PTR ds:0x461b2c,0x0
  420070:	push   eax
  420071:	call   0x4071c8
  420076:	xor    eax,eax
  420078:	mov    ds:0x461b20,eax
  42007d:	xor    eax,eax
  42007f:	mov    ds:0x461b24,eax
  420084:	xor    eax,eax
  420086:	mov    ds:0x461b28,eax
  42008b:	ret    
  42008c:	mov    BYTE PTR ds:0x461b2c,0x0
  420093:	push   0x42011c
  420098:	call   0x4072b0
  42009d:	mov    ds:0x461b30,eax
  4200a2:	cmp    DWORD PTR ds:0x461b30,0x0
  4200a9:	je     0x42011a
  4200ab:	push   0x420128
  4200b0:	mov    eax,ds:0x461b30
  4200b5:	push   eax
  4200b6:	call   0x407260
  4200bb:	mov    ds:0x461b20,eax
  4200c0:	cmp    DWORD PTR ds:0x461b20,0x0
  4200c7:	je     0x42010c
  4200c9:	push   0x420134
  4200ce:	mov    eax,ds:0x461b30
  4200d3:	push   eax
  4200d4:	call   0x407260
  4200d9:	mov    ds:0x461b24,eax
  4200de:	cmp    DWORD PTR ds:0x461b24,0x0
  4200e5:	je     0x42010c
  4200e7:	push   0x420140
  4200ec:	mov    eax,ds:0x461b30
  4200f1:	push   eax
  4200f2:	call   0x407260
  4200f7:	mov    ds:0x461b28,eax
  4200fc:	cmp    DWORD PTR ds:0x461b28,0x0
  420103:	je     0x42010c
  420105:	mov    BYTE PTR ds:0x461b2c,0x1
  42010c:	cmp    BYTE PTR ds:0x461b2c,0x0
  420113:	jne    0x42011a
  420115:	call   0x420050
  42011a:	ret    
  42011b:	add    BYTE PTR [edi+0x73],dl
  42011e:	push   0x2e367069
  420123:	fs ins BYTE PTR es:[edi],dx
  420125:	ins    BYTE PTR es:[edi],dx
  420126:	add    BYTE PTR [eax],al
  420128:	addr16 gs je 0x42018d
  42012c:	fs fs jb 0x420199
  420130:	outs   dx,BYTE PTR ds:[esi]
  420131:	outs   dx,WORD PTR ds:[esi]
  420133:	add    BYTE PTR [edi+0x65],ah
  420136:	je     0x4201a6
  420138:	popa   
  420139:	ins    DWORD PTR es:[edi],dx
  42013a:	imul   ebp,DWORD PTR gs:[esi+0x66],0x7266006f
  420142:	gs gs popa 
  420145:	fs fs jb 0x4201b2
  420149:	outs   dx,BYTE PTR ds:[esi]
  42014a:	outs   dx,WORD PTR ds:[esi]
  42014c:	add    BYTE PTR [eax],al
  42014e:	add    BYTE PTR [eax],al
  420150:	push   ebp
  420151:	mov    ebp,esp
  420153:	xor    eax,eax
  420155:	push   ebp
  420156:	push   0x42017c
  42015b:	push   DWORD PTR fs:[eax]
  42015e:	mov    DWORD PTR fs:[eax],esp
  420161:	inc    DWORD PTR ds:0x472ba8
  420167:	jne    0x42016e
  420169:	call   0x420050
  42016e:	xor    eax,eax
  420170:	pop    edx
  420171:	pop    ecx
  420172:	pop    ecx
  420173:	mov    DWORD PTR fs:[eax],edx
  420176:	push   0x420183
  42017b:	ret    
  42017c:	jmp    0x40481c
  420181:	jmp    0x42017b
  420183:	pop    ebp
  420184:	ret    
  420185:	lea    eax,[eax+0x0]
  420188:	aam    0x1
  42018a:	inc    edx
	...
  4201a7:	add    ah,bl
  4201a9:	add    DWORD PTR [edx+0x0],eax
  4201ac:	adc    BYTE PTR [eax],al
  4201ae:	add    BYTE PTR [eax],al
  4201b0:	shl    BYTE PTR [ebx],0x42
  4201b3:	add    al,dl
  4201b5:	inc    edx
  4201b6:	inc    eax
  4201b7:	add    ah,bl
  4201b9:	inc    edx
  4201ba:	inc    eax
  4201bb:	add    al,ah
  4201bd:	inc    edx
  4201be:	inc    eax
  4201bf:	add    ah,ah
  4201c1:	inc    edx
  4201c2:	inc    eax
  4201c3:	add    al,bl
  4201c5:	inc    edx
  4201c6:	inc    eax
  4201c7:	add    BYTE PTR [eax],bh
  4201c9:	inc    eax
  4201ca:	inc    eax
  4201cb:	add    BYTE PTR [eax+eax*2+0x40],dl
  4201cf:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4201d5:	mov    ebp,0x40800041
  4201da:	inc    edx
  4201db:	add    BYTE PTR ds:0x4e644945,cl
  4201e1:	outs   dx,DWORD PTR ds:[esi]
  4201e2:	je     0x420225
  4201e4:	push   ebx
  4201e5:	outs   dx,DWORD PTR ds:[esi]
  4201e6:	arpl   WORD PTR [ebx+0x65],bp
  4201e9:	je     0x420176
  4201eb:	sar    BYTE PTR [eax],0x2
  4201ee:	inc    edx
	...
  42020b:	add    BYTE PTR [eax],dl
  42020d:	add    eax,DWORD PTR [edx+0x0]
  420210:	adc    BYTE PTR [eax],al
  420212:	add    BYTE PTR [eax],al
  420214:	lods   al,BYTE PTR ds:[esi]
  420215:	xor    al,0x42
  420217:	add    al,dl
  420219:	inc    edx
  42021a:	inc    eax
  42021b:	add    ah,bl
  42021d:	inc    edx
  42021e:	inc    eax
  42021f:	add    al,ah
  420221:	inc    edx
  420222:	inc    eax
  420223:	add    ah,ah
  420225:	inc    edx
  420226:	inc    eax
  420227:	add    al,bl
  420229:	inc    edx
  42022a:	inc    eax
  42022b:	add    BYTE PTR [eax],bh
  42022d:	inc    eax
  42022e:	inc    eax
  42022f:	add    BYTE PTR [eax+eax*2+0x40],dl
  420233:	add    BYTE PTR [eax],al
  420235:	push   cs
  420236:	inc    edx
  420237:	add    BYTE PTR [eax],bh
  420239:	xor    eax,DWORD PTR [eax+0x0]
  42023c:	cmp    BYTE PTR [ebx],dh
  42023e:	inc    eax
  42023f:	add    BYTE PTR [eax],bh
  420241:	xor    eax,DWORD PTR [eax+0x0]
  420244:	cmp    BYTE PTR [ebx],dh
  420246:	inc    eax
  420247:	add    BYTE PTR [eax],bh
  420249:	xor    eax,DWORD PTR [eax+0x0]
  42024c:	cmp    BYTE PTR [ebx],dh
  42024e:	inc    eax
  42024f:	add    BYTE PTR [eax],bh
  420251:	xor    eax,DWORD PTR [eax+0x0]
  420254:	cmp    BYTE PTR [ebx],dh
  420256:	inc    eax
  420257:	add    ah,al
  420259:	or     eax,0x33380042
  42025e:	inc    eax
  42025f:	add    BYTE PTR [eax],bh
  420261:	xor    eax,DWORD PTR [eax+0x0]
  420264:	cmp    BYTE PTR [ebx],dh
  420266:	inc    eax
  420267:	add    BYTE PTR [eax],bh
  420269:	xor    eax,DWORD PTR [eax+0x0]
  42026c:	cmp    BYTE PTR [ebx],dh
  42026e:	inc    eax
  42026f:	add    BYTE PTR [eax],bh
  420271:	xor    eax,DWORD PTR [eax+0x0]
  420274:	cmp    BYTE PTR [ebx],dh
  420276:	inc    eax
  420277:	add    BYTE PTR [eax],bh
  420279:	xor    eax,DWORD PTR [eax+0x0]
  42027c:	ins    BYTE PTR es:[edi],dx
  42027d:	inc    edx
  42027e:	inc    edx
  42027f:	add    BYTE PTR [eax],bh
  420281:	xor    eax,DWORD PTR [eax+0x0]
  420284:	mov    BYTE PTR [eax],cl
  420286:	inc    edx
  420287:	add    BYTE PTR [eax],bh
  420289:	xor    eax,DWORD PTR [eax+0x0]
  42028c:	cmp    BYTE PTR [ebx],dh
  42028e:	inc    eax
  42028f:	add    BYTE PTR [eax],bh
  420291:	xor    eax,DWORD PTR [eax+0x0]
  420294:	lods   al,BYTE PTR ds:[esi]
  420295:	inc    edx
  420296:	inc    edx
  420297:	add    BYTE PTR [eax],bh
  420299:	xor    eax,DWORD PTR [eax+0x0]
  42029c:	cmp    BYTE PTR [ebx],dh
  42029e:	inc    eax
  42029f:	add    BYTE PTR [esi+ecx*1],dh
  4202a2:	inc    edx
  4202a3:	add    BYTE PTR [eax+0xe],bh
  4202a6:	inc    edx
  4202a7:	add    ah,cl
  4202a9:	push   cs
  4202aa:	inc    edx
  4202ab:	add    BYTE PTR [edi+ecx*1],ah
  4202ae:	inc    edx
  4202af:	add    BYTE PTR [eax],bh
  4202b1:	xor    eax,DWORD PTR [eax+0x0]
  4202b4:	cmp    BYTE PTR [ebx],dh
  4202b6:	inc    eax
  4202b7:	add    ah,al
  4202b9:	cmovb  eax,DWORD PTR [eax]
  4202bc:	adc    BYTE PTR [eax],dl
  4202be:	inc    edx
  4202bf:	add    BYTE PTR [edi+ecx*1+0x42],ah
  4202c3:	add    BYTE PTR [edi+ecx*1+0x441c0042],dl
  4202ca:	inc    edx
  4202cb:	add    BYTE PTR [eax],bh
  4202cd:	xor    eax,DWORD PTR [eax+0x0]
  4202d0:	cmp    BYTE PTR [ebx],dh
  4202d2:	inc    eax
  4202d3:	add    BYTE PTR [eax],bh
  4202d5:	xor    eax,DWORD PTR [eax+0x0]
  4202d8:	cmp    BYTE PTR [ebx],dh
  4202da:	inc    eax
  4202db:	add    BYTE PTR [eax],bh
  4202dd:	xor    eax,DWORD PTR [eax+0x0]
  4202e0:	cmp    BYTE PTR [ebx],dh
  4202e2:	inc    eax
  4202e3:	add    BYTE PTR [eax],bh
  4202e5:	xor    eax,DWORD PTR [eax+0x0]
  4202e8:	cmp    BYTE PTR [ebx],dh
  4202ea:	inc    eax
  4202eb:	add    BYTE PTR [eax],bh
  4202ed:	xor    eax,DWORD PTR [eax+0x0]
  4202f0:	cmp    BYTE PTR [ebx],dh
  4202f2:	inc    eax
  4202f3:	add    BYTE PTR [eax],bh
  4202f5:	xor    eax,DWORD PTR [eax+0x0]
  4202f8:	cmp    BYTE PTR [ebx],dh
  4202fa:	inc    eax
  4202fb:	add    BYTE PTR [ecx+ecx*1+0x42],ah
  4202ff:	add    BYTE PTR [eax],bh
  420301:	xor    eax,DWORD PTR [eax+0x0]
  420304:	cmp    BYTE PTR [ebx],dh
  420306:	inc    eax
  420307:	add    BYTE PTR [eax],bh
  420309:	xor    eax,DWORD PTR [eax+0x0]
  42030c:	cmp    BYTE PTR [ebx],dh
  42030e:	inc    eax
  42030f:	add    BYTE PTR [edi],cl
  420311:	push   esp
  420312:	dec    ecx
  420313:	fs push ebx
  420315:	je     0x420378
  420317:	arpl   WORD PTR [ebx+0x42],bp
  42031a:	push   ebx
  42031b:	inc    esp
  42031c:	inc    edx
  42031d:	popa   
  42031e:	jae    0x420385
  420320:	ins    BYTE PTR es:[edi],dx
  420321:	add    eax,DWORD PTR [edx+0x0]
	...
  420340:	jo     0x420345
  420342:	inc    edx
  420343:	add    BYTE PTR [eax+eax*1],cl
  420346:	add    BYTE PTR [eax],al
  420348:	dec    esp
  420349:	mov    ecx,0x42d00041
  42034e:	inc    eax
  42034f:	add    ah,bl
  420351:	inc    edx
  420352:	inc    eax
  420353:	add    al,ah
  420355:	inc    edx
  420356:	inc    eax
  420357:	add    ah,ah
  420359:	inc    edx
  42035a:	inc    eax
  42035b:	add    al,bl
  42035d:	inc    edx
  42035e:	inc    eax
  42035f:	add    BYTE PTR [eax],bh
  420361:	inc    eax
  420362:	inc    eax
  420363:	add    BYTE PTR [eax+eax*2+0x40],dl
  420367:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42036d:	mov    ebp,0x450d0041
  420372:	dec    ecx
  420373:	fs push ebx
  420375:	je     0x4203d8
  420377:	arpl   WORD PTR [ebx+0x45],bp
  42037a:	jb     0x4203ee
  42037c:	outs   dx,DWORD PTR ds:[esi]
  42037d:	jb     0x42030a
  42037f:	ror    ah,0x3
  420382:	inc    edx
	...
  42039f:	add    al,dl
  4203a1:	add    eax,DWORD PTR [edx+0x0]
  4203a4:	or     al,0x0
  4203a6:	add    BYTE PTR [eax],al
  4203a8:	dec    esp
  4203a9:	mov    ecx,0x42d00041
  4203ae:	inc    eax
  4203af:	add    ah,bl
  4203b1:	inc    edx
  4203b2:	inc    eax
  4203b3:	add    al,ah
  4203b5:	inc    edx
  4203b6:	inc    eax
  4203b7:	add    ah,ah
  4203b9:	inc    edx
  4203ba:	inc    eax
  4203bb:	add    al,bl
  4203bd:	inc    edx
  4203be:	inc    eax
  4203bf:	add    BYTE PTR [eax],bh
  4203c1:	inc    eax
  4203c2:	inc    eax
  4203c3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4203c7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4203cd:	mov    ebp,0x45150041
  4203d2:	dec    ecx
  4203d3:	fs dec ecx
  4203d5:	outs   dx,BYTE PTR ds:[esi]
  4203d6:	jbe    0x420439
  4203d8:	ins    BYTE PTR es:[edi],dx
  4203d9:	imul   esp,DWORD PTR [ebx+edx*2+0x65],0x63697672
  4203e1:	gs dec esi
  4203e3:	popa   
  4203e4:	ins    DWORD PTR es:[edi],dx
  4203e5:	gs mov eax,eax
  4203e8:	xor    al,0x4
  4203ea:	inc    edx
	...
  420407:	add    BYTE PTR [eax],bh
  420409:	add    al,0x42
  42040b:	add    BYTE PTR [eax+eax*1],cl
  42040e:	add    BYTE PTR [eax],al
  420410:	and    BYTE PTR [ebx],al
  420412:	inc    edx
  420413:	add    al,dl
  420415:	inc    edx
  420416:	inc    eax
  420417:	add    ah,bl
  420419:	inc    edx
  42041a:	inc    eax
  42041b:	add    al,ah
  42041d:	inc    edx
  42041e:	inc    eax
  42041f:	add    ah,ah
  420421:	inc    edx
  420422:	inc    eax
  420423:	add    al,bl
  420425:	inc    edx
  420426:	inc    eax
  420427:	add    BYTE PTR [eax],bh
  420429:	inc    eax
  42042a:	inc    eax
  42042b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42042f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  420435:	mov    ebp,0x451c0041
  42043a:	dec    ecx
  42043b:	fs push ebx
  42043d:	je     0x4204a0
  42043f:	arpl   WORD PTR [ebx+0x49],bp
  420442:	outs   dx,BYTE PTR ds:[esi]
  420443:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x617a696c
  42044b:	je     0x4204b6
  42044d:	outs   dx,DWORD PTR ds:[esi]
  42044e:	outs   dx,BYTE PTR ds:[esi]
  42044f:	inc    esi
  420450:	popa   
  420451:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0xa400408d
  420459:	add    al,0x42
	...
  420477:	add    BYTE PTR [eax+0xc004204],ch
  42047d:	add    BYTE PTR [eax],al
  42047f:	add    BYTE PTR [eax],ah
  420481:	add    eax,DWORD PTR [edx+0x0]
  420484:	rol    BYTE PTR [edx+0x40],1
  420487:	add    ah,bl
  420489:	inc    edx
  42048a:	inc    eax
  42048b:	add    al,ah
  42048d:	inc    edx
  42048e:	inc    eax
  42048f:	add    ah,ah
  420491:	inc    edx
  420492:	inc    eax
  420493:	add    al,bl
  420495:	inc    edx
  420496:	inc    eax
  420497:	add    BYTE PTR [eax],bh
  420499:	inc    eax
  42049a:	inc    eax
  42049b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42049f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4204a5:	mov    ebp,0x45170041
  4204aa:	dec    ecx
  4204ab:	fs push ebx
  4204ad:	je     0x420510
  4204af:	arpl   WORD PTR [ebx+0x53],bp
  4204b2:	gs je  0x420508
  4204b5:	imul   edi,DWORD PTR [edx+0x65],0x65637845
  4204bc:	gs fs gs fs or al,0x5
  4204c2:	inc    edx
	...
  4204df:	add    BYTE PTR [eax],dl
  4204e1:	add    eax,0xc0042
  4204e6:	add    BYTE PTR [eax],al
  4204e8:	and    BYTE PTR [ebx],al
  4204ea:	inc    edx
  4204eb:	add    al,dl
  4204ed:	inc    edx
  4204ee:	inc    eax
  4204ef:	add    ah,bl
  4204f1:	inc    edx
  4204f2:	inc    eax
  4204f3:	add    al,ah
  4204f5:	inc    edx
  4204f6:	inc    eax
  4204f7:	add    ah,ah
  4204f9:	inc    edx
  4204fa:	inc    eax
  4204fb:	add    al,bl
  4204fd:	inc    edx
  4204fe:	inc    eax
  4204ff:	add    BYTE PTR [eax],bh
  420501:	inc    eax
  420502:	inc    eax
  420503:	add    BYTE PTR [eax+eax*2+0x40],dl
  420507:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42050d:	mov    ebp,0x45170041
  420512:	dec    ecx
  420513:	fs dec ecx
  420515:	push   eax
  420516:	push   esi
  420517:	gs jb  0x42058d
  42051a:	imul   ebp,DWORD PTR [edi+0x6e],0x75736e55
  420521:	jo     0x420593
  420523:	outs   dx,DWORD PTR ds:[esi]
  420524:	jb     0x42059a
  420526:	gs fs push ebp
  420529:	mov    ebp,esp
  42052b:	push   0x0
  42052d:	push   0x0
  42052f:	push   0x0
  420531:	push   0x0
  420533:	push   0x0
  420535:	push   0x0
  420537:	push   0x0
  420539:	push   ebx
  42053a:	push   esi
  42053b:	push   edi
  42053c:	mov    DWORD PTR [ebp-0x8],edx
  42053f:	mov    DWORD PTR [ebp-0x4],eax
  420542:	mov    esi,DWORD PTR [ebp+0x8]
  420545:	xor    eax,eax
  420547:	push   ebp
  420548:	push   0x420662
  42054d:	push   DWORD PTR fs:[eax]
  420550:	mov    DWORD PTR fs:[eax],esp
  420553:	sub    cl,0x1
  420556:	jb     0x42055f
  420558:	je     0x4205d7
  42055a:	jmp    0x42063f
  42055f:	mov    edx,DWORD PTR [ebp-0x8]
  420562:	movzx  edx,BYTE PTR [edx]
  420565:	lea    ecx,[ebp-0xc]
  420568:	mov    eax,ds:0x41be90
  42056d:	call   0x41b19c
  420572:	push   DWORD PTR [ebp-0xc]
  420575:	push   0x42067c
  42057a:	mov    edx,DWORD PTR [ebp-0x8]
  42057d:	movzx  edx,BYTE PTR [edx+0x1]
  420581:	lea    ecx,[ebp-0x10]
  420584:	mov    eax,ds:0x41be90
  420589:	call   0x41b19c
  42058e:	push   DWORD PTR [ebp-0x10]
  420591:	push   0x42067c
  420596:	mov    edx,DWORD PTR [ebp-0x8]
  420599:	movzx  edx,BYTE PTR [edx+0x2]
  42059d:	lea    ecx,[ebp-0x14]
  4205a0:	mov    eax,ds:0x41be90
  4205a5:	call   0x41b19c
  4205aa:	push   DWORD PTR [ebp-0x14]
  4205ad:	push   0x42067c
  4205b2:	mov    edx,DWORD PTR [ebp-0x8]
  4205b5:	movzx  edx,BYTE PTR [edx+0x3]
  4205b9:	lea    ecx,[ebp-0x18]
  4205bc:	mov    eax,ds:0x41be90
  4205c1:	call   0x41b19c
  4205c6:	push   DWORD PTR [ebp-0x18]
  4205c9:	mov    eax,esi
  4205cb:	mov    edx,0x7
  4205d0:	call   0x40531c
  4205d5:	jmp    0x420647
  4205d7:	mov    eax,esi
  4205d9:	call   0x404f88
  4205de:	mov    edi,0x8
  4205e3:	mov    ebx,DWORD PTR [ebp-0x8]
  4205e6:	push   DWORD PTR [esi]
  4205e8:	lea    eax,[ebp-0x1c]
  4205eb:	push   eax
  4205ec:	movzx  edx,WORD PTR [ebx]
  4205ef:	mov    eax,DWORD PTR [ebp-0x4]
  4205f2:	mov    ecx,DWORD PTR [eax]
  4205f4:	call   DWORD PTR [ecx+0x50]
  4205f7:	movzx  edx,ax
  4205fa:	mov    ecx,0x1
  4205ff:	mov    eax,ds:0x41be90
  420604:	call   0x41b168
  420609:	push   DWORD PTR [ebp-0x1c]
  42060c:	push   0x420688
  420611:	mov    eax,esi
  420613:	mov    edx,0x3
  420618:	call   0x40531c
  42061d:	add    ebx,0x2
  420620:	dec    edi
  420621:	jne    0x4205e6
  420623:	mov    eax,DWORD PTR [esi]
  420625:	call   0x405248
  42062a:	mov    edx,eax
  42062c:	sub    edx,0x1
  42062f:	jno    0x420636
  420631:	call   0x403f70
  420636:	mov    eax,esi
  420638:	call   0x4056a8
  42063d:	jmp    0x420647
  42063f:	mov    eax,DWORD PTR [ebp-0x4]
  420642:	call   0x420d70
  420647:	xor    eax,eax
  420649:	pop    edx
  42064a:	pop    ecx
  42064b:	pop    ecx
  42064c:	mov    DWORD PTR fs:[eax],edx
  42064f:	push   0x420669
  420654:	lea    eax,[ebp-0x1c]
  420657:	mov    edx,0x5
  42065c:	call   0x404fac
  420661:	ret    
  420662:	jmp    0x40481c
  420667:	jmp    0x420654
  420669:	pop    edi
  42066a:	pop    esi
  42066b:	pop    ebx
  42066c:	mov    esp,ebp
  42066e:	pop    ebp
  42066f:	ret    0x4
  420672:	add    BYTE PTR [eax],al
  420674:	(bad)  
  420675:	(bad)  
  420676:	(bad)  
  420677:	inc    DWORD PTR [ecx]
  420679:	add    BYTE PTR [eax],al
  42067b:	add    BYTE PTR [esi],ch
  42067d:	add    BYTE PTR [eax],al
  42067f:	add    bh,bh
  420681:	(bad)  
  420682:	(bad)  
  420683:	inc    DWORD PTR [ecx]
  420685:	add    BYTE PTR [eax],al
  420687:	add    BYTE PTR [edx],bh
  420689:	add    BYTE PTR [eax],al
  42068b:	add    BYTE PTR [ebp-0x75],dl
  42068e:	in     al,dx
  42068f:	add    esp,0xffffffcc
  420692:	push   ebx
  420693:	push   esi
  420694:	push   edi
  420695:	xor    ebx,ebx
  420697:	mov    DWORD PTR [ebp-0x14],ebx
  42069a:	mov    DWORD PTR [ebp-0x10],ebx
  42069d:	mov    DWORD PTR [ebp-0xc],ebx
  4206a0:	mov    DWORD PTR [ebp-0x8],ebx
  4206a3:	mov    ebx,ecx
  4206a5:	mov    DWORD PTR [ebp-0x4],edx
  4206a8:	mov    esi,eax
  4206aa:	mov    eax,DWORD PTR [ebp-0x4]
  4206ad:	call   0x405408
  4206b2:	xor    eax,eax
  4206b4:	push   ebp
  4206b5:	push   0x4207dd
  4206ba:	push   DWORD PTR fs:[eax]
  4206bd:	mov    DWORD PTR fs:[eax],esp
  4206c0:	movzx  eax,BYTE PTR [ebp+0x8]
  4206c4:	sub    al,0x1
  4206c6:	jb     0x4206d3
  4206c8:	je     0x420798
  4206ce:	jmp    0x4207bb
  4206d3:	push   0x1
  4206d5:	lea    eax,[ebp-0x8]
  4206d8:	push   eax
  4206d9:	lea    eax,[ebp-0x4]
  4206dc:	mov    cl,0x1
  4206de:	mov    edx,0x4207f8
  4206e3:	call   0x41c7c4
  4206e8:	mov    edx,DWORD PTR [ebp-0x8]
  4206eb:	mov    eax,ds:0x41be90
  4206f0:	call   0x41b200
  4206f5:	cmp    eax,0xff
  4206fa:	jbe    0x420701
  4206fc:	call   0x403f68
  420701:	mov    BYTE PTR [ebx],al
  420703:	push   0x1
  420705:	lea    eax,[ebp-0xc]
  420708:	push   eax
  420709:	lea    eax,[ebp-0x4]
  42070c:	mov    cl,0x1
  42070e:	mov    edx,0x4207f8
  420713:	call   0x41c7c4
  420718:	mov    edx,DWORD PTR [ebp-0xc]
  42071b:	mov    eax,ds:0x41be90
  420720:	call   0x41b200
  420725:	cmp    eax,0xff
  42072a:	jbe    0x420731
  42072c:	call   0x403f68
  420731:	mov    BYTE PTR [ebx+0x1],al
  420734:	push   0x1
  420736:	lea    eax,[ebp-0x10]
  420739:	push   eax
  42073a:	lea    eax,[ebp-0x4]
  42073d:	mov    cl,0x1
  42073f:	mov    edx,0x4207f8
  420744:	call   0x41c7c4
  420749:	mov    edx,DWORD PTR [ebp-0x10]
  42074c:	mov    eax,ds:0x41be90
  420751:	call   0x41b200
  420756:	cmp    eax,0xff
  42075b:	jbe    0x420762
  42075d:	call   0x403f68
  420762:	mov    BYTE PTR [ebx+0x2],al
  420765:	push   0x1
  420767:	lea    eax,[ebp-0x14]
  42076a:	push   eax
  42076b:	lea    eax,[ebp-0x4]
  42076e:	mov    cl,0x1
  420770:	mov    edx,0x4207f8
  420775:	call   0x41c7c4
  42077a:	mov    edx,DWORD PTR [ebp-0x14]
  42077d:	mov    eax,ds:0x41be90
  420782:	call   0x41b200
  420787:	cmp    eax,0xff
  42078c:	jbe    0x420793
  42078e:	call   0x403f68
  420793:	mov    BYTE PTR [ebx+0x3],al
  420796:	jmp    0x4207c2
  420798:	lea    edx,[ebp-0x34]
  42079b:	mov    eax,DWORD PTR [ebp-0x4]
  42079e:	call   0x41d0b4
  4207a3:	lea    edx,[ebp-0x34]
  4207a6:	lea    ecx,[ebp-0x24]
  4207a9:	mov    eax,esi
  4207ab:	mov    esi,DWORD PTR [eax]
  4207ad:	call   DWORD PTR [esi+0x44]
  4207b0:	lea    esi,[ebp-0x24]
  4207b3:	mov    edi,ebx
  4207b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b9:	jmp    0x4207c2
  4207bb:	mov    eax,esi
  4207bd:	call   0x420d70
  4207c2:	xor    eax,eax
  4207c4:	pop    edx
  4207c5:	pop    ecx
  4207c6:	pop    ecx
  4207c7:	mov    DWORD PTR fs:[eax],edx
  4207ca:	push   0x4207e4
  4207cf:	lea    eax,[ebp-0x14]
  4207d2:	mov    edx,0x5
  4207d7:	call   0x404fac
  4207dc:	ret    
  4207dd:	jmp    0x40481c
  4207e2:	jmp    0x4207cf
  4207e4:	pop    edi
  4207e5:	pop    esi
  4207e6:	pop    ebx
  4207e7:	mov    esp,ebp
  4207e9:	pop    ebp
  4207ea:	ret    0x4
  4207ed:	add    BYTE PTR [eax],al
  4207ef:	add    bh,bh
  4207f1:	(bad)  
  4207f2:	(bad)  
  4207f3:	inc    DWORD PTR [ecx]
  4207f5:	add    BYTE PTR [eax],al
  4207f7:	add    BYTE PTR [esi],ch
  4207f9:	add    BYTE PTR [eax],al
  4207fb:	add    BYTE PTR [ebx-0x75],dl
  4207fe:	fmul   DWORD PTR [ebx-0xef743d]
  420804:	xchg   edx,eax
  420805:	enter  0x0,0x0
  420809:	mov    edx,eax
  42080b:	mov    eax,ebx
  42080d:	call   0x4208c8
  420812:	pop    ebx
  420813:	ret    
  420814:	push   ebx
  420815:	mov    ebx,edx
  420817:	cmp    ebx,0xffffffff
  42081a:	jne    0x420821
  42081c:	call   0x4207fc
  420821:	mov    eax,ebx
  420823:	pop    ebx
  420824:	ret    
  420825:	lea    eax,[eax+0x0]
  420828:	push   ebp
  420829:	mov    ebp,esp
  42082b:	add    esp,0xfffffff4
  42082e:	push   ebx
  42082f:	push   esi
  420830:	mov    DWORD PTR [ebp-0x8],ecx
  420833:	mov    DWORD PTR [ebp-0x4],eax
  420836:	mov    esi,DWORD PTR [ebp+0x8]
  420839:	xor    eax,eax
  42083b:	mov    DWORD PTR [ebp-0xc],eax
  42083e:	inc    edx
  42083f:	jne    0x42087d
  420841:	mov    eax,DWORD PTR [ebp-0x4]
  420844:	mov    edx,DWORD PTR [eax]
  420846:	call   DWORD PTR [edx+0xc8]
  42084c:	mov    edx,eax
  42084e:	mov    eax,esi
  420850:	test   eax,eax
  420852:	jl     0x420875
  420854:	inc    eax
  420855:	xor    ecx,ecx
  420857:	test   ecx,ecx
  420859:	jl     0x42085f
  42085b:	cmp    ecx,esi
  42085d:	jle    0x420864
  42085f:	call   0x403f68
  420864:	mov    ebx,DWORD PTR [ebp-0x8]
  420867:	cmp    edx,DWORD PTR [ebx+ecx*4]
  42086a:	jne    0x420871
  42086c:	mov    DWORD PTR [ebp-0xc],edx
  42086f:	jmp    0x42087d
  420871:	inc    ecx
  420872:	dec    eax
  420873:	jne    0x420857
  420875:	mov    eax,DWORD PTR [ebp-0x4]
  420878:	call   0x4208c8
  42087d:	mov    eax,DWORD PTR [ebp-0xc]
  420880:	pop    esi
  420881:	pop    ebx
  420882:	mov    esp,ebp
  420884:	pop    ebp
  420885:	ret    0x4
  420888:	push   ebp
  420889:	mov    ebp,esp
  42088b:	push   ecx
  42088c:	push   ebx
  42088d:	push   esi
  42088e:	mov    DWORD PTR [ebp-0x4],ecx
  420891:	mov    esi,edx
  420893:	mov    ebx,eax
  420895:	mov    eax,DWORD PTR [ebp-0x4]
  420898:	push   eax
  420899:	movzx  eax,BYTE PTR [ebp+0x8]
  42089d:	push   eax
  42089e:	movzx  eax,BYTE PTR [ebp+0xc]
  4208a2:	mov    edx,DWORD PTR [eax*4+0x461b3c]
  4208a9:	mov    ecx,esi
  4208ab:	mov    eax,ebx
  4208ad:	mov    esi,DWORD PTR [eax]
  4208af:	call   DWORD PTR [esi+0xc0]
  4208b5:	mov    edx,eax
  4208b7:	mov    eax,ebx
  4208b9:	call   0x420814
  4208be:	pop    esi
  4208bf:	pop    ebx
  4208c0:	pop    ecx
  4208c1:	pop    ebp
  4208c2:	ret    0x8
  4208c5:	lea    eax,[eax+0x0]
  4208c8:	push   ebp
  4208c9:	mov    ebp,esp
  4208cb:	push   0x0
  4208cd:	push   0x0
  4208cf:	push   ebx
  4208d0:	push   esi
  4208d1:	push   edi
  4208d2:	mov    ebx,edx
  4208d4:	mov    esi,eax
  4208d6:	xor    eax,eax
  4208d8:	push   ebp
  4208d9:	push   0x420953
  4208de:	push   DWORD PTR fs:[eax]
  4208e1:	mov    DWORD PTR fs:[eax],esp
  4208e4:	cmp    ebx,0x2736
  4208ea:	jne    0x420912
  4208ec:	lea    ecx,[ebp-0x4]
  4208ef:	mov    edx,ebx
  4208f1:	mov    eax,esi
  4208f3:	mov    edi,DWORD PTR [eax]
  4208f5:	call   DWORD PTR [edi+0xc4]
  4208fb:	mov    eax,DWORD PTR [ebp-0x4]
  4208fe:	push   eax
  4208ff:	mov    ecx,ebx
  420901:	mov    dl,0x1
  420903:	mov    eax,ds:0x420188
  420908:	call   0x424080
  42090d:	call   0x4048fc
  420912:	lea    ecx,[ebp-0x8]
  420915:	mov    edx,ebx
  420917:	mov    eax,esi
  420919:	mov    esi,DWORD PTR [eax]
  42091b:	call   DWORD PTR [esi+0xc4]
  420921:	mov    eax,DWORD PTR [ebp-0x8]
  420924:	push   eax
  420925:	mov    ecx,ebx
  420927:	mov    dl,0x1
  420929:	mov    eax,ds:0x4233c0
  42092e:	call   0x424080
  420933:	call   0x4048fc
  420938:	xor    eax,eax
  42093a:	pop    edx
  42093b:	pop    ecx
  42093c:	pop    ecx
  42093d:	mov    DWORD PTR fs:[eax],edx
  420940:	push   0x42095a
  420945:	lea    eax,[ebp-0x8]
  420948:	mov    edx,0x2
  42094d:	call   0x404fac
  420952:	ret    
  420953:	jmp    0x40481c
  420958:	jmp    0x420945
  42095a:	pop    edi
  42095b:	pop    esi
  42095c:	pop    ebx
  42095d:	pop    ecx
  42095e:	pop    ecx
  42095f:	pop    ebp
  420960:	ret    
  420961:	lea    eax,[eax+0x0]
  420964:	push   ebp
  420965:	mov    ebp,esp
  420967:	add    esp,0xffffffe8
  42096a:	push   ebx
  42096b:	push   esi
  42096c:	xor    ebx,ebx
  42096e:	mov    DWORD PTR [ebp-0x4],ebx
  420971:	mov    DWORD PTR [ebp-0x8],ebx
  420974:	mov    ebx,ecx
  420976:	mov    esi,edx
  420978:	xor    eax,eax
  42097a:	push   ebp
  42097b:	push   0x420d60
  420980:	push   DWORD PTR fs:[eax]
  420983:	mov    DWORD PTR fs:[eax],esp
  420986:	mov    eax,ebx
  420988:	call   0x404f88
  42098d:	mov    eax,esi
  42098f:	add    eax,0xffffd8ec
  420994:	cmp    eax,0x3e
  420997:	ja     0x420d06
  42099d:	jmp    DWORD PTR [eax*4+0x4209a4]
  4209a4:	mov    al,ds:0x600420a
  4209a9:	or     eax,0xd060042
  4209ae:	inc    edx
  4209af:	add    BYTE PTR [esi],al
  4209b1:	or     eax,0xd060042
  4209b6:	inc    edx
  4209b7:	add    BYTE PTR [ecx+0x600420a],dh
  4209bd:	or     eax,0xd060042
  4209c2:	inc    edx
  4209c3:	add    BYTE PTR [esi],al
  4209c5:	or     eax,0xac20042
  4209ca:	inc    edx
  4209cb:	add    bl,dl
  4209cd:	or     al,BYTE PTR [edx+0x0]
  4209d0:	push   es
  4209d1:	or     eax,0xd060042
  4209d6:	inc    edx
  4209d7:	add    BYTE PTR [esi],al
  4209d9:	or     eax,0xd060042
  4209de:	inc    edx
  4209df:	add    BYTE PTR [esi],al
  4209e1:	or     eax,0xd060042
  4209e6:	inc    edx
  4209e7:	add    BYTE PTR [esi],al
  4209e9:	or     eax,0xae40042
  4209ee:	inc    edx
  4209ef:	add    BYTE PTR [esi],al
  4209f1:	or     eax,0xaf50042
  4209f6:	inc    edx
  4209f7:	add    BYTE PTR [esi],al
  4209f9:	or     eax,0xd060042
  4209fe:	inc    edx
  4209ff:	add    BYTE PTR [esi],al
  420a01:	or     eax,0xd060042
  420a06:	inc    edx
  420a07:	add    BYTE PTR [esi],al
  420a09:	or     eax,0xd060042
  420a0e:	inc    edx
  420a0f:	add    BYTE PTR [esi],al
  420a11:	or     eax,0xd060042
  420a16:	inc    edx
  420a17:	add    BYTE PTR [esi],al
  420a19:	or     eax,0xd060042
  420a1e:	inc    edx
  420a1f:	add    BYTE PTR [esi],al
  420a21:	or     eax,DWORD PTR [edx+0x0]
  420a24:	pop    ss
  420a25:	or     eax,DWORD PTR [edx+0x0]
  420a28:	sub    BYTE PTR [ebx],cl
  420a2a:	inc    edx
  420a2b:	add    BYTE PTR [ecx],bh
  420a2d:	or     eax,DWORD PTR [edx+0x0]
  420a30:	dec    edx
  420a31:	or     eax,DWORD PTR [edx+0x0]
  420a34:	pop    ebx
  420a35:	or     eax,DWORD PTR [edx+0x0]
  420a38:	ins    BYTE PTR es:[edi],dx
  420a39:	or     eax,DWORD PTR [edx+0x0]
  420a3c:	jge    0x420a49
  420a3e:	inc    edx
  420a3f:	add    BYTE PTR [esi-0x60ffbdf5],cl
  420a45:	or     eax,DWORD PTR [edx+0x0]
  420a48:	mov    al,0xb
  420a4a:	inc    edx
  420a4b:	add    cl,al
  420a4d:	or     eax,DWORD PTR [edx+0x0]
  420a50:	ror    BYTE PTR [ebx],cl
  420a52:	inc    edx
  420a53:	add    bl,ah
  420a55:	or     eax,DWORD PTR [edx+0x0]
  420a58:	hlt    
  420a59:	or     eax,DWORD PTR [edx+0x0]
  420a5c:	add    eax,0x1600420c
  420a61:	or     al,0x42
  420a63:	add    BYTE PTR [edi],ah
  420a65:	or     al,0x42
  420a67:	add    BYTE PTR [eax],bh
  420a69:	or     al,0x42
  420a6b:	add    BYTE PTR [ecx+0xc],cl
  420a6e:	inc    edx
  420a6f:	add    BYTE PTR [edx+0xc],bl
  420a72:	inc    edx
  420a73:	add    BYTE PTR [ebx+0xc],ch
  420a76:	inc    edx
  420a77:	add    BYTE PTR [esp+ecx*1+0x42],bh
  420a7b:	add    BYTE PTR [edx-0x67ffbdf4],cl
  420a81:	or     al,0x42
  420a83:	add    BYTE PTR [esi-0x4bffbdf4],ah
  420a89:	or     al,0x42
  420a8b:	add    dl,al
  420a8d:	or     al,0x42
  420a8f:	add    al,dl
  420a91:	or     al,0x42
  420a93:	add    dh,bl
  420a95:	or     al,0x42
  420a97:	add    ah,ch
  420a99:	or     al,0x42
  420a9b:	add    dl,bh
  420a9d:	or     al,0x42
  420a9f:	add    BYTE PTR [ebx-0x25875e2d],cl
  420aa5:	inc    esi
  420aa6:	add    al,ch
  420aa8:	pushf  
  420aa9:	fs (bad) 
  420aab:	(bad)  
  420aac:	jmp    0x420d06
  420ab1:	mov    edx,ebx
  420ab3:	mov    eax,ds:0x46db5c
  420ab8:	call   0x406f48
  420abd:	jmp    0x420d06
  420ac2:	mov    edx,ebx
  420ac4:	mov    eax,ds:0x46dc50
  420ac9:	call   0x406f48
  420ace:	jmp    0x420d06
  420ad3:	mov    edx,ebx
  420ad5:	mov    eax,ds:0x46db94
  420ada:	call   0x406f48
  420adf:	jmp    0x420d06
  420ae4:	mov    edx,ebx
  420ae6:	mov    eax,ds:0x46dd4c
  420aeb:	call   0x406f48
  420af0:	jmp    0x420d06
  420af5:	mov    edx,ebx
  420af7:	mov    eax,ds:0x46de60
  420afc:	call   0x406f48
  420b01:	jmp    0x420d06
  420b06:	mov    edx,ebx
  420b08:	mov    eax,ds:0x46de5c
  420b0d:	call   0x406f48
  420b12:	jmp    0x420d06
  420b17:	mov    edx,ebx
  420b19:	mov    eax,ds:0x46db30
  420b1e:	call   0x406f48
  420b23:	jmp    0x420d06
  420b28:	mov    edx,ebx
  420b2a:	mov    eax,ds:0x46dcc8
  420b2f:	call   0x406f48
  420b34:	jmp    0x420d06
  420b39:	mov    edx,ebx
  420b3b:	mov    eax,ds:0x46ddc0
  420b40:	call   0x406f48
  420b45:	jmp    0x420d06
  420b4a:	mov    edx,ebx
  420b4c:	mov    eax,ds:0x46dcdc
  420b51:	call   0x406f48
  420b56:	jmp    0x420d06
  420b5b:	mov    edx,ebx
  420b5d:	mov    eax,ds:0x46da50
  420b62:	call   0x406f48
  420b67:	jmp    0x420d06
  420b6c:	mov    edx,ebx
  420b6e:	mov    eax,ds:0x46daf0
  420b73:	call   0x406f48
  420b78:	jmp    0x420d06
  420b7d:	mov    edx,ebx
  420b7f:	mov    eax,ds:0x46da58
  420b84:	call   0x406f48
  420b89:	jmp    0x420d06
  420b8e:	mov    edx,ebx
  420b90:	mov    eax,ds:0x46dbfc
  420b95:	call   0x406f48
  420b9a:	jmp    0x420d06
  420b9f:	mov    edx,ebx
  420ba1:	mov    eax,ds:0x46dc90
  420ba6:	call   0x406f48
  420bab:	jmp    0x420d06
  420bb0:	mov    edx,ebx
  420bb2:	mov    eax,ds:0x46dd0c
  420bb7:	call   0x406f48
  420bbc:	jmp    0x420d06
  420bc1:	mov    edx,ebx
  420bc3:	mov    eax,ds:0x46dd44
  420bc8:	call   0x406f48
  420bcd:	jmp    0x420d06
  420bd2:	mov    edx,ebx
  420bd4:	mov    eax,ds:0x46dc94
  420bd9:	call   0x406f48
  420bde:	jmp    0x420d06
  420be3:	mov    edx,ebx
  420be5:	mov    eax,ds:0x46de24
  420bea:	call   0x406f48
  420bef:	jmp    0x420d06
  420bf4:	mov    edx,ebx
  420bf6:	mov    eax,ds:0x46da74
  420bfb:	call   0x406f48
  420c00:	jmp    0x420d06
  420c05:	mov    edx,ebx
  420c07:	mov    eax,ds:0x46db40
  420c0c:	call   0x406f48
  420c11:	jmp    0x420d06
  420c16:	mov    edx,ebx
  420c18:	mov    eax,ds:0x46dad4
  420c1d:	call   0x406f48
  420c22:	jmp    0x420d06
  420c27:	mov    edx,ebx
  420c29:	mov    eax,ds:0x46db74
  420c2e:	call   0x406f48
  420c33:	jmp    0x420d06
  420c38:	mov    edx,ebx
  420c3a:	mov    eax,ds:0x46de28
  420c3f:	call   0x406f48
  420c44:	jmp    0x420d06
  420c49:	mov    edx,ebx
  420c4b:	mov    eax,ds:0x46dcf4
  420c50:	call   0x406f48
  420c55:	jmp    0x420d06
  420c5a:	mov    edx,ebx
  420c5c:	mov    eax,ds:0x46dd78
  420c61:	call   0x406f48
  420c66:	jmp    0x420d06
  420c6b:	mov    edx,ebx
  420c6d:	mov    eax,ds:0x46de3c
  420c72:	call   0x406f48
  420c77:	jmp    0x420d06
  420c7c:	mov    edx,ebx
  420c7e:	mov    eax,ds:0x46dbf8
  420c83:	call   0x406f48
  420c88:	jmp    0x420d06
  420c8a:	mov    edx,ebx
  420c8c:	mov    eax,ds:0x46db68
  420c91:	call   0x406f48
  420c96:	jmp    0x420d06
  420c98:	mov    edx,ebx
  420c9a:	mov    eax,ds:0x46dda8
  420c9f:	call   0x406f48
  420ca4:	jmp    0x420d06
  420ca6:	mov    edx,ebx
  420ca8:	mov    eax,ds:0x46dd30
  420cad:	call   0x406f48
  420cb2:	jmp    0x420d06
  420cb4:	mov    edx,ebx
  420cb6:	mov    eax,ds:0x46db18
  420cbb:	call   0x406f48
  420cc0:	jmp    0x420d06
  420cc2:	mov    edx,ebx
  420cc4:	mov    eax,ds:0x46dc6c
  420cc9:	call   0x406f48
  420cce:	jmp    0x420d06
  420cd0:	mov    edx,ebx
  420cd2:	mov    eax,ds:0x46db64
  420cd7:	call   0x406f48
  420cdc:	jmp    0x420d06
  420cde:	mov    edx,ebx
  420ce0:	mov    eax,ds:0x46ddbc
  420ce5:	call   0x406f48
  420cea:	jmp    0x420d06
  420cec:	mov    edx,ebx
  420cee:	mov    eax,ds:0x46dd68
  420cf3:	call   0x406f48
  420cf8:	jmp    0x420d06
  420cfa:	mov    edx,ebx
  420cfc:	mov    eax,ds:0x46dd10
  420d01:	call   0x406f48
  420d06:	push   0x1
  420d08:	lea    eax,[ebp-0x4]
  420d0b:	push   eax
  420d0c:	lea    edx,[ebp-0x8]
  420d0f:	mov    eax,ds:0x46da4c
  420d14:	call   0x406f48
  420d19:	mov    eax,DWORD PTR [ebp-0x8]
  420d1c:	push   eax
  420d1d:	mov    DWORD PTR [ebp-0x18],esi
  420d20:	mov    BYTE PTR [ebp-0x14],0x0
  420d24:	mov    eax,DWORD PTR [ebx]
  420d26:	mov    DWORD PTR [ebp-0x10],eax
  420d29:	mov    BYTE PTR [ebp-0xc],0xb
  420d2d:	lea    ecx,[ebp-0x18]
  420d30:	mov    eax,ds:0x41be90
  420d35:	pop    edx
  420d36:	call   0x41b0d4
  420d3b:	mov    edx,DWORD PTR [ebp-0x4]
  420d3e:	mov    eax,ebx
  420d40:	call   0x404fdc
  420d45:	xor    eax,eax
  420d47:	pop    edx
  420d48:	pop    ecx
  420d49:	pop    ecx
  420d4a:	mov    DWORD PTR fs:[eax],edx
  420d4d:	push   0x420d67
  420d52:	lea    eax,[ebp-0x8]
  420d55:	mov    edx,0x2
  420d5a:	call   0x404fac
  420d5f:	ret    
  420d60:	jmp    0x40481c
  420d65:	jmp    0x420d52
  420d67:	pop    esi
  420d68:	pop    ebx
  420d69:	mov    esp,ebp
  420d6b:	pop    ebp
  420d6c:	ret    
  420d6d:	lea    eax,[eax+0x0]
  420d70:	push   ebp
  420d71:	mov    ebp,esp
  420d73:	push   0x0
  420d75:	xor    eax,eax
  420d77:	push   ebp
  420d78:	push   0x420dba
  420d7d:	push   DWORD PTR fs:[eax]
  420d80:	mov    DWORD PTR fs:[eax],esp
  420d83:	lea    edx,[ebp-0x4]
  420d86:	mov    eax,ds:0x46db44
  420d8b:	call   0x406f48
  420d90:	mov    ecx,DWORD PTR [ebp-0x4]
  420d93:	mov    dl,0x1
  420d95:	mov    eax,ds:0x4204c0
  420d9a:	call   0x41bdbc
  420d9f:	call   0x4048fc
  420da4:	xor    eax,eax
  420da6:	pop    edx
  420da7:	pop    ecx
  420da8:	pop    ecx
  420da9:	mov    DWORD PTR fs:[eax],edx
  420dac:	push   0x420dc1
  420db1:	lea    eax,[ebp-0x4]
  420db4:	call   0x404f88
  420db9:	ret    
  420dba:	jmp    0x40481c
  420dbf:	jmp    0x420db1
  420dc1:	pop    ecx
  420dc2:	pop    ebp
  420dc3:	ret    
  420dc4:	push   ebx
  420dc5:	push   esi
  420dc6:	test   dl,dl
  420dc8:	je     0x420dd2
  420dca:	add    esp,0xfffffff0
  420dcd:	call   0x4043ac
  420dd2:	mov    ebx,edx
  420dd4:	mov    esi,eax
  420dd6:	xor    edx,edx
  420dd8:	mov    eax,esi
  420dda:	call   0x4236b0
  420ddf:	mov    DWORD PTR ds:0x461b38,esi
  420de5:	mov    eax,esi
  420de7:	test   bl,bl
  420de9:	je     0x420dfa
  420deb:	call   0x404404
  420df0:	pop    DWORD PTR fs:0x0
  420df7:	add    esp,0xc
  420dfa:	mov    eax,esi
  420dfc:	pop    esi
  420dfd:	pop    ebx
  420dfe:	ret    
  420dff:	nop
  420e00:	push   ebx
  420e01:	push   esi
  420e02:	call   0x404454
  420e07:	mov    ebx,edx
  420e09:	mov    esi,eax
  420e0b:	lea    edx,[esi+0xc]
  420e0e:	mov    eax,ds:0x41be90
  420e13:	call   0x41b14c
  420e18:	mov    edx,ebx
  420e1a:	and    dl,0xfc
  420e1d:	mov    eax,esi
  420e1f:	call   0x404090
  420e24:	test   bl,bl
  420e26:	jle    0x420e2f
  420e28:	mov    eax,esi
  420e2a:	call   0x4043fc
  420e2f:	pop    esi
  420e30:	pop    ebx
  420e31:	ret    
  420e32:	mov    eax,eax
  420e34:	push   ebx
  420e35:	push   esi
  420e36:	push   edi
  420e37:	mov    esi,ecx
  420e39:	mov    edi,edx
  420e3b:	mov    ebx,eax
  420e3d:	mov    eax,DWORD PTR [esi]
  420e3f:	call   0x4061f4
  420e44:	push   eax
  420e45:	push   0x0
  420e47:	xor    eax,eax
  420e49:	mov    edx,DWORD PTR [esi]
  420e4b:	test   edx,edx
  420e4d:	je     0x420e54
  420e4f:	cmp    eax,DWORD PTR [edx-0x4]
  420e52:	jb     0x420e59
  420e54:	call   0x403f68
  420e59:	lea    ecx,[edx+eax*1]
  420e5c:	mov    edx,edi
  420e5e:	mov    eax,ebx
  420e60:	mov    esi,DWORD PTR [eax]
  420e62:	call   DWORD PTR [esi+0x9c]
  420e68:	mov    edx,eax
  420e6a:	mov    eax,ebx
  420e6c:	call   0x420814
  420e71:	pop    edi
  420e72:	pop    esi
  420e73:	pop    ebx
  420e74:	ret    
  420e75:	lea    eax,[eax+0x0]
  420e78:	push   ebp
  420e79:	mov    ebp,esp
  420e7b:	push   ecx
  420e7c:	push   ebx
  420e7d:	push   esi
  420e7e:	push   edi
  420e7f:	mov    esi,ecx
  420e81:	mov    DWORD PTR [ebp-0x4],edx
  420e84:	mov    ebx,eax
  420e86:	mov    eax,DWORD PTR [ebp+0x8]
  420e89:	mov    edi,DWORD PTR [ebp+0xc]
  420e8c:	cmp    eax,0xffffffff
  420e8f:	jne    0x420ea1
  420e91:	mov    eax,esi
  420e93:	call   0x4061f4
  420e98:	sub    eax,edi
  420e9a:	jno    0x420ea1
  420e9c:	call   0x403f70
  420ea1:	push   eax
  420ea2:	push   0x0
  420ea4:	test   esi,esi
  420ea6:	je     0x420ead
  420ea8:	cmp    edi,DWORD PTR [esi-0x4]
  420eab:	jb     0x420eb2
  420ead:	call   0x403f68
  420eb2:	lea    ecx,[esi+edi*1]
  420eb5:	mov    edx,DWORD PTR [ebp-0x4]
  420eb8:	mov    eax,ebx
  420eba:	mov    ebx,DWORD PTR [eax]
  420ebc:	call   DWORD PTR [ebx+0xa0]
  420ec2:	pop    edi
  420ec3:	pop    esi
  420ec4:	pop    ebx
  420ec5:	pop    ecx
  420ec6:	pop    ebp
  420ec7:	ret    0x8
  420eca:	mov    eax,eax
  420ecc:	push   ebp
  420ecd:	mov    ebp,esp
  420ecf:	push   ecx
  420ed0:	push   ebx
  420ed1:	push   esi
  420ed2:	mov    esi,ecx
  420ed4:	mov    DWORD PTR [ebp-0x4],edx
  420ed7:	mov    ebx,eax
  420ed9:	mov    eax,DWORD PTR [esi]
  420edb:	call   0x4061f4
  420ee0:	push   eax
  420ee1:	push   0x0
  420ee3:	mov    eax,DWORD PTR [ebp+0x10]
  420ee6:	push   eax
  420ee7:	mov    eax,DWORD PTR [ebp+0xc]
  420eea:	push   eax
  420eeb:	movzx  eax,BYTE PTR [ebp+0x8]
  420eef:	push   eax
  420ef0:	xor    eax,eax
  420ef2:	mov    edx,DWORD PTR [esi]
  420ef4:	test   edx,edx
  420ef6:	je     0x420efd
  420ef8:	cmp    eax,DWORD PTR [edx-0x4]
  420efb:	jb     0x420f02
  420efd:	call   0x403f68
  420f02:	lea    ecx,[edx+eax*1]
  420f05:	mov    edx,DWORD PTR [ebp-0x4]
  420f08:	mov    eax,ebx
  420f0a:	mov    esi,DWORD PTR [eax]
  420f0c:	call   DWORD PTR [esi+0xb8]
  420f12:	mov    edx,eax
  420f14:	mov    eax,ebx
  420f16:	call   0x420814
  420f1b:	pop    esi
  420f1c:	pop    ebx
  420f1d:	pop    ecx
  420f1e:	pop    ebp
  420f1f:	ret    0xc
  420f22:	mov    eax,eax
  420f24:	push   ebp
  420f25:	mov    ebp,esp
  420f27:	push   ebx
  420f28:	push   esi
  420f29:	push   edi
  420f2a:	mov    ebx,ecx
  420f2c:	mov    edi,edx
  420f2e:	mov    esi,eax
  420f30:	mov    eax,ebx
  420f32:	call   0x4061f4
  420f37:	push   eax
  420f38:	push   0x0
  420f3a:	mov    eax,DWORD PTR [ebp+0x10]
  420f3d:	push   eax
  420f3e:	mov    eax,DWORD PTR [ebp+0xc]
  420f41:	push   eax
  420f42:	movzx  eax,BYTE PTR [ebp+0x8]
  420f46:	push   eax
  420f47:	mov    ecx,ebx
  420f49:	mov    edx,edi
  420f4b:	mov    eax,esi
  420f4d:	mov    esi,DWORD PTR [eax]
  420f4f:	call   DWORD PTR [esi+0xbc]
  420f55:	mov    eax,ebx
  420f57:	call   0x4061f4
  420f5c:	pop    edi
  420f5d:	pop    esi
  420f5e:	pop    ebx
  420f5f:	pop    ebp
  420f60:	ret    0x10
  420f63:	nop
  420f64:	push   ebp
  420f65:	mov    ebp,esp
  420f67:	push   esi
  420f68:	push   edi
  420f69:	mov    esi,ecx
  420f6b:	mov    ecx,DWORD PTR [ebp+0x8]
  420f6e:	mov    edi,DWORD PTR [ebp+0xc]
  420f71:	test   cl,cl
  420f73:	jne    0x420f83
  420f75:	push   edi
  420f76:	push   0xd
  420f78:	push   0x0
  420f7a:	mov    ecx,esi
  420f7c:	call   0x421068
  420f81:	jmp    0x420f8e
  420f83:	push   edi
  420f84:	push   0xd
  420f86:	push   ecx
  420f87:	mov    ecx,esi
  420f89:	call   0x421068
  420f8e:	pop    edi
  420f8f:	pop    esi
  420f90:	pop    ebp
  420f91:	ret    0x8
  420f94:	push   ebp
  420f95:	mov    ebp,esp
  420f97:	push   esi
  420f98:	push   edi
  420f99:	mov    esi,ecx
  420f9b:	mov    ecx,DWORD PTR [ebp+0x8]
  420f9e:	mov    edi,DWORD PTR [ebp+0xc]
  420fa1:	test   cl,cl
  420fa3:	jne    0x420fb2
  420fa5:	push   edi
  420fa6:	push   0xc
  420fa8:	push   ecx
  420fa9:	mov    ecx,esi
  420fab:	call   0x421068
  420fb0:	jmp    0x420fbd
  420fb2:	push   edi
  420fb3:	push   0xc
  420fb5:	push   ecx
  420fb6:	mov    ecx,esi
  420fb8:	call   0x421068
  420fbd:	pop    edi
  420fbe:	pop    esi
  420fbf:	pop    ebp
  420fc0:	ret    0x8
  420fc3:	nop
  420fc4:	push   ebp
  420fc5:	mov    ebp,esp
  420fc7:	push   ecx
  420fc8:	push   ebx
  420fc9:	movzx  eax,cl
  420fcc:	mov    DWORD PTR [ebp-0x4],eax
  420fcf:	cmp    BYTE PTR [ebp+0x8],0x0
  420fd3:	jne    0x420fee
  420fd5:	push   0xa
  420fd7:	lea    eax,[ebp-0x4]
  420fda:	push   eax
  420fdb:	push   0x4
  420fdd:	xor    ecx,ecx
  420fdf:	mov    eax,ds:0x461b38
  420fe4:	mov    ebx,DWORD PTR [eax]
  420fe6:	call   DWORD PTR [ebx+0xac]
  420fec:	jmp    0x421008
  420fee:	push   0xa
  420ff0:	lea    eax,[ebp-0x4]
  420ff3:	push   eax
  420ff4:	push   0x4
  420ff6:	mov    ecx,0x29
  420ffb:	mov    eax,ds:0x461b38
  421000:	mov    ebx,DWORD PTR [eax]
  421002:	call   DWORD PTR [ebx+0xac]
  421008:	pop    ebx
  421009:	pop    ecx
  42100a:	pop    ebp
  42100b:	ret    0x4
  42100e:	mov    eax,eax
  421010:	push   ebp
  421011:	mov    ebp,esp
  421013:	push   ecx
  421014:	push   ebx
  421015:	test   cl,cl
  421017:	je     0x421022
  421019:	mov    DWORD PTR [ebp-0x4],0x1
  421020:	jmp    0x421027
  421022:	xor    eax,eax
  421024:	mov    DWORD PTR [ebp-0x4],eax
  421027:	cmp    BYTE PTR [ebp+0x8],0x0
  42102b:	jne    0x421046
  42102d:	push   0xb
  42102f:	lea    eax,[ebp-0x4]
  421032:	push   eax
  421033:	push   0x4
  421035:	xor    ecx,ecx
  421037:	mov    eax,ds:0x461b38
  42103c:	mov    ebx,DWORD PTR [eax]
  42103e:	call   DWORD PTR [ebx+0xac]
  421044:	jmp    0x421060
  421046:	push   0xb
  421048:	lea    eax,[ebp-0x4]
  42104b:	push   eax
  42104c:	push   0x4
  42104e:	mov    ecx,0x29
  421053:	mov    eax,ds:0x461b38
  421058:	mov    ebx,DWORD PTR [eax]
  42105a:	call   DWORD PTR [ebx+0xac]
  421060:	pop    ebx
  421061:	pop    ecx
  421062:	pop    ebp
  421063:	ret    0x4
  421066:	mov    eax,eax
  421068:	push   ebp
  421069:	mov    ebp,esp
  42106b:	add    esp,0xffffffe4
  42106e:	push   ebx
  42106f:	push   esi
  421070:	push   edi
  421071:	mov    esi,ecx
  421073:	mov    edi,edx
  421075:	mov    ebx,eax
  421077:	mov    edx,esi
  421079:	mov    eax,ebx
  42107b:	call   0x4242ec
  421080:	test   al,al
  421082:	je     0x4210b7
  421084:	push   0x0
  421086:	lea    ecx,[ebp-0x8]
  421089:	mov    edx,esi
  42108b:	mov    eax,ds:0x461b38
  421090:	call   0x42068c
  421095:	xor    eax,eax
  421097:	mov    DWORD PTR [ebp-0x4],eax
  42109a:	mov    eax,DWORD PTR [ebp+0xc]
  42109d:	push   eax
  42109e:	lea    eax,[ebp-0x8]
  4210a1:	push   eax
  4210a2:	push   0x8
  4210a4:	xor    ecx,ecx
  4210a6:	mov    edx,edi
  4210a8:	mov    eax,ds:0x461b38
  4210ad:	mov    ebx,DWORD PTR [eax]
  4210af:	call   DWORD PTR [ebx+0xac]
  4210b5:	jmp    0x4210f8
  4210b7:	mov    edx,esi
  4210b9:	mov    eax,ebx
  4210bb:	call   0x42438c
  4210c0:	test   al,al
  4210c2:	je     0x4210f8
  4210c4:	push   0x1
  4210c6:	lea    ecx,[ebp-0x1c]
  4210c9:	mov    edx,esi
  4210cb:	mov    eax,ds:0x461b38
  4210d0:	call   0x42068c
  4210d5:	xor    eax,eax
  4210d7:	mov    DWORD PTR [ebp-0xc],eax
  4210da:	mov    eax,DWORD PTR [ebp+0xc]
  4210dd:	push   eax
  4210de:	lea    eax,[ebp-0x1c]
  4210e1:	push   eax
  4210e2:	push   0x14
  4210e4:	mov    ecx,0x29
  4210e9:	mov    edx,edi
  4210eb:	mov    eax,ds:0x461b38
  4210f0:	mov    ebx,DWORD PTR [eax]
  4210f2:	call   DWORD PTR [ebx+0xac]
  4210f8:	pop    edi
  4210f9:	pop    esi
  4210fa:	pop    ebx
  4210fb:	mov    esp,ebp
  4210fd:	pop    ebp
  4210fe:	ret    0xc
  421101:	lea    eax,[eax+0x0]
  421104:	push   eax
  421105:	adc    DWORD PTR [edx+0x0],eax
	...
  421124:	push   esp
  421125:	adc    DWORD PTR [edx+0x0],eax
  421128:	or     al,0x0
  42112a:	add    BYTE PTR [eax],al
  42112c:	dec    esp
  42112d:	mov    ecx,0x42d00041
  421132:	inc    eax
  421133:	add    ah,bl
  421135:	inc    edx
  421136:	inc    eax
  421137:	add    al,ah
  421139:	inc    edx
  42113a:	inc    eax
  42113b:	add    ah,ah
  42113d:	inc    edx
  42113e:	inc    eax
  42113f:	add    al,bl
  421141:	inc    edx
  421142:	inc    eax
  421143:	add    BYTE PTR [eax],bh
  421145:	inc    eax
  421146:	inc    eax
  421147:	add    BYTE PTR [eax+eax*2+0x40],dl
  42114b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  421151:	mov    ebp,0x45120041
  421156:	dec    ecx
  421157:	fs dec ecx
  421159:	push   eax
  42115a:	jbe    0x421192
  42115c:	push   ebp
  42115d:	outs   dx,BYTE PTR ds:[esi]
  42115e:	popa   
  42115f:	jbe    0x4211c2
  421161:	imul   ebp,DWORD PTR [ecx+eiz*2+0x62],0xb490656c
  421169:	adc    DWORD PTR [edx+0x0],eax
	...
  421188:	loopne 0x42119b
  42118a:	inc    edx
  42118b:	add    BYTE PTR [ecx+eax*1],cl
  42118e:	add    BYTE PTR [eax],al
  421190:	and    al,0x34
  421192:	inc    edx
  421193:	add    al,dl
  421195:	inc    edx
  421196:	inc    eax
  421197:	add    ah,bl
  421199:	inc    edx
  42119a:	inc    eax
  42119b:	add    al,ah
  42119d:	inc    edx
  42119e:	inc    eax
  42119f:	add    ah,ah
  4211a1:	inc    edx
  4211a2:	inc    eax
  4211a3:	add    al,bl
  4211a5:	inc    edx
  4211a6:	inc    eax
  4211a7:	add    BYTE PTR [eax],bh
  4211a9:	inc    eax
  4211aa:	inc    eax
  4211ab:	add    BYTE PTR [eax+eax*2+0x40],dl
  4211af:	add    BYTE PTR [esi+esi*1+0x42],bl
  4211b3:	add    ah,bh
  4211b5:	and    al,BYTE PTR [edx+0x0]
  4211b8:	or     al,0x36
  4211ba:	inc    edx
  4211bb:	add    BYTE PTR [ecx+eiz*1+0x42],cl
  4211bf:	add    al,dh
  4211c1:	daa    
  4211c2:	inc    edx
  4211c3:	add    BYTE PTR [eax-0x43ffbdde],dh
  4211c9:	and    eax,DWORD PTR [edx+0x0]
  4211cc:	adc    BYTE PTR [edx],ah
  4211ce:	inc    edx
  4211cf:	add    BYTE PTR [eax+0x22],bl
  4211d2:	inc    edx
  4211d3:	add    BYTE PTR [eax+0x26],bh
  4211d6:	inc    edx
  4211d7:	add    BYTE PTR [eiz*1+0x25fc0042],dh
  4211de:	inc    edx
  4211df:	add    BYTE PTR [esp+edx*2],dl
  4211e2:	dec    ecx
  4211e3:	fs push ebx
  4211e5:	outs   dx,DWORD PTR ds:[esi]
  4211e6:	arpl   WORD PTR [ebx+0x65],bp
  4211e9:	je     0x421237
  4211eb:	imul   esi,DWORD PTR [ebx+0x74],0x646e6957
  4211f2:	outs   dx,DWORD PTR ds:[esi]
  4211f3:	ja     0x421268
  4211f5:	lea    eax,[eax+0x0]
  4211f8:	inc    esp
  4211f9:	adc    al,BYTE PTR [edx+0x0]
	...
  421218:	sbb    al,0x13
  42121a:	inc    edx
  42121b:	add    BYTE PTR [eax],dl
  42121d:	add    BYTE PTR [eax],al
  42121f:	add    ah,ch
  421221:	add    DWORD PTR [edx+0x0],eax
  421224:	rol    BYTE PTR [edx+0x40],1
  421227:	add    ah,bl
  421229:	inc    edx
  42122a:	inc    eax
  42122b:	add    al,ah
  42122d:	inc    edx
  42122e:	inc    eax
  42122f:	add    ah,ah
  421231:	inc    edx
  421232:	inc    eax
  421233:	add    al,bl
  421235:	inc    edx
  421236:	inc    eax
  421237:	add    BYTE PTR [eax],bh
  421239:	inc    eax
  42123a:	inc    eax
  42123b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42123f:	add    ah,dh
  421241:	adc    eax,DWORD PTR [edx+0x0]
  421244:	js     0x42126e
  421246:	inc    edx
  421247:	add    BYTE PTR [edi+edx*1+0x42],ah
  42124b:	add    BYTE PTR [eax+0x1e],dh
  42124e:	inc    edx
  42124f:	add    BYTE PTR [eax],dh
  421251:	pop    ds
  421252:	inc    edx
  421253:	add    al,ch
  421255:	sbb    al,BYTE PTR [edx+0x0]
  421258:	sbb    al,0x14
  42125a:	inc    edx
  42125b:	add    BYTE PTR [eax-0x13ffbdec],dh
  421261:	sub    DWORD PTR [edx+0x0],eax
  421264:	sub    al,0x13
  421266:	inc    edx
  421267:	add    BYTE PTR [ebx+ebp*1+0x2cf40042],dh
  42126e:	inc    edx
  42126f:	add    BYTE PTR [edx+ebp*1+0x20200042],bh
  421276:	inc    edx
  421277:	add    BYTE PTR [ebp+edx*1+0x1da00042],dh
  42127e:	inc    edx
  42127f:	add    BYTE PTR [eax-0x2fffbde3],bh
  421285:	sbb    eax,0x426c0042
  42128a:	inc    edx
  42128b:	add    BYTE PTR [eax-0x77ffbde9],ah
  421291:	or     BYTE PTR [edx+0x0],al
  421294:	lods   al,BYTE PTR ds:[esi]
  421295:	sbb    eax,0x1dc40042
  42129a:	inc    edx
  42129b:	add    BYTE PTR [eax],ah
  42129d:	push   ds
  42129e:	inc    edx
  42129f:	add    BYTE PTR [edx+eax*2+0x2c100042],ch
  4212a6:	inc    edx
  4212a7:	add    BYTE PTR [edx+ebx*1+0xe340042],dh
  4212ae:	inc    edx
  4212af:	add    BYTE PTR [eax+0xe],bh
  4212b2:	inc    edx
  4212b3:	add    ah,cl
  4212b5:	push   cs
  4212b6:	inc    edx
  4212b7:	add    BYTE PTR [edi+ecx*1],ah
  4212ba:	inc    edx
  4212bb:	add    BYTE PTR [eax+esi*1+0x42],dl
  4212bf:	add    BYTE PTR [eax+0x2c],dl
  4212c2:	inc    edx
  4212c3:	add    ah,al
  4212c5:	cmovb  eax,DWORD PTR [eax]
  4212c8:	adc    BYTE PTR [eax],dl
  4212ca:	inc    edx
  4212cb:	add    BYTE PTR [edi+ecx*1+0x42],ah
  4212cf:	add    BYTE PTR [edi+ecx*1+0x441c0042],dl
  4212d6:	inc    edx
  4212d7:	add    BYTE PTR [eax],dh
  4212d9:	cs inc edx
  4212db:	add    BYTE PTR [eax-0x3bffbdeb],ch
  4212e1:	pop    ss
  4212e2:	inc    edx
  4212e3:	add    ah,dh
  4212e5:	sbb    BYTE PTR [edx+0x0],al
  4212e8:	adc    al,0x20
  4212ea:	inc    edx
  4212eb:	add    BYTE PTR [ebx+esi*1],bh
  4212ee:	inc    edx
  4212ef:	add    ah,bl
  4212f1:	sub    eax,DWORD PTR [edx+0x0]
  4212f4:	dec    eax
  4212f5:	sbb    eax,DWORD PTR [edx+0x0]
  4212f8:	pusha  
  4212f9:	sbb    al,0x42
  4212fb:	add    al,ah
  4212fd:	pop    ss
  4212fe:	inc    edx
  4212ff:	add    BYTE PTR [ecx+ebx*1],ah
  421302:	inc    edx
  421303:	add    BYTE PTR [eax],bl
  421305:	sbb    eax,DWORD PTR [edx+0x0]
  421308:	and    BYTE PTR [edx+eax*2],0x0
  42130c:	or     al,0x1b
  42130e:	inc    edx
  42130f:	add    BYTE PTR [eax],bl
  421311:	and    DWORD PTR [edx+0x0],eax
  421314:	shl    BYTE PTR [edi],0x42
  421317:	add    BYTE PTR [eax+0x28],dl
  42131a:	inc    edx
  42131b:	add    BYTE PTR [edi],cl
  42131d:	push   esp
  42131e:	dec    ecx
  42131f:	fs push ebx
  421321:	je     0x421384
  421323:	arpl   WORD PTR [ebx+0x57],bp
  421326:	imul   ebp,DWORD PTR [esi+0x64],0x5573776f
  42132d:	mov    ebp,esp
  42132f:	add    esp,0xfffffe6c
  421335:	push   ebx
  421336:	push   esi
  421337:	xor    ecx,ecx
  421339:	mov    DWORD PTR [ebp-0x194],ecx
  42133f:	test   dl,dl
  421341:	je     0x42134b
  421343:	add    esp,0xfffffff0
  421346:	call   0x4043ac
  42134b:	mov    ebx,edx
  42134d:	mov    esi,eax
  42134f:	xor    eax,eax
  421351:	push   ebp
  421352:	push   0x4213d0
  421357:	push   DWORD PTR fs:[eax]
  42135a:	mov    DWORD PTR fs:[eax],esp
  42135d:	xor    edx,edx
  42135f:	mov    eax,esi
  421361:	call   0x420dc4
  421366:	cmp    BYTE PTR ds:0x461b44,0x0
  42136d:	jne    0x4213b1
  42136f:	lea    eax,[ebp-0x18e]
  421375:	push   eax
  421376:	push   0x202
  42137b:	call   0x41fd50
  421380:	inc    eax
  421381:	jne    0x4213aa
  421383:	lea    edx,[ebp-0x194]
  421389:	mov    eax,ds:0x46de7c
  42138e:	call   0x406f48
  421393:	mov    ecx,DWORD PTR [ebp-0x194]
  421399:	mov    dl,0x1
  42139b:	mov    eax,ds:0x4203e8
  4213a0:	call   0x41bdbc
  4213a5:	call   0x4048fc
  4213aa:	mov    BYTE PTR ds:0x461b44,0x1
  4213b1:	mov    DWORD PTR ds:0x472bac,esi
  4213b7:	xor    eax,eax
  4213b9:	pop    edx
  4213ba:	pop    ecx
  4213bb:	pop    ecx
  4213bc:	mov    DWORD PTR fs:[eax],edx
  4213bf:	push   0x4213d7
  4213c4:	lea    eax,[ebp-0x194]
  4213ca:	call   0x404f88
  4213cf:	ret    
  4213d0:	jmp    0x40481c
  4213d5:	jmp    0x4213c4
  4213d7:	mov    eax,esi
  4213d9:	test   bl,bl
  4213db:	je     0x4213ec
  4213dd:	call   0x404404
  4213e2:	pop    DWORD PTR fs:0x0
  4213e9:	add    esp,0xc
  4213ec:	mov    eax,esi
  4213ee:	pop    esi
  4213ef:	pop    ebx
  4213f0:	mov    esp,ebp
  4213f2:	pop    ebp
  4213f3:	ret    
  4213f4:	push   ebx
  4213f5:	push   esi
  4213f6:	call   0x404454
  4213fb:	mov    ebx,edx
  4213fd:	mov    esi,eax
  4213ff:	mov    edx,ebx
  421401:	and    dl,0xfc
  421404:	mov    eax,esi
  421406:	call   0x420e00
  42140b:	test   bl,bl
  42140d:	jle    0x421416
  42140f:	mov    eax,esi
  421411:	call   0x4043fc
  421416:	pop    esi
  421417:	pop    ebx
  421418:	ret    
  421419:	lea    eax,[eax+0x0]
  42141c:	push   ebp
  42141d:	mov    ebp,esp
  42141f:	add    esp,0xffffffe8
  421422:	push   ebx
  421423:	push   esi
  421424:	push   edi
  421425:	xor    ebx,ebx
  421427:	mov    DWORD PTR [ebp-0x18],ebx
  42142a:	mov    esi,ecx
  42142c:	mov    ebx,eax
  42142e:	xor    eax,eax
  421430:	push   ebp
  421431:	push   0x42149d
  421436:	push   DWORD PTR fs:[eax]
  421439:	mov    DWORD PTR fs:[eax],esp
  42143c:	mov    DWORD PTR [ebp-0x4],0x10
  421443:	lea    eax,[ebp-0x4]
  421446:	push   eax
  421447:	lea    eax,[ebp-0x14]
  42144a:	push   eax
  42144b:	push   edx
  42144c:	mov    eax,ds:0x46dadc
  421451:	mov    eax,DWORD PTR [eax]
  421453:	call   eax
  421455:	mov    edi,eax
  421457:	lea    eax,[ebp-0x18]
  42145a:	push   eax
  42145b:	lea    edx,[ebp-0x10]
  42145e:	xor    ecx,ecx
  421460:	mov    eax,ebx
  421462:	call   0x420528
  421467:	mov    edx,DWORD PTR [ebp-0x18]
  42146a:	mov    eax,esi
  42146c:	call   0x404fdc
  421471:	movzx  eax,WORD PTR [ebp-0x12]
  421475:	push   eax
  421476:	mov    eax,ds:0x46dbb4
  42147b:	mov    eax,DWORD PTR [eax]
  42147d:	call   eax
  42147f:	movzx  eax,ax
  421482:	mov    edx,DWORD PTR [ebp+0xc]
  421485:	mov    DWORD PTR [edx],eax
  421487:	xor    eax,eax
  421489:	pop    edx
  42148a:	pop    ecx
  42148b:	pop    ecx
  42148c:	mov    DWORD PTR fs:[eax],edx
  42148f:	push   0x4214a4
  421494:	lea    eax,[ebp-0x18]
  421497:	call   0x404f88
  42149c:	ret    
  42149d:	jmp    0x40481c
  4214a2:	jmp    0x421494
  4214a4:	mov    eax,edi
  4214a6:	pop    edi
  4214a7:	pop    esi
  4214a8:	pop    ebx
  4214a9:	mov    esp,ebp
  4214ab:	pop    ebp
  4214ac:	ret    0x8
  4214af:	nop
  4214b0:	push   ebp
  4214b1:	mov    ebp,esp
  4214b3:	add    esp,0xffffffd4
  4214b6:	push   ebx
  4214b7:	push   esi
  4214b8:	push   edi
  4214b9:	mov    esi,ecx
  4214bb:	mov    edi,edx
  4214bd:	mov    ebx,eax
  4214bf:	movzx  eax,BYTE PTR [ebp+0x8]
  4214c3:	sub    al,0x1
  4214c5:	jb     0x4214ce
  4214c7:	je     0x421525
  4214c9:	jmp    0x421597
  4214ce:	mov    WORD PTR [ebp-0x10],0x2
  4214d4:	test   esi,esi
  4214d6:	jne    0x4214df
  4214d8:	xor    eax,eax
  4214da:	mov    DWORD PTR [ebp-0xc],eax
  4214dd:	jmp    0x4214ed
  4214df:	push   0x0
  4214e1:	lea    ecx,[ebp-0xc]
  4214e4:	mov    edx,esi
  4214e6:	mov    eax,ebx
  4214e8:	call   0x42068c
  4214ed:	mov    eax,DWORD PTR [ebp+0xc]
  4214f0:	cmp    eax,0xffff
  4214f5:	jbe    0x4214fc
  4214f7:	call   0x403f68
  4214fc:	push   eax
  4214fd:	mov    eax,ds:0x46dbb0
  421502:	mov    eax,DWORD PTR [eax]
  421504:	call   eax
  421506:	mov    WORD PTR [ebp-0xe],ax
  42150a:	push   0x10
  42150c:	lea    eax,[ebp-0x10]
  42150f:	push   eax
  421510:	push   edi
  421511:	mov    eax,ds:0x46db7c
  421516:	mov    eax,DWORD PTR [eax]
  421518:	call   eax
  42151a:	mov    edx,eax
  42151c:	mov    eax,ebx
  42151e:	call   0x420814
  421523:	jmp    0x42159e
  421525:	mov    WORD PTR [ebp-0x2c],0x17
  42152b:	xor    eax,eax
  42152d:	mov    DWORD PTR [ebp-0x14],eax
  421530:	xor    eax,eax
  421532:	mov    DWORD PTR [ebp-0x28],eax
  421535:	mov    eax,esi
  421537:	call   0x405248
  42153c:	test   eax,eax
  42153e:	jne    0x421551
  421540:	lea    eax,[ebp-0x24]
  421543:	xor    ecx,ecx
  421545:	mov    edx,0x10
  42154a:	call   0x4037c8
  42154f:	jmp    0x42155f
  421551:	push   0x1
  421553:	lea    ecx,[ebp-0x24]
  421556:	mov    edx,esi
  421558:	mov    eax,ebx
  42155a:	call   0x42068c
  42155f:	mov    eax,DWORD PTR [ebp+0xc]
  421562:	cmp    eax,0xffff
  421567:	jbe    0x42156e
  421569:	call   0x403f68
  42156e:	push   eax
  42156f:	mov    eax,ds:0x46dbb0
  421574:	mov    eax,DWORD PTR [eax]
  421576:	call   eax
  421578:	mov    WORD PTR [ebp-0x2a],ax
  42157c:	push   0x1c
  42157e:	lea    eax,[ebp-0x2c]
  421581:	push   eax
  421582:	push   edi
  421583:	mov    eax,ds:0x46db7c
  421588:	mov    eax,DWORD PTR [eax]
  42158a:	call   eax
  42158c:	mov    edx,eax
  42158e:	mov    eax,ebx
  421590:	call   0x420814
  421595:	jmp    0x42159e
  421597:	mov    eax,ebx
  421599:	call   0x420d70
  42159e:	pop    edi
  42159f:	pop    esi
  4215a0:	pop    ebx
  4215a1:	mov    esp,ebp
  4215a3:	pop    ebp
  4215a4:	ret    0x8
  4215a7:	nop
  4215a8:	push   edx
  4215a9:	mov    eax,ds:0x46de64
  4215ae:	mov    eax,DWORD PTR [eax]
  4215b0:	call   eax
  4215b2:	ret    
  4215b3:	nop
  4215b4:	push   ebp
  4215b5:	mov    ebp,esp
  4215b7:	add    esp,0xffffffd4
  4215ba:	push   ebx
  4215bb:	push   esi
  4215bc:	push   edi
  4215bd:	xor    ebx,ebx
  4215bf:	mov    DWORD PTR [ebp-0x2c],ebx
  4215c2:	mov    ebx,ecx
  4215c4:	mov    edi,edx
  4215c6:	mov    esi,eax
  4215c8:	xor    eax,eax
  4215ca:	push   ebp
  4215cb:	push   0x421751
  4215d0:	push   DWORD PTR fs:[eax]
  4215d3:	mov    DWORD PTR fs:[eax],esp
  4215d6:	mov    eax,ebx
  4215d8:	sub    al,0x1
  4215da:	jb     0x4215e3
  4215dc:	je     0x42162c
  4215de:	jmp    0x421734
  4215e3:	mov    eax,edi
  4215e5:	call   0x405418
  4215ea:	push   eax
  4215eb:	mov    eax,ds:0x46da8c
  4215f0:	mov    eax,DWORD PTR [eax]
  4215f2:	call   eax
  4215f4:	mov    DWORD PTR [ebp-0x4],eax
  4215f7:	push   0x2
  4215f9:	push   0x4
  4215fb:	lea    eax,[ebp-0x4]
  4215fe:	push   eax
  4215ff:	mov    eax,ds:0x46dda4
  421604:	mov    eax,DWORD PTR [eax]
  421606:	call   eax
  421608:	mov    ebx,eax
  42160a:	test   ebx,ebx
  42160c:	jne    0x42161d
  42160e:	or     edx,0xffffffff
  421611:	mov    eax,esi
  421613:	call   0x420814
  421618:	jmp    0x42173b
  42161d:	mov    eax,DWORD PTR [ebp+0x8]
  421620:	mov    edx,DWORD PTR [ebx]
  421622:	call   0x405180
  421627:	jmp    0x42173b
  42162c:	mov    eax,ds:0x46dab0
  421631:	cmp    BYTE PTR [eax],0x0
  421634:	jne    0x421657
  421636:	lea    edx,[ebp-0x2c]
  421639:	mov    eax,ds:0x46dda0
  42163e:	call   0x406f48
  421643:	mov    ecx,DWORD PTR [ebp-0x2c]
  421646:	mov    dl,0x1
  421648:	mov    eax,ds:0x421104
  42164d:	call   0x41bdbc
  421652:	call   0x4048fc
  421657:	lea    eax,[ebp-0x28]
  42165a:	xor    ecx,ecx
  42165c:	mov    edx,0x20
  421661:	call   0x4037c8
  421666:	movzx  eax,bl
  421669:	mov    edx,DWORD PTR ds:0x46dcf8
  42166f:	mov    eax,DWORD PTR [edx+eax*4]
  421672:	mov    DWORD PTR [ebp-0x24],eax
  421675:	mov    DWORD PTR [ebp-0x20],0x1
  42167c:	mov    DWORD PTR [ebp-0x28],0x2
  421683:	xor    eax,eax
  421685:	mov    DWORD PTR [ebp-0x8],eax
  421688:	lea    eax,[ebp-0x8]
  42168b:	push   eax
  42168c:	lea    eax,[ebp-0x28]
  42168f:	push   eax
  421690:	push   0x0
  421692:	mov    eax,edi
  421694:	call   0x405418
  421699:	push   eax
  42169a:	mov    eax,ds:0x46ddc4
  42169f:	mov    eax,DWORD PTR [eax]
  4216a1:	call   eax
  4216a3:	mov    ebx,eax
  4216a5:	xor    eax,eax
  4216a7:	push   ebp
  4216a8:	push   0x42172d
  4216ad:	push   DWORD PTR fs:[eax]
  4216b0:	mov    DWORD PTR fs:[eax],esp
  4216b3:	test   ebx,ebx
  4216b5:	je     0x4216c9
  4216b7:	mov    eax,ebx
  4216b9:	call   0x41ffb8
  4216be:	mov    edx,eax
  4216c0:	mov    eax,esi
  4216c2:	call   0x4208c8
  4216c7:	jmp    0x421712
  4216c9:	mov    eax,DWORD PTR [ebp+0x8]
  4216cc:	mov    edx,0x401
  4216d1:	call   0x4056a8
  4216d6:	push   0x4
  4216d8:	push   0x0
  4216da:	push   0x0
  4216dc:	push   0x401
  4216e1:	mov    eax,DWORD PTR [ebp+0x8]
  4216e4:	mov    eax,DWORD PTR [eax]
  4216e6:	push   eax
  4216e7:	mov    eax,DWORD PTR [ebp-0x8]
  4216ea:	mov    eax,DWORD PTR [eax+0x10]
  4216ed:	push   eax
  4216ee:	mov    eax,DWORD PTR [ebp-0x8]
  4216f1:	mov    eax,DWORD PTR [eax+0x18]
  4216f4:	push   eax
  4216f5:	mov    eax,ds:0x46dc3c
  4216fa:	mov    eax,DWORD PTR [eax]
  4216fc:	call   eax
  4216fe:	mov    eax,DWORD PTR [ebp+0x8]
  421701:	mov    eax,DWORD PTR [eax]
  421703:	call   0x405418
  421708:	mov    edx,eax
  42170a:	mov    eax,DWORD PTR [ebp+0x8]
  42170d:	call   0x405180
  421712:	xor    eax,eax
  421714:	pop    edx
  421715:	pop    ecx
  421716:	pop    ecx
  421717:	mov    DWORD PTR fs:[eax],edx
  42171a:	push   0x42173b
  42171f:	mov    eax,DWORD PTR [ebp-0x8]
  421722:	push   eax
  421723:	mov    eax,ds:0x46dc44
  421728:	mov    eax,DWORD PTR [eax]
  42172a:	call   eax
  42172c:	ret    
  42172d:	jmp    0x40481c
  421732:	jmp    0x42171f
  421734:	mov    eax,esi
  421736:	call   0x420d70
  42173b:	xor    eax,eax
  42173d:	pop    edx
  42173e:	pop    ecx
  42173f:	pop    ecx
  421740:	mov    DWORD PTR fs:[eax],edx
  421743:	push   0x421758
  421748:	lea    eax,[ebp-0x2c]
  42174b:	call   0x404f88
  421750:	ret    
  421751:	jmp    0x40481c
  421756:	jmp    0x421748
  421758:	pop    edi
  421759:	pop    esi
  42175a:	pop    ebx
  42175b:	mov    esp,ebp
  42175d:	pop    ebp
  42175e:	ret    0x4
  421761:	lea    eax,[eax+0x0]
  421764:	push   ebx
  421765:	mov    ebx,edx
  421767:	mov    eax,ebx
  421769:	mov    edx,0xfa
  42176e:	call   0x4056a8
  421773:	mov    eax,DWORD PTR [ebx]
  421775:	call   0x405248
  42177a:	push   eax
  42177b:	mov    eax,DWORD PTR [ebx]
  42177d:	call   0x405418
  421782:	push   eax
  421783:	mov    eax,ds:0x46de70
  421788:	mov    eax,DWORD PTR [eax]
  42178a:	call   eax
  42178c:	mov    eax,DWORD PTR [ebx]
  42178e:	call   0x405418
  421793:	mov    edx,eax
  421795:	mov    eax,ebx
  421797:	call   0x405180
  42179c:	pop    ebx
  42179d:	ret    
  42179e:	mov    eax,eax
  4217a0:	push   ebx
  4217a1:	push   esi
  4217a2:	push   edi
  4217a3:	mov    edi,ecx
  4217a5:	mov    esi,edx
  4217a7:	mov    ebx,eax
  4217a9:	push   edi
  4217aa:	push   esi
  4217ab:	mov    eax,ds:0x46dc74
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	call   eax
  4217b4:	mov    edx,eax
  4217b6:	mov    eax,ebx
  4217b8:	call   0x420814
  4217bd:	pop    edi
  4217be:	pop    esi
  4217bf:	pop    ebx
  4217c0:	ret    
  4217c1:	lea    eax,[eax+0x0]
  4217c4:	push   ebp
  4217c5:	mov    ebp,esp
  4217c7:	mov    eax,DWORD PTR [ebp+0x8]
  4217ca:	push   eax
  4217cb:	mov    eax,DWORD PTR [ebp+0xc]
  4217ce:	push   eax
  4217cf:	push   ecx
  4217d0:	push   edx
  4217d1:	mov    eax,ds:0x46dc10
  4217d6:	mov    eax,DWORD PTR [eax]
  4217d8:	call   eax
  4217da:	pop    ebp
  4217db:	ret    0x8
  4217de:	mov    eax,eax
  4217e0:	push   ebp
  4217e1:	mov    ebp,esp
  4217e3:	add    esp,0xffffffc8
  4217e6:	push   ebx
  4217e7:	push   esi
  4217e8:	xor    ebx,ebx
  4217ea:	mov    DWORD PTR [ebp-0x38],ebx
  4217ed:	mov    DWORD PTR [ebp-0x34],ebx
  4217f0:	mov    ebx,eax
  4217f2:	xor    eax,eax
  4217f4:	push   ebp
  4217f5:	push   0x4218e1
  4217fa:	push   DWORD PTR fs:[eax]
  4217fd:	mov    DWORD PTR fs:[eax],esp
  421800:	movzx  eax,BYTE PTR [ebp+0x8]
  421804:	sub    al,0x1
  421806:	jb     0x42180f
  421808:	je     0x421866
  42180a:	jmp    0x4218bd
  42180f:	mov    DWORD PTR [ebp-0x4],0x10
  421816:	lea    eax,[ebp-0x4]
  421819:	push   eax
  42181a:	lea    eax,[ebp-0x14]
  42181d:	push   eax
  42181e:	mov    eax,DWORD PTR [ebp+0x14]
  421821:	push   eax
  421822:	mov    eax,DWORD PTR [ebp+0x18]
  421825:	push   eax
  421826:	push   ecx
  421827:	push   edx
  421828:	mov    eax,ds:0x46dc78
  42182d:	mov    eax,DWORD PTR [eax]
  42182f:	call   eax
  421831:	mov    esi,eax
  421833:	lea    eax,[ebp-0x34]
  421836:	push   eax
  421837:	lea    edx,[ebp-0x10]
  42183a:	xor    ecx,ecx
  42183c:	mov    eax,ebx
  42183e:	call   0x420528
  421843:	mov    edx,DWORD PTR [ebp-0x34]
  421846:	mov    eax,DWORD PTR [ebp+0x10]
  421849:	call   0x404fdc
  42184e:	movzx  eax,WORD PTR [ebp-0x12]
  421852:	push   eax
  421853:	mov    eax,ds:0x46dbb4
  421858:	mov    eax,DWORD PTR [eax]
  42185a:	call   eax
  42185c:	movzx  eax,ax
  42185f:	mov    edx,DWORD PTR [ebp+0xc]
  421862:	mov    DWORD PTR [edx],eax
  421864:	jmp    0x4218c6
  421866:	mov    DWORD PTR [ebp-0x4],0x1c
  42186d:	lea    eax,[ebp-0x4]
  421870:	push   eax
  421871:	lea    eax,[ebp-0x30]
  421874:	push   eax
  421875:	mov    eax,DWORD PTR [ebp+0x14]
  421878:	push   eax
  421879:	mov    eax,DWORD PTR [ebp+0x18]
  42187c:	push   eax
  42187d:	push   ecx
  42187e:	push   edx
  42187f:	mov    eax,ds:0x46dc78
  421884:	mov    eax,DWORD PTR [eax]
  421886:	call   eax
  421888:	mov    esi,eax
  42188a:	lea    eax,[ebp-0x38]
  42188d:	push   eax
  42188e:	lea    edx,[ebp-0x28]
  421891:	mov    cl,0x1
  421893:	mov    eax,ebx
  421895:	call   0x420528
  42189a:	mov    edx,DWORD PTR [ebp-0x38]
  42189d:	mov    eax,DWORD PTR [ebp+0x10]
  4218a0:	call   0x404fdc
  4218a5:	movzx  eax,WORD PTR [ebp-0x2e]
  4218a9:	push   eax
  4218aa:	mov    eax,ds:0x46dbb4
  4218af:	mov    eax,DWORD PTR [eax]
  4218b1:	call   eax
  4218b3:	movzx  eax,ax
  4218b6:	mov    edx,DWORD PTR [ebp+0xc]
  4218b9:	mov    DWORD PTR [edx],eax
  4218bb:	jmp    0x4218c6
  4218bd:	xor    esi,esi
  4218bf:	mov    eax,ebx
  4218c1:	call   0x420d70
  4218c6:	xor    eax,eax
  4218c8:	pop    edx
  4218c9:	pop    ecx
  4218ca:	pop    ecx
  4218cb:	mov    DWORD PTR fs:[eax],edx
  4218ce:	push   0x4218e8
  4218d3:	lea    eax,[ebp-0x38]
  4218d6:	mov    edx,0x2
  4218db:	call   0x404fac
  4218e0:	ret    
  4218e1:	jmp    0x40481c
  4218e6:	jmp    0x4218d3
  4218e8:	mov    eax,esi
  4218ea:	pop    esi
  4218eb:	pop    ebx
  4218ec:	mov    esp,ebp
  4218ee:	pop    ebp
  4218ef:	ret    0x14
  4218f2:	mov    eax,eax
  4218f4:	push   ebp
  4218f5:	mov    ebp,esp
  4218f7:	push   ebx
  4218f8:	push   esi
  4218f9:	push   edi
  4218fa:	mov    edi,ecx
  4218fc:	mov    esi,edx
  4218fe:	mov    ebx,eax
  421900:	mov    eax,DWORD PTR [ebp+0x8]
  421903:	push   eax
  421904:	mov    eax,DWORD PTR [ebp+0xc]
  421907:	push   eax
  421908:	push   edi
  421909:	push   esi
  42190a:	mov    eax,ds:0x46db70
  42190f:	mov    eax,DWORD PTR [eax]
  421911:	call   eax
  421913:	mov    edx,eax
  421915:	mov    eax,ebx
  421917:	call   0x420814
  42191c:	pop    edi
  42191d:	pop    esi
  42191e:	pop    ebx
  42191f:	pop    ebp
  421920:	ret    0x8
  421923:	nop
  421924:	push   ebp
  421925:	mov    ebp,esp
  421927:	add    esp,0xffffffc8
  42192a:	push   ebx
  42192b:	push   esi
  42192c:	push   edi
  42192d:	xor    ebx,ebx
  42192f:	mov    DWORD PTR [ebp-0x38],ebx
  421932:	mov    DWORD PTR [ebp-0x34],ebx
  421935:	mov    DWORD PTR [ebp-0x4],ecx
  421938:	mov    esi,edx
  42193a:	mov    ebx,eax
  42193c:	mov    edi,DWORD PTR [ebp+0x18]
  42193f:	xor    eax,eax
  421941:	push   ebp
  421942:	push   0x421aa3
  421947:	push   DWORD PTR fs:[eax]
  42194a:	mov    DWORD PTR fs:[eax],esp
  42194d:	movzx  eax,BYTE PTR [ebp+0x8]
  421951:	sub    al,0x1
  421953:	jb     0x42195c
  421955:	je     0x4219ba
  421957:	jmp    0x421a18
  42195c:	lea    eax,[ebp-0x14]
  42195f:	xor    ecx,ecx
  421961:	mov    edx,0x10
  421966:	call   0x4037c8
  42196b:	mov    WORD PTR [ebp-0x14],0x2
  421971:	push   0x0
  421973:	lea    ecx,[ebp-0x10]
  421976:	mov    edx,DWORD PTR [ebp+0x10]
  421979:	mov    eax,ebx
  42197b:	call   0x42068c
  421980:	mov    eax,DWORD PTR [ebp+0xc]
  421983:	cmp    eax,0xffff
  421988:	jbe    0x42198f
  42198a:	call   0x403f68
  42198f:	push   eax
  421990:	mov    eax,ds:0x46dbb0
  421995:	mov    eax,DWORD PTR [eax]
  421997:	call   eax
  421999:	mov    WORD PTR [ebp-0x12],ax
  42199d:	push   0x10
  42199f:	lea    eax,[ebp-0x14]
  4219a2:	push   eax
  4219a3:	mov    eax,DWORD PTR [ebp+0x14]
  4219a6:	push   eax
  4219a7:	push   edi
  4219a8:	mov    eax,DWORD PTR [ebp-0x4]
  4219ab:	push   eax
  4219ac:	push   esi
  4219ad:	mov    eax,ds:0x46db6c
  4219b2:	mov    eax,DWORD PTR [eax]
  4219b4:	call   eax
  4219b6:	mov    esi,eax
  4219b8:	jmp    0x421a21
  4219ba:	lea    eax,[ebp-0x30]
  4219bd:	xor    ecx,ecx
  4219bf:	mov    edx,0x1c
  4219c4:	call   0x4037c8
  4219c9:	mov    WORD PTR [ebp-0x30],0x17
  4219cf:	push   0x1
  4219d1:	lea    ecx,[ebp-0x28]
  4219d4:	mov    edx,DWORD PTR [ebp+0x10]
  4219d7:	mov    eax,ebx
  4219d9:	call   0x42068c
  4219de:	mov    eax,DWORD PTR [ebp+0xc]
  4219e1:	cmp    eax,0xffff
  4219e6:	jbe    0x4219ed
  4219e8:	call   0x403f68
  4219ed:	push   eax
  4219ee:	mov    eax,ds:0x46dbb0
  4219f3:	mov    eax,DWORD PTR [eax]
  4219f5:	call   eax
  4219f7:	mov    WORD PTR [ebp-0x2e],ax
  4219fb:	push   0x1c
  4219fd:	lea    eax,[ebp-0x30]
  421a00:	push   eax
  421a01:	mov    eax,DWORD PTR [ebp+0x14]
  421a04:	push   eax
  421a05:	push   edi
  421a06:	mov    eax,DWORD PTR [ebp-0x4]
  421a09:	push   eax
  421a0a:	push   esi
  421a0b:	mov    eax,ds:0x46db6c
  421a10:	mov    eax,DWORD PTR [eax]
  421a12:	call   eax
  421a14:	mov    esi,eax
  421a16:	jmp    0x421a21
  421a18:	xor    esi,esi
  421a1a:	mov    eax,ebx
  421a1c:	call   0x420d70
  421a21:	cmp    esi,0xffffffff
  421a24:	jne    0x421a63
  421a26:	mov    eax,ebx
  421a28:	mov    edx,DWORD PTR [eax]
  421a2a:	call   DWORD PTR [edx+0xc8]
  421a30:	cmp    eax,0x2738
  421a35:	jne    0x421a5a
  421a37:	lea    edx,[ebp-0x34]
  421a3a:	mov    eax,ds:0x46dc4c
  421a3f:	call   0x406f48
  421a44:	mov    ecx,DWORD PTR [ebp-0x34]
  421a47:	mov    dl,0x1
  421a49:	mov    eax,ds:0x41bb44
  421a4e:	call   0x41bdbc
  421a53:	call   0x4048fc
  421a58:	jmp    0x421a88
  421a5a:	mov    eax,ebx
  421a5c:	call   0x4207fc
  421a61:	jmp    0x421a88
  421a63:	cmp    edi,esi
  421a65:	je     0x421a88
  421a67:	lea    edx,[ebp-0x38]
  421a6a:	mov    eax,ds:0x46dde4
  421a6f:	call   0x406f48
  421a74:	mov    ecx,DWORD PTR [ebp-0x38]
  421a77:	mov    dl,0x1
  421a79:	mov    eax,ds:0x41bbac
  421a7e:	call   0x41bdbc
  421a83:	call   0x4048fc
  421a88:	xor    eax,eax
  421a8a:	pop    edx
  421a8b:	pop    ecx
  421a8c:	pop    ecx
  421a8d:	mov    DWORD PTR fs:[eax],edx
  421a90:	push   0x421aaa
  421a95:	lea    eax,[ebp-0x38]
  421a98:	mov    edx,0x2
  421a9d:	call   0x404fac
  421aa2:	ret    
  421aa3:	jmp    0x40481c
  421aa8:	jmp    0x421a95
  421aaa:	pop    edi
  421aab:	pop    esi
  421aac:	pop    ebx
  421aad:	mov    esp,ebp
  421aaf:	pop    ebp
  421ab0:	ret    0x14
  421ab3:	nop
  421ab4:	push   ebp
  421ab5:	mov    ebp,esp
  421ab7:	push   ebx
  421ab8:	push   esi
  421ab9:	push   edi
  421aba:	mov    edi,ecx
  421abc:	mov    esi,edx
  421abe:	mov    ebx,eax
  421ac0:	push   0x4
  421ac2:	lea    eax,[ebp+0x8]
  421ac5:	push   eax
  421ac6:	mov    eax,DWORD PTR [ebp+0xc]
  421ac9:	push   eax
  421aca:	push   edi
  421acb:	push   esi
  421acc:	mov    eax,ds:0x46db08
  421ad1:	mov    eax,DWORD PTR [eax]
  421ad3:	call   eax
  421ad5:	mov    edx,eax
  421ad7:	mov    eax,ebx
  421ad9:	call   0x420814
  421ade:	pop    edi
  421adf:	pop    esi
  421ae0:	pop    ebx
  421ae1:	pop    ebp
  421ae2:	ret    0x8
  421ae5:	lea    eax,[eax+0x0]
  421ae8:	push   ebx
  421ae9:	mov    ebx,eax
  421aeb:	cmp    DWORD PTR [ebx+0xc],0x0
  421aef:	jne    0x421b00
  421af1:	mov    dl,0x1
  421af3:	mov    eax,ds:0x412cf0
  421af8:	call   0x404070
  421afd:	mov    DWORD PTR [ebx+0xc],eax
  421b00:	mov    eax,ebx
  421b02:	mov    edx,DWORD PTR [eax]
  421b04:	call   DWORD PTR [edx+0x8]
  421b07:	mov    eax,DWORD PTR [ebx+0xc]
  421b0a:	pop    ebx
  421b0b:	ret    
  421b0c:	mov    eax,ds:0x46de20
  421b11:	mov    eax,DWORD PTR [eax]
  421b13:	call   eax
  421b15:	ret    
  421b16:	mov    eax,eax
  421b18:	push   ebp
  421b19:	mov    ebp,esp
  421b1b:	mov    eax,DWORD PTR [ebp+0xc]
  421b1e:	cmp    BYTE PTR [ebp+0x8],0x0
  421b22:	je     0x421b38
  421b24:	push   0x1
  421b26:	push   0x0
  421b28:	push   0x0
  421b2a:	push   eax
  421b2b:	push   ecx
  421b2c:	push   edx
  421b2d:	mov    eax,ds:0x46da24
  421b32:	mov    eax,DWORD PTR [eax]
  421b34:	call   eax
  421b36:	jmp    0x421b44
  421b38:	push   eax
  421b39:	push   ecx
  421b3a:	push   edx
  421b3b:	mov    eax,ds:0x46dafc
  421b40:	mov    eax,DWORD PTR [eax]
  421b42:	call   eax
  421b44:	pop    ebp
  421b45:	ret    0x8
  421b48:	push   ebp
  421b49:	mov    ebp,esp
  421b4b:	add    esp,0xfffffff0
  421b4e:	push   ebx
  421b4f:	push   esi
  421b50:	push   edi
  421b51:	xor    ecx,ecx
  421b53:	mov    DWORD PTR [ebp-0x10],ecx
  421b56:	mov    DWORD PTR [ebp-0x4],edx
  421b59:	xor    eax,eax
  421b5b:	push   ebp
  421b5c:	push   0x421c26
  421b61:	push   DWORD PTR fs:[eax]
  421b64:	mov    DWORD PTR fs:[eax],esp
  421b67:	push   0x0
  421b69:	mov    eax,DWORD PTR [ebp-0x4]
  421b6c:	call   0x405418
  421b71:	push   eax
  421b72:	mov    eax,ds:0x46db14
  421b77:	mov    eax,DWORD PTR [eax]
  421b79:	call   eax
  421b7b:	mov    ebx,eax
  421b7d:	test   ebx,ebx
  421b7f:	je     0x421ba2
  421b81:	movsx  eax,WORD PTR [ebx+0x8]
  421b85:	cmp    eax,0xffff
  421b8a:	jbe    0x421b91
  421b8c:	call   0x403f68
  421b91:	push   eax
  421b92:	mov    eax,ds:0x46dbb4
  421b97:	mov    eax,DWORD PTR [eax]
  421b99:	call   eax
  421b9b:	movzx  eax,ax
  421b9e:	mov    ebx,eax
  421ba0:	jmp    0x421c10
  421ba2:	xor    eax,eax
  421ba4:	push   ebp
  421ba5:	push   0x421bc9
  421baa:	push   DWORD PTR fs:[eax]
  421bad:	mov    DWORD PTR fs:[eax],esp
  421bb0:	mov    edx,DWORD PTR [ebp-0x4]
  421bb3:	mov    eax,ds:0x41be90
  421bb8:	call   0x41b200
  421bbd:	mov    ebx,eax
  421bbf:	xor    eax,eax
  421bc1:	pop    edx
  421bc2:	pop    ecx
  421bc3:	pop    ecx
  421bc4:	mov    DWORD PTR fs:[eax],edx
  421bc7:	jmp    0x421c10
  421bc9:	jmp    0x404694
  421bce:	add    DWORD PTR [eax],eax
  421bd0:	add    BYTE PTR [eax],al
  421bd2:	clc    
  421bd3:	jl     0x421c15
  421bd5:	add    dl,bl
  421bd7:	sbb    eax,DWORD PTR [edx+0x0]
  421bda:	mov    eax,DWORD PTR [ebp-0x4]
  421bdd:	mov    DWORD PTR [ebp-0xc],eax
  421be0:	mov    BYTE PTR [ebp-0x8],0xb
  421be4:	lea    eax,[ebp-0xc]
  421be7:	push   eax
  421be8:	push   0x0
  421bea:	lea    edx,[ebp-0x10]
  421bed:	mov    eax,ds:0x46dd00
  421bf2:	call   0x406f48
  421bf7:	mov    ecx,DWORD PTR [ebp-0x10]
  421bfa:	mov    dl,0x1
  421bfc:	mov    eax,ds:0x420380
  421c01:	call   0x40c8f0
  421c06:	call   0x4048fc
  421c0b:	call   0x404978
  421c10:	xor    eax,eax
  421c12:	pop    edx
  421c13:	pop    ecx
  421c14:	pop    ecx
  421c15:	mov    DWORD PTR fs:[eax],edx
  421c18:	push   0x421c2d
  421c1d:	lea    eax,[ebp-0x10]
  421c20:	call   0x404f88
  421c25:	ret    
  421c26:	jmp    0x40481c
  421c2b:	jmp    0x421c1d
  421c2d:	mov    eax,ebx
  421c2f:	pop    edi
  421c30:	pop    esi
  421c31:	pop    ebx
  421c32:	mov    esp,ebp
  421c34:	pop    ebp
  421c35:	ret    
  421c36:	mov    eax,eax
  421c38:	cmp    al,0x1c
  421c3a:	inc    edx
  421c3b:	add    BYTE PTR [ecx],dl
  421c3d:	add    ch,BYTE PTR [esi]
  421c3f:	xor    eax,0x4
  421c44:	add    BYTE PTR [eax],al
  421c46:	add    BYTE PTR [eax],al
  421c48:	(bad)  
  421c49:	(bad)  
  421c4a:	(bad)  
  421c4b:	inc    DWORD PTR [eax]
  421c4d:	add    BYTE PTR [eax],al
  421c4f:	add    BYTE PTR [esi],cl
  421c51:	dec    ecx
  421c52:	fs push ebx
  421c54:	je     0x421cb7
  421c56:	arpl   WORD PTR [ebx+0x57],bp
  421c59:	imul   ebp,DWORD PTR [esi+0x64],0x9073776f
  421c60:	push   ebp
  421c61:	mov    ebp,esp
  421c63:	xor    ecx,ecx
  421c65:	push   ecx
  421c66:	push   ecx
  421c67:	push   ecx
  421c68:	push   ecx
  421c69:	push   ebx
  421c6a:	push   esi
  421c6b:	push   edi
  421c6c:	mov    ebx,edx
  421c6e:	xor    eax,eax
  421c70:	push   ebp
  421c71:	push   0x421d8f
  421c76:	push   DWORD PTR fs:[eax]
  421c79:	mov    DWORD PTR fs:[eax],esp
  421c7c:	mov    dl,0x1
  421c7e:	mov    eax,ds:0x412cf0
  421c83:	call   0x404070
  421c88:	mov    DWORD PTR [ebp-0x8],eax
  421c8b:	lea    eax,[ebp-0x4]
  421c8e:	mov    edx,DWORD PTR ds:0x421c38
  421c94:	call   0x4063bc
  421c99:	xor    eax,eax
  421c9b:	push   ebp
  421c9c:	push   0x421d4f
  421ca1:	push   DWORD PTR fs:[eax]
  421ca4:	mov    DWORD PTR fs:[eax],esp
  421ca7:	push   0x0
  421ca9:	cmp    ebx,0xffff
  421caf:	jbe    0x421cb6
  421cb1:	call   0x403f68
  421cb6:	push   ebx
  421cb7:	mov    eax,ds:0x46dbb0
  421cbc:	mov    eax,DWORD PTR [eax]
  421cbe:	call   eax
  421cc0:	movzx  eax,ax
  421cc3:	push   eax
  421cc4:	mov    eax,ds:0x46ddf0
  421cc9:	mov    eax,DWORD PTR [eax]
  421ccb:	call   eax
  421ccd:	mov    esi,eax
  421ccf:	test   esi,esi
  421cd1:	je     0x421d45
  421cd3:	lea    eax,[ebp-0xc]
  421cd6:	mov    edx,DWORD PTR [esi]
  421cd8:	call   0x405180
  421cdd:	mov    edx,DWORD PTR [ebp-0xc]
  421ce0:	mov    eax,DWORD PTR [ebp-0x8]
  421ce3:	mov    ecx,DWORD PTR [eax]
  421ce5:	call   DWORD PTR [ecx+0x38]
  421ce8:	xor    ebx,ebx
  421cea:	lea    eax,[ebp-0x4]
  421ced:	mov    edx,DWORD PTR [esi+0x4]
  421cf0:	mov    ecx,DWORD PTR ds:0x421c38
  421cf6:	call   0x4063f8
  421cfb:	jmp    0x421d2e
  421cfd:	lea    eax,[ebp-0x10]
  421d00:	mov    edx,DWORD PTR [ebp-0x4]
  421d03:	test   edx,edx
  421d05:	je     0x421d0c
  421d07:	cmp    ebx,DWORD PTR [edx-0x4]
  421d0a:	jb     0x421d11
  421d0c:	call   0x403f68
  421d11:	mov    edx,DWORD PTR [edx+ebx*4]
  421d14:	call   0x405180
  421d19:	mov    edx,DWORD PTR [ebp-0x10]
  421d1c:	mov    eax,DWORD PTR [ebp-0x8]
  421d1f:	mov    ecx,DWORD PTR [eax]
  421d21:	call   DWORD PTR [ecx+0x38]
  421d24:	add    ebx,0x1
  421d27:	jno    0x421d2e
  421d29:	call   0x403f70
  421d2e:	mov    eax,DWORD PTR [ebp-0x4]
  421d31:	test   eax,eax
  421d33:	je     0x421d3a
  421d35:	cmp    ebx,DWORD PTR [eax-0x4]
  421d38:	jb     0x421d3f
  421d3a:	call   0x403f68
  421d3f:	cmp    DWORD PTR [eax+ebx*4],0x0
  421d43:	jne    0x421cfd
  421d45:	xor    eax,eax
  421d47:	pop    edx
  421d48:	pop    ecx
  421d49:	pop    ecx
  421d4a:	mov    DWORD PTR fs:[eax],edx
  421d4d:	jmp    0x421d66
  421d4f:	jmp    0x404568
  421d54:	lea    edx,[ebp-0x8]
  421d57:	mov    eax,ds:0x41be90
  421d5c:	call   0x41b14c
  421d61:	call   0x404978
  421d66:	xor    eax,eax
  421d68:	pop    edx
  421d69:	pop    ecx
  421d6a:	pop    ecx
  421d6b:	mov    DWORD PTR fs:[eax],edx
  421d6e:	push   0x421d96
  421d73:	lea    eax,[ebp-0x10]
  421d76:	mov    edx,0x2
  421d7b:	call   0x404fac
  421d80:	lea    eax,[ebp-0x4]
  421d83:	mov    edx,DWORD PTR ds:0x421c38
  421d89:	call   0x4063bc
  421d8e:	ret    
  421d8f:	jmp    0x40481c
  421d94:	jmp    0x421d73
  421d96:	mov    eax,DWORD PTR [ebp-0x8]
  421d99:	pop    edi
  421d9a:	pop    esi
  421d9b:	pop    ebx
  421d9c:	mov    esp,ebp
  421d9e:	pop    ebp
  421d9f:	ret    
  421da0:	push   edx
  421da1:	mov    eax,ds:0x46dbb0
  421da6:	mov    eax,DWORD PTR [eax]
  421da8:	call   eax
  421daa:	ret    
  421dab:	nop
  421dac:	push   edx
  421dad:	mov    eax,ds:0x46dbb4
  421db2:	mov    eax,DWORD PTR [eax]
  421db4:	call   eax
  421db6:	ret    
  421db7:	nop
  421db8:	push   edx
  421db9:	mov    eax,ds:0x46de6c
  421dbe:	mov    eax,DWORD PTR [eax]
  421dc0:	call   eax
  421dc2:	ret    
  421dc3:	nop
  421dc4:	push   edx
  421dc5:	mov    eax,ds:0x46de68
  421dca:	mov    eax,DWORD PTR [eax]
  421dcc:	call   eax
  421dce:	ret    
  421dcf:	nop
  421dd0:	push   ebp
  421dd1:	mov    ebp,esp
  421dd3:	add    esp,0xfffffff0
  421dd6:	push   ebx
  421dd7:	mov    eax,DWORD PTR [ebp+0x8]
  421dda:	mov    DWORD PTR [ebp-0x10],eax
  421ddd:	mov    eax,DWORD PTR [ebp+0xc]
  421de0:	mov    DWORD PTR [ebp-0xc],eax
  421de3:	mov    eax,DWORD PTR [ebp-0xc]
  421de6:	push   eax
  421de7:	mov    eax,ds:0x46de6c
  421dec:	mov    eax,DWORD PTR [eax]
  421dee:	call   eax
  421df0:	mov    ebx,eax
  421df2:	mov    eax,DWORD PTR [ebp-0x10]
  421df5:	push   eax
  421df6:	mov    eax,ds:0x46de6c
  421dfb:	mov    eax,DWORD PTR [eax]
  421dfd:	call   eax
  421dff:	mov    DWORD PTR [ebp-0xc],eax
  421e02:	mov    DWORD PTR [ebp-0x10],ebx
  421e05:	mov    eax,DWORD PTR [ebp-0x10]
  421e08:	mov    DWORD PTR [ebp-0x8],eax
  421e0b:	mov    eax,DWORD PTR [ebp-0xc]
  421e0e:	mov    DWORD PTR [ebp-0x4],eax
  421e11:	mov    eax,DWORD PTR [ebp-0x8]
  421e14:	mov    edx,DWORD PTR [ebp-0x4]
  421e17:	pop    ebx
  421e18:	mov    esp,ebp
  421e1a:	pop    ebp
  421e1b:	ret    0x8
  421e1e:	mov    eax,eax
  421e20:	push   ebp
  421e21:	mov    ebp,esp
  421e23:	add    esp,0xfffffff0
  421e26:	push   ebx
  421e27:	mov    eax,DWORD PTR [ebp+0x8]
  421e2a:	mov    DWORD PTR [ebp-0x10],eax
  421e2d:	mov    eax,DWORD PTR [ebp+0xc]
  421e30:	mov    DWORD PTR [ebp-0xc],eax
  421e33:	mov    eax,DWORD PTR [ebp-0xc]
  421e36:	push   eax
  421e37:	mov    eax,ds:0x46de68
  421e3c:	mov    eax,DWORD PTR [eax]
  421e3e:	call   eax
  421e40:	mov    ebx,eax
  421e42:	mov    eax,DWORD PTR [ebp-0x10]
  421e45:	push   eax
  421e46:	mov    eax,ds:0x46de68
  421e4b:	mov    eax,DWORD PTR [eax]
  421e4d:	call   eax
  421e4f:	mov    DWORD PTR [ebp-0xc],eax
  421e52:	mov    DWORD PTR [ebp-0x10],ebx
  421e55:	mov    eax,DWORD PTR [ebp-0x10]
  421e58:	mov    DWORD PTR [ebp-0x8],eax
  421e5b:	mov    eax,DWORD PTR [ebp-0xc]
  421e5e:	mov    DWORD PTR [ebp-0x4],eax
  421e61:	mov    eax,DWORD PTR [ebp-0x8]
  421e64:	mov    edx,DWORD PTR [ebp-0x4]
  421e67:	pop    ebx
  421e68:	mov    esp,ebp
  421e6a:	pop    ebp
  421e6b:	ret    0x8
  421e6e:	mov    eax,eax
  421e70:	push   ebp
  421e71:	mov    ebp,esp
  421e73:	add    esp,0xfffffff8
  421e76:	push   ebx
  421e77:	push   esi
  421e78:	xor    edx,edx
  421e7a:	mov    DWORD PTR [ebp-0x8],edx
  421e7d:	mov    ebx,eax
  421e7f:	xor    eax,eax
  421e81:	push   ebp
  421e82:	push   0x421f22
  421e87:	push   DWORD PTR fs:[eax]
  421e8a:	mov    DWORD PTR fs:[eax],esp
  421e8d:	mov    eax,DWORD PTR [ebx+0xc]
  421e90:	mov    edx,DWORD PTR [eax]
  421e92:	call   DWORD PTR [edx+0x44]
  421e95:	mov    eax,DWORD PTR [ebx+0x4]
  421e98:	call   0x405418
  421e9d:	push   eax
  421e9e:	mov    eax,ds:0x46dc24
  421ea3:	mov    eax,DWORD PTR [eax]
  421ea5:	call   eax
  421ea7:	test   eax,eax
  421ea9:	jne    0x421eb7
  421eab:	or     edx,0xffffffff
  421eae:	mov    eax,ebx
  421eb0:	call   0x420814
  421eb5:	jmp    0x421f0c
  421eb7:	mov    eax,DWORD PTR [eax+0xc]
  421eba:	mov    DWORD PTR [ebp-0x4],eax
  421ebd:	xor    esi,esi
  421ebf:	jmp    0x421ef6
  421ec1:	lea    eax,[ebp-0x8]
  421ec4:	push   eax
  421ec5:	cmp    esi,0xfa
  421ecb:	jbe    0x421ed2
  421ecd:	call   0x403f68
  421ed2:	mov    eax,DWORD PTR [ebp-0x4]
  421ed5:	mov    edx,DWORD PTR [eax+esi*4]
  421ed8:	xor    ecx,ecx
  421eda:	mov    eax,ebx
  421edc:	call   0x420528
  421ee1:	mov    edx,DWORD PTR [ebp-0x8]
  421ee4:	mov    eax,DWORD PTR [ebx+0xc]
  421ee7:	mov    ecx,DWORD PTR [eax]
  421ee9:	call   DWORD PTR [ecx+0x38]
  421eec:	add    esi,0x1
  421eef:	jno    0x421ef6
  421ef1:	call   0x403f70
  421ef6:	cmp    esi,0xfa
  421efc:	jbe    0x421f03
  421efe:	call   0x403f68
  421f03:	mov    eax,DWORD PTR [ebp-0x4]
  421f06:	cmp    DWORD PTR [eax+esi*4],0x0
  421f0a:	jne    0x421ec1
  421f0c:	xor    eax,eax
  421f0e:	pop    edx
  421f0f:	pop    ecx
  421f10:	pop    ecx
  421f11:	mov    DWORD PTR fs:[eax],edx
  421f14:	push   0x421f29
  421f19:	lea    eax,[ebp-0x8]
  421f1c:	call   0x404f88
  421f21:	ret    
  421f22:	jmp    0x40481c
  421f27:	jmp    0x421f19
  421f29:	pop    esi
  421f2a:	pop    ebx
  421f2b:	pop    ecx
  421f2c:	pop    ecx
  421f2d:	pop    ebp
  421f2e:	ret    
  421f2f:	nop
  421f30:	push   ebx
  421f31:	push   esi
  421f32:	mov    esi,edx
  421f34:	mov    ebx,eax
  421f36:	mov    eax,ebx
  421f38:	mov    edx,DWORD PTR [eax]
  421f3a:	call   DWORD PTR [edx+0x10]
  421f3d:	mov    ecx,esi
  421f3f:	xor    edx,edx
  421f41:	mov    ebx,DWORD PTR [eax]
  421f43:	call   DWORD PTR [ebx+0xc]
  421f46:	pop    esi
  421f47:	pop    ebx
  421f48:	ret    
  421f49:	lea    eax,[eax+0x0]
  421f4c:	push   ebp
  421f4d:	mov    ebp,esp
  421f4f:	add    esp,0xfffffff4
  421f52:	push   ebx
  421f53:	mov    DWORD PTR [ebp-0x4],edx
  421f56:	mov    ebx,eax
  421f58:	mov    eax,DWORD PTR [ebp-0x4]
  421f5b:	call   0x405408
  421f60:	xor    eax,eax
  421f62:	push   ebp
  421f63:	push   0x422002
  421f68:	push   DWORD PTR fs:[eax]
  421f6b:	mov    DWORD PTR fs:[eax],esp
  421f6e:	xor    eax,eax
  421f70:	mov    DWORD PTR [ebp-0x8],eax
  421f73:	push   0x0
  421f75:	push   0x8000080
  421f7a:	push   0x3
  421f7c:	push   0x0
  421f7e:	push   0x1
  421f80:	push   0x80000000
  421f85:	mov    eax,DWORD PTR [ebp-0x4]
  421f88:	call   0x405418
  421f8d:	push   eax
  421f8e:	call   0x407168
  421f93:	mov    DWORD PTR [ebp-0xc],eax
  421f96:	xor    eax,eax
  421f98:	push   ebp
  421f99:	push   0x421fe5
  421f9e:	push   DWORD PTR fs:[eax]
  421fa1:	mov    DWORD PTR fs:[eax],esp
  421fa4:	push   0x0
  421fa6:	push   0x0
  421fa8:	push   0x0
  421faa:	push   0x0
  421fac:	push   0x0
  421fae:	mov    eax,DWORD PTR [ebp-0xc]
  421fb1:	push   eax
  421fb2:	push   ebx
  421fb3:	mov    eax,ds:0x46dc8c
  421fb8:	mov    eax,DWORD PTR [eax]
  421fba:	call   eax
  421fbc:	test   eax,eax
  421fbe:	je     0x421fce
  421fc0:	push   0x0
  421fc2:	mov    eax,DWORD PTR [ebp-0xc]
  421fc5:	push   eax
  421fc6:	call   0x407220
  421fcb:	mov    DWORD PTR [ebp-0x8],eax
  421fce:	xor    eax,eax
  421fd0:	pop    edx
  421fd1:	pop    ecx
  421fd2:	pop    ecx
  421fd3:	mov    DWORD PTR fs:[eax],edx
  421fd6:	push   0x421fec
  421fdb:	mov    eax,DWORD PTR [ebp-0xc]
  421fde:	push   eax
  421fdf:	call   0x407140
  421fe4:	ret    
  421fe5:	jmp    0x40481c
  421fea:	jmp    0x421fdb
  421fec:	xor    eax,eax
  421fee:	pop    edx
  421fef:	pop    ecx
  421ff0:	pop    ecx
  421ff1:	mov    DWORD PTR fs:[eax],edx
  421ff4:	push   0x422009
  421ff9:	lea    eax,[ebp-0x4]
  421ffc:	call   0x404f88
  422001:	ret    
  422002:	jmp    0x40481c
  422007:	jmp    0x421ff9
  422009:	mov    eax,DWORD PTR [ebp-0x8]
  42200c:	pop    ebx
  42200d:	mov    esp,ebp
  42200f:	pop    ebp
  422010:	ret    
  422011:	lea    eax,[eax+0x0]
  422014:	push   ecx
  422015:	push   edx
  422016:	mov    eax,ds:0x46da48
  42201b:	mov    eax,DWORD PTR [eax]
  42201d:	call   eax
  42201f:	ret    
  422020:	push   ebp
  422021:	mov    ebp,esp
  422023:	add    esp,0xffffffd8
  422026:	push   ebx
  422027:	push   esi
  422028:	push   edi
  422029:	xor    ebx,ebx
  42202b:	mov    DWORD PTR [ebp-0x28],ebx
  42202e:	mov    DWORD PTR [ebp-0x24],ebx
  422031:	mov    edi,ecx
  422033:	mov    esi,edx
  422035:	mov    ebx,eax
  422037:	xor    eax,eax
  422039:	push   ebp
  42203a:	push   0x422105
  42203f:	push   DWORD PTR fs:[eax]
  422042:	mov    DWORD PTR fs:[eax],esp
  422045:	mov    DWORD PTR [ebp-0x4],0x1c
  42204c:	lea    eax,[ebp-0x4]
  42204f:	push   eax
  422050:	lea    eax,[ebp-0x20]
  422053:	push   eax
  422054:	push   esi
  422055:	mov    eax,ds:0x46da84
  42205a:	mov    eax,DWORD PTR [eax]
  42205c:	call   eax
  42205e:	mov    edx,eax
  422060:	mov    eax,ebx
  422062:	call   0x420814
  422067:	movzx  eax,WORD PTR [ebp-0x20]
  42206b:	sub    ax,0x2
  42206f:	je     0x422079
  422071:	sub    ax,0x15
  422075:	je     0x4220b1
  422077:	jmp    0x4220e3
  422079:	lea    eax,[ebp-0x24]
  42207c:	push   eax
  42207d:	lea    eax,[ebp-0x20]
  422080:	lea    edx,[eax+0x4]
  422083:	xor    ecx,ecx
  422085:	mov    eax,ebx
  422087:	call   0x420528
  42208c:	mov    edx,DWORD PTR [ebp-0x24]
  42208f:	mov    eax,edi
  422091:	call   0x404fdc
  422096:	lea    eax,[ebp-0x20]
  422099:	movzx  eax,WORD PTR [eax+0x2]
  42209d:	push   eax
  42209e:	mov    eax,ds:0x46dbb4
  4220a3:	mov    eax,DWORD PTR [eax]
  4220a5:	call   eax
  4220a7:	movzx  eax,ax
  4220aa:	mov    edx,DWORD PTR [ebp+0x8]
  4220ad:	mov    DWORD PTR [edx],eax
  4220af:	jmp    0x4220ea
  4220b1:	lea    eax,[ebp-0x28]
  4220b4:	push   eax
  4220b5:	lea    edx,[ebp-0x18]
  4220b8:	mov    cl,0x1
  4220ba:	mov    eax,ebx
  4220bc:	call   0x420528
  4220c1:	mov    edx,DWORD PTR [ebp-0x28]
  4220c4:	mov    eax,edi
  4220c6:	call   0x404fdc
  4220cb:	movzx  eax,WORD PTR [ebp-0x1e]
  4220cf:	push   eax
  4220d0:	mov    eax,ds:0x46dbb4
  4220d5:	mov    eax,DWORD PTR [eax]
  4220d7:	call   eax
  4220d9:	movzx  eax,ax
  4220dc:	mov    edx,DWORD PTR [ebp+0x8]
  4220df:	mov    DWORD PTR [edx],eax
  4220e1:	jmp    0x4220ea
  4220e3:	mov    eax,ebx
  4220e5:	call   0x420d70
  4220ea:	xor    eax,eax
  4220ec:	pop    edx
  4220ed:	pop    ecx
  4220ee:	pop    ecx
  4220ef:	mov    DWORD PTR fs:[eax],edx
  4220f2:	push   0x42210c
  4220f7:	lea    eax,[ebp-0x28]
  4220fa:	mov    edx,0x2
  4220ff:	call   0x404fac
  422104:	ret    
  422105:	jmp    0x40481c
  42210a:	jmp    0x4220f7
  42210c:	pop    edi
  42210d:	pop    esi
  42210e:	pop    ebx
  42210f:	mov    esp,ebp
  422111:	pop    ebp
  422112:	ret    0x4
  422115:	lea    eax,[eax+0x0]
  422118:	push   ebp
  422119:	mov    ebp,esp
  42211b:	push   ebx
  42211c:	push   esi
  42211d:	push   edi
  42211e:	mov    edi,ecx
  422120:	mov    esi,edx
  422122:	mov    ebx,eax
  422124:	mov    eax,DWORD PTR [ebp+0x8]
  422127:	push   eax
  422128:	mov    eax,DWORD PTR [ebp+0xc]
  42212b:	push   eax
  42212c:	mov    eax,DWORD PTR [ebp+0x10]
  42212f:	push   eax
  422130:	push   edi
  422131:	push   esi
  422132:	mov    eax,ds:0x46dd70
  422137:	mov    eax,DWORD PTR [eax]
  422139:	call   eax
  42213b:	mov    edx,eax
  42213d:	mov    eax,ebx
  42213f:	call   0x420814
  422144:	pop    edi
  422145:	pop    esi
  422146:	pop    ebx
  422147:	pop    ebp
  422148:	ret    0xc
  42214b:	nop
  42214c:	push   ebp
  42214d:	mov    ebp,esp
  42214f:	add    esp,0xfffffff8
  422152:	push   ebx
  422153:	xor    ecx,ecx
  422155:	mov    DWORD PTR [ebp-0x8],ecx
  422158:	mov    ebx,edx
  42215a:	mov    DWORD PTR [ebp-0x4],eax
  42215d:	xor    eax,eax
  42215f:	push   ebp
  422160:	push   0x422203
  422165:	push   DWORD PTR fs:[eax]
  422168:	mov    DWORD PTR fs:[eax],esp
  42216b:	mov    eax,DWORD PTR [ebp-0x4]
  42216e:	call   0x423690
  422173:	xor    eax,eax
  422175:	push   ebp
  422176:	push   0x4221e6
  42217b:	push   DWORD PTR fs:[eax]
  42217e:	mov    DWORD PTR fs:[eax],esp
  422181:	mov    eax,DWORD PTR [ebp-0x4]
  422184:	cmp    DWORD PTR [eax+0x8],0x40
  422188:	jl     0x4221ab
  42218a:	lea    edx,[ebp-0x8]
  42218d:	mov    eax,ds:0x46da98
  422192:	call   0x406f48
  422197:	mov    ecx,DWORD PTR [ebp-0x8]
  42219a:	mov    dl,0x1
  42219c:	mov    eax,ds:0x420458
  4221a1:	call   0x41bdbc
  4221a6:	call   0x4048fc
  4221ab:	mov    eax,DWORD PTR [ebp-0x4]
  4221ae:	mov    eax,DWORD PTR [eax+0x8]
  4221b1:	cmp    eax,0x3f
  4221b4:	jbe    0x4221bb
  4221b6:	call   0x403f68
  4221bb:	mov    edx,DWORD PTR [ebp-0x4]
  4221be:	mov    DWORD PTR [edx+eax*4+0xc],ebx
  4221c2:	mov    eax,DWORD PTR [ebp-0x4]
  4221c5:	add    DWORD PTR [eax+0x8],0x1
  4221c9:	jno    0x4221d0
  4221cb:	call   0x403f70
  4221d0:	xor    eax,eax
  4221d2:	pop    edx
  4221d3:	pop    ecx
  4221d4:	pop    ecx
  4221d5:	mov    DWORD PTR fs:[eax],edx
  4221d8:	push   0x4221ed
  4221dd:	mov    eax,DWORD PTR [ebp-0x4]
  4221e0:	call   0x4236a4
  4221e5:	ret    
  4221e6:	jmp    0x40481c
  4221eb:	jmp    0x4221dd
  4221ed:	xor    eax,eax
  4221ef:	pop    edx
  4221f0:	pop    ecx
  4221f1:	pop    ecx
  4221f2:	mov    DWORD PTR fs:[eax],edx
  4221f5:	push   0x42220a
  4221fa:	lea    eax,[ebp-0x8]
  4221fd:	call   0x404f88
  422202:	ret    
  422203:	jmp    0x40481c
  422208:	jmp    0x4221fa
  42220a:	pop    ebx
  42220b:	pop    ecx
  42220c:	pop    ecx
  42220d:	pop    ebp
  42220e:	ret    
  42220f:	nop
  422210:	push   ebp
  422211:	mov    ebp,esp
  422213:	push   ecx
  422214:	mov    DWORD PTR [ebp-0x4],eax
  422217:	mov    eax,DWORD PTR [ebp-0x4]
  42221a:	call   0x423690
  42221f:	xor    eax,eax
  422221:	push   ebp
  422222:	push   0x42224e
  422227:	push   DWORD PTR fs:[eax]
  42222a:	mov    DWORD PTR fs:[eax],esp
  42222d:	mov    eax,DWORD PTR [ebp-0x4]
  422230:	add    eax,0x8
  422233:	call   0x41fe74
  422238:	xor    eax,eax
  42223a:	pop    edx
  42223b:	pop    ecx
  42223c:	pop    ecx
  42223d:	mov    DWORD PTR fs:[eax],edx
  422240:	push   0x422255
  422245:	mov    eax,DWORD PTR [ebp-0x4]
  422248:	call   0x4236a4
  42224d:	ret    
  42224e:	jmp    0x40481c
  422253:	jmp    0x422245
  422255:	pop    ecx
  422256:	pop    ebp
  422257:	ret    
  422258:	push   ebp
  422259:	mov    ebp,esp
  42225b:	add    esp,0xfffffff8
  42225e:	push   ebx
  42225f:	mov    ebx,edx
  422261:	mov    DWORD PTR [ebp-0x4],eax
  422264:	mov    eax,DWORD PTR [ebp-0x4]
  422267:	call   0x423690
  42226c:	xor    eax,eax
  42226e:	push   ebp
  42226f:	push   0x4222a0
  422274:	push   DWORD PTR fs:[eax]
  422277:	mov    DWORD PTR fs:[eax],esp
  42227a:	mov    eax,DWORD PTR [ebp-0x4]
  42227d:	lea    edx,[eax+0x8]
  422280:	mov    eax,ebx
  422282:	call   0x41fe5c
  422287:	mov    BYTE PTR [ebp-0x5],al
  42228a:	xor    eax,eax
  42228c:	pop    edx
  42228d:	pop    ecx
  42228e:	pop    ecx
  42228f:	mov    DWORD PTR fs:[eax],edx
  422292:	push   0x4222a7
  422297:	mov    eax,DWORD PTR [ebp-0x4]
  42229a:	call   0x4236a4
  42229f:	ret    
  4222a0:	jmp    0x40481c
  4222a5:	jmp    0x422297
  4222a7:	movzx  eax,BYTE PTR [ebp-0x5]
  4222ab:	pop    ebx
  4222ac:	pop    ecx
  4222ad:	pop    ecx
  4222ae:	pop    ebp
  4222af:	ret    
  4222b0:	push   ebp
  4222b1:	mov    ebp,esp
  4222b3:	add    esp,0xfffffff8
  4222b6:	mov    DWORD PTR [ebp-0x4],eax
  4222b9:	mov    eax,DWORD PTR [ebp-0x4]
  4222bc:	call   0x423690
  4222c1:	xor    eax,eax
  4222c3:	push   ebp
  4222c4:	push   0x4222ee
  4222c9:	push   DWORD PTR fs:[eax]
  4222cc:	mov    DWORD PTR fs:[eax],esp
  4222cf:	mov    eax,DWORD PTR [ebp-0x4]
  4222d2:	mov    eax,DWORD PTR [eax+0x8]
  4222d5:	mov    DWORD PTR [ebp-0x8],eax
  4222d8:	xor    eax,eax
  4222da:	pop    edx
  4222db:	pop    ecx
  4222dc:	pop    ecx
  4222dd:	mov    DWORD PTR fs:[eax],edx
  4222e0:	push   0x4222f5
  4222e5:	mov    eax,DWORD PTR [ebp-0x4]
  4222e8:	call   0x4236a4
  4222ed:	ret    
  4222ee:	jmp    0x40481c
  4222f3:	jmp    0x4222e5
  4222f5:	mov    eax,DWORD PTR [ebp-0x8]
  4222f8:	pop    ecx
  4222f9:	pop    ecx
  4222fa:	pop    ebp
  4222fb:	ret    
  4222fc:	push   ebp
  4222fd:	mov    ebp,esp
  4222ff:	add    esp,0xfffffff4
  422302:	push   ebx
  422303:	xor    ecx,ecx
  422305:	mov    DWORD PTR [ebp-0xc],ecx
  422308:	mov    ebx,edx
  42230a:	mov    DWORD PTR [ebp-0x4],eax
  42230d:	xor    eax,eax
  42230f:	push   ebp
  422310:	push   0x4223ac
  422315:	push   DWORD PTR fs:[eax]
  422318:	mov    DWORD PTR fs:[eax],esp
  42231b:	xor    eax,eax
  42231d:	mov    DWORD PTR [ebp-0x8],eax
  422320:	mov    eax,DWORD PTR [ebp-0x4]
  422323:	call   0x423690
  422328:	xor    eax,eax
  42232a:	push   ebp
  42232b:	push   0x42238f
  422330:	push   DWORD PTR fs:[eax]
  422333:	mov    DWORD PTR fs:[eax],esp
  422336:	test   ebx,ebx
  422338:	jl     0x422358
  42233a:	mov    eax,DWORD PTR [ebp-0x4]
  42233d:	cmp    ebx,DWORD PTR [eax+0x8]
  422340:	jge    0x422358
  422342:	cmp    ebx,0x3f
  422345:	jbe    0x42234c
  422347:	call   0x403f68
  42234c:	mov    eax,DWORD PTR [ebp-0x4]
  42234f:	mov    eax,DWORD PTR [eax+ebx*4+0xc]
  422353:	mov    DWORD PTR [ebp-0x8],eax
  422356:	jmp    0x422379
  422358:	lea    edx,[ebp-0xc]
  42235b:	mov    eax,ds:0x46da98
  422360:	call   0x406f48
  422365:	mov    ecx,DWORD PTR [ebp-0xc]
  422368:	mov    dl,0x1
  42236a:	mov    eax,ds:0x420458
  42236f:	call   0x41bdbc
  422374:	call   0x4048fc
  422379:	xor    eax,eax
  42237b:	pop    edx
  42237c:	pop    ecx
  42237d:	pop    ecx
  42237e:	mov    DWORD PTR fs:[eax],edx
  422381:	push   0x422396
  422386:	mov    eax,DWORD PTR [ebp-0x4]
  422389:	call   0x4236a4
  42238e:	ret    
  42238f:	jmp    0x40481c
  422394:	jmp    0x422386
  422396:	xor    eax,eax
  422398:	pop    edx
  422399:	pop    ecx
  42239a:	pop    ecx
  42239b:	mov    DWORD PTR fs:[eax],edx
  42239e:	push   0x4223b3
  4223a3:	lea    eax,[ebp-0xc]
  4223a6:	call   0x404f88
  4223ab:	ret    
  4223ac:	jmp    0x40481c
  4223b1:	jmp    0x4223a3
  4223b3:	mov    eax,DWORD PTR [ebp-0x8]
  4223b6:	pop    ebx
  4223b7:	mov    esp,ebp
  4223b9:	pop    ebp
  4223ba:	ret    
  4223bb:	nop
  4223bc:	push   ebp
  4223bd:	mov    ebp,esp
  4223bf:	push   ecx
  4223c0:	push   ebx
  4223c1:	push   esi
  4223c2:	mov    esi,edx
  4223c4:	mov    DWORD PTR [ebp-0x4],eax
  4223c7:	mov    eax,DWORD PTR [ebp-0x4]
  4223ca:	call   0x423690
  4223cf:	xor    ebx,ebx
  4223d1:	push   ebp
  4223d2:	push   0x422474
  4223d7:	push   DWORD PTR fs:[ebx]
  4223da:	mov    DWORD PTR fs:[ebx],esp
  4223dd:	mov    eax,DWORD PTR [ebp-0x4]
  4223e0:	mov    edx,DWORD PTR [eax+0x8]
  4223e3:	sub    edx,0x1
  4223e6:	jno    0x4223ed
  4223e8:	call   0x403f70
  4223ed:	test   edx,edx
  4223ef:	jl     0x42245e
  4223f1:	inc    edx
  4223f2:	xor    eax,eax
  4223f4:	mov    ecx,eax
  4223f6:	cmp    ecx,0x3f
  4223f9:	jbe    0x422400
  4223fb:	call   0x403f68
  422400:	mov    ebx,DWORD PTR [ebp-0x4]
  422403:	cmp    esi,DWORD PTR [ebx+ecx*4+0xc]
  422407:	jne    0x42245a
  422409:	mov    edx,DWORD PTR [ebp-0x4]
  42240c:	sub    DWORD PTR [edx+0x8],0x1
  422410:	jno    0x422417
  422412:	call   0x403f70
  422417:	mov    edx,DWORD PTR [ebp-0x4]
  42241a:	mov    edx,DWORD PTR [edx+0x8]
  42241d:	cmp    edx,0x3f
  422420:	jbe    0x422427
  422422:	call   0x403f68
  422427:	mov    ebx,DWORD PTR [ebp-0x4]
  42242a:	mov    edx,DWORD PTR [ebx+edx*4+0xc]
  42242e:	cmp    eax,0x3f
  422431:	jbe    0x422438
  422433:	call   0x403f68
  422438:	mov    ebx,DWORD PTR [ebp-0x4]
  42243b:	mov    DWORD PTR [ebx+ecx*4+0xc],edx
  42243f:	mov    edx,DWORD PTR [ebp-0x4]
  422442:	mov    edx,DWORD PTR [edx+0x8]
  422445:	cmp    edx,0x3f
  422448:	jbe    0x42244f
  42244a:	call   0x403f68
  42244f:	mov    ecx,DWORD PTR [ebp-0x4]
  422452:	xor    ebx,ebx
  422454:	mov    DWORD PTR [ecx+edx*4+0xc],ebx
  422458:	jmp    0x42245e
  42245a:	inc    eax
  42245b:	dec    edx
  42245c:	jne    0x4223f4
  42245e:	xor    eax,eax
  422460:	pop    edx
  422461:	pop    ecx
  422462:	pop    ecx
  422463:	mov    DWORD PTR fs:[eax],edx
  422466:	push   0x42247b
  42246b:	mov    eax,DWORD PTR [ebp-0x4]
  42246e:	call   0x4236a4
  422473:	ret    
  422474:	jmp    0x40481c
  422479:	jmp    0x42246b
  42247b:	pop    esi
  42247c:	pop    ebx
  42247d:	pop    ecx
  42247e:	pop    ebp
  42247f:	ret    
  422480:	push   ebp
  422481:	mov    ebp,esp
  422483:	add    esp,0xffffffe8
  422486:	push   ebx
  422487:	push   esi
  422488:	push   edi
  422489:	xor    ebx,ebx
  42248b:	mov    DWORD PTR [ebp-0x4],ebx
  42248e:	mov    DWORD PTR [ebp-0x8],ebx
  422491:	mov    ebx,ecx
  422493:	mov    esi,edx
  422495:	mov    edi,eax
  422497:	xor    eax,eax
  422499:	push   ebp
  42249a:	push   0x422523
  42249f:	push   DWORD PTR fs:[eax]
  4224a2:	mov    DWORD PTR fs:[eax],esp
  4224a5:	mov    eax,esi
  4224a7:	sub    eax,0x2af9
  4224ac:	jne    0x4224bc
  4224ae:	mov    edx,ebx
  4224b0:	mov    eax,ds:0x46db04
  4224b5:	call   0x406f48
  4224ba:	jmp    0x4224c9
  4224bc:	mov    ecx,ebx
  4224be:	mov    edx,esi
  4224c0:	mov    eax,edi
  4224c2:	call   0x420964
  4224c7:	jmp    0x422508
  4224c9:	push   0x1
  4224cb:	lea    eax,[ebp-0x4]
  4224ce:	push   eax
  4224cf:	lea    edx,[ebp-0x8]
  4224d2:	mov    eax,ds:0x46da4c
  4224d7:	call   0x406f48
  4224dc:	mov    eax,DWORD PTR [ebp-0x8]
  4224df:	push   eax
  4224e0:	mov    DWORD PTR [ebp-0x18],esi
  4224e3:	mov    BYTE PTR [ebp-0x14],0x0
  4224e7:	mov    eax,DWORD PTR [ebx]
  4224e9:	mov    DWORD PTR [ebp-0x10],eax
  4224ec:	mov    BYTE PTR [ebp-0xc],0xb
  4224f0:	lea    ecx,[ebp-0x18]
  4224f3:	mov    eax,ds:0x41be90
  4224f8:	pop    edx
  4224f9:	call   0x41b0d4
  4224fe:	mov    edx,DWORD PTR [ebp-0x4]
  422501:	mov    eax,ebx
  422503:	call   0x404fdc
  422508:	xor    eax,eax
  42250a:	pop    edx
  42250b:	pop    ecx
  42250c:	pop    ecx
  42250d:	mov    DWORD PTR fs:[eax],edx
  422510:	push   0x42252a
  422515:	lea    eax,[ebp-0x8]
  422518:	mov    edx,0x2
  42251d:	call   0x404fac
  422522:	ret    
  422523:	jmp    0x40481c
  422528:	jmp    0x422515
  42252a:	pop    edi
  42252b:	pop    esi
  42252c:	pop    ebx
  42252d:	mov    esp,ebp
  42252f:	pop    ebp
  422530:	ret    
  422531:	lea    eax,[eax+0x0]
  422534:	push   ebx
  422535:	push   esi
  422536:	add    esp,0xfffffefc
  42253c:	mov    esi,edx
  42253e:	mov    ebx,eax
  422540:	mov    edx,esp
  422542:	mov    eax,ebx
  422544:	call   0x42276c
  422549:	push   0x0
  42254b:	push   esi
  42254c:	lea    edx,[esp+0x8]
  422550:	xor    ecx,ecx
  422552:	mov    eax,DWORD PTR [ebx]
  422554:	call   0x42256c
  422559:	cmp    DWORD PTR [esp],0x0
  42255d:	setg   al
  422560:	add    esp,0x104
  422566:	pop    esi
  422567:	pop    ebx
  422568:	ret    
  422569:	lea    eax,[eax+0x0]
  42256c:	push   ebp
  42256d:	mov    ebp,esp
  42256f:	add    esp,0xfffffff8
  422572:	push   ebx
  422573:	push   esi
  422574:	push   edi
  422575:	mov    esi,edx
  422577:	mov    ebx,DWORD PTR [ebp+0x8]
  42257a:	mov    edi,DWORD PTR [ebp+0xc]
  42257d:	cmp    ebx,0xfffffffe
  422580:	jne    0x422596
  422582:	push   0x0
  422584:	push   edi
  422585:	push   ecx
  422586:	push   esi
  422587:	push   0x0
  422589:	mov    eax,ds:0x46dea4
  42258e:	mov    eax,DWORD PTR [eax]
  422590:	call   eax
  422592:	mov    ebx,eax
  422594:	jmp    0x4225d3
  422596:	mov    eax,ebx
  422598:	push   ecx
  422599:	mov    ecx,0x3e8
  42259e:	cdq    
  42259f:	idiv   ecx
  4225a1:	pop    ecx
  4225a2:	mov    DWORD PTR [ebp-0x8],eax
  4225a5:	mov    eax,ebx
  4225a7:	mov    ebx,0x3e8
  4225ac:	cdq    
  4225ad:	idiv   ebx
  4225af:	imul   eax,edx,0x3e8
  4225b5:	jno    0x4225bc
  4225b7:	call   0x403f70
  4225bc:	mov    DWORD PTR [ebp-0x4],eax
  4225bf:	lea    eax,[ebp-0x8]
  4225c2:	push   eax
  4225c3:	push   edi
  4225c4:	push   ecx
  4225c5:	push   esi
  4225c6:	push   0x0
  4225c8:	mov    eax,ds:0x46dea4
  4225cd:	mov    eax,DWORD PTR [eax]
  4225cf:	call   eax
  4225d1:	mov    ebx,eax
  4225d3:	mov    eax,ds:0x46de0c
  4225d8:	mov    eax,DWORD PTR [eax]
  4225da:	mov    edx,DWORD PTR ds:0x4201ec
  4225e0:	call   0x404250
  4225e5:	mov    edx,ebx
  4225e7:	call   0x420814
  4225ec:	test   eax,eax
  4225ee:	setg   al
  4225f1:	pop    edi
  4225f2:	pop    esi
  4225f3:	pop    ebx
  4225f4:	pop    ecx
  4225f5:	pop    ecx
  4225f6:	pop    ebp
  4225f7:	ret    0x8
  4225fa:	mov    eax,eax
  4225fc:	push   ebx
  4225fd:	push   esi
  4225fe:	push   edi
  4225ff:	add    esp,0xfffffefc
  422605:	mov    edi,ecx
  422607:	mov    esi,edx
  422609:	mov    ebx,eax
  42260b:	mov    edx,esp
  42260d:	mov    eax,ebx
  42260f:	call   0x42276c
  422614:	push   0x0
  422616:	push   edi
  422617:	lea    edx,[esp+0x8]
  42261b:	xor    ecx,ecx
  42261d:	mov    eax,DWORD PTR [ebx]
  42261f:	call   0x42256c
  422624:	cmp    DWORD PTR [esp],0x0
  422628:	setg   bl
  42262b:	test   bl,bl
  42262d:	je     0x422649
  42262f:	cmp    DWORD PTR [esi],0x0
  422632:	jne    0x422640
  422634:	mov    eax,ds:0x423424
  422639:	call   0x423650
  42263e:	mov    DWORD PTR [esi],eax
  422640:	mov    edx,esp
  422642:	mov    eax,DWORD PTR [esi]
  422644:	call   0x422718
  422649:	mov    eax,ebx
  42264b:	add    esp,0x104
  422651:	pop    edi
  422652:	pop    esi
  422653:	pop    ebx
  422654:	ret    
  422655:	lea    eax,[eax+0x0]
  422658:	push   ebx
  422659:	push   esi
  42265a:	mov    esi,ecx
  42265c:	mov    ebx,edx
  42265e:	test   eax,eax
  422660:	je     0x42266e
  422662:	mov    edx,ebx
  422664:	call   0x42276c
  422669:	mov    DWORD PTR [esi],ebx
  42266b:	pop    esi
  42266c:	pop    ebx
  42266d:	ret    
  42266e:	xor    eax,eax
  422670:	mov    DWORD PTR [esi],eax
  422672:	pop    esi
  422673:	pop    ebx
  422674:	ret    
  422675:	lea    eax,[eax+0x0]
  422678:	push   ebp
  422679:	mov    ebp,esp
  42267b:	add    esp,0xfffffce0
  422681:	push   ebx
  422682:	push   esi
  422683:	push   edi
  422684:	mov    esi,ecx
  422686:	mov    ebx,edx
  422688:	mov    DWORD PTR [ebp-0x4],eax
  42268b:	mov    edi,DWORD PTR [ebp+0xc]
  42268e:	lea    ecx,[ebp-0xc]
  422691:	lea    edx,[ebp-0x118]
  422697:	mov    eax,ebx
  422699:	call   0x422658
  42269e:	lea    ecx,[ebp-0x10]
  4226a1:	lea    edx,[ebp-0x21c]
  4226a7:	mov    eax,esi
  4226a9:	call   0x422658
  4226ae:	lea    ecx,[ebp-0x14]
  4226b1:	lea    edx,[ebp-0x320]
  4226b7:	mov    eax,edi
  4226b9:	call   0x422658
  4226be:	mov    eax,DWORD PTR [ebp-0x14]
  4226c1:	push   eax
  4226c2:	mov    eax,DWORD PTR [ebp+0x8]
  4226c5:	push   eax
  4226c6:	mov    ecx,DWORD PTR [ebp-0x10]
  4226c9:	mov    edx,DWORD PTR [ebp-0xc]
  4226cc:	mov    eax,DWORD PTR [ebp-0x4]
  4226cf:	call   0x42256c
  4226d4:	mov    BYTE PTR [ebp-0x5],al
  4226d7:	test   ebx,ebx
  4226d9:	je     0x4226e8
  4226db:	lea    edx,[ebp-0x118]
  4226e1:	mov    eax,ebx
  4226e3:	call   0x422718
  4226e8:	test   esi,esi
  4226ea:	je     0x4226f9
  4226ec:	lea    edx,[ebp-0x21c]
  4226f2:	mov    eax,esi
  4226f4:	call   0x422718
  4226f9:	test   edi,edi
  4226fb:	je     0x42270a
  4226fd:	lea    edx,[ebp-0x320]
  422703:	mov    eax,edi
  422705:	call   0x422718
  42270a:	movzx  eax,BYTE PTR [ebp-0x5]
  42270e:	pop    edi
  42270f:	pop    esi
  422710:	pop    ebx
  422711:	mov    esp,ebp
  422713:	pop    ebp
  422714:	ret    0x8
  422717:	nop
  422718:	push   ebp
  422719:	mov    ebp,esp
  42271b:	push   ecx
  42271c:	push   ebx
  42271d:	push   esi
  42271e:	push   edi
  42271f:	mov    ebx,edx
  422721:	mov    DWORD PTR [ebp-0x4],eax
  422724:	mov    eax,DWORD PTR [ebp-0x4]
  422727:	call   0x423690
  42272c:	xor    eax,eax
  42272e:	push   ebp
  42272f:	push   0x42275f
  422734:	push   DWORD PTR fs:[eax]
  422737:	mov    DWORD PTR fs:[eax],esp
  42273a:	mov    eax,DWORD PTR [ebp-0x4]
  42273d:	mov    esi,ebx
  42273f:	lea    edi,[eax+0x8]
  422742:	mov    ecx,0x41
  422747:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422749:	xor    eax,eax
  42274b:	pop    edx
  42274c:	pop    ecx
  42274d:	pop    ecx
  42274e:	mov    DWORD PTR fs:[eax],edx
  422751:	push   0x422766
  422756:	mov    eax,DWORD PTR [ebp-0x4]
  422759:	call   0x4236a4
  42275e:	ret    
  42275f:	jmp    0x40481c
  422764:	jmp    0x422756
  422766:	pop    edi
  422767:	pop    esi
  422768:	pop    ebx
  422769:	pop    ecx
  42276a:	pop    ebp
  42276b:	ret    
  42276c:	push   ebp
  42276d:	mov    ebp,esp
  42276f:	push   ecx
  422770:	push   ebx
  422771:	push   esi
  422772:	push   edi
  422773:	mov    ebx,edx
  422775:	mov    DWORD PTR [ebp-0x4],eax
  422778:	mov    eax,DWORD PTR [ebp-0x4]
  42277b:	call   0x423690
  422780:	xor    eax,eax
  422782:	push   ebp
  422783:	push   0x4227b3
  422788:	push   DWORD PTR fs:[eax]
  42278b:	mov    DWORD PTR fs:[eax],esp
  42278e:	mov    eax,DWORD PTR [ebp-0x4]
  422791:	lea    esi,[eax+0x8]
  422794:	mov    edi,ebx
  422796:	mov    ecx,0x41
  42279b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279d:	xor    eax,eax
  42279f:	pop    edx
  4227a0:	pop    ecx
  4227a1:	pop    ecx
  4227a2:	mov    DWORD PTR fs:[eax],edx
  4227a5:	push   0x4227ba
  4227aa:	mov    eax,DWORD PTR [ebp-0x4]
  4227ad:	call   0x4236a4
  4227b2:	ret    
  4227b3:	jmp    0x40481c
  4227b8:	jmp    0x4227aa
  4227ba:	pop    edi
  4227bb:	pop    esi
  4227bc:	pop    ebx
  4227bd:	pop    ecx
  4227be:	pop    ebp
  4227bf:	ret    
  4227c0:	push   ebx
  4227c1:	push   esi
  4227c2:	push   ecx
  4227c3:	mov    esi,edx
  4227c5:	mov    ebx,eax
  4227c7:	xor    cl,0x1
  4227ca:	movzx  eax,cl
  4227cd:	mov    DWORD PTR [esp],eax
  4227d0:	push   esp
  4227d1:	push   0x8004667e
  4227d6:	push   esi
  4227d7:	mov    eax,ds:0x46de04
  4227dc:	mov    eax,DWORD PTR [eax]
  4227de:	call   eax
  4227e0:	mov    edx,eax
  4227e2:	mov    eax,ebx
  4227e4:	call   0x420814
  4227e9:	pop    edx
  4227ea:	pop    esi
  4227eb:	pop    ebx
  4227ec:	ret    
  4227ed:	lea    eax,[eax+0x0]
  4227f0:	push   ebp
  4227f1:	mov    ebp,esp
  4227f3:	add    esp,0xfffffff8
  4227f6:	mov    DWORD PTR [ebp-0x4],eax
  4227f9:	mov    dl,0x1
  4227fb:	mov    eax,ds:0x421168
  422800:	call   0x42360c
  422805:	mov    DWORD PTR [ebp-0x8],eax
  422808:	mov    eax,DWORD PTR [ebp-0x4]
  42280b:	call   0x423690
  422810:	xor    eax,eax
  422812:	push   ebp
  422813:	push   0x422842
  422818:	push   DWORD PTR fs:[eax]
  42281b:	mov    DWORD PTR fs:[eax],esp
  42281e:	mov    eax,DWORD PTR [ebp-0x4]
  422821:	lea    edx,[eax+0x8]
  422824:	mov    eax,DWORD PTR [ebp-0x8]
  422827:	call   0x422718
  42282c:	xor    eax,eax
  42282e:	pop    edx
  42282f:	pop    ecx
  422830:	pop    ecx
  422831:	mov    DWORD PTR fs:[eax],edx
  422834:	push   0x422849
  422839:	mov    eax,DWORD PTR [ebp-0x4]
  42283c:	call   0x4236a4
  422841:	ret    
  422842:	jmp    0x40481c
  422847:	jmp    0x422839
  422849:	mov    eax,DWORD PTR [ebp-0x8]
  42284c:	pop    ecx
  42284d:	pop    ecx
  42284e:	pop    ebp
  42284f:	ret    
  422850:	push   ebx
  422851:	push   esi
  422852:	push   ecx
  422853:	mov    esi,edx
  422855:	mov    ebx,eax
  422857:	push   0x0
  422859:	mov    DWORD PTR [esp+0x4],0x2733
  422861:	lea    ecx,[esp+0x4]
  422865:	mov    edx,esi
  422867:	mov    eax,ebx
  422869:	call   0x420828
  42286e:	test   eax,eax
  422870:	setne  al
  422873:	pop    edx
  422874:	pop    esi
  422875:	pop    ebx
  422876:	ret    
  422877:	nop
  422878:	push   ebp
  422879:	mov    ebp,esp
  42287b:	add    esp,0xffffffd4
  42287e:	push   ebx
  42287f:	push   esi
  422880:	xor    ebx,ebx
  422882:	mov    DWORD PTR [ebp-0x2c],ebx
  422885:	mov    esi,edx
  422887:	mov    ebx,eax
  422889:	xor    eax,eax
  42288b:	push   ebp
  42288c:	push   0x4229da
  422891:	push   DWORD PTR fs:[eax]
  422894:	mov    DWORD PTR fs:[eax],esp
  422897:	sub    cl,0x1
  42289a:	jb     0x4228a3
  42289c:	je     0x4228f9
  42289e:	jmp    0x4229bd
  4228a3:	mov    eax,esi
  4228a5:	call   0x405418
  4228aa:	push   eax
  4228ab:	mov    eax,ds:0x46dc24
  4228b0:	mov    eax,DWORD PTR [eax]
  4228b2:	call   eax
  4228b4:	test   eax,eax
  4228b6:	jne    0x4228c4
  4228b8:	mov    eax,ebx
  4228ba:	call   0x4207fc
  4228bf:	jmp    0x4229c4
  4228c4:	mov    eax,DWORD PTR [eax+0xc]
  4228c7:	mov    eax,DWORD PTR [eax]
  4228c9:	movzx  edx,BYTE PTR [eax]
  4228cc:	mov    BYTE PTR [ebp-0x4],dl
  4228cf:	movzx  edx,BYTE PTR [eax+0x1]
  4228d3:	mov    BYTE PTR [ebp-0x3],dl
  4228d6:	movzx  edx,BYTE PTR [eax+0x2]
  4228da:	mov    BYTE PTR [ebp-0x2],dl
  4228dd:	movzx  eax,BYTE PTR [eax+0x3]
  4228e1:	mov    BYTE PTR [ebp-0x1],al
  4228e4:	mov    eax,DWORD PTR [ebp+0x8]
  4228e7:	push   eax
  4228e8:	lea    edx,[ebp-0x4]
  4228eb:	xor    ecx,ecx
  4228ed:	mov    eax,ebx
  4228ef:	call   0x420528
  4228f4:	jmp    0x4229c4
  4228f9:	mov    eax,ds:0x46dab0
  4228fe:	cmp    BYTE PTR [eax],0x0
  422901:	jne    0x422924
  422903:	lea    edx,[ebp-0x2c]
  422906:	mov    eax,ds:0x46dda0
  42290b:	call   0x406f48
  422910:	mov    ecx,DWORD PTR [ebp-0x2c]
  422913:	mov    dl,0x1
  422915:	mov    eax,ds:0x421104
  42291a:	call   0x41bdbc
  42291f:	call   0x4048fc
  422924:	lea    eax,[ebp-0x28]
  422927:	mov    edx,0x20
  42292c:	call   0x407368
  422931:	mov    DWORD PTR [ebp-0x24],0x17
  422938:	mov    DWORD PTR [ebp-0x20],0x1
  42293f:	xor    eax,eax
  422941:	mov    DWORD PTR [ebp-0x8],eax
  422944:	lea    eax,[ebp-0x8]
  422947:	push   eax
  422948:	lea    eax,[ebp-0x28]
  42294b:	push   eax
  42294c:	push   0x0
  42294e:	mov    eax,esi
  422950:	call   0x405418
  422955:	push   eax
  422956:	mov    eax,ds:0x46ddc4
  42295b:	mov    eax,DWORD PTR [eax]
  42295d:	call   eax
  42295f:	mov    esi,eax
  422961:	xor    eax,eax
  422963:	push   ebp
  422964:	push   0x4229b6
  422969:	push   DWORD PTR fs:[eax]
  42296c:	mov    DWORD PTR fs:[eax],esp
  42296f:	test   esi,esi
  422971:	je     0x422985
  422973:	mov    eax,esi
  422975:	call   0x41ffb8
  42297a:	mov    edx,eax
  42297c:	mov    eax,ebx
  42297e:	call   0x4208c8
  422983:	jmp    0x42299b
  422985:	mov    eax,DWORD PTR [ebp+0x8]
  422988:	push   eax
  422989:	mov    eax,DWORD PTR [ebp-0x8]
  42298c:	mov    eax,DWORD PTR [eax+0x18]
  42298f:	lea    edx,[eax+0x8]
  422992:	mov    cl,0x1
  422994:	mov    eax,ebx
  422996:	call   0x420528
  42299b:	xor    eax,eax
  42299d:	pop    edx
  42299e:	pop    ecx
  42299f:	pop    ecx
  4229a0:	mov    DWORD PTR fs:[eax],edx
  4229a3:	push   0x4229c4
  4229a8:	mov    eax,DWORD PTR [ebp-0x8]
  4229ab:	push   eax
  4229ac:	mov    eax,ds:0x46dc44
  4229b1:	mov    eax,DWORD PTR [eax]
  4229b3:	call   eax
  4229b5:	ret    
  4229b6:	jmp    0x40481c
  4229bb:	jmp    0x4229a8
  4229bd:	mov    eax,ebx
  4229bf:	call   0x420d70
  4229c4:	xor    eax,eax
  4229c6:	pop    edx
  4229c7:	pop    ecx
  4229c8:	pop    ecx
  4229c9:	mov    DWORD PTR fs:[eax],edx
  4229cc:	push   0x4229e1
  4229d1:	lea    eax,[ebp-0x2c]
  4229d4:	call   0x404f88
  4229d9:	ret    
  4229da:	jmp    0x40481c
  4229df:	jmp    0x4229d1
  4229e1:	pop    esi
  4229e2:	pop    ebx
  4229e3:	mov    esp,ebp
  4229e5:	pop    ebp
  4229e6:	ret    0x4
  4229e9:	lea    eax,[eax+0x0]
  4229ec:	push   ebp
  4229ed:	mov    ebp,esp
  4229ef:	add    esp,0xffffffd4
  4229f2:	push   ebx
  4229f3:	push   esi
  4229f4:	mov    esi,edx
  4229f6:	mov    ebx,eax
  4229f8:	movzx  eax,BYTE PTR [ebp+0x8]
  4229fc:	sub    al,0x1
  4229fe:	jb     0x422a07
  422a00:	je     0x422a54
  422a02:	jmp    0x422aab
  422a07:	mov    WORD PTR [ebp-0x10],0x2
  422a0d:	push   0x0
  422a0f:	lea    eax,[ebp-0xc]
  422a12:	mov    edx,ecx
  422a14:	mov    ecx,ebx
  422a16:	xchg   ecx,eax
  422a17:	call   0x42068c
  422a1c:	mov    eax,DWORD PTR [ebp+0xc]
  422a1f:	cmp    eax,0xffff
  422a24:	jbe    0x422a2b
  422a26:	call   0x403f68
  422a2b:	push   eax
  422a2c:	mov    eax,ds:0x46dbb0
  422a31:	mov    eax,DWORD PTR [eax]
  422a33:	call   eax
  422a35:	mov    WORD PTR [ebp-0xe],ax
  422a39:	push   0x10
  422a3b:	lea    eax,[ebp-0x10]
  422a3e:	push   eax
  422a3f:	push   esi
  422a40:	mov    eax,ds:0x46da54
  422a45:	mov    eax,DWORD PTR [eax]
  422a47:	call   eax
  422a49:	mov    edx,eax
  422a4b:	mov    eax,ebx
  422a4d:	call   0x420814
  422a52:	jmp    0x422ab2
  422a54:	xor    eax,eax
  422a56:	mov    DWORD PTR [ebp-0x28],eax
  422a59:	xor    eax,eax
  422a5b:	mov    DWORD PTR [ebp-0x14],eax
  422a5e:	mov    WORD PTR [ebp-0x2c],0x17
  422a64:	push   0x1
  422a66:	lea    eax,[ebp-0x24]
  422a69:	mov    edx,ecx
  422a6b:	mov    ecx,ebx
  422a6d:	xchg   ecx,eax
  422a6e:	call   0x42068c
  422a73:	mov    eax,DWORD PTR [ebp+0xc]
  422a76:	cmp    eax,0xffff
  422a7b:	jbe    0x422a82
  422a7d:	call   0x403f68
  422a82:	push   eax
  422a83:	mov    eax,ds:0x46dbb0
  422a88:	mov    eax,DWORD PTR [eax]
  422a8a:	call   eax
  422a8c:	mov    WORD PTR [ebp-0x2a],ax
  422a90:	push   0x1c
  422a92:	lea    eax,[ebp-0x2c]
  422a95:	push   eax
  422a96:	push   esi
  422a97:	mov    eax,ds:0x46da54
  422a9c:	mov    eax,DWORD PTR [eax]
  422a9e:	call   eax
  422aa0:	mov    edx,eax
  422aa2:	mov    eax,ebx
  422aa4:	call   0x420814
  422aa9:	jmp    0x422ab2
  422aab:	mov    eax,ebx
  422aad:	call   0x420d70
  422ab2:	pop    esi
  422ab3:	pop    ebx
  422ab4:	mov    esp,ebp
  422ab6:	pop    ebp
  422ab7:	ret    0x8
  422aba:	mov    eax,eax
  422abc:	push   ebp
  422abd:	mov    ebp,esp
  422abf:	add    esp,0xffffffd8
  422ac2:	push   ebx
  422ac3:	push   esi
  422ac4:	push   edi
  422ac5:	xor    ebx,ebx
  422ac7:	mov    DWORD PTR [ebp-0x28],ebx
  422aca:	mov    DWORD PTR [ebp-0x24],ebx
  422acd:	mov    edi,ecx
  422acf:	mov    esi,edx
  422ad1:	mov    ebx,eax
  422ad3:	xor    eax,eax
  422ad5:	push   ebp
  422ad6:	push   0x422ba1
  422adb:	push   DWORD PTR fs:[eax]
  422ade:	mov    DWORD PTR fs:[eax],esp
  422ae1:	mov    DWORD PTR [ebp-0x4],0x1c
  422ae8:	lea    eax,[ebp-0x4]
  422aeb:	push   eax
  422aec:	lea    eax,[ebp-0x20]
  422aef:	push   eax
  422af0:	push   esi
  422af1:	mov    eax,ds:0x46dab4
  422af6:	mov    eax,DWORD PTR [eax]
  422af8:	call   eax
  422afa:	mov    edx,eax
  422afc:	mov    eax,ebx
  422afe:	call   0x420814
  422b03:	movzx  eax,WORD PTR [ebp-0x20]
  422b07:	sub    ax,0x2
  422b0b:	je     0x422b15
  422b0d:	sub    ax,0x15
  422b11:	je     0x422b4d
  422b13:	jmp    0x422b7f
  422b15:	lea    eax,[ebp-0x24]
  422b18:	push   eax
  422b19:	lea    eax,[ebp-0x20]
  422b1c:	lea    edx,[eax+0x4]
  422b1f:	xor    ecx,ecx
  422b21:	mov    eax,ebx
  422b23:	call   0x420528
  422b28:	mov    edx,DWORD PTR [ebp-0x24]
  422b2b:	mov    eax,edi
  422b2d:	call   0x404fdc
  422b32:	lea    eax,[ebp-0x20]
  422b35:	movzx  eax,WORD PTR [eax+0x2]
  422b39:	push   eax
  422b3a:	mov    eax,ds:0x46dbb4
  422b3f:	mov    eax,DWORD PTR [eax]
  422b41:	call   eax
  422b43:	movzx  eax,ax
  422b46:	mov    edx,DWORD PTR [ebp+0x8]
  422b49:	mov    DWORD PTR [edx],eax
  422b4b:	jmp    0x422b86
  422b4d:	lea    eax,[ebp-0x28]
  422b50:	push   eax
  422b51:	lea    edx,[ebp-0x18]
  422b54:	mov    cl,0x1
  422b56:	mov    eax,ebx
  422b58:	call   0x420528
  422b5d:	mov    edx,DWORD PTR [ebp-0x28]
  422b60:	mov    eax,edi
  422b62:	call   0x404fdc
  422b67:	movzx  eax,WORD PTR [ebp-0x1e]
  422b6b:	push   eax
  422b6c:	mov    eax,ds:0x46dbb4
  422b71:	mov    eax,DWORD PTR [eax]
  422b73:	call   eax
  422b75:	movzx  eax,ax
  422b78:	mov    edx,DWORD PTR [ebp+0x8]
  422b7b:	mov    DWORD PTR [edx],eax
  422b7d:	jmp    0x422b86
  422b7f:	mov    eax,ebx
  422b81:	call   0x420d70
  422b86:	xor    eax,eax
  422b88:	pop    edx
  422b89:	pop    ecx
  422b8a:	pop    ecx
  422b8b:	mov    DWORD PTR fs:[eax],edx
  422b8e:	push   0x422ba8
  422b93:	lea    eax,[ebp-0x28]
  422b96:	mov    edx,0x2
  422b9b:	call   0x404fac
  422ba0:	ret    
  422ba1:	jmp    0x40481c
  422ba6:	jmp    0x422b93
  422ba8:	pop    edi
  422ba9:	pop    esi
  422baa:	pop    ebx
  422bab:	mov    esp,ebp
  422bad:	pop    ebp
  422bae:	ret    0x4
  422bb1:	lea    eax,[eax+0x0]
  422bb4:	push   ebx
  422bb5:	push   esi
  422bb6:	push   edi
  422bb7:	mov    esi,edx
  422bb9:	mov    ebx,eax
  422bbb:	mov    ecx,0x1
  422bc0:	mov    edx,esi
  422bc2:	mov    eax,ebx
  422bc4:	mov    edi,DWORD PTR [eax]
  422bc6:	call   DWORD PTR [edi+0xa4]
  422bcc:	mov    edx,esi
  422bce:	mov    eax,ebx
  422bd0:	mov    ecx,DWORD PTR [eax]
  422bd2:	call   DWORD PTR [ecx+0x98]
  422bd8:	pop    edi
  422bd9:	pop    esi
  422bda:	pop    ebx
  422bdb:	ret    
  422bdc:	push   ebp
  422bdd:	mov    ebp,esp
  422bdf:	push   ebx
  422be0:	push   esi
  422be1:	push   edi
  422be2:	mov    edi,ecx
  422be4:	mov    esi,edx
  422be6:	mov    ebx,eax
  422be8:	mov    eax,DWORD PTR [ebp+0x8]
  422beb:	push   eax
  422bec:	mov    eax,DWORD PTR [ebp+0xc]
  422bef:	push   eax
  422bf0:	mov    eax,DWORD PTR [ebp+0x10]
  422bf3:	push   eax
  422bf4:	push   edi
  422bf5:	push   esi
  422bf6:	mov    eax,ds:0x46db08
  422bfb:	mov    eax,DWORD PTR [eax]
  422bfd:	call   eax
  422bff:	mov    edx,eax
  422c01:	mov    eax,ebx
  422c03:	call   0x420814
  422c08:	pop    edi
  422c09:	pop    esi
  422c0a:	pop    ebx
  422c0b:	pop    ebp
  422c0c:	ret    0xc
  422c0f:	nop
  422c10:	push   ebp
  422c11:	mov    ebp,esp
  422c13:	add    esp,0xfffffff4
  422c16:	push   ebx
  422c17:	push   esi
  422c18:	push   edi
  422c19:	mov    DWORD PTR [ebp-0x4],ecx
  422c1c:	mov    esi,eax
  422c1e:	lea    edi,[ebp-0xc]
  422c21:	mov    DWORD PTR [ebp-0x8],0x4
  422c28:	mov    eax,DWORD PTR [ebp+0xc]
  422c2b:	push   eax
  422c2c:	push   edi
  422c2d:	lea    eax,[ebp-0x8]
  422c30:	push   eax
  422c31:	mov    ecx,DWORD PTR [ebp-0x4]
  422c34:	mov    eax,esi
  422c36:	mov    ebx,DWORD PTR [eax]
  422c38:	call   DWORD PTR [ebx+0xcc]
  422c3e:	mov    eax,DWORD PTR [ebp+0x8]
  422c41:	mov    edx,DWORD PTR [ebp-0xc]
  422c44:	mov    DWORD PTR [eax],edx
  422c46:	pop    edi
  422c47:	pop    esi
  422c48:	pop    ebx
  422c49:	mov    esp,ebp
  422c4b:	pop    ebp
  422c4c:	ret    0x8
  422c4f:	nop
  422c50:	push   ebp
  422c51:	mov    ebp,esp
  422c53:	add    esp,0xfffffff4
  422c56:	push   ebx
  422c57:	mov    BYTE PTR [ebp-0x1],0x0
  422c5b:	xor    eax,eax
  422c5d:	mov    DWORD PTR [ebp-0x8],eax
  422c60:	lea    eax,[ebp-0x8]
  422c63:	push   eax
  422c64:	push   0x0
  422c66:	push   0x0
  422c68:	mov    eax,ds:0x46dd40
  422c6d:	mov    eax,DWORD PTR [eax]
  422c6f:	call   eax
  422c71:	mov    eax,DWORD PTR [ebp-0x8]
  422c74:	call   0x402ea0
  422c79:	mov    DWORD PTR [ebp-0xc],eax
  422c7c:	xor    ebx,ebx
  422c7e:	push   ebp
  422c7f:	push   0x422ce1
  422c84:	push   DWORD PTR fs:[ebx]
  422c87:	mov    DWORD PTR fs:[ebx],esp
  422c8a:	lea    eax,[ebp-0x8]
  422c8d:	push   eax
  422c8e:	mov    eax,DWORD PTR [ebp-0xc]
  422c91:	push   eax
  422c92:	push   0x0
  422c94:	mov    eax,ds:0x46dd40
  422c99:	mov    eax,DWORD PTR [eax]
  422c9b:	call   eax
  422c9d:	cmp    eax,0xffffffff
  422ca0:	je     0x422ccb
  422ca2:	mov    edx,DWORD PTR [ebp-0xc]
  422ca5:	sub    eax,0x1
  422ca8:	jno    0x422caf
  422caa:	call   0x403f70
  422caf:	test   eax,eax
  422cb1:	jl     0x422ccb
  422cb3:	inc    eax
  422cb4:	cmp    DWORD PTR [edx+0x4c],0x17
  422cb8:	sete   BYTE PTR [ebp-0x1]
  422cbc:	cmp    BYTE PTR [ebp-0x1],0x0
  422cc0:	jne    0x422ccb
  422cc2:	add    edx,0x174
  422cc8:	dec    eax
  422cc9:	jne    0x422cb4
  422ccb:	xor    eax,eax
  422ccd:	pop    edx
  422cce:	pop    ecx
  422ccf:	pop    ecx
  422cd0:	mov    DWORD PTR fs:[eax],edx
  422cd3:	push   0x422ce8
  422cd8:	mov    eax,DWORD PTR [ebp-0xc]
  422cdb:	call   0x402ebc
  422ce0:	ret    
  422ce1:	jmp    0x40481c
  422ce6:	jmp    0x422cd8
  422ce8:	movzx  eax,BYTE PTR [ebp-0x1]
  422cec:	pop    ebx
  422ced:	mov    esp,ebp
  422cef:	pop    ebp
  422cf0:	ret    
  422cf1:	lea    eax,[eax+0x0]
  422cf4:	push   ebp
  422cf5:	mov    ebp,esp
  422cf7:	mov    eax,DWORD PTR [ebp+0x8]
  422cfa:	push   eax
  422cfb:	push   ecx
  422cfc:	push   edx
  422cfd:	mov    eax,ds:0x46de04
  422d02:	mov    eax,DWORD PTR [eax]
  422d04:	call   eax
  422d06:	pop    ebp
  422d07:	ret    0x4
  422d0a:	mov    eax,eax
  422d0c:	push   ebp
  422d0d:	mov    ebp,esp
  422d0f:	add    esp,0xffffff5c
  422d15:	push   ebx
  422d16:	push   esi
  422d17:	push   edi
  422d18:	xor    ebx,ebx
  422d1a:	mov    DWORD PTR [ebp-0xa4],ebx
  422d20:	mov    esi,ecx
  422d22:	mov    edi,edx
  422d24:	mov    ebx,eax
  422d26:	xor    eax,eax
  422d28:	push   ebp
  422d29:	push   0x422e1d
  422d2e:	push   DWORD PTR fs:[eax]
  422d31:	mov    DWORD PTR fs:[eax],esp
  422d34:	mov    eax,ds:0x46dab0
  422d39:	cmp    BYTE PTR [eax],0x0
  422d3c:	jne    0x422d65
  422d3e:	lea    edx,[ebp-0xa4]
  422d44:	mov    eax,ds:0x46dda0
  422d49:	call   0x406f48
  422d4e:	mov    ecx,DWORD PTR [ebp-0xa4]
  422d54:	mov    dl,0x1
  422d56:	mov    eax,ds:0x421104
  422d5b:	call   0x41bdbc
  422d60:	call   0x4048fc
  422d65:	lea    eax,[ebp-0xa0]
  422d6b:	xor    ecx,ecx
  422d6d:	mov    edx,0x1c
  422d72:	call   0x4037c8
  422d77:	mov    WORD PTR [ebp-0xa0],0x17
  422d80:	push   0x1
  422d82:	lea    ecx,[ebp-0x98]
  422d88:	mov    edx,esi
  422d8a:	mov    eax,ebx
  422d8c:	call   0x42068c
  422d91:	mov    edx,DWORD PTR [ebp+0x8]
  422d94:	lea    eax,[ebp-0x98]
  422d9a:	mov    ecx,0x10
  422d9f:	call   0x403090
  422da4:	movzx  eax,WORD PTR [ebp+0x10]
  422da8:	push   eax
  422da9:	mov    eax,ds:0x46dbb0
  422dae:	mov    eax,DWORD PTR [eax]
  422db0:	call   eax
  422db2:	mov    WORD PTR [ebp-0x9e],ax
  422db9:	lea    esi,[ebp-0x84]
  422dbf:	push   0x0
  422dc1:	push   0x0
  422dc3:	lea    eax,[ebp-0x4]
  422dc6:	push   eax
  422dc7:	push   0x80
  422dcc:	lea    eax,[ebp-0x84]
  422dd2:	push   eax
  422dd3:	push   0x1c
  422dd5:	lea    eax,[ebp-0xa0]
  422ddb:	push   eax
  422ddc:	push   0xc8000014
  422de1:	push   edi
  422de2:	mov    eax,ds:0x46dc34
  422de7:	mov    eax,DWORD PTR [eax]
  422de9:	call   eax
  422deb:	mov    edx,eax
  422ded:	mov    eax,ebx
  422def:	call   0x420814
  422df4:	mov    edx,DWORD PTR [ebp+0xc]
  422df7:	lea    eax,[esi+0x8]
  422dfa:	mov    ecx,0x10
  422dff:	call   0x403090
  422e04:	xor    eax,eax
  422e06:	pop    edx
  422e07:	pop    ecx
  422e08:	pop    ecx
  422e09:	mov    DWORD PTR fs:[eax],edx
  422e0c:	push   0x422e24
  422e11:	lea    eax,[ebp-0xa4]
  422e17:	call   0x404f88
  422e1c:	ret    
  422e1d:	jmp    0x40481c
  422e22:	jmp    0x422e11
  422e24:	pop    edi
  422e25:	pop    esi
  422e26:	pop    ebx
  422e27:	mov    esp,ebp
  422e29:	pop    ebp
  422e2a:	ret    0xc
  422e2d:	lea    eax,[eax+0x0]
  422e30:	push   ebp
  422e31:	mov    ebp,esp
  422e33:	push   ebx
  422e34:	push   esi
  422e35:	mov    esi,ecx
  422e37:	mov    ebx,eax
  422e39:	movzx  eax,BYTE PTR [ebp+0x8]
  422e3d:	sub    al,0x1
  422e3f:	jb     0x422e45
  422e41:	je     0x422e5d
  422e43:	jmp    0x422e74
  422e45:	mov    edx,DWORD PTR [esi]
  422e47:	mov    eax,ebx
  422e49:	mov    ecx,DWORD PTR [eax]
  422e4b:	call   DWORD PTR [ecx+0x90]
  422e51:	mov    edx,esi
  422e53:	mov    ecx,DWORD PTR [ebp+0x14]
  422e56:	call   0x41c794
  422e5b:	jmp    0x422e7b
  422e5d:	mov    eax,DWORD PTR [ebp+0x14]
  422e60:	push   eax
  422e61:	mov    eax,DWORD PTR [ebp+0x10]
  422e64:	push   eax
  422e65:	mov    eax,DWORD PTR [ebp+0xc]
  422e68:	push   eax
  422e69:	mov    ecx,esi
  422e6b:	mov    eax,ebx
  422e6d:	call   0x422e84
  422e72:	jmp    0x422e7b
  422e74:	mov    eax,ebx
  422e76:	call   0x420d70
  422e7b:	pop    esi
  422e7c:	pop    ebx
  422e7d:	pop    ebp
  422e7e:	ret    0x10
  422e81:	lea    eax,[eax+0x0]
  422e84:	push   ebp
  422e85:	mov    ebp,esp
  422e87:	add    esp,0xffffffd4
  422e8a:	push   ebx
  422e8b:	push   esi
  422e8c:	push   edi
  422e8d:	xor    ebx,ebx
  422e8f:	mov    DWORD PTR [ebp-0x4],ebx
  422e92:	mov    esi,ecx
  422e94:	mov    DWORD PTR [ebp-0x8],edx
  422e97:	mov    edi,eax
  422e99:	xor    eax,eax
  422e9b:	push   ebp
  422e9c:	push   0x423041
  422ea1:	push   DWORD PTR fs:[eax]
  422ea4:	mov    DWORD PTR fs:[eax],esp
  422ea7:	mov    eax,DWORD PTR [ebp+0x8]
  422eaa:	cmp    eax,0xffff
  422eaf:	jbe    0x422eb6
  422eb1:	call   0x403f68
  422eb6:	push   eax
  422eb7:	lea    eax,[ebp-0x1c]
  422eba:	push   eax
  422ebb:	lea    eax,[ebp-0x2c]
  422ebe:	push   eax
  422ebf:	mov    ecx,DWORD PTR [ebp+0xc]
  422ec2:	mov    edx,DWORD PTR [ebp-0x8]
  422ec5:	mov    eax,ds:0x472bac
  422eca:	call   0x422d0c
  422ecf:	mov    eax,DWORD PTR [esi]
  422ed1:	call   0x4061f4
  422ed6:	add    eax,0x28
  422ed9:	jno    0x422ee0
  422edb:	call   0x403f70
  422ee0:	push   eax
  422ee1:	lea    eax,[ebp-0x4]
  422ee4:	mov    ecx,0x1
  422ee9:	mov    edx,DWORD PTR ds:0x40769c
  422eef:	call   0x4063b0
  422ef4:	add    esp,0x4
  422ef7:	xor    eax,eax
  422ef9:	mov    edx,DWORD PTR [ebp-0x4]
  422efc:	test   edx,edx
  422efe:	je     0x422f05
  422f00:	cmp    eax,DWORD PTR [edx-0x4]
  422f03:	jb     0x422f0a
  422f05:	call   0x403f68
  422f0a:	add    edx,eax
  422f0c:	lea    eax,[ebp-0x1c]
  422f0f:	mov    ecx,0x10
  422f14:	call   0x403090
  422f19:	mov    ebx,0x10
  422f1e:	mov    eax,DWORD PTR [ebp-0x4]
  422f21:	test   eax,eax
  422f23:	je     0x422f2a
  422f25:	cmp    ebx,DWORD PTR [eax-0x4]
  422f28:	jb     0x422f2f
  422f2a:	call   0x403f68
  422f2f:	lea    edx,[eax+ebx*1]
  422f32:	lea    eax,[ebp-0x2c]
  422f35:	mov    ecx,0x10
  422f3a:	call   0x403090
  422f3f:	add    ebx,0x10
  422f42:	jno    0x422f49
  422f44:	call   0x403f70
  422f49:	mov    eax,DWORD PTR [esi]
  422f4b:	call   0x4061f4
  422f50:	test   eax,eax
  422f52:	jns    0x422f59
  422f54:	call   0x403f68
  422f59:	mov    DWORD PTR [ebp-0xc],eax
  422f5c:	mov    eax,ds:0x46de0c
  422f61:	mov    eax,DWORD PTR [eax]
  422f63:	mov    edx,DWORD PTR [ebp-0xc]
  422f66:	mov    ecx,DWORD PTR [eax]
  422f68:	call   DWORD PTR [ecx+0x3c]
  422f6b:	lea    edx,[ebp-0x4]
  422f6e:	mov    ecx,ebx
  422f70:	call   0x41c7ac
  422f75:	add    ebx,0x4
  422f78:	jno    0x422f7f
  422f7a:	call   0x403f70
  422f7f:	mov    eax,DWORD PTR [ebp-0x4]
  422f82:	test   eax,eax
  422f84:	je     0x422f8b
  422f86:	cmp    ebx,DWORD PTR [eax-0x4]
  422f89:	jb     0x422f90
  422f8b:	call   0x403f68
  422f90:	add    eax,ebx
  422f92:	xor    ecx,ecx
  422f94:	mov    edx,0x3
  422f99:	call   0x4037c8
  422f9e:	add    ebx,0x3
  422fa1:	jno    0x422fa8
  422fa3:	call   0x403f70
  422fa8:	mov    eax,DWORD PTR [ebp-0x4]
  422fab:	test   eax,eax
  422fad:	je     0x422fb4
  422faf:	cmp    ebx,DWORD PTR [eax-0x4]
  422fb2:	jb     0x422fb9
  422fb4:	call   0x403f68
  422fb9:	mov    BYTE PTR [eax+ebx*1],0x3a
  422fbd:	add    ebx,0x1
  422fc0:	jno    0x422fc7
  422fc2:	call   0x403f70
  422fc7:	mov    eax,0x2
  422fcc:	mov    edx,DWORD PTR [esi]
  422fce:	test   edx,edx
  422fd0:	je     0x422fd7
  422fd2:	cmp    eax,DWORD PTR [edx-0x4]
  422fd5:	jb     0x422fdc
  422fd7:	call   0x403f68
  422fdc:	mov    BYTE PTR [edx+eax*1],0x0
  422fe0:	mov    eax,0x3
  422fe5:	mov    edx,DWORD PTR [esi]
  422fe7:	test   edx,edx
  422fe9:	je     0x422ff0
  422feb:	cmp    eax,DWORD PTR [edx-0x4]
  422fee:	jb     0x422ff5
  422ff0:	call   0x403f68
  422ff5:	mov    BYTE PTR [edx+eax*1],0x0
  422ff9:	push   ebx
  422ffa:	mov    eax,DWORD PTR [esi]
  422ffc:	call   0x4061f4
  423001:	push   eax
  423002:	lea    ecx,[ebp-0x4]
  423005:	mov    eax,DWORD PTR [esi]
  423007:	xor    edx,edx
  423009:	call   0x41c6f0
  42300e:	mov    edx,DWORD PTR [ebp-0x4]
  423011:	mov    eax,edi
  423013:	mov    ecx,DWORD PTR [eax]
  423015:	call   DWORD PTR [ecx+0x90]
  42301b:	mov    edx,esi
  42301d:	mov    ecx,DWORD PTR [ebp+0x10]
  423020:	call   0x41c794
  423025:	xor    eax,eax
  423027:	pop    edx
  423028:	pop    ecx
  423029:	pop    ecx
  42302a:	mov    DWORD PTR fs:[eax],edx
  42302d:	push   0x423048
  423032:	lea    eax,[ebp-0x4]
  423035:	mov    edx,DWORD PTR ds:0x40769c
  42303b:	call   0x4063bc
  423040:	ret    
  423041:	jmp    0x40481c
  423046:	jmp    0x423032
  423048:	pop    edi
  423049:	pop    esi
  42304a:	pop    ebx
  42304b:	mov    esp,ebp
  42304d:	pop    ebp
  42304e:	ret    0xc
  423051:	lea    eax,[eax+0x0]
  423054:	push   ebp
  423055:	mov    ebp,esp
  423057:	add    esp,0xffffff80
  42305a:	push   ebx
  42305b:	push   esi
  42305c:	push   edi
  42305d:	xor    ebx,ebx
  42305f:	mov    DWORD PTR [ebp-0x80],ebx
  423062:	mov    DWORD PTR [ebp-0x7c],ebx
  423065:	mov    DWORD PTR [ebp-0x78],ebx
  423068:	mov    DWORD PTR [ebp-0x74],ebx
  42306b:	mov    DWORD PTR [ebp-0x4],ebx
  42306e:	mov    DWORD PTR [ebp-0x8],ebx
  423071:	mov    ebx,ecx
  423073:	mov    DWORD PTR [ebp-0x10],edx
  423076:	mov    DWORD PTR [ebp-0xc],eax
  423079:	mov    esi,DWORD PTR [ebp+0xc]
  42307c:	xor    eax,eax
  42307e:	push   ebp
  42307f:	push   0x423329
  423084:	push   DWORD PTR fs:[eax]
  423087:	mov    DWORD PTR fs:[eax],esp
  42308a:	mov    eax,ds:0x46db90
  42308f:	cmp    DWORD PTR [eax],0x4
  423092:	jle    0x4232b4
  423098:	mov    eax,ds:0x46dd84
  42309d:	cmp    DWORD PTR [eax],0x0
  4230a0:	jle    0x4232b4
  4230a6:	mov    eax,DWORD PTR [ebx]
  4230a8:	call   0x4061f4
  4230ad:	test   eax,eax
  4230af:	jns    0x4230b6
  4230b1:	call   0x403f68
  4230b6:	call   0x41ff70
  4230bb:	call   0x41ff70
  4230c0:	mov    edi,eax
  4230c2:	push   edi
  4230c3:	lea    eax,[ebp-0x8]
  4230c6:	mov    ecx,0x1
  4230cb:	mov    edx,DWORD PTR ds:0x40769c
  4230d1:	call   0x4063b0
  4230d6:	add    esp,0x4
  4230d9:	mov    eax,DWORD PTR [ebx]
  4230db:	call   0x4061f4
  4230e0:	test   eax,eax
  4230e2:	jns    0x4230e9
  4230e4:	call   0x403f68
  4230e9:	mov    DWORD PTR [ebp-0x20],eax
  4230ec:	xor    eax,eax
  4230ee:	mov    edx,DWORD PTR [ebx]
  4230f0:	test   edx,edx
  4230f2:	je     0x4230f9
  4230f4:	cmp    eax,DWORD PTR [edx-0x4]
  4230f7:	jb     0x4230fe
  4230f9:	call   0x403f68
  4230fe:	lea    eax,[edx+eax*1]
  423101:	mov    DWORD PTR [ebp-0x1c],eax
  423104:	lea    eax,[ebp-0x70]
  423107:	xor    ecx,ecx
  423109:	mov    edx,0x1c
  42310e:	call   0x4037c8
  423113:	lea    eax,[ebp-0x20]
  423116:	mov    DWORD PTR [ebp-0x68],eax
  423119:	mov    DWORD PTR [ebp-0x64],0x1
  423120:	mov    DWORD PTR [ebp-0x60],edi
  423123:	xor    eax,eax
  423125:	mov    edx,DWORD PTR [ebp-0x8]
  423128:	test   edx,edx
  42312a:	je     0x423131
  42312c:	cmp    eax,DWORD PTR [edx-0x4]
  42312f:	jb     0x423136
  423131:	call   0x403f68
  423136:	lea    eax,[edx+eax*1]
  423139:	mov    DWORD PTR [ebp-0x5c],eax
  42313c:	movzx  eax,BYTE PTR [ebp+0x8]
  423140:	sub    al,0x1
  423142:	jb     0x42314b
  423144:	je     0x4231a8
  423146:	jmp    0x423207
  42314b:	lea    eax,[ebp-0x38]
  42314e:	mov    DWORD PTR [ebp-0x70],eax
  423151:	mov    DWORD PTR [ebp-0x6c],0x10
  423158:	push   0x0
  42315a:	push   0x0
  42315c:	lea    ecx,[ebp-0x14]
  42315f:	lea    edx,[ebp-0x70]
  423162:	mov    eax,DWORD PTR [ebp-0x10]
  423165:	call   0x41fcfc
  42316a:	mov    edx,eax
  42316c:	mov    eax,ds:0x472bac
  423171:	call   0x420814
  423176:	lea    eax,[ebp-0x74]
  423179:	push   eax
  42317a:	lea    edx,[ebp-0x34]
  42317d:	xor    ecx,ecx
  42317f:	mov    eax,DWORD PTR [ebp-0xc]
  423182:	call   0x420528
  423187:	mov    edx,DWORD PTR [ebp-0x74]
  42318a:	lea    eax,[esi+0x4]
  42318d:	call   0x404fdc
  423192:	movzx  eax,WORD PTR [ebp-0x36]
  423196:	push   eax
  423197:	mov    eax,ds:0x46dbb4
  42319c:	mov    eax,DWORD PTR [eax]
  42319e:	call   eax
  4231a0:	movzx  eax,ax
  4231a3:	mov    DWORD PTR [esi+0x8],eax
  4231a6:	jmp    0x423214
  4231a8:	lea    eax,[ebp-0x54]
  4231ab:	mov    DWORD PTR [ebp-0x70],eax
  4231ae:	mov    DWORD PTR [ebp-0x6c],0x1c
  4231b5:	lea    eax,[ebp-0x24]
  4231b8:	push   eax
  4231b9:	lea    eax,[ebp-0x28]
  4231bc:	push   eax
  4231bd:	lea    ecx,[ebp-0x14]
  4231c0:	lea    edx,[ebp-0x70]
  4231c3:	mov    eax,DWORD PTR [ebp-0x10]
  4231c6:	call   0x41fcfc
  4231cb:	mov    edx,eax
  4231cd:	mov    eax,DWORD PTR [ebp-0xc]
  4231d0:	call   0x420814
  4231d5:	lea    eax,[ebp-0x78]
  4231d8:	push   eax
  4231d9:	lea    edx,[ebp-0x4c]
  4231dc:	mov    cl,0x1
  4231de:	mov    eax,DWORD PTR [ebp-0xc]
  4231e1:	call   0x420528
  4231e6:	mov    edx,DWORD PTR [ebp-0x78]
  4231e9:	lea    eax,[esi+0x4]
  4231ec:	call   0x404fdc
  4231f1:	movzx  eax,WORD PTR [ebp-0x52]
  4231f5:	push   eax
  4231f6:	mov    eax,ds:0x46dbb4
  4231fb:	mov    eax,DWORD PTR [eax]
  4231fd:	call   eax
  4231ff:	movzx  eax,ax
  423202:	mov    DWORD PTR [esi+0x8],eax
  423205:	jmp    0x423214
  423207:	xor    eax,eax
  423209:	mov    DWORD PTR [ebp-0x14],eax
  42320c:	mov    eax,DWORD PTR [ebp-0xc]
  42320f:	call   0x420d70
  423214:	xor    ebx,ebx
  423216:	lea    eax,[ebp-0x70]
  423219:	mov    edx,ebx
  42321b:	call   0x41fefc
  423220:	mov    ebx,eax
  423222:	test   ebx,ebx
  423224:	je     0x4232f8
  42322a:	mov    eax,DWORD PTR [ebx+0x8]
  42322d:	sub    eax,0x13
  423230:	je     0x423239
  423232:	sub    eax,0x2
  423235:	je     0x4232a2
  423237:	jmp    0x423216
  423239:	cmp    BYTE PTR [ebp+0x8],0x0
  42323d:	jne    0x42326b
  42323f:	mov    eax,ebx
  423241:	call   0x41ff58
  423246:	mov    edi,eax
  423248:	lea    eax,[ebp-0x7c]
  42324b:	push   eax
  42324c:	mov    edx,edi
  42324e:	xor    ecx,ecx
  423250:	mov    eax,ds:0x472bac
  423255:	call   0x420528
  42325a:	mov    edx,DWORD PTR [ebp-0x7c]
  42325d:	lea    eax,[esi+0xc]
  423260:	call   0x404fdc
  423265:	mov    eax,DWORD PTR [edi+0x4]
  423268:	mov    DWORD PTR [esi+0x18],eax
  42326b:	cmp    BYTE PTR [ebp+0x8],0x1
  42326f:	jne    0x423216
  423271:	mov    eax,ebx
  423273:	call   0x41ff58
  423278:	mov    edi,eax
  42327a:	lea    eax,[ebp-0x80]
  42327d:	push   eax
  42327e:	mov    edx,edi
  423280:	mov    cl,0x1
  423282:	mov    eax,ds:0x472bac
  423287:	call   0x420528
  42328c:	mov    edx,DWORD PTR [ebp-0x80]
  42328f:	lea    eax,[esi+0xc]
  423292:	call   0x404fdc
  423297:	mov    eax,DWORD PTR [edi+0x10]
  42329a:	mov    DWORD PTR [esi+0x18],eax
  42329d:	jmp    0x423216
  4232a2:	mov    eax,ebx
  4232a4:	call   0x41ff58
  4232a9:	movzx  eax,BYTE PTR [eax]
  4232ac:	mov    BYTE PTR [esi+0x1c],al
  4232af:	jmp    0x423216
  4232b4:	mov    eax,DWORD PTR [ebx]
  4232b6:	call   0x4061f4
  4232bb:	push   eax
  4232bc:	push   0x0
  4232be:	lea    eax,[ebp-0x4]
  4232c1:	push   eax
  4232c2:	lea    eax,[ebp-0x18]
  4232c5:	push   eax
  4232c6:	movzx  eax,BYTE PTR [ebp+0x8]
  4232ca:	push   eax
  4232cb:	mov    ecx,ebx
  4232cd:	mov    edx,DWORD PTR [ebp-0x10]
  4232d0:	mov    eax,DWORD PTR [ebp-0xc]
  4232d3:	mov    ebx,DWORD PTR [eax]
  4232d5:	call   DWORD PTR [ebx+0xb8]
  4232db:	test   eax,eax
  4232dd:	jns    0x4232e4
  4232df:	call   0x403f68
  4232e4:	mov    DWORD PTR [ebp-0x14],eax
  4232e7:	lea    eax,[esi+0x4]
  4232ea:	mov    edx,DWORD PTR [ebp-0x4]
  4232ed:	call   0x404fdc
  4232f2:	mov    eax,DWORD PTR [ebp-0x18]
  4232f5:	mov    DWORD PTR [esi+0x8],eax
  4232f8:	xor    eax,eax
  4232fa:	pop    edx
  4232fb:	pop    ecx
  4232fc:	pop    ecx
  4232fd:	mov    DWORD PTR fs:[eax],edx
  423300:	push   0x423330
  423305:	lea    eax,[ebp-0x80]
  423308:	mov    edx,0x4
  42330d:	call   0x404fac
  423312:	lea    eax,[ebp-0x8]
  423315:	mov    edx,DWORD PTR ds:0x40769c
  42331b:	call   0x4063bc
  423320:	lea    eax,[ebp-0x4]
  423323:	call   0x404f88
  423328:	ret    
  423329:	jmp    0x40481c
  42332e:	jmp    0x423305
  423330:	mov    eax,DWORD PTR [ebp-0x14]
  423333:	pop    edi
  423334:	pop    esi
  423335:	pop    ebx
  423336:	mov    esp,ebp
  423338:	pop    ebp
  423339:	ret    0x8
  42333c:	push   ebx
  42333d:	push   esi
  42333e:	mov    esi,eax
  423340:	push   0x0
  423342:	push   0x0
  423344:	movzx  eax,dl
  423347:	mov    edx,DWORD PTR ds:0x46dcf8
  42334d:	mov    edx,DWORD PTR [edx+eax*4]
  423350:	mov    ecx,0x1
  423355:	mov    eax,esi
  423357:	mov    ebx,DWORD PTR [eax]
  423359:	call   DWORD PTR [ebx+0xc0]
  42335f:	cmp    eax,0xffffffff
  423362:	setne  bl
  423365:	cmp    eax,0xffffffff
  423368:	je     0x423376
  42336a:	mov    edx,eax
  42336c:	mov    eax,esi
  42336e:	mov    ecx,DWORD PTR [eax]
  423370:	call   DWORD PTR [ecx+0x98]
  423376:	mov    eax,ebx
  423378:	pop    esi
  423379:	pop    ebx
  42337a:	ret    
  42337b:	nop
  42337c:	push   ebp
  42337d:	mov    ebp,esp
  42337f:	xor    eax,eax
  423381:	push   ebp
  423382:	push   0x4233b5
  423387:	push   DWORD PTR fs:[eax]
  42338a:	mov    DWORD PTR fs:[eax],esp
  42338d:	inc    DWORD PTR ds:0x472bb0
  423393:	jne    0x4233a7
  423395:	cmp    BYTE PTR ds:0x461b44,0x0
  42339c:	je     0x4233a7
  42339e:	mov    eax,ds:0x46dc68
  4233a3:	mov    eax,DWORD PTR [eax]
  4233a5:	call   eax
  4233a7:	xor    eax,eax
  4233a9:	pop    edx
  4233aa:	pop    ecx
  4233ab:	pop    ecx
  4233ac:	mov    DWORD PTR fs:[eax],edx
  4233af:	push   0x4233bc
  4233b4:	ret    
  4233b5:	jmp    0x40481c
  4233ba:	jmp    0x4233b4
  4233bc:	pop    ebp
  4233bd:	ret    
  4233be:	mov    eax,eax
  4233c0:	or     al,0x34
  4233c2:	inc    edx
	...
  4233df:	add    BYTE PTR [esp+esi*1],dl
  4233e2:	inc    edx
  4233e3:	add    BYTE PTR [eax],dl
  4233e5:	add    BYTE PTR [eax],al
  4233e7:	add    BYTE PTR [ecx+edi*4+0x41],cl
  4233eb:	add    al,dl
  4233ed:	inc    edx
  4233ee:	inc    eax
  4233ef:	add    ah,bl
  4233f1:	inc    edx
  4233f2:	inc    eax
  4233f3:	add    al,ah
  4233f5:	inc    edx
  4233f6:	inc    eax
  4233f7:	add    ah,ah
  4233f9:	inc    edx
  4233fa:	inc    eax
  4233fb:	add    al,bl
  4233fd:	inc    edx
  4233fe:	inc    eax
  4233ff:	add    BYTE PTR [eax],bh
  423401:	inc    eax
  423402:	inc    eax
  423403:	add    BYTE PTR [eax+eax*2+0x40],dl
  423407:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42340d:	mov    ebp,0x40800041
  423412:	inc    edx
  423413:	add    BYTE PTR [esi],cl
  423415:	inc    ebp
  423416:	dec    ecx
  423417:	fs push ebx
  423419:	outs   dx,DWORD PTR ds:[esi]
  42341a:	arpl   WORD PTR [ebx+0x65],bp
  42341d:	je     0x423464
  42341f:	jb     0x423493
  423421:	outs   dx,DWORD PTR ds:[esi]
  423422:	jb     0x4233b4
  423424:	jo     0x42345a
  423426:	inc    edx
	...
  423443:	add    BYTE PTR [esp+esi*1+0x80042],bl
  42344a:	add    BYTE PTR [eax],al
  42344c:	nop
  42344d:	adc    BYTE PTR [eax+0x0],al
  423450:	rol    BYTE PTR [edx+0x40],1
  423453:	add    ah,bl
  423455:	inc    edx
  423456:	inc    eax
  423457:	add    al,ah
  423459:	inc    edx
  42345a:	inc    eax
  42345b:	add    ah,ah
  42345d:	inc    edx
  42345e:	inc    eax
  42345f:	add    al,bl
  423461:	inc    edx
  423462:	inc    eax
  423463:	add    BYTE PTR [eax],bh
  423465:	inc    eax
  423466:	inc    eax
  423467:	add    BYTE PTR [eax+eax*2+0x40],dl
  42346b:	add    BYTE PTR [esi+esi*1+0x42],bl
  42346f:	add    BYTE PTR [eax],bh
  423471:	xor    eax,DWORD PTR [eax+0x0]
  423474:	or     al,0x36
  423476:	inc    edx
  423477:	add    BYTE PTR [eax],bh
  423479:	xor    eax,DWORD PTR [eax+0x0]
  42347c:	cmp    BYTE PTR [ebx],dh
  42347e:	inc    eax
  42347f:	add    BYTE PTR [eax],bh
  423481:	xor    eax,DWORD PTR [eax+0x0]
  423484:	cmp    BYTE PTR [ebx],dh
  423486:	inc    eax
  423487:	add    BYTE PTR [eax],bh
  423489:	xor    eax,DWORD PTR [eax+0x0]
  42348c:	cmp    BYTE PTR [ebx],dh
  42348e:	inc    eax
  42348f:	add    BYTE PTR [eax+0x38004236],bl
  423495:	xor    eax,DWORD PTR [eax+0x0]
  423498:	cmp    BYTE PTR [ebx],dh
  42349a:	inc    eax
  42349b:	add    BYTE PTR ds:0x53644954,cl
  4234a1:	outs   dx,DWORD PTR ds:[esi]
  4234a2:	arpl   WORD PTR [ebx+0x65],bp
  4234a5:	je     0x4234f3
  4234a7:	imul   esi,DWORD PTR [ebx+0x74],0x34f8c08b
  4234ae:	inc    edx
	...
  4234b7:	add    BYTE PTR [eax+0x4235],dl
	...
  4234c9:	add    BYTE PTR [eax],al
  4234cb:	add    BYTE PTR [edx+0x10004235],ch
  4234d1:	add    BYTE PTR [eax],al
  4234d3:	add    BYTE PTR [eax-0x2fffbff0],dl
  4234d9:	inc    edx
  4234da:	inc    eax
  4234db:	add    ah,bl
  4234dd:	inc    edx
  4234de:	inc    eax
  4234df:	add    al,ah
  4234e1:	inc    edx
  4234e2:	inc    eax
  4234e3:	add    ah,ah
  4234e5:	inc    edx
  4234e6:	inc    eax
  4234e7:	add    al,bl
  4234e9:	inc    edx
  4234ea:	inc    eax
  4234eb:	add    BYTE PTR [eax],bh
  4234ed:	inc    eax
  4234ee:	inc    eax
  4234ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  4234f3:	add    BYTE PTR [eax+0x38004040],dl
  4234f9:	xor    eax,DWORD PTR [eax+0x0]
  4234fc:	cmp    BYTE PTR [ebx],dh
  4234fe:	inc    eax
  4234ff:	add    BYTE PTR [eax],bh
  423501:	xor    eax,DWORD PTR [eax+0x0]
  423504:	cmp    BYTE PTR [ebx],dh
  423506:	inc    eax
  423507:	add    BYTE PTR [eax],bh
  423509:	xor    eax,DWORD PTR [eax+0x0]
  42350c:	cmp    BYTE PTR [ebx],dh
  42350e:	inc    eax
  42350f:	add    BYTE PTR [eax],bh
  423511:	xor    eax,DWORD PTR [eax+0x0]
  423514:	cmp    BYTE PTR [ebx],dh
  423516:	inc    eax
  423517:	add    BYTE PTR [eax+0x38004236],dh
  42351d:	xor    eax,DWORD PTR [eax+0x0]
  423520:	cmp    BYTE PTR [ebx],dh
  423522:	inc    eax
  423523:	add    BYTE PTR [eax],bh
  423525:	xor    eax,DWORD PTR [eax+0x0]
  423528:	cmp    BYTE PTR [ebx],dh
  42352a:	inc    eax
  42352b:	add    BYTE PTR [eax],bh
  42352d:	xor    eax,DWORD PTR [eax+0x0]
  423530:	cmp    BYTE PTR [ebx],dh
  423532:	inc    eax
  423533:	add    BYTE PTR [eax],bh
  423535:	xor    eax,DWORD PTR [eax+0x0]
  423538:	cmp    BYTE PTR [ebx],dh
  42353a:	inc    eax
  42353b:	add    BYTE PTR [edx+eax*2+0x42],ch
  42353f:	add    BYTE PTR [eax],bh
  423541:	xor    eax,DWORD PTR [eax+0x0]
  423544:	cmp    BYTE PTR [ebx],dh
  423546:	inc    eax
  423547:	add    BYTE PTR [eax],bh
  423549:	xor    eax,DWORD PTR [eax+0x0]
  42354c:	cmp    BYTE PTR [ebx],dh
  42354e:	inc    eax
  42354f:	add    BYTE PTR [eax],bh
  423551:	xor    eax,DWORD PTR [eax+0x0]
  423554:	lods   al,BYTE PTR ds:[esi]
  423555:	inc    edx
  423556:	inc    edx
  423557:	add    BYTE PTR [eax],bh
  423559:	xor    eax,DWORD PTR [eax+0x0]
  42355c:	cmp    BYTE PTR [ebx],dh
  42355e:	inc    eax
  42355f:	add    BYTE PTR [eax],bh
  423561:	xor    eax,DWORD PTR [eax+0x0]
  423564:	cmp    BYTE PTR [ebx],dh
  423566:	inc    eax
  423567:	add    BYTE PTR [eax],bh
  423569:	xor    eax,DWORD PTR [eax+0x0]
  42356c:	cmp    BYTE PTR [ebx],dh
  42356e:	inc    eax
  42356f:	add    BYTE PTR [eax],bh
  423571:	xor    eax,DWORD PTR [eax+0x0]
  423574:	cmp    BYTE PTR [ebx],dh
  423576:	inc    eax
  423577:	add    BYTE PTR [eax],bh
  423579:	xor    eax,DWORD PTR [eax+0x0]
  42357c:	cmp    BYTE PTR [ebx],dh
  42357e:	inc    eax
  42357f:	add    BYTE PTR [eax],bh
  423581:	xor    eax,DWORD PTR [eax+0x0]
  423584:	cmp    BYTE PTR [ebx],dh
  423586:	inc    eax
  423587:	add    BYTE PTR [esp+eax*2],bl
  42358a:	inc    edx
  42358b:	add    BYTE PTR [eax],bh
  42358d:	xor    eax,DWORD PTR [eax+0x0]
  423590:	push   cs
  423591:	add    BYTE PTR [eax],al
  423593:	add    BYTE PTR [eax],al
  423595:	add    BYTE PTR [edx],al
  423597:	add    BYTE PTR [eax],al
  423599:	add    BYTE PTR [eax+edx*1+0x40040],al
  4235a0:	add    BYTE PTR [eax],al
  4235a2:	test   BYTE PTR [eax],dl
  4235a4:	inc    eax
  4235a5:	add    BYTE PTR [eax],cl
  4235a7:	add    BYTE PTR [eax],al
  4235a9:	add    BYTE PTR [eax],cl
  4235ab:	push   esp
  4235ac:	dec    ecx
  4235ad:	fs push ebx
  4235af:	je     0x423612
  4235b1:	arpl   WORD PTR [ebx-0x70],bp
  4235b4:	push   ebp
  4235b5:	mov    ebp,esp
  4235b7:	push   0x0
  4235b9:	push   ebx
  4235ba:	xor    eax,eax
  4235bc:	push   ebp
  4235bd:	push   0x4235ff
  4235c2:	push   DWORD PTR fs:[eax]
  4235c5:	mov    DWORD PTR fs:[eax],esp
  4235c8:	mov    dl,0x1
  4235ca:	mov    eax,ds:0x461b4c
  4235cf:	call   DWORD PTR [eax+0x20]
  4235d2:	mov    ebx,eax
  4235d4:	lea    edx,[ebp-0x4]
  4235d7:	mov    eax,ebx
  4235d9:	mov    ecx,DWORD PTR [eax]
  4235db:	call   DWORD PTR [ecx+0x4]
  4235de:	mov    edx,DWORD PTR [ebp-0x4]
  4235e1:	lea    eax,[ebx+0x4]
  4235e4:	call   0x404fdc
  4235e9:	xor    eax,eax
  4235eb:	pop    edx
  4235ec:	pop    ecx
  4235ed:	pop    ecx
  4235ee:	mov    DWORD PTR fs:[eax],edx
  4235f1:	push   0x423606
  4235f6:	lea    eax,[ebp-0x4]
  4235f9:	call   0x404f88
  4235fe:	ret    
  4235ff:	jmp    0x40481c
  423604:	jmp    0x4235f6
  423606:	mov    eax,ebx
  423608:	pop    ebx
  423609:	pop    ecx
  42360a:	pop    ebp
  42360b:	ret    
  42360c:	push   ebx
  42360d:	push   esi
  42360e:	test   dl,dl
  423610:	je     0x42361a
  423612:	add    esp,0xfffffff0
  423615:	call   0x4043ac
  42361a:	mov    ebx,edx
  42361c:	mov    esi,eax
  42361e:	xor    edx,edx
  423620:	mov    eax,esi
  423622:	call   0x404070
  423627:	mov    dl,0x1
  423629:	mov    eax,ds:0x41c4bc
  42362e:	call   0x41c164
  423633:	mov    DWORD PTR [esi+0x4],eax
  423636:	mov    eax,esi
  423638:	test   bl,bl
  42363a:	je     0x42364b
  42363c:	call   0x404404
  423641:	pop    DWORD PTR fs:0x0
  423648:	add    esp,0xc
  42364b:	mov    eax,esi
  42364d:	pop    esi
  42364e:	pop    ebx
  42364f:	ret    
  423650:	mov    dl,0x1
  423652:	mov    eax,ds:0x472bb4
  423657:	call   DWORD PTR [eax+0x4]
  42365a:	ret    
  42365b:	nop
  42365c:	push   ebx
  42365d:	push   esi
  42365e:	call   0x404454
  423663:	mov    ebx,edx
  423665:	mov    esi,eax
  423667:	lea    edx,[esi+0x4]
  42366a:	mov    eax,ds:0x41be90
  42366f:	call   0x41b14c
  423674:	mov    edx,ebx
  423676:	and    dl,0xfc
  423679:	mov    eax,esi
  42367b:	call   0x404090
  423680:	test   bl,bl
  423682:	jle    0x42368b
  423684:	mov    eax,esi
  423686:	call   0x4043fc
  42368b:	pop    esi
  42368c:	pop    ebx
  42368d:	ret    
  42368e:	mov    eax,eax
  423690:	mov    eax,DWORD PTR [eax+0x4]
  423693:	mov    edx,DWORD PTR [eax]
  423695:	call   DWORD PTR [edx]
  423697:	ret    
  423698:	push   ebp
  423699:	mov    ebp,esp
  42369b:	xor    eax,eax
  42369d:	pop    ebp
  42369e:	ret    0x8
  4236a1:	lea    eax,[eax+0x0]
  4236a4:	mov    eax,DWORD PTR [eax+0x4]
  4236a7:	mov    edx,DWORD PTR [eax]
  4236a9:	call   DWORD PTR [edx+0x4]
  4236ac:	ret    
  4236ad:	lea    eax,[eax+0x0]
  4236b0:	push   ebx
  4236b1:	push   esi
  4236b2:	test   dl,dl
  4236b4:	je     0x4236be
  4236b6:	add    esp,0xfffffff0
  4236b9:	call   0x4043ac
  4236be:	mov    ebx,edx
  4236c0:	mov    esi,eax
  4236c2:	xor    edx,edx
  4236c4:	mov    eax,esi
  4236c6:	call   0x404070
  4236cb:	mov    eax,esi
  4236cd:	test   bl,bl
  4236cf:	je     0x4236e0
  4236d1:	call   0x404404
  4236d6:	pop    DWORD PTR fs:0x0
  4236dd:	add    esp,0xc
  4236e0:	mov    eax,esi
  4236e2:	pop    esi
  4236e3:	pop    ebx
  4236e4:	ret    
  4236e5:	lea    eax,[eax+0x0]
  4236e8:	push   ebp
  4236e9:	mov    ebp,esp
  4236eb:	xor    ecx,ecx
  4236ed:	push   ecx
  4236ee:	push   ecx
  4236ef:	push   ecx
  4236f0:	push   ecx
  4236f1:	push   ecx
  4236f2:	push   ebx
  4236f3:	push   esi
  4236f4:	mov    DWORD PTR [ebp-0x4],edx
  4236f7:	mov    eax,DWORD PTR [ebp-0x4]
  4236fa:	call   0x405408
  4236ff:	xor    eax,eax
  423701:	push   ebp
  423702:	push   0x423828
  423707:	push   DWORD PTR fs:[eax]
  42370a:	mov    DWORD PTR fs:[eax],esp
  42370d:	push   0x1
  42370f:	lea    eax,[ebp-0x8]
  423712:	push   eax
  423713:	lea    eax,[ebp-0x4]
  423716:	mov    cl,0x1
  423718:	mov    edx,0x423840
  42371d:	call   0x41c7c4
  423722:	mov    edx,DWORD PTR [ebp-0x8]
  423725:	or     ecx,0xffffffff
  423728:	mov    eax,ds:0x41be90
  42372d:	call   0x41b254
  423732:	mov    esi,eax
  423734:	cmp    esi,0xffffffff
  423737:	jle    0x423741
  423739:	cmp    esi,0x100
  42373f:	jl     0x423745
  423741:	xor    ebx,ebx
  423743:	jmp    0x423747
  423745:	mov    bl,0x1
  423747:	push   0x1
  423749:	lea    eax,[ebp-0xc]
  42374c:	push   eax
  42374d:	lea    eax,[ebp-0x4]
  423750:	mov    cl,0x1
  423752:	mov    edx,0x423840
  423757:	call   0x41c7c4
  42375c:	mov    edx,DWORD PTR [ebp-0xc]
  42375f:	or     ecx,0xffffffff
  423762:	mov    eax,ds:0x41be90
  423767:	call   0x41b254
  42376c:	mov    esi,eax
  42376e:	test   bl,bl
  423770:	je     0x42377f
  423772:	cmp    esi,0xffffffff
  423775:	jle    0x42377f
  423777:	cmp    esi,0x100
  42377d:	jl     0x423783
  42377f:	xor    eax,eax
  423781:	jmp    0x423785
  423783:	mov    al,0x1
  423785:	mov    ebx,eax
  423787:	push   0x1
  423789:	lea    eax,[ebp-0x10]
  42378c:	push   eax
  42378d:	lea    eax,[ebp-0x4]
  423790:	mov    cl,0x1
  423792:	mov    edx,0x423840
  423797:	call   0x41c7c4
  42379c:	mov    edx,DWORD PTR [ebp-0x10]
  42379f:	or     ecx,0xffffffff
  4237a2:	mov    eax,ds:0x41be90
  4237a7:	call   0x41b254
  4237ac:	mov    esi,eax
  4237ae:	test   bl,bl
  4237b0:	je     0x4237bf
  4237b2:	cmp    esi,0xffffffff
  4237b5:	jle    0x4237bf
  4237b7:	cmp    esi,0x100
  4237bd:	jl     0x4237c3
  4237bf:	xor    eax,eax
  4237c1:	jmp    0x4237c5
  4237c3:	mov    al,0x1
  4237c5:	mov    ebx,eax
  4237c7:	push   0x1
  4237c9:	lea    eax,[ebp-0x14]
  4237cc:	push   eax
  4237cd:	lea    eax,[ebp-0x4]
  4237d0:	mov    cl,0x1
  4237d2:	mov    edx,0x423840
  4237d7:	call   0x41c7c4
  4237dc:	mov    edx,DWORD PTR [ebp-0x14]
  4237df:	or     ecx,0xffffffff
  4237e2:	mov    eax,ds:0x41be90
  4237e7:	call   0x41b254
  4237ec:	mov    esi,eax
  4237ee:	test   bl,bl
  4237f0:	je     0x423805
  4237f2:	cmp    esi,0xffffffff
  4237f5:	jle    0x423805
  4237f7:	cmp    esi,0x100
  4237fd:	jge    0x423805
  4237ff:	cmp    DWORD PTR [ebp-0x4],0x0
  423803:	je     0x423809
  423805:	xor    eax,eax
  423807:	jmp    0x42380b
  423809:	mov    al,0x1
  42380b:	mov    ebx,eax
  42380d:	xor    eax,eax
  42380f:	pop    edx
  423810:	pop    ecx
  423811:	pop    ecx
  423812:	mov    DWORD PTR fs:[eax],edx
  423815:	push   0x42382f
  42381a:	lea    eax,[ebp-0x14]
  42381d:	mov    edx,0x5
  423822:	call   0x404fac
  423827:	ret    
  423828:	jmp    0x40481c
  42382d:	jmp    0x42381a
  42382f:	mov    eax,ebx
  423831:	pop    esi
  423832:	pop    ebx
  423833:	mov    esp,ebp
  423835:	pop    ebp
  423836:	ret    
  423837:	add    bh,bh
  423839:	(bad)  
  42383a:	(bad)  
  42383b:	inc    DWORD PTR [ecx]
  42383d:	add    BYTE PTR [eax],al
  42383f:	add    BYTE PTR [esi],ch
  423841:	add    BYTE PTR [eax],al
  423843:	add    BYTE PTR [ebp-0x75],dl
  423846:	in     al,dx
  423847:	push   ecx
  423848:	mov    ecx,0x10
  42384d:	push   0x0
  42384f:	push   0x0
  423851:	dec    ecx
  423852:	jne    0x42384d
  423854:	xchg   DWORD PTR [ebp-0x4],ecx
  423857:	push   ebx
  423858:	push   esi
  423859:	push   edi
  42385a:	mov    ebx,ecx
  42385c:	mov    esi,edx
  42385e:	xor    eax,eax
  423860:	push   ebp
  423861:	push   0x423efb
  423866:	push   DWORD PTR fs:[eax]
  423869:	mov    DWORD PTR fs:[eax],esp
  42386c:	mov    eax,ebx
  42386e:	call   0x404f88
  423873:	lea    eax,[ebp-0x4]
  423876:	mov    edx,esi
  423878:	call   0x405020
  42387d:	mov    eax,DWORD PTR [ebp-0x4]
  423880:	call   0x405248
  423885:	test   eax,eax
  423887:	je     0x423ed5
  42388d:	mov    eax,0x1
  423892:	mov    edx,DWORD PTR [ebp-0x4]
  423895:	dec    eax
  423896:	test   edx,edx
  423898:	je     0x42389f
  42389a:	cmp    eax,DWORD PTR [edx-0x4]
  42389d:	jb     0x4238a4
  42389f:	call   0x403f68
  4238a4:	inc    eax
  4238a5:	cmp    BYTE PTR [edx+eax*1-0x1],0x3a
  4238aa:	jne    0x4238bc
  4238ac:	lea    eax,[ebp-0x4]
  4238af:	mov    ecx,DWORD PTR [ebp-0x4]
  4238b2:	mov    edx,0x423f14
  4238b7:	call   0x4052a0
  4238bc:	mov    eax,DWORD PTR [ebp-0x4]
  4238bf:	call   0x405248
  4238c4:	mov    edx,DWORD PTR [ebp-0x4]
  4238c7:	dec    eax
  4238c8:	test   edx,edx
  4238ca:	je     0x4238d1
  4238cc:	cmp    eax,DWORD PTR [edx-0x4]
  4238cf:	jb     0x4238d6
  4238d1:	call   0x403f68
  4238d6:	inc    eax
  4238d7:	cmp    BYTE PTR [edx+eax*1-0x1],0x3a
  4238dc:	jne    0x4238eb
  4238de:	lea    eax,[ebp-0x4]
  4238e1:	mov    edx,0x423f14
  4238e6:	call   0x405254
  4238eb:	xor    eax,eax
  4238ed:	mov    DWORD PTR [ebp-0x8],eax
  4238f0:	xor    eax,eax
  4238f2:	mov    DWORD PTR [ebp-0xc],eax
  4238f5:	mov    eax,DWORD PTR [ebp-0x4]
  4238f8:	call   0x405248
  4238fd:	test   eax,eax
  4238ff:	jle    0x4239bb
  423905:	mov    DWORD PTR [ebp-0x14],eax
  423908:	mov    esi,0x1
  42390d:	mov    eax,DWORD PTR [ebp-0x4]
  423910:	dec    esi
  423911:	test   eax,eax
  423913:	je     0x42391a
  423915:	cmp    esi,DWORD PTR [eax-0x4]
  423918:	jb     0x42391f
  42391a:	call   0x403f68
  42391f:	inc    esi
  423920:	movzx  eax,BYTE PTR [eax+esi*1-0x1]
  423925:	cmp    eax,0x3a
  423928:	jg     0x42393e
  42392a:	je     0x42397d
  42392c:	sub    eax,0x2e
  42392f:	je     0x423953
  423931:	add    eax,0xfffffffe
  423934:	sub    eax,0xa
  423937:	jb     0x4239b1
  423939:	jmp    0x423ed5
  42393e:	add    eax,0xffffffbf
  423941:	sub    eax,0x6
  423944:	jb     0x4239a7
  423946:	add    eax,0xffffffe6
  423949:	sub    eax,0x6
  42394c:	jb     0x4239a7
  42394e:	jmp    0x423ed5
  423953:	add    DWORD PTR [ebp-0x8],0x1
  423957:	jno    0x42395e
  423959:	call   0x403f70
  42395e:	cmp    DWORD PTR [ebp-0x8],0x4
  423962:	jge    0x423ed5
  423968:	mov    eax,DWORD PTR [ebp-0x8]
  42396b:	dec    eax
  42396c:	cmp    eax,0x2
  42396f:	jbe    0x423976
  423971:	call   0x403f68
  423976:	inc    eax
  423977:	mov    DWORD PTR [ebp+eax*4-0x44],esi
  42397b:	jmp    0x4239b1
  42397d:	add    DWORD PTR [ebp-0xc],0x1
  423981:	jno    0x423988
  423983:	call   0x403f70
  423988:	cmp    DWORD PTR [ebp-0xc],0x8
  42398c:	jge    0x423ed5
  423992:	mov    eax,DWORD PTR [ebp-0xc]
  423995:	dec    eax
  423996:	cmp    eax,0x7
  423999:	jbe    0x4239a0
  42399b:	call   0x403f68
  4239a0:	inc    eax
  4239a1:	mov    DWORD PTR [ebp+eax*4-0x38],esi
  4239a5:	jmp    0x4239b1
  4239a7:	cmp    DWORD PTR [ebp-0x8],0x0
  4239ab:	jg     0x423ed5
  4239b1:	inc    esi
  4239b2:	dec    DWORD PTR [ebp-0x14]
  4239b5:	jne    0x42390d
  4239bb:	mov    eax,DWORD PTR [ebp-0x8]
  4239be:	test   eax,eax
  4239c0:	je     0x4239cb
  4239c2:	sub    eax,0x3
  4239c5:	jne    0x423ed5
  4239cb:	cmp    DWORD PTR [ebp-0x8],0x3
  4239cf:	jne    0x4239fe
  4239d1:	mov    eax,DWORD PTR [ebp-0xc]
  4239d4:	add    eax,0xfffffffe
  4239d7:	sub    eax,0x5
  4239da:	jae    0x423ed5
  4239e0:	mov    eax,DWORD PTR [ebp-0xc]
  4239e3:	dec    eax
  4239e4:	cmp    eax,0x7
  4239e7:	jbe    0x4239ee
  4239e9:	call   0x403f68
  4239ee:	inc    eax
  4239ef:	mov    eax,DWORD PTR [ebp+eax*4-0x38]
  4239f3:	cmp    eax,DWORD PTR [ebp-0x40]
  4239f6:	jg     0x423ed5
  4239fc:	jmp    0x423a0d
  4239fe:	mov    eax,DWORD PTR [ebp-0xc]
  423a01:	add    eax,0xfffffffe
  423a04:	sub    eax,0x6
  423a07:	jae    0x423ed5
  423a0d:	lea    eax,[ebp-0x48]
  423a10:	push   eax
  423a11:	mov    ecx,DWORD PTR [ebp-0x34]
  423a14:	sub    ecx,0x1
  423a17:	jno    0x423a1e
  423a19:	call   0x403f70
  423a1e:	mov    edx,0x1
  423a23:	mov    eax,DWORD PTR [ebp-0x4]
  423a26:	call   0x405480
  423a2b:	mov    ecx,DWORD PTR [ebp-0x48]
  423a2e:	lea    eax,[ebp-0x44]
  423a31:	mov    edx,0x423f20
  423a36:	call   0x4052a0
  423a3b:	mov    edx,DWORD PTR [ebp-0x44]
  423a3e:	or     ecx,0xffffffff
  423a41:	mov    eax,ds:0x41be90
  423a46:	call   0x41b254
  423a4b:	mov    edi,eax
  423a4d:	test   edi,edi
  423a4f:	jl     0x423ed5
  423a55:	cmp    edi,0xffff
  423a5b:	jg     0x423ed5
  423a61:	lea    eax,[ebp-0x4c]
  423a64:	push   eax
  423a65:	mov    ecx,0x1
  423a6a:	mov    edx,edi
  423a6c:	mov    eax,ds:0x41be90
  423a71:	call   0x41b168
  423a76:	mov    edx,DWORD PTR [ebp-0x4c]
  423a79:	mov    eax,ebx
  423a7b:	mov    ecx,0x423f2c
  423a80:	call   0x4052a0
  423a85:	mov    BYTE PTR [ebp-0xd],0x0
  423a89:	mov    eax,DWORD PTR [ebp-0xc]
  423a8c:	sub    eax,0x2
  423a8f:	jl     0x423c05
  423a95:	inc    eax
  423a96:	mov    DWORD PTR [ebp-0x14],eax
  423a99:	mov    esi,0x2
  423a9e:	mov    eax,esi
  423aa0:	sub    eax,0x1
  423aa3:	jno    0x423aaa
  423aa5:	call   0x403f70
  423aaa:	dec    eax
  423aab:	cmp    eax,0x7
  423aae:	jbe    0x423ab5
  423ab0:	call   0x403f68
  423ab5:	inc    eax
  423ab6:	mov    edi,DWORD PTR [ebp+eax*4-0x38]
  423aba:	dec    esi
  423abb:	cmp    esi,0x7
  423abe:	jbe    0x423ac5
  423ac0:	call   0x403f68
  423ac5:	inc    esi
  423ac6:	mov    eax,DWORD PTR [ebp+esi*4-0x38]
  423aca:	sub    eax,0x1
  423acd:	jno    0x423ad4
  423acf:	call   0x403f70
  423ad4:	cmp    edi,eax
  423ad6:	jne    0x423b2b
  423ad8:	cmp    BYTE PTR [ebp-0xd],0x0
  423adc:	je     0x423aea
  423ade:	mov    eax,ebx
  423ae0:	call   0x404f88
  423ae5:	jmp    0x423ed5
  423aea:	mov    BYTE PTR [ebp-0xd],0x1
  423aee:	mov    eax,0x8
  423af3:	sub    eax,DWORD PTR [ebp-0xc]
  423af6:	jno    0x423afd
  423af8:	call   0x403f70
  423afd:	cmp    DWORD PTR [ebp-0x8],0x0
  423b01:	jle    0x423b0d
  423b03:	sub    eax,0x2
  423b06:	jno    0x423b0d
  423b08:	call   0x403f70
  423b0d:	mov    edi,eax
  423b0f:	test   edi,edi
  423b11:	jle    0x423bfb
  423b17:	mov    eax,ebx
  423b19:	mov    edx,0x423f38
  423b1e:	call   0x405254
  423b23:	dec    edi
  423b24:	jne    0x423b17
  423b26:	jmp    0x423bfb
  423b2b:	lea    eax,[ebp-0x54]
  423b2e:	push   eax
  423b2f:	dec    esi
  423b30:	cmp    esi,0x7
  423b33:	jbe    0x423b3a
  423b35:	call   0x403f68
  423b3a:	inc    esi
  423b3b:	mov    ecx,DWORD PTR [ebp+esi*4-0x38]
  423b3f:	mov    eax,esi
  423b41:	sub    eax,0x1
  423b44:	jno    0x423b4b
  423b46:	call   0x403f70
  423b4b:	dec    eax
  423b4c:	cmp    eax,0x7
  423b4f:	jbe    0x423b56
  423b51:	call   0x403f68
  423b56:	inc    eax
  423b57:	sub    ecx,edi
  423b59:	jno    0x423b60
  423b5b:	call   0x403f70
  423b60:	sub    ecx,0x1
  423b63:	jno    0x423b6a
  423b65:	call   0x403f70
  423b6a:	mov    eax,esi
  423b6c:	sub    eax,0x1
  423b6f:	jno    0x423b76
  423b71:	call   0x403f70
  423b76:	dec    eax
  423b77:	cmp    eax,0x7
  423b7a:	jbe    0x423b81
  423b7c:	call   0x403f68
  423b81:	inc    eax
  423b82:	mov    edx,edi
  423b84:	add    edx,0x1
  423b87:	jno    0x423b8e
  423b89:	call   0x403f70
  423b8e:	mov    eax,DWORD PTR [ebp-0x4]
  423b91:	call   0x405480
  423b96:	mov    ecx,DWORD PTR [ebp-0x54]
  423b99:	lea    eax,[ebp-0x50]
  423b9c:	mov    edx,0x423f20
  423ba1:	call   0x4052a0
  423ba6:	mov    edx,DWORD PTR [ebp-0x50]
  423ba9:	or     ecx,0xffffffff
  423bac:	mov    eax,ds:0x41be90
  423bb1:	call   0x41b254
  423bb6:	mov    edi,eax
  423bb8:	test   edi,edi
  423bba:	jl     0x423bc4
  423bbc:	cmp    edi,0xffff
  423bc2:	jle    0x423bd0
  423bc4:	mov    eax,ebx
  423bc6:	call   0x404f88
  423bcb:	jmp    0x423ed5
  423bd0:	push   DWORD PTR [ebx]
  423bd2:	lea    eax,[ebp-0x58]
  423bd5:	push   eax
  423bd6:	mov    ecx,0x1
  423bdb:	mov    edx,edi
  423bdd:	mov    eax,ds:0x41be90
  423be2:	call   0x41b168
  423be7:	push   DWORD PTR [ebp-0x58]
  423bea:	push   0x423f2c
  423bef:	mov    eax,ebx
  423bf1:	mov    edx,0x3
  423bf6:	call   0x40531c
  423bfb:	inc    esi
  423bfc:	dec    DWORD PTR [ebp-0x14]
  423bff:	jne    0x423a9e
  423c05:	cmp    DWORD PTR [ebp-0x8],0x0
  423c09:	jne    0x423ca2
  423c0f:	lea    eax,[ebp-0x60]
  423c12:	push   eax
  423c13:	mov    eax,DWORD PTR [ebp-0xc]
  423c16:	dec    eax
  423c17:	cmp    eax,0x7
  423c1a:	jbe    0x423c21
  423c1c:	call   0x403f68
  423c21:	inc    eax
  423c22:	mov    edx,DWORD PTR [ebp+eax*4-0x38]
  423c26:	add    edx,0x1
  423c29:	jno    0x423c30
  423c2b:	call   0x403f70
  423c30:	mov    ecx,0x7fffffff
  423c35:	mov    eax,DWORD PTR [ebp-0x4]
  423c38:	call   0x405480
  423c3d:	mov    ecx,DWORD PTR [ebp-0x60]
  423c40:	lea    eax,[ebp-0x5c]
  423c43:	mov    edx,0x423f20
  423c48:	call   0x4052a0
  423c4d:	mov    edx,DWORD PTR [ebp-0x5c]
  423c50:	or     ecx,0xffffffff
  423c53:	mov    eax,ds:0x41be90
  423c58:	call   0x41b254
  423c5d:	mov    edi,eax
  423c5f:	test   edi,edi
  423c61:	jl     0x423c6b
  423c63:	cmp    edi,0xffff
  423c69:	jle    0x423c77
  423c6b:	mov    eax,ebx
  423c6d:	call   0x404f88
  423c72:	jmp    0x423ed5
  423c77:	push   DWORD PTR [ebx]
  423c79:	lea    eax,[ebp-0x64]
  423c7c:	push   eax
  423c7d:	mov    ecx,0x1
  423c82:	mov    edx,edi
  423c84:	mov    eax,ds:0x41be90
  423c89:	call   0x41b168
  423c8e:	push   DWORD PTR [ebp-0x64]
  423c91:	push   0x423f2c
  423c96:	mov    eax,ebx
  423c98:	mov    edx,0x3
  423c9d:	call   0x40531c
  423ca2:	cmp    DWORD PTR [ebp-0x8],0x0
  423ca6:	jle    0x423ebb
  423cac:	lea    eax,[ebp-0x68]
  423caf:	push   eax
  423cb0:	mov    eax,DWORD PTR [ebp-0xc]
  423cb3:	dec    eax
  423cb4:	cmp    eax,0x7
  423cb7:	jbe    0x423cbe
  423cb9:	call   0x403f68
  423cbe:	inc    eax
  423cbf:	mov    esi,DWORD PTR [ebp+eax*4-0x38]
  423cc3:	mov    ecx,DWORD PTR [ebp-0x40]
  423cc6:	sub    ecx,esi
  423cc8:	jno    0x423ccf
  423cca:	call   0x403f70
  423ccf:	sub    ecx,0x1
  423cd2:	jno    0x423cd9
  423cd4:	call   0x403f70
  423cd9:	mov    eax,DWORD PTR [ebp-0xc]
  423cdc:	dec    eax
  423cdd:	cmp    eax,0x7
  423ce0:	jbe    0x423ce7
  423ce2:	call   0x403f68
  423ce7:	inc    eax
  423ce8:	mov    edx,esi
  423cea:	add    edx,0x1
  423ced:	jno    0x423cf4
  423cef:	call   0x403f70
  423cf4:	mov    eax,DWORD PTR [ebp-0x4]
  423cf7:	call   0x405480
  423cfc:	mov    edx,DWORD PTR [ebp-0x68]
  423cff:	or     ecx,0xffffffff
  423d02:	mov    eax,ds:0x41be90
  423d07:	call   0x41b254
  423d0c:	mov    edi,eax
  423d0e:	test   edi,edi
  423d10:	jl     0x423d1a
  423d12:	cmp    edi,0xff
  423d18:	jle    0x423d26
  423d1a:	mov    eax,ebx
  423d1c:	call   0x404f88
  423d21:	jmp    0x423ed5
  423d26:	lea    eax,[ebp-0x6c]
  423d29:	push   eax
  423d2a:	mov    ecx,0x2
  423d2f:	mov    edx,edi
  423d31:	mov    eax,ds:0x41be90
  423d36:	call   0x41b168
  423d3b:	mov    edx,DWORD PTR [ebp-0x6c]
  423d3e:	mov    eax,ebx
  423d40:	call   0x405254
  423d45:	lea    eax,[ebp-0x70]
  423d48:	push   eax
  423d49:	mov    ecx,DWORD PTR [ebp-0x3c]
  423d4c:	mov    esi,DWORD PTR [ebp-0x40]
  423d4f:	sub    ecx,esi
  423d51:	jno    0x423d58
  423d53:	call   0x403f70
  423d58:	sub    ecx,0x1
  423d5b:	jno    0x423d62
  423d5d:	call   0x403f70
  423d62:	mov    edx,esi
  423d64:	add    edx,0x1
  423d67:	jno    0x423d6e
  423d69:	call   0x403f70
  423d6e:	mov    eax,DWORD PTR [ebp-0x4]
  423d71:	call   0x405480
  423d76:	mov    edx,DWORD PTR [ebp-0x70]
  423d79:	or     ecx,0xffffffff
  423d7c:	mov    eax,ds:0x41be90
  423d81:	call   0x41b254
  423d86:	mov    edi,eax
  423d88:	test   edi,edi
  423d8a:	jl     0x423d94
  423d8c:	cmp    edi,0xff
  423d92:	jle    0x423da0
  423d94:	mov    eax,ebx
  423d96:	call   0x404f88
  423d9b:	jmp    0x423ed5
  423da0:	push   DWORD PTR [ebx]
  423da2:	lea    eax,[ebp-0x74]
  423da5:	push   eax
  423da6:	mov    ecx,0x2
  423dab:	mov    edx,edi
  423dad:	mov    eax,ds:0x41be90
  423db2:	call   0x41b168
  423db7:	push   DWORD PTR [ebp-0x74]
  423dba:	push   0x423f2c
  423dbf:	mov    eax,ebx
  423dc1:	mov    edx,0x3
  423dc6:	call   0x40531c
  423dcb:	lea    eax,[ebp-0x78]
  423dce:	push   eax
  423dcf:	mov    ecx,DWORD PTR [ebp-0x38]
  423dd2:	mov    esi,DWORD PTR [ebp-0x3c]
  423dd5:	sub    ecx,esi
  423dd7:	jno    0x423dde
  423dd9:	call   0x403f70
  423dde:	sub    ecx,0x1
  423de1:	jno    0x423de8
  423de3:	call   0x403f70
  423de8:	mov    edx,esi
  423dea:	add    edx,0x1
  423ded:	jno    0x423df4
  423def:	call   0x403f70
  423df4:	mov    eax,DWORD PTR [ebp-0x4]
  423df7:	call   0x405480
  423dfc:	mov    edx,DWORD PTR [ebp-0x78]
  423dff:	or     ecx,0xffffffff
  423e02:	mov    eax,ds:0x41be90
  423e07:	call   0x41b254
  423e0c:	mov    edi,eax
  423e0e:	test   edi,edi
  423e10:	jl     0x423e1a
  423e12:	cmp    edi,0xff
  423e18:	jle    0x423e26
  423e1a:	mov    eax,ebx
  423e1c:	call   0x404f88
  423e21:	jmp    0x423ed5
  423e26:	lea    eax,[ebp-0x7c]
  423e29:	push   eax
  423e2a:	mov    ecx,0x2
  423e2f:	mov    edx,edi
  423e31:	mov    eax,ds:0x41be90
  423e36:	call   0x41b168
  423e3b:	mov    edx,DWORD PTR [ebp-0x7c]
  423e3e:	mov    eax,ebx
  423e40:	call   0x405254
  423e45:	lea    eax,[ebp-0x80]
  423e48:	push   eax
  423e49:	mov    edx,DWORD PTR [ebp-0x38]
  423e4c:	add    edx,0x1
  423e4f:	jno    0x423e56
  423e51:	call   0x403f70
  423e56:	mov    ecx,0x3
  423e5b:	mov    eax,DWORD PTR [ebp-0x4]
  423e5e:	call   0x405480
  423e63:	mov    edx,DWORD PTR [ebp-0x80]
  423e66:	or     ecx,0xffffffff
  423e69:	mov    eax,ds:0x41be90
  423e6e:	call   0x41b254
  423e73:	mov    edi,eax
  423e75:	test   edi,edi
  423e77:	jl     0x423e81
  423e79:	cmp    edi,0xff
  423e7f:	jle    0x423e8a
  423e81:	mov    eax,ebx
  423e83:	call   0x404f88
  423e88:	jmp    0x423ed5
  423e8a:	push   DWORD PTR [ebx]
  423e8c:	lea    eax,[ebp-0x84]
  423e92:	push   eax
  423e93:	mov    ecx,0x2
  423e98:	mov    edx,edi
  423e9a:	mov    eax,ds:0x41be90
  423e9f:	call   0x41b168
  423ea4:	push   DWORD PTR [ebp-0x84]
  423eaa:	push   0x423f2c
  423eaf:	mov    eax,ebx
  423eb1:	mov    edx,0x3
  423eb6:	call   0x40531c
  423ebb:	mov    eax,DWORD PTR [ebx]
  423ebd:	call   0x405248
  423ec2:	mov    edx,eax
  423ec4:	sub    edx,0x1
  423ec7:	jno    0x423ece
  423ec9:	call   0x403f70
  423ece:	mov    eax,ebx
  423ed0:	call   0x4056a8
  423ed5:	xor    eax,eax
  423ed7:	pop    edx
  423ed8:	pop    ecx
  423ed9:	pop    ecx
  423eda:	mov    DWORD PTR fs:[eax],edx
  423edd:	push   0x423f02
  423ee2:	lea    eax,[ebp-0x84]
  423ee8:	mov    edx,0x11
  423eed:	call   0x404fac
  423ef2:	lea    eax,[ebp-0x4]
  423ef5:	call   0x404f88
  423efa:	ret    
  423efb:	jmp    0x40481c
  423f00:	jmp    0x423ee2
  423f02:	pop    edi
  423f03:	pop    esi
  423f04:	pop    ebx
  423f05:	mov    esp,ebp
  423f07:	pop    ebp
  423f08:	ret    
  423f09:	add    BYTE PTR [eax],al
  423f0b:	add    bh,bh
  423f0d:	(bad)  
  423f0e:	(bad)  
  423f0f:	inc    DWORD PTR [ecx]
  423f11:	add    BYTE PTR [eax],al
  423f13:	add    BYTE PTR [eax],dh
  423f15:	add    BYTE PTR [eax],al
  423f17:	add    bh,bh
  423f19:	(bad)  
  423f1a:	(bad)  
  423f1b:	inc    DWORD PTR [ecx]
  423f1d:	add    BYTE PTR [eax],al
  423f1f:	add    BYTE PTR [eax+eax*1],ah
  423f22:	add    BYTE PTR [eax],al
  423f24:	(bad)  
  423f25:	(bad)  
  423f26:	(bad)  
  423f27:	inc    DWORD PTR [ecx]
  423f29:	add    BYTE PTR [eax],al
  423f2b:	add    BYTE PTR [edx],bh
  423f2d:	add    BYTE PTR [eax],al
  423f2f:	add    bh,bh
  423f31:	(bad)  
  423f32:	(bad)  
  423f33:	inc    DWORD PTR [edx]
  423f35:	add    BYTE PTR [eax],al
  423f37:	add    BYTE PTR [eax],dh
  423f39:	cmp    al,BYTE PTR [eax]
  423f3b:	add    BYTE PTR [ebp-0x75],dl
  423f3e:	in     al,dx
  423f3f:	push   0x0
  423f41:	push   0x0
  423f43:	xor    eax,eax
  423f45:	push   ebp
  423f46:	push   0x423fbe
  423f4b:	push   DWORD PTR fs:[eax]
  423f4e:	mov    DWORD PTR fs:[eax],esp
  423f51:	lea    edx,[ebp-0x4]
  423f54:	mov    eax,ds:0x46db58
  423f59:	call   0x406f48
  423f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  423f61:	cmp    DWORD PTR ds:0x461b4c,0x0
  423f68:	sete   dl
  423f6b:	mov    eax,ds:0x41b94c
  423f70:	call   0x41be6c
  423f75:	lea    edx,[ebp-0x8]
  423f78:	mov    eax,ds:0x46dcbc
  423f7d:	call   0x406f48
  423f82:	mov    ecx,DWORD PTR [ebp-0x8]
  423f85:	cmp    DWORD PTR ds:0x461b48,0x0
  423f8c:	setne  dl
  423f8f:	mov    eax,ds:0x41b94c
  423f94:	call   0x41be6c
  423f99:	call   0x4235b4
  423f9e:	mov    ds:0x461b48,eax
  423fa3:	xor    eax,eax
  423fa5:	pop    edx
  423fa6:	pop    ecx
  423fa7:	pop    ecx
  423fa8:	mov    DWORD PTR fs:[eax],edx
  423fab:	push   0x423fc5
  423fb0:	lea    eax,[ebp-0x8]
  423fb3:	mov    edx,0x2
  423fb8:	call   0x404fac
  423fbd:	ret    
  423fbe:	jmp    0x40481c
  423fc3:	jmp    0x423fb0
  423fc5:	pop    ecx
  423fc6:	pop    ecx
  423fc7:	pop    ebp
  423fc8:	ret    
  423fc9:	lea    eax,[eax+0x0]
  423fcc:	push   ebp
  423fcd:	mov    ebp,esp
  423fcf:	push   ecx
  423fd0:	push   ebx
  423fd1:	mov    DWORD PTR [ebp-0x4],edx
  423fd4:	mov    ebx,eax
  423fd6:	test   cl,cl
  423fd8:	jne    0x424026
  423fda:	mov    edx,0x424060
  423fdf:	mov    eax,DWORD PTR [ebp-0x4]
  423fe2:	call   0x41d948
  423fe7:	test   al,al
  423fe9:	je     0x423ffa
  423feb:	mov    eax,DWORD PTR [ebp+0x8]
  423fee:	mov    edx,0x424074
  423ff3:	call   0x404fdc
  423ff8:	jmp    0x42404f
  423ffa:	mov    edx,DWORD PTR [ebp-0x4]
  423ffd:	mov    eax,ebx
  423fff:	call   0x4236e8
  424004:	test   al,al
  424006:	je     0x424015
  424008:	mov    eax,DWORD PTR [ebp+0x8]
  42400b:	mov    edx,DWORD PTR [ebp-0x4]
  42400e:	call   0x404fdc
  424013:	jmp    0x42404f
  424015:	mov    eax,DWORD PTR [ebp+0x8]
  424018:	push   eax
  424019:	xor    ecx,ecx
  42401b:	mov    edx,DWORD PTR [ebp-0x4]
  42401e:	mov    eax,ebx
  424020:	mov    ebx,DWORD PTR [eax]
  424022:	call   DWORD PTR [ebx]
  424024:	jmp    0x42404f
  424026:	cmp    cl,0x1
  424029:	jne    0x42404f
  42402b:	mov    ecx,DWORD PTR [ebp+0x8]
  42402e:	mov    edx,DWORD PTR [ebp-0x4]
  424031:	mov    eax,ebx
  424033:	call   0x423844
  424038:	mov    eax,DWORD PTR [ebp+0x8]
  42403b:	cmp    DWORD PTR [eax],0x0
  42403e:	jne    0x42404f
  424040:	mov    eax,DWORD PTR [ebp+0x8]
  424043:	push   eax
  424044:	mov    cl,0x1
  424046:	mov    edx,DWORD PTR [ebp-0x4]
  424049:	mov    eax,ebx
  42404b:	mov    ebx,DWORD PTR [eax]
  42404d:	call   DWORD PTR [ebx]
  42404f:	pop    ebx
  424050:	pop    ecx
  424051:	pop    ebp
  424052:	ret    0x4
  424055:	add    BYTE PTR [eax],al
  424057:	add    bh,bh
  424059:	(bad)  
  42405a:	(bad)  
  42405b:	dec    DWORD PTR [ecx]
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edi+ecx*2+0x43],cl
  424063:	inc    ecx
  424064:	dec    esp
  424065:	dec    eax
  424066:	dec    edi
  424067:	push   ebx
  424068:	push   esp
  424069:	add    BYTE PTR [eax],al
  42406b:	add    bh,bh
  42406d:	(bad)  
  42406e:	(bad)  
  42406f:	dec    DWORD PTR [ecx]
  424071:	add    BYTE PTR [eax],al
  424073:	add    BYTE PTR [ecx],dh
  424075:	xor    dh,BYTE PTR [edi]
  424077:	xor    BYTE PTR cs:[esi],ch
  42407a:	xor    BYTE PTR [esi],ch
  42407c:	xor    DWORD PTR [eax],eax
  42407e:	add    BYTE PTR [eax],al
  424080:	push   ebp
  424081:	mov    ebp,esp
  424083:	push   ebx
  424084:	push   esi
  424085:	push   edi
  424086:	test   dl,dl
  424088:	je     0x424092
  42408a:	add    esp,0xfffffff0
  42408d:	call   0x4043ac
  424092:	mov    esi,ecx
  424094:	mov    ebx,edx
  424096:	mov    edi,eax
  424098:	mov    ecx,DWORD PTR [ebp+0x8]
  42409b:	xor    edx,edx
  42409d:	mov    eax,edi
  42409f:	call   0x41bdbc
  4240a4:	mov    DWORD PTR [edi+0xc],esi
  4240a7:	mov    eax,edi
  4240a9:	test   bl,bl
  4240ab:	je     0x4240bc
  4240ad:	call   0x404404
  4240b2:	pop    DWORD PTR fs:0x0
  4240b9:	add    esp,0xc
  4240bc:	mov    eax,edi
  4240be:	pop    edi
  4240bf:	pop    esi
  4240c0:	pop    ebx
  4240c1:	pop    ebp
  4240c2:	ret    0x4
  4240c5:	lea    eax,[eax+0x0]
  4240c8:	push   ebp
  4240c9:	mov    ebp,esp
  4240cb:	cmp    DWORD PTR ds:0x472bbc,0x0
  4240d2:	jne    0x4240e8
  4240d4:	mov    ecx,0x281
  4240d9:	mov    edx,0x424150
  4240de:	mov    eax,0x424188
  4240e3:	call   0x404eb4
  4240e8:	mov    eax,ds:0x472bbc
  4240ed:	mov    edx,DWORD PTR [eax]
  4240ef:	call   DWORD PTR [edx]
  4240f1:	xor    eax,eax
  4240f3:	push   ebp
  4240f4:	push   0x42413d
  4240f9:	push   DWORD PTR fs:[eax]
  4240fc:	mov    DWORD PTR fs:[eax],esp
  4240ff:	sub    DWORD PTR ds:0x461b50,0x1
  424106:	jno    0x42410d
  424108:	call   0x403f70
  42410d:	cmp    DWORD PTR ds:0x461b50,0x0
  424114:	jne    0x424125
  424116:	mov    edx,0x461b48
  42411b:	mov    eax,ds:0x41be90
  424120:	call   0x41b14c
  424125:	xor    eax,eax
  424127:	pop    edx
  424128:	pop    ecx
  424129:	pop    ecx
  42412a:	mov    DWORD PTR fs:[eax],edx
  42412d:	push   0x424144
  424132:	mov    eax,ds:0x472bbc
  424137:	mov    edx,DWORD PTR [eax]
  424139:	call   DWORD PTR [edx+0x4]
  42413c:	ret    
  42413d:	jmp    0x40481c
  424142:	jmp    0x424132
  424144:	pop    ebp
  424145:	ret    
  424146:	add    BYTE PTR [eax],al
  424148:	(bad)  
  424149:	(bad)  
  42414a:	(bad)  
  42414b:	jmp    FWORD PTR ds:0x43000000
  424151:	cmp    bl,BYTE PTR [edx+eiz*2+0x75]
  424155:	imul   ebp,DWORD PTR [esp+eiz*2+0x73],0x4170545c
  42415d:	fs outs dx,DWORD PTR fs:[esi]
  424160:	outs   dx,BYTE PTR ds:[esi]
  424161:	jae    0x4241bf
  424163:	dec    ecx
  424164:	outs   dx,BYTE PTR ds:[esi]
  424165:	fs jns 0x4241b6
  424168:	gs je  0x4241c7
  42416b:	push   ebx
  42416c:	jns    0x4241e1
  42416e:	je     0x4241d5
  424170:	ins    DWORD PTR es:[edi],dx
  424171:	pop    esp
  424172:	dec    ecx
  424173:	fs push ebx
  424175:	je     0x4241d8
  424177:	arpl   WORD PTR [ebx+0x2e],bp
  42417a:	jo     0x4241dd
  42417c:	jae    0x42417e
  42417e:	add    BYTE PTR [eax],al
  424180:	(bad)  
  424181:	(bad)  
  424182:	(bad)  
  424183:	call   DWORD PTR [ecx]
  424185:	add    BYTE PTR [eax],al
  424187:	add    BYTE PTR [ecx+0x73],al
  42418a:	jae    0x4241f1
  42418c:	jb     0x424202
  42418e:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  424195:	ins    BYTE PTR es:[edi],dx
  424196:	jne    0x42420a
  424198:	add    BYTE PTR gs:[eax],al
  42419b:	add    BYTE PTR [ebp-0x75],dl
  42419e:	in     al,dx
  42419f:	cmp    DWORD PTR ds:0x472bbc,0x0
  4241a6:	jne    0x4241bc
  4241a8:	mov    ecx,0x28f
  4241ad:	mov    edx,0x424220
  4241b2:	mov    eax,0x424258
  4241b7:	call   0x404eb4
  4241bc:	mov    eax,ds:0x472bbc
  4241c1:	mov    edx,DWORD PTR [eax]
  4241c3:	call   DWORD PTR [edx]
  4241c5:	xor    eax,eax
  4241c7:	push   ebp
  4241c8:	push   0x42420c
  4241cd:	push   DWORD PTR fs:[eax]
  4241d0:	mov    DWORD PTR fs:[eax],esp
  4241d3:	add    DWORD PTR ds:0x461b50,0x1
  4241da:	jno    0x4241e1
  4241dc:	call   0x403f70
  4241e1:	cmp    DWORD PTR ds:0x461b50,0x1
  4241e8:	jne    0x4241f4
  4241ea:	mov    eax,ds:0x4234ac
  4241ef:	call   0x423f3c
  4241f4:	xor    eax,eax
  4241f6:	pop    edx
  4241f7:	pop    ecx
  4241f8:	pop    ecx
  4241f9:	mov    DWORD PTR fs:[eax],edx
  4241fc:	push   0x424213
  424201:	mov    eax,ds:0x472bbc
  424206:	mov    edx,DWORD PTR [eax]
  424208:	call   DWORD PTR [edx+0x4]
  42420b:	ret    
  42420c:	jmp    0x40481c
  424211:	jmp    0x424201
  424213:	pop    ebp
  424214:	ret    
  424215:	add    BYTE PTR [eax],al
  424217:	add    bh,bh
  424219:	(bad)  
  42421a:	(bad)  
  42421b:	jmp    FWORD PTR ds:0x43000000
  424221:	cmp    bl,BYTE PTR [edx+eiz*2+0x75]
  424225:	imul   ebp,DWORD PTR [esp+eiz*2+0x73],0x4170545c
  42422d:	fs outs dx,DWORD PTR fs:[esi]
  424230:	outs   dx,BYTE PTR ds:[esi]
  424231:	jae    0x42428f
  424233:	dec    ecx
  424234:	outs   dx,BYTE PTR ds:[esi]
  424235:	fs jns 0x424286
  424238:	gs je  0x424297
  42423b:	push   ebx
  42423c:	jns    0x4242b1
  42423e:	je     0x4242a5
  424240:	ins    DWORD PTR es:[edi],dx
  424241:	pop    esp
  424242:	dec    ecx
  424243:	fs push ebx
  424245:	je     0x4242a8
  424247:	arpl   WORD PTR [ebx+0x2e],bp
  42424a:	jo     0x4242ad
  42424c:	jae    0x42424e
  42424e:	add    BYTE PTR [eax],al
  424250:	(bad)  
  424251:	(bad)  
  424252:	(bad)  
  424253:	call   DWORD PTR [ecx]
  424255:	add    BYTE PTR [eax],al
  424257:	add    BYTE PTR [ecx+0x73],al
  42425a:	jae    0x4242c1
  42425c:	jb     0x4242d2
  42425e:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  424265:	ins    BYTE PTR es:[edi],dx
  424266:	jne    0x4242da
  424268:	add    BYTE PTR gs:[eax],al
  42426b:	add    BYTE PTR [ebx+0x56],dl
  42426e:	push   edi
  42426f:	push   ebp
  424270:	add    esp,0xffffffec
  424273:	mov    esi,edx
  424275:	lea    edi,[esp+0x4]
  424279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427d:	mov    DWORD PTR [esp],ecx
  424280:	mov    ebp,eax
  424282:	mov    edi,0x8
  424287:	lea    ebx,[esp+0x4]
  42428b:	mov    esi,DWORD PTR [esp]
  42428e:	movzx  edx,WORD PTR [ebx]
  424291:	mov    eax,ebp
  424293:	mov    ecx,DWORD PTR [eax]
  424295:	call   DWORD PTR [ecx+0x38]
  424298:	mov    WORD PTR [esi],ax
  42429b:	add    esi,0x2
  42429e:	add    ebx,0x2
  4242a1:	dec    edi
  4242a2:	jne    0x42428e
  4242a4:	add    esp,0x14
  4242a7:	pop    ebp
  4242a8:	pop    edi
  4242a9:	pop    esi
  4242aa:	pop    ebx
  4242ab:	ret    
  4242ac:	push   ebx
  4242ad:	push   esi
  4242ae:	push   edi
  4242af:	push   ebp
  4242b0:	add    esp,0xffffffec
  4242b3:	mov    esi,edx
  4242b5:	lea    edi,[esp+0x4]
  4242b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242bd:	mov    DWORD PTR [esp],ecx
  4242c0:	mov    ebp,eax
  4242c2:	mov    edi,0x8
  4242c7:	lea    ebx,[esp+0x4]
  4242cb:	mov    esi,DWORD PTR [esp]
  4242ce:	movzx  edx,WORD PTR [ebx]
  4242d1:	mov    eax,ebp
  4242d3:	mov    ecx,DWORD PTR [eax]
  4242d5:	call   DWORD PTR [ecx+0x50]
  4242d8:	mov    WORD PTR [esi],ax
  4242db:	add    esi,0x2
  4242de:	add    ebx,0x2
  4242e1:	dec    edi
  4242e2:	jne    0x4242ce
  4242e4:	add    esp,0x14
  4242e7:	pop    ebp
  4242e8:	pop    edi
  4242e9:	pop    esi
  4242ea:	pop    ebx
  4242eb:	ret    
  4242ec:	push   ebp
  4242ed:	mov    ebp,esp
  4242ef:	push   0x0
  4242f1:	push   0x0
  4242f3:	push   ebx
  4242f4:	push   esi
  4242f5:	mov    esi,edx
  4242f7:	xor    eax,eax
  4242f9:	push   ebp
  4242fa:	push   0x42436e
  4242ff:	push   DWORD PTR fs:[eax]
  424302:	mov    DWORD PTR fs:[eax],esp
  424305:	xor    ebx,ebx
  424307:	mov    edx,esi
  424309:	mov    eax,ds:0x461b48
  42430e:	call   0x4236e8
  424313:	test   al,al
  424315:	je     0x424353
  424317:	lea    eax,[ebp-0x4]
  42431a:	mov    edx,esi
  42431c:	call   0x405020
  424321:	push   0x1
  424323:	lea    eax,[ebp-0x8]
  424326:	push   eax
  424327:	lea    eax,[ebp-0x4]
  42432a:	mov    cl,0x1
  42432c:	mov    edx,0x424388
  424331:	call   0x41c7c4
  424336:	mov    edx,DWORD PTR [ebp-0x8]
  424339:	mov    eax,ds:0x41be90
  42433e:	call   0x41b200
  424343:	cmp    eax,0xe0
  424348:	jl     0x424353
  42434a:	cmp    eax,0xef
  42434f:	jg     0x424353
  424351:	mov    bl,0x1
  424353:	xor    eax,eax
  424355:	pop    edx
  424356:	pop    ecx
  424357:	pop    ecx
  424358:	mov    DWORD PTR fs:[eax],edx
  42435b:	push   0x424375
  424360:	lea    eax,[ebp-0x8]
  424363:	mov    edx,0x2
  424368:	call   0x404fac
  42436d:	ret    
  42436e:	jmp    0x40481c
  424373:	jmp    0x424360
  424375:	mov    eax,ebx
  424377:	pop    esi
  424378:	pop    ebx
  424379:	pop    ecx
  42437a:	pop    ecx
  42437b:	pop    ebp
  42437c:	ret    
  42437d:	add    BYTE PTR [eax],al
  42437f:	add    bh,bh
  424381:	(bad)  
  424382:	(bad)  
  424383:	inc    DWORD PTR [ecx]
  424385:	add    BYTE PTR [eax],al
  424387:	add    BYTE PTR [esi],ch
  424389:	add    BYTE PTR [eax],al
  42438b:	add    BYTE PTR [ebp-0x75],dl
  42438e:	in     al,dx
  42438f:	push   0x0
  424391:	push   0x0
  424393:	push   ebx
  424394:	push   esi
  424395:	push   edi
  424396:	mov    edi,edx
  424398:	mov    esi,eax
  42439a:	xor    eax,eax
  42439c:	push   ebp
  42439d:	push   0x4243fd
  4243a2:	push   DWORD PTR fs:[eax]
  4243a5:	mov    DWORD PTR fs:[eax],esp
  4243a8:	xor    ebx,ebx
  4243aa:	lea    ecx,[ebp-0x4]
  4243ad:	mov    edx,edi
  4243af:	mov    eax,esi
  4243b1:	call   0x423844
  4243b6:	cmp    DWORD PTR [ebp-0x4],0x0
  4243ba:	je     0x4243e2
  4243bc:	lea    eax,[ebp-0x8]
  4243bf:	push   eax
  4243c0:	mov    ecx,0x2
  4243c5:	mov    edx,0x1
  4243ca:	mov    eax,DWORD PTR [ebp-0x4]
  4243cd:	call   0x405480
  4243d2:	mov    eax,DWORD PTR [ebp-0x8]
  4243d5:	mov    edx,0x424418
  4243da:	call   0x4053b0
  4243df:	sete   bl
  4243e2:	xor    eax,eax
  4243e4:	pop    edx
  4243e5:	pop    ecx
  4243e6:	pop    ecx
  4243e7:	mov    DWORD PTR fs:[eax],edx
  4243ea:	push   0x424404
  4243ef:	lea    eax,[ebp-0x8]
  4243f2:	mov    edx,0x2
  4243f7:	call   0x404fac
  4243fc:	ret    
  4243fd:	jmp    0x40481c
  424402:	jmp    0x4243ef
  424404:	mov    eax,ebx
  424406:	pop    edi
  424407:	pop    esi
  424408:	pop    ebx
  424409:	pop    ecx
  42440a:	pop    ecx
  42440b:	pop    ebp
  42440c:	ret    
  42440d:	add    BYTE PTR [eax],al
  42440f:	add    bh,bh
  424411:	(bad)  
  424412:	(bad)  
  424413:	inc    DWORD PTR [edx]
  424415:	add    BYTE PTR [eax],al
  424417:	add    BYTE PTR [esi+0x46],al
  42441a:	add    BYTE PTR [eax],al
  42441c:	push   ebx
  42441d:	push   esi
  42441e:	push   edi
  42441f:	push   ebp
  424420:	mov    ebp,edx
  424422:	xor    ebx,ebx
  424424:	xor    edi,edi
  424426:	mov    eax,ebp
  424428:	call   0x4061f4
  42442d:	mov    esi,eax
  42442f:	cmp    esi,0x1
  424432:	jle    0x424462
  424434:	mov    edx,edi
  424436:	mov    eax,ebp
  424438:	call   0x41d688
  42443d:	movzx  eax,ax
  424440:	add    ebx,eax
  424442:	jae    0x424449
  424444:	call   0x403f70
  424449:	sub    esi,0x2
  42444c:	jno    0x424453
  42444e:	call   0x403f70
  424453:	add    edi,0x2
  424456:	jno    0x42445d
  424458:	call   0x403f70
  42445d:	cmp    esi,0x1
  424460:	jg     0x424434
  424462:	test   esi,esi
  424464:	jle    0x424482
  424466:	test   ebp,ebp
  424468:	je     0x42446f
  42446a:	cmp    edi,DWORD PTR [ebp-0x4]
  42446d:	jb     0x424474
  42446f:	call   0x403f68
  424474:	movzx  eax,BYTE PTR [ebp+edi*1+0x0]
  424479:	add    ebx,eax
  42447b:	jae    0x424482
  42447d:	call   0x403f70
  424482:	mov    eax,ebx
  424484:	shr    eax,0x10
  424487:	and    ebx,0xffff
  42448d:	add    eax,ebx
  42448f:	jae    0x424496
  424491:	call   0x403f70
  424496:	mov    ebx,eax
  424498:	mov    eax,ebx
  42449a:	shr    eax,0x10
  42449d:	add    ebx,eax
  42449f:	jae    0x4244a6
  4244a1:	call   0x403f70
  4244a6:	mov    eax,ebx
  4244a8:	not    ax
  4244ab:	pop    ebp
  4244ac:	pop    edi
  4244ad:	pop    esi
  4244ae:	pop    ebx
  4244af:	ret    
  4244b0:	push   ebp
  4244b1:	mov    ebp,esp
  4244b3:	xor    eax,eax
  4244b5:	push   ebp
  4244b6:	push   0x4244d5
  4244bb:	push   DWORD PTR fs:[eax]
  4244be:	mov    DWORD PTR fs:[eax],esp
  4244c1:	inc    DWORD PTR ds:0x472bb8
  4244c7:	xor    eax,eax
  4244c9:	pop    edx
  4244ca:	pop    ecx
  4244cb:	pop    ecx
  4244cc:	mov    DWORD PTR fs:[eax],edx
  4244cf:	push   0x4244dc
  4244d4:	ret    
  4244d5:	jmp    0x40481c
  4244da:	jmp    0x4244d4
  4244dc:	pop    ebp
  4244dd:	ret    
  4244de:	mov    eax,eax
  4244e0:	sub    al,0x45
  4244e2:	inc    edx
	...
  4244ef:	add    BYTE PTR [ebp+eax*2+0x42],bh
	...
  4244ff:	add    BYTE PTR [eax+0x45],ah
  424502:	inc    edx
  424503:	add    BYTE PTR [eax],dh
  424505:	add    BYTE PTR [eax],al
  424507:	add    BYTE PTR [ebx+esi*1+0x41],bl
  42450b:	add    BYTE PTR [eax],bl
  42450d:	test   eax,0x42dc0041
  424512:	inc    eax
  424513:	add    BYTE PTR [eax-0x1bffbe5e],ch
  424519:	inc    edx
  42451a:	inc    eax
  42451b:	add    al,bl
  42451d:	inc    edx
  42451e:	inc    eax
  42451f:	add    BYTE PTR [eax],bh
  424521:	inc    eax
  424522:	inc    eax
  424523:	add    BYTE PTR [eax+eax*2+0x40],dl
  424527:	add    BYTE PTR [edx+eiz*4],ch
  42452a:	inc    ecx
  42452b:	add    BYTE PTR [eax+0x41],ch
  42452e:	inc    ecx
  42452f:	add    BYTE PTR [eax-0x5b],dh
  424532:	inc    ecx
  424533:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42453a:	inc    ecx
  42453b:	add    BYTE PTR [eax],dl
  42453d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42453e:	inc    ecx
  42453f:	add    BYTE PTR [eax-0x5a],bl
  424542:	inc    ecx
  424543:	add    BYTE PTR [eax-0x59],dl
  424546:	inc    ecx
  424547:	add    BYTE PTR [eax],dh
  424549:	test   eax,0xa6680041
  42454e:	inc    ecx
  42454f:	add    BYTE PTR [eax-0x5a],ah
  424552:	inc    ecx
  424553:	add    BYTE PTR [eax],bh
  424555:	test   eax,0x46bc0041
  42455a:	inc    edx
  42455b:	add    al,bh
  42455d:	inc    esi
  42455e:	inc    edx
  42455f:	add    BYTE PTR [edi],dl
  424561:	push   esp
  424562:	dec    ecx
  424563:	fs dec ecx
  424565:	outs   dx,BYTE PTR ds:[esi]
  424566:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  42456e:	jb     0x4245b3
  424570:	outs   dx,DWORD PTR ds:[esi]
  424571:	ins    DWORD PTR es:[edi],dx
  424572:	jo     0x4245e3
  424574:	outs   dx,BYTE PTR ds:[esi]
  424575:	outs   dx,BYTE PTR gs:[esi]
  424577:	je     0x4245f5
  424579:	inc    ebp
  42457a:	inc    edx
  42457b:	add    BYTE PTR [edi],al
  42457d:	pop    ss
  42457e:	push   esp
  42457f:	dec    ecx
  424580:	fs dec ecx
  424582:	outs   dx,BYTE PTR ds:[esi]
  424583:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  42458b:	jb     0x4245d0
  42458d:	outs   dx,DWORD PTR ds:[esi]
  42458e:	ins    DWORD PTR es:[edi],dx
  42458f:	jo     0x424600
  424591:	outs   dx,BYTE PTR ds:[esi]
  424592:	outs   dx,BYTE PTR gs:[esi]
  424594:	je     0x4245c2
  424596:	inc    ebp
  424597:	inc    edx
  424598:	add    BYTE PTR [eax+0x34],bl
  42459b:	inc    ecx
  42459c:	add    BYTE PTR [edx],al
  42459e:	add    BYTE PTR [edi],cl
  4245a0:	dec    ecx
  4245a1:	fs inc edx
  4245a3:	popa   
  4245a4:	jae    0x42460b
  4245a6:	inc    ebx
  4245a7:	outs   dx,DWORD PTR ds:[esi]
  4245a8:	ins    DWORD PTR es:[edi],dx
  4245a9:	jo     0x42461a
  4245ab:	outs   dx,BYTE PTR ds:[esi]
  4245ac:	outs   dx,BYTE PTR gs:[esi]
  4245ae:	je     0x4245b0
  4245b0:	add    BYTE PTR [ebp+0x46000040],cl
  4245b6:	inc    edx
	...
  4245c3:	add    BYTE PTR [esi+eax*2+0x42],cl
	...
  4245d3:	add    BYTE PTR [esi+eax*2],dh
  4245d6:	inc    edx
  4245d7:	add    BYTE PTR [eax],dh
  4245d9:	add    BYTE PTR [eax],al
  4245db:	add    al,ah
  4245dd:	inc    esp
  4245de:	inc    edx
  4245df:	add    BYTE PTR [eax],bl
  4245e1:	test   eax,0x42dc0041
  4245e6:	inc    eax
  4245e7:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4245ed:	inc    edx
  4245ee:	inc    eax
  4245ef:	add    al,bl
  4245f1:	inc    edx
  4245f2:	inc    eax
  4245f3:	add    BYTE PTR [eax],bh
  4245f5:	inc    eax
  4245f6:	inc    eax
  4245f7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4245fb:	add    BYTE PTR [edx+eiz*4],ch
  4245fe:	inc    ecx
  4245ff:	add    BYTE PTR [eax+0x41],ch
  424602:	inc    ecx
  424603:	add    BYTE PTR [eax-0x5b],dh
  424606:	inc    ecx
  424607:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42460e:	inc    ecx
  42460f:	add    BYTE PTR [eax],dl
  424611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424612:	inc    ecx
  424613:	add    BYTE PTR [eax-0x5a],bl
  424616:	inc    ecx
  424617:	add    BYTE PTR [eax-0x59],dl
  42461a:	inc    ecx
  42461b:	add    BYTE PTR [eax],dh
  42461d:	test   eax,0xa6680041
  424622:	inc    ecx
  424623:	add    BYTE PTR [eax-0x5a],ah
  424626:	inc    ecx
  424627:	add    BYTE PTR [eax],bh
  424629:	test   eax,0x46bc0041
  42462e:	inc    edx
  42462f:	add    al,bh
  424631:	inc    esi
  424632:	inc    edx
  424633:	add    BYTE PTR [eax],dl
  424635:	push   esp
  424636:	dec    ecx
  424637:	fs inc edx
  424639:	popa   
  42463a:	jae    0x4246a1
  42463c:	inc    ebx
  42463d:	outs   dx,DWORD PTR ds:[esi]
  42463e:	ins    DWORD PTR es:[edi],dx
  42463f:	jo     0x4246b0
  424641:	outs   dx,BYTE PTR ds:[esi]
  424642:	outs   dx,BYTE PTR gs:[esi]
  424644:	je     0x4245d3
  424646:	inc    eax
  424647:	add    BYTE PTR [esi+eax*2+0x42],cl
  42464b:	add    BYTE PTR [edi],al
  42464d:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  424651:	inc    edx
  424652:	popa   
  424653:	jae    0x4246ba
  424655:	inc    ebx
  424656:	outs   dx,DWORD PTR ds:[esi]
  424657:	ins    DWORD PTR es:[edi],dx
  424658:	jo     0x4246c9
  42465a:	outs   dx,BYTE PTR ds:[esi]
  42465b:	outs   dx,BYTE PTR gs:[esi]
  42465d:	je     0x42465f
  42465f:	inc    esi
  424660:	inc    edx
  424661:	add    BYTE PTR [eax+0x45],bh
  424664:	inc    edx
  424665:	add    BYTE PTR [edx],al
  424667:	add    BYTE PTR [edi],cl
  424669:	dec    ecx
  42466a:	fs inc edx
  42466c:	popa   
  42466d:	jae    0x4246d4
  42466f:	inc    ebx
  424670:	outs   dx,DWORD PTR ds:[esi]
  424671:	ins    DWORD PTR es:[edi],dx
  424672:	jo     0x4246e3
  424674:	outs   dx,BYTE PTR ds:[esi]
  424675:	outs   dx,BYTE PTR gs:[esi]
  424677:	je     0x424679
  424679:	add    BYTE PTR [ebx-0x7ba9ac40],cl
  42467f:	shl    BYTE PTR [eax+ecx*1-0x7d],cl
  424683:	(bad)  
  424684:	lock call 0x4043ac
  42468a:	mov    ebx,edx
  42468c:	mov    esi,eax
  42468e:	xor    ecx,ecx
  424690:	xor    edx,edx
  424692:	mov    eax,esi
  424694:	call   0x41a1e0
  424699:	mov    eax,esi
  42469b:	mov    edx,DWORD PTR [eax]
  42469d:	call   DWORD PTR [edx+0x30]
  4246a0:	mov    eax,esi
  4246a2:	test   bl,bl
  4246a4:	je     0x4246b5
  4246a6:	call   0x404404
  4246ab:	pop    DWORD PTR fs:0x0
  4246b2:	add    esp,0xc
  4246b5:	mov    eax,esi
  4246b7:	pop    esi
  4246b8:	pop    ebx
  4246b9:	ret    
  4246ba:	mov    eax,eax
  4246bc:	push   ebx
  4246bd:	push   esi
  4246be:	test   dl,dl
  4246c0:	je     0x4246ca
  4246c2:	add    esp,0xfffffff0
  4246c5:	call   0x4043ac
  4246ca:	mov    ebx,edx
  4246cc:	mov    esi,eax
  4246ce:	xor    edx,edx
  4246d0:	mov    eax,esi
  4246d2:	call   0x41a1e0
  4246d7:	mov    eax,esi
  4246d9:	mov    edx,DWORD PTR [eax]
  4246db:	call   DWORD PTR [edx+0x30]
  4246de:	mov    eax,esi
  4246e0:	test   bl,bl
  4246e2:	je     0x4246f3
  4246e4:	call   0x404404
  4246e9:	pop    DWORD PTR fs:0x0
  4246f0:	add    esp,0xc
  4246f3:	mov    eax,esi
  4246f5:	pop    esi
  4246f6:	pop    ebx
  4246f7:	ret    
  4246f8:	ret    
  4246f9:	lea    eax,[eax+0x0]
  4246fc:	test   BYTE PTR [eax+0x1c],0x10
  424700:	setne  al
  424703:	ret    
  424704:	push   ebx
  424705:	push   esi
  424706:	test   dl,dl
  424708:	je     0x424712
  42470a:	add    esp,0xfffffff0
  42470d:	call   0x4043ac
  424712:	mov    ebx,edx
  424714:	mov    esi,eax
  424716:	xor    edx,edx
  424718:	mov    eax,esi
  42471a:	call   0x4246bc
  42471f:	mov    eax,esi
  424721:	test   bl,bl
  424723:	je     0x424734
  424725:	call   0x404404
  42472a:	pop    DWORD PTR fs:0x0
  424731:	add    esp,0xc
  424734:	mov    eax,esi
  424736:	pop    esi
  424737:	pop    ebx
  424738:	ret    
  424739:	lea    eax,[eax+0x0]
  42473c:	mov    BYTE PTR [edi+0x42],al
	...
  42474b:	add    ah,bl
  42474d:	inc    edi
  42474e:	inc    edx
	...
  42475b:	add    ah,al
  42475d:	inc    edi
  42475e:	inc    edx
  42475f:	add    BYTE PTR [eax+eax*1],bh
  424762:	add    BYTE PTR [eax],al
  424764:	mov    ah,0x45
  424766:	inc    edx
  424767:	add    BYTE PTR [eax],bl
  424769:	test   eax,0x42dc0041
  42476e:	inc    eax
  42476f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  424775:	inc    edx
  424776:	inc    eax
  424777:	add    al,bl
  424779:	inc    edx
  42477a:	inc    eax
  42477b:	add    BYTE PTR [eax],bh
  42477d:	inc    eax
  42477e:	inc    eax
  42477f:	add    BYTE PTR [eax+eax*2+0x40],dl
  424783:	add    BYTE PTR [eax+ecx*2+0x41680042],ch
  42478a:	inc    ecx
  42478b:	add    BYTE PTR [eax-0x5b],dh
  42478e:	inc    ecx
  42478f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  424796:	inc    ecx
  424797:	add    BYTE PTR [eax],dl
  424799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42479a:	inc    ecx
  42479b:	add    BYTE PTR [eax-0x5a],bl
  42479e:	inc    ecx
  42479f:	add    BYTE PTR [eax-0x59],dl
  4247a2:	inc    ecx
  4247a3:	add    BYTE PTR [eax],dh
  4247a5:	test   eax,0xa6680041
  4247aa:	inc    ecx
  4247ab:	add    BYTE PTR [eax-0x5a],ah
  4247ae:	inc    ecx
  4247af:	add    BYTE PTR [eax],bh
  4247b1:	test   eax,0x46bc0041
  4247b6:	inc    edx
  4247b7:	add    BYTE PTR [ecx+ecx*2],bl
  4247ba:	inc    edx
  4247bb:	add    BYTE PTR [eax],bh
  4247bd:	xor    eax,DWORD PTR [eax+0x0]
  4247c0:	mov    al,ds:0x11004249
  4247c5:	push   esp
  4247c6:	dec    ecx
  4247c7:	fs inc ecx
  4247c9:	outs   dx,BYTE PTR ds:[esi]
  4247ca:	je     0x424835
  4247cc:	inc    esi
  4247cd:	jb     0x424834
  4247cf:	gs jp  0x424837
  4247d2:	inc    edx
  4247d3:	popa   
  4247d4:	jae    0x42483b
  4247d6:	mov    eax,eax
  4247d8:	fadd   QWORD PTR [edi+0x42]
  4247db:	add    BYTE PTR [edi],al
  4247dd:	adc    DWORD PTR [ecx+ecx*2+0x64],edx
  4247e1:	inc    ecx
  4247e2:	outs   dx,BYTE PTR ds:[esi]
  4247e3:	je     0x42484e
  4247e5:	inc    esi
  4247e6:	jb     0x42484d
  4247e8:	gs jp  0x424850
  4247eb:	inc    edx
  4247ec:	popa   
  4247ed:	jae    0x424854
  4247ef:	mov    BYTE PTR [edi+0x42],al
  4247f2:	add    BYTE PTR [eax+0x46],cl
  4247f5:	inc    edx
  4247f6:	add    BYTE PTR [esi],al
  4247f8:	add    BYTE PTR [eax],dl
  4247fa:	dec    ecx
  4247fb:	fs inc ecx
  4247fd:	outs   dx,BYTE PTR ds:[esi]
  4247fe:	je     0x424869
  424800:	inc    esi
  424801:	jb     0x424868
  424803:	gs jp  0x42486b
  424806:	inc    edx
  424807:	popa   
  424808:	jae    0x42486f
  42480a:	add    al,0x0
  42480c:	add    BYTE PTR [eax],dl
  42480e:	inc    eax
  42480f:	add    BYTE PTR [eax],dh
  424811:	add    BYTE PTR [eax],al
  424813:	push   DWORD PTR [eax]
  424815:	add    BYTE PTR [eax],al
  424817:	inc    DWORD PTR [ecx]
  424819:	add    BYTE PTR [eax],al
  42481b:	add    BYTE PTR [eax],al
  42481d:	add    BYTE PTR [eax],al
  42481f:	add    BYTE PTR [ecx],0x0
  424822:	add    BYTE PTR [eax],al
  424824:	add    al,BYTE PTR [eax]
  424826:	push   es
  424827:	inc    ecx
  424828:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  42482c:	add    BYTE PTR gs:[eax],dl
  42482f:	inc    eax
  424830:	add    BYTE PTR [ecx],dh
  424832:	add    BYTE PTR [eax],al
  424834:	push   DWORD PTR [ecx]
  424836:	add    BYTE PTR [eax],al
  424838:	inc    DWORD PTR [ecx]
  42483a:	add    BYTE PTR [eax],al
  42483c:	add    BYTE PTR [eax],al
  42483e:	add    BYTE PTR [eax],al
  424840:	add    BYTE PTR [ecx],0x0
  424843:	add    BYTE PTR [eax],al
  424845:	add    eax,DWORD PTR [eax]
  424847:	push   ss
  424848:	inc    ecx
  424849:	jo     0x4248bb
  42484b:	ins    BYTE PTR es:[edi],dx
  42484c:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  424853:	dec    eax
  424854:	popa   
  424855:	jae    0x4248a7
  424857:	jb     0x4248c2
  424859:	outs   dx,DWORD PTR ds:[esi]
  42485a:	jb     0x4248c5
  42485c:	je     0x4248d7
  42485e:	cmp    al,0x10
  424860:	inc    eax
  424861:	add    BYTE PTR [eax+eax*1],dh
  424864:	add    bh,bh
  424866:	xor    al,0x0
  424868:	add    bh,bh
  42486a:	add    DWORD PTR [eax],eax
  42486c:	add    BYTE PTR [eax],al
  42486e:	add    BYTE PTR [eax],al
  424870:	add    BYTE PTR [eax+0xfa],al
  424876:	add    al,0x0
  424878:	or     ecx,DWORD PTR [ecx+0x64]
  42487b:	ins    BYTE PTR es:[edi],dx
  42487c:	gs push esp
  42487e:	imul   ebp,DWORD PTR [ebp+0x65],0x74754f
  424885:	adc    BYTE PTR [eax+0x0],al
  424888:	cmp    BYTE PTR [eax],al
  42488a:	add    bh,bh
  42488c:	cmp    BYTE PTR [eax],al
  42488e:	add    bh,bh
  424890:	add    DWORD PTR [eax],eax
  424892:	add    BYTE PTR [eax],al
  424894:	add    BYTE PTR [eax],al
  424896:	add    BYTE PTR [eax+0x1],al
  42489c:	add    eax,0x6e4f0c00
  4248a1:	ins    BYTE PTR es:[edi],dx
  4248a2:	jns    0x4248fb
  4248a4:	push   0x64496e65
  4248a9:	ins    BYTE PTR es:[edi],dx
  4248aa:	gs nop
  4248ac:	push   ebx
  4248ad:	push   esi
  4248ae:	call   0x404454
  4248b3:	mov    ebx,edx
  4248b5:	mov    esi,eax
  4248b7:	xor    eax,eax
  4248b9:	mov    ds:0x461b54,eax
  4248be:	mov    edx,ebx
  4248c0:	and    dl,0xfc
  4248c3:	mov    eax,esi
  4248c5:	call   0x41a22c
  4248ca:	test   bl,bl
  4248cc:	jle    0x4248d5
  4248ce:	mov    eax,esi
  4248d0:	call   0x4043fc
  4248d5:	pop    esi
  4248d6:	pop    ebx
  4248d7:	ret    
  4248d8:	push   ebx
  4248d9:	push   esi
  4248da:	push   ecx
  4248db:	mov    BYTE PTR [esp],cl
  4248de:	mov    ebx,edx
  4248e0:	mov    esi,eax
  4248e2:	mov    eax,esi
  4248e4:	call   DWORD PTR [eax+0x38]
  4248e7:	test   al,al
  4248e9:	je     0x424916
  4248eb:	mov    eax,ds:0x461b54
  4248f0:	cmp    BYTE PTR [eax+0x38],0x0
  4248f4:	sete   al
  4248f7:	or     bl,al
  4248f9:	jne    0x424901
  4248fb:	cmp    BYTE PTR [esp],0x0
  4248ff:	je     0x424916
  424901:	mov    eax,ds:0x461b54
  424906:	cmp    BYTE PTR [eax+0x30],0x0
  42490a:	je     0x424916
  42490c:	mov    eax,ds:0x461b54
  424911:	mov    edx,DWORD PTR [eax]
  424913:	call   DWORD PTR [edx+0x34]
  424916:	pop    edx
  424917:	pop    esi
  424918:	pop    ebx
  424919:	ret    
  42491a:	mov    eax,eax
  42491c:	push   ebp
  42491d:	mov    ebp,esp
  42491f:	push   0x0
  424921:	push   ebx
  424922:	mov    ebx,eax
  424924:	xor    eax,eax
  424926:	push   ebp
  424927:	push   0x424993
  42492c:	push   DWORD PTR fs:[eax]
  42492f:	mov    DWORD PTR fs:[eax],esp
  424932:	mov    eax,ebx
  424934:	call   0x4246f8
  424939:	mov    eax,ebx
  42493b:	call   0x4246fc
  424940:	test   al,al
  424942:	jne    0x42496a
  424944:	lea    edx,[ebp-0x4]
  424947:	mov    eax,ds:0x46dacc
  42494c:	call   0x406f48
  424951:	mov    ecx,DWORD PTR [ebp-0x4]
  424954:	mov    edx,DWORD PTR ds:0x461b54
  42495a:	mov    eax,ds:0x41b94c
  42495f:	call   0x41be30
  424964:	mov    DWORD PTR ds:0x461b54,ebx
  42496a:	mov    BYTE PTR [ebx+0x30],0x1
  42496e:	mov    BYTE PTR [ebx+0x31],0x1
  424972:	mov    DWORD PTR [ebx+0x34],0xfa
  424979:	mov    BYTE PTR [ebx+0x38],0x1
  42497d:	xor    eax,eax
  42497f:	pop    edx
  424980:	pop    ecx
  424981:	pop    ecx
  424982:	mov    DWORD PTR fs:[eax],edx
  424985:	push   0x42499a
  42498a:	lea    eax,[ebp-0x4]
  42498d:	call   0x404f88
  424992:	ret    
  424993:	jmp    0x40481c
  424998:	jmp    0x42498a
  42499a:	pop    ebx
  42499b:	pop    ecx
  42499c:	pop    ebp
  42499d:	ret    
  42499e:	mov    eax,eax
  4249a0:	xor    eax,eax
  4249a2:	ret    
  4249a3:	nop
  4249a4:	test   al,0x49
  4249a6:	inc    edx
  4249a7:	add    BYTE PTR [ebx],al
  4249a9:	or     DWORD PTR [ecx+ecx*2+0x64],edx
  4249ad:	push   ebx
  4249ae:	je     0x424a11
  4249b0:	je     0x424a27
  4249b2:	jae    0x4249b5
  4249b4:	add    BYTE PTR [eax],al
  4249b6:	add    BYTE PTR [eax],al
  4249b8:	or     BYTE PTR [eax],al
  4249ba:	add    BYTE PTR [eax],al
  4249bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249bd:	dec    ecx
  4249be:	inc    edx
  4249bf:	add    BYTE PTR [ebx],cl
  4249c1:	push   0x73655273
  4249c6:	outs   dx,DWORD PTR ds:[esi]
  4249c7:	ins    BYTE PTR es:[edi],dx
  4249c8:	jbe    0x424a33
  4249ca:	outs   dx,BYTE PTR ds:[esi]
  4249cb:	addr16 or al,0x68
  4249ce:	jae    0x424a13
  4249d0:	outs   dx,DWORD PTR ds:[esi]
  4249d1:	outs   dx,BYTE PTR ds:[esi]
  4249d2:	outs   dx,BYTE PTR ds:[esi]
  4249d3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6e],si
  4249d8:	or     ebp,DWORD PTR [bx+si+0x73]
  4249dc:	inc    ebx
  4249dd:	outs   dx,DWORD PTR ds:[esi]
  4249de:	outs   dx,BYTE PTR ds:[esi]
  4249df:	outs   dx,BYTE PTR ds:[esi]
  4249e0:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  4249e5:	punpckhbw mm6,QWORD PTR [ebx+0x44]
  4249e9:	imul   esi,DWORD PTR [ebx+0x63],0x656e6e6f
  4249f0:	arpl   WORD PTR [ecx+ebp*2+0x6e],si
  4249f4:	addr16 push cs
  4249f6:	push   0x73694473
  4249fb:	arpl   WORD PTR [edi+0x6e],bp
  4249fe:	outs   dx,BYTE PTR ds:[esi]
  4249ff:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  424a04:	or     al,0x68
  424a06:	jae    0x424a5b
  424a08:	je     0x424a6b
  424a0a:	je     0x424a81
  424a0c:	jae    0x424a62
  424a0e:	gs js  0x424a85
  424a11:	or     esp,DWORD PTR [esi+0x74]
  424a14:	jo     0x424a6a
  424a16:	jb     0x424a79
  424a18:	outs   dx,BYTE PTR ds:[esi]
  424a19:	jae    0x424a81
  424a1b:	gs jb  0x424a26
  424a1e:	data16 je 0x424a91
  424a21:	push   edx
  424a22:	gs popa 
  424a24:	fs jns 0x424a31
  424a27:	data16 je 0x424a9a
  424a2a:	inc    ecx
  424a2b:	bound  ebp,QWORD PTR [edi+0x72]
  424a2e:	je     0x424a95
  424a30:	or     ecx,DWORD PTR fs:[ecx+0x64]
  424a34:	inc    ebx
  424a35:	outs   dx,DWORD PTR ds:[esi]
  424a36:	ins    DWORD PTR es:[edi],dx
  424a37:	jo     0x424aa8
  424a39:	outs   dx,BYTE PTR ds:[esi]
  424a3a:	outs   dx,BYTE PTR gs:[esi]
  424a3c:	je     0x4249cb
  424a3e:	inc    eax
  424a3f:	add    BYTE PTR [edx+ecx*2+0x42],al
  424a43:	add    BYTE PTR [eax],cl
  424a45:	push   cs
  424a46:	push   esp
  424a47:	dec    ecx
  424a48:	fs push ebx
  424a4a:	je     0x424aad
  424a4c:	je     0x424ac3
  424a4e:	jae    0x424a95
  424a50:	jbe    0x424ab7
  424a52:	outs   dx,BYTE PTR ds:[esi]
  424a53:	je     0x424a55
  424a55:	add    ecx,DWORD PTR [eax]
  424a57:	pop    es
  424a58:	inc    ecx
  424a59:	push   ebx
  424a5a:	outs   dx,BYTE PTR gs:[esi]
  424a5c:	fs gs jb 0x424a67
  424a60:	push   esp
  424a61:	dec    edi
  424a62:	bound  ebp,QWORD PTR [edx+0x65]
  424a65:	arpl   WORD PTR [edx+eax*1+0x7],si
  424a69:	inc    ecx
  424a6a:	push   ebx
  424a6b:	je     0x424ace
  424a6d:	je     0x424ae4
  424a6f:	jae    0x424a7a
  424a71:	push   esp
  424a72:	dec    ecx
  424a73:	fs push ebx
  424a75:	je     0x424ad8
  424a77:	je     0x424aee
  424a79:	jae    0x424a7d
  424a7b:	or     eax,DWORD PTR [ecx+0x53]
  424a7e:	je     0x424ae1
  424a80:	je     0x424af7
  424a82:	jae    0x424ad8
  424a84:	gs js  0x424afb
  424a87:	push   es
  424a88:	jae    0x424afe
  424a8a:	jb     0x424af5
  424a8c:	outs   dx,BYTE PTR ds:[esi]
  424a8d:	addr16 add ah,ah
  424a90:	adc    BYTE PTR [eax+0x0],al
  424a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a94:	dec    ecx
  424a95:	inc    edx
  424a96:	add    BYTE PTR [eax+edx*1-0x5f6fffc0],al
  424a9d:	dec    edx
  424a9e:	inc    edx
  424a9f:	add    BYTE PTR [ebx],al
  424aa1:	or     DWORD PTR [edi+edx*2+0x6f],edx
  424aa5:	jb     0x424b12
  424aa7:	dec    ebp
  424aa8:	outs   dx,DWORD PTR ds:[esi]
  424aa9:	fs add DWORD PTR gs:[eax],eax
  424aad:	add    BYTE PTR [eax],al
  424aaf:	add    BYTE PTR [ecx],al
  424ab1:	add    BYTE PTR [eax],al
  424ab3:	add    BYTE PTR [edx+ecx*2+0x77060042],bl
  424aba:	ins    DWORD PTR es:[edi],dx
  424abb:	push   edx
  424abc:	gs popa 
  424abe:	fs pop es
  424ac0:	ja     0x424b2f
  424ac2:	push   edi
  424ac3:	jb     0x424b2e
  424ac5:	je     0x424b2c
  424ac7:	or     ecx,DWORD PTR [ecx+0x64]
  424aca:	inc    ebx
  424acb:	outs   dx,DWORD PTR ds:[esi]
  424acc:	ins    DWORD PTR es:[edi],dx
  424acd:	jo     0x424b3e
  424acf:	outs   dx,BYTE PTR ds:[esi]
  424ad0:	outs   dx,BYTE PTR gs:[esi]
  424ad2:	je     0x424a64
  424ad4:	fmul   DWORD PTR [edx+0x42]
  424ad7:	add    BYTE PTR [eax],cl
  424ad9:	andps  xmm2,XMMWORD PTR [edi+0x6f]
  424add:	jb     0x424b4a
  424adf:	inc    edx
  424ae0:	imul   ebp,DWORD PTR gs:[bp+0x45],0x746e6576
  424ae9:	add    BYTE PTR [ebx],al
  424aeb:	or     BYTE PTR [edi],al
  424aed:	inc    ecx
  424aee:	push   ebx
  424aef:	outs   dx,BYTE PTR gs:[esi]
  424af1:	fs gs jb 0x424afc
  424af5:	push   esp
  424af6:	dec    edi
  424af7:	bound  ebp,QWORD PTR [edx+0x65]
  424afa:	arpl   WORD PTR [eax+eax*1+0x9],si
  424afe:	inc    ecx
  424aff:	push   edi
  424b00:	outs   dx,DWORD PTR ds:[esi]
  424b01:	jb     0x424b6e
  424b03:	dec    ebp
  424b04:	outs   dx,DWORD PTR ds:[esi]
  424b05:	fs or  DWORD PTR gs:[edi+edx*2+0x6f],edx
  424b0b:	jb     0x424b78
  424b0d:	dec    ebp
  424b0e:	outs   dx,DWORD PTR ds:[esi]
  424b0f:	fs add BYTE PTR gs:0x726f5741,cl
  424b17:	imul   eax,DWORD PTR [ebx+0x6f],0x75
  424b1b:	outs   dx,BYTE PTR ds:[esi]
  424b1c:	je     0x424b6b
  424b1e:	popa   
  424b1f:	js     0x424b28
  424b21:	dec    ecx
  424b22:	outs   dx,BYTE PTR ds:[esi]
  424b23:	je     0x424b8a
  424b25:	addr16 gs jb 0x424b29
  424b29:	in     al,0x10
  424b2b:	inc    eax
  424b2c:	add    BYTE PTR [edx+ecx*2+0x103c0042],bl
  424b33:	inc    eax
  424b34:	add    BYTE PTR [ebp+0x4b3c0040],cl
  424b3a:	inc    edx
  424b3b:	add    BYTE PTR [eax],cl
  424b3d:	or     eax,0x726f5754
  424b42:	imul   eax,DWORD PTR [ebp+0x6e],0x64
  424b46:	inc    ebp
  424b47:	jbe    0x424bae
  424b49:	outs   dx,BYTE PTR ds:[esi]
  424b4a:	je     0x424b4c
  424b4c:	add    cl,BYTE PTR [eax]
  424b4e:	pop    es
  424b4f:	inc    ecx
  424b50:	push   ebx
  424b51:	outs   dx,BYTE PTR gs:[esi]
  424b53:	fs gs jb 0x424b5e
  424b57:	push   esp
  424b58:	dec    edi
  424b59:	bound  ebp,QWORD PTR [edx+0x65]
  424b5c:	arpl   WORD PTR [eax+eax*1+0x9],si
  424b60:	inc    ecx
  424b61:	push   edi
  424b62:	outs   dx,DWORD PTR ds:[esi]
  424b63:	jb     0x424bd0
  424b65:	dec    ebp
  424b66:	outs   dx,DWORD PTR ds:[esi]
  424b67:	fs or  DWORD PTR gs:[edi+edx*2+0x6f],edx
  424b6d:	jb     0x424bda
  424b6f:	dec    ebp
  424b70:	outs   dx,DWORD PTR ds:[esi]
  424b71:	fs gs add ah,ah
  424b75:	adc    BYTE PTR [eax+0x0],al
  424b78:	pushf  
  424b79:	dec    edx
  424b7a:	inc    edx
  424b7b:	add    BYTE PTR [eax+0x800424b],al
  424b81:	or     dl,BYTE PTR [edi+edx*2+0x6f]
  424b85:	jb     0x424bf2
  424b87:	inc    ebp
  424b88:	jbe    0x424bef
  424b8a:	outs   dx,BYTE PTR ds:[esi]
  424b8b:	je     0x424b8d
  424b8d:	add    ecx,DWORD PTR [eax]
  424b8f:	pop    es
  424b90:	inc    ecx
  424b91:	push   ebx
  424b92:	outs   dx,BYTE PTR gs:[esi]
  424b94:	fs gs jb 0x424b9f
  424b98:	push   esp
  424b99:	dec    edi
  424b9a:	bound  ebp,QWORD PTR [edx+0x65]
  424b9d:	arpl   WORD PTR [eax+eax*1+0x9],si
  424ba1:	inc    ecx
  424ba2:	push   edi
  424ba3:	outs   dx,DWORD PTR ds:[esi]
  424ba4:	jb     0x424c11
  424ba6:	dec    ebp
  424ba7:	outs   dx,DWORD PTR ds:[esi]
  424ba8:	fs or  DWORD PTR gs:[edi+edx*2+0x6f],edx
  424bae:	jb     0x424c1b
  424bb0:	dec    ebp
  424bb1:	outs   dx,DWORD PTR ds:[esi]
  424bb2:	fs add BYTE PTR gs:[edx],cl
  424bb6:	inc    ecx
  424bb7:	push   edi
  424bb8:	outs   dx,DWORD PTR ds:[esi]
  424bb9:	jb     0x424c26
  424bbb:	inc    ebx
  424bbc:	outs   dx,DWORD PTR ds:[esi]
  424bbd:	jne    0x424c2d
  424bbf:	je     0x424bc8
  424bc1:	dec    ecx
  424bc2:	outs   dx,BYTE PTR ds:[esi]
  424bc3:	je     0x424c2a
  424bc5:	addr16 gs jb 0x424bc9
  424bc9:	in     al,0x10
  424bcb:	inc    eax
  424bcc:	add    BYTE PTR [edx+ecx*2+0x103c0042],bl
  424bd3:	inc    eax
  424bd4:	add    BYTE PTR [ebp+0x4c240040],cl
  424bda:	inc    edx
	...
  424be7:	add    BYTE PTR [eax+0x4c],bh
  424bea:	inc    edx
	...
  424bf7:	add    BYTE PTR [esp+ecx*2+0x42],ah
  424bfb:	add    BYTE PTR [eax+eax*1+0x45b40000],al
  424c02:	inc    edx
  424c03:	add    BYTE PTR [eax],bl
  424c05:	test   eax,0x42dc0041
  424c0a:	inc    eax
  424c0b:	add    BYTE PTR [eax-0x1bffbe5e],ch
  424c11:	inc    edx
  424c12:	inc    eax
  424c13:	add    al,bl
  424c15:	inc    edx
  424c16:	inc    eax
  424c17:	add    BYTE PTR [eax],bh
  424c19:	inc    eax
  424c1a:	inc    eax
  424c1b:	add    BYTE PTR [eax+eax*2+0x40],dl
  424c1f:	add    ah,al
  424c21:	dec    esp
  424c22:	inc    edx
  424c23:	add    BYTE PTR [eax+0x41],ch
  424c26:	inc    ecx
  424c27:	add    BYTE PTR [eax-0x5b],dh
  424c2a:	inc    ecx
  424c2b:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  424c32:	inc    ecx
  424c33:	add    BYTE PTR [eax],dl
  424c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c36:	inc    ecx
  424c37:	add    BYTE PTR [eax-0x5a],bl
  424c3a:	inc    ecx
  424c3b:	add    BYTE PTR [eax-0x59],dl
  424c3e:	inc    ecx
  424c3f:	add    BYTE PTR [eax],dh
  424c41:	test   eax,0xa6680041
  424c46:	inc    ecx
  424c47:	add    BYTE PTR [eax-0x5a],ah
  424c4a:	inc    ecx
  424c4b:	add    BYTE PTR [eax],bh
  424c4d:	test   eax,0x46bc0041
  424c52:	inc    edx
  424c53:	add    BYTE PTR [edi+ecx*2],bl
  424c56:	inc    edx
  424c57:	add    ah,al
  424c59:	dec    ebp
  424c5a:	inc    edx
  424c5b:	add    BYTE PTR [esi+ecx*2+0x42],dl
  424c5f:	add    ah,cl
  424c61:	dec    esi
  424c62:	inc    edx
  424c63:	add    BYTE PTR [esp+edx*2],cl
  424c66:	dec    ecx
  424c67:	fs inc ebx
  424c69:	outs   dx,DWORD PTR ds:[esi]
  424c6a:	ins    DWORD PTR es:[edi],dx
  424c6b:	jo     0x424cdc
  424c6d:	outs   dx,BYTE PTR ds:[esi]
  424c6e:	outs   dx,BYTE PTR gs:[esi]
  424c70:	je     0x424bff
  424c72:	inc    eax
  424c73:	add    BYTE PTR [eax+0x4c],bh
  424c76:	inc    edx
  424c77:	add    BYTE PTR [edi],al
  424c79:	or     al,0x54
  424c7b:	dec    ecx
  424c7c:	fs inc ebx
  424c7e:	outs   dx,DWORD PTR ds:[esi]
  424c7f:	ins    DWORD PTR es:[edi],dx
  424c80:	jo     0x424cf1
  424c82:	outs   dx,BYTE PTR ds:[esi]
  424c83:	outs   dx,BYTE PTR gs:[esi]
  424c85:	je     0x424cab
  424c87:	dec    esp
  424c88:	inc    edx
  424c89:	add    BYTE PTR [eax+0x46],cl
  424c8c:	inc    edx
  424c8d:	add    BYTE PTR [ebx],al
  424c8f:	add    BYTE PTR [ebx],cl
  424c91:	dec    ecx
  424c92:	fs inc ebx
  424c94:	outs   dx,DWORD PTR ds:[esi]
  424c95:	ins    DWORD PTR es:[edi],dx
  424c96:	jo     0x424d07
  424c98:	outs   dx,BYTE PTR ds:[esi]
  424c99:	outs   dx,BYTE PTR gs:[esi]
  424c9b:	je     0x424c9e
  424c9d:	add    BYTE PTR [eax+0x4a],al
  424ca0:	inc    edx
  424ca1:	add    BYTE PTR [eax],dh
  424ca3:	add    BYTE PTR [eax],al
  424ca5:	push   DWORD PTR [eax]
  424ca7:	add    BYTE PTR [eax],al
  424ca9:	inc    DWORD PTR [ecx]
  424cab:	add    BYTE PTR [eax],al
  424cad:	add    BYTE PTR [eax],al
  424caf:	add    BYTE PTR [eax],al
  424cb1:	add    BYTE PTR [eax],0x0
  424cb4:	add    BYTE PTR [eax+0x4f080002],al
  424cba:	outs   dx,BYTE PTR ds:[esi]
  424cbb:	push   ebx
  424cbc:	je     0x424d1f
  424cbe:	je     0x424d35
  424cc0:	jae    0x424c4f
  424cc2:	inc    eax
  424cc3:	add    BYTE PTR [ebx+0x56],dl
  424cc6:	call   0x404454
  424ccb:	mov    ebx,edx
  424ccd:	mov    esi,eax
  424ccf:	mov    edx,ebx
  424cd1:	and    dl,0xfc
  424cd4:	mov    eax,esi
  424cd6:	call   0x41a22c
  424cdb:	mov    eax,ds:0x4234ac
  424ce0:	call   0x4240c8
  424ce5:	test   bl,bl
  424ce7:	jle    0x424cf0
  424ce9:	mov    eax,esi
  424ceb:	call   0x4043fc
  424cf0:	pop    esi
  424cf1:	pop    ebx
  424cf2:	ret    
  424cf3:	nop
  424cf4:	push   0xffffffff
  424cf6:	lea    ecx,[esp+0x4]
  424cfa:	call   0x424d00
  424cff:	ret    
  424d00:	push   ebp
  424d01:	mov    ebp,esp
  424d03:	add    esp,0xfffffff0
  424d06:	push   ebx
  424d07:	push   esi
  424d08:	push   edi
  424d09:	xor    ebx,ebx
  424d0b:	mov    DWORD PTR [ebp-0x10],ebx
  424d0e:	mov    DWORD PTR [ebp-0x4],ebx
  424d11:	mov    edi,ecx
  424d13:	mov    ebx,edx
  424d15:	mov    esi,eax
  424d17:	xor    eax,eax
  424d19:	push   ebp
  424d1a:	push   0x424db4
  424d1f:	push   DWORD PTR fs:[eax]
  424d22:	mov    DWORD PTR fs:[eax],esp
  424d25:	cmp    WORD PTR [esi+0x32],0x0
  424d2a:	je     0x424d96
  424d2c:	mov    eax,DWORD PTR [ebp+0x8]
  424d2f:	inc    eax
  424d30:	test   eax,eax
  424d32:	jne    0x424d6a
  424d34:	push   0x0
  424d36:	lea    eax,[ebp-0x4]
  424d39:	push   eax
  424d3a:	xor    eax,eax
  424d3c:	mov    DWORD PTR [ebp-0xc],eax
  424d3f:	mov    BYTE PTR [ebp-0x8],0xb
  424d43:	lea    ecx,[ebp-0xc]
  424d46:	movzx  eax,bl
  424d49:	mov    edx,DWORD PTR [eax*4+0x461b58]
  424d50:	mov    eax,ds:0x41be90
  424d55:	call   0x41b0d4
  424d5a:	mov    eax,DWORD PTR [ebp-0x4]
  424d5d:	push   eax
  424d5e:	mov    ecx,ebx
  424d60:	mov    edx,esi
  424d62:	mov    eax,DWORD PTR [esi+0x34]
  424d65:	call   DWORD PTR [esi+0x30]
  424d68:	jmp    0x424d96
  424d6a:	mov    eax,DWORD PTR [ebp+0x8]
  424d6d:	push   eax
  424d6e:	lea    eax,[ebp-0x10]
  424d71:	push   eax
  424d72:	mov    ecx,edi
  424d74:	movzx  eax,bl
  424d77:	mov    edx,DWORD PTR [eax*4+0x461b58]
  424d7e:	mov    eax,ds:0x41be90
  424d83:	call   0x41b0d4
  424d88:	mov    eax,DWORD PTR [ebp-0x10]
  424d8b:	push   eax
  424d8c:	mov    ecx,ebx
  424d8e:	mov    edx,esi
  424d90:	mov    eax,DWORD PTR [esi+0x34]
  424d93:	call   DWORD PTR [esi+0x30]
  424d96:	xor    eax,eax
  424d98:	pop    edx
  424d99:	pop    ecx
  424d9a:	pop    ecx
  424d9b:	mov    DWORD PTR fs:[eax],edx
  424d9e:	push   0x424dbb
  424da3:	lea    eax,[ebp-0x10]
  424da6:	call   0x404f88
  424dab:	lea    eax,[ebp-0x4]
  424dae:	call   0x404f88
  424db3:	ret    
  424db4:	jmp    0x40481c
  424db9:	jmp    0x424da3
  424dbb:	pop    edi
  424dbc:	pop    esi
  424dbd:	pop    ebx
  424dbe:	mov    esp,ebp
  424dc0:	pop    ebp
  424dc1:	ret    0x4
  424dc4:	push   ebp
  424dc5:	mov    ebp,esp
  424dc7:	push   ebx
  424dc8:	push   esi
  424dc9:	mov    ebx,edx
  424dcb:	mov    ecx,eax
  424dcd:	mov    esi,DWORD PTR [ecx+0x80]
  424dd3:	test   esi,esi
  424dd5:	je     0x424de8
  424dd7:	push   DWORD PTR [ebp+0xc]
  424dda:	push   DWORD PTR [ebp+0x8]
  424ddd:	mov    edx,ebx
  424ddf:	mov    eax,esi
  424de1:	mov    ecx,DWORD PTR [eax]
  424de3:	call   DWORD PTR [ecx+0x34]
  424de6:	jmp    0x424e4e
  424de8:	movzx  eax,bl
  424deb:	imul   eax,eax,0x3
  424dee:	jno    0x424df5
  424df0:	call   0x403f70
  424df5:	add    DWORD PTR [ecx+eax*8+0x60],0x1
  424dfa:	jno    0x424e01
  424dfc:	call   0x403f70
  424e01:	cmp    DWORD PTR [ecx+eax*8+0x60],0x1
  424e06:	jne    0x424e4e
  424e08:	mov    edx,DWORD PTR [ebp+0x8]
  424e0b:	mov    DWORD PTR [ecx+eax*8+0x58],edx
  424e0f:	mov    edx,DWORD PTR [ebp+0xc]
  424e12:	mov    DWORD PTR [ecx+eax*8+0x5c],edx
  424e16:	mov    DWORD PTR [ecx+eax*8+0x50],0x0
  424e1e:	mov    DWORD PTR [ecx+eax*8+0x54],0x0
  424e26:	cmp    WORD PTR [ecx+0x42],0x0
  424e2b:	je     0x424e4e
  424e2d:	mov    eax,DWORD PTR [ebp+0x8]
  424e30:	mov    edx,DWORD PTR [ebp+0xc]
  424e33:	push   eax
  424e34:	sar    eax,0x1f
  424e37:	cmp    eax,edx
  424e39:	pop    eax
  424e3a:	je     0x424e41
  424e3c:	call   0x403f68
  424e41:	push   eax
  424e42:	mov    esi,ecx
  424e44:	mov    edx,ecx
  424e46:	mov    ecx,ebx
  424e48:	mov    eax,DWORD PTR [esi+0x44]
  424e4b:	call   DWORD PTR [esi+0x40]
  424e4e:	pop    esi
  424e4f:	pop    ebx
  424e50:	pop    ebp
  424e51:	ret    0x8
  424e54:	push   ebp
  424e55:	mov    ebp,esp
  424e57:	push   ebx
  424e58:	push   esi
  424e59:	mov    ebx,edx
  424e5b:	mov    ecx,eax
  424e5d:	mov    esi,DWORD PTR [ecx+0x80]
  424e63:	test   esi,esi
  424e65:	je     0x424e78
  424e67:	push   DWORD PTR [ebp+0xc]
  424e6a:	push   DWORD PTR [ebp+0x8]
  424e6d:	mov    edx,ebx
  424e6f:	mov    eax,esi
  424e71:	mov    ecx,DWORD PTR [eax]
  424e73:	call   DWORD PTR [ecx+0x38]
  424e76:	jmp    0x424ec4
  424e78:	movzx  eax,bl
  424e7b:	imul   esi,eax,0x3
  424e7e:	jno    0x424e85
  424e80:	call   0x403f70
  424e85:	cmp    DWORD PTR [ecx+esi*8+0x60],0x0
  424e8a:	jle    0x424ec4
  424e8c:	mov    eax,DWORD PTR [ebp+0x8]
  424e8f:	mov    edx,DWORD PTR [ebp+0xc]
  424e92:	add    DWORD PTR [ecx+esi*8+0x50],eax
  424e96:	adc    DWORD PTR [ecx+esi*8+0x54],edx
  424e9a:	cmp    WORD PTR [ecx+0x3a],0x0
  424e9f:	je     0x424ec4
  424ea1:	mov    eax,DWORD PTR [ecx+esi*8+0x50]
  424ea5:	mov    edx,DWORD PTR [ecx+esi*8+0x54]
  424ea9:	push   eax
  424eaa:	sar    eax,0x1f
  424ead:	cmp    eax,edx
  424eaf:	pop    eax
  424eb0:	je     0x424eb7
  424eb2:	call   0x403f68
  424eb7:	push   eax
  424eb8:	mov    esi,ecx
  424eba:	mov    edx,ecx
  424ebc:	mov    ecx,ebx
  424ebe:	mov    eax,DWORD PTR [esi+0x3c]
  424ec1:	call   DWORD PTR [esi+0x38]
  424ec4:	pop    esi
  424ec5:	pop    ebx
  424ec6:	pop    ebp
  424ec7:	ret    0x8
  424eca:	mov    eax,eax
  424ecc:	push   ebx
  424ecd:	push   esi
  424ece:	push   edi
  424ecf:	mov    ebx,edx
  424ed1:	mov    esi,eax
  424ed3:	mov    eax,DWORD PTR [esi+0x80]
  424ed9:	test   eax,eax
  424edb:	je     0x424ee6
  424edd:	mov    edx,ebx
  424edf:	mov    ecx,DWORD PTR [eax]
  424ee1:	call   DWORD PTR [ecx+0x3c]
  424ee4:	jmp    0x424f17
  424ee6:	movzx  eax,bl
  424ee9:	imul   edi,eax,0x3
  424eec:	jno    0x424ef3
  424eee:	call   0x403f70
  424ef3:	cmp    DWORD PTR [esi+edi*8+0x60],0x1
  424ef8:	jne    0x424f0b
  424efa:	cmp    WORD PTR [esi+0x4a],0x0
  424eff:	je     0x424f0b
  424f01:	mov    ecx,ebx
  424f03:	mov    edx,esi
  424f05:	mov    eax,DWORD PTR [esi+0x4c]
  424f08:	call   DWORD PTR [esi+0x48]
  424f0b:	sub    DWORD PTR [esi+edi*8+0x60],0x1
  424f10:	jno    0x424f17
  424f12:	call   0x403f70
  424f17:	pop    edi
  424f18:	pop    esi
  424f19:	pop    ebx
  424f1a:	ret    
  424f1b:	nop
  424f1c:	call   0x4246f8
  424f21:	mov    eax,ds:0x4234ac
  424f26:	call   0x42419c
  424f2b:	ret    
  424f2c:	push   ebp
  424f2d:	mov    ebp,esp
  424f2f:	xor    eax,eax
  424f31:	push   ebp
  424f32:	push   0x424f68
  424f37:	push   DWORD PTR fs:[eax]
  424f3a:	mov    DWORD PTR fs:[eax],esp
  424f3d:	inc    DWORD PTR ds:0x472bc0
  424f43:	jne    0x424f5a
  424f45:	mov    eax,0x461b58
  424f4a:	mov    ecx,0x9
  424f4f:	mov    edx,DWORD PTR ds:0x401084
  424f55:	call   0x405b50
  424f5a:	xor    eax,eax
  424f5c:	pop    edx
  424f5d:	pop    ecx
  424f5e:	pop    ecx
  424f5f:	mov    DWORD PTR fs:[eax],edx
  424f62:	push   0x424f6f
  424f67:	ret    
  424f68:	jmp    0x40481c
  424f6d:	jmp    0x424f67
  424f6f:	pop    ebp
  424f70:	ret    
  424f71:	lea    eax,[eax+0x0]
  424f74:	or     DWORD PTR [eax],eax
  424f76:	add    BYTE PTR [eax],al
  424f78:	js     0x424f95
  424f7a:	inc    esi
  424f7b:	add    al,dh
  424f7d:	fild   DWORD PTR [esi+0x0]
  424f80:	je     0x424f9d
  424f82:	inc    esi
  424f83:	add    al,dh
  424f85:	fild   DWORD PTR [esi+0x0]
  424f88:	jo     0x424fa5
  424f8a:	inc    esi
  424f8b:	add    al,dh
  424f8d:	fild   DWORD PTR [esi+0x0]
  424f90:	ins    BYTE PTR es:[edi],dx
  424f91:	sbb    eax,DWORD PTR [esi+0x0]
  424f94:	lock fild DWORD PTR [esi+0x0]
  424f98:	push   0x4800461b
  424f9d:	fadd   QWORD PTR [esi+0x0]
  424fa0:	sbb    eax,DWORD PTR fs:[esi+0x0]
  424fa4:	loopne 0x424f83
  424fa6:	inc    esi
  424fa7:	add    BYTE PTR [eax+0x1b],ah
  424faa:	inc    esi
  424fab:	add    al,dl
  424fad:	fiadd  DWORD PTR [esi+0x0]
  424fb0:	pop    esp
  424fb1:	sbb    eax,DWORD PTR [esi+0x0]
  424fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fb5:	fadd   QWORD PTR [esi+0x0]
  424fb8:	pop    eax
  424fb9:	sbb    eax,DWORD PTR [esi+0x0]
  424fbc:	dec    esp
  424fbd:	fild   DWORD PTR [esi+0x0]
  424fc0:	or     al,0x50
  424fc2:	inc    edx
	...
  424fcb:	add    BYTE PTR [eax+edx*2],dh
  424fce:	inc    edx
  424fcf:	add    BYTE PTR [eax+edx*2+0x42],ah
	...
  424fdf:	add    BYTE PTR [esi+0x50],cl
  424fe2:	inc    edx
  424fe3:	add    BYTE PTR [eax],bh
  424fe5:	add    BYTE PTR [eax],al
  424fe7:	add    BYTE PTR [eax],bh
  424fe9:	sub    DWORD PTR [ecx+0x0],eax
  424fec:	rol    BYTE PTR [edx+0x40],1
  424fef:	add    ah,bl
  424ff1:	inc    edx
  424ff2:	inc    eax
  424ff3:	add    al,ah
  424ff5:	inc    edx
  424ff6:	inc    eax
  424ff7:	add    ah,ah
  424ff9:	inc    edx
  424ffa:	inc    eax
  424ffb:	add    al,bl
  424ffd:	inc    edx
  424ffe:	inc    eax
  424fff:	add    BYTE PTR [eax],bh
  425001:	inc    eax
  425002:	inc    eax
  425003:	add    BYTE PTR [eax+eax*2+0x40],dl
  425007:	add    BYTE PTR [eax+0x68004252],al
  42500d:	inc    ecx
  42500e:	inc    ecx
  42500f:	add    BYTE PTR [eax+0x41],dh
  425012:	inc    ecx
  425013:	add    BYTE PTR [esi+edx*2],dl
  425016:	inc    edx
  425017:	add    al,dl
  425019:	inc    ebx
  42501a:	inc    ecx
  42501b:	add    BYTE PTR [eax-0x1fffbebc],dh
  425021:	inc    esp
  425022:	inc    ecx
  425023:	add    al,bl
  425025:	inc    esp
  425026:	inc    ecx
  425027:	add    al,al
  425029:	push   esp
  42502a:	inc    edx
  42502b:	add    BYTE PTR [eax-0x7ffbdaf],cl
  425031:	push   ecx
  425032:	inc    edx
  425033:	add    BYTE PTR [esi],cl
  425035:	add    BYTE PTR [eax],al
  425037:	add    BYTE PTR [eax],al
  425039:	add    BYTE PTR [edx],al
  42503b:	add    BYTE PTR [eax],al
  42503d:	add    BYTE PTR [eax+edx*1+0x1c0040],al
  425044:	add    BYTE PTR [eax],al
  425046:	test   BYTE PTR [eax],dl
  425048:	inc    eax
  425049:	add    BYTE PTR [eax],ah
  42504b:	add    BYTE PTR [eax],al
  42504d:	add    BYTE PTR [edi],cl
  42504f:	push   esp
  425050:	dec    ecx
  425051:	fs push ebx
  425053:	outs   dx,DWORD PTR ds:[esi]
  425054:	arpl   WORD PTR [ebx+0x65],bp
  425057:	je     0x4250a1
  425059:	popa   
  42505a:	outs   dx,BYTE PTR ds:[esi]
  42505b:	fs ins BYTE PTR es:[edi],dx
  42505d:	gs mov eax,eax
  425060:	fs push eax
  425062:	inc    edx
  425063:	add    BYTE PTR [edi],al
  425065:	andps  xmm1,XMMWORD PTR [ecx+0x64]
  425069:	push   ebx
  42506a:	outs   dx,DWORD PTR ds:[esi]
  42506b:	arpl   WORD PTR [ebx+0x65],bp
  42506e:	je     0x4250b8
  425070:	popa   
  425071:	outs   dx,BYTE PTR ds:[esi]
  425072:	fs ins BYTE PTR es:[edi],dx
  425074:	gs or  al,0x50
  425077:	inc    edx
  425078:	add    ah,al
  42507a:	sub    DWORD PTR [ecx+0x0],eax
  42507d:	add    eax,0x64490e00
  425082:	push   ebx
  425083:	outs   dx,DWORD PTR ds:[esi]
  425084:	arpl   WORD PTR [ebx+0x65],bp
  425087:	je     0x4250d1
  425089:	popa   
  42508a:	outs   dx,BYTE PTR ds:[esi]
  42508b:	fs ins BYTE PTR es:[edi],dx
  42508d:	gs add eax,0x40103c00
  425093:	add    BYTE PTR [eax+eax*1],cl
  425096:	add    bh,bh
  425098:	or     al,0x0
  42509a:	add    bh,bh
  42509c:	add    DWORD PTR [eax],eax
  42509e:	add    BYTE PTR [eax],al
  4250a0:	add    BYTE PTR [eax],al
  4250a2:	add    BYTE PTR [eax+0x0],al
  4250a8:	add    BYTE PTR [eax],al
  4250aa:	or     eax,0x65696c43
  4250af:	outs   dx,BYTE PTR ds:[esi]
  4250b0:	je     0x425102
  4250b2:	outs   dx,DWORD PTR ds:[esi]
  4250b3:	jb     0x425129
  4250b5:	dec    ebp
  4250b6:	imul   ebp,DWORD PTR [esi+0x3c],0x10004010
  4250bd:	add    BYTE PTR [eax],al
  4250bf:	call   DWORD PTR [eax]
  4250c1:	add    BYTE PTR [eax],al
  4250c3:	inc    DWORD PTR [ecx]
  4250c5:	add    BYTE PTR [eax],al
  4250c7:	add    BYTE PTR [eax],al
  4250c9:	add    BYTE PTR [eax],al
  4250cb:	add    BYTE PTR [eax],0x0
  4250ce:	add    BYTE PTR [eax],al
  4250d0:	add    DWORD PTR [eax],eax
  4250d2:	or     eax,0x65696c43
  4250d7:	outs   dx,BYTE PTR ds:[esi]
  4250d8:	je     0x42512a
  4250da:	outs   dx,DWORD PTR ds:[esi]
  4250db:	jb     0x425151
  4250dd:	dec    ebp
  4250de:	popa   
  4250df:	js     0x425065
  4250e1:	adc    BYTE PTR [eax+0x0],al
  4250e4:	sbb    al,0x0
  4250e6:	add    bh,bh
  4250e8:	sbb    al,0x0
  4250ea:	add    bh,bh
  4250ec:	add    DWORD PTR [eax],eax
  4250ee:	add    BYTE PTR [eax],al
  4250f0:	add    BYTE PTR [eax],al
  4250f2:	add    BYTE PTR [eax-0x80000000],al
  4250f8:	add    al,BYTE PTR [eax]
  4250fa:	add    cl,BYTE PTR [ecx+0x50]
  4250fd:	int3   
  4250fe:	lds    eax,FWORD PTR [ecx+0x0]
  425101:	xor    DWORD PTR [eax],eax
  425103:	add    bh,bh
  425105:	rcl    BYTE PTR [edi+0x42],0x0
  425109:	add    DWORD PTR [eax],eax
  42510b:	add    BYTE PTR [eax],al
  42510d:	add    BYTE PTR [eax],al
  42510f:	add    BYTE PTR [eax+0x0],al
  425115:	add    eax,DWORD PTR [eax]
  425117:	or     DWORD PTR [ecx+0x50],ecx
  42511a:	push   esi
  42511b:	gs jb  0x425191
  42511e:	imul   ebp,DWORD PTR [edi+0x6e],0x40103c
  425125:	and    al,0x0
  425127:	add    bh,bh
  425129:	and    al,0x0
  42512b:	add    bh,bh
  42512d:	add    DWORD PTR [eax],eax
  42512f:	add    BYTE PTR [eax],al
  425131:	add    BYTE PTR [eax],al
  425133:	add    BYTE PTR [eax-0x80000000],al
  425139:	add    al,0x0
  42513b:	add    al,0x50
  42513d:	outs   dx,DWORD PTR ds:[esi]
  42513e:	jb     0x4251b4
  425140:	push   ebx
  425141:	push   esi
  425142:	push   edi
  425143:	mov    edi,ecx
  425145:	mov    esi,edx
  425147:	mov    ebx,eax
  425149:	mov    eax,ebx
  42514b:	mov    edx,DWORD PTR [eax]
  42514d:	call   DWORD PTR [edx+0x20]
  425150:	cmp    BYTE PTR [ebx+0x18],0x0
  425154:	je     0x42515f
  425156:	mov    dl,0x1
  425158:	mov    eax,ebx
  42515a:	call   0x4256a0
  42515f:	movzx  eax,BYTE PTR [ebx+0x31]
  425163:	push   eax
  425164:	movzx  eax,BYTE PTR [ebx+0x30]
  425168:	push   eax
  425169:	mov    eax,ds:0x46de0c
  42516e:	mov    eax,DWORD PTR [eax]
  425170:	mov    ecx,edi
  425172:	mov    edx,esi
  425174:	mov    esi,DWORD PTR [eax]
  425176:	call   DWORD PTR [esi+0x4c]
  425179:	mov    edx,eax
  42517b:	mov    eax,ebx
  42517d:	call   0x425780
  425182:	pop    edi
  425183:	pop    esi
  425184:	pop    ebx
  425185:	ret    
  425186:	mov    eax,eax
  425188:	push   ebp
  425189:	mov    ebp,esp
  42518b:	push   ecx
  42518c:	mov    DWORD PTR [ebp-0x4],eax
  42518f:	mov    eax,DWORD PTR [ebp-0x4]
  425192:	cmp    BYTE PTR [eax+0x18],0x0
  425196:	je     0x4251f5
  425198:	mov    eax,DWORD PTR [ebp-0x4]
  42519b:	mov    eax,DWORD PTR [eax+0x34]
  42519e:	call   0x41c1ec
  4251a3:	xor    eax,eax
  4251a5:	push   ebp
  4251a6:	push   0x4251ee
  4251ab:	push   DWORD PTR fs:[eax]
  4251ae:	mov    DWORD PTR fs:[eax],esp
  4251b1:	mov    eax,DWORD PTR [ebp-0x4]
  4251b4:	mov    BYTE PTR [eax+0x18],0x0
  4251b8:	mov    eax,DWORD PTR [ebp-0x4]
  4251bb:	mov    edx,DWORD PTR [eax+0x14]
  4251be:	mov    eax,ds:0x46de0c
  4251c3:	mov    eax,DWORD PTR [eax]
  4251c5:	mov    ecx,DWORD PTR [eax]
  4251c7:	call   DWORD PTR [ecx+0x24]
  4251ca:	or     edx,0xffffffff
  4251cd:	mov    eax,DWORD PTR [ebp-0x4]
  4251d0:	call   0x425780
  4251d5:	xor    eax,eax
  4251d7:	pop    edx
  4251d8:	pop    ecx
  4251d9:	pop    ecx
  4251da:	mov    DWORD PTR fs:[eax],edx
  4251dd:	push   0x4251f5
  4251e2:	mov    eax,DWORD PTR [ebp-0x4]
  4251e5:	mov    eax,DWORD PTR [eax+0x34]
  4251e8:	call   0x41c1f4
  4251ed:	ret    
  4251ee:	jmp    0x40481c
  4251f3:	jmp    0x4251e2
  4251f5:	pop    ecx
  4251f6:	pop    ebp
  4251f7:	ret    
  4251f8:	push   ebp
  4251f9:	mov    ebp,esp
  4251fb:	push   ecx
  4251fc:	push   ebx
  4251fd:	mov    DWORD PTR [ebp-0x4],eax
  425200:	mov    eax,DWORD PTR [ebp-0x4]
  425203:	mov    eax,DWORD PTR [eax+0x28]
  425206:	push   eax
  425207:	mov    eax,DWORD PTR [ebp-0x4]
  42520a:	movzx  eax,BYTE PTR [eax+0x31]
  42520e:	push   eax
  42520f:	mov    eax,DWORD PTR [ebp-0x4]
  425212:	mov    ecx,DWORD PTR [eax+0x20]
  425215:	mov    eax,DWORD PTR [ebp-0x4]
  425218:	mov    edx,DWORD PTR [eax+0x14]
  42521b:	mov    eax,ds:0x46de0c
  425220:	mov    eax,DWORD PTR [eax]
  425222:	mov    ebx,DWORD PTR [eax]
  425224:	call   DWORD PTR [ebx+0x1c]
  425227:	mov    eax,DWORD PTR [ebp-0x4]
  42522a:	mov    eax,DWORD PTR [eax+0x34]
  42522d:	call   0x41c1ec
  425232:	xor    eax,eax
  425234:	push   ebp
  425235:	push   0x425272
  42523a:	push   DWORD PTR fs:[eax]
  42523d:	mov    DWORD PTR fs:[eax],esp
  425240:	mov    eax,DWORD PTR [ebp-0x4]
  425243:	cmp    BYTE PTR [eax+0x18],0x0
  425247:	je     0x425259
  425249:	mov    eax,DWORD PTR [ebp-0x4]
  42524c:	call   0x425668
  425251:	mov    eax,DWORD PTR [ebp-0x4]
  425254:	call   0x425684
  425259:	xor    eax,eax
  42525b:	pop    edx
  42525c:	pop    ecx
  42525d:	pop    ecx
  42525e:	mov    DWORD PTR fs:[eax],edx
  425261:	push   0x425279
  425266:	mov    eax,DWORD PTR [ebp-0x4]
  425269:	mov    eax,DWORD PTR [eax+0x34]
  42526c:	call   0x41c1f4
  425271:	ret    
  425272:	jmp    0x40481c
  425277:	jmp    0x425266
  425279:	pop    ebx
  42527a:	pop    ecx
  42527b:	pop    ebp
  42527c:	ret    
  42527d:	lea    eax,[eax+0x0]
  425280:	push   ebx
  425281:	push   esi
  425282:	call   0x404454
  425287:	mov    ebx,edx
  425289:	mov    esi,eax
  42528b:	mov    eax,esi
  42528d:	mov    edx,DWORD PTR [eax]
  42528f:	call   DWORD PTR [edx+0x20]
  425292:	lea    edx,[esi+0x34]
  425295:	mov    eax,ds:0x41be90
  42529a:	call   0x41b14c
  42529f:	mov    edx,ebx
  4252a1:	and    dl,0xfc
  4252a4:	mov    eax,esi
  4252a6:	call   0x414364
  4252ab:	test   bl,bl
  4252ad:	jle    0x4252b6
  4252af:	mov    eax,esi
  4252b1:	call   0x4043fc
  4252b6:	pop    esi
  4252b7:	pop    ebx
  4252b8:	ret    
  4252b9:	lea    eax,[eax+0x0]
  4252bc:	push   ebx
  4252bd:	mov    ecx,edx
  4252bf:	mov    edx,DWORD PTR ds:0x46de0c
  4252c5:	mov    edx,DWORD PTR [edx]
  4252c7:	mov    eax,DWORD PTR [eax+0x14]
  4252ca:	xchg   edx,eax
  4252cb:	mov    ebx,DWORD PTR [eax]
  4252cd:	call   DWORD PTR [ebx+0x68]
  4252d0:	pop    ebx
  4252d1:	ret    
  4252d2:	mov    eax,eax
  4252d4:	push   ebp
  4252d5:	mov    ebp,esp
  4252d7:	push   ebx
  4252d8:	push   esi
  4252d9:	mov    esi,eax
  4252db:	push   ecx
  4252dc:	mov    eax,DWORD PTR [ebp+0x8]
  4252df:	push   eax
  4252e0:	mov    eax,ds:0x46de0c
  4252e5:	mov    eax,DWORD PTR [eax]
  4252e7:	mov    ecx,DWORD PTR [esi+0x14]
  4252ea:	xchg   edx,ecx
  4252ec:	mov    ebx,DWORD PTR [eax]
  4252ee:	call   DWORD PTR [ebx+0x6c]
  4252f1:	pop    esi
  4252f2:	pop    ebx
  4252f3:	pop    ebp
  4252f4:	ret    0x4
  4252f7:	nop
  4252f8:	push   ebp
  4252f9:	mov    ebp,esp
  4252fb:	push   ebx
  4252fc:	push   esi
  4252fd:	mov    esi,eax
  4252ff:	push   ecx
  425300:	mov    eax,DWORD PTR [ebp+0xc]
  425303:	push   eax
  425304:	movzx  eax,BYTE PTR [ebp+0x8]
  425308:	push   eax
  425309:	mov    eax,ds:0x46de0c
  42530e:	mov    eax,DWORD PTR [eax]
  425310:	mov    ecx,edx
  425312:	mov    edx,DWORD PTR [esi+0x14]
  425315:	mov    ebx,DWORD PTR [eax]
  425317:	call   DWORD PTR [ebx+0x70]
  42531a:	pop    esi
  42531b:	pop    ebx
  42531c:	pop    ebp
  42531d:	ret    0x8
  425320:	push   ebp
  425321:	mov    ebp,esp
  425323:	mov    ecx,0x4
  425328:	push   0x0
  42532a:	push   0x0
  42532c:	dec    ecx
  42532d:	jne    0x425328
  42532f:	push   ecx
  425330:	push   ebx
  425331:	mov    ebx,eax
  425333:	xor    eax,eax
  425335:	push   ebp
  425336:	push   0x425463
  42533b:	push   DWORD PTR fs:[eax]
  42533e:	mov    DWORD PTR fs:[eax],esp
  425341:	cmp    DWORD PTR [ebx+0x24],0x0
  425345:	jne    0x42540f
  42534b:	cmp    DWORD PTR [ebx+0xc],0x0
  42534f:	je     0x42540f
  425355:	cmp    DWORD PTR [ebx+0x10],0x0
  425359:	je     0x42540f
  42535f:	mov    eax,DWORD PTR [ebx+0xc]
  425362:	cmp    eax,DWORD PTR [ebx+0x10]
  425365:	jle    0x4253b7
  425367:	push   0x1
  425369:	lea    eax,[ebp-0x4]
  42536c:	push   eax
  42536d:	lea    edx,[ebp-0x8]
  425370:	mov    eax,ds:0x46dd3c
  425375:	call   0x406f48
  42537a:	mov    edx,DWORD PTR [ebp-0x8]
  42537d:	mov    eax,DWORD PTR [ebx+0xc]
  425380:	mov    DWORD PTR [ebp-0x18],eax
  425383:	mov    BYTE PTR [ebp-0x14],0x0
  425387:	mov    eax,DWORD PTR [ebx+0x10]
  42538a:	mov    DWORD PTR [ebp-0x10],eax
  42538d:	mov    BYTE PTR [ebp-0xc],0x0
  425391:	lea    ecx,[ebp-0x18]
  425394:	mov    eax,ds:0x41be90
  425399:	call   0x41b0d4
  42539e:	mov    ecx,DWORD PTR [ebp-0x4]
  4253a1:	mov    dl,0x1
  4253a3:	mov    eax,ds:0x41bce4
  4253a8:	call   0x41bdbc
  4253ad:	call   0x4048fc
  4253b2:	jmp    0x42543b
  4253b7:	mov    eax,ebx
  4253b9:	call   0x425730
  4253be:	test   al,al
  4253c0:	jne    0x42543b
  4253c2:	push   0x1
  4253c4:	lea    eax,[ebp-0x1c]
  4253c7:	push   eax
  4253c8:	lea    edx,[ebp-0x20]
  4253cb:	mov    eax,ds:0x46dd80
  4253d0:	call   0x406f48
  4253d5:	mov    edx,DWORD PTR [ebp-0x20]
  4253d8:	mov    eax,DWORD PTR [ebx+0xc]
  4253db:	mov    DWORD PTR [ebp-0x18],eax
  4253de:	mov    BYTE PTR [ebp-0x14],0x0
  4253e2:	mov    eax,DWORD PTR [ebx+0x10]
  4253e5:	mov    DWORD PTR [ebp-0x10],eax
  4253e8:	mov    BYTE PTR [ebp-0xc],0x0
  4253ec:	lea    ecx,[ebp-0x18]
  4253ef:	mov    eax,ds:0x41be90
  4253f4:	call   0x41b0d4
  4253f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253fc:	mov    dl,0x1
  4253fe:	mov    eax,ds:0x41bc78
  425403:	call   0x41bdbc
  425408:	call   0x4048fc
  42540d:	jmp    0x42543b
  42540f:	mov    eax,ebx
  425411:	call   0x4256d8
  425416:	test   al,al
  425418:	jne    0x42543b
  42541a:	lea    edx,[ebp-0x24]
  42541d:	mov    eax,ds:0x46dc40
  425422:	call   0x406f48
  425427:	mov    ecx,DWORD PTR [ebp-0x24]
  42542a:	mov    dl,0x1
  42542c:	mov    eax,ds:0x41bc10
  425431:	call   0x41bdbc
  425436:	call   0x4048fc
  42543b:	xor    eax,eax
  42543d:	pop    edx
  42543e:	pop    ecx
  42543f:	pop    ecx
  425440:	mov    DWORD PTR fs:[eax],edx
  425443:	push   0x42546a
  425448:	lea    eax,[ebp-0x24]
  42544b:	mov    edx,0x3
  425450:	call   0x404fac
  425455:	lea    eax,[ebp-0x8]
  425458:	mov    edx,0x2
  42545d:	call   0x404fac
  425462:	ret    
  425463:	jmp    0x40481c
  425468:	jmp    0x425448
  42546a:	pop    ebx
  42546b:	mov    esp,ebp
  42546d:	pop    ebp
  42546e:	ret    
  42546f:	nop
  425470:	push   ebp
  425471:	mov    ebp,esp
  425473:	push   ebx
  425474:	push   esi
  425475:	push   edi
  425476:	mov    edi,ecx
  425478:	mov    esi,edx
  42547a:	mov    ebx,eax
  42547c:	lea    eax,[ebx+0x20]
  42547f:	mov    edx,esi
  425481:	call   0x404fdc
  425486:	mov    DWORD PTR [ebx+0x28],edi
  425489:	movzx  eax,BYTE PTR [ebp+0x8]
  42548d:	mov    BYTE PTR [ebx+0x31],al
  425490:	pop    edi
  425491:	pop    esi
  425492:	pop    ebx
  425493:	pop    ebp
  425494:	ret    0x4
  425497:	nop
  425498:	push   ebp
  425499:	mov    ebp,esp
  42549b:	push   ebx
  42549c:	push   esi
  42549d:	push   edi
  42549e:	mov    edi,ecx
  4254a0:	mov    esi,edx
  4254a2:	mov    ebx,eax
  4254a4:	lea    eax,[ebx+0x1c]
  4254a7:	mov    edx,esi
  4254a9:	call   0x404fdc
  4254ae:	mov    DWORD PTR [ebx+0x24],edi
  4254b1:	movzx  eax,BYTE PTR [ebp+0x8]
  4254b5:	mov    BYTE PTR [ebx+0x31],al
  4254b8:	pop    edi
  4254b9:	pop    esi
  4254ba:	pop    ebx
  4254bb:	pop    ebp
  4254bc:	ret    0x4
  4254bf:	nop
  4254c0:	push   ebx
  4254c1:	push   esi
  4254c2:	push   edi
  4254c3:	test   dl,dl
  4254c5:	je     0x4254cf
  4254c7:	add    esp,0xfffffff0
  4254ca:	call   0x4043ac
  4254cf:	mov    esi,ecx
  4254d1:	mov    ebx,edx
  4254d3:	mov    edi,eax
  4254d5:	mov    ecx,esi
  4254d7:	xor    edx,edx
  4254d9:	mov    eax,edi
  4254db:	call   0x41432c
  4254e0:	mov    dl,0x1
  4254e2:	mov    eax,ds:0x41c0f4
  4254e7:	call   0x41c164
  4254ec:	mov    DWORD PTR [edi+0x34],eax
  4254ef:	mov    dl,0x1
  4254f1:	mov    eax,edi
  4254f3:	call   0x4256a0
  4254f8:	xor    eax,eax
  4254fa:	mov    DWORD PTR [edi+0xc],eax
  4254fd:	xor    eax,eax
  4254ff:	mov    DWORD PTR [edi+0x10],eax
  425502:	test   esi,esi
  425504:	je     0x42550c
  425506:	mov    eax,DWORD PTR [esi+0x1c]
  425509:	mov    DWORD PTR [edi+0x24],eax
  42550c:	mov    eax,edi
  42550e:	test   bl,bl
  425510:	je     0x425521
  425512:	call   0x404404
  425517:	pop    DWORD PTR fs:0x0
  42551e:	add    esp,0xc
  425521:	mov    eax,edi
  425523:	pop    edi
  425524:	pop    esi
  425525:	pop    ebx
  425526:	ret    
  425527:	nop
  425528:	push   ebp
  425529:	mov    ebp,esp
  42552b:	push   0x0
  42552d:	push   ebx
  42552e:	xor    edx,edx
  425530:	push   ebp
  425531:	push   0x42558f
  425536:	push   DWORD PTR fs:[edx]
  425539:	mov    DWORD PTR fs:[edx],esp
  42553c:	mov    edx,DWORD PTR [ebp+0x8]
  42553f:	mov    edx,DWORD PTR [edx-0x4]
  425542:	cmp    BYTE PTR [edx+0x18],0x0
  425546:	je     0x425558
  425548:	mov    edx,DWORD PTR [ebp+0x8]
  42554b:	mov    edx,DWORD PTR [edx-0x4]
  42554e:	xchg   edx,eax
  42554f:	call   0x425760
  425554:	mov    ebx,eax
  425556:	jmp    0x425579
  425558:	lea    edx,[ebp-0x4]
  42555b:	mov    eax,ds:0x46dd14
  425560:	call   0x406f48
  425565:	mov    ecx,DWORD PTR [ebp-0x4]
  425568:	mov    dl,0x1
  42556a:	mov    eax,ds:0x41ba10
  42556f:	call   0x41bdbc
  425574:	call   0x4048fc
  425579:	xor    eax,eax
  42557b:	pop    edx
  42557c:	pop    ecx
  42557d:	pop    ecx
  42557e:	mov    DWORD PTR fs:[eax],edx
  425581:	push   0x425596
  425586:	lea    eax,[ebp-0x4]
  425589:	call   0x404f88
  42558e:	ret    
  42558f:	jmp    0x40481c
  425594:	jmp    0x425586
  425596:	mov    eax,ebx
  425598:	pop    ebx
  425599:	pop    ecx
  42559a:	pop    ebp
  42559b:	ret    
  42559c:	push   ebp
  42559d:	mov    ebp,esp
  42559f:	push   ecx
  4255a0:	push   ebx
  4255a1:	mov    ebx,edx
  4255a3:	mov    DWORD PTR [ebp-0x4],eax
  4255a6:	mov    eax,ds:0x42473c
  4255ab:	call   0x4249a0
  4255b0:	test   al,al
  4255b2:	je     0x425604
  4255b4:	cmp    ebx,0xfffffffe
  4255b7:	jne    0x4255d0
  4255b9:	push   ebp
  4255ba:	mov    eax,ds:0x46dea8
  4255bf:	mov    eax,DWORD PTR [eax]
  4255c1:	mov    eax,DWORD PTR [eax+0x34]
  4255c4:	call   0x425528
  4255c9:	pop    ecx
  4255ca:	test   al,al
  4255cc:	je     0x4255b9
  4255ce:	jmp    0x42560d
  4255d0:	mov    eax,ds:0x46dea8
  4255d5:	mov    eax,DWORD PTR [eax]
  4255d7:	mov    eax,DWORD PTR [eax+0x34]
  4255da:	cmp    ebx,eax
  4255dc:	jle    0x425604
  4255de:	push   ebp
  4255df:	mov    edx,DWORD PTR ds:0x46dea8
  4255e5:	sub    ebx,eax
  4255e7:	jno    0x4255ee
  4255e9:	call   0x403f70
  4255ee:	mov    eax,ebx
  4255f0:	call   0x425528
  4255f5:	pop    ecx
  4255f6:	test   al,al
  4255f8:	jne    0x42560d
  4255fa:	mov    eax,ds:0x46dea8
  4255ff:	mov    eax,DWORD PTR [eax]
  425601:	mov    ebx,DWORD PTR [eax+0x34]
  425604:	push   ebp
  425605:	mov    eax,ebx
  425607:	call   0x425528
  42560c:	pop    ecx
  42560d:	pop    ebx
  42560e:	pop    ecx
  42560f:	pop    ebp
  425610:	ret    
  425611:	lea    eax,[eax+0x0]
  425614:	push   ebx
  425615:	push   esi
  425616:	push   edi
  425617:	mov    esi,edx
  425619:	mov    ebx,eax
  42561b:	mov    eax,ebx
  42561d:	call   0x403f78
  425622:	mov    edi,eax
  425624:	mov    eax,esi
  425626:	call   0x403f78
  42562b:	cmp    edi,eax
  42562d:	je     0x42563a
  42562f:	mov    edx,esi
  425631:	mov    eax,ebx
  425633:	call   0x414084
  425638:	jmp    0x425663
  42563a:	lea    eax,[ebx+0x1c]
  42563d:	mov    edx,DWORD PTR [esi+0x1c]
  425640:	call   0x404fdc
  425645:	mov    eax,DWORD PTR [esi+0x24]
  425648:	mov    DWORD PTR [ebx+0x24],eax
  42564b:	lea    eax,[ebx+0x20]
  42564e:	mov    edx,DWORD PTR [esi+0x20]
  425651:	call   0x404fdc
  425656:	mov    eax,DWORD PTR [esi+0x28]
  425659:	mov    DWORD PTR [ebx+0x28],eax
  42565c:	movzx  eax,BYTE PTR [esi+0x31]
  425660:	mov    BYTE PTR [ebx+0x31],al
  425663:	pop    edi
  425664:	pop    esi
  425665:	pop    ebx
  425666:	ret    
  425667:	nop
  425668:	push   ebx
  425669:	lea    edx,[eax+0x24]
  42566c:	push   edx
  42566d:	lea    ecx,[eax+0x1c]
  425670:	mov    edx,DWORD PTR ds:0x46de0c
  425676:	mov    edx,DWORD PTR [edx]
  425678:	mov    eax,DWORD PTR [eax+0x14]
  42567b:	xchg   edx,eax
  42567c:	mov    ebx,DWORD PTR [eax]
  42567e:	call   DWORD PTR [ebx+0x30]
  425681:	pop    ebx
  425682:	ret    
  425683:	nop
  425684:	push   ebx
  425685:	lea    edx,[eax+0x28]
  425688:	push   edx
  425689:	lea    ecx,[eax+0x20]
  42568c:	mov    edx,DWORD PTR ds:0x46de0c
  425692:	mov    edx,DWORD PTR [edx]
  425694:	mov    eax,DWORD PTR [eax+0x14]
  425697:	xchg   edx,eax
  425698:	mov    ebx,DWORD PTR [eax]
  42569a:	call   DWORD PTR [ebx+0x2c]
  42569d:	pop    ebx
  42569e:	ret    
  42569f:	nop
  4256a0:	push   ebx
  4256a1:	push   esi
  4256a2:	mov    ebx,edx
  4256a4:	mov    esi,eax
  4256a6:	or     edx,0xffffffff
  4256a9:	mov    eax,esi
  4256ab:	call   0x425780
  4256b0:	test   bl,bl
  4256b2:	je     0x4256c1
  4256b4:	lea    eax,[esi+0x1c]
  4256b7:	call   0x404f88
  4256bc:	xor    eax,eax
  4256be:	mov    DWORD PTR [esi+0x24],eax
  4256c1:	lea    eax,[esi+0x20]
  4256c4:	call   0x404f88
  4256c9:	xor    eax,eax
  4256cb:	mov    DWORD PTR [esi+0x28],eax
  4256ce:	mov    BYTE PTR [esi+0x31],0x0
  4256d2:	pop    esi
  4256d3:	pop    ebx
  4256d4:	ret    
  4256d5:	lea    eax,[eax+0x0]
  4256d8:	push   ebp
  4256d9:	mov    ebp,esp
  4256db:	push   ebx
  4256dc:	push   esi
  4256dd:	push   edi
  4256de:	mov    esi,eax
  4256e0:	xor    eax,eax
  4256e2:	push   ebp
  4256e3:	push   0x42571c
  4256e8:	push   DWORD PTR fs:[eax]
  4256eb:	mov    DWORD PTR fs:[eax],esp
  4256ee:	mov    eax,DWORD PTR [esi+0x24]
  4256f1:	push   eax
  4256f2:	movzx  eax,BYTE PTR [esi+0x31]
  4256f6:	push   eax
  4256f7:	mov    ecx,DWORD PTR [esi+0x1c]
  4256fa:	mov    edx,DWORD PTR [esi+0x14]
  4256fd:	mov    eax,ds:0x46de0c
  425702:	mov    eax,DWORD PTR [eax]
  425704:	mov    ebx,DWORD PTR [eax]
  425706:	call   DWORD PTR [ebx+0x18]
  425709:	mov    bl,0x1
  42570b:	mov    eax,esi
  42570d:	call   0x425668
  425712:	xor    eax,eax
  425714:	pop    edx
  425715:	pop    ecx
  425716:	pop    ecx
  425717:	mov    DWORD PTR fs:[eax],edx
  42571a:	jmp    0x425728
  42571c:	jmp    0x404568
  425721:	xor    ebx,ebx
  425723:	call   0x404978
  425728:	mov    eax,ebx
  42572a:	pop    edi
  42572b:	pop    esi
  42572c:	pop    ebx
  42572d:	pop    ebp
  42572e:	ret    
  42572f:	nop
  425730:	push   ebx
  425731:	push   esi
  425732:	push   edi
  425733:	push   ebp
  425734:	mov    ebp,eax
  425736:	xor    ebx,ebx
  425738:	mov    edi,DWORD PTR [ebp+0x10]
  42573b:	mov    esi,DWORD PTR [ebp+0xc]
  42573e:	sub    esi,edi
  425740:	jg     0x425759
  425742:	dec    esi
  425743:	mov    DWORD PTR [ebp+0x24],edi
  425746:	mov    eax,ebp
  425748:	call   0x4256d8
  42574d:	test   al,al
  42574f:	je     0x425755
  425751:	mov    bl,0x1
  425753:	jmp    0x425759
  425755:	dec    edi
  425756:	inc    esi
  425757:	jne    0x425743
  425759:	mov    eax,ebx
  42575b:	pop    ebp
  42575c:	pop    edi
  42575d:	pop    esi
  42575e:	pop    ebx
  42575f:	ret    
  425760:	push   ebx
  425761:	mov    eax,DWORD PTR [eax+0x2c]
  425764:	mov    ecx,DWORD PTR [eax]
  425766:	call   DWORD PTR [ecx+0x24]
  425769:	mov    ebx,eax
  42576b:	test   bl,bl
  42576d:	sete   dl
  425770:	xor    ecx,ecx
  425772:	mov    eax,ds:0x42473c
  425777:	call   0x4248d8
  42577c:	mov    eax,ebx
  42577e:	pop    ebx
  42577f:	ret    
  425780:	push   ebx
  425781:	push   esi
  425782:	mov    ebx,eax
  425784:	mov    eax,edx
  425786:	mov    DWORD PTR [ebx+0x14],eax
  425789:	inc    eax
  42578a:	setne  al
  42578d:	mov    BYTE PTR [ebx+0x18],al
  425790:	lea    edx,[ebx+0x2c]
  425793:	mov    eax,ds:0x41be90
  425798:	call   0x41b14c
  42579d:	cmp    BYTE PTR [ebx+0x18],0x0
  4257a1:	je     0x4257bc
  4257a3:	mov    eax,ds:0x423424
  4257a8:	call   0x423650
  4257ad:	mov    esi,eax
  4257af:	mov    DWORD PTR [ebx+0x2c],esi
  4257b2:	mov    edx,DWORD PTR [ebx+0x14]
  4257b5:	mov    eax,esi
  4257b7:	mov    ecx,DWORD PTR [eax]
  4257b9:	call   DWORD PTR [ecx+0x8]
  4257bc:	pop    esi
  4257bd:	pop    ebx
  4257be:	ret    
  4257bf:	nop
  4257c0:	push   ebp
  4257c1:	mov    ebp,esp
  4257c3:	push   0x0
  4257c5:	xor    ecx,ecx
  4257c7:	push   ebp
  4257c8:	push   0x425818
  4257cd:	push   DWORD PTR fs:[ecx]
  4257d0:	mov    DWORD PTR fs:[ecx],esp
  4257d3:	cmp    dl,BYTE PTR [eax+0x31]
  4257d6:	je     0x425802
  4257d8:	cmp    BYTE PTR [eax+0x18],0x0
  4257dc:	je     0x4257ff
  4257de:	lea    edx,[ebp-0x4]
  4257e1:	mov    eax,ds:0x46db78
  4257e6:	call   0x406f48
  4257eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4257ee:	mov    dl,0x1
  4257f0:	mov    eax,ds:0x41bd48
  4257f5:	call   0x41bdbc
  4257fa:	call   0x4048fc
  4257ff:	mov    BYTE PTR [eax+0x31],dl
  425802:	xor    eax,eax
  425804:	pop    edx
  425805:	pop    ecx
  425806:	pop    ecx
  425807:	mov    DWORD PTR fs:[eax],edx
  42580a:	push   0x42581f
  42580f:	lea    eax,[ebp-0x4]
  425812:	call   0x404f88
  425817:	ret    
  425818:	jmp    0x40481c
  42581d:	jmp    0x42580f
  42581f:	pop    ecx
  425820:	pop    ebp
  425821:	ret    
  425822:	mov    eax,eax
  425824:	lock pop es
  425826:	inc    edi
  425827:	add    BYTE PTR [ebx-0x1],cl
  42582a:	add    BYTE PTR [eax],al
  42582c:	lock pop es
  42582e:	inc    edi
  42582f:	add    BYTE PTR [edi+edi*8+0x0],cl
  425833:	add    al,dh
  425835:	pop    es
  425836:	inc    edi
  425837:	add    BYTE PTR [ebp-0x1],cl
  42583a:	add    BYTE PTR [eax],al
  42583c:	lock pop es
  42583e:	inc    edi
  42583f:	add    BYTE PTR [esi-0x1],cl
  425842:	add    BYTE PTR [eax],al
  425844:	lock pop es
  425846:	inc    edi
  425847:	add    BYTE PTR [edi-0x1],cl
  42584a:	add    BYTE PTR [eax],al
  42584c:	lock pop es
  42584e:	inc    edi
  42584f:	add    BYTE PTR [eax],dh
  425851:	inc    DWORD PTR [eax]
  425853:	add    al,dh
  425855:	pop    es
  425856:	inc    edi
  425857:	add    BYTE PTR [ecx],dh
  425859:	inc    DWORD PTR [eax]
  42585b:	add    al,dh
  42585d:	pop    es
  42585e:	inc    edi
  42585f:	add    BYTE PTR [edx],dh
  425861:	inc    DWORD PTR [eax]
  425863:	add    al,dh
  425865:	pop    es
  425866:	inc    edi
  425867:	add    BYTE PTR [ebx],dh
  425869:	inc    DWORD PTR [eax]
  42586b:	add    al,dh
  42586d:	pop    es
  42586e:	inc    edi
  42586f:	add    BYTE PTR [edi+edi*8],dh
  425872:	add    BYTE PTR [eax],al
  425874:	lock pop es
  425876:	inc    edi
  425877:	add    BYTE PTR ds:0xf00000ff,dh
  42587d:	pop    es
  42587e:	inc    edi
  42587f:	add    BYTE PTR [esi],dh
  425881:	inc    DWORD PTR [eax]
  425883:	add    al,dh
  425885:	pop    es
  425886:	inc    edi
  425887:	add    BYTE PTR [edi],dh
  425889:	inc    DWORD PTR [eax]
  42588b:	add    al,dh
  42588d:	pop    es
  42588e:	inc    edi
  42588f:	add    BYTE PTR [eax],bh
  425891:	inc    DWORD PTR [eax]
  425893:	add    al,dh
  425895:	pop    es
  425896:	inc    edi
  425897:	add    BYTE PTR [ecx],bh
  425899:	inc    DWORD PTR [eax]
  42589b:	add    al,dh
  42589d:	pop    es
  42589e:	inc    edi
  42589f:	add    BYTE PTR [edx],bh
  4258a1:	inc    DWORD PTR [eax]
  4258a3:	add    al,dh
  4258a5:	pop    es
  4258a6:	inc    edi
  4258a7:	add    BYTE PTR [ebx],bh
  4258a9:	inc    DWORD PTR [eax]
  4258ab:	add    al,dh
  4258ad:	pop    es
  4258ae:	inc    edi
  4258af:	add    BYTE PTR [edi+edi*8],bh
  4258b2:	add    BYTE PTR [eax],al
  4258b4:	lock pop es
  4258b6:	inc    edi
  4258b7:	add    BYTE PTR ds:0xf00000ff,bh
  4258bd:	pop    es
  4258be:	inc    edi
  4258bf:	add    BYTE PTR [esi],bh
  4258c1:	inc    DWORD PTR [eax]
  4258c3:	add    al,dh
  4258c5:	pop    es
  4258c6:	inc    edi
  4258c7:	add    BYTE PTR [edi],bh
  4258c9:	inc    DWORD PTR [eax]
  4258cb:	add    al,dh
  4258cd:	pop    es
  4258ce:	inc    edi
  4258cf:	add    BYTE PTR [eax],ah
  4258d1:	inc    DWORD PTR [eax]
  4258d3:	add    al,dh
  4258d5:	pop    es
  4258d6:	inc    edi
  4258d7:	add    BYTE PTR [ecx],ah
  4258d9:	inc    DWORD PTR [eax]
  4258db:	add    al,dh
  4258dd:	pop    es
  4258de:	inc    edi
  4258df:	add    BYTE PTR [edx],ah
  4258e1:	inc    DWORD PTR [eax]
  4258e3:	add    al,dh
  4258e5:	pop    es
  4258e6:	inc    edi
  4258e7:	add    BYTE PTR [ebx],ah
  4258e9:	inc    DWORD PTR [eax]
  4258eb:	add    al,dh
  4258ed:	pop    es
  4258ee:	inc    edi
  4258ef:	add    BYTE PTR [edi+edi*8],ah
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	lock pop es
  4258f6:	inc    edi
  4258f7:	add    BYTE PTR ds:0xf00000ff,ah
  4258fd:	pop    es
  4258fe:	inc    edi
  4258ff:	add    BYTE PTR [esi],ah
  425901:	inc    DWORD PTR [eax]
  425903:	add    al,dh
  425905:	pop    es
  425906:	inc    edi
  425907:	add    BYTE PTR [edi],ah
  425909:	inc    DWORD PTR [eax]
  42590b:	add    al,dh
  42590d:	pop    es
  42590e:	inc    edi
  42590f:	add    BYTE PTR [eax],ch
  425911:	inc    DWORD PTR [eax]
  425913:	add    al,dh
  425915:	pop    es
  425916:	inc    edi
  425917:	add    BYTE PTR [ecx],ch
  425919:	inc    DWORD PTR [eax]
  42591b:	add    al,dh
  42591d:	pop    es
  42591e:	inc    edi
  42591f:	add    BYTE PTR [edx],ch
  425921:	inc    DWORD PTR [eax]
  425923:	add    al,dh
  425925:	pop    es
  425926:	inc    edi
  425927:	add    BYTE PTR [ebx],ch
  425929:	inc    DWORD PTR [eax]
  42592b:	add    BYTE PTR [eax+0x59],bh
  42592e:	inc    edx
	...
  425937:	add    ah,al
  425939:	pop    ecx
  42593a:	inc    edx
  42593b:	add    ah,ah
  42593d:	pop    ecx
  42593e:	inc    edx
	...
  42594b:	add    dh,dl
  42594d:	pop    ecx
  42594e:	inc    edx
  42594f:	add    BYTE PTR [eax+eax*1],bl
  425952:	add    BYTE PTR [eax],al
  425954:	cmp    BYTE PTR [ecx],ch
  425956:	inc    ecx
  425957:	add    al,dl
  425959:	inc    edx
  42595a:	inc    eax
  42595b:	add    ah,bl
  42595d:	inc    edx
  42595e:	inc    eax
  42595f:	add    al,ah
  425961:	inc    edx
  425962:	inc    eax
  425963:	add    ah,ah
  425965:	inc    edx
  425966:	inc    eax
  425967:	add    al,bl
  425969:	inc    edx
  42596a:	inc    eax
  42596b:	add    BYTE PTR [eax],bh
  42596d:	inc    eax
  42596e:	inc    eax
  42596f:	add    BYTE PTR [eax+eax*2+0x40],dl
  425973:	add    BYTE PTR [eax-0x5fffbda5],al
  425979:	pop    edx
  42597a:	inc    edx
  42597b:	add    BYTE PTR [eax+0x41],dh
  42597e:	inc    ecx
  42597f:	add    BYTE PTR [eax+eax*2+0x5be40041],al
  425986:	inc    edx
  425987:	add    BYTE PTR [eax-0x1fffbebc],dh
  42598d:	inc    esp
  42598e:	inc    ecx
  42598f:	add    al,bl
  425991:	inc    esp
  425992:	inc    ecx
  425993:	add    BYTE PTR [ebx+ebx*2+0x42],al
  425997:	add    BYTE PTR [esi+ebx*2+0x42],bh
  42599b:	add    BYTE PTR [esi+ebx*2+0x42],ch
  42599f:	add    BYTE PTR [esi+ebx*2+0x42],dh
  4259a3:	add    BYTE PTR [eax],bh
  4259a5:	xor    eax,DWORD PTR [eax+0x0]
  4259a8:	in     al,0x5a
  4259aa:	inc    edx
  4259ab:	add    ah,bh
  4259ad:	pop    edx
  4259ae:	inc    edx
  4259af:	add    BYTE PTR [eax+0x5e],dh
  4259b2:	inc    edx
  4259b3:	add    BYTE PTR [eax],bh
  4259b5:	xor    eax,DWORD PTR [eax+0x0]
  4259b8:	push   0xd800425c
  4259bd:	pop    esp
  4259be:	inc    edx
  4259bf:	add    BYTE PTR [eax+0x5e],dl
  4259c2:	inc    edx
  4259c3:	add    BYTE PTR [esi],cl
  4259c5:	add    BYTE PTR [eax],al
  4259c7:	add    BYTE PTR [eax],al
  4259c9:	add    BYTE PTR [ecx],al
  4259cb:	add    BYTE PTR [eax],al
  4259cd:	add    BYTE PTR [eax+edx*1+0xc0040],al
  4259d4:	add    BYTE PTR [eax],al
  4259d6:	or     BYTE PTR [ecx+ecx*2+0x64],dl
  4259da:	push   edx
  4259db:	gs jo  0x425a4a
  4259de:	jns    0x425970
  4259e0:	in     al,0x59
  4259e2:	inc    edx
  4259e3:	add    BYTE PTR [edi],al
  4259e5:	or     BYTE PTR [ecx+ecx*2+0x64],dl
  4259e9:	push   edx
  4259ea:	gs jo  0x425a59
  4259ed:	jns    0x425a67
  4259ef:	pop    ecx
  4259f0:	inc    edx
  4259f1:	add    ah,al
  4259f3:	sub    DWORD PTR [ecx+0x0],eax
  4259f6:	add    al,BYTE PTR [eax]
  4259f8:	pop    es
  4259f9:	dec    ecx
  4259fa:	fs push edx
  4259fc:	gs jo  0x425a6b
  4259ff:	jns    0x425a03
  425a01:	add    BYTE PTR [eax+edx*1+0xc0040],al
  425a08:	add    bh,bh
  425a0a:	inc    esp
  425a0b:	pop    ebp
  425a0c:	inc    edx
  425a0d:	add    BYTE PTR [ecx],al
  425a0f:	add    BYTE PTR [eax],al
  425a11:	add    BYTE PTR [eax],al
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    BYTE PTR [eax],0x0
  425a18:	add    BYTE PTR [eax+0x43040000],al
  425a1e:	outs   dx,DWORD PTR ds:[esi]
  425a1f:	fs gs test al,0x2c
  425a23:	inc    ecx
  425a24:	add    BYTE PTR [eax],bl
  425a26:	add    BYTE PTR [eax],al
  425a28:	dec    eax
  425a2a:	pop    esp
  425a2b:	inc    edx
  425a2c:	add    BYTE PTR [ecx],al
  425a2e:	add    BYTE PTR [eax],al
  425a30:	add    BYTE PTR [eax],al
  425a32:	add    BYTE PTR [eax],al
  425a34:	add    BYTE PTR [eax],0x0
  425a37:	add    BYTE PTR [eax+0x54040001],al
  425a3d:	gs js  0x425ab4
  425a40:	mov    WORD PTR [edx+0x42],ds
	...
  425a5f:	add    BYTE PTR [eax+0xc00425a],dl
  425a65:	add    BYTE PTR [eax],al
  425a67:	add    BYTE PTR [ecx+edi*4+0x41],cl
  425a6b:	add    al,dl
  425a6d:	inc    edx
  425a6e:	inc    eax
  425a6f:	add    ah,bl
  425a71:	inc    edx
  425a72:	inc    eax
  425a73:	add    al,ah
  425a75:	inc    edx
  425a76:	inc    eax
  425a77:	add    ah,ah
  425a79:	inc    edx
  425a7a:	inc    eax
  425a7b:	add    al,bl
  425a7d:	inc    edx
  425a7e:	inc    eax
  425a7f:	add    BYTE PTR [eax],bh
  425a81:	inc    eax
  425a82:	inc    eax
  425a83:	add    BYTE PTR [eax+eax*2+0x40],dl
  425a87:	add    BYTE PTR [eax-0x43ffbfc0],dl
  425a8d:	mov    ebp,0x450d0041
  425a92:	dec    ecx
  425a93:	fs push edx
  425a95:	gs jo  0x425b04
  425a98:	jns    0x425adf
  425a9a:	jb     0x425b0e
  425a9c:	outs   dx,DWORD PTR ds:[esi]
  425a9d:	jb     0x425a2a
  425a9f:	rcl    BYTE PTR [ebx+0x56],0x8b
  425aa3:	repnz mov ebx,eax
  425aa6:	mov    eax,esi
  425aa8:	mov    edx,DWORD PTR ds:0x42592c
  425aae:	call   0x40422c
  425ab3:	test   al,al
  425ab5:	je     0x425ad6
  425ab7:	mov    eax,esi
  425ab9:	mov    edx,DWORD PTR [eax]
  425abb:	call   DWORD PTR [edx+0x30]
  425abe:	mov    edx,DWORD PTR [ebx+0x18]
  425ac1:	mov    eax,DWORD PTR [esi+0x18]
  425ac4:	mov    ecx,DWORD PTR [eax]
  425ac6:	call   DWORD PTR [ecx+0x8]
  425ac9:	mov    edx,DWORD PTR [ebx+0xc]
  425acc:	mov    eax,esi
  425ace:	call   0x425d44
  425ad3:	pop    esi
  425ad4:	pop    ebx
  425ad5:	ret    
  425ad6:	mov    edx,esi
  425ad8:	mov    eax,ebx
  425ada:	call   0x414168
  425adf:	pop    esi
  425ae0:	pop    ebx
  425ae1:	ret    
  425ae2:	mov    eax,eax
  425ae4:	push   ebx
  425ae5:	mov    ebx,eax
  425ae7:	mov    eax,DWORD PTR [ebx+0x18]
  425aea:	mov    edx,DWORD PTR [eax]
  425aec:	call   DWORD PTR [edx+0x44]
  425aef:	lea    eax,[ebx+0xc]
  425af2:	call   0x404f88
  425af7:	pop    ebx
  425af8:	ret    
  425af9:	lea    eax,[eax+0x0]
  425afc:	push   ebp
  425afd:	mov    ebp,esp
  425aff:	push   ebx
  425b00:	push   esi
  425b01:	test   dl,dl
  425b03:	je     0x425b0d
  425b05:	add    esp,0xfffffff0
  425b08:	call   0x4043ac
  425b0d:	mov    ebx,edx
  425b0f:	mov    esi,eax
  425b11:	xor    edx,edx
  425b13:	mov    eax,esi
  425b15:	call   0x41432c
  425b1a:	mov    eax,DWORD PTR [ebp+0x8]
  425b1d:	mov    DWORD PTR [esi+0x14],eax
  425b20:	mov    eax,esi
  425b22:	call   0x425bc0
  425b27:	mov    eax,esi
  425b29:	test   bl,bl
  425b2b:	je     0x425b3c
  425b2d:	call   0x404404
  425b32:	pop    DWORD PTR fs:0x0
  425b39:	add    esp,0xc
  425b3c:	mov    eax,esi
  425b3e:	pop    esi
  425b3f:	pop    ebx
  425b40:	pop    ebp
  425b41:	ret    0x4
  425b44:	push   ebx
  425b45:	push   esi
  425b46:	test   dl,dl
  425b48:	je     0x425b52
  425b4a:	add    esp,0xfffffff0
  425b4d:	call   0x4043ac
  425b52:	mov    ebx,edx
  425b54:	mov    esi,eax
  425b56:	xor    edx,edx
  425b58:	mov    eax,esi
  425b5a:	call   0x41432c
  425b5f:	mov    eax,esi
  425b61:	call   0x425bc0
  425b66:	mov    eax,esi
  425b68:	test   bl,bl
  425b6a:	je     0x425b7b
  425b6c:	call   0x404404
  425b71:	pop    DWORD PTR fs:0x0
  425b78:	add    esp,0xc
  425b7b:	mov    eax,esi
  425b7d:	pop    esi
  425b7e:	pop    ebx
  425b7f:	ret    
  425b80:	push   ebx
  425b81:	push   esi
  425b82:	call   0x404454
  425b87:	mov    ebx,edx
  425b89:	mov    esi,eax
  425b8b:	lea    edx,[esi+0x18]
  425b8e:	mov    eax,ds:0x41be90
  425b93:	call   0x41b14c
  425b98:	lea    edx,[esi+0x10]
  425b9b:	mov    eax,ds:0x41be90
  425ba0:	call   0x41b14c
  425ba5:	mov    edx,ebx
  425ba7:	and    dl,0xfc
  425baa:	mov    eax,esi
  425bac:	call   0x414364
  425bb1:	test   bl,bl
  425bb3:	jle    0x425bbc
  425bb5:	mov    eax,esi
  425bb7:	call   0x4043fc
  425bbc:	pop    esi
  425bbd:	pop    ebx
  425bbe:	ret    
  425bbf:	nop
  425bc0:	push   ebx
  425bc1:	mov    ebx,eax
  425bc3:	mov    dl,0x1
  425bc5:	mov    eax,ds:0x412cf0
  425bca:	call   0x404070
  425bcf:	mov    DWORD PTR [ebx+0x10],eax
  425bd2:	mov    dl,0x1
  425bd4:	mov    eax,ds:0x412cf0
  425bd9:	call   0x404070
  425bde:	mov    DWORD PTR [ebx+0x18],eax
  425be1:	pop    ebx
  425be2:	ret    
  425be3:	nop
  425be4:	push   ebp
  425be5:	mov    ebp,esp
  425be7:	push   0x0
  425be9:	push   ebx
  425bea:	push   esi
  425beb:	mov    esi,edx
  425bed:	mov    ebx,eax
  425bef:	xor    eax,eax
  425bf1:	push   ebp
  425bf2:	push   0x425c4f
  425bf7:	push   DWORD PTR fs:[eax]
  425bfa:	mov    DWORD PTR fs:[eax],esp
  425bfd:	mov    eax,DWORD PTR [ebx+0x18]
  425c00:	mov    edx,DWORD PTR [eax]
  425c02:	call   DWORD PTR [edx+0x14]
  425c05:	test   eax,eax
  425c07:	jle    0x425c2f
  425c09:	push   DWORD PTR [ebx+0xc]
  425c0c:	push   0x425c64
  425c11:	lea    ecx,[ebp-0x4]
  425c14:	xor    edx,edx
  425c16:	mov    eax,DWORD PTR [ebx+0x18]
  425c19:	mov    ebx,DWORD PTR [eax]
  425c1b:	call   DWORD PTR [ebx+0xc]
  425c1e:	push   DWORD PTR [ebp-0x4]
  425c21:	mov    eax,esi
  425c23:	mov    edx,0x3
  425c28:	call   0x40531c
  425c2d:	jmp    0x425c39
  425c2f:	mov    eax,esi
  425c31:	mov    edx,DWORD PTR [ebx+0xc]
  425c34:	call   0x404fdc
  425c39:	xor    eax,eax
  425c3b:	pop    edx
  425c3c:	pop    ecx
  425c3d:	pop    ecx
  425c3e:	mov    DWORD PTR fs:[eax],edx
  425c41:	push   0x425c56
  425c46:	lea    eax,[ebp-0x4]
  425c49:	call   0x404f88
  425c4e:	ret    
  425c4f:	jmp    0x40481c
  425c54:	jmp    0x425c46
  425c56:	pop    esi
  425c57:	pop    ebx
  425c58:	pop    ecx
  425c59:	pop    ebp
  425c5a:	ret    
  425c5b:	add    bh,bh
  425c5d:	(bad)  
  425c5e:	(bad)  
  425c5f:	inc    DWORD PTR [ecx]
  425c61:	add    BYTE PTR [eax],al
  425c63:	add    BYTE PTR [eax],ah
  425c65:	add    BYTE PTR [eax],al
  425c67:	add    BYTE PTR [ebx-0x75],dl
  425c6a:	fadd   DWORD PTR [ebx+0xf000c7b]
  425c70:	xchg   ebp,eax
  425c71:	rcr    BYTE PTR [ebx-0x3d],0x55
  425c75:	mov    ebp,esp
  425c77:	push   0x0
  425c79:	push   ebx
  425c7a:	push   esi
  425c7b:	mov    esi,edx
  425c7d:	mov    ebx,eax
  425c7f:	xor    eax,eax
  425c81:	push   ebp
  425c82:	push   0x425cbc
  425c87:	push   DWORD PTR fs:[eax]
  425c8a:	mov    DWORD PTR fs:[eax],esp
  425c8d:	lea    ecx,[ebp-0x4]
  425c90:	mov    edx,esi
  425c92:	mov    eax,ds:0x41be90
  425c97:	call   0x41b19c
  425c9c:	mov    edx,DWORD PTR [ebp-0x4]
  425c9f:	mov    eax,ebx
  425ca1:	call   0x425d44
  425ca6:	xor    eax,eax
  425ca8:	pop    edx
  425ca9:	pop    ecx
  425caa:	pop    ecx
  425cab:	mov    DWORD PTR fs:[eax],edx
  425cae:	push   0x425cc3
  425cb3:	lea    eax,[ebp-0x4]
  425cb6:	call   0x404f88
  425cbb:	ret    
  425cbc:	jmp    0x40481c
  425cc1:	jmp    0x425cb3
  425cc3:	pop    esi
  425cc4:	pop    ebx
  425cc5:	pop    ecx
  425cc6:	pop    ebp
  425cc7:	ret    
  425cc8:	push   esi
  425cc9:	mov    esi,eax
  425ccb:	mov    eax,DWORD PTR [esi+0x18]
  425cce:	mov    ecx,DWORD PTR [eax]
  425cd0:	call   DWORD PTR [ecx+0x8]
  425cd3:	pop    esi
  425cd4:	ret    
  425cd5:	lea    eax,[eax+0x0]
  425cd8:	push   ebp
  425cd9:	mov    ebp,esp
  425cdb:	push   0x0
  425cdd:	push   ebx
  425cde:	push   esi
  425cdf:	push   edi
  425ce0:	mov    edi,ecx
  425ce2:	mov    esi,edx
  425ce4:	mov    ebx,eax
  425ce6:	xor    eax,eax
  425ce8:	push   ebp
  425ce9:	push   0x425d25
  425cee:	push   DWORD PTR fs:[eax]
  425cf1:	mov    DWORD PTR fs:[eax],esp
  425cf4:	lea    ecx,[ebp-0x4]
  425cf7:	mov    edx,esi
  425cf9:	mov    eax,ds:0x41be90
  425cfe:	call   0x41b19c
  425d03:	mov    edx,DWORD PTR [ebp-0x4]
  425d06:	mov    ecx,edi
  425d08:	mov    eax,ebx
  425d0a:	mov    ebx,DWORD PTR [eax]
  425d0c:	call   DWORD PTR [ebx+0x48]
  425d0f:	xor    eax,eax
  425d11:	pop    edx
  425d12:	pop    ecx
  425d13:	pop    ecx
  425d14:	mov    DWORD PTR fs:[eax],edx
  425d17:	push   0x425d2c
  425d1c:	lea    eax,[ebp-0x4]
  425d1f:	call   0x404f88
  425d24:	ret    
  425d25:	jmp    0x40481c
  425d2a:	jmp    0x425d1c
  425d2c:	pop    edi
  425d2d:	pop    esi
  425d2e:	pop    ebx
  425d2f:	pop    ecx
  425d30:	pop    ebp
  425d31:	ret    
  425d32:	mov    eax,eax
  425d34:	xor    ecx,ecx
  425d36:	mov    edx,DWORD PTR [eax+0xc]
  425d39:	mov    eax,ds:0x41be90
  425d3e:	call   0x41b254
  425d43:	ret    
  425d44:	push   ebp
  425d45:	mov    ebp,esp
  425d47:	xor    ecx,ecx
  425d49:	push   ecx
  425d4a:	push   ecx
  425d4b:	push   ecx
  425d4c:	push   ecx
  425d4d:	push   ecx
  425d4e:	push   ebx
  425d4f:	push   esi
  425d50:	push   edi
  425d51:	mov    esi,edx
  425d53:	mov    ebx,eax
  425d55:	xor    eax,eax
  425d57:	push   ebp
  425d58:	push   0x425e1d
  425d5d:	push   DWORD PTR fs:[eax]
  425d60:	mov    DWORD PTR fs:[eax],esp
  425d63:	mov    eax,DWORD PTR [ebx+0xc]
  425d66:	mov    edx,esi
  425d68:	call   0x4053b0
  425d6d:	je     0x425dfa
  425d73:	push   0x0
  425d75:	lea    eax,[ebp-0x4]
  425d78:	push   eax
  425d79:	lea    edx,[ebp-0x8]
  425d7c:	mov    eax,ds:0x46dd7c
  425d81:	call   0x406f48
  425d86:	mov    eax,DWORD PTR [ebp-0x8]
  425d89:	push   eax
  425d8a:	mov    DWORD PTR [ebp-0x10],esi
  425d8d:	mov    BYTE PTR [ebp-0xc],0xb
  425d91:	lea    ecx,[ebp-0x10]
  425d94:	mov    eax,ds:0x41be90
  425d99:	pop    edx
  425d9a:	call   0x41b0d4
  425d9f:	mov    eax,DWORD PTR [ebp-0x4]
  425da2:	push   eax
  425da3:	mov    edx,esi
  425da5:	mov    eax,ebx
  425da7:	mov    ecx,DWORD PTR [eax]
  425da9:	call   DWORD PTR [ecx+0x24]
  425dac:	mov    edx,eax
  425dae:	mov    eax,ds:0x41b94c
  425db3:	pop    ecx
  425db4:	call   0x41be3c
  425db9:	mov    eax,DWORD PTR [ebx+0x4]
  425dbc:	test   eax,eax
  425dbe:	je     0x425de9
  425dc0:	xor    ecx,ecx
  425dc2:	mov    edx,esi
  425dc4:	mov    edi,DWORD PTR [eax]
  425dc6:	call   DWORD PTR [edi+0x2c]
  425dc9:	mov    edi,eax
  425dcb:	lea    eax,[ebp-0x14]
  425dce:	mov    ecx,esi
  425dd0:	mov    edx,0x425e34
  425dd5:	call   0x4052a0
  425dda:	mov    ecx,DWORD PTR [ebp-0x14]
  425ddd:	mov    edx,edi
  425ddf:	mov    eax,ds:0x41b94c
  425de4:	call   0x41be30
  425de9:	mov    eax,ebx
  425deb:	mov    edx,DWORD PTR [eax]
  425ded:	call   DWORD PTR [edx+0x30]
  425df0:	lea    eax,[ebx+0xc]
  425df3:	mov    edx,esi
  425df5:	call   0x404fdc
  425dfa:	xor    eax,eax
  425dfc:	pop    edx
  425dfd:	pop    ecx
  425dfe:	pop    ecx
  425dff:	mov    DWORD PTR fs:[eax],edx
  425e02:	push   0x425e24
  425e07:	lea    eax,[ebp-0x14]
  425e0a:	call   0x404f88
  425e0f:	lea    eax,[ebp-0x8]
  425e12:	mov    edx,0x2
  425e17:	call   0x404fac
  425e1c:	ret    
  425e1d:	jmp    0x40481c
  425e22:	jmp    0x425e07
  425e24:	pop    edi
  425e25:	pop    esi
  425e26:	pop    ebx
  425e27:	mov    esp,ebp
  425e29:	pop    ebp
  425e2a:	ret    
  425e2b:	add    bh,bh
  425e2d:	(bad)  
  425e2e:	(bad)  
  425e2f:	call   FWORD PTR [ecx]
  425e31:	add    BYTE PTR [eax],al
  425e33:	add    BYTE PTR [edx+0x65],dl
  425e36:	jo     0x425ea4
  425e38:	jns    0x425e5a
  425e3a:	popa   
  425e3b:	ins    BYTE PTR es:[edi],dx
  425e3c:	jb     0x425ea3
  425e3e:	popa   
  425e3f:	fs jns 0x425e62
  425e42:	gs js  0x425eae
  425e45:	jae    0x425ebb
  425e47:	jae    0x425e69
  425e49:	outs   dx,WORD PTR ds:[esi]
  425e4b:	jb     0x425e6d
  425e4d:	add    BYTE PTR [eax],al
  425e4f:	add    BYTE PTR [esi+0x57],dl
  425e52:	mov    edi,ecx
  425e54:	mov    esi,eax
  425e56:	mov    eax,esi
  425e58:	call   0x425d44
  425e5d:	mov    edx,edi
  425e5f:	mov    eax,DWORD PTR [esi+0x18]
  425e62:	mov    ecx,DWORD PTR [eax]
  425e64:	call   DWORD PTR [ecx+0x2c]
  425e67:	pop    edi
  425e68:	pop    esi
  425e69:	ret    
  425e6a:	mov    eax,eax
  425e6c:	mov    al,0x1
  425e6e:	ret    
  425e6f:	nop
  425e70:	xor    eax,eax
  425e72:	ret    
  425e73:	nop
  425e74:	mov    edx,DWORD PTR [eax]
  425e76:	call   DWORD PTR [edx+0x20]
  425e79:	ret    
  425e7a:	mov    eax,eax
  425e7c:	push   ebx
  425e7d:	mov    ebx,eax
  425e7f:	mov    eax,DWORD PTR [ebx+0x10]
  425e82:	mov    edx,DWORD PTR [eax]
  425e84:	call   DWORD PTR [edx+0x44]
  425e87:	mov    eax,DWORD PTR [ebx+0x10]
  425e8a:	pop    ebx
  425e8b:	ret    
  425e8c:	fcomp  DWORD PTR [esi+0x42]
	...
  425eab:	add    ah,bl
  425ead:	pop    esi
  425eae:	inc    edx
  425eaf:	add    BYTE PTR [eax+eax*1],cl
  425eb2:	add    BYTE PTR [eax],al
  425eb4:	dec    esp
  425eb5:	mov    ecx,0x42d00041
  425eba:	inc    eax
  425ebb:	add    ah,bl
  425ebd:	inc    edx
  425ebe:	inc    eax
  425ebf:	add    al,ah
  425ec1:	inc    edx
  425ec2:	inc    eax
  425ec3:	add    ah,ah
  425ec5:	inc    edx
  425ec6:	inc    eax
  425ec7:	add    al,bl
  425ec9:	inc    edx
  425eca:	inc    eax
  425ecb:	add    BYTE PTR [eax],bh
  425ecd:	inc    eax
  425ece:	inc    eax
  425ecf:	add    BYTE PTR [eax+eax*2+0x40],dl
  425ed3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  425ed9:	mov    ebp,0x45180041
  425ede:	dec    ecx
  425edf:	fs dec esi
  425ee1:	outs   dx,DWORD PTR ds:[esi]
  425ee2:	je     0x425f29
  425ee4:	outs   dx,BYTE PTR ds:[esi]
  425ee5:	outs   dx,DWORD PTR ds:[esi]
  425ee6:	jne    0x425f4f
  425ee8:	push   0x61746144
  425eed:	dec    ecx
  425eee:	outs   dx,BYTE PTR ds:[esi]
  425eef:	inc    edx
  425ef0:	jne    0x425f58
  425ef2:	data16 gs jb 0x425e83
  425ef6:	inc    eax
  425ef7:	add    BYTE PTR [edi+ebx*2+0x42],al
	...
  425f17:	add    BYTE PTR [eax+0x5f],cl
  425f1a:	inc    edx
  425f1b:	add    BYTE PTR [eax+eax*1],cl
  425f1e:	add    BYTE PTR [eax],al
  425f20:	dec    esp
  425f21:	mov    ecx,0x42d00041
  425f26:	inc    eax
  425f27:	add    ah,bl
  425f29:	inc    edx
  425f2a:	inc    eax
  425f2b:	add    al,ah
  425f2d:	inc    edx
  425f2e:	inc    eax
  425f2f:	add    ah,ah
  425f31:	inc    edx
  425f32:	inc    eax
  425f33:	add    al,bl
  425f35:	inc    edx
  425f36:	inc    eax
  425f37:	add    BYTE PTR [eax],bh
  425f39:	inc    eax
  425f3a:	inc    eax
  425f3b:	add    BYTE PTR [eax+eax*2+0x40],dl
  425f3f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  425f45:	mov    ebp,0x45160041
  425f4a:	dec    ecx
  425f4b:	fs push esp
  425f4d:	outs   dx,DWORD PTR ds:[esi]
  425f4e:	outs   dx,DWORD PTR ds:[esi]
  425f4f:	dec    ebp
  425f50:	jne    0x425fb5
  425f52:	push   0x61746144
  425f57:	dec    ecx
  425f58:	outs   dx,BYTE PTR ds:[esi]
  425f59:	inc    edx
  425f5a:	jne    0x425fc2
  425f5c:	data16 gs jb 0x425ef0
  425f60:	lods   al,BYTE PTR ds:[esi]
  425f61:	pop    edi
  425f62:	inc    edx
	...
  425f6b:	add    BYTE PTR [edi+ebx*2+0x42],ch
	...
  425f7e:	add    BYTE PTR [eax],al
  425f80:	mov    esi,0x2400425f
  425f85:	add    BYTE PTR [eax],al
  425f87:	add    BYTE PTR [eax-0x2fffbff0],dl
  425f8d:	inc    edx
  425f8e:	inc    eax
  425f8f:	add    ah,bl
  425f91:	inc    edx
  425f92:	inc    eax
  425f93:	add    al,ah
  425f95:	inc    edx
  425f96:	inc    eax
  425f97:	add    ah,ah
  425f99:	inc    edx
  425f9a:	inc    eax
  425f9b:	add    al,bl
  425f9d:	inc    edx
  425f9e:	inc    eax
  425f9f:	add    BYTE PTR [eax],bh
  425fa1:	inc    eax
  425fa2:	inc    eax
  425fa3:	add    BYTE PTR [eax+eax*2+0x40],dl
  425fa7:	add    BYTE PTR [ecx+eiz*2+0xe0042],ch
  425fae:	add    BYTE PTR [eax],al
  425fb0:	add    BYTE PTR [eax],al
  425fb2:	add    DWORD PTR [eax],eax
  425fb4:	add    BYTE PTR [eax],al
  425fb6:	pushf  
  425fb7:	jbe    0x425ff9
  425fb9:	add    BYTE PTR [eax+eax*1],al
  425fbc:	add    BYTE PTR [eax],al
  425fbe:	or     DWORD PTR [ecx+ecx*2+0x64],edx
  425fc2:	inc    edx
  425fc3:	jne    0x42602b
  425fc5:	data16 gs jb 0x42601e
  425fc9:	mov    ebp,esp
  425fcb:	push   0x0
  425fcd:	push   ebx
  425fce:	push   esi
  425fcf:	push   edi
  425fd0:	mov    edi,ecx
  425fd2:	mov    esi,edx
  425fd4:	mov    ebx,eax
  425fd6:	xor    eax,eax
  425fd8:	push   ebp
  425fd9:	push   0x426031
  425fde:	push   DWORD PTR fs:[eax]
  425fe1:	mov    DWORD PTR fs:[eax],esp
  425fe4:	lea    edx,[ebp-0x4]
  425fe7:	mov    eax,ds:0x46de8c
  425fec:	call   0x406f48
  425ff1:	mov    ecx,DWORD PTR [ebp-0x4]
  425ff4:	mov    eax,0x7fffffff
  425ff9:	sub    eax,esi
  425ffb:	jno    0x426002
  425ffd:	call   0x403f70
  426002:	add    edi,DWORD PTR [ebx+0x20]
  426005:	jno    0x42600c
  426007:	call   0x403f70
  42600c:	cmp    eax,edi
  42600e:	setl   dl
  426011:	mov    eax,ds:0x425ef8
  426016:	call   0x41be6c
  42601b:	xor    eax,eax
  42601d:	pop    edx
  42601e:	pop    ecx
  42601f:	pop    ecx
  426020:	mov    DWORD PTR fs:[eax],edx
  426023:	push   0x426038
  426028:	lea    eax,[ebp-0x4]
  42602b:	call   0x404f88
  426030:	ret    
  426031:	jmp    0x40481c
  426036:	jmp    0x426028
  426038:	pop    edi
  426039:	pop    esi
  42603a:	pop    ebx
  42603b:	pop    ecx
  42603c:	pop    ebp
  42603d:	ret    
  42603e:	mov    eax,eax
  426040:	push   ebp
  426041:	mov    ebp,esp
  426043:	push   0x0
  426045:	push   0x0
  426047:	push   0x0
  426049:	push   0x0
  42604b:	push   ebx
  42604c:	push   esi
  42604d:	push   edi
  42604e:	mov    edi,ecx
  426050:	mov    esi,edx
  426052:	mov    ebx,eax
  426054:	xor    eax,eax
  426056:	push   ebp
  426057:	push   0x4260ff
  42605c:	push   DWORD PTR fs:[eax]
  42605f:	mov    DWORD PTR fs:[eax],esp
  426062:	cmp    DWORD PTR [esi],0xffffffff
  426065:	jne    0x426075
  426067:	add    edi,DWORD PTR [ebx+0x20]
  42606a:	jno    0x426071
  42606c:	call   0x403f70
  426071:	mov    DWORD PTR [esi],edi
  426073:	jmp    0x4260e4
  426075:	lea    edx,[ebp-0x8]
  426078:	mov    eax,ds:0x46daec
  42607d:	call   0x406f48
  426082:	push   DWORD PTR [ebp-0x8]
  426085:	push   0x426118
  42608a:	lea    ecx,[ebp-0xc]
  42608d:	mov    edx,DWORD PTR [esi]
  42608f:	mov    eax,ds:0x41be90
  426094:	call   0x41b19c
  426099:	push   DWORD PTR [ebp-0xc]
  42609c:	push   0x426124
  4260a1:	lea    ecx,[ebp-0x10]
  4260a4:	mov    edx,DWORD PTR [ebx+0x20]
  4260a7:	mov    eax,ds:0x41be90
  4260ac:	call   0x41b19c
  4260b1:	push   DWORD PTR [ebp-0x10]
  4260b4:	push   0x426130
  4260b9:	lea    eax,[ebp-0x4]
  4260bc:	mov    edx,0x6
  4260c1:	call   0x40531c
  4260c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4260c9:	mov    eax,DWORD PTR [esi]
  4260cb:	add    edi,DWORD PTR [ebx+0x20]
  4260ce:	jno    0x4260d5
  4260d0:	call   0x403f70
  4260d5:	cmp    eax,edi
  4260d7:	setg   dl
  4260da:	mov    eax,ds:0x425e8c
  4260df:	call   0x41be6c
  4260e4:	xor    eax,eax
  4260e6:	pop    edx
  4260e7:	pop    ecx
  4260e8:	pop    ecx
  4260e9:	mov    DWORD PTR fs:[eax],edx
  4260ec:	push   0x426106
  4260f1:	lea    eax,[ebp-0x10]
  4260f4:	mov    edx,0x4
  4260f9:	call   0x404fac
  4260fe:	ret    
  4260ff:	jmp    0x40481c
  426104:	jmp    0x4260f1
  426106:	pop    edi
  426107:	pop    esi
  426108:	pop    ebx
  426109:	mov    esp,ebp
  42610b:	pop    ebp
  42610c:	ret    
  42610d:	add    BYTE PTR [eax],al
  42610f:	add    bh,bh
  426111:	(bad)  
  426112:	(bad)  
  426113:	inc    DWORD PTR [edx]
  426115:	add    BYTE PTR [eax],al
  426117:	add    BYTE PTR [eax],ah
  426119:	sub    BYTE PTR [eax],al
  42611b:	add    bh,bh
  42611d:	(bad)  
  42611e:	(bad)  
  42611f:	inc    DWORD PTR [ecx]
  426121:	add    BYTE PTR [eax],al
  426123:	add    BYTE PTR [edi],ch
  426125:	add    BYTE PTR [eax],al
  426127:	add    bh,bh
  426129:	(bad)  
  42612a:	(bad)  
  42612b:	inc    DWORD PTR [ecx]
  42612d:	add    BYTE PTR [eax],al
  42612f:	add    BYTE PTR [ecx],ch
  426131:	add    BYTE PTR [eax],al
  426133:	add    BYTE PTR [ebx-0x75],dl
  426136:	fsubr  DWORD PTR [edx+0x0]
  426139:	lea    eax,[ebx+0x4]
  42613c:	mov    ecx,0x1
  426141:	mov    edx,DWORD PTR ds:0x40769c
  426147:	call   0x4063b0
  42614c:	add    esp,0x4
  42614f:	xor    eax,eax
  426151:	mov    DWORD PTR [ebx+0x10],eax
  426154:	mov    eax,DWORD PTR [ebx+0x4]
  426157:	call   0x4061f4
  42615c:	mov    DWORD PTR [ebx+0x20],eax
  42615f:	pop    ebx
  426160:	ret    
  426161:	lea    eax,[eax+0x0]
  426164:	push   ebp
  426165:	mov    ebp,esp
  426167:	push   ebx
  426168:	push   esi
  426169:	test   dl,dl
  42616b:	je     0x426175
  42616d:	add    esp,0xfffffff0
  426170:	call   0x4043ac
  426175:	mov    ebx,edx
  426177:	mov    esi,eax
  426179:	xor    edx,edx
  42617b:	mov    eax,esi
  42617d:	call   0x426780
  426182:	mov    eax,DWORD PTR [ebp+0x8]
  426185:	mov    DWORD PTR [esi+0x18],eax
  426188:	mov    eax,DWORD PTR [ebp+0xc]
  42618b:	mov    DWORD PTR [esi+0x1c],eax
  42618e:	mov    eax,esi
  426190:	test   bl,bl
  426192:	je     0x4261a3
  426194:	call   0x404404
  426199:	pop    DWORD PTR fs:0x0
  4261a0:	add    esp,0xc
  4261a3:	mov    eax,esi
  4261a5:	pop    esi
  4261a6:	pop    ebx
  4261a7:	pop    ebp
  4261a8:	ret    0x8
  4261ab:	nop
  4261ac:	push   ebx
  4261ad:	push   esi
  4261ae:	call   0x404454
  4261b3:	mov    ebx,edx
  4261b5:	mov    esi,eax
  4261b7:	mov    eax,esi
  4261b9:	call   0x426134
  4261be:	mov    edx,ebx
  4261c0:	and    dl,0xfc
  4261c3:	mov    eax,esi
  4261c5:	call   0x404090
  4261ca:	mov    eax,ds:0x4234ac
  4261cf:	call   0x4240c8
  4261d4:	test   bl,bl
  4261d6:	jle    0x4261df
  4261d8:	mov    eax,esi
  4261da:	call   0x4043fc
  4261df:	pop    esi
  4261e0:	pop    ebx
  4261e1:	ret    
  4261e2:	mov    eax,eax
  4261e4:	push   ebp
  4261e5:	mov    ebp,esp
  4261e7:	push   0x0
  4261e9:	push   ebx
  4261ea:	mov    ebx,ecx
  4261ec:	xor    ecx,ecx
  4261ee:	push   ebp
  4261ef:	push   0x426249
  4261f4:	push   DWORD PTR fs:[ecx]
  4261f7:	mov    DWORD PTR fs:[ecx],esp
  4261fa:	cmp    edx,0xffffffff
  4261fd:	jne    0x426202
  4261ff:	mov    edx,DWORD PTR [eax+0x20]
  426202:	test   edx,edx
  426204:	jle    0x426226
  426206:	push   0x1
  426208:	push   0xffffffff
  42620a:	lea    ecx,[ebp-0x4]
  42620d:	xchg   edx,ecx
  42620f:	call   0x426254
  426214:	push   ebx
  426215:	mov    ecx,0x7fffffff
  42621a:	xor    edx,edx
  42621c:	mov    eax,DWORD PTR [ebp-0x4]
  42621f:	call   0x41d7a4
  426224:	jmp    0x42622d
  426226:	mov    eax,ebx
  426228:	call   0x404f88
  42622d:	xor    eax,eax
  42622f:	pop    edx
  426230:	pop    ecx
  426231:	pop    ecx
  426232:	mov    DWORD PTR fs:[eax],edx
  426235:	push   0x426250
  42623a:	lea    eax,[ebp-0x4]
  42623d:	mov    edx,DWORD PTR ds:0x40769c
  426243:	call   0x4063bc
  426248:	ret    
  426249:	jmp    0x40481c
  42624e:	jmp    0x42623a
  426250:	pop    ebx
  426251:	pop    ecx
  426252:	pop    ebp
  426253:	ret    
  426254:	push   ebp
  426255:	mov    ebp,esp
  426257:	add    esp,0xfffffff8
  42625a:	push   ebx
  42625b:	push   esi
  42625c:	push   edi
  42625d:	mov    DWORD PTR [ebp-0x8],ecx
  426260:	mov    DWORD PTR [ebp-0x4],edx
  426263:	mov    ebx,eax
  426265:	mov    esi,DWORD PTR [ebp+0x8]
  426268:	cmp    DWORD PTR [ebp-0x8],0xffffffff
  42626c:	jne    0x426274
  42626e:	mov    eax,DWORD PTR [ebx+0x20]
  426271:	mov    DWORD PTR [ebp-0x8],eax
  426274:	mov    eax,esi
  426276:	cdq    
  426277:	push   edx
  426278:	push   eax
  426279:	push   0x0
  42627b:	push   0x0
  42627d:	call   0x41d1b8
  426282:	push   eax
  426283:	sar    eax,0x1f
  426286:	cmp    eax,edx
  426288:	pop    eax
  426289:	je     0x426290
  42628b:	call   0x403f68
  426290:	cmp    DWORD PTR [ebp-0x8],0x0
  426294:	jle    0x42633d
  42629a:	lea    edx,[ebp-0x8]
  42629d:	mov    ecx,eax
  42629f:	mov    eax,ebx
  4262a1:	call   0x426040
  4262a6:	cmp    BYTE PTR [ebp+0xc],0x0
  4262aa:	je     0x4262dd
  4262ac:	mov    eax,DWORD PTR [ebp-0x4]
  4262af:	mov    eax,DWORD PTR [eax]
  4262b1:	call   0x4061f4
  4262b6:	mov    edi,eax
  4262b8:	mov    eax,DWORD PTR [ebp-0x8]
  4262bb:	add    eax,edi
  4262bd:	jno    0x4262c4
  4262bf:	call   0x403f70
  4262c4:	push   eax
  4262c5:	mov    eax,DWORD PTR [ebp-0x4]
  4262c8:	mov    ecx,0x1
  4262cd:	mov    edx,DWORD PTR ds:0x40769c
  4262d3:	call   0x4063b0
  4262d8:	add    esp,0x4
  4262db:	jmp    0x426308
  4262dd:	xor    edi,edi
  4262df:	mov    eax,DWORD PTR [ebp-0x4]
  4262e2:	mov    eax,DWORD PTR [eax]
  4262e4:	call   0x4061f4
  4262e9:	cmp    eax,DWORD PTR [ebp-0x8]
  4262ec:	jge    0x426308
  4262ee:	mov    eax,DWORD PTR [ebp-0x8]
  4262f1:	push   eax
  4262f2:	mov    eax,DWORD PTR [ebp-0x4]
  4262f5:	mov    ecx,0x1
  4262fa:	mov    edx,DWORD PTR ds:0x40769c
  426300:	call   0x4063b0
  426305:	add    esp,0x4
  426308:	test   esi,esi
  42630a:	jge    0x42632b
  42630c:	push   edi
  42630d:	mov    eax,DWORD PTR [ebp-0x8]
  426310:	push   eax
  426311:	mov    ecx,DWORD PTR [ebp-0x4]
  426314:	mov    edx,DWORD PTR [ebx+0x10]
  426317:	mov    eax,DWORD PTR [ebx+0x4]
  42631a:	call   0x41c6f0
  42631f:	mov    edx,DWORD PTR [ebp-0x8]
  426322:	mov    eax,ebx
  426324:	call   0x42644c
  426329:	jmp    0x42633d
  42632b:	push   edi
  42632c:	mov    eax,DWORD PTR [ebp-0x8]
  42632f:	push   eax
  426330:	mov    ecx,DWORD PTR [ebp-0x4]
  426333:	mov    edx,esi
  426335:	mov    eax,DWORD PTR [ebx+0x4]
  426338:	call   0x41c6f0
  42633d:	pop    edi
  42633e:	pop    esi
  42633f:	pop    ebx
  426340:	pop    ecx
  426341:	pop    ecx
  426342:	pop    ebp
  426343:	ret    0x8
  426346:	mov    eax,eax
  426348:	push   ebp
  426349:	mov    ebp,esp
  42634b:	add    esp,0xfffffff4
  42634e:	push   ebx
  42634f:	push   esi
  426350:	push   edi
  426351:	xor    ebx,ebx
  426353:	mov    DWORD PTR [ebp-0x4],ebx
  426356:	mov    DWORD PTR [ebp-0xc],ecx
  426359:	mov    DWORD PTR [ebp-0x8],edx
  42635c:	mov    ebx,eax
  42635e:	mov    esi,DWORD PTR [ebp+0x8]
  426361:	xor    eax,eax
  426363:	push   ebp
  426364:	push   0x42643b
  426369:	push   DWORD PTR fs:[eax]
  42636c:	mov    DWORD PTR fs:[eax],esp
  42636f:	cmp    DWORD PTR [ebp-0xc],0xffffffff
  426373:	jne    0x42637b
  426375:	mov    eax,DWORD PTR [ebx+0x20]
  426378:	mov    DWORD PTR [ebp-0xc],eax
  42637b:	mov    eax,esi
  42637d:	cdq    
  42637e:	push   edx
  42637f:	push   eax
  426380:	push   0x0
  426382:	push   0x0
  426384:	call   0x41d1b8
  426389:	push   eax
  42638a:	sar    eax,0x1f
  42638d:	cmp    eax,edx
  42638f:	pop    eax
  426390:	je     0x426397
  426392:	call   0x403f68
  426397:	mov    edi,eax
  426399:	test   esi,esi
  42639b:	jge    0x4263d2
  42639d:	mov    dl,0x1
  42639f:	mov    eax,ebx
  4263a1:	call   0x42649c
  4263a6:	lea    edx,[ebp-0xc]
  4263a9:	mov    ecx,edi
  4263ab:	mov    eax,ebx
  4263ad:	call   0x426040
  4263b2:	mov    eax,DWORD PTR [ebp-0xc]
  4263b5:	push   eax
  4263b6:	mov    ecx,DWORD PTR [ebx+0x4]
  4263b9:	mov    edx,DWORD PTR [ebp-0x8]
  4263bc:	mov    eax,ds:0x41c1fc
  4263c1:	call   0x41c378
  4263c6:	mov    edx,DWORD PTR [ebp-0xc]
  4263c9:	mov    eax,ebx
  4263cb:	call   0x42644c
  4263d0:	jmp    0x42641f
  4263d2:	lea    edx,[ebp-0xc]
  4263d5:	mov    ecx,edi
  4263d7:	mov    eax,ebx
  4263d9:	call   0x426040
  4263de:	mov    eax,DWORD PTR [ebp-0xc]
  4263e1:	push   eax
  4263e2:	lea    eax,[ebp-0x4]
  4263e5:	mov    ecx,0x1
  4263ea:	mov    edx,DWORD PTR ds:0x40769c
  4263f0:	call   0x4063b0
  4263f5:	add    esp,0x4
  4263f8:	push   0x0
  4263fa:	mov    eax,DWORD PTR [ebp-0xc]
  4263fd:	push   eax
  4263fe:	lea    ecx,[ebp-0x4]
  426401:	mov    edx,esi
  426403:	mov    eax,DWORD PTR [ebx+0x4]
  426406:	call   0x41c6f0
  42640b:	mov    eax,DWORD PTR [ebp-0xc]
  42640e:	push   eax
  42640f:	mov    ecx,DWORD PTR [ebp-0x4]
  426412:	mov    edx,DWORD PTR [ebp-0x8]
  426415:	mov    eax,ds:0x41c1fc
  42641a:	call   0x41c378
  42641f:	xor    eax,eax
  426421:	pop    edx
  426422:	pop    ecx
  426423:	pop    ecx
  426424:	mov    DWORD PTR fs:[eax],edx
  426427:	push   0x426442
  42642c:	lea    eax,[ebp-0x4]
  42642f:	mov    edx,DWORD PTR ds:0x40769c
  426435:	call   0x4063bc
  42643a:	ret    
  42643b:	jmp    0x40481c
  426440:	jmp    0x42642c
  426442:	pop    edi
  426443:	pop    esi
  426444:	pop    ebx
  426445:	mov    esp,ebp
  426447:	pop    ebp
  426448:	ret    0x4
  42644b:	nop
  42644c:	push   ebx
  42644d:	push   esi
  42644e:	mov    esi,edx
  426450:	mov    ebx,eax
  426452:	cmp    esi,DWORD PTR [ebx+0x20]
  426455:	jl     0x426460
  426457:	mov    eax,ebx
  426459:	call   0x426134
  42645e:	jmp    0x426485
  426460:	add    DWORD PTR [ebx+0x10],esi
  426463:	jno    0x42646a
  426465:	call   0x403f70
  42646a:	sub    DWORD PTR [ebx+0x20],esi
  42646d:	jno    0x426474
  42646f:	call   0x403f70
  426474:	mov    eax,DWORD PTR [ebx+0x10]
  426477:	cmp    eax,DWORD PTR [ebx+0xc]
  42647a:	jle    0x426485
  42647c:	mov    dl,0x1
  42647e:	mov    eax,ebx
  426480:	call   0x42649c
  426485:	cmp    WORD PTR [ebx+0x1a],0x0
  42648a:	je     0x426496
  42648c:	mov    ecx,esi
  42648e:	mov    edx,ebx
  426490:	mov    eax,DWORD PTR [ebx+0x1c]
  426493:	call   DWORD PTR [ebx+0x18]
  426496:	pop    esi
  426497:	pop    ebx
  426498:	ret    
  426499:	lea    eax,[eax+0x0]
  42649c:	push   ebx
  42649d:	push   esi
  42649e:	mov    ebx,edx
  4264a0:	mov    esi,eax
  4264a2:	mov    eax,DWORD PTR [esi+0x10]
  4264a5:	test   eax,eax
  4264a7:	jle    0x426513
  4264a9:	push   0x0
  4264ab:	mov    edx,DWORD PTR [esi+0x20]
  4264ae:	push   edx
  4264af:	lea    ecx,[esi+0x4]
  4264b2:	mov    edx,eax
  4264b4:	mov    eax,DWORD PTR [esi+0x4]
  4264b7:	call   0x41c6f0
  4264bc:	xor    eax,eax
  4264be:	mov    DWORD PTR [esi+0x10],eax
  4264c1:	test   bl,bl
  4264c3:	je     0x426513
  4264c5:	mov    eax,esi
  4264c7:	call   0x426774
  4264cc:	sub    eax,DWORD PTR [esi+0x20]
  4264cf:	jno    0x4264d6
  4264d1:	call   0x403f70
  4264d6:	sub    eax,DWORD PTR [esi+0x10]
  4264d9:	jno    0x4264e0
  4264db:	call   0x403f70
  4264e0:	cmp    eax,DWORD PTR [esi+0xc]
  4264e3:	jle    0x426513
  4264e5:	mov    eax,DWORD PTR [esi+0x10]
  4264e8:	add    eax,DWORD PTR [esi+0x20]
  4264eb:	jno    0x4264f2
  4264ed:	call   0x403f70
  4264f2:	add    eax,DWORD PTR [esi+0xc]
  4264f5:	jno    0x4264fc
  4264f7:	call   0x403f70
  4264fc:	push   eax
  4264fd:	lea    eax,[esi+0x4]
  426500:	mov    ecx,0x1
  426505:	mov    edx,DWORD PTR ds:0x40769c
  42650b:	call   0x4063b0
  426510:	add    esp,0x4
  426513:	pop    esi
  426514:	pop    ebx
  426515:	ret    
  426516:	mov    eax,eax
  426518:	push   ebp
  426519:	mov    ebp,esp
  42651b:	push   ecx
  42651c:	push   ebx
  42651d:	push   esi
  42651e:	mov    esi,ecx
  426520:	mov    DWORD PTR [ebp-0x4],edx
  426523:	mov    ebx,eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	call   0x406420
  42652d:	xor    eax,eax
  42652f:	push   ebp
  426530:	push   0x42656c
  426535:	push   DWORD PTR fs:[eax]
  426538:	mov    DWORD PTR fs:[eax],esp
  42653b:	push   esi
  42653c:	mov    eax,DWORD PTR [ebp-0x4]
  42653f:	call   0x4061f4
  426544:	mov    ecx,eax
  426546:	mov    edx,DWORD PTR [ebp-0x4]
  426549:	mov    eax,ebx
  42654b:	call   0x4267d4
  426550:	xor    eax,eax
  426552:	pop    edx
  426553:	pop    ecx
  426554:	pop    ecx
  426555:	mov    DWORD PTR fs:[eax],edx
  426558:	push   0x426573
  42655d:	lea    eax,[ebp-0x4]
  426560:	mov    edx,DWORD PTR ds:0x40769c
  426566:	call   0x4063bc
  42656b:	ret    
  42656c:	jmp    0x40481c
  426571:	jmp    0x42655d
  426573:	pop    esi
  426574:	pop    ebx
  426575:	pop    ecx
  426576:	pop    ebp
  426577:	ret    
  426578:	push   ebp
  426579:	mov    ebp,esp
  42657b:	push   0x0
  42657d:	push   ebx
  42657e:	push   esi
  42657f:	push   edi
  426580:	mov    edi,ecx
  426582:	mov    esi,edx
  426584:	mov    ebx,eax
  426586:	xor    eax,eax
  426588:	push   ebp
  426589:	push   0x4265ca
  42658e:	push   DWORD PTR fs:[eax]
  426591:	mov    DWORD PTR fs:[eax],esp
  426594:	lea    ecx,[ebp-0x4]
  426597:	mov    dl,0x1
  426599:	mov    eax,esi
  42659b:	call   0x41d2bc
  4265a0:	mov    edx,DWORD PTR [ebp-0x4]
  4265a3:	mov    ecx,edi
  4265a5:	mov    eax,ebx
  4265a7:	call   0x4265dc
  4265ac:	mov    ebx,eax
  4265ae:	xor    eax,eax
  4265b0:	pop    edx
  4265b1:	pop    ecx
  4265b2:	pop    ecx
  4265b3:	mov    DWORD PTR fs:[eax],edx
  4265b6:	push   0x4265d1
  4265bb:	lea    eax,[ebp-0x4]
  4265be:	mov    edx,DWORD PTR ds:0x40769c
  4265c4:	call   0x4063bc
  4265c9:	ret    
  4265ca:	jmp    0x40481c
  4265cf:	jmp    0x4265bb
  4265d1:	mov    eax,ebx
  4265d3:	pop    edi
  4265d4:	pop    esi
  4265d5:	pop    ebx
  4265d6:	pop    ecx
  4265d7:	pop    ebp
  4265d8:	ret    
  4265d9:	lea    eax,[eax+0x0]
  4265dc:	push   ebp
  4265dd:	mov    ebp,esp
  4265df:	add    esp,0xffffffdc
  4265e2:	push   ebx
  4265e3:	push   esi
  4265e4:	xor    ebx,ebx
  4265e6:	mov    DWORD PTR [ebp-0x24],ebx
  4265e9:	mov    DWORD PTR [ebp-0x20],ebx
  4265ec:	mov    ebx,ecx
  4265ee:	mov    DWORD PTR [ebp-0x8],edx
  4265f1:	mov    DWORD PTR [ebp-0x4],eax
  4265f4:	xor    eax,eax
  4265f6:	push   ebp
  4265f7:	push   0x426764
  4265fc:	push   DWORD PTR fs:[eax]
  4265ff:	mov    DWORD PTR fs:[eax],esp
  426602:	mov    DWORD PTR [ebp-0xc],0xffffffff
  426609:	mov    eax,DWORD PTR [ebp-0x4]
  42660c:	cmp    DWORD PTR [eax+0x20],0x0
  426610:	jle    0x426749
  426616:	lea    edx,[ebp-0x20]
  426619:	mov    eax,ds:0x46ddc8
  42661e:	call   0x406f48
  426623:	mov    eax,DWORD PTR [ebp-0x20]
  426626:	push   eax
  426627:	mov    eax,DWORD PTR [ebp-0x8]
  42662a:	call   0x4061f4
  42662f:	test   eax,eax
  426631:	sete   dl
  426634:	mov    eax,ds:0x41b94c
  426639:	pop    ecx
  42663a:	call   0x41be6c
  42663f:	mov    eax,DWORD PTR [ebp-0x4]
  426642:	mov    eax,DWORD PTR [eax+0x20]
  426645:	sub    eax,0x1
  426648:	jno    0x42664f
  42664a:	call   0x403f70
  42664f:	push   eax
  426650:	lea    edx,[ebp-0x24]
  426653:	mov    eax,ds:0x46db88
  426658:	call   0x406f48
  42665d:	mov    eax,DWORD PTR [ebp-0x24]
  426660:	push   eax
  426661:	xor    ecx,ecx
  426663:	mov    edx,ebx
  426665:	mov    eax,ds:0x41b94c
  42666a:	call   0x41be54
  42666f:	mov    eax,DWORD PTR [ebp-0x8]
  426672:	call   0x4061f4
  426677:	mov    DWORD PTR [ebp-0x14],eax
  42667a:	mov    eax,DWORD PTR [ebp-0x4]
  42667d:	mov    eax,DWORD PTR [eax+0x10]
  426680:	mov    edx,eax
  426682:	mov    ecx,DWORD PTR [ebp-0x4]
  426685:	add    edx,DWORD PTR [ecx+0x20]
  426688:	jno    0x42668f
  42668a:	call   0x403f70
  42668f:	mov    DWORD PTR [ebp-0x10],edx
  426692:	mov    ecx,eax
  426694:	add    ecx,ebx
  426696:	jno    0x42669d
  426698:	call   0x403f70
  42669d:	mov    eax,DWORD PTR [ebp-0x10]
  4266a0:	sub    eax,DWORD PTR [ebp-0x14]
  4266a3:	jno    0x4266aa
  4266a5:	call   0x403f70
  4266aa:	sub    eax,ecx
  4266ac:	jl     0x426749
  4266b2:	inc    eax
  4266b3:	mov    DWORD PTR [ebp-0x1c],eax
  4266b6:	mov    BYTE PTR [ebp-0x15],0x1
  4266ba:	mov    edx,DWORD PTR [ebp-0x14]
  4266bd:	sub    edx,0x1
  4266c0:	jno    0x4266c7
  4266c2:	call   0x403f70
  4266c7:	test   edx,edx
  4266c9:	jl     0x426721
  4266cb:	inc    edx
  4266cc:	xor    eax,eax
  4266ce:	mov    ebx,eax
  4266d0:	add    ebx,ecx
  4266d2:	jno    0x4266d9
  4266d4:	call   0x403f70
  4266d9:	cmp    ebx,DWORD PTR [ebp-0x10]
  4266dc:	jge    0x426721
  4266de:	mov    ebx,eax
  4266e0:	add    ebx,ecx
  4266e2:	jno    0x4266e9
  4266e4:	call   0x403f70
  4266e9:	mov    esi,DWORD PTR [ebp-0x4]
  4266ec:	mov    esi,DWORD PTR [esi+0x4]
  4266ef:	test   esi,esi
  4266f1:	je     0x4266f8
  4266f3:	cmp    ebx,DWORD PTR [esi-0x4]
  4266f6:	jb     0x4266fd
  4266f8:	call   0x403f68
  4266fd:	movzx  ebx,BYTE PTR [esi+ebx*1]
  426701:	mov    esi,DWORD PTR [ebp-0x8]
  426704:	test   esi,esi
  426706:	je     0x42670d
  426708:	cmp    eax,DWORD PTR [esi-0x4]
  42670b:	jb     0x426712
  42670d:	call   0x403f68
  426712:	cmp    bl,BYTE PTR [esi+eax*1]
  426715:	je     0x42671d
  426717:	mov    BYTE PTR [ebp-0x15],0x0
  42671b:	jmp    0x426721
  42671d:	inc    eax
  42671e:	dec    edx
  42671f:	jne    0x4266ce
  426721:	cmp    BYTE PTR [ebp-0x15],0x0
  426725:	je     0x42673f
  426727:	mov    eax,DWORD PTR [ebp-0x4]
  42672a:	mov    edx,ecx
  42672c:	sub    edx,DWORD PTR [eax+0x10]
  42672f:	jno    0x426736
  426731:	call   0x403f70
  426736:	mov    DWORD PTR [ebp-0xc],edx
  426739:	cmp    DWORD PTR [ebp-0xc],0xffffffff
  42673d:	jne    0x426749
  42673f:	inc    ecx
  426740:	dec    DWORD PTR [ebp-0x1c]
  426743:	jne    0x4266b6
  426749:	xor    eax,eax
  42674b:	pop    edx
  42674c:	pop    ecx
  42674d:	pop    ecx
  42674e:	mov    DWORD PTR fs:[eax],edx
  426751:	push   0x42676b
  426756:	lea    eax,[ebp-0x24]
  426759:	mov    edx,0x2
  42675e:	call   0x404fac
  426763:	ret    
  426764:	jmp    0x40481c
  426769:	jmp    0x426756
  42676b:	mov    eax,DWORD PTR [ebp-0xc]
  42676e:	pop    esi
  42676f:	pop    ebx
  426770:	mov    esp,ebp
  426772:	pop    ebp
  426773:	ret    
  426774:	mov    eax,DWORD PTR [eax+0x4]
  426777:	call   0x4061f4
  42677c:	ret    
  42677d:	lea    eax,[eax+0x0]
  426780:	push   ebx
  426781:	push   esi
  426782:	test   dl,dl
  426784:	je     0x42678e
  426786:	add    esp,0xfffffff0
  426789:	call   0x4043ac
  42678e:	mov    ebx,edx
  426790:	mov    esi,eax
  426792:	xor    edx,edx
  426794:	mov    eax,esi
  426796:	call   0x404070
  42679b:	mov    BYTE PTR [esi+0x8],0x1
  42679f:	mov    DWORD PTR [esi+0xc],0x800
  4267a6:	mov    eax,esi
  4267a8:	call   0x426134
  4267ad:	mov    eax,ds:0x4234ac
  4267b2:	call   0x42419c
  4267b7:	mov    eax,esi
  4267b9:	test   bl,bl
  4267bb:	je     0x4267cc
  4267bd:	call   0x404404
  4267c2:	pop    DWORD PTR fs:0x0
  4267c9:	add    esp,0xc
  4267cc:	mov    eax,esi
  4267ce:	pop    esi
  4267cf:	pop    ebx
  4267d0:	ret    
  4267d1:	lea    eax,[eax+0x0]
  4267d4:	push   ebp
  4267d5:	mov    ebp,esp
  4267d7:	add    esp,0xfffffff8
  4267da:	push   ebx
  4267db:	push   esi
  4267dc:	push   edi
  4267dd:	mov    DWORD PTR [ebp-0x8],ecx
  4267e0:	mov    DWORD PTR [ebp-0x4],edx
  4267e3:	mov    ebx,eax
  4267e5:	mov    eax,DWORD PTR [ebp-0x4]
  4267e8:	call   0x406420
  4267ed:	xor    eax,eax
  4267ef:	push   ebp
  4267f0:	push   0x426958
  4267f5:	push   DWORD PTR fs:[eax]
  4267f8:	mov    DWORD PTR fs:[eax],esp
  4267fb:	mov    esi,DWORD PTR [ebp-0x8]
  4267fe:	mov    eax,DWORD PTR [ebp+0x8]
  426801:	cdq    
  426802:	push   edx
  426803:	push   eax
  426804:	push   0x0
  426806:	push   0x0
  426808:	call   0x41d1b8
  42680d:	push   eax
  42680e:	sar    eax,0x1f
  426811:	cmp    eax,edx
  426813:	pop    eax
  426814:	je     0x42681b
  426816:	call   0x403f68
  42681b:	mov    edi,eax
  42681d:	mov    ecx,edi
  42681f:	mov    edx,esi
  426821:	mov    eax,ebx
  426823:	call   0x425fc8
  426828:	cmp    DWORD PTR [ebx+0x20],0x0
  42682c:	jne    0x42689a
  42682e:	xor    eax,eax
  426830:	mov    DWORD PTR [ebx+0x10],eax
  426833:	cmp    DWORD PTR [ebp+0x8],0x0
  426837:	jge    0x426855
  426839:	lea    eax,[ebx+0x4]
  42683c:	mov    edx,DWORD PTR [ebp-0x4]
  42683f:	mov    ecx,DWORD PTR ds:0x40769c
  426845:	call   0x4063f8
  42684a:	mov    eax,DWORD PTR [ebp-0x8]
  42684d:	mov    DWORD PTR [ebx+0x20],eax
  426850:	jmp    0x42693c
  426855:	mov    eax,DWORD PTR [ebp-0x4]
  426858:	call   0x4061f4
  42685d:	mov    edi,eax
  42685f:	add    edi,DWORD PTR [ebp+0x8]
  426862:	jno    0x426869
  426864:	call   0x403f70
  426869:	mov    DWORD PTR [ebx+0x20],edi
  42686c:	push   edi
  42686d:	lea    eax,[ebx+0x4]
  426870:	mov    ecx,0x1
  426875:	mov    edx,DWORD PTR ds:0x40769c
  42687b:	call   0x4063b0
  426880:	add    esp,0x4
  426883:	mov    eax,DWORD PTR [ebp+0x8]
  426886:	push   eax
  426887:	push   esi
  426888:	lea    ecx,[ebx+0x4]
  42688b:	xor    edx,edx
  42688d:	mov    eax,DWORD PTR [ebp-0x4]
  426890:	call   0x41c6f0
  426895:	jmp    0x42693c
  42689a:	cmp    DWORD PTR [ebp+0x8],0x0
  42689e:	jge    0x42691c
  4268a0:	xor    edx,edx
  4268a2:	mov    eax,ebx
  4268a4:	call   0x42649c
  4268a9:	mov    eax,ebx
  4268ab:	call   0x426774
  4268b0:	mov    edi,DWORD PTR [ebx+0x20]
  4268b3:	sub    eax,edi
  4268b5:	jno    0x4268bc
  4268b7:	call   0x403f70
  4268bc:	sub    eax,DWORD PTR [ebx+0x10]
  4268bf:	jno    0x4268c6
  4268c1:	call   0x403f70
  4268c6:	cmp    esi,eax
  4268c8:	jle    0x4268f4
  4268ca:	add    edi,esi
  4268cc:	jno    0x4268d3
  4268ce:	call   0x403f70
  4268d3:	add    edi,DWORD PTR [ebx+0xc]
  4268d6:	jno    0x4268dd
  4268d8:	call   0x403f70
  4268dd:	push   edi
  4268de:	lea    eax,[ebx+0x4]
  4268e1:	mov    ecx,0x1
  4268e6:	mov    edx,DWORD PTR ds:0x40769c
  4268ec:	call   0x4063b0
  4268f1:	add    esp,0x4
  4268f4:	mov    eax,DWORD PTR [ebx+0x10]
  4268f7:	add    eax,DWORD PTR [ebx+0x20]
  4268fa:	jno    0x426901
  4268fc:	call   0x403f70
  426901:	push   eax
  426902:	push   esi
  426903:	lea    ecx,[ebx+0x4]
  426906:	xor    edx,edx
  426908:	mov    eax,DWORD PTR [ebp-0x4]
  42690b:	call   0x41c6f0
  426910:	add    DWORD PTR [ebx+0x20],esi
  426913:	jno    0x42691a
  426915:	call   0x403f70
  42691a:	jmp    0x42693c
  42691c:	push   edi
  42691d:	push   esi
  42691e:	lea    ecx,[ebx+0x4]
  426921:	xor    edx,edx
  426923:	mov    eax,DWORD PTR [ebp-0x4]
  426926:	call   0x41c6f0
  42692b:	cmp    edi,DWORD PTR [ebx+0x20]
  42692e:	jl     0x42693c
  426930:	add    edi,esi
  426932:	jno    0x426939
  426934:	call   0x403f70
  426939:	mov    DWORD PTR [ebx+0x20],edi
  42693c:	xor    eax,eax
  42693e:	pop    edx
  42693f:	pop    ecx
  426940:	pop    ecx
  426941:	mov    DWORD PTR fs:[eax],edx
  426944:	push   0x42695f
  426949:	lea    eax,[ebp-0x4]
  42694c:	mov    edx,DWORD PTR ds:0x40769c
  426952:	call   0x4063bc
  426957:	ret    
  426958:	jmp    0x40481c
  42695d:	jmp    0x426949
  42695f:	pop    edi
  426960:	pop    esi
  426961:	pop    ebx
  426962:	pop    ecx
  426963:	pop    ecx
  426964:	pop    ebp
  426965:	ret    0x4
  426968:	mov    ah,0x69
  42696a:	inc    edx
	...
  426987:	add    BYTE PTR [eax+0xc004269],bh
  42698d:	add    BYTE PTR [eax],al
  42698f:	add    BYTE PTR [ecx+edi*4+0x41],cl
  426993:	add    al,dl
  426995:	inc    edx
  426996:	inc    eax
  426997:	add    ah,bl
  426999:	inc    edx
  42699a:	inc    eax
  42699b:	add    al,ah
  42699d:	inc    edx
  42699e:	inc    eax
  42699f:	add    ah,ah
  4269a1:	inc    edx
  4269a2:	inc    eax
  4269a3:	add    al,bl
  4269a5:	inc    edx
  4269a6:	inc    eax
  4269a7:	add    BYTE PTR [eax],bh
  4269a9:	inc    eax
  4269aa:	inc    eax
  4269ab:	add    BYTE PTR [eax+eax*2+0x40],dl
  4269af:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4269b5:	mov    ebp,0x45180041
  4269ba:	dec    ecx
  4269bb:	fs dec ecx
  4269bd:	outs   dx,BYTE PTR ds:[esi]
  4269be:	je     0x426a25
  4269c0:	jb     0x426a25
  4269c2:	gs jo  0x426a39
  4269c5:	inc    ebx
  4269c6:	imul   esi,DWORD PTR [edx+0x63],0x72616c75
  4269cd:	dec    esp
  4269ce:	imul   ebp,DWORD PTR [esi+0x6b],0xd800408d
  4269d5:	imul   eax,DWORD PTR [edx+0x0],0x49541708
  4269dc:	fs dec ecx
  4269de:	outs   dx,BYTE PTR ds:[esi]
  4269df:	je     0x426a46
  4269e1:	jb     0x426a46
  4269e3:	gs jo  0x426a5a
  4269e6:	dec    esi
  4269e7:	outs   dx,DWORD PTR ds:[esi]
  4269e8:	je     0x426a53
  4269ea:	data16 jns 0x426a32
  4269ed:	jbe    0x426a54
  4269ef:	outs   dx,BYTE PTR ds:[esi]
  4269f0:	je     0x4269f2
  4269f2:	add    DWORD PTR [eax],ecx
  4269f4:	pop    es
  4269f5:	inc    ecx
  4269f6:	push   ebx
  4269f7:	outs   dx,BYTE PTR gs:[esi]
  4269f9:	fs gs jb 0x426a13
  4269fd:	push   esp
  4269fe:	dec    ecx
  4269ff:	fs inc ebx
  426a01:	outs   dx,DWORD PTR ds:[esi]
  426a02:	outs   dx,BYTE PTR ds:[esi]
  426a03:	outs   dx,BYTE PTR ds:[esi]
  426a04:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  426a09:	outs   dx,BYTE PTR ds:[esi]
  426a0a:	dec    ecx
  426a0b:	outs   dx,BYTE PTR ds:[esi]
  426a0c:	je     0x426a73
  426a0e:	jb     0x426a73
  426a10:	gs jo  0x426a87
  426a13:	add    BYTE PTR [eax],bl
  426a15:	imul   eax,DWORD PTR [edx+0x0],0x1c
  426a19:	push   0x42
  426a1b:	add    BYTE PTR [eax],cl
  426a1d:	pop    ss
  426a1e:	push   esp
  426a1f:	dec    ecx
  426a20:	fs dec ecx
  426a22:	outs   dx,BYTE PTR ds:[esi]
  426a23:	je     0x426a8a
  426a25:	jb     0x426a8a
  426a27:	gs jo  0x426a9e
  426a2a:	push   ebx
  426a2b:	je     0x426a9f
  426a2d:	gs popa 
  426a2f:	ins    DWORD PTR es:[edi],dx
  426a30:	inc    ebp
  426a31:	jbe    0x426a98
  426a33:	outs   dx,BYTE PTR ds:[esi]
  426a34:	je     0x426a36
  426a36:	add    cl,BYTE PTR [eax]
  426a38:	pop    es
  426a39:	inc    ecx
  426a3a:	push   ebx
  426a3b:	outs   dx,BYTE PTR gs:[esi]
  426a3d:	fs gs jb 0x426a57
  426a41:	push   esp
  426a42:	dec    ecx
  426a43:	fs inc ebx
  426a45:	outs   dx,DWORD PTR ds:[esi]
  426a46:	outs   dx,BYTE PTR ds:[esi]
  426a47:	outs   dx,BYTE PTR ds:[esi]
  426a48:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  426a4d:	outs   dx,BYTE PTR ds:[esi]
  426a4e:	dec    ecx
  426a4f:	outs   dx,BYTE PTR ds:[esi]
  426a50:	je     0x426ab7
  426a52:	jb     0x426ab7
  426a54:	gs jo  0x426acb
  426a57:	add    DWORD PTR [edi],eax
  426a59:	inc    ecx
  426a5a:	inc    edx
  426a5b:	jne    0x426ac3
  426a5d:	data16 gs jb 0x426a67
  426a61:	push   esp
  426a62:	inc    edx
  426a63:	jns    0x426ad9
  426a65:	gs jae 0x426a68
  426a68:	sbb    BYTE PTR [ebx+0x42],ch
  426a6b:	add    BYTE PTR [esi+esi*2+0x6abc0040],bl
  426a72:	inc    edx
	...
  426a7f:	add    BYTE PTR [ebx+ebp*2],bl
  426a82:	inc    edx
	...
  426a8f:	add    BYTE PTR [eax],al
  426a91:	imul   eax,DWORD PTR [edx+0x0],0x60
  426a95:	add    BYTE PTR [eax],al
  426a97:	add    BYTE PTR [ebp+eax*2-0x56e7ffbe],dh
  426a9e:	inc    ecx
  426a9f:	add    ah,bl
  426aa1:	inc    edx
  426aa2:	inc    eax
  426aa3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  426aa9:	inc    edx
  426aaa:	inc    eax
  426aab:	add    al,bl
  426aad:	inc    edx
  426aae:	inc    eax
  426aaf:	add    BYTE PTR [eax],bh
  426ab1:	inc    eax
  426ab2:	inc    eax
  426ab3:	add    BYTE PTR [eax+eax*2+0x40],dl
  426ab7:	add    BYTE PTR [edx+eiz*4],ch
  426aba:	inc    ecx
  426abb:	add    BYTE PTR [eax+0x41],ch
  426abe:	inc    ecx
  426abf:	add    BYTE PTR [eax-0x5b],dh
  426ac2:	inc    ecx
  426ac3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  426aca:	inc    ecx
  426acb:	add    BYTE PTR [eax+0x6d],bh
  426ace:	inc    edx
  426acf:	add    BYTE PTR [eax-0x5a],bl
  426ad2:	inc    ecx
  426ad3:	add    BYTE PTR [eax-0x59],dl
  426ad6:	inc    ecx
  426ad7:	add    BYTE PTR [eax],dh
  426ad9:	test   eax,0xa6680041
  426ade:	inc    ecx
  426adf:	add    BYTE PTR [eax-0x5a],ah
  426ae2:	inc    ecx
  426ae3:	add    BYTE PTR [eax],bh
  426ae5:	test   eax,0x46bc0041
  426aea:	inc    edx
  426aeb:	add    BYTE PTR [eax+0x2800426d],ah
  426af1:	ins    BYTE PTR es:[edi],dx
  426af2:	inc    edx
  426af3:	add    BYTE PTR [eax],al
  426af5:	ins    BYTE PTR es:[edi],dx
  426af6:	inc    edx
  426af7:	add    BYTE PTR [esp+ebp*2+0x42],dl
  426afb:	add    BYTE PTR [esp+ebp*2+0x42],bh
  426aff:	add    BYTE PTR [esi],dl
  426b01:	push   esp
  426b02:	dec    ecx
  426b03:	fs inc ebx
  426b05:	outs   dx,DWORD PTR ds:[esi]
  426b06:	outs   dx,BYTE PTR ds:[esi]
  426b07:	outs   dx,BYTE PTR ds:[esi]
  426b08:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  426b0d:	outs   dx,BYTE PTR ds:[esi]
  426b0e:	dec    ecx
  426b0f:	outs   dx,BYTE PTR ds:[esi]
  426b10:	je     0x426b77
  426b12:	jb     0x426b77
  426b14:	gs jo  0x426b8b
  426b17:	nop
  426b18:	sbb    al,0x6b
  426b1a:	inc    edx
  426b1b:	add    BYTE PTR [edi],al
  426b1d:	push   ss
  426b1e:	push   esp
  426b1f:	dec    ecx
  426b20:	fs inc ebx
  426b22:	outs   dx,DWORD PTR ds:[esi]
  426b23:	outs   dx,BYTE PTR ds:[esi]
  426b24:	outs   dx,BYTE PTR ds:[esi]
  426b25:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  426b2a:	outs   dx,BYTE PTR ds:[esi]
  426b2b:	dec    ecx
  426b2c:	outs   dx,BYTE PTR ds:[esi]
  426b2d:	je     0x426b94
  426b2f:	jb     0x426b94
  426b31:	gs jo  0x426ba8
  426b34:	mov    esp,0x4800426a
  426b39:	inc    esi
  426b3a:	inc    edx
  426b3b:	add    BYTE PTR [edi],al
  426b3d:	add    BYTE PTR [ebx],cl
  426b3f:	dec    ecx
  426b40:	fs dec ecx
  426b42:	outs   dx,BYTE PTR ds:[esi]
  426b43:	je     0x426baa
  426b45:	jb     0x426baa
  426b47:	gs jo  0x426bbe
  426b4a:	add    eax,0x426b1800
  426b4f:	add    BYTE PTR [eax+eax*1],dh
  426b52:	add    bh,bh
  426b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b55:	ins    BYTE PTR es:[edi],dx
  426b56:	inc    edx
  426b57:	add    BYTE PTR [ecx],al
  426b59:	add    BYTE PTR [eax],al
  426b5b:	add    BYTE PTR [eax],al
  426b5d:	add    BYTE PTR [eax],al
  426b5f:	add    BYTE PTR [eax],0x0
  426b62:	add    BYTE PTR [eax+0x49090002],al
  426b68:	outs   dx,BYTE PTR ds:[esi]
  426b69:	je     0x426bd0
  426b6b:	jb     0x426bd0
  426b6d:	gs jo  0x426be4
  426b70:	aam    0x69
  426b72:	inc    edx
  426b73:	add    BYTE PTR [eax+0x0],al
  426b76:	add    bh,bh
  426b78:	inc    eax
  426b79:	add    BYTE PTR [eax],al
  426b7b:	inc    DWORD PTR [ecx]
  426b7d:	add    BYTE PTR [eax],al
  426b7f:	add    BYTE PTR [eax],al
  426b81:	add    BYTE PTR [eax],al
  426b83:	add    BYTE PTR [eax],0x0
  426b86:	add    BYTE PTR [eax+0x4f090003],al
  426b8c:	outs   dx,BYTE PTR ds:[esi]
  426b8d:	inc    ebx
  426b8e:	outs   dx,DWORD PTR ds:[esi]
  426b8f:	outs   dx,BYTE PTR ds:[esi]
  426b90:	outs   dx,BYTE PTR ds:[esi]
  426b91:	arpl   WORD PTR gs:[esp+edx*8+0x69],si
  426b96:	inc    edx
  426b97:	add    BYTE PTR [eax+0x0],cl
  426b9a:	add    bh,bh
  426b9c:	dec    eax
  426b9d:	add    BYTE PTR [eax],al
  426b9f:	inc    DWORD PTR [ecx]
  426ba1:	add    BYTE PTR [eax],al
  426ba3:	add    BYTE PTR [eax],al
  426ba5:	add    BYTE PTR [eax],al
  426ba7:	add    BYTE PTR [eax],0x0
  426baa:	add    BYTE PTR [eax+0x4f0c0004],al
  426bb0:	outs   dx,BYTE PTR ds:[esi]
  426bb1:	inc    esp
  426bb2:	imul   esi,DWORD PTR [ebx+0x63],0x656e6e6f
  426bb9:	arpl   WORD PTR [eax+ebx*1+0x6a],si
  426bbd:	inc    edx
  426bbe:	add    BYTE PTR [eax+0x0],dl
  426bc1:	add    bh,bh
  426bc3:	push   eax
  426bc4:	add    BYTE PTR [eax],al
  426bc6:	inc    DWORD PTR [ecx]
  426bc8:	add    BYTE PTR [eax],al
  426bca:	add    BYTE PTR [eax],al
  426bcc:	add    BYTE PTR [eax],al
  426bce:	add    BYTE PTR [eax],0x0
  426bd1:	add    BYTE PTR [eax+0x4f090005],al
  426bd7:	outs   dx,BYTE PTR ds:[esi]
  426bd8:	push   edx
  426bd9:	arpl   WORD PTR gs:[ebp+0x69],sp
  426bdd:	jbe    0x426c44
  426bdf:	sbb    BYTE PTR [edx+0x42],ch
  426be2:	add    BYTE PTR [eax+0x0],bl
  426be5:	add    bh,bh
  426be7:	pop    eax
  426be8:	add    BYTE PTR [eax],al
  426bea:	inc    DWORD PTR [ecx]
  426bec:	add    BYTE PTR [eax],al
  426bee:	add    BYTE PTR [eax],al
  426bf0:	add    BYTE PTR [eax],al
  426bf2:	add    BYTE PTR [eax],0x0
  426bf5:	add    BYTE PTR [eax+0x4f060006],al
  426bfb:	outs   dx,BYTE PTR ds:[esi]
  426bfc:	push   ebx
  426bfd:	outs   dx,BYTE PTR gs:[esi]
  426bff:	fs push ebx
  426c01:	mov    ebx,eax
  426c03:	mov    eax,DWORD PTR [ebx+0x34]
  426c06:	test   eax,eax
  426c08:	je     0x426c0f
  426c0a:	mov    edx,DWORD PTR [eax]
  426c0c:	call   DWORD PTR [edx+0x38]
  426c0f:	cmp    WORD PTR [ebx+0x4a],0x0
  426c14:	je     0x426c1e
  426c16:	mov    edx,ebx
  426c18:	mov    eax,DWORD PTR [ebx+0x4c]
  426c1b:	call   DWORD PTR [ebx+0x48]
  426c1e:	xor    eax,eax
  426c20:	mov    DWORD PTR [ebx+0x30],eax
  426c23:	pop    ebx
  426c24:	ret    
  426c25:	lea    eax,[eax+0x0]
  426c28:	push   ebx
  426c29:	push   esi
  426c2a:	mov    esi,edx
  426c2c:	mov    ebx,eax
  426c2e:	mov    DWORD PTR [ebx+0x30],esi
  426c31:	cmp    WORD PTR [ebx+0x42],0x0
  426c36:	je     0x426c40
  426c38:	mov    edx,ebx
  426c3a:	mov    eax,DWORD PTR [ebx+0x44]
  426c3d:	call   DWORD PTR [ebx+0x40]
  426c40:	mov    eax,DWORD PTR [ebx+0x34]
  426c43:	test   eax,eax
  426c45:	je     0x426c4e
  426c47:	mov    edx,esi
  426c49:	mov    ecx,DWORD PTR [eax]
  426c4b:	call   DWORD PTR [ecx+0x34]
  426c4e:	pop    esi
  426c4f:	pop    ebx
  426c50:	ret    
  426c51:	lea    eax,[eax+0x0]
  426c54:	push   ebx
  426c55:	push   esi
  426c56:	mov    esi,edx
  426c58:	mov    ebx,eax
  426c5a:	mov    eax,DWORD PTR [ebx+0x34]
  426c5d:	test   eax,eax
  426c5f:	je     0x426c68
  426c61:	mov    edx,esi
  426c63:	mov    ecx,DWORD PTR [eax]
  426c65:	call   DWORD PTR [ecx+0x3c]
  426c68:	cmp    WORD PTR [ebx+0x52],0x0
  426c6d:	je     0x426c79
  426c6f:	mov    ecx,esi
  426c71:	mov    edx,ebx
  426c73:	mov    eax,DWORD PTR [ebx+0x54]
  426c76:	call   DWORD PTR [ebx+0x50]
  426c79:	pop    esi
  426c7a:	pop    ebx
  426c7b:	ret    
  426c7c:	push   ebx
  426c7d:	push   esi
  426c7e:	mov    esi,edx
  426c80:	mov    ebx,eax
  426c82:	cmp    WORD PTR [ebx+0x5a],0x0
  426c87:	je     0x426c93
  426c89:	mov    ecx,esi
  426c8b:	mov    edx,ebx
  426c8d:	mov    eax,DWORD PTR [ebx+0x5c]
  426c90:	call   DWORD PTR [ebx+0x58]
  426c93:	mov    eax,DWORD PTR [ebx+0x34]
  426c96:	test   eax,eax
  426c98:	je     0x426ca1
  426c9a:	mov    edx,esi
  426c9c:	mov    ecx,DWORD PTR [eax]
  426c9e:	call   DWORD PTR [ecx+0x40]
  426ca1:	pop    esi
  426ca2:	pop    ebx
  426ca3:	ret    
  426ca4:	push   ebp
  426ca5:	mov    ebp,esp
  426ca7:	add    esp,0xfffffeec
  426cad:	push   ebx
  426cae:	push   esi
  426caf:	xor    ecx,ecx
  426cb1:	mov    DWORD PTR [ebp-0x8],ecx
  426cb4:	mov    DWORD PTR [ebp-0x114],ecx
  426cba:	mov    DWORD PTR [ebp-0x4],edx
  426cbd:	mov    esi,eax
  426cbf:	xor    eax,eax
  426cc1:	push   ebp
  426cc2:	push   0x426d6a
  426cc7:	push   DWORD PTR fs:[eax]
  426cca:	mov    DWORD PTR fs:[eax],esp
  426ccd:	mov    ebx,DWORD PTR [ebp-0x4]
  426cd0:	test   ebx,ebx
  426cd2:	je     0x426d38
  426cd4:	cmp    esi,ebx
  426cd6:	jne    0x426d31
  426cd8:	push   0x0
  426cda:	lea    eax,[ebp-0x8]
  426cdd:	push   eax
  426cde:	lea    edx,[ebp-0x110]
  426ce4:	mov    eax,DWORD PTR [esi]
  426ce6:	call   0x403f80
  426ceb:	lea    eax,[ebp-0x110]
  426cf1:	mov    DWORD PTR [ebp-0x10],eax
  426cf4:	mov    BYTE PTR [ebp-0xc],0x4
  426cf8:	lea    eax,[ebp-0x10]
  426cfb:	push   eax
  426cfc:	lea    edx,[ebp-0x114]
  426d02:	mov    eax,ds:0x46dd98
  426d07:	call   0x406f48
  426d0c:	mov    edx,DWORD PTR [ebp-0x114]
  426d12:	mov    eax,ds:0x41be90
  426d17:	pop    ecx
  426d18:	call   0x41b0d4
  426d1d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d20:	mov    dl,0x1
  426d22:	mov    eax,ds:0x426968
  426d27:	call   0x41bdbc
  426d2c:	call   0x4048fc
  426d31:	mov    ebx,DWORD PTR [ebx+0x34]
  426d34:	test   ebx,ebx
  426d36:	jne    0x426cd4
  426d38:	mov    eax,DWORD PTR [ebp-0x4]
  426d3b:	mov    DWORD PTR [esi+0x34],eax
  426d3e:	test   eax,eax
  426d40:	je     0x426d49
  426d42:	mov    edx,esi
  426d44:	call   0x41a2b4
  426d49:	xor    eax,eax
  426d4b:	pop    edx
  426d4c:	pop    ecx
  426d4d:	pop    ecx
  426d4e:	mov    DWORD PTR fs:[eax],edx
  426d51:	push   0x426d71
  426d56:	lea    eax,[ebp-0x114]
  426d5c:	call   0x404f88
  426d61:	lea    eax,[ebp-0x8]
  426d64:	call   0x404f88
  426d69:	ret    
  426d6a:	jmp    0x40481c
  426d6f:	jmp    0x426d56
  426d71:	pop    esi
  426d72:	pop    ebx
  426d73:	mov    esp,ebp
  426d75:	pop    ebp
  426d76:	ret    
  426d77:	nop
  426d78:	push   ebx
  426d79:	push   esi
  426d7a:	push   edi
  426d7b:	mov    ebx,ecx
  426d7d:	mov    esi,edx
  426d7f:	mov    edi,eax
  426d81:	mov    ecx,ebx
  426d83:	mov    edx,esi
  426d85:	mov    eax,edi
  426d87:	call   0x41a510
  426d8c:	cmp    bl,0x1
  426d8f:	jne    0x426d9b
  426d91:	cmp    esi,DWORD PTR [edi+0x34]
  426d94:	jne    0x426d9b
  426d96:	xor    eax,eax
  426d98:	mov    DWORD PTR [edi+0x34],eax
  426d9b:	pop    edi
  426d9c:	pop    esi
  426d9d:	pop    ebx
  426d9e:	ret    
  426d9f:	nop
  426da0:	push   ebx
  426da1:	mov    ebx,eax
  426da3:	mov    eax,ebx
  426da5:	call   0x4246f8
  426daa:	mov    BYTE PTR [ebx+0x38],0x1
  426dae:	pop    ebx
  426daf:	ret    
  426db0:	cld    
  426db1:	ins    DWORD PTR es:[edi],dx
  426db2:	inc    edx
	...
  426dcf:	add    BYTE PTR [eax],al
  426dd1:	outs   dx,BYTE PTR ds:[esi]
  426dd2:	inc    edx
  426dd3:	add    BYTE PTR [eax+eax*1],cl
  426dd6:	add    BYTE PTR [eax],al
  426dd8:	dec    esp
  426dd9:	mov    ecx,0x42d00041
  426dde:	inc    eax
  426ddf:	add    ah,bl
  426de1:	inc    edx
  426de2:	inc    eax
  426de3:	add    al,ah
  426de5:	inc    edx
  426de6:	inc    eax
  426de7:	add    ah,ah
  426de9:	inc    edx
  426dea:	inc    eax
  426deb:	add    al,bl
  426ded:	inc    edx
  426dee:	inc    eax
  426def:	add    BYTE PTR [eax],bh
  426df1:	inc    eax
  426df2:	inc    eax
  426df3:	add    BYTE PTR [eax+eax*2+0x40],dl
  426df7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426dfd:	mov    ebp,0x45130041
  426e02:	dec    ecx
  426e03:	fs inc ecx
  426e05:	ins    BYTE PTR es:[edi],dx
  426e06:	jb     0x426e6d
  426e08:	popa   
  426e09:	fs jns 0x426e4f
  426e0c:	outs   dx,DWORD PTR ds:[esi]
  426e0d:	outs   dx,BYTE PTR ds:[esi]
  426e0e:	outs   dx,BYTE PTR ds:[esi]
  426e0f:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  426e14:	pusha  
  426e15:	outs   dx,BYTE PTR ds:[esi]
  426e16:	inc    edx
	...
  426e33:	add    BYTE PTR [esi+ebp*2+0x42],ah
  426e37:	add    BYTE PTR [eax+eax*1],cl
  426e3a:	add    BYTE PTR [eax],al
  426e3c:	dec    esp
  426e3d:	mov    ecx,0x42d00041
  426e42:	inc    eax
  426e43:	add    ah,bl
  426e45:	inc    edx
  426e46:	inc    eax
  426e47:	add    al,ah
  426e49:	inc    edx
  426e4a:	inc    eax
  426e4b:	add    ah,ah
  426e4d:	inc    edx
  426e4e:	inc    eax
  426e4f:	add    al,bl
  426e51:	inc    edx
  426e52:	inc    eax
  426e53:	add    BYTE PTR [eax],bh
  426e55:	inc    eax
  426e56:	inc    eax
  426e57:	add    BYTE PTR [eax+eax*2+0x40],dl
  426e5b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426e61:	mov    ebp,0x450f0041
  426e66:	dec    ecx
  426e67:	fs inc ebx
  426e69:	ins    BYTE PTR es:[edi],dx
  426e6a:	outs   dx,DWORD PTR ds:[esi]
  426e6b:	jae    0x426ed2
  426e6d:	fs push ebx
  426e6f:	outs   dx,DWORD PTR ds:[esi]
  426e70:	arpl   WORD PTR [ebx+0x65],bp
  426e73:	je     0x426e35
  426e75:	outs   dx,BYTE PTR ds:[esi]
  426e76:	inc    edx
	...
  426e93:	add    ah,al
  426e95:	outs   dx,BYTE PTR ds:[esi]
  426e96:	inc    edx
  426e97:	add    BYTE PTR [eax+eax*1],cl
  426e9a:	add    BYTE PTR [eax],al
  426e9c:	dec    esp
  426e9d:	mov    ecx,0x42d00041
  426ea2:	inc    eax
  426ea3:	add    ah,bl
  426ea5:	inc    edx
  426ea6:	inc    eax
  426ea7:	add    al,ah
  426ea9:	inc    edx
  426eaa:	inc    eax
  426eab:	add    ah,ah
  426ead:	inc    edx
  426eae:	inc    eax
  426eaf:	add    al,bl
  426eb1:	inc    edx
  426eb2:	inc    eax
  426eb3:	add    BYTE PTR [eax],bh
  426eb5:	inc    eax
  426eb6:	inc    eax
  426eb7:	add    BYTE PTR [eax+eax*2+0x40],dl
  426ebb:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426ec1:	mov    ebp,0x450e0041
  426ec6:	dec    ecx
  426ec7:	fs push edx
  426ec9:	gs popa 
  426ecb:	fs push esp
  426ecd:	imul   ebp,DWORD PTR [ebp+0x65],0x9074756f
  426ed4:	and    BYTE PTR [edi+0x42],ch
	...
  426ef3:	add    BYTE PTR [edi+ebp*2],ah
  426ef6:	inc    edx
  426ef7:	add    BYTE PTR [eax+eax*1],cl
  426efa:	add    BYTE PTR [eax],al
  426efc:	dec    esp
  426efd:	mov    ecx,0x42d00041
  426f02:	inc    eax
  426f03:	add    ah,bl
  426f05:	inc    edx
  426f06:	inc    eax
  426f07:	add    al,ah
  426f09:	inc    edx
  426f0a:	inc    eax
  426f0b:	add    ah,ah
  426f0d:	inc    edx
  426f0e:	inc    eax
  426f0f:	add    al,bl
  426f11:	inc    edx
  426f12:	inc    eax
  426f13:	add    BYTE PTR [eax],bh
  426f15:	inc    eax
  426f16:	inc    eax
  426f17:	add    BYTE PTR [eax+eax*2+0x40],dl
  426f1b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426f21:	mov    ebp,0x451e0041
  426f26:	dec    ecx
  426f27:	fs push edx
  426f29:	gs popa 
  426f2b:	fs dec esp
  426f2d:	outs   dx,BYTE PTR ds:[esi]
  426f2e:	dec    ebp
  426f2f:	popa   
  426f30:	js     0x426f7e
  426f32:	imul   ebp,DWORD PTR [esi+0x65],0x676e654c
  426f39:	je     0x426fa3
  426f3b:	inc    ebp
  426f3c:	js     0x426fa1
  426f3e:	gs gs fs gs fs nop
  426f44:	nop
  426f45:	outs   dx,DWORD PTR ds:[esi]
  426f46:	inc    edx
	...
  426f63:	add    BYTE PTR [edi+ebp*2+0xc0042],dl
  426f6a:	add    BYTE PTR [eax],al
  426f6c:	dec    esp
  426f6d:	mov    ecx,0x42d00041
  426f72:	inc    eax
  426f73:	add    ah,bl
  426f75:	inc    edx
  426f76:	inc    eax
  426f77:	add    al,ah
  426f79:	inc    edx
  426f7a:	inc    eax
  426f7b:	add    ah,ah
  426f7d:	inc    edx
  426f7e:	inc    eax
  426f7f:	add    al,bl
  426f81:	inc    edx
  426f82:	inc    eax
  426f83:	add    BYTE PTR [eax],bh
  426f85:	inc    eax
  426f86:	inc    eax
  426f87:	add    BYTE PTR [eax+eax*2+0x40],dl
  426f8b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426f91:	mov    ebp,0x450f0041
  426f96:	dec    ecx
  426f97:	fs push eax
  426f99:	outs   dx,DWORD PTR ds:[esi]
  426f9a:	jb     0x427010
  426f9c:	push   edx
  426f9d:	gs jno 0x427015
  426fa0:	imul   esi,DWORD PTR [edx+0x65],0x426ff064
	...
  426fc3:	add    ah,dh
  426fc5:	outs   dx,DWORD PTR ds:[esi]
  426fc6:	inc    edx
  426fc7:	add    BYTE PTR [eax+eax*1],cl
  426fca:	add    BYTE PTR [eax],al
  426fcc:	dec    esp
  426fcd:	mov    ecx,0x42d00041
  426fd2:	inc    eax
  426fd3:	add    ah,bl
  426fd5:	inc    edx
  426fd6:	inc    eax
  426fd7:	add    al,ah
  426fd9:	inc    edx
  426fda:	inc    eax
  426fdb:	add    ah,ah
  426fdd:	inc    edx
  426fde:	inc    eax
  426fdf:	add    al,bl
  426fe1:	inc    edx
  426fe2:	inc    eax
  426fe3:	add    BYTE PTR [eax],bh
  426fe5:	inc    eax
  426fe6:	inc    eax
  426fe7:	add    BYTE PTR [eax+eax*2+0x40],dl
  426feb:	add    BYTE PTR [eax-0x43ffbfc0],dl
  426ff1:	mov    ebp,0x450f0041
  426ff6:	dec    ecx
  426ff7:	fs dec eax
  426ff9:	outs   dx,DWORD PTR ds:[esi]
  426ffa:	jae    0x427070
  426ffc:	push   edx
  426ffd:	gs jno 0x427075
  427000:	imul   esi,DWORD PTR [edx+0x65],0x42705064
	...
  427023:	add    BYTE PTR [eax+esi*2+0x42],dl
  427027:	add    BYTE PTR [eax+eax*1],cl
  42702a:	add    BYTE PTR [eax],al
  42702c:	dec    esp
  42702d:	mov    ecx,0x42d00041
  427032:	inc    eax
  427033:	add    ah,bl
  427035:	inc    edx
  427036:	inc    eax
  427037:	add    al,ah
  427039:	inc    edx
  42703a:	inc    eax
  42703b:	add    ah,ah
  42703d:	inc    edx
  42703e:	inc    eax
  42703f:	add    al,bl
  427041:	inc    edx
  427042:	inc    eax
  427043:	add    BYTE PTR [eax],bh
  427045:	inc    eax
  427046:	inc    eax
  427047:	add    BYTE PTR [eax+eax*2+0x40],dl
  42704b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427051:	mov    ebp,0x45150041
  427056:	dec    ecx
  427057:	fs push esp
  427059:	inc    ebx
  42705a:	push   eax
  42705b:	inc    ebx
  42705c:	outs   dx,DWORD PTR ds:[esi]
  42705d:	outs   dx,BYTE PTR ds:[esi]
  42705e:	outs   dx,BYTE PTR ds:[esi]
  42705f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  427064:	outs   dx,BYTE PTR ds:[esi]
  427065:	inc    ebp
  427066:	jb     0x4270da
  427068:	outs   dx,DWORD PTR ds:[esi]
  427069:	jb     0x426ff6
  42706b:	sar    BYTE PTR [eax+0x4270],0x0
	...
  42708a:	add    BYTE PTR [eax],al
  42708c:	mov    esp,0xc004270
  427091:	add    BYTE PTR [eax],al
  427093:	add    BYTE PTR [eax+esi*2],al
  427096:	inc    edx
  427097:	add    al,dl
  427099:	inc    edx
  42709a:	inc    eax
  42709b:	add    ah,bl
  42709d:	inc    edx
  42709e:	inc    eax
  42709f:	add    al,ah
  4270a1:	inc    edx
  4270a2:	inc    eax
  4270a3:	add    ah,ah
  4270a5:	inc    edx
  4270a6:	inc    eax
  4270a7:	add    al,bl
  4270a9:	inc    edx
  4270aa:	inc    eax
  4270ab:	add    BYTE PTR [eax],bh
  4270ad:	inc    eax
  4270ae:	inc    eax
  4270af:	add    BYTE PTR [eax+eax*2+0x40],dl
  4270b3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4270b9:	mov    ebp,0x45190041
  4270be:	dec    ecx
  4270bf:	fs dec edi
  4270c1:	bound  ebp,QWORD PTR [edx+0x65]
  4270c4:	arpl   WORD PTR [esp+edx*2+0x79],si
  4270c8:	jo     0x42712f
  4270ca:	dec    esi
  4270cb:	outs   dx,DWORD PTR ds:[esi]
  4270cc:	je     0x427121
  4270ce:	jne    0x427140
  4270d0:	jo     0x427141
  4270d2:	jb     0x427148
  4270d4:	gs fs mov eax,eax
  4270d8:	and    al,0x71
  4270da:	inc    edx
	...
  4270f7:	add    BYTE PTR [eax],ch
  4270f9:	jno    0x42713d
  4270fb:	add    BYTE PTR [eax+eax*1],cl
  4270fe:	add    BYTE PTR [eax],al
  427100:	add    al,0x70
  427102:	inc    edx
  427103:	add    al,dl
  427105:	inc    edx
  427106:	inc    eax
  427107:	add    ah,bl
  427109:	inc    edx
  42710a:	inc    eax
  42710b:	add    al,ah
  42710d:	inc    edx
  42710e:	inc    eax
  42710f:	add    ah,ah
  427111:	inc    edx
  427112:	inc    eax
  427113:	add    al,bl
  427115:	inc    edx
  427116:	inc    eax
  427117:	add    BYTE PTR [eax],bh
  427119:	inc    eax
  42711a:	inc    eax
  42711b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42711f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427125:	mov    ebp,0x45170041
  42712a:	dec    ecx
  42712b:	fs dec ecx
  42712d:	dec    edi
  42712e:	dec    eax
  42712f:	popa   
  427130:	outs   dx,BYTE PTR ds:[esi]
  427131:	fs ins BYTE PTR es:[edi],dx
  427133:	gs jb  0x427186
  427136:	jb     0x4271a7
  427138:	jo     0x427183
  42713a:	outs   dx,BYTE PTR ds:[esi]
  42713b:	jbe    0x42719e
  42713d:	ins    BYTE PTR es:[edi],dx
  42713e:	imul   esp,DWORD PTR [esp+ecx*4+0x71],0x42
	...
  42715e:	add    BYTE PTR [eax],al
  427160:	nop
  427161:	jno    0x4271a5
  427163:	add    BYTE PTR [eax+eax*1],cl
  427166:	add    BYTE PTR [eax],al
  427168:	add    al,0x70
  42716a:	inc    edx
  42716b:	add    al,dl
  42716d:	inc    edx
  42716e:	inc    eax
  42716f:	add    ah,bl
  427171:	inc    edx
  427172:	inc    eax
  427173:	add    al,ah
  427175:	inc    edx
  427176:	inc    eax
  427177:	add    ah,ah
  427179:	inc    edx
  42717a:	inc    eax
  42717b:	add    al,bl
  42717d:	inc    edx
  42717e:	inc    eax
  42717f:	add    BYTE PTR [eax],bh
  427181:	inc    eax
  427182:	inc    eax
  427183:	add    BYTE PTR [eax+eax*2+0x40],dl
  427187:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42718d:	mov    ebp,0x450f0041
  427192:	dec    ecx
  427193:	fs dec esi
  427195:	outs   dx,DWORD PTR ds:[esi]
  427196:	inc    esp
  427197:	popa   
  427198:	je     0x4271fb
  42719a:	push   esp
  42719b:	outs   dx,DWORD PTR ds:[esi]
  42719c:	push   edx
  42719d:	gs popa 
  42719f:	fs in  al,dx
  4271a1:	jno    0x4271e5
	...
  4271bf:	add    al,dh
  4271c1:	jno    0x427205
  4271c3:	add    BYTE PTR [eax+eax*1],cl
  4271c6:	add    BYTE PTR [eax],al
  4271c8:	add    al,0x70
  4271ca:	inc    edx
  4271cb:	add    al,dl
  4271cd:	inc    edx
  4271ce:	inc    eax
  4271cf:	add    ah,bl
  4271d1:	inc    edx
  4271d2:	inc    eax
  4271d3:	add    al,ah
  4271d5:	inc    edx
  4271d6:	inc    eax
  4271d7:	add    ah,ah
  4271d9:	inc    edx
  4271da:	inc    eax
  4271db:	add    al,bl
  4271dd:	inc    edx
  4271de:	inc    eax
  4271df:	add    BYTE PTR [eax],bh
  4271e1:	inc    eax
  4271e2:	inc    eax
  4271e3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4271e7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4271ed:	mov    ebp,0x450f0041
  4271f2:	dec    ecx
  4271f3:	fs inc esi
  4271f5:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x6f46746f
  4271fd:	jne    0x42726d
  4271ff:	fs dec esp
  427201:	jb     0x427245
	...
  42721f:	add    BYTE PTR [eax+0x72],dl
  427222:	inc    edx
  427223:	add    BYTE PTR [eax+eax*1],cl
  427226:	add    BYTE PTR [eax],al
  427228:	dec    esp
  427229:	mov    ecx,0x42d00041
  42722e:	inc    eax
  42722f:	add    ah,bl
  427231:	inc    edx
  427232:	inc    eax
  427233:	add    al,ah
  427235:	inc    edx
  427236:	inc    eax
  427237:	add    ah,ah
  427239:	inc    edx
  42723a:	inc    eax
  42723b:	add    al,bl
  42723d:	inc    edx
  42723e:	inc    eax
  42723f:	add    BYTE PTR [eax],bh
  427241:	inc    eax
  427242:	inc    eax
  427243:	add    BYTE PTR [eax+eax*2+0x40],dl
  427247:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42724d:	mov    ebp,0x450f0041
  427252:	dec    ecx
  427253:	fs dec esi
  427255:	outs   dx,DWORD PTR ds:[esi]
  427256:	je     0x42729b
  427258:	outs   dx,DWORD PTR ds:[esi]
  427259:	outs   dx,BYTE PTR ds:[esi]
  42725a:	outs   dx,BYTE PTR ds:[esi]
  42725b:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  427260:	lods   al,BYTE PTR ds:[esi]
  427261:	jb     0x4272a5
	...
  42727f:	add    BYTE PTR [eax+0xc004272],dh
  427285:	add    BYTE PTR [eax],al
  427287:	add    BYTE PTR [ecx+edi*4+0x41],cl
  42728b:	add    al,dl
  42728d:	inc    edx
  42728e:	inc    eax
  42728f:	add    ah,bl
  427291:	inc    edx
  427292:	inc    eax
  427293:	add    al,ah
  427295:	inc    edx
  427296:	inc    eax
  427297:	add    ah,ah
  427299:	inc    edx
  42729a:	inc    eax
  42729b:	add    al,bl
  42729d:	inc    edx
  42729e:	inc    eax
  42729f:	add    BYTE PTR [eax],bh
  4272a1:	inc    eax
  4272a2:	inc    eax
  4272a3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4272a7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4272ad:	mov    ebp,0x45180041
  4272b2:	dec    ecx
  4272b3:	fs push ebx
  4272b5:	push   ebx
  4272b6:	dec    esp
  4272b7:	push   eax
  4272b8:	jb     0x427329
  4272ba:	je     0x42732b
  4272bc:	arpl   WORD PTR [edi+0x6c],bp
  4272bf:	push   edx
  4272c0:	gs jo  0x42732f
  4272c3:	jns    0x42730a
  4272c5:	jb     0x427339
  4272c7:	outs   dx,DWORD PTR ds:[esi]
  4272c8:	jb     0x427257
  4272ca:	inc    eax
  4272cb:	add    BYTE PTR [eax],bl
  4272cd:	jae    0x427311
	...
  4272eb:	add    BYTE PTR [ebx+esi*2],bl
  4272ee:	inc    edx
  4272ef:	add    BYTE PTR [eax+eax*1],cl
  4272f2:	add    BYTE PTR [eax],al
  4272f4:	dec    esp
  4272f5:	mov    ecx,0x42d00041
  4272fa:	inc    eax
  4272fb:	add    ah,bl
  4272fd:	inc    edx
  4272fe:	inc    eax
  4272ff:	add    al,ah
  427301:	inc    edx
  427302:	inc    eax
  427303:	add    ah,ah
  427305:	inc    edx
  427306:	inc    eax
  427307:	add    al,bl
  427309:	inc    edx
  42730a:	inc    eax
  42730b:	add    BYTE PTR [eax],bh
  42730d:	inc    eax
  42730e:	inc    eax
  42730f:	add    BYTE PTR [eax+eax*2+0x40],dl
  427313:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427319:	mov    ebp,0x45110041
  42731e:	dec    ecx
  42731f:	fs inc ebx
  427321:	outs   dx,DWORD PTR ds:[esi]
  427322:	outs   dx,BYTE PTR ds:[esi]
  427323:	outs   dx,BYTE PTR ds:[esi]
  427324:	arpl   WORD PTR gs:[esp+edx*2+0x69],si
  427329:	ins    DWORD PTR es:[edi],dx
  42732a:	outs   dx,DWORD PTR gs:[esi]
  42732c:	jne    0x4273a2
  42732e:	mov    eax,eax
  427330:	jl     0x4273a5
  427332:	inc    edx
	...
  42734f:	add    BYTE PTR [eax+0xc004273],al
  427355:	add    BYTE PTR [eax],al
  427357:	add    BYTE PTR [ecx+edi*4+0x41],cl
  42735b:	add    al,dl
  42735d:	inc    edx
  42735e:	inc    eax
  42735f:	add    ah,bl
  427361:	inc    edx
  427362:	inc    eax
  427363:	add    al,ah
  427365:	inc    edx
  427366:	inc    eax
  427367:	add    ah,ah
  427369:	inc    edx
  42736a:	inc    eax
  42736b:	add    al,bl
  42736d:	inc    edx
  42736e:	inc    eax
  42736f:	add    BYTE PTR [eax],bh
  427371:	inc    eax
  427372:	inc    eax
  427373:	add    BYTE PTR [eax+eax*2+0x40],dl
  427377:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42737d:	mov    ebp,0x45130041
  427382:	dec    ecx
  427383:	fs inc ebx
  427385:	outs   dx,DWORD PTR ds:[esi]
  427386:	outs   dx,BYTE PTR ds:[esi]
  427387:	outs   dx,BYTE PTR ds:[esi]
  427388:	arpl   WORD PTR gs:[ebp+eax*2+0x78],si
  42738d:	arpl   WORD PTR [ebp+0x70],sp
  427390:	je     0x4273fb
  427392:	outs   dx,DWORD PTR ds:[esi]
  427393:	outs   dx,BYTE PTR ds:[esi]
  427394:	loopne 0x427409
  427396:	inc    edx
	...
  4273b3:	add    ah,ah
  4273b5:	jae    0x4273f9
  4273b7:	add    BYTE PTR [eax+eax*1],cl
  4273ba:	add    BYTE PTR [eax],al
  4273bc:	dec    esp
  4273bd:	mov    ecx,0x42d00041
  4273c2:	inc    eax
  4273c3:	add    ah,bl
  4273c5:	inc    edx
  4273c6:	inc    eax
  4273c7:	add    al,ah
  4273c9:	inc    edx
  4273ca:	inc    eax
  4273cb:	add    ah,ah
  4273cd:	inc    edx
  4273ce:	inc    eax
  4273cf:	add    al,bl
  4273d1:	inc    edx
  4273d2:	inc    eax
  4273d3:	add    BYTE PTR [eax],bh
  4273d5:	inc    eax
  4273d6:	inc    eax
  4273d7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4273db:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4273e1:	mov    ebp,0x451b0041
  4273e6:	dec    ecx
  4273e7:	fs push esp
  4273e9:	jb     0x42744c
  4273eb:	outs   dx,BYTE PTR ds:[esi]
  4273ec:	jae    0x42745e
  4273ee:	popa   
  4273ef:	jb     0x427456
  4273f1:	outs   dx,BYTE PTR ds:[esi]
  4273f2:	je     0x427444
  4273f4:	jb     0x427465
  4273f6:	js     0x427471
  4273f8:	inc    ebx
  4273f9:	popa   
  4273fa:	outs   dx,BYTE PTR ds:[esi]
  4273fb:	je     0x42743f
  4273fd:	imul   ebp,DWORD PTR [esi+0x64],0x42744c
	...
  427420:	push   eax
  427421:	je     0x427465
  427423:	add    BYTE PTR [eax+eax*1],cl
  427426:	add    BYTE PTR [eax],al
  427428:	dec    esp
  427429:	mov    ecx,0x42d00041
  42742e:	inc    eax
  42742f:	add    ah,bl
  427431:	inc    edx
  427432:	inc    eax
  427433:	add    al,ah
  427435:	inc    edx
  427436:	inc    eax
  427437:	add    ah,ah
  427439:	inc    edx
  42743a:	inc    eax
  42743b:	add    al,bl
  42743d:	inc    edx
  42743e:	inc    eax
  42743f:	add    BYTE PTR [eax],bh
  427441:	inc    eax
  427442:	inc    eax
  427443:	add    BYTE PTR [eax+eax*2+0x40],dl
  427447:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42744d:	mov    ebp,0x450d0041
  427452:	dec    ecx
  427453:	fs push ebx
  427455:	outs   dx,DWORD PTR ds:[esi]
  427456:	arpl   WORD PTR [ebx+0x73],bp
  427459:	inc    ebp
  42745a:	jb     0x4274ce
  42745c:	outs   dx,DWORD PTR ds:[esi]
  42745d:	jb     0x4273ea
  42745f:	shr    BYTE PTR [esp+esi*2+0x42],0x0
	...
  42747f:	add    BYTE PTR [eax+0xc004274],dh
  427485:	add    BYTE PTR [eax],al
  427487:	add    BYTE PTR [eax],al
  427489:	je     0x4274cd
  42748b:	add    al,dl
  42748d:	inc    edx
  42748e:	inc    eax
  42748f:	add    ah,bl
  427491:	inc    edx
  427492:	inc    eax
  427493:	add    al,ah
  427495:	inc    edx
  427496:	inc    eax
  427497:	add    ah,ah
  427499:	inc    edx
  42749a:	inc    eax
  42749b:	add    al,bl
  42749d:	inc    edx
  42749e:	inc    eax
  42749f:	add    BYTE PTR [eax],bh
  4274a1:	inc    eax
  4274a2:	inc    eax
  4274a3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4274a7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4274ad:	mov    ebp,0x45150041
  4274b2:	dec    ecx
  4274b3:	fs push ebx
  4274b5:	outs   dx,DWORD PTR ds:[esi]
  4274b6:	arpl   WORD PTR [ebx+0x73],bp
  4274b9:	push   edx
  4274ba:	gs jno 0x427532
  4274bd:	gs jae 0x427534
  4274c0:	inc    esi
  4274c1:	popa   
  4274c2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7514c08b
  4274ca:	inc    edx
	...
  4274e7:	add    BYTE PTR [eax],bl
  4274e9:	jne    0x42752d
  4274eb:	add    BYTE PTR [eax+eax*1],cl
  4274ee:	add    BYTE PTR [eax],al
  4274f0:	add    BYTE PTR [edx+eax*2+0x0],dh
  4274f4:	rol    BYTE PTR [edx+0x40],1
  4274f7:	add    ah,bl
  4274f9:	inc    edx
  4274fa:	inc    eax
  4274fb:	add    al,ah
  4274fd:	inc    edx
  4274fe:	inc    eax
  4274ff:	add    ah,ah
  427501:	inc    edx
  427502:	inc    eax
  427503:	add    al,bl
  427505:	inc    edx
  427506:	inc    eax
  427507:	add    BYTE PTR [eax],bh
  427509:	inc    eax
  42750a:	inc    eax
  42750b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42750f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427515:	mov    ebp,0x451b0041
  42751a:	dec    ecx
  42751b:	fs push ebx
  42751d:	outs   dx,DWORD PTR ds:[esi]
  42751e:	arpl   WORD PTR [ebx+0x73],bp
  427521:	push   edx
  427522:	gs jno 0x42759a
  427525:	gs jae 0x42759c
  427528:	push   ebx
  427529:	gs jb  0x4275a2
  42752c:	gs jb  0x427575
  42752f:	popa   
  427530:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x427580
	...
  427554:	test   BYTE PTR [ebp+0x42],dh
  427557:	add    BYTE PTR [eax+eax*1],cl
  42755a:	add    BYTE PTR [eax],al
  42755c:	add    BYTE PTR [edx+eax*2+0x0],dh
  427560:	rol    BYTE PTR [edx+0x40],1
  427563:	add    ah,bl
  427565:	inc    edx
  427566:	inc    eax
  427567:	add    al,ah
  427569:	inc    edx
  42756a:	inc    eax
  42756b:	add    ah,ah
  42756d:	inc    edx
  42756e:	inc    eax
  42756f:	add    al,bl
  427571:	inc    edx
  427572:	inc    eax
  427573:	add    BYTE PTR [eax],bh
  427575:	inc    eax
  427576:	inc    eax
  427577:	add    BYTE PTR [eax+eax*2+0x40],dl
  42757b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427581:	mov    ebp,0x451a0041
  427586:	dec    ecx
  427587:	fs push ebx
  427589:	outs   dx,DWORD PTR ds:[esi]
  42758a:	arpl   WORD PTR [ebx+0x73],bp
  42758d:	push   edx
  42758e:	gs jno 0x427606
  427591:	gs jae 0x427608
  427594:	dec    ecx
  427595:	fs outs dx,BYTE PTR gs:[esi]
  427598:	je     0x4275e0
  42759a:	popa   
  42759b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x4275ec90
	...
  4275bf:	add    al,dh
  4275c1:	jne    0x427605
  4275c3:	add    BYTE PTR [eax+eax*1],cl
  4275c6:	add    BYTE PTR [eax],al
  4275c8:	add    BYTE PTR [edx+eax*2+0x0],dh
  4275cc:	rol    BYTE PTR [edx+0x40],1
  4275cf:	add    ah,bl
  4275d1:	inc    edx
  4275d2:	inc    eax
  4275d3:	add    al,ah
  4275d5:	inc    edx
  4275d6:	inc    eax
  4275d7:	add    ah,ah
  4275d9:	inc    edx
  4275da:	inc    eax
  4275db:	add    al,bl
  4275dd:	inc    edx
  4275de:	inc    eax
  4275df:	add    BYTE PTR [eax],bh
  4275e1:	inc    eax
  4275e2:	inc    eax
  4275e3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4275e7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4275ed:	mov    ebp,0x45140041
  4275f2:	dec    ecx
  4275f3:	fs push ebx
  4275f5:	outs   dx,DWORD PTR ds:[esi]
  4275f6:	arpl   WORD PTR [ebx+0x73],bp
  4275f9:	push   ebp
  4275fa:	outs   dx,BYTE PTR ds:[esi]
  4275fb:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  4275ff:	outs   dx,BYTE PTR ds:[esi]
  427600:	inc    ebp
  427601:	jb     0x427675
  427603:	outs   dx,DWORD PTR ds:[esi]
  427604:	jb     0x427593
  427606:	inc    eax
  427607:	add    BYTE PTR [esi+esi*2+0x42],dl
	...
  427627:	add    BYTE PTR [eax+0x76],bl
  42762a:	inc    edx
  42762b:	add    BYTE PTR [eax+eax*1],cl
  42762e:	add    BYTE PTR [eax],al
  427630:	add    BYTE PTR [edx+eax*2+0x0],dh
  427634:	rol    BYTE PTR [edx+0x40],1
  427637:	add    ah,bl
  427639:	inc    edx
  42763a:	inc    eax
  42763b:	add    al,ah
  42763d:	inc    edx
  42763e:	inc    eax
  42763f:	add    ah,ah
  427641:	inc    edx
  427642:	inc    eax
  427643:	add    al,bl
  427645:	inc    edx
  427646:	inc    eax
  427647:	add    BYTE PTR [eax],bh
  427649:	inc    eax
  42764a:	inc    eax
  42764b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42764f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427655:	mov    ebp,0x451a0041
  42765a:	dec    ecx
  42765b:	fs push ebx
  42765d:	outs   dx,DWORD PTR ds:[esi]
  42765e:	arpl   WORD PTR [ebx+0x73],bp
  427661:	push   ebx
  427662:	gs jb  0x4276db
  427665:	gs jb  0x4276ba
  427668:	gs jae 0x4276db
  42766b:	outs   dx,DWORD PTR ds:[esi]
  42766c:	outs   dx,BYTE PTR ds:[esi]
  42766d:	fs inc ebp
  42766f:	jb     0x4276e3
  427671:	outs   dx,DWORD PTR ds:[esi]
  427672:	jb     0x427604
  427674:	shl    BYTE PTR [esi+0x42],0x0
	...
  427694:	les    esi,FWORD PTR [esi+0x42]
  427697:	add    BYTE PTR [eax+eax*1],cl
  42769a:	add    BYTE PTR [eax],al
  42769c:	add    BYTE PTR [edx+eax*2+0x0],dh
  4276a0:	rol    BYTE PTR [edx+0x40],1
  4276a3:	add    ah,bl
  4276a5:	inc    edx
  4276a6:	inc    eax
  4276a7:	add    al,ah
  4276a9:	inc    edx
  4276aa:	inc    eax
  4276ab:	add    ah,ah
  4276ad:	inc    edx
  4276ae:	inc    eax
  4276af:	add    al,bl
  4276b1:	inc    edx
  4276b2:	inc    eax
  4276b3:	add    BYTE PTR [eax],bh
  4276b5:	inc    eax
  4276b6:	inc    eax
  4276b7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4276bb:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4276c1:	mov    ebp,0x45170041
  4276c6:	dec    ecx
  4276c7:	fs push ebx
  4276c9:	outs   dx,DWORD PTR ds:[esi]
  4276ca:	arpl   WORD PTR [ebx+0x73],bp
  4276cd:	inc    ecx
  4276ce:	jne    0x427744
  4276d0:	push   0x6874654d
  4276d5:	outs   dx,DWORD PTR ds:[esi]
  4276d6:	fs inc ebp
  4276d8:	jb     0x42774c
  4276da:	outs   dx,DWORD PTR ds:[esi]
  4276db:	jb     0x427705
  4276dd:	ja     0x427721
	...
  4276fb:	add    BYTE PTR [edi+esi*2],ch
  4276fe:	inc    edx
  4276ff:	add    BYTE PTR [eax+eax*1],cl
  427702:	add    BYTE PTR [eax],al
  427704:	add    BYTE PTR [edx+eax*2+0x0],dh
  427708:	rol    BYTE PTR [edx+0x40],1
  42770b:	add    ah,bl
  42770d:	inc    edx
  42770e:	inc    eax
  42770f:	add    al,ah
  427711:	inc    edx
  427712:	inc    eax
  427713:	add    ah,ah
  427715:	inc    edx
  427716:	inc    eax
  427717:	add    al,bl
  427719:	inc    edx
  42771a:	inc    eax
  42771b:	add    BYTE PTR [eax],bh
  42771d:	inc    eax
  42771e:	inc    eax
  42771f:	add    BYTE PTR [eax+eax*2+0x40],dl
  427723:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427729:	mov    ebp,0x45110041
  42772e:	dec    ecx
  42772f:	fs push ebx
  427731:	outs   dx,DWORD PTR ds:[esi]
  427732:	arpl   WORD PTR [ebx+0x73],bp
  427735:	inc    ecx
  427736:	jne    0x4277ac
  427738:	push   0x6f727245
  42773d:	jb     0x4276ca
  42773f:	ror    BYTE PTR [edi+esi*2+0x42],0x0
	...
  42775f:	add    BYTE PTR [eax+0xc004277],dl
  427765:	add    BYTE PTR [eax],al
  427767:	add    BYTE PTR [eax],al
  427769:	je     0x4277ad
  42776b:	add    al,dl
  42776d:	inc    edx
  42776e:	inc    eax
  42776f:	add    ah,bl
  427771:	inc    edx
  427772:	inc    eax
  427773:	add    al,ah
  427775:	inc    edx
  427776:	inc    eax
  427777:	add    ah,ah
  427779:	inc    edx
  42777a:	inc    eax
  42777b:	add    al,bl
  42777d:	inc    edx
  42777e:	inc    eax
  42777f:	add    BYTE PTR [eax],bh
  427781:	inc    eax
  427782:	inc    eax
  427783:	add    BYTE PTR [eax+eax*2+0x40],dl
  427787:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42778d:	mov    ebp,0x451a0041
  427792:	dec    ecx
  427793:	fs push ebx
  427795:	outs   dx,DWORD PTR ds:[esi]
  427796:	arpl   WORD PTR [ebx+0x73],bp
  427799:	push   ebx
  42779a:	gs jb  0x427813
  42779d:	gs jb  0x4277e7
  4277a0:	outs   dx,BYTE PTR gs:[esi]
  4277a2:	gs jb  0x427806
  4277a5:	ins    BYTE PTR es:[edi],dx
  4277a6:	inc    ebp
  4277a7:	jb     0x42781b
  4277a9:	outs   dx,DWORD PTR ds:[esi]
  4277aa:	jb     0x42773c
  4277ac:	clc    
  4277ad:	ja     0x4277f1
	...
  4277cb:	add    ah,bh
  4277cd:	ja     0x427811
  4277cf:	add    BYTE PTR [eax+eax*1],cl
  4277d2:	add    BYTE PTR [eax],al
  4277d4:	add    BYTE PTR [edx+eax*2+0x0],dh
  4277d8:	rol    BYTE PTR [edx+0x40],1
  4277db:	add    ah,bl
  4277dd:	inc    edx
  4277de:	inc    eax
  4277df:	add    al,ah
  4277e1:	inc    edx
  4277e2:	inc    eax
  4277e3:	add    ah,ah
  4277e5:	inc    edx
  4277e6:	inc    eax
  4277e7:	add    al,bl
  4277e9:	inc    edx
  4277ea:	inc    eax
  4277eb:	add    BYTE PTR [eax],bh
  4277ed:	inc    eax
  4277ee:	inc    eax
  4277ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  4277f3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4277f9:	mov    ebp,0x451d0041
  4277fe:	dec    ecx
  4277ff:	fs push ebx
  427801:	outs   dx,DWORD PTR ds:[esi]
  427802:	arpl   WORD PTR [ebx+0x73],bp
  427805:	push   ebx
  427806:	gs jb  0x42787f
  427809:	gs jb  0x42785c
  42780c:	gs jb  0x42787c
  42780f:	imul   esi,DWORD PTR [ebx+0x73],0x456e6f69
  427816:	jb     0x42788a
  427818:	outs   dx,DWORD PTR ds:[esi]
  427819:	jb     0x4277a6
  42781b:	shr    BYTE PTR [eax+0x78],0x42
	...
  42783b:	add    BYTE PTR [eax+edi*2+0x42],ch
  42783f:	add    BYTE PTR [eax+eax*1],cl
  427842:	add    BYTE PTR [eax],al
  427844:	add    BYTE PTR [edx+eax*2+0x0],dh
  427848:	rol    BYTE PTR [edx+0x40],1
  42784b:	add    ah,bl
  42784d:	inc    edx
  42784e:	inc    eax
  42784f:	add    al,ah
  427851:	inc    edx
  427852:	inc    eax
  427853:	add    ah,ah
  427855:	inc    edx
  427856:	inc    eax
  427857:	add    al,bl
  427859:	inc    edx
  42785a:	inc    eax
  42785b:	add    BYTE PTR [eax],bh
  42785d:	inc    eax
  42785e:	inc    eax
  42785f:	add    BYTE PTR [eax+eax*2+0x40],dl
  427863:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427869:	mov    ebp,0x45210041
  42786e:	dec    ecx
  42786f:	fs push ebx
  427871:	outs   dx,DWORD PTR ds:[esi]
  427872:	arpl   WORD PTR [ebx+0x73],bp
  427875:	push   ebx
  427876:	gs jb  0x4278ef
  427879:	gs jb  0x4278ca
  42787c:	gs je  0x4278d4
  42787f:	outs   dx,BYTE PTR ds:[esi]
  427880:	jb     0x4278e7
  427882:	popa   
  427883:	arpl   WORD PTR [eax+0x61],bp
  427886:	bound  ebp,QWORD PTR [ebp+eiz*2+0x45]
  42788a:	jb     0x4278fe
  42788c:	outs   dx,DWORD PTR ds:[esi]
  42788d:	jb     0x42781a
  42788f:	rcr    ah,0x78
  427892:	inc    edx
	...
  4278af:	add    al,ah
  4278b1:	js     0x4278f5
  4278b3:	add    BYTE PTR [eax+eax*1],cl
  4278b6:	add    BYTE PTR [eax],al
  4278b8:	add    BYTE PTR [edx+eax*2+0x0],dh
  4278bc:	rol    BYTE PTR [edx+0x40],1
  4278bf:	add    ah,bl
  4278c1:	inc    edx
  4278c2:	inc    eax
  4278c3:	add    al,ah
  4278c5:	inc    edx
  4278c6:	inc    eax
  4278c7:	add    ah,ah
  4278c9:	inc    edx
  4278ca:	inc    eax
  4278cb:	add    al,bl
  4278cd:	inc    edx
  4278ce:	inc    eax
  4278cf:	add    BYTE PTR [eax],bh
  4278d1:	inc    eax
  4278d2:	inc    eax
  4278d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4278d7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4278dd:	mov    ebp,0x45220041
  4278e2:	dec    ecx
  4278e3:	fs push ebx
  4278e5:	outs   dx,DWORD PTR ds:[esi]
  4278e6:	arpl   WORD PTR [ebx+0x73],bp
  4278e9:	push   ebx
  4278ea:	gs jb  0x427963
  4278ed:	gs jb  0x427938
  4278f0:	outs   dx,DWORD PTR ds:[esi]
  4278f1:	jae    0x427967
  4278f3:	push   ebp
  4278f4:	outs   dx,BYTE PTR ds:[esi]
  4278f5:	jb     0x42795c
  4278f7:	popa   
  4278f8:	arpl   WORD PTR [eax+0x61],bp
  4278fb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x45]
  4278ff:	jb     0x427973
  427901:	outs   dx,DWORD PTR ds:[esi]
  427902:	jb     0x427894
  427904:	push   eax
  427905:	jns    0x427949
	...
  427923:	add    BYTE PTR [ecx+edi*2+0x42],dl
  427927:	add    BYTE PTR [eax+eax*1],cl
  42792a:	add    BYTE PTR [eax],al
  42792c:	add    BYTE PTR [edx+eax*2+0x0],dh
  427930:	rol    BYTE PTR [edx+0x40],1
  427933:	add    ah,bl
  427935:	inc    edx
  427936:	inc    eax
  427937:	add    al,ah
  427939:	inc    edx
  42793a:	inc    eax
  42793b:	add    ah,ah
  42793d:	inc    edx
  42793e:	inc    eax
  42793f:	add    al,bl
  427941:	inc    edx
  427942:	inc    eax
  427943:	add    BYTE PTR [eax],bh
  427945:	inc    eax
  427946:	inc    eax
  427947:	add    BYTE PTR [eax+eax*2+0x40],dl
  42794b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427951:	mov    ebp,0x45240041
  427956:	dec    ecx
  427957:	fs push ebx
  427959:	outs   dx,DWORD PTR ds:[esi]
  42795a:	arpl   WORD PTR [ebx+0x73],bp
  42795d:	push   ebx
  42795e:	gs jb  0x4279d7
  427961:	gs jb  0x4279a7
  427964:	outs   dx,DWORD PTR ds:[esi]
  427965:	outs   dx,BYTE PTR ds:[esi]
  427966:	outs   dx,BYTE PTR ds:[esi]
  427967:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42796c:	outs   dx,BYTE PTR ds:[esi]
  42796d:	push   edx
  42796e:	gs data16 jne 0x4279e5
  427972:	gs fs inc ebp
  427975:	jb     0x4279e9
  427977:	outs   dx,DWORD PTR ds:[esi]
  427978:	jb     0x427907
  42797a:	inc    eax
  42797b:	add    al,cl
  42797d:	jns    0x4279c1
	...
  42799b:	add    ah,cl
  42799d:	jns    0x4279e1
  42799f:	add    BYTE PTR [eax+eax*1],cl
  4279a2:	add    BYTE PTR [eax],al
  4279a4:	add    BYTE PTR [edx+eax*2+0x0],dh
  4279a8:	rol    BYTE PTR [edx+0x40],1
  4279ab:	add    ah,bl
  4279ad:	inc    edx
  4279ae:	inc    eax
  4279af:	add    al,ah
  4279b1:	inc    edx
  4279b2:	inc    eax
  4279b3:	add    ah,ah
  4279b5:	inc    edx
  4279b6:	inc    eax
  4279b7:	add    al,bl
  4279b9:	inc    edx
  4279ba:	inc    eax
  4279bb:	add    BYTE PTR [eax],bh
  4279bd:	inc    eax
  4279be:	inc    eax
  4279bf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4279c3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4279c9:	mov    ebp,0x451d0041
  4279ce:	dec    ecx
  4279cf:	fs push ebx
  4279d1:	outs   dx,DWORD PTR ds:[esi]
  4279d2:	arpl   WORD PTR [ebx+0x73],bp
  4279d5:	push   ebx
  4279d6:	gs jb  0x427a4f
  4279d9:	gs jb  0x427a30
  4279dc:	push   esp
  4279dd:	dec    esp
  4279de:	inc    ebp
  4279df:	js     0x427a51
  4279e1:	imul   esi,DWORD PTR [edx+0x65],0x72724564
  4279e8:	outs   dx,DWORD PTR ds:[esi]
  4279e9:	jb     0x427976
  4279eb:	sar    BYTE PTR [eax],0x7a
  4279ee:	inc    edx
	...
  427a0b:	add    BYTE PTR [edx+edi*2],bh
  427a0e:	inc    edx
  427a0f:	add    BYTE PTR [eax+eax*1],cl
  427a12:	add    BYTE PTR [eax],al
  427a14:	add    BYTE PTR [edx+eax*2+0x0],dh
  427a18:	rol    BYTE PTR [edx+0x40],1
  427a1b:	add    ah,bl
  427a1d:	inc    edx
  427a1e:	inc    eax
  427a1f:	add    al,ah
  427a21:	inc    edx
  427a22:	inc    eax
  427a23:	add    ah,ah
  427a25:	inc    edx
  427a26:	inc    eax
  427a27:	add    al,bl
  427a29:	inc    edx
  427a2a:	inc    eax
  427a2b:	add    BYTE PTR [eax],bh
  427a2d:	inc    eax
  427a2e:	inc    eax
  427a2f:	add    BYTE PTR [eax+eax*2+0x40],dl
  427a33:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427a39:	mov    ebp,0x451a0041
  427a3e:	dec    ecx
  427a3f:	fs push ebx
  427a41:	outs   dx,DWORD PTR ds:[esi]
  427a42:	arpl   WORD PTR [ebx+0x73],bp
  427a45:	push   ebx
  427a46:	gs jb  0x427abf
  427a49:	gs jb  0x427a8f
  427a4c:	outs   dx,DWORD PTR ds:[esi]
  427a4d:	ins    DWORD PTR es:[edi],dx
  427a4e:	ins    DWORD PTR es:[edi],dx
  427a4f:	popa   
  427a50:	outs   dx,BYTE PTR ds:[esi]
  427a51:	fs inc ebp
  427a53:	jb     0x427ac7
  427a55:	outs   dx,DWORD PTR ds:[esi]
  427a56:	jb     0x4279e8
  427a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a59:	jp     0x427a9d
	...
  427a77:	add    BYTE PTR [eax+0xc00427a],ch
  427a7d:	add    BYTE PTR [eax],al
  427a7f:	add    BYTE PTR [eax],al
  427a81:	je     0x427ac5
  427a83:	add    al,dl
  427a85:	inc    edx
  427a86:	inc    eax
  427a87:	add    ah,bl
  427a89:	inc    edx
  427a8a:	inc    eax
  427a8b:	add    al,ah
  427a8d:	inc    edx
  427a8e:	inc    eax
  427a8f:	add    ah,ah
  427a91:	inc    edx
  427a92:	inc    eax
  427a93:	add    al,bl
  427a95:	inc    edx
  427a96:	inc    eax
  427a97:	add    BYTE PTR [eax],bh
  427a99:	inc    eax
  427a9a:	inc    eax
  427a9b:	add    BYTE PTR [eax+eax*2+0x40],dl
  427a9f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427aa5:	mov    ebp,0x451a0041
  427aaa:	dec    ecx
  427aab:	fs push ebx
  427aad:	outs   dx,DWORD PTR ds:[esi]
  427aae:	arpl   WORD PTR [ebx+0x73],bp
  427ab1:	push   ebx
  427ab2:	gs jb  0x427b2b
  427ab5:	gs jb  0x427af9
  427ab8:	fs fs jb 0x427b21
  427abc:	jae    0x427b31
  427abe:	inc    ebp
  427abf:	jb     0x427b33
  427ac1:	outs   dx,DWORD PTR ds:[esi]
  427ac2:	jb     0x427a54
  427ac4:	adc    BYTE PTR [ebx+0x42],bh
	...
  427ae3:	add    BYTE PTR [ebx+edi*2],dl
  427ae6:	inc    edx
  427ae7:	add    BYTE PTR [eax+eax*1],cl
  427aea:	add    BYTE PTR [eax],al
  427aec:	dec    esp
  427aed:	mov    ecx,0x42d00041
  427af2:	inc    eax
  427af3:	add    ah,bl
  427af5:	inc    edx
  427af6:	inc    eax
  427af7:	add    al,ah
  427af9:	inc    edx
  427afa:	inc    eax
  427afb:	add    ah,ah
  427afd:	inc    edx
  427afe:	inc    eax
  427aff:	add    al,bl
  427b01:	inc    edx
  427b02:	inc    eax
  427b03:	add    BYTE PTR [eax],bh
  427b05:	inc    eax
  427b06:	inc    eax
  427b07:	add    BYTE PTR [eax+eax*2+0x40],dl
  427b0b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427b11:	mov    ebp,0x45190041
  427b16:	dec    ecx
  427b17:	fs dec ebp
  427b19:	popa   
  427b1a:	js     0x427b5f
  427b1c:	popa   
  427b1d:	jo     0x427b93
  427b1f:	jne    0x427b93
  427b21:	gs dec esp
  427b23:	imul   ebp,DWORD PTR [esi+0x65],0x65637845
  427b2a:	gs fs gs fs mov eax,eax
  427b30:	jl     0x427bad
  427b32:	inc    edx
	...
  427b4f:	add    BYTE PTR [eax+0xc00427b],al
  427b55:	add    BYTE PTR [eax],al
  427b57:	add    BYTE PTR [ecx+edi*4+0x41],cl
  427b5b:	add    al,dl
  427b5d:	inc    edx
  427b5e:	inc    eax
  427b5f:	add    ah,bl
  427b61:	inc    edx
  427b62:	inc    eax
  427b63:	add    al,ah
  427b65:	inc    edx
  427b66:	inc    eax
  427b67:	add    ah,ah
  427b69:	inc    edx
  427b6a:	inc    eax
  427b6b:	add    al,bl
  427b6d:	inc    edx
  427b6e:	inc    eax
  427b6f:	add    BYTE PTR [eax],bh
  427b71:	inc    eax
  427b72:	inc    eax
  427b73:	add    BYTE PTR [eax+eax*2+0x40],dl
  427b77:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427b7d:	mov    ebp,0x450c0041
  427b82:	dec    ecx
  427b83:	fs dec ecx
  427b85:	outs   dx,DWORD PTR ds:[esi]
  427b86:	dec    eax
  427b87:	popa   
  427b88:	outs   dx,BYTE PTR ds:[esi]
  427b89:	fs ins BYTE PTR es:[edi],dx
  427b8b:	gs jb  0x427b1b
  427b8e:	inc    eax
  427b8f:	add    ah,bl
  427b91:	jnp    0x427bd5
	...
  427baf:	add    al,ah
  427bb1:	jnp    0x427bf5
  427bb3:	add    BYTE PTR [eax+eax*1],cl
  427bb6:	add    BYTE PTR [eax],al
  427bb8:	xor    BYTE PTR [ebx+0x42],bh
  427bbb:	add    al,dl
  427bbd:	inc    edx
  427bbe:	inc    eax
  427bbf:	add    ah,bl
  427bc1:	inc    edx
  427bc2:	inc    eax
  427bc3:	add    al,ah
  427bc5:	inc    edx
  427bc6:	inc    eax
  427bc7:	add    ah,ah
  427bc9:	inc    edx
  427bca:	inc    eax
  427bcb:	add    al,bl
  427bcd:	inc    edx
  427bce:	inc    eax
  427bcf:	add    BYTE PTR [eax],bh
  427bd1:	inc    eax
  427bd2:	inc    eax
  427bd3:	add    BYTE PTR [eax+eax*2+0x40],dl
  427bd7:	add    BYTE PTR [eax-0x43ffbfc0],dl
  427bdd:	mov    ebp,0x451f0041
  427be2:	dec    ecx
  427be3:	fs dec ecx
  427be5:	outs   dx,DWORD PTR ds:[esi]
  427be6:	dec    eax
  427be7:	popa   
  427be8:	outs   dx,BYTE PTR ds:[esi]
  427be9:	fs ins BYTE PTR es:[edi],dx
  427beb:	gs jb  0x427c40
  427bee:	gs jno 0x427c66
  427bf1:	imul   esi,DWORD PTR [edx+0x65],0x72614c73
  427bf8:	addr16 gs push ebx
  427bfb:	je     0x427c6f
  427bfd:	gs popa 
  427bff:	ins    DWORD PTR es:[edi],dx
  427c00:	dec    esp
  427c01:	jl     0x427c45
	...
  427c0b:	add    BYTE PTR [eax],dl
  427c0d:	jge    0x427c51
  427c0f:	add    BYTE PTR [edi*2+0x42],bh
	...
  427c1e:	add    BYTE PTR [eax],al
  427c20:	sub    bh,BYTE PTR [ebp+0x42]
  427c23:	add    al,dl
  427c25:	add    BYTE PTR [eax],al
  427c27:	add    al,bl
  427c29:	dec    ebx
  427c2a:	inc    edx
  427c2b:	add    BYTE PTR [eax],bl
  427c2d:	test   eax,0x42dc0041
  427c32:	inc    eax
  427c33:	add    BYTE PTR [eax-0x1bffbe5e],ch
  427c39:	inc    edx
  427c3a:	inc    eax
  427c3b:	add    al,bl
  427c3d:	inc    edx
  427c3e:	inc    eax
  427c3f:	add    BYTE PTR [eax],bh
  427c41:	inc    eax
  427c42:	inc    eax
  427c43:	add    BYTE PTR [eax+eax*2+0x40],dl
  427c47:	add    BYTE PTR [eax+0x6800427e],ch
  427c4d:	inc    ecx
  427c4e:	inc    ecx
  427c4f:	add    BYTE PTR [eax-0x5b],dh
  427c52:	inc    ecx
  427c53:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  427c5a:	inc    ecx
  427c5b:	add    BYTE PTR [edi+edi*2+0x42],ch
  427c5f:	add    BYTE PTR [eax-0x5a],bl
  427c62:	inc    ecx
  427c63:	add    BYTE PTR [eax-0x59],dl
  427c66:	inc    ecx
  427c67:	add    BYTE PTR [eax],dh
  427c69:	test   eax,0xa6680041
  427c6e:	inc    ecx
  427c6f:	add    BYTE PTR [eax-0x5a],ah
  427c72:	inc    ecx
  427c73:	add    BYTE PTR [eax],bh
  427c75:	test   eax,0x46bc0041
  427c7a:	inc    edx
  427c7b:	add    BYTE PTR [edi+edx*4],ch
  427c7e:	inc    edx
  427c7f:	add    ah,al
  427c81:	dec    ebp
  427c82:	inc    edx
  427c83:	add    BYTE PTR [esi+ecx*2+0x42],dl
  427c87:	add    ah,cl
  427c89:	dec    esi
  427c8a:	inc    edx
  427c8b:	add    BYTE PTR [eax+eax*4],cl
  427c8e:	inc    edx
  427c8f:	add    BYTE PTR [eax-0x6f],bl
  427c92:	inc    edx
  427c93:	add    BYTE PTR [eax+eax*4],ah
  427c96:	inc    edx
  427c97:	add    ah,dl
  427c99:	mov    eax,DWORD PTR [edx+0x0]
  427c9c:	in     al,dx
  427c9d:	mov    eax,DWORD PTR [edx+0x0]
  427ca0:	pushf  
  427ca1:	jg     0x427ce5
  427ca3:	add    BYTE PTR [eax],bh
  427ca5:	xor    eax,DWORD PTR [eax+0x0]
  427ca8:	add    al,0x7f
  427caa:	inc    edx
  427cab:	add    ah,dh
  427cad:	mov    eax,DWORD PTR [edx+0x0]
  427cb0:	cmp    BYTE PTR [ebx],dh
  427cb2:	inc    eax
  427cb3:	add    BYTE PTR [eax],bh
  427cb5:	xor    eax,DWORD PTR [eax+0x0]
  427cb8:	mov    WORD PTR [esi+0x42],?
  427cbb:	add    BYTE PTR [edi+edx*4],ah
  427cbe:	inc    edx
  427cbf:	add    BYTE PTR [eax-0x73ffbd6b],dl
  427cc5:	xchg   edi,eax
  427cc6:	inc    edx
  427cc7:	add    BYTE PTR [eax],cl
  427cc9:	jg     0x427d0d
  427ccb:	add    al,dl
  427ccd:	mov    eax,DWORD PTR [edx+0x0]
  427cd0:	add    DWORD PTR fs:[edx+0x0],0x428b6c
  427cd8:	clc    
  427cd9:	add    BYTE PTR [edx+0x0],0x20
  427cdd:	mov    BYTE PTR [edx+0x0],al
  427ce0:	sub    BYTE PTR [esi-0x6f7fffbe],dl
  427ce6:	inc    edx
  427ce7:	add    BYTE PTR [eax],dh
  427ce9:	xchg   ebx,eax
  427cea:	inc    edx
  427ceb:	add    BYTE PTR [eax-0x76],ch
  427cee:	inc    edx
  427cef:	add    BYTE PTR [eax-0x7b],dl
  427cf2:	inc    edx
  427cf3:	add    BYTE PTR [eax+0x7c004287],bl
  427cf9:	mov    WORD PTR [edx+0x0],es
  427cfc:	dec    eax
  427cfd:	add    DWORD PTR [edx+0x0],0x428134
  427d04:	test   BYTE PTR [eax-0x7f33ffbe],al
  427d0a:	inc    edx
  427d0b:	add    BYTE PTR [eax-0x80],dl
  427d0e:	inc    edx
  427d0f:	add    BYTE PTR [esi],cl
  427d11:	add    BYTE PTR [eax],al
  427d13:	add    BYTE PTR [eax],al
  427d15:	add    BYTE PTR [edx],al
  427d17:	add    BYTE PTR [eax],al
  427d19:	add    BYTE PTR [eax+edx*1+0x900040],al
  427d20:	add    BYTE PTR [eax],al
  427d22:	test   BYTE PTR [eax],dl
  427d24:	inc    eax
  427d25:	add    BYTE PTR [eax+eax*1+0x540c0000],dl
  427d2c:	dec    ecx
  427d2d:	fs dec ecx
  427d2f:	dec    edi
  427d30:	dec    eax
  427d31:	popa   
  427d32:	outs   dx,BYTE PTR ds:[esi]
  427d33:	fs ins BYTE PTR es:[edi],dx
  427d35:	gs jb  0x427cc8
  427d38:	cmp    al,0x7d
  427d3a:	inc    edx
  427d3b:	add    BYTE PTR [edi],al
  427d3d:	or     al,0x54
  427d3f:	dec    ecx
  427d40:	fs dec ecx
  427d42:	dec    edi
  427d43:	dec    eax
  427d44:	popa   
  427d45:	outs   dx,BYTE PTR ds:[esi]
  427d46:	fs ins BYTE PTR es:[edi],dx
  427d48:	gs jb  0x427d97
  427d4b:	jl     0x427d8f
  427d4d:	add    BYTE PTR [esp+ecx*2+0x42],dh
  427d51:	add    BYTE PTR [ebx],cl
  427d53:	add    BYTE PTR [ebx],cl
  427d55:	dec    ecx
  427d56:	fs dec ecx
  427d58:	dec    edi
  427d59:	dec    eax
  427d5a:	popa   
  427d5b:	outs   dx,BYTE PTR ds:[esi]
  427d5c:	fs ins BYTE PTR es:[edi],dx
  427d5e:	gs jb  0x427d69
  427d61:	add    BYTE PTR [eax+edx*1+0x400040],al
  427d68:	add    dh,bh
  427d6a:	dec    eax
  427d6b:	add    BYTE PTR [eax],al
  427d6d:	inc    BYTE PTR [ecx]
  427d6f:	add    BYTE PTR [eax],al
  427d71:	add    BYTE PTR [eax],al
  427d73:	add    BYTE PTR [eax],al
  427d75:	add    BYTE PTR [eax],0x0
  427d78:	add    BYTE PTR [eax+0x440b0003],al
  427d7e:	gs jae 0x427df5
  427d81:	imul   ebp,DWORD PTR [esi+0x61],0x6e6f6974
  427d88:	test   BYTE PTR [eax],dl
  427d8a:	inc    eax
  427d8b:	add    BYTE PTR [eax+eax*1+0x4cff00],dl
  427d92:	add    dh,bh
  427d94:	add    DWORD PTR [eax],eax
  427d96:	add    BYTE PTR [eax],al
  427d98:	add    BYTE PTR [eax],al
  427d9a:	add    BYTE PTR [eax-0x80000000],al
  427da0:	add    al,0x0
  427da2:	add    al,0x48
  427da4:	outs   dx,DWORD PTR ds:[esi]
  427da5:	jae    0x427e1b
  427da7:	sbb    BYTE PTR [ebx+0x42],ch
  427daa:	add    BYTE PTR [eax+eax*1+0x54ff00],bl
  427db1:	add    dh,bh
  427db3:	add    DWORD PTR [eax],eax
  427db5:	add    BYTE PTR [eax],al
  427db7:	add    BYTE PTR [eax],al
  427db9:	add    BYTE PTR [eax-0x80000000],al
  427dbf:	add    eax,0x6e490900
  427dc4:	je     0x427e2b
  427dc6:	jb     0x427e2b
  427dc8:	gs jo  0x427e3f
  427dcb:	cmp    al,0x10
  427dcd:	inc    eax
  427dce:	add    BYTE PTR [eax-0x57010000],ch
  427dd4:	add    BYTE PTR [eax],al
  427dd6:	inc    DWORD PTR [ecx]
  427dd8:	add    BYTE PTR [eax],al
  427dda:	add    BYTE PTR [eax],al
  427ddc:	add    BYTE PTR [eax],al
  427dde:	add    BYTE PTR [eax],0x40
  427de1:	add    BYTE PTR [eax],al
  427de3:	push   es
  427de4:	add    BYTE PTR ds:0x4c78614d,cl
  427dea:	imul   ebp,DWORD PTR [esi+0x65],0x676e654c
  427df1:	je     0x427e5b
  427df3:	mov    ebp,es
  427df5:	inc    ecx
  427df6:	add    BYTE PTR [eax+eax*1+0xa4ff00],ah
  427dfd:	add    bh,bh
  427dff:	add    DWORD PTR [eax],eax
  427e01:	add    BYTE PTR [eax],al
  427e03:	add    BYTE PTR [eax],al
  427e05:	add    BYTE PTR [eax-0x80000000],al
  427e0b:	pop    es
  427e0c:	add    BYTE PTR ds:0x4c78614d,cl
  427e12:	imul   ebp,DWORD PTR [esi+0x65],0x69746341
  427e19:	outs   dx,DWORD PTR ds:[esi]
  427e1a:	outs   dx,BYTE PTR ds:[esi]
  427e1b:	cmp    al,0x10
  427e1d:	inc    eax
  427e1e:	add    BYTE PTR [eax+0x50ff0000],dh
  427e24:	add    BYTE PTR [eax],al
  427e26:	inc    BYTE PTR [ecx]
  427e28:	add    BYTE PTR [eax],al
  427e2a:	add    BYTE PTR [eax],al
  427e2c:	add    BYTE PTR [eax],al
  427e2e:	add    BYTE PTR [eax],0x0
  427e31:	add    BYTE PTR [eax+0x50040008],al
  427e37:	outs   dx,DWORD PTR ds:[esi]
  427e38:	jb     0x427eae
  427e3a:	cmp    al,0x10
  427e3c:	inc    eax
  427e3d:	add    al,al
  427e3f:	add    BYTE PTR [eax],al
  427e41:	inc    eax
  427e43:	add    BYTE PTR [eax],al
  427e45:	inc    DWORD PTR [ecx]
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	add    BYTE PTR [eax],al
  427e4d:	add    BYTE PTR [eax],0x80
  427e50:	add    BYTE PTR [eax],al
  427e52:	or     DWORD PTR [eax],eax
  427e54:	push   cs
  427e55:	push   edx
  427e56:	arpl   WORD PTR gs:[esi+0x42],si
  427e5a:	jne    0x427ec2
  427e5c:	data16 gs jb 0x427eb3
  427e60:	imul   edi,DWORD PTR [edx+0x65],0x40103c
  427e67:	les    eax,FWORD PTR [eax]
  427e69:	add    bh,bh
  427e6b:	les    eax,FWORD PTR [eax]
  427e6d:	add    bh,bh
  427e6f:	add    DWORD PTR [eax],eax
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax],al
  427e75:	add    BYTE PTR [eax+0x8000],al
  427e7b:	or     al,BYTE PTR [eax]
  427e7d:	push   cs
  427e7e:	push   ebx
  427e7f:	outs   dx,BYTE PTR gs:[esi]
  427e81:	fs inc edx
  427e83:	jne    0x427eeb
  427e85:	data16 gs jb 0x427edc
  427e89:	imul   edi,DWORD PTR [edx+0x65],0x8bd88b53
  427e90:	sbb    DWORD PTR [eax+eax*1-0x3f7b0000],0x74
  427e98:	add    eax,0x52ff108b
  427e9d:	cmp    dh,al
  427e9f:	sub    DWORD PTR [eax+eax*1+0x5b000000],0xffffffc3
  427ea7:	nop
  427ea8:	push   ebx
  427ea9:	push   esi
  427eaa:	call   0x404454
  427eaf:	mov    ebx,edx
  427eb1:	mov    esi,eax
  427eb3:	mov    eax,esi
  427eb5:	mov    edx,DWORD PTR [eax]
  427eb7:	call   DWORD PTR [edx+0x6c]
  427eba:	lea    edx,[esi+0xbc]
  427ec0:	mov    eax,ds:0x41be90
  427ec5:	call   0x41b14c
  427eca:	lea    edx,[esi+0x98]
  427ed0:	mov    eax,ds:0x41be90
  427ed5:	call   0x41b14c
  427eda:	lea    edx,[esi+0xc8]
  427ee0:	mov    eax,ds:0x41be90
  427ee5:	call   0x41b14c
  427eea:	mov    edx,ebx
  427eec:	and    dl,0xfc
  427eef:	mov    eax,esi
  427ef1:	call   0x424cc4
  427ef6:	test   bl,bl
  427ef8:	jle    0x427f01
  427efa:	mov    eax,esi
  427efc:	call   0x4043fc
  427f01:	pop    esi
  427f02:	pop    ebx
  427f03:	ret    
  427f04:	ret    
  427f05:	lea    eax,[eax+0x0]
  427f08:	push   ebx
  427f09:	mov    ebx,eax
  427f0b:	mov    BYTE PTR [ebx+0xac],0x0
  427f12:	mov    BYTE PTR [ebx+0x89],0x0
  427f19:	lea    edx,[ebx+0xbc]
  427f1f:	mov    eax,ds:0x41be90
  427f24:	call   0x41b14c
  427f29:	mov    dl,0x1
  427f2b:	mov    eax,ds:0x425f60
  427f30:	call   0x426780
  427f35:	mov    DWORD PTR [ebx+0xbc],eax
  427f3b:	lea    edx,[ebx+0x98]
  427f41:	mov    eax,ds:0x41be90
  427f46:	call   0x41b14c
  427f4b:	push   ebx
  427f4c:	push   0x42803c
  427f51:	mov    dl,0x1
  427f53:	mov    eax,ds:0x425f60
  427f58:	call   0x426164
  427f5d:	mov    DWORD PTR [ebx+0x98],eax
  427f63:	mov    BYTE PTR [ebx+0xac],0x1
  427f6a:	pop    ebx
  427f6b:	ret    
  427f6c:	push   ebx
  427f6d:	push   esi
  427f6e:	push   edi
  427f6f:	mov    ebx,ecx
  427f71:	mov    esi,edx
  427f73:	mov    edi,eax
  427f75:	mov    ecx,ebx
  427f77:	mov    edx,esi
  427f79:	mov    eax,edi
  427f7b:	call   0x41a510
  427f80:	cmp    bl,0x1
  427f83:	jne    0x427f95
  427f85:	cmp    esi,DWORD PTR [edi+0x9c]
  427f8b:	jne    0x427f95
  427f8d:	xor    eax,eax
  427f8f:	mov    DWORD PTR [edi+0x9c],eax
  427f95:	pop    edi
  427f96:	pop    esi
  427f97:	pop    ebx
  427f98:	ret    
  427f99:	lea    eax,[eax+0x0]
  427f9c:	mov    ecx,edx
  427f9e:	mov    DWORD PTR [eax+0x9c],ecx
  427fa4:	test   ecx,ecx
  427fa6:	je     0x427fb1
  427fa8:	mov    edx,eax
  427faa:	mov    eax,ecx
  427fac:	call   0x41a2b4
  427fb1:	ret    
  427fb2:	mov    eax,eax
  427fb4:	mov    ds:0x461b7c,eax
  427fb9:	call   0x427fd0
  427fbe:	ret    
  427fbf:	nop
  427fc0:	mov    ecx,edx
  427fc2:	mov    eax,ds:0x461b7c
  427fc7:	mov    dl,0x1
  427fc9:	call   0x424704
  427fce:	ret    
  427fcf:	nop
  427fd0:	push   ebx
  427fd1:	mov    ebx,eax
  427fd3:	cmp    DWORD PTR ds:0x461b80,0x0
  427fda:	jne    0x427fed
  427fdc:	mov    dl,0x1
  427fde:	mov    eax,ds:0x4127e0
  427fe3:	call   0x404070
  427fe8:	mov    ds:0x461b80,eax
  427fed:	mov    edx,ebx
  427fef:	mov    eax,ds:0x461b80
  427ff4:	call   0x413ccc
  427ff9:	inc    eax
  427ffa:	jne    0x428008
  427ffc:	mov    edx,ebx
  427ffe:	mov    eax,ds:0x461b80
  428003:	call   0x413b38
  428008:	pop    ebx
  428009:	ret    
  42800a:	mov    eax,eax
  42800c:	push   ebx
  42800d:	push   esi
  42800e:	mov    esi,edx
  428010:	mov    ebx,eax
  428012:	mov    eax,esi
  428014:	mov    edx,DWORD PTR [ebx+0x90]
  42801a:	call   0x404fdc
  42801f:	pop    esi
  428020:	pop    ebx
  428021:	ret    
  428022:	mov    eax,eax
  428024:	push   ebx
  428025:	push   esi
  428026:	mov    esi,edx
  428028:	mov    ebx,eax
  42802a:	lea    eax,[ebx+0x90]
  428030:	mov    edx,esi
  428032:	call   0x404fdc
  428037:	pop    esi
  428038:	pop    ebx
  428039:	ret    
  42803a:	mov    eax,eax
  42803c:	push   ebx
  42803d:	mov    ebx,eax
  42803f:	mov    eax,ecx
  428041:	cdq    
  428042:	push   edx
  428043:	push   eax
  428044:	xor    edx,edx
  428046:	mov    eax,ebx
  428048:	mov    ecx,DWORD PTR [eax]
  42804a:	call   DWORD PTR [ecx+0x38]
  42804d:	pop    ebx
  42804e:	ret    
  42804f:	nop
  428050:	push   ebx
  428051:	push   esi
  428052:	mov    esi,edx
  428054:	mov    ebx,eax
  428056:	mov    eax,DWORD PTR [ebx+0xc8]
  42805c:	test   eax,eax
  42805e:	je     0x428067
  428060:	call   0x426134
  428065:	jmp    0x428079
  428067:	mov    dl,0x1
  428069:	mov    eax,ds:0x425f60
  42806e:	call   0x426780
  428073:	mov    DWORD PTR [ebx+0xc8],eax
  428079:	mov    DWORD PTR [ebx+0xcc],esi
  42807f:	pop    esi
  428080:	pop    ebx
  428081:	ret    
  428082:	mov    eax,eax
  428084:	push   ebp
  428085:	mov    ebp,esp
  428087:	push   ecx
  428088:	mov    DWORD PTR [ebp-0x4],eax
  42808b:	xor    eax,eax
  42808d:	push   ebp
  42808e:	push   0x4280c2
  428093:	push   DWORD PTR fs:[eax]
  428096:	mov    DWORD PTR fs:[eax],esp
  428099:	mov    eax,DWORD PTR [ebp-0x4]
  42809c:	call   0x429774
  4280a1:	xor    eax,eax
  4280a3:	pop    edx
  4280a4:	pop    ecx
  4280a5:	pop    ecx
  4280a6:	mov    DWORD PTR fs:[eax],edx
  4280a9:	push   0x4280c9
  4280ae:	mov    eax,DWORD PTR [ebp-0x4]
  4280b1:	lea    edx,[eax+0xc8]
  4280b7:	mov    eax,ds:0x41be90
  4280bc:	call   0x41b14c
  4280c1:	ret    
  4280c2:	jmp    0x40481c
  4280c7:	jmp    0x4280ae
  4280c9:	pop    ecx
  4280ca:	pop    ebp
  4280cb:	ret    
  4280cc:	push   ebp
  4280cd:	mov    ebp,esp
  4280cf:	push   0x0
  4280d1:	push   esi
  4280d2:	mov    esi,eax
  4280d4:	xor    eax,eax
  4280d6:	push   ebp
  4280d7:	push   0x428126
  4280dc:	push   DWORD PTR fs:[eax]
  4280df:	mov    DWORD PTR fs:[eax],esp
  4280e2:	mov    eax,DWORD PTR [esi+0xc8]
  4280e8:	test   eax,eax
  4280ea:	je     0x42810a
  4280ec:	cmp    DWORD PTR [eax+0x20],0x0
  4280f0:	jle    0x42810a
  4280f2:	push   0x1
  4280f4:	push   0xffffffff
  4280f6:	lea    ecx,[ebp-0x4]
  4280f9:	xchg   edx,ecx
  4280fb:	call   0x426254
  428100:	lea    edx,[ebp-0x4]
  428103:	mov    eax,esi
  428105:	mov    ecx,DWORD PTR [eax]
  428107:	call   DWORD PTR [ecx+0x78]
  42810a:	xor    eax,eax
  42810c:	pop    edx
  42810d:	pop    ecx
  42810e:	pop    ecx
  42810f:	mov    DWORD PTR fs:[eax],edx
  428112:	push   0x42812d
  428117:	lea    eax,[ebp-0x4]
  42811a:	mov    edx,DWORD PTR ds:0x40769c
  428120:	call   0x4063bc
  428125:	ret    
  428126:	jmp    0x40481c
  42812b:	jmp    0x428117
  42812d:	pop    esi
  42812e:	pop    ecx
  42812f:	pop    ebp
  428130:	ret    
  428131:	lea    eax,[eax+0x0]
  428134:	mov    edx,DWORD PTR [eax+0xc8]
  42813a:	test   edx,edx
  42813c:	je     0x428145
  42813e:	mov    eax,edx
  428140:	call   0x426134
  428145:	ret    
  428146:	mov    eax,eax
  428148:	push   ebx
  428149:	mov    ebx,eax
  42814b:	mov    eax,ebx
  42814d:	mov    edx,DWORD PTR [eax]
  42814f:	call   DWORD PTR [edx+0xb4]
  428155:	mov    eax,ebx
  428157:	mov    edx,DWORD PTR [eax]
  428159:	call   DWORD PTR [edx+0xb8]
  42815f:	pop    ebx
  428160:	ret    
  428161:	lea    eax,[eax+0x0]
  428164:	push   ebp
  428165:	mov    ebp,esp
  428167:	push   0x0
  428169:	push   ebx
  42816a:	push   esi
  42816b:	mov    esi,edx
  42816d:	mov    ebx,eax
  42816f:	xor    eax,eax
  428171:	push   ebp
  428172:	push   0x4281b3
  428177:	push   DWORD PTR fs:[eax]
  42817a:	mov    DWORD PTR fs:[eax],esp
  42817d:	test   esi,esi
  42817f:	je     0x428197
  428181:	lea    ecx,[ebp-0x4]
  428184:	mov    dl,0x1
  428186:	mov    eax,esi
  428188:	call   0x41d2bc
  42818d:	mov    edx,DWORD PTR [ebp-0x4]
  428190:	mov    eax,ebx
  428192:	mov    ecx,DWORD PTR [eax]
  428194:	call   DWORD PTR [ecx+0x74]
  428197:	xor    eax,eax
  428199:	pop    edx
  42819a:	pop    ecx
  42819b:	pop    ecx
  42819c:	mov    DWORD PTR fs:[eax],edx
  42819f:	push   0x4281ba
  4281a4:	lea    eax,[ebp-0x4]
  4281a7:	mov    edx,DWORD PTR ds:0x40769c
  4281ad:	call   0x4063bc
  4281b2:	ret    
  4281b3:	jmp    0x40481c
  4281b8:	jmp    0x4281a4
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	pop    ecx
  4281bd:	pop    ebp
  4281be:	ret    
  4281bf:	nop
  4281c0:	push   ebp
  4281c1:	mov    ebp,esp
  4281c3:	push   0x0
  4281c5:	push   ebx
  4281c6:	push   esi
  4281c7:	mov    ebx,edx
  4281c9:	mov    esi,eax
  4281cb:	xor    eax,eax
  4281cd:	push   ebp
  4281ce:	push   0x428209
  4281d3:	push   DWORD PTR fs:[eax]
  4281d6:	mov    DWORD PTR fs:[eax],esp
  4281d9:	lea    edx,[ebp-0x4]
  4281dc:	mov    eax,ebx
  4281de:	call   0x41d344
  4281e3:	mov    edx,DWORD PTR [ebp-0x4]
  4281e6:	mov    eax,esi
  4281e8:	mov    ecx,DWORD PTR [eax]
  4281ea:	call   DWORD PTR [ecx+0x74]
  4281ed:	xor    eax,eax
  4281ef:	pop    edx
  4281f0:	pop    ecx
  4281f1:	pop    ecx
  4281f2:	mov    DWORD PTR fs:[eax],edx
  4281f5:	push   0x428210
  4281fa:	lea    eax,[ebp-0x4]
  4281fd:	mov    edx,DWORD PTR ds:0x40769c
  428203:	call   0x4063bc
  428208:	ret    
  428209:	jmp    0x40481c
  42820e:	jmp    0x4281fa
  428210:	pop    esi
  428211:	pop    ebx
  428212:	pop    ecx
  428213:	pop    ebp
  428214:	ret    
  428215:	lea    eax,[eax+0x0]
  428218:	push   ebp
  428219:	mov    ebp,esp
  42821b:	push   0x0
  42821d:	push   ebx
  42821e:	push   esi
  42821f:	push   edi
  428220:	mov    esi,edx
  428222:	mov    edi,eax
  428224:	xor    eax,eax
  428226:	push   ebp
  428227:	push   0x428276
  42822c:	push   DWORD PTR fs:[eax]
  42822f:	mov    DWORD PTR fs:[eax],esp
  428232:	test   cl,cl
  428234:	je     0x428246
  428236:	mov    eax,ds:0x46de0c
  42823b:	mov    eax,DWORD PTR [eax]
  42823d:	mov    edx,esi
  42823f:	mov    ecx,DWORD PTR [eax]
  428241:	call   DWORD PTR [ecx+0x3c]
  428244:	mov    esi,eax
  428246:	lea    edx,[ebp-0x4]
  428249:	mov    eax,esi
  42824b:	call   0x41d398
  428250:	mov    edx,DWORD PTR [ebp-0x4]
  428253:	mov    eax,edi
  428255:	mov    ecx,DWORD PTR [eax]
  428257:	call   DWORD PTR [ecx+0x74]
  42825a:	xor    eax,eax
  42825c:	pop    edx
  42825d:	pop    ecx
  42825e:	pop    ecx
  42825f:	mov    DWORD PTR fs:[eax],edx
  428262:	push   0x42827d
  428267:	lea    eax,[ebp-0x4]
  42826a:	mov    edx,DWORD PTR ds:0x40769c
  428270:	call   0x4063bc
  428275:	ret    
  428276:	jmp    0x40481c
  42827b:	jmp    0x428267
  42827d:	pop    edi
  42827e:	pop    esi
  42827f:	pop    ebx
  428280:	pop    ecx
  428281:	pop    ebp
  428282:	ret    
  428283:	nop
  428284:	push   ebp
  428285:	mov    ebp,esp
  428287:	push   0x0
  428289:	push   esi
  42828a:	mov    esi,eax
  42828c:	xor    eax,eax
  42828e:	push   ebp
  42828f:	push   0x4282ea
  428294:	push   DWORD PTR fs:[eax]
  428297:	mov    DWORD PTR fs:[eax],esp
  42829a:	test   dl,dl
  42829c:	je     0x4282b6
  42829e:	push   DWORD PTR [ebp+0xc]
  4282a1:	push   DWORD PTR [ebp+0x8]
  4282a4:	mov    eax,ds:0x46de0c
  4282a9:	mov    eax,DWORD PTR [eax]
  4282ab:	mov    edx,DWORD PTR [eax]
  4282ad:	call   DWORD PTR [edx+0x40]
  4282b0:	mov    DWORD PTR [ebp+0x8],eax
  4282b3:	mov    DWORD PTR [ebp+0xc],edx
  4282b6:	push   DWORD PTR [ebp+0xc]
  4282b9:	push   DWORD PTR [ebp+0x8]
  4282bc:	lea    eax,[ebp-0x4]
  4282bf:	call   0x41d368
  4282c4:	mov    edx,DWORD PTR [ebp-0x4]
  4282c7:	mov    eax,esi
  4282c9:	mov    ecx,DWORD PTR [eax]
  4282cb:	call   DWORD PTR [ecx+0x74]
  4282ce:	xor    eax,eax
  4282d0:	pop    edx
  4282d1:	pop    ecx
  4282d2:	pop    ecx
  4282d3:	mov    DWORD PTR fs:[eax],edx
  4282d6:	push   0x4282f1
  4282db:	lea    eax,[ebp-0x4]
  4282de:	mov    edx,DWORD PTR ds:0x40769c
  4282e4:	call   0x4063bc
  4282e9:	ret    
  4282ea:	jmp    0x40481c
  4282ef:	jmp    0x4282db
  4282f1:	pop    esi
  4282f2:	pop    ecx
  4282f3:	pop    ebp
  4282f4:	ret    0x8
  4282f7:	nop
  4282f8:	push   ebp
  4282f9:	mov    ebp,esp
  4282fb:	add    esp,0xfffffff4
  4282fe:	push   ebx
  4282ff:	push   esi
  428300:	push   edi
  428301:	xor    ebx,ebx
  428303:	mov    DWORD PTR [ebp-0xc],ebx
  428306:	mov    ebx,ecx
  428308:	mov    DWORD PTR [ebp-0x8],edx
  42830b:	mov    DWORD PTR [ebp-0x4],eax
  42830e:	xor    eax,eax
  428310:	push   ebp
  428311:	push   0x4283ba
  428316:	push   DWORD PTR fs:[eax]
  428319:	mov    DWORD PTR fs:[eax],esp
  42831c:	mov    eax,DWORD PTR [ebp-0x4]
  42831f:	call   0x429780
  428324:	xor    eax,eax
  428326:	push   ebp
  428327:	push   0x42839d
  42832c:	push   DWORD PTR fs:[eax]
  42832f:	mov    DWORD PTR fs:[eax],esp
  428332:	test   bl,bl
  428334:	je     0x42834a
  428336:	mov    eax,DWORD PTR [ebp-0x8]
  428339:	mov    edx,DWORD PTR [eax]
  42833b:	call   DWORD PTR [edx+0x14]
  42833e:	mov    edx,eax
  428340:	mov    cl,0x1
  428342:	mov    eax,DWORD PTR [ebp-0x4]
  428345:	call   0x428218
  42834a:	mov    eax,DWORD PTR [ebp-0x8]
  42834d:	mov    edx,DWORD PTR [eax]
  42834f:	call   DWORD PTR [edx+0x14]
  428352:	mov    ebx,eax
  428354:	sub    ebx,0x1
  428357:	jno    0x42835e
  428359:	call   0x403f70
  42835e:	test   ebx,ebx
  428360:	jl     0x428384
  428362:	inc    ebx
  428363:	xor    esi,esi
  428365:	lea    ecx,[ebp-0xc]
  428368:	mov    edx,esi
  42836a:	mov    eax,DWORD PTR [ebp-0x8]
  42836d:	mov    edi,DWORD PTR [eax]
  42836f:	call   DWORD PTR [edi+0xc]
  428372:	mov    edx,DWORD PTR [ebp-0xc]
  428375:	mov    eax,DWORD PTR [ebp-0x4]
  428378:	mov    ecx,DWORD PTR [eax]
  42837a:	call   DWORD PTR [ecx+0x88]
  428380:	inc    esi
  428381:	dec    ebx
  428382:	jne    0x428365
  428384:	xor    eax,eax
  428386:	pop    edx
  428387:	pop    ecx
  428388:	pop    ecx
  428389:	mov    DWORD PTR fs:[eax],edx
  42838c:	push   0x4283a4
  428391:	mov    eax,DWORD PTR [ebp-0x4]
  428394:	mov    edx,DWORD PTR [eax]
  428396:	call   DWORD PTR [edx+0xb8]
  42839c:	ret    
  42839d:	jmp    0x40481c
  4283a2:	jmp    0x428391
  4283a4:	xor    eax,eax
  4283a6:	pop    edx
  4283a7:	pop    ecx
  4283a8:	pop    ecx
  4283a9:	mov    DWORD PTR fs:[eax],edx
  4283ac:	push   0x4283c1
  4283b1:	lea    eax,[ebp-0xc]
  4283b4:	call   0x404f88
  4283b9:	ret    
  4283ba:	jmp    0x40481c
  4283bf:	jmp    0x4283b1
  4283c1:	pop    edi
  4283c2:	pop    esi
  4283c3:	pop    ebx
  4283c4:	mov    esp,ebp
  4283c6:	pop    ebp
  4283c7:	ret    
  4283c8:	push   ebp
  4283c9:	mov    ebp,esp
  4283cb:	push   0x0
  4283cd:	push   ebx
  4283ce:	xor    edx,edx
  4283d0:	push   ebp
  4283d1:	push   0x428416
  4283d6:	push   DWORD PTR fs:[edx]
  4283d9:	mov    DWORD PTR fs:[edx],esp
  4283dc:	push   0x0
  4283de:	lea    edx,[ebp-0x4]
  4283e1:	mov    ecx,0x1
  4283e6:	mov    ebx,DWORD PTR [eax]
  4283e8:	call   DWORD PTR [ebx+0xa0]
  4283ee:	xor    edx,edx
  4283f0:	mov    eax,DWORD PTR [ebp-0x4]
  4283f3:	call   0x41d4e4
  4283f8:	mov    ebx,eax
  4283fa:	xor    eax,eax
  4283fc:	pop    edx
  4283fd:	pop    ecx
  4283fe:	pop    ecx
  4283ff:	mov    DWORD PTR fs:[eax],edx
  428402:	push   0x42841d
  428407:	lea    eax,[ebp-0x4]
  42840a:	mov    edx,DWORD PTR ds:0x40769c
  428410:	call   0x4063bc
  428415:	ret    
  428416:	jmp    0x40481c
  42841b:	jmp    0x428407
  42841d:	mov    eax,ebx
  42841f:	pop    ebx
  428420:	pop    ecx
  428421:	pop    ebp
  428422:	ret    
  428423:	nop
  428424:	push   ebp
  428425:	mov    ebp,esp
  428427:	push   0x0
  428429:	push   ebx
  42842a:	push   esi
  42842b:	mov    ebx,edx
  42842d:	xor    edx,edx
  42842f:	push   ebp
  428430:	push   0x428489
  428435:	push   DWORD PTR fs:[edx]
  428438:	mov    DWORD PTR fs:[edx],esp
  42843b:	push   0x0
  42843d:	lea    edx,[ebp-0x4]
  428440:	mov    ecx,0x4
  428445:	mov    esi,DWORD PTR [eax]
  428447:	call   DWORD PTR [esi+0xa0]
  42844d:	xor    edx,edx
  42844f:	mov    eax,DWORD PTR [ebp-0x4]
  428452:	call   0x41d568
  428457:	mov    esi,eax
  428459:	test   bl,bl
  42845b:	je     0x42846d
  42845d:	mov    eax,ds:0x46de0c
  428462:	mov    eax,DWORD PTR [eax]
  428464:	mov    edx,esi
  428466:	mov    ecx,DWORD PTR [eax]
  428468:	call   DWORD PTR [ecx+0x54]
  42846b:	mov    esi,eax
  42846d:	xor    eax,eax
  42846f:	pop    edx
  428470:	pop    ecx
  428471:	pop    ecx
  428472:	mov    DWORD PTR fs:[eax],edx
  428475:	push   0x428490
  42847a:	lea    eax,[ebp-0x4]
  42847d:	mov    edx,DWORD PTR ds:0x40769c
  428483:	call   0x4063bc
  428488:	ret    
  428489:	jmp    0x40481c
  42848e:	jmp    0x42847a
  428490:	mov    eax,esi
  428492:	pop    esi
  428493:	pop    ebx
  428494:	pop    ecx
  428495:	pop    ebp
  428496:	ret    
  428497:	nop
  428498:	push   ebp
  428499:	mov    ebp,esp
  42849b:	add    esp,0xfffffff0
  42849e:	push   ebx
  42849f:	push   esi
  4284a0:	xor    ecx,ecx
  4284a2:	mov    DWORD PTR [ebp-0x4],ecx
  4284a5:	mov    ebx,edx
  4284a7:	xor    edx,edx
  4284a9:	push   ebp
  4284aa:	push   0x42850f
  4284af:	push   DWORD PTR fs:[edx]
  4284b2:	mov    DWORD PTR fs:[edx],esp
  4284b5:	push   0x0
  4284b7:	lea    edx,[ebp-0x4]
  4284ba:	mov    ecx,0x8
  4284bf:	mov    esi,DWORD PTR [eax]
  4284c1:	call   DWORD PTR [esi+0xa0]
  4284c7:	xor    edx,edx
  4284c9:	mov    eax,DWORD PTR [ebp-0x4]
  4284cc:	call   0x41d5ec
  4284d1:	mov    DWORD PTR [ebp-0x10],eax
  4284d4:	mov    DWORD PTR [ebp-0xc],edx
  4284d7:	test   bl,bl
  4284d9:	je     0x4284f3
  4284db:	push   DWORD PTR [ebp-0xc]
  4284de:	push   DWORD PTR [ebp-0x10]
  4284e1:	mov    eax,ds:0x46de0c
  4284e6:	mov    eax,DWORD PTR [eax]
  4284e8:	mov    edx,DWORD PTR [eax]
  4284ea:	call   DWORD PTR [edx+0x58]
  4284ed:	mov    DWORD PTR [ebp-0x10],eax
  4284f0:	mov    DWORD PTR [ebp-0xc],edx
  4284f3:	xor    eax,eax
  4284f5:	pop    edx
  4284f6:	pop    ecx
  4284f7:	pop    ecx
  4284f8:	mov    DWORD PTR fs:[eax],edx
  4284fb:	push   0x428516
  428500:	lea    eax,[ebp-0x4]
  428503:	mov    edx,DWORD PTR ds:0x40769c
  428509:	call   0x4063bc
  42850e:	ret    
  42850f:	jmp    0x40481c
  428514:	jmp    0x428500
  428516:	mov    eax,DWORD PTR [ebp-0x10]
  428519:	mov    edx,DWORD PTR [ebp-0xc]
  42851c:	pop    esi
  42851d:	pop    ebx
  42851e:	mov    esp,ebp
  428520:	pop    ebp
  428521:	ret    
  428522:	mov    eax,eax
  428524:	push   ebx
  428525:	push   esi
  428526:	mov    esi,edx
  428528:	mov    ebx,eax
  42852a:	push   0xffffffff
  42852c:	push   esi
  42852d:	or     ecx,0xffffffff
  428530:	mov    edx,0x42854c
  428535:	mov    eax,ebx
  428537:	mov    ebx,DWORD PTR [eax]
  428539:	call   DWORD PTR [ebx+0xa4]
  42853f:	pop    esi
  428540:	pop    ebx
  428541:	ret    
  428542:	add    BYTE PTR [eax],al
  428544:	(bad)  
  428545:	(bad)  
  428546:	(bad)  
  428547:	inc    DWORD PTR [ecx]
  428549:	add    BYTE PTR [eax],al
  42854b:	add    BYTE PTR [edx],cl
  42854d:	add    BYTE PTR [eax],al
  42854f:	add    BYTE PTR [ebp-0x75],dl
  428552:	in     al,dx
  428553:	add    esp,0xffffffe8
  428556:	push   ebx
  428557:	push   esi
  428558:	push   edi
  428559:	xor    ebx,ebx
  42855b:	mov    DWORD PTR [ebp-0x18],ebx
  42855e:	mov    DWORD PTR [ebp-0x14],ebx
  428561:	mov    DWORD PTR [ebp-0x8],ecx
  428564:	mov    DWORD PTR [ebp-0x4],edx
  428567:	mov    ebx,eax
  428569:	mov    eax,DWORD PTR [ebp-0x4]
  42856c:	call   0x405408
  428571:	xor    eax,eax
  428573:	push   ebp
  428574:	push   0x42877a
  428579:	push   DWORD PTR fs:[eax]
  42857c:	mov    DWORD PTR fs:[eax],esp
  42857f:	cmp    DWORD PTR [ebp+0xc],0x0
  428583:	jge    0x42858e
  428585:	mov    eax,DWORD PTR [ebx+0xa8]
  42858b:	mov    DWORD PTR [ebp+0xc],eax
  42858e:	cmp    DWORD PTR [ebp-0x4],0x0
  428592:	jne    0x4285a1
  428594:	lea    eax,[ebp-0x4]
  428597:	mov    edx,0x428794
  42859c:	call   0x405020
  4285a1:	mov    BYTE PTR [ebx+0xb4],0x0
  4285a8:	mov    BYTE PTR [ebx+0xb5],0x0
  4285af:	or     esi,0xffffffff
  4285b2:	xor    eax,eax
  4285b4:	mov    DWORD PTR [ebp-0xc],eax
  4285b7:	call   0x41c968
  4285bc:	mov    DWORD PTR [ebp-0x10],eax
  4285bf:	mov    eax,DWORD PTR [ebx+0x98]
  4285c5:	mov    edi,DWORD PTR [eax+0x20]
  4285c8:	test   edi,edi
  4285ca:	jle    0x4285e6
  4285cc:	cmp    edi,DWORD PTR [ebp-0xc]
  4285cf:	jle    0x4285e0
  4285d1:	mov    ecx,DWORD PTR [ebp-0xc]
  4285d4:	mov    edx,DWORD PTR [ebp-0x4]
  4285d7:	call   0x426578
  4285dc:	mov    esi,eax
  4285de:	jmp    0x4285e3
  4285e0:	or     esi,0xffffffff
  4285e3:	mov    DWORD PTR [ebp-0xc],edi
  4285e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4285ea:	jle    0x428632
  4285ec:	cmp    esi,DWORD PTR [ebp+0xc]
  4285ef:	jle    0x428632
  4285f1:	lea    edx,[ebp-0x14]
  4285f4:	mov    eax,ds:0x46db9c
  4285f9:	call   0x406f48
  4285fe:	mov    ecx,DWORD PTR [ebp-0x14]
  428601:	cmp    BYTE PTR [ebx+0xa4],0x0
  428608:	sete   dl
  42860b:	mov    eax,ds:0x426ed4
  428610:	call   0x41be6c
  428615:	mov    BYTE PTR [ebx+0xb4],0x1
  42861c:	mov    ecx,DWORD PTR [ebp+0x8]
  42861f:	mov    edx,DWORD PTR [ebp+0xc]
  428622:	mov    eax,DWORD PTR [ebx+0x98]
  428628:	call   0x4261e4
  42862d:	jmp    0x428757
  428632:	cmp    esi,0xffffffff
  428635:	jne    0x4286ea
  42863b:	cmp    DWORD PTR [ebp+0xc],0x0
  42863f:	jle    0x42868a
  428641:	mov    eax,DWORD PTR [ebp-0xc]
  428644:	cmp    eax,DWORD PTR [ebp+0xc]
  428647:	jle    0x42868a
  428649:	lea    edx,[ebp-0x18]
  42864c:	mov    eax,ds:0x46db9c
  428651:	call   0x406f48
  428656:	mov    ecx,DWORD PTR [ebp-0x18]
  428659:	cmp    BYTE PTR [ebx+0xa4],0x0
  428660:	sete   dl
  428663:	mov    eax,ds:0x426ed4
  428668:	call   0x41be6c
  42866d:	mov    BYTE PTR [ebx+0xb4],0x1
  428674:	mov    ecx,DWORD PTR [ebp+0x8]
  428677:	mov    edx,DWORD PTR [ebp+0xc]
  42867a:	mov    eax,DWORD PTR [ebx+0x98]
  428680:	call   0x4261e4
  428685:	jmp    0x428757
  42868a:	mov    cl,0x1
  42868c:	mov    dl,0x1
  42868e:	mov    eax,ebx
  428690:	mov    edi,DWORD PTR [eax]
  428692:	call   DWORD PTR [edi+0x64]
  428695:	push   0x0
  428697:	mov    ecx,DWORD PTR [ebp-0x8]
  42869a:	mov    dl,0x1
  42869c:	mov    eax,ebx
  42869e:	mov    edi,DWORD PTR [eax]
  4286a0:	call   DWORD PTR [edi+0x58]
  4286a3:	inc    eax
  4286a4:	sete   al
  4286a7:	mov    BYTE PTR [ebx+0xb5],al
  4286ad:	cmp    BYTE PTR [ebx+0xb5],0x0
  4286b4:	jne    0x4286d7
  4286b6:	cmp    DWORD PTR [ebp-0x8],0x0
  4286ba:	jl     0x4286d7
  4286bc:	call   0x41c968
  4286c1:	mov    edx,eax
  4286c3:	mov    eax,DWORD PTR [ebp-0x10]
  4286c6:	call   0x41c9b0
  4286cb:	cmp    eax,DWORD PTR [ebp-0x8]
  4286ce:	jb     0x4286d7
  4286d0:	mov    BYTE PTR [ebx+0xb5],0x1
  4286d7:	cmp    BYTE PTR [ebx+0xb5],0x0
  4286de:	je     0x4286ea
  4286e0:	mov    eax,DWORD PTR [ebp+0x8]
  4286e3:	call   0x404f88
  4286e8:	jmp    0x428757
  4286ea:	cmp    esi,0xffffffff
  4286ed:	jle    0x4285bf
  4286f3:	mov    eax,DWORD PTR [ebp-0x4]
  4286f6:	call   0x405248
  4286fb:	mov    edx,eax
  4286fd:	add    edx,esi
  4286ff:	jno    0x428706
  428701:	call   0x403f70
  428706:	mov    ecx,DWORD PTR [ebp+0x8]
  428709:	mov    eax,DWORD PTR [ebx+0x98]
  42870f:	call   0x4261e4
  428714:	mov    eax,DWORD PTR [ebp-0x4]
  428717:	mov    edx,0x428794
  42871c:	call   0x4053b0
  428721:	jne    0x42874d
  428723:	test   esi,esi
  428725:	jle    0x42874d
  428727:	mov    eax,DWORD PTR [ebp+0x8]
  42872a:	mov    eax,DWORD PTR [eax]
  42872c:	dec    esi
  42872d:	test   eax,eax
  42872f:	je     0x428736
  428731:	cmp    esi,DWORD PTR [eax-0x4]
  428734:	jb     0x42873b
  428736:	call   0x403f68
  42873b:	inc    esi
  42873c:	cmp    BYTE PTR [eax+esi*1-0x1],0xd
  428741:	jne    0x42874d
  428743:	sub    esi,0x1
  428746:	jno    0x42874d
  428748:	call   0x403f70
  42874d:	mov    eax,DWORD PTR [ebp+0x8]
  428750:	mov    edx,esi
  428752:	call   0x4056a8
  428757:	xor    eax,eax
  428759:	pop    edx
  42875a:	pop    ecx
  42875b:	pop    ecx
  42875c:	mov    DWORD PTR fs:[eax],edx
  42875f:	push   0x428781
  428764:	lea    eax,[ebp-0x18]
  428767:	mov    edx,0x2
  42876c:	call   0x404fac
  428771:	lea    eax,[ebp-0x4]
  428774:	call   0x404f88
  428779:	ret    
  42877a:	jmp    0x40481c
  42877f:	jmp    0x428764
  428781:	pop    edi
  428782:	pop    esi
  428783:	pop    ebx
  428784:	mov    esp,ebp
  428786:	pop    ebp
  428787:	ret    0x8
  42878a:	add    BYTE PTR [eax],al
  42878c:	(bad)  
  42878d:	(bad)  
  42878e:	(bad)  
  42878f:	inc    DWORD PTR [ecx]
  428791:	add    BYTE PTR [eax],al
  428793:	add    BYTE PTR [edx],cl
  428795:	add    BYTE PTR [eax],al
  428797:	add    BYTE PTR [ebp-0x75],dl
  42879a:	in     al,dx
  42879b:	add    esp,0xfffffff8
  42879e:	push   ebx
  42879f:	push   esi
  4287a0:	push   edi
  4287a1:	xor    ebx,ebx
  4287a3:	mov    DWORD PTR [ebp-0x8],ebx
  4287a6:	mov    ebx,ecx
  4287a8:	mov    DWORD PTR [ebp-0x4],edx
  4287ab:	mov    edi,eax
  4287ad:	xor    eax,eax
  4287af:	push   ebp
  4287b0:	push   0x42880f
  4287b5:	push   DWORD PTR fs:[eax]
  4287b8:	mov    DWORD PTR fs:[eax],esp
  4287bb:	mov    eax,ebx
  4287bd:	call   0x404f88
  4287c2:	xor    esi,esi
  4287c4:	jmp    0x4287e9
  4287c6:	add    esi,0x1
  4287c9:	jno    0x4287d0
  4287cb:	call   0x403f70
  4287d0:	lea    edx,[ebp-0x8]
  4287d3:	mov    eax,edi
  4287d5:	call   0x428524
  4287da:	mov    edx,DWORD PTR [ebp-0x8]
  4287dd:	mov    ecx,ebx
  4287df:	mov    eax,ds:0x41be90
  4287e4:	call   0x41b2b0
  4287e9:	mov    eax,DWORD PTR [ebx]
  4287eb:	call   0x405248
  4287f0:	test   eax,eax
  4287f2:	jne    0x4287f9
  4287f4:	cmp    esi,DWORD PTR [ebp-0x4]
  4287f7:	jl     0x4287c6
  4287f9:	xor    eax,eax
  4287fb:	pop    edx
  4287fc:	pop    ecx
  4287fd:	pop    ecx
  4287fe:	mov    DWORD PTR fs:[eax],edx
  428801:	push   0x428816
  428806:	lea    eax,[ebp-0x8]
  428809:	call   0x404f88
  42880e:	ret    
  42880f:	jmp    0x40481c
  428814:	jmp    0x428806
  428816:	pop    edi
  428817:	pop    esi
  428818:	pop    ebx
  428819:	pop    ecx
  42881a:	pop    ecx
  42881b:	pop    ebp
  42881c:	ret    
  42881d:	lea    eax,[eax+0x0]
  428820:	push   ebp
  428821:	mov    ebp,esp
  428823:	push   0x0
  428825:	push   0x0
  428827:	push   0x0
  428829:	push   ebx
  42882a:	push   esi
  42882b:	push   edi
  42882c:	mov    ebx,ecx
  42882e:	mov    esi,edx
  428830:	mov    DWORD PTR [ebp-0x8],eax
  428833:	xor    eax,eax
  428835:	push   ebp
  428836:	push   0x428a58
  42883b:	push   DWORD PTR fs:[eax]
  42883e:	mov    DWORD PTR fs:[eax],esp
  428841:	cmp    DWORD PTR [ebp+0xc],0x0
  428845:	jne    0x42884f
  428847:	cmp    DWORD PTR [ebp+0x8],0x0
  42884b:	jae    0x42889c
  42884d:	jmp    0x428851
  42884f:	jge    0x42889c
  428851:	mov    eax,esi
  428853:	call   0x4163e4
  428858:	push   eax
  428859:	sar    eax,0x1f
  42885c:	cmp    eax,edx
  42885e:	pop    eax
  42885f:	je     0x428866
  428861:	call   0x403f68
  428866:	mov    edi,eax
  428868:	mov    eax,esi
  42886a:	mov    edx,DWORD PTR [eax]
  42886c:	call   DWORD PTR [edx]
  42886e:	mov    DWORD PTR [ebp+0x8],eax
  428871:	mov    DWORD PTR [ebp+0xc],edx
  428874:	mov    eax,edi
  428876:	cdq    
  428877:	push   edx
  428878:	push   eax
  428879:	mov    eax,esi
  42887b:	call   0x416404
  428880:	mov    eax,DWORD PTR [ebp+0x8]
  428883:	mov    edx,DWORD PTR [ebp+0xc]
  428886:	push   edx
  428887:	push   eax
  428888:	mov    eax,edi
  42888a:	cdq    
  42888b:	sub    DWORD PTR [esp],eax
  42888e:	sbb    DWORD PTR [esp+0x4],edx
  428892:	pop    eax
  428893:	pop    edx
  428894:	mov    DWORD PTR [ebp+0x8],eax
  428897:	mov    DWORD PTR [ebp+0xc],edx
  42889a:	jmp    0x4288bf
  42889c:	cmp    DWORD PTR [ebp+0xc],0x0
  4288a0:	jne    0x4288bf
  4288a2:	cmp    DWORD PTR [ebp+0x8],0x0
  4288a6:	jne    0x4288bf
  4288a8:	mov    eax,esi
  4288aa:	mov    edx,DWORD PTR [eax]
  4288ac:	call   DWORD PTR [edx]
  4288ae:	mov    DWORD PTR [ebp+0x8],eax
  4288b1:	mov    DWORD PTR [ebp+0xc],edx
  4288b4:	push   0x0
  4288b6:	push   0x0
  4288b8:	mov    eax,esi
  4288ba:	call   0x416404
  4288bf:	cmp    DWORD PTR [ebp+0xc],0x0
  4288c3:	jne    0x4288d0
  4288c5:	cmp    DWORD PTR [ebp+0x8],0x7fffffff
  4288cc:	jbe    0x4288de
  4288ce:	jmp    0x4288d2
  4288d0:	jle    0x4288de
  4288d2:	mov    eax,DWORD PTR [ebp-0x8]
  4288d5:	cmp    BYTE PTR [eax+0x88],0x0
  4288dc:	je     0x4288e2
  4288de:	xor    edx,edx
  4288e0:	jmp    0x4288e4
  4288e2:	mov    dl,0x1
  4288e4:	xor    ecx,ecx
  4288e6:	mov    eax,ds:0x427b90
  4288eb:	call   0x41be6c
  4288f0:	test   bl,bl
  4288f2:	je     0x428921
  4288f4:	mov    eax,DWORD PTR [ebp-0x8]
  4288f7:	cmp    BYTE PTR [eax+0x88],0x0
  4288fe:	je     0x428912
  428900:	push   DWORD PTR [ebp+0xc]
  428903:	push   DWORD PTR [ebp+0x8]
  428906:	mov    dl,0x1
  428908:	mov    eax,DWORD PTR [ebp-0x8]
  42890b:	call   0x428284
  428910:	jmp    0x428921
  428912:	mov    eax,DWORD PTR [ebp+0x8]
  428915:	mov    edx,eax
  428917:	mov    cl,0x1
  428919:	mov    eax,DWORD PTR [ebp-0x8]
  42891c:	call   0x428218
  428921:	push   DWORD PTR [ebp+0xc]
  428924:	push   DWORD PTR [ebp+0x8]
  428927:	mov    dl,0x1
  428929:	mov    eax,DWORD PTR [ebp-0x8]
  42892c:	mov    ecx,DWORD PTR [eax]
  42892e:	call   DWORD PTR [ecx+0x34]
  428931:	xor    eax,eax
  428933:	push   ebp
  428934:	push   0x428a2d
  428939:	push   DWORD PTR fs:[eax]
  42893c:	mov    DWORD PTR fs:[eax],esp
  42893f:	jmp    0x4289ef
  428944:	mov    eax,DWORD PTR [ebp-0x8]
  428947:	mov    eax,DWORD PTR [eax+0xc4]
  42894d:	push   eax
  42894e:	lea    eax,[ebp-0x4]
  428951:	mov    ecx,0x1
  428956:	mov    edx,DWORD PTR ds:0x40769c
  42895c:	call   0x4063b0
  428961:	add    esp,0x4
  428964:	push   DWORD PTR [ebp+0xc]
  428967:	push   DWORD PTR [ebp+0x8]
  42896a:	mov    eax,DWORD PTR [ebp-0x8]
  42896d:	mov    eax,DWORD PTR [eax+0xc4]
  428973:	cdq    
  428974:	push   edx
  428975:	push   eax
  428976:	call   0x41d1f8
  42897b:	push   eax
  42897c:	sar    eax,0x1f
  42897f:	cmp    eax,edx
  428981:	pop    eax
  428982:	je     0x428989
  428984:	call   0x403f68
  428989:	mov    edi,eax
  42898b:	push   edi
  42898c:	push   0x0
  42898e:	lea    ecx,[ebp-0x4]
  428991:	mov    edx,esi
  428993:	mov    eax,ds:0x41c1fc
  428998:	call   0x41c25c
  42899d:	mov    edi,eax
  42899f:	test   edi,edi
  4289a1:	jne    0x4289c4
  4289a3:	lea    edx,[ebp-0xc]
  4289a6:	mov    eax,ds:0x46db00
  4289ab:	call   0x406f48
  4289b0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289b3:	mov    dl,0x1
  4289b5:	mov    eax,ds:0x427140
  4289ba:	call   0x41bdbc
  4289bf:	call   0x4048fc
  4289c4:	push   edi
  4289c5:	lea    eax,[ebp-0x4]
  4289c8:	mov    ecx,0x1
  4289cd:	mov    edx,DWORD PTR ds:0x40769c
  4289d3:	call   0x4063b0
  4289d8:	add    esp,0x4
  4289db:	mov    edx,DWORD PTR [ebp-0x4]
  4289de:	mov    eax,DWORD PTR [ebp-0x8]
  4289e1:	mov    ecx,DWORD PTR [eax]
  4289e3:	call   DWORD PTR [ecx+0x74]
  4289e6:	mov    eax,edi
  4289e8:	cdq    
  4289e9:	sub    DWORD PTR [ebp+0x8],eax
  4289ec:	sbb    DWORD PTR [ebp+0xc],edx
  4289ef:	cmp    DWORD PTR [ebp+0xc],0x0
  4289f3:	jne    0x428a01
  4289f5:	cmp    DWORD PTR [ebp+0x8],0x0
  4289f9:	ja     0x428944
  4289ff:	jmp    0x428a07
  428a01:	jg     0x428944
  428a07:	xor    eax,eax
  428a09:	pop    edx
  428a0a:	pop    ecx
  428a0b:	pop    ecx
  428a0c:	mov    DWORD PTR fs:[eax],edx
  428a0f:	push   0x428a34
  428a14:	mov    dl,0x1
  428a16:	mov    eax,DWORD PTR [ebp-0x8]
  428a19:	mov    ecx,DWORD PTR [eax]
  428a1b:	call   DWORD PTR [ecx+0x3c]
  428a1e:	lea    eax,[ebp-0x4]
  428a21:	mov    edx,DWORD PTR ds:0x40769c
  428a27:	call   0x4063bc
  428a2c:	ret    
  428a2d:	jmp    0x40481c
  428a32:	jmp    0x428a14
  428a34:	xor    eax,eax
  428a36:	pop    edx
  428a37:	pop    ecx
  428a38:	pop    ecx
  428a39:	mov    DWORD PTR fs:[eax],edx
  428a3c:	push   0x428a5f
  428a41:	lea    eax,[ebp-0xc]
  428a44:	call   0x404f88
  428a49:	lea    eax,[ebp-0x4]
  428a4c:	mov    edx,DWORD PTR ds:0x40769c
  428a52:	call   0x4063bc
  428a57:	ret    
  428a58:	jmp    0x40481c
  428a5d:	jmp    0x428a41
  428a5f:	pop    edi
  428a60:	pop    esi
  428a61:	pop    ebx
  428a62:	mov    esp,ebp
  428a64:	pop    ebp
  428a65:	ret    0x8
  428a68:	push   ebp
  428a69:	mov    ebp,esp
  428a6b:	push   ecx
  428a6c:	push   ebx
  428a6d:	push   esi
  428a6e:	push   edi
  428a6f:	mov    esi,ecx
  428a71:	mov    DWORD PTR [ebp-0x4],edx
  428a74:	mov    ebx,eax
  428a76:	cmp    DWORD PTR [ebx+0x98],0x0
  428a7d:	jne    0x428a93
  428a7f:	mov    ecx,0x4f2
  428a84:	mov    edx,0x428b20
  428a89:	mov    eax,0x428b58
  428a8e:	call   0x404eb4
  428a93:	test   esi,esi
  428a95:	jle    0x428ad6
  428a97:	jmp    0x428ab2
  428a99:	push   0x1
  428a9b:	or     ecx,0xffffffff
  428a9e:	xor    edx,edx
  428aa0:	mov    eax,ebx
  428aa2:	mov    edi,DWORD PTR [eax]
  428aa4:	call   DWORD PTR [edi+0x58]
  428aa7:	mov    cl,0x1
  428aa9:	mov    dl,0x1
  428aab:	mov    eax,ebx
  428aad:	mov    edi,DWORD PTR [eax]
  428aaf:	call   DWORD PTR [edi+0x64]
  428ab2:	mov    eax,DWORD PTR [ebx+0x98]
  428ab8:	cmp    esi,DWORD PTR [eax+0x20]
  428abb:	jg     0x428a99
  428abd:	movzx  eax,BYTE PTR [ebp+0x8]
  428ac1:	push   eax
  428ac2:	push   0xffffffff
  428ac4:	mov    edx,DWORD PTR [ebp-0x4]
  428ac7:	mov    ecx,esi
  428ac9:	mov    eax,DWORD PTR [ebx+0x98]
  428acf:	call   0x426254
  428ad4:	jmp    0x428b0d
  428ad6:	inc    esi
  428ad7:	jne    0x428b0d
  428ad9:	push   0x0
  428adb:	mov    ecx,DWORD PTR [ebx+0xb8]
  428ae1:	xor    edx,edx
  428ae3:	mov    eax,ebx
  428ae5:	mov    esi,DWORD PTR [eax]
  428ae7:	call   DWORD PTR [esi+0x58]
  428aea:	mov    cl,0x1
  428aec:	mov    dl,0x1
  428aee:	mov    eax,ebx
  428af0:	mov    esi,DWORD PTR [eax]
  428af2:	call   DWORD PTR [esi+0x64]
  428af5:	movzx  eax,BYTE PTR [ebp+0x8]
  428af9:	push   eax
  428afa:	push   0xffffffff
  428afc:	mov    edx,DWORD PTR [ebp-0x4]
  428aff:	or     ecx,0xffffffff
  428b02:	mov    eax,DWORD PTR [ebx+0x98]
  428b08:	call   0x426254
  428b0d:	pop    edi
  428b0e:	pop    esi
  428b0f:	pop    ebx
  428b10:	pop    ecx
  428b11:	pop    ebp
  428b12:	ret    0x4
  428b15:	add    BYTE PTR [eax],al
  428b17:	add    bh,bh
  428b19:	(bad)  
  428b1a:	(bad)  
  428b1b:	jmp    FWORD PTR [edi]
  428b1d:	add    BYTE PTR [eax],al
  428b1f:	add    BYTE PTR [ebx+0x3a],al
  428b22:	pop    esp
  428b23:	bound  esi,QWORD PTR [ebp+0x69]
  428b26:	ins    BYTE PTR es:[edi],dx
  428b27:	fs jae 0x428b86
  428b2a:	push   esp
  428b2b:	jo     0x428b6e
  428b2d:	fs outs dx,DWORD PTR fs:[esi]
  428b30:	outs   dx,BYTE PTR ds:[esi]
  428b31:	jae    0x428b8f
  428b33:	dec    ecx
  428b34:	outs   dx,BYTE PTR ds:[esi]
  428b35:	fs jns 0x428b86
  428b38:	gs je  0x428b97
  428b3b:	inc    ebx
  428b3c:	outs   dx,DWORD PTR ds:[esi]
  428b3d:	jb     0x428ba4
  428b3f:	pop    esp
  428b40:	dec    ecx
  428b41:	fs dec ecx
  428b43:	dec    edi
  428b44:	dec    eax
  428b45:	popa   
  428b46:	outs   dx,BYTE PTR ds:[esi]
  428b47:	fs ins BYTE PTR es:[edi],dx
  428b49:	gs jb  0x428b7a
  428b4c:	jo     0x428baf
  428b4e:	jae    0x428b50
  428b50:	(bad)  
  428b51:	(bad)  
  428b52:	(bad)  
  428b53:	call   DWORD PTR [ecx]
  428b55:	add    BYTE PTR [eax],al
  428b57:	add    BYTE PTR [ecx+0x73],al
  428b5a:	jae    0x428bc1
  428b5c:	jb     0x428bd2
  428b5e:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  428b65:	ins    BYTE PTR es:[edi],dx
  428b66:	jne    0x428bda
  428b68:	add    BYTE PTR gs:[eax],al
  428b6b:	add    BYTE PTR [ebp-0x75],dl
  428b6e:	in     al,dx
  428b6f:	push   0x0
  428b71:	push   ebx
  428b72:	push   esi
  428b73:	mov    esi,edx
  428b75:	mov    ebx,eax
  428b77:	xor    eax,eax
  428b79:	push   ebp
  428b7a:	push   0x428bb7
  428b7f:	push   DWORD PTR fs:[eax]
  428b82:	mov    DWORD PTR fs:[eax],esp
  428b85:	lea    eax,[ebp-0x4]
  428b88:	mov    ecx,0x428bcc
  428b8d:	mov    edx,esi
  428b8f:	call   0x4052a0
  428b94:	mov    edx,DWORD PTR [ebp-0x4]
  428b97:	mov    eax,ebx
  428b99:	mov    ecx,DWORD PTR [eax]
  428b9b:	call   DWORD PTR [ecx+0x84]
  428ba1:	xor    eax,eax
  428ba3:	pop    edx
  428ba4:	pop    ecx
  428ba5:	pop    ecx
  428ba6:	mov    DWORD PTR fs:[eax],edx
  428ba9:	push   0x428bbe
  428bae:	lea    eax,[ebp-0x4]
  428bb1:	call   0x404f88
  428bb6:	ret    
  428bb7:	jmp    0x40481c
  428bbc:	jmp    0x428bae
  428bbe:	pop    esi
  428bbf:	pop    ebx
  428bc0:	pop    ecx
  428bc1:	pop    ebp
  428bc2:	ret    
  428bc3:	add    bh,bh
  428bc5:	(bad)  
  428bc6:	(bad)  
  428bc7:	inc    DWORD PTR [edx]
  428bc9:	add    BYTE PTR [eax],al
  428bcb:	add    BYTE PTR ds:0x3300000a,cl
  428bd1:	rol    bl,0x90
  428bd4:	push   ebx
  428bd5:	push   esi
  428bd6:	mov    esi,edx
  428bd8:	mov    ebx,eax
  428bda:	lea    eax,[ebx+0x94]
  428be0:	mov    edx,esi
  428be2:	call   0x404fdc
  428be7:	pop    esi
  428be8:	pop    ebx
  428be9:	ret    
  428bea:	mov    eax,eax
  428bec:	mov    DWORD PTR [eax+0xb0],edx
  428bf2:	ret    
  428bf3:	nop
  428bf4:	push   ebx
  428bf5:	push   esi
  428bf6:	mov    ebx,eax
  428bf8:	xor    ecx,ecx
  428bfa:	xor    edx,edx
  428bfc:	mov    eax,ebx
  428bfe:	mov    esi,DWORD PTR [eax]
  428c00:	call   DWORD PTR [esi+0x64]
  428c03:	cmp    BYTE PTR [ebx+0x89],0x0
  428c0a:	jne    0x428c15
  428c0c:	cmp    DWORD PTR [ebx+0x98],0x0
  428c13:	jne    0x428c20
  428c15:	mov    eax,ebx
  428c17:	call   0x429578
  428c1c:	test   al,al
  428c1e:	jne    0x428c29
  428c20:	cmp    BYTE PTR [ebx+0xac],0x0
  428c27:	jne    0x428c2e
  428c29:	xor    eax,eax
  428c2b:	pop    esi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	mov    al,0x1
  428c30:	pop    esi
  428c31:	pop    ebx
  428c32:	ret    
  428c33:	nop
  428c34:	push   ebp
  428c35:	mov    ebp,esp
  428c37:	add    esp,0xfffffff8
  428c3a:	push   ebx
  428c3b:	mov    ebx,eax
  428c3d:	mov    eax,ebx
  428c3f:	call   0x4163e4
  428c44:	mov    DWORD PTR [ebp-0x8],eax
  428c47:	mov    DWORD PTR [ebp-0x4],edx
  428c4a:	push   DWORD PTR [ebp+0xc]
  428c4d:	push   DWORD PTR [ebp+0x8]
  428c50:	mov    eax,ebx
  428c52:	call   0x416468
  428c57:	mov    eax,ebx
  428c59:	call   0x4163e4
  428c5e:	cmp    edx,DWORD PTR [ebp-0x4]
  428c61:	jne    0x428c66
  428c63:	cmp    eax,DWORD PTR [ebp-0x8]
  428c66:	je     0x428c75
  428c68:	push   DWORD PTR [ebp-0x4]
  428c6b:	push   DWORD PTR [ebp-0x8]
  428c6e:	mov    eax,ebx
  428c70:	call   0x416404
  428c75:	pop    ebx
  428c76:	pop    ecx
  428c77:	pop    ecx
  428c78:	pop    ebp
  428c79:	ret    0x8
  428c7c:	push   ebp
  428c7d:	mov    ebp,esp
  428c7f:	add    esp,0xffffffe0
  428c82:	push   ebx
  428c83:	push   esi
  428c84:	push   edi
  428c85:	xor    ebx,ebx
  428c87:	mov    DWORD PTR [ebp-0x4],ebx
  428c8a:	mov    BYTE PTR [ebp-0xd],cl
  428c8d:	mov    DWORD PTR [ebp-0xc],edx
  428c90:	mov    DWORD PTR [ebp-0x8],eax
  428c93:	xor    eax,eax
  428c95:	push   ebp
  428c96:	push   0x428fa6
  428c9b:	push   DWORD PTR fs:[eax]
  428c9e:	mov    DWORD PTR fs:[eax],esp
  428ca1:	cmp    DWORD PTR [ebp-0xc],0x0
  428ca5:	jne    0x428cbb
  428ca7:	mov    ecx,0x540
  428cac:	mov    edx,0x428fc0
  428cb1:	mov    eax,0x428ff8
  428cb6:	call   0x404eb4
  428cbb:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  428cbf:	jne    0x428cfc
  428cc1:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  428cc5:	jne    0x428cfc
  428cc7:	cmp    BYTE PTR [ebp-0xd],0x0
  428ccb:	jne    0x428cfc
  428ccd:	mov    eax,DWORD PTR [ebp-0x8]
  428cd0:	cmp    BYTE PTR [eax+0x88],0x0
  428cd7:	je     0x428ceb
  428cd9:	mov    dl,0x1
  428cdb:	mov    eax,DWORD PTR [ebp-0x8]
  428cde:	call   0x428498
  428ce3:	mov    DWORD PTR [ebp+0x8],eax
  428ce6:	mov    DWORD PTR [ebp+0xc],edx
  428ce9:	jmp    0x428cfc
  428ceb:	mov    dl,0x1
  428ced:	mov    eax,DWORD PTR [ebp-0x8]
  428cf0:	call   0x428424
  428cf5:	cdq    
  428cf6:	mov    DWORD PTR [ebp+0x8],eax
  428cf9:	mov    DWORD PTR [ebp+0xc],edx
  428cfc:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  428d00:	jne    0x428d0a
  428d02:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  428d06:	jbe    0x428d2b
  428d08:	jmp    0x428d0c
  428d0a:	jle    0x428d2b
  428d0c:	mov    eax,DWORD PTR [ebp-0xc]
  428d0f:	call   0x4163e4
  428d14:	add    eax,DWORD PTR [ebp+0x8]
  428d17:	adc    edx,DWORD PTR [ebp+0xc]
  428d1a:	jno    0x428d21
  428d1c:	call   0x403f70
  428d21:	push   edx
  428d22:	push   eax
  428d23:	mov    eax,DWORD PTR [ebp-0xc]
  428d26:	call   0x428c34
  428d2b:	cmp    BYTE PTR [ebp-0xd],0x0
  428d2f:	je     0x428d4f
  428d31:	mov    DWORD PTR [ebp-0x20],0xffffffff
  428d38:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
  428d3f:	push   0x0
  428d41:	push   0x0
  428d43:	xor    edx,edx
  428d45:	mov    eax,DWORD PTR [ebp-0x8]
  428d48:	mov    ecx,DWORD PTR [eax]
  428d4a:	call   DWORD PTR [ecx+0x34]
  428d4d:	jmp    0x428d6b
  428d4f:	mov    eax,DWORD PTR [ebp+0x8]
  428d52:	mov    DWORD PTR [ebp-0x20],eax
  428d55:	mov    eax,DWORD PTR [ebp+0xc]
  428d58:	mov    DWORD PTR [ebp-0x1c],eax
  428d5b:	push   DWORD PTR [ebp-0x1c]
  428d5e:	push   DWORD PTR [ebp-0x20]
  428d61:	xor    edx,edx
  428d63:	mov    eax,DWORD PTR [ebp-0x8]
  428d66:	mov    ecx,DWORD PTR [eax]
  428d68:	call   DWORD PTR [ecx+0x34]
  428d6b:	xor    eax,eax
  428d6d:	push   ebp
  428d6e:	push   0x428f83
  428d73:	push   DWORD PTR fs:[eax]
  428d76:	mov    DWORD PTR fs:[eax],esp
  428d79:	mov    eax,DWORD PTR [ebp-0x8]
  428d7c:	mov    eax,DWORD PTR [eax+0x98]
  428d82:	mov    ebx,DWORD PTR [eax+0x20]
  428d85:	test   ebx,ebx
  428d87:	jle    0x428f03
  428d8d:	mov    eax,ebx
  428d8f:	cdq    
  428d90:	push   edx
  428d91:	push   eax
  428d92:	push   DWORD PTR [ebp-0x1c]
  428d95:	push   DWORD PTR [ebp-0x20]
  428d98:	call   0x41d1f8
  428d9d:	push   eax
  428d9e:	sar    eax,0x1f
  428da1:	cmp    eax,edx
  428da3:	pop    eax
  428da4:	je     0x428dab
  428da6:	call   0x403f68
  428dab:	mov    DWORD PTR [ebp-0x14],eax
  428dae:	push   0xffffffff
  428db0:	mov    eax,DWORD PTR [ebp-0x8]
  428db3:	mov    eax,DWORD PTR [eax+0x98]
  428db9:	mov    ecx,DWORD PTR [ebp-0x14]
  428dbc:	mov    edx,DWORD PTR [ebp-0xc]
  428dbf:	call   0x426348
  428dc4:	mov    eax,DWORD PTR [ebp-0x14]
  428dc7:	cdq    
  428dc8:	sub    DWORD PTR [ebp-0x20],eax
  428dcb:	sbb    DWORD PTR [ebp-0x1c],edx
  428dce:	jmp    0x428f03
  428dd3:	push   DWORD PTR [ebp-0x1c]
  428dd6:	push   DWORD PTR [ebp-0x20]
  428dd9:	mov    eax,DWORD PTR [ebp-0x8]
  428ddc:	mov    eax,DWORD PTR [eax+0xc0]
  428de2:	cdq    
  428de3:	push   edx
  428de4:	push   eax
  428de5:	call   0x41d1f8
  428dea:	push   eax
  428deb:	sar    eax,0x1f
  428dee:	cmp    eax,edx
  428df0:	pop    eax
  428df1:	je     0x428df8
  428df3:	call   0x403f68
  428df8:	mov    DWORD PTR [ebp-0x14],eax
  428dfb:	xor    eax,eax
  428dfd:	push   ebp
  428dfe:	push   0x428efc
  428e03:	push   DWORD PTR fs:[eax]
  428e06:	mov    DWORD PTR fs:[eax],esp
  428e09:	xor    eax,eax
  428e0b:	push   ebp
  428e0c:	push   0x428e4c
  428e11:	push   DWORD PTR fs:[eax]
  428e14:	mov    DWORD PTR fs:[eax],esp
  428e17:	push   0x0
  428e19:	lea    eax,[ebp-0x4]
  428e1c:	mov    ecx,0x1
  428e21:	mov    edx,DWORD PTR ds:0x40769c
  428e27:	call   0x4063b0
  428e2c:	add    esp,0x4
  428e2f:	push   0x0
  428e31:	lea    edx,[ebp-0x4]
  428e34:	mov    ecx,DWORD PTR [ebp-0x14]
  428e37:	mov    eax,DWORD PTR [ebp-0x8]
  428e3a:	mov    ebx,DWORD PTR [eax]
  428e3c:	call   DWORD PTR [ebx+0xa0]
  428e42:	xor    eax,eax
  428e44:	pop    edx
  428e45:	pop    ecx
  428e46:	pop    ecx
  428e47:	mov    DWORD PTR fs:[eax],edx
  428e4a:	jmp    0x428eca
  428e4c:	jmp    0x404694
  428e51:	add    DWORD PTR [eax],eax
  428e53:	add    BYTE PTR [eax],al
  428e55:	hlt    
  428e56:	jbe    0x428e98
  428e58:	add    BYTE PTR [ebp-0x72],bl
  428e5b:	inc    edx
  428e5c:	add    BYTE PTR [ecx-0x13ba743d],cl
  428e62:	cdq    
  428e63:	push   edx
  428e64:	push   eax
  428e65:	mov    eax,DWORD PTR [ebp-0x8]
  428e68:	mov    eax,DWORD PTR [eax+0x98]
  428e6e:	mov    eax,DWORD PTR [eax+0x20]
  428e71:	cdq    
  428e72:	push   edx
  428e73:	push   eax
  428e74:	call   0x41d1f8
  428e79:	push   eax
  428e7a:	sar    eax,0x1f
  428e7d:	cmp    eax,edx
  428e7f:	pop    eax
  428e80:	je     0x428e87
  428e82:	call   0x403f68
  428e87:	mov    DWORD PTR [ebp-0x14],eax
  428e8a:	push   0x1
  428e8c:	push   0xffffffff
  428e8e:	lea    edx,[ebp-0x4]
  428e91:	mov    eax,DWORD PTR [ebp-0x8]
  428e94:	mov    eax,DWORD PTR [eax+0x98]
  428e9a:	mov    ecx,DWORD PTR [ebp-0x14]
  428e9d:	call   0x426254
  428ea2:	mov    eax,ebx
  428ea4:	mov    edx,DWORD PTR ds:0x41ba10
  428eaa:	call   0x40422c
  428eaf:	and    al,BYTE PTR [ebp-0xd]
  428eb2:	je     0x428ec0
  428eb4:	call   0x404978
  428eb9:	call   0x4049a8
  428ebe:	jmp    0x428f27
  428ec0:	call   0x404924
  428ec5:	call   0x404978
  428eca:	xor    eax,eax
  428ecc:	pop    edx
  428ecd:	pop    ecx
  428ece:	pop    ecx
  428ecf:	mov    DWORD PTR fs:[eax],edx
  428ed2:	push   0x428f03
  428ed7:	cmp    DWORD PTR [ebp-0x14],0x0
  428edb:	jle    0x428efb
  428edd:	mov    eax,DWORD PTR [ebp-0x14]
  428ee0:	push   eax
  428ee1:	mov    ecx,DWORD PTR [ebp-0x4]
  428ee4:	mov    edx,DWORD PTR [ebp-0xc]
  428ee7:	mov    eax,ds:0x41c1fc
  428eec:	call   0x41c378
  428ef1:	mov    eax,DWORD PTR [ebp-0x14]
  428ef4:	cdq    
  428ef5:	sub    DWORD PTR [ebp-0x20],eax
  428ef8:	sbb    DWORD PTR [ebp-0x1c],edx
  428efb:	ret    
  428efc:	jmp    0x40481c
  428f01:	jmp    0x428ed7
  428f03:	mov    eax,DWORD PTR [ebp-0x8]
  428f06:	mov    edx,DWORD PTR [eax]
  428f08:	call   DWORD PTR [edx+0x60]
  428f0b:	test   al,al
  428f0d:	je     0x428f27
  428f0f:	cmp    DWORD PTR [ebp-0x1c],0x0
  428f13:	jne    0x428f21
  428f15:	cmp    DWORD PTR [ebp-0x20],0x0
  428f19:	ja     0x428dd3
  428f1f:	jmp    0x428f27
  428f21:	jg     0x428dd3
  428f27:	xor    eax,eax
  428f29:	pop    edx
  428f2a:	pop    ecx
  428f2b:	pop    ecx
  428f2c:	mov    DWORD PTR fs:[eax],edx
  428f2f:	push   0x428f8a
  428f34:	xor    edx,edx
  428f36:	mov    eax,DWORD PTR [ebp-0x8]
  428f39:	mov    ecx,DWORD PTR [eax]
  428f3b:	call   DWORD PTR [ecx+0x3c]
  428f3e:	mov    eax,DWORD PTR [ebp-0xc]
  428f41:	mov    edx,DWORD PTR [eax]
  428f43:	call   DWORD PTR [edx]
  428f45:	push   edx
  428f46:	push   eax
  428f47:	mov    eax,DWORD PTR [ebp-0xc]
  428f4a:	call   0x4163e4
  428f4f:	cmp    edx,DWORD PTR [esp+0x4]
  428f53:	jne    0x428f5e
  428f55:	cmp    eax,DWORD PTR [esp]
  428f58:	pop    edx
  428f59:	pop    eax
  428f5a:	jae    0x428f74
  428f5c:	jmp    0x428f62
  428f5e:	pop    edx
  428f5f:	pop    eax
  428f60:	jge    0x428f74
  428f62:	mov    eax,DWORD PTR [ebp-0xc]
  428f65:	call   0x4163e4
  428f6a:	push   edx
  428f6b:	push   eax
  428f6c:	mov    eax,DWORD PTR [ebp-0xc]
  428f6f:	call   0x416468
  428f74:	lea    eax,[ebp-0x4]
  428f77:	mov    edx,DWORD PTR ds:0x40769c
  428f7d:	call   0x4063bc
  428f82:	ret    
  428f83:	jmp    0x40481c
  428f88:	jmp    0x428f34
  428f8a:	xor    eax,eax
  428f8c:	pop    edx
  428f8d:	pop    ecx
  428f8e:	pop    ecx
  428f8f:	mov    DWORD PTR fs:[eax],edx
  428f92:	push   0x428fad
  428f97:	lea    eax,[ebp-0x4]
  428f9a:	mov    edx,DWORD PTR ds:0x40769c
  428fa0:	call   0x4063bc
  428fa5:	ret    
  428fa6:	jmp    0x40481c
  428fab:	jmp    0x428f97
  428fad:	pop    edi
  428fae:	pop    esi
  428faf:	pop    ebx
  428fb0:	mov    esp,ebp
  428fb2:	pop    ebp
  428fb3:	ret    0x8
  428fb6:	add    BYTE PTR [eax],al
  428fb8:	(bad)  
  428fb9:	(bad)  
  428fba:	(bad)  
  428fbb:	jmp    FWORD PTR [edi]
  428fbd:	add    BYTE PTR [eax],al
  428fbf:	add    BYTE PTR [ebx+0x3a],al
  428fc2:	pop    esp
  428fc3:	bound  esi,QWORD PTR [ebp+0x69]
  428fc6:	ins    BYTE PTR es:[edi],dx
  428fc7:	fs jae 0x429026
  428fca:	push   esp
  428fcb:	jo     0x42900e
  428fcd:	fs outs dx,DWORD PTR fs:[esi]
  428fd0:	outs   dx,BYTE PTR ds:[esi]
  428fd1:	jae    0x42902f
  428fd3:	dec    ecx
  428fd4:	outs   dx,BYTE PTR ds:[esi]
  428fd5:	fs jns 0x429026
  428fd8:	gs je  0x429037
  428fdb:	inc    ebx
  428fdc:	outs   dx,DWORD PTR ds:[esi]
  428fdd:	jb     0x429044
  428fdf:	pop    esp
  428fe0:	dec    ecx
  428fe1:	fs dec ecx
  428fe3:	dec    edi
  428fe4:	dec    eax
  428fe5:	popa   
  428fe6:	outs   dx,BYTE PTR ds:[esi]
  428fe7:	fs ins BYTE PTR es:[edi],dx
  428fe9:	gs jb  0x42901a
  428fec:	jo     0x42904f
  428fee:	jae    0x428ff0
  428ff0:	(bad)  
  428ff1:	(bad)  
  428ff2:	(bad)  
  428ff3:	call   DWORD PTR [ecx]
  428ff5:	add    BYTE PTR [eax],al
  428ff7:	add    BYTE PTR [ecx+0x73],al
  428ffa:	jae    0x429061
  428ffc:	jb     0x429072
  428ffe:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  429005:	ins    BYTE PTR es:[edi],dx
  429006:	jne    0x42907a
  429008:	add    BYTE PTR gs:[eax],al
  42900b:	add    BYTE PTR [ebp-0x75],dl
  42900e:	in     al,dx
  42900f:	push   0x0
  429011:	xor    eax,eax
  429013:	push   ebp
  429014:	push   0x429056
  429019:	push   DWORD PTR fs:[eax]
  42901c:	mov    DWORD PTR fs:[eax],esp
  42901f:	lea    edx,[ebp-0x4]
  429022:	mov    eax,ds:0x46dd14
  429027:	call   0x406f48
  42902c:	mov    ecx,DWORD PTR [ebp-0x4]
  42902f:	mov    dl,0x1
  429031:	mov    eax,ds:0x41ba10
  429036:	call   0x41bdbc
  42903b:	call   0x4048fc
  429040:	xor    eax,eax
  429042:	pop    edx
  429043:	pop    ecx
  429044:	pop    ecx
  429045:	mov    DWORD PTR fs:[eax],edx
  429048:	push   0x42905d
  42904d:	lea    eax,[ebp-0x4]
  429050:	call   0x404f88
  429055:	ret    
  429056:	jmp    0x40481c
  42905b:	jmp    0x42904d
  42905d:	pop    ecx
  42905e:	pop    ebp
  42905f:	ret    
  429060:	push   ebx
  429061:	push   esi
  429062:	push   edi
  429063:	mov    edi,edx
  429065:	mov    ebx,eax
  429067:	mov    ecx,edi
  429069:	mov    esi,DWORD PTR [ebx+0x98]
  42906f:	mov    edx,DWORD PTR [esi+0x20]
  429072:	mov    eax,esi
  429074:	call   0x4261e4
  429079:	pop    edi
  42907a:	pop    esi
  42907b:	pop    ebx
  42907c:	ret    
  42907d:	lea    eax,[eax+0x0]
  429080:	push   ebp
  429081:	mov    ebp,esp
  429083:	add    esp,0xfffffff8
  429086:	push   ebx
  429087:	push   esi
  429088:	push   edi
  429089:	mov    DWORD PTR [ebp-0x8],edx
  42908c:	mov    DWORD PTR [ebp-0x4],eax
  42908f:	mov    eax,DWORD PTR [ebp-0x8]
  429092:	call   0x404f88
  429097:	push   0x0
  429099:	push   0x0
  42909b:	xor    edx,edx
  42909d:	mov    eax,DWORD PTR [ebp-0x4]
  4290a0:	mov    ecx,DWORD PTR [eax]
  4290a2:	call   DWORD PTR [ecx+0x34]
  4290a5:	xor    edx,edx
  4290a7:	push   ebp
  4290a8:	push   0x429148
  4290ad:	push   DWORD PTR fs:[edx]
  4290b0:	mov    DWORD PTR fs:[edx],esp
  4290b3:	mov    eax,DWORD PTR [ebp-0x4]
  4290b6:	mov    edx,DWORD PTR [eax]
  4290b8:	call   DWORD PTR [edx+0x60]
  4290bb:	test   al,al
  4290bd:	je     0x429130
  4290bf:	xor    edx,edx
  4290c1:	push   ebp
  4290c2:	push   0x429126
  4290c7:	push   DWORD PTR fs:[edx]
  4290ca:	mov    DWORD PTR fs:[edx],esp
  4290cd:	xor    edx,edx
  4290cf:	push   ebp
  4290d0:	push   0x429115
  4290d5:	push   DWORD PTR fs:[edx]
  4290d8:	mov    DWORD PTR fs:[edx],esp
  4290db:	push   0x0
  4290dd:	mov    ecx,0xfa
  4290e2:	xor    edx,edx
  4290e4:	mov    eax,DWORD PTR [ebp-0x4]
  4290e7:	mov    ebx,DWORD PTR [eax]
  4290e9:	call   DWORD PTR [ebx+0x58]
  4290ec:	test   eax,eax
  4290ee:	jne    0x4290db
  4290f0:	xor    eax,eax
  4290f2:	pop    edx
  4290f3:	pop    ecx
  4290f4:	pop    ecx
  4290f5:	mov    DWORD PTR fs:[eax],edx
  4290f8:	push   0x42911c
  4290fd:	mov    eax,DWORD PTR [ebp-0x4]
  429100:	call   0x429578
  429105:	test   al,al
  429107:	jne    0x429114
  429109:	mov    edx,DWORD PTR [ebp-0x8]
  42910c:	mov    eax,DWORD PTR [ebp-0x4]
  42910f:	call   0x429060
  429114:	ret    
  429115:	jmp    0x40481c
  42911a:	jmp    0x4290fd
  42911c:	xor    eax,eax
  42911e:	pop    edx
  42911f:	pop    ecx
  429120:	pop    ecx
  429121:	mov    DWORD PTR fs:[eax],edx
  429124:	jmp    0x429130
  429126:	jmp    0x404568
  42912b:	call   0x404978
  429130:	xor    eax,eax
  429132:	pop    edx
  429133:	pop    ecx
  429134:	pop    ecx
  429135:	mov    DWORD PTR fs:[eax],edx
  429138:	push   0x42914f
  42913d:	xor    edx,edx
  42913f:	mov    eax,DWORD PTR [ebp-0x4]
  429142:	mov    ecx,DWORD PTR [eax]
  429144:	call   DWORD PTR [ecx+0x3c]
  429147:	ret    
  429148:	jmp    0x40481c
  42914d:	jmp    0x42913d
  42914f:	pop    edi
  429150:	pop    esi
  429151:	pop    ebx
  429152:	pop    ecx
  429153:	pop    ecx
  429154:	pop    ebp
  429155:	ret    
  429156:	mov    eax,eax
  429158:	push   ebp
  429159:	mov    ebp,esp
  42915b:	push   0x0
  42915d:	push   0x0
  42915f:	push   0x0
  429161:	push   0x0
  429163:	push   0x0
  429165:	push   0x0
  429167:	push   0x0
  429169:	push   ebx
  42916a:	push   esi
  42916b:	push   edi
  42916c:	mov    esi,ecx
  42916e:	mov    edi,edx
  429170:	mov    DWORD PTR [ebp-0x8],eax
  429173:	xor    eax,eax
  429175:	push   ebp
  429176:	push   0x429307
  42917b:	push   DWORD PTR fs:[eax]
  42917e:	mov    DWORD PTR fs:[eax],esp
  429181:	xor    eax,eax
  429183:	mov    DWORD PTR [esi],eax
  429185:	xor    eax,eax
  429187:	mov    DWORD PTR [ebp-0xc],eax
  42918a:	xor    ebx,ebx
  42918c:	mov    eax,edi
  42918e:	mov    edx,DWORD PTR ds:0x412bb8
  429194:	call   0x40422c
  429199:	test   al,al
  42919b:	je     0x4291a1
  42919d:	mov    ebx,edi
  42919f:	jmp    0x4291d1
  4291a1:	mov    eax,edi
  4291a3:	mov    edx,DWORD PTR ds:0x412e08
  4291a9:	call   0x40422c
  4291ae:	test   al,al
  4291b0:	je     0x4291b7
  4291b2:	mov    DWORD PTR [ebp-0xc],edi
  4291b5:	jmp    0x4291d1
  4291b7:	lea    edx,[ebp-0x10]
  4291ba:	mov    eax,ds:0x46da70
  4291bf:	call   0x406f48
  4291c4:	mov    edx,DWORD PTR [ebp-0x10]
  4291c7:	mov    eax,ds:0x42706c
  4291cc:	call   0x41be78
  4291d1:	push   0x0
  4291d3:	push   0x0
  4291d5:	xor    edx,edx
  4291d7:	mov    eax,DWORD PTR [ebp-0x8]
  4291da:	mov    ecx,DWORD PTR [eax]
  4291dc:	call   DWORD PTR [ecx+0x34]
  4291df:	xor    edx,edx
  4291e1:	push   ebp
  4291e2:	push   0x4292dd
  4291e7:	push   DWORD PTR fs:[edx]
  4291ea:	mov    DWORD PTR fs:[edx],esp
  4291ed:	lea    edx,[ebp-0x4]
  4291f0:	mov    eax,DWORD PTR [ebp-0x8]
  4291f3:	call   0x428524
  4291f8:	mov    eax,DWORD PTR [ebp-0x4]
  4291fb:	mov    edx,DWORD PTR [ebp+0xc]
  4291fe:	call   0x4053b0
  429203:	jne    0x42920f
  429205:	call   0x4049a8
  42920a:	jmp    0x4292e4
  42920f:	mov    eax,DWORD PTR [ebp-0x8]
  429212:	mov    eax,DWORD PTR [eax+0xa0]
  429218:	test   eax,eax
  42921a:	jle    0x429241
  42921c:	cmp    eax,DWORD PTR [esi]
  42921e:	jge    0x429241
  429220:	lea    edx,[ebp-0x14]
  429223:	mov    eax,ds:0x46dc64
  429228:	call   0x406f48
  42922d:	mov    ecx,DWORD PTR [ebp-0x14]
  429230:	mov    dl,0x1
  429232:	mov    eax,ds:0x427ac4
  429237:	call   0x41bdbc
  42923c:	call   0x4048fc
  429241:	cmp    BYTE PTR [ebp+0x8],0x0
  429245:	je     0x42927e
  429247:	lea    eax,[ebp-0x18]
  42924a:	push   eax
  42924b:	mov    ecx,0x2
  429250:	mov    edx,0x1
  429255:	mov    eax,DWORD PTR [ebp-0x4]
  429258:	call   0x405480
  42925d:	mov    eax,DWORD PTR [ebp-0x18]
  429260:	mov    edx,0x429320
  429265:	call   0x4053b0
  42926a:	jne    0x42927e
  42926c:	lea    eax,[ebp-0x4]
  42926f:	mov    ecx,0x1
  429274:	mov    edx,0x1
  429279:	call   0x4054c0
  42927e:	add    DWORD PTR [esi],0x1
  429281:	jno    0x429288
  429283:	call   0x403f70
  429288:	test   ebx,ebx
  42928a:	je     0x42929b
  42928c:	mov    edx,DWORD PTR [ebp-0x4]
  42928f:	mov    eax,ebx
  429291:	mov    ecx,DWORD PTR [eax]
  429293:	call   DWORD PTR [ecx+0x38]
  429296:	jmp    0x4291ed
  42929b:	cmp    DWORD PTR [ebp-0xc],0x0
  42929f:	je     0x4291ed
  4292a5:	lea    eax,[ebp-0x1c]
  4292a8:	mov    ecx,0x42932c
  4292ad:	mov    edx,DWORD PTR [ebp-0x4]
  4292b0:	call   0x4052a0
  4292b5:	mov    edx,DWORD PTR [ebp-0x1c]
  4292b8:	mov    eax,DWORD PTR [ebp-0xc]
  4292bb:	call   0x41d8e4
  4292c0:	jmp    0x4291ed
  4292c5:	xor    eax,eax
  4292c7:	pop    edx
  4292c8:	pop    ecx
  4292c9:	pop    ecx
  4292ca:	mov    DWORD PTR fs:[eax],edx
  4292cd:	push   0x4292e4
  4292d2:	xor    edx,edx
  4292d4:	mov    eax,DWORD PTR [ebp-0x8]
  4292d7:	mov    ecx,DWORD PTR [eax]
  4292d9:	call   DWORD PTR [ecx+0x3c]
  4292dc:	ret    
  4292dd:	jmp    0x40481c
  4292e2:	jmp    0x4292d2
  4292e4:	xor    eax,eax
  4292e6:	pop    edx
  4292e7:	pop    ecx
  4292e8:	pop    ecx
  4292e9:	mov    DWORD PTR fs:[eax],edx
  4292ec:	push   0x42930e
  4292f1:	lea    eax,[ebp-0x1c]
  4292f4:	mov    edx,0x4
  4292f9:	call   0x404fac
  4292fe:	lea    eax,[ebp-0x4]
  429301:	call   0x404f88
  429306:	ret    
  429307:	jmp    0x40481c
  42930c:	jmp    0x4292f1
  42930e:	pop    edi
  42930f:	pop    esi
  429310:	pop    ebx
  429311:	mov    esp,ebp
  429313:	pop    ebp
  429314:	ret    0x8
  429317:	add    bh,bh
  429319:	(bad)  
  42931a:	(bad)  
  42931b:	inc    DWORD PTR [edx]
  42931d:	add    BYTE PTR [eax],al
  42931f:	add    BYTE PTR [esi],ch
  429321:	add    BYTE PTR cs:[eax],al
  429324:	(bad)  
  429325:	(bad)  
  429326:	(bad)  
  429327:	inc    DWORD PTR [edx]
  429329:	add    BYTE PTR [eax],al
  42932b:	add    BYTE PTR ds:0x5500000a,cl
  429331:	mov    ebp,esp
  429333:	add    esp,0xffffffe8
  429336:	push   ebx
  429337:	push   esi
  429338:	push   edi
  429339:	xor    ebx,ebx
  42933b:	mov    DWORD PTR [ebp-0x18],ebx
  42933e:	mov    DWORD PTR [ebp-0x14],ebx
  429341:	mov    DWORD PTR [ebp-0x4],ebx
  429344:	mov    BYTE PTR [ebp-0xd],cl
  429347:	mov    DWORD PTR [ebp-0xc],edx
  42934a:	mov    DWORD PTR [ebp-0x8],eax
  42934d:	mov    esi,DWORD PTR [ebp+0x8]
  429350:	xor    eax,eax
  429352:	push   ebp
  429353:	push   0x42955a
  429358:	push   DWORD PTR fs:[eax]
  42935b:	mov    DWORD PTR fs:[eax],esp
  42935e:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  429362:	jne    0x429370
  429364:	mov    eax,DWORD PTR [ebp-0x8]
  429367:	mov    eax,DWORD PTR [eax+0xa8]
  42936d:	mov    DWORD PTR [ebp+0xc],eax
  429370:	mov    eax,esi
  429372:	call   0x404f88
  429377:	mov    eax,DWORD PTR [ebp-0x8]
  42937a:	call   0x4283c8
  42937f:	mov    ebx,eax
  429381:	mov    eax,DWORD PTR [esi]
  429383:	call   0x405248
  429388:	mov    edi,eax
  42938a:	cmp    edi,DWORD PTR [ebp+0xc]
  42938d:	jg     0x4294c2
  429393:	movzx  eax,bl
  429396:	add    eax,0xfffffff8
  429399:	cmp    eax,0x13
  42939c:	ja     0x429482
  4293a2:	movzx  eax,BYTE PTR [eax+0x4293b0]
  4293a9:	jmp    DWORD PTR [eax*4+0x4293c4]
  4293b0:	add    DWORD PTR [edx],eax
  4293b2:	add    eax,DWORD PTR [eax]
  4293b4:	add    BYTE PTR [eax+eax*1],al
	...
  4293c3:	add    eax,0x429482
  4293c8:	fcom   QWORD PTR [ebx-0x6be9ffbe]
  4293ce:	inc    edx
  4293cf:	add    dl,al
  4293d1:	xchg   esp,eax
  4293d2:	inc    edx
  4293d3:	add    dl,al
  4293d5:	xchg   esp,eax
  4293d6:	inc    edx
  4293d7:	add    dl,al
  4293d9:	xchg   esp,eax
  4293da:	inc    edx
  4293db:	add    BYTE PTR [ebp-0x2171f001],al
  4293e1:	add    BYTE PTR [eax],al
  4293e3:	add    BYTE PTR [ebx+0x1ea83d7],cl
  4293e9:	jno    0x4293f0
  4293eb:	call   0x403f70
  4293f0:	mov    eax,esi
  4293f2:	call   0x4056a8
  4293f7:	cmp    BYTE PTR [ebp-0xd],0x0
  4293fb:	je     0x4294c2
  429401:	mov    edx,0x429574
  429406:	mov    eax,DWORD PTR [ebp-0x8]
  429409:	mov    ecx,DWORD PTR [eax]
  42940b:	call   DWORD PTR [ecx+0x84]
  429411:	jmp    0x4294c2
  429416:	cmp    DWORD PTR [ebp+0x10],0x0
  42941a:	jle    0x42945c
  42941c:	mov    eax,edi
  42941e:	cdq    
  42941f:	idiv   DWORD PTR [ebp+0x10]
  429422:	mov    eax,DWORD PTR [ebp+0x10]
  429425:	sub    eax,edx
  429427:	jno    0x42942e
  429429:	call   0x403f70
  42942e:	mov    edi,eax
  429430:	lea    ecx,[ebp-0x4]
  429433:	mov    edx,edi
  429435:	mov    al,0x20
  429437:	call   0x40570c
  42943c:	mov    eax,esi
  42943e:	mov    edx,DWORD PTR [ebp-0x4]
  429441:	call   0x405254
  429446:	cmp    BYTE PTR [ebp-0xd],0x0
  42944a:	je     0x4294c2
  42944c:	mov    edx,DWORD PTR [ebp-0x4]
  42944f:	mov    eax,DWORD PTR [ebp-0x8]
  429452:	mov    ecx,DWORD PTR [eax]
  429454:	call   DWORD PTR [ecx+0x84]
  42945a:	jmp    0x4294c2
  42945c:	lea    eax,[ebp-0x14]
  42945f:	mov    edx,ebx
  429461:	call   0x405170
  429466:	mov    edx,DWORD PTR [ebp-0x14]
  429469:	mov    eax,esi
  42946b:	call   0x405254
  429470:	cmp    BYTE PTR [ebp-0xd],0x0
  429474:	je     0x4294c2
  429476:	mov    edx,ebx
  429478:	mov    eax,DWORD PTR [ebp-0x8]
  42947b:	call   0x4281c0
  429480:	jmp    0x4294c2
  429482:	lea    eax,[ebp-0x18]
  429485:	mov    edx,ebx
  429487:	call   0x405170
  42948c:	mov    edx,DWORD PTR [ebp-0x18]
  42948f:	mov    eax,esi
  429491:	call   0x405254
  429496:	cmp    BYTE PTR [ebp-0xd],0x0
  42949a:	je     0x4294c2
  42949c:	mov    eax,DWORD PTR [ebp-0xc]
  42949f:	call   0x405248
  4294a4:	test   eax,eax
  4294a6:	jne    0x4294b4
  4294a8:	mov    edx,ebx
  4294aa:	mov    eax,DWORD PTR [ebp-0x8]
  4294ad:	call   0x4281c0
  4294b2:	jmp    0x4294c2
  4294b4:	mov    edx,DWORD PTR [ebp-0xc]
  4294b7:	mov    eax,DWORD PTR [ebp-0x8]
  4294ba:	mov    ecx,DWORD PTR [eax]
  4294bc:	call   DWORD PTR [ecx+0x84]
  4294c2:	cmp    bl,0xa
  4294c5:	jne    0x429377
  4294cb:	mov    eax,DWORD PTR [esi]
  4294cd:	call   0x405248
  4294d2:	mov    edi,eax
  4294d4:	jmp    0x4294e0
  4294d6:	sub    edi,0x1
  4294d9:	jno    0x4294e0
  4294db:	call   0x403f70
  4294e0:	test   edi,edi
  4294e2:	jle    0x42951b
  4294e4:	mov    eax,DWORD PTR [esi]
  4294e6:	dec    edi
  4294e7:	test   eax,eax
  4294e9:	je     0x4294f0
  4294eb:	cmp    edi,DWORD PTR [eax-0x4]
  4294ee:	jb     0x4294f5
  4294f0:	call   0x403f68
  4294f5:	inc    edi
  4294f6:	cmp    BYTE PTR [eax+edi*1-0x1],0xd
  4294fb:	je     0x4294d6
  4294fd:	mov    eax,0x1
  429502:	mov    edx,DWORD PTR [esi]
  429504:	dec    eax
  429505:	test   edx,edx
  429507:	je     0x42950e
  429509:	cmp    eax,DWORD PTR [edx-0x4]
  42950c:	jb     0x429513
  42950e:	call   0x403f68
  429513:	inc    eax
  429514:	cmp    BYTE PTR [edx+eax*1-0x1],0xa
  429519:	je     0x4294d6
  42951b:	mov    eax,esi
  42951d:	mov    edx,edi
  42951f:	call   0x4056a8
  429524:	cmp    BYTE PTR [ebp-0xd],0x0
  429528:	je     0x429537
  42952a:	xor    edx,edx
  42952c:	mov    eax,DWORD PTR [ebp-0x8]
  42952f:	mov    ecx,DWORD PTR [eax]
  429531:	call   DWORD PTR [ecx+0x88]
  429537:	xor    eax,eax
  429539:	pop    edx
  42953a:	pop    ecx
  42953b:	pop    ecx
  42953c:	mov    DWORD PTR fs:[eax],edx
  42953f:	push   0x429561
  429544:	lea    eax,[ebp-0x18]
  429547:	mov    edx,0x2
  42954c:	call   0x404fac
  429551:	lea    eax,[ebp-0x4]
  429554:	call   0x404f88
  429559:	ret    
  42955a:	jmp    0x40481c
  42955f:	jmp    0x429544
  429561:	pop    edi
  429562:	pop    esi
  429563:	pop    ebx
  429564:	mov    esp,ebp
  429566:	pop    ebp
  429567:	ret    0xc
  42956a:	add    BYTE PTR [eax],al
  42956c:	(bad)  
  42956d:	(bad)  
  42956e:	(bad)  
  42956f:	inc    DWORD PTR [ebx]
  429571:	add    BYTE PTR [eax],al
  429573:	add    BYTE PTR [eax],cl
  429575:	and    BYTE PTR [eax],cl
  429577:	add    BYTE PTR [ebx+0x9890],cl
  42957d:	add    BYTE PTR [ebp-0x4ffc8a2e],al
  429583:	add    ebx,eax
  429585:	cmp    DWORD PTR [edx+0x20],0x0
  429589:	sete   al
  42958c:	ret    
  42958d:	lea    eax,[eax+0x0]
  429590:	push   ebp
  429591:	mov    ebp,esp
  429593:	push   ecx
  429594:	push   esi
  429595:	mov    DWORD PTR [ebp-0x4],edx
  429598:	mov    esi,eax
  42959a:	mov    eax,DWORD PTR [ebp-0x4]
  42959d:	call   0x406420
  4295a2:	xor    eax,eax
  4295a4:	push   ebp
  4295a5:	push   0x42961c
  4295aa:	push   DWORD PTR fs:[eax]
  4295ad:	mov    DWORD PTR fs:[eax],esp
  4295b0:	mov    eax,DWORD PTR [ebp-0x4]
  4295b3:	call   0x4061f4
  4295b8:	test   eax,eax
  4295ba:	jle    0x429600
  4295bc:	mov    eax,DWORD PTR [esi+0xc8]
  4295c2:	test   eax,eax
  4295c4:	jne    0x4295d2
  4295c6:	lea    edx,[ebp-0x4]
  4295c9:	mov    eax,esi
  4295cb:	mov    ecx,DWORD PTR [eax]
  4295cd:	call   DWORD PTR [ecx+0x78]
  4295d0:	jmp    0x429600
  4295d2:	or     ecx,0xffffffff
  4295d5:	mov    edx,DWORD PTR [ebp-0x4]
  4295d8:	call   0x426518
  4295dd:	mov    edx,DWORD PTR [esi+0xc8]
  4295e3:	mov    edx,DWORD PTR [edx+0x20]
  4295e6:	mov    eax,DWORD PTR [esi+0xcc]
  4295ec:	cmp    edx,eax
  4295ee:	jl     0x429600
  4295f0:	test   eax,eax
  4295f2:	jle    0x429600
  4295f4:	mov    edx,eax
  4295f6:	mov    eax,esi
  4295f8:	mov    ecx,DWORD PTR [eax]
  4295fa:	call   DWORD PTR [ecx+0xbc]
  429600:	xor    eax,eax
  429602:	pop    edx
  429603:	pop    ecx
  429604:	pop    ecx
  429605:	mov    DWORD PTR fs:[eax],edx
  429608:	push   0x429623
  42960d:	lea    eax,[ebp-0x4]
  429610:	mov    edx,DWORD PTR ds:0x40769c
  429616:	call   0x4063bc
  42961b:	ret    
  42961c:	jmp    0x40481c
  429621:	jmp    0x42960d
  429623:	pop    esi
  429624:	pop    ecx
  429625:	pop    ebp
  429626:	ret    
  429627:	nop
  429628:	push   ebp
  429629:	mov    ebp,esp
  42962b:	add    esp,0xffffffe4
  42962e:	push   ebx
  42962f:	push   esi
  429630:	xor    ebx,ebx
  429632:	mov    DWORD PTR [ebp-0x10],ebx
  429635:	mov    DWORD PTR [ebp-0x14],ebx
  429638:	mov    ebx,edx
  42963a:	mov    esi,eax
  42963c:	xor    eax,eax
  42963e:	push   ebp
  42963f:	push   0x42970f
  429644:	push   DWORD PTR fs:[eax]
  429647:	mov    DWORD PTR fs:[eax],esp
  42964a:	push   0x0
  42964c:	lea    eax,[ebp-0x10]
  42964f:	push   eax
  429650:	lea    edx,[ebp-0x14]
  429653:	mov    eax,ds:0x46dbcc
  429658:	call   0x406f48
  42965d:	mov    eax,DWORD PTR [ebp-0x14]
  429660:	push   eax
  429661:	mov    DWORD PTR [ebp-0x1c],ebx
  429664:	mov    BYTE PTR [ebp-0x18],0xb
  429668:	lea    ecx,[ebp-0x1c]
  42966b:	mov    eax,ds:0x41be90
  429670:	pop    edx
  429671:	call   0x41b0d4
  429676:	mov    eax,DWORD PTR [ebp-0x10]
  429679:	push   eax
  42967a:	mov    edx,ebx
  42967c:	mov    eax,ds:0x41be90
  429681:	call   0x41b0cc
  429686:	mov    edx,eax
  429688:	mov    eax,ds:0x4271a0
  42968d:	pop    ecx
  42968e:	call   0x41be3c
  429693:	mov    ecx,ebx
  429695:	mov    dl,0x1
  429697:	mov    eax,ds:0x41c438
  42969c:	call   0x41c604
  4296a1:	mov    DWORD PTR [ebp-0xc],eax
  4296a4:	xor    eax,eax
  4296a6:	push   ebp
  4296a7:	push   0x4296ed
  4296ac:	push   DWORD PTR fs:[eax]
  4296af:	mov    DWORD PTR fs:[eax],esp
  4296b2:	push   0x0
  4296b4:	push   0x0
  4296b6:	xor    ecx,ecx
  4296b8:	mov    edx,DWORD PTR [ebp-0xc]
  4296bb:	mov    eax,esi
  4296bd:	mov    ebx,DWORD PTR [eax]
  4296bf:	call   DWORD PTR [ebx+0x90]
  4296c5:	mov    eax,DWORD PTR [ebp-0xc]
  4296c8:	mov    edx,DWORD PTR [eax]
  4296ca:	call   DWORD PTR [edx]
  4296cc:	mov    DWORD PTR [ebp-0x8],eax
  4296cf:	mov    DWORD PTR [ebp-0x4],edx
  4296d2:	xor    eax,eax
  4296d4:	pop    edx
  4296d5:	pop    ecx
  4296d6:	pop    ecx
  4296d7:	mov    DWORD PTR fs:[eax],edx
  4296da:	push   0x4296f4
  4296df:	lea    edx,[ebp-0xc]
  4296e2:	mov    eax,ds:0x41be90
  4296e7:	call   0x41b14c
  4296ec:	ret    
  4296ed:	jmp    0x40481c
  4296f2:	jmp    0x4296df
  4296f4:	xor    eax,eax
  4296f6:	pop    edx
  4296f7:	pop    ecx
  4296f8:	pop    ecx
  4296f9:	mov    DWORD PTR fs:[eax],edx
  4296fc:	push   0x429716
  429701:	lea    eax,[ebp-0x14]
  429704:	mov    edx,0x2
  429709:	call   0x404fac
  42970e:	ret    
  42970f:	jmp    0x40481c
  429714:	jmp    0x429701
  429716:	mov    eax,DWORD PTR [ebp-0x8]
  429719:	mov    edx,DWORD PTR [ebp-0x4]
  42971c:	pop    esi
  42971d:	pop    ebx
  42971e:	mov    esp,ebp
  429720:	pop    ebp
  429721:	ret    
  429722:	mov    eax,eax
  429724:	mov    BYTE PTR [eax+0x89],0x1
  42972b:	ret    
  42972c:	push   ebx
  42972d:	mov    ebx,eax
  42972f:	mov    eax,ebx
  429731:	call   0x424f1c
  429736:	mov    DWORD PTR [ebx+0xc0],0x8000
  429740:	mov    DWORD PTR [ebx+0xc4],0x8000
  42974a:	mov    DWORD PTR [ebx+0xa8],0x4000
  429754:	mov    DWORD PTR [ebx+0xa0],0xffffffff
  42975e:	mov    BYTE PTR [ebx+0x88],0x0
  429765:	mov    DWORD PTR [ebx+0xb8],0xffffffff
  42976f:	pop    ebx
  429770:	ret    
  429771:	lea    eax,[eax+0x0]
  429774:	or     edx,0xffffffff
  429777:	mov    ecx,DWORD PTR [eax]
  429779:	call   DWORD PTR [ecx+0xbc]
  42977f:	ret    
  429780:	or     edx,0xffffffff
  429783:	mov    ecx,DWORD PTR [eax]
  429785:	call   DWORD PTR [ecx+0xc0]
  42978b:	ret    
  42978c:	push   ebx
  42978d:	push   esi
  42978e:	push   edi
  42978f:	mov    esi,edx
  429791:	mov    ebx,eax
  429793:	mov    cl,0x1
  429795:	mov    dl,0x1
  429797:	mov    eax,ebx
  429799:	mov    edi,DWORD PTR [eax]
  42979b:	call   DWORD PTR [edi+0x64]
  42979e:	mov    eax,DWORD PTR [ebx+0x9c]
  4297a4:	test   eax,eax
  4297a6:	je     0x4297af
  4297a8:	mov    edx,esi
  4297aa:	mov    ecx,DWORD PTR [eax]
  4297ac:	call   DWORD PTR [ecx+0x40]
  4297af:	pop    edi
  4297b0:	pop    esi
  4297b1:	pop    ebx
  4297b2:	ret    
  4297b3:	nop
  4297b4:	push   ebp
  4297b5:	mov    ebp,esp
  4297b7:	xor    eax,eax
  4297b9:	push   ebp
  4297ba:	push   0x4297ea
  4297bf:	push   DWORD PTR fs:[eax]
  4297c2:	mov    DWORD PTR fs:[eax],esp
  4297c5:	inc    DWORD PTR ds:0x472bc4
  4297cb:	jne    0x4297dc
  4297cd:	mov    edx,0x461b80
  4297d2:	mov    eax,ds:0x41be90
  4297d7:	call   0x41b14c
  4297dc:	xor    eax,eax
  4297de:	pop    edx
  4297df:	pop    ecx
  4297e0:	pop    ecx
  4297e1:	mov    DWORD PTR fs:[eax],edx
  4297e4:	push   0x4297f1
  4297e9:	ret    
  4297ea:	jmp    0x40481c
  4297ef:	jmp    0x4297e9
  4297f1:	pop    ebp
  4297f2:	ret    
  4297f3:	nop
  4297f4:	inc    eax
  4297f5:	cwde   
  4297f6:	inc    edx
	...
  429813:	add    BYTE PTR [eax+ebx*4+0x42],al
  429817:	add    BYTE PTR [eax+eax*1],cl
  42981a:	add    BYTE PTR [eax],al
  42981c:	dec    esp
  42981d:	mov    ecx,0x42d00041
  429822:	inc    eax
  429823:	add    ah,bl
  429825:	inc    edx
  429826:	inc    eax
  429827:	add    al,ah
  429829:	inc    edx
  42982a:	inc    eax
  42982b:	add    ah,ah
  42982d:	inc    edx
  42982e:	inc    eax
  42982f:	add    al,bl
  429831:	inc    edx
  429832:	inc    eax
  429833:	add    BYTE PTR [eax],bh
  429835:	inc    eax
  429836:	inc    eax
  429837:	add    BYTE PTR [eax+eax*2+0x40],dl
  42983b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  429841:	mov    ebp,0x451f0041
  429846:	dec    ecx
  429847:	fs push esp
  429849:	jb     0x4298ac
  42984b:	outs   dx,BYTE PTR ds:[esi]
  42984c:	jae    0x4298be
  42984e:	popa   
  42984f:	jb     0x4298b6
  429851:	outs   dx,BYTE PTR ds:[esi]
  429852:	je     0x4298a4
  429854:	jb     0x4298c5
  429856:	js     0x4298d1
  429858:	inc    ebx
  429859:	imul   esi,DWORD PTR [edx+0x63],0x72616c75
  429860:	dec    esp
  429861:	imul   ebp,DWORD PTR [esi+0x6b],0x4298b0
	...
  429884:	mov    ah,0x98
  429886:	inc    edx
  429887:	add    BYTE PTR [eax+eax*1],cl
  42988a:	add    BYTE PTR [eax],al
  42988c:	dec    esp
  42988d:	mov    ecx,0x42d00041
  429892:	inc    eax
  429893:	add    ah,bl
  429895:	inc    edx
  429896:	inc    eax
  429897:	add    al,ah
  429899:	inc    edx
  42989a:	inc    eax
  42989b:	add    ah,ah
  42989d:	inc    edx
  42989e:	inc    eax
  42989f:	add    al,bl
  4298a1:	inc    edx
  4298a2:	inc    eax
  4298a3:	add    BYTE PTR [eax],bh
  4298a5:	inc    eax
  4298a6:	inc    eax
  4298a7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4298ab:	add    BYTE PTR [eax-0x43ffbfc0],dl
  4298b1:	mov    ebp,0x45220041
  4298b6:	dec    ecx
  4298b7:	fs push esp
  4298b9:	jb     0x42991c
  4298bb:	outs   dx,BYTE PTR ds:[esi]
  4298bc:	jae    0x42992e
  4298be:	popa   
  4298bf:	jb     0x429926
  4298c1:	outs   dx,BYTE PTR ds:[esi]
  4298c2:	je     0x429914
  4298c4:	jb     0x429935
  4298c6:	js     0x429941
  4298c8:	push   ebp
  4298c9:	inc    esp
  4298ca:	push   eax
  4298cb:	dec    esi
  4298cc:	outs   dx,DWORD PTR ds:[esi]
  4298cd:	je     0x429922
  4298cf:	jne    0x429941
  4298d1:	jo     0x429942
  4298d3:	jb     0x429949
  4298d5:	gs fs nop
  4298d8:	and    al,0x99
  4298da:	inc    edx
	...
  4298e3:	add    BYTE PTR [eax-0x37ffbd67],cl
  4298e9:	cdq    
  4298ea:	inc    edx
	...
  4298f7:	add    BYTE PTR [edx-0x5fffbd67],ch
  4298fd:	add    BYTE PTR [eax],al
  4298ff:	add    al,bl
  429901:	dec    ebx
  429902:	inc    edx
  429903:	add    BYTE PTR [eax],bl
  429905:	test   eax,0x42dc0041
  42990a:	inc    eax
  42990b:	add    BYTE PTR [eax-0x1bffbe5e],ch
  429911:	inc    edx
  429912:	inc    eax
  429913:	add    al,bl
  429915:	inc    edx
  429916:	inc    eax
  429917:	add    BYTE PTR [eax],bh
  429919:	inc    eax
  42991a:	inc    eax
  42991b:	add    BYTE PTR [eax+eax*2+0x40],dl
  42991f:	add    ah,al
  429921:	dec    esp
  429922:	inc    edx
  429923:	add    BYTE PTR [eax],cl
  429925:	call   0x41:0xa5700042
  42992c:	test   BYTE PTR [eax+0x41],al
  42992f:	add    BYTE PTR [eax-0x5a],cl
  429932:	inc    ecx
  429933:	add    BYTE PTR [ebx+ebx*4-0x59a7ffbe],dh
  42993a:	inc    ecx
  42993b:	add    BYTE PTR [eax-0x59],dl
  42993e:	inc    ecx
  42993f:	add    BYTE PTR [eax],dh
  429941:	test   eax,0xa6680041
  429946:	inc    ecx
  429947:	add    BYTE PTR [eax-0x5a],ah
  42994a:	inc    ecx
  42994b:	add    BYTE PTR [eax],bh
  42994d:	test   eax,0x46bc0041
  429952:	inc    edx
  429953:	add    BYTE PTR [edi+ecx*2],bl
  429956:	inc    edx
  429957:	add    ah,al
  429959:	dec    ebp
  42995a:	inc    edx
  42995b:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42995f:	add    ah,cl
  429961:	dec    esi
  429962:	inc    edx
  429963:	add    BYTE PTR [eax],bh
  429965:	xor    eax,DWORD PTR [eax+0x0]
  429968:	mov    al,0x9b
  42996a:	inc    edx
  42996b:	add    BYTE PTR [eax],bh
  42996d:	xor    eax,DWORD PTR [eax+0x0]
  429970:	add    BYTE PTR [ebp-0x6353ffbe],bl
  429976:	inc    edx
  429977:	add    BYTE PTR [eax-0x63],bl
  42997a:	inc    edx
  42997b:	add    BYTE PTR [ebp+ebx*4-0x64a7ffbe],dh
  429982:	inc    edx
  429983:	add    BYTE PTR [eax],al
  429985:	fwait
  429986:	inc    edx
  429987:	add    BYTE PTR [esi],cl
  429989:	add    BYTE PTR [eax],al
  42998b:	add    BYTE PTR [eax],al
  42998d:	add    BYTE PTR [ebx],al
  42998f:	add    BYTE PTR [eax],al
  429991:	add    BYTE PTR [eax+edx*1+0x880040],al
  429998:	add    BYTE PTR [eax],al
  42999a:	test   BYTE PTR [eax],dl
  42999c:	inc    eax
  42999d:	add    BYTE PTR [eax+eax*1+0x10840000],cl
  4299a4:	inc    eax
  4299a5:	add    BYTE PTR [eax+0x19000000],bl
  4299ab:	push   esp
  4299ac:	dec    ecx
  4299ad:	fs inc ebx
  4299af:	jne    0x429a24
  4299b1:	je     0x429a22
  4299b3:	ins    DWORD PTR es:[edi],dx
  4299b4:	push   esp
  4299b5:	jb     0x429a18
  4299b7:	outs   dx,BYTE PTR ds:[esi]
  4299b8:	jae    0x429a2a
  4299ba:	popa   
  4299bb:	jb     0x429a22
  4299bd:	outs   dx,BYTE PTR ds:[esi]
  4299be:	je     0x429a10
  4299c0:	jb     0x429a31
  4299c2:	js     0x429a3d
  4299c4:	enter  0x4299,0x0
  4299c8:	pop    es
  4299c9:	sbb    DWORD PTR [ecx+ecx*2+0x64],edx
  4299cd:	inc    ebx
  4299ce:	jne    0x429a43
  4299d0:	je     0x429a41
  4299d2:	ins    DWORD PTR es:[edi],dx
  4299d3:	push   esp
  4299d4:	jb     0x429a37
  4299d6:	outs   dx,BYTE PTR ds:[esi]
  4299d7:	jae    0x429a49
  4299d9:	popa   
  4299da:	jb     0x429a41
  4299dc:	outs   dx,BYTE PTR ds:[esi]
  4299dd:	je     0x429a2f
  4299df:	jb     0x429a50
  4299e1:	js     0x429a5c
  4299e3:	and    al,0x99
  4299e5:	inc    edx
  4299e6:	add    BYTE PTR [esp+ecx*2+0x42],dh
  4299ea:	add    BYTE PTR [ebx],al
  4299ec:	add    BYTE PTR [eax],bl
  4299ee:	dec    ecx
  4299ef:	fs inc ebx
  4299f1:	jne    0x429a66
  4299f3:	je     0x429a64
  4299f5:	ins    DWORD PTR es:[edi],dx
  4299f6:	push   esp
  4299f7:	jb     0x429a5a
  4299f9:	outs   dx,BYTE PTR ds:[esi]
  4299fa:	jae    0x429a6c
  4299fc:	popa   
  4299fd:	jb     0x429a64
  4299ff:	outs   dx,BYTE PTR ds:[esi]
  429a00:	je     0x429a52
  429a02:	jb     0x429a73
  429a04:	js     0x429a7f
  429a06:	add    BYTE PTR [eax],al
  429a08:	push   ebx
  429a09:	push   esi
  429a0a:	push   edi
  429a0b:	mov    esi,edx
  429a0d:	mov    ebx,eax
  429a0f:	mov    eax,esi
  429a11:	mov    edx,DWORD PTR ds:0x4298d8
  429a17:	call   0x40422c
  429a1c:	test   al,al
  429a1e:	je     0x429a70
  429a20:	mov    edi,esi
  429a22:	lea    eax,[edi+0x88]
  429a28:	mov    edx,DWORD PTR [ebx+0x88]
  429a2e:	call   0x404fdc
  429a33:	lea    eax,[edi+0x8c]
  429a39:	mov    edx,DWORD PTR [ebx+0x8c]
  429a3f:	call   0x404fdc
  429a44:	mov    eax,DWORD PTR [ebx+0x90]
  429a4a:	mov    DWORD PTR [edi+0x90],eax
  429a50:	movzx  eax,BYTE PTR [ebx+0x94]
  429a57:	mov    BYTE PTR [edi+0x94],al
  429a5d:	lea    eax,[edi+0x98]
  429a63:	mov    edx,DWORD PTR [ebx+0x98]
  429a69:	call   0x404fdc
  429a6e:	jmp    0x429a79
  429a70:	mov    edx,esi
  429a72:	mov    eax,ebx
  429a74:	call   0x414168
  429a79:	pop    edi
  429a7a:	pop    esi
  429a7b:	pop    ebx
  429a7c:	ret    
  429a7d:	lea    eax,[eax+0x0]
  429a80:	push   ebp
  429a81:	mov    ebp,esp
  429a83:	add    esp,0xfffffff8
  429a86:	push   ebx
  429a87:	push   esi
  429a88:	mov    DWORD PTR [ebp-0x8],ecx
  429a8b:	mov    DWORD PTR [ebp-0x4],edx
  429a8e:	mov    ebx,eax
  429a90:	mov    esi,DWORD PTR [ebx+0x9c]
  429a96:	test   esi,esi
  429a98:	je     0x429ae0
  429a9a:	mov    eax,esi
  429a9c:	mov    edx,DWORD PTR [eax]
  429a9e:	call   DWORD PTR [edx+0x40]
  429aa1:	test   al,al
  429aa3:	je     0x429ae0
  429aa5:	mov    eax,DWORD PTR [ebx+0x9c]
  429aab:	mov    edx,DWORD PTR [eax+0x90]
  429ab1:	push   edx
  429ab2:	push   0x0
  429ab4:	mov    ecx,DWORD PTR [eax+0x88]
  429aba:	mov    edx,DWORD PTR [ebp-0x4]
  429abd:	mov    eax,ebx
  429abf:	mov    esi,DWORD PTR [eax]
  429ac1:	call   DWORD PTR [esi+0x48]
  429ac4:	mov    eax,DWORD PTR [ebp+0xc]
  429ac7:	push   eax
  429ac8:	movzx  eax,BYTE PTR [ebp+0x8]
  429acc:	push   eax
  429acd:	mov    ecx,DWORD PTR [ebp-0x8]
  429ad0:	mov    edx,DWORD PTR [ebp-0x4]
  429ad3:	mov    eax,DWORD PTR [ebx+0x9c]
  429ad9:	call   0x429a80
  429ade:	jmp    0x429af6
  429ae0:	mov    eax,DWORD PTR [ebp+0xc]
  429ae3:	push   eax
  429ae4:	movzx  eax,BYTE PTR [ebp+0x8]
  429ae8:	push   eax
  429ae9:	mov    ecx,DWORD PTR [ebp-0x8]
  429aec:	mov    edx,DWORD PTR [ebp-0x4]
  429aef:	mov    eax,ebx
  429af1:	mov    ebx,DWORD PTR [eax]
  429af3:	call   DWORD PTR [ebx+0x48]
  429af6:	pop    esi
  429af7:	pop    ebx
  429af8:	pop    ecx
  429af9:	pop    ecx
  429afa:	pop    ebp
  429afb:	ret    0x8
  429afe:	mov    eax,eax
  429b00:	push   ebp
  429b01:	mov    ebp,esp
  429b03:	push   0x0
  429b05:	push   ebx
  429b06:	xor    eax,eax
  429b08:	push   ebp
  429b09:	push   0x429b4b
  429b0e:	push   DWORD PTR fs:[eax]
  429b11:	mov    DWORD PTR fs:[eax],esp
  429b14:	lea    edx,[ebp-0x4]
  429b17:	mov    eax,ds:0x46dc14
  429b1c:	call   0x406f48
  429b21:	mov    ecx,DWORD PTR [ebp-0x4]
  429b24:	mov    dl,0x1
  429b26:	mov    eax,ds:0x427394
  429b2b:	call   0x41bdbc
  429b30:	call   0x4048fc
  429b35:	xor    eax,eax
  429b37:	pop    edx
  429b38:	pop    ecx
  429b39:	pop    ecx
  429b3a:	mov    DWORD PTR fs:[eax],edx
  429b3d:	push   0x429b52
  429b42:	lea    eax,[ebp-0x4]
  429b45:	call   0x404f88
  429b4a:	ret    
  429b4b:	jmp    0x40481c
  429b50:	jmp    0x429b42
  429b52:	mov    eax,ebx
  429b54:	pop    ebx
  429b55:	pop    ecx
  429b56:	pop    ebp
  429b57:	ret    
  429b58:	push   ebp
  429b59:	mov    ebp,esp
  429b5b:	push   0x0
  429b5d:	push   ebx
  429b5e:	xor    eax,eax
  429b60:	push   ebp
  429b61:	push   0x429ba3
  429b66:	push   DWORD PTR fs:[eax]
  429b69:	mov    DWORD PTR fs:[eax],esp
  429b6c:	lea    edx,[ebp-0x4]
  429b6f:	mov    eax,ds:0x46dc14
  429b74:	call   0x406f48
  429b79:	mov    ecx,DWORD PTR [ebp-0x4]
  429b7c:	mov    dl,0x1
  429b7e:	mov    eax,ds:0x427394
  429b83:	call   0x41bdbc
  429b88:	call   0x4048fc
  429b8d:	xor    eax,eax
  429b8f:	pop    edx
  429b90:	pop    ecx
  429b91:	pop    ecx
  429b92:	mov    DWORD PTR fs:[eax],edx
  429b95:	push   0x429baa
  429b9a:	lea    eax,[ebp-0x4]
  429b9d:	call   0x404f88
  429ba2:	ret    
  429ba3:	jmp    0x40481c
  429ba8:	jmp    0x429b9a
  429baa:	pop    ebx
  429bab:	pop    ecx
  429bac:	pop    ebp
  429bad:	ret    0x8
  429bb0:	ret    
  429bb1:	lea    eax,[eax+0x0]
  429bb4:	push   ebx
  429bb5:	cmp    cl,0x1
  429bb8:	jne    0x429bca
  429bba:	cmp    edx,DWORD PTR [eax+0x9c]
  429bc0:	jne    0x429bca
  429bc2:	xor    ebx,ebx
  429bc4:	mov    DWORD PTR [eax+0x9c],ebx
  429bca:	call   0x41a510
  429bcf:	pop    ebx
  429bd0:	ret    
  429bd1:	lea    eax,[eax+0x0]
  429bd4:	push   ebp
  429bd5:	mov    ebp,esp
  429bd7:	add    esp,0xfffffef0
  429bdd:	push   ebx
  429bde:	push   esi
  429bdf:	push   edi
  429be0:	xor    ecx,ecx
  429be2:	mov    DWORD PTR [ebp-0x4],ecx
  429be5:	mov    DWORD PTR [ebp-0x110],ecx
  429beb:	mov    edi,edx
  429bed:	mov    esi,eax
  429bef:	xor    eax,eax
  429bf1:	push   ebp
  429bf2:	push   0x429c9e
  429bf7:	push   DWORD PTR fs:[eax]
  429bfa:	mov    DWORD PTR fs:[eax],esp
  429bfd:	mov    ebx,edi
  429bff:	test   ebx,ebx
  429c01:	je     0x429c6a
  429c03:	cmp    esi,ebx
  429c05:	jne    0x429c60
  429c07:	push   0x0
  429c09:	lea    eax,[ebp-0x4]
  429c0c:	push   eax
  429c0d:	lea    edx,[ebp-0x10c]
  429c13:	mov    eax,DWORD PTR [esi]
  429c15:	call   0x403f80
  429c1a:	lea    eax,[ebp-0x10c]
  429c20:	mov    DWORD PTR [ebp-0xc],eax
  429c23:	mov    BYTE PTR [ebp-0x8],0x4
  429c27:	lea    eax,[ebp-0xc]
  429c2a:	push   eax
  429c2b:	lea    edx,[ebp-0x110]
  429c31:	mov    eax,ds:0x46dd98
  429c36:	call   0x406f48
  429c3b:	mov    edx,DWORD PTR [ebp-0x110]
  429c41:	mov    eax,ds:0x41be90
  429c46:	pop    ecx
  429c47:	call   0x41b0d4
  429c4c:	mov    ecx,DWORD PTR [ebp-0x4]
  429c4f:	mov    dl,0x1
  429c51:	mov    eax,ds:0x4297f4
  429c56:	call   0x41bdbc
  429c5b:	call   0x4048fc
  429c60:	mov    ebx,DWORD PTR [ebx+0x9c]
  429c66:	test   ebx,ebx
  429c68:	jne    0x429c03
  429c6a:	mov    DWORD PTR [esi+0x9c],edi
  429c70:	test   edi,edi
  429c72:	je     0x429c7d
  429c74:	mov    edx,esi
  429c76:	mov    eax,edi
  429c78:	call   0x41a2b4
  429c7d:	xor    eax,eax
  429c7f:	pop    edx
  429c80:	pop    ecx
  429c81:	pop    ecx
  429c82:	mov    DWORD PTR fs:[eax],edx
  429c85:	push   0x429ca5
  429c8a:	lea    eax,[ebp-0x110]
  429c90:	call   0x404f88
  429c95:	lea    eax,[ebp-0x4]
  429c98:	call   0x404f88
  429c9d:	ret    
  429c9e:	jmp    0x40481c
  429ca3:	jmp    0x429c8a
  429ca5:	pop    edi
  429ca6:	pop    esi
  429ca7:	pop    ebx
  429ca8:	mov    esp,ebp
  429caa:	pop    ebp
  429cab:	ret    
  429cac:	push   ebp
  429cad:	mov    ebp,esp
  429caf:	push   0x0
  429cb1:	xor    eax,eax
  429cb3:	push   ebp
  429cb4:	push   0x429cf6
  429cb9:	push   DWORD PTR fs:[eax]
  429cbc:	mov    DWORD PTR fs:[eax],esp
  429cbf:	lea    edx,[ebp-0x4]
  429cc2:	mov    eax,ds:0x46da40
  429cc7:	call   0x406f48
  429ccc:	mov    ecx,DWORD PTR [ebp-0x4]
  429ccf:	mov    dl,0x1
  429cd1:	mov    eax,ds:0x429864
  429cd6:	call   0x41bdbc
  429cdb:	call   0x4048fc
  429ce0:	xor    eax,eax
  429ce2:	pop    edx
  429ce3:	pop    ecx
  429ce4:	pop    ecx
  429ce5:	mov    DWORD PTR fs:[eax],edx
  429ce8:	push   0x429cfd
  429ced:	lea    eax,[ebp-0x4]
  429cf0:	call   0x404f88
  429cf5:	ret    
  429cf6:	jmp    0x40481c
  429cfb:	jmp    0x429ced
  429cfd:	pop    ecx
  429cfe:	pop    ebp
  429cff:	ret    
  429d00:	push   ebp
  429d01:	mov    ebp,esp
  429d03:	push   0x0
  429d05:	push   ebx
  429d06:	xor    eax,eax
  429d08:	push   ebp
  429d09:	push   0x429d4b
  429d0e:	push   DWORD PTR fs:[eax]
  429d11:	mov    DWORD PTR fs:[eax],esp
  429d14:	lea    edx,[ebp-0x4]
  429d17:	mov    eax,ds:0x46da40
  429d1c:	call   0x406f48
  429d21:	mov    ecx,DWORD PTR [ebp-0x4]
  429d24:	mov    dl,0x1
  429d26:	mov    eax,ds:0x429864
  429d2b:	call   0x41bdbc
  429d30:	call   0x4048fc
  429d35:	xor    eax,eax
  429d37:	pop    edx
  429d38:	pop    ecx
  429d39:	pop    ecx
  429d3a:	mov    DWORD PTR fs:[eax],edx
  429d3d:	push   0x429d52
  429d42:	lea    eax,[ebp-0x4]
  429d45:	call   0x404f88
  429d4a:	ret    
  429d4b:	jmp    0x40481c
  429d50:	jmp    0x429d42
  429d52:	pop    ebx
  429d53:	pop    ecx
  429d54:	pop    ebp
  429d55:	ret    0x8
  429d58:	push   ebp
  429d59:	mov    ebp,esp
  429d5b:	push   0x0
  429d5d:	push   ebx
  429d5e:	xor    eax,eax
  429d60:	push   ebp
  429d61:	push   0x429da3
  429d66:	push   DWORD PTR fs:[eax]
  429d69:	mov    DWORD PTR fs:[eax],esp
  429d6c:	lea    edx,[ebp-0x4]
  429d6f:	mov    eax,ds:0x46da40
  429d74:	call   0x406f48
  429d79:	mov    ecx,DWORD PTR [ebp-0x4]
  429d7c:	mov    dl,0x1
  429d7e:	mov    eax,ds:0x429864
  429d83:	call   0x41bdbc
  429d88:	call   0x4048fc
  429d8d:	xor    eax,eax
  429d8f:	pop    edx
  429d90:	pop    ecx
  429d91:	pop    ecx
  429d92:	mov    DWORD PTR fs:[eax],edx
  429d95:	push   0x429daa
  429d9a:	lea    eax,[ebp-0x4]
  429d9d:	call   0x404f88
  429da2:	ret    
  429da3:	jmp    0x40481c
  429da8:	jmp    0x429d9a
  429daa:	mov    eax,ebx
  429dac:	pop    ebx
  429dad:	pop    ecx
  429dae:	pop    ebp
  429daf:	ret    0x10
  429db2:	mov    eax,eax
  429db4:	push   ebp
  429db5:	mov    ebp,esp
  429db7:	push   0x0
  429db9:	push   ebx
  429dba:	xor    eax,eax
  429dbc:	push   ebp
  429dbd:	push   0x429dff
  429dc2:	push   DWORD PTR fs:[eax]
  429dc5:	mov    DWORD PTR fs:[eax],esp
  429dc8:	lea    edx,[ebp-0x4]
  429dcb:	mov    eax,ds:0x46da40
  429dd0:	call   0x406f48
  429dd5:	mov    ecx,DWORD PTR [ebp-0x4]
  429dd8:	mov    dl,0x1
  429dda:	mov    eax,ds:0x429864
  429ddf:	call   0x41bdbc
  429de4:	call   0x4048fc
  429de9:	xor    eax,eax
  429deb:	pop    edx
  429dec:	pop    ecx
  429ded:	pop    ecx
  429dee:	mov    DWORD PTR fs:[eax],edx
  429df1:	push   0x429e06
  429df6:	lea    eax,[ebp-0x4]
  429df9:	call   0x404f88
  429dfe:	ret    
  429dff:	jmp    0x40481c
  429e04:	jmp    0x429df6
  429e06:	pop    ebx
  429e07:	pop    ecx
  429e08:	pop    ebp
  429e09:	ret    0xc
  429e0c:	pop    eax
  429e0d:	sahf   
  429e0e:	inc    edx
	...
  429e1b:	add    BYTE PTR [esi+ebx*4+0x42],dh
	...
  429e2a:	add    BYTE PTR [eax],al
  429e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e2d:	sahf   
  429e2e:	inc    edx
  429e2f:	add    BYTE PTR [eax+eax*1],bl
  429e32:	add    BYTE PTR [eax],al
  429e34:	sub    al,0x59
  429e36:	inc    edx
  429e37:	add    al,dl
  429e39:	inc    edx
  429e3a:	inc    eax
  429e3b:	add    ah,bl
  429e3d:	inc    edx
  429e3e:	inc    eax
  429e3f:	add    al,ah
  429e41:	inc    edx
  429e42:	inc    eax
  429e43:	add    ah,ah
  429e45:	inc    edx
  429e46:	inc    eax
  429e47:	add    al,bl
  429e49:	inc    edx
  429e4a:	inc    eax
  429e4b:	add    BYTE PTR [eax],bh
  429e4d:	inc    eax
  429e4e:	inc    eax
  429e4f:	add    BYTE PTR [eax+eax*2+0x40],dl
  429e53:	add    BYTE PTR [eax+0x4000425b],al
  429e59:	lahf   
  429e5a:	inc    edx
  429e5b:	add    BYTE PTR [eax+0x41],dh
  429e5e:	inc    ecx
  429e5f:	add    BYTE PTR [eax+eax*2+0x5be40041],al
  429e66:	inc    edx
  429e67:	add    BYTE PTR [eax-0x1fffbebc],dh
  429e6d:	inc    esp
  429e6e:	inc    ecx
  429e6f:	add    al,bl
  429e71:	inc    esp
  429e72:	inc    ecx
  429e73:	add    BYTE PTR [ebx+ebx*2+0x42],al
  429e77:	add    BYTE PTR [esi+ebx*2+0x42],bh
  429e7b:	add    BYTE PTR [edi+ebx*4-0x6003ffbe],al
  429e82:	inc    edx
  429e83:	add    BYTE PTR [edx+eiz*4+0x42],ch
  429e87:	add    ah,ah
  429e89:	pop    edx
  429e8a:	inc    edx
  429e8b:	add    ah,bh
  429e8d:	pop    edx
  429e8e:	inc    edx
  429e8f:	add    BYTE PTR [eax-0x5f],ch
  429e92:	inc    edx
  429e93:	add    al,ch
  429e95:	mov    eax,ds:0xa2480042
  429e9a:	inc    edx
  429e9b:	add    al,bl
  429e9d:	pop    esp
  429e9e:	inc    edx
  429e9f:	add    BYTE PTR [eax+0x5e],dl
  429ea2:	inc    edx
  429ea3:	add    BYTE PTR [ebx],cl
  429ea5:	push   esp
  429ea6:	dec    ecx
  429ea7:	fs push edx
  429ea9:	gs jo  0x429f18
  429eac:	jns    0x429f00
  429eae:	inc    esi
  429eaf:	inc    ebx
  429eb0:	mov    ah,0x9e
  429eb2:	inc    edx
  429eb3:	add    BYTE PTR [edi],al
  429eb5:	or     edx,DWORD PTR [ecx+ecx*2+0x64]
  429eb9:	push   edx
  429eba:	gs jo  0x429f29
  429ebd:	jns    0x429f11
  429ebf:	inc    esi
  429ec0:	inc    ebx
  429ec1:	pop    eax
  429ec2:	sahf   
  429ec3:	inc    edx
  429ec4:	add    al,ah
  429ec6:	pop    ecx
  429ec7:	inc    edx
  429ec8:	add    BYTE PTR [edx],al
  429eca:	add    BYTE PTR [edx],cl
  429ecc:	dec    ecx
  429ecd:	fs push edx
  429ecf:	gs jo  0x429f3e
  429ed2:	jns    0x429f26
  429ed4:	inc    esi
  429ed5:	inc    ebx
  429ed6:	add    BYTE PTR [eax],al
  429ed8:	and    al,0x9f
  429eda:	inc    edx
	...
  429ef7:	add    BYTE PTR [edi+ebx*4],ch
  429efa:	inc    edx
  429efb:	add    BYTE PTR [eax],dl
  429efd:	add    BYTE PTR [eax],al
  429eff:	add    BYTE PTR [eax+0x5a],al
  429f02:	inc    edx
  429f03:	add    al,dl
  429f05:	inc    edx
  429f06:	inc    eax
  429f07:	add    ah,bl
  429f09:	inc    edx
  429f0a:	inc    eax
  429f0b:	add    al,ah
  429f0d:	inc    edx
  429f0e:	inc    eax
  429f0f:	add    ah,ah
  429f11:	inc    edx
  429f12:	inc    eax
  429f13:	add    al,bl
  429f15:	inc    edx
  429f16:	inc    eax
  429f17:	add    BYTE PTR [eax],bh
  429f19:	inc    eax
  429f1a:	inc    eax
  429f1b:	add    BYTE PTR [eax+eax*2+0x40],dl
  429f1f:	add    BYTE PTR [eax-0x43ffbfc0],dl
  429f25:	mov    ebp,0xa3680041
  429f2a:	inc    edx
  429f2b:	add    BYTE PTR [eax],dl
  429f2d:	inc    ebp
  429f2e:	dec    ecx
  429f2f:	fs push edx
  429f31:	gs jo  0x429fa0
  429f34:	jns    0x429f88
  429f36:	inc    esi
  429f37:	inc    ebx
  429f38:	inc    ebp
  429f39:	jb     0x429fad
  429f3b:	outs   dx,DWORD PTR ds:[esi]
  429f3c:	jb     0x429ecb
  429f3e:	inc    eax
  429f3f:	add    BYTE PTR [ebx+0x56],dl
  429f42:	mov    esi,edx
  429f44:	mov    ebx,eax
  429f46:	mov    eax,esi
  429f48:	mov    edx,DWORD PTR ds:0x429e0c
  429f4e:	call   0x40422c
  429f53:	test   al,al
  429f55:	je     0x429f75
  429f57:	mov    eax,ebx
  429f59:	call   0x425d34
  429f5e:	mov    edx,eax
  429f60:	mov    eax,esi
  429f62:	call   0x425c74
  429f67:	mov    eax,DWORD PTR [esi+0x18]
  429f6a:	mov    edx,DWORD PTR [ebx+0x18]
  429f6d:	mov    ecx,DWORD PTR [eax]
  429f6f:	call   DWORD PTR [ecx+0x8]
  429f72:	pop    esi
  429f73:	pop    ebx
  429f74:	ret    
  429f75:	mov    edx,esi
  429f77:	mov    eax,ebx
  429f79:	call   0x425aa0
  429f7e:	pop    esi
  429f7f:	pop    ebx
  429f80:	ret    
  429f81:	lea    eax,[eax+0x0]
  429f84:	push   ebp
  429f85:	mov    ebp,esp
  429f87:	push   0x0
  429f89:	push   ebx
  429f8a:	push   esi
  429f8b:	mov    esi,edx
  429f8d:	xor    eax,eax
  429f8f:	push   ebp
  429f90:	push   0x429feb
  429f95:	push   DWORD PTR fs:[eax]
  429f98:	mov    DWORD PTR fs:[eax],esp
  429f9b:	xor    ecx,ecx
  429f9d:	mov    edx,esi
  429f9f:	mov    eax,ds:0x41be90
  429fa4:	call   0x41b254
  429fa9:	mov    ebx,eax
  429fab:	cmp    ebx,0x64
  429fae:	jl     0x429fb8
  429fb0:	cmp    ebx,0x3e8
  429fb6:	jl     0x429fd1
  429fb8:	lea    ecx,[ebp-0x4]
  429fbb:	mov    edx,esi
  429fbd:	mov    eax,ds:0x41be90
  429fc2:	call   0x41b2b0
  429fc7:	cmp    DWORD PTR [ebp-0x4],0x0
  429fcb:	je     0x429fd1
  429fcd:	xor    eax,eax
  429fcf:	jmp    0x429fd3
  429fd1:	mov    al,0x1
  429fd3:	mov    ebx,eax
  429fd5:	xor    eax,eax
  429fd7:	pop    edx
  429fd8:	pop    ecx
  429fd9:	pop    ecx
  429fda:	mov    DWORD PTR fs:[eax],edx
  429fdd:	push   0x429ff2
  429fe2:	lea    eax,[ebp-0x4]
  429fe5:	call   0x404f88
  429fea:	ret    
  429feb:	jmp    0x40481c
  429ff0:	jmp    0x429fe2
  429ff2:	mov    eax,ebx
  429ff4:	pop    esi
  429ff5:	pop    ebx
  429ff6:	pop    ecx
  429ff7:	pop    ebp
  429ff8:	ret    
  429ff9:	lea    eax,[eax+0x0]
  429ffc:	push   ebp
  429ffd:	mov    ebp,esp
  429fff:	xor    ecx,ecx
  42a001:	push   ecx
  42a002:	push   ecx
  42a003:	push   ecx
  42a004:	push   ecx
  42a005:	push   ecx
  42a006:	push   ecx
  42a007:	push   ecx
  42a008:	push   ebx
  42a009:	push   esi
  42a00a:	push   edi
  42a00b:	mov    ebx,eax
  42a00d:	xor    eax,eax
  42a00f:	push   ebp
  42a010:	push   0x42a13c
  42a015:	push   DWORD PTR fs:[eax]
  42a018:	mov    DWORD PTR fs:[eax],esp
  42a01b:	mov    eax,ebx
  42a01d:	mov    edx,DWORD PTR [eax]
  42a01f:	call   DWORD PTR [edx+0x20]
  42a022:	mov    DWORD PTR [ebp-0x8],eax
  42a025:	mov    eax,ebx
  42a027:	call   0x425d34
  42a02c:	mov    esi,eax
  42a02e:	test   esi,esi
  42a030:	jle    0x42a102
  42a036:	lea    ecx,[ebp-0x4]
  42a039:	mov    edx,esi
  42a03b:	mov    eax,ds:0x41be90
  42a040:	call   0x41b19c
  42a045:	mov    eax,DWORD PTR [ebx+0x18]
  42a048:	mov    edx,DWORD PTR [eax]
  42a04a:	call   DWORD PTR [edx+0x14]
  42a04d:	test   eax,eax
  42a04f:	jle    0x42a0f5
  42a055:	mov    eax,DWORD PTR [ebx+0x18]
  42a058:	mov    edx,DWORD PTR [eax]
  42a05a:	call   DWORD PTR [edx+0x14]
  42a05d:	sub    eax,0x1
  42a060:	jno    0x42a067
  42a062:	call   0x403f70
  42a067:	test   eax,eax
  42a069:	jl     0x42a119
  42a06f:	inc    eax
  42a070:	mov    DWORD PTR [ebp-0xc],eax
  42a073:	xor    esi,esi
  42a075:	mov    eax,DWORD PTR [ebx+0x18]
  42a078:	mov    edx,DWORD PTR [eax]
  42a07a:	call   DWORD PTR [edx+0x14]
  42a07d:	sub    eax,0x1
  42a080:	jno    0x42a087
  42a082:	call   0x403f70
  42a087:	cmp    esi,eax
  42a089:	jge    0x42a0bd
  42a08b:	push   DWORD PTR [ebp-0x4]
  42a08e:	push   0x42a158
  42a093:	lea    ecx,[ebp-0x14]
  42a096:	mov    edx,esi
  42a098:	mov    eax,DWORD PTR [ebx+0x18]
  42a09b:	mov    edi,DWORD PTR [eax]
  42a09d:	call   DWORD PTR [edi+0xc]
  42a0a0:	push   DWORD PTR [ebp-0x14]
  42a0a3:	lea    eax,[ebp-0x10]
  42a0a6:	mov    edx,0x3
  42a0ab:	call   0x40531c
  42a0b0:	mov    edx,DWORD PTR [ebp-0x10]
  42a0b3:	mov    eax,DWORD PTR [ebp-0x8]
  42a0b6:	mov    ecx,DWORD PTR [eax]
  42a0b8:	call   DWORD PTR [ecx+0x38]
  42a0bb:	jmp    0x42a0ed
  42a0bd:	push   DWORD PTR [ebp-0x4]
  42a0c0:	push   0x42a164
  42a0c5:	lea    ecx,[ebp-0x1c]
  42a0c8:	mov    edx,esi
  42a0ca:	mov    eax,DWORD PTR [ebx+0x18]
  42a0cd:	mov    edi,DWORD PTR [eax]
  42a0cf:	call   DWORD PTR [edi+0xc]
  42a0d2:	push   DWORD PTR [ebp-0x1c]
  42a0d5:	lea    eax,[ebp-0x18]
  42a0d8:	mov    edx,0x3
  42a0dd:	call   0x40531c
  42a0e2:	mov    edx,DWORD PTR [ebp-0x18]
  42a0e5:	mov    eax,DWORD PTR [ebp-0x8]
  42a0e8:	mov    ecx,DWORD PTR [eax]
  42a0ea:	call   DWORD PTR [ecx+0x38]
  42a0ed:	inc    esi
  42a0ee:	dec    DWORD PTR [ebp-0xc]
  42a0f1:	jne    0x42a075
  42a0f3:	jmp    0x42a119
  42a0f5:	mov    edx,DWORD PTR [ebp-0x4]
  42a0f8:	mov    eax,DWORD PTR [ebp-0x8]
  42a0fb:	mov    ecx,DWORD PTR [eax]
  42a0fd:	call   DWORD PTR [ecx+0x38]
  42a100:	jmp    0x42a119
  42a102:	mov    eax,DWORD PTR [ebx+0x18]
  42a105:	mov    edx,DWORD PTR [eax]
  42a107:	call   DWORD PTR [edx+0x14]
  42a10a:	test   eax,eax
  42a10c:	jle    0x42a119
  42a10e:	mov    edx,DWORD PTR [ebx+0x18]
  42a111:	mov    eax,DWORD PTR [ebp-0x8]
  42a114:	mov    ecx,DWORD PTR [eax]
  42a116:	call   DWORD PTR [ecx+0x40]
  42a119:	xor    eax,eax
  42a11b:	pop    edx
  42a11c:	pop    ecx
  42a11d:	pop    ecx
  42a11e:	mov    DWORD PTR fs:[eax],edx
  42a121:	push   0x42a143
  42a126:	lea    eax,[ebp-0x1c]
  42a129:	mov    edx,0x4
  42a12e:	call   0x404fac
  42a133:	lea    eax,[ebp-0x4]
  42a136:	call   0x404f88
  42a13b:	ret    
  42a13c:	jmp    0x40481c
  42a141:	jmp    0x42a126
  42a143:	mov    eax,DWORD PTR [ebp-0x8]
  42a146:	pop    edi
  42a147:	pop    esi
  42a148:	pop    ebx
  42a149:	mov    esp,ebp
  42a14b:	pop    ebp
  42a14c:	ret    
  42a14d:	add    BYTE PTR [eax],al
  42a14f:	add    bh,bh
  42a151:	(bad)  
  42a152:	(bad)  
  42a153:	inc    DWORD PTR [ecx]
  42a155:	add    BYTE PTR [eax],al
  42a157:	add    BYTE PTR ds:0xff000000,ch
  42a15d:	(bad)  
  42a15e:	(bad)  
  42a15f:	inc    DWORD PTR [ecx]
  42a161:	add    BYTE PTR [eax],al
  42a163:	add    BYTE PTR [eax],ah
  42a165:	add    BYTE PTR [eax],al
  42a167:	add    BYTE PTR [ebp-0x75],dl
  42a16a:	in     al,dx
  42a16b:	push   0x0
  42a16d:	push   ebx
  42a16e:	mov    ebx,edx
  42a170:	xor    eax,eax
  42a172:	push   ebp
  42a173:	push   0x42a1cc
  42a178:	push   DWORD PTR fs:[eax]
  42a17b:	mov    DWORD PTR fs:[eax],esp
  42a17e:	mov    eax,ebx
  42a180:	call   0x405248
  42a185:	cmp    eax,0x4
  42a188:	jl     0x42a1b2
  42a18a:	lea    eax,[ebp-0x4]
  42a18d:	push   eax
  42a18e:	mov    ecx,0x1
  42a193:	mov    edx,0x4
  42a198:	mov    eax,ebx
  42a19a:	call   0x405480
  42a19f:	mov    eax,DWORD PTR [ebp-0x4]
  42a1a2:	mov    edx,0x42a1e4
  42a1a7:	call   0x4053b0
  42a1ac:	je     0x42a1b2
  42a1ae:	xor    eax,eax
  42a1b0:	jmp    0x42a1b4
  42a1b2:	mov    al,0x1
  42a1b4:	mov    ebx,eax
  42a1b6:	xor    eax,eax
  42a1b8:	pop    edx
  42a1b9:	pop    ecx
  42a1ba:	pop    ecx
  42a1bb:	mov    DWORD PTR fs:[eax],edx
  42a1be:	push   0x42a1d3
  42a1c3:	lea    eax,[ebp-0x4]
  42a1c6:	call   0x404f88
  42a1cb:	ret    
  42a1cc:	jmp    0x40481c
  42a1d1:	jmp    0x42a1c3
  42a1d3:	mov    eax,ebx
  42a1d5:	pop    ebx
  42a1d6:	pop    ecx
  42a1d7:	pop    ebp
  42a1d8:	ret    
  42a1d9:	add    BYTE PTR [eax],al
  42a1db:	add    bh,bh
  42a1dd:	(bad)  
  42a1de:	(bad)  
  42a1df:	inc    DWORD PTR [ecx]
  42a1e1:	add    BYTE PTR [eax],al
  42a1e3:	add    BYTE PTR [eax],ah
  42a1e5:	add    BYTE PTR [eax],al
  42a1e7:	add    BYTE PTR [ebp-0x75],dl
  42a1ea:	in     al,dx
  42a1eb:	push   0x0
  42a1ed:	push   ebx
  42a1ee:	mov    ebx,eax
  42a1f0:	xor    eax,eax
  42a1f2:	push   ebp
  42a1f3:	push   0x42a23d
  42a1f8:	push   DWORD PTR fs:[eax]
  42a1fb:	mov    DWORD PTR fs:[eax],esp
  42a1fe:	lea    edx,[ebp-0x4]
  42a201:	mov    eax,DWORD PTR [ebx+0x18]
  42a204:	mov    ecx,DWORD PTR [eax]
  42a206:	call   DWORD PTR [ecx+0x1c]
  42a209:	mov    eax,DWORD PTR [ebp-0x4]
  42a20c:	push   eax
  42a20d:	mov    eax,ebx
  42a20f:	call   0x425d34
  42a214:	mov    ecx,eax
  42a216:	mov    dl,0x1
  42a218:	mov    eax,ds:0x429ed8
  42a21d:	call   0x42a368
  42a222:	call   0x4048fc
  42a227:	xor    eax,eax
  42a229:	pop    edx
  42a22a:	pop    ecx
  42a22b:	pop    ecx
  42a22c:	mov    DWORD PTR fs:[eax],edx
  42a22f:	push   0x42a244
  42a234:	lea    eax,[ebp-0x4]
  42a237:	call   0x404f88
  42a23c:	ret    
  42a23d:	jmp    0x40481c
  42a242:	jmp    0x42a234
  42a244:	pop    ebx
  42a245:	pop    ecx
  42a246:	pop    ebp
  42a247:	ret    
  42a248:	push   ebx
  42a249:	mov    ebx,eax
  42a24b:	mov    eax,ebx
  42a24d:	call   0x425d34
  42a252:	test   eax,eax
  42a254:	jg     0x42a266
  42a256:	mov    eax,DWORD PTR [ebx+0x18]
  42a259:	mov    edx,DWORD PTR [eax]
  42a25b:	call   DWORD PTR [edx+0x14]
  42a25e:	test   eax,eax
  42a260:	jg     0x42a266
  42a262:	xor    eax,eax
  42a264:	pop    ebx
  42a265:	ret    
  42a266:	mov    al,0x1
  42a268:	pop    ebx
  42a269:	ret    
  42a26a:	mov    eax,eax
  42a26c:	push   ebp
  42a26d:	mov    ebp,esp
  42a26f:	xor    ecx,ecx
  42a271:	push   ecx
  42a272:	push   ecx
  42a273:	push   ecx
  42a274:	push   ecx
  42a275:	push   ecx
  42a276:	push   ecx
  42a277:	push   ecx
  42a278:	push   ebx
  42a279:	push   esi
  42a27a:	push   edi
  42a27b:	mov    DWORD PTR [ebp-0x8],edx
  42a27e:	mov    esi,eax
  42a280:	xor    eax,eax
  42a282:	push   ebp
  42a283:	push   0x42a35a
  42a288:	push   DWORD PTR fs:[eax]
  42a28b:	mov    DWORD PTR fs:[eax],esp
  42a28e:	mov    eax,esi
  42a290:	mov    edx,DWORD PTR [eax]
  42a292:	call   DWORD PTR [edx+0x30]
  42a295:	mov    eax,DWORD PTR [ebp-0x8]
  42a298:	mov    edx,DWORD PTR [eax]
  42a29a:	call   DWORD PTR [edx+0x14]
  42a29d:	test   eax,eax
  42a29f:	jle    0x42a337
  42a2a5:	lea    eax,[ebp-0x10]
  42a2a8:	push   eax
  42a2a9:	lea    ecx,[ebp-0x14]
  42a2ac:	xor    edx,edx
  42a2ae:	mov    eax,DWORD PTR [ebp-0x8]
  42a2b1:	mov    ebx,DWORD PTR [eax]
  42a2b3:	call   DWORD PTR [ebx+0xc]
  42a2b6:	mov    eax,DWORD PTR [ebp-0x14]
  42a2b9:	mov    ecx,0x3
  42a2be:	mov    edx,0x1
  42a2c3:	call   0x405480
  42a2c8:	mov    edx,DWORD PTR [ebp-0x10]
  42a2cb:	lea    ecx,[ebp-0x4]
  42a2ce:	mov    eax,ds:0x41be90
  42a2d3:	call   0x41b2b0
  42a2d8:	mov    edx,DWORD PTR [ebp-0x4]
  42a2db:	mov    eax,esi
  42a2dd:	call   0x425d44
  42a2e2:	mov    eax,DWORD PTR [ebp-0x8]
  42a2e5:	mov    edx,DWORD PTR [eax]
  42a2e7:	call   DWORD PTR [edx+0x14]
  42a2ea:	mov    ebx,eax
  42a2ec:	sub    ebx,0x1
  42a2ef:	jno    0x42a2f6
  42a2f1:	call   0x403f70
  42a2f6:	test   ebx,ebx
  42a2f8:	jl     0x42a337
  42a2fa:	inc    ebx
  42a2fb:	mov    DWORD PTR [ebp-0xc],0x0
  42a302:	lea    eax,[ebp-0x18]
  42a305:	push   eax
  42a306:	lea    ecx,[ebp-0x1c]
  42a309:	mov    edx,DWORD PTR [ebp-0xc]
  42a30c:	mov    eax,DWORD PTR [ebp-0x8]
  42a30f:	mov    edi,DWORD PTR [eax]
  42a311:	call   DWORD PTR [edi+0xc]
  42a314:	mov    eax,DWORD PTR [ebp-0x1c]
  42a317:	mov    ecx,0x7fffffff
  42a31c:	mov    edx,0x5
  42a321:	call   0x405480
  42a326:	mov    edx,DWORD PTR [ebp-0x18]
  42a329:	mov    eax,DWORD PTR [esi+0x18]
  42a32c:	mov    ecx,DWORD PTR [eax]
  42a32e:	call   DWORD PTR [ecx+0x38]
  42a331:	inc    DWORD PTR [ebp-0xc]
  42a334:	dec    ebx
  42a335:	jne    0x42a302
  42a337:	xor    eax,eax
  42a339:	pop    edx
  42a33a:	pop    ecx
  42a33b:	pop    ecx
  42a33c:	mov    DWORD PTR fs:[eax],edx
  42a33f:	push   0x42a361
  42a344:	lea    eax,[ebp-0x1c]
  42a347:	mov    edx,0x4
  42a34c:	call   0x404fac
  42a351:	lea    eax,[ebp-0x4]
  42a354:	call   0x404f88
  42a359:	ret    
  42a35a:	jmp    0x40481c
  42a35f:	jmp    0x42a344
  42a361:	pop    edi
  42a362:	pop    esi
  42a363:	pop    ebx
  42a364:	mov    esp,ebp
  42a366:	pop    ebp
  42a367:	ret    
  42a368:	push   ebp
  42a369:	mov    ebp,esp
  42a36b:	push   ebx
  42a36c:	push   esi
  42a36d:	push   edi
  42a36e:	test   dl,dl
  42a370:	je     0x42a37a
  42a372:	add    esp,0xfffffff0
  42a375:	call   0x4043ac
  42a37a:	mov    esi,ecx
  42a37c:	mov    ebx,edx
  42a37e:	mov    edi,eax
  42a380:	mov    ecx,DWORD PTR [ebp+0x8]
  42a383:	xor    edx,edx
  42a385:	mov    eax,edi
  42a387:	call   0x41bdbc
  42a38c:	mov    DWORD PTR [edi+0xc],esi
  42a38f:	mov    eax,edi
  42a391:	test   bl,bl
  42a393:	je     0x42a3a4
  42a395:	call   0x404404
  42a39a:	pop    DWORD PTR fs:0x0
  42a3a1:	add    esp,0xc
  42a3a4:	mov    eax,edi
  42a3a6:	pop    edi
  42a3a7:	pop    esi
  42a3a8:	pop    ebx
  42a3a9:	pop    ebp
  42a3aa:	ret    0x4
  42a3ad:	lea    eax,[eax+0x0]
  42a3b0:	cld    
  42a3b1:	mov    ds:0x42,eax
  42a3b6:	add    BYTE PTR [eax],al
  42a3b8:	add    BYTE PTR [eax],al
  42a3ba:	add    BYTE PTR [eax],al
  42a3bc:	cwde   
  42a3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3be:	inc    edx
  42a3bf:	add    ah,ah
  42a3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3c2:	inc    edx
	...
  42a3cf:	add    dl,cl
  42a3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3d2:	inc    edx
  42a3d3:	add    al,dh
  42a3d5:	add    BYTE PTR [eax],al
  42a3d7:	add    BYTE PTR [esi+edi*8-0x56e7ffbe],cl
  42a3de:	inc    ecx
  42a3df:	add    ah,bl
  42a3e1:	inc    edx
  42a3e2:	inc    eax
  42a3e3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42a3e9:	inc    edx
  42a3ea:	inc    eax
  42a3eb:	add    al,bl
  42a3ed:	inc    edx
  42a3ee:	inc    eax
  42a3ef:	add    BYTE PTR [eax],bh
  42a3f1:	inc    eax
  42a3f2:	inc    eax
  42a3f3:	add    BYTE PTR [eax+eax*2+0x40],dl
  42a3f7:	add    BYTE PTR [eax+0x68004300],al
  42a3fd:	inc    ecx
  42a3fe:	inc    ecx
  42a3ff:	add    BYTE PTR [eax-0x5b],dh
  42a402:	inc    ecx
  42a403:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42a40a:	inc    ecx
  42a40b:	add    BYTE PTR [eax+0x58004302],dh
  42a411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a412:	inc    ecx
  42a413:	add    BYTE PTR [eax-0x59],dl
  42a416:	inc    ecx
  42a417:	add    BYTE PTR [eax],dh
  42a419:	test   eax,0xa6680041
  42a41e:	inc    ecx
  42a41f:	add    BYTE PTR [eax-0x5a],ah
  42a422:	inc    ecx
  42a423:	add    BYTE PTR [eax],bh
  42a425:	test   eax,0x46bc0041
  42a42a:	inc    edx
  42a42b:	add    BYTE PTR [edi+eiz*4+0x4dc40042],bl
  42a432:	inc    edx
  42a433:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42a437:	add    ah,cl
  42a439:	dec    esi
  42a43a:	inc    edx
  42a43b:	add    BYTE PTR [eax+0x1],ch
  42a43e:	inc    ebx
  42a43f:	add    BYTE PTR [eax+0x0],bl
  42a442:	inc    ebx
  42a443:	add    BYTE PTR [esp+ebp*4],dl
  42a446:	inc    edx
  42a447:	add    BYTE PTR [eax+0x78004306],dl
  42a44d:	add    eax,DWORD PTR [ebx+0x0]
  42a450:	in     al,dx
  42a451:	add    eax,DWORD PTR [ebx+0x0]
  42a454:	nop
  42a455:	add    eax,0x600043
  42a45a:	inc    ebx
  42a45b:	add    al,ah
  42a45d:	add    BYTE PTR [ebx+0x0],al
  42a460:	mov    WORD PTR [esi],es
  42a462:	inc    ebx
  42a463:	add    BYTE PTR [esp+eax*1+0x43],cl
  42a467:	add    BYTE PTR [eax+0x30004301],cl
  42a46d:	add    eax,0x2280043
  42a472:	inc    ebx
  42a473:	add    ah,cl
  42a475:	add    DWORD PTR [ebx+0x0],eax
  42a478:	xor    al,0x2
  42a47a:	inc    ebx
  42a47b:	add    BYTE PTR [eax-0x17ffbd56],ch
  42a481:	lods   al,BYTE PTR ds:[esi]
  42a482:	inc    edx
  42a483:	add    BYTE PTR [eax-0x55],al
  42a486:	inc    edx
  42a487:	add    BYTE PTR [ebx+ebp*4+0x42],ch
  42a48b:	add    BYTE PTR [ebx+ebp*4-0x584bffbe],cl
  42a492:	inc    edx
  42a493:	add    BYTE PTR [eax-0x56],dl
  42a496:	inc    edx
  42a497:	add    BYTE PTR [esi],cl
  42a499:	add    BYTE PTR [eax],al
  42a49b:	add    BYTE PTR [eax],al
  42a49d:	add    BYTE PTR ds:0x84000000,al
  42a4a3:	adc    BYTE PTR [eax+0x0],al
  42a4a6:	test   al,0x0
  42a4a8:	add    BYTE PTR [eax],al
  42a4aa:	test   BYTE PTR [eax],dl
  42a4ac:	inc    eax
  42a4ad:	add    BYTE PTR [eax+eax*1+0x10840000],bh
  42a4b4:	inc    eax
  42a4b5:	add    al,al
  42a4b7:	add    BYTE PTR [eax],al
  42a4b9:	add    BYTE PTR [eax+edx*1+0xd00040],al
  42a4c0:	add    BYTE PTR [eax],al
  42a4c2:	test   BYTE PTR [eax],dl
  42a4c4:	inc    eax
  42a4c5:	add    ah,bl
  42a4c7:	add    BYTE PTR [eax],al
  42a4c9:	add    BYTE PTR [edx],dl
  42a4cb:	push   esp
  42a4cc:	dec    ecx
  42a4cd:	fs push esp
  42a4cf:	inc    ebx
  42a4d0:	push   eax
  42a4d1:	inc    ebx
  42a4d2:	ins    BYTE PTR es:[edi],dx
  42a4d3:	imul   esp,DWORD PTR [ebp+0x6e],0x73754374
  42a4da:	je     0x42a54b
  42a4dc:	ins    DWORD PTR es:[edi],dx
  42a4dd:	lea    eax,[eax+0x0]
  42a4e0:	in     al,0xa4
  42a4e2:	inc    edx
  42a4e3:	add    BYTE PTR [edi],al
  42a4e5:	adc    dl,BYTE PTR [ecx+ecx*2+0x64]
  42a4e9:	push   esp
  42a4ea:	inc    ebx
  42a4eb:	push   eax
  42a4ec:	inc    ebx
  42a4ed:	ins    BYTE PTR es:[edi],dx
  42a4ee:	imul   esp,DWORD PTR [ebp+0x6e],0x73754374
  42a4f5:	je     0x42a566
  42a4f7:	ins    DWORD PTR es:[edi],dx
  42a4f8:	cld    
  42a4f9:	mov    ds:0xff6c0042,eax
  42a4fe:	inc    edx
  42a4ff:	add    BYTE PTR [eax],cl
  42a501:	add    BYTE PTR [ebx],cl
  42a503:	dec    ecx
  42a504:	fs push esp
  42a506:	inc    ebx
  42a507:	push   eax
  42a508:	inc    ebx
  42a509:	ins    BYTE PTR es:[edi],dx
  42a50a:	imul   esp,DWORD PTR [ebp+0x6e],0x5c000074
  42a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a512:	inc    edx
	...
  42a51f:	add    BYTE PTR [esi+eiz*4],cl
  42a522:	inc    edx
	...
  42a52f:	add    al,bh
  42a531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a532:	inc    edx
  42a533:	add    al,dh
  42a535:	add    BYTE PTR [eax],al
  42a537:	add    BYTE PTR [eax+0x180042a3],dh
  42a53d:	test   eax,0x42dc0041
  42a542:	inc    eax
  42a543:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42a549:	inc    edx
  42a54a:	inc    eax
  42a54b:	add    al,bl
  42a54d:	inc    edx
  42a54e:	inc    eax
  42a54f:	add    BYTE PTR [eax],bh
  42a551:	inc    eax
  42a552:	inc    eax
  42a553:	add    BYTE PTR [eax+eax*2+0x40],dl
  42a557:	add    BYTE PTR [eax+0x68004300],al
  42a55d:	inc    ecx
  42a55e:	inc    ecx
  42a55f:	add    BYTE PTR [eax-0x5b],dh
  42a562:	inc    ecx
  42a563:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42a56a:	inc    ecx
  42a56b:	add    BYTE PTR [eax+0x58004302],dh
  42a571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a572:	inc    ecx
  42a573:	add    BYTE PTR [eax-0x59],dl
  42a576:	inc    ecx
  42a577:	add    BYTE PTR [eax],dh
  42a579:	test   eax,0xa6680041
  42a57e:	inc    ecx
  42a57f:	add    BYTE PTR [eax-0x5a],ah
  42a582:	inc    ecx
  42a583:	add    BYTE PTR [eax],bh
  42a585:	test   eax,0x46bc0041
  42a58a:	inc    edx
  42a58b:	add    BYTE PTR [edi+eiz*4+0x4dc40042],bl
  42a592:	inc    edx
  42a593:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42a597:	add    ah,cl
  42a599:	dec    esi
  42a59a:	inc    edx
  42a59b:	add    BYTE PTR [eax+0x1],ch
  42a59e:	inc    ebx
  42a59f:	add    BYTE PTR [eax+0x0],bl
  42a5a2:	inc    ebx
  42a5a3:	add    BYTE PTR [esp+ebp*4],dl
  42a5a6:	inc    edx
  42a5a7:	add    BYTE PTR [eax+0x78004306],dl
  42a5ad:	add    eax,DWORD PTR [ebx+0x0]
  42a5b0:	in     al,dx
  42a5b1:	add    eax,DWORD PTR [ebx+0x0]
  42a5b4:	nop
  42a5b5:	add    eax,0x600043
  42a5ba:	inc    ebx
  42a5bb:	add    al,ah
  42a5bd:	add    BYTE PTR [ebx+0x0],al
  42a5c0:	mov    WORD PTR [esi],es
  42a5c2:	inc    ebx
  42a5c3:	add    BYTE PTR [esp+eax*1+0x43],cl
  42a5c7:	add    BYTE PTR [eax+0x30004301],cl
  42a5cd:	add    eax,0x2280043
  42a5d2:	inc    ebx
  42a5d3:	add    ah,cl
  42a5d5:	add    DWORD PTR [ebx+0x0],eax
  42a5d8:	xor    al,0x2
  42a5da:	inc    ebx
  42a5db:	add    BYTE PTR [eax-0x17ffbd56],ch
  42a5e1:	lods   al,BYTE PTR ds:[esi]
  42a5e2:	inc    edx
  42a5e3:	add    BYTE PTR [eax-0x55],al
  42a5e6:	inc    edx
  42a5e7:	add    BYTE PTR [ebx+ebp*4+0x42],ch
  42a5eb:	add    BYTE PTR [ebx+ebp*4-0x584bffbe],cl
  42a5f2:	inc    edx
  42a5f3:	add    BYTE PTR [eax-0x56],dl
  42a5f6:	inc    edx
  42a5f7:	add    BYTE PTR [esp+edx*2],cl
  42a5fa:	dec    ecx
  42a5fb:	fs push esp
  42a5fd:	inc    ebx
  42a5fe:	push   eax
  42a5ff:	inc    ebx
  42a600:	ins    BYTE PTR es:[edi],dx
  42a601:	imul   esp,DWORD PTR [ebp+0x6e],0x408d74
  42a608:	or     al,0xa6
  42a60a:	inc    edx
  42a60b:	add    BYTE PTR [edi],al
  42a60d:	or     al,0x54
  42a60f:	dec    ecx
  42a610:	fs push esp
  42a612:	inc    ebx
  42a613:	push   eax
  42a614:	inc    ebx
  42a615:	ins    BYTE PTR es:[edi],dx
  42a616:	imul   esp,DWORD PTR [ebp+0x6e],0x42a55c74
  42a61d:	add    al,ah
  42a61f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a620:	inc    edx
  42a621:	add    BYTE PTR [edx],dl
  42a623:	add    BYTE PTR [ebx],cl
  42a625:	dec    ecx
  42a626:	fs push esp
  42a628:	inc    ebx
  42a629:	push   eax
  42a62a:	inc    ebx
  42a62b:	ins    BYTE PTR es:[edi],dx
  42a62c:	imul   esp,DWORD PTR [ebp+0x6e],0x84000a74
  42a633:	adc    BYTE PTR [eax+0x0],al
  42a636:	test   al,0x0
  42a638:	add    bh,bh
  42a63a:	clc    
  42a63b:	stos   BYTE PTR es:[edi],al
  42a63c:	inc    edx
  42a63d:	add    BYTE PTR [ecx],al
  42a63f:	add    BYTE PTR [eax],al
  42a641:	add    BYTE PTR [eax],al
  42a643:	add    BYTE PTR [eax],al
  42a645:	add    BYTE PTR [eax],0x0
  42a648:	add    BYTE PTR [eax+0x42070008],al
  42a64e:	outs   dx,DWORD PTR ds:[esi]
  42a64f:	jne    0x42a6bf
  42a651:	fs dec ecx
  42a653:	push   eax
  42a654:	cmp    al,0x10
  42a656:	inc    eax
  42a657:	add    BYTE PTR [eax+eax*1-0x54d70100],ch
  42a65e:	inc    edx
  42a65f:	add    BYTE PTR [ecx],al
  42a661:	add    BYTE PTR [eax],al
  42a663:	add    BYTE PTR [eax],al
  42a665:	add    BYTE PTR [eax],al
  42a667:	add    BYTE PTR [eax],0x0
  42a66a:	add    BYTE PTR [eax],al
  42a66c:	or     DWORD PTR [eax],eax
  42a66e:	or     DWORD PTR [edx+0x6f],eax
  42a671:	jne    0x42a6e1
  42a673:	fs push eax
  42a675:	outs   dx,DWORD PTR ds:[esi]
  42a676:	jb     0x42a6ec
  42a678:	cmp    al,0x10
  42a67a:	inc    eax
  42a67b:	add    BYTE PTR [eax-0x37010000],bh
  42a681:	stos   BYTE PTR es:[edi],al
  42a682:	inc    edx
  42a683:	add    BYTE PTR [ecx],al
  42a685:	add    BYTE PTR [eax],al
  42a687:	add    BYTE PTR [eax],al
  42a689:	add    BYTE PTR [eax],al
  42a68b:	add    BYTE PTR [eax],0x0
  42a68e:	add    BYTE PTR [eax+0x430e000a],al
  42a694:	outs   dx,DWORD PTR ds:[esi]
  42a695:	outs   dx,BYTE PTR ds:[esi]
  42a696:	outs   dx,BYTE PTR ds:[esi]
  42a697:	arpl   WORD PTR gs:[esp+edx*2+0x69],si
  42a69c:	ins    DWORD PTR es:[edi],dx
  42a69d:	outs   dx,DWORD PTR gs:[esi]
  42a69f:	jne    0x42a715
  42a6a1:	test   BYTE PTR [eax],dl
  42a6a3:	inc    eax
  42a6a4:	add    al,al
  42a6a6:	add    BYTE PTR [eax],al
  42a6a8:	dec    DWORD PTR [eax+0x1fe0000]
  42a6ae:	add    BYTE PTR [eax],al
  42a6b0:	add    BYTE PTR [eax],al
  42a6b2:	add    BYTE PTR [eax],al
  42a6b4:	add    BYTE PTR [eax],0x0
  42a6b7:	add    BYTE PTR [eax+0x4804000b],al
  42a6bd:	outs   dx,DWORD PTR ds:[esi]
  42a6be:	jae    0x42a734
  42a6c0:	int3   
  42a6c1:	lds    eax,FWORD PTR [ecx+0x0]
  42a6c4:	les    eax,FWORD PTR [eax]
  42a6c6:	add    bh,bh
  42a6c8:	nop
  42a6c9:	add    BYTE PTR [eax],al
  42a6cb:	inc    BYTE PTR [ecx]
  42a6cd:	add    BYTE PTR [eax],al
  42a6cf:	add    BYTE PTR [eax],al
  42a6d1:	add    BYTE PTR [eax],al
  42a6d3:	add    BYTE PTR [eax],0x0
  42a6d6:	add    BYTE PTR [eax+0x4909000c],al
  42a6dc:	push   eax
  42a6dd:	push   esi
  42a6de:	gs jb  0x42a754
  42a6e1:	imul   ebp,DWORD PTR [edi+0x6e],0x4123cc
  42a6e8:	enter  0x0,0xff
  42a6ec:	enter  0x0,0xff
  42a6f0:	add    DWORD PTR [eax],eax
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	add    BYTE PTR [eax],al
  42a6f6:	add    BYTE PTR [eax-0x80000000],al
  42a6fc:	or     eax,0x6e4f0b00
  42a701:	inc    ebx
  42a702:	outs   dx,DWORD PTR ds:[esi]
  42a703:	outs   dx,BYTE PTR ds:[esi]
  42a704:	outs   dx,BYTE PTR ds:[esi]
  42a705:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  42a70a:	cmp    al,0x10
  42a70c:	inc    eax
  42a70d:	add    ah,dl
  42a70f:	add    BYTE PTR [eax],al
  42a711:	dec    DWORD PTR [eax+eax*1+0x1fe00]
  42a718:	add    BYTE PTR [eax],al
  42a71a:	add    BYTE PTR [eax],al
  42a71c:	add    BYTE PTR [eax-0x80000000],al
  42a722:	push   cs
  42a723:	add    BYTE PTR [eax+edx*2],al
  42a726:	outs   dx,DWORD PTR ds:[esi]
  42a727:	jb     0x42a79d
  42a729:	cmp    al,0x10
  42a72b:	inc    eax
  42a72c:	add    al,bh
  42a72e:	lods   al,BYTE PTR ds:[esi]
  42a72f:	inc    edx
  42a730:	add    al,ah
  42a732:	stos   BYTE PTR es:[edi],al
  42a733:	inc    edx
  42a734:	add    BYTE PTR [ecx],al
  42a736:	add    BYTE PTR [eax],al
  42a738:	add    BYTE PTR [eax],al
  42a73a:	add    BYTE PTR [eax],al
  42a73c:	add    BYTE PTR [eax],0x0
  42a73f:	add    BYTE PTR [eax+0x520b000f],al
  42a745:	gs popa 
  42a747:	fs push esp
  42a749:	imul   ebp,DWORD PTR [ebp+0x65],0xcc74756f
  42a750:	and    eax,DWORD PTR [ecx+0x0]
  42a753:	loopne 0x42a755
  42a755:	add    bh,bh
  42a757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a758:	stos   DWORD PTR es:[edi],eax
  42a759:	inc    edx
  42a75a:	add    BYTE PTR [ecx],al
  42a75c:	add    BYTE PTR [eax],al
  42a75e:	add    BYTE PTR [eax],al
  42a760:	add    BYTE PTR [eax],al
  42a762:	add    BYTE PTR [eax],0x0
  42a765:	add    BYTE PTR [eax+0x4f0c0010],al
  42a76b:	outs   dx,BYTE PTR ds:[esi]
  42a76c:	inc    edx
  42a76d:	outs   dx,WORD PTR gs:[esi]
  42a770:	jb     0x42a7d7
  42a772:	inc    edx
  42a773:	imul   ebp,DWORD PTR [esi+0x64],0x4123cc
  42a77a:	call   0xdd41a77f
  42a77f:	stos   DWORD PTR es:[edi],eax
  42a780:	inc    edx
  42a781:	add    BYTE PTR [ecx],al
  42a783:	add    BYTE PTR [eax],al
  42a785:	add    BYTE PTR [eax],al
  42a787:	add    BYTE PTR [eax],al
  42a789:	add    BYTE PTR [eax],0x0
  42a78c:	add    BYTE PTR [eax+0x4f0b0011],al
  42a792:	outs   dx,BYTE PTR ds:[esi]
  42a793:	inc    ecx
  42a794:	data16 je 0x42a7fc
  42a797:	jb     0x42a7db
  42a799:	imul   ebp,DWORD PTR [esi+0x64],0x8bd88b53
  42a7a0:	ret    
  42a7a1:	call   0x430610
  42a7a6:	mov    DWORD PTR [ebx+0xd8],0xffffffff
  42a7b0:	pop    ebx
  42a7b1:	ret    
  42a7b2:	mov    eax,eax
  42a7b4:	push   ebp
  42a7b5:	mov    ebp,esp
  42a7b7:	add    esp,0xfffffff0
  42a7ba:	push   ebx
  42a7bb:	push   esi
  42a7bc:	push   edi
  42a7bd:	xor    edx,edx
  42a7bf:	mov    DWORD PTR [ebp-0x8],edx
  42a7c2:	mov    DWORD PTR [ebp-0x4],eax
  42a7c5:	xor    eax,eax
  42a7c7:	push   ebp
  42a7c8:	push   0x42aa3f
  42a7cd:	push   DWORD PTR fs:[eax]
  42a7d0:	mov    DWORD PTR fs:[eax],esp
  42a7d3:	lea    edx,[ebp-0x8]
  42a7d6:	mov    eax,ds:0x46db3c
  42a7db:	call   0x406f48
  42a7e0:	mov    eax,DWORD PTR [ebp-0x8]
  42a7e3:	push   eax
  42a7e4:	mov    eax,DWORD PTR [ebp-0x4]
  42a7e7:	mov    edx,DWORD PTR [eax]
  42a7e9:	call   DWORD PTR [edx+0x5c]
  42a7ec:	mov    edx,eax
  42a7ee:	mov    eax,ds:0x426db0
  42a7f3:	pop    ecx
  42a7f4:	call   0x41be6c
  42a7f9:	mov    eax,DWORD PTR [ebp-0x4]
  42a7fc:	cmp    DWORD PTR [eax+0xc0],0x0
  42a803:	sete   dl
  42a806:	xor    ecx,ecx
  42a808:	mov    eax,ds:0x426fa4
  42a80d:	call   0x41be6c
  42a812:	mov    eax,DWORD PTR [ebp-0x4]
  42a815:	cmp    DWORD PTR [eax+0xd4],0x0
  42a81c:	sete   dl
  42a81f:	xor    ecx,ecx
  42a821:	mov    eax,ds:0x426f44
  42a826:	call   0x41be6c
  42a82b:	mov    eax,DWORD PTR [ebp-0x4]
  42a82e:	cmp    DWORD PTR [eax+0x8c],0x0
  42a835:	jne    0x42a86e
  42a837:	mov    eax,DWORD PTR [ebp-0x4]
  42a83a:	mov    edx,DWORD PTR [eax]
  42a83c:	call   DWORD PTR [edx+0x84]
  42a842:	mov    edx,eax
  42a844:	mov    eax,DWORD PTR [ebp-0x4]
  42a847:	mov    ecx,DWORD PTR [eax]
  42a849:	call   DWORD PTR [ecx+0x48]
  42a84c:	mov    eax,DWORD PTR [ebp-0x4]
  42a84f:	mov    eax,DWORD PTR [eax+0x8c]
  42a855:	mov    edx,DWORD PTR [ebp-0x4]
  42a858:	mov    ecx,DWORD PTR [edx+0x30]
  42a85b:	mov    DWORD PTR [eax+0x30],ecx
  42a85e:	mov    ecx,DWORD PTR [edx+0x34]
  42a861:	mov    DWORD PTR [eax+0x34],ecx
  42a864:	mov    eax,DWORD PTR [ebp-0x4]
  42a867:	mov    BYTE PTR [eax+0x94],0x1
  42a86e:	xor    edx,edx
  42a870:	push   ebp
  42a871:	push   0x42a9f2
  42a876:	push   DWORD PTR fs:[edx]
  42a879:	mov    DWORD PTR fs:[edx],esp
  42a87c:	mov    eax,DWORD PTR [ebp-0x4]
  42a87f:	cmp    DWORD PTR [eax+0xbc],0x0
  42a886:	je     0x42a89f
  42a888:	mov    eax,DWORD PTR [ebp-0x4]
  42a88b:	mov    edx,DWORD PTR [eax+0xbc]
  42a891:	mov    eax,DWORD PTR [ebp-0x4]
  42a894:	mov    eax,DWORD PTR [eax+0x8c]
  42a89a:	mov    ecx,DWORD PTR [eax]
  42a89c:	call   DWORD PTR [ecx+0x48]
  42a89f:	mov    eax,DWORD PTR [ebp-0x4]
  42a8a2:	mov    edx,DWORD PTR [eax+0xd4]
  42a8a8:	mov    eax,DWORD PTR [ebp-0x4]
  42a8ab:	mov    eax,DWORD PTR [eax+0x8c]
  42a8b1:	mov    ecx,DWORD PTR [eax]
  42a8b3:	call   DWORD PTR [ecx+0x50]
  42a8b6:	mov    eax,DWORD PTR [ebp-0x4]
  42a8b9:	mov    edx,DWORD PTR [eax+0xc0]
  42a8bf:	mov    eax,DWORD PTR [ebp-0x4]
  42a8c2:	mov    eax,DWORD PTR [eax+0x8c]
  42a8c8:	mov    ecx,DWORD PTR [eax]
  42a8ca:	call   DWORD PTR [ecx+0x4c]
  42a8cd:	mov    edx,DWORD PTR [ebp-0x4]
  42a8d0:	mov    edx,DWORD PTR [edx+0xb8]
  42a8d6:	mov    eax,DWORD PTR [ebp-0x4]
  42a8d9:	mov    eax,DWORD PTR [eax+0x8c]
  42a8df:	mov    DWORD PTR [eax+0x8c],edx
  42a8e5:	mov    edx,DWORD PTR [ebp-0x4]
  42a8e8:	mov    edx,DWORD PTR [edx+0xd8]
  42a8ee:	mov    DWORD PTR [eax+0xb8],edx
  42a8f4:	mov    eax,DWORD PTR [ebp-0x4]
  42a8f7:	mov    ebx,DWORD PTR [eax+0xa0]
  42a8fd:	test   ebx,ebx
  42a8ff:	je     0x42a995
  42a905:	lea    eax,[ebx+0xd4]
  42a90b:	mov    edx,DWORD PTR [ebp-0x4]
  42a90e:	mov    edx,DWORD PTR [edx+0xa8]
  42a914:	call   0x404fdc
  42a919:	mov    edx,DWORD PTR [ebp-0x4]
  42a91c:	mov    edx,DWORD PTR [edx+0xac]
  42a922:	mov    eax,DWORD PTR [ebp-0x4]
  42a925:	mov    eax,DWORD PTR [eax+0xa0]
  42a92b:	mov    DWORD PTR [eax+0xd8],edx
  42a931:	mov    edx,DWORD PTR [ebp-0x4]
  42a934:	mov    edx,DWORD PTR [edx+0xb4]
  42a93a:	mov    DWORD PTR [eax+0xe0],edx
  42a940:	mov    edx,DWORD PTR [ebp-0x4]
  42a943:	mov    edx,DWORD PTR [edx+0xb0]
  42a949:	mov    DWORD PTR [eax+0xdc],edx
  42a94f:	mov    edx,DWORD PTR [ebp-0x4]
  42a952:	movzx  edx,BYTE PTR [edx+0xc4]
  42a959:	mov    BYTE PTR [eax+0x105],dl
  42a95f:	mov    edx,DWORD PTR [ebp-0x4]
  42a962:	mov    ecx,DWORD PTR [edx+0xe0]
  42a968:	mov    DWORD PTR [eax+0xe8],ecx
  42a96e:	mov    ecx,DWORD PTR [edx+0xe4]
  42a974:	mov    DWORD PTR [eax+0xec],ecx
  42a97a:	mov    edx,DWORD PTR [ebp-0x4]
  42a97d:	mov    ecx,DWORD PTR [edx+0xe8]
  42a983:	mov    DWORD PTR [eax+0xf0],ecx
  42a989:	mov    ecx,DWORD PTR [edx+0xec]
  42a98f:	mov    DWORD PTR [eax+0xf4],ecx
  42a995:	mov    eax,DWORD PTR [ebp-0x4]
  42a998:	mov    eax,DWORD PTR [eax+0x8c]
  42a99e:	mov    edx,DWORD PTR [eax]
  42a9a0:	call   DWORD PTR [edx+0x7c]
  42a9a3:	mov    eax,DWORD PTR [ebp-0x4]
  42a9a6:	mov    eax,DWORD PTR [eax+0x8c]
  42a9ac:	mov    eax,DWORD PTR [eax+0x9c]
  42a9b2:	test   eax,eax
  42a9b4:	je     0x42a9be
  42a9b6:	mov    edx,DWORD PTR [ebp-0x4]
  42a9b9:	mov    ecx,DWORD PTR [eax]
  42a9bb:	call   DWORD PTR [ecx+0x34]
  42a9be:	push   0x0
  42a9c0:	mov    eax,DWORD PTR [ebp-0x4]
  42a9c3:	mov    eax,DWORD PTR [eax+0xc0]
  42a9c9:	mov    DWORD PTR [ebp-0x10],eax
  42a9cc:	mov    BYTE PTR [ebp-0xc],0xb
  42a9d0:	lea    ecx,[ebp-0x10]
  42a9d3:	mov    dl,0x2
  42a9d5:	mov    eax,DWORD PTR [ebp-0x4]
  42a9d8:	call   0x424d00
  42a9dd:	mov    eax,DWORD PTR [ebp-0x4]
  42a9e0:	mov    edx,DWORD PTR [eax]
  42a9e2:	call   DWORD PTR [edx+0x80]
  42a9e8:	xor    eax,eax
  42a9ea:	pop    edx
  42a9eb:	pop    ecx
  42a9ec:	pop    ecx
  42a9ed:	mov    DWORD PTR fs:[eax],edx
  42a9f0:	jmp    0x42aa29
  42a9f2:	jmp    0x404568
  42a9f7:	mov    eax,DWORD PTR [ebp-0x4]
  42a9fa:	mov    eax,DWORD PTR [eax+0x8c]
  42aa00:	test   eax,eax
  42aa02:	je     0x42aa1f
  42aa04:	mov    edx,DWORD PTR [eax]
  42aa06:	call   DWORD PTR [edx+0x6c]
  42aa09:	mov    eax,DWORD PTR [ebp-0x4]
  42aa0c:	cmp    BYTE PTR [eax+0x94],0x0
  42aa13:	je     0x42aa1f
  42aa15:	xor    edx,edx
  42aa17:	mov    eax,DWORD PTR [ebp-0x4]
  42aa1a:	mov    ecx,DWORD PTR [eax]
  42aa1c:	call   DWORD PTR [ecx+0x48]
  42aa1f:	call   0x404924
  42aa24:	call   0x404978
  42aa29:	xor    eax,eax
  42aa2b:	pop    edx
  42aa2c:	pop    ecx
  42aa2d:	pop    ecx
  42aa2e:	mov    DWORD PTR fs:[eax],edx
  42aa31:	push   0x42aa46
  42aa36:	lea    eax,[ebp-0x8]
  42aa39:	call   0x404f88
  42aa3e:	ret    
  42aa3f:	jmp    0x40481c
  42aa44:	jmp    0x42aa36
  42aa46:	pop    edi
  42aa47:	pop    esi
  42aa48:	pop    ebx
  42aa49:	mov    esp,ebp
  42aa4b:	pop    ebp
  42aa4c:	ret    
  42aa4d:	lea    eax,[eax+0x0]
  42aa50:	push   ebp
  42aa51:	mov    ebp,esp
  42aa53:	push   ecx
  42aa54:	push   ebx
  42aa55:	mov    ebx,edx
  42aa57:	mov    DWORD PTR [ebp-0x4],eax
  42aa5a:	mov    eax,DWORD PTR [ebp-0x4]
  42aa5d:	mov    edx,DWORD PTR [eax]
  42aa5f:	call   DWORD PTR [edx+0x94]
  42aa65:	xor    eax,eax
  42aa67:	push   ebp
  42aa68:	push   0x42aa9c
  42aa6d:	push   DWORD PTR fs:[eax]
  42aa70:	mov    DWORD PTR fs:[eax],esp
  42aa73:	mov    edx,ebx
  42aa75:	mov    eax,DWORD PTR [ebp-0x4]
  42aa78:	mov    eax,DWORD PTR [eax+0x8c]
  42aa7e:	mov    ecx,DWORD PTR [eax]
  42aa80:	call   DWORD PTR [ecx+0x98]
  42aa86:	xor    eax,eax
  42aa88:	pop    edx
  42aa89:	pop    ecx
  42aa8a:	pop    ecx
  42aa8b:	mov    DWORD PTR fs:[eax],edx
  42aa8e:	push   0x42aaa3
  42aa93:	mov    eax,DWORD PTR [ebp-0x4]
  42aa96:	call   0x430684
  42aa9b:	ret    
  42aa9c:	jmp    0x40481c
  42aaa1:	jmp    0x42aa93
  42aaa3:	pop    ebx
  42aaa4:	pop    ecx
  42aaa5:	pop    ebp
  42aaa6:	ret    
  42aaa7:	nop
  42aaa8:	push   ebx
  42aaa9:	cmp    WORD PTR [eax+0xca],0x0
  42aab1:	je     0x42aac3
  42aab3:	mov    ebx,eax
  42aab5:	mov    edx,eax
  42aab7:	mov    eax,DWORD PTR [ebx+0xcc]
  42aabd:	call   DWORD PTR [ebx+0xc8]
  42aac3:	pop    ebx
  42aac4:	ret    
  42aac5:	lea    eax,[eax+0x0]
  42aac8:	mov    DWORD PTR [eax+0xb8],edx
  42aace:	mov    ecx,DWORD PTR [eax+0x8c]
  42aad4:	test   ecx,ecx
  42aad6:	je     0x42aade
  42aad8:	mov    DWORD PTR [ecx+0x8c],edx
  42aade:	ret    
  42aadf:	nop
  42aae0:	mov    DWORD PTR [eax+0xd8],edx
  42aae6:	mov    ecx,DWORD PTR [eax+0x8c]
  42aaec:	test   ecx,ecx
  42aaee:	je     0x42aaf6
  42aaf0:	mov    DWORD PTR [ecx+0xb8],edx
  42aaf6:	ret    
  42aaf7:	nop
  42aaf8:	push   ebx
  42aaf9:	push   esi
  42aafa:	push   edi
  42aafb:	mov    esi,edx
  42aafd:	mov    ebx,eax
  42aaff:	lea    eax,[ebx+0xa8]
  42ab05:	mov    edx,esi
  42ab07:	call   0x404fdc
  42ab0c:	mov    edi,DWORD PTR [ebx+0xa0]
  42ab12:	test   edi,edi
  42ab14:	je     0x42ab23
  42ab16:	lea    eax,[edi+0xd4]
  42ab1c:	mov    edx,esi
  42ab1e:	call   0x404fdc
  42ab23:	pop    edi
  42ab24:	pop    esi
  42ab25:	pop    ebx
  42ab26:	ret    
  42ab27:	nop
  42ab28:	mov    DWORD PTR [eax+0xac],edx
  42ab2e:	mov    ecx,DWORD PTR [eax+0xa0]
  42ab34:	test   ecx,ecx
  42ab36:	je     0x42ab3e
  42ab38:	mov    DWORD PTR [ecx+0xd8],edx
  42ab3e:	ret    
  42ab3f:	nop
  42ab40:	push   ebx
  42ab41:	push   esi
  42ab42:	push   edi
  42ab43:	mov    esi,edx
  42ab45:	mov    ebx,eax
  42ab47:	lea    eax,[ebx+0xc0]
  42ab4d:	mov    edx,esi
  42ab4f:	call   0x404fdc
  42ab54:	mov    edi,DWORD PTR [ebx+0x8c]
  42ab5a:	test   edi,edi
  42ab5c:	je     0x42ab67
  42ab5e:	mov    edx,esi
  42ab60:	mov    eax,edi
  42ab62:	mov    ecx,DWORD PTR [eax]
  42ab64:	call   DWORD PTR [ecx+0x4c]
  42ab67:	pop    edi
  42ab68:	pop    esi
  42ab69:	pop    ebx
  42ab6a:	ret    
  42ab6b:	nop
  42ab6c:	push   esi
  42ab6d:	push   edi
  42ab6e:	mov    esi,eax
  42ab70:	mov    DWORD PTR [esi+0xd4],edx
  42ab76:	mov    edi,DWORD PTR [esi+0x8c]
  42ab7c:	test   edi,edi
  42ab7e:	je     0x42ab87
  42ab80:	mov    eax,edi
  42ab82:	mov    ecx,DWORD PTR [eax]
  42ab84:	call   DWORD PTR [ecx+0x50]
  42ab87:	pop    edi
  42ab88:	pop    esi
  42ab89:	ret    
  42ab8a:	mov    eax,eax
  42ab8c:	mov    BYTE PTR [eax+0xc4],dl
  42ab92:	mov    ecx,DWORD PTR [eax+0xa0]
  42ab98:	test   ecx,ecx
  42ab9a:	je     0x42aba2
  42ab9c:	mov    BYTE PTR [ecx+0x105],dl
  42aba2:	ret    
  42aba3:	nop
  42aba4:	push   ebp
  42aba5:	mov    ebp,esp
  42aba7:	mov    edx,DWORD PTR [ebp+0x8]
  42abaa:	mov    DWORD PTR [eax+0xe0],edx
  42abb0:	mov    edx,DWORD PTR [ebp+0xc]
  42abb3:	mov    DWORD PTR [eax+0xe4],edx
  42abb9:	mov    edx,DWORD PTR [eax+0xa0]
  42abbf:	test   edx,edx
  42abc1:	je     0x42abd5
  42abc3:	mov    eax,DWORD PTR [ebp+0x8]
  42abc6:	mov    DWORD PTR [edx+0xe8],eax
  42abcc:	mov    eax,DWORD PTR [ebp+0xc]
  42abcf:	mov    DWORD PTR [edx+0xec],eax
  42abd5:	pop    ebp
  42abd6:	ret    0x8
  42abd9:	lea    eax,[eax+0x0]
  42abdc:	push   ebp
  42abdd:	mov    ebp,esp
  42abdf:	mov    edx,DWORD PTR [ebp+0x8]
  42abe2:	mov    DWORD PTR [eax+0xe8],edx
  42abe8:	mov    edx,DWORD PTR [ebp+0xc]
  42abeb:	mov    DWORD PTR [eax+0xec],edx
  42abf1:	mov    edx,DWORD PTR [eax+0xa0]
  42abf7:	test   edx,edx
  42abf9:	je     0x42ac0d
  42abfb:	mov    eax,DWORD PTR [ebp+0x8]
  42abfe:	mov    DWORD PTR [edx+0xf0],eax
  42ac04:	mov    eax,DWORD PTR [ebp+0xc]
  42ac07:	mov    DWORD PTR [edx+0xf4],eax
  42ac0d:	pop    ebp
  42ac0e:	ret    0x8
  42ac11:	lea    eax,[eax+0x0]
  42ac14:	push   ebx
  42ac15:	push   esi
  42ac16:	mov    esi,eax
  42ac18:	mov    eax,esi
  42ac1a:	call   0x4302e8
  42ac1f:	mov    eax,DWORD PTR [esi+0x8c]
  42ac25:	test   eax,eax
  42ac27:	je     0x42ac63
  42ac29:	mov    edx,DWORD PTR [esi+0xd4]
  42ac2f:	mov    ecx,DWORD PTR [eax]
  42ac31:	call   DWORD PTR [ecx+0x50]
  42ac34:	mov    edx,DWORD PTR [esi+0xc0]
  42ac3a:	mov    eax,DWORD PTR [esi+0x8c]
  42ac40:	mov    ecx,DWORD PTR [eax]
  42ac42:	call   DWORD PTR [ecx+0x4c]
  42ac45:	mov    eax,DWORD PTR [esi+0x8c]
  42ac4b:	mov    edx,DWORD PTR [esi+0xb8]
  42ac51:	mov    DWORD PTR [eax+0x8c],edx
  42ac57:	mov    edx,DWORD PTR [esi+0xd8]
  42ac5d:	mov    DWORD PTR [eax+0xb8],edx
  42ac63:	mov    ebx,DWORD PTR [esi+0xa0]
  42ac69:	test   ebx,ebx
  42ac6b:	je     0x42ace5
  42ac6d:	lea    eax,[ebx+0xd4]
  42ac73:	mov    edx,DWORD PTR [esi+0xa8]
  42ac79:	call   0x404fdc
  42ac7e:	mov    eax,DWORD PTR [esi+0xa0]
  42ac84:	mov    edx,DWORD PTR [esi+0xac]
  42ac8a:	mov    DWORD PTR [eax+0xd8],edx
  42ac90:	mov    edx,DWORD PTR [esi+0xb4]
  42ac96:	mov    DWORD PTR [eax+0xe0],edx
  42ac9c:	mov    edx,DWORD PTR [esi+0xb0]
  42aca2:	mov    DWORD PTR [eax+0xdc],edx
  42aca8:	movzx  edx,BYTE PTR [esi+0xc4]
  42acaf:	mov    BYTE PTR [eax+0x105],dl
  42acb5:	mov    edx,DWORD PTR [esi+0xe0]
  42acbb:	mov    DWORD PTR [eax+0xe8],edx
  42acc1:	mov    edx,DWORD PTR [esi+0xe4]
  42acc7:	mov    DWORD PTR [eax+0xec],edx
  42accd:	mov    edx,DWORD PTR [esi+0xe8]
  42acd3:	mov    DWORD PTR [eax+0xf0],edx
  42acd9:	mov    edx,DWORD PTR [esi+0xec]
  42acdf:	mov    DWORD PTR [eax+0xf4],edx
  42ace5:	pop    esi
  42ace6:	pop    ebx
  42ace7:	ret    
  42ace8:	mov    edx,eax
  42acea:	mov    eax,ds:0x427c00
  42acef:	call   0x427fc0
  42acf4:	ret    
  42acf5:	lea    eax,[eax+0x0]
  42acf8:	mov    edx,DWORD PTR [eax+0x8c]
  42acfe:	test   edx,edx
  42ad00:	je     0x42ad09
  42ad02:	mov    eax,DWORD PTR [edx+0xb8]
  42ad08:	ret    
  42ad09:	mov    eax,DWORD PTR [eax+0xd8]
  42ad0f:	ret    
  42ad10:	pop    esp
  42ad11:	lods   eax,DWORD PTR ds:[esi]
  42ad12:	inc    edx
	...
  42ad2f:	add    BYTE PTR [eax-0x53],ah
  42ad32:	inc    edx
  42ad33:	add    BYTE PTR [eax+eax*1],bl
  42ad36:	add    BYTE PTR [eax],al
  42ad38:	nop
  42ad39:	adc    BYTE PTR [eax+0x0],al
  42ad3c:	rol    BYTE PTR [edx+0x40],1
  42ad3f:	add    ah,bl
  42ad41:	inc    edx
  42ad42:	inc    eax
  42ad43:	add    al,ah
  42ad45:	inc    edx
  42ad46:	inc    eax
  42ad47:	add    ah,ah
  42ad49:	inc    edx
  42ad4a:	inc    eax
  42ad4b:	add    al,bl
  42ad4d:	inc    edx
  42ad4e:	inc    eax
  42ad4f:	add    BYTE PTR [eax],bh
  42ad51:	inc    eax
  42ad52:	inc    eax
  42ad53:	add    BYTE PTR [eax+eax*2+0x40],dl
  42ad57:	add    BYTE PTR [eax+0x30004040],dl
  42ad5d:	scas   al,BYTE PTR es:[edi]
  42ad5e:	inc    edx
  42ad5f:	add    BYTE PTR [esp+edx*2],cl
  42ad62:	dec    ecx
  42ad63:	fs dec ecx
  42ad65:	push   eax
  42ad66:	inc    ecx
  42ad67:	fs fs jb 0x42add0
  42ad6b:	jae    0x42ade0
  42ad6d:	lea    eax,[eax+0x0]
  42ad70:	push   ebp
  42ad71:	mov    ebp,esp
  42ad73:	add    esp,0xfffffff4
  42ad76:	push   ebx
  42ad77:	push   esi
  42ad78:	push   edi
  42ad79:	xor    edx,edx
  42ad7b:	mov    DWORD PTR [ebp-0xc],edx
  42ad7e:	mov    edi,eax
  42ad80:	xor    eax,eax
  42ad82:	push   ebp
  42ad83:	push   0x42ae19
  42ad88:	push   DWORD PTR fs:[eax]
  42ad8b:	mov    DWORD PTR fs:[eax],esp
  42ad8e:	mov    DWORD PTR [ebp-0x8],0x0
  42ad95:	mov    DWORD PTR [ebp-0x4],0x0
  42ad9c:	mov    eax,edi
  42ad9e:	call   0x405248
  42ada3:	mov    ebx,eax
  42ada5:	test   ebx,ebx
  42ada7:	jle    0x42ae03
  42ada9:	mov    esi,0x1
  42adae:	lea    eax,[ebp-0xc]
  42adb1:	push   eax
  42adb2:	mov    ecx,0x1
  42adb7:	mov    edx,esi
  42adb9:	mov    eax,edi
  42adbb:	call   0x405480
  42adc0:	mov    edx,DWORD PTR [ebp-0xc]
  42adc3:	xor    ecx,ecx
  42adc5:	mov    eax,ds:0x41be90
  42adca:	call   0x41b254
  42adcf:	cdq    
  42add0:	push   edx
  42add1:	push   eax
  42add2:	push   0x0
  42add4:	push   0x8
  42add6:	mov    eax,DWORD PTR [ebp-0x8]
  42add9:	mov    edx,DWORD PTR [ebp-0x4]
  42addc:	call   0x405fb8
  42ade1:	jno    0x42ade8
  42ade3:	call   0x403f70
  42ade8:	add    eax,DWORD PTR [esp]
  42adeb:	adc    edx,DWORD PTR [esp+0x4]
  42adef:	jno    0x42adf6
  42adf1:	call   0x403f70
  42adf6:	add    esp,0x8
  42adf9:	mov    DWORD PTR [ebp-0x8],eax
  42adfc:	mov    DWORD PTR [ebp-0x4],edx
  42adff:	inc    esi
  42ae00:	dec    ebx
  42ae01:	jne    0x42adae
  42ae03:	xor    eax,eax
  42ae05:	pop    edx
  42ae06:	pop    ecx
  42ae07:	pop    ecx
  42ae08:	mov    DWORD PTR fs:[eax],edx
  42ae0b:	push   0x42ae20
  42ae10:	lea    eax,[ebp-0xc]
  42ae13:	call   0x404f88
  42ae18:	ret    
  42ae19:	jmp    0x40481c
  42ae1e:	jmp    0x42ae10
  42ae20:	mov    eax,DWORD PTR [ebp-0x8]
  42ae23:	mov    edx,DWORD PTR [ebp-0x4]
  42ae26:	pop    edi
  42ae27:	pop    esi
  42ae28:	pop    ebx
  42ae29:	mov    esp,ebp
  42ae2b:	pop    ebp
  42ae2c:	ret    
  42ae2d:	lea    eax,[eax+0x0]
  42ae30:	push   ebx
  42ae31:	push   esi
  42ae32:	test   dl,dl
  42ae34:	je     0x42ae3e
  42ae36:	add    esp,0xfffffff0
  42ae39:	call   0x4043ac
  42ae3e:	mov    ebx,edx
  42ae40:	mov    esi,eax
  42ae42:	xor    edx,edx
  42ae44:	mov    eax,esi
  42ae46:	call   0x404070
  42ae4b:	mov    BYTE PTR [esi+0x18],0x0
  42ae4f:	xor    eax,eax
  42ae51:	mov    DWORD PTR [esi+0x4],eax
  42ae54:	mov    eax,esi
  42ae56:	test   bl,bl
  42ae58:	je     0x42ae69
  42ae5a:	call   0x404404
  42ae5f:	pop    DWORD PTR fs:0x0
  42ae66:	add    esp,0xc
  42ae69:	mov    eax,esi
  42ae6b:	pop    esi
  42ae6c:	pop    ebx
  42ae6d:	ret    
  42ae6e:	mov    eax,eax
  42ae70:	push   ebx
  42ae71:	push   esi
  42ae72:	push   edi
  42ae73:	mov    edi,edx
  42ae75:	mov    esi,eax
  42ae77:	push   0x0
  42ae79:	mov    eax,edi
  42ae7b:	mov    ecx,0x1
  42ae80:	mov    edx,DWORD PTR ds:0x40769c
  42ae86:	call   0x4063b0
  42ae8b:	add    esp,0x4
  42ae8e:	movzx  eax,BYTE PTR [esi+0x18]
  42ae92:	sub    al,0x1
  42ae94:	jb     0x42ae9a
  42ae96:	je     0x42aeb2
  42ae98:	jmp    0x42aefd
  42ae9a:	mov    eax,ds:0x46de0c
  42ae9f:	mov    eax,DWORD PTR [eax]
  42aea1:	mov    edx,DWORD PTR [esi+0x4]
  42aea4:	mov    ecx,DWORD PTR [eax]
  42aea6:	call   DWORD PTR [ecx+0x3c]
  42aea9:	mov    edx,edi
  42aeab:	call   0x41d3bc
  42aeb0:	jmp    0x42aefd
  42aeb2:	push   0x10
  42aeb4:	mov    eax,edi
  42aeb6:	mov    ecx,0x1
  42aebb:	mov    edx,DWORD PTR ds:0x40769c
  42aec1:	call   0x4063b0
  42aec6:	add    esp,0x4
  42aec9:	xor    ebx,ebx
  42aecb:	cmp    ebx,0x7
  42aece:	jbe    0x42aed5
  42aed0:	call   0x403f68
  42aed5:	movzx  edx,WORD PTR [esi+ebx*2+0x8]
  42aeda:	mov    eax,ds:0x46de0c
  42aedf:	mov    eax,DWORD PTR [eax]
  42aee1:	mov    ecx,DWORD PTR [eax]
  42aee3:	call   DWORD PTR [ecx+0x38]
  42aee6:	imul   ecx,ebx,0x2
  42aee9:	jno    0x42aef0
  42aeeb:	call   0x403f70
  42aef0:	mov    edx,edi
  42aef2:	call   0x41c794
  42aef7:	inc    ebx
  42aef8:	cmp    ebx,0x8
  42aefb:	jne    0x42aecb
  42aefd:	pop    edi
  42aefe:	pop    esi
  42aeff:	pop    ebx
  42af00:	ret    
  42af01:	lea    eax,[eax+0x0]
  42af04:	push   ebp
  42af05:	mov    ebp,esp
  42af07:	sub    edx,0x2
  42af0a:	je     0x42af3e
  42af0c:	dec    edx
  42af0d:	je     0x42af25
  42af0f:	dec    edx
  42af10:	jne    0x42af57
  42af12:	mov    eax,DWORD PTR [ebp+0x8]
  42af15:	mov    edx,DWORD PTR [ebp+0xc]
  42af18:	xor    edx,edx
  42af1a:	test   edx,edx
  42af1c:	je     0x42af6e
  42af1e:	call   0x403f68
  42af23:	jmp    0x42af6e
  42af25:	mov    eax,DWORD PTR [ebp+0x8]
  42af28:	mov    edx,DWORD PTR [ebp+0xc]
  42af2b:	and    eax,0xffffff
  42af31:	xor    edx,edx
  42af33:	test   edx,edx
  42af35:	je     0x42af6e
  42af37:	call   0x403f68
  42af3c:	jmp    0x42af6e
  42af3e:	mov    eax,DWORD PTR [ebp+0x8]
  42af41:	mov    edx,DWORD PTR [ebp+0xc]
  42af44:	and    eax,0xffff
  42af4a:	xor    edx,edx
  42af4c:	test   edx,edx
  42af4e:	je     0x42af6e
  42af50:	call   0x403f68
  42af55:	jmp    0x42af6e
  42af57:	mov    eax,DWORD PTR [ebp+0x8]
  42af5a:	mov    edx,DWORD PTR [ebp+0xc]
  42af5d:	and    eax,0xff
  42af63:	xor    edx,edx
  42af65:	test   edx,edx
  42af67:	je     0x42af6e
  42af69:	call   0x403f68
  42af6e:	pop    ebp
  42af6f:	ret    0x8
  42af72:	mov    eax,eax
  42af74:	push   ebp
  42af75:	mov    ebp,esp
  42af77:	push   0x0
  42af79:	push   0x0
  42af7b:	push   0x0
  42af7d:	push   0x0
  42af7f:	push   0x0
  42af81:	push   0x0
  42af83:	push   ebx
  42af84:	push   esi
  42af85:	push   edi
  42af86:	mov    DWORD PTR [ebp-0x10],ecx
  42af89:	mov    esi,edx
  42af8b:	mov    DWORD PTR [ebp-0xc],eax
  42af8e:	xor    eax,eax
  42af90:	push   ebp
  42af91:	push   0x42b101
  42af96:	push   DWORD PTR fs:[eax]
  42af99:	mov    DWORD PTR fs:[eax],esp
  42af9c:	mov    eax,DWORD PTR [ebp-0x10]
  42af9f:	mov    BYTE PTR [eax],0x1
  42afa2:	mov    ebx,0x4
  42afa7:	lea    eax,[ebp-0x8]
  42afaa:	mov    edx,esi
  42afac:	call   0x405020
  42afb1:	xor    esi,esi
  42afb3:	push   0x1
  42afb5:	lea    eax,[ebp-0x4]
  42afb8:	push   eax
  42afb9:	lea    eax,[ebp-0x8]
  42afbc:	mov    cl,0x1
  42afbe:	mov    edx,0x42b11c
  42afc3:	call   0x41c7c4
  42afc8:	cmp    DWORD PTR [ebp-0x4],0x0
  42afcc:	je     0x42b0d3
  42afd2:	cmp    DWORD PTR [ebp-0x8],0x0
  42afd6:	jne    0x42afeb
  42afd8:	cmp    ebx,0x1
  42afdb:	jle    0x42afeb
  42afdd:	mov    edi,ebx
  42afdf:	mov    ecx,ebx
  42afe1:	add    ecx,ecx
  42afe3:	add    ecx,ecx
  42afe5:	add    ecx,ecx
  42afe7:	shl    esi,cl
  42afe9:	jmp    0x42aff3
  42afeb:	mov    edi,0x1
  42aff0:	shl    esi,0x8
  42aff3:	lea    eax,[ebp-0x14]
  42aff6:	push   eax
  42aff7:	mov    ecx,0x2
  42affc:	mov    edx,0x1
  42b001:	mov    eax,DWORD PTR [ebp-0x4]
  42b004:	call   0x405480
  42b009:	mov    eax,DWORD PTR [ebp-0x14]
  42b00c:	mov    edx,0x42b128
  42b011:	call   0x4053b0
  42b016:	jne    0x42b05f
  42b018:	lea    eax,[ebp-0x18]
  42b01b:	push   eax
  42b01c:	mov    ecx,0x7fffffff
  42b021:	mov    edx,0x3
  42b026:	mov    eax,DWORD PTR [ebp-0x4]
  42b029:	call   0x405480
  42b02e:	mov    eax,DWORD PTR [ebp-0x18]
  42b031:	call   0x41ca5c
  42b036:	test   al,al
  42b038:	je     0x42b0d9
  42b03e:	push   0x0
  42b040:	push   0x0
  42b042:	mov    edx,DWORD PTR [ebp-0x4]
  42b045:	mov    eax,ds:0x41be90
  42b04a:	call   0x41b3f4
  42b04f:	push   edx
  42b050:	push   eax
  42b051:	mov    edx,edi
  42b053:	mov    eax,DWORD PTR [ebp-0xc]
  42b056:	call   0x42af04
  42b05b:	add    esi,eax
  42b05d:	jmp    0x42b0cd
  42b05f:	mov    eax,DWORD PTR [ebp-0x4]
  42b062:	call   0x41ca98
  42b067:	test   al,al
  42b069:	je     0x42b0d9
  42b06b:	mov    eax,0x1
  42b070:	mov    edx,DWORD PTR [ebp-0x4]
  42b073:	dec    eax
  42b074:	test   edx,edx
  42b076:	je     0x42b07d
  42b078:	cmp    eax,DWORD PTR [edx-0x4]
  42b07b:	jb     0x42b082
  42b07d:	call   0x403f68
  42b082:	inc    eax
  42b083:	cmp    BYTE PTR [edx+eax*1-0x1],0x30
  42b088:	jne    0x42b0ae
  42b08a:	mov    eax,DWORD PTR [ebp-0x4]
  42b08d:	call   0x41ca00
  42b092:	test   al,al
  42b094:	je     0x42b0ae
  42b096:	mov    eax,DWORD PTR [ebp-0x4]
  42b099:	call   0x42ad70
  42b09e:	push   edx
  42b09f:	push   eax
  42b0a0:	mov    edx,edi
  42b0a2:	mov    eax,DWORD PTR [ebp-0xc]
  42b0a5:	call   0x42af04
  42b0aa:	add    esi,eax
  42b0ac:	jmp    0x42b0cd
  42b0ae:	push   0x0
  42b0b0:	push   0x0
  42b0b2:	mov    edx,DWORD PTR [ebp-0x4]
  42b0b5:	mov    eax,ds:0x41be90
  42b0ba:	call   0x41b3f4
  42b0bf:	push   edx
  42b0c0:	push   eax
  42b0c1:	mov    edx,edi
  42b0c3:	mov    eax,DWORD PTR [ebp-0xc]
  42b0c6:	call   0x42af04
  42b0cb:	add    esi,eax
  42b0cd:	dec    ebx
  42b0ce:	jmp    0x42afb3
  42b0d3:	mov    eax,DWORD PTR [ebp-0x10]
  42b0d6:	mov    BYTE PTR [eax],0x0
  42b0d9:	xor    eax,eax
  42b0db:	pop    edx
  42b0dc:	pop    ecx
  42b0dd:	pop    ecx
  42b0de:	mov    DWORD PTR fs:[eax],edx
  42b0e1:	push   0x42b108
  42b0e6:	lea    eax,[ebp-0x18]
  42b0e9:	mov    edx,0x2
  42b0ee:	call   0x404fac
  42b0f3:	lea    eax,[ebp-0x8]
  42b0f6:	mov    edx,0x2
  42b0fb:	call   0x404fac
  42b100:	ret    
  42b101:	jmp    0x40481c
  42b106:	jmp    0x42b0e6
  42b108:	mov    eax,esi
  42b10a:	pop    edi
  42b10b:	pop    esi
  42b10c:	pop    ebx
  42b10d:	mov    esp,ebp
  42b10f:	pop    ebp
  42b110:	ret    
  42b111:	add    BYTE PTR [eax],al
  42b113:	add    bh,bh
  42b115:	(bad)  
  42b116:	(bad)  
  42b117:	inc    DWORD PTR [ecx]
  42b119:	add    BYTE PTR [eax],al
  42b11b:	add    BYTE PTR [esi],ch
  42b11d:	add    BYTE PTR [eax],al
  42b11f:	add    bh,bh
  42b121:	(bad)  
  42b122:	(bad)  
  42b123:	inc    DWORD PTR [edx]
  42b125:	add    BYTE PTR [eax],al
  42b127:	add    BYTE PTR [eax],dh
  42b129:	js     0x42b12b
  42b12b:	add    BYTE PTR [ebp-0x75],dl
  42b12e:	in     al,dx
  42b12f:	push   0x0
  42b131:	push   0x0
  42b133:	push   0x0
  42b135:	push   ebx
  42b136:	push   esi
  42b137:	push   edi
  42b138:	mov    esi,ecx
  42b13a:	mov    edi,edx
  42b13c:	mov    ebx,eax
  42b13e:	xor    eax,eax
  42b140:	push   ebp
  42b141:	push   0x42b1d0
  42b146:	push   DWORD PTR fs:[eax]
  42b149:	mov    DWORD PTR fs:[eax],esp
  42b14c:	lea    ecx,[ebp-0x4]
  42b14f:	mov    edx,edi
  42b151:	mov    eax,ebx
  42b153:	call   0x42b280
  42b158:	cmp    DWORD PTR [ebp-0x4],0x0
  42b15c:	sete   BYTE PTR [esi]
  42b15f:	cmp    BYTE PTR [esi],0x0
  42b162:	jne    0x42b1b5
  42b164:	mov    esi,0x8
  42b169:	mov    ebx,DWORD PTR [ebp+0x8]
  42b16c:	push   0x1
  42b16e:	lea    eax,[ebp-0xc]
  42b171:	push   eax
  42b172:	lea    eax,[ebp-0x4]
  42b175:	mov    cl,0x1
  42b177:	mov    edx,0x42b1e8
  42b17c:	call   0x41c7c4
  42b181:	mov    ecx,DWORD PTR [ebp-0xc]
  42b184:	lea    eax,[ebp-0x8]
  42b187:	mov    edx,0x42b1f4
  42b18c:	call   0x4052a0
  42b191:	mov    edx,DWORD PTR [ebp-0x8]
  42b194:	xor    ecx,ecx
  42b196:	mov    eax,ds:0x41be90
  42b19b:	call   0x41b254
  42b1a0:	cmp    eax,0xffff
  42b1a5:	jbe    0x42b1ac
  42b1a7:	call   0x403f68
  42b1ac:	mov    WORD PTR [ebx],ax
  42b1af:	add    ebx,0x2
  42b1b2:	dec    esi
  42b1b3:	jne    0x42b16c
  42b1b5:	xor    eax,eax
  42b1b7:	pop    edx
  42b1b8:	pop    ecx
  42b1b9:	pop    ecx
  42b1ba:	mov    DWORD PTR fs:[eax],edx
  42b1bd:	push   0x42b1d7
  42b1c2:	lea    eax,[ebp-0xc]
  42b1c5:	mov    edx,0x3
  42b1ca:	call   0x404fac
  42b1cf:	ret    
  42b1d0:	jmp    0x40481c
  42b1d5:	jmp    0x42b1c2
  42b1d7:	pop    edi
  42b1d8:	pop    esi
  42b1d9:	pop    ebx
  42b1da:	mov    esp,ebp
  42b1dc:	pop    ebp
  42b1dd:	ret    0x4
  42b1e0:	(bad)  
  42b1e1:	(bad)  
  42b1e2:	(bad)  
  42b1e3:	inc    DWORD PTR [ecx]
  42b1e5:	add    BYTE PTR [eax],al
  42b1e7:	add    BYTE PTR [edx],bh
  42b1e9:	add    BYTE PTR [eax],al
  42b1eb:	add    bh,bh
  42b1ed:	(bad)  
  42b1ee:	(bad)  
  42b1ef:	inc    DWORD PTR [ecx]
  42b1f1:	add    BYTE PTR [eax],al
  42b1f3:	add    BYTE PTR [eax+eax*1],ah
  42b1f6:	add    BYTE PTR [eax],al
  42b1f8:	push   ebx
  42b1f9:	push   esi
  42b1fa:	push   edi
  42b1fb:	add    esp,0xffffffe8
  42b1fe:	mov    ebx,edx
  42b200:	mov    dl,0x1
  42b202:	mov    eax,ds:0x42ad10
  42b207:	call   0x42ae30
  42b20c:	mov    DWORD PTR [esp],eax
  42b20f:	lea    eax,[esp+0x8]
  42b213:	push   eax
  42b214:	lea    ecx,[esp+0x8]
  42b218:	mov    eax,DWORD PTR [esp+0x4]
  42b21c:	mov    eax,DWORD PTR [eax]
  42b21e:	mov    edx,ebx
  42b220:	call   0x42b12c
  42b225:	mov    eax,DWORD PTR [esp]
  42b228:	lea    esi,[esp+0x8]
  42b22c:	lea    edi,[eax+0x8]
  42b22f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b233:	cmp    BYTE PTR [esp+0x4],0x0
  42b238:	je     0x42b26e
  42b23a:	lea    ecx,[esp+0x4]
  42b23e:	mov    eax,DWORD PTR [esp]
  42b241:	mov    eax,DWORD PTR [eax]
  42b243:	mov    edx,ebx
  42b245:	call   0x42af74
  42b24a:	mov    edx,DWORD PTR [esp]
  42b24d:	mov    DWORD PTR [edx+0x4],eax
  42b250:	cmp    BYTE PTR [esp+0x4],0x0
  42b255:	je     0x42b265
  42b257:	mov    edx,esp
  42b259:	mov    eax,ds:0x41be90
  42b25e:	call   0x41b14c
  42b263:	jmp    0x42b275
  42b265:	mov    eax,DWORD PTR [esp]
  42b268:	mov    BYTE PTR [eax+0x18],0x0
  42b26c:	jmp    0x42b275
  42b26e:	mov    eax,DWORD PTR [esp]
  42b271:	mov    BYTE PTR [eax+0x18],0x1
  42b275:	mov    eax,DWORD PTR [esp]
  42b278:	add    esp,0x18
  42b27b:	pop    edi
  42b27c:	pop    esi
  42b27d:	pop    ebx
  42b27e:	ret    
  42b27f:	nop
  42b280:	push   ebp
  42b281:	mov    ebp,esp
  42b283:	push   ecx
  42b284:	mov    ecx,0x10
  42b289:	push   0x0
  42b28b:	push   0x0
  42b28d:	dec    ecx
  42b28e:	jne    0x42b289
  42b290:	xchg   DWORD PTR [ebp-0x4],ecx
  42b293:	push   ebx
  42b294:	push   esi
  42b295:	push   edi
  42b296:	mov    ebx,ecx
  42b298:	mov    esi,edx
  42b29a:	xor    eax,eax
  42b29c:	push   ebp
  42b29d:	push   0x42b86d
  42b2a2:	push   DWORD PTR fs:[eax]
  42b2a5:	mov    DWORD PTR fs:[eax],esp
  42b2a8:	mov    eax,ebx
  42b2aa:	call   0x404f88
  42b2af:	lea    eax,[ebp-0x4]
  42b2b2:	mov    edx,esi
  42b2b4:	call   0x405020
  42b2b9:	mov    eax,DWORD PTR [ebp-0x4]
  42b2bc:	call   0x405248
  42b2c1:	test   eax,eax
  42b2c3:	je     0x42b847
  42b2c9:	mov    eax,0x1
  42b2ce:	mov    edx,DWORD PTR [ebp-0x4]
  42b2d1:	dec    eax
  42b2d2:	test   edx,edx
  42b2d4:	je     0x42b2db
  42b2d6:	cmp    eax,DWORD PTR [edx-0x4]
  42b2d9:	jb     0x42b2e0
  42b2db:	call   0x403f68
  42b2e0:	inc    eax
  42b2e1:	cmp    BYTE PTR [edx+eax*1-0x1],0x3a
  42b2e6:	jne    0x42b2f8
  42b2e8:	lea    eax,[ebp-0x4]
  42b2eb:	mov    ecx,DWORD PTR [ebp-0x4]
  42b2ee:	mov    edx,0x42b884
  42b2f3:	call   0x4052a0
  42b2f8:	mov    eax,DWORD PTR [ebp-0x4]
  42b2fb:	call   0x405248
  42b300:	mov    edx,DWORD PTR [ebp-0x4]
  42b303:	dec    eax
  42b304:	test   edx,edx
  42b306:	je     0x42b30d
  42b308:	cmp    eax,DWORD PTR [edx-0x4]
  42b30b:	jb     0x42b312
  42b30d:	call   0x403f68
  42b312:	inc    eax
  42b313:	cmp    BYTE PTR [edx+eax*1-0x1],0x3a
  42b318:	jne    0x42b327
  42b31a:	lea    eax,[ebp-0x4]
  42b31d:	mov    edx,0x42b884
  42b322:	call   0x405254
  42b327:	xor    eax,eax
  42b329:	mov    DWORD PTR [ebp-0x8],eax
  42b32c:	xor    eax,eax
  42b32e:	mov    DWORD PTR [ebp-0xc],eax
  42b331:	mov    eax,DWORD PTR [ebp-0x4]
  42b334:	call   0x405248
  42b339:	test   eax,eax
  42b33b:	jle    0x42b3e7
  42b341:	mov    DWORD PTR [ebp-0x14],eax
  42b344:	mov    esi,0x1
  42b349:	mov    eax,DWORD PTR [ebp-0x4]
  42b34c:	dec    esi
  42b34d:	test   eax,eax
  42b34f:	je     0x42b356
  42b351:	cmp    esi,DWORD PTR [eax-0x4]
  42b354:	jb     0x42b35b
  42b356:	call   0x403f68
  42b35b:	inc    esi
  42b35c:	movzx  eax,BYTE PTR [eax+esi*1-0x1]
  42b361:	cmp    eax,0x3a
  42b364:	jg     0x42b37a
  42b366:	je     0x42b3b1
  42b368:	sub    eax,0x2e
  42b36b:	je     0x42b38f
  42b36d:	add    eax,0xfffffffe
  42b370:	sub    eax,0xa
  42b373:	jb     0x42b3dd
  42b375:	jmp    0x42b847
  42b37a:	add    eax,0xffffffbf
  42b37d:	sub    eax,0x6
  42b380:	jb     0x42b3d3
  42b382:	add    eax,0xffffffe6
  42b385:	sub    eax,0x6
  42b388:	jb     0x42b3d3
  42b38a:	jmp    0x42b847
  42b38f:	inc    DWORD PTR [ebp-0x8]
  42b392:	cmp    DWORD PTR [ebp-0x8],0x4
  42b396:	jge    0x42b847
  42b39c:	mov    eax,DWORD PTR [ebp-0x8]
  42b39f:	dec    eax
  42b3a0:	cmp    eax,0x2
  42b3a3:	jbe    0x42b3aa
  42b3a5:	call   0x403f68
  42b3aa:	inc    eax
  42b3ab:	mov    DWORD PTR [ebp+eax*4-0x44],esi
  42b3af:	jmp    0x42b3dd
  42b3b1:	inc    DWORD PTR [ebp-0xc]
  42b3b4:	cmp    DWORD PTR [ebp-0xc],0x8
  42b3b8:	jge    0x42b847
  42b3be:	mov    eax,DWORD PTR [ebp-0xc]
  42b3c1:	dec    eax
  42b3c2:	cmp    eax,0x7
  42b3c5:	jbe    0x42b3cc
  42b3c7:	call   0x403f68
  42b3cc:	inc    eax
  42b3cd:	mov    DWORD PTR [ebp+eax*4-0x38],esi
  42b3d1:	jmp    0x42b3dd
  42b3d3:	cmp    DWORD PTR [ebp-0x8],0x0
  42b3d7:	jg     0x42b847
  42b3dd:	inc    esi
  42b3de:	dec    DWORD PTR [ebp-0x14]
  42b3e1:	jne    0x42b349
  42b3e7:	mov    eax,DWORD PTR [ebp-0x8]
  42b3ea:	test   eax,eax
  42b3ec:	je     0x42b3f7
  42b3ee:	sub    eax,0x3
  42b3f1:	jne    0x42b847
  42b3f7:	cmp    DWORD PTR [ebp-0x8],0x3
  42b3fb:	jne    0x42b42a
  42b3fd:	mov    eax,DWORD PTR [ebp-0xc]
  42b400:	add    eax,0xfffffffe
  42b403:	sub    eax,0x5
  42b406:	jae    0x42b847
  42b40c:	mov    eax,DWORD PTR [ebp-0xc]
  42b40f:	dec    eax
  42b410:	cmp    eax,0x7
  42b413:	jbe    0x42b41a
  42b415:	call   0x403f68
  42b41a:	inc    eax
  42b41b:	mov    eax,DWORD PTR [ebp+eax*4-0x38]
  42b41f:	cmp    eax,DWORD PTR [ebp-0x40]
  42b422:	jg     0x42b847
  42b428:	jmp    0x42b439
  42b42a:	mov    eax,DWORD PTR [ebp-0xc]
  42b42d:	add    eax,0xfffffffe
  42b430:	sub    eax,0x6
  42b433:	jae    0x42b847
  42b439:	lea    eax,[ebp-0x48]
  42b43c:	push   eax
  42b43d:	mov    ecx,DWORD PTR [ebp-0x34]
  42b440:	dec    ecx
  42b441:	mov    edx,0x1
  42b446:	mov    eax,DWORD PTR [ebp-0x4]
  42b449:	call   0x405480
  42b44e:	mov    ecx,DWORD PTR [ebp-0x48]
  42b451:	lea    eax,[ebp-0x44]
  42b454:	mov    edx,0x42b890
  42b459:	call   0x4052a0
  42b45e:	mov    edx,DWORD PTR [ebp-0x44]
  42b461:	or     ecx,0xffffffff
  42b464:	mov    eax,ds:0x41be90
  42b469:	call   0x41b254
  42b46e:	mov    edi,eax
  42b470:	test   edi,edi
  42b472:	jl     0x42b847
  42b478:	cmp    edi,0xffff
  42b47e:	jg     0x42b847
  42b484:	lea    eax,[ebp-0x4c]
  42b487:	push   eax
  42b488:	mov    ecx,0x1
  42b48d:	mov    edx,edi
  42b48f:	mov    eax,ds:0x41be90
  42b494:	call   0x41b168
  42b499:	mov    edx,DWORD PTR [ebp-0x4c]
  42b49c:	mov    eax,ebx
  42b49e:	mov    ecx,0x42b89c
  42b4a3:	call   0x4052a0
  42b4a8:	mov    BYTE PTR [ebp-0xd],0x0
  42b4ac:	mov    eax,DWORD PTR [ebp-0xc]
  42b4af:	sub    eax,0x2
  42b4b2:	jl     0x42b5dd
  42b4b8:	inc    eax
  42b4b9:	mov    DWORD PTR [ebp-0x14],eax
  42b4bc:	mov    esi,0x2
  42b4c1:	mov    eax,esi
  42b4c3:	dec    eax
  42b4c4:	dec    eax
  42b4c5:	cmp    eax,0x7
  42b4c8:	jbe    0x42b4cf
  42b4ca:	call   0x403f68
  42b4cf:	inc    eax
  42b4d0:	mov    edi,DWORD PTR [ebp+eax*4-0x38]
  42b4d4:	dec    esi
  42b4d5:	cmp    esi,0x7
  42b4d8:	jbe    0x42b4df
  42b4da:	call   0x403f68
  42b4df:	inc    esi
  42b4e0:	mov    eax,DWORD PTR [ebp+esi*4-0x38]
  42b4e4:	dec    eax
  42b4e5:	cmp    edi,eax
  42b4e7:	jne    0x42b52e
  42b4e9:	cmp    BYTE PTR [ebp-0xd],0x0
  42b4ed:	je     0x42b4fb
  42b4ef:	mov    eax,ebx
  42b4f1:	call   0x404f88
  42b4f6:	jmp    0x42b847
  42b4fb:	mov    BYTE PTR [ebp-0xd],0x1
  42b4ff:	mov    eax,0x8
  42b504:	sub    eax,DWORD PTR [ebp-0xc]
  42b507:	cmp    DWORD PTR [ebp-0x8],0x0
  42b50b:	jle    0x42b510
  42b50d:	sub    eax,0x2
  42b510:	mov    edi,eax
  42b512:	test   edi,edi
  42b514:	jle    0x42b5d3
  42b51a:	mov    eax,ebx
  42b51c:	mov    edx,0x42b8a8
  42b521:	call   0x405254
  42b526:	dec    edi
  42b527:	jne    0x42b51a
  42b529:	jmp    0x42b5d3
  42b52e:	lea    eax,[ebp-0x54]
  42b531:	push   eax
  42b532:	dec    esi
  42b533:	cmp    esi,0x7
  42b536:	jbe    0x42b53d
  42b538:	call   0x403f68
  42b53d:	inc    esi
  42b53e:	mov    ecx,DWORD PTR [ebp+esi*4-0x38]
  42b542:	mov    eax,esi
  42b544:	dec    eax
  42b545:	dec    eax
  42b546:	cmp    eax,0x7
  42b549:	jbe    0x42b550
  42b54b:	call   0x403f68
  42b550:	inc    eax
  42b551:	sub    ecx,edi
  42b553:	dec    ecx
  42b554:	mov    eax,esi
  42b556:	dec    eax
  42b557:	dec    eax
  42b558:	cmp    eax,0x7
  42b55b:	jbe    0x42b562
  42b55d:	call   0x403f68
  42b562:	inc    eax
  42b563:	mov    edx,edi
  42b565:	inc    edx
  42b566:	mov    eax,DWORD PTR [ebp-0x4]
  42b569:	call   0x405480
  42b56e:	mov    ecx,DWORD PTR [ebp-0x54]
  42b571:	lea    eax,[ebp-0x50]
  42b574:	mov    edx,0x42b890
  42b579:	call   0x4052a0
  42b57e:	mov    edx,DWORD PTR [ebp-0x50]
  42b581:	or     ecx,0xffffffff
  42b584:	mov    eax,ds:0x41be90
  42b589:	call   0x41b254
  42b58e:	mov    edi,eax
  42b590:	test   edi,edi
  42b592:	jl     0x42b59c
  42b594:	cmp    edi,0xffff
  42b59a:	jle    0x42b5a8
  42b59c:	mov    eax,ebx
  42b59e:	call   0x404f88
  42b5a3:	jmp    0x42b847
  42b5a8:	push   DWORD PTR [ebx]
  42b5aa:	lea    eax,[ebp-0x58]
  42b5ad:	push   eax
  42b5ae:	mov    ecx,0x1
  42b5b3:	mov    edx,edi
  42b5b5:	mov    eax,ds:0x41be90
  42b5ba:	call   0x41b168
  42b5bf:	push   DWORD PTR [ebp-0x58]
  42b5c2:	push   0x42b89c
  42b5c7:	mov    eax,ebx
  42b5c9:	mov    edx,0x3
  42b5ce:	call   0x40531c
  42b5d3:	inc    esi
  42b5d4:	dec    DWORD PTR [ebp-0x14]
  42b5d7:	jne    0x42b4c1
  42b5dd:	cmp    DWORD PTR [ebp-0x8],0x0
  42b5e1:	jne    0x42b671
  42b5e7:	lea    eax,[ebp-0x60]
  42b5ea:	push   eax
  42b5eb:	mov    eax,DWORD PTR [ebp-0xc]
  42b5ee:	dec    eax
  42b5ef:	cmp    eax,0x7
  42b5f2:	jbe    0x42b5f9
  42b5f4:	call   0x403f68
  42b5f9:	inc    eax
  42b5fa:	mov    edx,DWORD PTR [ebp+eax*4-0x38]
  42b5fe:	inc    edx
  42b5ff:	mov    ecx,0x7fffffff
  42b604:	mov    eax,DWORD PTR [ebp-0x4]
  42b607:	call   0x405480
  42b60c:	mov    ecx,DWORD PTR [ebp-0x60]
  42b60f:	lea    eax,[ebp-0x5c]
  42b612:	mov    edx,0x42b890
  42b617:	call   0x4052a0
  42b61c:	mov    edx,DWORD PTR [ebp-0x5c]
  42b61f:	or     ecx,0xffffffff
  42b622:	mov    eax,ds:0x41be90
  42b627:	call   0x41b254
  42b62c:	mov    edi,eax
  42b62e:	test   edi,edi
  42b630:	jl     0x42b63a
  42b632:	cmp    edi,0xffff
  42b638:	jle    0x42b646
  42b63a:	mov    eax,ebx
  42b63c:	call   0x404f88
  42b641:	jmp    0x42b847
  42b646:	push   DWORD PTR [ebx]
  42b648:	lea    eax,[ebp-0x64]
  42b64b:	push   eax
  42b64c:	mov    ecx,0x1
  42b651:	mov    edx,edi
  42b653:	mov    eax,ds:0x41be90
  42b658:	call   0x41b168
  42b65d:	push   DWORD PTR [ebp-0x64]
  42b660:	push   0x42b89c
  42b665:	mov    eax,ebx
  42b667:	mov    edx,0x3
  42b66c:	call   0x40531c
  42b671:	cmp    DWORD PTR [ebp-0x8],0x0
  42b675:	jle    0x42b836
  42b67b:	lea    eax,[ebp-0x68]
  42b67e:	push   eax
  42b67f:	mov    eax,DWORD PTR [ebp-0xc]
  42b682:	dec    eax
  42b683:	cmp    eax,0x7
  42b686:	jbe    0x42b68d
  42b688:	call   0x403f68
  42b68d:	inc    eax
  42b68e:	mov    esi,DWORD PTR [ebp+eax*4-0x38]
  42b692:	mov    ecx,DWORD PTR [ebp-0x40]
  42b695:	sub    ecx,esi
  42b697:	dec    ecx
  42b698:	mov    eax,DWORD PTR [ebp-0xc]
  42b69b:	dec    eax
  42b69c:	cmp    eax,0x7
  42b69f:	jbe    0x42b6a6
  42b6a1:	call   0x403f68
  42b6a6:	inc    eax
  42b6a7:	mov    edx,esi
  42b6a9:	inc    edx
  42b6aa:	mov    eax,DWORD PTR [ebp-0x4]
  42b6ad:	call   0x405480
  42b6b2:	mov    edx,DWORD PTR [ebp-0x68]
  42b6b5:	or     ecx,0xffffffff
  42b6b8:	mov    eax,ds:0x41be90
  42b6bd:	call   0x41b254
  42b6c2:	mov    edi,eax
  42b6c4:	test   edi,edi
  42b6c6:	jl     0x42b6d0
  42b6c8:	cmp    edi,0xff
  42b6ce:	jle    0x42b6dc
  42b6d0:	mov    eax,ebx
  42b6d2:	call   0x404f88
  42b6d7:	jmp    0x42b847
  42b6dc:	lea    eax,[ebp-0x6c]
  42b6df:	push   eax
  42b6e0:	mov    ecx,0x2
  42b6e5:	mov    edx,edi
  42b6e7:	mov    eax,ds:0x41be90
  42b6ec:	call   0x41b168
  42b6f1:	mov    edx,DWORD PTR [ebp-0x6c]
  42b6f4:	mov    eax,ebx
  42b6f6:	call   0x405254
  42b6fb:	lea    eax,[ebp-0x70]
  42b6fe:	push   eax
  42b6ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  42b702:	mov    esi,DWORD PTR [ebp-0x40]
  42b705:	sub    ecx,esi
  42b707:	dec    ecx
  42b708:	mov    edx,esi
  42b70a:	inc    edx
  42b70b:	mov    eax,DWORD PTR [ebp-0x4]
  42b70e:	call   0x405480
  42b713:	mov    edx,DWORD PTR [ebp-0x70]
  42b716:	or     ecx,0xffffffff
  42b719:	mov    eax,ds:0x41be90
  42b71e:	call   0x41b254
  42b723:	mov    edi,eax
  42b725:	test   edi,edi
  42b727:	jl     0x42b731
  42b729:	cmp    edi,0xff
  42b72f:	jle    0x42b73d
  42b731:	mov    eax,ebx
  42b733:	call   0x404f88
  42b738:	jmp    0x42b847
  42b73d:	push   DWORD PTR [ebx]
  42b73f:	lea    eax,[ebp-0x74]
  42b742:	push   eax
  42b743:	mov    ecx,0x2
  42b748:	mov    edx,edi
  42b74a:	mov    eax,ds:0x41be90
  42b74f:	call   0x41b168
  42b754:	push   DWORD PTR [ebp-0x74]
  42b757:	push   0x42b89c
  42b75c:	mov    eax,ebx
  42b75e:	mov    edx,0x3
  42b763:	call   0x40531c
  42b768:	lea    eax,[ebp-0x78]
  42b76b:	push   eax
  42b76c:	mov    ecx,DWORD PTR [ebp-0x38]
  42b76f:	mov    esi,DWORD PTR [ebp-0x3c]
  42b772:	sub    ecx,esi
  42b774:	dec    ecx
  42b775:	mov    edx,esi
  42b777:	inc    edx
  42b778:	mov    eax,DWORD PTR [ebp-0x4]
  42b77b:	call   0x405480
  42b780:	mov    edx,DWORD PTR [ebp-0x78]
  42b783:	or     ecx,0xffffffff
  42b786:	mov    eax,ds:0x41be90
  42b78b:	call   0x41b254
  42b790:	mov    edi,eax
  42b792:	test   edi,edi
  42b794:	jl     0x42b79e
  42b796:	cmp    edi,0xff
  42b79c:	jle    0x42b7aa
  42b79e:	mov    eax,ebx
  42b7a0:	call   0x404f88
  42b7a5:	jmp    0x42b847
  42b7aa:	lea    eax,[ebp-0x7c]
  42b7ad:	push   eax
  42b7ae:	mov    ecx,0x2
  42b7b3:	mov    edx,edi
  42b7b5:	mov    eax,ds:0x41be90
  42b7ba:	call   0x41b168
  42b7bf:	mov    edx,DWORD PTR [ebp-0x7c]
  42b7c2:	mov    eax,ebx
  42b7c4:	call   0x405254
  42b7c9:	lea    eax,[ebp-0x80]
  42b7cc:	push   eax
  42b7cd:	mov    edx,DWORD PTR [ebp-0x38]
  42b7d0:	inc    edx
  42b7d1:	mov    ecx,0x3
  42b7d6:	mov    eax,DWORD PTR [ebp-0x4]
  42b7d9:	call   0x405480
  42b7de:	mov    edx,DWORD PTR [ebp-0x80]
  42b7e1:	or     ecx,0xffffffff
  42b7e4:	mov    eax,ds:0x41be90
  42b7e9:	call   0x41b254
  42b7ee:	mov    edi,eax
  42b7f0:	test   edi,edi
  42b7f2:	jl     0x42b7fc
  42b7f4:	cmp    edi,0xff
  42b7fa:	jle    0x42b805
  42b7fc:	mov    eax,ebx
  42b7fe:	call   0x404f88
  42b803:	jmp    0x42b847
  42b805:	push   DWORD PTR [ebx]
  42b807:	lea    eax,[ebp-0x84]
  42b80d:	push   eax
  42b80e:	mov    ecx,0x2
  42b813:	mov    edx,edi
  42b815:	mov    eax,ds:0x41be90
  42b81a:	call   0x41b168
  42b81f:	push   DWORD PTR [ebp-0x84]
  42b825:	push   0x42b89c
  42b82a:	mov    eax,ebx
  42b82c:	mov    edx,0x3
  42b831:	call   0x40531c
  42b836:	mov    eax,DWORD PTR [ebx]
  42b838:	call   0x405248
  42b83d:	mov    edx,eax
  42b83f:	dec    edx
  42b840:	mov    eax,ebx
  42b842:	call   0x4056a8
  42b847:	xor    eax,eax
  42b849:	pop    edx
  42b84a:	pop    ecx
  42b84b:	pop    ecx
  42b84c:	mov    DWORD PTR fs:[eax],edx
  42b84f:	push   0x42b874
  42b854:	lea    eax,[ebp-0x84]
  42b85a:	mov    edx,0x11
  42b85f:	call   0x404fac
  42b864:	lea    eax,[ebp-0x4]
  42b867:	call   0x404f88
  42b86c:	ret    
  42b86d:	jmp    0x40481c
  42b872:	jmp    0x42b854
  42b874:	pop    edi
  42b875:	pop    esi
  42b876:	pop    ebx
  42b877:	mov    esp,ebp
  42b879:	pop    ebp
  42b87a:	ret    
  42b87b:	add    bh,bh
  42b87d:	(bad)  
  42b87e:	(bad)  
  42b87f:	inc    DWORD PTR [ecx]
  42b881:	add    BYTE PTR [eax],al
  42b883:	add    BYTE PTR [eax],dh
  42b885:	add    BYTE PTR [eax],al
  42b887:	add    bh,bh
  42b889:	(bad)  
  42b88a:	(bad)  
  42b88b:	inc    DWORD PTR [ecx]
  42b88d:	add    BYTE PTR [eax],al
  42b88f:	add    BYTE PTR [eax+eax*1],ah
  42b892:	add    BYTE PTR [eax],al
  42b894:	(bad)  
  42b895:	(bad)  
  42b896:	(bad)  
  42b897:	inc    DWORD PTR [ecx]
  42b899:	add    BYTE PTR [eax],al
  42b89b:	add    BYTE PTR [edx],bh
  42b89d:	add    BYTE PTR [eax],al
  42b89f:	add    bh,bh
  42b8a1:	(bad)  
  42b8a2:	(bad)  
  42b8a3:	inc    DWORD PTR [edx]
  42b8a5:	add    BYTE PTR [eax],al
  42b8a7:	add    BYTE PTR [eax],dh
  42b8a9:	cmp    al,BYTE PTR [eax]
  42b8ab:	add    al,bh
  42b8ad:	mov    eax,0x42
	...
  42b8ca:	add    BYTE PTR [eax],al
  42b8cc:	cld    
  42b8cd:	mov    eax,0xc0042
  42b8d2:	add    BYTE PTR [eax],al
  42b8d4:	dec    esp
  42b8d5:	mov    ecx,0x42d00041
  42b8da:	inc    eax
  42b8db:	add    ah,bl
  42b8dd:	inc    edx
  42b8de:	inc    eax
  42b8df:	add    al,ah
  42b8e1:	inc    edx
  42b8e2:	inc    eax
  42b8e3:	add    ah,ah
  42b8e5:	inc    edx
  42b8e6:	inc    eax
  42b8e7:	add    al,bl
  42b8e9:	inc    edx
  42b8ea:	inc    eax
  42b8eb:	add    BYTE PTR [eax],bh
  42b8ed:	inc    eax
  42b8ee:	inc    eax
  42b8ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  42b8f3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  42b8f9:	mov    ebp,0x45250041
  42b8fe:	dec    ecx
  42b8ff:	fs push ebx
  42b901:	outs   dx,DWORD PTR ds:[esi]
  42b902:	arpl   WORD PTR [ebx+0x73],bp
  42b905:	push   ebp
  42b906:	inc    esp
  42b907:	push   eax
  42b908:	dec    esi
  42b909:	outs   dx,DWORD PTR ds:[esi]
  42b90a:	je     0x42b95f
  42b90c:	jne    0x42b97e
  42b90e:	jo     0x42b97f
  42b910:	jb     0x42b986
  42b912:	gs fs inc edx
  42b915:	jns    0x42b96a
  42b917:	dec    edi
  42b918:	inc    ebx
  42b919:	dec    ebx
  42b91a:	push   ebx
  42b91b:	push   esi
  42b91c:	gs jb  0x42b992
  42b91f:	imul   ebp,DWORD PTR [edi+0x6e],0xb928c08b
  42b926:	inc    edx
  42b927:	add    BYTE PTR [ebx],al
  42b929:	or     eax,0x636f5354
  42b92e:	imul   esi,DWORD PTR [ebx+0x56],0x65
  42b932:	jb     0x42b9a7
  42b934:	imul   ebp,DWORD PTR [edi+0x6e],0x1
  42b93b:	add    BYTE PTR [ebx],al
  42b93d:	add    BYTE PTR [eax],al
  42b93f:	add    BYTE PTR [ecx+edi*4],ah
  42b942:	inc    edx
  42b943:	add    BYTE PTR [ecx],cl
  42b945:	jae    0x42b9bd
  42b947:	dec    esi
  42b948:	outs   dx,DWORD PTR ds:[esi]
  42b949:	push   ebx
  42b94a:	outs   dx,DWORD PTR ds:[esi]
  42b94b:	arpl   WORD PTR [ebx+0x73],bp
  42b94e:	or     BYTE PTR [ebx+0x76],dh
  42b951:	push   ebx
  42b952:	outs   dx,DWORD PTR ds:[esi]
  42b953:	arpl   WORD PTR [ebx+0x73],bp
  42b956:	xor    al,0x9
  42b958:	jae    0x42b9d0
  42b95a:	push   ebx
  42b95b:	outs   dx,DWORD PTR ds:[esi]
  42b95c:	arpl   WORD PTR [ebx+0x73],bp
  42b95f:	xor    al,0x41
  42b961:	or     BYTE PTR [ebx+0x76],dh
  42b964:	push   ebx
  42b965:	outs   dx,DWORD PTR ds:[esi]
  42b966:	arpl   WORD PTR [ebx+0x73],bp
  42b969:	xor    eax,0x53644907
  42b96e:	outs   dx,DWORD PTR ds:[esi]
  42b96f:	arpl   WORD PTR [ebx+0x73],bp
  42b972:	mov    eax,eax
  42b974:	js     0x42b92f
  42b976:	inc    edx
  42b977:	add    BYTE PTR [ebx],al
  42b979:	adc    al,0x54
  42b97b:	push   ebx
  42b97c:	outs   dx,DWORD PTR ds:[esi]
  42b97d:	arpl   WORD PTR [ebx+0x73],bp
  42b980:	inc    ecx
  42b981:	jne    0x42b9f7
  42b983:	push   0x69746e65
  42b988:	arpl   WORD PTR [ecx+0x74],sp
  42b98b:	imul   ebp,DWORD PTR [edi+0x6e],0x1
  42b992:	add    BYTE PTR [ecx],al
  42b994:	add    BYTE PTR [eax],al
  42b996:	add    BYTE PTR [ecx+edi*4+0x42],dh
  42b99a:	add    BYTE PTR [edx],dl
  42b99c:	jae    0x42b9ff
  42b99e:	dec    esi
  42b99f:	outs   dx,DWORD PTR ds:[esi]
  42b9a0:	inc    ecx
  42b9a1:	jne    0x42ba17
  42b9a3:	push   0x69746e65
  42b9a8:	arpl   WORD PTR [ecx+0x74],sp
  42b9ab:	imul   ebp,DWORD PTR [edi+0x6e],0x55617312
  42b9b2:	jae    0x42ba19
  42b9b4:	jb     0x42ba24
  42b9b6:	popa   
  42b9b7:	ins    DWORD PTR es:[edi],dx
  42b9b8:	gs push eax
  42b9ba:	popa   
  42b9bb:	jae    0x42ba30
  42b9bd:	ja     0x42ba2e
  42b9bf:	jb     0x42ba25
  42b9c1:	pop    es
  42b9c2:	dec    ecx
  42b9c3:	fs push ebx
  42b9c5:	outs   dx,DWORD PTR ds:[esi]
  42b9c6:	arpl   WORD PTR [ebx+0x73],bp
  42b9c9:	lea    eax,[eax+0x0]
  42b9cc:	sbb    BYTE PTR [edx+0x42],bh
	...
  42b9da:	add    BYTE PTR [eax],al
  42b9dc:	nop
  42b9dd:	mov    edx,0x42
	...
  42b9ea:	add    BYTE PTR [eax],al
  42b9ec:	jl     0x42b9a8
  42b9ee:	inc    edx
  42b9ef:	add    BYTE PTR [eax-0x28000000],ch
  42b9f5:	cwde   
  42b9f6:	inc    edx
  42b9f7:	add    BYTE PTR [eax],bl
  42b9f9:	test   eax,0x42dc0041
  42b9fe:	inc    eax
  42b9ff:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42ba05:	inc    edx
  42ba06:	inc    eax
  42ba07:	add    al,bl
  42ba09:	inc    edx
  42ba0a:	inc    eax
  42ba0b:	add    BYTE PTR [eax],bh
  42ba0d:	inc    eax
  42ba0e:	inc    eax
  42ba0f:	add    BYTE PTR [eax+eax*2+0x40],dl
  42ba13:	add    al,cl
  42ba15:	jmp    0x42ba59
  42ba17:	add    ah,cl
  42ba19:	mov    ebx,0xa5700042
  42ba1e:	inc    ecx
  42ba1f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42ba26:	inc    ecx
  42ba27:	add    BYTE PTR [ebx+ebx*4-0x59a7ffbe],dh
  42ba2e:	inc    ecx
  42ba2f:	add    BYTE PTR [eax-0x59],dl
  42ba32:	inc    ecx
  42ba33:	add    BYTE PTR [eax],dh
  42ba35:	test   eax,0xa6680041
  42ba3a:	inc    ecx
  42ba3b:	add    BYTE PTR [eax-0x5a],ah
  42ba3e:	inc    ecx
  42ba3f:	add    BYTE PTR [eax],bh
  42ba41:	test   eax,0x46bc0041
  42ba46:	inc    edx
  42ba47:	add    BYTE PTR [edx+ecx*8+0x4dc40042],al
  42ba4e:	inc    edx
  42ba4f:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42ba53:	add    ah,cl
  42ba55:	dec    esi
  42ba56:	inc    edx
  42ba57:	add    BYTE PTR [edx+ecx*8+0x42],dh
  42ba5b:	add    BYTE PTR [eax+0x4400429b],dh
  42ba61:	retf   0x42
  42ba64:	test   al,0xe2
  42ba66:	inc    edx
  42ba67:	add    BYTE PTR [edx+eiz*8],bh
  42ba6a:	inc    edx
  42ba6b:	add    ah,al
  42ba6d:	jmp    0xeb56bab4
  42ba72:	inc    edx
  42ba73:	add    BYTE PTR [edx*8-0x2ac7ffbe],al
  42ba7a:	inc    edx
  42ba7b:	add    BYTE PTR [esp+edx*2],cl
  42ba7e:	dec    ecx
  42ba7f:	fs push ebx
  42ba81:	outs   dx,DWORD PTR ds:[esi]
  42ba82:	arpl   WORD PTR [ebx+0x73],bp
  42ba85:	dec    ecx
  42ba86:	outs   dx,BYTE PTR ds:[esi]
  42ba87:	outs   dx,WORD PTR ds:[esi]
  42ba89:	lea    eax,[eax+0x0]
  42ba8c:	nop
  42ba8d:	mov    edx,0xc070042
  42ba92:	push   esp
  42ba93:	dec    ecx
  42ba94:	fs push ebx
  42ba96:	outs   dx,DWORD PTR ds:[esi]
  42ba97:	arpl   WORD PTR [ebx+0x73],bp
  42ba9a:	dec    ecx
  42ba9b:	outs   dx,BYTE PTR ds:[esi]
  42ba9c:	outs   dx,WORD PTR ds:[esi]
  42ba9e:	sbb    BYTE PTR [edx-0x663bffbe],bh
  42baa4:	inc    edx
  42baa5:	add    BYTE PTR [ebx],cl
  42baa7:	add    BYTE PTR [edi],al
  42baa9:	dec    ecx
  42baaa:	fs push ebx
  42baac:	outs   dx,DWORD PTR ds:[esi]
  42baad:	arpl   WORD PTR [ebx+0x73],bp
  42bab0:	or     BYTE PTR [eax],al
  42bab2:	je     0x42ba6d
  42bab4:	inc    edx
  42bab5:	add    BYTE PTR [eax-0x5f010000],ah
  42babb:	add    BYTE PTR [eax],al
  42babd:	inc    DWORD PTR [ecx]
  42babf:	add    BYTE PTR [eax],al
  42bac1:	add    BYTE PTR [eax],al
  42bac3:	add    BYTE PTR [eax],al
  42bac5:	add    BYTE PTR [eax],0x0
  42bac8:	add    BYTE PTR [eax],al
  42baca:	add    eax,DWORD PTR [eax]
  42bacc:	push   cs
  42bacd:	inc    ecx
  42bace:	jne    0x42bb44
  42bad0:	push   0x69746e65
  42bad5:	arpl   WORD PTR [ecx+0x74],sp
  42bad8:	imul   ebp,DWORD PTR [edi+0x6e],0x401084
  42badf:	mov    BYTE PTR [eax],al
  42bae1:	add    bh,bh
  42bae3:	mov    BYTE PTR [eax],al
  42bae5:	add    bh,bh
  42bae7:	add    DWORD PTR [eax],eax
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    BYTE PTR [eax],al
  42baed:	add    BYTE PTR [eax-0x80000000],al
  42baf3:	add    al,0x0
  42baf5:	add    al,0x48
  42baf7:	outs   dx,DWORD PTR ds:[esi]
  42baf8:	jae    0x42bb6e
  42bafa:	test   BYTE PTR [eax],dl
  42bafc:	inc    eax
  42bafd:	add    BYTE PTR [eax+eax*1+0x8cff00],cl
  42bb04:	add    bh,bh
  42bb06:	add    DWORD PTR [eax],eax
  42bb08:	add    BYTE PTR [eax],al
  42bb0a:	add    BYTE PTR [eax],al
  42bb0c:	add    BYTE PTR [eax-0x80000000],al
  42bb12:	add    eax,0x61500800
  42bb17:	jae    0x42bb8c
  42bb19:	ja     0x42bb8a
  42bb1b:	jb     0x42bb81
  42bb1d:	cmp    al,0x10
  42bb1f:	inc    eax
  42bb20:	add    BYTE PTR [eax-0x6f010000],dl
  42bb26:	add    BYTE PTR [eax],al
  42bb28:	inc    DWORD PTR [ecx]
  42bb2a:	add    BYTE PTR [eax],al
  42bb2c:	add    BYTE PTR [eax],al
  42bb2e:	add    BYTE PTR [eax],al
  42bb30:	cmp    BYTE PTR [eax],0x4
  42bb33:	add    BYTE PTR [eax],al
  42bb35:	push   es
  42bb36:	add    BYTE PTR [eax+edx*2],al
  42bb39:	outs   dx,DWORD PTR ds:[esi]
  42bb3a:	jb     0x42bbb0
  42bb3c:	int3   
  42bb3d:	lds    eax,FWORD PTR [ecx+0x0]
  42bb40:	xchg   esp,eax
  42bb41:	add    BYTE PTR [eax],al
  42bb43:	call   DWORD PTR [eax+eax*1+0x1ff00]
  42bb4a:	add    BYTE PTR [eax],al
  42bb4c:	add    BYTE PTR [eax],al
  42bb4e:	add    BYTE PTR [eax+0x0],al
  42bb54:	pop    es
  42bb55:	add    BYTE PTR [ecx],cl
  42bb57:	dec    ecx
  42bb58:	push   eax
  42bb59:	push   esi
  42bb5a:	gs jb  0x42bbd0
  42bb5d:	imul   ebp,DWORD PTR [edi+0x6e],0x401084
  42bb64:	cwde   
  42bb65:	add    BYTE PTR [eax],al
  42bb67:	call   FWORD PTR [eax+0x1ff0000]
  42bb6d:	add    BYTE PTR [eax],al
  42bb6f:	add    BYTE PTR [eax],al
  42bb71:	add    BYTE PTR [eax],al
  42bb73:	add    BYTE PTR [eax],0x0
  42bb76:	add    BYTE PTR [eax+0x55080008],al
  42bb7c:	jae    0x42bbe3
  42bb7e:	jb     0x42bbee
  42bb80:	popa   
  42bb81:	ins    DWORD PTR es:[edi],dx
  42bb82:	gs and al,0xb9
  42bb85:	inc    edx
  42bb86:	add    BYTE PTR [ecx-0x5e010000],ah
  42bb8c:	add    BYTE PTR [eax],al
  42bb8e:	inc    DWORD PTR [ecx]
  42bb90:	add    BYTE PTR [eax],al
  42bb92:	add    BYTE PTR [eax],al
  42bb94:	add    BYTE PTR [eax],al
  42bb96:	add    BYTE PTR [eax],0x0
  42bb99:	add    BYTE PTR [eax],al
  42bb9b:	or     DWORD PTR [eax],eax
  42bb9d:	pop    es
  42bb9e:	push   esi
  42bb9f:	gs jb  0x42bc15
  42bba2:	imul   ebp,DWORD PTR [edi+0x6e],0x4299c4
  42bba9:	pushf  
  42bbaa:	add    BYTE PTR [eax],al
  42bbac:	call   esp
  42bbae:	fwait
  42bbaf:	inc    edx
  42bbb0:	add    BYTE PTR [ecx],al
  42bbb2:	add    BYTE PTR [eax],al
  42bbb4:	add    BYTE PTR [eax],al
  42bbb6:	add    BYTE PTR [eax],al
  42bbb8:	add    BYTE PTR [eax],0x0
  42bbbb:	add    BYTE PTR [eax+0x430c000a],al
  42bbc1:	push   0x656e6961
  42bbc6:	fs push eax
  42bbc8:	jb     0x42bc39
  42bbca:	js     0x42bc45
  42bbcc:	push   ebx
  42bbcd:	push   esi
  42bbce:	mov    esi,edx
  42bbd0:	mov    ebx,eax
  42bbd2:	mov    eax,esi
  42bbd4:	mov    edx,DWORD PTR ds:0x42b9cc
  42bbda:	call   0x40422c
  42bbdf:	test   al,al
  42bbe1:	je     0x42bc0b
  42bbe3:	mov    edx,esi
  42bbe5:	mov    eax,ebx
  42bbe7:	call   0x429a08
  42bbec:	mov    eax,esi
  42bbee:	movzx  edx,BYTE PTR [ebx+0xa0]
  42bbf5:	mov    BYTE PTR [eax+0xa0],dl
  42bbfb:	movzx  edx,BYTE PTR [ebx+0xa1]
  42bc02:	mov    BYTE PTR [eax+0xa1],dl
  42bc08:	pop    esi
  42bc09:	pop    ebx
  42bc0a:	ret    
  42bc0b:	mov    edx,esi
  42bc0d:	mov    eax,ebx
  42bc0f:	call   0x429a08
  42bc14:	pop    esi
  42bc15:	pop    ebx
  42bc16:	ret    
  42bc17:	nop
  42bc18:	push   ebp
  42bc19:	mov    ebp,esp
  42bc1b:	push   ecx
  42bc1c:	mov    ecx,0x8
  42bc21:	push   0x0
  42bc23:	push   0x0
  42bc25:	dec    ecx
  42bc26:	jne    0x42bc21
  42bc28:	push   ecx
  42bc29:	xchg   DWORD PTR [ebp-0x4],ecx
  42bc2c:	push   ebx
  42bc2d:	push   esi
  42bc2e:	push   edi
  42bc2f:	mov    DWORD PTR [ebp-0xc],ecx
  42bc32:	mov    DWORD PTR [ebp-0x8],edx
  42bc35:	mov    esi,eax
  42bc37:	xor    eax,eax
  42bc39:	push   ebp
  42bc3a:	push   0x42beca
  42bc3f:	push   DWORD PTR fs:[eax]
  42bc42:	mov    DWORD PTR fs:[eax],esp
  42bc45:	mov    eax,DWORD PTR [ebp-0x8]
  42bc48:	call   0x429780
  42bc4d:	xor    eax,eax
  42bc4f:	push   ebp
  42bc50:	push   0x42be2a
  42bc55:	push   DWORD PTR fs:[eax]
  42bc58:	mov    DWORD PTR fs:[eax],esp
  42bc5b:	lea    edx,[ebp-0x10]
  42bc5e:	mov    al,0x4
  42bc60:	call   0x41d408
  42bc65:	mov    edx,DWORD PTR [ebp-0x10]
  42bc68:	mov    eax,DWORD PTR [ebp-0x8]
  42bc6b:	mov    ecx,DWORD PTR [eax]
  42bc6d:	call   DWORD PTR [ecx+0x74]
  42bc70:	lea    edx,[ebp-0x14]
  42bc73:	movzx  eax,BYTE PTR [ebp+0x8]
  42bc77:	call   0x41d408
  42bc7c:	mov    edx,DWORD PTR [ebp-0x14]
  42bc7f:	mov    eax,DWORD PTR [ebp-0x8]
  42bc82:	mov    ecx,DWORD PTR [eax]
  42bc84:	call   DWORD PTR [ecx+0x74]
  42bc87:	mov    eax,ds:0x46de0c
  42bc8c:	mov    eax,DWORD PTR [eax]
  42bc8e:	movzx  edx,WORD PTR [ebp+0xc]
  42bc92:	mov    ecx,DWORD PTR [eax]
  42bc94:	call   DWORD PTR [ecx+0x38]
  42bc97:	mov    ebx,eax
  42bc99:	lea    edx,[ebp-0x18]
  42bc9c:	mov    eax,ebx
  42bc9e:	call   0x41d3e0
  42bca3:	mov    edx,DWORD PTR [ebp-0x18]
  42bca6:	mov    eax,DWORD PTR [ebp-0x8]
  42bca9:	mov    ecx,DWORD PTR [eax]
  42bcab:	call   DWORD PTR [ecx+0x74]
  42bcae:	cmp    BYTE PTR [esi+0xa1],0x2
  42bcb5:	jne    0x42bcc6
  42bcb7:	lea    eax,[ebp-0x4]
  42bcba:	mov    edx,0x42bee4
  42bcbf:	call   0x405020
  42bcc4:	jmp    0x42bcdb
  42bcc6:	lea    eax,[ebp-0x4]
  42bcc9:	push   eax
  42bcca:	mov    eax,ds:0x46de0c
  42bccf:	mov    eax,DWORD PTR [eax]
  42bcd1:	xor    ecx,ecx
  42bcd3:	mov    edx,DWORD PTR [ebp-0xc]
  42bcd6:	call   0x423fcc
  42bcdb:	push   0x1
  42bcdd:	lea    eax,[ebp-0x20]
  42bce0:	push   eax
  42bce1:	lea    eax,[ebp-0x4]
  42bce4:	mov    cl,0x1
  42bce6:	mov    edx,0x42bef4
  42bceb:	call   0x41c7c4
  42bcf0:	mov    edx,DWORD PTR [ebp-0x20]
  42bcf3:	mov    eax,ds:0x41be90
  42bcf8:	call   0x41b200
  42bcfd:	lea    edx,[ebp-0x1c]
  42bd00:	call   0x41d408
  42bd05:	mov    edx,DWORD PTR [ebp-0x1c]
  42bd08:	mov    eax,DWORD PTR [ebp-0x8]
  42bd0b:	mov    ecx,DWORD PTR [eax]
  42bd0d:	call   DWORD PTR [ecx+0x74]
  42bd10:	push   0x1
  42bd12:	lea    eax,[ebp-0x28]
  42bd15:	push   eax
  42bd16:	lea    eax,[ebp-0x4]
  42bd19:	mov    cl,0x1
  42bd1b:	mov    edx,0x42bef4
  42bd20:	call   0x41c7c4
  42bd25:	mov    edx,DWORD PTR [ebp-0x28]
  42bd28:	mov    eax,ds:0x41be90
  42bd2d:	call   0x41b200
  42bd32:	lea    edx,[ebp-0x24]
  42bd35:	call   0x41d408
  42bd3a:	mov    edx,DWORD PTR [ebp-0x24]
  42bd3d:	mov    eax,DWORD PTR [ebp-0x8]
  42bd40:	mov    ecx,DWORD PTR [eax]
  42bd42:	call   DWORD PTR [ecx+0x74]
  42bd45:	push   0x1
  42bd47:	lea    eax,[ebp-0x30]
  42bd4a:	push   eax
  42bd4b:	lea    eax,[ebp-0x4]
  42bd4e:	mov    cl,0x1
  42bd50:	mov    edx,0x42bef4
  42bd55:	call   0x41c7c4
  42bd5a:	mov    edx,DWORD PTR [ebp-0x30]
  42bd5d:	mov    eax,ds:0x41be90
  42bd62:	call   0x41b200
  42bd67:	lea    edx,[ebp-0x2c]
  42bd6a:	call   0x41d408
  42bd6f:	mov    edx,DWORD PTR [ebp-0x2c]
  42bd72:	mov    eax,DWORD PTR [ebp-0x8]
  42bd75:	mov    ecx,DWORD PTR [eax]
  42bd77:	call   DWORD PTR [ecx+0x74]
  42bd7a:	push   0x1
  42bd7c:	lea    eax,[ebp-0x38]
  42bd7f:	push   eax
  42bd80:	lea    eax,[ebp-0x4]
  42bd83:	mov    cl,0x1
  42bd85:	mov    edx,0x42bef4
  42bd8a:	call   0x41c7c4
  42bd8f:	mov    edx,DWORD PTR [ebp-0x38]
  42bd92:	mov    eax,ds:0x41be90
  42bd97:	call   0x41b200
  42bd9c:	lea    edx,[ebp-0x34]
  42bd9f:	call   0x41d408
  42bda4:	mov    edx,DWORD PTR [ebp-0x34]
  42bda7:	mov    eax,DWORD PTR [ebp-0x8]
  42bdaa:	mov    ecx,DWORD PTR [eax]
  42bdac:	call   DWORD PTR [ecx+0x74]
  42bdaf:	lea    ecx,[ebp-0x3c]
  42bdb2:	mov    eax,DWORD PTR [esi+0x98]
  42bdb8:	mov    dl,0x1
  42bdba:	call   0x41d2bc
  42bdbf:	mov    edx,DWORD PTR [ebp-0x3c]
  42bdc2:	mov    eax,DWORD PTR [ebp-0x8]
  42bdc5:	mov    ecx,DWORD PTR [eax]
  42bdc7:	call   DWORD PTR [ecx+0x74]
  42bdca:	lea    edx,[ebp-0x40]
  42bdcd:	xor    eax,eax
  42bdcf:	call   0x41d408
  42bdd4:	mov    edx,DWORD PTR [ebp-0x40]
  42bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  42bdda:	mov    ecx,DWORD PTR [eax]
  42bddc:	call   DWORD PTR [ecx+0x74]
  42bddf:	cmp    BYTE PTR [esi+0xa1],0x2
  42bde6:	jne    0x42be15
  42bde8:	lea    ecx,[ebp-0x44]
  42bdeb:	mov    dl,0x1
  42bded:	mov    eax,DWORD PTR [ebp-0xc]
  42bdf0:	call   0x41d2bc
  42bdf5:	mov    edx,DWORD PTR [ebp-0x44]
  42bdf8:	mov    eax,DWORD PTR [ebp-0x8]
  42bdfb:	mov    ecx,DWORD PTR [eax]
  42bdfd:	call   DWORD PTR [ecx+0x74]
  42be00:	lea    edx,[ebp-0x48]
  42be03:	xor    eax,eax
  42be05:	call   0x41d408
  42be0a:	mov    edx,DWORD PTR [ebp-0x48]
  42be0d:	mov    eax,DWORD PTR [ebp-0x8]
  42be10:	mov    ecx,DWORD PTR [eax]
  42be12:	call   DWORD PTR [ecx+0x74]
  42be15:	mov    eax,DWORD PTR [ebp-0x8]
  42be18:	mov    edx,DWORD PTR [eax]
  42be1a:	call   DWORD PTR [edx+0xb8]
  42be20:	xor    eax,eax
  42be22:	pop    edx
  42be23:	pop    ecx
  42be24:	pop    ecx
  42be25:	mov    DWORD PTR fs:[eax],edx
  42be28:	jmp    0x42be44
  42be2a:	jmp    0x404568
  42be2f:	mov    eax,DWORD PTR [ebp-0x8]
  42be32:	mov    edx,DWORD PTR [eax]
  42be34:	call   DWORD PTR [edx+0xb0]
  42be3a:	call   0x404924
  42be3f:	call   0x404978
  42be44:	xor    eax,eax
  42be46:	pop    edx
  42be47:	pop    ecx
  42be48:	pop    ecx
  42be49:	mov    DWORD PTR fs:[eax],edx
  42be4c:	push   0x42bed1
  42be51:	lea    eax,[ebp-0x48]
  42be54:	mov    edx,DWORD PTR ds:0x40769c
  42be5a:	mov    ecx,0x4
  42be5f:	call   0x405b50
  42be64:	lea    eax,[ebp-0x38]
  42be67:	call   0x404f88
  42be6c:	lea    eax,[ebp-0x34]
  42be6f:	mov    edx,DWORD PTR ds:0x40769c
  42be75:	call   0x4063bc
  42be7a:	lea    eax,[ebp-0x30]
  42be7d:	call   0x404f88
  42be82:	lea    eax,[ebp-0x2c]
  42be85:	mov    edx,DWORD PTR ds:0x40769c
  42be8b:	call   0x4063bc
  42be90:	lea    eax,[ebp-0x28]
  42be93:	call   0x404f88
  42be98:	lea    eax,[ebp-0x24]
  42be9b:	mov    edx,DWORD PTR ds:0x40769c
  42bea1:	call   0x4063bc
  42bea6:	lea    eax,[ebp-0x20]
  42bea9:	call   0x404f88
  42beae:	lea    eax,[ebp-0x1c]
  42beb1:	mov    edx,DWORD PTR ds:0x40769c
  42beb7:	mov    ecx,0x4
  42bebc:	call   0x405b50
  42bec1:	lea    eax,[ebp-0x4]
  42bec4:	call   0x404f88
  42bec9:	ret    
  42beca:	jmp    0x40481c
  42becf:	jmp    0x42be51
  42bed1:	pop    edi
  42bed2:	pop    esi
  42bed3:	pop    ebx
  42bed4:	mov    esp,ebp
  42bed6:	pop    ebp
  42bed7:	ret    0x8
  42beda:	add    BYTE PTR [eax],al
  42bedc:	(bad)  
  42bedd:	(bad)  
  42bede:	(bad)  
  42bedf:	inc    DWORD PTR [edi]
  42bee1:	add    BYTE PTR [eax],al
  42bee3:	add    BYTE PTR [eax],dh
  42bee5:	xor    BYTE PTR cs:[esi],ch
  42bee8:	xor    BYTE PTR [esi],ch
  42beea:	xor    DWORD PTR [eax],eax
  42beec:	(bad)  
  42beed:	(bad)  
  42beee:	(bad)  
  42beef:	inc    DWORD PTR [ecx]
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [esi],ch
  42bef5:	add    BYTE PTR [eax],al
  42bef7:	add    BYTE PTR [ebp-0x75],dl
  42befa:	in     al,dx
  42befb:	push   0x0
  42befd:	push   0x0
  42beff:	push   0x0
  42bf01:	push   0x0
  42bf03:	push   0x0
  42bf05:	push   ebx
  42bf06:	mov    ebx,edx
  42bf08:	xor    edx,edx
  42bf0a:	push   ebp
  42bf0b:	push   0x42c027
  42bf10:	push   DWORD PTR fs:[edx]
  42bf13:	mov    DWORD PTR fs:[edx],esp
  42bf16:	mov    edx,DWORD PTR [ebp+0x8]
  42bf19:	cmp    edx,0xffff
  42bf1f:	jbe    0x42bf26
  42bf21:	call   0x403f68
  42bf26:	push   edx
  42bf27:	push   0x1
  42bf29:	mov    edx,ebx
  42bf2b:	call   0x42bc18
  42bf30:	push   0x0
  42bf32:	lea    edx,[ebp-0x4]
  42bf35:	mov    ecx,0x8
  42bf3a:	mov    eax,ebx
  42bf3c:	mov    ebx,DWORD PTR [eax]
  42bf3e:	call   DWORD PTR [ebx+0xa0]
  42bf44:	mov    eax,0x1
  42bf49:	mov    edx,DWORD PTR [ebp-0x4]
  42bf4c:	test   edx,edx
  42bf4e:	je     0x42bf55
  42bf50:	cmp    eax,DWORD PTR [edx-0x4]
  42bf53:	jb     0x42bf5a
  42bf55:	call   0x403f68
  42bf5a:	movzx  eax,BYTE PTR [edx+eax*1]
  42bf5e:	sub    al,0x5a
  42bf60:	je     0x42bffe
  42bf66:	dec    al
  42bf68:	je     0x42bf74
  42bf6a:	dec    al
  42bf6c:	je     0x42bf97
  42bf6e:	dec    al
  42bf70:	je     0x42bfba
  42bf72:	jmp    0x42bfdd
  42bf74:	lea    edx,[ebp-0x8]
  42bf77:	mov    eax,ds:0x46dc84
  42bf7c:	call   0x406f48
  42bf81:	mov    ecx,DWORD PTR [ebp-0x8]
  42bf84:	mov    dl,0x1
  42bf86:	mov    eax,ds:0x427460
  42bf8b:	call   0x41bdbc
  42bf90:	call   0x4048fc
  42bf95:	jmp    0x42bffe
  42bf97:	lea    edx,[ebp-0xc]
  42bf9a:	mov    eax,ds:0x46dad8
  42bf9f:	call   0x406f48
  42bfa4:	mov    ecx,DWORD PTR [ebp-0xc]
  42bfa7:	mov    dl,0x1
  42bfa9:	mov    eax,ds:0x4274c8
  42bfae:	call   0x41bdbc
  42bfb3:	call   0x4048fc
  42bfb8:	jmp    0x42bffe
  42bfba:	lea    edx,[ebp-0x10]
  42bfbd:	mov    eax,ds:0x46dd38
  42bfc2:	call   0x406f48
  42bfc7:	mov    ecx,DWORD PTR [ebp-0x10]
  42bfca:	mov    dl,0x1
  42bfcc:	mov    eax,ds:0x427534
  42bfd1:	call   0x41bdbc
  42bfd6:	call   0x4048fc
  42bfdb:	jmp    0x42bffe
  42bfdd:	lea    edx,[ebp-0x14]
  42bfe0:	mov    eax,ds:0x46dd34
  42bfe5:	call   0x406f48
  42bfea:	mov    ecx,DWORD PTR [ebp-0x14]
  42bfed:	mov    dl,0x1
  42bfef:	mov    eax,ds:0x4275a0
  42bff4:	call   0x41bdbc
  42bff9:	call   0x4048fc
  42bffe:	xor    eax,eax
  42c000:	pop    edx
  42c001:	pop    ecx
  42c002:	pop    ecx
  42c003:	mov    DWORD PTR fs:[eax],edx
  42c006:	push   0x42c02e
  42c00b:	lea    eax,[ebp-0x14]
  42c00e:	mov    edx,0x4
  42c013:	call   0x404fac
  42c018:	lea    eax,[ebp-0x4]
  42c01b:	mov    edx,DWORD PTR ds:0x40769c
  42c021:	call   0x4063bc
  42c026:	ret    
  42c027:	jmp    0x40481c
  42c02c:	jmp    0x42c00b
  42c02e:	pop    ebx
  42c02f:	mov    esp,ebp
  42c031:	pop    ebp
  42c032:	ret    0x4
  42c035:	lea    eax,[eax+0x0]
  42c038:	push   ebp
  42c039:	mov    ebp,esp
  42c03b:	push   0x0
  42c03d:	push   0x0
  42c03f:	push   0x0
  42c041:	push   0x0
  42c043:	push   0x0
  42c045:	push   0x0
  42c047:	push   ebx
  42c048:	mov    ebx,ecx
  42c04a:	xor    eax,eax
  42c04c:	push   ebp
  42c04d:	push   0x42c31a
  42c052:	push   DWORD PTR fs:[eax]
  42c055:	mov    DWORD PTR fs:[eax],esp
  42c058:	xor    eax,eax
  42c05a:	mov    edx,DWORD PTR [ebp+0xc]
  42c05d:	mov    edx,DWORD PTR [edx]
  42c05f:	test   edx,edx
  42c061:	je     0x42c068
  42c063:	cmp    eax,DWORD PTR [edx-0x4]
  42c066:	jb     0x42c06d
  42c068:	call   0x403f68
  42c06d:	mov    BYTE PTR [edx+eax*1],0x5
  42c071:	mov    eax,0x1
  42c076:	mov    edx,DWORD PTR [ebp+0xc]
  42c079:	mov    edx,DWORD PTR [edx]
  42c07b:	test   edx,edx
  42c07d:	je     0x42c084
  42c07f:	cmp    eax,DWORD PTR [edx-0x4]
  42c082:	jb     0x42c089
  42c084:	call   0x403f68
  42c089:	movzx  ecx,BYTE PTR [ebp+0x10]
  42c08d:	mov    BYTE PTR [edx+eax*1],cl
  42c090:	mov    eax,0x2
  42c095:	mov    edx,DWORD PTR [ebp+0xc]
  42c098:	mov    edx,DWORD PTR [edx]
  42c09a:	test   edx,edx
  42c09c:	je     0x42c0a3
  42c09e:	cmp    eax,DWORD PTR [edx-0x4]
  42c0a1:	jb     0x42c0a8
  42c0a3:	call   0x403f68
  42c0a8:	mov    BYTE PTR [edx+eax*1],0x0
  42c0ac:	lea    edx,[ebp-0x8]
  42c0af:	mov    eax,ebx
  42c0b1:	call   0x41cb48
  42c0b6:	mov    eax,DWORD PTR [ebp-0x8]
  42c0b9:	call   0x405248
  42c0be:	test   eax,eax
  42c0c0:	jle    0x42c17a
  42c0c6:	mov    eax,0x3
  42c0cb:	mov    edx,DWORD PTR [ebp+0xc]
  42c0ce:	mov    edx,DWORD PTR [edx]
  42c0d0:	test   edx,edx
  42c0d2:	je     0x42c0d9
  42c0d4:	cmp    eax,DWORD PTR [edx-0x4]
  42c0d7:	jb     0x42c0de
  42c0d9:	call   0x403f68
  42c0de:	mov    BYTE PTR [edx+eax*1],0x4
  42c0e2:	mov    eax,0x4
  42c0e7:	mov    edx,DWORD PTR [ebp+0xc]
  42c0ea:	mov    edx,DWORD PTR [edx]
  42c0ec:	test   edx,edx
  42c0ee:	je     0x42c0f5
  42c0f0:	cmp    eax,DWORD PTR [edx-0x4]
  42c0f3:	jb     0x42c0fa
  42c0f5:	call   0x403f68
  42c0fa:	mov    BYTE PTR [edx+eax*1],0x10
  42c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  42c101:	mov    DWORD PTR [eax],0x5
  42c107:	mov    edx,ebx
  42c109:	mov    eax,ds:0x42ad10
  42c10e:	call   0x42b1f8
  42c113:	mov    DWORD PTR [ebp-0x4],eax
  42c116:	xor    eax,eax
  42c118:	push   ebp
  42c119:	push   0x42c161
  42c11e:	push   DWORD PTR fs:[eax]
  42c121:	mov    DWORD PTR fs:[eax],esp
  42c124:	cmp    DWORD PTR [ebp-0x4],0x0
  42c128:	je     0x42c146
  42c12a:	push   0x4
  42c12c:	push   0x10
  42c12e:	lea    edx,[ebp-0xc]
  42c131:	mov    eax,DWORD PTR [ebp-0x4]
  42c134:	call   0x42ae70
  42c139:	mov    eax,DWORD PTR [ebp-0xc]
  42c13c:	mov    ecx,DWORD PTR [ebp+0xc]
  42c13f:	xor    edx,edx
  42c141:	call   0x41c6f0
  42c146:	xor    eax,eax
  42c148:	pop    edx
  42c149:	pop    ecx
  42c14a:	pop    ecx
  42c14b:	mov    DWORD PTR fs:[eax],edx
  42c14e:	push   0x42c168
  42c153:	lea    edx,[ebp-0x4]
  42c156:	mov    eax,ds:0x41be90
  42c15b:	call   0x41b14c
  42c160:	ret    
  42c161:	jmp    0x40481c
  42c166:	jmp    0x42c153
  42c168:	mov    eax,DWORD PTR [ebp+0x8]
  42c16b:	add    DWORD PTR [eax],0x10
  42c16e:	jno    0x42c175
  42c170:	call   0x403f70
  42c175:	jmp    0x42c2b3
  42c17a:	mov    eax,ds:0x46de0c
  42c17f:	mov    eax,DWORD PTR [eax]
  42c181:	mov    edx,ebx
  42c183:	call   0x4236e8
  42c188:	test   al,al
  42c18a:	je     0x42c21b
  42c190:	mov    eax,0x3
  42c195:	mov    edx,DWORD PTR [ebp+0xc]
  42c198:	mov    edx,DWORD PTR [edx]
  42c19a:	test   edx,edx
  42c19c:	je     0x42c1a3
  42c19e:	cmp    eax,DWORD PTR [edx-0x4]
  42c1a1:	jb     0x42c1a8
  42c1a3:	call   0x403f68
  42c1a8:	mov    BYTE PTR [edx+eax*1],0x1
  42c1ac:	mov    edx,ebx
  42c1ae:	mov    eax,ds:0x42ad10
  42c1b3:	call   0x42b1f8
  42c1b8:	mov    DWORD PTR [ebp-0x4],eax
  42c1bb:	xor    eax,eax
  42c1bd:	push   ebp
  42c1be:	push   0x42c206
  42c1c3:	push   DWORD PTR fs:[eax]
  42c1c6:	mov    DWORD PTR fs:[eax],esp
  42c1c9:	cmp    DWORD PTR [ebp-0x4],0x0
  42c1cd:	je     0x42c1eb
  42c1cf:	push   0x4
  42c1d1:	push   0x4
  42c1d3:	lea    edx,[ebp-0x10]
  42c1d6:	mov    eax,DWORD PTR [ebp-0x4]
  42c1d9:	call   0x42ae70
  42c1de:	mov    eax,DWORD PTR [ebp-0x10]
  42c1e1:	mov    ecx,DWORD PTR [ebp+0xc]
  42c1e4:	xor    edx,edx
  42c1e6:	call   0x41c6f0
  42c1eb:	xor    eax,eax
  42c1ed:	pop    edx
  42c1ee:	pop    ecx
  42c1ef:	pop    ecx
  42c1f0:	mov    DWORD PTR fs:[eax],edx
  42c1f3:	push   0x42c20d
  42c1f8:	lea    edx,[ebp-0x4]
  42c1fb:	mov    eax,ds:0x41be90
  42c200:	call   0x41b14c
  42c205:	ret    
  42c206:	jmp    0x40481c
  42c20b:	jmp    0x42c1f8
  42c20d:	mov    eax,DWORD PTR [ebp+0x8]
  42c210:	mov    DWORD PTR [eax],0x8
  42c216:	jmp    0x42c2b3
  42c21b:	mov    eax,0x3
  42c220:	mov    edx,DWORD PTR [ebp+0xc]
  42c223:	mov    edx,DWORD PTR [edx]
  42c225:	test   edx,edx
  42c227:	je     0x42c22e
  42c229:	cmp    eax,DWORD PTR [edx-0x4]
  42c22c:	jb     0x42c233
  42c22e:	call   0x403f68
  42c233:	mov    BYTE PTR [edx+eax*1],0x3
  42c237:	mov    eax,ebx
  42c239:	call   0x405248
  42c23e:	cmp    eax,0xff
  42c243:	jbe    0x42c24a
  42c245:	call   0x403f68
  42c24a:	mov    edx,0x4
  42c24f:	mov    ecx,DWORD PTR [ebp+0xc]
  42c252:	mov    ecx,DWORD PTR [ecx]
  42c254:	test   ecx,ecx
  42c256:	je     0x42c25d
  42c258:	cmp    edx,DWORD PTR [ecx-0x4]
  42c25b:	jb     0x42c262
  42c25d:	call   0x403f68
  42c262:	mov    BYTE PTR [ecx+edx*1],al
  42c265:	mov    eax,DWORD PTR [ebp+0x8]
  42c268:	mov    DWORD PTR [eax],0x5
  42c26e:	mov    eax,ebx
  42c270:	call   0x405248
  42c275:	test   eax,eax
  42c277:	jle    0x42c2a0
  42c279:	mov    eax,DWORD PTR [ebp+0x8]
  42c27c:	mov    eax,DWORD PTR [eax]
  42c27e:	push   eax
  42c27f:	mov    eax,ebx
  42c281:	call   0x405248
  42c286:	push   eax
  42c287:	lea    ecx,[ebp-0x14]
  42c28a:	mov    dl,0x1
  42c28c:	mov    eax,ebx
  42c28e:	call   0x41d2bc
  42c293:	mov    eax,DWORD PTR [ebp-0x14]
  42c296:	mov    ecx,DWORD PTR [ebp+0xc]
  42c299:	xor    edx,edx
  42c29b:	call   0x41c6f0
  42c2a0:	mov    eax,ebx
  42c2a2:	call   0x405248
  42c2a7:	mov    edx,DWORD PTR [ebp+0x8]
  42c2aa:	add    DWORD PTR [edx],eax
  42c2ac:	jno    0x42c2b3
  42c2ae:	call   0x403f70
  42c2b3:	mov    eax,ds:0x46de0c
  42c2b8:	mov    eax,DWORD PTR [eax]
  42c2ba:	movzx  edx,WORD PTR [ebp+0x14]
  42c2be:	mov    ecx,DWORD PTR [eax]
  42c2c0:	call   DWORD PTR [ecx+0x38]
  42c2c3:	mov    ebx,eax
  42c2c5:	mov    eax,DWORD PTR [ebp+0x8]
  42c2c8:	mov    eax,DWORD PTR [eax]
  42c2ca:	push   eax
  42c2cb:	push   0x2
  42c2cd:	lea    edx,[ebp-0x18]
  42c2d0:	mov    eax,ebx
  42c2d2:	call   0x41d3e0
  42c2d7:	mov    eax,DWORD PTR [ebp-0x18]
  42c2da:	mov    ecx,DWORD PTR [ebp+0xc]
  42c2dd:	xor    edx,edx
  42c2df:	call   0x41c6f0
  42c2e4:	mov    eax,DWORD PTR [ebp+0x8]
  42c2e7:	add    DWORD PTR [eax],0x2
  42c2ea:	jno    0x42c2f1
  42c2ec:	call   0x403f70
  42c2f1:	xor    eax,eax
  42c2f3:	pop    edx
  42c2f4:	pop    ecx
  42c2f5:	pop    ecx
  42c2f6:	mov    DWORD PTR fs:[eax],edx
  42c2f9:	push   0x42c321
  42c2fe:	lea    eax,[ebp-0x18]
  42c301:	mov    edx,DWORD PTR ds:0x40769c
  42c307:	mov    ecx,0x4
  42c30c:	call   0x405b50
  42c311:	lea    eax,[ebp-0x8]
  42c314:	call   0x404f88
  42c319:	ret    
  42c31a:	jmp    0x40481c
  42c31f:	jmp    0x42c2fe
  42c321:	pop    ebx
  42c322:	mov    esp,ebp
  42c324:	pop    ebp
  42c325:	ret    0x10
  42c328:	push   ebp
  42c329:	mov    ebp,esp
  42c32b:	push   ecx
  42c32c:	mov    ecx,0x6
  42c331:	push   0x0
  42c333:	push   0x0
  42c335:	dec    ecx
  42c336:	jne    0x42c331
  42c338:	push   ecx
  42c339:	xchg   DWORD PTR [ebp-0x4],ecx
  42c33c:	push   ebx
  42c33d:	push   esi
  42c33e:	push   edi
  42c33f:	mov    edi,ecx
  42c341:	mov    ebx,edx
  42c343:	mov    esi,eax
  42c345:	xor    eax,eax
  42c347:	push   ebp
  42c348:	push   0x42c6ae
  42c34d:	push   DWORD PTR fs:[eax]
  42c350:	mov    DWORD PTR fs:[eax],esp
  42c353:	mov    edx,ebx
  42c355:	mov    eax,esi
  42c357:	call   0x42cac4
  42c35c:	push   0xff
  42c361:	lea    eax,[ebp-0x4]
  42c364:	mov    ecx,0x1
  42c369:	mov    edx,DWORD PTR ds:0x40769c
  42c36f:	call   0x4063b0
  42c374:	add    esp,0x4
  42c377:	mov    eax,DWORD PTR [ebp+0xc]
  42c37a:	cmp    eax,0xffff
  42c37f:	jbe    0x42c386
  42c381:	call   0x403f68
  42c386:	push   eax
  42c387:	push   0x1
  42c389:	lea    eax,[ebp-0x4]
  42c38c:	push   eax
  42c38d:	lea    eax,[ebp-0x8]
  42c390:	push   eax
  42c391:	mov    ecx,edi
  42c393:	mov    edx,ebx
  42c395:	mov    eax,esi
  42c397:	call   0x42c038
  42c39c:	lea    ecx,[ebp-0xc]
  42c39f:	mov    edx,DWORD PTR [ebp-0x8]
  42c3a2:	mov    eax,DWORD PTR [ebp-0x4]
  42c3a5:	call   0x41d42c
  42c3aa:	mov    edx,DWORD PTR [ebp-0xc]
  42c3ad:	lea    eax,[ebp-0x4]
  42c3b0:	mov    ecx,DWORD PTR ds:0x40769c
  42c3b6:	call   0x4063f8
  42c3bb:	lea    edx,[ebp-0x4]
  42c3be:	mov    eax,ebx
  42c3c0:	mov    ecx,DWORD PTR [eax]
  42c3c2:	call   DWORD PTR [ecx+0x78]
  42c3c5:	xor    eax,eax
  42c3c7:	push   ebp
  42c3c8:	push   0x42c3f1
  42c3cd:	push   DWORD PTR fs:[eax]
  42c3d0:	mov    DWORD PTR fs:[eax],esp
  42c3d3:	push   0x0
  42c3d5:	lea    edx,[ebp-0x4]
  42c3d8:	mov    ecx,0x5
  42c3dd:	mov    eax,ebx
  42c3df:	mov    esi,DWORD PTR [eax]
  42c3e1:	call   DWORD PTR [esi+0xa0]
  42c3e7:	xor    eax,eax
  42c3e9:	pop    edx
  42c3ea:	pop    ecx
  42c3eb:	pop    ecx
  42c3ec:	mov    DWORD PTR fs:[eax],edx
  42c3ef:	jmp    0x42c41c
  42c3f1:	jmp    0x404568
  42c3f6:	lea    edx,[ebp-0x10]
  42c3f9:	mov    eax,ds:0x46dabc
  42c3fe:	call   0x406f48
  42c403:	mov    ecx,DWORD PTR [ebp-0x10]
  42c406:	mov    dl,0x1
  42c408:	mov    eax,ds:0x427608
  42c40d:	call   0x41bdbc
  42c412:	call   0x4048fc
  42c417:	call   0x404978
  42c41c:	mov    eax,0x1
  42c421:	mov    edx,DWORD PTR [ebp-0x4]
  42c424:	test   edx,edx
  42c426:	je     0x42c42d
  42c428:	cmp    eax,DWORD PTR [edx-0x4]
  42c42b:	jb     0x42c432
  42c42d:	call   0x403f68
  42c432:	movzx  eax,BYTE PTR [edx+eax*1]
  42c436:	cmp    eax,0x8
  42c439:	ja     0x42c596
  42c43f:	jmp    DWORD PTR [eax*4+0x42c446]
  42c446:	mov    bh,0xc5
  42c448:	inc    edx
  42c449:	add    BYTE PTR [edi-0x3c],ch
  42c44c:	inc    edx
  42c44d:	add    BYTE PTR [ebp-0x44ffbd3c],dl
  42c453:	les    eax,FWORD PTR [edx+0x0]
  42c456:	loope  0x42c41c
  42c458:	inc    edx
  42c459:	add    BYTE PTR [edi],al
  42c45b:	lds    eax,FWORD PTR [edx+0x0]
  42c45e:	sub    eax,0x500042c5
  42c463:	lds    eax,FWORD PTR [edx+0x0]
  42c466:	jae    0x42c42d
  42c468:	inc    edx
  42c469:	add    cl,ch
  42c46b:	dec    eax
  42c46c:	add    DWORD PTR [eax],eax
  42c46e:	add    BYTE PTR [ebp-0x5b5e13ab],cl
  42c474:	fild   DWORD PTR [esi+0x0]
  42c477:	call   0x406f48
  42c47c:	mov    ecx,DWORD PTR [ebp-0x14]
  42c47f:	mov    dl,0x1
  42c481:	mov    eax,ds:0x427740
  42c486:	call   0x41bdbc
  42c48b:	call   0x4048fc
  42c490:	jmp    0x42c5b7
  42c495:	lea    edx,[ebp-0x18]
  42c498:	mov    eax,ds:0x46da80
  42c49d:	call   0x406f48
  42c4a2:	mov    ecx,DWORD PTR [ebp-0x18]
  42c4a5:	mov    dl,0x1
  42c4a7:	mov    eax,ds:0x4277ac
  42c4ac:	call   0x41bdbc
  42c4b1:	call   0x4048fc
  42c4b6:	jmp    0x42c5b7
  42c4bb:	lea    edx,[ebp-0x1c]
  42c4be:	mov    eax,ds:0x46dac8
  42c4c3:	call   0x406f48
  42c4c8:	mov    ecx,DWORD PTR [ebp-0x1c]
  42c4cb:	mov    dl,0x1
  42c4cd:	mov    eax,ds:0x42781c
  42c4d2:	call   0x41bdbc
  42c4d7:	call   0x4048fc
  42c4dc:	jmp    0x42c5b7
  42c4e1:	lea    edx,[ebp-0x20]
  42c4e4:	mov    eax,ds:0x46dd58
  42c4e9:	call   0x406f48
  42c4ee:	mov    ecx,DWORD PTR [ebp-0x20]
  42c4f1:	mov    dl,0x1
  42c4f3:	mov    eax,ds:0x427890
  42c4f8:	call   0x41bdbc
  42c4fd:	call   0x4048fc
  42c502:	jmp    0x42c5b7
  42c507:	lea    edx,[ebp-0x24]
  42c50a:	mov    eax,ds:0x46dbb8
  42c50f:	call   0x406f48
  42c514:	mov    ecx,DWORD PTR [ebp-0x24]
  42c517:	mov    dl,0x1
  42c519:	mov    eax,ds:0x427904
  42c51e:	call   0x41bdbc
  42c523:	call   0x4048fc
  42c528:	jmp    0x42c5b7
  42c52d:	lea    edx,[ebp-0x28]
  42c530:	mov    eax,ds:0x46dc0c
  42c535:	call   0x406f48
  42c53a:	mov    ecx,DWORD PTR [ebp-0x28]
  42c53d:	mov    dl,0x1
  42c53f:	mov    eax,ds:0x42797c
  42c544:	call   0x41bdbc
  42c549:	call   0x4048fc
  42c54e:	jmp    0x42c5b7
  42c550:	lea    edx,[ebp-0x2c]
  42c553:	mov    eax,ds:0x46db28
  42c558:	call   0x406f48
  42c55d:	mov    ecx,DWORD PTR [ebp-0x2c]
  42c560:	mov    dl,0x1
  42c562:	mov    eax,ds:0x4279ec
  42c567:	call   0x41bdbc
  42c56c:	call   0x4048fc
  42c571:	jmp    0x42c5b7
  42c573:	lea    edx,[ebp-0x30]
  42c576:	mov    eax,ds:0x46de44
  42c57b:	call   0x406f48
  42c580:	mov    ecx,DWORD PTR [ebp-0x30]
  42c583:	mov    dl,0x1
  42c585:	mov    eax,ds:0x427a58
  42c58a:	call   0x41bdbc
  42c58f:	call   0x4048fc
  42c594:	jmp    0x42c5b7
  42c596:	lea    edx,[ebp-0x34]
  42c599:	mov    eax,ds:0x46dd34
  42c59e:	call   0x406f48
  42c5a3:	mov    ecx,DWORD PTR [ebp-0x34]
  42c5a6:	mov    dl,0x1
  42c5a8:	mov    eax,ds:0x4275a0
  42c5ad:	call   0x41bdbc
  42c5b2:	call   0x4048fc
  42c5b7:	mov    eax,0x3
  42c5bc:	mov    edx,DWORD PTR [ebp-0x4]
  42c5bf:	test   edx,edx
  42c5c1:	je     0x42c5c8
  42c5c3:	cmp    eax,DWORD PTR [edx-0x4]
  42c5c6:	jb     0x42c5cd
  42c5c8:	call   0x403f68
  42c5cd:	movzx  eax,BYTE PTR [edx+eax*1]
  42c5d1:	dec    al
  42c5d3:	je     0x42c5df
  42c5d5:	sub    al,0x2
  42c5d7:	je     0x42c5e8
  42c5d9:	dec    al
  42c5db:	je     0x42c611
  42c5dd:	jmp    0x42c618
  42c5df:	mov    DWORD PTR [ebp-0x8],0x6
  42c5e6:	jmp    0x42c618
  42c5e8:	mov    eax,0x4
  42c5ed:	mov    edx,DWORD PTR [ebp-0x4]
  42c5f0:	test   edx,edx
  42c5f2:	je     0x42c5f9
  42c5f4:	cmp    eax,DWORD PTR [edx-0x4]
  42c5f7:	jb     0x42c5fe
  42c5f9:	call   0x403f68
  42c5fe:	movzx  eax,BYTE PTR [edx+eax*1]
  42c602:	add    eax,0x2
  42c605:	jno    0x42c60c
  42c607:	call   0x403f70
  42c60c:	mov    DWORD PTR [ebp-0x8],eax
  42c60f:	jmp    0x42c618
  42c611:	mov    DWORD PTR [ebp-0x8],0x12
  42c618:	xor    eax,eax
  42c61a:	push   ebp
  42c61b:	push   0x42c64c
  42c620:	push   DWORD PTR fs:[eax]
  42c623:	mov    DWORD PTR fs:[eax],esp
  42c626:	push   0x0
  42c628:	mov    ecx,DWORD PTR [ebp-0x8]
  42c62b:	sub    ecx,0x1
  42c62e:	jno    0x42c635
  42c630:	call   0x403f70
  42c635:	lea    edx,[ebp-0x4]
  42c638:	mov    eax,ebx
  42c63a:	mov    ebx,DWORD PTR [eax]
  42c63c:	call   DWORD PTR [ebx+0xa0]
  42c642:	xor    eax,eax
  42c644:	pop    edx
  42c645:	pop    ecx
  42c646:	pop    ecx
  42c647:	mov    DWORD PTR fs:[eax],edx
  42c64a:	jmp    0x42c677
  42c64c:	jmp    0x404568
  42c651:	lea    edx,[ebp-0x38]
  42c654:	mov    eax,ds:0x46dabc
  42c659:	call   0x406f48
  42c65e:	mov    ecx,DWORD PTR [ebp-0x38]
  42c661:	mov    dl,0x1
  42c663:	mov    eax,ds:0x427608
  42c668:	call   0x41bdbc
  42c66d:	call   0x4048fc
  42c672:	call   0x404978
  42c677:	xor    eax,eax
  42c679:	pop    edx
  42c67a:	pop    ecx
  42c67b:	pop    ecx
  42c67c:	mov    DWORD PTR fs:[eax],edx
  42c67f:	push   0x42c6b5
  42c684:	lea    eax,[ebp-0x38]
  42c687:	mov    edx,0xb
  42c68c:	call   0x404fac
  42c691:	lea    eax,[ebp-0xc]
  42c694:	mov    edx,DWORD PTR ds:0x40769c
  42c69a:	call   0x4063bc
  42c69f:	lea    eax,[ebp-0x4]
  42c6a2:	mov    edx,DWORD PTR ds:0x40769c
  42c6a8:	call   0x4063bc
  42c6ad:	ret    
  42c6ae:	jmp    0x40481c
  42c6b3:	jmp    0x42c684
  42c6b5:	pop    edi
  42c6b6:	pop    esi
  42c6b7:	pop    ebx
  42c6b8:	mov    esp,ebp
  42c6ba:	pop    ebp
  42c6bb:	ret    0x8
  42c6be:	mov    eax,eax
  42c6c0:	push   ebp
  42c6c1:	mov    ebp,esp
  42c6c3:	push   ecx
  42c6c4:	mov    ecx,0x5
  42c6c9:	push   0x0
  42c6cb:	push   0x0
  42c6cd:	dec    ecx
  42c6ce:	jne    0x42c6c9
  42c6d0:	push   ecx
  42c6d1:	xchg   DWORD PTR [ebp-0x4],ecx
  42c6d4:	push   ebx
  42c6d5:	push   esi
  42c6d6:	push   edi
  42c6d7:	mov    edi,ecx
  42c6d9:	mov    ebx,edx
  42c6db:	mov    esi,eax
  42c6dd:	xor    eax,eax
  42c6df:	push   ebp
  42c6e0:	push   0x42ca28
  42c6e5:	push   DWORD PTR fs:[eax]
  42c6e8:	mov    DWORD PTR fs:[eax],esp
  42c6eb:	xor    ecx,ecx
  42c6ed:	mov    dl,0x1
  42c6ef:	mov    eax,ds:0x42a510
  42c6f4:	call   0x424704
  42c6f9:	mov    DWORD PTR [ebp-0x8],eax
  42c6fc:	xor    eax,eax
  42c6fe:	push   ebp
  42c6ff:	push   0x42c9f8
  42c704:	push   DWORD PTR fs:[eax]
  42c707:	mov    DWORD PTR fs:[eax],esp
  42c70a:	push   0x8
  42c70c:	lea    eax,[ebp-0x4]
  42c70f:	mov    ecx,0x1
  42c714:	mov    edx,DWORD PTR ds:0x40769c
  42c71a:	call   0x4063b0
  42c71f:	add    esp,0x4
  42c722:	xor    edx,edx
  42c724:	mov    eax,ebx
  42c726:	mov    ecx,DWORD PTR [eax]
  42c728:	call   DWORD PTR [ecx+0xd8]
  42c72e:	mov    edx,ebx
  42c730:	mov    eax,DWORD PTR [ebp-0x8]
  42c733:	mov    ecx,DWORD PTR [eax]
  42c735:	call   DWORD PTR [ecx+0x48]
  42c738:	mov    edx,DWORD PTR [esi+0x88]
  42c73e:	mov    eax,DWORD PTR [ebp-0x8]
  42c741:	mov    ecx,DWORD PTR [eax]
  42c743:	call   DWORD PTR [ecx+0x88]
  42c749:	mov    edx,DWORD PTR [esi+0x90]
  42c74f:	mov    eax,DWORD PTR [ebp-0x8]
  42c752:	mov    ecx,DWORD PTR [eax]
  42c754:	call   DWORD PTR [ecx+0x8c]
  42c75a:	mov    eax,DWORD PTR [ebp-0x8]
  42c75d:	mov    edx,DWORD PTR [eax]
  42c75f:	call   DWORD PTR [edx+0x94]
  42c765:	mov    edx,esi
  42c767:	mov    eax,ebx
  42c769:	mov    ecx,DWORD PTR [eax]
  42c76b:	call   DWORD PTR [ecx+0xd8]
  42c771:	mov    eax,DWORD PTR [ebp+0x8]
  42c774:	cmp    eax,0xffff
  42c779:	jbe    0x42c780
  42c77b:	call   0x403f68
  42c780:	push   eax
  42c781:	push   0x2
  42c783:	mov    ecx,edi
  42c785:	mov    edx,ebx
  42c787:	mov    eax,esi
  42c789:	call   0x42bc18
  42c78e:	push   0x0
  42c790:	lea    edx,[ebp-0x4]
  42c793:	mov    ecx,0x2
  42c798:	mov    eax,ebx
  42c79a:	mov    esi,DWORD PTR [eax]
  42c79c:	call   DWORD PTR [esi+0xa0]
  42c7a2:	mov    eax,0x1
  42c7a7:	mov    edx,DWORD PTR [ebp-0x4]
  42c7aa:	test   edx,edx
  42c7ac:	je     0x42c7b3
  42c7ae:	cmp    eax,DWORD PTR [edx-0x4]
  42c7b1:	jb     0x42c7b8
  42c7b3:	call   0x403f68
  42c7b8:	movzx  eax,BYTE PTR [edx+eax*1]
  42c7bc:	sub    al,0x5a
  42c7be:	je     0x42c85c
  42c7c4:	dec    al
  42c7c6:	je     0x42c7d2
  42c7c8:	dec    al
  42c7ca:	je     0x42c7f5
  42c7cc:	dec    al
  42c7ce:	je     0x42c818
  42c7d0:	jmp    0x42c83b
  42c7d2:	lea    edx,[ebp-0xc]
  42c7d5:	mov    eax,ds:0x46dc84
  42c7da:	call   0x406f48
  42c7df:	mov    ecx,DWORD PTR [ebp-0xc]
  42c7e2:	mov    dl,0x1
  42c7e4:	mov    eax,ds:0x427460
  42c7e9:	call   0x41bdbc
  42c7ee:	call   0x4048fc
  42c7f3:	jmp    0x42c85c
  42c7f5:	lea    edx,[ebp-0x10]
  42c7f8:	mov    eax,ds:0x46dad8
  42c7fd:	call   0x406f48
  42c802:	mov    ecx,DWORD PTR [ebp-0x10]
  42c805:	mov    dl,0x1
  42c807:	mov    eax,ds:0x4274c8
  42c80c:	call   0x41bdbc
  42c811:	call   0x4048fc
  42c816:	jmp    0x42c85c
  42c818:	lea    edx,[ebp-0x14]
  42c81b:	mov    eax,ds:0x46dd38
  42c820:	call   0x406f48
  42c825:	mov    ecx,DWORD PTR [ebp-0x14]
  42c828:	mov    dl,0x1
  42c82a:	mov    eax,ds:0x427534
  42c82f:	call   0x41bdbc
  42c834:	call   0x4048fc
  42c839:	jmp    0x42c85c
  42c83b:	lea    edx,[ebp-0x18]
  42c83e:	mov    eax,ds:0x46dd34
  42c843:	call   0x406f48
  42c848:	mov    ecx,DWORD PTR [ebp-0x18]
  42c84b:	mov    dl,0x1
  42c84d:	mov    eax,ds:0x4275a0
  42c852:	call   0x41bdbc
  42c857:	call   0x4048fc
  42c85c:	xor    eax,eax
  42c85e:	push   ebp
  42c85f:	push   0x42c9a8
  42c864:	push   DWORD PTR fs:[eax]
  42c867:	mov    DWORD PTR fs:[eax],esp
  42c86a:	push   0x0
  42c86c:	lea    edx,[ebp-0x4]
  42c86f:	mov    ecx,0x6
  42c874:	mov    eax,ebx
  42c876:	mov    esi,DWORD PTR [eax]
  42c878:	call   DWORD PTR [esi+0xa0]
  42c87e:	push   0x0
  42c880:	mov    eax,0x2
  42c885:	mov    edx,DWORD PTR [ebp-0x4]
  42c888:	test   edx,edx
  42c88a:	je     0x42c891
  42c88c:	cmp    eax,DWORD PTR [edx-0x4]
  42c88f:	jb     0x42c896
  42c891:	call   0x403f68
  42c896:	movzx  edx,BYTE PTR [edx+eax*1]
  42c89a:	lea    ecx,[ebp-0x20]
  42c89d:	mov    eax,ds:0x41be90
  42c8a2:	call   0x41b19c
  42c8a7:	push   DWORD PTR [ebp-0x20]
  42c8aa:	push   0x42ca40
  42c8af:	mov    eax,0x3
  42c8b4:	mov    edx,DWORD PTR [ebp-0x4]
  42c8b7:	test   edx,edx
  42c8b9:	je     0x42c8c0
  42c8bb:	cmp    eax,DWORD PTR [edx-0x4]
  42c8be:	jb     0x42c8c5
  42c8c0:	call   0x403f68
  42c8c5:	movzx  edx,BYTE PTR [edx+eax*1]
  42c8c9:	lea    ecx,[ebp-0x24]
  42c8cc:	mov    eax,ds:0x41be90
  42c8d1:	call   0x41b19c
  42c8d6:	push   DWORD PTR [ebp-0x24]
  42c8d9:	push   0x42ca40
  42c8de:	mov    eax,0x4
  42c8e3:	mov    edx,DWORD PTR [ebp-0x4]
  42c8e6:	test   edx,edx
  42c8e8:	je     0x42c8ef
  42c8ea:	cmp    eax,DWORD PTR [edx-0x4]
  42c8ed:	jb     0x42c8f4
  42c8ef:	call   0x403f68
  42c8f4:	movzx  edx,BYTE PTR [edx+eax*1]
  42c8f8:	lea    ecx,[ebp-0x28]
  42c8fb:	mov    eax,ds:0x41be90
  42c900:	call   0x41b19c
  42c905:	push   DWORD PTR [ebp-0x28]
  42c908:	push   0x42ca40
  42c90d:	mov    eax,0x5
  42c912:	mov    edx,DWORD PTR [ebp-0x4]
  42c915:	test   edx,edx
  42c917:	je     0x42c91e
  42c919:	cmp    eax,DWORD PTR [edx-0x4]
  42c91c:	jb     0x42c923
  42c91e:	call   0x403f68
  42c923:	movzx  edx,BYTE PTR [edx+eax*1]
  42c927:	lea    ecx,[ebp-0x2c]
  42c92a:	mov    eax,ds:0x41be90
  42c92f:	call   0x41b19c
  42c934:	push   DWORD PTR [ebp-0x2c]
  42c937:	lea    eax,[ebp-0x1c]
  42c93a:	mov    edx,0x7
  42c93f:	call   0x40531c
  42c944:	mov    eax,DWORD PTR [ebp-0x1c]
  42c947:	push   eax
  42c948:	xor    eax,eax
  42c94a:	mov    edx,DWORD PTR [ebp-0x4]
  42c94d:	test   edx,edx
  42c94f:	je     0x42c956
  42c951:	cmp    eax,DWORD PTR [edx-0x4]
  42c954:	jb     0x42c95b
  42c956:	call   0x403f68
  42c95b:	movzx  eax,BYTE PTR [edx+eax*1]
  42c95f:	mov    edx,0x100
  42c964:	mul    edx
  42c966:	mov    ecx,eax
  42c968:	jno    0x42c96f
  42c96a:	call   0x403f70
  42c96f:	mov    eax,0x1
  42c974:	mov    edx,DWORD PTR [ebp-0x4]
  42c977:	test   edx,edx
  42c979:	je     0x42c980
  42c97b:	cmp    eax,DWORD PTR [edx-0x4]
  42c97e:	jb     0x42c985
  42c980:	call   0x403f68
  42c985:	movzx  eax,BYTE PTR [edx+eax*1]
  42c989:	add    ecx,eax
  42c98b:	jno    0x42c992
  42c98d:	call   0x403f70
  42c992:	mov    eax,DWORD PTR [ebx+0xd0]
  42c998:	pop    edx
  42c999:	call   0x425498
  42c99e:	xor    eax,eax
  42c9a0:	pop    edx
  42c9a1:	pop    ecx
  42c9a2:	pop    ecx
  42c9a3:	mov    DWORD PTR fs:[eax],edx
  42c9a6:	jmp    0x42c9d3
  42c9a8:	jmp    0x404568
  42c9ad:	lea    edx,[ebp-0x30]
  42c9b0:	mov    eax,ds:0x46dabc
  42c9b5:	call   0x406f48
  42c9ba:	mov    ecx,DWORD PTR [ebp-0x30]
  42c9bd:	mov    dl,0x1
  42c9bf:	mov    eax,ds:0x427608
  42c9c4:	call   0x41bdbc
  42c9c9:	call   0x4048fc
  42c9ce:	call   0x404978
  42c9d3:	xor    eax,eax
  42c9d5:	pop    edx
  42c9d6:	pop    ecx
  42c9d7:	pop    ecx
  42c9d8:	mov    DWORD PTR fs:[eax],edx
  42c9db:	push   0x42c9ff
  42c9e0:	xor    edx,edx
  42c9e2:	mov    eax,DWORD PTR [ebp-0x8]
  42c9e5:	mov    ecx,DWORD PTR [eax]
  42c9e7:	call   DWORD PTR [ecx+0x48]
  42c9ea:	lea    edx,[ebp-0x8]
  42c9ed:	mov    eax,ds:0x41be90
  42c9f2:	call   0x41b14c
  42c9f7:	ret    
  42c9f8:	jmp    0x40481c
  42c9fd:	jmp    0x42c9e0
  42c9ff:	xor    eax,eax
  42ca01:	pop    edx
  42ca02:	pop    ecx
  42ca03:	pop    ecx
  42ca04:	mov    DWORD PTR fs:[eax],edx
  42ca07:	push   0x42ca2f
  42ca0c:	lea    eax,[ebp-0x30]
  42ca0f:	mov    edx,0xa
  42ca14:	call   0x404fac
  42ca19:	lea    eax,[ebp-0x4]
  42ca1c:	mov    edx,DWORD PTR ds:0x40769c
  42ca22:	call   0x4063bc
  42ca27:	ret    
  42ca28:	jmp    0x40481c
  42ca2d:	jmp    0x42ca0c
  42ca2f:	pop    edi
  42ca30:	pop    esi
  42ca31:	pop    ebx
  42ca32:	mov    esp,ebp
  42ca34:	pop    ebp
  42ca35:	ret    0x4
  42ca38:	(bad)  
  42ca39:	(bad)  
  42ca3a:	(bad)  
  42ca3b:	inc    DWORD PTR [ecx]
  42ca3d:	add    BYTE PTR [eax],al
  42ca3f:	add    BYTE PTR [esi],ch
  42ca41:	add    BYTE PTR [eax],al
  42ca43:	add    BYTE PTR [ebp-0x75],dl
  42ca46:	in     al,dx
  42ca47:	push   ebx
  42ca48:	movzx  ebx,BYTE PTR [eax+0xa1]
  42ca4f:	dec    ebx
  42ca50:	sub    bl,0x2
  42ca53:	jb     0x42ca59
  42ca55:	je     0x42ca64
  42ca57:	jmp    0x42ca6f
  42ca59:	mov    ebx,DWORD PTR [ebp+0xc]
  42ca5c:	push   ebx
  42ca5d:	call   0x42bef8
  42ca62:	jmp    0x42ca6f
  42ca64:	mov    ebx,DWORD PTR [ebp+0xc]
  42ca67:	push   ebx
  42ca68:	push   0x0
  42ca6a:	call   0x42c328
  42ca6f:	pop    ebx
  42ca70:	pop    ebp
  42ca71:	ret    0x8
  42ca74:	movzx  eax,BYTE PTR [eax+0xa1]
  42ca7b:	dec    eax
  42ca7c:	sub    al,0x3
  42ca7e:	setb   al
  42ca81:	ret    
  42ca82:	mov    eax,eax
  42ca84:	push   ebx
  42ca85:	mov    ebx,eax
  42ca87:	mov    eax,ebx
  42ca89:	call   0x424f1c
  42ca8e:	mov    BYTE PTR [ebx+0xa0],0x0
  42ca95:	mov    BYTE PTR [ebx+0xa1],0x0
  42ca9c:	mov    DWORD PTR [ebx+0x90],0x438
  42caa6:	mov    BYTE PTR [ebx+0x94],0x0
  42caad:	mov    dl,0x1
  42caaf:	mov    eax,ds:0x42f3c4
  42cab4:	call   0x42467c
  42cab9:	mov    DWORD PTR [ebx+0xa4],eax
  42cabf:	pop    ebx
  42cac0:	ret    
  42cac1:	lea    eax,[eax+0x0]
  42cac4:	push   ebp
  42cac5:	mov    ebp,esp
  42cac7:	xor    ecx,ecx
  42cac9:	push   ecx
  42caca:	push   ecx
  42cacb:	push   ecx
  42cacc:	push   ecx
  42cacd:	push   ecx
  42cace:	push   ecx
  42cacf:	push   ecx
  42cad0:	push   ecx
  42cad1:	push   ebx
  42cad2:	push   esi
  42cad3:	push   edi
  42cad4:	mov    esi,edx
  42cad6:	mov    ebx,eax
  42cad8:	xor    eax,eax
  42cada:	push   ebp
  42cadb:	push   0x42ce5c
  42cae0:	push   DWORD PTR fs:[eax]
  42cae3:	mov    DWORD PTR fs:[eax],esp
  42cae6:	push   0x3
  42cae8:	lea    eax,[ebp-0x4]
  42caeb:	mov    ecx,0x1
  42caf0:	mov    edx,DWORD PTR ds:0x40769c
  42caf6:	call   0x4063b0
  42cafb:	add    esp,0x4
  42cafe:	cmp    BYTE PTR [ebx+0xa0],0x0
  42cb05:	jne    0x42cb23
  42cb07:	mov    eax,0x2
  42cb0c:	mov    edx,DWORD PTR [ebp-0x4]
  42cb0f:	test   edx,edx
  42cb11:	je     0x42cb18
  42cb13:	cmp    eax,DWORD PTR [edx-0x4]
  42cb16:	jb     0x42cb1d
  42cb18:	call   0x403f68
  42cb1d:	mov    BYTE PTR [edx+eax*1],0x0
  42cb21:	jmp    0x42cb3d
  42cb23:	mov    eax,0x2
  42cb28:	mov    edx,DWORD PTR [ebp-0x4]
  42cb2b:	test   edx,edx
  42cb2d:	je     0x42cb34
  42cb2f:	cmp    eax,DWORD PTR [edx-0x4]
  42cb32:	jb     0x42cb39
  42cb34:	call   0x403f68
  42cb39:	mov    BYTE PTR [edx+eax*1],0x2
  42cb3d:	mov    eax,0x2
  42cb42:	mov    edx,DWORD PTR [ebp-0x4]
  42cb45:	test   edx,edx
  42cb47:	je     0x42cb4e
  42cb49:	cmp    eax,DWORD PTR [edx-0x4]
  42cb4c:	jb     0x42cb53
  42cb4e:	call   0x403f68
  42cb53:	movzx  eax,BYTE PTR [edx+eax*1]
  42cb57:	mov    BYTE PTR [ebp-0x5],al
  42cb5a:	xor    eax,eax
  42cb5c:	mov    edx,DWORD PTR [ebp-0x4]
  42cb5f:	test   edx,edx
  42cb61:	je     0x42cb68
  42cb63:	cmp    eax,DWORD PTR [edx-0x4]
  42cb66:	jb     0x42cb6d
  42cb68:	call   0x403f68
  42cb6d:	mov    BYTE PTR [edx+eax*1],0x5
  42cb71:	mov    eax,0x1
  42cb76:	mov    edx,DWORD PTR [ebp-0x4]
  42cb79:	test   edx,edx
  42cb7b:	je     0x42cb82
  42cb7d:	cmp    eax,DWORD PTR [edx-0x4]
  42cb80:	jb     0x42cb87
  42cb82:	call   0x403f68
  42cb87:	mov    BYTE PTR [edx+eax*1],0x1
  42cb8b:	lea    edx,[ebp-0x4]
  42cb8e:	mov    eax,esi
  42cb90:	mov    ecx,DWORD PTR [eax]
  42cb92:	call   DWORD PTR [ecx+0x78]
  42cb95:	xor    edx,edx
  42cb97:	push   ebp
  42cb98:	push   0x42cbc1
  42cb9d:	push   DWORD PTR fs:[edx]
  42cba0:	mov    DWORD PTR fs:[edx],esp
  42cba3:	push   0x0
  42cba5:	lea    edx,[ebp-0x4]
  42cba8:	mov    ecx,0x2
  42cbad:	mov    eax,esi
  42cbaf:	mov    edi,DWORD PTR [eax]
  42cbb1:	call   DWORD PTR [edi+0xa0]
  42cbb7:	xor    eax,eax
  42cbb9:	pop    edx
  42cbba:	pop    ecx
  42cbbb:	pop    ecx
  42cbbc:	mov    DWORD PTR fs:[eax],edx
  42cbbf:	jmp    0x42cbf8
  42cbc1:	jmp    0x404694
  42cbc6:	add    DWORD PTR [eax],eax
  42cbc8:	add    BYTE PTR [eax],al
  42cbca:	hlt    
  42cbcb:	jbe    0x42cc0d
  42cbcd:	add    dl,dl
  42cbcf:	retf   
  42cbd0:	inc    edx
  42cbd1:	add    BYTE PTR [ebp-0x435e0bab],cl
  42cbd7:	fiadd  DWORD PTR [esi+0x0]
  42cbda:	call   0x406f48
  42cbdf:	mov    ecx,DWORD PTR [ebp-0xc]
  42cbe2:	mov    dl,0x1
  42cbe4:	mov    eax,ds:0x427608
  42cbe9:	call   0x41bdbc
  42cbee:	call   0x4048fc
  42cbf3:	call   0x404978
  42cbf8:	mov    eax,0x1
  42cbfd:	mov    edx,DWORD PTR [ebp-0x4]
  42cc00:	test   edx,edx
  42cc02:	je     0x42cc09
  42cc04:	cmp    eax,DWORD PTR [edx-0x4]
  42cc07:	jb     0x42cc0e
  42cc09:	call   0x403f68
  42cc0e:	movzx  eax,BYTE PTR [edx+eax*1]
  42cc12:	cmp    al,BYTE PTR [ebp-0x5]
  42cc15:	jne    0x42cc1b
  42cc17:	cmp    al,0xff
  42cc19:	jne    0x42cc3c
  42cc1b:	lea    edx,[ebp-0x10]
  42cc1e:	mov    eax,ds:0x46da94
  42cc23:	call   0x406f48
  42cc28:	mov    ecx,DWORD PTR [ebp-0x10]
  42cc2b:	mov    dl,0x1
  42cc2d:	mov    eax,ds:0x427674
  42cc32:	call   0x41bdbc
  42cc37:	call   0x4048fc
  42cc3c:	cmp    BYTE PTR [ebx+0xa0],0x1
  42cc43:	jne    0x42ce13
  42cc49:	mov    eax,DWORD PTR [ebx+0x98]
  42cc4f:	call   0x405248
  42cc54:	cmp    eax,0xff
  42cc59:	jbe    0x42cc60
  42cc5b:	call   0x403f68
  42cc60:	mov    BYTE PTR [ebp-0x6],al
  42cc63:	mov    eax,DWORD PTR [ebx+0x8c]
  42cc69:	call   0x405248
  42cc6e:	cmp    eax,0xff
  42cc73:	jbe    0x42cc7a
  42cc75:	call   0x403f68
  42cc7a:	mov    BYTE PTR [ebp-0x7],al
  42cc7d:	movzx  eax,BYTE PTR [ebp-0x6]
  42cc81:	add    eax,0x3
  42cc84:	jno    0x42cc8b
  42cc86:	call   0x403f70
  42cc8b:	movzx  edx,BYTE PTR [ebp-0x7]
  42cc8f:	add    eax,edx
  42cc91:	jno    0x42cc98
  42cc93:	call   0x403f70
  42cc98:	push   eax
  42cc99:	lea    eax,[ebp-0x4]
  42cc9c:	mov    ecx,0x1
  42cca1:	mov    edx,DWORD PTR ds:0x40769c
  42cca7:	call   0x4063b0
  42ccac:	add    esp,0x4
  42ccaf:	xor    eax,eax
  42ccb1:	mov    edx,DWORD PTR [ebp-0x4]
  42ccb4:	test   edx,edx
  42ccb6:	je     0x42ccbd
  42ccb8:	cmp    eax,DWORD PTR [edx-0x4]
  42ccbb:	jb     0x42ccc2
  42ccbd:	call   0x403f68
  42ccc2:	mov    BYTE PTR [edx+eax*1],0x1
  42ccc6:	mov    eax,0x1
  42cccb:	mov    edx,DWORD PTR [ebp-0x4]
  42ccce:	test   edx,edx
  42ccd0:	je     0x42ccd7
  42ccd2:	cmp    eax,DWORD PTR [edx-0x4]
  42ccd5:	jb     0x42ccdc
  42ccd7:	call   0x403f68
  42ccdc:	movzx  ecx,BYTE PTR [ebp-0x6]
  42cce0:	mov    BYTE PTR [edx+eax*1],cl
  42cce3:	mov    edi,0x2
  42cce8:	cmp    BYTE PTR [ebp-0x6],0x0
  42ccec:	jbe    0x42cd1e
  42ccee:	push   edi
  42ccef:	movzx  eax,BYTE PTR [ebp-0x6]
  42ccf3:	push   eax
  42ccf4:	lea    ecx,[ebp-0x14]
  42ccf7:	mov    eax,DWORD PTR [ebx+0x98]
  42ccfd:	mov    dl,0x1
  42ccff:	call   0x41d2bc
  42cd04:	mov    eax,DWORD PTR [ebp-0x14]
  42cd07:	lea    ecx,[ebp-0x4]
  42cd0a:	xor    edx,edx
  42cd0c:	call   0x41c6f0
  42cd11:	movzx  eax,BYTE PTR [ebp-0x6]
  42cd15:	add    edi,eax
  42cd17:	jno    0x42cd1e
  42cd19:	call   0x403f70
  42cd1e:	mov    eax,DWORD PTR [ebp-0x4]
  42cd21:	test   eax,eax
  42cd23:	je     0x42cd2a
  42cd25:	cmp    edi,DWORD PTR [eax-0x4]
  42cd28:	jb     0x42cd2f
  42cd2a:	call   0x403f68
  42cd2f:	movzx  edx,BYTE PTR [ebp-0x7]
  42cd33:	mov    BYTE PTR [eax+edi*1],dl
  42cd36:	add    edi,0x1
  42cd39:	jno    0x42cd40
  42cd3b:	call   0x403f70
  42cd40:	cmp    BYTE PTR [ebp-0x7],0x0
  42cd44:	jbe    0x42cd69
  42cd46:	push   edi
  42cd47:	movzx  eax,BYTE PTR [ebp-0x7]
  42cd4b:	push   eax
  42cd4c:	lea    ecx,[ebp-0x18]
  42cd4f:	mov    eax,DWORD PTR [ebx+0x8c]
  42cd55:	mov    dl,0x1
  42cd57:	call   0x41d2bc
  42cd5c:	mov    eax,DWORD PTR [ebp-0x18]
  42cd5f:	lea    ecx,[ebp-0x4]
  42cd62:	xor    edx,edx
  42cd64:	call   0x41c6f0
  42cd69:	lea    edx,[ebp-0x4]
  42cd6c:	mov    eax,esi
  42cd6e:	mov    ecx,DWORD PTR [eax]
  42cd70:	call   DWORD PTR [ecx+0x78]
  42cd73:	xor    edx,edx
  42cd75:	push   ebp
  42cd76:	push   0x42cd9f
  42cd7b:	push   DWORD PTR fs:[edx]
  42cd7e:	mov    DWORD PTR fs:[edx],esp
  42cd81:	push   0x0
  42cd83:	lea    edx,[ebp-0x4]
  42cd86:	mov    ecx,0x2
  42cd8b:	mov    eax,esi
  42cd8d:	mov    ebx,DWORD PTR [eax]
  42cd8f:	call   DWORD PTR [ebx+0xa0]
  42cd95:	xor    eax,eax
  42cd97:	pop    edx
  42cd98:	pop    ecx
  42cd99:	pop    ecx
  42cd9a:	mov    DWORD PTR fs:[eax],edx
  42cd9d:	jmp    0x42cdd6
  42cd9f:	jmp    0x404694
  42cda4:	add    DWORD PTR [eax],eax
  42cda6:	add    BYTE PTR [eax],al
  42cda8:	hlt    
  42cda9:	jbe    0x42cdeb
  42cdab:	add    BYTE PTR [eax-0x72ffbd33],dh
  42cdb1:	push   ebp
  42cdb2:	in     al,0xa1
  42cdb4:	mov    esp,0xe80046da
  42cdb9:	mov    esp,DWORD PTR [ecx+0x4d8bfffd]
  42cdbf:	in     al,0xb2
  42cdc1:	add    DWORD PTR [ecx+0x427608],esp
  42cdc7:	call   0x41bdbc
  42cdcc:	call   0x4048fc
  42cdd1:	call   0x404978
  42cdd6:	mov    eax,0x1
  42cddb:	mov    edx,DWORD PTR [ebp-0x4]
  42cdde:	test   edx,edx
  42cde0:	je     0x42cde7
  42cde2:	cmp    eax,DWORD PTR [edx-0x4]
  42cde5:	jb     0x42cdec
  42cde7:	call   0x403f68
  42cdec:	cmp    BYTE PTR [edx+eax*1],0x0
  42cdf0:	je     0x42ce13
  42cdf2:	lea    edx,[ebp-0x20]
  42cdf5:	mov    eax,ds:0x46dac0
  42cdfa:	call   0x406f48
  42cdff:	mov    ecx,DWORD PTR [ebp-0x20]
  42ce02:	mov    dl,0x1
  42ce04:	mov    eax,ds:0x4276dc
  42ce09:	call   0x41bdbc
  42ce0e:	call   0x4048fc
  42ce13:	xor    eax,eax
  42ce15:	pop    edx
  42ce16:	pop    ecx
  42ce17:	pop    ecx
  42ce18:	mov    DWORD PTR fs:[eax],edx
  42ce1b:	push   0x42ce63
  42ce20:	lea    eax,[ebp-0x20]
  42ce23:	mov    edx,0x2
  42ce28:	call   0x404fac
  42ce2d:	lea    eax,[ebp-0x18]
  42ce30:	mov    edx,DWORD PTR ds:0x40769c
  42ce36:	mov    ecx,0x2
  42ce3b:	call   0x405b50
  42ce40:	lea    eax,[ebp-0x10]
  42ce43:	mov    edx,0x2
  42ce48:	call   0x404fac
  42ce4d:	lea    eax,[ebp-0x4]
  42ce50:	mov    edx,DWORD PTR ds:0x40769c
  42ce56:	call   0x4063bc
  42ce5b:	ret    
  42ce5c:	jmp    0x40481c
  42ce61:	jmp    0x42ce20
  42ce63:	pop    edi
  42ce64:	pop    esi
  42ce65:	pop    ebx
  42ce66:	mov    esp,ebp
  42ce68:	pop    ebp
  42ce69:	ret    
  42ce6a:	mov    eax,eax
  42ce6c:	push   ebp
  42ce6d:	mov    ebp,esp
  42ce6f:	push   ecx
  42ce70:	mov    ecx,0xe
  42ce75:	push   0x0
  42ce77:	push   0x0
  42ce79:	dec    ecx
  42ce7a:	jne    0x42ce75
  42ce7c:	xchg   DWORD PTR [ebp-0x4],ecx
  42ce7f:	push   ebx
  42ce80:	push   esi
  42ce81:	push   edi
  42ce82:	mov    DWORD PTR [ebp-0x8],ecx
  42ce85:	mov    ebx,edx
  42ce87:	mov    esi,eax
  42ce89:	xor    eax,eax
  42ce8b:	push   ebp
  42ce8c:	push   0x42d4e7
  42ce91:	push   DWORD PTR fs:[eax]
  42ce94:	mov    DWORD PTR fs:[eax],esp
  42ce97:	xor    ecx,ecx
  42ce99:	mov    dl,0x1
  42ce9b:	mov    eax,ds:0x42a510
  42cea0:	call   0x424704
  42cea5:	mov    DWORD PTR [ebp-0x10],eax
  42cea8:	xor    eax,eax
  42ceaa:	push   ebp
  42ceab:	push   0x42d4a1
  42ceb0:	push   DWORD PTR fs:[eax]
  42ceb3:	mov    DWORD PTR fs:[eax],esp
  42ceb6:	push   0xff
  42cebb:	lea    eax,[ebp-0x4]
  42cebe:	mov    ecx,0x1
  42cec3:	mov    edx,DWORD PTR ds:0x40769c
  42cec9:	call   0x4063b0
  42cece:	add    esp,0x4
  42ced1:	xor    edx,edx
  42ced3:	mov    edi,ebx
  42ced5:	mov    eax,edi
  42ced7:	mov    ecx,DWORD PTR [eax]
  42ced9:	call   DWORD PTR [ecx+0xd8]
  42cedf:	mov    edx,ebx
  42cee1:	mov    eax,DWORD PTR [ebp-0x10]
  42cee4:	mov    ecx,DWORD PTR [eax]
  42cee6:	call   DWORD PTR [ecx+0x48]
  42cee9:	mov    edx,DWORD PTR [esi+0x88]
  42ceef:	mov    eax,DWORD PTR [ebp-0x10]
  42cef2:	mov    ecx,DWORD PTR [eax]
  42cef4:	call   DWORD PTR [ecx+0x88]
  42cefa:	movzx  edx,BYTE PTR [esi+0x94]
  42cf01:	mov    eax,DWORD PTR [ebp-0x10]
  42cf04:	mov    ecx,DWORD PTR [eax]
  42cf06:	call   DWORD PTR [ecx+0x90]
  42cf0c:	mov    edx,DWORD PTR [esi+0x90]
  42cf12:	mov    eax,DWORD PTR [ebp-0x10]
  42cf15:	mov    ecx,DWORD PTR [eax]
  42cf17:	call   DWORD PTR [ecx+0x8c]
  42cf1d:	mov    eax,DWORD PTR [ebp-0x10]
  42cf20:	mov    edx,DWORD PTR [eax]
  42cf22:	call   DWORD PTR [edx+0x94]
  42cf28:	mov    edx,esi
  42cf2a:	mov    eax,edi
  42cf2c:	mov    ecx,DWORD PTR [eax]
  42cf2e:	call   DWORD PTR [ecx+0xd8]
  42cf34:	mov    edx,ebx
  42cf36:	mov    eax,esi
  42cf38:	call   0x42cac4
  42cf3d:	mov    eax,DWORD PTR [ebp+0xc]
  42cf40:	cmp    eax,0xffff
  42cf45:	jbe    0x42cf4c
  42cf47:	call   0x403f68
  42cf4c:	push   eax
  42cf4d:	push   0x2
  42cf4f:	lea    eax,[ebp-0x4]
  42cf52:	push   eax
  42cf53:	lea    eax,[ebp-0xc]
  42cf56:	push   eax
  42cf57:	mov    ecx,DWORD PTR [ebp-0x8]
  42cf5a:	mov    edx,ebx
  42cf5c:	mov    eax,esi
  42cf5e:	call   0x42c038
  42cf63:	lea    ecx,[ebp-0x18]
  42cf66:	mov    edx,DWORD PTR [ebp-0xc]
  42cf69:	mov    eax,DWORD PTR [ebp-0x4]
  42cf6c:	call   0x41d42c
  42cf71:	mov    edx,DWORD PTR [ebp-0x18]
  42cf74:	mov    eax,ebx
  42cf76:	mov    ecx,DWORD PTR [eax]
  42cf78:	call   DWORD PTR [ecx+0x74]
  42cf7b:	xor    eax,eax
  42cf7d:	push   ebp
  42cf7e:	push   0x42cfa7
  42cf83:	push   DWORD PTR fs:[eax]
  42cf86:	mov    DWORD PTR fs:[eax],esp
  42cf89:	push   0x0
  42cf8b:	lea    edx,[ebp-0x4]
  42cf8e:	mov    ecx,0x4
  42cf93:	mov    eax,ebx
  42cf95:	mov    esi,DWORD PTR [eax]
  42cf97:	call   DWORD PTR [esi+0xa0]
  42cf9d:	xor    eax,eax
  42cf9f:	pop    edx
  42cfa0:	pop    ecx
  42cfa1:	pop    ecx
  42cfa2:	mov    DWORD PTR fs:[eax],edx
  42cfa5:	jmp    0x42cfd2
  42cfa7:	jmp    0x404568
  42cfac:	lea    edx,[ebp-0x1c]
  42cfaf:	mov    eax,ds:0x46dabc
  42cfb4:	call   0x406f48
  42cfb9:	mov    ecx,DWORD PTR [ebp-0x1c]
  42cfbc:	mov    dl,0x1
  42cfbe:	mov    eax,ds:0x427608
  42cfc3:	call   0x41bdbc
  42cfc8:	call   0x4048fc
  42cfcd:	call   0x404978
  42cfd2:	mov    eax,0x1
  42cfd7:	mov    edx,DWORD PTR [ebp-0x4]
  42cfda:	test   edx,edx
  42cfdc:	je     0x42cfe3
  42cfde:	cmp    eax,DWORD PTR [edx-0x4]
  42cfe1:	jb     0x42cfe8
  42cfe3:	call   0x403f68
  42cfe8:	movzx  eax,BYTE PTR [edx+eax*1]
  42cfec:	cmp    eax,0x8
  42cfef:	ja     0x42d14c
  42cff5:	jmp    DWORD PTR [eax*4+0x42cffc]
  42cffc:	ins    DWORD PTR es:[edi],dx
  42cffd:	rol    DWORD PTR [edx+0x0],1
  42d000:	and    eax,0x4b0042d0
  42d005:	rol    BYTE PTR [edx+0x0],1
  42d008:	jno    0x42cfda
  42d00a:	inc    edx
  42d00b:	add    BYTE PTR [edi-0x42ffbd30],dl
  42d011:	rol    BYTE PTR [edx+0x0],1
  42d014:	jecxz  0x42cfe6
  42d016:	inc    edx
  42d017:	add    BYTE PTR [esi],al
  42d019:	rol    DWORD PTR [edx+0x0],1
  42d01c:	sub    ecx,edx
  42d01e:	inc    edx
  42d01f:	add    cl,ch
  42d021:	dec    eax
  42d022:	add    DWORD PTR [eax],eax
  42d024:	add    BYTE PTR [ebp-0x5b5e1fab],cl
  42d02a:	fild   DWORD PTR [esi+0x0]
  42d02d:	call   0x406f48
  42d032:	mov    ecx,DWORD PTR [ebp-0x20]
  42d035:	mov    dl,0x1
  42d037:	mov    eax,ds:0x427740
  42d03c:	call   0x41bdbc
  42d041:	call   0x4048fc
  42d046:	jmp    0x42d16d
  42d04b:	lea    edx,[ebp-0x24]
  42d04e:	mov    eax,ds:0x46da80
  42d053:	call   0x406f48
  42d058:	mov    ecx,DWORD PTR [ebp-0x24]
  42d05b:	mov    dl,0x1
  42d05d:	mov    eax,ds:0x4277ac
  42d062:	call   0x41bdbc
  42d067:	call   0x4048fc
  42d06c:	jmp    0x42d16d
  42d071:	lea    edx,[ebp-0x28]
  42d074:	mov    eax,ds:0x46dac8
  42d079:	call   0x406f48
  42d07e:	mov    ecx,DWORD PTR [ebp-0x28]
  42d081:	mov    dl,0x1
  42d083:	mov    eax,ds:0x42781c
  42d088:	call   0x41bdbc
  42d08d:	call   0x4048fc
  42d092:	jmp    0x42d16d
  42d097:	lea    edx,[ebp-0x2c]
  42d09a:	mov    eax,ds:0x46dd58
  42d09f:	call   0x406f48
  42d0a4:	mov    ecx,DWORD PTR [ebp-0x2c]
  42d0a7:	mov    dl,0x1
  42d0a9:	mov    eax,ds:0x427890
  42d0ae:	call   0x41bdbc
  42d0b3:	call   0x4048fc
  42d0b8:	jmp    0x42d16d
  42d0bd:	lea    edx,[ebp-0x30]
  42d0c0:	mov    eax,ds:0x46dbb8
  42d0c5:	call   0x406f48
  42d0ca:	mov    ecx,DWORD PTR [ebp-0x30]
  42d0cd:	mov    dl,0x1
  42d0cf:	mov    eax,ds:0x427904
  42d0d4:	call   0x41bdbc
  42d0d9:	call   0x4048fc
  42d0de:	jmp    0x42d16d
  42d0e3:	lea    edx,[ebp-0x34]
  42d0e6:	mov    eax,ds:0x46dc0c
  42d0eb:	call   0x406f48
  42d0f0:	mov    ecx,DWORD PTR [ebp-0x34]
  42d0f3:	mov    dl,0x1
  42d0f5:	mov    eax,ds:0x42797c
  42d0fa:	call   0x41bdbc
  42d0ff:	call   0x4048fc
  42d104:	jmp    0x42d16d
  42d106:	lea    edx,[ebp-0x38]
  42d109:	mov    eax,ds:0x46db28
  42d10e:	call   0x406f48
  42d113:	mov    ecx,DWORD PTR [ebp-0x38]
  42d116:	mov    dl,0x1
  42d118:	mov    eax,ds:0x4279ec
  42d11d:	call   0x41bdbc
  42d122:	call   0x4048fc
  42d127:	jmp    0x42d16d
  42d129:	lea    edx,[ebp-0x3c]
  42d12c:	mov    eax,ds:0x46de44
  42d131:	call   0x406f48
  42d136:	mov    ecx,DWORD PTR [ebp-0x3c]
  42d139:	mov    dl,0x1
  42d13b:	mov    eax,ds:0x427a58
  42d140:	call   0x41bdbc
  42d145:	call   0x4048fc
  42d14a:	jmp    0x42d16d
  42d14c:	lea    edx,[ebp-0x40]
  42d14f:	mov    eax,ds:0x46dd34
  42d154:	call   0x406f48
  42d159:	mov    ecx,DWORD PTR [ebp-0x40]
  42d15c:	mov    dl,0x1
  42d15e:	mov    eax,ds:0x4275a0
  42d163:	call   0x41bdbc
  42d168:	call   0x4048fc
  42d16d:	mov    eax,0x3
  42d172:	mov    edx,DWORD PTR [ebp-0x4]
  42d175:	test   edx,edx
  42d177:	je     0x42d17e
  42d179:	cmp    eax,DWORD PTR [edx-0x4]
  42d17c:	jb     0x42d183
  42d17e:	call   0x403f68
  42d183:	movzx  eax,BYTE PTR [edx+eax*1]
  42d187:	mov    BYTE PTR [ebp-0x11],al
  42d18a:	movzx  eax,BYTE PTR [ebp-0x11]
  42d18e:	dec    al
  42d190:	je     0x42d19c
  42d192:	sub    al,0x2
  42d194:	je     0x42d1a5
  42d196:	dec    al
  42d198:	je     0x42d1ce
  42d19a:	jmp    0x42d1d5
  42d19c:	mov    DWORD PTR [ebp-0xc],0x6
  42d1a3:	jmp    0x42d1d5
  42d1a5:	mov    eax,0x4
  42d1aa:	mov    edx,DWORD PTR [ebp-0x4]
  42d1ad:	test   edx,edx
  42d1af:	je     0x42d1b6
  42d1b1:	cmp    eax,DWORD PTR [edx-0x4]
  42d1b4:	jb     0x42d1bb
  42d1b6:	call   0x403f68
  42d1bb:	movzx  eax,BYTE PTR [edx+eax*1]
  42d1bf:	add    eax,0x2
  42d1c2:	jno    0x42d1c9
  42d1c4:	call   0x403f70
  42d1c9:	mov    DWORD PTR [ebp-0xc],eax
  42d1cc:	jmp    0x42d1d5
  42d1ce:	mov    DWORD PTR [ebp-0xc],0x12
  42d1d5:	xor    eax,eax
  42d1d7:	push   ebp
  42d1d8:	push   0x42d451
  42d1dd:	push   DWORD PTR fs:[eax]
  42d1e0:	mov    DWORD PTR fs:[eax],esp
  42d1e3:	push   0x0
  42d1e5:	lea    edx,[ebp-0x4]
  42d1e8:	mov    ecx,DWORD PTR [ebp-0xc]
  42d1eb:	mov    eax,ebx
  42d1ed:	mov    esi,DWORD PTR [eax]
  42d1ef:	call   DWORD PTR [esi+0xa0]
  42d1f5:	movzx  eax,BYTE PTR [ebp-0x11]
  42d1f9:	dec    al
  42d1fb:	je     0x42d212
  42d1fd:	sub    al,0x2
  42d1ff:	je     0x42d337
  42d205:	dec    al
  42d207:	je     0x42d3d0
  42d20d:	jmp    0x42d447
  42d212:	push   0x0
  42d214:	xor    eax,eax
  42d216:	mov    edx,DWORD PTR [ebp-0x4]
  42d219:	test   edx,edx
  42d21b:	je     0x42d222
  42d21d:	cmp    eax,DWORD PTR [edx-0x4]
  42d220:	jb     0x42d227
  42d222:	call   0x403f68
  42d227:	movzx  edx,BYTE PTR [edx+eax*1]
  42d22b:	lea    ecx,[ebp-0x48]
  42d22e:	mov    eax,ds:0x41be90
  42d233:	call   0x41b19c
  42d238:	push   DWORD PTR [ebp-0x48]
  42d23b:	push   0x42d500
  42d240:	mov    eax,0x1
  42d245:	mov    edx,DWORD PTR [ebp-0x4]
  42d248:	test   edx,edx
  42d24a:	je     0x42d251
  42d24c:	cmp    eax,DWORD PTR [edx-0x4]
  42d24f:	jb     0x42d256
  42d251:	call   0x403f68
  42d256:	movzx  edx,BYTE PTR [edx+eax*1]
  42d25a:	lea    ecx,[ebp-0x4c]
  42d25d:	mov    eax,ds:0x41be90
  42d262:	call   0x41b19c
  42d267:	push   DWORD PTR [ebp-0x4c]
  42d26a:	push   0x42d500
  42d26f:	mov    eax,0x2
  42d274:	mov    edx,DWORD PTR [ebp-0x4]
  42d277:	test   edx,edx
  42d279:	je     0x42d280
  42d27b:	cmp    eax,DWORD PTR [edx-0x4]
  42d27e:	jb     0x42d285
  42d280:	call   0x403f68
  42d285:	movzx  edx,BYTE PTR [edx+eax*1]
  42d289:	lea    ecx,[ebp-0x50]
  42d28c:	mov    eax,ds:0x41be90
  42d291:	call   0x41b19c
  42d296:	push   DWORD PTR [ebp-0x50]
  42d299:	push   0x42d500
  42d29e:	mov    eax,0x3
  42d2a3:	mov    edx,DWORD PTR [ebp-0x4]
  42d2a6:	test   edx,edx
  42d2a8:	je     0x42d2af
  42d2aa:	cmp    eax,DWORD PTR [edx-0x4]
  42d2ad:	jb     0x42d2b4
  42d2af:	call   0x403f68
  42d2b4:	movzx  edx,BYTE PTR [edx+eax*1]
  42d2b8:	lea    ecx,[ebp-0x54]
  42d2bb:	mov    eax,ds:0x41be90
  42d2c0:	call   0x41b19c
  42d2c5:	push   DWORD PTR [ebp-0x54]
  42d2c8:	lea    eax,[ebp-0x44]
  42d2cb:	mov    edx,0x7
  42d2d0:	call   0x40531c
  42d2d5:	mov    eax,DWORD PTR [ebp-0x44]
  42d2d8:	push   eax
  42d2d9:	mov    eax,0x4
  42d2de:	mov    edx,DWORD PTR [ebp-0x4]
  42d2e1:	test   edx,edx
  42d2e3:	je     0x42d2ea
  42d2e5:	cmp    eax,DWORD PTR [edx-0x4]
  42d2e8:	jb     0x42d2ef
  42d2ea:	call   0x403f68
  42d2ef:	movzx  eax,BYTE PTR [edx+eax*1]
  42d2f3:	mov    edx,0x100
  42d2f8:	mul    edx
  42d2fa:	mov    ecx,eax
  42d2fc:	jno    0x42d303
  42d2fe:	call   0x403f70
  42d303:	mov    eax,0x5
  42d308:	mov    edx,DWORD PTR [ebp-0x4]
  42d30b:	test   edx,edx
  42d30d:	je     0x42d314
  42d30f:	cmp    eax,DWORD PTR [edx-0x4]
  42d312:	jb     0x42d319
  42d314:	call   0x403f68
  42d319:	movzx  eax,BYTE PTR [edx+eax*1]
  42d31d:	add    ecx,eax
  42d31f:	jno    0x42d326
  42d321:	call   0x403f70
  42d326:	mov    eax,DWORD PTR [ebx+0xd0]
  42d32c:	pop    edx
  42d32d:	call   0x425498
  42d332:	jmp    0x42d447
  42d337:	mov    esi,ebx
  42d339:	movzx  eax,BYTE PTR [esi+0x105]
  42d340:	push   eax
  42d341:	lea    eax,[ebp-0x58]
  42d344:	push   eax
  42d345:	lea    eax,[ebp-0x5c]
  42d348:	push   eax
  42d349:	mov    ecx,DWORD PTR [ebp-0xc]
  42d34c:	sub    ecx,0x2
  42d34f:	jno    0x42d356
  42d351:	call   0x403f70
  42d356:	xor    edx,edx
  42d358:	mov    eax,DWORD PTR [ebp-0x4]
  42d35b:	call   0x41d7a4
  42d360:	mov    edx,DWORD PTR [ebp-0x5c]
  42d363:	mov    eax,ds:0x46de0c
  42d368:	mov    eax,DWORD PTR [eax]
  42d36a:	xor    ecx,ecx
  42d36c:	call   0x423fcc
  42d371:	mov    eax,DWORD PTR [ebp-0x58]
  42d374:	push   eax
  42d375:	mov    eax,0x4
  42d37a:	mov    edx,DWORD PTR [ebp-0x4]
  42d37d:	test   edx,edx
  42d37f:	je     0x42d386
  42d381:	cmp    eax,DWORD PTR [edx-0x4]
  42d384:	jb     0x42d38b
  42d386:	call   0x403f68
  42d38b:	movzx  eax,BYTE PTR [edx+eax*1]
  42d38f:	mov    edx,0x100
  42d394:	mul    edx
  42d396:	mov    ecx,eax
  42d398:	jno    0x42d39f
  42d39a:	call   0x403f70
  42d39f:	mov    eax,0x5
  42d3a4:	mov    edx,DWORD PTR [ebp-0x4]
  42d3a7:	test   edx,edx
  42d3a9:	je     0x42d3b0
  42d3ab:	cmp    eax,DWORD PTR [edx-0x4]
  42d3ae:	jb     0x42d3b5
  42d3b0:	call   0x403f68
  42d3b5:	movzx  eax,BYTE PTR [edx+eax*1]
  42d3b9:	add    ecx,eax
  42d3bb:	jno    0x42d3c2
  42d3bd:	call   0x403f70
  42d3c2:	mov    eax,DWORD PTR [esi+0xd0]
  42d3c8:	pop    edx
  42d3c9:	call   0x425470
  42d3ce:	jmp    0x42d447
  42d3d0:	push   0x1
  42d3d2:	lea    ecx,[ebp-0x70]
  42d3d5:	xor    edx,edx
  42d3d7:	mov    eax,DWORD PTR [ebp-0x4]
  42d3da:	call   0x41d710
  42d3df:	lea    eax,[ebp-0x70]
  42d3e2:	lea    edx,[ebp-0x60]
  42d3e5:	call   0x41cab4
  42d3ea:	mov    eax,DWORD PTR [ebp-0x60]
  42d3ed:	push   eax
  42d3ee:	mov    eax,0x10
  42d3f3:	mov    edx,DWORD PTR [ebp-0x4]
  42d3f6:	test   edx,edx
  42d3f8:	je     0x42d3ff
  42d3fa:	cmp    eax,DWORD PTR [edx-0x4]
  42d3fd:	jb     0x42d404
  42d3ff:	call   0x403f68
  42d404:	movzx  eax,BYTE PTR [edx+eax*1]
  42d408:	mov    edx,0x100
  42d40d:	mul    edx
  42d40f:	mov    ecx,eax
  42d411:	jno    0x42d418
  42d413:	call   0x403f70
  42d418:	mov    eax,0x11
  42d41d:	mov    edx,DWORD PTR [ebp-0x4]
  42d420:	test   edx,edx
  42d422:	je     0x42d429
  42d424:	cmp    eax,DWORD PTR [edx-0x4]
  42d427:	jb     0x42d42e
  42d429:	call   0x403f68
  42d42e:	movzx  eax,BYTE PTR [edx+eax*1]
  42d432:	add    ecx,eax
  42d434:	jno    0x42d43b
  42d436:	call   0x403f70
  42d43b:	mov    eax,DWORD PTR [ebx+0xd0]
  42d441:	pop    edx
  42d442:	call   0x425498
  42d447:	xor    eax,eax
  42d449:	pop    edx
  42d44a:	pop    ecx
  42d44b:	pop    ecx
  42d44c:	mov    DWORD PTR fs:[eax],edx
  42d44f:	jmp    0x42d47c
  42d451:	jmp    0x404568
  42d456:	lea    edx,[ebp-0x74]
  42d459:	mov    eax,ds:0x46dabc
  42d45e:	call   0x406f48
  42d463:	mov    ecx,DWORD PTR [ebp-0x74]
  42d466:	mov    dl,0x1
  42d468:	mov    eax,ds:0x427608
  42d46d:	call   0x41bdbc
  42d472:	call   0x4048fc
  42d477:	call   0x404978
  42d47c:	xor    eax,eax
  42d47e:	pop    edx
  42d47f:	pop    ecx
  42d480:	pop    ecx
  42d481:	mov    DWORD PTR fs:[eax],edx
  42d484:	push   0x42d4a8
  42d489:	xor    edx,edx
  42d48b:	mov    eax,DWORD PTR [ebp-0x10]
  42d48e:	mov    ecx,DWORD PTR [eax]
  42d490:	call   DWORD PTR [ecx+0x48]
  42d493:	lea    edx,[ebp-0x10]
  42d496:	mov    eax,ds:0x41be90
  42d49b:	call   0x41b14c
  42d4a0:	ret    
  42d4a1:	jmp    0x40481c
  42d4a6:	jmp    0x42d489
  42d4a8:	xor    eax,eax
  42d4aa:	pop    edx
  42d4ab:	pop    ecx
  42d4ac:	pop    ecx
  42d4ad:	mov    DWORD PTR fs:[eax],edx
  42d4b0:	push   0x42d4ee
  42d4b5:	lea    eax,[ebp-0x74]
  42d4b8:	call   0x404f88
  42d4bd:	lea    eax,[ebp-0x60]
  42d4c0:	mov    edx,0x12
  42d4c5:	call   0x404fac
  42d4ca:	lea    eax,[ebp-0x18]
  42d4cd:	mov    edx,DWORD PTR ds:0x40769c
  42d4d3:	call   0x4063bc
  42d4d8:	lea    eax,[ebp-0x4]
  42d4db:	mov    edx,DWORD PTR ds:0x40769c
  42d4e1:	call   0x4063bc
  42d4e6:	ret    
  42d4e7:	jmp    0x40481c
  42d4ec:	jmp    0x42d4b5
  42d4ee:	pop    edi
  42d4ef:	pop    esi
  42d4f0:	pop    ebx
  42d4f1:	mov    esp,ebp
  42d4f3:	pop    ebp
  42d4f4:	ret    0x8
  42d4f7:	add    bh,bh
  42d4f9:	(bad)  
  42d4fa:	(bad)  
  42d4fb:	inc    DWORD PTR [ecx]
  42d4fd:	add    BYTE PTR [eax],al
  42d4ff:	add    BYTE PTR [esi],ch
  42d501:	add    BYTE PTR [eax],al
  42d503:	add    BYTE PTR [ebp-0x75],dl
  42d506:	in     al,dx
  42d507:	push   ebx
  42d508:	movzx  ebx,BYTE PTR [eax+0xa1]
  42d50f:	dec    ebx
  42d510:	sub    bl,0x2
  42d513:	jb     0x42d519
  42d515:	je     0x42d524
  42d517:	jmp    0x42d532
  42d519:	mov    ebx,DWORD PTR [ebp+0xc]
  42d51c:	push   ebx
  42d51d:	call   0x42c6c0
  42d522:	jmp    0x42d532
  42d524:	mov    ebx,DWORD PTR [ebp+0xc]
  42d527:	push   ebx
  42d528:	movzx  ebx,BYTE PTR [ebp+0x8]
  42d52c:	push   ebx
  42d52d:	call   0x42ce6c
  42d532:	pop    ebx
  42d533:	pop    ebp
  42d534:	ret    0x8
  42d537:	nop
  42d538:	push   ebx
  42d539:	push   esi
  42d53a:	mov    esi,ecx
  42d53c:	xor    ecx,ecx
  42d53e:	movzx  ebx,BYTE PTR [eax+0xa1]
  42d545:	dec    ebx
  42d546:	sub    bl,0x2
  42d549:	jb     0x42d54f
  42d54b:	je     0x42d55a
  42d54d:	jmp    0x42d563
  42d54f:	mov    ecx,esi
  42d551:	call   0x42da78
  42d556:	mov    ecx,eax
  42d558:	jmp    0x42d563
  42d55a:	mov    ecx,esi
  42d55c:	call   0x42d568
  42d561:	mov    ecx,eax
  42d563:	mov    eax,ecx
  42d565:	pop    esi
  42d566:	pop    ebx
  42d567:	ret    
  42d568:	push   ebp
  42d569:	mov    ebp,esp
  42d56b:	push   ecx
  42d56c:	mov    ecx,0xb
  42d571:	push   0x0
  42d573:	push   0x0
  42d575:	dec    ecx
  42d576:	jne    0x42d571
  42d578:	push   ecx
  42d579:	xchg   DWORD PTR [ebp-0x4],ecx
  42d57c:	push   ebx
  42d57d:	push   esi
  42d57e:	push   edi
  42d57f:	mov    ebx,ecx
  42d581:	mov    esi,edx
  42d583:	xor    eax,eax
  42d585:	push   ebp
  42d586:	push   0x42da59
  42d58b:	push   DWORD PTR fs:[eax]
  42d58e:	mov    DWORD PTR fs:[eax],esp
  42d591:	push   0xff
  42d596:	lea    eax,[ebp-0x4]
  42d599:	mov    ecx,0x1
  42d59e:	mov    edx,DWORD PTR ds:0x40769c
  42d5a4:	call   0x4063b0
  42d5a9:	add    esp,0x4
  42d5ac:	mov    eax,DWORD PTR [esi+0xd0]
  42d5b2:	mov    edx,ebx
  42d5b4:	call   0x42559c
  42d5b9:	mov    ebx,eax
  42d5bb:	test   bl,bl
  42d5bd:	je     0x42da30
  42d5c3:	push   0x0
  42d5c5:	lea    edx,[ebp-0x4]
  42d5c8:	mov    ecx,0x4
  42d5cd:	mov    eax,esi
  42d5cf:	mov    edi,DWORD PTR [eax]
  42d5d1:	call   DWORD PTR [edi+0xa0]
  42d5d7:	mov    eax,0x1
  42d5dc:	mov    edx,DWORD PTR [ebp-0x4]
  42d5df:	test   edx,edx
  42d5e1:	je     0x42d5e8
  42d5e3:	cmp    eax,DWORD PTR [edx-0x4]
  42d5e6:	jb     0x42d5ed
  42d5e8:	call   0x403f68
  42d5ed:	movzx  eax,BYTE PTR [edx+eax*1]
  42d5f1:	cmp    eax,0x8
  42d5f4:	ja     0x42d751
  42d5fa:	jmp    DWORD PTR [eax*4+0x42d601]
  42d601:	jb     0x42d5da
  42d603:	inc    edx
  42d604:	add    BYTE PTR [edx],ch
  42d606:	(bad)  
  42d607:	inc    edx
  42d608:	add    BYTE PTR [eax-0x2a],dl
  42d60b:	inc    edx
  42d60c:	add    BYTE PTR [esi-0x2a],dh
  42d60f:	inc    edx
  42d610:	add    BYTE PTR [esi+edx*8-0x293dffbe],bl
  42d617:	inc    edx
  42d618:	add    al,ch
  42d61a:	(bad)  
  42d61b:	inc    edx
  42d61c:	add    BYTE PTR [ebx],cl
  42d61e:	xlat   BYTE PTR ds:[ebx]
  42d61f:	inc    edx
  42d620:	add    BYTE PTR [esi],ch
  42d622:	xlat   BYTE PTR ds:[ebx]
  42d623:	inc    edx
  42d624:	add    cl,ch
  42d626:	dec    eax
  42d627:	add    DWORD PTR [eax],eax
  42d629:	add    BYTE PTR [ebp-0x5b5e0fab],cl
  42d62f:	fild   DWORD PTR [esi+0x0]
  42d632:	call   0x406f48
  42d637:	mov    ecx,DWORD PTR [ebp-0x10]
  42d63a:	mov    dl,0x1
  42d63c:	mov    eax,ds:0x427740
  42d641:	call   0x41bdbc
  42d646:	call   0x4048fc
  42d64b:	jmp    0x42d772
  42d650:	lea    edx,[ebp-0x14]
  42d653:	mov    eax,ds:0x46da80
  42d658:	call   0x406f48
  42d65d:	mov    ecx,DWORD PTR [ebp-0x14]
  42d660:	mov    dl,0x1
  42d662:	mov    eax,ds:0x4277ac
  42d667:	call   0x41bdbc
  42d66c:	call   0x4048fc
  42d671:	jmp    0x42d772
  42d676:	lea    edx,[ebp-0x18]
  42d679:	mov    eax,ds:0x46dac8
  42d67e:	call   0x406f48
  42d683:	mov    ecx,DWORD PTR [ebp-0x18]
  42d686:	mov    dl,0x1
  42d688:	mov    eax,ds:0x42781c
  42d68d:	call   0x41bdbc
  42d692:	call   0x4048fc
  42d697:	jmp    0x42d772
  42d69c:	lea    edx,[ebp-0x1c]
  42d69f:	mov    eax,ds:0x46dd58
  42d6a4:	call   0x406f48
  42d6a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  42d6ac:	mov    dl,0x1
  42d6ae:	mov    eax,ds:0x427890
  42d6b3:	call   0x41bdbc
  42d6b8:	call   0x4048fc
  42d6bd:	jmp    0x42d772
  42d6c2:	lea    edx,[ebp-0x20]
  42d6c5:	mov    eax,ds:0x46dbb8
  42d6ca:	call   0x406f48
  42d6cf:	mov    ecx,DWORD PTR [ebp-0x20]
  42d6d2:	mov    dl,0x1
  42d6d4:	mov    eax,ds:0x427904
  42d6d9:	call   0x41bdbc
  42d6de:	call   0x4048fc
  42d6e3:	jmp    0x42d772
  42d6e8:	lea    edx,[ebp-0x24]
  42d6eb:	mov    eax,ds:0x46dc0c
  42d6f0:	call   0x406f48
  42d6f5:	mov    ecx,DWORD PTR [ebp-0x24]
  42d6f8:	mov    dl,0x1
  42d6fa:	mov    eax,ds:0x42797c
  42d6ff:	call   0x41bdbc
  42d704:	call   0x4048fc
  42d709:	jmp    0x42d772
  42d70b:	lea    edx,[ebp-0x28]
  42d70e:	mov    eax,ds:0x46db28
  42d713:	call   0x406f48
  42d718:	mov    ecx,DWORD PTR [ebp-0x28]
  42d71b:	mov    dl,0x1
  42d71d:	mov    eax,ds:0x4279ec
  42d722:	call   0x41bdbc
  42d727:	call   0x4048fc
  42d72c:	jmp    0x42d772
  42d72e:	lea    edx,[ebp-0x2c]
  42d731:	mov    eax,ds:0x46de44
  42d736:	call   0x406f48
  42d73b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42d73e:	mov    dl,0x1
  42d740:	mov    eax,ds:0x427a58
  42d745:	call   0x41bdbc
  42d74a:	call   0x4048fc
  42d74f:	jmp    0x42d772
  42d751:	lea    edx,[ebp-0x30]
  42d754:	mov    eax,ds:0x46dd34
  42d759:	call   0x406f48
  42d75e:	mov    ecx,DWORD PTR [ebp-0x30]
  42d761:	mov    dl,0x1
  42d763:	mov    eax,ds:0x4275a0
  42d768:	call   0x41bdbc
  42d76d:	call   0x4048fc
  42d772:	mov    eax,0x3
  42d777:	mov    edx,DWORD PTR [ebp-0x4]
  42d77a:	test   edx,edx
  42d77c:	je     0x42d783
  42d77e:	cmp    eax,DWORD PTR [edx-0x4]
  42d781:	jb     0x42d788
  42d783:	call   0x403f68
  42d788:	movzx  eax,BYTE PTR [edx+eax*1]
  42d78c:	mov    BYTE PTR [ebp-0x9],al
  42d78f:	movzx  eax,BYTE PTR [ebp-0x9]
  42d793:	dec    al
  42d795:	je     0x42d79d
  42d797:	sub    al,0x2
  42d799:	je     0x42d7a6
  42d79b:	jmp    0x42d7cf
  42d79d:	mov    DWORD PTR [ebp-0x8],0x6
  42d7a4:	jmp    0x42d7d6
  42d7a6:	mov    eax,0x4
  42d7ab:	mov    edx,DWORD PTR [ebp-0x4]
  42d7ae:	test   edx,edx
  42d7b0:	je     0x42d7b7
  42d7b2:	cmp    eax,DWORD PTR [edx-0x4]
  42d7b5:	jb     0x42d7bc
  42d7b7:	call   0x403f68
  42d7bc:	movzx  eax,BYTE PTR [edx+eax*1]
  42d7c0:	add    eax,0x2
  42d7c3:	jno    0x42d7ca
  42d7c5:	call   0x403f70
  42d7ca:	mov    DWORD PTR [ebp-0x8],eax
  42d7cd:	jmp    0x42d7d6
  42d7cf:	mov    DWORD PTR [ebp-0x8],0x12
  42d7d6:	push   0x0
  42d7d8:	lea    edx,[ebp-0x4]
  42d7db:	mov    ecx,DWORD PTR [ebp-0x8]
  42d7de:	mov    eax,esi
  42d7e0:	mov    edi,DWORD PTR [eax]
  42d7e2:	call   DWORD PTR [edi+0xa0]
  42d7e8:	movzx  eax,BYTE PTR [ebp-0x9]
  42d7ec:	dec    al
  42d7ee:	je     0x42d7fd
  42d7f0:	sub    al,0x2
  42d7f2:	je     0x42d922
  42d7f8:	jmp    0x42d9b9
  42d7fd:	push   0x0
  42d7ff:	xor    eax,eax
  42d801:	mov    edx,DWORD PTR [ebp-0x4]
  42d804:	test   edx,edx
  42d806:	je     0x42d80d
  42d808:	cmp    eax,DWORD PTR [edx-0x4]
  42d80b:	jb     0x42d812
  42d80d:	call   0x403f68
  42d812:	movzx  edx,BYTE PTR [edx+eax*1]
  42d816:	lea    ecx,[ebp-0x38]
  42d819:	mov    eax,ds:0x41be90
  42d81e:	call   0x41b19c
  42d823:	push   DWORD PTR [ebp-0x38]
  42d826:	push   0x42da74
  42d82b:	mov    eax,0x1
  42d830:	mov    edx,DWORD PTR [ebp-0x4]
  42d833:	test   edx,edx
  42d835:	je     0x42d83c
  42d837:	cmp    eax,DWORD PTR [edx-0x4]
  42d83a:	jb     0x42d841
  42d83c:	call   0x403f68
  42d841:	movzx  edx,BYTE PTR [edx+eax*1]
  42d845:	lea    ecx,[ebp-0x3c]
  42d848:	mov    eax,ds:0x41be90
  42d84d:	call   0x41b19c
  42d852:	push   DWORD PTR [ebp-0x3c]
  42d855:	push   0x42da74
  42d85a:	mov    eax,0x2
  42d85f:	mov    edx,DWORD PTR [ebp-0x4]
  42d862:	test   edx,edx
  42d864:	je     0x42d86b
  42d866:	cmp    eax,DWORD PTR [edx-0x4]
  42d869:	jb     0x42d870
  42d86b:	call   0x403f68
  42d870:	movzx  edx,BYTE PTR [edx+eax*1]
  42d874:	lea    ecx,[ebp-0x40]
  42d877:	mov    eax,ds:0x41be90
  42d87c:	call   0x41b19c
  42d881:	push   DWORD PTR [ebp-0x40]
  42d884:	push   0x42da74
  42d889:	mov    eax,0x3
  42d88e:	mov    edx,DWORD PTR [ebp-0x4]
  42d891:	test   edx,edx
  42d893:	je     0x42d89a
  42d895:	cmp    eax,DWORD PTR [edx-0x4]
  42d898:	jb     0x42d89f
  42d89a:	call   0x403f68
  42d89f:	movzx  edx,BYTE PTR [edx+eax*1]
  42d8a3:	lea    ecx,[ebp-0x44]
  42d8a6:	mov    eax,ds:0x41be90
  42d8ab:	call   0x41b19c
  42d8b0:	push   DWORD PTR [ebp-0x44]
  42d8b3:	lea    eax,[ebp-0x34]
  42d8b6:	mov    edx,0x7
  42d8bb:	call   0x40531c
  42d8c0:	mov    eax,DWORD PTR [ebp-0x34]
  42d8c3:	push   eax
  42d8c4:	mov    eax,0x4
  42d8c9:	mov    edx,DWORD PTR [ebp-0x4]
  42d8cc:	test   edx,edx
  42d8ce:	je     0x42d8d5
  42d8d0:	cmp    eax,DWORD PTR [edx-0x4]
  42d8d3:	jb     0x42d8da
  42d8d5:	call   0x403f68
  42d8da:	movzx  eax,BYTE PTR [edx+eax*1]
  42d8de:	mov    edx,0x100
  42d8e3:	mul    edx
  42d8e5:	mov    ecx,eax
  42d8e7:	jno    0x42d8ee
  42d8e9:	call   0x403f70
  42d8ee:	mov    eax,0x5
  42d8f3:	mov    edx,DWORD PTR [ebp-0x4]
  42d8f6:	test   edx,edx
  42d8f8:	je     0x42d8ff
  42d8fa:	cmp    eax,DWORD PTR [edx-0x4]
  42d8fd:	jb     0x42d904
  42d8ff:	call   0x403f68
  42d904:	movzx  eax,BYTE PTR [edx+eax*1]
  42d908:	add    ecx,eax
  42d90a:	jno    0x42d911
  42d90c:	call   0x403f70
  42d911:	mov    eax,DWORD PTR [esi+0xd0]
  42d917:	pop    edx
  42d918:	call   0x425470
  42d91d:	jmp    0x42da30
  42d922:	movzx  eax,BYTE PTR [esi+0x105]
  42d929:	push   eax
  42d92a:	lea    eax,[ebp-0x48]
  42d92d:	push   eax
  42d92e:	lea    eax,[ebp-0x4c]
  42d931:	push   eax
  42d932:	mov    ecx,DWORD PTR [ebp-0x8]
  42d935:	sub    ecx,0x2
  42d938:	jno    0x42d93f
  42d93a:	call   0x403f70
  42d93f:	xor    edx,edx
  42d941:	mov    eax,DWORD PTR [ebp-0x4]
  42d944:	call   0x41d7a4
  42d949:	mov    edx,DWORD PTR [ebp-0x4c]
  42d94c:	mov    eax,ds:0x46de0c
  42d951:	mov    eax,DWORD PTR [eax]
  42d953:	xor    ecx,ecx
  42d955:	call   0x423fcc
  42d95a:	mov    eax,DWORD PTR [ebp-0x48]
  42d95d:	push   eax
  42d95e:	mov    eax,0x4
  42d963:	mov    edx,DWORD PTR [ebp-0x4]
  42d966:	test   edx,edx
  42d968:	je     0x42d96f
  42d96a:	cmp    eax,DWORD PTR [edx-0x4]
  42d96d:	jb     0x42d974
  42d96f:	call   0x403f68
  42d974:	movzx  eax,BYTE PTR [edx+eax*1]
  42d978:	mov    edx,0x100
  42d97d:	mul    edx
  42d97f:	mov    ecx,eax
  42d981:	jno    0x42d988
  42d983:	call   0x403f70
  42d988:	mov    eax,0x5
  42d98d:	mov    edx,DWORD PTR [ebp-0x4]
  42d990:	test   edx,edx
  42d992:	je     0x42d999
  42d994:	cmp    eax,DWORD PTR [edx-0x4]
  42d997:	jb     0x42d99e
  42d999:	call   0x403f68
  42d99e:	movzx  eax,BYTE PTR [edx+eax*1]
  42d9a2:	add    ecx,eax
  42d9a4:	jno    0x42d9ab
  42d9a6:	call   0x403f70
  42d9ab:	mov    eax,DWORD PTR [esi+0xd0]
  42d9b1:	pop    edx
  42d9b2:	call   0x425470
  42d9b7:	jmp    0x42da30
  42d9b9:	push   0x1
  42d9bb:	lea    ecx,[ebp-0x60]
  42d9be:	xor    edx,edx
  42d9c0:	mov    eax,DWORD PTR [ebp-0x4]
  42d9c3:	call   0x41d710
  42d9c8:	lea    eax,[ebp-0x60]
  42d9cb:	lea    edx,[ebp-0x50]
  42d9ce:	call   0x41cab4
  42d9d3:	mov    eax,DWORD PTR [ebp-0x50]
  42d9d6:	push   eax
  42d9d7:	mov    eax,0x10
  42d9dc:	mov    edx,DWORD PTR [ebp-0x4]
  42d9df:	test   edx,edx
  42d9e1:	je     0x42d9e8
  42d9e3:	cmp    eax,DWORD PTR [edx-0x4]
  42d9e6:	jb     0x42d9ed
  42d9e8:	call   0x403f68
  42d9ed:	movzx  eax,BYTE PTR [edx+eax*1]
  42d9f1:	mov    edx,0x100
  42d9f6:	mul    edx
  42d9f8:	mov    ecx,eax
  42d9fa:	jno    0x42da01
  42d9fc:	call   0x403f70
  42da01:	mov    eax,0x11
  42da06:	mov    edx,DWORD PTR [ebp-0x4]
  42da09:	test   edx,edx
  42da0b:	je     0x42da12
  42da0d:	cmp    eax,DWORD PTR [edx-0x4]
  42da10:	jb     0x42da17
  42da12:	call   0x403f68
  42da17:	movzx  eax,BYTE PTR [edx+eax*1]
  42da1b:	add    ecx,eax
  42da1d:	jno    0x42da24
  42da1f:	call   0x403f70
  42da24:	mov    eax,DWORD PTR [esi+0xd0]
  42da2a:	pop    edx
  42da2b:	call   0x425498
  42da30:	xor    eax,eax
  42da32:	pop    edx
  42da33:	pop    ecx
  42da34:	pop    ecx
  42da35:	mov    DWORD PTR fs:[eax],edx
  42da38:	push   0x42da60
  42da3d:	lea    eax,[ebp-0x50]
  42da40:	mov    edx,0x11
  42da45:	call   0x404fac
  42da4a:	lea    eax,[ebp-0x4]
  42da4d:	mov    edx,DWORD PTR ds:0x40769c
  42da53:	call   0x4063bc
  42da58:	ret    
  42da59:	jmp    0x40481c
  42da5e:	jmp    0x42da3d
  42da60:	mov    eax,ebx
  42da62:	pop    edi
  42da63:	pop    esi
  42da64:	pop    ebx
  42da65:	mov    esp,ebp
  42da67:	pop    ebp
  42da68:	ret    
  42da69:	add    BYTE PTR [eax],al
  42da6b:	add    bh,bh
  42da6d:	(bad)  
  42da6e:	(bad)  
  42da6f:	inc    DWORD PTR [ecx]
  42da71:	add    BYTE PTR [eax],al
  42da73:	add    BYTE PTR [esi],ch
  42da75:	add    BYTE PTR [eax],al
  42da77:	add    BYTE PTR [ebp-0x75],dl
  42da7a:	in     al,dx
  42da7b:	push   ecx
  42da7c:	mov    ecx,0x4
  42da81:	push   0x0
  42da83:	push   0x0
  42da85:	dec    ecx
  42da86:	jne    0x42da81
  42da88:	push   ecx
  42da89:	xchg   DWORD PTR [ebp-0x4],ecx
  42da8c:	push   ebx
  42da8d:	push   esi
  42da8e:	push   edi
  42da8f:	mov    ebx,ecx
  42da91:	mov    esi,edx
  42da93:	xor    eax,eax
  42da95:	push   ebp
  42da96:	push   0x42dcfb
  42da9b:	push   DWORD PTR fs:[eax]
  42da9e:	mov    DWORD PTR fs:[eax],esp
  42daa1:	push   0x6
  42daa3:	lea    eax,[ebp-0x4]
  42daa6:	mov    ecx,0x1
  42daab:	mov    edx,DWORD PTR ds:0x40769c
  42dab1:	call   0x4063b0
  42dab6:	add    esp,0x4
  42dab9:	mov    eax,DWORD PTR [esi+0xd0]
  42dabf:	mov    edx,ebx
  42dac1:	call   0x42559c
  42dac6:	mov    ebx,eax
  42dac8:	test   bl,bl
  42daca:	je     0x42dcd2
  42dad0:	push   0x0
  42dad2:	lea    edx,[ebp-0x4]
  42dad5:	mov    ecx,0x2
  42dada:	mov    eax,esi
  42dadc:	mov    edi,DWORD PTR [eax]
  42dade:	call   DWORD PTR [edi+0xa0]
  42dae4:	mov    eax,0x1
  42dae9:	mov    edx,DWORD PTR [ebp-0x4]
  42daec:	test   edx,edx
  42daee:	je     0x42daf5
  42daf0:	cmp    eax,DWORD PTR [edx-0x4]
  42daf3:	jb     0x42dafa
  42daf5:	call   0x403f68
  42dafa:	movzx  eax,BYTE PTR [edx+eax*1]
  42dafe:	sub    al,0x5a
  42db00:	je     0x42db9e
  42db06:	dec    al
  42db08:	je     0x42db14
  42db0a:	dec    al
  42db0c:	je     0x42db37
  42db0e:	dec    al
  42db10:	je     0x42db5a
  42db12:	jmp    0x42db7d
  42db14:	lea    edx,[ebp-0x8]
  42db17:	mov    eax,ds:0x46dc84
  42db1c:	call   0x406f48
  42db21:	mov    ecx,DWORD PTR [ebp-0x8]
  42db24:	mov    dl,0x1
  42db26:	mov    eax,ds:0x427460
  42db2b:	call   0x41bdbc
  42db30:	call   0x4048fc
  42db35:	jmp    0x42db9e
  42db37:	lea    edx,[ebp-0xc]
  42db3a:	mov    eax,ds:0x46dad8
  42db3f:	call   0x406f48
  42db44:	mov    ecx,DWORD PTR [ebp-0xc]
  42db47:	mov    dl,0x1
  42db49:	mov    eax,ds:0x4274c8
  42db4e:	call   0x41bdbc
  42db53:	call   0x4048fc
  42db58:	jmp    0x42db9e
  42db5a:	lea    edx,[ebp-0x10]
  42db5d:	mov    eax,ds:0x46dd38
  42db62:	call   0x406f48
  42db67:	mov    ecx,DWORD PTR [ebp-0x10]
  42db6a:	mov    dl,0x1
  42db6c:	mov    eax,ds:0x427534
  42db71:	call   0x41bdbc
  42db76:	call   0x4048fc
  42db7b:	jmp    0x42db9e
  42db7d:	lea    edx,[ebp-0x14]
  42db80:	mov    eax,ds:0x46dd34
  42db85:	call   0x406f48
  42db8a:	mov    ecx,DWORD PTR [ebp-0x14]
  42db8d:	mov    dl,0x1
  42db8f:	mov    eax,ds:0x4275a0
  42db94:	call   0x41bdbc
  42db99:	call   0x4048fc
  42db9e:	push   0x0
  42dba0:	lea    edx,[ebp-0x4]
  42dba3:	mov    ecx,0x6
  42dba8:	mov    eax,esi
  42dbaa:	mov    edi,DWORD PTR [eax]
  42dbac:	call   DWORD PTR [edi+0xa0]
  42dbb2:	push   0x0
  42dbb4:	mov    eax,0x2
  42dbb9:	mov    edx,DWORD PTR [ebp-0x4]
  42dbbc:	test   edx,edx
  42dbbe:	je     0x42dbc5
  42dbc0:	cmp    eax,DWORD PTR [edx-0x4]
  42dbc3:	jb     0x42dbca
  42dbc5:	call   0x403f68
  42dbca:	movzx  edx,BYTE PTR [edx+eax*1]
  42dbce:	lea    ecx,[ebp-0x1c]
  42dbd1:	mov    eax,ds:0x41be90
  42dbd6:	call   0x41b19c
  42dbdb:	push   DWORD PTR [ebp-0x1c]
  42dbde:	push   0x42dd14
  42dbe3:	mov    eax,0x3
  42dbe8:	mov    edx,DWORD PTR [ebp-0x4]
  42dbeb:	test   edx,edx
  42dbed:	je     0x42dbf4
  42dbef:	cmp    eax,DWORD PTR [edx-0x4]
  42dbf2:	jb     0x42dbf9
  42dbf4:	call   0x403f68
  42dbf9:	movzx  edx,BYTE PTR [edx+eax*1]
  42dbfd:	lea    ecx,[ebp-0x20]
  42dc00:	mov    eax,ds:0x41be90
  42dc05:	call   0x41b19c
  42dc0a:	push   DWORD PTR [ebp-0x20]
  42dc0d:	push   0x42dd14
  42dc12:	mov    eax,0x4
  42dc17:	mov    edx,DWORD PTR [ebp-0x4]
  42dc1a:	test   edx,edx
  42dc1c:	je     0x42dc23
  42dc1e:	cmp    eax,DWORD PTR [edx-0x4]
  42dc21:	jb     0x42dc28
  42dc23:	call   0x403f68
  42dc28:	movzx  edx,BYTE PTR [edx+eax*1]
  42dc2c:	lea    ecx,[ebp-0x24]
  42dc2f:	mov    eax,ds:0x41be90
  42dc34:	call   0x41b19c
  42dc39:	push   DWORD PTR [ebp-0x24]
  42dc3c:	push   0x42dd14
  42dc41:	mov    eax,0x5
  42dc46:	mov    edx,DWORD PTR [ebp-0x4]
  42dc49:	test   edx,edx
  42dc4b:	je     0x42dc52
  42dc4d:	cmp    eax,DWORD PTR [edx-0x4]
  42dc50:	jb     0x42dc57
  42dc52:	call   0x403f68
  42dc57:	movzx  edx,BYTE PTR [edx+eax*1]
  42dc5b:	lea    ecx,[ebp-0x28]
  42dc5e:	mov    eax,ds:0x41be90
  42dc63:	call   0x41b19c
  42dc68:	push   DWORD PTR [ebp-0x28]
  42dc6b:	lea    eax,[ebp-0x18]
  42dc6e:	mov    edx,0x7
  42dc73:	call   0x40531c
  42dc78:	mov    eax,DWORD PTR [ebp-0x18]
  42dc7b:	push   eax
  42dc7c:	xor    eax,eax
  42dc7e:	mov    edx,DWORD PTR [ebp-0x4]
  42dc81:	test   edx,edx
  42dc83:	je     0x42dc8a
  42dc85:	cmp    eax,DWORD PTR [edx-0x4]
  42dc88:	jb     0x42dc8f
  42dc8a:	call   0x403f68
  42dc8f:	movzx  eax,BYTE PTR [edx+eax*1]
  42dc93:	mov    edx,0x100
  42dc98:	mul    edx
  42dc9a:	mov    ecx,eax
  42dc9c:	jno    0x42dca3
  42dc9e:	call   0x403f70
  42dca3:	mov    eax,0x1
  42dca8:	mov    edx,DWORD PTR [ebp-0x4]
  42dcab:	test   edx,edx
  42dcad:	je     0x42dcb4
  42dcaf:	cmp    eax,DWORD PTR [edx-0x4]
  42dcb2:	jb     0x42dcb9
  42dcb4:	call   0x403f68
  42dcb9:	movzx  eax,BYTE PTR [edx+eax*1]
  42dcbd:	add    ecx,eax
  42dcbf:	jno    0x42dcc6
  42dcc1:	call   0x403f70
  42dcc6:	mov    eax,DWORD PTR [esi+0xd0]
  42dccc:	pop    edx
  42dccd:	call   0x425470
  42dcd2:	xor    eax,eax
  42dcd4:	pop    edx
  42dcd5:	pop    ecx
  42dcd6:	pop    ecx
  42dcd7:	mov    DWORD PTR fs:[eax],edx
  42dcda:	push   0x42dd02
  42dcdf:	lea    eax,[ebp-0x28]
  42dce2:	mov    edx,0x9
  42dce7:	call   0x404fac
  42dcec:	lea    eax,[ebp-0x4]
  42dcef:	mov    edx,DWORD PTR ds:0x40769c
  42dcf5:	call   0x4063bc
  42dcfa:	ret    
  42dcfb:	jmp    0x40481c
  42dd00:	jmp    0x42dcdf
  42dd02:	mov    eax,ebx
  42dd04:	pop    edi
  42dd05:	pop    esi
  42dd06:	pop    ebx
  42dd07:	mov    esp,ebp
  42dd09:	pop    ebp
  42dd0a:	ret    
  42dd0b:	add    bh,bh
  42dd0d:	(bad)  
  42dd0e:	(bad)  
  42dd0f:	inc    DWORD PTR [ecx]
  42dd11:	add    BYTE PTR [eax],al
  42dd13:	add    BYTE PTR [esi],ch
  42dd15:	add    BYTE PTR [eax],al
  42dd17:	add    BYTE PTR [esi-0x75],dl
  42dd1a:	mov    al,0xa4
  42dd1c:	add    BYTE PTR [eax],al
  42dd1e:	add    BYTE PTR [ebp-0x74f88b0a],al
  42dd24:	(bad)  
  42dd25:	mov    edx,DWORD PTR [eax]
  42dd27:	call   DWORD PTR [edx+0x6c]
  42dd2a:	pop    esi
  42dd2b:	ret    
  42dd2c:	push   ebp
  42dd2d:	mov    ebp,esp
  42dd2f:	mov    ecx,0x7
  42dd34:	push   0x0
  42dd36:	push   0x0
  42dd38:	dec    ecx
  42dd39:	jne    0x42dd34
  42dd3b:	push   ecx
  42dd3c:	push   ebx
  42dd3d:	push   esi
  42dd3e:	push   edi
  42dd3f:	mov    esi,edx
  42dd41:	mov    DWORD PTR [ebp-0x8],eax
  42dd44:	xor    eax,eax
  42dd46:	push   ebp
  42dd47:	push   0x42e20f
  42dd4c:	push   DWORD PTR fs:[eax]
  42dd4f:	mov    DWORD PTR fs:[eax],esp
  42dd52:	mov    eax,DWORD PTR [ebp-0x8]
  42dd55:	mov    edx,DWORD PTR [eax+0x88]
  42dd5b:	mov    eax,DWORD PTR [ebp-0x8]
  42dd5e:	mov    eax,DWORD PTR [eax+0xa4]
  42dd64:	mov    ecx,DWORD PTR [eax]
  42dd66:	call   DWORD PTR [ecx+0x4c]
  42dd69:	mov    eax,DWORD PTR [ebp-0x8]
  42dd6c:	mov    edx,DWORD PTR [eax+0x90]
  42dd72:	mov    eax,DWORD PTR [ebp-0x8]
  42dd75:	mov    eax,DWORD PTR [eax+0xa4]
  42dd7b:	mov    ecx,DWORD PTR [eax]
  42dd7d:	call   DWORD PTR [ecx+0x50]
  42dd80:	mov    eax,DWORD PTR [ebp-0x8]
  42dd83:	movzx  eax,BYTE PTR [eax+0x94]
  42dd8a:	mov    edx,DWORD PTR [ebp-0x8]
  42dd8d:	mov    edi,DWORD PTR [edx+0xa4]
  42dd93:	mov    BYTE PTR [edi+0x105],al
  42dd99:	mov    eax,DWORD PTR [ebp-0x8]
  42dd9c:	movzx  ebx,BYTE PTR [eax+0x94]
  42dda3:	mov    eax,edi
  42dda5:	mov    edx,DWORD PTR [eax]
  42dda7:	call   DWORD PTR [edx+0x7c]
  42ddaa:	xor    edx,edx
  42ddac:	push   ebp
  42ddad:	push   0x42e1af
  42ddb2:	push   DWORD PTR fs:[edx]
  42ddb5:	mov    DWORD PTR fs:[edx],esp
  42ddb8:	push   0xff
  42ddbd:	lea    eax,[ebp-0x4]
  42ddc0:	mov    ecx,0x1
  42ddc5:	mov    edx,DWORD PTR ds:0x40769c
  42ddcb:	call   0x4063b0
  42ddd0:	add    esp,0x4
  42ddd3:	mov    eax,DWORD PTR [ebp-0x8]
  42ddd6:	mov    edx,DWORD PTR [eax+0xa4]
  42dddc:	mov    eax,DWORD PTR [ebp-0x8]
  42dddf:	call   0x42cac4
  42dde4:	mov    eax,DWORD PTR [ebp-0x8]
  42dde7:	cmp    BYTE PTR [eax+0x94],0x0
  42ddee:	jne    0x42de14
  42ddf0:	push   0x0
  42ddf2:	push   0x3
  42ddf4:	lea    eax,[ebp-0x4]
  42ddf7:	push   eax
  42ddf8:	lea    eax,[ebp-0xc]
  42ddfb:	push   eax
  42ddfc:	mov    eax,DWORD PTR [ebp-0x8]
  42ddff:	mov    edx,DWORD PTR [eax+0xa4]
  42de05:	mov    ecx,0x42e228
  42de0a:	mov    eax,DWORD PTR [ebp-0x8]
  42de0d:	call   0x42c038
  42de12:	jmp    0x42de36
  42de14:	push   0x0
  42de16:	push   0x3
  42de18:	lea    eax,[ebp-0x4]
  42de1b:	push   eax
  42de1c:	lea    eax,[ebp-0xc]
  42de1f:	push   eax
  42de20:	mov    eax,DWORD PTR [ebp-0x8]
  42de23:	mov    edx,DWORD PTR [eax+0xa4]
  42de29:	mov    ecx,0x42e238
  42de2e:	mov    eax,DWORD PTR [ebp-0x8]
  42de31:	call   0x42c038
  42de36:	lea    ecx,[ebp-0x10]
  42de39:	mov    edx,DWORD PTR [ebp-0xc]
  42de3c:	mov    eax,DWORD PTR [ebp-0x4]
  42de3f:	call   0x41d42c
  42de44:	mov    edx,DWORD PTR [ebp-0x10]
  42de47:	mov    eax,DWORD PTR [ebp-0x8]
  42de4a:	mov    eax,DWORD PTR [eax+0xa4]
  42de50:	mov    ecx,DWORD PTR [eax]
  42de52:	call   DWORD PTR [ecx+0x74]
  42de55:	xor    eax,eax
  42de57:	push   ebp
  42de58:	push   0x42de88
  42de5d:	push   DWORD PTR fs:[eax]
  42de60:	mov    DWORD PTR fs:[eax],esp
  42de63:	push   0x0
  42de65:	lea    edx,[ebp-0x4]
  42de68:	mov    eax,DWORD PTR [ebp-0x8]
  42de6b:	mov    eax,DWORD PTR [eax+0xa4]
  42de71:	mov    ecx,0x2
  42de76:	mov    edi,DWORD PTR [eax]
  42de78:	call   DWORD PTR [edi+0xa0]
  42de7e:	xor    eax,eax
  42de80:	pop    edx
  42de81:	pop    ecx
  42de82:	pop    ecx
  42de83:	mov    DWORD PTR fs:[eax],edx
  42de86:	jmp    0x42deb3
  42de88:	jmp    0x404568
  42de8d:	lea    edx,[ebp-0x14]
  42de90:	mov    eax,ds:0x46dabc
  42de95:	call   0x406f48
  42de9a:	mov    ecx,DWORD PTR [ebp-0x14]
  42de9d:	mov    dl,0x1
  42de9f:	mov    eax,ds:0x427608
  42dea4:	call   0x41bdbc
  42dea9:	call   0x4048fc
  42deae:	call   0x404978
  42deb3:	mov    eax,0x1
  42deb8:	mov    edx,DWORD PTR [ebp-0x4]
  42debb:	test   edx,edx
  42debd:	je     0x42dec4
  42debf:	cmp    eax,DWORD PTR [edx-0x4]
  42dec2:	jb     0x42dec9
  42dec4:	call   0x403f68
  42dec9:	movzx  eax,BYTE PTR [edx+eax*1]
  42decd:	cmp    eax,0x8
  42ded0:	ja     0x42e02d
  42ded6:	jmp    DWORD PTR [eax*4+0x42dedd]
  42dedd:	dec    esi
  42dede:	loopne 0x42df22
  42dee0:	add    BYTE PTR [esi],al
  42dee2:	fild   WORD PTR [edx+0x0]
  42dee5:	sub    al,0xdf
  42dee7:	inc    edx
  42dee8:	add    BYTE PTR [edx-0x21],dl
  42deeb:	inc    edx
  42deec:	add    BYTE PTR [eax-0x21],bh
  42deef:	inc    edx
  42def0:	add    BYTE PTR [esi-0x3bffbd21],bl
  42def6:	fild   WORD PTR [edx+0x0]
  42def9:	out    0xdf,eax
  42defb:	inc    edx
  42defc:	add    BYTE PTR [edx],cl
  42defe:	loopne 0x42df42
  42df00:	add    cl,ch
  42df02:	dec    eax
  42df03:	add    DWORD PTR [eax],eax
  42df05:	add    BYTE PTR [ebp-0x5b5e17ab],cl
  42df0b:	fild   DWORD PTR [esi+0x0]
  42df0e:	call   0x406f48
  42df13:	mov    ecx,DWORD PTR [ebp-0x18]
  42df16:	mov    dl,0x1
  42df18:	mov    eax,ds:0x427740
  42df1d:	call   0x41bdbc
  42df22:	call   0x4048fc
  42df27:	jmp    0x42e04e
  42df2c:	lea    edx,[ebp-0x1c]
  42df2f:	mov    eax,ds:0x46da80
  42df34:	call   0x406f48
  42df39:	mov    ecx,DWORD PTR [ebp-0x1c]
  42df3c:	mov    dl,0x1
  42df3e:	mov    eax,ds:0x4277ac
  42df43:	call   0x41bdbc
  42df48:	call   0x4048fc
  42df4d:	jmp    0x42e04e
  42df52:	lea    edx,[ebp-0x20]
  42df55:	mov    eax,ds:0x46dac8
  42df5a:	call   0x406f48
  42df5f:	mov    ecx,DWORD PTR [ebp-0x20]
  42df62:	mov    dl,0x1
  42df64:	mov    eax,ds:0x42781c
  42df69:	call   0x41bdbc
  42df6e:	call   0x4048fc
  42df73:	jmp    0x42e04e
  42df78:	lea    edx,[ebp-0x24]
  42df7b:	mov    eax,ds:0x46dd58
  42df80:	call   0x406f48
  42df85:	mov    ecx,DWORD PTR [ebp-0x24]
  42df88:	mov    dl,0x1
  42df8a:	mov    eax,ds:0x427890
  42df8f:	call   0x41bdbc
  42df94:	call   0x4048fc
  42df99:	jmp    0x42e04e
  42df9e:	lea    edx,[ebp-0x28]
  42dfa1:	mov    eax,ds:0x46dbb8
  42dfa6:	call   0x406f48
  42dfab:	mov    ecx,DWORD PTR [ebp-0x28]
  42dfae:	mov    dl,0x1
  42dfb0:	mov    eax,ds:0x427904
  42dfb5:	call   0x41bdbc
  42dfba:	call   0x4048fc
  42dfbf:	jmp    0x42e04e
  42dfc4:	lea    edx,[ebp-0x2c]
  42dfc7:	mov    eax,ds:0x46dc0c
  42dfcc:	call   0x406f48
  42dfd1:	mov    ecx,DWORD PTR [ebp-0x2c]
  42dfd4:	mov    dl,0x1
  42dfd6:	mov    eax,ds:0x42797c
  42dfdb:	call   0x41bdbc
  42dfe0:	call   0x4048fc
  42dfe5:	jmp    0x42e04e
  42dfe7:	lea    edx,[ebp-0x30]
  42dfea:	mov    eax,ds:0x46db28
  42dfef:	call   0x406f48
  42dff4:	mov    ecx,DWORD PTR [ebp-0x30]
  42dff7:	mov    dl,0x1
  42dff9:	mov    eax,ds:0x4279ec
  42dffe:	call   0x41bdbc
  42e003:	call   0x4048fc
  42e008:	jmp    0x42e04e
  42e00a:	lea    edx,[ebp-0x34]
  42e00d:	mov    eax,ds:0x46de44
  42e012:	call   0x406f48
  42e017:	mov    ecx,DWORD PTR [ebp-0x34]
  42e01a:	mov    dl,0x1
  42e01c:	mov    eax,ds:0x427a58
  42e021:	call   0x41bdbc
  42e026:	call   0x4048fc
  42e02b:	jmp    0x42e04e
  42e02d:	lea    edx,[ebp-0x38]
  42e030:	mov    eax,ds:0x46dd34
  42e035:	call   0x406f48
  42e03a:	mov    ecx,DWORD PTR [ebp-0x38]
  42e03d:	mov    dl,0x1
  42e03f:	mov    eax,ds:0x4275a0
  42e044:	call   0x41bdbc
  42e049:	call   0x4048fc
  42e04e:	push   0x0
  42e050:	lea    edx,[ebp-0x4]
  42e053:	mov    eax,DWORD PTR [ebp-0x8]
  42e056:	mov    eax,DWORD PTR [eax+0xa4]
  42e05c:	mov    ecx,0x2
  42e061:	mov    edi,DWORD PTR [eax]
  42e063:	call   DWORD PTR [edi+0xa0]
  42e069:	mov    eax,0x1
  42e06e:	mov    edx,DWORD PTR [ebp-0x4]
  42e071:	test   edx,edx
  42e073:	je     0x42e07a
  42e075:	cmp    eax,DWORD PTR [edx-0x4]
  42e078:	jb     0x42e07f
  42e07a:	call   0x403f68
  42e07f:	movzx  eax,BYTE PTR [edx+eax*1]
  42e083:	dec    al
  42e085:	je     0x42e091
  42e087:	sub    al,0x2
  42e089:	je     0x42e09c
  42e08b:	dec    al
  42e08d:	je     0x42e0c5
  42e08f:	jmp    0x42e0ce
  42e091:	mov    DWORD PTR [ebp-0xc],0x6
  42e098:	xor    ebx,ebx
  42e09a:	jmp    0x42e0ce
  42e09c:	mov    eax,0x4
  42e0a1:	mov    edx,DWORD PTR [ebp-0x4]
  42e0a4:	test   edx,edx
  42e0a6:	je     0x42e0ad
  42e0a8:	cmp    eax,DWORD PTR [edx-0x4]
  42e0ab:	jb     0x42e0b2
  42e0ad:	call   0x403f68
  42e0b2:	movzx  eax,BYTE PTR [edx+eax*1]
  42e0b6:	add    eax,0x2
  42e0b9:	jno    0x42e0c0
  42e0bb:	call   0x403f70
  42e0c0:	mov    DWORD PTR [ebp-0xc],eax
  42e0c3:	jmp    0x42e0ce
  42e0c5:	mov    DWORD PTR [ebp-0xc],0x12
  42e0cc:	mov    bl,0x1
  42e0ce:	xor    eax,eax
  42e0d0:	push   ebp
  42e0d1:	push   0x42e17a
  42e0d6:	push   DWORD PTR fs:[eax]
  42e0d9:	mov    DWORD PTR fs:[eax],esp
  42e0dc:	push   0x0
  42e0de:	lea    edx,[ebp-0x4]
  42e0e1:	mov    eax,DWORD PTR [ebp-0x8]
  42e0e4:	mov    eax,DWORD PTR [eax+0xa4]
  42e0ea:	mov    ecx,DWORD PTR [ebp-0xc]
  42e0ed:	mov    edi,DWORD PTR [eax]
  42e0ef:	call   DWORD PTR [edi+0xa0]
  42e0f5:	push   ebx
  42e0f6:	mov    eax,DWORD PTR [ebp-0x8]
  42e0f9:	mov    eax,DWORD PTR [eax+0xa4]
  42e0ff:	mov    edx,DWORD PTR ds:0x42f3c4
  42e105:	call   0x404250
  42e10a:	mov    eax,DWORD PTR [eax+0xd0]
  42e110:	mov    eax,DWORD PTR [eax+0x20]
  42e113:	push   eax
  42e114:	mov    eax,0x4
  42e119:	mov    edx,DWORD PTR [ebp-0x4]
  42e11c:	test   edx,edx
  42e11e:	je     0x42e125
  42e120:	cmp    eax,DWORD PTR [edx-0x4]
  42e123:	jb     0x42e12a
  42e125:	call   0x403f68
  42e12a:	movzx  eax,BYTE PTR [edx+eax*1]
  42e12e:	mov    edx,0x100
  42e133:	mul    edx
  42e135:	mov    ecx,eax
  42e137:	jno    0x42e13e
  42e139:	call   0x403f70
  42e13e:	mov    eax,0x5
  42e143:	mov    edx,DWORD PTR [ebp-0x4]
  42e146:	test   edx,edx
  42e148:	je     0x42e14f
  42e14a:	cmp    eax,DWORD PTR [edx-0x4]
  42e14d:	jb     0x42e154
  42e14f:	call   0x403f68
  42e154:	movzx  eax,BYTE PTR [edx+eax*1]
  42e158:	add    ecx,eax
  42e15a:	jno    0x42e161
  42e15c:	call   0x403f70
  42e161:	mov    eax,esi
  42e163:	pop    edx
  42e164:	call   0x425470
  42e169:	mov    eax,esi
  42e16b:	mov    edx,DWORD PTR [eax]
  42e16d:	call   DWORD PTR [edx+0x24]
  42e170:	xor    eax,eax
  42e172:	pop    edx
  42e173:	pop    ecx
  42e174:	pop    ecx
  42e175:	mov    DWORD PTR fs:[eax],edx
  42e178:	jmp    0x42e1a5
  42e17a:	jmp    0x404568
  42e17f:	lea    edx,[ebp-0x3c]
  42e182:	mov    eax,ds:0x46dabc
  42e187:	call   0x406f48
  42e18c:	mov    ecx,DWORD PTR [ebp-0x3c]
  42e18f:	mov    dl,0x1
  42e191:	mov    eax,ds:0x427608
  42e196:	call   0x41bdbc
  42e19b:	call   0x4048fc
  42e1a0:	call   0x404978
  42e1a5:	xor    eax,eax
  42e1a7:	pop    edx
  42e1a8:	pop    ecx
  42e1a9:	pop    ecx
  42e1aa:	mov    DWORD PTR fs:[eax],edx
  42e1ad:	jmp    0x42e1d8
  42e1af:	jmp    0x404694
  42e1b4:	add    DWORD PTR [eax],eax
  42e1b6:	add    BYTE PTR [eax],al
  42e1b8:	hlt    
  42e1b9:	jbe    0x42e1fb
  42e1bb:	add    al,al
  42e1bd:	loope  0x42e201
  42e1bf:	add    BYTE PTR [ebx-0x7f7407bb],cl
  42e1c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1c6:	add    BYTE PTR [eax],al
  42e1c8:	add    BYTE PTR [ebx+0x6c52ff10],cl
  42e1ce:	call   0x404924
  42e1d3:	call   0x404978
  42e1d8:	xor    eax,eax
  42e1da:	pop    edx
  42e1db:	pop    ecx
  42e1dc:	pop    ecx
  42e1dd:	mov    DWORD PTR fs:[eax],edx
  42e1e0:	push   0x42e216
  42e1e5:	lea    eax,[ebp-0x3c]
  42e1e8:	mov    edx,0xb
  42e1ed:	call   0x404fac
  42e1f2:	lea    eax,[ebp-0x10]
  42e1f5:	mov    edx,DWORD PTR ds:0x40769c
  42e1fb:	call   0x4063bc
  42e200:	lea    eax,[ebp-0x4]
  42e203:	mov    edx,DWORD PTR ds:0x40769c
  42e209:	call   0x4063bc
  42e20e:	ret    
  42e20f:	jmp    0x40481c
  42e214:	jmp    0x42e1e5
  42e216:	pop    edi
  42e217:	pop    esi
  42e218:	pop    ebx
  42e219:	mov    esp,ebp
  42e21b:	pop    ebp
  42e21c:	ret    
  42e21d:	add    BYTE PTR [eax],al
  42e21f:	add    bh,bh
  42e221:	(bad)  
  42e222:	(bad)  
  42e223:	inc    DWORD PTR [edi]
  42e225:	add    BYTE PTR [eax],al
  42e227:	add    BYTE PTR [eax],dh
  42e229:	xor    BYTE PTR cs:[esi],ch
  42e22c:	xor    BYTE PTR [esi],ch
  42e22e:	xor    BYTE PTR [eax],al
  42e230:	(bad)  
  42e231:	(bad)  
  42e232:	(bad)  
  42e233:	inc    DWORD PTR [ebx]
  42e235:	add    BYTE PTR [eax],al
  42e237:	add    BYTE PTR [edx],bh
  42e239:	cmp    dh,BYTE PTR [eax]
  42e23b:	add    BYTE PTR [ebp-0x75],dl
  42e23e:	in     al,dx
  42e23f:	push   0x0
  42e241:	xor    edx,edx
  42e243:	push   ebp
  42e244:	push   0x42e29e
  42e249:	push   DWORD PTR fs:[edx]
  42e24c:	mov    DWORD PTR fs:[edx],esp
  42e24f:	movzx  edx,BYTE PTR [eax+0xa1]
  42e256:	dec    edx
  42e257:	sub    dl,0x2
  42e25a:	jb     0x42e260
  42e25c:	je     0x42e283
  42e25e:	jmp    0x42e288
  42e260:	lea    edx,[ebp-0x4]
  42e263:	mov    eax,ds:0x46de84
  42e268:	call   0x406f48
  42e26d:	mov    ecx,DWORD PTR [ebp-0x4]
  42e270:	mov    dl,0x1
  42e272:	mov    eax,ds:0x42b8ac
  42e277:	call   0x41bdbc
  42e27c:	call   0x4048fc
  42e281:	jmp    0x42e288
  42e283:	call   0x42dd18
  42e288:	xor    eax,eax
  42e28a:	pop    edx
  42e28b:	pop    ecx
  42e28c:	pop    ecx
  42e28d:	mov    DWORD PTR fs:[eax],edx
  42e290:	push   0x42e2a5
  42e295:	lea    eax,[ebp-0x4]
  42e298:	call   0x404f88
  42e29d:	ret    
  42e29e:	jmp    0x40481c
  42e2a3:	jmp    0x42e295
  42e2a5:	pop    ecx
  42e2a6:	pop    ebp
  42e2a7:	ret    
  42e2a8:	push   ebp
  42e2a9:	mov    ebp,esp
  42e2ab:	push   0x0
  42e2ad:	push   ebx
  42e2ae:	xor    ecx,ecx
  42e2b0:	push   ebp
  42e2b1:	push   0x42e30b
  42e2b6:	push   DWORD PTR fs:[ecx]
  42e2b9:	mov    DWORD PTR fs:[ecx],esp
  42e2bc:	movzx  ecx,BYTE PTR [eax+0xa1]
  42e2c3:	dec    ecx
  42e2c4:	sub    cl,0x2
  42e2c7:	jb     0x42e2cd
  42e2c9:	je     0x42e2f0
  42e2cb:	jmp    0x42e2f5
  42e2cd:	lea    edx,[ebp-0x4]
  42e2d0:	mov    eax,ds:0x46de84
  42e2d5:	call   0x406f48
  42e2da:	mov    ecx,DWORD PTR [ebp-0x4]
  42e2dd:	mov    dl,0x1
  42e2df:	mov    eax,ds:0x42b8ac
  42e2e4:	call   0x41bdbc
  42e2e9:	call   0x4048fc
  42e2ee:	jmp    0x42e2f5
  42e2f0:	call   0x42dd2c
  42e2f5:	xor    eax,eax
  42e2f7:	pop    edx
  42e2f8:	pop    ecx
  42e2f9:	pop    ecx
  42e2fa:	mov    DWORD PTR fs:[eax],edx
  42e2fd:	push   0x42e312
  42e302:	lea    eax,[ebp-0x4]
  42e305:	call   0x404f88
  42e30a:	ret    
  42e30b:	jmp    0x40481c
  42e310:	jmp    0x42e302
  42e312:	pop    ebx
  42e313:	pop    ecx
  42e314:	pop    ebp
  42e315:	ret    0x8
  42e318:	push   ebp
  42e319:	mov    ebp,esp
  42e31b:	push   ecx
  42e31c:	mov    ecx,0x6
  42e321:	push   0x0
  42e323:	push   0x0
  42e325:	dec    ecx
  42e326:	jne    0x42e321
  42e328:	xchg   DWORD PTR [ebp-0x4],ecx
  42e32b:	push   ebx
  42e32c:	push   esi
  42e32d:	push   edi
  42e32e:	mov    DWORD PTR [ebp-0x8],ecx
  42e331:	mov    esi,edx
  42e333:	xor    eax,eax
  42e335:	push   ebp
  42e336:	push   0x42e639
  42e33b:	push   DWORD PTR fs:[eax]
  42e33e:	mov    DWORD PTR fs:[eax],esp
  42e341:	mov    eax,esi
  42e343:	call   0x4061f4
  42e348:	cmp    eax,0x5
  42e34b:	jl     0x42e610
  42e351:	mov    eax,0x3
  42e356:	test   esi,esi
  42e358:	je     0x42e35f
  42e35a:	cmp    eax,DWORD PTR [esi-0x4]
  42e35d:	jb     0x42e364
  42e35f:	call   0x403f68
  42e364:	movzx  eax,BYTE PTR [esi+eax*1]
  42e368:	dec    al
  42e36a:	je     0x42e379
  42e36c:	sub    al,0x2
  42e36e:	je     0x42e43b
  42e374:	jmp    0x42e4ee
  42e379:	mov    edi,0x8
  42e37e:	lea    ecx,[ebp-0x20]
  42e381:	mov    eax,0x4
  42e386:	test   esi,esi
  42e388:	je     0x42e38f
  42e38a:	cmp    eax,DWORD PTR [esi-0x4]
  42e38d:	jb     0x42e394
  42e38f:	call   0x403f68
  42e394:	movzx  edx,BYTE PTR [esi+eax*1]
  42e398:	mov    eax,ds:0x41be90
  42e39d:	call   0x41b19c
  42e3a2:	push   DWORD PTR [ebp-0x20]
  42e3a5:	push   0x42e654
  42e3aa:	lea    ecx,[ebp-0x24]
  42e3ad:	mov    eax,0x5
  42e3b2:	test   esi,esi
  42e3b4:	je     0x42e3bb
  42e3b6:	cmp    eax,DWORD PTR [esi-0x4]
  42e3b9:	jb     0x42e3c0
  42e3bb:	call   0x403f68
  42e3c0:	movzx  edx,BYTE PTR [esi+eax*1]
  42e3c4:	mov    eax,ds:0x41be90
  42e3c9:	call   0x41b19c
  42e3ce:	push   DWORD PTR [ebp-0x24]
  42e3d1:	push   0x42e654
  42e3d6:	lea    ecx,[ebp-0x28]
  42e3d9:	mov    eax,0x6
  42e3de:	test   esi,esi
  42e3e0:	je     0x42e3e7
  42e3e2:	cmp    eax,DWORD PTR [esi-0x4]
  42e3e5:	jb     0x42e3ec
  42e3e7:	call   0x403f68
  42e3ec:	movzx  edx,BYTE PTR [esi+eax*1]
  42e3f0:	mov    eax,ds:0x41be90
  42e3f5:	call   0x41b19c
  42e3fa:	push   DWORD PTR [ebp-0x28]
  42e3fd:	push   0x42e654
  42e402:	lea    ecx,[ebp-0x2c]
  42e405:	mov    eax,0x7
  42e40a:	test   esi,esi
  42e40c:	je     0x42e413
  42e40e:	cmp    eax,DWORD PTR [esi-0x4]
  42e411:	jb     0x42e418
  42e413:	call   0x403f68
  42e418:	movzx  edx,BYTE PTR [esi+eax*1]
  42e41c:	mov    eax,ds:0x41be90
  42e421:	call   0x41b19c
  42e426:	push   DWORD PTR [ebp-0x2c]
  42e429:	mov    eax,DWORD PTR [ebp-0x8]
  42e42c:	mov    edx,0x7
  42e431:	call   0x40531c
  42e436:	jmp    0x42e565
  42e43b:	mov    eax,0x4
  42e440:	test   esi,esi
  42e442:	je     0x42e449
  42e444:	cmp    eax,DWORD PTR [esi-0x4]
  42e447:	jb     0x42e44e
  42e449:	call   0x403f68
  42e44e:	movzx  edi,BYTE PTR [esi+eax*1]
  42e452:	add    edi,0x4
  42e455:	jno    0x42e45c
  42e457:	call   0x403f70
  42e45c:	mov    eax,esi
  42e45e:	call   0x4061f4
  42e463:	mov    edx,edi
  42e465:	add    edx,0x5
  42e468:	jno    0x42e46f
  42e46a:	call   0x403f70
  42e46f:	cmp    eax,edx
  42e471:	jl     0x42e610
  42e477:	mov    eax,0x4
  42e47c:	test   esi,esi
  42e47e:	je     0x42e485
  42e480:	cmp    eax,DWORD PTR [esi-0x4]
  42e483:	jb     0x42e48a
  42e485:	call   0x403f68
  42e48a:	movzx  eax,BYTE PTR [esi+eax*1]
  42e48e:	push   eax
  42e48f:	lea    eax,[ebp-0x4]
  42e492:	mov    ecx,0x1
  42e497:	mov    edx,DWORD PTR ds:0x40769c
  42e49d:	call   0x4063b0
  42e4a2:	add    esp,0x4
  42e4a5:	push   0x0
  42e4a7:	mov    eax,0x4
  42e4ac:	test   esi,esi
  42e4ae:	je     0x42e4b5
  42e4b0:	cmp    eax,DWORD PTR [esi-0x4]
  42e4b3:	jb     0x42e4ba
  42e4b5:	call   0x403f68
  42e4ba:	movzx  eax,BYTE PTR [esi+eax*1]
  42e4be:	push   eax
  42e4bf:	lea    ecx,[ebp-0x4]
  42e4c2:	mov    edx,0x5
  42e4c7:	mov    eax,esi
  42e4c9:	call   0x41c6f0
  42e4ce:	lea    eax,[ebp-0x30]
  42e4d1:	push   eax
  42e4d2:	mov    ecx,0x7fffffff
  42e4d7:	xor    edx,edx
  42e4d9:	mov    eax,DWORD PTR [ebp-0x4]
  42e4dc:	call   0x41d7a4
  42e4e1:	mov    edx,DWORD PTR [ebp-0x30]
  42e4e4:	mov    eax,DWORD PTR [ebp-0x8]
  42e4e7:	call   0x404fdc
  42e4ec:	jmp    0x42e565
  42e4ee:	mov    edi,0x14
  42e4f3:	push   0x10
  42e4f5:	lea    eax,[ebp-0x4]
  42e4f8:	mov    ecx,0x1
  42e4fd:	mov    edx,DWORD PTR ds:0x40769c
  42e503:	call   0x4063b0
  42e508:	add    esp,0x4
  42e50b:	push   0x0
  42e50d:	push   0x10
  42e50f:	lea    ecx,[ebp-0x4]
  42e512:	mov    edx,0x5
  42e517:	mov    eax,esi
  42e519:	call   0x41c6f0
  42e51e:	lea    ecx,[ebp-0x1c]
  42e521:	xor    edx,edx
  42e523:	mov    eax,DWORD PTR [ebp-0x4]
  42e526:	call   0x41d710
  42e52b:	mov    DWORD PTR [ebp-0xc],0x8
  42e532:	lea    ebx,[ebp-0x1c]
  42e535:	mov    eax,ds:0x46de0c
  42e53a:	mov    eax,DWORD PTR [eax]
  42e53c:	movzx  edx,WORD PTR [ebx]
  42e53f:	mov    ecx,DWORD PTR [eax]
  42e541:	call   DWORD PTR [ecx+0x50]
  42e544:	mov    WORD PTR [ebx],ax
  42e547:	add    ebx,0x2
  42e54a:	dec    DWORD PTR [ebp-0xc]
  42e54d:	jne    0x42e535
  42e54f:	lea    edx,[ebp-0x34]
  42e552:	lea    eax,[ebp-0x1c]
  42e555:	call   0x41cab4
  42e55a:	mov    edx,DWORD PTR [ebp-0x34]
  42e55d:	mov    eax,DWORD PTR [ebp-0x8]
  42e560:	call   0x404fdc
  42e565:	test   esi,esi
  42e567:	je     0x42e56e
  42e569:	cmp    edi,DWORD PTR [esi-0x4]
  42e56c:	jb     0x42e573
  42e56e:	call   0x403f68
  42e573:	movzx  eax,BYTE PTR [esi+edi*1]
  42e577:	mov    edx,0x100
  42e57c:	mul    edx
  42e57e:	jno    0x42e585
  42e580:	call   0x403f70
  42e585:	mov    edx,edi
  42e587:	add    edx,0x1
  42e58a:	jno    0x42e591
  42e58c:	call   0x403f70
  42e591:	test   esi,esi
  42e593:	je     0x42e59a
  42e595:	cmp    edx,DWORD PTR [esi-0x4]
  42e598:	jb     0x42e59f
  42e59a:	call   0x403f68
  42e59f:	movzx  edx,BYTE PTR [esi+edx*1]
  42e5a3:	add    eax,edx
  42e5a5:	jno    0x42e5ac
  42e5a7:	call   0x403f70
  42e5ac:	cmp    eax,0xffff
  42e5b1:	jbe    0x42e5b8
  42e5b3:	call   0x403f68
  42e5b8:	movzx  eax,ax
  42e5bb:	mov    edx,DWORD PTR [ebp+0xc]
  42e5be:	mov    DWORD PTR [edx],eax
  42e5c0:	add    edi,0x2
  42e5c3:	jno    0x42e5ca
  42e5c5:	call   0x403f70
  42e5ca:	mov    eax,esi
  42e5cc:	call   0x4061f4
  42e5d1:	sub    eax,edi
  42e5d3:	jno    0x42e5da
  42e5d5:	call   0x403f70
  42e5da:	push   eax
  42e5db:	mov    eax,DWORD PTR [ebp+0x8]
  42e5de:	mov    ecx,0x1
  42e5e3:	mov    edx,DWORD PTR ds:0x40769c
  42e5e9:	call   0x4063b0
  42e5ee:	add    esp,0x4
  42e5f1:	push   0x0
  42e5f3:	mov    eax,esi
  42e5f5:	call   0x4061f4
  42e5fa:	sub    eax,edi
  42e5fc:	jno    0x42e603
  42e5fe:	call   0x403f70
  42e603:	push   eax
  42e604:	mov    ecx,DWORD PTR [ebp+0x8]
  42e607:	mov    edx,edi
  42e609:	mov    eax,esi
  42e60b:	call   0x41c6f0
  42e610:	xor    eax,eax
  42e612:	pop    edx
  42e613:	pop    ecx
  42e614:	pop    ecx
  42e615:	mov    DWORD PTR fs:[eax],edx
  42e618:	push   0x42e640
  42e61d:	lea    eax,[ebp-0x34]
  42e620:	mov    edx,0x6
  42e625:	call   0x404fac
  42e62a:	lea    eax,[ebp-0x4]
  42e62d:	mov    edx,DWORD PTR ds:0x40769c
  42e633:	call   0x4063bc
  42e638:	ret    
  42e639:	jmp    0x40481c
  42e63e:	jmp    0x42e61d
  42e640:	pop    edi
  42e641:	pop    esi
  42e642:	pop    ebx
  42e643:	mov    esp,ebp
  42e645:	pop    ebp
  42e646:	ret    0x8
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    bh,bh
  42e64d:	(bad)  
  42e64e:	(bad)  
  42e64f:	inc    DWORD PTR [ecx]
  42e651:	add    BYTE PTR [eax],al
  42e653:	add    BYTE PTR [esi],ch
  42e655:	add    BYTE PTR [eax],al
  42e657:	add    BYTE PTR [ebp-0x75],dl
  42e65a:	in     al,dx
  42e65b:	push   0x0
  42e65d:	push   0x0
  42e65f:	push   0x0
  42e661:	push   0x0
  42e663:	push   0x0
  42e665:	push   0x0
  42e667:	push   0x0
  42e669:	push   0x0
  42e66b:	push   ebx
  42e66c:	mov    ebx,ecx
  42e66e:	mov    DWORD PTR [ebp-0x4],edx
  42e671:	xor    eax,eax
  42e673:	push   ebp
  42e674:	push   0x42e9b6
  42e679:	push   DWORD PTR fs:[eax]
  42e67c:	mov    DWORD PTR fs:[eax],esp
  42e67f:	push   0x400
  42e684:	mov    eax,DWORD PTR [ebp+0x8]
  42e687:	mov    ecx,0x1
  42e68c:	mov    edx,DWORD PTR ds:0x40769c
  42e692:	call   0x4063b0
  42e697:	add    esp,0x4
  42e69a:	xor    eax,eax
  42e69c:	mov    edx,DWORD PTR [ebp+0x8]
  42e69f:	mov    edx,DWORD PTR [edx]
  42e6a1:	test   edx,edx
  42e6a3:	je     0x42e6aa
  42e6a5:	cmp    eax,DWORD PTR [edx-0x4]
  42e6a8:	jb     0x42e6af
  42e6aa:	call   0x403f68
  42e6af:	mov    BYTE PTR [edx+eax*1],0x0
  42e6b3:	mov    eax,0x1
  42e6b8:	mov    edx,DWORD PTR [ebp+0x8]
  42e6bb:	mov    edx,DWORD PTR [edx]
  42e6bd:	test   edx,edx
  42e6bf:	je     0x42e6c6
  42e6c1:	cmp    eax,DWORD PTR [edx-0x4]
  42e6c4:	jb     0x42e6cb
  42e6c6:	call   0x403f68
  42e6cb:	mov    BYTE PTR [edx+eax*1],0x0
  42e6cf:	mov    eax,0x2
  42e6d4:	mov    edx,DWORD PTR [ebp+0x8]
  42e6d7:	mov    edx,DWORD PTR [edx]
  42e6d9:	test   edx,edx
  42e6db:	je     0x42e6e2
  42e6dd:	cmp    eax,DWORD PTR [edx-0x4]
  42e6e0:	jb     0x42e6e7
  42e6e2:	call   0x403f68
  42e6e7:	mov    BYTE PTR [edx+eax*1],0x0
  42e6eb:	lea    edx,[ebp-0x10]
  42e6ee:	mov    eax,ebx
  42e6f0:	call   0x41cb48
  42e6f5:	mov    eax,DWORD PTR [ebp-0x10]
  42e6f8:	call   0x405248
  42e6fd:	test   eax,eax
  42e6ff:	jle    0x42e7b5
  42e705:	mov    eax,0x3
  42e70a:	mov    edx,DWORD PTR [ebp+0x8]
  42e70d:	mov    edx,DWORD PTR [edx]
  42e70f:	test   edx,edx
  42e711:	je     0x42e718
  42e713:	cmp    eax,DWORD PTR [edx-0x4]
  42e716:	jb     0x42e71d
  42e718:	call   0x403f68
  42e71d:	mov    BYTE PTR [edx+eax*1],0x4
  42e721:	mov    eax,0x4
  42e726:	mov    edx,DWORD PTR [ebp+0x8]
  42e729:	mov    edx,DWORD PTR [edx]
  42e72b:	test   edx,edx
  42e72d:	je     0x42e734
  42e72f:	cmp    eax,DWORD PTR [edx-0x4]
  42e732:	jb     0x42e739
  42e734:	call   0x403f68
  42e739:	mov    BYTE PTR [edx+eax*1],0x10
  42e73d:	mov    DWORD PTR [ebp-0x8],0x5
  42e744:	mov    edx,ebx
  42e746:	mov    eax,ds:0x42ad10
  42e74b:	call   0x42b1f8
  42e750:	mov    DWORD PTR [ebp-0xc],eax
  42e753:	xor    eax,eax
  42e755:	push   ebp
  42e756:	push   0x42e79e
  42e75b:	push   DWORD PTR fs:[eax]
  42e75e:	mov    DWORD PTR fs:[eax],esp
  42e761:	cmp    DWORD PTR [ebp-0xc],0x0
  42e765:	je     0x42e783
  42e767:	push   0x4
  42e769:	push   0x10
  42e76b:	lea    edx,[ebp-0x14]
  42e76e:	mov    eax,DWORD PTR [ebp-0xc]
  42e771:	call   0x42ae70
  42e776:	mov    eax,DWORD PTR [ebp-0x14]
  42e779:	mov    ecx,DWORD PTR [ebp+0x8]
  42e77c:	xor    edx,edx
  42e77e:	call   0x41c6f0
  42e783:	xor    eax,eax
  42e785:	pop    edx
  42e786:	pop    ecx
  42e787:	pop    ecx
  42e788:	mov    DWORD PTR fs:[eax],edx
  42e78b:	push   0x42e7a5
  42e790:	lea    edx,[ebp-0xc]
  42e793:	mov    eax,ds:0x41be90
  42e798:	call   0x41b14c
  42e79d:	ret    
  42e79e:	jmp    0x40481c
  42e7a3:	jmp    0x42e790
  42e7a5:	add    DWORD PTR [ebp-0x8],0x10
  42e7a9:	jno    0x42e7b0
  42e7ab:	call   0x403f70
  42e7b0:	jmp    0x42e902
  42e7b5:	mov    eax,ds:0x46de0c
  42e7ba:	mov    eax,DWORD PTR [eax]
  42e7bc:	mov    edx,ebx
  42e7be:	call   0x4236e8
  42e7c3:	test   al,al
  42e7c5:	je     0x42e870
  42e7cb:	mov    eax,0x3
  42e7d0:	mov    edx,DWORD PTR [ebp+0x8]
  42e7d3:	mov    edx,DWORD PTR [edx]
  42e7d5:	test   edx,edx
  42e7d7:	je     0x42e7de
  42e7d9:	cmp    eax,DWORD PTR [edx-0x4]
  42e7dc:	jb     0x42e7e3
  42e7de:	call   0x403f68
  42e7e3:	mov    BYTE PTR [edx+eax*1],0x1
  42e7e7:	mov    eax,0x4
  42e7ec:	mov    edx,DWORD PTR [ebp+0x8]
  42e7ef:	mov    edx,DWORD PTR [edx]
  42e7f1:	test   edx,edx
  42e7f3:	je     0x42e7fa
  42e7f5:	cmp    eax,DWORD PTR [edx-0x4]
  42e7f8:	jb     0x42e7ff
  42e7fa:	call   0x403f68
  42e7ff:	mov    BYTE PTR [edx+eax*1],0x4
  42e803:	mov    edx,ebx
  42e805:	mov    eax,ds:0x42ad10
  42e80a:	call   0x42b1f8
  42e80f:	mov    DWORD PTR [ebp-0xc],eax
  42e812:	xor    eax,eax
  42e814:	push   ebp
  42e815:	push   0x42e85d
  42e81a:	push   DWORD PTR fs:[eax]
  42e81d:	mov    DWORD PTR fs:[eax],esp
  42e820:	cmp    DWORD PTR [ebp-0xc],0x0
  42e824:	je     0x42e842
  42e826:	push   0x4
  42e828:	push   0x4
  42e82a:	lea    edx,[ebp-0x18]
  42e82d:	mov    eax,DWORD PTR [ebp-0xc]
  42e830:	call   0x42ae70
  42e835:	mov    eax,DWORD PTR [ebp-0x18]
  42e838:	mov    ecx,DWORD PTR [ebp+0x8]
  42e83b:	xor    edx,edx
  42e83d:	call   0x41c6f0
  42e842:	xor    eax,eax
  42e844:	pop    edx
  42e845:	pop    ecx
  42e846:	pop    ecx
  42e847:	mov    DWORD PTR fs:[eax],edx
  42e84a:	push   0x42e864
  42e84f:	lea    edx,[ebp-0xc]
  42e852:	mov    eax,ds:0x41be90
  42e857:	call   0x41b14c
  42e85c:	ret    
  42e85d:	jmp    0x40481c
  42e862:	jmp    0x42e84f
  42e864:	mov    DWORD PTR [ebp-0x8],0x8
  42e86b:	jmp    0x42e902
  42e870:	mov    eax,0x3
  42e875:	mov    edx,DWORD PTR [ebp+0x8]
  42e878:	mov    edx,DWORD PTR [edx]
  42e87a:	test   edx,edx
  42e87c:	je     0x42e883
  42e87e:	cmp    eax,DWORD PTR [edx-0x4]
  42e881:	jb     0x42e888
  42e883:	call   0x403f68
  42e888:	mov    BYTE PTR [edx+eax*1],0x3
  42e88c:	mov    eax,ebx
  42e88e:	call   0x405248
  42e893:	cmp    eax,0xff
  42e898:	jbe    0x42e89f
  42e89a:	call   0x403f68
  42e89f:	mov    edx,0x4
  42e8a4:	mov    ecx,DWORD PTR [ebp+0x8]
  42e8a7:	mov    ecx,DWORD PTR [ecx]
  42e8a9:	test   ecx,ecx
  42e8ab:	je     0x42e8b2
  42e8ad:	cmp    edx,DWORD PTR [ecx-0x4]
  42e8b0:	jb     0x42e8b7
  42e8b2:	call   0x403f68
  42e8b7:	mov    BYTE PTR [ecx+edx*1],al
  42e8ba:	mov    DWORD PTR [ebp-0x8],0x5
  42e8c1:	mov    eax,ebx
  42e8c3:	call   0x405248
  42e8c8:	test   eax,eax
  42e8ca:	jle    0x42e8f1
  42e8cc:	mov    eax,DWORD PTR [ebp-0x8]
  42e8cf:	push   eax
  42e8d0:	mov    eax,ebx
  42e8d2:	call   0x405248
  42e8d7:	push   eax
  42e8d8:	lea    ecx,[ebp-0x1c]
  42e8db:	mov    dl,0x1
  42e8dd:	mov    eax,ebx
  42e8df:	call   0x41d2bc
  42e8e4:	mov    eax,DWORD PTR [ebp-0x1c]
  42e8e7:	mov    ecx,DWORD PTR [ebp+0x8]
  42e8ea:	xor    edx,edx
  42e8ec:	call   0x41c6f0
  42e8f1:	mov    eax,ebx
  42e8f3:	call   0x405248
  42e8f8:	add    DWORD PTR [ebp-0x8],eax
  42e8fb:	jno    0x42e902
  42e8fd:	call   0x403f70
  42e902:	mov    ebx,DWORD PTR [ebp+0xc]
  42e905:	cmp    ebx,0xffff
  42e90b:	jbe    0x42e912
  42e90d:	call   0x403f68
  42e912:	mov    eax,ds:0x46de0c
  42e917:	mov    eax,DWORD PTR [eax]
  42e919:	mov    edx,ebx
  42e91b:	mov    ecx,DWORD PTR [eax]
  42e91d:	call   DWORD PTR [ecx+0x38]
  42e920:	mov    ebx,eax
  42e922:	mov    eax,DWORD PTR [ebp-0x8]
  42e925:	push   eax
  42e926:	push   0x2
  42e928:	lea    edx,[ebp-0x20]
  42e92b:	mov    eax,ebx
  42e92d:	call   0x41d3e0
  42e932:	mov    eax,DWORD PTR [ebp-0x20]
  42e935:	mov    ecx,DWORD PTR [ebp+0x8]
  42e938:	xor    edx,edx
  42e93a:	call   0x41c6f0
  42e93f:	add    DWORD PTR [ebp-0x8],0x2
  42e943:	jno    0x42e94a
  42e945:	call   0x403f70
  42e94a:	mov    eax,DWORD PTR [ebp-0x4]
  42e94d:	call   0x4061f4
  42e952:	add    eax,DWORD PTR [ebp-0x8]
  42e955:	jno    0x42e95c
  42e957:	call   0x403f70
  42e95c:	push   eax
  42e95d:	mov    eax,DWORD PTR [ebp+0x8]
  42e960:	mov    ecx,0x1
  42e965:	mov    edx,DWORD PTR ds:0x40769c
  42e96b:	call   0x4063b0
  42e970:	add    esp,0x4
  42e973:	mov    eax,DWORD PTR [ebp-0x8]
  42e976:	push   eax
  42e977:	mov    eax,DWORD PTR [ebp-0x4]
  42e97a:	call   0x4061f4
  42e97f:	push   eax
  42e980:	mov    ecx,DWORD PTR [ebp+0x8]
  42e983:	xor    edx,edx
  42e985:	mov    eax,DWORD PTR [ebp-0x4]
  42e988:	call   0x41c6f0
  42e98d:	xor    eax,eax
  42e98f:	pop    edx
  42e990:	pop    ecx
  42e991:	pop    ecx
  42e992:	mov    DWORD PTR fs:[eax],edx
  42e995:	push   0x42e9bd
  42e99a:	lea    eax,[ebp-0x20]
  42e99d:	mov    edx,DWORD PTR ds:0x40769c
  42e9a3:	mov    ecx,0x4
  42e9a8:	call   0x405b50
  42e9ad:	lea    eax,[ebp-0x10]
  42e9b0:	call   0x404f88
  42e9b5:	ret    
  42e9b6:	jmp    0x40481c
  42e9bb:	jmp    0x42e99a
  42e9bd:	pop    ebx
  42e9be:	mov    esp,ebp
  42e9c0:	pop    ebp
  42e9c1:	ret    0x8
  42e9c4:	push   ebp
  42e9c5:	mov    ebp,esp
  42e9c7:	push   0x0
  42e9c9:	push   0x0
  42e9cb:	push   0x0
  42e9cd:	push   0x0
  42e9cf:	push   ebx
  42e9d0:	push   esi
  42e9d1:	push   edi
  42e9d2:	mov    DWORD PTR [ebp-0x8],ecx
  42e9d5:	mov    ebx,edx
  42e9d7:	mov    esi,eax
  42e9d9:	mov    edi,DWORD PTR [ebp+0x14]
  42e9dc:	xor    eax,eax
  42e9de:	push   ebp
  42e9df:	push   0x42eb00
  42e9e4:	push   DWORD PTR fs:[eax]
  42e9e7:	mov    DWORD PTR fs:[eax],esp
  42e9ea:	movzx  eax,BYTE PTR [esi+0xa1]
  42e9f1:	dec    eax
  42e9f2:	sub    al,0x2
  42e9f4:	jae    0x42ea17
  42e9f6:	lea    edx,[ebp-0xc]
  42e9f9:	mov    eax,ds:0x46de84
  42e9fe:	call   0x406f48
  42ea03:	mov    ecx,DWORD PTR [ebp-0xc]
  42ea06:	mov    dl,0x1
  42ea08:	mov    eax,ds:0x42b8ac
  42ea0d:	call   0x41bdbc
  42ea12:	call   0x4048fc
  42ea17:	mov    eax,DWORD PTR [ebp-0x8]
  42ea1a:	mov    eax,DWORD PTR [eax]
  42ea1c:	call   0x4061f4
  42ea21:	add    eax,0xc8
  42ea26:	jno    0x42ea2d
  42ea28:	call   0x403f70
  42ea2d:	push   eax
  42ea2e:	lea    eax,[ebp-0x4]
  42ea31:	mov    ecx,0x1
  42ea36:	mov    edx,DWORD PTR ds:0x40769c
  42ea3c:	call   0x4063b0
  42ea41:	add    esp,0x4
  42ea44:	mov    edx,DWORD PTR [ebp+0x8]
  42ea47:	mov    eax,ebx
  42ea49:	call   0x42559c
  42ea4e:	test   al,al
  42ea50:	jne    0x42ea64
  42ea52:	xor    ebx,ebx
  42ea54:	mov    eax,edi
  42ea56:	call   0x404f88
  42ea5b:	mov    eax,DWORD PTR [ebp+0x10]
  42ea5e:	xor    edx,edx
  42ea60:	mov    DWORD PTR [eax],edx
  42ea62:	jmp    0x42eace
  42ea64:	mov    eax,DWORD PTR [ebp+0x10]
  42ea67:	push   eax
  42ea68:	push   0x0
  42ea6a:	mov    ecx,edi
  42ea6c:	lea    edx,[ebp-0x4]
  42ea6f:	mov    eax,ebx
  42ea71:	call   0x4252f8
  42ea76:	mov    ebx,eax
  42ea78:	push   ebx
  42ea79:	lea    eax,[ebp-0x4]
  42ea7c:	mov    ecx,0x1
  42ea81:	mov    edx,DWORD PTR ds:0x40769c
  42ea87:	call   0x4063b0
  42ea8c:	add    esp,0x4
  42ea8f:	mov    eax,DWORD PTR [ebp+0x10]
  42ea92:	push   eax
  42ea93:	lea    eax,[ebp-0x10]
  42ea96:	push   eax
  42ea97:	mov    ecx,edi
  42ea99:	mov    edx,DWORD PTR [ebp-0x4]
  42ea9c:	mov    eax,esi
  42ea9e:	call   0x42e318
  42eaa3:	mov    edx,DWORD PTR [ebp-0x10]
  42eaa6:	lea    eax,[ebp-0x4]
  42eaa9:	mov    ecx,DWORD PTR ds:0x40769c
  42eaaf:	call   0x4063f8
  42eab4:	mov    eax,DWORD PTR [ebp-0x4]
  42eab7:	call   0x4061f4
  42eabc:	mov    ebx,eax
  42eabe:	push   0x0
  42eac0:	push   ebx
  42eac1:	mov    ecx,DWORD PTR [ebp-0x8]
  42eac4:	xor    edx,edx
  42eac6:	mov    eax,DWORD PTR [ebp-0x4]
  42eac9:	call   0x41c6f0
  42eace:	xor    eax,eax
  42ead0:	pop    edx
  42ead1:	pop    ecx
  42ead2:	pop    ecx
  42ead3:	mov    DWORD PTR fs:[eax],edx
  42ead6:	push   0x42eb07
  42eadb:	lea    eax,[ebp-0x10]
  42eade:	mov    edx,DWORD PTR ds:0x40769c
  42eae4:	call   0x4063bc
  42eae9:	lea    eax,[ebp-0xc]
  42eaec:	call   0x404f88
  42eaf1:	lea    eax,[ebp-0x4]
  42eaf4:	mov    edx,DWORD PTR ds:0x40769c
  42eafa:	call   0x4063bc
  42eaff:	ret    
  42eb00:	jmp    0x40481c
  42eb05:	jmp    0x42eadb
  42eb07:	mov    eax,ebx
  42eb09:	pop    edi
  42eb0a:	pop    esi
  42eb0b:	pop    ebx
  42eb0c:	mov    esp,ebp
  42eb0e:	pop    ebp
  42eb0f:	ret    0x10
  42eb12:	mov    eax,eax
  42eb14:	push   ebp
  42eb15:	mov    ebp,esp
  42eb17:	push   0x0
  42eb19:	push   0x0
  42eb1b:	push   0x0
  42eb1d:	push   ebx
  42eb1e:	push   esi
  42eb1f:	mov    DWORD PTR [ebp-0x4],ecx
  42eb22:	mov    esi,edx
  42eb24:	mov    ebx,eax
  42eb26:	mov    eax,DWORD PTR [ebp-0x4]
  42eb29:	call   0x405408
  42eb2e:	xor    eax,eax
  42eb30:	push   ebp
  42eb31:	push   0x42ebb8
  42eb36:	push   DWORD PTR fs:[eax]
  42eb39:	mov    DWORD PTR fs:[eax],esp
  42eb3c:	movzx  eax,BYTE PTR [ebx+0xa1]
  42eb43:	dec    eax
  42eb44:	sub    al,0x2
  42eb46:	jae    0x42eb69
  42eb48:	lea    edx,[ebp-0xc]
  42eb4b:	mov    eax,ds:0x46de84
  42eb50:	call   0x406f48
  42eb55:	mov    ecx,DWORD PTR [ebp-0xc]
  42eb58:	mov    dl,0x1
  42eb5a:	mov    eax,ds:0x42b8ac
  42eb5f:	call   0x41bdbc
  42eb64:	call   0x4048fc
  42eb69:	mov    eax,DWORD PTR [ebp+0x10]
  42eb6c:	push   eax
  42eb6d:	lea    eax,[ebp-0x8]
  42eb70:	push   eax
  42eb71:	mov    ecx,DWORD PTR [ebp-0x4]
  42eb74:	mov    edx,DWORD PTR [ebp+0x8]
  42eb77:	mov    eax,ebx
  42eb79:	call   0x42e658
  42eb7e:	push   0xffffffff
  42eb80:	xor    ecx,ecx
  42eb82:	mov    edx,DWORD PTR [ebp-0x8]
  42eb85:	mov    eax,esi
  42eb87:	call   0x4252d4
  42eb8c:	xor    eax,eax
  42eb8e:	pop    edx
  42eb8f:	pop    ecx
  42eb90:	pop    ecx
  42eb91:	mov    DWORD PTR fs:[eax],edx
  42eb94:	push   0x42ebbf
  42eb99:	lea    eax,[ebp-0xc]
  42eb9c:	call   0x404f88
  42eba1:	lea    eax,[ebp-0x8]
  42eba4:	mov    edx,DWORD PTR ds:0x40769c
  42ebaa:	call   0x4063bc
  42ebaf:	lea    eax,[ebp-0x4]
  42ebb2:	call   0x404f88
  42ebb7:	ret    
  42ebb8:	jmp    0x40481c
  42ebbd:	jmp    0x42eb99
  42ebbf:	pop    esi
  42ebc0:	pop    ebx
  42ebc1:	mov    esp,ebp
  42ebc3:	pop    ebp
  42ebc4:	ret    0xc
  42ebc7:	nop
  42ebc8:	push   ebx
  42ebc9:	push   esi
  42ebca:	call   0x404454
  42ebcf:	mov    ebx,edx
  42ebd1:	mov    esi,eax
  42ebd3:	lea    edx,[esi+0xa4]
  42ebd9:	mov    eax,ds:0x41be90
  42ebde:	call   0x41b14c
  42ebe3:	mov    edx,ebx
  42ebe5:	and    dl,0xfc
  42ebe8:	mov    eax,esi
  42ebea:	call   0x424cc4
  42ebef:	test   bl,bl
  42ebf1:	jle    0x42ebfa
  42ebf3:	mov    eax,esi
  42ebf5:	call   0x4043fc
  42ebfa:	pop    esi
  42ebfb:	pop    ebx
  42ebfc:	ret    
  42ebfd:	lea    eax,[eax+0x0]
  42ec00:	dec    esp
  42ec01:	in     al,dx
  42ec02:	inc    edx
	...
  42ec0b:	add    BYTE PTR [eax],ch
  42ec0d:	in     eax,dx
  42ec0e:	inc    edx
  42ec0f:	add    BYTE PTR [ebp+ebp*8+0x42],dl
	...
  42ec1f:	add    BYTE PTR [edx],bh
  42ec21:	in     eax,dx
  42ec22:	inc    edx
  42ec23:	add    BYTE PTR [eax],cl
  42ec25:	add    DWORD PTR [eax],eax
  42ec27:	add    BYTE PTR [eax],al
  42ec29:	jl     0x42ec6d
  42ec2b:	add    BYTE PTR [eax],bl
  42ec2d:	test   eax,0x42dc0041
  42ec32:	inc    eax
  42ec33:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42ec39:	inc    edx
  42ec3a:	inc    eax
  42ec3b:	add    al,bl
  42ec3d:	inc    edx
  42ec3e:	inc    eax
  42ec3f:	add    BYTE PTR [eax],bh
  42ec41:	inc    eax
  42ec42:	inc    eax
  42ec43:	add    BYTE PTR [eax+eax*2+0x40],dl
  42ec47:	add    BYTE PTR [edi+ebp*8],bh
  42ec4a:	inc    edx
  42ec4b:	add    BYTE PTR [eax+0x41],ch
  42ec4e:	inc    ecx
  42ec4f:	add    BYTE PTR [eax-0x5b],dh
  42ec52:	inc    ecx
  42ec53:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42ec5a:	inc    ecx
  42ec5b:	add    BYTE PTR [eax+0x580042f3],cl
  42ec61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec62:	inc    ecx
  42ec63:	add    BYTE PTR [eax-0x59],dl
  42ec66:	inc    ecx
  42ec67:	add    BYTE PTR [eax],dh
  42ec69:	test   eax,0xa6680041
  42ec6e:	inc    ecx
  42ec6f:	add    BYTE PTR [eax-0x5a],ah
  42ec72:	inc    ecx
  42ec73:	add    BYTE PTR [eax],bh
  42ec75:	test   eax,0x46bc0041
  42ec7a:	inc    edx
  42ec7b:	add    BYTE PTR [eax-0x3bffbd0d],ch
  42ec81:	dec    ebp
  42ec82:	inc    edx
  42ec83:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42ec87:	add    ah,cl
  42ec89:	dec    esi
  42ec8a:	inc    edx
  42ec8b:	add    ah,dh
  42ec8d:	out    dx,eax
  42ec8e:	inc    edx
  42ec8f:	add    BYTE PTR [eax-0x6f],bl
  42ec92:	inc    edx
  42ec93:	add    al,dh
  42ec95:	lock inc edx
  42ec97:	add    ah,dl
  42ec99:	mov    eax,DWORD PTR [edx+0x0]
  42ec9c:	in     al,dx
  42ec9d:	mov    eax,DWORD PTR [edx+0x0]
  42eca0:	pushf  
  42eca1:	jg     0x42ece5
  42eca3:	add    BYTE PTR [eax],bh
  42eca5:	xor    eax,DWORD PTR [eax+0x0]
  42eca8:	add    al,0x7f
  42ecaa:	inc    edx
  42ecab:	add    BYTE PTR [eax],dl
  42ecad:	out    dx,eax
  42ecae:	inc    edx
  42ecaf:	add    BYTE PTR [eax],bh
  42ecb1:	xor    eax,DWORD PTR [eax+0x0]
  42ecb4:	cmp    BYTE PTR [ebx],dh
  42ecb6:	inc    eax
  42ecb7:	add    BYTE PTR [esi+ebp*8+0x42],ah
  42ecbb:	add    BYTE PTR [edi+edx*4],ah
  42ecbe:	inc    edx
  42ecbf:	add    BYTE PTR [eax-0x73ffbd6b],dl
  42ecc5:	xchg   edi,eax
  42ecc6:	inc    edx
  42ecc7:	add    BYTE PTR [eax-0x2fffbd10],cl
  42eccd:	mov    eax,DWORD PTR [edx+0x0]
  42ecd0:	add    DWORD PTR fs:[edx+0x0],0x428b6c
  42ecd8:	clc    
  42ecd9:	add    BYTE PTR [edx+0x0],0x20
  42ecdd:	mov    BYTE PTR [edx+0x0],al
  42ece0:	in     al,0xf1
  42ece2:	inc    edx
  42ece3:	add    BYTE PTR [eax+0x30004290],al
  42ece9:	xchg   ebx,eax
  42ecea:	inc    edx
  42eceb:	add    BYTE PTR [eax-0x76],ch
  42ecee:	inc    edx
  42ecef:	add    BYTE PTR [eax-0x7b],dl
  42ecf2:	inc    edx
  42ecf3:	add    BYTE PTR [eax+0x7c004287],bl
  42ecf9:	mov    WORD PTR [edx+0x0],es
  42ecfc:	dec    eax
  42ecfd:	add    DWORD PTR [edx+0x0],0x428134
  42ed04:	test   BYTE PTR [eax-0x7f33ffbe],al
  42ed0a:	inc    edx
  42ed0b:	add    BYTE PTR [eax-0x80],dl
  42ed0e:	inc    edx
  42ed0f:	add    BYTE PTR [eax-0x6bffbd12],al
  42ed15:	out    dx,eax
  42ed16:	inc    edx
  42ed17:	add    BYTE PTR [edi+ebp*8-0x102bffbe],dh
  42ed1e:	inc    edx
  42ed1f:	add    BYTE PTR [eax],dl
  42ed21:	repz inc edx
  42ed23:	add    BYTE PTR [eax],ah
  42ed25:	repnz inc edx
  42ed27:	add    BYTE PTR [esi],cl
  42ed29:	add    BYTE PTR [eax],al
  42ed2b:	add    BYTE PTR [eax],al
  42ed2d:	add    BYTE PTR [ecx],al
  42ed2f:	add    BYTE PTR [eax],al
  42ed31:	add    BYTE PTR [eax+edx*1+0xd40040],al
  42ed38:	add    BYTE PTR [eax],al
  42ed3a:	adc    dl,BYTE PTR [ecx+ecx*2+0x64]
  42ed3e:	dec    ecx
  42ed3f:	dec    edi
  42ed40:	dec    eax
  42ed41:	popa   
  42ed42:	outs   dx,BYTE PTR ds:[esi]
  42ed43:	fs ins BYTE PTR es:[edi],dx
  42ed45:	gs jb  0x42ed9b
  42ed48:	outs   dx,DWORD PTR ds:[esi]
  42ed49:	arpl   WORD PTR [ebx+0x65],bp
  42ed4c:	je     0x42ecdb
  42ed4e:	inc    eax
  42ed4f:	add    BYTE PTR [ebp+ebp*8+0x42],dl
  42ed53:	add    BYTE PTR [edi],al
  42ed55:	adc    dl,BYTE PTR [ecx+ecx*2+0x64]
  42ed59:	dec    ecx
  42ed5a:	dec    edi
  42ed5b:	dec    eax
  42ed5c:	popa   
  42ed5d:	outs   dx,BYTE PTR ds:[esi]
  42ed5e:	fs ins BYTE PTR es:[edi],dx
  42ed60:	gs jb  0x42edb6
  42ed63:	outs   dx,DWORD PTR ds:[esi]
  42ed64:	arpl   WORD PTR [ebx+0x65],bp
  42ed67:	je     0x42edb5
  42ed69:	in     al,dx
  42ed6a:	inc    edx
  42ed6b:	add    BYTE PTR [eax],bh
  42ed6d:	jge    0x42edb1
  42ed6f:	add    BYTE PTR [ecx],dl
  42ed71:	add    BYTE PTR [ecx],dl
  42ed73:	dec    ecx
  42ed74:	fs dec ecx
  42ed76:	dec    edi
  42ed77:	dec    eax
  42ed78:	popa   
  42ed79:	outs   dx,BYTE PTR ds:[esi]
  42ed7a:	fs ins BYTE PTR es:[edi],dx
  42ed7c:	gs jb  0x42edd2
  42ed7f:	outs   dx,DWORD PTR ds:[esi]
  42ed80:	arpl   WORD PTR [ebx+0x65],bp
  42ed83:	je     0x42ed8b
  42ed85:	add    BYTE PTR [eax+edx*1+0xd40040],al
  42ed8c:	add    bh,bh
  42ed8e:	aam    0x0
  42ed90:	add    bh,bh
  42ed92:	add    DWORD PTR [eax],eax
  42ed94:	add    BYTE PTR [eax],al
  42ed96:	add    BYTE PTR [eax],al
  42ed98:	add    BYTE PTR [eax-0x80000000],al
  42ed9e:	or     eax,DWORD PTR [eax]
  42eda0:	pop    es
  42eda1:	inc    edx
  42eda2:	outs   dx,DWORD PTR ds:[esi]
  42eda3:	jne    0x42ee13
  42eda5:	fs dec ecx
  42eda7:	push   eax
  42eda8:	cmp    al,0x10
  42edaa:	inc    eax
  42edab:	add    al,bl
  42edad:	add    BYTE PTR [eax],al
  42edaf:	(bad)  
  42edb0:	fadd   DWORD PTR [eax]
  42edb2:	add    bh,bh
  42edb4:	add    DWORD PTR [eax],eax
  42edb6:	add    BYTE PTR [eax],al
  42edb8:	add    BYTE PTR [eax],al
  42edba:	add    BYTE PTR [eax+0x0],al
  42edc0:	or     al,0x0
  42edc2:	or     DWORD PTR [edx+0x6f],eax
  42edc5:	jne    0x42ee35
  42edc7:	fs push eax
  42edc9:	outs   dx,DWORD PTR ds:[esi]
  42edca:	jb     0x42ee40
  42edcc:	cmp    al,0x10
  42edce:	inc    eax
  42edcf:	add    ah,ah
  42edd1:	add    BYTE PTR [eax],al
  42edd3:	jmp    esp
  42edd5:	add    BYTE PTR [eax],al
  42edd7:	inc    DWORD PTR [ecx]
  42edd9:	add    BYTE PTR [eax],al
  42eddb:	add    BYTE PTR [eax],al
  42eddd:	add    BYTE PTR [eax],al
  42eddf:	add    BYTE PTR [eax],0x0
  42ede2:	add    BYTE PTR [eax+0x440b000d],al
  42ede8:	gs popaw 
  42edeb:	jne    0x42ee59
  42eded:	je     0x42ee3f
  42edef:	outs   dx,DWORD PTR ds:[esi]
  42edf0:	jb     0x42ee66
  42edf2:	int3   
  42edf3:	lds    eax,FWORD PTR [ecx+0x0]
  42edf6:	add    eax,0x5ff0001
  42edfb:	add    DWORD PTR [eax],eax
  42edfd:	inc    DWORD PTR [ecx]
  42edff:	add    BYTE PTR [eax],al
  42ee01:	add    BYTE PTR [eax],al
  42ee03:	add    BYTE PTR [eax],al
  42ee05:	add    BYTE PTR [eax],0x0
  42ee08:	add    BYTE PTR [eax],al
  42ee0a:	push   cs
  42ee0b:	add    BYTE PTR [ecx],cl
  42ee0d:	dec    ecx
  42ee0e:	push   eax
  42ee0f:	push   esi
  42ee10:	gs jb  0x42ee86
  42ee13:	imul   ebp,DWORD PTR [edi+0x6e],0x4299c4
  42ee1a:	aam    0x0
  42ee1c:	add    dh,bh
  42ee1e:	fadd   DWORD PTR [eax]
  42ee20:	add    dh,bh
  42ee22:	add    DWORD PTR [eax],eax
  42ee24:	add    BYTE PTR [eax],al
  42ee26:	add    BYTE PTR [eax],al
  42ee28:	add    BYTE PTR [eax-0x80000000],al
  42ee2e:	lldt   WORD PTR [eax]
  42ee31:	push   esp
  42ee32:	jb     0x42ee95
  42ee34:	outs   dx,BYTE PTR ds:[esi]
  42ee35:	jae    0x42eea7
  42ee37:	popa   
  42ee38:	jb     0x42ee9f
  42ee3a:	outs   dx,BYTE PTR ds:[esi]
  42ee3b:	je     0x42ee8d
  42ee3d:	jb     0x42eeae
  42ee3f:	js     0x42eeba
  42ee41:	add    BYTE PTR [eax],dl
  42ee43:	inc    eax
  42ee44:	add    BYTE PTR [ecx+eax*1],al
  42ee47:	add    bh,bh
  42ee49:	cmp    bl,dh
  42ee4b:	inc    edx
  42ee4c:	add    BYTE PTR [ecx],al
  42ee4e:	add    BYTE PTR [eax],al
  42ee50:	add    BYTE PTR [eax],al
  42ee52:	add    BYTE PTR [eax],al
  42ee54:	add    BYTE PTR [ecx],0x0
  42ee57:	add    BYTE PTR [eax],al
  42ee59:	adc    BYTE PTR [eax],al
  42ee5b:	or     BYTE PTR [ebp+0x73],dl
  42ee5e:	gs dec esi
  42ee60:	popa   
  42ee61:	ins    BYTE PTR es:[di],dx
  42ee63:	gs push ebx
  42ee65:	mov    ebx,eax
  42ee67:	mov    eax,DWORD PTR [ebx+0xd0]
  42ee6d:	test   eax,eax
  42ee6f:	je     0x42ee76
  42ee71:	mov    edx,DWORD PTR [eax]
  42ee73:	call   DWORD PTR [edx+0x20]
  42ee76:	mov    eax,ebx
  42ee78:	call   0x427e8c
  42ee7d:	pop    ebx
  42ee7e:	ret    
  42ee7f:	nop
  42ee80:	push   ebx
  42ee81:	push   esi
  42ee82:	mov    ebx,eax
  42ee84:	mov    esi,DWORD PTR [ebx+0xd0]
  42ee8a:	mov    eax,ebx
  42ee8c:	mov    edx,DWORD PTR [eax]
  42ee8e:	call   DWORD PTR [edx+0xc8]
  42ee94:	movzx  edx,BYTE PTR [ebx+0x105]
  42ee9b:	mov    eax,esi
  42ee9d:	call   0x4257c0
  42eea2:	xor    ecx,ecx
  42eea4:	mov    edx,0x1
  42eea9:	mov    eax,esi
  42eeab:	call   0x425140
  42eeb0:	mov    eax,ebx
  42eeb2:	mov    edx,DWORD PTR [eax]
  42eeb4:	call   DWORD PTR [edx+0xd0]
  42eeba:	cmp    DWORD PTR [ebx+0xd4],0x0
  42eec1:	je     0x42eed1
  42eec3:	lea    eax,[esi+0x1c]
  42eec6:	mov    edx,DWORD PTR [ebx+0xd4]
  42eecc:	call   0x404fdc
  42eed1:	mov    eax,DWORD PTR [ebx+0xd8]
  42eed7:	mov    DWORD PTR [esi+0x24],eax
  42eeda:	mov    eax,DWORD PTR [ebx+0xe0]
  42eee0:	mov    DWORD PTR [esi+0xc],eax
  42eee3:	mov    eax,DWORD PTR [ebx+0xdc]
  42eee9:	mov    DWORD PTR [esi+0x10],eax
  42eeec:	mov    eax,esi
  42eeee:	call   0x425320
  42eef3:	movzx  edx,BYTE PTR [ebx+0x104]
  42eefa:	mov    eax,ebx
  42eefc:	call   0x42f350
  42ef01:	mov    eax,ebx
  42ef03:	mov    edx,DWORD PTR [eax]
  42ef05:	call   DWORD PTR [edx+0xcc]
  42ef0b:	pop    esi
  42ef0c:	pop    ebx
  42ef0d:	ret    
  42ef0e:	mov    eax,eax
  42ef10:	push   ebx
  42ef11:	mov    ebx,eax
  42ef13:	mov    eax,ebx
  42ef15:	call   0x42f1cc
  42ef1a:	test   al,al
  42ef1c:	je     0x42ef29
  42ef1e:	mov    eax,ebx
  42ef20:	call   0x428bf4
  42ef25:	test   al,al
  42ef27:	jne    0x42ef38
  42ef29:	mov    eax,ebx
  42ef2b:	call   0x429578
  42ef30:	test   al,al
  42ef32:	je     0x42ef38
  42ef34:	xor    eax,eax
  42ef36:	pop    ebx
  42ef37:	ret    
  42ef38:	mov    al,0x1
  42ef3a:	pop    ebx
  42ef3b:	ret    
  42ef3c:	push   ebx
  42ef3d:	push   esi
  42ef3e:	call   0x404454
  42ef43:	mov    ebx,edx
  42ef45:	mov    esi,eax
  42ef47:	mov    eax,DWORD PTR [esi+0x100]
  42ef4d:	test   eax,eax
  42ef4f:	je     0x42ef67
  42ef51:	cmp    DWORD PTR [eax+0x4],0x0
  42ef55:	jne    0x42ef67
  42ef57:	lea    edx,[esi+0x100]
  42ef5d:	mov    eax,ds:0x41be90
  42ef62:	call   0x41b14c
  42ef67:	lea    edx,[esi+0xd0]
  42ef6d:	mov    eax,ds:0x41be90
  42ef72:	call   0x41b14c
  42ef77:	mov    edx,ebx
  42ef79:	and    dl,0xfc
  42ef7c:	mov    eax,esi
  42ef7e:	call   0x427ea8
  42ef83:	test   bl,bl
  42ef85:	jle    0x42ef8e
  42ef87:	mov    eax,esi
  42ef89:	call   0x4043fc
  42ef8e:	pop    esi
  42ef8f:	pop    ebx
  42ef90:	ret    
  42ef91:	lea    eax,[eax+0x0]
  42ef94:	push   ebx
  42ef95:	cmp    WORD PTR [eax+0xea],0x0
  42ef9d:	je     0x42efaf
  42ef9f:	mov    ebx,eax
  42efa1:	mov    edx,eax
  42efa3:	mov    eax,DWORD PTR [ebx+0xec]
  42efa9:	call   DWORD PTR [ebx+0xe8]
  42efaf:	pop    ebx
  42efb0:	ret    
  42efb1:	lea    eax,[eax+0x0]
  42efb4:	push   ebx
  42efb5:	cmp    WORD PTR [eax+0xf2],0x0
  42efbd:	je     0x42efcf
  42efbf:	mov    ebx,eax
  42efc1:	mov    edx,eax
  42efc3:	mov    eax,DWORD PTR [ebx+0xf4]
  42efc9:	call   DWORD PTR [ebx+0xf0]
  42efcf:	pop    ebx
  42efd0:	ret    
  42efd1:	lea    eax,[eax+0x0]
  42efd4:	push   ebx
  42efd5:	cmp    WORD PTR [eax+0xfa],0x0
  42efdd:	je     0x42efef
  42efdf:	mov    ebx,eax
  42efe1:	mov    edx,eax
  42efe3:	mov    eax,DWORD PTR [ebx+0xfc]
  42efe9:	call   DWORD PTR [ebx+0xf8]
  42efef:	pop    ebx
  42eff0:	ret    
  42eff1:	lea    eax,[eax+0x0]
  42eff4:	push   ebp
  42eff5:	mov    ebp,esp
  42eff7:	push   0x0
  42eff9:	push   ebx
  42effa:	push   esi
  42effb:	push   edi
  42effc:	mov    edi,edx
  42effe:	mov    ebx,eax
  42f000:	xor    eax,eax
  42f002:	push   ebp
  42f003:	push   0x42f06c
  42f008:	push   DWORD PTR fs:[eax]
  42f00b:	mov    DWORD PTR fs:[eax],esp
  42f00e:	mov    eax,edi
  42f010:	mov    edx,DWORD PTR [ebx+0x94]
  42f016:	call   0x404fdc
  42f01b:	mov    esi,DWORD PTR [ebx+0xb0]
  42f021:	cmp    esi,DWORD PTR [ebx+0xe4]
  42f027:	je     0x42f056
  42f029:	test   esi,esi
  42f02b:	jle    0x42f056
  42f02d:	push   DWORD PTR [ebx+0x94]
  42f033:	push   0x42f084
  42f038:	lea    ecx,[ebp-0x4]
  42f03b:	mov    edx,esi
  42f03d:	mov    eax,ds:0x41be90
  42f042:	call   0x41b19c
  42f047:	push   DWORD PTR [ebp-0x4]
  42f04a:	mov    eax,edi
  42f04c:	mov    edx,0x3
  42f051:	call   0x40531c
  42f056:	xor    eax,eax
  42f058:	pop    edx
  42f059:	pop    ecx
  42f05a:	pop    ecx
  42f05b:	mov    DWORD PTR fs:[eax],edx
  42f05e:	push   0x42f073
  42f063:	lea    eax,[ebp-0x4]
  42f066:	call   0x404f88
  42f06b:	ret    
  42f06c:	jmp    0x40481c
  42f071:	jmp    0x42f063
  42f073:	pop    edi
  42f074:	pop    esi
  42f075:	pop    ebx
  42f076:	pop    ecx
  42f077:	pop    ebp
  42f078:	ret    
  42f079:	add    BYTE PTR [eax],al
  42f07b:	add    bh,bh
  42f07d:	(bad)  
  42f07e:	(bad)  
  42f07f:	inc    DWORD PTR [ecx]
  42f081:	add    BYTE PTR [eax],al
  42f083:	add    BYTE PTR [edx],bh
  42f085:	add    BYTE PTR [eax],al
  42f087:	add    BYTE PTR [ebx-0x75],dl
  42f08a:	fmul   DWORD PTR [ebx-0x7189173d]
  42f090:	(bad)  
  42f091:	dec    DWORD PTR [ebx+0xd083]
  42f097:	add    BYTE PTR [ebp+0x331675c0],al
  42f09d:	leave  
  42f09e:	mov    dl,0x1
  42f0a0:	mov    eax,ds:0x424fc0
  42f0a5:	call   0x4254c0
  42f0aa:	mov    DWORD PTR [ebx+0xd0],eax
  42f0b0:	jmp    0x42f0b9
  42f0b2:	mov    dl,0x1
  42f0b4:	call   0x4256a0
  42f0b9:	mov    eax,DWORD PTR [ebx+0xd0]
  42f0bf:	mov    edx,DWORD PTR [ebx+0xe0]
  42f0c5:	mov    DWORD PTR [eax+0xc],edx
  42f0c8:	mov    edx,DWORD PTR [ebx+0xdc]
  42f0ce:	mov    DWORD PTR [eax+0x10],edx
  42f0d1:	cmp    DWORD PTR [ebx+0x94],0x0
  42f0d8:	je     0x42f0ed
  42f0da:	cmp    DWORD PTR [ebx+0xb0],0x0
  42f0e1:	jle    0x42f0ed
  42f0e3:	mov    eax,ebx
  42f0e5:	mov    edx,DWORD PTR [eax]
  42f0e7:	call   DWORD PTR [edx+0xc4]
  42f0ed:	pop    ebx
  42f0ee:	ret    
  42f0ef:	nop
  42f0f0:	push   ebp
  42f0f1:	mov    ebp,esp
  42f0f3:	xor    ecx,ecx
  42f0f5:	push   ecx
  42f0f6:	push   ecx
  42f0f7:	push   ecx
  42f0f8:	push   ecx
  42f0f9:	push   ebx
  42f0fa:	push   esi
  42f0fb:	mov    DWORD PTR [ebp-0x4],edx
  42f0fe:	mov    esi,eax
  42f100:	xor    eax,eax
  42f102:	push   ebp
  42f103:	push   0x42f1b1
  42f108:	push   DWORD PTR fs:[eax]
  42f10b:	mov    DWORD PTR fs:[eax],esp
  42f10e:	mov    ecx,DWORD PTR [ebp-0x4]
  42f111:	mov    edx,0x42f1c8
  42f116:	mov    eax,ds:0x41be90
  42f11b:	call   0x41b1b0
  42f120:	mov    ebx,eax
  42f122:	test   ebx,ebx
  42f124:	jle    0x42f196
  42f126:	lea    eax,[ebp-0x8]
  42f129:	push   eax
  42f12a:	mov    ecx,ebx
  42f12c:	sub    ecx,0x1
  42f12f:	jno    0x42f136
  42f131:	call   0x403f70
  42f136:	mov    edx,0x1
  42f13b:	mov    eax,DWORD PTR [ebp-0x4]
  42f13e:	call   0x405480
  42f143:	mov    edx,DWORD PTR [ebp-0x8]
  42f146:	mov    eax,esi
  42f148:	mov    ecx,DWORD PTR [eax]
  42f14a:	call   DWORD PTR [ecx+0x4c]
  42f14d:	lea    eax,[ebp-0x10]
  42f150:	push   eax
  42f151:	mov    edx,ebx
  42f153:	add    edx,0x1
  42f156:	jno    0x42f15d
  42f158:	call   0x403f70
  42f15d:	mov    ecx,0xff
  42f162:	mov    eax,DWORD PTR [ebp-0x4]
  42f165:	call   0x405480
  42f16a:	mov    edx,DWORD PTR [ebp-0x10]
  42f16d:	lea    ecx,[ebp-0xc]
  42f170:	mov    eax,ds:0x41be90
  42f175:	call   0x41b2b0
  42f17a:	mov    edx,DWORD PTR [ebp-0xc]
  42f17d:	mov    ecx,DWORD PTR [esi+0xe4]
  42f183:	mov    eax,ds:0x41be90
  42f188:	call   0x41b254
  42f18d:	mov    edx,eax
  42f18f:	mov    eax,esi
  42f191:	mov    ecx,DWORD PTR [eax]
  42f193:	call   DWORD PTR [ecx+0x50]
  42f196:	xor    eax,eax
  42f198:	pop    edx
  42f199:	pop    ecx
  42f19a:	pop    ecx
  42f19b:	mov    DWORD PTR fs:[eax],edx
  42f19e:	push   0x42f1b8
  42f1a3:	lea    eax,[ebp-0x10]
  42f1a6:	mov    edx,0x3
  42f1ab:	call   0x404fac
  42f1b0:	ret    
  42f1b1:	jmp    0x40481c
  42f1b6:	jmp    0x42f1a3
  42f1b8:	pop    esi
  42f1b9:	pop    ebx
  42f1ba:	mov    esp,ebp
  42f1bc:	pop    ebp
  42f1bd:	ret    
  42f1be:	add    BYTE PTR [eax],al
  42f1c0:	(bad)  
  42f1c1:	(bad)  
  42f1c2:	(bad)  
  42f1c3:	inc    DWORD PTR [ecx]
  42f1c5:	add    BYTE PTR [eax],al
  42f1c7:	add    BYTE PTR [edx],bh
  42f1c9:	add    BYTE PTR [eax],al
  42f1cb:	add    BYTE PTR [ebx+0xd088],cl
  42f1d1:	add    BYTE PTR [ebp-0x3d6af037],al
  42f1d7:	test   dl,dl
  42f1d9:	je     0x42f1df
  42f1db:	movzx  edx,BYTE PTR [ecx+0x18]
  42f1df:	mov    eax,edx
  42f1e1:	ret    
  42f1e2:	mov    eax,eax
  42f1e4:	add    esp,0xfffffff0
  42f1e7:	mov    BYTE PTR [esp],cl
  42f1ea:	mov    DWORD PTR [esp+0x8],0x0
  42f1f2:	mov    DWORD PTR [esp+0xc],0x0
  42f1fa:	xor    ecx,ecx
  42f1fc:	test   cl,cl
  42f1fe:	jne    0x42f211
  42f200:	movzx  ecx,BYTE PTR [esp]
  42f204:	call   0x429628
  42f209:	mov    DWORD PTR [esp+0x8],eax
  42f20d:	mov    DWORD PTR [esp+0xc],edx
  42f211:	mov    eax,DWORD PTR [esp+0x8]
  42f215:	mov    edx,DWORD PTR [esp+0xc]
  42f219:	add    esp,0x10
  42f21c:	ret    
  42f21d:	lea    eax,[eax+0x0]
  42f220:	push   ebx
  42f221:	push   esi
  42f222:	push   edi
  42f223:	push   ebp
  42f224:	mov    esi,edx
  42f226:	mov    ebx,eax
  42f228:	test   esi,esi
  42f22a:	je     0x42f2e0
  42f230:	cmp    DWORD PTR [esi+0x4],0x0
  42f234:	jne    0x42f2af
  42f236:	mov    eax,DWORD PTR [ebx+0x100]
  42f23c:	test   eax,eax
  42f23e:	je     0x42f24e
  42f240:	cmp    DWORD PTR [eax+0x4],0x0
  42f244:	je     0x42f24e
  42f246:	xor    eax,eax
  42f248:	mov    DWORD PTR [ebx+0x100],eax
  42f24e:	mov    eax,esi
  42f250:	call   0x403f78
  42f255:	mov    edi,eax
  42f257:	mov    ebp,DWORD PTR [ebx+0x100]
  42f25d:	test   ebp,ebp
  42f25f:	je     0x42f28f
  42f261:	mov    eax,ebp
  42f263:	call   0x403f78
  42f268:	cmp    edi,eax
  42f26a:	je     0x42f2a0
  42f26c:	lea    edx,[ebx+0x100]
  42f272:	mov    eax,ds:0x41be90
  42f277:	call   0x41b14c
  42f27c:	xor    ecx,ecx
  42f27e:	mov    dl,0x1
  42f280:	mov    eax,edi
  42f282:	call   0x424704
  42f287:	mov    DWORD PTR [ebx+0x100],eax
  42f28d:	jmp    0x42f2a0
  42f28f:	xor    ecx,ecx
  42f291:	mov    dl,0x1
  42f293:	mov    eax,edi
  42f295:	call   0x424704
  42f29a:	mov    DWORD PTR [ebx+0x100],eax
  42f2a0:	mov    edx,esi
  42f2a2:	mov    eax,DWORD PTR [ebx+0x100]
  42f2a8:	mov    ecx,DWORD PTR [eax]
  42f2aa:	call   DWORD PTR [ecx+0x8]
  42f2ad:	jmp    0x42f30a
  42f2af:	mov    eax,DWORD PTR [ebx+0x100]
  42f2b5:	test   eax,eax
  42f2b7:	je     0x42f2cf
  42f2b9:	cmp    DWORD PTR [eax+0x4],0x0
  42f2bd:	jne    0x42f2cf
  42f2bf:	lea    edx,[ebx+0x100]
  42f2c5:	mov    eax,ds:0x41be90
  42f2ca:	call   0x41b14c
  42f2cf:	mov    eax,esi
  42f2d1:	mov    DWORD PTR [ebx+0x100],eax
  42f2d7:	mov    edx,ebx
  42f2d9:	call   0x41a2b4
  42f2de:	jmp    0x42f30a
  42f2e0:	mov    eax,DWORD PTR [ebx+0x100]
  42f2e6:	test   eax,eax
  42f2e8:	je     0x42f302
  42f2ea:	cmp    DWORD PTR [eax+0x4],0x0
  42f2ee:	jne    0x42f302
  42f2f0:	lea    edx,[ebx+0x100]
  42f2f6:	mov    eax,ds:0x41be90
  42f2fb:	call   0x41b14c
  42f300:	jmp    0x42f30a
  42f302:	xor    eax,eax
  42f304:	mov    DWORD PTR [ebx+0x100],eax
  42f30a:	pop    ebp
  42f30b:	pop    edi
  42f30c:	pop    esi
  42f30d:	pop    ebx
  42f30e:	ret    
  42f30f:	nop
  42f310:	push   ebx
  42f311:	mov    ebx,eax
  42f313:	cmp    DWORD PTR [ebx+0x100],0x0
  42f31a:	jne    0x42f330
  42f31c:	xor    ecx,ecx
  42f31e:	mov    dl,0x1
  42f320:	mov    eax,ds:0x42b9cc
  42f325:	call   0x424704
  42f32a:	mov    DWORD PTR [ebx+0x100],eax
  42f330:	mov    eax,DWORD PTR [ebx+0x100]
  42f336:	pop    ebx
  42f337:	ret    
  42f338:	cmp    dl,BYTE PTR [eax+0x104]
  42f33e:	je     0x42f34f
  42f340:	mov    ecx,edx
  42f342:	mov    BYTE PTR [eax+0x104],cl
  42f348:	mov    edx,ecx
  42f34a:	call   0x42f350
  42f34f:	ret    
  42f350:	push   ebx
  42f351:	push   esi
  42f352:	mov    ebx,edx
  42f354:	mov    esi,eax
  42f356:	mov    eax,esi
  42f358:	call   0x42f1cc
  42f35d:	test   al,al
  42f35f:	je     0x42f384
  42f361:	push   0x1
  42f363:	xor    bl,0x1
  42f366:	movzx  eax,bl
  42f369:	push   eax
  42f36a:	mov    eax,DWORD PTR [esi+0xd0]
  42f370:	mov    edx,DWORD PTR [eax+0x14]
  42f373:	mov    eax,ds:0x46de0c
  42f378:	mov    eax,DWORD PTR [eax]
  42f37a:	mov    ecx,0x6
  42f37f:	mov    ebx,DWORD PTR [eax]
  42f381:	call   DWORD PTR [ebx+0x64]
  42f384:	pop    esi
  42f385:	pop    ebx
  42f386:	ret    
  42f387:	nop
  42f388:	push   ebx
  42f389:	cmp    cl,0x1
  42f38c:	jne    0x42f39e
  42f38e:	cmp    edx,DWORD PTR [eax+0x100]
  42f394:	jne    0x42f39e
  42f396:	xor    ebx,ebx
  42f398:	mov    DWORD PTR [eax+0x100],ebx
  42f39e:	call   0x427f6c
  42f3a3:	pop    ebx
  42f3a4:	ret    
  42f3a5:	lea    eax,[eax+0x0]
  42f3a8:	push   ebx
  42f3a9:	mov    ebx,eax
  42f3ab:	mov    eax,ebx
  42f3ad:	call   0x42972c
  42f3b2:	mov    BYTE PTR [ebx+0x104],0x1
  42f3b9:	mov    BYTE PTR [ebx+0x105],0x0
  42f3c0:	pop    ebx
  42f3c1:	ret    
  42f3c2:	mov    eax,eax
  42f3c4:	adc    ah,dh
  42f3c6:	inc    edx
	...
  42f3d3:	add    BYTE PTR [esi*8+0x42],al
	...
  42f3e2:	add    BYTE PTR [eax],al
  42f3e4:	in     al,dx
  42f3e5:	hlt    
  42f3e6:	inc    edx
  42f3e7:	add    BYTE PTR [eax],cl
  42f3e9:	add    DWORD PTR [eax],eax
  42f3eb:	add    BYTE PTR [eax],al
  42f3ed:	in     al,dx
  42f3ee:	inc    edx
  42f3ef:	add    BYTE PTR [eax],bl
  42f3f1:	test   eax,0x42dc0041
  42f3f6:	inc    eax
  42f3f7:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42f3fd:	inc    edx
  42f3fe:	inc    eax
  42f3ff:	add    al,bl
  42f401:	inc    edx
  42f402:	inc    eax
  42f403:	add    BYTE PTR [eax],bh
  42f405:	inc    eax
  42f406:	inc    eax
  42f407:	add    BYTE PTR [eax+eax*2+0x40],dl
  42f40b:	add    BYTE PTR [edi+ebp*8],bh
  42f40e:	inc    edx
  42f40f:	add    BYTE PTR [eax+0x41],ch
  42f412:	inc    ecx
  42f413:	add    BYTE PTR [eax-0x5b],dh
  42f416:	inc    ecx
  42f417:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42f41e:	inc    ecx
  42f41f:	add    BYTE PTR [eax+0x580042f3],cl
  42f425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f426:	inc    ecx
  42f427:	add    BYTE PTR [eax-0x59],dl
  42f42a:	inc    ecx
  42f42b:	add    BYTE PTR [eax],dh
  42f42d:	test   eax,0xa6680041
  42f432:	inc    ecx
  42f433:	add    BYTE PTR [eax-0x5a],ah
  42f436:	inc    ecx
  42f437:	add    BYTE PTR [eax],bh
  42f439:	test   eax,0x46bc0041
  42f43e:	inc    edx
  42f43f:	add    BYTE PTR [eax-0x3bffbd0d],ch
  42f445:	dec    ebp
  42f446:	inc    edx
  42f447:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42f44b:	add    ah,cl
  42f44d:	dec    esi
  42f44e:	inc    edx
  42f44f:	add    ah,dh
  42f451:	out    dx,eax
  42f452:	inc    edx
  42f453:	add    BYTE PTR [eax-0x6f],bl
  42f456:	inc    edx
  42f457:	add    al,dh
  42f459:	lock inc edx
  42f45b:	add    ah,dl
  42f45d:	mov    eax,DWORD PTR [edx+0x0]
  42f460:	in     al,dx
  42f461:	mov    eax,DWORD PTR [edx+0x0]
  42f464:	pushf  
  42f465:	jg     0x42f4a9
  42f467:	add    BYTE PTR [edx+edi*8+0x7f040042],ah
  42f46e:	inc    edx
  42f46f:	add    ah,dl
  42f471:	cmc    
  42f472:	inc    edx
  42f473:	add    BYTE PTR [eax],cl
  42f475:	std    
  42f476:	inc    edx
  42f477:	add    BYTE PTR [ebp+edi*8+0x42],dh
  42f47b:	add    BYTE PTR [esi+ebp*8+0x42],ah
  42f47f:	add    BYTE PTR [edi+edx*4],ah
  42f482:	inc    edx
  42f483:	add    BYTE PTR [eax+0x10004295],dl
  42f489:	cli    
  42f48a:	inc    edx
  42f48b:	add    BYTE PTR [eax+0x40042f0],cl
  42f491:	cli    
  42f492:	inc    edx
  42f493:	add    BYTE PTR [ecx+eax*4+0x42],ah
  42f497:	add    BYTE PTR [ebx+ecx*4+0x42],ch
  42f49b:	add    al,bh
  42f49d:	add    BYTE PTR [edx+0x0],0x20
  42f4a1:	mov    BYTE PTR [edx+0x0],al
  42f4a4:	in     al,0xf1
  42f4a6:	inc    edx
  42f4a7:	add    BYTE PTR [eax+0x30004290],al
  42f4ad:	xchg   ebx,eax
  42f4ae:	inc    edx
  42f4af:	add    BYTE PTR [eax-0x76],ch
  42f4b2:	inc    edx
  42f4b3:	add    BYTE PTR [eax-0x7b],dl
  42f4b6:	inc    edx
  42f4b7:	add    BYTE PTR [eax+0x7c004287],bl
  42f4bd:	mov    WORD PTR [edx+0x0],es
  42f4c0:	dec    eax
  42f4c1:	add    DWORD PTR [edx+0x0],0x428134
  42f4c8:	test   BYTE PTR [eax-0x7f33ffbe],al
  42f4ce:	inc    edx
  42f4cf:	add    BYTE PTR [eax-0x80],dl
  42f4d2:	inc    edx
  42f4d3:	add    BYTE PTR [edi+esi*8-0x106bffbe],bh
  42f4da:	inc    edx
  42f4db:	add    BYTE PTR [edi+ebp*8-0x102bffbe],dh
  42f4e2:	inc    edx
  42f4e3:	add    BYTE PTR [eax],dl
  42f4e5:	repz inc edx
  42f4e7:	add    BYTE PTR [eax],ah
  42f4e9:	repnz inc edx
  42f4eb:	add    BYTE PTR [ecx],dl
  42f4ed:	push   esp
  42f4ee:	dec    ecx
  42f4ef:	fs dec ecx
  42f4f1:	dec    edi
  42f4f2:	dec    eax
  42f4f3:	popa   
  42f4f4:	outs   dx,BYTE PTR ds:[esi]
  42f4f5:	fs ins BYTE PTR es:[edi],dx
  42f4f7:	gs jb  0x42f54d
  42f4fa:	je     0x42f55d
  42f4fc:	arpl   WORD PTR [ebx-0x75],bp
  42f4ff:	rol    BYTE PTR [esi*8+0x11070042],0x54
  42f507:	dec    ecx
  42f508:	fs dec ecx
  42f50a:	dec    edi
  42f50b:	dec    eax
  42f50c:	popa   
  42f50d:	outs   dx,BYTE PTR ds:[esi]
  42f50e:	fs ins BYTE PTR es:[edi],dx
  42f510:	gs jb  0x42f566
  42f513:	je     0x42f576
  42f515:	arpl   WORD PTR [ebx+0x10],bp
  42f518:	hlt    
  42f519:	inc    edx
  42f51a:	add    BYTE PTR [eax-0x13],dl
  42f51d:	inc    edx
  42f51e:	add    BYTE PTR [edx],dl
  42f520:	add    BYTE PTR [eax],dl
  42f522:	dec    ecx
  42f523:	fs dec ecx
  42f525:	dec    edi
  42f526:	dec    eax
  42f527:	popa   
  42f528:	outs   dx,BYTE PTR ds:[esi]
  42f529:	fs ins BYTE PTR es:[edi],dx
  42f52b:	gs jb  0x42f581
  42f52e:	je     0x42f591
  42f530:	arpl   WORD PTR [ebx+0x1],bp
  42f533:	add    BYTE PTR [eax+edx*1],bh
  42f536:	inc    eax
  42f537:	add    BYTE PTR [eax-0x47010000],bh
  42f53d:	add    BYTE PTR [eax],al
  42f53f:	inc    DWORD PTR [ecx]
  42f541:	add    BYTE PTR [eax],al
  42f543:	add    BYTE PTR [eax],al
  42f545:	add    BYTE PTR [eax],al
  42f547:	cmp    bh,0xff
  42f54a:	(bad)  
  42f54b:	call   DWORD PTR [ecx]
  42f54d:	add    BYTE PTR [ebx],cl
  42f54f:	push   edx
  42f550:	gs popa 
  42f552:	fs push esp
  42f554:	imul   ebp,DWORD PTR [ebp+0x65],0x8b74756f
  42f55b:	shr    BYTE PTR [eax+0x42f5],0x0
  42f562:	add    BYTE PTR [eax],al
  42f564:	add    BYTE PTR [eax],al
  42f566:	add    BYTE PTR [eax],al
  42f568:	mov    al,0xf5
  42f56a:	inc    edx
	...
  42f57b:	add    dl,al
  42f57d:	cmc    
  42f57e:	inc    edx
  42f57f:	add    BYTE PTR [eax+eax*1+0x0],cl
  42f583:	add    BYTE PTR [edx+esi*1+0x41],al
  42f587:	add    al,dl
  42f589:	inc    edx
  42f58a:	inc    eax
  42f58b:	add    al,al
  42f58d:	popf   
  42f58e:	inc    ecx
  42f58f:	add    al,ah
  42f591:	inc    edx
  42f592:	inc    eax
  42f593:	add    ah,ah
  42f595:	inc    edx
  42f596:	inc    eax
  42f597:	add    al,bl
  42f599:	inc    edx
  42f59a:	inc    eax
  42f59b:	add    BYTE PTR [eax],bh
  42f59d:	inc    eax
  42f59e:	inc    eax
  42f59f:	add    BYTE PTR [eax+eax*2+0x40],dl
  42f5a3:	add    BYTE PTR [ebp+ebx*4+0x41],cl
  42f5a7:	add    BYTE PTR [esi+ebx*4+0x41],dh
  42f5ab:	add    BYTE PTR [eax+0xe0042fd],bl
  42f5b1:	add    BYTE PTR [eax],al
  42f5b3:	add    BYTE PTR [eax],al
  42f5b5:	add    BYTE PTR [ecx],al
  42f5b7:	add    BYTE PTR [eax],al
  42f5b9:	add    BYTE PTR [eax+edx*1+0x480040],al
  42f5c0:	add    BYTE PTR [eax],al
  42f5c2:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  42f5c6:	inc    ebx
  42f5c7:	outs   dx,DWORD PTR ds:[esi]
  42f5c8:	outs   dx,BYTE PTR ds:[esi]
  42f5c9:	outs   dx,BYTE PTR ds:[esi]
  42f5ca:	arpl   WORD PTR gs:[esp+edx*2+0x68],si
  42f5cf:	jb     0x42f636
  42f5d1:	popa   
  42f5d2:	fs nop
  42f5d4:	push   ebx
  42f5d5:	push   esi
  42f5d6:	mov    ebx,eax
  42f5d8:	push   0x0
  42f5da:	xor    ecx,ecx
  42f5dc:	xor    edx,edx
  42f5de:	mov    eax,ebx
  42f5e0:	mov    esi,DWORD PTR [eax]
  42f5e2:	call   DWORD PTR [esi+0x58]
  42f5e5:	mov    eax,ebx
  42f5e7:	call   0x42ef10
  42f5ec:	pop    esi
  42f5ed:	pop    ebx
  42f5ee:	ret    
  42f5ef:	nop
  42f5f0:	push   ebp
  42f5f1:	mov    ebp,esp
  42f5f3:	add    esp,0xfffffff8
  42f5f6:	push   ebx
  42f5f7:	push   esi
  42f5f8:	push   edi
  42f5f9:	xor    edx,edx
  42f5fb:	mov    DWORD PTR [ebp-0x8],edx
  42f5fe:	mov    edi,eax
  42f600:	xor    eax,eax
  42f602:	push   ebp
  42f603:	push   0x42f7ae
  42f608:	push   DWORD PTR fs:[eax]
  42f60b:	mov    DWORD PTR fs:[eax],esp
  42f60e:	cmp    edi,0xffffffff
  42f611:	jne    0x42f618
  42f613:	mov    edi,0xfffffffe
  42f618:	cmp    edi,0xfffffffe
  42f61b:	sete   bl
  42f61e:	mov    cl,0x1
  42f620:	mov    dl,0x1
  42f622:	mov    eax,ds:0x42f55c
  42f627:	call   0x419c7c
  42f62c:	mov    DWORD PTR [ebp-0x4],eax
  42f62f:	xor    eax,eax
  42f631:	push   ebp
  42f632:	push   0x42f791
  42f637:	push   DWORD PTR fs:[eax]
  42f63a:	mov    DWORD PTR fs:[eax],esp
  42f63d:	mov    eax,DWORD PTR [ebp+0x8]
  42f640:	mov    eax,DWORD PTR [eax-0x4]
  42f643:	mov    eax,DWORD PTR [eax+0xd0]
  42f649:	mov    edx,DWORD PTR [ebp-0x4]
  42f64c:	mov    DWORD PTR [edx+0x40],eax
  42f64f:	mov    eax,DWORD PTR [ebp-0x4]
  42f652:	call   0x41a10c
  42f657:	mov    eax,ds:0x42473c
  42f65c:	call   0x4249a0
  42f661:	test   al,al
  42f663:	je     0x42f68d
  42f665:	mov    eax,ds:0x46dea8
  42f66a:	mov    eax,DWORD PTR [eax]
  42f66c:	mov    eax,DWORD PTR [eax+0x34]
  42f66f:	cdq    
  42f670:	push   edx
  42f671:	push   eax
  42f672:	push   0x0
  42f674:	push   0x7d
  42f676:	call   0x41d1f8
  42f67b:	push   eax
  42f67c:	sar    eax,0x1f
  42f67f:	cmp    eax,edx
  42f681:	pop    eax
  42f682:	je     0x42f689
  42f684:	call   0x403f68
  42f689:	mov    esi,eax
  42f68b:	jmp    0x42f692
  42f68d:	mov    esi,0x7d
  42f692:	test   bl,bl
  42f694:	je     0x42f6a2
  42f696:	mov    edi,esi
  42f698:	add    edi,0x1
  42f69b:	jno    0x42f6a2
  42f69d:	call   0x403f70
  42f6a2:	cmp    esi,edi
  42f6a4:	jge    0x42f6ee
  42f6a6:	mov    eax,esi
  42f6a8:	test   eax,eax
  42f6aa:	jns    0x42f6b1
  42f6ac:	call   0x403f68
  42f6b1:	call   0x41d250
  42f6b6:	sub    edi,esi
  42f6b8:	jno    0x42f6bf
  42f6ba:	call   0x403f70
  42f6bf:	test   bl,bl
  42f6c1:	je     0x42f6cf
  42f6c3:	mov    edi,esi
  42f6c5:	add    edi,0x1
  42f6c8:	jno    0x42f6cf
  42f6ca:	call   0x403f70
  42f6cf:	xor    ecx,ecx
  42f6d1:	mov    dl,0x1
  42f6d3:	mov    eax,ds:0x42473c
  42f6d8:	call   0x4248d8
  42f6dd:	mov    eax,DWORD PTR [ebp-0x4]
  42f6e0:	cmp    BYTE PTR [eax+0xd],0x0
  42f6e4:	je     0x42f6ea
  42f6e6:	xor    edi,edi
  42f6e8:	jmp    0x42f6ee
  42f6ea:	cmp    esi,edi
  42f6ec:	jl     0x42f6a6
  42f6ee:	mov    eax,edi
  42f6f0:	test   eax,eax
  42f6f2:	jns    0x42f6f9
  42f6f4:	call   0x403f68
  42f6f9:	call   0x41d250
  42f6fe:	mov    eax,DWORD PTR [ebp-0x4]
  42f701:	cmp    BYTE PTR [eax+0xd],0x0
  42f705:	je     0x42f746
  42f707:	mov    eax,DWORD PTR [ebp-0x4]
  42f70a:	cmp    DWORD PTR [eax+0x48],0x0
  42f70e:	je     0x42f77b
  42f710:	mov    eax,DWORD PTR [ebp-0x4]
  42f713:	mov    ebx,DWORD PTR [eax+0x44]
  42f716:	test   ebx,ebx
  42f718:	je     0x42f734
  42f71a:	mov    eax,DWORD PTR [ebp-0x4]
  42f71d:	mov    eax,DWORD PTR [eax+0x48]
  42f720:	push   eax
  42f721:	mov    ecx,ebx
  42f723:	mov    dl,0x1
  42f725:	mov    eax,ds:0x4233c0
  42f72a:	call   0x424080
  42f72f:	call   0x4048fc
  42f734:	mov    eax,DWORD PTR [ebp-0x4]
  42f737:	mov    edx,DWORD PTR [eax+0x48]
  42f73a:	mov    eax,ds:0x427330
  42f73f:	call   0x41be78
  42f744:	jmp    0x42f77b
  42f746:	mov    eax,DWORD PTR [ebp-0x4]
  42f749:	call   0x41a134
  42f74e:	mov    eax,DWORD PTR [ebp+0x8]
  42f751:	mov    eax,DWORD PTR [eax-0x4]
  42f754:	mov    edx,DWORD PTR [eax]
  42f756:	call   DWORD PTR [edx+0x6c]
  42f759:	mov    eax,DWORD PTR [ebp-0x4]
  42f75c:	call   0x41a13c
  42f761:	lea    edx,[ebp-0x8]
  42f764:	mov    eax,ds:0x46dcd8
  42f769:	call   0x406f48
  42f76e:	mov    edx,DWORD PTR [ebp-0x8]
  42f771:	mov    eax,ds:0x4272cc
  42f776:	call   0x41be78
  42f77b:	xor    eax,eax
  42f77d:	pop    edx
  42f77e:	pop    ecx
  42f77f:	pop    ecx
  42f780:	mov    DWORD PTR fs:[eax],edx
  42f783:	push   0x42f798
  42f788:	mov    eax,DWORD PTR [ebp-0x4]
  42f78b:	call   0x4040a0
  42f790:	ret    
  42f791:	jmp    0x40481c
  42f796:	jmp    0x42f788
  42f798:	xor    eax,eax
  42f79a:	pop    edx
  42f79b:	pop    ecx
  42f79c:	pop    ecx
  42f79d:	mov    DWORD PTR fs:[eax],edx
  42f7a0:	push   0x42f7b5
  42f7a5:	lea    eax,[ebp-0x8]
  42f7a8:	call   0x404f88
  42f7ad:	ret    
  42f7ae:	jmp    0x40481c
  42f7b3:	jmp    0x42f7a5
  42f7b5:	pop    edi
  42f7b6:	pop    esi
  42f7b7:	pop    ebx
  42f7b8:	pop    ecx
  42f7b9:	pop    ecx
  42f7ba:	pop    ebp
  42f7bb:	ret    
  42f7bc:	push   ebp
  42f7bd:	mov    ebp,esp
  42f7bf:	add    esp,0xffffffec
  42f7c2:	push   ebx
  42f7c3:	push   esi
  42f7c4:	push   edi
  42f7c5:	xor    edx,edx
  42f7c7:	mov    DWORD PTR [ebp-0x8],edx
  42f7ca:	mov    DWORD PTR [ebp-0xc],edx
  42f7cd:	mov    DWORD PTR [ebp-0x4],eax
  42f7d0:	lea    edi,[ebp-0x4]
  42f7d3:	xor    eax,eax
  42f7d5:	push   ebp
  42f7d6:	push   0x42f9f5
  42f7db:	push   DWORD PTR fs:[eax]
  42f7de:	mov    DWORD PTR fs:[eax],esp
  42f7e1:	mov    eax,DWORD PTR [edi]
  42f7e3:	call   0x42ee80
  42f7e8:	mov    eax,DWORD PTR [edi]
  42f7ea:	mov    ebx,DWORD PTR [eax+0x100]
  42f7f0:	test   ebx,ebx
  42f7f2:	je     0x42f847
  42f7f4:	mov    eax,ebx
  42f7f6:	mov    edx,DWORD PTR [eax]
  42f7f8:	call   DWORD PTR [edx+0x40]
  42f7fb:	test   al,al
  42f7fd:	je     0x42f824
  42f7ff:	lea    eax,[ebp-0x8]
  42f802:	mov    edx,DWORD PTR [edi]
  42f804:	mov    ebx,DWORD PTR [edx+0x100]
  42f80a:	mov    edx,DWORD PTR [ebx+0x88]
  42f810:	call   0x405020
  42f815:	mov    esi,DWORD PTR [ebx+0x90]
  42f81b:	movzx  ebx,BYTE PTR [ebx+0x94]
  42f822:	jmp    0x42f868
  42f824:	lea    eax,[ebp-0x8]
  42f827:	mov    edx,DWORD PTR [edi]
  42f829:	mov    edx,DWORD PTR [edx+0x94]
  42f82f:	call   0x405020
  42f834:	mov    eax,DWORD PTR [edi]
  42f836:	mov    esi,DWORD PTR [eax+0xb0]
  42f83c:	mov    eax,DWORD PTR [edi]
  42f83e:	movzx  ebx,BYTE PTR [eax+0x105]
  42f845:	jmp    0x42f868
  42f847:	lea    eax,[ebp-0x8]
  42f84a:	mov    edx,DWORD PTR [edi]
  42f84c:	mov    edx,DWORD PTR [edx+0x94]
  42f852:	call   0x405020
  42f857:	mov    eax,DWORD PTR [edi]
  42f859:	mov    esi,DWORD PTR [eax+0xb0]
  42f85f:	mov    eax,DWORD PTR [edi]
  42f861:	movzx  ebx,BYTE PTR [eax+0x105]
  42f868:	test   bl,bl
  42f86a:	jne    0x42f8cb
  42f86c:	mov    eax,ds:0x46de0c
  42f871:	mov    eax,DWORD PTR [eax]
  42f873:	mov    edx,DWORD PTR [ebp-0x8]
  42f876:	call   0x4236e8
  42f87b:	test   al,al
  42f87d:	jne    0x42f8be
  42f87f:	mov    eax,DWORD PTR [edi]
  42f881:	cmp    WORD PTR [eax+0x32],0x0
  42f886:	je     0x42f8a0
  42f888:	push   0x0
  42f88a:	mov    eax,DWORD PTR [ebp-0x8]
  42f88d:	mov    DWORD PTR [ebp-0x14],eax
  42f890:	mov    BYTE PTR [ebp-0x10],0xb
  42f894:	lea    ecx,[ebp-0x14]
  42f897:	xor    edx,edx
  42f899:	mov    eax,DWORD PTR [edi]
  42f89b:	call   0x424d00
  42f8a0:	lea    eax,[ebp-0xc]
  42f8a3:	push   eax
  42f8a4:	mov    eax,DWORD PTR [edi]
  42f8a6:	movzx  ecx,BYTE PTR [eax+0x105]
  42f8ad:	mov    eax,ds:0x46de0c
  42f8b2:	mov    eax,DWORD PTR [eax]
  42f8b4:	mov    edx,DWORD PTR [ebp-0x8]
  42f8b7:	call   0x423fcc
  42f8bc:	jmp    0x42f91f
  42f8be:	lea    eax,[ebp-0xc]
  42f8c1:	mov    edx,DWORD PTR [ebp-0x8]
  42f8c4:	call   0x405020
  42f8c9:	jmp    0x42f91f
  42f8cb:	lea    edx,[ebp-0xc]
  42f8ce:	mov    eax,DWORD PTR [ebp-0x8]
  42f8d1:	call   0x41cb48
  42f8d6:	cmp    DWORD PTR [ebp-0xc],0x0
  42f8da:	jne    0x42f914
  42f8dc:	mov    eax,DWORD PTR [edi]
  42f8de:	cmp    WORD PTR [eax+0x32],0x0
  42f8e3:	je     0x42f8fd
  42f8e5:	push   0x0
  42f8e7:	mov    eax,DWORD PTR [ebp-0x8]
  42f8ea:	mov    DWORD PTR [ebp-0x14],eax
  42f8ed:	mov    BYTE PTR [ebp-0x10],0xb
  42f8f1:	lea    ecx,[ebp-0x14]
  42f8f4:	xor    edx,edx
  42f8f6:	mov    eax,DWORD PTR [edi]
  42f8f8:	call   0x424d00
  42f8fd:	lea    eax,[ebp-0xc]
  42f900:	push   eax
  42f901:	mov    eax,ds:0x46de0c
  42f906:	mov    eax,DWORD PTR [eax]
  42f908:	mov    ecx,ebx
  42f90a:	mov    edx,DWORD PTR [ebp-0x8]
  42f90d:	call   0x423fcc
  42f912:	jmp    0x42f91f
  42f914:	lea    eax,[ebp-0xc]
  42f917:	mov    edx,DWORD PTR [ebp-0x8]
  42f91a:	call   0x405020
  42f91f:	push   ebx
  42f920:	mov    eax,DWORD PTR [edi]
  42f922:	mov    eax,DWORD PTR [eax+0xd0]
  42f928:	mov    ecx,esi
  42f92a:	mov    edx,DWORD PTR [ebp-0xc]
  42f92d:	call   0x425470
  42f932:	mov    eax,DWORD PTR [edi]
  42f934:	cmp    WORD PTR [eax+0x32],0x0
  42f939:	je     0x42f95b
  42f93b:	push   0x0
  42f93d:	mov    eax,DWORD PTR [edi]
  42f93f:	mov    eax,DWORD PTR [eax+0xd0]
  42f945:	mov    eax,DWORD PTR [eax+0x20]
  42f948:	mov    DWORD PTR [ebp-0x14],eax
  42f94b:	mov    BYTE PTR [ebp-0x10],0xb
  42f94f:	lea    ecx,[ebp-0x14]
  42f952:	mov    dl,0x1
  42f954:	mov    eax,DWORD PTR [edi]
  42f956:	call   0x424d00
  42f95b:	mov    eax,DWORD PTR [edi]
  42f95d:	mov    eax,DWORD PTR [eax+0x8c]
  42f963:	test   eax,eax
  42f965:	jne    0x42f992
  42f967:	mov    eax,ds:0x42473c
  42f96c:	call   0x4249a0
  42f971:	test   al,al
  42f973:	je     0x42f983
  42f975:	push   ebp
  42f976:	mov    eax,0x1d4c0
  42f97b:	call   0x42f5f0
  42f980:	pop    ecx
  42f981:	jmp    0x42f999
  42f983:	mov    eax,DWORD PTR [edi]
  42f985:	mov    eax,DWORD PTR [eax+0xd0]
  42f98b:	mov    edx,DWORD PTR [eax]
  42f98d:	call   DWORD PTR [edx+0x24]
  42f990:	jmp    0x42f999
  42f992:	push   ebp
  42f993:	call   0x42f5f0
  42f998:	pop    ecx
  42f999:	mov    eax,DWORD PTR [edi]
  42f99b:	mov    ebx,DWORD PTR [eax+0x100]
  42f9a1:	test   ebx,ebx
  42f9a3:	je     0x42f9da
  42f9a5:	mov    eax,ebx
  42f9a7:	mov    edx,DWORD PTR [eax]
  42f9a9:	call   DWORD PTR [edx+0x40]
  42f9ac:	test   al,al
  42f9ae:	je     0x42f9da
  42f9b0:	mov    eax,DWORD PTR [edi]
  42f9b2:	mov    eax,DWORD PTR [eax+0xb0]
  42f9b8:	push   eax
  42f9b9:	mov    eax,DWORD PTR [edi]
  42f9bb:	movzx  eax,BYTE PTR [eax+0x105]
  42f9c2:	push   eax
  42f9c3:	mov    eax,DWORD PTR [edi]
  42f9c5:	mov    ecx,DWORD PTR [eax+0x94]
  42f9cb:	mov    eax,DWORD PTR [edi]
  42f9cd:	mov    eax,DWORD PTR [eax+0x100]
  42f9d3:	mov    edx,DWORD PTR [edi]
  42f9d5:	call   0x429a80
  42f9da:	xor    eax,eax
  42f9dc:	pop    edx
  42f9dd:	pop    ecx
  42f9de:	pop    ecx
  42f9df:	mov    DWORD PTR fs:[eax],edx
  42f9e2:	push   0x42f9fc
  42f9e7:	lea    eax,[ebp-0xc]
  42f9ea:	mov    edx,0x2
  42f9ef:	call   0x404fac
  42f9f4:	ret    
  42f9f5:	jmp    0x40481c
  42f9fa:	jmp    0x42f9e7
  42f9fc:	pop    edi
  42f9fd:	pop    esi
  42f9fe:	pop    ebx
  42f9ff:	mov    esp,ebp
  42fa01:	pop    ebp
  42fa02:	ret    
  42fa03:	nop
  42fa04:	mov    eax,DWORD PTR [eax+0xd0]
  42fa0a:	call   0x42559c
  42fa0f:	ret    
  42fa10:	push   ebx
  42fa11:	push   esi
  42fa12:	push   edi
  42fa13:	push   ebp
  42fa14:	add    esp,0xfffffff8
  42fa17:	mov    DWORD PTR [esp],edx
  42fa1a:	mov    ebx,eax
  42fa1c:	mov    edx,DWORD PTR [esp]
  42fa1f:	mov    eax,ebx
  42fa21:	call   0x42978c
  42fa26:	mov    eax,DWORD PTR [esp]
  42fa29:	mov    eax,DWORD PTR [eax]
  42fa2b:	call   0x4061f4
  42fa30:	mov    DWORD PTR [esp+0x4],eax
  42fa34:	xor    esi,esi
  42fa36:	mov    eax,DWORD PTR [esp+0x4]
  42fa3a:	sub    eax,esi
  42fa3c:	jno    0x42fa43
  42fa3e:	call   0x403f70
  42fa43:	push   eax
  42fa44:	mov    edx,DWORD PTR [esp+0x4]
  42fa48:	mov    edx,DWORD PTR [edx]
  42fa4a:	mov    ecx,esi
  42fa4c:	mov    eax,DWORD PTR [ebx+0xd0]
  42fa52:	call   0x4252d4
  42fa57:	mov    edi,eax
  42fa59:	xor    ecx,ecx
  42fa5b:	xor    edx,edx
  42fa5d:	mov    eax,ds:0x42473c
  42fa62:	call   0x4248d8
  42fa67:	test   edi,edi
  42fa69:	sete   al
  42fa6c:	mov    BYTE PTR [ebx+0x89],al
  42fa72:	xor    ecx,ecx
  42fa74:	mov    dl,0x1
  42fa76:	mov    eax,ebx
  42fa78:	mov    ebp,DWORD PTR [eax]
  42fa7a:	call   DWORD PTR [ebp+0x64]
  42fa7d:	mov    eax,edi
  42fa7f:	cdq    
  42fa80:	push   edx
  42fa81:	push   eax
  42fa82:	mov    dl,0x1
  42fa84:	mov    eax,ebx
  42fa86:	mov    ecx,DWORD PTR [eax]
  42fa88:	call   DWORD PTR [ecx+0x38]
  42fa8b:	add    esi,edi
  42fa8d:	jno    0x42fa94
  42fa8f:	call   0x403f70
  42fa94:	cmp    esi,DWORD PTR [esp+0x4]
  42fa98:	jl     0x42fa36
  42fa9a:	pop    ecx
  42fa9b:	pop    edx
  42fa9c:	pop    ebp
  42fa9d:	pop    edi
  42fa9e:	pop    esi
  42fa9f:	pop    ebx
  42faa0:	ret    
  42faa1:	lea    eax,[eax+0x0]
  42faa4:	push   ebp
  42faa5:	mov    ebp,esp
  42faa7:	push   ecx
  42faa8:	mov    ecx,0x4
  42faad:	push   0x0
  42faaf:	push   0x0
  42fab1:	dec    ecx
  42fab2:	jne    0x42faad
  42fab4:	xchg   DWORD PTR [ebp-0x4],ecx
  42fab7:	push   ebx
  42fab8:	push   esi
  42fab9:	mov    DWORD PTR [ebp-0x10],ecx
  42fabc:	mov    BYTE PTR [ebp-0x9],dl
  42fabf:	mov    DWORD PTR [ebp-0x8],eax
  42fac2:	xor    eax,eax
  42fac4:	push   ebp
  42fac5:	push   0x42fcf5
  42faca:	push   DWORD PTR fs:[eax]
  42facd:	mov    DWORD PTR fs:[eax],esp
  42fad0:	cmp    DWORD PTR [ebp-0x10],0xffffffff
  42fad4:	jne    0x42faf4
  42fad6:	mov    eax,DWORD PTR [ebp-0x8]
  42fad9:	mov    eax,DWORD PTR [eax+0xb8]
  42fadf:	cmp    eax,0xffffffff
  42fae2:	je     0x42fae8
  42fae4:	test   eax,eax
  42fae6:	jne    0x42faf1
  42fae8:	mov    DWORD PTR [ebp-0x10],0xfffffffe
  42faef:	jmp    0x42faf4
  42faf1:	mov    DWORD PTR [ebp-0x10],eax
  42faf4:	xor    ebx,ebx
  42faf6:	xor    ecx,ecx
  42faf8:	movzx  edx,BYTE PTR [ebp-0x9]
  42fafc:	mov    eax,DWORD PTR [ebp-0x8]
  42faff:	mov    esi,DWORD PTR [eax]
  42fb01:	call   DWORD PTR [esi+0x64]
  42fb04:	mov    eax,DWORD PTR [ebp-0x8]
  42fb07:	call   0x42f1cc
  42fb0c:	test   al,al
  42fb0e:	je     0x42fca5
  42fb14:	xor    eax,eax
  42fb16:	mov    DWORD PTR [ebp-0x14],eax
  42fb19:	mov    edx,DWORD PTR [ebp-0x10]
  42fb1c:	mov    eax,DWORD PTR [ebp-0x8]
  42fb1f:	mov    ecx,DWORD PTR [eax]
  42fb21:	call   DWORD PTR [ecx+0x80]
  42fb27:	test   al,al
  42fb29:	je     0x42fc6a
  42fb2f:	mov    eax,DWORD PTR [ebp-0x8]
  42fb32:	cmp    DWORD PTR [eax+0xbc],0x0
  42fb39:	je     0x42fc24
  42fb3f:	mov    eax,DWORD PTR [ebp-0x8]
  42fb42:	call   0x42f1cc
  42fb47:	test   al,al
  42fb49:	je     0x42fc08
  42fb4f:	mov    eax,DWORD PTR [ebp-0x8]
  42fb52:	mov    eax,DWORD PTR [eax+0xc0]
  42fb58:	push   eax
  42fb59:	lea    eax,[ebp-0x4]
  42fb5c:	mov    ecx,0x1
  42fb61:	mov    edx,DWORD PTR ds:0x40769c
  42fb67:	call   0x4063b0
  42fb6c:	add    esp,0x4
  42fb6f:	xor    edx,edx
  42fb71:	push   ebp
  42fb72:	push   0x42fc01
  42fb77:	push   DWORD PTR fs:[edx]
  42fb7a:	mov    DWORD PTR fs:[edx],esp
  42fb7d:	lea    edx,[ebp-0x4]
  42fb80:	mov    eax,DWORD PTR [ebp-0x8]
  42fb83:	mov    eax,DWORD PTR [eax+0xd0]
  42fb89:	call   0x4252bc
  42fb8e:	mov    DWORD PTR [ebp-0x14],eax
  42fb91:	mov    eax,DWORD PTR [ebp-0x14]
  42fb94:	push   eax
  42fb95:	lea    eax,[ebp-0x4]
  42fb98:	mov    ecx,0x1
  42fb9d:	mov    edx,DWORD PTR ds:0x40769c
  42fba3:	call   0x4063b0
  42fba8:	add    esp,0x4
  42fbab:	cmp    DWORD PTR [ebp-0x14],0x0
  42fbaf:	jle    0x42fbe5
  42fbb1:	mov    eax,DWORD PTR [ebp-0x8]
  42fbb4:	mov    eax,DWORD PTR [eax+0x9c]
  42fbba:	test   eax,eax
  42fbbc:	je     0x42fbd1
  42fbbe:	lea    edx,[ebp-0x4]
  42fbc1:	mov    ecx,DWORD PTR [eax]
  42fbc3:	call   DWORD PTR [ecx+0x3c]
  42fbc6:	mov    eax,DWORD PTR [ebp-0x4]
  42fbc9:	call   0x4061f4
  42fbce:	mov    DWORD PTR [ebp-0x14],eax
  42fbd1:	mov    eax,DWORD PTR [ebp-0x8]
  42fbd4:	mov    eax,DWORD PTR [eax+0x98]
  42fbda:	or     ecx,0xffffffff
  42fbdd:	mov    edx,DWORD PTR [ebp-0x4]
  42fbe0:	call   0x426518
  42fbe5:	xor    eax,eax
  42fbe7:	pop    edx
  42fbe8:	pop    ecx
  42fbe9:	pop    ecx
  42fbea:	mov    DWORD PTR fs:[eax],edx
  42fbed:	push   0x42fc47
  42fbf2:	lea    eax,[ebp-0x4]
  42fbf5:	mov    edx,DWORD PTR ds:0x40769c
  42fbfb:	call   0x4063bc
  42fc00:	ret    
  42fc01:	jmp    0x40481c
  42fc06:	jmp    0x42fbf2
  42fc08:	lea    edx,[ebp-0x18]
  42fc0b:	mov    eax,ds:0x46dc48
  42fc10:	call   0x406f48
  42fc15:	mov    edx,DWORD PTR [ebp-0x18]
  42fc18:	mov    eax,ds:0x426e14
  42fc1d:	call   0x41be78
  42fc22:	jmp    0x42fc47
  42fc24:	xor    eax,eax
  42fc26:	mov    DWORD PTR [ebp-0x14],eax
  42fc29:	lea    edx,[ebp-0x1c]
  42fc2c:	mov    eax,ds:0x46dbac
  42fc31:	call   0x406f48
  42fc36:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fc39:	movzx  edx,BYTE PTR [ebp-0x9]
  42fc3d:	mov    eax,ds:0x41b94c
  42fc42:	call   0x41be6c
  42fc47:	cmp    DWORD PTR [ebp-0x14],0x0
  42fc4b:	sete   al
  42fc4e:	mov    edx,DWORD PTR [ebp-0x8]
  42fc51:	mov    BYTE PTR [edx+0x89],al
  42fc57:	xor    ecx,ecx
  42fc59:	movzx  edx,BYTE PTR [ebp-0x9]
  42fc5d:	mov    eax,DWORD PTR [ebp-0x8]
  42fc60:	mov    ebx,DWORD PTR [eax]
  42fc62:	call   DWORD PTR [ebx+0x64]
  42fc65:	mov    ebx,DWORD PTR [ebp-0x14]
  42fc68:	jmp    0x42fc8d
  42fc6a:	lea    edx,[ebp-0x20]
  42fc6d:	mov    eax,ds:0x46daa4
  42fc72:	call   0x406f48
  42fc77:	mov    ecx,DWORD PTR [ebp-0x20]
  42fc7a:	movzx  edx,BYTE PTR [ebp+0x8]
  42fc7e:	mov    eax,ds:0x426e74
  42fc83:	call   0x41be6c
  42fc88:	or     ebx,0xffffffff
  42fc8b:	jmp    0x42fccc
  42fc8d:	cmp    DWORD PTR [ebp-0x14],0x0
  42fc91:	jne    0x42fccc
  42fc93:	mov    eax,DWORD PTR [ebp-0x8]
  42fc96:	call   0x42f1cc
  42fc9b:	test   al,al
  42fc9d:	jne    0x42fb19
  42fca3:	jmp    0x42fccc
  42fca5:	cmp    BYTE PTR [ebp-0x9],0x0
  42fca9:	je     0x42fccc
  42fcab:	lea    edx,[ebp-0x24]
  42fcae:	mov    eax,ds:0x46dbac
  42fcb3:	call   0x406f48
  42fcb8:	mov    ecx,DWORD PTR [ebp-0x24]
  42fcbb:	mov    dl,0x1
  42fcbd:	mov    eax,ds:0x41b94c
  42fcc2:	call   0x41bdbc
  42fcc7:	call   0x4048fc
  42fccc:	xor    eax,eax
  42fcce:	pop    edx
  42fccf:	pop    ecx
  42fcd0:	pop    ecx
  42fcd1:	mov    DWORD PTR fs:[eax],edx
  42fcd4:	push   0x42fcfc
  42fcd9:	lea    eax,[ebp-0x24]
  42fcdc:	mov    edx,0x4
  42fce1:	call   0x404fac
  42fce6:	lea    eax,[ebp-0x4]
  42fce9:	mov    edx,DWORD PTR ds:0x40769c
  42fcef:	call   0x4063bc
  42fcf4:	ret    
  42fcf5:	jmp    0x40481c
  42fcfa:	jmp    0x42fcd9
  42fcfc:	mov    eax,ebx
  42fcfe:	pop    esi
  42fcff:	pop    ebx
  42fd00:	mov    esp,ebp
  42fd02:	pop    ebp
  42fd03:	ret    0x4
  42fd06:	mov    eax,eax
  42fd08:	push   ebx
  42fd09:	push   esi
  42fd0a:	push   ecx
  42fd0b:	mov    BYTE PTR [esp],cl
  42fd0e:	mov    ebx,edx
  42fd10:	mov    esi,eax
  42fd12:	cmp    BYTE PTR [esi+0x89],0x0
  42fd19:	je     0x42fd3a
  42fd1b:	mov    eax,esi
  42fd1d:	call   0x42f1cc
  42fd22:	test   al,al
  42fd24:	je     0x42fd36
  42fd26:	mov    eax,esi
  42fd28:	mov    edx,DWORD PTR [eax]
  42fd2a:	call   DWORD PTR [edx+0x6c]
  42fd2d:	mov    dl,0x4
  42fd2f:	mov    eax,esi
  42fd31:	call   0x424cf4
  42fd36:	mov    al,0x1
  42fd38:	jmp    0x42fd43
  42fd3a:	mov    eax,esi
  42fd3c:	call   0x42f1cc
  42fd41:	xor    al,0x1
  42fd43:	test   al,al
  42fd45:	je     0x42fd6d
  42fd47:	cmp    DWORD PTR [esi+0x98],0x0
  42fd4e:	je     0x42fd6d
  42fd50:	mov    eax,DWORD PTR [esi+0x98]
  42fd56:	cmp    DWORD PTR [eax+0x20],0x0
  42fd5a:	sete   al
  42fd5d:	or     al,BYTE PTR [esp]
  42fd60:	je     0x42fd6d
  42fd62:	test   bl,bl
  42fd64:	je     0x42fd6d
  42fd66:	mov    eax,esi
  42fd68:	call   0x42900c
  42fd6d:	pop    edx
  42fd6e:	pop    esi
  42fd6f:	pop    ebx
  42fd70:	ret    
  42fd71:	lea    eax,[eax+0x0]
  42fd74:	push   ebx
  42fd75:	push   esi
  42fd76:	mov    esi,edx
  42fd78:	mov    ebx,eax
  42fd7a:	mov    eax,ebx
  42fd7c:	mov    edx,DWORD PTR [eax]
  42fd7e:	call   DWORD PTR [edx+0x60]
  42fd81:	test   al,al
  42fd83:	je     0x42fd92
  42fd85:	push   0x0
  42fd87:	mov    ecx,esi
  42fd89:	xor    edx,edx
  42fd8b:	mov    eax,ebx
  42fd8d:	mov    ebx,DWORD PTR [eax]
  42fd8f:	call   DWORD PTR [ebx+0x58]
  42fd92:	pop    esi
  42fd93:	pop    ebx
  42fd94:	ret    
  42fd95:	lea    eax,[eax+0x0]
  42fd98:	push   ebp
  42fd99:	mov    ebp,esp
  42fd9b:	push   ecx
  42fd9c:	push   ebx
  42fd9d:	push   esi
  42fd9e:	push   edi
  42fd9f:	mov    DWORD PTR [ebp-0x4],eax
  42fda2:	xor    ecx,ecx
  42fda4:	push   ebp
  42fda5:	push   0x42fe0b
  42fdaa:	push   DWORD PTR fs:[ecx]
  42fdad:	mov    DWORD PTR fs:[ecx],esp
  42fdb0:	xor    ecx,ecx
  42fdb2:	push   ebp
  42fdb3:	push   0x42fdd3
  42fdb8:	push   DWORD PTR fs:[ecx]
  42fdbb:	mov    DWORD PTR fs:[ecx],esp
  42fdbe:	mov    eax,DWORD PTR [ebp-0x4]
  42fdc1:	mov    eax,DWORD PTR [eax+0x40]
  42fdc4:	mov    edx,DWORD PTR [eax]
  42fdc6:	call   DWORD PTR [edx+0x24]
  42fdc9:	xor    eax,eax
  42fdcb:	pop    edx
  42fdcc:	pop    ecx
  42fdcd:	pop    ecx
  42fdce:	mov    DWORD PTR fs:[eax],edx
  42fdd1:	jmp    0x42fe01
  42fdd3:	jmp    0x404694
  42fdd8:	add    DWORD PTR [eax],eax
  42fdda:	add    BYTE PTR [eax],al
  42fddc:	shl    BYTE PTR [ebx],0x42
  42fddf:	add    ah,ah
  42fde1:	std    
  42fde2:	inc    edx
  42fde3:	add    BYTE PTR [ebx-0x57ef3b0],cl
  42fde9:	sbb    DWORD PTR [edi],esp
  42fdeb:	add    BYTE PTR [eax],al
  42fded:	je     0x42fdfc
  42fdef:	cmp    edx,0x2736
  42fdf5:	je     0x42fdfc
  42fdf7:	call   0x404924
  42fdfc:	call   0x404978
  42fe01:	xor    eax,eax
  42fe03:	pop    edx
  42fe04:	pop    ecx
  42fe05:	pop    ecx
  42fe06:	mov    DWORD PTR fs:[eax],edx
  42fe09:	jmp    0x42fe4b
  42fe0b:	jmp    0x404694
  42fe10:	add    DWORD PTR [eax],eax
  42fe12:	add    BYTE PTR [eax],al
  42fe14:	hlt    
  42fe15:	jbe    0x42fe57
  42fe17:	add    BYTE PTR [esi+edi*8],bl
  42fe1a:	inc    edx
  42fe1b:	add    BYTE PTR [ecx-0x3ba743d],cl
  42fe21:	add    eax,0x48
  42fe24:	mov    edx,DWORD PTR [ebx+0x4]
  42fe27:	call   0x404fdc
  42fe2c:	mov    eax,ebx
  42fe2e:	mov    edx,DWORD PTR ds:0x4233c0
  42fe34:	call   0x40422c
  42fe39:	test   al,al
  42fe3b:	je     0x42fe46
  42fe3d:	mov    eax,DWORD PTR [ebx+0xc]
  42fe40:	mov    edx,DWORD PTR [ebp-0x4]
  42fe43:	mov    DWORD PTR [edx+0x44],eax
  42fe46:	call   0x404978
  42fe4b:	mov    eax,DWORD PTR [ebp-0x4]
  42fe4e:	call   0x41a134
  42fe53:	pop    edi
  42fe54:	pop    esi
  42fe55:	pop    ebx
  42fe56:	pop    ecx
  42fe57:	pop    ebp
  42fe58:	ret    
  42fe59:	lea    eax,[eax+0x0]
  42fe5c:	push   ebp
  42fe5d:	mov    ebp,esp
  42fe5f:	xor    eax,eax
  42fe61:	push   ebp
  42fe62:	push   0x42fe81
  42fe67:	push   DWORD PTR fs:[eax]
  42fe6a:	mov    DWORD PTR fs:[eax],esp
  42fe6d:	inc    DWORD PTR ds:0x472bc8
  42fe73:	xor    eax,eax
  42fe75:	pop    edx
  42fe76:	pop    ecx
  42fe77:	pop    ecx
  42fe78:	mov    DWORD PTR fs:[eax],edx
  42fe7b:	push   0x42fe88
  42fe80:	ret    
  42fe81:	jmp    0x40481c
  42fe86:	jmp    0x42fe80
  42fe88:	pop    ebp
  42fe89:	ret    
  42fe8a:	mov    eax,eax
  42fe8c:	fdivr  st,st(6)
  42fe8e:	inc    edx
	...
  42fe9b:	add    BYTE PTR [eax-0x1],dh
  42fe9e:	inc    edx
	...
  42feab:	add    BYTE PTR [eax-0x1],bl
  42feae:	inc    edx
  42feaf:	add    BYTE PTR [eax-0x28000000],ch
  42feb5:	dec    ebx
  42feb6:	inc    edx
  42feb7:	add    BYTE PTR [eax],bl
  42feb9:	test   eax,0x42dc0041
  42febe:	inc    eax
  42febf:	add    BYTE PTR [eax-0x1bffbe5e],ch
  42fec5:	inc    edx
  42fec6:	inc    eax
  42fec7:	add    al,bl
  42fec9:	inc    edx
  42feca:	inc    eax
  42fecb:	add    BYTE PTR [eax],bh
  42fecd:	inc    eax
  42fece:	inc    eax
  42fecf:	add    BYTE PTR [eax+eax*2+0x40],dl
  42fed3:	add    BYTE PTR [eax+0x68004300],al
  42fed9:	inc    ecx
  42feda:	inc    ecx
  42fedb:	add    BYTE PTR [eax-0x5b],dh
  42fede:	inc    ecx
  42fedf:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  42fee6:	inc    ecx
  42fee7:	add    BYTE PTR [eax+0x58004302],dh
  42feed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42feee:	inc    ecx
  42feef:	add    BYTE PTR [eax-0x59],dl
  42fef2:	inc    ecx
  42fef3:	add    BYTE PTR [eax],dh
  42fef5:	test   eax,0xa6680041
  42fefa:	inc    ecx
  42fefb:	add    BYTE PTR [eax-0x5a],ah
  42fefe:	inc    ecx
  42feff:	add    BYTE PTR [eax],bh
  42ff01:	test   eax,0x46bc0041
  42ff06:	inc    edx
  42ff07:	add    BYTE PTR [eax],dl
  42ff09:	push   es
  42ff0a:	inc    ebx
  42ff0b:	add    ah,al
  42ff0d:	dec    ebp
  42ff0e:	inc    edx
  42ff0f:	add    BYTE PTR [esi+ecx*2+0x42],dl
  42ff13:	add    ah,cl
  42ff15:	dec    esi
  42ff16:	inc    edx
  42ff17:	add    BYTE PTR [eax+0x1],ch
  42ff1a:	inc    ebx
  42ff1b:	add    BYTE PTR [eax+0x0],bl
  42ff1e:	inc    ebx
  42ff1f:	add    al,ch
  42ff21:	add    al,BYTE PTR [ebx+0x0]
  42ff24:	nop
  42ff25:	push   es
  42ff26:	inc    ebx
  42ff27:	add    BYTE PTR [eax+0x3],bh
  42ff2a:	inc    ebx
  42ff2b:	add    ah,ch
  42ff2d:	add    eax,DWORD PTR [ebx+0x0]
  42ff30:	nop
  42ff31:	add    eax,0x600043
  42ff36:	inc    ebx
  42ff37:	add    al,ah
  42ff39:	add    BYTE PTR [ebx+0x0],al
  42ff3c:	mov    WORD PTR [esi],es
  42ff3e:	inc    ebx
  42ff3f:	add    BYTE PTR [esp+eax*1+0x43],cl
  42ff43:	add    BYTE PTR [eax+0x30004301],cl
  42ff49:	add    eax,0x2280043
  42ff4e:	inc    ebx
  42ff4f:	add    ah,cl
  42ff51:	add    DWORD PTR [ebx+0x0],eax
  42ff54:	xor    al,0x2
  42ff56:	inc    ebx
  42ff57:	add    BYTE PTR [eax],dl
  42ff59:	push   esp
  42ff5a:	dec    ecx
  42ff5b:	fs push esp
  42ff5d:	inc    ebx
  42ff5e:	push   eax
  42ff5f:	inc    ebx
  42ff60:	outs   dx,DWORD PTR ds:[esi]
  42ff61:	outs   dx,BYTE PTR ds:[esi]
  42ff62:	outs   dx,BYTE PTR ds:[esi]
  42ff63:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42ff68:	outs   dx,BYTE PTR ds:[esi]
  42ff69:	lea    eax,[eax+0x0]
  42ff6c:	jo     0x42ff6d
  42ff6e:	inc    edx
  42ff6f:	add    BYTE PTR [edi],al
  42ff71:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  42ff75:	push   esp
  42ff76:	inc    ebx
  42ff77:	push   eax
  42ff78:	inc    ebx
  42ff79:	outs   dx,DWORD PTR ds:[esi]
  42ff7a:	outs   dx,BYTE PTR ds:[esi]
  42ff7b:	outs   dx,BYTE PTR ds:[esi]
  42ff7c:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42ff81:	outs   dx,BYTE PTR ds:[esi]
  42ff82:	fdivr  st,st(6)
  42ff84:	inc    edx
  42ff85:	add    BYTE PTR [esp+ecx*2+0x42],dh
  42ff89:	add    BYTE PTR [eax],cl
  42ff8b:	add    BYTE PTR [edi],cl
  42ff8d:	dec    ecx
  42ff8e:	fs push esp
  42ff90:	inc    ebx
  42ff91:	push   eax
  42ff92:	inc    ebx
  42ff93:	outs   dx,DWORD PTR ds:[esi]
  42ff94:	outs   dx,BYTE PTR ds:[esi]
  42ff95:	outs   dx,BYTE PTR ds:[esi]
  42ff96:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42ff9b:	outs   dx,BYTE PTR ds:[esi]
  42ff9c:	add    eax,0x427d3800
  42ffa1:	add    BYTE PTR [eax+eax*1+0x48ff00],cl
  42ffa8:	add    dh,bh
  42ffaa:	add    DWORD PTR [eax],eax
  42ffac:	add    BYTE PTR [eax],al
  42ffae:	add    BYTE PTR [eax],al
  42ffb0:	add    BYTE PTR [eax-0x80000000],al
  42ffb6:	add    eax,DWORD PTR [eax]
  42ffb8:	or     DWORD PTR [ecx+0x4f],ecx
  42ffbb:	dec    eax
  42ffbc:	popa   
  42ffbd:	outs   dx,BYTE PTR ds:[esi]
  42ffbe:	fs ins BYTE PTR es:[edi],dx
  42ffc0:	gs jb  0x42ff8f
  42ffc3:	and    eax,DWORD PTR [ecx+0x0]
  42ffc6:	cwde   
  42ffc7:	add    BYTE PTR [eax],al
  42ffc9:	call   FWORD PTR [eax+0x1ff0000]
  42ffcf:	add    BYTE PTR [eax],al
  42ffd1:	add    BYTE PTR [eax],al
  42ffd3:	add    BYTE PTR [eax],al
  42ffd5:	add    BYTE PTR [eax],0x0
  42ffd8:	add    BYTE PTR [eax+0x4f0e0004],al
  42ffde:	outs   dx,BYTE PTR ds:[esi]
  42ffdf:	inc    esp
  42ffe0:	imul   esi,DWORD PTR [ebx+0x63],0x656e6e6f
  42ffe7:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  42ffeb:	jl     0x430038
  42ffed:	inc    edx
  42ffee:	add    BYTE PTR [eax],bh
  42fff0:	add    BYTE PTR [eax],al
  42fff2:	(bad)  
  42fff3:	cmp    BYTE PTR [eax],al
  42fff5:	add    bh,bh
  42fff7:	add    DWORD PTR [eax],eax
  42fff9:	add    BYTE PTR [eax],al
  42fffb:	add    BYTE PTR [eax],al
  42fffd:	add    BYTE PTR [eax-0x80000000],al
  430003:	add    eax,0x6e4f0600
  430008:	push   edi
  430009:	outs   dx,DWORD PTR ds:[esi]
  43000a:	jb     0x430077
  43000c:	aam    0x4a
  43000e:	inc    edx
  43000f:	add    BYTE PTR [eax+0x0],al
  430012:	add    bh,bh
  430014:	inc    eax
  430015:	add    BYTE PTR [eax],al
  430017:	inc    DWORD PTR [ecx]
  430019:	add    BYTE PTR [eax],al
  43001b:	add    BYTE PTR [eax],al
  43001d:	add    BYTE PTR [eax],al
  43001f:	add    BYTE PTR [eax],0x0
  430022:	add    BYTE PTR [eax+0x4f0b0006],al
  430028:	outs   dx,BYTE PTR ds:[esi]
  430029:	push   edi
  43002a:	outs   dx,DWORD PTR ds:[esi]
  43002b:	jb     0x430098
  43002d:	inc    edx
  43002e:	imul   ebp,DWORD PTR gs:[bp+0x38],0x4800424b
  430037:	add    BYTE PTR [eax],al
  430039:	dec    DWORD PTR [eax+0x0]
  43003c:	add    bh,bh
  43003e:	add    DWORD PTR [eax],eax
  430040:	add    BYTE PTR [eax],al
  430042:	add    BYTE PTR [eax],al
  430044:	add    BYTE PTR [eax-0x80000000],al
  43004a:	pop    es
  43004b:	add    BYTE PTR [ecx],cl
  43004d:	dec    edi
  43004e:	outs   dx,BYTE PTR ds:[esi]
  43004f:	push   edi
  430050:	outs   dx,DWORD PTR ds:[esi]
  430051:	jb     0x4300be
  430053:	inc    ebp
  430054:	outs   dx,BYTE PTR ds:[esi]
  430055:	fs mov eax,eax
  430058:	mov    eax,ds:0x429e0c
  43005d:	ret    
  43005e:	mov    eax,eax
  430060:	push   esi
  430061:	mov    esi,DWORD PTR [eax+0x8c]
  430067:	test   esi,esi
  430069:	setne  dl
  43006c:	test   dl,dl
  43006e:	je     0x430079
  430070:	mov    eax,esi
  430072:	mov    edx,DWORD PTR [eax]
  430074:	call   DWORD PTR [edx+0x60]
  430077:	mov    edx,eax
  430079:	mov    eax,edx
  43007b:	pop    esi
  43007c:	ret    
  43007d:	lea    eax,[eax+0x0]
  430080:	push   ebx
  430081:	push   esi
  430082:	call   0x404454
  430087:	mov    ebx,edx
  430089:	mov    esi,eax
  43008b:	mov    eax,DWORD PTR [esi+0x8c]
  430091:	test   eax,eax
  430093:	je     0x4300a3
  430095:	mov    edx,DWORD PTR [eax]
  430097:	call   DWORD PTR [edx+0x6c]
  43009a:	xor    edx,edx
  43009c:	mov    eax,esi
  43009e:	mov    ecx,DWORD PTR [eax]
  4300a0:	call   DWORD PTR [ecx+0x48]
  4300a3:	lea    edx,[esi+0x90]
  4300a9:	mov    eax,ds:0x41be90
  4300ae:	call   0x41b14c
  4300b3:	lea    edx,[esi+0x88]
  4300b9:	mov    eax,ds:0x41be90
  4300be:	call   0x41b14c
  4300c3:	mov    edx,ebx
  4300c5:	and    dl,0xfc
  4300c8:	mov    eax,esi
  4300ca:	call   0x424cc4
  4300cf:	test   bl,bl
  4300d1:	jle    0x4300da
  4300d3:	mov    eax,esi
  4300d5:	call   0x4043fc
  4300da:	pop    esi
  4300db:	pop    ebx
  4300dc:	ret    
  4300dd:	lea    eax,[eax+0x0]
  4300e0:	push   ebp
  4300e1:	mov    ebp,esp
  4300e3:	push   ecx
  4300e4:	mov    DWORD PTR [ebp-0x4],eax
  4300e7:	xor    ecx,ecx
  4300e9:	push   ebp
  4300ea:	push   0x43015b
  4300ef:	push   DWORD PTR fs:[ecx]
  4300f2:	mov    DWORD PTR fs:[ecx],esp
  4300f5:	test   dl,dl
  4300f7:	je     0x43010d
  4300f9:	mov    eax,DWORD PTR [ebp-0x4]
  4300fc:	mov    edx,DWORD PTR [eax]
  4300fe:	call   DWORD PTR [edx+0x5c]
  430101:	test   al,al
  430103:	je     0x43010d
  430105:	mov    eax,DWORD PTR [ebp-0x4]
  430108:	mov    edx,DWORD PTR [eax]
  43010a:	call   DWORD PTR [edx+0x64]
  43010d:	xor    eax,eax
  43010f:	pop    edx
  430110:	pop    ecx
  430111:	pop    ecx
  430112:	mov    DWORD PTR fs:[eax],edx
  430115:	push   0x430162
  43011a:	mov    eax,DWORD PTR [ebp-0x4]
  43011d:	mov    eax,DWORD PTR [eax+0x8c]
  430123:	test   eax,eax
  430125:	je     0x43015a
  430127:	cmp    BYTE PTR [eax+0xac],0x0
  43012e:	je     0x43015a
  430130:	mov    dl,0x3
  430132:	mov    eax,DWORD PTR [ebp-0x4]
  430135:	call   0x424cf4
  43013a:	mov    eax,DWORD PTR [ebp-0x4]
  43013d:	mov    eax,DWORD PTR [eax+0x8c]
  430143:	mov    edx,DWORD PTR [eax]
  430145:	call   DWORD PTR [edx+0x6c]
  430148:	mov    eax,DWORD PTR [ebp-0x4]
  43014b:	mov    edx,DWORD PTR [eax]
  43014d:	call   DWORD PTR [edx+0x40]
  430150:	mov    dl,0x4
  430152:	mov    eax,DWORD PTR [ebp-0x4]
  430155:	call   0x424cf4
  43015a:	ret    
  43015b:	jmp    0x40481c
  430160:	jmp    0x43011a
  430162:	pop    ecx
  430163:	pop    ebp
  430164:	ret    
  430165:	lea    eax,[eax+0x0]
  430168:	push   ebx
  430169:	cmp    WORD PTR [eax+0x9a],0x0
  430171:	je     0x430183
  430173:	mov    ebx,eax
  430175:	mov    edx,eax
  430177:	mov    eax,DWORD PTR [ebx+0x9c]
  43017d:	call   DWORD PTR [ebx+0x98]
  430183:	pop    ebx
  430184:	ret    
  430185:	lea    eax,[eax+0x0]
  430188:	push   ebx
  430189:	push   esi
  43018a:	push   edi
  43018b:	mov    edi,ecx
  43018d:	mov    esi,edx
  43018f:	mov    ebx,eax
  430191:	mov    eax,ebx
  430193:	mov    edx,DWORD PTR [eax]
  430195:	call   DWORD PTR [edx+0x68]
  430198:	push   edi
  430199:	mov    eax,DWORD PTR [ebx+0x90]
  43019f:	call   0x425d34
  4301a4:	mov    edx,eax
  4301a6:	add    edx,0x8000
  4301ac:	cmp    edx,0xffff
  4301b2:	jbe    0x4301b9
  4301b4:	call   0x403f68
  4301b9:	add    edx,0xffff8000
  4301bf:	mov    ecx,esi
  4301c1:	mov    eax,ebx
  4301c3:	mov    ebx,DWORD PTR [eax]
  4301c5:	call   DWORD PTR [ebx+0x54]
  4301c8:	pop    edi
  4301c9:	pop    esi
  4301ca:	pop    ebx
  4301cb:	ret    
  4301cc:	push   ebp
  4301cd:	mov    ebp,esp
  4301cf:	push   0x0
  4301d1:	push   ebx
  4301d2:	push   esi
  4301d3:	mov    esi,edx
  4301d5:	mov    ebx,eax
  4301d7:	xor    eax,eax
  4301d9:	push   ebp
  4301da:	push   0x43021a
  4301df:	push   DWORD PTR fs:[eax]
  4301e2:	mov    DWORD PTR fs:[eax],esp
  4301e5:	lea    edx,[ebp-0x4]
  4301e8:	mov    eax,DWORD PTR [ebx+0x90]
  4301ee:	mov    eax,DWORD PTR [eax+0x18]
  4301f1:	mov    ecx,DWORD PTR [eax]
  4301f3:	call   DWORD PTR [ecx+0x1c]
  4301f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4301f9:	mov    dl,0x1
  4301fb:	mov    eax,esi
  4301fd:	call   DWORD PTR [eax]
  4301ff:	call   0x4048fc
  430204:	xor    eax,eax
  430206:	pop    edx
  430207:	pop    ecx
  430208:	pop    ecx
  430209:	mov    DWORD PTR fs:[eax],edx
  43020c:	push   0x430221
  430211:	lea    eax,[ebp-0x4]
  430214:	call   0x404f88
  430219:	ret    
  43021a:	jmp    0x40481c
  43021f:	jmp    0x430211
  430221:	pop    esi
  430222:	pop    ebx
  430223:	pop    ecx
  430224:	pop    ebp
  430225:	ret    
  430226:	mov    eax,eax
  430228:	mov    eax,DWORD PTR [eax+0x90]
  43022e:	mov    edx,DWORD PTR [eax]
  430230:	call   DWORD PTR [edx+0x3c]
  430233:	ret    
  430234:	push   ebp
  430235:	mov    ebp,esp
  430237:	push   ecx
  430238:	push   ebx
  430239:	push   esi
  43023a:	mov    esi,ecx
  43023c:	mov    DWORD PTR [ebp-0x4],edx
  43023f:	mov    ebx,eax
  430241:	mov    eax,DWORD PTR [ebp-0x4]
  430244:	call   0x405408
  430249:	xor    eax,eax
  43024b:	push   ebp
  43024c:	push   0x43029d
  430251:	push   DWORD PTR fs:[eax]
  430254:	mov    DWORD PTR fs:[eax],esp
  430257:	mov    eax,ebx
  430259:	call   0x430654
  43025e:	lea    edx,[ebp-0x4]
  430261:	mov    eax,ebx
  430263:	mov    ecx,DWORD PTR [eax]
  430265:	call   DWORD PTR [ecx+0x4c]
  430268:	mov    edx,DWORD PTR [ebp-0x4]
  43026b:	mov    eax,DWORD PTR [ebx+0x8c]
  430271:	mov    ecx,DWORD PTR [eax]
  430273:	call   DWORD PTR [ecx+0x88]
  430279:	mov    edx,esi
  43027b:	mov    ecx,DWORD PTR [ebp+0x8]
  43027e:	mov    eax,ebx
  430280:	mov    ebx,DWORD PTR [eax]
  430282:	call   DWORD PTR [ebx+0x6c]
  430285:	mov    ebx,eax
  430287:	xor    eax,eax
  430289:	pop    edx
  43028a:	pop    ecx
  43028b:	pop    ecx
  43028c:	mov    DWORD PTR fs:[eax],edx
  43028f:	push   0x4302a4
  430294:	lea    eax,[ebp-0x4]
  430297:	call   0x404f88
  43029c:	ret    
  43029d:	jmp    0x40481c
  4302a2:	jmp    0x430294
  4302a4:	mov    eax,ebx
  4302a6:	pop    esi
  4302a7:	pop    ebx
  4302a8:	pop    ecx
  4302a9:	pop    ebp
  4302aa:	ret    0x4
  4302ad:	lea    eax,[eax+0x0]
  4302b0:	push   ebx
  4302b1:	push   esi
  4302b2:	push   edi
  4302b3:	mov    ebx,ecx
  4302b5:	mov    esi,edx
  4302b7:	mov    edi,eax
  4302b9:	mov    ecx,ebx
  4302bb:	mov    edx,esi
  4302bd:	mov    eax,edi
  4302bf:	call   0x41a510
  4302c4:	cmp    bl,0x1
  4302c7:	jne    0x4302e1
  4302c9:	cmp    esi,DWORD PTR [edi+0x8c]
  4302cf:	jne    0x4302e1
  4302d1:	xor    eax,eax
  4302d3:	mov    DWORD PTR [edi+0x8c],eax
  4302d9:	xor    eax,eax
  4302db:	mov    DWORD PTR [edi+0xa0],eax
  4302e1:	pop    edi
  4302e2:	pop    esi
  4302e3:	pop    ebx
  4302e4:	ret    
  4302e5:	lea    eax,[eax+0x0]
  4302e8:	push   ebx
  4302e9:	push   esi
  4302ea:	mov    esi,edx
  4302ec:	mov    ebx,eax
  4302ee:	cmp    esi,DWORD PTR [ebx+0x8c]
  4302f4:	je     0x430373
  4302f6:	cmp    BYTE PTR [ebx+0x94],0x0
  4302fd:	je     0x430318
  4302ff:	cmp    DWORD PTR [ebx+0x8c],0x0
  430306:	je     0x430318
  430308:	lea    edx,[ebx+0x8c]
  43030e:	mov    eax,ds:0x41be90
  430313:	call   0x41b14c
  430318:	mov    BYTE PTR [ebx+0x94],0x0
  43031f:	mov    eax,DWORD PTR [ebx+0x8c]
  430325:	test   eax,eax
  430327:	je     0x430331
  430329:	xor    edx,edx
  43032b:	mov    DWORD PTR [eax+0x80],edx
  430331:	test   esi,esi
  430333:	je     0x43033b
  430335:	mov    DWORD PTR [esi+0x80],ebx
  43033b:	test   esi,esi
  43033d:	je     0x430358
  43033f:	mov    eax,esi
  430341:	mov    edx,DWORD PTR ds:0x42ec00
  430347:	call   0x40422c
  43034c:	test   al,al
  43034e:	je     0x430358
  430350:	mov    DWORD PTR [ebx+0xa0],esi
  430356:	jmp    0x430360
  430358:	xor    eax,eax
  43035a:	mov    DWORD PTR [ebx+0xa0],eax
  430360:	test   esi,esi
  430362:	je     0x43036d
  430364:	mov    edx,ebx
  430366:	mov    eax,esi
  430368:	call   0x41a2b4
  43036d:	mov    DWORD PTR [ebx+0x8c],esi
  430373:	pop    esi
  430374:	pop    ebx
  430375:	ret    
  430376:	mov    eax,eax
  430378:	push   ebp
  430379:	mov    ebp,esp
  43037b:	push   0x0
  43037d:	push   ebx
  43037e:	push   esi
  43037f:	xor    ecx,ecx
  430381:	push   ebp
  430382:	push   0x4303dd
  430387:	push   DWORD PTR fs:[ecx]
  43038a:	mov    DWORD PTR fs:[ecx],esp
  43038d:	mov    esi,DWORD PTR [eax+0x8c]
  430393:	test   esi,esi
  430395:	je     0x4303a2
  430397:	xor    ecx,ecx
  430399:	mov    eax,esi
  43039b:	mov    ebx,DWORD PTR [eax]
  43039d:	call   DWORD PTR [ebx+0x64]
  4303a0:	jmp    0x4303c7
  4303a2:	test   dl,dl
  4303a4:	je     0x4303c7
  4303a6:	lea    edx,[ebp-0x4]
  4303a9:	mov    eax,ds:0x46dbac
  4303ae:	call   0x406f48
  4303b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4303b6:	mov    dl,0x1
  4303b8:	mov    eax,ds:0x41b94c
  4303bd:	call   0x41bdbc
  4303c2:	call   0x4048fc
  4303c7:	xor    eax,eax
  4303c9:	pop    edx
  4303ca:	pop    ecx
  4303cb:	pop    ecx
  4303cc:	mov    DWORD PTR fs:[eax],edx
  4303cf:	push   0x4303e4
  4303d4:	lea    eax,[ebp-0x4]
  4303d7:	call   0x404f88
  4303dc:	ret    
  4303dd:	jmp    0x40481c
  4303e2:	jmp    0x4303d4
  4303e4:	pop    esi
  4303e5:	pop    ebx
  4303e6:	pop    ecx
  4303e7:	pop    ebp
  4303e8:	ret    
  4303e9:	lea    eax,[eax+0x0]
  4303ec:	push   ebp
  4303ed:	mov    ebp,esp
  4303ef:	add    esp,0xfffffff4
  4303f2:	push   esi
  4303f3:	push   edi
  4303f4:	mov    DWORD PTR [ebp-0x8],ecx
  4303f7:	mov    edi,edx
  4303f9:	mov    DWORD PTR [ebp-0x4],eax
  4303fc:	mov    eax,DWORD PTR [ebp+0x8]
  4303ff:	cmp    eax,0xffffffff
  430402:	jle    0x43043f
  430404:	mov    BYTE PTR [ebp-0x9],0x0
  430408:	mov    edx,eax
  43040a:	test   edx,edx
  43040c:	jl     0x430431
  43040e:	inc    edx
  43040f:	xor    esi,esi
  430411:	test   esi,esi
  430413:	jl     0x430419
  430415:	cmp    esi,eax
  430417:	jle    0x43041e
  430419:	call   0x403f68
  43041e:	mov    ecx,DWORD PTR [ebp-0x8]
  430421:	cmp    di,WORD PTR [ecx+esi*2]
  430425:	jne    0x43042d
  430427:	mov    BYTE PTR [ebp-0x9],0x1
  43042b:	jmp    0x430431
  43042d:	inc    esi
  43042e:	dec    edx
  43042f:	jne    0x430411
  430431:	cmp    BYTE PTR [ebp-0x9],0x0
  430435:	jne    0x43043f
  430437:	mov    eax,DWORD PTR [ebp-0x4]
  43043a:	mov    edx,DWORD PTR [eax]
  43043c:	call   DWORD PTR [edx+0x74]
  43043f:	mov    eax,edi
  430441:	pop    edi
  430442:	pop    esi
  430443:	mov    esp,ebp
  430445:	pop    ebp
  430446:	ret    0x4
  430449:	lea    eax,[eax+0x0]
  43044c:	push   ebp
  43044d:	mov    ebp,esp
  43044f:	add    esp,0xfffffff8
  430452:	push   ebx
  430453:	push   esi
  430454:	xor    edx,edx
  430456:	mov    DWORD PTR [ebp-0x4],edx
  430459:	mov    ebx,eax
  43045b:	xor    eax,eax
  43045d:	push   ebp
  43045e:	push   0x430521
  430463:	push   DWORD PTR fs:[eax]
  430466:	mov    DWORD PTR fs:[eax],esp
  430469:	mov    eax,ebx
  43046b:	call   0x430654
  430470:	mov    dl,0x1
  430472:	mov    eax,ds:0x412cf0
  430477:	call   0x404070
  43047c:	mov    DWORD PTR [ebp-0x8],eax
  43047f:	xor    eax,eax
  430481:	push   ebp
  430482:	push   0x430504
  430487:	push   DWORD PTR fs:[eax]
  43048a:	mov    DWORD PTR fs:[eax],esp
  43048d:	lea    ecx,[ebp-0x4]
  430490:	mov    eax,DWORD PTR [ebx+0x8c]
  430496:	mov    edx,0x7fffffff
  43049b:	mov    esi,DWORD PTR [eax]
  43049d:	call   DWORD PTR [esi+0xa8]
  4304a3:	mov    edx,DWORD PTR [ebp-0x4]
  4304a6:	mov    eax,DWORD PTR [ebp-0x8]
  4304a9:	mov    ecx,DWORD PTR [eax]
  4304ab:	call   DWORD PTR [ecx+0x38]
  4304ae:	jmp    0x4304c9
  4304b0:	lea    edx,[ebp-0x4]
  4304b3:	mov    eax,DWORD PTR [ebx+0x8c]
  4304b9:	call   0x428524
  4304be:	mov    edx,DWORD PTR [ebp-0x4]
  4304c1:	mov    eax,DWORD PTR [ebp-0x8]
  4304c4:	mov    ecx,DWORD PTR [eax]
  4304c6:	call   DWORD PTR [ecx+0x38]
  4304c9:	mov    eax,DWORD PTR [ebx+0x90]
  4304cf:	mov    eax,DWORD PTR [eax]
  4304d1:	mov    edx,DWORD PTR [ebp-0x4]
  4304d4:	call   DWORD PTR [eax+0x38]
  4304d7:	test   al,al
  4304d9:	je     0x4304b0
  4304db:	mov    eax,DWORD PTR [ebx+0x90]
  4304e1:	mov    edx,DWORD PTR [ebp-0x8]
  4304e4:	mov    ecx,DWORD PTR [eax]
  4304e6:	call   DWORD PTR [ecx+0x2c]
  4304e9:	xor    eax,eax
  4304eb:	pop    edx
  4304ec:	pop    ecx
  4304ed:	pop    ecx
  4304ee:	mov    DWORD PTR fs:[eax],edx
  4304f1:	push   0x43050b
  4304f6:	lea    edx,[ebp-0x8]
  4304f9:	mov    eax,ds:0x41be90
  4304fe:	call   0x41b14c
  430503:	ret    
  430504:	jmp    0x40481c
  430509:	jmp    0x4304f6
  43050b:	xor    eax,eax
  43050d:	pop    edx
  43050e:	pop    ecx
  43050f:	pop    ecx
  430510:	mov    DWORD PTR fs:[eax],edx
  430513:	push   0x430528
  430518:	lea    eax,[ebp-0x4]
  43051b:	call   0x404f88
  430520:	ret    
  430521:	jmp    0x40481c
  430526:	jmp    0x430518
  430528:	pop    esi
  430529:	pop    ebx
  43052a:	pop    ecx
  43052b:	pop    ecx
  43052c:	pop    ebp
  43052d:	ret    
  43052e:	mov    eax,eax
  430530:	push   ebp
  430531:	mov    ebp,esp
  430533:	push   ecx
  430534:	push   ebx
  430535:	push   esi
  430536:	mov    esi,ecx
  430538:	mov    DWORD PTR [ebp-0x4],edx
  43053b:	mov    ebx,eax
  43053d:	mov    eax,DWORD PTR [ebp-0x4]
  430540:	call   0x405408
  430545:	xor    eax,eax
  430547:	push   ebp
  430548:	push   0x430584
  43054d:	push   DWORD PTR fs:[eax]
  430550:	mov    DWORD PTR fs:[eax],esp
  430553:	mov    eax,ebx
  430555:	mov    edx,DWORD PTR [eax]
  430557:	call   DWORD PTR [edx+0x68]
  43055a:	push   esi
  43055b:	mov    eax,DWORD PTR [ebx+0x90]
  430561:	mov    edx,DWORD PTR [eax+0xc]
  430564:	mov    ecx,DWORD PTR [ebp-0x4]
  430567:	mov    eax,ebx
  430569:	mov    ebx,DWORD PTR [eax]
  43056b:	call   DWORD PTR [ebx+0x58]
  43056e:	xor    eax,eax
  430570:	pop    edx
  430571:	pop    ecx
  430572:	pop    ecx
  430573:	mov    DWORD PTR fs:[eax],edx
  430576:	push   0x43058b
  43057b:	lea    eax,[ebp-0x4]
  43057e:	call   0x404f88
  430583:	ret    
  430584:	jmp    0x40481c
  430589:	jmp    0x43057b
  43058b:	pop    esi
  43058c:	pop    ebx
  43058d:	pop    ecx
  43058e:	pop    ebp
  43058f:	ret    
  430590:	push   ebp
  430591:	mov    ebp,esp
  430593:	add    esp,0xfffffff8
  430596:	push   ebx
  430597:	mov    DWORD PTR [ebp-0x8],ecx
  43059a:	mov    DWORD PTR [ebp-0x4],edx
  43059d:	mov    ebx,eax
  43059f:	mov    eax,DWORD PTR [ebp-0x4]
  4305a2:	call   0x405408
  4305a7:	mov    eax,DWORD PTR [ebp-0x8]
  4305aa:	call   0x405408
  4305af:	xor    eax,eax
  4305b1:	push   ebp
  4305b2:	push   0x4305ff
  4305b7:	push   DWORD PTR fs:[eax]
  4305ba:	mov    DWORD PTR fs:[eax],esp
  4305bd:	cmp    DWORD PTR [ebp-0x8],0x0
  4305c1:	je     0x4305d9
  4305c3:	mov    edx,DWORD PTR [ebp-0x8]
  4305c6:	mov    eax,DWORD PTR [ebp-0x4]
  4305c9:	call   0x41d948
  4305ce:	test   al,al
  4305d0:	jne    0x4305d9
  4305d2:	mov    eax,ebx
  4305d4:	mov    edx,DWORD PTR [eax]
  4305d6:	call   DWORD PTR [edx+0x74]
  4305d9:	mov    eax,DWORD PTR [ebp+0x8]
  4305dc:	mov    edx,DWORD PTR [ebp-0x4]
  4305df:	call   0x404fdc
  4305e4:	xor    eax,eax
  4305e6:	pop    edx
  4305e7:	pop    ecx
  4305e8:	pop    ecx
  4305e9:	mov    DWORD PTR fs:[eax],edx
  4305ec:	push   0x430606
  4305f1:	lea    eax,[ebp-0x8]
  4305f4:	mov    edx,0x2
  4305f9:	call   0x404fac
  4305fe:	ret    
  4305ff:	jmp    0x40481c
  430604:	jmp    0x4305f1
  430606:	pop    ebx
  430607:	pop    ecx
  430608:	pop    ecx
  430609:	pop    ebp
  43060a:	ret    0x4
  43060d:	lea    eax,[eax+0x0]
  430610:	push   ebx
  430611:	push   esi
  430612:	mov    ebx,eax
  430614:	mov    eax,ebx
  430616:	call   0x424f1c
  43061b:	mov    eax,ebx
  43061d:	mov    edx,DWORD PTR [eax]
  43061f:	call   DWORD PTR [edx+0x44]
  430622:	mov    esi,eax
  430624:	mov    DWORD PTR [ebx+0xa4],esi
  43062a:	push   0x0
  43062c:	xor    ecx,ecx
  43062e:	mov    dl,0x1
  430630:	mov    eax,esi
  430632:	call   DWORD PTR [eax+0x34]
  430635:	mov    DWORD PTR [ebx+0x88],eax
  43063b:	push   0x0
  43063d:	xor    ecx,ecx
  43063f:	mov    dl,0x1
  430641:	mov    eax,DWORD PTR [ebx+0xa4]
  430647:	call   DWORD PTR [eax+0x34]
  43064a:	mov    DWORD PTR [ebx+0x90],eax
  430650:	pop    esi
  430651:	pop    ebx
  430652:	ret    
  430653:	nop
  430654:	mov    ecx,0x430674
  430659:	mov    edx,DWORD PTR [eax+0x8c]
  43065f:	mov    eax,ds:0x427200
  430664:	call   0x41be48
  430669:	ret    
  43066a:	add    BYTE PTR [eax],al
  43066c:	(bad)  
  43066d:	(bad)  
  43066e:	(bad)  
  43066f:	dec    DWORD PTR [esi]
  430671:	add    BYTE PTR [eax],al
  430673:	add    BYTE PTR [esi+0x6f],cl
  430676:	je     0x430698
  430678:	arpl   WORD PTR [edi+0x6e],bp
  43067b:	outs   dx,BYTE PTR ds:[esi]
  43067c:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  430681:	add    BYTE PTR cs:[eax],al
  430684:	mov    dl,0x1
  430686:	mov    ecx,DWORD PTR [eax]
  430688:	call   DWORD PTR [ecx+0x60]
  43068b:	ret    
  43068c:	ret    
  43068d:	lea    eax,[eax+0x0]
  430690:	ret    
  430691:	lea    eax,[eax+0x0]
  430694:	lock pop es
  430696:	inc    edi
  430697:	add    BYTE PTR [edi+edi*8],ch
  43069a:	add    BYTE PTR [eax],al
  43069c:	lock pop es
  43069e:	inc    edi
  43069f:	add    BYTE PTR ds:0xf00000ff,ch
  4306a5:	pop    es
  4306a6:	inc    edi
  4306a7:	add    BYTE PTR [esi],ch
  4306a9:	inc    DWORD PTR [eax]
  4306ab:	add    al,dh
  4306ad:	pop    es
  4306ae:	inc    edi
  4306af:	add    BYTE PTR [edi],ch
  4306b1:	inc    DWORD PTR [eax]
  4306b3:	add    al,dh
  4306b5:	pop    es
  4306b6:	inc    edi
  4306b7:	add    BYTE PTR [eax],dl
  4306b9:	inc    DWORD PTR [eax]
  4306bb:	add    al,dh
  4306bd:	pop    es
  4306be:	inc    edi
  4306bf:	add    BYTE PTR [ecx],dl
  4306c1:	inc    DWORD PTR [eax]
  4306c3:	add    al,dh
  4306c5:	pop    es
  4306c6:	inc    edi
  4306c7:	add    BYTE PTR [edx],dl
  4306c9:	inc    DWORD PTR [eax]
  4306cb:	add    al,dh
  4306cd:	pop    es
  4306ce:	inc    edi
  4306cf:	add    BYTE PTR [ebx],dl
  4306d1:	inc    DWORD PTR [eax]
  4306d3:	add    bh,bh
  4306d5:	(bad)  
  4306d6:	(bad)  
  4306d7:	dec    DWORD PTR [eax]
  4306d9:	add    BYTE PTR [eax],al
  4306db:	add    BYTE PTR [ebp+0x53],dl
  4306de:	sub    eax,0x49435341
  4306e3:	dec    ecx
  4306e4:	add    BYTE PTR [eax],al
  4306e6:	add    BYTE PTR [eax],al
  4306e8:	(bad)  
  4306e9:	(bad)  
  4306ea:	(bad)  
  4306eb:	dec    DWORD PTR [esi]
  4306ed:	add    BYTE PTR [eax],al
  4306ef:	add    BYTE PTR [ecx+0x4e],al
  4306f2:	push   ebx
  4306f3:	dec    ecx
  4306f4:	pop    edi
  4306f5:	pop    eax
  4306f6:	xor    ebp,DWORD PTR [esi]
  4306f8:	xor    al,0x2d
  4306fa:	xor    DWORD PTR [ecx],edi
  4306fc:	cmp    BYTE PTR ss:[eax],al
  4306ff:	add    bh,bh
  430701:	(bad)  
  430702:	(bad)  
  430703:	dec    DWORD PTR [eax]
  430705:	add    BYTE PTR [eax],al
  430707:	add    BYTE PTR [ecx+0x73],ch
  43070a:	outs   dx,DWORD PTR ds:[esi]
  43070b:	sub    eax,0x362d7269
  430710:	add    BYTE PTR [eax],al
  430712:	add    BYTE PTR [eax],al
  430714:	(bad)  
  430715:	(bad)  
  430716:	(bad)  
  430717:	dec    DWORD PTR [esi]
  430719:	add    BYTE PTR [eax],al
  43071b:	add    BYTE PTR [ecx+0x4e],al
  43071e:	push   ebx
  43071f:	dec    ecx
  430720:	pop    edi
  430721:	pop    eax
  430722:	xor    ebp,DWORD PTR [esi]
  430724:	xor    al,0x2d
  430726:	xor    DWORD PTR [ecx],edi
  430728:	cmp    BYTE PTR [esi],dh
  43072a:	add    BYTE PTR [eax],al
  43072c:	(bad)  
  43072d:	(bad)  
  43072e:	(bad)  
  43072f:	call   DWORD PTR [eax]
  430731:	add    BYTE PTR [eax],al
  430733:	add    BYTE PTR [ecx+0x53],cl
  430736:	dec    edi
  430737:	pop    edi
  430738:	ss xor al,0x36
  43073b:	imul   esi,DWORD PTR cs:[edx+0x76],0x3939313a
  430743:	xor    DWORD PTR [eax],eax
  430745:	add    BYTE PTR [eax],al
  430747:	add    bh,bh
  430749:	(bad)  
  43074a:	(bad)  
  43074b:	inc    DWORD PTR ds:0x41000000
  430751:	push   ebx
  430752:	inc    ebx
  430753:	dec    ecx
  430754:	dec    ecx
  430755:	add    BYTE PTR [eax],al
  430757:	add    bh,bh
  430759:	(bad)  
  43075a:	(bad)  
  43075b:	dec    DWORD PTR [ecx]
  43075d:	add    BYTE PTR [eax],al
  43075f:	add    BYTE PTR [ecx+0x53],cl
  430762:	dec    edi
  430763:	ss xor al,0x36
  430766:	sub    eax,0x5355
  43076b:	add    bh,bh
  43076d:	(bad)  
  43076e:	(bad)  
  43076f:	inc    DWORD PTR [edx]
  430771:	add    BYTE PTR [eax],al
  430773:	add    BYTE PTR [ebp+0x73],dh
  430776:	add    BYTE PTR [eax],al
  430778:	(bad)  
  430779:	(bad)  
  43077a:	(bad)  
  43077b:	inc    DWORD PTR [esi]
  43077d:	add    BYTE PTR [eax],al
  43077f:	add    BYTE PTR [ecx+0x42],cl
  430782:	dec    ebp
  430783:	xor    esi,DWORD PTR [esi]
  430785:	aaa    
  430786:	add    BYTE PTR [eax],al
  430788:	(bad)  
  430789:	(bad)  
  43078a:	(bad)  
  43078b:	inc    DWORD PTR ds:0x63000000
  430791:	jo     0x4307c6
  430793:	ss aaa 
  430795:	add    BYTE PTR [eax],al
  430797:	add    bh,bh
  430799:	(bad)  
  43079a:	(bad)  
  43079b:	inc    DWORD PTR [edi]
  43079d:	add    BYTE PTR [eax],al
  43079f:	add    BYTE PTR [ebx+0x73],ah
  4307a2:	inc    ecx
  4307a3:	push   ebx
  4307a4:	inc    ebx
  4307a5:	dec    ecx
  4307a6:	dec    ecx
  4307a7:	add    bh,bh
  4307a9:	(bad)  
  4307aa:	(bad)  
  4307ab:	dec    DWORD PTR [edi]
  4307ad:	add    BYTE PTR [eax],al
  4307af:	add    BYTE PTR [ecx+0x53],cl
  4307b2:	dec    edi
  4307b3:	sub    eax,0x34363031
  4307b8:	ss sub eax,0x2d465455
  4307be:	xor    DWORD PTR [eax],eax
  4307c0:	(bad)  
  4307c1:	(bad)  
  4307c2:	(bad)  
  4307c3:	dec    DWORD PTR [esi]
  4307c5:	add    BYTE PTR [eax],al
  4307c7:	add    BYTE PTR [ebx+0x73],ah
  4307ca:	dec    ecx
  4307cb:	push   ebx
  4307cc:	dec    edi
  4307cd:	xor    DWORD PTR [eax],esi
  4307cf:	ss xor al,0x36
  4307d2:	push   ebp
  4307d3:	push   esp
  4307d4:	inc    esi
  4307d5:	xor    DWORD PTR [eax],eax
  4307d7:	add    bh,bh
  4307d9:	(bad)  
  4307da:	(bad)  
  4307db:	call   DWORD PTR [edx]
  4307dd:	add    BYTE PTR [eax],al
  4307df:	add    BYTE PTR [ecx+0x53],cl
  4307e2:	dec    edi
  4307e3:	pop    edi
  4307e4:	ss xor al,0x36
  4307e7:	bound  esp,QWORD PTR cs:[ecx+0x73]
  4307eb:	imul   esp,DWORD PTR [ebx+0x3a],0x33383931
  4307f2:	add    BYTE PTR [eax],al
  4307f4:	(bad)  
  4307f5:	(bad)  
  4307f6:	(bad)  
  4307f7:	inc    DWORD PTR [ebx]
  4307f9:	add    BYTE PTR [eax],al
  4307fb:	add    BYTE PTR [edx+0x65],dh
  4307fe:	data16 add bh,bh
  430801:	(bad)  
  430802:	(bad)  
  430803:	call   DWORD PTR [ecx]
  430805:	add    BYTE PTR [eax],al
  430807:	add    BYTE PTR [ebx+0x73],ah
  43080a:	dec    ecx
  43080b:	push   ebx
  43080c:	dec    edi
  43080d:	ss xor al,0x36
  430810:	bound  esp,QWORD PTR [ecx+0x73]
  430813:	imul   esp,DWORD PTR [ebx+0x31],0x333839
  43081a:	add    BYTE PTR [eax],al
  43081c:	(bad)  
  43081d:	(bad)  
  43081e:	(bad)  
  43081f:	dec    DWORD PTR [ecx]
  430821:	add    BYTE PTR [eax],al
  430823:	add    BYTE PTR [ecx+0x4e],cl
  430826:	push   esi
  430827:	inc    ecx
  430828:	push   edx
  430829:	dec    ecx
  43082a:	inc    ecx
  43082b:	dec    esi
  43082c:	push   esp
  43082d:	add    BYTE PTR [eax],al
  43082f:	add    bh,bh
  430831:	(bad)  
  430832:	(bad)  
  430833:	dec    DWORD PTR [ebx]
  430835:	add    BYTE PTR [eax],al
  430837:	add    BYTE PTR [ebx+0x73],ah
  43083a:	dec    ecx
  43083b:	dec    esi
  43083c:	push   esi
  43083d:	inc    ecx
  43083e:	push   edx
  43083f:	dec    ecx
  430840:	inc    ecx
  430841:	dec    esi
  430842:	push   esp
  430843:	add    bh,bh
  430845:	(bad)  
  430846:	(bad)  
  430847:	call   DWORD PTR [eax]
  430849:	add    BYTE PTR [eax],al
  43084b:	add    BYTE PTR [ecx+0x53],cl
  43084e:	dec    edi
  43084f:	pop    edi
  430850:	ss xor al,0x36
  430853:	imul   esi,DWORD PTR cs:[edx+0x76],0x3839313a
  43085b:	xor    eax,DWORD PTR [eax]
  43085d:	add    BYTE PTR [eax],al
  43085f:	add    bh,bh
  430861:	(bad)  
  430862:	(bad)  
  430863:	dec    DWORD PTR [eax]
  430865:	add    BYTE PTR [eax],al
  430867:	add    BYTE PTR [ecx+0x73],ch
  43086a:	outs   dx,DWORD PTR ds:[esi]
  43086b:	sub    eax,0x322d7269
  430870:	add    BYTE PTR [eax],al
  430872:	add    BYTE PTR [eax],al
  430874:	(bad)  
  430875:	(bad)  
  430876:	(bad)  
  430877:	inc    DWORD PTR [ebx]
  430879:	add    BYTE PTR [eax],al
  43087b:	add    BYTE PTR [ecx+0x72],ch
  43087e:	jbe    0x430880
  430880:	(bad)  
  430881:	(bad)  
  430882:	(bad)  
  430883:	call   DWORD PTR [eax+eax*1]
  430886:	add    BYTE PTR [eax],al
  430888:	arpl   WORD PTR [ebx+0x49],si
  43088b:	push   ebx
  43088c:	dec    edi
  43088d:	xor    cl,BYTE PTR [ecx+0x6e]
  430890:	je     0x4308fe
  430892:	push   edx
  430893:	gs push si
  430896:	gs jb  0x43090c
  430899:	imul   ebp,DWORD PTR [edi+0x6e],0x0
  4308a0:	(bad)  
  4308a1:	(bad)  
  4308a2:	(bad)  
  4308a3:	inc    DWORD PTR [edi]
  4308a5:	add    BYTE PTR [eax],al
  4308a7:	add    BYTE PTR [edx+0x53],al
  4308aa:	pop    edi
  4308ab:	xor    al,0x37
  4308ad:	xor    esi,DWORD PTR [eax]
  4308af:	add    bh,bh
  4308b1:	(bad)  
  4308b2:	(bad)  
  4308b3:	dec    DWORD PTR [eax]
  4308b5:	add    BYTE PTR [eax],al
  4308b7:	add    BYTE PTR [ecx+0x73],ch
  4308ba:	outs   dx,DWORD PTR ds:[esi]
  4308bb:	sub    eax,0x342d7269
  4308c0:	add    BYTE PTR [eax],al
  4308c2:	add    BYTE PTR [eax],al
  4308c4:	(bad)  
  4308c5:	(bad)  
  4308c6:	(bad)  
  4308c7:	dec    DWORD PTR [ecx]
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [ecx+0x53],cl
  4308ce:	dec    edi
  4308cf:	ss xor al,0x36
  4308d2:	sub    eax,0x4247
  4308d7:	add    bh,bh
  4308d9:	(bad)  
  4308da:	(bad)  
  4308db:	inc    DWORD PTR [edx]
  4308dd:	add    BYTE PTR [eax],al
  4308df:	add    BYTE PTR [edi+0x62],ah
  4308e2:	add    BYTE PTR [eax],al
  4308e4:	(bad)  
  4308e5:	(bad)  
  4308e6:	(bad)  
  4308e7:	inc    DWORD PTR [edx]
  4308e9:	add    BYTE PTR [eax],al
  4308eb:	add    BYTE PTR [ebp+0x6b],dh
  4308ee:	add    BYTE PTR [eax],al
  4308f0:	(bad)  
  4308f1:	(bad)  
  4308f2:	(bad)  
  4308f3:	call   DWORD PTR [ebx]
  4308f5:	add    BYTE PTR [eax],al
  4308f7:	add    BYTE PTR [ebx+0x73],ah
  4308fa:	dec    ecx
  4308fb:	push   ebx
  4308fc:	dec    edi
  4308fd:	xor    al,0x55
  4308ff:	outs   dx,BYTE PTR ds:[esi]
  430900:	imul   esi,DWORD PTR [ebp+eiz*2+0x64],0x676e694b
  430908:	outs   dx,DWORD PTR fs:[esi]
  43090a:	ins    DWORD PTR es:[edi],dx
  43090b:	add    bh,bh
  43090d:	(bad)  
  43090e:	(bad)  
  43090f:	dec    DWORD PTR [ecx]
  430911:	add    BYTE PTR [eax],al
  430913:	add    BYTE PTR [esi+0x41],cl
  430916:	push   esp
  430917:	push   ebx
  430918:	sub    eax,0x49464553
  43091d:	add    BYTE PTR [eax],al
  43091f:	add    bh,bh
  430921:	(bad)  
  430922:	(bad)  
  430923:	dec    DWORD PTR [edx]
  430925:	add    BYTE PTR [eax],al
  430927:	add    BYTE PTR [ecx+0x73],ch
  43092a:	outs   dx,DWORD PTR ds:[esi]
  43092b:	sub    eax,0x382d7269
  430930:	sub    eax,0xff000031
  430935:	(bad)  
  430936:	(bad)  
  430937:	dec    DWORD PTR [edx]
  430939:	add    BYTE PTR [eax],al
  43093b:	add    BYTE PTR [ebx+0x73],ah
  43093e:	dec    esi
  43093f:	inc    ecx
  430940:	push   esp
  430941:	push   ebx
  430942:	push   ebx
  430943:	inc    ebp
  430944:	inc    esi
  430945:	dec    ecx
  430946:	add    BYTE PTR [eax],al
  430948:	(bad)  
  430949:	(bad)  
  43094a:	(bad)  
  43094b:	dec    DWORD PTR ds:0x4e000000
  430951:	inc    ecx
  430952:	push   esp
  430953:	push   ebx
  430954:	sub    eax,0x49464553
  430959:	sub    eax,0x444441
  43095e:	add    BYTE PTR [eax],al
  430960:	(bad)  
  430961:	(bad)  
  430962:	(bad)  
  430963:	dec    DWORD PTR [edx]
  430965:	add    BYTE PTR [eax],al
  430967:	add    BYTE PTR [ecx+0x73],ch
  43096a:	outs   dx,DWORD PTR ds:[esi]
  43096b:	sub    eax,0x382d7269
  430970:	sub    eax,0xff000032
  430975:	(bad)  
  430976:	(bad)  
  430977:	dec    DWORD PTR ds:0x63000000
  43097d:	jae    0x4309cd
  43097f:	inc    ecx
  430980:	push   esp
  430981:	push   ebx
  430982:	push   ebx
  430983:	inc    ebp
  430984:	inc    esi
  430985:	dec    ecx
  430986:	inc    ecx
  430987:	inc    esp
  430988:	inc    esp
  430989:	add    BYTE PTR [eax],al
  43098b:	add    bh,bh
  43098d:	(bad)  
  43098e:	(bad)  
  43098f:	dec    DWORD PTR [ecx]
  430991:	add    BYTE PTR [eax],al
  430993:	add    BYTE PTR [esi+0x41],cl
  430996:	push   esp
  430997:	push   ebx
  430998:	sub    eax,0x4f4e4144
  43099d:	add    BYTE PTR [eax],al
  43099f:	add    bh,bh
  4309a1:	(bad)  
  4309a2:	(bad)  
  4309a3:	dec    DWORD PTR [edx]
  4309a5:	add    BYTE PTR [eax],al
  4309a7:	add    BYTE PTR [ecx+0x73],ch
  4309aa:	outs   dx,DWORD PTR ds:[esi]
  4309ab:	sub    eax,0x392d7269
  4309b0:	sub    eax,0xff000031
  4309b5:	(bad)  
  4309b6:	(bad)  
  4309b7:	dec    DWORD PTR [edx]
  4309b9:	add    BYTE PTR [eax],al
  4309bb:	add    BYTE PTR [ebx+0x73],ah
  4309be:	dec    esi
  4309bf:	inc    ecx
  4309c0:	push   esp
  4309c1:	push   ebx
  4309c2:	inc    esp
  4309c3:	inc    ecx
  4309c4:	dec    esi
  4309c5:	dec    edi
  4309c6:	add    BYTE PTR [eax],al
  4309c8:	(bad)  
  4309c9:	(bad)  
  4309ca:	(bad)  
  4309cb:	dec    DWORD PTR ds:0x4e000000
  4309d1:	inc    ecx
  4309d2:	push   esp
  4309d3:	push   ebx
  4309d4:	sub    eax,0x4f4e4144
  4309d9:	sub    eax,0x444441
  4309de:	add    BYTE PTR [eax],al
  4309e0:	(bad)  
  4309e1:	(bad)  
  4309e2:	(bad)  
  4309e3:	dec    DWORD PTR [edx]
  4309e5:	add    BYTE PTR [eax],al
  4309e7:	add    BYTE PTR [ecx+0x73],ch
  4309ea:	outs   dx,DWORD PTR ds:[esi]
  4309eb:	sub    eax,0x392d7269
  4309f0:	sub    eax,0xff000032
  4309f5:	(bad)  
  4309f6:	(bad)  
  4309f7:	dec    DWORD PTR ds:0x63000000
  4309fd:	jae    0x430a4d
  4309ff:	inc    ecx
  430a00:	push   esp
  430a01:	push   ebx
  430a02:	inc    esp
  430a03:	inc    ecx
  430a04:	dec    esi
  430a05:	dec    edi
  430a06:	inc    ecx
  430a07:	inc    esp
  430a08:	inc    esp
  430a09:	add    BYTE PTR [eax],al
  430a0b:	add    bh,bh
  430a0d:	(bad)  
  430a0e:	(bad)  
  430a0f:	dec    DWORD PTR [eax+eax*1]
  430a12:	add    BYTE PTR [eax],al
  430a14:	push   ebx
  430a15:	inc    ebp
  430a16:	dec    esi
  430a17:	pop    edi
  430a18:	cmp    BYTE PTR ds:0x30303230,dh
  430a1e:	pop    edi
  430a1f:	inc    edx
  430a20:	add    BYTE PTR [eax],al
  430a22:	add    BYTE PTR [eax],al
  430a24:	(bad)  
  430a25:	(bad)  
  430a26:	(bad)  
  430a27:	dec    DWORD PTR [ecx]
  430a29:	add    BYTE PTR [eax],al
  430a2b:	add    BYTE PTR [ecx+0x73],ch
  430a2e:	outs   dx,DWORD PTR ds:[esi]
  430a2f:	sub    eax,0x312d7269
  430a34:	xor    BYTE PTR [eax],al
  430a36:	add    BYTE PTR [eax],al
  430a38:	(bad)  
  430a39:	(bad)  
  430a3a:	(bad)  
  430a3b:	inc    DWORD PTR [edx]
  430a3d:	add    BYTE PTR [eax],al
  430a3f:	add    BYTE PTR [esi+0x49],al
  430a42:	add    BYTE PTR [eax],al
  430a44:	(bad)  
  430a45:	(bad)  
  430a46:	(bad)  
  430a47:	dec    DWORD PTR [ecx]
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [ecx+0x53],cl
  430a4e:	dec    edi
  430a4f:	ss xor al,0x36
  430a52:	sub    eax,0x4946
  430a57:	add    bh,bh
  430a59:	(bad)  
  430a5a:	(bad)  
  430a5b:	dec    DWORD PTR [ecx]
  430a5d:	add    BYTE PTR [eax],al
  430a5f:	add    BYTE PTR [ecx+0x53],cl
  430a62:	dec    edi
  430a63:	ss xor al,0x36
  430a66:	sub    eax,0x4553
  430a6b:	add    bh,bh
  430a6d:	(bad)  
  430a6e:	(bad)  
  430a6f:	inc    DWORD PTR [edx]
  430a71:	add    BYTE PTR [eax],al
  430a73:	add    BYTE PTR [ebx+0x65],dh
  430a76:	add    BYTE PTR [eax],al
  430a78:	(bad)  
  430a79:	(bad)  
  430a7a:	(bad)  
  430a7b:	dec    DWORD PTR [esi]
  430a7d:	add    BYTE PTR [eax],al
  430a7f:	add    BYTE PTR [ebx+0x73],ah
  430a82:	dec    ecx
  430a83:	push   ebx
  430a84:	dec    edi
  430a85:	xor    DWORD PTR [eax],esi
  430a87:	push   ebx
  430a88:	ja     0x430aef
  430a8a:	imul   esi,DWORD PTR fs:[ebx+0x68],0xffff0000
  430a92:	(bad)  
  430a93:	dec    DWORD PTR [eax+eax*1]
  430a96:	add    BYTE PTR [eax],al
  430a98:	push   ebx
  430a99:	inc    ebp
  430a9a:	dec    esi
  430a9b:	pop    edi
  430a9c:	cmp    BYTE PTR ds:0x30303230,dh
  430aa2:	pop    edi
  430aa3:	inc    ebx
  430aa4:	add    BYTE PTR [eax],al
  430aa6:	add    BYTE PTR [eax],al
  430aa8:	(bad)  
  430aa9:	(bad)  
  430aaa:	(bad)  
  430aab:	dec    DWORD PTR [ecx]
  430aad:	add    BYTE PTR [eax],al
  430aaf:	add    BYTE PTR [ecx+0x73],ch
  430ab2:	outs   dx,DWORD PTR ds:[esi]
  430ab3:	sub    eax,0x312d7269
  430ab8:	xor    DWORD PTR [eax],eax
  430aba:	add    BYTE PTR [eax],al
  430abc:	(bad)  
  430abd:	(bad)  
  430abe:	(bad)  
  430abf:	dec    DWORD PTR [edx]
  430ac1:	add    BYTE PTR [eax],al
  430ac3:	add    BYTE PTR [ecx+0x53],cl
  430ac6:	dec    edi
  430ac7:	ss xor al,0x36
  430aca:	sub    eax,0x324553
  430acf:	add    bh,bh
  430ad1:	(bad)  
  430ad2:	(bad)  
  430ad3:	inc    DWORD PTR [ebx]
  430ad5:	add    BYTE PTR [eax],al
  430ad7:	add    BYTE PTR [ebx+0x65],dh
  430ada:	xor    al,BYTE PTR [eax]
  430adc:	(bad)  
  430add:	(bad)  
  430ade:	(bad)  
  430adf:	call   DWORD PTR [esi]
  430ae1:	add    BYTE PTR [eax],al
  430ae3:	add    BYTE PTR [ebx+0x73],ah
  430ae6:	dec    ecx
  430ae7:	push   ebx
  430ae8:	dec    edi
  430ae9:	xor    DWORD PTR [ecx],esi
  430aeb:	push   ebx
  430aec:	ja     0x430b53
  430aee:	imul   esi,DWORD PTR fs:[ebx+0x68],0x4e726f46
  430af6:	popa   
  430af7:	ins    DWORD PTR es:[edi],dx
  430af8:	gs jae 0x430afb
  430afb:	add    bh,bh
  430afd:	(bad)  
  430afe:	(bad)  
  430aff:	dec    DWORD PTR [esi]
  430b01:	add    BYTE PTR [eax],al
  430b03:	add    BYTE PTR [ebx+0x53],cl
  430b06:	pop    edi
  430b07:	inc    ebx
  430b08:	pop    edi
  430b09:	xor    eax,0x2d313036
  430b0e:	xor    DWORD PTR [ecx],edi
  430b10:	cmp    BYTE PTR [edi],dh
  430b12:	add    BYTE PTR [eax],al
  430b14:	(bad)  
  430b15:	(bad)  
  430b16:	(bad)  
  430b17:	dec    DWORD PTR [edx]
  430b19:	add    BYTE PTR [eax],al
  430b1b:	add    BYTE PTR [ecx+0x73],ch
  430b1e:	outs   dx,DWORD PTR ds:[esi]
  430b1f:	sub    eax,0x312d7269
  430b24:	xor    al,0x39
  430b26:	add    BYTE PTR [eax],al
  430b28:	(bad)  
  430b29:	(bad)  
  430b2a:	(bad)  
  430b2b:	dec    DWORD PTR [esi]
  430b2d:	add    BYTE PTR [eax],al
  430b2f:	add    BYTE PTR [ebx+0x53],cl
  430b32:	pop    edi
  430b33:	inc    ebx
  430b34:	pop    edi
  430b35:	xor    eax,0x2d313036
  430b3a:	xor    DWORD PTR [ecx],edi
  430b3c:	cmp    BYTE PTR [ecx],bh
  430b3e:	add    BYTE PTR [eax],al
  430b40:	(bad)  
  430b41:	(bad)  
  430b42:	(bad)  
  430b43:	dec    DWORD PTR [eax]
  430b45:	add    BYTE PTR [eax],al
  430b47:	add    BYTE PTR [ebx+0x53],cl
  430b4a:	inc    ebx
  430b4b:	pop    edi
  430b4c:	xor    eax,0x313036
  430b51:	add    BYTE PTR [eax],al
  430b53:	add    bh,bh
  430b55:	(bad)  
  430b56:	(bad)  
  430b57:	inc    DWORD PTR [esi]
  430b59:	add    BYTE PTR [eax],al
  430b5b:	add    BYTE PTR [ebx+0x6f],ch
  430b5e:	jb     0x430bc5
  430b60:	popa   
  430b61:	outs   dx,BYTE PTR ds:[esi]
  430b62:	add    BYTE PTR [eax],al
  430b64:	(bad)  
  430b65:	(bad)  
  430b66:	(bad)  
  430b67:	dec    DWORD PTR ds:0x63000000
  430b6d:	jae    0x430bba
  430b6f:	push   ebx
  430b70:	inc    ebx
  430b71:	xor    eax,0x31313036
  430b76:	cmp    DWORD PTR [eax],edi
  430b78:	aaa    
  430b79:	add    BYTE PTR [eax],al
  430b7b:	add    bh,bh
  430b7d:	(bad)  
  430b7e:	(bad)  
  430b7f:	dec    DWORD PTR [ebx]
  430b81:	add    BYTE PTR [eax],al
  430b83:	add    BYTE PTR [ebx+0x73],ah
  430b86:	dec    ecx
  430b87:	push   ebx
  430b88:	dec    edi
  430b89:	xor    dh,BYTE PTR [eax]
  430b8b:	xor    dh,BYTE PTR [edx]
  430b8d:	dec    ebx
  430b8e:	push   edx
  430b8f:	add    bh,bh
  430b91:	(bad)  
  430b92:	(bad)  
  430b93:	dec    DWORD PTR [ebx]
  430b95:	add    BYTE PTR [eax],al
  430b97:	add    BYTE PTR [ecx+0x53],cl
  430b9a:	dec    edi
  430b9b:	sub    eax,0x32323032
  430ba0:	sub    eax,0xff00524b
  430ba5:	(bad)  
  430ba6:	(bad)  
  430ba7:	inc    DWORD PTR [edi]
  430ba9:	add    BYTE PTR [eax],al
  430bab:	add    BYTE PTR [ebx+0x73],ah
  430bae:	inc    ebp
  430baf:	push   ebp
  430bb0:	inc    ebx
  430bb1:	dec    ebx
  430bb2:	push   edx
  430bb3:	add    bh,bh
  430bb5:	(bad)  
  430bb6:	(bad)  
  430bb7:	inc    DWORD PTR [esi]
  430bb9:	add    BYTE PTR [eax],al
  430bbb:	add    BYTE PTR [ebp+0x55],al
  430bbe:	inc    ebx
  430bbf:	sub    eax,0x524b
  430bc4:	(bad)  
  430bc5:	(bad)  
  430bc6:	(bad)  
  430bc7:	dec    DWORD PTR [ebx]
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [ebx+0x73],ah
  430bce:	dec    ecx
  430bcf:	push   ebx
  430bd0:	dec    edi
  430bd1:	xor    dh,BYTE PTR [eax]
  430bd3:	xor    dh,BYTE PTR [edx]
  430bd5:	dec    edx
  430bd6:	push   eax
  430bd7:	add    bh,bh
  430bd9:	(bad)  
  430bda:	(bad)  
  430bdb:	dec    DWORD PTR [ebx]
  430bdd:	add    BYTE PTR [eax],al
  430bdf:	add    BYTE PTR [ecx+0x53],cl
  430be2:	dec    edi
  430be3:	sub    eax,0x32323032
  430be8:	sub    eax,0xff00504a
  430bed:	(bad)  
  430bee:	(bad)  
  430bef:	dec    DWORD PTR [eax+eax*1]
  430bf2:	add    BYTE PTR [eax],al
  430bf4:	arpl   WORD PTR [ebx+0x49],si
  430bf7:	push   ebx
  430bf8:	dec    edi
  430bf9:	xor    dh,BYTE PTR [eax]
  430bfb:	xor    dh,BYTE PTR [edx]
  430bfd:	dec    edx
  430bfe:	push   eax
  430bff:	xor    al,BYTE PTR [eax]
  430c01:	add    BYTE PTR [eax],al
  430c03:	add    bh,bh
  430c05:	(bad)  
  430c06:	(bad)  
  430c07:	dec    DWORD PTR ds:0x49000000
  430c0d:	push   ebx
  430c0e:	dec    edi
  430c0f:	sub    eax,0x32323032
  430c14:	sub    eax,0x322d504a
  430c19:	add    BYTE PTR [eax],al
  430c1b:	add    bh,bh
  430c1d:	(bad)  
  430c1e:	(bad)  
  430c1f:	dec    DWORD PTR [ebx]
  430c21:	add    BYTE PTR [eax],al
  430c23:	add    BYTE PTR [ecx+0x53],cl
  430c26:	dec    edi
  430c27:	sub    eax,0x32323032
  430c2c:	sub    eax,0xff004e43
  430c31:	(bad)  
  430c32:	(bad)  
  430c33:	dec    DWORD PTR [edi]
  430c35:	add    BYTE PTR [eax],al
  430c37:	add    BYTE PTR [ecx+0x53],cl
  430c3a:	dec    edi
  430c3b:	sub    eax,0x32323032
  430c40:	sub    eax,0x452d4e43
  430c45:	pop    eax
  430c46:	push   esp
  430c47:	add    bh,bh
  430c49:	(bad)  
  430c4a:	(bad)  
  430c4b:	call   DWORD PTR [ecx]
  430c4d:	add    BYTE PTR [eax],al
  430c4f:	add    BYTE PTR [edx+0x49],cl
  430c52:	push   ebx
  430c53:	pop    edi
  430c54:	inc    ebx
  430c55:	xor    dh,BYTE PTR ss:[edx]
  430c58:	xor    BYTE PTR ds:0x39363931,ch
  430c5e:	sub    eax,0x706a
  430c63:	add    bh,bh
  430c65:	(bad)  
  430c66:	(bad)  
  430c67:	dec    DWORD PTR [esi]
  430c69:	add    BYTE PTR [eax],al
  430c6b:	add    BYTE PTR [edx+0x49],cl
  430c6e:	push   ebx
  430c6f:	pop    edi
  430c70:	inc    ebx
  430c71:	xor    dh,BYTE PTR ss:[edx]
  430c74:	xor    BYTE PTR ds:0x39363931,ch
  430c7a:	add    BYTE PTR [eax],al
  430c7c:	(bad)  
  430c7d:	(bad)  
  430c7e:	(bad)  
  430c7f:	dec    DWORD PTR [ecx]
  430c81:	add    BYTE PTR [eax],al
  430c83:	add    BYTE PTR [ecx+0x73],ch
  430c86:	outs   dx,DWORD PTR ds:[esi]
  430c87:	sub    eax,0x312d7269
  430c8c:	xor    eax,DWORD PTR [eax]
  430c8e:	add    BYTE PTR [eax],al
  430c90:	(bad)  
  430c91:	(bad)  
  430c92:	(bad)  
  430c93:	dec    DWORD PTR [eax]
  430c95:	add    BYTE PTR [eax],al
  430c97:	add    BYTE PTR [ebx+0x61],ch
  430c9a:	je     0x430cfd
  430c9c:	imul   esp,DWORD PTR [ecx+0x6e],0x61
  430ca0:	add    BYTE PTR [eax],al
  430ca2:	add    BYTE PTR [eax],al
  430ca4:	(bad)  
  430ca5:	(bad)  
  430ca6:	(bad)  
  430ca7:	inc    DWORD PTR [edi]
  430ca9:	add    BYTE PTR [eax],al
  430cab:	add    BYTE PTR [eax+0x30],bh
  430cae:	xor    dh,BYTE PTR [eax]
  430cb0:	xor    DWORD PTR ds:0xffff0037,ebp
  430cb6:	(bad)  
  430cb7:	call   DWORD PTR [ecx]
  430cb9:	add    BYTE PTR [eax],al
  430cbb:	add    BYTE PTR [ebx+0x73],ah
  430cbe:	dec    ecx
  430cbf:	push   ebx
  430cc0:	dec    edi
  430cc1:	xor    DWORD PTR [ebx],esi
  430cc3:	dec    edx
  430cc4:	dec    ecx
  430cc5:	push   ebx
  430cc6:	inc    ebx
  430cc7:	xor    dh,BYTE PTR ss:[edx]
  430cca:	xor    BYTE PTR [edx+0x70],ch
  430ccd:	add    BYTE PTR [eax],al
  430ccf:	add    bh,bh
  430cd1:	(bad)  
  430cd2:	(bad)  
  430cd3:	call   DWORD PTR [ecx]
  430cd5:	add    BYTE PTR [eax],al
  430cd7:	add    BYTE PTR [edx+0x49],cl
  430cda:	push   ebx
  430cdb:	pop    edi
  430cdc:	inc    ebx
  430cdd:	xor    dh,BYTE PTR ss:[edx]
  430ce0:	xor    BYTE PTR ds:0x39363931,ch
  430ce6:	sub    eax,0x6f72
  430ceb:	add    bh,bh
  430ced:	(bad)  
  430cee:	(bad)  
  430cef:	dec    DWORD PTR [ecx]
  430cf1:	add    BYTE PTR [eax],al
  430cf3:	add    BYTE PTR [ecx+0x73],ch
  430cf6:	outs   dx,DWORD PTR ds:[esi]
  430cf7:	sub    eax,0x312d7269
  430cfc:	xor    al,0x0
  430cfe:	add    BYTE PTR [eax],al
  430d00:	(bad)  
  430d01:	(bad)  
  430d02:	(bad)  
  430d03:	inc    DWORD PTR [edx]
  430d05:	add    BYTE PTR [eax],al
  430d07:	add    BYTE PTR [edx+0x70],ch
  430d0a:	add    BYTE PTR [eax],al
  430d0c:	(bad)  
  430d0d:	(bad)  
  430d0e:	(bad)  
  430d0f:	dec    DWORD PTR [ecx]
  430d11:	add    BYTE PTR [eax],al
  430d13:	add    BYTE PTR [ecx+0x53],cl
  430d16:	dec    edi
  430d17:	ss xor al,0x36
  430d1a:	sub    eax,0x504a
  430d1f:	add    bh,bh
  430d21:	(bad)  
  430d22:	(bad)  
  430d23:	call   DWORD PTR [ecx]
  430d25:	add    BYTE PTR [eax],al
  430d27:	add    BYTE PTR [ebx+0x73],ah
  430d2a:	dec    ecx
  430d2b:	push   ebx
  430d2c:	dec    edi
  430d2d:	xor    DWORD PTR [edx+ecx*2],esi
  430d30:	dec    ecx
  430d31:	push   ebx
  430d32:	inc    ebx
  430d33:	xor    dh,BYTE PTR ss:[edx]
  430d36:	xor    BYTE PTR [edx+0x6f],dh
  430d39:	add    BYTE PTR [eax],al
  430d3b:	add    bh,bh
  430d3d:	(bad)  
  430d3e:	(bad)  
  430d3f:	inc    DWORD PTR [edx]
  430d41:	add    BYTE PTR [eax],al
  430d43:	add    BYTE PTR [ecx+0x54],cl
  430d46:	add    BYTE PTR [eax],al
  430d48:	(bad)  
  430d49:	(bad)  
  430d4a:	(bad)  
  430d4b:	dec    DWORD PTR [ecx]
  430d4d:	add    BYTE PTR [eax],al
  430d4f:	add    BYTE PTR [ecx+0x73],ch
  430d52:	outs   dx,DWORD PTR ds:[esi]
  430d53:	sub    eax,0x312d7269
  430d58:	xor    eax,0xff000000
  430d5d:	(bad)  
  430d5e:	(bad)  
  430d5f:	dec    DWORD PTR [ecx]
  430d61:	add    BYTE PTR [eax],al
  430d63:	add    BYTE PTR [ecx+0x53],cl
  430d66:	dec    edi
  430d67:	ss xor al,0x36
  430d6a:	sub    eax,0x5449
  430d6f:	add    bh,bh
  430d71:	(bad)  
  430d72:	(bad)  
  430d73:	dec    DWORD PTR [esi]
  430d75:	add    BYTE PTR [eax],al
  430d77:	add    BYTE PTR [ebx+0x73],ah
  430d7a:	dec    ecx
  430d7b:	push   ebx
  430d7c:	dec    edi
  430d7d:	xor    DWORD PTR ds:0x6c617449,esi
  430d83:	imul   esp,DWORD PTR [ecx+0x6e],0xffff0000
  430d8a:	(bad)  
  430d8b:	inc    DWORD PTR [edx]
  430d8d:	add    BYTE PTR [eax],al
  430d8f:	add    BYTE PTR [eax+0x54],dl
  430d92:	add    BYTE PTR [eax],al
  430d94:	(bad)  
  430d95:	(bad)  
  430d96:	(bad)  
  430d97:	dec    DWORD PTR [ecx]
  430d99:	add    BYTE PTR [eax],al
  430d9b:	add    BYTE PTR [ecx+0x73],ch
  430d9e:	outs   dx,DWORD PTR ds:[esi]
  430d9f:	sub    eax,0x312d7269
  430da4:	add    BYTE PTR ss:[eax],al
  430da7:	add    bh,bh
  430da9:	(bad)  
  430daa:	(bad)  
  430dab:	dec    DWORD PTR [ecx]
  430dad:	add    BYTE PTR [eax],al
  430daf:	add    BYTE PTR [ecx+0x53],cl
  430db2:	dec    edi
  430db3:	ss xor al,0x36
  430db6:	sub    eax,0x5450
  430dbb:	add    bh,bh
  430dbd:	(bad)  
  430dbe:	(bad)  
  430dbf:	call   DWORD PTR [ecx]
  430dc1:	add    BYTE PTR [eax],al
  430dc3:	add    BYTE PTR [ebx+0x73],ah
  430dc6:	dec    ecx
  430dc7:	push   ebx
  430dc8:	dec    edi
  430dc9:	xor    DWORD PTR [esi],esi
  430dcb:	push   eax
  430dcc:	outs   dx,DWORD PTR ds:[esi]
  430dcd:	jb     0x430e43
  430dcf:	jne    0x430e38
  430dd1:	jne    0x430e38
  430dd3:	jae    0x430e3a
  430dd5:	add    BYTE PTR [eax],al
  430dd7:	add    bh,bh
  430dd9:	(bad)  
  430dda:	(bad)  
  430ddb:	inc    DWORD PTR [edx]
  430ddd:	add    BYTE PTR [eax],al
  430ddf:	add    BYTE PTR [ebp+0x53],al
  430de2:	add    BYTE PTR [eax],al
  430de4:	(bad)  
  430de5:	(bad)  
  430de6:	(bad)  
  430de7:	dec    DWORD PTR [ecx]
  430de9:	add    BYTE PTR [eax],al
  430deb:	add    BYTE PTR [ecx+0x73],ch
  430dee:	outs   dx,DWORD PTR ds:[esi]
  430def:	sub    eax,0x312d7269
  430df4:	aaa    
  430df5:	add    BYTE PTR [eax],al
  430df7:	add    bh,bh
  430df9:	(bad)  
  430dfa:	(bad)  
  430dfb:	dec    DWORD PTR [ecx]
  430dfd:	add    BYTE PTR [eax],al
  430dff:	add    BYTE PTR [ecx+0x53],cl
  430e02:	dec    edi
  430e03:	ss xor al,0x36
  430e06:	sub    eax,0x5345
  430e0b:	add    bh,bh
  430e0d:	(bad)  
  430e0e:	(bad)  
  430e0f:	dec    DWORD PTR [esi]
  430e11:	add    BYTE PTR [eax],al
  430e13:	add    BYTE PTR [ebx+0x73],ah
  430e16:	dec    ecx
  430e17:	push   ebx
  430e18:	dec    edi
  430e19:	xor    DWORD PTR [edi],esi
  430e1b:	push   ebx
  430e1c:	jo     0x430e7f
  430e1e:	outs   dx,BYTE PTR ds:[esi]
  430e1f:	imul   esi,DWORD PTR [ebx+0x68],0xffff0000
  430e26:	(bad)  
  430e27:	dec    DWORD PTR [edx]
  430e29:	add    BYTE PTR [eax],al
  430e2b:	add    BYTE PTR [edi+0x72],ah
  430e2e:	gs imul esi,DWORD PTR gs:[edi],0x2d
  430e33:	outs   dx,DWORD PTR ds:[esi]
  430e34:	ins    BYTE PTR es:[edi],dx
  430e35:	add    BYTE PTR fs:[eax],al
  430e38:	(bad)  
  430e39:	(bad)  
  430e3a:	(bad)  
  430e3b:	dec    DWORD PTR [ecx]
  430e3d:	add    BYTE PTR [eax],al
  430e3f:	add    BYTE PTR [ecx+0x73],ch
  430e42:	outs   dx,DWORD PTR ds:[esi]
  430e43:	sub    eax,0x312d7269
  430e48:	cmp    BYTE PTR [eax],al
  430e4a:	add    BYTE PTR [eax],al
  430e4c:	(bad)  
  430e4d:	(bad)  
  430e4e:	(bad)  
  430e4f:	call   DWORD PTR [eax]
  430e51:	add    BYTE PTR [eax],al
  430e53:	add    BYTE PTR [ebx+0x73],ah
  430e56:	dec    ecx
  430e57:	push   ebx
  430e58:	dec    edi
  430e59:	xor    DWORD PTR [eax],edi
  430e5b:	inc    edi
  430e5c:	jb     0x430ec3
  430e5e:	imul   esi,DWORD PTR gs:[edi],0x4f
  430e62:	ins    BYTE PTR es:[edi],dx
  430e63:	add    BYTE PTR fs:[eax],al
  430e66:	add    BYTE PTR [eax],al
  430e68:	(bad)  
  430e69:	(bad)  
  430e6a:	(bad)  
  430e6b:	dec    DWORD PTR [ebx]
  430e6d:	add    BYTE PTR [eax],al
  430e6f:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  430e73:	imul   ebp,DWORD PTR [esi+0x2d],0x65657267
  430e7a:	imul   eax,DWORD PTR [eax],0xffffffff
  430e7d:	(bad)  
  430e7e:	(bad)  
  430e7f:	dec    DWORD PTR [ecx]
  430e81:	add    BYTE PTR [eax],al
  430e83:	add    BYTE PTR [ecx+0x73],ch
  430e86:	outs   dx,DWORD PTR ds:[esi]
  430e87:	sub    eax,0x312d7269
  430e8c:	cmp    DWORD PTR [eax],eax
  430e8e:	add    BYTE PTR [eax],al
  430e90:	(bad)  
  430e91:	(bad)  
  430e92:	(bad)  
  430e93:	call   DWORD PTR [ecx]
  430e95:	add    BYTE PTR [eax],al
  430e97:	add    BYTE PTR [ebx+0x73],ah
  430e9a:	dec    ecx
  430e9b:	push   ebx
  430e9c:	dec    edi
  430e9d:	xor    DWORD PTR [ecx],edi
  430e9f:	dec    esp
  430ea0:	popa   
  430ea1:	je     0x430f0c
  430ea3:	outs   dx,BYTE PTR ds:[esi]
  430ea4:	inc    edi
  430ea5:	jb     0x430f0c
  430ea7:	imul   eax,DWORD PTR gs:[eax],0x0
  430eab:	add    bh,bh
  430ead:	(bad)  
  430eae:	(bad)  
  430eaf:	dec    DWORD PTR [ecx]
  430eb1:	add    BYTE PTR [eax],al
  430eb3:	add    BYTE PTR [ecx+ecx*2+0x4e],al
  430eb7:	pop    edi
  430eb8:	ss xor BYTE PTR ss:[eax],dh
  430ebc:	xor    eax,DWORD PTR [eax]
  430ebe:	add    BYTE PTR [eax],al
  430ec0:	(bad)  
  430ec1:	(bad)  
  430ec2:	(bad)  
  430ec3:	dec    DWORD PTR [ecx]
  430ec5:	add    BYTE PTR [eax],al
  430ec7:	add    BYTE PTR [ecx+0x73],ch
  430eca:	outs   dx,DWORD PTR ds:[esi]
  430ecb:	sub    eax,0x322d7269
  430ed0:	xor    DWORD PTR [eax],eax
  430ed2:	add    BYTE PTR [eax],al
  430ed4:	(bad)  
  430ed5:	(bad)  
  430ed6:	(bad)  
  430ed7:	inc    DWORD PTR [edx]
  430ed9:	add    BYTE PTR [eax],al
  430edb:	add    BYTE PTR [ebp+eiz*2+0x0],ah
  430edf:	add    bh,bh
  430ee1:	(bad)  
  430ee2:	(bad)  
  430ee3:	dec    DWORD PTR [ecx]
  430ee5:	add    BYTE PTR [eax],al
  430ee7:	add    BYTE PTR [ecx+0x53],cl
  430eea:	dec    edi
  430eeb:	ss xor al,0x36
  430eee:	sub    eax,0x4544
  430ef3:	add    bh,bh
  430ef5:	(bad)  
  430ef6:	(bad)  
  430ef7:	dec    DWORD PTR ds:0x63000000
  430efd:	jae    0x430f48
  430eff:	push   ebx
  430f00:	dec    edi
  430f01:	xor    dh,BYTE PTR [ecx]
  430f03:	inc    edi
  430f04:	gs jb  0x430f74
  430f07:	popa   
  430f08:	outs   dx,BYTE PTR ds:[esi]
  430f09:	add    BYTE PTR [eax],al
  430f0b:	add    bh,bh
  430f0d:	(bad)  
  430f0e:	(bad)  
  430f0f:	dec    DWORD PTR ds:0x63000000
  430f15:	jae    0x430f60
  430f17:	push   ebx
  430f18:	dec    edi
  430f19:	xor    dh,BYTE PTR ds:0x6e657246
  430f1f:	arpl   WORD PTR [eax+0x0],bp
  430f22:	add    BYTE PTR [eax],al
  430f24:	(bad)  
  430f25:	(bad)  
  430f26:	(bad)  
  430f27:	dec    DWORD PTR [eax+eax*1]
  430f2a:	add    BYTE PTR [eax],al
  430f2c:	dec    esi
  430f2d:	inc    esi
  430f2e:	pop    edi
  430f2f:	pop    edx
  430f30:	pop    edi
  430f31:	xor    ch,BYTE PTR ss:0x5f303130
  430f38:	add    BYTE PTR [eax],al
  430f3a:	add    BYTE PTR [eax],al
  430f3c:	(bad)  
  430f3d:	(bad)  
  430f3e:	(bad)  
  430f3f:	dec    DWORD PTR [ecx]
  430f41:	add    BYTE PTR [eax],al
  430f43:	add    BYTE PTR [ecx+0x73],ch
  430f46:	outs   dx,DWORD PTR ds:[esi]
  430f47:	sub    eax,0x322d7269
  430f4c:	xor    eax,0xff000000
  430f51:	(bad)  
  430f52:	(bad)  
  430f53:	dec    DWORD PTR [edx]
  430f55:	add    BYTE PTR [eax],al
  430f57:	add    BYTE PTR [ecx+0x53],cl
  430f5a:	dec    edi
  430f5b:	ss xor al,0x36
  430f5e:	sub    eax,0x315246
  430f63:	add    bh,bh
  430f65:	(bad)  
  430f66:	(bad)  
  430f67:	dec    DWORD PTR ds:0x4c000000
  430f6d:	popa   
  430f6e:	je     0x430fd9
  430f70:	outs   dx,BYTE PTR ds:[esi]
  430f71:	sub    eax,0x65657267
  430f76:	imul   ebp,DWORD PTR ds:0x31,0xffffffff
  430f7d:	(bad)  
  430f7e:	(bad)  
  430f7f:	dec    DWORD PTR [ecx]
  430f81:	add    BYTE PTR [eax],al
  430f83:	add    BYTE PTR [ecx+0x73],ch
  430f86:	outs   dx,DWORD PTR ds:[esi]
  430f87:	sub    eax,0x322d7269
  430f8c:	aaa    
  430f8d:	add    BYTE PTR [eax],al
  430f8f:	add    bh,bh
  430f91:	(bad)  
  430f92:	(bad)  
  430f93:	call   DWORD PTR [edx]
  430f95:	add    BYTE PTR [eax],al
  430f97:	add    BYTE PTR [ebx+0x73],ah
  430f9a:	dec    ecx
  430f9b:	push   ebx
  430f9c:	dec    edi
  430f9d:	xor    dh,BYTE PTR [edi]
  430f9f:	dec    esp
  430fa0:	popa   
  430fa1:	je     0x43100c
  430fa3:	outs   dx,BYTE PTR ds:[esi]
  430fa4:	inc    edi
  430fa5:	jb     0x43100c
  430fa7:	imul   esi,DWORD PTR gs:[ecx],0x0
  430fab:	add    bh,bh
  430fad:	(bad)  
  430fae:	(bad)  
  430faf:	dec    DWORD PTR [eax]
  430fb1:	add    BYTE PTR [eax],al
  430fb3:	add    BYTE PTR [ecx+0x53],cl
  430fb6:	dec    edi
  430fb7:	pop    edi
  430fb8:	xor    eax,0x373234
  430fbd:	add    BYTE PTR [eax],al
  430fbf:	add    bh,bh
  430fc1:	(bad)  
  430fc2:	(bad)  
  430fc3:	dec    DWORD PTR [ecx]
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	add    BYTE PTR [ecx+0x73],ch
  430fca:	outs   dx,DWORD PTR ds:[esi]
  430fcb:	sub    eax,0x332d7269
  430fd0:	aaa    
  430fd1:	add    BYTE PTR [eax],al
  430fd3:	add    bh,bh
  430fd5:	(bad)  
  430fd6:	(bad)  
  430fd7:	call   DWORD PTR [ecx]
  430fd9:	add    BYTE PTR [eax],al
  430fdb:	add    BYTE PTR [ebx+0x73],ah
  430fde:	dec    ecx
  430fdf:	push   ebx
  430fe0:	dec    edi
  430fe1:	xor    eax,0x43373234
  430fe6:	jns    0x43105a
  430fe8:	imul   ebp,DWORD PTR [esp+ebp*2+0x69],0x63
  430ff0:	(bad)  
  430ff1:	(bad)  
  430ff2:	(bad)  
  430ff3:	dec    DWORD PTR [esi]
  430ff5:	add    BYTE PTR [eax],al
  430ff7:	add    BYTE PTR [edx+0x49],cl
  430ffa:	push   ebx
  430ffb:	pop    edi
  430ffc:	inc    ebx
  430ffd:	xor    dh,BYTE PTR ss:[edx]
  431000:	ss sub eax,0x38373931
  431006:	add    BYTE PTR [eax],al
  431008:	(bad)  
  431009:	(bad)  
  43100a:	(bad)  
  43100b:	dec    DWORD PTR [ecx]
  43100d:	add    BYTE PTR [eax],al
  43100f:	add    BYTE PTR [ecx+0x73],ch
  431012:	outs   dx,DWORD PTR ds:[esi]
  431013:	sub    eax,0x342d7269
  431018:	xor    al,BYTE PTR [eax]
  43101a:	add    BYTE PTR [eax],al
  43101c:	(bad)  
  43101d:	(bad)  
  43101e:	(bad)  
  43101f:	call   DWORD PTR [ebx]
  431021:	add    BYTE PTR [eax],al
  431023:	add    BYTE PTR [ebx+0x73],ah
  431026:	dec    ecx
  431027:	push   ebx
  431028:	dec    edi
  431029:	xor    al,0x32
  43102b:	dec    edx
  43102c:	dec    ecx
  43102d:	push   ebx
  43102e:	inc    ebx
  43102f:	xor    dh,BYTE PTR ss:[edx]
  431032:	xor    DWORD PTR ss:[ecx],edi
  431035:	aaa    
  431036:	cmp    BYTE PTR [eax],al
  431038:	(bad)  
  431039:	(bad)  
  43103a:	(bad)  
  43103b:	dec    DWORD PTR [ebx]
  43103d:	add    BYTE PTR [eax],al
  43103f:	add    BYTE PTR [edx+0x53],al
  431042:	pop    edi
  431043:	jbe    0x4310ae
  431045:	gs ja  0x4310ac
  431048:	popa   
  431049:	je     0x4310ac
  43104b:	add    bh,bh
  43104d:	(bad)  
  43104e:	(bad)  
  43104f:	dec    DWORD PTR [ecx]
  431051:	add    BYTE PTR [eax],al
  431053:	add    BYTE PTR [ecx+0x73],ch
  431056:	outs   dx,DWORD PTR ds:[esi]
  431057:	sub    eax,0x342d7269
  43105c:	aaa    
  43105d:	add    BYTE PTR [eax],al
  43105f:	add    bh,bh
  431061:	(bad)  
  431062:	(bad)  
  431063:	call   DWORD PTR [ecx]
  431065:	add    BYTE PTR [eax],al
  431067:	add    BYTE PTR [ebx+0x73],ah
  43106a:	dec    ecx
  43106b:	push   ebx
  43106c:	dec    edi
  43106d:	xor    al,0x37
  43106f:	inc    edx
  431070:	push   ebx
  431071:	push   esi
  431072:	imul   esp,DWORD PTR [ebp+0x77],0x61746164
  431079:	add    BYTE PTR [eax],al
  43107b:	add    bh,bh
  43107d:	(bad)  
  43107e:	(bad)  
  43107f:	inc    DWORD PTR [eax+eax*1]
  431082:	add    BYTE PTR [eax],al
  431084:	dec    ecx
  431085:	dec    esi
  431086:	dec    ecx
  431087:	push   ebx
  431088:	add    BYTE PTR [eax],al
  43108a:	add    BYTE PTR [eax],al
  43108c:	(bad)  
  43108d:	(bad)  
  43108e:	(bad)  
  43108f:	dec    DWORD PTR [ecx]
  431091:	add    BYTE PTR [eax],al
  431093:	add    BYTE PTR [ecx+0x73],ch
  431096:	outs   dx,DWORD PTR ds:[esi]
  431097:	sub    eax,0x342d7269
  43109c:	cmp    DWORD PTR [eax],eax
  43109e:	add    BYTE PTR [eax],al
  4310a0:	(bad)  
  4310a1:	(bad)  
  4310a2:	(bad)  
  4310a3:	dec    DWORD PTR [ebx]
  4310a5:	add    BYTE PTR [eax],al
  4310a7:	add    BYTE PTR [ebx+0x73],ah
  4310aa:	dec    ecx
  4310ab:	push   ebx
  4310ac:	dec    edi
  4310ad:	xor    al,0x39
  4310af:	dec    ecx
  4310b0:	dec    esi
  4310b1:	dec    ecx
  4310b2:	push   ebx
  4310b3:	add    bh,bh
  4310b5:	(bad)  
  4310b6:	(bad)  
  4310b7:	inc    DWORD PTR [esi]
  4310b9:	add    BYTE PTR [eax],al
  4310bb:	add    BYTE PTR [ecx+0x4e],cl
  4310be:	dec    ecx
  4310bf:	push   ebx
  4310c0:	sub    eax,0xff000038
  4310c5:	(bad)  
  4310c6:	(bad)  
  4310c7:	dec    DWORD PTR [ecx]
  4310c9:	add    BYTE PTR [eax],al
  4310cb:	add    BYTE PTR [ecx+0x73],ch
  4310ce:	outs   dx,DWORD PTR ds:[esi]
  4310cf:	sub    eax,0x352d7269
  4310d4:	xor    BYTE PTR [eax],al
  4310d6:	add    BYTE PTR [eax],al
  4310d8:	(bad)  
  4310d9:	(bad)  
  4310da:	(bad)  
  4310db:	dec    DWORD PTR [eax+eax*1]
  4310de:	add    BYTE PTR [eax],al
  4310e0:	arpl   WORD PTR [ebx+0x49],si
  4310e3:	push   ebx
  4310e4:	dec    edi
  4310e5:	xor    eax,0x494e4930
  4310ea:	push   ebx
  4310eb:	cmp    BYTE PTR [eax],al
  4310ed:	add    BYTE PTR [eax],al
  4310ef:	add    bh,bh
  4310f1:	(bad)  
  4310f2:	(bad)  
  4310f3:	dec    DWORD PTR ds:0x49000000
  4310f9:	dec    esi
  4310fa:	dec    ecx
  4310fb:	push   ebx
  4310fc:	sub    eax,0x69727963
  431101:	ins    BYTE PTR es:[edi],dx
  431102:	ins    BYTE PTR es:[edi],dx
  431103:	imul   esp,DWORD PTR [ebx+0x0],0xffff0000
  43110a:	(bad)  
  43110b:	dec    DWORD PTR [ecx]
  43110d:	add    BYTE PTR [eax],al
  43110f:	add    BYTE PTR [ecx+0x73],ch
  431112:	outs   dx,DWORD PTR ds:[esi]
  431113:	sub    eax,0x352d7269
  431118:	xor    DWORD PTR [eax],eax
  43111a:	add    BYTE PTR [eax],al
  43111c:	(bad)  
  43111d:	(bad)  
  43111e:	(bad)  
  43111f:	call   DWORD PTR [ebx]
  431121:	add    BYTE PTR [eax],al
  431123:	add    BYTE PTR [ebx+0x73],ah
  431126:	dec    ecx
  431127:	push   ebx
  431128:	dec    edi
  431129:	xor    eax,0x494e4931
  43112e:	push   ebx
  43112f:	inc    ebx
  431130:	jns    0x4311a4
  431132:	imul   ebp,DWORD PTR [esp+ebp*2+0x69],0xffff0063
  43113a:	(bad)  
  43113b:	dec    DWORD PTR ds:0x49000000
  431141:	push   ebx
  431142:	dec    edi
  431143:	pop    edi
  431144:	xor    eax,0x3a373234
  431149:	xor    DWORD PTR [ecx],edi
  43114b:	cmp    BYTE PTR [ecx],dh
  43114d:	add    BYTE PTR [eax],al
  43114f:	add    bh,bh
  431151:	(bad)  
  431152:	(bad)  
  431153:	dec    DWORD PTR [ecx]
  431155:	add    BYTE PTR [eax],al
  431157:	add    BYTE PTR [ecx+0x73],ch
  43115a:	outs   dx,DWORD PTR ds:[esi]
  43115b:	sub    eax,0x352d7269
  431160:	xor    al,0x0
  431162:	add    BYTE PTR [eax],al
  431164:	(bad)  
  431165:	(bad)  
  431166:	(bad)  
  431167:	call   DWORD PTR [ebx]
  431169:	add    BYTE PTR [eax],al
  43116b:	add    BYTE PTR [ecx+0x53],cl
  43116e:	dec    edi
  43116f:	xor    eax,0x43373234
  431174:	jns    0x4311e8
  431176:	imul   ebp,DWORD PTR [esp+ebp*2+0x69],0x38393163
  43117e:	xor    DWORD PTR [eax],eax
  431180:	(bad)  
  431181:	(bad)  
  431182:	(bad)  
  431183:	dec    DWORD PTR ds:0x49000000
  431189:	push   ebx
  43118a:	dec    edi
  43118b:	pop    edi
  43118c:	xor    eax,0x3a383234
  431191:	xor    DWORD PTR [ecx],edi
  431193:	cmp    BYTE PTR [eax],dh
  431195:	add    BYTE PTR [eax],al
  431197:	add    bh,bh
  431199:	(bad)  
  43119a:	(bad)  
  43119b:	dec    DWORD PTR [ecx]
  43119d:	add    BYTE PTR [eax],al
  43119f:	add    BYTE PTR [ecx+0x73],ch
  4311a2:	outs   dx,DWORD PTR ds:[esi]
  4311a3:	sub    eax,0x352d7269
  4311a8:	xor    eax,0xff000000
  4311ad:	(bad)  
  4311ae:	(bad)  
  4311af:	dec    DWORD PTR [esi]
  4311b1:	add    BYTE PTR [eax],al
  4311b3:	add    BYTE PTR [ebx+0x73],ah
  4311b6:	dec    ecx
  4311b7:	push   ebx
  4311b8:	dec    edi
  4311b9:	xor    eax,0x47383234
  4311be:	jb     0x431225
  4311c0:	imul   eax,DWORD PTR gs:[eax],0x0
  4311c4:	(bad)  
  4311c5:	(bad)  
  4311c6:	(bad)  
  4311c7:	dec    DWORD PTR [edx]
  4311c9:	add    BYTE PTR [eax],al
  4311cb:	add    BYTE PTR [edi+0x42],al
  4311ce:	pop    edi
  4311cf:	xor    DWORD PTR [ecx],edi
  4311d1:	cmp    BYTE PTR [eax],bh
  4311d3:	sub    eax,0x3038
  4311d8:	(bad)  
  4311d9:	(bad)  
  4311da:	(bad)  
  4311db:	dec    DWORD PTR [ecx]
  4311dd:	add    BYTE PTR [eax],al
  4311df:	add    BYTE PTR [ecx+0x73],ch
  4311e2:	outs   dx,DWORD PTR ds:[esi]
  4311e3:	sub    eax,0x352d7269
  4311e8:	aaa    
  4311e9:	add    BYTE PTR [eax],al
  4311eb:	add    bh,bh
  4311ed:	(bad)  
  4311ee:	(bad)  
  4311ef:	inc    DWORD PTR [edx]
  4311f1:	add    BYTE PTR [eax],al
  4311f3:	add    BYTE PTR [ebx+0x6e],ah
  4311f6:	add    BYTE PTR [eax],al
  4311f8:	(bad)  
  4311f9:	(bad)  
  4311fa:	(bad)  
  4311fb:	dec    DWORD PTR [ecx]
  4311fd:	add    BYTE PTR [eax],al
  4311ff:	add    BYTE PTR [ecx+0x53],cl
  431202:	dec    edi
  431203:	ss xor al,0x36
  431206:	sub    eax,0x4e43
  43120b:	add    bh,bh
  43120d:	(bad)  
  43120e:	(bad)  
  43120f:	dec    DWORD PTR ds:0x63000000
  431215:	jae    0x431260
  431217:	push   ebx
  431218:	dec    edi
  431219:	xor    eax,0x31424737
  43121e:	cmp    DWORD PTR [eax],edi
  431220:	cmp    BYTE PTR [eax],al
  431222:	add    BYTE PTR [eax],al
  431224:	(bad)  
  431225:	(bad)  
  431226:	(bad)  
  431227:	dec    DWORD PTR [edx]
  431229:	add    BYTE PTR [eax],al
  43122b:	add    BYTE PTR [edi+0x42],al
  43122e:	pop    edi
  43122f:	xor    dh,BYTE PTR [ebx]
  431231:	xor    DWORD PTR [edx],esi
  431233:	sub    eax,0x3038
  431238:	(bad)  
  431239:	(bad)  
  43123a:	(bad)  
  43123b:	dec    DWORD PTR [ecx]
  43123d:	add    BYTE PTR [eax],al
  43123f:	add    BYTE PTR [ecx+0x73],ch
  431242:	outs   dx,DWORD PTR ds:[esi]
  431243:	sub    eax,0x352d7269
  431248:	cmp    BYTE PTR [eax],al
  43124a:	add    BYTE PTR [eax],al
  43124c:	(bad)  
  43124d:	(bad)  
  43124e:	(bad)  
  43124f:	inc    DWORD PTR [edi]
  431251:	add    BYTE PTR [eax],al
  431253:	add    BYTE PTR [ebx+0x68],ah
  431256:	imul   ebp,DWORD PTR [esi+0x65],0xff006573
  43125d:	(bad)  
  43125e:	(bad)  
  43125f:	dec    DWORD PTR [edi]
  431261:	add    BYTE PTR [eax],al
  431263:	add    BYTE PTR [ebx+0x73],ah
  431266:	dec    ecx
  431267:	push   ebx
  431268:	dec    edi
  431269:	xor    eax,0x32424738
  43126e:	xor    esi,DWORD PTR [ecx]
  431270:	xor    bh,BYTE PTR [eax]
  431272:	xor    BYTE PTR [eax],al
  431274:	(bad)  
  431275:	(bad)  
  431276:	(bad)  
  431277:	dec    DWORD PTR [ecx]
  431279:	add    BYTE PTR [eax],al
  43127b:	add    BYTE PTR [esi+0x53],cl
  43127e:	pop    edi
  43127f:	xor    al,0x35
  431281:	xor    eax,0x312d31
  431286:	add    BYTE PTR [eax],al
  431288:	(bad)  
  431289:	(bad)  
  43128a:	(bad)  
  43128b:	dec    DWORD PTR [ecx]
  43128d:	add    BYTE PTR [eax],al
  43128f:	add    BYTE PTR [ecx+0x73],ch
  431292:	outs   dx,DWORD PTR ds:[esi]
  431293:	sub    eax,0x362d7269
  431298:	xor    BYTE PTR [eax],al
  43129a:	add    BYTE PTR [eax],al
  43129c:	(bad)  
  43129d:	(bad)  
  43129e:	(bad)  
  43129f:	dec    DWORD PTR [ecx]
  4312a1:	add    BYTE PTR [eax],al
  4312a3:	add    BYTE PTR [ecx+0x53],cl
  4312a6:	dec    edi
  4312a7:	ss xor al,0x36
  4312aa:	sub    eax,0x4f4e
  4312af:	add    bh,bh
  4312b1:	(bad)  
  4312b2:	(bad)  
  4312b3:	inc    DWORD PTR [edx]
  4312b5:	add    BYTE PTR [eax],al
  4312b7:	add    BYTE PTR [esi+0x6f],ch
  4312ba:	add    BYTE PTR [eax],al
  4312bc:	(bad)  
  4312bd:	(bad)  
  4312be:	(bad)  
  4312bf:	call   DWORD PTR [esi]
  4312c1:	add    BYTE PTR [eax],al
  4312c3:	add    BYTE PTR [ebx+0x73],ah
  4312c6:	dec    ecx
  4312c7:	push   ebx
  4312c8:	dec    edi
  4312c9:	xor    BYTE PTR ss:[ecx+eiz*2+0x6e],al
  4312ce:	imul   esi,DWORD PTR [ebx+0x68],0x77726f4e
  4312d5:	imul   esp,DWORD PTR gs:[bx+di+0x6e],0xffff0000
  4312de:	(bad)  
  4312df:	call   DWORD PTR [ecx]
  4312e1:	add    BYTE PTR [eax],al
  4312e3:	add    BYTE PTR [ebx+0x73],ah
  4312e6:	dec    ecx
  4312e7:	push   ebx
  4312e8:	dec    edi
  4312e9:	xor    BYTE PTR ss:[esi+0x6f],cl
  4312ed:	jb     0x431366
  4312ef:	imul   esp,DWORD PTR gs:[bx+di+0x6e],0x31
  4312f8:	(bad)  
  4312f9:	(bad)  
  4312fa:	(bad)  
  4312fb:	dec    DWORD PTR [ecx]
  4312fd:	add    BYTE PTR [eax],al
  4312ff:	add    BYTE PTR [esi+0x53],cl
  431302:	pop    edi
  431303:	xor    al,0x35
  431305:	xor    eax,0x322d31
  43130a:	add    BYTE PTR [eax],al
  43130c:	(bad)  
  43130d:	(bad)  
  43130e:	(bad)  
  43130f:	dec    DWORD PTR [edx]
  431311:	add    BYTE PTR [eax],al
  431313:	add    BYTE PTR [ecx+0x53],cl
  431316:	dec    edi
  431317:	ss xor al,0x36
  43131a:	sub    eax,0x324f4e
  43131f:	add    bh,bh
  431321:	(bad)  
  431322:	(bad)  
  431323:	dec    DWORD PTR [ecx]
  431325:	add    BYTE PTR [eax],al
  431327:	add    BYTE PTR [ecx+0x73],ch
  43132a:	outs   dx,DWORD PTR ds:[esi]
  43132b:	sub    eax,0x362d7269
  431330:	xor    DWORD PTR [eax],eax
  431332:	add    BYTE PTR [eax],al
  431334:	(bad)  
  431335:	(bad)  
  431336:	(bad)  
  431337:	inc    DWORD PTR [ebx]
  431339:	add    BYTE PTR [eax],al
  43133b:	add    BYTE PTR [esi+0x6f],ch
  43133e:	xor    al,BYTE PTR [eax]
  431340:	(bad)  
  431341:	(bad)  
  431342:	(bad)  
  431343:	call   DWORD PTR [ecx]
  431345:	add    BYTE PTR [eax],al
  431347:	add    BYTE PTR [ebx+0x73],ah
  43134a:	dec    ecx
  43134b:	push   ebx
  43134c:	dec    edi
  43134d:	xor    DWORD PTR ss:[esi+0x6f],ecx
  431351:	jb     0x4313ca
  431353:	imul   esp,DWORD PTR gs:[bx+di+0x6e],0x32
  43135c:	(bad)  
  43135d:	(bad)  
  43135e:	(bad)  
  43135f:	dec    DWORD PTR [ebx]
  431361:	add    BYTE PTR [eax],al
  431363:	add    BYTE PTR [esi+0x46],cl
  431366:	pop    edi
  431367:	pop    edx
  431368:	pop    edi
  431369:	xor    ch,BYTE PTR ss:0x303130
  431370:	(bad)  
  431371:	(bad)  
  431372:	(bad)  
  431373:	dec    DWORD PTR [ecx]
  431375:	add    BYTE PTR [eax],al
  431377:	add    BYTE PTR [ecx+0x73],ch
  43137a:	outs   dx,DWORD PTR ds:[esi]
  43137b:	sub    eax,0x362d7269
  431380:	cmp    DWORD PTR [eax],eax
  431382:	add    BYTE PTR [eax],al
  431384:	(bad)  
  431385:	(bad)  
  431386:	(bad)  
  431387:	dec    DWORD PTR [ecx]
  431389:	add    BYTE PTR [eax],al
  43138b:	add    BYTE PTR [ecx+0x53],cl
  43138e:	dec    edi
  43138f:	ss xor al,0x36
  431392:	sub    eax,0x5246
  431397:	add    bh,bh
  431399:	(bad)  
  43139a:	(bad)  
  43139b:	inc    DWORD PTR [edx]
  43139d:	add    BYTE PTR [eax],al
  43139f:	add    BYTE PTR [esi+0x72],ah
  4313a2:	add    BYTE PTR [eax],al
  4313a4:	(bad)  
  4313a5:	(bad)  
  4313a6:	(bad)  
  4313a7:	dec    DWORD PTR ds:0x63000000
  4313ad:	jae    0x4313f8
  4313af:	push   ebx
  4313b0:	dec    edi
  4313b1:	cmp    DWORD PTR ss:[esi+0x72],eax
  4313b5:	outs   dx,BYTE PTR gs:[esi]
  4313b7:	arpl   WORD PTR [eax+0x0],bp
  4313ba:	add    BYTE PTR [eax],al
  4313bc:	(bad)  
  4313bd:	(bad)  
  4313be:	(bad)  
  4313bf:	dec    DWORD PTR [esi]
  4313c1:	add    BYTE PTR [eax],al
  4313c3:	add    BYTE PTR [esi+0x69],dh
  4313c6:	fs outs dx,DWORD PTR gs:[esi]
  4313c9:	je     0x431430
  4313cb:	js     0x4313fa
  4313cd:	jae    0x431444
  4313cf:	jo     0x431441
  4313d1:	ins    BYTE PTR es:[edi],dx
  4313d2:	add    BYTE PTR [eax],al
  4313d4:	(bad)  
  4313d5:	(bad)  
  4313d6:	(bad)  
  4313d7:	dec    DWORD PTR [ecx]
  4313d9:	add    BYTE PTR [eax],al
  4313db:	add    BYTE PTR [ecx+0x73],ch
  4313de:	outs   dx,DWORD PTR ds:[esi]
  4313df:	sub    eax,0x372d7269
  4313e4:	xor    BYTE PTR [eax],al
  4313e6:	add    BYTE PTR [eax],al
  4313e8:	(bad)  
  4313e9:	(bad)  
  4313ea:	(bad)  
  4313eb:	call   DWORD PTR [eax+eax*1]
  4313ee:	add    BYTE PTR [eax],al
  4313f0:	arpl   WORD PTR [ebx+0x49],si
  4313f3:	push   ebx
  4313f4:	dec    edi
  4313f5:	aaa    
  4313f6:	xor    BYTE PTR [esi+0x69],dl
  4313f9:	fs outs dx,DWORD PTR gs:[esi]
  4313fc:	je     0x431463
  4313fe:	js     0x431453
  431400:	jne    0x431472
  431402:	jo     0x431435
  431404:	add    BYTE PTR [eax],al
  431406:	add    BYTE PTR [eax],al
  431408:	(bad)  
  431409:	(bad)  
  43140a:	(bad)  
  43140b:	inc    DWORD PTR [ebx]
  43140d:	add    BYTE PTR [eax],al
  43140f:	add    BYTE PTR [eax+0x54],dl
  431412:	xor    al,BYTE PTR [eax]
  431414:	(bad)  
  431415:	(bad)  
  431416:	(bad)  
  431417:	dec    DWORD PTR [ecx]
  431419:	add    BYTE PTR [eax],al
  43141b:	add    BYTE PTR [ecx+0x73],ch
  43141e:	outs   dx,DWORD PTR ds:[esi]
  43141f:	sub    eax,0x382d7269
  431424:	xor    al,0x0
  431426:	add    BYTE PTR [eax],al
  431428:	(bad)  
  431429:	(bad)  
  43142a:	(bad)  
  43142b:	dec    DWORD PTR [edx]
  43142d:	add    BYTE PTR [eax],al
  43142f:	add    BYTE PTR [ecx+0x53],cl
  431432:	dec    edi
  431433:	ss xor al,0x36
  431436:	sub    eax,0x325450
  43143b:	add    bh,bh
  43143d:	(bad)  
  43143e:	(bad)  
  43143f:	call   DWORD PTR [edx]
  431441:	add    BYTE PTR [eax],al
  431443:	add    BYTE PTR [ebx+0x73],ah
  431446:	dec    ecx
  431447:	push   ebx
  431448:	dec    edi
  431449:	cmp    BYTE PTR [eax+edx*2],dh
  43144c:	outs   dx,DWORD PTR ds:[esi]
  43144d:	jb     0x4314c3
  43144f:	jne    0x4314b8
  431451:	jne    0x4314b8
  431453:	jae    0x4314ba
  431455:	xor    al,BYTE PTR [eax]
  431457:	add    bh,bh
  431459:	(bad)  
  43145a:	(bad)  
  43145b:	inc    DWORD PTR [ebx]
  43145d:	add    BYTE PTR [eax],al
  43145f:	add    BYTE PTR [ebp+0x53],al
  431462:	xor    al,BYTE PTR [eax]
  431464:	(bad)  
  431465:	(bad)  
  431466:	(bad)  
  431467:	dec    DWORD PTR [ecx]
  431469:	add    BYTE PTR [eax],al
  43146b:	add    BYTE PTR [ecx+0x73],ch
  43146e:	outs   dx,DWORD PTR ds:[esi]
  43146f:	sub    eax,0x382d7269
  431474:	xor    eax,0xff000000
  431479:	(bad)  
  43147a:	(bad)  
  43147b:	dec    DWORD PTR [edx]
  43147d:	add    BYTE PTR [eax],al
  43147f:	add    BYTE PTR [ecx+0x53],cl
  431482:	dec    edi
  431483:	ss xor al,0x36
  431486:	sub    eax,0x325345
  43148b:	add    bh,bh
  43148d:	(bad)  
  43148e:	(bad)  
  43148f:	dec    DWORD PTR [edi]
  431491:	add    BYTE PTR [eax],al
  431493:	add    BYTE PTR [ebx+0x73],ah
  431496:	dec    ecx
  431497:	push   ebx
  431498:	dec    edi
  431499:	cmp    BYTE PTR ds:0x6e617053,dh
  43149f:	imul   esi,DWORD PTR [ebx+0x68],0xffff0032
  4314a6:	(bad)  
  4314a7:	dec    DWORD PTR [edx]
  4314a9:	add    BYTE PTR [eax],al
  4314ab:	add    BYTE PTR [ebp+0x53],cl
  4314ae:	pop    edx
  4314af:	pop    edi
  4314b0:	aaa    
  4314b1:	aaa    
  4314b2:	cmp    DWORD PTR ds:0x332e,esi
  4314b8:	(bad)  
  4314b9:	(bad)  
  4314ba:	(bad)  
  4314bb:	dec    DWORD PTR [ecx]
  4314bd:	add    BYTE PTR [eax],al
  4314bf:	add    BYTE PTR [ecx+0x73],ch
  4314c2:	outs   dx,DWORD PTR ds:[esi]
  4314c3:	sub    eax,0x382d7269
  4314c8:	add    BYTE PTR ss:[eax],al
  4314cb:	add    bh,bh
  4314cd:	(bad)  
  4314ce:	(bad)  
  4314cf:	dec    DWORD PTR [ecx]
  4314d1:	add    BYTE PTR [eax],al
  4314d3:	add    BYTE PTR [ecx+0x53],cl
  4314d6:	dec    edi
  4314d7:	ss xor al,0x36
  4314da:	sub    eax,0x5548
  4314df:	add    bh,bh
  4314e1:	(bad)  
  4314e2:	(bad)  
  4314e3:	inc    DWORD PTR [edx]
  4314e5:	add    BYTE PTR [eax],al
  4314e7:	add    BYTE PTR [eax+0x75],ch
  4314ea:	add    BYTE PTR [eax],al
  4314ec:	(bad)  
  4314ed:	(bad)  
  4314ee:	(bad)  
  4314ef:	call   DWORD PTR [eax]
  4314f1:	add    BYTE PTR [eax],al
  4314f3:	add    BYTE PTR [ebx+0x73],ah
  4314f6:	dec    ecx
  4314f7:	push   ebx
  4314f8:	dec    edi
  4314f9:	cmp    BYTE PTR [esi],dh
  4314fb:	dec    eax
  4314fc:	jne    0x43156c
  4314fe:	addr16 popa 
  431500:	jb     0x43156b
  431502:	popa   
  431503:	outs   dx,BYTE PTR ds:[esi]
  431504:	add    BYTE PTR [eax],al
  431506:	add    BYTE PTR [eax],al
  431508:	(bad)  
  431509:	(bad)  
  43150a:	(bad)  
  43150b:	dec    DWORD PTR [esi]
  43150d:	add    BYTE PTR [eax],al
  43150f:	add    BYTE PTR [edx+0x49],cl
  431512:	push   ebx
  431513:	pop    edi
  431514:	inc    ebx
  431515:	xor    dh,BYTE PTR ss:[edx]
  431518:	ss sub eax,0x33383931
  43151e:	add    BYTE PTR [eax],al
  431520:	(bad)  
  431521:	(bad)  
  431522:	(bad)  
  431523:	dec    DWORD PTR [ecx]
  431525:	add    BYTE PTR [eax],al
  431527:	add    BYTE PTR [ecx+0x73],ch
  43152a:	outs   dx,DWORD PTR ds:[esi]
  43152b:	sub    eax,0x382d7269
  431530:	aaa    
  431531:	add    BYTE PTR [eax],al
  431533:	add    bh,bh
  431535:	(bad)  
  431536:	(bad)  
  431537:	inc    DWORD PTR ds:0x78000000
  43153d:	xor    BYTE PTR [edx],dh
  43153f:	xor    BYTE PTR [eax],bh
  431541:	add    BYTE PTR [eax],al
  431543:	add    bh,bh
  431545:	(bad)  
  431546:	(bad)  
  431547:	dec    DWORD PTR [esi]
  431549:	add    BYTE PTR [eax],al
  43154b:	add    BYTE PTR [edx+0x49],cl
  43154e:	push   ebx
  43154f:	pop    edi
  431550:	pop    eax
  431551:	xor    BYTE PTR [edx],dh
  431553:	xor    BYTE PTR [eax],bh
  431555:	sub    eax,0x33383931
  43155a:	add    BYTE PTR [eax],al
  43155c:	(bad)  
  43155d:	(bad)  
  43155e:	(bad)  
  43155f:	dec    DWORD PTR [edi]
  431561:	add    BYTE PTR [eax],al
  431563:	add    BYTE PTR [ebx+0x73],ah
  431566:	dec    ecx
  431567:	push   ebx
  431568:	dec    edi
  431569:	cmp    BYTE PTR [edi],dh
  43156b:	dec    edx
  43156c:	dec    ecx
  43156d:	push   ebx
  43156e:	pop    eax
  43156f:	xor    BYTE PTR [edx],dh
  431571:	xor    BYTE PTR [eax],bh
  431573:	add    bh,bh
  431575:	(bad)  
  431576:	(bad)  
  431577:	inc    DWORD PTR [esi]
  431579:	add    BYTE PTR [eax],al
  43157b:	add    BYTE PTR [edi+0x72],ah
  43157e:	gs imul esi,DWORD PTR gs:[edi],0x0
  431583:	add    bh,bh
  431585:	(bad)  
  431586:	(bad)  
  431587:	dec    DWORD PTR [ecx]
  431589:	add    BYTE PTR [eax],al
  43158b:	add    BYTE PTR [ecx+0x73],ch
  43158e:	outs   dx,DWORD PTR ds:[esi]
  43158f:	sub    eax,0x382d7269
  431594:	cmp    BYTE PTR [eax],al
  431596:	add    BYTE PTR [eax],al
  431598:	(bad)  
  431599:	(bad)  
  43159a:	(bad)  
  43159b:	dec    DWORD PTR ds:0x63000000
  4315a1:	jae    0x4315ec
  4315a3:	push   ebx
  4315a4:	dec    edi
  4315a5:	cmp    BYTE PTR [eax],bh
  4315a7:	inc    edi
  4315a8:	jb     0x43160f
  4315aa:	imul   esi,DWORD PTR gs:[edi],0x0
  4315ae:	add    BYTE PTR [eax],al
  4315b0:	(bad)  
  4315b1:	(bad)  
  4315b2:	(bad)  
  4315b3:	dec    DWORD PTR [eax]
  4315b5:	add    BYTE PTR [eax],al
  4315b7:	add    BYTE PTR [ecx+0x53],al
  4315ba:	dec    ebp
  4315bb:	dec    edi
  4315bc:	pop    edi
  4315bd:	xor    al,0x34
  4315bf:	cmp    DWORD PTR [eax],eax
  4315c1:	add    BYTE PTR [eax],al
  4315c3:	add    bh,bh
  4315c5:	(bad)  
  4315c6:	(bad)  
  4315c7:	dec    DWORD PTR [eax]
  4315c9:	add    BYTE PTR [eax],al
  4315cb:	add    BYTE PTR [ecx+0x53],cl
  4315ce:	dec    edi
  4315cf:	pop    edi
  4315d0:	cmp    DWORD PTR [eax],esi
  4315d2:	xor    esi,DWORD PTR [esi]
  4315d4:	add    BYTE PTR [eax],al
  4315d6:	add    BYTE PTR [eax],al
  4315d8:	(bad)  
  4315d9:	(bad)  
  4315da:	(bad)  
  4315db:	inc    DWORD PTR [edi]
  4315dd:	add    BYTE PTR [eax],al
  4315df:	add    BYTE PTR [ecx+0x72],ah
  4315e2:	popa   
  4315e3:	bound  ebp,QWORD PTR [ecx+0x63]
  4315e6:	aaa    
  4315e7:	add    bh,bh
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	dec    DWORD PTR [ecx]
  4315ed:	add    BYTE PTR [eax],al
  4315ef:	add    BYTE PTR [ecx+0x73],ch
  4315f2:	outs   dx,DWORD PTR ds:[esi]
  4315f3:	sub    eax,0x382d7269
  4315f8:	cmp    DWORD PTR [eax],eax
  4315fa:	add    BYTE PTR [eax],al
  4315fc:	(bad)  
  4315fd:	(bad)  
  4315fe:	(bad)  
  4315ff:	dec    DWORD PTR [esi]
  431601:	add    BYTE PTR [eax],al
  431603:	add    BYTE PTR [ebx+0x73],ah
  431606:	dec    ecx
  431607:	push   ebx
  431608:	dec    edi
  431609:	cmp    BYTE PTR [ecx],bh
  43160b:	inc    ecx
  43160c:	push   ebx
  43160d:	dec    ebp
  43160e:	dec    edi
  43160f:	xor    al,0x34
  431611:	cmp    DWORD PTR [eax],eax
  431613:	add    bh,bh
  431615:	(bad)  
  431616:	(bad)  
  431617:	dec    DWORD PTR [ecx]
  431619:	add    BYTE PTR [eax],al
  43161b:	add    BYTE PTR [ecx+0x73],ch
  43161e:	outs   dx,DWORD PTR ds:[esi]
  43161f:	sub    eax,0x392d7269
  431624:	xor    BYTE PTR [eax],al
  431626:	add    BYTE PTR [eax],al
  431628:	(bad)  
  431629:	(bad)  
  43162a:	(bad)  
  43162b:	inc    DWORD PTR [edi]
  43162d:	add    BYTE PTR [eax],al
  43162f:	add    BYTE PTR [ebx+0x73],ah
  431632:	dec    ecx
  431633:	push   ebx
  431634:	dec    edi
  431635:	cmp    DWORD PTR [eax],esi
  431637:	add    bh,bh
  431639:	(bad)  
  43163a:	(bad)  
  43163b:	call   DWORD PTR [eax]
  43163d:	add    BYTE PTR [eax],al
  43163f:	add    BYTE PTR [edx+0x49],cl
  431642:	push   ebx
  431643:	pop    edi
  431644:	inc    ebx
  431645:	xor    dh,BYTE PTR ss:[edx]
  431648:	cmp    DWORD PTR ds:0x34383931,ebp
  43164e:	sub    eax,0x61
  431653:	add    bh,bh
  431655:	(bad)  
  431656:	(bad)  
  431657:	dec    DWORD PTR [ecx]
  431659:	add    BYTE PTR [eax],al
  43165b:	add    BYTE PTR [ecx+0x73],ch
  43165e:	outs   dx,DWORD PTR ds:[esi]
  43165f:	sub    eax,0x392d7269
  431664:	xor    DWORD PTR [eax],eax
  431666:	add    BYTE PTR [eax],al
  431668:	(bad)  
  431669:	(bad)  
  43166a:	(bad)  
  43166b:	dec    DWORD PTR [eax]
  43166d:	add    BYTE PTR [eax],al
  43166f:	add    BYTE PTR [edx+0x70],ch
  431672:	sub    eax,0x2d72636f
  431677:	popa   
  431678:	add    BYTE PTR [eax],al
  43167a:	add    BYTE PTR [eax],al
  43167c:	(bad)  
  43167d:	(bad)  
  43167e:	(bad)  
  43167f:	call   DWORD PTR [eax+eax*1]
  431682:	add    BYTE PTR [eax],al
  431684:	arpl   WORD PTR [ebx+0x49],si
  431687:	push   ebx
  431688:	dec    edi
  431689:	cmp    DWORD PTR [ecx],esi
  43168b:	dec    edx
  43168c:	dec    ecx
  43168d:	push   ebx
  43168e:	inc    ebx
  43168f:	xor    dh,BYTE PTR ss:[edx]
  431692:	cmp    DWORD PTR [ecx],esi
  431694:	cmp    DWORD PTR [eax],edi
  431696:	xor    al,0x61
  431698:	add    BYTE PTR [eax],al
  43169a:	add    BYTE PTR [eax],al
  43169c:	(bad)  
  43169d:	(bad)  
  43169e:	(bad)  
  43169f:	call   DWORD PTR [eax]
  4316a1:	add    BYTE PTR [eax],al
  4316a3:	add    BYTE PTR [edx+0x49],cl
  4316a6:	push   ebx
  4316a7:	pop    edi
  4316a8:	inc    ebx
  4316a9:	xor    dh,BYTE PTR ss:[edx]
  4316ac:	cmp    DWORD PTR ds:0x34383931,ebp
  4316b2:	sub    eax,0x62
  4316b7:	add    bh,bh
  4316b9:	(bad)  
  4316ba:	(bad)  
  4316bb:	dec    DWORD PTR [ecx]
  4316bd:	add    BYTE PTR [eax],al
  4316bf:	add    BYTE PTR [ecx+0x73],ch
  4316c2:	outs   dx,DWORD PTR ds:[esi]
  4316c3:	sub    eax,0x392d7269
  4316c8:	xor    al,BYTE PTR [eax]
  4316ca:	add    BYTE PTR [eax],al
  4316cc:	(bad)  
  4316cd:	(bad)  
  4316ce:	(bad)  
  4316cf:	dec    DWORD PTR [edi]
  4316d1:	add    BYTE PTR [eax],al
  4316d3:	add    BYTE PTR [ecx+0x53],cl
  4316d6:	dec    edi
  4316d7:	ss xor al,0x36
  4316da:	sub    eax,0x4f2d504a
  4316df:	inc    ebx
  4316e0:	push   edx
  4316e1:	sub    eax,0xffff0042
  4316e6:	(bad)  
  4316e7:	dec    DWORD PTR [eax]
  4316e9:	add    BYTE PTR [eax],al
  4316eb:	add    BYTE PTR [edx+0x70],ch
  4316ee:	sub    eax,0x2d72636f
  4316f3:	bound  eax,QWORD PTR [eax]
  4316f5:	add    BYTE PTR [eax],al
  4316f7:	add    bh,bh
  4316f9:	(bad)  
  4316fa:	(bad)  
  4316fb:	call   DWORD PTR [eax+eax*1]
  4316fe:	add    BYTE PTR [eax],al
  431700:	arpl   WORD PTR [ebx+0x49],si
  431703:	push   ebx
  431704:	dec    edi
  431705:	cmp    DWORD PTR [edx],esi
  431707:	dec    edx
  431708:	dec    ecx
  431709:	push   ebx
  43170a:	inc    ebx
  43170b:	xor    bh,BYTE PTR ss:[ecx]
  43170e:	cmp    DWORD PTR [ecx],esi
  431710:	cmp    DWORD PTR [eax],edi
  431712:	xor    al,0x62
  431714:	add    BYTE PTR [eax],al
  431716:	add    BYTE PTR [eax],al
  431718:	(bad)  
  431719:	(bad)  
  43171a:	(bad)  
  43171b:	call   DWORD PTR [eax+eax*1]
  43171e:	add    BYTE PTR [eax],al
  431720:	dec    edx
  431721:	dec    ecx
  431722:	push   ebx
  431723:	pop    edi
  431724:	inc    ebx
  431725:	xor    dh,BYTE PTR ss:[edx]
  431728:	cmp    DWORD PTR ds:0x34383931,ebp
  43172e:	sub    eax,0x64612d62
  431733:	add    BYTE PTR fs:[eax],al
  431736:	add    BYTE PTR [eax],al
  431738:	(bad)  
  431739:	(bad)  
  43173a:	(bad)  
  43173b:	dec    DWORD PTR [ecx]
  43173d:	add    BYTE PTR [eax],al
  43173f:	add    BYTE PTR [ecx+0x73],ch
  431742:	outs   dx,DWORD PTR ds:[esi]
  431743:	sub    eax,0x392d7269
  431748:	xor    eax,DWORD PTR [eax]
  43174a:	add    BYTE PTR [eax],al
  43174c:	(bad)  
  43174d:	(bad)  
  43174e:	(bad)  
  43174f:	dec    DWORD PTR [eax+eax*1]
  431752:	add    BYTE PTR [eax],al
  431754:	push   0x70
  431756:	sub    eax,0x2d72636f
  43175b:	bound  ebp,QWORD PTR ds:0x646461
  431761:	add    BYTE PTR [eax],al
  431763:	add    bh,bh
  431765:	(bad)  
  431766:	(bad)  
  431767:	call   DWORD PTR [esi]
  431769:	add    BYTE PTR [eax],al
  43176b:	add    BYTE PTR [ebx+0x73],ah
  43176e:	dec    ecx
  43176f:	push   ebx
  431770:	dec    edi
  431771:	cmp    DWORD PTR [ebx],esi
  431773:	dec    edx
  431774:	dec    ecx
  431775:	push   ebx
  431776:	xor    dh,BYTE PTR ss:[edx]
  431779:	cmp    DWORD PTR [ecx],esi
  43177b:	cmp    DWORD PTR [eax],edi
  43177d:	xor    al,0x62
  43177f:	popa   
  431780:	fs add BYTE PTR fs:[eax],al
  431784:	(bad)  
  431785:	(bad)  
  431786:	(bad)  
  431787:	call   DWORD PTR [ebx]
  431789:	add    BYTE PTR [eax],al
  43178b:	add    BYTE PTR [edx+0x49],cl
  43178e:	push   ebx
  43178f:	pop    edi
  431790:	inc    ebx
  431791:	xor    dh,BYTE PTR ss:[edx]
  431794:	cmp    DWORD PTR ds:0x34383931,ebp
  43179a:	sub    eax,0x646e6168
  43179f:	add    bh,bh
  4317a1:	(bad)  
  4317a2:	(bad)  
  4317a3:	dec    DWORD PTR [ecx]
  4317a5:	add    BYTE PTR [eax],al
  4317a7:	add    BYTE PTR [ecx+0x73],ch
  4317aa:	outs   dx,DWORD PTR ds:[esi]
  4317ab:	sub    eax,0x392d7269
  4317b0:	xor    al,0x0
  4317b2:	add    BYTE PTR [eax],al
  4317b4:	(bad)  
  4317b5:	(bad)  
  4317b6:	(bad)  
  4317b7:	dec    DWORD PTR [ebx]
  4317b9:	add    BYTE PTR [eax],al
  4317bb:	add    BYTE PTR [edx+0x70],ch
  4317be:	sub    eax,0x2d72636f
  4317c3:	push   0x646e61
  4317c8:	(bad)  
  4317c9:	(bad)  
  4317ca:	(bad)  
  4317cb:	call   DWORD PTR [esi]
  4317cd:	add    BYTE PTR [eax],al
  4317cf:	add    BYTE PTR [ebx+0x73],ah
  4317d2:	dec    ecx
  4317d3:	push   ebx
  4317d4:	dec    edi
  4317d5:	cmp    DWORD PTR [edx+ecx*2],esi
  4317d8:	dec    ecx
  4317d9:	push   ebx
  4317da:	xor    dh,BYTE PTR ss:[edx]
  4317dd:	cmp    DWORD PTR [ecx],esi
  4317df:	cmp    DWORD PTR [eax],edi
  4317e1:	xor    al,0x68
  4317e3:	popa   
  4317e4:	outs   dx,BYTE PTR ds:[esi]
  4317e5:	add    BYTE PTR fs:[eax],al
  4317e8:	(bad)  
  4317e9:	(bad)  
  4317ea:	(bad)  
  4317eb:	call   DWORD PTR [edi]
  4317ed:	add    BYTE PTR [eax],al
  4317ef:	add    BYTE PTR [edx+0x49],cl
  4317f2:	push   ebx
  4317f3:	pop    edi
  4317f4:	inc    ebx
  4317f5:	xor    dh,BYTE PTR ss:[edx]
  4317f8:	cmp    DWORD PTR ds:0x34383931,ebp
  4317fe:	sub    eax,0x646e6168
  431803:	sub    eax,0x646461
  431808:	(bad)  
  431809:	(bad)  
  43180a:	(bad)  
  43180b:	dec    DWORD PTR [ecx]
  43180d:	add    BYTE PTR [eax],al
  43180f:	add    BYTE PTR [ecx+0x73],ch
  431812:	outs   dx,DWORD PTR ds:[esi]
  431813:	sub    eax,0x392d7269
  431818:	xor    eax,0xff000000
  43181d:	(bad)  
  43181e:	(bad)  
  43181f:	dec    DWORD PTR [edi]
  431821:	add    BYTE PTR [eax],al
  431823:	add    BYTE PTR [edx+0x70],ch
  431826:	sub    eax,0x2d72636f
  43182b:	push   0x2d646e61
  431830:	popa   
  431831:	fs fs add bh,bh
  431835:	(bad)  
  431836:	(bad)  
  431837:	call   FWORD PTR [ecx]
  431839:	add    BYTE PTR [eax],al
  43183b:	add    BYTE PTR [ebx+0x73],ah
  43183e:	dec    ecx
  43183f:	push   ebx
  431840:	dec    edi
  431841:	cmp    DWORD PTR ds:0x3653494a,esi
  431847:	xor    dh,BYTE PTR [edx]
  431849:	cmp    DWORD PTR [ecx],esi
  43184b:	cmp    DWORD PTR [eax],edi
  43184d:	xor    al,0x68
  43184f:	popa   
  431850:	outs   dx,BYTE PTR ds:[esi]
  431851:	fs popa 
  431853:	fs add BYTE PTR fs:[eax],al
  431857:	add    bh,bh
  431859:	(bad)  
  43185a:	(bad)  
  43185b:	call   DWORD PTR [ebx]
  43185d:	add    BYTE PTR [eax],al
  43185f:	add    BYTE PTR [edx+0x49],cl
  431862:	push   ebx
  431863:	pop    edi
  431864:	inc    ebx
  431865:	xor    dh,BYTE PTR ss:[edx]
  431868:	cmp    DWORD PTR ds:0x34383931,ebp
  43186e:	sub    eax,0x616e616b
  431873:	add    bh,bh
  431875:	(bad)  
  431876:	(bad)  
  431877:	dec    DWORD PTR [ecx]
  431879:	add    BYTE PTR [eax],al
  43187b:	add    BYTE PTR [ecx+0x73],ch
  43187e:	outs   dx,DWORD PTR ds:[esi]
  43187f:	sub    eax,0x392d7269
  431884:	add    BYTE PTR ss:[eax],al
  431887:	add    bh,bh
  431889:	(bad)  
  43188a:	(bad)  
  43188b:	call   DWORD PTR [edi]
  43188d:	add    BYTE PTR [eax],al
  43188f:	add    BYTE PTR [ebx+0x73],ah
  431892:	dec    ecx
  431893:	push   ebx
  431894:	dec    edi
  431895:	cmp    DWORD PTR [esi],esi
  431897:	dec    edx
  431898:	dec    ecx
  431899:	push   ebx
  43189a:	inc    ebx
  43189b:	xor    dh,BYTE PTR ss:[edx]
  43189e:	cmp    DWORD PTR [ecx],esi
  4318a0:	cmp    DWORD PTR [eax],edi
  4318a2:	xor    al,0x6b
  4318a4:	popa   
  4318a5:	outs   dx,BYTE PTR ds:[esi]
  4318a6:	popa   
  4318a7:	add    bh,bh
  4318a9:	(bad)  
  4318aa:	(bad)  
  4318ab:	dec    DWORD PTR ds:0x49000000
  4318b1:	push   ebx
  4318b2:	dec    edi
  4318b3:	pop    edi
  4318b4:	xor    dh,BYTE PTR [eax]
  4318b6:	xor    esi,DWORD PTR [ebx]
  4318b8:	sub    eax,0x33383931
  4318bd:	add    BYTE PTR [eax],al
  4318bf:	add    bh,bh
  4318c1:	(bad)  
  4318c2:	(bad)  
  4318c3:	dec    DWORD PTR [ecx]
  4318c5:	add    BYTE PTR [eax],al
  4318c7:	add    BYTE PTR [ecx+0x73],ch
  4318ca:	outs   dx,DWORD PTR ds:[esi]
  4318cb:	sub    eax,0x392d7269
  4318d0:	cmp    BYTE PTR [eax],al
  4318d2:	add    BYTE PTR [eax],al
  4318d4:	(bad)  
  4318d5:	(bad)  
  4318d6:	(bad)  
  4318d7:	inc    DWORD PTR [eax+eax*1]
  4318da:	add    BYTE PTR [eax],al
  4318dc:	xor    DWORD PTR gs:[ebx],esi
  4318df:	bound  eax,QWORD PTR [eax]
  4318e1:	add    BYTE PTR [eax],al
  4318e3:	add    bh,bh
  4318e5:	(bad)  
  4318e6:	(bad)  
  4318e7:	dec    DWORD PTR [ecx]
  4318e9:	add    BYTE PTR [eax],al
  4318eb:	add    BYTE PTR [ebx+0x73],ah
  4318ee:	dec    ecx
  4318ef:	push   ebx
  4318f0:	dec    edi
  4318f1:	xor    dh,BYTE PTR [eax]
  4318f3:	xor    esi,DWORD PTR [ebx]
  4318f5:	add    BYTE PTR [eax],al
  4318f7:	add    bh,bh
  4318f9:	(bad)  
  4318fa:	(bad)  
  4318fb:	call   DWORD PTR [eax]
  4318fd:	add    BYTE PTR [eax],al
  4318ff:	add    BYTE PTR [ecx+0x4e],al
  431902:	push   ebx
  431903:	dec    ecx
  431904:	pop    edi
  431905:	pop    eax
  431906:	xor    ebp,DWORD PTR [esi]
  431908:	xor    DWORD PTR [ecx],esi
  43190a:	xor    BYTE PTR ds:0x33383931,ch
  431910:	add    BYTE PTR [eax],al
  431912:	add    BYTE PTR [eax],al
  431914:	(bad)  
  431915:	(bad)  
  431916:	(bad)  
  431917:	dec    DWORD PTR [ecx]
  431919:	add    BYTE PTR [eax],al
  43191b:	add    BYTE PTR [ecx+0x73],ch
  43191e:	outs   dx,DWORD PTR ds:[esi]
  43191f:	sub    eax,0x392d7269
  431924:	cmp    DWORD PTR [eax],eax
  431926:	add    BYTE PTR [eax],al
  431928:	(bad)  
  431929:	(bad)  
  43192a:	(bad)  
  43192b:	dec    DWORD PTR ds:0x43000000
  431931:	push   ebx
  431932:	inc    ecx
  431933:	pop    edi
  431934:	push   esp
  431935:	xor    eax,0x312d3030
  43193a:	cmp    DWORD PTR [eax],edi
  43193c:	xor    eax,DWORD PTR [eax]
  43193e:	add    BYTE PTR [eax],al
  431940:	(bad)  
  431941:	(bad)  
  431942:	(bad)  
  431943:	inc    DWORD PTR [esi]
  431945:	add    BYTE PTR [eax],al
  431947:	add    BYTE PTR [esi+0x41],cl
  43194a:	push   eax
  43194b:	dec    esp
  43194c:	push   eax
  43194d:	push   ebx
  43194e:	add    BYTE PTR [eax],al
  431950:	(bad)  
  431951:	(bad)  
  431952:	(bad)  
  431953:	dec    DWORD PTR ds:0x63000000
  431959:	jae    0x4319a4
  43195b:	push   ebx
  43195c:	dec    edi
  43195d:	cmp    DWORD PTR [ecx],edi
  43195f:	dec    esi
  431960:	inc    ecx
  431961:	push   eax
  431962:	dec    esp
  431963:	push   eax
  431964:	push   ebx
  431965:	add    BYTE PTR [eax],al
  431967:	add    bh,bh
  431969:	(bad)  
  43196a:	(bad)  
  43196b:	dec    DWORD PTR [edx]
  43196d:	add    BYTE PTR [eax],al
  43196f:	add    BYTE PTR [ecx+0x53],cl
  431972:	dec    edi
  431973:	sub    eax,0x39353838
  431978:	sub    eax,0xff000031
  43197d:	(bad)  
  43197e:	(bad)  
  43197f:	dec    DWORD PTR [edi]
  431981:	add    BYTE PTR [eax],al
  431983:	add    BYTE PTR [ecx+0x53],cl
  431986:	dec    edi
  431987:	pop    edi
  431988:	cmp    BYTE PTR [eax],bh
  43198a:	xor    eax,0x3a312d39
  43198f:	xor    DWORD PTR [ecx],edi
  431991:	cmp    BYTE PTR [edi],dh
  431993:	add    bh,bh
  431995:	(bad)  
  431996:	(bad)  
  431997:	dec    DWORD PTR [edx]
  431999:	add    BYTE PTR [eax],al
  43199b:	add    BYTE PTR [ecx+0x73],ch
  43199e:	outs   dx,DWORD PTR ds:[esi]
  43199f:	sub    eax,0x312d7269
  4319a4:	xor    BYTE PTR [eax],dh
  4319a6:	add    BYTE PTR [eax],al
  4319a8:	(bad)  
  4319a9:	(bad)  
  4319aa:	(bad)  
  4319ab:	dec    DWORD PTR [edx]
  4319ad:	add    BYTE PTR [eax],al
  4319af:	add    BYTE PTR [ecx+0x53],cl
  4319b2:	dec    edi
  4319b3:	pop    edi
  4319b4:	cmp    BYTE PTR [eax],bh
  4319b6:	xor    eax,0x312d39
  4319bb:	add    bh,bh
  4319bd:	(bad)  
  4319be:	(bad)  
  4319bf:	inc    DWORD PTR [esi]
  4319c1:	add    BYTE PTR [eax],al
  4319c3:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  4319c7:	imul   ebp,DWORD PTR [esi+0x31],0xffff0000
  4319ce:	(bad)  
  4319cf:	inc    DWORD PTR [edx]
  4319d1:	add    BYTE PTR [eax],al
  4319d3:	add    BYTE PTR [ecx+esi*1+0x0],ch
  4319d7:	add    bh,bh
  4319d9:	(bad)  
  4319da:	(bad)  
  4319db:	inc    DWORD PTR [esi]
  4319dd:	add    BYTE PTR [eax],al
  4319df:	add    BYTE PTR [ecx+0x42],cl
  4319e2:	dec    ebp
  4319e3:	cmp    BYTE PTR [ecx],dh
  4319e5:	cmp    DWORD PTR [eax],eax
  4319e7:	add    bh,bh
  4319e9:	(bad)  
  4319ea:	(bad)  
  4319eb:	inc    DWORD PTR ds:0x43000000
  4319f1:	push   eax
  4319f2:	cmp    BYTE PTR [ecx],dh
  4319f4:	cmp    DWORD PTR [eax],eax
  4319f6:	add    BYTE PTR [eax],al
  4319f8:	(bad)  
  4319f9:	(bad)  
  4319fa:	(bad)  
  4319fb:	dec    DWORD PTR [ebx]
  4319fd:	add    BYTE PTR [eax],al
  4319ff:	add    BYTE PTR [ebx+0x73],ah
  431a02:	dec    ecx
  431a03:	push   ebx
  431a04:	dec    edi
  431a05:	dec    esp
  431a06:	popa   
  431a07:	je     0x431a72
  431a09:	outs   dx,BYTE PTR ds:[esi]
  431a0a:	xor    DWORD PTR [eax],eax
  431a0c:	(bad)  
  431a0d:	(bad)  
  431a0e:	(bad)  
  431a0f:	dec    DWORD PTR [edx]
  431a11:	add    BYTE PTR [eax],al
  431a13:	add    BYTE PTR [ecx+0x53],cl
  431a16:	dec    edi
  431a17:	sub    eax,0x39353838
  431a1c:	sub    eax,0xff000032
  431a21:	(bad)  
  431a22:	(bad)  
  431a23:	dec    DWORD PTR [edi]
  431a25:	add    BYTE PTR [eax],al
  431a27:	add    BYTE PTR [ecx+0x53],cl
  431a2a:	dec    edi
  431a2b:	pop    edi
  431a2c:	cmp    BYTE PTR [eax],bh
  431a2e:	xor    eax,0x3a322d39
  431a33:	xor    DWORD PTR [ecx],edi
  431a35:	cmp    BYTE PTR [edi],dh
  431a37:	add    bh,bh
  431a39:	(bad)  
  431a3a:	(bad)  
  431a3b:	dec    DWORD PTR [edx]
  431a3d:	add    BYTE PTR [eax],al
  431a3f:	add    BYTE PTR [ecx+0x73],ch
  431a42:	outs   dx,DWORD PTR ds:[esi]
  431a43:	sub    eax,0x312d7269
  431a48:	xor    BYTE PTR [ecx],dh
  431a4a:	add    BYTE PTR [eax],al
  431a4c:	(bad)  
  431a4d:	(bad)  
  431a4e:	(bad)  
  431a4f:	dec    DWORD PTR [edx]
  431a51:	add    BYTE PTR [eax],al
  431a53:	add    BYTE PTR [ecx+0x53],cl
  431a56:	dec    edi
  431a57:	pop    edi
  431a58:	cmp    BYTE PTR [eax],bh
  431a5a:	xor    eax,0x322d39
  431a5f:	add    bh,bh
  431a61:	(bad)  
  431a62:	(bad)  
  431a63:	inc    DWORD PTR [esi]
  431a65:	add    BYTE PTR [eax],al
  431a67:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  431a6b:	imul   ebp,DWORD PTR [esi+0x32],0xffff0000
  431a72:	(bad)  
  431a73:	inc    DWORD PTR [edx]
  431a75:	add    BYTE PTR [eax],al
  431a77:	add    BYTE PTR [edx+esi*1+0x0],ch
  431a7b:	add    bh,bh
  431a7d:	(bad)  
  431a7e:	(bad)  
  431a7f:	dec    DWORD PTR [ebx]
  431a81:	add    BYTE PTR [eax],al
  431a83:	add    BYTE PTR [ebx+0x73],ah
  431a86:	dec    ecx
  431a87:	push   ebx
  431a88:	dec    edi
  431a89:	dec    esp
  431a8a:	popa   
  431a8b:	je     0x431af6
  431a8d:	outs   dx,BYTE PTR ds:[esi]
  431a8e:	xor    al,BYTE PTR [eax]
  431a90:	(bad)  
  431a91:	(bad)  
  431a92:	(bad)  
  431a93:	dec    DWORD PTR [ecx]
  431a95:	add    BYTE PTR [eax],al
  431a97:	add    BYTE PTR [esi+ebp*1+0x36],dl
  431a9b:	xor    DWORD PTR ds:0x74696237,ebp
  431aa1:	add    BYTE PTR [eax],al
  431aa3:	add    bh,bh
  431aa5:	(bad)  
  431aa6:	(bad)  
  431aa7:	dec    DWORD PTR [edx]
  431aa9:	add    BYTE PTR [eax],al
  431aab:	add    BYTE PTR [ecx+0x73],ch
  431aae:	outs   dx,DWORD PTR ds:[esi]
  431aaf:	sub    eax,0x312d7269
  431ab4:	xor    BYTE PTR [edx],dh
  431ab6:	add    BYTE PTR [eax],al
  431ab8:	(bad)  
  431ab9:	(bad)  
  431aba:	(bad)  
  431abb:	dec    DWORD PTR [edi]
  431abd:	add    BYTE PTR [eax],al
  431abf:	add    BYTE PTR [ebx+0x73],ah
  431ac2:	dec    ecx
  431ac3:	push   ebx
  431ac4:	dec    edi
  431ac5:	xor    DWORD PTR [eax],esi
  431ac7:	xor    dl,BYTE PTR [esi+esi*1+0x31]
  431acb:	aaa    
  431acc:	bound  ebp,QWORD PTR [ecx+0x74]
  431acf:	add    bh,bh
  431ad1:	(bad)  
  431ad2:	(bad)  
  431ad3:	dec    DWORD PTR [ecx]
  431ad5:	add    BYTE PTR [eax],al
  431ad7:	add    BYTE PTR [esi+ebp*1+0x36],dl
  431adb:	xor    DWORD PTR ds:0x74696238,ebp
  431ae1:	add    BYTE PTR [eax],al
  431ae3:	add    bh,bh
  431ae5:	(bad)  
  431ae6:	(bad)  
  431ae7:	inc    DWORD PTR [eax+eax*1]
  431aea:	add    BYTE PTR [eax],al
  431aec:	push   esp
  431aed:	cs xor DWORD PTR ss:[eax],eax
  431af1:	add    BYTE PTR [eax],al
  431af3:	add    bh,bh
  431af5:	(bad)  
  431af6:	(bad)  
  431af7:	dec    DWORD PTR [edx]
  431af9:	add    BYTE PTR [eax],al
  431afb:	add    BYTE PTR [ecx+0x73],ch
  431afe:	outs   dx,DWORD PTR ds:[esi]
  431aff:	sub    eax,0x312d7269
  431b04:	xor    BYTE PTR [ebx],dh
  431b06:	add    BYTE PTR [eax],al
  431b08:	(bad)  
  431b09:	(bad)  
  431b0a:	(bad)  
  431b0b:	dec    DWORD PTR [edi]
  431b0d:	add    BYTE PTR [eax],al
  431b0f:	add    BYTE PTR [ebx+0x73],ah
  431b12:	dec    ecx
  431b13:	push   ebx
  431b14:	dec    edi
  431b15:	xor    DWORD PTR [eax],esi
  431b17:	xor    edx,DWORD PTR [esi+esi*1+0x31]
  431b1b:	cmp    BYTE PTR [edx+0x69],ah
  431b1e:	je     0x431b20
  431b20:	(bad)  
  431b21:	(bad)  
  431b22:	(bad)  
  431b23:	dec    DWORD PTR [edx]
  431b25:	add    BYTE PTR [eax],al
  431b27:	add    BYTE PTR [ecx+0x53],cl
  431b2a:	dec    edi
  431b2b:	sub    eax,0x39353838
  431b30:	sub    eax,0xff000033
  431b35:	(bad)  
  431b36:	(bad)  
  431b37:	dec    DWORD PTR [edi]
  431b39:	add    BYTE PTR [eax],al
  431b3b:	add    BYTE PTR [ecx+0x53],cl
  431b3e:	dec    edi
  431b3f:	pop    edi
  431b40:	cmp    BYTE PTR [eax],bh
  431b42:	xor    eax,0x3a332d39
  431b47:	xor    DWORD PTR [ecx],edi
  431b49:	cmp    BYTE PTR [eax],bh
  431b4b:	add    bh,bh
  431b4d:	(bad)  
  431b4e:	(bad)  
  431b4f:	dec    DWORD PTR [edx]
  431b51:	add    BYTE PTR [eax],al
  431b53:	add    BYTE PTR [ecx+0x73],ch
  431b56:	outs   dx,DWORD PTR ds:[esi]
  431b57:	sub    eax,0x312d7269
  431b5c:	xor    BYTE PTR [ecx],bh
  431b5e:	add    BYTE PTR [eax],al
  431b60:	(bad)  
  431b61:	(bad)  
  431b62:	(bad)  
  431b63:	dec    DWORD PTR [edx]
  431b65:	add    BYTE PTR [eax],al
  431b67:	add    BYTE PTR [ecx+0x53],cl
  431b6a:	dec    edi
  431b6b:	pop    edi
  431b6c:	cmp    BYTE PTR [eax],bh
  431b6e:	xor    eax,0x332d39
  431b73:	add    bh,bh
  431b75:	(bad)  
  431b76:	(bad)  
  431b77:	inc    DWORD PTR [esi]
  431b79:	add    BYTE PTR [eax],al
  431b7b:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  431b7f:	imul   ebp,DWORD PTR [esi+0x33],0xffff0000
  431b86:	(bad)  
  431b87:	inc    DWORD PTR [edx]
  431b89:	add    BYTE PTR [eax],al
  431b8b:	add    BYTE PTR [ebx+esi*1+0x0],ch
  431b8f:	add    bh,bh
  431b91:	(bad)  
  431b92:	(bad)  
  431b93:	dec    DWORD PTR [ebx]
  431b95:	add    BYTE PTR [eax],al
  431b97:	add    BYTE PTR [ebx+0x73],ah
  431b9a:	dec    ecx
  431b9b:	push   ebx
  431b9c:	dec    edi
  431b9d:	dec    esp
  431b9e:	popa   
  431b9f:	je     0x431c0a
  431ba1:	outs   dx,BYTE PTR ds:[esi]
  431ba2:	xor    eax,DWORD PTR [eax]
  431ba4:	(bad)  
  431ba5:	(bad)  
  431ba6:	(bad)  
  431ba7:	dec    DWORD PTR [edx]
  431ba9:	add    BYTE PTR [eax],al
  431bab:	add    BYTE PTR [ecx+0x53],cl
  431bae:	dec    edi
  431baf:	sub    eax,0x39353838
  431bb4:	sub    eax,0xff000034
  431bb9:	(bad)  
  431bba:	(bad)  
  431bbb:	dec    DWORD PTR [edi]
  431bbd:	add    BYTE PTR [eax],al
  431bbf:	add    BYTE PTR [ecx+0x53],cl
  431bc2:	dec    edi
  431bc3:	pop    edi
  431bc4:	cmp    BYTE PTR [eax],bh
  431bc6:	xor    eax,0x3a342d39
  431bcb:	xor    DWORD PTR [ecx],edi
  431bcd:	cmp    BYTE PTR [eax],bh
  431bcf:	add    bh,bh
  431bd1:	(bad)  
  431bd2:	(bad)  
  431bd3:	dec    DWORD PTR [edx]
  431bd5:	add    BYTE PTR [eax],al
  431bd7:	add    BYTE PTR [ecx+0x73],ch
  431bda:	outs   dx,DWORD PTR ds:[esi]
  431bdb:	sub    eax,0x312d7269
  431be0:	xor    DWORD PTR [eax],esi
  431be2:	add    BYTE PTR [eax],al
  431be4:	(bad)  
  431be5:	(bad)  
  431be6:	(bad)  
  431be7:	dec    DWORD PTR [edx]
  431be9:	add    BYTE PTR [eax],al
  431beb:	add    BYTE PTR [ecx+0x53],cl
  431bee:	dec    edi
  431bef:	pop    edi
  431bf0:	cmp    BYTE PTR [eax],bh
  431bf2:	xor    eax,0x342d39
  431bf7:	add    bh,bh
  431bf9:	(bad)  
  431bfa:	(bad)  
  431bfb:	inc    DWORD PTR [esi]
  431bfd:	add    BYTE PTR [eax],al
  431bff:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  431c03:	imul   ebp,DWORD PTR [esi+0x34],0xffff0000
  431c0a:	(bad)  
  431c0b:	inc    DWORD PTR [edx]
  431c0d:	add    BYTE PTR [eax],al
  431c0f:	add    BYTE PTR [esp+esi*1+0x0],ch
  431c13:	add    bh,bh
  431c15:	(bad)  
  431c16:	(bad)  
  431c17:	dec    DWORD PTR [ebx]
  431c19:	add    BYTE PTR [eax],al
  431c1b:	add    BYTE PTR [ebx+0x73],ah
  431c1e:	dec    ecx
  431c1f:	push   ebx
  431c20:	dec    edi
  431c21:	dec    esp
  431c22:	popa   
  431c23:	je     0x431c8e
  431c25:	outs   dx,BYTE PTR ds:[esi]
  431c26:	xor    al,0x0
  431c28:	(bad)  
  431c29:	(bad)  
  431c2a:	(bad)  
  431c2b:	dec    DWORD PTR ds:0x45000000
  431c31:	inc    ebx
  431c32:	dec    ebp
  431c33:	inc    ecx
  431c34:	sub    eax,0x69727963
  431c39:	ins    BYTE PTR es:[edi],dx
  431c3a:	ins    BYTE PTR es:[edi],dx
  431c3b:	imul   esp,DWORD PTR [ebx+0x0],0xffff0000
  431c42:	(bad)  
  431c43:	dec    DWORD PTR [edx]
  431c45:	add    BYTE PTR [eax],al
  431c47:	add    BYTE PTR [ecx+0x73],ch
  431c4a:	outs   dx,DWORD PTR ds:[esi]
  431c4b:	sub    eax,0x312d7269
  431c50:	xor    DWORD PTR [ecx],esi
  431c52:	add    BYTE PTR [eax],al
  431c54:	(bad)  
  431c55:	(bad)  
  431c56:	(bad)  
  431c57:	call   DWORD PTR [eax+eax*1]
  431c5a:	add    BYTE PTR [eax],al
  431c5c:	arpl   WORD PTR [ebx+0x49],si
  431c5f:	push   ebx
  431c60:	dec    edi
  431c61:	xor    DWORD PTR [ecx],esi
  431c63:	xor    DWORD PTR [ebp+0x43],eax
  431c66:	dec    ebp
  431c67:	inc    ecx
  431c68:	inc    ebx
  431c69:	jns    0x431cdd
  431c6b:	imul   ebp,DWORD PTR [esp+ebp*2+0x69],0x63
  431c73:	add    bh,bh
  431c75:	(bad)  
  431c76:	(bad)  
  431c77:	call   DWORD PTR [ecx]
  431c79:	add    BYTE PTR [eax],al
  431c7b:	add    BYTE PTR [ebx+0x53],al
  431c7e:	inc    ecx
  431c7f:	pop    edi
  431c80:	pop    edx
  431c81:	xor    dh,BYTE PTR [ebx+esi*1]
  431c84:	cs xor al,0x2d
  431c87:	xor    DWORD PTR [ecx],edi
  431c89:	cmp    BYTE PTR ds:0x312d,dh
  431c8f:	add    bh,bh
  431c91:	(bad)  
  431c92:	(bad)  
  431c93:	dec    DWORD PTR [edx]
  431c95:	add    BYTE PTR [eax],al
  431c97:	add    BYTE PTR [ecx+0x73],ch
  431c9a:	outs   dx,DWORD PTR ds:[esi]
  431c9b:	sub    eax,0x312d7269
  431ca0:	xor    dh,BYTE PTR [ecx]
  431ca2:	add    BYTE PTR [eax],al
  431ca4:	(bad)  
  431ca5:	(bad)  
  431ca6:	(bad)  
  431ca7:	dec    DWORD PTR [ecx]
  431ca9:	add    BYTE PTR [eax],al
  431cab:	add    BYTE PTR [ecx+0x53],cl
  431cae:	dec    edi
  431caf:	ss xor al,0x36
  431cb2:	sub    eax,0x4143
  431cb7:	add    bh,bh
  431cb9:	(bad)  
  431cba:	(bad)  
  431cbb:	inc    DWORD PTR [esi]
  431cbd:	add    BYTE PTR [eax],al
  431cbf:	add    BYTE PTR [ebx+0x73],ah
  431cc2:	popa   
  431cc3:	aaa    
  431cc4:	sub    eax,0xff000031
  431cc9:	(bad)  
  431cca:	(bad)  
  431ccb:	inc    DWORD PTR [edx]
  431ccd:	add    BYTE PTR [eax],al
  431ccf:	add    BYTE PTR [ebx+0x61],ah
  431cd2:	add    BYTE PTR [eax],al
  431cd4:	(bad)  
  431cd5:	(bad)  
  431cd6:	(bad)  
  431cd7:	call   DWORD PTR [ecx]
  431cd9:	add    BYTE PTR [eax],al
  431cdb:	add    BYTE PTR [ebx+0x73],ah
  431cde:	dec    ecx
  431cdf:	push   ebx
  431ce0:	dec    edi
  431ce1:	xor    DWORD PTR [edx],esi
  431ce3:	xor    DWORD PTR [ebx+0x61],eax
  431ce6:	outs   dx,BYTE PTR ds:[esi]
  431ce7:	popa   
  431ce8:	imul   esp,DWORD PTR fs:[ecx+0x6e],0x31
  431cf0:	(bad)  
  431cf1:	(bad)  
  431cf2:	(bad)  
  431cf3:	call   DWORD PTR [ecx]
  431cf5:	add    BYTE PTR [eax],al
  431cf7:	add    BYTE PTR [ebx+0x53],al
  431cfa:	inc    ecx
  431cfb:	pop    edi
  431cfc:	pop    edx
  431cfd:	xor    dh,BYTE PTR [ebx+esi*1]
  431d00:	cs xor al,0x2d
  431d03:	xor    DWORD PTR [ecx],edi
  431d05:	cmp    BYTE PTR ds:0x322d,dh
  431d0b:	add    bh,bh
  431d0d:	(bad)  
  431d0e:	(bad)  
  431d0f:	dec    DWORD PTR [edx]
  431d11:	add    BYTE PTR [eax],al
  431d13:	add    BYTE PTR [ecx+0x73],ch
  431d16:	outs   dx,DWORD PTR ds:[esi]
  431d17:	sub    eax,0x312d7269
  431d1c:	xor    dh,BYTE PTR [edx]
  431d1e:	add    BYTE PTR [eax],al
  431d20:	(bad)  
  431d21:	(bad)  
  431d22:	(bad)  
  431d23:	dec    DWORD PTR [edx]
  431d25:	add    BYTE PTR [eax],al
  431d27:	add    BYTE PTR [ecx+0x53],cl
  431d2a:	dec    edi
  431d2b:	ss xor al,0x36
  431d2e:	sub    eax,0x324143
  431d33:	add    bh,bh
  431d35:	(bad)  
  431d36:	(bad)  
  431d37:	inc    DWORD PTR [esi]
  431d39:	add    BYTE PTR [eax],al
  431d3b:	add    BYTE PTR [ebx+0x73],ah
  431d3e:	popa   
  431d3f:	aaa    
  431d40:	sub    eax,0xff000032
  431d45:	(bad)  
  431d46:	(bad)  
  431d47:	call   DWORD PTR [ecx]
  431d49:	add    BYTE PTR [eax],al
  431d4b:	add    BYTE PTR [ebx+0x73],ah
  431d4e:	dec    ecx
  431d4f:	push   ebx
  431d50:	dec    edi
  431d51:	xor    DWORD PTR [edx],esi
  431d53:	xor    al,BYTE PTR [ebx+0x61]
  431d56:	outs   dx,BYTE PTR ds:[esi]
  431d57:	popa   
  431d58:	imul   esp,DWORD PTR fs:[ecx+0x6e],0x32
  431d60:	(bad)  
  431d61:	(bad)  
  431d62:	(bad)  
  431d63:	call   DWORD PTR [edx]
  431d65:	add    BYTE PTR [eax],al
  431d67:	add    BYTE PTR [ebx+0x53],al
  431d6a:	inc    ecx
  431d6b:	pop    edi
  431d6c:	pop    edx
  431d6d:	xor    dh,BYTE PTR [ebx+esi*1]
  431d70:	cs xor al,0x2d
  431d73:	xor    DWORD PTR [ecx],edi
  431d75:	cmp    BYTE PTR ds:0x72672d,dh
  431d7b:	add    bh,bh
  431d7d:	(bad)  
  431d7e:	(bad)  
  431d7f:	dec    DWORD PTR [edx]
  431d81:	add    BYTE PTR [eax],al
  431d83:	add    BYTE PTR [ecx+0x73],ch
  431d86:	outs   dx,DWORD PTR ds:[esi]
  431d87:	sub    eax,0x312d7269
  431d8c:	xor    dh,BYTE PTR [ebx]
  431d8e:	add    BYTE PTR [eax],al
  431d90:	(bad)  
  431d91:	(bad)  
  431d92:	(bad)  
  431d93:	call   DWORD PTR [esi]
  431d95:	add    BYTE PTR [eax],al
  431d97:	add    BYTE PTR [ebx+0x73],ah
  431d9a:	dec    ecx
  431d9b:	push   ebx
  431d9c:	dec    edi
  431d9d:	xor    DWORD PTR [edx],esi
  431d9f:	xor    eax,DWORD PTR [ebx+0x53]
  431da2:	inc    ecx
  431da3:	pop    edx
  431da4:	xor    dh,BYTE PTR [ebx+esi*1]
  431da7:	xor    al,0x31
  431da9:	cmp    DWORD PTR [eax],edi
  431dab:	xor    eax,0x7267
  431db0:	(bad)  
  431db1:	(bad)  
  431db2:	(bad)  
  431db3:	dec    DWORD PTR [edx]
  431db5:	add    BYTE PTR [eax],al
  431db7:	add    BYTE PTR [ecx+0x53],cl
  431dba:	dec    edi
  431dbb:	sub    eax,0x39353838
  431dc0:	sub    eax,0xff000036
  431dc5:	(bad)  
  431dc6:	(bad)  
  431dc7:	dec    DWORD PTR [edi]
  431dc9:	add    BYTE PTR [eax],al
  431dcb:	add    BYTE PTR [ecx+0x53],cl
  431dce:	dec    edi
  431dcf:	pop    edi
  431dd0:	cmp    BYTE PTR [eax],bh
  431dd2:	xor    eax,0x3a362d39
  431dd7:	xor    DWORD PTR [ecx],edi
  431dd9:	cmp    BYTE PTR [edi],dh
  431ddb:	add    bh,bh
  431ddd:	(bad)  
  431dde:	(bad)  
  431ddf:	dec    DWORD PTR [edx]
  431de1:	add    BYTE PTR [eax],al
  431de3:	add    BYTE PTR [ecx+0x73],ch
  431de6:	outs   dx,DWORD PTR ds:[esi]
  431de7:	sub    eax,0x312d7269
  431dec:	xor    dh,BYTE PTR [edi]
  431dee:	add    BYTE PTR [eax],al
  431df0:	(bad)  
  431df1:	(bad)  
  431df2:	(bad)  
  431df3:	dec    DWORD PTR [edx]
  431df5:	add    BYTE PTR [eax],al
  431df7:	add    BYTE PTR [ecx+0x53],cl
  431dfa:	dec    edi
  431dfb:	pop    edi
  431dfc:	cmp    BYTE PTR [eax],bh
  431dfe:	xor    eax,0x362d39
  431e03:	add    bh,bh
  431e05:	(bad)  
  431e06:	(bad)  
  431e07:	dec    DWORD PTR [eax]
  431e09:	add    BYTE PTR [eax],al
  431e0b:	add    BYTE PTR [ebp+0x43],al
  431e0e:	dec    ebp
  431e0f:	inc    ecx
  431e10:	sub    eax,0x343131
  431e15:	add    BYTE PTR [eax],al
  431e17:	add    bh,bh
  431e19:	(bad)  
  431e1a:	(bad)  
  431e1b:	dec    DWORD PTR [eax]
  431e1d:	add    BYTE PTR [eax],al
  431e1f:	add    BYTE PTR [ecx+0x53],al
  431e22:	dec    ebp
  431e23:	dec    edi
  431e24:	sub    eax,0x383037
  431e29:	add    BYTE PTR [eax],al
  431e2b:	add    bh,bh
  431e2d:	(bad)  
  431e2e:	(bad)  
  431e2f:	inc    DWORD PTR [esi]
  431e31:	add    BYTE PTR [eax],al
  431e33:	add    BYTE PTR [ecx+0x72],ah
  431e36:	popa   
  431e37:	bound  ebp,QWORD PTR [ecx+0x63]
  431e3a:	add    BYTE PTR [eax],al
  431e3c:	(bad)  
  431e3d:	(bad)  
  431e3e:	(bad)  
  431e3f:	call   DWORD PTR [eax]
  431e41:	add    BYTE PTR [eax],al
  431e43:	add    BYTE PTR [ebx+0x73],ah
  431e46:	dec    ecx
  431e47:	push   ebx
  431e48:	dec    edi
  431e49:	dec    esp
  431e4a:	popa   
  431e4b:	je     0x431eb6
  431e4d:	outs   dx,BYTE PTR ds:[esi]
  431e4e:	inc    ecx
  431e4f:	jb     0x431eb2
  431e51:	bound  ebp,QWORD PTR [ecx+0x63]
  431e54:	add    BYTE PTR [eax],al
  431e56:	add    BYTE PTR [eax],al
  431e58:	(bad)  
  431e59:	(bad)  
  431e5a:	(bad)  
  431e5b:	dec    DWORD PTR [eax+eax*1]
  431e5e:	add    BYTE PTR [eax],al
  431e60:	dec    ecx
  431e61:	push   ebx
  431e62:	dec    edi
  431e63:	sub    eax,0x39353838
  431e68:	sub    eax,0x452d36
  431e6d:	add    BYTE PTR [eax],al
  431e6f:	add    bh,bh
  431e71:	(bad)  
  431e72:	(bad)  
  431e73:	dec    DWORD PTR [eax+eax*1]
  431e76:	add    BYTE PTR [eax],al
  431e78:	dec    ecx
  431e79:	push   ebx
  431e7a:	dec    edi
  431e7b:	pop    edi
  431e7c:	cmp    BYTE PTR [eax],bh
  431e7e:	xor    eax,0x2d362d39
  431e83:	inc    ebp
  431e84:	add    BYTE PTR [eax],al
  431e86:	add    BYTE PTR [eax],al
  431e88:	(bad)  
  431e89:	(bad)  
  431e8a:	(bad)  
  431e8b:	dec    DWORD PTR [ebx]
  431e8d:	add    BYTE PTR [eax],al
  431e8f:	add    BYTE PTR [ebx+0x73],ah
  431e92:	dec    ecx
  431e93:	push   ebx
  431e94:	dec    edi
  431e95:	cmp    BYTE PTR [eax],bh
  431e97:	xor    eax,0x453639
  431e9c:	(bad)  
  431e9d:	(bad)  
  431e9e:	(bad)  
  431e9f:	dec    DWORD PTR [eax+eax*1]
  431ea2:	add    BYTE PTR [eax],al
  431ea4:	dec    ecx
  431ea5:	push   ebx
  431ea6:	dec    edi
  431ea7:	sub    eax,0x39353838
  431eac:	sub    eax,0x492d36
  431eb1:	add    BYTE PTR [eax],al
  431eb3:	add    bh,bh
  431eb5:	(bad)  
  431eb6:	(bad)  
  431eb7:	dec    DWORD PTR [eax+eax*1]
  431eba:	add    BYTE PTR [eax],al
  431ebc:	dec    ecx
  431ebd:	push   ebx
  431ebe:	dec    edi
  431ebf:	pop    edi
  431ec0:	cmp    BYTE PTR [eax],bh
  431ec2:	xor    eax,0x2d362d39
  431ec7:	dec    ecx
  431ec8:	add    BYTE PTR [eax],al
  431eca:	add    BYTE PTR [eax],al
  431ecc:	(bad)  
  431ecd:	(bad)  
  431ece:	(bad)  
  431ecf:	dec    DWORD PTR [ebx]
  431ed1:	add    BYTE PTR [eax],al
  431ed3:	add    BYTE PTR [ebx+0x73],ah
  431ed6:	dec    ecx
  431ed7:	push   ebx
  431ed8:	dec    edi
  431ed9:	cmp    BYTE PTR [eax],bh
  431edb:	xor    eax,0x493639
  431ee0:	(bad)  
  431ee1:	(bad)  
  431ee2:	(bad)  
  431ee3:	dec    DWORD PTR [edx]
  431ee5:	add    BYTE PTR [eax],al
  431ee7:	add    BYTE PTR [ecx+0x53],cl
  431eea:	dec    edi
  431eeb:	sub    eax,0x39353838
  431ef0:	sub    eax,0xff000037
  431ef5:	(bad)  
  431ef6:	(bad)  
  431ef7:	dec    DWORD PTR [edi]
  431ef9:	add    BYTE PTR [eax],al
  431efb:	add    BYTE PTR [ecx+0x53],cl
  431efe:	dec    edi
  431eff:	pop    edi
  431f00:	cmp    BYTE PTR [eax],bh
  431f02:	xor    eax,0x3a372d39
  431f07:	xor    DWORD PTR [ecx],edi
  431f09:	cmp    BYTE PTR [edi],dh
  431f0b:	add    bh,bh
  431f0d:	(bad)  
  431f0e:	(bad)  
  431f0f:	dec    DWORD PTR [edx]
  431f11:	add    BYTE PTR [eax],al
  431f13:	add    BYTE PTR [ecx+0x73],ch
  431f16:	outs   dx,DWORD PTR ds:[esi]
  431f17:	sub    eax,0x312d7269
  431f1c:	xor    dh,BYTE PTR [esi]
  431f1e:	add    BYTE PTR [eax],al
  431f20:	(bad)  
  431f21:	(bad)  
  431f22:	(bad)  
  431f23:	dec    DWORD PTR [edx]
  431f25:	add    BYTE PTR [eax],al
  431f27:	add    BYTE PTR [ecx+0x53],cl
  431f2a:	dec    edi
  431f2b:	pop    edi
  431f2c:	cmp    BYTE PTR [eax],bh
  431f2e:	xor    eax,0x372d39
  431f33:	add    bh,bh
  431f35:	(bad)  
  431f36:	(bad)  
  431f37:	dec    DWORD PTR [eax]
  431f39:	add    BYTE PTR [eax],al
  431f3b:	add    BYTE PTR [ebp+0x4c],al
  431f3e:	dec    edi
  431f3f:	push   esp
  431f40:	pop    edi
  431f41:	cmp    DWORD PTR [edx],esi
  431f43:	cmp    BYTE PTR [eax],al
  431f45:	add    BYTE PTR [eax],al
  431f47:	add    bh,bh
  431f49:	(bad)  
  431f4a:	(bad)  
  431f4b:	dec    DWORD PTR [eax]
  431f4d:	add    BYTE PTR [eax],al
  431f4f:	add    BYTE PTR [ebp+0x43],al
  431f52:	dec    ebp
  431f53:	inc    ecx
  431f54:	sub    eax,0x383131
  431f59:	add    BYTE PTR [eax],al
  431f5b:	add    bh,bh
  431f5d:	(bad)  
  431f5e:	(bad)  
  431f5f:	inc    DWORD PTR ds:0x67000000
  431f65:	jb     0x431fcc
  431f67:	imul   eax,DWORD PTR gs:[eax],0x0
  431f6b:	add    bh,bh
  431f6d:	(bad)  
  431f6e:	(bad)  
  431f6f:	inc    DWORD PTR [esi]
  431f71:	add    BYTE PTR [eax],al
  431f73:	add    BYTE PTR [edi+0x72],ah
  431f76:	gs imul edi,DWORD PTR gs:[eax],0x0
  431f7b:	add    bh,bh
  431f7d:	(bad)  
  431f7e:	(bad)  
  431f7f:	dec    DWORD PTR [edi]
  431f81:	add    BYTE PTR [eax],al
  431f83:	add    BYTE PTR [ebx+0x73],ah
  431f86:	dec    ecx
  431f87:	push   ebx
  431f88:	dec    edi
  431f89:	dec    esp
  431f8a:	popa   
  431f8b:	je     0x431ff6
  431f8d:	outs   dx,BYTE PTR ds:[esi]
  431f8e:	inc    edi
  431f8f:	jb     0x431ff6
  431f91:	imul   eax,DWORD PTR gs:[eax],0xffffffff
  431f95:	(bad)  
  431f96:	(bad)  
  431f97:	dec    DWORD PTR [eax]
  431f99:	add    BYTE PTR [eax],al
  431f9b:	add    BYTE PTR [esi+ebp*1+0x31],dl
  431f9f:	xor    BYTE PTR [ecx],dh
  431fa1:	sub    eax,0x3247
  431fa6:	add    BYTE PTR [eax],al
  431fa8:	(bad)  
  431fa9:	(bad)  
  431faa:	(bad)  
  431fab:	dec    DWORD PTR [edx]
  431fad:	add    BYTE PTR [eax],al
  431faf:	add    BYTE PTR [ecx+0x73],ch
  431fb2:	outs   dx,DWORD PTR ds:[esi]
  431fb3:	sub    eax,0x312d7269
  431fb8:	xor    bh,BYTE PTR [eax]
  431fba:	add    BYTE PTR [eax],al
  431fbc:	(bad)  
  431fbd:	(bad)  
  431fbe:	(bad)  
  431fbf:	dec    DWORD PTR [esi]
  431fc1:	add    BYTE PTR [eax],al
  431fc3:	add    BYTE PTR [ebx+0x73],ah
  431fc6:	dec    ecx
  431fc7:	push   ebx
  431fc8:	dec    edi
  431fc9:	xor    DWORD PTR [edx],esi
  431fcb:	cmp    BYTE PTR [ecx+esi*1+0x30],dl
  431fcf:	xor    DWORD PTR [edi+0x32],eax
  431fd2:	add    BYTE PTR [eax],al
  431fd4:	(bad)  
  431fd5:	(bad)  
  431fd6:	(bad)  
  431fd7:	dec    DWORD PTR [edx]
  431fd9:	add    BYTE PTR [eax],al
  431fdb:	add    BYTE PTR [ecx+0x53],cl
  431fde:	dec    edi
  431fdf:	sub    eax,0x39353838
  431fe4:	sub    eax,0xff000038
  431fe9:	(bad)  
  431fea:	(bad)  
  431feb:	dec    DWORD PTR [edi]
  431fed:	add    BYTE PTR [eax],al
  431fef:	add    BYTE PTR [ecx+0x53],cl
  431ff2:	dec    edi
  431ff3:	pop    edi
  431ff4:	cmp    BYTE PTR [eax],bh
  431ff6:	xor    eax,0x3a382d39
  431ffb:	xor    DWORD PTR [ecx],edi
  431ffd:	cmp    BYTE PTR [eax],bh
  431fff:	add    bh,bh
  432001:	(bad)  
  432002:	(bad)  
  432003:	dec    DWORD PTR [edx]
  432005:	add    BYTE PTR [eax],al
  432007:	add    BYTE PTR [ecx+0x73],ch
  43200a:	outs   dx,DWORD PTR ds:[esi]
  43200b:	sub    eax,0x312d7269
  432010:	xor    edi,DWORD PTR [eax]
  432012:	add    BYTE PTR [eax],al
  432014:	(bad)  
  432015:	(bad)  
  432016:	(bad)  
  432017:	dec    DWORD PTR [edx]
  432019:	add    BYTE PTR [eax],al
  43201b:	add    BYTE PTR [ecx+0x53],cl
  43201e:	dec    edi
  43201f:	pop    edi
  432020:	cmp    BYTE PTR [eax],bh
  432022:	xor    eax,0x382d39
  432027:	add    bh,bh
  432029:	(bad)  
  43202a:	(bad)  
  43202b:	inc    DWORD PTR [esi]
  43202d:	add    BYTE PTR [eax],al
  43202f:	add    BYTE PTR [eax+0x65],ch
  432032:	bound  esi,QWORD PTR [edx+0x65]
  432035:	ja     0x432037
  432037:	add    bh,bh
  432039:	(bad)  
  43203a:	(bad)  
  43203b:	call   DWORD PTR [eax]
  43203d:	add    BYTE PTR [eax],al
  43203f:	add    BYTE PTR [ebx+0x73],ah
  432042:	dec    ecx
  432043:	push   ebx
  432044:	dec    edi
  432045:	dec    esp
  432046:	popa   
  432047:	je     0x4320b2
  432049:	outs   dx,BYTE PTR ds:[esi]
  43204a:	dec    eax
  43204b:	bound  esi,QWORD PTR gs:[edx+0x65]
  43204f:	ja     0x432051
  432051:	add    BYTE PTR [eax],al
  432053:	add    bh,bh
  432055:	(bad)  
  432056:	(bad)  
  432057:	dec    DWORD PTR [eax+eax*1]
  43205a:	add    BYTE PTR [eax],al
  43205c:	dec    ecx
  43205d:	push   ebx
  43205e:	dec    edi
  43205f:	sub    eax,0x39353838
  432064:	sub    eax,0x452d38
  432069:	add    BYTE PTR [eax],al
  43206b:	add    bh,bh
  43206d:	(bad)  
  43206e:	(bad)  
  43206f:	dec    DWORD PTR [eax+eax*1]
  432072:	add    BYTE PTR [eax],al
  432074:	dec    ecx
  432075:	push   ebx
  432076:	dec    edi
  432077:	pop    edi
  432078:	cmp    BYTE PTR [eax],bh
  43207a:	xor    eax,0x2d382d39
  43207f:	inc    ebp
  432080:	add    BYTE PTR [eax],al
  432082:	add    BYTE PTR [eax],al
  432084:	(bad)  
  432085:	(bad)  
  432086:	(bad)  
  432087:	dec    DWORD PTR [ebx]
  432089:	add    BYTE PTR [eax],al
  43208b:	add    BYTE PTR [ebx+0x73],ah
  43208e:	dec    ecx
  43208f:	push   ebx
  432090:	dec    edi
  432091:	cmp    BYTE PTR [eax],bh
  432093:	xor    eax,0x453839
  432098:	(bad)  
  432099:	(bad)  
  43209a:	(bad)  
  43209b:	dec    DWORD PTR [eax+eax*1]
  43209e:	add    BYTE PTR [eax],al
  4320a0:	dec    ecx
  4320a1:	push   ebx
  4320a2:	dec    edi
  4320a3:	sub    eax,0x39353838
  4320a8:	sub    eax,0x492d38
  4320ad:	add    BYTE PTR [eax],al
  4320af:	add    bh,bh
  4320b1:	(bad)  
  4320b2:	(bad)  
  4320b3:	dec    DWORD PTR [eax+eax*1]
  4320b6:	add    BYTE PTR [eax],al
  4320b8:	dec    ecx
  4320b9:	push   ebx
  4320ba:	dec    edi
  4320bb:	pop    edi
  4320bc:	cmp    BYTE PTR [eax],bh
  4320be:	xor    eax,0x2d382d39
  4320c3:	dec    ecx
  4320c4:	add    BYTE PTR [eax],al
  4320c6:	add    BYTE PTR [eax],al
  4320c8:	(bad)  
  4320c9:	(bad)  
  4320ca:	(bad)  
  4320cb:	dec    DWORD PTR [ebx]
  4320cd:	add    BYTE PTR [eax],al
  4320cf:	add    BYTE PTR [ebx+0x73],ah
  4320d2:	dec    ecx
  4320d3:	push   ebx
  4320d4:	dec    edi
  4320d5:	cmp    BYTE PTR [eax],bh
  4320d7:	xor    eax,0x493839
  4320dc:	(bad)  
  4320dd:	(bad)  
  4320de:	(bad)  
  4320df:	dec    DWORD PTR [edx]
  4320e1:	add    BYTE PTR [eax],al
  4320e3:	add    BYTE PTR [ebx+0x53],al
  4320e6:	dec    esi
  4320e7:	pop    edi
  4320e8:	xor    esi,DWORD PTR [esi]
  4320ea:	cmp    DWORD PTR [ecx],esi
  4320ec:	xor    BYTE PTR [ebx],dh
  4320ee:	add    BYTE PTR [eax],al
  4320f0:	(bad)  
  4320f1:	(bad)  
  4320f2:	(bad)  
  4320f3:	dec    DWORD PTR [edx]
  4320f5:	add    BYTE PTR [eax],al
  4320f7:	add    BYTE PTR [ecx+0x73],ch
  4320fa:	outs   dx,DWORD PTR ds:[esi]
  4320fb:	sub    eax,0x312d7269
  432100:	xor    edi,DWORD PTR [ecx]
  432102:	add    BYTE PTR [eax],al
  432104:	(bad)  
  432105:	(bad)  
  432106:	(bad)  
  432107:	call   DWORD PTR [ecx]
  432109:	add    BYTE PTR [eax],al
  43210b:	add    BYTE PTR [ebx+0x73],ah
  43210e:	dec    ecx
  43210f:	push   ebx
  432110:	dec    edi
  432111:	xor    DWORD PTR [ebx],esi
  432113:	cmp    DWORD PTR [ebx+0x53],eax
  432116:	dec    esi
  432117:	xor    esi,DWORD PTR [esi]
  432119:	cmp    DWORD PTR [ecx],esi
  43211b:	xor    BYTE PTR [ebx],dh
  43211d:	add    BYTE PTR [eax],al
  43211f:	add    bh,bh
  432121:	(bad)  
  432122:	(bad)  
  432123:	dec    DWORD PTR [eax+eax*1]
  432126:	add    BYTE PTR [eax],al
  432128:	dec    edx
  432129:	push   ebp
  43212a:	push   ebx
  43212b:	pop    edi
  43212c:	dec    ecx
  43212d:	cs inc edx
  43212f:	xor    DWORD PTR [esi],ebp
  432131:	xor    BYTE PTR [eax],dh
  432133:	xor    al,BYTE PTR [eax]
  432135:	add    BYTE PTR [eax],al
  432137:	add    bh,bh
  432139:	(bad)  
  43213a:	(bad)  
  43213b:	dec    DWORD PTR [edx]
  43213d:	add    BYTE PTR [eax],al
  43213f:	add    BYTE PTR [ecx+0x73],ch
  432142:	outs   dx,DWORD PTR ds:[esi]
  432143:	sub    eax,0x312d7269
  432148:	xor    al,0x31
  43214a:	add    BYTE PTR [eax],al
  43214c:	(bad)  
  43214d:	(bad)  
  43214e:	(bad)  
  43214f:	dec    DWORD PTR [ecx]
  432151:	add    BYTE PTR [eax],al
  432153:	add    BYTE PTR [ecx+0x53],cl
  432156:	dec    edi
  432157:	ss xor al,0x36
  43215a:	sub    eax,0x5559
  43215f:	add    bh,bh
  432161:	(bad)  
  432162:	(bad)  
  432163:	inc    DWORD PTR [edx]
  432165:	add    BYTE PTR [eax],al
  432167:	add    BYTE PTR [edx+0x73],ch
  43216a:	add    BYTE PTR [eax],al
  43216c:	(bad)  
  43216d:	(bad)  
  43216e:	(bad)  
  43216f:	inc    DWORD PTR [edx]
  432171:	add    BYTE PTR [eax],al
  432173:	add    BYTE PTR [ecx+0x75],bh
  432176:	add    BYTE PTR [eax],al
  432178:	(bad)  
  432179:	(bad)  
  43217a:	(bad)  
  43217b:	call   DWORD PTR [ecx]
  43217d:	add    BYTE PTR [eax],al
  43217f:	add    BYTE PTR [ebx+0x73],ah
  432182:	dec    ecx
  432183:	push   ebx
  432184:	dec    edi
  432185:	xor    DWORD PTR [ecx+esi*1],esi
  432188:	dec    edx
  432189:	push   ebp
  43218a:	push   ebx
  43218b:	dec    ecx
  43218c:	inc    edx
  43218d:	xor    DWORD PTR [eax],esi
  43218f:	xor    BYTE PTR [edx],dh
  432191:	add    BYTE PTR [eax],al
  432193:	add    bh,bh
  432195:	(bad)  
  432196:	(bad)  
  432197:	dec    DWORD PTR [esi]
  432199:	add    BYTE PTR [eax],al
  43219b:	add    BYTE PTR [ecx+0x53],cl
  43219e:	dec    edi
  43219f:	pop    edi
  4321a0:	cmp    DWORD PTR ss:[ebx],esi
  4321a3:	aaa    
  4321a4:	sub    eax,0x64612d32
  4321a9:	add    BYTE PTR fs:[eax],al
  4321ac:	(bad)  
  4321ad:	(bad)  
  4321ae:	(bad)  
  4321af:	dec    DWORD PTR [edx]
  4321b1:	add    BYTE PTR [eax],al
  4321b3:	add    BYTE PTR [ecx+0x73],ch
  4321b6:	outs   dx,DWORD PTR ds:[esi]
  4321b7:	sub    eax,0x312d7269
  4321bc:	xor    al,0x32
  4321be:	add    BYTE PTR [eax],al
  4321c0:	(bad)  
  4321c1:	(bad)  
  4321c2:	(bad)  
  4321c3:	dec    DWORD PTR ds:0x63000000
  4321c9:	jae    0x432214
  4321cb:	push   ebx
  4321cc:	dec    edi
  4321cd:	push   esp
  4321ce:	gs js  0x432245
  4321d1:	inc    ebx
  4321d2:	outs   dx,DWORD PTR ds:[esi]
  4321d3:	ins    DWORD PTR es:[edi],dx
  4321d4:	ins    DWORD PTR es:[edi],dx
  4321d5:	add    BYTE PTR [eax],al
  4321d7:	add    bh,bh
  4321d9:	(bad)  
  4321da:	(bad)  
  4321db:	dec    DWORD PTR [ecx]
  4321dd:	add    BYTE PTR [eax],al
  4321df:	add    BYTE PTR [ecx+0x45],cl
  4321e2:	inc    ebx
  4321e3:	pop    edi
  4321e4:	push   eax
  4321e5:	xor    dh,BYTE PTR [edi]
  4321e7:	sub    eax,0x31
  4321ec:	(bad)  
  4321ed:	(bad)  
  4321ee:	(bad)  
  4321ef:	dec    DWORD PTR [edx]
  4321f1:	add    BYTE PTR [eax],al
  4321f3:	add    BYTE PTR [ecx+0x73],ch
  4321f6:	outs   dx,DWORD PTR ds:[esi]
  4321f7:	sub    eax,0x312d7269
  4321fc:	xor    al,0x33
  4321fe:	add    BYTE PTR [eax],al
  432200:	(bad)  
  432201:	(bad)  
  432202:	(bad)  
  432203:	dec    DWORD PTR [edi]
  432205:	add    BYTE PTR [eax],al
  432207:	add    BYTE PTR [ebx+0x73],ah
  43220a:	dec    ecx
  43220b:	push   ebx
  43220c:	dec    edi
  43220d:	xor    DWORD PTR [ebx+esi*1],esi
  432210:	dec    ecx
  432211:	inc    ebp
  432212:	inc    ebx
  432213:	push   eax
  432214:	xor    dh,BYTE PTR [edi]
  432216:	xor    DWORD PTR [eax],eax
  432218:	(bad)  
  432219:	(bad)  
  43221a:	(bad)  
  43221b:	dec    DWORD PTR [edx]
  43221d:	add    BYTE PTR [eax],al
  43221f:	add    BYTE PTR [ecx+0x53],cl
  432222:	dec    edi
  432223:	sub    eax,0x39353838
  432228:	sub    eax,0xff000035
  43222d:	(bad)  
  43222e:	(bad)  
  43222f:	dec    DWORD PTR [edi]
  432231:	add    BYTE PTR [eax],al
  432233:	add    BYTE PTR [ecx+0x53],cl
  432236:	dec    edi
  432237:	pop    edi
  432238:	cmp    BYTE PTR [eax],bh
  43223a:	xor    eax,0x3a352d39
  43223f:	xor    DWORD PTR [ecx],edi
  432241:	cmp    BYTE PTR [eax],bh
  432243:	add    bh,bh
  432245:	(bad)  
  432246:	(bad)  
  432247:	dec    DWORD PTR [edx]
  432249:	add    BYTE PTR [eax],al
  43224b:	add    BYTE PTR [ecx+0x73],ch
  43224e:	outs   dx,DWORD PTR ds:[esi]
  43224f:	sub    eax,0x312d7269
  432254:	xor    al,0x34
  432256:	add    BYTE PTR [eax],al
  432258:	(bad)  
  432259:	(bad)  
  43225a:	(bad)  
  43225b:	dec    DWORD PTR [edx]
  43225d:	add    BYTE PTR [eax],al
  43225f:	add    BYTE PTR [ecx+0x53],cl
  432262:	dec    edi
  432263:	pop    edi
  432264:	cmp    BYTE PTR [eax],bh
  432266:	xor    eax,0x352d39
  43226b:	add    bh,bh
  43226d:	(bad)  
  43226e:	(bad)  
  43226f:	dec    DWORD PTR [eax]
  432271:	add    BYTE PTR [eax],al
  432273:	add    BYTE PTR [ebx+0x79],ah
  432276:	jb     0x4322e1
  432278:	ins    BYTE PTR es:[edi],dx
  432279:	ins    BYTE PTR es:[edi],dx
  43227a:	imul   esp,DWORD PTR [ebx+0x0],0xff000000
  432281:	(bad)  
  432282:	(bad)  
  432283:	call   DWORD PTR [edx]
  432285:	add    BYTE PTR [eax],al
  432287:	add    BYTE PTR [ebx+0x73],ah
  43228a:	dec    ecx
  43228b:	push   ebx
  43228c:	dec    edi
  43228d:	dec    esp
  43228e:	popa   
  43228f:	je     0x4322fa
  432291:	outs   dx,BYTE PTR ds:[esi]
  432292:	inc    ebx
  432293:	jns    0x432307
  432295:	imul   ebp,DWORD PTR [esp+ebp*2+0x69],0xff000063
  43229d:	(bad)  
  43229e:	(bad)  
  43229f:	call   DWORD PTR [ecx]
  4322a1:	add    BYTE PTR [eax],al
  4322a3:	add    BYTE PTR [edx+0x55],cl
  4322a6:	push   ebx
  4322a7:	pop    edi
  4322a8:	dec    ecx
  4322a9:	cs inc edx
  4322ab:	xor    DWORD PTR [esi],ebp
  4322ad:	xor    BYTE PTR [eax],dh
  4322af:	xor    ebp,DWORD PTR ds:0x62726573
  4322b5:	add    BYTE PTR [eax],al
  4322b7:	add    bh,bh
  4322b9:	(bad)  
  4322ba:	(bad)  
  4322bb:	dec    DWORD PTR [edx]
  4322bd:	add    BYTE PTR [eax],al
  4322bf:	add    BYTE PTR [ecx+0x73],ch
  4322c2:	outs   dx,DWORD PTR ds:[esi]
  4322c3:	sub    eax,0x312d7269
  4322c8:	xor    al,0x36
  4322ca:	add    BYTE PTR [eax],al
  4322cc:	(bad)  
  4322cd:	(bad)  
  4322ce:	(bad)  
  4322cf:	inc    DWORD PTR [edi]
  4322d1:	add    BYTE PTR [eax],al
  4322d3:	add    BYTE PTR [ebx+0x65],dh
  4322d6:	jb     0x43233a
  4322d8:	imul   esp,DWORD PTR [ecx+0x6e],0xffffff00
  4322df:	dec    DWORD PTR [edi]
  4322e1:	add    BYTE PTR [eax],al
  4322e3:	add    BYTE PTR [ebx+0x73],ah
  4322e6:	dec    ecx
  4322e7:	push   ebx
  4322e8:	dec    edi
  4322e9:	xor    DWORD PTR [esi+esi*1],esi
  4322ec:	push   ebx
  4322ed:	gs jb  0x432352
  4322f0:	imul   esp,DWORD PTR [ecx+0x6e],0xffffff00
  4322f7:	call   DWORD PTR [eax]
  4322f9:	add    BYTE PTR [eax],al
  4322fb:	add    BYTE PTR [edx+0x55],cl
  4322fe:	push   ebx
  4322ff:	pop    edi
  432300:	dec    ecx
  432301:	cs inc edx
  432303:	xor    DWORD PTR [esi],ebp
  432305:	xor    BYTE PTR [eax],dh
  432307:	xor    ebp,DWORD PTR ds:0x63616d
  43230d:	add    BYTE PTR [eax],al
  43230f:	add    bh,bh
  432311:	(bad)  
  432312:	(bad)  
  432313:	dec    DWORD PTR [edx]
  432315:	add    BYTE PTR [eax],al
  432317:	add    BYTE PTR [ebp+0x61],ch
  43231a:	arpl   WORD PTR [ebp+0x64],sp
  43231d:	outs   dx,DWORD PTR ds:[esi]
  43231e:	outs   dx,BYTE PTR ds:[esi]
  43231f:	imul   esp,DWORD PTR [ecx+0x6e],0xffff0000
  432326:	(bad)  
  432327:	dec    DWORD PTR [edx]
  432329:	add    BYTE PTR [eax],al
  43232b:	add    BYTE PTR [ecx+0x73],ch
  43232e:	outs   dx,DWORD PTR ds:[esi]
  43232f:	sub    eax,0x312d7269
  432334:	xor    al,0x37
  432336:	add    BYTE PTR [eax],al
  432338:	(bad)  
  432339:	(bad)  
  43233a:	(bad)  
  43233b:	call   DWORD PTR [edx]
  43233d:	add    BYTE PTR [eax],al
  43233f:	add    BYTE PTR [ebx+0x73],ah
  432342:	dec    ecx
  432343:	push   ebx
  432344:	dec    edi
  432345:	xor    DWORD PTR [edi+esi*1],esi
  432348:	dec    ebp
  432349:	popa   
  43234a:	arpl   WORD PTR [ebp+0x64],sp
  43234d:	outs   dx,DWORD PTR ds:[esi]
  43234e:	outs   dx,BYTE PTR ds:[esi]
  43234f:	imul   esp,DWORD PTR [ecx+0x6e],0xffff0000
  432356:	(bad)  
  432357:	dec    DWORD PTR [edx]
  432359:	add    BYTE PTR [eax],al
  43235b:	add    BYTE PTR [ecx+0x53],cl
  43235e:	dec    edi
  43235f:	sub    eax,0x39353838
  432364:	sub    eax,0xff000039
  432369:	(bad)  
  43236a:	(bad)  
  43236b:	dec    DWORD PTR [edi]
  43236d:	add    BYTE PTR [eax],al
  43236f:	add    BYTE PTR [ecx+0x53],cl
  432372:	dec    edi
  432373:	pop    edi
  432374:	cmp    BYTE PTR [eax],bh
  432376:	xor    eax,0x3a392d39
  43237b:	xor    DWORD PTR [ecx],edi
  43237d:	cmp    BYTE PTR [ecx],bh
  43237f:	add    bh,bh
  432381:	(bad)  
  432382:	(bad)  
  432383:	dec    DWORD PTR [edx]
  432385:	add    BYTE PTR [eax],al
  432387:	add    BYTE PTR [ecx+0x73],ch
  43238a:	outs   dx,DWORD PTR ds:[esi]
  43238b:	sub    eax,0x312d7269
  432390:	xor    al,0x38
  432392:	add    BYTE PTR [eax],al
  432394:	(bad)  
  432395:	(bad)  
  432396:	(bad)  
  432397:	dec    DWORD PTR [edx]
  432399:	add    BYTE PTR [eax],al
  43239b:	add    BYTE PTR [ecx+0x53],cl
  43239e:	dec    edi
  43239f:	pop    edi
  4323a0:	cmp    BYTE PTR [eax],bh
  4323a2:	xor    eax,0x392d39
  4323a7:	add    bh,bh
  4323a9:	(bad)  
  4323aa:	(bad)  
  4323ab:	inc    DWORD PTR [esi]
  4323ad:	add    BYTE PTR [eax],al
  4323af:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  4323b3:	imul   ebp,DWORD PTR [esi+0x35],0xffff0000
  4323ba:	(bad)  
  4323bb:	inc    DWORD PTR [edx]
  4323bd:	add    BYTE PTR [eax],al
  4323bf:	add    BYTE PTR [ebp+esi*1+0x0],ch
  4323c3:	add    bh,bh
  4323c5:	(bad)  
  4323c6:	(bad)  
  4323c7:	dec    DWORD PTR [ebx]
  4323c9:	add    BYTE PTR [eax],al
  4323cb:	add    BYTE PTR [ebx+0x73],ah
  4323ce:	dec    ecx
  4323cf:	push   ebx
  4323d0:	dec    edi
  4323d1:	dec    esp
  4323d2:	popa   
  4323d3:	je     0x43243e
  4323d5:	outs   dx,BYTE PTR ds:[esi]
  4323d6:	xor    eax,0xffffff00
  4323db:	dec    DWORD PTR [ebx]
  4323dd:	add    BYTE PTR [eax],al
  4323df:	add    BYTE PTR [edi+0x72],ah
  4323e2:	gs imul ebp,DWORD PTR gs:0x74696363,0x74
  4323eb:	add    bh,bh
  4323ed:	(bad)  
  4323ee:	(bad)  
  4323ef:	dec    DWORD PTR [edx]
  4323f1:	add    BYTE PTR [eax],al
  4323f3:	add    BYTE PTR [ecx+0x73],ch
  4323f6:	outs   dx,DWORD PTR ds:[esi]
  4323f7:	sub    eax,0x312d7269
  4323fc:	xor    eax,0xff000030
  432401:	(bad)  
  432402:	(bad)  
  432403:	dec    DWORD PTR [eax]
  432405:	add    BYTE PTR [eax],al
  432407:	add    BYTE PTR [ebx+0x73],ah
  43240a:	dec    ecx
  43240b:	push   ebx
  43240c:	dec    edi
  43240d:	xor    DWORD PTR ds:0x30,esi
  432413:	add    bh,bh
  432415:	(bad)  
  432416:	(bad)  
  432417:	call   DWORD PTR [edx]
  432419:	add    BYTE PTR [eax],al
  43241b:	add    BYTE PTR [ebx+0x73],ah
  43241e:	dec    ecx
  43241f:	push   ebx
  432420:	dec    edi
  432421:	xor    DWORD PTR ds:0x65724730,esi
  432427:	imul   eax,DWORD PTR gs:[ebx+0x43],0x49
  43242c:	push   esp
  43242d:	push   esp
  43242e:	add    BYTE PTR [eax],al
  432430:	(bad)  
  432431:	(bad)  
  432432:	(bad)  
  432433:	dec    DWORD PTR ds:0x4e000000
  432439:	inc    ebx
  43243a:	pop    edi
  43243b:	dec    esi
  43243c:	inc    ebx
  43243d:	xor    BYTE PTR [eax],dh
  43243f:	sub    eax,0x383a3031
  432444:	xor    DWORD PTR [eax],eax
  432446:	add    BYTE PTR [eax],al
  432448:	(bad)  
  432449:	(bad)  
  43244a:	(bad)  
  43244b:	inc    DWORD PTR [eax+eax*1]
  43244e:	add    BYTE PTR [eax],al
  432450:	arpl   WORD PTR [ebp+0x62],si
  432453:	popa   
  432454:	add    BYTE PTR [eax],al
  432456:	add    BYTE PTR [eax],al
  432458:	(bad)  
  432459:	(bad)  
  43245a:	(bad)  
  43245b:	dec    DWORD PTR [edx]
  43245d:	add    BYTE PTR [eax],al
  43245f:	add    BYTE PTR [ecx+0x73],ch
  432462:	outs   dx,DWORD PTR ds:[esi]
  432463:	sub    eax,0x312d7269
  432468:	xor    eax,0xff000031
  43246d:	(bad)  
  43246e:	(bad)  
  43246f:	dec    DWORD PTR [ecx]
  432471:	add    BYTE PTR [eax],al
  432473:	add    BYTE PTR [ecx+0x53],cl
  432476:	dec    edi
  432477:	ss xor al,0x36
  43247a:	sub    eax,0x5543
  43247f:	add    bh,bh
  432481:	(bad)  
  432482:	(bad)  
  432483:	dec    DWORD PTR [eax+eax*1]
  432486:	add    BYTE PTR [eax],al
  432488:	arpl   WORD PTR [ebx+0x49],si
  43248b:	push   ebx
  43248c:	dec    edi
  43248d:	xor    DWORD PTR ds:0x62754331,esi
  432493:	popa   
  432494:	add    BYTE PTR [eax],al
  432496:	add    BYTE PTR [eax],al
  432498:	(bad)  
  432499:	(bad)  
  43249a:	(bad)  
  43249b:	dec    DWORD PTR ds:0x49000000
  4324a1:	push   ebx
  4324a2:	dec    edi
  4324a3:	pop    edi
  4324a4:	cmp    DWORD PTR ss:[ebx],esi
  4324a7:	aaa    
  4324a8:	sub    eax,0x35322d32
  4324ad:	add    BYTE PTR [eax],al
  4324af:	add    bh,bh
  4324b1:	(bad)  
  4324b2:	(bad)  
  4324b3:	dec    DWORD PTR [edx]
  4324b5:	add    BYTE PTR [eax],al
  4324b7:	add    BYTE PTR [ecx+0x73],ch
  4324ba:	outs   dx,DWORD PTR ds:[esi]
  4324bb:	sub    eax,0x312d7269
  4324c0:	xor    eax,0xff000032
  4324c5:	(bad)  
  4324c6:	(bad)  
  4324c7:	dec    DWORD PTR [eax+eax*1]
  4324ca:	add    BYTE PTR [eax],al
  4324cc:	arpl   WORD PTR [ebx+0x49],si
  4324cf:	push   ebx
  4324d0:	dec    edi
  4324d1:	cmp    DWORD PTR ss:[ebx],esi
  4324d4:	aaa    
  4324d5:	inc    ecx
  4324d6:	fs add BYTE PTR fs:[eax],al
  4324da:	add    BYTE PTR [eax],al
  4324dc:	(bad)  
  4324dd:	(bad)  
  4324de:	(bad)  
  4324df:	dec    DWORD PTR ds:0x47000000
  4324e5:	dec    edi
  4324e6:	push   ebx
  4324e7:	push   esp
  4324e8:	pop    edi
  4324e9:	xor    DWORD PTR [ecx],edi
  4324eb:	aaa    
  4324ec:	cmp    BYTE PTR ss:0x3437,ch
  4324f3:	add    bh,bh
  4324f5:	(bad)  
  4324f6:	(bad)  
  4324f7:	dec    DWORD PTR ds:0x53000000
  4324fd:	push   esp
  4324fe:	pop    edi
  4324ff:	push   ebx
  432500:	inc    ebp
  432501:	push   esi
  432502:	pop    edi
  432503:	xor    esi,DWORD PTR ds:0x38382d38
  432509:	add    BYTE PTR [eax],al
  43250b:	add    bh,bh
  43250d:	(bad)  
  43250e:	(bad)  
  43250f:	dec    DWORD PTR [edx]
  432511:	add    BYTE PTR [eax],al
  432513:	add    BYTE PTR [ecx+0x73],ch
  432516:	outs   dx,DWORD PTR ds:[esi]
  432517:	sub    eax,0x312d7269
  43251c:	xor    eax,0xff000033
  432521:	(bad)  
  432522:	(bad)  
  432523:	call   DWORD PTR [ebx]
  432525:	add    BYTE PTR [eax],al
  432527:	add    BYTE PTR [ebx+0x73],ah
  43252a:	dec    ecx
  43252b:	push   ebx
  43252c:	dec    edi
  43252d:	xor    DWORD PTR ds:0x534f4733,esi
  432533:	push   esp
  432534:	xor    DWORD PTR [ecx],edi
  432536:	aaa    
  432537:	cmp    BYTE PTR ss:[edi],dh
  43253a:	xor    al,0x0
  43253c:	(bad)  
  43253d:	(bad)  
  43253e:	(bad)  
  43253f:	dec    DWORD PTR ds:0x49000000
  432545:	push   ebx
  432546:	dec    edi
  432547:	pop    edi
  432548:	cmp    BYTE PTR [eax],bh
  43254a:	xor    eax,0x75732d39
  43254f:	jo     0x4325c1
  432551:	add    BYTE PTR [eax],al
  432553:	add    bh,bh
  432555:	(bad)  
  432556:	(bad)  
  432557:	dec    DWORD PTR [edx]
  432559:	add    BYTE PTR [eax],al
  43255b:	add    BYTE PTR [ecx+0x73],ch
  43255e:	outs   dx,DWORD PTR ds:[esi]
  43255f:	sub    eax,0x312d7269
  432564:	xor    eax,0xff000034
  432569:	(bad)  
  43256a:	(bad)  
  43256b:	dec    DWORD PTR [edx]
  43256d:	add    BYTE PTR [eax],al
  43256f:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  432573:	imul   ebp,DWORD PTR [esi+0x31],0x352d322d
  43257a:	add    BYTE PTR [eax],al
  43257c:	(bad)  
  43257d:	(bad)  
  43257e:	(bad)  
  43257f:	dec    DWORD PTR ds:0x63000000
  432585:	jae    0x4325d0
  432587:	push   ebx
  432588:	dec    edi
  432589:	cmp    BYTE PTR [eax],bh
  43258b:	xor    eax,0x70755339
  432590:	jo     0x432592
  432592:	add    BYTE PTR [eax],al
  432594:	(bad)  
  432595:	(bad)  
  432596:	(bad)  
  432597:	dec    DWORD PTR ds:0x49000000
  43259d:	push   ebx
  43259e:	dec    edi
  43259f:	pop    edi
  4325a0:	xor    DWORD PTR [eax],esi
  4325a2:	xor    esi,DWORD PTR [esi]
  4325a4:	aaa    
  4325a5:	sub    eax,0x786f62
  4325aa:	add    BYTE PTR [eax],al
  4325ac:	(bad)  
  4325ad:	(bad)  
  4325ae:	(bad)  
  4325af:	dec    DWORD PTR [edx]
  4325b1:	add    BYTE PTR [eax],al
  4325b3:	add    BYTE PTR [ecx+0x73],ch
  4325b6:	outs   dx,DWORD PTR ds:[esi]
  4325b7:	sub    eax,0x312d7269
  4325bc:	xor    eax,0xff000035
  4325c1:	(bad)  
  4325c2:	(bad)  
  4325c3:	dec    DWORD PTR ds:0x63000000
  4325c9:	jae    0x432614
  4325cb:	push   ebx
  4325cc:	dec    edi
  4325cd:	xor    DWORD PTR [eax],esi
  4325cf:	xor    esi,DWORD PTR [esi]
  4325d1:	aaa    
  4325d2:	inc    edx
  4325d3:	outs   dx,DWORD PTR ds:[esi]
  4325d4:	js     0x4325d6
  4325d6:	add    BYTE PTR [eax],al
  4325d8:	(bad)  
  4325d9:	(bad)  
  4325da:	(bad)  
  4325db:	inc    DWORD PTR [esi]
  4325dd:	add    BYTE PTR [eax],al
  4325df:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  4325e3:	imul   ebp,DWORD PTR [esi+0x36],0xffff0000
  4325ea:	(bad)  
  4325eb:	dec    DWORD PTR [ebx]
  4325ed:	add    BYTE PTR [eax],al
  4325ef:	add    BYTE PTR [ecx+0x53],cl
  4325f2:	dec    edi
  4325f3:	sub    eax,0x39353838
  4325f8:	sub    eax,0xff003031
  4325fd:	(bad)  
  4325fe:	(bad)  
  4325ff:	dec    DWORD PTR [edx]
  432601:	add    BYTE PTR [eax],al
  432603:	add    BYTE PTR [ecx+0x73],ch
  432606:	outs   dx,DWORD PTR ds:[esi]
  432607:	sub    eax,0x312d7269
  43260c:	xor    eax,0xff000037
  432611:	(bad)  
  432612:	(bad)  
  432613:	inc    DWORD PTR [edx]
  432615:	add    BYTE PTR [eax],al
  432617:	add    BYTE PTR [esi+esi*1+0x0],ch
  43261b:	add    bh,bh
  43261d:	(bad)  
  43261e:	(bad)  
  43261f:	call   DWORD PTR [eax]
  432621:	add    BYTE PTR [eax],al
  432623:	add    BYTE PTR [ecx+0x53],cl
  432626:	dec    edi
  432627:	pop    edi
  432628:	cmp    BYTE PTR [eax],bh
  43262a:	xor    eax,0x30312d39
  43262f:	cmp    dh,BYTE PTR [ecx]
  432631:	cmp    DWORD PTR [ecx],edi
  432633:	xor    al,BYTE PTR [eax]
  432635:	add    BYTE PTR [eax],al
  432637:	add    bh,bh
  432639:	(bad)  
  43263a:	(bad)  
  43263b:	dec    DWORD PTR [ebx]
  43263d:	add    BYTE PTR [eax],al
  43263f:	add    BYTE PTR [ebx+0x73],ah
  432642:	dec    ecx
  432643:	push   ebx
  432644:	dec    edi
  432645:	dec    esp
  432646:	popa   
  432647:	je     0x4326b2
  432649:	outs   dx,BYTE PTR ds:[esi]
  43264a:	ss add bh,bh
  43264d:	(bad)  
  43264e:	(bad)  
  43264f:	dec    DWORD PTR [ecx]
  432651:	add    BYTE PTR [eax],al
  432653:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  432657:	imul   ebp,DWORD PTR [esi+0x2d],0x70616c
  43265e:	add    BYTE PTR [eax],al
  432660:	(bad)  
  432661:	(bad)  
  432662:	(bad)  
  432663:	inc    DWORD PTR [ebx]
  432665:	add    BYTE PTR [eax],al
  432667:	add    BYTE PTR [ecx+eiz*2+0x70],ch
  43266b:	add    bh,bh
  43266d:	(bad)  
  43266e:	(bad)  
  43266f:	dec    DWORD PTR [edx]
  432671:	add    BYTE PTR [eax],al
  432673:	add    BYTE PTR [ecx+0x73],ch
  432676:	outs   dx,DWORD PTR ds:[esi]
  432677:	sub    eax,0x312d7269
  43267c:	xor    eax,0xff000038
  432681:	(bad)  
  432682:	(bad)  
  432683:	dec    DWORD PTR [ebx]
  432685:	add    BYTE PTR [eax],al
  432687:	add    BYTE PTR [ebx+0x73],ah
  43268a:	dec    ecx
  43268b:	push   ebx
  43268c:	dec    edi
  43268d:	xor    DWORD PTR ds:0x70614c38,esi
  432693:	add    bh,bh
  432695:	(bad)  
  432696:	(bad)  
  432697:	dec    DWORD PTR [esi]
  432699:	add    BYTE PTR [eax],al
  43269b:	add    BYTE PTR [edx+0x49],cl
  43269e:	push   ebx
  43269f:	pop    edi
  4326a0:	pop    eax
  4326a1:	xor    BYTE PTR [edx],dh
  4326a3:	xor    DWORD PTR [edx],esi
  4326a5:	sub    eax,0x30393931
  4326aa:	add    BYTE PTR [eax],al
  4326ac:	(bad)  
  4326ad:	(bad)  
  4326ae:	(bad)  
  4326af:	inc    DWORD PTR ds:0x78000000
  4326b5:	xor    BYTE PTR [edx],dh
  4326b7:	xor    DWORD PTR [edx],esi
  4326b9:	add    BYTE PTR [eax],al
  4326bb:	add    bh,bh
  4326bd:	(bad)  
  4326be:	(bad)  
  4326bf:	dec    DWORD PTR [edx]
  4326c1:	add    BYTE PTR [eax],al
  4326c3:	add    BYTE PTR [ecx+0x73],ch
  4326c6:	outs   dx,DWORD PTR ds:[esi]
  4326c7:	sub    eax,0x312d7269
  4326cc:	xor    eax,0xff000039
  4326d1:	(bad)  
  4326d2:	(bad)  
  4326d3:	call   DWORD PTR [eax+eax*1]
  4326d6:	add    BYTE PTR [eax],al
  4326d8:	arpl   WORD PTR [ebx+0x49],si
  4326db:	push   ebx
  4326dc:	dec    edi
  4326dd:	xor    DWORD PTR ds:0x53494a39,esi
  4326e3:	pop    eax
  4326e4:	xor    BYTE PTR [edx],dh
  4326e6:	xor    DWORD PTR [edx],esi
  4326e8:	xor    DWORD PTR [ecx],edi
  4326ea:	cmp    DWORD PTR [eax],esi
  4326ec:	add    BYTE PTR [eax],al
  4326ee:	add    BYTE PTR [eax],al
  4326f0:	(bad)  
  4326f1:	(bad)  
  4326f2:	(bad)  
  4326f3:	inc    DWORD PTR [edi]
  4326f5:	add    BYTE PTR [eax],al
  4326f7:	add    BYTE PTR [ebx+edx*2+0x5f],al
  4326fb:	xor    dh,BYTE PTR [eax]
  4326fd:	cmp    BYTE PTR [ecx],bh
  4326ff:	add    bh,bh
  432701:	(bad)  
  432702:	(bad)  
  432703:	inc    DWORD PTR [esi]
  432705:	add    BYTE PTR [eax],al
  432707:	add    BYTE PTR [ebx+edx*2+0x32],al
  43270b:	xor    BYTE PTR [eax],bh
  43270d:	cmp    DWORD PTR [eax],eax
  43270f:	add    bh,bh
  432711:	(bad)  
  432712:	(bad)  
  432713:	dec    DWORD PTR [ecx]
  432715:	add    BYTE PTR [eax],al
  432717:	add    BYTE PTR [ecx+0x53],cl
  43271a:	dec    edi
  43271b:	ss xor al,0x36
  43271e:	sub    eax,0x4b44
  432723:	add    bh,bh
  432725:	(bad)  
  432726:	(bad)  
  432727:	inc    DWORD PTR [edx]
  432729:	add    BYTE PTR [eax],al
  43272b:	add    BYTE PTR [ebx+ebp*2+0x0],ah
  43272f:	add    bh,bh
  432731:	(bad)  
  432732:	(bad)  
  432733:	dec    DWORD PTR [esi]
  432735:	add    BYTE PTR [eax],al
  432737:	add    BYTE PTR [ebx+0x73],ah
  43273a:	dec    ecx
  43273b:	push   ebx
  43273c:	dec    edi
  43273d:	ss xor al,0x36
  432740:	inc    esp
  432741:	popa   
  432742:	outs   dx,BYTE PTR ds:[esi]
  432743:	imul   esi,DWORD PTR [ebx+0x68],0xffff0000
  43274a:	(bad)  
  43274b:	inc    DWORD PTR ds:0x75000000
  432751:	jae    0x432780
  432753:	imul   eax,DWORD PTR fs:[eax],0x0
  432757:	add    bh,bh
  432759:	(bad)  
  43275a:	(bad)  
  43275b:	inc    DWORD PTR [esi]
  43275d:	add    BYTE PTR [eax],al
  43275f:	add    BYTE PTR [ebx+0x73],ah
  432762:	push   ebp
  432763:	push   ebx
  432764:	inc    esp
  432765:	dec    ebx
  432766:	add    BYTE PTR [eax],al
  432768:	(bad)  
  432769:	(bad)  
  43276a:	(bad)  
  43276b:	inc    DWORD PTR ds:0x64000000
  432771:	imul   ebp,DWORD PTR ds:0x7375,0x0
  432778:	(bad)  
  432779:	(bad)  
  43277a:	(bad)  
  43277b:	inc    DWORD PTR [esi]
  43277d:	add    BYTE PTR [eax],al
  43277f:	add    BYTE PTR [ebx+0x73],ah
  432782:	inc    esp
  432783:	dec    ebx
  432784:	push   ebp
  432785:	push   ebx
  432786:	add    BYTE PTR [eax],al
  432788:	(bad)  
  432789:	(bad)  
  43278a:	(bad)  
  43278b:	dec    DWORD PTR [ecx]
  43278d:	add    BYTE PTR [eax],al
  43278f:	add    BYTE PTR [edx+0x49],cl
  432792:	push   ebx
  432793:	pop    edi
  432794:	pop    eax
  432795:	xor    BYTE PTR [edx],dh
  432797:	xor    BYTE PTR [ecx],dh
  432799:	add    BYTE PTR [eax],al
  43279b:	add    bh,bh
  43279d:	(bad)  
  43279e:	(bad)  
  43279f:	inc    DWORD PTR ds:0x58000000
  4327a5:	xor    BYTE PTR [edx],dh
  4327a7:	xor    BYTE PTR [ecx],dh
  4327a9:	add    BYTE PTR [eax],al
  4327ab:	add    bh,bh
  4327ad:	(bad)  
  4327ae:	(bad)  
  4327af:	call   DWORD PTR [ebx]
  4327b1:	add    BYTE PTR [eax],al
  4327b3:	add    BYTE PTR [ebx+0x73],ah
  4327b6:	dec    eax
  4327b7:	popa   
  4327b8:	ins    BYTE PTR es:[edi],dx
  4327b9:	push   di
  4327bb:	imul   esp,DWORD PTR [esp+esi*2+0x68],0x6174614b
  4327c3:	imul   esp,DWORD PTR [ecx+0x6e],0x61
  4327c7:	add    bh,bh
  4327c9:	(bad)  
  4327ca:	(bad)  
  4327cb:	inc    DWORD PTR [edi]
  4327cd:	add    BYTE PTR [eax],al
  4327cf:	add    BYTE PTR [ebx+0x53],cl
  4327d2:	inc    ebx
  4327d3:	xor    eax,0x363336
  4327d8:	(bad)  
  4327d9:	(bad)  
  4327da:	(bad)  
  4327db:	dec    DWORD PTR [ecx]
  4327dd:	add    BYTE PTR [eax],al
  4327df:	add    BYTE PTR [ecx+0x53],cl
  4327e2:	dec    edi
  4327e3:	ss xor al,0x36
  4327e6:	sub    eax,0x524b
  4327eb:	add    bh,bh
  4327ed:	(bad)  
  4327ee:	(bad)  
  4327ef:	dec    DWORD PTR [ecx]
  4327f1:	add    BYTE PTR [eax],al
  4327f3:	add    BYTE PTR [ebx+0x73],ah
  4327f6:	dec    ebx
  4327f7:	push   ebx
  4327f8:	inc    ebx
  4327f9:	xor    eax,0x363336
  4327fe:	add    BYTE PTR [eax],al
  432800:	(bad)  
  432801:	(bad)  
  432802:	(bad)  
  432803:	dec    DWORD PTR [edi]
  432805:	add    BYTE PTR [eax],al
  432807:	add    BYTE PTR [ecx+0x53],cl
  43280a:	dec    edi
  43280b:	sub    eax,0x34363031
  432810:	ss sub eax,0x2d534355
  432816:	xor    al,BYTE PTR [eax]
  432818:	(bad)  
  432819:	(bad)  
  43281a:	(bad)  
  43281b:	dec    DWORD PTR [ecx]
  43281d:	add    BYTE PTR [eax],al
  43281f:	add    BYTE PTR [ebx+0x73],ah
  432822:	push   ebp
  432823:	outs   dx,BYTE PTR ds:[esi]
  432824:	imul   esp,DWORD PTR [ebx+0x6f],0x6564
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	(bad)  
  43282f:	dec    DWORD PTR [edi]
  432831:	add    BYTE PTR [eax],al
  432833:	add    BYTE PTR [ecx+0x53],cl
  432836:	dec    edi
  432837:	sub    eax,0x34363031
  43283c:	ss sub eax,0x2d534355
  432842:	xor    al,0x0
  432844:	(bad)  
  432845:	(bad)  
  432846:	(bad)  
  432847:	inc    DWORD PTR [esi]
  432849:	add    BYTE PTR [eax],al
  43284b:	add    BYTE PTR [ebx+0x73],ah
  43284e:	push   ebp
  43284f:	inc    ebx
  432850:	push   ebx
  432851:	xor    al,0x0
  432853:	add    bh,bh
  432855:	(bad)  
  432856:	(bad)  
  432857:	inc    DWORD PTR [edi]
  432859:	add    BYTE PTR [eax],al
  43285b:	add    BYTE PTR [ebp+eax*2+0x43],al
  43285f:	sub    eax,0x53434d
  432864:	(bad)  
  432865:	(bad)  
  432866:	(bad)  
  432867:	inc    DWORD PTR [ebx]
  432869:	add    BYTE PTR [eax],al
  43286b:	add    BYTE PTR [ebp+eiz*2+0x63],ah
  43286f:	add    bh,bh
  432871:	(bad)  
  432872:	(bad)  
  432873:	dec    DWORD PTR [eax]
  432875:	add    BYTE PTR [eax],al
  432877:	add    BYTE PTR [ebx+0x73],ah
  43287a:	inc    esp
  43287b:	inc    ebp
  43287c:	inc    ebx
  43287d:	dec    ebp
  43287e:	inc    ebx
  43287f:	push   ebx
  432880:	add    BYTE PTR [eax],al
  432882:	add    BYTE PTR [eax],al
  432884:	(bad)  
  432885:	(bad)  
  432886:	(bad)  
  432887:	dec    DWORD PTR [ecx]
  432889:	add    BYTE PTR [eax],al
  43288b:	add    BYTE PTR [eax+0x70],ch
  43288e:	sub    eax,0x616d6f72
  432893:	outs   dx,BYTE PTR ds:[esi]
  432894:	cmp    BYTE PTR [eax],al
  432896:	add    BYTE PTR [eax],al
  432898:	(bad)  
  432899:	(bad)  
  43289a:	(bad)  
  43289b:	inc    DWORD PTR [esi]
  43289d:	add    BYTE PTR [eax],al
  43289f:	add    BYTE PTR [edx+0x6f],dh
  4328a2:	ins    DWORD PTR es:[edi],dx
  4328a3:	popa   
  4328a4:	outs   dx,BYTE PTR ds:[esi]
  4328a5:	cmp    BYTE PTR [eax],al
  4328a7:	add    bh,bh
  4328a9:	(bad)  
  4328aa:	(bad)  
  4328ab:	inc    DWORD PTR [edx]
  4328ad:	add    BYTE PTR [eax],al
  4328af:	add    BYTE PTR [edx+0x38],dh
  4328b2:	add    BYTE PTR [eax],al
  4328b4:	(bad)  
  4328b5:	(bad)  
  4328b6:	(bad)  
  4328b7:	dec    DWORD PTR [edx]
  4328b9:	add    BYTE PTR [eax],al
  4328bb:	add    BYTE PTR [ebx+0x73],ah
  4328be:	dec    eax
  4328bf:	push   eax
  4328c0:	push   edx
  4328c1:	outs   dx,DWORD PTR ds:[esi]
  4328c2:	ins    DWORD PTR es:[edi],dx
  4328c3:	popa   
  4328c4:	outs   dx,BYTE PTR ds:[esi]
  4328c5:	cmp    BYTE PTR [eax],al
  4328c7:	add    bh,bh
  4328c9:	(bad)  
  4328ca:	(bad)  
  4328cb:	dec    DWORD PTR [ecx]
  4328cd:	add    BYTE PTR [eax],al
  4328cf:	add    BYTE PTR [ebp+0x61],ch
  4328d2:	arpl   WORD PTR [ecx+0x6e],bp
  4328d5:	je     0x432946
  4328d7:	jae    0x432941
  4328d9:	add    BYTE PTR [eax],al
  4328db:	add    bh,bh
  4328dd:	(bad)  
  4328de:	(bad)  
  4328df:	inc    DWORD PTR [ebx]
  4328e1:	add    BYTE PTR [eax],al
  4328e3:	add    BYTE PTR [ebp+0x61],ch
  4328e6:	arpl   WORD PTR [eax],ax
  4328e8:	(bad)  
  4328e9:	(bad)  
  4328ea:	(bad)  
  4328eb:	dec    DWORD PTR [ebx]
  4328ed:	add    BYTE PTR [eax],al
  4328ef:	add    BYTE PTR [ebx+0x73],ah
  4328f2:	dec    ebp
  4328f3:	popa   
  4328f4:	arpl   WORD PTR [ecx+0x6e],bp
  4328f7:	je     0x432968
  4328f9:	jae    0x432963
  4328fb:	add    bh,bh
  4328fd:	(bad)  
  4328fe:	(bad)  
  4328ff:	inc    DWORD PTR [esi]
  432901:	add    BYTE PTR [eax],al
  432903:	add    BYTE PTR [ecx+0x42],cl
  432906:	dec    ebp
  432907:	xor    BYTE PTR [ebx],dh
  432909:	aaa    
  43290a:	add    BYTE PTR [eax],al
  43290c:	(bad)  
  43290d:	(bad)  
  43290e:	(bad)  
  43290f:	inc    DWORD PTR ds:0x63000000
  432915:	jo     0x432947
  432917:	xor    esi,DWORD PTR [edi]
  432919:	add    BYTE PTR [eax],al
  43291b:	add    bh,bh
  43291d:	(bad)  
  43291e:	(bad)  
  43291f:	dec    DWORD PTR [eax+eax*1]
  432922:	add    BYTE PTR [eax],al
  432924:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432928:	imul   esp,DWORD PTR [ebx+0x2d],0x752d7063
  43292f:	jae    0x432931
  432931:	add    BYTE PTR [eax],al
  432933:	add    bh,bh
  432935:	(bad)  
  432936:	(bad)  
  432937:	dec    DWORD PTR [eax+eax*1]
  43293a:	add    BYTE PTR [eax],al
  43293c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432940:	imul   esp,DWORD PTR [ebx+0x2d],0x632d7063
  432947:	popa   
  432948:	add    BYTE PTR [eax],al
  43294a:	add    BYTE PTR [eax],al
  43294c:	(bad)  
  43294d:	(bad)  
  43294e:	(bad)  
  43294f:	dec    DWORD PTR [eax+eax*1]
  432952:	add    BYTE PTR [eax],al
  432954:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432958:	imul   esp,DWORD PTR [ebx+0x2d],0x772d7063
  43295f:	je     0x432961
  432961:	add    BYTE PTR [eax],al
  432963:	add    bh,bh
  432965:	(bad)  
  432966:	(bad)  
  432967:	dec    DWORD PTR [eax+eax*1]
  43296a:	add    BYTE PTR [eax],al
  43296c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432970:	imul   esp,DWORD PTR [ebx+0x2d],0x6e2d7063
  432977:	ins    BYTE PTR es:[edi],dx
  432978:	add    BYTE PTR [eax],al
  43297a:	add    BYTE PTR [eax],al
  43297c:	(bad)  
  43297d:	(bad)  
  43297e:	(bad)  
  43297f:	dec    DWORD PTR [eax]
  432981:	add    BYTE PTR [eax],al
  432983:	add    BYTE PTR [ebx+0x73],ah
  432986:	dec    ecx
  432987:	inc    edx
  432988:	dec    ebp
  432989:	xor    BYTE PTR [ebx],dh
  43298b:	aaa    
  43298c:	add    BYTE PTR [eax],al
  43298e:	add    BYTE PTR [eax],al
  432990:	(bad)  
  432991:	(bad)  
  432992:	(bad)  
  432993:	inc    DWORD PTR [esi]
  432995:	add    BYTE PTR [eax],al
  432997:	add    BYTE PTR [ecx+0x42],cl
  43299a:	dec    ebp
  43299b:	xor    BYTE PTR [ebx],dh
  43299d:	cmp    BYTE PTR [eax],al
  43299f:	add    bh,bh
  4329a1:	(bad)  
  4329a2:	(bad)  
  4329a3:	dec    DWORD PTR [edx]
  4329a5:	add    BYTE PTR [eax],al
  4329a7:	add    BYTE PTR [ebp+0x42],al
  4329aa:	inc    ebx
  4329ab:	inc    esp
  4329ac:	dec    ecx
  4329ad:	inc    ebx
  4329ae:	sub    eax,0x544e49
  4329b3:	add    bh,bh
  4329b5:	(bad)  
  4329b6:	(bad)  
  4329b7:	inc    DWORD PTR ds:0x63000000
  4329bd:	jo     0x4329ef
  4329bf:	xor    edi,DWORD PTR [eax]
  4329c1:	add    BYTE PTR [eax],al
  4329c3:	add    bh,bh
  4329c5:	(bad)  
  4329c6:	(bad)  
  4329c7:	dec    DWORD PTR [eax]
  4329c9:	add    BYTE PTR [eax],al
  4329cb:	add    BYTE PTR [ebx+0x73],ah
  4329ce:	dec    ecx
  4329cf:	inc    edx
  4329d0:	dec    ebp
  4329d1:	xor    BYTE PTR [ebx],dh
  4329d3:	cmp    BYTE PTR [eax],al
  4329d5:	add    BYTE PTR [eax],al
  4329d7:	add    bh,bh
  4329d9:	(bad)  
  4329da:	(bad)  
  4329db:	inc    DWORD PTR [esi]
  4329dd:	add    BYTE PTR [eax],al
  4329df:	add    BYTE PTR [ecx+0x42],cl
  4329e2:	dec    ebp
  4329e3:	xor    dh,BYTE PTR [edi]
  4329e5:	xor    eax,DWORD PTR [eax]
  4329e7:	add    bh,bh
  4329e9:	(bad)  
  4329ea:	(bad)  
  4329eb:	inc    DWORD PTR ds:0x43000000
  4329f1:	push   eax
  4329f2:	xor    dh,BYTE PTR [edi]
  4329f4:	xor    eax,DWORD PTR [eax]
  4329f6:	add    BYTE PTR [eax],al
  4329f8:	(bad)  
  4329f9:	(bad)  
  4329fa:	(bad)  
  4329fb:	dec    DWORD PTR [eax]
  4329fd:	add    BYTE PTR [eax],al
  4329ff:	add    BYTE PTR [ebx+0x73],ah
  432a02:	dec    ecx
  432a03:	inc    edx
  432a04:	dec    ebp
  432a05:	xor    dh,BYTE PTR [edi]
  432a07:	xor    eax,DWORD PTR [eax]
  432a09:	add    BYTE PTR [eax],al
  432a0b:	add    bh,bh
  432a0d:	(bad)  
  432a0e:	(bad)  
  432a0f:	inc    DWORD PTR [esi]
  432a11:	add    BYTE PTR [eax],al
  432a13:	add    BYTE PTR [ecx+0x42],cl
  432a16:	dec    ebp
  432a17:	xor    dh,BYTE PTR [edi]
  432a19:	xor    al,0x0
  432a1b:	add    bh,bh
  432a1d:	(bad)  
  432a1e:	(bad)  
  432a1f:	dec    DWORD PTR [ecx]
  432a21:	add    BYTE PTR [eax],al
  432a23:	add    BYTE PTR [ebp+0x42],al
  432a26:	inc    ebx
  432a27:	inc    esp
  432a28:	dec    ecx
  432a29:	inc    ebx
  432a2a:	sub    eax,0x4542
  432a2f:	add    bh,bh
  432a31:	(bad)  
  432a32:	(bad)  
  432a33:	inc    DWORD PTR ds:0x43000000
  432a39:	push   eax
  432a3a:	xor    dh,BYTE PTR [edi]
  432a3c:	xor    al,0x0
  432a3e:	add    BYTE PTR [eax],al
  432a40:	(bad)  
  432a41:	(bad)  
  432a42:	(bad)  
  432a43:	dec    DWORD PTR [eax]
  432a45:	add    BYTE PTR [eax],al
  432a47:	add    BYTE PTR [ebx+0x73],ah
  432a4a:	dec    ecx
  432a4b:	inc    edx
  432a4c:	dec    ebp
  432a4d:	xor    dh,BYTE PTR [edi]
  432a4f:	xor    al,0x0
  432a51:	add    BYTE PTR [eax],al
  432a53:	add    bh,bh
  432a55:	(bad)  
  432a56:	(bad)  
  432a57:	inc    DWORD PTR [esi]
  432a59:	add    BYTE PTR [eax],al
  432a5b:	add    BYTE PTR [ecx+0x42],cl
  432a5e:	dec    ebp
  432a5f:	xor    dh,BYTE PTR [edi]
  432a61:	xor    eax,0xffff0000
  432a66:	(bad)  
  432a67:	dec    DWORD PTR [ecx]
  432a69:	add    BYTE PTR [eax],al
  432a6b:	add    BYTE PTR [ebp+0x42],al
  432a6e:	inc    ebx
  432a6f:	inc    esp
  432a70:	dec    ecx
  432a71:	inc    ebx
  432a72:	sub    eax,0x5242
  432a77:	add    bh,bh
  432a79:	(bad)  
  432a7a:	(bad)  
  432a7b:	inc    DWORD PTR ds:0x63000000
  432a81:	jo     0x432ab5
  432a83:	aaa    
  432a84:	xor    eax,0xff000000
  432a89:	(bad)  
  432a8a:	(bad)  
  432a8b:	dec    DWORD PTR [eax]
  432a8d:	add    BYTE PTR [eax],al
  432a8f:	add    BYTE PTR [ebx+0x73],ah
  432a92:	dec    ecx
  432a93:	inc    edx
  432a94:	dec    ebp
  432a95:	xor    dh,BYTE PTR [edi]
  432a97:	xor    eax,0x0
  432a9c:	(bad)  
  432a9d:	(bad)  
  432a9e:	(bad)  
  432a9f:	inc    DWORD PTR [esi]
  432aa1:	add    BYTE PTR [eax],al
  432aa3:	add    BYTE PTR [ecx+0x42],cl
  432aa6:	dec    ebp
  432aa7:	xor    dh,BYTE PTR [edi]
  432aa9:	aaa    
  432aaa:	add    BYTE PTR [eax],al
  432aac:	(bad)  
  432aad:	(bad)  
  432aae:	(bad)  
  432aaf:	dec    DWORD PTR [eax+eax*1]
  432ab2:	add    BYTE PTR [eax],al
  432ab4:	inc    ebp
  432ab5:	inc    edx
  432ab6:	inc    ebx
  432ab7:	inc    esp
  432ab8:	dec    ecx
  432ab9:	inc    ebx
  432aba:	sub    eax,0x442d5043
  432abf:	dec    ebx
  432ac0:	add    BYTE PTR [eax],al
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	(bad)  
  432ac5:	(bad)  
  432ac6:	(bad)  
  432ac7:	dec    DWORD PTR [eax+eax*1]
  432aca:	add    BYTE PTR [eax],al
  432acc:	inc    ebp
  432acd:	inc    edx
  432ace:	inc    ebx
  432acf:	inc    esp
  432ad0:	dec    ecx
  432ad1:	inc    ebx
  432ad2:	sub    eax,0x4e2d5043
  432ad7:	dec    edi
  432ad8:	add    BYTE PTR [eax],al
  432ada:	add    BYTE PTR [eax],al
  432adc:	(bad)  
  432add:	(bad)  
  432ade:	(bad)  
  432adf:	dec    DWORD PTR [eax]
  432ae1:	add    BYTE PTR [eax],al
  432ae3:	add    BYTE PTR [ebx+0x73],ah
  432ae6:	dec    ecx
  432ae7:	inc    edx
  432ae8:	dec    ebp
  432ae9:	xor    dh,BYTE PTR [edi]
  432aeb:	aaa    
  432aec:	add    BYTE PTR [eax],al
  432aee:	add    BYTE PTR [eax],al
  432af0:	(bad)  
  432af1:	(bad)  
  432af2:	(bad)  
  432af3:	inc    DWORD PTR [esi]
  432af5:	add    BYTE PTR [eax],al
  432af7:	add    BYTE PTR [ecx+0x42],cl
  432afa:	dec    ebp
  432afb:	xor    dh,BYTE PTR [edi]
  432afd:	cmp    BYTE PTR [eax],al
  432aff:	add    bh,bh
  432b01:	(bad)  
  432b02:	(bad)  
  432b03:	inc    DWORD PTR ds:0x43000000
  432b09:	push   eax
  432b0a:	xor    dh,BYTE PTR [edi]
  432b0c:	cmp    BYTE PTR [eax],al
  432b0e:	add    BYTE PTR [eax],al
  432b10:	(bad)  
  432b11:	(bad)  
  432b12:	(bad)  
  432b13:	dec    DWORD PTR [eax+eax*1]
  432b16:	add    BYTE PTR [eax],al
  432b18:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432b1c:	imul   esp,DWORD PTR [ebx+0x2d],0x662d7063
  432b23:	imul   eax,DWORD PTR [eax],0xff000000
  432b29:	(bad)  
  432b2a:	(bad)  
  432b2b:	dec    DWORD PTR [eax+eax*1]
  432b2e:	add    BYTE PTR [eax],al
  432b30:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432b34:	imul   esp,DWORD PTR [ebx+0x2d],0x732d7063
  432b3b:	add    BYTE PTR gs:[eax],al
  432b3e:	add    BYTE PTR [eax],al
  432b40:	(bad)  
  432b41:	(bad)  
  432b42:	(bad)  
  432b43:	dec    DWORD PTR [eax]
  432b45:	add    BYTE PTR [eax],al
  432b47:	add    BYTE PTR [ebx+0x73],ah
  432b4a:	dec    ecx
  432b4b:	inc    edx
  432b4c:	dec    ebp
  432b4d:	xor    dh,BYTE PTR [edi]
  432b4f:	cmp    BYTE PTR [eax],al
  432b51:	add    BYTE PTR [eax],al
  432b53:	add    bh,bh
  432b55:	(bad)  
  432b56:	(bad)  
  432b57:	inc    DWORD PTR [esi]
  432b59:	add    BYTE PTR [eax],al
  432b5b:	add    BYTE PTR [ecx+0x42],cl
  432b5e:	dec    ebp
  432b5f:	xor    bh,BYTE PTR [eax]
  432b61:	xor    BYTE PTR [eax],al
  432b63:	add    bh,bh
  432b65:	(bad)  
  432b66:	(bad)  
  432b67:	inc    DWORD PTR ds:0x43000000
  432b6d:	push   eax
  432b6e:	xor    bh,BYTE PTR [eax]
  432b70:	xor    BYTE PTR [eax],al
  432b72:	add    BYTE PTR [eax],al
  432b74:	(bad)  
  432b75:	(bad)  
  432b76:	(bad)  
  432b77:	dec    DWORD PTR [eax+eax*1]
  432b7a:	add    BYTE PTR [eax],al
  432b7c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432b80:	imul   esp,DWORD PTR [ebx+0x2d],0x692d7063
  432b87:	je     0x432b89
  432b89:	add    BYTE PTR [eax],al
  432b8b:	add    bh,bh
  432b8d:	(bad)  
  432b8e:	(bad)  
  432b8f:	dec    DWORD PTR [eax]
  432b91:	add    BYTE PTR [eax],al
  432b93:	add    BYTE PTR [ebx+0x73],ah
  432b96:	dec    ecx
  432b97:	inc    edx
  432b98:	dec    ebp
  432b99:	xor    bh,BYTE PTR [eax]
  432b9b:	xor    BYTE PTR [eax],al
  432b9d:	add    BYTE PTR [eax],al
  432b9f:	add    bh,bh
  432ba1:	(bad)  
  432ba2:	(bad)  
  432ba3:	inc    DWORD PTR [esi]
  432ba5:	add    BYTE PTR [eax],al
  432ba7:	add    BYTE PTR [ecx+0x42],cl
  432baa:	dec    ebp
  432bab:	xor    bh,BYTE PTR [eax]
  432bad:	xor    DWORD PTR [eax],eax
  432baf:	add    bh,bh
  432bb1:	(bad)  
  432bb2:	(bad)  
  432bb3:	dec    DWORD PTR [ebx]
  432bb5:	add    BYTE PTR [eax],al
  432bb7:	add    BYTE PTR [ebp+0x42],al
  432bba:	inc    ebx
  432bbb:	inc    esp
  432bbc:	dec    ecx
  432bbd:	inc    ebx
  432bbe:	sub    eax,0x452d504a
  432bc3:	add    bh,bh
  432bc5:	(bad)  
  432bc6:	(bad)  
  432bc7:	inc    DWORD PTR ds:0x63000000
  432bcd:	jo     0x432c01
  432bcf:	cmp    BYTE PTR [ecx],dh
  432bd1:	add    BYTE PTR [eax],al
  432bd3:	add    bh,bh
  432bd5:	(bad)  
  432bd6:	(bad)  
  432bd7:	dec    DWORD PTR [eax]
  432bd9:	add    BYTE PTR [eax],al
  432bdb:	add    BYTE PTR [ebx+0x73],ah
  432bde:	dec    ecx
  432bdf:	inc    edx
  432be0:	dec    ebp
  432be1:	xor    bh,BYTE PTR [eax]
  432be3:	xor    DWORD PTR [eax],eax
  432be5:	add    BYTE PTR [eax],al
  432be7:	add    bh,bh
  432be9:	(bad)  
  432bea:	(bad)  
  432beb:	inc    DWORD PTR [esi]
  432bed:	add    BYTE PTR [eax],al
  432bef:	add    BYTE PTR [ecx+0x42],cl
  432bf2:	dec    ebp
  432bf3:	xor    bh,BYTE PTR [eax]
  432bf5:	xor    al,0x0
  432bf7:	add    bh,bh
  432bf9:	(bad)  
  432bfa:	(bad)  
  432bfb:	inc    DWORD PTR ds:0x43000000
  432c01:	push   eax
  432c02:	xor    bh,BYTE PTR [eax]
  432c04:	xor    al,0x0
  432c06:	add    BYTE PTR [eax],al
  432c08:	(bad)  
  432c09:	(bad)  
  432c0a:	(bad)  
  432c0b:	dec    DWORD PTR [eax+eax*1]
  432c0e:	add    BYTE PTR [eax],al
  432c10:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432c14:	imul   esp,DWORD PTR [ebx+0x2d],0x652d7063
  432c1b:	jae    0x432c1d
  432c1d:	add    BYTE PTR [eax],al
  432c1f:	add    bh,bh
  432c21:	(bad)  
  432c22:	(bad)  
  432c23:	dec    DWORD PTR [eax]
  432c25:	add    BYTE PTR [eax],al
  432c27:	add    BYTE PTR [ebx+0x73],ah
  432c2a:	dec    ecx
  432c2b:	inc    edx
  432c2c:	dec    ebp
  432c2d:	xor    bh,BYTE PTR [eax]
  432c2f:	xor    al,0x0
  432c31:	add    BYTE PTR [eax],al
  432c33:	add    bh,bh
  432c35:	(bad)  
  432c36:	(bad)  
  432c37:	inc    DWORD PTR [esi]
  432c39:	add    BYTE PTR [eax],al
  432c3b:	add    BYTE PTR [ecx+0x42],cl
  432c3e:	dec    ebp
  432c3f:	xor    bh,BYTE PTR [eax]
  432c41:	xor    eax,0xffff0000
  432c46:	(bad)  
  432c47:	inc    DWORD PTR ds:0x43000000
  432c4d:	push   eax
  432c4e:	xor    bh,BYTE PTR [eax]
  432c50:	xor    eax,0xff000000
  432c55:	(bad)  
  432c56:	(bad)  
  432c57:	dec    DWORD PTR [eax+eax*1]
  432c5a:	add    BYTE PTR [eax],al
  432c5c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432c60:	imul   esp,DWORD PTR [ebx+0x2d],0x672d7063
  432c67:	bound  eax,QWORD PTR [eax]
  432c69:	add    BYTE PTR [eax],al
  432c6b:	add    bh,bh
  432c6d:	(bad)  
  432c6e:	(bad)  
  432c6f:	dec    DWORD PTR [eax]
  432c71:	add    BYTE PTR [eax],al
  432c73:	add    BYTE PTR [ebx+0x73],ah
  432c76:	dec    ecx
  432c77:	inc    edx
  432c78:	dec    ebp
  432c79:	xor    bh,BYTE PTR [eax]
  432c7b:	xor    eax,0x0
  432c80:	(bad)  
  432c81:	(bad)  
  432c82:	(bad)  
  432c83:	inc    DWORD PTR [esi]
  432c85:	add    BYTE PTR [eax],al
  432c87:	add    BYTE PTR [ecx+0x42],cl
  432c8a:	dec    ebp
  432c8b:	xor    bh,BYTE PTR [ecx]
  432c8d:	xor    BYTE PTR [eax],al
  432c8f:	add    bh,bh
  432c91:	(bad)  
  432c92:	(bad)  
  432c93:	inc    DWORD PTR ds:0x63000000
  432c99:	jo     0x432ccd
  432c9b:	cmp    DWORD PTR [eax],esi
  432c9d:	add    BYTE PTR [eax],al
  432c9f:	add    bh,bh
  432ca1:	(bad)  
  432ca2:	(bad)  
  432ca3:	dec    DWORD PTR [esi]
  432ca5:	add    BYTE PTR [eax],al
  432ca7:	add    BYTE PTR [ebp+0x42],al
  432caa:	inc    ebx
  432cab:	inc    esp
  432cac:	dec    ecx
  432cad:	inc    ebx
  432cae:	sub    eax,0x6b2d504a
  432cb3:	popa   
  432cb4:	outs   dx,BYTE PTR ds:[esi]
  432cb5:	popa   
  432cb6:	add    BYTE PTR [eax],al
  432cb8:	(bad)  
  432cb9:	(bad)  
  432cba:	(bad)  
  432cbb:	dec    DWORD PTR [eax]
  432cbd:	add    BYTE PTR [eax],al
  432cbf:	add    BYTE PTR [ebx+0x73],ah
  432cc2:	dec    ecx
  432cc3:	inc    edx
  432cc4:	dec    ebp
  432cc5:	xor    bh,BYTE PTR [ecx]
  432cc7:	xor    BYTE PTR [eax],al
  432cc9:	add    BYTE PTR [eax],al
  432ccb:	add    bh,bh
  432ccd:	(bad)  
  432cce:	(bad)  
  432ccf:	inc    DWORD PTR [esi]
  432cd1:	add    BYTE PTR [eax],al
  432cd3:	add    BYTE PTR [ecx+0x42],cl
  432cd6:	dec    ebp
  432cd7:	xor    bh,BYTE PTR [ecx]
  432cd9:	aaa    
  432cda:	add    BYTE PTR [eax],al
  432cdc:	(bad)  
  432cdd:	(bad)  
  432cde:	(bad)  
  432cdf:	inc    DWORD PTR ds:0x63000000
  432ce5:	jo     0x432d19
  432ce7:	cmp    DWORD PTR [edi],esi
  432ce9:	add    BYTE PTR [eax],al
  432ceb:	add    bh,bh
  432ced:	(bad)  
  432cee:	(bad)  
  432cef:	dec    DWORD PTR [eax+eax*1]
  432cf2:	add    BYTE PTR [eax],al
  432cf4:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432cf8:	imul   esp,DWORD PTR [ebx+0x2d],0x662d7063
  432cff:	jb     0x432d01
  432d01:	add    BYTE PTR [eax],al
  432d03:	add    bh,bh
  432d05:	(bad)  
  432d06:	(bad)  
  432d07:	dec    DWORD PTR [eax]
  432d09:	add    BYTE PTR [eax],al
  432d0b:	add    BYTE PTR [ebx+0x73],ah
  432d0e:	dec    ecx
  432d0f:	inc    edx
  432d10:	dec    ebp
  432d11:	xor    bh,BYTE PTR [ecx]
  432d13:	aaa    
  432d14:	add    BYTE PTR [eax],al
  432d16:	add    BYTE PTR [eax],al
  432d18:	(bad)  
  432d19:	(bad)  
  432d1a:	(bad)  
  432d1b:	inc    DWORD PTR [esi]
  432d1d:	add    BYTE PTR [eax],al
  432d1f:	add    BYTE PTR [ecx+0x42],cl
  432d22:	dec    ebp
  432d23:	xor    al,0x32
  432d25:	xor    BYTE PTR [eax],al
  432d27:	add    bh,bh
  432d29:	(bad)  
  432d2a:	(bad)  
  432d2b:	inc    DWORD PTR ds:0x63000000
  432d31:	jo     0x432d67
  432d33:	xor    dh,BYTE PTR [eax]
  432d35:	add    BYTE PTR [eax],al
  432d37:	add    bh,bh
  432d39:	(bad)  
  432d3a:	(bad)  
  432d3b:	dec    DWORD PTR ds:0x65000000
  432d41:	bound  esp,QWORD PTR [ebx+0x64]
  432d44:	imul   esp,DWORD PTR [ebx+0x2d],0x612d7063
  432d4b:	jb     0x432d7e
  432d4d:	add    BYTE PTR [eax],al
  432d4f:	add    bh,bh
  432d51:	(bad)  
  432d52:	(bad)  
  432d53:	dec    DWORD PTR [eax]
  432d55:	add    BYTE PTR [eax],al
  432d57:	add    BYTE PTR [ebx+0x73],ah
  432d5a:	dec    ecx
  432d5b:	inc    edx
  432d5c:	dec    ebp
  432d5d:	xor    al,0x32
  432d5f:	xor    BYTE PTR [eax],al
  432d61:	add    BYTE PTR [eax],al
  432d63:	add    bh,bh
  432d65:	(bad)  
  432d66:	(bad)  
  432d67:	inc    DWORD PTR [esi]
  432d69:	add    BYTE PTR [eax],al
  432d6b:	add    BYTE PTR [ecx+0x42],cl
  432d6e:	dec    ebp
  432d6f:	xor    al,0x32
  432d71:	xor    eax,DWORD PTR [eax]
  432d73:	add    bh,bh
  432d75:	(bad)  
  432d76:	(bad)  
  432d77:	inc    DWORD PTR ds:0x63000000
  432d7d:	jo     0x432db3
  432d7f:	xor    dh,BYTE PTR [ebx]
  432d81:	add    BYTE PTR [eax],al
  432d83:	add    bh,bh
  432d85:	(bad)  
  432d86:	(bad)  
  432d87:	dec    DWORD PTR [eax+eax*1]
  432d8a:	add    BYTE PTR [eax],al
  432d8c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432d90:	imul   esp,DWORD PTR [ebx+0x2d],0x672d7063
  432d97:	jb     0x432d99
  432d99:	add    BYTE PTR [eax],al
  432d9b:	add    bh,bh
  432d9d:	(bad)  
  432d9e:	(bad)  
  432d9f:	dec    DWORD PTR [eax]
  432da1:	add    BYTE PTR [eax],al
  432da3:	add    BYTE PTR [ebx+0x73],ah
  432da6:	dec    ecx
  432da7:	inc    edx
  432da8:	dec    ebp
  432da9:	xor    al,0x32
  432dab:	xor    eax,DWORD PTR [eax]
  432dad:	add    BYTE PTR [eax],al
  432daf:	add    bh,bh
  432db1:	(bad)  
  432db2:	(bad)  
  432db3:	inc    DWORD PTR [esi]
  432db5:	add    BYTE PTR [eax],al
  432db7:	add    BYTE PTR [ecx+0x42],cl
  432dba:	dec    ebp
  432dbb:	xor    al,0x32
  432dbd:	xor    al,0x0
  432dbf:	add    bh,bh
  432dc1:	(bad)  
  432dc2:	(bad)  
  432dc3:	inc    DWORD PTR ds:0x63000000
  432dc9:	jo     0x432dff
  432dcb:	xor    dh,BYTE PTR [eax+eax*1]
  432dce:	add    BYTE PTR [eax],al
  432dd0:	(bad)  
  432dd1:	(bad)  
  432dd2:	(bad)  
  432dd3:	dec    DWORD PTR [eax+eax*1]
  432dd6:	add    BYTE PTR [eax],al
  432dd8:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432ddc:	imul   esp,DWORD PTR [ebx+0x2d],0x682d7063
  432de3:	add    BYTE PTR gs:[eax],al
  432de6:	add    BYTE PTR [eax],al
  432de8:	(bad)  
  432de9:	(bad)  
  432dea:	(bad)  
  432deb:	dec    DWORD PTR [eax]
  432ded:	add    BYTE PTR [eax],al
  432def:	add    BYTE PTR [ebx+0x73],ah
  432df2:	dec    ecx
  432df3:	inc    edx
  432df4:	dec    ebp
  432df5:	xor    al,0x32
  432df7:	xor    al,0x0
  432df9:	add    BYTE PTR [eax],al
  432dfb:	add    bh,bh
  432dfd:	(bad)  
  432dfe:	(bad)  
  432dff:	inc    DWORD PTR [esi]
  432e01:	add    BYTE PTR [eax],al
  432e03:	add    BYTE PTR [ecx+0x42],cl
  432e06:	dec    ebp
  432e07:	xor    al,0x33
  432e09:	aaa    
  432e0a:	add    BYTE PTR [eax],al
  432e0c:	(bad)  
  432e0d:	(bad)  
  432e0e:	(bad)  
  432e0f:	inc    DWORD PTR ds:0x63000000
  432e15:	jo     0x432e4b
  432e17:	xor    esi,DWORD PTR [edi]
  432e19:	add    BYTE PTR [eax],al
  432e1b:	add    bh,bh
  432e1d:	(bad)  
  432e1e:	(bad)  
  432e1f:	inc    DWORD PTR [ebx]
  432e21:	add    BYTE PTR [eax],al
  432e23:	add    BYTE PTR [ebx+esi*1],dh
  432e26:	aaa    
  432e27:	add    bh,bh
  432e29:	(bad)  
  432e2a:	(bad)  
  432e2b:	call   DWORD PTR [eax]
  432e2d:	add    BYTE PTR [eax],al
  432e2f:	add    BYTE PTR [ebx+0x73],ah
  432e32:	push   eax
  432e33:	inc    ebx
  432e34:	cmp    BYTE PTR [ebx+0x6f],al
  432e37:	fs gs push eax
  432e3a:	popa   
  432e3b:	addr16 gs xor al,0x33
  432e3f:	aaa    
  432e40:	add    BYTE PTR [eax],al
  432e42:	add    BYTE PTR [eax],al
  432e44:	(bad)  
  432e45:	(bad)  
  432e46:	(bad)  
  432e47:	inc    DWORD PTR [esi]
  432e49:	add    BYTE PTR [eax],al
  432e4b:	add    BYTE PTR [ecx+0x42],cl
  432e4e:	dec    ebp
  432e4f:	xor    eax,0x3030
  432e54:	(bad)  
  432e55:	(bad)  
  432e56:	(bad)  
  432e57:	inc    DWORD PTR ds:0x43000000
  432e5d:	push   eax
  432e5e:	xor    eax,0x3030
  432e63:	add    bh,bh
  432e65:	(bad)  
  432e66:	(bad)  
  432e67:	dec    DWORD PTR [eax+eax*1]
  432e6a:	add    BYTE PTR [eax],al
  432e6c:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432e70:	imul   esp,DWORD PTR [ebx+0x2d],0x622d7063
  432e77:	add    BYTE PTR gs:[eax],al
  432e7a:	add    BYTE PTR [eax],al
  432e7c:	(bad)  
  432e7d:	(bad)  
  432e7e:	(bad)  
  432e7f:	dec    DWORD PTR [eax+eax*1]
  432e82:	add    BYTE PTR [eax],al
  432e84:	bound  esp,QWORD PTR gs:[ebx+0x64]
  432e88:	imul   esp,DWORD PTR [ebx+0x2d],0x632d7063
  432e8f:	push   0x0
  432e94:	(bad)  
  432e95:	(bad)  
  432e96:	(bad)  
  432e97:	dec    DWORD PTR [eax]
  432e99:	add    BYTE PTR [eax],al
  432e9b:	add    BYTE PTR [ebx+0x73],ah
  432e9e:	dec    ecx
  432e9f:	inc    edx
  432ea0:	dec    ebp
  432ea1:	xor    eax,0x3030
  432ea6:	add    BYTE PTR [eax],al
  432ea8:	(bad)  
  432ea9:	(bad)  
  432eaa:	(bad)  
  432eab:	inc    DWORD PTR [esi]
  432ead:	add    BYTE PTR [eax],al
  432eaf:	add    BYTE PTR [ecx+0x42],cl
  432eb2:	dec    ebp
  432eb3:	aaa    
  432eb4:	aaa    
  432eb5:	xor    eax,0xffff0000
  432eba:	(bad)  
  432ebb:	inc    DWORD PTR ds:0x63000000
  432ec1:	jo     0x432efa
  432ec3:	aaa    
  432ec4:	xor    eax,0xff000000
  432ec9:	(bad)  
  432eca:	(bad)  
  432ecb:	dec    DWORD PTR ds:0x63000000
  432ed1:	jae    0x432f23
  432ed3:	inc    ebx
  432ed4:	aaa    
  432ed5:	aaa    
  432ed6:	xor    eax,0x746c6142
  432edb:	imul   esp,DWORD PTR [ebx+0x0],0xffff0000
  432ee2:	(bad)  
  432ee3:	inc    DWORD PTR [esi]
  432ee5:	add    BYTE PTR [eax],al
  432ee7:	add    BYTE PTR [ecx+0x42],cl
  432eea:	dec    ebp
  432eeb:	cmp    BYTE PTR ds:0xff000030,dh
  432ef1:	(bad)  
  432ef2:	(bad)  
  432ef3:	inc    DWORD PTR ds:0x63000000
  432ef9:	jo     0x432f33
  432efb:	xor    eax,0x30
  432f00:	(bad)  
  432f01:	(bad)  
  432f02:	(bad)  
  432f03:	inc    DWORD PTR [ebx]
  432f05:	add    BYTE PTR [eax],al
  432f07:	add    BYTE PTR [eax],bh
  432f09:	xor    eax,0xffff0030
  432f0e:	(bad)  
  432f0f:	call   DWORD PTR [ebx]
  432f11:	add    BYTE PTR [eax],al
  432f13:	add    BYTE PTR [ebx+0x73],ah
  432f16:	push   eax
  432f17:	inc    ebx
  432f18:	cmp    BYTE PTR ds:0x6c754d30,dh
  432f1e:	je     0x432f89
  432f20:	ins    BYTE PTR es:[edi],dx
  432f21:	imul   ebp,DWORD PTR [esi+0x67],0x6c6175
  432f28:	(bad)  
  432f29:	(bad)  
  432f2a:	(bad)  
  432f2b:	inc    DWORD PTR [esi]
  432f2d:	add    BYTE PTR [eax],al
  432f2f:	add    BYTE PTR [ecx+0x42],cl
  432f32:	dec    ebp
  432f33:	cmp    BYTE PTR ds:0xff000031,dh
  432f39:	(bad)  
  432f3a:	(bad)  
  432f3b:	inc    DWORD PTR ds:0x63000000
  432f41:	jo     0x432f7b
  432f43:	xor    eax,0x31
  432f48:	(bad)  
  432f49:	(bad)  
  432f4a:	(bad)  
  432f4b:	inc    DWORD PTR [ebx]
  432f4d:	add    BYTE PTR [eax],al
  432f4f:	add    BYTE PTR [eax],bh
  432f51:	xor    eax,0xffff0031
  432f56:	(bad)  
  432f57:	dec    DWORD PTR [eax]
  432f59:	add    BYTE PTR [eax],al
  432f5b:	add    BYTE PTR [ebx+0x73],ah
  432f5e:	dec    ecx
  432f5f:	inc    edx
  432f60:	dec    ebp
  432f61:	cmp    BYTE PTR ds:0x31,dh
  432f67:	add    bh,bh
  432f69:	(bad)  
  432f6a:	(bad)  
  432f6b:	inc    DWORD PTR [esi]
  432f6d:	add    BYTE PTR [eax],al
  432f6f:	add    BYTE PTR [ecx+0x42],cl
  432f72:	dec    ebp
  432f73:	cmp    BYTE PTR ds:0xff000032,dh
  432f79:	(bad)  
  432f7a:	(bad)  
  432f7b:	inc    DWORD PTR ds:0x63000000
  432f81:	jo     0x432fbb
  432f83:	xor    eax,0x32
  432f88:	(bad)  
  432f89:	(bad)  
  432f8a:	(bad)  
  432f8b:	inc    DWORD PTR [ebx]
  432f8d:	add    BYTE PTR [eax],al
  432f8f:	add    BYTE PTR [eax],bh
  432f91:	xor    eax,0xffff0032
  432f96:	(bad)  
  432f97:	dec    DWORD PTR [eax]
  432f99:	add    BYTE PTR [eax],al
  432f9b:	add    BYTE PTR [ebx+0x73],ah
  432f9e:	push   eax
  432f9f:	inc    ebx
  432fa0:	jo     0x432fda
  432fa2:	xor    eax,0x32
  432fa7:	add    bh,bh
  432fa9:	(bad)  
  432faa:	(bad)  
  432fab:	inc    DWORD PTR [esi]
  432fad:	add    BYTE PTR [eax],al
  432faf:	add    BYTE PTR [ecx+0x42],cl
  432fb2:	dec    ebp
  432fb3:	cmp    BYTE PTR ds:0xff000035,dh
  432fb9:	(bad)  
  432fba:	(bad)  
  432fbb:	inc    DWORD PTR ds:0x63000000
  432fc1:	jo     0x432ffb
  432fc3:	xor    eax,0x35
  432fc8:	(bad)  
  432fc9:	(bad)  
  432fca:	(bad)  
  432fcb:	inc    DWORD PTR [ebx]
  432fcd:	add    BYTE PTR [eax],al
  432fcf:	add    BYTE PTR [eax],bh
  432fd1:	xor    eax,0xffff0035
  432fd6:	(bad)  
  432fd7:	dec    DWORD PTR [eax]
  432fd9:	add    BYTE PTR [eax],al
  432fdb:	add    BYTE PTR [ebx+0x73],ah
  432fde:	dec    ecx
  432fdf:	inc    edx
  432fe0:	dec    ebp
  432fe1:	cmp    BYTE PTR ds:0x35,dh
  432fe7:	add    bh,bh
  432fe9:	(bad)  
  432fea:	(bad)  
  432feb:	inc    DWORD PTR [esi]
  432fed:	add    BYTE PTR [eax],al
  432fef:	add    BYTE PTR [ecx+0x42],cl
  432ff2:	dec    ebp
  432ff3:	cmp    BYTE PTR ds:0xff000037,dh
  432ff9:	(bad)  
  432ffa:	(bad)  
  432ffb:	inc    DWORD PTR ds:0x63000000
  433001:	jo     0x43303b
  433003:	xor    eax,0x37
  433008:	(bad)  
  433009:	(bad)  
  43300a:	(bad)  
  43300b:	inc    DWORD PTR [ebx]
  43300d:	add    BYTE PTR [eax],al
  43300f:	add    BYTE PTR [eax],bh
  433011:	xor    eax,0xffff0037
  433016:	(bad)  
  433017:	dec    DWORD PTR [eax]
  433019:	add    BYTE PTR [eax],al
  43301b:	add    BYTE PTR [ebx+0x73],ah
  43301e:	dec    ecx
  43301f:	inc    edx
  433020:	dec    ebp
  433021:	cmp    BYTE PTR ds:0x37,dh
  433027:	add    bh,bh
  433029:	(bad)  
  43302a:	(bad)  
  43302b:	inc    DWORD PTR [esi]
  43302d:	add    BYTE PTR [eax],al
  43302f:	add    BYTE PTR [ecx+0x42],cl
  433032:	dec    ebp
  433033:	cmp    BYTE PTR [esi],dh
  433035:	xor    BYTE PTR [eax],al
  433037:	add    bh,bh
  433039:	(bad)  
  43303a:	(bad)  
  43303b:	inc    DWORD PTR ds:0x63000000
  433041:	jo     0x43307b
  433043:	xor    BYTE PTR ss:[eax],al
  433046:	add    BYTE PTR [eax],al
  433048:	(bad)  
  433049:	(bad)  
  43304a:	(bad)  
  43304b:	inc    DWORD PTR [ebx]
  43304d:	add    BYTE PTR [eax],al
  43304f:	add    BYTE PTR [eax],bh
  433051:	xor    BYTE PTR ss:[eax],al
  433054:	(bad)  
  433055:	(bad)  
  433056:	(bad)  
  433057:	dec    DWORD PTR [eax]
  433059:	add    BYTE PTR [eax],al
  43305b:	add    BYTE PTR [ebx+0x73],ah
  43305e:	dec    ecx
  43305f:	inc    edx
  433060:	dec    ebp
  433061:	cmp    BYTE PTR [esi],dh
  433063:	xor    BYTE PTR [eax],al
  433065:	add    BYTE PTR [eax],al
  433067:	add    bh,bh
  433069:	(bad)  
  43306a:	(bad)  
  43306b:	inc    DWORD PTR [esi]
  43306d:	add    BYTE PTR [eax],al
  43306f:	add    BYTE PTR [ecx+0x42],cl
  433072:	dec    ebp
  433073:	cmp    BYTE PTR [esi],dh
  433075:	xor    DWORD PTR [eax],eax
  433077:	add    bh,bh
  433079:	(bad)  
  43307a:	(bad)  
  43307b:	inc    DWORD PTR ds:0x63000000
  433081:	jo     0x4330bb
  433083:	xor    DWORD PTR ss:[eax],eax
  433086:	add    BYTE PTR [eax],al
  433088:	(bad)  
  433089:	(bad)  
  43308a:	(bad)  
  43308b:	inc    DWORD PTR [ebx]
  43308d:	add    BYTE PTR [eax],al
  43308f:	add    BYTE PTR [eax],bh
  433091:	xor    DWORD PTR ss:[eax],eax
  433094:	(bad)  
  433095:	(bad)  
  433096:	(bad)  
  433097:	inc    DWORD PTR ds:0x63000000
  43309d:	jo     0x4330cc
  43309f:	imul   esi,DWORD PTR [ebx+0x0],0xffff0000
  4330a6:	(bad)  
  4330a7:	dec    DWORD PTR [eax]
  4330a9:	add    BYTE PTR [eax],al
  4330ab:	add    BYTE PTR [ebx+0x73],ah
  4330ae:	dec    ecx
  4330af:	inc    edx
  4330b0:	dec    ebp
  4330b1:	cmp    BYTE PTR [esi],dh
  4330b3:	xor    DWORD PTR [eax],eax
  4330b5:	add    BYTE PTR [eax],al
  4330b7:	add    bh,bh
  4330b9:	(bad)  
  4330ba:	(bad)  
  4330bb:	inc    DWORD PTR [esi]
  4330bd:	add    BYTE PTR [eax],al
  4330bf:	add    BYTE PTR [ecx+0x42],cl
  4330c2:	dec    ebp
  4330c3:	cmp    BYTE PTR [esi],dh
  4330c5:	xor    al,BYTE PTR [eax]
  4330c7:	add    bh,bh
  4330c9:	(bad)  
  4330ca:	(bad)  
  4330cb:	inc    DWORD PTR ds:0x63000000
  4330d1:	jo     0x43310b
  4330d3:	xor    al,BYTE PTR ss:[eax]
  4330d6:	add    BYTE PTR [eax],al
  4330d8:	(bad)  
  4330d9:	(bad)  
  4330da:	(bad)  
  4330db:	inc    DWORD PTR [ebx]
  4330dd:	add    BYTE PTR [eax],al
  4330df:	add    BYTE PTR [eax],bh
  4330e1:	xor    al,BYTE PTR ss:[eax]
  4330e4:	(bad)  
  4330e5:	(bad)  
  4330e6:	(bad)  
  4330e7:	call   DWORD PTR [edx]
  4330e9:	add    BYTE PTR [eax],al
  4330eb:	add    BYTE PTR [ebx+0x73],ah
  4330ee:	push   eax
  4330ef:	inc    ebx
  4330f0:	cmp    BYTE PTR [esi],dh
  4330f2:	xor    cl,BYTE PTR [ecx+eiz*2+0x74]
  4330f6:	imul   ebp,DWORD PTR [esi+0x48],0x65726265
  4330fd:	ja     0x4330ff
  4330ff:	add    bh,bh
  433101:	(bad)  
  433102:	(bad)  
  433103:	inc    DWORD PTR [esi]
  433105:	add    BYTE PTR [eax],al
  433107:	add    BYTE PTR [ecx+0x42],cl
  43310a:	dec    ebp
  43310b:	cmp    BYTE PTR [esi],dh
  43310d:	xor    eax,DWORD PTR [eax]
  43310f:	add    bh,bh
  433111:	(bad)  
  433112:	(bad)  
  433113:	inc    DWORD PTR ds:0x63000000
  433119:	jo     0x433153
  43311b:	xor    eax,DWORD PTR ss:[eax]
  43311e:	add    BYTE PTR [eax],al
  433120:	(bad)  
  433121:	(bad)  
  433122:	(bad)  
  433123:	inc    DWORD PTR [ebx]
  433125:	add    BYTE PTR [eax],al
  433127:	add    BYTE PTR [eax],bh
  433129:	xor    eax,DWORD PTR ss:[eax]
  43312c:	(bad)  
  43312d:	(bad)  
  43312e:	(bad)  
  43312f:	dec    DWORD PTR [eax]
  433131:	add    BYTE PTR [eax],al
  433133:	add    BYTE PTR [ebx+0x73],ah
  433136:	dec    ecx
  433137:	inc    edx
  433138:	dec    ebp
  433139:	cmp    BYTE PTR [esi],dh
  43313b:	xor    eax,DWORD PTR [eax]
  43313d:	add    BYTE PTR [eax],al
  43313f:	add    bh,bh
  433141:	(bad)  
  433142:	(bad)  
  433143:	inc    DWORD PTR [esi]
  433145:	add    BYTE PTR [eax],al
  433147:	add    BYTE PTR [ecx+0x42],cl
  43314a:	dec    ebp
  43314b:	cmp    BYTE PTR [esi],dh
  43314d:	xor    al,0x0
  43314f:	add    bh,bh
  433151:	(bad)  
  433152:	(bad)  
  433153:	inc    DWORD PTR ds:0x63000000
  433159:	jo     0x433193
  43315b:	ss xor al,0x0
  43315e:	add    BYTE PTR [eax],al
  433160:	(bad)  
  433161:	(bad)  
  433162:	(bad)  
  433163:	dec    DWORD PTR [eax]
  433165:	add    BYTE PTR [eax],al
  433167:	add    BYTE PTR [ebx+0x73],ah
  43316a:	dec    ecx
  43316b:	inc    edx
  43316c:	dec    ebp
  43316d:	cmp    BYTE PTR [esi],dh
  43316f:	xor    al,0x0
  433171:	add    BYTE PTR [eax],al
  433173:	add    bh,bh
  433175:	(bad)  
  433176:	(bad)  
  433177:	inc    DWORD PTR [esi]
  433179:	add    BYTE PTR [eax],al
  43317b:	add    BYTE PTR [ecx+0x42],cl
  43317e:	dec    ebp
  43317f:	cmp    BYTE PTR [esi],dh
  433181:	xor    eax,0xffff0000
  433186:	(bad)  
  433187:	inc    DWORD PTR ds:0x63000000
  43318d:	jo     0x4331c7
  43318f:	ss xor eax,0xff000000
  433195:	(bad)  
  433196:	(bad)  
  433197:	inc    DWORD PTR [ebx]
  433199:	add    BYTE PTR [eax],al
  43319b:	add    BYTE PTR [eax],bh
  43319d:	ss xor eax,0xffffff00
  4331a3:	dec    DWORD PTR [eax]
  4331a5:	add    BYTE PTR [eax],al
  4331a7:	add    BYTE PTR [ebx+0x73],ah
  4331aa:	dec    ecx
  4331ab:	inc    edx
  4331ac:	dec    ebp
  4331ad:	cmp    BYTE PTR [esi],dh
  4331af:	xor    eax,0x0
  4331b4:	(bad)  
  4331b5:	(bad)  
  4331b6:	(bad)  
  4331b7:	inc    DWORD PTR [esi]
  4331b9:	add    BYTE PTR [eax],al
  4331bb:	add    BYTE PTR [ecx+0x42],cl
  4331be:	dec    ebp
  4331bf:	cmp    BYTE PTR [esi],dh
  4331c1:	add    BYTE PTR ss:[eax],al
  4331c4:	(bad)  
  4331c5:	(bad)  
  4331c6:	(bad)  
  4331c7:	inc    DWORD PTR ds:0x63000000
  4331cd:	jo     0x433207
  4331cf:	ss add BYTE PTR ss:[eax],al
  4331d3:	add    bh,bh
  4331d5:	(bad)  
  4331d6:	(bad)  
  4331d7:	inc    DWORD PTR [ebx]
  4331d9:	add    BYTE PTR [eax],al
  4331db:	add    BYTE PTR [eax],bh
  4331dd:	ss ss add bh,bh
  4331e1:	(bad)  
  4331e2:	(bad)  
  4331e3:	dec    DWORD PTR [eax]
  4331e5:	add    BYTE PTR [eax],al
  4331e7:	add    BYTE PTR [ebx+0x73],ah
  4331ea:	dec    ecx
  4331eb:	inc    edx
  4331ec:	dec    ebp
  4331ed:	cmp    BYTE PTR [esi],dh
  4331ef:	add    BYTE PTR ss:[eax],al
  4331f2:	add    BYTE PTR [eax],al
  4331f4:	(bad)  
  4331f5:	(bad)  
  4331f6:	(bad)  
  4331f7:	inc    DWORD PTR [esi]
  4331f9:	add    BYTE PTR [eax],al
  4331fb:	add    BYTE PTR [ecx+0x42],cl
  4331fe:	dec    ebp
  4331ff:	cmp    BYTE PTR [esi],dh
  433201:	cmp    BYTE PTR [eax],al
  433203:	add    bh,bh
  433205:	(bad)  
  433206:	(bad)  
  433207:	inc    DWORD PTR ds:0x43000000
  43320d:	push   eax
  43320e:	cmp    BYTE PTR [esi],dh
  433210:	cmp    BYTE PTR [eax],al
  433212:	add    BYTE PTR [eax],al
  433214:	(bad)  
  433215:	(bad)  
  433216:	(bad)  
  433217:	inc    DWORD PTR ds:0x63000000
  43321d:	jo     0x43324c
  43321f:	popa   
  433220:	jb     0x433222
  433222:	add    BYTE PTR [eax],al
  433224:	(bad)  
  433225:	(bad)  
  433226:	(bad)  
  433227:	dec    DWORD PTR [eax]
  433229:	add    BYTE PTR [eax],al
  43322b:	add    BYTE PTR [ebx+0x73],ah
  43322e:	dec    ecx
  43322f:	inc    edx
  433230:	dec    ebp
  433231:	cmp    BYTE PTR [esi],dh
  433233:	cmp    BYTE PTR [eax],al
  433235:	add    BYTE PTR [eax],al
  433237:	add    bh,bh
  433239:	(bad)  
  43323a:	(bad)  
  43323b:	inc    DWORD PTR [esi]
  43323d:	add    BYTE PTR [eax],al
  43323f:	add    BYTE PTR [ecx+0x42],cl
  433242:	dec    ebp
  433243:	cmp    BYTE PTR [esi],dh
  433245:	cmp    DWORD PTR [eax],eax
  433247:	add    bh,bh
  433249:	(bad)  
  43324a:	(bad)  
  43324b:	inc    DWORD PTR ds:0x63000000
  433251:	jo     0x43328b
  433253:	cmp    DWORD PTR ss:[eax],eax
  433256:	add    BYTE PTR [eax],al
  433258:	(bad)  
  433259:	(bad)  
  43325a:	(bad)  
  43325b:	inc    DWORD PTR [ebx]
  43325d:	add    BYTE PTR [eax],al
  43325f:	add    BYTE PTR [eax],bh
  433261:	cmp    DWORD PTR ss:[eax],eax
  433264:	(bad)  
  433265:	(bad)  
  433266:	(bad)  
  433267:	inc    DWORD PTR ds:0x63000000
  43326d:	jo     0x43329c
  43326f:	addr16 jb 0x433272
  433272:	add    BYTE PTR [eax],al
  433274:	(bad)  
  433275:	(bad)  
  433276:	(bad)  
  433277:	dec    DWORD PTR [eax]
  433279:	add    BYTE PTR [eax],al
  43327b:	add    BYTE PTR [ebx+0x73],ah
  43327e:	dec    ecx
  43327f:	inc    edx
  433280:	dec    ebp
  433281:	cmp    BYTE PTR [esi],dh
  433283:	cmp    DWORD PTR [eax],eax
  433285:	add    BYTE PTR [eax],al
  433287:	add    bh,bh
  433289:	(bad)  
  43328a:	(bad)  
  43328b:	inc    DWORD PTR [esi]
  43328d:	add    BYTE PTR [eax],al
  43328f:	add    BYTE PTR [ecx+0x42],cl
  433292:	dec    ebp
  433293:	cmp    BYTE PTR [edi],dh
  433295:	xor    BYTE PTR [eax],al
  433297:	add    bh,bh
  433299:	(bad)  
  43329a:	(bad)  
  43329b:	inc    DWORD PTR ds:0x43000000
  4332a1:	push   eax
  4332a2:	cmp    BYTE PTR [edi],dh
  4332a4:	xor    BYTE PTR [eax],al
  4332a6:	add    BYTE PTR [eax],al
  4332a8:	(bad)  
  4332a9:	(bad)  
  4332aa:	(bad)  
  4332ab:	dec    DWORD PTR [edi]
  4332ad:	add    BYTE PTR [eax],al
  4332af:	add    BYTE PTR [ebp+0x62],ah
  4332b2:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  4332b6:	sub    eax,0x722d7063
  4332bb:	outs   dx,DWORD PTR ds:[esi]
  4332bc:	arpl   WORD PTR gs:[ebp+0x0],sp
  4332c0:	(bad)  
  4332c1:	(bad)  
  4332c2:	(bad)  
  4332c3:	dec    DWORD PTR [eax+eax*1]
  4332c6:	add    BYTE PTR [eax],al
  4332c8:	bound  esp,QWORD PTR gs:[ebx+0x64]
  4332cc:	imul   esp,DWORD PTR [ebx+0x2d],0x792d7063
  4332d3:	jne    0x4332d5
  4332d5:	add    BYTE PTR [eax],al
  4332d7:	add    bh,bh
  4332d9:	(bad)  
  4332da:	(bad)  
  4332db:	dec    DWORD PTR [eax]
  4332dd:	add    BYTE PTR [eax],al
  4332df:	add    BYTE PTR [ebx+0x73],ah
  4332e2:	dec    ecx
  4332e3:	inc    edx
  4332e4:	dec    ebp
  4332e5:	cmp    BYTE PTR [edi],dh
  4332e7:	xor    BYTE PTR [eax],al
  4332e9:	add    BYTE PTR [eax],al
  4332eb:	add    bh,bh
  4332ed:	(bad)  
  4332ee:	(bad)  
  4332ef:	inc    DWORD PTR [esi]
  4332f1:	add    BYTE PTR [eax],al
  4332f3:	add    BYTE PTR [ecx+0x42],cl
  4332f6:	dec    ebp
  4332f7:	cmp    BYTE PTR [edi],dh
  4332f9:	xor    DWORD PTR [eax],eax
  4332fb:	add    bh,bh
  4332fd:	(bad)  
  4332fe:	(bad)  
  4332ff:	inc    DWORD PTR ds:0x43000000
  433305:	push   eax
  433306:	cmp    BYTE PTR [edi],dh
  433308:	xor    DWORD PTR [eax],eax
  43330a:	add    BYTE PTR [eax],al
  43330c:	(bad)  
  43330d:	(bad)  
  43330e:	(bad)  
  43330f:	dec    DWORD PTR [eax+eax*1]
  433312:	add    BYTE PTR [eax],al
  433314:	bound  esp,QWORD PTR gs:[ebx+0x64]
  433318:	imul   esp,DWORD PTR [ebx+0x2d],0x692d7063
  43331f:	jae    0x433321
  433321:	add    BYTE PTR [eax],al
  433323:	add    bh,bh
  433325:	(bad)  
  433326:	(bad)  
  433327:	dec    DWORD PTR [eax]
  433329:	add    BYTE PTR [eax],al
  43332b:	add    BYTE PTR [ebx+0x73],ah
  43332e:	dec    ecx
  43332f:	inc    edx
  433330:	dec    ebp
  433331:	cmp    BYTE PTR [edi],dh
  433333:	xor    DWORD PTR [eax],eax
  433335:	add    BYTE PTR [eax],al
  433337:	add    bh,bh
  433339:	(bad)  
  43333a:	(bad)  
  43333b:	inc    DWORD PTR [esi]
  43333d:	add    BYTE PTR [eax],al
  43333f:	add    BYTE PTR [ecx+0x42],cl
  433342:	dec    ebp
  433343:	cmp    BYTE PTR [eax],bh
  433345:	xor    BYTE PTR [eax],al
  433347:	add    bh,bh
  433349:	(bad)  
  43334a:	(bad)  
  43334b:	inc    DWORD PTR ds:0x63000000
  433351:	jo     0x43338b
  433353:	cmp    BYTE PTR [eax],dh
  433355:	add    BYTE PTR [eax],al
  433357:	add    bh,bh
  433359:	(bad)  
  43335a:	(bad)  
  43335b:	dec    DWORD PTR [edi]
  43335d:	add    BYTE PTR [eax],al
  43335f:	add    BYTE PTR [ebp+0x42],al
  433362:	inc    ebx
  433363:	inc    esp
  433364:	dec    ecx
  433365:	inc    ebx
  433366:	sub    eax,0x69727943
  43336b:	ins    BYTE PTR es:[edi],dx
  43336c:	ins    BYTE PTR es:[edi],dx
  43336d:	imul   esp,DWORD PTR [ebx+0x0],0xffffffff
  433374:	or     BYTE PTR [eax],al
  433376:	add    BYTE PTR [eax],al
  433378:	arpl   WORD PTR [ebx+0x49],si
  43337b:	inc    edx
  43337c:	dec    ebp
  43337d:	cmp    BYTE PTR [eax],bh
  43337f:	xor    BYTE PTR [eax],al
  433381:	add    BYTE PTR [eax],al
  433383:	add    bh,bh
  433385:	(bad)  
  433386:	(bad)  
  433387:	inc    DWORD PTR [esi]
  433389:	add    BYTE PTR [eax],al
  43338b:	add    BYTE PTR [ecx+0x42],cl
  43338e:	dec    ebp
  43338f:	cmp    BYTE PTR [ecx],bh
  433391:	xor    DWORD PTR [eax],eax
  433393:	add    bh,bh
  433395:	(bad)  
  433396:	(bad)  
  433397:	inc    DWORD PTR ds:0x63000000
  43339d:	jo     0x4333d7
  43339f:	cmp    DWORD PTR [ecx],esi
  4333a1:	add    BYTE PTR [eax],al
  4333a3:	add    bh,bh
  4333a5:	(bad)  
  4333a6:	(bad)  
  4333a7:	dec    DWORD PTR [eax]
  4333a9:	add    BYTE PTR [eax],al
  4333ab:	add    BYTE PTR [ebx+0x73],ah
  4333ae:	dec    ecx
  4333af:	inc    edx
  4333b0:	dec    ebp
  4333b1:	cmp    BYTE PTR [ecx],bh
  4333b3:	xor    DWORD PTR [eax],eax
  4333b5:	add    BYTE PTR [eax],al
  4333b7:	add    bh,bh
  4333b9:	(bad)  
  4333ba:	(bad)  
  4333bb:	inc    DWORD PTR [esi]
  4333bd:	add    BYTE PTR [eax],al
  4333bf:	add    BYTE PTR [ecx+0x42],cl
  4333c2:	dec    ebp
  4333c3:	cmp    DWORD PTR [eax],esi
  4333c5:	xor    eax,DWORD PTR [eax]
  4333c7:	add    bh,bh
  4333c9:	(bad)  
  4333ca:	(bad)  
  4333cb:	inc    DWORD PTR ds:0x63000000
  4333d1:	jo     0x43340c
  4333d3:	xor    BYTE PTR [ebx],dh
  4333d5:	add    BYTE PTR [eax],al
  4333d7:	add    bh,bh
  4333d9:	(bad)  
  4333da:	(bad)  
  4333db:	dec    DWORD PTR [eax]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	add    BYTE PTR [ebx+0x73],ah
  4333e2:	dec    ecx
  4333e3:	inc    edx
  4333e4:	dec    ebp
  4333e5:	cmp    DWORD PTR [eax],esi
  4333e7:	xor    eax,DWORD PTR [eax]
  4333e9:	add    BYTE PTR [eax],al
  4333eb:	add    bh,bh
  4333ed:	(bad)  
  4333ee:	(bad)  
  4333ef:	inc    DWORD PTR [esi]
  4333f1:	add    BYTE PTR [eax],al
  4333f3:	add    BYTE PTR [ecx+0x42],cl
  4333f6:	dec    ebp
  4333f7:	cmp    DWORD PTR [eax],esi
  4333f9:	xor    al,0x0
  4333fb:	add    bh,bh
  4333fd:	(bad)  
  4333fe:	(bad)  
  4333ff:	inc    DWORD PTR ds:0x63000000
  433405:	jo     0x433440
  433407:	xor    BYTE PTR [eax+eax*1],dh
  43340a:	add    BYTE PTR [eax],al
  43340c:	(bad)  
  43340d:	(bad)  
  43340e:	(bad)  
  43340f:	inc    DWORD PTR [ebx]
  433411:	add    BYTE PTR [eax],al
  433413:	add    BYTE PTR [ecx],bh
  433415:	xor    BYTE PTR [eax+eax*1],dh
  433418:	(bad)  
  433419:	(bad)  
  43341a:	(bad)  
  43341b:	dec    DWORD PTR [ecx]
  43341d:	add    BYTE PTR [eax],al
  43341f:	add    BYTE PTR [ebx+0x73],ah
  433422:	dec    ecx
  433423:	inc    edx
  433424:	inc    edx
  433425:	dec    ebp
  433426:	cmp    DWORD PTR [eax],esi
  433428:	xor    al,0x0
  43342a:	add    BYTE PTR [eax],al
  43342c:	(bad)  
  43342d:	(bad)  
  43342e:	(bad)  
  43342f:	inc    DWORD PTR [esi]
  433431:	add    BYTE PTR [eax],al
  433433:	add    BYTE PTR [ecx+0x42],cl
  433436:	dec    ebp
  433437:	cmp    DWORD PTR [eax],esi
  433439:	xor    eax,0xffff0000
  43343e:	(bad)  
  43343f:	inc    DWORD PTR ds:0x43000000
  433445:	push   eax
  433446:	cmp    DWORD PTR [eax],esi
  433448:	xor    eax,0xff000000
  43344d:	(bad)  
  43344e:	(bad)  
  43344f:	dec    DWORD PTR [eax+eax*1]
  433452:	add    BYTE PTR [eax],al
  433454:	bound  esp,QWORD PTR gs:[ebx+0x64]
  433458:	imul   esp,DWORD PTR [ebx+0x2d],0x742d7063
  43345f:	jb     0x433461
  433461:	add    BYTE PTR [eax],al
  433463:	add    bh,bh
  433465:	(bad)  
  433466:	(bad)  
  433467:	dec    DWORD PTR [eax]
  433469:	add    BYTE PTR [eax],al
  43346b:	add    BYTE PTR [ebx+0x73],ah
  43346e:	dec    ecx
  43346f:	inc    edx
  433470:	dec    ebp
  433471:	cmp    DWORD PTR [eax],esi
  433473:	xor    eax,0x0
  433478:	(bad)  
  433479:	(bad)  
  43347a:	(bad)  
  43347b:	inc    DWORD PTR [esi]
  43347d:	add    BYTE PTR [eax],al
  43347f:	add    BYTE PTR [ecx+0x42],cl
  433482:	dec    ebp
  433483:	cmp    DWORD PTR [ecx],esi
  433485:	cmp    BYTE PTR [eax],al
  433487:	add    bh,bh
  433489:	(bad)  
  43348a:	(bad)  
  43348b:	inc    DWORD PTR ds:0x43000000
  433491:	push   eax
  433492:	cmp    DWORD PTR [ecx],esi
  433494:	cmp    BYTE PTR [eax],al
  433496:	add    BYTE PTR [eax],al
  433498:	(bad)  
  433499:	(bad)  
  43349a:	(bad)  
  43349b:	dec    DWORD PTR ds:0x65000000
  4334a1:	bound  esp,QWORD PTR [ebx+0x64]
  4334a4:	imul   esp,DWORD PTR [ebx+0x2d],0x612d7063
  4334ab:	jb     0x4334df
  4334ad:	add    BYTE PTR [eax],al
  4334af:	add    bh,bh
  4334b1:	(bad)  
  4334b2:	(bad)  
  4334b3:	dec    DWORD PTR [eax]
  4334b5:	add    BYTE PTR [eax],al
  4334b7:	add    BYTE PTR [ebx+0x73],ah
  4334ba:	dec    ecx
  4334bb:	inc    edx
  4334bc:	dec    ebp
  4334bd:	cmp    DWORD PTR [ecx],esi
  4334bf:	cmp    BYTE PTR [eax],al
  4334c1:	add    BYTE PTR [eax],al
  4334c3:	add    bh,bh
  4334c5:	(bad)  
  4334c6:	(bad)  
  4334c7:	inc    DWORD PTR [edi]
  4334c9:	add    BYTE PTR [eax],al
  4334cb:	add    BYTE PTR [ecx+0x42],cl
  4334ce:	dec    ebp
  4334cf:	xor    DWORD PTR [eax],esi
  4334d1:	xor    dh,BYTE PTR [esi]
  4334d3:	add    bh,bh
  4334d5:	(bad)  
  4334d6:	(bad)  
  4334d7:	inc    DWORD PTR [esi]
  4334d9:	add    BYTE PTR [eax],al
  4334db:	add    BYTE PTR [ebx+0x50],al
  4334de:	xor    DWORD PTR [eax],esi
  4334e0:	xor    dh,BYTE PTR [esi]
  4334e2:	add    BYTE PTR [eax],al
  4334e4:	(bad)  
  4334e5:	(bad)  
  4334e6:	(bad)  
  4334e7:	dec    DWORD PTR [ecx]
  4334e9:	add    BYTE PTR [eax],al
  4334eb:	add    BYTE PTR [ebx+0x73],ah
  4334ee:	dec    ecx
  4334ef:	inc    edx
  4334f0:	dec    ebp
  4334f1:	xor    DWORD PTR [eax],esi
  4334f3:	xor    dh,BYTE PTR [esi]
  4334f5:	add    BYTE PTR [eax],al
  4334f7:	add    bh,bh
  4334f9:	(bad)  
  4334fa:	(bad)  
  4334fb:	dec    DWORD PTR [eax+eax*1]
  4334fe:	add    BYTE PTR [eax],al
  433500:	inc    ebp
  433501:	inc    edx
  433502:	inc    ebx
  433503:	inc    esp
  433504:	dec    ecx
  433505:	inc    ebx
  433506:	sub    eax,0x442d5441
  43350b:	inc    ebp
  43350c:	add    BYTE PTR [eax],al
  43350e:	add    BYTE PTR [eax],al
  433510:	(bad)  
  433511:	(bad)  
  433512:	(bad)  
  433513:	dec    DWORD PTR [edi]
  433515:	add    BYTE PTR [eax],al
  433517:	add    BYTE PTR [ebx+0x73],ah
  43351a:	dec    ecx
  43351b:	inc    edx
  43351c:	dec    ebp
  43351d:	inc    ebp
  43351e:	inc    edx
  43351f:	inc    ebx
  433520:	inc    esp
  433521:	dec    ecx
  433522:	inc    ebx
  433523:	inc    ecx
  433524:	push   esp
  433525:	inc    esp
  433526:	inc    ebp
  433527:	add    bh,bh
  433529:	(bad)  
  43352a:	(bad)  
  43352b:	dec    DWORD PTR [esi]
  43352d:	add    BYTE PTR [eax],al
  43352f:	add    BYTE PTR [ebp+0x42],al
  433532:	inc    ebx
  433533:	inc    esp
  433534:	dec    ecx
  433535:	inc    ebx
  433536:	sub    eax,0x442d5441
  43353b:	inc    ebp
  43353c:	sub    eax,0xff000041
  433541:	(bad)  
  433542:	(bad)  
  433543:	dec    DWORD PTR ds:0x63000000
  433549:	jae    0x433590
  43354b:	inc    edx
  43354c:	inc    ebx
  43354d:	inc    esp
  43354e:	dec    ecx
  43354f:	inc    ebx
  433550:	inc    ecx
  433551:	push   esp
  433552:	inc    esp
  433553:	inc    ebp
  433554:	inc    ecx
  433555:	add    BYTE PTR [eax],al
  433557:	add    bh,bh
  433559:	(bad)  
  43355a:	(bad)  
  43355b:	dec    DWORD PTR [eax+eax*1]
  43355e:	add    BYTE PTR [eax],al
  433560:	inc    ebp
  433561:	inc    edx
  433562:	inc    ebx
  433563:	inc    esp
  433564:	dec    ecx
  433565:	inc    ebx
  433566:	sub    eax,0x462d4143
  43356b:	push   edx
  43356c:	add    BYTE PTR [eax],al
  43356e:	add    BYTE PTR [eax],al
  433570:	(bad)  
  433571:	(bad)  
  433572:	(bad)  
  433573:	dec    DWORD PTR [eax+eax*1]
  433576:	add    BYTE PTR [eax],al
  433578:	arpl   WORD PTR [ebx+0x45],si
  43357b:	inc    edx
  43357c:	inc    ebx
  43357d:	inc    esp
  43357e:	dec    ecx
  43357f:	inc    ebx
  433580:	inc    ebx
  433581:	inc    ecx
  433582:	inc    esi
  433583:	push   edx
  433584:	add    BYTE PTR [eax],al
  433586:	add    BYTE PTR [eax],al
  433588:	(bad)  
  433589:	(bad)  
  43358a:	(bad)  
  43358b:	dec    DWORD PTR [eax+eax*1]
  43358e:	add    BYTE PTR [eax],al
  433590:	inc    ebp
  433591:	inc    edx
  433592:	inc    ebx
  433593:	inc    esp
  433594:	dec    ecx
  433595:	inc    ebx
  433596:	sub    eax,0x4e2d4b44
  43359b:	dec    edi
  43359c:	add    BYTE PTR [eax],al
  43359e:	add    BYTE PTR [eax],al
  4335a0:	(bad)  
  4335a1:	(bad)  
  4335a2:	(bad)  
  4335a3:	dec    DWORD PTR [eax+eax*1]
  4335a6:	add    BYTE PTR [eax],al
  4335a8:	arpl   WORD PTR [ebx+0x45],si
  4335ab:	inc    edx
  4335ac:	inc    ebx
  4335ad:	inc    esp
  4335ae:	dec    ecx
  4335af:	inc    ebx
  4335b0:	inc    esp
  4335b1:	dec    ebx
  4335b2:	dec    esi
  4335b3:	dec    edi
  4335b4:	add    BYTE PTR [eax],al
  4335b6:	add    BYTE PTR [eax],al
  4335b8:	(bad)  
  4335b9:	(bad)  
  4335ba:	(bad)  
  4335bb:	dec    DWORD PTR [esi]
  4335bd:	add    BYTE PTR [eax],al
  4335bf:	add    BYTE PTR [ebp+0x42],al
  4335c2:	inc    ebx
  4335c3:	inc    esp
  4335c4:	dec    ecx
  4335c5:	inc    ebx
  4335c6:	sub    eax,0x4e2d4b44
  4335cb:	dec    edi
  4335cc:	sub    eax,0xff000041
  4335d1:	(bad)  
  4335d2:	(bad)  
  4335d3:	dec    DWORD PTR ds:0x63000000
  4335d9:	jae    0x433620
  4335db:	inc    edx
  4335dc:	inc    ebx
  4335dd:	inc    esp
  4335de:	dec    ecx
  4335df:	inc    ebx
  4335e0:	inc    esp
  4335e1:	dec    ebx
  4335e2:	dec    esi
  4335e3:	dec    edi
  4335e4:	inc    ecx
  4335e5:	add    BYTE PTR [eax],al
  4335e7:	add    bh,bh
  4335e9:	(bad)  
  4335ea:	(bad)  
  4335eb:	dec    DWORD PTR [eax+eax*1]
  4335ee:	add    BYTE PTR [eax],al
  4335f0:	inc    ebp
  4335f1:	inc    edx
  4335f2:	inc    ebx
  4335f3:	inc    esp
  4335f4:	dec    ecx
  4335f5:	inc    ebx
  4335f6:	sub    eax,0x532d4946
  4335fb:	inc    ebp
  4335fc:	add    BYTE PTR [eax],al
  4335fe:	add    BYTE PTR [eax],al
  433600:	(bad)  
  433601:	(bad)  
  433602:	(bad)  
  433603:	dec    DWORD PTR [eax+eax*1]
  433606:	add    BYTE PTR [eax],al
  433608:	arpl   WORD PTR [ebx+0x45],si
  43360b:	inc    edx
  43360c:	inc    ebx
  43360d:	inc    esp
  43360e:	dec    ecx
  43360f:	inc    ebx
  433610:	inc    esi
  433611:	dec    ecx
  433612:	push   ebx
  433613:	inc    ebp
  433614:	add    BYTE PTR [eax],al
  433616:	add    BYTE PTR [eax],al
  433618:	(bad)  
  433619:	(bad)  
  43361a:	(bad)  
  43361b:	dec    DWORD PTR [esi]
  43361d:	add    BYTE PTR [eax],al
  43361f:	add    BYTE PTR [ebp+0x42],al
  433622:	inc    ebx
  433623:	inc    esp
  433624:	dec    ecx
  433625:	inc    ebx
  433626:	sub    eax,0x532d4946
  43362b:	inc    ebp
  43362c:	sub    eax,0xff000041
  433631:	(bad)  
  433632:	(bad)  
  433633:	dec    DWORD PTR ds:0x63000000
  433639:	jae    0x433680
  43363b:	inc    edx
  43363c:	inc    ebx
  43363d:	inc    esp
  43363e:	dec    ecx
  43363f:	inc    ebx
  433640:	inc    esi
  433641:	dec    ecx
  433642:	push   ebx
  433643:	inc    ebp
  433644:	inc    ecx
  433645:	add    BYTE PTR [eax],al
  433647:	add    bh,bh
  433649:	(bad)  
  43364a:	(bad)  
  43364b:	dec    DWORD PTR [ecx]
  43364d:	add    BYTE PTR [eax],al
  43364f:	add    BYTE PTR [ebp+0x42],al
  433652:	inc    ebx
  433653:	inc    esp
  433654:	dec    ecx
  433655:	inc    ebx
  433656:	sub    eax,0x5246
  43365b:	add    bh,bh
  43365d:	(bad)  
  43365e:	(bad)  
  43365f:	dec    DWORD PTR [edx]
  433661:	add    BYTE PTR [eax],al
  433663:	add    BYTE PTR [ebx+0x73],ah
  433666:	inc    ebp
  433667:	inc    edx
  433668:	inc    ebx
  433669:	inc    esp
  43366a:	dec    ecx
  43366b:	inc    ebx
  43366c:	inc    esi
  43366d:	push   edx
  43366e:	add    BYTE PTR [eax],al
  433670:	(bad)  
  433671:	(bad)  
  433672:	(bad)  
  433673:	dec    DWORD PTR [ecx]
  433675:	add    BYTE PTR [eax],al
  433677:	add    BYTE PTR [ebp+0x42],al
  43367a:	inc    ebx
  43367b:	inc    esp
  43367c:	dec    ecx
  43367d:	inc    ebx
  43367e:	sub    eax,0x5449
  433683:	add    bh,bh
  433685:	(bad)  
  433686:	(bad)  
  433687:	dec    DWORD PTR [edx]
  433689:	add    BYTE PTR [eax],al
  43368b:	add    BYTE PTR [ebx+0x73],ah
  43368e:	inc    ebp
  43368f:	inc    edx
  433690:	inc    ebx
  433691:	inc    esp
  433692:	dec    ecx
  433693:	inc    ebx
  433694:	dec    ecx
  433695:	push   esp
  433696:	add    BYTE PTR [eax],al
  433698:	(bad)  
  433699:	(bad)  
  43369a:	(bad)  
  43369b:	dec    DWORD PTR [ecx]
  43369d:	add    BYTE PTR [eax],al
  43369f:	add    BYTE PTR [ebp+0x42],al
  4336a2:	inc    ebx
  4336a3:	inc    esp
  4336a4:	dec    ecx
  4336a5:	inc    ebx
  4336a6:	sub    eax,0x5450
  4336ab:	add    bh,bh
  4336ad:	(bad)  
  4336ae:	(bad)  
  4336af:	dec    DWORD PTR [edx]
  4336b1:	add    BYTE PTR [eax],al
  4336b3:	add    BYTE PTR [ebx+0x73],ah
  4336b6:	inc    ebp
  4336b7:	inc    edx
  4336b8:	inc    ebx
  4336b9:	inc    esp
  4336ba:	dec    ecx
  4336bb:	inc    ebx
  4336bc:	push   eax
  4336bd:	push   esp
  4336be:	add    BYTE PTR [eax],al
  4336c0:	(bad)  
  4336c1:	(bad)  
  4336c2:	(bad)  
  4336c3:	dec    DWORD PTR [ecx]
  4336c5:	add    BYTE PTR [eax],al
  4336c7:	add    BYTE PTR [ebp+0x42],al
  4336ca:	inc    ebx
  4336cb:	inc    esp
  4336cc:	dec    ecx
  4336cd:	inc    ebx
  4336ce:	sub    eax,0x5345
  4336d3:	add    bh,bh
  4336d5:	(bad)  
  4336d6:	(bad)  
  4336d7:	dec    DWORD PTR [edx]
  4336d9:	add    BYTE PTR [eax],al
  4336db:	add    BYTE PTR [ebx+0x73],ah
  4336de:	inc    ebp
  4336df:	inc    edx
  4336e0:	inc    ebx
  4336e1:	inc    esp
  4336e2:	dec    ecx
  4336e3:	inc    ebx
  4336e4:	inc    ebp
  4336e5:	push   ebx
  4336e6:	add    BYTE PTR [eax],al
  4336e8:	(bad)  
  4336e9:	(bad)  
  4336ea:	(bad)  
  4336eb:	dec    DWORD PTR [ebx]
  4336ed:	add    BYTE PTR [eax],al
  4336ef:	add    BYTE PTR [ebp+0x42],al
  4336f2:	inc    ebx
  4336f3:	inc    esp
  4336f4:	dec    ecx
  4336f5:	inc    ebx
  4336f6:	sub    eax,0x412d5345
  4336fb:	add    bh,bh
  4336fd:	(bad)  
  4336fe:	(bad)  
  4336ff:	dec    DWORD PTR [ebx]
  433701:	add    BYTE PTR [eax],al
  433703:	add    BYTE PTR [ebx+0x73],ah
  433706:	inc    ebp
  433707:	inc    edx
  433708:	inc    ebx
  433709:	inc    esp
  43370a:	dec    ecx
  43370b:	inc    ebx
  43370c:	inc    ebp
  43370d:	push   ebx
  43370e:	inc    ecx
  43370f:	add    bh,bh
  433711:	(bad)  
  433712:	(bad)  
  433713:	dec    DWORD PTR [ebx]
  433715:	add    BYTE PTR [eax],al
  433717:	add    BYTE PTR [ebp+0x42],al
  43371a:	inc    ebx
  43371b:	inc    esp
  43371c:	dec    ecx
  43371d:	inc    ebx
  43371e:	sub    eax,0x532d5345
  433723:	add    bh,bh
  433725:	(bad)  
  433726:	(bad)  
  433727:	dec    DWORD PTR [ebx]
  433729:	add    BYTE PTR [eax],al
  43372b:	add    BYTE PTR [ebx+0x73],ah
  43372e:	inc    ebp
  43372f:	inc    edx
  433730:	inc    ebx
  433731:	inc    esp
  433732:	dec    ecx
  433733:	inc    ebx
  433734:	inc    ebp
  433735:	push   ebx
  433736:	push   ebx
  433737:	add    bh,bh
  433739:	(bad)  
  43373a:	(bad)  
  43373b:	dec    DWORD PTR [ecx]
  43373d:	add    BYTE PTR [eax],al
  43373f:	add    BYTE PTR [ebp+0x42],al
  433742:	inc    ebx
  433743:	inc    esp
  433744:	dec    ecx
  433745:	inc    ebx
  433746:	sub    eax,0x4b55
  43374b:	add    bh,bh
  43374d:	(bad)  
  43374e:	(bad)  
  43374f:	dec    DWORD PTR [edx]
  433751:	add    BYTE PTR [eax],al
  433753:	add    BYTE PTR [ebx+0x73],ah
  433756:	inc    ebp
  433757:	inc    edx
  433758:	inc    ebx
  433759:	inc    esp
  43375a:	dec    ecx
  43375b:	inc    ebx
  43375c:	push   ebp
  43375d:	dec    ebx
  43375e:	add    BYTE PTR [eax],al
  433760:	(bad)  
  433761:	(bad)  
  433762:	(bad)  
  433763:	dec    DWORD PTR [ecx]
  433765:	add    BYTE PTR [eax],al
  433767:	add    BYTE PTR [ebp+0x42],al
  43376a:	inc    ebx
  43376b:	inc    esp
  43376c:	dec    ecx
  43376d:	inc    ebx
  43376e:	sub    eax,0x5355
  433773:	add    bh,bh
  433775:	(bad)  
  433776:	(bad)  
  433777:	dec    DWORD PTR [edx]
  433779:	add    BYTE PTR [eax],al
  43377b:	add    BYTE PTR [ebx+0x73],ah
  43377e:	inc    ebp
  43377f:	inc    edx
  433780:	inc    ebx
  433781:	inc    esp
  433782:	dec    ecx
  433783:	inc    ebx
  433784:	push   ebp
  433785:	push   ebx
  433786:	add    BYTE PTR [eax],al
  433788:	(bad)  
  433789:	(bad)  
  43378a:	(bad)  
  43378b:	dec    DWORD PTR [eax+eax*1]
  43378e:	add    BYTE PTR [eax],al
  433790:	push   ebp
  433791:	dec    esi
  433792:	dec    ebx
  433793:	dec    esi
  433794:	dec    edi
  433795:	push   edi
  433796:	dec    esi
  433797:	sub    eax,0x54494238
  43379c:	add    BYTE PTR [eax],al
  43379e:	add    BYTE PTR [eax],al
  4337a0:	(bad)  
  4337a1:	(bad)  
  4337a2:	(bad)  
  4337a3:	dec    DWORD PTR ds:0x63000000
  4337a9:	jae    0x433800
  4337ab:	outs   dx,BYTE PTR ds:[esi]
  4337ac:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  4337b0:	outs   dx,BYTE PTR ds:[esi]
  4337b1:	cmp    BYTE PTR [edx+0x69],al
  4337b4:	push   esp
  4337b5:	add    BYTE PTR [eax],al
  4337b7:	add    bh,bh
  4337b9:	(bad)  
  4337ba:	(bad)  
  4337bb:	dec    DWORD PTR [eax]
  4337bd:	add    BYTE PTR [eax],al
  4337bf:	add    BYTE PTR [ebp+0x4e],cl
  4337c2:	inc    ebp
  4337c3:	dec    ebp
  4337c4:	dec    edi
  4337c5:	dec    esi
  4337c6:	dec    ecx
  4337c7:	inc    ebx
  4337c8:	add    BYTE PTR [eax],al
  4337ca:	add    BYTE PTR [eax],al
  4337cc:	(bad)  
  4337cd:	(bad)  
  4337ce:	(bad)  
  4337cf:	dec    DWORD PTR [edx]
  4337d1:	add    BYTE PTR [eax],al
  4337d3:	add    BYTE PTR [ebx+0x73],ah
  4337d6:	dec    ebp
  4337d7:	outs   dx,BYTE PTR ds:[esi]
  4337d8:	gs ins DWORD PTR es:[edi],dx
  4337da:	outs   dx,DWORD PTR ds:[esi]
  4337db:	outs   dx,BYTE PTR ds:[esi]
  4337dc:	imul   esp,DWORD PTR [ebx+0x0],0xffffff00
  4337e3:	inc    DWORD PTR [eax+eax*1]
  4337e6:	add    BYTE PTR [eax],al
  4337e8:	dec    ebp
  4337e9:	dec    esi
  4337ea:	inc    ebp
  4337eb:	dec    ebp
  4337ec:	add    BYTE PTR [eax],al
  4337ee:	add    BYTE PTR [eax],al
  4337f0:	(bad)  
  4337f1:	(bad)  
  4337f2:	(bad)  
  4337f3:	inc    DWORD PTR [esi]
  4337f5:	add    BYTE PTR [eax],al
  4337f7:	add    BYTE PTR [ebx+0x73],ah
  4337fa:	dec    ebp
  4337fb:	outs   dx,BYTE PTR ds:[esi]
  4337fc:	gs ins DWORD PTR es:[edi],dx
  4337fe:	add    BYTE PTR [eax],al
  433800:	(bad)  
  433801:	(bad)  
  433802:	(bad)  
  433803:	inc    DWORD PTR [esi]
  433805:	add    BYTE PTR [eax],al
  433807:	add    BYTE PTR [esi+0x49],dl
  43380a:	push   ebx
  43380b:	inc    ebx
  43380c:	dec    ecx
  43380d:	dec    ecx
  43380e:	add    BYTE PTR [eax],al
  433810:	(bad)  
  433811:	(bad)  
  433812:	(bad)  
  433813:	dec    DWORD PTR [eax]
  433815:	add    BYTE PTR [eax],al
  433817:	add    BYTE PTR [ebx+0x73],ah
  43381a:	push   esi
  43381b:	dec    ecx
  43381c:	push   ebx
  43381d:	inc    ebx
  43381e:	dec    ecx
  43381f:	dec    ecx
  433820:	add    BYTE PTR [eax],al
  433822:	add    BYTE PTR [eax],al
  433824:	(bad)  
  433825:	(bad)  
  433826:	(bad)  
  433827:	inc    DWORD PTR [eax+eax*1]
  43382a:	add    BYTE PTR [eax],al
  43382c:	push   esi
  43382d:	dec    ecx
  43382e:	push   ecx
  43382f:	push   edx
  433830:	add    BYTE PTR [eax],al
  433832:	add    BYTE PTR [eax],al
  433834:	(bad)  
  433835:	(bad)  
  433836:	(bad)  
  433837:	inc    DWORD PTR [esi]
  433839:	add    BYTE PTR [eax],al
  43383b:	add    BYTE PTR [ebx+0x73],ah
  43383e:	push   esi
  43383f:	dec    ecx
  433840:	push   ecx
  433841:	push   edx
  433842:	add    BYTE PTR [eax],al
  433844:	(bad)  
  433845:	(bad)  
  433846:	(bad)  
  433847:	inc    DWORD PTR [edi]
  433849:	add    BYTE PTR [eax],al
  43384b:	add    BYTE PTR [ebx+0x73],ah
  43384e:	dec    ebx
  43384f:	dec    edi
  433850:	dec    ecx
  433851:	cmp    BYTE PTR [edx+0x0],dl
  433854:	(bad)  
  433855:	(bad)  
  433856:	(bad)  
  433857:	inc    DWORD PTR [esi]
  433859:	add    BYTE PTR [eax],al
  43385b:	add    BYTE PTR [ebx+0x4f],cl
  43385e:	dec    ecx
  43385f:	cmp    BYTE PTR ds:0xff000052,ch
  433865:	(bad)  
  433866:	(bad)  
  433867:	inc    DWORD PTR [esi]
  433869:	add    BYTE PTR [eax],al
  43386b:	add    BYTE PTR [ebx+0x4f],cl
  43386e:	dec    ecx
  43386f:	cmp    BYTE PTR ds:0xff000055,ch
  433875:	(bad)  
  433876:	(bad)  
  433877:	dec    DWORD PTR [eax]
  433879:	add    BYTE PTR [eax],al
  43387b:	add    BYTE PTR [ecx+0x42],cl
  43387e:	dec    ebp
  43387f:	xor    BYTE PTR [eax],dh
  433881:	cmp    BYTE PTR ds:0x38,dh
  433887:	add    bh,bh
  433889:	(bad)  
  43388a:	(bad)  
  43388b:	dec    DWORD PTR [edx]
  43388d:	add    BYTE PTR [eax],al
  43388f:	add    BYTE PTR [ebx+0x43],al
  433892:	push   ebx
  433893:	dec    ecx
  433894:	inc    esp
  433895:	xor    BYTE PTR [eax],dh
  433897:	cmp    BYTE PTR ds:0xff000038,dh
  43389d:	(bad)  
  43389e:	(bad)  
  43389f:	inc    DWORD PTR [edi]
  4338a1:	add    BYTE PTR [eax],al
  4338a3:	add    BYTE PTR [ebx+0x50],al
  4338a6:	xor    BYTE PTR [eax],dh
  4338a8:	cmp    BYTE PTR ds:0xffff0038,dh
  4338ae:	(bad)  
  4338af:	call   FWORD PTR [eax]
  4338b1:	add    BYTE PTR [eax],al
  4338b3:	add    BYTE PTR [eax+0x43],dl
  4338b6:	sub    eax,0x746c754d
  4338bb:	imul   ebp,DWORD PTR [ecx+ebp*2+0x6e],0x6c617567
  4338c3:	sub    eax,0x2b303538
  4338c8:	gs jne 0x43393d
  4338cb:	outs   dx,DWORD PTR ds:[esi]
  4338cc:	add    BYTE PTR [eax],al
  4338ce:	add    BYTE PTR [eax],al
  4338d0:	(bad)  
  4338d1:	(bad)  
  4338d2:	(bad)  
  4338d3:	dec    DWORD PTR [eax]
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [ecx+0x42],cl
  4338da:	dec    ebp
  4338db:	xor    BYTE PTR [eax],dh
  4338dd:	cmp    DWORD PTR [edx],esi
  4338df:	xor    al,0x0
  4338e1:	add    BYTE PTR [eax],al
  4338e3:	add    bh,bh
  4338e5:	(bad)  
  4338e6:	(bad)  
  4338e7:	dec    DWORD PTR [edx]
  4338e9:	add    BYTE PTR [eax],al
  4338eb:	add    BYTE PTR [ebx+0x43],al
  4338ee:	push   ebx
  4338ef:	dec    ecx
  4338f0:	inc    esp
  4338f1:	xor    BYTE PTR [eax],dh
  4338f3:	cmp    DWORD PTR [edx],esi
  4338f5:	xor    al,0x0
  4338f7:	add    bh,bh
  4338f9:	(bad)  
  4338fa:	(bad)  
  4338fb:	inc    DWORD PTR [edi]
  4338fd:	add    BYTE PTR [eax],al
  4338ff:	add    BYTE PTR [ebx+0x50],al
  433902:	xor    BYTE PTR [eax],dh
  433904:	cmp    DWORD PTR [edx],esi
  433906:	xor    al,0x0
  433908:	(bad)  
  433909:	(bad)  
  43390a:	(bad)  
  43390b:	call   DWORD PTR [ebx]
  43390d:	add    BYTE PTR [eax],al
  43390f:	add    BYTE PTR [ebp+0x62],ah
  433912:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433916:	sub    eax,0x6974614c
  43391b:	outs   dx,BYTE PTR ds:[esi]
  43391c:	cmp    DWORD PTR ds:0x7275652d,ebp
  433922:	outs   dx,DWORD PTR ds:[esi]
  433923:	add    bh,bh
  433925:	(bad)  
  433926:	(bad)  
  433927:	dec    DWORD PTR [eax]
  433929:	add    BYTE PTR [eax],al
  43392b:	add    BYTE PTR [ecx+0x42],cl
  43392e:	dec    ebp
  43392f:	xor    BYTE PTR [ecx],dh
  433931:	xor    DWORD PTR [eax+esi*1],esi
  433934:	add    BYTE PTR [eax],al
  433936:	add    BYTE PTR [eax],al
  433938:	(bad)  
  433939:	(bad)  
  43393a:	(bad)  
  43393b:	dec    DWORD PTR [edx]
  43393d:	add    BYTE PTR [eax],al
  43393f:	add    BYTE PTR [ebx+0x43],al
  433942:	push   ebx
  433943:	dec    ecx
  433944:	inc    esp
  433945:	xor    BYTE PTR [ecx],dh
  433947:	xor    DWORD PTR [eax+esi*1],esi
  43394a:	add    BYTE PTR [eax],al
  43394c:	(bad)  
  43394d:	(bad)  
  43394e:	(bad)  
  43394f:	inc    DWORD PTR [edi]
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [ebx+0x50],al
  433956:	xor    BYTE PTR [ecx],dh
  433958:	xor    DWORD PTR [eax+esi*1],esi
  43395b:	add    bh,bh
  43395d:	(bad)  
  43395e:	(bad)  
  43395f:	call   DWORD PTR [ecx]
  433961:	add    BYTE PTR [eax],al
  433963:	add    BYTE PTR [ebp+0x62],ah
  433966:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  43396a:	sub    eax,0x332d7375
  43396f:	aaa    
  433970:	sub    esp,DWORD PTR [ebp+0x75]
  433973:	jb     0x4339e4
  433975:	add    BYTE PTR [eax],al
  433977:	add    bh,bh
  433979:	(bad)  
  43397a:	(bad)  
  43397b:	dec    DWORD PTR [eax]
  43397d:	add    BYTE PTR [eax],al
  43397f:	add    BYTE PTR [ecx+0x42],cl
  433982:	dec    ebp
  433983:	xor    BYTE PTR [ecx],dh
  433985:	xor    DWORD PTR [ecx+esi*1],esi
  433988:	add    BYTE PTR [eax],al
  43398a:	add    BYTE PTR [eax],al
  43398c:	(bad)  
  43398d:	(bad)  
  43398e:	(bad)  
  43398f:	dec    DWORD PTR [edx]
  433991:	add    BYTE PTR [eax],al
  433993:	add    BYTE PTR [ebx+0x43],al
  433996:	push   ebx
  433997:	dec    ecx
  433998:	inc    esp
  433999:	xor    BYTE PTR [ecx],dh
  43399b:	xor    DWORD PTR [ecx+esi*1],esi
  43399e:	add    BYTE PTR [eax],al
  4339a0:	(bad)  
  4339a1:	(bad)  
  4339a2:	(bad)  
  4339a3:	inc    DWORD PTR [edi]
  4339a5:	add    BYTE PTR [eax],al
  4339a7:	add    BYTE PTR [ebx+0x50],al
  4339aa:	xor    BYTE PTR [ecx],dh
  4339ac:	xor    DWORD PTR [ecx+esi*1],esi
  4339af:	add    bh,bh
  4339b1:	(bad)  
  4339b2:	(bad)  
  4339b3:	call   DWORD PTR [edx]
  4339b5:	add    BYTE PTR [eax],al
  4339b7:	add    BYTE PTR [ebp+0x62],ah
  4339ba:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  4339be:	sub    eax,0x322d6564
  4339c3:	aaa    
  4339c4:	xor    ebp,DWORD PTR [ebx]
  4339c6:	gs jne 0x433a3b
  4339c9:	outs   dx,DWORD PTR ds:[esi]
  4339ca:	add    BYTE PTR [eax],al
  4339cc:	(bad)  
  4339cd:	(bad)  
  4339ce:	(bad)  
  4339cf:	dec    DWORD PTR [eax]
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [ecx+0x42],cl
  4339d6:	dec    ebp
  4339d7:	xor    BYTE PTR [ecx],dh
  4339d9:	xor    DWORD PTR [edx+esi*1],esi
  4339dc:	add    BYTE PTR [eax],al
  4339de:	add    BYTE PTR [eax],al
  4339e0:	(bad)  
  4339e1:	(bad)  
  4339e2:	(bad)  
  4339e3:	dec    DWORD PTR [edx]
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	add    BYTE PTR [ebx+0x43],al
  4339ea:	push   ebx
  4339eb:	dec    ecx
  4339ec:	inc    esp
  4339ed:	xor    BYTE PTR [ecx],dh
  4339ef:	xor    DWORD PTR [edx+esi*1],esi
  4339f2:	add    BYTE PTR [eax],al
  4339f4:	(bad)  
  4339f5:	(bad)  
  4339f6:	(bad)  
  4339f7:	inc    DWORD PTR [edi]
  4339f9:	add    BYTE PTR [eax],al
  4339fb:	add    BYTE PTR [ebx+0x50],al
  4339fe:	xor    BYTE PTR [ecx],dh
  433a00:	xor    DWORD PTR [edx+esi*1],esi
  433a03:	add    bh,bh
  433a05:	(bad)  
  433a06:	(bad)  
  433a07:	call   DWORD PTR [edx]
  433a09:	add    BYTE PTR [eax],al
  433a0b:	add    BYTE PTR [ebp+0x62],ah
  433a0e:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433a12:	sub    eax,0x322d6b64
  433a17:	aaa    
  433a18:	aaa    
  433a19:	sub    esp,DWORD PTR [ebp+0x75]
  433a1c:	jb     0x433a8d
  433a1e:	add    BYTE PTR [eax],al
  433a20:	(bad)  
  433a21:	(bad)  
  433a22:	(bad)  
  433a23:	call   DWORD PTR [edx]
  433a25:	add    BYTE PTR [eax],al
  433a27:	add    BYTE PTR [ebp+0x62],ah
  433a2a:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433a2e:	sub    eax,0x322d6f6e
  433a33:	aaa    
  433a34:	aaa    
  433a35:	sub    esp,DWORD PTR [ebp+0x75]
  433a38:	jb     0x433aa9
  433a3a:	add    BYTE PTR [eax],al
  433a3c:	(bad)  
  433a3d:	(bad)  
  433a3e:	(bad)  
  433a3f:	dec    DWORD PTR [eax]
  433a41:	add    BYTE PTR [eax],al
  433a43:	add    BYTE PTR [ecx+0x42],cl
  433a46:	dec    ebp
  433a47:	xor    BYTE PTR [ecx],dh
  433a49:	xor    DWORD PTR [ebx+esi*1],esi
  433a4c:	add    BYTE PTR [eax],al
  433a4e:	add    BYTE PTR [eax],al
  433a50:	(bad)  
  433a51:	(bad)  
  433a52:	(bad)  
  433a53:	dec    DWORD PTR [edx]
  433a55:	add    BYTE PTR [eax],al
  433a57:	add    BYTE PTR [ebx+0x43],al
  433a5a:	push   ebx
  433a5b:	dec    ecx
  433a5c:	inc    esp
  433a5d:	xor    BYTE PTR [ecx],dh
  433a5f:	xor    DWORD PTR [ebx+esi*1],esi
  433a62:	add    BYTE PTR [eax],al
  433a64:	(bad)  
  433a65:	(bad)  
  433a66:	(bad)  
  433a67:	inc    DWORD PTR [edi]
  433a69:	add    BYTE PTR [eax],al
  433a6b:	add    BYTE PTR [ebx+0x50],al
  433a6e:	xor    BYTE PTR [ecx],dh
  433a70:	xor    DWORD PTR [ebx+esi*1],esi
  433a73:	add    bh,bh
  433a75:	(bad)  
  433a76:	(bad)  
  433a77:	call   DWORD PTR [edx]
  433a79:	add    BYTE PTR [eax],al
  433a7b:	add    BYTE PTR [ebp+0x62],ah
  433a7e:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433a82:	sub    eax,0x322d6966
  433a87:	aaa    
  433a88:	cmp    BYTE PTR [ebx],ch
  433a8a:	gs jne 0x433aff
  433a8d:	outs   dx,DWORD PTR ds:[esi]
  433a8e:	add    BYTE PTR [eax],al
  433a90:	(bad)  
  433a91:	(bad)  
  433a92:	(bad)  
  433a93:	call   DWORD PTR [edx]
  433a95:	add    BYTE PTR [eax],al
  433a97:	add    BYTE PTR [ebp+0x62],ah
  433a9a:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433a9e:	sub    eax,0x322d6573
  433aa3:	aaa    
  433aa4:	cmp    BYTE PTR [ebx],ch
  433aa6:	gs jne 0x433b1b
  433aa9:	outs   dx,DWORD PTR ds:[esi]
  433aaa:	add    BYTE PTR [eax],al
  433aac:	(bad)  
  433aad:	(bad)  
  433aae:	(bad)  
  433aaf:	dec    DWORD PTR [eax]
  433ab1:	add    BYTE PTR [eax],al
  433ab3:	add    BYTE PTR [ecx+0x42],cl
  433ab6:	dec    ebp
  433ab7:	xor    BYTE PTR [ecx],dh
  433ab9:	xor    DWORD PTR [esp+esi*1],esi
  433abc:	add    BYTE PTR [eax],al
  433abe:	add    BYTE PTR [eax],al
  433ac0:	(bad)  
  433ac1:	(bad)  
  433ac2:	(bad)  
  433ac3:	dec    DWORD PTR [edx]
  433ac5:	add    BYTE PTR [eax],al
  433ac7:	add    BYTE PTR [ebx+0x43],al
  433aca:	push   ebx
  433acb:	dec    ecx
  433acc:	inc    esp
  433acd:	xor    BYTE PTR [ecx],dh
  433acf:	xor    DWORD PTR [esp+esi*1],esi
  433ad2:	add    BYTE PTR [eax],al
  433ad4:	(bad)  
  433ad5:	(bad)  
  433ad6:	(bad)  
  433ad7:	inc    DWORD PTR [edi]
  433ad9:	add    BYTE PTR [eax],al
  433adb:	add    BYTE PTR [ebx+0x50],al
  433ade:	xor    BYTE PTR [ecx],dh
  433ae0:	xor    DWORD PTR [esp+esi*1],esi
  433ae3:	add    bh,bh
  433ae5:	(bad)  
  433ae6:	(bad)  
  433ae7:	call   DWORD PTR [edx]
  433ae9:	add    BYTE PTR [eax],al
  433aeb:	add    BYTE PTR [ebp+0x62],ah
  433aee:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433af2:	sub    eax,0x322d7469
  433af7:	cmp    BYTE PTR [eax],dh
  433af9:	sub    esp,DWORD PTR [ebp+0x75]
  433afc:	jb     0x433b6d
  433afe:	add    BYTE PTR [eax],al
  433b00:	(bad)  
  433b01:	(bad)  
  433b02:	(bad)  
  433b03:	dec    DWORD PTR [eax]
  433b05:	add    BYTE PTR [eax],al
  433b07:	add    BYTE PTR [ecx+0x42],cl
  433b0a:	dec    ebp
  433b0b:	xor    BYTE PTR [ecx],dh
  433b0d:	xor    DWORD PTR [esi*1+0x0],esi
  433b14:	(bad)  
  433b15:	(bad)  
  433b16:	(bad)  
  433b17:	dec    DWORD PTR [edx]
  433b19:	add    BYTE PTR [eax],al
  433b1b:	add    BYTE PTR [ebx+0x43],al
  433b1e:	push   ebx
  433b1f:	dec    ecx
  433b20:	inc    esp
  433b21:	xor    BYTE PTR [ecx],dh
  433b23:	xor    DWORD PTR [esi*1-0x10000],esi
  433b2a:	(bad)  
  433b2b:	inc    DWORD PTR [edi]
  433b2d:	add    BYTE PTR [eax],al
  433b2f:	add    BYTE PTR [ebx+0x50],al
  433b32:	xor    BYTE PTR [ecx],dh
  433b34:	xor    DWORD PTR [esi*1-0x100],esi
  433b3b:	call   DWORD PTR [edx]
  433b3d:	add    BYTE PTR [eax],al
  433b3f:	add    BYTE PTR [ebp+0x62],ah
  433b42:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433b46:	sub    eax,0x322d7365
  433b4b:	cmp    BYTE PTR [ebx+ebp*1],dh
  433b4e:	gs jne 0x433bc3
  433b51:	outs   dx,DWORD PTR ds:[esi]
  433b52:	add    BYTE PTR [eax],al
  433b54:	(bad)  
  433b55:	(bad)  
  433b56:	(bad)  
  433b57:	dec    DWORD PTR [eax]
  433b59:	add    BYTE PTR [eax],al
  433b5b:	add    BYTE PTR [ecx+0x42],cl
  433b5e:	dec    ebp
  433b5f:	xor    BYTE PTR [ecx],dh
  433b61:	xor    DWORD PTR [esi+esi*1],esi
  433b64:	add    BYTE PTR [eax],al
  433b66:	add    BYTE PTR [eax],al
  433b68:	(bad)  
  433b69:	(bad)  
  433b6a:	(bad)  
  433b6b:	dec    DWORD PTR [edx]
  433b6d:	add    BYTE PTR [eax],al
  433b6f:	add    BYTE PTR [ebx+0x43],al
  433b72:	push   ebx
  433b73:	dec    ecx
  433b74:	inc    esp
  433b75:	xor    BYTE PTR [ecx],dh
  433b77:	xor    DWORD PTR [esi+esi*1],esi
  433b7a:	add    BYTE PTR [eax],al
  433b7c:	(bad)  
  433b7d:	(bad)  
  433b7e:	(bad)  
  433b7f:	inc    DWORD PTR [edi]
  433b81:	add    BYTE PTR [eax],al
  433b83:	add    BYTE PTR [ebx+0x50],al
  433b86:	xor    BYTE PTR [ecx],dh
  433b88:	xor    DWORD PTR [esi+esi*1],esi
  433b8b:	add    bh,bh
  433b8d:	(bad)  
  433b8e:	(bad)  
  433b8f:	call   DWORD PTR [edx]
  433b91:	add    BYTE PTR [eax],al
  433b93:	add    BYTE PTR [ebp+0x62],ah
  433b96:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433b9a:	sub    eax,0x322d6267
  433b9f:	cmp    BYTE PTR ds:0x7275652b,dh
  433ba5:	outs   dx,DWORD PTR ds:[esi]
  433ba6:	add    BYTE PTR [eax],al
  433ba8:	(bad)  
  433ba9:	(bad)  
  433baa:	(bad)  
  433bab:	dec    DWORD PTR [eax]
  433bad:	add    BYTE PTR [eax],al
  433baf:	add    BYTE PTR [ecx+0x42],cl
  433bb2:	dec    ebp
  433bb3:	xor    BYTE PTR [ecx],dh
  433bb5:	xor    DWORD PTR [edi+esi*1],esi
  433bb8:	add    BYTE PTR [eax],al
  433bba:	add    BYTE PTR [eax],al
  433bbc:	(bad)  
  433bbd:	(bad)  
  433bbe:	(bad)  
  433bbf:	dec    DWORD PTR [edx]
  433bc1:	add    BYTE PTR [eax],al
  433bc3:	add    BYTE PTR [ebx+0x43],al
  433bc6:	push   ebx
  433bc7:	dec    ecx
  433bc8:	inc    esp
  433bc9:	xor    BYTE PTR [ecx],dh
  433bcb:	xor    DWORD PTR [edi+esi*1],esi
  433bce:	add    BYTE PTR [eax],al
  433bd0:	(bad)  
  433bd1:	(bad)  
  433bd2:	(bad)  
  433bd3:	inc    DWORD PTR [edi]
  433bd5:	add    BYTE PTR [eax],al
  433bd7:	add    BYTE PTR [ebx+0x50],al
  433bda:	xor    BYTE PTR [ecx],dh
  433bdc:	xor    DWORD PTR [edi+esi*1],esi
  433bdf:	add    bh,bh
  433be1:	(bad)  
  433be2:	(bad)  
  433be3:	call   DWORD PTR [edx]
  433be5:	add    BYTE PTR [eax],al
  433be7:	add    BYTE PTR [ebp+0x62],ah
  433bea:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433bee:	sub    eax,0x322d7266
  433bf3:	cmp    DWORD PTR [edi],esi
  433bf5:	sub    esp,DWORD PTR [ebp+0x75]
  433bf8:	jb     0x433c69
  433bfa:	add    BYTE PTR [eax],al
  433bfc:	(bad)  
  433bfd:	(bad)  
  433bfe:	(bad)  
  433bff:	dec    DWORD PTR [eax]
  433c01:	add    BYTE PTR [eax],al
  433c03:	add    BYTE PTR [ecx+0x42],cl
  433c06:	dec    ebp
  433c07:	xor    BYTE PTR [ecx],dh
  433c09:	xor    DWORD PTR [eax+edi*1],esi
  433c0c:	add    BYTE PTR [eax],al
  433c0e:	add    BYTE PTR [eax],al
  433c10:	(bad)  
  433c11:	(bad)  
  433c12:	(bad)  
  433c13:	dec    DWORD PTR [edx]
  433c15:	add    BYTE PTR [eax],al
  433c17:	add    BYTE PTR [ebx+0x43],al
  433c1a:	push   ebx
  433c1b:	dec    ecx
  433c1c:	inc    esp
  433c1d:	xor    BYTE PTR [ecx],dh
  433c1f:	xor    DWORD PTR [eax+edi*1],esi
  433c22:	add    BYTE PTR [eax],al
  433c24:	(bad)  
  433c25:	(bad)  
  433c26:	(bad)  
  433c27:	inc    DWORD PTR [edi]
  433c29:	add    BYTE PTR [eax],al
  433c2b:	add    BYTE PTR [ebx+0x50],al
  433c2e:	xor    BYTE PTR [ecx],dh
  433c30:	xor    DWORD PTR [eax+edi*1],esi
  433c33:	add    bh,bh
  433c35:	(bad)  
  433c36:	(bad)  
  433c37:	call   FWORD PTR ds:0x65000000
  433c3d:	bound  esp,QWORD PTR [ebx+0x64]
  433c40:	imul   esp,DWORD PTR [ebx+0x2d],0x65746e69
  433c47:	jb     0x433cb7
  433c49:	popa   
  433c4a:	je     0x433cb5
  433c4c:	outs   dx,DWORD PTR ds:[esi]
  433c4d:	outs   dx,BYTE PTR ds:[esi]
  433c4e:	popa   
  433c4f:	ins    BYTE PTR es:[edi],dx
  433c50:	sub    eax,0x2b303035
  433c55:	gs jne 0x433cca
  433c58:	outs   dx,DWORD PTR ds:[esi]
  433c59:	add    BYTE PTR [eax],al
  433c5b:	add    bh,bh
  433c5d:	(bad)  
  433c5e:	(bad)  
  433c5f:	dec    DWORD PTR [eax]
  433c61:	add    BYTE PTR [eax],al
  433c63:	add    BYTE PTR [ecx+0x42],cl
  433c66:	dec    ebp
  433c67:	xor    BYTE PTR [ecx],dh
  433c69:	xor    DWORD PTR [ecx+edi*1],esi
  433c6c:	add    BYTE PTR [eax],al
  433c6e:	add    BYTE PTR [eax],al
  433c70:	(bad)  
  433c71:	(bad)  
  433c72:	(bad)  
  433c73:	dec    DWORD PTR [edx]
  433c75:	add    BYTE PTR [eax],al
  433c77:	add    BYTE PTR [ebx+0x43],al
  433c7a:	push   ebx
  433c7b:	dec    ecx
  433c7c:	inc    esp
  433c7d:	xor    BYTE PTR [ecx],dh
  433c7f:	xor    DWORD PTR [ecx+edi*1],esi
  433c82:	add    BYTE PTR [eax],al
  433c84:	(bad)  
  433c85:	(bad)  
  433c86:	(bad)  
  433c87:	inc    DWORD PTR [edi]
  433c89:	add    BYTE PTR [eax],al
  433c8b:	add    BYTE PTR [ebx+0x50],al
  433c8e:	xor    BYTE PTR [ecx],dh
  433c90:	xor    DWORD PTR [ecx+edi*1],esi
  433c93:	add    bh,bh
  433c95:	(bad)  
  433c96:	(bad)  
  433c97:	call   DWORD PTR [edx]
  433c99:	add    BYTE PTR [eax],al
  433c9b:	add    BYTE PTR [ebp+0x62],ah
  433c9e:	arpl   WORD PTR [ecx+ebp*2+0x63],sp
  433ca2:	sub    eax,0x382d7369
  433ca7:	aaa    
  433ca8:	xor    DWORD PTR [ebx],ebp
  433caa:	gs jne 0x433d1f
  433cad:	outs   dx,DWORD PTR ds:[esi]
  433cae:	add    BYTE PTR [eax],al
  433cb0:	(bad)  
  433cb1:	(bad)  
  433cb2:	(bad)  
  433cb3:	dec    DWORD PTR [edx]
  433cb5:	add    BYTE PTR [eax],al
  433cb7:	add    BYTE PTR [edx+0x69],al
  433cba:	addr16 xor eax,0x534b482d
  433cc0:	inc    ebx
  433cc1:	push   ebx
  433cc2:	add    BYTE PTR [eax],al
  433cc4:	(bad)  
  433cc5:	(bad)  
  433cc6:	(bad)  
  433cc7:	dec    DWORD PTR [ebx]
  433cc9:	add    BYTE PTR [eax],al
  433ccb:	add    BYTE PTR [ebp+0x4e],dl
  433cce:	dec    ecx
  433ccf:	inc    ebx
  433cd0:	dec    edi
  433cd1:	inc    esp
  433cd2:	inc    ebp
  433cd3:	sub    eax,0x312d31
  433cd8:	(bad)  
  433cd9:	(bad)  
  433cda:	(bad)  
  433cdb:	dec    DWORD PTR [ebx]
  433cdd:	add    BYTE PTR [eax],al
  433cdf:	add    BYTE PTR [ebx+0x73],ah
  433ce2:	push   ebp
  433ce3:	outs   dx,BYTE PTR ds:[esi]
  433ce4:	imul   esp,DWORD PTR [ebx+0x6f],0x31316564
  433ceb:	add    bh,bh
  433ced:	(bad)  
  433cee:	(bad)  
  433cef:	inc    DWORD PTR [eax+eax*1]
  433cf2:	add    BYTE PTR [eax],al
  433cf4:	push   ebx
  433cf5:	inc    ebx
  433cf6:	push   ebx
  433cf7:	push   ebp
  433cf8:	add    BYTE PTR [eax],al
  433cfa:	add    BYTE PTR [eax],al
  433cfc:	(bad)  
  433cfd:	(bad)  
  433cfe:	(bad)  
  433cff:	inc    DWORD PTR ds:0x55000000
  433d05:	push   esp
  433d06:	inc    esi
  433d07:	sub    eax,0x37
  433d0c:	(bad)  
  433d0d:	(bad)  
  433d0e:	(bad)  
  433d0f:	dec    DWORD PTR [eax]
  433d11:	add    BYTE PTR [eax],al
  433d13:	add    BYTE PTR [ebp+0x54],dl
  433d16:	inc    esi
  433d17:	sub    eax,0x45423631
  433d1c:	add    BYTE PTR [eax],al
  433d1e:	add    BYTE PTR [eax],al
  433d20:	(bad)  
  433d21:	(bad)  
  433d22:	(bad)  
  433d23:	dec    DWORD PTR [eax]
  433d25:	add    BYTE PTR [eax],al
  433d27:	add    BYTE PTR [ebp+0x54],dl
  433d2a:	inc    esi
  433d2b:	sub    eax,0x454c3631
  433d30:	add    BYTE PTR [eax],al
  433d32:	add    BYTE PTR [eax],al
  433d34:	(bad)  
  433d35:	(bad)  
  433d36:	(bad)  
  433d37:	inc    DWORD PTR [esi]
  433d39:	add    BYTE PTR [eax],al
  433d3b:	add    BYTE PTR [ebp+0x54],dl
  433d3e:	inc    esi
  433d3f:	sub    eax,0x3631
  433d44:	(bad)  
  433d45:	(bad)  
  433d46:	(bad)  
  433d47:	inc    DWORD PTR [esi]
  433d49:	add    BYTE PTR [eax],al
  433d4b:	add    BYTE PTR [ebx+0x45],al
  433d4e:	push   ebx
  433d4f:	push   ebp
  433d50:	sub    eax,0xff000038
  433d55:	(bad)  
  433d56:	(bad)  
  433d57:	dec    DWORD PTR [eax]
  433d59:	add    BYTE PTR [eax],al
  433d5b:	add    BYTE PTR [ebx+0x73],ah
  433d5e:	inc    ebx
  433d5f:	inc    ebp
  433d60:	push   ebx
  433d61:	push   ebp
  433d62:	sub    eax,0x38
  433d67:	add    bh,bh
  433d69:	(bad)  
  433d6a:	(bad)  
  433d6b:	inc    DWORD PTR [esi]
  433d6d:	add    BYTE PTR [eax],al
  433d6f:	add    BYTE PTR [ebp+0x54],dl
  433d72:	inc    esi
  433d73:	sub    eax,0x3233
  433d78:	(bad)  
  433d79:	(bad)  
  433d7a:	(bad)  
  433d7b:	dec    DWORD PTR [eax]
  433d7d:	add    BYTE PTR [eax],al
  433d7f:	add    BYTE PTR [ebp+0x54],dl
  433d82:	inc    esi
  433d83:	sub    eax,0x45423233
  433d88:	add    BYTE PTR [eax],al
  433d8a:	add    BYTE PTR [eax],al
  433d8c:	(bad)  
  433d8d:	(bad)  
  433d8e:	(bad)  
  433d8f:	dec    DWORD PTR [eax]
  433d91:	add    BYTE PTR [eax],al
  433d93:	add    BYTE PTR [ebp+0x54],dl
  433d96:	inc    esi
  433d97:	sub    eax,0x454c3233
  433d9c:	add    BYTE PTR [eax],al
  433d9e:	add    BYTE PTR [eax],al
  433da0:	(bad)  
  433da1:	(bad)  
  433da2:	(bad)  
  433da3:	call   DWORD PTR [ecx]
  433da5:	add    BYTE PTR [eax],al
  433da7:	add    BYTE PTR [ebp+0x4e],dl
  433daa:	dec    ecx
  433dab:	inc    ebx
  433dac:	dec    edi
  433dad:	inc    esp
  433dae:	inc    ebp
  433daf:	sub    eax,0x2d312d31
  433db4:	push   ebp
  433db5:	push   esp
  433db6:	inc    esi
  433db7:	sub    eax,0x37
  433dbc:	(bad)  
  433dbd:	(bad)  
  433dbe:	(bad)  
  433dbf:	dec    DWORD PTR [edi]
  433dc1:	add    BYTE PTR [eax],al
  433dc3:	add    BYTE PTR [ebx+0x73],ah
  433dc6:	push   ebp
  433dc7:	outs   dx,BYTE PTR ds:[esi]
  433dc8:	imul   esp,DWORD PTR [ebx+0x6f],0x31316564
  433dcf:	push   ebp
  433dd0:	push   esp
  433dd1:	inc    esi
  433dd2:	aaa    
  433dd3:	add    bh,bh
  433dd5:	(bad)  
  433dd6:	(bad)  
  433dd7:	inc    DWORD PTR ds:0x55000000
  433ddd:	push   esp
  433dde:	inc    esi
  433ddf:	sub    eax,0x38
  433de4:	(bad)  
  433de5:	(bad)  
  433de6:	(bad)  
  433de7:	dec    DWORD PTR [ebx]
  433de9:	add    BYTE PTR [eax],al
  433deb:	add    BYTE PTR [ecx+0x53],cl
  433dee:	dec    edi
  433def:	sub    eax,0x39353838
  433df4:	sub    eax,0xff003331
  433df9:	(bad)  
  433dfa:	(bad)  
  433dfb:	dec    DWORD PTR [ebx]
  433dfd:	add    BYTE PTR [eax],al
  433dff:	add    BYTE PTR [ecx+0x53],cl
  433e02:	dec    edi
  433e03:	sub    eax,0x39353838
  433e08:	sub    eax,0xff003431
  433e0d:	(bad)  
  433e0e:	(bad)  
  433e0f:	dec    DWORD PTR [edx]
  433e11:	add    BYTE PTR [eax],al
  433e13:	add    BYTE PTR [ecx+0x73],ch
  433e16:	outs   dx,DWORD PTR ds:[esi]
  433e17:	sub    eax,0x312d7269
  433e1c:	cmp    DWORD PTR [ecx],edi
  433e1e:	add    BYTE PTR [eax],al
  433e20:	(bad)  
  433e21:	(bad)  
  433e22:	(bad)  
  433e23:	call   DWORD PTR [eax]
  433e25:	add    BYTE PTR [eax],al
  433e27:	add    BYTE PTR [ecx+0x53],cl
  433e2a:	dec    edi
  433e2b:	pop    edi
  433e2c:	cmp    BYTE PTR [eax],bh
  433e2e:	xor    eax,0x34312d39
  433e33:	cmp    dh,BYTE PTR [ecx]
  433e35:	cmp    DWORD PTR [ecx],edi
  433e37:	cmp    BYTE PTR [eax],al
  433e39:	add    BYTE PTR [eax],al
  433e3b:	add    bh,bh
  433e3d:	(bad)  
  433e3e:	(bad)  
  433e3f:	dec    DWORD PTR [ebx]
  433e41:	add    BYTE PTR [eax],al
  433e43:	add    BYTE PTR [ecx+0x53],cl
  433e46:	dec    edi
  433e47:	pop    edi
  433e48:	cmp    BYTE PTR [eax],bh
  433e4a:	xor    eax,0x34312d39
  433e4f:	add    bh,bh
  433e51:	(bad)  
  433e52:	(bad)  
  433e53:	inc    DWORD PTR [esi]
  433e55:	add    BYTE PTR [eax],al
  433e57:	add    BYTE PTR [ecx+eiz*2+0x74],ch
  433e5b:	imul   ebp,DWORD PTR [esi+0x38],0xffff0000
  433e62:	(bad)  
  433e63:	dec    DWORD PTR [edx]
  433e65:	add    BYTE PTR [eax],al
  433e67:	add    BYTE PTR [ecx+0x73],ch
  433e6a:	outs   dx,DWORD PTR ds:[esi]
  433e6b:	sub    eax,0x746c6563
  433e70:	imul   esp,DWORD PTR [ebx+0x0],0xffffff00
  433e77:	inc    DWORD PTR [edx]
  433e79:	add    BYTE PTR [eax],al
  433e7b:	add    BYTE PTR [eax+edi*1+0x0],ch
  433e7f:	add    bh,bh
  433e81:	(bad)  
  433e82:	(bad)  
  433e83:	dec    DWORD PTR [ebx]
  433e85:	add    BYTE PTR [eax],al
  433e87:	add    BYTE PTR [ecx+0x53],cl
  433e8a:	dec    edi
  433e8b:	sub    eax,0x39353838
  433e90:	sub    eax,0xff003531
  433e95:	(bad)  
  433e96:	(bad)  
  433e97:	dec    DWORD PTR [ebx]
  433e99:	add    BYTE PTR [eax],al
  433e9b:	add    BYTE PTR [ecx+0x53],cl
  433e9e:	dec    edi
  433e9f:	pop    edi
  433ea0:	cmp    BYTE PTR [eax],bh
  433ea2:	xor    eax,0x35312d39
  433ea7:	add    bh,bh
  433ea9:	(bad)  
  433eaa:	(bad)  
  433eab:	dec    DWORD PTR [ebx]
  433ead:	add    BYTE PTR [eax],al
  433eaf:	add    BYTE PTR [ecx+0x53],cl
  433eb2:	dec    edi
  433eb3:	sub    eax,0x39353838
  433eb8:	sub    eax,0xff003631
  433ebd:	(bad)  
  433ebe:	(bad)  
  433ebf:	inc    DWORD PTR [ebx]
  433ec1:	add    BYTE PTR [eax],al
  433ec3:	add    BYTE PTR [edi+0x42],al
  433ec6:	dec    ebx
  433ec7:	add    bh,bh
  433ec9:	(bad)  
  433eca:	(bad)  
  433ecb:	inc    DWORD PTR ds:0x43000000
  433ed1:	push   eax
  433ed2:	cmp    DWORD PTR [ebx],esi
  433ed4:	add    BYTE PTR ss:[eax],al
  433ed7:	add    bh,bh
  433ed9:	(bad)  
  433eda:	(bad)  
  433edb:	inc    DWORD PTR ds:0x4d000000
  433ee1:	push   ebx
  433ee2:	cmp    DWORD PTR [ebx],esi
  433ee4:	add    BYTE PTR ss:[eax],al
  433ee7:	add    bh,bh
  433ee9:	(bad)  
  433eea:	(bad)  
  433eeb:	dec    DWORD PTR [ebx]
  433eed:	add    BYTE PTR [eax],al
  433eef:	add    BYTE PTR [edi+0x69],dh
  433ef2:	outs   dx,BYTE PTR ds:[esi]
  433ef3:	outs   dx,DWORD PTR fs:[esi]
  433ef5:	ja     0x433f6a
  433ef7:	sub    eax,0x363339
  433efc:	(bad)  
  433efd:	(bad)  
  433efe:	(bad)  
  433eff:	inc    DWORD PTR [edi]
  433f01:	add    BYTE PTR [eax],al
  433f03:	add    BYTE PTR [edi+0x42],al
  433f06:	xor    DWORD PTR [eax],edi
  433f08:	xor    BYTE PTR [ebx],dh
  433f0a:	xor    BYTE PTR [eax],al
  433f0c:	(bad)  
  433f0d:	(bad)  
  433f0e:	(bad)  
  433f0f:	dec    DWORD PTR [eax+eax*1]
  433f12:	add    BYTE PTR [eax],al
  433f14:	dec    edx
  433f15:	dec    ecx
  433f16:	push   ebx
  433f17:	pop    edi
  433f18:	inc    ebp
  433f19:	outs   dx,BYTE PTR ds:[esi]
  433f1a:	arpl   WORD PTR [edi+0x64],bp
  433f1d:	imul   ebp,DWORD PTR [esi+0x67],0x0
  433f24:	(bad)  
  433f25:	(bad)  
  433f26:	(bad)  
  433f27:	dec    DWORD PTR ds:0x63000000
  433f2d:	jae    0x433f79
  433f2f:	dec    ecx
  433f30:	push   ebx
  433f31:	inc    ebp
  433f32:	outs   dx,BYTE PTR ds:[esi]
  433f33:	arpl   WORD PTR [edi+0x64],bp
  433f36:	imul   ebp,DWORD PTR [esi+0x67],0xff000000
  433f3d:	(bad)  
  433f3e:	(bad)  
  433f3f:	dec    DWORD PTR [edx]
  433f41:	add    BYTE PTR [eax],al
  433f43:	add    BYTE PTR [ebx+0x73],ah
  433f46:	push   ebx
  433f47:	push   0x4a746669
  433f4c:	dec    ecx
  433f4d:	push   ebx
  433f4e:	add    BYTE PTR [eax],al
  433f50:	(bad)  
  433f51:	(bad)  
  433f52:	(bad)  
  433f53:	dec    DWORD PTR [ecx]
  433f55:	add    BYTE PTR [eax],al
  433f57:	add    BYTE PTR [ebx+0x68],dl
  433f5a:	imul   esp,DWORD PTR [esi+0x74],0x53494a5f
  433f61:	add    BYTE PTR [eax],al
  433f63:	add    bh,bh
  433f65:	(bad)  
  433f66:	(bad)  
  433f67:	dec    DWORD PTR [eax]
  433f69:	add    BYTE PTR [eax],al
  433f6b:	add    BYTE PTR [ebp+0x53],cl
  433f6e:	pop    edi
  433f6f:	dec    ebx
  433f70:	popa   
  433f71:	outs   dx,BYTE PTR ds:[esi]
  433f72:	push   0x69
  433f74:	add    BYTE PTR [eax],al
  433f76:	add    BYTE PTR [eax],al
  433f78:	(bad)  
  433f79:	(bad)  
  433f7a:	(bad)  
  433f7b:	inc    DWORD PTR [esi]
  433f7d:	add    BYTE PTR [eax],al
  433f7f:	add    BYTE PTR [ebp+0x55],al
  433f82:	inc    ebx
  433f83:	sub    eax,0x504a
  433f88:	(bad)  
  433f89:	(bad)  
  433f8a:	(bad)  
  433f8b:	jmp    FWORD PTR ds:0x45000000
  433f91:	js     0x434007
  433f93:	outs   dx,BYTE PTR gs:[esi]
  433f95:	fs gs fs pop edi
  433f99:	push   ebp
  433f9a:	dec    esi
  433f9b:	dec    ecx
  433f9c:	pop    eax
  433f9d:	pop    edi
  433f9e:	inc    ebx
  433f9f:	outs   dx,DWORD PTR ds:[esi]
  433fa0:	fs gs pop edi
  433fa3:	push   eax
  433fa4:	popa   
  433fa5:	arpl   WORD PTR [ebx+0x65],bp
  433fa8:	fs pop edi
  433faa:	inc    esi
  433fab:	outs   dx,DWORD PTR ds:[esi]
  433fac:	jb     0x43401b
  433fae:	popa   
  433faf:	je     0x434010
  433fb1:	outs   dx,WORD PTR ds:[esi]
  433fb3:	jb     0x434014
  433fb5:	dec    edx
  433fb6:	popa   
  433fb7:	jo     0x43401a
  433fb9:	outs   dx,BYTE PTR ds:[esi]
  433fba:	gs jae 0x434022
  433fbd:	add    BYTE PTR [eax],al
  433fbf:	add    bh,bh
  433fc1:	(bad)  
  433fc2:	(bad)  
  433fc3:	call   DWORD PTR [ebx]
  433fc5:	add    BYTE PTR [eax],al
  433fc7:	add    BYTE PTR [ebx+0x73],ah
  433fca:	inc    ebp
  433fcb:	push   ebp
  433fcc:	inc    ebx
  433fcd:	push   eax
  433fce:	imul   esp,DWORD PTR [esi+eax*2+0x6d],0x74
  433fd3:	dec    edx
  433fd4:	popa   
  433fd5:	jo     0x434038
  433fd7:	outs   dx,BYTE PTR ds:[esi]
  433fd8:	gs jae 0x434040
  433fdb:	add    bh,bh
  433fdd:	(bad)  
  433fde:	(bad)  
  433fdf:	jmp    FWORD PTR [ebx]
  433fe1:	add    BYTE PTR [eax],al
  433fe3:	add    BYTE PTR [ebp+0x78],al
  433fe6:	je     0x43404d
  433fe8:	outs   dx,BYTE PTR ds:[esi]
  433fe9:	fs gs fs pop edi
  433fed:	push   ebp
  433fee:	dec    esi
  433fef:	dec    ecx
  433ff0:	pop    eax
  433ff1:	pop    edi
  433ff2:	inc    ebx
  433ff3:	outs   dx,DWORD PTR ds:[esi]
  433ff4:	fs gs pop edi
  433ff7:	inc    esi
  433ff8:	imul   edi,DWORD PTR [eax+0x65],0x69575f64
  433fff:	fs je  0x43406a
  434002:	pop    edi
  434003:	outs   dx,WORD PTR ds:[esi]
  434005:	jb     0x434066
  434007:	dec    edx
  434008:	popa   
  434009:	jo     0x43406c
  43400b:	outs   dx,BYTE PTR ds:[esi]
  43400c:	gs jae 0x434074
  43400f:	add    bh,bh
  434011:	(bad)  
  434012:	(bad)  
  434013:	call   DWORD PTR [ebx]
  434015:	add    BYTE PTR [eax],al
  434017:	add    BYTE PTR [ebx+0x73],ah
  43401a:	inc    ebp
  43401b:	push   ebp
  43401c:	inc    ebx
  43401d:	inc    esi
  43401e:	imul   edi,DWORD PTR [eax+0x57],0x614a6469
  434025:	jo     0x434088
  434027:	outs   dx,BYTE PTR ds:[esi]
  434028:	gs jae 0x434090
  43402b:	add    bh,bh
  43402d:	(bad)  
  43402e:	(bad)  
  43402f:	call   DWORD PTR [ebx]
  434031:	add    BYTE PTR [eax],al
  434033:	add    BYTE PTR [ecx+0x53],cl
  434036:	dec    edi
  434037:	sub    eax,0x34363031
  43403c:	ss sub eax,0x2d534355
  434042:	inc    edx
  434043:	popa   
  434044:	jae    0x4340af
  434046:	arpl   WORD PTR [eax],ax
  434048:	(bad)  
  434049:	(bad)  
  43404a:	(bad)  
  43404b:	dec    DWORD PTR [esi]
  43404d:	add    BYTE PTR [eax],al
  43404f:	add    BYTE PTR [ebx+0x73],ah
  434052:	push   ebp
  434053:	outs   dx,BYTE PTR ds:[esi]
  434054:	imul   esp,DWORD PTR [ebx+0x6f],0x53416564
  43405b:	inc    ebx
  43405c:	dec    ecx
  43405d:	dec    ecx
  43405e:	add    BYTE PTR [eax],al
  434060:	(bad)  
  434061:	(bad)  
  434062:	(bad)  
  434063:	call   FWORD PTR [eax]
  434065:	add    BYTE PTR [eax],al
  434067:	add    BYTE PTR [ecx+0x53],cl
  43406a:	dec    edi
  43406b:	sub    eax,0x34363031
  434070:	ss sub eax,0x63696e55
  434076:	outs   dx,DWORD PTR ds:[esi]
  434077:	fs gs sub eax,0x6974614c
  43407e:	outs   dx,BYTE PTR ds:[esi]
  43407f:	xor    DWORD PTR [eax],eax
  434081:	add    BYTE PTR [eax],al
  434083:	add    bh,bh
  434085:	(bad)  
  434086:	(bad)  
  434087:	dec    DWORD PTR [edi]
  434089:	add    BYTE PTR [eax],al
  43408b:	add    BYTE PTR [ebx+0x73],ah
  43408e:	push   ebp
  43408f:	outs   dx,BYTE PTR ds:[esi]
  434090:	imul   esp,DWORD PTR [ebx+0x6f],0x614c6564
  434097:	je     0x434102
  434099:	outs   dx,BYTE PTR ds:[esi]
  43409a:	xor    DWORD PTR [eax],eax
  43409c:	(bad)  
  43409d:	(bad)  
  43409e:	(bad)  
  43409f:	dec    DWORD PTR [ecx]
  4340a1:	add    BYTE PTR [eax],al
  4340a3:	add    BYTE PTR [ecx+0x53],cl
  4340a6:	dec    edi
  4340a7:	sub    eax,0x34363031
  4340ac:	add    BYTE PTR ss:[eax],al
  4340af:	add    bh,bh
  4340b1:	(bad)  
  4340b2:	(bad)  
  4340b3:	dec    DWORD PTR ds:0x49000000
  4340b9:	push   ebx
  4340ba:	dec    edi
  4340bb:	sub    eax,0x34363031
  4340c0:	ss sub eax,0x312d4a
  4340c6:	add    BYTE PTR [eax],al
  4340c8:	(bad)  
  4340c9:	(bad)  
  4340ca:	(bad)  
  4340cb:	call   DWORD PTR [eax+eax*1]
  4340ce:	add    BYTE PTR [eax],al
  4340d0:	dec    ecx
  4340d1:	push   ebx
  4340d2:	dec    edi
  4340d3:	sub    eax,0x63696e55
  4340d8:	outs   dx,DWORD PTR ds:[esi]
  4340d9:	fs gs sub eax,0x2d4d4249
  4340e0:	xor    DWORD PTR [edx],esi
  4340e2:	xor    DWORD PTR ss:[eax],eax
  4340e5:	add    BYTE PTR [eax],al
  4340e7:	add    bh,bh
  4340e9:	(bad)  
  4340ea:	(bad)  
  4340eb:	call   DWORD PTR [eax]
  4340ed:	add    BYTE PTR [eax],al
  4340ef:	add    BYTE PTR [ebx+0x73],ah
  4340f2:	push   ebp
  4340f3:	outs   dx,BYTE PTR ds:[esi]
  4340f4:	imul   esp,DWORD PTR [ebx+0x6f],0x42496564
  4340fb:	dec    ebp
  4340fc:	xor    DWORD PTR [edx],esi
  4340fe:	xor    DWORD PTR ss:[eax],eax
  434101:	add    BYTE PTR [eax],al
  434103:	add    bh,bh
  434105:	(bad)  
  434106:	(bad)  
  434107:	call   DWORD PTR [eax+eax*1]
  43410a:	add    BYTE PTR [eax],al
  43410c:	dec    ecx
  43410d:	push   ebx
  43410e:	dec    edi
  43410f:	sub    eax,0x63696e55
  434114:	outs   dx,DWORD PTR ds:[esi]
  434115:	fs gs sub eax,0x2d4d4249
  43411c:	xor    DWORD PTR [edx],esi
  43411e:	cmp    BYTE PTR ss:[eax],al
  434121:	add    BYTE PTR [eax],al
  434123:	add    bh,bh
  434125:	(bad)  
  434126:	(bad)  
  434127:	call   DWORD PTR [eax]
  434129:	add    BYTE PTR [eax],al
  43412b:	add    BYTE PTR [ebx+0x73],ah
  43412e:	push   ebp
  43412f:	outs   dx,BYTE PTR ds:[esi]
  434130:	imul   esp,DWORD PTR [ebx+0x6f],0x42496564
  434137:	dec    ebp
  434138:	xor    DWORD PTR [edx],esi
  43413a:	cmp    BYTE PTR ss:[eax],al
  43413d:	add    BYTE PTR [eax],al
  43413f:	add    bh,bh
  434141:	(bad)  
  434142:	(bad)  
  434143:	call   DWORD PTR [eax+eax*1]
  434146:	add    BYTE PTR [eax],al
  434148:	dec    ecx
  434149:	push   ebx
  43414a:	dec    edi
  43414b:	sub    eax,0x63696e55
  434150:	outs   dx,DWORD PTR ds:[esi]
  434151:	fs gs sub eax,0x2d4d4249
  434158:	xor    DWORD PTR [edx],esi
  43415a:	aaa    
  43415b:	add    BYTE PTR ss:[eax],al
  43415e:	add    BYTE PTR [eax],al
  434160:	(bad)  
  434161:	(bad)  
  434162:	(bad)  
  434163:	call   DWORD PTR [eax]
  434165:	add    BYTE PTR [eax],al
  434167:	add    BYTE PTR [ebx+0x73],ah
  43416a:	push   ebp
  43416b:	outs   dx,BYTE PTR ds:[esi]
  43416c:	imul   esp,DWORD PTR [ebx+0x6f],0x42496564
  434173:	dec    ebp
  434174:	xor    DWORD PTR [edx],esi
  434176:	aaa    
  434177:	add    BYTE PTR ss:[eax],al
  43417a:	add    BYTE PTR [eax],al
  43417c:	(bad)  
  43417d:	(bad)  
  43417e:	(bad)  
  43417f:	call   DWORD PTR [eax+eax*1]
  434182:	add    BYTE PTR [eax],al
  434184:	dec    ecx
  434185:	push   ebx
  434186:	dec    edi
  434187:	sub    eax,0x63696e55
  43418c:	outs   dx,DWORD PTR ds:[esi]
  43418d:	fs gs sub eax,0x2d4d4249
  434194:	xor    DWORD PTR [edx],esi
  434196:	ss xor al,0x0
  434199:	add    BYTE PTR [eax],al
  43419b:	add    bh,bh
  43419d:	(bad)  
  43419e:	(bad)  
  43419f:	call   DWORD PTR [eax]
  4341a1:	add    BYTE PTR [eax],al
  4341a3:	add    BYTE PTR [ebx+0x73],ah
  4341a6:	push   ebp
  4341a7:	outs   dx,BYTE PTR ds:[esi]
  4341a8:	imul   esp,DWORD PTR [ebx+0x6f],0x42496564
  4341af:	dec    ebp
  4341b0:	xor    DWORD PTR [edx],esi
  4341b2:	ss xor al,0x0
  4341b5:	add    BYTE PTR [eax],al
  4341b7:	add    bh,bh
  4341b9:	(bad)  
  4341ba:	(bad)  
  4341bb:	call   DWORD PTR [eax+eax*1]
  4341be:	add    BYTE PTR [eax],al
  4341c0:	dec    ecx
  4341c1:	push   ebx
  4341c2:	dec    edi
  4341c3:	sub    eax,0x63696e55
  4341c8:	outs   dx,DWORD PTR ds:[esi]
  4341c9:	fs gs sub eax,0x2d4d4249
  4341d0:	xor    DWORD PTR [edx],esi
  4341d2:	ss xor eax,0x0
  4341d8:	(bad)  
  4341d9:	(bad)  
  4341da:	(bad)  
  4341db:	call   DWORD PTR [eax]
  4341dd:	add    BYTE PTR [eax],al
  4341df:	add    BYTE PTR [ebx+0x73],ah
  4341e2:	push   ebp
  4341e3:	outs   dx,BYTE PTR ds:[esi]
  4341e4:	imul   esp,DWORD PTR [ebx+0x6f],0x42496564
  4341eb:	dec    ebp
  4341ec:	xor    DWORD PTR [edx],esi
  4341ee:	ss xor eax,0x0
  4341f4:	(bad)  
  4341f5:	(bad)  
  4341f6:	(bad)  
  4341f7:	call   FWORD PTR [esi]
  4341f9:	add    BYTE PTR [eax],al
  4341fb:	add    BYTE PTR [ecx+0x53],cl
  4341fe:	dec    edi
  4341ff:	sub    eax,0x39353838
  434204:	sub    eax,0x69572d31
  434209:	outs   dx,BYTE PTR ds:[esi]
  43420a:	outs   dx,DWORD PTR fs:[esi]
  43420c:	ja     0x434281
  43420e:	sub    eax,0x2d302e33
  434213:	dec    esp
  434214:	popa   
  434215:	je     0x434280
  434217:	outs   dx,BYTE PTR ds:[esi]
  434218:	sub    eax,0xff000031
  43421d:	(bad)  
  43421e:	(bad)  
  43421f:	call   DWORD PTR [ecx]
  434221:	add    BYTE PTR [eax],al
  434223:	add    BYTE PTR [ebx+0x73],ah
  434226:	push   edi
  434227:	imul   ebp,DWORD PTR [esi+0x64],0x3373776f
  43422e:	xor    BYTE PTR [ecx+eiz*2+0x74],cl
  434232:	imul   ebp,DWORD PTR [esi+0x31],0xff000000
  434239:	(bad)  
  43423a:	(bad)  
  43423b:	call   FWORD PTR [esi]
  43423d:	add    BYTE PTR [eax],al
  43423f:	add    BYTE PTR [ecx+0x53],cl
  434242:	dec    edi
  434243:	sub    eax,0x39353838
  434248:	sub    eax,0x69572d31
  43424d:	outs   dx,BYTE PTR ds:[esi]
  43424e:	outs   dx,DWORD PTR fs:[esi]
  434250:	ja     0x4342c5
  434252:	sub    eax,0x2d312e33
  434257:	dec    esp
  434258:	popa   
  434259:	je     0x4342c4
  43425b:	outs   dx,BYTE PTR ds:[esi]
  43425c:	sub    eax,0xff000031
  434261:	(bad)  
  434262:	(bad)  
  434263:	call   DWORD PTR [ecx]
  434265:	add    BYTE PTR [eax],al
  434267:	add    BYTE PTR [ebx+0x73],ah
  43426a:	push   edi
  43426b:	imul   ebp,DWORD PTR [esi+0x64],0x3373776f
  434272:	xor    DWORD PTR [ecx+eiz*2+0x74],ecx
  434276:	imul   ebp,DWORD PTR [esi+0x31],0xff000000
  43427d:	(bad)  
  43427e:	(bad)  
  43427f:	call   FWORD PTR [edx]
  434281:	add    BYTE PTR [eax],al
  434283:	add    BYTE PTR [ecx+0x53],cl
  434286:	dec    edi
  434287:	sub    eax,0x39353838
  43428c:	sub    eax,0x69572d32
  434291:	outs   dx,BYTE PTR ds:[esi]
  434292:	outs   dx,DWORD PTR fs:[esi]
  434294:	ja     0x434309
  434296:	sub    eax,0x6974614c
  43429b:	outs   dx,BYTE PTR ds:[esi]
  43429c:	sub    eax,0xff000032
  4342a1:	(bad)  
  4342a2:	(bad)  
  4342a3:	call   DWORD PTR [ecx]
  4342a5:	add    BYTE PTR [eax],al
  4342a7:	add    BYTE PTR [ebx+0x73],ah
  4342aa:	push   edi
  4342ab:	imul   ebp,DWORD PTR [esi+0x64],0x3373776f
  4342b2:	xor    DWORD PTR [ecx+eiz*2+0x74],ecx
  4342b6:	imul   ebp,DWORD PTR [esi+0x32],0xff000000
  4342bd:	(bad)  
  4342be:	(bad)  
  4342bf:	call   FWORD PTR [edx]
  4342c1:	add    BYTE PTR [eax],al
  4342c3:	add    BYTE PTR [ecx+0x53],cl
  4342c6:	dec    edi
  4342c7:	sub    eax,0x39353838
  4342cc:	sub    eax,0x69572d39
  4342d1:	outs   dx,BYTE PTR ds:[esi]
  4342d2:	outs   dx,DWORD PTR fs:[esi]
  4342d4:	ja     0x434349
  4342d6:	sub    eax,0x6974614c
  4342db:	outs   dx,BYTE PTR ds:[esi]
  4342dc:	sub    eax,0xff000035
  4342e1:	(bad)  
  4342e2:	(bad)  
  4342e3:	call   DWORD PTR [ecx]
  4342e5:	add    BYTE PTR [eax],al
  4342e7:	add    BYTE PTR [ebx+0x73],ah
  4342ea:	push   edi
  4342eb:	imul   ebp,DWORD PTR [esi+0x64],0x3373776f
  4342f2:	xor    DWORD PTR [ecx+eiz*2+0x74],ecx
  4342f6:	imul   ebp,DWORD PTR [esi+0x35],0xff000000
  4342fd:	(bad)  
  4342fe:	(bad)  
  4342ff:	call   DWORD PTR [edi]
  434301:	add    BYTE PTR [eax],al
  434303:	add    BYTE PTR [ecx+0x64],al
  434306:	outs   dx,DWORD PTR ds:[esi]
  434307:	bound  esp,QWORD PTR [ebp+0x2d]
  43430a:	push   ebx
  43430b:	je     0x43436e
  43430d:	outs   dx,BYTE PTR ds:[esi]
  43430e:	fs popa 
  434310:	jb     0x434376
  434312:	sub    eax,0x6f636e45
  434317:	imul   ebp,DWORD PTR fs:[esi+0x67],0xffffff00
  43431f:	call   DWORD PTR [edi]
  434321:	add    BYTE PTR [eax],al
  434323:	add    BYTE PTR [ebx+0x73],ah
  434326:	inc    ecx
  434327:	outs   dx,DWORD PTR fs:[esi]
  434329:	bound  esp,QWORD PTR [ebp+0x53]
  43432c:	je     0x43438f
  43432e:	outs   dx,BYTE PTR ds:[esi]
  43432f:	fs popa 
  434331:	jb     0x434397
  434333:	inc    ebp
  434334:	outs   dx,BYTE PTR ds:[esi]
  434335:	arpl   WORD PTR [edi+0x64],bp
  434338:	imul   ebp,DWORD PTR [esi+0x67],0xffffff00
  43433f:	dec    DWORD PTR [edx]
  434341:	add    BYTE PTR [eax],al
  434343:	add    BYTE PTR [esi+0x65],dl
  434346:	outs   dx,BYTE PTR ds:[esi]
  434347:	je     0x4343be
  434349:	jb     0x4343ac
  43434b:	sub    eax,0x5355
  434350:	(bad)  
  434351:	(bad)  
  434352:	(bad)  
  434353:	dec    DWORD PTR [ebx]
  434355:	add    BYTE PTR [eax],al
  434357:	add    BYTE PTR [ebx+0x73],ah
  43435a:	push   esi
  43435b:	outs   dx,BYTE PTR gs:[esi]
  43435d:	je     0x4343d4
  43435f:	jb     0x4343c2
  434361:	push   ebp
  434362:	push   ebx
  434363:	add    bh,bh
  434365:	(bad)  
  434366:	(bad)  
  434367:	call   DWORD PTR ds:0x56000000
  43436d:	outs   dx,BYTE PTR gs:[esi]
  43436f:	je     0x4343e6
  434371:	jb     0x4343d4
  434373:	sub    eax,0x65746e49
  434378:	jb     0x4343e8
  43437a:	popa   
  43437b:	je     0x4343e6
  43437d:	outs   dx,DWORD PTR ds:[esi]
  43437e:	outs   dx,BYTE PTR ds:[esi]
  43437f:	popa   
  434380:	ins    BYTE PTR es:[edi],dx
  434381:	add    BYTE PTR [eax],al
  434383:	add    bh,bh
  434385:	(bad)  
  434386:	(bad)  
  434387:	call   DWORD PTR [esi]
  434389:	add    BYTE PTR [eax],al
  43438b:	add    BYTE PTR [ebx+0x73],ah
  43438e:	push   esi
  43438f:	outs   dx,BYTE PTR gs:[esi]
  434391:	je     0x434408
  434393:	jb     0x4343f6
  434395:	dec    ecx
  434396:	outs   dx,BYTE PTR ds:[esi]
  434397:	je     0x4343fe
  434399:	jb     0x434409
  43439b:	popa   
  43439c:	je     0x434407
  43439e:	outs   dx,DWORD PTR ds:[esi]
  43439f:	outs   dx,BYTE PTR ds:[esi]
  4343a0:	popa   
  4343a1:	ins    BYTE PTR es:[edi],dx
  4343a2:	add    BYTE PTR [eax],al
  4343a4:	(bad)  
  4343a5:	(bad)  
  4343a6:	(bad)  
  4343a7:	call   DWORD PTR [eax+eax*1]
  4343aa:	add    BYTE PTR [eax],al
  4343ac:	push   eax
  4343ad:	inc    ebx
  4343ae:	cmp    BYTE PTR ds:0x696e6144,ch
  4343b4:	jae    0x43441e
  4343b6:	sub    eax,0x77726f4e
  4343bb:	imul   esp,DWORD PTR gs:[bx+di+0x6e],0x0
  4343c4:	(bad)  
  4343c5:	(bad)  
  4343c6:	(bad)  
  4343c7:	call   DWORD PTR [eax+eax*1]
  4343ca:	add    BYTE PTR [eax],al
  4343cc:	arpl   WORD PTR [ebx+0x50],si
  4343cf:	inc    ebx
  4343d0:	cmp    BYTE PTR [ecx+eiz*2+0x6e],al
  4343d4:	imul   esi,DWORD PTR [ebx+0x68],0x77726f4e
  4343db:	imul   esp,DWORD PTR gs:[bx+di+0x6e],0x0
  4343e4:	(bad)  
  4343e5:	(bad)  
  4343e6:	(bad)  
  4343e7:	dec    DWORD PTR [ebx]
  4343e9:	add    BYTE PTR [eax],al
  4343eb:	add    BYTE PTR [eax+0x43],dl
  4343ee:	cmp    BYTE PTR ds:0x6b727554,ch
  4343f4:	imul   esi,DWORD PTR [ebx+0x68],0xffffff00
  4343fb:	dec    DWORD PTR [eax+eax*1]
  4343fe:	add    BYTE PTR [eax],al
  434400:	arpl   WORD PTR [ebx+0x50],si
  434403:	inc    ebx
  434404:	cmp    BYTE PTR [ebp+esi*2+0x72],dl
  434408:	imul   ebp,DWORD PTR [ecx+0x73],0x68
  43440c:	add    BYTE PTR [eax],al
  43440e:	add    BYTE PTR [eax],al
  434410:	(bad)  
  434411:	(bad)  
  434412:	(bad)  
  434413:	dec    DWORD PTR [ebx]
  434415:	add    BYTE PTR [eax],al
  434417:	add    BYTE PTR [ecx+0x42],cl
  43441a:	dec    ebp
  43441b:	sub    eax,0x626d7953
  434420:	outs   dx,DWORD PTR ds:[esi]
  434421:	ins    BYTE PTR es:[edi],dx
  434422:	jae    0x434424
  434424:	(bad)  
  434425:	(bad)  
  434426:	(bad)  
  434427:	dec    DWORD PTR [eax+eax*1]
  43442a:	add    BYTE PTR [eax],al
  43442c:	arpl   WORD PTR [ebx+0x49],si
  43442f:	inc    edx
  434430:	dec    ebp
  434431:	push   ebx
  434432:	jns    0x4344a1
  434434:	bound  ebp,QWORD PTR [edi+0x6c]
  434437:	jae    0x434439
  434439:	add    BYTE PTR [eax],al
  43443b:	add    bh,bh
  43443d:	(bad)  
  43443e:	(bad)  
  43443f:	dec    DWORD PTR [eax]
  434441:	add    BYTE PTR [eax],al
  434443:	add    BYTE PTR [ecx+0x42],cl
  434446:	dec    ebp
  434447:	sub    eax,0x69616854
  43444c:	add    BYTE PTR [eax],al
  43444e:	add    BYTE PTR [eax],al
  434450:	(bad)  
  434451:	(bad)  
  434452:	(bad)  
  434453:	dec    DWORD PTR [ecx]
  434455:	add    BYTE PTR [eax],al
  434457:	add    BYTE PTR [ebx+0x73],ah
  43445a:	dec    ecx
  43445b:	inc    edx
  43445c:	dec    ebp
  43445d:	push   esp
  43445e:	push   0x6961
  434463:	add    bh,bh
  434465:	(bad)  
  434466:	(bad)  
  434467:	dec    DWORD PTR [eax]
  434469:	add    BYTE PTR [eax],al
  43446b:	add    BYTE PTR [eax+0x50],cl
  43446e:	sub    eax,0x6167654c
  434473:	ins    BYTE PTR es:[edi],dx
  434474:	add    BYTE PTR [eax],al
  434476:	add    BYTE PTR [eax],al
  434478:	(bad)  
  434479:	(bad)  
  43447a:	(bad)  
  43447b:	dec    DWORD PTR [ecx]
  43447d:	add    BYTE PTR [eax],al
  43447f:	add    BYTE PTR [ebx+0x73],ah
  434482:	dec    eax
  434483:	push   eax
  434484:	dec    esp
  434485:	gs addr16 popa 
  434488:	ins    BYTE PTR es:[edi],dx
  434489:	add    BYTE PTR [eax],al
  43448b:	add    bh,bh
  43448d:	(bad)  
  43448e:	(bad)  
  43448f:	dec    DWORD PTR [edx]
  434491:	add    BYTE PTR [eax],al
  434493:	add    BYTE PTR [eax+0x50],cl
  434496:	sub    eax,0x662d6950
  43449b:	outs   dx,DWORD PTR ds:[esi]
  43449c:	outs   dx,BYTE PTR ds:[esi]
  43449d:	je     0x43449f
  43449f:	add    bh,bh
  4344a1:	(bad)  
  4344a2:	(bad)  
  4344a3:	dec    DWORD PTR [edx]
  4344a5:	add    BYTE PTR [eax],al
  4344a7:	add    BYTE PTR [ebx+0x73],ah
  4344aa:	dec    eax
  4344ab:	push   eax
  4344ac:	push   eax
  4344ad:	imul   eax,DWORD PTR [esi+0x6f],0x746e
  4344b4:	(bad)  
  4344b5:	(bad)  
  4344b6:	(bad)  
  4344b7:	dec    DWORD PTR [eax]
  4344b9:	add    BYTE PTR [eax],al
  4344bb:	add    BYTE PTR [eax+0x50],cl
  4344be:	sub    eax,0x6874614d
  4344c3:	cmp    BYTE PTR [eax],al
  4344c5:	add    BYTE PTR [eax],al
  4344c7:	add    bh,bh
  4344c9:	(bad)  
  4344ca:	(bad)  
  4344cb:	dec    DWORD PTR [ecx]
  4344cd:	add    BYTE PTR [eax],al
  4344cf:	add    BYTE PTR [ebx+0x73],ah
  4344d2:	dec    eax
  4344d3:	push   eax
  4344d4:	dec    ebp
  4344d5:	popa   
  4344d6:	je     0x434540
  4344d8:	cmp    BYTE PTR [eax],al
  4344da:	add    BYTE PTR [eax],al
  4344dc:	(bad)  
  4344dd:	(bad)  
  4344de:	(bad)  
  4344df:	call   DWORD PTR ds:0x41000000
  4344e5:	outs   dx,DWORD PTR fs:[esi]
  4344e7:	bound  esp,QWORD PTR [ebp+0x2d]
  4344ea:	push   ebx
  4344eb:	jns    0x43455a
  4344ed:	bound  ebp,QWORD PTR [edi+0x6c]
  4344f0:	sub    eax,0x6f636e45
  4344f5:	imul   ebp,DWORD PTR fs:[esi+0x67],0xff000000
  4344fd:	(bad)  
  4344fe:	(bad)  
  4344ff:	dec    DWORD PTR [edx]
  434501:	add    BYTE PTR [eax],al
  434503:	add    BYTE PTR [ebx+0x73],ah
  434506:	dec    eax
  434507:	push   eax
  434508:	push   eax
  434509:	push   ebx
  43450a:	dec    ebp
  43450b:	popa   
  43450c:	je     0x434576
  43450e:	add    BYTE PTR [eax],al
  434510:	(bad)  
  434511:	(bad)  
  434512:	(bad)  
  434513:	dec    DWORD PTR [edx]
  434515:	add    BYTE PTR [eax],al
  434517:	add    BYTE PTR [eax+0x50],cl
  43451a:	sub    eax,0x6b736544
  43451f:	push   esp
  434520:	outs   dx,DWORD PTR ds:[esi]
  434521:	jo     0x434523
  434523:	add    bh,bh
  434525:	(bad)  
  434526:	(bad)  
  434527:	dec    DWORD PTR [ebx]
  434529:	add    BYTE PTR [eax],al
  43452b:	add    BYTE PTR [ebx+0x73],ah
  43452e:	dec    eax
  43452f:	push   eax
  434530:	inc    esp
  434531:	gs jae 0x43459f
  434534:	je     0x4345a5
  434536:	jo     0x434538
  434538:	(bad)  
  434539:	(bad)  
  43453a:	(bad)  
  43453b:	dec    DWORD PTR [eax+eax*1]
  43453e:	add    BYTE PTR [eax],al
  434540:	push   esi
  434541:	outs   dx,BYTE PTR gs:[esi]
  434543:	je     0x4345ba
  434545:	jb     0x4345a8
  434547:	sub    eax,0x6874614d
  43454c:	add    BYTE PTR [eax],al
  43454e:	add    BYTE PTR [eax],al
  434550:	(bad)  
  434551:	(bad)  
  434552:	(bad)  
  434553:	dec    DWORD PTR ds:0x63000000
  434559:	jae    0x4345b1
  43455b:	outs   dx,BYTE PTR gs:[esi]
  43455d:	je     0x4345d4
  43455f:	jb     0x4345c2
  434561:	dec    ebp
  434562:	popa   
  434563:	je     0x4345cd
  434565:	add    BYTE PTR [eax],al
  434567:	add    bh,bh
  434569:	(bad)  
  43456a:	(bad)  
  43456b:	call   DWORD PTR [eax+eax*1]
  43456e:	add    BYTE PTR [eax],al
  434570:	dec    ebp
  434571:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  434578:	je     0x4345a7
  43457a:	push   eax
  43457b:	jne    0x4345df
  43457d:	ins    BYTE PTR es:[edi],dx
  43457e:	imul   esi,DWORD PTR [ebx+0x68],0x676e69
  434585:	add    BYTE PTR [eax],al
  434587:	add    bh,bh
  434589:	(bad)  
  43458a:	(bad)  
  43458b:	call   DWORD PTR ds:0x63000000
  434591:	jae    0x4345e0
  434593:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  43459a:	je     0x4345ec
  43459c:	jne    0x434600
  43459e:	ins    BYTE PTR es:[edi],dx
  43459f:	imul   esi,DWORD PTR [ebx+0x68],0x676e69
  4345a6:	add    BYTE PTR [eax],al
  4345a8:	(bad)  
  4345a9:	(bad)  
  4345aa:	(bad)  
  4345ab:	dec    DWORD PTR [ebx]
  4345ad:	add    BYTE PTR [eax],al
  4345af:	add    BYTE PTR [edi+0x69],dl
  4345b2:	outs   dx,BYTE PTR ds:[esi]
  4345b3:	outs   dx,DWORD PTR fs:[esi]
  4345b5:	ja     0x43462a
  4345b7:	sub    eax,0x4a3133
  4345bc:	(bad)  
  4345bd:	(bad)  
  4345be:	(bad)  
  4345bf:	dec    DWORD PTR [eax+eax*1]
  4345c2:	add    BYTE PTR [eax],al
  4345c4:	arpl   WORD PTR [ebx+0x57],si
  4345c7:	imul   ebp,DWORD PTR [esi+0x64],0x3373776f
  4345ce:	xor    DWORD PTR [edx+0x0],ecx
  4345d1:	add    BYTE PTR [eax],al
  4345d3:	add    bh,bh
  4345d5:	(bad)  
  4345d6:	(bad)  
  4345d7:	dec    DWORD PTR [eax]
  4345d9:	add    BYTE PTR [eax],al
  4345db:	add    BYTE PTR [ebx+0x73],ah
  4345de:	inc    edi
  4345df:	inc    edx
  4345e0:	xor    dh,BYTE PTR [ebx]
  4345e2:	xor    DWORD PTR [edx],esi
  4345e4:	add    BYTE PTR [eax],al
  4345e6:	add    BYTE PTR [eax],al
  4345e8:	(bad)  
  4345e9:	(bad)  
  4345ea:	(bad)  
  4345eb:	inc    DWORD PTR [esi]
  4345ed:	add    BYTE PTR [eax],al
  4345ef:	add    BYTE PTR [edi+0x42],al
  4345f2:	xor    dh,BYTE PTR [ebx]
  4345f4:	xor    DWORD PTR [edx],esi
  4345f6:	add    BYTE PTR [eax],al
  4345f8:	(bad)  
  4345f9:	(bad)  
  4345fa:	(bad)  
  4345fb:	inc    DWORD PTR [esi]
  4345fd:	add    BYTE PTR [eax],al
  4345ff:	add    BYTE PTR [ebx+0x73],ah
  434602:	inc    edx
  434603:	imul   esp,DWORD PTR [edi+0x35],0xffff0000
  43460a:	(bad)  
  43460b:	inc    DWORD PTR [eax+eax*1]
  43460e:	add    BYTE PTR [eax],al
  434610:	inc    edx
  434611:	imul   esp,DWORD PTR [edi+0x35],0x0
  434618:	(bad)  
  434619:	(bad)  
  43461a:	(bad)  
  43461b:	dec    DWORD PTR [eax+eax*1]
  43461e:	add    BYTE PTR [eax],al
  434620:	ja     0x43468b
  434622:	outs   dx,BYTE PTR ds:[esi]
  434623:	outs   dx,DWORD PTR fs:[esi]
  434625:	ja     0x43469a
  434627:	sub    eax,0x30353231
  43462c:	add    BYTE PTR [eax],al
  43462e:	add    BYTE PTR [eax],al
  434630:	(bad)  
  434631:	(bad)  
  434632:	(bad)  
  434633:	dec    DWORD PTR [eax+eax*1]
  434636:	add    BYTE PTR [eax],al
  434638:	ja     0x4346a3
  43463a:	outs   dx,BYTE PTR ds:[esi]
  43463b:	outs   dx,DWORD PTR fs:[esi]
  43463d:	ja     0x4346b2
  43463f:	sub    eax,0x31353231
  434644:	add    BYTE PTR [eax],al
  434646:	add    BYTE PTR [eax],al
  434648:	(bad)  
  434649:	(bad)  
  43464a:	(bad)  
  43464b:	dec    DWORD PTR [eax+eax*1]
  43464e:	add    BYTE PTR [eax],al
  434650:	ja     0x4346bb
  434652:	outs   dx,BYTE PTR ds:[esi]
  434653:	outs   dx,DWORD PTR fs:[esi]
  434655:	ja     0x4346ca
  434657:	sub    eax,0x32353231
  43465c:	add    BYTE PTR [eax],al
  43465e:	add    BYTE PTR [eax],al
  434660:	(bad)  
  434661:	(bad)  
  434662:	(bad)  
  434663:	dec    DWORD PTR [eax+eax*1]
  434666:	add    BYTE PTR [eax],al
  434668:	ja     0x4346d3
  43466a:	outs   dx,BYTE PTR ds:[esi]
  43466b:	outs   dx,DWORD PTR fs:[esi]
  43466d:	ja     0x4346e2
  43466f:	sub    eax,0x33353231
  434674:	add    BYTE PTR [eax],al
  434676:	add    BYTE PTR [eax],al
  434678:	(bad)  
  434679:	(bad)  
  43467a:	(bad)  
  43467b:	dec    DWORD PTR [eax+eax*1]
  43467e:	add    BYTE PTR [eax],al
  434680:	ja     0x4346eb
  434682:	outs   dx,BYTE PTR ds:[esi]
  434683:	outs   dx,DWORD PTR fs:[esi]
  434685:	ja     0x4346fa
  434687:	sub    eax,0x34353231
  43468c:	add    BYTE PTR [eax],al
  43468e:	add    BYTE PTR [eax],al
  434690:	(bad)  
  434691:	(bad)  
  434692:	(bad)  
  434693:	dec    DWORD PTR [eax+eax*1]
  434696:	add    BYTE PTR [eax],al
  434698:	ja     0x434703
  43469a:	outs   dx,BYTE PTR ds:[esi]
  43469b:	outs   dx,DWORD PTR fs:[esi]
  43469d:	ja     0x434712
  43469f:	sub    eax,0x35353231
  4346a4:	add    BYTE PTR [eax],al
  4346a6:	add    BYTE PTR [eax],al
  4346a8:	(bad)  
  4346a9:	(bad)  
  4346aa:	(bad)  
  4346ab:	dec    DWORD PTR [eax+eax*1]
  4346ae:	add    BYTE PTR [eax],al
  4346b0:	ja     0x43471b
  4346b2:	outs   dx,BYTE PTR ds:[esi]
  4346b3:	outs   dx,DWORD PTR fs:[esi]
  4346b5:	ja     0x43472a
  4346b7:	sub    eax,0x36353231
  4346bc:	add    BYTE PTR [eax],al
  4346be:	add    BYTE PTR [eax],al
  4346c0:	(bad)  
  4346c1:	(bad)  
  4346c2:	(bad)  
  4346c3:	dec    DWORD PTR [eax+eax*1]
  4346c6:	add    BYTE PTR [eax],al
  4346c8:	ja     0x434733
  4346ca:	outs   dx,BYTE PTR ds:[esi]
  4346cb:	outs   dx,DWORD PTR fs:[esi]
  4346cd:	ja     0x434742
  4346cf:	sub    eax,0x37353231
  4346d4:	add    BYTE PTR [eax],al
  4346d6:	add    BYTE PTR [eax],al
  4346d8:	(bad)  
  4346d9:	(bad)  
  4346da:	(bad)  
  4346db:	dec    DWORD PTR [eax+eax*1]
  4346de:	add    BYTE PTR [eax],al
  4346e0:	ja     0x43474b
  4346e2:	outs   dx,BYTE PTR ds:[esi]
  4346e3:	outs   dx,DWORD PTR fs:[esi]
  4346e5:	ja     0x43475a
  4346e7:	sub    eax,0x38353231
  4346ec:	add    BYTE PTR [eax],al
  4346ee:	add    BYTE PTR [eax],al
  4346f0:	(bad)  
  4346f1:	(bad)  
  4346f2:	(bad)  
  4346f3:	inc    DWORD PTR [edi]
  4346f5:	add    BYTE PTR [eax],al
  4346f7:	add    BYTE PTR [ecx+ecx*2+0x53],dl
  4346fb:	sub    eax,0x303236
  434700:	(bad)  
  434701:	(bad)  
  434702:	(bad)  
  434703:	dec    DWORD PTR [edx]
  434705:	add    BYTE PTR [eax],al
  434707:	add    BYTE PTR [eax+0x5a],cl
  43470a:	sub    eax,0x322d4247
  43470f:	xor    esi,DWORD PTR [ecx]
  434711:	xor    al,BYTE PTR [eax]
  434713:	add    BYTE PTR [ebp-0x75],dl
  434716:	in     al,dx
  434717:	xor    eax,eax
  434719:	push   ebp
  43471a:	push   0x434765
  43471f:	push   DWORD PTR fs:[eax]
  434722:	mov    DWORD PTR fs:[eax],esp
  434725:	inc    DWORD PTR ds:0x472bcc
  43472b:	jne    0x434757
  43472d:	mov    eax,0x461b84
  434732:	mov    ecx,0x317
  434737:	mov    edx,DWORD PTR ds:0x401084
  43473d:	call   0x405b50
  434742:	mov    eax,0x472bd0
  434747:	mov    ecx,0x317
  43474c:	mov    edx,DWORD PTR ds:0x401084
  434752:	call   0x405b50
  434757:	xor    eax,eax
  434759:	pop    edx
  43475a:	pop    ecx
  43475b:	pop    ecx
  43475c:	mov    DWORD PTR fs:[eax],edx
  43475f:	push   0x43476c
  434764:	ret    
  434765:	jmp    0x40481c
  43476a:	jmp    0x434764
  43476c:	pop    ebp
  43476d:	ret    
  43476e:	mov    eax,eax
  434770:	(bad)  
  434771:	(bad)  
  434772:	(bad)  
  434773:	inc    DWORD PTR [ecx]
  434775:	add    BYTE PTR [eax],al
  434777:	add    BYTE PTR [eax],dh
  434779:	add    BYTE PTR [eax],al
  43477b:	add    bh,bh
  43477d:	(bad)  
  43477e:	(bad)  
  43477f:	inc    DWORD PTR [ecx]
  434781:	add    BYTE PTR [eax],al
  434783:	add    BYTE PTR [ecx],dh
  434785:	add    BYTE PTR [eax],al
  434787:	add    BYTE PTR [ebp-0x75],dl
  43478a:	in     al,dx
  43478b:	xor    eax,eax
  43478d:	push   ebp
  43478e:	push   0x4347c4
  434793:	push   DWORD PTR fs:[eax]
  434796:	mov    DWORD PTR fs:[eax],esp
  434799:	inc    DWORD PTR ds:0x47382c
  43479f:	jne    0x4347b6
  4347a1:	mov    eax,0x4627e0
  4347a6:	mov    ecx,0x2
  4347ab:	mov    edx,DWORD PTR ds:0x401084
  4347b1:	call   0x405b50
  4347b6:	xor    eax,eax
  4347b8:	pop    edx
  4347b9:	pop    ecx
  4347ba:	pop    ecx
  4347bb:	mov    DWORD PTR fs:[eax],edx
  4347be:	push   0x4347cb
  4347c3:	ret    
  4347c4:	jmp    0x40481c
  4347c9:	jmp    0x4347c3
  4347cb:	pop    ebp
  4347cc:	ret    
  4347cd:	lea    eax,[eax+0x0]
  4347d0:	sbb    al,0x48
  4347d2:	inc    ebx
	...
  4347ef:	add    BYTE PTR [eax+ecx*2],bl
  4347f2:	inc    ebx
  4347f3:	add    BYTE PTR [eax+eax*1],cl
  4347f6:	add    BYTE PTR [eax],al
  4347f8:	hlt    
  4347f9:	jbe    0x43483b
  4347fb:	add    al,dl
  4347fd:	inc    edx
  4347fe:	inc    eax
  4347ff:	add    ah,bl
  434801:	inc    edx
  434802:	inc    eax
  434803:	add    al,ah
  434805:	inc    edx
  434806:	inc    eax
  434807:	add    ah,ah
  434809:	inc    edx
  43480a:	inc    eax
  43480b:	add    al,bl
  43480d:	inc    edx
  43480e:	inc    eax
  43480f:	add    BYTE PTR [eax],bh
  434811:	inc    eax
  434812:	inc    eax
  434813:	add    BYTE PTR [eax+eax*2+0x40],dl
  434817:	add    BYTE PTR [eax+0x12004040],dl
  43481d:	inc    ebp
  43481e:	push   edx
  43481f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x78457972
  434828:	arpl   WORD PTR [ebp+0x70],sp
  43482b:	je     0x434896
  43482d:	outs   dx,DWORD PTR ds:[esi]
  43482e:	outs   dx,BYTE PTR ds:[esi]
  43482f:	nop
  434830:	jl     0x43487a
  434832:	inc    ebx
	...
  43483b:	add    BYTE PTR [eax+ecx*2+0x43],bh
	...
  43484f:	add    BYTE PTR [esi+0x1c004348],cl
  434855:	add    BYTE PTR [eax],al
  434857:	add    BYTE PTR [eax-0x2fffbff0],dl
  43485d:	inc    edx
  43485e:	inc    eax
  43485f:	add    ah,bl
  434861:	inc    edx
  434862:	inc    eax
  434863:	add    al,ah
  434865:	inc    edx
  434866:	inc    eax
  434867:	add    ah,ah
  434869:	inc    edx
  43486a:	inc    eax
  43486b:	add    al,bl
  43486d:	inc    edx
  43486e:	inc    eax
  43486f:	add    BYTE PTR [eax],bh
  434871:	inc    eax
  434872:	inc    eax
  434873:	add    BYTE PTR [eax+eax*2+0x40],dl
  434877:	add    BYTE PTR [ecx+ecx*2+0x43],dh
  43487b:	add    BYTE PTR [esi],cl
  43487d:	add    BYTE PTR [eax],al
  43487f:	add    BYTE PTR [eax],al
  434881:	add    BYTE PTR [ecx],al
  434883:	add    BYTE PTR [eax],al
  434885:	add    BYTE PTR [eax+edx*1+0x100040],al
  43488c:	add    BYTE PTR [eax],al
  43488e:	or     DWORD PTR [edx+edx*2+0x65],edx
  434892:	imul   esi,DWORD PTR [bp+di+0x74],0x83537972
  43489a:	(bad)  
  43489b:	clc    
  43489c:	mov    ebx,eax
  43489e:	mov    DWORD PTR [esp],ebx
  4348a1:	mov    BYTE PTR [esp+0x4],0xb
  4348a6:	push   esp
  4348a7:	push   0x0
  4348a9:	mov    ecx,DWORD PTR ds:0x46dbd8
  4348af:	mov    dl,0x1
  4348b1:	mov    eax,ds:0x4347d0
  4348b6:	call   0x40c9ac
  4348bb:	call   0x4048fc
  4348c0:	pop    ecx
  4348c1:	pop    edx
  4348c2:	pop    ebx
  4348c3:	ret    
  4348c4:	push   ebx
  4348c5:	mov    ebx,eax
  4348c7:	test   ebx,ebx
  4348c9:	je     0x4348d4
  4348cb:	cmp    BYTE PTR [ebx],0x5c
  4348ce:	jne    0x4348d4
  4348d0:	xor    eax,eax
  4348d2:	pop    ebx
  4348d3:	ret    
  4348d4:	mov    al,0x1
  4348d6:	pop    ebx
  4348d7:	ret    
  4348d8:	dec    al
  4348da:	je     0x4348ea
  4348dc:	dec    al
  4348de:	je     0x4348f0
  4348e0:	dec    al
  4348e2:	je     0x4348f6
  4348e4:	dec    al
  4348e6:	je     0x4348fc
  4348e8:	jmp    0x434902
  4348ea:	mov    eax,0x1
  4348ef:	ret    
  4348f0:	mov    eax,0x2
  4348f5:	ret    
  4348f6:	mov    eax,0x4
  4348fb:	ret    
  4348fc:	mov    eax,0x3
  434901:	ret    
  434902:	xor    eax,eax
  434904:	ret    
  434905:	lea    eax,[eax+0x0]
  434908:	cmp    eax,0x1
  43490b:	jne    0x434910
  43490d:	mov    al,0x1
  43490f:	ret    
  434910:	cmp    eax,0x2
  434913:	jne    0x434919
  434915:	mov    al,0x2
  434917:	jmp    0x43492d
  434919:	cmp    eax,0x4
  43491c:	jne    0x434922
  43491e:	mov    al,0x3
  434920:	jmp    0x43492d
  434922:	cmp    eax,0x3
  434925:	jne    0x43492b
  434927:	mov    al,0x4
  434929:	jmp    0x43492d
  43492b:	xor    eax,eax
  43492d:	ret    
  43492e:	mov    eax,eax
  434930:	push   ebx
  434931:	push   esi
  434932:	test   dl,dl
  434934:	je     0x43493e
  434936:	add    esp,0xfffffff0
  434939:	call   0x4043ac
  43493e:	mov    ebx,edx
  434940:	mov    esi,eax
  434942:	mov    edx,0x80000001
  434947:	mov    eax,esi
  434949:	call   0x4349d0
  43494e:	mov    DWORD PTR [esi+0x18],0xf003f
  434955:	mov    BYTE PTR [esi+0xc],0x1
  434959:	mov    eax,esi
  43495b:	test   bl,bl
  43495d:	je     0x43496e
  43495f:	call   0x404404
  434964:	pop    DWORD PTR fs:0x0
  43496b:	add    esp,0xc
  43496e:	mov    eax,esi
  434970:	pop    esi
  434971:	pop    ebx
  434972:	ret    
  434973:	nop
  434974:	push   ebx
  434975:	push   esi
  434976:	call   0x404454
  43497b:	mov    ebx,edx
  43497d:	mov    esi,eax
  43497f:	mov    eax,esi
  434981:	call   0x4349a0
  434986:	mov    edx,ebx
  434988:	and    dl,0xfc
  43498b:	mov    eax,esi
  43498d:	call   0x404090
  434992:	test   bl,bl
  434994:	jle    0x43499d
  434996:	mov    eax,esi
  434998:	call   0x4043fc
  43499d:	pop    esi
  43499e:	pop    ebx
  43499f:	ret    
  4349a0:	push   ebx
  4349a1:	mov    ebx,eax
  4349a3:	mov    eax,DWORD PTR [ebx+0x4]
  4349a6:	test   eax,eax
  4349a8:	je     0x4349cc
  4349aa:	cmp    BYTE PTR [ebx+0xc],0x0
  4349ae:	jne    0x4349b6
  4349b0:	push   eax
  4349b1:	call   0x407120
  4349b6:	mov    eax,DWORD PTR [ebx+0x4]
  4349b9:	push   eax
  4349ba:	call   0x407110
  4349bf:	xor    eax,eax
  4349c1:	mov    DWORD PTR [ebx+0x4],eax
  4349c4:	lea    eax,[ebx+0x10]
  4349c7:	call   0x404f88
  4349cc:	pop    ebx
  4349cd:	ret    
  4349ce:	mov    eax,eax
  4349d0:	push   ebx
  4349d1:	push   esi
  4349d2:	mov    esi,edx
  4349d4:	mov    ebx,eax
  4349d6:	mov    eax,DWORD PTR [ebx+0x8]
  4349d9:	cmp    esi,eax
  4349db:	je     0x4349f7
  4349dd:	cmp    BYTE PTR [ebx+0x14],0x0
  4349e1:	je     0x4349ed
  4349e3:	push   eax
  4349e4:	call   0x407110
  4349e9:	mov    BYTE PTR [ebx+0x14],0x0
  4349ed:	mov    DWORD PTR [ebx+0x8],esi
  4349f0:	mov    eax,ebx
  4349f2:	call   0x4349a0
  4349f7:	pop    esi
  4349f8:	pop    ebx
  4349f9:	ret    
  4349fa:	mov    eax,eax
  4349fc:	push   ebx
  4349fd:	push   esi
  4349fe:	push   edi
  4349ff:	mov    edi,ecx
  434a01:	mov    esi,edx
  434a03:	mov    ebx,eax
  434a05:	mov    eax,ebx
  434a07:	call   0x4349a0
  434a0c:	mov    DWORD PTR [ebx+0x4],esi
  434a0f:	lea    eax,[ebx+0x10]
  434a12:	mov    edx,edi
  434a14:	call   0x404fdc
  434a19:	pop    edi
  434a1a:	pop    esi
  434a1b:	pop    ebx
  434a1c:	ret    
  434a1d:	lea    eax,[eax+0x0]
  434a20:	mov    ecx,DWORD PTR [eax+0x4]
  434a23:	test   ecx,ecx
  434a25:	je     0x434a2b
  434a27:	test   dl,dl
  434a29:	jne    0x434a2f
  434a2b:	mov    eax,DWORD PTR [eax+0x8]
  434a2e:	ret    
  434a2f:	mov    eax,ecx
  434a31:	ret    
  434a32:	mov    eax,eax
  434a34:	push   ebp
  434a35:	mov    ebp,esp
  434a37:	add    esp,0xfffffff0
  434a3a:	push   ebx
  434a3b:	push   esi
  434a3c:	xor    ebx,ebx
  434a3e:	mov    DWORD PTR [ebp-0x4],ebx
  434a41:	mov    BYTE PTR [ebp-0x5],cl
  434a44:	mov    ebx,edx
  434a46:	mov    esi,eax
  434a48:	xor    eax,eax
  434a4a:	push   ebp
  434a4b:	push   0x434b39
  434a50:	push   DWORD PTR fs:[eax]
  434a53:	mov    DWORD PTR fs:[eax],esp
  434a56:	lea    eax,[ebp-0x4]
  434a59:	mov    edx,ebx
  434a5b:	call   0x405020
  434a60:	mov    eax,DWORD PTR [ebp-0x4]
  434a63:	call   0x4348c4
  434a68:	mov    ebx,eax
  434a6a:	test   bl,bl
  434a6c:	jne    0x434a80
  434a6e:	lea    eax,[ebp-0x4]
  434a71:	mov    ecx,0x1
  434a76:	mov    edx,0x1
  434a7b:	call   0x4054c0
  434a80:	xor    eax,eax
  434a82:	mov    DWORD PTR [ebp-0xc],eax
  434a85:	cmp    BYTE PTR [ebp-0x5],0x0
  434a89:	je     0x434a91
  434a8b:	cmp    DWORD PTR [ebp-0x4],0x0
  434a8f:	jne    0x434abb
  434a91:	lea    eax,[ebp-0xc]
  434a94:	push   eax
  434a95:	mov    eax,DWORD PTR [esi+0x18]
  434a98:	push   eax
  434a99:	push   0x0
  434a9b:	mov    eax,DWORD PTR [ebp-0x4]
  434a9e:	call   0x405418
  434aa3:	push   eax
  434aa4:	mov    edx,ebx
  434aa6:	mov    eax,esi
  434aa8:	call   0x434a20
  434aad:	push   eax
  434aae:	call   0x407128
  434ab3:	test   eax,eax
  434ab5:	sete   BYTE PTR [ebp-0x6]
  434ab9:	jmp    0x434aed
  434abb:	lea    eax,[ebp-0x10]
  434abe:	push   eax
  434abf:	lea    eax,[ebp-0xc]
  434ac2:	push   eax
  434ac3:	push   0x0
  434ac5:	mov    eax,DWORD PTR [esi+0x18]
  434ac8:	push   eax
  434ac9:	push   0x0
  434acb:	push   0x0
  434acd:	push   0x0
  434acf:	mov    eax,DWORD PTR [ebp-0x4]
  434ad2:	call   0x405418
  434ad7:	push   eax
  434ad8:	mov    edx,ebx
  434ada:	mov    eax,esi
  434adc:	call   0x434a20
  434ae1:	push   eax
  434ae2:	call   0x407118
  434ae7:	test   eax,eax
  434ae9:	sete   BYTE PTR [ebp-0x6]
  434aed:	cmp    BYTE PTR [ebp-0x6],0x0
  434af1:	je     0x434b23
  434af3:	cmp    DWORD PTR [esi+0x4],0x0
  434af7:	setne  al
  434afa:	test   al,bl
  434afc:	je     0x434b16
  434afe:	push   DWORD PTR [esi+0x10]
  434b01:	push   0x434b54
  434b06:	push   DWORD PTR [ebp-0x4]
  434b09:	lea    eax,[ebp-0x4]
  434b0c:	mov    edx,0x3
  434b11:	call   0x40531c
  434b16:	mov    ecx,DWORD PTR [ebp-0x4]
  434b19:	mov    edx,DWORD PTR [ebp-0xc]
  434b1c:	mov    eax,esi
  434b1e:	call   0x4349fc
  434b23:	xor    eax,eax
  434b25:	pop    edx
  434b26:	pop    ecx
  434b27:	pop    ecx
  434b28:	mov    DWORD PTR fs:[eax],edx
  434b2b:	push   0x434b40
  434b30:	lea    eax,[ebp-0x4]
  434b33:	call   0x404f88
  434b38:	ret    
  434b39:	jmp    0x40481c
  434b3e:	jmp    0x434b30
  434b40:	movzx  eax,BYTE PTR [ebp-0x6]
  434b44:	pop    esi
  434b45:	pop    ebx
  434b46:	mov    esp,ebp
  434b48:	pop    ebp
  434b49:	ret    
  434b4a:	add    BYTE PTR [eax],al
  434b4c:	(bad)  
  434b4d:	(bad)  
  434b4e:	(bad)  
  434b4f:	inc    DWORD PTR [ecx]
  434b51:	add    BYTE PTR [eax],al
  434b53:	add    BYTE PTR [eax+eax*1+0x0],bl
  434b57:	add    BYTE PTR [ebx+0x56],dl
  434b5a:	push   edi
  434b5b:	push   ebp
  434b5c:	push   ecx
  434b5d:	mov    ebp,ecx
  434b5f:	mov    edi,edx
  434b61:	mov    esi,eax
  434b63:	mov    eax,ebp
  434b65:	xor    ecx,ecx
  434b67:	mov    edx,0x8
  434b6c:	call   0x4037c8
  434b71:	lea    eax,[ebp+0x4]
  434b74:	push   eax
  434b75:	push   0x0
  434b77:	lea    eax,[esp+0x8]
  434b7b:	push   eax
  434b7c:	push   0x0
  434b7e:	mov    eax,edi
  434b80:	call   0x405418
  434b85:	push   eax
  434b86:	mov    eax,DWORD PTR [esi+0x4]
  434b89:	push   eax
  434b8a:	call   0x407130
  434b8f:	test   eax,eax
  434b91:	sete   bl
  434b94:	mov    eax,DWORD PTR [esp]
  434b97:	call   0x434908
  434b9c:	mov    BYTE PTR [ebp+0x0],al
  434b9f:	mov    eax,ebx
  434ba1:	pop    edx
  434ba2:	pop    ebp
  434ba3:	pop    edi
  434ba4:	pop    esi
  434ba5:	pop    ebx
  434ba6:	ret    
  434ba7:	nop
  434ba8:	push   ebx
  434ba9:	push   esi
  434baa:	add    esp,0xfffffff8
  434bad:	mov    esi,edx
  434baf:	mov    ebx,eax
  434bb1:	mov    ecx,esp
  434bb3:	mov    edx,esi
  434bb5:	mov    eax,ebx
  434bb7:	call   0x434b58
  434bbc:	test   al,al
  434bbe:	je     0x434bc6
  434bc0:	mov    eax,DWORD PTR [esp+0x4]
  434bc4:	jmp    0x434bc9
  434bc6:	or     eax,0xffffffff
  434bc9:	pop    ecx
  434bca:	pop    edx
  434bcb:	pop    esi
  434bcc:	pop    ebx
  434bcd:	ret    
  434bce:	mov    eax,eax
  434bd0:	push   ebx
  434bd1:	push   esi
  434bd2:	push   edi
  434bd3:	push   ebp
  434bd4:	mov    edi,ecx
  434bd6:	mov    ebp,edx
  434bd8:	mov    esi,eax
  434bda:	mov    ebx,edi
  434bdc:	test   ebx,ebx
  434bde:	je     0x434be5
  434be0:	sub    ebx,0x4
  434be3:	mov    ebx,DWORD PTR [ebx]
  434be5:	inc    ebx
  434be6:	push   ebx
  434be7:	push   0x1
  434be9:	mov    eax,edi
  434beb:	call   0x405418
  434bf0:	mov    ecx,eax
  434bf2:	mov    edx,ebp
  434bf4:	mov    eax,esi
  434bf6:	call   0x434c78
  434bfb:	pop    ebp
  434bfc:	pop    edi
  434bfd:	pop    esi
  434bfe:	pop    ebx
  434bff:	ret    
  434c00:	push   ebx
  434c01:	push   esi
  434c02:	push   edi
  434c03:	push   ebp
  434c04:	push   ecx
  434c05:	mov    edi,ecx
  434c07:	mov    ebp,edx
  434c09:	mov    esi,eax
  434c0b:	mov    edx,ebp
  434c0d:	mov    eax,esi
  434c0f:	call   0x434ba8
  434c14:	mov    ebx,eax
  434c16:	test   ebx,ebx
  434c18:	jle    0x434c69
  434c1a:	mov    eax,edi
  434c1c:	mov    ecx,ebx
  434c1e:	xor    edx,edx
  434c20:	call   0x405078
  434c25:	push   ebx
  434c26:	lea    eax,[esp+0x4]
  434c2a:	push   eax
  434c2b:	mov    eax,DWORD PTR [edi]
  434c2d:	call   0x405418
  434c32:	mov    ecx,eax
  434c34:	mov    edx,ebp
  434c36:	mov    eax,esi
  434c38:	call   0x434ce0
  434c3d:	cmp    BYTE PTR [esp],0x1
  434c41:	je     0x434c49
  434c43:	cmp    BYTE PTR [esp],0x2
  434c47:	jne    0x434c60
  434c49:	mov    eax,DWORD PTR [edi]
  434c4b:	call   0x405418
  434c50:	call   0x4091a4
  434c55:	mov    edx,eax
  434c57:	mov    eax,edi
  434c59:	call   0x4056a8
  434c5e:	jmp    0x434c70
  434c60:	mov    eax,ebp
  434c62:	call   0x434898
  434c67:	jmp    0x434c70
  434c69:	mov    eax,edi
  434c6b:	call   0x404f88
  434c70:	pop    edx
  434c71:	pop    ebp
  434c72:	pop    edi
  434c73:	pop    esi
  434c74:	pop    ebx
  434c75:	ret    
  434c76:	mov    eax,eax
  434c78:	push   ebp
  434c79:	mov    ebp,esp
  434c7b:	add    esp,0xfffffff4
  434c7e:	push   ebx
  434c7f:	push   esi
  434c80:	push   edi
  434c81:	mov    DWORD PTR [ebp-0x4],ecx
  434c84:	mov    edi,edx
  434c86:	mov    ebx,eax
  434c88:	movzx  eax,BYTE PTR [ebp+0x8]
  434c8c:	call   0x4348d8
  434c91:	mov    esi,eax
  434c93:	mov    eax,DWORD PTR [ebp+0xc]
  434c96:	push   eax
  434c97:	mov    eax,DWORD PTR [ebp-0x4]
  434c9a:	push   eax
  434c9b:	push   esi
  434c9c:	push   0x0
  434c9e:	mov    eax,edi
  434ca0:	call   0x405418
  434ca5:	push   eax
  434ca6:	mov    eax,DWORD PTR [ebx+0x4]
  434ca9:	push   eax
  434caa:	call   0x407138
  434caf:	test   eax,eax
  434cb1:	je     0x434cd7
  434cb3:	mov    DWORD PTR [ebp-0xc],edi
  434cb6:	mov    BYTE PTR [ebp-0x8],0xb
  434cba:	lea    eax,[ebp-0xc]
  434cbd:	push   eax
  434cbe:	push   0x0
  434cc0:	mov    ecx,DWORD PTR ds:0x46dc98
  434cc6:	mov    dl,0x1
  434cc8:	mov    eax,ds:0x4347d0
  434ccd:	call   0x40c9ac
  434cd2:	call   0x4048fc
  434cd7:	pop    edi
  434cd8:	pop    esi
  434cd9:	pop    ebx
  434cda:	mov    esp,ebp
  434cdc:	pop    ebp
  434cdd:	ret    0x8
  434ce0:	push   ebp
  434ce1:	mov    ebp,esp
  434ce3:	add    esp,0xfffffff4
  434ce6:	push   ebx
  434ce7:	push   esi
  434ce8:	push   edi
  434ce9:	mov    edi,ecx
  434ceb:	mov    esi,edx
  434ced:	mov    ebx,eax
  434cef:	xor    eax,eax
  434cf1:	mov    DWORD PTR [ebp-0x4],eax
  434cf4:	lea    eax,[ebp+0xc]
  434cf7:	push   eax
  434cf8:	push   edi
  434cf9:	lea    eax,[ebp-0x4]
  434cfc:	push   eax
  434cfd:	push   0x0
  434cff:	mov    eax,esi
  434d01:	call   0x405418
  434d06:	push   eax
  434d07:	mov    eax,DWORD PTR [ebx+0x4]
  434d0a:	push   eax
  434d0b:	call   0x407130
  434d10:	test   eax,eax
  434d12:	je     0x434d38
  434d14:	mov    DWORD PTR [ebp-0xc],esi
  434d17:	mov    BYTE PTR [ebp-0x8],0xb
  434d1b:	lea    eax,[ebp-0xc]
  434d1e:	push   eax
  434d1f:	push   0x0
  434d21:	mov    ecx,DWORD PTR ds:0x46dec0
  434d27:	mov    dl,0x1
  434d29:	mov    eax,ds:0x4347d0
  434d2e:	call   0x40c9ac
  434d33:	call   0x4048fc
  434d38:	mov    ebx,DWORD PTR [ebp+0xc]
  434d3b:	mov    eax,DWORD PTR [ebp-0x4]
  434d3e:	call   0x434908
  434d43:	mov    edx,DWORD PTR [ebp+0x8]
  434d46:	mov    BYTE PTR [edx],al
  434d48:	mov    eax,ebx
  434d4a:	pop    edi
  434d4b:	pop    esi
  434d4c:	pop    ebx
  434d4d:	mov    esp,ebp
  434d4f:	pop    ebp
  434d50:	ret    0x8
  434d53:	nop
  434d54:	(bad)  
  434d55:	(bad)  
  434d56:	(bad)  
  434d57:	inc    DWORD PTR [ecx]
  434d59:	add    BYTE PTR [eax],al
  434d5b:	add    BYTE PTR [eax],dh
  434d5d:	add    BYTE PTR [eax],al
  434d5f:	add    bh,bh
  434d61:	(bad)  
  434d62:	(bad)  
  434d63:	inc    DWORD PTR [ecx]
  434d65:	add    BYTE PTR [eax],al
  434d67:	add    BYTE PTR [ecx],dh
  434d69:	add    BYTE PTR [eax],al
  434d6b:	add    BYTE PTR [ebp-0x75],dl
  434d6e:	in     al,dx
  434d6f:	xor    eax,eax
  434d71:	push   ebp
  434d72:	push   0x434da8
  434d77:	push   DWORD PTR fs:[eax]
  434d7a:	mov    DWORD PTR fs:[eax],esp
  434d7d:	inc    DWORD PTR ds:0x473830
  434d83:	jne    0x434d9a
  434d85:	mov    eax,0x4627e8
  434d8a:	mov    ecx,0x2
  434d8f:	mov    edx,DWORD PTR ds:0x401084
  434d95:	call   0x405b50
  434d9a:	xor    eax,eax
  434d9c:	pop    edx
  434d9d:	pop    ecx
  434d9e:	pop    ecx
  434d9f:	mov    DWORD PTR fs:[eax],edx
  434da2:	push   0x434daf
  434da7:	ret    
  434da8:	jmp    0x40481c
  434dad:	jmp    0x434da7
  434daf:	pop    ebp
  434db0:	ret    
  434db1:	lea    eax,[eax+0x0]
  434db4:	(bad)  
  434db5:	(bad)  
  434db6:	(bad)  
  434db7:	inc    DWORD PTR [ebx]
  434db9:	add    BYTE PTR [eax],al
  434dbb:	add    BYTE PTR [ebx+0x75],dl
  434dbe:	outs   dx,BYTE PTR ds:[esi]
  434dbf:	add    bh,bh
  434dc1:	(bad)  
  434dc2:	(bad)  
  434dc3:	inc    DWORD PTR [ebx]
  434dc5:	add    BYTE PTR [eax],al
  434dc7:	add    BYTE PTR [ebp+0x6f],cl
  434dca:	outs   dx,BYTE PTR ds:[esi]
  434dcb:	add    bh,bh
  434dcd:	(bad)  
  434dce:	(bad)  
  434dcf:	inc    DWORD PTR [ebx]
  434dd1:	add    BYTE PTR [eax],al
  434dd3:	add    BYTE PTR [ebp+esi*2+0x65],dl
  434dd7:	add    bh,bh
  434dd9:	(bad)  
  434dda:	(bad)  
  434ddb:	inc    DWORD PTR [ebx]
  434ddd:	add    BYTE PTR [eax],al
  434ddf:	add    BYTE PTR [edi+0x65],dl
  434de2:	fs add bh,bh
  434de5:	(bad)  
  434de6:	(bad)  
  434de7:	inc    DWORD PTR [ebx]
  434de9:	add    BYTE PTR [eax],al
  434deb:	add    BYTE PTR [eax+ebp*2+0x75],dl
  434def:	add    bh,bh
  434df1:	(bad)  
  434df2:	(bad)  
  434df3:	inc    DWORD PTR [ebx]
  434df5:	add    BYTE PTR [eax],al
  434df7:	add    BYTE PTR [esi+0x72],al
  434dfa:	imul   eax,DWORD PTR [eax],0xffffffff
  434e00:	add    eax,DWORD PTR [eax]
  434e02:	add    BYTE PTR [eax],al
  434e04:	push   ebx
  434e05:	popa   
  434e06:	je     0x434e08
  434e08:	(bad)  
  434e09:	(bad)  
  434e0a:	(bad)  
  434e0b:	inc    DWORD PTR [ebx]
  434e0d:	add    BYTE PTR [eax],al
  434e0f:	add    BYTE PTR [edx+0x61],cl
  434e12:	outs   dx,BYTE PTR ds:[esi]
  434e13:	add    bh,bh
  434e15:	(bad)  
  434e16:	(bad)  
  434e17:	inc    DWORD PTR [ebx]
  434e19:	add    BYTE PTR [eax],al
  434e1b:	add    BYTE PTR [esi+0x65],al
  434e1e:	bound  eax,QWORD PTR [eax]
  434e20:	(bad)  
  434e21:	(bad)  
  434e22:	(bad)  
  434e23:	inc    DWORD PTR [ebx]
  434e25:	add    BYTE PTR [eax],al
  434e27:	add    BYTE PTR [ebp+0x61],cl
  434e2a:	jb     0x434e2c
  434e2c:	(bad)  
  434e2d:	(bad)  
  434e2e:	(bad)  
  434e2f:	inc    DWORD PTR [ebx]
  434e31:	add    BYTE PTR [eax],al
  434e33:	add    BYTE PTR [ecx+0x70],al
  434e36:	jb     0x434e38
  434e38:	(bad)  
  434e39:	(bad)  
  434e3a:	(bad)  
  434e3b:	inc    DWORD PTR [ebx]
  434e3d:	add    BYTE PTR [eax],al
  434e3f:	add    BYTE PTR [ebp+0x61],cl
  434e42:	jns    0x434e44
  434e44:	(bad)  
  434e45:	(bad)  
  434e46:	(bad)  
  434e47:	inc    DWORD PTR [ebx]
  434e49:	add    BYTE PTR [eax],al
  434e4b:	add    BYTE PTR [edx+0x75],cl
  434e4e:	outs   dx,BYTE PTR ds:[esi]
  434e4f:	add    bh,bh
  434e51:	(bad)  
  434e52:	(bad)  
  434e53:	inc    DWORD PTR [ebx]
  434e55:	add    BYTE PTR [eax],al
  434e57:	add    BYTE PTR [edx+0x75],cl
  434e5a:	ins    BYTE PTR es:[edi],dx
  434e5b:	add    bh,bh
  434e5d:	(bad)  
  434e5e:	(bad)  
  434e5f:	inc    DWORD PTR [ebx]
  434e61:	add    BYTE PTR [eax],al
  434e63:	add    BYTE PTR [ecx+0x75],al
  434e66:	addr16 add bh,bh
  434e69:	(bad)  
  434e6a:	(bad)  
  434e6b:	inc    DWORD PTR [ebx]
  434e6d:	add    BYTE PTR [eax],al
  434e6f:	add    BYTE PTR [ebx+0x65],dl
  434e72:	jo     0x434e74
  434e74:	(bad)  
  434e75:	(bad)  
  434e76:	(bad)  
  434e77:	inc    DWORD PTR [ebx]
  434e79:	add    BYTE PTR [eax],al
  434e7b:	add    BYTE PTR [edi+0x63],cl
  434e7e:	je     0x434e80
  434e80:	(bad)  
  434e81:	(bad)  
  434e82:	(bad)  
  434e83:	inc    DWORD PTR [ebx]
  434e85:	add    BYTE PTR [eax],al
  434e87:	add    BYTE PTR [esi+0x6f],cl
  434e8a:	jbe    0x434e8c
  434e8c:	(bad)  
  434e8d:	(bad)  
  434e8e:	(bad)  
  434e8f:	inc    DWORD PTR [ebx]
  434e91:	add    BYTE PTR [eax],al
  434e93:	add    BYTE PTR [ebp+eiz*2+0x63],al
  434e97:	add    BYTE PTR [esi+ecx*2+0x2110043],bl
  434e9e:	cs aaa 
  434ea0:	add    al,0x0
  434ea2:	add    BYTE PTR [eax],al
  434ea4:	test   BYTE PTR [eax],dl
  434ea6:	inc    eax
  434ea7:	add    BYTE PTR [eax+0x0],cl
  434eaa:	add    BYTE PTR [eax],al
  434eac:	test   BYTE PTR [eax],dl
  434eae:	inc    eax
  434eaf:	add    BYTE PTR [ecx],dl
  434eb1:	dec    ecx
  434eb2:	fs inc edi
  434eb4:	ins    BYTE PTR es:[edi],dx
  434eb5:	outs   dx,DWORD PTR ds:[esi]
  434eb6:	bound  esp,QWORD PTR [ecx+0x6c]
  434eb9:	push   eax
  434eba:	jb     0x434f2b
  434ebc:	je     0x434f2d
  434ebe:	arpl   WORD PTR [edi+0x6c],bp
  434ec1:	jae    0x434e4e
  434ec3:	ror    al,0x4e
  434ec6:	inc    ebx
  434ec7:	add    BYTE PTR [ecx],dl
  434ec9:	add    ch,BYTE PTR [esi]
  434ecb:	cmp    BYTE PTR [eax+eax*1],al
  434ece:	add    BYTE PTR [eax],al
  434ed0:	test   BYTE PTR [eax],dl
  434ed2:	inc    eax
  434ed3:	add    BYTE PTR [eax+0x0],cl
  434ed6:	add    BYTE PTR [eax],al
  434ed8:	test   BYTE PTR [eax],dl
  434eda:	inc    eax
  434edb:	add    BYTE PTR [ecx],dl
  434edd:	dec    ecx
  434ede:	fs inc edi
  434ee0:	ins    BYTE PTR es:[edi],dx
  434ee1:	outs   dx,DWORD PTR ds:[esi]
  434ee2:	bound  esp,QWORD PTR [ecx+0x6c]
  434ee5:	push   eax
  434ee6:	jb     0x434f57
  434ee8:	je     0x434f59
  434eea:	arpl   WORD PTR [edi+0x6c],bp
  434eed:	jae    0x434e7a
  434eef:	rcl    BYTE PTR [ebp-0x75],0xec
  434ef3:	add    esp,0xffffffc0
  434ef6:	push   ebx
  434ef7:	push   esi
  434ef8:	push   edi
  434ef9:	xor    ebx,ebx
  434efb:	mov    DWORD PTR [ebp-0x40],ebx
  434efe:	mov    DWORD PTR [ebp-0x3c],ebx
  434f01:	mov    DWORD PTR [ebp-0x38],ebx
  434f04:	mov    DWORD PTR [ebp-0x34],ebx
  434f07:	mov    DWORD PTR [ebp-0x30],ebx
  434f0a:	mov    DWORD PTR [ebp-0x2c],ebx
  434f0d:	mov    DWORD PTR [ebp-0x28],ebx
  434f10:	mov    DWORD PTR [ebp-0x24],ebx
  434f13:	mov    DWORD PTR [ebp-0xc],ecx
  434f16:	mov    DWORD PTR [ebp-0x8],edx
  434f19:	mov    DWORD PTR [ebp-0x4],eax
  434f1c:	xor    eax,eax
  434f1e:	push   ebp
  434f1f:	push   0x4351d1
  434f24:	push   DWORD PTR fs:[eax]
  434f27:	mov    DWORD PTR fs:[eax],esp
  434f2a:	mov    DWORD PTR [ebp-0x10],0x1
  434f31:	mov    esi,0x1
  434f36:	mov    DWORD PTR [ebp-0x14],0x1
  434f3d:	xor    edi,edi
  434f3f:	mov    BYTE PTR [ebp-0x1d],0x20
  434f43:	mov    BYTE PTR [ebp-0x1e],0x0
  434f47:	mov    eax,DWORD PTR [ebp-0x4]
  434f4a:	call   0x405248
  434f4f:	mov    DWORD PTR [ebp-0x18],eax
  434f52:	mov    eax,DWORD PTR [ebp-0x8]
  434f55:	call   0x405248
  434f5a:	mov    DWORD PTR [ebp-0x1c],eax
  434f5d:	mov    eax,DWORD PTR [ebp+0x8]
  434f60:	call   0x404f88
  434f65:	cmp    esi,DWORD PTR [ebp-0x18]
  434f68:	jg     0x435194
  434f6e:	mov    eax,DWORD PTR [ebp-0x4]
  434f71:	dec    esi
  434f72:	test   eax,eax
  434f74:	je     0x434f7b
  434f76:	cmp    esi,DWORD PTR [eax-0x4]
  434f79:	jb     0x434f80
  434f7b:	call   0x403f68
  434f80:	inc    esi
  434f81:	movzx  ebx,BYTE PTR [eax+esi*1-0x1]
  434f86:	mov    eax,ebx
  434f88:	call   0x4362fc
  434f8d:	test   al,al
  434f8f:	je     0x434fab
  434f91:	add    esi,0x1
  434f94:	jno    0x434f9b
  434f96:	call   0x403f70
  434f9b:	add    DWORD PTR [ebp-0x10],0x1
  434f9f:	jno    0x434fa6
  434fa1:	call   0x403f70
  434fa6:	jmp    0x43506e
  434fab:	mov    eax,0x1
  434fb0:	mov    edx,DWORD PTR [ebp-0x8]
  434fb3:	dec    eax
  434fb4:	test   edx,edx
  434fb6:	je     0x434fbd
  434fb8:	cmp    eax,DWORD PTR [edx-0x4]
  434fbb:	jb     0x434fc2
  434fbd:	call   0x403f68
  434fc2:	inc    eax
  434fc3:	cmp    bl,BYTE PTR [edx+eax*1-0x1]
  434fc7:	jne    0x435012
  434fc9:	cmp    BYTE PTR [ebp-0x1d],0x20
  434fcd:	jne    0x43506e
  434fd3:	lea    eax,[ebp-0x24]
  434fd6:	push   eax
  434fd7:	mov    ecx,DWORD PTR [ebp-0x1c]
  434fda:	mov    edx,esi
  434fdc:	mov    eax,DWORD PTR [ebp-0x4]
  434fdf:	call   0x405480
  434fe4:	mov    edx,DWORD PTR [ebp-0x24]
  434fe7:	mov    eax,DWORD PTR [ebp-0x8]
  434fea:	call   0x41d948
  434fef:	mov    BYTE PTR [ebp-0x1e],al
  434ff2:	cmp    BYTE PTR [ebp-0x1e],0x0
  434ff6:	je     0x43506e
  434ff8:	mov    eax,DWORD PTR [ebp-0x1c]
  434ffb:	sub    eax,0x1
  434ffe:	jno    0x435005
  435000:	call   0x403f70
  435005:	add    esi,eax
  435007:	jno    0x43500e
  435009:	call   0x403f70
  43500e:	mov    edi,esi
  435010:	jmp    0x43506e
  435012:	lea    eax,[ebp-0x28]
  435015:	mov    edx,ebx
  435017:	call   0x405170
  43501c:	mov    eax,DWORD PTR [ebp-0x28]
  43501f:	mov    ecx,DWORD PTR [ebp-0xc]
  435022:	mov    edx,0x1
  435027:	call   0x41d964
  43502c:	test   al,al
  43502e:	je     0x43503a
  435030:	cmp    BYTE PTR [ebp-0x1d],0x20
  435034:	jne    0x43506e
  435036:	mov    edi,esi
  435038:	jmp    0x43506e
  43503a:	lea    eax,[ebp-0x2c]
  43503d:	mov    edx,ebx
  43503f:	call   0x405170
  435044:	mov    eax,DWORD PTR [ebp-0x2c]
  435047:	mov    ecx,0x4351ec
  43504c:	mov    edx,0x1
  435051:	call   0x41d964
  435056:	test   al,al
  435058:	je     0x43506e
  43505a:	cmp    bl,BYTE PTR [ebp-0x1d]
  43505d:	jne    0x435065
  43505f:	mov    BYTE PTR [ebp-0x1d],0x20
  435063:	jmp    0x43506e
  435065:	cmp    BYTE PTR [ebp-0x1d],0x20
  435069:	jne    0x43506e
  43506b:	mov    BYTE PTR [ebp-0x1d],bl
  43506e:	add    esi,0x1
  435071:	jno    0x435078
  435073:	call   0x403f70
  435078:	add    DWORD PTR [ebp-0x10],0x1
  43507c:	jno    0x435083
  43507e:	call   0x403f70
  435083:	lea    eax,[ebp-0x30]
  435086:	movzx  edx,BYTE PTR [ebp-0x1d]
  43508a:	call   0x405170
  43508f:	mov    eax,DWORD PTR [ebp-0x30]
  435092:	mov    ecx,0x4351ec
  435097:	mov    edx,0x1
  43509c:	call   0x41d964
  4350a1:	test   al,al
  4350a3:	jne    0x43518b
  4350a9:	cmp    BYTE PTR [ebp-0x1e],0x0
  4350ad:	jne    0x4350c4
  4350af:	mov    eax,DWORD PTR [ebp-0x10]
  4350b2:	cmp    eax,DWORD PTR [ebp+0xc]
  4350b5:	jle    0x43518b
  4350bb:	cmp    edi,DWORD PTR [ebp-0x14]
  4350be:	jle    0x43518b
  4350c4:	mov    eax,esi
  4350c6:	sub    eax,edi
  4350c8:	jno    0x4350cf
  4350ca:	call   0x403f70
  4350cf:	mov    DWORD PTR [ebp-0x10],eax
  4350d2:	lea    eax,[ebp-0x34]
  4350d5:	push   eax
  4350d6:	mov    ecx,edi
  4350d8:	sub    ecx,DWORD PTR [ebp-0x14]
  4350db:	jno    0x4350e2
  4350dd:	call   0x403f70
  4350e2:	add    ecx,0x1
  4350e5:	jno    0x4350ec
  4350e7:	call   0x403f70
  4350ec:	mov    edx,DWORD PTR [ebp-0x14]
  4350ef:	mov    eax,DWORD PTR [ebp-0x4]
  4350f2:	call   0x405480
  4350f7:	mov    edx,DWORD PTR [ebp-0x34]
  4350fa:	mov    eax,DWORD PTR [ebp+0x8]
  4350fd:	call   0x405254
  435102:	mov    eax,DWORD PTR [ebp+0x8]
  435105:	lea    eax,[ebp-0x38]
  435108:	mov    edx,ebx
  43510a:	call   0x405170
  43510f:	mov    eax,DWORD PTR [ebp-0x38]
  435112:	mov    ecx,0x4351ec
  435117:	mov    edx,0x1
  43511c:	call   0x41d964
  435121:	test   al,al
  435123:	jne    0x43517a
  435125:	jmp    0x435131
  435127:	add    esi,0x1
  43512a:	jno    0x435131
  43512c:	call   0x403f70
  435131:	cmp    esi,DWORD PTR [ebp-0x18]
  435134:	jg     0x435161
  435136:	push   DWORD PTR [ebp-0xc]
  435139:	push   0x4351f8
  43513e:	push   0x435204
  435143:	lea    eax,[ebp-0x3c]
  435146:	mov    edx,0x3
  43514b:	call   0x40531c
  435150:	mov    ecx,DWORD PTR [ebp-0x3c]
  435153:	mov    edx,esi
  435155:	mov    eax,DWORD PTR [ebp-0x4]
  435158:	call   0x41d964
  43515d:	test   al,al
  43515f:	jne    0x435127
  435161:	cmp    BYTE PTR [ebp-0x1e],0x0
  435165:	jne    0x43517a
  435167:	cmp    esi,DWORD PTR [ebp-0x18]
  43516a:	jge    0x43517a
  43516c:	mov    eax,DWORD PTR [ebp+0x8]
  43516f:	mov    edx,DWORD PTR [ebp-0x8]
  435172:	call   0x405254
  435177:	mov    eax,DWORD PTR [ebp+0x8]
  43517a:	add    edi,0x1
  43517d:	jno    0x435184
  43517f:	call   0x403f70
  435184:	mov    DWORD PTR [ebp-0x14],edi
  435187:	mov    BYTE PTR [ebp-0x1e],0x0
  43518b:	cmp    esi,DWORD PTR [ebp-0x18]
  43518e:	jle    0x434f6e
  435194:	lea    eax,[ebp-0x40]
  435197:	push   eax
  435198:	mov    ecx,0x7fffffff
  43519d:	mov    edx,DWORD PTR [ebp-0x14]
  4351a0:	mov    eax,DWORD PTR [ebp-0x4]
  4351a3:	call   0x405480
  4351a8:	mov    edx,DWORD PTR [ebp-0x40]
  4351ab:	mov    eax,DWORD PTR [ebp+0x8]
  4351ae:	call   0x405254
  4351b3:	mov    eax,DWORD PTR [ebp+0x8]
  4351b6:	xor    eax,eax
  4351b8:	pop    edx
  4351b9:	pop    ecx
  4351ba:	pop    ecx
  4351bb:	mov    DWORD PTR fs:[eax],edx
  4351be:	push   0x4351d8
  4351c3:	lea    eax,[ebp-0x40]
  4351c6:	mov    edx,0x8
  4351cb:	call   0x404fac
  4351d0:	ret    
  4351d1:	jmp    0x40481c
  4351d6:	jmp    0x4351c3
  4351d8:	pop    edi
  4351d9:	pop    esi
  4351da:	pop    ebx
  4351db:	mov    esp,ebp
  4351dd:	pop    ebp
  4351de:	ret    0x8
  4351e1:	add    BYTE PTR [eax],al
  4351e3:	add    bh,bh
  4351e5:	(bad)  
  4351e6:	(bad)  
  4351e7:	inc    DWORD PTR [ecx]
  4351e9:	add    BYTE PTR [eax],al
  4351eb:	add    BYTE PTR [edx],ah
  4351ed:	add    BYTE PTR [eax],al
  4351ef:	add    bh,bh
  4351f1:	(bad)  
  4351f2:	(bad)  
  4351f3:	inc    DWORD PTR [ecx]
  4351f5:	add    BYTE PTR [eax],al
  4351f7:	add    BYTE PTR ds:0xff000000,cl
  4351fd:	(bad)  
  4351fe:	(bad)  
  4351ff:	inc    DWORD PTR [ecx]
  435201:	add    BYTE PTR [eax],al
  435203:	add    BYTE PTR [edx],cl
  435205:	add    BYTE PTR [eax],al
  435207:	add    BYTE PTR [ebp-0x75],dl
  43520a:	in     al,dx
  43520b:	push   0x0
  43520d:	push   0x0
  43520f:	xor    eax,eax
  435211:	push   ebp
  435212:	push   0x435299
  435217:	push   DWORD PTR fs:[eax]
  43521a:	mov    DWORD PTR fs:[eax],esp
  43521d:	push   0x1
  43521f:	lea    eax,[ebp-0x4]
  435222:	push   eax
  435223:	mov    eax,DWORD PTR [ebp+0x8]
  435226:	mov    edx,DWORD PTR [eax-0x8]
  435229:	mov    eax,DWORD PTR [ebp+0x8]
  43522c:	mov    eax,DWORD PTR [eax-0x4]
  43522f:	mov    cl,0x1
  435231:	call   0x41c7c4
  435236:	mov    edx,DWORD PTR [ebp-0x4]
  435239:	mov    ecx,0x1
  43523e:	mov    eax,ds:0x41be90
  435243:	call   0x41b254
  435248:	cmp    eax,0xffff
  43524d:	jbe    0x435254
  43524f:	call   0x403f68
  435254:	mov    edx,DWORD PTR [ebp+0x8]
  435257:	mov    WORD PTR [edx-0xa],ax
  43525b:	lea    ecx,[ebp-0x8]
  43525e:	mov    eax,DWORD PTR [ebp+0x8]
  435261:	mov    edx,DWORD PTR [eax-0x4]
  435264:	mov    edx,DWORD PTR [edx]
  435266:	mov    eax,ds:0x41be90
  43526b:	call   0x41b3b8
  435270:	mov    edx,DWORD PTR [ebp-0x8]
  435273:	mov    eax,DWORD PTR [ebp+0x8]
  435276:	mov    eax,DWORD PTR [eax-0x4]
  435279:	call   0x404fdc
  43527e:	xor    eax,eax
  435280:	pop    edx
  435281:	pop    ecx
  435282:	pop    ecx
  435283:	mov    DWORD PTR fs:[eax],edx
  435286:	push   0x4352a0
  43528b:	lea    eax,[ebp-0x8]
  43528e:	mov    edx,0x2
  435293:	call   0x404fac
  435298:	ret    
  435299:	jmp    0x40481c
  43529e:	jmp    0x43528b
  4352a0:	pop    ecx
  4352a1:	pop    ecx
  4352a2:	pop    ebp
  4352a3:	ret    
  4352a4:	push   ebp
  4352a5:	mov    ebp,esp
  4352a7:	push   0x0
  4352a9:	push   0x0
  4352ab:	xor    eax,eax
  4352ad:	push   ebp
  4352ae:	push   0x435322
  4352b3:	push   DWORD PTR fs:[eax]
  4352b6:	mov    DWORD PTR fs:[eax],esp
  4352b9:	push   0x1
  4352bb:	lea    eax,[ebp-0x4]
  4352be:	push   eax
  4352bf:	mov    eax,DWORD PTR [ebp+0x8]
  4352c2:	mov    edx,DWORD PTR [eax-0x8]
  4352c5:	mov    eax,DWORD PTR [ebp+0x8]
  4352c8:	mov    eax,DWORD PTR [eax-0x4]
  4352cb:	mov    cl,0x1
  4352cd:	call   0x41c7c4
  4352d2:	mov    eax,DWORD PTR [ebp-0x4]
  4352d5:	call   0x435a8c
  4352da:	movzx  eax,al
  4352dd:	mov    edx,DWORD PTR [ebp+0x8]
  4352e0:	mov    WORD PTR [edx-0xc],ax
  4352e4:	lea    ecx,[ebp-0x8]
  4352e7:	mov    eax,DWORD PTR [ebp+0x8]
  4352ea:	mov    edx,DWORD PTR [eax-0x4]
  4352ed:	mov    edx,DWORD PTR [edx]
  4352ef:	mov    eax,ds:0x41be90
  4352f4:	call   0x41b3b8
  4352f9:	mov    edx,DWORD PTR [ebp-0x8]
  4352fc:	mov    eax,DWORD PTR [ebp+0x8]
  4352ff:	mov    eax,DWORD PTR [eax-0x4]
  435302:	call   0x404fdc
  435307:	xor    eax,eax
  435309:	pop    edx
  43530a:	pop    ecx
  43530b:	pop    ecx
  43530c:	mov    DWORD PTR fs:[eax],edx
  43530f:	push   0x435329
  435314:	lea    eax,[ebp-0x8]
  435317:	mov    edx,0x2
  43531c:	call   0x404fac
  435321:	ret    
  435322:	jmp    0x40481c
  435327:	jmp    0x435314
  435329:	pop    ecx
  43532a:	pop    ecx
  43532b:	pop    ebp
  43532c:	ret    
  43532d:	lea    eax,[eax+0x0]
  435330:	push   ebp
  435331:	mov    ebp,esp
  435333:	mov    ecx,0xb
  435338:	push   0x0
  43533a:	push   0x0
  43533c:	dec    ecx
  43533d:	jne    0x435338
  43533f:	push   ebx
  435340:	push   esi
  435341:	push   edi
  435342:	mov    DWORD PTR [ebp-0x4],eax
  435345:	mov    esi,DWORD PTR [ebp-0x4]
  435348:	xor    eax,eax
  43534a:	push   ebp
  43534b:	push   0x43577e
  435350:	push   DWORD PTR fs:[eax]
  435353:	mov    DWORD PTR fs:[eax],esp
  435356:	xor    eax,eax
  435358:	mov    DWORD PTR [ebp-0x18],eax
  43535b:	mov    DWORD PTR [ebp-0x14],eax
  43535e:	xor    ebx,ebx
  435360:	mov    BYTE PTR [ebp-0x1d],0x0
  435364:	lea    ecx,[ebp-0x24]
  435367:	mov    edx,DWORD PTR [esi]
  435369:	mov    eax,ds:0x41be90
  43536e:	call   0x41b2b0
  435373:	mov    edx,DWORD PTR [ebp-0x24]
  435376:	mov    eax,esi
  435378:	call   0x404fdc
  43537d:	mov    eax,DWORD PTR [esi]
  43537f:	call   0x405248
  435384:	test   eax,eax
  435386:	je     0x435753
  43538c:	xor    edx,edx
  43538e:	push   ebp
  43538f:	push   0x435741
  435394:	push   DWORD PTR fs:[edx]
  435397:	mov    DWORD PTR fs:[edx],esp
  43539a:	lea    eax,[ebp-0x28]
  43539d:	push   eax
  43539e:	mov    eax,DWORD PTR [esi]
  4353a0:	mov    ecx,0x3
  4353a5:	mov    edx,0x1
  4353aa:	call   0x405480
  4353af:	mov    eax,DWORD PTR [ebp-0x28]
  4353b2:	call   0x435984
  4353b7:	test   al,al
  4353b9:	jbe    0x435445
  4353bf:	lea    eax,[ebp-0x2c]
  4353c2:	push   eax
  4353c3:	mov    eax,DWORD PTR [esi]
  4353c5:	mov    ecx,0x1
  4353ca:	mov    edx,0x4
  4353cf:	call   0x405480
  4353d4:	mov    eax,DWORD PTR [ebp-0x2c]
  4353d7:	mov    edx,0x435798
  4353dc:	call   0x4053b0
  4353e1:	jne    0x435418
  4353e3:	lea    eax,[ebp-0x30]
  4353e6:	push   eax
  4353e7:	mov    eax,DWORD PTR [esi]
  4353e9:	mov    ecx,0x1
  4353ee:	mov    edx,0x5
  4353f3:	call   0x405480
  4353f8:	mov    eax,DWORD PTR [ebp-0x30]
  4353fb:	mov    edx,0x4357a4
  435400:	call   0x4053b0
  435405:	je     0x435418
  435407:	mov    edx,esi
  435409:	mov    ecx,0x5
  43540e:	mov    eax,0x4357a4
  435413:	call   0x405508
  435418:	push   0x1
  43541a:	lea    eax,[ebp-0x34]
  43541d:	push   eax
  43541e:	mov    eax,esi
  435420:	mov    cl,0x1
  435422:	mov    edx,0x4357a4
  435427:	call   0x41c7c4
  43542c:	lea    ecx,[ebp-0x38]
  43542f:	mov    edx,DWORD PTR [esi]
  435431:	mov    eax,ds:0x41be90
  435436:	call   0x41b3b8
  43543b:	mov    edx,DWORD PTR [ebp-0x38]
  43543e:	mov    eax,esi
  435440:	call   0x404fdc
  435445:	mov    edi,DWORD PTR ds:0x46da9c
  43544b:	mov    edi,DWORD PTR [edi]
  43544d:	mov    edx,DWORD PTR [esi]
  43544f:	mov    eax,0x4357b0
  435454:	call   edi
  435456:	dec    eax
  435457:	jle    0x435490
  435459:	mov    edi,DWORD PTR ds:0x46da9c
  43545f:	mov    edi,DWORD PTR [edi]
  435461:	mov    edx,DWORD PTR [esi]
  435463:	mov    eax,0x4357b0
  435468:	call   edi
  43546a:	mov    edi,eax
  43546c:	mov    ecx,DWORD PTR ds:0x46da9c
  435472:	mov    ecx,DWORD PTR [ecx]
  435474:	mov    edx,DWORD PTR [esi]
  435476:	mov    eax,0x4357a4
  43547b:	call   ecx
  43547d:	cmp    edi,eax
  43547f:	jge    0x435490
  435481:	lea    eax,[ebp-0x8]
  435484:	mov    edx,0x4357b0
  435489:	call   0x405020
  43548e:	jmp    0x43549d
  435490:	lea    eax,[ebp-0x8]
  435493:	mov    edx,0x4357a4
  435498:	call   0x405020
  43549d:	push   0x1
  43549f:	lea    eax,[ebp-0x3c]
  4354a2:	push   eax
  4354a3:	mov    eax,esi
  4354a5:	xor    ecx,ecx
  4354a7:	mov    edx,DWORD PTR [ebp-0x8]
  4354aa:	call   0x41c7c4
  4354af:	mov    eax,DWORD PTR [ebp-0x3c]
  4354b2:	call   0x435a8c
  4354b7:	test   al,al
  4354b9:	jbe    0x4354cb
  4354bb:	push   ebp
  4354bc:	call   0x4352a4
  4354c1:	pop    ecx
  4354c2:	push   ebp
  4354c3:	call   0x435208
  4354c8:	pop    ecx
  4354c9:	jmp    0x4354d9
  4354cb:	push   ebp
  4354cc:	call   0x435208
  4354d1:	pop    ecx
  4354d2:	push   ebp
  4354d3:	call   0x4352a4
  4354d8:	pop    ecx
  4354d9:	push   0x1
  4354db:	lea    eax,[ebp-0x10]
  4354de:	push   eax
  4354df:	mov    eax,esi
  4354e1:	mov    cl,0x1
  4354e3:	mov    edx,0x4357a4
  4354e8:	call   0x41c7c4
  4354ed:	mov    ecx,0x76c
  4354f2:	mov    edx,DWORD PTR [ebp-0x10]
  4354f5:	mov    eax,ds:0x41be90
  4354fa:	call   0x41b254
  4354ff:	mov    edi,eax
  435501:	cmp    edi,0xffff
  435507:	jbe    0x43550e
  435509:	call   0x403f68
  43550e:	cmp    di,0x76c
  435513:	jne    0x43553f
  435515:	mov    edx,DWORD PTR [esi]
  435517:	mov    ecx,0x76c
  43551c:	mov    eax,ds:0x41be90
  435521:	call   0x41b254
  435526:	mov    edi,eax
  435528:	cmp    edi,0xffff
  43552e:	jbe    0x435535
  435530:	call   0x403f68
  435535:	mov    eax,esi
  435537:	mov    edx,DWORD PTR [ebp-0x10]
  43553a:	call   0x404fdc
  43553f:	cmp    di,0x50
  435543:	jae    0x435553
  435545:	add    di,0x7d0
  43554a:	jae    0x435551
  43554c:	call   0x403f70
  435551:	jmp    0x435565
  435553:	cmp    di,0x64
  435557:	jae    0x435565
  435559:	add    di,0x76c
  43555e:	jae    0x435565
  435560:	call   0x403f70
  435565:	movzx  eax,WORD PTR [ebp-0xa]
  435569:	push   eax
  43556a:	movzx  ecx,WORD PTR [ebp-0xc]
  43556e:	mov    edx,edi
  435570:	mov    eax,ds:0x41be90
  435575:	call   0x41b398
  43557a:	fstp   QWORD PTR [ebp-0x18]
  43557d:	fwait
  43557e:	mov    edi,DWORD PTR ds:0x46da9c
  435584:	mov    edi,DWORD PTR [edi]
  435586:	mov    edx,DWORD PTR [esi]
  435588:	mov    eax,0x4357bc
  43558d:	call   edi
  43558f:	test   eax,eax
  435591:	jle    0x4355b3
  435593:	mov    bl,0x1
  435595:	push   0x1
  435597:	lea    eax,[ebp-0x40]
  43559a:	push   eax
  43559b:	mov    eax,esi
  43559d:	mov    cl,0x1
  43559f:	mov    edx,0x4357bc
  4355a4:	call   0x41c7c4
  4355a9:	mov    edx,DWORD PTR [ebp-0x40]
  4355ac:	mov    eax,esi
  4355ae:	call   0x404fdc
  4355b3:	mov    edi,DWORD PTR ds:0x46da9c
  4355b9:	mov    edi,DWORD PTR [edi]
  4355bb:	mov    edx,DWORD PTR [esi]
  4355bd:	mov    eax,0x4357c8
  4355c2:	call   edi
  4355c4:	test   eax,eax
  4355c6:	jle    0x4355ea
  4355c8:	mov    BYTE PTR [ebp-0x1d],0x1
  4355cc:	push   0x1
  4355ce:	lea    eax,[ebp-0x44]
  4355d1:	push   eax
  4355d2:	mov    eax,esi
  4355d4:	mov    cl,0x1
  4355d6:	mov    edx,0x4357c8
  4355db:	call   0x41c7c4
  4355e0:	mov    edx,DWORD PTR [ebp-0x44]
  4355e3:	mov    eax,esi
  4355e5:	call   0x404fdc
  4355ea:	mov    edi,DWORD PTR ds:0x46da9c
  4355f0:	mov    edi,DWORD PTR [edi]
  4355f2:	mov    edx,DWORD PTR [esi]
  4355f4:	mov    eax,0x4357d4
  4355f9:	call   edi
  4355fb:	test   eax,eax
  4355fd:	jle    0x43571e
  435603:	push   0x1
  435605:	lea    eax,[ebp-0x10]
  435608:	push   eax
  435609:	mov    eax,esi
  43560b:	mov    cl,0x1
  43560d:	mov    edx,0x4357a4
  435612:	call   0x41c7c4
  435617:	push   0x1
  435619:	lea    eax,[ebp-0x48]
  43561c:	push   eax
  43561d:	lea    eax,[ebp-0x10]
  435620:	mov    cl,0x1
  435622:	mov    edx,0x4357d4
  435627:	call   0x41c7c4
  43562c:	mov    edx,DWORD PTR [ebp-0x48]
  43562f:	xor    ecx,ecx
  435631:	mov    eax,ds:0x41be90
  435636:	call   0x41b254
  43563b:	mov    edi,eax
  43563d:	cmp    edi,0xffff
  435643:	jbe    0x43564a
  435645:	call   0x403f68
  43564a:	push   0x1
  43564c:	lea    eax,[ebp-0x4c]
  43564f:	push   eax
  435650:	lea    eax,[ebp-0x10]
  435653:	mov    cl,0x1
  435655:	mov    edx,0x4357d4
  43565a:	call   0x41c7c4
  43565f:	mov    edx,DWORD PTR [ebp-0x4c]
  435662:	xor    ecx,ecx
  435664:	mov    eax,ds:0x41be90
  435669:	call   0x41b254
  43566e:	cmp    eax,0xffff
  435673:	jbe    0x43567a
  435675:	call   0x403f68
  43567a:	mov    WORD PTR [ebp-0x1a],ax
  43567e:	push   0x1
  435680:	lea    eax,[ebp-0x50]
  435683:	push   eax
  435684:	lea    eax,[ebp-0x10]
  435687:	mov    cl,0x1
  435689:	mov    edx,0x4357a4
  43568e:	call   0x41c7c4
  435693:	mov    edx,DWORD PTR [ebp-0x50]
  435696:	xor    ecx,ecx
  435698:	mov    eax,ds:0x41be90
  43569d:	call   0x41b254
  4356a2:	cmp    eax,0xffff
  4356a7:	jbe    0x4356ae
  4356a9:	call   0x403f68
  4356ae:	mov    WORD PTR [ebp-0x1c],ax
  4356b2:	lea    ecx,[ebp-0x54]
  4356b5:	mov    edx,DWORD PTR [esi]
  4356b7:	mov    eax,ds:0x41be90
  4356bc:	call   0x41b3b8
  4356c1:	mov    edx,DWORD PTR [ebp-0x54]
  4356c4:	mov    eax,esi
  4356c6:	call   0x404fdc
  4356cb:	test   bl,bl
  4356cd:	je     0x4356d9
  4356cf:	cmp    di,0xc
  4356d3:	jne    0x435700
  4356d5:	xor    edi,edi
  4356d7:	jmp    0x435700
  4356d9:	cmp    BYTE PTR [ebp-0x1d],0x0
  4356dd:	je     0x435700
  4356df:	cmp    di,0xc
  4356e3:	jae    0x435700
  4356e5:	movzx  eax,di
  4356e8:	add    eax,0xc
  4356eb:	jno    0x4356f2
  4356ed:	call   0x403f70
  4356f2:	cmp    eax,0xffff
  4356f7:	jbe    0x4356fe
  4356f9:	call   0x403f68
  4356fe:	mov    edi,eax
  435700:	movzx  eax,WORD PTR [ebp-0x1c]
  435704:	push   eax
  435705:	push   0x0
  435707:	movzx  ecx,WORD PTR [ebp-0x1a]
  43570b:	mov    edx,edi
  43570d:	mov    eax,ds:0x41be90
  435712:	call   0x41b370
  435717:	fadd   QWORD PTR [ebp-0x18]
  43571a:	fstp   QWORD PTR [ebp-0x18]
  43571d:	fwait
  43571e:	lea    ecx,[ebp-0x58]
  435721:	mov    edx,DWORD PTR [esi]
  435723:	mov    eax,ds:0x41be90
  435728:	call   0x41b3b8
  43572d:	mov    edx,DWORD PTR [ebp-0x58]
  435730:	mov    eax,esi
  435732:	call   0x404fdc
  435737:	xor    eax,eax
  435739:	pop    edx
  43573a:	pop    ecx
  43573b:	pop    ecx
  43573c:	mov    DWORD PTR fs:[eax],edx
  43573f:	jmp    0x435753
  435741:	jmp    0x404568
  435746:	xor    eax,eax
  435748:	mov    DWORD PTR [ebp-0x18],eax
  43574b:	mov    DWORD PTR [ebp-0x14],eax
  43574e:	call   0x404978
  435753:	xor    eax,eax
  435755:	pop    edx
  435756:	pop    ecx
  435757:	pop    ecx
  435758:	mov    DWORD PTR fs:[eax],edx
  43575b:	push   0x435785
  435760:	lea    eax,[ebp-0x58]
  435763:	mov    edx,0xe
  435768:	call   0x404fac
  43576d:	lea    eax,[ebp-0x10]
  435770:	call   0x404f88
  435775:	lea    eax,[ebp-0x8]
  435778:	call   0x404f88
  43577d:	ret    
  43577e:	jmp    0x40481c
  435783:	jmp    0x435760
  435785:	fld    QWORD PTR [ebp-0x18]
  435788:	pop    edi
  435789:	pop    esi
  43578a:	pop    ebx
  43578b:	mov    esp,ebp
  43578d:	pop    ebp
  43578e:	ret    
  43578f:	add    bh,bh
  435791:	(bad)  
  435792:	(bad)  
  435793:	inc    DWORD PTR [ecx]
  435795:	add    BYTE PTR [eax],al
  435797:	add    BYTE PTR [eax+eax*1],ch
  43579a:	add    BYTE PTR [eax],al
  43579c:	(bad)  
  43579d:	(bad)  
  43579e:	(bad)  
  43579f:	inc    DWORD PTR [ecx]
  4357a1:	add    BYTE PTR [eax],al
  4357a3:	add    BYTE PTR [eax],ah
  4357a5:	add    BYTE PTR [eax],al
  4357a7:	add    bh,bh
  4357a9:	(bad)  
  4357aa:	(bad)  
  4357ab:	inc    DWORD PTR [ecx]
  4357ad:	add    BYTE PTR [eax],al
  4357af:	add    BYTE PTR ds:0xff000000,ch
  4357b5:	(bad)  
  4357b6:	(bad)  
  4357b7:	inc    DWORD PTR [edx]
  4357b9:	add    BYTE PTR [eax],al
  4357bb:	add    BYTE PTR [ecx+0x4d],al
  4357be:	add    BYTE PTR [eax],al
  4357c0:	(bad)  
  4357c1:	(bad)  
  4357c2:	(bad)  
  4357c3:	inc    DWORD PTR [edx]
  4357c5:	add    BYTE PTR [eax],al
  4357c7:	add    BYTE PTR [eax+0x4d],dl
  4357ca:	add    BYTE PTR [eax],al
  4357cc:	(bad)  
  4357cd:	(bad)  
  4357ce:	(bad)  
  4357cf:	inc    DWORD PTR [ecx]
  4357d1:	add    BYTE PTR [eax],al
  4357d3:	add    BYTE PTR [edx],bh
  4357d5:	add    BYTE PTR [eax],al
  4357d7:	add    BYTE PTR [ebp-0x75],dl
  4357da:	in     al,dx
  4357db:	push   0x0
  4357dd:	push   ebx
  4357de:	mov    ebx,eax
  4357e0:	xor    eax,eax
  4357e2:	push   ebp
  4357e3:	push   0x435858
  4357e8:	push   DWORD PTR fs:[eax]
  4357eb:	mov    DWORD PTR fs:[eax],esp
  4357ee:	mov    eax,ebx
  4357f0:	mov    edx,0x104
  4357f5:	call   0x4056a8
  4357fa:	mov    eax,DWORD PTR [ebx]
  4357fc:	call   0x405418
  435801:	push   eax
  435802:	mov    eax,DWORD PTR [ebx]
  435804:	call   0x405248
  435809:	test   eax,eax
  43580b:	jns    0x435812
  43580d:	call   0x403f68
  435812:	push   eax
  435813:	call   0x407270
  435818:	test   eax,eax
  43581a:	jns    0x435821
  43581c:	call   0x403f68
  435821:	mov    edx,ebx
  435823:	xchg   edx,eax
  435824:	call   0x4056a8
  435829:	lea    ecx,[ebp-0x4]
  43582c:	mov    edx,DWORD PTR [ebx]
  43582e:	mov    eax,ds:0x41be90
  435833:	call   0x41b154
  435838:	mov    edx,DWORD PTR [ebp-0x4]
  43583b:	mov    eax,ebx
  43583d:	call   0x404fdc
  435842:	xor    eax,eax
  435844:	pop    edx
  435845:	pop    ecx
  435846:	pop    ecx
  435847:	mov    DWORD PTR fs:[eax],edx
  43584a:	push   0x43585f
  43584f:	lea    eax,[ebp-0x4]
  435852:	call   0x404f88
  435857:	ret    
  435858:	jmp    0x40481c
  43585d:	jmp    0x43584f
  43585f:	pop    ebx
  435860:	pop    ecx
  435861:	pop    ebp
  435862:	ret    
  435863:	nop
  435864:	push   ebp
  435865:	mov    ebp,esp
  435867:	add    esp,0xfffffff4
  43586a:	push   ebx
  43586b:	push   esi
  43586c:	push   edi
  43586d:	xor    ebx,ebx
  43586f:	mov    DWORD PTR [ebp-0xc],ebx
  435872:	mov    ebx,ecx
  435874:	mov    edi,edx
  435876:	mov    DWORD PTR [ebp-0x4],eax
  435879:	xor    eax,eax
  43587b:	push   ebp
  43587c:	push   0x435925
  435881:	push   DWORD PTR fs:[eax]
  435884:	mov    DWORD PTR fs:[eax],esp
  435887:	xor    eax,eax
  435889:	mov    DWORD PTR [ebp-0x8],eax
  43588c:	mov    eax,DWORD PTR [ebp-0x4]
  43588f:	call   0x405248
  435894:	mov    esi,eax
  435896:	cmp    ebx,0xffffffff
  435899:	jne    0x4358a4
  43589b:	mov    eax,edi
  43589d:	call   0x405248
  4358a2:	mov    ebx,eax
  4358a4:	mov    eax,edi
  4358a6:	call   0x405248
  4358ab:	sub    eax,esi
  4358ad:	jno    0x4358b4
  4358af:	call   0x403f70
  4358b4:	add    eax,0x1
  4358b7:	jno    0x4358be
  4358b9:	call   0x403f70
  4358be:	cmp    ebx,eax
  4358c0:	jge    0x4358c6
  4358c2:	mov    eax,ebx
  4358c4:	jmp    0x4358e0
  4358c6:	mov    eax,edi
  4358c8:	call   0x405248
  4358cd:	sub    eax,esi
  4358cf:	jno    0x4358d6
  4358d1:	call   0x403f70
  4358d6:	add    eax,0x1
  4358d9:	jno    0x4358e0
  4358db:	call   0x403f70
  4358e0:	mov    ebx,eax
  4358e2:	cmp    ebx,0x1
  4358e5:	jl     0x43590f
  4358e7:	lea    eax,[ebp-0xc]
  4358ea:	push   eax
  4358eb:	mov    ecx,esi
  4358ed:	mov    edx,ebx
  4358ef:	mov    eax,edi
  4358f1:	call   0x405480
  4358f6:	mov    eax,DWORD PTR [ebp-0xc]
  4358f9:	mov    edx,DWORD PTR [ebp-0x4]
  4358fc:	call   0x41d948
  435901:	test   al,al
  435903:	je     0x43590a
  435905:	mov    DWORD PTR [ebp-0x8],ebx
  435908:	jmp    0x43590f
  43590a:	dec    ebx
  43590b:	test   ebx,ebx
  43590d:	jne    0x4358e7
  43590f:	xor    eax,eax
  435911:	pop    edx
  435912:	pop    ecx
  435913:	pop    ecx
  435914:	mov    DWORD PTR fs:[eax],edx
  435917:	push   0x43592c
  43591c:	lea    eax,[ebp-0xc]
  43591f:	call   0x404f88
  435924:	ret    
  435925:	jmp    0x40481c
  43592a:	jmp    0x43591c
  43592c:	mov    eax,DWORD PTR [ebp-0x8]
  43592f:	pop    edi
  435930:	pop    esi
  435931:	pop    ebx
  435932:	mov    esp,ebp
  435934:	pop    ebp
  435935:	ret    
  435936:	mov    eax,eax
  435938:	push   ebx
  435939:	push   esi
  43593a:	push   edi
  43593b:	push   ebp
  43593c:	mov    ebp,ecx
  43593e:	mov    ebx,edx
  435940:	mov    edi,eax
  435942:	mov    eax,edi
  435944:	call   0x405248
  435949:	mov    esi,eax
  43594b:	cmp    esi,ebx
  43594d:	jl     0x435953
  43594f:	test   ebx,ebx
  435951:	jge    0x43595e
  435953:	mov    eax,ebp
  435955:	mov    edx,edi
  435957:	call   0x404fdc
  43595c:	jmp    0x43597d
  43595e:	push   ebp
  43595f:	mov    edx,esi
  435961:	sub    edx,ebx
  435963:	jno    0x43596a
  435965:	call   0x403f70
  43596a:	add    edx,0x1
  43596d:	jno    0x435974
  43596f:	call   0x403f70
  435974:	mov    ecx,ebx
  435976:	mov    eax,edi
  435978:	call   0x405480
  43597d:	pop    ebp
  43597e:	pop    edi
  43597f:	pop    esi
  435980:	pop    ebx
  435981:	ret    
  435982:	mov    eax,eax
  435984:	push   ebp
  435985:	mov    ebp,esp
  435987:	add    esp,0xffffffe0
  43598a:	push   ebx
  43598b:	xor    edx,edx
  43598d:	mov    DWORD PTR [ebp-0x4],edx
  435990:	mov    ebx,eax
  435992:	xor    eax,eax
  435994:	push   ebp
  435995:	push   0x435a29
  43599a:	push   DWORD PTR fs:[eax]
  43599d:	mov    DWORD PTR fs:[eax],esp
  4359a0:	push   0x1
  4359a2:	lea    ecx,[ebp-0x4]
  4359a5:	mov    edx,ebx
  4359a7:	mov    eax,ds:0x41be90
  4359ac:	call   0x41b2c4
  4359b1:	mov    eax,DWORD PTR [ebp-0x4]
  4359b4:	push   eax
  4359b5:	mov    eax,0x435a40
  4359ba:	mov    DWORD PTR [ebp-0x20],eax
  4359bd:	mov    eax,0x435a4c
  4359c2:	mov    DWORD PTR [ebp-0x1c],eax
  4359c5:	mov    eax,0x435a58
  4359ca:	mov    DWORD PTR [ebp-0x18],eax
  4359cd:	mov    eax,0x435a64
  4359d2:	mov    DWORD PTR [ebp-0x14],eax
  4359d5:	mov    eax,0x435a70
  4359da:	mov    DWORD PTR [ebp-0x10],eax
  4359dd:	mov    eax,0x435a7c
  4359e2:	mov    DWORD PTR [ebp-0xc],eax
  4359e5:	mov    eax,0x435a88
  4359ea:	mov    DWORD PTR [ebp-0x8],eax
  4359ed:	lea    edx,[ebp-0x20]
  4359f0:	mov    ecx,0x6
  4359f5:	pop    eax
  4359f6:	call   0x41c63c
  4359fb:	add    eax,0x1
  4359fe:	jno    0x435a05
  435a00:	call   0x403f70
  435a05:	cmp    eax,0xff
  435a0a:	jbe    0x435a11
  435a0c:	call   0x403f68
  435a11:	mov    ebx,eax
  435a13:	xor    eax,eax
  435a15:	pop    edx
  435a16:	pop    ecx
  435a17:	pop    ecx
  435a18:	mov    DWORD PTR fs:[eax],edx
  435a1b:	push   0x435a30
  435a20:	lea    eax,[ebp-0x4]
  435a23:	call   0x404f88
  435a28:	ret    
  435a29:	jmp    0x40481c
  435a2e:	jmp    0x435a20
  435a30:	mov    eax,ebx
  435a32:	pop    ebx
  435a33:	mov    esp,ebp
  435a35:	pop    ebp
  435a36:	ret    
  435a37:	add    bh,bh
  435a39:	(bad)  
  435a3a:	(bad)  
  435a3b:	inc    DWORD PTR [ebx]
  435a3d:	add    BYTE PTR [eax],al
  435a3f:	add    BYTE PTR [ebx+0x55],dl
  435a42:	dec    esi
  435a43:	add    bh,bh
  435a45:	(bad)  
  435a46:	(bad)  
  435a47:	inc    DWORD PTR [ebx]
  435a49:	add    BYTE PTR [eax],al
  435a4b:	add    BYTE PTR [ebp+0x4f],cl
  435a4e:	dec    esi
  435a4f:	add    bh,bh
  435a51:	(bad)  
  435a52:	(bad)  
  435a53:	inc    DWORD PTR [ebx]
  435a55:	add    BYTE PTR [eax],al
  435a57:	add    BYTE PTR [ebp+edx*2+0x45],dl
  435a5b:	add    bh,bh
  435a5d:	(bad)  
  435a5e:	(bad)  
  435a5f:	inc    DWORD PTR [ebx]
  435a61:	add    BYTE PTR [eax],al
  435a63:	add    BYTE PTR [edi+0x45],dl
  435a66:	inc    esp
  435a67:	add    bh,bh
  435a69:	(bad)  
  435a6a:	(bad)  
  435a6b:	inc    DWORD PTR [ebx]
  435a6d:	add    BYTE PTR [eax],al
  435a6f:	add    BYTE PTR [eax+ecx*2+0x55],dl
  435a73:	add    bh,bh
  435a75:	(bad)  
  435a76:	(bad)  
  435a77:	inc    DWORD PTR [ebx]
  435a79:	add    BYTE PTR [eax],al
  435a7b:	add    BYTE PTR [esi+0x52],al
  435a7e:	dec    ecx
  435a7f:	add    bh,bh
  435a81:	(bad)  
  435a82:	(bad)  
  435a83:	inc    DWORD PTR [ebx]
  435a85:	add    BYTE PTR [eax],al
  435a87:	add    BYTE PTR [ebx+0x41],dl
  435a8a:	push   esp
  435a8b:	add    BYTE PTR [ebp-0x75],dl
  435a8e:	in     al,dx
  435a8f:	add    esp,0xffffffcc
  435a92:	push   ebx
  435a93:	xor    edx,edx
  435a95:	mov    DWORD PTR [ebp-0x4],edx
  435a98:	mov    ebx,eax
  435a9a:	xor    eax,eax
  435a9c:	push   ebp
  435a9d:	push   0x435b59
  435aa2:	push   DWORD PTR fs:[eax]
  435aa5:	mov    DWORD PTR fs:[eax],esp
  435aa8:	push   0x1
  435aaa:	lea    ecx,[ebp-0x4]
  435aad:	mov    edx,ebx
  435aaf:	mov    eax,ds:0x41be90
  435ab4:	call   0x41b2c4
  435ab9:	mov    eax,DWORD PTR [ebp-0x4]
  435abc:	push   eax
  435abd:	mov    eax,0x435b70
  435ac2:	mov    DWORD PTR [ebp-0x34],eax
  435ac5:	mov    eax,0x435b7c
  435aca:	mov    DWORD PTR [ebp-0x30],eax
  435acd:	mov    eax,0x435b88
  435ad2:	mov    DWORD PTR [ebp-0x2c],eax
  435ad5:	mov    eax,0x435b94
  435ada:	mov    DWORD PTR [ebp-0x28],eax
  435add:	mov    eax,0x435ba0
  435ae2:	mov    DWORD PTR [ebp-0x24],eax
  435ae5:	mov    eax,0x435bac
  435aea:	mov    DWORD PTR [ebp-0x20],eax
  435aed:	mov    eax,0x435bb8
  435af2:	mov    DWORD PTR [ebp-0x1c],eax
  435af5:	mov    eax,0x435bc4
  435afa:	mov    DWORD PTR [ebp-0x18],eax
  435afd:	mov    eax,0x435bd0
  435b02:	mov    DWORD PTR [ebp-0x14],eax
  435b05:	mov    eax,0x435bdc
  435b0a:	mov    DWORD PTR [ebp-0x10],eax
  435b0d:	mov    eax,0x435be8
  435b12:	mov    DWORD PTR [ebp-0xc],eax
  435b15:	mov    eax,0x435bf4
  435b1a:	mov    DWORD PTR [ebp-0x8],eax
  435b1d:	lea    edx,[ebp-0x34]
  435b20:	mov    ecx,0xb
  435b25:	pop    eax
  435b26:	call   0x41c63c
  435b2b:	add    eax,0x1
  435b2e:	jno    0x435b35
  435b30:	call   0x403f70
  435b35:	cmp    eax,0xff
  435b3a:	jbe    0x435b41
  435b3c:	call   0x403f68
  435b41:	mov    ebx,eax
  435b43:	xor    eax,eax
  435b45:	pop    edx
  435b46:	pop    ecx
  435b47:	pop    ecx
  435b48:	mov    DWORD PTR fs:[eax],edx
  435b4b:	push   0x435b60
  435b50:	lea    eax,[ebp-0x4]
  435b53:	call   0x404f88
  435b58:	ret    
  435b59:	jmp    0x40481c
  435b5e:	jmp    0x435b50
  435b60:	mov    eax,ebx
  435b62:	pop    ebx
  435b63:	mov    esp,ebp
  435b65:	pop    ebp
  435b66:	ret    
  435b67:	add    bh,bh
  435b69:	(bad)  
  435b6a:	(bad)  
  435b6b:	inc    DWORD PTR [ebx]
  435b6d:	add    BYTE PTR [eax],al
  435b6f:	add    BYTE PTR [edx+0x41],cl
  435b72:	dec    esi
  435b73:	add    bh,bh
  435b75:	(bad)  
  435b76:	(bad)  
  435b77:	inc    DWORD PTR [ebx]
  435b79:	add    BYTE PTR [eax],al
  435b7b:	add    BYTE PTR [esi+0x45],al
  435b7e:	inc    edx
  435b7f:	add    bh,bh
  435b81:	(bad)  
  435b82:	(bad)  
  435b83:	inc    DWORD PTR [ebx]
  435b85:	add    BYTE PTR [eax],al
  435b87:	add    BYTE PTR [ebp+0x41],cl
  435b8a:	push   edx
  435b8b:	add    bh,bh
  435b8d:	(bad)  
  435b8e:	(bad)  
  435b8f:	inc    DWORD PTR [ebx]
  435b91:	add    BYTE PTR [eax],al
  435b93:	add    BYTE PTR [ecx+0x50],al
  435b96:	push   edx
  435b97:	add    bh,bh
  435b99:	(bad)  
  435b9a:	(bad)  
  435b9b:	inc    DWORD PTR [ebx]
  435b9d:	add    BYTE PTR [eax],al
  435b9f:	add    BYTE PTR [ebp+0x41],cl
  435ba2:	pop    ecx
  435ba3:	add    bh,bh
  435ba5:	(bad)  
  435ba6:	(bad)  
  435ba7:	inc    DWORD PTR [ebx]
  435ba9:	add    BYTE PTR [eax],al
  435bab:	add    BYTE PTR [edx+0x55],cl
  435bae:	dec    esi
  435baf:	add    bh,bh
  435bb1:	(bad)  
  435bb2:	(bad)  
  435bb3:	inc    DWORD PTR [ebx]
  435bb5:	add    BYTE PTR [eax],al
  435bb7:	add    BYTE PTR [edx+0x55],cl
  435bba:	dec    esp
  435bbb:	add    bh,bh
  435bbd:	(bad)  
  435bbe:	(bad)  
  435bbf:	inc    DWORD PTR [ebx]
  435bc1:	add    BYTE PTR [eax],al
  435bc3:	add    BYTE PTR [ecx+0x55],al
  435bc6:	inc    edi
  435bc7:	add    bh,bh
  435bc9:	(bad)  
  435bca:	(bad)  
  435bcb:	inc    DWORD PTR [ebx]
  435bcd:	add    BYTE PTR [eax],al
  435bcf:	add    BYTE PTR [ebx+0x45],dl
  435bd2:	push   eax
  435bd3:	add    bh,bh
  435bd5:	(bad)  
  435bd6:	(bad)  
  435bd7:	inc    DWORD PTR [ebx]
  435bd9:	add    BYTE PTR [eax],al
  435bdb:	add    BYTE PTR [edi+0x43],cl
  435bde:	push   esp
  435bdf:	add    bh,bh
  435be1:	(bad)  
  435be2:	(bad)  
  435be3:	inc    DWORD PTR [ebx]
  435be5:	add    BYTE PTR [eax],al
  435be7:	add    BYTE PTR [esi+0x4f],cl
  435bea:	push   esi
  435beb:	add    bh,bh
  435bed:	(bad)  
  435bee:	(bad)  
  435bef:	inc    DWORD PTR [ebx]
  435bf1:	add    BYTE PTR [eax],al
  435bf3:	add    BYTE PTR [ebp+eax*2+0x43],al
  435bf7:	add    BYTE PTR [ebp-0x75],dl
  435bfa:	in     al,dx
  435bfb:	add    esp,0xffffffe4
  435bfe:	push   ebx
  435bff:	push   esi
  435c00:	push   edi
  435c01:	xor    edx,edx
  435c03:	mov    DWORD PTR [ebp-0x1c],edx
  435c06:	mov    DWORD PTR [ebp-0x18],edx
  435c09:	mov    DWORD PTR [ebp-0x14],edx
  435c0c:	mov    DWORD PTR [ebp-0x4],eax
  435c0f:	mov    eax,DWORD PTR [ebp-0x4]
  435c12:	call   0x405408
  435c17:	xor    eax,eax
  435c19:	push   ebp
  435c1a:	push   0x435d8f
  435c1f:	push   DWORD PTR fs:[eax]
  435c22:	mov    DWORD PTR fs:[eax],esp
  435c25:	xor    eax,eax
  435c27:	mov    DWORD PTR [ebp-0x10],eax
  435c2a:	mov    DWORD PTR [ebp-0xc],eax
  435c2d:	lea    eax,[ebp-0x4]
  435c30:	push   eax
  435c31:	lea    ecx,[ebp-0x14]
  435c34:	mov    edx,DWORD PTR [ebp-0x4]
  435c37:	mov    eax,ds:0x41be90
  435c3c:	call   0x41b2b0
  435c41:	mov    eax,DWORD PTR [ebp-0x14]
  435c44:	mov    ecx,0x5
  435c49:	mov    edx,0x1
  435c4e:	call   0x405480
  435c53:	mov    eax,DWORD PTR [ebp-0x4]
  435c56:	call   0x405248
  435c5b:	test   eax,eax
  435c5d:	jle    0x435d6c
  435c63:	mov    eax,0x1
  435c68:	mov    edx,DWORD PTR [ebp-0x4]
  435c6b:	dec    eax
  435c6c:	test   edx,edx
  435c6e:	je     0x435c75
  435c70:	cmp    eax,DWORD PTR [edx-0x4]
  435c73:	jb     0x435c7a
  435c75:	call   0x403f68
  435c7a:	inc    eax
  435c7b:	cmp    BYTE PTR [edx+eax*1-0x1],0x2d
  435c80:	je     0x435ca5
  435c82:	mov    eax,0x1
  435c87:	mov    edx,DWORD PTR [ebp-0x4]
  435c8a:	dec    eax
  435c8b:	test   edx,edx
  435c8d:	je     0x435c94
  435c8f:	cmp    eax,DWORD PTR [edx-0x4]
  435c92:	jb     0x435c99
  435c94:	call   0x403f68
  435c99:	inc    eax
  435c9a:	cmp    BYTE PTR [edx+eax*1-0x1],0x2b
  435c9f:	jne    0x435d6c
  435ca5:	xor    eax,eax
  435ca7:	push   ebp
  435ca8:	push   0x435d5a
  435cad:	push   DWORD PTR fs:[eax]
  435cb0:	mov    DWORD PTR fs:[eax],esp
  435cb3:	push   0x0
  435cb5:	push   0x0
  435cb7:	lea    eax,[ebp-0x18]
  435cba:	push   eax
  435cbb:	mov    ecx,0x2
  435cc0:	mov    edx,0x4
  435cc5:	mov    eax,DWORD PTR [ebp-0x4]
  435cc8:	call   0x405480
  435ccd:	mov    edx,DWORD PTR [ebp-0x18]
  435cd0:	mov    eax,ds:0x41be90
  435cd5:	call   0x41b200
  435cda:	cmp    eax,0xffff
  435cdf:	jbe    0x435ce6
  435ce1:	call   0x403f68
  435ce6:	push   eax
  435ce7:	lea    eax,[ebp-0x1c]
  435cea:	push   eax
  435ceb:	mov    ecx,0x2
  435cf0:	mov    edx,0x2
  435cf5:	mov    eax,DWORD PTR [ebp-0x4]
  435cf8:	call   0x405480
  435cfd:	mov    edx,DWORD PTR [ebp-0x1c]
  435d00:	mov    eax,ds:0x41be90
  435d05:	call   0x41b200
  435d0a:	mov    edx,eax
  435d0c:	cmp    edx,0xffff
  435d12:	jbe    0x435d19
  435d14:	call   0x403f68
  435d19:	mov    eax,ds:0x41be90
  435d1e:	pop    ecx
  435d1f:	call   0x41b370
  435d24:	fstp   QWORD PTR [ebp-0x10]
  435d27:	fwait
  435d28:	mov    eax,0x1
  435d2d:	mov    edx,DWORD PTR [ebp-0x4]
  435d30:	dec    eax
  435d31:	test   edx,edx
  435d33:	je     0x435d3a
  435d35:	cmp    eax,DWORD PTR [edx-0x4]
  435d38:	jb     0x435d3f
  435d3a:	call   0x403f68
  435d3f:	inc    eax
  435d40:	cmp    BYTE PTR [edx+eax*1-0x1],0x2d
  435d45:	jne    0x435d50
  435d47:	fld    QWORD PTR [ebp-0x10]
  435d4a:	fchs   
  435d4c:	fstp   QWORD PTR [ebp-0x10]
  435d4f:	fwait
  435d50:	xor    eax,eax
  435d52:	pop    edx
  435d53:	pop    ecx
  435d54:	pop    ecx
  435d55:	mov    DWORD PTR fs:[eax],edx
  435d58:	jmp    0x435d6c
  435d5a:	jmp    0x404568
  435d5f:	xor    eax,eax
  435d61:	mov    DWORD PTR [ebp-0x10],eax
  435d64:	mov    DWORD PTR [ebp-0xc],eax
  435d67:	call   0x404978
  435d6c:	xor    eax,eax
  435d6e:	pop    edx
  435d6f:	pop    ecx
  435d70:	pop    ecx
  435d71:	mov    DWORD PTR fs:[eax],edx
  435d74:	push   0x435d96
  435d79:	lea    eax,[ebp-0x1c]
  435d7c:	mov    edx,0x3
  435d81:	call   0x404fac
  435d86:	lea    eax,[ebp-0x4]
  435d89:	call   0x404f88
  435d8e:	ret    
  435d8f:	jmp    0x40481c
  435d94:	jmp    0x435d79
  435d96:	fld    QWORD PTR [ebp-0x10]
  435d99:	pop    edi
  435d9a:	pop    esi
  435d9b:	pop    ebx
  435d9c:	mov    esp,ebp
  435d9e:	pop    ebp
  435d9f:	ret    
  435da0:	push   ebp
  435da1:	mov    ebp,esp
  435da3:	add    esp,0xffffffe8
  435da6:	mov    DWORD PTR [ebp-0x4],eax
  435da9:	mov    eax,DWORD PTR [ebp-0x4]
  435dac:	call   0x405408
  435db1:	xor    eax,eax
  435db3:	push   ebp
  435db4:	push   0x435e4c
  435db9:	push   DWORD PTR fs:[eax]
  435dbc:	mov    DWORD PTR fs:[eax],esp
  435dbf:	cmp    DWORD PTR [ebp-0x4],0x0
  435dc3:	jne    0x435dcf
  435dc5:	xor    eax,eax
  435dc7:	mov    DWORD PTR [ebp-0x10],eax
  435dca:	mov    DWORD PTR [ebp-0xc],eax
  435dcd:	jmp    0x435e36
  435dcf:	lea    eax,[ebp-0x4]
  435dd2:	call   0x435330
  435dd7:	fstp   QWORD PTR [ebp-0x10]
  435dda:	fwait
  435ddb:	mov    eax,DWORD PTR [ebp-0x4]
  435dde:	call   0x405248
  435de3:	cmp    eax,0x5
  435de6:	jge    0x435df2
  435de8:	xor    eax,eax
  435dea:	mov    DWORD PTR [ebp-0x18],eax
  435ded:	mov    DWORD PTR [ebp-0x14],eax
  435df0:	jmp    0x435dfe
  435df2:	mov    eax,DWORD PTR [ebp-0x4]
  435df5:	call   0x435bf8
  435dfa:	fstp   QWORD PTR [ebp-0x18]
  435dfd:	fld    QWORD PTR [ebp-0x18]
  435e01:	fcomp  DWORD PTR ds:0x435e5c
  435e07:	fstsw  ax
  435e0a:	sahf   
  435e0b:	jae    0x435e1b
  435e0d:	fld    QWORD PTR [ebp-0x18]
  435e10:	fabs   
  435e12:	fadd   QWORD PTR [ebp-0x10]
  435e15:	fstp   QWORD PTR [ebp-0x10]
  435e18:	fwait
  435e19:	jmp    0x435e25
  435e1b:	fld    QWORD PTR [ebp-0x10]
  435e1e:	fsub   QWORD PTR [ebp-0x18]
  435e21:	fstp   QWORD PTR [ebp-0x10]
  435e24:	fwait
  435e25:	mov    eax,ds:0x41be90
  435e2a:	call   0x41bf58
  435e2f:	fadd   QWORD PTR [ebp-0x10]
  435e32:	fstp   QWORD PTR [ebp-0x10]
  435e35:	fwait
  435e36:	xor    eax,eax
  435e38:	pop    edx
  435e39:	pop    ecx
  435e3a:	pop    ecx
  435e3b:	mov    DWORD PTR fs:[eax],edx
  435e3e:	push   0x435e53
  435e43:	lea    eax,[ebp-0x4]
  435e46:	call   0x404f88
  435e4b:	ret    
  435e4c:	jmp    0x40481c
  435e51:	jmp    0x435e43
  435e53:	fld    QWORD PTR [ebp-0x10]
  435e56:	mov    esp,ebp
  435e58:	pop    ebp
  435e59:	ret    
  435e5a:	add    BYTE PTR [eax],al
  435e5c:	add    BYTE PTR [eax],al
  435e5e:	add    BYTE PTR [eax],al
  435e60:	push   ebp
  435e61:	mov    ebp,esp
  435e63:	push   0x0
  435e65:	push   0x0
  435e67:	push   ebx
  435e68:	push   esi
  435e69:	mov    esi,eax
  435e6b:	xor    eax,eax
  435e6d:	push   ebp
  435e6e:	push   0x435eee
  435e73:	push   DWORD PTR fs:[eax]
  435e76:	mov    DWORD PTR fs:[eax],esp
  435e79:	mov    bl,0x1
  435e7b:	lea    ecx,[ebp-0x4]
  435e7e:	mov    edx,esi
  435e80:	mov    eax,ds:0x41be90
  435e85:	call   0x41b2b0
  435e8a:	mov    esi,0x4
  435e8f:	push   0x1
  435e91:	lea    eax,[ebp-0x8]
  435e94:	push   eax
  435e95:	lea    eax,[ebp-0x4]
  435e98:	mov    cl,0x1
  435e9a:	mov    edx,0x435f08
  435e9f:	call   0x41c7c4
  435ea4:	mov    edx,DWORD PTR [ebp-0x8]
  435ea7:	or     ecx,0xffffffff
  435eaa:	mov    eax,ds:0x41be90
  435eaf:	call   0x41b254
  435eb4:	test   bl,bl
  435eb6:	je     0x435ec4
  435eb8:	cmp    eax,0xffffffff
  435ebb:	jle    0x435ec4
  435ebd:	cmp    eax,0x100
  435ec2:	jl     0x435ec8
  435ec4:	xor    eax,eax
  435ec6:	jmp    0x435eca
  435ec8:	mov    al,0x1
  435eca:	mov    ebx,eax
  435ecc:	test   bl,bl
  435ece:	je     0x435ed3
  435ed0:	dec    esi
  435ed1:	jne    0x435e8f
  435ed3:	xor    eax,eax
  435ed5:	pop    edx
  435ed6:	pop    ecx
  435ed7:	pop    ecx
  435ed8:	mov    DWORD PTR fs:[eax],edx
  435edb:	push   0x435ef5
  435ee0:	lea    eax,[ebp-0x8]
  435ee3:	mov    edx,0x2
  435ee8:	call   0x404fac
  435eed:	ret    
  435eee:	jmp    0x40481c
  435ef3:	jmp    0x435ee0
  435ef5:	mov    eax,ebx
  435ef7:	pop    esi
  435ef8:	pop    ebx
  435ef9:	pop    ecx
  435efa:	pop    ecx
  435efb:	pop    ebp
  435efc:	ret    
  435efd:	add    BYTE PTR [eax],al
  435eff:	add    bh,bh
  435f01:	(bad)  
  435f02:	(bad)  
  435f03:	inc    DWORD PTR [ecx]
  435f05:	add    BYTE PTR [eax],al
  435f07:	add    BYTE PTR [esi],ch
  435f09:	add    BYTE PTR [eax],al
  435f0b:	add    BYTE PTR [ebx+0x56],dl
  435f0e:	mov    ebx,eax
  435f10:	mov    esi,DWORD PTR ds:0x46da9c
  435f16:	mov    esi,DWORD PTR [esi]
  435f18:	mov    edx,ebx
  435f1a:	mov    eax,0x435f60
  435f1f:	call   esi
  435f21:	test   eax,eax
  435f23:	je     0x435f41
  435f25:	mov    eax,0x1
  435f2a:	dec    eax
  435f2b:	test   ebx,ebx
  435f2d:	je     0x435f34
  435f2f:	cmp    eax,DWORD PTR [ebx-0x4]
  435f32:	jb     0x435f39
  435f34:	call   0x403f68
  435f39:	inc    eax
  435f3a:	cmp    BYTE PTR [ebx+eax*1-0x1],0x2e
  435f3f:	je     0x435f4c
  435f41:	mov    eax,ebx
  435f43:	call   0x435e60
  435f48:	test   al,al
  435f4a:	je     0x435f51
  435f4c:	xor    eax,eax
  435f4e:	pop    esi
  435f4f:	pop    ebx
  435f50:	ret    
  435f51:	mov    al,0x1
  435f53:	pop    esi
  435f54:	pop    ebx
  435f55:	ret    
  435f56:	add    BYTE PTR [eax],al
  435f58:	(bad)  
  435f59:	(bad)  
  435f5a:	(bad)  
  435f5b:	inc    DWORD PTR [ecx]
  435f5d:	add    BYTE PTR [eax],al
  435f5f:	add    BYTE PTR [esi],ch
  435f61:	add    BYTE PTR [eax],al
  435f63:	add    BYTE PTR [ebx+0x56],dl
  435f66:	mov    esi,edx
  435f68:	mov    ebx,eax
  435f6a:	push   esi
  435f6b:	mov    esi,DWORD PTR ds:0x46da9c
  435f71:	mov    esi,DWORD PTR [esi]
  435f73:	mov    edx,ebx
  435f75:	mov    eax,0x435f9c
  435f7a:	call   esi
  435f7c:	push   eax
  435f7d:	mov    eax,ebx
  435f7f:	call   0x405248
  435f84:	mov    ecx,eax
  435f86:	mov    eax,ebx
  435f88:	pop    edx
  435f89:	call   0x405480
  435f8e:	pop    esi
  435f8f:	pop    ebx
  435f90:	ret    
  435f91:	add    BYTE PTR [eax],al
  435f93:	add    bh,bh
  435f95:	(bad)  
  435f96:	(bad)  
  435f97:	inc    DWORD PTR [ecx]
  435f99:	add    BYTE PTR [eax],al
  435f9b:	add    BYTE PTR [esi],ch
  435f9d:	add    BYTE PTR [eax],al
  435f9f:	add    BYTE PTR [ebp-0x75],dl
  435fa2:	in     al,dx
  435fa3:	push   ecx
  435fa4:	mov    ecx,0x6
  435fa9:	push   0x0
  435fab:	push   0x0
  435fad:	dec    ecx
  435fae:	jne    0x435fa9
  435fb0:	push   ecx
  435fb1:	xchg   DWORD PTR [ebp-0x4],ecx
  435fb4:	push   ebx
  435fb5:	push   esi
  435fb6:	push   edi
  435fb7:	mov    esi,ecx
  435fb9:	mov    edi,edx
  435fbb:	mov    DWORD PTR [ebp-0x8],eax
  435fbe:	mov    ebx,DWORD PTR [ebp+0x8]
  435fc1:	xor    eax,eax
  435fc3:	push   ebp
  435fc4:	push   0x4362e0
  435fc9:	push   DWORD PTR fs:[eax]
  435fcc:	mov    DWORD PTR fs:[eax],esp
  435fcf:	mov    ecx,DWORD PTR ds:0x46da9c
  435fd5:	mov    ecx,DWORD PTR [ecx]
  435fd7:	mov    edx,edi
  435fd9:	mov    eax,esi
  435fdb:	call   ecx
  435fdd:	dec    eax
  435fde:	jne    0x435fee
  435fe0:	mov    eax,ebx
  435fe2:	mov    edx,edi
  435fe4:	call   0x404fdc
  435fe9:	jmp    0x4362bd
  435fee:	mov    eax,ebx
  435ff0:	call   0x404f88
  435ff5:	lea    eax,[ebp-0x10]
  435ff8:	push   eax
  435ff9:	mov    eax,edi
  435ffb:	call   0x405248
  436000:	mov    edx,eax
  436002:	mov    ecx,0x1
  436007:	mov    eax,edi
  436009:	call   0x405480
  43600e:	mov    eax,DWORD PTR [ebp-0x10]
  436011:	mov    edx,esi
  436013:	call   0x4053b0
  436018:	je     0x436029
  43601a:	mov    eax,edi
  43601c:	call   0x405248
  436021:	test   eax,eax
  436023:	je     0x436029
  436025:	xor    eax,eax
  436027:	jmp    0x43602b
  436029:	mov    al,0x1
  43602b:	mov    BYTE PTR [ebp-0x9],al
  43602e:	lea    eax,[ebp-0x4]
  436031:	mov    edx,DWORD PTR [ebp-0x8]
  436034:	call   0x405020
  436039:	mov    eax,DWORD PTR [ebp-0x4]
  43603c:	call   0x405248
  436041:	test   eax,eax
  436043:	jle    0x436076
  436045:	lea    eax,[ebp-0x14]
  436048:	push   eax
  436049:	mov    eax,DWORD PTR [ebp-0x4]
  43604c:	call   0x405248
  436051:	mov    edx,eax
  436053:	mov    ecx,0x1
  436058:	mov    eax,DWORD PTR [ebp-0x4]
  43605b:	call   0x405480
  436060:	mov    eax,DWORD PTR [ebp-0x14]
  436063:	mov    edx,esi
  436065:	call   0x4053b0
  43606a:	je     0x436076
  43606c:	lea    eax,[ebp-0x4]
  43606f:	mov    edx,esi
  436071:	call   0x405254
  436076:	lea    eax,[ebp-0x4]
  436079:	mov    edx,edi
  43607b:	call   0x405254
  436080:	mov    eax,DWORD PTR [ebp-0x4]
  436083:	call   0x405248
  436088:	test   eax,eax
  43608a:	jle    0x436272
  436090:	mov    edi,0x1
  436095:	jmp    0x436262
  43609a:	lea    eax,[ebp-0x18]
  43609d:	mov    edx,DWORD PTR [ebp-0x4]
  4360a0:	dec    edi
  4360a1:	test   edx,edx
  4360a3:	je     0x4360aa
  4360a5:	cmp    edi,DWORD PTR [edx-0x4]
  4360a8:	jb     0x4360af
  4360aa:	call   0x403f68
  4360af:	inc    edi
  4360b0:	movzx  edx,BYTE PTR [edx+edi*1-0x1]
  4360b5:	call   0x405170
  4360ba:	mov    eax,DWORD PTR [ebp-0x18]
  4360bd:	mov    edx,esi
  4360bf:	call   0x4053b0
  4360c4:	jne    0x436131
  4360c6:	cmp    edi,0x1
  4360c9:	jne    0x4360d9
  4360cb:	mov    eax,ebx
  4360cd:	mov    edx,esi
  4360cf:	call   0x404fdc
  4360d4:	jmp    0x436258
  4360d9:	lea    eax,[ebp-0x1c]
  4360dc:	push   eax
  4360dd:	mov    eax,DWORD PTR [ebx]
  4360df:	call   0x405248
  4360e4:	mov    edx,eax
  4360e6:	mov    eax,DWORD PTR [ebx]
  4360e8:	mov    ecx,0x1
  4360ed:	call   0x405480
  4360f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4360f5:	mov    edx,esi
  4360f7:	call   0x4053b0
  4360fc:	je     0x436258
  436102:	lea    eax,[ebp-0x20]
  436105:	mov    edx,DWORD PTR [ebp-0x4]
  436108:	dec    edi
  436109:	test   edx,edx
  43610b:	je     0x436112
  43610d:	cmp    edi,DWORD PTR [edx-0x4]
  436110:	jb     0x436117
  436112:	call   0x403f68
  436117:	inc    edi
  436118:	movzx  edx,BYTE PTR [edx+edi*1-0x1]
  43611d:	call   0x405170
  436122:	mov    edx,DWORD PTR [ebp-0x20]
  436125:	mov    eax,ebx
  436127:	call   0x405254
  43612c:	jmp    0x436258
  436131:	mov    eax,DWORD PTR [ebp-0x4]
  436134:	dec    edi
  436135:	test   eax,eax
  436137:	je     0x43613e
  436139:	cmp    edi,DWORD PTR [eax-0x4]
  43613c:	jb     0x436143
  43613e:	call   0x403f68
  436143:	inc    edi
  436144:	cmp    BYTE PTR [eax+edi*1-0x1],0x2e
  436149:	jne    0x43622e
  43614f:	lea    eax,[ebp-0x24]
  436152:	push   eax
  436153:	mov    eax,DWORD PTR [ebx]
  436155:	call   0x405248
  43615a:	mov    edx,eax
  43615c:	mov    eax,DWORD PTR [ebx]
  43615e:	mov    ecx,0x1
  436163:	call   0x405480
  436168:	mov    eax,DWORD PTR [ebp-0x24]
  43616b:	mov    edx,esi
  43616d:	call   0x4053b0
  436172:	jne    0x436202
  436178:	lea    eax,[ebp-0x28]
  43617b:	push   eax
  43617c:	mov    ecx,0x2
  436181:	mov    edx,edi
  436183:	mov    eax,DWORD PTR [ebp-0x4]
  436186:	call   0x405480
  43618b:	mov    eax,DWORD PTR [ebp-0x28]
  43618e:	mov    edx,0x4362f8
  436193:	call   0x4053b0
  436198:	jne    0x436202
  43619a:	mov    eax,DWORD PTR [ebx]
  43619c:	call   0x405248
  4361a1:	mov    edx,eax
  4361a3:	mov    eax,ebx
  4361a5:	mov    ecx,0x1
  4361aa:	call   0x4054c0
  4361af:	jmp    0x4361c6
  4361b1:	mov    eax,DWORD PTR [ebx]
  4361b3:	call   0x405248
  4361b8:	mov    edx,eax
  4361ba:	mov    eax,ebx
  4361bc:	mov    ecx,0x1
  4361c1:	call   0x4054c0
  4361c6:	mov    eax,DWORD PTR [ebx]
  4361c8:	call   0x405248
  4361cd:	test   eax,eax
  4361cf:	jle    0x4361f6
  4361d1:	lea    eax,[ebp-0x2c]
  4361d4:	push   eax
  4361d5:	mov    eax,DWORD PTR [ebx]
  4361d7:	call   0x405248
  4361dc:	mov    edx,eax
  4361de:	mov    eax,DWORD PTR [ebx]
  4361e0:	mov    ecx,0x1
  4361e5:	call   0x405480
  4361ea:	mov    eax,DWORD PTR [ebp-0x2c]
  4361ed:	mov    edx,esi
  4361ef:	call   0x4053b0
  4361f4:	jne    0x4361b1
  4361f6:	add    edi,0x1
  4361f9:	jno    0x436200
  4361fb:	call   0x403f70
  436200:	jmp    0x436258
  436202:	lea    eax,[ebp-0x30]
  436205:	mov    edx,DWORD PTR [ebp-0x4]
  436208:	dec    edi
  436209:	test   edx,edx
  43620b:	je     0x436212
  43620d:	cmp    edi,DWORD PTR [edx-0x4]
  436210:	jb     0x436217
  436212:	call   0x403f68
  436217:	inc    edi
  436218:	movzx  edx,BYTE PTR [edx+edi*1-0x1]
  43621d:	call   0x405170
  436222:	mov    edx,DWORD PTR [ebp-0x30]
  436225:	mov    eax,ebx
  436227:	call   0x405254
  43622c:	jmp    0x436258
  43622e:	lea    eax,[ebp-0x34]
  436231:	mov    edx,DWORD PTR [ebp-0x4]
  436234:	dec    edi
  436235:	test   edx,edx
  436237:	je     0x43623e
  436239:	cmp    edi,DWORD PTR [edx-0x4]
  43623c:	jb     0x436243
  43623e:	call   0x403f68
  436243:	inc    edi
  436244:	movzx  edx,BYTE PTR [edx+edi*1-0x1]
  436249:	call   0x405170
  43624e:	mov    edx,DWORD PTR [ebp-0x34]
  436251:	mov    eax,ebx
  436253:	call   0x405254
  436258:	add    edi,0x1
  43625b:	jno    0x436262
  43625d:	call   0x403f70
  436262:	mov    eax,DWORD PTR [ebp-0x4]
  436265:	call   0x405248
  43626a:	cmp    edi,eax
  43626c:	jle    0x43609a
  436272:	mov    eax,DWORD PTR [ebx]
  436274:	mov    edx,esi
  436276:	call   0x4053b0
  43627b:	je     0x4362bd
  43627d:	lea    eax,[ebp-0x38]
  436280:	push   eax
  436281:	mov    eax,DWORD PTR [ebx]
  436283:	call   0x405248
  436288:	mov    edx,eax
  43628a:	mov    eax,DWORD PTR [ebx]
  43628c:	mov    ecx,0x1
  436291:	call   0x405480
  436296:	mov    eax,DWORD PTR [ebp-0x38]
  436299:	mov    edx,esi
  43629b:	call   0x4053b0
  4362a0:	jne    0x4362bd
  4362a2:	cmp    BYTE PTR [ebp-0x9],0x0
  4362a6:	jne    0x4362bd
  4362a8:	mov    eax,DWORD PTR [ebx]
  4362aa:	call   0x405248
  4362af:	mov    edx,eax
  4362b1:	mov    eax,ebx
  4362b3:	mov    ecx,0x1
  4362b8:	call   0x4054c0
  4362bd:	xor    eax,eax
  4362bf:	pop    edx
  4362c0:	pop    ecx
  4362c1:	pop    ecx
  4362c2:	mov    DWORD PTR fs:[eax],edx
  4362c5:	push   0x4362e7
  4362ca:	lea    eax,[ebp-0x38]
  4362cd:	mov    edx,0xb
  4362d2:	call   0x404fac
  4362d7:	lea    eax,[ebp-0x4]
  4362da:	call   0x404f88
  4362df:	ret    
  4362e0:	jmp    0x40481c
  4362e5:	jmp    0x4362ca
  4362e7:	pop    edi
  4362e8:	pop    esi
  4362e9:	pop    ebx
  4362ea:	mov    esp,ebp
  4362ec:	pop    ebp
  4362ed:	ret    0x4
  4362f0:	(bad)  
  4362f1:	(bad)  
  4362f2:	(bad)  
  4362f3:	inc    DWORD PTR [edx]
  4362f5:	add    BYTE PTR [eax],al
  4362f7:	add    BYTE PTR [esi],ch
  4362f9:	add    BYTE PTR cs:[eax],al
  4362fc:	mov    edx,DWORD PTR ds:0x46de9c
  436302:	movzx  eax,al
  436305:	bt     DWORD PTR [edx],eax
  436308:	setb   al
  43630b:	ret    
  43630c:	push   ebp
  43630d:	mov    ebp,esp
  43630f:	xor    eax,eax
  436311:	push   ebp
  436312:	push   0x436387
  436317:	push   DWORD PTR fs:[eax]
  43631a:	mov    DWORD PTR fs:[eax],esp
  43631d:	inc    DWORD PTR ds:0x47383c
  436323:	jne    0x436379
  436325:	mov    eax,0x4627f0
  43632a:	mov    ecx,0x7
  43632f:	mov    edx,DWORD PTR ds:0x401084
  436335:	call   0x405b50
  43633a:	mov    eax,0x46280c
  43633f:	mov    ecx,0xc
  436344:	mov    edx,DWORD PTR ds:0x401084
  43634a:	call   0x405b50
  43634f:	mov    eax,0x473834
  436354:	mov    edx,DWORD PTR ds:0x434e98
  43635a:	call   0x4063bc
  43635f:	mov    eax,0x473838
  436364:	mov    edx,DWORD PTR ds:0x434ec4
  43636a:	call   0x4063bc
  43636f:	mov    eax,0x473840
  436374:	call   0x404f88
  436379:	xor    eax,eax
  43637b:	pop    edx
  43637c:	pop    ecx
  43637d:	pop    ecx
  43637e:	mov    DWORD PTR fs:[eax],edx
  436381:	push   0x43638e
  436386:	ret    
  436387:	jmp    0x40481c
  43638c:	jmp    0x436386
  43638e:	pop    ebp
  43638f:	ret    
  436390:	fsub   QWORD PTR [ebx+0x43]
	...
  43639b:	add    al,ah
  43639d:	arpl   WORD PTR [ebx+0x0],ax
	...
  4363b0:	cmp    ah,BYTE PTR [ebx+eax*2+0x0]
  4363b4:	xor    BYTE PTR [eax],al
  4363b6:	add    BYTE PTR [eax],al
  4363b8:	nop
  4363b9:	adc    BYTE PTR [eax+0x0],al
  4363bc:	rol    BYTE PTR [edx+0x40],1
  4363bf:	add    ah,bl
  4363c1:	inc    edx
  4363c2:	inc    eax
  4363c3:	add    al,ah
  4363c5:	inc    edx
  4363c6:	inc    eax
  4363c7:	add    ah,ah
  4363c9:	inc    edx
  4363ca:	inc    eax
  4363cb:	add    al,bl
  4363cd:	inc    edx
  4363ce:	inc    eax
  4363cf:	add    BYTE PTR [eax],bh
  4363d1:	inc    eax
  4363d2:	inc    eax
  4363d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4363d7:	add    BYTE PTR [eax-0x5bffbfc0],dl
  4363dd:	fs inc ebx
  4363df:	add    BYTE PTR [esi],cl
  4363e1:	add    BYTE PTR [eax],al
  4363e3:	add    BYTE PTR [eax],al
  4363e5:	add    BYTE PTR [edx],cl
  4363e7:	add    BYTE PTR [eax],al
  4363e9:	add    BYTE PTR [eax+edx*1+0x40040],al
  4363f0:	add    BYTE PTR [eax],al
  4363f2:	test   BYTE PTR [eax],dl
  4363f4:	inc    eax
  4363f5:	add    BYTE PTR [eax],cl
  4363f7:	add    BYTE PTR [eax],al
  4363f9:	add    BYTE PTR [eax+edx*1+0xc0040],al
  436400:	add    BYTE PTR [eax],al
  436402:	test   BYTE PTR [eax],dl
  436404:	inc    eax
  436405:	add    BYTE PTR [eax],dl
  436407:	add    BYTE PTR [eax],al
  436409:	add    BYTE PTR [eax+edx*1+0x140040],al
  436410:	add    BYTE PTR [eax],al
  436412:	test   BYTE PTR [eax],dl
  436414:	inc    eax
  436415:	add    BYTE PTR [eax],bl
  436417:	add    BYTE PTR [eax],al
  436419:	add    BYTE PTR [eax+edx*1+0x1c0040],al
  436420:	add    BYTE PTR [eax],al
  436422:	test   BYTE PTR [eax],dl
  436424:	inc    eax
  436425:	add    BYTE PTR [eax],ah
  436427:	add    BYTE PTR [eax],al
  436429:	add    BYTE PTR [eax+edx*1+0x240040],al
  436430:	add    BYTE PTR [eax],al
  436432:	test   BYTE PTR [eax],dl
  436434:	inc    eax
  436435:	add    BYTE PTR [eax],ch
  436437:	add    BYTE PTR [eax],al
  436439:	add    BYTE PTR [esi],al
  43643b:	push   esp
  43643c:	dec    ecx
  43643d:	fs push ebp
  43643f:	push   edx
  436440:	dec    ecx
  436441:	lea    eax,[eax+0x0]
  436444:	nop
  436445:	fs inc ebx
	...
  436463:	add    BYTE PTR [esp+eiz*2+0xc0043],dl
  43646a:	add    BYTE PTR [eax],al
  43646c:	dec    esp
  43646d:	mov    ecx,0x42d00041
  436472:	inc    eax
  436473:	add    ah,bl
  436475:	inc    edx
  436476:	inc    eax
  436477:	add    al,ah
  436479:	inc    edx
  43647a:	inc    eax
  43647b:	add    ah,ah
  43647d:	inc    edx
  43647e:	inc    eax
  43647f:	add    al,bl
  436481:	inc    edx
  436482:	inc    eax
  436483:	add    BYTE PTR [eax],bh
  436485:	inc    eax
  436486:	inc    eax
  436487:	add    BYTE PTR [eax+eax*2+0x40],dl
  43648b:	add    BYTE PTR [eax-0x43ffbfc0],dl
  436491:	mov    ebp,0x450f0041
  436496:	dec    ecx
  436497:	fs push ebp
  436499:	push   edx
  43649a:	dec    ecx
  43649b:	inc    ebp
  43649c:	js     0x436501
  43649e:	gs jo  0x436515
  4364a1:	imul   ebp,DWORD PTR [edi+0x6e],0x84575653
  4364a8:	shl    BYTE PTR [eax+ecx*1-0x7d],cl
  4364ac:	(bad)  
  4364ad:	lock call 0x4043ac
  4364b3:	mov    esi,ecx
  4364b5:	mov    ebx,edx
  4364b7:	mov    edi,eax
  4364b9:	xor    edx,edx
  4364bb:	mov    eax,edi
  4364bd:	call   0x404070
  4364c2:	mov    eax,esi
  4364c4:	call   0x405248
  4364c9:	test   eax,eax
  4364cb:	jle    0x4364d6
  4364cd:	mov    edx,esi
  4364cf:	mov    eax,edi
  4364d1:	call   0x436588
  4364d6:	mov    eax,edi
  4364d8:	test   bl,bl
  4364da:	je     0x4364eb
  4364dc:	call   0x404404
  4364e1:	pop    DWORD PTR fs:0x0
  4364e8:	add    esp,0xc
  4364eb:	mov    eax,edi
  4364ed:	pop    edi
  4364ee:	pop    esi
  4364ef:	pop    ebx
  4364f0:	ret    
  4364f1:	lea    eax,[eax+0x0]
  4364f4:	push   ebx
  4364f5:	push   esi
  4364f6:	mov    esi,edx
  4364f8:	mov    ebx,0x1
  4364fd:	jmp    0x436576
  4364ff:	mov    eax,DWORD PTR [esi]
  436501:	dec    ebx
  436502:	test   eax,eax
  436504:	je     0x43650b
  436506:	cmp    ebx,DWORD PTR [eax-0x4]
  436509:	jb     0x436510
  43650b:	call   0x403f68
  436510:	inc    ebx
  436511:	movzx  eax,BYTE PTR [eax+ebx*1-0x1]
  436516:	call   0x4362fc
  43651b:	test   al,al
  43651d:	je     0x43652b
  43651f:	add    ebx,0x2
  436522:	jno    0x436529
  436524:	call   0x403f70
  436529:	jmp    0x436576
  43652b:	mov    eax,DWORD PTR [esi]
  43652d:	dec    ebx
  43652e:	test   eax,eax
  436530:	je     0x436537
  436532:	cmp    ebx,DWORD PTR [eax-0x4]
  436535:	jb     0x43653c
  436537:	call   0x403f68
  43653c:	inc    ebx
  43653d:	cmp    BYTE PTR [eax+ebx*1-0x1],0x5c
  436542:	jne    0x43656c
  436544:	mov    eax,esi
  436546:	call   0x405478
  43654b:	dec    ebx
  43654c:	test   eax,eax
  43654e:	je     0x436555
  436550:	cmp    ebx,DWORD PTR [eax-0x4]
  436553:	jb     0x43655a
  436555:	call   0x403f68
  43655a:	inc    ebx
  43655b:	mov    BYTE PTR [eax+ebx*1-0x1],0x2f
  436560:	add    ebx,0x1
  436563:	jno    0x43656a
  436565:	call   0x403f70
  43656a:	jmp    0x436576
  43656c:	add    ebx,0x1
  43656f:	jno    0x436576
  436571:	call   0x403f70
  436576:	mov    eax,DWORD PTR [esi]
  436578:	call   0x405248
  43657d:	cmp    ebx,eax
  43657f:	jle    0x4364ff
  436585:	pop    esi
  436586:	pop    ebx
  436587:	ret    
  436588:	push   ebp
  436589:	mov    ebp,esp
  43658b:	mov    ecx,0x5
  436590:	push   0x0
  436592:	push   0x0
  436594:	dec    ecx
  436595:	jne    0x436590
  436597:	push   ebx
  436598:	push   esi
  436599:	push   edi
  43659a:	mov    esi,edx
  43659c:	mov    ebx,eax
  43659e:	xor    eax,eax
  4365a0:	push   ebp
  4365a1:	push   0x4369f5
  4365a6:	push   DWORD PTR fs:[eax]
  4365a9:	mov    DWORD PTR fs:[eax],esp
  4365ac:	lea    eax,[ebx+0xc]
  4365af:	mov    edx,esi
  4365b1:	call   0x404fdc
  4365b6:	lea    edx,[ebx+0xc]
  4365b9:	mov    eax,DWORD PTR [ebx]
  4365bb:	call   0x4364f4
  4365c0:	lea    eax,[ebp-0x8]
  4365c3:	mov    edx,DWORD PTR [ebx+0xc]
  4365c6:	call   0x405020
  4365cb:	lea    eax,[ebx+0x18]
  4365ce:	call   0x404f88
  4365d3:	lea    eax,[ebx+0x8]
  4365d6:	call   0x404f88
  4365db:	lea    eax,[ebx+0x14]
  4365de:	call   0x404f88
  4365e3:	lea    eax,[ebx+0x4]
  4365e6:	call   0x404f88
  4365eb:	lea    eax,[ebx+0x10]
  4365ee:	call   0x404f88
  4365f3:	lea    eax,[ebx+0x1c]
  4365f6:	call   0x404f88
  4365fb:	lea    eax,[ebx+0x20]
  4365fe:	call   0x404f88
  436603:	lea    eax,[ebx+0x24]
  436606:	call   0x404f88
  43660b:	lea    eax,[ebx+0x28]
  43660e:	call   0x404f88
  436613:	mov    BYTE PTR [ebx+0x2c],0x0
  436617:	mov    esi,DWORD PTR ds:0x46da9c
  43661d:	mov    esi,DWORD PTR [esi]
  43661f:	mov    edx,DWORD PTR [ebp-0x8]
  436622:	mov    eax,0x436a0c
  436627:	call   esi
  436629:	mov    esi,eax
  43662b:	test   esi,esi
  43662d:	jle    0x4368cd
  436633:	lea    eax,[ebx+0x8]
  436636:	push   eax
  436637:	mov    ecx,esi
  436639:	sub    ecx,0x1
  43663c:	jno    0x436643
  43663e:	call   0x403f70
  436643:	mov    edx,0x1
  436648:	mov    eax,DWORD PTR [ebp-0x8]
  43664b:	call   0x405480
  436650:	mov    ecx,esi
  436652:	add    ecx,0x2
  436655:	jno    0x43665c
  436657:	call   0x403f70
  43665c:	lea    eax,[ebp-0x8]
  43665f:	mov    edx,0x1
  436664:	call   0x4054c0
  436669:	push   0x1
  43666b:	lea    eax,[ebp-0x4]
  43666e:	push   eax
  43666f:	lea    eax,[ebp-0x8]
  436672:	mov    cl,0x1
  436674:	mov    edx,0x436a18
  436679:	call   0x41c7c4
  43667e:	mov    esi,DWORD PTR ds:0x46da9c
  436684:	mov    esi,DWORD PTR [esi]
  436686:	mov    edx,DWORD PTR [ebp-0x4]
  436689:	mov    eax,0x436a24
  43668e:	call   esi
  436690:	mov    esi,eax
  436692:	lea    eax,[ebx+0x24]
  436695:	push   eax
  436696:	mov    ecx,esi
  436698:	sub    ecx,0x1
  43669b:	jno    0x4366a2
  43669d:	call   0x403f70
  4366a2:	mov    edx,0x1
  4366a7:	mov    eax,DWORD PTR [ebp-0x4]
  4366aa:	call   0x405480
  4366af:	test   esi,esi
  4366b1:	jle    0x4366c2
  4366b3:	lea    eax,[ebp-0x4]
  4366b6:	mov    ecx,esi
  4366b8:	mov    edx,0x1
  4366bd:	call   0x4054c0
  4366c2:	push   0x1
  4366c4:	lea    eax,[ebp-0xc]
  4366c7:	push   eax
  4366c8:	lea    eax,[ebx+0x24]
  4366cb:	mov    cl,0x1
  4366cd:	mov    edx,0x436a30
  4366d2:	call   0x41c7c4
  4366d7:	mov    edx,DWORD PTR [ebp-0xc]
  4366da:	lea    eax,[ebx+0x20]
  4366dd:	call   0x404fdc
  4366e2:	mov    eax,DWORD PTR [ebx+0x20]
  4366e5:	call   0x405248
  4366ea:	test   eax,eax
  4366ec:	jne    0x4366f6
  4366ee:	lea    eax,[ebx+0x24]
  4366f1:	call   0x404f88
  4366f6:	mov    esi,DWORD PTR ds:0x46da9c
  4366fc:	mov    esi,DWORD PTR [esi]
  4366fe:	mov    edx,DWORD PTR [ebp-0x4]
  436701:	mov    eax,0x436a3c
  436706:	call   esi
  436708:	test   eax,eax
  43670a:	jle    0x436786
  43670c:	mov    esi,DWORD PTR ds:0x46da9c
  436712:	mov    esi,DWORD PTR [esi]
  436714:	mov    edx,DWORD PTR [ebp-0x4]
  436717:	mov    eax,0x436a48
  43671c:	call   esi
  43671e:	mov    esi,eax
  436720:	mov    edi,DWORD PTR ds:0x46da9c
  436726:	mov    edi,DWORD PTR [edi]
  436728:	mov    edx,DWORD PTR [ebp-0x4]
  43672b:	mov    eax,0x436a3c
  436730:	call   edi
  436732:	cmp    esi,eax
  436734:	jle    0x436786
  436736:	push   0x1
  436738:	lea    eax,[ebp-0x10]
  43673b:	push   eax
  43673c:	lea    eax,[ebp-0x4]
  43673f:	mov    cl,0x1
  436741:	mov    edx,0x436a48
  436746:	call   0x41c7c4
  43674b:	mov    edx,DWORD PTR [ebp-0x10]
  43674e:	lea    eax,[ebx+0x18]
  436751:	call   0x404fdc
  436756:	push   0x1
  436758:	lea    eax,[ebp-0x14]
  43675b:	push   eax
  43675c:	lea    eax,[ebx+0x18]
  43675f:	mov    cl,0x1
  436761:	mov    edx,0x436a3c
  436766:	call   0x41c7c4
  43676b:	push   0x1
  43676d:	lea    eax,[ebp-0x18]
  436770:	push   eax
  436771:	lea    eax,[ebp-0x4]
  436774:	mov    cl,0x1
  436776:	mov    edx,0x436a30
  43677b:	call   0x41c7c4
  436780:	mov    BYTE PTR [ebx+0x2c],0x1
  436784:	jmp    0x4367a6
  436786:	push   0x1
  436788:	lea    eax,[ebp-0x1c]
  43678b:	push   eax
  43678c:	lea    eax,[ebp-0x4]
  43678f:	mov    cl,0x1
  436791:	mov    edx,0x436a30
  436796:	call   0x41c7c4
  43679b:	mov    edx,DWORD PTR [ebp-0x1c]
  43679e:	lea    eax,[ebx+0x18]
  4367a1:	call   0x404fdc
  4367a6:	lea    eax,[ebx+0x10]
  4367a9:	mov    edx,DWORD PTR [ebp-0x4]
  4367ac:	call   0x404fdc
  4367b1:	mov    esi,DWORD PTR ds:0x46da9c
  4367b7:	mov    esi,DWORD PTR [esi]
  4367b9:	mov    edx,DWORD PTR [ebp-0x8]
  4367bc:	mov    eax,0x436a54
  4367c1:	call   esi
  4367c3:	mov    edi,eax
  4367c5:	test   edi,edi
  4367c7:	jle    0x4367dc
  4367c9:	mov    ecx,edi
  4367cb:	mov    edx,DWORD PTR [ebp-0x8]
  4367ce:	mov    eax,0x436a18
  4367d3:	call   0x435864
  4367d8:	mov    esi,eax
  4367da:	jmp    0x436819
  4367dc:	mov    esi,DWORD PTR ds:0x46da9c
  4367e2:	mov    esi,DWORD PTR [esi]
  4367e4:	mov    edx,DWORD PTR [ebp-0x8]
  4367e7:	mov    eax,0x436a60
  4367ec:	call   esi
  4367ee:	mov    edi,eax
  4367f0:	test   edi,edi
  4367f2:	jle    0x436807
  4367f4:	mov    ecx,edi
  4367f6:	mov    edx,DWORD PTR [ebp-0x8]
  4367f9:	mov    eax,0x436a18
  4367fe:	call   0x435864
  436803:	mov    esi,eax
  436805:	jmp    0x436819
  436807:	or     ecx,0xffffffff
  43680a:	mov    edx,DWORD PTR [ebp-0x8]
  43680d:	mov    eax,0x436a18
  436812:	call   0x435864
  436817:	mov    esi,eax
  436819:	lea    eax,[ebp-0x20]
  43681c:	push   eax
  43681d:	mov    ecx,esi
  43681f:	mov    edx,0x1
  436824:	mov    eax,DWORD PTR [ebp-0x8]
  436827:	call   0x405480
  43682c:	mov    ecx,DWORD PTR [ebp-0x20]
  43682f:	lea    eax,[ebx+0x14]
  436832:	mov    edx,0x436a18
  436837:	call   0x4052a0
  43683c:	test   edi,edi
  43683e:	jle    0x436883
  436840:	lea    eax,[ebx+0x4]
  436843:	push   eax
  436844:	mov    ecx,edi
  436846:	sub    ecx,0x1
  436849:	jno    0x436850
  43684b:	call   0x403f70
  436850:	mov    edx,0x1
  436855:	mov    eax,DWORD PTR [ebp-0x8]
  436858:	call   0x405480
  43685d:	mov    ecx,edi
  43685f:	sub    ecx,0x1
  436862:	jno    0x436869
  436864:	call   0x403f70
  436869:	lea    eax,[ebp-0x8]
  43686c:	mov    edx,0x1
  436871:	call   0x4054c0
  436876:	lea    eax,[ebx+0x28]
  436879:	mov    edx,DWORD PTR [ebp-0x8]
  43687c:	call   0x404fdc
  436881:	jmp    0x43688e
  436883:	lea    eax,[ebx+0x4]
  436886:	mov    edx,DWORD PTR [ebp-0x8]
  436889:	call   0x404fdc
  43688e:	lea    eax,[ebx+0x4]
  436891:	mov    ecx,esi
  436893:	mov    edx,0x1
  436898:	call   0x4054c0
  43689d:	lea    eax,[ebx+0x1c]
  4368a0:	mov    edx,DWORD PTR [ebx+0x4]
  4368a3:	call   0x404fdc
  4368a8:	push   0x1
  4368aa:	lea    eax,[ebp-0x24]
  4368ad:	push   eax
  4368ae:	lea    eax,[ebx+0x1c]
  4368b1:	mov    cl,0x1
  4368b3:	mov    edx,0x436a6c
  4368b8:	call   0x41c7c4
  4368bd:	mov    edx,DWORD PTR [ebp-0x24]
  4368c0:	lea    eax,[ebx+0x4]
  4368c3:	call   0x404fdc
  4368c8:	jmp    0x4369a9
  4368cd:	mov    esi,DWORD PTR ds:0x46da9c
  4368d3:	mov    esi,DWORD PTR [esi]
  4368d5:	mov    edx,DWORD PTR [ebp-0x8]
  4368d8:	mov    eax,0x436a54
  4368dd:	call   esi
  4368df:	mov    edi,eax
  4368e1:	test   edi,edi
  4368e3:	jle    0x4368f8
  4368e5:	mov    ecx,edi
  4368e7:	mov    edx,DWORD PTR [ebp-0x8]
  4368ea:	mov    eax,0x436a18
  4368ef:	call   0x435864
  4368f4:	mov    esi,eax
  4368f6:	jmp    0x436935
  4368f8:	mov    esi,DWORD PTR ds:0x46da9c
  4368fe:	mov    esi,DWORD PTR [esi]
  436900:	mov    edx,DWORD PTR [ebp-0x8]
  436903:	mov    eax,0x436a60
  436908:	call   esi
  43690a:	mov    edi,eax
  43690c:	test   edi,edi
  43690e:	jle    0x436923
  436910:	mov    ecx,edi
  436912:	mov    edx,DWORD PTR [ebp-0x8]
  436915:	mov    eax,0x436a18
  43691a:	call   0x435864
  43691f:	mov    esi,eax
  436921:	jmp    0x436935
  436923:	or     ecx,0xffffffff
  436926:	mov    edx,DWORD PTR [ebp-0x8]
  436929:	mov    eax,0x436a18
  43692e:	call   0x435864
  436933:	mov    esi,eax
  436935:	lea    eax,[ebx+0x14]
  436938:	push   eax
  436939:	mov    ecx,esi
  43693b:	mov    edx,0x1
  436940:	mov    eax,DWORD PTR [ebp-0x8]
  436943:	call   0x405480
  436948:	test   edi,edi
  43694a:	jle    0x43698f
  43694c:	lea    eax,[ebx+0x4]
  43694f:	push   eax
  436950:	mov    ecx,edi
  436952:	sub    ecx,0x1
  436955:	jno    0x43695c
  436957:	call   0x403f70
  43695c:	mov    edx,0x1
  436961:	mov    eax,DWORD PTR [ebp-0x8]
  436964:	call   0x405480
  436969:	mov    ecx,edi
  43696b:	sub    ecx,0x1
  43696e:	jno    0x436975
  436970:	call   0x403f70
  436975:	lea    eax,[ebp-0x8]
  436978:	mov    edx,0x1
  43697d:	call   0x4054c0
  436982:	lea    eax,[ebx+0x28]
  436985:	mov    edx,DWORD PTR [ebp-0x8]
  436988:	call   0x404fdc
  43698d:	jmp    0x43699a
  43698f:	lea    eax,[ebx+0x4]
  436992:	mov    edx,DWORD PTR [ebp-0x8]
  436995:	call   0x404fdc
  43699a:	lea    eax,[ebx+0x4]
  43699d:	mov    ecx,esi
  43699f:	mov    edx,0x1
  4369a4:	call   0x4054c0
  4369a9:	cmp    DWORD PTR [ebx+0x1c],0x0
  4369ad:	jne    0x4369da
  4369af:	lea    eax,[ebx+0x1c]
  4369b2:	mov    edx,DWORD PTR [ebx+0x28]
  4369b5:	call   0x404fdc
  4369ba:	push   0x1
  4369bc:	lea    eax,[ebp-0x28]
  4369bf:	push   eax
  4369c0:	lea    eax,[ebx+0x1c]
  4369c3:	mov    cl,0x1
  4369c5:	mov    edx,0x436a6c
  4369ca:	call   0x41c7c4
  4369cf:	mov    edx,DWORD PTR [ebp-0x28]
  4369d2:	lea    eax,[ebx+0x28]
  4369d5:	call   0x404fdc
  4369da:	xor    eax,eax
  4369dc:	pop    edx
  4369dd:	pop    ecx
  4369de:	pop    ecx
  4369df:	mov    DWORD PTR fs:[eax],edx
  4369e2:	push   0x4369fc
  4369e7:	lea    eax,[ebp-0x28]
  4369ea:	mov    edx,0xa
  4369ef:	call   0x404fac
  4369f4:	ret    
  4369f5:	jmp    0x40481c
  4369fa:	jmp    0x4369e7
  4369fc:	pop    edi
  4369fd:	pop    esi
  4369fe:	pop    ebx
  4369ff:	mov    esp,ebp
  436a01:	pop    ebp
  436a02:	ret    
  436a03:	add    bh,bh
  436a05:	(bad)  
  436a06:	(bad)  
  436a07:	inc    DWORD PTR [ebx]
  436a09:	add    BYTE PTR [eax],al
  436a0b:	add    BYTE PTR [edx],bh
  436a0d:	das    
  436a0e:	das    
  436a0f:	add    bh,bh
  436a11:	(bad)  
  436a12:	(bad)  
  436a13:	inc    DWORD PTR [ecx]
  436a15:	add    BYTE PTR [eax],al
  436a17:	add    BYTE PTR [edi],ch
  436a19:	add    BYTE PTR [eax],al
  436a1b:	add    bh,bh
  436a1d:	(bad)  
  436a1e:	(bad)  
  436a1f:	inc    DWORD PTR [ecx]
  436a21:	add    BYTE PTR [eax],al
  436a23:	add    BYTE PTR [eax+0x0],al
  436a26:	add    BYTE PTR [eax],al
  436a28:	(bad)  
  436a29:	(bad)  
  436a2a:	(bad)  
  436a2b:	inc    DWORD PTR [ecx]
  436a2d:	add    BYTE PTR [eax],al
  436a2f:	add    BYTE PTR [edx],bh
  436a31:	add    BYTE PTR [eax],al
  436a33:	add    bh,bh
  436a35:	(bad)  
  436a36:	(bad)  
  436a37:	inc    DWORD PTR [ecx]
  436a39:	add    BYTE PTR [eax],al
  436a3b:	add    BYTE PTR [ebx+0x0],bl
  436a3e:	add    BYTE PTR [eax],al
  436a40:	(bad)  
  436a41:	(bad)  
  436a42:	(bad)  
  436a43:	inc    DWORD PTR [ecx]
  436a45:	add    BYTE PTR [eax],al
  436a47:	add    BYTE PTR [ebp+0x0],bl
  436a4a:	add    BYTE PTR [eax],al
  436a4c:	(bad)  
  436a4d:	(bad)  
  436a4e:	(bad)  
  436a4f:	inc    DWORD PTR [ecx]
  436a51:	add    BYTE PTR [eax],al
  436a53:	add    BYTE PTR [edi],bh
  436a55:	add    BYTE PTR [eax],al
  436a57:	add    bh,bh
  436a59:	(bad)  
  436a5a:	(bad)  
  436a5b:	inc    DWORD PTR [ecx]
  436a5d:	add    BYTE PTR [eax],al
  436a5f:	add    BYTE PTR ds:0xff000000,bh
  436a65:	(bad)  
  436a66:	(bad)  
  436a67:	inc    DWORD PTR [ecx]
  436a69:	add    BYTE PTR [eax],al
  436a6b:	add    BYTE PTR [ebx],ah
  436a6d:	add    BYTE PTR [eax],al
  436a6f:	add    BYTE PTR [ebp-0x75],dl
  436a72:	in     al,dx
  436a73:	push   0x0
  436a75:	push   ebx
  436a76:	push   esi
  436a77:	mov    esi,edx
  436a79:	mov    ebx,eax
  436a7b:	xor    eax,eax
  436a7d:	push   ebp
  436a7e:	push   0x436acb
  436a83:	push   DWORD PTR fs:[eax]
  436a86:	mov    DWORD PTR fs:[eax],esp
  436a89:	lea    ecx,[ebp-0x4]
  436a8c:	movzx  edx,BYTE PTR ds:0x436ad8
  436a93:	mov    eax,ebx
  436a95:	call   0x436ae0
  436a9a:	mov    edx,DWORD PTR [ebp-0x4]
  436a9d:	lea    eax,[ebx+0xc]
  436aa0:	call   0x404fdc
  436aa5:	mov    ecx,esi
  436aa7:	movzx  edx,BYTE PTR ds:0x436adc
  436aae:	mov    eax,ebx
  436ab0:	call   0x436ae0
  436ab5:	xor    eax,eax
  436ab7:	pop    edx
  436ab8:	pop    ecx
  436ab9:	pop    ecx
  436aba:	mov    DWORD PTR fs:[eax],edx
  436abd:	push   0x436ad2
  436ac2:	lea    eax,[ebp-0x4]
  436ac5:	call   0x404f88
  436aca:	ret    
  436acb:	jmp    0x40481c
  436ad0:	jmp    0x436ac2
  436ad2:	pop    esi
  436ad3:	pop    ebx
  436ad4:	pop    ecx
  436ad5:	pop    ebp
  436ad6:	ret    
  436ad7:	add    BYTE PTR [ebx],al
  436ad9:	add    BYTE PTR [eax],al
  436adb:	add    BYTE PTR [eax],al
  436add:	add    BYTE PTR [eax],al
  436adf:	add    BYTE PTR [ebp-0x75],dl
  436ae2:	in     al,dx
  436ae3:	push   0x0
  436ae5:	push   0x0
  436ae7:	push   0x0
  436ae9:	push   0x0
  436aeb:	push   ebx
  436aec:	push   esi
  436aed:	mov    esi,ecx
  436aef:	mov    BYTE PTR [ebp-0x5],dl
  436af2:	mov    ebx,eax
  436af4:	xor    eax,eax
  436af6:	push   ebp
  436af7:	push   0x436c44
  436afc:	push   DWORD PTR fs:[eax]
  436aff:	mov    DWORD PTR fs:[eax],esp
  436b02:	cmp    DWORD PTR [ebx+0x8],0x0
  436b06:	jne    0x436b29
  436b08:	lea    edx,[ebp-0xc]
  436b0b:	mov    eax,ds:0x46dcb4
  436b10:	call   0x406f48
  436b15:	mov    ecx,DWORD PTR [ebp-0xc]
  436b18:	mov    dl,0x1
  436b1a:	mov    eax,ds:0x436444
  436b1f:	call   0x41bdbc
  436b24:	call   0x4048fc
  436b29:	lea    eax,[ebp-0x4]
  436b2c:	mov    ecx,0x436c5c
  436b31:	mov    edx,DWORD PTR [ebx+0x8]
  436b34:	call   0x4052a0
  436b39:	cmp    DWORD PTR [ebx+0x20],0x0
  436b3d:	je     0x436b7b
  436b3f:	test   BYTE PTR [ebp-0x5],0x1
  436b43:	je     0x436b7b
  436b45:	lea    eax,[ebp-0x4]
  436b48:	mov    edx,DWORD PTR [ebx+0x20]
  436b4b:	call   0x405254
  436b50:	cmp    DWORD PTR [ebx+0x24],0x0
  436b54:	je     0x436b6e
  436b56:	push   DWORD PTR [ebp-0x4]
  436b59:	push   0x436c68
  436b5e:	push   DWORD PTR [ebx+0x24]
  436b61:	lea    eax,[ebp-0x4]
  436b64:	mov    edx,0x3
  436b69:	call   0x40531c
  436b6e:	lea    eax,[ebp-0x4]
  436b71:	mov    edx,0x436c74
  436b76:	call   0x405254
  436b7b:	cmp    DWORD PTR [ebx+0x18],0x0
  436b7f:	jne    0x436ba2
  436b81:	lea    edx,[ebp-0x10]
  436b84:	mov    eax,ds:0x46db84
  436b89:	call   0x406f48
  436b8e:	mov    ecx,DWORD PTR [ebp-0x10]
  436b91:	mov    dl,0x1
  436b93:	mov    eax,ds:0x436444
  436b98:	call   0x41bdbc
  436b9d:	call   0x4048fc
  436ba2:	lea    eax,[ebp-0x4]
  436ba5:	mov    edx,DWORD PTR [ebx+0x18]
  436ba8:	call   0x405254
  436bad:	cmp    DWORD PTR [ebx+0x10],0x0
  436bb1:	je     0x436bda
  436bb3:	mov    eax,DWORD PTR [ebx+0x10]
  436bb6:	mov    edx,0x436c80
  436bbb:	call   0x4053b0
  436bc0:	je     0x436bda
  436bc2:	push   DWORD PTR [ebp-0x4]
  436bc5:	push   0x436c68
  436bca:	push   DWORD PTR [ebx+0x10]
  436bcd:	lea    eax,[ebp-0x4]
  436bd0:	mov    edx,0x3
  436bd5:	call   0x40531c
  436bda:	push   DWORD PTR [ebp-0x4]
  436bdd:	push   DWORD PTR [ebx+0x14]
  436be0:	push   DWORD PTR [ebx+0x4]
  436be3:	push   DWORD PTR [ebx+0x28]
  436be6:	lea    eax,[ebp-0x4]
  436be9:	mov    edx,0x4
  436bee:	call   0x40531c
  436bf3:	cmp    DWORD PTR [ebx+0x1c],0x0
  436bf7:	je     0x436c17
  436bf9:	test   BYTE PTR [ebp-0x5],0x2
  436bfd:	je     0x436c17
  436bff:	push   DWORD PTR [ebp-0x4]
  436c02:	push   0x436c8c
  436c07:	push   DWORD PTR [ebx+0x1c]
  436c0a:	lea    eax,[ebp-0x4]
  436c0d:	mov    edx,0x3
  436c12:	call   0x40531c
  436c17:	mov    eax,esi
  436c19:	mov    edx,DWORD PTR [ebp-0x4]
  436c1c:	call   0x404fdc
  436c21:	xor    eax,eax
  436c23:	pop    edx
  436c24:	pop    ecx
  436c25:	pop    ecx
  436c26:	mov    DWORD PTR fs:[eax],edx
  436c29:	push   0x436c4b
  436c2e:	lea    eax,[ebp-0x10]
  436c31:	mov    edx,0x2
  436c36:	call   0x404fac
  436c3b:	lea    eax,[ebp-0x4]
  436c3e:	call   0x404f88
  436c43:	ret    
  436c44:	jmp    0x40481c
  436c49:	jmp    0x436c2e
  436c4b:	pop    esi
  436c4c:	pop    ebx
  436c4d:	mov    esp,ebp
  436c4f:	pop    ebp
  436c50:	ret    
  436c51:	add    BYTE PTR [eax],al
  436c53:	add    bh,bh
  436c55:	(bad)  
  436c56:	(bad)  
  436c57:	inc    DWORD PTR [ebx]
  436c59:	add    BYTE PTR [eax],al
  436c5b:	add    BYTE PTR [edx],bh
  436c5d:	das    
  436c5e:	das    
  436c5f:	add    bh,bh
  436c61:	(bad)  
  436c62:	(bad)  
  436c63:	inc    DWORD PTR [ecx]
  436c65:	add    BYTE PTR [eax],al
  436c67:	add    BYTE PTR [edx],bh
  436c69:	add    BYTE PTR [eax],al
  436c6b:	add    bh,bh
  436c6d:	(bad)  
  436c6e:	(bad)  
  436c6f:	inc    DWORD PTR [ecx]
  436c71:	add    BYTE PTR [eax],al
  436c73:	add    BYTE PTR [eax+0x0],al
  436c76:	add    BYTE PTR [eax],al
  436c78:	(bad)  
  436c79:	(bad)  
  436c7a:	(bad)  
  436c7b:	inc    DWORD PTR [edx]
  436c7d:	add    BYTE PTR [eax],al
  436c7f:	add    BYTE PTR [eax],bh
  436c81:	xor    BYTE PTR [eax],al
  436c83:	add    bh,bh
  436c85:	(bad)  
  436c86:	(bad)  
  436c87:	inc    DWORD PTR [ecx]
  436c89:	add    BYTE PTR [eax],al
  436c8b:	add    BYTE PTR [ebx],ah
  436c8d:	add    BYTE PTR [eax],al
  436c8f:	add    ah,bl
  436c91:	ins    BYTE PTR es:[edi],dx
  436c92:	inc    ebx
	...
  436c9b:	add    BYTE PTR [ebp+ebp*2+0x43],dh
  436c9f:	add    BYTE PTR [eax+0x436d],bl
	...
  436cad:	add    BYTE PTR [eax],al
  436caf:	add    BYTE PTR [esi+0x4400436d],al
  436cb5:	add    BYTE PTR [eax],al
  436cb7:	add    al,dh
  436cb9:	sub    al,0x41
  436cbb:	add    al,dl
  436cbd:	inc    edx
  436cbe:	inc    eax
  436cbf:	add    ah,bl
  436cc1:	inc    edx
  436cc2:	inc    eax
  436cc3:	add    al,ah
  436cc5:	inc    edx
  436cc6:	inc    eax
  436cc7:	add    ah,ah
  436cc9:	inc    edx
  436cca:	inc    eax
  436ccb:	add    al,bl
  436ccd:	inc    edx
  436cce:	inc    eax
  436ccf:	add    BYTE PTR [eax],bh
  436cd1:	inc    eax
  436cd2:	inc    eax
  436cd3:	add    BYTE PTR [eax+eax*2+0x40],dl
  436cd7:	add    BYTE PTR [eax],ch
  436cd9:	pop    ebp
  436cda:	inc    ecx
  436cdb:	add    BYTE PTR [eax+0x41],ch
  436cde:	inc    ecx
  436cdf:	add    BYTE PTR [eax-0x7fffbeb4],ch
  436ce5:	dec    ebx
  436ce6:	inc    ecx
  436ce7:	add    al,ah
  436ce9:	pop    edi
  436cea:	inc    ecx
  436ceb:	add    BYTE PTR [eax+eiz*2],dl
  436cee:	inc    ecx
  436cef:	add    BYTE PTR [eax],bl
  436cf1:	pusha  
  436cf2:	inc    ecx
  436cf3:	add    BYTE PTR [eax+eiz*2],bl
  436cf6:	inc    ecx
  436cf7:	add    BYTE PTR [eax+edx*2+0x41],ch
  436cfb:	add    BYTE PTR [ecx+eiz*2+0x61f00041],dl
  436d02:	inc    ecx
  436d03:	add    ah,al
  436d05:	bound  eax,QWORD PTR [ecx+0x0]
  436d08:	in     al,dx
  436d09:	push   edi
  436d0a:	inc    ecx
  436d0b:	add    al,ah
  436d0d:	bound  eax,QWORD PTR [ecx+0x0]
  436d10:	pusha  
  436d11:	arpl   WORD PTR [ecx+0x0],ax
  436d14:	test   BYTE PTR [ebp+0x41],bl
  436d17:	add    BYTE PTR [ebp+ebx*2+0x4ac80041],dl
  436d1e:	inc    ecx
  436d1f:	add    BYTE PTR [eax],dh
  436d21:	pop    esi
  436d22:	inc    ecx
  436d23:	add    BYTE PTR [eax+0x5e],dh
  436d26:	inc    ecx
  436d27:	add    ah,bl
  436d29:	pop    esi
  436d2a:	inc    ecx
  436d2b:	add    BYTE PTR [eax],bl
  436d2d:	push   eax
  436d2e:	inc    ecx
  436d2f:	add    BYTE PTR [eax+0x60],bh
  436d32:	inc    ecx
  436d33:	add    BYTE PTR [edx+edx*2+0x53900041],bh
  436d3a:	inc    ecx
  436d3b:	add    BYTE PTR [eax+eiz*2+0x60c40041],dh
  436d42:	inc    ecx
  436d43:	add    ah,dh
  436d45:	push   ebx
  436d46:	inc    ecx
  436d47:	add    BYTE PTR [eax+0x54],cl
  436d4a:	inc    ecx
  436d4b:	add    ah,dh
  436d4d:	push   esp
  436d4e:	inc    ecx
  436d4f:	add    BYTE PTR [eax-0x1fffbeaa],cl
  436d55:	push   esi
  436d56:	inc    ecx
  436d57:	add    BYTE PTR [edi+edx*2+0x5df80041],bl
  436d5e:	inc    ecx
  436d5f:	add    BYTE PTR [esi+ebx*2],dl
  436d62:	inc    ecx
  436d63:	add    BYTE PTR [eax],bl
  436d65:	popa   
  436d66:	inc    ecx
  436d67:	add    BYTE PTR [edi+ebx*2+0x41],bl
  436d6b:	add    BYTE PTR [eax],bl
  436d6d:	arpl   WORD PTR [ecx+0x0],ax
  436d70:	sub    BYTE PTR [ebx+0x41],ah
  436d73:	add    BYTE PTR [esi],cl
  436d75:	add    BYTE PTR [eax],al
  436d77:	add    BYTE PTR [eax],al
  436d79:	add    BYTE PTR [ecx],al
  436d7b:	add    BYTE PTR [eax],al
  436d7d:	add    BYTE PTR [eax+edx*1+0x380040],al
  436d84:	add    BYTE PTR [eax],al
  436d86:	or     eax,0x48644954
  436d8b:	gs popa 
  436d8d:	fs gs jb 0x436ddd
  436d91:	imul   esi,DWORD PTR [ebx+0x74],0x436d98
  436d98:	pop    es
  436d99:	or     eax,0x48644954
  436d9e:	gs popa 
  436da0:	fs gs jb 0x436df0
  436da4:	imul   esi,DWORD PTR [ebx+0x74],0x436cdc
  436dab:	loopne 0x436dda
  436dad:	inc    ecx
  436dae:	add    BYTE PTR [eax],al
  436db0:	add    BYTE PTR [ecx+ecx*2],cl
  436db3:	fs dec eax
  436db5:	gs popa 
  436db7:	fs gs jb 0x436e07
  436dbb:	imul   esi,DWORD PTR [ebx+0x74],0x56530000
  436dc2:	test   dl,dl
  436dc4:	je     0x436dce
  436dc6:	add    esp,0xfffffff0
  436dc9:	call   0x4043ac
  436dce:	mov    ebx,edx
  436dd0:	mov    esi,eax
  436dd2:	xor    edx,edx
  436dd4:	mov    eax,esi
  436dd6:	call   0x404070
  436ddb:	lea    eax,[esi+0x38]
  436dde:	mov    edx,0x436e20
  436de3:	call   0x404fdc
  436de8:	mov    BYTE PTR [esi+0x3c],0x0
  436dec:	mov    BYTE PTR [esi+0x3d],0x1
  436df0:	mov    BYTE PTR [esi+0x3e],0x1
  436df4:	mov    DWORD PTR [esi+0x40],0x4e
  436dfb:	mov    eax,esi
  436dfd:	test   bl,bl
  436dff:	je     0x436e10
  436e01:	call   0x404404
  436e06:	pop    DWORD PTR fs:0x0
  436e0d:	add    esp,0xc
  436e10:	mov    eax,esi
  436e12:	pop    esi
  436e13:	pop    ebx
  436e14:	ret    
  436e15:	add    BYTE PTR [eax],al
  436e17:	add    bh,bh
  436e19:	(bad)  
  436e1a:	(bad)  
  436e1b:	inc    DWORD PTR [edx]
  436e1d:	add    BYTE PTR [eax],al
  436e1f:	add    BYTE PTR [edx],bh
  436e21:	and    BYTE PTR [eax],al
  436e23:	add    BYTE PTR [ebp-0x75],dl
  436e26:	in     al,dx
  436e27:	push   0x0
  436e29:	push   ebx
  436e2a:	push   esi
  436e2b:	push   edi
  436e2c:	mov    esi,edx
  436e2e:	mov    ebx,eax
  436e30:	xor    eax,eax
  436e32:	push   ebp
  436e33:	push   0x436ea1
  436e38:	push   DWORD PTR fs:[eax]
  436e3b:	mov    DWORD PTR fs:[eax],esp
  436e3e:	add    esi,0x1
  436e41:	jno    0x436e48
  436e43:	call   0x403f70
  436e48:	mov    eax,ebx
  436e4a:	mov    edx,DWORD PTR [eax]
  436e4c:	call   DWORD PTR [edx+0x14]
  436e4f:	cmp    esi,eax
  436e51:	jge    0x436e8b
  436e53:	jmp    0x436e5e
  436e55:	mov    edx,esi
  436e57:	mov    eax,ebx
  436e59:	mov    ecx,DWORD PTR [eax]
  436e5b:	call   DWORD PTR [ecx+0x48]
  436e5e:	mov    eax,ebx
  436e60:	mov    edx,DWORD PTR [eax]
  436e62:	call   DWORD PTR [edx+0x14]
  436e65:	cmp    esi,eax
  436e67:	jge    0x436e8b
  436e69:	lea    ecx,[ebp-0x4]
  436e6c:	mov    edx,esi
  436e6e:	mov    eax,ebx
  436e70:	mov    edi,DWORD PTR [eax]
  436e72:	call   DWORD PTR [edi+0xc]
  436e75:	mov    eax,DWORD PTR [ebp-0x4]
  436e78:	mov    ecx,0x436eb8
  436e7d:	mov    edx,0x1
  436e82:	call   0x41d964
  436e87:	test   al,al
  436e89:	jne    0x436e55
  436e8b:	xor    eax,eax
  436e8d:	pop    edx
  436e8e:	pop    ecx
  436e8f:	pop    ecx
  436e90:	mov    DWORD PTR fs:[eax],edx
  436e93:	push   0x436ea8
  436e98:	lea    eax,[ebp-0x4]
  436e9b:	call   0x404f88
  436ea0:	ret    
  436ea1:	jmp    0x40481c
  436ea6:	jmp    0x436e98
  436ea8:	pop    edi
  436ea9:	pop    esi
  436eaa:	pop    ebx
  436eab:	pop    ecx
  436eac:	pop    ebp
  436ead:	ret    
  436eae:	add    BYTE PTR [eax],al
  436eb0:	(bad)  
  436eb1:	(bad)  
  436eb2:	(bad)  
  436eb3:	inc    DWORD PTR [edx]
  436eb5:	add    BYTE PTR [eax],al
  436eb7:	add    BYTE PTR [eax],ah
  436eb9:	or     DWORD PTR [eax],eax
  436ebb:	add    BYTE PTR [ebp-0x75],dl
  436ebe:	in     al,dx
  436ebf:	add    esp,0xffffffec
  436ec2:	push   ebx
  436ec3:	push   esi
  436ec4:	xor    ebx,ebx
  436ec6:	mov    DWORD PTR [ebp-0x14],ebx
  436ec9:	mov    DWORD PTR [ebp-0x10],ebx
  436ecc:	mov    DWORD PTR [ebp-0xc],ecx
  436ecf:	mov    DWORD PTR [ebp-0x8],edx
  436ed2:	mov    DWORD PTR [ebp-0x4],eax
  436ed5:	xor    eax,eax
  436ed7:	push   ebp
  436ed8:	push   0x436f57
  436edd:	push   DWORD PTR fs:[eax]
  436ee0:	mov    DWORD PTR fs:[eax],esp
  436ee3:	cmp    DWORD PTR [ebp-0xc],0x0
  436ee7:	je     0x436f3c
  436ee9:	mov    eax,DWORD PTR [ebp-0x4]
  436eec:	mov    edx,DWORD PTR [eax]
  436eee:	call   DWORD PTR [edx+0x14]
  436ef1:	mov    esi,eax
  436ef3:	sub    esi,0x1
  436ef6:	jno    0x436efd
  436ef8:	call   0x403f70
  436efd:	test   esi,esi
  436eff:	jl     0x436f3c
  436f01:	inc    esi
  436f02:	xor    ebx,ebx
  436f04:	lea    ecx,[ebp-0x10]
  436f07:	mov    edx,ebx
  436f09:	mov    eax,DWORD PTR [ebp-0x4]
  436f0c:	call   0x437170
  436f11:	mov    edx,DWORD PTR [ebp-0x10]
  436f14:	mov    eax,DWORD PTR [ebp-0x8]
  436f17:	call   0x41d948
  436f1c:	test   al,al
  436f1e:	je     0x436f38
  436f20:	lea    ecx,[ebp-0x14]
  436f23:	mov    edx,ebx
  436f25:	mov    eax,DWORD PTR [ebp-0x4]
  436f28:	call   0x437244
  436f2d:	mov    edx,DWORD PTR [ebp-0x14]
  436f30:	mov    eax,DWORD PTR [ebp-0xc]
  436f33:	mov    ecx,DWORD PTR [eax]
  436f35:	call   DWORD PTR [ecx+0x38]
  436f38:	inc    ebx
  436f39:	dec    esi
  436f3a:	jne    0x436f04
  436f3c:	xor    eax,eax
  436f3e:	pop    edx
  436f3f:	pop    ecx
  436f40:	pop    ecx
  436f41:	mov    DWORD PTR fs:[eax],edx
  436f44:	push   0x436f5e
  436f49:	lea    eax,[ebp-0x14]
  436f4c:	mov    edx,0x2
  436f51:	call   0x404fac
  436f56:	ret    
  436f57:	jmp    0x40481c
  436f5c:	jmp    0x436f49
  436f5e:	pop    esi
  436f5f:	pop    ebx
  436f60:	mov    esp,ebp
  436f62:	pop    ebp
  436f63:	ret    
  436f64:	push   ebp
  436f65:	mov    ebp,esp
  436f67:	add    esp,0xffffffec
  436f6a:	push   ebx
  436f6b:	push   esi
  436f6c:	push   edi
  436f6d:	xor    ebx,ebx
  436f6f:	mov    DWORD PTR [ebp-0x14],ebx
  436f72:	mov    DWORD PTR [ebp-0x10],ebx
  436f75:	mov    DWORD PTR [ebp-0x8],ecx
  436f78:	mov    DWORD PTR [ebp-0x4],edx
  436f7b:	mov    esi,eax
  436f7d:	mov    eax,DWORD PTR [ebp-0x4]
  436f80:	call   0x405408
  436f85:	xor    eax,eax
  436f87:	push   ebp
  436f88:	push   0x437059
  436f8d:	push   DWORD PTR fs:[eax]
  436f90:	mov    DWORD PTR fs:[eax],esp
  436f93:	mov    edx,DWORD PTR [ebp-0x4]
  436f96:	mov    eax,esi
  436f98:	call   0x437068
  436f9d:	mov    DWORD PTR [ebp-0xc],eax
  436fa0:	xor    eax,eax
  436fa2:	push   ebp
  436fa3:	push   0x43702f
  436fa8:	push   DWORD PTR fs:[eax]
  436fab:	mov    DWORD PTR fs:[eax],esp
  436fae:	mov    eax,DWORD PTR [ebp-0xc]
  436fb1:	mov    edx,DWORD PTR [eax]
  436fb3:	call   DWORD PTR [edx+0x14]
  436fb6:	mov    ebx,eax
  436fb8:	sub    ebx,0x1
  436fbb:	jno    0x436fc2
  436fbd:	call   0x403f70
  436fc2:	lea    ecx,[ebp-0x10]
  436fc5:	mov    edx,ebx
  436fc7:	mov    eax,DWORD PTR [ebp-0xc]
  436fca:	mov    edi,DWORD PTR [eax]
  436fcc:	call   DWORD PTR [edi+0xc]
  436fcf:	mov    ecx,DWORD PTR [ebp-0x10]
  436fd2:	mov    edx,DWORD PTR [ebp-0x8]
  436fd5:	mov    eax,esi
  436fd7:	mov    edi,DWORD PTR [eax]
  436fd9:	call   DWORD PTR [edi+0x20]
  436fdc:	sub    ebx,0x1
  436fdf:	jno    0x436fe6
  436fe1:	call   0x403f70
  436fe6:	cmp    ebx,0xffffffff
  436fe9:	jle    0x437014
  436feb:	lea    ecx,[ebp-0x14]
  436fee:	mov    edx,ebx
  436ff0:	mov    eax,DWORD PTR [ebp-0xc]
  436ff3:	mov    edi,DWORD PTR [eax]
  436ff5:	call   DWORD PTR [edi+0xc]
  436ff8:	mov    ecx,DWORD PTR [ebp-0x14]
  436ffb:	mov    edx,DWORD PTR [ebp-0x8]
  436ffe:	mov    eax,esi
  437000:	mov    edi,DWORD PTR [eax]
  437002:	call   DWORD PTR [edi+0x60]
  437005:	sub    ebx,0x1
  437008:	jno    0x43700f
  43700a:	call   0x403f70
  43700f:	cmp    ebx,0xffffffff
  437012:	jg     0x436feb
  437014:	xor    eax,eax
  437016:	pop    edx
  437017:	pop    ecx
  437018:	pop    ecx
  437019:	mov    DWORD PTR fs:[eax],edx
  43701c:	push   0x437036
  437021:	lea    edx,[ebp-0xc]
  437024:	mov    eax,ds:0x41be90
  437029:	call   0x41b14c
  43702e:	ret    
  43702f:	jmp    0x40481c
  437034:	jmp    0x437021
  437036:	xor    eax,eax
  437038:	pop    edx
  437039:	pop    ecx
  43703a:	pop    ecx
  43703b:	mov    DWORD PTR fs:[eax],edx
  43703e:	push   0x437060
  437043:	lea    eax,[ebp-0x14]
  437046:	mov    edx,0x2
  43704b:	call   0x404fac
  437050:	lea    eax,[ebp-0x4]
  437053:	call   0x404f88
  437058:	ret    
  437059:	jmp    0x40481c
  43705e:	jmp    0x437043
  437060:	pop    edi
  437061:	pop    esi
  437062:	pop    ebx
  437063:	mov    esp,ebp
  437065:	pop    ebp
  437066:	ret    
  437067:	nop
  437068:	push   ebp
  437069:	mov    ebp,esp
  43706b:	xor    ecx,ecx
  43706d:	push   ecx
  43706e:	push   ecx
  43706f:	push   ecx
  437070:	push   ecx
  437071:	push   ecx
  437072:	push   ebx
  437073:	mov    DWORD PTR [ebp-0x4],edx
  437076:	mov    ebx,eax
  437078:	mov    eax,DWORD PTR [ebp-0x4]
  43707b:	call   0x405408
  437080:	xor    eax,eax
  437082:	push   ebp
  437083:	push   0x43713a
  437088:	push   DWORD PTR fs:[eax]
  43708b:	mov    DWORD PTR fs:[eax],esp
  43708e:	mov    dl,0x1
  437090:	mov    eax,ds:0x412cf0
  437095:	call   0x404070
  43709a:	mov    DWORD PTR [ebp-0xc],eax
  43709d:	xor    eax,eax
  43709f:	push   ebp
  4370a0:	push   0x43710b
  4370a5:	push   DWORD PTR fs:[eax]
  4370a8:	mov    DWORD PTR fs:[eax],esp
  4370ab:	mov    eax,DWORD PTR [ebx+0x40]
  4370ae:	push   eax
  4370af:	lea    eax,[ebp-0x8]
  4370b2:	push   eax
  4370b3:	mov    ecx,0x437154
  4370b8:	mov    edx,0x437160
  4370bd:	mov    eax,DWORD PTR [ebp-0x4]
  4370c0:	call   0x434ef0
  4370c5:	jmp    0x4370f7
  4370c7:	push   0x1
  4370c9:	lea    eax,[ebp-0x14]
  4370cc:	push   eax
  4370cd:	lea    eax,[ebp-0x8]
  4370d0:	mov    cl,0x1
  4370d2:	mov    edx,0x43716c
  4370d7:	call   0x41c7c4
  4370dc:	mov    edx,DWORD PTR [ebp-0x14]
  4370df:	lea    ecx,[ebp-0x10]
  4370e2:	mov    eax,ds:0x41be90
  4370e7:	call   0x41b3cc
  4370ec:	mov    edx,DWORD PTR [ebp-0x10]
  4370ef:	mov    eax,DWORD PTR [ebp-0xc]
  4370f2:	mov    ecx,DWORD PTR [eax]
  4370f4:	call   DWORD PTR [ecx+0x38]
  4370f7:	cmp    DWORD PTR [ebp-0x8],0x0
  4370fb:	jne    0x4370c7
  4370fd:	xor    eax,eax
  4370ff:	pop    edx
  437100:	pop    ecx
  437101:	pop    ecx
  437102:	mov    DWORD PTR fs:[eax],edx
  437105:	push   0x437112
  43710a:	ret    
  43710b:	jmp    0x40481c
  437110:	jmp    0x43710a
  437112:	xor    eax,eax
  437114:	pop    edx
  437115:	pop    ecx
  437116:	pop    ecx
  437117:	mov    DWORD PTR fs:[eax],edx
  43711a:	push   0x437141
  43711f:	lea    eax,[ebp-0x14]
  437122:	mov    edx,0x2
  437127:	call   0x404fac
  43712c:	lea    eax,[ebp-0x8]
  43712f:	mov    edx,0x2
  437134:	call   0x404fac
  437139:	ret    
  43713a:	jmp    0x40481c
  43713f:	jmp    0x43711f
  437141:	mov    eax,DWORD PTR [ebp-0xc]
  437144:	pop    ebx
  437145:	mov    esp,ebp
  437147:	pop    ebp
  437148:	ret    
  437149:	add    BYTE PTR [eax],al
  43714b:	add    bh,bh
  43714d:	(bad)  
  43714e:	(bad)  
  43714f:	inc    DWORD PTR [ebx]
  437151:	add    BYTE PTR [eax],al
  437153:	add    BYTE PTR [ecx],cl
  437155:	and    BYTE PTR [eax+eax*1],ch
  437158:	(bad)  
  437159:	(bad)  
  43715a:	(bad)  
  43715b:	inc    DWORD PTR [ebx]
  43715d:	add    BYTE PTR [eax],al
  43715f:	add    BYTE PTR ds:0xff00200a,cl
  437165:	(bad)  
  437166:	(bad)  
  437167:	inc    DWORD PTR [edx]
  437169:	add    BYTE PTR [eax],al
  43716b:	add    BYTE PTR ds:0x5500000a,cl
  437171:	mov    ebp,esp
  437173:	push   0x0
  437175:	push   0x0
  437177:	push   0x0
  437179:	push   ebx
  43717a:	push   esi
  43717b:	push   edi
  43717c:	mov    ebx,ecx
  43717e:	mov    DWORD PTR [ebp-0x4],edx
  437181:	mov    esi,eax
  437183:	xor    eax,eax
  437185:	push   ebp
  437186:	push   0x437211
  43718b:	push   DWORD PTR fs:[eax]
  43718e:	mov    DWORD PTR fs:[eax],esp
  437191:	mov    ecx,ebx
  437193:	mov    edx,DWORD PTR [ebp-0x4]
  437196:	mov    eax,esi
  437198:	mov    edi,DWORD PTR [eax]
  43719a:	call   DWORD PTR [edi+0xc]
  43719d:	cmp    BYTE PTR [esi+0x3c],0x0
  4371a1:	jne    0x4371bc
  4371a3:	lea    ecx,[ebp-0x8]
  4371a6:	mov    edx,DWORD PTR [ebx]
  4371a8:	mov    eax,ds:0x41be90
  4371ad:	call   0x41b2c4
  4371b2:	mov    edx,DWORD PTR [ebp-0x8]
  4371b5:	mov    eax,ebx
  4371b7:	call   0x404fdc
  4371bc:	lea    ecx,[ebp-0xc]
  4371bf:	mov    edx,DWORD PTR [esi+0x38]
  4371c2:	mov    eax,ds:0x41be90
  4371c7:	call   0x41b3cc
  4371cc:	mov    eax,DWORD PTR [ebp-0xc]
  4371cf:	mov    esi,DWORD PTR ds:0x46da9c
  4371d5:	mov    esi,DWORD PTR [esi]
  4371d7:	mov    edx,DWORD PTR [ebx]
  4371d9:	call   esi
  4371db:	mov    esi,eax
  4371dd:	push   ebx
  4371de:	mov    ecx,esi
  4371e0:	sub    ecx,0x1
  4371e3:	jno    0x4371ea
  4371e5:	call   0x403f70
  4371ea:	mov    eax,DWORD PTR [ebx]
  4371ec:	mov    edx,0x1
  4371f1:	call   0x405480
  4371f6:	xor    eax,eax
  4371f8:	pop    edx
  4371f9:	pop    ecx
  4371fa:	pop    ecx
  4371fb:	mov    DWORD PTR fs:[eax],edx
  4371fe:	push   0x437218
  437203:	lea    eax,[ebp-0xc]
  437206:	mov    edx,0x2
  43720b:	call   0x404fac
  437210:	ret    
  437211:	jmp    0x40481c
  437216:	jmp    0x437203
  437218:	pop    edi
  437219:	pop    esi
  43721a:	pop    ebx
  43721b:	mov    esp,ebp
  43721d:	pop    ebp
  43721e:	ret    
  43721f:	nop
  437220:	push   ebx
  437221:	push   esi
  437222:	push   edi
  437223:	mov    edi,ecx
  437225:	mov    esi,edx
  437227:	mov    ebx,eax
  437229:	mov    edx,esi
  43722b:	mov    eax,ebx
  43722d:	call   0x4373b0
  437232:	mov    edx,eax
  437234:	mov    ecx,edi
  437236:	mov    eax,ebx
  437238:	call   0x437244
  43723d:	pop    edi
  43723e:	pop    esi
  43723f:	pop    ebx
  437240:	ret    
  437241:	lea    eax,[eax+0x0]
  437244:	push   ebp
  437245:	mov    ebp,esp
  437247:	push   0x0
  437249:	push   0x0
  43724b:	push   0x0
  43724d:	push   0x0
  43724f:	push   0x0
  437251:	push   0x0
  437253:	push   0x0
  437255:	push   ebx
  437256:	push   esi
  437257:	push   edi
  437258:	mov    DWORD PTR [ebp-0xc],ecx
  43725b:	mov    ebx,edx
  43725d:	mov    esi,eax
  43725f:	xor    eax,eax
  437261:	push   ebp
  437262:	push   0x437389
  437267:	push   DWORD PTR fs:[eax]
  43726a:	mov    DWORD PTR fs:[eax],esp
  43726d:	test   ebx,ebx
  43726f:	jl     0x43733c
  437275:	mov    eax,esi
  437277:	mov    edx,DWORD PTR [eax]
  437279:	call   DWORD PTR [edx+0x14]
  43727c:	cmp    ebx,eax
  43727e:	jge    0x43733c
  437284:	lea    ecx,[ebp-0x8]
  437287:	mov    edx,ebx
  437289:	mov    eax,esi
  43728b:	call   0x437170
  437290:	mov    eax,DWORD PTR [ebp-0xc]
  437293:	push   eax
  437294:	lea    ecx,[ebp-0x10]
  437297:	mov    edx,ebx
  437299:	mov    eax,esi
  43729b:	mov    edi,DWORD PTR [eax]
  43729d:	call   DWORD PTR [edi+0xc]
  4372a0:	mov    eax,DWORD PTR [ebp-0x10]
  4372a3:	push   eax
  4372a4:	mov    eax,DWORD PTR [ebp-0x8]
  4372a7:	call   0x405248
  4372ac:	mov    edx,eax
  4372ae:	add    edx,0x2
  4372b1:	jno    0x4372b8
  4372b3:	call   0x403f70
  4372b8:	mov    ecx,0x7fffffff
  4372bd:	pop    eax
  4372be:	call   0x405480
  4372c3:	cmp    BYTE PTR [esi+0x3d],0x0
  4372c7:	je     0x437344
  4372c9:	add    ebx,0x1
  4372cc:	jno    0x4372d3
  4372ce:	call   0x403f70
  4372d3:	mov    eax,esi
  4372d5:	mov    edx,DWORD PTR [eax]
  4372d7:	call   DWORD PTR [edx+0x14]
  4372da:	cmp    ebx,eax
  4372dc:	je     0x437344
  4372de:	lea    ecx,[ebp-0x4]
  4372e1:	mov    edx,ebx
  4372e3:	mov    eax,esi
  4372e5:	mov    edi,DWORD PTR [eax]
  4372e7:	call   DWORD PTR [edi+0xc]
  4372ea:	mov    ecx,0x4373a0
  4372ef:	mov    edx,0x1
  4372f4:	mov    eax,DWORD PTR [ebp-0x4]
  4372f7:	call   0x41d964
  4372fc:	test   al,al
  4372fe:	je     0x437344
  437300:	lea    ecx,[ebp-0x14]
  437303:	mov    edx,DWORD PTR [ebp-0xc]
  437306:	mov    edx,DWORD PTR [edx]
  437308:	mov    eax,ds:0x41be90
  43730d:	call   0x41b2b0
  437312:	push   DWORD PTR [ebp-0x14]
  437315:	push   0x4373ac
  43731a:	lea    ecx,[ebp-0x18]
  43731d:	mov    edx,DWORD PTR [ebp-0x4]
  437320:	mov    eax,ds:0x41be90
  437325:	call   0x41b2b0
  43732a:	push   DWORD PTR [ebp-0x18]
  43732d:	mov    eax,DWORD PTR [ebp-0xc]
  437330:	mov    edx,0x3
  437335:	call   0x40531c
  43733a:	jmp    0x4372c9
  43733c:	mov    eax,DWORD PTR [ebp-0xc]
  43733f:	call   0x404f88
  437344:	lea    ecx,[ebp-0x1c]
  437347:	mov    edx,DWORD PTR [ebp-0xc]
  43734a:	mov    edx,DWORD PTR [edx]
  43734c:	mov    eax,ds:0x41be90
  437351:	call   0x41b2b0
  437356:	mov    edx,DWORD PTR [ebp-0x1c]
  437359:	mov    eax,DWORD PTR [ebp-0xc]
  43735c:	call   0x404fdc
  437361:	xor    eax,eax
  437363:	pop    edx
  437364:	pop    ecx
  437365:	pop    ecx
  437366:	mov    DWORD PTR fs:[eax],edx
  437369:	push   0x437390
  43736e:	lea    eax,[ebp-0x1c]
  437371:	mov    edx,0x4
  437376:	call   0x404fac
  43737b:	lea    eax,[ebp-0x8]
  43737e:	mov    edx,0x2
  437383:	call   0x404fac
  437388:	ret    
  437389:	jmp    0x40481c
  43738e:	jmp    0x43736e
  437390:	pop    edi
  437391:	pop    esi
  437392:	pop    ebx
  437393:	mov    esp,ebp
  437395:	pop    ebp
  437396:	ret    
  437397:	add    bh,bh
  437399:	(bad)  
  43739a:	(bad)  
  43739b:	inc    DWORD PTR [edx]
  43739d:	add    BYTE PTR [eax],al
  43739f:	add    BYTE PTR [ecx],cl
  4373a1:	and    BYTE PTR [eax],al
  4373a3:	add    bh,bh
  4373a5:	(bad)  
  4373a6:	(bad)  
  4373a7:	inc    DWORD PTR [ecx]
  4373a9:	add    BYTE PTR [eax],al
  4373ab:	add    BYTE PTR [eax],ah
  4373ad:	add    BYTE PTR [eax],al
  4373af:	add    BYTE PTR [ebp-0x75],dl
  4373b2:	in     al,dx
  4373b3:	add    esp,0xfffffff4
  4373b6:	push   ebx
  4373b7:	push   esi
  4373b8:	push   edi
  4373b9:	xor    ecx,ecx
  4373bb:	mov    DWORD PTR [ebp-0xc],ecx
  4373be:	mov    DWORD PTR [ebp-0x4],edx
  4373c1:	mov    edi,eax
  4373c3:	xor    eax,eax
  4373c5:	push   ebp
  4373c6:	push   0x43742c
  4373cb:	push   DWORD PTR fs:[eax]
  4373ce:	mov    DWORD PTR fs:[eax],esp
  4373d1:	mov    DWORD PTR [ebp-0x8],0xffffffff
  4373d8:	mov    eax,edi
  4373da:	mov    edx,DWORD PTR [eax]
  4373dc:	call   DWORD PTR [edx+0x14]
  4373df:	mov    esi,eax
  4373e1:	sub    esi,0x1
  4373e4:	jno    0x4373eb
  4373e6:	call   0x403f70
  4373eb:	test   esi,esi
  4373ed:	jl     0x437416
  4373ef:	inc    esi
  4373f0:	xor    ebx,ebx
  4373f2:	lea    ecx,[ebp-0xc]
  4373f5:	mov    edx,ebx
  4373f7:	mov    eax,edi
  4373f9:	call   0x437170
  4373fe:	mov    eax,DWORD PTR [ebp-0xc]
  437401:	mov    edx,DWORD PTR [ebp-0x4]
  437404:	call   0x41d948
  437409:	test   al,al
  43740b:	je     0x437412
  43740d:	mov    DWORD PTR [ebp-0x8],ebx
  437410:	jmp    0x437416
  437412:	inc    ebx
  437413:	dec    esi
  437414:	jne    0x4373f2
  437416:	xor    eax,eax
  437418:	pop    edx
  437419:	pop    ecx
  43741a:	pop    ecx
  43741b:	mov    DWORD PTR fs:[eax],edx
  43741e:	push   0x437433
  437423:	lea    eax,[ebp-0xc]
  437426:	call   0x404f88
  43742b:	ret    
  43742c:	jmp    0x40481c
  437431:	jmp    0x437423
  437433:	mov    eax,DWORD PTR [ebp-0x8]
  437436:	pop    edi
  437437:	pop    esi
  437438:	pop    ebx
  437439:	mov    esp,ebp
  43743b:	pop    ebp
  43743c:	ret    
  43743d:	lea    eax,[eax+0x0]
  437440:	push   ebp
  437441:	mov    ebp,esp
  437443:	push   0x0
  437445:	push   0x0
  437447:	push   0x0
  437449:	push   ebx
  43744a:	push   esi
  43744b:	push   edi
  43744c:	mov    DWORD PTR [ebp-0x4],ecx
  43744f:	mov    edi,edx
  437451:	mov    ebx,eax
  437453:	xor    eax,eax
  437455:	push   ebp
  437456:	push   0x43750b
  43745b:	push   DWORD PTR fs:[eax]
  43745e:	mov    DWORD PTR fs:[eax],esp
  437461:	mov    edx,edi
  437463:	mov    eax,ebx
  437465:	call   0x4373b0
  43746a:	mov    esi,eax
  43746c:	cmp    DWORD PTR [ebp-0x4],0x0
  437470:	je     0x4374d4
  437472:	test   esi,esi
  437474:	jge    0x437481
  437476:	xor    edx,edx
  437478:	mov    eax,ebx
  43747a:	mov    ecx,DWORD PTR [eax]
  43747c:	call   DWORD PTR [ecx+0x38]
  43747f:	mov    esi,eax
  437481:	cmp    BYTE PTR [ebx+0x3e],0x0
  437485:	je     0x4374b2
  437487:	mov    edx,esi
  437489:	mov    eax,ebx
  43748b:	call   0x436e24
  437490:	push   edi
  437491:	push   DWORD PTR [ebx+0x38]
  437494:	push   DWORD PTR [ebp-0x4]
  437497:	lea    eax,[ebp-0x8]
  43749a:	mov    edx,0x3
  43749f:	call   0x40531c
  4374a4:	mov    edx,DWORD PTR [ebp-0x8]
  4374a7:	mov    ecx,esi
  4374a9:	mov    eax,ebx
  4374ab:	call   0x436f64
  4374b0:	jmp    0x4374f0
  4374b2:	push   edi
  4374b3:	push   DWORD PTR [ebx+0x38]
  4374b6:	push   DWORD PTR [ebp-0x4]
  4374b9:	lea    eax,[ebp-0xc]
  4374bc:	mov    edx,0x3
  4374c1:	call   0x40531c
  4374c6:	mov    ecx,DWORD PTR [ebp-0xc]
  4374c9:	mov    edx,esi
  4374cb:	mov    eax,ebx
  4374cd:	mov    ebx,DWORD PTR [eax]
  4374cf:	call   DWORD PTR [ebx+0x20]
  4374d2:	jmp    0x4374f0
  4374d4:	test   esi,esi
  4374d6:	jl     0x4374f0
  4374d8:	cmp    BYTE PTR [ebx+0x3e],0x0
  4374dc:	je     0x4374e7
  4374de:	mov    edx,esi
  4374e0:	mov    eax,ebx
  4374e2:	call   0x436e24
  4374e7:	mov    edx,esi
  4374e9:	mov    eax,ebx
  4374eb:	mov    ecx,DWORD PTR [eax]
  4374ed:	call   DWORD PTR [ecx+0x48]
  4374f0:	xor    eax,eax
  4374f2:	pop    edx
  4374f3:	pop    ecx
  4374f4:	pop    ecx
  4374f5:	mov    DWORD PTR fs:[eax],edx
  4374f8:	push   0x437512
  4374fd:	lea    eax,[ebp-0xc]
  437500:	mov    edx,0x2
  437505:	call   0x404fac
  43750a:	ret    
  43750b:	jmp    0x40481c
  437510:	jmp    0x4374fd
  437512:	pop    edi
  437513:	pop    esi
  437514:	pop    ebx
  437515:	mov    esp,ebp
  437517:	pop    ebp
  437518:	ret    
  437519:	lea    eax,[eax+0x0]
  43751c:	push   0x4375
	...
  437529:	add    BYTE PTR [eax],al
  43752b:	add    BYTE PTR [eax+0x4375],dh
	...
  437539:	add    BYTE PTR [eax],al
  43753b:	add    BYTE PTR [eax+0x30004375],ah
  437541:	add    BYTE PTR [eax],al
  437543:	add    BYTE PTR [ebp+eax*2-0x56e7ffbe],dh
  43754a:	inc    ecx
  43754b:	add    ah,bl
  43754d:	inc    edx
  43754e:	inc    eax
  43754f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  437555:	inc    edx
  437556:	inc    eax
  437557:	add    al,bl
  437559:	inc    edx
  43755a:	inc    eax
  43755b:	add    BYTE PTR [eax],bh
  43755d:	inc    eax
  43755e:	inc    eax
  43755f:	add    BYTE PTR [eax+eax*2+0x40],dl
  437563:	add    BYTE PTR [edx+eiz*4],ch
  437566:	inc    ecx
  437567:	add    BYTE PTR [eax+0x41],ch
  43756a:	inc    ecx
  43756b:	add    BYTE PTR [eax-0x5b],dh
  43756e:	inc    ecx
  43756f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  437576:	inc    ecx
  437577:	add    BYTE PTR [eax],dl
  437579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43757a:	inc    ecx
  43757b:	add    BYTE PTR [eax-0x5a],bl
  43757e:	inc    ecx
  43757f:	add    BYTE PTR [eax-0x59],dl
  437582:	inc    ecx
  437583:	add    BYTE PTR [eax],dh
  437585:	test   eax,0xa6680041
  43758a:	inc    ecx
  43758b:	add    BYTE PTR [eax-0x5a],ah
  43758e:	inc    ecx
  43758f:	add    BYTE PTR [eax],bh
  437591:	test   eax,0x46bc0041
  437596:	inc    edx
  437597:	add    al,bh
  437599:	inc    esi
  43759a:	inc    edx
  43759b:	add    BYTE PTR [eax],bh
  43759d:	xor    eax,DWORD PTR [eax+0x0]
  4375a0:	or     dl,BYTE PTR [ecx+ecx*2+0x64]
  4375a4:	inc    ebp
  4375a5:	outs   dx,BYTE PTR ds:[esi]
  4375a6:	arpl   WORD PTR [edi+0x64],bp
  4375a9:	gs jb  0x43753c
  4375ac:	mov    al,0x75
  4375ae:	inc    ebx
  4375af:	add    BYTE PTR [edi],al
  4375b1:	or     dl,BYTE PTR [ecx+ecx*2+0x64]
  4375b5:	inc    ebp
  4375b6:	outs   dx,BYTE PTR ds:[esi]
  4375b7:	arpl   WORD PTR [edi+0x64],bp
  4375ba:	gs jb  0x437625
  4375bd:	jne    0x437602
  4375bf:	add    BYTE PTR [eax+0x46],cl
  4375c2:	inc    edx
  4375c3:	add    BYTE PTR [edx],al
  4375c5:	add    BYTE PTR [edi],al
  4375c7:	dec    ecx
  4375c8:	fs inc ebx
  4375ca:	outs   dx,DWORD PTR ds:[esi]
  4375cb:	fs gs jb 0x4375cf
  4375cf:	add    BYTE PTR [esi+esi*2],bl
  4375d2:	inc    ebx
	...
  4375df:	add    BYTE PTR [esi+esi*2+0x43],ch
	...
  4375ef:	add    BYTE PTR [esi+esi*2+0x43],bl
  4375f3:	add    BYTE PTR [eax+eax*1],dh
  4375f6:	add    BYTE PTR [eax],al
  4375f8:	mov    ah,0x45
  4375fa:	inc    edx
  4375fb:	add    BYTE PTR [eax],bl
  4375fd:	test   eax,0x42dc0041
  437602:	inc    eax
  437603:	add    BYTE PTR [eax-0x1bffbe5e],ch
  437609:	inc    edx
  43760a:	inc    eax
  43760b:	add    al,bl
  43760d:	inc    edx
  43760e:	inc    eax
  43760f:	add    BYTE PTR [eax],bh
  437611:	inc    eax
  437612:	inc    eax
  437613:	add    BYTE PTR [eax+eax*2+0x40],dl
  437617:	add    BYTE PTR [edx+eiz*4],ch
  43761a:	inc    ecx
  43761b:	add    BYTE PTR [eax+0x41],ch
  43761e:	inc    ecx
  43761f:	add    BYTE PTR [eax-0x5b],dh
  437622:	inc    ecx
  437623:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43762a:	inc    ecx
  43762b:	add    BYTE PTR [eax],dl
  43762d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43762e:	inc    ecx
  43762f:	add    BYTE PTR [eax-0x5a],bl
  437632:	inc    ecx
  437633:	add    BYTE PTR [eax-0x59],dl
  437636:	inc    ecx
  437637:	add    BYTE PTR [eax],dh
  437639:	test   eax,0xa6680041
  43763e:	inc    ecx
  43763f:	add    BYTE PTR [eax-0x5a],ah
  437642:	inc    ecx
  437643:	add    BYTE PTR [eax],bh
  437645:	test   eax,0x46bc0041
  43764a:	inc    edx
  43764b:	add    al,bh
  43764d:	inc    esi
  43764e:	inc    edx
  43764f:	add    BYTE PTR [eax],bh
  437651:	xor    eax,DWORD PTR [eax+0x0]
  437654:	mov    WORD PTR [esi+0x43],?
  437657:	add    BYTE PTR [eax+0xa004376],dl
  43765d:	push   esp
  43765e:	dec    ecx
  43765f:	fs inc esp
  437661:	arpl   WORD PTR gs:[edi+0x64],bp
  437665:	gs jb  0x4375f8
  437668:	ins    BYTE PTR es:[edi],dx
  437669:	jbe    0x4376ae
  43766b:	add    BYTE PTR [edi],al
  43766d:	or     dl,BYTE PTR [ecx+ecx*2+0x64]
  437671:	inc    esp
  437672:	arpl   WORD PTR gs:[edi+0x64],bp
  437676:	gs jb  0x437695
  437679:	jbe    0x4376be
  43767b:	add    BYTE PTR [eax+0x46],cl
  43767e:	inc    edx
  43767f:	add    BYTE PTR [edx],al
  437681:	add    BYTE PTR [edi],al
  437683:	dec    ecx
  437684:	fs inc ebx
  437686:	outs   dx,DWORD PTR ds:[esi]
  437687:	fs gs jb 0x43768b
  43768b:	add    BYTE PTR [ecx-0x3c3ccfb0],cl
  437691:	lea    eax,[eax+0x0]
  437694:	push   ebp
  437695:	mov    ebp,esp
  437697:	add    esp,0xfffffff8
  43769a:	push   ebx
  43769b:	push   esi
  43769c:	mov    DWORD PTR [ebp-0x4],ecx
  43769f:	mov    esi,edx
  4376a1:	mov    ebx,eax
  4376a3:	mov    dl,0x1
  4376a5:	mov    eax,ds:0x412ff4
  4376aa:	call   0x404070
  4376af:	mov    DWORD PTR [ebp-0x8],eax
  4376b2:	xor    eax,eax
  4376b4:	push   ebp
  4376b5:	push   0x437704
  4376ba:	push   DWORD PTR fs:[eax]
  4376bd:	mov    DWORD PTR fs:[eax],esp
  4376c0:	mov    edx,esi
  4376c2:	mov    eax,DWORD PTR [ebp-0x8]
  4376c5:	call   0x41d8e4
  4376ca:	push   0x0
  4376cc:	push   0x0
  4376ce:	mov    eax,DWORD PTR [ebp-0x8]
  4376d1:	call   0x416404
  4376d6:	mov    eax,DWORD PTR [ebp-0x4]
  4376d9:	push   eax
  4376da:	mov    ecx,0x7fffffff
  4376df:	mov    edx,DWORD PTR [ebp-0x8]
  4376e2:	mov    eax,ebx
  4376e4:	mov    ebx,DWORD PTR [eax]
  4376e6:	call   DWORD PTR [ebx+0x34]
  4376e9:	xor    eax,eax
  4376eb:	pop    edx
  4376ec:	pop    ecx
  4376ed:	pop    ecx
  4376ee:	mov    DWORD PTR fs:[eax],edx
  4376f1:	push   0x43770b
  4376f6:	lea    edx,[ebp-0x8]
  4376f9:	mov    eax,ds:0x41be90
  4376fe:	call   0x41b14c
  437703:	ret    
  437704:	jmp    0x40481c
  437709:	jmp    0x4376f6
  43770b:	pop    esi
  43770c:	pop    ebx
  43770d:	pop    ecx
  43770e:	pop    ecx
  43770f:	pop    ebp
  437710:	ret    
  437711:	lea    eax,[eax+0x0]
  437714:	pusha  
  437715:	ja     0x43775a
	...
  43771f:	add    BYTE PTR [eax-0x3fffbc89],bl
  437725:	ja     0x43776a
	...
  437733:	add    BYTE PTR [edx+0x38004377],ch
  437739:	add    BYTE PTR [eax],al
  43773b:	add    BYTE PTR [esi*2-0x56e7ffbd],bl
  437742:	inc    ecx
  437743:	add    ah,bl
  437745:	inc    edx
  437746:	inc    eax
  437747:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43774d:	inc    edx
  43774e:	inc    eax
  43774f:	add    al,bl
  437751:	inc    edx
  437752:	inc    eax
  437753:	add    BYTE PTR [eax],bh
  437755:	inc    eax
  437756:	inc    eax
  437757:	add    BYTE PTR [eax+eax*2+0x40],dl
  43775b:	add    BYTE PTR [edx+eiz*4],ch
  43775e:	inc    ecx
  43775f:	add    BYTE PTR [eax+0x41],ch
  437762:	inc    ecx
  437763:	add    BYTE PTR [eax-0x5b],dh
  437766:	inc    ecx
  437767:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43776e:	inc    ecx
  43776f:	add    BYTE PTR [eax],dl
  437771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437772:	inc    ecx
  437773:	add    BYTE PTR [eax-0x5a],bl
  437776:	inc    ecx
  437777:	add    BYTE PTR [eax-0x59],dl
  43777a:	inc    ecx
  43777b:	add    BYTE PTR [eax],dh
  43777d:	test   eax,0xa6680041
  437782:	inc    ecx
  437783:	add    BYTE PTR [eax-0x5a],ah
  437786:	inc    ecx
  437787:	add    BYTE PTR [eax],bh
  437789:	test   eax,0x46bc0041
  43778e:	inc    edx
  43778f:	add    al,bh
  437791:	inc    esi
  437792:	inc    edx
  437793:	add    al,al
  437795:	jge    0x4377da
  437797:	add    BYTE PTR [esi],cl
  437799:	add    BYTE PTR [eax],al
  43779b:	add    BYTE PTR [eax],al
  43779d:	add    BYTE PTR [ecx],al
  43779f:	add    BYTE PTR [eax],al
  4377a1:	add    BYTE PTR [eax+edx*1+0x300040],al
  4377a8:	add    BYTE PTR [eax],al
  4377aa:	push   cs
  4377ab:	push   esp
  4377ac:	dec    ecx
  4377ad:	fs inc ebp
  4377af:	outs   dx,BYTE PTR ds:[esi]
  4377b0:	arpl   WORD PTR [edi+0x64],bp
  4377b3:	gs jb  0x4377e9
  4377b6:	je     0x437827
  4377b8:	xor    al,0x8d
  4377ba:	inc    eax
  4377bb:	add    al,al
  4377bd:	ja     0x437802
  4377bf:	add    BYTE PTR [edi],al
  4377c1:	push   cs
  4377c2:	push   esp
  4377c3:	dec    ecx
  4377c4:	fs inc ebp
  4377c6:	outs   dx,BYTE PTR ds:[esi]
  4377c7:	arpl   WORD PTR [edi+0x64],bp
  4377ca:	gs jb  0x437800
  4377cd:	je     0x43783e
  4377cf:	xor    al,0x60
  4377d1:	ja     0x437816
  4377d3:	add    BYTE PTR [ebp+esi*2+0x40043],ch
  4377da:	or     ecx,DWORD PTR [ecx+0x64]
  4377dd:	inc    ebx
  4377de:	outs   dx,DWORD PTR ds:[esi]
  4377df:	fs gs jb 0x437816
  4377e3:	je     0x437854
  4377e5:	xor    al,0x2
  4377e7:	add    BYTE PTR [eax+edx*1+0x300040],al
  4377ee:	add    bh,bh
  4377f0:	add    BYTE PTR [eax],al
  4377f2:	add    BYTE PTR [eax],al
  4377f4:	add    DWORD PTR [eax],eax
  4377f6:	add    BYTE PTR [eax],al
  4377f8:	add    BYTE PTR [eax],al
  4377fa:	add    BYTE PTR [eax-0x80000000],al
  437800:	add    al,BYTE PTR [eax]
  437802:	or     eax,DWORD PTR [ebx+0x6f]
  437805:	imul   ebp,DWORD PTR fs:[esi+0x67],0x6c626154
  43780d:	sub    BYTE PTR gs:[eax],dl
  437810:	inc    eax
  437811:	add    BYTE PTR [eax+eax*1],dh
  437814:	add    bh,bh
  437816:	xor    al,0x0
  437818:	add    bh,bh
  43781a:	add    DWORD PTR [eax],eax
  43781c:	add    BYTE PTR [eax],al
  43781e:	add    BYTE PTR [eax],al
  437820:	add    BYTE PTR [eax-0x80000000],al
  437826:	add    eax,DWORD PTR [eax]
  437828:	or     BYTE PTR [esi+0x69],al
  43782b:	ins    BYTE PTR es:[edi],dx
  43782c:	ins    BYTE PTR es:[edi],dx
  43782d:	inc    ebx
  43782e:	push   0x408d7261
  437833:	add    BYTE PTR [eax+0x4378],al
  437839:	add    BYTE PTR [eax],al
  43783b:	add    BYTE PTR [eax],al
  43783d:	add    BYTE PTR [eax],al
  43783f:	add    al,al
  437841:	js     0x437886
  437843:	add    al,ch
  437845:	js     0x43788a
	...
  437853:	add    dl,dl
  437855:	js     0x43789a
  437857:	add    BYTE PTR [eax-0x30000000],bh
  43785d:	jne    0x4378a2
  43785f:	add    BYTE PTR [eax],bl
  437861:	test   eax,0x42dc0041
  437866:	inc    eax
  437867:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43786d:	inc    edx
  43786e:	inc    eax
  43786f:	add    al,bl
  437871:	inc    edx
  437872:	inc    eax
  437873:	add    BYTE PTR [eax],bh
  437875:	inc    eax
  437876:	inc    eax
  437877:	add    BYTE PTR [eax+eax*2+0x40],dl
  43787b:	add    BYTE PTR [edx+eiz*4],ch
  43787e:	inc    ecx
  43787f:	add    BYTE PTR [eax+0x41],ch
  437882:	inc    ecx
  437883:	add    BYTE PTR [eax-0x5b],dh
  437886:	inc    ecx
  437887:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43788e:	inc    ecx
  43788f:	add    BYTE PTR [eax],dl
  437891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437892:	inc    ecx
  437893:	add    BYTE PTR [eax-0x5a],bl
  437896:	inc    ecx
  437897:	add    BYTE PTR [eax-0x59],dl
  43789a:	inc    ecx
  43789b:	add    BYTE PTR [eax],dh
  43789d:	test   eax,0xa6680041
  4378a2:	inc    ecx
  4378a3:	add    BYTE PTR [eax-0x5a],ah
  4378a6:	inc    ecx
  4378a7:	add    BYTE PTR [eax],bh
  4378a9:	test   eax,0x46bc0041
  4378ae:	inc    edx
  4378af:	add    al,bh
  4378b1:	inc    esi
  4378b2:	inc    edx
  4378b3:	add    BYTE PTR [ecx+edi*2+0x768c0043],ah
  4378ba:	inc    ebx
  4378bb:	add    BYTE PTR [eax+0xe004376],dl
  4378c1:	add    BYTE PTR [eax],al
  4378c3:	add    BYTE PTR [eax],al
  4378c5:	add    BYTE PTR [ecx],al
  4378c7:	add    BYTE PTR [eax],al
  4378c9:	add    BYTE PTR [eax+edx*1+0x340040],al
  4378d0:	add    BYTE PTR [eax],al
  4378d2:	push   cs
  4378d3:	push   esp
  4378d4:	dec    ecx
  4378d5:	fs inc esp
  4378d7:	arpl   WORD PTR gs:[edi+0x64],bp
  4378db:	gs jb  0x437912
  4378de:	je     0x43794f
  4378e0:	xor    ecx,DWORD PTR [ebp+0x78e80040]
  4378e6:	inc    ebx
  4378e7:	add    BYTE PTR [edi],al
  4378e9:	push   cs
  4378ea:	push   esp
  4378eb:	dec    ecx
  4378ec:	fs inc esp
  4378ee:	arpl   WORD PTR gs:[edi+0x64],bp
  4378f2:	gs jb  0x437929
  4378f5:	je     0x437966
  4378f7:	xor    eax,DWORD PTR [eax+0x68004378]
  4378fd:	jbe    0x437942
  4378ff:	add    BYTE PTR [ebx],al
  437901:	add    BYTE PTR [ebx],cl
  437903:	dec    ecx
  437904:	fs inc ebx
  437906:	outs   dx,DWORD PTR ds:[esi]
  437907:	fs gs jb 0x43793e
  43790b:	je     0x43797c
  43790d:	xor    al,0x1
  43790f:	add    BYTE PTR [eax],ch
  437911:	adc    BYTE PTR [eax+0x0],al
  437914:	mov    bh,0x0
  437916:	add    bh,bh
  437918:	mov    bh,0x0
  43791a:	add    bh,bh
  43791c:	add    DWORD PTR [eax],eax
  43791e:	add    BYTE PTR [eax],al
  437920:	add    BYTE PTR [eax],al
  437922:	add    BYTE PTR [eax-0x80000000],al
  437928:	add    al,BYTE PTR [eax]
  43792a:	or     BYTE PTR [esi+0x69],al
  43792d:	ins    BYTE PTR es:[edi],dx
  43792e:	ins    BYTE PTR es:[edi],dx
  43792f:	inc    ebx
  437930:	push   0x53907261
  437935:	push   esi
  437936:	push   edi
  437937:	mov    edi,ecx
  437939:	mov    esi,edx
  43793b:	mov    eax,0x7f
  437940:	mov    edx,edi
  437942:	mov    BYTE PTR [edx],0xff
  437945:	inc    edx
  437946:	dec    eax
  437947:	jne    0x437942
  437949:	mov    eax,esi
  43794b:	call   0x405248
  437950:	mov    edx,eax
  437952:	test   edx,edx
  437954:	jle    0x4379a0
  437956:	mov    eax,0x1
  43795b:	dec    eax
  43795c:	test   esi,esi
  43795e:	je     0x437965
  437960:	cmp    eax,DWORD PTR [esi-0x4]
  437963:	jb     0x43796a
  437965:	call   0x403f68
  43796a:	inc    eax
  43796b:	movzx  ecx,BYTE PTR [esi+eax*1-0x1]
  437970:	movzx  ecx,cl
  437973:	dec    ecx
  437974:	cmp    ecx,0x7e
  437977:	jbe    0x43797e
  437979:	call   0x403f68
  43797e:	inc    ecx
  43797f:	mov    ebx,eax
  437981:	sub    ebx,0x1
  437984:	jno    0x43798b
  437986:	call   0x403f70
  43798b:	cmp    ebx,0xff
  437991:	jbe    0x437998
  437993:	call   0x403f68
  437998:	mov    BYTE PTR [edi+ecx*1-0x1],bl
  43799c:	inc    eax
  43799d:	dec    edx
  43799e:	jne    0x43795b
  4379a0:	pop    edi
  4379a1:	pop    esi
  4379a2:	pop    ebx
  4379a3:	ret    
  4379a4:	push   ebp
  4379a5:	mov    ebp,esp
  4379a7:	push   0x0
  4379a9:	push   0x0
  4379ab:	push   0x0
  4379ad:	push   ebx
  4379ae:	push   esi
  4379af:	push   edi
  4379b0:	mov    DWORD PTR [ebp-0xc],ecx
  4379b3:	mov    esi,edx
  4379b5:	mov    ebx,eax
  4379b7:	mov    edi,DWORD PTR [ebp+0x8]
  4379ba:	xor    eax,eax
  4379bc:	push   ebp
  4379bd:	push   0x437a4c
  4379c2:	push   DWORD PTR fs:[eax]
  4379c5:	mov    DWORD PTR fs:[eax],esp
  4379c8:	test   esi,esi
  4379ca:	je     0x437a2b
  4379cc:	push   0x0
  4379ce:	lea    eax,[ebp-0x4]
  4379d1:	mov    ecx,0x1
  4379d6:	mov    edx,DWORD PTR ds:0x40769c
  4379dc:	call   0x4063b0
  4379e1:	add    esp,0x4
  4379e4:	push   0x0
  4379e6:	lea    eax,[ebp-0x8]
  4379e9:	mov    ecx,0x1
  4379ee:	mov    edx,DWORD PTR ds:0x40769c
  4379f4:	call   0x4063b0
  4379f9:	add    esp,0x4
  4379fc:	lea    ecx,[ebp-0x4]
  4379ff:	mov    dl,0x1
  437a01:	mov    eax,esi
  437a03:	call   0x41d2bc
  437a08:	push   edi
  437a09:	lea    eax,[ebp-0x8]
  437a0c:	push   eax
  437a0d:	mov    ecx,DWORD PTR [ebp-0xc]
  437a10:	mov    edx,DWORD PTR [ebp-0x4]
  437a13:	mov    eax,ebx
  437a15:	call   0x437a5c
  437a1a:	push   edi
  437a1b:	mov    ecx,DWORD PTR [ebp-0x8]
  437a1e:	mov    edx,DWORD PTR [ebx+0x30]
  437a21:	mov    eax,ds:0x41c1fc
  437a26:	call   0x41c378
  437a2b:	xor    eax,eax
  437a2d:	pop    edx
  437a2e:	pop    ecx
  437a2f:	pop    ecx
  437a30:	mov    DWORD PTR fs:[eax],edx
  437a33:	push   0x437a53
  437a38:	lea    eax,[ebp-0x8]
  437a3b:	mov    edx,DWORD PTR ds:0x40769c
  437a41:	mov    ecx,0x2
  437a46:	call   0x405b50
  437a4b:	ret    
  437a4c:	jmp    0x40481c
  437a51:	jmp    0x437a38
  437a53:	pop    edi
  437a54:	pop    esi
  437a55:	pop    ebx
  437a56:	mov    esp,ebp
  437a58:	pop    ebp
  437a59:	ret    0x4
  437a5c:	push   ebp
  437a5d:	mov    ebp,esp
  437a5f:	add    esp,0xffffffe0
  437a62:	push   ebx
  437a63:	push   esi
  437a64:	push   edi
  437a65:	xor    ebx,ebx
  437a67:	mov    DWORD PTR [ebp-0x4],ebx
  437a6a:	mov    ebx,ecx
  437a6c:	mov    DWORD PTR [ebp-0x8],edx
  437a6f:	mov    edi,eax
  437a71:	xor    eax,eax
  437a73:	push   ebp
  437a74:	push   0x437daf
  437a79:	push   DWORD PTR fs:[eax]
  437a7c:	mov    DWORD PTR fs:[eax],esp
  437a7f:	movzx  eax,BYTE PTR [edi+0xb7]
  437a86:	mov    BYTE PTR [ebp-0x1d],al
  437a89:	push   0x4
  437a8b:	lea    eax,[ebp-0x4]
  437a8e:	mov    ecx,0x1
  437a93:	mov    edx,DWORD PTR ds:0x40769c
  437a99:	call   0x4063b0
  437a9e:	add    esp,0x4
  437aa1:	xor    eax,eax
  437aa3:	mov    DWORD PTR [ebp-0xc],eax
  437aa6:	xor    esi,esi
  437aa8:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  437aac:	jne    0x437acf
  437aae:	mov    eax,DWORD PTR [ebp-0x8]
  437ab1:	call   0x4061f4
  437ab6:	test   eax,eax
  437ab8:	jns    0x437abd
  437aba:	add    eax,0x3
  437abd:	sar    eax,0x2
  437ac0:	imul   eax,eax,0x3
  437ac3:	jno    0x437aca
  437ac5:	call   0x403f70
  437aca:	mov    DWORD PTR [ebp-0x14],eax
  437acd:	jmp    0x437b08
  437acf:	mov    eax,DWORD PTR [ebp+0xc]
  437ad2:	mov    ecx,0x3
  437ad7:	cdq    
  437ad8:	idiv   ecx
  437ada:	test   edx,edx
  437adc:	jle    0x437b02
  437ade:	mov    eax,DWORD PTR [ebp+0xc]
  437ae1:	mov    ecx,0x3
  437ae6:	cdq    
  437ae7:	idiv   ecx
  437ae9:	imul   eax,eax,0x3
  437aec:	jno    0x437af3
  437aee:	call   0x403f70
  437af3:	add    eax,0x3
  437af6:	jno    0x437afd
  437af8:	call   0x403f70
  437afd:	mov    DWORD PTR [ebp-0x14],eax
  437b00:	jmp    0x437b08
  437b02:	mov    eax,DWORD PTR [ebp+0xc]
  437b05:	mov    DWORD PTR [ebp-0x14],eax
  437b08:	mov    eax,DWORD PTR [ebp-0x14]
  437b0b:	push   eax
  437b0c:	mov    eax,DWORD PTR [ebp+0x8]
  437b0f:	mov    ecx,0x1
  437b14:	mov    edx,DWORD PTR ds:0x40769c
  437b1a:	call   0x4063b0
  437b1f:	add    esp,0x4
  437b22:	mov    eax,DWORD PTR [ebp-0x8]
  437b25:	call   0x4061f4
  437b2a:	sub    eax,0x4
  437b2d:	jno    0x437b34
  437b2f:	call   0x403f70
  437b34:	add    eax,0x1
  437b37:	jno    0x437b3e
  437b39:	call   0x403f70
  437b3e:	mov    DWORD PTR [ebp-0x18],eax
  437b41:	cmp    ebx,DWORD PTR [ebp-0x18]
  437b44:	jg     0x437d69
  437b4a:	mov    eax,ebx
  437b4c:	sub    eax,0x1
  437b4f:	jno    0x437b56
  437b51:	call   0x403f70
  437b56:	mov    edx,DWORD PTR [ebp-0x8]
  437b59:	test   edx,edx
  437b5b:	je     0x437b62
  437b5d:	cmp    eax,DWORD PTR [edx-0x4]
  437b60:	jb     0x437b67
  437b62:	call   0x403f68
  437b67:	movzx  eax,BYTE PTR [edx+eax*1]
  437b6b:	mov    BYTE PTR [ebp-0x10],al
  437b6e:	mov    eax,ebx
  437b70:	sub    eax,0x1
  437b73:	jno    0x437b7a
  437b75:	call   0x403f70
  437b7a:	add    eax,0x1
  437b7d:	jno    0x437b84
  437b7f:	call   0x403f70
  437b84:	mov    edx,DWORD PTR [ebp-0x8]
  437b87:	test   edx,edx
  437b89:	je     0x437b90
  437b8b:	cmp    eax,DWORD PTR [edx-0x4]
  437b8e:	jb     0x437b95
  437b90:	call   0x403f68
  437b95:	movzx  eax,BYTE PTR [edx+eax*1]
  437b99:	mov    BYTE PTR [ebp-0xf],al
  437b9c:	mov    eax,ebx
  437b9e:	sub    eax,0x1
  437ba1:	jno    0x437ba8
  437ba3:	call   0x403f70
  437ba8:	add    eax,0x2
  437bab:	jno    0x437bb2
  437bad:	call   0x403f70
  437bb2:	mov    edx,DWORD PTR [ebp-0x8]
  437bb5:	test   edx,edx
  437bb7:	je     0x437bbe
  437bb9:	cmp    eax,DWORD PTR [edx-0x4]
  437bbc:	jb     0x437bc3
  437bbe:	call   0x403f68
  437bc3:	movzx  eax,BYTE PTR [edx+eax*1]
  437bc7:	mov    BYTE PTR [ebp-0xe],al
  437bca:	mov    eax,ebx
  437bcc:	sub    eax,0x1
  437bcf:	jno    0x437bd6
  437bd1:	call   0x403f70
  437bd6:	add    eax,0x3
  437bd9:	jno    0x437be0
  437bdb:	call   0x403f70
  437be0:	mov    edx,DWORD PTR [ebp-0x8]
  437be3:	test   edx,edx
  437be5:	je     0x437bec
  437be7:	cmp    eax,DWORD PTR [edx-0x4]
  437bea:	jb     0x437bf1
  437bec:	call   0x403f68
  437bf1:	movzx  eax,BYTE PTR [edx+eax*1]
  437bf5:	mov    BYTE PTR [ebp-0xd],al
  437bf8:	add    ebx,0x4
  437bfb:	jno    0x437c02
  437bfd:	call   0x403f70
  437c02:	movzx  eax,BYTE PTR [ebp-0x10]
  437c06:	dec    eax
  437c07:	cmp    eax,0x7e
  437c0a:	jbe    0x437c11
  437c0c:	call   0x403f68
  437c11:	inc    eax
  437c12:	movzx  eax,BYTE PTR [edi+eax*1+0x37]
  437c17:	shl    eax,0x12
  437c1a:	movzx  edx,BYTE PTR [ebp-0xf]
  437c1e:	dec    edx
  437c1f:	cmp    edx,0x7e
  437c22:	jbe    0x437c29
  437c24:	call   0x403f68
  437c29:	inc    edx
  437c2a:	movzx  edx,BYTE PTR [edi+edx*1+0x37]
  437c2f:	shl    edx,0xc
  437c32:	or     eax,edx
  437c34:	movzx  edx,BYTE PTR [ebp-0xe]
  437c38:	dec    edx
  437c39:	cmp    edx,0x7e
  437c3c:	jbe    0x437c43
  437c3e:	call   0x403f68
  437c43:	inc    edx
  437c44:	movzx  edx,BYTE PTR [edi+edx*1+0x37]
  437c49:	shl    edx,0x6
  437c4c:	or     eax,edx
  437c4e:	movzx  edx,BYTE PTR [ebp-0xd]
  437c52:	dec    edx
  437c53:	cmp    edx,0x7e
  437c56:	jbe    0x437c5d
  437c58:	call   0x403f68
  437c5d:	inc    edx
  437c5e:	movzx  edx,BYTE PTR [edi+edx*1+0x37]
  437c63:	or     eax,edx
  437c65:	mov    DWORD PTR [ebp-0x1c],eax
  437c68:	lea    eax,[ebp-0x4]
  437c6b:	mov    edx,DWORD PTR [ebp-0x1c]
  437c6e:	call   0x41d460
  437c73:	mov    eax,0x2
  437c78:	mov    edx,DWORD PTR [ebp-0x4]
  437c7b:	test   edx,edx
  437c7d:	je     0x437c84
  437c7f:	cmp    eax,DWORD PTR [edx-0x4]
  437c82:	jb     0x437c89
  437c84:	call   0x403f68
  437c89:	movzx  eax,BYTE PTR [edx+eax*1]
  437c8d:	mov    edx,DWORD PTR [ebp+0x8]
  437c90:	mov    edx,DWORD PTR [edx]
  437c92:	test   edx,edx
  437c94:	je     0x437c9b
  437c96:	cmp    esi,DWORD PTR [edx-0x4]
  437c99:	jb     0x437ca0
  437c9b:	call   0x403f68
  437ca0:	mov    BYTE PTR [edx+esi*1],al
  437ca3:	mov    eax,0x1
  437ca8:	mov    edx,DWORD PTR [ebp-0x4]
  437cab:	test   edx,edx
  437cad:	je     0x437cb4
  437caf:	cmp    eax,DWORD PTR [edx-0x4]
  437cb2:	jb     0x437cb9
  437cb4:	call   0x403f68
  437cb9:	movzx  eax,BYTE PTR [edx+eax*1]
  437cbd:	mov    edx,esi
  437cbf:	add    edx,0x1
  437cc2:	jno    0x437cc9
  437cc4:	call   0x403f70
  437cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  437ccc:	mov    ecx,DWORD PTR [ecx]
  437cce:	test   ecx,ecx
  437cd0:	je     0x437cd7
  437cd2:	cmp    edx,DWORD PTR [ecx-0x4]
  437cd5:	jb     0x437cdc
  437cd7:	call   0x403f68
  437cdc:	mov    BYTE PTR [ecx+edx*1],al
  437cdf:	xor    eax,eax
  437ce1:	mov    edx,DWORD PTR [ebp-0x4]
  437ce4:	test   edx,edx
  437ce6:	je     0x437ced
  437ce8:	cmp    eax,DWORD PTR [edx-0x4]
  437ceb:	jb     0x437cf2
  437ced:	call   0x403f68
  437cf2:	movzx  eax,BYTE PTR [edx+eax*1]
  437cf6:	mov    edx,esi
  437cf8:	add    edx,0x2
  437cfb:	jno    0x437d02
  437cfd:	call   0x403f70
  437d02:	mov    ecx,DWORD PTR [ebp+0x8]
  437d05:	mov    ecx,DWORD PTR [ecx]
  437d07:	test   ecx,ecx
  437d09:	je     0x437d10
  437d0b:	cmp    edx,DWORD PTR [ecx-0x4]
  437d0e:	jb     0x437d15
  437d10:	call   0x403f68
  437d15:	mov    BYTE PTR [ecx+edx*1],al
  437d18:	add    esi,0x3
  437d1b:	jno    0x437d22
  437d1d:	call   0x403f70
  437d22:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  437d26:	jne    0x437d4c
  437d28:	movzx  eax,BYTE PTR [ebp-0x1d]
  437d2c:	cmp    al,BYTE PTR [ebp-0xe]
  437d2f:	jne    0x437d3a
  437d31:	mov    DWORD PTR [ebp-0xc],0x2
  437d38:	jmp    0x437d69
  437d3a:	movzx  eax,BYTE PTR [ebp-0x1d]
  437d3e:	cmp    al,BYTE PTR [ebp-0xd]
  437d41:	jne    0x437d60
  437d43:	mov    DWORD PTR [ebp-0xc],0x1
  437d4a:	jmp    0x437d69
  437d4c:	cmp    esi,DWORD PTR [ebp+0xc]
  437d4f:	jle    0x437d60
  437d51:	sub    esi,DWORD PTR [ebp+0xc]
  437d54:	jno    0x437d5b
  437d56:	call   0x403f70
  437d5b:	mov    DWORD PTR [ebp-0xc],esi
  437d5e:	jmp    0x437d69
  437d60:	cmp    ebx,DWORD PTR [ebp-0x18]
  437d63:	jle    0x437b4a
  437d69:	cmp    DWORD PTR [ebp-0xc],0x0
  437d6d:	jle    0x437d93
  437d6f:	mov    eax,DWORD PTR [ebp-0x14]
  437d72:	sub    eax,DWORD PTR [ebp-0xc]
  437d75:	jno    0x437d7c
  437d77:	call   0x403f70
  437d7c:	push   eax
  437d7d:	mov    eax,DWORD PTR [ebp+0x8]
  437d80:	mov    ecx,0x1
  437d85:	mov    edx,DWORD PTR ds:0x40769c
  437d8b:	call   0x4063b0
  437d90:	add    esp,0x4
  437d93:	xor    eax,eax
  437d95:	pop    edx
  437d96:	pop    ecx
  437d97:	pop    ecx
  437d98:	mov    DWORD PTR fs:[eax],edx
  437d9b:	push   0x437db6
  437da0:	lea    eax,[ebp-0x4]
  437da3:	mov    edx,DWORD PTR ds:0x40769c
  437da9:	call   0x4063bc
  437dae:	ret    
  437daf:	jmp    0x40481c
  437db4:	jmp    0x437da0
  437db6:	pop    edi
  437db7:	pop    esi
  437db8:	pop    ebx
  437db9:	mov    esp,ebp
  437dbb:	pop    ebp
  437dbc:	ret    0x8
  437dbf:	nop
  437dc0:	push   ebp
  437dc1:	mov    ebp,esp
  437dc3:	push   0x0
  437dc5:	push   0x0
  437dc7:	push   ebx
  437dc8:	push   esi
  437dc9:	push   edi
  437dca:	mov    ebx,ecx
  437dcc:	mov    esi,edx
  437dce:	mov    edi,eax
  437dd0:	xor    eax,eax
  437dd2:	push   ebp
  437dd3:	push   0x437e8a
  437dd8:	push   DWORD PTR fs:[eax]
  437ddb:	mov    DWORD PTR fs:[eax],esp
  437dde:	mov    eax,esi
  437de0:	mov    edx,DWORD PTR [eax]
  437de2:	call   DWORD PTR [edx]
  437de4:	push   edx
  437de5:	push   eax
  437de6:	mov    eax,esi
  437de8:	call   0x4163e4
  437ded:	sub    DWORD PTR [esp],eax
  437df0:	sbb    DWORD PTR [esp+0x4],edx
  437df4:	pop    eax
  437df5:	pop    edx
  437df6:	push   edx
  437df7:	push   eax
  437df8:	mov    eax,ebx
  437dfa:	cdq    
  437dfb:	push   edx
  437dfc:	push   eax
  437dfd:	call   0x41d1f8
  437e02:	push   eax
  437e03:	sar    eax,0x1f
  437e06:	cmp    eax,edx
  437e08:	pop    eax
  437e09:	je     0x437e10
  437e0b:	call   0x403f68
  437e10:	mov    ebx,eax
  437e12:	test   ebx,ebx
  437e14:	jle    0x437e61
  437e16:	push   ebx
  437e17:	lea    eax,[ebp-0x4]
  437e1a:	mov    ecx,0x1
  437e1f:	mov    edx,DWORD PTR ds:0x40769c
  437e25:	call   0x4063b0
  437e2a:	add    esp,0x4
  437e2d:	push   ebx
  437e2e:	push   0x0
  437e30:	lea    ecx,[ebp-0x4]
  437e33:	mov    edx,esi
  437e35:	mov    eax,ds:0x41c1fc
  437e3a:	call   0x41c25c
  437e3f:	mov    eax,DWORD PTR [ebp+0x8]
  437e42:	push   eax
  437e43:	lea    ecx,[ebp-0x8]
  437e46:	mov    edx,DWORD PTR [ebp-0x4]
  437e49:	mov    eax,edi
  437e4b:	call   0x437e9c
  437e50:	mov    eax,DWORD PTR [ebp-0x8]
  437e53:	mov    ecx,0x7fffffff
  437e58:	xor    edx,edx
  437e5a:	call   0x41d7a4
  437e5f:	jmp    0x437e69
  437e61:	mov    eax,DWORD PTR [ebp+0x8]
  437e64:	call   0x404f88
  437e69:	xor    eax,eax
  437e6b:	pop    edx
  437e6c:	pop    ecx
  437e6d:	pop    ecx
  437e6e:	mov    DWORD PTR fs:[eax],edx
  437e71:	push   0x437e91
  437e76:	lea    eax,[ebp-0x8]
  437e79:	mov    edx,DWORD PTR ds:0x40769c
  437e7f:	mov    ecx,0x2
  437e84:	call   0x405b50
  437e89:	ret    
  437e8a:	jmp    0x40481c
  437e8f:	jmp    0x437e76
  437e91:	pop    edi
  437e92:	pop    esi
  437e93:	pop    ebx
  437e94:	pop    ecx
  437e95:	pop    ecx
  437e96:	pop    ebp
  437e97:	ret    0x4
  437e9a:	mov    eax,eax
  437e9c:	push   ebp
  437e9d:	mov    ebp,esp
  437e9f:	push   ecx
  437ea0:	mov    ecx,0x8
  437ea5:	push   0x0
  437ea7:	push   0x0
  437ea9:	dec    ecx
  437eaa:	jne    0x437ea5
  437eac:	xchg   DWORD PTR [ebp-0x4],ecx
  437eaf:	push   ebx
  437eb0:	push   esi
  437eb1:	push   edi
  437eb2:	mov    DWORD PTR [ebp-0x8],ecx
  437eb5:	mov    DWORD PTR [ebp-0x4],edx
  437eb8:	mov    edi,eax
  437eba:	mov    eax,DWORD PTR [ebp-0x4]
  437ebd:	call   0x406420
  437ec2:	xor    eax,eax
  437ec4:	push   ebp
  437ec5:	push   0x438491
  437eca:	push   DWORD PTR fs:[eax]
  437ecd:	mov    DWORD PTR fs:[eax],esp
  437ed0:	mov    eax,DWORD PTR [ebp-0x4]
  437ed3:	call   0x4061f4
  437ed8:	mov    DWORD PTR [ebp-0xc],eax
  437edb:	mov    eax,DWORD PTR [ebp-0xc]
  437ede:	add    eax,0x2
  437ee1:	jno    0x437ee8
  437ee3:	call   0x403f70
  437ee8:	mov    ecx,0x3
  437eed:	cdq    
  437eee:	idiv   ecx
  437ef0:	imul   ebx,eax,0x4
  437ef3:	jno    0x437efa
  437ef5:	call   0x403f70
  437efa:	push   ebx
  437efb:	mov    eax,DWORD PTR [ebp-0x8]
  437efe:	mov    ecx,0x1
  437f03:	mov    edx,DWORD PTR ds:0x40769c
  437f09:	call   0x4063b0
  437f0e:	add    esp,0x4
  437f11:	xor    ebx,ebx
  437f13:	xor    esi,esi
  437f15:	cmp    esi,DWORD PTR [ebp-0xc]
  437f18:	jg     0x438370
  437f1e:	mov    eax,DWORD PTR [ebp-0xc]
  437f21:	sub    eax,esi
  437f23:	jno    0x437f2a
  437f25:	call   0x403f70
  437f2a:	mov    DWORD PTR [ebp-0x10],eax
  437f2d:	cmp    DWORD PTR [ebp-0x10],0x3
  437f31:	jle    0x437fa9
  437f33:	mov    eax,DWORD PTR [ebp-0x4]
  437f36:	test   eax,eax
  437f38:	je     0x437f3f
  437f3a:	cmp    esi,DWORD PTR [eax-0x4]
  437f3d:	jb     0x437f44
  437f3f:	call   0x403f68
  437f44:	movzx  eax,BYTE PTR [eax+esi*1]
  437f48:	mov    BYTE PTR [ebp-0x11],al
  437f4b:	mov    eax,esi
  437f4d:	add    eax,0x1
  437f50:	jno    0x437f57
  437f52:	call   0x403f70
  437f57:	mov    edx,DWORD PTR [ebp-0x4]
  437f5a:	test   edx,edx
  437f5c:	je     0x437f63
  437f5e:	cmp    eax,DWORD PTR [edx-0x4]
  437f61:	jb     0x437f68
  437f63:	call   0x403f68
  437f68:	movzx  eax,BYTE PTR [edx+eax*1]
  437f6c:	mov    BYTE PTR [ebp-0x12],al
  437f6f:	mov    eax,esi
  437f71:	add    eax,0x2
  437f74:	jno    0x437f7b
  437f76:	call   0x403f70
  437f7b:	mov    edx,DWORD PTR [ebp-0x4]
  437f7e:	test   edx,edx
  437f80:	je     0x437f87
  437f82:	cmp    eax,DWORD PTR [edx-0x4]
  437f85:	jb     0x437f8c
  437f87:	call   0x403f68
  437f8c:	movzx  eax,BYTE PTR [edx+eax*1]
  437f90:	mov    BYTE PTR [ebp-0x13],al
  437f93:	mov    DWORD PTR [ebp-0x18],0x3
  437f9a:	add    esi,0x3
  437f9d:	jno    0x437fa4
  437f9f:	call   0x403f70
  437fa4:	jmp    0x4380b4
  437fa9:	cmp    DWORD PTR [ebp-0x10],0x2
  437fad:	jle    0x438026
  437faf:	mov    eax,DWORD PTR [ebp-0x4]
  437fb2:	test   eax,eax
  437fb4:	je     0x437fbb
  437fb6:	cmp    esi,DWORD PTR [eax-0x4]
  437fb9:	jb     0x437fc0
  437fbb:	call   0x403f68
  437fc0:	movzx  eax,BYTE PTR [eax+esi*1]
  437fc4:	mov    BYTE PTR [ebp-0x11],al
  437fc7:	mov    eax,esi
  437fc9:	add    eax,0x1
  437fcc:	jno    0x437fd3
  437fce:	call   0x403f70
  437fd3:	mov    edx,DWORD PTR [ebp-0x4]
  437fd6:	test   edx,edx
  437fd8:	je     0x437fdf
  437fda:	cmp    eax,DWORD PTR [edx-0x4]
  437fdd:	jb     0x437fe4
  437fdf:	call   0x403f68
  437fe4:	movzx  eax,BYTE PTR [edx+eax*1]
  437fe8:	mov    BYTE PTR [ebp-0x12],al
  437feb:	add    esi,0x2
  437fee:	jno    0x437ff5
  437ff0:	call   0x403f70
  437ff5:	mov    eax,DWORD PTR [ebp-0x4]
  437ff8:	test   eax,eax
  437ffa:	je     0x438001
  437ffc:	cmp    esi,DWORD PTR [eax-0x4]
  437fff:	jb     0x438006
  438001:	call   0x403f68
  438006:	movzx  eax,BYTE PTR [eax+esi*1]
  43800a:	mov    BYTE PTR [ebp-0x13],al
  43800d:	mov    DWORD PTR [ebp-0x18],0x3
  438014:	mov    esi,DWORD PTR [ebp-0xc]
  438017:	add    esi,0x1
  43801a:	jno    0x438021
  43801c:	call   0x403f70
  438021:	jmp    0x4380b4
  438026:	cmp    DWORD PTR [ebp-0x10],0x1
  43802a:	jle    0x438080
  43802c:	mov    eax,DWORD PTR [ebp-0x4]
  43802f:	test   eax,eax
  438031:	je     0x438038
  438033:	cmp    esi,DWORD PTR [eax-0x4]
  438036:	jb     0x43803d
  438038:	call   0x403f68
  43803d:	movzx  eax,BYTE PTR [eax+esi*1]
  438041:	mov    BYTE PTR [ebp-0x11],al
  438044:	add    esi,0x1
  438047:	jno    0x43804e
  438049:	call   0x403f70
  43804e:	mov    eax,DWORD PTR [ebp-0x4]
  438051:	test   eax,eax
  438053:	je     0x43805a
  438055:	cmp    esi,DWORD PTR [eax-0x4]
  438058:	jb     0x43805f
  43805a:	call   0x403f68
  43805f:	movzx  eax,BYTE PTR [eax+esi*1]
  438063:	mov    BYTE PTR [ebp-0x12],al
  438066:	mov    BYTE PTR [ebp-0x13],0x0
  43806a:	mov    DWORD PTR [ebp-0x18],0x2
  438071:	mov    esi,DWORD PTR [ebp-0xc]
  438074:	add    esi,0x1
  438077:	jno    0x43807e
  438079:	call   0x403f70
  43807e:	jmp    0x4380b4
  438080:	mov    eax,DWORD PTR [ebp-0x4]
  438083:	test   eax,eax
  438085:	je     0x43808c
  438087:	cmp    esi,DWORD PTR [eax-0x4]
  43808a:	jb     0x438091
  43808c:	call   0x403f68
  438091:	movzx  eax,BYTE PTR [eax+esi*1]
  438095:	mov    BYTE PTR [ebp-0x11],al
  438098:	mov    BYTE PTR [ebp-0x12],0x0
  43809c:	mov    BYTE PTR [ebp-0x13],0x0
  4380a0:	mov    DWORD PTR [ebp-0x18],0x1
  4380a7:	mov    esi,DWORD PTR [ebp-0xc]
  4380aa:	add    esi,0x1
  4380ad:	jno    0x4380b4
  4380af:	call   0x403f70
  4380b4:	mov    eax,DWORD PTR [edi+0x30]
  4380b7:	call   0x405248
  4380bc:	test   eax,eax
  4380be:	jg     0x4380d4
  4380c0:	mov    ecx,0x1a2
  4380c5:	mov    edx,0x4384a8
  4380ca:	mov    eax,0x4384e8
  4380cf:	call   0x404eb4
  4380d4:	movzx  eax,BYTE PTR [ebp-0x11]
  4380d8:	shr    eax,0x2
  4380db:	and    eax,0x3f
  4380de:	add    eax,0x1
  4380e1:	jno    0x4380e8
  4380e3:	call   0x403f70
  4380e8:	mov    edx,DWORD PTR [edi+0x30]
  4380eb:	dec    eax
  4380ec:	test   edx,edx
  4380ee:	je     0x4380f5
  4380f0:	cmp    eax,DWORD PTR [edx-0x4]
  4380f3:	jb     0x4380fa
  4380f5:	call   0x403f68
  4380fa:	inc    eax
  4380fb:	movzx  eax,BYTE PTR [edx+eax*1-0x1]
  438100:	mov    BYTE PTR [ebp-0x1c],al
  438103:	movzx  eax,BYTE PTR [ebp-0x11]
  438107:	shl    eax,0x4
  43810a:	movzx  edx,BYTE PTR [ebp-0x12]
  43810e:	shr    edx,0x4
  438111:	or     eax,edx
  438113:	and    eax,0x3f
  438116:	add    eax,0x1
  438119:	jno    0x438120
  43811b:	call   0x403f70
  438120:	mov    edx,DWORD PTR [edi+0x30]
  438123:	dec    eax
  438124:	test   edx,edx
  438126:	je     0x43812d
  438128:	cmp    eax,DWORD PTR [edx-0x4]
  43812b:	jb     0x438132
  43812d:	call   0x403f68
  438132:	inc    eax
  438133:	movzx  eax,BYTE PTR [edx+eax*1-0x1]
  438138:	mov    BYTE PTR [ebp-0x1b],al
  43813b:	movzx  eax,BYTE PTR [ebp-0x12]
  43813f:	add    eax,eax
  438141:	add    eax,eax
  438143:	movzx  edx,BYTE PTR [ebp-0x13]
  438147:	shr    edx,0x6
  43814a:	or     eax,edx
  43814c:	and    eax,0x3f
  43814f:	add    eax,0x1
  438152:	jno    0x438159
  438154:	call   0x403f70
  438159:	mov    edx,DWORD PTR [edi+0x30]
  43815c:	dec    eax
  43815d:	test   edx,edx
  43815f:	je     0x438166
  438161:	cmp    eax,DWORD PTR [edx-0x4]
  438164:	jb     0x43816b
  438166:	call   0x403f68
  43816b:	inc    eax
  43816c:	movzx  eax,BYTE PTR [edx+eax*1-0x1]
  438171:	mov    BYTE PTR [ebp-0x1a],al
  438174:	movzx  eax,BYTE PTR [ebp-0x13]
  438178:	and    al,0x3f
  43817a:	movzx  eax,al
  43817d:	add    eax,0x1
  438180:	jno    0x438187
  438182:	call   0x403f70
  438187:	mov    edx,DWORD PTR [edi+0x30]
  43818a:	dec    eax
  43818b:	test   edx,edx
  43818d:	je     0x438194
  43818f:	cmp    eax,DWORD PTR [edx-0x4]
  438192:	jb     0x438199
  438194:	call   0x403f68
  438199:	inc    eax
  43819a:	movzx  eax,BYTE PTR [edx+eax*1-0x1]
  43819f:	mov    BYTE PTR [ebp-0x19],al
  4381a2:	mov    eax,DWORD PTR [ebp-0x8]
  4381a5:	mov    eax,DWORD PTR [eax]
  4381a7:	call   0x4061f4
  4381ac:	mov    edx,ebx
  4381ae:	add    edx,0x4
  4381b1:	jno    0x4381b8
  4381b3:	call   0x403f70
  4381b8:	cmp    eax,edx
  4381ba:	jge    0x438279
  4381c0:	push   0x438504
  4381c5:	mov    eax,DWORD PTR [ebp-0xc]
  4381c8:	add    eax,0x2
  4381cb:	jno    0x4381d2
  4381cd:	call   0x403f70
  4381d2:	mov    DWORD PTR [ebp-0x28],eax
  4381d5:	fild   DWORD PTR [ebp-0x28]
  4381d8:	fdiv   DWORD PTR ds:0x438544
  4381de:	call   0x403314
  4381e3:	push   edx
  4381e4:	push   eax
  4381e5:	mov    eax,0x4
  4381ea:	xor    edx,edx
  4381ec:	call   0x405fb8
  4381f1:	jno    0x4381f8
  4381f3:	call   0x403f70
  4381f8:	push   edx
  4381f9:	push   eax
  4381fa:	lea    edx,[ebp-0x24]
  4381fd:	mov    eax,ds:0x41be90
  438202:	call   0x41b184
  438207:	push   DWORD PTR [ebp-0x24]
  43820a:	push   0x438550
  43820f:	lea    ecx,[ebp-0x2c]
  438212:	mov    edx,ebx
  438214:	add    edx,0x4
  438217:	jno    0x43821e
  438219:	call   0x403f70
  43821e:	mov    eax,ds:0x41be90
  438223:	call   0x41b19c
  438228:	push   DWORD PTR [ebp-0x2c]
  43822b:	push   0x438568
  438230:	lea    ecx,[ebp-0x30]
  438233:	mov    edx,esi
  438235:	mov    eax,ds:0x41be90
  43823a:	call   0x41b19c
  43823f:	push   DWORD PTR [ebp-0x30]
  438242:	push   0x43857c
  438247:	lea    ecx,[ebp-0x34]
  43824a:	mov    edx,DWORD PTR [ebp-0xc]
  43824d:	mov    eax,ds:0x41be90
  438252:	call   0x41b19c
  438257:	push   DWORD PTR [ebp-0x34]
  43825a:	lea    eax,[ebp-0x20]
  43825d:	mov    edx,0x8
  438262:	call   0x40531c
  438267:	mov    eax,DWORD PTR [ebp-0x20]
  43826a:	mov    ecx,0x1b0
  43826f:	mov    edx,0x4384a8
  438274:	call   0x404eb4
  438279:	mov    eax,DWORD PTR [ebp-0x8]
  43827c:	mov    eax,DWORD PTR [eax]
  43827e:	test   eax,eax
  438280:	je     0x438287
  438282:	cmp    ebx,DWORD PTR [eax-0x4]
  438285:	jb     0x43828c
  438287:	call   0x403f68
  43828c:	movzx  edx,BYTE PTR [ebp-0x1c]
  438290:	mov    BYTE PTR [eax+ebx*1],dl
  438293:	mov    eax,ebx
  438295:	add    eax,0x1
  438298:	jno    0x43829f
  43829a:	call   0x403f70
  43829f:	mov    edx,DWORD PTR [ebp-0x8]
  4382a2:	mov    edx,DWORD PTR [edx]
  4382a4:	test   edx,edx
  4382a6:	je     0x4382ad
  4382a8:	cmp    eax,DWORD PTR [edx-0x4]
  4382ab:	jb     0x4382b2
  4382ad:	call   0x403f68
  4382b2:	movzx  ecx,BYTE PTR [ebp-0x1b]
  4382b6:	mov    BYTE PTR [edx+eax*1],cl
  4382b9:	mov    eax,ebx
  4382bb:	add    eax,0x2
  4382be:	jno    0x4382c5
  4382c0:	call   0x403f70
  4382c5:	mov    edx,DWORD PTR [ebp-0x8]
  4382c8:	mov    edx,DWORD PTR [edx]
  4382ca:	test   edx,edx
  4382cc:	je     0x4382d3
  4382ce:	cmp    eax,DWORD PTR [edx-0x4]
  4382d1:	jb     0x4382d8
  4382d3:	call   0x403f68
  4382d8:	movzx  ecx,BYTE PTR [ebp-0x1a]
  4382dc:	mov    BYTE PTR [edx+eax*1],cl
  4382df:	mov    eax,ebx
  4382e1:	add    eax,0x3
  4382e4:	jno    0x4382eb
  4382e6:	call   0x403f70
  4382eb:	mov    edx,DWORD PTR [ebp-0x8]
  4382ee:	mov    edx,DWORD PTR [edx]
  4382f0:	test   edx,edx
  4382f2:	je     0x4382f9
  4382f4:	cmp    eax,DWORD PTR [edx-0x4]
  4382f7:	jb     0x4382fe
  4382f9:	call   0x403f68
  4382fe:	movzx  ecx,BYTE PTR [ebp-0x19]
  438302:	mov    BYTE PTR [edx+eax*1],cl
  438305:	add    ebx,0x4
  438308:	jno    0x43830f
  43830a:	call   0x403f70
  43830f:	cmp    DWORD PTR [ebp-0x18],0x3
  438313:	jge    0x438367
  438315:	mov    eax,ebx
  438317:	sub    eax,0x1
  43831a:	jno    0x438321
  43831c:	call   0x403f70
  438321:	mov    edx,DWORD PTR [ebp-0x8]
  438324:	mov    edx,DWORD PTR [edx]
  438326:	test   edx,edx
  438328:	je     0x43832f
  43832a:	cmp    eax,DWORD PTR [edx-0x4]
  43832d:	jb     0x438334
  43832f:	call   0x403f68
  438334:	movzx  ecx,BYTE PTR [edi+0x34]
  438338:	mov    BYTE PTR [edx+eax*1],cl
  43833b:	cmp    DWORD PTR [ebp-0x18],0x1
  43833f:	jne    0x438367
  438341:	mov    eax,ebx
  438343:	sub    eax,0x2
  438346:	jno    0x43834d
  438348:	call   0x403f70
  43834d:	mov    edx,DWORD PTR [ebp-0x8]
  438350:	mov    edx,DWORD PTR [edx]
  438352:	test   edx,edx
  438354:	je     0x43835b
  438356:	cmp    eax,DWORD PTR [edx-0x4]
  438359:	jb     0x438360
  43835b:	call   0x403f68
  438360:	movzx  ecx,BYTE PTR [edi+0x34]
  438364:	mov    BYTE PTR [edx+eax*1],cl
  438367:	cmp    esi,DWORD PTR [ebp-0xc]
  43836a:	jle    0x437f1e
  438370:	mov    eax,DWORD PTR [ebp-0xc]
  438373:	add    eax,0x2
  438376:	jno    0x43837d
  438378:	call   0x403f70
  43837d:	mov    DWORD PTR [ebp-0x28],eax
  438380:	fild   DWORD PTR [ebp-0x28]
  438383:	fdiv   DWORD PTR ds:0x438544
  438389:	call   0x403314
  43838e:	push   edx
  43838f:	push   eax
  438390:	mov    eax,0x4
  438395:	xor    edx,edx
  438397:	call   0x405fb8
  43839c:	jno    0x4383a3
  43839e:	call   0x403f70
  4383a3:	push   edx
  4383a4:	push   eax
  4383a5:	mov    eax,ebx
  4383a7:	cdq    
  4383a8:	cmp    edx,DWORD PTR [esp+0x4]
  4383ac:	jne    0x4383b1
  4383ae:	cmp    eax,DWORD PTR [esp]
  4383b1:	pop    edx
  4383b2:	pop    eax
  4383b3:	je     0x43845b
  4383b9:	push   0x43858c
  4383be:	mov    eax,DWORD PTR [ebp-0xc]
  4383c1:	add    eax,0x2
  4383c4:	jno    0x4383cb
  4383c6:	call   0x403f70
  4383cb:	mov    DWORD PTR [ebp-0x28],eax
  4383ce:	fild   DWORD PTR [ebp-0x28]
  4383d1:	fdiv   DWORD PTR ds:0x438544
  4383d7:	call   0x403314
  4383dc:	push   edx
  4383dd:	push   eax
  4383de:	mov    eax,0x4
  4383e3:	xor    edx,edx
  4383e5:	call   0x405fb8
  4383ea:	jno    0x4383f1
  4383ec:	call   0x403f70
  4383f1:	push   edx
  4383f2:	push   eax
  4383f3:	lea    edx,[ebp-0x3c]
  4383f6:	mov    eax,ds:0x41be90
  4383fb:	call   0x41b184
  438400:	push   DWORD PTR [ebp-0x3c]
  438403:	push   0x4385d0
  438408:	lea    ecx,[ebp-0x40]
  43840b:	mov    edx,ebx
  43840d:	add    edx,0x4
  438410:	jno    0x438417
  438412:	call   0x403f70
  438417:	mov    eax,ds:0x41be90
  43841c:	call   0x41b19c
  438421:	push   DWORD PTR [ebp-0x40]
  438424:	push   0x4385e8
  438429:	lea    ecx,[ebp-0x44]
  43842c:	mov    edx,DWORD PTR [ebp-0xc]
  43842f:	mov    eax,ds:0x41be90
  438434:	call   0x41b19c
  438439:	push   DWORD PTR [ebp-0x44]
  43843c:	lea    eax,[ebp-0x38]
  43843f:	mov    edx,0x6
  438444:	call   0x40531c
  438449:	mov    eax,DWORD PTR [ebp-0x38]
  43844c:	mov    ecx,0x1c7
  438451:	mov    edx,0x4384a8
  438456:	call   0x404eb4
  43845b:	xor    eax,eax
  43845d:	pop    edx
  43845e:	pop    ecx
  43845f:	pop    ecx
  438460:	mov    DWORD PTR fs:[eax],edx
  438463:	push   0x438498
  438468:	lea    eax,[ebp-0x44]
  43846b:	mov    edx,0x7
  438470:	call   0x404fac
  438475:	lea    eax,[ebp-0x24]
  438478:	mov    edx,0x2
  43847d:	call   0x404fac
  438482:	lea    eax,[ebp-0x4]
  438485:	mov    edx,DWORD PTR ds:0x40769c
  43848b:	call   0x4063bc
  438490:	ret    
  438491:	jmp    0x40481c
  438496:	jmp    0x438468
  438498:	pop    edi
  438499:	pop    esi
  43849a:	pop    ebx
  43849b:	mov    esp,ebp
  43849d:	pop    ebp
  43849e:	ret    
  43849f:	add    bh,bh
  4384a1:	(bad)  
  4384a2:	(bad)  
  4384a3:	push   DWORD PTR [eax+eax*1]
  4384a6:	add    BYTE PTR [eax],al
  4384a8:	inc    ebx
  4384a9:	cmp    bl,BYTE PTR [edx+eiz*2+0x75]
  4384ad:	imul   ebp,DWORD PTR [esp+eiz*2+0x73],0x4170545c
  4384b5:	fs outs dx,DWORD PTR fs:[esi]
  4384b8:	outs   dx,BYTE PTR ds:[esi]
  4384b9:	jae    0x438517
  4384bb:	dec    ecx
  4384bc:	outs   dx,BYTE PTR ds:[esi]
  4384bd:	fs jns 0x43850e
  4384c0:	gs je  0x43851f
  4384c3:	push   eax
  4384c4:	jb     0x438535
  4384c6:	je     0x438537
  4384c8:	arpl   WORD PTR [edi+0x6c],bp
  4384cb:	jae    0x438529
  4384cd:	dec    ecx
  4384ce:	fs inc ebx
  4384d0:	outs   dx,DWORD PTR ds:[esi]
  4384d1:	fs gs jb 0x438508
  4384d5:	je     0x438546
  4384d7:	xor    al,0x2e
  4384d9:	jo     0x43853c
  4384db:	jae    0x4384dd
  4384dd:	add    BYTE PTR [eax],al
  4384df:	add    bh,bh
  4384e1:	(bad)  
  4384e2:	(bad)  
  4384e3:	call   DWORD PTR [ecx]
  4384e5:	add    BYTE PTR [eax],al
  4384e7:	add    BYTE PTR [ecx+0x73],al
  4384ea:	jae    0x438551
  4384ec:	jb     0x438562
  4384ee:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  4384f5:	ins    BYTE PTR es:[edi],dx
  4384f6:	jne    0x43856a
  4384f8:	add    BYTE PTR gs:[eax],al
  4384fb:	add    bh,bh
  4384fd:	(bad)  
  4384fe:	(bad)  
  4384ff:	(bad)  
  438500:	cmp    al,0x0
  438502:	add    BYTE PTR [eax],al
  438504:	push   esp
  438505:	dec    ecx
  438506:	fs inc ebp
  438508:	outs   dx,BYTE PTR ds:[esi]
  438509:	arpl   WORD PTR [edi+0x64],bp
  43850c:	gs jb  0x438542
  43850f:	je     0x438580
  438511:	xor    al,0x2e
  438513:	inc    ebp
  438514:	outs   dx,BYTE PTR ds:[esi]
  438515:	arpl   WORD PTR [edi+0x64],bp
  438518:	cmp    ah,BYTE PTR gs:[eax]
  43851b:	inc    ebx
  43851c:	popa   
  43851d:	ins    BYTE PTR es:[edi],dx
  43851e:	arpl   WORD PTR [ebp+0x6c],si
  438521:	popa   
  438522:	je     0x438589
  438524:	and    BYTE PTR fs:[ebp+eiz*2+0x6e],ch
  438529:	addr16 je 0x438594
  43852c:	and    BYTE PTR [ebp+0x78],ah
  43852f:	arpl   WORD PTR [ebp+0x65],sp
  438532:	fs gs and BYTE PTR fs:[eax],ch
  438537:	gs js  0x4385aa
  43853a:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  43853f:	and    BYTE PTR [eax],al
  438541:	add    BYTE PTR [eax],al
  438543:	add    BYTE PTR [eax],al
  438545:	add    BYTE PTR [eax+0x40],al
  438548:	(bad)  
  438549:	(bad)  
  43854a:	(bad)  
  43854b:	dec    DWORD PTR [esi]
  43854d:	add    BYTE PTR [eax],al
  43854f:	add    BYTE PTR [eax+eiz*1],ch
  438552:	popa   
  438553:	bound  ebp,QWORD PTR [edi+0x75]
  438556:	je     0x438578
  438558:	je     0x4385c9
  43855a:	and    BYTE PTR [edi+0x6f],ah
  43855d:	and    BYTE PTR [eax],al
  43855f:	add    bh,bh
  438561:	(bad)  
  438562:	(bad)  
  438563:	dec    DWORD PTR [ebx]
  438565:	add    BYTE PTR [eax],al
  438567:	add    BYTE PTR [eax],ah
  438569:	popa   
  43856a:	je     0x43858c
  43856c:	outs   dx,DWORD PTR ds:[esi]
  43856d:	data16 data16 jae 0x4385d6
  438571:	je     0x438593
  438573:	add    bh,bh
  438575:	(bad)  
  438576:	(bad)  
  438577:	inc    DWORD PTR [eax+eax*1]
  43857a:	add    BYTE PTR [eax],al
  43857c:	and    BYTE PTR [edi+0x66],ch
  43857f:	and    BYTE PTR [eax],al
  438581:	add    BYTE PTR [eax],al
  438583:	add    bh,bh
  438585:	(bad)  
  438586:	(bad)  
  438587:	(bad)  
  438588:	cmp    eax,DWORD PTR [eax]
  43858a:	add    BYTE PTR [eax],al
  43858c:	push   esp
  43858d:	dec    ecx
  43858e:	fs inc ebp
  438590:	outs   dx,BYTE PTR ds:[esi]
  438591:	arpl   WORD PTR [edi+0x64],bp
  438594:	gs jb  0x4385ca
  438597:	je     0x438608
  438599:	xor    al,0x2e
  43859b:	inc    ebp
  43859c:	outs   dx,BYTE PTR ds:[esi]
  43859d:	arpl   WORD PTR [edi+0x64],bp
  4385a0:	cmp    ah,BYTE PTR gs:[eax]
  4385a3:	inc    ebx
  4385a4:	popa   
  4385a5:	ins    BYTE PTR es:[edi],dx
  4385a6:	arpl   WORD PTR [ebp+0x6c],si
  4385a9:	popa   
  4385aa:	je     0x438611
  4385ac:	and    BYTE PTR fs:[ebp+eiz*2+0x6e],ch
  4385b1:	addr16 je 0x43861c
  4385b4:	and    BYTE PTR [esi+0x6f],ch
  4385b7:	je     0x4385d9
  4385b9:	ins    DWORD PTR es:[edi],dx
  4385ba:	gs je  0x4385dd
  4385bd:	sub    BYTE PTR [ebp+0x78],ah
  4385c0:	jo     0x438627
  4385c2:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  4385c6:	and    BYTE PTR [eax],al
  4385c8:	(bad)  
  4385c9:	(bad)  
  4385ca:	(bad)  
  4385cb:	dec    DWORD PTR [esi]
  4385cd:	add    BYTE PTR [eax],al
  4385cf:	add    BYTE PTR [eax+eiz*1],ch
  4385d2:	imul   bp,WORD PTR [esi+0x69],0x6873
  4385d8:	gs and BYTE PTR fs:[ecx+0x74],ah
  4385dd:	and    BYTE PTR [eax],al
  4385df:	add    bh,bh
  4385e1:	(bad)  
  4385e2:	(bad)  
  4385e3:	dec    DWORD PTR [eax+eax*1]
  4385e6:	add    BYTE PTR [eax],al
  4385e8:	sub    al,0x20
  4385ea:	inc    edx
  4385eb:	jne    0x438653
  4385ed:	jae    0x438658
  4385ef:	jp     0x438656
  4385f1:	and    BYTE PTR ds:0x20,bh
  4385f7:	add    BYTE PTR [esi+eax*4+0x43],al
	...
  438607:	add    BYTE PTR [eax+0x4386],dl
	...
  438615:	add    BYTE PTR [eax],al
  438617:	add    BYTE PTR [esi+eax*4+0x43],bh
  43861b:	add    BYTE PTR [eax],bh
  43861d:	add    BYTE PTR [eax],al
  43861f:	add    BYTE PTR [edi+esi*2],dl
  438622:	inc    ebx
  438623:	add    BYTE PTR [eax],bl
  438625:	test   eax,0x42dc0041
  43862a:	inc    eax
  43862b:	add    BYTE PTR [eax-0x1bffbe5e],ch
  438631:	inc    edx
  438632:	inc    eax
  438633:	add    al,bl
  438635:	inc    edx
  438636:	inc    eax
  438637:	add    BYTE PTR [eax],bh
  438639:	inc    eax
  43863a:	inc    eax
  43863b:	add    BYTE PTR [eax+eax*2+0x40],dl
  43863f:	add    BYTE PTR [edx+eiz*4],ch
  438642:	inc    ecx
  438643:	add    BYTE PTR [eax+0x41],ch
  438646:	inc    ecx
  438647:	add    BYTE PTR [eax-0x5b],dh
  43864a:	inc    ecx
  43864b:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  438652:	inc    ecx
  438653:	add    BYTE PTR [eax],dl
  438655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438656:	inc    ecx
  438657:	add    BYTE PTR [eax-0x5a],bl
  43865a:	inc    ecx
  43865b:	add    BYTE PTR [eax-0x59],dl
  43865e:	inc    ecx
  43865f:	add    BYTE PTR [eax],dh
  438661:	test   eax,0xa6680041
  438666:	inc    ecx
  438667:	add    BYTE PTR [eax-0x5a],ah
  43866a:	inc    ecx
  43866b:	add    BYTE PTR [eax],bh
  43866d:	test   eax,0x46bc0041
  438672:	inc    edx
  438673:	add    BYTE PTR [edi+eax*4],al
  438676:	inc    ebx
  438677:	add    al,al
  438679:	jge    0x4386be
  43867b:	add    BYTE PTR [esi],cl
  43867d:	push   esp
  43867e:	dec    ecx
  43867f:	fs inc ebp
  438681:	outs   dx,BYTE PTR ds:[esi]
  438682:	arpl   WORD PTR [edi+0x64],bp
  438685:	gs jb  0x4386d5
  438688:	dec    ecx
  438689:	dec    ebp
  43868a:	inc    ebp
  43868b:	nop
  43868c:	nop
  43868d:	xchg   BYTE PTR [ebx+0x0],al
  438690:	pop    es
  438691:	push   cs
  438692:	push   esp
  438693:	dec    ecx
  438694:	fs inc ebp
  438696:	outs   dx,BYTE PTR ds:[esi]
  438697:	arpl   WORD PTR [edi+0x64],bp
  43869a:	gs jb  0x4386ea
  43869d:	dec    ecx
  43869e:	dec    ebp
  43869f:	inc    ebp
  4386a0:	inc    esp
  4386a1:	xchg   BYTE PTR [ebx+0x0],al
  4386a4:	mov    esp,0x4004377
  4386a9:	add    BYTE PTR [ebx],cl
  4386ab:	dec    ecx
  4386ac:	fs inc ebx
  4386ae:	outs   dx,DWORD PTR ds:[esi]
  4386af:	fs gs jb 0x438700
  4386b3:	dec    ecx
  4386b4:	dec    ebp
  4386b5:	inc    ebp
  4386b6:	add    BYTE PTR [eax],al
  4386b8:	(bad)  
  4386b9:	(bad)  
  4386ba:	(bad)  
  4386bb:	inc    DWORD PTR [eax+0x0]
  4386be:	add    BYTE PTR [eax],al
  4386c0:	inc    ecx
  4386c1:	inc    edx
  4386c2:	inc    ebx
  4386c3:	inc    esp
  4386c4:	inc    ebp
  4386c5:	inc    esi
  4386c6:	inc    edi
  4386c7:	dec    eax
  4386c8:	dec    ecx
  4386c9:	dec    edx
  4386ca:	dec    ebx
  4386cb:	dec    esp
  4386cc:	dec    ebp
  4386cd:	dec    esi
  4386ce:	dec    edi
  4386cf:	push   eax
  4386d0:	push   ecx
  4386d1:	push   edx
  4386d2:	push   ebx
  4386d3:	push   esp
  4386d4:	push   ebp
  4386d5:	push   esi
  4386d6:	push   edi
  4386d7:	pop    eax
  4386d8:	pop    ecx
  4386d9:	pop    edx
  4386da:	popa   
  4386db:	bound  esp,QWORD PTR [ebx+0x64]
  4386de:	gs addr16 pushw 0x6a69
  4386e4:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  4386e9:	jo     0x43875c
  4386eb:	jb     0x438760
  4386ed:	je     0x438764
  4386ef:	jbe    0x438768
  4386f1:	js     0x43876c
  4386f3:	jp     0x438725
  4386f5:	xor    DWORD PTR [edx],esi
  4386f7:	xor    esi,DWORD PTR [esi*1+0x39383736]
  4386fe:	sub    ebp,DWORD PTR [edi]
  438700:	add    BYTE PTR [eax],al
  438702:	add    BYTE PTR [eax],al
  438704:	push   ebx
  438705:	mov    ebx,eax
  438707:	mov    eax,ebx
  438709:	call   0x4246f8
  43870e:	lea    eax,[ebx+0x30]
  438711:	mov    edx,DWORD PTR ds:0x46283c
  438717:	call   0x404fdc
  43871c:	mov    BYTE PTR [ebx+0x34],0x3d
  438720:	pop    ebx
  438721:	ret    
  438722:	mov    eax,eax
  438724:	push   ebp
  438725:	mov    ebp,esp
  438727:	xor    eax,eax
  438729:	push   ebp
  43872a:	push   0x438755
  43872f:	push   DWORD PTR fs:[eax]
  438732:	mov    DWORD PTR fs:[eax],esp
  438735:	inc    DWORD PTR ds:0x4738c4
  43873b:	jne    0x438747
  43873d:	mov    eax,0x46283c
  438742:	call   0x404f88
  438747:	xor    eax,eax
  438749:	pop    edx
  43874a:	pop    ecx
  43874b:	pop    ecx
  43874c:	mov    DWORD PTR fs:[eax],edx
  43874f:	push   0x43875c
  438754:	ret    
  438755:	jmp    0x40481c
  43875a:	jmp    0x438754
  43875c:	pop    ebp
  43875d:	ret    
  43875e:	mov    eax,eax
  438760:	lods   al,BYTE PTR ds:[esi]
  438761:	xchg   DWORD PTR [ebx+0x0],eax
	...
  438770:	lock xchg DWORD PTR [ebx+0x0],eax
	...
  438780:	fadd   DWORD PTR [edi+0x100043]
  438786:	add    BYTE PTR [eax],al
  438788:	pushf  
  438789:	sub    BYTE PTR [ecx+0x0],al
  43878c:	rol    BYTE PTR [edx+0x40],1
  43878f:	add    ah,bl
  438791:	inc    edx
  438792:	inc    eax
  438793:	add    al,ah
  438795:	inc    edx
  438796:	inc    eax
  438797:	add    ah,ah
  438799:	inc    edx
  43879a:	inc    eax
  43879b:	add    al,bl
  43879d:	inc    edx
  43879e:	inc    eax
  43879f:	add    BYTE PTR [eax],bh
  4387a1:	inc    eax
  4387a2:	inc    eax
  4387a3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4387a7:	add    BYTE PTR [eax+0x6800438b],bh
  4387ad:	inc    ecx
  4387ae:	inc    ecx
  4387af:	add    BYTE PTR [eax+0x41],dh
  4387b2:	inc    ecx
  4387b3:	add    BYTE PTR [eax+eax*2+0x33380041],al
  4387ba:	inc    eax
  4387bb:	add    BYTE PTR [eax+0x4000438d],cl
  4387c1:	lea    eax,[ebx+0x0]
  4387c4:	lea    eax,fs:[ebx+0x0]
  4387c8:	ins    BYTE PTR es:[edi],dx
  4387c9:	mov    eax,DWORD PTR [ebx+0x0]
  4387cc:	in     al,0x8c
  4387ce:	inc    ebx
  4387cf:	add    BYTE PTR [eax],bh
  4387d1:	xor    eax,DWORD PTR [eax+0x0]
  4387d4:	cmp    BYTE PTR [ebx],dh
  4387d6:	inc    eax
  4387d7:	add    BYTE PTR [ecx],dl
  4387d9:	push   esp
  4387da:	dec    ecx
  4387db:	fs inc ecx
  4387dd:	jne    0x438853
  4387df:	push   0x69746e65
  4387e4:	arpl   WORD PTR [ecx+0x74],sp
  4387e7:	imul   ebp,DWORD PTR [edi+0x6e],0x87f0c08b
  4387ee:	inc    ebx
  4387ef:	add    BYTE PTR [edi],al
  4387f1:	adc    DWORD PTR [ecx+ecx*2+0x64],edx
  4387f5:	inc    ecx
  4387f6:	jne    0x43886c
  4387f8:	push   0x69746e65
  4387fd:	arpl   WORD PTR [ecx+0x74],sp
  438800:	imul   ebp,DWORD PTR [edi+0x6e],0x4387ac
  438807:	adc    BYTE PTR [ecx],ch
  438809:	inc    ecx
  43880a:	add    BYTE PTR [eax],al
  43880c:	add    BYTE PTR [eax],dl
  43880e:	dec    ecx
  43880f:	fs inc ecx
  438811:	jne    0x438887
  438813:	push   0x69746e65
  438818:	arpl   WORD PTR [ecx+0x74],sp
  43881b:	imul   ebp,DWORD PTR [edi+0x6e],0x886c0000
  438822:	inc    ebx
	...
  43882b:	add    BYTE PTR [eax-0x37ffbc78],bl
  438831:	mov    BYTE PTR [ebx+0x0],al
	...
  438840:	stos   BYTE PTR es:[edi],al
  438841:	mov    BYTE PTR [ebx+0x0],al
  438844:	adc    al,0x0
  438846:	add    BYTE PTR [eax],al
  438848:	pusha  
  438849:	xchg   DWORD PTR [ebx+0x0],eax
  43884c:	rol    BYTE PTR [edx+0x40],1
  43884f:	add    ah,bl
  438851:	inc    edx
  438852:	inc    eax
  438853:	add    al,ah
  438855:	inc    edx
  438856:	inc    eax
  438857:	add    ah,ah
  438859:	inc    edx
  43885a:	inc    eax
  43885b:	add    al,bl
  43885d:	inc    edx
  43885e:	inc    eax
  43885f:	add    BYTE PTR [eax],bh
  438861:	inc    eax
  438862:	inc    eax
  438863:	add    BYTE PTR [eax+eax*2+0x40],dl
  438867:	add    BYTE PTR [eax+0x6800438b],bh
  43886d:	inc    ecx
  43886e:	inc    ecx
  43886f:	add    BYTE PTR [eax+0x41],dh
  438872:	inc    ecx
  438873:	add    BYTE PTR [eax+eax*2-0x714fffbf],al
  43887a:	inc    ebx
  43887b:	add    BYTE PTR [eax-0x70],cl
  43887e:	inc    ebx
  43887f:	add    BYTE PTR [eax-0x73],al
  438882:	inc    ebx
  438883:	add    BYTE PTR [ebp+ecx*4+0x43],ah
  438887:	add    BYTE PTR [ebp+ecx*4-0x6fcbffbd],cl
  43888e:	inc    ebx
  43888f:	add    al,cl
  438891:	lea    eax,[ebx+0x0]
  438894:	xor    BYTE PTR [eax+0xe0043],dl
  43889a:	add    BYTE PTR [eax],al
  43889c:	add    BYTE PTR [eax],al
  43889e:	add    DWORD PTR [eax],eax
  4388a0:	add    BYTE PTR [eax],al
  4388a2:	test   BYTE PTR [eax],dl
  4388a4:	inc    eax
  4388a5:	add    BYTE PTR [eax],dl
  4388a7:	add    BYTE PTR [eax],al
  4388a9:	add    BYTE PTR [esi],dl
  4388ab:	push   esp
  4388ac:	dec    ecx
  4388ad:	fs inc edx
  4388af:	popa   
  4388b0:	jae    0x43891b
  4388b2:	arpl   WORD PTR [ecx+0x75],ax
  4388b5:	je     0x43891f
  4388b7:	outs   dx,BYTE PTR gs:[esi]
  4388b9:	je     0x438924
  4388bb:	arpl   WORD PTR [ecx+0x74],sp
  4388be:	imul   ebp,DWORD PTR [edi+0x6e],0xc800408d
  4388c5:	mov    BYTE PTR [ebx+0x0],al
  4388c8:	pop    es
  4388c9:	push   ss
  4388ca:	push   esp
  4388cb:	dec    ecx
  4388cc:	fs inc edx
  4388ce:	popa   
  4388cf:	jae    0x43893a
  4388d1:	arpl   WORD PTR [ecx+0x75],ax
  4388d4:	je     0x43893e
  4388d6:	outs   dx,BYTE PTR gs:[esi]
  4388d8:	je     0x438943
  4388da:	arpl   WORD PTR [ecx+0x74],sp
  4388dd:	imul   ebp,DWORD PTR [edi+0x6e],0x43886c
  4388e4:	in     al,dx
  4388e5:	xchg   DWORD PTR [ebx+0x0],eax
  4388e8:	add    BYTE PTR [eax],al
  4388ea:	adc    BYTE PTR [ecx+0x64],cl
  4388ed:	inc    ecx
  4388ee:	jne    0x438964
  4388f0:	push   0x69746e65
  4388f5:	arpl   WORD PTR [ecx+0x74],sp
  4388f8:	imul   ebp,DWORD PTR [edi+0x6e],0x408d0000
  4388ff:	add    BYTE PTR [ecx+ecx*4+0x43],cl
	...
  43891f:	add    BYTE PTR [eax-0x77],dl
  438922:	inc    ebx
  438923:	add    BYTE PTR [eax+eax*1],cl
  438926:	add    BYTE PTR [eax],al
  438928:	dec    esp
  438929:	mov    ecx,0x42d00041
  43892e:	inc    eax
  43892f:	add    ah,bl
  438931:	inc    edx
  438932:	inc    eax
  438933:	add    al,ah
  438935:	inc    edx
  438936:	inc    eax
  438937:	add    ah,ah
  438939:	inc    edx
  43893a:	inc    eax
  43893b:	add    al,bl
  43893d:	inc    edx
  43893e:	inc    eax
  43893f:	add    BYTE PTR [eax],bh
  438941:	inc    eax
  438942:	inc    eax
  438943:	add    BYTE PTR [eax+eax*2+0x40],dl
  438947:	add    BYTE PTR [eax-0x43ffbfc0],dl
  43894d:	mov    ebp,0x45280041
  438952:	dec    ecx
  438953:	fs inc ecx
  438955:	ins    BYTE PTR es:[edi],dx
  438956:	jb     0x4389bd
  438958:	popa   
  438959:	fs jns 0x4389ae
  43895c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x64657265
  438965:	inc    ecx
  438966:	jne    0x4389dc
  438968:	push   0x69746e65
  43896d:	arpl   WORD PTR [ecx+0x74],sp
  438970:	imul   ebp,DWORD PTR [edi+0x6e],0x6874654d
  438977:	outs   dx,DWORD PTR ds:[esi]
  438978:	lea    eax,fs:[eax+0x0]
  43897c:	enter  0x4389,0x0
	...
  43899c:	enter  0x4389,0x0
  4389a0:	or     BYTE PTR [eax],al
  4389a2:	add    BYTE PTR [eax],al
  4389a4:	nop
  4389a5:	adc    BYTE PTR [eax+0x0],al
  4389a8:	rol    BYTE PTR [edx+0x40],1
  4389ab:	add    ah,bl
  4389ad:	inc    edx
  4389ae:	inc    eax
  4389af:	add    al,ah
  4389b1:	inc    edx
  4389b2:	inc    eax
  4389b3:	add    ah,ah
  4389b5:	inc    edx
  4389b6:	inc    eax
  4389b7:	add    al,bl
  4389b9:	inc    edx
  4389ba:	inc    eax
  4389bb:	add    BYTE PTR [eax],bh
  4389bd:	inc    eax
  4389be:	inc    eax
  4389bf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4389c3:	add    BYTE PTR [eax+0xf004040],dl
  4389c9:	push   esp
  4389ca:	inc    ecx
  4389cb:	jne    0x438a41
  4389cd:	push   0x7473694c
  4389d2:	dec    edi
  4389d3:	bound  ebp,QWORD PTR [edx+0x65]
  4389d6:	arpl   WORD PTR [ebp+edx*2-0x75],si
  4389da:	in     al,dx
  4389db:	add    esp,0xfffffeec
  4389e1:	push   ebx
  4389e2:	xor    ecx,ecx
  4389e4:	mov    DWORD PTR [ebp-0x8],ecx
  4389e7:	mov    DWORD PTR [ebp-0x114],ecx
  4389ed:	mov    ebx,edx
  4389ef:	mov    DWORD PTR [ebp-0x4],eax
  4389f2:	mov    eax,DWORD PTR [ebp-0x4]
  4389f5:	call   0x405408
  4389fa:	xor    eax,eax
  4389fc:	push   ebp
  4389fd:	push   0x438aec
  438a02:	push   DWORD PTR fs:[eax]
  438a05:	mov    DWORD PTR fs:[eax],esp
  438a08:	cmp    DWORD PTR ds:0x462840,0x0
  438a0f:	jne    0x438a22
  438a11:	mov    dl,0x1
  438a13:	mov    eax,ds:0x412cf0
  438a18:	call   0x404070
  438a1d:	mov    ds:0x462840,eax
  438a22:	mov    edx,DWORD PTR [ebp-0x4]
  438a25:	mov    eax,ds:0x462840
  438a2a:	mov    ecx,DWORD PTR [eax]
  438a2c:	call   DWORD PTR [ecx+0x54]
  438a2f:	test   eax,eax
  438a31:	jge    0x438a53
  438a33:	mov    dl,0x1
  438a35:	mov    eax,ds:0x43897c
  438a3a:	call   0x404070
  438a3f:	mov    DWORD PTR [eax+0x4],ebx
  438a42:	mov    ecx,eax
  438a44:	mov    edx,DWORD PTR [ebp-0x4]
  438a47:	mov    eax,ds:0x462840
  438a4c:	mov    ebx,DWORD PTR [eax]
  438a4e:	call   DWORD PTR [ebx+0x3c]
  438a51:	jmp    0x438ac6
  438a53:	push   0x0
  438a55:	lea    eax,[ebp-0x8]
  438a58:	push   eax
  438a59:	mov    edx,DWORD PTR [ebp-0x4]
  438a5c:	mov    eax,ds:0x462840
  438a61:	mov    ecx,DWORD PTR [eax]
  438a63:	call   DWORD PTR [ecx+0x54]
  438a66:	mov    edx,eax
  438a68:	mov    eax,ds:0x462840
  438a6d:	mov    ecx,DWORD PTR [eax]
  438a6f:	call   DWORD PTR [ecx+0x18]
  438a72:	mov    eax,DWORD PTR [eax+0x4]
  438a75:	lea    edx,[ebp-0x110]
  438a7b:	call   0x403f80
  438a80:	lea    eax,[ebp-0x110]
  438a86:	mov    DWORD PTR [ebp-0x10],eax
  438a89:	mov    BYTE PTR [ebp-0xc],0x4
  438a8d:	lea    eax,[ebp-0x10]
  438a90:	push   eax
  438a91:	lea    edx,[ebp-0x114]
  438a97:	mov    eax,ds:0x46dc2c
  438a9c:	call   0x406f48
  438aa1:	mov    edx,DWORD PTR [ebp-0x114]
  438aa7:	mov    eax,ds:0x41be90
  438aac:	pop    ecx
  438aad:	call   0x41b0d4
  438ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  438ab5:	mov    dl,0x1
  438ab7:	mov    eax,ds:0x438900
  438abc:	call   0x41bdbc
  438ac1:	call   0x4048fc
  438ac6:	xor    eax,eax
  438ac8:	pop    edx
  438ac9:	pop    ecx
  438aca:	pop    ecx
  438acb:	mov    DWORD PTR fs:[eax],edx
  438ace:	push   0x438af3
  438ad3:	lea    eax,[ebp-0x114]
  438ad9:	call   0x404f88
  438ade:	lea    eax,[ebp-0x8]
  438ae1:	mov    edx,0x2
  438ae6:	call   0x404fac
  438aeb:	ret    
  438aec:	jmp    0x40481c
  438af1:	jmp    0x438ad3
  438af3:	pop    ebx
  438af4:	mov    esp,ebp
  438af6:	pop    ebp
  438af7:	ret    
  438af8:	push   ebp
  438af9:	mov    ebp,esp
  438afb:	push   ecx
  438afc:	push   ebx
  438afd:	mov    DWORD PTR [ebp-0x4],eax
  438b00:	mov    eax,DWORD PTR [ebp-0x4]
  438b03:	call   0x405408
  438b08:	xor    eax,eax
  438b0a:	push   ebp
  438b0b:	push   0x438b5c
  438b10:	push   DWORD PTR fs:[eax]
  438b13:	mov    DWORD PTR fs:[eax],esp
  438b16:	mov    edx,DWORD PTR [ebp-0x4]
  438b19:	mov    eax,ds:0x462840
  438b1e:	mov    ecx,DWORD PTR [eax]
  438b20:	call   DWORD PTR [ecx+0x54]
  438b23:	inc    eax
  438b24:	jne    0x438b2a
  438b26:	xor    ebx,ebx
  438b28:	jmp    0x438b46
  438b2a:	mov    edx,DWORD PTR [ebp-0x4]
  438b2d:	mov    eax,ds:0x462840
  438b32:	mov    ecx,DWORD PTR [eax]
  438b34:	call   DWORD PTR [ecx+0x54]
  438b37:	mov    edx,eax
  438b39:	mov    eax,ds:0x462840
  438b3e:	mov    ecx,DWORD PTR [eax]
  438b40:	call   DWORD PTR [ecx+0x18]
  438b43:	mov    ebx,DWORD PTR [eax+0x4]
  438b46:	xor    eax,eax
  438b48:	pop    edx
  438b49:	pop    ecx
  438b4a:	pop    ecx
  438b4b:	mov    DWORD PTR fs:[eax],edx
  438b4e:	push   0x438b63
  438b53:	lea    eax,[ebp-0x4]
  438b56:	call   0x404f88
  438b5b:	ret    
  438b5c:	jmp    0x40481c
  438b61:	jmp    0x438b53
  438b63:	mov    eax,ebx
  438b65:	pop    ebx
  438b66:	pop    ecx
  438b67:	pop    ebp
  438b68:	ret    
  438b69:	lea    eax,[eax+0x0]
  438b6c:	push   ebx
  438b6d:	push   esi
  438b6e:	test   dl,dl
  438b70:	je     0x438b7a
  438b72:	add    esp,0xfffffff0
  438b75:	call   0x4043ac
  438b7a:	mov    ebx,edx
  438b7c:	mov    esi,eax
  438b7e:	xor    edx,edx
  438b80:	mov    eax,esi
  438b82:	call   0x404070
  438b87:	mov    dl,0x1
  438b89:	mov    eax,ds:0x436c90
  438b8e:	call   0x436dc0
  438b93:	mov    DWORD PTR [esi+0x8],eax
  438b96:	xor    eax,eax
  438b98:	mov    DWORD PTR [esi+0x4],eax
  438b9b:	mov    eax,esi
  438b9d:	test   bl,bl
  438b9f:	je     0x438bb0
  438ba1:	call   0x404404
  438ba6:	pop    DWORD PTR fs:0x0
  438bad:	add    esp,0xc
  438bb0:	mov    eax,esi
  438bb2:	pop    esi
  438bb3:	pop    ebx
  438bb4:	ret    
  438bb5:	lea    eax,[eax+0x0]
  438bb8:	push   ebx
  438bb9:	push   esi
  438bba:	call   0x404454
  438bbf:	mov    ebx,edx
  438bc1:	mov    esi,eax
  438bc3:	lea    edx,[esi+0xc]
  438bc6:	mov    eax,ds:0x41be90
  438bcb:	call   0x41b14c
  438bd0:	lea    edx,[esi+0x8]
  438bd3:	mov    eax,ds:0x41be90
  438bd8:	call   0x41b14c
  438bdd:	mov    edx,ebx
  438bdf:	and    dl,0xfc
  438be2:	mov    eax,esi
  438be4:	call   0x414058
  438be9:	test   bl,bl
  438beb:	jle    0x438bf4
  438bed:	mov    eax,esi
  438bef:	call   0x4043fc
  438bf4:	pop    esi
  438bf5:	pop    ebx
  438bf6:	ret    
  438bf7:	nop
  438bf8:	push   ebx
  438bf9:	push   esi
  438bfa:	mov    esi,edx
  438bfc:	mov    ebx,eax
  438bfe:	cmp    DWORD PTR [ebx+0xc],0x0
  438c02:	jne    0x438c13
  438c04:	mov    dl,0x1
  438c06:	mov    eax,ds:0x436c90
  438c0b:	call   0x436dc0
  438c10:	mov    DWORD PTR [ebx+0xc],eax
  438c13:	mov    edx,esi
  438c15:	mov    eax,DWORD PTR [ebx+0xc]
  438c18:	mov    ecx,DWORD PTR [eax]
  438c1a:	call   DWORD PTR [ecx+0x8]
  438c1d:	pop    esi
  438c1e:	pop    ebx
  438c1f:	ret    
  438c20:	push   ebp
  438c21:	mov    ebp,esp
  438c23:	add    esp,0xfffffff0
  438c26:	push   ebx
  438c27:	push   esi
  438c28:	push   edi
  438c29:	xor    ebx,ebx
  438c2b:	mov    DWORD PTR [ebp-0x10],ebx
  438c2e:	mov    DWORD PTR [ebp-0x8],ecx
  438c31:	mov    DWORD PTR [ebp-0x4],edx
  438c34:	mov    ebx,eax
  438c36:	mov    eax,DWORD PTR [ebp-0x4]
  438c39:	call   0x405408
  438c3e:	xor    eax,eax
  438c40:	push   ebp
  438c41:	push   0x438ccb
  438c46:	push   DWORD PTR fs:[eax]
  438c49:	mov    DWORD PTR fs:[eax],esp
  438c4c:	mov    esi,DWORD PTR [ebx+0xc]
  438c4f:	test   esi,esi
  438c51:	je     0x438ca5
  438c53:	mov    eax,esi
  438c55:	mov    edx,DWORD PTR [eax]
  438c57:	call   DWORD PTR [edx+0x14]
  438c5a:	sub    eax,0x1
  438c5d:	jno    0x438c64
  438c5f:	call   0x403f70
  438c64:	test   eax,eax
  438c66:	jl     0x438cad
  438c68:	inc    eax
  438c69:	mov    DWORD PTR [ebp-0xc],eax
  438c6c:	xor    esi,esi
  438c6e:	lea    ecx,[ebp-0x10]
  438c71:	mov    edx,esi
  438c73:	mov    eax,DWORD PTR [ebx+0xc]
  438c76:	mov    edi,DWORD PTR [eax]
  438c78:	call   DWORD PTR [edi+0xc]
  438c7b:	mov    edx,DWORD PTR [ebp-0x10]
  438c7e:	mov    edi,DWORD PTR ds:0x46da9c
  438c84:	mov    edi,DWORD PTR [edi]
  438c86:	mov    eax,DWORD PTR [ebp-0x4]
  438c89:	call   edi
  438c8b:	dec    eax
  438c8c:	jne    0x438c9d
  438c8e:	mov    ecx,DWORD PTR [ebp-0x8]
  438c91:	mov    edx,esi
  438c93:	mov    eax,DWORD PTR [ebx+0xc]
  438c96:	mov    ebx,DWORD PTR [eax]
  438c98:	call   DWORD PTR [ebx+0xc]
  438c9b:	jmp    0x438cad
  438c9d:	inc    esi
  438c9e:	dec    DWORD PTR [ebp-0xc]
  438ca1:	jne    0x438c6e
  438ca3:	jmp    0x438cad
  438ca5:	mov    eax,DWORD PTR [ebp-0x8]
  438ca8:	call   0x404f88
  438cad:	xor    eax,eax
  438caf:	pop    edx
  438cb0:	pop    ecx
  438cb1:	pop    ecx
  438cb2:	mov    DWORD PTR fs:[eax],edx
  438cb5:	push   0x438cd2
  438cba:	lea    eax,[ebp-0x10]
  438cbd:	call   0x404f88
  438cc2:	lea    eax,[ebp-0x4]
  438cc5:	call   0x404f88
  438cca:	ret    
  438ccb:	jmp    0x40481c
  438cd0:	jmp    0x438cba
  438cd2:	pop    edi
  438cd3:	pop    esi
  438cd4:	pop    ebx
  438cd5:	mov    esp,ebp
  438cd7:	pop    ebp
  438cd8:	ret    
  438cd9:	lea    eax,[eax+0x0]
  438cdc:	mov    edx,DWORD PTR [eax]
  438cde:	call   DWORD PTR [edx+0xc]
  438ce1:	ret    
  438ce2:	mov    eax,eax
  438ce4:	ret    
  438ce5:	lea    eax,[eax+0x0]
  438ce8:	push   ebx
  438ce9:	push   esi
  438cea:	mov    esi,edx
  438cec:	mov    ebx,eax
  438cee:	mov    ecx,esi
  438cf0:	mov    edx,0x438d08
  438cf5:	mov    eax,DWORD PTR [ebx+0x8]
  438cf8:	call   0x437220
  438cfd:	pop    esi
  438cfe:	pop    ebx
  438cff:	ret    
  438d00:	(bad)  
  438d01:	(bad)  
  438d02:	(bad)  
  438d03:	dec    DWORD PTR [eax]
  438d05:	add    BYTE PTR [eax],al
  438d07:	add    BYTE PTR [eax+0x61],dh
  438d0a:	jae    0x438d7f
  438d0c:	ja     0x438d7d
  438d0e:	jb     0x438d74
  438d10:	add    BYTE PTR [eax],al
  438d12:	add    BYTE PTR [eax],al
  438d14:	push   ebx
  438d15:	push   esi
  438d16:	mov    esi,edx
  438d18:	mov    ebx,eax
  438d1a:	mov    ecx,esi
  438d1c:	mov    edx,0x438d34
  438d21:	mov    eax,DWORD PTR [ebx+0x8]
  438d24:	call   0x437220
  438d29:	pop    esi
  438d2a:	pop    ebx
  438d2b:	ret    
  438d2c:	(bad)  
  438d2d:	(bad)  
  438d2e:	(bad)  
  438d2f:	dec    DWORD PTR [eax]
  438d31:	add    BYTE PTR [eax],al
  438d33:	add    BYTE PTR [ebp+0x73],dh
  438d36:	gs jb  0x438da7
  438d39:	popa   
  438d3a:	ins    DWORD PTR es:[edi],dx
  438d3b:	add    BYTE PTR gs:[eax],al
  438d3e:	add    BYTE PTR [eax],al
  438d40:	mov    ecx,edx
  438d42:	mov    eax,DWORD PTR [eax+0x8]
  438d45:	mov    edx,0x438d58
  438d4a:	call   0x437440
  438d4f:	ret    
  438d50:	(bad)  
  438d51:	(bad)  
  438d52:	(bad)  
  438d53:	dec    DWORD PTR [eax]
  438d55:	add    BYTE PTR [eax],al
  438d57:	add    BYTE PTR [eax+0x61],dl
  438d5a:	jae    0x438dcf
  438d5c:	ja     0x438dcd
  438d5e:	jb     0x438dc4
  438d60:	add    BYTE PTR [eax],al
  438d62:	add    BYTE PTR [eax],al
  438d64:	mov    ecx,edx
  438d66:	mov    eax,DWORD PTR [eax+0x8]
  438d69:	mov    edx,0x438d7c
  438d6e:	call   0x437440
  438d73:	ret    
  438d74:	(bad)  
  438d75:	(bad)  
  438d76:	(bad)  
  438d77:	dec    DWORD PTR [eax]
  438d79:	add    BYTE PTR [eax],al
  438d7b:	add    BYTE PTR [ebp+0x73],dl
  438d7e:	gs jb  0x438def
  438d81:	popa   
  438d82:	ins    DWORD PTR es:[edi],dx
  438d83:	add    BYTE PTR gs:[eax],al
  438d86:	add    BYTE PTR [eax],al
  438d88:	xor    eax,eax
  438d8a:	ret    
  438d8b:	nop
  438d8c:	push   ebx
  438d8d:	push   esi
  438d8e:	test   dl,dl
  438d90:	je     0x438d9a
  438d92:	add    esp,0xfffffff0
  438d95:	call   0x4043ac
  438d9a:	mov    ebx,edx
  438d9c:	mov    esi,eax
  438d9e:	xor    edx,edx
  438da0:	mov    eax,esi
  438da2:	call   0x438b6c
  438da7:	xor    eax,eax
  438da9:	mov    DWORD PTR [esi+0x4],eax
  438dac:	mov    eax,esi
  438dae:	test   bl,bl
  438db0:	je     0x438dc1
  438db2:	call   0x404404
  438db7:	pop    DWORD PTR fs:0x0
  438dbe:	add    esp,0xc
  438dc1:	mov    eax,esi
  438dc3:	pop    esi
  438dc4:	pop    ebx
  438dc5:	ret    
  438dc6:	mov    eax,eax
  438dc8:	push   ebp
  438dc9:	mov    ebp,esp
  438dcb:	xor    ecx,ecx
  438dcd:	push   ecx
  438dce:	push   ecx
  438dcf:	push   ecx
  438dd0:	push   ecx
  438dd1:	push   ecx
  438dd2:	push   ebx
  438dd3:	push   esi
  438dd4:	mov    esi,edx
  438dd6:	mov    ebx,eax
  438dd8:	xor    eax,eax
  438dda:	push   ebp
  438ddb:	push   0x438e84
  438de0:	push   DWORD PTR fs:[eax]
  438de3:	mov    DWORD PTR fs:[eax],esp
  438de6:	mov    dl,0x1
  438de8:	mov    eax,ds:0x4385f8
  438ded:	call   0x42467c
  438df2:	mov    DWORD PTR [ebp-0x4],eax
  438df5:	xor    eax,eax
  438df7:	push   ebp
  438df8:	push   0x438e62
  438dfd:	push   DWORD PTR fs:[eax]
  438e00:	mov    DWORD PTR fs:[eax],esp
  438e03:	lea    edx,[ebp-0x10]
  438e06:	mov    eax,ebx
  438e08:	call   0x438d14
  438e0d:	push   DWORD PTR [ebp-0x10]
  438e10:	push   0x438e9c
  438e15:	lea    edx,[ebp-0x14]
  438e18:	mov    eax,ebx
  438e1a:	call   0x438ce8
  438e1f:	push   DWORD PTR [ebp-0x14]
  438e22:	lea    eax,[ebp-0xc]
  438e25:	mov    edx,0x3
  438e2a:	call   0x40531c
  438e2f:	mov    edx,DWORD PTR [ebp-0xc]
  438e32:	lea    ecx,[ebp-0x8]
  438e35:	mov    eax,DWORD PTR [ebp-0x4]
  438e38:	call   0x437694
  438e3d:	mov    ecx,DWORD PTR [ebp-0x8]
  438e40:	mov    eax,esi
  438e42:	mov    edx,0x438ea8
  438e47:	call   0x4052a0
  438e4c:	xor    eax,eax
  438e4e:	pop    edx
  438e4f:	pop    ecx
  438e50:	pop    ecx
  438e51:	mov    DWORD PTR fs:[eax],edx
  438e54:	push   0x438e69
  438e59:	mov    eax,DWORD PTR [ebp-0x4]
  438e5c:	call   0x4040a0
  438e61:	ret    
  438e62:	jmp    0x40481c
  438e67:	jmp    0x438e59
  438e69:	xor    eax,eax
  438e6b:	pop    edx
  438e6c:	pop    ecx
  438e6d:	pop    ecx
  438e6e:	mov    DWORD PTR fs:[eax],edx
  438e71:	push   0x438e8b
  438e76:	lea    eax,[ebp-0x14]
  438e79:	mov    edx,0x4
  438e7e:	call   0x404fac
  438e83:	ret    
  438e84:	jmp    0x40481c
  438e89:	jmp    0x438e76
  438e8b:	pop    esi
  438e8c:	pop    ebx
  438e8d:	mov    esp,ebp
  438e8f:	pop    ebp
  438e90:	ret    
  438e91:	add    BYTE PTR [eax],al
  438e93:	add    bh,bh
  438e95:	(bad)  
  438e96:	(bad)  
  438e97:	inc    DWORD PTR [ecx]
  438e99:	add    BYTE PTR [eax],al
  438e9b:	add    BYTE PTR [edx],bh
  438e9d:	add    BYTE PTR [eax],al
  438e9f:	add    bh,bh
  438ea1:	(bad)  
  438ea2:	(bad)  
  438ea3:	inc    DWORD PTR [esi]
  438ea5:	add    BYTE PTR [eax],al
  438ea7:	add    BYTE PTR [edx+0x61],al
  438eaa:	jae    0x438f15
  438eac:	arpl   WORD PTR [eax],sp
  438eae:	add    BYTE PTR [eax],al
  438eb0:	push   ebp
  438eb1:	mov    ebp,esp
  438eb3:	xor    ecx,ecx
  438eb5:	push   ecx
  438eb6:	push   ecx
  438eb7:	push   ecx
  438eb8:	push   ecx
  438eb9:	push   ecx
  438eba:	push   ecx
  438ebb:	push   ecx
  438ebc:	push   ecx
  438ebd:	push   ebx
  438ebe:	push   esi
  438ebf:	mov    esi,eax
  438ec1:	xor    eax,eax
  438ec3:	push   ebp
  438ec4:	push   0x438fdb
  438ec9:	push   DWORD PTR fs:[eax]
  438ecc:	mov    DWORD PTR fs:[eax],esp
  438ecf:	mov    BYTE PTR [ebp-0x5],0x1
  438ed3:	lea    ecx,[ebp-0x4]
  438ed6:	mov    edx,0x438ff4
  438edb:	mov    eax,esi
  438edd:	call   0x438c20
  438ee2:	push   0x1
  438ee4:	lea    eax,[ebp-0xc]
  438ee7:	push   eax
  438ee8:	lea    eax,[ebp-0x4]
  438eeb:	mov    cl,0x1
  438eed:	mov    edx,0x439004
  438ef2:	call   0x41c7c4
  438ef7:	jmp    0x438f35
  438ef9:	mov    ebx,DWORD PTR [esi+0x8]
  438efc:	mov    eax,DWORD PTR [ebx+0x38]
  438eff:	push   eax
  438f00:	lea    eax,[ebp-0x10]
  438f03:	push   eax
  438f04:	push   0x1
  438f06:	lea    eax,[ebp-0x14]
  438f09:	push   eax
  438f0a:	lea    eax,[ebp-0x4]
  438f0d:	mov    cl,0x1
  438f0f:	mov    edx,0x439010
  438f14:	call   0x41c7c4
  438f19:	mov    edx,DWORD PTR [ebp-0x14]
  438f1c:	mov    ecx,0x43901c
  438f21:	mov    eax,ds:0x41be90
  438f26:	call   0x41b1d4
  438f2b:	mov    edx,DWORD PTR [ebp-0x10]
  438f2e:	mov    eax,ebx
  438f30:	mov    ecx,DWORD PTR [eax]
  438f32:	call   DWORD PTR [ecx+0x38]
  438f35:	mov    eax,DWORD PTR [ebp-0x4]
  438f38:	call   0x405248
  438f3d:	test   eax,eax
  438f3f:	jg     0x438ef9
  438f41:	lea    eax,[esi+0x10]
  438f44:	push   eax
  438f45:	lea    ecx,[ebp-0x18]
  438f48:	mov    edx,0x439028
  438f4d:	mov    eax,DWORD PTR [esi+0x8]
  438f50:	call   0x437220
  438f55:	mov    eax,DWORD PTR [ebp-0x18]
  438f58:	call   0x405248
  438f5d:	sub    eax,0x2
  438f60:	jno    0x438f67
  438f62:	call   0x403f70
  438f67:	push   eax
  438f68:	lea    ecx,[ebp-0x1c]
  438f6b:	mov    edx,0x439028
  438f70:	mov    eax,DWORD PTR [esi+0x8]
  438f73:	call   0x437220
  438f78:	mov    eax,DWORD PTR [ebp-0x1c]
  438f7b:	mov    edx,0x2
  438f80:	pop    ecx
  438f81:	call   0x405480
  438f86:	mov    eax,DWORD PTR [esi+0x4]
  438f89:	sub    eax,0x1
  438f8c:	jb     0x438f92
  438f8e:	je     0x438fb4
  438f90:	jmp    0x438fb8
  438f92:	lea    edx,[ebp-0x20]
  438f95:	mov    eax,esi
  438f97:	call   0x438d14
  438f9c:	mov    eax,DWORD PTR [ebp-0x20]
  438f9f:	call   0x405248
  438fa4:	test   eax,eax
  438fa6:	jle    0x438fae
  438fa8:	mov    BYTE PTR [ebp-0x5],0x1
  438fac:	jmp    0x438fb8
  438fae:	mov    BYTE PTR [ebp-0x5],0x0
  438fb2:	jmp    0x438fb8
  438fb4:	mov    BYTE PTR [ebp-0x5],0x2
  438fb8:	xor    eax,eax
  438fba:	pop    edx
  438fbb:	pop    ecx
  438fbc:	pop    ecx
  438fbd:	mov    DWORD PTR fs:[eax],edx
  438fc0:	push   0x438fe2
  438fc5:	lea    eax,[ebp-0x20]
  438fc8:	mov    edx,0x6
  438fcd:	call   0x404fac
  438fd2:	lea    eax,[ebp-0x4]
  438fd5:	call   0x404f88
  438fda:	ret    
  438fdb:	jmp    0x40481c
  438fe0:	jmp    0x438fc5
  438fe2:	movzx  eax,BYTE PTR [ebp-0x5]
  438fe6:	pop    esi
  438fe7:	pop    ebx
  438fe8:	mov    esp,ebp
  438fea:	pop    ebp
  438feb:	ret    
  438fec:	(bad)  
  438fed:	(bad)  
  438fee:	(bad)  
  438fef:	inc    DWORD PTR ds:0x42000000
  438ff5:	popa   
  438ff6:	jae    0x439061
  438ff8:	arpl   WORD PTR [eax],ax
  438ffa:	add    BYTE PTR [eax],al
  438ffc:	(bad)  
  438ffd:	(bad)  
  438ffe:	(bad)  
  438fff:	inc    DWORD PTR [ecx]
  439001:	add    BYTE PTR [eax],al
  439003:	add    BYTE PTR [eax],ah
  439005:	add    BYTE PTR [eax],al
  439007:	add    bh,bh
  439009:	(bad)  
  43900a:	(bad)  
  43900b:	inc    DWORD PTR [edx]
  43900d:	add    BYTE PTR [eax],al
  43900f:	add    BYTE PTR [eax+eiz*1],ch
  439012:	add    BYTE PTR [eax],al
  439014:	(bad)  
  439015:	(bad)  
  439016:	(bad)  
  439017:	inc    DWORD PTR [ecx]
  439019:	add    BYTE PTR [eax],al
  43901b:	add    BYTE PTR ds:0xff000000,bh
  439021:	(bad)  
  439022:	(bad)  
  439023:	inc    DWORD PTR ds:0x72000000
  439029:	gs popa 
  43902b:	ins    BYTE PTR es:[edi],dx
  43902c:	ins    DWORD PTR es:[edi],dx
  43902d:	add    BYTE PTR [eax],al
  43902f:	add    BYTE PTR [ebx],dh
  439031:	rol    bl,0x90
  439034:	push   ebx
  439035:	mov    ebx,eax
  439037:	mov    eax,ebx
  439039:	call   0x438ce4
  43903e:	xor    eax,eax
  439040:	mov    DWORD PTR [ebx+0x4],eax
  439043:	pop    ebx
  439044:	ret    
  439045:	lea    eax,[eax+0x0]
  439048:	mov    eax,0x1
  43904d:	ret    
  43904e:	mov    eax,eax
  439050:	push   ebp
  439051:	mov    ebp,esp
  439053:	push   ebx
  439054:	mov    ebx,0x462840
  439059:	xor    eax,eax
  43905b:	push   ebp
  43905c:	push   0x4390b2
  439061:	push   DWORD PTR fs:[eax]
  439064:	mov    DWORD PTR fs:[eax],esp
  439067:	inc    DWORD PTR ds:0x4738c8
  43906d:	jne    0x4390a4
  43906f:	cmp    DWORD PTR [ebx],0x0
  439072:	je     0x4390a4
  439074:	jmp    0x43908d
  439076:	xor    edx,edx
  439078:	mov    eax,DWORD PTR [ebx]
  43907a:	mov    ecx,DWORD PTR [eax]
  43907c:	call   DWORD PTR [ecx+0x18]
  43907f:	call   0x4040a0
  439084:	xor    edx,edx
  439086:	mov    eax,DWORD PTR [ebx]
  439088:	mov    ecx,DWORD PTR [eax]
  43908a:	call   DWORD PTR [ecx+0x48]
  43908d:	mov    eax,DWORD PTR [ebx]
  43908f:	mov    edx,DWORD PTR [eax]
  439091:	call   DWORD PTR [edx+0x14]
  439094:	test   eax,eax
  439096:	jg     0x439076
  439098:	mov    edx,ebx
  43909a:	mov    eax,ds:0x41be90
  43909f:	call   0x41b14c
  4390a4:	xor    eax,eax
  4390a6:	pop    edx
  4390a7:	pop    ecx
  4390a8:	pop    ecx
  4390a9:	mov    DWORD PTR fs:[eax],edx
  4390ac:	push   0x4390b9
  4390b1:	ret    
  4390b2:	jmp    0x40481c
  4390b7:	jmp    0x4390b1
  4390b9:	pop    ebx
  4390ba:	pop    ebp
  4390bb:	ret    
  4390bc:	or     BYTE PTR [ecx+0x43],dl
	...
  4390ca:	add    BYTE PTR [eax],al
  4390cc:	inc    esp
  4390cd:	xchg   ecx,eax
  4390ce:	inc    ebx
	...
  4390db:	add    BYTE PTR [eax],ch
  4390dd:	xchg   ecx,eax
  4390de:	inc    ebx
  4390df:	add    BYTE PTR [eax+eax*1],dl
  4390e2:	add    BYTE PTR [eax],al
  4390e4:	cmp    BYTE PTR [ecx],ch
  4390e6:	inc    ecx
  4390e7:	add    al,dl
  4390e9:	inc    edx
  4390ea:	inc    eax
  4390eb:	add    ah,bl
  4390ed:	inc    edx
  4390ee:	inc    eax
  4390ef:	add    al,ah
  4390f1:	inc    edx
  4390f2:	inc    eax
  4390f3:	add    ah,ah
  4390f5:	inc    edx
  4390f6:	inc    eax
  4390f7:	add    al,bl
  4390f9:	inc    edx
  4390fa:	inc    eax
  4390fb:	add    BYTE PTR [eax],bh
  4390fd:	inc    eax
  4390fe:	inc    eax
  4390ff:	add    BYTE PTR [eax+eax*2+0x40],dl
  439103:	add    BYTE PTR [eax-0x6e],dl
  439106:	inc    ebx
  439107:	add    BYTE PTR [eax+0x41],ch
  43910a:	inc    ecx
  43910b:	add    BYTE PTR [eax+0x41],dh
  43910e:	inc    ecx
  43910f:	add    BYTE PTR [eax+eax*2+0x43d00041],al
  439116:	inc    ecx
  439117:	add    BYTE PTR [eax-0x1fffbebc],dh
  43911d:	inc    esp
  43911e:	inc    ecx
  43911f:	add    al,bl
  439121:	inc    esp
  439122:	inc    ecx
  439123:	add    al,bh
  439125:	xchg   ecx,eax
  439126:	inc    ebx
  439127:	add    BYTE PTR ds:0x41644954,dl
  43912d:	jne    0x4391a3
  43912f:	push   0x69746e65
  439134:	arpl   WORD PTR [ecx+0x74],sp
  439137:	imul   ebp,DWORD PTR [edi+0x6e],0x6d657449
  43913e:	mov    eax,eax
  439140:	inc    esp
  439141:	xchg   ecx,eax
  439142:	inc    ebx
  439143:	add    BYTE PTR [edi],al
  439145:	adc    eax,0x41644954
  43914a:	jne    0x4391c0
  43914c:	push   0x69746e65
  439151:	arpl   WORD PTR [ecx+0x74],sp
  439154:	imul   ebp,DWORD PTR [edi+0x6e],0x6d657449
  43915b:	or     BYTE PTR [ecx+0x29c40043],dl
  439161:	inc    ecx
  439162:	add    BYTE PTR [eax],al
  439164:	add    BYTE PTR [edi],dl
  439166:	dec    ecx
  439167:	fs inc ecx
  439169:	jne    0x4391df
  43916b:	push   0x69746e65
  439170:	arpl   WORD PTR [ecx+0x74],sp
  439173:	imul   ebp,DWORD PTR [edi+0x6e],0x616e614d
  43917a:	addr16 gs jb 0x43917e
  43917e:	add    BYTE PTR [eax+0x1b2c88b],dl
  439184:	mov    eax,ds:0x4390bc
  439189:	call   0x4391f8
  43918e:	ret    
  43918f:	nop
  439190:	push   ebp
  439191:	mov    ebp,esp
  439193:	push   0x0
  439195:	push   ebx
  439196:	push   esi
  439197:	push   edi
  439198:	mov    edi,ecx
  43919a:	mov    esi,edx
  43919c:	xor    edx,edx
  43919e:	push   ebp
  43919f:	push   0x4391ea
  4391a4:	push   DWORD PTR fs:[edx]
  4391a7:	mov    DWORD PTR fs:[edx],esp
  4391aa:	mov    eax,DWORD PTR [eax+0x30]
  4391ad:	call   0x439180
  4391b2:	mov    ebx,eax
  4391b4:	lea    edx,[ebp-0x4]
  4391b7:	mov    eax,edi
  4391b9:	call   0x436a70
  4391be:	mov    edx,DWORD PTR [ebp-0x4]
  4391c1:	mov    eax,DWORD PTR [ebx+0xc]
  4391c4:	call   0x436588
  4391c9:	mov    edx,DWORD PTR [esi+0x8]
  4391cc:	mov    eax,DWORD PTR [ebx+0x10]
  4391cf:	mov    ecx,DWORD PTR [eax]
  4391d1:	call   DWORD PTR [ecx+0x8]
  4391d4:	xor    eax,eax
  4391d6:	pop    edx
  4391d7:	pop    ecx
  4391d8:	pop    ecx
  4391d9:	mov    DWORD PTR fs:[eax],edx
  4391dc:	push   0x4391f1
  4391e1:	lea    eax,[ebp-0x4]
  4391e4:	call   0x404f88
  4391e9:	ret    
  4391ea:	jmp    0x40481c
  4391ef:	jmp    0x4391e1
  4391f1:	pop    edi
  4391f2:	pop    esi
  4391f3:	pop    ebx
  4391f4:	pop    ecx
  4391f5:	pop    ebp
  4391f6:	ret    
  4391f7:	nop
  4391f8:	push   ebx
  4391f9:	push   esi
  4391fa:	test   dl,dl
  4391fc:	je     0x439206
  4391fe:	add    esp,0xfffffff0
  439201:	call   0x4043ac
  439206:	mov    ebx,edx
  439208:	mov    esi,eax
  43920a:	xor    edx,edx
  43920c:	mov    eax,esi
  43920e:	call   0x41432c
  439213:	xor    ecx,ecx
  439215:	mov    dl,0x1
  439217:	mov    eax,ds:0x436390
  43921c:	call   0x4364a4
  439221:	mov    DWORD PTR [esi+0xc],eax
  439224:	mov    dl,0x1
  439226:	mov    eax,ds:0x412cf0
  43922b:	call   0x404070
  439230:	mov    DWORD PTR [esi+0x10],eax
  439233:	mov    eax,esi
  439235:	test   bl,bl
  439237:	je     0x439248
  439239:	call   0x404404
  43923e:	pop    DWORD PTR fs:0x0
  439245:	add    esp,0xc
  439248:	mov    eax,esi
  43924a:	pop    esi
  43924b:	pop    ebx
  43924c:	ret    
  43924d:	lea    eax,[eax+0x0]
  439250:	push   ebx
  439251:	push   esi
  439252:	call   0x404454
  439257:	mov    ebx,edx
  439259:	mov    esi,eax
  43925b:	lea    edx,[esi+0xc]
  43925e:	mov    eax,ds:0x41be90
  439263:	call   0x41b14c
  439268:	lea    edx,[esi+0x10]
  43926b:	mov    eax,ds:0x41be90
  439270:	call   0x41b14c
  439275:	mov    edx,ebx
  439277:	and    dl,0xfc
  43927a:	mov    eax,esi
  43927c:	call   0x414364
  439281:	test   bl,bl
  439283:	jle    0x43928c
  439285:	mov    eax,esi
  439287:	call   0x4043fc
  43928c:	pop    esi
  43928d:	pop    ebx
  43928e:	ret    
  43928f:	nop
  439290:	fcom   QWORD PTR [edx+0x43]
	...
  43929e:	add    BYTE PTR [eax],al
  4392a0:	mov    BYTE PTR [ebx+0x43],dl
	...
  4392ae:	add    BYTE PTR [eax],al
  4392b0:	je     0x439245
  4392b2:	inc    ebx
  4392b3:	add    BYTE PTR [eax],bh
  4392b5:	add    BYTE PTR [eax],al
  4392b7:	add    al,dh
  4392b9:	sub    al,0x41
  4392bb:	add    al,dl
  4392bd:	inc    edx
  4392be:	inc    eax
  4392bf:	add    ah,bl
  4392c1:	inc    edx
  4392c2:	inc    eax
  4392c3:	add    al,ah
  4392c5:	inc    edx
  4392c6:	inc    eax
  4392c7:	add    ah,ah
  4392c9:	inc    edx
  4392ca:	inc    eax
  4392cb:	add    al,bl
  4392cd:	inc    edx
  4392ce:	inc    eax
  4392cf:	add    BYTE PTR [eax],bh
  4392d1:	inc    eax
  4392d2:	inc    eax
  4392d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4392d7:	add    BYTE PTR [eax],ch
  4392d9:	pop    ebp
  4392da:	inc    ecx
  4392db:	add    BYTE PTR [eax+0x41],ch
  4392de:	inc    ecx
  4392df:	add    BYTE PTR [eax-0x7fffbeb4],ch
  4392e5:	dec    ebx
  4392e6:	inc    ecx
  4392e7:	add    al,ah
  4392e9:	pop    edi
  4392ea:	inc    ecx
  4392eb:	add    BYTE PTR [eax+eiz*2],dl
  4392ee:	inc    ecx
  4392ef:	add    BYTE PTR [eax],bl
  4392f1:	pusha  
  4392f2:	inc    ecx
  4392f3:	add    BYTE PTR [eax+eiz*2],bl
  4392f6:	inc    ecx
  4392f7:	add    BYTE PTR [eax+edx*2+0x41],ch
  4392fb:	add    BYTE PTR [ecx+eiz*2+0x61f00041],dl
  439302:	inc    ecx
  439303:	add    ah,al
  439305:	bound  eax,QWORD PTR [ecx+0x0]
  439308:	in     al,dx
  439309:	push   edi
  43930a:	inc    ecx
  43930b:	add    al,ah
  43930d:	bound  eax,QWORD PTR [ecx+0x0]
  439310:	pusha  
  439311:	arpl   WORD PTR [ecx+0x0],ax
  439314:	test   BYTE PTR [ebp+0x41],bl
  439317:	add    BYTE PTR [ebp+ebx*2+0x4ac80041],dl
  43931e:	inc    ecx
  43931f:	add    BYTE PTR [eax],dh
  439321:	pop    esi
  439322:	inc    ecx
  439323:	add    BYTE PTR [eax+0x5e],dh
  439326:	inc    ecx
  439327:	add    ah,bl
  439329:	pop    esi
  43932a:	inc    ecx
  43932b:	add    BYTE PTR [eax],bl
  43932d:	push   eax
  43932e:	inc    ecx
  43932f:	add    BYTE PTR [eax+0x60],bh
  439332:	inc    ecx
  439333:	add    BYTE PTR [edx+edx*2+0x53900041],bh
  43933a:	inc    ecx
  43933b:	add    BYTE PTR [eax+eiz*2+0x60c40041],dh
  439342:	inc    ecx
  439343:	add    ah,dh
  439345:	push   ebx
  439346:	inc    ecx
  439347:	add    BYTE PTR [eax+0x54],cl
  43934a:	inc    ecx
  43934b:	add    ah,dh
  43934d:	push   esp
  43934e:	inc    ecx
  43934f:	add    BYTE PTR [eax-0x1fffbeaa],cl
  439355:	push   esi
  439356:	inc    ecx
  439357:	add    BYTE PTR [edi+edx*2+0x5df80041],bl
  43935e:	inc    ecx
  43935f:	add    BYTE PTR [esi+ebx*2],dl
  439362:	inc    ecx
  439363:	add    BYTE PTR [eax],bl
  439365:	popa   
  439366:	inc    ecx
  439367:	add    BYTE PTR [edi+ebx*2+0x41],bl
  43936b:	add    BYTE PTR [eax],bl
  43936d:	arpl   WORD PTR [ecx+0x0],ax
  439370:	sub    BYTE PTR [ebx+0x41],ah
  439373:	add    BYTE PTR ds:0x43644954,cl
  439379:	outs   dx,DWORD PTR ds:[esi]
  43937a:	outs   dx,DWORD PTR ds:[esi]
  43937b:	imul   ebp,DWORD PTR [ecx+0x65],0x4c
  43937f:	imul   esi,DWORD PTR [ebx+0x74],0x9388c08b
  439386:	inc    ebx
  439387:	add    BYTE PTR [edi],al
  439389:	or     eax,0x43644954
  43938e:	outs   dx,DWORD PTR ds:[esi]
  43938f:	outs   dx,DWORD PTR ds:[esi]
  439390:	imul   ebp,DWORD PTR [ecx+0x65],0x4c
  439394:	imul   esi,DWORD PTR [ebx+0x74],0x4392dc
  43939b:	loopne 0x4393ca
  43939d:	inc    ecx
  43939e:	add    BYTE PTR [eax],al
  4393a0:	add    BYTE PTR [eax],cl
  4393a2:	dec    ecx
  4393a3:	fs inc ebx
  4393a5:	outs   dx,DWORD PTR ds:[esi]
  4393a6:	outs   dx,DWORD PTR ds:[esi]
  4393a7:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  4393ab:	add    al,bh
  4393ad:	xchg   ebx,eax
  4393ae:	inc    ebx
	...
  4393b7:	add    BYTE PTR [eax],dh
  4393b9:	xchg   esp,eax
  4393ba:	inc    ebx
  4393bb:	add    BYTE PTR [eax+0x4394],al
	...
  4393c9:	add    BYTE PTR [eax],al
  4393cb:	add    BYTE PTR [edx-0x6c],ch
  4393ce:	inc    ebx
  4393cf:	add    BYTE PTR [eax+eax*1],ch
  4393d2:	add    BYTE PTR [eax],al
  4393d4:	cmp    BYTE PTR [ecx],ch
  4393d6:	inc    ecx
  4393d7:	add    al,dl
  4393d9:	inc    edx
  4393da:	inc    eax
  4393db:	add    ah,bl
  4393dd:	inc    edx
  4393de:	inc    eax
  4393df:	add    al,ah
  4393e1:	inc    edx
  4393e2:	inc    eax
  4393e3:	add    ah,ah
  4393e5:	inc    edx
  4393e6:	inc    eax
  4393e7:	add    al,bl
  4393e9:	inc    edx
  4393ea:	inc    eax
  4393eb:	add    BYTE PTR [eax],bh
  4393ed:	inc    eax
  4393ee:	inc    eax
  4393ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  4393f3:	add    ah,cl
  4393f5:	cwde   
  4393f6:	inc    ebx
  4393f7:	add    BYTE PTR [eax+0x41],ch
  4393fa:	inc    ecx
  4393fb:	add    BYTE PTR [eax+0x41],dh
  4393fe:	inc    ecx
  4393ff:	add    BYTE PTR [eax-0x2fffbc67],dh
  439405:	inc    ebx
  439406:	inc    ecx
  439407:	add    BYTE PTR [eax-0x1fffbebc],dh
  43940d:	inc    esp
  43940e:	inc    ecx
  43940f:	add    al,bl
  439411:	inc    esp
  439412:	inc    ecx
  439413:	add    BYTE PTR [eax+0x68004398],dl
  439419:	fwait
  43941a:	inc    ebx
  43941b:	add    ah,bl
  43941d:	call   0x43:0x9b280043
  439424:	cmp    al,0x9b
  439426:	inc    ebx
  439427:	add    BYTE PTR [eax-0x64],bh
  43942a:	inc    ebx
  43942b:	add    BYTE PTR [eax],ah
  43942d:	call   0x0:0xe0043
  439434:	add    BYTE PTR [eax],al
  439436:	push   es
  439437:	add    BYTE PTR [eax],al
  439439:	add    BYTE PTR [eax+edx*1+0xc0040],al
  439440:	add    BYTE PTR [eax],al
  439442:	test   BYTE PTR [eax],dl
  439444:	inc    eax
  439445:	add    BYTE PTR [eax],dl
  439447:	add    BYTE PTR [eax],al
  439449:	add    BYTE PTR [eax+edx*1+0x140040],al
  439450:	add    BYTE PTR [eax],al
  439452:	test   BYTE PTR [eax],dl
  439454:	inc    eax
  439455:	add    BYTE PTR [eax],bl
  439457:	add    BYTE PTR [eax],al
  439459:	add    BYTE PTR [eax+edx*1+0x1c0040],al
  439460:	add    BYTE PTR [eax],al
  439462:	test   BYTE PTR [eax],dl
  439464:	inc    eax
  439465:	add    BYTE PTR [eax+eax*1],ah
  439468:	add    BYTE PTR [eax],al
  43946a:	adc    DWORD PTR [ecx+ecx*2+0x64],edx
  43946e:	dec    esi
  43946f:	gs je  0x4394e5
  439472:	arpl   WORD PTR [ecx+0x70],sp
  439475:	gs inc ebx
  439477:	outs   dx,DWORD PTR ds:[esi]
  439478:	outs   dx,DWORD PTR ds:[esi]
  439479:	imul   ebp,DWORD PTR [ecx+0x65],0xffffff80
  43947d:	xchg   esp,eax
  43947e:	inc    ebx
  43947f:	add    BYTE PTR [edi],al
  439481:	adc    DWORD PTR [ecx+ecx*2+0x64],edx
  439485:	dec    esi
  439486:	gs je  0x4394fc
  439489:	arpl   WORD PTR [ecx+0x70],sp
  43948c:	gs inc ebx
  43948e:	outs   dx,DWORD PTR ds:[esi]
  43948f:	outs   dx,DWORD PTR ds:[esi]
  439490:	imul   ebp,DWORD PTR [ecx+0x65],0xfffffff8
  439494:	xchg   ebx,eax
  439495:	inc    ebx
  439496:	add    ah,al
  439498:	sub    DWORD PTR [ecx+0x0],eax
  43949b:	add    BYTE PTR [eax],al
  43949d:	or     BYTE PTR [ecx+0x64],cl
  4394a0:	inc    ebx
  4394a1:	outs   dx,DWORD PTR ds:[esi]
  4394a2:	outs   dx,DWORD PTR ds:[esi]
  4394a3:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  4394a7:	add    ah,dh
  4394a9:	xchg   esp,eax
  4394aa:	inc    ebx
	...
  4394b3:	add    BYTE PTR [edx*4-0x6aa3ffbd],ch
  4394ba:	inc    ebx
	...
  4394c7:	add    BYTE PTR [esi-0x6b],al
  4394ca:	inc    ebx
  4394cb:	add    BYTE PTR [eax+0x0],al
  4394ce:	add    BYTE PTR [eax],al
  4394d0:	lods   al,BYTE PTR ds:[esi]
  4394d1:	xchg   ebx,eax
  4394d2:	inc    ebx
  4394d3:	add    al,dl
  4394d5:	inc    edx
  4394d6:	inc    eax
  4394d7:	add    ah,bl
  4394d9:	inc    edx
  4394da:	inc    eax
  4394db:	add    al,ah
  4394dd:	inc    edx
  4394de:	inc    eax
  4394df:	add    ah,ah
  4394e1:	inc    edx
  4394e2:	inc    eax
  4394e3:	add    al,bl
  4394e5:	inc    edx
  4394e6:	inc    eax
  4394e7:	add    BYTE PTR [eax],bh
  4394e9:	inc    eax
  4394ea:	inc    eax
  4394eb:	add    BYTE PTR [eax+eax*2+0x40],dl
  4394ef:	add    ah,cl
  4394f1:	cwde   
  4394f2:	inc    ebx
  4394f3:	add    BYTE PTR [eax+0x41],ch
  4394f6:	inc    ecx
  4394f7:	add    BYTE PTR [eax+0x41],dh
  4394fa:	inc    ecx
  4394fb:	add    BYTE PTR [eax-0x2fffbc67],dh
  439501:	inc    ebx
  439502:	inc    ecx
  439503:	add    BYTE PTR [eax-0x1fffbebc],dh
  439509:	inc    esp
  43950a:	inc    ecx
  43950b:	add    al,bl
  43950d:	inc    esp
  43950e:	inc    ecx
  43950f:	add    BYTE PTR [eax-0x5bffbc60],cl
  439515:	mov    eax,ds:0xa0d00043
  43951a:	inc    ebx
  43951b:	add    BYTE PTR [eax],ch
  43951d:	fwait
  43951e:	inc    ebx
  43951f:	add    BYTE PTR [eax-0x57ffbc5f],dl
  439525:	mov    ds:0x9a200043,al
  43952a:	inc    ebx
  43952b:	add    BYTE PTR [esi],cl
  43952d:	add    BYTE PTR [eax],al
  43952f:	add    BYTE PTR [eax],al
  439531:	add    BYTE PTR [edx],al
  439533:	add    BYTE PTR [eax],al
  439535:	add    BYTE PTR [eax+edx*1+0x380040],al
  43953c:	add    BYTE PTR [eax],al
  43953e:	test   BYTE PTR [eax],dl
  439540:	inc    eax
  439541:	add    BYTE PTR [eax+eax*1],bh
  439544:	add    BYTE PTR [eax],al
  439546:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  43954a:	inc    ebx
  43954b:	outs   dx,DWORD PTR ds:[esi]
  43954c:	outs   dx,DWORD PTR ds:[esi]
  43954d:	imul   ebp,DWORD PTR [ecx+0x65],0x52
  439551:	inc    esi
  439552:	inc    ebx
  439553:	xor    dh,BYTE PTR [ecx]
  439555:	xor    BYTE PTR [ecx],bh
  439557:	nop
  439558:	pop    esp
  439559:	xchg   ebp,eax
  43955a:	inc    ebx
  43955b:	add    BYTE PTR [edi],al
  43955d:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  439561:	inc    ebx
  439562:	outs   dx,DWORD PTR ds:[esi]
  439563:	outs   dx,DWORD PTR ds:[esi]
  439564:	imul   ebp,DWORD PTR [ecx+0x65],0x52
  439568:	inc    esi
  439569:	inc    ebx
  43956a:	xor    dh,BYTE PTR [ecx]
  43956c:	xor    BYTE PTR [ecx],bh
  43956e:	hlt    
  43956f:	xchg   esp,eax
  439570:	inc    ebx
  439571:	add    BYTE PTR [esp+edx*4+0x43],bh
  439575:	add    BYTE PTR [eax],al
  439577:	add    BYTE PTR [eax],cl
  439579:	dec    ecx
  43957a:	fs inc ebx
  43957c:	outs   dx,DWORD PTR ds:[esi]
  43957d:	outs   dx,DWORD PTR ds:[esi]
  43957e:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  439582:	add    BYTE PTR [eax+0x439588],dl
  439588:	adc    DWORD PTR [edx],eax
  43958a:	cs xor eax,0x4
  439590:	add    BYTE PTR [eax],al
  439592:	add    BYTE PTR [eax],al
  439594:	add    eax,DWORD PTR [eax]
  439596:	add    BYTE PTR [eax],al
  439598:	cmp    al,0x10
  43959a:	inc    eax
  43959b:	add    BYTE PTR [eax],cl
  43959d:	dec    ecx
  43959e:	fs inc ebx
  4395a0:	outs   dx,DWORD PTR ds:[esi]
  4395a1:	outs   dx,DWORD PTR ds:[esi]
  4395a2:	imul   ebp,DWORD PTR [ecx+0x65],0xffffff8d
  4395a6:	inc    eax
  4395a7:	add    ah,dh
  4395a9:	xchg   ebp,eax
  4395aa:	inc    ebx
	...
  4395b3:	add    BYTE PTR [esi+edx*4],ch
  4395b6:	inc    ebx
  4395b7:	add    BYTE PTR [esi+edx*4+0x43],bl
	...
  4395c7:	add    BYTE PTR [esi-0x6a],al
  4395ca:	inc    ebx
  4395cb:	add    BYTE PTR [eax+eax*1+0x0],cl
  4395cf:	add    BYTE PTR [eax-0x2fffbc6c],ch
  4395d5:	inc    edx
  4395d6:	inc    eax
  4395d7:	add    ah,bl
  4395d9:	inc    edx
  4395da:	inc    eax
  4395db:	add    al,ah
  4395dd:	inc    edx
  4395de:	inc    eax
  4395df:	add    ah,ah
  4395e1:	inc    edx
  4395e2:	inc    eax
  4395e3:	add    al,bl
  4395e5:	inc    edx
  4395e6:	inc    eax
  4395e7:	add    BYTE PTR [eax],bh
  4395e9:	inc    eax
  4395ea:	inc    eax
  4395eb:	add    BYTE PTR [eax+eax*2+0x40],dl
  4395ef:	add    ah,cl
  4395f1:	cwde   
  4395f2:	inc    ebx
  4395f3:	add    BYTE PTR [eax+0x41],ch
  4395f6:	inc    ecx
  4395f7:	add    BYTE PTR [eax+0x41],dh
  4395fa:	inc    ecx
  4395fb:	add    BYTE PTR [eax-0x2fffbc67],dh
  439601:	inc    ebx
  439602:	inc    ecx
  439603:	add    BYTE PTR [eax-0x1fffbebc],dh
  439609:	inc    esp
  43960a:	inc    ecx
  43960b:	add    al,bl
  43960d:	inc    esp
  43960e:	inc    ecx
  43960f:	add    BYTE PTR [esp+eiz*4],bl
  439612:	inc    ebx
  439613:	add    BYTE PTR [eax-0x5c],bl
  439616:	inc    ebx
  439617:	add    al,dl
  439619:	mov    al,ds:0x9b280043
  43961e:	inc    ebx
  43961f:	add    BYTE PTR [eax+0x6c0043a1],dl
  439625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439626:	inc    ebx
  439627:	add    BYTE PTR [eax],ah
  439629:	call   0x0:0xe0043
  439630:	add    BYTE PTR [eax],al
  439632:	add    al,BYTE PTR [eax]
  439634:	add    BYTE PTR [eax],al
  439636:	test   BYTE PTR [eax],dl
  439638:	inc    eax
  439639:	add    BYTE PTR [eax+0x0],al
  43963c:	add    BYTE PTR [eax],al
  43963e:	test   BYTE PTR [ebp+0x480043],dl
  439644:	add    BYTE PTR [eax],al
  439646:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  43964a:	inc    ebx
  43964b:	outs   dx,DWORD PTR ds:[esi]
  43964c:	outs   dx,DWORD PTR ds:[esi]
  43964d:	imul   ebp,DWORD PTR [ecx+0x65],0x52
  439651:	inc    esi
  439652:	inc    ebx
  439653:	xor    bh,BYTE PTR [ecx]
  439655:	ss xor eax,0x43965c90
  43965b:	add    BYTE PTR [edi],al
  43965d:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  439661:	inc    ebx
  439662:	outs   dx,DWORD PTR ds:[esi]
  439663:	outs   dx,DWORD PTR ds:[esi]
  439664:	imul   ebp,DWORD PTR [ecx+0x65],0x52
  439668:	inc    esi
  439669:	inc    ebx
  43966a:	xor    bh,BYTE PTR [ecx]
  43966c:	ss xor eax,0x4395f4
  439672:	pop    eax
  439673:	xchg   ebp,eax
  439674:	inc    ebx
  439675:	add    BYTE PTR [eax],al
  439677:	add    BYTE PTR [eax],cl
  439679:	dec    ecx
  43967a:	fs inc ebx
  43967c:	outs   dx,DWORD PTR ds:[esi]
  43967d:	outs   dx,DWORD PTR ds:[esi]
  43967e:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  439682:	add    BYTE PTR [eax+0x4396d0],dl
	...
  439694:	or     BYTE PTR [edi+0x43],dl
	...
  4396a2:	add    BYTE PTR [eax],al
  4396a4:	clc    
  4396a5:	xchg   esi,eax
  4396a6:	inc    ebx
  4396a7:	add    BYTE PTR [eax+eax*1],ah
  4396aa:	add    BYTE PTR [eax],al
  4396ac:	les    ebp,FWORD PTR [edx]
  4396ae:	inc    ecx
  4396af:	add    al,dl
  4396b1:	inc    edx
  4396b2:	inc    eax
  4396b3:	add    ah,bl
  4396b5:	inc    edx
  4396b6:	inc    eax
  4396b7:	add    al,ah
  4396b9:	inc    edx
  4396ba:	inc    eax
  4396bb:	add    ah,ah
  4396bd:	inc    edx
  4396be:	inc    eax
  4396bf:	add    al,bl
  4396c1:	inc    edx
  4396c2:	inc    eax
  4396c3:	add    BYTE PTR [eax],bh
  4396c5:	inc    eax
  4396c6:	inc    eax
  4396c7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4396cb:	add    BYTE PTR [eax+ebp*4+0x43],dl
  4396cf:	add    BYTE PTR [eax+0x41],ch
  4396d2:	inc    ecx
  4396d3:	add    BYTE PTR [eax+0x41],dh
  4396d6:	inc    ecx
  4396d7:	add    al,cl
  4396d9:	inc    ebp
  4396da:	inc    ecx
  4396db:	add    ah,bl
  4396dd:	dec    ecx
  4396de:	inc    ecx
  4396df:	add    al,ah
  4396e1:	dec    ecx
  4396e2:	inc    ecx
  4396e3:	add    ah,ah
  4396e5:	dec    ecx
  4396e6:	inc    ecx
  4396e7:	add    ah,dl
  4396e9:	dec    ecx
  4396ea:	inc    ecx
  4396eb:	add    al,bl
  4396ed:	dec    ecx
  4396ee:	inc    ecx
  4396ef:	add    BYTE PTR [eax+0x46],ah
  4396f2:	inc    ecx
  4396f3:	add    ah,bl
  4396f5:	inc    esi
  4396f6:	inc    ecx
  4396f7:	add    BYTE PTR [edx],cl
  4396f9:	push   esp
  4396fa:	dec    ecx
  4396fb:	fs inc ebx
  4396fd:	outs   dx,DWORD PTR ds:[esi]
  4396fe:	outs   dx,DWORD PTR ds:[esi]
  4396ff:	imul   ebp,DWORD PTR [ecx+0x65],0x73
  439703:	nop
  439704:	or     BYTE PTR [edi+0xa070043],dl
  43970a:	push   esp
  43970b:	dec    ecx
  43970c:	fs inc ebx
  43970e:	outs   dx,DWORD PTR ds:[esi]
  43970f:	outs   dx,DWORD PTR ds:[esi]
  439710:	imul   ebp,DWORD PTR [ecx+0x65],0x73
  439714:	rcl    BYTE PTR [esi+0x2b540043],1
  43971a:	inc    ecx
  43971b:	add    BYTE PTR [eax],al
  43971d:	add    BYTE PTR [eax],cl
  43971f:	dec    ecx
  439720:	fs inc ebx
  439722:	outs   dx,DWORD PTR ds:[esi]
  439723:	outs   dx,DWORD PTR ds:[esi]
  439724:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  439728:	add    BYTE PTR [ebp-0x74aaffc0],cl
  43972e:	in     al,dx
  43972f:	add    esp,0xfffffff4
  439732:	mov    DWORD PTR [ebp-0xc],ecx
  439735:	mov    DWORD PTR [ebp-0x8],edx
  439738:	mov    DWORD PTR [ebp-0x4],eax
  43973b:	mov    eax,DWORD PTR [ebp-0x4]
  43973e:	call   0x405408
  439743:	mov    eax,DWORD PTR [ebp-0x8]
  439746:	call   0x405408
  43974b:	mov    eax,DWORD PTR [ebp-0xc]
  43974e:	call   0x405408
  439753:	xor    eax,eax
  439755:	push   ebp
  439756:	push   0x4397c7
  43975b:	push   DWORD PTR fs:[eax]
  43975e:	mov    DWORD PTR fs:[eax],esp
  439761:	mov    eax,DWORD PTR [ebp-0x8]
  439764:	call   0x405248
  439769:	test   eax,eax
  43976b:	jle    0x4397a1
  43976d:	mov    eax,DWORD PTR [ebp-0xc]
  439770:	call   0x405248
  439775:	test   eax,eax
  439777:	jle    0x439786
  439779:	lea    eax,[ebp-0xc]
  43977c:	mov    edx,0x4397dc
  439781:	call   0x405254
  439786:	push   DWORD PTR [ebp-0xc]
  439789:	push   DWORD PTR [ebp-0x4]
  43978c:	push   0x4397e8
  439791:	push   DWORD PTR [ebp-0x8]
  439794:	lea    eax,[ebp-0xc]
  439797:	mov    edx,0x4
  43979c:	call   0x40531c
  4397a1:	mov    eax,DWORD PTR [ebp+0x8]
  4397a4:	mov    edx,DWORD PTR [ebp-0xc]
  4397a7:	call   0x404fdc
  4397ac:	xor    eax,eax
  4397ae:	pop    edx
  4397af:	pop    ecx
  4397b0:	pop    ecx
  4397b1:	mov    DWORD PTR fs:[eax],edx
  4397b4:	push   0x4397ce
  4397b9:	lea    eax,[ebp-0xc]
  4397bc:	mov    edx,0x3
  4397c1:	call   0x404fac
  4397c6:	ret    
  4397c7:	jmp    0x40481c
  4397cc:	jmp    0x4397b9
  4397ce:	mov    esp,ebp
  4397d0:	pop    ebp
  4397d1:	ret    0x4
  4397d4:	(bad)  
  4397d5:	(bad)  
  4397d6:	(bad)  
  4397d7:	inc    DWORD PTR [edx]
  4397d9:	add    BYTE PTR [eax],al
  4397db:	add    BYTE PTR [ebx],bh
  4397dd:	and    BYTE PTR [eax],al
  4397df:	add    bh,bh
  4397e1:	(bad)  
  4397e2:	(bad)  
  4397e3:	inc    DWORD PTR [ecx]
  4397e5:	add    BYTE PTR [eax],al
  4397e7:	add    BYTE PTR ds:0x55000000,bh
  4397ed:	mov    ebp,esp
  4397ef:	add    esp,0xfffffff8
  4397f2:	push   ebx
  4397f3:	mov    ebx,ecx
  4397f5:	mov    DWORD PTR [ebp-0x8],edx
  4397f8:	mov    DWORD PTR [ebp-0x4],eax
  4397fb:	mov    eax,DWORD PTR [ebp-0x4]
  4397fe:	call   0x405408
  439803:	mov    eax,DWORD PTR [ebp-0x8]
  439806:	call   0x405408
  43980b:	xor    eax,eax
  43980d:	push   ebp
  43980e:	push   0x439862
  439813:	push   DWORD PTR fs:[eax]
  439816:	mov    DWORD PTR fs:[eax],esp
  439819:	mov    eax,DWORD PTR [ebp-0x8]
  43981c:	call   0x405248
  439821:	test   eax,eax
  439823:	jle    0x439832
  439825:	lea    eax,[ebp-0x8]
  439828:	mov    edx,0x439878
  43982d:	call   0x405254
  439832:	lea    eax,[ebp-0x8]
  439835:	mov    edx,DWORD PTR [ebp-0x4]
  439838:	call   0x405254
  43983d:	mov    eax,ebx
  43983f:	mov    edx,DWORD PTR [ebp-0x8]
  439842:	call   0x404fdc
  439847:	xor    eax,eax
  439849:	pop    edx
  43984a:	pop    ecx
  43984b:	pop    ecx
  43984c:	mov    DWORD PTR fs:[eax],edx
  43984f:	push   0x439869
  439854:	lea    eax,[ebp-0x8]
  439857:	mov    edx,0x2
  43985c:	call   0x404fac
  439861:	ret    
  439862:	jmp    0x40481c
  439867:	jmp    0x439854
  439869:	pop    ebx
  43986a:	pop    ecx
  43986b:	pop    ecx
  43986c:	pop    ebp
  43986d:	ret    
  43986e:	add    BYTE PTR [eax],al
  439870:	(bad)  
  439871:	(bad)  
  439872:	(bad)  
  439873:	inc    DWORD PTR [edx]
  439875:	add    BYTE PTR [eax],al
  439877:	add    BYTE PTR [ebx],bh
  439879:	and    BYTE PTR [eax],al
  43987b:	add    BYTE PTR [ebx+0x56],dl
  43987e:	mov    esi,edx
  439880:	mov    ebx,eax
  439882:	mov    edx,esi
  439884:	mov    eax,ebx
  439886:	mov    ecx,DWORD PTR [eax]
  439888:	call   DWORD PTR [ecx+0x18]
  43988b:	pop    esi
  43988c:	pop    ebx
  43988d:	ret    
  43988e:	mov    eax,eax
  439890:	push   ebx
  439891:	push   esi
  439892:	test   dl,dl
  439894:	je     0x43989e
  439896:	add    esp,0xfffffff0
  439899:	call   0x4043ac
  43989e:	mov    ebx,edx
  4398a0:	mov    esi,eax
  4398a2:	xor    edx,edx
  4398a4:	mov    eax,esi
  4398a6:	call   0x41432c
  4398ab:	mov    BYTE PTR [esi+0x28],0x0
  4398af:	mov    eax,esi
  4398b1:	test   bl,bl
  4398b3:	je     0x4398c4
  4398b5:	call   0x404404
  4398ba:	pop    DWORD PTR fs:0x0
  4398c1:	add    esp,0xc
  4398c4:	mov    eax,esi
  4398c6:	pop    esi
  4398c7:	pop    ebx
  4398c8:	ret    
  4398c9:	lea    eax,[eax+0x0]
  4398cc:	push   ebp
  4398cd:	mov    ebp,esp
  4398cf:	add    esp,0xfffffff8
  4398d2:	push   ebx
  4398d3:	push   esi
  4398d4:	push   edi
  4398d5:	call   0x404454
  4398da:	mov    BYTE PTR [ebp-0x5],dl
  4398dd:	mov    DWORD PTR [ebp-0x4],eax
  4398e0:	mov    eax,DWORD PTR [ebp-0x4]
  4398e3:	mov    eax,DWORD PTR [eax+0x4]
  4398e6:	test   eax,eax
  4398e8:	je     0x439999
  4398ee:	xor    edx,edx
  4398f0:	push   ebp
  4398f1:	push   0x439992
  4398f6:	push   DWORD PTR fs:[edx]
  4398f9:	mov    DWORD PTR fs:[edx],esp
  4398fc:	mov    dl,0x1
  4398fe:	call   0x43a9d4
  439903:	mov    ebx,eax
  439905:	test   ebx,ebx
  439907:	je     0x439975
  439909:	xor    eax,eax
  43990b:	push   ebp
  43990c:	push   0x43996e
  439911:	push   DWORD PTR fs:[eax]
  439914:	mov    DWORD PTR fs:[eax],esp
  439917:	mov    eax,DWORD PTR [ebp-0x4]
  43991a:	mov    edx,DWORD PTR [eax+0x10]
  43991d:	mov    eax,ebx
  43991f:	mov    ecx,DWORD PTR [eax]
  439921:	call   DWORD PTR [ecx+0x54]
  439924:	mov    esi,eax
  439926:	cmp    esi,0xffffffff
  439929:	jle    0x439953
  43992b:	mov    edx,esi
  43992d:	mov    eax,ebx
  43992f:	mov    ecx,DWORD PTR [eax]
  439931:	call   DWORD PTR [ecx+0x18]
  439934:	mov    edi,eax
  439936:	mov    eax,DWORD PTR [ebp-0x4]
  439939:	mov    edx,DWORD PTR [eax+0x18]
  43993c:	mov    eax,edi
  43993e:	mov    ecx,DWORD PTR [eax]
  439940:	call   DWORD PTR [ecx+0x54]
  439943:	mov    esi,eax
  439945:	cmp    esi,0xffffffff
  439948:	jle    0x439953
  43994a:	mov    edx,esi
  43994c:	mov    eax,edi
  43994e:	mov    ecx,DWORD PTR [eax]
  439950:	call   DWORD PTR [ecx+0x48]
  439953:	xor    eax,eax
  439955:	pop    edx
  439956:	pop    ecx
  439957:	pop    ecx
  439958:	mov    DWORD PTR fs:[eax],edx
  43995b:	push   0x439975
  439960:	mov    eax,DWORD PTR [ebp-0x4]
  439963:	mov    eax,DWORD PTR [eax+0x4]
  439966:	mov    dl,0x1
  439968:	call   0x43a9f8
  43996d:	ret    
  43996e:	jmp    0x40481c
  439973:	jmp    0x439960
  439975:	xor    eax,eax
  439977:	pop    edx
  439978:	pop    ecx
  439979:	pop    ecx
  43997a:	mov    DWORD PTR fs:[eax],edx
  43997d:	push   0x439999
  439982:	movzx  edx,BYTE PTR [ebp-0x5]
  439986:	and    dl,0xfc
  439989:	mov    eax,DWORD PTR [ebp-0x4]
  43998c:	call   0x414364
  439991:	ret    
  439992:	jmp    0x40481c
  439997:	jmp    0x439982
  439999:	cmp    BYTE PTR [ebp-0x5],0x0
  43999d:	jle    0x4399a7
  43999f:	mov    eax,DWORD PTR [ebp-0x4]
  4399a2:	call   0x4043fc
  4399a7:	pop    edi
  4399a8:	pop    esi
  4399a9:	pop    ebx
  4399aa:	pop    ecx
  4399ab:	pop    ecx
  4399ac:	pop    ebp
  4399ad:	ret    
  4399ae:	mov    eax,eax
  4399b0:	push   ebp
  4399b1:	mov    ebp,esp
  4399b3:	push   0x0
  4399b5:	push   ebx
  4399b6:	push   esi
  4399b7:	push   edi
  4399b8:	mov    ebx,edx
  4399ba:	mov    esi,eax
  4399bc:	xor    eax,eax
  4399be:	push   ebp
  4399bf:	push   0x439a12
  4399c4:	push   DWORD PTR fs:[eax]
  4399c7:	mov    DWORD PTR fs:[eax],esp
  4399ca:	test   ebx,ebx
  4399cc:	je     0x4399fc
  4399ce:	mov    eax,ebx
  4399d0:	mov    edx,DWORD PTR ds:0x4394a8
  4399d6:	call   0x40422c
  4399db:	test   al,al
  4399dd:	je     0x4399fc
  4399df:	lea    edx,[ebp-0x4]
  4399e2:	mov    edi,ebx
  4399e4:	mov    eax,edi
  4399e6:	mov    ecx,DWORD PTR [eax]
  4399e8:	call   DWORD PTR [ecx+0x20]
  4399eb:	mov    edx,DWORD PTR [ebp-0x4]
  4399ee:	mov    eax,esi
  4399f0:	call   0x439df4
  4399f5:	movzx  eax,BYTE PTR [edi+0x28]
  4399f9:	mov    BYTE PTR [esi+0x28],al
  4399fc:	xor    eax,eax
  4399fe:	pop    edx
  4399ff:	pop    ecx
  439a00:	pop    ecx
  439a01:	mov    DWORD PTR fs:[eax],edx
  439a04:	push   0x439a19
  439a09:	lea    eax,[ebp-0x4]
  439a0c:	call   0x404f88
  439a11:	ret    
  439a12:	jmp    0x40481c
  439a17:	jmp    0x439a09
  439a19:	pop    edi
  439a1a:	pop    esi
  439a1b:	pop    ebx
  439a1c:	pop    ecx
  439a1d:	pop    ebp
  439a1e:	ret    
  439a1f:	nop
  439a20:	push   ebp
  439a21:	mov    ebp,esp
  439a23:	push   0x0
  439a25:	push   0x0
  439a27:	push   0x0
  439a29:	push   ebx
  439a2a:	mov    DWORD PTR [ebp-0x4],edx
  439a2d:	mov    ebx,eax
  439a2f:	mov    eax,DWORD PTR [ebp-0x4]
  439a32:	call   0x405408
  439a37:	xor    eax,eax
  439a39:	push   ebp
  439a3a:	push   0x439ace
  439a3f:	push   DWORD PTR fs:[eax]
  439a42:	mov    DWORD PTR fs:[eax],esp
  439a45:	mov    eax,DWORD PTR [ebp-0x4]
  439a48:	call   0x435e60
  439a4d:	test   al,al
  439a4f:	je     0x439a63
  439a51:	mov    eax,DWORD PTR [ebp-0x4]
  439a54:	mov    edx,DWORD PTR [ebx+0x10]
  439a57:	call   0x4053b0
  439a5c:	sete   al
  439a5f:	mov    ebx,eax
  439a61:	jmp    0x439ab3
  439a63:	mov    eax,DWORD PTR [ebp-0x4]
  439a66:	call   0x435f0c
  439a6b:	test   al,al
  439a6d:	je     0x439a96
  439a6f:	mov    eax,DWORD PTR [ebx+0x10]
  439a72:	call   0x405248
  439a77:	mov    edx,eax
  439a79:	lea    ecx,[ebp-0x8]
  439a7c:	mov    eax,DWORD PTR [ebp-0x4]
  439a7f:	call   0x435938
  439a84:	mov    edx,DWORD PTR [ebp-0x8]
  439a87:	mov    eax,DWORD PTR [ebx+0x10]
  439a8a:	call   0x4053b0
  439a8f:	sete   al
  439a92:	mov    ebx,eax
  439a94:	jmp    0x439ab3
  439a96:	lea    edx,[ebp-0xc]
  439a99:	mov    eax,DWORD PTR [ebp-0x4]
  439a9c:	call   0x435f64
  439aa1:	mov    ecx,DWORD PTR [ebp-0xc]
  439aa4:	mov    edx,DWORD PTR [ebx+0x10]
  439aa7:	mov    eax,ds:0x41be90
  439aac:	call   0x41b460
  439ab1:	mov    ebx,eax
  439ab3:	xor    eax,eax
  439ab5:	pop    edx
  439ab6:	pop    ecx
  439ab7:	pop    ecx
  439ab8:	mov    DWORD PTR fs:[eax],edx
  439abb:	push   0x439ad5
  439ac0:	lea    eax,[ebp-0xc]
  439ac3:	mov    edx,0x3
  439ac8:	call   0x404fac
  439acd:	ret    
  439ace:	jmp    0x40481c
  439ad3:	jmp    0x439ac0
  439ad5:	mov    eax,ebx
  439ad7:	pop    ebx
  439ad8:	mov    esp,ebp
  439ada:	pop    ebp
  439adb:	ret    
  439adc:	push   ebp
  439add:	mov    ebp,esp
  439adf:	push   ecx
  439ae0:	push   ebx
  439ae1:	mov    DWORD PTR [ebp-0x4],edx
  439ae4:	mov    ebx,eax
  439ae6:	mov    eax,DWORD PTR [ebp-0x4]
  439ae9:	call   0x405408
  439aee:	xor    eax,eax
  439af0:	push   ebp
  439af1:	push   0x439b1d
  439af6:	push   DWORD PTR fs:[eax]
  439af9:	mov    DWORD PTR fs:[eax],esp
  439afc:	lea    eax,[ebx+0x14]
  439aff:	mov    edx,DWORD PTR [ebp-0x4]
  439b02:	call   0x404fdc
  439b07:	xor    eax,eax
  439b09:	pop    edx
  439b0a:	pop    ecx
  439b0b:	pop    ecx
  439b0c:	mov    DWORD PTR fs:[eax],edx
  439b0f:	push   0x439b24
  439b14:	lea    eax,[ebp-0x4]
  439b17:	call   0x404f88
  439b1c:	ret    
  439b1d:	jmp    0x40481c
  439b22:	jmp    0x439b14
  439b24:	pop    ebx
  439b25:	pop    ecx
  439b26:	pop    ebp
  439b27:	ret    
  439b28:	push   ebx
  439b29:	push   esi
  439b2a:	mov    esi,edx
  439b2c:	mov    ebx,eax
  439b2e:	mov    edx,esi
  439b30:	mov    eax,ebx
  439b32:	mov    ecx,DWORD PTR [eax]
  439b34:	call   DWORD PTR [ecx+0x20]
  439b37:	pop    esi
  439b38:	pop    ebx
  439b39:	ret    
  439b3a:	mov    eax,eax
  439b3c:	push   ebx
  439b3d:	push   esi
  439b3e:	mov    esi,edx
  439b40:	mov    ebx,eax
  439b42:	push   DWORD PTR [ebx+0x18]
  439b45:	push   0x439b64
  439b4a:	push   DWORD PTR [ebx+0x24]
  439b4d:	mov    eax,esi
  439b4f:	mov    edx,0x3
  439b54:	call   0x40531c
  439b59:	pop    esi
  439b5a:	pop    ebx
  439b5b:	ret    
  439b5c:	(bad)  
  439b5d:	(bad)  
  439b5e:	(bad)  
  439b5f:	inc    DWORD PTR [ecx]
  439b61:	add    BYTE PTR [eax],al
  439b63:	add    BYTE PTR ds:0x55000000,bh
  439b69:	mov    ebp,esp
  439b6b:	xor    ecx,ecx
  439b6d:	push   ecx
  439b6e:	push   ecx
  439b6f:	push   ecx
  439b70:	push   ecx
  439b71:	push   ebx
  439b72:	push   esi
  439b73:	mov    esi,edx
  439b75:	mov    ebx,eax
  439b77:	xor    eax,eax
  439b79:	push   ebp
  439b7a:	push   0x439c2a
  439b7f:	push   DWORD PTR fs:[eax]
  439b82:	mov    DWORD PTR fs:[eax],esp
  439b85:	push   esi
  439b86:	xor    ecx,ecx
  439b88:	mov    edx,DWORD PTR [ebx+0x24]
  439b8b:	mov    eax,DWORD PTR [ebx+0x18]
  439b8e:	call   0x43972c
  439b93:	lea    eax,[ebp-0x4]
  439b96:	push   eax
  439b97:	mov    ecx,DWORD PTR [esi]
  439b99:	mov    edx,DWORD PTR [ebx+0x1c]
  439b9c:	mov    eax,0x439c40
  439ba1:	call   0x43972c
  439ba6:	mov    edx,DWORD PTR [ebp-0x4]
  439ba9:	mov    eax,esi
  439bab:	call   0x404fdc
  439bb0:	cmp    BYTE PTR [ebx+0x28],0x0
  439bb4:	jne    0x439bd3
  439bb6:	lea    eax,[ebp-0x8]
  439bb9:	push   eax
  439bba:	mov    ecx,DWORD PTR [esi]
  439bbc:	mov    edx,DWORD PTR [ebx+0x14]
  439bbf:	mov    eax,0x439c50
  439bc4:	call   0x43972c
  439bc9:	mov    edx,DWORD PTR [ebp-0x8]
  439bcc:	mov    eax,esi
  439bce:	call   0x404fdc
  439bd3:	lea    eax,[ebp-0xc]
  439bd6:	push   eax
  439bd7:	mov    ecx,DWORD PTR [esi]
  439bd9:	mov    edx,DWORD PTR [ebx+0x10]
  439bdc:	mov    eax,0x439c60
  439be1:	call   0x43972c
  439be6:	mov    edx,DWORD PTR [ebp-0xc]
  439be9:	mov    eax,esi
  439beb:	call   0x404fdc
  439bf0:	cmp    BYTE PTR [ebx+0x20],0x0
  439bf4:	je     0x439c0f
  439bf6:	lea    ecx,[ebp-0x10]
  439bf9:	mov    edx,DWORD PTR [esi]
  439bfb:	mov    eax,0x439c70
  439c00:	call   0x4397ec
  439c05:	mov    edx,DWORD PTR [ebp-0x10]
  439c08:	mov    eax,esi
  439c0a:	call   0x404fdc
  439c0f:	xor    eax,eax
  439c11:	pop    edx
  439c12:	pop    ecx
  439c13:	pop    ecx
  439c14:	mov    DWORD PTR fs:[eax],edx
  439c17:	push   0x439c31
  439c1c:	lea    eax,[ebp-0x10]
  439c1f:	mov    edx,0x4
  439c24:	call   0x404fac
  439c29:	ret    
  439c2a:	jmp    0x40481c
  439c2f:	jmp    0x439c1c
  439c31:	pop    esi
  439c32:	pop    ebx
  439c33:	mov    esp,ebp
  439c35:	pop    ebp
  439c36:	ret    
  439c37:	add    bh,bh
  439c39:	(bad)  
  439c3a:	(bad)  
  439c3b:	inc    DWORD PTR [eax+eax*1]
  439c3e:	add    BYTE PTR [eax],al
  439c40:	jo     0x439ca3
  439c42:	je     0x439cac
  439c44:	add    BYTE PTR [eax],al
  439c46:	add    BYTE PTR [eax],al
  439c48:	(bad)  
  439c49:	(bad)  
  439c4a:	(bad)  
  439c4b:	inc    DWORD PTR [edi]
  439c4d:	add    BYTE PTR [eax],al
  439c4f:	add    BYTE PTR [ebp+0x78],ah
  439c52:	jo     0x439cbd
  439c54:	jb     0x439cbb
  439c56:	jae    0x439c58
  439c58:	(bad)  
  439c59:	(bad)  
  439c5a:	(bad)  
  439c5b:	inc    DWORD PTR [esi]
  439c5d:	add    BYTE PTR [eax],al
  439c5f:	add    BYTE PTR [edi+ebp*2+0x6d],ah
  439c63:	popa   
  439c64:	imul   ebp,DWORD PTR [esi+0x0],0xffffff00
  439c6b:	inc    DWORD PTR [esi]
  439c6d:	add    BYTE PTR [eax],al
  439c6f:	add    BYTE PTR [ebx+0x65],dh
  439c72:	arpl   WORD PTR [ebp+0x72],si
  439c75:	add    BYTE PTR gs:[eax],al
  439c78:	push   ebp
  439c79:	mov    ebp,esp
  439c7b:	push   0x0
  439c7d:	push   0x0
  439c7f:	push   0x0
  439c81:	push   ebx
  439c82:	push   esi
  439c83:	mov    esi,edx
  439c85:	mov    ebx,eax
  439c87:	xor    eax,eax
  439c89:	push   ebp
  439c8a:	push   0x439d9a
  439c8f:	push   DWORD PTR fs:[eax]
  439c92:	mov    DWORD PTR fs:[eax],esp
  439c95:	lea    ecx,[ebp-0x4]
  439c98:	mov    edx,0x439db0
  439c9d:	mov    eax,esi
  439c9f:	call   0x4151a4
  439ca4:	mov    edx,DWORD PTR [ebp-0x4]
  439ca7:	lea    eax,[ebx+0x1c]
  439caa:	call   0x404fdc
  439caf:	mov    eax,DWORD PTR [ebx+0x1c]
  439cb2:	call   0x405248
  439cb7:	test   eax,eax
  439cb9:	jle    0x439d2c
  439cbb:	mov    eax,0x1
  439cc0:	mov    edx,DWORD PTR [ebx+0x1c]
  439cc3:	dec    eax
  439cc4:	test   edx,edx
  439cc6:	je     0x439ccd
  439cc8:	cmp    eax,DWORD PTR [edx-0x4]
  439ccb:	jb     0x439cd2
  439ccd:	call   0x403f68
  439cd2:	inc    eax
  439cd3:	cmp    BYTE PTR [edx+eax*1-0x1],0x22
  439cd8:	jne    0x439cec
  439cda:	lea    eax,[ebx+0x1c]
  439cdd:	mov    ecx,0x1
  439ce2:	mov    edx,0x1
  439ce7:	call   0x4054c0
  439cec:	mov    eax,DWORD PTR [ebx+0x1c]
  439cef:	call   0x405248
  439cf4:	mov    edx,DWORD PTR [ebx+0x1c]
  439cf7:	dec    eax
  439cf8:	test   edx,edx
  439cfa:	je     0x439d01
  439cfc:	cmp    eax,DWORD PTR [edx-0x4]
  439cff:	jb     0x439d06
  439d01:	call   0x403f68
  439d06:	inc    eax
  439d07:	cmp    BYTE PTR [edx+eax*1-0x1],0x22
  439d0c:	jne    0x439d39
  439d0e:	mov    eax,DWORD PTR [ebx+0x1c]
  439d11:	call   0x405248
  439d16:	mov    edx,eax
  439d18:	sub    edx,0x1
  439d1b:	jno    0x439d22
  439d1d:	call   0x403f70
  439d22:	lea    eax,[ebx+0x1c]
  439d25:	call   0x4056a8
  439d2a:	jmp    0x439d39
  439d2c:	lea    eax,[ebx+0x1c]
  439d2f:	mov    edx,0x439dc0
  439d34:	call   0x404fdc
  439d39:	lea    ecx,[ebp-0x8]
  439d3c:	mov    edx,0x439dcc
  439d41:	mov    eax,esi
  439d43:	call   0x4151a4
  439d48:	mov    edx,DWORD PTR [ebp-0x8]
  439d4b:	mov    eax,ebx
  439d4d:	mov    ecx,DWORD PTR [eax]
  439d4f:	call   DWORD PTR [ecx+0x24]
  439d52:	lea    ecx,[ebp-0xc]
  439d55:	mov    edx,0x439ddc
  439d5a:	mov    eax,esi
  439d5c:	call   0x4151a4
  439d61:	mov    edx,DWORD PTR [ebp-0xc]
  439d64:	lea    eax,[ebx+0x10]
  439d67:	call   0x404fdc
  439d6c:	mov    edx,0x439dec
  439d71:	mov    eax,esi
  439d73:	mov    ecx,DWORD PTR [eax]
  439d75:	call   DWORD PTR [ecx+0x54]
  439d78:	inc    eax
  439d79:	setne  al
  439d7c:	mov    BYTE PTR [ebx+0x20],al
  439d7f:	xor    eax,eax
  439d81:	pop    edx
  439d82:	pop    ecx
  439d83:	pop    ecx
  439d84:	mov    DWORD PTR fs:[eax],edx
  439d87:	push   0x439da1
  439d8c:	lea    eax,[ebp-0xc]
  439d8f:	mov    edx,0x3
  439d94:	call   0x404fac
  439d99:	ret    
  439d9a:	jmp    0x40481c
  439d9f:	jmp    0x439d8c
  439da1:	pop    esi
  439da2:	pop    ebx
  439da3:	mov    esp,ebp
  439da5:	pop    ebp
  439da6:	ret    
  439da7:	add    bh,bh
  439da9:	(bad)  
  439daa:	(bad)  
  439dab:	inc    DWORD PTR [eax+eax*1]
  439dae:	add    BYTE PTR [eax],al
  439db0:	push   eax
  439db1:	inc    ecx
  439db2:	push   esp
  439db3:	dec    eax
  439db4:	add    BYTE PTR [eax],al
  439db6:	add    BYTE PTR [eax],al
  439db8:	(bad)  
  439db9:	(bad)  
  439dba:	(bad)  
  439dbb:	inc    DWORD PTR [ecx]
  439dbd:	add    BYTE PTR [eax],al
  439dbf:	add    BYTE PTR [edi],ch
  439dc1:	add    BYTE PTR [eax],al
  439dc3:	add    bh,bh
  439dc5:	(bad)  
  439dc6:	(bad)  
  439dc7:	inc    DWORD PTR [edi]
  439dc9:	add    BYTE PTR [eax],al
  439dcb:	add    BYTE PTR [ebp+0x58],al
  439dce:	push   eax
  439dcf:	dec    ecx
  439dd0:	push   edx
  439dd1:	inc    ebp
  439dd2:	push   ebx
  439dd3:	add    bh,bh
  439dd5:	(bad)  
  439dd6:	(bad)  
  439dd7:	inc    DWORD PTR [esi]
  439dd9:	add    BYTE PTR [eax],al
  439ddb:	add    BYTE PTR [edi+ecx*2+0x4d],al
  439ddf:	inc    ecx
  439de0:	dec    ecx
  439de1:	dec    esi
  439de2:	add    BYTE PTR [eax],al
  439de4:	(bad)  
  439de5:	(bad)  
  439de6:	(bad)  
  439de7:	inc    DWORD PTR [esi]
  439de9:	add    BYTE PTR [eax],al
  439deb:	add    BYTE PTR [ebx+0x45],dl
  439dee:	inc    ebx
  439def:	push   ebp
  439df0:	push   edx
  439df1:	inc    ebp
  439df2:	add    BYTE PTR [eax],al
  439df4:	push   ebp
  439df5:	mov    ebp,esp
  439df7:	mov    ecx,0x8
  439dfc:	push   0x0
  439dfe:	push   0x0
  439e00:	dec    ecx
  439e01:	jne    0x439dfc
  439e03:	push   ecx
  439e04:	push   ebx
  439e05:	push   esi
  439e06:	push   edi
  439e07:	mov    DWORD PTR [ebp-0x4],edx
  439e0a:	mov    DWORD PTR [ebp-0x8],eax
  439e0d:	mov    eax,DWORD PTR [ebp-0x4]
  439e10:	call   0x405408
  439e15:	xor    eax,eax
  439e17:	push   ebp
  439e18:	push   0x43a060
  439e1d:	push   DWORD PTR fs:[eax]
  439e20:	mov    DWORD PTR fs:[eax],esp
  439e23:	mov    eax,DWORD PTR [ebp-0x4]
  439e26:	mov    edx,DWORD PTR [ebp-0x8]
  439e29:	mov    edx,DWORD PTR [edx+0xc]
  439e2c:	call   0x4053b0
  439e31:	je     0x43a03d
  439e37:	mov    eax,DWORD PTR [ebp-0x8]
  439e3a:	add    eax,0xc
  439e3d:	mov    edx,DWORD PTR [ebp-0x4]
  439e40:	call   0x404fdc
  439e45:	mov    dl,0x1
  439e47:	mov    eax,ds:0x412cf0
  439e4c:	call   0x404070
  439e51:	mov    DWORD PTR [ebp-0xc],eax
  439e54:	xor    eax,eax
  439e56:	push   ebp
  439e57:	push   0x43a036
  439e5c:	push   DWORD PTR fs:[eax]
  439e5f:	mov    DWORD PTR fs:[eax],esp
  439e62:	jmp    0x439ecc
  439e64:	push   0x1
  439e66:	lea    eax,[ebp-0x14]
  439e69:	push   eax
  439e6a:	lea    eax,[ebp-0x4]
  439e6d:	mov    cl,0x1
  439e6f:	mov    edx,0x43a078
  439e74:	call   0x41c7c4
  439e79:	mov    edx,DWORD PTR [ebp-0x14]
  439e7c:	lea    ecx,[ebp-0x10]
  439e7f:	mov    eax,ds:0x41be90
  439e84:	call   0x41b2b0
  439e89:	mov    edx,DWORD PTR [ebp-0x10]
  439e8c:	mov    eax,DWORD PTR [ebp-0xc]
  439e8f:	mov    ecx,DWORD PTR [eax]
  439e91:	call   DWORD PTR [ecx+0x38]
  439e94:	mov    edx,DWORD PTR [ebp-0x4]
  439e97:	mov    eax,0x43a078
  439e9c:	call   0x405564
  439ea1:	test   eax,eax
  439ea3:	jne    0x439ecc
  439ea5:	mov    eax,DWORD PTR [ebp-0x4]
  439ea8:	call   0x405248
  439ead:	test   eax,eax
  439eaf:	jle    0x439ecc
  439eb1:	lea    ecx,[ebp-0x18]
  439eb4:	mov    edx,DWORD PTR [ebp-0x4]
  439eb7:	mov    eax,ds:0x41be90
  439ebc:	call   0x41b2b0
  439ec1:	mov    edx,DWORD PTR [ebp-0x18]
  439ec4:	mov    eax,DWORD PTR [ebp-0xc]
  439ec7:	mov    ecx,DWORD PTR [eax]
  439ec9:	call   DWORD PTR [ecx+0x38]
  439ecc:	mov    edx,DWORD PTR [ebp-0x4]
  439ecf:	mov    eax,0x43a078
  439ed4:	call   0x405564
  439ed9:	test   eax,eax
  439edb:	jg     0x439e64
  439edd:	mov    eax,DWORD PTR [ebp-0xc]
  439ee0:	mov    edx,DWORD PTR [eax]
  439ee2:	call   DWORD PTR [edx+0x14]
  439ee5:	test   eax,eax
  439ee7:	jne    0x439ef4
  439ee9:	mov    edx,DWORD PTR [ebp-0x4]
  439eec:	mov    eax,DWORD PTR [ebp-0xc]
  439eef:	mov    ecx,DWORD PTR [eax]
  439ef1:	call   DWORD PTR [ecx+0x2c]
  439ef4:	lea    ecx,[ebp-0x1c]
  439ef7:	xor    edx,edx
  439ef9:	mov    eax,DWORD PTR [ebp-0xc]
  439efc:	call   0x414fb4
  439f01:	mov    edx,DWORD PTR [ebp-0x1c]
  439f04:	mov    eax,DWORD PTR [ebp-0x8]
  439f07:	add    eax,0x18
  439f0a:	call   0x404fdc
  439f0f:	lea    ecx,[ebp-0x24]
  439f12:	xor    edx,edx
  439f14:	mov    eax,DWORD PTR [ebp-0xc]
  439f17:	call   0x414fb4
  439f1c:	mov    edx,DWORD PTR [ebp-0x24]
  439f1f:	lea    ecx,[ebp-0x20]
  439f22:	mov    eax,DWORD PTR [ebp-0xc]
  439f25:	call   0x4151a4
  439f2a:	mov    edx,DWORD PTR [ebp-0x20]
  439f2d:	mov    eax,DWORD PTR [ebp-0x8]
  439f30:	add    eax,0x24
  439f33:	call   0x404fdc
  439f38:	xor    edx,edx
  439f3a:	mov    eax,DWORD PTR [ebp-0xc]
  439f3d:	mov    ecx,DWORD PTR [eax]
  439f3f:	call   DWORD PTR [ecx+0x48]
  439f42:	mov    eax,DWORD PTR [ebp-0xc]
  439f45:	mov    edx,DWORD PTR [eax]
  439f47:	call   DWORD PTR [edx+0x14]
  439f4a:	mov    esi,eax
  439f4c:	sub    esi,0x1
  439f4f:	jno    0x439f56
  439f51:	call   0x403f70
  439f56:	test   esi,esi
  439f58:	jl     0x43a010
  439f5e:	inc    esi
  439f5f:	xor    ebx,ebx
  439f61:	lea    ecx,[ebp-0x28]
  439f64:	mov    edx,ebx
  439f66:	mov    eax,DWORD PTR [ebp-0xc]
  439f69:	mov    edi,DWORD PTR [eax]
  439f6b:	call   DWORD PTR [edi+0xc]
  439f6e:	mov    edx,DWORD PTR [ebp-0x28]
  439f71:	mov    eax,0x43a084
  439f76:	call   0x405564
  439f7b:	test   eax,eax
  439f7d:	jne    0x439fab
  439f7f:	lea    ecx,[ebp-0x30]
  439f82:	mov    edx,ebx
  439f84:	mov    eax,DWORD PTR [ebp-0xc]
  439f87:	mov    edi,DWORD PTR [eax]
  439f89:	call   DWORD PTR [edi+0xc]
  439f8c:	mov    edx,DWORD PTR [ebp-0x30]
  439f8f:	lea    ecx,[ebp-0x2c]
  439f92:	mov    eax,ds:0x41be90
  439f97:	call   0x41b2c4
  439f9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  439f9f:	mov    edx,ebx
  439fa1:	mov    eax,DWORD PTR [ebp-0xc]
  439fa4:	mov    edi,DWORD PTR [eax]
  439fa6:	call   DWORD PTR [edi+0x20]
  439fa9:	jmp    0x43a008
  439fab:	lea    ecx,[ebp-0x3c]
  439fae:	mov    edx,ebx
  439fb0:	mov    eax,DWORD PTR [ebp-0xc]
  439fb3:	call   0x414fb4
  439fb8:	mov    edx,DWORD PTR [ebp-0x3c]
  439fbb:	lea    ecx,[ebp-0x38]
  439fbe:	mov    eax,ds:0x41be90
  439fc3:	call   0x41b2c4
  439fc8:	push   DWORD PTR [ebp-0x38]
  439fcb:	push   0x43a084
  439fd0:	lea    ecx,[ebp-0x44]
  439fd3:	mov    edx,ebx
  439fd5:	mov    eax,DWORD PTR [ebp-0xc]
  439fd8:	call   0x414fb4
  439fdd:	mov    edx,DWORD PTR [ebp-0x44]
  439fe0:	lea    ecx,[ebp-0x40]
  439fe3:	mov    eax,DWORD PTR [ebp-0xc]
  439fe6:	call   0x4151a4
  439feb:	push   DWORD PTR [ebp-0x40]
  439fee:	lea    eax,[ebp-0x34]
  439ff1:	mov    edx,0x3
  439ff6:	call   0x40531c
  439ffb:	mov    ecx,DWORD PTR [ebp-0x34]
  439ffe:	mov    edx,ebx
  43a000:	mov    eax,DWORD PTR [ebp-0xc]
  43a003:	mov    edi,DWORD PTR [eax]
  43a005:	call   DWORD PTR [edi+0x20]
  43a008:	inc    ebx
  43a009:	dec    esi
  43a00a:	jne    0x439f61
  43a010:	mov    edx,DWORD PTR [ebp-0xc]
  43a013:	mov    eax,DWORD PTR [ebp-0x8]
  43a016:	mov    ecx,DWORD PTR [eax]
  43a018:	call   DWORD PTR [ecx+0x30]
  43a01b:	xor    eax,eax
  43a01d:	pop    edx
  43a01e:	pop    ecx
  43a01f:	pop    ecx
  43a020:	mov    DWORD PTR fs:[eax],edx
  43a023:	push   0x43a03d
  43a028:	lea    edx,[ebp-0xc]
  43a02b:	mov    eax,ds:0x41be90
  43a030:	call   0x41b14c
  43a035:	ret    
  43a036:	jmp    0x40481c
  43a03b:	jmp    0x43a028
  43a03d:	xor    eax,eax
  43a03f:	pop    edx
  43a040:	pop    ecx
  43a041:	pop    ecx
  43a042:	mov    DWORD PTR fs:[eax],edx
  43a045:	push   0x43a067
  43a04a:	lea    eax,[ebp-0x44]
  43a04d:	mov    edx,0xe
  43a052:	call   0x404fac
  43a057:	lea    eax,[ebp-0x4]
  43a05a:	call   0x404f88
  43a05f:	ret    
  43a060:	jmp    0x40481c
  43a065:	jmp    0x43a04a
  43a067:	pop    edi
  43a068:	pop    esi
  43a069:	pop    ebx
  43a06a:	mov    esp,ebp
  43a06c:	pop    ebp
  43a06d:	ret    
  43a06e:	add    BYTE PTR [eax],al
  43a070:	(bad)  
  43a071:	(bad)  
  43a072:	(bad)  
  43a073:	inc    DWORD PTR [ecx]
  43a075:	add    BYTE PTR [eax],al
  43a077:	add    BYTE PTR [ebx],bh
  43a079:	add    BYTE PTR [eax],al
  43a07b:	add    bh,bh
  43a07d:	(bad)  
  43a07e:	(bad)  
  43a07f:	inc    DWORD PTR [ecx]
  43a081:	add    BYTE PTR [eax],al
  43a083:	add    BYTE PTR ds:0x53000000,bh
  43a089:	push   esi
  43a08a:	test   dl,dl
  43a08c:	je     0x43a096
  43a08e:	add    esp,0xfffffff0
  43a091:	call   0x4043ac
  43a096:	mov    ebx,edx
  43a098:	mov    esi,eax
  43a09a:	xor    edx,edx
  43a09c:	mov    eax,esi
  43a09e:	call   0x439890
  43a0a3:	mov    DWORD PTR [esi+0x30],0xffffffff
  43a0aa:	mov    DWORD PTR [esi+0x34],0xffffffff
  43a0b1:	mov    BYTE PTR [esi+0x28],0x1
  43a0b5:	mov    eax,esi
  43a0b7:	test   bl,bl
  43a0b9:	je     0x43a0ca
  43a0bb:	call   0x404404
  43a0c0:	pop    DWORD PTR fs:0x0
  43a0c7:	add    esp,0xc
  43a0ca:	mov    eax,esi
  43a0cc:	pop    esi
  43a0cd:	pop    ebx
  43a0ce:	ret    
  43a0cf:	nop
  43a0d0:	push   ebp
  43a0d1:	mov    ebp,esp
  43a0d3:	add    esp,0xfffffff0
  43a0d6:	push   ebx
  43a0d7:	push   esi
  43a0d8:	push   edi
  43a0d9:	mov    DWORD PTR [ebp-0x4],edx
  43a0dc:	mov    DWORD PTR [ebp-0x8],eax
  43a0df:	mov    eax,DWORD PTR [ebp-0x4]
  43a0e2:	call   0x405408
  43a0e7:	xor    eax,eax
  43a0e9:	push   ebp
  43a0ea:	push   0x43a177
  43a0ef:	push   DWORD PTR fs:[eax]
  43a0f2:	mov    DWORD PTR fs:[eax],esp
  43a0f5:	mov    eax,DWORD PTR [ebp-0x4]
  43a0f8:	call   0x405248
  43a0fd:	test   eax,eax
  43a0ff:	jle    0x43a156
  43a101:	xor    eax,eax
  43a103:	push   ebp
  43a104:	push   0x43a14c
  43a109:	push   DWORD PTR fs:[eax]
  43a10c:	mov    DWORD PTR fs:[eax],esp
  43a10f:	mov    eax,DWORD PTR [ebp-0x4]
  43a112:	call   0x435da0
  43a117:	fstp   QWORD PTR [ebp-0x10]
  43a11a:	fwait
  43a11b:	mov    eax,ds:0x41be90
  43a120:	call   0x41b2d8
  43a125:	fsubr  QWORD PTR [ebp-0x10]
  43a128:	fmul   DWORD PTR ds:0x43a188
  43a12e:	fdiv   DWORD PTR ds:0x43a18c
  43a134:	call   0x403314
  43a139:	mov    ecx,DWORD PTR [ebp-0x8]
  43a13c:	mov    DWORD PTR [ecx+0x30],eax
  43a13f:	mov    DWORD PTR [ecx+0x34],edx
  43a142:	xor    eax,eax
  43a144:	pop    edx
  43a145:	pop    ecx
  43a146:	pop    ecx
  43a147:	mov    DWORD PTR fs:[eax],edx
  43a14a:	jmp    0x43a156
  43a14c:	jmp    0x404568
  43a151:	call   0x404978
  43a156:	mov    edx,DWORD PTR [ebp-0x4]
  43a159:	mov    eax,DWORD PTR [ebp-0x8]
  43a15c:	call   0x439adc
  43a161:	xor    eax,eax
  43a163:	pop    edx
  43a164:	pop    ecx
  43a165:	pop    ecx
  43a166:	mov    DWORD PTR fs:[eax],edx
  43a169:	push   0x43a17e
  43a16e:	lea    eax,[ebp-0x4]
  43a171:	call   0x404f88
  43a176:	ret    
  43a177:	jmp    0x40481c
  43a17c:	jmp    0x43a16e
  43a17e:	pop    edi
  43a17f:	pop    esi
  43a180:	pop    ebx
  43a181:	mov    esp,ebp
  43a183:	pop    ebp
  43a184:	ret    
  43a185:	add    BYTE PTR [eax],al
  43a187:	add    BYTE PTR [eax+0x4ca4cb],al
  43a18d:	add    BYTE PTR [edx+0x44],bh
  43a190:	push   ebx
  43a191:	push   esi
  43a192:	mov    esi,edx
  43a194:	mov    ebx,eax
  43a196:	mov    edx,esi
  43a198:	mov    eax,ebx
  43a19a:	call   0x439b3c
  43a19f:	pop    esi
  43a1a0:	pop    ebx
  43a1a1:	ret    
  43a1a2:	mov    eax,eax
  43a1a4:	push   ebp
  43a1a5:	mov    ebp,esp
  43a1a7:	xor    ecx,ecx
  43a1a9:	push   ecx
  43a1aa:	push   ecx
  43a1ab:	push   ecx
  43a1ac:	push   ecx
  43a1ad:	push   ebx
  43a1ae:	push   esi
  43a1af:	mov    esi,edx
  43a1b1:	mov    ebx,eax
  43a1b3:	xor    eax,eax
  43a1b5:	push   ebp
  43a1b6:	push   0x43a26b
  43a1bb:	push   DWORD PTR fs:[eax]
  43a1be:	mov    DWORD PTR fs:[eax],esp
  43a1c1:	mov    edx,esi
  43a1c3:	mov    eax,ebx
  43a1c5:	call   0x439b68
  43a1ca:	cmp    DWORD PTR [ebx+0x34],0xffffffff
  43a1ce:	jne    0x43a1d8
  43a1d0:	cmp    DWORD PTR [ebx+0x30],0xffffffff
  43a1d4:	jbe    0x43a216
  43a1d6:	jmp    0x43a1da
  43a1d8:	jle    0x43a216
  43a1da:	mov    eax,DWORD PTR [ebx+0x14]
  43a1dd:	call   0x405248
  43a1e2:	test   eax,eax
  43a1e4:	jne    0x43a216
  43a1e6:	lea    eax,[ebp-0x4]
  43a1e9:	push   eax
  43a1ea:	push   DWORD PTR [ebx+0x34]
  43a1ed:	push   DWORD PTR [ebx+0x30]
  43a1f0:	lea    edx,[ebp-0x8]
  43a1f3:	mov    eax,ds:0x41be90
  43a1f8:	call   0x41b184
  43a1fd:	mov    edx,DWORD PTR [ebp-0x8]
  43a200:	mov    ecx,DWORD PTR [esi]
  43a202:	mov    eax,0x43a280
  43a207:	call   0x43972c
  43a20c:	mov    edx,DWORD PTR [ebp-0x4]
  43a20f:	mov    eax,esi
  43a211:	call   0x404fdc
  43a216:	lea    eax,[ebp-0xc]
  43a219:	push   eax
  43a21a:	mov    ecx,DWORD PTR [esi]
  43a21c:	mov    edx,DWORD PTR [ebx+0x3c]
  43a21f:	mov    eax,0x43a290
  43a224:	call   0x43972c
  43a229:	mov    edx,DWORD PTR [ebp-0xc]
  43a22c:	mov    eax,esi
  43a22e:	call   0x404fdc
  43a233:	lea    eax,[ebp-0x10]
  43a236:	push   eax
  43a237:	mov    ecx,DWORD PTR [esi]
  43a239:	mov    edx,DWORD PTR [ebx+0x38]
  43a23c:	mov    eax,0x43a2a0
  43a241:	call   0x43972c
  43a246:	mov    edx,DWORD PTR [ebp-0x10]
  43a249:	mov    eax,esi
  43a24b:	call   0x404fdc
  43a250:	xor    eax,eax
  43a252:	pop    edx
  43a253:	pop    ecx
  43a254:	pop    ecx
  43a255:	mov    DWORD PTR fs:[eax],edx
  43a258:	push   0x43a272
  43a25d:	lea    eax,[ebp-0x10]
  43a260:	mov    edx,0x4
  43a265:	call   0x404fac
  43a26a:	ret    
  43a26b:	jmp    0x40481c
  43a270:	jmp    0x43a25d
  43a272:	pop    esi
  43a273:	pop    ebx
  43a274:	mov    esp,ebp
  43a276:	pop    ebp
  43a277:	ret    
  43a278:	(bad)  
  43a279:	(bad)  
  43a27a:	(bad)  
  43a27b:	inc    DWORD PTR [edi]
  43a27d:	add    BYTE PTR [eax],al
  43a27f:	add    BYTE PTR [ebp+0x61],ch
  43a282:	js     0x43a2b1
  43a284:	popa   
  43a285:	addr16 gs add bh,bh
  43a289:	(bad)  
  43a28a:	(bad)  
  43a28b:	inc    DWORD PTR [edi]
  43a28d:	add    BYTE PTR [eax],al
  43a28f:	add    BYTE PTR [ebx+0x6f],ah
  43a292:	ins    DWORD PTR es:[edi],dx
  43a293:	ins    DWORD PTR es:[edi],dx
  43a294:	outs   dx,BYTE PTR gs:[esi]
  43a296:	je     0x43a298
  43a298:	(bad)  
  43a299:	(bad)  
  43a29a:	(bad)  
  43a29b:	inc    DWORD PTR [edi]
  43a29d:	add    BYTE PTR [eax],al
  43a29f:	add    BYTE PTR [esi+0x65],dh
  43a2a2:	jb     0x43a317
  43a2a4:	imul   ebp,DWORD PTR [edi+0x6e],0xec8b5500
  43a2ab:	add    esp,0xffffffd4
  43a2ae:	push   ebx
  43a2af:	push   esi
  43a2b0:	xor    ecx,ecx
  43a2b2:	mov    DWORD PTR [ebp-0x10],ecx
  43a2b5:	mov    DWORD PTR [ebp-0xc],ecx
  43a2b8:	mov    DWORD PTR [ebp-0x8],ecx
  43a2bb:	mov    DWORD PTR [ebp-0x4],ecx
  43a2be:	mov    esi,edx
  43a2c0:	mov    ebx,eax
  43a2c2:	xor    eax,eax
  43a2c4:	push   ebp
  43a2c5:	push   0x43a3d8
  43a2ca:	push   DWORD PTR fs:[eax]
  43a2cd:	mov    DWORD PTR fs:[eax],esp
  43a2d0:	mov    edx,esi
  43a2d2:	mov    eax,ebx
  43a2d4:	call   0x439c78
  43a2d9:	lea    ecx,[ebp-0x4]
  43a2dc:	mov    edx,0x43a3f0
  43a2e1:	mov    eax,esi
  43a2e3:	call   0x4151a4
  43a2e8:	mov    edx,DWORD PTR [ebp-0x4]
  43a2eb:	or     ecx,0xffffffff
  43a2ee:	mov    eax,ds:0x41be90
  43a2f3:	call   0x41b254
  43a2f8:	cdq    
  43a2f9:	mov    DWORD PTR [ebx+0x30],eax
  43a2fc:	mov    DWORD PTR [ebx+0x34],edx
  43a2ff:	lea    ecx,[ebp-0x8]
  43a302:	mov    edx,0x43a400
  43a307:	mov    eax,esi
  43a309:	call   0x4151a4
  43a30e:	mov    edx,DWORD PTR [ebp-0x8]
  43a311:	lea    eax,[ebx+0x38]
  43a314:	call   0x404fdc
  43a319:	lea    ecx,[ebp-0xc]
  43a31c:	mov    edx,0x43a410
  43a321:	mov    eax,esi
  43a323:	call   0x4151a4
  43a328:	mov    edx,DWORD PTR [ebp-0xc]
  43a32b:	lea    eax,[ebx+0x3c]
  43a32e:	call   0x404fdc
  43a333:	mov    eax,DWORD PTR [ebx+0x14]
  43a336:	call   0x405248
  43a33b:	test   eax,eax
  43a33d:	jne    0x43a3bd
  43a33f:	mov    BYTE PTR [ebx+0x28],0x0
  43a343:	cmp    DWORD PTR [ebx+0x34],0x0
  43a347:	jne    0x43a351
  43a349:	cmp    DWORD PTR [ebx+0x30],0x0
  43a34d:	jb     0x43a3bd
  43a34f:	jmp    0x43a353
  43a351:	jl     0x43a3bd
  43a353:	mov    eax,ds:0x41be90
  43a358:	call   0x41b2d8
  43a35d:	fstp   QWORD PTR [ebp-0x18]
  43a360:	fwait
  43a361:	mov    eax,ds:0x41be90
  43a366:	call   0x41bf58
  43a36b:	fsubr  QWORD PTR [ebp-0x18]
  43a36e:	fstp   TBYTE PTR [ebp-0x24]
  43a371:	fwait
  43a372:	push   0x0
  43a374:	push   0x3e8
  43a379:	mov    eax,DWORD PTR [ebx+0x30]
  43a37c:	mov    edx,DWORD PTR [ebx+0x34]
  43a37f:	call   0x405fb8
  43a384:	jno    0x43a38b
  43a386:	call   0x403f70
  43a38b:	mov    DWORD PTR [ebp-0x2c],eax
  43a38e:	mov    DWORD PTR [ebp-0x28],edx
  43a391:	fild   QWORD PTR [ebp-0x2c]
  43a394:	fdiv   DWORD PTR ds:0x43a418
  43a39a:	fld    TBYTE PTR [ebp-0x24]
  43a39d:	faddp  st(1),st
  43a39f:	add    esp,0xfffffff8
  43a3a2:	fstp   QWORD PTR [esp]
  43a3a5:	fwait
  43a3a6:	lea    edx,[ebp-0x10]
  43a3a9:	mov    eax,ds:0x41be90
  43a3ae:	call   0x41b550
  43a3b3:	mov    edx,DWORD PTR [ebp-0x10]
  43a3b6:	mov    eax,ebx
  43a3b8:	mov    ecx,DWORD PTR [eax]
  43a3ba:	call   DWORD PTR [ecx+0x24]
  43a3bd:	xor    eax,eax
  43a3bf:	pop    edx
  43a3c0:	pop    ecx
  43a3c1:	pop    ecx
  43a3c2:	mov    DWORD PTR fs:[eax],edx
  43a3c5:	push   0x43a3df
  43a3ca:	lea    eax,[ebp-0x10]
  43a3cd:	mov    edx,0x4
  43a3d2:	call   0x404fac
  43a3d7:	ret    
  43a3d8:	jmp    0x40481c
  43a3dd:	jmp    0x43a3ca
  43a3df:	pop    esi
  43a3e0:	pop    ebx
  43a3e1:	mov    esp,ebp
  43a3e3:	pop    ebp
  43a3e4:	ret    
  43a3e5:	add    BYTE PTR [eax],al
  43a3e7:	add    bh,bh
  43a3e9:	(bad)  
  43a3ea:	(bad)  
  43a3eb:	inc    DWORD PTR [edi]
  43a3ed:	add    BYTE PTR [eax],al
  43a3ef:	add    BYTE PTR [ebp+0x41],cl
  43a3f2:	pop    eax
  43a3f3:	sub    eax,0x454741
  43a3f8:	(bad)  
  43a3f9:	(bad)  
  43a3fa:	(bad)  
  43a3fb:	inc    DWORD PTR [edi]
  43a3fd:	add    BYTE PTR [eax],al
  43a3ff:	add    BYTE PTR [esi+0x45],dl
  43a402:	push   edx
  43a403:	push   ebx
  43a404:	dec    ecx
  43a405:	dec    edi
  43a406:	dec    esi
  43a407:	add    bh,bh
  43a409:	(bad)  
  43a40a:	(bad)  
  43a40b:	inc    DWORD PTR [edi]
  43a40d:	add    BYTE PTR [eax],al
  43a40f:	add    BYTE PTR [ebx+0x4f],al
  43a412:	dec    ebp
  43a413:	dec    ebp
  43a414:	inc    ebp
  43a415:	dec    esi
  43a416:	push   esp
  43a417:	add    BYTE PTR [eax+0x534ca4cb],al
  43a41d:	push   esi
  43a41e:	test   dl,dl
  43a420:	je     0x43a42a
  43a422:	add    esp,0xfffffff0
  43a425:	call   0x4043ac
  43a42a:	mov    ebx,edx
  43a42c:	mov    esi,eax
  43a42e:	xor    edx,edx
  43a430:	mov    eax,esi
  43a432:	call   0x43a088
  43a437:	mov    BYTE PTR [esi+0x28],0x2
  43a43b:	mov    eax,esi
  43a43d:	test   bl,bl
  43a43f:	je     0x43a450
  43a441:	call   0x404404
  43a446:	pop    DWORD PTR fs:0x0
  43a44d:	add    esp,0xc
  43a450:	mov    eax,esi
  43a452:	pop    esi
  43a453:	pop    ebx
  43a454:	ret    
  43a455:	lea    eax,[eax+0x0]
  43a458:	push   ebx
  43a459:	push   esi
  43a45a:	mov    esi,edx
  43a45c:	mov    ebx,eax
  43a45e:	mov    edx,esi
  43a460:	mov    eax,ebx
  43a462:	call   0x43a1a4
  43a467:	pop    esi
  43a468:	pop    ebx
  43a469:	ret    
  43a46a:	mov    eax,eax
  43a46c:	push   ebp
  43a46d:	mov    ebp,esp
  43a46f:	xor    ecx,ecx
  43a471:	push   ecx
  43a472:	push   ecx
  43a473:	push   ecx
  43a474:	push   ecx
  43a475:	push   ecx
  43a476:	push   ecx
  43a477:	push   ebx
  43a478:	push   esi
  43a479:	push   edi
  43a47a:	mov    esi,edx
  43a47c:	mov    ebx,eax
  43a47e:	xor    eax,eax
  43a480:	push   ebp
  43a481:	push   0x43a62a
  43a486:	push   DWORD PTR fs:[eax]
  43a489:	mov    DWORD PTR fs:[eax],esp
  43a48c:	mov    edx,esi
  43a48e:	mov    eax,ebx
  43a490:	call   0x43a2a8
  43a495:	lea    ecx,[ebp-0x10]
  43a498:	mov    edx,0x43a640
  43a49d:	mov    eax,esi
  43a49f:	call   0x4151a4
  43a4a4:	mov    edx,DWORD PTR [ebp-0x10]
  43a4a7:	lea    eax,[ebx+0x40]
  43a4aa:	call   0x404fdc
  43a4af:	mov    edx,0x43a654
  43a4b4:	mov    eax,esi
  43a4b6:	mov    ecx,DWORD PTR [eax]
  43a4b8:	call   DWORD PTR [ecx+0x54]
  43a4bb:	inc    eax
  43a4bc:	setne  al
  43a4bf:	mov    BYTE PTR [ebx+0x44],al
  43a4c2:	mov    dl,0x1
  43a4c4:	mov    eax,ds:0x412cf0
  43a4c9:	call   0x404070
  43a4ce:	mov    DWORD PTR [ebp-0x8],eax
  43a4d1:	xor    eax,eax
  43a4d3:	push   ebp
  43a4d4:	push   0x43a600
  43a4d9:	push   DWORD PTR fs:[eax]
  43a4dc:	mov    DWORD PTR fs:[eax],esp
  43a4df:	lea    ecx,[ebp-0x4]
  43a4e2:	mov    edx,0x43a664
  43a4e7:	mov    eax,esi
  43a4e9:	call   0x4151a4
  43a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  43a4f1:	call   0x405248
  43a4f6:	test   eax,eax
  43a4f8:	jle    0x43a5dc
  43a4fe:	mov    eax,0x1
  43a503:	mov    edx,DWORD PTR [ebp-0x4]
  43a506:	dec    eax
  43a507:	test   edx,edx
  43a509:	je     0x43a510
  43a50b:	cmp    eax,DWORD PTR [edx-0x4]
  43a50e:	jb     0x43a515
  43a510:	call   0x403f68
  43a515:	inc    eax
  43a516:	cmp    BYTE PTR [edx+eax*1-0x1],0x22
  43a51b:	jne    0x43a5ea
  43a521:	mov    eax,DWORD PTR [ebp-0x4]
  43a524:	call   0x405248
  43a529:	mov    edx,DWORD PTR [ebp-0x4]
  43a52c:	dec    eax
  43a52d:	test   edx,edx
  43a52f:	je     0x43a536
  43a531:	cmp    eax,DWORD PTR [edx-0x4]
  43a534:	jb     0x43a53b
  43a536:	call   0x403f68
  43a53b:	inc    eax
  43a53c:	cmp    BYTE PTR [edx+eax*1-0x1],0x22
  43a541:	jne    0x43a5ea
  43a547:	lea    eax,[ebp-0x14]
  43a54a:	push   eax
  43a54b:	mov    eax,DWORD PTR [ebp-0x4]
  43a54e:	call   0x405248
  43a553:	mov    ecx,eax
  43a555:	sub    ecx,0x2
  43a558:	jno    0x43a55f
  43a55a:	call   0x403f70
  43a55f:	mov    edx,0x2
  43a564:	mov    eax,DWORD PTR [ebp-0x4]
  43a567:	call   0x405480
  43a56c:	mov    edx,DWORD PTR [ebp-0x14]
  43a56f:	mov    eax,DWORD PTR [ebp-0x8]
  43a572:	call   0x415744
  43a577:	mov    eax,DWORD PTR [ebp-0x8]
  43a57a:	mov    edx,DWORD PTR [eax]
  43a57c:	call   DWORD PTR [edx+0x14]
  43a57f:	test   eax,eax
  43a581:	jne    0x43a593
  43a583:	mov    ecx,0x50
  43a588:	xor    edx,edx
  43a58a:	mov    eax,ebx
  43a58c:	call   0x43a66c
  43a591:	jmp    0x43a5ea
  43a593:	mov    eax,DWORD PTR [ebp-0x8]
  43a596:	mov    edx,DWORD PTR [eax]
  43a598:	call   DWORD PTR [edx+0x14]
  43a59b:	sub    eax,0x1
  43a59e:	jno    0x43a5a5
  43a5a0:	call   0x403f70
  43a5a5:	test   eax,eax
  43a5a7:	jl     0x43a5ea
  43a5a9:	inc    eax
  43a5aa:	mov    DWORD PTR [ebp-0xc],eax
  43a5ad:	xor    esi,esi
  43a5af:	lea    ecx,[ebp-0x18]
  43a5b2:	mov    edx,esi
  43a5b4:	mov    eax,DWORD PTR [ebp-0x8]
  43a5b7:	mov    edi,DWORD PTR [eax]
  43a5b9:	call   DWORD PTR [edi+0xc]
  43a5bc:	mov    edx,DWORD PTR [ebp-0x18]
  43a5bf:	mov    eax,ds:0x41be90
  43a5c4:	call   0x41b200
  43a5c9:	mov    ecx,eax
  43a5cb:	mov    edx,esi
  43a5cd:	mov    eax,ebx
  43a5cf:	call   0x43a66c
  43a5d4:	inc    esi
  43a5d5:	dec    DWORD PTR [ebp-0xc]
  43a5d8:	jne    0x43a5af
  43a5da:	jmp    0x43a5ea
  43a5dc:	mov    ecx,0x50
  43a5e1:	xor    edx,edx
  43a5e3:	mov    eax,ebx
  43a5e5:	call   0x43a66c
  43a5ea:	xor    eax,eax
  43a5ec:	pop    edx
  43a5ed:	pop    ecx
  43a5ee:	pop    ecx
  43a5ef:	mov    DWORD PTR fs:[eax],edx
  43a5f2:	push   0x43a607
  43a5f7:	mov    eax,DWORD PTR [ebp-0x8]
  43a5fa:	call   0x4040a0
  43a5ff:	ret    
  43a600:	jmp    0x40481c
  43a605:	jmp    0x43a5f7
  43a607:	xor    eax,eax
  43a609:	pop    edx
  43a60a:	pop    ecx
  43a60b:	pop    ecx
  43a60c:	mov    DWORD PTR fs:[eax],edx
  43a60f:	push   0x43a631
  43a614:	lea    eax,[ebp-0x18]
  43a617:	mov    edx,0x3
  43a61c:	call   0x404fac
  43a621:	lea    eax,[ebp-0x4]
  43a624:	call   0x404f88
  43a629:	ret    
  43a62a:	jmp    0x40481c
  43a62f:	jmp    0x43a614
  43a631:	pop    edi
  43a632:	pop    esi
  43a633:	pop    ebx
  43a634:	mov    esp,ebp
  43a636:	pop    ebp
  43a637:	ret    
  43a638:	(bad)  
  43a639:	(bad)  
  43a63a:	(bad)  
  43a63b:	dec    DWORD PTR [edx]
  43a63d:	add    BYTE PTR [eax],al
  43a63f:	add    BYTE PTR [ebx+0x6f],al
  43a642:	ins    DWORD PTR es:[edi],dx
  43a643:	ins    DWORD PTR es:[edi],dx
  43a644:	outs   dx,BYTE PTR gs:[esi]
  43a646:	je     0x43a69d
  43a648:	push   edx
  43a649:	dec    esp
  43a64a:	add    BYTE PTR [eax],al
  43a64c:	(bad)  
  43a64d:	(bad)  
  43a64e:	(bad)  
  43a64f:	inc    DWORD PTR [edi]
  43a651:	add    BYTE PTR [eax],al
  43a653:	add    BYTE PTR [ecx+ecx*2+0x53],al
  43a657:	inc    ebx
  43a658:	inc    ecx
  43a659:	push   edx
  43a65a:	inc    esp
  43a65b:	add    bh,bh
  43a65d:	(bad)  
  43a65e:	(bad)  
  43a65f:	inc    DWORD PTR [eax+eax*1]
  43a662:	add    BYTE PTR [eax],al
  43a664:	push   eax
  43a665:	outs   dx,DWORD PTR ds:[esi]
  43a666:	jb     0x43a6dc
  43a668:	add    BYTE PTR [eax],al
  43a66a:	add    BYTE PTR [eax],al
  43a66c:	push   ebx
  43a66d:	push   esi
  43a66e:	push   edi
  43a66f:	mov    edi,ecx
  43a671:	mov    esi,edx
  43a673:	mov    ebx,eax
  43a675:	mov    eax,DWORD PTR [ebx+0x48]
  43a678:	call   0x4061fc
  43a67d:	mov    edx,esi
  43a67f:	sub    edx,eax
  43a681:	jno    0x43a688
  43a683:	call   0x403f70
  43a688:	dec    edx
  43a689:	jg     0x43a68f
  43a68b:	test   esi,esi
  43a68d:	jge    0x43a6a5
  43a68f:	mov    ecx,0x43a700
  43a694:	mov    dl,0x1
  43a696:	mov    eax,ds:0x41b94c
  43a69b:	call   0x41bdbc
  43a6a0:	call   0x4048fc
  43a6a5:	mov    eax,DWORD PTR [ebx+0x48]
  43a6a8:	call   0x4061fc
  43a6ad:	mov    edx,esi
  43a6af:	sub    edx,eax
  43a6b1:	jno    0x43a6b8
  43a6b3:	call   0x403f70
  43a6b8:	dec    edx
  43a6b9:	jne    0x43a6de
  43a6bb:	mov    eax,esi
  43a6bd:	add    eax,0x1
  43a6c0:	jno    0x43a6c7
  43a6c2:	call   0x403f70
  43a6c7:	push   eax
  43a6c8:	lea    eax,[ebx+0x48]
  43a6cb:	mov    ecx,0x1
  43a6d0:	mov    edx,DWORD PTR ds:0x439584
  43a6d6:	call   0x4063b0
  43a6db:	add    esp,0x4
  43a6de:	mov    eax,DWORD PTR [ebx+0x48]
  43a6e1:	test   eax,eax
  43a6e3:	je     0x43a6ea
  43a6e5:	cmp    esi,DWORD PTR [eax-0x4]
  43a6e8:	jb     0x43a6ef
  43a6ea:	call   0x403f68
  43a6ef:	mov    DWORD PTR [eax+esi*4],edi
  43a6f2:	pop    edi
  43a6f3:	pop    esi
  43a6f4:	pop    ebx
  43a6f5:	ret    
  43a6f6:	add    BYTE PTR [eax],al
  43a6f8:	(bad)  
  43a6f9:	(bad)  
  43a6fa:	(bad)  
  43a6fb:	call   DWORD PTR [ebx]
  43a6fd:	add    BYTE PTR [eax],al
  43a6ff:	add    BYTE PTR [ecx+0x6e],cl
  43a702:	fs gs js 0x43a726
  43a706:	outs   dx,DWORD PTR ds:[esi]
  43a707:	jne    0x43a77d
  43a709:	and    BYTE PTR [edi+0x66],ch
  43a70c:	and    BYTE PTR [edx+0x61],dh
  43a70f:	outs   dx,BYTE PTR ds:[esi]
  43a710:	addr16 gs cs add bh,bh
  43a715:	(bad)  
  43a716:	(bad)  
  43a717:	inc    DWORD PTR [ebx]
  43a719:	add    BYTE PTR [eax],al
  43a71b:	add    BYTE PTR [ebx+0x75],dl
  43a71e:	outs   dx,BYTE PTR ds:[esi]
  43a71f:	add    bh,bh
  43a721:	(bad)  
  43a722:	(bad)  
  43a723:	inc    DWORD PTR [ebx]
  43a725:	add    BYTE PTR [eax],al
  43a727:	add    BYTE PTR [ebp+0x6f],cl
  43a72a:	outs   dx,BYTE PTR ds:[esi]
  43a72b:	add    bh,bh
  43a72d:	(bad)  
  43a72e:	(bad)  
  43a72f:	inc    DWORD PTR [ebx]
  43a731:	add    BYTE PTR [eax],al
  43a733:	add    BYTE PTR [ebp+esi*2+0x65],dl
  43a737:	add    bh,bh
  43a739:	(bad)  
  43a73a:	(bad)  
  43a73b:	inc    DWORD PTR [ebx]
  43a73d:	add    BYTE PTR [eax],al
  43a73f:	add    BYTE PTR [edi+0x65],dl
  43a742:	fs add bh,bh
  43a745:	(bad)  
  43a746:	(bad)  
  43a747:	inc    DWORD PTR [ebx]
  43a749:	add    BYTE PTR [eax],al
  43a74b:	add    BYTE PTR [eax+ebp*2+0x75],dl
  43a74f:	add    bh,bh
  43a751:	(bad)  
  43a752:	(bad)  
  43a753:	inc    DWORD PTR [ebx]
  43a755:	add    BYTE PTR [eax],al
  43a757:	add    BYTE PTR [esi+0x72],al
  43a75a:	imul   eax,DWORD PTR [eax],0xffffffff
  43a760:	add    eax,DWORD PTR [eax]
  43a762:	add    BYTE PTR [eax],al
  43a764:	push   ebx
  43a765:	popa   
  43a766:	je     0x43a768
  43a768:	(bad)  
  43a769:	(bad)  
  43a76a:	(bad)  
  43a76b:	inc    DWORD PTR [ebx]
  43a76d:	add    BYTE PTR [eax],al
  43a76f:	add    BYTE PTR [edx+0x61],cl
  43a772:	outs   dx,BYTE PTR ds:[esi]
  43a773:	add    bh,bh
  43a775:	(bad)  
  43a776:	(bad)  
  43a777:	inc    DWORD PTR [ebx]
  43a779:	add    BYTE PTR [eax],al
  43a77b:	add    BYTE PTR [esi+0x65],al
  43a77e:	bound  eax,QWORD PTR [eax]
  43a780:	(bad)  
  43a781:	(bad)  
  43a782:	(bad)  
  43a783:	inc    DWORD PTR [ebx]
  43a785:	add    BYTE PTR [eax],al
  43a787:	add    BYTE PTR [ebp+0x61],cl
  43a78a:	jb     0x43a78c
  43a78c:	(bad)  
  43a78d:	(bad)  
  43a78e:	(bad)  
  43a78f:	inc    DWORD PTR [ebx]
  43a791:	add    BYTE PTR [eax],al
  43a793:	add    BYTE PTR [ecx+0x70],al
  43a796:	jb     0x43a798
  43a798:	(bad)  
  43a799:	(bad)  
  43a79a:	(bad)  
  43a79b:	inc    DWORD PTR [ebx]
  43a79d:	add    BYTE PTR [eax],al
  43a79f:	add    BYTE PTR [ebp+0x61],cl
  43a7a2:	jns    0x43a7a4
  43a7a4:	(bad)  
  43a7a5:	(bad)  
  43a7a6:	(bad)  
  43a7a7:	inc    DWORD PTR [ebx]
  43a7a9:	add    BYTE PTR [eax],al
  43a7ab:	add    BYTE PTR [edx+0x75],cl
  43a7ae:	outs   dx,BYTE PTR ds:[esi]
  43a7af:	add    bh,bh
  43a7b1:	(bad)  
  43a7b2:	(bad)  
  43a7b3:	inc    DWORD PTR [ebx]
  43a7b5:	add    BYTE PTR [eax],al
  43a7b7:	add    BYTE PTR [edx+0x75],cl
  43a7ba:	ins    BYTE PTR es:[edi],dx
  43a7bb:	add    bh,bh
  43a7bd:	(bad)  
  43a7be:	(bad)  
  43a7bf:	inc    DWORD PTR [ebx]
  43a7c1:	add    BYTE PTR [eax],al
  43a7c3:	add    BYTE PTR [ecx+0x75],al
  43a7c6:	addr16 add bh,bh
  43a7c9:	(bad)  
  43a7ca:	(bad)  
  43a7cb:	inc    DWORD PTR [ebx]
  43a7cd:	add    BYTE PTR [eax],al
  43a7cf:	add    BYTE PTR [ebx+0x65],dl
  43a7d2:	jo     0x43a7d4
  43a7d4:	(bad)  
  43a7d5:	(bad)  
  43a7d6:	(bad)  
  43a7d7:	inc    DWORD PTR [ebx]
  43a7d9:	add    BYTE PTR [eax],al
  43a7db:	add    BYTE PTR [edi+0x63],cl
  43a7de:	je     0x43a7e0
  43a7e0:	(bad)  
  43a7e1:	(bad)  
  43a7e2:	(bad)  
  43a7e3:	inc    DWORD PTR [ebx]
  43a7e5:	add    BYTE PTR [eax],al
  43a7e7:	add    BYTE PTR [esi+0x6f],cl
  43a7ea:	jbe    0x43a7ec
  43a7ec:	(bad)  
  43a7ed:	(bad)  
  43a7ee:	(bad)  
  43a7ef:	inc    DWORD PTR [ebx]
  43a7f1:	add    BYTE PTR [eax],al
  43a7f3:	add    BYTE PTR [ebp+eiz*2+0x63],al
  43a7f7:	add    BYTE PTR [ebx+0x56],dl
  43a7fa:	test   dl,dl
  43a7fc:	je     0x43a806
  43a7fe:	add    esp,0xfffffff0
  43a801:	call   0x4043ac
  43a806:	mov    ebx,edx
  43a808:	mov    esi,eax
  43a80a:	mov    eax,ds:0x4394a8
  43a80f:	push   eax
  43a810:	xor    edx,edx
  43a812:	mov    eax,esi
  43a814:	call   0x414a08
  43a819:	mov    dl,0x1
  43a81b:	mov    eax,ds:0x4082f4
  43a820:	call   0x40e058
  43a825:	mov    DWORD PTR [esi+0x20],eax
  43a828:	mov    dl,0x1
  43a82a:	mov    eax,ds:0x439290
  43a82f:	call   0x404070
  43a834:	mov    DWORD PTR [esi+0x1c],eax
  43a837:	mov    eax,esi
  43a839:	test   bl,bl
  43a83b:	je     0x43a84c
  43a83d:	call   0x404404
  43a842:	pop    DWORD PTR fs:0x0
  43a849:	add    esp,0xc
  43a84c:	mov    eax,esi
  43a84e:	pop    esi
  43a84f:	pop    ebx
  43a850:	ret    
  43a851:	lea    eax,[eax+0x0]
  43a854:	push   ebx
  43a855:	push   esi
  43a856:	push   edi
  43a857:	push   ebp
  43a858:	call   0x404454
  43a85d:	mov    ebx,edx
  43a85f:	mov    ebp,eax
  43a861:	mov    eax,ebp
  43a863:	call   0x414674
  43a868:	mov    eax,DWORD PTR [ebp+0x1c]
  43a86b:	mov    edx,DWORD PTR [eax]
  43a86d:	call   DWORD PTR [edx+0x14]
  43a870:	mov    esi,eax
  43a872:	sub    esi,0x1
  43a875:	jno    0x43a87c
  43a877:	call   0x403f70
  43a87c:	test   esi,esi
  43a87e:	jl     0x43a896
  43a880:	inc    esi
  43a881:	xor    edi,edi
  43a883:	mov    eax,DWORD PTR [ebp+0x1c]
  43a886:	mov    edx,edi
  43a888:	mov    ecx,DWORD PTR [eax]
  43a88a:	call   DWORD PTR [ecx+0x18]
  43a88d:	call   0x4040a0
  43a892:	inc    edi
  43a893:	dec    esi
  43a894:	jne    0x43a883
  43a896:	lea    edx,[ebp+0x1c]
  43a899:	mov    eax,ds:0x41be90
  43a89e:	call   0x41b14c
  43a8a3:	lea    edx,[ebp+0x20]
  43a8a6:	mov    eax,ds:0x41be90
  43a8ab:	call   0x41b14c
  43a8b0:	mov    edx,ebx
  43a8b2:	and    dl,0xfc
  43a8b5:	mov    eax,ebp
  43a8b7:	call   0x41455c
  43a8bc:	test   bl,bl
  43a8be:	jle    0x43a8c7
  43a8c0:	mov    eax,ebp
  43a8c2:	call   0x4043fc
  43a8c7:	pop    ebp
  43a8c8:	pop    edi
  43a8c9:	pop    esi
  43a8ca:	pop    ebx
  43a8cb:	ret    
  43a8cc:	push   ebp
  43a8cd:	mov    ebp,esp
  43a8cf:	add    esp,0xfffffff8
  43a8d2:	push   ebx
  43a8d3:	push   esi
  43a8d4:	push   edi
  43a8d5:	mov    esi,edx
  43a8d7:	mov    DWORD PTR [ebp-0x4],eax
  43a8da:	mov    dl,0x1
  43a8dc:	mov    eax,DWORD PTR [ebp-0x4]
  43a8df:	call   0x43a9d4
  43a8e4:	mov    edi,eax
  43a8e6:	xor    edx,edx
  43a8e8:	push   ebp
  43a8e9:	push   0x43a9a6
  43a8ee:	push   DWORD PTR fs:[edx]
  43a8f1:	mov    DWORD PTR fs:[edx],esp
  43a8f4:	mov    edx,DWORD PTR [esi+0x10]
  43a8f7:	mov    eax,edi
  43a8f9:	mov    ecx,DWORD PTR [eax]
  43a8fb:	call   DWORD PTR [ecx+0x54]
  43a8fe:	inc    eax
  43a8ff:	jne    0x43a919
  43a901:	mov    dl,0x1
  43a903:	mov    eax,ds:0x439290
  43a908:	call   0x404070
  43a90d:	mov    edx,DWORD PTR [esi+0x10]
  43a910:	mov    ecx,eax
  43a912:	mov    eax,edi
  43a914:	mov    ebx,DWORD PTR [eax]
  43a916:	call   DWORD PTR [ebx+0x3c]
  43a919:	mov    edx,DWORD PTR [esi+0x10]
  43a91c:	mov    eax,edi
  43a91e:	mov    ecx,DWORD PTR [eax]
  43a920:	call   DWORD PTR [ecx+0x54]
  43a923:	mov    edx,eax
  43a925:	mov    eax,edi
  43a927:	mov    ecx,DWORD PTR [eax]
  43a929:	call   DWORD PTR [ecx+0x18]
  43a92c:	mov    edx,DWORD PTR [esi+0x18]
  43a92f:	mov    ecx,DWORD PTR [eax]
  43a931:	call   DWORD PTR [ecx+0x54]
  43a934:	mov    DWORD PTR [ebp-0x8],eax
  43a937:	cmp    DWORD PTR [ebp-0x8],0xffffffff
  43a93b:	jne    0x43a95c
  43a93d:	mov    edx,DWORD PTR [esi+0x10]
  43a940:	mov    eax,edi
  43a942:	mov    ecx,DWORD PTR [eax]
  43a944:	call   DWORD PTR [ecx+0x54]
  43a947:	mov    edx,eax
  43a949:	mov    eax,edi
  43a94b:	mov    ecx,DWORD PTR [eax]
  43a94d:	call   DWORD PTR [ecx+0x18]
  43a950:	mov    edx,DWORD PTR [esi+0x18]
  43a953:	mov    ecx,esi
  43a955:	mov    ebx,DWORD PTR [eax]
  43a957:	call   DWORD PTR [ebx+0x3c]
  43a95a:	jmp    0x43a98e
  43a95c:	mov    edx,DWORD PTR [esi+0x10]
  43a95f:	mov    eax,edi
  43a961:	mov    ecx,DWORD PTR [eax]
  43a963:	call   DWORD PTR [ecx+0x54]
  43a966:	mov    edx,eax
  43a968:	mov    eax,edi
  43a96a:	mov    ecx,DWORD PTR [eax]
  43a96c:	call   DWORD PTR [ecx+0x18]
  43a96f:	mov    edx,DWORD PTR [ebp-0x8]
  43a972:	mov    ecx,DWORD PTR [eax]
  43a974:	call   DWORD PTR [ecx+0x18]
  43a977:	mov    edx,esi
  43a979:	mov    ecx,DWORD PTR [eax]
  43a97b:	call   DWORD PTR [ecx+0x8]
  43a97e:	xor    edx,edx
  43a980:	mov    eax,esi
  43a982:	mov    ecx,DWORD PTR [eax]
  43a984:	call   DWORD PTR [ecx+0x10]
  43a987:	mov    eax,esi
  43a989:	call   0x4040a0
  43a98e:	xor    eax,eax
  43a990:	pop    edx
  43a991:	pop    ecx
  43a992:	pop    ecx
  43a993:	mov    DWORD PTR fs:[eax],edx
  43a996:	push   0x43a9ad
  43a99b:	mov    dl,0x1
  43a99d:	mov    eax,DWORD PTR [ebp-0x4]
  43a9a0:	call   0x43a9f8
  43a9a5:	ret    
  43a9a6:	jmp    0x40481c
  43a9ab:	jmp    0x43a99b
  43a9ad:	pop    edi
  43a9ae:	pop    esi
  43a9af:	pop    ebx
  43a9b0:	pop    ecx
  43a9b1:	pop    ecx
  43a9b2:	pop    ebp
  43a9b3:	ret    
  43a9b4:	mov    ecx,eax
  43a9b6:	mov    dl,0x1
  43a9b8:	mov    eax,ds:0x4394a8
  43a9bd:	call   0x43a088
  43a9c2:	ret    
  43a9c3:	nop
  43a9c4:	mov    ecx,eax
  43a9c6:	mov    dl,0x1
  43a9c8:	mov    eax,ds:0x4395a8
  43a9cd:	call   0x43a41c
  43a9d2:	ret    
  43a9d3:	nop
  43a9d4:	push   ebx
  43a9d5:	mov    ebx,eax
  43a9d7:	sub    dl,0x1
  43a9da:	jb     0x43a9e0
  43a9dc:	je     0x43a9ea
  43a9de:	jmp    0x43a9f2
  43a9e0:	mov    eax,DWORD PTR [ebx+0x20]
  43a9e3:	call   0x40e254
  43a9e8:	jmp    0x43a9f2
  43a9ea:	mov    eax,DWORD PTR [ebx+0x20]
  43a9ed:	call   0x40e158
  43a9f2:	mov    eax,DWORD PTR [ebx+0x1c]
  43a9f5:	pop    ebx
  43a9f6:	ret    
  43a9f7:	nop
  43a9f8:	sub    dl,0x1
  43a9fb:	jb     0x43aa01
  43a9fd:	je     0x43aa0a
  43a9ff:	jmp    0x43aa12
  43aa01:	mov    eax,DWORD PTR [eax+0x20]
  43aa04:	call   0x40e2c4
  43aa09:	ret    
  43aa0a:	mov    eax,DWORD PTR [eax+0x20]
  43aa0d:	call   0x40e204
  43aa12:	ret    
  43aa13:	nop
  43aa14:	push   ebp
  43aa15:	mov    ebp,esp
  43aa17:	xor    eax,eax
  43aa19:	push   ebp
  43aa1a:	push   0x43aa65
  43aa1f:	push   DWORD PTR fs:[eax]
  43aa22:	mov    DWORD PTR fs:[eax],esp
  43aa25:	inc    DWORD PTR ds:0x4738cc
  43aa2b:	jne    0x43aa57
  43aa2d:	mov    eax,0x462844
  43aa32:	mov    ecx,0x7
  43aa37:	mov    edx,DWORD PTR ds:0x401084
  43aa3d:	call   0x405b50
  43aa42:	mov    eax,0x462860
  43aa47:	mov    ecx,0xc
  43aa4c:	mov    edx,DWORD PTR ds:0x401084
  43aa52:	call   0x405b50
  43aa57:	xor    eax,eax
  43aa59:	pop    edx
  43aa5a:	pop    ecx
  43aa5b:	pop    ecx
  43aa5c:	mov    DWORD PTR fs:[eax],edx
  43aa5f:	push   0x43aa6c
  43aa64:	ret    
  43aa65:	jmp    0x40481c
  43aa6a:	jmp    0x43aa64
  43aa6c:	pop    ebp
  43aa6d:	ret    
  43aa6e:	mov    eax,eax
  43aa70:	je     0x43aa1c
  43aa72:	inc    ebx
  43aa73:	add    BYTE PTR [eax],cl
  43aa75:	adc    DWORD PTR [edi+ecx*2+0x6e],edx
  43aa79:	dec    esi
  43aa7a:	gs ja  0x43aac0
  43aa7d:	outs   dx,DWORD PTR ds:[esi]
  43aa7e:	outs   dx,DWORD PTR ds:[esi]
  43aa7f:	imul   ebp,DWORD PTR [ecx+0x65],0x45
  43aa83:	jbe    0x43aaea
  43aa85:	outs   dx,BYTE PTR ds:[esi]
  43aa86:	je     0x43aa88
  43aa88:	add    ecx,DWORD PTR [eax]
  43aa8a:	pop    es
  43aa8b:	inc    ecx
  43aa8c:	push   ebx
  43aa8d:	outs   dx,BYTE PTR gs:[esi]
  43aa8f:	fs gs jb 0x43aa9a
  43aa93:	push   esp
  43aa94:	dec    edi
  43aa95:	bound  ebp,QWORD PTR [edx+0x65]
  43aa98:	arpl   WORD PTR [eax+ecx*1+0x7],si
  43aa9c:	inc    ecx
  43aa9d:	inc    ebx
  43aa9e:	outs   dx,DWORD PTR ds:[esi]
  43aa9f:	outs   dx,DWORD PTR ds:[esi]
  43aaa0:	imul   ebp,DWORD PTR [ecx+0x65],0x10
  43aaa4:	push   esp
  43aaa5:	dec    ecx
  43aaa6:	fs inc ebx
  43aaa8:	outs   dx,DWORD PTR ds:[esi]
  43aaa9:	outs   dx,DWORD PTR ds:[esi]
  43aaaa:	imul   ebp,DWORD PTR [ecx+0x65],0x52
  43aaae:	inc    esi
  43aaaf:	inc    ebx
  43aab0:	xor    dh,BYTE PTR [ecx]
  43aab2:	xor    BYTE PTR [ecx],bh
  43aab4:	add    DWORD PTR [edi],eax
  43aab6:	push   esi
  43aab7:	inc    ecx
  43aab8:	arpl   WORD PTR [ebx+0x65],sp
  43aabb:	jo     0x43ab31
  43aabd:	pop    es
  43aabe:	inc    edx
  43aabf:	outs   dx,DWORD PTR ds:[esi]
  43aac0:	outs   dx,DWORD PTR ds:[esi]
  43aac1:	ins    BYTE PTR es:[edi],dx
  43aac2:	gs popa 
  43aac4:	outs   dx,BYTE PTR ds:[esi]
  43aac5:	add    ah,ah
  43aac7:	adc    BYTE PTR [eax+0x0],al
  43aaca:	pop    eax
  43aacb:	xchg   ebp,eax
  43aacc:	inc    ebx
  43aacd:	add    BYTE PTR [eax],al
  43aacf:	adc    BYTE PTR [eax+0x0],al
  43aad2:	mov    eax,eax
  43aad4:	fsubr  DWORD PTR [edx+0xf080043]
  43aada:	push   esp
  43aadb:	dec    edi
  43aadc:	outs   dx,BYTE PTR ds:[esi]
  43aadd:	dec    ebp
  43aade:	popa   
  43aadf:	outs   dx,BYTE PTR ds:[esi]
  43aae0:	popa   
  43aae1:	addr16 gs jb 0x43ab2a
  43aae5:	jbe    0x43ab4c
  43aae7:	outs   dx,BYTE PTR ds:[esi]
  43aae8:	je     0x43aaea
  43aaea:	add    cl,BYTE PTR [eax]
  43aaec:	pop    es
  43aaed:	inc    ecx
  43aaee:	push   ebx
  43aaef:	outs   dx,BYTE PTR gs:[esi]
  43aaf1:	fs gs jb 0x43aafc
  43aaf5:	push   esp
  43aaf6:	dec    edi
  43aaf7:	bound  ebp,QWORD PTR [edx+0x65]
  43aafa:	arpl   WORD PTR [eax+ecx*1+0x11],si
  43aafe:	inc    ecx
  43aaff:	inc    ebx
  43ab00:	outs   dx,DWORD PTR ds:[esi]
  43ab01:	outs   dx,DWORD PTR ds:[esi]
  43ab02:	imul   ebp,DWORD PTR [ecx+0x65],0x43
  43ab06:	outs   dx,DWORD PTR ds:[esi]
  43ab07:	ins    BYTE PTR es:[edi],dx
  43ab08:	ins    BYTE PTR es:[edi],dx
  43ab09:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43ab0e:	outs   dx,BYTE PTR ds:[esi]
  43ab0f:	or     dl,BYTE PTR [ecx+ecx*2+0x64]
  43ab13:	inc    ebx
  43ab14:	outs   dx,DWORD PTR ds:[esi]
  43ab15:	outs   dx,DWORD PTR ds:[esi]
  43ab16:	imul   ebp,DWORD PTR [ecx+0x65],0x73
  43ab1a:	add    ah,ah
  43ab1c:	adc    BYTE PTR [eax+0x0],al
  43ab1f:	add    al,0x97
  43ab21:	inc    ebx
  43ab22:	add    BYTE PTR [eax+0x43ab70],dl
	...
  43ab34:	enter  0x43ab,0x0
	...
  43ab44:	mov    al,0xab
  43ab46:	inc    ebx
  43ab47:	add    BYTE PTR [eax+eax*1+0x0],cl
  43ab4b:	add    BYTE PTR [ebp+eax*2-0x56e7ffbe],dh
  43ab52:	inc    ecx
  43ab53:	add    ah,bl
  43ab55:	inc    edx
  43ab56:	inc    eax
  43ab57:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43ab5d:	inc    edx
  43ab5e:	inc    eax
  43ab5f:	add    al,bl
  43ab61:	inc    edx
  43ab62:	inc    eax
  43ab63:	add    BYTE PTR [eax],bh
  43ab65:	inc    eax
  43ab66:	inc    eax
  43ab67:	add    BYTE PTR [eax+eax*2+0x40],dl
  43ab6b:	add    BYTE PTR [esp+ebp*4+0x43],ah
  43ab6f:	add    BYTE PTR [eax+0x41],ch
  43ab72:	inc    ecx
  43ab73:	add    BYTE PTR [eax-0x5b],dh
  43ab76:	inc    ecx
  43ab77:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43ab7e:	inc    ecx
  43ab7f:	add    BYTE PTR [eax],dl
  43ab81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ab82:	inc    ecx
  43ab83:	add    BYTE PTR [eax-0x5a],bl
  43ab86:	inc    ecx
  43ab87:	add    BYTE PTR [eax-0x59],dl
  43ab8a:	inc    ecx
  43ab8b:	add    BYTE PTR [eax],dh
  43ab8d:	test   eax,0xa6680041
  43ab92:	inc    ecx
  43ab93:	add    BYTE PTR [eax-0x5a],ah
  43ab96:	inc    ecx
  43ab97:	add    BYTE PTR [eax],bh
  43ab99:	test   eax,0x46bc0041
  43ab9e:	inc    edx
  43ab9f:	add    BYTE PTR [edx+esi*4+0x43],ch
  43aba3:	add    al,bl
  43aba5:	mov    al,0x43
  43aba7:	add    al,dh
  43aba9:	mov    al,0x43
  43abab:	add    BYTE PTR [eax+esi*4+0x54100043],dh
  43abb2:	dec    ecx
  43abb3:	fs inc ebx
  43abb5:	outs   dx,DWORD PTR ds:[esi]
  43abb6:	outs   dx,DWORD PTR ds:[esi]
  43abb7:	imul   ebp,DWORD PTR [ecx+0x65],0x4d
  43abbb:	popa   
  43abbc:	outs   dx,BYTE PTR ds:[esi]
  43abbd:	popa   
  43abbe:	addr16 gs jb 0x43ab4f
  43abc2:	inc    eax
  43abc3:	add    al,cl
  43abc5:	stos   DWORD PTR es:[edi],eax
  43abc6:	inc    ebx
  43abc7:	add    BYTE PTR [edi],al
  43abc9:	adc    BYTE PTR [ecx+ecx*2+0x64],dl
  43abcd:	inc    ebx
  43abce:	outs   dx,DWORD PTR ds:[esi]
  43abcf:	outs   dx,DWORD PTR ds:[esi]
  43abd0:	imul   ebp,DWORD PTR [ecx+0x65],0x4d
  43abd4:	popa   
  43abd5:	outs   dx,BYTE PTR ds:[esi]
  43abd6:	popa   
  43abd7:	addr16 gs jb 0x43ac4b
  43abdb:	stos   DWORD PTR es:[edi],eax
  43abdc:	inc    ebx
  43abdd:	add    BYTE PTR [eax+0x46],cl
  43abe0:	inc    edx
  43abe1:	add    BYTE PTR ds:0x64490f00,al
  43abe7:	inc    ebx
  43abe8:	outs   dx,DWORD PTR ds:[esi]
  43abe9:	outs   dx,DWORD PTR ds:[esi]
  43abea:	imul   ebp,DWORD PTR [ecx+0x65],0x4d
  43abee:	popa   
  43abef:	outs   dx,BYTE PTR ds:[esi]
  43abf0:	popa   
  43abf1:	addr16 gs jb 0x43abf8
  43abf5:	add    ah,dl
  43abf7:	stos   BYTE PTR es:[edi],al
  43abf8:	inc    ebx
  43abf9:	add    BYTE PTR [eax],dh
  43abfb:	add    BYTE PTR [eax],al
  43abfd:	push   DWORD PTR [eax]
  43abff:	add    BYTE PTR [eax],al
  43ac01:	inc    DWORD PTR [ecx]
  43ac03:	add    BYTE PTR [eax],al
  43ac05:	add    BYTE PTR [eax],al
  43ac07:	add    BYTE PTR [eax],al
  43ac09:	add    BYTE PTR [eax],0x0
  43ac0c:	add    BYTE PTR [eax+0x4f080002],al
  43ac12:	outs   dx,BYTE PTR ds:[esi]
  43ac13:	inc    ebx
  43ac14:	jb     0x43ac7b
  43ac16:	popa   
  43ac17:	je     0x43ac7e
  43ac19:	aam    0xaa
  43ac1b:	inc    ebx
  43ac1c:	add    BYTE PTR [eax],bh
  43ac1e:	add    BYTE PTR [eax],al
  43ac20:	(bad)  
  43ac21:	cmp    BYTE PTR [eax],al
  43ac23:	add    bh,bh
  43ac25:	add    DWORD PTR [eax],eax
  43ac27:	add    BYTE PTR [eax],al
  43ac29:	add    BYTE PTR [eax],al
  43ac2b:	add    BYTE PTR [eax-0x80000000],al
  43ac31:	add    eax,DWORD PTR [eax]
  43ac33:	or     DWORD PTR [edi+0x6e],ecx
  43ac36:	inc    esp
  43ac37:	gs jae 0x43acae
  43ac3a:	jb     0x43acab
  43ac3c:	jns    0x43acae
  43ac3e:	stos   BYTE PTR es:[edi],al
  43ac3f:	inc    ebx
  43ac40:	add    BYTE PTR [eax+0x0],al
  43ac43:	add    bh,bh
  43ac45:	inc    eax
  43ac46:	add    BYTE PTR [eax],al
  43ac48:	inc    DWORD PTR [ecx]
  43ac4a:	add    BYTE PTR [eax],al
  43ac4c:	add    BYTE PTR [eax],al
  43ac4e:	add    BYTE PTR [eax],al
  43ac50:	add    BYTE PTR [eax],0x0
  43ac53:	add    BYTE PTR [eax+0x4f0b0004],al
  43ac59:	outs   dx,BYTE PTR ds:[esi]
  43ac5a:	dec    esi
  43ac5b:	gs ja  0x43aca1
  43ac5e:	outs   dx,DWORD PTR ds:[esi]
  43ac5f:	outs   dx,DWORD PTR ds:[esi]
  43ac60:	imul   ebp,DWORD PTR [ecx+0x65],0xffffff90
  43ac64:	push   ebx
  43ac65:	push   esi
  43ac66:	call   0x404454
  43ac6b:	mov    ebx,edx
  43ac6d:	mov    esi,eax
  43ac6f:	mov    eax,esi
  43ac71:	call   0x43b108
  43ac76:	mov    eax,esi
  43ac78:	mov    edx,DWORD PTR [eax]
  43ac7a:	call   DWORD PTR [edx+0x38]
  43ac7d:	lea    edx,[esi+0x48]
  43ac80:	mov    eax,ds:0x41be90
  43ac85:	call   0x41b14c
  43ac8a:	mov    edx,ebx
  43ac8c:	and    dl,0xfc
  43ac8f:	mov    eax,esi
  43ac91:	call   0x41a22c
  43ac96:	test   bl,bl
  43ac98:	jle    0x43aca1
  43ac9a:	mov    eax,esi
  43ac9c:	call   0x4043fc
  43aca1:	pop    esi
  43aca2:	pop    ebx
  43aca3:	ret    
  43aca4:	push   ebp
  43aca5:	mov    ebp,esp
  43aca7:	add    esp,0xffffffdc
  43acaa:	push   ebx
  43acab:	push   esi
  43acac:	push   edi
  43acad:	xor    ebx,ebx
  43acaf:	mov    DWORD PTR [ebp-0x24],ebx
  43acb2:	mov    DWORD PTR [ebp-0x4],ebx
  43acb5:	mov    BYTE PTR [ebp-0xd],cl
  43acb8:	mov    DWORD PTR [ebp-0xc],edx
  43acbb:	mov    DWORD PTR [ebp-0x8],eax
  43acbe:	xor    eax,eax
  43acc0:	push   ebp
  43acc1:	push   0x43aed2
  43acc6:	push   DWORD PTR fs:[eax]
  43acc9:	mov    DWORD PTR fs:[eax],esp
  43accc:	mov    eax,DWORD PTR [ebp-0x8]
  43accf:	call   0x43b108
  43acd4:	lea    eax,[ebp-0x4]
  43acd7:	call   0x404f88
  43acdc:	mov    eax,DWORD PTR [ebp-0x8]
  43acdf:	mov    eax,DWORD PTR [eax+0x48]
  43ace2:	xor    edx,edx
  43ace4:	call   0x43a9d4
  43ace9:	mov    DWORD PTR [ebp-0x1c],eax
  43acec:	xor    eax,eax
  43acee:	push   ebp
  43acef:	push   0x43aea2
  43acf4:	push   DWORD PTR fs:[eax]
  43acf7:	mov    DWORD PTR fs:[eax],esp
  43acfa:	mov    eax,DWORD PTR [ebp-0x1c]
  43acfd:	mov    edx,DWORD PTR [eax]
  43acff:	call   DWORD PTR [edx+0x14]
  43ad02:	test   eax,eax
  43ad04:	jle    0x43ae87
  43ad0a:	mov    dl,0x1
  43ad0c:	mov    eax,ds:0x439290
  43ad11:	call   0x404070
  43ad16:	mov    DWORD PTR [ebp-0x18],eax
  43ad19:	xor    eax,eax
  43ad1b:	push   ebp
  43ad1c:	push   0x43ae80
  43ad21:	push   DWORD PTR fs:[eax]
  43ad24:	mov    DWORD PTR fs:[eax],esp
  43ad27:	mov    eax,DWORD PTR [ebp-0x1c]
  43ad2a:	mov    edx,DWORD PTR [eax]
  43ad2c:	call   DWORD PTR [edx+0x14]
  43ad2f:	sub    eax,0x1
  43ad32:	jno    0x43ad39
  43ad34:	call   0x403f70
  43ad39:	test   eax,eax
  43ad3b:	jl     0x43ae03
  43ad41:	inc    eax
  43ad42:	mov    DWORD PTR [ebp-0x20],eax
  43ad45:	xor    esi,esi
  43ad47:	lea    ecx,[ebp-0x24]
  43ad4a:	mov    edx,esi
  43ad4c:	mov    eax,DWORD PTR [ebp-0x1c]
  43ad4f:	mov    ebx,DWORD PTR [eax]
  43ad51:	call   DWORD PTR [ebx+0xc]
  43ad54:	mov    eax,DWORD PTR [ebp-0x24]
  43ad57:	mov    ebx,DWORD PTR ds:0x46da9c
  43ad5d:	mov    ebx,DWORD PTR [ebx]
  43ad5f:	mov    edx,DWORD PTR [ebp-0xc]
  43ad62:	mov    edx,DWORD PTR [edx+0x18]
  43ad65:	call   ebx
  43ad67:	test   eax,eax
  43ad69:	jle    0x43adf9
  43ad6f:	mov    edx,esi
  43ad71:	mov    eax,DWORD PTR [ebp-0x1c]
  43ad74:	mov    ecx,DWORD PTR [eax]
  43ad76:	call   DWORD PTR [ecx+0x18]
  43ad79:	mov    edx,DWORD PTR ds:0x439290
  43ad7f:	call   0x404250
  43ad84:	mov    DWORD PTR [ebp-0x14],eax
  43ad87:	mov    eax,DWORD PTR [ebp-0x14]
  43ad8a:	mov    edx,DWORD PTR [eax]
  43ad8c:	call   DWORD PTR [edx+0x14]
  43ad8f:	mov    ebx,eax
  43ad91:	sub    ebx,0x1
  43ad94:	jno    0x43ad9b
  43ad96:	call   0x403f70
  43ad9b:	cmp    ebx,0x0
  43ad9e:	jl     0x43adf9
  43ada0:	mov    edx,ebx
  43ada2:	mov    eax,DWORD PTR [ebp-0x14]
  43ada5:	call   0x43987c
  43adaa:	mov    eax,DWORD PTR [eax+0x1c]
  43adad:	mov    edx,DWORD PTR [ebp-0xc]
  43adb0:	mov    edx,DWORD PTR [edx+0x14]
  43adb3:	call   0x405564
  43adb8:	dec    eax
  43adb9:	jne    0x43adf3
  43adbb:	mov    edx,ebx
  43adbd:	mov    eax,DWORD PTR [ebp-0x14]
  43adc0:	call   0x43987c
  43adc5:	mov    edi,eax
  43adc7:	movzx  eax,BYTE PTR [edi+0x20]
  43adcb:	and    al,BYTE PTR [ebp-0xd]
  43adce:	jne    0x43add6
  43add0:	cmp    BYTE PTR [edi+0x20],0x0
  43add4:	jne    0x43adf3
  43add6:	cmp    DWORD PTR [edi+0x24],0x0
  43adda:	je     0x43adf3
  43addc:	mov    edx,ebx
  43adde:	mov    eax,DWORD PTR [ebp-0x14]
  43ade1:	call   0x43987c
  43ade6:	mov    ecx,eax
  43ade8:	mov    edx,DWORD PTR [edi+0x1c]
  43adeb:	mov    eax,DWORD PTR [ebp-0x18]
  43adee:	mov    edi,DWORD PTR [eax]
  43adf0:	call   DWORD PTR [edi+0x3c]
  43adf3:	dec    ebx
  43adf4:	cmp    ebx,0xffffffff
  43adf7:	jne    0x43ada0
  43adf9:	inc    esi
  43adfa:	dec    DWORD PTR [ebp-0x20]
  43adfd:	jne    0x43ad47
  43ae03:	mov    eax,DWORD PTR [ebp-0x18]
  43ae06:	mov    edx,DWORD PTR [eax]
  43ae08:	call   DWORD PTR [edx+0x14]
  43ae0b:	mov    esi,eax
  43ae0d:	sub    esi,0x1
  43ae10:	jno    0x43ae17
  43ae12:	call   0x403f70
  43ae17:	cmp    esi,0x0
  43ae1a:	jl     0x43ae6a
  43ae1c:	mov    eax,DWORD PTR [ebp-0x4]
  43ae1f:	call   0x405248
  43ae24:	test   eax,eax
  43ae26:	jle    0x43ae35
  43ae28:	lea    eax,[ebp-0x4]
  43ae2b:	mov    edx,0x43aeec
  43ae30:	call   0x405254
  43ae35:	push   DWORD PTR [ebp-0x4]
  43ae38:	mov    edx,esi
  43ae3a:	mov    eax,DWORD PTR [ebp-0x18]
  43ae3d:	call   0x43987c
  43ae42:	push   DWORD PTR [eax+0x18]
  43ae45:	push   0x43aef8
  43ae4a:	mov    edx,esi
  43ae4c:	mov    eax,DWORD PTR [ebp-0x18]
  43ae4f:	call   0x43987c
  43ae54:	push   DWORD PTR [eax+0x24]
  43ae57:	lea    eax,[ebp-0x4]
  43ae5a:	mov    edx,0x4
  43ae5f:	call   0x40531c
  43ae64:	dec    esi
  43ae65:	cmp    esi,0xffffffff
  43ae68:	jne    0x43ae1c
  43ae6a:	xor    eax,eax
  43ae6c:	pop    edx
  43ae6d:	pop    ecx
  43ae6e:	pop    ecx
  43ae6f:	mov    DWORD PTR fs:[eax],edx
  43ae72:	push   0x43ae87
  43ae77:	mov    eax,DWORD PTR [ebp-0x18]
  43ae7a:	call   0x4040a0
  43ae7f:	ret    
  43ae80:	jmp    0x40481c
  43ae85:	jmp    0x43ae77
  43ae87:	xor    eax,eax
  43ae89:	pop    edx
  43ae8a:	pop    ecx
  43ae8b:	pop    ecx
  43ae8c:	mov    DWORD PTR fs:[eax],edx
  43ae8f:	push   0x43aea9
  43ae94:	mov    eax,DWORD PTR [ebp-0x8]
  43ae97:	mov    eax,DWORD PTR [eax+0x48]
  43ae9a:	xor    edx,edx
  43ae9c:	call   0x43a9f8
  43aea1:	ret    
  43aea2:	jmp    0x40481c
  43aea7:	jmp    0x43ae94
  43aea9:	mov    eax,DWORD PTR [ebp+0x8]
  43aeac:	mov    edx,DWORD PTR [ebp-0x4]
  43aeaf:	call   0x404fdc
  43aeb4:	xor    eax,eax
  43aeb6:	pop    edx
  43aeb7:	pop    ecx
  43aeb8:	pop    ecx
  43aeb9:	mov    DWORD PTR fs:[eax],edx
  43aebc:	push   0x43aed9
  43aec1:	lea    eax,[ebp-0x24]
  43aec4:	call   0x404f88
  43aec9:	lea    eax,[ebp-0x4]
  43aecc:	call   0x404f88
  43aed1:	ret    
  43aed2:	jmp    0x40481c
  43aed7:	jmp    0x43aec1
  43aed9:	pop    edi
  43aeda:	pop    esi
  43aedb:	pop    ebx
  43aedc:	mov    esp,ebp
  43aede:	pop    ebp
  43aedf:	ret    0x4
  43aee2:	add    BYTE PTR [eax],al
  43aee4:	(bad)  
  43aee5:	(bad)  
  43aee6:	(bad)  
  43aee7:	inc    DWORD PTR [edx]
  43aee9:	add    BYTE PTR [eax],al
  43aeeb:	add    BYTE PTR [ebx],bh
  43aeed:	and    BYTE PTR [eax],al
  43aeef:	add    bh,bh
  43aef1:	(bad)  
  43aef2:	(bad)  
  43aef3:	inc    DWORD PTR [ecx]
  43aef5:	add    BYTE PTR [eax],al
  43aef7:	add    BYTE PTR ds:0x55000000,bh
  43aefd:	mov    ebp,esp
  43aeff:	add    esp,0xfffffff8
  43af02:	push   ebx
  43af03:	push   esi
  43af04:	xor    ebx,ebx
  43af06:	mov    DWORD PTR [ebp-0x8],ebx
  43af09:	mov    DWORD PTR [ebp-0x4],ecx
  43af0c:	mov    ebx,edx
  43af0e:	mov    esi,eax
  43af10:	mov    eax,DWORD PTR [ebp-0x4]
  43af13:	call   0x405408
  43af18:	mov    eax,DWORD PTR [ebp+0x8]
  43af1b:	call   0x405408
  43af20:	xor    eax,eax
  43af22:	push   ebp
  43af23:	push   0x43afca
  43af28:	push   DWORD PTR fs:[eax]
  43af2b:	mov    DWORD PTR fs:[eax],esp
  43af2e:	mov    edx,DWORD PTR [ebp-0x4]
  43af31:	mov    eax,ebx
  43af33:	call   0x439df4
  43af38:	mov    eax,DWORD PTR [ebx+0x10]
  43af3b:	call   0x405248
  43af40:	test   eax,eax
  43af42:	jne    0x43af51
  43af44:	lea    eax,[ebp-0x8]
  43af47:	mov    edx,DWORD PTR [ebp+0x8]
  43af4a:	call   0x405020
  43af4f:	jmp    0x43af5c
  43af51:	lea    eax,[ebp-0x8]
  43af54:	mov    edx,DWORD PTR [ebx+0x10]
  43af57:	call   0x405020
  43af5c:	lea    eax,[ebx+0x10]
  43af5f:	mov    edx,DWORD PTR [ebp-0x8]
  43af62:	call   0x404fdc
  43af67:	mov    edx,DWORD PTR [ebp+0x8]
  43af6a:	mov    eax,ebx
  43af6c:	mov    ecx,DWORD PTR [eax]
  43af6e:	call   DWORD PTR [ecx+0x34]
  43af71:	test   al,al
  43af73:	je     0x43afa0
  43af75:	mov    edx,ebx
  43af77:	mov    eax,esi
  43af79:	mov    ecx,DWORD PTR [eax]
  43af7b:	call   DWORD PTR [ecx+0x3c]
  43af7e:	test   al,al
  43af80:	je     0x43af8e
  43af82:	mov    edx,ebx
  43af84:	mov    eax,DWORD PTR [esi+0x48]
  43af87:	call   0x43a8cc
  43af8c:	jmp    0x43afa7
  43af8e:	xor    edx,edx
  43af90:	mov    eax,ebx
  43af92:	mov    ecx,DWORD PTR [eax]
  43af94:	call   DWORD PTR [ecx+0x10]
  43af97:	mov    eax,ebx
  43af99:	call   0x4040a0
  43af9e:	jmp    0x43afa7
  43afa0:	mov    eax,ebx
  43afa2:	call   0x4040a0
  43afa7:	xor    eax,eax
  43afa9:	pop    edx
  43afaa:	pop    ecx
  43afab:	pop    ecx
  43afac:	mov    DWORD PTR fs:[eax],edx
  43afaf:	push   0x43afd1
  43afb4:	lea    eax,[ebp-0x8]
  43afb7:	mov    edx,0x2
  43afbc:	call   0x404fac
  43afc1:	lea    eax,[ebp+0x8]
  43afc4:	call   0x404f88
  43afc9:	ret    
  43afca:	jmp    0x40481c
  43afcf:	jmp    0x43afb4
  43afd1:	pop    esi
  43afd2:	pop    ebx
  43afd3:	pop    ecx
  43afd4:	pop    ecx
  43afd5:	pop    ebp
  43afd6:	ret    0x4
  43afd9:	lea    eax,[eax+0x0]
  43afdc:	push   ebp
  43afdd:	mov    ebp,esp
  43afdf:	add    esp,0xfffffff8
  43afe2:	push   ebx
  43afe3:	mov    DWORD PTR [ebp-0x8],ecx
  43afe6:	mov    DWORD PTR [ebp-0x4],edx
  43afe9:	mov    ebx,eax
  43afeb:	mov    eax,DWORD PTR [ebp-0x4]
  43afee:	call   0x405408
  43aff3:	mov    eax,DWORD PTR [ebp-0x8]
  43aff6:	call   0x405408
  43affb:	xor    eax,eax
  43affd:	push   ebp
  43affe:	push   0x43b03c
  43b003:	push   DWORD PTR fs:[eax]
  43b006:	mov    DWORD PTR fs:[eax],esp
  43b009:	mov    eax,DWORD PTR [ebx+0x48]
  43b00c:	call   0x43a9b4
  43b011:	mov    edx,DWORD PTR [ebp-0x8]
  43b014:	push   edx
  43b015:	mov    ecx,DWORD PTR [ebp-0x4]
  43b018:	mov    edx,eax
  43b01a:	mov    eax,ebx
  43b01c:	call   0x43aefc
  43b021:	xor    eax,eax
  43b023:	pop    edx
  43b024:	pop    ecx
  43b025:	pop    ecx
  43b026:	mov    DWORD PTR fs:[eax],edx
  43b029:	push   0x43b043
  43b02e:	lea    eax,[ebp-0x8]
  43b031:	mov    edx,0x2
  43b036:	call   0x404fac
  43b03b:	ret    
  43b03c:	jmp    0x40481c
  43b041:	jmp    0x43b02e
  43b043:	pop    ebx
  43b044:	pop    ecx
  43b045:	pop    ecx
  43b046:	pop    ebp
  43b047:	ret    
  43b048:	push   ebp
  43b049:	mov    ebp,esp
  43b04b:	add    esp,0xfffffff8
  43b04e:	push   ebx
  43b04f:	mov    DWORD PTR [ebp-0x8],ecx
  43b052:	mov    DWORD PTR [ebp-0x4],edx
  43b055:	mov    ebx,eax
  43b057:	mov    eax,DWORD PTR [ebp-0x4]
  43b05a:	call   0x405408
  43b05f:	mov    eax,DWORD PTR [ebp-0x8]
  43b062:	call   0x405408
  43b067:	xor    eax,eax
  43b069:	push   ebp
  43b06a:	push   0x43b0a8
  43b06f:	push   DWORD PTR fs:[eax]
  43b072:	mov    DWORD PTR fs:[eax],esp
  43b075:	mov    eax,DWORD PTR [ebx+0x48]
  43b078:	call   0x43a9c4
  43b07d:	mov    edx,DWORD PTR [ebp-0x8]
  43b080:	push   edx
  43b081:	mov    ecx,DWORD PTR [ebp-0x4]
  43b084:	mov    edx,eax
  43b086:	mov    eax,ebx
  43b088:	call   0x43aefc
  43b08d:	xor    eax,eax
  43b08f:	pop    edx
  43b090:	pop    ecx
  43b091:	pop    ecx
  43b092:	mov    DWORD PTR fs:[eax],edx
  43b095:	push   0x43b0af
  43b09a:	lea    eax,[ebp-0x8]
  43b09d:	mov    edx,0x2
  43b0a2:	call   0x404fac
  43b0a7:	ret    
  43b0a8:	jmp    0x40481c
  43b0ad:	jmp    0x43b09a
  43b0af:	pop    ebx
  43b0b0:	pop    ecx
  43b0b1:	pop    ecx
  43b0b2:	pop    ebp
  43b0b3:	ret    
  43b0b4:	push   ebx
  43b0b5:	push   ecx
  43b0b6:	mov    BYTE PTR [esp],0x1
  43b0ba:	cmp    WORD PTR [eax+0x42],0x0
  43b0bf:	je     0x43b0ce
  43b0c1:	push   esp
  43b0c2:	mov    ebx,eax
  43b0c4:	mov    ecx,edx
  43b0c6:	mov    edx,eax
  43b0c8:	mov    eax,DWORD PTR [ebx+0x44]
  43b0cb:	call   DWORD PTR [ebx+0x40]
  43b0ce:	movzx  eax,BYTE PTR [esp]
  43b0d2:	pop    edx
  43b0d3:	pop    ebx
  43b0d4:	ret    
  43b0d5:	lea    eax,[eax+0x0]
  43b0d8:	push   ebx
  43b0d9:	cmp    WORD PTR [eax+0x32],0x0
  43b0de:	je     0x43b0ed
  43b0e0:	mov    ebx,eax
  43b0e2:	mov    ecx,DWORD PTR [eax+0x48]
  43b0e5:	mov    edx,eax
  43b0e7:	mov    eax,DWORD PTR [ebx+0x34]
  43b0ea:	call   DWORD PTR [ebx+0x30]
  43b0ed:	pop    ebx
  43b0ee:	ret    
  43b0ef:	nop
  43b0f0:	push   ebx
  43b0f1:	cmp    WORD PTR [eax+0x3a],0x0
  43b0f6:	je     0x43b105
  43b0f8:	mov    ebx,eax
  43b0fa:	mov    ecx,DWORD PTR [eax+0x48]
  43b0fd:	mov    edx,eax
  43b0ff:	mov    eax,DWORD PTR [ebx+0x3c]
  43b102:	call   DWORD PTR [ebx+0x38]
  43b105:	pop    ebx
  43b106:	ret    
  43b107:	nop
  43b108:	push   ebp
  43b109:	mov    ebp,esp
  43b10b:	add    esp,0xffffffe4
  43b10e:	push   ebx
  43b10f:	push   esi
  43b110:	push   edi
  43b111:	xor    edx,edx
  43b113:	mov    DWORD PTR [ebp-0x4],edx
  43b116:	mov    DWORD PTR [ebp-0x8],eax
  43b119:	xor    eax,eax
  43b11b:	push   ebp
  43b11c:	push   0x43b25e
  43b121:	push   DWORD PTR fs:[eax]
  43b124:	mov    DWORD PTR fs:[eax],esp
  43b127:	mov    eax,DWORD PTR [ebp-0x8]
  43b12a:	mov    eax,DWORD PTR [eax+0x48]
  43b12d:	mov    dl,0x1
  43b12f:	call   0x43a9d4
  43b134:	mov    DWORD PTR [ebp-0x10],eax
  43b137:	xor    eax,eax
  43b139:	push   ebp
  43b13a:	push   0x43b241
  43b13f:	push   DWORD PTR fs:[eax]
  43b142:	mov    DWORD PTR fs:[eax],esp
  43b145:	mov    eax,DWORD PTR [ebp-0x10]
  43b148:	mov    edx,DWORD PTR [eax]
  43b14a:	call   DWORD PTR [edx+0x14]
  43b14d:	test   eax,eax
  43b14f:	jle    0x43b226
  43b155:	mov    eax,DWORD PTR [ebp-0x10]
  43b158:	mov    edx,DWORD PTR [eax]
  43b15a:	call   DWORD PTR [edx+0x14]
  43b15d:	sub    eax,0x1
  43b160:	jno    0x43b167
  43b162:	call   0x403f70
  43b167:	test   eax,eax
  43b169:	jl     0x43b226
  43b16f:	inc    eax
  43b170:	mov    DWORD PTR [ebp-0x14],eax
  43b173:	mov    DWORD PTR [ebp-0xc],0x0
  43b17a:	mov    edx,DWORD PTR [ebp-0xc]
  43b17d:	mov    eax,DWORD PTR [ebp-0x10]
  43b180:	mov    ecx,DWORD PTR [eax]
  43b182:	call   DWORD PTR [ecx+0x18]
  43b185:	mov    edx,DWORD PTR ds:0x439290
  43b18b:	call   0x404250
  43b190:	mov    esi,eax
  43b192:	mov    eax,esi
  43b194:	mov    edx,DWORD PTR [eax]
  43b196:	call   DWORD PTR [edx+0x14]
  43b199:	mov    ebx,eax
  43b19b:	sub    ebx,0x1
  43b19e:	jno    0x43b1a5
  43b1a0:	call   0x403f70
  43b1a5:	cmp    ebx,0x0
  43b1a8:	jl     0x43b21a
  43b1aa:	mov    edx,ebx
  43b1ac:	mov    eax,esi
  43b1ae:	call   0x43987c
  43b1b3:	mov    edx,DWORD PTR [eax+0x14]
  43b1b6:	lea    eax,[ebp-0x4]
  43b1b9:	call   0x405020
  43b1be:	mov    eax,DWORD PTR [ebp-0x4]
  43b1c1:	call   0x405248
  43b1c6:	test   eax,eax
  43b1c8:	jle    0x43b214
  43b1ca:	mov    eax,DWORD PTR [ebp-0x4]
  43b1cd:	call   0x435da0
  43b1d2:	fstp   QWORD PTR [ebp-0x1c]
  43b1d5:	fwait
  43b1d6:	mov    eax,ds:0x41be90
  43b1db:	call   0x41b2d8
  43b1e0:	fcomp  QWORD PTR [ebp-0x1c]
  43b1e3:	fstsw  ax
  43b1e6:	sahf   
  43b1e7:	jbe    0x43b214
  43b1e9:	mov    eax,esi
  43b1eb:	mov    edx,DWORD PTR [eax]
  43b1ed:	call   DWORD PTR [edx+0x14]
  43b1f0:	mov    edi,eax
  43b1f2:	mov    edx,ebx
  43b1f4:	mov    eax,esi
  43b1f6:	call   0x43987c
  43b1fb:	call   0x4040a0
  43b200:	mov    eax,esi
  43b202:	mov    edx,DWORD PTR [eax]
  43b204:	call   DWORD PTR [edx+0x14]
  43b207:	cmp    edi,eax
  43b209:	jne    0x43b214
  43b20b:	mov    edx,ebx
  43b20d:	mov    eax,esi
  43b20f:	mov    ecx,DWORD PTR [eax]
  43b211:	call   DWORD PTR [ecx+0x48]
  43b214:	dec    ebx
  43b215:	cmp    ebx,0xffffffff
  43b218:	jne    0x43b1aa
  43b21a:	inc    DWORD PTR [ebp-0xc]
  43b21d:	dec    DWORD PTR [ebp-0x14]
  43b220:	jne    0x43b17a
  43b226:	xor    eax,eax
  43b228:	pop    edx
  43b229:	pop    ecx
  43b22a:	pop    ecx
  43b22b:	mov    DWORD PTR fs:[eax],edx
  43b22e:	push   0x43b248
  43b233:	mov    eax,DWORD PTR [ebp-0x8]
  43b236:	mov    eax,DWORD PTR [eax+0x48]
  43b239:	mov    dl,0x1
  43b23b:	call   0x43a9f8
  43b240:	ret    
  43b241:	jmp    0x40481c
  43b246:	jmp    0x43b233
  43b248:	xor    eax,eax
  43b24a:	pop    edx
  43b24b:	pop    ecx
  43b24c:	pop    ecx
  43b24d:	mov    DWORD PTR fs:[eax],edx
  43b250:	push   0x43b265
  43b255:	lea    eax,[ebp-0x4]
  43b258:	call   0x404f88
  43b25d:	ret    
  43b25e:	jmp    0x40481c
  43b263:	jmp    0x43b255
  43b265:	pop    edi
  43b266:	pop    esi
  43b267:	pop    ebx
  43b268:	mov    esp,ebp
  43b26a:	pop    ebp
  43b26b:	ret    
  43b26c:	push   ebx
  43b26d:	mov    ebx,eax
  43b26f:	mov    eax,ebx
  43b271:	call   0x4246f8
  43b276:	mov    ecx,ebx
  43b278:	mov    dl,0x1
  43b27a:	mov    eax,ds:0x439684
  43b27f:	call   0x43a7f8
  43b284:	mov    DWORD PTR [ebx+0x48],eax
  43b287:	mov    eax,ebx
  43b289:	mov    edx,DWORD PTR [eax]
  43b28b:	call   DWORD PTR [edx+0x34]
  43b28e:	pop    ebx
  43b28f:	ret    
  43b290:	fdiv   QWORD PTR [edx+0x43]
	...
  43b29e:	add    BYTE PTR [eax],al
  43b2a0:	dec    esp
  43b2a1:	mov    bl,0x43
	...
  43b2af:	add    BYTE PTR [eax],dh
  43b2b1:	mov    bl,0x43
  43b2b3:	add    BYTE PTR [eax],dh
  43b2b5:	add    BYTE PTR [eax],al
  43b2b7:	add    BYTE PTR [ebp+eax*2-0x56e7ffbe],dh
  43b2be:	inc    ecx
  43b2bf:	add    ah,bl
  43b2c1:	inc    edx
  43b2c2:	inc    eax
  43b2c3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43b2c9:	inc    edx
  43b2ca:	inc    eax
  43b2cb:	add    al,bl
  43b2cd:	inc    edx
  43b2ce:	inc    eax
  43b2cf:	add    BYTE PTR [eax],bh
  43b2d1:	inc    eax
  43b2d2:	inc    eax
  43b2d3:	add    BYTE PTR [eax+eax*2+0x40],dl
  43b2d7:	add    BYTE PTR [edx+eiz*4],ch
  43b2da:	inc    ecx
  43b2db:	add    BYTE PTR [eax+0x41],ch
  43b2de:	inc    ecx
  43b2df:	add    BYTE PTR [eax-0x5b],dh
  43b2e2:	inc    ecx
  43b2e3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43b2ea:	inc    ecx
  43b2eb:	add    BYTE PTR [eax],dl
  43b2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b2ee:	inc    ecx
  43b2ef:	add    BYTE PTR [eax-0x5a],bl
  43b2f2:	inc    ecx
  43b2f3:	add    BYTE PTR [eax-0x59],dl
  43b2f6:	inc    ecx
  43b2f7:	add    BYTE PTR [eax],dh
  43b2f9:	test   eax,0xa6680041
  43b2fe:	inc    ecx
  43b2ff:	add    BYTE PTR [eax-0x5a],ah
  43b302:	inc    ecx
  43b303:	add    BYTE PTR [eax],bh
  43b305:	test   eax,0x46bc0041
  43b30a:	inc    edx
  43b30b:	add    al,bh
  43b30d:	inc    esi
  43b30e:	inc    edx
  43b30f:	add    BYTE PTR [eax],bh
  43b311:	xor    eax,DWORD PTR [eax+0x0]
  43b314:	cmp    BYTE PTR [ebx],dh
  43b316:	inc    eax
  43b317:	add    BYTE PTR [eax],bh
  43b319:	xor    eax,DWORD PTR [eax+0x0]
  43b31c:	cmp    BYTE PTR [ebx],dh
  43b31e:	inc    eax
  43b31f:	add    BYTE PTR [esi+esi*4+0x33380043],dh
  43b326:	inc    eax
  43b327:	add    BYTE PTR [eax],bh
  43b329:	xor    eax,DWORD PTR [eax+0x0]
  43b32c:	inc    eax
  43b32d:	mov    ch,0x43
  43b32f:	add    BYTE PTR ds:0x5a644954,dl
  43b335:	dec    esp
  43b336:	imul   esp,DWORD PTR [edx+0x43],0x72706d6f
  43b33d:	gs jae 0x43b3b3
  43b340:	outs   dx,DWORD PTR ds:[esi]
  43b341:	jb     0x43b385
  43b343:	popa   
  43b344:	jae    0x43b3ab
  43b346:	mov    eax,eax
  43b348:	dec    esp
  43b349:	mov    bl,0x43
  43b34b:	add    BYTE PTR [edi],al
  43b34d:	adc    eax,0x5a644954
  43b352:	dec    esp
  43b353:	imul   esp,DWORD PTR [edx+0x43],0x72706d6f
  43b35a:	gs jae 0x43b3d0
  43b35d:	outs   dx,DWORD PTR ds:[esi]
  43b35e:	jb     0x43b3a2
  43b360:	popa   
  43b361:	jae    0x43b3c8
  43b363:	fdiv   QWORD PTR [edx+0x46480043]
  43b369:	inc    edx
  43b36a:	add    BYTE PTR [edx],al
  43b36c:	add    BYTE PTR [ecx+ecx*2],dl
  43b36f:	fs pop edx
  43b371:	dec    esp
  43b372:	imul   esp,DWORD PTR [edx+0x43],0x72706d6f
  43b379:	gs jae 0x43b3ef
  43b37c:	outs   dx,DWORD PTR ds:[esi]
  43b37d:	jb     0x43b3c1
  43b37f:	popa   
  43b380:	jae    0x43b3e7
  43b382:	add    BYTE PTR [eax],al
  43b384:	push   ebp
  43b385:	mov    ebp,esp
  43b387:	push   0x0
  43b389:	push   0x0
  43b38b:	push   0x0
  43b38d:	push   ebx
  43b38e:	push   esi
  43b38f:	mov    ebx,DWORD PTR [ebp+0x8]
  43b392:	add    ebx,0xfffffffc
  43b395:	xor    eax,eax
  43b397:	push   ebp
  43b398:	push   0x43b533
  43b39d:	push   DWORD PTR fs:[eax]
  43b3a0:	mov    DWORD PTR fs:[eax],esp
  43b3a3:	push   0x1
  43b3a5:	lea    eax,[ebp-0x4]
  43b3a8:	mov    ecx,0x1
  43b3ad:	mov    edx,DWORD PTR ds:0x40769c
  43b3b3:	call   0x4063b0
  43b3b8:	add    esp,0x4
  43b3bb:	push   0x2
  43b3bd:	lea    eax,[ebp-0x8]
  43b3c0:	mov    ecx,0x1
  43b3c5:	mov    edx,DWORD PTR ds:0x40769c
  43b3cb:	call   0x4063b0
  43b3d0:	add    esp,0x4
  43b3d3:	push   0x1
  43b3d5:	lea    eax,[ebp-0xc]
  43b3d8:	mov    ecx,0x1
  43b3dd:	mov    edx,DWORD PTR ds:0x40769c
  43b3e3:	call   0x4063b0
  43b3e8:	add    esp,0x4
  43b3eb:	push   0x0
  43b3ed:	push   0x3
  43b3ef:	mov    eax,DWORD PTR [ebx]
  43b3f1:	mov    dl,0x1
  43b3f3:	mov    ecx,DWORD PTR [eax]
  43b3f5:	call   DWORD PTR [ecx+0x18]
  43b3f8:	push   0x1
  43b3fa:	push   0x0
  43b3fc:	lea    ecx,[ebp-0x4]
  43b3ff:	mov    edx,DWORD PTR [ebx]
  43b401:	mov    eax,ds:0x41c1fc
  43b406:	call   0x41c25c
  43b40b:	push   0x0
  43b40d:	push   0x6
  43b40f:	mov    eax,DWORD PTR [ebx]
  43b411:	mov    dl,0x1
  43b413:	mov    ecx,DWORD PTR [eax]
  43b415:	call   DWORD PTR [ecx+0x18]
  43b418:	xor    eax,eax
  43b41a:	mov    edx,DWORD PTR [ebp-0x4]
  43b41d:	test   edx,edx
  43b41f:	je     0x43b426
  43b421:	cmp    eax,DWORD PTR [edx-0x4]
  43b424:	jb     0x43b42b
  43b426:	call   0x403f68
  43b42b:	movzx  eax,BYTE PTR [edx+eax*1]
  43b42f:	and    al,0x4
  43b431:	cmp    al,0x4
  43b433:	jne    0x43b45e
  43b435:	lea    edx,[ebp-0x8]
  43b438:	mov    eax,DWORD PTR [ebx]
  43b43a:	mov    ecx,0x2
  43b43f:	mov    esi,DWORD PTR [eax]
  43b441:	call   DWORD PTR [esi+0xc]
  43b444:	xor    edx,edx
  43b446:	mov    eax,DWORD PTR [ebp-0x8]
  43b449:	call   0x41d688
  43b44e:	movzx  eax,ax
  43b451:	xor    edx,edx
  43b453:	push   edx
  43b454:	push   eax
  43b455:	mov    eax,DWORD PTR [ebx]
  43b457:	mov    dl,0x1
  43b459:	mov    ecx,DWORD PTR [eax]
  43b45b:	call   DWORD PTR [ecx+0x18]
  43b45e:	xor    eax,eax
  43b460:	mov    edx,DWORD PTR [ebp-0x4]
  43b463:	test   edx,edx
  43b465:	je     0x43b46c
  43b467:	cmp    eax,DWORD PTR [edx-0x4]
  43b46a:	jb     0x43b471
  43b46c:	call   0x403f68
  43b471:	movzx  eax,BYTE PTR [edx+eax*1]
  43b475:	and    al,0x8
  43b477:	cmp    al,0x8
  43b479:	jne    0x43b4a3
  43b47b:	lea    edx,[ebp-0xc]
  43b47e:	mov    eax,DWORD PTR [ebx]
  43b480:	mov    ecx,0x1
  43b485:	mov    esi,DWORD PTR [eax]
  43b487:	call   DWORD PTR [esi+0xc]
  43b48a:	xor    eax,eax
  43b48c:	mov    edx,DWORD PTR [ebp-0xc]
  43b48f:	test   edx,edx
  43b491:	je     0x43b498
  43b493:	cmp    eax,DWORD PTR [edx-0x4]
  43b496:	jb     0x43b49d
  43b498:	call   0x403f68
  43b49d:	cmp    BYTE PTR [edx+eax*1],0x0
  43b4a1:	jne    0x43b47b
  43b4a3:	xor    eax,eax
  43b4a5:	mov    edx,DWORD PTR [ebp-0x4]
  43b4a8:	test   edx,edx
  43b4aa:	je     0x43b4b1
  43b4ac:	cmp    eax,DWORD PTR [edx-0x4]
  43b4af:	jb     0x43b4b6
  43b4b1:	call   0x403f68
  43b4b6:	movzx  eax,BYTE PTR [edx+eax*1]
  43b4ba:	and    al,0x10
  43b4bc:	cmp    al,0x10
  43b4be:	jne    0x43b4e8
  43b4c0:	lea    edx,[ebp-0xc]
  43b4c3:	mov    eax,DWORD PTR [ebx]
  43b4c5:	mov    ecx,0x1
  43b4ca:	mov    esi,DWORD PTR [eax]
  43b4cc:	call   DWORD PTR [esi+0xc]
  43b4cf:	xor    eax,eax
  43b4d1:	mov    edx,DWORD PTR [ebp-0xc]
  43b4d4:	test   edx,edx
  43b4d6:	je     0x43b4dd
  43b4d8:	cmp    eax,DWORD PTR [edx-0x4]
  43b4db:	jb     0x43b4e2
  43b4dd:	call   0x403f68
  43b4e2:	cmp    BYTE PTR [edx+eax*1],0x0
  43b4e6:	jne    0x43b4c0
  43b4e8:	xor    eax,eax
  43b4ea:	mov    edx,DWORD PTR [ebp-0x4]
  43b4ed:	test   edx,edx
  43b4ef:	je     0x43b4f6
  43b4f1:	cmp    eax,DWORD PTR [edx-0x4]
  43b4f4:	jb     0x43b4fb
  43b4f6:	call   0x403f68
  43b4fb:	movzx  eax,BYTE PTR [edx+eax*1]
  43b4ff:	and    al,0x2
  43b501:	cmp    al,0x2
  43b503:	jne    0x43b512
  43b505:	push   0x0
  43b507:	push   0x2
  43b509:	mov    eax,DWORD PTR [ebx]
  43b50b:	mov    dl,0x1
  43b50d:	mov    ecx,DWORD PTR [eax]
  43b50f:	call   DWORD PTR [ecx+0x18]
  43b512:	xor    eax,eax
  43b514:	pop    edx
  43b515:	pop    ecx
  43b516:	pop    ecx
  43b517:	mov    DWORD PTR fs:[eax],edx
  43b51a:	push   0x43b53a
  43b51f:	lea    eax,[ebp-0xc]
  43b522:	mov    edx,DWORD PTR ds:0x40769c
  43b528:	mov    ecx,0x3
  43b52d:	call   0x405b50
  43b532:	ret    
  43b533:	jmp    0x40481c
  43b538:	jmp    0x43b51f
  43b53a:	pop    esi
  43b53b:	pop    ebx
  43b53c:	mov    esp,ebp
  43b53e:	pop    ebp
  43b53f:	ret    
  43b540:	push   ebp
  43b541:	mov    ebp,esp
  43b543:	add    esp,0xfffffff8
  43b546:	push   ebx
  43b547:	push   esi
  43b548:	xor    ebx,ebx
  43b54a:	mov    DWORD PTR [ebp-0x8],ebx
  43b54d:	mov    esi,ecx
  43b54f:	mov    DWORD PTR [ebp-0x4],edx
  43b552:	mov    ebx,eax
  43b554:	xor    eax,eax
  43b556:	push   ebp
  43b557:	push   0x43b640
  43b55c:	push   DWORD PTR fs:[eax]
  43b55f:	mov    DWORD PTR fs:[eax],esp
  43b562:	cmp    DWORD PTR [ebp-0x4],0x0
  43b566:	jne    0x43b57c
  43b568:	mov    ecx,0xed
  43b56d:	mov    edx,0x43b658
  43b572:	mov    eax,0x43b6a0
  43b577:	call   0x404eb4
  43b57c:	push   ebp
  43b57d:	call   0x43b384
  43b582:	pop    ecx
  43b583:	push   0xffffffff
  43b585:	push   0xfffffffe
  43b587:	mov    dl,0x1
  43b589:	mov    eax,DWORD PTR [ebp-0x4]
  43b58c:	mov    ecx,DWORD PTR [eax]
  43b58e:	call   DWORD PTR [ecx+0x18]
  43b591:	push   0x2
  43b593:	lea    eax,[ebp-0x8]
  43b596:	mov    ecx,0x1
  43b59b:	mov    edx,DWORD PTR ds:0x40769c
  43b5a1:	call   0x4063b0
  43b5a6:	add    esp,0x4
  43b5a9:	xor    eax,eax
  43b5ab:	mov    edx,DWORD PTR [ebp-0x8]
  43b5ae:	test   edx,edx
  43b5b0:	je     0x43b5b7
  43b5b2:	cmp    eax,DWORD PTR [edx-0x4]
  43b5b5:	jb     0x43b5bc
  43b5b7:	call   0x403f68
  43b5bc:	mov    BYTE PTR [edx+eax*1],0x78
  43b5c0:	mov    eax,0x1
  43b5c5:	mov    edx,DWORD PTR [ebp-0x8]
  43b5c8:	test   edx,edx
  43b5ca:	je     0x43b5d1
  43b5cc:	cmp    eax,DWORD PTR [edx-0x4]
  43b5cf:	jb     0x43b5d6
  43b5d1:	call   0x403f68
  43b5d6:	mov    BYTE PTR [edx+eax*1],0x9c
  43b5da:	push   0x2
  43b5dc:	mov    ecx,DWORD PTR [ebp-0x8]
  43b5df:	mov    edx,DWORD PTR [ebp-0x4]
  43b5e2:	mov    eax,ds:0x41c1fc
  43b5e7:	call   0x41c378
  43b5ec:	push   0xffffffff
  43b5ee:	push   0xfffffffe
  43b5f0:	mov    dl,0x1
  43b5f2:	mov    eax,DWORD PTR [ebp-0x4]
  43b5f5:	mov    ecx,DWORD PTR [eax]
  43b5f7:	call   DWORD PTR [ecx+0x18]
  43b5fa:	mov    eax,DWORD PTR [ebp-0x4]
  43b5fd:	mov    edx,DWORD PTR [eax]
  43b5ff:	call   DWORD PTR [edx]
  43b601:	sub    eax,0x8
  43b604:	sbb    edx,0x0
  43b607:	jno    0x43b60e
  43b609:	call   0x403f70
  43b60e:	push   edx
  43b60f:	push   eax
  43b610:	mov    eax,DWORD PTR [ebp-0x4]
  43b613:	call   0x416468
  43b618:	mov    ecx,esi
  43b61a:	mov    edx,DWORD PTR [ebp-0x4]
  43b61d:	mov    eax,ebx
  43b61f:	mov    ebx,DWORD PTR [eax]
  43b621:	call   DWORD PTR [ebx+0x38]
  43b624:	xor    eax,eax
  43b626:	pop    edx
  43b627:	pop    ecx
  43b628:	pop    ecx
  43b629:	mov    DWORD PTR fs:[eax],edx
  43b62c:	push   0x43b647
  43b631:	lea    eax,[ebp-0x8]
  43b634:	mov    edx,DWORD PTR ds:0x40769c
  43b63a:	call   0x4063bc
  43b63f:	ret    
  43b640:	jmp    0x40481c
  43b645:	jmp    0x43b631
  43b647:	pop    esi
  43b648:	pop    ebx
  43b649:	pop    ecx
  43b64a:	pop    ecx
  43b64b:	pop    ebp
  43b64c:	ret    
  43b64d:	add    BYTE PTR [eax],al
  43b64f:	add    bh,bh
  43b651:	(bad)  
  43b652:	(bad)  
  43b653:	(bad)  
  43b654:	cmp    eax,0x43000000
  43b659:	cmp    bl,BYTE PTR [edx+eiz*2+0x75]
  43b65d:	imul   ebp,DWORD PTR [esp+eiz*2+0x73],0x4170545c
  43b665:	fs outs dx,DWORD PTR fs:[esi]
  43b668:	outs   dx,BYTE PTR ds:[esi]
  43b669:	jae    0x43b6c7
  43b66b:	dec    ecx
  43b66c:	outs   dx,BYTE PTR ds:[esi]
  43b66d:	fs jns 0x43b6be
  43b670:	gs je  0x43b6cf
  43b673:	push   eax
  43b674:	jb     0x43b6e5
  43b676:	je     0x43b6e7
  43b678:	arpl   WORD PTR [edi+0x6c],bp
  43b67b:	jae    0x43b6d9
  43b67d:	dec    ecx
  43b67e:	fs pop edx
  43b680:	dec    esp
  43b681:	imul   esp,DWORD PTR [edx+0x43],0x72706d6f
  43b688:	gs jae 0x43b6fe
  43b68b:	outs   dx,DWORD PTR ds:[esi]
  43b68c:	jb     0x43b6d0
  43b68e:	popa   
  43b68f:	jae    0x43b6f6
  43b691:	cs jo  0x43b6f5
  43b694:	jae    0x43b696
  43b696:	add    BYTE PTR [eax],al
  43b698:	(bad)  
  43b699:	(bad)  
  43b69a:	(bad)  
  43b69b:	call   DWORD PTR [ecx]
  43b69d:	add    BYTE PTR [eax],al
  43b69f:	add    BYTE PTR [ecx+0x73],al
  43b6a2:	jae    0x43b709
  43b6a4:	jb     0x43b71a
  43b6a6:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  43b6ad:	ins    BYTE PTR es:[edi],dx
  43b6ae:	jne    0x43b722
  43b6b0:	add    BYTE PTR gs:[eax],al
  43b6b3:	add    BYTE PTR [ebx+0x56],dl
  43b6b6:	push   edi
  43b6b7:	mov    edi,ecx
  43b6b9:	mov    esi,edx
  43b6bb:	mov    ebx,eax
  43b6bd:	push   0x0
  43b6bf:	push   0xa
  43b6c1:	mov    dl,0x1
  43b6c3:	mov    eax,esi
  43b6c5:	mov    ecx,DWORD PTR [eax]
  43b6c7:	call   DWORD PTR [ecx+0x18]
  43b6ca:	mov    ecx,edi
  43b6cc:	mov    edx,esi
  43b6ce:	mov    eax,ebx
  43b6d0:	mov    ebx,DWORD PTR [eax]
  43b6d2:	call   DWORD PTR [ebx+0x38]
  43b6d5:	pop    edi
  43b6d6:	pop    esi
  43b6d7:	pop    ebx
  43b6d8:	ret    
  43b6d9:	lea    eax,[eax+0x0]
  43b6dc:	sub    BYTE PTR [edi+0x43],dh
	...
  43b6fa:	add    BYTE PTR [eax],al
  43b6fc:	sub    al,0xb7
  43b6fe:	inc    ebx
  43b6ff:	add    BYTE PTR [eax],cl
  43b701:	add    BYTE PTR [eax],al
  43b703:	add    BYTE PTR [eax-0x2fffbff0],dl
  43b709:	inc    edx
  43b70a:	inc    eax
  43b70b:	add    ah,bl
  43b70d:	inc    edx
  43b70e:	inc    eax
  43b70f:	add    al,ah
  43b711:	inc    edx
  43b712:	inc    eax
  43b713:	add    ah,ah
  43b715:	inc    edx
  43b716:	inc    eax
  43b717:	add    al,bl
  43b719:	inc    edx
  43b71a:	inc    eax
  43b71b:	add    BYTE PTR [eax],bh
  43b71d:	inc    eax
  43b71e:	inc    eax
  43b71f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43b723:	add    al,ch
  43b725:	mov    bh,0x43
  43b727:	add    BYTE PTR [edi+esi*4+0x540d0043],ah
  43b72e:	dec    ecx
  43b72f:	fs push esp
  43b731:	push   0x64616572
  43b736:	push   ebx
  43b737:	popa   
  43b738:	gs mov ax,ax
  43b73c:	mov    BYTE PTR [edi+0x43],dh
	...
  43b75a:	add    BYTE PTR [eax],al
  43b75c:	mov    WORD PTR [edi+0xc0043],?
  43b762:	add    BYTE PTR [eax],al
  43b764:	fdiv   QWORD PTR [esi+0x42d00043]
  43b76a:	inc    eax
  43b76b:	add    ah,bl
  43b76d:	inc    edx
  43b76e:	inc    eax
  43b76f:	add    al,ah
  43b771:	inc    edx
  43b772:	inc    eax
  43b773:	add    ah,ah
  43b775:	inc    edx
  43b776:	inc    eax
  43b777:	add    al,bl
  43b779:	inc    edx
  43b77a:	inc    eax
  43b77b:	add    BYTE PTR [eax],bh
  43b77d:	inc    eax
  43b77e:	inc    eax
  43b77f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43b783:	add    al,ch
  43b785:	mov    bh,0x43
  43b787:	add    BYTE PTR [edi+esi*4+0x54140043],ah
  43b78e:	dec    ecx
  43b78f:	fs push esp
  43b791:	push   0x64616572
  43b796:	push   ebx
  43b797:	popa   
  43b798:	gs dec cx
  43b79b:	outs   dx,BYTE PTR ds:[esi]
  43b79c:	je     0x43b803
  43b79e:	addr16 gs jb 0x43b72f
  43b7a2:	inc    eax
  43b7a3:	add    BYTE PTR [ebx+0x56],dl
  43b7a6:	test   dl,dl
  43b7a8:	je     0x43b7b2
  43b7aa:	add    esp,0xfffffff0
  43b7ad:	call   0x4043ac
  43b7b2:	mov    ebx,edx
  43b7b4:	mov    esi,eax
  43b7b6:	xor    edx,edx
  43b7b8:	mov    eax,esi
  43b7ba:	call   0x404070
  43b7bf:	mov    dl,0x1
  43b7c1:	mov    eax,ds:0x41c4bc
  43b7c6:	call   0x41c164
  43b7cb:	mov    DWORD PTR [esi+0x4],eax
  43b7ce:	mov    eax,esi
  43b7d0:	test   bl,bl
  43b7d2:	je     0x43b7e3
  43b7d4:	call   0x404404
  43b7d9:	pop    DWORD PTR fs:0x0
  43b7e0:	add    esp,0xc
  43b7e3:	mov    eax,esi
  43b7e5:	pop    esi
  43b7e6:	pop    ebx
  43b7e7:	ret    
  43b7e8:	push   ebx
  43b7e9:	push   esi
  43b7ea:	call   0x404454
  43b7ef:	mov    ebx,edx
  43b7f1:	mov    esi,eax
  43b7f3:	lea    edx,[esi+0x4]
  43b7f6:	mov    eax,ds:0x41be90
  43b7fb:	call   0x41b14c
  43b800:	mov    edx,ebx
  43b802:	and    dl,0xfc
  43b805:	mov    eax,esi
  43b807:	call   0x404090
  43b80c:	test   bl,bl
  43b80e:	jle    0x43b817
  43b810:	mov    eax,esi
  43b812:	call   0x4043fc
  43b817:	pop    esi
  43b818:	pop    ebx
  43b819:	ret    
  43b81a:	mov    eax,eax
  43b81c:	push   ebp
  43b81d:	mov    ebp,esp
  43b81f:	xor    eax,eax
  43b821:	push   ebp
  43b822:	push   0x43b841
  43b827:	push   DWORD PTR fs:[eax]
  43b82a:	mov    DWORD PTR fs:[eax],esp
  43b82d:	inc    DWORD PTR ds:0x4738d0
  43b833:	xor    eax,eax
  43b835:	pop    edx
  43b836:	pop    ecx
  43b837:	pop    ecx
  43b838:	mov    DWORD PTR fs:[eax],edx
  43b83b:	push   0x43b848
  43b840:	ret    
  43b841:	jmp    0x40481c
  43b846:	jmp    0x43b840
  43b848:	pop    ebp
  43b849:	ret    
  43b84a:	mov    eax,eax
  43b84c:	cwde   
  43b84d:	mov    eax,0x43
  43b852:	add    BYTE PTR [eax],al
  43b854:	add    BYTE PTR [eax],al
  43b856:	add    BYTE PTR [eax],al
  43b858:	mov    eax,0x43b8
  43b85d:	mov    ecx,0x43
	...
  43b86a:	add    BYTE PTR [eax],al
  43b86c:	jmp    0x0:0x280043b8
  43b873:	add    BYTE PTR [eax],bh
  43b875:	sub    DWORD PTR [ecx+0x0],eax
  43b878:	rol    BYTE PTR [edx+0x40],1
  43b87b:	add    ah,bl
  43b87d:	inc    edx
  43b87e:	inc    eax
  43b87f:	add    al,ah
  43b881:	inc    edx
  43b882:	inc    eax
  43b883:	add    ah,ah
  43b885:	inc    edx
  43b886:	inc    eax
  43b887:	add    al,bl
  43b889:	inc    edx
  43b88a:	inc    eax
  43b88b:	add    BYTE PTR [eax],bh
  43b88d:	inc    eax
  43b88e:	inc    eax
  43b88f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43b893:	add    BYTE PTR [ebx+eax*2+0x41],ah
  43b897:	add    BYTE PTR [eax+0x41],ch
  43b89a:	inc    ecx
  43b89b:	add    BYTE PTR [eax+0x41],dh
  43b89e:	inc    ecx
  43b89f:	add    BYTE PTR [eax+eax*2+0x43d00041],al
  43b8a6:	inc    ecx
  43b8a7:	add    BYTE PTR [eax-0x1fffbebc],dh
  43b8ad:	inc    esp
  43b8ae:	inc    ecx
  43b8af:	add    al,bl
  43b8b1:	inc    esp
  43b8b2:	inc    ecx
  43b8b3:	add    BYTE PTR [ebx+eax*2],ch
  43b8b6:	inc    ecx
  43b8b7:	add    BYTE PTR [esi],cl
  43b8b9:	add    BYTE PTR [eax],al
  43b8bb:	add    BYTE PTR [eax],al
  43b8bd:	add    BYTE PTR ds:0x84000000,al
  43b8c3:	adc    BYTE PTR [eax+0x0],al
  43b8c6:	or     al,0x0
  43b8c8:	add    BYTE PTR [eax],al
  43b8ca:	test   BYTE PTR [eax],dl
  43b8cc:	inc    eax
  43b8cd:	add    BYTE PTR [eax],dl
  43b8cf:	add    BYTE PTR [eax],al
  43b8d1:	add    BYTE PTR [eax+edx*1+0x140040],al
  43b8d8:	add    BYTE PTR [eax],al
  43b8da:	test   BYTE PTR [eax],dl
  43b8dc:	inc    eax
  43b8dd:	add    BYTE PTR [eax],bl
  43b8df:	add    BYTE PTR [eax],al
  43b8e1:	add    BYTE PTR [eax+edx*1+0x1c0040],al
  43b8e8:	add    BYTE PTR [eax],al
  43b8ea:	push   cs
  43b8eb:	push   esp
  43b8ec:	dec    ecx
  43b8ed:	fs push ebx
  43b8ef:	push   ebx
  43b8f0:	dec    esp
  43b8f1:	push   edx
  43b8f2:	gs addr16 inc ebp
  43b8f5:	outs   dx,BYTE PTR ds:[esi]
  43b8f6:	je     0x43b96a
  43b8f8:	jns    0x43b887
  43b8fa:	inc    eax
  43b8fb:	add    BYTE PTR [eax],al
  43b8fd:	mov    ecx,0xe070043
  43b902:	push   esp
  43b903:	dec    ecx
  43b904:	fs push ebx
  43b906:	push   ebx
  43b907:	dec    esp
  43b908:	push   edx
  43b909:	gs addr16 inc ebp
  43b90c:	outs   dx,BYTE PTR ds:[esi]
  43b90d:	je     0x43b981
  43b90f:	jns    0x43b8a9
  43b911:	mov    eax,0x29c40043
  43b916:	inc    ecx
  43b917:	add    BYTE PTR [eax],al
  43b919:	add    BYTE PTR ds:0x53536449,al
  43b91f:	dec    esp
  43b920:	add    BYTE PTR [eax],al
  43b922:	mov    eax,eax
  43b924:	jo     0x43b8df
  43b926:	inc    ebx
	...
  43b933:	add    BYTE PTR [ecx+edi*4+0x43],ch
	...
  43b942:	add    BYTE PTR [eax],al
  43b944:	cwde   
  43b945:	mov    ecx,0x180043
  43b94a:	add    BYTE PTR [eax],al
  43b94c:	lock sub DWORD PTR [ecx+0x0],eax
  43b950:	rol    BYTE PTR [edx+0x40],1
  43b953:	add    ah,bl
  43b955:	inc    edx
  43b956:	inc    eax
  43b957:	add    al,ah
  43b959:	inc    edx
  43b95a:	inc    eax
  43b95b:	add    ah,ah
  43b95d:	inc    edx
  43b95e:	inc    eax
  43b95f:	add    al,bl
  43b961:	inc    edx
  43b962:	inc    eax
  43b963:	add    BYTE PTR [eax],bh
  43b965:	inc    eax
  43b966:	inc    eax
  43b967:	add    BYTE PTR [eax+eax*2+0x40],dl
  43b96b:	add    BYTE PTR [ebp+eax*2+0x41],bl
  43b96f:	add    BYTE PTR [eax+0x41],ch
  43b972:	inc    ecx
  43b973:	add    BYTE PTR [eax+0x41],dh
  43b976:	inc    ecx
  43b977:	add    al,cl
  43b979:	inc    ebp
  43b97a:	inc    ecx
  43b97b:	add    ah,bl
  43b97d:	dec    ecx
  43b97e:	inc    ecx
  43b97f:	add    al,ah
  43b981:	dec    ecx
  43b982:	inc    ecx
  43b983:	add    ah,ah
  43b985:	dec    ecx
  43b986:	inc    ecx
  43b987:	add    ah,dl
  43b989:	dec    ecx
  43b98a:	inc    ecx
  43b98b:	add    al,bl
  43b98d:	dec    ecx
  43b98e:	inc    ecx
  43b98f:	add    BYTE PTR [eax+0x46],ah
  43b992:	inc    ecx
  43b993:	add    ah,bl
  43b995:	inc    esi
  43b996:	inc    ecx
  43b997:	add    BYTE PTR [esi],cl
  43b999:	push   esp
  43b99a:	dec    ecx
  43b99b:	fs push ebx
  43b99d:	push   ebx
  43b99e:	dec    esp
  43b99f:	push   edx
  43b9a0:	imul   esi,DWORD PTR gs:[bp+di+0x74],0xac907972
  43b9a9:	mov    ecx,0xe070043
  43b9ae:	push   esp
  43b9af:	dec    ecx
  43b9b0:	fs push ebx
  43b9b2:	push   ebx
  43b9b3:	dec    esp
  43b9b4:	push   edx
  43b9b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0xb9707972
  43b9be:	inc    ebx
  43b9bf:	add    BYTE PTR [edx+ebp*1+0x41],bl
  43b9c6:	add    eax,0x53536449
  43b9cb:	dec    esp
  43b9cc:	add    BYTE PTR [eax],al
  43b9ce:	mov    eax,eax
  43b9d0:	push   ebx
  43b9d1:	push   esi
  43b9d2:	test   dl,dl
  43b9d4:	je     0x43b9de
  43b9d6:	add    esp,0xfffffff0
  43b9d9:	call   0x4043ac
  43b9de:	mov    ebx,edx
  43b9e0:	mov    esi,eax
  43b9e2:	mov    ecx,DWORD PTR ds:0x43b84c
  43b9e8:	xor    edx,edx
  43b9ea:	mov    eax,esi
  43b9ec:	call   0x414510
  43b9f1:	mov    eax,esi
  43b9f3:	test   bl,bl
  43b9f5:	je     0x43ba06
  43b9f7:	call   0x404404
  43b9fc:	pop    DWORD PTR fs:0x0
  43ba03:	add    esp,0xc
  43ba06:	mov    eax,esi
  43ba08:	pop    esi
  43ba09:	pop    ebx
  43ba0a:	ret    
  43ba0b:	nop
  43ba0c:	push   ebp
  43ba0d:	mov    ebp,esp
  43ba0f:	xor    eax,eax
  43ba11:	push   ebp
  43ba12:	push   0x43ba42
  43ba17:	push   DWORD PTR fs:[eax]
  43ba1a:	mov    DWORD PTR fs:[eax],esp
  43ba1d:	inc    DWORD PTR ds:0x4738d8
  43ba23:	jne    0x43ba34
  43ba25:	mov    edx,0x4738d4
  43ba2a:	mov    eax,ds:0x41be90
  43ba2f:	call   0x41b14c
  43ba34:	xor    eax,eax
  43ba36:	pop    edx
  43ba37:	pop    ecx
  43ba38:	pop    ecx
  43ba39:	mov    DWORD PTR fs:[eax],edx
  43ba3c:	push   0x43ba49
  43ba41:	ret    
  43ba42:	jmp    0x40481c
  43ba47:	jmp    0x43ba41
  43ba49:	pop    ebp
  43ba4a:	ret    
  43ba4b:	nop
  43ba4c:	cwde   
  43ba4d:	mov    edx,0x43
  43ba52:	add    BYTE PTR [eax],al
  43ba54:	add    BYTE PTR [eax],al
  43ba56:	add    BYTE PTR [eax],al
  43ba58:	mov    ah,0xba
  43ba5a:	inc    ebx
  43ba5b:	add    BYTE PTR [eax],bl
  43ba5d:	mov    ebx,0x43
  43ba62:	add    BYTE PTR [eax],al
  43ba64:	add    BYTE PTR [eax],al
  43ba66:	add    BYTE PTR [eax],al
  43ba68:	idiv   BYTE PTR [edx-0x4501ffbd]
  43ba6e:	inc    ebx
  43ba6f:	add    BYTE PTR [eax+0x0],ch
  43ba72:	add    BYTE PTR [eax],al
  43ba74:	pushf  
  43ba75:	sub    BYTE PTR [ecx+0x0],al
  43ba78:	rol    BYTE PTR [edx+0x40],1
  43ba7b:	add    ah,bl
  43ba7d:	inc    edx
  43ba7e:	inc    eax
  43ba7f:	add    al,ah
  43ba81:	inc    edx
  43ba82:	inc    eax
  43ba83:	add    ah,ah
  43ba85:	inc    edx
  43ba86:	inc    eax
  43ba87:	add    al,bl
  43ba89:	inc    edx
  43ba8a:	inc    eax
  43ba8b:	add    BYTE PTR [eax],bh
  43ba8d:	inc    eax
  43ba8e:	inc    eax
  43ba8f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43ba93:	add    BYTE PTR [eax-0x3c],dh
  43ba96:	inc    ebx
  43ba97:	add    BYTE PTR [eax+0x700043c4],dh
  43ba9d:	inc    ecx
  43ba9e:	inc    ecx
  43ba9f:	add    BYTE PTR [eax+eax*2-0x3a03ffbf],al
  43baa6:	inc    ebx
  43baa7:	add    al,ch
  43baa9:	leave  
  43baaa:	inc    ebx
  43baab:	add    BYTE PTR [ebp+eax*8+0x43],dh
  43baaf:	add    BYTE PTR [eax],cl
  43bab1:	les    eax,FWORD PTR [ebx+0x0]
  43bab4:	push   cs
  43bab5:	add    BYTE PTR [eax],al
  43bab7:	add    BYTE PTR [eax],al
  43bab9:	add    BYTE PTR [edi],al
  43babb:	add    BYTE PTR [eax],al
  43babd:	add    BYTE PTR [eax+edx*1+0x40040],al
  43bac4:	add    BYTE PTR [eax],al
  43bac6:	test   BYTE PTR [eax],dl
  43bac8:	inc    eax
  43bac9:	add    BYTE PTR [eax+eax*1],cl
  43bacc:	add    BYTE PTR [eax],al
  43bace:	test   BYTE PTR [eax],dl
  43bad0:	inc    eax
  43bad1:	add    BYTE PTR [eax],dl
  43bad3:	add    BYTE PTR [eax],al
  43bad5:	add    BYTE PTR [eax+edx*1+0x140040],al
  43badc:	add    BYTE PTR [eax],al
  43bade:	test   BYTE PTR [eax],dl
  43bae0:	inc    eax
  43bae1:	add    BYTE PTR [eax],bh
  43bae3:	add    BYTE PTR [eax],al
  43bae5:	add    BYTE PTR [eax+edx*1+0x3c0040],al
  43baec:	add    BYTE PTR [eax],al
  43baee:	test   BYTE PTR [eax],dl
  43baf0:	inc    eax
  43baf1:	add    BYTE PTR [eax+0x0],ah
  43baf4:	add    BYTE PTR [eax],al
  43baf6:	add    DWORD PTR [eax],eax
  43baf8:	(bad)  
  43baf9:	inc    DWORD PTR [ecx*8+0x54130043]
  43bb00:	dec    ecx
  43bb01:	fs inc ebp
  43bb03:	outs   dx,BYTE PTR ds:[esi]
  43bb04:	je     0x43bb6f
  43bb06:	je     0x43bb81
  43bb08:	dec    eax
  43bb09:	gs popa 
  43bb0b:	fs gs jb 0x43bb58
  43bb0f:	outs   dx,BYTE PTR ds:[esi]
  43bb10:	outs   dx,WORD PTR ds:[esi]
  43bb12:	mov    eax,eax
  43bb14:	sbb    BYTE PTR [ebx+0x13070043],bh
  43bb1a:	push   esp
  43bb1b:	dec    ecx
  43bb1c:	fs inc ebp
  43bb1e:	outs   dx,BYTE PTR ds:[esi]
  43bb1f:	je     0x43bb8a
  43bb21:	je     0x43bb9c
  43bb23:	dec    eax
  43bb24:	gs popa 
  43bb26:	fs gs jb 0x43bb73
  43bb2a:	outs   dx,BYTE PTR ds:[esi]
  43bb2b:	outs   dx,WORD PTR ds:[esi]
  43bb2d:	cwde   
  43bb2e:	mov    edx,0x29100043
  43bb33:	inc    ecx
  43bb34:	add    BYTE PTR [edi],cl
  43bb36:	add    BYTE PTR [eax],dl
  43bb38:	dec    ecx
  43bb39:	fs dec eax
  43bb3b:	push   esp
  43bb3c:	push   esp
  43bb3d:	push   eax
  43bb3e:	dec    eax
  43bb3f:	gs popa 
  43bb41:	fs gs jb 0x43bb8e
  43bb45:	outs   dx,BYTE PTR ds:[esi]
  43bb46:	outs   dx,WORD PTR ds:[esi]
  43bb48:	sldt   WORD PTR [eax+edx*1+0x40040]
  43bb50:	add    bh,bh
  43bb52:	add    al,0x0
  43bb54:	add    bh,bh
  43bb56:	add    DWORD PTR [eax],eax
  43bb58:	add    BYTE PTR [eax],al
  43bb5a:	add    BYTE PTR [eax],al
  43bb5c:	add    BYTE PTR [eax-0x80000000],al
  43bb62:	add    BYTE PTR [eax],al
  43bb64:	or     al,0x43
  43bb66:	popa   
  43bb67:	arpl   WORD PTR [eax+0x65],bp
  43bb6a:	inc    ebx
  43bb6b:	outs   dx,DWORD PTR ds:[esi]
  43bb6c:	outs   dx,BYTE PTR ds:[esi]
  43bb6d:	je     0x43bbe1
  43bb6f:	outs   dx,DWORD PTR ds:[esi]
  43bb70:	ins    BYTE PTR es:[edi],dx
  43bb71:	test   BYTE PTR [eax],dl
  43bb73:	inc    eax
  43bb74:	add    BYTE PTR [eax+eax*1],cl
  43bb77:	add    bh,bh
  43bb79:	or     al,0x0
  43bb7b:	add    bh,bh
  43bb7d:	add    DWORD PTR [eax],eax
  43bb7f:	add    BYTE PTR [eax],al
  43bb81:	add    BYTE PTR [eax],al
  43bb83:	add    BYTE PTR [eax-0x80000000],al
  43bb89:	add    DWORD PTR [eax],eax
  43bb8b:	or     al,BYTE PTR [ebx+0x6f]
  43bb8e:	outs   dx,BYTE PTR ds:[esi]
  43bb8f:	outs   dx,BYTE PTR ds:[esi]
  43bb90:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43bb95:	outs   dx,BYTE PTR ds:[esi]
  43bb96:	test   BYTE PTR [eax],dl
  43bb98:	inc    eax
  43bb99:	add    BYTE PTR [eax],dl
  43bb9b:	add    BYTE PTR [eax],al
  43bb9d:	call   DWORD PTR [eax]
  43bb9f:	add    BYTE PTR [eax],al
  43bba1:	inc    DWORD PTR [ecx]
  43bba3:	add    BYTE PTR [eax],al
  43bba5:	add    BYTE PTR [eax],al
  43bba7:	add    BYTE PTR [eax],al
  43bba9:	add    BYTE PTR [eax],0x0
  43bbac:	add    BYTE PTR [eax+0x430f0002],al
  43bbb2:	outs   dx,DWORD PTR ds:[esi]
  43bbb3:	outs   dx,BYTE PTR ds:[esi]
  43bbb4:	je     0x43bc1b
  43bbb6:	outs   dx,BYTE PTR ds:[esi]
  43bbb7:	je     0x43bbfe
  43bbb9:	outs   dx,BYTE PTR ds:[esi]
  43bbba:	arpl   WORD PTR [edi+0x64],bp
  43bbbd:	imul   ebp,DWORD PTR [esi+0x67],0x401084
  43bbc4:	adc    al,0x0
  43bbc6:	add    bh,bh
  43bbc8:	adc    al,0x0
  43bbca:	add    bh,bh
  43bbcc:	add    DWORD PTR [eax],eax
  43bbce:	add    BYTE PTR [eax],al
  43bbd0:	add    BYTE PTR [eax],al
  43bbd2:	add    BYTE PTR [eax-0x80000000],al
  43bbd8:	add    eax,DWORD PTR [eax]
  43bbda:	cmovae ebp,DWORD PTR [edi+0x6e]
  43bbde:	je     0x43bc45
  43bbe0:	outs   dx,BYTE PTR ds:[esi]
  43bbe1:	je     0x43bc2f
  43bbe3:	popa   
  43bbe4:	outs   dx,BYTE PTR ds:[esi]
  43bbe5:	addr16 jne 0x43bc49
  43bbe8:	addr16 gs push 0x18004010
  43bbef:	add    BYTE PTR [eax],al
  43bbf1:	push   DWORD PTR [eax+0x10043cc]
  43bbf7:	add    BYTE PTR [eax],al
  43bbf9:	add    BYTE PTR [eax],al
  43bbfb:	add    BYTE PTR [eax],al
  43bbfd:	add    BYTE PTR [eax],0x0
  43bc00:	add    BYTE PTR [eax+0x430d0004],al
  43bc06:	outs   dx,DWORD PTR ds:[esi]
  43bc07:	outs   dx,BYTE PTR ds:[esi]
  43bc08:	je     0x43bc6f
  43bc0a:	outs   dx,BYTE PTR ds:[esi]
  43bc0b:	je     0x43bc59
  43bc0d:	outs   dx,BYTE PTR gs:[esi]
  43bc0f:	addr16 je 0x43bc7a
  43bc12:	push   0x20004010
  43bc17:	add    BYTE PTR [eax],al
  43bc19:	jmp    DWORD PTR [eax]
  43bc1b:	add    BYTE PTR [eax],al
  43bc1d:	inc    DWORD PTR [ecx]
  43bc1f:	add    BYTE PTR [eax],al
  43bc21:	add    BYTE PTR [eax],al
  43bc23:	add    BYTE PTR [eax],al
  43bc25:	add    BYTE PTR [eax],0x0
  43bc28:	add    BYTE PTR [eax+0x430f0005],al
  43bc2e:	outs   dx,DWORD PTR ds:[esi]
  43bc2f:	outs   dx,BYTE PTR ds:[esi]
  43bc30:	je     0x43bc97
  43bc32:	outs   dx,BYTE PTR ds:[esi]
  43bc33:	je     0x43bc87
  43bc35:	popa   
  43bc36:	outs   dx,BYTE PTR ds:[esi]
  43bc37:	addr16 gs inc ebp
  43bc3a:	outs   dx,BYTE PTR ds:[esi]
  43bc3b:	fs push 0x28004010
  43bc41:	add    BYTE PTR [eax],al
  43bc43:	jmp    FWORD PTR [eax]
  43bc45:	add    BYTE PTR [eax],al
  43bc47:	inc    DWORD PTR [ecx]
  43bc49:	add    BYTE PTR [eax],al
  43bc4b:	add    BYTE PTR [eax],al
  43bc4d:	add    BYTE PTR [eax],al
  43bc4f:	add    BYTE PTR [eax],0x0
  43bc52:	add    BYTE PTR [eax+0x43110006],al
  43bc58:	outs   dx,DWORD PTR ds:[esi]
  43bc59:	outs   dx,BYTE PTR ds:[esi]
  43bc5a:	je     0x43bcc1
  43bc5c:	outs   dx,BYTE PTR ds:[esi]
  43bc5d:	je     0x43bcb1
  43bc5f:	popa   
  43bc60:	outs   dx,BYTE PTR ds:[esi]
  43bc61:	addr16 gs push ebx
  43bc64:	je     0x43bcc7
  43bc66:	jb     0x43bcdc
  43bc68:	push   0x30004010
  43bc6d:	add    BYTE PTR [eax],al
  43bc6f:	push   DWORD PTR [eax]
  43bc71:	add    BYTE PTR [eax],al
  43bc73:	inc    DWORD PTR [ecx]
  43bc75:	add    BYTE PTR [eax],al
  43bc77:	add    BYTE PTR [eax],al
  43bc79:	add    BYTE PTR [eax],al
  43bc7b:	add    BYTE PTR [eax],0x0
  43bc7e:	add    BYTE PTR [eax+0x431a0007],al
  43bc84:	outs   dx,DWORD PTR ds:[esi]
  43bc85:	outs   dx,BYTE PTR ds:[esi]
  43bc86:	je     0x43bced
  43bc88:	outs   dx,BYTE PTR ds:[esi]
  43bc89:	je     0x43bcdd
  43bc8b:	popa   
  43bc8c:	outs   dx,BYTE PTR ds:[esi]
  43bc8d:	addr16 gs dec ecx
  43bc90:	outs   dx,BYTE PTR ds:[esi]
  43bc91:	jae    0x43bd07
  43bc93:	popa   
  43bc94:	outs   dx,BYTE PTR ds:[esi]
  43bc95:	arpl   WORD PTR [ebp+0x4c],sp
  43bc98:	outs   dx,BYTE PTR gs:[esi]
  43bc9a:	addr16 je 0x43bd05
  43bc9d:	test   BYTE PTR [eax],dl
  43bc9f:	inc    eax
  43bca0:	add    BYTE PTR [eax],bh
  43bca2:	add    BYTE PTR [eax],al
  43bca4:	(bad)  
  43bca5:	cmp    BYTE PTR [eax],al
  43bca7:	add    bh,bh
  43bca9:	add    DWORD PTR [eax],eax
  43bcab:	add    BYTE PTR [eax],al
  43bcad:	add    BYTE PTR [eax],al
  43bcaf:	add    BYTE PTR [eax-0x80000000],al
  43bcb5:	or     BYTE PTR [eax],al
  43bcb7:	or     eax,DWORD PTR [ebx+0x6f]
  43bcba:	outs   dx,BYTE PTR ds:[esi]
  43bcbb:	je     0x43bd22
  43bcbd:	outs   dx,BYTE PTR ds:[esi]
  43bcbe:	je     0x43bd14
  43bcc0:	jns    0x43bd32
  43bcc2:	test   BYTE PTR gs:[eax],dl
  43bcc5:	inc    eax
  43bcc6:	add    BYTE PTR [eax+eax*1],bh
  43bcc9:	add    bh,bh
  43bccb:	cmp    al,0x0
  43bccd:	add    bh,bh
  43bccf:	add    DWORD PTR [eax],eax
  43bcd1:	add    BYTE PTR [eax],al
  43bcd3:	add    BYTE PTR [eax],al
  43bcd5:	add    BYTE PTR [eax-0x80000000],al
  43bcdb:	or     DWORD PTR [eax],eax
  43bcdd:	push   cs
  43bcde:	inc    ebx
  43bcdf:	outs   dx,DWORD PTR ds:[esi]
  43bce0:	outs   dx,BYTE PTR ds:[esi]
  43bce1:	je     0x43bd48
  43bce3:	outs   dx,BYTE PTR ds:[esi]
  43bce4:	je     0x43bd3c
  43bce6:	gs jb  0x43bd5c
  43bce9:	imul   ebp,DWORD PTR [edi+0x6e],0x436d94
  43bcf0:	inc    eax
  43bcf1:	add    BYTE PTR [eax],al
  43bcf3:	jmp    DWORD PTR [eax+0x10043cc]
  43bcf9:	add    BYTE PTR [eax],al
  43bcfb:	add    BYTE PTR [eax],al
  43bcfd:	add    BYTE PTR [eax],al
  43bcff:	add    BYTE PTR [eax],0x0
  43bd02:	add    BYTE PTR [eax+0x430d000a],al
  43bd08:	jne    0x43bd7d
  43bd0a:	je     0x43bd7b
  43bd0c:	ins    DWORD PTR es:[edi],dx
  43bd0d:	dec    eax
  43bd0e:	gs popa 
  43bd10:	fs gs jb 0x43bd87
  43bd14:	in     al,0x11
  43bd16:	inc    eax
  43bd17:	add    BYTE PTR [eax+0x0],cl
  43bd1a:	add    bh,bh
  43bd1c:	dec    eax
  43bd1d:	add    BYTE PTR [eax],al
  43bd1f:	inc    DWORD PTR [ecx]
  43bd21:	add    BYTE PTR [eax],al
  43bd23:	add    BYTE PTR [eax],al
  43bd25:	add    BYTE PTR [eax],al
  43bd27:	add    BYTE PTR [eax],0x0
  43bd2a:	add    BYTE PTR [eax+0x4404000b],al
  43bd30:	popa   
  43bd31:	je     0x43bd98
  43bd33:	in     al,0x11
  43bd35:	inc    eax
  43bd36:	add    BYTE PTR [eax+0x0],dl
  43bd39:	add    bh,bh
  43bd3b:	push   eax
  43bd3c:	add    BYTE PTR [eax],al
  43bd3e:	inc    DWORD PTR [ecx]
  43bd40:	add    BYTE PTR [eax],al
  43bd42:	add    BYTE PTR [eax],al
  43bd44:	add    BYTE PTR [eax],al
  43bd46:	add    BYTE PTR [eax],0x0
  43bd49:	add    BYTE PTR [eax+0x4507000c],al
  43bd4f:	js     0x43bdc1
  43bd51:	imul   esi,DWORD PTR [edx+0x65],0x4011e473
  43bd58:	add    BYTE PTR [eax+0x0],bl
  43bd5b:	add    bh,bh
  43bd5d:	pop    eax
  43bd5e:	add    BYTE PTR [eax],al
  43bd60:	inc    DWORD PTR [ecx]
  43bd62:	add    BYTE PTR [eax],al
  43bd64:	add    BYTE PTR [eax],al
  43bd66:	add    BYTE PTR [eax],al
  43bd68:	add    BYTE PTR [eax],0x0
  43bd6b:	add    BYTE PTR [eax+0x4c0c000d],al
  43bd71:	popa   
  43bd72:	jae    0x43bde8
  43bd74:	dec    ebp
  43bd75:	outs   dx,DWORD PTR ds:[esi]
  43bd76:	imul   esp,DWORD PTR fs:[esi+0x69],0x10846465
  43bd7e:	inc    eax
  43bd7f:	add    BYTE PTR [eax+0x0],ah
  43bd82:	add    bh,bh
  43bd84:	pusha  
  43bd85:	add    BYTE PTR [eax],al
  43bd87:	inc    DWORD PTR [ecx]
  43bd89:	add    BYTE PTR [eax],al
  43bd8b:	add    BYTE PTR [eax],al
  43bd8d:	add    BYTE PTR [eax],al
  43bd8f:	add    BYTE PTR [eax],0x0
  43bd92:	add    BYTE PTR [eax+0x5006000e],al
  43bd98:	jb     0x43bdfb
  43bd9a:	ins    DWORD PTR es:[di],dx
  43bd9c:	popa   
  43bd9d:	lea    eax,[eax+0x0]
  43bda0:	in     al,dx
  43bda1:	mov    ebp,0x43
  43bda6:	add    BYTE PTR [eax],al
  43bda8:	add    BYTE PTR [eax],al
  43bdaa:	add    BYTE PTR [eax],al
  43bdac:	clc    
  43bdad:	mov    ebp,0xbe380043
  43bdb2:	inc    ebx
	...
  43bdbf:	add    BYTE PTR [edx],bl
  43bdc1:	mov    esi,0x1c0043
  43bdc6:	add    BYTE PTR [eax],al
  43bdc8:	pushf  
  43bdc9:	sub    BYTE PTR [ecx+0x0],al
  43bdcc:	rol    BYTE PTR [edx+0x40],1
  43bdcf:	add    ah,bl
  43bdd1:	inc    edx
  43bdd2:	inc    eax
  43bdd3:	add    al,ah
  43bdd5:	inc    edx
  43bdd6:	inc    eax
  43bdd7:	add    ah,ah
  43bdd9:	inc    edx
  43bdda:	inc    eax
  43bddb:	add    al,bl
  43bddd:	inc    edx
  43bdde:	inc    eax
  43bddf:	add    BYTE PTR [eax],bh
  43bde1:	inc    eax
  43bde2:	inc    eax
  43bde3:	add    BYTE PTR [eax+eax*2+0x40],dl
  43bde7:	add    BYTE PTR [eax-0x33],cl
  43bdea:	inc    ebx
  43bdeb:	add    BYTE PTR [eax+0x700043cd],al
  43bdf1:	inc    ecx
  43bdf2:	inc    ecx
  43bdf3:	add    BYTE PTR [eax+eax*2+0xe0041],al
  43bdfa:	add    BYTE PTR [eax],al
  43bdfc:	add    BYTE PTR [eax],al
  43bdfe:	add    eax,DWORD PTR [eax]
  43be00:	add    BYTE PTR [eax],al
  43be02:	test   BYTE PTR [eax],dl
  43be04:	inc    eax
  43be05:	add    BYTE PTR [eax],cl
  43be07:	add    BYTE PTR [eax],al
  43be09:	add    BYTE PTR [eax+edx*1+0x100040],al
  43be10:	add    BYTE PTR [eax],al
  43be12:	test   BYTE PTR [eax],dl
  43be14:	inc    eax
  43be15:	add    BYTE PTR [eax+eax*1],dl
  43be18:	add    BYTE PTR [eax],al
  43be1a:	push   ss
  43be1b:	push   esp
  43be1c:	dec    ecx
  43be1d:	fs push eax
  43be1f:	jb     0x43be90
  43be21:	js     0x43be9c
  43be23:	inc    ebx
  43be24:	outs   dx,DWORD PTR ds:[esi]
  43be25:	outs   dx,BYTE PTR ds:[esi]
  43be26:	outs   dx,BYTE PTR ds:[esi]
  43be27:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43be2c:	outs   dx,BYTE PTR ds:[esi]
  43be2d:	dec    ecx
  43be2e:	outs   dx,BYTE PTR ds:[esi]
  43be2f:	outs   dx,WORD PTR ds:[esi]
  43be31:	lea    eax,[eax+0x0]
  43be34:	cmp    BYTE PTR [esi+0x16070043],bh
  43be3a:	push   esp
  43be3b:	dec    ecx
  43be3c:	fs push eax
  43be3e:	jb     0x43beaf
  43be40:	js     0x43bebb
  43be42:	inc    ebx
  43be43:	outs   dx,DWORD PTR ds:[esi]
  43be44:	outs   dx,BYTE PTR ds:[esi]
  43be45:	outs   dx,BYTE PTR ds:[esi]
  43be46:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43be4b:	outs   dx,BYTE PTR ds:[esi]
  43be4c:	dec    ecx
  43be4d:	outs   dx,BYTE PTR ds:[esi]
  43be4e:	outs   dx,WORD PTR ds:[esi]
  43be50:	in     al,dx
  43be51:	mov    ebp,0x29100043
  43be56:	inc    ecx
  43be57:	add    BYTE PTR ds:0x64491000,al
  43be5d:	dec    eax
  43be5e:	push   esp
  43be5f:	push   esp
  43be60:	push   eax
  43be61:	dec    eax
  43be62:	gs popa 
  43be64:	fs gs jb 0x43beb1
  43be68:	outs   dx,BYTE PTR ds:[esi]
  43be69:	outs   dx,WORD PTR ds:[esi]
  43be6b:	add    eax,0x40100000
  43be70:	add    BYTE PTR [eax],bl
  43be72:	add    BYTE PTR [eax],al
  43be74:	call   FWORD PTR [eax]
  43be76:	add    BYTE PTR [eax],al
  43be78:	inc    DWORD PTR [ecx]
  43be7a:	add    BYTE PTR [eax],al
  43be7c:	add    BYTE PTR [eax],al
  43be7e:	add    BYTE PTR [eax],al
  43be80:	add    BYTE PTR [eax],0x0
  43be83:	add    BYTE PTR [eax+0x42130000],al
  43be89:	popa   
  43be8a:	jae    0x43bef5
  43be8c:	arpl   WORD PTR [ecx+0x75],ax
  43be8f:	je     0x43bef9
  43be91:	outs   dx,BYTE PTR gs:[esi]
  43be93:	je     0x43befe
  43be95:	arpl   WORD PTR [ecx+0x74],sp
  43be98:	imul   ebp,DWORD PTR [edi+0x6e],0x401084
  43be9f:	or     BYTE PTR [eax],al
  43bea1:	add    bh,bh
  43bea3:	or     BYTE PTR [eax],al
  43bea5:	add    bh,bh
  43bea7:	add    DWORD PTR [eax],eax
  43bea9:	add    BYTE PTR [eax],al
  43beab:	add    BYTE PTR [eax],al
  43bead:	add    BYTE PTR [eax-0x80000000],al
  43beb3:	add    DWORD PTR [eax],eax
  43beb5:	or     eax,0x786f7250
  43beba:	jns    0x43bf0c
  43bebc:	popa   
  43bebd:	jae    0x43bf32
  43bebf:	ja     0x43bf30
  43bec1:	jb     0x43bf27
  43bec3:	cmp    al,0x10
  43bec5:	inc    eax
  43bec6:	add    BYTE PTR [eax+eax*1],cl
  43bec9:	add    bh,bh
  43becb:	adc    al,0xcf
  43becd:	inc    ebx
  43bece:	add    BYTE PTR [ecx],al
  43bed0:	add    BYTE PTR [eax],al
  43bed2:	add    BYTE PTR [eax],al
  43bed4:	add    BYTE PTR [eax],al
  43bed6:	add    BYTE PTR [eax],0x0
  43bed9:	add    BYTE PTR [eax+0x50090002],al
  43bedf:	jb     0x43bf50
  43bee1:	js     0x43bf5c
  43bee3:	push   eax
  43bee4:	outs   dx,DWORD PTR ds:[esi]
  43bee5:	jb     0x43bf5b
  43bee7:	test   BYTE PTR [eax],dl
  43bee9:	inc    eax
  43beea:	add    BYTE PTR [eax],dl
  43beec:	add    BYTE PTR [eax],al
  43beee:	push   DWORD PTR [edi+ecx*8]
  43bef1:	inc    ebx
  43bef2:	add    BYTE PTR [ecx],al
  43bef4:	add    BYTE PTR [eax],al
  43bef6:	add    BYTE PTR [eax],al
  43bef8:	add    BYTE PTR [eax],al
  43befa:	add    BYTE PTR [eax],0x0
  43befd:	add    BYTE PTR [eax+0x500b0003],al
  43bf03:	jb     0x43bf74
  43bf05:	js     0x43bf80
  43bf07:	push   ebx
  43bf08:	gs jb  0x43bf81
  43bf0b:	gs jb  0x43be92
  43bf0e:	adc    BYTE PTR [eax+0x0],al
  43bf11:	adc    al,0x0
  43bf13:	add    bh,bh
  43bf15:	adc    al,0x0
  43bf17:	add    bh,bh
  43bf19:	add    DWORD PTR [eax],eax
  43bf1b:	add    BYTE PTR [eax],al
  43bf1d:	add    BYTE PTR [eax],al
  43bf1f:	add    BYTE PTR [eax-0x80000000],al
  43bf25:	add    al,0x0
  43bf27:	or     eax,0x786f7250
  43bf2c:	jns    0x43bf83
  43bf2e:	jae    0x43bf95
  43bf30:	jb     0x43bfa0
  43bf32:	popa   
  43bf33:	ins    DWORD PTR es:[edi],dx
  43bf34:	lea    eax,gs:[eax+0x0]
  43bf38:	test   BYTE PTR [edi+0x43],bh
  43bf3e:	add    BYTE PTR [eax],al
  43bf40:	add    BYTE PTR [eax],al
  43bf42:	add    BYTE PTR [eax],al
  43bf44:	mov    al,ds:0x2c0043bf
  43bf49:	rol    BYTE PTR [ebx+0x0],0x0
	...
  43bf55:	add    BYTE PTR [eax],al
  43bf57:	add    BYTE PTR [edx],dl
  43bf59:	rol    BYTE PTR [ebx+0x0],0xa4
  43bf5d:	add    BYTE PTR [eax],al
  43bf5f:	add    BYTE PTR [edx+edi*4+0x43],cl
  43bf63:	add    al,dl
  43bf65:	inc    edx
  43bf66:	inc    eax
  43bf67:	add    ah,bl
  43bf69:	inc    edx
  43bf6a:	inc    eax
  43bf6b:	add    al,ah
  43bf6d:	inc    edx
  43bf6e:	inc    eax
  43bf6f:	add    ah,ah
  43bf71:	inc    edx
  43bf72:	inc    eax
  43bf73:	add    al,bl
  43bf75:	inc    edx
  43bf76:	inc    eax
  43bf77:	add    BYTE PTR [eax],bh
  43bf79:	inc    eax
  43bf7a:	inc    eax
  43bf7b:	add    BYTE PTR [eax+eax*2+0x40],dl
  43bf7f:	add    BYTE PTR [eax-0x6fffbc2a],al
  43bf85:	rol    DWORD PTR [ebx+0x0],1
  43bf88:	jo     0x43bfcb
  43bf8a:	inc    ecx
  43bf8b:	add    BYTE PTR [eax+eax*2-0x309bffbf],al
  43bf92:	inc    ebx
  43bf93:	add    al,dh
  43bf95:	rol    BYTE PTR [ebx+0x0],cl
  43bf98:	rol    BYTE PTR fs:[ebx+0x0],cl
  43bf9c:	or     ah,al
  43bf9e:	inc    ebx
  43bf9f:	add    BYTE PTR [esi],cl
  43bfa1:	add    BYTE PTR [eax],al
  43bfa3:	add    BYTE PTR [eax],al
  43bfa5:	add    BYTE PTR ds:0x84000000,cl
  43bfab:	adc    BYTE PTR [eax+0x0],al
  43bfae:	push   0x84000000
  43bfb3:	adc    BYTE PTR [eax+0x0],al
  43bfb6:	ins    BYTE PTR es:[edi],dx
  43bfb7:	add    BYTE PTR [eax],al
  43bfb9:	add    BYTE PTR [eax+edx*1+0x700040],al
  43bfc0:	add    BYTE PTR [eax],al
  43bfc2:	test   BYTE PTR [eax],dl
  43bfc4:	inc    eax
  43bfc5:	add    BYTE PTR [eax+eax*1+0x0],dh
  43bfc9:	add    BYTE PTR [eax+edx*1+0x780040],al
  43bfd0:	add    BYTE PTR [eax],al
  43bfd2:	test   BYTE PTR [eax],dl
  43bfd4:	inc    eax
  43bfd5:	add    BYTE PTR [eax+eax*1+0x0],bh
  43bfd9:	add    BYTE PTR [eax+edx*1+0x800040],al
  43bfe0:	add    BYTE PTR [eax],al
  43bfe2:	test   BYTE PTR [eax],dl
  43bfe4:	inc    eax
  43bfe5:	add    BYTE PTR [eax+eax*1+0x10840000],al
  43bfec:	inc    eax
  43bfed:	add    BYTE PTR [eax-0x7c000000],cl
  43bff3:	adc    BYTE PTR [eax+0x0],al
  43bff6:	mov    WORD PTR [eax],es
  43bff8:	add    BYTE PTR [eax],al
  43bffa:	test   BYTE PTR [eax],dl
  43bffc:	inc    eax
  43bffd:	add    BYTE PTR [eax-0x7c000000],dl
  43c003:	adc    BYTE PTR [eax+0x0],al
  43c006:	xchg   esp,eax
  43c007:	add    BYTE PTR [eax],al
  43c009:	add    BYTE PTR [eax+edx*1+0x980040],al
  43c010:	add    BYTE PTR [eax],al
  43c012:	adc    al,0x54
  43c014:	dec    ecx
  43c015:	fs push edx
  43c017:	gs jno 0x43c08f
  43c01a:	gs jae 0x43c091
  43c01d:	dec    eax
  43c01e:	gs popa 
  43c020:	fs gs jb 0x43c06d
  43c024:	outs   dx,BYTE PTR ds:[esi]
  43c025:	outs   dx,WORD PTR ds:[esi]
  43c027:	nop
  43c028:	sub    al,0xc0
  43c02a:	inc    ebx
  43c02b:	add    BYTE PTR [edi],al
  43c02d:	adc    al,0x54
  43c02f:	dec    ecx
  43c030:	fs push edx
  43c032:	gs jno 0x43c0aa
  43c035:	gs jae 0x43c0ac
  43c038:	dec    eax
  43c039:	gs popa 
  43c03b:	fs gs jb 0x43c088
  43c03f:	outs   dx,BYTE PTR ds:[esi]
  43c040:	outs   dx,WORD PTR ds:[esi]
  43c042:	test   BYTE PTR [edi-0x44ebffbd],bh
  43c048:	inc    ebx
  43c049:	add    BYTE PTR [eax+eax*1],bl
  43c04c:	adc    BYTE PTR [ecx+0x64],cl
  43c04f:	dec    eax
  43c050:	push   esp
  43c051:	push   esp
  43c052:	push   eax
  43c053:	dec    eax
  43c054:	gs popa 
  43c056:	fs gs jb 0x43c0a3
  43c05a:	outs   dx,BYTE PTR ds:[esi]
  43c05b:	outs   dx,WORD PTR ds:[esi]
  43c05d:	or     eax,0x40108400
  43c062:	add    BYTE PTR [eax+0x0],ch
  43c065:	add    bh,bh
  43c067:	push   0x1ff0000
  43c06c:	add    BYTE PTR [eax],al
  43c06e:	add    BYTE PTR [eax],al
  43c070:	add    BYTE PTR [eax],al
  43c072:	add    BYTE PTR [eax],0x0
  43c075:	add    BYTE PTR [eax+0x4106000f],al
  43c07b:	arpl   WORD PTR [ebx+0x65],sp
  43c07e:	jo     0x43c0f4
  43c080:	test   BYTE PTR [eax],dl
  43c082:	inc    eax
  43c083:	add    BYTE PTR [eax+eax*1+0x0],ch
  43c087:	jmp    FWORD PTR [eax+eax*1+0x0]
  43c08b:	inc    DWORD PTR [ecx]
  43c08d:	add    BYTE PTR [eax],al
  43c08f:	add    BYTE PTR [eax],al
  43c091:	add    BYTE PTR [eax],al
  43c093:	add    BYTE PTR [eax],0x0
  43c096:	add    BYTE PTR [eax+0x410d0010],al
  43c09c:	arpl   WORD PTR [ebx+0x65],sp
  43c09f:	jo     0x43c115
  43c0a1:	inc    ebx
  43c0a2:	push   0x65537261
  43c0a7:	je     0x43c02d
  43c0a9:	adc    BYTE PTR [eax+0x0],al
  43c0ac:	jo     0x43c0ae
  43c0ae:	add    bh,bh
  43c0b0:	jo     0x43c0b2
  43c0b2:	add    bh,bh
  43c0b4:	add    DWORD PTR [eax],eax
  43c0b6:	add    BYTE PTR [eax],al
  43c0b8:	add    BYTE PTR [eax],al
  43c0ba:	add    BYTE PTR [eax-0x80000000],al
  43c0c0:	adc    DWORD PTR [eax],eax
  43c0c2:	push   cs
  43c0c3:	inc    ecx
  43c0c4:	arpl   WORD PTR [ebx+0x65],sp
  43c0c7:	jo     0x43c13d
  43c0c9:	inc    ebp
  43c0ca:	outs   dx,BYTE PTR ds:[esi]
  43c0cb:	arpl   WORD PTR [edi+0x64],bp
  43c0ce:	imul   ebp,DWORD PTR [esi+0x67],0x401084
  43c0d5:	je     0x43c0d7
  43c0d7:	add    bh,bh
  43c0d9:	je     0x43c0db
  43c0db:	add    bh,bh
  43c0dd:	add    DWORD PTR [eax],eax
  43c0df:	add    BYTE PTR [eax],al
  43c0e1:	add    BYTE PTR [eax],al
  43c0e3:	add    BYTE PTR [eax-0x80000000],al
  43c0e9:	adc    al,BYTE PTR [eax]
  43c0eb:	push   cs
  43c0ec:	inc    ecx
  43c0ed:	arpl   WORD PTR [ebx+0x65],sp
  43c0f0:	jo     0x43c166
  43c0f2:	dec    esp
  43c0f3:	popa   
  43c0f4:	outs   dx,BYTE PTR ds:[esi]
  43c0f5:	addr16 jne 0x43c159
  43c0f8:	add    BYTE PTR gs:[bx+si],dl
  43c0fc:	inc    eax
  43c0fd:	add    BYTE PTR [eax+eax*1+0x9cff00],bl
  43c104:	add    bh,bh
  43c106:	add    DWORD PTR [eax],eax
  43c108:	add    BYTE PTR [eax],al
  43c10a:	add    BYTE PTR [eax],al
  43c10c:	add    BYTE PTR [eax-0x80000000],al
  43c112:	adc    eax,DWORD PTR [eax]
  43c114:	adc    eax,DWORD PTR [edx+0x61]
  43c117:	jae    0x43c182
  43c119:	arpl   WORD PTR [ecx+0x75],ax
  43c11c:	je     0x43c186
  43c11e:	outs   dx,BYTE PTR gs:[esi]
  43c120:	je     0x43c18b
  43c122:	arpl   WORD PTR [ecx+0x74],sp
  43c125:	imul   ebp,DWORD PTR [edi+0x6e],0x401084
  43c12c:	nop
  43c12d:	add    BYTE PTR [eax],al
  43c12f:	call   DWORD PTR [eax+0x1ff0000]
  43c135:	add    BYTE PTR [eax],al
  43c137:	add    BYTE PTR [eax],al
  43c139:	add    BYTE PTR [eax],al
  43c13b:	add    BYTE PTR [eax],0x0
  43c13e:	add    BYTE PTR [eax+0x48040014],al
  43c144:	outs   dx,DWORD PTR ds:[esi]
  43c145:	jae    0x43c1bb
  43c147:	test   BYTE PTR [eax],dl
  43c149:	inc    eax
  43c14a:	add    BYTE PTR [eax+eax*1+0x0],bh
  43c14e:	(bad)  
  43c14f:	jl     0x43c151
  43c151:	add    bh,bh
  43c153:	add    DWORD PTR [eax],eax
  43c155:	add    BYTE PTR [eax],al
  43c157:	add    BYTE PTR [eax],al
  43c159:	add    BYTE PTR [eax-0x80000000],al
  43c15f:	adc    eax,0x72460400
  43c164:	outs   dx,DWORD PTR ds:[esi]
  43c165:	ins    DWORD PTR es:[edi],dx
  43c166:	test   BYTE PTR [eax],dl
  43c168:	inc    eax
  43c169:	add    BYTE PTR [eax-0x7f010000],al
  43c16f:	add    BYTE PTR [eax],al
  43c171:	inc    DWORD PTR [ecx]
  43c173:	add    BYTE PTR [eax],al
  43c175:	add    BYTE PTR [eax],al
  43c177:	add    BYTE PTR [eax],al
  43c179:	add    BYTE PTR [eax],0x0
  43c17c:	add    BYTE PTR [eax+0x50080016],al
  43c182:	popa   
  43c183:	jae    0x43c1f8
  43c185:	ja     0x43c1f6
  43c187:	jb     0x43c1ed
  43c189:	test   BYTE PTR [eax],dl
  43c18b:	inc    eax
  43c18c:	add    BYTE PTR [eax+eax*1+0x84ff00],al
  43c193:	add    bh,bh
  43c195:	add    DWORD PTR [eax],eax
  43c197:	add    BYTE PTR [eax],al
  43c199:	add    BYTE PTR [eax],al
  43c19b:	add    BYTE PTR [eax-0x80000000],al
  43c1a1:	pop    ss
  43c1a2:	add    BYTE PTR [edi],al
  43c1a4:	push   edx
  43c1a5:	gs data16 gs jb 0x43c20f
  43c1aa:	jb     0x43c130
  43c1ac:	adc    BYTE PTR [eax+0x0],al
  43c1af:	mov    BYTE PTR [eax],al
  43c1b1:	add    bh,bh
  43c1b3:	mov    BYTE PTR [eax],al
  43c1b5:	add    bh,bh
  43c1b7:	add    DWORD PTR [eax],eax
  43c1b9:	add    BYTE PTR [eax],al
  43c1bb:	add    BYTE PTR [eax],al
  43c1bd:	add    BYTE PTR [eax-0x80000000],al
  43c1c3:	sbb    BYTE PTR [eax],al
  43c1c5:	or     DWORD PTR [ebp+0x73],edx
  43c1c8:	gs jb  0x43c20c
  43c1cb:	outs   dx,BYTE PTR gs:[si]
  43c1ce:	je     0x43c154
  43c1d0:	adc    BYTE PTR [eax+0x0],al
  43c1d3:	mov    WORD PTR [eax],es
  43c1d5:	add    bh,bh
  43c1d7:	mov    WORD PTR [eax],es
  43c1d9:	add    bh,bh
  43c1db:	add    DWORD PTR [eax],eax
  43c1dd:	add    BYTE PTR [eax],al
  43c1df:	add    BYTE PTR [eax],al
  43c1e1:	add    BYTE PTR [eax-0x80000000],al
  43c1e7:	sbb    DWORD PTR [eax],eax
  43c1e9:	or     BYTE PTR [ebp+0x73],dl
  43c1ec:	gs jb  0x43c25d
  43c1ef:	popa   
  43c1f0:	ins    DWORD PTR es:[edi],dx
  43c1f1:	test   BYTE PTR gs:[eax],dl
  43c1f4:	inc    eax
  43c1f5:	add    BYTE PTR [eax+eax*1+0x94ff00],dl
  43c1fc:	add    bh,bh
  43c1fe:	add    DWORD PTR [eax],eax
  43c200:	add    BYTE PTR [eax],al
  43c202:	add    BYTE PTR [eax],al
  43c204:	add    BYTE PTR [eax-0x80000000],al
  43c20a:	sbb    al,BYTE PTR [eax]
  43c20c:	(bad)  
  43c20e:	jb     0x43c27f
  43c210:	js     0x43c28b
  43c212:	inc    ebx
  43c213:	outs   dx,DWORD PTR ds:[esi]
  43c214:	outs   dx,BYTE PTR ds:[esi]
  43c215:	outs   dx,BYTE PTR ds:[esi]
  43c216:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43c21b:	outs   dx,BYTE PTR ds:[esi]
  43c21c:	test   BYTE PTR [eax],dl
  43c21e:	inc    eax
  43c21f:	add    BYTE PTR [eax-0x67010000],bl
  43c225:	add    BYTE PTR [eax],al
  43c227:	inc    DWORD PTR [ecx]
  43c229:	add    BYTE PTR [eax],al
  43c22b:	add    BYTE PTR [eax],al
  43c22d:	add    BYTE PTR [eax],al
  43c22f:	add    BYTE PTR [eax],0x0
  43c232:	add    BYTE PTR [eax+0x5205001b],al
  43c238:	popa   
  43c239:	outs   dx,BYTE PTR ds:[esi]
  43c23a:	addr16 gs mov dl,al
  43c23e:	inc    ebx
	...
  43c247:	add    BYTE PTR [edx+eax*8-0x3d17ffbd],ah
  43c24e:	inc    ebx
	...
  43c25b:	add    dh,cl
  43c25d:	ret    0x43
  43c260:	add    BYTE PTR [eax],0x0
  43c263:	add    BYTE PTR [edx+edi*4+0x43],cl
  43c267:	add    al,dl
  43c269:	inc    edx
  43c26a:	inc    eax
  43c26b:	add    ah,bl
  43c26d:	inc    edx
  43c26e:	inc    eax
  43c26f:	add    al,ah
  43c271:	inc    edx
  43c272:	inc    eax
  43c273:	add    ah,ah
  43c275:	inc    edx
  43c276:	inc    eax
  43c277:	add    al,bl
  43c279:	inc    edx
  43c27a:	inc    eax
  43c27b:	add    BYTE PTR [eax],bh
  43c27d:	inc    eax
  43c27e:	inc    eax
  43c27f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43c283:	add    BYTE PTR [edi+edx*8],bh
  43c286:	inc    ebx
  43c287:	add    BYTE PTR [eax+0x700043c4],dh
  43c28d:	inc    ecx
  43c28e:	inc    ecx
  43c28f:	add    BYTE PTR [eax+eax*2-0x2863ffbf],al
  43c296:	inc    ebx
  43c297:	add    BYTE PTR [eax],dl
  43c299:	fld    DWORD PTR [ebx+0x0]
  43c29c:	fcomp  st(2)
  43c29e:	inc    ebx
  43c29f:	add    al,al
  43c2a1:	(bad)  
  43c2a2:	inc    ebx
  43c2a3:	add    BYTE PTR [esi],cl
  43c2a5:	add    BYTE PTR [eax],al
  43c2a7:	add    BYTE PTR [eax],al
  43c2a9:	add    BYTE PTR [eax+eax*1],al
  43c2ac:	add    BYTE PTR [eax],al
  43c2ae:	test   BYTE PTR [eax],dl
  43c2b0:	inc    eax
  43c2b1:	add    BYTE PTR [eax+0x0],ch
  43c2b4:	add    BYTE PTR [eax],al
  43c2b6:	test   BYTE PTR [eax],dl
  43c2b8:	inc    eax
  43c2b9:	add    BYTE PTR [eax+eax*1+0x0],ch
  43c2bd:	add    BYTE PTR [eax+edx*1+0x700040],al
  43c2c4:	add    BYTE PTR [eax],al
  43c2c6:	test   BYTE PTR [eax],dl
  43c2c8:	inc    eax
  43c2c9:	add    BYTE PTR [eax+eax*1+0x0],dh
  43c2cd:	add    BYTE PTR ds:0x52644954,dl
  43c2d3:	gs jae 0x43c346
  43c2d6:	outs   dx,DWORD PTR ds:[esi]
  43c2d7:	outs   dx,BYTE PTR ds:[esi]
  43c2d8:	jae    0x43c33f
  43c2da:	dec    eax
  43c2db:	gs popa 
  43c2dd:	fs gs jb 0x43c32a
  43c2e1:	outs   dx,BYTE PTR ds:[esi]
  43c2e2:	outs   dx,WORD PTR ds:[esi]
  43c2e4:	call   0x74406ab
  43c2e9:	adc    eax,0x52644954
  43c2ee:	gs jae 0x43c361
  43c2f1:	outs   dx,DWORD PTR ds:[esi]
  43c2f2:	outs   dx,BYTE PTR ds:[esi]
  43c2f3:	jae    0x43c35a
  43c2f5:	dec    eax
  43c2f6:	gs popa 
  43c2f8:	fs gs jb 0x43c345
  43c2fc:	outs   dx,BYTE PTR ds:[esi]
  43c2fd:	outs   dx,WORD PTR ds:[esi]
  43c2ff:	mov    dl,al
  43c301:	inc    ebx
  43c302:	add    BYTE PTR [ebx+edi*4],dl
  43c305:	inc    ebx
  43c306:	add    BYTE PTR ds:0x64491000,dl
  43c30c:	dec    eax
  43c30d:	push   esp
  43c30e:	push   esp
  43c30f:	push   eax
  43c310:	dec    eax
  43c311:	gs popa 
  43c313:	fs gs jb 0x43c360
  43c317:	outs   dx,BYTE PTR ds:[esi]
  43c318:	outs   dx,WORD PTR ds:[esi]
  43c31a:	push   es
  43c31b:	add    BYTE PTR [eax+edx*1+0x680040],al
  43c322:	add    bh,bh
  43c324:	cmp    al,0xdb
  43c326:	inc    ebx
  43c327:	add    BYTE PTR [ecx],al
  43c329:	add    BYTE PTR [eax],al
  43c32b:	add    BYTE PTR [eax],al
  43c32d:	add    BYTE PTR [eax],al
  43c32f:	add    BYTE PTR [eax],0x0
  43c332:	add    BYTE PTR [eax+0x410c000f],al
  43c338:	arpl   WORD PTR [ebx+0x65],sp
  43c33b:	jo     0x43c3b1
  43c33d:	push   edx
  43c33e:	popa   
  43c33f:	outs   dx,BYTE PTR ds:[esi]
  43c340:	addr16 gs jae 0x43c2c8
  43c344:	adc    BYTE PTR [eax+0x0],al
  43c347:	ins    BYTE PTR es:[edi],dx
  43c348:	add    BYTE PTR [eax],al
  43c34a:	jmp    FWORD PTR [eax+eax*1+0x0]
  43c34e:	inc    DWORD PTR [ecx]
  43c350:	add    BYTE PTR [eax],al
  43c352:	add    BYTE PTR [eax],al
  43c354:	add    BYTE PTR [eax],al
  43c356:	add    BYTE PTR [eax],0x0
  43c359:	add    BYTE PTR [eax+0x4c080010],al
  43c35f:	outs   dx,DWORD PTR ds:[esi]
  43c360:	arpl   WORD PTR [ecx+0x74],sp
  43c363:	imul   ebp,DWORD PTR [edi+0x6e],0x401084
  43c36a:	je     0x43c36c
  43c36c:	add    bh,bh
  43c36e:	je     0x43c370
  43c370:	add    bh,bh
  43c372:	add    DWORD PTR [eax],eax
  43c374:	add    BYTE PTR [eax],al
  43c376:	add    BYTE PTR [eax],al
  43c378:	add    BYTE PTR [eax-0x80000000],al
  43c37e:	adc    DWORD PTR [eax],eax
  43c380:	(bad)  
  43c382:	jb     0x43c3f3
  43c384:	js     0x43c3ff
  43c386:	inc    ebx
  43c387:	outs   dx,DWORD PTR ds:[esi]
  43c388:	outs   dx,BYTE PTR ds:[esi]
  43c389:	outs   dx,BYTE PTR ds:[esi]
  43c38a:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43c38f:	outs   dx,BYTE PTR ds:[esi]
  43c390:	xchg   esp,eax
  43c391:	ins    DWORD PTR es:[edi],dx
  43c392:	inc    ebx
  43c393:	add    BYTE PTR [eax+0x0],bh
  43c396:	add    bh,bh
  43c398:	jl     0x43c371
  43c39a:	inc    ebx
  43c39b:	add    BYTE PTR [ecx],al
  43c39d:	add    BYTE PTR [eax],al
  43c39f:	add    BYTE PTR [eax],al
  43c3a1:	add    BYTE PTR [eax],al
  43c3a3:	add    BYTE PTR [eax],0x0
  43c3a6:	add    BYTE PTR [eax+0x50110012],al
  43c3ac:	jb     0x43c41d
  43c3ae:	js     0x43c429
  43c3b0:	inc    ecx
  43c3b1:	jne    0x43c427
  43c3b3:	push   0x69746e65
  43c3b8:	arpl   WORD PTR [ecx+0x74],sp
  43c3bb:	test   BYTE PTR gs:[eax],dl
  43c3be:	inc    eax
  43c3bf:	add    BYTE PTR [eax+0x0],dh
  43c3c2:	add    bh,bh
  43c3c4:	jo     0x43c3c6
  43c3c6:	add    bh,bh
  43c3c8:	add    DWORD PTR [eax],eax
  43c3ca:	add    BYTE PTR [eax],al
  43c3cc:	add    BYTE PTR [eax],al
  43c3ce:	add    BYTE PTR [eax-0x80000000],al
  43c3d4:	adc    eax,DWORD PTR [eax]
  43c3d6:	push   es
  43c3d7:	push   ebx
  43c3d8:	gs jb  0x43c451
  43c3db:	gs jb  0x43c372
  43c3de:	ins    DWORD PTR es:[edi],dx
  43c3df:	inc    ebx
  43c3e0:	add    BYTE PTR [eax+eax*1+0x0],bh
  43c3e4:	dec    DWORD PTR [edi+edx*8+0x10043]
  43c3eb:	add    BYTE PTR [eax],al
  43c3ed:	add    BYTE PTR [eax],al
  43c3ef:	add    BYTE PTR [eax-0x80000000],al
  43c3f5:	adc    al,0x0
  43c3f7:	xorps  xmm2,XMMWORD PTR [edi+0x57]
  43c3fb:	inc    ecx
  43c3fc:	jne    0x43c472
  43c3fe:	push   0x69746e65
  43c403:	arpl   WORD PTR [ecx+0x74],sp
  43c406:	gs nop
  43c408:	push   ebx
  43c409:	push   esi
  43c40a:	push   edi
  43c40b:	test   dl,dl
  43c40d:	je     0x43c417
  43c40f:	add    esp,0xfffffff0
  43c412:	call   0x4043ac
  43c417:	mov    ebx,edx
  43c419:	mov    edi,eax
  43c41b:	xor    edx,edx
  43c41d:	mov    eax,edi
  43c41f:	call   0x404070
  43c424:	mov    dl,0x1
  43c426:	mov    eax,ds:0x436c90
  43c42b:	call   0x436dc0
  43c430:	mov    esi,eax
  43c432:	mov    DWORD PTR [edi+0x8],esi
  43c435:	mov    DWORD PTR [esi+0x40],0x400
  43c43c:	mov    dl,0x1
  43c43e:	mov    eax,ds:0x436c90
  43c443:	call   0x436dc0
  43c448:	mov    DWORD PTR [edi+0x40],eax
  43c44b:	mov    eax,edi
  43c44d:	mov    edx,DWORD PTR [eax]
  43c44f:	call   DWORD PTR [edx+0x14]
  43c452:	mov    eax,edi
  43c454:	test   bl,bl
  43c456:	je     0x43c467
  43c458:	call   0x404404
  43c45d:	pop    DWORD PTR fs:0x0
  43c464:	add    esp,0xc
  43c467:	mov    eax,edi
  43c469:	pop    edi
  43c46a:	pop    esi
  43c46b:	pop    ebx
  43c46c:	ret    
  43c46d:	lea    eax,[eax+0x0]
  43c470:	push   ebx
  43c471:	push   esi
  43c472:	call   0x404454
  43c477:	mov    ebx,edx
  43c479:	mov    esi,eax
  43c47b:	lea    edx,[esi+0x8]
  43c47e:	mov    eax,ds:0x41be90
  43c483:	call   0x41b14c
  43c488:	lea    edx,[esi+0x40]
  43c48b:	mov    eax,ds:0x41be90
  43c490:	call   0x41b14c
  43c495:	mov    edx,ebx
  43c497:	and    dl,0xfc
  43c49a:	mov    eax,esi
  43c49c:	call   0x414058
  43c4a1:	test   bl,bl
  43c4a3:	jle    0x43c4ac
  43c4a5:	mov    eax,esi
  43c4a7:	call   0x4043fc
  43c4ac:	pop    esi
  43c4ad:	pop    ebx
  43c4ae:	ret    
  43c4af:	nop
  43c4b0:	push   ebx
  43c4b1:	push   esi
  43c4b2:	mov    esi,edx
  43c4b4:	mov    ebx,eax
  43c4b6:	mov    eax,esi
  43c4b8:	mov    edx,DWORD PTR ds:0x43ba4c
  43c4be:	call   0x40422c
  43c4c3:	test   al,al
  43c4c5:	je     0x43c568
  43c4cb:	mov    eax,esi
  43c4cd:	mov    edx,DWORD PTR ds:0x43ba4c
  43c4d3:	call   0x404250
  43c4d8:	mov    esi,eax
  43c4da:	mov    edx,DWORD PTR [ebx+0x8]
  43c4dd:	mov    eax,DWORD PTR [esi+0x8]
  43c4e0:	mov    ecx,DWORD PTR [eax]
  43c4e2:	call   DWORD PTR [ecx+0x8]
  43c4e5:	lea    eax,[esi+0x10]
  43c4e8:	mov    edx,DWORD PTR [ebx+0x10]
  43c4eb:	call   0x404fdc
  43c4f0:	lea    eax,[esi+0x14]
  43c4f3:	mov    edx,DWORD PTR [ebx+0x14]
  43c4f6:	call   0x404fdc
  43c4fb:	lea    eax,[esi+0x38]
  43c4fe:	mov    edx,DWORD PTR [ebx+0x38]
  43c501:	call   0x404fdc
  43c506:	lea    eax,[esi+0x3c]
  43c509:	mov    edx,DWORD PTR [ebx+0x3c]
  43c50c:	call   0x404fdc
  43c511:	mov    eax,DWORD PTR [ebx+0x18]
  43c514:	mov    DWORD PTR [esi+0x18],eax
  43c517:	mov    eax,DWORD PTR [ebx+0x1c]
  43c51a:	mov    DWORD PTR [esi+0x1c],eax
  43c51d:	mov    eax,DWORD PTR [ebx+0x20]
  43c520:	mov    DWORD PTR [esi+0x20],eax
  43c523:	mov    eax,DWORD PTR [ebx+0x24]
  43c526:	mov    DWORD PTR [esi+0x24],eax
  43c529:	mov    eax,DWORD PTR [ebx+0x28]
  43c52c:	mov    DWORD PTR [esi+0x28],eax
  43c52f:	mov    eax,DWORD PTR [ebx+0x2c]
  43c532:	mov    DWORD PTR [esi+0x2c],eax
  43c535:	mov    eax,DWORD PTR [ebx+0x30]
  43c538:	mov    DWORD PTR [esi+0x30],eax
  43c53b:	mov    eax,DWORD PTR [ebx+0x34]
  43c53e:	mov    DWORD PTR [esi+0x34],eax
  43c541:	mov    eax,DWORD PTR [ebx+0x48]
  43c544:	mov    DWORD PTR [esi+0x48],eax
  43c547:	mov    eax,DWORD PTR [ebx+0x4c]
  43c54a:	mov    DWORD PTR [esi+0x4c],eax
  43c54d:	mov    eax,DWORD PTR [ebx+0x50]
  43c550:	mov    DWORD PTR [esi+0x50],eax
  43c553:	mov    eax,DWORD PTR [ebx+0x54]
  43c556:	mov    DWORD PTR [esi+0x54],eax
  43c559:	mov    eax,DWORD PTR [ebx+0x58]
  43c55c:	mov    DWORD PTR [esi+0x58],eax
  43c55f:	mov    eax,DWORD PTR [ebx+0x5c]
  43c562:	mov    DWORD PTR [esi+0x5c],eax
  43c565:	pop    esi
  43c566:	pop    ebx
  43c567:	ret    
  43c568:	mov    edx,esi
  43c56a:	mov    eax,ebx
  43c56c:	call   0x414168
  43c571:	pop    esi
  43c572:	pop    ebx
  43c573:	ret    
  43c574:	push   ebx
  43c575:	mov    ebx,eax
  43c577:	lea    eax,[ebx+0xc]
  43c57a:	call   0x404f88
  43c57f:	lea    eax,[ebx+0x3c]
  43c582:	call   0x404f88
  43c587:	lea    eax,[ebx+0x10]
  43c58a:	call   0x404f88
  43c58f:	lea    eax,[ebx+0x14]
  43c592:	call   0x404f88
  43c597:	lea    eax,[ebx+0x38]
  43c59a:	call   0x404f88
  43c59f:	mov    DWORD PTR [ebx+0x18],0xffffffff
  43c5a6:	mov    DWORD PTR [ebx+0x1c],0xffffffff
  43c5ad:	mov    DWORD PTR [ebx+0x28],0x0
  43c5b4:	mov    DWORD PTR [ebx+0x2c],0x0
  43c5bb:	mov    DWORD PTR [ebx+0x20],0x0
  43c5c2:	mov    DWORD PTR [ebx+0x24],0x0
  43c5c9:	mov    DWORD PTR [ebx+0x30],0x0
  43c5d0:	mov    DWORD PTR [ebx+0x34],0x0
  43c5d7:	xor    eax,eax
  43c5d9:	mov    DWORD PTR [ebx+0x48],eax
  43c5dc:	mov    DWORD PTR [ebx+0x4c],eax
  43c5df:	xor    eax,eax
  43c5e1:	mov    DWORD PTR [ebx+0x58],eax
  43c5e4:	mov    DWORD PTR [ebx+0x5c],eax
  43c5e7:	xor    eax,eax
  43c5e9:	mov    DWORD PTR [ebx+0x50],eax
  43c5ec:	mov    DWORD PTR [ebx+0x54],eax
  43c5ef:	mov    eax,DWORD PTR [ebx+0x8]
  43c5f2:	mov    edx,DWORD PTR [eax]
  43c5f4:	call   DWORD PTR [edx+0x44]
  43c5f7:	pop    ebx
  43c5f8:	ret    
  43c5f9:	lea    eax,[eax+0x0]
  43c5fc:	push   ebp
  43c5fd:	mov    ebp,esp
  43c5ff:	mov    ecx,0x9
  43c604:	push   0x0
  43c606:	push   0x0
  43c608:	dec    ecx
  43c609:	jne    0x43c604
  43c60b:	push   ecx
  43c60c:	push   ebx
  43c60d:	push   esi
  43c60e:	push   edi
  43c60f:	mov    ebx,eax
  43c611:	xor    eax,eax
  43c613:	push   ebp
  43c614:	push   0x43c8bc
  43c619:	push   DWORD PTR fs:[eax]
  43c61c:	mov    DWORD PTR fs:[eax],esp
  43c61f:	mov    esi,DWORD PTR [ebx+0x8]
  43c622:	lea    ecx,[ebp-0x10]
  43c625:	mov    edx,0x43c8d4
  43c62a:	mov    eax,esi
  43c62c:	call   0x437220
  43c631:	mov    edx,DWORD PTR [ebp-0x10]
  43c634:	lea    eax,[ebx+0xc]
  43c637:	call   0x404fdc
  43c63c:	lea    ecx,[ebp-0x14]
  43c63f:	mov    edx,0x43c8e8
  43c644:	mov    eax,esi
  43c646:	call   0x437220
  43c64b:	mov    edx,DWORD PTR [ebp-0x14]
  43c64e:	lea    eax,[ebx+0x3c]
  43c651:	call   0x404fdc
  43c656:	lea    ecx,[ebp-0x18]
  43c659:	mov    edx,0x43c900
  43c65e:	mov    eax,esi
  43c660:	call   0x437220
  43c665:	mov    edx,DWORD PTR [ebp-0x18]
  43c668:	lea    eax,[ebx+0x10]
  43c66b:	call   0x404fdc
  43c670:	lea    ecx,[ebp-0x1c]
  43c673:	mov    edx,0x43c91c
  43c678:	mov    eax,esi
  43c67a:	call   0x437220
  43c67f:	mov    edx,DWORD PTR [ebp-0x1c]
  43c682:	lea    eax,[ebx+0x14]
  43c685:	call   0x404fdc
  43c68a:	lea    ecx,[ebp-0x20]
  43c68d:	mov    edx,0x43c938
  43c692:	mov    eax,esi
  43c694:	call   0x437220
  43c699:	mov    edx,DWORD PTR [ebp-0x20]
  43c69c:	lea    eax,[ebx+0x38]
  43c69f:	call   0x404fdc
  43c6a4:	lea    ecx,[ebp-0x28]
  43c6a7:	mov    edx,0x43c950
  43c6ac:	mov    eax,esi
  43c6ae:	call   0x437220
  43c6b3:	mov    edx,DWORD PTR [ebp-0x28]
  43c6b6:	lea    ecx,[ebp-0x24]
  43c6b9:	mov    eax,ds:0x41be90
  43c6be:	call   0x41b2b0
  43c6c3:	mov    edx,DWORD PTR [ebp-0x24]
  43c6c6:	or     ecx,0xffffffff
  43c6c9:	mov    eax,ds:0x41be90
  43c6ce:	call   0x41b254
  43c6d3:	cdq    
  43c6d4:	mov    DWORD PTR [ebx+0x18],eax
  43c6d7:	mov    DWORD PTR [ebx+0x1c],edx
  43c6da:	cmp    DWORD PTR [ebx+0x1c],0x0
  43c6de:	jne    0x43c6e9
  43c6e0:	cmp    DWORD PTR [ebx+0x18],0x0
  43c6e4:	setae  al
  43c6e7:	jmp    0x43c6ec
  43c6e9:	setge  al
  43c6ec:	mov    BYTE PTR [ebx+0x64],al
  43c6ef:	mov    DWORD PTR [ebx+0x28],0x0
  43c6f6:	mov    DWORD PTR [ebx+0x2c],0x0
  43c6fd:	mov    DWORD PTR [ebx+0x20],0x0
  43c704:	mov    DWORD PTR [ebx+0x24],0x0
  43c70b:	mov    DWORD PTR [ebx+0x30],0x0
  43c712:	mov    DWORD PTR [ebx+0x34],0x0
  43c719:	lea    ecx,[ebp-0x4]
  43c71c:	mov    edx,0x43c968
  43c721:	mov    eax,esi
  43c723:	call   0x437220
  43c728:	cmp    DWORD PTR [ebp-0x4],0x0
  43c72c:	je     0x43c7cb
  43c732:	push   0x1
  43c734:	lea    eax,[ebp-0x2c]
  43c737:	push   eax
  43c738:	lea    eax,[ebp-0x4]
  43c73b:	mov    cl,0x1
  43c73d:	mov    edx,0x43c980
  43c742:	call   0x41c7c4
  43c747:	push   0x1
  43c749:	lea    eax,[ebp-0x8]
  43c74c:	push   eax
  43c74d:	lea    eax,[ebp-0x4]
  43c750:	mov    cl,0x1
  43c752:	mov    edx,0x43c98c
  43c757:	call   0x41c7c4
  43c75c:	push   0x1
  43c75e:	lea    eax,[ebp-0xc]
  43c761:	push   eax
  43c762:	lea    eax,[ebp-0x4]
  43c765:	mov    cl,0x1
  43c767:	mov    edx,0x43c980
  43c76c:	call   0x41c7c4
  43c771:	push   0x0
  43c773:	push   0x0
  43c775:	push   0x1
  43c777:	lea    eax,[ebp-0x30]
  43c77a:	push   eax
  43c77b:	lea    eax,[ebp-0x8]
  43c77e:	mov    cl,0x1
  43c780:	mov    edx,0x43c998
  43c785:	call   0x41c7c4
  43c78a:	mov    edx,DWORD PTR [ebp-0x30]
  43c78d:	mov    eax,ds:0x41be90
  43c792:	call   0x41b3f4
  43c797:	mov    DWORD PTR [ebx+0x28],eax
  43c79a:	mov    DWORD PTR [ebx+0x2c],edx
  43c79d:	push   0x0
  43c79f:	push   0x0
  43c7a1:	mov    edx,DWORD PTR [ebp-0x8]
  43c7a4:	mov    eax,ds:0x41be90
  43c7a9:	call   0x41b3f4
  43c7ae:	mov    DWORD PTR [ebx+0x20],eax
  43c7b1:	mov    DWORD PTR [ebx+0x24],edx
  43c7b4:	push   0x0
  43c7b6:	push   0x0
  43c7b8:	mov    edx,DWORD PTR [ebp-0xc]
  43c7bb:	mov    eax,ds:0x41be90
  43c7c0:	call   0x41b3f4
  43c7c5:	mov    DWORD PTR [ebx+0x30],eax
  43c7c8:	mov    DWORD PTR [ebx+0x34],edx
  43c7cb:	lea    ecx,[ebp-0x34]
  43c7ce:	mov    edx,0x43c9a4
  43c7d3:	mov    eax,esi
  43c7d5:	call   0x437220
  43c7da:	mov    eax,DWORD PTR [ebp-0x34]
  43c7dd:	call   0x435da0
  43c7e2:	fstp   QWORD PTR [ebx+0x48]
  43c7e5:	fwait
  43c7e6:	lea    ecx,[ebp-0x38]
  43c7e9:	mov    edx,0x43c9b4
  43c7ee:	mov    eax,esi
  43c7f0:	call   0x437220
  43c7f5:	mov    eax,DWORD PTR [ebp-0x38]
  43c7f8:	call   0x435da0
  43c7fd:	fstp   QWORD PTR [ebx+0x58]
  43c800:	fwait
  43c801:	lea    ecx,[ebp-0x3c]
  43c804:	mov    edx,0x43c9cc
  43c809:	mov    eax,esi
  43c80b:	call   0x437220
  43c810:	mov    edx,DWORD PTR [ebp-0x3c]
  43c813:	or     ecx,0xffffffff
  43c816:	mov    eax,ds:0x41be90
  43c81b:	call   0x41b254
  43c820:	inc    eax
  43c821:	je     0x43c85f
  43c823:	lea    ecx,[ebp-0x40]
  43c826:	mov    edx,0x43c9cc
  43c82b:	mov    eax,esi
  43c82d:	call   0x437220
  43c832:	mov    edx,DWORD PTR [ebp-0x40]
  43c835:	mov    eax,ds:0x41be90
  43c83a:	call   0x41b200
  43c83f:	mov    edi,eax
  43c841:	mov    eax,ds:0x41be90
  43c846:	call   0x41b2d8
  43c84b:	mov    DWORD PTR [ebp-0x44],edi
  43c84e:	fild   DWORD PTR [ebp-0x44]
  43c851:	fdiv   DWORD PTR ds:0x43c9d4
  43c857:	faddp  st(1),st
  43c859:	fstp   QWORD PTR [ebx+0x50]
  43c85c:	fwait
  43c85d:	jmp    0x43c87a
  43c85f:	lea    ecx,[ebp-0x48]
  43c862:	mov    edx,0x43c9cc
  43c867:	mov    eax,esi
  43c869:	call   0x437220
  43c86e:	mov    eax,DWORD PTR [ebp-0x48]
  43c871:	call   0x435da0
  43c876:	fstp   QWORD PTR [ebx+0x50]
  43c879:	fwait
  43c87a:	lea    ecx,[ebp-0x4c]
  43c87d:	mov    edx,0x43c9e0
  43c882:	mov    eax,esi
  43c884:	call   0x437220
  43c889:	mov    edx,DWORD PTR [ebp-0x4c]
  43c88c:	lea    eax,[ebx+0x60]
  43c88f:	call   0x404fdc
  43c894:	xor    eax,eax
  43c896:	pop    edx
  43c897:	pop    ecx
  43c898:	pop    ecx
  43c899:	mov    DWORD PTR fs:[eax],edx
  43c89c:	push   0x43c8c3
  43c8a1:	lea    eax,[ebp-0x4c]
  43c8a4:	mov    edx,0x2
  43c8a9:	call   0x404fac
  43c8ae:	lea    eax,[ebp-0x40]
  43c8b1:	mov    edx,0x10
  43c8b6:	call   0x404fac
  43c8bb:	ret    
  43c8bc:	jmp    0x40481c
  43c8c1:	jmp    0x43c8a1
  43c8c3:	pop    edi
  43c8c4:	pop    esi
  43c8c5:	pop    ebx
  43c8c6:	mov    esp,ebp
  43c8c8:	pop    ebp
  43c8c9:	ret    
  43c8ca:	add    BYTE PTR [eax],al
  43c8cc:	(bad)  
  43c8cd:	(bad)  
  43c8ce:	(bad)  
  43c8cf:	dec    DWORD PTR [edx]
  43c8d1:	add    BYTE PTR [eax],al
  43c8d3:	add    BYTE PTR [ebx+0x6f],al
  43c8d6:	outs   dx,BYTE PTR ds:[esi]
  43c8d7:	outs   dx,BYTE PTR ds:[esi]
  43c8d8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43c8dd:	outs   dx,BYTE PTR ds:[esi]
  43c8de:	add    BYTE PTR [eax],al
  43c8e0:	(bad)  
  43c8e1:	(bad)  
  43c8e2:	(bad)  
  43c8e3:	dec    DWORD PTR [edi]
  43c8e5:	add    BYTE PTR [eax],al
  43c8e7:	add    BYTE PTR [ebx+0x6f],al
  43c8ea:	outs   dx,BYTE PTR ds:[esi]
  43c8eb:	je     0x43c952
  43c8ed:	outs   dx,BYTE PTR ds:[esi]
  43c8ee:	je     0x43c91d
  43c8f0:	push   esi
  43c8f1:	gs jb  0x43c967
  43c8f4:	imul   ebp,DWORD PTR [edi+0x6e],0xffffff00
  43c8fb:	call   DWORD PTR [eax]
  43c8fd:	add    BYTE PTR [eax],al
  43c8ff:	add    BYTE PTR [ebx+0x6f],al
  43c902:	outs   dx,BYTE PTR ds:[esi]
  43c903:	je     0x43c96a
  43c905:	outs   dx,BYTE PTR ds:[esi]
  43c906:	je     0x43c935
  43c908:	inc    ebp
  43c909:	outs   dx,BYTE PTR ds:[esi]
  43c90a:	arpl   WORD PTR [edi+0x64],bp
  43c90d:	imul   ebp,DWORD PTR [esi+0x67],0x0
  43c914:	(bad)  
  43c915:	(bad)  
  43c916:	(bad)  
  43c917:	call   DWORD PTR [eax]
  43c919:	add    BYTE PTR [eax],al
  43c91b:	add    BYTE PTR [ebx+0x6f],al
  43c91e:	outs   dx,BYTE PTR ds:[esi]
  43c91f:	je     0x43c986
  43c921:	outs   dx,BYTE PTR ds:[esi]
  43c922:	je     0x43c951
  43c924:	dec    esp
  43c925:	popa   
  43c926:	outs   dx,BYTE PTR ds:[esi]
  43c927:	addr16 jne 0x43c98b
  43c92a:	add    BYTE PTR gs:[bx+si],al
  43c92e:	add    BYTE PTR [eax],al
  43c930:	(bad)  
  43c931:	(bad)  
  43c932:	(bad)  
  43c933:	dec    DWORD PTR [eax+eax*1]
  43c936:	add    BYTE PTR [eax],al
  43c938:	inc    ebx
  43c939:	outs   dx,DWORD PTR ds:[esi]
  43c93a:	outs   dx,BYTE PTR ds:[esi]
  43c93b:	je     0x43c9a2
  43c93d:	outs   dx,BYTE PTR ds:[esi]
  43c93e:	je     0x43c96d
  43c940:	push   esp
  43c941:	jns    0x43c9b3
  43c943:	add    BYTE PTR gs:[eax],al
  43c946:	add    BYTE PTR [eax],al
  43c948:	(bad)  
  43c949:	(bad)  
  43c94a:	(bad)  
  43c94b:	dec    DWORD PTR [esi]
  43c94d:	add    BYTE PTR [eax],al
  43c94f:	add    BYTE PTR [ebx+0x6f],al
  43c952:	outs   dx,BYTE PTR ds:[esi]
  43c953:	je     0x43c9ba
  43c955:	outs   dx,BYTE PTR ds:[esi]
  43c956:	je     0x43c985
  43c958:	dec    esp
  43c959:	outs   dx,BYTE PTR gs:[esi]
  43c95b:	addr16 je 0x43c9c6
  43c95e:	add    BYTE PTR [eax],al
  43c960:	(bad)  
  43c961:	(bad)  
  43c962:	(bad)  
  43c963:	dec    DWORD PTR ds:0x43000000
  43c969:	outs   dx,DWORD PTR ds:[esi]
  43c96a:	outs   dx,BYTE PTR ds:[esi]
  43c96b:	je     0x43c9d2
  43c96d:	outs   dx,BYTE PTR ds:[esi]
  43c96e:	je     0x43c99d
  43c970:	push   edx
  43c971:	popa   
  43c972:	outs   dx,BYTE PTR ds:[esi]
  43c973:	add    BYTE PTR gs:[bx+si],al
  43c977:	add    bh,bh
  43c979:	(bad)  
  43c97a:	(bad)  
  43c97b:	inc    DWORD PTR [ecx]
  43c97d:	add    BYTE PTR [eax],al
  43c97f:	add    BYTE PTR [eax],ah
  43c981:	add    BYTE PTR [eax],al
  43c983:	add    bh,bh
  43c985:	(bad)  
  43c986:	(bad)  
  43c987:	inc    DWORD PTR [ecx]
  43c989:	add    BYTE PTR [eax],al
  43c98b:	add    BYTE PTR [edi],ch
  43c98d:	add    BYTE PTR [eax],al
  43c98f:	add    bh,bh
  43c991:	(bad)  
  43c992:	(bad)  
  43c993:	inc    DWORD PTR [ecx]
  43c995:	add    BYTE PTR [eax],al
  43c997:	add    BYTE PTR ds:0xff000000,ch
  43c99d:	(bad)  
  43c99e:	(bad)  
  43c99f:	inc    DWORD PTR [eax+eax*1]
  43c9a2:	add    BYTE PTR [eax],al
  43c9a4:	inc    esp
  43c9a5:	popa   
  43c9a6:	je     0x43ca0d
  43c9a8:	add    BYTE PTR [eax],al
  43c9aa:	add    BYTE PTR [eax],al
  43c9ac:	(bad)  
  43c9ad:	(bad)  
  43c9ae:	(bad)  
  43c9af:	dec    DWORD PTR ds:0x4c000000
  43c9b5:	popa   
  43c9b6:	jae    0x43ca2c
  43c9b8:	sub    eax,0x69646f4d
  43c9bd:	imul   sp,WORD PTR [ebp+0x64],0x0
  43c9c3:	add    bh,bh
  43c9c5:	(bad)  
  43c9c6:	(bad)  
  43c9c7:	inc    DWORD PTR [edi]
  43c9c9:	add    BYTE PTR [eax],al
  43c9cb:	add    BYTE PTR [ebp+0x78],al
  43c9ce:	jo     0x43ca39
  43c9d0:	jb     0x43ca37
  43c9d2:	jae    0x43c9d4
  43c9d4:	add    al,al
  43c9d6:	test   al,0x47
  43c9d8:	(bad)  
  43c9d9:	(bad)  
  43c9da:	(bad)  
  43c9db:	inc    DWORD PTR [esi]
  43c9dd:	add    BYTE PTR [eax],al
  43c9df:	add    BYTE PTR [eax+0x72],dl
  43c9e2:	popa   
  43c9e3:	ins    DWORD PTR es:[di],dx
  43c9e5:	popa   
  43c9e6:	add    BYTE PTR [eax],al
  43c9e8:	push   ebp
  43c9e9:	mov    ebp,esp
  43c9eb:	xor    ecx,ecx
  43c9ed:	push   ecx
  43c9ee:	push   ecx
  43c9ef:	push   ecx
  43c9f0:	push   ecx
  43c9f1:	push   ecx
  43c9f2:	push   ebx
  43c9f3:	push   esi
  43c9f4:	mov    ebx,eax
  43c9f6:	xor    eax,eax
  43c9f8:	push   ebp
  43c9f9:	push   0x43cbb3
  43c9fe:	push   DWORD PTR fs:[eax]
  43ca01:	mov    DWORD PTR fs:[eax],esp
  43ca04:	mov    eax,DWORD PTR [ebx+0x8]
  43ca07:	mov    edx,DWORD PTR [eax]
  43ca09:	call   DWORD PTR [edx+0x44]
  43ca0c:	mov    esi,DWORD PTR [ebx+0x8]
  43ca0f:	mov    eax,DWORD PTR [ebx+0xc]
  43ca12:	call   0x405248
  43ca17:	test   eax,eax
  43ca19:	jle    0x43ca2a
  43ca1b:	mov    ecx,DWORD PTR [ebx+0xc]
  43ca1e:	mov    edx,0x43cbc8
  43ca23:	mov    eax,esi
  43ca25:	call   0x437440
  43ca2a:	mov    eax,DWORD PTR [ebx+0x3c]
  43ca2d:	call   0x405248
  43ca32:	test   eax,eax
  43ca34:	jle    0x43ca45
  43ca36:	mov    ecx,DWORD PTR [ebx+0x3c]
  43ca39:	mov    edx,0x43cbdc
  43ca3e:	mov    eax,esi
  43ca40:	call   0x437440
  43ca45:	mov    eax,DWORD PTR [ebx+0x10]
  43ca48:	call   0x405248
  43ca4d:	test   eax,eax
  43ca4f:	jle    0x43ca60
  43ca51:	mov    ecx,DWORD PTR [ebx+0x10]
  43ca54:	mov    edx,0x43cbf4
  43ca59:	mov    eax,esi
  43ca5b:	call   0x437440
  43ca60:	mov    eax,DWORD PTR [ebx+0x14]
  43ca63:	call   0x405248
  43ca68:	test   eax,eax
  43ca6a:	jle    0x43ca7b
  43ca6c:	mov    ecx,DWORD PTR [ebx+0x14]
  43ca6f:	mov    edx,0x43cc10
  43ca74:	mov    eax,esi
  43ca76:	call   0x437440
  43ca7b:	mov    eax,DWORD PTR [ebx+0x38]
  43ca7e:	call   0x405248
  43ca83:	test   eax,eax
  43ca85:	jle    0x43ca96
  43ca87:	mov    ecx,DWORD PTR [ebx+0x38]
  43ca8a:	mov    edx,0x43cc2c
  43ca8f:	mov    eax,esi
  43ca91:	call   0x437440
  43ca96:	cmp    DWORD PTR [ebx+0x1c],0x0
  43ca9a:	jne    0x43caa4
  43ca9c:	cmp    DWORD PTR [ebx+0x18],0x0
  43caa0:	jb     0x43cac8
  43caa2:	jmp    0x43caa6
  43caa4:	jl     0x43cac8
  43caa6:	push   DWORD PTR [ebx+0x1c]
  43caa9:	push   DWORD PTR [ebx+0x18]
  43caac:	lea    edx,[ebp-0x4]
  43caaf:	mov    eax,ds:0x41be90
  43cab4:	call   0x41b184
  43cab9:	mov    ecx,DWORD PTR [ebp-0x4]
  43cabc:	mov    edx,0x43cc44
  43cac1:	mov    eax,esi
  43cac3:	call   0x437440
  43cac8:	mov    eax,DWORD PTR [ebx+0x4]
  43cacb:	call   0x405248
  43cad0:	test   eax,eax
  43cad2:	jle    0x43cae3
  43cad4:	mov    ecx,DWORD PTR [ebx+0x4]
  43cad7:	mov    edx,0x43cc5c
  43cadc:	mov    eax,esi
  43cade:	call   0x437440
  43cae3:	fld    QWORD PTR [ebx+0x48]
  43cae6:	fcomp  DWORD PTR ds:0x43cc6c
  43caec:	fstsw  ax
  43caef:	sahf   
  43caf0:	jbe    0x43cb14
  43caf2:	push   DWORD PTR [ebx+0x4c]
  43caf5:	push   DWORD PTR [ebx+0x48]
  43caf8:	lea    edx,[ebp-0x8]
  43cafb:	mov    eax,ds:0x41be90
  43cb00:	call   0x41b550
  43cb05:	mov    ecx,DWORD PTR [ebp-0x8]
  43cb08:	mov    edx,0x43cc78
  43cb0d:	mov    eax,esi
  43cb0f:	call   0x437440
  43cb14:	fld    QWORD PTR [ebx+0x50]
  43cb17:	fcomp  DWORD PTR ds:0x43cc6c
  43cb1d:	fstsw  ax
  43cb20:	sahf   
  43cb21:	jbe    0x43cb45
  43cb23:	push   DWORD PTR [ebx+0x54]
  43cb26:	push   DWORD PTR [ebx+0x50]
  43cb29:	lea    edx,[ebp-0xc]
  43cb2c:	mov    eax,ds:0x41be90
  43cb31:	call   0x41b550
  43cb36:	mov    ecx,DWORD PTR [ebp-0xc]
  43cb39:	mov    edx,0x43cc88
  43cb3e:	mov    eax,esi
  43cb40:	call   0x437440
  43cb45:	mov    eax,DWORD PTR [ebx+0x60]
  43cb48:	call   0x405248
  43cb4d:	test   eax,eax
  43cb4f:	jle    0x43cb60
  43cb51:	mov    ecx,DWORD PTR [ebx+0x60]
  43cb54:	mov    edx,0x43cc98
  43cb59:	mov    eax,esi
  43cb5b:	call   0x437440
  43cb60:	mov    eax,DWORD PTR [ebx+0x40]
  43cb63:	mov    edx,DWORD PTR [eax]
  43cb65:	call   DWORD PTR [edx+0x14]
  43cb68:	test   eax,eax
  43cb6a:	jle    0x43cb98
  43cb6c:	lea    edx,[ebp-0x10]
  43cb6f:	mov    eax,esi
  43cb71:	mov    ecx,DWORD PTR [eax]
  43cb73:	call   DWORD PTR [ecx+0x1c]
  43cb76:	lea    eax,[ebp-0x10]
  43cb79:	push   eax
  43cb7a:	lea    edx,[ebp-0x14]
  43cb7d:	mov    eax,DWORD PTR [ebx+0x40]
  43cb80:	mov    ecx,DWORD PTR [eax]
  43cb82:	call   DWORD PTR [ecx+0x1c]
  43cb85:	mov    edx,DWORD PTR [ebp-0x14]
  43cb88:	pop    eax
  43cb89:	call   0x405254
  43cb8e:	mov    edx,DWORD PTR [ebp-0x10]
  43cb91:	mov    eax,esi
  43cb93:	mov    ecx,DWORD PTR [eax]
  43cb95:	call   DWORD PTR [ecx+0x2c]
  43cb98:	xor    eax,eax
  43cb9a:	pop    edx
  43cb9b:	pop    ecx
  43cb9c:	pop    ecx
  43cb9d:	mov    DWORD PTR fs:[eax],edx
  43cba0:	push   0x43cbba
  43cba5:	lea    eax,[ebp-0x14]
  43cba8:	mov    edx,0x5
  43cbad:	call   0x404fac
  43cbb2:	ret    
  43cbb3:	jmp    0x40481c
  43cbb8:	jmp    0x43cba5
  43cbba:	pop    esi
  43cbbb:	pop    ebx
  43cbbc:	mov    esp,ebp
  43cbbe:	pop    ebp
  43cbbf:	ret    
  43cbc0:	(bad)  
  43cbc1:	(bad)  
  43cbc2:	(bad)  
  43cbc3:	dec    DWORD PTR [edx]
  43cbc5:	add    BYTE PTR [eax],al
  43cbc7:	add    BYTE PTR [ebx+0x6f],al
  43cbca:	outs   dx,BYTE PTR ds:[esi]
  43cbcb:	outs   dx,BYTE PTR ds:[esi]
  43cbcc:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43cbd1:	outs   dx,BYTE PTR ds:[esi]
  43cbd2:	add    BYTE PTR [eax],al
  43cbd4:	(bad)  
  43cbd5:	(bad)  
  43cbd6:	(bad)  
  43cbd7:	dec    DWORD PTR [edi]
  43cbd9:	add    BYTE PTR [eax],al
  43cbdb:	add    BYTE PTR [ebx+0x6f],al
  43cbde:	outs   dx,BYTE PTR ds:[esi]
  43cbdf:	je     0x43cc46
  43cbe1:	outs   dx,BYTE PTR ds:[esi]
  43cbe2:	je     0x43cc11
  43cbe4:	push   esi
  43cbe5:	gs jb  0x43cc5b
  43cbe8:	imul   ebp,DWORD PTR [edi+0x6e],0xffffff00
  43cbef:	call   DWORD PTR [eax]
  43cbf1:	add    BYTE PTR [eax],al
  43cbf3:	add    BYTE PTR [ebx+0x6f],al
  43cbf6:	outs   dx,BYTE PTR ds:[esi]
  43cbf7:	je     0x43cc5e
  43cbf9:	outs   dx,BYTE PTR ds:[esi]
  43cbfa:	je     0x43cc29
  43cbfc:	inc    ebp
  43cbfd:	outs   dx,BYTE PTR ds:[esi]
  43cbfe:	arpl   WORD PTR [edi+0x64],bp
  43cc01:	imul   ebp,DWORD PTR [esi+0x67],0x0
  43cc08:	(bad)  
  43cc09:	(bad)  
  43cc0a:	(bad)  
  43cc0b:	call   DWORD PTR [eax]
  43cc0d:	add    BYTE PTR [eax],al
  43cc0f:	add    BYTE PTR [ebx+0x6f],al
  43cc12:	outs   dx,BYTE PTR ds:[esi]
  43cc13:	je     0x43cc7a
  43cc15:	outs   dx,BYTE PTR ds:[esi]
  43cc16:	je     0x43cc45
  43cc18:	dec    esp
  43cc19:	popa   
  43cc1a:	outs   dx,BYTE PTR ds:[esi]
  43cc1b:	addr16 jne 0x43cc7f
  43cc1e:	add    BYTE PTR gs:[bx+si],al
  43cc22:	add    BYTE PTR [eax],al
  43cc24:	(bad)  
  43cc25:	(bad)  
  43cc26:	(bad)  
  43cc27:	dec    DWORD PTR [eax+eax*1]
  43cc2a:	add    BYTE PTR [eax],al
  43cc2c:	inc    ebx
  43cc2d:	outs   dx,DWORD PTR ds:[esi]
  43cc2e:	outs   dx,BYTE PTR ds:[esi]
  43cc2f:	je     0x43cc96
  43cc31:	outs   dx,BYTE PTR ds:[esi]
  43cc32:	je     0x43cc61
  43cc34:	push   esp
  43cc35:	jns    0x43cca7
  43cc37:	add    BYTE PTR gs:[eax],al
  43cc3a:	add    BYTE PTR [eax],al
  43cc3c:	(bad)  
  43cc3d:	(bad)  
  43cc3e:	(bad)  
  43cc3f:	dec    DWORD PTR [esi]
  43cc41:	add    BYTE PTR [eax],al
  43cc43:	add    BYTE PTR [ebx+0x6f],al
  43cc46:	outs   dx,BYTE PTR ds:[esi]
  43cc47:	je     0x43ccae
  43cc49:	outs   dx,BYTE PTR ds:[esi]
  43cc4a:	je     0x43cc79
  43cc4c:	dec    esp
  43cc4d:	outs   dx,BYTE PTR gs:[esi]
  43cc4f:	addr16 je 0x43ccba
  43cc52:	add    BYTE PTR [eax],al
  43cc54:	(bad)  
  43cc55:	(bad)  
  43cc56:	(bad)  
  43cc57:	dec    DWORD PTR ds:0x43000000
  43cc5d:	popa   
  43cc5e:	arpl   WORD PTR [eax+0x65],bp
  43cc61:	sub    eax,0x746e6f63
  43cc66:	jb     0x43ccd7
  43cc68:	ins    BYTE PTR es:[edi],dx
  43cc69:	add    BYTE PTR [eax],al
  43cc6b:	add    BYTE PTR [eax],al
  43cc6d:	add    BYTE PTR [eax],al
  43cc6f:	add    bh,bh
  43cc71:	(bad)  
  43cc72:	(bad)  
  43cc73:	inc    DWORD PTR [eax+eax*1]
  43cc76:	add    BYTE PTR [eax],al
  43cc78:	inc    esp
  43cc79:	popa   
  43cc7a:	je     0x43cce1
  43cc7c:	add    BYTE PTR [eax],al
  43cc7e:	add    BYTE PTR [eax],al
  43cc80:	(bad)  
  43cc81:	(bad)  
  43cc82:	(bad)  
  43cc83:	inc    DWORD PTR [edi]
  43cc85:	add    BYTE PTR [eax],al
  43cc87:	add    BYTE PTR [ebp+0x78],al
  43cc8a:	jo     0x43ccf5
  43cc8c:	jb     0x43ccf3
  43cc8e:	jae    0x43cc90
  43cc90:	(bad)  
  43cc91:	(bad)  
  43cc92:	(bad)  
  43cc93:	inc    DWORD PTR [esi]
  43cc95:	add    BYTE PTR [eax],al
  43cc97:	add    BYTE PTR [eax+0x72],dl
  43cc9a:	popa   
  43cc9b:	ins    DWORD PTR es:[di],dx
  43cc9d:	popa   
  43cc9e:	add    BYTE PTR [eax],al
  43cca0:	push   esi
  43cca1:	mov    esi,eax
  43cca3:	mov    eax,DWORD PTR [esi+0x40]
  43cca6:	mov    ecx,DWORD PTR [eax]
  43cca8:	call   DWORD PTR [ecx+0x8]
  43ccab:	pop    esi
  43ccac:	ret    
  43ccad:	lea    eax,[eax+0x0]
  43ccb0:	push   ebp
  43ccb1:	mov    ebp,esp
  43ccb3:	mov    ecx,eax
  43ccb5:	mov    eax,DWORD PTR [ebp+0x8]
  43ccb8:	mov    DWORD PTR [ecx+0x18],eax
  43ccbb:	mov    eax,DWORD PTR [ebp+0xc]
  43ccbe:	mov    DWORD PTR [ecx+0x1c],eax
  43ccc1:	cmp    DWORD PTR [ecx+0x1c],0x0
  43ccc5:	jne    0x43ccd0
  43ccc7:	cmp    DWORD PTR [ecx+0x18],0x0
  43cccb:	setae  al
  43ccce:	jmp    0x43ccd3
  43ccd0:	setge  al
  43ccd3:	mov    BYTE PTR [ecx+0x64],al
  43ccd6:	pop    ebp
  43ccd7:	ret    0x8
  43ccda:	mov    eax,eax
  43ccdc:	mov    ecx,eax
  43ccde:	cmp    DWORD PTR [ecx+0x24],0x0
  43cce2:	jne    0x43ccec
  43cce4:	cmp    DWORD PTR [ecx+0x20],0x0
  43cce8:	seta   al
  43cceb:	ret    
  43ccec:	setg   al
  43ccef:	ret    
  43ccf0:	mov    ecx,eax
  43ccf2:	cmp    DWORD PTR [ecx+0x34],0x0
  43ccf6:	jne    0x43cd00
  43ccf8:	cmp    DWORD PTR [ecx+0x30],0x0
  43ccfc:	seta   al
  43ccff:	ret    
  43cd00:	setg   al
  43cd03:	ret    
  43cd04:	call   0x414224
  43cd09:	ret    
  43cd0a:	mov    eax,eax
  43cd0c:	push   ebx
  43cd0d:	push   esi
  43cd0e:	test   dl,dl
  43cd10:	je     0x43cd1a
  43cd12:	add    esp,0xfffffff0
  43cd15:	call   0x4043ac
  43cd1a:	mov    ebx,edx
  43cd1c:	mov    esi,eax
  43cd1e:	xor    edx,edx
  43cd20:	mov    eax,esi
  43cd22:	call   0x404070
  43cd27:	mov    eax,esi
  43cd29:	call   0x43cde4
  43cd2e:	mov    eax,esi
  43cd30:	test   bl,bl
  43cd32:	je     0x43cd43
  43cd34:	call   0x404404
  43cd39:	pop    DWORD PTR fs:0x0
  43cd40:	add    esp,0xc
  43cd43:	mov    eax,esi
  43cd45:	pop    esi
  43cd46:	pop    ebx
  43cd47:	ret    
  43cd48:	push   ebx
  43cd49:	push   esi
  43cd4a:	call   0x404454
  43cd4f:	mov    ebx,edx
  43cd51:	mov    esi,eax
  43cd53:	cmp    DWORD PTR [esi+0x4],0x0
  43cd57:	je     0x43cd66
  43cd59:	lea    edx,[esi+0x4]
  43cd5c:	mov    eax,ds:0x41be90
  43cd61:	call   0x41b14c
  43cd66:	mov    edx,ebx
  43cd68:	and    dl,0xfc
  43cd6b:	mov    eax,esi
  43cd6d:	call   0x414058
  43cd72:	test   bl,bl
  43cd74:	jle    0x43cd7d
  43cd76:	mov    eax,esi
  43cd78:	call   0x4043fc
  43cd7d:	pop    esi
  43cd7e:	pop    ebx
  43cd7f:	ret    
  43cd80:	push   ebx
  43cd81:	push   esi
  43cd82:	mov    esi,edx
  43cd84:	mov    ebx,eax
  43cd86:	mov    eax,esi
  43cd88:	mov    edx,DWORD PTR ds:0x43bda0
  43cd8e:	call   0x40422c
  43cd93:	test   al,al
  43cd95:	je     0x43cdd7
  43cd97:	mov    eax,esi
  43cd99:	mov    edx,DWORD PTR ds:0x43bda0
  43cd9f:	call   0x404250
  43cda4:	mov    esi,eax
  43cda6:	lea    eax,[esi+0x8]
  43cda9:	mov    edx,DWORD PTR [ebx+0x8]
  43cdac:	call   0x404fdc
  43cdb1:	mov    eax,DWORD PTR [ebx+0xc]
  43cdb4:	mov    DWORD PTR [esi+0xc],eax
  43cdb7:	lea    eax,[esi+0x10]
  43cdba:	mov    edx,DWORD PTR [ebx+0x10]
  43cdbd:	call   0x404fdc
  43cdc2:	lea    eax,[esi+0x14]
  43cdc5:	mov    edx,DWORD PTR [ebx+0x14]
  43cdc8:	call   0x404fdc
  43cdcd:	movzx  eax,BYTE PTR [ebx+0x18]
  43cdd1:	mov    BYTE PTR [esi+0x18],al
  43cdd4:	pop    esi
  43cdd5:	pop    ebx
  43cdd6:	ret    
  43cdd7:	mov    edx,esi
  43cdd9:	mov    eax,ebx
  43cddb:	call   0x414168
  43cde0:	pop    esi
  43cde1:	pop    ebx
  43cde2:	ret    
  43cde3:	nop
  43cde4:	push   ebx
  43cde5:	mov    ebx,eax
  43cde7:	lea    eax,[ebx+0x10]
  43cdea:	call   0x404f88
  43cdef:	lea    eax,[ebx+0x14]
  43cdf2:	call   0x404f88
  43cdf7:	lea    eax,[ebx+0x8]
  43cdfa:	call   0x404f88
  43cdff:	xor    eax,eax
  43ce01:	mov    DWORD PTR [ebx+0xc],eax
  43ce04:	pop    ebx
  43ce05:	ret    
  43ce06:	mov    eax,eax
  43ce08:	push   ebp
  43ce09:	mov    ebp,esp
  43ce0b:	push   0x0
  43ce0d:	push   ebx
  43ce0e:	push   esi
  43ce0f:	push   edi
  43ce10:	mov    edi,edx
  43ce12:	mov    ebx,eax
  43ce14:	xor    eax,eax
  43ce16:	push   ebp
  43ce17:	push   0x43cec2
  43ce1c:	push   DWORD PTR fs:[eax]
  43ce1f:	mov    DWORD PTR fs:[eax],esp
  43ce22:	mov    esi,DWORD PTR [ebx+0x4]
  43ce25:	test   esi,esi
  43ce27:	je     0x43ce50
  43ce29:	lea    edx,[ebp-0x4]
  43ce2c:	mov    eax,esi
  43ce2e:	mov    ecx,DWORD PTR [eax]
  43ce30:	call   DWORD PTR [ecx+0x24]
  43ce33:	mov    eax,DWORD PTR [ebp-0x4]
  43ce36:	call   0x405248
  43ce3b:	test   eax,eax
  43ce3d:	jle    0x43ceac
  43ce3f:	mov    ecx,DWORD PTR [ebp-0x4]
  43ce42:	mov    edx,0x43ced8
  43ce47:	mov    eax,edi
  43ce49:	call   0x437440
  43ce4e:	jmp    0x43ceac
  43ce50:	cmp    BYTE PTR [ebx+0x18],0x0
  43ce54:	je     0x43ceac
  43ce56:	mov    dl,0x1
  43ce58:	mov    eax,ds:0x438820
  43ce5d:	call   0x438d8c
  43ce62:	mov    esi,eax
  43ce64:	mov    DWORD PTR [ebx+0x4],esi
  43ce67:	mov    ecx,DWORD PTR [ebx+0x14]
  43ce6a:	mov    edx,0x43cef4
  43ce6f:	mov    eax,DWORD PTR [esi+0x8]
  43ce72:	call   0x437440
  43ce77:	mov    ecx,DWORD PTR [ebx+0x8]
  43ce7a:	mov    edx,0x43cf08
  43ce7f:	mov    eax,DWORD PTR [esi+0x8]
  43ce82:	call   0x437440
  43ce87:	lea    edx,[ebp-0x4]
  43ce8a:	mov    eax,esi
  43ce8c:	mov    ecx,DWORD PTR [eax]
  43ce8e:	call   DWORD PTR [ecx+0x24]
  43ce91:	mov    eax,DWORD PTR [ebp-0x4]
  43ce94:	call   0x405248
  43ce99:	test   eax,eax
  43ce9b:	jle    0x43ceac
  43ce9d:	mov    ecx,DWORD PTR [ebp-0x4]
  43cea0:	mov    edx,0x43ced8
  43cea5:	mov    eax,edi
  43cea7:	call   0x437440
  43ceac:	xor    eax,eax
  43ceae:	pop    edx
  43ceaf:	pop    ecx
  43ceb0:	pop    ecx
  43ceb1:	mov    DWORD PTR fs:[eax],edx
  43ceb4:	push   0x43cec9
  43ceb9:	lea    eax,[ebp-0x4]
  43cebc:	call   0x404f88
  43cec1:	ret    
  43cec2:	jmp    0x40481c
  43cec7:	jmp    0x43ceb9
  43cec9:	pop    edi
  43ceca:	pop    esi
  43cecb:	pop    ebx
  43cecc:	pop    ecx
  43cecd:	pop    ebp
  43cece:	ret    
  43cecf:	add    bh,bh
  43ced1:	(bad)  
  43ced2:	(bad)  
  43ced3:	call   DWORD PTR [ebx]
  43ced5:	add    BYTE PTR [eax],al
  43ced7:	add    BYTE PTR [eax+0x72],dl
  43ceda:	outs   dx,DWORD PTR ds:[esi]
  43cedb:	js     0x43cf56
  43cedd:	sub    eax,0x68747541
  43cee2:	outs   dx,DWORD PTR ds:[esi]
  43cee3:	jb     0x43cf4e
  43cee5:	jp     0x43cf48
  43cee7:	je     0x43cf52
  43cee9:	outs   dx,DWORD PTR ds:[esi]
  43ceea:	outs   dx,BYTE PTR ds:[esi]
  43ceeb:	add    bh,bh
  43ceed:	(bad)  
  43ceee:	(bad)  
  43ceef:	dec    DWORD PTR [eax]
  43cef1:	add    BYTE PTR [eax],al
  43cef3:	add    BYTE PTR [ebp+0x73],dl
  43cef6:	gs jb  0x43cf67
  43cef9:	popa   
  43cefa:	ins    DWORD PTR es:[edi],dx
  43cefb:	add    BYTE PTR gs:[eax],al
  43cefe:	add    BYTE PTR [eax],al
  43cf00:	(bad)  
  43cf01:	(bad)  
  43cf02:	(bad)  
  43cf03:	dec    DWORD PTR [eax]
  43cf05:	add    BYTE PTR [eax],al
  43cf07:	add    BYTE PTR [eax+0x61],dl
  43cf0a:	jae    0x43cf7f
  43cf0c:	ja     0x43cf7d
  43cf0e:	jb     0x43cf74
  43cf10:	add    BYTE PTR [eax],al
  43cf12:	add    BYTE PTR [eax],al
  43cf14:	push   ebx
  43cf15:	push   esi
  43cf16:	mov    esi,edx
  43cf18:	mov    ebx,eax
  43cf1a:	cmp    esi,DWORD PTR [ebx+0xc]
  43cf1d:	je     0x43cf2c
  43cf1f:	lea    edx,[ebx+0x4]
  43cf22:	mov    eax,ds:0x41be90
  43cf27:	call   0x41b14c
  43cf2c:	mov    DWORD PTR [ebx+0xc],esi
  43cf2f:	pop    esi
  43cf30:	pop    ebx
  43cf31:	ret    
  43cf32:	mov    eax,eax
  43cf34:	push   ebx
  43cf35:	push   esi
  43cf36:	mov    esi,edx
  43cf38:	mov    ebx,eax
  43cf3a:	mov    edx,DWORD PTR [ebx+0x10]
  43cf3d:	mov    eax,esi
  43cf3f:	call   0x41d948
  43cf44:	test   al,al
  43cf46:	jne    0x43cf55
  43cf48:	lea    edx,[ebx+0x4]
  43cf4b:	mov    eax,ds:0x41be90
  43cf50:	call   0x41b14c
  43cf55:	lea    eax,[ebx+0x10]
  43cf58:	mov    edx,esi
  43cf5a:	call   0x404fdc
  43cf5f:	pop    esi
  43cf60:	pop    ebx
  43cf61:	ret    
  43cf62:	mov    eax,eax
  43cf64:	push   ebp
  43cf65:	mov    ebp,esp
  43cf67:	mov    ecx,0x5
  43cf6c:	push   0x0
  43cf6e:	push   0x0
  43cf70:	dec    ecx
  43cf71:	jne    0x43cf6c
  43cf73:	push   ebx
  43cf74:	push   esi
  43cf75:	mov    ebx,eax
  43cf77:	xor    eax,eax
  43cf79:	push   ebp
  43cf7a:	push   0x43d0c9
  43cf7f:	push   DWORD PTR fs:[eax]
  43cf82:	mov    DWORD PTR fs:[eax],esp
  43cf85:	mov    eax,ebx
  43cf87:	call   0x43c5fc
  43cf8c:	mov    esi,DWORD PTR [ebx+0x8]
  43cf8f:	lea    ecx,[ebp-0xc]
  43cf92:	mov    edx,0x43d0e0
  43cf97:	mov    eax,esi
  43cf99:	call   0x437220
  43cf9e:	mov    edx,DWORD PTR [ebp-0xc]
  43cfa1:	lea    eax,[ebx+0x68]
  43cfa4:	call   0x404fdc
  43cfa9:	lea    ecx,[ebp-0x10]
  43cfac:	mov    edx,0x43d0f0
  43cfb1:	mov    eax,esi
  43cfb3:	call   0x437220
  43cfb8:	mov    edx,DWORD PTR [ebp-0x10]
  43cfbb:	lea    eax,[ebx+0x6c]
  43cfbe:	call   0x404fdc
  43cfc3:	lea    ecx,[ebp-0x14]
  43cfc6:	mov    edx,0x43d108
  43cfcb:	mov    eax,esi
  43cfcd:	call   0x437220
  43cfd2:	mov    edx,DWORD PTR [ebp-0x14]
  43cfd5:	lea    eax,[ebx+0x70]
  43cfd8:	call   0x404fdc
  43cfdd:	lea    ecx,[ebp-0x18]
  43cfe0:	mov    edx,0x43d120
  43cfe5:	mov    eax,esi
  43cfe7:	call   0x437220
  43cfec:	mov    edx,DWORD PTR [ebp-0x18]
  43cfef:	lea    eax,[ebx+0x74]
  43cff2:	call   0x404fdc
  43cff7:	lea    ecx,[ebp-0x1c]
  43cffa:	mov    edx,0x43d138
  43cfff:	mov    eax,esi
  43d001:	call   0x437220
  43d006:	mov    edx,DWORD PTR [ebp-0x1c]
  43d009:	lea    eax,[ebx+0x90]
  43d00f:	call   0x404fdc
  43d014:	lea    ecx,[ebp-0x20]
  43d017:	mov    edx,0x43d148
  43d01c:	mov    eax,esi
  43d01e:	call   0x437220
  43d023:	mov    edx,DWORD PTR [ebp-0x20]
  43d026:	lea    eax,[ebx+0x7c]
  43d029:	call   0x404fdc
  43d02e:	lea    ecx,[ebp-0x24]
  43d031:	mov    edx,0x43d158
  43d036:	mov    eax,esi
  43d038:	call   0x437220
  43d03d:	mov    edx,DWORD PTR [ebp-0x24]
  43d040:	lea    eax,[ebx+0x84]
  43d046:	call   0x404fdc
  43d04b:	lea    ecx,[ebp-0x28]
  43d04e:	mov    edx,0x43d168
  43d053:	mov    eax,esi
  43d055:	call   0x437220
  43d05a:	mov    edx,DWORD PTR [ebp-0x28]
  43d05d:	lea    eax,[ebx+0x88]
  43d063:	call   0x404fdc
  43d068:	lea    ecx,[ebp-0x4]
  43d06b:	mov    edx,0x43d17c
  43d070:	mov    eax,esi
  43d072:	call   0x437220
  43d077:	lea    eax,[ebp-0x8]
  43d07a:	call   0x404f88
  43d07f:	mov    eax,DWORD PTR [ebp-0x4]
  43d082:	call   0x405248
  43d087:	test   eax,eax
  43d089:	jle    0x43d0a0
  43d08b:	push   0x1
  43d08d:	lea    eax,[ebp-0x8]
  43d090:	push   eax
  43d091:	lea    eax,[ebp-0x4]
  43d094:	mov    cl,0x1
  43d096:	mov    edx,0x43d18c
  43d09b:	call   0x41c7c4
  43d0a0:	lea    eax,[ebx+0x98]
  43d0a6:	mov    edx,DWORD PTR [ebp-0x8]
  43d0a9:	call   0x404fdc
  43d0ae:	xor    eax,eax
  43d0b0:	pop    edx
  43d0b1:	pop    ecx
  43d0b2:	pop    ecx
  43d0b3:	mov    DWORD PTR fs:[eax],edx
  43d0b6:	push   0x43d0d0
  43d0bb:	lea    eax,[ebp-0x28]
  43d0be:	mov    edx,0xa
  43d0c3:	call   0x404fac
  43d0c8:	ret    
  43d0c9:	jmp    0x40481c
  43d0ce:	jmp    0x43d0bb
  43d0d0:	pop    esi
  43d0d1:	pop    ebx
  43d0d2:	mov    esp,ebp
  43d0d4:	pop    ebp
  43d0d5:	ret    
  43d0d6:	add    BYTE PTR [eax],al
  43d0d8:	(bad)  
  43d0d9:	(bad)  
  43d0da:	(bad)  
  43d0db:	inc    DWORD PTR [esi]
  43d0dd:	add    BYTE PTR [eax],al
  43d0df:	add    BYTE PTR [ecx+0x63],al
  43d0e2:	arpl   WORD PTR [ebp+0x70],sp
  43d0e5:	je     0x43d0e7
  43d0e7:	add    bh,bh
  43d0e9:	(bad)  
  43d0ea:	(bad)  
  43d0eb:	dec    DWORD PTR [esi]
  43d0ed:	add    BYTE PTR [eax],al
  43d0ef:	add    BYTE PTR [ecx+0x63],al
  43d0f2:	arpl   WORD PTR [ebp+0x70],sp
  43d0f5:	je     0x43d124
  43d0f7:	inc    ebx
  43d0f8:	push   0x65737261
  43d0fd:	je     0x43d0ff
  43d0ff:	add    bh,bh
  43d101:	(bad)  
  43d102:	(bad)  
  43d103:	dec    DWORD PTR [edi]
  43d105:	add    BYTE PTR [eax],al
  43d107:	add    BYTE PTR [ecx+0x63],al
  43d10a:	arpl   WORD PTR [ebp+0x70],sp
  43d10d:	je     0x43d13c
  43d10f:	inc    ebp
  43d110:	outs   dx,BYTE PTR ds:[esi]
  43d111:	arpl   WORD PTR [edi+0x64],bp
  43d114:	imul   ebp,DWORD PTR [esi+0x67],0xffffff00
  43d11b:	dec    DWORD PTR [edi]
  43d11d:	add    BYTE PTR [eax],al
  43d11f:	add    BYTE PTR [ecx+0x63],al
  43d122:	arpl   WORD PTR [ebp+0x70],sp
  43d125:	je     0x43d154
  43d127:	dec    esp
  43d128:	popa   
  43d129:	outs   dx,BYTE PTR ds:[esi]
  43d12a:	addr16 jne 0x43d18e
  43d12d:	addr16 gs add bh,bh
  43d131:	(bad)  
  43d132:	(bad)  
  43d133:	inc    DWORD PTR [eax+eax*1]
  43d136:	add    BYTE PTR [eax],al
  43d138:	dec    eax
  43d139:	outs   dx,DWORD PTR ds:[esi]
  43d13a:	jae    0x43d1b0
  43d13c:	add    BYTE PTR [eax],al
  43d13e:	add    BYTE PTR [eax],al
  43d140:	(bad)  
  43d141:	(bad)  
  43d142:	(bad)  
  43d143:	inc    DWORD PTR [eax+eax*1]
  43d146:	add    BYTE PTR [eax],al
  43d148:	inc    esi
  43d149:	jb     0x43d1ba
  43d14b:	ins    DWORD PTR es:[edi],dx
  43d14c:	add    BYTE PTR [eax],al
  43d14e:	add    BYTE PTR [eax],al
  43d150:	(bad)  
  43d151:	(bad)  
  43d152:	(bad)  
  43d153:	inc    DWORD PTR [edi]
  43d155:	add    BYTE PTR [eax],al
  43d157:	add    BYTE PTR [edx+0x65],dl
  43d15a:	data16 gs jb 0x43d1c3
  43d15e:	jb     0x43d160
  43d160:	(bad)  
  43d161:	(bad)  
  43d162:	(bad)  
  43d163:	dec    DWORD PTR [edx]
  43d165:	add    BYTE PTR [eax],al
  43d167:	add    BYTE PTR [ebp+0x73],dl
  43d16a:	gs jb  0x43d19a
  43d16d:	inc    ecx
  43d16e:	outs   dx,BYTE PTR gs:[si]
  43d171:	je     0x43d173
  43d173:	add    bh,bh
  43d175:	(bad)  
  43d176:	(bad)  
  43d177:	inc    DWORD PTR ds:0x52000000
  43d17d:	popa   
  43d17e:	outs   dx,BYTE PTR ds:[esi]
  43d17f:	add    BYTE PTR gs:[bx+si],al
  43d183:	add    bh,bh
  43d185:	(bad)  
  43d186:	(bad)  
  43d187:	inc    DWORD PTR [ecx]
  43d189:	add    BYTE PTR [eax],al
  43d18b:	add    BYTE PTR ds:0x53000000,bh
  43d191:	push   esi
  43d192:	mov    esi,edx
  43d194:	mov    ebx,eax
  43d196:	mov    eax,esi
  43d198:	mov    edx,DWORD PTR ds:0x43bf38
  43d19e:	call   0x40422c
  43d1a3:	test   al,al
  43d1a5:	je     0x43d256
  43d1ab:	mov    eax,esi
  43d1ad:	mov    edx,DWORD PTR ds:0x43bf38
  43d1b3:	call   0x404250
  43d1b8:	mov    esi,eax
  43d1ba:	lea    eax,[esi+0x68]
  43d1bd:	mov    edx,DWORD PTR [ebx+0x68]
  43d1c0:	call   0x404fdc
  43d1c5:	lea    eax,[esi+0x6c]
  43d1c8:	mov    edx,DWORD PTR [ebx+0x6c]
  43d1cb:	call   0x404fdc
  43d1d0:	lea    eax,[esi+0x70]
  43d1d3:	mov    edx,DWORD PTR [ebx+0x70]
  43d1d6:	call   0x404fdc
  43d1db:	lea    eax,[esi+0x74]
  43d1de:	mov    edx,DWORD PTR [ebx+0x74]
  43d1e1:	call   0x404fdc
  43d1e6:	lea    eax,[esi+0x7c]
  43d1e9:	mov    edx,DWORD PTR [ebx+0x7c]
  43d1ec:	call   0x404fdc
  43d1f1:	lea    eax,[esi+0x8c]
  43d1f7:	mov    edx,DWORD PTR [ebx+0x8c]
  43d1fd:	call   0x404fdc
  43d202:	lea    eax,[esi+0x80]
  43d208:	mov    edx,DWORD PTR [ebx+0x80]
  43d20e:	call   0x404fdc
  43d213:	lea    eax,[esi+0x84]
  43d219:	mov    edx,DWORD PTR [ebx+0x84]
  43d21f:	call   0x404fdc
  43d224:	lea    eax,[esi+0x88]
  43d22a:	mov    edx,DWORD PTR [ebx+0x88]
  43d230:	call   0x404fdc
  43d235:	movzx  eax,BYTE PTR [ebx+0x9c]
  43d23c:	mov    BYTE PTR [esi+0x9c],al
  43d242:	lea    eax,[esi+0x98]
  43d248:	mov    edx,DWORD PTR [ebx+0x98]
  43d24e:	call   0x404fdc
  43d253:	pop    esi
  43d254:	pop    ebx
  43d255:	ret    
  43d256:	mov    edx,esi
  43d258:	mov    eax,ebx
  43d25a:	call   0x43c4b0
  43d25f:	pop    esi
  43d260:	pop    ebx
  43d261:	ret    
  43d262:	mov    eax,eax
  43d264:	push   ebx
  43d265:	mov    ebx,eax
  43d267:	lea    eax,[ebx+0x68]
  43d26a:	mov    edx,0x43d2b0
  43d26f:	call   0x404fdc
  43d274:	lea    eax,[ebx+0x6c]
  43d277:	call   0x404f88
  43d27c:	lea    eax,[ebx+0x88]
  43d282:	mov    edx,0x43d2c8
  43d287:	call   0x404fdc
  43d28c:	mov    BYTE PTR [ebx+0x9c],0x0
  43d293:	lea    eax,[ebx+0x98]
  43d299:	call   0x404f88
  43d29e:	mov    eax,ebx
  43d2a0:	call   0x43c574
  43d2a5:	pop    ebx
  43d2a6:	ret    
  43d2a7:	add    bh,bh
  43d2a9:	(bad)  
  43d2aa:	(bad)  
  43d2ab:	dec    DWORD PTR [esi]
  43d2ad:	add    BYTE PTR [eax],al
  43d2af:	add    BYTE PTR [ebp+eiz*2+0x78],dh
  43d2b3:	je     0x43d2e4
  43d2b5:	push   0x2c6c6d74
  43d2ba:	and    BYTE PTR [edx],ch
  43d2bc:	das    
  43d2bd:	sub    al,BYTE PTR [eax]
  43d2bf:	add    bh,bh
  43d2c1:	(bad)  
  43d2c2:	(bad)  
  43d2c3:	jmp    DWORD PTR [esi]
  43d2c5:	add    BYTE PTR [eax],al
  43d2c7:	add    BYTE PTR [ebp+0x6f],cl
  43d2ca:	jp     0x43d335
  43d2cc:	ins    BYTE PTR es:[edi],dx
  43d2cd:	ins    BYTE PTR es:[edi],dx
  43d2ce:	popa   
  43d2cf:	das    
  43d2d0:	xor    ebp,DWORD PTR [esi]
  43d2d2:	xor    BYTE PTR [eax],ah
  43d2d4:	sub    BYTE PTR [ebx+0x6f],ah
  43d2d7:	ins    DWORD PTR es:[edi],dx
  43d2d8:	jo     0x43d33b
  43d2da:	je     0x43d345
  43d2dc:	bound  ebp,QWORD PTR [ebp+eiz*2+0x3b]
  43d2e0:	and    BYTE PTR [ecx+0x6e],cl
  43d2e3:	fs jns 0x43d306
  43d2e6:	dec    esp
  43d2e7:	imul   esp,DWORD PTR [edx+0x72],0x29797261
  43d2ee:	add    BYTE PTR [eax],al
  43d2f0:	push   ebp
  43d2f1:	mov    ebp,esp
  43d2f3:	push   0x0
  43d2f5:	push   0x0
  43d2f7:	push   0x0
  43d2f9:	push   ebx
  43d2fa:	push   esi
  43d2fb:	push   edi
  43d2fc:	mov    ebx,eax
  43d2fe:	xor    eax,eax
  43d300:	push   ebp
  43d301:	push   0x43d537
  43d306:	push   DWORD PTR fs:[eax]
  43d309:	mov    DWORD PTR fs:[eax],esp
  43d30c:	mov    eax,ebx
  43d30e:	call   0x43c9e8
  43d313:	mov    esi,DWORD PTR [ebx+0x8]
  43d316:	mov    eax,DWORD PTR [ebx+0x94]
  43d31c:	call   0x405248
  43d321:	test   eax,eax
  43d323:	jle    0x43d337
  43d325:	mov    ecx,DWORD PTR [ebx+0x94]
  43d32b:	mov    edx,0x43d550
  43d330:	mov    eax,esi
  43d332:	call   0x437440
  43d337:	mov    eax,DWORD PTR [ebx+0x90]
  43d33d:	call   0x405248
  43d342:	test   eax,eax
  43d344:	jle    0x43d358
  43d346:	mov    ecx,DWORD PTR [ebx+0x90]
  43d34c:	mov    edx,0x43d56c
  43d351:	mov    eax,esi
  43d353:	call   0x437440
  43d358:	mov    eax,DWORD PTR [ebx+0x68]
  43d35b:	call   0x405248
  43d360:	test   eax,eax
  43d362:	jle    0x43d373
  43d364:	mov    ecx,DWORD PTR [ebx+0x68]
  43d367:	mov    edx,0x43d57c
  43d36c:	mov    eax,esi
  43d36e:	call   0x437440
  43d373:	mov    eax,DWORD PTR [ebx+0x6c]
  43d376:	call   0x405248
  43d37b:	test   eax,eax
  43d37d:	jle    0x43d38e
  43d37f:	mov    ecx,DWORD PTR [ebx+0x6c]
  43d382:	mov    edx,0x43d58c
  43d387:	mov    eax,esi
  43d389:	call   0x437440
  43d38e:	mov    eax,DWORD PTR [ebx+0x70]
  43d391:	call   0x405248
  43d396:	test   eax,eax
  43d398:	jle    0x43d3a9
  43d39a:	mov    ecx,DWORD PTR [ebx+0x70]
  43d39d:	mov    edx,0x43d5a4
  43d3a2:	mov    eax,esi
  43d3a4:	call   0x437440
  43d3a9:	mov    eax,DWORD PTR [ebx+0x74]
  43d3ac:	call   0x405248
  43d3b1:	test   eax,eax
  43d3b3:	jle    0x43d3c4
  43d3b5:	mov    ecx,DWORD PTR [ebx+0x74]
  43d3b8:	mov    edx,0x43d5bc
  43d3bd:	mov    eax,esi
  43d3bf:	call   0x437440
  43d3c4:	mov    eax,DWORD PTR [ebx+0x7c]
  43d3c7:	call   0x405248
  43d3cc:	test   eax,eax
  43d3ce:	jle    0x43d3df
  43d3d0:	mov    ecx,DWORD PTR [ebx+0x7c]
  43d3d3:	mov    edx,0x43d5d4
  43d3d8:	mov    eax,esi
  43d3da:	call   0x437440
  43d3df:	mov    eax,DWORD PTR [ebx+0x84]
  43d3e5:	call   0x405248
  43d3ea:	test   eax,eax
  43d3ec:	jle    0x43d400
  43d3ee:	mov    ecx,DWORD PTR [ebx+0x84]
  43d3f4:	mov    edx,0x43d5e4
  43d3f9:	mov    eax,esi
  43d3fb:	call   0x437440
  43d400:	mov    eax,DWORD PTR [ebx+0x88]
  43d406:	call   0x405248
  43d40b:	test   eax,eax
  43d40d:	jle    0x43d421
  43d40f:	mov    ecx,DWORD PTR [ebx+0x88]
  43d415:	mov    edx,0x43d5f4
  43d41a:	mov    eax,esi
  43d41c:	call   0x437440
  43d421:	mov    eax,DWORD PTR [ebx+0x98]
  43d427:	call   0x405248
  43d42c:	test   eax,eax
  43d42e:	jle    0x43d452
  43d430:	lea    eax,[ebp-0x8]
  43d433:	mov    ecx,DWORD PTR [ebx+0x98]
  43d439:	mov    edx,0x43d608
  43d43e:	call   0x4052a0
  43d443:	mov    ecx,DWORD PTR [ebp-0x8]
  43d446:	mov    edx,0x43d618
  43d44b:	mov    eax,esi
  43d44d:	call   0x437440
  43d452:	fld    QWORD PTR [ebx+0x58]
  43d455:	fcomp  DWORD PTR ds:0x43d620
  43d45b:	fstsw  ax
  43d45e:	sahf   
  43d45f:	jbe    0x43d483
  43d461:	push   DWORD PTR [ebx+0x5c]
  43d464:	push   DWORD PTR [ebx+0x58]
  43d467:	lea    edx,[ebp-0xc]
  43d46a:	mov    eax,ds:0x41be90
  43d46f:	call   0x41b550
  43d474:	mov    ecx,DWORD PTR [ebp-0xc]
  43d477:	mov    edx,0x43d62c
  43d47c:	mov    eax,esi
  43d47e:	call   0x437440
  43d483:	mov    edi,DWORD PTR [ebx+0xa0]
  43d489:	test   edi,edi
  43d48b:	je     0x43d4b4
  43d48d:	lea    edx,[ebp-0x4]
  43d490:	mov    eax,edi
  43d492:	mov    ecx,DWORD PTR [eax]
  43d494:	call   DWORD PTR [ecx+0x24]
  43d497:	mov    eax,DWORD PTR [ebp-0x4]
  43d49a:	call   0x405248
  43d49f:	test   eax,eax
  43d4a1:	jle    0x43d51c
  43d4a3:	mov    ecx,DWORD PTR [ebp-0x4]
  43d4a6:	mov    edx,0x43d648
  43d4ab:	mov    eax,esi
  43d4ad:	call   0x437440
  43d4b2:	jmp    0x43d51c
  43d4b4:	cmp    BYTE PTR [ebx+0x9c],0x0
  43d4bb:	je     0x43d51c
  43d4bd:	mov    dl,0x1
  43d4bf:	mov    eax,ds:0x438820
  43d4c4:	call   0x438d8c
  43d4c9:	mov    edi,eax
  43d4cb:	mov    DWORD PTR [ebx+0xa0],edi
  43d4d1:	mov    eax,DWORD PTR [edi+0x8]
  43d4d4:	mov    ecx,DWORD PTR [ebx+0x8c]
  43d4da:	mov    edx,0x43d660
  43d4df:	call   0x437440
  43d4e4:	mov    eax,DWORD PTR [edi+0x8]
  43d4e7:	mov    ecx,DWORD PTR [ebx+0x80]
  43d4ed:	mov    edx,0x43d674
  43d4f2:	call   0x437440
  43d4f7:	lea    edx,[ebp-0x4]
  43d4fa:	mov    eax,edi
  43d4fc:	mov    ecx,DWORD PTR [eax]
  43d4fe:	call   DWORD PTR [ecx+0x24]
  43d501:	mov    eax,DWORD PTR [ebp-0x4]
  43d504:	call   0x405248
  43d509:	test   eax,eax
  43d50b:	jle    0x43d51c
  43d50d:	mov    ecx,DWORD PTR [ebp-0x4]
  43d510:	mov    edx,0x43d648
  43d515:	mov    eax,esi
  43d517:	call   0x437440
  43d51c:	xor    eax,eax
  43d51e:	pop    edx
  43d51f:	pop    ecx
  43d520:	pop    ecx
  43d521:	mov    DWORD PTR fs:[eax],edx
  43d524:	push   0x43d53e
  43d529:	lea    eax,[ebp-0xc]
  43d52c:	mov    edx,0x3
  43d531:	call   0x404fac
  43d536:	ret    
  43d537:	jmp    0x40481c
  43d53c:	jmp    0x43d529
  43d53e:	pop    edi
  43d53f:	pop    esi
  43d540:	pop    ebx
  43d541:	mov    esp,ebp
  43d543:	pop    ebp
  43d544:	ret    
  43d545:	add    BYTE PTR [eax],al
  43d547:	add    bh,bh
  43d549:	(bad)  
  43d54a:	(bad)  
  43d54b:	call   DWORD PTR [eax]
  43d54d:	add    BYTE PTR [eax],al
  43d54f:	add    BYTE PTR [eax+0x72],dl
  43d552:	outs   dx,DWORD PTR ds:[esi]
  43d553:	js     0x43d5ce
  43d555:	sub    eax,0x6e6e6f43
  43d55a:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43d55f:	outs   dx,BYTE PTR ds:[esi]
  43d560:	add    BYTE PTR [eax],al
  43d562:	add    BYTE PTR [eax],al
  43d564:	(bad)  
  43d565:	(bad)  
  43d566:	(bad)  
  43d567:	inc    DWORD PTR [eax+eax*1]
  43d56a:	add    BYTE PTR [eax],al
  43d56c:	dec    eax
  43d56d:	outs   dx,DWORD PTR ds:[esi]
  43d56e:	jae    0x43d5e4
  43d570:	add    BYTE PTR [eax],al
  43d572:	add    BYTE PTR [eax],al
  43d574:	(bad)  
  43d575:	(bad)  
  43d576:	(bad)  
  43d577:	inc    DWORD PTR [esi]
  43d579:	add    BYTE PTR [eax],al
  43d57b:	add    BYTE PTR [ecx+0x63],al
  43d57e:	arpl   WORD PTR [ebp+0x70],sp
  43d581:	je     0x43d583
  43d583:	add    bh,bh
  43d585:	(bad)  
  43d586:	(bad)  
  43d587:	dec    DWORD PTR [esi]
  43d589:	add    BYTE PTR [eax],al
  43d58b:	add    BYTE PTR [ecx+0x63],al
  43d58e:	arpl   WORD PTR [ebp+0x70],sp
  43d591:	je     0x43d5c0
  43d593:	inc    ebx
  43d594:	push   0x65737261
  43d599:	je     0x43d59b
  43d59b:	add    bh,bh
  43d59d:	(bad)  
  43d59e:	(bad)  
  43d59f:	dec    DWORD PTR [edi]
  43d5a1:	add    BYTE PTR [eax],al
  43d5a3:	add    BYTE PTR [ecx+0x63],al
  43d5a6:	arpl   WORD PTR [ebp+0x70],sp
  43d5a9:	je     0x43d5d8
  43d5ab:	inc    ebp
  43d5ac:	outs   dx,BYTE PTR ds:[esi]
  43d5ad:	arpl   WORD PTR [edi+0x64],bp
  43d5b0:	imul   ebp,DWORD PTR [esi+0x67],0xffffff00
  43d5b7:	dec    DWORD PTR [edi]
  43d5b9:	add    BYTE PTR [eax],al
  43d5bb:	add    BYTE PTR [ecx+0x63],al
  43d5be:	arpl   WORD PTR [ebp+0x70],sp
  43d5c1:	je     0x43d5f0
  43d5c3:	dec    esp
  43d5c4:	popa   
  43d5c5:	outs   dx,BYTE PTR ds:[esi]
  43d5c6:	addr16 jne 0x43d62a
  43d5c9:	addr16 gs add bh,bh
  43d5cd:	(bad)  
  43d5ce:	(bad)  
  43d5cf:	inc    DWORD PTR [eax+eax*1]
  43d5d2:	add    BYTE PTR [eax],al
  43d5d4:	inc    esi
  43d5d5:	jb     0x43d646
  43d5d7:	ins    DWORD PTR es:[edi],dx
  43d5d8:	add    BYTE PTR [eax],al
  43d5da:	add    BYTE PTR [eax],al
  43d5dc:	(bad)  
  43d5dd:	(bad)  
  43d5de:	(bad)  
  43d5df:	inc    DWORD PTR [edi]
  43d5e1:	add    BYTE PTR [eax],al
  43d5e3:	add    BYTE PTR [edx+0x65],dl
  43d5e6:	data16 gs jb 0x43d64f
  43d5ea:	jb     0x43d5ec
  43d5ec:	(bad)  
  43d5ed:	(bad)  
  43d5ee:	(bad)  
  43d5ef:	dec    DWORD PTR [edx]
  43d5f1:	add    BYTE PTR [eax],al
  43d5f3:	add    BYTE PTR [ebp+0x73],dl
  43d5f6:	gs jb  0x43d626
  43d5f9:	inc    ecx
  43d5fa:	outs   dx,BYTE PTR gs:[si]
  43d5fd:	je     0x43d5ff
  43d5ff:	add    bh,bh
  43d601:	(bad)  
  43d602:	(bad)  
  43d603:	inc    DWORD PTR [esi]
  43d605:	add    BYTE PTR [eax],al
  43d607:	add    BYTE PTR [edx+0x79],ah
  43d60a:	je     0x43d671
  43d60c:	jae    0x43d64b
  43d60e:	add    BYTE PTR [eax],al
  43d610:	(bad)  
  43d611:	(bad)  
  43d612:	(bad)  
  43d613:	inc    DWORD PTR ds:0x52000000
  43d619:	popa   
  43d61a:	outs   dx,BYTE PTR ds:[esi]
  43d61b:	add    BYTE PTR gs:[bx+si],al
  43d61f:	add    BYTE PTR [eax],al
  43d621:	add    BYTE PTR [eax],al
  43d623:	add    bh,bh
  43d625:	(bad)  
  43d626:	(bad)  
  43d627:	call   DWORD PTR [ecx]
  43d629:	add    BYTE PTR [eax],al
  43d62b:	add    BYTE PTR [ecx+0x66],cl
  43d62e:	sub    eax,0x69646f4d
  43d633:	imul   sp,WORD PTR [ebp+0x64],0x532d
  43d639:	imul   ebp,DWORD PTR [esi+0x63],0x65
  43d640:	(bad)  
  43d641:	(bad)  
  43d642:	(bad)  
  43d643:	dec    DWORD PTR ds:0x41000000
  43d649:	jne    0x43d6bf
  43d64b:	push   0x7a69726f
  43d650:	popa   
  43d651:	je     0x43d6bc
  43d653:	outs   dx,DWORD PTR ds:[esi]
  43d654:	outs   dx,BYTE PTR ds:[esi]
  43d655:	add    BYTE PTR [eax],al
  43d657:	add    bh,bh
  43d659:	(bad)  
  43d65a:	(bad)  
  43d65b:	dec    DWORD PTR [eax]
  43d65d:	add    BYTE PTR [eax],al
  43d65f:	add    BYTE PTR [ebp+0x73],dl
  43d662:	gs jb  0x43d6d3
  43d665:	popa   
  43d666:	ins    DWORD PTR es:[edi],dx
  43d667:	add    BYTE PTR gs:[eax],al
  43d66a:	add    BYTE PTR [eax],al
  43d66c:	(bad)  
  43d66d:	(bad)  
  43d66e:	(bad)  
  43d66f:	dec    DWORD PTR [eax]
  43d671:	add    BYTE PTR [eax],al
  43d673:	add    BYTE PTR [eax+0x61],dl
  43d676:	jae    0x43d6eb
  43d678:	ja     0x43d6e9
  43d67a:	jb     0x43d6e0
  43d67c:	add    BYTE PTR [eax],al
  43d67e:	add    BYTE PTR [eax],al
  43d680:	push   ebx
  43d681:	push   esi
  43d682:	call   0x404454
  43d687:	mov    ebx,edx
  43d689:	mov    esi,eax
  43d68b:	cmp    DWORD PTR [esi+0xa0],0x0
  43d692:	je     0x43d6a4
  43d694:	lea    edx,[esi+0xa0]
  43d69a:	mov    eax,ds:0x41be90
  43d69f:	call   0x41b14c
  43d6a4:	mov    edx,ebx
  43d6a6:	and    dl,0xfc
  43d6a9:	mov    eax,esi
  43d6ab:	call   0x43c470
  43d6b0:	test   bl,bl
  43d6b2:	jle    0x43d6bb
  43d6b4:	mov    eax,esi
  43d6b6:	call   0x4043fc
  43d6bb:	pop    esi
  43d6bc:	pop    ebx
  43d6bd:	ret    
  43d6be:	mov    eax,eax
  43d6c0:	push   ebx
  43d6c1:	push   esi
  43d6c2:	test   dl,dl
  43d6c4:	je     0x43d6ce
  43d6c6:	add    esp,0xfffffff0
  43d6c9:	call   0x4043ac
  43d6ce:	mov    ebx,edx
  43d6d0:	mov    esi,eax
  43d6d2:	xor    edx,edx
  43d6d4:	mov    eax,esi
  43d6d6:	call   0x43c408
  43d6db:	lea    eax,[esi+0x38]
  43d6de:	mov    edx,0x43d730
  43d6e3:	call   0x404fdc
  43d6e8:	mov    dl,0x1
  43d6ea:	mov    eax,ds:0x436c90
  43d6ef:	call   0x436dc0
  43d6f4:	mov    DWORD PTR [esi+0x7c],eax
  43d6f7:	mov    dl,0x1
  43d6f9:	mov    eax,ds:0x436c90
  43d6fe:	call   0x436dc0
  43d703:	mov    DWORD PTR [esi+0x78],eax
  43d706:	lea    eax,[esi+0x68]
  43d709:	call   0x404f88
  43d70e:	mov    eax,esi
  43d710:	test   bl,bl
  43d712:	je     0x43d723
  43d714:	call   0x404404
  43d719:	pop    DWORD PTR fs:0x0
  43d720:	add    esp,0xc
  43d723:	mov    eax,esi
  43d725:	pop    esi
  43d726:	pop    ebx
  43d727:	ret    
  43d728:	(bad)  
  43d729:	(bad)  
  43d72a:	(bad)  
  43d72b:	dec    DWORD PTR [ecx]
  43d72d:	add    BYTE PTR [eax],al
  43d72f:	add    BYTE PTR [ebp+eiz*2+0x78],dh
  43d733:	je     0x43d764
  43d735:	push   0x6c6d74
  43d73a:	add    BYTE PTR [eax],al
  43d73c:	push   ebx
  43d73d:	push   esi
  43d73e:	call   0x404454
  43d743:	mov    ebx,edx
  43d745:	mov    esi,eax
  43d747:	lea    edx,[esi+0x7c]
  43d74a:	mov    eax,ds:0x41be90
  43d74f:	call   0x41b14c
  43d754:	lea    edx,[esi+0x78]
  43d757:	mov    eax,ds:0x41be90
  43d75c:	call   0x41b14c
  43d761:	mov    edx,ebx
  43d763:	and    dl,0xfc
  43d766:	mov    eax,esi
  43d768:	call   0x43c470
  43d76d:	test   bl,bl
  43d76f:	jle    0x43d778
  43d771:	mov    eax,esi
  43d773:	call   0x4043fc
  43d778:	pop    esi
  43d779:	pop    ebx
  43d77a:	ret    
  43d77b:	nop
  43d77c:	push   esi
  43d77d:	mov    esi,eax
  43d77f:	mov    eax,DWORD PTR [esi+0x78]
  43d782:	mov    ecx,DWORD PTR [eax]
  43d784:	call   DWORD PTR [ecx+0x8]
  43d787:	pop    esi
  43d788:	ret    
  43d789:	lea    eax,[eax+0x0]
  43d78c:	push   esi
  43d78d:	mov    esi,eax
  43d78f:	mov    eax,DWORD PTR [esi+0x7c]
  43d792:	mov    ecx,DWORD PTR [eax]
  43d794:	call   DWORD PTR [ecx+0x8]
  43d797:	pop    esi
  43d798:	ret    
  43d799:	lea    eax,[eax+0x0]
  43d79c:	push   ebp
  43d79d:	mov    ebp,esp
  43d79f:	xor    ecx,ecx
  43d7a1:	push   ecx
  43d7a2:	push   ecx
  43d7a3:	push   ecx
  43d7a4:	push   ecx
  43d7a5:	push   ebx
  43d7a6:	push   esi
  43d7a7:	mov    ebx,eax
  43d7a9:	xor    eax,eax
  43d7ab:	push   ebp
  43d7ac:	push   0x43d872
  43d7b1:	push   DWORD PTR fs:[eax]
  43d7b4:	mov    DWORD PTR fs:[eax],esp
  43d7b7:	mov    eax,ebx
  43d7b9:	call   0x43c5fc
  43d7be:	mov    esi,DWORD PTR [ebx+0x8]
  43d7c1:	lea    ecx,[ebp-0x4]
  43d7c4:	mov    edx,0x43d888
  43d7c9:	mov    eax,esi
  43d7cb:	call   0x437220
  43d7d0:	mov    edx,DWORD PTR [ebp-0x4]
  43d7d3:	lea    eax,[ebx+0x6c]
  43d7d6:	call   0x404fdc
  43d7db:	lea    ecx,[ebp-0x8]
  43d7de:	mov    edx,0x43d89c
  43d7e3:	mov    eax,esi
  43d7e5:	call   0x437220
  43d7ea:	mov    edx,DWORD PTR [ebp-0x8]
  43d7ed:	lea    eax,[ebx+0x70]
  43d7f0:	call   0x404fdc
  43d7f5:	lea    ecx,[ebp-0xc]
  43d7f8:	mov    edx,0x43d8ac
  43d7fd:	mov    eax,esi
  43d7ff:	call   0x437220
  43d804:	mov    edx,DWORD PTR [ebp-0xc]
  43d807:	lea    eax,[ebx+0x74]
  43d80a:	call   0x404fdc
  43d80f:	mov    eax,DWORD PTR [ebx+0x7c]
  43d812:	mov    edx,DWORD PTR [eax]
  43d814:	call   DWORD PTR [edx+0x44]
  43d817:	mov    ecx,DWORD PTR [ebx+0x7c]
  43d81a:	mov    edx,0x43d8c8
  43d81f:	mov    eax,esi
  43d821:	call   0x436ebc
  43d826:	mov    eax,DWORD PTR [ebx+0x78]
  43d829:	mov    edx,DWORD PTR [eax]
  43d82b:	call   DWORD PTR [edx+0x44]
  43d82e:	mov    ecx,DWORD PTR [ebx+0x78]
  43d831:	mov    edx,0x43d8e4
  43d836:	mov    eax,esi
  43d838:	call   0x436ebc
  43d83d:	lea    ecx,[ebp-0x10]
  43d840:	mov    edx,0x43d900
  43d845:	mov    eax,esi
  43d847:	call   0x437220
  43d84c:	mov    edx,DWORD PTR [ebp-0x10]
  43d84f:	lea    eax,[ebx+0x68]
  43d852:	call   0x404fdc
  43d857:	xor    eax,eax
  43d859:	pop    edx
  43d85a:	pop    ecx
  43d85b:	pop    ecx
  43d85c:	mov    DWORD PTR fs:[eax],edx
  43d85f:	push   0x43d879
  43d864:	lea    eax,[ebp-0x10]
  43d867:	mov    edx,0x4
  43d86c:	call   0x404fac
  43d871:	ret    
  43d872:	jmp    0x40481c
  43d877:	jmp    0x43d864
  43d879:	pop    esi
  43d87a:	pop    ebx
  43d87b:	mov    esp,ebp
  43d87d:	pop    ebp
  43d87e:	ret    
  43d87f:	add    bh,bh
  43d881:	(bad)  
  43d882:	(bad)  
  43d883:	dec    DWORD PTR [eax]
  43d885:	add    BYTE PTR [eax],al
  43d887:	add    BYTE PTR [edi+ebp*2+0x63],cl
  43d88b:	popa   
  43d88c:	je     0x43d8f7
  43d88e:	outs   dx,DWORD PTR ds:[esi]
  43d88f:	outs   dx,BYTE PTR ds:[esi]
  43d890:	add    BYTE PTR [eax],al
  43d892:	add    BYTE PTR [eax],al
  43d894:	(bad)  
  43d895:	(bad)  
  43d896:	(bad)  
  43d897:	inc    DWORD PTR [esi]
  43d899:	add    BYTE PTR [eax],al
  43d89b:	add    BYTE PTR [ebx+0x65],dl
  43d89e:	jb     0x43d916
  43d8a0:	gs jb  0x43d8a3
  43d8a3:	add    bh,bh
  43d8a5:	(bad)  
  43d8a6:	(bad)  
  43d8a7:	call   DWORD PTR [eax]
  43d8a9:	add    BYTE PTR [eax],al
  43d8ab:	add    BYTE PTR [eax+0x72],dl
  43d8ae:	outs   dx,DWORD PTR ds:[esi]
  43d8af:	js     0x43d92a
  43d8b1:	sub    eax,0x6e6e6f43
  43d8b6:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  43d8bb:	outs   dx,BYTE PTR ds:[esi]
  43d8bc:	add    BYTE PTR [eax],al
  43d8be:	add    BYTE PTR [eax],al
  43d8c0:	(bad)  
  43d8c1:	(bad)  
  43d8c2:	(bad)  
  43d8c3:	call   DWORD PTR [eax]
  43d8c5:	add    BYTE PTR [eax],al
  43d8c7:	add    BYTE PTR [edi+0x57],dl
  43d8ca:	push   edi
  43d8cb:	sub    eax,0x68747541
  43d8d0:	outs   dx,BYTE PTR gs:[esi]
  43d8d2:	je     0x43d93d
  43d8d4:	arpl   WORD PTR [ecx+0x74],sp
  43d8d7:	add    BYTE PTR gs:[eax],al
  43d8da:	add    BYTE PTR [eax],al
  43d8dc:	(bad)  
  43d8dd:	(bad)  
  43d8de:	(bad)  
  43d8df:	call   DWORD PTR [edx]
  43d8e1:	add    BYTE PTR [eax],al
  43d8e3:	add    BYTE PTR [eax+0x72],dl
  43d8e6:	outs   dx,DWORD PTR ds:[esi]
  43d8e7:	js     0x43d962
  43d8e9:	sub    eax,0x68747541
  43d8ee:	outs   dx,BYTE PTR gs:[esi]
  43d8f0:	je     0x43d95b
  43d8f2:	arpl   WORD PTR [ecx+0x74],sp
  43d8f5:	add    BYTE PTR gs:[eax],al
  43d8f8:	(bad)  
  43d8f9:	(bad)  
  43d8fa:	(bad)  
  43d8fb:	dec    DWORD PTR ds:0x41000000
  43d901:	arpl   WORD PTR [ebx+0x65],sp
  43d904:	jo     0x43d97a
  43d906:	sub    eax,0x676e6152
  43d90b:	gs jae 0x43d90e
  43d90e:	add    BYTE PTR [eax],al
  43d910:	push   ebp
  43d911:	mov    ebp,esp
  43d913:	add    esp,0xffffffcc
  43d916:	push   ebx
  43d917:	xor    edx,edx
  43d919:	mov    DWORD PTR [ebp-0x34],edx
  43d91c:	mov    DWORD PTR [ebp-0x28],edx
  43d91f:	mov    DWORD PTR [ebp-0xc],edx
  43d922:	mov    DWORD PTR [ebp-0x4],edx
  43d925:	mov    DWORD PTR [ebp-0x8],edx
  43d928:	mov    ebx,eax
  43d92a:	xor    eax,eax
  43d92c:	push   ebp
  43d92d:	push   0x43da57
  43d932:	push   DWORD PTR fs:[eax]
  43d935:	mov    DWORD PTR fs:[eax],esp
  43d938:	mov    eax,ebx
  43d93a:	call   0x43c9e8
  43d93f:	mov    eax,ebx
  43d941:	call   0x43ccdc
  43d946:	test   al,al
  43d948:	jne    0x43d959
  43d94a:	mov    eax,ebx
  43d94c:	call   0x43ccf0
  43d951:	test   al,al
  43d953:	je     0x43da10
  43d959:	lea    eax,[ebp-0x4]
  43d95c:	push   eax
  43d95d:	push   0x2
  43d95f:	lea    eax,[ebp-0xc]
  43d962:	push   eax
  43d963:	lea    eax,[ebx+0x28]
  43d966:	mov    DWORD PTR [ebp-0x24],eax
  43d969:	mov    BYTE PTR [ebp-0x20],0x10
  43d96d:	mov    BYTE PTR [ebp-0x1c],0x2d
  43d971:	mov    BYTE PTR [ebp-0x18],0x2
  43d975:	lea    eax,[ebx+0x20]
  43d978:	mov    DWORD PTR [ebp-0x14],eax
  43d97b:	mov    BYTE PTR [ebp-0x10],0x10
  43d97f:	lea    ecx,[ebp-0x24]
  43d982:	mov    edx,0x43da6c
  43d987:	mov    eax,ds:0x41be90
  43d98c:	call   0x41b0d4
  43d991:	mov    eax,DWORD PTR [ebp-0xc]
  43d994:	push   eax
  43d995:	mov    eax,ebx
  43d997:	call   0x43ccdc
  43d99c:	mov    ecx,0x43da7c
  43d9a1:	pop    edx
  43d9a2:	call   0x41c9c4
  43d9a7:	lea    eax,[ebp-0x8]
  43d9aa:	push   eax
  43d9ab:	push   0x0
  43d9ad:	lea    eax,[ebp-0x28]
  43d9b0:	push   eax
  43d9b1:	lea    eax,[ebx+0x30]
  43d9b4:	mov    DWORD PTR [ebp-0x30],eax
  43d9b7:	mov    BYTE PTR [ebp-0x2c],0x10
  43d9bb:	lea    ecx,[ebp-0x30]
  43d9be:	mov    edx,0x43da88
  43d9c3:	mov    eax,ds:0x41be90
  43d9c8:	call   0x41b0d4
  43d9cd:	mov    eax,DWORD PTR [ebp-0x28]
  43d9d0:	push   eax
  43d9d1:	mov    eax,ebx
  43d9d3:	call   0x43ccf0
  43d9d8:	mov    ecx,0x43da7c
  43d9dd:	pop    edx
  43d9de:	call   0x41c9c4
  43d9e3:	push   0x43da94
  43d9e8:	push   DWORD PTR [ebp-0x4]
  43d9eb:	push   0x43daa4
  43d9f0:	push   DWORD PTR [ebp-0x8]
  43d9f3:	lea    eax,[ebp-0x34]
  43d9f6:	mov    edx,0x4
  43d9fb:	call   0x40531c
  43da00:	mov    ecx,DWORD PTR [ebp-0x34]
  43da03:	mov    edx,0x43dab0
  43da08:	mov    eax,DWORD PTR [ebx+0x8]
  43da0b:	call   0x437440
  43da10:	mov    eax,DWORD PTR [ebx+0x68]
  43da13:	call   0x405248
  43da18:	test   eax,eax
  43da1a:	jle    0x43da2c
  43da1c:	mov    ecx,DWORD PTR [ebx+0x68]
  43da1f:	mov    edx,0x43dac8
  43da24:	mov    eax,DWORD PTR [ebx+0x8]
  43da27:	call   0x437440
  43da2c:	xor    eax,eax
  43da2e:	pop    edx
  43da2f:	pop    ecx
  43da30:	pop    ecx
  43da31:	mov    DWORD PTR fs:[eax],edx
  43da34:	push   0x43da5e
  43da39:	lea    eax,[ebp-0x34]
  43da3c:	call   0x404f88
  43da41:	lea    eax,[ebp-0x28]
  43da44:	call   0x404f88
  43da49:	lea    eax,[ebp-0xc]
  43da4c:	mov    edx,0x3
  43da51:	call   0x404fac
  43da56:	ret    
  43da57:	jmp    0x40481c
  43da5c:	jmp    0x43da39
  43da5e:	pop    ebx
  43da5f:	mov    esp,ebp
  43da61:	pop    ebp
  43da62:	ret    
  43da63:	add    bh,bh
  43da65:	(bad)  
  43da66:	(bad)  
  43da67:	inc    DWORD PTR [esi]
  43da69:	add    BYTE PTR [eax],al
  43da6b:	add    BYTE PTR ds:0x25732564,ah
  43da71:	add    BYTE PTR fs:[eax],al
  43da74:	(bad)  
  43da75:	(bad)  
  43da76:	(bad)  
  43da77:	inc    DWORD PTR [ecx]
  43da79:	add    BYTE PTR [eax],al
  43da7b:	add    BYTE PTR [edx],ch
  43da7d:	add    BYTE PTR [eax],al
  43da7f:	add    bh,bh
  43da81:	(bad)  
  43da82:	(bad)  
  43da83:	inc    DWORD PTR [edx]
  43da85:	add    BYTE PTR [eax],al
  43da87:	add    BYTE PTR ds:0xff000064,ah
  43da8d:	(bad)  
  43da8e:	(bad)  
  43da8f:	inc    DWORD PTR [esi]
  43da91:	add    BYTE PTR [eax],al
  43da93:	add    BYTE PTR [edx+0x79],ah
  43da96:	je     0x43dafd
  43da98:	jae    0x43daba
  43da9a:	add    BYTE PTR [eax],al
  43da9c:	(bad)  
  43da9d:	(bad)  
  43da9e:	(bad)  
  43da9f:	inc    DWORD PTR [ecx]
  43daa1:	add    BYTE PTR [eax],al
  43daa3:	add    BYTE PTR [edi],ch
  43daa5:	add    BYTE PTR [eax],al
  43daa7:	add    bh,bh
  43daa9:	(bad)  
  43daaa:	(bad)  
  43daab:	dec    DWORD PTR ds:0x43000000
  43dab1:	outs   dx,DWORD PTR ds:[esi]
  43dab2:	outs   dx,BYTE PTR ds:[esi]
  43dab3:	je     0x43db1a
  43dab5:	outs   dx,BYTE PTR ds:[esi]
  43dab6:	je     0x43dae5
  43dab8:	push   edx
  43dab9:	popa   
  43daba:	outs   dx,BYTE PTR ds:[esi]
  43dabb:	add    BYTE PTR gs:[bx+si],al
  43dabf:	add    bh,bh
  43dac1:	(bad)  
  43dac2:	(bad)  
  43dac3:	dec    DWORD PTR ds:0x41000000
  43dac9:	arpl   WORD PTR [ebx+0x65],sp
  43dacc:	jo     0x43db42
  43dace:	sub    eax,0x676e6152
  43dad3:	gs jae 0x43dad6
  43dad6:	add    BYTE PTR [eax],al
  43dad8:	push   ebx
  43dad9:	push   esi
  43dada:	mov    ebx,eax
  43dadc:	mov    eax,ebx
  43dade:	call   0x43c574
  43dae3:	lea    eax,[ebx+0x38]
  43dae6:	mov    edx,0x43db30
  43daeb:	call   0x404fdc
  43daf0:	lea    eax,[ebx+0x6c]
  43daf3:	call   0x404f88
  43daf8:	lea    eax,[ebx+0x70]
  43dafb:	call   0x404f88
  43db00:	lea    eax,[ebx+0x68]
  43db03:	call   0x404f88
  43db08:	mov    esi,DWORD PTR [ebx+0x78]
  43db0b:	test   esi,esi
  43db0d:	je     0x43db16
  43db0f:	mov    eax,esi
  43db11:	mov    edx,DWORD PTR [eax]
  43db13:	call   DWORD PTR [edx+0x44]
  43db16:	mov    esi,DWORD PTR [ebx+0x7c]
  43db19:	test   esi,esi
  43db1b:	je     0x43db24
  43db1d:	mov    eax,esi
  43db1f:	mov    edx,DWORD PTR [eax]
  43db21:	call   DWORD PTR [edx+0x44]
  43db24:	pop    esi
  43db25:	pop    ebx
  43db26:	ret    
  43db27:	add    bh,bh
  43db29:	(bad)  
  43db2a:	(bad)  
  43db2b:	dec    DWORD PTR [ecx]
  43db2d:	add    BYTE PTR [eax],al
  43db2f:	add    BYTE PTR [ebp+eiz*2+0x78],dh
  43db33:	je     0x43db64
  43db35:	push   0x6c6d74
  43db3a:	add    BYTE PTR [eax],al
  43db3c:	push   ebx
  43db3d:	push   esi
  43db3e:	mov    esi,edx
  43db40:	mov    ebx,eax
  43db42:	lea    eax,[ebx+0x68]
  43db45:	mov    edx,esi
  43db47:	call   0x404fdc
  43db4c:	pop    esi
  43db4d:	pop    ebx
  43db4e:	ret    
  43db4f:	nop
  43db50:	push   esp
  43db51:	fild   DWORD PTR [ebx+0x0]
  43db54:	add    ecx,DWORD PTR ds:0x48644954
  43db5a:	push   esp
  43db5b:	push   esp
  43db5c:	push   eax
  43db5d:	dec    edi
  43db5e:	jo     0x43dbd4
  43db60:	imul   ebp,DWORD PTR [edi+0x6e],0x1
  43db67:	add    BYTE PTR [edx],al
  43db69:	add    BYTE PTR [eax],al
  43db6b:	add    BYTE PTR [eax-0x25],dl
  43db6e:	inc    ebx
  43db6f:	add    BYTE PTR [edi],cl
  43db71:	push   0x506e496f
  43db76:	jb     0x43dbe7
  43db78:	arpl   WORD PTR [ebp+0x73],sp
  43db7b:	jae    0x43dbbe
  43db7d:	jne    0x43dbf3
  43db7f:	push   0x4b6f6812
  43db84:	gs gs jo 0x43dbd7
  43db88:	jb     0x43dbf3
  43db8a:	addr16 push eax
  43db8c:	jb     0x43dbfd
  43db8e:	je     0x43dbff
  43db90:	arpl   WORD PTR [edi+0x6c],bp
  43db93:	adc    ebp,DWORD PTR [eax+0x6f]
  43db96:	inc    esi
  43db97:	outs   dx,DWORD PTR ds:[esi]
  43db98:	jb     0x43dbfd
  43db9a:	gs inc ebp
  43db9c:	outs   dx,BYTE PTR ds:[esi]
  43db9d:	arpl   WORD PTR [edi+0x64],bp
  43dba0:	gs push eax
  43dba2:	popa   
  43dba3:	jb     0x43dc06
  43dba5:	ins    DWORD PTR es:[edi],dx
  43dba6:	jae    0x43dbae
  43dba8:	dec    ecx
  43dba9:	fs dec eax
  43dbab:	push   esp
  43dbac:	push   esp
  43dbad:	push   eax
  43dbae:	mov    eax,eax
  43dbb0:	mov    ah,0xdb
  43dbb2:	inc    ebx
  43dbb3:	add    BYTE PTR [esi],al
  43dbb5:	push   cs
  43dbb6:	push   esp
  43dbb7:	dec    ecx
  43dbb8:	fs dec eax
  43dbba:	push   esp
  43dbbb:	push   esp
  43dbbc:	push   eax
  43dbbd:	dec    edi
  43dbbe:	jo     0x43dc34
  43dbc0:	imul   ebp,DWORD PTR [edi+0x6e],0xdb500173
  43dbc7:	inc    ebx
  43dbc8:	add    BYTE PTR [ebp-0x242fffc0],cl
  43dbce:	inc    ebx
  43dbcf:	add    BYTE PTR [ebx],al
  43dbd1:	push   ss
  43dbd2:	push   esp
  43dbd3:	dec    ecx
  43dbd4:	fs dec eax
  43dbd6:	push   esp
  43dbd7:	push   esp
  43dbd8:	push   eax
  43dbd9:	push   eax
  43dbda:	jb     0x43dc4b
  43dbdc:	je     0x43dc4d
  43dbde:	arpl   WORD PTR [edi+0x6c],bp
  43dbe1:	push   esi
  43dbe2:	gs jb  0x43dc58
  43dbe5:	imul   ebp,DWORD PTR [edi+0x6e],0x1
  43dbec:	add    BYTE PTR [ecx],al
  43dbee:	add    BYTE PTR [eax],al
  43dbf0:	add    ah,cl
  43dbf2:	fild   DWORD PTR [ebx+0x0]
  43dbf5:	add    eax,0x5f317670
  43dbfa:	xor    BYTE PTR ds:0x5f317670,al
  43dc00:	xor    DWORD PTR [esi],eax
  43dc02:	dec    ecx
  43dc03:	fs dec eax
  43dc05:	push   esp
  43dc06:	push   esp
  43dc07:	push   eax
  43dc08:	or     al,0xdc
  43dc0a:	inc    ebx
  43dc0b:	add    BYTE PTR [eax],cl
  43dc0d:	push   ss
  43dc0e:	push   esp
  43dc0f:	dec    ecx
  43dc10:	fs dec eax
  43dc12:	push   esp
  43dc13:	push   esp
  43dc14:	push   eax
  43dc15:	dec    edi
  43dc16:	outs   dx,BYTE PTR ds:[esi]
  43dc17:	push   edx
  43dc18:	gs imul esi,DWORD PTR fs:[edx+0x65],0x76457463
  43dc21:	outs   dx,BYTE PTR gs:[esi]
  43dc23:	je     0x43dc25
  43dc25:	add    eax,0x65530608
  43dc2a:	outs   dx,BYTE PTR ds:[esi]
  43dc2b:	fs gs jb 0x43dc36
  43dc2f:	push   esp
  43dc30:	dec    edi
  43dc31:	bound  ebp,QWORD PTR [edx+0x65]
  43dc34:	arpl   WORD PTR [ecx+eax*1+0x4],si
  43dc38:	fs gs jae 0x43dcb0
  43dc3c:	push   es
  43dc3d:	jae    0x43dcb3
  43dc3f:	jb     0x43dcaa
  43dc41:	outs   dx,BYTE PTR ds:[esi]
  43dc42:	add    DWORD PTR [bp+di],ecx
  43dc45:	dec    esi
  43dc46:	jne    0x43dcb5
  43dc48:	push   edx
  43dc49:	gs imul esi,DWORD PTR fs:[edx+0x65],0x49077463
  43dc52:	outs   dx,BYTE PTR ds:[esi]
  43dc53:	je     0x43dcba
  43dc55:	addr16 gs jb 0x43dc5a
  43dc59:	pop    es
  43dc5a:	dec    eax
  43dc5b:	popa   
  43dc5c:	outs   dx,BYTE PTR ds:[esi]
  43dc5d:	fs ins BYTE PTR es:[edi],dx
  43dc5f:	gs fs pop es
  43dc62:	inc    edx
  43dc63:	outs   dx,DWORD PTR ds:[esi]
  43dc64:	outs   dx,DWORD PTR ds:[esi]
  43dc65:	ins    BYTE PTR es:[edi],dx
  43dc66:	gs popa 
  43dc68:	outs   dx,BYTE PTR ds:[esi]
  43dc69:	add    DWORD PTR [edi],eax
  43dc6b:	push   esi
  43dc6c:	dec    ebp
  43dc6d:	gs je  0x43dcd8
  43dc70:	outs   dx,DWORD PTR ds:[esi]
  43dc71:	fs push es
  43dc73:	jae    0x43dce9
  43dc75:	jb     0x43dce0
  43dc77:	outs   dx,BYTE PTR ds:[esi]
  43dc78:	addr16 add ah,ah
  43dc7b:	adc    BYTE PTR [eax+0x0],al
  43dc7e:	test   BYTE PTR [eax],dl
  43dc80:	inc    eax
  43dc81:	add    BYTE PTR [eax+edx*1],bh
  43dc84:	inc    eax
  43dc85:	add    BYTE PTR [eax],al
  43dc87:	adc    BYTE PTR [eax+0x0],al
  43dc8a:	test   BYTE PTR [eax],dl
  43dc8c:	inc    eax
  43dc8d:	add    BYTE PTR [ebx+0x43dc94c0],cl
  43dc93:	add    BYTE PTR [eax],cl
  43dc95:	sbb    DWORD PTR [ecx+ecx*2+0x64],edx
  43dc99:	dec    eax
  43dc9a:	push   esp
  43dc9b:	push   esp
  43dc9c:	push   eax
  43dc9d:	dec    edi
  43dc9e:	outs   dx,BYTE PTR ds:[esi]
  43dc9f:	dec    eax
  43dca0:	gs popa 
  43dca2:	fs gs jb 0x43dd19
  43dca6:	inc    ecx
  43dca7:	jbe    0x43dd0a
  43dca9:	imul   ebp,DWORD PTR [ecx+eiz*2+0x62],0x300656c
  43dcb1:	or     BYTE PTR [esi],al
  43dcb3:	push   ebx
  43dcb4:	outs   dx,BYTE PTR gs:[esi]
  43dcb6:	fs gs jb 0x43dcc1
  43dcba:	push   esp
  43dcbb:	dec    edi
  43dcbc:	bound  ebp,QWORD PTR [edx+0x65]
  43dcbf:	arpl   WORD PTR [eax+ecx*1+0x8],si
  43dcc3:	inc    ecx
  43dcc4:	dec    eax
  43dcc5:	gs popa 
  43dcc7:	fs gs jb 0x43dd3e
  43dccb:	or     eax,0x48644954
  43dcd0:	gs popa 
  43dcd2:	fs gs jb 0x43dd22
  43dcd6:	imul   esi,DWORD PTR [ebx+0x74],0x43560901
  43dcdd:	outs   dx,DWORD PTR ds:[esi]
  43dcde:	outs   dx,BYTE PTR ds:[esi]
  43dcdf:	je     0x43dd4a
  43dce1:	outs   dx,BYTE PTR ds:[esi]
  43dce2:	jne    0x43dd49
  43dce4:	pop    es
  43dce5:	inc    edx
  43dce6:	outs   dx,DWORD PTR ds:[esi]
  43dce7:	outs   dx,DWORD PTR ds:[esi]
  43dce8:	ins    BYTE PTR es:[edi],dx
  43dce9:	gs popa 
  43dceb:	outs   dx,BYTE PTR ds:[esi]
  43dcec:	add    ah,ah
  43dcee:	adc    BYTE PTR [eax+0x0],al
  43dcf1:	xchg   esp,eax
  43dcf2:	ins    DWORD PTR es:[edi],dx
  43dcf3:	inc    ebx
  43dcf4:	add    BYTE PTR [eax],al
  43dcf6:	adc    BYTE PTR [eax+0x0],al
  43dcf9:	lea    eax,[eax+0x0]
  43dcfc:	add    ch,bl
  43dcfe:	inc    ebx
  43dcff:	add    BYTE PTR [eax],cl
  43dd01:	sbb    BYTE PTR [ecx+ecx*2+0x64],dl
  43dd05:	dec    edi
  43dd06:	outs   dx,BYTE PTR ds:[esi]
  43dd07:	push   ebx
  43dd08:	gs ins BYTE PTR es:[edi],dx
  43dd0a:	arpl   WORD PTR gs:[ecx+eax*2+0x75],si
  43dd0f:	je     0x43dd79
  43dd11:	outs   dx,DWORD PTR ds:[esi]
  43dd12:	jb     0x43dd7d
  43dd14:	jp     0x43dd77
  43dd16:	je     0x43dd81
  43dd18:	outs   dx,DWORD PTR ds:[esi]
  43dd19:	outs   dx,BYTE PTR ds:[esi]
  43dd1a:	add    BYTE PTR [ebx],al
  43dd1c:	or     BYTE PTR [esi],al
  43dd1e:	push   ebx
  43dd1f:	outs   dx,BYTE PTR gs:[esi]
  43dd21:	fs gs jb 0x43dd2c
  43dd25:	push   esp
  43dd26:	dec    edi
  43dd27:	bound  ebp,QWORD PTR [edx+0x65]
  43dd2a:	arpl   WORD PTR [ecx+eax*1+0x13],si
  43dd2e:	inc    ecx
  43dd2f:	jne    0x43dda5
  43dd31:	push   0x69746e65
  43dd36:	arpl   WORD PTR [ecx+0x74],sp
  43dd39:	imul   ebp,DWORD PTR [edi+0x6e],0x73616c43
  43dd40:	jae    0x43dd58
  43dd42:	push   esp
  43dd43:	dec    ecx
  43dd44:	fs inc ecx
  43dd46:	jne    0x43ddbc
  43dd48:	push   0x69746e65
  43dd4d:	arpl   WORD PTR [ecx+0x74],sp
  43dd50:	imul   ebp,DWORD PTR [edi+0x6e],0x73616c43
  43dd57:	jae    0x43dd61
  43dd59:	or     BYTE PTR [ecx+0x75],al
  43dd5c:	je     0x43ddc6
  43dd5e:	dec    ecx
  43dd5f:	outs   dx,BYTE PTR ds:[esi]
  43dd60:	outs   dx,WORD PTR ds:[esi]
  43dd62:	or     eax,0x48644954
  43dd67:	gs popa 
  43dd69:	fs gs jb 0x43ddb9
  43dd6d:	imul   esi,DWORD PTR [ebx+0x74],0x4010e400
  43dd74:	add    BYTE PTR [eax],al
  43dd76:	add    BYTE PTR [eax],al
  43dd78:	add    BYTE PTR [ebp+ebp*2+0x408d0043],dl
  43dd7f:	add    BYTE PTR [ebp+ebx*8+0x12080043],al
  43dd86:	push   esp
  43dd87:	dec    ecx
  43dd88:	fs dec edi
  43dd8a:	outs   dx,BYTE PTR ds:[esi]
  43dd8b:	inc    ecx
  43dd8c:	jne    0x43de02
  43dd8e:	push   0x7a69726f
  43dd93:	popa   
  43dd94:	je     0x43ddff
  43dd96:	outs   dx,DWORD PTR ds:[esi]
  43dd97:	outs   dx,BYTE PTR ds:[esi]
  43dd98:	add    BYTE PTR [ebx],al
  43dd9a:	or     BYTE PTR [esi],al
  43dd9c:	push   ebx
  43dd9d:	outs   dx,BYTE PTR gs:[esi]
  43dd9f:	fs gs jb 0x43ddaa
  43dda3:	push   esp
  43dda4:	dec    edi
  43dda5:	bound  ebp,QWORD PTR [edx+0x65]
  43dda8:	arpl   WORD PTR [eax+ecx*1+0xe],si
  43ddac:	inc    ecx
  43ddad:	jne    0x43de23
  43ddaf:	push   0x69746e65
  43ddb4:	arpl   WORD PTR [ecx+0x74],sp
  43ddb7:	imul   ebp,DWORD PTR [edi+0x6e],0x64495411
  43ddbe:	inc    ecx
  43ddbf:	jne    0x43de35
  43ddc1:	push   0x69746e65
  43ddc6:	arpl   WORD PTR [ecx+0x74],sp
  43ddc9:	imul   ebp,DWORD PTR [edi+0x6e],0x61480701
  43ddd0:	outs   dx,BYTE PTR ds:[esi]
  43ddd1:	fs ins BYTE PTR es:[edi],dx
  43ddd3:	gs fs pop es
  43ddd6:	inc    edx
  43ddd7:	outs   dx,DWORD PTR ds:[esi]
  43ddd8:	outs   dx,DWORD PTR ds:[esi]
  43ddd9:	ins    BYTE PTR es:[edi],dx
  43ddda:	gs popa 
  43dddc:	outs   dx,BYTE PTR ds:[esi]
  43dddd:	add    ah,ah
  43dddf:	adc    BYTE PTR [eax+0x0],al
  43dde2:	in     al,dx
  43dde3:	xchg   DWORD PTR [ebx+0x0],eax
  43dde6:	add    BYTE PTR [eax],dl
  43dde8:	inc    eax
  43dde9:	add    BYTE PTR [ebx+0x43de38c0],cl
	...
  43ddf7:	add    BYTE PTR [eax-0x22],bl
  43ddfa:	inc    ebx
  43ddfb:	add    BYTE PTR [eax+0x43de],al
	...
  43de09:	add    BYTE PTR [eax],al
  43de0b:	add    BYTE PTR [edx-0x22],ch
  43de0e:	inc    ebx
  43de0f:	add    BYTE PTR [eax+0x3c000000],bl
  43de15:	ret    0x43
  43de18:	rol    BYTE PTR [edx+0x40],1
  43de1b:	add    ah,bl
  43de1d:	inc    edx
  43de1e:	inc    eax
  43de1f:	add    al,ah
  43de21:	inc    edx
  43de22:	inc    eax
  43de23:	add    ah,ah
  43de25:	inc    edx
  43de26:	inc    eax
  43de27:	add    al,bl
  43de29:	inc    edx
  43de2a:	inc    eax
  43de2b:	add    BYTE PTR [eax],bh
  43de2d:	inc    eax
  43de2e:	inc    eax
  43de2f:	add    BYTE PTR [eax+eax*2+0x40],dl
  43de33:	add    BYTE PTR [edi+edx*8],bh
  43de36:	inc    ebx
  43de37:	add    BYTE PTR [eax+0x700043c4],dh
  43de3d:	inc    ecx
  43de3e:	inc    ecx
  43de3f:	add    BYTE PTR [eax+eax*2-0x2863ffbf],al
  43de46:	inc    ebx
  43de47:	add    BYTE PTR [eax],dl
  43de49:	fld    DWORD PTR [ebx+0x0]
  43de4c:	fcomp  st(2)
  43de4e:	inc    ebx
  43de4f:	add    al,al
  43de51:	(bad)  
  43de52:	inc    ebx
  43de53:	add    BYTE PTR [eax+0x1],ah
  43de56:	inc    esp
  43de57:	add    BYTE PTR [esi],cl
  43de59:	add    BYTE PTR [eax],al
  43de5b:	add    BYTE PTR [eax],al
  43de5d:	add    BYTE PTR [ecx],al
  43de5f:	add    BYTE PTR [eax],al
  43de61:	add    BYTE PTR [eax+edx*1+0x880040],al
  43de68:	add    BYTE PTR [eax],al
  43de6a:	andps  xmm1,XMMWORD PTR [ecx+0x64]
  43de6e:	dec    eax
  43de6f:	push   esp
  43de70:	push   esp
  43de71:	push   eax
  43de72:	push   edx
  43de73:	gs jae 0x43dee6
  43de76:	outs   dx,DWORD PTR ds:[esi]
  43de77:	outs   dx,BYTE PTR ds:[esi]
  43de78:	jae    0x43dedf
  43de7a:	mov    eax,eax
  43de7c:	sbb    dh,0x43
  43de7f:	add    BYTE PTR [edi],al
  43de81:	andps  xmm1,XMMWORD PTR [ecx+0x64]
  43de85:	dec    eax
  43de86:	push   esp
  43de87:	push   esp
  43de88:	push   eax
  43de89:	push   edx
  43de8a:	gs jae 0x43defd
  43de8d:	outs   dx,DWORD PTR ds:[esi]
  43de8e:	outs   dx,BYTE PTR ds:[esi]
  43de8f:	jae    0x43def6
  43de91:	cmp    dh,bl
  43de93:	inc    ebx
  43de94:	add    ah,ah
  43de96:	ret    0x43
  43de99:	adc    eax,0x64490600
  43de9e:	dec    eax
  43de9f:	push   esp
  43dea0:	push   esp
  43dea1:	push   eax
  43dea2:	add    BYTE PTR [eax],al
  43dea4:	lock fiadd WORD PTR [ebx+0x0]
	...
  43deb0:	adc    bh,bl
  43deb2:	inc    ebx
  43deb3:	add    BYTE PTR [eax-0x21],al
  43deb6:	inc    ebx
	...
  43dec3:	add    BYTE PTR [edx],ch
  43dec5:	fild   WORD PTR [ebx+0x0]
  43dec8:	mov    esp,0x38000000
  43decd:	mov    edi,0x42d00043
  43ded2:	inc    eax
  43ded3:	add    ah,bl
  43ded5:	inc    edx
  43ded6:	inc    eax
  43ded7:	add    al,ah
  43ded9:	inc    edx
  43deda:	inc    eax
  43dedb:	add    ah,ah
  43dedd:	inc    edx
  43dede:	inc    eax
  43dedf:	add    al,bl
  43dee1:	inc    edx
  43dee2:	inc    eax
  43dee3:	add    BYTE PTR [eax],bh
  43dee5:	inc    eax
  43dee6:	inc    eax
  43dee7:	add    BYTE PTR [eax+eax*2+0x40],dl
  43deeb:	add    BYTE PTR [eax-0x6fffbc2a],al
  43def1:	rol    DWORD PTR [ebx+0x0],1
  43def4:	jo     0x43df37
  43def6:	inc    ecx
  43def7:	add    BYTE PTR [eax+eax*2-0x309bffbf],al
  43defe:	inc    ebx
  43deff:	add    al,dh
  43df01:	rol    BYTE PTR [ebx+0x0],cl
  43df04:	rol    BYTE PTR fs:[ebx+0x0],cl
  43df08:	or     ah,al
  43df0a:	inc    ebx
  43df0b:	add    BYTE PTR [eax],bh
  43df0d:	add    al,0x44
  43df0f:	add    BYTE PTR [esi],cl
  43df11:	add    BYTE PTR [eax],al
  43df13:	add    BYTE PTR [eax],al
  43df15:	add    BYTE PTR [edx],al
  43df17:	add    BYTE PTR [eax],al
  43df19:	add    BYTE PTR [eax+edx*1+0xac0040],al
  43df20:	add    BYTE PTR [eax],al
  43df22:	test   BYTE PTR [eax],dl
  43df24:	inc    eax
  43df25:	add    BYTE PTR [eax+0xe000000],dh
  43df2b:	push   esp
  43df2c:	dec    ecx
  43df2d:	fs dec eax
  43df2f:	push   esp
  43df30:	push   esp
  43df31:	push   eax
  43df32:	push   edx
  43df33:	gs jno 0x43dfab
  43df36:	gs jae 0x43dfad
  43df39:	lea    eax,[eax+0x0]
  43df3c:	inc    eax
  43df3d:	fild   WORD PTR [ebx+0x0]
  43df40:	pop    es
  43df41:	push   cs
  43df42:	push   esp
  43df43:	dec    ecx
  43df44:	fs dec eax
  43df46:	push   esp
  43df47:	push   esp
  43df48:	push   eax
  43df49:	push   edx
  43df4a:	gs jno 0x43dfc2
  43df4d:	gs jae 0x43dfc4
  43df50:	lock fiadd WORD PTR [ebx+0x0]
  43df54:	sub    al,al
  43df56:	inc    ebx
  43df57:	add    BYTE PTR [eax+eax*1],bl
  43df5a:	push   es
  43df5b:	dec    ecx
  43df5c:	fs dec eax
  43df5e:	push   esp
  43df5f:	push   esp
  43df60:	push   eax
  43df61:	add    BYTE PTR [eax],al
  43df63:	nop
  43df64:	mov    al,0xdf
  43df66:	inc    ebx
	...
  43df83:	add    BYTE PTR [eax+0x140043df],dh
  43df89:	add    BYTE PTR [eax],al
  43df8b:	add    BYTE PTR [eax-0x2fffbff0],dl
  43df91:	inc    edx
  43df92:	inc    eax
  43df93:	add    ah,bl
  43df95:	inc    edx
  43df96:	inc    eax
  43df97:	add    al,ah
  43df99:	inc    edx
  43df9a:	inc    eax
  43df9b:	add    ah,ah
  43df9d:	inc    edx
  43df9e:	inc    eax
  43df9f:	add    al,bl
  43dfa1:	inc    edx
  43dfa2:	inc    eax
  43dfa3:	add    BYTE PTR [eax],bh
  43dfa5:	inc    eax
  43dfa6:	inc    eax
  43dfa7:	add    BYTE PTR [eax+eax*2+0x40],dl
  43dfab:	add    ah,ch
  43dfad:	add    al,0x44
  43dfaf:	add    BYTE PTR [edi],cl
  43dfb1:	push   esp
  43dfb2:	dec    ecx
  43dfb3:	fs dec eax
  43dfb5:	push   esp
  43dfb6:	push   esp
  43dfb7:	push   eax
  43dfb8:	push   eax
  43dfb9:	jb     0x43e02a
  43dfbb:	je     0x43e02c
  43dfbd:	arpl   WORD PTR [edi+0x6c],bp
  43dfc0:	or     al,0xe0
  43dfc2:	inc    ebx
	...
  43dfcf:	add    ah,cl
  43dfd1:	loopne 0x43e016
	...
  43dfdf:	add    BYTE PTR [eax+0x600043e0],bh
  43dfe5:	add    DWORD PTR [eax],eax
  43dfe7:	add    BYTE PTR [eax+0x180042a3],dh
  43dfed:	test   eax,0x42dc0041
  43dff2:	inc    eax
  43dff3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43dff9:	inc    edx
  43dffa:	inc    eax
  43dffb:	add    al,bl
  43dffd:	inc    edx
  43dffe:	inc    eax
  43dfff:	add    BYTE PTR [eax],bh
  43e001:	inc    eax
  43e002:	inc    eax
  43e003:	add    BYTE PTR [eax+eax*2+0x40],dl
  43e007:	add    al,bh
  43e009:	in     eax,0x43
  43e00b:	add    BYTE PTR [eax+0x41],ch
  43e00e:	inc    ecx
  43e00f:	add    BYTE PTR [eax-0x5b],dh
  43e012:	inc    ecx
  43e013:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43e01a:	inc    ecx
  43e01b:	add    BYTE PTR [edx+edi*8-0x59a7ffbd],al
  43e022:	inc    ecx
  43e023:	add    BYTE PTR [eax-0x59],dl
  43e026:	inc    ecx
  43e027:	add    BYTE PTR [eax],dh
  43e029:	test   eax,0xa6680041
  43e02e:	inc    ecx
  43e02f:	add    BYTE PTR [eax-0x5a],ah
  43e032:	inc    ecx
  43e033:	add    BYTE PTR [eax],bh
  43e035:	test   eax,0x46bc0041
  43e03a:	inc    edx
  43e03b:	add    BYTE PTR [esi+ecx*1+0x44],cl
  43e03f:	add    ah,al
  43e041:	dec    ebp
  43e042:	inc    edx
  43e043:	add    BYTE PTR [esi+ecx*2+0x42],dl
  43e047:	add    ah,cl
  43e049:	dec    esi
  43e04a:	inc    edx
  43e04b:	add    BYTE PTR [eax+0x58004400],ah
  43e051:	add    BYTE PTR [ebx+0x0],al
  43e054:	adc    al,0xac
  43e056:	inc    edx
  43e057:	add    BYTE PTR [eax+0x78004306],dl
  43e05d:	add    eax,DWORD PTR [ebx+0x0]
  43e060:	in     al,dx
  43e061:	add    eax,DWORD PTR [ebx+0x0]
  43e064:	nop
  43e065:	add    eax,0x600043
  43e06a:	inc    ebx
  43e06b:	add    al,ah
  43e06d:	add    BYTE PTR [ebx+0x0],al
  43e070:	mov    WORD PTR [esi],es
  43e072:	inc    ebx
  43e073:	add    BYTE PTR [esp+eax*1+0x43],cl
  43e077:	add    BYTE PTR [eax+0x30004301],cl
  43e07d:	add    eax,0x2280043
  43e082:	inc    ebx
  43e083:	add    ah,cl
  43e085:	add    DWORD PTR [ebx+0x0],eax
  43e088:	xor    al,0x2
  43e08a:	inc    ebx
  43e08b:	add    BYTE PTR [eax-0x17ffbd56],ch
  43e091:	lods   al,BYTE PTR ds:[esi]
  43e092:	inc    edx
  43e093:	add    BYTE PTR [eax-0x55],al
  43e096:	inc    edx
  43e097:	add    BYTE PTR [ebx+ebp*4+0x42],ch
  43e09b:	add    BYTE PTR [ebx+ebp*4-0x584bffbe],cl
  43e0a2:	inc    edx
  43e0a3:	add    BYTE PTR [eax-0x56],dl
  43e0a6:	inc    edx
  43e0a7:	add    ah,cl
  43e0a9:	adc    BYTE PTR [eax+eax*1+0x24],al
  43e0ad:	sti    
  43e0ae:	inc    ebx
  43e0af:	add    BYTE PTR [ebp+edi*8-0x193fffbd],dh
  43e0b6:	inc    ebx
  43e0b7:	add    BYTE PTR ds:0x43644954,cl
  43e0bd:	jne    0x43e132
  43e0bf:	je     0x43e130
  43e0c1:	ins    DWORD PTR es:[edi],dx
  43e0c2:	dec    eax
  43e0c3:	push   esp
  43e0c4:	push   esp
  43e0c5:	push   eax
  43e0c6:	mov    eax,eax
  43e0c8:	int3   
  43e0c9:	loopne 0x43e10e
  43e0cb:	add    BYTE PTR [edi],al
  43e0cd:	or     eax,0x43644954
  43e0d2:	jne    0x43e147
  43e0d4:	je     0x43e145
  43e0d6:	ins    DWORD PTR es:[edi],dx
  43e0d7:	dec    eax
  43e0d8:	push   esp
  43e0d9:	push   esp
  43e0da:	push   eax
  43e0db:	or     al,0xe0
  43e0dd:	inc    ebx
  43e0de:	add    al,ah
  43e0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e0e1:	inc    edx
  43e0e2:	add    BYTE PTR [eax],cl
  43e0e4:	add    BYTE PTR [esi],al
  43e0e6:	dec    ecx
  43e0e7:	fs dec eax
  43e0e9:	push   esp
  43e0ea:	push   esp
  43e0eb:	push   eax
  43e0ec:	add    BYTE PTR [eax],al
  43e0ee:	mov    eax,eax
  43e0f0:	cmp    al,0xe1
  43e0f2:	inc    ebx
	...
  43e0ff:	add    ah,dh
  43e101:	loope  0x43e146
	...
  43e10f:	add    al,ch
  43e111:	loope  0x43e156
  43e113:	add    BYTE PTR [eax+0x1],ah
  43e116:	add    BYTE PTR [eax],al
  43e118:	rcr    bh,0x43
  43e11b:	add    BYTE PTR [eax],bl
  43e11d:	test   eax,0x42dc0041
  43e122:	inc    eax
  43e123:	add    BYTE PTR [eax-0x1bffbe5e],ch
  43e129:	inc    edx
  43e12a:	inc    eax
  43e12b:	add    al,bl
  43e12d:	inc    edx
  43e12e:	inc    eax
  43e12f:	add    BYTE PTR [eax],bh
  43e131:	inc    eax
  43e132:	inc    eax
  43e133:	add    BYTE PTR [eax+eax*2+0x40],dl
  43e137:	add    al,bh
  43e139:	in     eax,0x43
  43e13b:	add    BYTE PTR [eax+0x41],ch
  43e13e:	inc    ecx
  43e13f:	add    BYTE PTR [eax-0x5b],dh
  43e142:	inc    ecx
  43e143:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  43e14a:	inc    ecx
  43e14b:	add    BYTE PTR [edx+edi*8-0x59a7ffbd],al
  43e152:	inc    ecx
  43e153:	add    BYTE PTR [eax-0x59],dl
  43e156:	inc    ecx
  43e157:	add    BYTE PTR [eax],dh
  43e159:	test   eax,0xa6680041
  43e15e:	inc    ecx
  43e15f:	add    BYTE PTR [eax-0x5a],ah
  43e162:	inc    ecx
  43e163:	add    BYTE PTR [eax],bh
  43e165:	test   eax,0x46bc0041
  43e16a:	inc    edx
  43e16b:	add    BYTE PTR [esi+ecx*1+0x44],cl
  43e16f:	add    ah,al
  43e171:	dec    ebp
  43e172:	inc    edx
  43e173:	add    BYTE PTR [esi+ecx*2+0x42],dl
  43e177:	add    ah,cl
  43e179:	dec    esi
  43e17a:	inc    edx
  43e17b:	add    BYTE PTR [eax+0x58004400],ah
  43e181:	add    BYTE PTR [ebx+0x0],al
  43e184:	adc    al,0xac
  43e186:	inc    edx
  43e187:	add    BYTE PTR [eax+0x78004306],dl
  43e18d:	add    eax,DWORD PTR [ebx+0x0]
  43e190:	in     al,dx
  43e191:	add    eax,DWORD PTR [ebx+0x0]
  43e194:	nop
  43e195:	add    eax,0x600043
  43e19a:	inc    ebx
  43e19b:	add    al,ah
  43e19d:	add    BYTE PTR [ebx+0x0],al
  43e1a0:	mov    WORD PTR [esi],es
  43e1a2:	inc    ebx
  43e1a3:	add    BYTE PTR [esp+eax*1+0x43],cl
  43e1a7:	add    BYTE PTR [eax+0x30004301],cl
  43e1ad:	add    eax,0x2280043
  43e1b2:	inc    ebx
  43e1b3:	add    ah,cl
  43e1b5:	add    DWORD PTR [ebx+0x0],eax
  43e1b8:	xor    al,0x2
  43e1ba:	inc    ebx
  43e1bb:	add    BYTE PTR [eax-0x17ffbd56],ch
  43e1c1:	lods   al,BYTE PTR ds:[esi]
  43e1c2:	inc    edx
  43e1c3:	add    BYTE PTR [eax-0x55],al
  43e1c6:	inc    edx
  43e1c7:	add    BYTE PTR [ebx+ebp*4+0x42],ch
  43e1cb:	add    BYTE PTR [ebx+ebp*4-0x584bffbe],cl
  43e1d2:	inc    edx
  43e1d3:	add    BYTE PTR [eax-0x56],dl
  43e1d6:	inc    edx
  43e1d7:	add    ah,cl
  43e1d9:	adc    BYTE PTR [eax+eax*1+0x24],al
  43e1dd:	sti    
  43e1de:	inc    ebx
  43e1df:	add    BYTE PTR [ebp+edi*8-0x193fffbd],dh
  43e1e6:	inc    ebx
  43e1e7:	add    BYTE PTR [edi],al
  43e1e9:	push   esp
  43e1ea:	dec    ecx
  43e1eb:	fs dec eax
  43e1ed:	push   esp
  43e1ee:	push   esp
  43e1ef:	push   eax
  43e1f0:	hlt    
  43e1f1:	loope  0x43e236
  43e1f3:	add    BYTE PTR [edi],al
  43e1f5:	pop    es
  43e1f6:	push   esp
  43e1f7:	dec    ecx
  43e1f8:	fs dec eax
  43e1fa:	push   esp
  43e1fb:	push   esp
  43e1fc:	push   eax
  43e1fd:	cmp    al,0xe1
  43e1ff:	inc    ebx
  43e200:	add    al,cl
  43e202:	loopne 0x43e247
  43e204:	add    BYTE PTR [eax],bl
  43e206:	add    BYTE PTR [esi],al
  43e208:	dec    ecx
  43e209:	fs dec eax
  43e20b:	push   esp
  43e20c:	push   esp
  43e20d:	push   eax
  43e20e:	adc    BYTE PTR [eax],al
  43e210:	cmp    al,0x10
  43e212:	inc    eax
  43e213:	add    BYTE PTR [ecx+eax*1],al
  43e216:	add    bh,bh
  43e218:	add    al,0x1
  43e21a:	add    bh,bh
  43e21c:	add    DWORD PTR [eax],eax
  43e21e:	add    BYTE PTR [eax],al
  43e220:	add    BYTE PTR [eax],al
  43e222:	add    BYTE PTR [eax+0x3],al
  43e228:	or     BYTE PTR [eax],al
  43e22a:	push   cs
  43e22b:	dec    ebp
  43e22c:	popa   
  43e22d:	js     0x43e270
  43e22f:	jne    0x43e2a5
  43e231:	push   0x72746552
  43e236:	imul   esp,DWORD PTR [ebp+0x73],0x401000
  43e23d:	or     al,0x1
  43e23f:	add    bh,bh
  43e241:	mov    al,0xf8
  43e243:	inc    ebx
  43e244:	add    BYTE PTR [ecx],al
  43e246:	add    BYTE PTR [eax],al
  43e248:	add    BYTE PTR [eax],al
  43e24a:	add    BYTE PTR [eax],al
  43e24c:	add    BYTE PTR [eax],0x0
  43e24f:	add    BYTE PTR [eax+0x410c0009],al
  43e255:	ins    BYTE PTR es:[edi],dx
  43e256:	ins    BYTE PTR es:[edi],dx
  43e257:	outs   dx,DWORD PTR ds:[esi]
  43e258:	ja     0x43e29d
  43e25a:	outs   dx,DWORD PTR ds:[esi]
  43e25b:	outs   dx,DWORD PTR ds:[esi]
  43e25c:	imul   ebp,DWORD PTR [ecx+0x65],0x73
  43e260:	add    BYTE PTR [eax],dl
  43e262:	inc    eax
  43e263:	add    BYTE PTR [eax],ah
  43e265:	add    DWORD PTR [eax],eax
  43e267:	jmp    DWORD PTR [eax]
  43e269:	add    DWORD PTR [eax],eax
  43e26b:	inc    DWORD PTR [ecx]
  43e26d:	add    BYTE PTR [eax],al
  43e26f:	add    BYTE PTR [eax],al
  43e271:	add    BYTE PTR [eax],al
  43e273:	add    BYTE PTR [eax],0x0
  43e276:	add    BYTE PTR [eax],al
  43e278:	or     al,BYTE PTR [eax]
  43e27a:	cmovs  esp,DWORD PTR [ecx+0x6e]
  43e27e:	fs ins BYTE PTR es:[edi],dx
  43e280:	gs push edx
  43e282:	gs imul esi,DWORD PTR fs:[edx+0x65],0xcc737463
  43e28b:	fild   DWORD PTR [ebx+0x0]
  43e28e:	adc    al,0x1
  43e290:	add    bh,bh
  43e292:	adc    al,0x1
  43e294:	add    bh,bh
  43e296:	add    DWORD PTR [eax],eax
  43e298:	add    BYTE PTR [eax],al
  43e29a:	add    BYTE PTR [eax],al
  43e29c:	add    BYTE PTR [eax+0x1],al
  43e2a2:	or     eax,DWORD PTR [eax]
  43e2a4:	(bad)  
  43e2a6:	jb     0x43e317
  43e2a8:	je     0x43e319
  43e2aa:	arpl   WORD PTR [edi+0x6c],bp
  43e2ad:	push   esi
  43e2ae:	gs jb  0x43e324
  43e2b1:	imul   ebp,DWORD PTR [edi+0x6e],0x40103c
  43e2b8:	sbb    al,0x1
  43e2ba:	add    bh,bh
  43e2bc:	sbb    al,0x1
  43e2be:	add    bh,bh
  43e2c0:	add    DWORD PTR [eax],eax
  43e2c2:	add    BYTE PTR [eax],al
  43e2c4:	add    BYTE PTR [eax],al
  43e2c6:	add    BYTE PTR [eax+0xf],al
  43e2cc:	or     al,0x0
  43e2ce:	rsqrtps xmm4,XMMWORD PTR [ebp+0x64]
  43e2d2:	imul   esi,DWORD PTR [edx+0x65],0x614d7463
  43e2d9:	js     0x43e344
  43e2db:	ins    DWORD PTR es:[edi],dx
  43e2dc:	jne    0x43e34b
  43e2de:	xor    al,0xbe
  43e2e0:	inc    ebx
  43e2e1:	add    BYTE PTR [ecx+eax*1],ch
  43e2e4:	add    bh,bh
  43e2e6:	sub    al,0x1
  43e2e8:	add    bh,bh
  43e2ea:	add    DWORD PTR [eax],eax
  43e2ec:	add    BYTE PTR [eax],al
  43e2ee:	add    BYTE PTR [eax],al
  43e2f0:	add    BYTE PTR [eax-0x80000000],al
  43e2f6:	or     eax,0x72500b00
  43e2fb:	outs   dx,DWORD PTR ds:[esi]
  43e2fc:	js     0x43e377
  43e2fe:	push   eax
  43e2ff:	popa   
  43e300:	jb     0x43e363
  43e302:	ins    DWORD PTR es:[edi],dx
  43e303:	jae    0x43e341
  43e305:	fild   WORD PTR [ebx+0x0]
  43e308:	xchg   esp,eax
  43e309:	add    BYTE PTR [eax+eax*1+0x50],al
  43e30d:	add    DWORD PTR [eax+eax*1+0x1],eax
  43e311:	add    BYTE PTR [eax],al
  43e313:	add    BYTE PTR [eax],al
  43e315:	add    BYTE PTR [eax],al
  43e317:	add    BYTE PTR [eax],0x0
  43e31a:	add    BYTE PTR [eax+0x5207000e],al
  43e320:	gs jno 0x43e398
  43e323:	gs jae 0x43e39a
  43e326:	mov    al,0xdb
  43e328:	inc    ebx
  43e329:	add    BYTE PTR [ecx],ah
  43e32b:	add    DWORD PTR [eax],eax
  43e32d:	jmp    DWORD PTR [ecx]
  43e32f:	add    DWORD PTR [eax],eax
  43e331:	inc    DWORD PTR [ecx]
  43e333:	add    BYTE PTR [eax],al
  43e335:	add    BYTE PTR [eax],al
  43e337:	add    BYTE PTR [eax],al
  43e339:	add    BYTE PTR [eax],0x0
  43e33c:	add    BYTE PTR [eax+0x480b000f],al
  43e342:	push   esp
  43e343:	push   esp
  43e344:	push   eax
  43e345:	dec    edi
  43e346:	jo     0x43e3bc
  43e348:	imul   ebp,DWORD PTR [edi+0x6e],0x43dc9073
  43e34f:	add    BYTE PTR [eax],dh
  43e351:	add    DWORD PTR [eax],eax
  43e353:	push   DWORD PTR [eax]
  43e355:	add    DWORD PTR [eax],eax
  43e357:	inc    DWORD PTR [ecx]
  43e359:	add    BYTE PTR [eax],al
  43e35b:	add    BYTE PTR [eax],al
  43e35d:	add    BYTE PTR [eax],al
  43e35f:	add    BYTE PTR [eax],0x0
  43e362:	add    BYTE PTR [eax+0x4f120010],al
  43e368:	outs   dx,BYTE PTR ds:[esi]
  43e369:	dec    eax
  43e36a:	gs popa 
  43e36c:	fs gs jb 0x43e3e3
  43e370:	inc    ecx
  43e371:	jbe    0x43e3d4
  43e373:	imul   ebp,DWORD PTR [ecx+eiz*2+0x62],0xdc08656c
  43e37b:	inc    ebx
  43e37c:	add    BYTE PTR [eax],bh
  43e37e:	add    DWORD PTR [eax],eax
  43e380:	(bad)  
  43e381:	cmp    BYTE PTR [ecx],al
  43e383:	add    bh,bh
  43e385:	add    DWORD PTR [eax],eax
  43e387:	add    BYTE PTR [eax],al
  43e389:	add    BYTE PTR [eax],al
  43e38b:	add    BYTE PTR [eax-0x80000000],al
  43e391:	adc    DWORD PTR [eax],eax
  43e393:	or     cl,BYTE PTR [edi+0x6e]
  43e396:	push   edx
  43e397:	gs imul esi,DWORD PTR fs:[edx+0x65],0xdcfc7463
  43e3a0:	inc    ebx
  43e3a1:	add    BYTE PTR [eax+0x1],al
  43e3a4:	add    bh,bh
  43e3a6:	inc    eax
  43e3a7:	add    DWORD PTR [eax],eax
  43e3a9:	inc    DWORD PTR [ecx]
  43e3ab:	add    BYTE PTR [eax],al
  43e3ad:	add    BYTE PTR [eax],al
  43e3af:	add    BYTE PTR [eax],al
  43e3b1:	add    BYTE PTR [eax],0x0
  43e3b4:	add    BYTE PTR [eax+0x4f150012],al
  43e3ba:	outs   dx,BYTE PTR ds:[esi]
  43e3bb:	push   ebx
  43e3bc:	gs ins BYTE PTR es:[edi],dx
  43e3be:	arpl   WORD PTR gs:[ecx+eax*2+0x75],si
  43e3c3:	je     0x43e42d
  43e3c5:	outs   dx,DWORD PTR ds:[esi]
  43e3c6:	jb     0x43e431
  43e3c8:	jp     0x43e42b
  43e3ca:	je     0x43e435
  43e3cc:	outs   dx,DWORD PTR ds:[esi]
  43e3cd:	outs   dx,BYTE PTR ds:[esi]
  43e3ce:	cld    
  43e3cf:	fadd   QWORD PTR [ebx+0x0]
  43e3d2:	dec    eax
  43e3d3:	add    DWORD PTR [eax],eax
  43e3d5:	dec    DWORD PTR [eax+0x1]
  43e3d8:	add    bh,bh
  43e3da:	add    DWORD PTR [eax],eax
  43e3dc:	add    BYTE PTR [eax],al
  43e3de:	add    BYTE PTR [eax],al
  43e3e0:	add    BYTE PTR [eax-0x80000000],al
  43e3e6:	adc    eax,DWORD PTR [eax]
  43e3e8:	sbb    cl,BYTE PTR [edi+0x6e]
  43e3eb:	push   ebx
  43e3ec:	gs ins BYTE PTR es:[edi],dx
  43e3ee:	arpl   WORD PTR gs:[eax+edx*2+0x72],si
  43e3f3:	outs   dx,DWORD PTR ds:[esi]
  43e3f4:	js     0x43e46f
  43e3f6:	inc    ecx
  43e3f7:	jne    0x43e46d
  43e3f9:	push   0x7a69726f
  43e3fe:	popa   
  43e3ff:	je     0x43e46a
  43e401:	outs   dx,DWORD PTR ds:[esi]
  43e402:	outs   dx,BYTE PTR ds:[esi]
  43e403:	sbb    ch,0x43
  43e406:	add    BYTE PTR [eax+0x1],dl
  43e409:	add    bh,bh
  43e40b:	push   eax
  43e40c:	add    DWORD PTR [eax],eax
  43e40e:	inc    DWORD PTR [ecx]
  43e410:	add    BYTE PTR [eax],al
  43e412:	add    BYTE PTR [eax],al
  43e414:	add    BYTE PTR [eax],al
  43e416:	add    BYTE PTR [eax],0x0
  43e419:	add    BYTE PTR [eax+0x4f0f0014],al
  43e41f:	outs   dx,BYTE PTR ds:[esi]
  43e420:	inc    ecx
  43e421:	jne    0x43e497
  43e423:	push   0x7a69726f
  43e428:	popa   
  43e429:	je     0x43e494
  43e42b:	outs   dx,DWORD PTR ds:[esi]
  43e42c:	outs   dx,BYTE PTR ds:[esi]
  43e42d:	sbb    ch,0x43
  43e430:	add    BYTE PTR [eax+0x1],bl
  43e433:	add    bh,bh
  43e435:	pop    eax
  43e436:	add    DWORD PTR [eax],eax
  43e438:	inc    DWORD PTR [ecx]
  43e43a:	add    BYTE PTR [eax],al
  43e43c:	add    BYTE PTR [eax],al
  43e43e:	add    BYTE PTR [eax],al
  43e440:	add    BYTE PTR [eax],0x0
  43e443:	add    BYTE PTR [eax+0x4f140015],al
  43e449:	outs   dx,BYTE PTR ds:[esi]
  43e44a:	push   eax
  43e44b:	jb     0x43e4bc
  43e44d:	js     0x43e4c8
  43e44f:	inc    ecx
  43e450:	jne    0x43e4c6
  43e452:	push   0x7a69726f
  43e457:	popa   
  43e458:	je     0x43e4c3
  43e45a:	outs   dx,DWORD PTR ds:[esi]
  43e45b:	outs   dx,BYTE PTR ds:[esi]
  43e45c:	les    ebp,FWORD PTR [ebx+0xf80043]
  43e462:	add    bh,bh
  43e464:	fdivr  st,st(2)
  43e466:	inc    ebx
  43e467:	add    BYTE PTR [ecx],al
  43e469:	add    BYTE PTR [eax],al
  43e46b:	add    BYTE PTR [eax],al
  43e46d:	add    BYTE PTR [eax],al
  43e46f:	add    BYTE PTR [eax],0x0
  43e472:	add    BYTE PTR [eax+0x430d0016],al
  43e478:	outs   dx,DWORD PTR ds:[esi]
  43e479:	outs   dx,DWORD PTR ds:[esi]
  43e47a:	imul   ebp,DWORD PTR [ecx+0x65],0x4d
  43e47e:	popa   
  43e47f:	outs   dx,BYTE PTR ds:[esi]
  43e480:	popa   
  43e481:	addr16 gs jb 0x43e4cd
  43e485:	mov    bl,0x43
  43e487:	add    ah,bh
  43e489:	add    BYTE PTR [eax],al
  43e48b:	(bad)  
  43e48c:	cld    
  43e48d:	add    BYTE PTR [eax],al
  43e48f:	inc    DWORD PTR [ecx]
  43e491:	add    BYTE PTR [eax],al
  43e493:	add    BYTE PTR [eax],al
  43e495:	add    BYTE PTR [eax],al
  43e497:	add    BYTE PTR [eax],0x0
  43e49a:	add    BYTE PTR [eax+0x430a0017],al
  43e4a0:	outs   dx,DWORD PTR ds:[esi]
  43e4a1:	ins    DWORD PTR es:[edi],dx
  43e4a2:	jo     0x43e516
  43e4a4:	gs jae 0x43e51a
  43e4a7:	outs   dx,DWORD PTR ds:[esi]
  43e4a8:	jb     0x43e437
  43e4aa:	inc    eax
  43e4ab:	add    al,bh
  43e4ad:	in     al,0x43
	...
  43e4cb:	add    ah,bh
  43e4cd:	in     al,0x43
  43e4cf:	add    BYTE PTR [eax+eax*1],cl
  43e4d2:	add    BYTE PTR [eax],al
  43e4d4:	dec    esp
  43e4d5:	mov    ecx,0x42d00041
  43e4da:	inc    eax
  43e4db:	add    ah,bl
  43e4dd:	inc    edx
  43e4de:	inc    eax
  43e4df:	add    al,ah
  43e4e1:	inc    edx
  43e4e2:	inc    eax
  43e4e3:	add    ah,ah
  43e4e5:	inc    edx
  43e4e6:	inc    eax
  43e4e7:	add    al,bl
  43e4e9:	inc    edx
  43e4ea:	inc    eax
  43e4eb:	add    BYTE PTR [eax],bh
  43e4ed:	inc    eax
  43e4ee:	inc    eax
  43e4ef:	add    BYTE PTR [eax+eax*2+0x40],dl
  43e4f3:	add    BYTE PTR [eax-0x43ffbfc0],dl
  43e4f9:	mov    ebp,0x45120041
  43e4fe:	dec    ecx
  43e4ff:	fs push ebp
  43e501:	outs   dx,BYTE PTR ds:[esi]
  43e502:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  43e506:	outs   dx,BYTE PTR ds:[esi]
  43e507:	push   eax
  43e508:	jb     0x43e579
  43e50a:	je     0x43e57b
  43e50c:	arpl   WORD PTR [edi+0x6c],bp
  43e50f:	nop
  43e510:	pop    esp
  43e511:	in     eax,0x43
	...
  43e51b:	add    BYTE PTR [eax-0x1b],ch
  43e51e:	inc    ebx
	...
  43e52f:	add    BYTE PTR [edx-0x1b],bh
  43e532:	inc    ebx
  43e533:	add    BYTE PTR [eax+eax*1],dl
  43e536:	add    BYTE PTR [eax],al
  43e538:	fcomp  DWORD PTR [esi+0x42d00042]
  43e53e:	inc    eax
  43e53f:	add    ah,bl
  43e541:	inc    edx
  43e542:	inc    eax
  43e543:	add    al,ah
  43e545:	inc    edx
  43e546:	inc    eax
  43e547:	add    ah,ah
  43e549:	inc    edx
  43e54a:	inc    eax
  43e54b:	add    al,bl
  43e54d:	inc    edx
  43e54e:	inc    eax
  43e54f:	add    BYTE PTR [eax],bh
  43e551:	inc    eax
  43e552:	inc    eax
  43e553:	add    BYTE PTR [eax+eax*2+0x40],dl
  43e557:	add    BYTE PTR [eax-0x43ffbfc0],dl
  43e55d:	mov    ebp,0xa3680041
  43e562:	inc    edx
  43e563:	add    BYTE PTR [ebp+eiz*8+0xe0043],ch
  43e56a:	add    BYTE PTR [eax],al
  43e56c:	add    BYTE PTR [eax],al
  43e56e:	add    DWORD PTR [eax],eax
  43e570:	add    BYTE PTR [eax],al
  43e572:	test   BYTE PTR [eax],dl
  43e574:	inc    eax
  43e575:	add    BYTE PTR [eax],dl
  43e577:	add    BYTE PTR [eax],al
  43e579:	add    BYTE PTR [eax],bl
  43e57b:	inc    ebp
  43e57c:	dec    ecx
  43e57d:	fs dec eax
  43e57f:	push   esp
  43e580:	push   esp
  43e581:	push   eax
  43e582:	push   eax
  43e583:	jb     0x43e5f4
  43e585:	je     0x43e5f6
  43e587:	arpl   WORD PTR [edi+0x6c],bp
  43e58a:	inc    ebp
  43e58b:	js     0x43e5f0
  43e58d:	gs jo  0x43e604
  43e590:	imul   ebp,DWORD PTR [edi+0x6e],0xffffff90
  43e597:	inc    DWORD PTR [ebx]
  43e599:	add    BYTE PTR [eax],al
  43e59b:	add    BYTE PTR [ecx],dh
  43e59d:	xor    BYTE PTR cs:[eax],al
  43e5a0:	(bad)  
  43e5a1:	(bad)  
  43e5a2:	(bad)  
  43e5a3:	inc    DWORD PTR [ebx]
  43e5a5:	add    BYTE PTR [eax],al
  43e5a7:	add    BYTE PTR [ecx],dh
  43e5a9:	xor    DWORD PTR cs:[eax],eax
  43e5ac:	push   ebp
  43e5ad:	mov    ebp,esp
  43e5af:	push   ebx
  43e5b0:	push   esi
  43e5b1:	test   dl,dl
  43e5b3:	je     0x43e5bd
  43e5b5:	add    esp,0xfffffff0
  43e5b8:	call   0x4043ac
  43e5bd:	mov    ebx,edx
  43e5bf:	mov    esi,eax
  43e5c1:	mov    eax,DWORD PTR [ebp+0xc]
  43e5c4:	push   eax
  43e5c5:	xor    edx,edx
  43e5c7:	mov    eax,esi
  43e5c9:	call   0x42a368
  43e5ce:	lea    eax,[esi+0x10]
  43e5d1:	mov    edx,DWORD PTR [ebp+0x8]
  43e5d4:	call   0x404fdc
  43e5d9:	mov    eax,esi
  43e5db:	test   bl,bl
  43e5dd:	je     0x43e5ee
  43e5df:	call   0x404404
  43e5e4:	pop    DWORD PTR fs:0x0
  43e5eb:	add    esp,0xc
  43e5ee:	mov    eax,esi
  43e5f0:	pop    esi
  43e5f1:	pop    ebx
  43e5f2:	pop    ebp
  43e5f3:	ret    0x8
  43e5f6:	mov    eax,eax
  43e5f8:	push   ebx
  43e5f9:	push   esi
  43e5fa:	call   0x404454
  43e5ff:	mov    ebx,edx
  43e601:	mov    esi,eax
  43e603:	lea    edx,[esi+0x128]
  43e609:	mov    eax,ds:0x41be90
  43e60e:	call   0x41b14c
  43e613:	lea    edx,[esi+0x124]
  43e619:	mov    eax,ds:0x41be90
  43e61e:	call   0x41b14c
  43e623:	lea    edx,[esi+0x12c]
  43e629:	mov    eax,ds:0x41be90
  43e62e:	call   0x41b14c
  43e633:	mov    edx,ebx
  43e635:	and    dl,0xfc
  43e638:	mov    eax,esi
  43e63a:	call   0x430080
  43e63f:	test   bl,bl
  43e641:	jle    0x43e64a
  43e643:	mov    eax,esi
  43e645:	call   0x4043fc
  43e64a:	pop    esi
  43e64b:	pop    ebx
  43e64c:	ret    
  43e64d:	lea    eax,[eax+0x0]
  43e650:	push   ebp
  43e651:	mov    ebp,esp
  43e653:	add    esp,0xfffffff8
  43e656:	push   ebx
  43e657:	push   esi
  43e658:	xor    ebx,ebx
  43e65a:	mov    DWORD PTR [ebp-0x8],ebx
  43e65d:	mov    esi,ecx
  43e65f:	mov    DWORD PTR [ebp-0x4],edx
  43e662:	mov    ebx,eax
  43e664:	mov    eax,DWORD PTR [ebp-0x4]
  43e667:	call   0x405408
  43e66c:	xor    eax,eax
  43e66e:	push   ebp
  43e66f:	push   0x43e6b2
  43e674:	push   DWORD PTR fs:[eax]
  43e677:	mov    DWORD PTR fs:[eax],esp
  43e67a:	push   0xffffffff
  43e67c:	lea    eax,[ebp-0x8]
  43e67f:	push   eax
  43e680:	lea    ecx,[ebp-0x8]
  43e683:	mov    edx,DWORD PTR [ebp-0x4]
  43e686:	mov    eax,ebx
  43e688:	call   0x440efc
  43e68d:	mov    edx,DWORD PTR [ebp-0x8]
  43e690:	mov    eax,esi
  43e692:	call   0x404fdc
  43e697:	xor    eax,eax
  43e699:	pop    edx
  43e69a:	pop    ecx
  43e69b:	pop    ecx
  43e69c:	mov    DWORD PTR fs:[eax],edx
  43e69f:	push   0x43e6b9
  43e6a4:	lea    eax,[ebp-0x8]
  43e6a7:	mov    edx,0x2
  43e6ac:	call   0x404fac
  43e6b1:	ret    
  43e6b2:	jmp    0x40481c
  43e6b7:	jmp    0x43e6a4
  43e6b9:	pop    esi
  43e6ba:	pop    ebx
  43e6bb:	pop    ecx
  43e6bc:	pop    ecx
  43e6bd:	pop    ebp
  43e6be:	ret    
  43e6bf:	nop
  43e6c0:	push   ebp
  43e6c1:	mov    ebp,esp
  43e6c3:	push   ecx
  43e6c4:	push   ebx
  43e6c5:	movzx  ebx,BYTE PTR [eax+0x120]
  43e6cc:	mov    BYTE PTR [ebp-0x1],bl
  43e6cf:	cmp    WORD PTR [eax+0x13a],0x0
  43e6d7:	je     0x43e6f4
  43e6d9:	lea    ebx,[ebp+0x8]
  43e6dc:	push   ebx
  43e6dd:	lea    ebx,[ebp-0x1]
  43e6e0:	push   ebx
  43e6e1:	push   ecx
  43e6e2:	mov    ecx,edx
  43e6e4:	mov    ebx,eax
  43e6e6:	mov    edx,eax
  43e6e8:	mov    eax,DWORD PTR [ebx+0x13c]
  43e6ee:	call   DWORD PTR [ebx+0x138]
  43e6f4:	movzx  eax,BYTE PTR [ebp-0x1]
  43e6f8:	pop    ebx
  43e6f9:	pop    ecx
  43e6fa:	pop    ebp
  43e6fb:	ret    0x4
  43e6fe:	mov    eax,eax
  43e700:	push   ebp
  43e701:	mov    ebp,esp
  43e703:	add    esp,0xfffffff8
  43e706:	push   ebx
  43e707:	push   esi
  43e708:	push   edi
  43e709:	xor    ebx,ebx
  43e70b:	mov    DWORD PTR [ebp-0x4],ebx
  43e70e:	mov    DWORD PTR [ebp-0x8],ecx
  43e711:	mov    edi,edx
  43e713:	mov    ebx,eax
  43e715:	xor    eax,eax
  43e717:	push   ebp
  43e718:	push   0x43e782
  43e71d:	push   DWORD PTR fs:[eax]
  43e720:	mov    DWORD PTR fs:[eax],esp
  43e723:	mov    esi,DWORD PTR [ebx+0xf8]
  43e729:	test   esi,esi
  43e72b:	je     0x43e76c
  43e72d:	lea    eax,[ebp-0x4]
  43e730:	push   eax
  43e731:	mov    eax,DWORD PTR [ebx+0x8c]
  43e737:	mov    edx,DWORD PTR ds:0x46179c
  43e73d:	call   0x40422c
  43e742:	mov    ecx,eax
  43e744:	mov    edx,edi
  43e746:	mov    eax,esi
  43e748:	call   0x43aca4
  43e74d:	mov    eax,DWORD PTR [ebp-0x4]
  43e750:	call   0x405248
  43e755:	test   eax,eax
  43e757:	jle    0x43e76c
  43e759:	mov    eax,DWORD PTR [ebp-0x8]
  43e75c:	mov    eax,DWORD PTR [eax+0x8]
  43e75f:	mov    ecx,DWORD PTR [ebp-0x4]
  43e762:	mov    edx,0x43e798
  43e767:	call   0x437440
  43e76c:	xor    eax,eax
  43e76e:	pop    edx
  43e76f:	pop    ecx
  43e770:	pop    ecx
  43e771:	mov    DWORD PTR fs:[eax],edx
  43e774:	push   0x43e789
  43e779:	lea    eax,[ebp-0x4]
  43e77c:	call   0x404f88
  43e781:	ret    
  43e782:	jmp    0x40481c
  43e787:	jmp    0x43e779
  43e789:	pop    edi
  43e78a:	pop    esi
  43e78b:	pop    ebx
  43e78c:	pop    ecx
  43e78d:	pop    ecx
  43e78e:	pop    ebp
  43e78f:	ret    
  43e790:	(bad)  
  43e791:	(bad)  
  43e792:	(bad)  
  43e793:	inc    DWORD PTR [esi]
  43e795:	add    BYTE PTR [eax],al
  43e797:	add    BYTE PTR [ebx+0x6f],al
  43e79a:	outs   dx,DWORD PTR ds:[esi]
  43e79b:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  43e79f:	add    BYTE PTR [ebp-0x75],dl
  43e7a2:	in     al,dx
  43e7a3:	push   0x0
  43e7a5:	push   0x0
  43e7a7:	push   0x0
  43e7a9:	push   ebx
  43e7aa:	push   esi
  43e7ab:	push   edi
  43e7ac:	mov    edi,eax
  43e7ae:	xor    eax,eax
  43e7b0:	push   ebp
  43e7b1:	push   0x43ea01
  43e7b6:	push   DWORD PTR fs:[eax]
  43e7b9:	mov    DWORD PTR fs:[eax],esp
  43e7bc:	mov    eax,DWORD PTR [edi+0x12c]
  43e7c2:	mov    eax,DWORD PTR [eax+0x10]
  43e7c5:	call   0x405248
  43e7ca:	test   eax,eax
  43e7cc:	jle    0x43e8b7
  43e7d2:	mov    eax,DWORD PTR [edi+0x12c]
  43e7d8:	mov    edx,DWORD PTR [eax+0x10]
  43e7db:	mov    eax,DWORD PTR [edi+0xc0]
  43e7e1:	call   0x41d948
  43e7e6:	test   al,al
  43e7e8:	je     0x43e7fb
  43e7ea:	mov    eax,DWORD PTR [edi+0x12c]
  43e7f0:	mov    eax,DWORD PTR [eax+0xc]
  43e7f3:	cmp    eax,DWORD PTR [edi+0xd4]
  43e7f9:	je     0x43e80d
  43e7fb:	mov    eax,edi
  43e7fd:	mov    edx,DWORD PTR [eax]
  43e7ff:	call   DWORD PTR [edx+0x5c]
  43e802:	test   al,al
  43e804:	je     0x43e80d
  43e806:	mov    eax,edi
  43e808:	call   0x430684
  43e80d:	lea    eax,[ebp-0x4]
  43e810:	mov    ebx,DWORD PTR [edi+0x12c]
  43e816:	mov    edx,DWORD PTR [ebx+0x10]
  43e819:	call   0x405020
  43e81e:	mov    esi,DWORD PTR [ebx+0xc]
  43e821:	mov    eax,DWORD PTR [edi+0x124]
  43e827:	mov    eax,DWORD PTR [eax+0x8]
  43e82a:	mov    edx,0x43ea1c
  43e82f:	call   0x41d948
  43e834:	test   al,al
  43e836:	je     0x43e889
  43e838:	mov    ebx,DWORD PTR [edi+0x8c]
  43e83e:	test   ebx,ebx
  43e840:	je     0x43e882
  43e842:	mov    eax,ebx
  43e844:	mov    edx,DWORD PTR ds:0x46179c
  43e84a:	call   0x40422c
  43e84f:	test   al,al
  43e851:	je     0x43e861
  43e853:	mov    dl,0x1
  43e855:	mov    eax,ebx
  43e857:	mov    ecx,DWORD PTR [eax]
  43e859:	call   DWORD PTR [ecx+0xdc]
  43e85f:	jmp    0x43e882
  43e861:	lea    edx,[ebp-0x8]
  43e864:	mov    eax,ds:0x46ddf4
  43e869:	call   0x406f48
  43e86e:	mov    ecx,DWORD PTR [ebp-0x8]
  43e871:	mov    dl,0x1
  43e873:	mov    eax,ds:0x4270d8
  43e878:	call   0x41bdbc
  43e87d:	call   0x4048fc
  43e882:	mov    bl,0x3
  43e884:	jmp    0x43e9cd
  43e889:	mov    ebx,DWORD PTR [edi+0x8c]
  43e88f:	test   ebx,ebx
  43e891:	je     0x43e8b0
  43e893:	mov    eax,ebx
  43e895:	mov    edx,DWORD PTR ds:0x46179c
  43e89b:	call   0x40422c
  43e8a0:	test   al,al
  43e8a2:	je     0x43e8b0
  43e8a4:	mov    dl,0x1
  43e8a6:	mov    eax,ebx
  43e8a8:	mov    ecx,DWORD PTR [eax]
  43e8aa:	call   DWORD PTR [ecx+0xdc]
  43e8b0:	mov    bl,0x2
  43e8b2:	jmp    0x43e9cd
  43e8b7:	mov    edx,DWORD PTR [edi+0xa0]
  43e8bd:	test   edx,edx
  43e8bf:	je     0x43e8ec
  43e8c1:	mov    eax,DWORD PTR [edx+0xd0]
  43e8c7:	test   eax,eax
  43e8c9:	je     0x43e8ec
  43e8cb:	mov    edx,DWORD PTR [edi+0x124]
  43e8d1:	movzx  edx,BYTE PTR [edx+0x2c]
  43e8d5:	cmp    dl,BYTE PTR [eax+0x31]
  43e8d8:	je     0x43e8ec
  43e8da:	mov    eax,edi
  43e8dc:	mov    edx,DWORD PTR [eax]
  43e8de:	call   DWORD PTR [edx+0x5c]
  43e8e1:	test   al,al
  43e8e3:	je     0x43e8ec
  43e8e5:	mov    eax,edi
  43e8e7:	call   0x430684
  43e8ec:	lea    eax,[ebp-0x4]
  43e8ef:	mov    ebx,DWORD PTR [edi+0x124]
  43e8f5:	mov    edx,DWORD PTR [ebx+0x18]
  43e8f8:	call   0x405020
  43e8fd:	mov    edx,DWORD PTR [ebx+0x10]
  43e900:	mov    ecx,0x50
  43e905:	mov    eax,ds:0x41be90
  43e90a:	call   0x41b254
  43e90f:	mov    esi,eax
  43e911:	mov    edx,DWORD PTR [ebp-0x4]
  43e914:	mov    eax,DWORD PTR [edi+0xc0]
  43e91a:	call   0x41d948
  43e91f:	test   al,al
  43e921:	je     0x43e92b
  43e923:	cmp    esi,DWORD PTR [edi+0xd4]
  43e929:	je     0x43e93d
  43e92b:	mov    eax,edi
  43e92d:	mov    edx,DWORD PTR [eax]
  43e92f:	call   DWORD PTR [edx+0x5c]
  43e932:	test   al,al
  43e934:	je     0x43e93d
  43e936:	mov    eax,edi
  43e938:	call   0x430684
  43e93d:	mov    eax,DWORD PTR [edi+0x124]
  43e943:	mov    eax,DWORD PTR [eax+0x8]
  43e946:	mov    edx,0x43ea1c
  43e94b:	call   0x41d948
  43e950:	test   al,al
  43e952:	je     0x43e9a4
  43e954:	mov    ebx,DWORD PTR [edi+0x8c]
  43e95a:	test   ebx,ebx
  43e95c:	je     0x43e96f
  43e95e:	mov    eax,ebx
  43e960:	mov    edx,DWORD PTR ds:0x46179c
  43e966:	call   0x40422c
  43e96b:	test   al,al
  43e96d:	jne    0x43e990
  43e96f:	lea    edx,[ebp-0xc]
  43e972:	mov    eax,ds:0x46ddf4
  43e977:	call   0x406f48
  43e97c:	mov    ecx,DWORD PTR [ebp-0xc]
  43e97f:	mov    dl,0x1
  43e981:	mov    eax,ds:0x4270d8
  43e986:	call   0x41bdbc
  43e98b:	call   0x4048fc
  43e990:	xor    edx,edx
  43e992:	mov    eax,DWORD PTR [edi+0x8c]
  43e998:	mov    ecx,DWORD PTR [eax]
  43e99a:	call   DWORD PTR [ecx+0xdc]
  43e9a0:	mov    bl,0x1
  43e9a2:	jmp    0x43e9cd
  43e9a4:	mov    ebx,DWORD PTR [edi+0x8c]
  43e9aa:	test   ebx,ebx
  43e9ac:	je     0x43e9cb
  43e9ae:	mov    eax,ebx
  43e9b0:	mov    edx,DWORD PTR ds:0x46179c
  43e9b6:	call   0x40422c
  43e9bb:	test   al,al
  43e9bd:	je     0x43e9cb
  43e9bf:	mov    dl,0x1
  43e9c1:	mov    eax,ebx
  43e9c3:	mov    ecx,DWORD PTR [eax]
  43e9c5:	call   DWORD PTR [ecx+0xdc]
  43e9cb:	xor    ebx,ebx
  43e9cd:	mov    edx,DWORD PTR [ebp-0x4]
  43e9d0:	mov    eax,edi
  43e9d2:	mov    ecx,DWORD PTR [eax]
  43e9d4:	call   DWORD PTR [ecx+0x88]
  43e9da:	mov    edx,esi
  43e9dc:	mov    eax,edi
  43e9de:	mov    ecx,DWORD PTR [eax]
  43e9e0:	call   DWORD PTR [ecx+0x8c]
  43e9e6:	xor    eax,eax
  43e9e8:	pop    edx
  43e9e9:	pop    ecx
  43e9ea:	pop    ecx
  43e9eb:	mov    DWORD PTR fs:[eax],edx
  43e9ee:	push   0x43ea08
  43e9f3:	lea    eax,[ebp-0xc]
  43e9f6:	mov    edx,0x3
  43e9fb:	call   0x404fac
  43ea00:	ret    
  43ea01:	jmp    0x40481c
  43ea06:	jmp    0x43e9f3
  43ea08:	mov    eax,ebx
  43ea0a:	pop    edi
  43ea0b:	pop    esi
  43ea0c:	pop    ebx
  43ea0d:	mov    esp,ebp
  43ea0f:	pop    ebp
  43ea10:	ret    
  43ea11:	add    BYTE PTR [eax],al
  43ea13:	add    bh,bh
  43ea15:	(bad)  
  43ea16:	(bad)  
  43ea17:	inc    DWORD PTR ds:0x48000000
  43ea1d:	push   esp
  43ea1e:	push   esp
  43ea1f:	push   eax
  43ea20:	push   ebx
  43ea21:	add    BYTE PTR [eax],al
  43ea23:	add    BYTE PTR [ebp-0x75],dl
  43ea26:	in     al,dx
  43ea27:	push   0x0
  43ea29:	push   0x0
  43ea2b:	push   ebx
  43ea2c:	xor    eax,eax
  43ea2e:	push   ebp
  43ea2f:	push   0x43eabf
  43ea34:	push   DWORD PTR fs:[eax]
  43ea37:	mov    DWORD PTR fs:[eax],esp
  43ea3a:	lea    edx,[ebp-0x4]
  43ea3d:	mov    eax,DWORD PTR [ebp+0x8]
  43ea40:	mov    eax,DWORD PTR [eax-0x4]
  43ea43:	mov    eax,DWORD PTR [eax+0x8c]
  43ea49:	call   0x428524
  43ea4e:	mov    ebx,DWORD PTR ds:0x46da9c
  43ea54:	mov    ebx,DWORD PTR [ebx]
  43ea56:	mov    edx,DWORD PTR [ebp-0x4]
  43ea59:	mov    eax,0x43ead8
  43ea5e:	call   ebx
  43ea60:	mov    ebx,eax
  43ea62:	test   ebx,ebx
  43ea64:	jle    0x43ea83
  43ea66:	lea    eax,[ebp-0x4]
  43ea69:	push   eax
  43ea6a:	mov    ecx,ebx
  43ea6c:	sub    ecx,0x1
  43ea6f:	jno    0x43ea76
  43ea71:	call   0x403f70
  43ea76:	mov    edx,0x1
  43ea7b:	mov    eax,DWORD PTR [ebp-0x4]
  43ea7e:	call   0x405480
  43ea83:	lea    eax,[ebp-0x8]
  43ea86:	mov    ecx,DWORD PTR [ebp-0x4]
  43ea89:	mov    edx,0x43eae4
  43ea8e:	call   0x4052a0
  43ea93:	mov    edx,DWORD PTR [ebp-0x8]
  43ea96:	xor    ecx,ecx
  43ea98:	mov    eax,ds:0x41be90
  43ea9d:	call   0x41b254
  43eaa2:	mov    ebx,eax
  43eaa4:	xor    eax,eax
  43eaa6:	pop    edx
  43eaa7:	pop    ecx
  43eaa8:	pop    ecx
  43eaa9:	mov    DWORD PTR fs:[eax],edx
  43eaac:	push   0x43eac6
  43eab1:	lea    eax,[ebp-0x8]
  43eab4:	mov    edx,0x2
  43eab9:	call   0x404fac
  43eabe:	ret    
  43eabf:	jmp    0x40481c
  43eac4:	jmp    0x43eab1
  43eac6:	mov    eax,ebx
  43eac8:	pop    ebx
  43eac9:	pop    ecx
  43eaca:	pop    ecx
  43eacb:	pop    ebp
  43eacc:	ret    
  43eacd:	add    BYTE PTR [eax],al
  43eacf:	add    bh,bh
  43ead1:	(bad)  
  43ead2:	(bad)  
  43ead3:	inc    DWORD PTR [ecx]
  43ead5:	add    BYTE PTR [eax],al
  43ead7:	add    BYTE PTR [eax],ah
  43ead9:	add    BYTE PTR [eax],al
  43eadb:	add    bh,bh
  43eadd:	(bad)  
  43eade:	(bad)  
  43eadf:	inc    DWORD PTR [ecx]
  43eae1:	add    BYTE PTR [eax],al
  43eae3:	add    BYTE PTR [eax+eax*1],ah
  43eae6:	add    BYTE PTR [eax],al
  43eae8:	push   ebp
  43eae9:	mov    ebp,esp
  43eaeb:	add    esp,0xffffffd8
  43eaee:	push   ebx
  43eaef:	push   esi
  43eaf0:	push   edi
  43eaf1:	xor    ecx,ecx
  43eaf3:	mov    DWORD PTR [ebp-0x28],ecx
  43eaf6:	mov    DWORD PTR [ebp-0x24],ecx
  43eaf9:	mov    DWORD PTR [ebp-0x20],ecx
  43eafc:	mov    DWORD PTR [ebp-0x14],ecx
  43eaff:	mov    DWORD PTR [ebp-0x8],edx
  43eb02:	mov    DWORD PTR [ebp-0x4],eax
  43eb05:	xor    eax,eax
  43eb07:	push   ebp
  43eb08:	push   0x43ed6b
  43eb0d:	push   DWORD PTR fs:[eax]
  43eb10:	mov    DWORD PTR fs:[eax],esp
  43eb13:	xor    eax,eax
  43eb15:	mov    DWORD PTR [ebp-0x10],eax
  43eb18:	mov    eax,DWORD PTR [ebp-0x4]
  43eb1b:	cmp    DWORD PTR [eax+0xfc],0x0
  43eb22:	je     0x43eb60
  43eb24:	mov    eax,DWORD PTR [ebp-0x4]
  43eb27:	call   0x440088
  43eb2c:	mov    eax,DWORD PTR [eax+0x10]
  43eb2f:	mov    edx,0x43ed84
  43eb34:	call   0x4053b0
  43eb39:	jne    0x43eb42
  43eb3b:	mov    DWORD PTR [ebp-0x10],0x1
  43eb42:	mov    eax,DWORD PTR [ebp-0x4]
  43eb45:	call   0x440088
  43eb4a:	mov    eax,DWORD PTR [eax+0x10]
  43eb4d:	mov    edx,0x43ed94
  43eb52:	call   0x4053b0
  43eb57:	jne    0x43eb60
  43eb59:	mov    DWORD PTR [ebp-0x10],0x2
  43eb60:	mov    eax,DWORD PTR [ebp-0x8]
  43eb63:	mov    eax,DWORD PTR [eax+0x90]
  43eb69:	test   eax,eax
  43eb6b:	je     0x43ed48
  43eb71:	cmp    DWORD PTR [ebp-0x10],0x0
  43eb75:	jle    0x43eb88
  43eb77:	mov    dl,0x1
  43eb79:	mov    eax,ds:0x412ff4
  43eb7e:	call   0x404070
  43eb83:	mov    DWORD PTR [ebp-0xc],eax
  43eb86:	jmp    0x43eb8b
  43eb88:	mov    DWORD PTR [ebp-0xc],eax
  43eb8b:	xor    edx,edx
  43eb8d:	push   ebp
  43eb8e:	push   0x43ed41
  43eb93:	push   DWORD PTR fs:[edx]
  43eb96:	mov    DWORD PTR fs:[edx],esp
  43eb99:	lea    ecx,[ebp-0x14]
  43eb9c:	mov    eax,DWORD PTR [ebp-0x8]
  43eb9f:	mov    eax,DWORD PTR [eax+0x8]
  43eba2:	mov    edx,0x43eda4
  43eba7:	call   0x437220
  43ebac:	mov    edx,DWORD PTR [ebp-0x14]
  43ebaf:	mov    ebx,DWORD PTR ds:0x46da9c
  43ebb5:	mov    ebx,DWORD PTR [ebx]
  43ebb7:	mov    eax,0x43edc0
  43ebbc:	call   ebx
  43ebbe:	test   eax,eax
  43ebc0:	jle    0x43ec48
  43ebc6:	push   0x0
  43ebc8:	lea    edx,[ebp-0x20]
  43ebcb:	mov    eax,ds:0x46daa0
  43ebd0:	call   0x406f48
  43ebd5:	mov    eax,DWORD PTR [ebp-0x20]
  43ebd8:	mov    DWORD PTR [ebp-0x1c],eax
  43ebdb:	mov    BYTE PTR [ebp-0x18],0xb
  43ebdf:	lea    ecx,[ebp-0x1c]
  43ebe2:	mov    dl,0x5
  43ebe4:	mov    eax,DWORD PTR [ebp-0x4]
  43ebe7:	call   0x424d00
  43ebec:	push   ebp
  43ebed:	call   0x43ea24
  43ebf2:	pop    ecx
  43ebf3:	mov    ebx,eax
  43ebf5:	test   ebx,ebx
  43ebf7:	jle    0x43ec32
  43ebf9:	mov    eax,ebx
  43ebfb:	cdq    
  43ebfc:	push   edx
  43ebfd:	push   eax
  43ebfe:	mov    eax,DWORD PTR [ebp-0x4]
  43ec01:	mov    eax,DWORD PTR [eax+0x8c]
  43ec07:	xor    ecx,ecx
  43ec09:	mov    edx,DWORD PTR [ebp-0xc]
  43ec0c:	mov    ebx,DWORD PTR [eax]
  43ec0e:	call   DWORD PTR [ebx+0xac]
  43ec14:	lea    edx,[ebp-0x24]
  43ec17:	mov    eax,DWORD PTR [ebp-0x4]
  43ec1a:	mov    eax,DWORD PTR [eax+0x8c]
  43ec20:	call   0x428524
  43ec25:	push   ebp
  43ec26:	call   0x43ea24
  43ec2b:	pop    ecx
  43ec2c:	mov    ebx,eax
  43ec2e:	test   ebx,ebx
  43ec30:	jg     0x43ebf9
  43ec32:	lea    edx,[ebp-0x28]
  43ec35:	mov    eax,DWORD PTR [ebp-0x4]
  43ec38:	mov    eax,DWORD PTR [eax+0x8c]
  43ec3e:	call   0x428524
  43ec43:	jmp    0x43eccd
  43ec48:	mov    eax,DWORD PTR [ebp-0x8]
  43ec4b:	cmp    DWORD PTR [eax+0x1c],0x0
  43ec4f:	jne    0x43ec59
  43ec51:	cmp    DWORD PTR [eax+0x18],0x0
  43ec55:	jbe    0x43ecaa
  43ec57:	jmp    0x43ec5b
  43ec59:	jle    0x43ecaa
  43ec5b:	xor    edx,edx
  43ec5d:	push   ebp
  43ec5e:	push   0x43ec92
  43ec63:	push   DWORD PTR fs:[edx]
  43ec66:	mov    DWORD PTR fs:[edx],esp
  43ec69:	mov    eax,DWORD PTR [ebp-0x8]
  43ec6c:	push   DWORD PTR [eax+0x1c]
  43ec6f:	push   DWORD PTR [eax+0x18]
  43ec72:	mov    eax,DWORD PTR [ebp-0x4]
  43ec75:	mov    eax,DWORD PTR [eax+0x8c]
  43ec7b:	xor    ecx,ecx
  43ec7d:	mov    edx,DWORD PTR [ebp-0xc]
  43ec80:	mov    ebx,DWORD PTR [eax]
  43ec82:	call   DWORD PTR [ebx+0xac]
  43ec88:	xor    eax,eax
  43ec8a:	pop    edx
  43ec8b:	pop    ecx
  43ec8c:	pop    ecx
  43ec8d:	mov    DWORD PTR fs:[eax],edx
  43ec90:	jmp    0x43eccd
  43ec92:	jmp    0x404694
  43ec97:	add    DWORD PTR [eax],eax
  43ec99:	add    BYTE PTR [eax],al
  43ec9b:	adc    BYTE PTR [edx-0x135cffbf],bh
  43eca1:	inc    ebx
  43eca2:	add    al,ch
  43eca4:	rcr    BYTE PTR [esp+edi*8-0x1],1
  43eca8:	jmp    0x43eccd
  43ecaa:	mov    eax,DWORD PTR [ebp-0x8]
  43ecad:	cmp    BYTE PTR [eax+0x64],0x0
  43ecb1:	jne    0x43eccd
  43ecb3:	push   0xffffffff
  43ecb5:	push   0xffffffff
  43ecb7:	mov    eax,DWORD PTR [ebp-0x4]
  43ecba:	mov    eax,DWORD PTR [eax+0x8c]
  43ecc0:	mov    cl,0x1
  43ecc2:	mov    edx,DWORD PTR [ebp-0xc]
  43ecc5:	mov    ebx,DWORD PTR [eax]
  43ecc7:	call   DWORD PTR [ebx+0xac]
  43eccd:	cmp    DWORD PTR [ebp-0x10],0x0
  43ecd1:	jle    0x43ecdf
  43ecd3:	push   0x0
  43ecd5:	push   0x0
  43ecd7:	mov    eax,DWORD PTR [ebp-0xc]
  43ecda:	call   0x416404
  43ecdf:	mov    eax,DWORD PTR [ebp-0x10]
  43ece2:	dec    eax
  43ece3:	je     0x43ecea
  43ece5:	dec    eax
  43ece6:	je     0x43ed06
  43ece8:	jmp    0x43ed20
  43ecea:	mov    eax,DWORD PTR [ebp-0x8]
  43eced:	mov    ecx,DWORD PTR [eax+0x90]
  43ecf3:	mov    eax,DWORD PTR [ebp-0x4]
  43ecf6:	mov    eax,DWORD PTR [eax+0xfc]
  43ecfc:	mov    edx,DWORD PTR [ebp-0xc]
  43ecff:	mov    ebx,DWORD PTR [eax]
  43ed01:	call   DWORD PTR [ebx+0x44]
  43ed04:	jmp    0x43ed20
  43ed06:	mov    eax,DWORD PTR [ebp-0x8]
  43ed09:	mov    ecx,DWORD PTR [eax+0x90]
  43ed0f:	mov    eax,DWORD PTR [ebp-0x4]
  43ed12:	mov    eax,DWORD PTR [eax+0xfc]
  43ed18:	mov    edx,DWORD PTR [ebp-0xc]
  43ed1b:	mov    ebx,DWORD PTR [eax]
  43ed1d:	call   DWORD PTR [ebx+0x50]
  43ed20:	xor    eax,eax
  43ed22:	pop    edx
  43ed23:	pop    ecx
  43ed24:	pop    ecx
  43ed25:	mov    DWORD PTR fs:[eax],edx
  43ed28:	push   0x43ed48
  43ed2d:	cmp    DWORD PTR [ebp-0x10],0x0
  43ed31:	jle    0x43ed40
  43ed33:	lea    edx,[ebp-0xc]
  43ed36:	mov    eax,ds:0x41be90
  43ed3b:	call   0x41b14c
  43ed40:	ret    
  43ed41:	jmp    0x40481c
  43ed46:	jmp    0x43ed2d
  43ed48:	xor    eax,eax
  43ed4a:	pop    edx
  43ed4b:	pop    ecx
  43ed4c:	pop    ecx
  43ed4d:	mov    DWORD PTR fs:[eax],edx
  43ed50:	push   0x43ed72
  43ed55:	lea    eax,[ebp-0x28]
  43ed58:	mov    edx,0x3
  43ed5d:	call   0x404fac
  43ed62:	lea    eax,[ebp-0x14]
  43ed65:	call   0x404f88
  43ed6a:	ret    
  43ed6b:	jmp    0x40481c
  43ed70:	jmp    0x43ed55
  43ed72:	pop    edi
  43ed73:	pop    esi
  43ed74:	pop    ebx
  43ed75:	mov    esp,ebp
  43ed77:	pop    ebp
  43ed78:	ret    
  43ed79:	add    BYTE PTR [eax],al
  43ed7b:	add    bh,bh
  43ed7d:	(bad)  
  43ed7e:	(bad)  
  43ed7f:	inc    DWORD PTR [edi]
  43ed81:	add    BYTE PTR [eax],al
  43ed83:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  43ed87:	ins    BYTE PTR es:[edi],dx
  43ed88:	popa   
  43ed89:	je     0x43edf0
  43ed8b:	add    bh,bh
  43ed8d:	(bad)  
  43ed8e:	(bad)  
  43ed8f:	inc    DWORD PTR [eax+eax*1]
  43ed92:	add    BYTE PTR [eax],al
  43ed94:	addr16 jp 0x43ee00
  43ed97:	jo     0x43ed99
  43ed99:	add    BYTE PTR [eax],al
  43ed9b:	add    bh,bh
  43ed9d:	(bad)  
  43ed9e:	(bad)  
  43ed9f:	call   DWORD PTR [ecx]
  43eda1:	add    BYTE PTR [eax],al
  43eda3:	add    BYTE PTR [edx+esi*2+0x61],dl
  43eda7:	outs   dx,BYTE PTR ds:[esi]
  43eda8:	jae    0x43ee10
  43edaa:	gs jb  0x43edda
  43edad:	inc    ebp
  43edae:	outs   dx,BYTE PTR ds:[esi]
  43edaf:	arpl   WORD PTR [edi+0x64],bp
  43edb2:	imul   ebp,DWORD PTR [esi+0x67],0xff000000
  43edb9:	(bad)  
  43edba:	(bad)  
  43edbb:	inc    DWORD PTR [edi]
  43edbd:	add    BYTE PTR [eax],al
  43edbf:	add    BYTE PTR [ebx+0x68],ah
  43edc2:	jne    0x43ee32
  43edc4:	imul   esp,DWORD PTR [ebp+0x64],0x0
  43edc8:	push   ebx
  43edc9:	push   esi
  43edca:	push   edi
  43edcb:	push   ebp
  43edcc:	add    esp,0xfffffff8
  43edcf:	mov    edi,ecx
  43edd1:	mov    DWORD PTR [esp],edx
  43edd4:	mov    ebp,eax
  43edd6:	mov    BYTE PTR [esp+0x4],0x0
  43eddb:	mov    ebx,edi
  43eddd:	test   ebx,ebx
  43eddf:	jl     0x43ee0b
  43ede1:	inc    ebx
  43ede2:	xor    esi,esi
  43ede4:	mov    eax,ebp
  43ede6:	test   esi,esi
  43ede8:	jl     0x43edee
  43edea:	cmp    esi,edi
  43edec:	jle    0x43edf3
  43edee:	call   0x403f68
  43edf3:	mov    edx,DWORD PTR [esp]
  43edf6:	mov    edx,DWORD PTR [edx+esi*4]
  43edf9:	call   0x4053b0
  43edfe:	jne    0x43ee07
  43ee00:	mov    BYTE PTR [esp+0x4],0x1
  43ee05:	jmp    0x43ee0b
  43ee07:	inc    esi
  43ee08:	dec    ebx
  43ee09:	jne    0x43ede4
  43ee0b:	movzx  eax,BYTE PTR [esp+0x4]
  43ee10:	pop    ecx
  43ee11:	pop    edx
  43ee12:	pop    ebp
  43ee13:	pop    edi
  43ee14:	pop    esi
  43ee15:	pop    ebx
  43ee16:	ret    
  43ee17:	nop
  43ee18:	push   ebp
  43ee19:	mov    ebp,esp
  43ee1b:	mov    ecx,0x5
  43ee20:	push   0x0
  43ee22:	push   0x0
  43ee24:	dec    ecx
  43ee25:	jne    0x43ee20
  43ee27:	push   ecx
  43ee28:	push   ebx
  43ee29:	push   esi
  43ee2a:	push   edi
  43ee2b:	mov    esi,edx
  43ee2d:	mov    ebx,eax
  43ee2f:	xor    eax,eax
  43ee31:	push   ebp
  43ee32:	push   0x43f1fc
  43ee37:	push   DWORD PTR fs:[eax]
  43ee3a:	mov    DWORD PTR fs:[eax],esp
  43ee3d:	mov    ecx,DWORD PTR [esi+0xac]
  43ee43:	mov    dl,0x1
  43ee45:	mov    eax,ds:0x436390
  43ee4a:	call   0x4364a4
  43ee4f:	mov    DWORD PTR [ebp-0x4],eax
  43ee52:	xor    edx,edx
  43ee54:	push   ebp
  43ee55:	push   0x43f1cd
  43ee5a:	push   DWORD PTR fs:[edx]
  43ee5d:	mov    DWORD PTR fs:[edx],esp
  43ee60:	mov    eax,DWORD PTR [ebp-0x4]
  43ee63:	mov    eax,DWORD PTR [eax+0x20]
  43ee66:	call   0x405248
  43ee6b:	test   eax,eax
  43ee6d:	jle    0x43ee91
  43ee6f:	lea    eax,[esi+0x8c]
  43ee75:	mov    edx,DWORD PTR [ebp-0x4]
  43ee78:	mov    edx,DWORD PTR [edx+0x20]
  43ee7b:	call   0x404fdc
  43ee80:	lea    eax,[esi+0x80]
  43ee86:	mov    edx,DWORD PTR [ebp-0x4]
  43ee89:	mov    edx,DWORD PTR [edx+0x24]
  43ee8c:	call   0x404fdc
  43ee91:	mov    eax,DWORD PTR [ebx+0x124]
  43ee97:	add    eax,0x20
  43ee9a:	mov    edx,DWORD PTR [esi+0x8c]
  43eea0:	call   0x404fdc
  43eea5:	mov    eax,DWORD PTR [ebx+0x124]
  43eeab:	add    eax,0x24
  43eeae:	mov    edx,DWORD PTR [esi+0x80]
  43eeb4:	call   0x404fdc
  43eeb9:	lea    eax,[ebp-0x8]
  43eebc:	push   eax
  43eebd:	mov    eax,DWORD PTR [ebp-0x4]
  43eec0:	mov    edx,DWORD PTR [eax+0x14]
  43eec3:	mov    eax,DWORD PTR [ebx+0x124]
  43eec9:	mov    eax,DWORD PTR [eax+0x14]
  43eecc:	mov    ecx,0x43f214
  43eed1:	call   0x435fa0
  43eed6:	mov    edx,DWORD PTR [ebp-0x8]
  43eed9:	mov    eax,DWORD PTR [ebx+0x124]
  43eedf:	add    eax,0x14
  43eee2:	call   0x404fdc
  43eee7:	mov    eax,DWORD PTR [ebx+0x124]
  43eeed:	add    eax,0x4
  43eef0:	mov    edx,DWORD PTR [ebp-0x4]
  43eef3:	mov    edx,DWORD PTR [edx+0x4]
  43eef6:	call   0x404fdc
  43eefb:	mov    eax,DWORD PTR [ebx+0x124]
  43ef01:	add    eax,0x28
  43ef04:	mov    edx,DWORD PTR [ebp-0x4]
  43ef07:	mov    edx,DWORD PTR [edx+0x28]
  43ef0a:	call   0x404fdc
  43ef0f:	mov    eax,DWORD PTR [ebp-0x4]
  43ef12:	mov    eax,DWORD PTR [eax+0x18]
  43ef15:	call   0x405248
  43ef1a:	test   eax,eax
  43ef1c:	jle    0x43ef32
  43ef1e:	mov    eax,DWORD PTR [ebx+0x124]
  43ef24:	add    eax,0x18
  43ef27:	mov    edx,DWORD PTR [ebp-0x4]
  43ef2a:	mov    edx,DWORD PTR [edx+0x18]
  43ef2d:	call   0x404fdc
  43ef32:	mov    eax,DWORD PTR [ebp-0x4]
  43ef35:	mov    eax,DWORD PTR [eax+0x8]
  43ef38:	call   0x405248
  43ef3d:	test   eax,eax
  43ef3f:	jle    0x43ef57
  43ef41:	mov    eax,DWORD PTR [ebx+0x124]
  43ef47:	add    eax,0x8
  43ef4a:	mov    edx,DWORD PTR [ebp-0x4]
  43ef4d:	mov    edx,DWORD PTR [edx+0x8]
  43ef50:	call   0x404fdc
  43ef55:	jmp    0x43ef96
  43ef57:	mov    eax,DWORD PTR [ebx+0x124]
  43ef5d:	mov    eax,DWORD PTR [eax+0x8]
  43ef60:	mov    edx,0x43f220
  43ef65:	call   0x41d948
  43ef6a:	test   al,al
  43ef6c:	je     0x43ef83
  43ef6e:	mov    eax,DWORD PTR [ebx+0x124]
  43ef74:	add    eax,0x8
  43ef77:	mov    edx,0x43f220
  43ef7c:	call   0x404fdc
  43ef81:	jmp    0x43ef96
  43ef83:	mov    eax,DWORD PTR [ebx+0x124]
  43ef89:	add    eax,0x8
  43ef8c:	mov    edx,0x43f230
  43ef91:	call   0x404fdc
  43ef96:	mov    eax,DWORD PTR [ebp-0x4]
  43ef99:	mov    eax,DWORD PTR [eax+0x10]
  43ef9c:	call   0x405248
  43efa1:	test   eax,eax
  43efa3:	jle    0x43efbe
  43efa5:	mov    eax,DWORD PTR [ebx+0x124]
  43efab:	add    eax,0x10
  43efae:	mov    edx,DWORD PTR [ebp-0x4]
  43efb1:	mov    edx,DWORD PTR [edx+0x10]
  43efb4:	call   0x404fdc
  43efb9:	jmp    0x43f063
  43efbe:	mov    eax,DWORD PTR [ebp-0x4]
  43efc1:	mov    eax,DWORD PTR [eax+0x8]
  43efc4:	mov    edx,0x43f230
  43efc9:	call   0x41d948
  43efce:	test   al,al
  43efd0:	je     0x43eff7
  43efd2:	lea    ecx,[ebp-0xc]
  43efd5:	mov    edx,0x50
  43efda:	mov    eax,ds:0x41be90
  43efdf:	call   0x41b19c
  43efe4:	mov    edx,DWORD PTR [ebp-0xc]
  43efe7:	mov    eax,DWORD PTR [ebx+0x124]
  43efed:	add    eax,0x10
  43eff0:	call   0x404fdc
  43eff5:	jmp    0x43f063
  43eff7:	mov    eax,DWORD PTR [ebp-0x4]
  43effa:	mov    eax,DWORD PTR [eax+0x8]
  43effd:	mov    edx,0x43f220
  43f002:	call   0x41d948
  43f007:	test   al,al
  43f009:	je     0x43f030
  43f00b:	lea    ecx,[ebp-0x10]
  43f00e:	mov    edx,0x1bb
  43f013:	mov    eax,ds:0x41be90
  43f018:	call   0x41b19c
  43f01d:	mov    edx,DWORD PTR [ebp-0x10]
  43f020:	mov    eax,DWORD PTR [ebx+0x124]
  43f026:	add    eax,0x10
  43f029:	call   0x404fdc
  43f02e:	jmp    0x43f063
  43f030:	mov    eax,DWORD PTR [ebx+0x124]
  43f036:	mov    eax,DWORD PTR [eax+0x10]
  43f039:	call   0x405248
  43f03e:	test   eax,eax
  43f040:	jg     0x43f063
  43f042:	lea    edx,[ebp-0x14]
  43f045:	mov    eax,ds:0x46ddd4
  43f04a:	call   0x406f48
  43f04f:	mov    ecx,DWORD PTR [ebp-0x14]
  43f052:	mov    dl,0x1
  43f054:	mov    eax,ds:0x43e4ac
  43f059:	call   0x41bdbc
  43f05e:	call   0x4048fc
  43f063:	mov    edi,DWORD PTR [ebx+0x124]
  43f069:	push   DWORD PTR [edi+0x14]
  43f06c:	push   DWORD PTR [edi+0x4]
  43f06f:	push   DWORD PTR [edi+0x28]
  43f072:	lea    eax,[esi+0xac]
  43f078:	mov    edx,0x3
  43f07d:	call   0x40531c
  43f082:	mov    eax,DWORD PTR [esi+0xb0]
  43f088:	mov    edx,0x43f240
  43f08d:	call   0x4053b0
  43f092:	jne    0x43f0b9
  43f094:	mov    eax,DWORD PTR [ebp-0x4]
  43f097:	mov    eax,DWORD PTR [eax+0x4]
  43f09a:	mov    edx,0x43f250
  43f09f:	call   0x41d948
  43f0a4:	test   al,al
  43f0a6:	je     0x43f0b9
  43f0a8:	lea    eax,[esi+0xac]
  43f0ae:	mov    edx,DWORD PTR [ebp-0x4]
  43f0b1:	mov    edx,DWORD PTR [edx+0x4]
  43f0b4:	call   0x404fdc
  43f0b9:	mov    eax,DWORD PTR [ebp-0x4]
  43f0bc:	movzx  eax,BYTE PTR [eax+0x2c]
  43f0c0:	mov    BYTE PTR [esi+0xb9],al
  43f0c6:	mov    edx,DWORD PTR [ebx+0x124]
  43f0cc:	mov    BYTE PTR [edx+0x2c],al
  43f0cf:	mov    eax,0x43f25c
  43f0d4:	mov    DWORD PTR [ebp-0x24],eax
  43f0d7:	mov    eax,0x43f26c
  43f0dc:	mov    DWORD PTR [ebp-0x20],eax
  43f0df:	mov    eax,0x43f240
  43f0e4:	mov    DWORD PTR [ebp-0x1c],eax
  43f0e7:	mov    eax,0x43f278
  43f0ec:	mov    DWORD PTR [ebp-0x18],eax
  43f0ef:	lea    edx,[ebp-0x24]
  43f0f2:	mov    eax,DWORD PTR [esi+0xb0]
  43f0f8:	mov    ecx,0x3
  43f0fd:	call   0x43edc8
  43f102:	test   al,al
  43f104:	je     0x43f130
  43f106:	cmp    BYTE PTR [ebx+0x114],0x1
  43f10d:	je     0x43f130
  43f10f:	lea    edx,[ebp-0x28]
  43f112:	mov    eax,ds:0x46da60
  43f117:	call   0x406f48
  43f11c:	mov    ecx,DWORD PTR [ebp-0x28]
  43f11f:	mov    dl,0x1
  43f121:	mov    eax,ds:0x41b94c
  43f126:	call   0x41bdbc
  43f12b:	call   0x4048fc
  43f130:	mov    edi,DWORD PTR [esi+0xb4]
  43f136:	test   edi,edi
  43f138:	je     0x43f14b
  43f13a:	mov    eax,edi
  43f13c:	mov    edx,DWORD PTR [eax]
  43f13e:	call   DWORD PTR [edx]
  43f140:	push   edx
  43f141:	push   eax
  43f142:	mov    eax,esi
  43f144:	call   0x43ccb0
  43f149:	jmp    0x43f156
  43f14b:	push   0xffffffff
  43f14d:	push   0xffffffff
  43f14f:	mov    eax,esi
  43f151:	call   0x43ccb0
  43f156:	lea    ecx,[ebp-0x2c]
  43f159:	mov    edx,0x50
  43f15e:	mov    eax,ds:0x41be90
  43f163:	call   0x41b19c
  43f168:	mov    edx,DWORD PTR [ebp-0x2c]
  43f16b:	mov    eax,DWORD PTR [ebx+0x124]
  43f171:	mov    eax,DWORD PTR [eax+0x10]
  43f174:	call   0x4053b0
  43f179:	je     0x43f19e
  43f17b:	mov    edi,DWORD PTR [ebx+0x124]
  43f181:	push   DWORD PTR [edi+0x18]
  43f184:	push   0x43f288
  43f189:	push   DWORD PTR [edi+0x10]
  43f18c:	lea    eax,[esi+0x90]
  43f192:	mov    edx,0x3
  43f197:	call   0x40531c
  43f19c:	jmp    0x43f1b2
  43f19e:	lea    eax,[esi+0x90]
  43f1a4:	mov    edx,DWORD PTR [ebx+0x124]
  43f1aa:	mov    edx,DWORD PTR [edx+0x18]
  43f1ad:	call   0x404fdc
  43f1b2:	xor    eax,eax
  43f1b4:	pop    edx
  43f1b5:	pop    ecx
  43f1b6:	pop    ecx
  43f1b7:	mov    DWORD PTR fs:[eax],edx
  43f1ba:	push   0x43f1d4
  43f1bf:	lea    edx,[ebp-0x4]
  43f1c2:	mov    eax,ds:0x41be90
  43f1c7:	call   0x41b14c
  43f1cc:	ret    
  43f1cd:	jmp    0x40481c
  43f1d2:	jmp    0x43f1bf
  43f1d4:	xor    eax,eax
  43f1d6:	pop    edx
  43f1d7:	pop    ecx
  43f1d8:	pop    ecx
  43f1d9:	mov    DWORD PTR fs:[eax],edx
  43f1dc:	push   0x43f203
  43f1e1:	lea    eax,[ebp-0x2c]
  43f1e4:	mov    edx,0x2
  43f1e9:	call   0x404fac
  43f1ee:	lea    eax,[ebp-0x14]
  43f1f1:	mov    edx,0x4
  43f1f6:	call   0x404fac
  43f1fb:	ret    
  43f1fc:	jmp    0x40481c
  43f201:	jmp    0x43f1e1
  43f203:	pop    edi
  43f204:	pop    esi
  43f205:	pop    ebx
  43f206:	mov    esp,ebp
  43f208:	pop    ebp
  43f209:	ret    
  43f20a:	add    BYTE PTR [eax],al
  43f20c:	(bad)  
  43f20d:	(bad)  
  43f20e:	(bad)  
  43f20f:	inc    DWORD PTR [ecx]
  43f211:	add    BYTE PTR [eax],al
  43f213:	add    BYTE PTR [edi],ch
  43f215:	add    BYTE PTR [eax],al
  43f217:	add    bh,bh
  43f219:	(bad)  
  43f21a:	(bad)  
  43f21b:	inc    DWORD PTR ds:0x68000000
  43f221:	je     0x43f297
  43f223:	jo     0x43f298
  43f225:	add    BYTE PTR [eax],al
  43f227:	add    bh,bh
  43f229:	(bad)  
  43f22a:	(bad)  
  43f22b:	inc    DWORD PTR [eax+eax*1]
  43f22e:	add    BYTE PTR [eax],al
  43f230:	push   0x707474
  43f235:	add    BYTE PTR [eax],al
  43f237:	add    bh,bh
  43f239:	(bad)  
  43f23a:	(bad)  
  43f23b:	inc    DWORD PTR [edi]
  43f23d:	add    BYTE PTR [eax],al
  43f23f:	add    BYTE PTR [edi+0x50],cl
  43f242:	push   esp
  43f243:	dec    ecx
  43f244:	dec    edi
  43f245:	dec    esi
  43f246:	push   ebx
  43f247:	add    bh,bh
  43f249:	(bad)  
  43f24a:	(bad)  
  43f24b:	inc    DWORD PTR [ecx]
  43f24d:	add    BYTE PTR [eax],al
  43f24f:	add    BYTE PTR [edx],ch
  43f251:	add    BYTE PTR [eax],al
  43f253:	add    bh,bh
  43f255:	(bad)  
  43f256:	(bad)  
  43f257:	inc    DWORD PTR ds:0x54000000
  43f25d:	push   edx
  43f25e:	inc    ecx
  43f25f:	inc    ebx
  43f260:	inc    ebp
  43f261:	add    BYTE PTR [eax],al
  43f263:	add    bh,bh
  43f265:	(bad)  
  43f266:	(bad)  
  43f267:	inc    DWORD PTR [ebx]
  43f269:	add    BYTE PTR [eax],al
  43f26b:	add    BYTE PTR [eax+0x55],dl
  43f26e:	push   esp
  43f26f:	add    bh,bh
  43f271:	(bad)  
  43f272:	(bad)  
  43f273:	inc    DWORD PTR [esi]
  43f275:	add    BYTE PTR [eax],al
  43f277:	add    BYTE PTR [ebp+eax*2+0x4c],al
  43f27b:	inc    ebp
  43f27c:	push   esp
  43f27d:	inc    ebp
  43f27e:	add    BYTE PTR [eax],al
  43f280:	(bad)  
  43f281:	(bad)  
  43f282:	(bad)  
  43f283:	inc    DWORD PTR [ecx]
  43f285:	add    BYTE PTR [eax],al
  43f287:	add    BYTE PTR [edx],bh
  43f289:	add    BYTE PTR [eax],al
  43f28b:	add    BYTE PTR [ebp-0x75],dl
  43f28e:	in     al,dx
  43f28f:	push   ecx
  43f290:	push   ebx
  43f291:	push   esi
  43f292:	push   edi
  43f293:	mov    ebx,edx
  43f295:	mov    DWORD PTR [ebp-0x4],eax
  43f298:	test   ebx,ebx
  43f29a:	jne    0x43f2b0
  43f29c:	mov    ecx,0x49a
  43f2a1:	mov    edx,0x43f348
  43f2a6:	mov    eax,0x43f380
  43f2ab:	call   0x404eb4
  43f2b0:	mov    eax,ebx
  43f2b2:	call   0x4401a0
  43f2b7:	test   al,al
  43f2b9:	jne    0x43f2c3
  43f2bb:	mov    eax,DWORD PTR [ebp-0x4]
  43f2be:	call   0x430684
  43f2c3:	xor    edx,edx
  43f2c5:	mov    eax,DWORD PTR [ebp-0x4]
  43f2c8:	mov    ecx,DWORD PTR [eax]
  43f2ca:	call   DWORD PTR [ecx+0x50]
  43f2cd:	mov    eax,DWORD PTR [ebp-0x4]
  43f2d0:	mov    edx,DWORD PTR [eax]
  43f2d2:	call   DWORD PTR [edx+0x5c]
  43f2d5:	test   al,al
  43f2d7:	jne    0x43f337
  43f2d9:	xor    edx,edx
  43f2db:	push   ebp
  43f2dc:	push   0x43f314
  43f2e1:	push   DWORD PTR fs:[edx]
  43f2e4:	mov    DWORD PTR fs:[edx],esp
  43f2e7:	mov    eax,DWORD PTR [ebp-0x4]
  43f2ea:	mov    eax,DWORD PTR [eax+0x124]
  43f2f0:	movzx  edx,BYTE PTR [eax+0x2c]
  43f2f4:	mov    eax,DWORD PTR [ebp-0x4]
  43f2f7:	mov    ecx,DWORD PTR [eax]
  43f2f9:	call   DWORD PTR [ecx+0x90]
  43f2ff:	mov    eax,DWORD PTR [ebp-0x4]
  43f302:	mov    edx,DWORD PTR [eax]
  43f304:	call   DWORD PTR [edx+0x94]
  43f30a:	xor    eax,eax
  43f30c:	pop    edx
  43f30d:	pop    ecx
  43f30e:	pop    ecx
  43f30f:	mov    DWORD PTR fs:[eax],edx
  43f312:	jmp    0x43f337
  43f314:	jmp    0x404694
  43f319:	add    DWORD PTR [eax],eax
  43f31b:	add    BYTE PTR [eax],al
  43f31d:	pusha  
  43f31e:	jb     0x43f362
  43f320:	add    BYTE PTR ds:0x8b0043f3,ah
  43f326:	inc    ebp
  43f327:	cld    
  43f328:	call   0x430684
  43f32d:	call   0x404924
  43f332:	call   0x404978
  43f337:	pop    edi
  43f338:	pop    esi
  43f339:	pop    ebx
  43f33a:	pop    ecx
  43f33b:	pop    ebp
  43f33c:	ret    
  43f33d:	add    BYTE PTR [eax],al
  43f33f:	add    bh,bh
  43f341:	(bad)  
  43f342:	(bad)  
  43f343:	jmp    FWORD PTR [edi]
  43f345:	add    BYTE PTR [eax],al
  43f347:	add    BYTE PTR [ebx+0x3a],al
  43f34a:	pop    esp
  43f34b:	bound  esi,QWORD PTR [ebp+0x69]
  43f34e:	ins    BYTE PTR es:[edi],dx
  43f34f:	fs jae 0x43f3ae
  43f352:	push   esp
  43f353:	jo     0x43f396
  43f355:	fs outs dx,DWORD PTR fs:[esi]
  43f358:	outs   dx,BYTE PTR ds:[esi]
  43f359:	jae    0x43f3b7
  43f35b:	dec    ecx
  43f35c:	outs   dx,BYTE PTR ds:[esi]
  43f35d:	fs jns 0x43f3ae
  43f360:	gs je  0x43f3bf
  43f363:	push   eax
  43f364:	jb     0x43f3d5
  43f366:	je     0x43f3d7
  43f368:	arpl   WORD PTR [edi+0x6c],bp
  43f36b:	jae    0x43f3c9
  43f36d:	dec    ecx
  43f36e:	fs dec eax
  43f370:	push   esp
  43f371:	push   esp
  43f372:	push   eax
  43f373:	cs jo  0x43f3d7
  43f376:	jae    0x43f378
  43f378:	(bad)  
  43f379:	(bad)  
  43f37a:	(bad)  
  43f37b:	call   DWORD PTR [ecx]
  43f37d:	add    BYTE PTR [eax],al
  43f37f:	add    BYTE PTR [ecx+0x73],al
  43f382:	jae    0x43f3e9
  43f384:	jb     0x43f3fa
  43f386:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  43f38d:	ins    BYTE PTR es:[edi],dx
  43f38e:	jne    0x43f402
  43f390:	add    BYTE PTR gs:[eax],al
  43f393:	add    BYTE PTR [ebp-0x75],dl
  43f396:	in     al,dx
  43f397:	add    esp,0xffffffe4
  43f39a:	push   ebx
  43f39b:	push   esi
  43f39c:	push   edi
  43f39d:	xor    ebx,ebx
  43f39f:	mov    DWORD PTR [ebp-0x14],ebx
  43f3a2:	mov    DWORD PTR [ebp-0x10],ebx
  43f3a5:	mov    esi,ecx
  43f3a7:	mov    DWORD PTR [ebp-0x8],edx
  43f3aa:	mov    DWORD PTR [ebp-0x4],eax
  43f3ad:	xor    eax,eax
  43f3af:	push   ebp
  43f3b0:	push   0x43f7ce
  43f3b5:	push   DWORD PTR fs:[eax]
  43f3b8:	mov    DWORD PTR fs:[eax],esp
  43f3bb:	mov    eax,DWORD PTR [ebp-0x4]
  43f3be:	call   0x43e7a0
  43f3c3:	mov    ebx,eax
  43f3c5:	mov    eax,DWORD PTR [ebp-0x8]
  43f3c8:	mov    BYTE PTR [eax+0xb8],bl
  43f3ce:	cmp    bl,0x2
  43f3d1:	jne    0x43f3f4
  43f3d3:	lea    edx,[ebp-0x10]
  43f3d6:	mov    eax,DWORD PTR [ebp-0x4]
  43f3d9:	mov    eax,DWORD PTR [eax+0x124]
  43f3df:	call   0x436a70
  43f3e4:	mov    edx,DWORD PTR [ebp-0x10]
  43f3e7:	mov    eax,DWORD PTR [ebp-0x8]
  43f3ea:	add    eax,0xac
  43f3ef:	call   0x404fdc
  43f3f4:	mov    eax,DWORD PTR [ebp-0x8]
  43f3f7:	movzx  eax,BYTE PTR [eax+0xb8]
  43f3fe:	sub    al,0x1
  43f400:	jb     0x43f40e
  43f402:	je     0x43f43b
  43f404:	dec    al
  43f406:	je     0x43f448
  43f408:	dec    al
  43f40a:	je     0x43f43b
  43f40c:	jmp    0x43f475
  43f40e:	mov    eax,DWORD PTR [ebp-0x4]
  43f411:	cmp    BYTE PTR [eax+0x114],0x0
  43f418:	jne    0x43f475
  43f41a:	mov    eax,DWORD PTR [ebp-0x8]
  43f41d:	mov    eax,DWORD PTR [eax+0xc]
  43f420:	call   0x405248
  43f425:	test   eax,eax
  43f427:	jne    0x43f475
  43f429:	mov    eax,DWORD PTR [ebp-0x8]
  43f42c:	add    eax,0xc
  43f42f:	mov    edx,0x43f7e4
  43f434:	call   0x404fdc
  43f439:	jmp    0x43f475
  43f43b:	mov    eax,DWORD PTR [ebp-0x8]
  43f43e:	add    eax,0xc
  43f441:	call   0x404f88
  43f446:	jmp    0x43f475
  43f448:	mov    eax,DWORD PTR [ebp-0x4]
  43f44b:	cmp    BYTE PTR [eax+0x114],0x0
  43f452:	jne    0x43f475
  43f454:	mov    eax,DWORD PTR [ebp-0x8]
  43f457:	mov    eax,DWORD PTR [eax+0xc]
  43f45a:	call   0x405248
  43f45f:	test   eax,eax
  43f461:	jne    0x43f475
  43f463:	mov    eax,DWORD PTR [ebp-0x8]
  43f466:	add    eax,0x94
  43f46b:	mov    edx,0x43f7e4
  43f470:	call   0x404fdc
  43f475:	mov    eax,DWORD PTR [ebp-0x4]
  43f478:	cmp    DWORD PTR [eax+0xfc],0x0
  43f47f:	je     0x43f4d2
  43f481:	mov    eax,DWORD PTR [ebp-0x4]
  43f484:	call   0x440094
  43f489:	mov    edx,DWORD PTR [eax+0x70]
  43f48c:	mov    ebx,DWORD PTR ds:0x46da9c
  43f492:	mov    ebx,DWORD PTR [ebx]
  43f494:	mov    eax,0x43f7f8
  43f499:	call   ebx
  43f49b:	test   eax,eax
  43f49d:	jne    0x43f4d2
  43f49f:	mov    eax,DWORD PTR [ebp-0x4]
  43f4a2:	call   0x440094
  43f4a7:	mov    edx,DWORD PTR [eax+0x70]
  43f4aa:	mov    ebx,DWORD PTR ds:0x46da9c
  43f4b0:	mov    ebx,DWORD PTR [ebx]
  43f4b2:	mov    eax,0x43f808
  43f4b7:	call   ebx
  43f4b9:	test   eax,eax
  43f4bb:	jne    0x43f4d2
  43f4bd:	mov    eax,DWORD PTR [ebp-0x4]
  43f4c0:	call   0x440094
  43f4c5:	add    eax,0x70
  43f4c8:	mov    edx,0x43f818
  43f4cd:	call   0x404fdc
  43f4d2:	mov    eax,DWORD PTR [ebp-0x4]
  43f4d5:	call   0x440094
  43f4da:	mov    edx,DWORD PTR [eax+0x70]
  43f4dd:	mov    ebx,DWORD PTR ds:0x46da9c
  43f4e3:	mov    ebx,DWORD PTR [ebx]
  43f4e5:	mov    eax,0x43f830
  43f4ea:	call   ebx
  43f4ec:	test   eax,eax
  43f4ee:	jne    0x43f50d
  43f4f0:	mov    eax,DWORD PTR [ebp-0x4]
  43f4f3:	call   0x440094
  43f4f8:	add    eax,0x70
  43f4fb:	mov    edx,0x43f830
  43f500:	call   0x405254
  43f505:	mov    eax,DWORD PTR [ebp-0x4]
  43f508:	call   0x440094
  43f50d:	mov    eax,DWORD PTR [ebp-0x8]
  43f510:	cmp    BYTE PTR [eax+0xb8],0x3
  43f517:	jne    0x43f748
  43f51d:	mov    ecx,DWORD PTR [ebp-0x4]
  43f520:	mov    dl,0x1
  43f522:	mov    eax,ds:0x43df64
  43f527:	call   0x440480
  43f52c:	mov    DWORD PTR [ebp-0xc],eax
  43f52f:	mov    eax,DWORD PTR [ebp-0xc]
  43f532:	mov    eax,DWORD PTR [eax+0xc]
  43f535:	add    eax,0x88
  43f53a:	mov    edx,DWORD PTR [ebp-0x8]
  43f53d:	mov    edx,DWORD PTR [edx+0x88]
  43f543:	call   0x404fdc
  43f548:	mov    eax,DWORD PTR [ebp-0xc]
  43f54b:	mov    eax,DWORD PTR [eax+0xc]
  43f54e:	add    eax,0x90
  43f553:	mov    edx,DWORD PTR [ebp-0x8]
  43f556:	mov    edx,DWORD PTR [edx+0x90]
  43f55c:	call   0x404fdc
  43f561:	mov    eax,DWORD PTR [ebp-0x8]
  43f564:	push   DWORD PTR [eax+0x1c]
  43f567:	push   DWORD PTR [eax+0x18]
  43f56a:	mov    eax,DWORD PTR [ebp-0xc]
  43f56d:	mov    eax,DWORD PTR [eax+0xc]
  43f570:	call   0x43ccb0
  43f575:	mov    eax,DWORD PTR [ebp-0xc]
  43f578:	mov    eax,DWORD PTR [eax+0xc]
  43f57b:	add    eax,0x60
  43f57e:	mov    edx,0x43f844
  43f583:	call   0x404fdc
  43f588:	mov    eax,DWORD PTR [ebp-0x4]
  43f58b:	mov    ebx,DWORD PTR [eax+0x124]
  43f591:	push   DWORD PTR [ebx+0x18]
  43f594:	push   0x43f858
  43f599:	push   DWORD PTR [ebx+0x10]
  43f59c:	mov    eax,DWORD PTR [ebp-0xc]
  43f59f:	mov    eax,DWORD PTR [eax+0xc]
  43f5a2:	add    eax,0xac
  43f5a7:	mov    edx,0x3
  43f5ac:	call   0x40531c
  43f5b1:	mov    eax,DWORD PTR [ebp-0xc]
  43f5b4:	mov    eax,DWORD PTR [eax+0xc]
  43f5b7:	add    eax,0xb0
  43f5bc:	mov    edx,0x43f864
  43f5c1:	call   0x404fdc
  43f5c6:	mov    eax,DWORD PTR [ebp-0xc]
  43f5c9:	mov    eax,DWORD PTR [eax+0xc]
  43f5cc:	add    eax,0x94
  43f5d1:	mov    edx,0x43f7e4
  43f5d6:	call   0x404fdc
  43f5db:	mov    dl,0x1
  43f5dd:	mov    eax,ds:0x412ff4
  43f5e2:	call   0x404070
  43f5e7:	mov    edx,DWORD PTR [ebp-0xc]
  43f5ea:	mov    edx,DWORD PTR [edx+0x10]
  43f5ed:	mov    DWORD PTR [edx+0x90],eax
  43f5f3:	xor    eax,eax
  43f5f5:	push   ebp
  43f5f6:	push   0x43f741
  43f5fb:	push   DWORD PTR fs:[eax]
  43f5fe:	mov    DWORD PTR fs:[eax],esp
  43f601:	xor    eax,eax
  43f603:	push   ebp
  43f604:	push   0x43f706
  43f609:	push   DWORD PTR fs:[eax]
  43f60c:	mov    DWORD PTR fs:[eax],esp
  43f60f:	mov    eax,DWORD PTR [ebp-0xc]
  43f612:	mov    edx,DWORD PTR [eax+0x10]
  43f615:	mov    eax,DWORD PTR [ebp-0x4]
  43f618:	call   0x43f28c
  43f61d:	xor    edx,edx
  43f61f:	mov    eax,DWORD PTR [ebp-0xc]
  43f622:	call   0x44052c
  43f627:	lea    edx,[ebp-0x14]
  43f62a:	mov    eax,DWORD PTR [ebp-0x4]
  43f62d:	mov    eax,DWORD PTR [eax+0x8c]
  43f633:	call   0x428524
  43f638:	mov    edx,DWORD PTR [ebp-0x14]
  43f63b:	mov    eax,DWORD PTR [ebp-0xc]
  43f63e:	mov    eax,DWORD PTR [eax+0x10]
  43f641:	add    eax,0x88
  43f646:	call   0x404fdc
  43f64b:	mov    eax,DWORD PTR [ebp-0xc]
  43f64e:	mov    eax,DWORD PTR [eax+0x10]
  43f651:	mov    eax,DWORD PTR [eax+0x88]
  43f657:	call   0x405248
  43f65c:	test   eax,eax
  43f65e:	jne    0x43f68a
  43f660:	mov    eax,DWORD PTR [ebp-0xc]
  43f663:	mov    eax,DWORD PTR [eax+0x10]
  43f666:	add    eax,0x88
  43f66b:	mov    edx,0x43f874
  43f670:	call   0x404fdc
  43f675:	mov    eax,DWORD PTR [ebp-0xc]
  43f678:	mov    eax,DWORD PTR [eax+0x10]
  43f67b:	add    eax,0xc
  43f67e:	mov    edx,0x43f88c
  43f683:	call   0x404fdc
  43f688:	jmp    0x43f6af
  43f68a:	mov    eax,DWORD PTR [ebp-0x4]
  43f68d:	mov    edx,DWORD PTR [eax+0x108]
  43f693:	mov    eax,DWORD PTR [ebp-0xc]
  43f696:	call   0x440700
  43f69b:	mov    eax,DWORD PTR [ebp-0xc]
  43f69e:	mov    ecx,DWORD PTR [eax+0x10]
  43f6a1:	mov    eax,DWORD PTR [ebp-0xc]
  43f6a4:	mov    edx,DWORD PTR [eax+0xc]
  43f6a7:	mov    eax,DWORD PTR [ebp-0x4]
  43f6aa:	call   0x43f8b8
  43f6af:	mov    eax,DWORD PTR [ebp-0xc]
  43f6b2:	mov    eax,DWORD PTR [eax+0x10]
  43f6b5:	call   0x440378
  43f6ba:	cmp    eax,0xc8
  43f6bf:	jne    0x43f6e9
  43f6c1:	mov    eax,DWORD PTR [ebp-0x4]
  43f6c4:	mov    ebx,DWORD PTR [eax+0x8c]
  43f6ca:	mov    eax,ebx
  43f6cc:	mov    edx,DWORD PTR ds:0x46179c
  43f6d2:	call   0x40422c
  43f6d7:	test   al,al
  43f6d9:	je     0x43f6fc
  43f6db:	mov    eax,ebx
  43f6dd:	xor    edx,edx
  43f6df:	mov    ecx,DWORD PTR [eax]
  43f6e1:	call   DWORD PTR [ecx+0xdc]
  43f6e7:	jmp    0x43f6fc
  43f6e9:	lea    edx,[ebp-0x14]
  43f6ec:	or     ecx,0xffffffff
  43f6ef:	mov    eax,DWORD PTR [ebp-0xc]
  43f6f2:	call   0x440a28
  43f6f7:	jmp    0x43f60f
  43f6fc:	xor    eax,eax
  43f6fe:	pop    edx
  43f6ff:	pop    ecx
  43f700:	pop    ecx
  43f701:	mov    DWORD PTR fs:[eax],edx
  43f704:	jmp    0x43f715
  43f706:	jmp    0x404568
  43f70b:	call   0x404924
  43f710:	call   0x404978
  43f715:	xor    eax,eax
  43f717:	pop    edx
  43f718:	pop    ecx
  43f719:	pop    ecx
  43f71a:	mov    DWORD PTR fs:[eax],edx
  43f71d:	push   0x43f752
  43f722:	mov    eax,DWORD PTR [ebp-0xc]
  43f725:	mov    eax,DWORD PTR [eax+0x10]
  43f728:	mov    eax,DWORD PTR [eax+0x90]
  43f72e:	call   0x4040a0
  43f733:	lea    edx,[ebp-0xc]
  43f736:	mov    eax,ds:0x41be90
  43f73b:	call   0x41b14c
  43f740:	ret    
  43f741:	jmp    0x40481c
  43f746:	jmp    0x43f722
  43f748:	mov    edx,esi
  43f74a:	mov    eax,DWORD PTR [ebp-0x4]
  43f74d:	call   0x43f28c
  43f752:	mov    eax,DWORD PTR [ebp-0x4]
  43f755:	mov    edx,DWORD PTR [eax+0x124]
  43f75b:	mov    eax,DWORD PTR [ebp-0x4]
  43f75e:	mov    eax,DWORD PTR [eax+0x128]
  43f764:	call   0x44052c
  43f769:	mov    eax,0x43f89c
  43f76e:	mov    DWORD PTR [ebp-0x1c],eax
  43f771:	mov    eax,0x43f8ac
  43f776:	mov    DWORD PTR [ebp-0x18],eax
  43f779:	lea    edx,[ebp-0x1c]
  43f77c:	mov    eax,DWORD PTR [ebp-0x8]
  43f77f:	mov    eax,DWORD PTR [eax+0xb0]
  43f785:	mov    ecx,0x1
  43f78a:	call   0x43edc8
  43f78f:	test   al,al
  43f791:	je     0x43f7b3
  43f793:	push   0x0
  43f795:	push   0x0
  43f797:	mov    eax,DWORD PTR [ebp-0x8]
  43f79a:	mov    edx,DWORD PTR [eax+0xb4]
  43f7a0:	mov    eax,DWORD PTR [ebp-0x4]
  43f7a3:	mov    eax,DWORD PTR [eax+0x8c]
  43f7a9:	xor    ecx,ecx
  43f7ab:	mov    ebx,DWORD PTR [eax]
  43f7ad:	call   DWORD PTR [ebx+0x90]
  43f7b3:	xor    eax,eax
  43f7b5:	pop    edx
  43f7b6:	pop    ecx
  43f7b7:	pop    ecx
  43f7b8:	mov    DWORD PTR fs:[eax],edx
  43f7bb:	push   0x43f7d5
  43f7c0:	lea    eax,[ebp-0x14]
  43f7c3:	mov    edx,0x2
  43f7c8:	call   0x404fac
  43f7cd:	ret    
  43f7ce:	jmp    0x40481c
  43f7d3:	jmp    0x43f7c0
  43f7d5:	pop    edi
  43f7d6:	pop    esi
  43f7d7:	pop    ebx
  43f7d8:	mov    esp,ebp
  43f7da:	pop    ebp
  43f7db:	ret    
  43f7dc:	(bad)  
  43f7dd:	(bad)  
  43f7de:	(bad)  
  43f7df:	dec    DWORD PTR [edx]
  43f7e1:	add    BYTE PTR [eax],al
  43f7e3:	add    BYTE PTR [ebx+0x65],ch
  43f7e6:	gs jo  0x43f816
  43f7e9:	popa   
  43f7ea:	ins    BYTE PTR es:[edi],dx
  43f7eb:	imul   esi,DWORD PTR [esi+0x65],0xffff0000
  43f7f2:	(bad)  
  43f7f3:	inc    DWORD PTR [edi]
  43f7f5:	add    BYTE PTR [eax],al
  43f7f7:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  43f7fb:	ins    BYTE PTR es:[edi],dx
  43f7fc:	popa   
  43f7fd:	je     0x43f864
  43f7ff:	add    bh,bh
  43f801:	(bad)  
  43f802:	(bad)  
  43f803:	inc    DWORD PTR [eax+eax*1]
  43f806:	add    BYTE PTR [eax],al
  43f808:	addr16 jp 0x43f874
  43f80b:	jo     0x43f80d
  43f80d:	add    BYTE PTR [eax],al
  43f80f:	add    bh,bh
  43f811:	(bad)  
  43f812:	(bad)  
  43f813:	dec    DWORD PTR [edi]
  43f815:	add    BYTE PTR [eax],al
  43f817:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  43f81b:	ins    BYTE PTR es:[edi],dx
  43f81c:	popa   
  43f81d:	je     0x43f884
  43f81f:	sub    al,0x20
  43f821:	addr16 jp 0x43f88d
  43f824:	jo     0x43f852
  43f826:	and    BYTE PTR [eax],al
  43f828:	(bad)  
  43f829:	(bad)  
  43f82a:	(bad)  
  43f82b:	dec    DWORD PTR [eax]
  43f82d:	add    BYTE PTR [eax],al
  43f82f:	add    BYTE PTR [ecx+0x64],ch
  43f832:	outs   dx,BYTE PTR gs:[esi]
  43f834:	je     0x43f89f
  43f836:	je     0x43f8b1
  43f838:	add    BYTE PTR [eax],al
  43f83a:	add    BYTE PTR [eax],al
  43f83c:	(bad)  
  43f83d:	(bad)  
  43f83e:	(bad)  
  43f83f:	dec    DWORD PTR [eax]
  43f841:	add    BYTE PTR [eax],al
  43f843:	add    BYTE PTR [esi+0x6f],ch
  43f846:	sub    eax,0x68636163
  43f84b:	add    BYTE PTR gs:[eax],al
  43f84e:	add    BYTE PTR [eax],al
  43f850:	(bad)  
  43f851:	(bad)  
  43f852:	(bad)  
  43f853:	inc    DWORD PTR [ecx]
  43f855:	add    BYTE PTR [eax],al
  43f857:	add    BYTE PTR [edx],bh
  43f859:	add    BYTE PTR [eax],al
  43f85b:	add    bh,bh
  43f85d:	(bad)  
  43f85e:	(bad)  
  43f85f:	inc    DWORD PTR [edi]
  43f861:	add    BYTE PTR [eax],al
  43f863:	add    BYTE PTR [ebx+0x4f],al
  43f866:	dec    esi
  43f867:	dec    esi
  43f868:	inc    ebp
  43f869:	inc    ebx
  43f86a:	push   esp
  43f86b:	add    bh,bh
  43f86d:	(bad)  
  43f86e:	(bad)  
  43f86f:	dec    DWORD PTR [edi]
  43f871:	add    BYTE PTR [eax],al
  43f873:	add    BYTE PTR [eax+0x54],cl
  43f876:	push   esp
  43f877:	push   eax
  43f878:	das    
  43f879:	xor    DWORD PTR [esi],ebp
  43f87b:	xor    BYTE PTR [eax],ah
  43f87d:	xor    dh,BYTE PTR [eax]
  43f87f:	xor    BYTE PTR [eax],ah
  43f881:	dec    edi
  43f882:	dec    ebx
  43f883:	add    bh,bh
  43f885:	(bad)  
  43f886:	(bad)  
  43f887:	inc    DWORD PTR ds:0x63000000
  43f88d:	ins    BYTE PTR es:[edi],dx
  43f88e:	outs   dx,DWORD PTR ds:[esi]
  43f88f:	jae    0x43f8f6
  43f891:	add    BYTE PTR [eax],al
  43f893:	add    bh,bh
  43f895:	(bad)  
  43f896:	(bad)  
  43f897:	inc    DWORD PTR [eax+eax*1]
  43f89a:	add    BYTE PTR [eax],al
  43f89c:	push   eax
  43f89d:	dec    edi
  43f89e:	push   ebx
  43f89f:	push   esp
  43f8a0:	add    BYTE PTR [eax],al
  43f8a2:	add    BYTE PTR [eax],al
  43f8a4:	(bad)  
  43f8a5:	(bad)  
  43f8a6:	(bad)  
  43f8a7:	inc    DWORD PTR [ebx]
  43f8a9:	add    BYTE PTR [eax],al
  43f8ab:	add    BYTE PTR [eax+0x55],dl
  43f8ae:	push   esp
  43f8af:	add    BYTE PTR [eax+0x10c90],cl
  43f8b5:	add    bl,al
  43f8b7:	nop
  43f8b8:	push   ebp
  43f8b9:	mov    ebp,esp
  43f8bb:	add    esp,0xffffffec
  43f8be:	push   ebx
  43f8bf:	push   esi
  43f8c0:	push   edi
  43f8c1:	xor    ebx,ebx
  43f8c3:	mov    DWORD PTR [ebp-0x14],ebx
  43f8c6:	mov    DWORD PTR [ebp-0x10],ebx
  43f8c9:	mov    esi,ecx
  43f8cb:	mov    ebx,eax
  43f8cd:	xor    eax,eax
  43f8cf:	push   ebp
  43f8d0:	push   0x43fa4e
  43f8d5:	push   DWORD PTR fs:[eax]
  43f8d8:	mov    DWORD PTR fs:[eax],esp
  43f8db:	xor    eax,eax
  43f8dd:	mov    DWORD PTR [ebp-0x4],eax
  43f8e0:	xor    eax,eax
  43f8e2:	mov    DWORD PTR [ebp-0x8],eax
  43f8e5:	xor    eax,eax
  43f8e7:	push   ebp
  43f8e8:	push   0x43fa2c
  43f8ed:	push   DWORD PTR fs:[eax]
  43f8f0:	mov    DWORD PTR fs:[eax],esp
  43f8f3:	cmp    DWORD PTR [ebx+0xf8],0x0
  43f8fa:	jne    0x43f923
  43f8fc:	cmp    BYTE PTR [ebx+0x10c],0x0
  43f903:	je     0x43f923
  43f905:	mov    ecx,ebx
  43f907:	mov    dl,0x1
  43f909:	mov    eax,ds:0x43ab24
  43f90e:	call   0x424704
  43f913:	mov    edx,eax
  43f915:	mov    eax,ebx
  43f917:	call   0x43fad8
  43f91c:	mov    BYTE PTR [ebx+0x100],0x1
  43f923:	cmp    DWORD PTR [ebx+0xf8],0x0
  43f92a:	je     0x43fa04
  43f930:	mov    dl,0x1
  43f932:	mov    eax,ds:0x412cf0
  43f937:	call   0x404070
  43f93c:	mov    DWORD PTR [ebp-0x4],eax
  43f93f:	mov    dl,0x1
  43f941:	mov    eax,ds:0x412cf0
  43f946:	call   0x404070
  43f94b:	mov    DWORD PTR [ebp-0x8],eax
  43f94e:	mov    eax,DWORD PTR [esi+0x8]
  43f951:	mov    ecx,DWORD PTR [ebp-0x4]
  43f954:	mov    edx,0x43fa64
  43f959:	call   0x436ebc
  43f95e:	mov    eax,DWORD PTR [esi+0x8]
  43f961:	mov    ecx,DWORD PTR [ebp-0x8]
  43f964:	mov    edx,0x43fa78
  43f969:	call   0x436ebc
  43f96e:	mov    eax,DWORD PTR [ebp-0x4]
  43f971:	mov    edx,DWORD PTR [eax]
  43f973:	call   DWORD PTR [edx+0x14]
  43f976:	mov    esi,eax
  43f978:	sub    esi,0x1
  43f97b:	jno    0x43f982
  43f97d:	call   0x403f70
  43f982:	test   esi,esi
  43f984:	jl     0x43f9b9
  43f986:	inc    esi
  43f987:	mov    DWORD PTR [ebp-0xc],0x0
  43f98e:	lea    ecx,[ebp-0x10]
  43f991:	mov    edx,DWORD PTR [ebp-0xc]
  43f994:	mov    eax,DWORD PTR [ebp-0x4]
  43f997:	mov    edi,DWORD PTR [eax]
  43f999:	call   DWORD PTR [edi+0xc]
  43f99c:	mov    edx,DWORD PTR [ebp-0x10]
  43f99f:	mov    eax,DWORD PTR [ebx+0x124]
  43f9a5:	mov    ecx,DWORD PTR [eax+0x18]
  43f9a8:	mov    eax,DWORD PTR [ebx+0xf8]
  43f9ae:	call   0x43afdc
  43f9b3:	inc    DWORD PTR [ebp-0xc]
  43f9b6:	dec    esi
  43f9b7:	jne    0x43f98e
  43f9b9:	mov    eax,DWORD PTR [ebp-0x8]
  43f9bc:	mov    edx,DWORD PTR [eax]
  43f9be:	call   DWORD PTR [edx+0x14]
  43f9c1:	mov    esi,eax
  43f9c3:	sub    esi,0x1
  43f9c6:	jno    0x43f9cd
  43f9c8:	call   0x403f70
  43f9cd:	test   esi,esi
  43f9cf:	jl     0x43fa04
  43f9d1:	inc    esi
  43f9d2:	mov    DWORD PTR [ebp-0xc],0x0
  43f9d9:	lea    ecx,[ebp-0x14]
  43f9dc:	mov    edx,DWORD PTR [ebp-0xc]
  43f9df:	mov    eax,DWORD PTR [ebp-0x8]
  43f9e2:	mov    edi,DWORD PTR [eax]
  43f9e4:	call   DWORD PTR [edi+0xc]
  43f9e7:	mov    edx,DWORD PTR [ebp-0x14]
  43f9ea:	mov    eax,DWORD PTR [ebx+0x124]
  43f9f0:	mov    ecx,DWORD PTR [eax+0x18]
  43f9f3:	mov    eax,DWORD PTR [ebx+0xf8]
  43f9f9:	call   0x43b048
  43f9fe:	inc    DWORD PTR [ebp-0xc]
  43fa01:	dec    esi
  43fa02:	jne    0x43f9d9
  43fa04:	xor    eax,eax
  43fa06:	pop    edx
  43fa07:	pop    ecx
  43fa08:	pop    ecx
  43fa09:	mov    DWORD PTR fs:[eax],edx
  43fa0c:	push   0x43fa33
  43fa11:	lea    edx,[ebp-0x4]
  43fa14:	mov    eax,ds:0x41be90
  43fa19:	call   0x41b14c
  43fa1e:	lea    edx,[ebp-0x8]
  43fa21:	mov    eax,ds:0x41be90
  43fa26:	call   0x41b14c
  43fa2b:	ret    
  43fa2c:	jmp    0x40481c
  43fa31:	jmp    0x43fa11
  43fa33:	xor    eax,eax
  43fa35:	pop    edx
  43fa36:	pop    ecx
  43fa37:	pop    ecx
  43fa38:	mov    DWORD PTR fs:[eax],edx
  43fa3b:	push   0x43fa55
  43fa40:	lea    eax,[ebp-0x14]
  43fa43:	mov    edx,0x2
  43fa48:	call   0x404fac
  43fa4d:	ret    
  43fa4e:	jmp    0x40481c
  43fa53:	jmp    0x43fa40
  43fa55:	pop    edi
  43fa56:	pop    esi
  43fa57:	pop    ebx
  43fa58:	mov    esp,ebp
  43fa5a:	pop    ebp
  43fa5b:	ret    
  43fa5c:	(bad)  
  43fa5d:	(bad)  
  43fa5e:	(bad)  
  43fa5f:	dec    DWORD PTR [edx]
  43fa61:	add    BYTE PTR [eax],al
  43fa63:	add    BYTE PTR [ebx+0x65],dl
  43fa66:	je     0x43fa95
  43fa68:	arpl   WORD PTR [edi+0x6f],bp
  43fa6b:	imul   ebp,DWORD PTR [ecx+0x65],0x0
  43fa6f:	add    bh,bh
  43fa71:	(bad)  
  43fa72:	(bad)  
  43fa73:	dec    DWORD PTR [ebx]
  43fa75:	add    BYTE PTR [eax],al
  43fa77:	add    BYTE PTR [ebx+0x65],dl
  43fa7a:	je     0x43faa9
  43fa7c:	arpl   WORD PTR [edi+0x6f],bp
  43fa7f:	imul   ebp,DWORD PTR [ecx+0x65],0x32
  43fa83:	add    BYTE PTR [ebx+0x56],dl
  43fa86:	push   edi
  43fa87:	mov    ebx,ecx
  43fa89:	mov    edi,edx
  43fa8b:	mov    esi,eax
  43fa8d:	mov    ecx,ebx
  43fa8f:	mov    edx,edi
  43fa91:	mov    eax,esi
  43fa93:	call   0x4302b0
  43fa98:	cmp    bl,0x1
  43fa9b:	jne    0x43fad1
  43fa9d:	cmp    edi,DWORD PTR [esi+0xf8]
  43faa3:	jne    0x43faaf
  43faa5:	xor    eax,eax
  43faa7:	mov    DWORD PTR [esi+0xf8],eax
  43faad:	jmp    0x43fad1
  43faaf:	cmp    edi,DWORD PTR [esi+0x110]
  43fab5:	jne    0x43fac1
  43fab7:	xor    eax,eax
  43fab9:	mov    DWORD PTR [esi+0x110],eax
  43fabf:	jmp    0x43fad1
  43fac1:	cmp    edi,DWORD PTR [esi+0xfc]
  43fac7:	jne    0x43fad1
  43fac9:	xor    eax,eax
  43facb:	mov    DWORD PTR [esi+0xfc],eax
  43fad1:	pop    edi
  43fad2:	pop    esi
  43fad3:	pop    ebx
  43fad4:	ret    
  43fad5:	lea    eax,[eax+0x0]
  43fad8:	push   ebx
  43fad9:	push   esi
  43fada:	mov    esi,edx
  43fadc:	mov    ebx,eax
  43fade:	cmp    DWORD PTR [ebx+0xf8],0x0
  43fae5:	je     0x43fb00
  43fae7:	cmp    BYTE PTR [ebx+0x100],0x0
  43faee:	je     0x43fb00
  43faf0:	lea    edx,[ebx+0xf8]
  43faf6:	mov    eax,ds:0x41be90
  43fafb:	call   0x41b14c
  43fb00:	mov    DWORD PTR [ebx+0xf8],esi
  43fb06:	mov    BYTE PTR [ebx+0x100],0x0
  43fb0d:	mov    eax,DWORD PTR [ebx+0xf8]
  43fb13:	test   eax,eax
  43fb15:	je     0x43fb1e
  43fb17:	mov    edx,ebx
  43fb19:	call   0x41a2b4
  43fb1e:	pop    esi
  43fb1f:	pop    ebx
  43fb20:	ret    
  43fb21:	lea    eax,[eax+0x0]
  43fb24:	push   ebp
  43fb25:	mov    ebp,esp
  43fb27:	push   ecx
  43fb28:	mov    ecx,0x5
  43fb2d:	push   0x0
  43fb2f:	push   0x0
  43fb31:	dec    ecx
  43fb32:	jne    0x43fb2d
  43fb34:	xchg   DWORD PTR [ebp-0x4],ecx
  43fb37:	push   ebx
  43fb38:	push   esi
  43fb39:	push   edi
  43fb3a:	mov    DWORD PTR [ebp-0xc],ecx
  43fb3d:	mov    ebx,edx
  43fb3f:	mov    DWORD PTR [ebp-0x8],eax
  43fb42:	xor    eax,eax
  43fb44:	push   ebp
  43fb45:	push   0x43fd7d
  43fb4a:	push   DWORD PTR fs:[eax]
  43fb4d:	mov    DWORD PTR fs:[eax],esp
  43fb50:	mov    eax,DWORD PTR [ebp-0x8]
  43fb53:	add    DWORD PTR [eax+0xf0],0x1
  43fb5a:	jno    0x43fb61
  43fb5c:	call   0x403f70
  43fb61:	cmp    DWORD PTR [ebx+0xa0],0x0
  43fb68:	jne    0x43fc14
  43fb6e:	mov    eax,DWORD PTR [ebp-0xc]
  43fb71:	mov    eax,DWORD PTR [eax+0x7c]
  43fb74:	mov    edx,DWORD PTR [eax]
  43fb76:	call   DWORD PTR [edx+0x14]
  43fb79:	mov    esi,eax
  43fb7b:	sub    esi,0x1
  43fb7e:	jno    0x43fb85
  43fb80:	call   0x403f70
  43fb85:	test   esi,esi
  43fb87:	jl     0x43fbce
  43fb89:	inc    esi
  43fb8a:	mov    DWORD PTR [ebp-0x14],0x0
  43fb91:	lea    ecx,[ebp-0x4]
  43fb94:	mov    eax,DWORD PTR [ebp-0xc]
  43fb97:	mov    eax,DWORD PTR [eax+0x7c]
  43fb9a:	mov    edx,DWORD PTR [ebp-0x14]
  43fb9d:	mov    edi,DWORD PTR [eax]
  43fb9f:	call   DWORD PTR [edi+0xc]
  43fba2:	push   0x1
  43fba4:	lea    eax,[ebp-0x1c]
  43fba7:	push   eax
  43fba8:	lea    eax,[ebp-0x4]
  43fbab:	mov    cl,0x1
  43fbad:	mov    edx,0x43fd98
  43fbb2:	call   0x41c7c4
  43fbb7:	mov    eax,DWORD PTR [ebp-0x1c]
  43fbba:	call   0x438af8
  43fbbf:	mov    DWORD PTR [ebp-0x18],eax
  43fbc2:	cmp    DWORD PTR [ebp-0x18],0x0
  43fbc6:	jne    0x43fbce
  43fbc8:	inc    DWORD PTR [ebp-0x14]
  43fbcb:	dec    esi
  43fbcc:	jne    0x43fb91
  43fbce:	cmp    DWORD PTR [ebp-0x18],0x0
  43fbd2:	jne    0x43fbdd
  43fbd4:	mov    BYTE PTR [ebp-0xd],0x0
  43fbd8:	jmp    0x43fd5a
  43fbdd:	mov    eax,DWORD PTR [ebp-0x8]
  43fbe0:	cmp    WORD PTR [eax+0x142],0x0
  43fbe8:	je     0x43fc06
  43fbea:	mov    eax,DWORD PTR [ebp-0xc]
  43fbed:	mov    eax,DWORD PTR [eax+0x7c]
  43fbf0:	push   eax
  43fbf1:	lea    ecx,[ebp-0x18]
  43fbf4:	mov    esi,DWORD PTR [ebp-0x8]
  43fbf7:	mov    edx,DWORD PTR [ebp-0x8]
  43fbfa:	mov    eax,DWORD PTR [esi+0x144]
  43fc00:	call   DWORD PTR [esi+0x140]
  43fc06:	mov    dl,0x1
  43fc08:	mov    eax,DWORD PTR [ebp-0x18]
  43fc0b:	call   DWORD PTR [eax+0x1c]
  43fc0e:	mov    DWORD PTR [ebx+0xa0],eax
  43fc14:	mov    eax,DWORD PTR [ebp-0x8]
  43fc17:	cmp    WORD PTR [eax+0x152],0x0
  43fc1f:	jne    0x43fc3e
  43fc21:	lea    ecx,[ebp-0x20]
  43fc24:	mov    edx,DWORD PTR [ebx+0x80]
  43fc2a:	mov    eax,ds:0x41be90
  43fc2f:	call   0x41b2b0
  43fc34:	cmp    DWORD PTR [ebp-0x20],0x0
  43fc38:	jne    0x43fc3e
  43fc3a:	xor    eax,eax
  43fc3c:	jmp    0x43fc40
  43fc3e:	mov    al,0x1
  43fc40:	mov    BYTE PTR [ebp-0xd],al
  43fc43:	cmp    BYTE PTR [ebp-0xd],0x0
  43fc47:	je     0x43fd5a
  43fc4d:	mov    esi,DWORD PTR [ebx+0xa0]
  43fc53:	mov    edx,DWORD PTR [ebx+0x8c]
  43fc59:	mov    eax,esi
  43fc5b:	mov    ecx,DWORD PTR [eax]
  43fc5d:	call   DWORD PTR [ecx+0x18]
  43fc60:	mov    edx,DWORD PTR [ebx+0x80]
  43fc66:	mov    eax,esi
  43fc68:	mov    ecx,DWORD PTR [eax]
  43fc6a:	call   DWORD PTR [ecx+0x14]
  43fc6d:	lea    edx,[ebp-0x24]
  43fc70:	mov    eax,DWORD PTR [ebx+0xa0]
  43fc76:	mov    ecx,DWORD PTR [eax]
  43fc78:	call   DWORD PTR [ecx+0x24]
  43fc7b:	mov    ecx,DWORD PTR [ebp-0x24]
  43fc7e:	mov    eax,DWORD PTR [esi+0x8]
  43fc81:	mov    edx,0x43fda4
  43fc86:	call   0x437440
  43fc8b:	mov    eax,DWORD PTR [ebp-0xc]
  43fc8e:	mov    edx,DWORD PTR [eax+0x7c]
  43fc91:	mov    eax,esi
  43fc93:	call   0x438bf8
  43fc98:	mov    BYTE PTR [ebp-0xd],0x0
  43fc9c:	mov    eax,DWORD PTR [ebx+0xa0]
  43fca2:	call   0x438cdc
  43fca7:	sub    al,0x1
  43fca9:	jb     0x43fcbb
  43fcab:	je     0x43fd50
  43fcb1:	dec    al
  43fcb3:	je     0x43fd56
  43fcb9:	jmp    0x43fc9c
  43fcbb:	mov    eax,DWORD PTR [ebp-0x8]
  43fcbe:	cmp    WORD PTR [eax+0x152],0x0
  43fcc6:	je     0x43fc9c
  43fcc8:	mov    edx,DWORD PTR [ebx+0x8c]
  43fcce:	mov    eax,DWORD PTR [ebx+0xa0]
  43fcd4:	mov    ecx,DWORD PTR [eax]
  43fcd6:	call   DWORD PTR [ecx+0x18]
  43fcd9:	mov    edx,DWORD PTR [ebx+0x80]
  43fcdf:	mov    eax,DWORD PTR [ebx+0xa0]
  43fce5:	mov    ecx,DWORD PTR [eax]
  43fce7:	call   DWORD PTR [ecx+0x14]
  43fcea:	lea    eax,[ebp-0xd]
  43fced:	push   eax
  43fcee:	mov    esi,DWORD PTR [ebp-0x8]
  43fcf1:	mov    ecx,DWORD PTR [ebx+0xa0]
  43fcf7:	mov    edx,DWORD PTR [ebp-0x8]
  43fcfa:	mov    eax,DWORD PTR [esi+0x154]
  43fd00:	call   DWORD PTR [esi+0x150]
  43fd06:	cmp    BYTE PTR [ebp-0xd],0x0
  43fd0a:	je     0x43fd5a
  43fd0c:	mov    BYTE PTR [ebx+0x9c],0x1
  43fd13:	lea    edx,[ebp-0x28]
  43fd16:	mov    eax,DWORD PTR [ebx+0xa0]
  43fd1c:	call   0x438d14
  43fd21:	mov    edx,DWORD PTR [ebp-0x28]
  43fd24:	lea    eax,[ebx+0x8c]
  43fd2a:	call   0x404fdc
  43fd2f:	lea    edx,[ebp-0x2c]
  43fd32:	mov    eax,DWORD PTR [ebx+0xa0]
  43fd38:	call   0x438ce8
  43fd3d:	mov    edx,DWORD PTR [ebp-0x2c]
  43fd40:	lea    eax,[ebx+0x80]
  43fd46:	call   0x404fdc
  43fd4b:	jmp    0x43fc9c
  43fd50:	mov    BYTE PTR [ebp-0xd],0x1
  43fd54:	jmp    0x43fd5a
  43fd56:	mov    BYTE PTR [ebp-0xd],0x0
  43fd5a:	xor    eax,eax
  43fd5c:	pop    edx
  43fd5d:	pop    ecx
  43fd5e:	pop    ecx
  43fd5f:	mov    DWORD PTR fs:[eax],edx
  43fd62:	push   0x43fd84
  43fd67:	lea    eax,[ebp-0x2c]
  43fd6a:	mov    edx,0x5
  43fd6f:	call   0x404fac
  43fd74:	lea    eax,[ebp-0x4]
  43fd77:	call   0x404f88
  43fd7c:	ret    
  43fd7d:	jmp    0x40481c
  43fd82:	jmp    0x43fd67
  43fd84:	movzx  eax,BYTE PTR [ebp-0xd]
  43fd88:	pop    edi
  43fd89:	pop    esi
  43fd8a:	pop    ebx
  43fd8b:	mov    esp,ebp
  43fd8d:	pop    ebp
  43fd8e:	ret    
  43fd8f:	add    bh,bh
  43fd91:	(bad)  
  43fd92:	(bad)  
  43fd93:	inc    DWORD PTR [ecx]
  43fd95:	add    BYTE PTR [eax],al
  43fd97:	add    BYTE PTR [eax],ah
  43fd99:	add    BYTE PTR [eax],al
  43fd9b:	add    bh,bh
  43fd9d:	(bad)  
  43fd9e:	(bad)  
  43fd9f:	dec    DWORD PTR ds:0x41000000
  43fda5:	jne    0x43fe1b
  43fda7:	push   0x7a69726f
  43fdac:	popa   
  43fdad:	je     0x43fe18
  43fdaf:	outs   dx,DWORD PTR ds:[esi]
  43fdb0:	outs   dx,BYTE PTR ds:[esi]
  43fdb1:	add    BYTE PTR [eax],al
  43fdb3:	add    BYTE PTR [ebp-0x75],dl
  43fdb6:	in     al,dx
  43fdb7:	add    esp,0xffffffdc
  43fdba:	push   ebx
  43fdbb:	push   esi
  43fdbc:	push   edi
  43fdbd:	xor    ebx,ebx
  43fdbf:	mov    DWORD PTR [ebp-0x24],ebx
  43fdc2:	mov    DWORD PTR [ebp-0x20],ebx
  43fdc5:	mov    DWORD PTR [ebp-0x1c],ebx
  43fdc8:	mov    DWORD PTR [ebp-0x4],ebx
  43fdcb:	mov    DWORD PTR [ebp-0xc],ecx
  43fdce:	mov    DWORD PTR [ebp-0x8],eax
  43fdd1:	xor    eax,eax
  43fdd3:	push   ebp
  43fdd4:	push   0x440049
  43fdd9:	push   DWORD PTR fs:[eax]
  43fddc:	mov    DWORD PTR fs:[eax],esp
  43fddf:	mov    eax,DWORD PTR [ebp-0x8]
  43fde2:	add    DWORD PTR [eax+0xf4],0x1
  43fde9:	jno    0x43fdf0
  43fdeb:	call   0x403f70
  43fdf0:	mov    eax,DWORD PTR [ebp-0x8]
  43fdf3:	mov    eax,DWORD PTR [eax+0x12c]
  43fdf9:	cmp    DWORD PTR [eax+0x4],0x0
  43fdfd:	jne    0x43fedc
  43fe03:	xor    eax,eax
  43fe05:	mov    DWORD PTR [ebp-0x14],eax
  43fe08:	jmp    0x43fe70
  43fe0a:	lea    ecx,[ebp-0x4]
  43fe0d:	mov    eax,DWORD PTR [ebp-0xc]
  43fe10:	mov    eax,DWORD PTR [eax+0x78]
  43fe13:	mov    edx,DWORD PTR [ebp-0x14]
  43fe16:	mov    ebx,DWORD PTR [eax]
  43fe18:	call   DWORD PTR [ebx+0xc]
  43fe1b:	xor    eax,eax
  43fe1d:	push   ebp
  43fe1e:	push   0x43fe5b
  43fe23:	push   DWORD PTR fs:[eax]
  43fe26:	mov    DWORD PTR fs:[eax],esp
  43fe29:	push   0x1
  43fe2b:	lea    eax,[ebp-0x1c]
  43fe2e:	push   eax
  43fe2f:	lea    eax,[ebp-0x4]
  43fe32:	mov    cl,0x1
  43fe34:	mov    edx,0x440064
  43fe39:	call   0x41c7c4
  43fe3e:	mov    eax,DWORD PTR [ebp-0x1c]
  43fe41:	call   0x438af8
  43fe46:	mov    DWORD PTR [ebp-0x18],eax
  43fe49:	xor    eax,eax
  43fe4b:	pop    edx
  43fe4c:	pop    ecx
  43fe4d:	pop    ecx
  43fe4e:	mov    DWORD PTR fs:[eax],edx
  43fe51:	jmp    0x43fe80
  43fe53:	xor    eax,eax
  43fe55:	pop    edx
  43fe56:	pop    ecx
  43fe57:	pop    ecx
  43fe58:	mov    DWORD PTR fs:[eax],edx
  43fe5b:	jmp    0x404568
  43fe60:	call   0x404978
  43fe65:	add    DWORD PTR [ebp-0x14],0x1
  43fe69:	jno    0x43fe70
  43fe6b:	call   0x403f70
  43fe70:	mov    eax,DWORD PTR [ebp-0xc]
  43fe73:	mov    eax,DWORD PTR [eax+0x78]
  43fe76:	mov    edx,DWORD PTR [eax]
  43fe78:	call   DWORD PTR [edx+0x14]
  43fe7b:	cmp    eax,DWORD PTR [ebp-0x14]
  43fe7e:	jg     0x43fe0a
  43fe80:	mov    eax,DWORD PTR [ebp-0xc]
  43fe83:	mov    eax,DWORD PTR [eax+0x78]
  43fe86:	mov    edx,DWORD PTR [eax]
  43fe88:	call   DWORD PTR [edx+0x14]
  43fe8b:	cmp    eax,DWORD PTR [ebp-0x14]
  43fe8e:	jne    0x43fe99
  43fe90:	mov    BYTE PTR [ebp-0xd],0x0
  43fe94:	jmp    0x440026
  43fe99:	mov    eax,DWORD PTR [ebp-0x8]
  43fe9c:	cmp    WORD PTR [eax+0x14a],0x0
  43fea4:	je     0x43fec2
  43fea6:	mov    eax,DWORD PTR [ebp-0xc]
  43fea9:	mov    eax,DWORD PTR [eax+0x78]
  43feac:	push   eax
  43fead:	lea    ecx,[ebp-0x18]
  43feb0:	mov    ebx,DWORD PTR [ebp-0x8]
  43feb3:	mov    edx,DWORD PTR [ebp-0x8]
  43feb6:	mov    eax,DWORD PTR [ebx+0x14c]
  43febc:	call   DWORD PTR [ebx+0x148]
  43fec2:	cmp    DWORD PTR [ebp-0x18],0x0
  43fec6:	je     0x43fedc
  43fec8:	mov    dl,0x1
  43feca:	mov    eax,DWORD PTR [ebp-0x18]
  43fecd:	call   DWORD PTR [eax+0x1c]
  43fed0:	mov    edx,DWORD PTR [ebp-0x8]
  43fed3:	mov    edx,DWORD PTR [edx+0x12c]
  43fed9:	mov    DWORD PTR [edx+0x4],eax
  43fedc:	mov    eax,DWORD PTR [ebp-0x8]
  43fedf:	mov    eax,DWORD PTR [eax+0x12c]
  43fee5:	cmp    DWORD PTR [eax+0x4],0x0
  43fee9:	je     0x43fef8
  43feeb:	mov    eax,DWORD PTR [ebp-0x8]
  43feee:	cmp    WORD PTR [eax+0x15a],0x0
  43fef6:	jne    0x43fefc
  43fef8:	xor    eax,eax
  43fefa:	jmp    0x43fefe
  43fefc:	mov    al,0x1
  43fefe:	mov    BYTE PTR [ebp-0xd],al
  43ff01:	cmp    BYTE PTR [ebp-0xd],0x0
  43ff05:	je     0x440026
  43ff0b:	mov    eax,DWORD PTR [ebp-0x8]
  43ff0e:	mov    eax,DWORD PTR [eax+0x12c]
  43ff14:	mov    ebx,DWORD PTR [eax+0x4]
  43ff17:	mov    edx,DWORD PTR [eax+0x14]
  43ff1a:	mov    eax,ebx
  43ff1c:	mov    ecx,DWORD PTR [eax]
  43ff1e:	call   DWORD PTR [ecx+0x18]
  43ff21:	mov    eax,DWORD PTR [ebp-0x8]
  43ff24:	mov    eax,DWORD PTR [eax+0x12c]
  43ff2a:	mov    edx,DWORD PTR [eax+0x8]
  43ff2d:	mov    eax,ebx
  43ff2f:	mov    ecx,DWORD PTR [eax]
  43ff31:	call   DWORD PTR [ecx+0x14]
  43ff34:	mov    eax,DWORD PTR [ebp-0xc]
  43ff37:	mov    edx,DWORD PTR [eax+0x78]
  43ff3a:	mov    eax,ebx
  43ff3c:	call   0x438bf8
  43ff41:	mov    BYTE PTR [ebp-0xd],0x0
  43ff45:	mov    eax,DWORD PTR [ebp-0x8]
  43ff48:	mov    eax,DWORD PTR [eax+0x12c]
  43ff4e:	mov    eax,DWORD PTR [eax+0x4]
  43ff51:	call   0x438cdc
  43ff56:	sub    al,0x1
  43ff58:	jb     0x43ff6a
  43ff5a:	je     0x44001c
  43ff60:	dec    al
  43ff62:	je     0x440022
  43ff68:	jmp    0x43ff45
  43ff6a:	mov    eax,DWORD PTR [ebp-0x8]
  43ff6d:	cmp    WORD PTR [eax+0x15a],0x0
  43ff75:	je     0x43ff45
  43ff77:	mov    eax,DWORD PTR [ebp-0x8]
  43ff7a:	mov    eax,DWORD PTR [eax+0x12c]
  43ff80:	mov    edx,DWORD PTR [eax+0x14]
  43ff83:	mov    eax,DWORD PTR [eax+0x4]
  43ff86:	mov    ecx,DWORD PTR [eax]
  43ff88:	call   DWORD PTR [ecx+0x18]
  43ff8b:	mov    eax,DWORD PTR [ebp-0x8]
  43ff8e:	mov    eax,DWORD PTR [eax+0x12c]
  43ff94:	mov    edx,DWORD PTR [eax+0x8]
  43ff97:	mov    eax,DWORD PTR [eax+0x4]
  43ff9a:	mov    ecx,DWORD PTR [eax]
  43ff9c:	call   DWORD PTR [ecx+0x14]
  43ff9f:	lea    eax,[ebp-0xd]
  43ffa2:	push   eax
  43ffa3:	mov    eax,DWORD PTR [ebp-0x8]
  43ffa6:	mov    eax,DWORD PTR [eax+0x12c]
  43ffac:	mov    ecx,DWORD PTR [eax+0x4]
  43ffaf:	mov    ebx,DWORD PTR [ebp-0x8]
  43ffb2:	mov    edx,DWORD PTR [ebp-0x8]
  43ffb5:	mov    eax,DWORD PTR [ebx+0x15c]
  43ffbb:	call   DWORD PTR [ebx+0x158]
  43ffc1:	cmp    BYTE PTR [ebp-0xd],0x0
  43ffc5:	je     0x440026
  43ffc7:	lea    edx,[ebp-0x20]
  43ffca:	mov    eax,DWORD PTR [ebp-0x8]
  43ffcd:	mov    eax,DWORD PTR [eax+0x12c]
  43ffd3:	mov    eax,DWORD PTR [eax+0x4]
  43ffd6:	call   0x438d14
  43ffdb:	mov    edx,DWORD PTR [ebp-0x20]
  43ffde:	mov    eax,DWORD PTR [ebp-0x8]
  43ffe1:	mov    eax,DWORD PTR [eax+0x12c]
  43ffe7:	add    eax,0x14
  43ffea:	call   0x404fdc
  43ffef:	lea    edx,[ebp-0x24]
  43fff2:	mov    eax,DWORD PTR [ebp-0x8]
  43fff5:	mov    eax,DWORD PTR [eax+0x12c]
  43fffb:	mov    eax,DWORD PTR [eax+0x4]
  43fffe:	call   0x438ce8
  440003:	mov    edx,DWORD PTR [ebp-0x24]
  440006:	mov    eax,DWORD PTR [ebp-0x8]
  440009:	mov    eax,DWORD PTR [eax+0x12c]
  44000f:	add    eax,0x8
  440012:	call   0x404fdc
  440017:	jmp    0x43ff45
  44001c:	mov    BYTE PTR [ebp-0xd],0x1
  440020:	jmp    0x440026
  440022:	mov    BYTE PTR [ebp-0xd],0x0
  440026:	xor    eax,eax
  440028:	pop    edx
  440029:	pop    ecx
  44002a:	pop    ecx
  44002b:	mov    DWORD PTR fs:[eax],edx
  44002e:	push   0x440050
  440033:	lea    eax,[ebp-0x24]
  440036:	mov    edx,0x3
  44003b:	call   0x404fac
  440040:	lea    eax,[ebp-0x4]
  440043:	call   0x404f88
  440048:	ret    
  440049:	jmp    0x40481c
  44004e:	jmp    0x440033
  440050:	movzx  eax,BYTE PTR [ebp-0xd]
  440054:	pop    edi
  440055:	pop    esi
  440056:	pop    ebx
  440057:	mov    esp,ebp
  440059:	pop    ebp
  44005a:	ret    
  44005b:	add    bh,bh
  44005d:	(bad)  
  44005e:	(bad)  
  44005f:	inc    DWORD PTR [ecx]
  440061:	add    BYTE PTR [eax],al
  440063:	add    BYTE PTR [eax],ah
  440065:	add    BYTE PTR [eax],al
  440067:	add    BYTE PTR [ebx+0x56],dl
  44006a:	mov    esi,edx
  44006c:	mov    ebx,eax
  44006e:	mov    eax,ebx
  440070:	call   0x440088
  440075:	mov    edx,DWORD PTR [eax+0x88]
  44007b:	mov    eax,esi
  44007d:	call   0x404fdc
  440082:	pop    esi
  440083:	pop    ebx
  440084:	ret    
  440085:	lea    eax,[eax+0x0]
  440088:	mov    eax,DWORD PTR [eax+0x128]
  44008e:	mov    eax,DWORD PTR [eax+0x10]
  440091:	ret    
  440092:	mov    eax,eax
  440094:	mov    eax,DWORD PTR [eax+0x128]
  44009a:	mov    eax,DWORD PTR [eax+0xc]
  44009d:	ret    
  44009e:	mov    eax,eax
  4400a0:	push   ebx
  4400a1:	push   esi
  4400a2:	mov    ebx,eax
  4400a4:	mov    eax,ebx
  4400a6:	call   0x430168
  4400ab:	mov    eax,ebx
  4400ad:	call   0x440094
  4400b2:	cmp    DWORD PTR [eax+0xa0],0x0
  4400b9:	je     0x440126
  4400bb:	mov    eax,ebx
  4400bd:	call   0x440094
  4400c2:	mov    eax,DWORD PTR [eax+0xa0]
  4400c8:	mov    edx,DWORD PTR [eax]
  4400ca:	call   DWORD PTR [edx+0x10]
  4400cd:	mov    esi,eax
  4400cf:	mov    eax,ebx
  4400d1:	call   0x440094
  4400d6:	mov    eax,DWORD PTR [eax+0xa0]
  4400dc:	cmp    esi,DWORD PTR [eax+0x4]
  4400df:	jne    0x440126
  4400e1:	mov    esi,DWORD PTR [ebx+0x110]
  4400e7:	test   esi,esi
  4400e9:	je     0x440105
  4400eb:	mov    eax,ebx
  4400ed:	call   0x440094
  4400f2:	mov    edx,DWORD PTR [eax+0xa0]
  4400f8:	mov    ecx,DWORD PTR [ebx+0x124]
  4400fe:	mov    eax,esi
  440100:	call   0x439190
  440105:	mov    eax,ebx
  440107:	call   0x440094
  44010c:	mov    eax,DWORD PTR [eax+0xa0]
  440112:	call   0x4040a0
  440117:	mov    eax,ebx
  440119:	call   0x440094
  44011e:	xor    edx,edx
  440120:	mov    DWORD PTR [eax+0xa0],edx
  440126:	mov    eax,DWORD PTR [ebx+0x12c]
  44012c:	mov    esi,DWORD PTR [eax+0x4]
  44012f:	test   esi,esi
  440131:	je     0x44014d
  440133:	mov    eax,esi
  440135:	mov    edx,DWORD PTR [eax]
  440137:	call   DWORD PTR [edx+0x10]
  44013a:	cmp    eax,DWORD PTR [esi+0x4]
  44013d:	jne    0x44014d
  44013f:	mov    eax,DWORD PTR [ebx+0x12c]
  440145:	mov    eax,DWORD PTR [eax+0x4]
  440148:	mov    edx,DWORD PTR [eax]
  44014a:	call   DWORD PTR [edx+0x20]
  44014d:	pop    esi
  44014e:	pop    ebx
  44014f:	ret    
  440150:	mov    eax,DWORD PTR [eax+0x128]
  440156:	mov    eax,DWORD PTR [eax+0xc]
  440159:	mov    ecx,DWORD PTR [eax]
  44015b:	call   DWORD PTR [ecx+0x8]
  44015e:	ret    
  44015f:	nop
  440160:	push   ebx
  440161:	push   esi
  440162:	push   edi
  440163:	test   dl,dl
  440165:	je     0x44016f
  440167:	add    esp,0xfffffff0
  44016a:	call   0x4043ac
  44016f:	mov    esi,ecx
  440171:	mov    ebx,edx
  440173:	mov    edi,eax
  440175:	xor    edx,edx
  440177:	mov    eax,edi
  440179:	call   0x43d6c0
  44017e:	mov    DWORD PTR [edi+0x80],esi
  440184:	mov    eax,edi
  440186:	test   bl,bl
  440188:	je     0x440199
  44018a:	call   0x404404
  44018f:	pop    DWORD PTR fs:0x0
  440196:	add    esp,0xc
  440199:	mov    eax,edi
  44019b:	pop    edi
  44019c:	pop    esi
  44019d:	pop    ebx
  44019e:	ret    
  44019f:	nop
  4401a0:	push   ebp
  4401a1:	mov    ebp,esp
  4401a3:	xor    ecx,ecx
  4401a5:	push   ecx
  4401a6:	push   ecx
  4401a7:	push   ecx
  4401a8:	push   ecx
  4401a9:	push   ecx
  4401aa:	push   ecx
  4401ab:	push   ebx
  4401ac:	push   esi
  4401ad:	mov    DWORD PTR [ebp-0x8],eax
  4401b0:	xor    eax,eax
  4401b2:	push   ebp
  4401b3:	push   0x440345
  4401b8:	push   DWORD PTR fs:[eax]
  4401bb:	mov    DWORD PTR fs:[eax],esp
  4401be:	lea    eax,[ebp-0x4]
  4401c1:	push   eax
  4401c2:	mov    eax,DWORD PTR [ebp-0x8]
  4401c5:	mov    eax,DWORD PTR [eax+0x88]
  4401cb:	mov    ecx,0x3
  4401d0:	mov    edx,0x6
  4401d5:	call   0x405480
  4401da:	xor    ebx,ebx
  4401dc:	mov    esi,0x462894
  4401e1:	mov    edx,DWORD PTR [ebp-0x4]
  4401e4:	mov    eax,DWORD PTR [esi]
  4401e6:	call   0x41d948
  4401eb:	test   al,al
  4401ed:	je     0x4401fa
  4401ef:	mov    eax,DWORD PTR [ebp-0x8]
  4401f2:	mov    BYTE PTR [eax+0x94],bl
  4401f8:	jmp    0x440203
  4401fa:	inc    ebx
  4401fb:	add    esi,0x4
  4401fe:	cmp    bl,0x2
  440201:	jne    0x4401e1
  440203:	mov    eax,DWORD PTR [ebp-0x8]
  440206:	mov    eax,DWORD PTR [eax+0x80]
  44020c:	mov    edx,DWORD PTR [eax]
  44020e:	call   DWORD PTR [edx+0x5c]
  440211:	test   al,al
  440213:	je     0x44022d
  440215:	mov    eax,DWORD PTR [ebp-0x8]
  440218:	mov    eax,DWORD PTR [eax+0x80]
  44021e:	mov    eax,DWORD PTR [eax+0x8c]
  440224:	xor    ecx,ecx
  440226:	xor    edx,edx
  440228:	mov    ebx,DWORD PTR [eax]
  44022a:	call   DWORD PTR [ebx+0x64]
  44022d:	mov    eax,DWORD PTR [ebp-0x8]
  440230:	mov    eax,DWORD PTR [eax+0x80]
  440236:	mov    edx,DWORD PTR [eax]
  440238:	call   DWORD PTR [edx+0x5c]
  44023b:	mov    ebx,eax
  44023d:	mov    eax,DWORD PTR [ebp-0x8]
  440240:	mov    BYTE PTR [eax+0x8c],bl
  440246:	test   bl,bl
  440248:	je     0x440318
  44024e:	mov    eax,DWORD PTR [ebp-0x8]
  440251:	mov    eax,DWORD PTR [eax+0x80]
  440257:	movzx  eax,BYTE PTR [eax+0x114]
  44025e:	sub    al,0x1
  440260:	jb     0x4402c1
  440262:	jne    0x440318
  440268:	lea    ecx,[ebp-0xc]
  44026b:	mov    eax,DWORD PTR [ebp-0x8]
  44026e:	mov    edx,DWORD PTR [eax+0xc]
  440271:	mov    eax,ds:0x41be90
  440276:	call   0x41b2b0
  44027b:	mov    eax,DWORD PTR [ebp-0xc]
  44027e:	mov    edx,0x44035c
  440283:	call   0x41d948
  440288:	test   al,al
  44028a:	jne    0x4402b0
  44028c:	lea    ecx,[ebp-0x10]
  44028f:	mov    eax,DWORD PTR [ebp-0x8]
  440292:	mov    edx,DWORD PTR [eax+0x74]
  440295:	mov    eax,ds:0x41be90
  44029a:	call   0x41b2b0
  44029f:	mov    eax,DWORD PTR [ebp-0x10]
  4402a2:	mov    edx,0x44035c
  4402a7:	call   0x41d948
  4402ac:	test   al,al
  4402ae:	je     0x4402b4
  4402b0:	xor    eax,eax
  4402b2:	jmp    0x4402b6
  4402b4:	mov    al,0x1
  4402b6:	mov    edx,DWORD PTR [ebp-0x8]
  4402b9:	mov    BYTE PTR [edx+0x8c],al
  4402bf:	jmp    0x440318
  4402c1:	lea    ecx,[ebp-0x14]
  4402c4:	mov    eax,DWORD PTR [ebp-0x8]
  4402c7:	mov    edx,DWORD PTR [eax+0xc]
  4402ca:	mov    eax,ds:0x41be90
  4402cf:	call   0x41b2b0
  4402d4:	mov    eax,DWORD PTR [ebp-0x14]
  4402d7:	mov    edx,0x44036c
  4402dc:	call   0x41d948
  4402e1:	test   al,al
  4402e3:	jne    0x44030d
  4402e5:	lea    ecx,[ebp-0x18]
  4402e8:	mov    eax,DWORD PTR [ebp-0x8]
  4402eb:	mov    edx,DWORD PTR [eax+0x74]
  4402ee:	mov    eax,ds:0x41be90
  4402f3:	call   0x41b2b0
  4402f8:	mov    eax,DWORD PTR [ebp-0x18]
  4402fb:	mov    edx,0x44036c
  440300:	call   0x41d948
  440305:	test   al,al
  440307:	jne    0x44030d
  440309:	xor    eax,eax
  44030b:	jmp    0x44030f
  44030d:	mov    al,0x1
  44030f:	mov    edx,DWORD PTR [ebp-0x8]
  440312:	mov    BYTE PTR [edx+0x8c],al
  440318:	mov    eax,DWORD PTR [ebp-0x8]
  44031b:	movzx  ebx,BYTE PTR [eax+0x8c]
  440322:	xor    eax,eax
  440324:	pop    edx
  440325:	pop    ecx
  440326:	pop    ecx
  440327:	mov    DWORD PTR fs:[eax],edx
  44032a:	push   0x44034c
  44032f:	lea    eax,[ebp-0x18]
  440332:	mov    edx,0x4
  440337:	call   0x404fac
  44033c:	lea    eax,[ebp-0x4]
  44033f:	call   0x404f88
  440344:	ret    
  440345:	jmp    0x40481c
  44034a:	jmp    0x44032f
  44034c:	mov    eax,ebx
  44034e:	pop    esi
  44034f:	pop    ebx
  440350:	mov    esp,ebp
  440352:	pop    ebp
  440353:	ret    
  440354:	(bad)  
  440355:	(bad)  
  440356:	(bad)  
  440357:	inc    DWORD PTR ds:0x43000000
  44035d:	dec    esp
  44035e:	dec    edi
  44035f:	push   ebx
  440360:	inc    ebp
  440361:	add    BYTE PTR [eax],al
  440363:	add    bh,bh
  440365:	(bad)  
  440366:	(bad)  
  440367:	dec    DWORD PTR [edx]
  440369:	add    BYTE PTR [eax],al
  44036b:	add    BYTE PTR [ebx+0x45],cl
  44036e:	inc    ebp
  44036f:	push   eax
  440370:	sub    eax,0x56494c41
  440375:	inc    ebp
  440376:	add    BYTE PTR [eax],al
  440378:	push   ebp
  440379:	mov    ebp,esp
  44037b:	xor    ecx,ecx
  44037d:	push   ecx
  44037e:	push   ecx
  44037f:	push   ecx
  440380:	push   ecx
  440381:	push   ebx
  440382:	push   esi
  440383:	mov    ebx,eax
  440385:	xor    eax,eax
  440387:	push   ebp
  440388:	push   0x44041b
  44038d:	push   DWORD PTR fs:[eax]
  440390:	mov    DWORD PTR fs:[eax],esp
  440393:	lea    eax,[ebp-0x4]
  440396:	mov    edx,DWORD PTR [ebx+0x88]
  44039c:	call   0x405020
  4403a1:	push   0x1
  4403a3:	lea    eax,[ebp-0x8]
  4403a6:	push   eax
  4403a7:	lea    eax,[ebp-0x4]
  4403aa:	mov    cl,0x1
  4403ac:	mov    edx,0x440434
  4403b1:	call   0x41c7c4
  4403b6:	lea    ecx,[ebp-0xc]
  4403b9:	mov    edx,DWORD PTR [ebp-0x4]
  4403bc:	mov    eax,ds:0x41be90
  4403c1:	call   0x41b2b0
  4403c6:	mov    edx,DWORD PTR [ebp-0xc]
  4403c9:	lea    eax,[ebp-0x4]
  4403cc:	call   0x405020
  4403d1:	push   0x1
  4403d3:	lea    eax,[ebp-0x10]
  4403d6:	push   eax
  4403d7:	lea    eax,[ebp-0x4]
  4403da:	xor    ecx,ecx
  4403dc:	mov    edx,0x440434
  4403e1:	call   0x41c7c4
  4403e6:	mov    edx,DWORD PTR [ebp-0x10]
  4403e9:	or     ecx,0xffffffff
  4403ec:	mov    eax,ds:0x41be90
  4403f1:	call   0x41b254
  4403f6:	mov    esi,eax
  4403f8:	mov    DWORD PTR [ebx+0x84],esi
  4403fe:	mov    ebx,esi
  440400:	xor    eax,eax
  440402:	pop    edx
  440403:	pop    ecx
  440404:	pop    ecx
  440405:	mov    DWORD PTR fs:[eax],edx
  440408:	push   0x440422
  44040d:	lea    eax,[ebp-0x10]
  440410:	mov    edx,0x4
  440415:	call   0x404fac
  44041a:	ret    
  44041b:	jmp    0x40481c
  440420:	jmp    0x44040d
  440422:	mov    eax,ebx
  440424:	pop    esi
  440425:	pop    ebx
  440426:	mov    esp,ebp
  440428:	pop    ebp
  440429:	ret    
  44042a:	add    BYTE PTR [eax],al
  44042c:	(bad)  
  44042d:	(bad)  
  44042e:	(bad)  
  44042f:	inc    DWORD PTR [ecx]
  440431:	add    BYTE PTR [eax],al
  440433:	add    BYTE PTR [eax],ah
  440435:	add    BYTE PTR [eax],al
  440437:	add    BYTE PTR [ebx+0x56],dl
  44043a:	push   edi
  44043b:	test   dl,dl
  44043d:	je     0x440447
  44043f:	add    esp,0xfffffff0
  440442:	call   0x4043ac
  440447:	mov    esi,ecx
  440449:	mov    ebx,edx
  44044b:	mov    edi,eax
  44044d:	xor    edx,edx
  44044f:	mov    eax,edi
  440451:	call   0x43c408
  440456:	mov    DWORD PTR [edi+0xa8],esi
  44045c:	mov    BYTE PTR [edi+0xb8],0x0
  440463:	mov    eax,edi
  440465:	test   bl,bl
  440467:	je     0x440478
  440469:	call   0x404404
  44046e:	pop    DWORD PTR fs:0x0
  440475:	add    esp,0xc
  440478:	mov    eax,edi
  44047a:	pop    edi
  44047b:	pop    esi
  44047c:	pop    ebx
  44047d:	ret    
  44047e:	mov    eax,eax
  440480:	push   ebp
  440481:	mov    ebp,esp
  440483:	push   ecx
  440484:	push   ebx
  440485:	push   esi
  440486:	push   edi
  440487:	test   dl,dl
  440489:	je     0x440493
  44048b:	add    esp,0xfffffff0
  44048e:	call   0x4043ac
  440493:	mov    edi,ecx
  440495:	mov    BYTE PTR [ebp-0x1],dl
  440498:	mov    ebx,eax
  44049a:	xor    edx,edx
  44049c:	mov    eax,ebx
  44049e:	call   0x404070
  4404a3:	mov    esi,edi
  4404a5:	mov    DWORD PTR [ebx+0x4],esi
  4404a8:	mov    ecx,esi
  4404aa:	mov    dl,0x1
  4404ac:	mov    eax,ds:0x43dea4
  4404b1:	call   0x440438
  4404b6:	mov    DWORD PTR [ebx+0xc],eax
  4404b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4404bc:	mov    dl,0x1
  4404be:	mov    eax,ds:0x43ddec
  4404c3:	call   0x440160
  4404c8:	mov    DWORD PTR [ebx+0x10],eax
  4404cb:	mov    eax,ebx
  4404cd:	cmp    BYTE PTR [ebp-0x1],0x0
  4404d1:	je     0x4404e2
  4404d3:	call   0x404404
  4404d8:	pop    DWORD PTR fs:0x0
  4404df:	add    esp,0xc
  4404e2:	mov    eax,ebx
  4404e4:	pop    edi
  4404e5:	pop    esi
  4404e6:	pop    ebx
  4404e7:	pop    ecx
  4404e8:	pop    ebp
  4404e9:	ret    
  4404ea:	mov    eax,eax
  4404ec:	push   ebx
  4404ed:	push   esi
  4404ee:	call   0x404454
  4404f3:	mov    ebx,edx
  4404f5:	mov    esi,eax
  4404f7:	lea    edx,[esi+0xc]
  4404fa:	mov    eax,ds:0x41be90
  4404ff:	call   0x41b14c
  440504:	lea    edx,[esi+0x10]
  440507:	mov    eax,ds:0x41be90
  44050c:	call   0x41b14c
  440511:	mov    edx,ebx
  440513:	and    dl,0xfc
  440516:	mov    eax,esi
  440518:	call   0x404090
  44051d:	test   bl,bl
  44051f:	jle    0x440528
  440521:	mov    eax,esi
  440523:	call   0x4043fc
  440528:	pop    esi
  440529:	pop    ebx
  44052a:	ret    
  44052b:	nop
  44052c:	push   ebp
  44052d:	mov    ebp,esp
  44052f:	xor    ecx,ecx
  440531:	push   ecx
  440532:	push   ecx
  440533:	push   ecx
  440534:	push   ecx
  440535:	push   ebx
  440536:	push   esi
  440537:	push   edi
  440538:	mov    ebx,edx
  44053a:	mov    DWORD PTR [ebp-0x4],eax
  44053d:	xor    eax,eax
  44053f:	push   ebp
  440540:	push   0x4406d4
  440545:	push   DWORD PTR fs:[eax]
  440548:	mov    DWORD PTR fs:[eax],esp
  44054b:	mov    eax,DWORD PTR [ebp-0x4]
  44054e:	mov    eax,DWORD PTR [eax+0xc]
  440551:	mov    edx,DWORD PTR [eax]
  440553:	call   DWORD PTR [edx+0x10]
  440556:	mov    eax,DWORD PTR [ebp-0x4]
  440559:	mov    eax,DWORD PTR [eax+0xc]
  44055c:	mov    edx,DWORD PTR [eax+0x8]
  44055f:	mov    eax,DWORD PTR [ebp-0x4]
  440562:	mov    eax,DWORD PTR [eax+0x4]
  440565:	mov    eax,DWORD PTR [eax+0x12c]
  44056b:	call   0x43ce08
  440570:	test   ebx,ebx
  440572:	je     0x440587
  440574:	mov    eax,DWORD PTR [ebp-0x4]
  440577:	mov    ecx,DWORD PTR [eax+0xc]
  44057a:	mov    eax,DWORD PTR [ebp-0x4]
  44057d:	mov    eax,DWORD PTR [eax+0x4]
  440580:	mov    edx,ebx
  440582:	call   0x43e700
  440587:	mov    eax,DWORD PTR [ebp-0x4]
  44058a:	mov    eax,DWORD PTR [eax+0x4]
  44058d:	mov    eax,DWORD PTR [eax+0x8c]
  440593:	call   0x429780
  440598:	xor    eax,eax
  44059a:	push   ebp
  44059b:	push   0x440696
  4405a0:	push   DWORD PTR fs:[eax]
  4405a3:	mov    DWORD PTR fs:[eax],esp
  4405a6:	mov    eax,DWORD PTR [ebp-0x4]
  4405a9:	mov    ebx,DWORD PTR [eax+0xc]
  4405ac:	push   DWORD PTR [ebx+0xb0]
  4405b2:	push   0x4406ec
  4405b7:	push   DWORD PTR [ebx+0xac]
  4405bd:	push   0x4406f8
  4405c2:	mov    eax,DWORD PTR [ebp-0x4]
  4405c5:	mov    esi,DWORD PTR [eax+0x4]
  4405c8:	movzx  eax,BYTE PTR [esi+0x114]
  4405cf:	push   DWORD PTR [eax*4+0x462894]
  4405d6:	lea    eax,[ebp-0x8]
  4405d9:	mov    edx,0x5
  4405de:	call   0x40531c
  4405e3:	mov    edx,DWORD PTR [ebp-0x8]
  4405e6:	mov    eax,DWORD PTR [esi+0x8c]
  4405ec:	mov    ecx,DWORD PTR [eax]
  4405ee:	call   DWORD PTR [ecx+0x88]
  4405f4:	mov    eax,DWORD PTR [ebp-0x4]
  4405f7:	mov    eax,DWORD PTR [eax+0xc]
  4405fa:	mov    eax,DWORD PTR [eax+0x8]
  4405fd:	mov    edx,DWORD PTR [eax]
  4405ff:	call   DWORD PTR [edx+0x14]
  440602:	mov    esi,eax
  440604:	sub    esi,0x1
  440607:	jno    0x44060e
  440609:	call   0x403f70
  44060e:	test   esi,esi
  440610:	jl     0x440662
  440612:	inc    esi
  440613:	xor    ebx,ebx
  440615:	lea    ecx,[ebp-0xc]
  440618:	mov    eax,DWORD PTR [ebp-0x4]
  44061b:	mov    eax,DWORD PTR [eax+0xc]
  44061e:	mov    eax,DWORD PTR [eax+0x8]
  440621:	mov    edx,ebx
  440623:	mov    edi,DWORD PTR [eax]
  440625:	call   DWORD PTR [edi+0xc]
  440628:	mov    eax,DWORD PTR [ebp-0xc]
  44062b:	call   0x405248
  440630:	test   eax,eax
  440632:	jle    0x44065e
  440634:	lea    ecx,[ebp-0x10]
  440637:	mov    eax,DWORD PTR [ebp-0x4]
  44063a:	mov    eax,DWORD PTR [eax+0xc]
  44063d:	mov    eax,DWORD PTR [eax+0x8]
  440640:	mov    edx,ebx
  440642:	mov    edi,DWORD PTR [eax]
  440644:	call   DWORD PTR [edi+0xc]
  440647:	mov    edx,DWORD PTR [ebp-0x10]
  44064a:	mov    eax,DWORD PTR [ebp-0x4]
  44064d:	mov    eax,DWORD PTR [eax+0x4]
  440650:	mov    eax,DWORD PTR [eax+0x8c]
  440656:	mov    ecx,DWORD PTR [eax]
  440658:	call   DWORD PTR [ecx+0x88]
  44065e:	inc    ebx
  44065f:	dec    esi
  440660:	jne    0x440615
  440662:	mov    eax,DWORD PTR [ebp-0x4]
  440665:	mov    eax,DWORD PTR [eax+0x4]
  440668:	mov    eax,DWORD PTR [eax+0x8c]
  44066e:	xor    edx,edx
  440670:	mov    ecx,DWORD PTR [eax]
  440672:	call   DWORD PTR [ecx+0x88]
  440678:	mov    eax,DWORD PTR [ebp-0x4]
  44067b:	mov    eax,DWORD PTR [eax+0x4]
  44067e:	mov    eax,DWORD PTR [eax+0x8c]
  440684:	mov    edx,DWORD PTR [eax]
  440686:	call   DWORD PTR [edx+0xb8]
  44068c:	xor    eax,eax
  44068e:	pop    edx
  44068f:	pop    ecx
  440690:	pop    ecx
  440691:	mov    DWORD PTR fs:[eax],edx
  440694:	jmp    0x4406b9
  440696:	jmp    0x404568
  44069b:	mov    eax,DWORD PTR [ebp-0x4]
  44069e:	mov    eax,DWORD PTR [eax+0x4]
  4406a1:	mov    eax,DWORD PTR [eax+0x8c]
  4406a7:	mov    edx,DWORD PTR [eax]
  4406a9:	call   DWORD PTR [edx+0xb0]
  4406af:	call   0x404924
  4406b4:	call   0x404978
  4406b9:	xor    eax,eax
  4406bb:	pop    edx
  4406bc:	pop    ecx
  4406bd:	pop    ecx
  4406be:	mov    DWORD PTR fs:[eax],edx
  4406c1:	push   0x4406db
  4406c6:	lea    eax,[ebp-0x10]
  4406c9:	mov    edx,0x3
  4406ce:	call   0x404fac
  4406d3:	ret    
  4406d4:	jmp    0x40481c
  4406d9:	jmp    0x4406c6
  4406db:	pop    edi
  4406dc:	pop    esi
  4406dd:	pop    ebx
  4406de:	mov    esp,ebp
  4406e0:	pop    ebp
  4406e1:	ret    
  4406e2:	add    BYTE PTR [eax],al
  4406e4:	(bad)  
  4406e5:	(bad)  
  4406e6:	(bad)  
  4406e7:	inc    DWORD PTR [ecx]
  4406e9:	add    BYTE PTR [eax],al
  4406eb:	add    BYTE PTR [eax],ah
  4406ed:	add    BYTE PTR [eax],al
  4406ef:	add    bh,bh
  4406f1:	(bad)  
  4406f2:	(bad)  
  4406f3:	inc    DWORD PTR [esi]
  4406f5:	add    BYTE PTR [eax],al
  4406f7:	add    BYTE PTR [eax],ah
  4406f9:	dec    eax
  4406fa:	push   esp
  4406fb:	push   esp
  4406fc:	push   eax
  4406fd:	das    
  4406fe:	add    BYTE PTR [eax],al
  440700:	push   ebp
  440701:	mov    ebp,esp
  440703:	add    esp,0xfffffff8
  440706:	push   ebx
  440707:	push   esi
  440708:	push   edi
  440709:	xor    ecx,ecx
  44070b:	mov    DWORD PTR [ebp-0x4],ecx
  44070e:	mov    esi,edx
  440710:	mov    DWORD PTR [ebp-0x8],eax
  440713:	xor    eax,eax
  440715:	push   ebp
  440716:	push   0x4407ed
  44071b:	push   DWORD PTR fs:[eax]
  44071e:	mov    DWORD PTR fs:[eax],esp
  440721:	mov    eax,DWORD PTR [ebp-0x8]
  440724:	mov    eax,DWORD PTR [eax+0x10]
  440727:	mov    eax,DWORD PTR [eax+0x8]
  44072a:	mov    edx,DWORD PTR [eax]
  44072c:	call   DWORD PTR [edx+0x44]
  44072f:	lea    edx,[ebp-0x4]
  440732:	mov    eax,DWORD PTR [ebp-0x8]
  440735:	mov    eax,DWORD PTR [eax+0x4]
  440738:	mov    eax,DWORD PTR [eax+0x8c]
  44073e:	call   0x428524
  440743:	xor    edx,edx
  440745:	push   ebp
  440746:	push   0x44079c
  44074b:	push   DWORD PTR fs:[edx]
  44074e:	mov    DWORD PTR fs:[edx],esp
  440751:	xor    ebx,ebx
  440753:	jmp    0x440784
  440755:	mov    eax,DWORD PTR [ebp-0x8]
  440758:	mov    eax,DWORD PTR [eax+0x10]
  44075b:	mov    eax,DWORD PTR [eax+0x8]
  44075e:	mov    edx,DWORD PTR [ebp-0x4]
  440761:	mov    ecx,DWORD PTR [eax]
  440763:	call   DWORD PTR [ecx+0x38]
  440766:	lea    edx,[ebp-0x4]
  440769:	mov    eax,DWORD PTR [ebp-0x8]
  44076c:	mov    eax,DWORD PTR [eax+0x4]
  44076f:	mov    eax,DWORD PTR [eax+0x8c]
  440775:	call   0x428524
  44077a:	add    ebx,0x1
  44077d:	jno    0x440784
  44077f:	call   0x403f70
  440784:	cmp    DWORD PTR [ebp-0x4],0x0
  440788:	je     0x440792
  44078a:	test   esi,esi
  44078c:	jg     0x440755
  44078e:	cmp    esi,ebx
  440790:	jg     0x440755
  440792:	xor    eax,eax
  440794:	pop    edx
  440795:	pop    ecx
  440796:	pop    ecx
  440797:	mov    DWORD PTR fs:[eax],edx
  44079a:	jmp    0x4407cc
  44079c:	jmp    0x404694
  4407a1:	add    al,BYTE PTR [eax]
  4407a3:	add    BYTE PTR [eax],al
  4407a5:	adc    BYTE PTR [edx+0x7b50041],bh
  4407ab:	inc    esp
  4407ac:	add    BYTE PTR [eax],al
  4407ae:	add    BYTE PTR [eax],al
  4407b0:	add    dl,al
  4407b2:	pop    es
  4407b3:	inc    esp
  4407b4:	add    BYTE PTR [ebx+0x408bf845],cl
  4407ba:	add    al,0xe8
  4407bc:	(bad)  
  4407bd:	(bad)  
  4407be:	(bad)  
  4407bf:	(bad)  
  4407c0:	jmp    0x4407c7
  4407c2:	call   0x404924
  4407c7:	call   0x404978
  4407cc:	mov    eax,DWORD PTR [ebp-0x8]
  4407cf:	mov    eax,DWORD PTR [eax+0x10]
  4407d2:	mov    edx,DWORD PTR [eax]
  4407d4:	call   DWORD PTR [edx+0xc]
  4407d7:	xor    eax,eax
  4407d9:	pop    edx
  4407da:	pop    ecx
  4407db:	pop    ecx
  4407dc:	mov    DWORD PTR fs:[eax],edx
  4407df:	push   0x4407f4
  4407e4:	lea    eax,[ebp-0x4]
  4407e7:	call   0x404f88
  4407ec:	ret    
  4407ed:	jmp    0x40481c
  4407f2:	jmp    0x4407e4
  4407f4:	pop    edi
  4407f5:	pop    esi
  4407f6:	pop    ebx
  4407f7:	pop    ecx
  4407f8:	pop    ecx
  4407f9:	pop    ebp
  4407fa:	ret    
  4407fb:	nop
  4407fc:	push   ebp
  4407fd:	mov    ebp,esp
  4407ff:	add    esp,0xffffffec
  440802:	push   ebx
  440803:	xor    ecx,ecx
  440805:	mov    DWORD PTR [ebp-0x14],ecx
  440808:	mov    ecx,edx
  44080a:	add    ecx,ecx
  44080c:	inc    ecx
  44080d:	test   ecx,ecx
  44080f:	js     0x44081b
  440811:	shr    ecx,0x2
  440814:	mov    ebx,DWORD PTR [eax+ecx*4]
  440817:	dec    ecx
  440818:	push   ebx
  440819:	jns    0x440814
  44081b:	mov    eax,esp
  44081d:	mov    DWORD PTR [ebp-0x8],edx
  440820:	mov    DWORD PTR [ebp-0x4],eax
  440823:	xor    eax,eax
  440825:	push   ebp
  440826:	push   0x44093e
  44082b:	push   DWORD PTR fs:[eax]
  44082e:	mov    DWORD PTR fs:[eax],esp
  440831:	xor    ecx,ecx
  440833:	mov    dl,0x1
  440835:	mov    eax,ds:0x413070
  44083a:	call   0x416ac4
  44083f:	mov    DWORD PTR [ebp-0xc],eax
  440842:	mov    eax,DWORD PTR [ebp+0x8]
  440845:	mov    eax,DWORD PTR [eax-0x4]
  440848:	mov    eax,DWORD PTR [eax+0x10]
  44084b:	mov    edx,DWORD PTR [eax+0x90]
  440851:	mov    DWORD PTR [ebp-0x10],edx
  440854:	mov    edx,DWORD PTR [ebp+0x8]
  440857:	mov    edx,DWORD PTR [ebp-0xc]
  44085a:	mov    DWORD PTR [eax+0x90],edx
  440860:	xor    ecx,ecx
  440862:	push   ebp
  440863:	push   0x440921
  440868:	push   DWORD PTR fs:[ecx]
  44086b:	mov    DWORD PTR fs:[ecx],esp
  44086e:	mov    edx,DWORD PTR [ebp+0x8]
  440871:	mov    edx,eax
  440873:	mov    eax,DWORD PTR [ebp+0x8]
  440876:	mov    eax,DWORD PTR [eax-0x4]
  440879:	mov    eax,DWORD PTR [eax+0x4]
  44087c:	call   0x43eae8
  440881:	mov    eax,DWORD PTR [ebp+0x8]
  440884:	mov    eax,DWORD PTR [eax-0x4]
  440887:	mov    eax,DWORD PTR [eax+0x10]
  44088a:	call   0x440378
  44088f:	mov    ebx,eax
  440891:	cmp    DWORD PTR [ebp-0x8],0xffffffff
  440895:	jle    0x4408c5
  440897:	mov    eax,DWORD PTR [ebp-0x8]
  44089a:	test   eax,eax
  44089c:	jl     0x4408c5
  44089e:	inc    eax
  44089f:	xor    edx,edx
  4408a1:	test   edx,edx
  4408a3:	jl     0x4408aa
  4408a5:	cmp    edx,DWORD PTR [ebp-0x8]
  4408a8:	jle    0x4408af
  4408aa:	call   0x403f68
  4408af:	mov    ecx,DWORD PTR [ebp-0x4]
  4408b2:	movsx  ecx,WORD PTR [ecx+edx*2]
  4408b6:	cmp    ebx,ecx
  4408b8:	jne    0x4408c1
  4408ba:	call   0x4049a8
  4408bf:	jmp    0x440928
  4408c1:	inc    edx
  4408c2:	dec    eax
  4408c3:	jne    0x4408a1
  4408c5:	lea    edx,[ebp-0x14]
  4408c8:	mov    eax,DWORD PTR [ebp+0x8]
  4408cb:	mov    eax,DWORD PTR [eax-0x4]
  4408ce:	mov    eax,DWORD PTR [eax+0x4]
  4408d1:	call   0x440068
  4408d6:	mov    eax,DWORD PTR [ebp-0x14]
  4408d9:	push   eax
  4408da:	mov    eax,DWORD PTR [ebp-0xc]
  4408dd:	mov    eax,DWORD PTR [eax+0x4]
  4408e0:	push   eax
  4408e1:	mov    ecx,ebx
  4408e3:	mov    dl,0x1
  4408e5:	mov    eax,ds:0x43e510
  4408ea:	call   0x43e5ac
  4408ef:	call   0x4048fc
  4408f4:	xor    eax,eax
  4408f6:	pop    edx
  4408f7:	pop    ecx
  4408f8:	pop    ecx
  4408f9:	mov    DWORD PTR fs:[eax],edx
  4408fc:	push   0x440928
  440901:	mov    eax,DWORD PTR [ebp+0x8]
  440904:	mov    eax,DWORD PTR [eax-0x4]
  440907:	mov    eax,DWORD PTR [eax+0x10]
  44090a:	mov    edx,DWORD PTR [ebp-0x10]
  44090d:	mov    DWORD PTR [eax+0x90],edx
  440913:	lea    edx,[ebp-0xc]
  440916:	mov    eax,ds:0x41be90
  44091b:	call   0x41b14c
  440920:	ret    
  440921:	jmp    0x40481c
  440926:	jmp    0x440901
  440928:	xor    eax,eax
  44092a:	pop    edx
  44092b:	pop    ecx
  44092c:	pop    ecx
  44092d:	mov    DWORD PTR fs:[eax],edx
  440930:	push   0x440945
  440935:	lea    eax,[ebp-0x14]
  440938:	call   0x404f88
  44093d:	ret    
  44093e:	jmp    0x40481c
  440943:	jmp    0x440935
  440945:	mov    ebx,DWORD PTR [ebp-0x18]
  440948:	mov    esp,ebp
  44094a:	pop    ebp
  44094b:	ret    
  44094c:	push   ebp
  44094d:	mov    ebp,esp
  44094f:	add    esp,0xfffffff8
  440952:	xor    ecx,ecx
  440954:	mov    dl,0x1
  440956:	mov    eax,ds:0x413070
  44095b:	call   0x416ac4
  440960:	mov    DWORD PTR [ebp-0x4],eax
  440963:	mov    eax,DWORD PTR [ebp+0x8]
  440966:	mov    eax,DWORD PTR [eax-0x4]
  440969:	mov    eax,DWORD PTR [eax+0x10]
  44096c:	mov    edx,DWORD PTR [eax+0x90]
  440972:	mov    DWORD PTR [ebp-0x8],edx
  440975:	mov    edx,DWORD PTR [ebp+0x8]
  440978:	mov    edx,DWORD PTR [ebp-0x4]
  44097b:	mov    DWORD PTR [eax+0x90],edx
  440981:	xor    edx,edx
  440983:	push   ebp
  440984:	push   0x4409cf
  440989:	push   DWORD PTR fs:[edx]
  44098c:	mov    DWORD PTR fs:[edx],esp
  44098f:	mov    edx,DWORD PTR [ebp+0x8]
  440992:	mov    edx,eax
  440994:	mov    eax,DWORD PTR [ebp+0x8]
  440997:	mov    eax,DWORD PTR [eax-0x4]
  44099a:	mov    eax,DWORD PTR [eax+0x4]
  44099d:	call   0x43eae8
  4409a2:	xor    eax,eax
  4409a4:	pop    edx
  4409a5:	pop    ecx
  4409a6:	pop    ecx
  4409a7:	mov    DWORD PTR fs:[eax],edx
  4409aa:	push   0x4409d6
  4409af:	lea    edx,[ebp-0x4]
  4409b2:	mov    eax,ds:0x41be90
  4409b7:	call   0x41b14c
  4409bc:	mov    eax,DWORD PTR [ebp+0x8]
  4409bf:	mov    eax,DWORD PTR [eax-0x4]
  4409c2:	mov    eax,DWORD PTR [eax+0x10]
  4409c5:	mov    edx,DWORD PTR [ebp-0x8]
  4409c8:	mov    DWORD PTR [eax+0x90],edx
  4409ce:	ret    
  4409cf:	jmp    0x40481c
  4409d4:	jmp    0x4409af
  4409d6:	pop    ecx
  4409d7:	pop    ecx
  4409d8:	pop    ebp
  4409d9:	ret    
  4409da:	mov    eax,eax
  4409dc:	push   ebp
  4409dd:	mov    ebp,esp
  4409df:	push   ecx
  4409e0:	push   ebx
  4409e1:	mov    BYTE PTR [ebp-0x1],0x1
  4409e5:	mov    eax,DWORD PTR [ebp+0x8]
  4409e8:	mov    eax,DWORD PTR [eax-0x4]
  4409eb:	mov    eax,DWORD PTR [eax+0x4]
  4409ee:	cmp    WORD PTR [eax+0x132],0x0
  4409f6:	je     0x440a1e
  4409f8:	lea    edx,[ebp-0x1]
  4409fb:	push   edx
  4409fc:	mov    edx,DWORD PTR [ebp+0x8]
  4409ff:	mov    ebx,eax
  440a01:	mov    edx,DWORD PTR [ebp+0x8]
  440a04:	mov    edx,DWORD PTR [edx-0x4]
  440a07:	mov    edx,DWORD PTR [edx+0x10]
  440a0a:	mov    ecx,DWORD PTR [edx+0x8]
  440a0d:	mov    edx,DWORD PTR [ebp+0x8]
  440a10:	mov    edx,eax
  440a12:	mov    eax,DWORD PTR [ebx+0x134]
  440a18:	call   DWORD PTR [ebx+0x130]
  440a1e:	movzx  eax,BYTE PTR [ebp-0x1]
  440a22:	pop    ebx
  440a23:	pop    ecx
  440a24:	pop    ebp
  440a25:	ret    
  440a26:	mov    eax,eax
  440a28:	push   ebp
  440a29:	mov    ebp,esp
  440a2b:	add    esp,0xffffffe4
  440a2e:	push   ebx
  440a2f:	push   esi
  440a30:	push   edi
  440a31:	xor    ebx,ebx
  440a33:	mov    DWORD PTR [ebp-0x8],ebx
  440a36:	mov    DWORD PTR [ebp-0xc],ebx
  440a39:	mov    ebx,ecx
  440a3b:	add    ebx,ebx
  440a3d:	inc    ebx
  440a3e:	test   ebx,ebx
  440a40:	js     0x440a4c
  440a42:	shr    ebx,0x2
  440a45:	mov    esi,DWORD PTR [edx+ebx*4]
  440a48:	dec    ebx
  440a49:	push   esi
  440a4a:	jns    0x440a45
  440a4c:	mov    edx,esp
  440a4e:	mov    DWORD PTR [ebp-0x14],ecx
  440a51:	mov    DWORD PTR [ebp-0x10],edx
  440a54:	mov    DWORD PTR [ebp-0x4],eax
  440a57:	xor    eax,eax
  440a59:	push   ebp
  440a5a:	push   0x440e26
  440a5f:	push   DWORD PTR fs:[eax]
  440a62:	mov    DWORD PTR fs:[eax],esp
  440a65:	push   ebp
  440a66:	call   0x4409dc
  440a6b:	pop    ecx
  440a6c:	test   al,al
  440a6e:	jne    0x440a86
  440a70:	mov    eax,DWORD PTR [ebp-0x4]
  440a73:	mov    eax,DWORD PTR [eax+0x10]
  440a76:	mov    BYTE PTR [eax+0x8c],0x0
  440a7d:	mov    BYTE PTR [ebp-0x15],0x1
  440a81:	jmp    0x440e0b
  440a86:	xor    ebx,ebx
  440a88:	mov    eax,DWORD PTR [ebp-0x4]
  440a8b:	mov    eax,DWORD PTR [eax+0x10]
  440a8e:	call   0x440378
  440a93:	mov    ecx,0x64
  440a98:	cdq    
  440a99:	idiv   ecx
  440a9b:	mov    esi,eax
  440a9d:	cmp    esi,0x3
  440aa0:	jne    0x440ab4
  440aa2:	mov    eax,DWORD PTR [ebp-0x4]
  440aa5:	mov    eax,DWORD PTR [eax+0x10]
  440aa8:	call   0x440378
  440aad:	cmp    eax,0x130
  440ab2:	jne    0x440ac4
  440ab4:	mov    eax,DWORD PTR [ebp-0x4]
  440ab7:	mov    eax,DWORD PTR [eax+0x10]
  440aba:	cmp    DWORD PTR [eax+0x6c],0x0
  440abe:	je     0x440cbf
  440ac4:	mov    eax,DWORD PTR [ebp-0x4]
  440ac7:	mov    eax,DWORD PTR [eax+0x4]
  440aca:	add    DWORD PTR [eax+0x118],0x1
  440ad1:	jno    0x440ad8
  440ad3:	call   0x403f70
  440ad8:	lea    eax,[ebp-0x8]
  440adb:	mov    edx,DWORD PTR [ebp-0x4]
  440ade:	mov    edx,DWORD PTR [edx+0x10]
  440ae1:	mov    edx,DWORD PTR [edx+0x6c]
  440ae4:	call   0x405020
  440ae9:	mov    eax,DWORD PTR [ebp-0x4]
  440aec:	mov    eax,DWORD PTR [eax+0x4]
  440aef:	cmp    BYTE PTR [eax+0x120],0x0
  440af6:	je     0x440bcc
  440afc:	mov    edx,DWORD PTR [eax+0x118]
  440b02:	cmp    edx,DWORD PTR [eax+0x11c]
  440b08:	jge    0x440bcc
  440b0e:	lea    eax,[ebp-0xc]
  440b11:	mov    edx,DWORD PTR [ebp-0x4]
  440b14:	mov    edx,DWORD PTR [edx+0xc]
  440b17:	mov    edx,DWORD PTR [edx+0xb0]
  440b1d:	call   0x405020
  440b22:	mov    eax,DWORD PTR [ebp-0x4]
  440b25:	mov    ebx,DWORD PTR [eax+0x4]
  440b28:	mov    eax,DWORD PTR [ebx+0x118]
  440b2e:	push   eax
  440b2f:	lea    ecx,[ebp-0xc]
  440b32:	lea    edx,[ebp-0x8]
  440b35:	mov    eax,ebx
  440b37:	mov    ebx,DWORD PTR [eax]
  440b39:	call   DWORD PTR [ebx+0xa8]
  440b3f:	test   al,al
  440b41:	je     0x440bb6
  440b43:	mov    BYTE PTR [ebp-0x15],0x0
  440b47:	mov    eax,DWORD PTR [ebp-0x4]
  440b4a:	mov    eax,DWORD PTR [eax+0xc]
  440b4d:	add    eax,0xac
  440b52:	mov    edx,DWORD PTR [ebp-0x8]
  440b55:	call   0x404fdc
  440b5a:	mov    eax,DWORD PTR [ebp-0x4]
  440b5d:	mov    eax,DWORD PTR [eax+0x10]
  440b60:	call   0x440378
  440b65:	cmp    eax,0x12e
  440b6a:	je     0x440b7e
  440b6c:	mov    eax,DWORD PTR [ebp-0x4]
  440b6f:	mov    eax,DWORD PTR [eax+0x10]
  440b72:	call   0x440378
  440b77:	cmp    eax,0x12f
  440b7c:	jne    0x440ba1
  440b7e:	mov    eax,DWORD PTR [ebp-0x4]
  440b81:	mov    ebx,DWORD PTR [eax+0xc]
  440b84:	xor    eax,eax
  440b86:	mov    DWORD PTR [ebx+0xb4],eax
  440b8c:	lea    eax,[ebx+0xb0]
  440b92:	mov    edx,0x440e48
  440b97:	call   0x404fdc
  440b9c:	jmp    0x440c2c
  440ba1:	mov    eax,DWORD PTR [ebp-0x4]
  440ba4:	mov    eax,DWORD PTR [eax+0xc]
  440ba7:	add    eax,0xb0
  440bac:	mov    edx,DWORD PTR [ebp-0xc]
  440baf:	call   0x404fdc
  440bb4:	jmp    0x440c2c
  440bb6:	push   ebp
  440bb7:	mov    eax,DWORD PTR [ebp-0x10]
  440bba:	mov    edx,DWORD PTR [ebp-0x14]
  440bbd:	call   0x4407fc
  440bc2:	pop    ecx
  440bc3:	mov    BYTE PTR [ebp-0x15],0x1
  440bc7:	jmp    0x440e0b
  440bcc:	lea    eax,[ebp-0xc]
  440bcf:	mov    edx,DWORD PTR [ebp-0x4]
  440bd2:	mov    edx,DWORD PTR [edx+0xc]
  440bd5:	mov    edx,DWORD PTR [edx+0xb0]
  440bdb:	call   0x405020
  440be0:	mov    BYTE PTR [ebp-0x15],0x1
  440be4:	mov    eax,DWORD PTR [ebp-0x4]
  440be7:	mov    ebx,DWORD PTR [eax+0x4]
  440bea:	mov    eax,DWORD PTR [ebx+0x118]
  440bf0:	push   eax
  440bf1:	lea    ecx,[ebp-0xc]
  440bf4:	lea    edx,[ebp-0x8]
  440bf7:	mov    eax,ebx
  440bf9:	mov    ebx,DWORD PTR [eax]
  440bfb:	call   DWORD PTR [ebx+0xa8]
  440c01:	test   al,al
  440c03:	jne    0x440c1b
  440c05:	push   ebp
  440c06:	mov    eax,DWORD PTR [ebp-0x10]
  440c09:	mov    edx,DWORD PTR [ebp-0x14]
  440c0c:	call   0x4407fc
  440c11:	pop    ecx
  440c12:	mov    BYTE PTR [ebp-0x15],0x1
  440c16:	jmp    0x440e0b
  440c1b:	mov    eax,DWORD PTR [ebp-0x4]
  440c1e:	mov    eax,DWORD PTR [eax+0x10]
  440c21:	add    eax,0x6c
  440c24:	mov    edx,DWORD PTR [ebp-0x8]
  440c27:	call   0x404fdc
  440c2c:	mov    eax,DWORD PTR [ebp-0x4]
  440c2f:	mov    eax,DWORD PTR [eax+0x4]
  440c32:	mov    edx,DWORD PTR [eax]
  440c34:	call   DWORD PTR [edx+0x5c]
  440c37:	test   al,al
  440c39:	je     0x440e0b
  440c3f:	mov    eax,DWORD PTR [ebp-0x4]
  440c42:	mov    eax,DWORD PTR [eax+0x4]
  440c45:	mov    eax,DWORD PTR [eax+0x8c]
  440c4b:	mov    edx,DWORD PTR [eax+0xb8]
  440c51:	mov    DWORD PTR [ebp-0x1c],edx
  440c54:	xor    edx,edx
  440c56:	push   ebp
  440c57:	push   0x440cb8
  440c5c:	push   DWORD PTR fs:[edx]
  440c5f:	mov    DWORD PTR fs:[edx],esp
  440c62:	mov    DWORD PTR [eax+0xb8],0xfa0
  440c6c:	xor    eax,eax
  440c6e:	push   ebp
  440c6f:	push   0x440c8b
  440c74:	push   DWORD PTR fs:[eax]
  440c77:	mov    DWORD PTR fs:[eax],esp
  440c7a:	push   ebp
  440c7b:	call   0x44094c
  440c80:	pop    ecx
  440c81:	xor    eax,eax
  440c83:	pop    edx
  440c84:	pop    ecx
  440c85:	pop    ecx
  440c86:	mov    DWORD PTR fs:[eax],edx
  440c89:	jmp    0x440c95
  440c8b:	jmp    0x404568
  440c90:	call   0x404978
  440c95:	xor    eax,eax
  440c97:	pop    edx
  440c98:	pop    ecx
  440c99:	pop    ecx
  440c9a:	mov    DWORD PTR fs:[eax],edx
  440c9d:	push   0x440e0b
  440ca2:	mov    eax,DWORD PTR [ebp-0x4]
  440ca5:	mov    eax,DWORD PTR [eax+0x4]
  440ca8:	mov    eax,DWORD PTR [eax+0x8c]
  440cae:	mov    edx,DWORD PTR [ebp-0x1c]
  440cb1:	mov    DWORD PTR [eax+0xb8],edx
  440cb7:	ret    
  440cb8:	jmp    0x40481c
  440cbd:	jmp    0x440ca2
  440cbf:	cmp    esi,0x2
  440cc2:	je     0x440dcd
  440cc8:	mov    eax,DWORD PTR [ebp-0x4]
  440ccb:	mov    eax,DWORD PTR [eax+0x10]
  440cce:	call   0x440378
  440cd3:	sub    eax,0x191
  440cd8:	je     0x440ce4
  440cda:	sub    eax,0x6
  440cdd:	je     0x440d4f
  440cdf:	jmp    0x440dba
  440ce4:	mov    eax,DWORD PTR [ebp-0x4]
  440ce7:	mov    ebx,DWORD PTR [eax+0x4]
  440cea:	mov    eax,DWORD PTR [ebx+0xf0]
  440cf0:	cmp    eax,DWORD PTR [ebx+0x104]
  440cf6:	jge    0x440d12
  440cf8:	mov    eax,DWORD PTR [ebp-0x4]
  440cfb:	mov    ecx,DWORD PTR [eax+0x10]
  440cfe:	mov    eax,DWORD PTR [ebp-0x4]
  440d01:	mov    edx,DWORD PTR [eax+0xc]
  440d04:	mov    eax,ebx
  440d06:	mov    ebx,DWORD PTR [eax]
  440d08:	call   DWORD PTR [ebx+0xa0]
  440d0e:	test   al,al
  440d10:	jne    0x440d3d
  440d12:	mov    eax,DWORD PTR [ebp-0x4]
  440d15:	mov    eax,DWORD PTR [eax+0xc]
  440d18:	mov    eax,DWORD PTR [eax+0xa0]
  440d1e:	test   eax,eax
  440d20:	je     0x440d27
  440d22:	mov    edx,DWORD PTR [eax]
  440d24:	call   DWORD PTR [edx+0x20]
  440d27:	push   ebp
  440d28:	mov    eax,DWORD PTR [ebp-0x10]
  440d2b:	mov    edx,DWORD PTR [ebp-0x14]
  440d2e:	call   0x4407fc
  440d33:	pop    ecx
  440d34:	mov    BYTE PTR [ebp-0x15],0x1
  440d38:	jmp    0x440e0b
  440d3d:	mov    eax,DWORD PTR [ebp-0x4]
  440d40:	mov    eax,DWORD PTR [eax+0x4]
  440d43:	test   BYTE PTR [eax+0x121],0x1
  440d4a:	setne  bl
  440d4d:	jmp    0x440dcd
  440d4f:	mov    eax,DWORD PTR [ebp-0x4]
  440d52:	mov    ebx,DWORD PTR [eax+0x4]
  440d55:	mov    eax,DWORD PTR [ebx+0xf4]
  440d5b:	cmp    eax,DWORD PTR [ebx+0x104]
  440d61:	jge    0x440d7d
  440d63:	mov    eax,DWORD PTR [ebp-0x4]
  440d66:	mov    ecx,DWORD PTR [eax+0x10]
  440d69:	mov    eax,DWORD PTR [ebp-0x4]
  440d6c:	mov    edx,DWORD PTR [eax+0xc]
  440d6f:	mov    eax,ebx
  440d71:	mov    ebx,DWORD PTR [eax]
  440d73:	call   DWORD PTR [ebx+0xa4]
  440d79:	test   al,al
  440d7b:	jne    0x440da8
  440d7d:	mov    eax,DWORD PTR [ebp-0x4]
  440d80:	mov    eax,DWORD PTR [eax+0x4]
  440d83:	mov    eax,DWORD PTR [eax+0x12c]
  440d89:	mov    eax,DWORD PTR [eax+0x4]
  440d8c:	test   eax,eax
  440d8e:	je     0x440d95
  440d90:	mov    edx,DWORD PTR [eax]
  440d92:	call   DWORD PTR [edx+0x20]
  440d95:	push   ebp
  440d96:	mov    eax,DWORD PTR [ebp-0x10]
  440d99:	mov    edx,DWORD PTR [ebp-0x14]
  440d9c:	call   0x4407fc
  440da1:	pop    ecx
  440da2:	mov    BYTE PTR [ebp-0x15],0x1
  440da6:	jmp    0x440e0b
  440da8:	mov    eax,DWORD PTR [ebp-0x4]
  440dab:	mov    eax,DWORD PTR [eax+0x4]
  440dae:	test   BYTE PTR [eax+0x121],0x1
  440db5:	setne  bl
  440db8:	jmp    0x440dcd
  440dba:	push   ebp
  440dbb:	mov    eax,DWORD PTR [ebp-0x10]
  440dbe:	mov    edx,DWORD PTR [ebp-0x14]
  440dc1:	call   0x4407fc
  440dc6:	pop    ecx
  440dc7:	mov    BYTE PTR [ebp-0x15],0x1
  440dcb:	jmp    0x440e0b
  440dcd:	test   bl,bl
  440dcf:	je     0x440dde
  440dd1:	push   ebp
  440dd2:	call   0x44094c
  440dd7:	pop    ecx
  440dd8:	mov    BYTE PTR [ebp-0x15],0x4
  440ddc:	jmp    0x440e0b
  440dde:	mov    eax,DWORD PTR [ebp-0x4]
  440de1:	mov    eax,DWORD PTR [eax+0x10]
  440de4:	call   0x440378
  440de9:	cmp    eax,0xcc
  440dee:	je     0x440e07
  440df0:	mov    eax,DWORD PTR [ebp-0x4]
  440df3:	mov    edx,DWORD PTR [eax+0x10]
  440df6:	mov    eax,DWORD PTR [ebp-0x4]
  440df9:	mov    eax,DWORD PTR [eax+0x4]
  440dfc:	call   0x43eae8
  440e01:	mov    BYTE PTR [ebp-0x15],0x1
  440e05:	jmp    0x440e0b
  440e07:	mov    BYTE PTR [ebp-0x15],0x1
  440e0b:	xor    eax,eax
  440e0d:	pop    edx
  440e0e:	pop    ecx
  440e0f:	pop    ecx
  440e10:	mov    DWORD PTR fs:[eax],edx
  440e13:	push   0x440e2d
  440e18:	lea    eax,[ebp-0xc]
  440e1b:	mov    edx,0x2
  440e20:	call   0x404fac
  440e25:	ret    
  440e26:	jmp    0x40481c
  440e2b:	jmp    0x440e18
  440e2d:	movzx  eax,BYTE PTR [ebp-0x15]
  440e31:	mov    edi,DWORD PTR [ebp-0x28]
  440e34:	mov    esi,DWORD PTR [ebp-0x24]
  440e37:	mov    ebx,DWORD PTR [ebp-0x20]
  440e3a:	mov    esp,ebp
  440e3c:	pop    ebp
  440e3d:	ret    
  440e3e:	add    BYTE PTR [eax],al
  440e40:	(bad)  
  440e41:	(bad)  
  440e42:	(bad)  
  440e43:	inc    DWORD PTR [ebx]
  440e45:	add    BYTE PTR [eax],al
  440e47:	add    BYTE PTR [edi+0x45],al
  440e4a:	push   esp
  440e4b:	add    BYTE PTR [ebx+0x56],dl
  440e4e:	mov    ebx,eax
  440e50:	mov    eax,ebx
  440e52:	call   0x42a79c
  440e57:	xor    ecx,ecx
  440e59:	mov    dl,0x1
  440e5b:	mov    eax,ds:0x436390
  440e60:	call   0x4364a4
  440e65:	mov    DWORD PTR [ebx+0x124],eax
  440e6b:	xor    eax,eax
  440e6d:	mov    DWORD PTR [ebx+0xf0],eax
  440e73:	xor    eax,eax
  440e75:	mov    DWORD PTR [ebx+0xf4],eax
  440e7b:	mov    dl,0x1
  440e7d:	mov    eax,ebx
  440e7f:	call   0x43f8b0
  440e84:	mov    BYTE PTR [ebx+0x100],0x0
  440e8b:	movzx  eax,BYTE PTR ds:0x440ef8
  440e92:	mov    BYTE PTR [ebx+0x121],al
  440e98:	mov    DWORD PTR [ebx+0x11c],0xf
  440ea2:	mov    BYTE PTR [ebx+0x120],0x0
  440ea9:	mov    BYTE PTR [ebx+0x114],0x1
  440eb0:	mov    ecx,ebx
  440eb2:	mov    dl,0x1
  440eb4:	mov    eax,ds:0x43df64
  440eb9:	call   0x440480
  440ebe:	mov    DWORD PTR [ebx+0x128],eax
  440ec4:	mov    dl,0x1
  440ec6:	mov    eax,ds:0x43bda0
  440ecb:	call   0x43cd0c
  440ed0:	mov    esi,eax
  440ed2:	mov    DWORD PTR [ebx+0x12c],esi
  440ed8:	mov    eax,esi
  440eda:	call   0x43cde4
  440edf:	mov    DWORD PTR [ebx+0x104],0x3
  440ee9:	mov    DWORD PTR [ebx+0x108],0xff
  440ef3:	pop    esi
  440ef4:	pop    ebx
  440ef5:	ret    
  440ef6:	add    BYTE PTR [eax],al
  440ef8:	add    al,0x0
  440efa:	add    BYTE PTR [eax],al
  440efc:	push   ebp
  440efd:	mov    ebp,esp
  440eff:	add    esp,0xfffffff8
  440f02:	push   ebx
  440f03:	push   esi
  440f04:	mov    ebx,DWORD PTR [ebp+0xc]
  440f07:	add    ebx,ebx
  440f09:	inc    ebx
  440f0a:	test   ebx,ebx
  440f0c:	js     0x440f18
  440f0e:	shr    ebx,0x2
  440f11:	mov    esi,DWORD PTR [ecx+ebx*4]
  440f14:	dec    ebx
  440f15:	push   esi
  440f16:	jns    0x440f11
  440f18:	mov    ecx,esp
  440f1a:	mov    esi,ecx
  440f1c:	mov    DWORD PTR [ebp-0x4],edx
  440f1f:	mov    ebx,eax
  440f21:	mov    eax,DWORD PTR [ebp-0x4]
  440f24:	call   0x405408
  440f29:	xor    eax,eax
  440f2b:	push   ebp
  440f2c:	push   0x440fb8
  440f31:	push   DWORD PTR fs:[eax]
  440f34:	mov    DWORD PTR fs:[eax],esp
  440f37:	mov    dl,0x1
  440f39:	mov    eax,ds:0x412ff4
  440f3e:	call   0x404070
  440f43:	mov    DWORD PTR [ebp-0x8],eax
  440f46:	xor    eax,eax
  440f48:	push   ebp
  440f49:	push   0x440f9b
  440f4e:	push   DWORD PTR fs:[eax]
  440f51:	mov    DWORD PTR fs:[eax],esp
  440f54:	push   esi
  440f55:	mov    eax,DWORD PTR [ebp+0xc]
  440f58:	push   eax
  440f59:	mov    ecx,DWORD PTR [ebp-0x8]
  440f5c:	mov    edx,DWORD PTR [ebp-0x4]
  440f5f:	mov    eax,ebx
  440f61:	call   0x440fcc
  440f66:	push   0x0
  440f68:	push   0x0
  440f6a:	mov    eax,DWORD PTR [ebp-0x8]
  440f6d:	call   0x416404
  440f72:	mov    ecx,DWORD PTR [ebp+0x8]
  440f75:	or     edx,0xffffffff
  440f78:	mov    eax,DWORD PTR [ebp-0x8]
  440f7b:	call   0x41d880
  440f80:	xor    eax,eax
  440f82:	pop    edx
  440f83:	pop    ecx
  440f84:	pop    ecx
  440f85:	mov    DWORD PTR fs:[eax],edx
  440f88:	push   0x440fa2
  440f8d:	lea    edx,[ebp-0x8]
  440f90:	mov    eax,ds:0x41be90
  440f95:	call   0x41b14c
  440f9a:	ret    
  440f9b:	jmp    0x40481c
  440fa0:	jmp    0x440f8d
  440fa2:	xor    eax,eax
  440fa4:	pop    edx
  440fa5:	pop    ecx
  440fa6:	pop    ecx
  440fa7:	mov    DWORD PTR fs:[eax],edx
  440faa:	push   0x440fbf
  440faf:	lea    eax,[ebp-0x4]
  440fb2:	call   0x404f88
  440fb7:	ret    
  440fb8:	jmp    0x40481c
  440fbd:	jmp    0x440faf
  440fbf:	mov    esi,DWORD PTR [ebp-0x10]
  440fc2:	mov    ebx,DWORD PTR [ebp-0xc]
  440fc5:	mov    esp,ebp
  440fc7:	pop    ebp
  440fc8:	ret    0x8
  440fcb:	nop
  440fcc:	push   ebp
  440fcd:	mov    ebp,esp
  440fcf:	push   ecx
  440fd0:	push   ebx
  440fd1:	push   esi
  440fd2:	push   edi
  440fd3:	mov    ebx,DWORD PTR [ebp+0xc]
  440fd6:	mov    esi,DWORD PTR [ebp+0x8]
  440fd9:	add    esi,esi
  440fdb:	inc    esi
  440fdc:	test   esi,esi
  440fde:	js     0x440fea
  440fe0:	shr    esi,0x2
  440fe3:	mov    edi,DWORD PTR [ebx+esi*4]
  440fe6:	dec    esi
  440fe7:	push   edi
  440fe8:	jns    0x440fe3
  440fea:	mov    DWORD PTR [ebp+0xc],esp
  440fed:	mov    esi,ecx
  440fef:	mov    DWORD PTR [ebp-0x4],edx
  440ff2:	mov    ebx,eax
  440ff4:	mov    eax,DWORD PTR [ebp-0x4]
  440ff7:	call   0x405408
  440ffc:	xor    eax,eax
  440ffe:	push   ebp
  440fff:	push   0x441055
  441004:	push   DWORD PTR fs:[eax]
  441007:	mov    DWORD PTR fs:[eax],esp
  44100a:	test   esi,esi
  44100c:	jne    0x441022
  44100e:	mov    ecx,0x7e7
  441013:	mov    edx,0x441074
  441018:	mov    eax,0x4410ac
  44101d:	call   0x404eb4
  441022:	push   0x0
  441024:	push   esi
  441025:	mov    eax,DWORD PTR [ebp+0xc]
  441028:	push   eax
  441029:	mov    eax,DWORD PTR [ebp+0x8]
  44102c:	push   eax
  44102d:	mov    ecx,DWORD PTR [ebp-0x4]
  441030:	mov    edx,0x4410c8
  441035:	mov    eax,ebx
  441037:	mov    ebx,DWORD PTR [eax]
  441039:	call   DWORD PTR [ebx+0x9c]
  44103f:	xor    eax,eax
  441041:	pop    edx
  441042:	pop    ecx
  441043:	pop    ecx
  441044:	mov    DWORD PTR fs:[eax],edx
  441047:	push   0x44105c
  44104c:	lea    eax,[ebp-0x4]
  44104f:	call   0x404f88
  441054:	ret    
  441055:	jmp    0x40481c
  44105a:	jmp    0x44104c
  44105c:	mov    edi,DWORD PTR [ebp-0x10]
  44105f:	mov    esi,DWORD PTR [ebp-0xc]
  441062:	mov    ebx,DWORD PTR [ebp-0x8]
  441065:	mov    esp,ebp
  441067:	pop    ebp
  441068:	ret    0x8
  44106b:	add    bh,bh
  44106d:	(bad)  
  44106e:	(bad)  
  44106f:	jmp    FWORD PTR [edi]
  441071:	add    BYTE PTR [eax],al
  441073:	add    BYTE PTR [ebx+0x3a],al
  441076:	pop    esp
  441077:	bound  esi,QWORD PTR [ebp+0x69]
  44107a:	ins    BYTE PTR es:[edi],dx
  44107b:	fs jae 0x4410da
  44107e:	push   esp
  44107f:	jo     0x4410c2
  441081:	fs outs dx,DWORD PTR fs:[esi]
  441084:	outs   dx,BYTE PTR ds:[esi]
  441085:	jae    0x4410e3
  441087:	dec    ecx
  441088:	outs   dx,BYTE PTR ds:[esi]
  441089:	fs jns 0x4410da
  44108c:	gs je  0x4410eb
  44108f:	push   eax
  441090:	jb     0x441101
  441092:	je     0x441103
  441094:	arpl   WORD PTR [edi+0x6c],bp
  441097:	jae    0x4410f5
  441099:	dec    ecx
  44109a:	fs dec eax
  44109c:	push   esp
  44109d:	push   esp
  44109e:	push   eax
  44109f:	cs jo  0x441103
  4410a2:	jae    0x4410a4
  4410a4:	(bad)  
  4410a5:	(bad)  
  4410a6:	(bad)  
  4410a7:	call   DWORD PTR [ecx]
  4410a9:	add    BYTE PTR [eax],al
  4410ab:	add    BYTE PTR [ecx+0x73],al
  4410ae:	jae    0x441115
  4410b0:	jb     0x441126
  4410b2:	imul   ebp,DWORD PTR [edi+0x6e],0x69616620
  4410b9:	ins    BYTE PTR es:[edi],dx
  4410ba:	jne    0x44112e
  4410bc:	add    BYTE PTR gs:[eax],al
  4410bf:	add    bh,bh
  4410c1:	(bad)  
  4410c2:	(bad)  
  4410c3:	inc    DWORD PTR [ebx]
  4410c5:	add    BYTE PTR [eax],al
  4410c7:	add    BYTE PTR [edi+0x45],al
  4410ca:	push   esp
  4410cb:	add    BYTE PTR [ebp-0x75],dl
  4410ce:	in     al,dx
  4410cf:	add    esp,0xffffffe8
  4410d2:	push   ebx
  4410d3:	push   esi
  4410d4:	push   edi
  4410d5:	xor    ebx,ebx
  4410d7:	mov    DWORD PTR [ebp-0x18],ebx
  4410da:	mov    DWORD PTR [ebp-0x14],ebx
  4410dd:	mov    DWORD PTR [ebp-0x10],ebx
  4410e0:	mov    ebx,DWORD PTR [ebp+0xc]
  4410e3:	mov    esi,DWORD PTR [ebp+0x8]
  4410e6:	add    esi,esi
  4410e8:	inc    esi
  4410e9:	test   esi,esi
  4410eb:	js     0x4410f7
  4410ed:	shr    esi,0x2
  4410f0:	mov    edi,DWORD PTR [ebx+esi*4]
  4410f3:	dec    esi
  4410f4:	push   edi
  4410f5:	jns    0x4410f0
  4410f7:	mov    DWORD PTR [ebp+0xc],esp
  4410fa:	mov    DWORD PTR [ebp-0x4],ecx
  4410fd:	mov    esi,edx
  4410ff:	mov    DWORD PTR [ebp-0x8],eax
  441102:	mov    edi,DWORD PTR [ebp+0xc]
  441105:	mov    ebx,DWORD PTR [ebp+0x10]
  441108:	mov    eax,DWORD PTR [ebp-0x4]
  44110b:	call   0x405408
  441110:	xor    eax,eax
  441112:	push   ebp
  441113:	push   0x4413da
  441118:	push   DWORD PTR fs:[eax]
  44111b:	mov    DWORD PTR fs:[eax],esp
  44111e:	mov    eax,DWORD PTR [ebp-0x8]
  441121:	xor    edx,edx
  441123:	mov    DWORD PTR [eax+0x118],edx
  441129:	mov    eax,DWORD PTR [ebp-0x8]
  44112c:	xor    edx,edx
  44112e:	mov    DWORD PTR [eax+0xf0],edx
  441134:	mov    eax,DWORD PTR [ebp-0x8]
  441137:	xor    edx,edx
  441139:	mov    DWORD PTR [eax+0xf4],edx
  44113f:	test   ebx,ebx
  441141:	je     0x44115d
  441143:	mov    eax,ebx
  441145:	call   0x4163e4
  44114a:	push   eax
  44114b:	sar    eax,0x1f
  44114e:	cmp    eax,edx
  441150:	pop    eax
  441151:	je     0x441158
  441153:	call   0x403f68
  441158:	mov    DWORD PTR [ebp-0xc],eax
  44115b:	jmp    0x441162
  44115d:	xor    eax,eax
  44115f:	mov    DWORD PTR [ebp-0xc],eax
  441162:	mov    eax,DWORD PTR [ebp-0x8]
  441165:	call   0x440094
  44116a:	add    eax,0xac
  44116f:	mov    edx,DWORD PTR [ebp-0x4]
  441172:	call   0x404fdc
  441177:	mov    eax,DWORD PTR [ebp-0x8]
  44117a:	call   0x440094
  44117f:	add    eax,0xb0
  441184:	mov    edx,esi
  441186:	call   0x404fdc
  44118b:	mov    eax,DWORD PTR [ebp-0x8]
  44118e:	call   0x440094
  441193:	mov    edx,DWORD PTR [ebp+0x14]
  441196:	mov    DWORD PTR [eax+0xb4],edx
  44119c:	mov    eax,DWORD PTR [ebp-0x8]
  44119f:	call   0x440088
  4411a4:	mov    DWORD PTR [eax+0x90],ebx
  4411aa:	xor    eax,eax
  4411ac:	push   ebp
  4411ad:	push   0x4413b0
  4411b2:	push   DWORD PTR fs:[eax]
  4411b5:	mov    DWORD PTR fs:[eax],esp
  4411b8:	mov    eax,DWORD PTR [ebp-0x8]
  4411bb:	call   0x440094
  4411c0:	mov    edx,eax
  4411c2:	mov    eax,DWORD PTR [ebp-0x8]
  4411c5:	call   0x43ee18
  4411ca:	mov    eax,DWORD PTR [ebp-0x8]
  4411cd:	mov    esi,DWORD PTR [eax+0x8c]
  4411d3:	mov    eax,esi
  4411d5:	mov    edx,DWORD PTR ds:0x46179c
  4411db:	call   0x40422c
  4411e0:	test   al,al
  4411e2:	je     0x441202
  4411e4:	lea    edx,[ebp-0x10]
  4411e7:	mov    eax,DWORD PTR [ebp-0x8]
  4411ea:	mov    eax,DWORD PTR [eax+0x124]
  4411f0:	call   0x436a70
  4411f5:	mov    edx,DWORD PTR [ebp-0x10]
  4411f8:	mov    eax,esi
  4411fa:	mov    ecx,DWORD PTR [eax]
  4411fc:	call   DWORD PTR [ecx+0xe0]
  441202:	mov    eax,DWORD PTR [ebp-0x8]
  441205:	call   0x440088
  44120a:	push   eax
  44120b:	mov    eax,DWORD PTR [ebp-0x8]
  44120e:	call   0x440094
  441213:	mov    edx,eax
  441215:	mov    eax,DWORD PTR [ebp-0x8]
  441218:	pop    ecx
  441219:	call   0x43f394
  44121e:	mov    eax,DWORD PTR [ebp-0x8]
  441221:	call   0x440088
  441226:	add    eax,0x88
  44122b:	push   eax
  44122c:	lea    edx,[ebp-0x14]
  44122f:	mov    eax,DWORD PTR [ebp-0x8]
  441232:	mov    eax,DWORD PTR [eax+0x8c]
  441238:	call   0x428524
  44123d:	mov    edx,DWORD PTR [ebp-0x14]
  441240:	pop    eax
  441241:	call   0x404fdc
  441246:	mov    eax,DWORD PTR [ebp-0x8]
  441249:	mov    edx,DWORD PTR [eax+0x108]
  44124f:	mov    eax,DWORD PTR [ebp-0x8]
  441252:	mov    eax,DWORD PTR [eax+0x128]
  441258:	call   0x440700
  44125d:	mov    eax,DWORD PTR [ebp-0x8]
  441260:	call   0x440088
  441265:	push   eax
  441266:	mov    eax,DWORD PTR [ebp-0x8]
  441269:	call   0x440094
  44126e:	mov    edx,eax
  441270:	mov    eax,DWORD PTR [ebp-0x8]
  441273:	pop    ecx
  441274:	call   0x43f8b8
  441279:	mov    eax,DWORD PTR [ebp-0x8]
  44127c:	call   0x440088
  441281:	call   0x440378
  441286:	cmp    eax,0x64
  441289:	je     0x44121e
  44128b:	mov    edx,edi
  44128d:	mov    eax,DWORD PTR [ebp-0x8]
  441290:	mov    eax,DWORD PTR [eax+0x128]
  441296:	mov    ecx,DWORD PTR [ebp+0x8]
  441299:	call   0x440a28
  44129e:	and    eax,0x7f
  4412a1:	cmp    eax,0x4
  4412a4:	ja     0x4411b8
  4412aa:	jmp    DWORD PTR [eax*4+0x4412b1]
  4412b1:	sub    dl,BYTE PTR [ebx]
  4412b3:	inc    esp
  4412b4:	add    BYTE PTR [ecx+0x63004413],cl
  4412ba:	adc    eax,DWORD PTR [eax+eax*1-0x21]
  4412be:	adc    al,BYTE PTR [eax+eax*1-0x3b]
  4412c2:	adc    al,BYTE PTR [eax+eax*1-0x75]
  4412c6:	inc    ebp
  4412c7:	clc    
  4412c8:	call   0x440094
  4412cd:	add    eax,0xac
  4412d2:	mov    edx,DWORD PTR [ebp-0x4]
  4412d5:	call   0x404fdc
  4412da:	jmp    0x4411b8
  4412df:	mov    eax,DWORD PTR [ebp-0x8]
  4412e2:	call   0x440088
  4412e7:	mov    edx,eax
  4412e9:	mov    eax,DWORD PTR [ebp-0x8]
  4412ec:	call   0x43eae8
  4412f1:	test   ebx,ebx
  4412f3:	je     0x44130f
  4412f5:	mov    eax,DWORD PTR [ebp-0xc]
  4412f8:	cdq    
  4412f9:	push   edx
  4412fa:	push   eax
  4412fb:	mov    eax,ebx
  4412fd:	call   0x416404
  441302:	mov    eax,DWORD PTR [ebp-0xc]
  441305:	cdq    
  441306:	push   edx
  441307:	push   eax
  441308:	mov    eax,ebx
  44130a:	call   0x416468
  44130f:	mov    eax,DWORD PTR [ebp-0x8]
  441312:	xor    edx,edx
  441314:	mov    DWORD PTR [eax+0xf0],edx
  44131a:	mov    eax,DWORD PTR [ebp-0x8]
  44131d:	xor    edx,edx
  44131f:	mov    DWORD PTR [eax+0xf4],edx
  441325:	jmp    0x4411b8
  44132a:	test   ebx,ebx
  44132c:	je     0x441348
  44132e:	mov    eax,DWORD PTR [ebp-0xc]
  441331:	cdq    
  441332:	push   edx
  441333:	push   eax
  441334:	mov    eax,ebx
  441336:	call   0x416404
  44133b:	mov    eax,DWORD PTR [ebp-0xc]
  44133e:	cdq    
  44133f:	push   edx
  441340:	push   eax
  441341:	mov    eax,ebx
  441343:	call   0x416468
  441348:	mov    eax,DWORD PTR [ebp-0x8]
  44134b:	xor    edx,edx
  44134d:	mov    DWORD PTR [eax+0xf0],edx
  441353:	mov    eax,DWORD PTR [ebp-0x8]
  441356:	xor    edx,edx
  441358:	mov    DWORD PTR [eax+0xf4],edx
  44135e:	jmp    0x4411b8
  441363:	lea    edx,[ebp-0x18]
  441366:	mov    eax,ds:0x46de58
  44136b:	call   0x406f48
  441370:	mov    ecx,DWORD PTR [ebp-0x18]
  441373:	mov    dl,0x1
  441375:	mov    eax,ds:0x41b94c
  44137a:	call   0x41bdbc
  44137f:	call   0x4048fc
  441384:	jmp    0x4411b8
  441389:	xor    eax,eax
  44138b:	pop    edx
  44138c:	pop    ecx
  44138d:	pop    ecx
  44138e:	mov    DWORD PTR fs:[eax],edx
  441391:	push   0x4413b7
  441396:	mov    eax,DWORD PTR [ebp-0x8]
  441399:	call   0x440088
  44139e:	call   0x4401a0
  4413a3:	test   al,al
  4413a5:	jne    0x4413af
  4413a7:	mov    eax,DWORD PTR [ebp-0x8]
  4413aa:	call   0x430684
  4413af:	ret    
  4413b0:	jmp    0x40481c
  4413b5:	jmp    0x441396
  4413b7:	xor    eax,eax
  4413b9:	pop    edx
  4413ba:	pop    ecx
  4413bb:	pop    ecx
  4413bc:	mov    DWORD PTR fs:[eax],edx
  4413bf:	push   0x4413e1
  4413c4:	lea    eax,[ebp-0x18]
  4413c7:	mov    edx,0x3
  4413cc:	call   0x404fac
  4413d1:	lea    eax,[ebp-0x4]
  4413d4:	call   0x404f88
  4413d9:	ret    
  4413da:	jmp    0x40481c
  4413df:	jmp    0x4413c4
  4413e1:	mov    edi,DWORD PTR [ebp-0x24]
  4413e4:	mov    esi,DWORD PTR [ebp-0x20]
  4413e7:	mov    ebx,DWORD PTR [ebp-0x1c]
  4413ea:	mov    esp,ebp
  4413ec:	pop    ebp
  4413ed:	ret    0x10
  4413f0:	push   ebp
  4413f1:	mov    ebp,esp
  4413f3:	xor    eax,eax
  4413f5:	push   ebp
  4413f6:	push   0x44142c
  4413fb:	push   DWORD PTR fs:[eax]
  4413fe:	mov    DWORD PTR fs:[eax],esp
  441401:	inc    DWORD PTR ds:0x4738dc
  441407:	jne    0x44141e
  441409:	mov    eax,0x462894
  44140e:	mov    ecx,0x2
  441413:	mov    edx,DWORD PTR ds:0x401084
  441419:	call   0x405b50
  44141e:	xor    eax,eax
  441420:	pop    edx
  441421:	pop    ecx
  441422:	pop    ecx
  441423:	mov    DWORD PTR fs:[eax],edx
  441426:	push   0x441433
  44142b:	ret    
  44142c:	jmp    0x40481c
  441431:	jmp    0x44142b
  441433:	pop    ebp
  441434:	ret    
  441435:	lea    eax,[eax+0x0]
  441438:	jmp    DWORD PTR ds:0x4795bc
  44143e:	mov    eax,eax
  441440:	push   ebx
  441441:	push   esi
  441442:	push   edi
  441443:	push   ebp
  441444:	push   ecx
  441445:	mov    DWORD PTR [esp],ecx
  441448:	mov    esi,eax
  44144a:	mov    ebp,edx
  44144c:	xor    ebx,ebx
  44144e:	xor    edi,edi
  441450:	mov    eax,DWORD PTR [esp]
  441453:	mov    ecx,0x3
  441458:	cdq    
  441459:	idiv   ecx
  44145b:	test   eax,eax
  44145d:	jle    0x4414da
  44145f:	movzx  edx,BYTE PTR [esi+ebx*1]
  441463:	shr    edx,0x2
  441466:	movzx  edx,BYTE PTR [edx+0x46289c]
  44146d:	mov    BYTE PTR [ebp+edi*1+0x0],dl
  441471:	movzx  edx,BYTE PTR [esi+ebx*1]
  441475:	and    dl,0x3
  441478:	movzx  edx,dl
  44147b:	shl    edx,0x4
  44147e:	movzx  ecx,BYTE PTR [esi+ebx*1+0x1]
  441483:	shr    ecx,0x4
  441486:	add    edx,ecx
  441488:	movzx  edx,BYTE PTR [edx+0x46289c]
  44148f:	push   edx
  441490:	pop    edx
  441491:	mov    BYTE PTR [ebp+edi*1+0x1],dl
  441495:	movzx  edx,BYTE PTR [esi+ebx*1+0x1]
  44149a:	and    dl,0xf
  44149d:	movzx  edx,dl
  4414a0:	add    edx,edx
  4414a2:	add    edx,edx
  4414a4:	movzx  ecx,BYTE PTR [esi+ebx*1+0x2]
  4414a9:	shr    ecx,0x6
  4414ac:	add    edx,ecx
  4414ae:	movzx  edx,BYTE PTR [edx+0x46289c]
  4414b5:	push   edx
  4414b6:	pop    edx
  4414b7:	mov    BYTE PTR [ebp+edi*1+0x2],dl
  4414bb:	movzx  edx,BYTE PTR [esi+ebx*1+0x2]
  4414c0:	and    dl,0x3f
  4414c3:	movzx  edx,dl
  4414c6:	movzx  edx,BYTE PTR [edx+0x46289c]
  4414cd:	mov    BYTE PTR [ebp+edi*1+0x3],dl
  4414d1:	add    edi,0x4
  4414d4:	add    ebx,0x3
  4414d7:	dec    eax
  4414d8:	jne    0x44145f
  4414da:	mov    eax,DWORD PTR [esp]
  4414dd:	mov    ecx,0x3
  4414e2:	cdq    
  4414e3:	idiv   ecx
  4414e5:	dec    edx
  4414e6:	je     0x4414f0
  4414e8:	dec    edx
  4414e9:	je     0x441525
  4414eb:	jmp    0x441576
  4414f0:	movzx  eax,BYTE PTR [esi+ebx*1]
  4414f4:	shr    eax,0x2
  4414f7:	movzx  eax,BYTE PTR [eax+0x46289c]
  4414fe:	mov    BYTE PTR [ebp+edi*1+0x0],al
  441502:	movzx  eax,BYTE PTR [esi+ebx*1]
  441506:	and    al,0x3
  441508:	movzx  eax,al
  44150b:	shl    eax,0x4
  44150e:	movzx  eax,BYTE PTR [eax+0x46289c]
  441515:	mov    BYTE PTR [ebp+edi*1+0x1],al
  441519:	mov    BYTE PTR [ebp+edi*1+0x2],0x3d
  44151e:	mov    BYTE PTR [ebp+edi*1+0x3],0x3d
  441523:	jmp    0x441576
  441525:	movzx  eax,BYTE PTR [esi+ebx*1]
  441529:	shr    eax,0x2
  44152c:	movzx  eax,BYTE PTR [eax+0x46289c]
  441533:	mov    BYTE PTR [ebp+edi*1+0x0],al
  441537:	movzx  eax,BYTE PTR [esi+ebx*1]
  44153b:	and    al,0x3
  44153d:	movzx  eax,al
  441540:	shl    eax,0x4
  441543:	movzx  edx,BYTE PTR [esi+ebx*1+0x1]
  441548:	shr    edx,0x4
  44154b:	add    eax,edx
  44154d:	movzx  eax,BYTE PTR [eax+0x46289c]
  441554:	mov    BYTE PTR [ebp+edi*1+0x1],al
  441558:	movzx  eax,BYTE PTR [esi+ebx*1+0x1]
  44155d:	and    al,0xf
  44155f:	movzx  eax,al
  441562:	add    eax,eax
  441564:	add    eax,eax
  441566:	movzx  eax,BYTE PTR [eax+0x46289c]
  44156d:	mov    BYTE PTR [ebp+edi*1+0x2],al
  441571:	mov    BYTE PTR [ebp+edi*1+0x3],0x3d
  441576:	mov    eax,DWORD PTR [esp]
  441579:	add    eax,0x2
  44157c:	mov    ecx,0x3
  441581:	cdq    
  441582:	idiv   ecx
  441584:	add    eax,eax
  441586:	add    eax,eax
  441588:	pop    edx
  441589:	pop    ebp
  44158a:	pop    edi
  44158b:	pop    esi
  44158c:	pop    ebx
  44158d:	ret    
  44158e:	mov    eax,eax
  441590:	push   ebx
  441591:	push   esi
  441592:	push   edi
  441593:	push   ebp
  441594:	mov    ebx,edx
  441596:	mov    edi,eax
  441598:	mov    ebp,edi
  44159a:	mov    ecx,ebp
  44159c:	test   ecx,ecx
  44159e:	je     0x4415a5
  4415a0:	sub    ecx,0x4
  4415a3:	mov    ecx,DWORD PTR [ecx]
  4415a5:	lea    eax,[ecx+0x2]
  4415a8:	mov    ecx,0x3
  4415ad:	cdq    
  4415ae:	idiv   ecx
  4415b0:	mov    edx,eax
  4415b2:	add    edx,edx
  4415b4:	add    edx,edx
  4415b6:	mov    eax,ebx
  4415b8:	call   0x4056a8
  4415bd:	mov    eax,ebx
  4415bf:	call   0x405478
  4415c4:	mov    esi,eax
  4415c6:	mov    ebx,ebp
  4415c8:	test   ebx,ebx
  4415ca:	je     0x4415d1
  4415cc:	sub    ebx,0x4
  4415cf:	mov    ebx,DWORD PTR [ebx]
  4415d1:	mov    eax,edi
  4415d3:	call   0x405418
  4415d8:	mov    ecx,ebx
  4415da:	mov    edx,esi
  4415dc:	call   0x441440
  4415e1:	pop    ebp
  4415e2:	pop    edi
  4415e3:	pop    esi
  4415e4:	pop    ebx
  4415e5:	ret    
  4415e6:	mov    eax,eax
  4415e8:	push   esi
  4415e9:	push   edi
  4415ea:	push   ebp
  4415eb:	add    esp,0xfffffff0
  4415ee:	mov    DWORD PTR [esp],ecx
  4415f1:	mov    edi,eax
  4415f3:	mov    DWORD PTR [esp+0x8],edx
  4415f7:	xor    esi,esi
  4415f9:	xor    ebp,ebp
  4415fb:	xor    eax,eax
  4415fd:	mov    edx,DWORD PTR [esp]
  441600:	test   edx,edx
  441602:	jns    0x441607
  441604:	add    edx,0x3
  441607:	sar    edx,0x2
  44160a:	test   edx,edx
  44160c:	jle    0x441715
  441612:	mov    DWORD PTR [esp+0xc],edx
  441616:	mov    edx,0x4
  44161b:	lea    eax,[esp+0x4]
  44161f:	movzx  ecx,BYTE PTR [edi+esi*1]
  441623:	cmp    ecx,0x3d
  441626:	jg     0x44163c
  441628:	je     0x44167f
  44162a:	sub    ecx,0x2b
  44162d:	je     0x441675
  44162f:	sub    ecx,0x4
  441632:	je     0x44167a
  441634:	dec    ecx
  441635:	sub    ecx,0xa
  441638:	jb     0x441667
  44163a:	jmp    0x441682
  44163c:	add    ecx,0xffffffbf
  44163f:	sub    ecx,0x1a
  441642:	jb     0x44164e
  441644:	add    ecx,0xfffffffa
  441647:	sub    ecx,0x1a
  44164a:	jb     0x441659
  44164c:	jmp    0x441682
  44164e:	movzx  ecx,BYTE PTR [edi+esi*1]
  441652:	sub    cl,0x41
  441655:	mov    BYTE PTR [eax],cl
  441657:	jmp    0x441682
  441659:	movzx  ecx,BYTE PTR [edi+esi*1]
  44165d:	sub    cl,0x61
  441660:	add    cl,0x1a
  441663:	mov    BYTE PTR [eax],cl
  441665:	jmp    0x441682
  441667:	movzx  ecx,BYTE PTR [edi+esi*1]
  44166b:	sub    cl,0x30
  44166e:	add    cl,0x34
  441671:	mov    BYTE PTR [eax],cl
  441673:	jmp    0x441682
  441675:	mov    BYTE PTR [eax],0x3e
  441678:	jmp    0x441682
  44167a:	mov    BYTE PTR [eax],0x3f
  44167d:	jmp    0x441682
  44167f:	mov    BYTE PTR [eax],0xff
  441682:	inc    esi
  441683:	inc    eax
  441684:	dec    edx
  441685:	jne    0x44161f
  441687:	movzx  eax,BYTE PTR [esp+0x4]
  44168c:	add    eax,eax
  44168e:	add    eax,eax
  441690:	movzx  edx,BYTE PTR [esp+0x5]
  441695:	shr    edx,0x4
  441698:	or     al,dl
  44169a:	mov    edx,DWORD PTR [esp+0x8]
  44169e:	mov    BYTE PTR [edx+ebp*1],al
  4416a1:	lea    eax,[ebp+0x1]
  4416a4:	movzx  edx,BYTE PTR [esp+0x6]
  4416a9:	cmp    dl,0xff
  4416ac:	je     0x4416d3
  4416ae:	cmp    BYTE PTR [esp+0x7],0xff
  4416b3:	jne    0x4416d3
  4416b5:	movzx  eax,BYTE PTR [esp+0x5]
  4416ba:	shl    eax,0x4
  4416bd:	movzx  edx,dl
  4416c0:	shr    edx,0x2
  4416c3:	or     al,dl
  4416c5:	mov    edx,DWORD PTR [esp+0x8]
  4416c9:	mov    BYTE PTR [edx+ebp*1+0x1],al
  4416cd:	lea    eax,[ebp+0x2]
  4416d0:	inc    ebp
  4416d1:	jmp    0x44170a
  4416d3:	cmp    dl,0xff
  4416d6:	je     0x44170a
  4416d8:	movzx  eax,BYTE PTR [esp+0x5]
  4416dd:	shl    eax,0x4
  4416e0:	movzx  edx,dl
  4416e3:	shr    edx,0x2
  4416e6:	or     al,dl
  4416e8:	mov    edx,DWORD PTR [esp+0x8]
  4416ec:	mov    BYTE PTR [edx+ebp*1+0x1],al
  4416f0:	mov    eax,DWORD PTR [esp+0x8]
  4416f4:	movzx  edx,BYTE PTR [esp+0x6]
  4416f9:	shl    edx,0x6
  4416fc:	or     dl,BYTE PTR [esp+0x7]
  441700:	mov    BYTE PTR [eax+ebp*1+0x2],dl
  441704:	lea    eax,[ebp+0x3]
  441707:	add    ebp,0x2
  44170a:	inc    ebp
  44170b:	dec    DWORD PTR [esp+0xc]
  44170f:	jne    0x441616
  441715:	add    esp,0x10
  441718:	pop    ebp
  441719:	pop    edi
  44171a:	pop    esi
  44171b:	ret    
  44171c:	push   ebx
  44171d:	push   esi
  44171e:	push   edi
  44171f:	push   ecx
  441720:	mov    DWORD PTR [esp],edx
  441723:	mov    edi,eax
  441725:	mov    ebx,edi
  441727:	mov    eax,ebx
  441729:	test   eax,eax
  44172b:	je     0x441732
  44172d:	sub    eax,0x4
  441730:	mov    eax,DWORD PTR [eax]
  441732:	test   eax,eax
  441734:	jns    0x441739
  441736:	add    eax,0x3
  441739:	sar    eax,0x2
  44173c:	lea    edx,[eax+eax*2]
  44173f:	mov    eax,DWORD PTR [esp]
  441742:	call   0x4056a8
  441747:	mov    eax,DWORD PTR [esp]
  44174a:	call   0x405478
  44174f:	mov    esi,eax
  441751:	test   ebx,ebx
  441753:	je     0x44175a
  441755:	sub    ebx,0x4
  441758:	mov    ebx,DWORD PTR [ebx]
  44175a:	mov    eax,edi
  44175c:	call   0x405418
  441761:	mov    ecx,ebx
  441763:	mov    edx,esi
  441765:	call   0x4415e8
  44176a:	mov    edx,eax
  44176c:	mov    eax,DWORD PTR [esp]
  44176f:	call   0x4056a8
  441774:	pop    edx
  441775:	pop    edi
  441776:	pop    esi
  441777:	pop    ebx
  441778:	ret    
  441779:	lea    eax,[eax+0x0]
  44177c:	enter  0x4417,0x0
	...
  44179c:	enter  0x4417,0x0
  4417a0:	or     al,0x0
  4417a2:	add    BYTE PTR [eax],al
  4417a4:	hlt    
  4417a5:	jbe    0x4417e7
  4417a7:	add    al,dl
  4417a9:	inc    edx
  4417aa:	inc    eax
  4417ab:	add    ah,bl
  4417ad:	inc    edx
  4417ae:	inc    eax
  4417af:	add    al,ah
  4417b1:	inc    edx
  4417b2:	inc    eax
  4417b3:	add    ah,ah
  4417b5:	inc    edx
  4417b6:	inc    eax
  4417b7:	add    al,bl
  4417b9:	inc    edx
  4417ba:	inc    eax
  4417bb:	add    BYTE PTR [eax],bh
  4417bd:	inc    eax
  4417be:	inc    eax
  4417bf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4417c3:	add    BYTE PTR [eax+0x9004040],dl
  4417c9:	inc    ebp
  4417ca:	inc    esp
  4417cb:	inc    ebx
  4417cc:	push   eax
  4417cd:	pop    edi
  4417ce:	push   0x8b687361
  4417d3:	shl    BYTE PTR [eax],0x18
  4417d6:	inc    esp
	...
  4417e3:	add    BYTE PTR [eax+0x4418],al
	...
  4417f1:	add    BYTE PTR [eax],al
  4417f3:	add    BYTE PTR [eax+0x18],dh
  4417f6:	inc    esp
  4417f7:	add    BYTE PTR [eax+eax*1],dh
  4417fa:	add    BYTE PTR [eax],al
  4417fc:	pop    esp
  4417fd:	xor    eax,DWORD PTR [ecx+0x0]
  441800:	sbb    BYTE PTR [ecx+0x42dc0041],ch
  441806:	inc    eax
  441807:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44180d:	inc    edx
  44180e:	inc    eax
  44180f:	add    al,bl
  441811:	inc    edx
  441812:	inc    eax
  441813:	add    BYTE PTR [eax],bh
  441815:	inc    eax
  441816:	inc    eax
  441817:	add    BYTE PTR [eax+eax*2+0x40],dl
  44181b:	add    BYTE PTR [eax+0x1d],ch
  44181e:	inc    esp
  44181f:	add    BYTE PTR [eax+0x41],ch
  441822:	inc    ecx
  441823:	add    BYTE PTR [eax-0x5b],dh
  441826:	inc    ecx
  441827:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44182e:	inc    ecx
  44182f:	add    BYTE PTR [eax],dl
  441831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441832:	inc    ecx
  441833:	add    BYTE PTR [eax-0x5a],bl
  441836:	inc    ecx
  441837:	add    BYTE PTR [eax-0x59],dl
  44183a:	inc    ecx
  44183b:	add    BYTE PTR [eax],dh
  44183d:	test   eax,0xa6680041
  441842:	inc    ecx
  441843:	add    BYTE PTR [eax-0x5a],ah
  441846:	inc    ecx
  441847:	add    BYTE PTR [eax],bh
  441849:	test   eax,0xa1e00041
  44184e:	inc    ecx
  44184f:	add    BYTE PTR [eax],bl
  441851:	sbb    eax,0x1d1c0044
  441856:	inc    esp
  441857:	add    BYTE PTR [eax],ch
  441859:	sbb    eax,0x1d2c0044
  44185e:	inc    esp
  44185f:	add    BYTE PTR [eax],dh
  441861:	sbb    eax,0x1d340044
  441866:	inc    esp
  441867:	add    BYTE PTR [eax],bh
  441869:	sbb    eax,0x1d3c0044
  44186e:	inc    esp
  44186f:	add    BYTE PTR [ecx],cl
  441871:	push   esp
  441872:	inc    esp
  441873:	inc    ebx
  441874:	push   eax
  441875:	pop    edi
  441876:	push   0x8b687361
  44187b:	rol    BYTE PTR [eax+0x7004418],0x9
  441882:	push   esp
  441883:	inc    esp
  441884:	inc    ebx
  441885:	push   eax
  441886:	pop    edi
  441887:	push   0x20687361
  44188c:	sbb    BYTE PTR [eax+eax*1+0x58],al
  441890:	xor    al,0x41
  441892:	add    BYTE PTR ds:0x43440900,al
  441898:	push   eax
  441899:	arpl   WORD PTR [edx+0x79],si
  44189c:	jo     0x441912
  44189e:	xor    al,BYTE PTR [ebx]
  4418a0:	add    BYTE PTR [eax+edx*1],bh
  4418a3:	inc    eax
  4418a4:	add    al,bh
  4418a6:	sbb    al,0x44
  4418a8:	add    ah,cl
  4418aa:	sbb    al,0x44
  4418ac:	add    BYTE PTR [ecx],al
  4418ae:	add    BYTE PTR [eax],al
  4418b0:	add    BYTE PTR [eax],al
  4418b2:	add    BYTE PTR [eax],al
  4418b4:	add    BYTE PTR [eax],0x0
  4418b7:	add    BYTE PTR [eax+0x49020002],al
  4418bd:	test   BYTE PTR fs:[eax],dl
  4418c0:	inc    eax
  4418c1:	add    BYTE PTR [eax],al
  4418c3:	sbb    eax,0x1cd00044
  4418c8:	inc    esp
  4418c9:	add    BYTE PTR [ecx],al
  4418cb:	add    BYTE PTR [eax],al
  4418cd:	add    BYTE PTR [eax],al
  4418cf:	add    BYTE PTR [eax],al
  4418d1:	add    BYTE PTR [eax],0x0
  4418d4:	add    BYTE PTR [eax+0x41090003],al
  4418da:	ins    BYTE PTR es:[edi],dx
  4418db:	outs   dx,DWORD PTR ds:[si]
  4418dd:	jb     0x441948
  4418df:	je     0x441949
  4418e1:	ins    DWORD PTR es:[edi],dx
  4418e2:	cmp    al,0x10
  4418e4:	inc    eax
  4418e5:	add    BYTE PTR [eax],dl
  4418e7:	sbb    eax,0x1ccc0044
  4418ec:	inc    esp
  4418ed:	add    BYTE PTR [ecx],al
  4418ef:	add    BYTE PTR [eax],al
  4418f1:	add    BYTE PTR [eax],al
  4418f3:	add    BYTE PTR [eax],al
  4418f5:	add    BYTE PTR [eax],0x0
  4418f8:	add    BYTE PTR [eax+0x48080004],al
  4418fe:	popa   
  4418ff:	jae    0x441969
  441901:	push   ebx
  441902:	imul   edi,DWORD PTR [edx+0x65],0x5400408d
  441909:	sbb    DWORD PTR [eax+eax*1+0x0],eax
	...
  441925:	add    BYTE PTR [eax],al
  441927:	add    BYTE PTR [ecx+ebx*1+0x44],dl
  44192b:	add    BYTE PTR [eax+eax*1],cl
  44192e:	add    BYTE PTR [eax],al
  441930:	hlt    
  441931:	jbe    0x441973
  441933:	add    al,dl
  441935:	inc    edx
  441936:	inc    eax
  441937:	add    ah,bl
  441939:	inc    edx
  44193a:	inc    eax
  44193b:	add    al,ah
  44193d:	inc    edx
  44193e:	inc    eax
  44193f:	add    ah,ah
  441941:	inc    edx
  441942:	inc    eax
  441943:	add    al,bl
  441945:	inc    edx
  441946:	inc    eax
  441947:	add    BYTE PTR [eax],bh
  441949:	inc    eax
  44194a:	inc    eax
  44194b:	add    BYTE PTR [eax+eax*2+0x40],dl
  44194f:	add    BYTE PTR [eax+0xb004040],dl
  441955:	inc    ebp
  441956:	inc    esp
  441957:	inc    ebx
  441958:	push   eax
  441959:	pop    edi
  44195a:	arpl   WORD PTR [ecx+0x70],bp
  44195d:	push   0x19ac7265
  441962:	inc    esp
	...
  44196f:	add    BYTE PTR [eax],bl
  441971:	sbb    al,BYTE PTR [eax+eax*1+0x0]
	...
  44197d:	add    BYTE PTR [eax],al
  44197f:	add    BYTE PTR [eax],cl
  441981:	sbb    al,BYTE PTR [eax+eax*1+0x34]
  441985:	add    BYTE PTR [eax],al
  441987:	add    BYTE PTR [ebx+esi*1+0x41],bl
  44198b:	add    BYTE PTR [eax],bl
  44198d:	test   eax,0x42dc0041
  441992:	inc    eax
  441993:	add    BYTE PTR [eax-0x1bffbe5e],ch
  441999:	inc    edx
  44199a:	inc    eax
  44199b:	add    al,bl
  44199d:	inc    edx
  44199e:	inc    eax
  44199f:	add    BYTE PTR [eax],bh
  4419a1:	inc    eax
  4419a2:	inc    eax
  4419a3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4419a7:	add    BYTE PTR [eax+0x20],bh
  4419aa:	inc    esp
  4419ab:	add    BYTE PTR [eax+0x41],ch
  4419ae:	inc    ecx
  4419af:	add    BYTE PTR [eax-0x5b],dh
  4419b2:	inc    ecx
  4419b3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4419ba:	inc    ecx
  4419bb:	add    BYTE PTR [eax],dl
  4419bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4419be:	inc    ecx
  4419bf:	add    BYTE PTR [eax-0x5a],bl
  4419c2:	inc    ecx
  4419c3:	add    BYTE PTR [eax-0x59],dl
  4419c6:	inc    ecx
  4419c7:	add    BYTE PTR [eax],dh
  4419c9:	test   eax,0xa6680041
  4419ce:	inc    ecx
  4419cf:	add    BYTE PTR [eax-0x5a],ah
  4419d2:	inc    ecx
  4419d3:	add    BYTE PTR [eax],bh
  4419d5:	test   eax,0x203c0041
  4419da:	inc    esp
  4419db:	add    al,ch
  4419dd:	sbb    eax,0x1dec0044
  4419e2:	inc    esp
  4419e3:	add    al,bh
  4419e5:	sbb    eax,0x1dfc0044
  4419ea:	inc    esp
  4419eb:	add    BYTE PTR [eax],al
  4419ed:	push   ds
  4419ee:	inc    esp
  4419ef:	add    BYTE PTR [esi+ebx*1+0x44],ch
  4419f3:	add    BYTE PTR [esi+ebx*1+0x44],dh
  4419f7:	add    BYTE PTR [eax+0x1e],bh
  4419fa:	inc    esp
  4419fb:	add    BYTE PTR [eax+0x5000441e],al
  441a01:	pop    ds
  441a02:	inc    esp
  441a03:	add    al,dh
  441a05:	pop    ds
  441a06:	inc    esp
  441a07:	add    BYTE PTR [ebx],cl
  441a09:	push   esp
  441a0a:	inc    esp
  441a0b:	inc    ebx
  441a0c:	push   eax
  441a0d:	pop    edi
  441a0e:	arpl   WORD PTR [ecx+0x70],bp
  441a11:	push   0x1a187265
  441a16:	inc    esp
  441a17:	add    BYTE PTR [edi],al
  441a19:	or     edx,DWORD PTR [esp+eax*2+0x43]
  441a1d:	push   eax
  441a1e:	pop    edi
  441a1f:	arpl   WORD PTR [ecx+0x70],bp
  441a22:	push   0x19ac7265
  441a27:	inc    esp
  441a28:	add    BYTE PTR [eax+0x34],bl
  441a2b:	inc    ecx
  441a2c:	add    BYTE PTR ds:0x43440900,al
  441a32:	push   eax
  441a33:	arpl   WORD PTR [edx+0x79],si
  441a36:	jo     0x441aac
  441a38:	xor    al,BYTE PTR [ebx]
  441a3a:	add    BYTE PTR [eax+edx*1],bh
  441a3d:	inc    eax
  441a3e:	add    al,cl
  441a40:	sbb    eax,0x1d9c0044
  441a45:	inc    esp
  441a46:	add    BYTE PTR [ecx],al
  441a48:	add    BYTE PTR [eax],al
  441a4a:	add    BYTE PTR [eax],al
  441a4c:	add    BYTE PTR [eax],al
  441a4e:	add    BYTE PTR [eax],0x0
  441a51:	add    BYTE PTR [eax+0x49020002],al
  441a57:	test   BYTE PTR fs:[eax],dl
  441a5a:	inc    eax
  441a5b:	add    al,dl
  441a5d:	sbb    eax,0x1da00044
  441a62:	inc    esp
  441a63:	add    BYTE PTR [ecx],al
  441a65:	add    BYTE PTR [eax],al
  441a67:	add    BYTE PTR [eax],al
  441a69:	add    BYTE PTR [eax],al
  441a6b:	add    BYTE PTR [eax],0x0
  441a6e:	add    BYTE PTR [eax+0x41090003],al
  441a74:	ins    BYTE PTR es:[edi],dx
  441a75:	outs   dx,DWORD PTR ds:[si]
  441a77:	jb     0x441ae2
  441a79:	je     0x441ae3
  441a7b:	ins    DWORD PTR es:[edi],dx
  441a7c:	cmp    al,0x10
  441a7e:	inc    eax
  441a7f:	add    al,ah
  441a81:	sbb    eax,0x1d9c0044
  441a86:	inc    esp
  441a87:	add    BYTE PTR [ecx],al
  441a89:	add    BYTE PTR [eax],al
  441a8b:	add    BYTE PTR [eax],al
  441a8d:	add    BYTE PTR [eax],al
  441a8f:	add    BYTE PTR [eax],0x0
  441a92:	add    BYTE PTR [eax+0x4d0a0004],al
  441a98:	popa   
  441a99:	js     0x441ae6
  441a9b:	gs jns 0x441af1
  441a9e:	imul   edi,DWORD PTR [edx+0x65],0xa800408d
  441aa5:	sbb    al,BYTE PTR [eax+eax*1+0x3]
  441aa9:	andps  xmm0,XMMWORD PTR [ebx+eax*2+0x50]
  441aae:	pop    edi
  441aaf:	arpl   WORD PTR [ecx+0x70],bp
  441ab2:	push   0x6f6d7265
  441ab7:	fs add DWORD PTR gs:[eax],eax
  441abb:	add    BYTE PTR [eax],al
  441abd:	add    BYTE PTR [eax+eax*1],al
  441ac0:	add    BYTE PTR [eax],al
  441ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441ac3:	sbb    al,BYTE PTR [eax+eax*1+0x5]
  441ac7:	arpl   WORD PTR [ebp+0x43],bp
  441aca:	inc    edx
  441acb:	inc    ebx
  441acc:	or     DWORD PTR [ebx+0x6d],esp
  441acf:	inc    ebx
  441ad0:	inc    esi
  441ad1:	inc    edx
  441ad2:	cmp    BYTE PTR [edx+0x69],ah
  441ad5:	je     0x441ae1
  441ad7:	arpl   WORD PTR [ebp+0x43],bp
  441ada:	inc    esi
  441adb:	inc    edx
  441adc:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  441ae0:	imul   eax,DWORD PTR ds:0x464f6d63,0x42
  441ae7:	add    eax,0x54436d63
  441aec:	push   edx
  441aed:	or     DWORD PTR [ebx+eax*2+0x50],eax
  441af1:	arpl   WORD PTR [edx+0x79],si
  441af4:	jo     0x441b6a
  441af6:	xor    dl,BYTE PTR [eax+0x441b44]
	...
  441b18:	inc    esp
  441b19:	sbb    eax,DWORD PTR [eax+eax*1+0xc]
  441b1d:	add    BYTE PTR [eax],al
  441b1f:	add    BYTE PTR [eax],cl
  441b21:	sbb    DWORD PTR [eax+eax*1-0x30],eax
  441b25:	inc    edx
  441b26:	inc    eax
  441b27:	add    ah,bl
  441b29:	inc    edx
  441b2a:	inc    eax
  441b2b:	add    al,ah
  441b2d:	inc    edx
  441b2e:	inc    eax
  441b2f:	add    ah,ah
  441b31:	inc    edx
  441b32:	inc    eax
  441b33:	add    al,bl
  441b35:	inc    edx
  441b36:	inc    eax
  441b37:	add    BYTE PTR [eax],bh
  441b39:	inc    eax
  441b3a:	inc    eax
  441b3b:	add    BYTE PTR [eax+eax*2+0x40],dl
  441b3f:	add    BYTE PTR [eax+0x10004040],dl
  441b45:	inc    ebp
  441b46:	inc    esp
  441b47:	inc    ebx
  441b48:	push   eax
  441b49:	pop    edi
  441b4a:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  441b4e:	imul   esp,DWORD PTR [ebx+0x69],0x70
  441b52:	push   0x408d7265
  441b57:	add    BYTE PTR [ebx+ebx*1+0x44],ah
	...
  441b66:	add    BYTE PTR [eax],al
  441b68:	pop    eax
  441b69:	sbb    al,0x44
	...
  441b77:	add    BYTE PTR [eax+0x1c],al
  441b7a:	inc    esp
  441b7b:	add    BYTE PTR [eax],bh
  441b7d:	add    BYTE PTR [eax],al
  441b7f:	add    BYTE PTR [eax+0x19],ah
  441b82:	inc    esp
  441b83:	add    BYTE PTR [eax],bl
  441b85:	test   eax,0x42dc0041
  441b8a:	inc    eax
  441b8b:	add    BYTE PTR [eax-0x1bffbe5e],ch
  441b91:	inc    edx
  441b92:	inc    eax
  441b93:	add    al,bl
  441b95:	inc    edx
  441b96:	inc    eax
  441b97:	add    BYTE PTR [eax],bh
  441b99:	inc    eax
  441b9a:	inc    eax
  441b9b:	add    BYTE PTR [eax+eax*2+0x40],dl
  441b9f:	add    BYTE PTR [eax+0x20],bh
  441ba2:	inc    esp
  441ba3:	add    BYTE PTR [eax+0x41],ch
  441ba6:	inc    ecx
  441ba7:	add    BYTE PTR [eax-0x5b],dh
  441baa:	inc    ecx
  441bab:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  441bb2:	inc    ecx
  441bb3:	add    BYTE PTR [eax],dl
  441bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441bb6:	inc    ecx
  441bb7:	add    BYTE PTR [eax-0x5a],bl
  441bba:	inc    ecx
  441bbb:	add    BYTE PTR [eax-0x59],dl
  441bbe:	inc    ecx
  441bbf:	add    BYTE PTR [eax],dh
  441bc1:	test   eax,0xa6680041
  441bc6:	inc    ecx
  441bc7:	add    BYTE PTR [eax-0x5a],ah
  441bca:	inc    ecx
  441bcb:	add    BYTE PTR [eax],bh
  441bcd:	test   eax,0x231c0041
  441bd2:	inc    esp
  441bd3:	add    al,ch
  441bd5:	sbb    eax,0x1dec0044
  441bda:	inc    esp
  441bdb:	add    al,bh
  441bdd:	sbb    eax,0x1dfc0044
  441be2:	inc    esp
  441be3:	add    BYTE PTR [eax],al
  441be5:	push   ds
  441be6:	inc    esp
  441be7:	add    BYTE PTR [esi+ebx*1+0x44],ch
  441beb:	add    BYTE PTR [esi+ebx*1+0x44],dh
  441bef:	add    ah,al
  441bf1:	and    BYTE PTR [eax+eax*1+0x38],al
  441bf5:	and    al,BYTE PTR [eax+eax*1+0x4c]
  441bf9:	and    DWORD PTR [eax+eax*1-0x14],eax
  441bfd:	and    DWORD PTR [eax+eax*1-0x54],eax
  441c01:	and    BYTE PTR [eax+eax*1-0x48],al
  441c05:	and    BYTE PTR [eax+eax*1-0x44],al
  441c09:	and    BYTE PTR [eax+eax*1-0x40],al
  441c0d:	and    BYTE PTR [eax+eax*1-0x3c],al
  441c11:	and    al,BYTE PTR [eax+eax*1-0x38]
  441c15:	and    al,BYTE PTR [eax+eax*1-0x34]
  441c19:	and    al,BYTE PTR [eax+eax*1-0x2c]
  441c1d:	and    al,BYTE PTR [eax+eax*1-0x24]
  441c21:	and    al,BYTE PTR [eax+eax*1-0x1c]
  441c25:	and    al,BYTE PTR [eax+eax*1-0x14]
  441c29:	and    al,BYTE PTR [eax+eax*1-0xc]
  441c2d:	and    al,BYTE PTR [eax+eax*1-0x4]
  441c31:	and    al,BYTE PTR [eax+eax*1+0x4]
  441c35:	and    eax,DWORD PTR [eax+eax*1+0xc]
  441c39:	and    eax,DWORD PTR [eax+eax*1+0x14]
  441c3d:	and    eax,DWORD PTR [eax+eax*1+0x10]
  441c41:	push   esp
  441c42:	inc    esp
  441c43:	inc    ebx
  441c44:	push   eax
  441c45:	pop    edi
  441c46:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  441c4a:	imul   esp,DWORD PTR [ebx+0x69],0x70
  441c4e:	push   0x408d7265
  441c53:	add    BYTE PTR [eax+0x1c],bl
  441c56:	inc    esp
  441c57:	add    BYTE PTR [edi],al
  441c59:	adc    BYTE PTR [esp+eax*2+0x43],dl
  441c5d:	push   eax
  441c5e:	pop    edi
  441c5f:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  441c63:	imul   esp,DWORD PTR [ebx+0x69],0x70
  441c67:	push   0x1ba47265
  441c6c:	inc    esp
  441c6d:	add    BYTE PTR [edx+ebx*1],dl
  441c70:	inc    esp
  441c71:	add    BYTE PTR [edi],al
  441c73:	add    BYTE PTR [ecx],cl
  441c75:	inc    esp
  441c76:	inc    ebx
  441c77:	push   eax
  441c78:	arpl   WORD PTR [edx+0x79],si
  441c7b:	jo     0x441cf1
  441c7d:	xor    al,BYTE PTR [edx]
  441c7f:	add    BYTE PTR [eax+edx*1],bh
  441c82:	inc    eax
  441c83:	add    BYTE PTR [eax-0x63ffbbe0],dh
  441c89:	sbb    eax,0x10044
  441c8e:	add    BYTE PTR [eax],al
  441c90:	add    BYTE PTR [eax],al
  441c92:	add    BYTE PTR [eax-0x80000000],al
  441c98:	add    eax,0x6c420900
  441c9d:	outs   dx,DWORD PTR ds:[esi]
  441c9e:	arpl   WORD PTR [ebx+0x53],bp
  441ca1:	imul   edi,DWORD PTR [edx+0x65],0x441aa4
  441ca8:	xor    al,0x0
  441caa:	add    bh,bh
  441cac:	xor    al,0x0
  441cae:	add    bh,bh
  441cb0:	add    DWORD PTR [eax],eax
  441cb2:	add    BYTE PTR [eax],al
  441cb4:	add    BYTE PTR [eax],al
  441cb6:	add    BYTE PTR [eax+0x0],al
  441cbc:	push   es
  441cbd:	add    BYTE PTR [edx],cl
  441cbf:	inc    ebx
  441cc0:	imul   esi,DWORD PTR [eax+0x68],0x6f4d7265
  441cc7:	fs lea eax,gs:[eax+0x0]
  441ccc:	ret    
  441ccd:	lea    eax,[eax+0x0]
  441cd0:	push   ebp
  441cd1:	mov    ebp,esp
  441cd3:	xor    eax,eax
  441cd5:	push   ebp
  441cd6:	push   0x441cef
  441cdb:	push   DWORD PTR fs:[eax]
  441cde:	mov    DWORD PTR fs:[eax],esp
  441ce1:	xor    eax,eax
  441ce3:	pop    edx
  441ce4:	pop    ecx
  441ce5:	pop    ecx
  441ce6:	mov    DWORD PTR fs:[eax],edx
  441ce9:	push   0x441cf6
  441cee:	ret    
  441cef:	jmp    0x40481c
  441cf4:	jmp    0x441cee
  441cf6:	pop    ebp
  441cf7:	ret    
  441cf8:	mov    eax,DWORD PTR [eax]
  441cfa:	call   DWORD PTR [eax+0x30]
  441cfd:	ret    
  441cfe:	mov    eax,eax
  441d00:	push   ebx
  441d01:	push   esi
  441d02:	mov    esi,edx
  441d04:	mov    ebx,eax
  441d06:	mov    edx,esi
  441d08:	mov    eax,DWORD PTR [ebx]
  441d0a:	call   DWORD PTR [eax+0x34]
  441d0d:	pop    esi
  441d0e:	pop    ebx
  441d0f:	ret    
  441d10:	mov    eax,DWORD PTR [eax]
  441d12:	call   DWORD PTR [eax+0x38]
  441d15:	ret    
  441d16:	mov    eax,eax
  441d18:	or     eax,0xffffffff
  441d1b:	ret    
  441d1c:	push   ebx
  441d1d:	mov    ebx,edx
  441d1f:	mov    eax,ebx
  441d21:	call   0x404f88
  441d26:	pop    ebx
  441d27:	ret    
  441d28:	or     eax,0xffffffff
  441d2b:	ret    
  441d2c:	xor    eax,eax
  441d2e:	ret    
  441d2f:	nop
  441d30:	ret    
  441d31:	lea    eax,[eax+0x0]
  441d34:	ret    
  441d35:	lea    eax,[eax+0x0]
  441d38:	ret    
  441d39:	lea    eax,[eax+0x0]
  441d3c:	ret    
  441d3d:	lea    eax,[eax+0x0]
  441d40:	push   ebx
  441d41:	push   esi
  441d42:	push   edi
  441d43:	mov    edi,edx
  441d45:	mov    esi,eax
  441d47:	mov    ebx,edi
  441d49:	test   ebx,ebx
  441d4b:	je     0x441d52
  441d4d:	sub    ebx,0x4
  441d50:	mov    ebx,DWORD PTR [ebx]
  441d52:	mov    eax,edi
  441d54:	call   0x405418
  441d59:	mov    edx,eax
  441d5b:	mov    ecx,ebx
  441d5d:	mov    eax,esi
  441d5f:	mov    ebx,DWORD PTR [eax]
  441d61:	call   DWORD PTR [ebx+0x4c]
  441d64:	pop    edi
  441d65:	pop    esi
  441d66:	pop    ebx
  441d67:	ret    
  441d68:	push   ebx
  441d69:	push   esi
  441d6a:	call   0x404454
  441d6f:	mov    ebx,edx
  441d71:	mov    esi,eax
  441d73:	cmp    BYTE PTR [esi+0x30],0x0
  441d77:	je     0x441d80
  441d79:	mov    eax,esi
  441d7b:	mov    edx,DWORD PTR [eax]
  441d7d:	call   DWORD PTR [edx+0x48]
  441d80:	mov    edx,ebx
  441d82:	and    dl,0xfc
  441d85:	mov    eax,esi
  441d87:	call   0x41a22c
  441d8c:	test   bl,bl
  441d8e:	jle    0x441d97
  441d90:	mov    eax,esi
  441d92:	call   0x4043fc
  441d97:	pop    esi
  441d98:	pop    ebx
  441d99:	ret    
  441d9a:	mov    eax,eax
  441d9c:	ret    
  441d9d:	lea    eax,[eax+0x0]
  441da0:	push   ebp
  441da1:	mov    ebp,esp
  441da3:	xor    eax,eax
  441da5:	push   ebp
  441da6:	push   0x441dbf
  441dab:	push   DWORD PTR fs:[eax]
  441dae:	mov    DWORD PTR fs:[eax],esp
  441db1:	xor    eax,eax
  441db3:	pop    edx
  441db4:	pop    ecx
  441db5:	pop    ecx
  441db6:	mov    DWORD PTR fs:[eax],edx
  441db9:	push   0x441dc6
  441dbe:	ret    
  441dbf:	jmp    0x40481c
  441dc4:	jmp    0x441dbe
  441dc6:	pop    ebp
  441dc7:	ret    
  441dc8:	mov    eax,DWORD PTR [eax]
  441dca:	call   DWORD PTR [eax+0x30]
  441dcd:	ret    
  441dce:	mov    eax,eax
  441dd0:	push   ebx
  441dd1:	push   esi
  441dd2:	mov    esi,edx
  441dd4:	mov    ebx,eax
  441dd6:	mov    edx,esi
  441dd8:	mov    eax,DWORD PTR [ebx]
  441dda:	call   DWORD PTR [eax+0x34]
  441ddd:	pop    esi
  441dde:	pop    ebx
  441ddf:	ret    
  441de0:	mov    eax,DWORD PTR [eax]
  441de2:	call   DWORD PTR [eax+0x38]
  441de5:	ret    
  441de6:	mov    eax,eax
  441de8:	or     eax,0xffffffff
  441deb:	ret    
  441dec:	push   ebx
  441ded:	mov    ebx,edx
  441def:	mov    eax,ebx
  441df1:	call   0x404f88
  441df6:	pop    ebx
  441df7:	ret    
  441df8:	or     eax,0xffffffff
  441dfb:	ret    
  441dfc:	xor    eax,eax
  441dfe:	ret    
  441dff:	nop
  441e00:	push   ebp
  441e01:	mov    ebp,esp
  441e03:	push   ebx
  441e04:	push   esi
  441e05:	mov    esi,ecx
  441e07:	mov    ebx,eax
  441e09:	cmp    BYTE PTR [ebx+0x30],0x0
  441e0d:	je     0x441e16
  441e0f:	mov    eax,ebx
  441e11:	mov    edx,DWORD PTR [eax]
  441e13:	call   DWORD PTR [edx+0x44]
  441e16:	test   esi,esi
  441e18:	jbe    0x441e2b
  441e1a:	test   esi,0x3
  441e20:	jne    0x441e2b
  441e22:	mov    eax,DWORD PTR [ebx]
  441e24:	call   DWORD PTR [eax+0x38]
  441e27:	cmp    esi,eax
  441e29:	jbe    0x441e43
  441e2b:	mov    ecx,0x441e58
  441e30:	mov    dl,0x1
  441e32:	mov    eax,ds:0x441908
  441e37:	call   0x40c8b4
  441e3c:	call   0x4048fc
  441e41:	jmp    0x441e47
  441e43:	mov    BYTE PTR [ebx+0x30],0x1
  441e47:	pop    esi
  441e48:	pop    ebx
  441e49:	pop    ebp
  441e4a:	ret    0x4
  441e4d:	add    BYTE PTR [eax],al
  441e4f:	add    bh,bh
  441e51:	(bad)  
  441e52:	(bad)  
  441e53:	call   DWORD PTR [eax]
  441e55:	add    BYTE PTR [eax],al
  441e57:	add    BYTE PTR [ecx+0x6e],cl
  441e5a:	jbe    0x441ebd
  441e5c:	ins    BYTE PTR es:[edi],dx
  441e5d:	imul   esp,DWORD PTR [eax+eiz*1+0x6b],0x73207965
  441e65:	imul   edi,DWORD PTR [edx+0x65],0x0
  441e6c:	mov    BYTE PTR [eax+0x30],0x0
  441e70:	ret    
  441e71:	lea    eax,[eax+0x0]
  441e74:	ret    
  441e75:	lea    eax,[eax+0x0]
  441e78:	push   ebp
  441e79:	mov    ebp,esp
  441e7b:	pop    ebp
  441e7c:	ret    0x4
  441e7f:	nop
  441e80:	push   ebp
  441e81:	mov    ebp,esp
  441e83:	pop    ebp
  441e84:	ret    0x4
  441e87:	nop
  441e88:	push   ebp
  441e89:	mov    ebp,esp
  441e8b:	push   eax
  441e8c:	mov    eax,0x2
  441e91:	add    esp,0xfffff004
  441e97:	push   eax
  441e98:	dec    eax
  441e99:	jne    0x441e91
  441e9b:	mov    eax,DWORD PTR [ebp-0x4]
  441e9e:	add    esp,0xfffffff4
  441ea1:	push   ebx
  441ea2:	push   esi
  441ea3:	push   edi
  441ea4:	mov    DWORD PTR [ebp-0xc],ecx
  441ea7:	mov    DWORD PTR [ebp-0x8],edx
  441eaa:	mov    DWORD PTR [ebp-0x4],eax
  441ead:	xor    eax,eax
  441eaf:	mov    DWORD PTR [ebp-0x10],eax
  441eb2:	mov    esi,DWORD PTR [ebp+0x8]
  441eb5:	shr    esi,0xd
  441eb8:	test   esi,esi
  441eba:	jbe    0x441efc
  441ebc:	lea    edx,[ebp-0x2010]
  441ec2:	mov    ecx,0x2000
  441ec7:	mov    eax,DWORD PTR [ebp-0x8]
  441eca:	mov    ebx,DWORD PTR [eax]
  441ecc:	call   DWORD PTR [ebx+0xc]
  441ecf:	mov    ebx,eax
  441ed1:	add    DWORD PTR [ebp-0x10],ebx
  441ed4:	push   ebx
  441ed5:	lea    ecx,[ebp-0x2010]
  441edb:	lea    edx,[ebp-0x2010]
  441ee1:	mov    eax,DWORD PTR [ebp-0x4]
  441ee4:	mov    edi,DWORD PTR [eax]
  441ee6:	call   DWORD PTR [edi+0x4c]
  441ee9:	lea    edx,[ebp-0x2010]
  441eef:	mov    ecx,ebx
  441ef1:	mov    eax,DWORD PTR [ebp-0xc]
  441ef4:	mov    ebx,DWORD PTR [eax]
  441ef6:	call   DWORD PTR [ebx+0x10]
  441ef9:	dec    esi
  441efa:	jne    0x441ebc
  441efc:	mov    eax,DWORD PTR [ebp+0x8]
  441eff:	and    eax,0x1fff
  441f04:	test   eax,eax
  441f06:	je     0x441f42
  441f08:	mov    ecx,eax
  441f0a:	lea    edx,[ebp-0x2010]
  441f10:	mov    eax,DWORD PTR [ebp-0x8]
  441f13:	mov    ebx,DWORD PTR [eax]
  441f15:	call   DWORD PTR [ebx+0xc]
  441f18:	mov    ebx,eax
  441f1a:	add    DWORD PTR [ebp-0x10],ebx
  441f1d:	push   ebx
  441f1e:	lea    ecx,[ebp-0x2010]
  441f24:	lea    edx,[ebp-0x2010]
  441f2a:	mov    eax,DWORD PTR [ebp-0x4]
  441f2d:	mov    esi,DWORD PTR [eax]
  441f2f:	call   DWORD PTR [esi+0x4c]
  441f32:	lea    edx,[ebp-0x2010]
  441f38:	mov    ecx,ebx
  441f3a:	mov    eax,DWORD PTR [ebp-0xc]
  441f3d:	mov    ebx,DWORD PTR [eax]
  441f3f:	call   DWORD PTR [ebx+0x10]
  441f42:	mov    eax,DWORD PTR [ebp-0x10]
  441f45:	pop    edi
  441f46:	pop    esi
  441f47:	pop    ebx
  441f48:	mov    esp,ebp
  441f4a:	pop    ebp
  441f4b:	ret    0x4
  441f4e:	mov    eax,eax
  441f50:	push   ebp
  441f51:	mov    ebp,esp
  441f53:	add    esp,0xfffffff4
  441f56:	push   ebx
  441f57:	push   esi
  441f58:	push   edi
  441f59:	xor    ebx,ebx
  441f5b:	mov    DWORD PTR [ebp-0xc],ebx
  441f5e:	mov    DWORD PTR [ebp-0x8],ecx
  441f61:	mov    esi,edx
  441f63:	mov    DWORD PTR [ebp-0x4],eax
  441f66:	xor    eax,eax
  441f68:	push   ebp
  441f69:	push   0x441fdf
  441f6e:	push   DWORD PTR fs:[eax]
  441f71:	mov    DWORD PTR fs:[eax],esp
  441f74:	mov    ebx,esi
  441f76:	mov    eax,ebx
  441f78:	test   eax,eax
  441f7a:	je     0x441f81
  441f7c:	sub    eax,0x4
  441f7f:	mov    eax,DWORD PTR [eax]
  441f81:	mov    edx,DWORD PTR [ebp-0x8]
  441f84:	xchg   edx,eax
  441f85:	call   0x4056a8
  441f8a:	mov    eax,DWORD PTR [ebp-0x8]
  441f8d:	call   0x405478
  441f92:	mov    edi,eax
  441f94:	test   ebx,ebx
  441f96:	je     0x441f9d
  441f98:	sub    ebx,0x4
  441f9b:	mov    ebx,DWORD PTR [ebx]
  441f9d:	push   ebx
  441f9e:	mov    eax,esi
  441fa0:	call   0x405418
  441fa5:	mov    edx,eax
  441fa7:	mov    ecx,edi
  441fa9:	mov    eax,DWORD PTR [ebp-0x4]
  441fac:	mov    ebx,DWORD PTR [eax]
  441fae:	call   DWORD PTR [ebx+0x4c]
  441fb1:	lea    edx,[ebp-0xc]
  441fb4:	mov    eax,DWORD PTR [ebp-0x8]
  441fb7:	mov    eax,DWORD PTR [eax]
  441fb9:	call   0x441590
  441fbe:	mov    edx,DWORD PTR [ebp-0xc]
  441fc1:	mov    eax,DWORD PTR [ebp-0x8]
  441fc4:	call   0x404fdc
  441fc9:	xor    eax,eax
  441fcb:	pop    edx
  441fcc:	pop    ecx
  441fcd:	pop    ecx
  441fce:	mov    DWORD PTR fs:[eax],edx
  441fd1:	push   0x441fe6
  441fd6:	lea    eax,[ebp-0xc]
  441fd9:	call   0x404f88
  441fde:	ret    
  441fdf:	jmp    0x40481c
  441fe4:	jmp    0x441fd6
  441fe6:	pop    edi
  441fe7:	pop    esi
  441fe8:	pop    ebx
  441fe9:	mov    esp,ebp
  441feb:	pop    ebp
  441fec:	ret    
  441fed:	lea    eax,[eax+0x0]
  441ff0:	push   ebx
  441ff1:	push   esi
  441ff2:	push   edi
  441ff3:	push   ebp
  441ff4:	push   ecx
  441ff5:	mov    ebx,ecx
  441ff7:	mov    esi,edx
  441ff9:	mov    edi,eax
  441ffb:	mov    edx,ebx
  441ffd:	mov    eax,esi
  441fff:	call   0x44171c
  442004:	mov    eax,ebx
  442006:	call   0x405478
  44200b:	mov    ebp,eax
  44200d:	mov    eax,ebx
  44200f:	call   0x405478
  442014:	mov    esi,eax
  442016:	mov    eax,DWORD PTR [ebx]
  442018:	mov    DWORD PTR [esp],eax
  44201b:	mov    eax,DWORD PTR [esp]
  44201e:	test   eax,eax
  442020:	je     0x442027
  442022:	sub    eax,0x4
  442025:	mov    eax,DWORD PTR [eax]
  442027:	push   eax
  442028:	mov    ecx,esi
  44202a:	mov    edx,ebp
  44202c:	mov    eax,edi
  44202e:	mov    ebx,DWORD PTR [eax]
  442030:	call   DWORD PTR [ebx+0x50]
  442033:	pop    edx
  442034:	pop    ebp
  442035:	pop    edi
  442036:	pop    esi
  442037:	pop    ebx
  442038:	ret    
  442039:	lea    eax,[eax+0x0]
  44203c:	push   ebx
  44203d:	push   esi
  44203e:	test   dl,dl
  442040:	je     0x44204a
  442042:	add    esp,0xfffffff0
  442045:	call   0x4043ac
  44204a:	mov    ebx,edx
  44204c:	mov    esi,eax
  44204e:	xor    edx,edx
  442050:	mov    eax,esi
  442052:	call   0x41a1e0
  442057:	mov    eax,esi
  442059:	mov    edx,DWORD PTR [eax]
  44205b:	call   DWORD PTR [edx+0x44]
  44205e:	mov    eax,esi
  442060:	test   bl,bl
  442062:	je     0x442073
  442064:	call   0x404404
  442069:	pop    DWORD PTR fs:0x0
  442070:	add    esp,0xc
  442073:	mov    eax,esi
  442075:	pop    esi
  442076:	pop    ebx
  442077:	ret    
  442078:	push   ebx
  442079:	push   esi
  44207a:	call   0x404454
  44207f:	mov    ebx,edx
  442081:	mov    esi,eax
  442083:	cmp    BYTE PTR [esi+0x30],0x0
  442087:	je     0x442090
  442089:	mov    eax,esi
  44208b:	mov    edx,DWORD PTR [eax]
  44208d:	call   DWORD PTR [edx+0x44]
  442090:	mov    edx,ebx
  442092:	and    dl,0xfc
  442095:	mov    eax,esi
  442097:	call   0x41a22c
  44209c:	test   bl,bl
  44209e:	jle    0x4420a7
  4420a0:	mov    eax,esi
  4420a2:	call   0x4043fc
  4420a7:	pop    esi
  4420a8:	pop    ebx
  4420a9:	ret    
  4420aa:	mov    eax,eax
  4420ac:	ret    
  4420ad:	lea    eax,[eax+0x0]
  4420b0:	mov    eax,DWORD PTR [eax]
  4420b2:	call   DWORD PTR [eax+0x60]
  4420b5:	ret    
  4420b6:	mov    eax,eax
  4420b8:	or     eax,0xffffffff
  4420bb:	ret    
  4420bc:	ret    
  4420bd:	lea    eax,[eax+0x0]
  4420c0:	ret    
  4420c1:	lea    eax,[eax+0x0]
  4420c4:	push   ebp
  4420c5:	mov    ebp,esp
  4420c7:	push   ebx
  4420c8:	push   esi
  4420c9:	push   edi
  4420ca:	mov    edi,edx
  4420cc:	mov    esi,eax
  4420ce:	movzx  eax,BYTE PTR [esi+0x34]
  4420d2:	cmp    eax,0x4
  4420d5:	ja     0x442144
  4420d7:	jmp    DWORD PTR [eax*4+0x4420de]
  4420de:	repnz and BYTE PTR [eax+eax*1+0x1],al
  4420e3:	and    DWORD PTR [eax+eax*1+0x10],eax
  4420e7:	and    DWORD PTR [eax+eax*1+0x22],eax
  4420eb:	and    DWORD PTR [eax+eax*1+0x34],eax
  4420ef:	and    DWORD PTR [eax+eax*1-0x75],eax
  4420f3:	inc    ebp
  4420f4:	or     BYTE PTR [eax-0x75],dl
  4420f7:	xlat   BYTE PTR ds:[ebx]
  4420f8:	mov    eax,esi
  4420fa:	mov    ebx,DWORD PTR [eax]
  4420fc:	call   DWORD PTR [ebx+0x74]
  4420ff:	jmp    0x442144
  442101:	mov    eax,DWORD PTR [ebp+0x8]
  442104:	push   eax
  442105:	mov    edx,edi
  442107:	mov    eax,esi
  442109:	mov    ebx,DWORD PTR [eax]
  44210b:	call   DWORD PTR [ebx+0x7c]
  44210e:	jmp    0x442144
  442110:	mov    eax,DWORD PTR [ebp+0x8]
  442113:	push   eax
  442114:	mov    edx,edi
  442116:	mov    eax,esi
  442118:	mov    ebx,DWORD PTR [eax]
  44211a:	call   DWORD PTR [ebx+0x84]
  442120:	jmp    0x442144
  442122:	mov    eax,DWORD PTR [ebp+0x8]
  442125:	push   eax
  442126:	mov    edx,edi
  442128:	mov    eax,esi
  44212a:	mov    ebx,DWORD PTR [eax]
  44212c:	call   DWORD PTR [ebx+0x8c]
  442132:	jmp    0x442144
  442134:	mov    eax,DWORD PTR [ebp+0x8]
  442137:	push   eax
  442138:	mov    edx,edi
  44213a:	mov    eax,esi
  44213c:	mov    ebx,DWORD PTR [eax]
  44213e:	call   DWORD PTR [ebx+0x94]
  442144:	pop    edi
  442145:	pop    esi
  442146:	pop    ebx
  442147:	pop    ebp
  442148:	ret    0x4
  44214b:	nop
  44214c:	push   ebp
  44214d:	mov    ebp,esp
  44214f:	add    esp,0xfffffff4
  442152:	push   ebx
  442153:	push   esi
  442154:	push   edi
  442155:	xor    ebx,ebx
  442157:	mov    DWORD PTR [ebp-0xc],ebx
  44215a:	mov    DWORD PTR [ebp-0x8],ecx
  44215d:	mov    esi,edx
  44215f:	mov    DWORD PTR [ebp-0x4],eax
  442162:	xor    eax,eax
  442164:	push   ebp
  442165:	push   0x4421db
  44216a:	push   DWORD PTR fs:[eax]
  44216d:	mov    DWORD PTR fs:[eax],esp
  442170:	mov    ebx,esi
  442172:	mov    eax,ebx
  442174:	test   eax,eax
  442176:	je     0x44217d
  442178:	sub    eax,0x4
  44217b:	mov    eax,DWORD PTR [eax]
  44217d:	mov    edx,DWORD PTR [ebp-0x8]
  442180:	xchg   edx,eax
  442181:	call   0x4056a8
  442186:	mov    eax,DWORD PTR [ebp-0x8]
  442189:	call   0x405478
  44218e:	mov    edi,eax
  442190:	test   ebx,ebx
  442192:	je     0x442199
  442194:	sub    ebx,0x4
  442197:	mov    ebx,DWORD PTR [ebx]
  442199:	push   ebx
  44219a:	mov    eax,esi
  44219c:	call   0x405418
  4421a1:	mov    edx,eax
  4421a3:	mov    ecx,edi
  4421a5:	mov    eax,DWORD PTR [ebp-0x4]
  4421a8:	mov    ebx,DWORD PTR [eax]
  4421aa:	call   DWORD PTR [ebx+0x7c]
  4421ad:	lea    edx,[ebp-0xc]
  4421b0:	mov    eax,DWORD PTR [ebp-0x8]
  4421b3:	mov    eax,DWORD PTR [eax]
  4421b5:	call   0x441590
  4421ba:	mov    edx,DWORD PTR [ebp-0xc]
  4421bd:	mov    eax,DWORD PTR [ebp-0x8]
  4421c0:	call   0x404fdc
  4421c5:	xor    eax,eax
  4421c7:	pop    edx
  4421c8:	pop    ecx
  4421c9:	pop    ecx
  4421ca:	mov    DWORD PTR fs:[eax],edx
  4421cd:	push   0x4421e2
  4421d2:	lea    eax,[ebp-0xc]
  4421d5:	call   0x404f88
  4421da:	ret    
  4421db:	jmp    0x40481c
  4421e0:	jmp    0x4421d2
  4421e2:	pop    edi
  4421e3:	pop    esi
  4421e4:	pop    ebx
  4421e5:	mov    esp,ebp
  4421e7:	pop    ebp
  4421e8:	ret    
  4421e9:	lea    eax,[eax+0x0]
  4421ec:	push   ebx
  4421ed:	push   esi
  4421ee:	push   edi
  4421ef:	push   ebp
  4421f0:	push   ecx
  4421f1:	mov    ebx,ecx
  4421f3:	mov    esi,edx
  4421f5:	mov    edi,eax
  4421f7:	mov    edx,ebx
  4421f9:	mov    eax,esi
  4421fb:	call   0x44171c
  442200:	mov    eax,ebx
  442202:	call   0x405478
  442207:	mov    ebp,eax
  442209:	mov    eax,ebx
  44220b:	call   0x405478
  442210:	mov    esi,eax
  442212:	mov    eax,DWORD PTR [ebx]
  442214:	mov    DWORD PTR [esp],eax
  442217:	mov    eax,DWORD PTR [esp]
  44221a:	test   eax,eax
  44221c:	je     0x442223
  44221e:	sub    eax,0x4
  442221:	mov    eax,DWORD PTR [eax]
  442223:	push   eax
  442224:	mov    ecx,esi
  442226:	mov    edx,ebp
  442228:	mov    eax,edi
  44222a:	mov    ebx,DWORD PTR [eax]
  44222c:	call   DWORD PTR [ebx+0x80]
  442232:	pop    edx
  442233:	pop    ebp
  442234:	pop    edi
  442235:	pop    esi
  442236:	pop    ebx
  442237:	ret    
  442238:	push   ebp
  442239:	mov    ebp,esp
  44223b:	push   ebx
  44223c:	push   esi
  44223d:	push   edi
  44223e:	mov    edi,edx
  442240:	mov    esi,eax
  442242:	movzx  eax,BYTE PTR [esi+0x34]
  442246:	cmp    eax,0x4
  442249:	ja     0x4422bb
  44224b:	jmp    DWORD PTR [eax*4+0x442252]
  442252:	data16 and al,BYTE PTR [eax+eax*1+0x75]
  442257:	and    al,BYTE PTR [eax+eax*1-0x79]
  44225b:	and    al,BYTE PTR [eax+eax*1-0x67]
  44225f:	and    al,BYTE PTR [eax+eax*1-0x55]
  442263:	and    al,BYTE PTR [eax+eax*1-0x75]
  442267:	inc    ebp
  442268:	or     BYTE PTR [eax-0x75],dl
  44226b:	xlat   BYTE PTR ds:[ebx]
  44226c:	mov    eax,esi
  44226e:	mov    ebx,DWORD PTR [eax]
  442270:	call   DWORD PTR [ebx+0x78]
  442273:	jmp    0x4422bb
  442275:	mov    eax,DWORD PTR [ebp+0x8]
  442278:	push   eax
  442279:	mov    edx,edi
  44227b:	mov    eax,esi
  44227d:	mov    ebx,DWORD PTR [eax]
  44227f:	call   DWORD PTR [ebx+0x80]
  442285:	jmp    0x4422bb
  442287:	mov    eax,DWORD PTR [ebp+0x8]
  44228a:	push   eax
  44228b:	mov    edx,edi
  44228d:	mov    eax,esi
  44228f:	mov    ebx,DWORD PTR [eax]
  442291:	call   DWORD PTR [ebx+0x88]
  442297:	jmp    0x4422bb
  442299:	mov    eax,DWORD PTR [ebp+0x8]
  44229c:	push   eax
  44229d:	mov    edx,edi
  44229f:	mov    eax,esi
  4422a1:	mov    ebx,DWORD PTR [eax]
  4422a3:	call   DWORD PTR [ebx+0x90]
  4422a9:	jmp    0x4422bb
  4422ab:	mov    eax,DWORD PTR [ebp+0x8]
  4422ae:	push   eax
  4422af:	mov    edx,edi
  4422b1:	mov    eax,esi
  4422b3:	mov    ebx,DWORD PTR [eax]
  4422b5:	call   DWORD PTR [ebx+0x98]
  4422bb:	pop    edi
  4422bc:	pop    esi
  4422bd:	pop    ebx
  4422be:	pop    ebp
  4422bf:	ret    0x4
  4422c2:	mov    eax,eax
  4422c4:	ret    
  4422c5:	lea    eax,[eax+0x0]
  4422c8:	ret    
  4422c9:	lea    eax,[eax+0x0]
  4422cc:	push   ebp
  4422cd:	mov    ebp,esp
  4422cf:	pop    ebp
  4422d0:	ret    0x4
  4422d3:	nop
  4422d4:	push   ebp
  4422d5:	mov    ebp,esp
  4422d7:	pop    ebp
  4422d8:	ret    0x4
  4422db:	nop
  4422dc:	push   ebp
  4422dd:	mov    ebp,esp
  4422df:	pop    ebp
  4422e0:	ret    0x4
  4422e3:	nop
  4422e4:	push   ebp
  4422e5:	mov    ebp,esp
  4422e7:	pop    ebp
  4422e8:	ret    0x4
  4422eb:	nop
  4422ec:	push   ebp
  4422ed:	mov    ebp,esp
  4422ef:	pop    ebp
  4422f0:	ret    0x4
  4422f3:	nop
  4422f4:	push   ebp
  4422f5:	mov    ebp,esp
  4422f7:	pop    ebp
  4422f8:	ret    0x4
  4422fb:	nop
  4422fc:	push   ebp
  4422fd:	mov    ebp,esp
  4422ff:	pop    ebp
  442300:	ret    0x4
  442303:	nop
  442304:	push   ebp
  442305:	mov    ebp,esp
  442307:	pop    ebp
  442308:	ret    0x4
  44230b:	nop
  44230c:	push   ebp
  44230d:	mov    ebp,esp
  44230f:	pop    ebp
  442310:	ret    0x4
  442313:	nop
  442314:	push   ebp
  442315:	mov    ebp,esp
  442317:	pop    ebp
  442318:	ret    0x4
  44231b:	nop
  44231c:	push   ebx
  44231d:	push   esi
  44231e:	test   dl,dl
  442320:	je     0x44232a
  442322:	add    esp,0xfffffff0
  442325:	call   0x4043ac
  44232a:	mov    ebx,edx
  44232c:	mov    esi,eax
  44232e:	xor    edx,edx
  442330:	mov    eax,esi
  442332:	call   0x44203c
  442337:	mov    BYTE PTR [esi+0x34],0x0
  44233b:	mov    eax,esi
  44233d:	test   bl,bl
  44233f:	je     0x442350
  442341:	call   0x404404
  442346:	pop    DWORD PTR fs:0x0
  44234d:	add    esp,0xc
  442350:	mov    eax,esi
  442352:	pop    esi
  442353:	pop    ebx
  442354:	ret    
  442355:	lea    eax,[eax+0x0]
  442358:	push   ebx
  442359:	push   esi
  44235a:	push   edi
  44235b:	mov    esi,ecx
  44235d:	test   esi,esi
  44235f:	jbe    0x442379
  442361:	mov    ecx,0x1
  442366:	mov    ebx,edx
  442368:	add    ebx,ecx
  44236a:	dec    ebx
  44236b:	movzx  ebx,BYTE PTR [ebx]
  44236e:	mov    edi,eax
  442370:	add    edi,ecx
  442372:	dec    edi
  442373:	xor    BYTE PTR [edi],bl
  442375:	inc    ecx
  442376:	dec    esi
  442377:	jne    0x442366
  442379:	pop    edi
  44237a:	pop    esi
  44237b:	pop    ebx
  44237c:	ret    
  44237d:	lea    eax,[eax+0x0]
  442380:	int3   
  442381:	and    eax,DWORD PTR [eax+eax*1+0x0]
	...
  44238d:	add    BYTE PTR [eax],al
  44238f:	add    BYTE PTR [eax+0x4424],al
	...
  44239d:	add    BYTE PTR [eax],al
  44239f:	add    BYTE PTR [eax+0x24],ch
  4423a2:	inc    esp
  4423a3:	add    BYTE PTR [eax+0x0],cl
  4423a6:	add    BYTE PTR [eax],al
  4423a8:	pop    eax
  4423a9:	sbb    eax,DWORD PTR [eax+eax*1+0x18]
  4423ad:	test   eax,0x42dc0041
  4423b2:	inc    eax
  4423b3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4423b9:	inc    edx
  4423ba:	inc    eax
  4423bb:	add    al,bl
  4423bd:	inc    edx
  4423be:	inc    eax
  4423bf:	add    BYTE PTR [eax],bh
  4423c1:	inc    eax
  4423c2:	inc    eax
  4423c3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4423c7:	add    BYTE PTR [eax+0x20],bh
  4423ca:	inc    esp
  4423cb:	add    BYTE PTR [eax+0x41],ch
  4423ce:	inc    ecx
  4423cf:	add    BYTE PTR [eax-0x5b],dh
  4423d2:	inc    ecx
  4423d3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4423da:	inc    ecx
  4423db:	add    BYTE PTR [eax],dl
  4423dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4423de:	inc    ecx
  4423df:	add    BYTE PTR [eax-0x5a],bl
  4423e2:	inc    ecx
  4423e3:	add    BYTE PTR [eax-0x59],dl
  4423e6:	inc    ecx
  4423e7:	add    BYTE PTR [eax],dh
  4423e9:	test   eax,0xa6680041
  4423ee:	inc    ecx
  4423ef:	add    BYTE PTR [eax-0x5a],ah
  4423f2:	inc    ecx
  4423f3:	add    BYTE PTR [eax],bh
  4423f5:	test   eax,0x231c0041
  4423fa:	inc    esp
  4423fb:	add    al,ch
  4423fd:	sbb    eax,0x1dec0044
  442402:	inc    esp
  442403:	add    al,bh
  442405:	sbb    eax,0x1dfc0044
  44240a:	inc    esp
  44240b:	add    BYTE PTR [eax],cl
  44240d:	es inc esp
  44240f:	add    BYTE PTR [eax+0x27],dh
  442412:	inc    esp
  442413:	add    BYTE PTR [eax],ah
  442415:	daa    
  442416:	inc    esp
  442417:	add    ah,al
  442419:	and    BYTE PTR [eax+eax*1+0x38],al
  44241d:	and    al,BYTE PTR [eax+eax*1+0x4c]
  442421:	and    DWORD PTR [eax+eax*1-0x14],eax
  442425:	and    DWORD PTR [eax+eax*1-0x54],eax
  442429:	and    BYTE PTR [eax+eax*1+0x0],al
  44242d:	es inc esp
  44242f:	add    BYTE PTR [esi+eiz*1+0x44],bh
  442433:	add    ah,dl
  442435:	es inc esp
  442437:	add    ah,al
  442439:	and    al,BYTE PTR [eax+eax*1-0x38]
  44243d:	and    al,BYTE PTR [eax+eax*1-0x60]
  442441:	daa    
  442442:	inc    esp
  442443:	add    BYTE PTR [eax+ebp*1+0x299c0044],dl
  44244a:	inc    esp
  44244b:	add    BYTE PTR [eax],bh
  44244d:	sub    al,BYTE PTR [eax+eax*1-0x24]
  442451:	sub    al,BYTE PTR [eax+eax*1-0x38]
  442455:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  442459:	sub    al,0x44
  44245b:	add    BYTE PTR [eax-0x77ffbbd3],ch
  442461:	cs inc esp
  442463:	add    BYTE PTR [eax+0x2f],bh
  442466:	inc    esp
  442467:	add    BYTE PTR [edx],dl
  442469:	push   esp
  44246a:	inc    esp
  44246b:	inc    ebx
  44246c:	push   eax
  44246d:	pop    edi
  44246e:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  442472:	imul   esp,DWORD PTR [ebx+0x69],0x70
  442476:	push   0x34367265
  44247b:	nop
  44247c:	and    BYTE PTR [esp+eax*2],0x0
  442480:	pop    es
  442481:	adc    dl,BYTE PTR [esp+eax*2+0x43]
  442485:	push   eax
  442486:	pop    edi
  442487:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  44248b:	imul   esp,DWORD PTR [ebx+0x69],0x70
  44248f:	push   0x34367265
  442494:	int3   
  442495:	and    eax,DWORD PTR [eax+eax*1+0x54]
  442499:	sbb    al,0x44
  44249b:	add    BYTE PTR [edi],al
  44249d:	add    BYTE PTR [edi],cl
  44249f:	inc    esp
  4424a0:	inc    ebx
  4424a1:	push   eax
  4424a2:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  4424a6:	imul   esp,DWORD PTR [ebx+0x69],0x70
  4424aa:	push   0x737265
  4424af:	add    ah,bh
  4424b1:	and    al,0x44
	...
  4424bf:	add    BYTE PTR [eax+0x4425],dh
	...
  4424cd:	add    BYTE PTR [eax],al
  4424cf:	add    BYTE PTR [eax+0x58004425],bl
  4424d5:	add    BYTE PTR [eax],al
  4424d7:	add    BYTE PTR [eax+0x1b],bl
  4424da:	inc    esp
  4424db:	add    BYTE PTR [eax],bl
  4424dd:	test   eax,0x42dc0041
  4424e2:	inc    eax
  4424e3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4424e9:	inc    edx
  4424ea:	inc    eax
  4424eb:	add    al,bl
  4424ed:	inc    edx
  4424ee:	inc    eax
  4424ef:	add    BYTE PTR [eax],bh
  4424f1:	inc    eax
  4424f2:	inc    eax
  4424f3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4424f7:	add    BYTE PTR [eax+0x20],bh
  4424fa:	inc    esp
  4424fb:	add    BYTE PTR [eax+0x41],ch
  4424fe:	inc    ecx
  4424ff:	add    BYTE PTR [eax-0x5b],dh
  442502:	inc    ecx
  442503:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44250a:	inc    ecx
  44250b:	add    BYTE PTR [eax],dl
  44250d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44250e:	inc    ecx
  44250f:	add    BYTE PTR [eax-0x5a],bl
  442512:	inc    ecx
  442513:	add    BYTE PTR [eax-0x59],dl
  442516:	inc    ecx
  442517:	add    BYTE PTR [eax],dh
  442519:	test   eax,0xa6680041
  44251e:	inc    ecx
  44251f:	add    BYTE PTR [eax-0x5a],ah
  442522:	inc    ecx
  442523:	add    BYTE PTR [eax],bh
  442525:	test   eax,0x231c0041
  44252a:	inc    esp
  44252b:	add    al,ch
  44252d:	sbb    eax,0x1dec0044
  442532:	inc    esp
  442533:	add    al,bh
  442535:	sbb    eax,0x1dfc0044
  44253a:	inc    esp
  44253b:	add    BYTE PTR [eax+esi*1+0x31f40044],cl
  442542:	inc    esp
  442543:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  44254a:	inc    esp
  44254b:	add    BYTE PTR [eax],bh
  44254d:	and    al,BYTE PTR [eax+eax*1+0x4c]
  442551:	and    DWORD PTR [eax+eax*1-0x14],eax
  442555:	and    DWORD PTR [eax+eax*1-0x54],eax
  442559:	and    BYTE PTR [eax+eax*1-0x7c],al
  44255d:	xor    BYTE PTR [eax+eax*1+0x0],al
  442561:	xor    DWORD PTR [eax+eax*1+0x58],eax
  442565:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  442569:	and    al,BYTE PTR [eax+eax*1-0x38]
  44256d:	and    al,BYTE PTR [eax+eax*1+0x24]
  442571:	xor    al,BYTE PTR [eax+eax*1+0x18]
  442575:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  442579:	xor    al,0x44
  44257b:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  442582:	inc    esp
  442583:	add    BYTE PTR [esi+esi*1+0x44],cl
  442587:	add    BYTE PTR [edi+esi*1+0x44],cl
  44258b:	add    BYTE PTR [eax+edi*1],ch
  44258e:	inc    esp
  44258f:	add    BYTE PTR [ecx+edi*1],cl
  442592:	inc    esp
  442593:	add    ah,bh
  442595:	cmp    DWORD PTR [eax+eax*1+0x13],eax
  442599:	push   esp
  44259a:	inc    esp
  44259b:	inc    ebx
  44259c:	push   eax
  44259d:	pop    edi
  44259e:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  4425a2:	imul   esp,DWORD PTR [ebx+0x69],0x70
  4425a6:	push   0x32317265
  4425ab:	cmp    BYTE PTR [eax+0x7004425],dh
  4425b1:	adc    edx,DWORD PTR [esp+eax*2+0x43]
  4425b5:	push   eax
  4425b6:	pop    edi
  4425b7:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  4425bb:	imul   esp,DWORD PTR [ebx+0x69],0x70
  4425bf:	push   0x32317265
  4425c4:	cmp    ah,bh
  4425c6:	and    al,0x44
  4425c8:	add    BYTE PTR [esp+ebx*1+0x44],dl
  4425cc:	add    BYTE PTR [edi],al
  4425ce:	add    BYTE PTR [edi],cl
  4425d0:	inc    esp
  4425d1:	inc    ebx
  4425d2:	push   eax
  4425d3:	bound  ebp,QWORD PTR [edi+ebp*2+0x63]
  4425d7:	imul   esp,DWORD PTR [ebx+0x69],0x70
  4425db:	push   0x737265
  4425e0:	add    BYTE PTR [ebp+0x40fe0040],cl
  4425e6:	inc    edi
  4425e7:	mov    edx,0x7
  4425ec:	jmp    0x4425f3
  4425ee:	inc    BYTE PTR [eax+edx*1+0x3f]
  4425f2:	dec    edx
  4425f3:	test   edx,edx
  4425f5:	jle    0x4425fe
  4425f7:	cmp    BYTE PTR [eax+edx*1+0x40],0x0
  4425fc:	je     0x4425ee
  4425fe:	ret    
  4425ff:	nop
  442600:	mov    eax,0x40
  442605:	ret    
  442606:	mov    eax,eax
  442608:	push   ebp
  442609:	mov    ebp,esp
  44260b:	push   ecx
  44260c:	push   ebx
  44260d:	push   esi
  44260e:	push   edi
  44260f:	mov    DWORD PTR [ebp-0x4],ecx
  442612:	mov    edi,edx
  442614:	mov    ebx,eax
  442616:	mov    esi,DWORD PTR [ebp+0x8]
  442619:	push   esi
  44261a:	mov    edx,edi
  44261c:	mov    ecx,DWORD PTR [ebp-0x4]
  44261f:	mov    eax,ebx
  442621:	call   0x441e00
  442626:	mov    edx,edi
  442628:	mov    ecx,DWORD PTR [ebp-0x4]
  44262b:	mov    eax,ebx
  44262d:	mov    edi,DWORD PTR [eax]
  44262f:	call   DWORD PTR [edi+0x5c]
  442632:	test   esi,esi
  442634:	jne    0x44265b
  442636:	lea    eax,[ebx+0x38]
  442639:	xor    ecx,ecx
  44263b:	mov    edx,0x8
  442640:	call   0x4037c8
  442645:	lea    ecx,[ebx+0x38]
  442648:	lea    edx,[ebx+0x38]
  44264b:	mov    eax,ebx
  44264d:	mov    esi,DWORD PTR [eax]
  44264f:	call   DWORD PTR [esi+0x6c]
  442652:	mov    eax,ebx
  442654:	mov    edx,DWORD PTR [eax]
  442656:	call   DWORD PTR [edx+0x48]
  442659:	jmp    0x442671
  44265b:	lea    edx,[ebx+0x38]
  44265e:	mov    eax,esi
  442660:	mov    ecx,0x8
  442665:	call   0x403090
  44266a:	mov    eax,ebx
  44266c:	mov    edx,DWORD PTR [eax]
  44266e:	call   DWORD PTR [edx+0x48]
  442671:	pop    edi
  442672:	pop    esi
  442673:	pop    ebx
  442674:	pop    ecx
  442675:	pop    ebp
  442676:	ret    0x4
  442679:	lea    eax,[eax+0x0]
  44267c:	push   ebx
  44267d:	mov    ebx,eax
  44267f:	cmp    BYTE PTR [ebx+0x30],0x0
  442683:	jne    0x44269b
  442685:	mov    ecx,0x4426bc
  44268a:	mov    dl,0x1
  44268c:	mov    eax,ds:0x441af8
  442691:	call   0x40c8b4
  442696:	call   0x4048fc
  44269b:	mov    eax,edx
  44269d:	lea    edx,[ebx+0x38]
  4426a0:	mov    ecx,0x8
  4426a5:	call   0x403090
  4426aa:	mov    eax,ebx
  4426ac:	mov    edx,DWORD PTR [eax]
  4426ae:	call   DWORD PTR [edx+0x48]
  4426b1:	pop    ebx
  4426b2:	ret    
  4426b3:	add    bh,bh
  4426b5:	(bad)  
  4426b6:	(bad)  
  4426b7:	call   DWORD PTR [esi]
  4426b9:	add    BYTE PTR [eax],al
  4426bb:	add    BYTE PTR [ebx+0x69],al
  4426be:	jo     0x442728
  4426c0:	gs jb  0x4426e3
  4426c3:	outs   dx,BYTE PTR ds:[esi]
  4426c4:	outs   dx,DWORD PTR ds:[esi]
  4426c5:	je     0x4426e7
  4426c7:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4426ce:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  4426d5:	js     0x442707
  4426d7:	add    BYTE PTR [ebp+0x16],dh
  4426da:	mov    ecx,0x442708
  4426df:	mov    dl,0x1
  4426e1:	mov    eax,ds:0x441af8
  4426e6:	call   0x40c8b4
  4426eb:	call   0x4048fc
  4426f0:	add    eax,0x40
  4426f3:	mov    ecx,0x8
  4426f8:	call   0x403090
  4426fd:	ret    
  4426fe:	add    BYTE PTR [eax],al
  442700:	(bad)  
  442701:	(bad)  
  442702:	(bad)  
  442703:	call   DWORD PTR [esi]
  442705:	add    BYTE PTR [eax],al
  442707:	add    BYTE PTR [ebx+0x69],al
  44270a:	jo     0x442774
  44270c:	gs jb  0x44272f
  44270f:	outs   dx,BYTE PTR ds:[esi]
  442710:	outs   dx,DWORD PTR ds:[esi]
  442711:	je     0x442733
  442713:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44271a:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  442721:	js     0x442753
  442723:	add    BYTE PTR [ebp+0x17],dh
  442726:	mov    ecx,0x442758
  44272b:	mov    dl,0x1
  44272d:	mov    eax,ds:0x441af8
  442732:	call   0x40c8b4
  442737:	call   0x4048fc
  44273c:	ret    
  44273d:	lea    edx,[eax+0x40]
  442740:	add    eax,0x38
  442743:	mov    ecx,0x8
  442748:	call   0x403090
  44274d:	ret    
  44274e:	add    BYTE PTR [eax],al
  442750:	(bad)  
  442751:	(bad)  
  442752:	(bad)  
  442753:	call   DWORD PTR [esi]
  442755:	add    BYTE PTR [eax],al
  442757:	add    BYTE PTR [ebx+0x69],al
  44275a:	jo     0x4427c4
  44275c:	gs jb  0x44277f
  44275f:	outs   dx,BYTE PTR ds:[esi]
  442760:	outs   dx,DWORD PTR ds:[esi]
  442761:	je     0x442783
  442763:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44276a:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  442771:	mov    ebx,eax
  442773:	lea    eax,[ebx+0x38]
  442776:	mov    ecx,0xff
  44277b:	mov    edx,0x8
  442780:	call   0x4037c8
  442785:	lea    eax,[ebx+0x40]
  442788:	mov    ecx,0xff
  44278d:	mov    edx,0x8
  442792:	call   0x4037c8
  442797:	mov    eax,ebx
  442799:	call   0x441e6c
  44279e:	pop    ebx
  44279f:	ret    
  4427a0:	push   ebp
  4427a1:	mov    ebp,esp
  4427a3:	add    esp,0xfffffff4
  4427a6:	push   ebx
  4427a7:	push   esi
  4427a8:	push   edi
  4427a9:	mov    DWORD PTR [ebp-0x4],eax
  4427ac:	mov    eax,DWORD PTR [ebp-0x4]
  4427af:	cmp    BYTE PTR [eax+0x30],0x0
  4427b3:	jne    0x4427cb
  4427b5:	mov    ecx,0x44287c
  4427ba:	mov    dl,0x1
  4427bc:	mov    eax,ds:0x441af8
  4427c1:	call   0x40c8b4
  4427c6:	call   0x4048fc
  4427cb:	mov    DWORD PTR [ebp-0x8],edx
  4427ce:	mov    ebx,ecx
  4427d0:	mov    eax,DWORD PTR [ebp+0x8]
  4427d3:	shr    eax,0x3
  4427d6:	test   eax,eax
  4427d8:	jbe    0x44282f
  4427da:	mov    DWORD PTR [ebp-0xc],eax
  4427dd:	mov    esi,ebx
  4427df:	mov    edx,esi
  4427e1:	mov    eax,DWORD PTR [ebp-0x8]
  4427e4:	mov    ecx,0x8
  4427e9:	call   0x403090
  4427ee:	mov    eax,DWORD PTR [ebp-0x4]
  4427f1:	lea    edx,[eax+0x40]
  4427f4:	mov    eax,esi
  4427f6:	mov    ecx,0x8
  4427fb:	call   0x442358
  442800:	mov    ecx,esi
  442802:	mov    edx,esi
  442804:	mov    eax,DWORD PTR [ebp-0x4]
  442807:	mov    edi,DWORD PTR [eax]
  442809:	call   DWORD PTR [edi+0x6c]
  44280c:	mov    eax,DWORD PTR [ebp-0x4]
  44280f:	lea    edx,[eax+0x40]
  442812:	mov    eax,esi
  442814:	mov    ecx,0x8
  442819:	call   0x403090
  44281e:	mov    eax,DWORD PTR [ebp-0x8]
  442821:	add    eax,0x8
  442824:	mov    DWORD PTR [ebp-0x8],eax
  442827:	add    ebx,0x8
  44282a:	dec    DWORD PTR [ebp-0xc]
  44282d:	jne    0x4427dd
  44282f:	mov    esi,DWORD PTR [ebp+0x8]
  442832:	and    esi,0x7
  442835:	test   esi,esi
  442837:	je     0x44286a
  442839:	mov    eax,DWORD PTR [ebp-0x4]
  44283c:	lea    ecx,[eax+0x40]
  44283f:	mov    eax,DWORD PTR [ebp-0x4]
  442842:	lea    edx,[eax+0x40]
  442845:	mov    eax,DWORD PTR [ebp-0x4]
  442848:	mov    edi,DWORD PTR [eax]
  44284a:	call   DWORD PTR [edi+0x6c]
  44284d:	mov    ecx,esi
  44284f:	mov    edi,ebx
  442851:	mov    edx,edi
  442853:	mov    eax,DWORD PTR [ebp-0x8]
  442856:	call   0x403090
  44285b:	mov    ecx,esi
  44285d:	mov    eax,DWORD PTR [ebp-0x4]
  442860:	lea    edx,[eax+0x40]
  442863:	mov    eax,edi
  442865:	call   0x442358
  44286a:	pop    edi
  44286b:	pop    esi
  44286c:	pop    ebx
  44286d:	mov    esp,ebp
  44286f:	pop    ebp
  442870:	ret    0x4
  442873:	add    bh,bh
  442875:	(bad)  
  442876:	(bad)  
  442877:	call   DWORD PTR [esi]
  442879:	add    BYTE PTR [eax],al
  44287b:	add    BYTE PTR [ebx+0x69],al
  44287e:	jo     0x4428e8
  442880:	gs jb  0x4428a3
  442883:	outs   dx,BYTE PTR ds:[esi]
  442884:	outs   dx,DWORD PTR ds:[esi]
  442885:	je     0x4428a7
  442887:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44288e:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442895:	mov    ebp,esp
  442897:	add    esp,0xffffffec
  44289a:	push   ebx
  44289b:	push   esi
  44289c:	push   edi
  44289d:	mov    DWORD PTR [ebp-0x8],ecx
  4428a0:	mov    DWORD PTR [ebp-0x4],eax
  4428a3:	mov    eax,DWORD PTR [ebp-0x4]
  4428a6:	cmp    BYTE PTR [eax+0x30],0x0
  4428aa:	jne    0x4428c2
  4428ac:	mov    ecx,0x442984
  4428b1:	mov    dl,0x1
  4428b3:	mov    eax,ds:0x441af8
  4428b8:	call   0x40c8b4
  4428bd:	call   0x4048fc
  4428c2:	mov    esi,edx
  4428c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4428c7:	mov    eax,DWORD PTR [ebp+0x8]
  4428ca:	shr    eax,0x3
  4428cd:	test   eax,eax
  4428cf:	jbe    0x44292f
  4428d1:	mov    DWORD PTR [ebp-0x14],eax
  4428d4:	mov    edx,ebx
  4428d6:	mov    edi,esi
  4428d8:	mov    eax,edi
  4428da:	mov    ecx,0x8
  4428df:	call   0x403090
  4428e4:	lea    edx,[ebp-0x10]
  4428e7:	mov    eax,edi
  4428e9:	mov    ecx,0x8
  4428ee:	call   0x403090
  4428f3:	mov    ecx,ebx
  4428f5:	mov    edx,ebx
  4428f7:	mov    eax,DWORD PTR [ebp-0x4]
  4428fa:	mov    edi,DWORD PTR [eax]
  4428fc:	call   DWORD PTR [edi+0x70]
  4428ff:	mov    eax,DWORD PTR [ebp-0x4]
  442902:	lea    edx,[eax+0x40]
  442905:	mov    eax,ebx
  442907:	mov    ecx,0x8
  44290c:	call   0x442358
  442911:	mov    eax,DWORD PTR [ebp-0x4]
  442914:	lea    edx,[eax+0x40]
  442917:	lea    eax,[ebp-0x10]
  44291a:	mov    ecx,0x8
  44291f:	call   0x403090
  442924:	add    esi,0x8
  442927:	add    ebx,0x8
  44292a:	dec    DWORD PTR [ebp-0x14]
  44292d:	jne    0x4428d4
  44292f:	mov    eax,DWORD PTR [ebp+0x8]
  442932:	and    eax,0x7
  442935:	test   eax,eax
  442937:	je     0x442971
  442939:	mov    eax,DWORD PTR [ebp-0x4]
  44293c:	lea    ecx,[eax+0x40]
  44293f:	mov    eax,DWORD PTR [ebp-0x4]
  442942:	lea    edx,[eax+0x40]
  442945:	mov    eax,DWORD PTR [ebp-0x4]
  442948:	mov    edi,DWORD PTR [eax]
  44294a:	call   DWORD PTR [edi+0x6c]
  44294d:	mov    ecx,DWORD PTR [ebp+0x8]
  442950:	and    ecx,0x7
  442953:	mov    edi,ebx
  442955:	mov    edx,edi
  442957:	mov    eax,esi
  442959:	call   0x403090
  44295e:	mov    ecx,DWORD PTR [ebp+0x8]
  442961:	and    ecx,0x7
  442964:	mov    eax,DWORD PTR [ebp-0x4]
  442967:	lea    edx,[eax+0x40]
  44296a:	mov    eax,edi
  44296c:	call   0x442358
  442971:	pop    edi
  442972:	pop    esi
  442973:	pop    ebx
  442974:	mov    esp,ebp
  442976:	pop    ebp
  442977:	ret    0x4
  44297a:	add    BYTE PTR [eax],al
  44297c:	(bad)  
  44297d:	(bad)  
  44297e:	(bad)  
  44297f:	call   DWORD PTR [esi]
  442981:	add    BYTE PTR [eax],al
  442983:	add    BYTE PTR [ebx+0x69],al
  442986:	jo     0x4429f0
  442988:	gs jb  0x4429ab
  44298b:	outs   dx,BYTE PTR ds:[esi]
  44298c:	outs   dx,DWORD PTR ds:[esi]
  44298d:	je     0x4429af
  44298f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442996:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44299d:	mov    ebp,esp
  44299f:	add    esp,0xffffffec
  4429a2:	push   ebx
  4429a3:	push   esi
  4429a4:	push   edi
  4429a5:	mov    DWORD PTR [ebp-0x4],ecx
  4429a8:	mov    ebx,eax
  4429aa:	cmp    BYTE PTR [ebx+0x30],0x0
  4429ae:	jne    0x4429c6
  4429b0:	mov    ecx,0x442a20
  4429b5:	mov    dl,0x1
  4429b7:	mov    eax,ds:0x441af8
  4429bc:	call   0x40c8b4
  4429c1:	call   0x4048fc
  4429c6:	mov    DWORD PTR [ebp-0x8],edx
  4429c9:	mov    esi,DWORD PTR [ebp-0x4]
  4429cc:	mov    eax,DWORD PTR [ebp+0x8]
  4429cf:	test   eax,eax
  4429d1:	jbe    0x442a0d
  4429d3:	mov    DWORD PTR [ebp-0x14],eax
  4429d6:	lea    ecx,[ebp-0x10]
  4429d9:	lea    edx,[ebx+0x40]
  4429dc:	mov    eax,ebx
  4429de:	mov    edi,DWORD PTR [eax]
  4429e0:	call   DWORD PTR [edi+0x6c]
  4429e3:	mov    eax,DWORD PTR [ebp-0x8]
  4429e6:	movzx  eax,BYTE PTR [eax]
  4429e9:	xor    al,BYTE PTR [ebp-0x10]
  4429ec:	mov    BYTE PTR [esi],al
  4429ee:	lea    edx,[ebx+0x40]
  4429f1:	lea    eax,[ebx+0x41]
  4429f4:	mov    ecx,0x7
  4429f9:	call   0x403090
  4429fe:	movzx  eax,BYTE PTR [esi]
  442a01:	mov    BYTE PTR [ebx+0x47],al
  442a04:	inc    DWORD PTR [ebp-0x8]
  442a07:	inc    esi
  442a08:	dec    DWORD PTR [ebp-0x14]
  442a0b:	jne    0x4429d6
  442a0d:	pop    edi
  442a0e:	pop    esi
  442a0f:	pop    ebx
  442a10:	mov    esp,ebp
  442a12:	pop    ebp
  442a13:	ret    0x4
  442a16:	add    BYTE PTR [eax],al
  442a18:	(bad)  
  442a19:	(bad)  
  442a1a:	(bad)  
  442a1b:	call   DWORD PTR [esi]
  442a1d:	add    BYTE PTR [eax],al
  442a1f:	add    BYTE PTR [ebx+0x69],al
  442a22:	jo     0x442a8c
  442a24:	gs jb  0x442a47
  442a27:	outs   dx,BYTE PTR ds:[esi]
  442a28:	outs   dx,DWORD PTR ds:[esi]
  442a29:	je     0x442a4b
  442a2b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442a32:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442a39:	mov    ebp,esp
  442a3b:	add    esp,0xffffffe8
  442a3e:	push   ebx
  442a3f:	push   esi
  442a40:	push   edi
  442a41:	mov    DWORD PTR [ebp-0x4],ecx
  442a44:	mov    ebx,eax
  442a46:	cmp    BYTE PTR [ebx+0x30],0x0
  442a4a:	jne    0x442a62
  442a4c:	mov    ecx,0x442ac4
  442a51:	mov    dl,0x1
  442a53:	mov    eax,ds:0x441af8
  442a58:	call   0x40c8b4
  442a5d:	call   0x4048fc
  442a62:	mov    esi,edx
  442a64:	mov    eax,DWORD PTR [ebp-0x4]
  442a67:	mov    DWORD PTR [ebp-0x8],eax
  442a6a:	mov    eax,DWORD PTR [ebp+0x8]
  442a6d:	test   eax,eax
  442a6f:	jbe    0x442ab2
  442a71:	mov    DWORD PTR [ebp-0x18],eax
  442a74:	movzx  eax,BYTE PTR [esi]
  442a77:	mov    BYTE PTR [ebp-0x9],al
  442a7a:	lea    ecx,[ebp-0x11]
  442a7d:	lea    edx,[ebx+0x40]
  442a80:	mov    eax,ebx
  442a82:	mov    edi,DWORD PTR [eax]
  442a84:	call   DWORD PTR [edi+0x6c]
  442a87:	movzx  eax,BYTE PTR [esi]
  442a8a:	xor    al,BYTE PTR [ebp-0x11]
  442a8d:	mov    edx,DWORD PTR [ebp-0x8]
  442a90:	mov    BYTE PTR [edx],al
  442a92:	lea    edx,[ebx+0x40]
  442a95:	lea    eax,[ebx+0x41]
  442a98:	mov    ecx,0x7
  442a9d:	call   0x403090
  442aa2:	movzx  eax,BYTE PTR [ebp-0x9]
  442aa6:	mov    BYTE PTR [ebx+0x47],al
  442aa9:	inc    esi
  442aaa:	inc    DWORD PTR [ebp-0x8]
  442aad:	dec    DWORD PTR [ebp-0x18]
  442ab0:	jne    0x442a74
  442ab2:	pop    edi
  442ab3:	pop    esi
  442ab4:	pop    ebx
  442ab5:	mov    esp,ebp
  442ab7:	pop    ebp
  442ab8:	ret    0x4
  442abb:	add    bh,bh
  442abd:	(bad)  
  442abe:	(bad)  
  442abf:	call   DWORD PTR [esi]
  442ac1:	add    BYTE PTR [eax],al
  442ac3:	add    BYTE PTR [ebx+0x69],al
  442ac6:	jo     0x442b30
  442ac8:	gs jb  0x442aeb
  442acb:	outs   dx,BYTE PTR ds:[esi]
  442acc:	outs   dx,DWORD PTR ds:[esi]
  442acd:	je     0x442aef
  442acf:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442ad6:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442add:	mov    ebp,esp
  442adf:	add    esp,0xfffffff4
  442ae2:	push   ebx
  442ae3:	push   esi
  442ae4:	push   edi
  442ae5:	mov    DWORD PTR [ebp-0x4],ecx
  442ae8:	mov    ebx,eax
  442aea:	cmp    BYTE PTR [ebx+0x30],0x0
  442aee:	jne    0x442b06
  442af0:	mov    ecx,0x442bb0
  442af5:	mov    dl,0x1
  442af7:	mov    eax,ds:0x441af8
  442afc:	call   0x40c8b4
  442b01:	call   0x4048fc
  442b06:	mov    DWORD PTR [ebp-0x8],edx
  442b09:	mov    esi,DWORD PTR [ebp-0x4]
  442b0c:	mov    eax,DWORD PTR [ebp+0x8]
  442b0f:	shr    eax,0x3
  442b12:	test   eax,eax
  442b14:	jbe    0x442b66
  442b16:	mov    DWORD PTR [ebp-0xc],eax
  442b19:	lea    ecx,[ebx+0x40]
  442b1c:	lea    edx,[ebx+0x40]
  442b1f:	mov    eax,ebx
  442b21:	mov    edi,DWORD PTR [eax]
  442b23:	call   DWORD PTR [edi+0x6c]
  442b26:	mov    edi,esi
  442b28:	mov    edx,edi
  442b2a:	mov    eax,DWORD PTR [ebp-0x8]
  442b2d:	mov    ecx,0x8
  442b32:	call   0x403090
  442b37:	lea    edx,[ebx+0x40]
  442b3a:	mov    eax,edi
  442b3c:	mov    ecx,0x8
  442b41:	call   0x442358
  442b46:	lea    edx,[ebx+0x40]
  442b49:	mov    eax,edi
  442b4b:	mov    ecx,0x8
  442b50:	call   0x403090
  442b55:	mov    eax,DWORD PTR [ebp-0x8]
  442b58:	add    eax,0x8
  442b5b:	mov    DWORD PTR [ebp-0x8],eax
  442b5e:	add    esi,0x8
  442b61:	dec    DWORD PTR [ebp-0xc]
  442b64:	jne    0x442b19
  442b66:	mov    eax,DWORD PTR [ebp+0x8]
  442b69:	and    eax,0x7
  442b6c:	test   eax,eax
  442b6e:	je     0x442b9f
  442b70:	lea    ecx,[ebx+0x40]
  442b73:	lea    edx,[ebx+0x40]
  442b76:	mov    eax,ebx
  442b78:	mov    edi,DWORD PTR [eax]
  442b7a:	call   DWORD PTR [edi+0x6c]
  442b7d:	mov    ecx,DWORD PTR [ebp+0x8]
  442b80:	and    ecx,0x7
  442b83:	mov    edi,esi
  442b85:	mov    edx,edi
  442b87:	mov    eax,DWORD PTR [ebp-0x8]
  442b8a:	call   0x403090
  442b8f:	mov    ecx,DWORD PTR [ebp+0x8]
  442b92:	and    ecx,0x7
  442b95:	lea    edx,[ebx+0x40]
  442b98:	mov    eax,edi
  442b9a:	call   0x442358
  442b9f:	pop    edi
  442ba0:	pop    esi
  442ba1:	pop    ebx
  442ba2:	mov    esp,ebp
  442ba4:	pop    ebp
  442ba5:	ret    0x4
  442ba8:	(bad)  
  442ba9:	(bad)  
  442baa:	(bad)  
  442bab:	call   DWORD PTR [esi]
  442bad:	add    BYTE PTR [eax],al
  442baf:	add    BYTE PTR [ebx+0x69],al
  442bb2:	jo     0x442c1c
  442bb4:	gs jb  0x442bd7
  442bb7:	outs   dx,BYTE PTR ds:[esi]
  442bb8:	outs   dx,DWORD PTR ds:[esi]
  442bb9:	je     0x442bdb
  442bbb:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442bc2:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442bc9:	mov    ebp,esp
  442bcb:	add    esp,0xffffffec
  442bce:	push   ebx
  442bcf:	push   esi
  442bd0:	push   edi
  442bd1:	mov    DWORD PTR [ebp-0x4],ecx
  442bd4:	mov    ebx,eax
  442bd6:	cmp    BYTE PTR [ebx+0x30],0x0
  442bda:	jne    0x442bf2
  442bdc:	mov    ecx,0x442cb0
  442be1:	mov    dl,0x1
  442be3:	mov    eax,ds:0x441af8
  442be8:	call   0x40c8b4
  442bed:	call   0x4048fc
  442bf2:	mov    DWORD PTR [ebp-0x8],edx
  442bf5:	mov    esi,DWORD PTR [ebp-0x4]
  442bf8:	mov    eax,DWORD PTR [ebp+0x8]
  442bfb:	shr    eax,0x3
  442bfe:	test   eax,eax
  442c00:	jbe    0x442c63
  442c02:	mov    DWORD PTR [ebp-0x14],eax
  442c05:	lea    edx,[ebp-0x10]
  442c08:	mov    eax,DWORD PTR [ebp-0x8]
  442c0b:	mov    ecx,0x8
  442c10:	call   0x403090
  442c15:	lea    ecx,[ebx+0x40]
  442c18:	lea    edx,[ebx+0x40]
  442c1b:	mov    eax,ebx
  442c1d:	mov    edi,DWORD PTR [eax]
  442c1f:	call   DWORD PTR [edi+0x6c]
  442c22:	mov    edi,esi
  442c24:	mov    edx,edi
  442c26:	mov    eax,DWORD PTR [ebp-0x8]
  442c29:	mov    ecx,0x8
  442c2e:	call   0x403090
  442c33:	lea    edx,[ebx+0x40]
  442c36:	mov    eax,edi
  442c38:	mov    ecx,0x8
  442c3d:	call   0x442358
  442c42:	lea    edx,[ebx+0x40]
  442c45:	lea    eax,[ebp-0x10]
  442c48:	mov    ecx,0x8
  442c4d:	call   0x403090
  442c52:	mov    eax,DWORD PTR [ebp-0x8]
  442c55:	add    eax,0x8
  442c58:	mov    DWORD PTR [ebp-0x8],eax
  442c5b:	add    esi,0x8
  442c5e:	dec    DWORD PTR [ebp-0x14]
  442c61:	jne    0x442c05
  442c63:	mov    eax,DWORD PTR [ebp+0x8]
  442c66:	and    eax,0x7
  442c69:	test   eax,eax
  442c6b:	je     0x442c9c
  442c6d:	lea    ecx,[ebx+0x40]
  442c70:	lea    edx,[ebx+0x40]
  442c73:	mov    eax,ebx
  442c75:	mov    edi,DWORD PTR [eax]
  442c77:	call   DWORD PTR [edi+0x6c]
  442c7a:	mov    ecx,DWORD PTR [ebp+0x8]
  442c7d:	and    ecx,0x7
  442c80:	mov    edi,esi
  442c82:	mov    edx,edi
  442c84:	mov    eax,DWORD PTR [ebp-0x8]
  442c87:	call   0x403090
  442c8c:	mov    ecx,DWORD PTR [ebp+0x8]
  442c8f:	and    ecx,0x7
  442c92:	lea    edx,[ebx+0x40]
  442c95:	mov    eax,edi
  442c97:	call   0x442358
  442c9c:	pop    edi
  442c9d:	pop    esi
  442c9e:	pop    ebx
  442c9f:	mov    esp,ebp
  442ca1:	pop    ebp
  442ca2:	ret    0x4
  442ca5:	add    BYTE PTR [eax],al
  442ca7:	add    bh,bh
  442ca9:	(bad)  
  442caa:	(bad)  
  442cab:	call   DWORD PTR [esi]
  442cad:	add    BYTE PTR [eax],al
  442caf:	add    BYTE PTR [ebx+0x69],al
  442cb2:	jo     0x442d1c
  442cb4:	gs jb  0x442cd7
  442cb7:	outs   dx,BYTE PTR ds:[esi]
  442cb8:	outs   dx,DWORD PTR ds:[esi]
  442cb9:	je     0x442cdb
  442cbb:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442cc2:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442cc9:	mov    ebp,esp
  442ccb:	add    esp,0xfffffff4
  442cce:	push   ebx
  442ccf:	push   esi
  442cd0:	push   edi
  442cd1:	mov    DWORD PTR [ebp-0x4],ecx
  442cd4:	mov    ebx,eax
  442cd6:	cmp    BYTE PTR [ebx+0x30],0x0
  442cda:	jne    0x442cf2
  442cdc:	mov    ecx,0x442d90
  442ce1:	mov    dl,0x1
  442ce3:	mov    eax,ds:0x441af8
  442ce8:	call   0x40c8b4
  442ced:	call   0x4048fc
  442cf2:	mov    DWORD PTR [ebp-0x8],edx
  442cf5:	mov    esi,DWORD PTR [ebp-0x4]
  442cf8:	mov    eax,DWORD PTR [ebp+0x8]
  442cfb:	shr    eax,0x3
  442cfe:	test   eax,eax
  442d00:	jbe    0x442d43
  442d02:	mov    DWORD PTR [ebp-0xc],eax
  442d05:	lea    ecx,[ebx+0x40]
  442d08:	lea    edx,[ebx+0x40]
  442d0b:	mov    eax,ebx
  442d0d:	mov    edi,DWORD PTR [eax]
  442d0f:	call   DWORD PTR [edi+0x6c]
  442d12:	mov    edi,esi
  442d14:	mov    edx,edi
  442d16:	mov    eax,DWORD PTR [ebp-0x8]
  442d19:	mov    ecx,0x8
  442d1e:	call   0x403090
  442d23:	lea    edx,[ebx+0x40]
  442d26:	mov    eax,edi
  442d28:	mov    ecx,0x8
  442d2d:	call   0x442358
  442d32:	mov    eax,DWORD PTR [ebp-0x8]
  442d35:	add    eax,0x8
  442d38:	mov    DWORD PTR [ebp-0x8],eax
  442d3b:	add    esi,0x8
  442d3e:	dec    DWORD PTR [ebp-0xc]
  442d41:	jne    0x442d05
  442d43:	mov    eax,DWORD PTR [ebp+0x8]
  442d46:	and    eax,0x7
  442d49:	test   eax,eax
  442d4b:	je     0x442d7c
  442d4d:	lea    ecx,[ebx+0x40]
  442d50:	lea    edx,[ebx+0x40]
  442d53:	mov    eax,ebx
  442d55:	mov    edi,DWORD PTR [eax]
  442d57:	call   DWORD PTR [edi+0x6c]
  442d5a:	mov    ecx,DWORD PTR [ebp+0x8]
  442d5d:	and    ecx,0x7
  442d60:	mov    edi,esi
  442d62:	mov    edx,edi
  442d64:	mov    eax,DWORD PTR [ebp-0x8]
  442d67:	call   0x403090
  442d6c:	mov    ecx,DWORD PTR [ebp+0x8]
  442d6f:	and    ecx,0x7
  442d72:	lea    edx,[ebx+0x40]
  442d75:	mov    eax,edi
  442d77:	call   0x442358
  442d7c:	pop    edi
  442d7d:	pop    esi
  442d7e:	pop    ebx
  442d7f:	mov    esp,ebp
  442d81:	pop    ebp
  442d82:	ret    0x4
  442d85:	add    BYTE PTR [eax],al
  442d87:	add    bh,bh
  442d89:	(bad)  
  442d8a:	(bad)  
  442d8b:	call   DWORD PTR [esi]
  442d8d:	add    BYTE PTR [eax],al
  442d8f:	add    BYTE PTR [ebx+0x69],al
  442d92:	jo     0x442dfc
  442d94:	gs jb  0x442db7
  442d97:	outs   dx,BYTE PTR ds:[esi]
  442d98:	outs   dx,DWORD PTR ds:[esi]
  442d99:	je     0x442dbb
  442d9b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442da2:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442da9:	mov    ebp,esp
  442dab:	add    esp,0xfffffff4
  442dae:	push   ebx
  442daf:	push   esi
  442db0:	push   edi
  442db1:	mov    DWORD PTR [ebp-0x4],ecx
  442db4:	mov    ebx,eax
  442db6:	cmp    BYTE PTR [ebx+0x30],0x0
  442dba:	jne    0x442dd2
  442dbc:	mov    ecx,0x442e70
  442dc1:	mov    dl,0x1
  442dc3:	mov    eax,ds:0x441af8
  442dc8:	call   0x40c8b4
  442dcd:	call   0x4048fc
  442dd2:	mov    DWORD PTR [ebp-0x8],edx
  442dd5:	mov    esi,DWORD PTR [ebp-0x4]
  442dd8:	mov    eax,DWORD PTR [ebp+0x8]
  442ddb:	shr    eax,0x3
  442dde:	test   eax,eax
  442de0:	jbe    0x442e23
  442de2:	mov    DWORD PTR [ebp-0xc],eax
  442de5:	lea    ecx,[ebx+0x40]
  442de8:	lea    edx,[ebx+0x40]
  442deb:	mov    eax,ebx
  442ded:	mov    edi,DWORD PTR [eax]
  442def:	call   DWORD PTR [edi+0x6c]
  442df2:	mov    edi,esi
  442df4:	mov    edx,edi
  442df6:	mov    eax,DWORD PTR [ebp-0x8]
  442df9:	mov    ecx,0x8
  442dfe:	call   0x403090
  442e03:	lea    edx,[ebx+0x40]
  442e06:	mov    eax,edi
  442e08:	mov    ecx,0x8
  442e0d:	call   0x442358
  442e12:	mov    eax,DWORD PTR [ebp-0x8]
  442e15:	add    eax,0x8
  442e18:	mov    DWORD PTR [ebp-0x8],eax
  442e1b:	add    esi,0x8
  442e1e:	dec    DWORD PTR [ebp-0xc]
  442e21:	jne    0x442de5
  442e23:	mov    eax,DWORD PTR [ebp+0x8]
  442e26:	and    eax,0x7
  442e29:	test   eax,eax
  442e2b:	je     0x442e5c
  442e2d:	lea    ecx,[ebx+0x40]
  442e30:	lea    edx,[ebx+0x40]
  442e33:	mov    eax,ebx
  442e35:	mov    edi,DWORD PTR [eax]
  442e37:	call   DWORD PTR [edi+0x6c]
  442e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  442e3d:	and    ecx,0x7
  442e40:	mov    edi,esi
  442e42:	mov    edx,edi
  442e44:	mov    eax,DWORD PTR [ebp-0x8]
  442e47:	call   0x403090
  442e4c:	mov    ecx,DWORD PTR [ebp+0x8]
  442e4f:	and    ecx,0x7
  442e52:	lea    edx,[ebx+0x40]
  442e55:	mov    eax,edi
  442e57:	call   0x442358
  442e5c:	pop    edi
  442e5d:	pop    esi
  442e5e:	pop    ebx
  442e5f:	mov    esp,ebp
  442e61:	pop    ebp
  442e62:	ret    0x4
  442e65:	add    BYTE PTR [eax],al
  442e67:	add    bh,bh
  442e69:	(bad)  
  442e6a:	(bad)  
  442e6b:	call   DWORD PTR [esi]
  442e6d:	add    BYTE PTR [eax],al
  442e6f:	add    BYTE PTR [ebx+0x69],al
  442e72:	jo     0x442edc
  442e74:	gs jb  0x442e97
  442e77:	outs   dx,BYTE PTR ds:[esi]
  442e78:	outs   dx,DWORD PTR ds:[esi]
  442e79:	je     0x442e9b
  442e7b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442e82:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442e89:	mov    ebp,esp
  442e8b:	add    esp,0xffffffec
  442e8e:	push   ebx
  442e8f:	push   esi
  442e90:	push   edi
  442e91:	mov    DWORD PTR [ebp-0x8],ecx
  442e94:	mov    DWORD PTR [ebp-0x4],eax
  442e97:	mov    eax,DWORD PTR [ebp-0x4]
  442e9a:	cmp    BYTE PTR [eax+0x30],0x0
  442e9e:	jne    0x442eb6
  442ea0:	mov    ecx,0x442f60
  442ea5:	mov    dl,0x1
  442ea7:	mov    eax,ds:0x441af8
  442eac:	call   0x40c8b4
  442eb1:	call   0x4048fc
  442eb6:	mov    esi,edx
  442eb8:	mov    ebx,DWORD PTR [ebp-0x8]
  442ebb:	mov    eax,DWORD PTR [ebp+0x8]
  442ebe:	shr    eax,0x3
  442ec1:	test   eax,eax
  442ec3:	jbe    0x442f0b
  442ec5:	mov    DWORD PTR [ebp-0x14],eax
  442ec8:	lea    ecx,[ebp-0x10]
  442ecb:	mov    eax,DWORD PTR [ebp-0x4]
  442ece:	lea    edx,[eax+0x40]
  442ed1:	mov    eax,DWORD PTR [ebp-0x4]
  442ed4:	mov    edi,DWORD PTR [eax]
  442ed6:	call   DWORD PTR [edi+0x6c]
  442ed9:	mov    eax,DWORD PTR [ebp-0x4]
  442edc:	call   0x4425e4
  442ee1:	mov    edi,ebx
  442ee3:	mov    edx,edi
  442ee5:	mov    eax,esi
  442ee7:	mov    ecx,0x8
  442eec:	call   0x403090
  442ef1:	lea    edx,[ebp-0x10]
  442ef4:	mov    eax,edi
  442ef6:	mov    ecx,0x8
  442efb:	call   0x442358
  442f00:	add    esi,0x8
  442f03:	add    ebx,0x8
  442f06:	dec    DWORD PTR [ebp-0x14]
  442f09:	jne    0x442ec8
  442f0b:	mov    eax,DWORD PTR [ebp+0x8]
  442f0e:	and    eax,0x7
  442f11:	test   eax,eax
  442f13:	je     0x442f4f
  442f15:	lea    ecx,[ebp-0x10]
  442f18:	mov    eax,DWORD PTR [ebp-0x4]
  442f1b:	lea    edx,[eax+0x40]
  442f1e:	mov    eax,DWORD PTR [ebp-0x4]
  442f21:	mov    edi,DWORD PTR [eax]
  442f23:	call   DWORD PTR [edi+0x6c]
  442f26:	mov    eax,DWORD PTR [ebp-0x4]
  442f29:	call   0x4425e4
  442f2e:	mov    ecx,DWORD PTR [ebp+0x8]
  442f31:	and    ecx,0x7
  442f34:	mov    edi,ebx
  442f36:	mov    edx,edi
  442f38:	mov    eax,esi
  442f3a:	call   0x403090
  442f3f:	mov    ecx,DWORD PTR [ebp+0x8]
  442f42:	and    ecx,0x7
  442f45:	lea    edx,[ebp-0x10]
  442f48:	mov    eax,edi
  442f4a:	call   0x442358
  442f4f:	pop    edi
  442f50:	pop    esi
  442f51:	pop    ebx
  442f52:	mov    esp,ebp
  442f54:	pop    ebp
  442f55:	ret    0x4
  442f58:	(bad)  
  442f59:	(bad)  
  442f5a:	(bad)  
  442f5b:	call   DWORD PTR [esi]
  442f5d:	add    BYTE PTR [eax],al
  442f5f:	add    BYTE PTR [ebx+0x69],al
  442f62:	jo     0x442fcc
  442f64:	gs jb  0x442f87
  442f67:	outs   dx,BYTE PTR ds:[esi]
  442f68:	outs   dx,DWORD PTR ds:[esi]
  442f69:	je     0x442f8b
  442f6b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  442f72:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  442f79:	mov    ebp,esp
  442f7b:	add    esp,0xffffffec
  442f7e:	push   ebx
  442f7f:	push   esi
  442f80:	push   edi
  442f81:	mov    DWORD PTR [ebp-0x8],ecx
  442f84:	mov    DWORD PTR [ebp-0x4],eax
  442f87:	mov    eax,DWORD PTR [ebp-0x4]
  442f8a:	cmp    BYTE PTR [eax+0x30],0x0
  442f8e:	jne    0x442fa6
  442f90:	mov    ecx,0x443050
  442f95:	mov    dl,0x1
  442f97:	mov    eax,ds:0x441af8
  442f9c:	call   0x40c8b4
  442fa1:	call   0x4048fc
  442fa6:	mov    esi,edx
  442fa8:	mov    ebx,DWORD PTR [ebp-0x8]
  442fab:	mov    eax,DWORD PTR [ebp+0x8]
  442fae:	shr    eax,0x3
  442fb1:	test   eax,eax
  442fb3:	jbe    0x442ffb
  442fb5:	mov    DWORD PTR [ebp-0x14],eax
  442fb8:	lea    ecx,[ebp-0x10]
  442fbb:	mov    eax,DWORD PTR [ebp-0x4]
  442fbe:	lea    edx,[eax+0x40]
  442fc1:	mov    eax,DWORD PTR [ebp-0x4]
  442fc4:	mov    edi,DWORD PTR [eax]
  442fc6:	call   DWORD PTR [edi+0x6c]
  442fc9:	mov    eax,DWORD PTR [ebp-0x4]
  442fcc:	call   0x4425e4
  442fd1:	mov    edi,ebx
  442fd3:	mov    edx,edi
  442fd5:	mov    eax,esi
  442fd7:	mov    ecx,0x8
  442fdc:	call   0x403090
  442fe1:	lea    edx,[ebp-0x10]
  442fe4:	mov    eax,edi
  442fe6:	mov    ecx,0x8
  442feb:	call   0x442358
  442ff0:	add    esi,0x8
  442ff3:	add    ebx,0x8
  442ff6:	dec    DWORD PTR [ebp-0x14]
  442ff9:	jne    0x442fb8
  442ffb:	mov    eax,DWORD PTR [ebp+0x8]
  442ffe:	and    eax,0x7
  443001:	test   eax,eax
  443003:	je     0x44303f
  443005:	lea    ecx,[ebp-0x10]
  443008:	mov    eax,DWORD PTR [ebp-0x4]
  44300b:	lea    edx,[eax+0x40]
  44300e:	mov    eax,DWORD PTR [ebp-0x4]
  443011:	mov    edi,DWORD PTR [eax]
  443013:	call   DWORD PTR [edi+0x6c]
  443016:	mov    eax,DWORD PTR [ebp-0x4]
  443019:	call   0x4425e4
  44301e:	mov    ecx,DWORD PTR [ebp+0x8]
  443021:	and    ecx,0x7
  443024:	mov    edi,ebx
  443026:	mov    edx,edi
  443028:	mov    eax,esi
  44302a:	call   0x403090
  44302f:	mov    ecx,DWORD PTR [ebp+0x8]
  443032:	and    ecx,0x7
  443035:	lea    edx,[ebp-0x10]
  443038:	mov    eax,edi
  44303a:	call   0x442358
  44303f:	pop    edi
  443040:	pop    esi
  443041:	pop    ebx
  443042:	mov    esp,ebp
  443044:	pop    ebp
  443045:	ret    0x4
  443048:	(bad)  
  443049:	(bad)  
  44304a:	(bad)  
  44304b:	call   DWORD PTR [esi]
  44304d:	add    BYTE PTR [eax],al
  44304f:	add    BYTE PTR [ebx+0x69],al
  443052:	jo     0x4430bc
  443054:	gs jb  0x443077
  443057:	outs   dx,BYTE PTR ds:[esi]
  443058:	outs   dx,DWORD PTR ds:[esi]
  443059:	je     0x44307b
  44305b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443062:	imul   edi,DWORD PTR [edx+0x65],0xfe000064
  443069:	inc    eax
  44306a:	push   edi
  44306b:	mov    edx,0xf
  443070:	jmp    0x443077
  443072:	inc    BYTE PTR [eax+edx*1+0x47]
  443076:	dec    edx
  443077:	test   edx,edx
  443079:	jle    0x443082
  44307b:	cmp    BYTE PTR [eax+edx*1+0x48],0x0
  443080:	je     0x443072
  443082:	ret    
  443083:	nop
  443084:	mov    eax,0x80
  443089:	ret    
  44308a:	mov    eax,eax
  44308c:	push   ebp
  44308d:	mov    ebp,esp
  44308f:	push   ecx
  443090:	push   ebx
  443091:	push   esi
  443092:	push   edi
  443093:	mov    DWORD PTR [ebp-0x4],ecx
  443096:	mov    edi,edx
  443098:	mov    ebx,eax
  44309a:	mov    esi,DWORD PTR [ebp+0x8]
  44309d:	push   esi
  44309e:	mov    edx,edi
  4430a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4430a3:	mov    eax,ebx
  4430a5:	call   0x441e00
  4430aa:	mov    edx,edi
  4430ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4430af:	mov    eax,ebx
  4430b1:	mov    edi,DWORD PTR [eax]
  4430b3:	call   DWORD PTR [edi+0x5c]
  4430b6:	test   esi,esi
  4430b8:	jne    0x4430df
  4430ba:	lea    eax,[ebx+0x38]
  4430bd:	xor    ecx,ecx
  4430bf:	mov    edx,0x10
  4430c4:	call   0x4037c8
  4430c9:	lea    ecx,[ebx+0x38]
  4430cc:	lea    edx,[ebx+0x38]
  4430cf:	mov    eax,ebx
  4430d1:	mov    esi,DWORD PTR [eax]
  4430d3:	call   DWORD PTR [esi+0x6c]
  4430d6:	mov    eax,ebx
  4430d8:	mov    edx,DWORD PTR [eax]
  4430da:	call   DWORD PTR [edx+0x48]
  4430dd:	jmp    0x4430f5
  4430df:	lea    edx,[ebx+0x38]
  4430e2:	mov    eax,esi
  4430e4:	mov    ecx,0x10
  4430e9:	call   0x403090
  4430ee:	mov    eax,ebx
  4430f0:	mov    edx,DWORD PTR [eax]
  4430f2:	call   DWORD PTR [edx+0x48]
  4430f5:	pop    edi
  4430f6:	pop    esi
  4430f7:	pop    ebx
  4430f8:	pop    ecx
  4430f9:	pop    ebp
  4430fa:	ret    0x4
  4430fd:	lea    eax,[eax+0x0]
  443100:	push   ebx
  443101:	mov    ebx,eax
  443103:	cmp    BYTE PTR [ebx+0x30],0x0
  443107:	jne    0x44311f
  443109:	mov    ecx,0x443140
  44310e:	mov    dl,0x1
  443110:	mov    eax,ds:0x441af8
  443115:	call   0x40c8b4
  44311a:	call   0x4048fc
  44311f:	mov    eax,edx
  443121:	lea    edx,[ebx+0x38]
  443124:	mov    ecx,0x10
  443129:	call   0x403090
  44312e:	mov    eax,ebx
  443130:	mov    edx,DWORD PTR [eax]
  443132:	call   DWORD PTR [edx+0x48]
  443135:	pop    ebx
  443136:	ret    
  443137:	add    bh,bh
  443139:	(bad)  
  44313a:	(bad)  
  44313b:	call   DWORD PTR [esi]
  44313d:	add    BYTE PTR [eax],al
  44313f:	add    BYTE PTR [ebx+0x69],al
  443142:	jo     0x4431ac
  443144:	gs jb  0x443167
  443147:	outs   dx,BYTE PTR ds:[esi]
  443148:	outs   dx,DWORD PTR ds:[esi]
  443149:	je     0x44316b
  44314b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443152:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  443159:	js     0x44318b
  44315b:	add    BYTE PTR [ebp+0x16],dh
  44315e:	mov    ecx,0x44318c
  443163:	mov    dl,0x1
  443165:	mov    eax,ds:0x441af8
  44316a:	call   0x40c8b4
  44316f:	call   0x4048fc
  443174:	add    eax,0x48
  443177:	mov    ecx,0x10
  44317c:	call   0x403090
  443181:	ret    
  443182:	add    BYTE PTR [eax],al
  443184:	(bad)  
  443185:	(bad)  
  443186:	(bad)  
  443187:	call   DWORD PTR [esi]
  443189:	add    BYTE PTR [eax],al
  44318b:	add    BYTE PTR [ebx+0x69],al
  44318e:	jo     0x4431f8
  443190:	gs jb  0x4431b3
  443193:	outs   dx,BYTE PTR ds:[esi]
  443194:	outs   dx,DWORD PTR ds:[esi]
  443195:	je     0x4431b7
  443197:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44319e:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  4431a5:	js     0x4431d7
  4431a7:	add    BYTE PTR [ebp+0x17],dh
  4431aa:	mov    ecx,0x4431dc
  4431af:	mov    dl,0x1
  4431b1:	mov    eax,ds:0x441af8
  4431b6:	call   0x40c8b4
  4431bb:	call   0x4048fc
  4431c0:	ret    
  4431c1:	lea    edx,[eax+0x48]
  4431c4:	add    eax,0x38
  4431c7:	mov    ecx,0x10
  4431cc:	call   0x403090
  4431d1:	ret    
  4431d2:	add    BYTE PTR [eax],al
  4431d4:	(bad)  
  4431d5:	(bad)  
  4431d6:	(bad)  
  4431d7:	call   DWORD PTR [esi]
  4431d9:	add    BYTE PTR [eax],al
  4431db:	add    BYTE PTR [ebx+0x69],al
  4431de:	jo     0x443248
  4431e0:	gs jb  0x443203
  4431e3:	outs   dx,BYTE PTR ds:[esi]
  4431e4:	outs   dx,DWORD PTR ds:[esi]
  4431e5:	je     0x443207
  4431e7:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4431ee:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  4431f5:	mov    ebx,eax
  4431f7:	lea    eax,[ebx+0x38]
  4431fa:	mov    ecx,0xff
  4431ff:	mov    edx,0x10
  443204:	call   0x4037c8
  443209:	lea    eax,[ebx+0x48]
  44320c:	mov    ecx,0xff
  443211:	mov    edx,0x10
  443216:	call   0x4037c8
  44321b:	mov    eax,ebx
  44321d:	call   0x441e6c
  443222:	pop    ebx
  443223:	ret    
  443224:	push   ebp
  443225:	mov    ebp,esp
  443227:	add    esp,0xfffffff4
  44322a:	push   ebx
  44322b:	push   esi
  44322c:	push   edi
  44322d:	mov    DWORD PTR [ebp-0x4],eax
  443230:	mov    eax,DWORD PTR [ebp-0x4]
  443233:	cmp    BYTE PTR [eax+0x30],0x0
  443237:	jne    0x44324f
  443239:	mov    ecx,0x443300
  44323e:	mov    dl,0x1
  443240:	mov    eax,ds:0x441af8
  443245:	call   0x40c8b4
  44324a:	call   0x4048fc
  44324f:	mov    DWORD PTR [ebp-0x8],edx
  443252:	mov    ebx,ecx
  443254:	mov    eax,DWORD PTR [ebp+0x8]
  443257:	shr    eax,0x4
  44325a:	test   eax,eax
  44325c:	jbe    0x4432b3
  44325e:	mov    DWORD PTR [ebp-0xc],eax
  443261:	mov    esi,ebx
  443263:	mov    edx,esi
  443265:	mov    eax,DWORD PTR [ebp-0x8]
  443268:	mov    ecx,0x10
  44326d:	call   0x403090
  443272:	mov    eax,DWORD PTR [ebp-0x4]
  443275:	lea    edx,[eax+0x48]
  443278:	mov    eax,esi
  44327a:	mov    ecx,0x10
  44327f:	call   0x442358
  443284:	mov    ecx,esi
  443286:	mov    edx,esi
  443288:	mov    eax,DWORD PTR [ebp-0x4]
  44328b:	mov    edi,DWORD PTR [eax]
  44328d:	call   DWORD PTR [edi+0x6c]
  443290:	mov    eax,DWORD PTR [ebp-0x4]
  443293:	lea    edx,[eax+0x48]
  443296:	mov    eax,esi
  443298:	mov    ecx,0x10
  44329d:	call   0x403090
  4432a2:	mov    eax,DWORD PTR [ebp-0x8]
  4432a5:	add    eax,0x10
  4432a8:	mov    DWORD PTR [ebp-0x8],eax
  4432ab:	add    ebx,0x10
  4432ae:	dec    DWORD PTR [ebp-0xc]
  4432b1:	jne    0x443261
  4432b3:	mov    esi,DWORD PTR [ebp+0x8]
  4432b6:	and    esi,0xf
  4432b9:	test   esi,esi
  4432bb:	je     0x4432ee
  4432bd:	mov    eax,DWORD PTR [ebp-0x4]
  4432c0:	lea    ecx,[eax+0x48]
  4432c3:	mov    eax,DWORD PTR [ebp-0x4]
  4432c6:	lea    edx,[eax+0x48]
  4432c9:	mov    eax,DWORD PTR [ebp-0x4]
  4432cc:	mov    edi,DWORD PTR [eax]
  4432ce:	call   DWORD PTR [edi+0x6c]
  4432d1:	mov    ecx,esi
  4432d3:	mov    edi,ebx
  4432d5:	mov    edx,edi
  4432d7:	mov    eax,DWORD PTR [ebp-0x8]
  4432da:	call   0x403090
  4432df:	mov    ecx,esi
  4432e1:	mov    eax,DWORD PTR [ebp-0x4]
  4432e4:	lea    edx,[eax+0x48]
  4432e7:	mov    eax,edi
  4432e9:	call   0x442358
  4432ee:	pop    edi
  4432ef:	pop    esi
  4432f0:	pop    ebx
  4432f1:	mov    esp,ebp
  4432f3:	pop    ebp
  4432f4:	ret    0x4
  4432f7:	add    bh,bh
  4432f9:	(bad)  
  4432fa:	(bad)  
  4432fb:	call   DWORD PTR [esi]
  4432fd:	add    BYTE PTR [eax],al
  4432ff:	add    BYTE PTR [ebx+0x69],al
  443302:	jo     0x44336c
  443304:	gs jb  0x443327
  443307:	outs   dx,BYTE PTR ds:[esi]
  443308:	outs   dx,DWORD PTR ds:[esi]
  443309:	je     0x44332b
  44330b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443312:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  443319:	mov    ebp,esp
  44331b:	add    esp,0xffffffe4
  44331e:	push   ebx
  44331f:	push   esi
  443320:	push   edi
  443321:	mov    DWORD PTR [ebp-0x8],ecx
  443324:	mov    DWORD PTR [ebp-0x4],eax
  443327:	mov    eax,DWORD PTR [ebp-0x4]
  44332a:	cmp    BYTE PTR [eax+0x30],0x0
  44332e:	jne    0x443346
  443330:	mov    ecx,0x443408
  443335:	mov    dl,0x1
  443337:	mov    eax,ds:0x441af8
  44333c:	call   0x40c8b4
  443341:	call   0x4048fc
  443346:	mov    esi,edx
  443348:	mov    ebx,DWORD PTR [ebp-0x8]
  44334b:	mov    eax,DWORD PTR [ebp+0x8]
  44334e:	shr    eax,0x4
  443351:	test   eax,eax
  443353:	jbe    0x4433b3
  443355:	mov    DWORD PTR [ebp-0xc],eax
  443358:	mov    edx,ebx
  44335a:	mov    edi,esi
  44335c:	mov    eax,edi
  44335e:	mov    ecx,0x10
  443363:	call   0x403090
  443368:	lea    edx,[ebp-0x1c]
  44336b:	mov    eax,edi
  44336d:	mov    ecx,0x10
  443372:	call   0x403090
  443377:	mov    ecx,ebx
  443379:	mov    edx,ebx
  44337b:	mov    eax,DWORD PTR [ebp-0x4]
  44337e:	mov    edi,DWORD PTR [eax]
  443380:	call   DWORD PTR [edi+0x70]
  443383:	mov    eax,DWORD PTR [ebp-0x4]
  443386:	lea    edx,[eax+0x48]
  443389:	mov    eax,ebx
  44338b:	mov    ecx,0x10
  443390:	call   0x442358
  443395:	mov    eax,DWORD PTR [ebp-0x4]
  443398:	lea    edx,[eax+0x48]
  44339b:	lea    eax,[ebp-0x1c]
  44339e:	mov    ecx,0x10
  4433a3:	call   0x403090
  4433a8:	add    esi,0x10
  4433ab:	add    ebx,0x10
  4433ae:	dec    DWORD PTR [ebp-0xc]
  4433b1:	jne    0x443358
  4433b3:	mov    eax,DWORD PTR [ebp+0x8]
  4433b6:	and    eax,0xf
  4433b9:	test   eax,eax
  4433bb:	je     0x4433f5
  4433bd:	mov    eax,DWORD PTR [ebp-0x4]
  4433c0:	lea    ecx,[eax+0x48]
  4433c3:	mov    eax,DWORD PTR [ebp-0x4]
  4433c6:	lea    edx,[eax+0x48]
  4433c9:	mov    eax,DWORD PTR [ebp-0x4]
  4433cc:	mov    edi,DWORD PTR [eax]
  4433ce:	call   DWORD PTR [edi+0x6c]
  4433d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4433d4:	and    ecx,0xf
  4433d7:	mov    edi,ebx
  4433d9:	mov    edx,edi
  4433db:	mov    eax,esi
  4433dd:	call   0x403090
  4433e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4433e5:	and    ecx,0xf
  4433e8:	mov    eax,DWORD PTR [ebp-0x4]
  4433eb:	lea    edx,[eax+0x48]
  4433ee:	mov    eax,edi
  4433f0:	call   0x442358
  4433f5:	pop    edi
  4433f6:	pop    esi
  4433f7:	pop    ebx
  4433f8:	mov    esp,ebp
  4433fa:	pop    ebp
  4433fb:	ret    0x4
  4433fe:	add    BYTE PTR [eax],al
  443400:	(bad)  
  443401:	(bad)  
  443402:	(bad)  
  443403:	call   DWORD PTR [esi]
  443405:	add    BYTE PTR [eax],al
  443407:	add    BYTE PTR [ebx+0x69],al
  44340a:	jo     0x443474
  44340c:	gs jb  0x44342f
  44340f:	outs   dx,BYTE PTR ds:[esi]
  443410:	outs   dx,DWORD PTR ds:[esi]
  443411:	je     0x443433
  443413:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44341a:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  443421:	mov    ebp,esp
  443423:	add    esp,0xffffffe4
  443426:	push   ebx
  443427:	push   esi
  443428:	push   edi
  443429:	mov    DWORD PTR [ebp-0x4],ecx
  44342c:	mov    ebx,eax
  44342e:	cmp    BYTE PTR [ebx+0x30],0x0
  443432:	jne    0x44344a
  443434:	mov    ecx,0x4434a4
  443439:	mov    dl,0x1
  44343b:	mov    eax,ds:0x441af8
  443440:	call   0x40c8b4
  443445:	call   0x4048fc
  44344a:	mov    DWORD PTR [ebp-0x8],edx
  44344d:	mov    esi,DWORD PTR [ebp-0x4]
  443450:	mov    eax,DWORD PTR [ebp+0x8]
  443453:	test   eax,eax
  443455:	jbe    0x443491
  443457:	mov    DWORD PTR [ebp-0xc],eax
  44345a:	lea    ecx,[ebp-0x1c]
  44345d:	lea    edx,[ebx+0x48]
  443460:	mov    eax,ebx
  443462:	mov    edi,DWORD PTR [eax]
  443464:	call   DWORD PTR [edi+0x6c]
  443467:	mov    eax,DWORD PTR [ebp-0x8]
  44346a:	movzx  eax,BYTE PTR [eax]
  44346d:	xor    al,BYTE PTR [ebp-0x1c]
  443470:	mov    BYTE PTR [esi],al
  443472:	lea    edx,[ebx+0x48]
  443475:	lea    eax,[ebx+0x49]
  443478:	mov    ecx,0xf
  44347d:	call   0x403090
  443482:	movzx  eax,BYTE PTR [esi]
  443485:	mov    BYTE PTR [ebx+0x57],al
  443488:	inc    DWORD PTR [ebp-0x8]
  44348b:	inc    esi
  44348c:	dec    DWORD PTR [ebp-0xc]
  44348f:	jne    0x44345a
  443491:	pop    edi
  443492:	pop    esi
  443493:	pop    ebx
  443494:	mov    esp,ebp
  443496:	pop    ebp
  443497:	ret    0x4
  44349a:	add    BYTE PTR [eax],al
  44349c:	(bad)  
  44349d:	(bad)  
  44349e:	(bad)  
  44349f:	call   DWORD PTR [esi]
  4434a1:	add    BYTE PTR [eax],al
  4434a3:	add    BYTE PTR [ebx+0x69],al
  4434a6:	jo     0x443510
  4434a8:	gs jb  0x4434cb
  4434ab:	outs   dx,BYTE PTR ds:[esi]
  4434ac:	outs   dx,DWORD PTR ds:[esi]
  4434ad:	je     0x4434cf
  4434af:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4434b6:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  4434bd:	mov    ebp,esp
  4434bf:	add    esp,0xffffffe0
  4434c2:	push   ebx
  4434c3:	push   esi
  4434c4:	push   edi
  4434c5:	mov    DWORD PTR [ebp-0x4],ecx
  4434c8:	mov    ebx,eax
  4434ca:	cmp    BYTE PTR [ebx+0x30],0x0
  4434ce:	jne    0x4434e6
  4434d0:	mov    ecx,0x443548
  4434d5:	mov    dl,0x1
  4434d7:	mov    eax,ds:0x441af8
  4434dc:	call   0x40c8b4
  4434e1:	call   0x4048fc
  4434e6:	mov    esi,edx
  4434e8:	mov    eax,DWORD PTR [ebp-0x4]
  4434eb:	mov    DWORD PTR [ebp-0x8],eax
  4434ee:	mov    eax,DWORD PTR [ebp+0x8]
  4434f1:	test   eax,eax
  4434f3:	jbe    0x443536
  4434f5:	mov    DWORD PTR [ebp-0x10],eax
  4434f8:	movzx  eax,BYTE PTR [esi]
  4434fb:	mov    BYTE PTR [ebp-0x9],al
  4434fe:	lea    ecx,[ebp-0x20]
  443501:	lea    edx,[ebx+0x48]
  443504:	mov    eax,ebx
  443506:	mov    edi,DWORD PTR [eax]
  443508:	call   DWORD PTR [edi+0x6c]
  44350b:	movzx  eax,BYTE PTR [esi]
  44350e:	xor    al,BYTE PTR [ebp-0x20]
  443511:	mov    edx,DWORD PTR [ebp-0x8]
  443514:	mov    BYTE PTR [edx],al
  443516:	lea    edx,[ebx+0x48]
  443519:	lea    eax,[ebx+0x49]
  44351c:	mov    ecx,0xf
  443521:	call   0x403090
  443526:	movzx  eax,BYTE PTR [ebp-0x9]
  44352a:	mov    BYTE PTR [ebx+0x57],al
  44352d:	inc    esi
  44352e:	inc    DWORD PTR [ebp-0x8]
  443531:	dec    DWORD PTR [ebp-0x10]
  443534:	jne    0x4434f8
  443536:	pop    edi
  443537:	pop    esi
  443538:	pop    ebx
  443539:	mov    esp,ebp
  44353b:	pop    ebp
  44353c:	ret    0x4
  44353f:	add    bh,bh
  443541:	(bad)  
  443542:	(bad)  
  443543:	call   DWORD PTR [esi]
  443545:	add    BYTE PTR [eax],al
  443547:	add    BYTE PTR [ebx+0x69],al
  44354a:	jo     0x4435b4
  44354c:	gs jb  0x44356f
  44354f:	outs   dx,BYTE PTR ds:[esi]
  443550:	outs   dx,DWORD PTR ds:[esi]
  443551:	je     0x443573
  443553:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44355a:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  443561:	mov    ebp,esp
  443563:	add    esp,0xfffffff4
  443566:	push   ebx
  443567:	push   esi
  443568:	push   edi
  443569:	mov    DWORD PTR [ebp-0x4],ecx
  44356c:	mov    ebx,eax
  44356e:	cmp    BYTE PTR [ebx+0x30],0x0
  443572:	jne    0x44358a
  443574:	mov    ecx,0x443634
  443579:	mov    dl,0x1
  44357b:	mov    eax,ds:0x441af8
  443580:	call   0x40c8b4
  443585:	call   0x4048fc
  44358a:	mov    DWORD PTR [ebp-0x8],edx
  44358d:	mov    esi,DWORD PTR [ebp-0x4]
  443590:	mov    eax,DWORD PTR [ebp+0x8]
  443593:	shr    eax,0x4
  443596:	test   eax,eax
  443598:	jbe    0x4435ea
  44359a:	mov    DWORD PTR [ebp-0xc],eax
  44359d:	lea    ecx,[ebx+0x48]
  4435a0:	lea    edx,[ebx+0x48]
  4435a3:	mov    eax,ebx
  4435a5:	mov    edi,DWORD PTR [eax]
  4435a7:	call   DWORD PTR [edi+0x6c]
  4435aa:	mov    edi,esi
  4435ac:	mov    edx,edi
  4435ae:	mov    eax,DWORD PTR [ebp-0x8]
  4435b1:	mov    ecx,0x10
  4435b6:	call   0x403090
  4435bb:	lea    edx,[ebx+0x48]
  4435be:	mov    eax,edi
  4435c0:	mov    ecx,0x10
  4435c5:	call   0x442358
  4435ca:	lea    edx,[ebx+0x48]
  4435cd:	mov    eax,edi
  4435cf:	mov    ecx,0x10
  4435d4:	call   0x403090
  4435d9:	mov    eax,DWORD PTR [ebp-0x8]
  4435dc:	add    eax,0x10
  4435df:	mov    DWORD PTR [ebp-0x8],eax
  4435e2:	add    esi,0x10
  4435e5:	dec    DWORD PTR [ebp-0xc]
  4435e8:	jne    0x44359d
  4435ea:	mov    eax,DWORD PTR [ebp+0x8]
  4435ed:	and    eax,0xf
  4435f0:	test   eax,eax
  4435f2:	je     0x443623
  4435f4:	lea    ecx,[ebx+0x48]
  4435f7:	lea    edx,[ebx+0x48]
  4435fa:	mov    eax,ebx
  4435fc:	mov    edi,DWORD PTR [eax]
  4435fe:	call   DWORD PTR [edi+0x6c]
  443601:	mov    ecx,DWORD PTR [ebp+0x8]
  443604:	and    ecx,0xf
  443607:	mov    edi,esi
  443609:	mov    edx,edi
  44360b:	mov    eax,DWORD PTR [ebp-0x8]
  44360e:	call   0x403090
  443613:	mov    ecx,DWORD PTR [ebp+0x8]
  443616:	and    ecx,0xf
  443619:	lea    edx,[ebx+0x48]
  44361c:	mov    eax,edi
  44361e:	call   0x442358
  443623:	pop    edi
  443624:	pop    esi
  443625:	pop    ebx
  443626:	mov    esp,ebp
  443628:	pop    ebp
  443629:	ret    0x4
  44362c:	(bad)  
  44362d:	(bad)  
  44362e:	(bad)  
  44362f:	call   DWORD PTR [esi]
  443631:	add    BYTE PTR [eax],al
  443633:	add    BYTE PTR [ebx+0x69],al
  443636:	jo     0x4436a0
  443638:	gs jb  0x44365b
  44363b:	outs   dx,BYTE PTR ds:[esi]
  44363c:	outs   dx,DWORD PTR ds:[esi]
  44363d:	je     0x44365f
  44363f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443646:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44364d:	mov    ebp,esp
  44364f:	add    esp,0xffffffe4
  443652:	push   ebx
  443653:	push   esi
  443654:	push   edi
  443655:	mov    DWORD PTR [ebp-0x4],ecx
  443658:	mov    ebx,eax
  44365a:	cmp    BYTE PTR [ebx+0x30],0x0
  44365e:	jne    0x443676
  443660:	mov    ecx,0x443734
  443665:	mov    dl,0x1
  443667:	mov    eax,ds:0x441af8
  44366c:	call   0x40c8b4
  443671:	call   0x4048fc
  443676:	mov    DWORD PTR [ebp-0x8],edx
  443679:	mov    esi,DWORD PTR [ebp-0x4]
  44367c:	mov    eax,DWORD PTR [ebp+0x8]
  44367f:	shr    eax,0x4
  443682:	test   eax,eax
  443684:	jbe    0x4436e7
  443686:	mov    DWORD PTR [ebp-0xc],eax
  443689:	lea    edx,[ebp-0x1c]
  44368c:	mov    eax,DWORD PTR [ebp-0x8]
  44368f:	mov    ecx,0x10
  443694:	call   0x403090
  443699:	lea    ecx,[ebx+0x48]
  44369c:	lea    edx,[ebx+0x48]
  44369f:	mov    eax,ebx
  4436a1:	mov    edi,DWORD PTR [eax]
  4436a3:	call   DWORD PTR [edi+0x6c]
  4436a6:	mov    edi,esi
  4436a8:	mov    edx,edi
  4436aa:	mov    eax,DWORD PTR [ebp-0x8]
  4436ad:	mov    ecx,0x10
  4436b2:	call   0x403090
  4436b7:	lea    edx,[ebx+0x48]
  4436ba:	mov    eax,edi
  4436bc:	mov    ecx,0x10
  4436c1:	call   0x442358
  4436c6:	lea    edx,[ebx+0x48]
  4436c9:	lea    eax,[ebp-0x1c]
  4436cc:	mov    ecx,0x10
  4436d1:	call   0x403090
  4436d6:	mov    eax,DWORD PTR [ebp-0x8]
  4436d9:	add    eax,0x10
  4436dc:	mov    DWORD PTR [ebp-0x8],eax
  4436df:	add    esi,0x10
  4436e2:	dec    DWORD PTR [ebp-0xc]
  4436e5:	jne    0x443689
  4436e7:	mov    eax,DWORD PTR [ebp+0x8]
  4436ea:	and    eax,0xf
  4436ed:	test   eax,eax
  4436ef:	je     0x443720
  4436f1:	lea    ecx,[ebx+0x48]
  4436f4:	lea    edx,[ebx+0x48]
  4436f7:	mov    eax,ebx
  4436f9:	mov    edi,DWORD PTR [eax]
  4436fb:	call   DWORD PTR [edi+0x6c]
  4436fe:	mov    ecx,DWORD PTR [ebp+0x8]
  443701:	and    ecx,0xf
  443704:	mov    edi,esi
  443706:	mov    edx,edi
  443708:	mov    eax,DWORD PTR [ebp-0x8]
  44370b:	call   0x403090
  443710:	mov    ecx,DWORD PTR [ebp+0x8]
  443713:	and    ecx,0xf
  443716:	lea    edx,[ebx+0x48]
  443719:	mov    eax,edi
  44371b:	call   0x442358
  443720:	pop    edi
  443721:	pop    esi
  443722:	pop    ebx
  443723:	mov    esp,ebp
  443725:	pop    ebp
  443726:	ret    0x4
  443729:	add    BYTE PTR [eax],al
  44372b:	add    bh,bh
  44372d:	(bad)  
  44372e:	(bad)  
  44372f:	call   DWORD PTR [esi]
  443731:	add    BYTE PTR [eax],al
  443733:	add    BYTE PTR [ebx+0x69],al
  443736:	jo     0x4437a0
  443738:	gs jb  0x44375b
  44373b:	outs   dx,BYTE PTR ds:[esi]
  44373c:	outs   dx,DWORD PTR ds:[esi]
  44373d:	je     0x44375f
  44373f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443746:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44374d:	mov    ebp,esp
  44374f:	add    esp,0xfffffff4
  443752:	push   ebx
  443753:	push   esi
  443754:	push   edi
  443755:	mov    DWORD PTR [ebp-0x4],ecx
  443758:	mov    ebx,eax
  44375a:	cmp    BYTE PTR [ebx+0x30],0x0
  44375e:	jne    0x443776
  443760:	mov    ecx,0x443814
  443765:	mov    dl,0x1
  443767:	mov    eax,ds:0x441af8
  44376c:	call   0x40c8b4
  443771:	call   0x4048fc
  443776:	mov    DWORD PTR [ebp-0x8],edx
  443779:	mov    esi,DWORD PTR [ebp-0x4]
  44377c:	mov    eax,DWORD PTR [ebp+0x8]
  44377f:	shr    eax,0x4
  443782:	test   eax,eax
  443784:	jbe    0x4437c7
  443786:	mov    DWORD PTR [ebp-0xc],eax
  443789:	lea    ecx,[ebx+0x48]
  44378c:	lea    edx,[ebx+0x48]
  44378f:	mov    eax,ebx
  443791:	mov    edi,DWORD PTR [eax]
  443793:	call   DWORD PTR [edi+0x6c]
  443796:	mov    edi,esi
  443798:	mov    edx,edi
  44379a:	mov    eax,DWORD PTR [ebp-0x8]
  44379d:	mov    ecx,0x10
  4437a2:	call   0x403090
  4437a7:	lea    edx,[ebx+0x48]
  4437aa:	mov    eax,edi
  4437ac:	mov    ecx,0x10
  4437b1:	call   0x442358
  4437b6:	mov    eax,DWORD PTR [ebp-0x8]
  4437b9:	add    eax,0x10
  4437bc:	mov    DWORD PTR [ebp-0x8],eax
  4437bf:	add    esi,0x10
  4437c2:	dec    DWORD PTR [ebp-0xc]
  4437c5:	jne    0x443789
  4437c7:	mov    eax,DWORD PTR [ebp+0x8]
  4437ca:	and    eax,0xf
  4437cd:	test   eax,eax
  4437cf:	je     0x443800
  4437d1:	lea    ecx,[ebx+0x48]
  4437d4:	lea    edx,[ebx+0x48]
  4437d7:	mov    eax,ebx
  4437d9:	mov    edi,DWORD PTR [eax]
  4437db:	call   DWORD PTR [edi+0x6c]
  4437de:	mov    ecx,DWORD PTR [ebp+0x8]
  4437e1:	and    ecx,0xf
  4437e4:	mov    edi,esi
  4437e6:	mov    edx,edi
  4437e8:	mov    eax,DWORD PTR [ebp-0x8]
  4437eb:	call   0x403090
  4437f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4437f3:	and    ecx,0xf
  4437f6:	lea    edx,[ebx+0x48]
  4437f9:	mov    eax,edi
  4437fb:	call   0x442358
  443800:	pop    edi
  443801:	pop    esi
  443802:	pop    ebx
  443803:	mov    esp,ebp
  443805:	pop    ebp
  443806:	ret    0x4
  443809:	add    BYTE PTR [eax],al
  44380b:	add    bh,bh
  44380d:	(bad)  
  44380e:	(bad)  
  44380f:	call   DWORD PTR [esi]
  443811:	add    BYTE PTR [eax],al
  443813:	add    BYTE PTR [ebx+0x69],al
  443816:	jo     0x443880
  443818:	gs jb  0x44383b
  44381b:	outs   dx,BYTE PTR ds:[esi]
  44381c:	outs   dx,DWORD PTR ds:[esi]
  44381d:	je     0x44383f
  44381f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443826:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44382d:	mov    ebp,esp
  44382f:	add    esp,0xfffffff4
  443832:	push   ebx
  443833:	push   esi
  443834:	push   edi
  443835:	mov    DWORD PTR [ebp-0x4],ecx
  443838:	mov    ebx,eax
  44383a:	cmp    BYTE PTR [ebx+0x30],0x0
  44383e:	jne    0x443856
  443840:	mov    ecx,0x4438f4
  443845:	mov    dl,0x1
  443847:	mov    eax,ds:0x441af8
  44384c:	call   0x40c8b4
  443851:	call   0x4048fc
  443856:	mov    DWORD PTR [ebp-0x8],edx
  443859:	mov    esi,DWORD PTR [ebp-0x4]
  44385c:	mov    eax,DWORD PTR [ebp+0x8]
  44385f:	shr    eax,0x4
  443862:	test   eax,eax
  443864:	jbe    0x4438a7
  443866:	mov    DWORD PTR [ebp-0xc],eax
  443869:	lea    ecx,[ebx+0x48]
  44386c:	lea    edx,[ebx+0x48]
  44386f:	mov    eax,ebx
  443871:	mov    edi,DWORD PTR [eax]
  443873:	call   DWORD PTR [edi+0x6c]
  443876:	mov    edi,esi
  443878:	mov    edx,edi
  44387a:	mov    eax,DWORD PTR [ebp-0x8]
  44387d:	mov    ecx,0x10
  443882:	call   0x403090
  443887:	lea    edx,[ebx+0x48]
  44388a:	mov    eax,edi
  44388c:	mov    ecx,0x10
  443891:	call   0x442358
  443896:	mov    eax,DWORD PTR [ebp-0x8]
  443899:	add    eax,0x10
  44389c:	mov    DWORD PTR [ebp-0x8],eax
  44389f:	add    esi,0x10
  4438a2:	dec    DWORD PTR [ebp-0xc]
  4438a5:	jne    0x443869
  4438a7:	mov    eax,DWORD PTR [ebp+0x8]
  4438aa:	and    eax,0xf
  4438ad:	test   eax,eax
  4438af:	je     0x4438e0
  4438b1:	lea    ecx,[ebx+0x48]
  4438b4:	lea    edx,[ebx+0x48]
  4438b7:	mov    eax,ebx
  4438b9:	mov    edi,DWORD PTR [eax]
  4438bb:	call   DWORD PTR [edi+0x6c]
  4438be:	mov    ecx,DWORD PTR [ebp+0x8]
  4438c1:	and    ecx,0xf
  4438c4:	mov    edi,esi
  4438c6:	mov    edx,edi
  4438c8:	mov    eax,DWORD PTR [ebp-0x8]
  4438cb:	call   0x403090
  4438d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4438d3:	and    ecx,0xf
  4438d6:	lea    edx,[ebx+0x48]
  4438d9:	mov    eax,edi
  4438db:	call   0x442358
  4438e0:	pop    edi
  4438e1:	pop    esi
  4438e2:	pop    ebx
  4438e3:	mov    esp,ebp
  4438e5:	pop    ebp
  4438e6:	ret    0x4
  4438e9:	add    BYTE PTR [eax],al
  4438eb:	add    bh,bh
  4438ed:	(bad)  
  4438ee:	(bad)  
  4438ef:	call   DWORD PTR [esi]
  4438f1:	add    BYTE PTR [eax],al
  4438f3:	add    BYTE PTR [ebx+0x69],al
  4438f6:	jo     0x443960
  4438f8:	gs jb  0x44391b
  4438fb:	outs   dx,BYTE PTR ds:[esi]
  4438fc:	outs   dx,DWORD PTR ds:[esi]
  4438fd:	je     0x44391f
  4438ff:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443906:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44390d:	mov    ebp,esp
  44390f:	add    esp,0xffffffe4
  443912:	push   ebx
  443913:	push   esi
  443914:	push   edi
  443915:	mov    DWORD PTR [ebp-0x8],ecx
  443918:	mov    DWORD PTR [ebp-0x4],eax
  44391b:	mov    eax,DWORD PTR [ebp-0x4]
  44391e:	cmp    BYTE PTR [eax+0x30],0x0
  443922:	jne    0x44393a
  443924:	mov    ecx,0x4439e4
  443929:	mov    dl,0x1
  44392b:	mov    eax,ds:0x441af8
  443930:	call   0x40c8b4
  443935:	call   0x4048fc
  44393a:	mov    esi,edx
  44393c:	mov    ebx,DWORD PTR [ebp-0x8]
  44393f:	mov    eax,DWORD PTR [ebp+0x8]
  443942:	shr    eax,0x4
  443945:	test   eax,eax
  443947:	jbe    0x44398f
  443949:	mov    DWORD PTR [ebp-0xc],eax
  44394c:	lea    ecx,[ebp-0x1c]
  44394f:	mov    eax,DWORD PTR [ebp-0x4]
  443952:	lea    edx,[eax+0x48]
  443955:	mov    eax,DWORD PTR [ebp-0x4]
  443958:	mov    edi,DWORD PTR [eax]
  44395a:	call   DWORD PTR [edi+0x6c]
  44395d:	mov    eax,DWORD PTR [ebp-0x4]
  443960:	call   0x443068
  443965:	mov    edi,ebx
  443967:	mov    edx,edi
  443969:	mov    eax,esi
  44396b:	mov    ecx,0x10
  443970:	call   0x403090
  443975:	lea    edx,[ebp-0x1c]
  443978:	mov    eax,edi
  44397a:	mov    ecx,0x10
  44397f:	call   0x442358
  443984:	add    esi,0x10
  443987:	add    ebx,0x10
  44398a:	dec    DWORD PTR [ebp-0xc]
  44398d:	jne    0x44394c
  44398f:	mov    eax,DWORD PTR [ebp+0x8]
  443992:	and    eax,0xf
  443995:	test   eax,eax
  443997:	je     0x4439d3
  443999:	lea    ecx,[ebp-0x1c]
  44399c:	mov    eax,DWORD PTR [ebp-0x4]
  44399f:	lea    edx,[eax+0x48]
  4439a2:	mov    eax,DWORD PTR [ebp-0x4]
  4439a5:	mov    edi,DWORD PTR [eax]
  4439a7:	call   DWORD PTR [edi+0x6c]
  4439aa:	mov    eax,DWORD PTR [ebp-0x4]
  4439ad:	call   0x443068
  4439b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4439b5:	and    ecx,0xf
  4439b8:	mov    edi,ebx
  4439ba:	mov    edx,edi
  4439bc:	mov    eax,esi
  4439be:	call   0x403090
  4439c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4439c6:	and    ecx,0xf
  4439c9:	lea    edx,[ebp-0x1c]
  4439cc:	mov    eax,edi
  4439ce:	call   0x442358
  4439d3:	pop    edi
  4439d4:	pop    esi
  4439d5:	pop    ebx
  4439d6:	mov    esp,ebp
  4439d8:	pop    ebp
  4439d9:	ret    0x4
  4439dc:	(bad)  
  4439dd:	(bad)  
  4439de:	(bad)  
  4439df:	call   DWORD PTR [esi]
  4439e1:	add    BYTE PTR [eax],al
  4439e3:	add    BYTE PTR [ebx+0x69],al
  4439e6:	jo     0x443a50
  4439e8:	gs jb  0x443a0b
  4439eb:	outs   dx,BYTE PTR ds:[esi]
  4439ec:	outs   dx,DWORD PTR ds:[esi]
  4439ed:	je     0x443a0f
  4439ef:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4439f6:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  4439fd:	mov    ebp,esp
  4439ff:	add    esp,0xffffffe4
  443a02:	push   ebx
  443a03:	push   esi
  443a04:	push   edi
  443a05:	mov    DWORD PTR [ebp-0x8],ecx
  443a08:	mov    DWORD PTR [ebp-0x4],eax
  443a0b:	mov    eax,DWORD PTR [ebp-0x4]
  443a0e:	cmp    BYTE PTR [eax+0x30],0x0
  443a12:	jne    0x443a2a
  443a14:	mov    ecx,0x443ad4
  443a19:	mov    dl,0x1
  443a1b:	mov    eax,ds:0x441af8
  443a20:	call   0x40c8b4
  443a25:	call   0x4048fc
  443a2a:	mov    esi,edx
  443a2c:	mov    ebx,DWORD PTR [ebp-0x8]
  443a2f:	mov    eax,DWORD PTR [ebp+0x8]
  443a32:	shr    eax,0x4
  443a35:	test   eax,eax
  443a37:	jbe    0x443a7f
  443a39:	mov    DWORD PTR [ebp-0xc],eax
  443a3c:	lea    ecx,[ebp-0x1c]
  443a3f:	mov    eax,DWORD PTR [ebp-0x4]
  443a42:	lea    edx,[eax+0x48]
  443a45:	mov    eax,DWORD PTR [ebp-0x4]
  443a48:	mov    edi,DWORD PTR [eax]
  443a4a:	call   DWORD PTR [edi+0x6c]
  443a4d:	mov    eax,DWORD PTR [ebp-0x4]
  443a50:	call   0x443068
  443a55:	mov    edi,ebx
  443a57:	mov    edx,edi
  443a59:	mov    eax,esi
  443a5b:	mov    ecx,0x10
  443a60:	call   0x403090
  443a65:	lea    edx,[ebp-0x1c]
  443a68:	mov    eax,edi
  443a6a:	mov    ecx,0x10
  443a6f:	call   0x442358
  443a74:	add    esi,0x10
  443a77:	add    ebx,0x10
  443a7a:	dec    DWORD PTR [ebp-0xc]
  443a7d:	jne    0x443a3c
  443a7f:	mov    eax,DWORD PTR [ebp+0x8]
  443a82:	and    eax,0xf
  443a85:	test   eax,eax
  443a87:	je     0x443ac3
  443a89:	lea    ecx,[ebp-0x1c]
  443a8c:	mov    eax,DWORD PTR [ebp-0x4]
  443a8f:	lea    edx,[eax+0x48]
  443a92:	mov    eax,DWORD PTR [ebp-0x4]
  443a95:	mov    edi,DWORD PTR [eax]
  443a97:	call   DWORD PTR [edi+0x6c]
  443a9a:	mov    eax,DWORD PTR [ebp-0x4]
  443a9d:	call   0x443068
  443aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  443aa5:	and    ecx,0xf
  443aa8:	mov    edi,ebx
  443aaa:	mov    edx,edi
  443aac:	mov    eax,esi
  443aae:	call   0x403090
  443ab3:	mov    ecx,DWORD PTR [ebp+0x8]
  443ab6:	and    ecx,0xf
  443ab9:	lea    edx,[ebp-0x1c]
  443abc:	mov    eax,edi
  443abe:	call   0x442358
  443ac3:	pop    edi
  443ac4:	pop    esi
  443ac5:	pop    ebx
  443ac6:	mov    esp,ebp
  443ac8:	pop    ebp
  443ac9:	ret    0x4
  443acc:	(bad)  
  443acd:	(bad)  
  443ace:	(bad)  
  443acf:	call   DWORD PTR [esi]
  443ad1:	add    BYTE PTR [eax],al
  443ad3:	add    BYTE PTR [ebx+0x69],al
  443ad6:	jo     0x443b40
  443ad8:	gs jb  0x443afb
  443adb:	outs   dx,BYTE PTR ds:[esi]
  443adc:	outs   dx,DWORD PTR ds:[esi]
  443add:	je     0x443aff
  443adf:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  443ae6:	imul   edi,DWORD PTR [edx+0x65],0x38000064
  443aed:	cmp    eax,DWORD PTR [eax+eax*1+0x0]
	...
  443af9:	add    BYTE PTR [eax],al
  443afb:	add    al,ch
  443afd:	cmp    eax,DWORD PTR [eax+eax*1+0x0]
	...
  443b09:	add    BYTE PTR [eax],al
  443b0b:	add    ah,dl
  443b0d:	cmp    eax,DWORD PTR [eax+eax*1-0x70]
  443b11:	adc    BYTE PTR [eax],al
  443b13:	add    BYTE PTR [eax+0x18004423],al
  443b19:	test   eax,0x42dc0041
  443b1e:	inc    eax
  443b1f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  443b25:	inc    edx
  443b26:	inc    eax
  443b27:	add    al,bl
  443b29:	inc    edx
  443b2a:	inc    eax
  443b2b:	add    BYTE PTR [eax],bh
  443b2d:	inc    eax
  443b2e:	inc    eax
  443b2f:	add    BYTE PTR [eax+eax*2+0x40],dl
  443b33:	add    BYTE PTR [eax+0x20],bh
  443b36:	inc    esp
  443b37:	add    BYTE PTR [eax+0x41],ch
  443b3a:	inc    ecx
  443b3b:	add    BYTE PTR [eax-0x5b],dh
  443b3e:	inc    ecx
  443b3f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  443b46:	inc    ecx
  443b47:	add    BYTE PTR [eax],dl
  443b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443b4a:	inc    ecx
  443b4b:	add    BYTE PTR [eax-0x5a],bl
  443b4e:	inc    ecx
  443b4f:	add    BYTE PTR [eax-0x59],dl
  443b52:	inc    ecx
  443b53:	add    BYTE PTR [eax],dh
  443b55:	test   eax,0xa6680041
  443b5a:	inc    ecx
  443b5b:	add    BYTE PTR [eax-0x5a],ah
  443b5e:	inc    ecx
  443b5f:	add    BYTE PTR [eax],bh
  443b61:	test   eax,0x231c0041
  443b66:	inc    esp
  443b67:	add    BYTE PTR [eax],dl
  443b69:	cmp    al,0x44
  443b6b:	add    BYTE PTR [eax],bl
  443b6d:	cmp    al,0x44
  443b6f:	add    BYTE PTR [eax+0x3c],al
  443b72:	inc    esp
  443b73:	add    BYTE PTR [eax+0x3c],cl
  443b76:	inc    esp
  443b77:	add    BYTE PTR [eax],cl
  443b79:	es inc esp
  443b7b:	add    ah,bl
  443b7d:	ds inc esp
  443b7f:	add    BYTE PTR [eax],ah
  443b81:	daa    
  443b82:	inc    esp
  443b83:	add    ah,al
  443b85:	and    BYTE PTR [eax+eax*1+0x38],al
  443b89:	and    al,BYTE PTR [eax+eax*1+0x4c]
  443b8d:	and    DWORD PTR [eax+eax*1-0x14],eax
  443b91:	and    DWORD PTR [eax+eax*1+0x30],eax
  443b95:	cmp    eax,0x26000044
  443b9a:	inc    esp
  443b9b:	add    BYTE PTR [esi+eiz*1+0x44],bh
  443b9f:	add    ah,dl
  443ba1:	es inc esp
  443ba3:	add    BYTE PTR [eax],dl
  443ba5:	aas    
  443ba6:	inc    esp
  443ba7:	add    al,bl
  443ba9:	inc    esp
  443baa:	inc    esp
  443bab:	add    BYTE PTR [eax-0x6bffbbd9],ah
  443bb1:	sub    BYTE PTR [eax+eax*1-0x64],al
  443bb5:	sub    DWORD PTR [eax+eax*1+0x38],eax
  443bb9:	sub    al,BYTE PTR [eax+eax*1-0x24]
  443bbd:	sub    al,BYTE PTR [eax+eax*1-0x38]
  443bc1:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  443bc5:	sub    al,0x44
  443bc7:	add    BYTE PTR [eax-0x77ffbbd3],ch
  443bcd:	cs inc esp
  443bcf:	add    BYTE PTR [eax+0x2f],bh
  443bd2:	inc    esp
  443bd3:	add    BYTE PTR ds:0x50434454,cl
  443bd9:	pop    edi
  443bda:	bound  ebp,QWORD PTR [edi+ebp*2+0x77]
  443bde:	imul   si,WORD PTR [ebx+0x68],0xc08b
  443be4:	call   0x7448024
  443be9:	or     eax,0x50434454
  443bee:	pop    edi
  443bef:	bound  ebp,QWORD PTR [edi+ebp*2+0x77]
  443bf3:	imul   si,WORD PTR [ebx+0x68],0x3b38
  443bf9:	inc    esp
  443bfa:	add    BYTE PTR [esp+0x44],bh
  443bfe:	add    BYTE PTR [edi],al
  443c00:	add    BYTE PTR [ebx],cl
  443c02:	inc    esp
  443c03:	inc    ebx
  443c04:	push   eax
  443c05:	bound  ebp,QWORD PTR [edi+ebp*2+0x77]
  443c09:	imul   si,WORD PTR [ebx+0x68],0x0
  443c0f:	nop
  443c10:	mov    eax,0x5
  443c15:	ret    
  443c16:	mov    eax,eax
  443c18:	push   ebx
  443c19:	mov    ebx,edx
  443c1b:	mov    eax,ebx
  443c1d:	mov    edx,0x443c34
  443c22:	call   0x404fdc
  443c27:	pop    ebx
  443c28:	ret    
  443c29:	add    BYTE PTR [eax],al
  443c2b:	add    bh,bh
  443c2d:	(bad)  
  443c2e:	(bad)  
  443c2f:	dec    DWORD PTR [eax]
  443c31:	add    BYTE PTR [eax],al
  443c33:	add    BYTE PTR [edx+0x6c],al
  443c36:	outs   dx,DWORD PTR ds:[esi]
  443c37:	ja     0x443c9f
  443c39:	imul   esi,DWORD PTR [ebx+0x68],0x0
  443c40:	mov    eax,0x1c0
  443c45:	ret    
  443c46:	mov    eax,eax
  443c48:	push   ebx
  443c49:	push   esi
  443c4a:	push   edi
  443c4b:	add    esp,0xfffffff8
  443c4e:	xor    ecx,ecx
  443c50:	mov    dl,0x1
  443c52:	mov    eax,ds:0x443aec
  443c57:	call   0x44231c
  443c5c:	mov    esi,eax
  443c5e:	push   0x0
  443c60:	mov    edx,0x463924
  443c65:	mov    ecx,0x40
  443c6a:	mov    eax,esi
  443c6c:	mov    ebx,DWORD PTR [eax]
  443c6e:	call   DWORD PTR [ebx+0x40]
  443c71:	mov    ecx,esp
  443c73:	mov    edx,0x463934
  443c78:	mov    eax,esi
  443c7a:	mov    ebx,DWORD PTR [eax]
  443c7c:	call   DWORD PTR [ebx+0x6c]
  443c7f:	mov    edx,0x463944
  443c84:	mov    eax,esp
  443c86:	mov    ecx,0x8
  443c8b:	call   0x408538
  443c90:	mov    ebx,eax
  443c92:	mov    eax,esi
  443c94:	mov    edx,DWORD PTR [eax]
  443c96:	call   DWORD PTR [edx+0x48]
  443c99:	mov    ecx,esp
  443c9b:	mov    edx,esp
  443c9d:	mov    eax,esi
  443c9f:	mov    edi,DWORD PTR [eax]
  443ca1:	call   DWORD PTR [edi+0x70]
  443ca4:	mov    edx,0x463934
  443ca9:	mov    eax,esp
  443cab:	mov    ecx,0x8
  443cb0:	call   0x408538
  443cb5:	and    bl,al
  443cb7:	mov    eax,esi
  443cb9:	mov    edx,DWORD PTR [eax]
  443cbb:	call   DWORD PTR [edx+0x44]
  443cbe:	push   0x0
  443cc0:	mov    edx,0x46392c
  443cc5:	mov    ecx,0x40
  443cca:	mov    eax,esi
  443ccc:	mov    edi,DWORD PTR [eax]
  443cce:	call   DWORD PTR [edi+0x40]
  443cd1:	mov    ecx,esp
  443cd3:	mov    edx,0x46393c
  443cd8:	mov    eax,esi
  443cda:	mov    edi,DWORD PTR [eax]
  443cdc:	call   DWORD PTR [edi+0x6c]
  443cdf:	mov    edx,0x46394c
  443ce4:	mov    eax,esp
  443ce6:	mov    ecx,0x8
  443ceb:	call   0x408538
  443cf0:	and    bl,al
  443cf2:	mov    eax,esi
  443cf4:	mov    edx,DWORD PTR [eax]
  443cf6:	call   DWORD PTR [edx+0x48]
  443cf9:	mov    ecx,esp
  443cfb:	mov    edx,esp
  443cfd:	mov    eax,esi
  443cff:	mov    edi,DWORD PTR [eax]
  443d01:	call   DWORD PTR [edi+0x70]
  443d04:	mov    edx,0x46393c
  443d09:	mov    eax,esp
  443d0b:	mov    ecx,0x8
  443d10:	call   0x408538
  443d15:	and    bl,al
  443d17:	mov    eax,esi
  443d19:	mov    edx,DWORD PTR [eax]
  443d1b:	call   DWORD PTR [edx+0x44]
  443d1e:	mov    eax,esi
  443d20:	call   0x4040a0
  443d25:	mov    eax,ebx
  443d27:	pop    ecx
  443d28:	pop    edx
  443d29:	pop    edi
  443d2a:	pop    esi
  443d2b:	pop    ebx
  443d2c:	ret    
  443d2d:	lea    eax,[eax+0x0]
  443d30:	push   ebx
  443d31:	push   esi
  443d32:	push   edi
  443d33:	push   ebp
  443d34:	add    esp,0xfffffff4
  443d37:	mov    ebp,ecx
  443d39:	mov    ebx,edx
  443d3b:	mov    esi,eax
  443d3d:	mov    ecx,0x8
  443d42:	mov    eax,ebp
  443d44:	xor    edx,edx
  443d46:	div    ecx
  443d48:	mov    ebp,eax
  443d4a:	mov    DWORD PTR [esp],ebx
  443d4d:	lea    edx,[esi+0x48]
  443d50:	mov    eax,0x462924
  443d55:	mov    ecx,0x1000
  443d5a:	call   0x403090
  443d5f:	lea    edx,[esi+0x1048]
  443d65:	mov    eax,0x4628dc
  443d6a:	mov    ecx,0x48
  443d6f:	call   0x403090
  443d74:	xor    edi,edi
  443d76:	xor    ebx,ebx
  443d78:	lea    eax,[edi+0x3]
  443d7b:	xor    edx,edx
  443d7d:	div    ebp
  443d7f:	mov    eax,DWORD PTR [esp]
  443d82:	movzx  ecx,BYTE PTR [eax+edx*1]
  443d86:	lea    eax,[edi+0x2]
  443d89:	xor    edx,edx
  443d8b:	div    ebp
  443d8d:	mov    eax,DWORD PTR [esp]
  443d90:	movzx  eax,BYTE PTR [eax+edx*1]
  443d94:	shl    eax,0x8
  443d97:	add    ecx,eax
  443d99:	lea    eax,[edi+0x1]
  443d9c:	xor    edx,edx
  443d9e:	div    ebp
  443da0:	mov    eax,DWORD PTR [esp]
  443da3:	movzx  eax,BYTE PTR [eax+edx*1]
  443da7:	shl    eax,0x10
  443daa:	add    ecx,eax
  443dac:	mov    eax,DWORD PTR [esp]
  443daf:	movzx  eax,BYTE PTR [eax+edi*1]
  443db3:	shl    eax,0x18
  443db6:	add    ecx,eax
  443db8:	xor    DWORD PTR [esi+ebx*4+0x1048],ecx
  443dbf:	lea    eax,[edi+0x4]
  443dc2:	xor    edx,edx
  443dc4:	div    ebp
  443dc6:	mov    edi,edx
  443dc8:	inc    ebx
  443dc9:	cmp    ebx,0x12
  443dcc:	jne    0x443d78
  443dce:	lea    eax,[esp+0x4]
  443dd2:	xor    ecx,ecx
  443dd4:	mov    edx,0x8
  443dd9:	call   0x4037c8
  443dde:	xor    ebx,ebx
  443de0:	lea    ecx,[esp+0x4]
  443de4:	lea    edx,[esp+0x4]
  443de8:	mov    eax,esi
  443dea:	mov    edi,DWORD PTR [eax]
  443dec:	call   DWORD PTR [edi+0x6c]
  443def:	movzx  edx,BYTE PTR [esp+0x7]
  443df4:	movzx  ecx,BYTE PTR [esp+0x6]
  443df9:	shl    ecx,0x8
  443dfc:	add    edx,ecx
  443dfe:	movzx  ecx,BYTE PTR [esp+0x5]
  443e03:	shl    ecx,0x10
  443e06:	add    edx,ecx
  443e08:	movzx  ecx,BYTE PTR [esp+0x4]
  443e0d:	shl    ecx,0x18
  443e10:	add    edx,ecx
  443e12:	mov    eax,ebx
  443e14:	add    eax,eax
  443e16:	mov    DWORD PTR [esi+eax*4+0x1048],edx
  443e1d:	movzx  edx,BYTE PTR [esp+0xb]
  443e22:	movzx  ecx,BYTE PTR [esp+0xa]
  443e27:	shl    ecx,0x8
  443e2a:	add    edx,ecx
  443e2c:	movzx  ecx,BYTE PTR [esp+0x9]
  443e31:	shl    ecx,0x10
  443e34:	add    edx,ecx
  443e36:	movzx  ecx,BYTE PTR [esp+0x8]
  443e3b:	shl    ecx,0x18
  443e3e:	add    edx,ecx
  443e40:	mov    DWORD PTR [esi+eax*4+0x104c],edx
  443e47:	inc    ebx
  443e48:	cmp    ebx,0x9
  443e4b:	jne    0x443de0
  443e4d:	xor    edi,edi
  443e4f:	xor    ebx,ebx
  443e51:	lea    ecx,[esp+0x4]
  443e55:	lea    edx,[esp+0x4]
  443e59:	mov    eax,esi
  443e5b:	mov    ebp,DWORD PTR [eax]
  443e5d:	call   DWORD PTR [ebp+0x6c]
  443e60:	movzx  ecx,BYTE PTR [esp+0x7]
  443e65:	movzx  ebp,BYTE PTR [esp+0x6]
  443e6a:	shl    ebp,0x8
  443e6d:	add    ecx,ebp
  443e6f:	movzx  ebp,BYTE PTR [esp+0x5]
  443e74:	shl    ebp,0x10
  443e77:	add    ecx,ebp
  443e79:	movzx  ebp,BYTE PTR [esp+0x4]
  443e7e:	shl    ebp,0x18
  443e81:	add    ecx,ebp
  443e83:	push   ecx
  443e84:	mov    eax,ebx
  443e86:	add    eax,eax
  443e88:	mov    edx,edi
  443e8a:	shl    edx,0x7
  443e8d:	lea    ecx,[esi+edx*8]
  443e90:	pop    ebp
  443e91:	mov    DWORD PTR [ecx+eax*4+0x48],ebp
  443e95:	movzx  ecx,BYTE PTR [esp+0xb]
  443e9a:	movzx  ebp,BYTE PTR [esp+0xa]
  443e9f:	shl    ebp,0x8
  443ea2:	add    ecx,ebp
  443ea4:	movzx  ebp,BYTE PTR [esp+0x9]
  443ea9:	shl    ebp,0x10
  443eac:	add    ecx,ebp
  443eae:	movzx  ebp,BYTE PTR [esp+0x8]
  443eb3:	shl    ebp,0x18
  443eb6:	add    ecx,ebp
  443eb8:	push   ecx
  443eb9:	lea    edx,[esi+edx*8]
  443ebc:	pop    ecx
  443ebd:	mov    DWORD PTR [edx+eax*4+0x4c],ecx
  443ec1:	inc    ebx
  443ec2:	cmp    ebx,0x80
  443ec8:	jne    0x443e51
  443eca:	inc    edi
  443ecb:	cmp    edi,0x4
  443ece:	jne    0x443e4f
  443ed4:	add    esp,0xc
  443ed7:	pop    ebp
  443ed8:	pop    edi
  443ed9:	pop    esi
  443eda:	pop    ebx
  443edb:	ret    
  443edc:	push   ebx
  443edd:	mov    ebx,eax
  443edf:	lea    eax,[ebx+0x48]
  443ee2:	mov    ecx,0xff
  443ee7:	mov    edx,0x1000
  443eec:	call   0x4037c8
  443ef1:	lea    eax,[ebx+0x1048]
  443ef7:	mov    ecx,0xff
  443efc:	mov    edx,0x48
  443f01:	call   0x4037c8
  443f06:	mov    eax,ebx
  443f08:	call   0x442770
  443f0d:	pop    ebx
  443f0e:	ret    
  443f0f:	nop
  443f10:	push   ebx
  443f11:	push   esi
  443f12:	push   edi
  443f13:	cmp    BYTE PTR [eax+0x30],0x0
  443f17:	jne    0x443f2f
  443f19:	mov    ecx,0x4444c0
  443f1e:	mov    dl,0x1
  443f20:	mov    eax,ds:0x441af8
  443f25:	call   0x40c8b4
  443f2a:	call   0x4048fc
  443f2f:	mov    esi,edx
  443f31:	mov    ebx,DWORD PTR [esi]
  443f33:	add    esi,0x4
  443f36:	mov    edx,DWORD PTR [esi]
  443f38:	mov    esi,ebx
  443f3a:	and    esi,0xff
  443f40:	shl    esi,0x18
  443f43:	mov    edi,ebx
  443f45:	and    edi,0xff00
  443f4b:	shl    edi,0x8
  443f4e:	or     esi,edi
  443f50:	mov    edi,ebx
  443f52:	and    edi,0xff0000
  443f58:	shr    edi,0x8
  443f5b:	or     esi,edi
  443f5d:	and    ebx,0xff000000
  443f63:	shr    ebx,0x18
  443f66:	or     esi,ebx
  443f68:	mov    ebx,esi
  443f6a:	mov    esi,edx
  443f6c:	and    esi,0xff
  443f72:	shl    esi,0x18
  443f75:	mov    edi,edx
  443f77:	and    edi,0xff00
  443f7d:	shl    edi,0x8
  443f80:	or     esi,edi
  443f82:	mov    edi,edx
  443f84:	and    edi,0xff0000
  443f8a:	shr    edi,0x8
  443f8d:	or     esi,edi
  443f8f:	and    edx,0xff000000
  443f95:	shr    edx,0x18
  443f98:	or     esi,edx
  443f9a:	mov    edx,esi
  443f9c:	xor    ebx,DWORD PTR [eax+0x1048]
  443fa2:	mov    esi,ebx
  443fa4:	shr    esi,0x18
  443fa7:	and    esi,0xff
  443fad:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  443fb1:	mov    edi,ebx
  443fb3:	shr    edi,0x10
  443fb6:	and    edi,0xff
  443fbc:	add    esi,DWORD PTR [eax+edi*4+0x448]
  443fc3:	mov    edi,ebx
  443fc5:	shr    edi,0x8
  443fc8:	and    edi,0xff
  443fce:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  443fd5:	mov    edi,ebx
  443fd7:	and    edi,0xff
  443fdd:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  443fe4:	xor    edx,esi
  443fe6:	xor    edx,DWORD PTR [eax+0x104c]
  443fec:	mov    esi,edx
  443fee:	shr    esi,0x18
  443ff1:	and    esi,0xff
  443ff7:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  443ffb:	mov    edi,edx
  443ffd:	shr    edi,0x10
  444000:	and    edi,0xff
  444006:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44400d:	mov    edi,edx
  44400f:	shr    edi,0x8
  444012:	and    edi,0xff
  444018:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44401f:	mov    edi,edx
  444021:	and    edi,0xff
  444027:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44402e:	xor    ebx,esi
  444030:	xor    ebx,DWORD PTR [eax+0x1050]
  444036:	mov    esi,ebx
  444038:	shr    esi,0x18
  44403b:	and    esi,0xff
  444041:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444045:	mov    edi,ebx
  444047:	shr    edi,0x10
  44404a:	and    edi,0xff
  444050:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444057:	mov    edi,ebx
  444059:	shr    edi,0x8
  44405c:	and    edi,0xff
  444062:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444069:	mov    edi,ebx
  44406b:	and    edi,0xff
  444071:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444078:	xor    edx,esi
  44407a:	xor    edx,DWORD PTR [eax+0x1054]
  444080:	mov    esi,edx
  444082:	shr    esi,0x18
  444085:	and    esi,0xff
  44408b:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44408f:	mov    edi,edx
  444091:	shr    edi,0x10
  444094:	and    edi,0xff
  44409a:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4440a1:	mov    edi,edx
  4440a3:	shr    edi,0x8
  4440a6:	and    edi,0xff
  4440ac:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4440b3:	mov    edi,edx
  4440b5:	and    edi,0xff
  4440bb:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4440c2:	xor    ebx,esi
  4440c4:	xor    ebx,DWORD PTR [eax+0x1058]
  4440ca:	mov    esi,ebx
  4440cc:	shr    esi,0x18
  4440cf:	and    esi,0xff
  4440d5:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4440d9:	mov    edi,ebx
  4440db:	shr    edi,0x10
  4440de:	and    edi,0xff
  4440e4:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4440eb:	mov    edi,ebx
  4440ed:	shr    edi,0x8
  4440f0:	and    edi,0xff
  4440f6:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4440fd:	mov    edi,ebx
  4440ff:	and    edi,0xff
  444105:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44410c:	xor    edx,esi
  44410e:	xor    edx,DWORD PTR [eax+0x105c]
  444114:	mov    esi,edx
  444116:	shr    esi,0x18
  444119:	and    esi,0xff
  44411f:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444123:	mov    edi,edx
  444125:	shr    edi,0x10
  444128:	and    edi,0xff
  44412e:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444135:	mov    edi,edx
  444137:	shr    edi,0x8
  44413a:	and    edi,0xff
  444140:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444147:	mov    edi,edx
  444149:	and    edi,0xff
  44414f:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444156:	xor    ebx,esi
  444158:	xor    ebx,DWORD PTR [eax+0x1060]
  44415e:	mov    esi,ebx
  444160:	shr    esi,0x18
  444163:	and    esi,0xff
  444169:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44416d:	mov    edi,ebx
  44416f:	shr    edi,0x10
  444172:	and    edi,0xff
  444178:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44417f:	mov    edi,ebx
  444181:	shr    edi,0x8
  444184:	and    edi,0xff
  44418a:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444191:	mov    edi,ebx
  444193:	and    edi,0xff
  444199:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4441a0:	xor    edx,esi
  4441a2:	xor    edx,DWORD PTR [eax+0x1064]
  4441a8:	mov    esi,edx
  4441aa:	shr    esi,0x18
  4441ad:	and    esi,0xff
  4441b3:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4441b7:	mov    edi,edx
  4441b9:	shr    edi,0x10
  4441bc:	and    edi,0xff
  4441c2:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4441c9:	mov    edi,edx
  4441cb:	shr    edi,0x8
  4441ce:	and    edi,0xff
  4441d4:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4441db:	mov    edi,edx
  4441dd:	and    edi,0xff
  4441e3:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4441ea:	xor    ebx,esi
  4441ec:	xor    ebx,DWORD PTR [eax+0x1068]
  4441f2:	mov    esi,ebx
  4441f4:	shr    esi,0x18
  4441f7:	and    esi,0xff
  4441fd:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444201:	mov    edi,ebx
  444203:	shr    edi,0x10
  444206:	and    edi,0xff
  44420c:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444213:	mov    edi,ebx
  444215:	shr    edi,0x8
  444218:	and    edi,0xff
  44421e:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444225:	mov    edi,ebx
  444227:	and    edi,0xff
  44422d:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444234:	xor    edx,esi
  444236:	xor    edx,DWORD PTR [eax+0x106c]
  44423c:	mov    esi,edx
  44423e:	shr    esi,0x18
  444241:	and    esi,0xff
  444247:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44424b:	mov    edi,edx
  44424d:	shr    edi,0x10
  444250:	and    edi,0xff
  444256:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44425d:	mov    edi,edx
  44425f:	shr    edi,0x8
  444262:	and    edi,0xff
  444268:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44426f:	mov    edi,edx
  444271:	and    edi,0xff
  444277:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44427e:	xor    ebx,esi
  444280:	xor    ebx,DWORD PTR [eax+0x1070]
  444286:	mov    esi,ebx
  444288:	shr    esi,0x18
  44428b:	and    esi,0xff
  444291:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444295:	mov    edi,ebx
  444297:	shr    edi,0x10
  44429a:	and    edi,0xff
  4442a0:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4442a7:	mov    edi,ebx
  4442a9:	shr    edi,0x8
  4442ac:	and    edi,0xff
  4442b2:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4442b9:	mov    edi,ebx
  4442bb:	and    edi,0xff
  4442c1:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4442c8:	xor    edx,esi
  4442ca:	xor    edx,DWORD PTR [eax+0x1074]
  4442d0:	mov    esi,edx
  4442d2:	shr    esi,0x18
  4442d5:	and    esi,0xff
  4442db:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4442df:	mov    edi,edx
  4442e1:	shr    edi,0x10
  4442e4:	and    edi,0xff
  4442ea:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4442f1:	mov    edi,edx
  4442f3:	shr    edi,0x8
  4442f6:	and    edi,0xff
  4442fc:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444303:	mov    edi,edx
  444305:	and    edi,0xff
  44430b:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444312:	xor    ebx,esi
  444314:	xor    ebx,DWORD PTR [eax+0x1078]
  44431a:	mov    esi,ebx
  44431c:	shr    esi,0x18
  44431f:	and    esi,0xff
  444325:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444329:	mov    edi,ebx
  44432b:	shr    edi,0x10
  44432e:	and    edi,0xff
  444334:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44433b:	mov    edi,ebx
  44433d:	shr    edi,0x8
  444340:	and    edi,0xff
  444346:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44434d:	mov    edi,ebx
  44434f:	and    edi,0xff
  444355:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44435c:	xor    edx,esi
  44435e:	xor    edx,DWORD PTR [eax+0x107c]
  444364:	mov    esi,edx
  444366:	shr    esi,0x18
  444369:	and    esi,0xff
  44436f:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444373:	mov    edi,edx
  444375:	shr    edi,0x10
  444378:	and    edi,0xff
  44437e:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444385:	mov    edi,edx
  444387:	shr    edi,0x8
  44438a:	and    edi,0xff
  444390:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444397:	mov    edi,edx
  444399:	and    edi,0xff
  44439f:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4443a6:	xor    ebx,esi
  4443a8:	xor    ebx,DWORD PTR [eax+0x1080]
  4443ae:	mov    esi,ebx
  4443b0:	shr    esi,0x18
  4443b3:	and    esi,0xff
  4443b9:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4443bd:	mov    edi,ebx
  4443bf:	shr    edi,0x10
  4443c2:	and    edi,0xff
  4443c8:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4443cf:	mov    edi,ebx
  4443d1:	shr    edi,0x8
  4443d4:	and    edi,0xff
  4443da:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4443e1:	mov    edi,ebx
  4443e3:	and    edi,0xff
  4443e9:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4443f0:	xor    edx,esi
  4443f2:	xor    edx,DWORD PTR [eax+0x1084]
  4443f8:	mov    esi,edx
  4443fa:	shr    esi,0x18
  4443fd:	and    esi,0xff
  444403:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444407:	mov    edi,edx
  444409:	shr    edi,0x10
  44440c:	and    edi,0xff
  444412:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444419:	mov    edi,edx
  44441b:	shr    edi,0x8
  44441e:	and    edi,0xff
  444424:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44442b:	mov    edi,edx
  44442d:	and    edi,0xff
  444433:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44443a:	xor    ebx,esi
  44443c:	xor    ebx,DWORD PTR [eax+0x1088]
  444442:	xor    edx,DWORD PTR [eax+0x108c]
  444448:	mov    eax,ebx
  44444a:	and    eax,0xff
  44444f:	shl    eax,0x18
  444452:	mov    esi,ebx
  444454:	and    esi,0xff00
  44445a:	shl    esi,0x8
  44445d:	or     eax,esi
  44445f:	mov    esi,ebx
  444461:	and    esi,0xff0000
  444467:	shr    esi,0x8
  44446a:	or     eax,esi
  44446c:	and    ebx,0xff000000
  444472:	shr    ebx,0x18
  444475:	or     eax,ebx
  444477:	mov    ebx,eax
  444479:	mov    eax,edx
  44447b:	and    eax,0xff
  444480:	shl    eax,0x18
  444483:	mov    esi,edx
  444485:	and    esi,0xff00
  44448b:	shl    esi,0x8
  44448e:	or     eax,esi
  444490:	mov    esi,edx
  444492:	and    esi,0xff0000
  444498:	shr    esi,0x8
  44449b:	or     eax,esi
  44449d:	and    edx,0xff000000
  4444a3:	shr    edx,0x18
  4444a6:	or     eax,edx
  4444a8:	mov    edx,eax
  4444aa:	mov    DWORD PTR [ecx],edx
  4444ac:	add    ecx,0x4
  4444af:	mov    DWORD PTR [ecx],ebx
  4444b1:	pop    edi
  4444b2:	pop    esi
  4444b3:	pop    ebx
  4444b4:	ret    
  4444b5:	add    BYTE PTR [eax],al
  4444b7:	add    bh,bh
  4444b9:	(bad)  
  4444ba:	(bad)  
  4444bb:	call   DWORD PTR [esi]
  4444bd:	add    BYTE PTR [eax],al
  4444bf:	add    BYTE PTR [ebx+0x69],al
  4444c2:	jo     0x44452c
  4444c4:	gs jb  0x4444e7
  4444c7:	outs   dx,BYTE PTR ds:[esi]
  4444c8:	outs   dx,DWORD PTR ds:[esi]
  4444c9:	je     0x4444eb
  4444cb:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4444d2:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  4444d9:	push   esi
  4444da:	push   edi
  4444db:	cmp    BYTE PTR [eax+0x30],0x0
  4444df:	jne    0x4444f7
  4444e1:	mov    ecx,0x444a58
  4444e6:	mov    dl,0x1
  4444e8:	mov    eax,ds:0x441af8
  4444ed:	call   0x40c8b4
  4444f2:	call   0x4048fc
  4444f7:	mov    esi,edx
  4444f9:	mov    ebx,DWORD PTR [esi]
  4444fb:	add    esi,0x4
  4444fe:	mov    edx,DWORD PTR [esi]
  444500:	mov    esi,ebx
  444502:	shr    esi,0x18
  444505:	mov    edi,ebx
  444507:	shr    edi,0x8
  44450a:	and    edi,0xff00
  444510:	or     esi,edi
  444512:	mov    edi,ebx
  444514:	shl    edi,0x8
  444517:	and    edi,0xff0000
  44451d:	or     esi,edi
  44451f:	shl    ebx,0x18
  444522:	or     esi,ebx
  444524:	mov    ebx,esi
  444526:	mov    esi,edx
  444528:	shr    esi,0x18
  44452b:	mov    edi,edx
  44452d:	shr    edi,0x8
  444530:	and    edi,0xff00
  444536:	or     esi,edi
  444538:	mov    edi,edx
  44453a:	shl    edi,0x8
  44453d:	and    edi,0xff0000
  444543:	or     esi,edi
  444545:	shl    edx,0x18
  444548:	or     esi,edx
  44454a:	mov    edx,esi
  44454c:	xor    ebx,DWORD PTR [eax+0x108c]
  444552:	mov    esi,ebx
  444554:	shr    esi,0x18
  444557:	and    esi,0xff
  44455d:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444561:	mov    edi,ebx
  444563:	shr    edi,0x10
  444566:	and    edi,0xff
  44456c:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444573:	mov    edi,ebx
  444575:	shr    edi,0x8
  444578:	and    edi,0xff
  44457e:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444585:	mov    edi,ebx
  444587:	and    edi,0xff
  44458d:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444594:	xor    edx,esi
  444596:	xor    edx,DWORD PTR [eax+0x1088]
  44459c:	mov    esi,edx
  44459e:	shr    esi,0x18
  4445a1:	and    esi,0xff
  4445a7:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4445ab:	mov    edi,edx
  4445ad:	shr    edi,0x10
  4445b0:	and    edi,0xff
  4445b6:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4445bd:	mov    edi,edx
  4445bf:	shr    edi,0x8
  4445c2:	and    edi,0xff
  4445c8:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4445cf:	mov    edi,edx
  4445d1:	and    edi,0xff
  4445d7:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4445de:	xor    ebx,esi
  4445e0:	xor    ebx,DWORD PTR [eax+0x1084]
  4445e6:	mov    esi,ebx
  4445e8:	shr    esi,0x18
  4445eb:	and    esi,0xff
  4445f1:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4445f5:	mov    edi,ebx
  4445f7:	shr    edi,0x10
  4445fa:	and    edi,0xff
  444600:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444607:	mov    edi,ebx
  444609:	shr    edi,0x8
  44460c:	and    edi,0xff
  444612:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444619:	mov    edi,ebx
  44461b:	and    edi,0xff
  444621:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444628:	xor    edx,esi
  44462a:	xor    edx,DWORD PTR [eax+0x1080]
  444630:	mov    esi,edx
  444632:	shr    esi,0x18
  444635:	and    esi,0xff
  44463b:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44463f:	mov    edi,edx
  444641:	shr    edi,0x10
  444644:	and    edi,0xff
  44464a:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444651:	mov    edi,edx
  444653:	shr    edi,0x8
  444656:	and    edi,0xff
  44465c:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444663:	mov    edi,edx
  444665:	and    edi,0xff
  44466b:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444672:	xor    ebx,esi
  444674:	xor    ebx,DWORD PTR [eax+0x107c]
  44467a:	mov    esi,ebx
  44467c:	shr    esi,0x18
  44467f:	and    esi,0xff
  444685:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444689:	mov    edi,ebx
  44468b:	shr    edi,0x10
  44468e:	and    edi,0xff
  444694:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44469b:	mov    edi,ebx
  44469d:	shr    edi,0x8
  4446a0:	and    edi,0xff
  4446a6:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4446ad:	mov    edi,ebx
  4446af:	and    edi,0xff
  4446b5:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4446bc:	xor    edx,esi
  4446be:	xor    edx,DWORD PTR [eax+0x1078]
  4446c4:	mov    esi,edx
  4446c6:	shr    esi,0x18
  4446c9:	and    esi,0xff
  4446cf:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4446d3:	mov    edi,edx
  4446d5:	shr    edi,0x10
  4446d8:	and    edi,0xff
  4446de:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4446e5:	mov    edi,edx
  4446e7:	shr    edi,0x8
  4446ea:	and    edi,0xff
  4446f0:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4446f7:	mov    edi,edx
  4446f9:	and    edi,0xff
  4446ff:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444706:	xor    ebx,esi
  444708:	xor    ebx,DWORD PTR [eax+0x1074]
  44470e:	mov    esi,ebx
  444710:	shr    esi,0x18
  444713:	and    esi,0xff
  444719:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44471d:	mov    edi,ebx
  44471f:	shr    edi,0x10
  444722:	and    edi,0xff
  444728:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44472f:	mov    edi,ebx
  444731:	shr    edi,0x8
  444734:	and    edi,0xff
  44473a:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444741:	mov    edi,ebx
  444743:	and    edi,0xff
  444749:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444750:	xor    edx,esi
  444752:	xor    edx,DWORD PTR [eax+0x1070]
  444758:	mov    esi,edx
  44475a:	shr    esi,0x18
  44475d:	and    esi,0xff
  444763:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444767:	mov    edi,edx
  444769:	shr    edi,0x10
  44476c:	and    edi,0xff
  444772:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444779:	mov    edi,edx
  44477b:	shr    edi,0x8
  44477e:	and    edi,0xff
  444784:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44478b:	mov    edi,edx
  44478d:	and    edi,0xff
  444793:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44479a:	xor    ebx,esi
  44479c:	xor    ebx,DWORD PTR [eax+0x106c]
  4447a2:	mov    esi,ebx
  4447a4:	shr    esi,0x18
  4447a7:	and    esi,0xff
  4447ad:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4447b1:	mov    edi,ebx
  4447b3:	shr    edi,0x10
  4447b6:	and    edi,0xff
  4447bc:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4447c3:	mov    edi,ebx
  4447c5:	shr    edi,0x8
  4447c8:	and    edi,0xff
  4447ce:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4447d5:	mov    edi,ebx
  4447d7:	and    edi,0xff
  4447dd:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4447e4:	xor    edx,esi
  4447e6:	xor    edx,DWORD PTR [eax+0x1068]
  4447ec:	mov    esi,edx
  4447ee:	shr    esi,0x18
  4447f1:	and    esi,0xff
  4447f7:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4447fb:	mov    edi,edx
  4447fd:	shr    edi,0x10
  444800:	and    edi,0xff
  444806:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44480d:	mov    edi,edx
  44480f:	shr    edi,0x8
  444812:	and    edi,0xff
  444818:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  44481f:	mov    edi,edx
  444821:	and    edi,0xff
  444827:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44482e:	xor    ebx,esi
  444830:	xor    ebx,DWORD PTR [eax+0x1064]
  444836:	mov    esi,ebx
  444838:	shr    esi,0x18
  44483b:	and    esi,0xff
  444841:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444845:	mov    edi,ebx
  444847:	shr    edi,0x10
  44484a:	and    edi,0xff
  444850:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444857:	mov    edi,ebx
  444859:	shr    edi,0x8
  44485c:	and    edi,0xff
  444862:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444869:	mov    edi,ebx
  44486b:	and    edi,0xff
  444871:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444878:	xor    edx,esi
  44487a:	xor    edx,DWORD PTR [eax+0x1060]
  444880:	mov    esi,edx
  444882:	shr    esi,0x18
  444885:	and    esi,0xff
  44488b:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44488f:	mov    edi,edx
  444891:	shr    edi,0x10
  444894:	and    edi,0xff
  44489a:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4448a1:	mov    edi,edx
  4448a3:	shr    edi,0x8
  4448a6:	and    edi,0xff
  4448ac:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4448b3:	mov    edi,edx
  4448b5:	and    edi,0xff
  4448bb:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4448c2:	xor    ebx,esi
  4448c4:	xor    ebx,DWORD PTR [eax+0x105c]
  4448ca:	mov    esi,ebx
  4448cc:	shr    esi,0x18
  4448cf:	and    esi,0xff
  4448d5:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4448d9:	mov    edi,ebx
  4448db:	shr    edi,0x10
  4448de:	and    edi,0xff
  4448e4:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4448eb:	mov    edi,ebx
  4448ed:	shr    edi,0x8
  4448f0:	and    edi,0xff
  4448f6:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4448fd:	mov    edi,ebx
  4448ff:	and    edi,0xff
  444905:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  44490c:	xor    edx,esi
  44490e:	xor    edx,DWORD PTR [eax+0x1058]
  444914:	mov    esi,edx
  444916:	shr    esi,0x18
  444919:	and    esi,0xff
  44491f:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  444923:	mov    edi,edx
  444925:	shr    edi,0x10
  444928:	and    edi,0xff
  44492e:	add    esi,DWORD PTR [eax+edi*4+0x448]
  444935:	mov    edi,edx
  444937:	shr    edi,0x8
  44493a:	and    edi,0xff
  444940:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444947:	mov    edi,edx
  444949:	and    edi,0xff
  44494f:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  444956:	xor    ebx,esi
  444958:	xor    ebx,DWORD PTR [eax+0x1054]
  44495e:	mov    esi,ebx
  444960:	shr    esi,0x18
  444963:	and    esi,0xff
  444969:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  44496d:	mov    edi,ebx
  44496f:	shr    edi,0x10
  444972:	and    edi,0xff
  444978:	add    esi,DWORD PTR [eax+edi*4+0x448]
  44497f:	mov    edi,ebx
  444981:	shr    edi,0x8
  444984:	and    edi,0xff
  44498a:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  444991:	mov    edi,ebx
  444993:	and    edi,0xff
  444999:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4449a0:	xor    edx,esi
  4449a2:	xor    edx,DWORD PTR [eax+0x1050]
  4449a8:	mov    esi,edx
  4449aa:	shr    esi,0x18
  4449ad:	and    esi,0xff
  4449b3:	mov    esi,DWORD PTR [eax+esi*4+0x48]
  4449b7:	mov    edi,edx
  4449b9:	shr    edi,0x10
  4449bc:	and    edi,0xff
  4449c2:	add    esi,DWORD PTR [eax+edi*4+0x448]
  4449c9:	mov    edi,edx
  4449cb:	shr    edi,0x8
  4449ce:	and    edi,0xff
  4449d4:	xor    esi,DWORD PTR [eax+edi*4+0x848]
  4449db:	mov    edi,edx
  4449dd:	and    edi,0xff
  4449e3:	add    esi,DWORD PTR [eax+edi*4+0xc48]
  4449ea:	xor    ebx,esi
  4449ec:	xor    ebx,DWORD PTR [eax+0x104c]
  4449f2:	xor    edx,DWORD PTR [eax+0x1048]
  4449f8:	mov    eax,ebx
  4449fa:	shr    eax,0x18
  4449fd:	mov    esi,ebx
  4449ff:	shr    esi,0x8
  444a02:	and    esi,0xff00
  444a08:	or     eax,esi
  444a0a:	mov    esi,ebx
  444a0c:	shl    esi,0x8
  444a0f:	and    esi,0xff0000
  444a15:	or     eax,esi
  444a17:	shl    ebx,0x18
  444a1a:	or     eax,ebx
  444a1c:	mov    ebx,eax
  444a1e:	mov    eax,edx
  444a20:	shr    eax,0x18
  444a23:	mov    esi,edx
  444a25:	shr    esi,0x8
  444a28:	and    esi,0xff00
  444a2e:	or     eax,esi
  444a30:	mov    esi,edx
  444a32:	shl    esi,0x8
  444a35:	and    esi,0xff0000
  444a3b:	or     eax,esi
  444a3d:	shl    edx,0x18
  444a40:	or     eax,edx
  444a42:	mov    edx,eax
  444a44:	mov    DWORD PTR [ecx],edx
  444a46:	add    ecx,0x4
  444a49:	mov    DWORD PTR [ecx],ebx
  444a4b:	pop    edi
  444a4c:	pop    esi
  444a4d:	pop    ebx
  444a4e:	ret    
  444a4f:	add    bh,bh
  444a51:	(bad)  
  444a52:	(bad)  
  444a53:	call   DWORD PTR [esi]
  444a55:	add    BYTE PTR [eax],al
  444a57:	add    BYTE PTR [ebx+0x69],al
  444a5a:	jo     0x444ac4
  444a5c:	gs jb  0x444a7f
  444a5f:	outs   dx,BYTE PTR ds:[esi]
  444a60:	outs   dx,DWORD PTR ds:[esi]
  444a61:	je     0x444a83
  444a63:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  444a6a:	imul   edi,DWORD PTR [edx+0x65],0xbc000064
  444a71:	dec    edx
  444a72:	inc    esp
	...
  444a7f:	add    BYTE PTR [ebx+ecx*2+0x44],ch
	...
  444a8f:	add    BYTE PTR [eax+0x4b],bl
  444a92:	inc    esp
  444a93:	add    ah,cl
  444a95:	add    BYTE PTR [eax],al
  444a97:	add    BYTE PTR [eax+0x18004423],al
  444a9d:	test   eax,0x42dc0041
  444aa2:	inc    eax
  444aa3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  444aa9:	inc    edx
  444aaa:	inc    eax
  444aab:	add    al,bl
  444aad:	inc    edx
  444aae:	inc    eax
  444aaf:	add    BYTE PTR [eax],bh
  444ab1:	inc    eax
  444ab2:	inc    eax
  444ab3:	add    BYTE PTR [eax+eax*2+0x40],dl
  444ab7:	add    BYTE PTR [eax+0x20],bh
  444aba:	inc    esp
  444abb:	add    BYTE PTR [eax+0x41],ch
  444abe:	inc    ecx
  444abf:	add    BYTE PTR [eax-0x5b],dh
  444ac2:	inc    ecx
  444ac3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  444aca:	inc    ecx
  444acb:	add    BYTE PTR [eax],dl
  444acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444ace:	inc    ecx
  444acf:	add    BYTE PTR [eax-0x5a],bl
  444ad2:	inc    ecx
  444ad3:	add    BYTE PTR [eax-0x59],dl
  444ad6:	inc    ecx
  444ad7:	add    BYTE PTR [eax],dh
  444ad9:	test   eax,0xa6680041
  444ade:	inc    ecx
  444adf:	add    BYTE PTR [eax-0x5a],ah
  444ae2:	inc    ecx
  444ae3:	add    BYTE PTR [eax],bh
  444ae5:	test   eax,0x231c0041
  444aea:	inc    esp
  444aeb:	add    BYTE PTR [ebx+ecx*2+0x4bbc0044],dh
  444af2:	inc    esp
  444af3:	add    BYTE PTR [ebx+ecx*2+0x4be00044],ch
  444afa:	inc    esp
  444afb:	add    BYTE PTR [eax],cl
  444afd:	es inc esp
  444aff:	add    BYTE PTR [ebp+edx*2+0x44],dh
  444b03:	add    BYTE PTR [eax],ah
  444b05:	daa    
  444b06:	inc    esp
  444b07:	add    ah,al
  444b09:	and    BYTE PTR [eax+eax*1+0x38],al
  444b0d:	and    al,BYTE PTR [eax+eax*1+0x4c]
  444b11:	and    DWORD PTR [eax+eax*1-0x14],eax
  444b15:	and    DWORD PTR [eax+eax*1+0x5c],eax
  444b19:	dec    ebp
  444b1a:	inc    esp
  444b1b:	add    BYTE PTR [eax],al
  444b1d:	es inc esp
  444b1f:	add    BYTE PTR [esi+eiz*1+0x44],bh
  444b23:	add    ah,dl
  444b25:	es inc esp
  444b27:	add    BYTE PTR [ebp+edx*2+0x5b6c0044],bl
  444b2e:	inc    esp
  444b2f:	add    BYTE PTR [eax-0x6bffbbd9],ah
  444b35:	sub    BYTE PTR [eax+eax*1-0x64],al
  444b39:	sub    DWORD PTR [eax+eax*1+0x38],eax
  444b3d:	sub    al,BYTE PTR [eax+eax*1-0x24]
  444b41:	sub    al,BYTE PTR [eax+eax*1-0x38]
  444b45:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  444b49:	sub    al,0x44
  444b4b:	add    BYTE PTR [eax-0x77ffbbd3],ch
  444b51:	cs inc esp
  444b53:	add    BYTE PTR [eax+0x2f],bh
  444b56:	inc    esp
  444b57:	add    BYTE PTR [esp+edx*2],cl
  444b5a:	inc    esp
  444b5b:	inc    ebx
  444b5c:	push   eax
  444b5d:	pop    edi
  444b5e:	arpl   WORD PTR [ecx+0x73],sp
  444b61:	je     0x444b94
  444b63:	xor    bh,BYTE PTR [eax]
  444b65:	lea    eax,[eax+0x0]
  444b68:	ins    BYTE PTR es:[edi],dx
  444b69:	dec    ebx
  444b6a:	inc    esp
  444b6b:	add    BYTE PTR [edi],al
  444b6d:	or     al,0x54
  444b6f:	inc    esp
  444b70:	inc    ebx
  444b71:	push   eax
  444b72:	pop    edi
  444b73:	arpl   WORD PTR [ecx+0x73],sp
  444b76:	je     0x444ba9
  444b78:	xor    bh,BYTE PTR [eax]
  444b7a:	mov    esp,0x7c00444a
  444b7f:	and    al,0x44
  444b81:	add    BYTE PTR [edi],al
  444b83:	add    BYTE PTR [edx],cl
  444b85:	inc    esp
  444b86:	inc    ebx
  444b87:	push   eax
  444b88:	arpl   WORD PTR [ecx+0x73],sp
  444b8b:	je     0x444bbe
  444b8d:	xor    bh,BYTE PTR [eax]
  444b8f:	add    BYTE PTR [eax],al
  444b91:	lea    eax,[eax+0x0]
  444b94:	push   ebx
  444b95:	mov    ecx,edx
  444b97:	mov    ebx,eax
  444b99:	shl    ebx,cl
  444b9b:	mov    ecx,0x20
  444ba0:	sub    ecx,edx
  444ba2:	shr    eax,cl
  444ba4:	or     ebx,eax
  444ba6:	mov    eax,ebx
  444ba8:	pop    ebx
  444ba9:	ret    
  444baa:	mov    eax,eax
  444bac:	mov    eax,0x80
  444bb1:	ret    
  444bb2:	mov    eax,eax
  444bb4:	mov    eax,0x7
  444bb9:	ret    
  444bba:	mov    eax,eax
  444bbc:	push   ebx
  444bbd:	mov    ebx,edx
  444bbf:	mov    eax,ebx
  444bc1:	mov    edx,0x444bd8
  444bc6:	call   0x404fdc
  444bcb:	pop    ebx
  444bcc:	ret    
  444bcd:	add    BYTE PTR [eax],al
  444bcf:	add    bh,bh
  444bd1:	(bad)  
  444bd2:	(bad)  
  444bd3:	inc    DWORD PTR [edi]
  444bd5:	add    BYTE PTR [eax],al
  444bd7:	add    BYTE PTR [ebx+0x61],al
  444bda:	jae    0x444c50
  444bdc:	xor    DWORD PTR [edx],esi
  444bde:	cmp    BYTE PTR [eax],al
  444be0:	push   ebx
  444be1:	push   esi
  444be2:	push   edi
  444be3:	push   ebp
  444be4:	add    esp,0xfffffff8
  444be7:	mov    edi,esp
  444be9:	xor    ecx,ecx
  444beb:	mov    dl,0x1
  444bed:	mov    eax,ds:0x444a70
  444bf2:	call   0x44231c
  444bf7:	mov    esi,eax
  444bf9:	push   0x0
  444bfb:	mov    edx,0x465954
  444c00:	mov    ecx,0x80
  444c05:	mov    eax,esi
  444c07:	mov    ebx,DWORD PTR [eax]
  444c09:	call   DWORD PTR [ebx+0x40]
  444c0c:	mov    ecx,edi
  444c0e:	mov    edx,0x465964
  444c13:	mov    eax,esi
  444c15:	mov    ebx,DWORD PTR [eax]
  444c17:	call   DWORD PTR [ebx+0x6c]
  444c1a:	mov    edx,0x46596c
  444c1f:	mov    eax,edi
  444c21:	mov    ecx,0x8
  444c26:	call   0x408538
  444c2b:	mov    ebx,eax
  444c2d:	mov    ecx,edi
  444c2f:	mov    edx,edi
  444c31:	mov    eax,esi
  444c33:	mov    ebp,DWORD PTR [eax]
  444c35:	call   DWORD PTR [ebp+0x70]
  444c38:	test   bl,bl
  444c3a:	je     0x444c51
  444c3c:	mov    edx,0x465964
  444c41:	mov    eax,edi
  444c43:	mov    ecx,0x8
  444c48:	call   0x408538
  444c4d:	test   al,al
  444c4f:	jne    0x444c55
  444c51:	xor    eax,eax
  444c53:	jmp    0x444c57
  444c55:	mov    al,0x1
  444c57:	mov    ebx,eax
  444c59:	mov    eax,esi
  444c5b:	mov    edx,DWORD PTR [eax]
  444c5d:	call   DWORD PTR [edx+0x44]
  444c60:	push   0x0
  444c62:	mov    edx,0x465954
  444c67:	mov    ecx,0x50
  444c6c:	mov    eax,esi
  444c6e:	mov    ebp,DWORD PTR [eax]
  444c70:	call   DWORD PTR [ebp+0x40]
  444c73:	mov    ecx,edi
  444c75:	mov    edx,0x465964
  444c7a:	mov    eax,esi
  444c7c:	mov    ebp,DWORD PTR [eax]
  444c7e:	call   DWORD PTR [ebp+0x6c]
  444c81:	test   bl,bl
  444c83:	je     0x444c9a
  444c85:	mov    edx,0x465974
  444c8a:	mov    eax,edi
  444c8c:	mov    ecx,0x8
  444c91:	call   0x408538
  444c96:	test   al,al
  444c98:	jne    0x444c9e
  444c9a:	xor    eax,eax
  444c9c:	jmp    0x444ca0
  444c9e:	mov    al,0x1
  444ca0:	mov    ebx,eax
  444ca2:	mov    ecx,edi
  444ca4:	mov    edx,edi
  444ca6:	mov    eax,esi
  444ca8:	mov    ebp,DWORD PTR [eax]
  444caa:	call   DWORD PTR [ebp+0x70]
  444cad:	test   bl,bl
  444caf:	je     0x444cc6
  444cb1:	mov    edx,0x465964
  444cb6:	mov    eax,edi
  444cb8:	mov    ecx,0x8
  444cbd:	call   0x408538
  444cc2:	test   al,al
  444cc4:	jne    0x444cca
  444cc6:	xor    eax,eax
  444cc8:	jmp    0x444ccc
  444cca:	mov    al,0x1
  444ccc:	mov    ebx,eax
  444cce:	mov    eax,esi
  444cd0:	mov    edx,DWORD PTR [eax]
  444cd2:	call   DWORD PTR [edx+0x44]
  444cd5:	push   0x0
  444cd7:	mov    edx,0x465954
  444cdc:	mov    ecx,0x28
  444ce1:	mov    eax,esi
  444ce3:	mov    ebp,DWORD PTR [eax]
  444ce5:	call   DWORD PTR [ebp+0x40]
  444ce8:	mov    ecx,edi
  444cea:	mov    edx,0x465964
  444cef:	mov    eax,esi
  444cf1:	mov    ebp,DWORD PTR [eax]
  444cf3:	call   DWORD PTR [ebp+0x6c]
  444cf6:	test   bl,bl
  444cf8:	je     0x444d0f
  444cfa:	mov    edx,0x46597c
  444cff:	mov    eax,edi
  444d01:	mov    ecx,0x8
  444d06:	call   0x408538
  444d0b:	test   al,al
  444d0d:	jne    0x444d13
  444d0f:	xor    eax,eax
  444d11:	jmp    0x444d15
  444d13:	mov    al,0x1
  444d15:	mov    ebx,eax
  444d17:	mov    ecx,edi
  444d19:	mov    edx,edi
  444d1b:	mov    eax,esi
  444d1d:	mov    ebp,DWORD PTR [eax]
  444d1f:	call   DWORD PTR [ebp+0x70]
  444d22:	test   bl,bl
  444d24:	je     0x444d3b
  444d26:	mov    edx,0x465964
  444d2b:	mov    eax,edi
  444d2d:	mov    ecx,0x8
  444d32:	call   0x408538
  444d37:	test   al,al
  444d39:	jne    0x444d3f
  444d3b:	xor    eax,eax
  444d3d:	jmp    0x444d41
  444d3f:	mov    al,0x1
  444d41:	mov    ebx,eax
  444d43:	mov    eax,esi
  444d45:	mov    edx,DWORD PTR [eax]
  444d47:	call   DWORD PTR [edx+0x44]
  444d4a:	mov    eax,esi
  444d4c:	call   0x4040a0
  444d51:	mov    eax,ebx
  444d53:	pop    ecx
  444d54:	pop    edx
  444d55:	pop    ebp
  444d56:	pop    edi
  444d57:	pop    esi
  444d58:	pop    ebx
  444d59:	ret    
  444d5a:	mov    eax,eax
  444d5c:	push   ebx
  444d5d:	push   esi
  444d5e:	push   edi
  444d5f:	push   ebp
  444d60:	add    esp,0xffffffcc
  444d63:	mov    ebp,ecx
  444d65:	mov    DWORD PTR [esp],edx
  444d68:	mov    ebx,eax
  444d6a:	lea    esi,[esp+0x4]
  444d6e:	mov    edi,0x464954
  444d73:	mov    ecx,0x8
  444d78:	mov    eax,ebp
  444d7a:	xor    edx,edx
  444d7c:	div    ecx
  444d7e:	mov    ebp,eax
  444d80:	cmp    ebp,0xa
  444d83:	ja     0x444d91
  444d85:	mov    DWORD PTR [ebx+0xc8],0xc
  444d8f:	jmp    0x444d9b
  444d91:	mov    DWORD PTR [ebx+0xc8],0x10
  444d9b:	mov    eax,esi
  444d9d:	xor    ecx,ecx
  444d9f:	mov    edx,0x10
  444da4:	call   0x4037c8
  444da9:	mov    edx,esi
  444dab:	mov    eax,DWORD PTR [esp]
  444dae:	mov    ecx,ebp
  444db0:	call   0x403090
  444db5:	mov    eax,DWORD PTR [esi]
  444db7:	mov    edx,eax
  444db9:	shr    edx,0x18
  444dbc:	mov    ecx,eax
  444dbe:	shr    ecx,0x8
  444dc1:	and    ecx,0xff00
  444dc7:	or     edx,ecx
  444dc9:	mov    ecx,eax
  444dcb:	shl    ecx,0x8
  444dce:	and    ecx,0xff0000
  444dd4:	or     edx,ecx
  444dd6:	shl    eax,0x18
  444dd9:	or     edx,eax
  444ddb:	mov    DWORD PTR [esi],edx
  444ddd:	mov    eax,DWORD PTR [esi+0x4]
  444de0:	mov    edx,eax
  444de2:	shr    edx,0x18
  444de5:	mov    ecx,eax
  444de7:	shr    ecx,0x8
  444dea:	and    ecx,0xff00
  444df0:	or     edx,ecx
  444df2:	mov    ecx,eax
  444df4:	shl    ecx,0x8
  444df7:	and    ecx,0xff0000
  444dfd:	or     edx,ecx
  444dff:	shl    eax,0x18
  444e02:	or     edx,eax
  444e04:	mov    DWORD PTR [esi+0x4],edx
  444e07:	mov    eax,DWORD PTR [esi+0x8]
  444e0a:	mov    edx,eax
  444e0c:	shr    edx,0x18
  444e0f:	mov    ecx,eax
  444e11:	shr    ecx,0x8
  444e14:	and    ecx,0xff00
  444e1a:	or     edx,ecx
  444e1c:	mov    ecx,eax
  444e1e:	shl    ecx,0x8
  444e21:	and    ecx,0xff0000
  444e27:	or     edx,ecx
  444e29:	shl    eax,0x18
  444e2c:	or     edx,eax
  444e2e:	mov    DWORD PTR [esi+0x8],edx
  444e31:	mov    eax,DWORD PTR [esi+0xc]
  444e34:	mov    edx,eax
  444e36:	shr    edx,0x18
  444e39:	mov    ecx,eax
  444e3b:	shr    ecx,0x8
  444e3e:	and    ecx,0xff00
  444e44:	or     edx,ecx
  444e46:	mov    ecx,eax
  444e48:	shl    ecx,0x8
  444e4b:	and    ecx,0xff0000
  444e51:	or     edx,ecx
  444e53:	shl    eax,0x18
  444e56:	or     edx,eax
  444e58:	mov    DWORD PTR [esi+0xc],edx
  444e5b:	xor    eax,eax
  444e5d:	mov    edx,eax
  444e5f:	and    edx,0x4
  444e62:	sub    edx,0x1
  444e65:	jb     0x444e75
  444e67:	sub    edx,0x3
  444e6a:	je     0x444ffc
  444e70:	jmp    0x445171
  444e75:	mov    edx,DWORD PTR [esi+0xc]
  444e78:	shr    edx,0x10
  444e7b:	and    edx,0xff
  444e81:	mov    edx,DWORD PTR [edi+edx*4]
  444e84:	xor    edx,DWORD PTR [esi]
  444e86:	mov    ecx,DWORD PTR [esi+0xc]
  444e89:	and    ecx,0xff
  444e8f:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  444e96:	mov    ecx,DWORD PTR [esi+0xc]
  444e99:	shr    ecx,0x18
  444e9c:	xor    edx,DWORD PTR [ecx*4+0x465154]
  444ea3:	mov    ecx,DWORD PTR [esi+0xc]
  444ea6:	shr    ecx,0x8
  444ea9:	and    ecx,0xff
  444eaf:	xor    edx,DWORD PTR [ecx*4+0x465554]
  444eb6:	mov    ecx,DWORD PTR [esi+0x8]
  444eb9:	shr    ecx,0x18
  444ebc:	xor    edx,DWORD PTR [ecx*4+0x465154]
  444ec3:	mov    DWORD PTR [esp+0x24],edx
  444ec7:	mov    edx,DWORD PTR [esp+0x24]
  444ecb:	mov    DWORD PTR [esp+0x14],edx
  444ecf:	mov    edx,DWORD PTR [esp+0x24]
  444ed3:	shr    edx,0x18
  444ed6:	mov    edx,DWORD PTR [edi+edx*4]
  444ed9:	xor    edx,DWORD PTR [esi+0x8]
  444edc:	mov    ecx,DWORD PTR [esp+0x24]
  444ee0:	shr    ecx,0x8
  444ee3:	and    ecx,0xff
  444ee9:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  444ef0:	mov    ecx,DWORD PTR [esp+0x24]
  444ef4:	shr    ecx,0x10
  444ef7:	and    ecx,0xff
  444efd:	xor    edx,DWORD PTR [ecx*4+0x465154]
  444f04:	mov    ecx,DWORD PTR [esp+0x24]
  444f08:	and    ecx,0xff
  444f0e:	xor    edx,DWORD PTR [ecx*4+0x465554]
  444f15:	mov    ecx,DWORD PTR [esi+0x8]
  444f18:	shr    ecx,0x8
  444f1b:	and    ecx,0xff
  444f21:	xor    edx,DWORD PTR [ecx*4+0x465554]
  444f28:	mov    DWORD PTR [esp+0x28],edx
  444f2c:	mov    edx,DWORD PTR [esp+0x28]
  444f30:	mov    DWORD PTR [esp+0x18],edx
  444f34:	mov    edx,DWORD PTR [esp+0x28]
  444f38:	and    edx,0xff
  444f3e:	mov    edx,DWORD PTR [edi+edx*4]
  444f41:	xor    edx,DWORD PTR [esi+0xc]
  444f44:	mov    ecx,DWORD PTR [esp+0x28]
  444f48:	shr    ecx,0x8
  444f4b:	and    ecx,0xff
  444f51:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  444f58:	mov    ecx,DWORD PTR [esp+0x28]
  444f5c:	shr    ecx,0x10
  444f5f:	and    ecx,0xff
  444f65:	xor    edx,DWORD PTR [ecx*4+0x465154]
  444f6c:	mov    ecx,DWORD PTR [esp+0x28]
  444f70:	shr    ecx,0x18
  444f73:	xor    edx,DWORD PTR [ecx*4+0x465554]
  444f7a:	mov    ecx,DWORD PTR [esi+0x8]
  444f7d:	shr    ecx,0x10
  444f80:	and    ecx,0xff
  444f86:	xor    edx,DWORD PTR [edi+ecx*4]
  444f89:	mov    DWORD PTR [esp+0x2c],edx
  444f8d:	mov    edx,DWORD PTR [esp+0x2c]
  444f91:	mov    DWORD PTR [esp+0x1c],edx
  444f95:	mov    edx,DWORD PTR [esp+0x2c]
  444f99:	shr    edx,0x8
  444f9c:	and    edx,0xff
  444fa2:	mov    edx,DWORD PTR [edi+edx*4]
  444fa5:	xor    edx,DWORD PTR [esi+0x4]
  444fa8:	mov    ecx,DWORD PTR [esp+0x2c]
  444fac:	shr    ecx,0x10
  444faf:	and    ecx,0xff
  444fb5:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  444fbc:	mov    ecx,DWORD PTR [esp+0x2c]
  444fc0:	and    ecx,0xff
  444fc6:	xor    edx,DWORD PTR [ecx*4+0x465154]
  444fcd:	mov    ecx,DWORD PTR [esp+0x2c]
  444fd1:	shr    ecx,0x18
  444fd4:	xor    edx,DWORD PTR [ecx*4+0x465554]
  444fdb:	mov    ecx,DWORD PTR [esi+0x8]
  444fde:	and    ecx,0xff
  444fe4:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  444feb:	mov    DWORD PTR [esp+0x30],edx
  444fef:	mov    edx,DWORD PTR [esp+0x30]
  444ff3:	mov    DWORD PTR [esp+0x20],edx
  444ff7:	jmp    0x445171
  444ffc:	mov    edx,DWORD PTR [esp+0x28]
  445000:	shr    edx,0x10
  445003:	and    edx,0xff
  445009:	mov    edx,DWORD PTR [edi+edx*4]
  44500c:	xor    edx,DWORD PTR [esp+0x2c]
  445010:	mov    ecx,DWORD PTR [esp+0x28]
  445014:	and    ecx,0xff
  44501a:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  445021:	mov    ecx,DWORD PTR [esp+0x28]
  445025:	shr    ecx,0x18
  445028:	xor    edx,DWORD PTR [ecx*4+0x465154]
  44502f:	mov    ecx,DWORD PTR [esp+0x28]
  445033:	shr    ecx,0x8
  445036:	and    ecx,0xff
  44503c:	xor    edx,DWORD PTR [ecx*4+0x465554]
  445043:	mov    ecx,DWORD PTR [esp+0x24]
  445047:	shr    ecx,0x18
  44504a:	xor    edx,DWORD PTR [ecx*4+0x465154]
  445051:	mov    DWORD PTR [esi],edx
  445053:	mov    edx,DWORD PTR [esi]
  445055:	mov    DWORD PTR [esp+0x14],edx
  445059:	mov    edx,DWORD PTR [esi]
  44505b:	shr    edx,0x18
  44505e:	mov    edx,DWORD PTR [edi+edx*4]
  445061:	xor    edx,DWORD PTR [esp+0x24]
  445065:	mov    ecx,DWORD PTR [esi]
  445067:	shr    ecx,0x8
  44506a:	and    ecx,0xff
  445070:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  445077:	mov    ecx,DWORD PTR [esi]
  445079:	shr    ecx,0x10
  44507c:	and    ecx,0xff
  445082:	xor    edx,DWORD PTR [ecx*4+0x465154]
  445089:	mov    ecx,DWORD PTR [esi]
  44508b:	and    ecx,0xff
  445091:	xor    edx,DWORD PTR [ecx*4+0x465554]
  445098:	mov    ecx,DWORD PTR [esp+0x24]
  44509c:	shr    ecx,0x8
  44509f:	and    ecx,0xff
  4450a5:	xor    edx,DWORD PTR [ecx*4+0x465554]
  4450ac:	mov    DWORD PTR [esi+0x4],edx
  4450af:	mov    edx,DWORD PTR [esi+0x4]
  4450b2:	mov    DWORD PTR [esp+0x18],edx
  4450b6:	mov    edx,DWORD PTR [esi+0x4]
  4450b9:	and    edx,0xff
  4450bf:	mov    edx,DWORD PTR [edi+edx*4]
  4450c2:	xor    edx,DWORD PTR [esp+0x28]
  4450c6:	mov    ecx,DWORD PTR [esi+0x4]
  4450c9:	shr    ecx,0x8
  4450cc:	and    ecx,0xff
  4450d2:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  4450d9:	mov    ecx,DWORD PTR [esi+0x4]
  4450dc:	shr    ecx,0x10
  4450df:	and    ecx,0xff
  4450e5:	xor    edx,DWORD PTR [ecx*4+0x465154]
  4450ec:	mov    ecx,DWORD PTR [esi+0x4]
  4450ef:	shr    ecx,0x18
  4450f2:	xor    edx,DWORD PTR [ecx*4+0x465554]
  4450f9:	mov    ecx,DWORD PTR [esp+0x24]
  4450fd:	shr    ecx,0x10
  445100:	and    ecx,0xff
  445106:	xor    edx,DWORD PTR [edi+ecx*4]
  445109:	mov    DWORD PTR [esi+0x8],edx
  44510c:	mov    edx,DWORD PTR [esi+0x8]
  44510f:	mov    DWORD PTR [esp+0x1c],edx
  445113:	mov    edx,DWORD PTR [esi+0x8]
  445116:	shr    edx,0x8
  445119:	and    edx,0xff
  44511f:	mov    edx,DWORD PTR [edi+edx*4]
  445122:	xor    edx,DWORD PTR [esp+0x30]
  445126:	mov    ecx,DWORD PTR [esi+0x8]
  445129:	shr    ecx,0x10
  44512c:	and    ecx,0xff
  445132:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  445139:	mov    ecx,DWORD PTR [esi+0x8]
  44513c:	and    ecx,0xff
  445142:	xor    edx,DWORD PTR [ecx*4+0x465154]
  445149:	mov    ecx,DWORD PTR [esi+0x8]
  44514c:	shr    ecx,0x18
  44514f:	xor    edx,DWORD PTR [ecx*4+0x465554]
  445156:	mov    ecx,DWORD PTR [esp+0x24]
  44515a:	and    ecx,0xff
  445160:	xor    edx,DWORD PTR [ecx*4+0x464d54]
  445167:	mov    DWORD PTR [esi+0xc],edx
  44516a:	mov    edx,DWORD PTR [esi+0xc]
  44516d:	mov    DWORD PTR [esp+0x20],edx
  445171:	mov    edx,eax
  445173:	and    edx,0xc
  445176:	mov    ecx,edx
  445178:	sub    ecx,0x1
  44517b:	jb     0x445198
  44517d:	sub    ecx,0x3
  445180:	je     0x4452b9
  445186:	sub    ecx,0x4
  445189:	je     0x4452b9
  44518f:	sub    ecx,0x4
  445192:	jne    0x4453d5
  445198:	mov    ecx,DWORD PTR [esp+0x1c]
  44519c:	shr    ecx,0x18
  44519f:	mov    ecx,DWORD PTR [edi+ecx*4]
  4451a2:	mov    ebp,DWORD PTR [esp+0x1c]
  4451a6:	shr    ebp,0x10
  4451a9:	and    ebp,0xff
  4451af:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  4451b6:	mov    ebp,DWORD PTR [esp+0x18]
  4451ba:	and    ebp,0xff
  4451c0:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  4451c7:	mov    ebp,DWORD PTR [esp+0x18]
  4451cb:	shr    ebp,0x8
  4451ce:	and    ebp,0xff
  4451d4:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  4451db:	mov    DWORD PTR [ebx+eax*4+0x48],ecx
  4451df:	mov    ecx,DWORD PTR [esp+0x1c]
  4451e3:	shr    ecx,0x8
  4451e6:	and    ecx,0xff
  4451ec:	mov    ecx,DWORD PTR [edi+ecx*4]
  4451ef:	mov    ebp,DWORD PTR [esp+0x1c]
  4451f3:	and    ebp,0xff
  4451f9:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  445200:	mov    ebp,DWORD PTR [esp+0x18]
  445204:	shr    ebp,0x10
  445207:	and    ebp,0xff
  44520d:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  445214:	mov    ebp,DWORD PTR [esp+0x18]
  445218:	shr    ebp,0x18
  44521b:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  445222:	mov    DWORD PTR [ebx+eax*4+0x4c],ecx
  445226:	mov    ecx,DWORD PTR [esp+0x20]
  44522a:	shr    ecx,0x18
  44522d:	mov    ecx,DWORD PTR [edi+ecx*4]
  445230:	mov    ebp,DWORD PTR [esp+0x20]
  445234:	shr    ebp,0x10
  445237:	and    ebp,0xff
  44523d:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  445244:	mov    ebp,DWORD PTR [esp+0x14]
  445248:	and    ebp,0xff
  44524e:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  445255:	mov    ebp,DWORD PTR [esp+0x14]
  445259:	shr    ebp,0x8
  44525c:	and    ebp,0xff
  445262:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  445269:	mov    DWORD PTR [ebx+eax*4+0x50],ecx
  44526d:	mov    ecx,DWORD PTR [esp+0x20]
  445271:	shr    ecx,0x8
  445274:	and    ecx,0xff
  44527a:	mov    ecx,DWORD PTR [edi+ecx*4]
  44527d:	mov    ebp,DWORD PTR [esp+0x20]
  445281:	and    ebp,0xff
  445287:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  44528e:	mov    ebp,DWORD PTR [esp+0x14]
  445292:	shr    ebp,0x10
  445295:	and    ebp,0xff
  44529b:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  4452a2:	mov    ebp,DWORD PTR [esp+0x14]
  4452a6:	shr    ebp,0x18
  4452a9:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  4452b0:	mov    DWORD PTR [ebx+eax*4+0x54],ecx
  4452b4:	jmp    0x4453d5
  4452b9:	mov    ecx,DWORD PTR [esp+0x14]
  4452bd:	and    ecx,0xff
  4452c3:	mov    ecx,DWORD PTR [edi+ecx*4]
  4452c6:	mov    ebp,DWORD PTR [esp+0x14]
  4452ca:	shr    ebp,0x8
  4452cd:	and    ebp,0xff
  4452d3:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  4452da:	mov    ebp,DWORD PTR [esp+0x20]
  4452de:	shr    ebp,0x18
  4452e1:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  4452e8:	mov    ebp,DWORD PTR [esp+0x20]
  4452ec:	shr    ebp,0x10
  4452ef:	and    ebp,0xff
  4452f5:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  4452fc:	mov    DWORD PTR [ebx+eax*4+0x48],ecx
  445300:	mov    ecx,DWORD PTR [esp+0x14]
  445304:	shr    ecx,0x10
  445307:	and    ecx,0xff
  44530d:	mov    ecx,DWORD PTR [edi+ecx*4]
  445310:	mov    ebp,DWORD PTR [esp+0x14]
  445314:	shr    ebp,0x18
  445317:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  44531e:	mov    ebp,DWORD PTR [esp+0x20]
  445322:	shr    ebp,0x8
  445325:	and    ebp,0xff
  44532b:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  445332:	mov    ebp,DWORD PTR [esp+0x20]
  445336:	and    ebp,0xff
  44533c:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  445343:	mov    DWORD PTR [ebx+eax*4+0x4c],ecx
  445347:	mov    ecx,DWORD PTR [esp+0x18]
  44534b:	and    ecx,0xff
  445351:	mov    ecx,DWORD PTR [edi+ecx*4]
  445354:	mov    ebp,DWORD PTR [esp+0x18]
  445358:	shr    ebp,0x8
  44535b:	and    ebp,0xff
  445361:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  445368:	mov    ebp,DWORD PTR [esp+0x1c]
  44536c:	shr    ebp,0x18
  44536f:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  445376:	mov    ebp,DWORD PTR [esp+0x1c]
  44537a:	shr    ebp,0x10
  44537d:	and    ebp,0xff
  445383:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  44538a:	mov    DWORD PTR [ebx+eax*4+0x50],ecx
  44538e:	mov    ecx,DWORD PTR [esp+0x18]
  445392:	shr    ecx,0x10
  445395:	and    ecx,0xff
  44539b:	mov    ecx,DWORD PTR [edi+ecx*4]
  44539e:	mov    ebp,DWORD PTR [esp+0x18]
  4453a2:	shr    ebp,0x18
  4453a5:	xor    ecx,DWORD PTR [ebp*4+0x464d54]
  4453ac:	mov    ebp,DWORD PTR [esp+0x1c]
  4453b0:	shr    ebp,0x8
  4453b3:	and    ebp,0xff
  4453b9:	xor    ecx,DWORD PTR [ebp*4+0x465154]
  4453c0:	mov    ebp,DWORD PTR [esp+0x1c]
  4453c4:	and    ebp,0xff
  4453ca:	xor    ecx,DWORD PTR [ebp*4+0x465554]
  4453d1:	mov    DWORD PTR [ebx+eax*4+0x54],ecx
  4453d5:	sub    edx,0x1
  4453d8:	jb     0x4453f6
  4453da:	sub    edx,0x3
  4453dd:	je     0x445451
  4453df:	sub    edx,0x4
  4453e2:	je     0x4454a1
  4453e8:	sub    edx,0x4
  4453eb:	je     0x4454f9
  4453f1:	jmp    0x445544
  4453f6:	mov    edx,DWORD PTR [esp+0x24]
  4453fa:	shr    edx,0x8
  4453fd:	and    edx,0xff
  445403:	mov    edx,DWORD PTR [edi+edx*4]
  445406:	xor    DWORD PTR [ebx+eax*4+0x48],edx
  44540a:	mov    edx,DWORD PTR [esp+0x28]
  44540e:	shr    edx,0x8
  445411:	and    edx,0xff
  445417:	mov    edx,DWORD PTR [edx*4+0x464d54]
  44541e:	xor    DWORD PTR [ebx+eax*4+0x4c],edx
  445422:	mov    edx,DWORD PTR [esp+0x2c]
  445426:	shr    edx,0x10
  445429:	and    edx,0xff
  44542f:	mov    edx,DWORD PTR [edx*4+0x465154]
  445436:	xor    DWORD PTR [ebx+eax*4+0x50],edx
  44543a:	mov    edx,DWORD PTR [esp+0x30]
  44543e:	shr    edx,0x18
  445441:	mov    edx,DWORD PTR [edx*4+0x465554]
  445448:	xor    DWORD PTR [ebx+eax*4+0x54],edx
  44544c:	jmp    0x445544
  445451:	mov    edx,DWORD PTR [esi+0x8]
  445454:	shr    edx,0x18
  445457:	mov    edx,DWORD PTR [edi+edx*4]
  44545a:	xor    DWORD PTR [ebx+eax*4+0x48],edx
  44545e:	mov    edx,DWORD PTR [esi+0xc]
  445461:	shr    edx,0x10
  445464:	and    edx,0xff
  44546a:	mov    edx,DWORD PTR [edx*4+0x464d54]
  445471:	xor    DWORD PTR [ebx+eax*4+0x4c],edx
  445475:	mov    edx,DWORD PTR [esi]
  445477:	and    edx,0xff
  44547d:	mov    edx,DWORD PTR [edx*4+0x465154]
  445484:	xor    DWORD PTR [ebx+eax*4+0x50],edx
  445488:	mov    edx,DWORD PTR [esi+0x4]
  44548b:	and    edx,0xff
  445491:	mov    edx,DWORD PTR [edx*4+0x465554]
  445498:	xor    DWORD PTR [ebx+eax*4+0x54],edx
  44549c:	jmp    0x445544
  4454a1:	mov    edx,DWORD PTR [esp+0x2c]
  4454a5:	shr    edx,0x10
  4454a8:	and    edx,0xff
  4454ae:	mov    edx,DWORD PTR [edi+edx*4]
  4454b1:	xor    DWORD PTR [ebx+eax*4+0x48],edx
  4454b5:	mov    edx,DWORD PTR [esp+0x30]
  4454b9:	shr    edx,0x18
  4454bc:	mov    edx,DWORD PTR [edx*4+0x464d54]
  4454c3:	xor    DWORD PTR [ebx+eax*4+0x4c],edx
  4454c7:	mov    edx,DWORD PTR [esp+0x24]
  4454cb:	shr    edx,0x8
  4454ce:	and    edx,0xff
  4454d4:	mov    edx,DWORD PTR [edx*4+0x465154]
  4454db:	xor    DWORD PTR [ebx+eax*4+0x50],edx
  4454df:	mov    edx,DWORD PTR [esp+0x28]
  4454e3:	shr    edx,0x8
  4454e6:	and    edx,0xff
  4454ec:	mov    edx,DWORD PTR [edx*4+0x465554]
  4454f3:	xor    DWORD PTR [ebx+eax*4+0x54],edx
  4454f7:	jmp    0x445544
  4454f9:	mov    edx,DWORD PTR [esi]
  4454fb:	and    edx,0xff
  445501:	mov    edx,DWORD PTR [edi+edx*4]
  445504:	xor    DWORD PTR [ebx+eax*4+0x48],edx
  445508:	mov    edx,DWORD PTR [esi+0x4]
  44550b:	and    edx,0xff
  445511:	mov    edx,DWORD PTR [edx*4+0x464d54]
  445518:	xor    DWORD PTR [ebx+eax*4+0x4c],edx
  44551c:	mov    edx,DWORD PTR [esi+0x8]
  44551f:	shr    edx,0x18
  445522:	mov    edx,DWORD PTR [edx*4+0x465154]
  445529:	xor    DWORD PTR [ebx+eax*4+0x50],edx
  44552d:	mov    edx,DWORD PTR [esi+0xc]
  445530:	shr    edx,0x10
  445533:	and    edx,0xff
  445539:	mov    edx,DWORD PTR [edx*4+0x465554]
  445540:	xor    DWORD PTR [ebx+eax*4+0x54],edx
  445544:	cmp    eax,0x10
  445547:	jb     0x44555d
  445549:	and    DWORD PTR [ebx+eax*4+0x48],0x1f
  44554e:	and    DWORD PTR [ebx+eax*4+0x4c],0x1f
  445553:	and    DWORD PTR [ebx+eax*4+0x50],0x1f
  445558:	and    DWORD PTR [ebx+eax*4+0x54],0x1f
  44555d:	add    eax,0x4
  445560:	cmp    eax,0x20
  445563:	jb     0x444e5d
  445569:	add    esp,0x34
  44556c:	pop    ebp
  44556d:	pop    edi
  44556e:	pop    esi
  44556f:	pop    ebx
  445570:	ret    
  445571:	lea    eax,[eax+0x0]
  445574:	push   ebx
  445575:	mov    ebx,eax
  445577:	lea    eax,[ebx+0x48]
  44557a:	mov    ecx,0xff
  44557f:	mov    edx,0x80
  445584:	call   0x4037c8
  445589:	xor    eax,eax
  44558b:	mov    DWORD PTR [ebx+0xc8],eax
  445591:	mov    eax,ebx
  445593:	call   0x442770
  445598:	pop    ebx
  445599:	ret    
  44559a:	mov    eax,eax
  44559c:	push   ebx
  44559d:	push   esi
  44559e:	push   edi
  44559f:	push   ebp
  4455a0:	add    esp,0xfffffff8
  4455a3:	mov    DWORD PTR [esp+0x4],ecx
  4455a7:	mov    DWORD PTR [esp],edx
  4455aa:	mov    ebx,eax
  4455ac:	mov    ebp,0x463954
  4455b1:	cmp    BYTE PTR [ebx+0x30],0x0
  4455b5:	jne    0x4455cd
  4455b7:	mov    ecx,0x445b54
  4455bc:	mov    dl,0x1
  4455be:	mov    eax,ds:0x441af8
  4455c3:	call   0x40c8b4
  4455c8:	call   0x4048fc
  4455cd:	mov    eax,DWORD PTR [esp]
  4455d0:	mov    esi,DWORD PTR [eax]
  4455d2:	mov    edx,DWORD PTR [esp]
  4455d5:	add    eax,0x4
  4455d8:	mov    edi,DWORD PTR [eax]
  4455da:	mov    eax,esi
  4455dc:	shr    eax,0x18
  4455df:	mov    edx,esi
  4455e1:	shr    edx,0x8
  4455e4:	and    edx,0xff00
  4455ea:	or     eax,edx
  4455ec:	mov    edx,esi
  4455ee:	shl    edx,0x8
  4455f1:	and    edx,0xff0000
  4455f7:	or     eax,edx
  4455f9:	shl    esi,0x18
  4455fc:	or     eax,esi
  4455fe:	mov    esi,eax
  445600:	mov    eax,edi
  445602:	shr    eax,0x18
  445605:	mov    edx,edi
  445607:	shr    edx,0x8
  44560a:	and    edx,0xff00
  445610:	or     eax,edx
  445612:	mov    edx,edi
  445614:	shl    edx,0x8
  445617:	and    edx,0xff0000
  44561d:	or     eax,edx
  44561f:	shl    edi,0x18
  445622:	or     eax,edi
  445624:	mov    edi,eax
  445626:	mov    eax,DWORD PTR [ebx+0x48]
  445629:	add    eax,edi
  44562b:	mov    edx,DWORD PTR [ebx+0x88]
  445631:	call   0x444b94
  445636:	mov    edx,eax
  445638:	shr    edx,0x18
  44563b:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44563f:	mov    ecx,eax
  445641:	shr    ecx,0x10
  445644:	and    ecx,0xff
  44564a:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445651:	mov    ecx,eax
  445653:	shr    ecx,0x8
  445656:	and    ecx,0xff
  44565c:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445663:	and    eax,0xff
  445668:	add    edx,DWORD PTR [eax*4+0x464554]
  44566f:	xor    esi,edx
  445671:	mov    eax,DWORD PTR [ebx+0x4c]
  445674:	xor    eax,esi
  445676:	mov    edx,DWORD PTR [ebx+0x8c]
  44567c:	call   0x444b94
  445681:	mov    edx,eax
  445683:	shr    edx,0x18
  445686:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44568a:	mov    ecx,eax
  44568c:	shr    ecx,0x10
  44568f:	and    ecx,0xff
  445695:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  44569c:	mov    ecx,eax
  44569e:	shr    ecx,0x8
  4456a1:	and    ecx,0xff
  4456a7:	add    edx,DWORD PTR [ecx*4+0x464154]
  4456ae:	and    eax,0xff
  4456b3:	xor    edx,DWORD PTR [eax*4+0x464554]
  4456ba:	xor    edi,edx
  4456bc:	mov    eax,DWORD PTR [ebx+0x50]
  4456bf:	sub    eax,edi
  4456c1:	mov    edx,DWORD PTR [ebx+0x90]
  4456c7:	call   0x444b94
  4456cc:	mov    edx,eax
  4456ce:	shr    edx,0x18
  4456d1:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  4456d5:	mov    ecx,eax
  4456d7:	shr    ecx,0x10
  4456da:	and    ecx,0xff
  4456e0:	add    edx,DWORD PTR [ecx*4+0x463d54]
  4456e7:	mov    ecx,eax
  4456e9:	shr    ecx,0x8
  4456ec:	and    ecx,0xff
  4456f2:	xor    edx,DWORD PTR [ecx*4+0x464154]
  4456f9:	and    eax,0xff
  4456fe:	sub    edx,DWORD PTR [eax*4+0x464554]
  445705:	xor    esi,edx
  445707:	mov    eax,DWORD PTR [ebx+0x54]
  44570a:	add    eax,esi
  44570c:	mov    edx,DWORD PTR [ebx+0x94]
  445712:	call   0x444b94
  445717:	mov    edx,eax
  445719:	shr    edx,0x18
  44571c:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445720:	mov    ecx,eax
  445722:	shr    ecx,0x10
  445725:	and    ecx,0xff
  44572b:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445732:	mov    ecx,eax
  445734:	shr    ecx,0x8
  445737:	and    ecx,0xff
  44573d:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445744:	and    eax,0xff
  445749:	add    edx,DWORD PTR [eax*4+0x464554]
  445750:	xor    edi,edx
  445752:	mov    eax,DWORD PTR [ebx+0x58]
  445755:	xor    eax,edi
  445757:	mov    edx,DWORD PTR [ebx+0x98]
  44575d:	call   0x444b94
  445762:	mov    edx,eax
  445764:	shr    edx,0x18
  445767:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44576b:	mov    ecx,eax
  44576d:	shr    ecx,0x10
  445770:	and    ecx,0xff
  445776:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  44577d:	mov    ecx,eax
  44577f:	shr    ecx,0x8
  445782:	and    ecx,0xff
  445788:	add    edx,DWORD PTR [ecx*4+0x464154]
  44578f:	and    eax,0xff
  445794:	xor    edx,DWORD PTR [eax*4+0x464554]
  44579b:	xor    esi,edx
  44579d:	mov    eax,DWORD PTR [ebx+0x5c]
  4457a0:	sub    eax,esi
  4457a2:	mov    edx,DWORD PTR [ebx+0x9c]
  4457a8:	call   0x444b94
  4457ad:	mov    edx,eax
  4457af:	shr    edx,0x18
  4457b2:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  4457b6:	mov    ecx,eax
  4457b8:	shr    ecx,0x10
  4457bb:	and    ecx,0xff
  4457c1:	add    edx,DWORD PTR [ecx*4+0x463d54]
  4457c8:	mov    ecx,eax
  4457ca:	shr    ecx,0x8
  4457cd:	and    ecx,0xff
  4457d3:	xor    edx,DWORD PTR [ecx*4+0x464154]
  4457da:	and    eax,0xff
  4457df:	sub    edx,DWORD PTR [eax*4+0x464554]
  4457e6:	xor    edi,edx
  4457e8:	mov    eax,DWORD PTR [ebx+0x60]
  4457eb:	add    eax,edi
  4457ed:	mov    edx,DWORD PTR [ebx+0xa0]
  4457f3:	call   0x444b94
  4457f8:	mov    edx,eax
  4457fa:	shr    edx,0x18
  4457fd:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445801:	mov    ecx,eax
  445803:	shr    ecx,0x10
  445806:	and    ecx,0xff
  44580c:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445813:	mov    ecx,eax
  445815:	shr    ecx,0x8
  445818:	and    ecx,0xff
  44581e:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445825:	and    eax,0xff
  44582a:	add    edx,DWORD PTR [eax*4+0x464554]
  445831:	xor    esi,edx
  445833:	mov    eax,DWORD PTR [ebx+0x64]
  445836:	xor    eax,esi
  445838:	mov    edx,DWORD PTR [ebx+0xa4]
  44583e:	call   0x444b94
  445843:	mov    edx,eax
  445845:	shr    edx,0x18
  445848:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44584c:	mov    ecx,eax
  44584e:	shr    ecx,0x10
  445851:	and    ecx,0xff
  445857:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  44585e:	mov    ecx,eax
  445860:	shr    ecx,0x8
  445863:	and    ecx,0xff
  445869:	add    edx,DWORD PTR [ecx*4+0x464154]
  445870:	and    eax,0xff
  445875:	xor    edx,DWORD PTR [eax*4+0x464554]
  44587c:	xor    edi,edx
  44587e:	mov    eax,DWORD PTR [ebx+0x68]
  445881:	sub    eax,edi
  445883:	mov    edx,DWORD PTR [ebx+0xa8]
  445889:	call   0x444b94
  44588e:	mov    edx,eax
  445890:	shr    edx,0x18
  445893:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445897:	mov    ecx,eax
  445899:	shr    ecx,0x10
  44589c:	and    ecx,0xff
  4458a2:	add    edx,DWORD PTR [ecx*4+0x463d54]
  4458a9:	mov    ecx,eax
  4458ab:	shr    ecx,0x8
  4458ae:	and    ecx,0xff
  4458b4:	xor    edx,DWORD PTR [ecx*4+0x464154]
  4458bb:	and    eax,0xff
  4458c0:	sub    edx,DWORD PTR [eax*4+0x464554]
  4458c7:	xor    esi,edx
  4458c9:	mov    eax,DWORD PTR [ebx+0x6c]
  4458cc:	add    eax,esi
  4458ce:	mov    edx,DWORD PTR [ebx+0xac]
  4458d4:	call   0x444b94
  4458d9:	mov    edx,eax
  4458db:	shr    edx,0x18
  4458de:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  4458e2:	mov    ecx,eax
  4458e4:	shr    ecx,0x10
  4458e7:	and    ecx,0xff
  4458ed:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  4458f4:	mov    ecx,eax
  4458f6:	shr    ecx,0x8
  4458f9:	and    ecx,0xff
  4458ff:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445906:	and    eax,0xff
  44590b:	add    edx,DWORD PTR [eax*4+0x464554]
  445912:	xor    edi,edx
  445914:	mov    eax,DWORD PTR [ebx+0x70]
  445917:	xor    eax,edi
  445919:	mov    edx,DWORD PTR [ebx+0xb0]
  44591f:	call   0x444b94
  445924:	mov    edx,eax
  445926:	shr    edx,0x18
  445929:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44592d:	mov    ecx,eax
  44592f:	shr    ecx,0x10
  445932:	and    ecx,0xff
  445938:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  44593f:	mov    ecx,eax
  445941:	shr    ecx,0x8
  445944:	and    ecx,0xff
  44594a:	add    edx,DWORD PTR [ecx*4+0x464154]
  445951:	and    eax,0xff
  445956:	xor    edx,DWORD PTR [eax*4+0x464554]
  44595d:	xor    esi,edx
  44595f:	mov    eax,DWORD PTR [ebx+0x74]
  445962:	sub    eax,esi
  445964:	mov    edx,DWORD PTR [ebx+0xb4]
  44596a:	call   0x444b94
  44596f:	mov    edx,eax
  445971:	shr    edx,0x18
  445974:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445978:	mov    ecx,eax
  44597a:	shr    ecx,0x10
  44597d:	and    ecx,0xff
  445983:	add    edx,DWORD PTR [ecx*4+0x463d54]
  44598a:	mov    ecx,eax
  44598c:	shr    ecx,0x8
  44598f:	and    ecx,0xff
  445995:	xor    edx,DWORD PTR [ecx*4+0x464154]
  44599c:	and    eax,0xff
  4459a1:	sub    edx,DWORD PTR [eax*4+0x464554]
  4459a8:	xor    edi,edx
  4459aa:	cmp    DWORD PTR [ebx+0xc8],0xc
  4459b1:	jbe    0x445ae9
  4459b7:	mov    eax,DWORD PTR [ebx+0x78]
  4459ba:	add    eax,edi
  4459bc:	mov    edx,DWORD PTR [ebx+0xb8]
  4459c2:	call   0x444b94
  4459c7:	mov    edx,eax
  4459c9:	shr    edx,0x18
  4459cc:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  4459d0:	mov    ecx,eax
  4459d2:	shr    ecx,0x10
  4459d5:	and    ecx,0xff
  4459db:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  4459e2:	mov    ecx,eax
  4459e4:	shr    ecx,0x8
  4459e7:	and    ecx,0xff
  4459ed:	sub    edx,DWORD PTR [ecx*4+0x464154]
  4459f4:	and    eax,0xff
  4459f9:	add    edx,DWORD PTR [eax*4+0x464554]
  445a00:	xor    esi,edx
  445a02:	mov    eax,DWORD PTR [ebx+0x7c]
  445a05:	xor    eax,esi
  445a07:	mov    edx,DWORD PTR [ebx+0xbc]
  445a0d:	call   0x444b94
  445a12:	mov    edx,eax
  445a14:	shr    edx,0x18
  445a17:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445a1b:	mov    ecx,eax
  445a1d:	shr    ecx,0x10
  445a20:	and    ecx,0xff
  445a26:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  445a2d:	mov    ecx,eax
  445a2f:	shr    ecx,0x8
  445a32:	and    ecx,0xff
  445a38:	add    edx,DWORD PTR [ecx*4+0x464154]
  445a3f:	and    eax,0xff
  445a44:	xor    edx,DWORD PTR [eax*4+0x464554]
  445a4b:	xor    edi,edx
  445a4d:	mov    eax,DWORD PTR [ebx+0x80]
  445a53:	sub    eax,edi
  445a55:	mov    edx,DWORD PTR [ebx+0xc0]
  445a5b:	call   0x444b94
  445a60:	mov    edx,eax
  445a62:	shr    edx,0x18
  445a65:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445a69:	mov    ecx,eax
  445a6b:	shr    ecx,0x10
  445a6e:	and    ecx,0xff
  445a74:	add    edx,DWORD PTR [ecx*4+0x463d54]
  445a7b:	mov    ecx,eax
  445a7d:	shr    ecx,0x8
  445a80:	and    ecx,0xff
  445a86:	xor    edx,DWORD PTR [ecx*4+0x464154]
  445a8d:	and    eax,0xff
  445a92:	sub    edx,DWORD PTR [eax*4+0x464554]
  445a99:	xor    esi,edx
  445a9b:	mov    eax,DWORD PTR [ebx+0x84]
  445aa1:	add    eax,esi
  445aa3:	mov    edx,DWORD PTR [ebx+0xc4]
  445aa9:	call   0x444b94
  445aae:	mov    edx,eax
  445ab0:	shr    edx,0x18
  445ab3:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445ab7:	mov    ecx,eax
  445ab9:	shr    ecx,0x10
  445abc:	and    ecx,0xff
  445ac2:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445ac9:	mov    ecx,eax
  445acb:	shr    ecx,0x8
  445ace:	and    ecx,0xff
  445ad4:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445adb:	and    eax,0xff
  445ae0:	add    edx,DWORD PTR [eax*4+0x464554]
  445ae7:	xor    edi,edx
  445ae9:	mov    eax,esi
  445aeb:	shr    eax,0x18
  445aee:	mov    edx,esi
  445af0:	shr    edx,0x8
  445af3:	and    edx,0xff00
  445af9:	or     eax,edx
  445afb:	mov    edx,esi
  445afd:	shl    edx,0x8
  445b00:	and    edx,0xff0000
  445b06:	or     eax,edx
  445b08:	shl    esi,0x18
  445b0b:	or     eax,esi
  445b0d:	mov    esi,eax
  445b0f:	mov    eax,edi
  445b11:	shr    eax,0x18
  445b14:	mov    edx,edi
  445b16:	shr    edx,0x8
  445b19:	and    edx,0xff00
  445b1f:	or     eax,edx
  445b21:	mov    edx,edi
  445b23:	shl    edx,0x8
  445b26:	and    edx,0xff0000
  445b2c:	or     eax,edx
  445b2e:	shl    edi,0x18
  445b31:	or     eax,edi
  445b33:	mov    edi,eax
  445b35:	mov    eax,DWORD PTR [esp+0x4]
  445b39:	mov    DWORD PTR [eax],edi
  445b3b:	mov    eax,DWORD PTR [esp+0x4]
  445b3f:	add    eax,0x4
  445b42:	mov    DWORD PTR [eax],esi
  445b44:	pop    ecx
  445b45:	pop    edx
  445b46:	pop    ebp
  445b47:	pop    edi
  445b48:	pop    esi
  445b49:	pop    ebx
  445b4a:	ret    
  445b4b:	add    bh,bh
  445b4d:	(bad)  
  445b4e:	(bad)  
  445b4f:	call   DWORD PTR [esi]
  445b51:	add    BYTE PTR [eax],al
  445b53:	add    BYTE PTR [ebx+0x69],al
  445b56:	jo     0x445bc0
  445b58:	gs jb  0x445b7b
  445b5b:	outs   dx,BYTE PTR ds:[esi]
  445b5c:	outs   dx,DWORD PTR ds:[esi]
  445b5d:	je     0x445b7f
  445b5f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  445b66:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  445b6d:	push   esi
  445b6e:	push   edi
  445b6f:	push   ebp
  445b70:	add    esp,0xfffffff8
  445b73:	mov    DWORD PTR [esp+0x4],ecx
  445b77:	mov    DWORD PTR [esp],edx
  445b7a:	mov    ebx,eax
  445b7c:	mov    ebp,0x463954
  445b81:	cmp    BYTE PTR [ebx+0x30],0x0
  445b85:	jne    0x445b9d
  445b87:	mov    ecx,0x446124
  445b8c:	mov    dl,0x1
  445b8e:	mov    eax,ds:0x441af8
  445b93:	call   0x40c8b4
  445b98:	call   0x4048fc
  445b9d:	mov    eax,DWORD PTR [esp]
  445ba0:	mov    edi,DWORD PTR [eax]
  445ba2:	mov    edx,DWORD PTR [esp]
  445ba5:	add    eax,0x4
  445ba8:	mov    esi,DWORD PTR [eax]
  445baa:	mov    eax,esi
  445bac:	shr    eax,0x18
  445baf:	mov    edx,esi
  445bb1:	shr    edx,0x8
  445bb4:	and    edx,0xff00
  445bba:	or     eax,edx
  445bbc:	mov    edx,esi
  445bbe:	shl    edx,0x8
  445bc1:	and    edx,0xff0000
  445bc7:	or     eax,edx
  445bc9:	shl    esi,0x18
  445bcc:	or     eax,esi
  445bce:	mov    esi,eax
  445bd0:	mov    eax,edi
  445bd2:	shr    eax,0x18
  445bd5:	mov    edx,edi
  445bd7:	shr    edx,0x8
  445bda:	and    edx,0xff00
  445be0:	or     eax,edx
  445be2:	mov    edx,edi
  445be4:	shl    edx,0x8
  445be7:	and    edx,0xff0000
  445bed:	or     eax,edx
  445bef:	shl    edi,0x18
  445bf2:	or     eax,edi
  445bf4:	mov    edi,eax
  445bf6:	cmp    DWORD PTR [ebx+0xc8],0xc
  445bfd:	jbe    0x445d35
  445c03:	mov    eax,DWORD PTR [ebx+0x84]
  445c09:	add    eax,esi
  445c0b:	mov    edx,DWORD PTR [ebx+0xc4]
  445c11:	call   0x444b94
  445c16:	mov    edx,eax
  445c18:	shr    edx,0x18
  445c1b:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445c1f:	mov    ecx,eax
  445c21:	shr    ecx,0x10
  445c24:	and    ecx,0xff
  445c2a:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445c31:	mov    ecx,eax
  445c33:	shr    ecx,0x8
  445c36:	and    ecx,0xff
  445c3c:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445c43:	and    eax,0xff
  445c48:	add    edx,DWORD PTR [eax*4+0x464554]
  445c4f:	xor    edi,edx
  445c51:	mov    eax,DWORD PTR [ebx+0x80]
  445c57:	sub    eax,edi
  445c59:	mov    edx,DWORD PTR [ebx+0xc0]
  445c5f:	call   0x444b94
  445c64:	mov    edx,eax
  445c66:	shr    edx,0x18
  445c69:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445c6d:	mov    ecx,eax
  445c6f:	shr    ecx,0x10
  445c72:	and    ecx,0xff
  445c78:	add    edx,DWORD PTR [ecx*4+0x463d54]
  445c7f:	mov    ecx,eax
  445c81:	shr    ecx,0x8
  445c84:	and    ecx,0xff
  445c8a:	xor    edx,DWORD PTR [ecx*4+0x464154]
  445c91:	and    eax,0xff
  445c96:	sub    edx,DWORD PTR [eax*4+0x464554]
  445c9d:	xor    esi,edx
  445c9f:	mov    eax,DWORD PTR [ebx+0x7c]
  445ca2:	xor    eax,esi
  445ca4:	mov    edx,DWORD PTR [ebx+0xbc]
  445caa:	call   0x444b94
  445caf:	mov    edx,eax
  445cb1:	shr    edx,0x18
  445cb4:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445cb8:	mov    ecx,eax
  445cba:	shr    ecx,0x10
  445cbd:	and    ecx,0xff
  445cc3:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  445cca:	mov    ecx,eax
  445ccc:	shr    ecx,0x8
  445ccf:	and    ecx,0xff
  445cd5:	add    edx,DWORD PTR [ecx*4+0x464154]
  445cdc:	and    eax,0xff
  445ce1:	xor    edx,DWORD PTR [eax*4+0x464554]
  445ce8:	xor    edi,edx
  445cea:	mov    eax,DWORD PTR [ebx+0x78]
  445ced:	add    eax,edi
  445cef:	mov    edx,DWORD PTR [ebx+0xb8]
  445cf5:	call   0x444b94
  445cfa:	mov    edx,eax
  445cfc:	shr    edx,0x18
  445cff:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445d03:	mov    ecx,eax
  445d05:	shr    ecx,0x10
  445d08:	and    ecx,0xff
  445d0e:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445d15:	mov    ecx,eax
  445d17:	shr    ecx,0x8
  445d1a:	and    ecx,0xff
  445d20:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445d27:	and    eax,0xff
  445d2c:	add    edx,DWORD PTR [eax*4+0x464554]
  445d33:	xor    esi,edx
  445d35:	mov    eax,DWORD PTR [ebx+0x74]
  445d38:	sub    eax,esi
  445d3a:	mov    edx,DWORD PTR [ebx+0xb4]
  445d40:	call   0x444b94
  445d45:	mov    edx,eax
  445d47:	shr    edx,0x18
  445d4a:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445d4e:	mov    ecx,eax
  445d50:	shr    ecx,0x10
  445d53:	and    ecx,0xff
  445d59:	add    edx,DWORD PTR [ecx*4+0x463d54]
  445d60:	mov    ecx,eax
  445d62:	shr    ecx,0x8
  445d65:	and    ecx,0xff
  445d6b:	xor    edx,DWORD PTR [ecx*4+0x464154]
  445d72:	and    eax,0xff
  445d77:	sub    edx,DWORD PTR [eax*4+0x464554]
  445d7e:	xor    edi,edx
  445d80:	mov    eax,DWORD PTR [ebx+0x70]
  445d83:	xor    eax,edi
  445d85:	mov    edx,DWORD PTR [ebx+0xb0]
  445d8b:	call   0x444b94
  445d90:	mov    edx,eax
  445d92:	shr    edx,0x18
  445d95:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445d99:	mov    ecx,eax
  445d9b:	shr    ecx,0x10
  445d9e:	and    ecx,0xff
  445da4:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  445dab:	mov    ecx,eax
  445dad:	shr    ecx,0x8
  445db0:	and    ecx,0xff
  445db6:	add    edx,DWORD PTR [ecx*4+0x464154]
  445dbd:	and    eax,0xff
  445dc2:	xor    edx,DWORD PTR [eax*4+0x464554]
  445dc9:	xor    esi,edx
  445dcb:	mov    eax,DWORD PTR [ebx+0x6c]
  445dce:	add    eax,esi
  445dd0:	mov    edx,DWORD PTR [ebx+0xac]
  445dd6:	call   0x444b94
  445ddb:	mov    edx,eax
  445ddd:	shr    edx,0x18
  445de0:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445de4:	mov    ecx,eax
  445de6:	shr    ecx,0x10
  445de9:	and    ecx,0xff
  445def:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445df6:	mov    ecx,eax
  445df8:	shr    ecx,0x8
  445dfb:	and    ecx,0xff
  445e01:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445e08:	and    eax,0xff
  445e0d:	add    edx,DWORD PTR [eax*4+0x464554]
  445e14:	xor    edi,edx
  445e16:	mov    eax,DWORD PTR [ebx+0x68]
  445e19:	sub    eax,edi
  445e1b:	mov    edx,DWORD PTR [ebx+0xa8]
  445e21:	call   0x444b94
  445e26:	mov    edx,eax
  445e28:	shr    edx,0x18
  445e2b:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445e2f:	mov    ecx,eax
  445e31:	shr    ecx,0x10
  445e34:	and    ecx,0xff
  445e3a:	add    edx,DWORD PTR [ecx*4+0x463d54]
  445e41:	mov    ecx,eax
  445e43:	shr    ecx,0x8
  445e46:	and    ecx,0xff
  445e4c:	xor    edx,DWORD PTR [ecx*4+0x464154]
  445e53:	and    eax,0xff
  445e58:	sub    edx,DWORD PTR [eax*4+0x464554]
  445e5f:	xor    esi,edx
  445e61:	mov    eax,DWORD PTR [ebx+0x64]
  445e64:	xor    eax,esi
  445e66:	mov    edx,DWORD PTR [ebx+0xa4]
  445e6c:	call   0x444b94
  445e71:	mov    edx,eax
  445e73:	shr    edx,0x18
  445e76:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445e7a:	mov    ecx,eax
  445e7c:	shr    ecx,0x10
  445e7f:	and    ecx,0xff
  445e85:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  445e8c:	mov    ecx,eax
  445e8e:	shr    ecx,0x8
  445e91:	and    ecx,0xff
  445e97:	add    edx,DWORD PTR [ecx*4+0x464154]
  445e9e:	and    eax,0xff
  445ea3:	xor    edx,DWORD PTR [eax*4+0x464554]
  445eaa:	xor    edi,edx
  445eac:	mov    eax,DWORD PTR [ebx+0x60]
  445eaf:	add    eax,edi
  445eb1:	mov    edx,DWORD PTR [ebx+0xa0]
  445eb7:	call   0x444b94
  445ebc:	mov    edx,eax
  445ebe:	shr    edx,0x18
  445ec1:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445ec5:	mov    ecx,eax
  445ec7:	shr    ecx,0x10
  445eca:	and    ecx,0xff
  445ed0:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445ed7:	mov    ecx,eax
  445ed9:	shr    ecx,0x8
  445edc:	and    ecx,0xff
  445ee2:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445ee9:	and    eax,0xff
  445eee:	add    edx,DWORD PTR [eax*4+0x464554]
  445ef5:	xor    esi,edx
  445ef7:	mov    eax,DWORD PTR [ebx+0x5c]
  445efa:	sub    eax,esi
  445efc:	mov    edx,DWORD PTR [ebx+0x9c]
  445f02:	call   0x444b94
  445f07:	mov    edx,eax
  445f09:	shr    edx,0x18
  445f0c:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445f10:	mov    ecx,eax
  445f12:	shr    ecx,0x10
  445f15:	and    ecx,0xff
  445f1b:	add    edx,DWORD PTR [ecx*4+0x463d54]
  445f22:	mov    ecx,eax
  445f24:	shr    ecx,0x8
  445f27:	and    ecx,0xff
  445f2d:	xor    edx,DWORD PTR [ecx*4+0x464154]
  445f34:	and    eax,0xff
  445f39:	sub    edx,DWORD PTR [eax*4+0x464554]
  445f40:	xor    edi,edx
  445f42:	mov    eax,DWORD PTR [ebx+0x58]
  445f45:	xor    eax,edi
  445f47:	mov    edx,DWORD PTR [ebx+0x98]
  445f4d:	call   0x444b94
  445f52:	mov    edx,eax
  445f54:	shr    edx,0x18
  445f57:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445f5b:	mov    ecx,eax
  445f5d:	shr    ecx,0x10
  445f60:	and    ecx,0xff
  445f66:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  445f6d:	mov    ecx,eax
  445f6f:	shr    ecx,0x8
  445f72:	and    ecx,0xff
  445f78:	add    edx,DWORD PTR [ecx*4+0x464154]
  445f7f:	and    eax,0xff
  445f84:	xor    edx,DWORD PTR [eax*4+0x464554]
  445f8b:	xor    esi,edx
  445f8d:	mov    eax,DWORD PTR [ebx+0x54]
  445f90:	add    eax,esi
  445f92:	mov    edx,DWORD PTR [ebx+0x94]
  445f98:	call   0x444b94
  445f9d:	mov    edx,eax
  445f9f:	shr    edx,0x18
  445fa2:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445fa6:	mov    ecx,eax
  445fa8:	shr    ecx,0x10
  445fab:	and    ecx,0xff
  445fb1:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  445fb8:	mov    ecx,eax
  445fba:	shr    ecx,0x8
  445fbd:	and    ecx,0xff
  445fc3:	sub    edx,DWORD PTR [ecx*4+0x464154]
  445fca:	and    eax,0xff
  445fcf:	add    edx,DWORD PTR [eax*4+0x464554]
  445fd6:	xor    edi,edx
  445fd8:	mov    eax,DWORD PTR [ebx+0x50]
  445fdb:	sub    eax,edi
  445fdd:	mov    edx,DWORD PTR [ebx+0x90]
  445fe3:	call   0x444b94
  445fe8:	mov    edx,eax
  445fea:	shr    edx,0x18
  445fed:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  445ff1:	mov    ecx,eax
  445ff3:	shr    ecx,0x10
  445ff6:	and    ecx,0xff
  445ffc:	add    edx,DWORD PTR [ecx*4+0x463d54]
  446003:	mov    ecx,eax
  446005:	shr    ecx,0x8
  446008:	and    ecx,0xff
  44600e:	xor    edx,DWORD PTR [ecx*4+0x464154]
  446015:	and    eax,0xff
  44601a:	sub    edx,DWORD PTR [eax*4+0x464554]
  446021:	xor    esi,edx
  446023:	mov    eax,DWORD PTR [ebx+0x4c]
  446026:	xor    eax,esi
  446028:	mov    edx,DWORD PTR [ebx+0x8c]
  44602e:	call   0x444b94
  446033:	mov    edx,eax
  446035:	shr    edx,0x18
  446038:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  44603c:	mov    ecx,eax
  44603e:	shr    ecx,0x10
  446041:	and    ecx,0xff
  446047:	sub    edx,DWORD PTR [ecx*4+0x463d54]
  44604e:	mov    ecx,eax
  446050:	shr    ecx,0x8
  446053:	and    ecx,0xff
  446059:	add    edx,DWORD PTR [ecx*4+0x464154]
  446060:	and    eax,0xff
  446065:	xor    edx,DWORD PTR [eax*4+0x464554]
  44606c:	xor    edi,edx
  44606e:	mov    eax,DWORD PTR [ebx+0x48]
  446071:	add    eax,edi
  446073:	mov    edx,DWORD PTR [ebx+0x88]
  446079:	call   0x444b94
  44607e:	mov    edx,eax
  446080:	shr    edx,0x18
  446083:	mov    edx,DWORD PTR [ebp+edx*4+0x0]
  446087:	mov    ecx,eax
  446089:	shr    ecx,0x10
  44608c:	and    ecx,0xff
  446092:	xor    edx,DWORD PTR [ecx*4+0x463d54]
  446099:	mov    ecx,eax
  44609b:	shr    ecx,0x8
  44609e:	and    ecx,0xff
  4460a4:	sub    edx,DWORD PTR [ecx*4+0x464154]
  4460ab:	and    eax,0xff
  4460b0:	add    edx,DWORD PTR [eax*4+0x464554]
  4460b7:	xor    esi,edx
  4460b9:	mov    eax,esi
  4460bb:	shr    eax,0x18
  4460be:	mov    edx,esi
  4460c0:	shr    edx,0x8
  4460c3:	and    edx,0xff00
  4460c9:	or     eax,edx
  4460cb:	mov    edx,esi
  4460cd:	shl    edx,0x8
  4460d0:	and    edx,0xff0000
  4460d6:	or     eax,edx
  4460d8:	shl    esi,0x18
  4460db:	or     eax,esi
  4460dd:	mov    esi,eax
  4460df:	mov    eax,edi
  4460e1:	shr    eax,0x18
  4460e4:	mov    edx,edi
  4460e6:	shr    edx,0x8
  4460e9:	and    edx,0xff00
  4460ef:	or     eax,edx
  4460f1:	mov    edx,edi
  4460f3:	shl    edx,0x8
  4460f6:	and    edx,0xff0000
  4460fc:	or     eax,edx
  4460fe:	shl    edi,0x18
  446101:	or     eax,edi
  446103:	mov    edi,eax
  446105:	mov    eax,DWORD PTR [esp+0x4]
  446109:	mov    DWORD PTR [eax],esi
  44610b:	mov    eax,DWORD PTR [esp+0x4]
  44610f:	add    eax,0x4
  446112:	mov    DWORD PTR [eax],edi
  446114:	pop    ecx
  446115:	pop    edx
  446116:	pop    ebp
  446117:	pop    edi
  446118:	pop    esi
  446119:	pop    ebx
  44611a:	ret    
  44611b:	add    bh,bh
  44611d:	(bad)  
  44611e:	(bad)  
  44611f:	call   DWORD PTR [esi]
  446121:	add    BYTE PTR [eax],al
  446123:	add    BYTE PTR [ebx+0x69],al
  446126:	jo     0x446190
  446128:	gs jb  0x44614b
  44612b:	outs   dx,BYTE PTR ds:[esi]
  44612c:	outs   dx,DWORD PTR ds:[esi]
  44612d:	je     0x44614f
  44612f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  446136:	imul   edi,DWORD PTR [edx+0x65],0x88000064
  44613d:	popa   
  44613e:	inc    esp
	...
  44614b:	add    BYTE PTR [eax],bh
  44614d:	bound  eax,QWORD PTR [eax+eax*1+0x0]
	...
  446159:	add    BYTE PTR [eax],al
  44615b:	add    BYTE PTR [edx+eiz*2],ah
  44615e:	inc    esp
  44615f:	add    al,bl
  446161:	add    DWORD PTR [eax],eax
  446163:	add    BYTE PTR [eax+0x18004424],dh
  446169:	test   eax,0x42dc0041
  44616e:	inc    eax
  44616f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  446175:	inc    edx
  446176:	inc    eax
  446177:	add    al,bl
  446179:	inc    edx
  44617a:	inc    eax
  44617b:	add    BYTE PTR [eax],bh
  44617d:	inc    eax
  44617e:	inc    eax
  44617f:	add    BYTE PTR [eax+eax*2+0x40],dl
  446183:	add    BYTE PTR [eax+0x20],bh
  446186:	inc    esp
  446187:	add    BYTE PTR [eax+0x41],ch
  44618a:	inc    ecx
  44618b:	add    BYTE PTR [eax-0x5b],dh
  44618e:	inc    ecx
  44618f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  446196:	inc    ecx
  446197:	add    BYTE PTR [eax],dl
  446199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44619a:	inc    ecx
  44619b:	add    BYTE PTR [eax-0x5a],bl
  44619e:	inc    ecx
  44619f:	add    BYTE PTR [eax-0x59],dl
  4461a2:	inc    ecx
  4461a3:	add    BYTE PTR [eax],dh
  4461a5:	test   eax,0xa6680041
  4461aa:	inc    ecx
  4461ab:	add    BYTE PTR [eax-0x5a],ah
  4461ae:	inc    ecx
  4461af:	add    BYTE PTR [eax],bh
  4461b1:	test   eax,0x231c0041
  4461b6:	inc    esp
  4461b7:	add    BYTE PTR [ebx+eiz*2+0x63940044],cl
  4461be:	inc    esp
  4461bf:	add    BYTE PTR [ebx+eiz*2+0x63b80044],al
  4461c6:	inc    esp
  4461c7:	add    BYTE PTR [eax+esi*1+0x67f00044],cl
  4461ce:	inc    esp
  4461cf:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  4461d6:	inc    esp
  4461d7:	add    BYTE PTR [eax],bh
  4461d9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  4461dd:	and    DWORD PTR [eax+eax*1-0x14],eax
  4461e1:	and    DWORD PTR [eax+eax*1+0x34],eax
  4461e5:	gs inc esp
  4461e7:	add    BYTE PTR [eax+esi*1+0x31000044],al
  4461ee:	inc    esp
  4461ef:	add    BYTE PTR [eax+0x31],bl
  4461f2:	inc    esp
  4461f3:	add    BYTE PTR [eax+ebp*2],ah
  4461f6:	inc    esp
  4461f7:	add    BYTE PTR [eax],ch
  4461f9:	ins    DWORD PTR es:[edi],dx
  4461fa:	inc    esp
  4461fb:	add    BYTE PTR [edx+esi*1],ah
  4461fe:	inc    esp
  4461ff:	add    BYTE PTR [eax],bl
  446201:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  446205:	xor    al,0x44
  446207:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  44620e:	inc    esp
  44620f:	add    BYTE PTR [esi+esi*1+0x44],cl
  446213:	add    BYTE PTR [edi+esi*1+0x44],cl
  446217:	add    BYTE PTR [eax+edi*1],ch
  44621a:	inc    esp
  44621b:	add    BYTE PTR [ecx+edi*1],cl
  44621e:	inc    esp
  44621f:	add    ah,bh
  446221:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  446225:	push   esp
  446226:	inc    esp
  446227:	inc    ebx
  446228:	push   eax
  446229:	pop    edi
  44622a:	arpl   WORD PTR [ecx+0x73],sp
  44622d:	je     0x446261
  44622f:	xor    eax,0x408d36
  446234:	cmp    BYTE PTR [edx+0x44],ah
  446237:	add    BYTE PTR [edi],al
  446239:	or     al,0x54
  44623b:	inc    esp
  44623c:	inc    ebx
  44623d:	push   eax
  44623e:	pop    edi
  44623f:	arpl   WORD PTR [ecx+0x73],sp
  446242:	je     0x446276
  446244:	xor    eax,0x44618836
  446249:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  446250:	or     al,BYTE PTR [ebx+eax*2+0x50]
  446254:	arpl   WORD PTR [ecx+0x73],sp
  446257:	je     0x44628b
  446259:	xor    eax,0x8d000036
  44625e:	inc    eax
  44625f:	add    BYTE PTR [ebx-0x75],dl
  446262:	retf   0xd88b
  446265:	shl    ebx,cl
  446267:	mov    ecx,0x20
  44626c:	sub    ecx,edx
  44626e:	shr    eax,cl
  446270:	or     ebx,eax
  446272:	mov    eax,ebx
  446274:	pop    ebx
  446275:	ret    
  446276:	mov    eax,eax
  446278:	mov    edx,eax
  44627a:	and    edx,0xff
  446280:	shl    edx,0x18
  446283:	mov    ecx,eax
  446285:	and    ecx,0xff00
  44628b:	shl    ecx,0x8
  44628e:	or     edx,ecx
  446290:	mov    ecx,eax
  446292:	and    ecx,0xff0000
  446298:	shr    ecx,0x8
  44629b:	or     edx,ecx
  44629d:	and    eax,0xff000000
  4462a2:	shr    eax,0x18
  4462a5:	or     edx,eax
  4462a7:	mov    eax,edx
  4462a9:	ret    
  4462aa:	mov    eax,eax
  4462ac:	add    eax,ecx
  4462ae:	call   0x446260
  4462b3:	mov    edx,eax
  4462b5:	shr    edx,0x18
  4462b8:	mov    edx,DWORD PTR [edx*4+0x465984]
  4462bf:	mov    ecx,eax
  4462c1:	shr    ecx,0x10
  4462c4:	and    ecx,0xff
  4462ca:	xor    edx,DWORD PTR [ecx*4+0x465d84]
  4462d1:	mov    ecx,eax
  4462d3:	shr    ecx,0x8
  4462d6:	and    ecx,0xff
  4462dc:	sub    edx,DWORD PTR [ecx*4+0x466184]
  4462e3:	and    eax,0xff
  4462e8:	add    edx,DWORD PTR [eax*4+0x466584]
  4462ef:	mov    eax,edx
  4462f1:	ret    
  4462f2:	mov    eax,eax
  4462f4:	xor    ecx,eax
  4462f6:	mov    eax,ecx
  4462f8:	call   0x446260
  4462fd:	mov    edx,eax
  4462ff:	shr    edx,0x18
  446302:	mov    edx,DWORD PTR [edx*4+0x465984]
  446309:	mov    ecx,eax
  44630b:	shr    ecx,0x10
  44630e:	and    ecx,0xff
  446314:	sub    edx,DWORD PTR [ecx*4+0x465d84]
  44631b:	mov    ecx,eax
  44631d:	shr    ecx,0x8
  446320:	and    ecx,0xff
  446326:	add    edx,DWORD PTR [ecx*4+0x466184]
  44632d:	and    eax,0xff
  446332:	xor    edx,DWORD PTR [eax*4+0x466584]
  446339:	mov    eax,edx
  44633b:	ret    
  44633c:	sub    ecx,eax
  44633e:	mov    eax,ecx
  446340:	call   0x446260
  446345:	mov    edx,eax
  446347:	shr    edx,0x18
  44634a:	mov    edx,DWORD PTR [edx*4+0x465984]
  446351:	mov    ecx,eax
  446353:	shr    ecx,0x10
  446356:	and    ecx,0xff
  44635c:	add    edx,DWORD PTR [ecx*4+0x465d84]
  446363:	mov    ecx,eax
  446365:	shr    ecx,0x8
  446368:	and    ecx,0xff
  44636e:	xor    edx,DWORD PTR [ecx*4+0x466184]
  446375:	and    eax,0xff
  44637a:	sub    edx,DWORD PTR [eax*4+0x466584]
  446381:	mov    eax,edx
  446383:	ret    
  446384:	mov    eax,0x100
  446389:	ret    
  44638a:	mov    eax,eax
  44638c:	mov    eax,0xf
  446391:	ret    
  446392:	mov    eax,eax
  446394:	push   ebx
  446395:	mov    ebx,edx
  446397:	mov    eax,ebx
  446399:	mov    edx,0x4463b0
  44639e:	call   0x404fdc
  4463a3:	pop    ebx
  4463a4:	ret    
  4463a5:	add    BYTE PTR [eax],al
  4463a7:	add    bh,bh
  4463a9:	(bad)  
  4463aa:	(bad)  
  4463ab:	inc    DWORD PTR [edi]
  4463ad:	add    BYTE PTR [eax],al
  4463af:	add    BYTE PTR [ebx+0x61],al
  4463b2:	jae    0x446428
  4463b4:	xor    dh,BYTE PTR ds:0x56530036
  4463ba:	push   edi
  4463bb:	push   ebp
  4463bc:	add    esp,0xfffffff0
  4463bf:	mov    edi,esp
  4463c1:	xor    ecx,ecx
  4463c3:	mov    dl,0x1
  4463c5:	mov    eax,ds:0x44613c
  4463ca:	call   0x44231c
  4463cf:	mov    esi,eax
  4463d1:	push   0x0
  4463d3:	mov    edx,0x466984
  4463d8:	mov    ecx,0x80
  4463dd:	mov    eax,esi
  4463df:	mov    ebx,DWORD PTR [eax]
  4463e1:	call   DWORD PTR [ebx+0x40]
  4463e4:	mov    ecx,edi
  4463e6:	mov    edx,0x466994
  4463eb:	mov    eax,esi
  4463ed:	mov    ebx,DWORD PTR [eax]
  4463ef:	call   DWORD PTR [ebx+0x6c]
  4463f2:	mov    edx,0x4669a4
  4463f7:	mov    eax,edi
  4463f9:	mov    ecx,0x8
  4463fe:	call   0x408538
  446403:	mov    ebx,eax
  446405:	mov    ecx,edi
  446407:	mov    edx,edi
  446409:	mov    eax,esi
  44640b:	mov    ebp,DWORD PTR [eax]
  44640d:	call   DWORD PTR [ebp+0x70]
  446410:	test   bl,bl
  446412:	je     0x446429
  446414:	mov    edx,0x466994
  446419:	mov    eax,edi
  44641b:	mov    ecx,0x10
  446420:	call   0x408538
  446425:	test   al,al
  446427:	jne    0x44642d
  446429:	xor    eax,eax
  44642b:	jmp    0x44642f
  44642d:	mov    al,0x1
  44642f:	mov    ebx,eax
  446431:	mov    eax,esi
  446433:	mov    edx,DWORD PTR [eax]
  446435:	call   DWORD PTR [edx+0x44]
  446438:	push   0x0
  44643a:	mov    edx,0x4669b4
  44643f:	mov    ecx,0xc0
  446444:	mov    eax,esi
  446446:	mov    ebp,DWORD PTR [eax]
  446448:	call   DWORD PTR [ebp+0x40]
  44644b:	mov    ecx,edi
  44644d:	mov    edx,0x4669cc
  446452:	mov    eax,esi
  446454:	mov    ebp,DWORD PTR [eax]
  446456:	call   DWORD PTR [ebp+0x6c]
  446459:	test   bl,bl
  44645b:	je     0x446472
  44645d:	mov    edx,0x4669dc
  446462:	mov    eax,edi
  446464:	mov    ecx,0x8
  446469:	call   0x408538
  44646e:	test   al,al
  446470:	jne    0x446476
  446472:	xor    eax,eax
  446474:	jmp    0x446478
  446476:	mov    al,0x1
  446478:	mov    ebx,eax
  44647a:	mov    ecx,edi
  44647c:	mov    edx,edi
  44647e:	mov    eax,esi
  446480:	mov    ebp,DWORD PTR [eax]
  446482:	call   DWORD PTR [ebp+0x70]
  446485:	test   bl,bl
  446487:	je     0x44649e
  446489:	mov    edx,0x4669cc
  44648e:	mov    eax,edi
  446490:	mov    ecx,0x10
  446495:	call   0x408538
  44649a:	test   al,al
  44649c:	jne    0x4464a2
  44649e:	xor    eax,eax
  4464a0:	jmp    0x4464a4
  4464a2:	mov    al,0x1
  4464a4:	mov    ebx,eax
  4464a6:	mov    eax,esi
  4464a8:	mov    edx,DWORD PTR [eax]
  4464aa:	call   DWORD PTR [edx+0x44]
  4464ad:	push   0x0
  4464af:	mov    edx,0x4669ec
  4464b4:	mov    ecx,0x100
  4464b9:	mov    eax,esi
  4464bb:	mov    ebp,DWORD PTR [eax]
  4464bd:	call   DWORD PTR [ebp+0x40]
  4464c0:	mov    ecx,edi
  4464c2:	mov    edx,0x466a0c
  4464c7:	mov    eax,esi
  4464c9:	mov    ebp,DWORD PTR [eax]
  4464cb:	call   DWORD PTR [ebp+0x6c]
  4464ce:	test   bl,bl
  4464d0:	je     0x4464e7
  4464d2:	mov    edx,0x466a1c
  4464d7:	mov    eax,edi
  4464d9:	mov    ecx,0x8
  4464de:	call   0x408538
  4464e3:	test   al,al
  4464e5:	jne    0x4464eb
  4464e7:	xor    eax,eax
  4464e9:	jmp    0x4464ed
  4464eb:	mov    al,0x1
  4464ed:	mov    ebx,eax
  4464ef:	mov    ecx,edi
  4464f1:	mov    edx,edi
  4464f3:	mov    eax,esi
  4464f5:	mov    ebp,DWORD PTR [eax]
  4464f7:	call   DWORD PTR [ebp+0x70]
  4464fa:	test   bl,bl
  4464fc:	je     0x446513
  4464fe:	mov    edx,0x466a0c
  446503:	mov    eax,edi
  446505:	mov    ecx,0x10
  44650a:	call   0x408538
  44650f:	test   al,al
  446511:	jne    0x446517
  446513:	xor    eax,eax
  446515:	jmp    0x446519
  446517:	mov    al,0x1
  446519:	mov    ebx,eax
  44651b:	mov    eax,esi
  44651d:	mov    edx,DWORD PTR [eax]
  44651f:	call   DWORD PTR [edx+0x44]
  446522:	mov    eax,esi
  446524:	call   0x4040a0
  446529:	mov    eax,ebx
  44652b:	add    esp,0x10
  44652e:	pop    ebp
  44652f:	pop    edi
  446530:	pop    esi
  446531:	pop    ebx
  446532:	ret    
  446533:	nop
  446534:	push   ebx
  446535:	push   esi
  446536:	push   edi
  446537:	add    esp,0xffffff98
  44653a:	mov    ebx,ecx
  44653c:	mov    esi,edx
  44653e:	mov    DWORD PTR [esp],eax
  446541:	mov    ecx,0x8
  446546:	mov    eax,ebx
  446548:	xor    edx,edx
  44654a:	div    ecx
  44654c:	mov    ebx,eax
  44654e:	lea    eax,[esp+0x8]
  446552:	xor    ecx,ecx
  446554:	mov    edx,0x20
  446559:	call   0x4037c8
  44655e:	lea    edx,[esp+0x8]
  446562:	mov    eax,esi
  446564:	mov    ecx,ebx
  446566:	call   0x403090
  44656b:	mov    ebx,0x5a827999
  446570:	mov    esi,0x13
  446575:	mov    DWORD PTR [esp+0x4],0x8
  44657d:	lea    eax,[esp+0x8]
  446581:	mov    edx,DWORD PTR [eax]
  446583:	mov    ecx,edx
  446585:	shl    ecx,0x18
  446588:	mov    edi,edx
  44658a:	shl    edi,0x8
  44658d:	and    edi,0xff0000
  446593:	or     ecx,edi
  446595:	mov    edi,edx
  446597:	shr    edi,0x8
  44659a:	and    edi,0xff00
  4465a0:	or     ecx,edi
  4465a2:	shr    edx,0x18
  4465a5:	or     ecx,edx
  4465a7:	mov    DWORD PTR [eax],ecx
  4465a9:	add    eax,0x4
  4465ac:	dec    DWORD PTR [esp+0x4]
  4465b0:	jne    0x446581
  4465b2:	xor    eax,eax
  4465b4:	mov    DWORD PTR [esp+0x4],eax
  4465b8:	mov    eax,0x8
  4465bd:	lea    edx,[esp+0x48]
  4465c1:	lea    ecx,[esp+0x28]
  4465c5:	mov    DWORD PTR [edx],ebx
  4465c7:	add    ebx,0x6ed9eba1
  4465cd:	mov    DWORD PTR [ecx],esi
  4465cf:	add    esi,0x11
  4465d2:	add    ecx,0x4
  4465d5:	add    edx,0x4
  4465d8:	dec    eax
  4465d9:	jne    0x4465c5
  4465db:	mov    ecx,DWORD PTR [esp+0x48]
  4465df:	mov    edx,DWORD PTR [esp+0x28]
  4465e3:	mov    eax,DWORD PTR [esp+0x24]
  4465e7:	call   0x4462ac
  4465ec:	xor    DWORD PTR [esp+0x20],eax
  4465f0:	mov    ecx,DWORD PTR [esp+0x4c]
  4465f4:	mov    edx,DWORD PTR [esp+0x2c]
  4465f8:	mov    eax,DWORD PTR [esp+0x20]
  4465fc:	call   0x4462f4
  446601:	xor    DWORD PTR [esp+0x1c],eax
  446605:	mov    ecx,DWORD PTR [esp+0x50]
  446609:	mov    edx,DWORD PTR [esp+0x30]
  44660d:	mov    eax,DWORD PTR [esp+0x1c]
  446611:	call   0x44633c
  446616:	xor    DWORD PTR [esp+0x18],eax
  44661a:	mov    ecx,DWORD PTR [esp+0x54]
  44661e:	mov    edx,DWORD PTR [esp+0x34]
  446622:	mov    eax,DWORD PTR [esp+0x18]
  446626:	call   0x4462ac
  44662b:	xor    DWORD PTR [esp+0x14],eax
  44662f:	mov    ecx,DWORD PTR [esp+0x58]
  446633:	mov    edx,DWORD PTR [esp+0x38]
  446637:	mov    eax,DWORD PTR [esp+0x14]
  44663b:	call   0x4462f4
  446640:	xor    DWORD PTR [esp+0x10],eax
  446644:	mov    ecx,DWORD PTR [esp+0x5c]
  446648:	mov    edx,DWORD PTR [esp+0x3c]
  44664c:	mov    eax,DWORD PTR [esp+0x10]
  446650:	call   0x44633c
  446655:	xor    DWORD PTR [esp+0xc],eax
  446659:	mov    ecx,DWORD PTR [esp+0x60]
  44665d:	mov    edx,DWORD PTR [esp+0x40]
  446661:	mov    eax,DWORD PTR [esp+0xc]
  446665:	call   0x4462ac
  44666a:	xor    DWORD PTR [esp+0x8],eax
  44666e:	mov    ecx,DWORD PTR [esp+0x64]
  446672:	mov    edx,DWORD PTR [esp+0x44]
  446676:	mov    eax,DWORD PTR [esp+0x8]
  44667a:	call   0x4462f4
  44667f:	xor    DWORD PTR [esp+0x24],eax
  446683:	mov    eax,0x8
  446688:	lea    edx,[esp+0x48]
  44668c:	lea    ecx,[esp+0x28]
  446690:	mov    DWORD PTR [edx],ebx
  446692:	add    ebx,0x6ed9eba1
  446698:	mov    DWORD PTR [ecx],esi
  44669a:	add    esi,0x11
  44669d:	add    ecx,0x4
  4466a0:	add    edx,0x4
  4466a3:	dec    eax
  4466a4:	jne    0x446690
  4466a6:	mov    ecx,DWORD PTR [esp+0x48]
  4466aa:	mov    edx,DWORD PTR [esp+0x28]
  4466ae:	mov    eax,DWORD PTR [esp+0x24]
  4466b2:	call   0x4462ac
  4466b7:	xor    DWORD PTR [esp+0x20],eax
  4466bb:	mov    ecx,DWORD PTR [esp+0x4c]
  4466bf:	mov    edx,DWORD PTR [esp+0x2c]
  4466c3:	mov    eax,DWORD PTR [esp+0x20]
  4466c7:	call   0x4462f4
  4466cc:	xor    DWORD PTR [esp+0x1c],eax
  4466d0:	mov    ecx,DWORD PTR [esp+0x50]
  4466d4:	mov    edx,DWORD PTR [esp+0x30]
  4466d8:	mov    eax,DWORD PTR [esp+0x1c]
  4466dc:	call   0x44633c
  4466e1:	xor    DWORD PTR [esp+0x18],eax
  4466e5:	mov    ecx,DWORD PTR [esp+0x54]
  4466e9:	mov    edx,DWORD PTR [esp+0x34]
  4466ed:	mov    eax,DWORD PTR [esp+0x18]
  4466f1:	call   0x4462ac
  4466f6:	xor    DWORD PTR [esp+0x14],eax
  4466fa:	mov    ecx,DWORD PTR [esp+0x58]
  4466fe:	mov    edx,DWORD PTR [esp+0x38]
  446702:	mov    eax,DWORD PTR [esp+0x14]
  446706:	call   0x4462f4
  44670b:	xor    DWORD PTR [esp+0x10],eax
  44670f:	mov    ecx,DWORD PTR [esp+0x5c]
  446713:	mov    edx,DWORD PTR [esp+0x3c]
  446717:	mov    eax,DWORD PTR [esp+0x10]
  44671b:	call   0x44633c
  446720:	xor    DWORD PTR [esp+0xc],eax
  446724:	mov    ecx,DWORD PTR [esp+0x60]
  446728:	mov    edx,DWORD PTR [esp+0x40]
  44672c:	mov    eax,DWORD PTR [esp+0xc]
  446730:	call   0x4462ac
  446735:	xor    DWORD PTR [esp+0x8],eax
  446739:	mov    ecx,DWORD PTR [esp+0x64]
  44673d:	mov    edx,DWORD PTR [esp+0x44]
  446741:	mov    eax,DWORD PTR [esp+0x8]
  446745:	call   0x4462f4
  44674a:	xor    DWORD PTR [esp+0x24],eax
  44674e:	mov    eax,DWORD PTR [esp+0x4]
  446752:	add    eax,eax
  446754:	mov    edx,DWORD PTR [esp]
  446757:	mov    ecx,DWORD PTR [esp+0x8]
  44675b:	and    ecx,0x1f
  44675e:	mov    DWORD PTR [edx+eax*8+0x58],ecx
  446762:	mov    edx,DWORD PTR [esp]
  446765:	mov    ecx,DWORD PTR [esp+0x10]
  446769:	and    ecx,0x1f
  44676c:	mov    DWORD PTR [edx+eax*8+0x5c],ecx
  446770:	mov    edx,DWORD PTR [esp]
  446773:	mov    ecx,DWORD PTR [esp+0x18]
  446777:	and    ecx,0x1f
  44677a:	mov    DWORD PTR [edx+eax*8+0x60],ecx
  44677e:	mov    edx,DWORD PTR [esp]
  446781:	mov    ecx,DWORD PTR [esp+0x20]
  446785:	and    ecx,0x1f
  446788:	mov    DWORD PTR [edx+eax*8+0x64],ecx
  44678c:	mov    edx,DWORD PTR [esp]
  44678f:	mov    ecx,DWORD PTR [esp+0x24]
  446793:	mov    DWORD PTR [edx+eax*8+0x118],ecx
  44679a:	mov    edx,DWORD PTR [esp]
  44679d:	mov    ecx,DWORD PTR [esp+0x1c]
  4467a1:	mov    DWORD PTR [edx+eax*8+0x11c],ecx
  4467a8:	mov    edx,DWORD PTR [esp]
  4467ab:	mov    ecx,DWORD PTR [esp+0x14]
  4467af:	mov    DWORD PTR [edx+eax*8+0x120],ecx
  4467b6:	mov    edx,DWORD PTR [esp]
  4467b9:	mov    ecx,DWORD PTR [esp+0xc]
  4467bd:	mov    DWORD PTR [edx+eax*8+0x124],ecx
  4467c4:	inc    DWORD PTR [esp+0x4]
  4467c8:	cmp    DWORD PTR [esp+0x4],0xc
  4467cd:	jne    0x4465b8
  4467d3:	lea    eax,[esp+0x8]
  4467d7:	mov    ecx,0xff
  4467dc:	mov    edx,0x20
  4467e1:	call   0x4037c8
  4467e6:	add    esp,0x68
  4467e9:	pop    edi
  4467ea:	pop    esi
  4467eb:	pop    ebx
  4467ec:	ret    
  4467ed:	lea    eax,[eax+0x0]
  4467f0:	push   ebx
  4467f1:	mov    ebx,eax
  4467f3:	lea    eax,[ebx+0x58]
  4467f6:	mov    ecx,0xff
  4467fb:	mov    edx,0xc0
  446800:	call   0x4037c8
  446805:	lea    eax,[ebx+0x118]
  44680b:	mov    ecx,0xff
  446810:	mov    edx,0xc0
  446815:	call   0x4037c8
  44681a:	mov    eax,ebx
  44681c:	call   0x4431f4
  446821:	pop    ebx
  446822:	ret    
  446823:	nop
  446824:	push   ebx
  446825:	push   esi
  446826:	push   edi
  446827:	push   ebp
  446828:	add    esp,0xfffffff0
  44682b:	mov    edi,ecx
  44682d:	mov    ebx,eax
  44682f:	mov    esi,esp
  446831:	cmp    BYTE PTR [ebx+0x30],0x0
  446835:	jne    0x44684d
  446837:	mov    ecx,0x446d10
  44683c:	mov    dl,0x1
  44683e:	mov    eax,ds:0x441af8
  446843:	call   0x40c8b4
  446848:	call   0x4048fc
  44684d:	mov    ecx,edx
  44684f:	mov    eax,DWORD PTR [ecx]
  446851:	mov    DWORD PTR [esi],eax
  446853:	mov    eax,ecx
  446855:	mov    ecx,eax
  446857:	add    ecx,0x4
  44685a:	mov    ecx,DWORD PTR [ecx]
  44685c:	mov    DWORD PTR [esi+0x4],ecx
  44685f:	mov    ecx,eax
  446861:	add    ecx,0x8
  446864:	mov    ecx,DWORD PTR [ecx]
  446866:	mov    DWORD PTR [esi+0x8],ecx
  446869:	add    eax,0xc
  44686c:	mov    eax,DWORD PTR [eax]
  44686e:	mov    DWORD PTR [esi+0xc],eax
  446871:	mov    eax,DWORD PTR [esi]
  446873:	call   0x446278
  446878:	mov    DWORD PTR [esi],eax
  44687a:	mov    eax,DWORD PTR [esi+0x4]
  44687d:	call   0x446278
  446882:	mov    DWORD PTR [esi+0x4],eax
  446885:	mov    eax,DWORD PTR [esi+0x8]
  446888:	call   0x446278
  44688d:	mov    DWORD PTR [esi+0x8],eax
  446890:	mov    eax,DWORD PTR [esi+0xc]
  446893:	call   0x446278
  446898:	mov    ebp,eax
  44689a:	mov    DWORD PTR [esi+0xc],ebp
  44689d:	mov    ecx,DWORD PTR [ebx+0x118]
  4468a3:	mov    edx,DWORD PTR [ebx+0x58]
  4468a6:	mov    eax,ebp
  4468a8:	call   0x4462ac
  4468ad:	xor    DWORD PTR [esi+0x8],eax
  4468b0:	mov    ecx,DWORD PTR [ebx+0x11c]
  4468b6:	mov    edx,DWORD PTR [ebx+0x5c]
  4468b9:	mov    eax,DWORD PTR [esi+0x8]
  4468bc:	call   0x4462f4
  4468c1:	xor    DWORD PTR [esi+0x4],eax
  4468c4:	mov    ecx,DWORD PTR [ebx+0x120]
  4468ca:	mov    edx,DWORD PTR [ebx+0x60]
  4468cd:	mov    eax,DWORD PTR [esi+0x4]
  4468d0:	call   0x44633c
  4468d5:	xor    DWORD PTR [esi],eax
  4468d7:	mov    ecx,DWORD PTR [ebx+0x124]
  4468dd:	mov    edx,DWORD PTR [ebx+0x64]
  4468e0:	mov    eax,DWORD PTR [esi]
  4468e2:	call   0x4462ac
  4468e7:	xor    DWORD PTR [esi+0xc],eax
  4468ea:	mov    ecx,DWORD PTR [ebx+0x128]
  4468f0:	mov    edx,DWORD PTR [ebx+0x68]
  4468f3:	mov    eax,DWORD PTR [esi+0xc]
  4468f6:	call   0x4462ac
  4468fb:	xor    DWORD PTR [esi+0x8],eax
  4468fe:	mov    ecx,DWORD PTR [ebx+0x12c]
  446904:	mov    edx,DWORD PTR [ebx+0x6c]
  446907:	mov    eax,DWORD PTR [esi+0x8]
  44690a:	call   0x4462f4
  44690f:	xor    DWORD PTR [esi+0x4],eax
  446912:	mov    ecx,DWORD PTR [ebx+0x130]
  446918:	mov    edx,DWORD PTR [ebx+0x70]
  44691b:	mov    eax,DWORD PTR [esi+0x4]
  44691e:	call   0x44633c
  446923:	xor    DWORD PTR [esi],eax
  446925:	mov    ecx,DWORD PTR [ebx+0x134]
  44692b:	mov    edx,DWORD PTR [ebx+0x74]
  44692e:	mov    eax,DWORD PTR [esi]
  446930:	call   0x4462ac
  446935:	xor    DWORD PTR [esi+0xc],eax
  446938:	mov    ecx,DWORD PTR [ebx+0x138]
  44693e:	mov    edx,DWORD PTR [ebx+0x78]
  446941:	mov    eax,DWORD PTR [esi+0xc]
  446944:	call   0x4462ac
  446949:	xor    DWORD PTR [esi+0x8],eax
  44694c:	mov    ecx,DWORD PTR [ebx+0x13c]
  446952:	mov    edx,DWORD PTR [ebx+0x7c]
  446955:	mov    eax,DWORD PTR [esi+0x8]
  446958:	call   0x4462f4
  44695d:	xor    DWORD PTR [esi+0x4],eax
  446960:	mov    ecx,DWORD PTR [ebx+0x140]
  446966:	mov    edx,DWORD PTR [ebx+0x80]
  44696c:	mov    eax,DWORD PTR [esi+0x4]
  44696f:	call   0x44633c
  446974:	xor    DWORD PTR [esi],eax
  446976:	mov    ecx,DWORD PTR [ebx+0x144]
  44697c:	mov    edx,DWORD PTR [ebx+0x84]
  446982:	mov    eax,DWORD PTR [esi]
  446984:	call   0x4462ac
  446989:	xor    DWORD PTR [esi+0xc],eax
  44698c:	mov    ecx,DWORD PTR [ebx+0x148]
  446992:	mov    edx,DWORD PTR [ebx+0x88]
  446998:	mov    eax,DWORD PTR [esi+0xc]
  44699b:	call   0x4462ac
  4469a0:	xor    DWORD PTR [esi+0x8],eax
  4469a3:	mov    ecx,DWORD PTR [ebx+0x14c]
  4469a9:	mov    edx,DWORD PTR [ebx+0x8c]
  4469af:	mov    eax,DWORD PTR [esi+0x8]
  4469b2:	call   0x4462f4
  4469b7:	xor    DWORD PTR [esi+0x4],eax
  4469ba:	mov    ecx,DWORD PTR [ebx+0x150]
  4469c0:	mov    edx,DWORD PTR [ebx+0x90]
  4469c6:	mov    eax,DWORD PTR [esi+0x4]
  4469c9:	call   0x44633c
  4469ce:	xor    DWORD PTR [esi],eax
  4469d0:	mov    ecx,DWORD PTR [ebx+0x154]
  4469d6:	mov    edx,DWORD PTR [ebx+0x94]
  4469dc:	mov    eax,DWORD PTR [esi]
  4469de:	call   0x4462ac
  4469e3:	xor    DWORD PTR [esi+0xc],eax
  4469e6:	mov    ecx,DWORD PTR [ebx+0x158]
  4469ec:	mov    edx,DWORD PTR [ebx+0x98]
  4469f2:	mov    eax,DWORD PTR [esi+0xc]
  4469f5:	call   0x4462ac
  4469fa:	xor    DWORD PTR [esi+0x8],eax
  4469fd:	mov    ecx,DWORD PTR [ebx+0x15c]
  446a03:	mov    edx,DWORD PTR [ebx+0x9c]
  446a09:	mov    eax,DWORD PTR [esi+0x8]
  446a0c:	call   0x4462f4
  446a11:	xor    DWORD PTR [esi+0x4],eax
  446a14:	mov    ecx,DWORD PTR [ebx+0x160]
  446a1a:	mov    edx,DWORD PTR [ebx+0xa0]
  446a20:	mov    eax,DWORD PTR [esi+0x4]
  446a23:	call   0x44633c
  446a28:	xor    DWORD PTR [esi],eax
  446a2a:	mov    ecx,DWORD PTR [ebx+0x164]
  446a30:	mov    edx,DWORD PTR [ebx+0xa4]
  446a36:	mov    eax,DWORD PTR [esi]
  446a38:	call   0x4462ac
  446a3d:	xor    DWORD PTR [esi+0xc],eax
  446a40:	mov    ecx,DWORD PTR [ebx+0x168]
  446a46:	mov    edx,DWORD PTR [ebx+0xa8]
  446a4c:	mov    eax,DWORD PTR [esi+0xc]
  446a4f:	call   0x4462ac
  446a54:	xor    DWORD PTR [esi+0x8],eax
  446a57:	mov    ecx,DWORD PTR [ebx+0x16c]
  446a5d:	mov    edx,DWORD PTR [ebx+0xac]
  446a63:	mov    eax,DWORD PTR [esi+0x8]
  446a66:	call   0x4462f4
  446a6b:	xor    DWORD PTR [esi+0x4],eax
  446a6e:	mov    ecx,DWORD PTR [ebx+0x170]
  446a74:	mov    edx,DWORD PTR [ebx+0xb0]
  446a7a:	mov    eax,DWORD PTR [esi+0x4]
  446a7d:	call   0x44633c
  446a82:	xor    DWORD PTR [esi],eax
  446a84:	mov    ecx,DWORD PTR [ebx+0x174]
  446a8a:	mov    edx,DWORD PTR [ebx+0xb4]
  446a90:	mov    eax,DWORD PTR [esi]
  446a92:	call   0x4462ac
  446a97:	xor    DWORD PTR [esi+0xc],eax
  446a9a:	mov    ecx,DWORD PTR [ebx+0x184]
  446aa0:	mov    edx,DWORD PTR [ebx+0xc4]
  446aa6:	mov    eax,DWORD PTR [esi]
  446aa8:	call   0x4462ac
  446aad:	xor    DWORD PTR [esi+0xc],eax
  446ab0:	mov    ecx,DWORD PTR [ebx+0x180]
  446ab6:	mov    edx,DWORD PTR [ebx+0xc0]
  446abc:	mov    eax,DWORD PTR [esi+0x4]
  446abf:	call   0x44633c
  446ac4:	xor    DWORD PTR [esi],eax
  446ac6:	mov    ecx,DWORD PTR [ebx+0x17c]
  446acc:	mov    edx,DWORD PTR [ebx+0xbc]
  446ad2:	mov    eax,DWORD PTR [esi+0x8]
  446ad5:	call   0x4462f4
  446ada:	xor    DWORD PTR [esi+0x4],eax
  446add:	mov    ecx,DWORD PTR [ebx+0x178]
  446ae3:	mov    edx,DWORD PTR [ebx+0xb8]
  446ae9:	mov    eax,DWORD PTR [esi+0xc]
  446aec:	call   0x4462ac
  446af1:	xor    DWORD PTR [esi+0x8],eax
  446af4:	mov    ecx,DWORD PTR [ebx+0x194]
  446afa:	mov    edx,DWORD PTR [ebx+0xd4]
  446b00:	mov    eax,DWORD PTR [esi]
  446b02:	call   0x4462ac
  446b07:	xor    DWORD PTR [esi+0xc],eax
  446b0a:	mov    ecx,DWORD PTR [ebx+0x190]
  446b10:	mov    edx,DWORD PTR [ebx+0xd0]
  446b16:	mov    eax,DWORD PTR [esi+0x4]
  446b19:	call   0x44633c
  446b1e:	xor    DWORD PTR [esi],eax
  446b20:	mov    ecx,DWORD PTR [ebx+0x18c]
  446b26:	mov    edx,DWORD PTR [ebx+0xcc]
  446b2c:	mov    eax,DWORD PTR [esi+0x8]
  446b2f:	call   0x4462f4
  446b34:	xor    DWORD PTR [esi+0x4],eax
  446b37:	mov    ecx,DWORD PTR [ebx+0x188]
  446b3d:	mov    edx,DWORD PTR [ebx+0xc8]
  446b43:	mov    eax,DWORD PTR [esi+0xc]
  446b46:	call   0x4462ac
  446b4b:	xor    DWORD PTR [esi+0x8],eax
  446b4e:	mov    ecx,DWORD PTR [ebx+0x1a4]
  446b54:	mov    edx,DWORD PTR [ebx+0xe4]
  446b5a:	mov    eax,DWORD PTR [esi]
  446b5c:	call   0x4462ac
  446b61:	xor    DWORD PTR [esi+0xc],eax
  446b64:	mov    ecx,DWORD PTR [ebx+0x1a0]
  446b6a:	mov    edx,DWORD PTR [ebx+0xe0]
  446b70:	mov    eax,DWORD PTR [esi+0x4]
  446b73:	call   0x44633c
  446b78:	xor    DWORD PTR [esi],eax
  446b7a:	mov    ecx,DWORD PTR [ebx+0x19c]
  446b80:	mov    edx,DWORD PTR [ebx+0xdc]
  446b86:	mov    eax,DWORD PTR [esi+0x8]
  446b89:	call   0x4462f4
  446b8e:	xor    DWORD PTR [esi+0x4],eax
  446b91:	mov    ecx,DWORD PTR [ebx+0x198]
  446b97:	mov    edx,DWORD PTR [ebx+0xd8]
  446b9d:	mov    eax,DWORD PTR [esi+0xc]
  446ba0:	call   0x4462ac
  446ba5:	xor    DWORD PTR [esi+0x8],eax
  446ba8:	mov    ecx,DWORD PTR [ebx+0x1b4]
  446bae:	mov    edx,DWORD PTR [ebx+0xf4]
  446bb4:	mov    eax,DWORD PTR [esi]
  446bb6:	call   0x4462ac
  446bbb:	xor    DWORD PTR [esi+0xc],eax
  446bbe:	mov    ecx,DWORD PTR [ebx+0x1b0]
  446bc4:	mov    edx,DWORD PTR [ebx+0xf0]
  446bca:	mov    eax,DWORD PTR [esi+0x4]
  446bcd:	call   0x44633c
  446bd2:	xor    DWORD PTR [esi],eax
  446bd4:	mov    ecx,DWORD PTR [ebx+0x1ac]
  446bda:	mov    edx,DWORD PTR [ebx+0xec]
  446be0:	mov    eax,DWORD PTR [esi+0x8]
  446be3:	call   0x4462f4
  446be8:	xor    DWORD PTR [esi+0x4],eax
  446beb:	mov    ecx,DWORD PTR [ebx+0x1a8]
  446bf1:	mov    edx,DWORD PTR [ebx+0xe8]
  446bf7:	mov    eax,DWORD PTR [esi+0xc]
  446bfa:	call   0x4462ac
  446bff:	xor    DWORD PTR [esi+0x8],eax
  446c02:	mov    ecx,DWORD PTR [ebx+0x1c4]
  446c08:	mov    edx,DWORD PTR [ebx+0x104]
  446c0e:	mov    eax,DWORD PTR [esi]
  446c10:	call   0x4462ac
  446c15:	xor    DWORD PTR [esi+0xc],eax
  446c18:	mov    ecx,DWORD PTR [ebx+0x1c0]
  446c1e:	mov    edx,DWORD PTR [ebx+0x100]
  446c24:	mov    eax,DWORD PTR [esi+0x4]
  446c27:	call   0x44633c
  446c2c:	xor    DWORD PTR [esi],eax
  446c2e:	mov    ecx,DWORD PTR [ebx+0x1bc]
  446c34:	mov    edx,DWORD PTR [ebx+0xfc]
  446c3a:	mov    eax,DWORD PTR [esi+0x8]
  446c3d:	call   0x4462f4
  446c42:	xor    DWORD PTR [esi+0x4],eax
  446c45:	mov    ecx,DWORD PTR [ebx+0x1b8]
  446c4b:	mov    edx,DWORD PTR [ebx+0xf8]
  446c51:	mov    eax,DWORD PTR [esi+0xc]
  446c54:	call   0x4462ac
  446c59:	xor    DWORD PTR [esi+0x8],eax
  446c5c:	mov    ecx,DWORD PTR [ebx+0x1d4]
  446c62:	mov    edx,DWORD PTR [ebx+0x114]
  446c68:	mov    eax,DWORD PTR [esi]
  446c6a:	call   0x4462ac
  446c6f:	xor    DWORD PTR [esi+0xc],eax
  446c72:	mov    ecx,DWORD PTR [ebx+0x1d0]
  446c78:	mov    edx,DWORD PTR [ebx+0x110]
  446c7e:	mov    eax,DWORD PTR [esi+0x4]
  446c81:	call   0x44633c
  446c86:	xor    DWORD PTR [esi],eax
  446c88:	mov    ecx,DWORD PTR [ebx+0x1cc]
  446c8e:	mov    edx,DWORD PTR [ebx+0x10c]
  446c94:	mov    eax,DWORD PTR [esi+0x8]
  446c97:	call   0x4462f4
  446c9c:	xor    DWORD PTR [esi+0x4],eax
  446c9f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  446ca5:	mov    edx,DWORD PTR [ebx+0x108]
  446cab:	mov    eax,DWORD PTR [esi+0xc]
  446cae:	call   0x4462ac
  446cb3:	xor    DWORD PTR [esi+0x8],eax
  446cb6:	mov    eax,DWORD PTR [esi]
  446cb8:	call   0x446278
  446cbd:	mov    DWORD PTR [esi],eax
  446cbf:	mov    eax,DWORD PTR [esi+0x4]
  446cc2:	call   0x446278
  446cc7:	mov    DWORD PTR [esi+0x4],eax
  446cca:	mov    eax,DWORD PTR [esi+0x8]
  446ccd:	call   0x446278
  446cd2:	mov    DWORD PTR [esi+0x8],eax
  446cd5:	mov    eax,DWORD PTR [esi+0xc]
  446cd8:	call   0x446278
  446cdd:	mov    ebx,eax
  446cdf:	mov    DWORD PTR [esi+0xc],ebx
  446ce2:	mov    eax,DWORD PTR [esi]
  446ce4:	mov    DWORD PTR [edi],eax
  446ce6:	mov    eax,edi
  446ce8:	add    eax,0x4
  446ceb:	mov    edx,DWORD PTR [esi+0x4]
  446cee:	mov    DWORD PTR [eax],edx
  446cf0:	mov    eax,edi
  446cf2:	add    eax,0x8
  446cf5:	mov    edx,DWORD PTR [esi+0x8]
  446cf8:	mov    DWORD PTR [eax],edx
  446cfa:	add    edi,0xc
  446cfd:	mov    DWORD PTR [edi],ebx
  446cff:	add    esp,0x10
  446d02:	pop    ebp
  446d03:	pop    edi
  446d04:	pop    esi
  446d05:	pop    ebx
  446d06:	ret    
  446d07:	add    bh,bh
  446d09:	(bad)  
  446d0a:	(bad)  
  446d0b:	call   DWORD PTR [esi]
  446d0d:	add    BYTE PTR [eax],al
  446d0f:	add    BYTE PTR [ebx+0x69],al
  446d12:	jo     0x446d7c
  446d14:	gs jb  0x446d37
  446d17:	outs   dx,BYTE PTR ds:[esi]
  446d18:	outs   dx,DWORD PTR ds:[esi]
  446d19:	je     0x446d3b
  446d1b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  446d22:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  446d29:	push   esi
  446d2a:	push   edi
  446d2b:	push   ebp
  446d2c:	add    esp,0xfffffff0
  446d2f:	mov    edi,ecx
  446d31:	mov    ebx,eax
  446d33:	mov    esi,esp
  446d35:	cmp    BYTE PTR [ebx+0x30],0x0
  446d39:	jne    0x446d51
  446d3b:	mov    ecx,0x447214
  446d40:	mov    dl,0x1
  446d42:	mov    eax,ds:0x441af8
  446d47:	call   0x40c8b4
  446d4c:	call   0x4048fc
  446d51:	mov    ecx,edx
  446d53:	mov    eax,DWORD PTR [ecx]
  446d55:	mov    DWORD PTR [esi],eax
  446d57:	mov    eax,ecx
  446d59:	mov    ecx,eax
  446d5b:	add    ecx,0x4
  446d5e:	mov    ecx,DWORD PTR [ecx]
  446d60:	mov    DWORD PTR [esi+0x4],ecx
  446d63:	mov    ecx,eax
  446d65:	add    ecx,0x8
  446d68:	mov    ecx,DWORD PTR [ecx]
  446d6a:	mov    DWORD PTR [esi+0x8],ecx
  446d6d:	add    eax,0xc
  446d70:	mov    eax,DWORD PTR [eax]
  446d72:	mov    DWORD PTR [esi+0xc],eax
  446d75:	mov    eax,DWORD PTR [esi]
  446d77:	call   0x446278
  446d7c:	mov    DWORD PTR [esi],eax
  446d7e:	mov    eax,DWORD PTR [esi+0x4]
  446d81:	call   0x446278
  446d86:	mov    DWORD PTR [esi+0x4],eax
  446d89:	mov    eax,DWORD PTR [esi+0x8]
  446d8c:	call   0x446278
  446d91:	mov    DWORD PTR [esi+0x8],eax
  446d94:	mov    eax,DWORD PTR [esi+0xc]
  446d97:	call   0x446278
  446d9c:	mov    ebp,eax
  446d9e:	mov    DWORD PTR [esi+0xc],ebp
  446da1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  446da7:	mov    edx,DWORD PTR [ebx+0x108]
  446dad:	mov    eax,ebp
  446daf:	call   0x4462ac
  446db4:	xor    DWORD PTR [esi+0x8],eax
  446db7:	mov    ecx,DWORD PTR [ebx+0x1cc]
  446dbd:	mov    edx,DWORD PTR [ebx+0x10c]
  446dc3:	mov    eax,DWORD PTR [esi+0x8]
  446dc6:	call   0x4462f4
  446dcb:	xor    DWORD PTR [esi+0x4],eax
  446dce:	mov    ecx,DWORD PTR [ebx+0x1d0]
  446dd4:	mov    edx,DWORD PTR [ebx+0x110]
  446dda:	mov    eax,DWORD PTR [esi+0x4]
  446ddd:	call   0x44633c
  446de2:	xor    DWORD PTR [esi],eax
  446de4:	mov    ecx,DWORD PTR [ebx+0x1d4]
  446dea:	mov    edx,DWORD PTR [ebx+0x114]
  446df0:	mov    eax,DWORD PTR [esi]
  446df2:	call   0x4462ac
  446df7:	xor    DWORD PTR [esi+0xc],eax
  446dfa:	mov    ecx,DWORD PTR [ebx+0x1b8]
  446e00:	mov    edx,DWORD PTR [ebx+0xf8]
  446e06:	mov    eax,DWORD PTR [esi+0xc]
  446e09:	call   0x4462ac
  446e0e:	xor    DWORD PTR [esi+0x8],eax
  446e11:	mov    ecx,DWORD PTR [ebx+0x1bc]
  446e17:	mov    edx,DWORD PTR [ebx+0xfc]
  446e1d:	mov    eax,DWORD PTR [esi+0x8]
  446e20:	call   0x4462f4
  446e25:	xor    DWORD PTR [esi+0x4],eax
  446e28:	mov    ecx,DWORD PTR [ebx+0x1c0]
  446e2e:	mov    edx,DWORD PTR [ebx+0x100]
  446e34:	mov    eax,DWORD PTR [esi+0x4]
  446e37:	call   0x44633c
  446e3c:	xor    DWORD PTR [esi],eax
  446e3e:	mov    ecx,DWORD PTR [ebx+0x1c4]
  446e44:	mov    edx,DWORD PTR [ebx+0x104]
  446e4a:	mov    eax,DWORD PTR [esi]
  446e4c:	call   0x4462ac
  446e51:	xor    DWORD PTR [esi+0xc],eax
  446e54:	mov    ecx,DWORD PTR [ebx+0x1a8]
  446e5a:	mov    edx,DWORD PTR [ebx+0xe8]
  446e60:	mov    eax,DWORD PTR [esi+0xc]
  446e63:	call   0x4462ac
  446e68:	xor    DWORD PTR [esi+0x8],eax
  446e6b:	mov    ecx,DWORD PTR [ebx+0x1ac]
  446e71:	mov    edx,DWORD PTR [ebx+0xec]
  446e77:	mov    eax,DWORD PTR [esi+0x8]
  446e7a:	call   0x4462f4
  446e7f:	xor    DWORD PTR [esi+0x4],eax
  446e82:	mov    ecx,DWORD PTR [ebx+0x1b0]
  446e88:	mov    edx,DWORD PTR [ebx+0xf0]
  446e8e:	mov    eax,DWORD PTR [esi+0x4]
  446e91:	call   0x44633c
  446e96:	xor    DWORD PTR [esi],eax
  446e98:	mov    ecx,DWORD PTR [ebx+0x1b4]
  446e9e:	mov    edx,DWORD PTR [ebx+0xf4]
  446ea4:	mov    eax,DWORD PTR [esi]
  446ea6:	call   0x4462ac
  446eab:	xor    DWORD PTR [esi+0xc],eax
  446eae:	mov    ecx,DWORD PTR [ebx+0x198]
  446eb4:	mov    edx,DWORD PTR [ebx+0xd8]
  446eba:	mov    eax,DWORD PTR [esi+0xc]
  446ebd:	call   0x4462ac
  446ec2:	xor    DWORD PTR [esi+0x8],eax
  446ec5:	mov    ecx,DWORD PTR [ebx+0x19c]
  446ecb:	mov    edx,DWORD PTR [ebx+0xdc]
  446ed1:	mov    eax,DWORD PTR [esi+0x8]
  446ed4:	call   0x4462f4
  446ed9:	xor    DWORD PTR [esi+0x4],eax
  446edc:	mov    ecx,DWORD PTR [ebx+0x1a0]
  446ee2:	mov    edx,DWORD PTR [ebx+0xe0]
  446ee8:	mov    eax,DWORD PTR [esi+0x4]
  446eeb:	call   0x44633c
  446ef0:	xor    DWORD PTR [esi],eax
  446ef2:	mov    ecx,DWORD PTR [ebx+0x1a4]
  446ef8:	mov    edx,DWORD PTR [ebx+0xe4]
  446efe:	mov    eax,DWORD PTR [esi]
  446f00:	call   0x4462ac
  446f05:	xor    DWORD PTR [esi+0xc],eax
  446f08:	mov    ecx,DWORD PTR [ebx+0x188]
  446f0e:	mov    edx,DWORD PTR [ebx+0xc8]
  446f14:	mov    eax,DWORD PTR [esi+0xc]
  446f17:	call   0x4462ac
  446f1c:	xor    DWORD PTR [esi+0x8],eax
  446f1f:	mov    ecx,DWORD PTR [ebx+0x18c]
  446f25:	mov    edx,DWORD PTR [ebx+0xcc]
  446f2b:	mov    eax,DWORD PTR [esi+0x8]
  446f2e:	call   0x4462f4
  446f33:	xor    DWORD PTR [esi+0x4],eax
  446f36:	mov    ecx,DWORD PTR [ebx+0x190]
  446f3c:	mov    edx,DWORD PTR [ebx+0xd0]
  446f42:	mov    eax,DWORD PTR [esi+0x4]
  446f45:	call   0x44633c
  446f4a:	xor    DWORD PTR [esi],eax
  446f4c:	mov    ecx,DWORD PTR [ebx+0x194]
  446f52:	mov    edx,DWORD PTR [ebx+0xd4]
  446f58:	mov    eax,DWORD PTR [esi]
  446f5a:	call   0x4462ac
  446f5f:	xor    DWORD PTR [esi+0xc],eax
  446f62:	mov    ecx,DWORD PTR [ebx+0x178]
  446f68:	mov    edx,DWORD PTR [ebx+0xb8]
  446f6e:	mov    eax,DWORD PTR [esi+0xc]
  446f71:	call   0x4462ac
  446f76:	xor    DWORD PTR [esi+0x8],eax
  446f79:	mov    ecx,DWORD PTR [ebx+0x17c]
  446f7f:	mov    edx,DWORD PTR [ebx+0xbc]
  446f85:	mov    eax,DWORD PTR [esi+0x8]
  446f88:	call   0x4462f4
  446f8d:	xor    DWORD PTR [esi+0x4],eax
  446f90:	mov    ecx,DWORD PTR [ebx+0x180]
  446f96:	mov    edx,DWORD PTR [ebx+0xc0]
  446f9c:	mov    eax,DWORD PTR [esi+0x4]
  446f9f:	call   0x44633c
  446fa4:	xor    DWORD PTR [esi],eax
  446fa6:	mov    ecx,DWORD PTR [ebx+0x184]
  446fac:	mov    edx,DWORD PTR [ebx+0xc4]
  446fb2:	mov    eax,DWORD PTR [esi]
  446fb4:	call   0x4462ac
  446fb9:	xor    DWORD PTR [esi+0xc],eax
  446fbc:	mov    ecx,DWORD PTR [ebx+0x174]
  446fc2:	mov    edx,DWORD PTR [ebx+0xb4]
  446fc8:	mov    eax,DWORD PTR [esi]
  446fca:	call   0x4462ac
  446fcf:	xor    DWORD PTR [esi+0xc],eax
  446fd2:	mov    ecx,DWORD PTR [ebx+0x170]
  446fd8:	mov    edx,DWORD PTR [ebx+0xb0]
  446fde:	mov    eax,DWORD PTR [esi+0x4]
  446fe1:	call   0x44633c
  446fe6:	xor    DWORD PTR [esi],eax
  446fe8:	mov    ecx,DWORD PTR [ebx+0x16c]
  446fee:	mov    edx,DWORD PTR [ebx+0xac]
  446ff4:	mov    eax,DWORD PTR [esi+0x8]
  446ff7:	call   0x4462f4
  446ffc:	xor    DWORD PTR [esi+0x4],eax
  446fff:	mov    ecx,DWORD PTR [ebx+0x168]
  447005:	mov    edx,DWORD PTR [ebx+0xa8]
  44700b:	mov    eax,DWORD PTR [esi+0xc]
  44700e:	call   0x4462ac
  447013:	xor    DWORD PTR [esi+0x8],eax
  447016:	mov    ecx,DWORD PTR [ebx+0x164]
  44701c:	mov    edx,DWORD PTR [ebx+0xa4]
  447022:	mov    eax,DWORD PTR [esi]
  447024:	call   0x4462ac
  447029:	xor    DWORD PTR [esi+0xc],eax
  44702c:	mov    ecx,DWORD PTR [ebx+0x160]
  447032:	mov    edx,DWORD PTR [ebx+0xa0]
  447038:	mov    eax,DWORD PTR [esi+0x4]
  44703b:	call   0x44633c
  447040:	xor    DWORD PTR [esi],eax
  447042:	mov    ecx,DWORD PTR [ebx+0x15c]
  447048:	mov    edx,DWORD PTR [ebx+0x9c]
  44704e:	mov    eax,DWORD PTR [esi+0x8]
  447051:	call   0x4462f4
  447056:	xor    DWORD PTR [esi+0x4],eax
  447059:	mov    ecx,DWORD PTR [ebx+0x158]
  44705f:	mov    edx,DWORD PTR [ebx+0x98]
  447065:	mov    eax,DWORD PTR [esi+0xc]
  447068:	call   0x4462ac
  44706d:	xor    DWORD PTR [esi+0x8],eax
  447070:	mov    ecx,DWORD PTR [ebx+0x154]
  447076:	mov    edx,DWORD PTR [ebx+0x94]
  44707c:	mov    eax,DWORD PTR [esi]
  44707e:	call   0x4462ac
  447083:	xor    DWORD PTR [esi+0xc],eax
  447086:	mov    ecx,DWORD PTR [ebx+0x150]
  44708c:	mov    edx,DWORD PTR [ebx+0x90]
  447092:	mov    eax,DWORD PTR [esi+0x4]
  447095:	call   0x44633c
  44709a:	xor    DWORD PTR [esi],eax
  44709c:	mov    ecx,DWORD PTR [ebx+0x14c]
  4470a2:	mov    edx,DWORD PTR [ebx+0x8c]
  4470a8:	mov    eax,DWORD PTR [esi+0x8]
  4470ab:	call   0x4462f4
  4470b0:	xor    DWORD PTR [esi+0x4],eax
  4470b3:	mov    ecx,DWORD PTR [ebx+0x148]
  4470b9:	mov    edx,DWORD PTR [ebx+0x88]
  4470bf:	mov    eax,DWORD PTR [esi+0xc]
  4470c2:	call   0x4462ac
  4470c7:	xor    DWORD PTR [esi+0x8],eax
  4470ca:	mov    ecx,DWORD PTR [ebx+0x144]
  4470d0:	mov    edx,DWORD PTR [ebx+0x84]
  4470d6:	mov    eax,DWORD PTR [esi]
  4470d8:	call   0x4462ac
  4470dd:	xor    DWORD PTR [esi+0xc],eax
  4470e0:	mov    ecx,DWORD PTR [ebx+0x140]
  4470e6:	mov    edx,DWORD PTR [ebx+0x80]
  4470ec:	mov    eax,DWORD PTR [esi+0x4]
  4470ef:	call   0x44633c
  4470f4:	xor    DWORD PTR [esi],eax
  4470f6:	mov    ecx,DWORD PTR [ebx+0x13c]
  4470fc:	mov    edx,DWORD PTR [ebx+0x7c]
  4470ff:	mov    eax,DWORD PTR [esi+0x8]
  447102:	call   0x4462f4
  447107:	xor    DWORD PTR [esi+0x4],eax
  44710a:	mov    ecx,DWORD PTR [ebx+0x138]
  447110:	mov    edx,DWORD PTR [ebx+0x78]
  447113:	mov    eax,DWORD PTR [esi+0xc]
  447116:	call   0x4462ac
  44711b:	xor    DWORD PTR [esi+0x8],eax
  44711e:	mov    ecx,DWORD PTR [ebx+0x134]
  447124:	mov    edx,DWORD PTR [ebx+0x74]
  447127:	mov    eax,DWORD PTR [esi]
  447129:	call   0x4462ac
  44712e:	xor    DWORD PTR [esi+0xc],eax
  447131:	mov    ecx,DWORD PTR [ebx+0x130]
  447137:	mov    edx,DWORD PTR [ebx+0x70]
  44713a:	mov    eax,DWORD PTR [esi+0x4]
  44713d:	call   0x44633c
  447142:	xor    DWORD PTR [esi],eax
  447144:	mov    ecx,DWORD PTR [ebx+0x12c]
  44714a:	mov    edx,DWORD PTR [ebx+0x6c]
  44714d:	mov    eax,DWORD PTR [esi+0x8]
  447150:	call   0x4462f4
  447155:	xor    DWORD PTR [esi+0x4],eax
  447158:	mov    ecx,DWORD PTR [ebx+0x128]
  44715e:	mov    edx,DWORD PTR [ebx+0x68]
  447161:	mov    eax,DWORD PTR [esi+0xc]
  447164:	call   0x4462ac
  447169:	xor    DWORD PTR [esi+0x8],eax
  44716c:	mov    ecx,DWORD PTR [ebx+0x124]
  447172:	mov    edx,DWORD PTR [ebx+0x64]
  447175:	mov    eax,DWORD PTR [esi]
  447177:	call   0x4462ac
  44717c:	xor    DWORD PTR [esi+0xc],eax
  44717f:	mov    ecx,DWORD PTR [ebx+0x120]
  447185:	mov    edx,DWORD PTR [ebx+0x60]
  447188:	mov    eax,DWORD PTR [esi+0x4]
  44718b:	call   0x44633c
  447190:	xor    DWORD PTR [esi],eax
  447192:	mov    ecx,DWORD PTR [ebx+0x11c]
  447198:	mov    edx,DWORD PTR [ebx+0x5c]
  44719b:	mov    eax,DWORD PTR [esi+0x8]
  44719e:	call   0x4462f4
  4471a3:	xor    DWORD PTR [esi+0x4],eax
  4471a6:	mov    ecx,DWORD PTR [ebx+0x118]
  4471ac:	mov    edx,DWORD PTR [ebx+0x58]
  4471af:	mov    eax,DWORD PTR [esi+0xc]
  4471b2:	call   0x4462ac
  4471b7:	xor    DWORD PTR [esi+0x8],eax
  4471ba:	mov    eax,DWORD PTR [esi]
  4471bc:	call   0x446278
  4471c1:	mov    DWORD PTR [esi],eax
  4471c3:	mov    eax,DWORD PTR [esi+0x4]
  4471c6:	call   0x446278
  4471cb:	mov    DWORD PTR [esi+0x4],eax
  4471ce:	mov    eax,DWORD PTR [esi+0x8]
  4471d1:	call   0x446278
  4471d6:	mov    DWORD PTR [esi+0x8],eax
  4471d9:	mov    eax,DWORD PTR [esi+0xc]
  4471dc:	call   0x446278
  4471e1:	mov    ebx,eax
  4471e3:	mov    DWORD PTR [esi+0xc],ebx
  4471e6:	mov    eax,DWORD PTR [esi]
  4471e8:	mov    DWORD PTR [edi],eax
  4471ea:	mov    eax,edi
  4471ec:	add    eax,0x4
  4471ef:	mov    edx,DWORD PTR [esi+0x4]
  4471f2:	mov    DWORD PTR [eax],edx
  4471f4:	mov    eax,edi
  4471f6:	add    eax,0x8
  4471f9:	mov    edx,DWORD PTR [esi+0x8]
  4471fc:	mov    DWORD PTR [eax],edx
  4471fe:	add    edi,0xc
  447201:	mov    DWORD PTR [edi],ebx
  447203:	add    esp,0x10
  447206:	pop    ebp
  447207:	pop    edi
  447208:	pop    esi
  447209:	pop    ebx
  44720a:	ret    
  44720b:	add    bh,bh
  44720d:	(bad)  
  44720e:	(bad)  
  44720f:	call   DWORD PTR [esi]
  447211:	add    BYTE PTR [eax],al
  447213:	add    BYTE PTR [ebx+0x69],al
  447216:	jo     0x447280
  447218:	gs jb  0x44723b
  44721b:	outs   dx,BYTE PTR ds:[esi]
  44721c:	outs   dx,DWORD PTR ds:[esi]
  44721d:	je     0x44723f
  44721f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  447226:	imul   edi,DWORD PTR [edx+0x65],0x78000064
  44722d:	jb     0x447273
	...
  44723b:	add    BYTE PTR [eax],ch
  44723d:	jae    0x447283
	...
  44724b:	add    BYTE PTR [ebx+esi*2],dl
  44724e:	inc    esp
  44724f:	add    BYTE PTR [eax+0x0],cl
  447252:	add    BYTE PTR [eax],al
  447254:	and    BYTE PTR [ebx],0x44
  447257:	add    BYTE PTR [eax],bl
  447259:	test   eax,0x42dc0041
  44725e:	inc    eax
  44725f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  447265:	inc    edx
  447266:	inc    eax
  447267:	add    al,bl
  447269:	inc    edx
  44726a:	inc    eax
  44726b:	add    BYTE PTR [eax],bh
  44726d:	inc    eax
  44726e:	inc    eax
  44726f:	add    BYTE PTR [eax+eax*2+0x40],dl
  447273:	add    BYTE PTR [eax+0x20],bh
  447276:	inc    esp
  447277:	add    BYTE PTR [eax+0x41],ch
  44727a:	inc    ecx
  44727b:	add    BYTE PTR [eax-0x5b],dh
  44727e:	inc    ecx
  44727f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  447286:	inc    ecx
  447287:	add    BYTE PTR [eax],dl
  447289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44728a:	inc    ecx
  44728b:	add    BYTE PTR [eax-0x5a],bl
  44728e:	inc    ecx
  44728f:	add    BYTE PTR [eax-0x59],dl
  447292:	inc    ecx
  447293:	add    BYTE PTR [eax],dh
  447295:	test   eax,0xa6680041
  44729a:	inc    ecx
  44729b:	add    BYTE PTR [eax-0x5a],ah
  44729e:	inc    ecx
  44729f:	add    BYTE PTR [eax],bh
  4472a1:	test   eax,0x231c0041
  4472a6:	inc    esp
  4472a7:	add    al,ch
  4472a9:	sbb    eax,0x1dec0044
  4472ae:	inc    esp
  4472af:	add    al,bh
  4472b1:	sbb    eax,0x1dfc0044
  4472b6:	inc    esp
  4472b7:	add    BYTE PTR [eax],cl
  4472b9:	es inc esp
  4472bb:	add    BYTE PTR [eax+0x27],dh
  4472be:	inc    esp
  4472bf:	add    BYTE PTR [eax],ah
  4472c1:	daa    
  4472c2:	inc    esp
  4472c3:	add    ah,al
  4472c5:	and    BYTE PTR [eax+eax*1+0x38],al
  4472c9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  4472cd:	and    DWORD PTR [eax+eax*1-0x14],eax
  4472d1:	and    DWORD PTR [eax+eax*1-0x54],eax
  4472d5:	and    BYTE PTR [eax+eax*1+0x0],al
  4472d9:	es inc esp
  4472db:	add    BYTE PTR [esi+eiz*1+0x44],bh
  4472df:	add    ah,dl
  4472e1:	es inc esp
  4472e3:	add    ah,al
  4472e5:	and    al,BYTE PTR [eax+eax*1-0x38]
  4472e9:	and    al,BYTE PTR [eax+eax*1-0x60]
  4472ed:	daa    
  4472ee:	inc    esp
  4472ef:	add    BYTE PTR [eax+ebp*1+0x299c0044],dl
  4472f6:	inc    esp
  4472f7:	add    BYTE PTR [eax],bh
  4472f9:	sub    al,BYTE PTR [eax+eax*1-0x24]
  4472fd:	sub    al,BYTE PTR [eax+eax*1-0x38]
  447301:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  447305:	sub    al,0x44
  447307:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44730d:	cs inc esp
  44730f:	add    BYTE PTR [eax+0x2f],bh
  447312:	inc    esp
  447313:	add    BYTE PTR [esi],cl
  447315:	push   esp
  447316:	inc    esp
  447317:	inc    ebx
  447318:	push   eax
  447319:	pop    edi
  44731a:	arpl   WORD PTR [ebp+0x73],si
  44731d:	je     0x44738e
  44731f:	ins    DWORD PTR es:[edi],dx
  447320:	fs gs jae 0x4472b4
  447324:	sub    BYTE PTR [ebx+0x44],dh
  447327:	add    BYTE PTR [edi],al
  447329:	push   cs
  44732a:	push   esp
  44732b:	inc    esp
  44732c:	inc    ebx
  44732d:	push   eax
  44732e:	pop    edi
  44732f:	arpl   WORD PTR [ebp+0x73],si
  447332:	je     0x4473a3
  447334:	ins    DWORD PTR es:[edi],dx
  447335:	fs gs jae 0x4473b1
  447339:	jb     0x44737f
  44733b:	add    BYTE PTR [esp+0x44],bh
  44733f:	add    BYTE PTR [edi],al
  447341:	add    BYTE PTR [esi],al
  447343:	inc    esp
  447344:	inc    ebx
  447345:	push   eax
  447346:	fs gs jae 0x44734a
  44734a:	add    BYTE PTR [eax+0x447398],dl
	...
  44735c:	inc    esp
  44735d:	je     0x4473a3
	...
  44736b:	add    BYTE PTR [esp+esi*2],dh
  44736e:	inc    esp
  44736f:	add    al,cl
  447371:	add    BYTE PTR [eax],al
  447373:	add    BYTE PTR [edx+esi*2],ch
  447376:	inc    esp
  447377:	add    BYTE PTR [eax],bl
  447379:	test   eax,0x42dc0041
  44737e:	inc    eax
  44737f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  447385:	inc    edx
  447386:	inc    eax
  447387:	add    al,bl
  447389:	inc    edx
  44738a:	inc    eax
  44738b:	add    BYTE PTR [eax],bh
  44738d:	inc    eax
  44738e:	inc    eax
  44738f:	add    BYTE PTR [eax+eax*2+0x40],dl
  447393:	add    BYTE PTR [eax+0x20],bh
  447396:	inc    esp
  447397:	add    BYTE PTR [eax+0x41],ch
  44739a:	inc    ecx
  44739b:	add    BYTE PTR [eax-0x5b],dh
  44739e:	inc    ecx
  44739f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4473a6:	inc    ecx
  4473a7:	add    BYTE PTR [eax],dl
  4473a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4473aa:	inc    ecx
  4473ab:	add    BYTE PTR [eax-0x5a],bl
  4473ae:	inc    ecx
  4473af:	add    BYTE PTR [eax-0x59],dl
  4473b2:	inc    ecx
  4473b3:	add    BYTE PTR [eax],dh
  4473b5:	test   eax,0xa6680041
  4473ba:	inc    ecx
  4473bb:	add    BYTE PTR [eax-0x5a],ah
  4473be:	inc    ecx
  4473bf:	add    BYTE PTR [eax],bh
  4473c1:	test   eax,0x231c0041
  4473c6:	inc    esp
  4473c7:	add    BYTE PTR [eax+eax*4],ch
  4473ca:	inc    esp
  4473cb:	add    BYTE PTR [eax+eax*4],dh
  4473ce:	inc    esp
  4473cf:	add    BYTE PTR [eax+eax*4],ah
  4473d2:	inc    esp
  4473d3:	add    BYTE PTR [eax+eax*4+0x44],dl
  4473d7:	add    BYTE PTR [eax],cl
  4473d9:	es inc esp
  4473db:	add    BYTE PTR [ecx+eax*4+0x27200044],dl
  4473e2:	inc    esp
  4473e3:	add    ah,al
  4473e5:	and    BYTE PTR [eax+eax*1+0x38],al
  4473e9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  4473ed:	and    DWORD PTR [eax+eax*1-0x14],eax
  4473f1:	and    DWORD PTR [eax+eax*1+0x58],eax
  4473f5:	add    DWORD PTR [eax+eax*1+0x0],0x7c004426
  4473fd:	es inc esp
  4473ff:	add    ah,dl
  447401:	es inc esp
  447403:	add    BYTE PTR [eax-0x7ffbb7f],dh
  447409:	add    DWORD PTR [eax+eax*1-0x60],0x94004427
  447411:	sub    BYTE PTR [eax+eax*1-0x64],al
  447415:	sub    DWORD PTR [eax+eax*1+0x38],eax
  447419:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44741d:	sub    al,BYTE PTR [eax+eax*1-0x38]
  447421:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  447425:	sub    al,0x44
  447427:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44742d:	cs inc esp
  44742f:	add    BYTE PTR [eax+0x2f],bh
  447432:	inc    esp
  447433:	add    BYTE PTR [eax],cl
  447435:	push   esp
  447436:	inc    esp
  447437:	inc    ebx
  447438:	push   eax
  447439:	pop    edi
  44743a:	fs gs jae 0x4473cb
  44743e:	inc    eax
  44743f:	add    BYTE PTR [esp+esi*2+0x44],al
  447443:	add    BYTE PTR [edi],al
  447445:	or     BYTE PTR [esp+eax*2+0x43],dl
  447449:	push   eax
  44744a:	pop    edi
  44744b:	fs gs jae 0x4473e7
  44744f:	jae    0x447495
  447451:	add    BYTE PTR [ebx+esi*2],ah
  447454:	inc    esp
  447455:	add    BYTE PTR [edi],al
  447457:	add    BYTE PTR [esi],al
  447459:	inc    esp
  44745a:	inc    ebx
  44745b:	push   eax
  44745c:	fs gs jae 0x447460
  447460:	add    BYTE PTR [ebp+0x74b00040],cl
  447466:	inc    esp
	...
  447473:	add    BYTE PTR [ebp+esi*2+0x44],bl
	...
  447483:	add    BYTE PTR [ebp+esi*2+0x44],cl
  447487:	add    al,cl
  447489:	add    DWORD PTR [eax],eax
  44748b:	add    BYTE PTR [edx+esi*2],ch
  44748e:	inc    esp
  44748f:	add    BYTE PTR [eax],bl
  447491:	test   eax,0x42dc0041
  447496:	inc    eax
  447497:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44749d:	inc    edx
  44749e:	inc    eax
  44749f:	add    al,bl
  4474a1:	inc    edx
  4474a2:	inc    eax
  4474a3:	add    BYTE PTR [eax],bh
  4474a5:	inc    eax
  4474a6:	inc    eax
  4474a7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4474ab:	add    BYTE PTR [eax+0x20],bh
  4474ae:	inc    esp
  4474af:	add    BYTE PTR [eax+0x41],ch
  4474b2:	inc    ecx
  4474b3:	add    BYTE PTR [eax-0x5b],dh
  4474b6:	inc    ecx
  4474b7:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4474be:	inc    ecx
  4474bf:	add    BYTE PTR [eax],dl
  4474c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4474c2:	inc    ecx
  4474c3:	add    BYTE PTR [eax-0x5a],bl
  4474c6:	inc    ecx
  4474c7:	add    BYTE PTR [eax-0x59],dl
  4474ca:	inc    ecx
  4474cb:	add    BYTE PTR [eax],dh
  4474cd:	test   eax,0xa6680041
  4474d2:	inc    ecx
  4474d3:	add    BYTE PTR [eax-0x5a],ah
  4474d6:	inc    ecx
  4474d7:	add    BYTE PTR [eax],bh
  4474d9:	test   eax,0x231c0041
  4474de:	inc    esp
  4474df:	add    BYTE PTR [eax-0x7e],cl
  4474e2:	inc    esp
  4474e3:	add    BYTE PTR [eax-0x7e],dl
  4474e6:	inc    esp
  4474e7:	add    BYTE PTR [eax-0x7e],al
  4474ea:	inc    esp
  4474eb:	add    BYTE PTR [edx+eax*4+0x44],dh
  4474ef:	add    BYTE PTR [eax],cl
  4474f1:	es inc esp
  4474f3:	add    BYTE PTR [eax-0x7d],bh
  4474f6:	inc    esp
  4474f7:	add    BYTE PTR [eax],ah
  4474f9:	daa    
  4474fa:	inc    esp
  4474fb:	add    ah,al
  4474fd:	and    BYTE PTR [eax+eax*1+0x38],al
  447501:	and    al,BYTE PTR [eax+eax*1+0x4c]
  447505:	and    DWORD PTR [eax+eax*1-0x14],eax
  447509:	and    DWORD PTR [eax+eax*1-0x4],eax
  44750d:	add    BYTE PTR [eax+eax*1+0x0],0x26
  447512:	inc    esp
  447513:	add    BYTE PTR [esi+eiz*1+0x44],bh
  447517:	add    ah,dl
  447519:	es inc esp
  44751b:	add    BYTE PTR [ebx+eax*4-0x7bf3ffbc],dl
  447522:	inc    esp
  447523:	add    BYTE PTR [eax-0x6bffbbd9],ah
  447529:	sub    BYTE PTR [eax+eax*1-0x64],al
  44752d:	sub    DWORD PTR [eax+eax*1+0x38],eax
  447531:	sub    al,BYTE PTR [eax+eax*1-0x24]
  447535:	sub    al,BYTE PTR [eax+eax*1-0x38]
  447539:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  44753d:	sub    al,0x44
  44753f:	add    BYTE PTR [eax-0x77ffbbd3],ch
  447545:	cs inc esp
  447547:	add    BYTE PTR [eax+0x2f],bh
  44754a:	inc    esp
  44754b:	add    BYTE PTR [ecx],cl
  44754d:	push   esp
  44754e:	inc    esp
  44754f:	inc    ebx
  447550:	push   eax
  447551:	pop    edi
  447552:	xor    esp,DWORD PTR [ebp+eiz*2+0x73]
  447556:	mov    eax,eax
  447558:	pop    esp
  447559:	jne    0x44759f
  44755b:	add    BYTE PTR [edi],al
  44755d:	or     DWORD PTR [esp+eax*2+0x43],edx
  447561:	push   eax
  447562:	pop    edi
  447563:	xor    esp,DWORD PTR [ebp+eiz*2+0x73]
  447567:	mov    al,0x74
  447569:	inc    esp
  44756a:	add    BYTE PTR [ebx+esi*2],ah
  44756d:	inc    esp
  44756e:	add    BYTE PTR [edi],al
  447570:	add    BYTE PTR [esi],al
  447572:	inc    esp
  447573:	inc    ebx
  447574:	push   eax
  447575:	fs gs jae 0x447579
  447579:	add    BYTE PTR [ebx-0x1374aa40],cl
  44757f:	push   ebx
  447580:	push   esi
  447581:	mov    ebx,ecx
  447583:	mov    ecx,0x10
  447588:	sub    ecx,ebx
  44758a:	mov    esi,DWORD PTR [eax]
  44758c:	shl    esi,cl
  44758e:	xor    esi,DWORD PTR [eax]
  447590:	and    esi,DWORD PTR [ebp+0x8]
  447593:	mov    DWORD PTR [edx],esi
  447595:	mov    ecx,0x10
  44759a:	sub    ecx,ebx
  44759c:	mov    ebx,DWORD PTR [edx]
  44759e:	shr    ebx,cl
  4475a0:	mov    ecx,DWORD PTR [eax]
  4475a2:	xor    ecx,DWORD PTR [edx]
  4475a4:	xor    ebx,ecx
  4475a6:	mov    DWORD PTR [eax],ebx
  4475a8:	pop    esi
  4475a9:	pop    ebx
  4475aa:	pop    ebp
  4475ab:	ret    0x4
  4475ae:	mov    eax,eax
  4475b0:	push   ebp
  4475b1:	mov    ebp,esp
  4475b3:	push   ebx
  4475b4:	push   esi
  4475b5:	push   edi
  4475b6:	mov    ebx,ecx
  4475b8:	mov    esi,DWORD PTR [ebp+0xc]
  4475bb:	mov    ecx,esi
  4475bd:	mov    edi,DWORD PTR [eax]
  4475bf:	shr    edi,cl
  4475c1:	xor    edi,DWORD PTR [edx]
  4475c3:	and    edi,DWORD PTR [ebp+0x8]
  4475c6:	mov    DWORD PTR [ebx],edi
  4475c8:	mov    ecx,DWORD PTR [ebx]
  4475ca:	xor    DWORD PTR [edx],ecx
  4475cc:	mov    ecx,esi
  4475ce:	mov    edx,DWORD PTR [ebx]
  4475d0:	shl    edx,cl
  4475d2:	xor    DWORD PTR [eax],edx
  4475d4:	pop    edi
  4475d5:	pop    esi
  4475d6:	pop    ebx
  4475d7:	pop    ebp
  4475d8:	ret    0x8
  4475db:	nop
  4475dc:	push   ebx
  4475dd:	push   esi
  4475de:	push   edi
  4475df:	add    esp,0xffffffec
  4475e2:	mov    DWORD PTR [esp],ecx
  4475e5:	mov    esi,0x466a3c
  4475ea:	movzx  eax,BYTE PTR [edx]
  4475ed:	movzx  ecx,BYTE PTR [edx+0x1]
  4475f1:	shl    ecx,0x8
  4475f4:	or     eax,ecx
  4475f6:	movzx  ecx,BYTE PTR [edx+0x2]
  4475fa:	shl    ecx,0x10
  4475fd:	or     eax,ecx
  4475ff:	movzx  ecx,BYTE PTR [edx+0x3]
  447603:	shl    ecx,0x18
  447606:	or     eax,ecx
  447608:	mov    DWORD PTR [esp+0x4],eax
  44760c:	movzx  eax,BYTE PTR [edx+0x4]
  447610:	movzx  ecx,BYTE PTR [edx+0x5]
  447614:	shl    ecx,0x8
  447617:	or     eax,ecx
  447619:	movzx  ecx,BYTE PTR [edx+0x6]
  44761d:	shl    ecx,0x10
  447620:	or     eax,ecx
  447622:	movzx  edx,BYTE PTR [edx+0x7]
  447626:	shl    edx,0x18
  447629:	or     eax,edx
  44762b:	mov    DWORD PTR [esp+0x8],eax
  44762f:	push   0x4
  447631:	push   0xf0f0f0f
  447636:	lea    ecx,[esp+0x14]
  44763a:	lea    edx,[esp+0xc]
  44763e:	lea    eax,[esp+0x10]
  447642:	call   0x4475b0
  447647:	push   0xcccc0000
  44764c:	lea    edx,[esp+0x10]
  447650:	lea    eax,[esp+0x8]
  447654:	mov    ecx,0xfffffffe
  447659:	call   0x44757c
  44765e:	push   0xcccc0000
  447663:	lea    edx,[esp+0x10]
  447667:	lea    eax,[esp+0xc]
  44766b:	mov    ecx,0xfffffffe
  447670:	call   0x44757c
  447675:	push   0x1
  447677:	push   0x55555555
  44767c:	lea    ecx,[esp+0x14]
  447680:	lea    edx,[esp+0xc]
  447684:	lea    eax,[esp+0x10]
  447688:	call   0x4475b0
  44768d:	push   0x8
  44768f:	push   0xff00ff
  447694:	lea    ecx,[esp+0x14]
  447698:	lea    edx,[esp+0x10]
  44769c:	lea    eax,[esp+0xc]
  4476a0:	call   0x4475b0
  4476a5:	push   0x1
  4476a7:	push   0x55555555
  4476ac:	lea    ecx,[esp+0x14]
  4476b0:	lea    edx,[esp+0xc]
  4476b4:	lea    eax,[esp+0x10]
  4476b8:	call   0x4475b0
  4476bd:	mov    eax,DWORD PTR [esp+0x8]
  4476c1:	and    eax,0xff
  4476c6:	shl    eax,0x10
  4476c9:	mov    edx,DWORD PTR [esp+0x8]
  4476cd:	and    edx,0xff00
  4476d3:	or     eax,edx
  4476d5:	mov    edx,DWORD PTR [esp+0x8]
  4476d9:	and    edx,0xff0000
  4476df:	shr    edx,0x10
  4476e2:	or     eax,edx
  4476e4:	mov    edx,DWORD PTR [esp+0x4]
  4476e8:	and    edx,0xf0000000
  4476ee:	shr    edx,0x4
  4476f1:	or     eax,edx
  4476f3:	mov    DWORD PTR [esp+0x8],eax
  4476f7:	and    DWORD PTR [esp+0x4],0xfffffff
  4476ff:	xor    edx,edx
  447701:	mov    ecx,0x466a2c
  447706:	cmp    BYTE PTR [ecx],0x0
  447709:	je     0x447735
  44770b:	mov    eax,DWORD PTR [esp+0x4]
  44770f:	shr    eax,0x2
  447712:	mov    ebx,DWORD PTR [esp+0x4]
  447716:	shl    ebx,0x1a
  447719:	or     eax,ebx
  44771b:	mov    DWORD PTR [esp+0x4],eax
  44771f:	mov    eax,DWORD PTR [esp+0x8]
  447723:	shr    eax,0x2
  447726:	mov    ebx,DWORD PTR [esp+0x8]
  44772a:	shl    ebx,0x1a
  44772d:	or     eax,ebx
  44772f:	mov    DWORD PTR [esp+0x8],eax
  447733:	jmp    0x44775b
  447735:	mov    eax,DWORD PTR [esp+0x4]
  447739:	shr    eax,1
  44773b:	mov    ebx,DWORD PTR [esp+0x4]
  44773f:	shl    ebx,0x1b
  447742:	or     eax,ebx
  447744:	mov    DWORD PTR [esp+0x4],eax
  447748:	mov    eax,DWORD PTR [esp+0x8]
  44774c:	shr    eax,1
  44774e:	mov    ebx,DWORD PTR [esp+0x8]
  447752:	shl    ebx,0x1b
  447755:	or     eax,ebx
  447757:	mov    DWORD PTR [esp+0x8],eax
  44775b:	and    DWORD PTR [esp+0x4],0xfffffff
  447763:	and    DWORD PTR [esp+0x8],0xfffffff
  44776b:	mov    eax,DWORD PTR [esp+0x4]
  44776f:	shr    eax,0x6
  447772:	and    eax,0x3
  447775:	mov    ebx,DWORD PTR [esp+0x4]
  447779:	shr    ebx,0x7
  44777c:	and    ebx,0x3c
  44777f:	or     eax,ebx
  447781:	mov    eax,DWORD PTR [esi+eax*4+0x100]
  447788:	mov    ebx,DWORD PTR [esp+0x4]
  44778c:	and    ebx,0x3f
  44778f:	or     eax,DWORD PTR [esi+ebx*4]
  447792:	mov    ebx,DWORD PTR [esp+0x4]
  447796:	shr    ebx,0xd
  447799:	and    ebx,0xf
  44779c:	mov    edi,DWORD PTR [esp+0x4]
  4477a0:	shr    edi,0xe
  4477a3:	and    edi,0x30
  4477a6:	or     ebx,edi
  4477a8:	or     eax,DWORD PTR [esi+ebx*4+0x200]
  4477af:	mov    ebx,DWORD PTR [esp+0x4]
  4477b3:	shr    ebx,0x14
  4477b6:	and    ebx,0x1
  4477b9:	mov    edi,DWORD PTR [esp+0x4]
  4477bd:	shr    edi,0x15
  4477c0:	and    edi,0x6
  4477c3:	or     ebx,edi
  4477c5:	mov    edi,DWORD PTR [esp+0x4]
  4477c9:	shr    edi,0x16
  4477cc:	and    edi,0x38
  4477cf:	or     ebx,edi
  4477d1:	or     eax,DWORD PTR [esi+ebx*4+0x300]
  4477d8:	mov    DWORD PTR [esp+0x10],eax
  4477dc:	mov    eax,DWORD PTR [esp+0x8]
  4477e0:	shr    eax,0x7
  4477e3:	and    eax,0x3
  4477e6:	mov    ebx,DWORD PTR [esp+0x8]
  4477ea:	shr    ebx,0x8
  4477ed:	and    ebx,0x3c
  4477f0:	or     eax,ebx
  4477f2:	mov    eax,DWORD PTR [esi+eax*4+0x500]
  4477f9:	mov    ebx,DWORD PTR [esp+0x8]
  4477fd:	and    ebx,0x3f
  447800:	or     eax,DWORD PTR [esi+ebx*4+0x400]
  447807:	mov    ebx,DWORD PTR [esp+0x8]
  44780b:	shr    ebx,0xf
  44780e:	and    ebx,0x3f
  447811:	or     eax,DWORD PTR [esi+ebx*4+0x600]
  447818:	mov    ebx,DWORD PTR [esp+0x8]
  44781c:	shr    ebx,0x15
  44781f:	and    ebx,0xf
  447822:	mov    edi,DWORD PTR [esp+0x8]
  447826:	shr    edi,0x16
  447829:	and    edi,0x30
  44782c:	or     ebx,edi
  44782e:	or     eax,DWORD PTR [esi+ebx*4+0x700]
  447835:	mov    DWORD PTR [esp+0xc],eax
  447839:	mov    eax,DWORD PTR [esp+0xc]
  44783d:	shl    eax,0x10
  447840:	mov    ebx,DWORD PTR [esp+0x10]
  447844:	and    ebx,0xffff
  44784a:	or     eax,ebx
  44784c:	mov    ebx,eax
  44784e:	add    ebx,ebx
  447850:	add    ebx,ebx
  447852:	shr    eax,0x1e
  447855:	or     ebx,eax
  447857:	mov    eax,edx
  447859:	add    eax,eax
  44785b:	mov    edi,DWORD PTR [esp]
  44785e:	mov    DWORD PTR [edi+eax*4],ebx
  447861:	mov    eax,DWORD PTR [esp+0x10]
  447865:	shr    eax,0x10
  447868:	mov    ebx,DWORD PTR [esp+0xc]
  44786c:	and    ebx,0xffff0000
  447872:	or     eax,ebx
  447874:	mov    ebx,eax
  447876:	shl    ebx,0x6
  447879:	shr    eax,0x1a
  44787c:	or     ebx,eax
  44787e:	mov    eax,edx
  447880:	add    eax,eax
  447882:	mov    edi,DWORD PTR [esp]
  447885:	mov    DWORD PTR [edi+eax*4+0x4],ebx
  447889:	inc    edx
  44788a:	inc    ecx
  44788b:	cmp    edx,0x10
  44788e:	jne    0x447706
  447894:	add    esp,0x14
  447897:	pop    edi
  447898:	pop    esi
  447899:	pop    ebx
  44789a:	ret    
  44789b:	nop
  44789c:	push   ebp
  44789d:	mov    ebp,esp
  44789f:	add    esp,0xfffffff4
  4478a2:	push   ebx
  4478a3:	push   esi
  4478a4:	push   edi
  4478a5:	mov    DWORD PTR [ebp-0x4],ecx
  4478a8:	mov    ebx,0x46723c
  4478ad:	mov    eax,edx
  4478af:	mov    ecx,DWORD PTR [eax]
  4478b1:	mov    DWORD PTR [ebp-0x8],ecx
  4478b4:	add    eax,0x4
  4478b7:	mov    ecx,DWORD PTR [eax]
  4478b9:	mov    eax,ecx
  4478bb:	shr    eax,0x4
  4478be:	xor    eax,DWORD PTR [ebp-0x8]
  4478c1:	and    eax,0xf0f0f0f
  4478c6:	xor    DWORD PTR [ebp-0x8],eax
  4478c9:	shl    eax,0x4
  4478cc:	xor    ecx,eax
  4478ce:	mov    eax,DWORD PTR [ebp-0x8]
  4478d1:	shr    eax,0x10
  4478d4:	xor    eax,ecx
  4478d6:	and    eax,0xffff
  4478db:	xor    ecx,eax
  4478dd:	shl    eax,0x10
  4478e0:	xor    DWORD PTR [ebp-0x8],eax
  4478e3:	mov    eax,ecx
  4478e5:	shr    eax,0x2
  4478e8:	xor    eax,DWORD PTR [ebp-0x8]
  4478eb:	and    eax,0x33333333
  4478f0:	xor    DWORD PTR [ebp-0x8],eax
  4478f3:	add    eax,eax
  4478f5:	add    eax,eax
  4478f7:	xor    ecx,eax
  4478f9:	mov    eax,DWORD PTR [ebp-0x8]
  4478fc:	shr    eax,0x8
  4478ff:	xor    eax,ecx
  447901:	and    eax,0xff00ff
  447906:	xor    ecx,eax
  447908:	shl    eax,0x8
  44790b:	xor    DWORD PTR [ebp-0x8],eax
  44790e:	mov    eax,ecx
  447910:	shr    eax,1
  447912:	xor    eax,DWORD PTR [ebp-0x8]
  447915:	and    eax,0x55555555
  44791a:	xor    DWORD PTR [ebp-0x8],eax
  44791d:	add    eax,eax
  44791f:	xor    ecx,eax
  447921:	mov    eax,DWORD PTR [ebp-0x8]
  447924:	shr    eax,0x1d
  447927:	mov    edx,DWORD PTR [ebp-0x8]
  44792a:	add    edx,edx
  44792c:	add    edx,edx
  44792e:	add    edx,edx
  447930:	or     eax,edx
  447932:	mov    DWORD PTR [ebp-0x8],eax
  447935:	mov    eax,ecx
  447937:	shr    eax,0x1d
  44793a:	add    ecx,ecx
  44793c:	add    ecx,ecx
  44793e:	add    ecx,ecx
  447940:	or     eax,ecx
  447942:	mov    ecx,eax
  447944:	xor    eax,eax
  447946:	mov    DWORD PTR [ebp-0xc],eax
  447949:	cmp    DWORD PTR [ebp-0xc],0x20
  44794d:	jge    0x447bc0
  447953:	mov    eax,DWORD PTR [ebp+0x8]
  447956:	mov    edx,DWORD PTR [ebp-0xc]
  447959:	mov    edx,DWORD PTR [eax+edx*4]
  44795c:	xor    edx,DWORD PTR [ebp-0x8]
  44795f:	mov    eax,DWORD PTR [ebp+0x8]
  447962:	mov    esi,DWORD PTR [ebp-0xc]
  447965:	mov    eax,DWORD PTR [eax+esi*4+0x4]
  447969:	xor    eax,DWORD PTR [ebp-0x8]
  44796c:	mov    esi,eax
  44796e:	shr    esi,0x4
  447971:	shl    eax,0x1c
  447974:	or     esi,eax
  447976:	mov    eax,esi
  447978:	mov    esi,edx
  44797a:	shr    esi,0x2
  44797d:	and    esi,0x3f
  447980:	xor    ecx,DWORD PTR [ebx+esi*4]
  447983:	mov    esi,edx
  447985:	shr    esi,0xa
  447988:	and    esi,0x3f
  44798b:	xor    ecx,DWORD PTR [ebx+esi*4+0x200]
  447992:	mov    esi,edx
  447994:	shr    esi,0x12
  447997:	and    esi,0x3f
  44799a:	xor    ecx,DWORD PTR [ebx+esi*4+0x400]
  4479a1:	shr    edx,0x1a
  4479a4:	and    edx,0x3f
  4479a7:	xor    ecx,DWORD PTR [ebx+edx*4+0x600]
  4479ae:	mov    edx,eax
  4479b0:	shr    edx,0x2
  4479b3:	and    edx,0x3f
  4479b6:	xor    ecx,DWORD PTR [ebx+edx*4+0x100]
  4479bd:	mov    edx,eax
  4479bf:	shr    edx,0xa
  4479c2:	and    edx,0x3f
  4479c5:	xor    ecx,DWORD PTR [ebx+edx*4+0x300]
  4479cc:	mov    edx,eax
  4479ce:	shr    edx,0x12
  4479d1:	and    edx,0x3f
  4479d4:	xor    ecx,DWORD PTR [ebx+edx*4+0x500]
  4479db:	shr    eax,0x1a
  4479de:	and    eax,0x3f
  4479e1:	xor    ecx,DWORD PTR [ebx+eax*4+0x700]
  4479e8:	mov    eax,DWORD PTR [ebp+0x8]
  4479eb:	mov    edx,DWORD PTR [ebp-0xc]
  4479ee:	mov    edx,DWORD PTR [eax+edx*4+0x8]
  4479f2:	xor    edx,ecx
  4479f4:	mov    eax,DWORD PTR [ebp+0x8]
  4479f7:	mov    esi,DWORD PTR [ebp-0xc]
  4479fa:	mov    eax,DWORD PTR [eax+esi*4+0xc]
  4479fe:	xor    eax,ecx
  447a00:	mov    esi,eax
  447a02:	shr    esi,0x4
  447a05:	shl    eax,0x1c
  447a08:	or     esi,eax
  447a0a:	mov    eax,esi
  447a0c:	mov    esi,edx
  447a0e:	shr    esi,0x2
  447a11:	and    esi,0x3f
  447a14:	mov    esi,DWORD PTR [ebx+esi*4]
  447a17:	xor    esi,DWORD PTR [ebp-0x8]
  447a1a:	mov    edi,edx
  447a1c:	shr    edi,0xa
  447a1f:	and    edi,0x3f
  447a22:	xor    esi,DWORD PTR [ebx+edi*4+0x200]
  447a29:	mov    edi,edx
  447a2b:	shr    edi,0x12
  447a2e:	and    edi,0x3f
  447a31:	xor    esi,DWORD PTR [ebx+edi*4+0x400]
  447a38:	shr    edx,0x1a
  447a3b:	and    edx,0x3f
  447a3e:	xor    esi,DWORD PTR [ebx+edx*4+0x600]
  447a45:	mov    edx,eax
  447a47:	shr    edx,0x2
  447a4a:	and    edx,0x3f
  447a4d:	xor    esi,DWORD PTR [ebx+edx*4+0x100]
  447a54:	mov    edx,eax
  447a56:	shr    edx,0xa
  447a59:	and    edx,0x3f
  447a5c:	xor    esi,DWORD PTR [ebx+edx*4+0x300]
  447a63:	mov    edx,eax
  447a65:	shr    edx,0x12
  447a68:	and    edx,0x3f
  447a6b:	xor    esi,DWORD PTR [ebx+edx*4+0x500]
  447a72:	shr    eax,0x1a
  447a75:	and    eax,0x3f
  447a78:	xor    esi,DWORD PTR [ebx+eax*4+0x700]
  447a7f:	mov    DWORD PTR [ebp-0x8],esi
  447a82:	mov    eax,DWORD PTR [ebp+0x8]
  447a85:	mov    edx,DWORD PTR [ebp-0xc]
  447a88:	mov    edx,DWORD PTR [eax+edx*4+0x10]
  447a8c:	xor    edx,DWORD PTR [ebp-0x8]
  447a8f:	mov    eax,DWORD PTR [ebp+0x8]
  447a92:	mov    esi,DWORD PTR [ebp-0xc]
  447a95:	mov    eax,DWORD PTR [eax+esi*4+0x14]
  447a99:	xor    eax,DWORD PTR [ebp-0x8]
  447a9c:	mov    esi,eax
  447a9e:	shr    esi,0x4
  447aa1:	shl    eax,0x1c
  447aa4:	or     esi,eax
  447aa6:	mov    eax,esi
  447aa8:	mov    esi,edx
  447aaa:	shr    esi,0x2
  447aad:	and    esi,0x3f
  447ab0:	xor    ecx,DWORD PTR [ebx+esi*4]
  447ab3:	mov    esi,edx
  447ab5:	shr    esi,0xa
  447ab8:	and    esi,0x3f
  447abb:	xor    ecx,DWORD PTR [ebx+esi*4+0x200]
  447ac2:	mov    esi,edx
  447ac4:	shr    esi,0x12
  447ac7:	and    esi,0x3f
  447aca:	xor    ecx,DWORD PTR [ebx+esi*4+0x400]
  447ad1:	shr    edx,0x1a
  447ad4:	and    edx,0x3f
  447ad7:	xor    ecx,DWORD PTR [ebx+edx*4+0x600]
  447ade:	mov    edx,eax
  447ae0:	shr    edx,0x2
  447ae3:	and    edx,0x3f
  447ae6:	xor    ecx,DWORD PTR [ebx+edx*4+0x100]
  447aed:	mov    edx,eax
  447aef:	shr    edx,0xa
  447af2:	and    edx,0x3f
  447af5:	xor    ecx,DWORD PTR [ebx+edx*4+0x300]
  447afc:	mov    edx,eax
  447afe:	shr    edx,0x12
  447b01:	and    edx,0x3f
  447b04:	xor    ecx,DWORD PTR [ebx+edx*4+0x500]
  447b0b:	shr    eax,0x1a
  447b0e:	and    eax,0x3f
  447b11:	xor    ecx,DWORD PTR [ebx+eax*4+0x700]
  447b18:	mov    eax,DWORD PTR [ebp+0x8]
  447b1b:	mov    edx,DWORD PTR [ebp-0xc]
  447b1e:	mov    edx,DWORD PTR [eax+edx*4+0x18]
  447b22:	xor    edx,ecx
  447b24:	mov    eax,DWORD PTR [ebp+0x8]
  447b27:	mov    esi,DWORD PTR [ebp-0xc]
  447b2a:	mov    eax,DWORD PTR [eax+esi*4+0x1c]
  447b2e:	xor    eax,ecx
  447b30:	mov    esi,eax
  447b32:	shr    esi,0x4
  447b35:	shl    eax,0x1c
  447b38:	or     esi,eax
  447b3a:	mov    eax,esi
  447b3c:	mov    esi,edx
  447b3e:	shr    esi,0x2
  447b41:	and    esi,0x3f
  447b44:	mov    esi,DWORD PTR [ebx+esi*4]
  447b47:	xor    esi,DWORD PTR [ebp-0x8]
  447b4a:	mov    edi,edx
  447b4c:	shr    edi,0xa
  447b4f:	and    edi,0x3f
  447b52:	xor    esi,DWORD PTR [ebx+edi*4+0x200]
  447b59:	mov    edi,edx
  447b5b:	shr    edi,0x12
  447b5e:	and    edi,0x3f
  447b61:	xor    esi,DWORD PTR [ebx+edi*4+0x400]
  447b68:	shr    edx,0x1a
  447b6b:	and    edx,0x3f
  447b6e:	xor    esi,DWORD PTR [ebx+edx*4+0x600]
  447b75:	mov    edx,eax
  447b77:	shr    edx,0x2
  447b7a:	and    edx,0x3f
  447b7d:	xor    esi,DWORD PTR [ebx+edx*4+0x100]
  447b84:	mov    edx,eax
  447b86:	shr    edx,0xa
  447b89:	and    edx,0x3f
  447b8c:	xor    esi,DWORD PTR [ebx+edx*4+0x300]
  447b93:	mov    edx,eax
  447b95:	shr    edx,0x12
  447b98:	and    edx,0x3f
  447b9b:	xor    esi,DWORD PTR [ebx+edx*4+0x500]
  447ba2:	shr    eax,0x1a
  447ba5:	and    eax,0x3f
  447ba8:	xor    esi,DWORD PTR [ebx+eax*4+0x700]
  447baf:	mov    DWORD PTR [ebp-0x8],esi
  447bb2:	add    DWORD PTR [ebp-0xc],0x8
  447bb6:	cmp    DWORD PTR [ebp-0xc],0x20
  447bba:	jl     0x447953
  447bc0:	mov    eax,DWORD PTR [ebp-0x8]
  447bc3:	shr    eax,0x3
  447bc6:	mov    edx,DWORD PTR [ebp-0x8]
  447bc9:	shl    edx,0x1d
  447bcc:	or     eax,edx
  447bce:	mov    DWORD PTR [ebp-0x8],eax
  447bd1:	mov    eax,ecx
  447bd3:	shr    eax,0x3
  447bd6:	shl    ecx,0x1d
  447bd9:	or     eax,ecx
  447bdb:	mov    ecx,eax
  447bdd:	mov    eax,DWORD PTR [ebp-0x8]
  447be0:	shr    eax,1
  447be2:	xor    eax,ecx
  447be4:	and    eax,0x55555555
  447be9:	xor    ecx,eax
  447beb:	add    eax,eax
  447bed:	xor    DWORD PTR [ebp-0x8],eax
  447bf0:	mov    eax,ecx
  447bf2:	shr    eax,0x8
  447bf5:	xor    eax,DWORD PTR [ebp-0x8]
  447bf8:	and    eax,0xff00ff
  447bfd:	xor    DWORD PTR [ebp-0x8],eax
  447c00:	shl    eax,0x8
  447c03:	xor    ecx,eax
  447c05:	mov    eax,DWORD PTR [ebp-0x8]
  447c08:	shr    eax,0x2
  447c0b:	xor    eax,ecx
  447c0d:	and    eax,0x33333333
  447c12:	xor    ecx,eax
  447c14:	add    eax,eax
  447c16:	add    eax,eax
  447c18:	xor    DWORD PTR [ebp-0x8],eax
  447c1b:	mov    eax,ecx
  447c1d:	shr    eax,0x10
  447c20:	xor    eax,DWORD PTR [ebp-0x8]
  447c23:	and    eax,0xffff
  447c28:	xor    DWORD PTR [ebp-0x8],eax
  447c2b:	shl    eax,0x10
  447c2e:	xor    ecx,eax
  447c30:	mov    eax,DWORD PTR [ebp-0x8]
  447c33:	shr    eax,0x4
  447c36:	xor    eax,ecx
  447c38:	and    eax,0xf0f0f0f
  447c3d:	xor    ecx,eax
  447c3f:	shl    eax,0x4
  447c42:	xor    DWORD PTR [ebp-0x8],eax
  447c45:	mov    eax,DWORD PTR [ebp-0x4]
  447c48:	mov    DWORD PTR [eax],ecx
  447c4a:	mov    eax,DWORD PTR [ebp-0x4]
  447c4d:	add    eax,0x4
  447c50:	mov    edx,DWORD PTR [ebp-0x8]
  447c53:	mov    DWORD PTR [eax],edx
  447c55:	pop    edi
  447c56:	pop    esi
  447c57:	pop    ebx
  447c58:	mov    esp,ebp
  447c5a:	pop    ebp
  447c5b:	ret    0x4
  447c5e:	mov    eax,eax
  447c60:	push   ebp
  447c61:	mov    ebp,esp
  447c63:	add    esp,0xfffffff4
  447c66:	push   ebx
  447c67:	push   esi
  447c68:	push   edi
  447c69:	mov    DWORD PTR [ebp-0x4],ecx
  447c6c:	mov    ebx,0x46723c
  447c71:	mov    eax,edx
  447c73:	mov    ecx,DWORD PTR [eax]
  447c75:	mov    DWORD PTR [ebp-0x8],ecx
  447c78:	add    eax,0x4
  447c7b:	mov    ecx,DWORD PTR [eax]
  447c7d:	mov    eax,ecx
  447c7f:	shr    eax,0x4
  447c82:	xor    eax,DWORD PTR [ebp-0x8]
  447c85:	and    eax,0xf0f0f0f
  447c8a:	xor    DWORD PTR [ebp-0x8],eax
  447c8d:	shl    eax,0x4
  447c90:	xor    ecx,eax
  447c92:	mov    eax,DWORD PTR [ebp-0x8]
  447c95:	shr    eax,0x10
  447c98:	xor    eax,ecx
  447c9a:	and    eax,0xffff
  447c9f:	xor    ecx,eax
  447ca1:	shl    eax,0x10
  447ca4:	xor    DWORD PTR [ebp-0x8],eax
  447ca7:	mov    eax,ecx
  447ca9:	shr    eax,0x2
  447cac:	xor    eax,DWORD PTR [ebp-0x8]
  447caf:	and    eax,0x33333333
  447cb4:	xor    DWORD PTR [ebp-0x8],eax
  447cb7:	add    eax,eax
  447cb9:	add    eax,eax
  447cbb:	xor    ecx,eax
  447cbd:	mov    eax,DWORD PTR [ebp-0x8]
  447cc0:	shr    eax,0x8
  447cc3:	xor    eax,ecx
  447cc5:	and    eax,0xff00ff
  447cca:	xor    ecx,eax
  447ccc:	shl    eax,0x8
  447ccf:	xor    DWORD PTR [ebp-0x8],eax
  447cd2:	mov    eax,ecx
  447cd4:	shr    eax,1
  447cd6:	xor    eax,DWORD PTR [ebp-0x8]
  447cd9:	and    eax,0x55555555
  447cde:	xor    DWORD PTR [ebp-0x8],eax
  447ce1:	add    eax,eax
  447ce3:	xor    ecx,eax
  447ce5:	mov    eax,DWORD PTR [ebp-0x8]
  447ce8:	shr    eax,0x1d
  447ceb:	mov    edx,DWORD PTR [ebp-0x8]
  447cee:	add    edx,edx
  447cf0:	add    edx,edx
  447cf2:	add    edx,edx
  447cf4:	or     eax,edx
  447cf6:	mov    DWORD PTR [ebp-0x8],eax
  447cf9:	mov    eax,ecx
  447cfb:	shr    eax,0x1d
  447cfe:	add    ecx,ecx
  447d00:	add    ecx,ecx
  447d02:	add    ecx,ecx
  447d04:	or     eax,ecx
  447d06:	mov    ecx,eax
  447d08:	mov    DWORD PTR [ebp-0xc],0x1e
  447d0f:	cmp    DWORD PTR [ebp-0xc],0x0
  447d13:	jle    0x447f86
  447d19:	mov    eax,DWORD PTR [ebp+0x8]
  447d1c:	mov    edx,DWORD PTR [ebp-0xc]
  447d1f:	mov    edx,DWORD PTR [eax+edx*4]
  447d22:	xor    edx,DWORD PTR [ebp-0x8]
  447d25:	mov    eax,DWORD PTR [ebp+0x8]
  447d28:	mov    esi,DWORD PTR [ebp-0xc]
  447d2b:	mov    eax,DWORD PTR [eax+esi*4+0x4]
  447d2f:	xor    eax,DWORD PTR [ebp-0x8]
  447d32:	mov    esi,eax
  447d34:	shr    esi,0x4
  447d37:	shl    eax,0x1c
  447d3a:	or     esi,eax
  447d3c:	mov    eax,esi
  447d3e:	mov    esi,edx
  447d40:	shr    esi,0x2
  447d43:	and    esi,0x3f
  447d46:	xor    ecx,DWORD PTR [ebx+esi*4]
  447d49:	mov    esi,edx
  447d4b:	shr    esi,0xa
  447d4e:	and    esi,0x3f
  447d51:	xor    ecx,DWORD PTR [ebx+esi*4+0x200]
  447d58:	mov    esi,edx
  447d5a:	shr    esi,0x12
  447d5d:	and    esi,0x3f
  447d60:	xor    ecx,DWORD PTR [ebx+esi*4+0x400]
  447d67:	shr    edx,0x1a
  447d6a:	and    edx,0x3f
  447d6d:	xor    ecx,DWORD PTR [ebx+edx*4+0x600]
  447d74:	mov    edx,eax
  447d76:	shr    edx,0x2
  447d79:	and    edx,0x3f
  447d7c:	xor    ecx,DWORD PTR [ebx+edx*4+0x100]
  447d83:	mov    edx,eax
  447d85:	shr    edx,0xa
  447d88:	and    edx,0x3f
  447d8b:	xor    ecx,DWORD PTR [ebx+edx*4+0x300]
  447d92:	mov    edx,eax
  447d94:	shr    edx,0x12
  447d97:	and    edx,0x3f
  447d9a:	xor    ecx,DWORD PTR [ebx+edx*4+0x500]
  447da1:	shr    eax,0x1a
  447da4:	and    eax,0x3f
  447da7:	xor    ecx,DWORD PTR [ebx+eax*4+0x700]
  447dae:	mov    eax,DWORD PTR [ebp+0x8]
  447db1:	mov    edx,DWORD PTR [ebp-0xc]
  447db4:	mov    edx,DWORD PTR [eax+edx*4-0x8]
  447db8:	xor    edx,ecx
  447dba:	mov    eax,DWORD PTR [ebp+0x8]
  447dbd:	mov    esi,DWORD PTR [ebp-0xc]
  447dc0:	mov    eax,DWORD PTR [eax+esi*4-0x4]
  447dc4:	xor    eax,ecx
  447dc6:	mov    esi,eax
  447dc8:	shr    esi,0x4
  447dcb:	shl    eax,0x1c
  447dce:	or     esi,eax
  447dd0:	mov    eax,esi
  447dd2:	mov    esi,edx
  447dd4:	shr    esi,0x2
  447dd7:	and    esi,0x3f
  447dda:	mov    esi,DWORD PTR [ebx+esi*4]
  447ddd:	xor    esi,DWORD PTR [ebp-0x8]
  447de0:	mov    edi,edx
  447de2:	shr    edi,0xa
  447de5:	and    edi,0x3f
  447de8:	xor    esi,DWORD PTR [ebx+edi*4+0x200]
  447def:	mov    edi,edx
  447df1:	shr    edi,0x12
  447df4:	and    edi,0x3f
  447df7:	xor    esi,DWORD PTR [ebx+edi*4+0x400]
  447dfe:	shr    edx,0x1a
  447e01:	and    edx,0x3f
  447e04:	xor    esi,DWORD PTR [ebx+edx*4+0x600]
  447e0b:	mov    edx,eax
  447e0d:	shr    edx,0x2
  447e10:	and    edx,0x3f
  447e13:	xor    esi,DWORD PTR [ebx+edx*4+0x100]
  447e1a:	mov    edx,eax
  447e1c:	shr    edx,0xa
  447e1f:	and    edx,0x3f
  447e22:	xor    esi,DWORD PTR [ebx+edx*4+0x300]
  447e29:	mov    edx,eax
  447e2b:	shr    edx,0x12
  447e2e:	and    edx,0x3f
  447e31:	xor    esi,DWORD PTR [ebx+edx*4+0x500]
  447e38:	shr    eax,0x1a
  447e3b:	and    eax,0x3f
  447e3e:	xor    esi,DWORD PTR [ebx+eax*4+0x700]
  447e45:	mov    DWORD PTR [ebp-0x8],esi
  447e48:	mov    eax,DWORD PTR [ebp+0x8]
  447e4b:	mov    edx,DWORD PTR [ebp-0xc]
  447e4e:	mov    edx,DWORD PTR [eax+edx*4-0x10]
  447e52:	xor    edx,DWORD PTR [ebp-0x8]
  447e55:	mov    eax,DWORD PTR [ebp+0x8]
  447e58:	mov    esi,DWORD PTR [ebp-0xc]
  447e5b:	mov    eax,DWORD PTR [eax+esi*4-0xc]
  447e5f:	xor    eax,DWORD PTR [ebp-0x8]
  447e62:	mov    esi,eax
  447e64:	shr    esi,0x4
  447e67:	shl    eax,0x1c
  447e6a:	or     esi,eax
  447e6c:	mov    eax,esi
  447e6e:	mov    esi,edx
  447e70:	shr    esi,0x2
  447e73:	and    esi,0x3f
  447e76:	xor    ecx,DWORD PTR [ebx+esi*4]
  447e79:	mov    esi,edx
  447e7b:	shr    esi,0xa
  447e7e:	and    esi,0x3f
  447e81:	xor    ecx,DWORD PTR [ebx+esi*4+0x200]
  447e88:	mov    esi,edx
  447e8a:	shr    esi,0x12
  447e8d:	and    esi,0x3f
  447e90:	xor    ecx,DWORD PTR [ebx+esi*4+0x400]
  447e97:	shr    edx,0x1a
  447e9a:	and    edx,0x3f
  447e9d:	xor    ecx,DWORD PTR [ebx+edx*4+0x600]
  447ea4:	mov    edx,eax
  447ea6:	shr    edx,0x2
  447ea9:	and    edx,0x3f
  447eac:	xor    ecx,DWORD PTR [ebx+edx*4+0x100]
  447eb3:	mov    edx,eax
  447eb5:	shr    edx,0xa
  447eb8:	and    edx,0x3f
  447ebb:	xor    ecx,DWORD PTR [ebx+edx*4+0x300]
  447ec2:	mov    edx,eax
  447ec4:	shr    edx,0x12
  447ec7:	and    edx,0x3f
  447eca:	xor    ecx,DWORD PTR [ebx+edx*4+0x500]
  447ed1:	shr    eax,0x1a
  447ed4:	and    eax,0x3f
  447ed7:	xor    ecx,DWORD PTR [ebx+eax*4+0x700]
  447ede:	mov    eax,DWORD PTR [ebp+0x8]
  447ee1:	mov    edx,DWORD PTR [ebp-0xc]
  447ee4:	mov    edx,DWORD PTR [eax+edx*4-0x18]
  447ee8:	xor    edx,ecx
  447eea:	mov    eax,DWORD PTR [ebp+0x8]
  447eed:	mov    esi,DWORD PTR [ebp-0xc]
  447ef0:	mov    eax,DWORD PTR [eax+esi*4-0x14]
  447ef4:	xor    eax,ecx
  447ef6:	mov    esi,eax
  447ef8:	shr    esi,0x4
  447efb:	shl    eax,0x1c
  447efe:	or     esi,eax
  447f00:	mov    eax,esi
  447f02:	mov    esi,edx
  447f04:	shr    esi,0x2
  447f07:	and    esi,0x3f
  447f0a:	mov    esi,DWORD PTR [ebx+esi*4]
  447f0d:	xor    esi,DWORD PTR [ebp-0x8]
  447f10:	mov    edi,edx
  447f12:	shr    edi,0xa
  447f15:	and    edi,0x3f
  447f18:	xor    esi,DWORD PTR [ebx+edi*4+0x200]
  447f1f:	mov    edi,edx
  447f21:	shr    edi,0x12
  447f24:	and    edi,0x3f
  447f27:	xor    esi,DWORD PTR [ebx+edi*4+0x400]
  447f2e:	shr    edx,0x1a
  447f31:	and    edx,0x3f
  447f34:	xor    esi,DWORD PTR [ebx+edx*4+0x600]
  447f3b:	mov    edx,eax
  447f3d:	shr    edx,0x2
  447f40:	and    edx,0x3f
  447f43:	xor    esi,DWORD PTR [ebx+edx*4+0x100]
  447f4a:	mov    edx,eax
  447f4c:	shr    edx,0xa
  447f4f:	and    edx,0x3f
  447f52:	xor    esi,DWORD PTR [ebx+edx*4+0x300]
  447f59:	mov    edx,eax
  447f5b:	shr    edx,0x12
  447f5e:	and    edx,0x3f
  447f61:	xor    esi,DWORD PTR [ebx+edx*4+0x500]
  447f68:	shr    eax,0x1a
  447f6b:	and    eax,0x3f
  447f6e:	xor    esi,DWORD PTR [ebx+eax*4+0x700]
  447f75:	mov    DWORD PTR [ebp-0x8],esi
  447f78:	sub    DWORD PTR [ebp-0xc],0x8
  447f7c:	cmp    DWORD PTR [ebp-0xc],0x0
  447f80:	jg     0x447d19
  447f86:	mov    eax,DWORD PTR [ebp-0x8]
  447f89:	shr    eax,0x3
  447f8c:	mov    edx,DWORD PTR [ebp-0x8]
  447f8f:	shl    edx,0x1d
  447f92:	or     eax,edx
  447f94:	mov    DWORD PTR [ebp-0x8],eax
  447f97:	mov    eax,ecx
  447f99:	shr    eax,0x3
  447f9c:	shl    ecx,0x1d
  447f9f:	or     eax,ecx
  447fa1:	mov    ecx,eax
  447fa3:	mov    eax,DWORD PTR [ebp-0x8]
  447fa6:	shr    eax,1
  447fa8:	xor    eax,ecx
  447faa:	and    eax,0x55555555
  447faf:	xor    ecx,eax
  447fb1:	add    eax,eax
  447fb3:	xor    DWORD PTR [ebp-0x8],eax
  447fb6:	mov    eax,ecx
  447fb8:	shr    eax,0x8
  447fbb:	xor    eax,DWORD PTR [ebp-0x8]
  447fbe:	and    eax,0xff00ff
  447fc3:	xor    DWORD PTR [ebp-0x8],eax
  447fc6:	shl    eax,0x8
  447fc9:	xor    ecx,eax
  447fcb:	mov    eax,DWORD PTR [ebp-0x8]
  447fce:	shr    eax,0x2
  447fd1:	xor    eax,ecx
  447fd3:	and    eax,0x33333333
  447fd8:	xor    ecx,eax
  447fda:	add    eax,eax
  447fdc:	add    eax,eax
  447fde:	xor    DWORD PTR [ebp-0x8],eax
  447fe1:	mov    eax,ecx
  447fe3:	shr    eax,0x10
  447fe6:	xor    eax,DWORD PTR [ebp-0x8]
  447fe9:	and    eax,0xffff
  447fee:	xor    DWORD PTR [ebp-0x8],eax
  447ff1:	shl    eax,0x10
  447ff4:	xor    ecx,eax
  447ff6:	mov    eax,DWORD PTR [ebp-0x8]
  447ff9:	shr    eax,0x4
  447ffc:	xor    eax,ecx
  447ffe:	and    eax,0xf0f0f0f
  448003:	xor    ecx,eax
  448005:	shl    eax,0x4
  448008:	xor    DWORD PTR [ebp-0x8],eax
  44800b:	mov    eax,DWORD PTR [ebp-0x4]
  44800e:	mov    DWORD PTR [eax],ecx
  448010:	mov    eax,DWORD PTR [ebp-0x4]
  448013:	add    eax,0x4
  448016:	mov    edx,DWORD PTR [ebp-0x8]
  448019:	mov    DWORD PTR [eax],edx
  44801b:	pop    edi
  44801c:	pop    esi
  44801d:	pop    ebx
  44801e:	mov    esp,ebp
  448020:	pop    ebp
  448021:	ret    0x4
  448024:	mov    eax,0x40
  448029:	ret    
  44802a:	mov    eax,eax
  44802c:	mov    eax,0x17
  448031:	ret    
  448032:	mov    eax,eax
  448034:	push   ebx
  448035:	mov    ebx,edx
  448037:	mov    eax,ebx
  448039:	mov    edx,0x448050
  44803e:	call   0x404fdc
  448043:	pop    ebx
  448044:	ret    
  448045:	add    BYTE PTR [eax],al
  448047:	add    bh,bh
  448049:	(bad)  
  44804a:	(bad)  
  44804b:	inc    DWORD PTR [ebx]
  44804d:	add    BYTE PTR [eax],al
  44804f:	add    BYTE PTR [ebp+eax*2+0x53],al
  448053:	add    BYTE PTR [ebx+0x56],dl
  448056:	push   edi
  448057:	add    esp,0xfffffff8
  44805a:	xor    ecx,ecx
  44805c:	mov    dl,0x1
  44805e:	mov    eax,ds:0x44734c
  448063:	call   0x44231c
  448068:	mov    esi,eax
  44806a:	push   0x0
  44806c:	mov    edx,0x467a4c
  448071:	mov    ecx,0x40
  448076:	mov    eax,esi
  448078:	mov    ebx,DWORD PTR [eax]
  44807a:	call   DWORD PTR [ebx+0x40]
  44807d:	mov    ecx,esp
  44807f:	mov    edx,0x467a3c
  448084:	mov    eax,esi
  448086:	mov    ebx,DWORD PTR [eax]
  448088:	call   DWORD PTR [ebx+0x6c]
  44808b:	mov    edx,0x467a44
  448090:	mov    eax,esp
  448092:	mov    ecx,0x8
  448097:	call   0x408538
  44809c:	mov    ebx,eax
  44809e:	mov    ecx,esp
  4480a0:	mov    edx,esp
  4480a2:	mov    eax,esi
  4480a4:	mov    edi,DWORD PTR [eax]
  4480a6:	call   DWORD PTR [edi+0x70]
  4480a9:	test   bl,bl
  4480ab:	je     0x4480c2
  4480ad:	mov    edx,0x467a3c
  4480b2:	mov    eax,esp
  4480b4:	mov    ecx,0x8
  4480b9:	call   0x408538
  4480be:	test   al,al
  4480c0:	jne    0x4480c6
  4480c2:	xor    eax,eax
  4480c4:	jmp    0x4480c8
  4480c6:	mov    al,0x1
  4480c8:	mov    ebx,eax
  4480ca:	mov    eax,esi
  4480cc:	mov    edx,DWORD PTR [eax]
  4480ce:	call   DWORD PTR [edx+0x44]
  4480d1:	push   0x0
  4480d3:	mov    edx,0x467a64
  4480d8:	mov    ecx,0x40
  4480dd:	mov    eax,esi
  4480df:	mov    edi,DWORD PTR [eax]
  4480e1:	call   DWORD PTR [edi+0x40]
  4480e4:	mov    ecx,esp
  4480e6:	mov    edx,0x467a54
  4480eb:	mov    eax,esi
  4480ed:	mov    edi,DWORD PTR [eax]
  4480ef:	call   DWORD PTR [edi+0x6c]
  4480f2:	test   bl,bl
  4480f4:	je     0x44810b
  4480f6:	mov    edx,0x467a5c
  4480fb:	mov    eax,esp
  4480fd:	mov    ecx,0x8
  448102:	call   0x408538
  448107:	test   al,al
  448109:	jne    0x44810f
  44810b:	xor    eax,eax
  44810d:	jmp    0x448111
  44810f:	mov    al,0x1
  448111:	mov    ebx,eax
  448113:	mov    ecx,esp
  448115:	mov    edx,esp
  448117:	mov    eax,esi
  448119:	mov    edi,DWORD PTR [eax]
  44811b:	call   DWORD PTR [edi+0x70]
  44811e:	test   bl,bl
  448120:	je     0x448137
  448122:	mov    edx,0x467a54
  448127:	mov    eax,esp
  448129:	mov    ecx,0x8
  44812e:	call   0x408538
  448133:	test   al,al
  448135:	jne    0x44813b
  448137:	xor    eax,eax
  448139:	jmp    0x44813d
  44813b:	mov    al,0x1
  44813d:	mov    ebx,eax
  44813f:	mov    eax,esi
  448141:	mov    edx,DWORD PTR [eax]
  448143:	call   DWORD PTR [edx+0x44]
  448146:	mov    eax,esi
  448148:	call   0x4040a0
  44814d:	mov    eax,ebx
  44814f:	pop    ecx
  448150:	pop    edx
  448151:	pop    edi
  448152:	pop    esi
  448153:	pop    ebx
  448154:	ret    
  448155:	lea    eax,[eax+0x0]
  448158:	push   ebx
  448159:	push   esi
  44815a:	push   edi
  44815b:	add    esp,0xfffffff8
  44815e:	mov    edi,ecx
  448160:	mov    esi,edx
  448162:	mov    ebx,eax
  448164:	mov    eax,esp
  448166:	xor    ecx,ecx
  448168:	mov    edx,0x8
  44816d:	call   0x4037c8
  448172:	mov    ecx,edi
  448174:	shr    ecx,0x3
  448177:	mov    edx,esp
  448179:	mov    eax,esi
  44817b:	call   0x403090
  448180:	lea    ecx,[ebx+0x48]
  448183:	mov    edx,esp
  448185:	mov    eax,ebx
  448187:	call   0x4475dc
  44818c:	pop    ecx
  44818d:	pop    edx
  44818e:	pop    edi
  44818f:	pop    esi
  448190:	pop    ebx
  448191:	ret    
  448192:	mov    eax,eax
  448194:	push   ebx
  448195:	mov    ebx,eax
  448197:	lea    eax,[ebx+0x48]
  44819a:	xor    ecx,ecx
  44819c:	mov    edx,0x80
  4481a1:	call   0x4037c8
  4481a6:	mov    eax,ebx
  4481a8:	call   0x442770
  4481ad:	pop    ebx
  4481ae:	ret    
  4481af:	nop
  4481b0:	push   ebx
  4481b1:	cmp    BYTE PTR [eax+0x30],0x0
  4481b5:	jne    0x4481cd
  4481b7:	mov    ecx,0x4481e0
  4481bc:	mov    dl,0x1
  4481be:	mov    eax,ds:0x441af8
  4481c3:	call   0x40c8b4
  4481c8:	call   0x4048fc
  4481cd:	lea    ebx,[eax+0x48]
  4481d0:	push   ebx
  4481d1:	call   0x44789c
  4481d6:	pop    ebx
  4481d7:	ret    
  4481d8:	(bad)  
  4481d9:	(bad)  
  4481da:	(bad)  
  4481db:	call   DWORD PTR [esi]
  4481dd:	add    BYTE PTR [eax],al
  4481df:	add    BYTE PTR [ebx+0x69],al
  4481e2:	jo     0x44824c
  4481e4:	gs jb  0x448207
  4481e7:	outs   dx,BYTE PTR ds:[esi]
  4481e8:	outs   dx,DWORD PTR ds:[esi]
  4481e9:	je     0x44820b
  4481eb:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  4481f2:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  4481f9:	cmp    BYTE PTR [eax+0x30],0x0
  4481fd:	jne    0x448215
  4481ff:	mov    ecx,0x448228
  448204:	mov    dl,0x1
  448206:	mov    eax,ds:0x441af8
  44820b:	call   0x40c8b4
  448210:	call   0x4048fc
  448215:	lea    ebx,[eax+0x48]
  448218:	push   ebx
  448219:	call   0x447c60
  44821e:	pop    ebx
  44821f:	ret    
  448220:	(bad)  
  448221:	(bad)  
  448222:	(bad)  
  448223:	call   DWORD PTR [esi]
  448225:	add    BYTE PTR [eax],al
  448227:	add    BYTE PTR [ebx+0x69],al
  44822a:	jo     0x448294
  44822c:	gs jb  0x44824f
  44822f:	outs   dx,BYTE PTR ds:[esi]
  448230:	outs   dx,DWORD PTR ds:[esi]
  448231:	je     0x448253
  448233:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44823a:	imul   edi,DWORD PTR [edx+0x65],0xb8000064
  448241:	rol    BYTE PTR [eax],0x0
  448244:	add    bl,al
  448246:	mov    eax,eax
  448248:	mov    eax,0x18
  44824d:	ret    
  44824e:	mov    eax,eax
  448250:	push   ebx
  448251:	mov    ebx,edx
  448253:	mov    eax,ebx
  448255:	mov    edx,0x44826c
  44825a:	call   0x404fdc
  44825f:	pop    ebx
  448260:	ret    
  448261:	add    BYTE PTR [eax],al
  448263:	add    bh,bh
  448265:	(bad)  
  448266:	(bad)  
  448267:	inc    DWORD PTR [eax+eax*1]
  44826a:	add    BYTE PTR [eax],al
  44826c:	xor    eax,DWORD PTR [ebp+eax*2+0x53]
  448270:	add    BYTE PTR [eax],al
  448272:	add    BYTE PTR [eax],al
  448274:	push   ebx
  448275:	push   esi
  448276:	push   edi
  448277:	add    esp,0xfffffff8
  44827a:	xor    ecx,ecx
  44827c:	mov    dl,0x1
  44827e:	mov    eax,ds:0x447464
  448283:	call   0x44231c
  448288:	mov    esi,eax
  44828a:	push   0x0
  44828c:	mov    edx,0x467a6c
  448291:	mov    ecx,0xc0
  448296:	mov    eax,esi
  448298:	mov    ebx,DWORD PTR [eax]
  44829a:	call   DWORD PTR [ebx+0x40]
  44829d:	mov    ecx,esp
  44829f:	mov    edx,0x467a84
  4482a4:	mov    eax,esi
  4482a6:	mov    ebx,DWORD PTR [eax]
  4482a8:	call   DWORD PTR [ebx+0x6c]
  4482ab:	mov    edx,0x467a8c
  4482b0:	mov    eax,esp
  4482b2:	mov    ecx,0x8
  4482b7:	call   0x408538
  4482bc:	mov    ebx,eax
  4482be:	mov    ecx,esp
  4482c0:	mov    edx,esp
  4482c2:	mov    eax,esi
  4482c4:	mov    edi,DWORD PTR [eax]
  4482c6:	call   DWORD PTR [edi+0x70]
  4482c9:	test   bl,bl
  4482cb:	je     0x4482e2
  4482cd:	mov    edx,0x467a84
  4482d2:	mov    eax,esp
  4482d4:	mov    ecx,0x8
  4482d9:	call   0x408538
  4482de:	test   al,al
  4482e0:	jne    0x4482e6
  4482e2:	xor    eax,eax
  4482e4:	jmp    0x4482e8
  4482e6:	mov    al,0x1
  4482e8:	mov    ebx,eax
  4482ea:	mov    eax,esi
  4482ec:	call   0x4040a0
  4482f1:	mov    eax,ebx
  4482f3:	pop    ecx
  4482f4:	pop    edx
  4482f5:	pop    edi
  4482f6:	pop    esi
  4482f7:	pop    ebx
  4482f8:	ret    
  4482f9:	lea    eax,[eax+0x0]
  4482fc:	push   ebx
  4482fd:	push   esi
  4482fe:	push   edi
  4482ff:	add    esp,0xffffffe8
  448302:	mov    esi,ecx
  448304:	mov    edi,edx
  448306:	mov    ebx,eax
  448308:	mov    eax,esp
  44830a:	xor    ecx,ecx
  44830c:	mov    edx,0x18
  448311:	call   0x4037c8
  448316:	mov    ecx,esi
  448318:	shr    ecx,0x3
  44831b:	mov    edx,esp
  44831d:	mov    eax,edi
  44831f:	call   0x403090
  448324:	lea    ecx,[ebx+0x48]
  448327:	mov    edx,esp
  448329:	mov    eax,ebx
  44832b:	call   0x4475dc
  448330:	lea    ecx,[ebx+0xc8]
  448336:	lea    edx,[esp+0x8]
  44833a:	mov    eax,ebx
  44833c:	call   0x4475dc
  448341:	cmp    esi,0x80
  448347:	jbe    0x44835c
  448349:	lea    ecx,[ebx+0x148]
  44834f:	lea    edx,[esp+0x10]
  448353:	mov    eax,ebx
  448355:	call   0x4475dc
  44835a:	jmp    0x44836f
  44835c:	lea    edx,[ebx+0x148]
  448362:	lea    eax,[ebx+0x48]
  448365:	mov    ecx,0x80
  44836a:	call   0x403090
  44836f:	add    esp,0x18
  448372:	pop    edi
  448373:	pop    esi
  448374:	pop    ebx
  448375:	ret    
  448376:	mov    eax,eax
  448378:	push   ebx
  448379:	mov    ebx,eax
  44837b:	lea    eax,[ebx+0x48]
  44837e:	xor    ecx,ecx
  448380:	mov    edx,0x180
  448385:	call   0x4037c8
  44838a:	mov    eax,ebx
  44838c:	call   0x442770
  448391:	pop    ebx
  448392:	ret    
  448393:	nop
  448394:	push   ebx
  448395:	push   esi
  448396:	mov    esi,ecx
  448398:	mov    ebx,eax
  44839a:	cmp    BYTE PTR [ebx+0x30],0x0
  44839e:	jne    0x4483b6
  4483a0:	mov    ecx,0x4483f4
  4483a5:	mov    dl,0x1
  4483a7:	mov    eax,ds:0x441af8
  4483ac:	call   0x40c8b4
  4483b1:	call   0x4048fc
  4483b6:	lea    eax,[ebx+0x48]
  4483b9:	push   eax
  4483ba:	mov    ecx,esi
  4483bc:	mov    eax,ebx
  4483be:	call   0x44789c
  4483c3:	lea    eax,[ebx+0xc8]
  4483c9:	push   eax
  4483ca:	mov    ecx,esi
  4483cc:	mov    edx,esi
  4483ce:	mov    eax,ebx
  4483d0:	call   0x447c60
  4483d5:	lea    eax,[ebx+0x148]
  4483db:	push   eax
  4483dc:	mov    ecx,esi
  4483de:	mov    edx,esi
  4483e0:	mov    eax,ebx
  4483e2:	call   0x44789c
  4483e7:	pop    esi
  4483e8:	pop    ebx
  4483e9:	ret    
  4483ea:	add    BYTE PTR [eax],al
  4483ec:	(bad)  
  4483ed:	(bad)  
  4483ee:	(bad)  
  4483ef:	call   DWORD PTR [esi]
  4483f1:	add    BYTE PTR [eax],al
  4483f3:	add    BYTE PTR [ebx+0x69],al
  4483f6:	jo     0x448460
  4483f8:	gs jb  0x44841b
  4483fb:	outs   dx,BYTE PTR ds:[esi]
  4483fc:	outs   dx,DWORD PTR ds:[esi]
  4483fd:	je     0x44841f
  4483ff:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  448406:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44840d:	push   esi
  44840e:	mov    esi,ecx
  448410:	mov    ebx,eax
  448412:	cmp    BYTE PTR [ebx+0x30],0x0
  448416:	jne    0x44842e
  448418:	mov    ecx,0x44846c
  44841d:	mov    dl,0x1
  44841f:	mov    eax,ds:0x441af8
  448424:	call   0x40c8b4
  448429:	call   0x4048fc
  44842e:	lea    eax,[ebx+0x148]
  448434:	push   eax
  448435:	mov    ecx,esi
  448437:	mov    eax,ebx
  448439:	call   0x447c60
  44843e:	lea    eax,[ebx+0xc8]
  448444:	push   eax
  448445:	mov    ecx,esi
  448447:	mov    edx,esi
  448449:	mov    eax,ebx
  44844b:	call   0x44789c
  448450:	lea    eax,[ebx+0x48]
  448453:	push   eax
  448454:	mov    ecx,esi
  448456:	mov    edx,esi
  448458:	mov    eax,ebx
  44845a:	call   0x447c60
  44845f:	pop    esi
  448460:	pop    ebx
  448461:	ret    
  448462:	add    BYTE PTR [eax],al
  448464:	(bad)  
  448465:	(bad)  
  448466:	(bad)  
  448467:	call   DWORD PTR [esi]
  448469:	add    BYTE PTR [eax],al
  44846b:	add    BYTE PTR [ebx+0x69],al
  44846e:	jo     0x4484d8
  448470:	gs jb  0x448493
  448473:	outs   dx,BYTE PTR ds:[esi]
  448474:	outs   dx,DWORD PTR ds:[esi]
  448475:	je     0x448497
  448477:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44847e:	imul   edi,DWORD PTR [edx+0x65],0xd0000064
  448485:	test   BYTE PTR [eax+eax*1+0x0],al
	...
  448491:	add    BYTE PTR [eax],al
  448493:	add    BYTE PTR [ebp+eax*4+0x44],bh
	...
  4484a3:	add    BYTE PTR [ebp+eax*4+0x44],ch
  4484a7:	add    BYTE PTR [eax+0x0],ch
  4484aa:	add    BYTE PTR [eax],al
  4484ac:	and    BYTE PTR [ebx],0x44
  4484af:	add    BYTE PTR [eax],bl
  4484b1:	test   eax,0x42dc0041
  4484b6:	inc    eax
  4484b7:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4484bd:	inc    edx
  4484be:	inc    eax
  4484bf:	add    al,bl
  4484c1:	inc    edx
  4484c2:	inc    eax
  4484c3:	add    BYTE PTR [eax],bh
  4484c5:	inc    eax
  4484c6:	inc    eax
  4484c7:	add    BYTE PTR [eax+eax*2+0x40],dl
  4484cb:	add    BYTE PTR [eax+0x20],bh
  4484ce:	inc    esp
  4484cf:	add    BYTE PTR [eax+0x41],ch
  4484d2:	inc    ecx
  4484d3:	add    BYTE PTR [eax-0x5b],dh
  4484d6:	inc    ecx
  4484d7:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4484de:	inc    ecx
  4484df:	add    BYTE PTR [eax],dl
  4484e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4484e2:	inc    ecx
  4484e3:	add    BYTE PTR [eax-0x5a],bl
  4484e6:	inc    ecx
  4484e7:	add    BYTE PTR [eax-0x59],dl
  4484ea:	inc    ecx
  4484eb:	add    BYTE PTR [eax],dh
  4484ed:	test   eax,0xa6680041
  4484f2:	inc    ecx
  4484f3:	add    BYTE PTR [eax-0x5a],ah
  4484f6:	inc    ecx
  4484f7:	add    BYTE PTR [eax],bh
  4484f9:	test   eax,0x231c0041
  4484fe:	inc    esp
  4484ff:	add    BYTE PTR [ebp+eax*4-0x7a53ffbc],ah
  448506:	inc    esp
  448507:	add    BYTE PTR [ebp+eax*4-0x7a2fffbc],bl
  44850e:	inc    esp
  44850f:	add    BYTE PTR [eax],cl
  448511:	es inc esp
  448513:	add    BYTE PTR [edi+eax*4+0x44],al
  448517:	add    BYTE PTR [eax],ah
  448519:	daa    
  44851a:	inc    esp
  44851b:	add    ah,al
  44851d:	and    BYTE PTR [eax+eax*1+0x38],al
  448521:	and    al,BYTE PTR [eax+eax*1+0x4c]
  448525:	and    DWORD PTR [eax+eax*1-0x14],eax
  448529:	and    DWORD PTR [eax+eax*1-0x2c],eax
  44852d:	xchg   BYTE PTR [eax+eax*1+0x0],al
  448531:	es inc esp
  448533:	add    BYTE PTR [esi+eiz*1+0x44],bh
  448537:	add    ah,dl
  448539:	es inc esp
  44853b:	add    BYTE PTR [eax-0x79],ah
  44853e:	inc    esp
  44853f:	add    ah,bl
  448541:	mov    eax,DWORD PTR [eax+eax*1-0x60]
  448545:	daa    
  448546:	inc    esp
  448547:	add    BYTE PTR [eax+ebp*1+0x299c0044],dl
  44854e:	inc    esp
  44854f:	add    BYTE PTR [eax],bh
  448551:	sub    al,BYTE PTR [eax+eax*1-0x24]
  448555:	sub    al,BYTE PTR [eax+eax*1-0x38]
  448559:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  44855d:	sub    al,0x44
  44855f:	add    BYTE PTR [eax-0x77ffbbd3],ch
  448565:	cs inc esp
  448567:	add    BYTE PTR [eax+0x2f],bh
  44856a:	inc    esp
  44856b:	add    BYTE PTR [ecx],cl
  44856d:	push   esp
  44856e:	inc    esp
  44856f:	inc    ebx
  448570:	push   eax
  448571:	pop    edi
  448572:	outs   dx,DWORD PTR ds:[si]
  448574:	jae    0x4485ea
  448576:	mov    eax,eax
  448578:	jl     0x4484ff
  44857a:	inc    esp
  44857b:	add    BYTE PTR [edi],al
  44857d:	or     DWORD PTR [esp+eax*2+0x43],edx
  448581:	push   eax
  448582:	pop    edi
  448583:	outs   dx,DWORD PTR ds:[si]
  448585:	jae    0x4485fb
  448587:	rol    BYTE PTR [esp+eax*2+0x44247c00],1
  44858e:	add    BYTE PTR [edi],al
  448590:	add    BYTE PTR [edi],al
  448592:	inc    esp
  448593:	inc    ebx
  448594:	push   eax
  448595:	outs   dx,DWORD PTR ds:[si]
  448597:	jae    0x44860d
  448599:	add    BYTE PTR [eax],al
  44859b:	nop
  44859c:	mov    eax,0x100
  4485a1:	ret    
  4485a2:	mov    eax,eax
  4485a4:	mov    eax,0x8
  4485a9:	ret    
  4485aa:	mov    eax,eax
  4485ac:	push   ebx
  4485ad:	mov    ebx,edx
  4485af:	mov    eax,ebx
  4485b1:	mov    edx,0x4485c8
  4485b6:	call   0x404fdc
  4485bb:	pop    ebx
  4485bc:	ret    
  4485bd:	add    BYTE PTR [eax],al
  4485bf:	add    bh,bh
  4485c1:	(bad)  
  4485c2:	(bad)  
  4485c3:	inc    DWORD PTR [eax+eax*1]
  4485c6:	add    BYTE PTR [eax],al
  4485c8:	inc    edi
  4485c9:	outs   dx,DWORD PTR ds:[esi]
  4485ca:	jae    0x448640
  4485cc:	add    BYTE PTR [eax],al
  4485ce:	add    BYTE PTR [eax],al
  4485d0:	push   ebx
  4485d1:	push   esi
  4485d2:	push   edi
  4485d3:	add    esp,0xfffffff8
  4485d6:	xor    ecx,ecx
  4485d8:	mov    dl,0x1
  4485da:	mov    eax,ds:0x448484
  4485df:	call   0x44231c
  4485e4:	mov    esi,eax
  4485e6:	push   0x0
  4485e8:	mov    edx,0x468a94
  4485ed:	mov    ecx,0x100
  4485f2:	mov    eax,esi
  4485f4:	mov    ebx,DWORD PTR [eax]
  4485f6:	call   DWORD PTR [ebx+0x40]
  4485f9:	mov    ecx,esp
  4485fb:	mov    edx,0x468ab4
  448600:	mov    eax,esi
  448602:	mov    ebx,DWORD PTR [eax]
  448604:	call   DWORD PTR [ebx+0x6c]
  448607:	mov    edx,0x468abc
  44860c:	mov    eax,esp
  44860e:	mov    ecx,0x8
  448613:	call   0x408538
  448618:	mov    ebx,eax
  44861a:	mov    ecx,esp
  44861c:	mov    edx,esp
  44861e:	mov    eax,esi
  448620:	mov    edi,DWORD PTR [eax]
  448622:	call   DWORD PTR [edi+0x70]
  448625:	mov    eax,esi
  448627:	mov    edx,DWORD PTR [eax]
  448629:	call   DWORD PTR [edx+0x44]
  44862c:	test   bl,bl
  44862e:	je     0x448645
  448630:	mov    edx,0x468ab4
  448635:	mov    eax,esp
  448637:	mov    ecx,0x8
  44863c:	call   0x408538
  448641:	test   al,al
  448643:	jne    0x448649
  448645:	xor    eax,eax
  448647:	jmp    0x44864b
  448649:	mov    al,0x1
  44864b:	mov    ebx,eax
  44864d:	push   0x0
  44864f:	mov    edx,0x468ac4
  448654:	mov    ecx,0x100
  448659:	mov    eax,esi
  44865b:	mov    edi,DWORD PTR [eax]
  44865d:	call   DWORD PTR [edi+0x40]
  448660:	mov    ecx,esp
  448662:	mov    edx,0x468ae4
  448667:	mov    eax,esi
  448669:	mov    edi,DWORD PTR [eax]
  44866b:	call   DWORD PTR [edi+0x6c]
  44866e:	test   bl,bl
  448670:	je     0x448687
  448672:	mov    edx,0x468aec
  448677:	mov    eax,esp
  448679:	mov    ecx,0x8
  44867e:	call   0x408538
  448683:	test   al,al
  448685:	jne    0x44868b
  448687:	xor    eax,eax
  448689:	jmp    0x44868d
  44868b:	mov    al,0x1
  44868d:	mov    ebx,eax
  44868f:	mov    ecx,esp
  448691:	mov    edx,esp
  448693:	mov    eax,esi
  448695:	mov    edi,DWORD PTR [eax]
  448697:	call   DWORD PTR [edi+0x70]
  44869a:	mov    eax,esi
  44869c:	mov    edx,DWORD PTR [eax]
  44869e:	call   DWORD PTR [edx+0x44]
  4486a1:	test   bl,bl
  4486a3:	je     0x4486ba
  4486a5:	mov    edx,0x468ae4
  4486aa:	mov    eax,esp
  4486ac:	mov    ecx,0x8
  4486b1:	call   0x408538
  4486b6:	test   al,al
  4486b8:	jne    0x4486be
  4486ba:	xor    eax,eax
  4486bc:	jmp    0x4486c0
  4486be:	mov    al,0x1
  4486c0:	mov    ebx,eax
  4486c2:	mov    eax,esi
  4486c4:	call   0x4040a0
  4486c9:	mov    eax,ebx
  4486cb:	pop    ecx
  4486cc:	pop    edx
  4486cd:	pop    edi
  4486ce:	pop    esi
  4486cf:	pop    ebx
  4486d0:	ret    
  4486d1:	lea    eax,[eax+0x0]
  4486d4:	push   ebx
  4486d5:	push   esi
  4486d6:	push   edi
  4486d7:	add    esp,0xffffffe0
  4486da:	mov    esi,ecx
  4486dc:	mov    edi,edx
  4486de:	mov    ebx,eax
  4486e0:	mov    ecx,0x8
  4486e5:	mov    eax,esi
  4486e7:	xor    edx,edx
  4486e9:	div    ecx
  4486eb:	mov    esi,eax
  4486ed:	mov    eax,esp
  4486ef:	xor    ecx,ecx
  4486f1:	mov    edx,0x20
  4486f6:	call   0x4037c8
  4486fb:	mov    edx,esp
  4486fd:	mov    eax,edi
  4486ff:	mov    ecx,esi
  448701:	call   0x403090
  448706:	xor    eax,eax
  448708:	mov    edx,eax
  44870a:	add    edx,edx
  44870c:	add    edx,edx
  44870e:	movzx  ecx,BYTE PTR [esp+edx*1+0x3]
  448713:	shl    ecx,0x18
  448716:	movzx  esi,BYTE PTR [esp+edx*1+0x2]
  44871b:	shl    esi,0x10
  44871e:	or     ecx,esi
  448720:	movzx  esi,BYTE PTR [esp+edx*1+0x1]
  448725:	shl    esi,0x8
  448728:	or     ecx,esi
  44872a:	movzx  edx,BYTE PTR [esp+edx*1]
  44872e:	or     ecx,edx
  448730:	mov    DWORD PTR [ebx+eax*4+0x48],ecx
  448734:	inc    eax
  448735:	cmp    eax,0x8
  448738:	jne    0x448708
  44873a:	add    esp,0x20
  44873d:	pop    edi
  44873e:	pop    esi
  44873f:	pop    ebx
  448740:	ret    
  448741:	lea    eax,[eax+0x0]
  448744:	push   ebx
  448745:	mov    ebx,eax
  448747:	lea    eax,[ebx+0x48]
  44874a:	xor    ecx,ecx
  44874c:	mov    edx,0x20
  448751:	call   0x4037c8
  448756:	mov    eax,ebx
  448758:	call   0x442770
  44875d:	pop    ebx
  44875e:	ret    
  44875f:	nop
  448760:	push   ebx
  448761:	push   esi
  448762:	push   edi
  448763:	push   ebp
  448764:	add    esp,0xfffffff8
  448767:	mov    DWORD PTR [esp],ecx
  44876a:	mov    esi,0x467a94
  44876f:	cmp    BYTE PTR [eax+0x30],0x0
  448773:	jne    0x44878b
  448775:	mov    ecx,0x448bc4
  44877a:	mov    dl,0x1
  44877c:	mov    eax,ds:0x441af8
  448781:	call   0x40c8b4
  448786:	call   0x4048fc
  44878b:	mov    ecx,edx
  44878d:	mov    ebx,DWORD PTR [ecx]
  44878f:	add    ecx,0x4
  448792:	mov    edx,DWORD PTR [ecx]
  448794:	mov    DWORD PTR [esp+0x4],0x3
  44879c:	mov    ecx,DWORD PTR [eax+0x48]
  44879f:	add    ecx,ebx
  4487a1:	mov    edi,ecx
  4487a3:	shr    edi,0x18
  4487a6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4487ad:	mov    ebp,ecx
  4487af:	shr    ebp,0x10
  4487b2:	and    ebp,0xff
  4487b8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  4487bf:	mov    ebp,ecx
  4487c1:	shr    ebp,0x8
  4487c4:	and    ebp,0xff
  4487ca:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  4487d1:	and    ecx,0xff
  4487d7:	xor    edi,DWORD PTR [esi+ecx*4]
  4487da:	xor    edx,edi
  4487dc:	mov    ecx,DWORD PTR [eax+0x4c]
  4487df:	add    ecx,edx
  4487e1:	mov    edi,ecx
  4487e3:	shr    edi,0x18
  4487e6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4487ed:	mov    ebp,ecx
  4487ef:	shr    ebp,0x10
  4487f2:	and    ebp,0xff
  4487f8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  4487ff:	mov    ebp,ecx
  448801:	shr    ebp,0x8
  448804:	and    ebp,0xff
  44880a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448811:	and    ecx,0xff
  448817:	xor    edi,DWORD PTR [esi+ecx*4]
  44881a:	xor    ebx,edi
  44881c:	mov    ecx,DWORD PTR [eax+0x50]
  44881f:	add    ecx,ebx
  448821:	mov    edi,ecx
  448823:	shr    edi,0x18
  448826:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  44882d:	mov    ebp,ecx
  44882f:	shr    ebp,0x10
  448832:	and    ebp,0xff
  448838:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  44883f:	mov    ebp,ecx
  448841:	shr    ebp,0x8
  448844:	and    ebp,0xff
  44884a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448851:	and    ecx,0xff
  448857:	xor    edi,DWORD PTR [esi+ecx*4]
  44885a:	xor    edx,edi
  44885c:	mov    ecx,DWORD PTR [eax+0x54]
  44885f:	add    ecx,edx
  448861:	mov    edi,ecx
  448863:	shr    edi,0x18
  448866:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  44886d:	mov    ebp,ecx
  44886f:	shr    ebp,0x10
  448872:	and    ebp,0xff
  448878:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  44887f:	mov    ebp,ecx
  448881:	shr    ebp,0x8
  448884:	and    ebp,0xff
  44888a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448891:	and    ecx,0xff
  448897:	xor    edi,DWORD PTR [esi+ecx*4]
  44889a:	xor    ebx,edi
  44889c:	mov    ecx,DWORD PTR [eax+0x58]
  44889f:	add    ecx,ebx
  4488a1:	mov    edi,ecx
  4488a3:	shr    edi,0x18
  4488a6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4488ad:	mov    ebp,ecx
  4488af:	shr    ebp,0x10
  4488b2:	and    ebp,0xff
  4488b8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  4488bf:	mov    ebp,ecx
  4488c1:	shr    ebp,0x8
  4488c4:	and    ebp,0xff
  4488ca:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  4488d1:	and    ecx,0xff
  4488d7:	xor    edi,DWORD PTR [esi+ecx*4]
  4488da:	xor    edx,edi
  4488dc:	mov    ecx,DWORD PTR [eax+0x5c]
  4488df:	add    ecx,edx
  4488e1:	mov    edi,ecx
  4488e3:	shr    edi,0x18
  4488e6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4488ed:	mov    ebp,ecx
  4488ef:	shr    ebp,0x10
  4488f2:	and    ebp,0xff
  4488f8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  4488ff:	mov    ebp,ecx
  448901:	shr    ebp,0x8
  448904:	and    ebp,0xff
  44890a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448911:	and    ecx,0xff
  448917:	xor    edi,DWORD PTR [esi+ecx*4]
  44891a:	xor    ebx,edi
  44891c:	mov    ecx,DWORD PTR [eax+0x60]
  44891f:	add    ecx,ebx
  448921:	mov    edi,ecx
  448923:	shr    edi,0x18
  448926:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  44892d:	mov    ebp,ecx
  44892f:	shr    ebp,0x10
  448932:	and    ebp,0xff
  448938:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  44893f:	mov    ebp,ecx
  448941:	shr    ebp,0x8
  448944:	and    ebp,0xff
  44894a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448951:	and    ecx,0xff
  448957:	xor    edi,DWORD PTR [esi+ecx*4]
  44895a:	xor    edx,edi
  44895c:	mov    ecx,DWORD PTR [eax+0x64]
  44895f:	add    ecx,edx
  448961:	mov    edi,ecx
  448963:	shr    edi,0x18
  448966:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  44896d:	mov    ebp,ecx
  44896f:	shr    ebp,0x10
  448972:	and    ebp,0xff
  448978:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  44897f:	mov    ebp,ecx
  448981:	shr    ebp,0x8
  448984:	and    ebp,0xff
  44898a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448991:	and    ecx,0xff
  448997:	xor    edi,DWORD PTR [esi+ecx*4]
  44899a:	xor    ebx,edi
  44899c:	dec    DWORD PTR [esp+0x4]
  4489a0:	jne    0x44879c
  4489a6:	mov    ecx,DWORD PTR [eax+0x64]
  4489a9:	add    ecx,ebx
  4489ab:	mov    edi,ecx
  4489ad:	shr    edi,0x18
  4489b0:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4489b7:	mov    ebp,ecx
  4489b9:	shr    ebp,0x10
  4489bc:	and    ebp,0xff
  4489c2:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  4489c9:	mov    ebp,ecx
  4489cb:	shr    ebp,0x8
  4489ce:	and    ebp,0xff
  4489d4:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  4489db:	and    ecx,0xff
  4489e1:	xor    edi,DWORD PTR [esi+ecx*4]
  4489e4:	xor    edx,edi
  4489e6:	mov    ecx,DWORD PTR [eax+0x60]
  4489e9:	add    ecx,edx
  4489eb:	mov    edi,ecx
  4489ed:	shr    edi,0x18
  4489f0:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  4489f7:	mov    ebp,ecx
  4489f9:	shr    ebp,0x10
  4489fc:	and    ebp,0xff
  448a02:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448a09:	mov    ebp,ecx
  448a0b:	shr    ebp,0x8
  448a0e:	and    ebp,0xff
  448a14:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448a1b:	and    ecx,0xff
  448a21:	xor    edi,DWORD PTR [esi+ecx*4]
  448a24:	xor    ebx,edi
  448a26:	mov    ecx,DWORD PTR [eax+0x5c]
  448a29:	add    ecx,ebx
  448a2b:	mov    edi,ecx
  448a2d:	shr    edi,0x18
  448a30:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448a37:	mov    ebp,ecx
  448a39:	shr    ebp,0x10
  448a3c:	and    ebp,0xff
  448a42:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448a49:	mov    ebp,ecx
  448a4b:	shr    ebp,0x8
  448a4e:	and    ebp,0xff
  448a54:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448a5b:	and    ecx,0xff
  448a61:	xor    edi,DWORD PTR [esi+ecx*4]
  448a64:	xor    edx,edi
  448a66:	mov    ecx,DWORD PTR [eax+0x58]
  448a69:	add    ecx,edx
  448a6b:	mov    edi,ecx
  448a6d:	shr    edi,0x18
  448a70:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448a77:	mov    ebp,ecx
  448a79:	shr    ebp,0x10
  448a7c:	and    ebp,0xff
  448a82:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448a89:	mov    ebp,ecx
  448a8b:	shr    ebp,0x8
  448a8e:	and    ebp,0xff
  448a94:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448a9b:	and    ecx,0xff
  448aa1:	xor    edi,DWORD PTR [esi+ecx*4]
  448aa4:	xor    ebx,edi
  448aa6:	mov    ecx,DWORD PTR [eax+0x54]
  448aa9:	add    ecx,ebx
  448aab:	mov    edi,ecx
  448aad:	shr    edi,0x18
  448ab0:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448ab7:	mov    ebp,ecx
  448ab9:	shr    ebp,0x10
  448abc:	and    ebp,0xff
  448ac2:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448ac9:	mov    ebp,ecx
  448acb:	shr    ebp,0x8
  448ace:	and    ebp,0xff
  448ad4:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448adb:	and    ecx,0xff
  448ae1:	xor    edi,DWORD PTR [esi+ecx*4]
  448ae4:	xor    edx,edi
  448ae6:	mov    ecx,DWORD PTR [eax+0x50]
  448ae9:	add    ecx,edx
  448aeb:	mov    edi,ecx
  448aed:	shr    edi,0x18
  448af0:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448af7:	mov    ebp,ecx
  448af9:	shr    ebp,0x10
  448afc:	and    ebp,0xff
  448b02:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448b09:	mov    ebp,ecx
  448b0b:	shr    ebp,0x8
  448b0e:	and    ebp,0xff
  448b14:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448b1b:	and    ecx,0xff
  448b21:	xor    edi,DWORD PTR [esi+ecx*4]
  448b24:	xor    ebx,edi
  448b26:	mov    ecx,DWORD PTR [eax+0x4c]
  448b29:	add    ecx,ebx
  448b2b:	mov    edi,ecx
  448b2d:	shr    edi,0x18
  448b30:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448b37:	mov    ebp,ecx
  448b39:	shr    ebp,0x10
  448b3c:	and    ebp,0xff
  448b42:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448b49:	mov    ebp,ecx
  448b4b:	shr    ebp,0x8
  448b4e:	and    ebp,0xff
  448b54:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448b5b:	and    ecx,0xff
  448b61:	xor    edi,DWORD PTR [esi+ecx*4]
  448b64:	xor    edx,edi
  448b66:	mov    ecx,DWORD PTR [eax+0x48]
  448b69:	add    ecx,edx
  448b6b:	mov    edi,ecx
  448b6d:	shr    edi,0x18
  448b70:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448b77:	mov    ebp,ecx
  448b79:	shr    ebp,0x10
  448b7c:	and    ebp,0xff
  448b82:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448b89:	mov    ebp,ecx
  448b8b:	shr    ebp,0x8
  448b8e:	and    ebp,0xff
  448b94:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448b9b:	and    ecx,0xff
  448ba1:	xor    edi,DWORD PTR [esi+ecx*4]
  448ba4:	xor    ebx,edi
  448ba6:	mov    eax,DWORD PTR [esp]
  448ba9:	mov    DWORD PTR [eax],edx
  448bab:	mov    eax,DWORD PTR [esp]
  448bae:	add    eax,0x4
  448bb1:	mov    DWORD PTR [eax],ebx
  448bb3:	pop    ecx
  448bb4:	pop    edx
  448bb5:	pop    ebp
  448bb6:	pop    edi
  448bb7:	pop    esi
  448bb8:	pop    ebx
  448bb9:	ret    
  448bba:	add    BYTE PTR [eax],al
  448bbc:	(bad)  
  448bbd:	(bad)  
  448bbe:	(bad)  
  448bbf:	call   DWORD PTR [esi]
  448bc1:	add    BYTE PTR [eax],al
  448bc3:	add    BYTE PTR [ebx+0x69],al
  448bc6:	jo     0x448c30
  448bc8:	gs jb  0x448beb
  448bcb:	outs   dx,BYTE PTR ds:[esi]
  448bcc:	outs   dx,DWORD PTR ds:[esi]
  448bcd:	je     0x448bef
  448bcf:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  448bd6:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  448bdd:	push   esi
  448bde:	push   edi
  448bdf:	push   ebp
  448be0:	add    esp,0xfffffff8
  448be3:	mov    DWORD PTR [esp],ecx
  448be6:	mov    esi,0x467a94
  448beb:	cmp    BYTE PTR [eax+0x30],0x0
  448bef:	jne    0x448c07
  448bf1:	mov    ecx,0x449064
  448bf6:	mov    dl,0x1
  448bf8:	mov    eax,ds:0x441af8
  448bfd:	call   0x40c8b4
  448c02:	call   0x4048fc
  448c07:	mov    ecx,edx
  448c09:	mov    ebx,DWORD PTR [ecx]
  448c0b:	add    ecx,0x4
  448c0e:	mov    edx,DWORD PTR [ecx]
  448c10:	mov    ecx,DWORD PTR [eax+0x48]
  448c13:	add    ecx,ebx
  448c15:	mov    edi,ecx
  448c17:	shr    edi,0x18
  448c1a:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448c21:	mov    ebp,ecx
  448c23:	shr    ebp,0x10
  448c26:	and    ebp,0xff
  448c2c:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448c33:	mov    ebp,ecx
  448c35:	shr    ebp,0x8
  448c38:	and    ebp,0xff
  448c3e:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448c45:	and    ecx,0xff
  448c4b:	xor    edi,DWORD PTR [esi+ecx*4]
  448c4e:	xor    edx,edi
  448c50:	mov    ecx,DWORD PTR [eax+0x4c]
  448c53:	add    ecx,edx
  448c55:	shr    ecx,0x18
  448c58:	mov    ecx,DWORD PTR [esi+ecx*4+0xc00]
  448c5f:	mov    edi,DWORD PTR [eax+0x4c]
  448c62:	add    edi,edx
  448c64:	shr    edi,0x10
  448c67:	and    edi,0xff
  448c6d:	xor    ecx,DWORD PTR [esi+edi*4+0x800]
  448c74:	mov    edi,DWORD PTR [eax+0x4c]
  448c77:	add    edi,edx
  448c79:	shr    edi,0x8
  448c7c:	and    edi,0xff
  448c82:	xor    ecx,DWORD PTR [esi+edi*4+0x400]
  448c89:	mov    edi,DWORD PTR [eax+0x4c]
  448c8c:	add    edi,edx
  448c8e:	and    edi,0xff
  448c94:	xor    ecx,DWORD PTR [esi+edi*4]
  448c97:	xor    ebx,ecx
  448c99:	mov    ecx,DWORD PTR [eax+0x50]
  448c9c:	add    ecx,ebx
  448c9e:	mov    edi,ecx
  448ca0:	shr    edi,0x18
  448ca3:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448caa:	mov    ebp,ecx
  448cac:	shr    ebp,0x10
  448caf:	and    ebp,0xff
  448cb5:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448cbc:	mov    ebp,ecx
  448cbe:	shr    ebp,0x8
  448cc1:	and    ebp,0xff
  448cc7:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448cce:	and    ecx,0xff
  448cd4:	xor    edi,DWORD PTR [esi+ecx*4]
  448cd7:	xor    edx,edi
  448cd9:	mov    ecx,DWORD PTR [eax+0x54]
  448cdc:	add    ecx,edx
  448cde:	shr    ecx,0x18
  448ce1:	mov    ecx,DWORD PTR [esi+ecx*4+0xc00]
  448ce8:	mov    edi,DWORD PTR [eax+0x54]
  448ceb:	add    edi,edx
  448ced:	shr    edi,0x10
  448cf0:	and    edi,0xff
  448cf6:	xor    ecx,DWORD PTR [esi+edi*4+0x800]
  448cfd:	mov    edi,DWORD PTR [eax+0x54]
  448d00:	add    edi,edx
  448d02:	shr    edi,0x8
  448d05:	and    edi,0xff
  448d0b:	xor    ecx,DWORD PTR [esi+edi*4+0x400]
  448d12:	mov    edi,DWORD PTR [eax+0x54]
  448d15:	add    edi,edx
  448d17:	and    edi,0xff
  448d1d:	xor    ecx,DWORD PTR [esi+edi*4]
  448d20:	xor    ebx,ecx
  448d22:	mov    ecx,DWORD PTR [eax+0x58]
  448d25:	add    ecx,ebx
  448d27:	mov    edi,ecx
  448d29:	shr    edi,0x18
  448d2c:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448d33:	mov    ebp,ecx
  448d35:	shr    ebp,0x10
  448d38:	and    ebp,0xff
  448d3e:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448d45:	mov    ebp,ecx
  448d47:	shr    ebp,0x8
  448d4a:	and    ebp,0xff
  448d50:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448d57:	and    ecx,0xff
  448d5d:	xor    edi,DWORD PTR [esi+ecx*4]
  448d60:	xor    edx,edi
  448d62:	mov    ecx,DWORD PTR [eax+0x5c]
  448d65:	add    ecx,edx
  448d67:	shr    ecx,0x18
  448d6a:	mov    ecx,DWORD PTR [esi+ecx*4+0xc00]
  448d71:	mov    edi,DWORD PTR [eax+0x5c]
  448d74:	add    edi,edx
  448d76:	shr    edi,0x10
  448d79:	and    edi,0xff
  448d7f:	xor    ecx,DWORD PTR [esi+edi*4+0x800]
  448d86:	mov    edi,DWORD PTR [eax+0x5c]
  448d89:	add    edi,edx
  448d8b:	shr    edi,0x8
  448d8e:	and    edi,0xff
  448d94:	xor    ecx,DWORD PTR [esi+edi*4+0x400]
  448d9b:	mov    edi,DWORD PTR [eax+0x5c]
  448d9e:	add    edi,edx
  448da0:	and    edi,0xff
  448da6:	xor    ecx,DWORD PTR [esi+edi*4]
  448da9:	xor    ebx,ecx
  448dab:	mov    ecx,DWORD PTR [eax+0x60]
  448dae:	add    ecx,ebx
  448db0:	mov    edi,ecx
  448db2:	shr    edi,0x18
  448db5:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448dbc:	mov    ebp,ecx
  448dbe:	shr    ebp,0x10
  448dc1:	and    ebp,0xff
  448dc7:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448dce:	mov    ebp,ecx
  448dd0:	shr    ebp,0x8
  448dd3:	and    ebp,0xff
  448dd9:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448de0:	and    ecx,0xff
  448de6:	xor    edi,DWORD PTR [esi+ecx*4]
  448de9:	xor    edx,edi
  448deb:	mov    ecx,DWORD PTR [eax+0x64]
  448dee:	add    ecx,edx
  448df0:	shr    ecx,0x18
  448df3:	mov    ecx,DWORD PTR [esi+ecx*4+0xc00]
  448dfa:	mov    edi,DWORD PTR [eax+0x64]
  448dfd:	add    edi,edx
  448dff:	shr    edi,0x10
  448e02:	and    edi,0xff
  448e08:	xor    ecx,DWORD PTR [esi+edi*4+0x800]
  448e0f:	mov    edi,DWORD PTR [eax+0x64]
  448e12:	add    edi,edx
  448e14:	shr    edi,0x8
  448e17:	and    edi,0xff
  448e1d:	xor    ecx,DWORD PTR [esi+edi*4+0x400]
  448e24:	mov    edi,DWORD PTR [eax+0x64]
  448e27:	add    edi,edx
  448e29:	and    edi,0xff
  448e2f:	xor    ecx,DWORD PTR [esi+edi*4]
  448e32:	xor    ebx,ecx
  448e34:	mov    DWORD PTR [esp+0x4],0x3
  448e3c:	mov    ecx,DWORD PTR [eax+0x64]
  448e3f:	add    ecx,ebx
  448e41:	mov    edi,ecx
  448e43:	shr    edi,0x18
  448e46:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448e4d:	mov    ebp,ecx
  448e4f:	shr    ebp,0x10
  448e52:	and    ebp,0xff
  448e58:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448e5f:	mov    ebp,ecx
  448e61:	shr    ebp,0x8
  448e64:	and    ebp,0xff
  448e6a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448e71:	and    ecx,0xff
  448e77:	xor    edi,DWORD PTR [esi+ecx*4]
  448e7a:	xor    edx,edi
  448e7c:	mov    ecx,DWORD PTR [eax+0x60]
  448e7f:	add    ecx,edx
  448e81:	mov    edi,ecx
  448e83:	shr    edi,0x18
  448e86:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448e8d:	mov    ebp,ecx
  448e8f:	shr    ebp,0x10
  448e92:	and    ebp,0xff
  448e98:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448e9f:	mov    ebp,ecx
  448ea1:	shr    ebp,0x8
  448ea4:	and    ebp,0xff
  448eaa:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448eb1:	and    ecx,0xff
  448eb7:	xor    edi,DWORD PTR [esi+ecx*4]
  448eba:	xor    ebx,edi
  448ebc:	mov    ecx,DWORD PTR [eax+0x5c]
  448ebf:	add    ecx,ebx
  448ec1:	mov    edi,ecx
  448ec3:	shr    edi,0x18
  448ec6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448ecd:	mov    ebp,ecx
  448ecf:	shr    ebp,0x10
  448ed2:	and    ebp,0xff
  448ed8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448edf:	mov    ebp,ecx
  448ee1:	shr    ebp,0x8
  448ee4:	and    ebp,0xff
  448eea:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448ef1:	and    ecx,0xff
  448ef7:	xor    edi,DWORD PTR [esi+ecx*4]
  448efa:	xor    edx,edi
  448efc:	mov    ecx,DWORD PTR [eax+0x58]
  448eff:	add    ecx,edx
  448f01:	mov    edi,ecx
  448f03:	shr    edi,0x18
  448f06:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448f0d:	mov    ebp,ecx
  448f0f:	shr    ebp,0x10
  448f12:	and    ebp,0xff
  448f18:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448f1f:	mov    ebp,ecx
  448f21:	shr    ebp,0x8
  448f24:	and    ebp,0xff
  448f2a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448f31:	and    ecx,0xff
  448f37:	xor    edi,DWORD PTR [esi+ecx*4]
  448f3a:	xor    ebx,edi
  448f3c:	mov    ecx,DWORD PTR [eax+0x54]
  448f3f:	add    ecx,ebx
  448f41:	mov    edi,ecx
  448f43:	shr    edi,0x18
  448f46:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448f4d:	mov    ebp,ecx
  448f4f:	shr    ebp,0x10
  448f52:	and    ebp,0xff
  448f58:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448f5f:	mov    ebp,ecx
  448f61:	shr    ebp,0x8
  448f64:	and    ebp,0xff
  448f6a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448f71:	and    ecx,0xff
  448f77:	xor    edi,DWORD PTR [esi+ecx*4]
  448f7a:	xor    edx,edi
  448f7c:	mov    ecx,DWORD PTR [eax+0x50]
  448f7f:	add    ecx,edx
  448f81:	mov    edi,ecx
  448f83:	shr    edi,0x18
  448f86:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448f8d:	mov    ebp,ecx
  448f8f:	shr    ebp,0x10
  448f92:	and    ebp,0xff
  448f98:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448f9f:	mov    ebp,ecx
  448fa1:	shr    ebp,0x8
  448fa4:	and    ebp,0xff
  448faa:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448fb1:	and    ecx,0xff
  448fb7:	xor    edi,DWORD PTR [esi+ecx*4]
  448fba:	xor    ebx,edi
  448fbc:	mov    ecx,DWORD PTR [eax+0x4c]
  448fbf:	add    ecx,ebx
  448fc1:	mov    edi,ecx
  448fc3:	shr    edi,0x18
  448fc6:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  448fcd:	mov    ebp,ecx
  448fcf:	shr    ebp,0x10
  448fd2:	and    ebp,0xff
  448fd8:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  448fdf:	mov    ebp,ecx
  448fe1:	shr    ebp,0x8
  448fe4:	and    ebp,0xff
  448fea:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  448ff1:	and    ecx,0xff
  448ff7:	xor    edi,DWORD PTR [esi+ecx*4]
  448ffa:	xor    edx,edi
  448ffc:	mov    ecx,DWORD PTR [eax+0x48]
  448fff:	add    ecx,edx
  449001:	mov    edi,ecx
  449003:	shr    edi,0x18
  449006:	mov    edi,DWORD PTR [esi+edi*4+0xc00]
  44900d:	mov    ebp,ecx
  44900f:	shr    ebp,0x10
  449012:	and    ebp,0xff
  449018:	xor    edi,DWORD PTR [esi+ebp*4+0x800]
  44901f:	mov    ebp,ecx
  449021:	shr    ebp,0x8
  449024:	and    ebp,0xff
  44902a:	xor    edi,DWORD PTR [esi+ebp*4+0x400]
  449031:	and    ecx,0xff
  449037:	xor    edi,DWORD PTR [esi+ecx*4]
  44903a:	xor    ebx,edi
  44903c:	dec    DWORD PTR [esp+0x4]
  449040:	jne    0x448e3c
  449046:	mov    eax,DWORD PTR [esp]
  449049:	mov    DWORD PTR [eax],edx
  44904b:	mov    eax,DWORD PTR [esp]
  44904e:	add    eax,0x4
  449051:	mov    DWORD PTR [eax],ebx
  449053:	pop    ecx
  449054:	pop    edx
  449055:	pop    ebp
  449056:	pop    edi
  449057:	pop    esi
  449058:	pop    ebx
  449059:	ret    
  44905a:	add    BYTE PTR [eax],al
  44905c:	(bad)  
  44905d:	(bad)  
  44905e:	(bad)  
  44905f:	call   DWORD PTR [esi]
  449061:	add    BYTE PTR [eax],al
  449063:	add    BYTE PTR [ebx+0x69],al
  449066:	jo     0x4490d0
  449068:	gs jb  0x44908b
  44906b:	outs   dx,BYTE PTR ds:[esi]
  44906c:	outs   dx,DWORD PTR ds:[esi]
  44906d:	je     0x44908f
  44906f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  449076:	imul   edi,DWORD PTR [edx+0x65],0xc8000064
  44907d:	nop
  44907e:	inc    esp
	...
  44908b:	add    BYTE PTR [eax-0x6f],bh
  44908e:	inc    esp
	...
  44909b:	add    BYTE PTR [ecx+edx*4+0x44],ah
  44909f:	add    ah,cl
  4490a1:	add    DWORD PTR [eax],eax
  4490a3:	add    BYTE PTR [eax+0x18004423],al
  4490a9:	test   eax,0x42dc0041
  4490ae:	inc    eax
  4490af:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4490b5:	inc    edx
  4490b6:	inc    eax
  4490b7:	add    al,bl
  4490b9:	inc    edx
  4490ba:	inc    eax
  4490bb:	add    BYTE PTR [eax],bh
  4490bd:	inc    eax
  4490be:	inc    eax
  4490bf:	add    BYTE PTR [eax+eax*2+0x40],dl
  4490c3:	add    BYTE PTR [eax+0x20],bh
  4490c6:	inc    esp
  4490c7:	add    BYTE PTR [eax+0x41],ch
  4490ca:	inc    ecx
  4490cb:	add    BYTE PTR [eax-0x5b],dh
  4490ce:	inc    ecx
  4490cf:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4490d6:	inc    ecx
  4490d7:	add    BYTE PTR [eax],dl
  4490d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4490da:	inc    ecx
  4490db:	add    BYTE PTR [eax-0x5a],bl
  4490de:	inc    ecx
  4490df:	add    BYTE PTR [eax-0x59],dl
  4490e2:	inc    ecx
  4490e3:	add    BYTE PTR [eax],dh
  4490e5:	test   eax,0xa6680041
  4490ea:	inc    ecx
  4490eb:	add    BYTE PTR [eax-0x5a],ah
  4490ee:	inc    ecx
  4490ef:	add    BYTE PTR [eax],bh
  4490f1:	test   eax,0x98100041
  4490f6:	inc    esp
  4490f7:	add    al,ch
  4490f9:	sbb    eax,0x1dec0044
  4490fe:	inc    esp
  4490ff:	add    al,bh
  449101:	sbb    eax,0x1dfc0044
  449106:	inc    esp
  449107:	add    BYTE PTR [eax],cl
  449109:	es inc esp
  44910b:	add    BYTE PTR [eax+0x20004496],ah
  449111:	daa    
  449112:	inc    esp
  449113:	add    ah,al
  449115:	and    BYTE PTR [eax+eax*1+0x38],al
  449119:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44911d:	and    DWORD PTR [eax+eax*1-0x14],eax
  449121:	and    DWORD PTR [eax+eax*1-0x54],eax
  449125:	and    BYTE PTR [eax+eax*1+0x0],al
  449129:	es inc esp
  44912b:	add    BYTE PTR [esi+eiz*1+0x44],bh
  44912f:	add    ah,dl
  449131:	es inc esp
  449133:	add    al,al
  449135:	xchg   esi,eax
  449136:	inc    esp
  449137:	add    BYTE PTR [eax-0x69],ch
  44913a:	inc    esp
  44913b:	add    BYTE PTR [eax-0x6bffbbd9],ah
  449141:	sub    BYTE PTR [eax+eax*1-0x64],al
  449145:	sub    DWORD PTR [eax+eax*1+0x38],eax
  449149:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44914d:	sub    al,BYTE PTR [eax+eax*1-0x38]
  449151:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  449155:	sub    al,0x44
  449157:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44915d:	cs inc esp
  44915f:	add    BYTE PTR [eax+0x2f],bh
  449162:	inc    esp
  449163:	add    BYTE PTR [esi],cl
  449165:	push   esp
  449166:	inc    esp
  449167:	inc    ebx
  449168:	push   eax
  449169:	pop    edi
  44916a:	arpl   WORD PTR [ebp+0x73],si
  44916d:	je     0x4491de
  44916f:	ins    DWORD PTR es:[edi],dx
  449170:	imul   esp,DWORD PTR [ebx+0x65],0x44917890
  449177:	add    BYTE PTR [edi],al
  449179:	push   cs
  44917a:	push   esp
  44917b:	inc    esp
  44917c:	inc    ebx
  44917d:	push   eax
  44917e:	pop    edi
  44917f:	arpl   WORD PTR [ebp+0x73],si
  449182:	je     0x4491f3
  449184:	ins    DWORD PTR es:[edi],dx
  449185:	imul   esp,DWORD PTR [ebx+0x65],0x4490c8
  44918c:	jl     0x4491b2
  44918e:	inc    esp
  44918f:	add    BYTE PTR [edi],al
  449191:	add    BYTE PTR [esi],al
  449193:	inc    esp
  449194:	inc    ebx
  449195:	push   eax
  449196:	imul   esp,DWORD PTR [ebx+0x65],0xe8900000
  44919d:	xchg   ecx,eax
  44919e:	inc    esp
	...
  4491ab:	add    BYTE PTR [edx+edx*4+0x44],dl
	...
  4491ba:	add    BYTE PTR [eax],al
  4491bc:	test   BYTE PTR [edx+0x1cc0044],dl
  4491c2:	add    BYTE PTR [eax],al
  4491c4:	jl     0x449156
  4491c6:	inc    esp
  4491c7:	add    BYTE PTR [eax],bl
  4491c9:	test   eax,0x42dc0041
  4491ce:	inc    eax
  4491cf:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4491d5:	inc    edx
  4491d6:	inc    eax
  4491d7:	add    al,bl
  4491d9:	inc    edx
  4491da:	inc    eax
  4491db:	add    BYTE PTR [eax],bh
  4491dd:	inc    eax
  4491de:	inc    eax
  4491df:	add    BYTE PTR [eax+eax*2+0x40],dl
  4491e3:	add    BYTE PTR [eax+0x20],bh
  4491e6:	inc    esp
  4491e7:	add    BYTE PTR [eax+0x41],ch
  4491ea:	inc    ecx
  4491eb:	add    BYTE PTR [eax-0x5b],dh
  4491ee:	inc    ecx
  4491ef:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4491f6:	inc    ecx
  4491f7:	add    BYTE PTR [eax],dl
  4491f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4491fa:	inc    ecx
  4491fb:	add    BYTE PTR [eax-0x5a],bl
  4491fe:	inc    ecx
  4491ff:	add    BYTE PTR [eax-0x59],dl
  449202:	inc    ecx
  449203:	add    BYTE PTR [eax],dh
  449205:	test   eax,0xa6680041
  44920a:	inc    ecx
  44920b:	add    BYTE PTR [eax-0x5a],ah
  44920e:	inc    ecx
  44920f:	add    BYTE PTR [eax],bh
  449211:	test   eax,0x98100041
  449216:	inc    esp
  449217:	add    BYTE PTR [eax+ebx*4+0x44],ah
  44921b:	add    BYTE PTR [eax+ebx*4+0x44],ch
  44921f:	add    BYTE PTR [eax+ebx*4+0x44],bl
  449223:	add    BYTE PTR [eax+ebx*4+0x26080044],cl
  44922a:	inc    esp
  44922b:	add    BYTE PTR [eax+0x20004496],ah
  449231:	daa    
  449232:	inc    esp
  449233:	add    ah,al
  449235:	and    BYTE PTR [eax+eax*1+0x38],al
  449239:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44923d:	and    DWORD PTR [eax+eax*1-0x14],eax
  449241:	and    DWORD PTR [eax+eax*1+0x14],eax
  449245:	cdq    
  449246:	inc    esp
  449247:	add    BYTE PTR [eax],al
  449249:	es inc esp
  44924b:	add    BYTE PTR [esi+eiz*1+0x44],bh
  44924f:	add    ah,dl
  449251:	es inc esp
  449253:	add    al,al
  449255:	xchg   esi,eax
  449256:	inc    esp
  449257:	add    BYTE PTR [eax-0x69],ch
  44925a:	inc    esp
  44925b:	add    BYTE PTR [eax-0x6bffbbd9],ah
  449261:	sub    BYTE PTR [eax+eax*1-0x64],al
  449265:	sub    DWORD PTR [eax+eax*1+0x38],eax
  449269:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44926d:	sub    al,BYTE PTR [eax+eax*1-0x38]
  449271:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  449275:	sub    al,0x44
  449277:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44927d:	cs inc esp
  44927f:	add    BYTE PTR [eax+0x2f],bh
  449282:	inc    esp
  449283:	add    BYTE PTR [eax],cl
  449285:	push   esp
  449286:	inc    esp
  449287:	inc    ebx
  449288:	push   eax
  449289:	pop    edi
  44928a:	imul   esp,DWORD PTR [ebx+0x65],0x9400408d
  449291:	xchg   edx,eax
  449292:	inc    esp
  449293:	add    BYTE PTR [edi],al
  449295:	or     BYTE PTR [esp+eax*2+0x43],dl
  449299:	push   eax
  44929a:	pop    edi
  44929b:	imul   esp,DWORD PTR [ebx+0x65],0x4491e8
  4492a2:	je     0x449235
  4492a4:	inc    esp
  4492a5:	add    BYTE PTR [edi],al
  4492a7:	add    BYTE PTR [esi],al
  4492a9:	inc    esp
  4492aa:	inc    ebx
  4492ab:	push   eax
  4492ac:	imul   esp,DWORD PTR [ebx+0x65],0x408d0000
  4492b3:	add    BYTE PTR [ebx-0x1d7e30],cl
  4492b9:	add    BYTE PTR [eax],al
  4492bb:	add    cl,al
  4492bd:	loop   0x4492d7
  4492bf:	mov    ecx,eax
  4492c1:	and    ecx,0xff00
  4492c7:	shl    ecx,0x8
  4492ca:	or     edx,ecx
  4492cc:	mov    ecx,eax
  4492ce:	and    ecx,0xff0000
  4492d4:	shr    ecx,0x8
  4492d7:	or     edx,ecx
  4492d9:	and    eax,0xff000000
  4492de:	shr    eax,0x18
  4492e1:	or     edx,eax
  4492e3:	mov    eax,edx
  4492e5:	ret    
  4492e6:	mov    eax,eax
  4492e8:	push   ebx
  4492e9:	xor    ebx,ebx
  4492eb:	test   edx,edx
  4492ed:	je     0x449307
  4492ef:	test   dl,0x1
  4492f2:	je     0x4492f6
  4492f4:	xor    ebx,eax
  4492f6:	add    eax,eax
  4492f8:	shr    edx,1
  4492fa:	cmp    eax,0x100
  4492ff:	jb     0x449303
  449301:	xor    eax,ecx
  449303:	test   edx,edx
  449305:	jne    0x4492ef
  449307:	mov    eax,ebx
  449309:	pop    ebx
  44930a:	ret    
  44930b:	nop
  44930c:	push   ebx
  44930d:	push   esi
  44930e:	mov    esi,edx
  449310:	mov    ebx,eax
  449312:	test   ebx,ebx
  449314:	jne    0x44931b
  449316:	xor    eax,eax
  449318:	pop    esi
  449319:	pop    ebx
  44931a:	ret    
  44931b:	mov    ecx,esi
  44931d:	mov    edx,ebx
  44931f:	mov    eax,ebx
  449321:	call   0x4492e8
  449326:	mov    ecx,esi
  449328:	mov    edx,eax
  44932a:	mov    eax,ebx
  44932c:	call   0x4492e8
  449331:	mov    ecx,esi
  449333:	mov    edx,eax
  449335:	call   0x4492e8
  44933a:	mov    ecx,esi
  44933c:	mov    edx,eax
  44933e:	mov    eax,ebx
  449340:	call   0x4492e8
  449345:	pop    esi
  449346:	pop    ebx
  449347:	ret    
  449348:	xor    ecx,ecx
  44934a:	mov    edx,0x468bb4
  44934f:	test   eax,eax
  449351:	je     0x449362
  449353:	test   al,0x1
  449355:	je     0x449359
  449357:	or     ecx,DWORD PTR [edx]
  449359:	add    edx,0x4
  44935c:	shr    eax,1
  44935e:	test   eax,eax
  449360:	jne    0x449353
  449362:	mov    eax,ecx
  449364:	ret    
  449365:	lea    eax,[eax+0x0]
  449368:	push   ebx
  449369:	push   esi
  44936a:	push   edi
  44936b:	push   ebp
  44936c:	push   ecx
  44936d:	xor    ebp,ebp
  44936f:	mov    ebx,0x4738e4
  449374:	mov    eax,ebp
  449376:	shr    eax,1
  449378:	and    eax,0xff
  44937d:	mov    DWORD PTR [esp],eax
  449380:	mov    esi,ebp
  449382:	and    esi,0x1
  449385:	mov    eax,ebp
  449387:	and    eax,0x200
  44938c:	shr    eax,0x8
  44938f:	or     esi,eax
  449391:	mov    edx,DWORD PTR [esi*4+0x468af4]
  449398:	mov    eax,DWORD PTR [esi*4+0x468b34]
  44939f:	xor    eax,DWORD PTR [esp]
  4493a2:	call   0x44930c
  4493a7:	mov    edi,eax
  4493a9:	shl    edi,0x18
  4493ac:	mov    eax,edi
  4493ae:	call   0x449348
  4493b3:	mov    DWORD PTR [ebx],eax
  4493b5:	mov    edx,DWORD PTR [esi*4+0x468b04]
  4493bc:	mov    eax,DWORD PTR [esi*4+0x468b44]
  4493c3:	xor    eax,DWORD PTR [esp]
  4493c6:	call   0x44930c
  4493cb:	mov    edi,eax
  4493cd:	shl    edi,0x10
  4493d0:	mov    eax,edi
  4493d2:	call   0x449348
  4493d7:	mov    DWORD PTR [ebx+0x1000],eax
  4493dd:	mov    edx,DWORD PTR [esi*4+0x468b14]
  4493e4:	mov    eax,DWORD PTR [esi*4+0x468b54]
  4493eb:	xor    eax,DWORD PTR [esp]
  4493ee:	call   0x44930c
  4493f3:	mov    edi,eax
  4493f5:	shl    edi,0x8
  4493f8:	mov    eax,edi
  4493fa:	call   0x449348
  4493ff:	mov    DWORD PTR [ebx+0x2000],eax
  449405:	mov    edx,DWORD PTR [esi*4+0x468b24]
  44940c:	mov    eax,DWORD PTR [esi*4+0x468b64]
  449413:	xor    eax,DWORD PTR [esp]
  449416:	call   0x44930c
  44941b:	mov    edi,eax
  44941d:	mov    eax,edi
  44941f:	call   0x449348
  449424:	mov    DWORD PTR [ebx+0x3000],eax
  44942a:	inc    ebp
  44942b:	add    ebx,0x4
  44942e:	cmp    ebp,0x400
  449434:	jne    0x449374
  44943a:	pop    edx
  44943b:	pop    ebp
  44943c:	pop    edi
  44943d:	pop    esi
  44943e:	pop    ebx
  44943f:	ret    
  449440:	push   ebx
  449441:	push   esi
  449442:	push   edi
  449443:	mov    esi,edx
  449445:	shr    esi,0xe
  449448:	mov    ebx,edx
  44944a:	shl    ebx,0x12
  44944d:	or     esi,ebx
  44944f:	and    esi,0xffc00
  449455:	mov    ebx,edx
  449457:	shr    ebx,0x10
  44945a:	and    ebx,0x3ff
  449460:	or     esi,ebx
  449462:	mov    ebx,edx
  449464:	and    ebx,0x3ff
  44946a:	add    edx,edx
  44946c:	add    edx,edx
  44946e:	and    edx,0xffc00
  449474:	or     ebx,edx
  449476:	lea    edx,[ecx+ecx*2]
  449479:	mov    edx,DWORD PTR [eax+edx*4+0x54]
  44947d:	mov    edi,ebx
  44947f:	xor    edi,esi
  449481:	and    edx,edi
  449483:	xor    ebx,edx
  449485:	xor    edx,esi
  449487:	lea    esi,[ecx+ecx*2]
  44948a:	xor    edx,DWORD PTR [eax+esi*4+0x4c]
  44948e:	lea    ecx,[ecx+ecx*2]
  449491:	xor    ebx,DWORD PTR [eax+ecx*4+0x50]
  449495:	mov    eax,edx
  449497:	shr    eax,0xa
  44949a:	mov    eax,DWORD PTR [eax*4+0x4738e4]
  4494a1:	and    edx,0x3ff
  4494a7:	or     eax,DWORD PTR [edx*4+0x4748e4]
  4494ae:	mov    edx,ebx
  4494b0:	shr    edx,0xa
  4494b3:	or     eax,DWORD PTR [edx*4+0x4758e4]
  4494ba:	and    ebx,0x3ff
  4494c0:	or     eax,DWORD PTR [ebx*4+0x4768e4]
  4494c7:	pop    edi
  4494c8:	pop    esi
  4494c9:	pop    ebx
  4494ca:	ret    
  4494cb:	nop
  4494cc:	push   ebp
  4494cd:	mov    ebp,esp
  4494cf:	add    esp,0xffffffe4
  4494d2:	push   ebx
  4494d3:	push   esi
  4494d4:	mov    DWORD PTR [ebp-0xc],ecx
  4494d7:	mov    DWORD PTR [ebp-0x8],edx
  4494da:	mov    DWORD PTR [ebp-0x4],eax
  4494dd:	xor    eax,eax
  4494df:	mov    DWORD PTR [ebp-0x10],eax
  4494e2:	mov    eax,DWORD PTR [ebp+0x8]
  4494e5:	mov    edx,DWORD PTR [ebp-0x10]
  4494e8:	mov    eax,DWORD PTR [eax+edx*4]
  4494eb:	mov    DWORD PTR [ebp-0x18],eax
  4494ee:	mov    eax,DWORD PTR [ebp-0xc]
  4494f1:	add    eax,DWORD PTR [ebp-0x10]
  4494f4:	lea    eax,[eax+eax*2]
  4494f7:	mov    edx,DWORD PTR [ebp-0x4]
  4494fa:	lea    eax,[edx+eax*4+0x4c]
  4494fe:	mov    DWORD PTR [ebp-0x1c],eax
  449501:	xor    eax,eax
  449503:	mov    DWORD PTR [ebp-0x14],eax
  449506:	mov    eax,DWORD PTR [ebp-0x1c]
  449509:	mov    edx,DWORD PTR [ebp-0x14]
  44950c:	xor    ecx,ecx
  44950e:	mov    DWORD PTR [eax+edx*4],ecx
  449511:	inc    DWORD PTR [ebp-0x14]
  449514:	cmp    DWORD PTR [ebp-0x14],0x3
  449518:	jne    0x449506
  44951a:	xor    eax,eax
  44951c:	mov    DWORD PTR [ebp-0x14],eax
  44951f:	mov    eax,DWORD PTR [ebp-0x14]
  449522:	mov    ecx,0x3
  449527:	xor    edx,edx
  449529:	div    ecx
  44952b:	mov    eax,DWORD PTR [ebp-0x1c]
  44952e:	lea    ecx,[eax+edx*4]
  449531:	xor    edx,edx
  449533:	mov    eax,DWORD PTR [ebp-0x18]
  449536:	add    eax,edx
  449538:	and    eax,0x3
  44953b:	mov    ebx,DWORD PTR [ebp-0x8]
  44953e:	lea    eax,[ebx+eax*2]
  449541:	movzx  ebx,WORD PTR [eax]
  449544:	and    bx,0x1
  449548:	movzx  ebx,bx
  44954b:	mov    esi,DWORD PTR [ecx]
  44954d:	add    esi,esi
  44954f:	or     esi,ebx
  449551:	mov    DWORD PTR [ecx],esi
  449553:	movzx  esi,WORD PTR [eax]
  449556:	shr    esi,1
  449558:	xor    bx,0x1
  44955c:	shl    ebx,0xf
  44955f:	or     si,bx
  449562:	mov    WORD PTR [eax],si
  449565:	inc    edx
  449566:	cmp    edx,0x4
  449569:	jne    0x449533
  44956b:	inc    DWORD PTR [ebp-0x14]
  44956e:	cmp    DWORD PTR [ebp-0x14],0xf
  449572:	jne    0x44951f
  449574:	inc    DWORD PTR [ebp-0x10]
  449577:	cmp    DWORD PTR [ebp-0x10],0x8
  44957b:	jne    0x4494e2
  449581:	pop    esi
  449582:	pop    ebx
  449583:	mov    esp,ebp
  449585:	pop    ebp
  449586:	ret    0x4
  449589:	lea    eax,[eax+0x0]
  44958c:	push   ebp
  44958d:	mov    ebp,esp
  44958f:	add    esp,0xffffffe0
  449592:	push   ebx
  449593:	push   esi
  449594:	push   edi
  449595:	mov    edi,ecx
  449597:	mov    esi,edx
  449599:	mov    DWORD PTR [ebp-0x4],eax
  44959c:	mov    ebx,DWORD PTR [ebp+0x8]
  44959f:	lea    eax,[ebp-0x20]
  4495a2:	xor    ecx,ecx
  4495a4:	mov    edx,0x10
  4495a9:	call   0x4037c8
  4495ae:	mov    ecx,edi
  4495b0:	shr    ecx,0x3
  4495b3:	lea    edx,[ebp-0x20]
  4495b6:	mov    eax,esi
  4495b8:	call   0x403090
  4495bd:	test   ebx,ebx
  4495bf:	jbe    0x4495ce
  4495c1:	mov    eax,ebx
  4495c3:	shl    eax,0x4
  4495c6:	mov    edx,DWORD PTR [ebp-0x4]
  4495c9:	mov    DWORD PTR [edx+0x48],eax
  4495cc:	jmp    0x4495d8
  4495ce:	mov    eax,DWORD PTR [ebp-0x4]
  4495d1:	mov    DWORD PTR [eax+0x48],0x8
  4495d8:	mov    eax,DWORD PTR [ebp-0x4]
  4495db:	cmp    DWORD PTR [eax+0x48],0x8
  4495df:	jne    0x44961c
  4495e1:	xor    ebx,ebx
  4495e3:	lea    eax,[ebp-0x20]
  4495e6:	movzx  edx,BYTE PTR [eax]
  4495e9:	shl    edx,0x8
  4495ec:	movzx  ecx,BYTE PTR [eax+0x1]
  4495f0:	or     dx,cx
  4495f3:	mov    ecx,0x3
  4495f8:	sub    ecx,ebx
  4495fa:	mov    WORD PTR [ebp+ecx*2-0xc],dx
  4495ff:	inc    ebx
  449600:	add    eax,0x2
  449603:	cmp    ebx,0x5
  449606:	jne    0x4495e6
  449608:	push   0x468b74
  44960d:	lea    edx,[ebp-0xc]
  449610:	xor    ecx,ecx
  449612:	mov    eax,DWORD PTR [ebp-0x4]
  449615:	call   0x4494cc
  44961a:	jmp    0x449694
  44961c:	dec    ebx
  44961d:	test   ebx,ebx
  44961f:	jb     0x449694
  449621:	inc    ebx
  449622:	mov    DWORD PTR [ebp-0x10],ebx
  449625:	xor    ebx,ebx
  449627:	xor    eax,eax
  449629:	mov    edx,ebx
  44962b:	add    edx,edx
  44962d:	add    edx,edx
  44962f:	add    edx,edx
  449631:	mov    ecx,eax
  449633:	add    ecx,ecx
  449635:	add    edx,ecx
  449637:	movzx  ecx,BYTE PTR [ebp+edx*1-0x20]
  44963c:	shl    ecx,0x8
  44963f:	movzx  edx,BYTE PTR [ebp+edx*1-0x1f]
  449644:	or     cx,dx
  449647:	mov    edx,0x3
  44964c:	sub    edx,eax
  44964e:	mov    WORD PTR [ebp+edx*2-0xc],cx
  449653:	inc    eax
  449654:	cmp    eax,0x4
  449657:	jne    0x449629
  449659:	push   0x468b74
  44965e:	mov    esi,ebx
  449660:	add    esi,esi
  449662:	add    esi,esi
  449664:	add    esi,esi
  449666:	mov    ecx,esi
  449668:	lea    edx,[ebp-0xc]
  44966b:	mov    eax,DWORD PTR [ebp-0x4]
  44966e:	call   0x4494cc
  449673:	push   0x468b94
  449678:	mov    eax,DWORD PTR [ebp-0x4]
  44967b:	mov    ecx,DWORD PTR [eax+0x48]
  44967e:	sub    ecx,0x8
  449681:	sub    ecx,esi
  449683:	lea    edx,[ebp-0xc]
  449686:	mov    eax,DWORD PTR [ebp-0x4]
  449689:	call   0x4494cc
  44968e:	inc    ebx
  44968f:	dec    DWORD PTR [ebp-0x10]
  449692:	jne    0x449627
  449694:	pop    edi
  449695:	pop    esi
  449696:	pop    ebx
  449697:	mov    esp,ebp
  449699:	pop    ebp
  44969a:	ret    0x4
  44969d:	lea    eax,[eax+0x0]
  4496a0:	push   ebx
  4496a1:	mov    ebx,eax
  4496a3:	lea    eax,[ebx+0x4c]
  4496a6:	xor    ecx,ecx
  4496a8:	mov    edx,0x180
  4496ad:	call   0x4037c8
  4496b2:	xor    eax,eax
  4496b4:	mov    DWORD PTR [ebx+0x48],eax
  4496b7:	mov    eax,ebx
  4496b9:	call   0x442770
  4496be:	pop    ebx
  4496bf:	ret    
  4496c0:	push   ebx
  4496c1:	push   esi
  4496c2:	push   edi
  4496c3:	push   ebp
  4496c4:	push   ecx
  4496c5:	mov    DWORD PTR [esp],ecx
  4496c8:	mov    ebx,edx
  4496ca:	mov    esi,eax
  4496cc:	cmp    BYTE PTR [esi+0x30],0x0
  4496d0:	jne    0x4496e8
  4496d2:	mov    ecx,0x449750
  4496d7:	mov    dl,0x1
  4496d9:	mov    eax,ds:0x441af8
  4496de:	call   0x40c8b4
  4496e3:	call   0x4048fc
  4496e8:	mov    eax,DWORD PTR [ebx]
  4496ea:	call   0x4492b4
  4496ef:	mov    edi,eax
  4496f1:	add    ebx,0x4
  4496f4:	mov    eax,DWORD PTR [ebx]
  4496f6:	call   0x4492b4
  4496fb:	mov    ebp,eax
  4496fd:	xor    ebx,ebx
  4496ff:	jmp    0x44971f
  449701:	mov    ecx,ebx
  449703:	mov    edx,ebp
  449705:	mov    eax,esi
  449707:	call   0x449440
  44970c:	xor    edi,eax
  44970e:	lea    ecx,[ebx+0x1]
  449711:	mov    edx,edi
  449713:	mov    eax,esi
  449715:	call   0x449440
  44971a:	xor    ebp,eax
  44971c:	add    ebx,0x2
  44971f:	cmp    ebx,DWORD PTR [esi+0x48]
  449722:	jb     0x449701
  449724:	mov    eax,ebp
  449726:	call   0x4492b4
  44972b:	mov    edx,DWORD PTR [esp]
  44972e:	mov    DWORD PTR [edx],eax
  449730:	mov    eax,edi
  449732:	call   0x4492b4
  449737:	mov    edx,DWORD PTR [esp]
  44973a:	add    edx,0x4
  44973d:	mov    DWORD PTR [edx],eax
  44973f:	pop    edx
  449740:	pop    ebp
  449741:	pop    edi
  449742:	pop    esi
  449743:	pop    ebx
  449744:	ret    
  449745:	add    BYTE PTR [eax],al
  449747:	add    bh,bh
  449749:	(bad)  
  44974a:	(bad)  
  44974b:	call   DWORD PTR [esi]
  44974d:	add    BYTE PTR [eax],al
  44974f:	add    BYTE PTR [ebx+0x69],al
  449752:	jo     0x4497bc
  449754:	gs jb  0x449777
  449757:	outs   dx,BYTE PTR ds:[esi]
  449758:	outs   dx,DWORD PTR ds:[esi]
  449759:	je     0x44977b
  44975b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  449762:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  449769:	push   esi
  44976a:	push   edi
  44976b:	push   ebp
  44976c:	push   ecx
  44976d:	mov    DWORD PTR [esp],ecx
  449770:	mov    ebx,edx
  449772:	mov    esi,eax
  449774:	cmp    BYTE PTR [esi+0x30],0x0
  449778:	jne    0x449790
  44977a:	mov    ecx,0x4497f8
  44977f:	mov    dl,0x1
  449781:	mov    eax,ds:0x441af8
  449786:	call   0x40c8b4
  44978b:	call   0x4048fc
  449790:	mov    eax,DWORD PTR [ebx]
  449792:	call   0x4492b4
  449797:	mov    edi,eax
  449799:	add    ebx,0x4
  44979c:	mov    eax,DWORD PTR [ebx]
  44979e:	call   0x4492b4
  4497a3:	mov    ebp,eax
  4497a5:	mov    ebx,DWORD PTR [esi+0x48]
  4497a8:	dec    ebx
  4497a9:	test   ebx,ebx
  4497ab:	jle    0x4497cf
  4497ad:	mov    ecx,ebx
  4497af:	mov    edx,ebp
  4497b1:	mov    eax,esi
  4497b3:	call   0x449440
  4497b8:	xor    edi,eax
  4497ba:	mov    ecx,ebx
  4497bc:	dec    ecx
  4497bd:	mov    edx,edi
  4497bf:	mov    eax,esi
  4497c1:	call   0x449440
  4497c6:	xor    ebp,eax
  4497c8:	sub    ebx,0x2
  4497cb:	test   ebx,ebx
  4497cd:	jg     0x4497ad
  4497cf:	mov    eax,ebp
  4497d1:	call   0x4492b4
  4497d6:	mov    edx,DWORD PTR [esp]
  4497d9:	mov    DWORD PTR [edx],eax
  4497db:	mov    eax,edi
  4497dd:	call   0x4492b4
  4497e2:	mov    edx,DWORD PTR [esp]
  4497e5:	add    edx,0x4
  4497e8:	mov    DWORD PTR [edx],eax
  4497ea:	pop    edx
  4497eb:	pop    ebp
  4497ec:	pop    edi
  4497ed:	pop    esi
  4497ee:	pop    ebx
  4497ef:	ret    
  4497f0:	(bad)  
  4497f1:	(bad)  
  4497f2:	(bad)  
  4497f3:	call   DWORD PTR [esi]
  4497f5:	add    BYTE PTR [eax],al
  4497f7:	add    BYTE PTR [ebx+0x69],al
  4497fa:	jo     0x449864
  4497fc:	gs jb  0x44981f
  4497ff:	outs   dx,BYTE PTR ds:[esi]
  449800:	outs   dx,DWORD PTR ds:[esi]
  449801:	je     0x449823
  449803:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44980a:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  449811:	push   esi
  449812:	test   dl,dl
  449814:	je     0x44981e
  449816:	add    esp,0xfffffff0
  449819:	call   0x4043ac
  44981e:	mov    ebx,edx
  449820:	mov    esi,eax
  449822:	xor    edx,edx
  449824:	mov    eax,esi
  449826:	call   0x44231c
  44982b:	cmp    BYTE PTR ds:0x4778e4,0x0
  449832:	jne    0x449840
  449834:	call   0x449368
  449839:	mov    BYTE PTR ds:0x4778e4,0x1
  449840:	mov    eax,esi
  449842:	test   bl,bl
  449844:	je     0x449855
  449846:	call   0x404404
  44984b:	pop    DWORD PTR fs:0x0
  449852:	add    esp,0xc
  449855:	mov    eax,esi
  449857:	pop    esi
  449858:	pop    ebx
  449859:	ret    
  44985a:	mov    eax,eax
  44985c:	mov    eax,0x40
  449861:	ret    
  449862:	mov    eax,eax
  449864:	mov    eax,0x14
  449869:	ret    
  44986a:	mov    eax,eax
  44986c:	push   ebx
  44986d:	mov    ebx,edx
  44986f:	mov    eax,ebx
  449871:	mov    edx,0x449888
  449876:	call   0x404fdc
  44987b:	pop    ebx
  44987c:	ret    
  44987d:	add    BYTE PTR [eax],al
  44987f:	add    bh,bh
  449881:	(bad)  
  449882:	(bad)  
  449883:	inc    DWORD PTR [ebx]
  449885:	add    BYTE PTR [eax],al
  449887:	add    BYTE PTR [ecx+0x63],cl
  44988a:	add    BYTE PTR gs:[ebx+0x56],dl
  44988e:	push   edi
  44988f:	add    esp,0xfffffff8
  449892:	xor    ecx,ecx
  449894:	mov    dl,0x1
  449896:	mov    eax,ds:0x44919c
  44989b:	call   0x449810
  4498a0:	mov    esi,eax
  4498a2:	push   0x0
  4498a4:	mov    edx,0x468c34
  4498a9:	mov    ecx,0x40
  4498ae:	mov    eax,esi
  4498b0:	mov    ebx,DWORD PTR [eax]
  4498b2:	call   DWORD PTR [ebx+0x40]
  4498b5:	mov    ecx,esp
  4498b7:	mov    edx,0x468c3c
  4498bc:	mov    eax,esi
  4498be:	mov    ebx,DWORD PTR [eax]
  4498c0:	call   DWORD PTR [ebx+0x6c]
  4498c3:	mov    edx,0x468c44
  4498c8:	mov    eax,esp
  4498ca:	mov    ecx,0x8
  4498cf:	call   0x408538
  4498d4:	mov    ebx,eax
  4498d6:	mov    eax,esi
  4498d8:	mov    edx,DWORD PTR [eax]
  4498da:	call   DWORD PTR [edx+0x48]
  4498dd:	mov    ecx,esp
  4498df:	mov    edx,esp
  4498e1:	mov    eax,esi
  4498e3:	mov    edi,DWORD PTR [eax]
  4498e5:	call   DWORD PTR [edi+0x70]
  4498e8:	mov    edx,0x468c3c
  4498ed:	mov    eax,esp
  4498ef:	mov    ecx,0x8
  4498f4:	call   0x408538
  4498f9:	and    bl,al
  4498fb:	mov    eax,esi
  4498fd:	mov    edx,DWORD PTR [eax]
  4498ff:	call   DWORD PTR [edx+0x44]
  449902:	mov    eax,esi
  449904:	call   0x4040a0
  449909:	mov    eax,ebx
  44990b:	pop    ecx
  44990c:	pop    edx
  44990d:	pop    edi
  44990e:	pop    esi
  44990f:	pop    ebx
  449910:	ret    
  449911:	lea    eax,[eax+0x0]
  449914:	push   0x1
  449916:	call   0x44958c
  44991b:	ret    
  44991c:	push   ebp
  44991d:	mov    ebp,esp
  44991f:	xor    eax,eax
  449921:	push   ebp
  449922:	push   0x449941
  449927:	push   DWORD PTR fs:[eax]
  44992a:	mov    DWORD PTR fs:[eax],esp
  44992d:	inc    DWORD PTR ds:0x4738e0
  449933:	xor    eax,eax
  449935:	pop    edx
  449936:	pop    ecx
  449937:	pop    ecx
  449938:	mov    DWORD PTR fs:[eax],edx
  44993b:	push   0x449948
  449940:	ret    
  449941:	jmp    0x40481c
  449946:	jmp    0x449940
  449948:	pop    ebp
  449949:	ret    
  44994a:	mov    eax,eax
  44994c:	cwde   
  44994d:	cdq    
  44994e:	inc    esp
	...
  44995b:	add    BYTE PTR [edx+ebx*4+0x44],al
	...
  44996b:	add    BYTE PTR [edx+ebx*4],dh
  44996e:	inc    esp
  44996f:	add    BYTE PTR [eax],bl
  449971:	add    DWORD PTR [eax],eax
  449973:	add    BYTE PTR [eax+0x18004423],al
  449979:	test   eax,0x42dc0041
  44997e:	inc    eax
  44997f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  449985:	inc    edx
  449986:	inc    eax
  449987:	add    al,bl
  449989:	inc    edx
  44998a:	inc    eax
  44998b:	add    BYTE PTR [eax],bh
  44998d:	inc    eax
  44998e:	inc    eax
  44998f:	add    BYTE PTR [eax+eax*2+0x40],dl
  449993:	add    BYTE PTR [eax+0x20],bh
  449996:	inc    esp
  449997:	add    BYTE PTR [eax+0x41],ch
  44999a:	inc    ecx
  44999b:	add    BYTE PTR [eax-0x5b],dh
  44999e:	inc    ecx
  44999f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4499a6:	inc    ecx
  4499a7:	add    BYTE PTR [eax],dl
  4499a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4499aa:	inc    ecx
  4499ab:	add    BYTE PTR [eax-0x5a],bl
  4499ae:	inc    ecx
  4499af:	add    BYTE PTR [eax-0x59],dl
  4499b2:	inc    ecx
  4499b3:	add    BYTE PTR [eax],dh
  4499b5:	test   eax,0xa6680041
  4499ba:	inc    ecx
  4499bb:	add    BYTE PTR [eax-0x5a],ah
  4499be:	inc    ecx
  4499bf:	add    BYTE PTR [eax],bh
  4499c1:	test   eax,0x231c0041
  4499c6:	inc    esp
  4499c7:	add    BYTE PTR [edx+ebx*4+0x44],ch
  4499cb:	add    BYTE PTR [edx+ebx*4+0x44],dh
  4499cf:	add    BYTE PTR [edx+ebx*4+0x44],ah
  4499d3:	add    BYTE PTR [eax+0x800449a],bl
  4499d9:	es inc esp
  4499db:	add    BYTE PTR [edi+ebx*4],ch
  4499de:	inc    esp
  4499df:	add    BYTE PTR [eax],ah
  4499e1:	daa    
  4499e2:	inc    esp
  4499e3:	add    ah,al
  4499e5:	and    BYTE PTR [eax+eax*1+0x38],al
  4499e9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  4499ed:	and    DWORD PTR [eax+eax*1-0x14],eax
  4499f1:	and    DWORD PTR [eax+eax*1+0x44],eax
  4499f5:	pushf  
  4499f6:	inc    esp
  4499f7:	add    BYTE PTR [eax],al
  4499f9:	es inc esp
  4499fb:	add    BYTE PTR [esi+eiz*1+0x44],bh
  4499ff:	add    ah,dl
  449a01:	es inc esp
  449a03:	add    BYTE PTR [edi+ebx*4-0x5e8bffbc],bl
  449a0a:	inc    esp
  449a0b:	add    BYTE PTR [eax-0x6bffbbd9],ah
  449a11:	sub    BYTE PTR [eax+eax*1-0x64],al
  449a15:	sub    DWORD PTR [eax+eax*1+0x38],eax
  449a19:	sub    al,BYTE PTR [eax+eax*1-0x24]
  449a1d:	sub    al,BYTE PTR [eax+eax*1-0x38]
  449a21:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  449a25:	sub    al,0x44
  449a27:	add    BYTE PTR [eax-0x77ffbbd3],ch
  449a2d:	cs inc esp
  449a2f:	add    BYTE PTR [eax+0x2f],bh
  449a32:	inc    esp
  449a33:	add    BYTE PTR [ecx],cl
  449a35:	push   esp
  449a36:	inc    esp
  449a37:	inc    ebx
  449a38:	push   eax
  449a39:	pop    edi
  449a3a:	imul   esp,DWORD PTR [ebp+eiz*2+0x61],0x9a44c08b
  449a42:	inc    esp
  449a43:	add    BYTE PTR [edi],al
  449a45:	or     DWORD PTR [esp+eax*2+0x43],edx
  449a49:	push   eax
  449a4a:	pop    edi
  449a4b:	imul   esp,DWORD PTR [ebp+eiz*2+0x61],0x449998
  449a53:	jl     0x449a79
  449a55:	inc    esp
  449a56:	add    BYTE PTR [edi],al
  449a58:	add    BYTE PTR [edi],al
  449a5a:	inc    esp
  449a5b:	inc    ebx
  449a5c:	push   eax
  449a5d:	imul   esp,DWORD PTR [ebp+eiz*2+0x61],0xb8900000
  449a65:	add    BYTE PTR [eax],0x0
  449a68:	add    bl,al
  449a6a:	mov    eax,eax
  449a6c:	mov    eax,0xc
  449a71:	ret    
  449a72:	mov    eax,eax
  449a74:	push   ebx
  449a75:	mov    ebx,edx
  449a77:	mov    eax,ebx
  449a79:	mov    edx,0x449a90
  449a7e:	call   0x404fdc
  449a83:	pop    ebx
  449a84:	ret    
  449a85:	add    BYTE PTR [eax],al
  449a87:	add    bh,bh
  449a89:	(bad)  
  449a8a:	(bad)  
  449a8b:	inc    DWORD PTR [eax+eax*1]
  449a8e:	add    BYTE PTR [eax],al
  449a90:	dec    ecx
  449a91:	inc    esp
  449a92:	inc    ebp
  449a93:	inc    ecx
  449a94:	add    BYTE PTR [eax],al
  449a96:	add    BYTE PTR [eax],al
  449a98:	push   ebx
  449a99:	push   esi
  449a9a:	push   edi
  449a9b:	add    esp,0xfffffff8
  449a9e:	xor    ecx,ecx
  449aa0:	mov    dl,0x1
  449aa2:	mov    eax,ds:0x44994c
  449aa7:	call   0x44231c
  449aac:	mov    esi,eax
  449aae:	push   0x0
  449ab0:	mov    edx,0x468c4c
  449ab5:	mov    ecx,0x80
  449aba:	mov    eax,esi
  449abc:	mov    ebx,DWORD PTR [eax]
  449abe:	call   DWORD PTR [ebx+0x40]
  449ac1:	mov    ecx,esp
  449ac3:	mov    edx,0x468c5c
  449ac8:	mov    eax,esi
  449aca:	mov    ebx,DWORD PTR [eax]
  449acc:	call   DWORD PTR [ebx+0x6c]
  449acf:	mov    edx,0x468c64
  449ad4:	mov    eax,esp
  449ad6:	mov    ecx,0x8
  449adb:	call   0x408538
  449ae0:	mov    ebx,eax
  449ae2:	mov    ecx,esp
  449ae4:	mov    edx,esp
  449ae6:	mov    eax,esi
  449ae8:	mov    edi,DWORD PTR [eax]
  449aea:	call   DWORD PTR [edi+0x70]
  449aed:	test   bl,bl
  449aef:	je     0x449b06
  449af1:	mov    edx,0x468c5c
  449af6:	mov    eax,esp
  449af8:	mov    ecx,0x8
  449afd:	call   0x408538
  449b02:	test   al,al
  449b04:	jne    0x449b0a
  449b06:	xor    eax,eax
  449b08:	jmp    0x449b0c
  449b0a:	mov    al,0x1
  449b0c:	mov    ebx,eax
  449b0e:	mov    eax,esi
  449b10:	mov    edx,DWORD PTR [eax]
  449b12:	call   DWORD PTR [edx+0x44]
  449b15:	push   0x0
  449b17:	mov    edx,0x468c6c
  449b1c:	mov    ecx,0x80
  449b21:	mov    eax,esi
  449b23:	mov    edi,DWORD PTR [eax]
  449b25:	call   DWORD PTR [edi+0x40]
  449b28:	mov    ecx,esp
  449b2a:	mov    edx,0x468c7c
  449b2f:	mov    eax,esi
  449b31:	mov    edi,DWORD PTR [eax]
  449b33:	call   DWORD PTR [edi+0x6c]
  449b36:	test   bl,bl
  449b38:	je     0x449b4f
  449b3a:	mov    edx,0x468c84
  449b3f:	mov    eax,esp
  449b41:	mov    ecx,0x8
  449b46:	call   0x408538
  449b4b:	test   al,al
  449b4d:	jne    0x449b53
  449b4f:	xor    eax,eax
  449b51:	jmp    0x449b55
  449b53:	mov    al,0x1
  449b55:	mov    ebx,eax
  449b57:	mov    ecx,esp
  449b59:	mov    edx,esp
  449b5b:	mov    eax,esi
  449b5d:	mov    edi,DWORD PTR [eax]
  449b5f:	call   DWORD PTR [edi+0x70]
  449b62:	test   bl,bl
  449b64:	je     0x449b7b
  449b66:	mov    edx,0x468c7c
  449b6b:	mov    eax,esp
  449b6d:	mov    ecx,0x8
  449b72:	call   0x408538
  449b77:	test   al,al
  449b79:	jne    0x449b7f
  449b7b:	xor    eax,eax
  449b7d:	jmp    0x449b81
  449b7f:	mov    al,0x1
  449b81:	mov    ebx,eax
  449b83:	mov    eax,esi
  449b85:	mov    edx,DWORD PTR [eax]
  449b87:	call   DWORD PTR [edx+0x44]
  449b8a:	mov    eax,esi
  449b8c:	call   0x4040a0
  449b91:	mov    eax,ebx
  449b93:	pop    ecx
  449b94:	pop    edx
  449b95:	pop    edi
  449b96:	pop    esi
  449b97:	pop    ebx
  449b98:	ret    
  449b99:	lea    eax,[eax+0x0]
  449b9c:	push   ebx
  449b9d:	push   esi
  449b9e:	push   edi
  449b9f:	push   ebp
  449ba0:	push   ecx
  449ba1:	mov    ecx,eax
  449ba3:	cmp    cx,0x1
  449ba7:	ja     0x449bb0
  449ba9:	mov    eax,ecx
  449bab:	jmp    0x449c3e
  449bb0:	movzx  ebx,cx
  449bb3:	mov    eax,0x10001
  449bb8:	xor    edx,edx
  449bba:	div    ebx
  449bbc:	mov    WORD PTR [esp],ax
  449bc0:	mov    eax,0x10001
  449bc5:	xor    edx,edx
  449bc7:	div    ebx
  449bc9:	mov    ebx,edx
  449bcb:	cmp    bx,0x1
  449bcf:	jne    0x449bdf
  449bd1:	mov    ax,0x1
  449bd5:	sub    ax,WORD PTR [esp]
  449bd9:	and    ax,0xffff
  449bdd:	jmp    0x449c3e
  449bdf:	mov    bp,0x1
  449be3:	movzx  eax,cx
  449be6:	movzx  edi,bx
  449be9:	xor    edx,edx
  449beb:	div    edi
  449bed:	mov    esi,eax
  449bef:	movzx  eax,cx
  449bf2:	xor    edx,edx
  449bf4:	div    edi
  449bf6:	mov    ecx,edx
  449bf8:	imul   si,WORD PTR [esp]
  449bfd:	add    bp,si
  449c00:	cmp    cx,0x1
  449c04:	jne    0x449c0a
  449c06:	mov    eax,ebp
  449c08:	jmp    0x449c3e
  449c0a:	mov    eax,edi
  449c0c:	movzx  edx,cx
  449c0f:	mov    esi,edx
  449c11:	xor    edx,edx
  449c13:	div    esi
  449c15:	mov    esi,eax
  449c17:	mov    eax,edi
  449c19:	movzx  edx,cx
  449c1c:	mov    ebx,edx
  449c1e:	xor    edx,edx
  449c20:	div    ebx
  449c22:	mov    ebx,edx
  449c24:	imul   si,bp
  449c28:	add    WORD PTR [esp],si
  449c2c:	cmp    bx,0x1
  449c30:	jne    0x449be3
  449c32:	mov    ax,0x1
  449c36:	sub    ax,WORD PTR [esp]
  449c3a:	and    ax,0xffff
  449c3e:	pop    edx
  449c3f:	pop    ebp
  449c40:	pop    edi
  449c41:	pop    esi
  449c42:	pop    ebx
  449c43:	ret    
  449c44:	push   ebx
  449c45:	push   esi
  449c46:	push   edi
  449c47:	mov    esi,ecx
  449c49:	mov    edi,edx
  449c4b:	mov    ebx,eax
  449c4d:	mov    ecx,0x8
  449c52:	mov    eax,esi
  449c54:	xor    edx,edx
  449c56:	div    ecx
  449c58:	mov    esi,eax
  449c5a:	lea    eax,[ebx+0x48]
  449c5d:	xor    ecx,ecx
  449c5f:	mov    edx,0x68
  449c64:	call   0x4037c8
  449c69:	lea    edx,[ebx+0x48]
  449c6c:	mov    eax,edi
  449c6e:	mov    ecx,esi
  449c70:	call   0x403090
  449c75:	xor    esi,esi
  449c77:	movzx  eax,WORD PTR [ebx+esi*2+0x48]
  449c7c:	mov    edx,eax
  449c7e:	shl    edx,0x8
  449c81:	movzx  eax,ax
  449c84:	shr    eax,0x8
  449c87:	or     dx,ax
  449c8a:	mov    WORD PTR [ebx+esi*2+0x48],dx
  449c8f:	inc    esi
  449c90:	cmp    esi,0x8
  449c93:	jne    0x449c77
  449c95:	mov    esi,0x1
  449c9a:	mov    eax,esi
  449c9c:	dec    eax
  449c9d:	add    eax,eax
  449c9f:	add    eax,eax
  449ca1:	add    eax,eax
  449ca3:	movzx  ecx,WORD PTR [ebx+eax*2+0x4a]
  449ca8:	shl    ecx,0x9
  449cab:	movzx  edi,WORD PTR [ebx+eax*2+0x4c]
  449cb0:	shr    edi,0x7
  449cb3:	or     cx,di
  449cb6:	mov    edx,esi
  449cb8:	add    edx,edx
  449cba:	add    edx,edx
  449cbc:	add    edx,edx
  449cbe:	mov    WORD PTR [ebx+edx*2+0x48],cx
  449cc3:	movzx  ecx,WORD PTR [ebx+eax*2+0x4c]
  449cc8:	shl    ecx,0x9
  449ccb:	movzx  edi,WORD PTR [ebx+eax*2+0x4e]
  449cd0:	shr    edi,0x7
  449cd3:	or     cx,di
  449cd6:	mov    WORD PTR [ebx+edx*2+0x4a],cx
  449cdb:	movzx  ecx,WORD PTR [ebx+eax*2+0x4e]
  449ce0:	shl    ecx,0x9
  449ce3:	movzx  edi,WORD PTR [ebx+eax*2+0x50]
  449ce8:	shr    edi,0x7
  449ceb:	or     cx,di
  449cee:	mov    WORD PTR [ebx+edx*2+0x4c],cx
  449cf3:	movzx  ecx,WORD PTR [ebx+eax*2+0x50]
  449cf8:	shl    ecx,0x9
  449cfb:	movzx  edi,WORD PTR [ebx+eax*2+0x52]
  449d00:	shr    edi,0x7
  449d03:	or     cx,di
  449d06:	mov    WORD PTR [ebx+edx*2+0x4e],cx
  449d0b:	movzx  ecx,WORD PTR [ebx+eax*2+0x52]
  449d10:	shl    ecx,0x9
  449d13:	movzx  edi,WORD PTR [ebx+eax*2+0x54]
  449d18:	shr    edi,0x7
  449d1b:	or     cx,di
  449d1e:	mov    WORD PTR [ebx+edx*2+0x50],cx
  449d23:	movzx  ecx,WORD PTR [ebx+eax*2+0x54]
  449d28:	shl    ecx,0x9
  449d2b:	movzx  edi,WORD PTR [ebx+eax*2+0x56]
  449d30:	shr    edi,0x7
  449d33:	or     cx,di
  449d36:	mov    WORD PTR [ebx+edx*2+0x52],cx
  449d3b:	movzx  ecx,WORD PTR [ebx+eax*2+0x56]
  449d40:	shl    ecx,0x9
  449d43:	movzx  edi,WORD PTR [ebx+eax*2+0x48]
  449d48:	shr    edi,0x7
  449d4b:	or     cx,di
  449d4e:	mov    WORD PTR [ebx+edx*2+0x54],cx
  449d53:	movzx  ecx,WORD PTR [ebx+eax*2+0x48]
  449d58:	shl    ecx,0x9
  449d5b:	movzx  eax,WORD PTR [ebx+eax*2+0x4a]
  449d60:	shr    eax,0x7
  449d63:	or     cx,ax
  449d66:	mov    WORD PTR [ebx+edx*2+0x56],cx
  449d6b:	inc    esi
  449d6c:	cmp    esi,0x6
  449d6f:	jne    0x449c9a
  449d75:	movzx  eax,WORD PTR [ebx+0x9a]
  449d7c:	shl    eax,0x9
  449d7f:	movzx  edx,WORD PTR [ebx+0x9c]
  449d86:	shr    edx,0x7
  449d89:	or     ax,dx
  449d8c:	mov    WORD PTR [ebx+0xa8],ax
  449d93:	movzx  eax,WORD PTR [ebx+0x9c]
  449d9a:	shl    eax,0x9
  449d9d:	movzx  edx,WORD PTR [ebx+0x9e]
  449da4:	shr    edx,0x7
  449da7:	or     ax,dx
  449daa:	mov    WORD PTR [ebx+0xaa],ax
  449db1:	movzx  eax,WORD PTR [ebx+0x9e]
  449db8:	shl    eax,0x9
  449dbb:	movzx  edx,WORD PTR [ebx+0xa0]
  449dc2:	shr    edx,0x7
  449dc5:	or     ax,dx
  449dc8:	mov    WORD PTR [ebx+0xac],ax
  449dcf:	movzx  eax,WORD PTR [ebx+0xa0]
  449dd6:	shl    eax,0x9
  449dd9:	movzx  edx,WORD PTR [ebx+0xa2]
  449de0:	shr    edx,0x7
  449de3:	or     ax,dx
  449de6:	mov    WORD PTR [ebx+0xae],ax
  449ded:	movzx  eax,WORD PTR [ebx+0x4e]
  449df1:	call   0x449b9c
  449df6:	mov    WORD PTR [ebx+0x116],ax
  449dfd:	movzx  eax,WORD PTR [ebx+0x4c]
  449e01:	neg    ax
  449e04:	mov    WORD PTR [ebx+0x114],ax
  449e0b:	movzx  eax,WORD PTR [ebx+0x4a]
  449e0f:	neg    ax
  449e12:	mov    WORD PTR [ebx+0x112],ax
  449e19:	movzx  eax,WORD PTR [ebx+0x48]
  449e1d:	call   0x449b9c
  449e22:	mov    WORD PTR [ebx+0x110],ax
  449e29:	xor    esi,esi
  449e2b:	mov    edi,esi
  449e2d:	add    edi,edi
  449e2f:	lea    edi,[edi+edi*2]
  449e32:	mov    eax,0x2f
  449e37:	sub    eax,edi
  449e39:	movzx  edx,WORD PTR [ebx+edi*2+0x52]
  449e3e:	mov    WORD PTR [ebx+eax*2+0xb0],dx
  449e46:	mov    eax,0x2e
  449e4b:	sub    eax,edi
  449e4d:	movzx  edx,WORD PTR [ebx+edi*2+0x50]
  449e52:	mov    WORD PTR [ebx+eax*2+0xb0],dx
  449e5a:	movzx  eax,WORD PTR [ebx+edi*2+0x5a]
  449e5f:	call   0x449b9c
  449e64:	mov    edx,0x2d
  449e69:	sub    edx,edi
  449e6b:	mov    WORD PTR [ebx+edx*2+0xb0],ax
  449e73:	mov    eax,0x2c
  449e78:	sub    eax,edi
  449e7a:	movzx  edx,WORD PTR [ebx+edi*2+0x56]
  449e7f:	neg    dx
  449e82:	mov    WORD PTR [ebx+eax*2+0xb0],dx
  449e8a:	mov    eax,0x2b
  449e8f:	sub    eax,edi
  449e91:	movzx  edx,WORD PTR [ebx+edi*2+0x58]
  449e96:	neg    dx
  449e99:	mov    WORD PTR [ebx+eax*2+0xb0],dx
  449ea1:	movzx  eax,WORD PTR [ebx+edi*2+0x54]
  449ea6:	call   0x449b9c
  449eab:	mov    edx,0x2a
  449eb0:	sub    edx,edi
  449eb2:	mov    WORD PTR [ebx+edx*2+0xb0],ax
  449eba:	inc    esi
  449ebb:	cmp    esi,0x7
  449ebe:	jne    0x449e2b
  449ec4:	movzx  eax,WORD PTR [ebx+0xa6]
  449ecb:	mov    WORD PTR [ebx+0xba],ax
  449ed2:	movzx  eax,WORD PTR [ebx+0xa4]
  449ed9:	mov    WORD PTR [ebx+0xb8],ax
  449ee0:	movzx  eax,WORD PTR [ebx+0xae]
  449ee7:	call   0x449b9c
  449eec:	mov    WORD PTR [ebx+0xb6],ax
  449ef3:	movzx  eax,WORD PTR [ebx+0xac]
  449efa:	neg    ax
  449efd:	mov    WORD PTR [ebx+0xb4],ax
  449f04:	movzx  eax,WORD PTR [ebx+0xaa]
  449f0b:	neg    ax
  449f0e:	mov    WORD PTR [ebx+0xb2],ax
  449f15:	movzx  eax,WORD PTR [ebx+0xa8]
  449f1c:	call   0x449b9c
  449f21:	mov    WORD PTR [ebx+0xb0],ax
  449f28:	pop    edi
  449f29:	pop    esi
  449f2a:	pop    ebx
  449f2b:	ret    
  449f2c:	push   ebx
  449f2d:	mov    ebx,eax
  449f2f:	lea    eax,[ebx+0x48]
  449f32:	xor    ecx,ecx
  449f34:	mov    edx,0x68
  449f39:	call   0x4037c8
  449f3e:	lea    eax,[ebx+0xb0]
  449f44:	xor    ecx,ecx
  449f46:	mov    edx,0x68
  449f4b:	call   0x4037c8
  449f50:	mov    eax,ebx
  449f52:	call   0x442770
  449f57:	pop    ebx
  449f58:	ret    
  449f59:	lea    eax,[eax+0x0]
  449f5c:	push   ebx
  449f5d:	movzx  ecx,WORD PTR [eax]
  449f60:	movzx  ebx,dx
  449f63:	imul   ecx,ebx
  449f66:	test   ecx,ecx
  449f68:	jne    0x449f79
  449f6a:	mov    cx,0x1
  449f6e:	sub    cx,WORD PTR [eax]
  449f71:	sub    cx,dx
  449f74:	mov    WORD PTR [eax],cx
  449f77:	pop    ebx
  449f78:	ret    
  449f79:	mov    edx,ecx
  449f7b:	shr    edx,0x10
  449f7e:	mov    WORD PTR [eax],dx
  449f81:	mov    edx,ecx
  449f83:	and    dx,0xffff
  449f88:	mov    ecx,edx
  449f8a:	sub    cx,WORD PTR [eax]
  449f8d:	mov    WORD PTR [eax],cx
  449f90:	cmp    dx,WORD PTR [eax]
  449f93:	jae    0x449f98
  449f95:	inc    WORD PTR [eax]
  449f98:	pop    ebx
  449f99:	ret    
  449f9a:	mov    eax,eax
  449f9c:	push   ebx
  449f9d:	push   esi
  449f9e:	push   edi
  449f9f:	push   ebp
  449fa0:	add    esp,0xfffffff0
  449fa3:	mov    DWORD PTR [esp],ecx
  449fa6:	mov    esi,eax
  449fa8:	lea    edi,[esp+0x4]
  449fac:	cmp    BYTE PTR [esi+0x30],0x0
  449fb0:	jne    0x449fc8
  449fb2:	mov    ecx,0x44a15c
  449fb7:	mov    dl,0x1
  449fb9:	mov    eax,ds:0x441af8
  449fbe:	call   0x40c8b4
  449fc3:	call   0x4048fc
  449fc8:	mov    eax,DWORD PTR [edx]
  449fca:	mov    DWORD PTR [edi],eax
  449fcc:	add    edx,0x4
  449fcf:	mov    eax,DWORD PTR [edx]
  449fd1:	lea    edx,[edi+0x4]
  449fd4:	mov    DWORD PTR [edx],eax
  449fd6:	mov    ebx,0x4
  449fdb:	mov    eax,edi
  449fdd:	movzx  edx,WORD PTR [eax]
  449fe0:	mov    ecx,edx
  449fe2:	shl    ecx,0x8
  449fe5:	movzx  edx,dx
  449fe8:	shr    edx,0x8
  449feb:	or     cx,dx
  449fee:	mov    WORD PTR [eax],cx
  449ff1:	add    eax,0x2
  449ff4:	dec    ebx
  449ff5:	jne    0x449fdd
  449ff7:	xor    ebx,ebx
  449ff9:	mov    ebp,ebx
  449ffb:	add    ebp,ebp
  449ffd:	lea    ebp,[ebp+ebp*2+0x0]
  44a001:	movzx  edx,WORD PTR [esi+ebp*2+0x48]
  44a006:	mov    eax,edi
  44a008:	call   0x449f5c
  44a00d:	movzx  eax,WORD PTR [esi+ebp*2+0x4a]
  44a012:	add    WORD PTR [edi+0x2],ax
  44a016:	movzx  eax,WORD PTR [esi+ebp*2+0x4c]
  44a01b:	add    WORD PTR [edi+0x4],ax
  44a01f:	movzx  edx,WORD PTR [esi+ebp*2+0x4e]
  44a024:	lea    eax,[edi+0x6]
  44a027:	call   0x449f5c
  44a02c:	movzx  eax,WORD PTR [edi+0x4]
  44a030:	mov    WORD PTR [esp+0xc],ax
  44a035:	movzx  eax,WORD PTR [edi]
  44a038:	xor    WORD PTR [edi+0x4],ax
  44a03c:	movzx  edx,WORD PTR [esi+ebp*2+0x50]
  44a041:	lea    eax,[edi+0x4]
  44a044:	call   0x449f5c
  44a049:	movzx  eax,WORD PTR [edi+0x2]
  44a04d:	mov    WORD PTR [esp+0xe],ax
  44a052:	movzx  eax,WORD PTR [edi+0x6]
  44a056:	xor    WORD PTR [edi+0x2],ax
  44a05a:	movzx  eax,WORD PTR [edi+0x4]
  44a05e:	add    WORD PTR [edi+0x2],ax
  44a062:	movzx  edx,WORD PTR [esi+ebp*2+0x52]
  44a067:	lea    eax,[edi+0x2]
  44a06a:	call   0x449f5c
  44a06f:	movzx  eax,WORD PTR [edi+0x2]
  44a073:	add    WORD PTR [edi+0x4],ax
  44a077:	movzx  eax,WORD PTR [edi+0x2]
  44a07b:	xor    WORD PTR [edi],ax
  44a07e:	movzx  eax,WORD PTR [edi+0x4]
  44a082:	xor    WORD PTR [edi+0x6],ax
  44a086:	movzx  eax,WORD PTR [esp+0xc]
  44a08b:	xor    WORD PTR [edi+0x2],ax
  44a08f:	movzx  eax,WORD PTR [esp+0xe]
  44a094:	xor    WORD PTR [edi+0x4],ax
  44a098:	inc    ebx
  44a099:	cmp    ebx,0x8
  44a09c:	jne    0x449ff9
  44a0a2:	movzx  edx,WORD PTR [esi+0xa8]
  44a0a9:	mov    eax,edi
  44a0ab:	call   0x449f5c
  44a0b0:	movzx  eax,WORD PTR [esi+0xaa]
  44a0b7:	add    WORD PTR [edi+0x4],ax
  44a0bb:	movzx  eax,WORD PTR [esi+0xac]
  44a0c2:	add    WORD PTR [edi+0x2],ax
  44a0c6:	movzx  edx,WORD PTR [esi+0xae]
  44a0cd:	lea    eax,[edi+0x6]
  44a0d0:	call   0x449f5c
  44a0d5:	movzx  eax,WORD PTR [edi]
  44a0d8:	mov    edx,eax
  44a0da:	shl    edx,0x8
  44a0dd:	movzx  eax,ax
  44a0e0:	shr    eax,0x8
  44a0e3:	or     dx,ax
  44a0e6:	mov    WORD PTR [edi],dx
  44a0e9:	movzx  eax,WORD PTR [edi+0x4]
  44a0ed:	mov    edx,eax
  44a0ef:	shl    edx,0x8
  44a0f2:	movzx  eax,ax
  44a0f5:	shr    eax,0x8
  44a0f8:	or     dx,ax
  44a0fb:	mov    WORD PTR [esp+0xe],dx
  44a100:	movzx  eax,WORD PTR [edi+0x2]
  44a104:	mov    edx,eax
  44a106:	shl    edx,0x8
  44a109:	movzx  eax,ax
  44a10c:	shr    eax,0x8
  44a10f:	or     dx,ax
  44a112:	mov    WORD PTR [edi+0x4],dx
  44a116:	movzx  eax,WORD PTR [edi+0x6]
  44a11a:	mov    edx,eax
  44a11c:	shl    edx,0x8
  44a11f:	movzx  eax,ax
  44a122:	shr    eax,0x8
  44a125:	or     dx,ax
  44a128:	mov    WORD PTR [edi+0x6],dx
  44a12c:	movzx  eax,WORD PTR [esp+0xe]
  44a131:	mov    WORD PTR [edi+0x2],ax
  44a135:	mov    eax,DWORD PTR [edi]
  44a137:	mov    edx,DWORD PTR [esp]
  44a13a:	mov    DWORD PTR [edx],eax
  44a13c:	lea    eax,[edi+0x4]
  44a13f:	mov    eax,DWORD PTR [eax]
  44a141:	mov    edx,DWORD PTR [esp]
  44a144:	add    edx,0x4
  44a147:	mov    DWORD PTR [edx],eax
  44a149:	add    esp,0x10
  44a14c:	pop    ebp
  44a14d:	pop    edi
  44a14e:	pop    esi
  44a14f:	pop    ebx
  44a150:	ret    
  44a151:	add    BYTE PTR [eax],al
  44a153:	add    bh,bh
  44a155:	(bad)  
  44a156:	(bad)  
  44a157:	call   DWORD PTR [esi]
  44a159:	add    BYTE PTR [eax],al
  44a15b:	add    BYTE PTR [ebx+0x69],al
  44a15e:	jo     0x44a1c8
  44a160:	gs jb  0x44a183
  44a163:	outs   dx,BYTE PTR ds:[esi]
  44a164:	outs   dx,DWORD PTR ds:[esi]
  44a165:	je     0x44a187
  44a167:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44a16e:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44a175:	push   esi
  44a176:	push   edi
  44a177:	push   ebp
  44a178:	add    esp,0xfffffff0
  44a17b:	mov    DWORD PTR [esp],ecx
  44a17e:	mov    esi,eax
  44a180:	lea    edi,[esp+0x4]
  44a184:	cmp    BYTE PTR [esi+0x30],0x0
  44a188:	jne    0x44a1a0
  44a18a:	mov    ecx,0x44a344
  44a18f:	mov    dl,0x1
  44a191:	mov    eax,ds:0x441af8
  44a196:	call   0x40c8b4
  44a19b:	call   0x4048fc
  44a1a0:	mov    eax,DWORD PTR [edx]
  44a1a2:	mov    DWORD PTR [edi],eax
  44a1a4:	add    edx,0x4
  44a1a7:	mov    eax,DWORD PTR [edx]
  44a1a9:	lea    edx,[edi+0x4]
  44a1ac:	mov    DWORD PTR [edx],eax
  44a1ae:	mov    ebx,0x4
  44a1b3:	mov    eax,edi
  44a1b5:	movzx  edx,WORD PTR [eax]
  44a1b8:	mov    ecx,edx
  44a1ba:	shl    ecx,0x8
  44a1bd:	movzx  edx,dx
  44a1c0:	shr    edx,0x8
  44a1c3:	or     cx,dx
  44a1c6:	mov    WORD PTR [eax],cx
  44a1c9:	add    eax,0x2
  44a1cc:	dec    ebx
  44a1cd:	jne    0x44a1b5
  44a1cf:	xor    ebx,ebx
  44a1d1:	mov    ebp,ebx
  44a1d3:	add    ebp,ebp
  44a1d5:	lea    ebp,[ebp+ebp*2+0x0]
  44a1d9:	movzx  edx,WORD PTR [esi+ebp*2+0xb0]
  44a1e1:	mov    eax,edi
  44a1e3:	call   0x449f5c
  44a1e8:	movzx  eax,WORD PTR [esi+ebp*2+0xb2]
  44a1f0:	add    WORD PTR [edi+0x2],ax
  44a1f4:	movzx  eax,WORD PTR [esi+ebp*2+0xb4]
  44a1fc:	add    WORD PTR [edi+0x4],ax
  44a200:	movzx  edx,WORD PTR [esi+ebp*2+0xb6]
  44a208:	lea    eax,[edi+0x6]
  44a20b:	call   0x449f5c
  44a210:	movzx  eax,WORD PTR [edi+0x4]
  44a214:	mov    WORD PTR [esp+0xc],ax
  44a219:	movzx  eax,WORD PTR [edi]
  44a21c:	xor    WORD PTR [edi+0x4],ax
  44a220:	movzx  edx,WORD PTR [esi+ebp*2+0xb8]
  44a228:	lea    eax,[edi+0x4]
  44a22b:	call   0x449f5c
  44a230:	movzx  eax,WORD PTR [edi+0x2]
  44a234:	mov    WORD PTR [esp+0xe],ax
  44a239:	movzx  eax,WORD PTR [edi+0x6]
  44a23d:	xor    WORD PTR [edi+0x2],ax
  44a241:	movzx  eax,WORD PTR [edi+0x4]
  44a245:	add    WORD PTR [edi+0x2],ax
  44a249:	movzx  edx,WORD PTR [esi+ebp*2+0xba]
  44a251:	lea    eax,[edi+0x2]
  44a254:	call   0x449f5c
  44a259:	movzx  eax,WORD PTR [edi+0x2]
  44a25d:	add    WORD PTR [edi+0x4],ax
  44a261:	movzx  eax,WORD PTR [edi+0x2]
  44a265:	xor    WORD PTR [edi],ax
  44a268:	movzx  eax,WORD PTR [edi+0x4]
  44a26c:	xor    WORD PTR [edi+0x6],ax
  44a270:	movzx  eax,WORD PTR [esp+0xc]
  44a275:	xor    WORD PTR [edi+0x2],ax
  44a279:	movzx  eax,WORD PTR [esp+0xe]
  44a27e:	xor    WORD PTR [edi+0x4],ax
  44a282:	inc    ebx
  44a283:	cmp    ebx,0x8
  44a286:	jne    0x44a1d1
  44a28c:	movzx  edx,WORD PTR [esi+0x110]
  44a293:	mov    eax,edi
  44a295:	call   0x449f5c
  44a29a:	movzx  eax,WORD PTR [esi+0x112]
  44a2a1:	add    WORD PTR [edi+0x4],ax
  44a2a5:	movzx  eax,WORD PTR [esi+0x114]
  44a2ac:	add    WORD PTR [edi+0x2],ax
  44a2b0:	movzx  edx,WORD PTR [esi+0x116]
  44a2b7:	lea    eax,[edi+0x6]
  44a2ba:	call   0x449f5c
  44a2bf:	movzx  eax,WORD PTR [edi]
  44a2c2:	mov    edx,eax
  44a2c4:	shl    edx,0x8
  44a2c7:	movzx  eax,ax
  44a2ca:	shr    eax,0x8
  44a2cd:	or     dx,ax
  44a2d0:	mov    WORD PTR [edi],dx
  44a2d3:	movzx  eax,WORD PTR [edi+0x4]
  44a2d7:	mov    edx,eax
  44a2d9:	shl    edx,0x8
  44a2dc:	movzx  eax,ax
  44a2df:	shr    eax,0x8
  44a2e2:	or     dx,ax
  44a2e5:	mov    WORD PTR [esp+0xe],dx
  44a2ea:	movzx  eax,WORD PTR [edi+0x2]
  44a2ee:	mov    edx,eax
  44a2f0:	shl    edx,0x8
  44a2f3:	movzx  eax,ax
  44a2f6:	shr    eax,0x8
  44a2f9:	or     dx,ax
  44a2fc:	mov    WORD PTR [edi+0x4],dx
  44a300:	movzx  eax,WORD PTR [edi+0x6]
  44a304:	mov    edx,eax
  44a306:	shl    edx,0x8
  44a309:	movzx  eax,ax
  44a30c:	shr    eax,0x8
  44a30f:	or     dx,ax
  44a312:	mov    WORD PTR [edi+0x6],dx
  44a316:	movzx  eax,WORD PTR [esp+0xe]
  44a31b:	mov    WORD PTR [edi+0x2],ax
  44a31f:	mov    eax,DWORD PTR [edi]
  44a321:	mov    edx,DWORD PTR [esp]
  44a324:	mov    DWORD PTR [edx],eax
  44a326:	lea    eax,[edi+0x4]
  44a329:	mov    eax,DWORD PTR [eax]
  44a32b:	mov    edx,DWORD PTR [esp]
  44a32e:	add    edx,0x4
  44a331:	mov    DWORD PTR [edx],eax
  44a333:	add    esp,0x10
  44a336:	pop    ebp
  44a337:	pop    edi
  44a338:	pop    esi
  44a339:	pop    ebx
  44a33a:	ret    
  44a33b:	add    bh,bh
  44a33d:	(bad)  
  44a33e:	(bad)  
  44a33f:	call   DWORD PTR [esi]
  44a341:	add    BYTE PTR [eax],al
  44a343:	add    BYTE PTR [ebx+0x69],al
  44a346:	jo     0x44a3b0
  44a348:	gs jb  0x44a36b
  44a34b:	outs   dx,BYTE PTR ds:[esi]
  44a34c:	outs   dx,DWORD PTR ds:[esi]
  44a34d:	je     0x44a36f
  44a34f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44a356:	imul   edi,DWORD PTR [edx+0x65],0xa8000064
  44a35d:	mov    ds:0x44,eax
	...
  44a36a:	add    BYTE PTR [eax],al
  44a36c:	push   esp
  44a36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a36e:	inc    esp
	...
  44a37b:	add    BYTE PTR [esp+eiz*4+0x44],al
  44a37f:	add    al,bh
  44a381:	add    BYTE PTR [eax],al
  44a383:	add    BYTE PTR [eax+0x18004424],dh
  44a389:	test   eax,0x42dc0041
  44a38e:	inc    eax
  44a38f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44a395:	inc    edx
  44a396:	inc    eax
  44a397:	add    al,bl
  44a399:	inc    edx
  44a39a:	inc    eax
  44a39b:	add    BYTE PTR [eax],bh
  44a39d:	inc    eax
  44a39e:	inc    eax
  44a39f:	add    BYTE PTR [eax+eax*2+0x40],dl
  44a3a3:	add    BYTE PTR [eax+0x20],bh
  44a3a6:	inc    esp
  44a3a7:	add    BYTE PTR [eax+0x41],ch
  44a3aa:	inc    ecx
  44a3ab:	add    BYTE PTR [eax-0x5b],dh
  44a3ae:	inc    ecx
  44a3af:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44a3b6:	inc    ecx
  44a3b7:	add    BYTE PTR [eax],dl
  44a3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3ba:	inc    ecx
  44a3bb:	add    BYTE PTR [eax-0x5a],bl
  44a3be:	inc    ecx
  44a3bf:	add    BYTE PTR [eax-0x59],dl
  44a3c2:	inc    ecx
  44a3c3:	add    BYTE PTR [eax],dh
  44a3c5:	test   eax,0xa6680041
  44a3ca:	inc    ecx
  44a3cb:	add    BYTE PTR [eax-0x5a],ah
  44a3ce:	inc    ecx
  44a3cf:	add    BYTE PTR [eax],bh
  44a3d1:	test   eax,0x231c0041
  44a3d6:	inc    esp
  44a3d7:	add    BYTE PTR [esp+eiz*4-0x5b53ffbc],ah
  44a3de:	inc    esp
  44a3df:	add    al,dl
  44a3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a3e2:	inc    esp
  44a3e3:	add    al,bl
  44a3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a3e6:	inc    esp
  44a3e7:	add    BYTE PTR [eax+esi*1-0x5763ffbc],cl
  44a3ee:	inc    esp
  44a3ef:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  44a3f6:	inc    esp
  44a3f7:	add    BYTE PTR [eax],bh
  44a3f9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44a3fd:	and    DWORD PTR [eax+eax*1-0x14],eax
  44a401:	and    DWORD PTR [eax+eax*1+0x8],eax
  44a405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a406:	inc    esp
  44a407:	add    BYTE PTR [eax+esi*1+0x31000044],al
  44a40e:	inc    esp
  44a40f:	add    BYTE PTR [eax+0x31],bl
  44a412:	inc    esp
  44a413:	add    BYTE PTR [eax+ebp*4-0x4757ffbc],bh
  44a41a:	inc    esp
  44a41b:	add    BYTE PTR [edx+esi*1],ah
  44a41e:	inc    esp
  44a41f:	add    BYTE PTR [eax],bl
  44a421:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  44a425:	xor    al,0x44
  44a427:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  44a42e:	inc    esp
  44a42f:	add    BYTE PTR [esi+esi*1+0x44],cl
  44a433:	add    BYTE PTR [edi+esi*1+0x44],cl
  44a437:	add    BYTE PTR [eax+edi*1],ch
  44a43a:	inc    esp
  44a43b:	add    BYTE PTR [ecx+edi*1],cl
  44a43e:	inc    esp
  44a43f:	add    ah,bh
  44a441:	cmp    DWORD PTR [eax+eax*1+0x9],eax
  44a445:	push   esp
  44a446:	inc    esp
  44a447:	inc    ebx
  44a448:	push   eax
  44a449:	pop    edi
  44a44a:	ins    DWORD PTR es:[edi],dx
  44a44b:	popa   
  44a44c:	jb     0x44a4c1
  44a44e:	mov    eax,eax
  44a450:	push   esp
  44a451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a452:	inc    esp
  44a453:	add    BYTE PTR [edi],al
  44a455:	or     DWORD PTR [esp+eax*2+0x43],edx
  44a459:	push   eax
  44a45a:	pop    edi
  44a45b:	ins    DWORD PTR es:[edi],dx
  44a45c:	popa   
  44a45d:	jb     0x44a4d2
  44a45f:	test   al,0xa3
  44a461:	inc    esp
  44a462:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  44a469:	pop    es
  44a46a:	inc    esp
  44a46b:	inc    ebx
  44a46c:	push   eax
  44a46d:	ins    DWORD PTR es:[edi],dx
  44a46e:	popa   
  44a46f:	jb     0x44a4e4
  44a471:	add    BYTE PTR [eax],al
  44a473:	nop
  44a474:	push   ebx
  44a475:	mov    ecx,edx
  44a477:	mov    ebx,eax
  44a479:	shl    ebx,cl
  44a47b:	mov    ecx,0x20
  44a480:	sub    ecx,edx
  44a482:	shr    eax,cl
  44a484:	or     ebx,eax
  44a486:	mov    eax,ebx
  44a488:	pop    ebx
  44a489:	ret    
  44a48a:	mov    eax,eax
  44a48c:	push   ebx
  44a48d:	mov    ecx,edx
  44a48f:	mov    ebx,eax
  44a491:	shr    ebx,cl
  44a493:	mov    ecx,0x20
  44a498:	sub    ecx,edx
  44a49a:	shl    eax,cl
  44a49c:	or     ebx,eax
  44a49e:	mov    eax,ebx
  44a4a0:	pop    ebx
  44a4a1:	ret    
  44a4a2:	mov    eax,eax
  44a4a4:	mov    eax,0xd
  44a4a9:	ret    
  44a4aa:	mov    eax,eax
  44a4ac:	push   ebx
  44a4ad:	mov    ebx,edx
  44a4af:	mov    eax,ebx
  44a4b1:	mov    edx,0x44a4c8
  44a4b6:	call   0x404fdc
  44a4bb:	pop    ebx
  44a4bc:	ret    
  44a4bd:	add    BYTE PTR [eax],al
  44a4bf:	add    bh,bh
  44a4c1:	(bad)  
  44a4c2:	(bad)  
  44a4c3:	inc    DWORD PTR [eax+eax*1]
  44a4c6:	add    BYTE PTR [eax],al
  44a4c8:	dec    ebp
  44a4c9:	popa   
  44a4ca:	jb     0x44a53f
  44a4cc:	add    BYTE PTR [eax],al
  44a4ce:	add    BYTE PTR [eax],al
  44a4d0:	mov    eax,0x4e0
  44a4d5:	ret    
  44a4d6:	mov    eax,eax
  44a4d8:	push   ebx
  44a4d9:	push   esi
  44a4da:	push   edi
  44a4db:	push   ebp
  44a4dc:	add    esp,0xfffffff0
  44a4df:	mov    edi,esp
  44a4e1:	xor    ecx,ecx
  44a4e3:	mov    dl,0x1
  44a4e5:	mov    eax,ds:0x44a35c
  44a4ea:	call   0x44231c
  44a4ef:	mov    esi,eax
  44a4f1:	push   0x0
  44a4f3:	mov    edx,0x4694a8
  44a4f8:	mov    ecx,0x80
  44a4fd:	mov    eax,esi
  44a4ff:	mov    ebx,DWORD PTR [eax]
  44a501:	call   DWORD PTR [ebx+0x40]
  44a504:	mov    ecx,edi
  44a506:	mov    edx,0x4694f0
  44a50b:	mov    eax,esi
  44a50d:	mov    ebx,DWORD PTR [eax]
  44a50f:	call   DWORD PTR [ebx+0x6c]
  44a512:	mov    edx,edi
  44a514:	mov    eax,0x469520
  44a519:	mov    ecx,0x10
  44a51e:	call   0x408538
  44a523:	mov    ebx,eax
  44a525:	mov    ecx,edi
  44a527:	mov    edx,edi
  44a529:	mov    eax,esi
  44a52b:	mov    ebp,DWORD PTR [eax]
  44a52d:	call   DWORD PTR [ebp+0x70]
  44a530:	test   bl,bl
  44a532:	je     0x44a549
  44a534:	mov    edx,edi
  44a536:	mov    eax,0x4694f0
  44a53b:	mov    ecx,0x10
  44a540:	call   0x408538
  44a545:	test   al,al
  44a547:	jne    0x44a54d
  44a549:	xor    eax,eax
  44a54b:	jmp    0x44a54f
  44a54d:	mov    al,0x1
  44a54f:	mov    ebx,eax
  44a551:	mov    eax,esi
  44a553:	mov    edx,DWORD PTR [eax]
  44a555:	call   DWORD PTR [edx+0x44]
  44a558:	push   0x0
  44a55a:	mov    edx,0x4694b8
  44a55f:	mov    ecx,0xc0
  44a564:	mov    eax,esi
  44a566:	mov    ebp,DWORD PTR [eax]
  44a568:	call   DWORD PTR [ebp+0x40]
  44a56b:	mov    ecx,edi
  44a56d:	mov    edx,0x469500
  44a572:	mov    eax,esi
  44a574:	mov    ebp,DWORD PTR [eax]
  44a576:	call   DWORD PTR [ebp+0x6c]
  44a579:	test   bl,bl
  44a57b:	je     0x44a592
  44a57d:	mov    edx,edi
  44a57f:	mov    eax,0x469530
  44a584:	mov    ecx,0x10
  44a589:	call   0x408538
  44a58e:	test   al,al
  44a590:	jne    0x44a596
  44a592:	xor    eax,eax
  44a594:	jmp    0x44a598
  44a596:	mov    al,0x1
  44a598:	mov    ebx,eax
  44a59a:	mov    ecx,edi
  44a59c:	mov    edx,edi
  44a59e:	mov    eax,esi
  44a5a0:	mov    ebp,DWORD PTR [eax]
  44a5a2:	call   DWORD PTR [ebp+0x70]
  44a5a5:	test   bl,bl
  44a5a7:	je     0x44a5be
  44a5a9:	mov    edx,edi
  44a5ab:	mov    eax,0x469500
  44a5b0:	mov    ecx,0x10
  44a5b5:	call   0x408538
  44a5ba:	test   al,al
  44a5bc:	jne    0x44a5c2
  44a5be:	xor    eax,eax
  44a5c0:	jmp    0x44a5c4
  44a5c2:	mov    al,0x1
  44a5c4:	mov    ebx,eax
  44a5c6:	mov    eax,esi
  44a5c8:	mov    edx,DWORD PTR [eax]
  44a5ca:	call   DWORD PTR [edx+0x44]
  44a5cd:	push   0x0
  44a5cf:	mov    edx,0x4694d0
  44a5d4:	mov    ecx,0x100
  44a5d9:	mov    eax,esi
  44a5db:	mov    ebp,DWORD PTR [eax]
  44a5dd:	call   DWORD PTR [ebp+0x40]
  44a5e0:	mov    ecx,edi
  44a5e2:	mov    edx,0x469510
  44a5e7:	mov    eax,esi
  44a5e9:	mov    ebp,DWORD PTR [eax]
  44a5eb:	call   DWORD PTR [ebp+0x6c]
  44a5ee:	test   bl,bl
  44a5f0:	je     0x44a607
  44a5f2:	mov    edx,edi
  44a5f4:	mov    eax,0x469540
  44a5f9:	mov    ecx,0x10
  44a5fe:	call   0x408538
  44a603:	test   al,al
  44a605:	jne    0x44a60b
  44a607:	xor    eax,eax
  44a609:	jmp    0x44a60d
  44a60b:	mov    al,0x1
  44a60d:	mov    ebx,eax
  44a60f:	mov    ecx,edi
  44a611:	mov    edx,edi
  44a613:	mov    eax,esi
  44a615:	mov    ebp,DWORD PTR [eax]
  44a617:	call   DWORD PTR [ebp+0x70]
  44a61a:	test   bl,bl
  44a61c:	je     0x44a633
  44a61e:	mov    edx,edi
  44a620:	mov    eax,0x469510
  44a625:	mov    ecx,0x10
  44a62a:	call   0x408538
  44a62f:	test   al,al
  44a631:	jne    0x44a637
  44a633:	xor    eax,eax
  44a635:	jmp    0x44a639
  44a637:	mov    al,0x1
  44a639:	mov    ebx,eax
  44a63b:	mov    eax,esi
  44a63d:	mov    edx,DWORD PTR [eax]
  44a63f:	call   DWORD PTR [edx+0x44]
  44a642:	mov    eax,esi
  44a644:	call   0x4040a0
  44a649:	mov    eax,ebx
  44a64b:	add    esp,0x10
  44a64e:	pop    ebp
  44a64f:	pop    edi
  44a650:	pop    esi
  44a651:	pop    ebx
  44a652:	ret    
  44a653:	nop
  44a654:	push   ebx
  44a655:	push   esi
  44a656:	push   edi
  44a657:	mov    ecx,DWORD PTR [eax]
  44a659:	mov    ebx,DWORD PTR [eax]
  44a65b:	shr    ebx,1
  44a65d:	and    ecx,ebx
  44a65f:	mov    ebx,ecx
  44a661:	shr    ebx,0x2
  44a664:	and    ecx,ebx
  44a666:	mov    ebx,ecx
  44a668:	shr    ebx,0x4
  44a66b:	and    ecx,ebx
  44a66d:	mov    ebx,ecx
  44a66f:	shr    ebx,1
  44a671:	and    ebx,ecx
  44a673:	shr    ecx,0x2
  44a676:	and    ebx,ecx
  44a678:	mov    ecx,ebx
  44a67a:	mov    DWORD PTR [edx],ecx
  44a67c:	mov    ebx,DWORD PTR [eax]
  44a67e:	xor    ebx,0xffffffff
  44a681:	mov    ecx,ebx
  44a683:	mov    esi,ebx
  44a685:	shr    esi,1
  44a687:	and    ecx,esi
  44a689:	mov    esi,ecx
  44a68b:	shr    esi,0x2
  44a68e:	and    ecx,esi
  44a690:	mov    esi,ecx
  44a692:	shr    esi,0x4
  44a695:	and    ecx,esi
  44a697:	mov    esi,ecx
  44a699:	shr    esi,1
  44a69b:	and    esi,ecx
  44a69d:	shr    ecx,0x2
  44a6a0:	and    esi,ecx
  44a6a2:	mov    ecx,esi
  44a6a4:	or     ecx,DWORD PTR [edx]
  44a6a6:	mov    esi,ecx
  44a6a8:	add    esi,esi
  44a6aa:	mov    edi,ecx
  44a6ac:	add    edi,edi
  44a6ae:	add    edi,edi
  44a6b0:	or     esi,edi
  44a6b2:	mov    edi,ecx
  44a6b4:	add    edi,edi
  44a6b6:	add    edi,edi
  44a6b8:	add    edi,edi
  44a6ba:	or     esi,edi
  44a6bc:	mov    edi,ecx
  44a6be:	shl    edi,0x4
  44a6c1:	or     esi,edi
  44a6c3:	mov    edi,ecx
  44a6c5:	shl    edi,0x5
  44a6c8:	or     esi,edi
  44a6ca:	mov    edi,ecx
  44a6cc:	shl    edi,0x6
  44a6cf:	or     esi,edi
  44a6d1:	mov    edi,ecx
  44a6d3:	shl    edi,0x7
  44a6d6:	or     esi,edi
  44a6d8:	mov    edi,ecx
  44a6da:	shl    edi,0x8
  44a6dd:	or     esi,edi
  44a6df:	mov    DWORD PTR [edx],esi
  44a6e1:	mov    esi,DWORD PTR [edx]
  44a6e3:	or     esi,ecx
  44a6e5:	shl    ecx,0x9
  44a6e8:	or     esi,ecx
  44a6ea:	mov    ecx,DWORD PTR [eax]
  44a6ec:	xor    ecx,0xffffffff
  44a6ef:	mov    edi,DWORD PTR [eax]
  44a6f1:	add    edi,edi
  44a6f3:	xor    ecx,edi
  44a6f5:	and    esi,ecx
  44a6f7:	mov    eax,DWORD PTR [eax]
  44a6f9:	shr    eax,1
  44a6fb:	xor    ebx,eax
  44a6fd:	and    esi,ebx
  44a6ff:	mov    DWORD PTR [edx],esi
  44a701:	and    DWORD PTR [edx],0xfffffffc
  44a704:	pop    edi
  44a705:	pop    esi
  44a706:	pop    ebx
  44a707:	ret    
  44a708:	push   ebx
  44a709:	push   esi
  44a70a:	push   edi
  44a70b:	push   ebp
  44a70c:	add    esp,0xfffffe94
  44a712:	mov    DWORD PTR [esp],ecx
  44a715:	mov    esi,edx
  44a717:	mov    ebp,eax
  44a719:	mov    ecx,0x8
  44a71e:	mov    eax,DWORD PTR [esp]
  44a721:	xor    edx,edx
  44a723:	div    ecx
  44a725:	mov    DWORD PTR [esp],eax
  44a728:	lea    eax,[esp+0xcc]
  44a72f:	xor    ecx,ecx
  44a731:	mov    edx,0xa0
  44a736:	call   0x4037c8
  44a73b:	lea    edx,[esp+0xcc]
  44a742:	mov    eax,esi
  44a744:	mov    ecx,DWORD PTR [esp]
  44a747:	call   0x403090
  44a74c:	mov    ecx,0x4
  44a751:	mov    eax,DWORD PTR [esp]
  44a754:	xor    edx,edx
  44a756:	div    ecx
  44a758:	mov    DWORD PTR [esp],eax
  44a75b:	lea    edx,[esp+0x10]
  44a75f:	mov    eax,0x46948c
  44a764:	mov    ecx,0x1c
  44a769:	call   0x403090
  44a76e:	xor    esi,esi
  44a770:	lea    ebx,[esp+0x10]
  44a774:	mov    edi,DWORD PTR [ebx]
  44a776:	xor    edi,DWORD PTR [ebx+0x14]
  44a779:	mov    edx,0x3
  44a77e:	mov    eax,edi
  44a780:	call   0x44a474
  44a785:	mov    ecx,eax
  44a787:	mov    eax,esi
  44a789:	xor    edx,edx
  44a78b:	div    DWORD PTR [esp]
  44a78e:	xor    ecx,DWORD PTR [esp+edx*4+0xcc]
  44a795:	xor    ecx,esi
  44a797:	mov    DWORD PTR [ebx+0x1c],ecx
  44a79a:	inc    esi
  44a79b:	add    ebx,0x4
  44a79e:	cmp    esi,0x27
  44a7a1:	jne    0x44a774
  44a7a3:	mov    eax,DWORD PTR [esp]
  44a7a6:	mov    DWORD PTR [esp+0xc8],eax
  44a7ad:	mov    DWORD PTR [esp+0x4],0x7
  44a7b5:	mov    esi,0x27
  44a7ba:	lea    ebx,[esp+0x30]
  44a7be:	mov    eax,DWORD PTR [ebx-0x4]
  44a7c1:	and    eax,0x1ff
  44a7c6:	mov    edi,DWORD PTR [eax*4+0x468c8c]
  44a7cd:	add    edi,DWORD PTR [ebx]
  44a7cf:	mov    edx,0x9
  44a7d4:	mov    eax,edi
  44a7d6:	call   0x44a474
  44a7db:	mov    DWORD PTR [ebx],eax
  44a7dd:	add    ebx,0x4
  44a7e0:	dec    esi
  44a7e1:	jne    0x44a7be
  44a7e3:	mov    eax,DWORD PTR [esp+0xc8]
  44a7ea:	and    eax,0x1ff
  44a7ef:	mov    edi,DWORD PTR [eax*4+0x468c8c]
  44a7f6:	add    edi,DWORD PTR [esp+0x2c]
  44a7fa:	mov    edx,0x9
  44a7ff:	mov    eax,edi
  44a801:	call   0x44a474
  44a806:	mov    DWORD PTR [esp+0x2c],eax
  44a80a:	dec    DWORD PTR [esp+0x4]
  44a80e:	jne    0x44a7b5
  44a810:	xor    esi,esi
  44a812:	lea    ecx,[esp+0x2c]
  44a816:	mov    eax,esi
  44a818:	add    eax,eax
  44a81a:	add    eax,eax
  44a81c:	add    eax,eax
  44a81e:	sub    eax,esi
  44a820:	mov    ebx,0x28
  44a825:	xor    edx,edx
  44a827:	div    ebx
  44a829:	mov    eax,DWORD PTR [ecx]
  44a82b:	mov    DWORD PTR [ebp+edx*4+0x58],eax
  44a82f:	inc    esi
  44a830:	add    ecx,0x4
  44a833:	cmp    esi,0x28
  44a836:	jne    0x44a816
  44a838:	mov    esi,0x5
  44a83d:	mov    eax,DWORD PTR [ebp+esi*4+0x58]
  44a841:	mov    edx,eax
  44a843:	and    edx,0x3
  44a846:	add    edx,0x109
  44a84c:	mov    edi,DWORD PTR [edx*4+0x468c8c]
  44a853:	mov    edx,DWORD PTR [ebp+esi*4+0x64]
  44a857:	and    edx,0x1f
  44a85a:	mov    DWORD PTR [esp+0x4],edx
  44a85e:	or     eax,0x3
  44a861:	mov    DWORD PTR [esp+0xc],eax
  44a865:	lea    edx,[esp+0x8]
  44a869:	lea    eax,[esp+0xc]
  44a86d:	call   0x44a654
  44a872:	mov    edx,DWORD PTR [esp+0x4]
  44a876:	mov    eax,edi
  44a878:	call   0x44a474
  44a87d:	and    eax,DWORD PTR [esp+0x8]
  44a881:	xor    eax,DWORD PTR [esp+0xc]
  44a885:	mov    DWORD PTR [ebp+esi*4+0x58],eax
  44a889:	add    esi,0x2
  44a88c:	cmp    esi,0x25
  44a88f:	jb     0x44a83d
  44a891:	add    esp,0x16c
  44a897:	pop    ebp
  44a898:	pop    edi
  44a899:	pop    esi
  44a89a:	pop    ebx
  44a89b:	ret    
  44a89c:	push   ebx
  44a89d:	mov    ebx,eax
  44a89f:	lea    eax,[ebx+0x58]
  44a8a2:	mov    ecx,0xff
  44a8a7:	mov    edx,0xa0
  44a8ac:	call   0x4037c8
  44a8b1:	mov    eax,ebx
  44a8b3:	call   0x4431f4
  44a8b8:	pop    ebx
  44a8b9:	ret    
  44a8ba:	mov    eax,eax
  44a8bc:	push   ebx
  44a8bd:	push   esi
  44a8be:	push   edi
  44a8bf:	push   ebp
  44a8c0:	add    esp,0xffffffe8
  44a8c3:	mov    DWORD PTR [esp+0x4],ecx
  44a8c7:	mov    DWORD PTR [esp],eax
  44a8ca:	lea    ebp,[esp+0x8]
  44a8ce:	mov    eax,DWORD PTR [esp]
  44a8d1:	cmp    BYTE PTR [eax+0x30],0x0
  44a8d5:	jne    0x44a8ed
  44a8d7:	mov    ecx,0x44b890
  44a8dc:	mov    dl,0x1
  44a8de:	mov    eax,ds:0x441af8
  44a8e3:	call   0x40c8b4
  44a8e8:	call   0x4048fc
  44a8ed:	mov    ecx,edx
  44a8ef:	mov    eax,DWORD PTR [ecx]
  44a8f1:	mov    DWORD PTR [ebp+0x0],eax
  44a8f4:	mov    eax,ecx
  44a8f6:	mov    ecx,eax
  44a8f8:	add    ecx,0x4
  44a8fb:	mov    ecx,DWORD PTR [ecx]
  44a8fd:	mov    DWORD PTR [ebp+0x4],ecx
  44a900:	mov    ecx,eax
  44a902:	add    ecx,0x8
  44a905:	mov    ecx,DWORD PTR [ecx]
  44a907:	mov    DWORD PTR [ebp+0x8],ecx
  44a90a:	add    eax,0xc
  44a90d:	mov    eax,DWORD PTR [eax]
  44a90f:	mov    DWORD PTR [ebp+0xc],eax
  44a912:	mov    eax,DWORD PTR [esp]
  44a915:	mov    eax,DWORD PTR [eax+0x58]
  44a918:	add    DWORD PTR [ebp+0x0],eax
  44a91b:	mov    eax,DWORD PTR [esp]
  44a91e:	mov    eax,DWORD PTR [eax+0x5c]
  44a921:	add    DWORD PTR [ebp+0x4],eax
  44a924:	mov    eax,DWORD PTR [esp]
  44a927:	mov    eax,DWORD PTR [eax+0x60]
  44a92a:	add    DWORD PTR [ebp+0x8],eax
  44a92d:	mov    eax,DWORD PTR [esp]
  44a930:	mov    eax,DWORD PTR [eax+0x64]
  44a933:	add    DWORD PTR [ebp+0xc],eax
  44a936:	mov    eax,DWORD PTR [ebp+0x0]
  44a939:	and    eax,0xff
  44a93e:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44a945:	xor    DWORD PTR [ebp+0x4],eax
  44a948:	mov    eax,DWORD PTR [ebp+0x0]
  44a94b:	shr    eax,0x8
  44a94e:	and    eax,0xff
  44a953:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44a95a:	add    DWORD PTR [ebp+0x4],eax
  44a95d:	mov    eax,DWORD PTR [ebp+0x0]
  44a960:	shr    eax,0x10
  44a963:	and    eax,0xff
  44a968:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44a96f:	add    DWORD PTR [ebp+0x8],eax
  44a972:	mov    eax,DWORD PTR [ebp+0x0]
  44a975:	shr    eax,0x18
  44a978:	and    eax,0xff
  44a97d:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44a984:	xor    DWORD PTR [ebp+0xc],eax
  44a987:	mov    edx,0x18
  44a98c:	mov    eax,DWORD PTR [ebp+0x0]
  44a98f:	call   0x44a48c
  44a994:	mov    DWORD PTR [ebp+0x0],eax
  44a997:	mov    eax,DWORD PTR [ebp+0xc]
  44a99a:	add    DWORD PTR [ebp+0x0],eax
  44a99d:	mov    eax,DWORD PTR [ebp+0x4]
  44a9a0:	and    eax,0xff
  44a9a5:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44a9ac:	xor    DWORD PTR [ebp+0x8],eax
  44a9af:	mov    eax,DWORD PTR [ebp+0x4]
  44a9b2:	shr    eax,0x8
  44a9b5:	and    eax,0xff
  44a9ba:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44a9c1:	add    DWORD PTR [ebp+0x8],eax
  44a9c4:	mov    eax,DWORD PTR [ebp+0x4]
  44a9c7:	shr    eax,0x10
  44a9ca:	and    eax,0xff
  44a9cf:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44a9d6:	add    DWORD PTR [ebp+0xc],eax
  44a9d9:	mov    eax,DWORD PTR [ebp+0x4]
  44a9dc:	shr    eax,0x18
  44a9df:	and    eax,0xff
  44a9e4:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44a9eb:	xor    DWORD PTR [ebp+0x0],eax
  44a9ee:	mov    edx,0x18
  44a9f3:	mov    eax,DWORD PTR [ebp+0x4]
  44a9f6:	call   0x44a48c
  44a9fb:	mov    DWORD PTR [ebp+0x4],eax
  44a9fe:	mov    eax,DWORD PTR [ebp+0x8]
  44aa01:	add    DWORD PTR [ebp+0x4],eax
  44aa04:	mov    eax,DWORD PTR [ebp+0x8]
  44aa07:	and    eax,0xff
  44aa0c:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aa13:	xor    DWORD PTR [ebp+0xc],eax
  44aa16:	mov    eax,DWORD PTR [ebp+0x8]
  44aa19:	shr    eax,0x8
  44aa1c:	and    eax,0xff
  44aa21:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44aa28:	add    DWORD PTR [ebp+0xc],eax
  44aa2b:	mov    eax,DWORD PTR [ebp+0x8]
  44aa2e:	shr    eax,0x10
  44aa31:	and    eax,0xff
  44aa36:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aa3d:	add    DWORD PTR [ebp+0x0],eax
  44aa40:	mov    eax,DWORD PTR [ebp+0x8]
  44aa43:	shr    eax,0x18
  44aa46:	and    eax,0xff
  44aa4b:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44aa52:	xor    DWORD PTR [ebp+0x4],eax
  44aa55:	mov    edx,0x18
  44aa5a:	mov    eax,DWORD PTR [ebp+0x8]
  44aa5d:	call   0x44a48c
  44aa62:	mov    DWORD PTR [ebp+0x8],eax
  44aa65:	mov    eax,DWORD PTR [ebp+0xc]
  44aa68:	and    eax,0xff
  44aa6d:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aa74:	xor    DWORD PTR [ebp+0x0],eax
  44aa77:	mov    eax,DWORD PTR [ebp+0xc]
  44aa7a:	shr    eax,0x8
  44aa7d:	and    eax,0xff
  44aa82:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44aa89:	add    DWORD PTR [ebp+0x0],eax
  44aa8c:	mov    eax,DWORD PTR [ebp+0xc]
  44aa8f:	shr    eax,0x10
  44aa92:	and    eax,0xff
  44aa97:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aa9e:	add    DWORD PTR [ebp+0x4],eax
  44aaa1:	mov    eax,DWORD PTR [ebp+0xc]
  44aaa4:	shr    eax,0x18
  44aaa7:	and    eax,0xff
  44aaac:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44aab3:	xor    DWORD PTR [ebp+0x8],eax
  44aab6:	mov    edx,0x18
  44aabb:	mov    eax,DWORD PTR [ebp+0xc]
  44aabe:	call   0x44a48c
  44aac3:	mov    DWORD PTR [ebp+0xc],eax
  44aac6:	mov    eax,DWORD PTR [ebp+0x0]
  44aac9:	and    eax,0xff
  44aace:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aad5:	xor    DWORD PTR [ebp+0x4],eax
  44aad8:	mov    eax,DWORD PTR [ebp+0x0]
  44aadb:	shr    eax,0x8
  44aade:	and    eax,0xff
  44aae3:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44aaea:	add    DWORD PTR [ebp+0x4],eax
  44aaed:	mov    eax,DWORD PTR [ebp+0x0]
  44aaf0:	shr    eax,0x10
  44aaf3:	and    eax,0xff
  44aaf8:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aaff:	add    DWORD PTR [ebp+0x8],eax
  44ab02:	mov    eax,DWORD PTR [ebp+0x0]
  44ab05:	shr    eax,0x18
  44ab08:	and    eax,0xff
  44ab0d:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ab14:	xor    DWORD PTR [ebp+0xc],eax
  44ab17:	mov    edx,0x18
  44ab1c:	mov    eax,DWORD PTR [ebp+0x0]
  44ab1f:	call   0x44a48c
  44ab24:	mov    DWORD PTR [ebp+0x0],eax
  44ab27:	mov    eax,DWORD PTR [ebp+0xc]
  44ab2a:	add    DWORD PTR [ebp+0x0],eax
  44ab2d:	mov    eax,DWORD PTR [ebp+0x4]
  44ab30:	and    eax,0xff
  44ab35:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44ab3c:	xor    DWORD PTR [ebp+0x8],eax
  44ab3f:	mov    eax,DWORD PTR [ebp+0x4]
  44ab42:	shr    eax,0x8
  44ab45:	and    eax,0xff
  44ab4a:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ab51:	add    DWORD PTR [ebp+0x8],eax
  44ab54:	mov    eax,DWORD PTR [ebp+0x4]
  44ab57:	shr    eax,0x10
  44ab5a:	and    eax,0xff
  44ab5f:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44ab66:	add    DWORD PTR [ebp+0xc],eax
  44ab69:	mov    eax,DWORD PTR [ebp+0x4]
  44ab6c:	shr    eax,0x18
  44ab6f:	and    eax,0xff
  44ab74:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ab7b:	xor    DWORD PTR [ebp+0x0],eax
  44ab7e:	mov    edx,0x18
  44ab83:	mov    eax,DWORD PTR [ebp+0x4]
  44ab86:	call   0x44a48c
  44ab8b:	mov    DWORD PTR [ebp+0x4],eax
  44ab8e:	mov    eax,DWORD PTR [ebp+0x8]
  44ab91:	add    DWORD PTR [ebp+0x4],eax
  44ab94:	mov    eax,DWORD PTR [ebp+0x8]
  44ab97:	and    eax,0xff
  44ab9c:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44aba3:	xor    DWORD PTR [ebp+0xc],eax
  44aba6:	mov    eax,DWORD PTR [ebp+0x8]
  44aba9:	shr    eax,0x8
  44abac:	and    eax,0xff
  44abb1:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44abb8:	add    DWORD PTR [ebp+0xc],eax
  44abbb:	mov    eax,DWORD PTR [ebp+0x8]
  44abbe:	shr    eax,0x10
  44abc1:	and    eax,0xff
  44abc6:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44abcd:	add    DWORD PTR [ebp+0x0],eax
  44abd0:	mov    eax,DWORD PTR [ebp+0x8]
  44abd3:	shr    eax,0x18
  44abd6:	and    eax,0xff
  44abdb:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44abe2:	xor    DWORD PTR [ebp+0x4],eax
  44abe5:	mov    edx,0x18
  44abea:	mov    eax,DWORD PTR [ebp+0x8]
  44abed:	call   0x44a48c
  44abf2:	mov    DWORD PTR [ebp+0x8],eax
  44abf5:	mov    eax,DWORD PTR [ebp+0xc]
  44abf8:	and    eax,0xff
  44abfd:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44ac04:	xor    DWORD PTR [ebp+0x0],eax
  44ac07:	mov    eax,DWORD PTR [ebp+0xc]
  44ac0a:	shr    eax,0x8
  44ac0d:	and    eax,0xff
  44ac12:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ac19:	add    DWORD PTR [ebp+0x0],eax
  44ac1c:	mov    eax,DWORD PTR [ebp+0xc]
  44ac1f:	shr    eax,0x10
  44ac22:	and    eax,0xff
  44ac27:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44ac2e:	add    DWORD PTR [ebp+0x4],eax
  44ac31:	mov    eax,DWORD PTR [ebp+0xc]
  44ac34:	shr    eax,0x18
  44ac37:	and    eax,0xff
  44ac3c:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ac43:	xor    DWORD PTR [ebp+0x8],eax
  44ac46:	mov    edx,0x18
  44ac4b:	mov    eax,DWORD PTR [ebp+0xc]
  44ac4e:	call   0x44a48c
  44ac53:	mov    DWORD PTR [ebp+0xc],eax
  44ac56:	mov    eax,DWORD PTR [esp]
  44ac59:	mov    edi,DWORD PTR [eax+0x68]
  44ac5c:	add    edi,DWORD PTR [ebp+0x0]
  44ac5f:	mov    edx,0xd
  44ac64:	mov    eax,DWORD PTR [ebp+0x0]
  44ac67:	call   0x44a474
  44ac6c:	mov    ebx,eax
  44ac6e:	mov    eax,DWORD PTR [esp]
  44ac71:	imul   ebx,DWORD PTR [eax+0x6c]
  44ac75:	mov    eax,edi
  44ac77:	and    eax,0x1ff
  44ac7c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44ac83:	mov    edx,0x5
  44ac88:	mov    eax,ebx
  44ac8a:	call   0x44a474
  44ac8f:	mov    ebx,eax
  44ac91:	mov    eax,ebx
  44ac93:	and    eax,0x1f
  44ac96:	mov    edx,eax
  44ac98:	mov    eax,edi
  44ac9a:	call   0x44a474
  44ac9f:	mov    edi,eax
  44aca1:	xor    esi,ebx
  44aca3:	mov    edx,0x5
  44aca8:	mov    eax,ebx
  44acaa:	call   0x44a474
  44acaf:	mov    ebx,eax
  44acb1:	xor    esi,ebx
  44acb3:	mov    eax,ebx
  44acb5:	and    eax,0x1f
  44acb8:	mov    edx,eax
  44acba:	mov    eax,esi
  44acbc:	call   0x44a474
  44acc1:	mov    esi,eax
  44acc3:	mov    edx,0xd
  44acc8:	mov    eax,DWORD PTR [ebp+0x0]
  44accb:	call   0x44a474
  44acd0:	mov    DWORD PTR [ebp+0x0],eax
  44acd3:	add    DWORD PTR [ebp+0x4],esi
  44acd6:	add    DWORD PTR [ebp+0x8],edi
  44acd9:	xor    DWORD PTR [ebp+0xc],ebx
  44acdc:	mov    eax,DWORD PTR [esp]
  44acdf:	mov    edi,DWORD PTR [eax+0x70]
  44ace2:	add    edi,DWORD PTR [ebp+0x4]
  44ace5:	mov    edx,0xd
  44acea:	mov    eax,DWORD PTR [ebp+0x4]
  44aced:	call   0x44a474
  44acf2:	mov    ebx,eax
  44acf4:	mov    eax,DWORD PTR [esp]
  44acf7:	imul   ebx,DWORD PTR [eax+0x74]
  44acfb:	mov    eax,edi
  44acfd:	and    eax,0x1ff
  44ad02:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44ad09:	mov    edx,0x5
  44ad0e:	mov    eax,ebx
  44ad10:	call   0x44a474
  44ad15:	mov    ebx,eax
  44ad17:	mov    eax,ebx
  44ad19:	and    eax,0x1f
  44ad1c:	mov    edx,eax
  44ad1e:	mov    eax,edi
  44ad20:	call   0x44a474
  44ad25:	mov    edi,eax
  44ad27:	xor    esi,ebx
  44ad29:	mov    edx,0x5
  44ad2e:	mov    eax,ebx
  44ad30:	call   0x44a474
  44ad35:	mov    ebx,eax
  44ad37:	xor    esi,ebx
  44ad39:	mov    eax,ebx
  44ad3b:	and    eax,0x1f
  44ad3e:	mov    edx,eax
  44ad40:	mov    eax,esi
  44ad42:	call   0x44a474
  44ad47:	mov    esi,eax
  44ad49:	mov    edx,0xd
  44ad4e:	mov    eax,DWORD PTR [ebp+0x4]
  44ad51:	call   0x44a474
  44ad56:	mov    DWORD PTR [ebp+0x4],eax
  44ad59:	add    DWORD PTR [ebp+0x8],esi
  44ad5c:	add    DWORD PTR [ebp+0xc],edi
  44ad5f:	xor    DWORD PTR [ebp+0x0],ebx
  44ad62:	mov    eax,DWORD PTR [esp]
  44ad65:	mov    edi,DWORD PTR [eax+0x78]
  44ad68:	add    edi,DWORD PTR [ebp+0x8]
  44ad6b:	mov    edx,0xd
  44ad70:	mov    eax,DWORD PTR [ebp+0x8]
  44ad73:	call   0x44a474
  44ad78:	mov    ebx,eax
  44ad7a:	mov    eax,DWORD PTR [esp]
  44ad7d:	imul   ebx,DWORD PTR [eax+0x7c]
  44ad81:	mov    eax,edi
  44ad83:	and    eax,0x1ff
  44ad88:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44ad8f:	mov    edx,0x5
  44ad94:	mov    eax,ebx
  44ad96:	call   0x44a474
  44ad9b:	mov    ebx,eax
  44ad9d:	mov    eax,ebx
  44ad9f:	and    eax,0x1f
  44ada2:	mov    edx,eax
  44ada4:	mov    eax,edi
  44ada6:	call   0x44a474
  44adab:	mov    edi,eax
  44adad:	xor    esi,ebx
  44adaf:	mov    edx,0x5
  44adb4:	mov    eax,ebx
  44adb6:	call   0x44a474
  44adbb:	mov    ebx,eax
  44adbd:	xor    esi,ebx
  44adbf:	mov    eax,ebx
  44adc1:	and    eax,0x1f
  44adc4:	mov    edx,eax
  44adc6:	mov    eax,esi
  44adc8:	call   0x44a474
  44adcd:	mov    esi,eax
  44adcf:	mov    edx,0xd
  44add4:	mov    eax,DWORD PTR [ebp+0x8]
  44add7:	call   0x44a474
  44addc:	mov    DWORD PTR [ebp+0x8],eax
  44addf:	add    DWORD PTR [ebp+0xc],esi
  44ade2:	add    DWORD PTR [ebp+0x0],edi
  44ade5:	xor    DWORD PTR [ebp+0x4],ebx
  44ade8:	mov    eax,DWORD PTR [esp]
  44adeb:	mov    edi,DWORD PTR [eax+0x80]
  44adf1:	add    edi,DWORD PTR [ebp+0xc]
  44adf4:	mov    edx,0xd
  44adf9:	mov    eax,DWORD PTR [ebp+0xc]
  44adfc:	call   0x44a474
  44ae01:	mov    ebx,eax
  44ae03:	mov    eax,DWORD PTR [esp]
  44ae06:	imul   ebx,DWORD PTR [eax+0x84]
  44ae0d:	mov    eax,edi
  44ae0f:	and    eax,0x1ff
  44ae14:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44ae1b:	mov    edx,0x5
  44ae20:	mov    eax,ebx
  44ae22:	call   0x44a474
  44ae27:	mov    ebx,eax
  44ae29:	mov    eax,ebx
  44ae2b:	and    eax,0x1f
  44ae2e:	mov    edx,eax
  44ae30:	mov    eax,edi
  44ae32:	call   0x44a474
  44ae37:	mov    edi,eax
  44ae39:	xor    esi,ebx
  44ae3b:	mov    edx,0x5
  44ae40:	mov    eax,ebx
  44ae42:	call   0x44a474
  44ae47:	mov    ebx,eax
  44ae49:	xor    esi,ebx
  44ae4b:	mov    eax,ebx
  44ae4d:	and    eax,0x1f
  44ae50:	mov    edx,eax
  44ae52:	mov    eax,esi
  44ae54:	call   0x44a474
  44ae59:	mov    esi,eax
  44ae5b:	mov    edx,0xd
  44ae60:	mov    eax,DWORD PTR [ebp+0xc]
  44ae63:	call   0x44a474
  44ae68:	mov    DWORD PTR [ebp+0xc],eax
  44ae6b:	add    DWORD PTR [ebp+0x0],esi
  44ae6e:	add    DWORD PTR [ebp+0x4],edi
  44ae71:	xor    DWORD PTR [ebp+0x8],ebx
  44ae74:	mov    eax,DWORD PTR [esp]
  44ae77:	mov    edi,DWORD PTR [eax+0x88]
  44ae7d:	add    edi,DWORD PTR [ebp+0x0]
  44ae80:	mov    edx,0xd
  44ae85:	mov    eax,DWORD PTR [ebp+0x0]
  44ae88:	call   0x44a474
  44ae8d:	mov    ebx,eax
  44ae8f:	mov    eax,DWORD PTR [esp]
  44ae92:	imul   ebx,DWORD PTR [eax+0x8c]
  44ae99:	mov    eax,edi
  44ae9b:	and    eax,0x1ff
  44aea0:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44aea7:	mov    edx,0x5
  44aeac:	mov    eax,ebx
  44aeae:	call   0x44a474
  44aeb3:	mov    ebx,eax
  44aeb5:	mov    eax,ebx
  44aeb7:	and    eax,0x1f
  44aeba:	mov    edx,eax
  44aebc:	mov    eax,edi
  44aebe:	call   0x44a474
  44aec3:	mov    edi,eax
  44aec5:	xor    esi,ebx
  44aec7:	mov    edx,0x5
  44aecc:	mov    eax,ebx
  44aece:	call   0x44a474
  44aed3:	mov    ebx,eax
  44aed5:	xor    esi,ebx
  44aed7:	mov    eax,ebx
  44aed9:	and    eax,0x1f
  44aedc:	mov    edx,eax
  44aede:	mov    eax,esi
  44aee0:	call   0x44a474
  44aee5:	mov    esi,eax
  44aee7:	mov    edx,0xd
  44aeec:	mov    eax,DWORD PTR [ebp+0x0]
  44aeef:	call   0x44a474
  44aef4:	mov    DWORD PTR [ebp+0x0],eax
  44aef7:	add    DWORD PTR [ebp+0x4],esi
  44aefa:	add    DWORD PTR [ebp+0x8],edi
  44aefd:	xor    DWORD PTR [ebp+0xc],ebx
  44af00:	mov    eax,DWORD PTR [esp]
  44af03:	mov    edi,DWORD PTR [eax+0x90]
  44af09:	add    edi,DWORD PTR [ebp+0x4]
  44af0c:	mov    edx,0xd
  44af11:	mov    eax,DWORD PTR [ebp+0x4]
  44af14:	call   0x44a474
  44af19:	mov    ebx,eax
  44af1b:	mov    eax,DWORD PTR [esp]
  44af1e:	imul   ebx,DWORD PTR [eax+0x94]
  44af25:	mov    eax,edi
  44af27:	and    eax,0x1ff
  44af2c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44af33:	mov    edx,0x5
  44af38:	mov    eax,ebx
  44af3a:	call   0x44a474
  44af3f:	mov    ebx,eax
  44af41:	mov    eax,ebx
  44af43:	and    eax,0x1f
  44af46:	mov    edx,eax
  44af48:	mov    eax,edi
  44af4a:	call   0x44a474
  44af4f:	mov    edi,eax
  44af51:	xor    esi,ebx
  44af53:	mov    edx,0x5
  44af58:	mov    eax,ebx
  44af5a:	call   0x44a474
  44af5f:	mov    ebx,eax
  44af61:	xor    esi,ebx
  44af63:	mov    eax,ebx
  44af65:	and    eax,0x1f
  44af68:	mov    edx,eax
  44af6a:	mov    eax,esi
  44af6c:	call   0x44a474
  44af71:	mov    esi,eax
  44af73:	mov    edx,0xd
  44af78:	mov    eax,DWORD PTR [ebp+0x4]
  44af7b:	call   0x44a474
  44af80:	mov    DWORD PTR [ebp+0x4],eax
  44af83:	add    DWORD PTR [ebp+0x8],esi
  44af86:	add    DWORD PTR [ebp+0xc],edi
  44af89:	xor    DWORD PTR [ebp+0x0],ebx
  44af8c:	mov    eax,DWORD PTR [esp]
  44af8f:	mov    edi,DWORD PTR [eax+0x98]
  44af95:	add    edi,DWORD PTR [ebp+0x8]
  44af98:	mov    edx,0xd
  44af9d:	mov    eax,DWORD PTR [ebp+0x8]
  44afa0:	call   0x44a474
  44afa5:	mov    ebx,eax
  44afa7:	mov    eax,DWORD PTR [esp]
  44afaa:	imul   ebx,DWORD PTR [eax+0x9c]
  44afb1:	mov    eax,edi
  44afb3:	and    eax,0x1ff
  44afb8:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44afbf:	mov    edx,0x5
  44afc4:	mov    eax,ebx
  44afc6:	call   0x44a474
  44afcb:	mov    ebx,eax
  44afcd:	mov    eax,ebx
  44afcf:	and    eax,0x1f
  44afd2:	mov    edx,eax
  44afd4:	mov    eax,edi
  44afd6:	call   0x44a474
  44afdb:	mov    edi,eax
  44afdd:	xor    esi,ebx
  44afdf:	mov    edx,0x5
  44afe4:	mov    eax,ebx
  44afe6:	call   0x44a474
  44afeb:	mov    ebx,eax
  44afed:	xor    esi,ebx
  44afef:	mov    eax,ebx
  44aff1:	and    eax,0x1f
  44aff4:	mov    edx,eax
  44aff6:	mov    eax,esi
  44aff8:	call   0x44a474
  44affd:	mov    esi,eax
  44afff:	mov    edx,0xd
  44b004:	mov    eax,DWORD PTR [ebp+0x8]
  44b007:	call   0x44a474
  44b00c:	mov    DWORD PTR [ebp+0x8],eax
  44b00f:	add    DWORD PTR [ebp+0xc],esi
  44b012:	add    DWORD PTR [ebp+0x0],edi
  44b015:	xor    DWORD PTR [ebp+0x4],ebx
  44b018:	mov    eax,DWORD PTR [esp]
  44b01b:	mov    edi,DWORD PTR [eax+0xa0]
  44b021:	add    edi,DWORD PTR [ebp+0xc]
  44b024:	mov    edx,0xd
  44b029:	mov    eax,DWORD PTR [ebp+0xc]
  44b02c:	call   0x44a474
  44b031:	mov    ebx,eax
  44b033:	mov    eax,DWORD PTR [esp]
  44b036:	imul   ebx,DWORD PTR [eax+0xa4]
  44b03d:	mov    eax,edi
  44b03f:	and    eax,0x1ff
  44b044:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b04b:	mov    edx,0x5
  44b050:	mov    eax,ebx
  44b052:	call   0x44a474
  44b057:	mov    ebx,eax
  44b059:	mov    eax,ebx
  44b05b:	and    eax,0x1f
  44b05e:	mov    edx,eax
  44b060:	mov    eax,edi
  44b062:	call   0x44a474
  44b067:	mov    edi,eax
  44b069:	xor    esi,ebx
  44b06b:	mov    edx,0x5
  44b070:	mov    eax,ebx
  44b072:	call   0x44a474
  44b077:	mov    ebx,eax
  44b079:	xor    esi,ebx
  44b07b:	mov    eax,ebx
  44b07d:	and    eax,0x1f
  44b080:	mov    edx,eax
  44b082:	mov    eax,esi
  44b084:	call   0x44a474
  44b089:	mov    esi,eax
  44b08b:	mov    edx,0xd
  44b090:	mov    eax,DWORD PTR [ebp+0xc]
  44b093:	call   0x44a474
  44b098:	mov    DWORD PTR [ebp+0xc],eax
  44b09b:	add    DWORD PTR [ebp+0x0],esi
  44b09e:	add    DWORD PTR [ebp+0x4],edi
  44b0a1:	xor    DWORD PTR [ebp+0x8],ebx
  44b0a4:	mov    eax,DWORD PTR [esp]
  44b0a7:	mov    edi,DWORD PTR [eax+0xa8]
  44b0ad:	add    edi,DWORD PTR [ebp+0x0]
  44b0b0:	mov    edx,0xd
  44b0b5:	mov    eax,DWORD PTR [ebp+0x0]
  44b0b8:	call   0x44a474
  44b0bd:	mov    ebx,eax
  44b0bf:	mov    eax,DWORD PTR [esp]
  44b0c2:	imul   ebx,DWORD PTR [eax+0xac]
  44b0c9:	mov    eax,edi
  44b0cb:	and    eax,0x1ff
  44b0d0:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b0d7:	mov    edx,0x5
  44b0dc:	mov    eax,ebx
  44b0de:	call   0x44a474
  44b0e3:	mov    ebx,eax
  44b0e5:	mov    eax,ebx
  44b0e7:	and    eax,0x1f
  44b0ea:	mov    edx,eax
  44b0ec:	mov    eax,edi
  44b0ee:	call   0x44a474
  44b0f3:	mov    edi,eax
  44b0f5:	xor    esi,ebx
  44b0f7:	mov    edx,0x5
  44b0fc:	mov    eax,ebx
  44b0fe:	call   0x44a474
  44b103:	mov    ebx,eax
  44b105:	xor    esi,ebx
  44b107:	mov    eax,ebx
  44b109:	and    eax,0x1f
  44b10c:	mov    edx,eax
  44b10e:	mov    eax,esi
  44b110:	call   0x44a474
  44b115:	mov    esi,eax
  44b117:	mov    edx,0xd
  44b11c:	mov    eax,DWORD PTR [ebp+0x0]
  44b11f:	call   0x44a474
  44b124:	mov    DWORD PTR [ebp+0x0],eax
  44b127:	add    DWORD PTR [ebp+0xc],esi
  44b12a:	add    DWORD PTR [ebp+0x8],edi
  44b12d:	xor    DWORD PTR [ebp+0x4],ebx
  44b130:	mov    eax,DWORD PTR [esp]
  44b133:	mov    edi,DWORD PTR [eax+0xb0]
  44b139:	add    edi,DWORD PTR [ebp+0x4]
  44b13c:	mov    edx,0xd
  44b141:	mov    eax,DWORD PTR [ebp+0x4]
  44b144:	call   0x44a474
  44b149:	mov    ebx,eax
  44b14b:	mov    eax,DWORD PTR [esp]
  44b14e:	imul   ebx,DWORD PTR [eax+0xb4]
  44b155:	mov    eax,edi
  44b157:	and    eax,0x1ff
  44b15c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b163:	mov    edx,0x5
  44b168:	mov    eax,ebx
  44b16a:	call   0x44a474
  44b16f:	mov    ebx,eax
  44b171:	mov    eax,ebx
  44b173:	and    eax,0x1f
  44b176:	mov    edx,eax
  44b178:	mov    eax,edi
  44b17a:	call   0x44a474
  44b17f:	mov    edi,eax
  44b181:	xor    esi,ebx
  44b183:	mov    edx,0x5
  44b188:	mov    eax,ebx
  44b18a:	call   0x44a474
  44b18f:	mov    ebx,eax
  44b191:	xor    esi,ebx
  44b193:	mov    eax,ebx
  44b195:	and    eax,0x1f
  44b198:	mov    edx,eax
  44b19a:	mov    eax,esi
  44b19c:	call   0x44a474
  44b1a1:	mov    esi,eax
  44b1a3:	mov    edx,0xd
  44b1a8:	mov    eax,DWORD PTR [ebp+0x4]
  44b1ab:	call   0x44a474
  44b1b0:	mov    DWORD PTR [ebp+0x4],eax
  44b1b3:	add    DWORD PTR [ebp+0x0],esi
  44b1b6:	add    DWORD PTR [ebp+0xc],edi
  44b1b9:	xor    DWORD PTR [ebp+0x8],ebx
  44b1bc:	mov    eax,DWORD PTR [esp]
  44b1bf:	mov    edi,DWORD PTR [eax+0xb8]
  44b1c5:	add    edi,DWORD PTR [ebp+0x8]
  44b1c8:	mov    edx,0xd
  44b1cd:	mov    eax,DWORD PTR [ebp+0x8]
  44b1d0:	call   0x44a474
  44b1d5:	mov    ebx,eax
  44b1d7:	mov    eax,DWORD PTR [esp]
  44b1da:	imul   ebx,DWORD PTR [eax+0xbc]
  44b1e1:	mov    eax,edi
  44b1e3:	and    eax,0x1ff
  44b1e8:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b1ef:	mov    edx,0x5
  44b1f4:	mov    eax,ebx
  44b1f6:	call   0x44a474
  44b1fb:	mov    ebx,eax
  44b1fd:	mov    eax,ebx
  44b1ff:	and    eax,0x1f
  44b202:	mov    edx,eax
  44b204:	mov    eax,edi
  44b206:	call   0x44a474
  44b20b:	mov    edi,eax
  44b20d:	xor    esi,ebx
  44b20f:	mov    edx,0x5
  44b214:	mov    eax,ebx
  44b216:	call   0x44a474
  44b21b:	mov    ebx,eax
  44b21d:	xor    esi,ebx
  44b21f:	mov    eax,ebx
  44b221:	and    eax,0x1f
  44b224:	mov    edx,eax
  44b226:	mov    eax,esi
  44b228:	call   0x44a474
  44b22d:	mov    esi,eax
  44b22f:	mov    edx,0xd
  44b234:	mov    eax,DWORD PTR [ebp+0x8]
  44b237:	call   0x44a474
  44b23c:	mov    DWORD PTR [ebp+0x8],eax
  44b23f:	add    DWORD PTR [ebp+0x4],esi
  44b242:	add    DWORD PTR [ebp+0x0],edi
  44b245:	xor    DWORD PTR [ebp+0xc],ebx
  44b248:	mov    eax,DWORD PTR [esp]
  44b24b:	mov    edi,DWORD PTR [eax+0xc0]
  44b251:	add    edi,DWORD PTR [ebp+0xc]
  44b254:	mov    edx,0xd
  44b259:	mov    eax,DWORD PTR [ebp+0xc]
  44b25c:	call   0x44a474
  44b261:	mov    ebx,eax
  44b263:	mov    eax,DWORD PTR [esp]
  44b266:	imul   ebx,DWORD PTR [eax+0xc4]
  44b26d:	mov    eax,edi
  44b26f:	and    eax,0x1ff
  44b274:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b27b:	mov    edx,0x5
  44b280:	mov    eax,ebx
  44b282:	call   0x44a474
  44b287:	mov    ebx,eax
  44b289:	mov    eax,ebx
  44b28b:	and    eax,0x1f
  44b28e:	mov    edx,eax
  44b290:	mov    eax,edi
  44b292:	call   0x44a474
  44b297:	mov    edi,eax
  44b299:	xor    esi,ebx
  44b29b:	mov    edx,0x5
  44b2a0:	mov    eax,ebx
  44b2a2:	call   0x44a474
  44b2a7:	mov    ebx,eax
  44b2a9:	xor    esi,ebx
  44b2ab:	mov    eax,ebx
  44b2ad:	and    eax,0x1f
  44b2b0:	mov    edx,eax
  44b2b2:	mov    eax,esi
  44b2b4:	call   0x44a474
  44b2b9:	mov    esi,eax
  44b2bb:	mov    edx,0xd
  44b2c0:	mov    eax,DWORD PTR [ebp+0xc]
  44b2c3:	call   0x44a474
  44b2c8:	mov    DWORD PTR [ebp+0xc],eax
  44b2cb:	add    DWORD PTR [ebp+0x8],esi
  44b2ce:	add    DWORD PTR [ebp+0x4],edi
  44b2d1:	xor    DWORD PTR [ebp+0x0],ebx
  44b2d4:	mov    eax,DWORD PTR [esp]
  44b2d7:	mov    edi,DWORD PTR [eax+0xc8]
  44b2dd:	add    edi,DWORD PTR [ebp+0x0]
  44b2e0:	mov    edx,0xd
  44b2e5:	mov    eax,DWORD PTR [ebp+0x0]
  44b2e8:	call   0x44a474
  44b2ed:	mov    ebx,eax
  44b2ef:	mov    eax,DWORD PTR [esp]
  44b2f2:	imul   ebx,DWORD PTR [eax+0xcc]
  44b2f9:	mov    eax,edi
  44b2fb:	and    eax,0x1ff
  44b300:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b307:	mov    edx,0x5
  44b30c:	mov    eax,ebx
  44b30e:	call   0x44a474
  44b313:	mov    ebx,eax
  44b315:	mov    eax,ebx
  44b317:	and    eax,0x1f
  44b31a:	mov    edx,eax
  44b31c:	mov    eax,edi
  44b31e:	call   0x44a474
  44b323:	mov    edi,eax
  44b325:	xor    esi,ebx
  44b327:	mov    edx,0x5
  44b32c:	mov    eax,ebx
  44b32e:	call   0x44a474
  44b333:	mov    ebx,eax
  44b335:	xor    esi,ebx
  44b337:	mov    eax,ebx
  44b339:	and    eax,0x1f
  44b33c:	mov    edx,eax
  44b33e:	mov    eax,esi
  44b340:	call   0x44a474
  44b345:	mov    esi,eax
  44b347:	mov    edx,0xd
  44b34c:	mov    eax,DWORD PTR [ebp+0x0]
  44b34f:	call   0x44a474
  44b354:	mov    DWORD PTR [ebp+0x0],eax
  44b357:	add    DWORD PTR [ebp+0xc],esi
  44b35a:	add    DWORD PTR [ebp+0x8],edi
  44b35d:	xor    DWORD PTR [ebp+0x4],ebx
  44b360:	mov    eax,DWORD PTR [esp]
  44b363:	mov    edi,DWORD PTR [eax+0xd0]
  44b369:	add    edi,DWORD PTR [ebp+0x4]
  44b36c:	mov    edx,0xd
  44b371:	mov    eax,DWORD PTR [ebp+0x4]
  44b374:	call   0x44a474
  44b379:	mov    ebx,eax
  44b37b:	mov    eax,DWORD PTR [esp]
  44b37e:	imul   ebx,DWORD PTR [eax+0xd4]
  44b385:	mov    eax,edi
  44b387:	and    eax,0x1ff
  44b38c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b393:	mov    edx,0x5
  44b398:	mov    eax,ebx
  44b39a:	call   0x44a474
  44b39f:	mov    ebx,eax
  44b3a1:	mov    eax,ebx
  44b3a3:	and    eax,0x1f
  44b3a6:	mov    edx,eax
  44b3a8:	mov    eax,edi
  44b3aa:	call   0x44a474
  44b3af:	mov    edi,eax
  44b3b1:	xor    esi,ebx
  44b3b3:	mov    edx,0x5
  44b3b8:	mov    eax,ebx
  44b3ba:	call   0x44a474
  44b3bf:	mov    ebx,eax
  44b3c1:	xor    esi,ebx
  44b3c3:	mov    eax,ebx
  44b3c5:	and    eax,0x1f
  44b3c8:	mov    edx,eax
  44b3ca:	mov    eax,esi
  44b3cc:	call   0x44a474
  44b3d1:	mov    esi,eax
  44b3d3:	mov    edx,0xd
  44b3d8:	mov    eax,DWORD PTR [ebp+0x4]
  44b3db:	call   0x44a474
  44b3e0:	mov    DWORD PTR [ebp+0x4],eax
  44b3e3:	add    DWORD PTR [ebp+0x0],esi
  44b3e6:	add    DWORD PTR [ebp+0xc],edi
  44b3e9:	xor    DWORD PTR [ebp+0x8],ebx
  44b3ec:	mov    eax,DWORD PTR [esp]
  44b3ef:	mov    edi,DWORD PTR [eax+0xd8]
  44b3f5:	add    edi,DWORD PTR [ebp+0x8]
  44b3f8:	mov    edx,0xd
  44b3fd:	mov    eax,DWORD PTR [ebp+0x8]
  44b400:	call   0x44a474
  44b405:	mov    ebx,eax
  44b407:	mov    eax,DWORD PTR [esp]
  44b40a:	imul   ebx,DWORD PTR [eax+0xdc]
  44b411:	mov    eax,edi
  44b413:	and    eax,0x1ff
  44b418:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b41f:	mov    edx,0x5
  44b424:	mov    eax,ebx
  44b426:	call   0x44a474
  44b42b:	mov    ebx,eax
  44b42d:	mov    eax,ebx
  44b42f:	and    eax,0x1f
  44b432:	mov    edx,eax
  44b434:	mov    eax,edi
  44b436:	call   0x44a474
  44b43b:	mov    edi,eax
  44b43d:	xor    esi,ebx
  44b43f:	mov    edx,0x5
  44b444:	mov    eax,ebx
  44b446:	call   0x44a474
  44b44b:	mov    ebx,eax
  44b44d:	xor    esi,ebx
  44b44f:	mov    eax,ebx
  44b451:	and    eax,0x1f
  44b454:	mov    edx,eax
  44b456:	mov    eax,esi
  44b458:	call   0x44a474
  44b45d:	mov    esi,eax
  44b45f:	mov    edx,0xd
  44b464:	mov    eax,DWORD PTR [ebp+0x8]
  44b467:	call   0x44a474
  44b46c:	mov    DWORD PTR [ebp+0x8],eax
  44b46f:	add    DWORD PTR [ebp+0x4],esi
  44b472:	add    DWORD PTR [ebp+0x0],edi
  44b475:	xor    DWORD PTR [ebp+0xc],ebx
  44b478:	mov    eax,DWORD PTR [esp]
  44b47b:	mov    edi,DWORD PTR [eax+0xe0]
  44b481:	add    edi,DWORD PTR [ebp+0xc]
  44b484:	mov    edx,0xd
  44b489:	mov    eax,DWORD PTR [ebp+0xc]
  44b48c:	call   0x44a474
  44b491:	mov    ebx,eax
  44b493:	mov    eax,DWORD PTR [esp]
  44b496:	imul   ebx,DWORD PTR [eax+0xe4]
  44b49d:	mov    eax,edi
  44b49f:	and    eax,0x1ff
  44b4a4:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44b4ab:	mov    edx,0x5
  44b4b0:	mov    eax,ebx
  44b4b2:	call   0x44a474
  44b4b7:	mov    ebx,eax
  44b4b9:	mov    eax,ebx
  44b4bb:	and    eax,0x1f
  44b4be:	mov    edx,eax
  44b4c0:	mov    eax,edi
  44b4c2:	call   0x44a474
  44b4c7:	mov    edi,eax
  44b4c9:	xor    esi,ebx
  44b4cb:	mov    edx,0x5
  44b4d0:	mov    eax,ebx
  44b4d2:	call   0x44a474
  44b4d7:	mov    ebx,eax
  44b4d9:	xor    esi,ebx
  44b4db:	mov    eax,ebx
  44b4dd:	and    eax,0x1f
  44b4e0:	mov    edx,eax
  44b4e2:	mov    eax,esi
  44b4e4:	call   0x44a474
  44b4e9:	mov    esi,eax
  44b4eb:	mov    edx,0xd
  44b4f0:	mov    eax,DWORD PTR [ebp+0xc]
  44b4f3:	call   0x44a474
  44b4f8:	mov    DWORD PTR [ebp+0xc],eax
  44b4fb:	add    DWORD PTR [ebp+0x8],esi
  44b4fe:	add    DWORD PTR [ebp+0x4],edi
  44b501:	xor    DWORD PTR [ebp+0x0],ebx
  44b504:	mov    eax,DWORD PTR [ebp+0x0]
  44b507:	and    eax,0xff
  44b50c:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b513:	xor    DWORD PTR [ebp+0x4],eax
  44b516:	mov    eax,DWORD PTR [ebp+0x0]
  44b519:	shr    eax,0x18
  44b51c:	and    eax,0xff
  44b521:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b528:	sub    DWORD PTR [ebp+0x8],eax
  44b52b:	mov    eax,DWORD PTR [ebp+0x0]
  44b52e:	shr    eax,0x10
  44b531:	and    eax,0xff
  44b536:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b53d:	sub    DWORD PTR [ebp+0xc],eax
  44b540:	mov    eax,DWORD PTR [ebp+0x0]
  44b543:	shr    eax,0x8
  44b546:	and    eax,0xff
  44b54b:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b552:	xor    DWORD PTR [ebp+0xc],eax
  44b555:	mov    edx,0x18
  44b55a:	mov    eax,DWORD PTR [ebp+0x0]
  44b55d:	call   0x44a474
  44b562:	mov    DWORD PTR [ebp+0x0],eax
  44b565:	mov    eax,DWORD PTR [ebp+0x4]
  44b568:	and    eax,0xff
  44b56d:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b574:	xor    DWORD PTR [ebp+0x8],eax
  44b577:	mov    eax,DWORD PTR [ebp+0x4]
  44b57a:	shr    eax,0x18
  44b57d:	and    eax,0xff
  44b582:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b589:	sub    DWORD PTR [ebp+0xc],eax
  44b58c:	mov    eax,DWORD PTR [ebp+0x4]
  44b58f:	shr    eax,0x10
  44b592:	and    eax,0xff
  44b597:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b59e:	sub    DWORD PTR [ebp+0x0],eax
  44b5a1:	mov    eax,DWORD PTR [ebp+0x4]
  44b5a4:	shr    eax,0x8
  44b5a7:	and    eax,0xff
  44b5ac:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b5b3:	xor    DWORD PTR [ebp+0x0],eax
  44b5b6:	mov    edx,0x18
  44b5bb:	mov    eax,DWORD PTR [ebp+0x4]
  44b5be:	call   0x44a474
  44b5c3:	mov    ebx,eax
  44b5c5:	mov    DWORD PTR [ebp+0x4],ebx
  44b5c8:	sub    DWORD PTR [ebp+0x8],ebx
  44b5cb:	mov    eax,DWORD PTR [ebp+0x8]
  44b5ce:	and    eax,0xff
  44b5d3:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b5da:	xor    DWORD PTR [ebp+0xc],eax
  44b5dd:	mov    eax,DWORD PTR [ebp+0x8]
  44b5e0:	shr    eax,0x18
  44b5e3:	and    eax,0xff
  44b5e8:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b5ef:	sub    DWORD PTR [ebp+0x0],eax
  44b5f2:	mov    eax,DWORD PTR [ebp+0x8]
  44b5f5:	shr    eax,0x10
  44b5f8:	and    eax,0xff
  44b5fd:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b604:	sub    DWORD PTR [ebp+0x4],eax
  44b607:	mov    eax,DWORD PTR [ebp+0x8]
  44b60a:	shr    eax,0x8
  44b60d:	and    eax,0xff
  44b612:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b619:	xor    DWORD PTR [ebp+0x4],eax
  44b61c:	mov    edx,0x18
  44b621:	mov    eax,DWORD PTR [ebp+0x8]
  44b624:	call   0x44a474
  44b629:	mov    DWORD PTR [ebp+0x8],eax
  44b62c:	mov    eax,DWORD PTR [ebp+0x0]
  44b62f:	sub    DWORD PTR [ebp+0xc],eax
  44b632:	mov    eax,DWORD PTR [ebp+0xc]
  44b635:	and    eax,0xff
  44b63a:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b641:	xor    DWORD PTR [ebp+0x0],eax
  44b644:	mov    eax,DWORD PTR [ebp+0xc]
  44b647:	shr    eax,0x18
  44b64a:	and    eax,0xff
  44b64f:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b656:	sub    DWORD PTR [ebp+0x4],eax
  44b659:	mov    eax,DWORD PTR [ebp+0xc]
  44b65c:	shr    eax,0x10
  44b65f:	and    eax,0xff
  44b664:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b66b:	sub    DWORD PTR [ebp+0x8],eax
  44b66e:	mov    eax,DWORD PTR [ebp+0xc]
  44b671:	shr    eax,0x8
  44b674:	and    eax,0xff
  44b679:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b680:	xor    DWORD PTR [ebp+0x8],eax
  44b683:	mov    edx,0x18
  44b688:	mov    eax,DWORD PTR [ebp+0xc]
  44b68b:	call   0x44a474
  44b690:	mov    DWORD PTR [ebp+0xc],eax
  44b693:	mov    eax,DWORD PTR [ebp+0x0]
  44b696:	and    eax,0xff
  44b69b:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b6a2:	xor    DWORD PTR [ebp+0x4],eax
  44b6a5:	mov    eax,DWORD PTR [ebp+0x0]
  44b6a8:	shr    eax,0x18
  44b6ab:	and    eax,0xff
  44b6b0:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b6b7:	sub    DWORD PTR [ebp+0x8],eax
  44b6ba:	mov    eax,DWORD PTR [ebp+0x0]
  44b6bd:	shr    eax,0x10
  44b6c0:	and    eax,0xff
  44b6c5:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b6cc:	sub    DWORD PTR [ebp+0xc],eax
  44b6cf:	mov    eax,DWORD PTR [ebp+0x0]
  44b6d2:	shr    eax,0x8
  44b6d5:	and    eax,0xff
  44b6da:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b6e1:	xor    DWORD PTR [ebp+0xc],eax
  44b6e4:	mov    edx,0x18
  44b6e9:	mov    eax,DWORD PTR [ebp+0x0]
  44b6ec:	call   0x44a474
  44b6f1:	mov    DWORD PTR [ebp+0x0],eax
  44b6f4:	mov    eax,DWORD PTR [ebp+0x4]
  44b6f7:	and    eax,0xff
  44b6fc:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b703:	xor    DWORD PTR [ebp+0x8],eax
  44b706:	mov    eax,DWORD PTR [ebp+0x4]
  44b709:	shr    eax,0x18
  44b70c:	and    eax,0xff
  44b711:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b718:	sub    DWORD PTR [ebp+0xc],eax
  44b71b:	mov    eax,DWORD PTR [ebp+0x4]
  44b71e:	shr    eax,0x10
  44b721:	and    eax,0xff
  44b726:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b72d:	sub    DWORD PTR [ebp+0x0],eax
  44b730:	mov    eax,DWORD PTR [ebp+0x4]
  44b733:	shr    eax,0x8
  44b736:	and    eax,0xff
  44b73b:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b742:	xor    DWORD PTR [ebp+0x0],eax
  44b745:	mov    edx,0x18
  44b74a:	mov    eax,DWORD PTR [ebp+0x4]
  44b74d:	call   0x44a474
  44b752:	mov    ebx,eax
  44b754:	mov    DWORD PTR [ebp+0x4],ebx
  44b757:	sub    DWORD PTR [ebp+0x8],ebx
  44b75a:	mov    eax,DWORD PTR [ebp+0x8]
  44b75d:	and    eax,0xff
  44b762:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b769:	xor    DWORD PTR [ebp+0xc],eax
  44b76c:	mov    eax,DWORD PTR [ebp+0x8]
  44b76f:	shr    eax,0x18
  44b772:	and    eax,0xff
  44b777:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b77e:	sub    DWORD PTR [ebp+0x0],eax
  44b781:	mov    eax,DWORD PTR [ebp+0x8]
  44b784:	shr    eax,0x10
  44b787:	and    eax,0xff
  44b78c:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b793:	sub    DWORD PTR [ebp+0x4],eax
  44b796:	mov    eax,DWORD PTR [ebp+0x8]
  44b799:	shr    eax,0x8
  44b79c:	and    eax,0xff
  44b7a1:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b7a8:	xor    DWORD PTR [ebp+0x4],eax
  44b7ab:	mov    edx,0x18
  44b7b0:	mov    eax,DWORD PTR [ebp+0x8]
  44b7b3:	call   0x44a474
  44b7b8:	mov    DWORD PTR [ebp+0x8],eax
  44b7bb:	mov    eax,DWORD PTR [ebp+0x0]
  44b7be:	sub    DWORD PTR [ebp+0xc],eax
  44b7c1:	mov    eax,DWORD PTR [ebp+0xc]
  44b7c4:	and    eax,0xff
  44b7c9:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b7d0:	xor    DWORD PTR [ebp+0x0],eax
  44b7d3:	mov    eax,DWORD PTR [ebp+0xc]
  44b7d6:	shr    eax,0x18
  44b7d9:	and    eax,0xff
  44b7de:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b7e5:	sub    DWORD PTR [ebp+0x4],eax
  44b7e8:	mov    eax,DWORD PTR [ebp+0xc]
  44b7eb:	shr    eax,0x10
  44b7ee:	and    eax,0xff
  44b7f3:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b7fa:	sub    DWORD PTR [ebp+0x8],eax
  44b7fd:	mov    eax,DWORD PTR [ebp+0xc]
  44b800:	shr    eax,0x8
  44b803:	and    eax,0xff
  44b808:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b80f:	xor    DWORD PTR [ebp+0x8],eax
  44b812:	mov    edx,0x18
  44b817:	mov    eax,DWORD PTR [ebp+0xc]
  44b81a:	call   0x44a474
  44b81f:	mov    DWORD PTR [ebp+0xc],eax
  44b822:	mov    eax,DWORD PTR [esp]
  44b825:	mov    eax,DWORD PTR [eax+0xe8]
  44b82b:	sub    DWORD PTR [ebp+0x0],eax
  44b82e:	mov    eax,DWORD PTR [esp]
  44b831:	mov    eax,DWORD PTR [eax+0xec]
  44b837:	sub    DWORD PTR [ebp+0x4],eax
  44b83a:	mov    eax,DWORD PTR [esp]
  44b83d:	mov    eax,DWORD PTR [eax+0xf0]
  44b843:	sub    DWORD PTR [ebp+0x8],eax
  44b846:	mov    eax,DWORD PTR [esp]
  44b849:	mov    eax,DWORD PTR [eax+0xf4]
  44b84f:	sub    DWORD PTR [ebp+0xc],eax
  44b852:	mov    eax,DWORD PTR [esp+0x4]
  44b856:	mov    edx,DWORD PTR [ebp+0x0]
  44b859:	mov    DWORD PTR [eax],edx
  44b85b:	mov    eax,DWORD PTR [esp+0x4]
  44b85f:	add    eax,0x4
  44b862:	mov    edx,DWORD PTR [ebp+0x4]
  44b865:	mov    DWORD PTR [eax],edx
  44b867:	mov    eax,DWORD PTR [esp+0x4]
  44b86b:	add    eax,0x8
  44b86e:	mov    edx,DWORD PTR [ebp+0x8]
  44b871:	mov    DWORD PTR [eax],edx
  44b873:	mov    eax,DWORD PTR [esp+0x4]
  44b877:	add    eax,0xc
  44b87a:	mov    edx,DWORD PTR [ebp+0xc]
  44b87d:	mov    DWORD PTR [eax],edx
  44b87f:	add    esp,0x18
  44b882:	pop    ebp
  44b883:	pop    edi
  44b884:	pop    esi
  44b885:	pop    ebx
  44b886:	ret    
  44b887:	add    bh,bh
  44b889:	(bad)  
  44b88a:	(bad)  
  44b88b:	call   DWORD PTR [esi]
  44b88d:	add    BYTE PTR [eax],al
  44b88f:	add    BYTE PTR [ebx+0x69],al
  44b892:	jo     0x44b8fc
  44b894:	gs jb  0x44b8b7
  44b897:	outs   dx,BYTE PTR ds:[esi]
  44b898:	outs   dx,DWORD PTR ds:[esi]
  44b899:	je     0x44b8bb
  44b89b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44b8a2:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44b8a9:	push   esi
  44b8aa:	push   edi
  44b8ab:	push   ebp
  44b8ac:	add    esp,0xffffffe8
  44b8af:	mov    DWORD PTR [esp+0x4],ecx
  44b8b3:	mov    DWORD PTR [esp],eax
  44b8b6:	lea    ebp,[esp+0x8]
  44b8ba:	mov    eax,DWORD PTR [esp]
  44b8bd:	cmp    BYTE PTR [eax+0x30],0x0
  44b8c1:	jne    0x44b8d9
  44b8c3:	mov    ecx,0x44c870
  44b8c8:	mov    dl,0x1
  44b8ca:	mov    eax,ds:0x441af8
  44b8cf:	call   0x40c8b4
  44b8d4:	call   0x4048fc
  44b8d9:	mov    ecx,edx
  44b8db:	mov    eax,DWORD PTR [ecx]
  44b8dd:	mov    DWORD PTR [ebp+0x0],eax
  44b8e0:	mov    eax,ecx
  44b8e2:	mov    ecx,eax
  44b8e4:	add    ecx,0x4
  44b8e7:	mov    ecx,DWORD PTR [ecx]
  44b8e9:	mov    DWORD PTR [ebp+0x4],ecx
  44b8ec:	mov    ecx,eax
  44b8ee:	add    ecx,0x8
  44b8f1:	mov    ecx,DWORD PTR [ecx]
  44b8f3:	mov    DWORD PTR [ebp+0x8],ecx
  44b8f6:	add    eax,0xc
  44b8f9:	mov    eax,DWORD PTR [eax]
  44b8fb:	mov    DWORD PTR [ebp+0xc],eax
  44b8fe:	mov    eax,DWORD PTR [esp]
  44b901:	mov    eax,DWORD PTR [eax+0xe8]
  44b907:	add    DWORD PTR [ebp+0x0],eax
  44b90a:	mov    eax,DWORD PTR [esp]
  44b90d:	mov    eax,DWORD PTR [eax+0xec]
  44b913:	add    DWORD PTR [ebp+0x4],eax
  44b916:	mov    eax,DWORD PTR [esp]
  44b919:	mov    eax,DWORD PTR [eax+0xf0]
  44b91f:	add    DWORD PTR [ebp+0x8],eax
  44b922:	mov    eax,DWORD PTR [esp]
  44b925:	mov    eax,DWORD PTR [eax+0xf4]
  44b92b:	add    DWORD PTR [ebp+0xc],eax
  44b92e:	mov    edx,0x18
  44b933:	mov    eax,DWORD PTR [ebp+0xc]
  44b936:	call   0x44a48c
  44b93b:	mov    ebx,eax
  44b93d:	mov    DWORD PTR [ebp+0xc],ebx
  44b940:	shr    ebx,0x8
  44b943:	and    ebx,0xff
  44b949:	mov    eax,DWORD PTR [ebx*4+0x468c8c]
  44b950:	xor    DWORD PTR [ebp+0x8],eax
  44b953:	mov    eax,DWORD PTR [ebp+0xc]
  44b956:	shr    eax,0x10
  44b959:	and    eax,0xff
  44b95e:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b965:	add    DWORD PTR [ebp+0x8],eax
  44b968:	mov    eax,DWORD PTR [ebp+0xc]
  44b96b:	shr    eax,0x18
  44b96e:	and    eax,0xff
  44b973:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b97a:	add    DWORD PTR [ebp+0x4],eax
  44b97d:	mov    eax,DWORD PTR [ebp+0xc]
  44b980:	and    eax,0xff
  44b985:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b98c:	xor    DWORD PTR [ebp+0x0],eax
  44b98f:	mov    eax,DWORD PTR [ebp+0x0]
  44b992:	add    DWORD PTR [ebp+0xc],eax
  44b995:	mov    edx,0x18
  44b99a:	mov    eax,DWORD PTR [ebp+0x8]
  44b99d:	call   0x44a48c
  44b9a2:	mov    ebx,eax
  44b9a4:	mov    DWORD PTR [ebp+0x8],ebx
  44b9a7:	shr    ebx,0x8
  44b9aa:	and    ebx,0xff
  44b9b0:	mov    eax,DWORD PTR [ebx*4+0x468c8c]
  44b9b7:	xor    DWORD PTR [ebp+0x4],eax
  44b9ba:	mov    eax,DWORD PTR [ebp+0x8]
  44b9bd:	shr    eax,0x10
  44b9c0:	and    eax,0xff
  44b9c5:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b9cc:	add    DWORD PTR [ebp+0x4],eax
  44b9cf:	mov    eax,DWORD PTR [ebp+0x8]
  44b9d2:	shr    eax,0x18
  44b9d5:	and    eax,0xff
  44b9da:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44b9e1:	add    DWORD PTR [ebp+0x0],eax
  44b9e4:	mov    eax,DWORD PTR [ebp+0x8]
  44b9e7:	and    eax,0xff
  44b9ec:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44b9f3:	xor    DWORD PTR [ebp+0xc],eax
  44b9f6:	mov    eax,DWORD PTR [ebp+0x4]
  44b9f9:	add    DWORD PTR [ebp+0x8],eax
  44b9fc:	mov    edx,0x18
  44ba01:	mov    eax,DWORD PTR [ebp+0x4]
  44ba04:	call   0x44a48c
  44ba09:	mov    ebx,eax
  44ba0b:	mov    DWORD PTR [ebp+0x4],ebx
  44ba0e:	shr    ebx,0x8
  44ba11:	and    ebx,0xff
  44ba17:	mov    eax,DWORD PTR [ebx*4+0x468c8c]
  44ba1e:	xor    DWORD PTR [ebp+0x0],eax
  44ba21:	mov    eax,DWORD PTR [ebp+0x4]
  44ba24:	shr    eax,0x10
  44ba27:	and    eax,0xff
  44ba2c:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ba33:	add    DWORD PTR [ebp+0x0],eax
  44ba36:	mov    eax,DWORD PTR [ebp+0x4]
  44ba39:	shr    eax,0x18
  44ba3c:	and    eax,0xff
  44ba41:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44ba48:	add    DWORD PTR [ebp+0xc],eax
  44ba4b:	mov    eax,DWORD PTR [ebp+0x4]
  44ba4e:	and    eax,0xff
  44ba53:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ba5a:	xor    DWORD PTR [ebp+0x8],eax
  44ba5d:	mov    edx,0x18
  44ba62:	mov    eax,DWORD PTR [ebp+0x0]
  44ba65:	call   0x44a48c
  44ba6a:	mov    ebx,eax
  44ba6c:	mov    DWORD PTR [ebp+0x0],ebx
  44ba6f:	shr    ebx,0x8
  44ba72:	and    ebx,0xff
  44ba78:	mov    eax,DWORD PTR [ebx*4+0x468c8c]
  44ba7f:	xor    DWORD PTR [ebp+0xc],eax
  44ba82:	mov    eax,DWORD PTR [ebp+0x0]
  44ba85:	shr    eax,0x10
  44ba88:	and    eax,0xff
  44ba8d:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44ba94:	add    DWORD PTR [ebp+0xc],eax
  44ba97:	mov    eax,DWORD PTR [ebp+0x0]
  44ba9a:	shr    eax,0x18
  44ba9d:	and    eax,0xff
  44baa2:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44baa9:	add    DWORD PTR [ebp+0x8],eax
  44baac:	mov    eax,DWORD PTR [ebp+0x0]
  44baaf:	and    eax,0xff
  44bab4:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44babb:	xor    DWORD PTR [ebp+0x4],eax
  44babe:	mov    edx,0x18
  44bac3:	mov    eax,DWORD PTR [ebp+0xc]
  44bac6:	call   0x44a48c
  44bacb:	mov    DWORD PTR [ebp+0xc],eax
  44bace:	mov    eax,DWORD PTR [ebp+0xc]
  44bad1:	shr    eax,0x8
  44bad4:	and    eax,0xff
  44bad9:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bae0:	xor    DWORD PTR [ebp+0x8],eax
  44bae3:	mov    eax,DWORD PTR [ebp+0xc]
  44bae6:	shr    eax,0x10
  44bae9:	and    eax,0xff
  44baee:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44baf5:	add    DWORD PTR [ebp+0x8],eax
  44baf8:	mov    eax,DWORD PTR [ebp+0xc]
  44bafb:	shr    eax,0x18
  44bafe:	and    eax,0xff
  44bb03:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bb0a:	add    DWORD PTR [ebp+0x4],eax
  44bb0d:	mov    eax,DWORD PTR [ebp+0xc]
  44bb10:	and    eax,0xff
  44bb15:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bb1c:	xor    DWORD PTR [ebp+0x0],eax
  44bb1f:	mov    eax,DWORD PTR [ebp+0x0]
  44bb22:	add    DWORD PTR [ebp+0xc],eax
  44bb25:	mov    edx,0x18
  44bb2a:	mov    eax,DWORD PTR [ebp+0x8]
  44bb2d:	call   0x44a48c
  44bb32:	mov    DWORD PTR [ebp+0x8],eax
  44bb35:	mov    eax,DWORD PTR [ebp+0x8]
  44bb38:	shr    eax,0x8
  44bb3b:	and    eax,0xff
  44bb40:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bb47:	xor    DWORD PTR [ebp+0x4],eax
  44bb4a:	mov    eax,DWORD PTR [ebp+0x8]
  44bb4d:	shr    eax,0x10
  44bb50:	and    eax,0xff
  44bb55:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bb5c:	add    DWORD PTR [ebp+0x4],eax
  44bb5f:	mov    eax,DWORD PTR [ebp+0x8]
  44bb62:	shr    eax,0x18
  44bb65:	and    eax,0xff
  44bb6a:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bb71:	add    DWORD PTR [ebp+0x0],eax
  44bb74:	mov    eax,DWORD PTR [ebp+0x8]
  44bb77:	and    eax,0xff
  44bb7c:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bb83:	xor    DWORD PTR [ebp+0xc],eax
  44bb86:	mov    eax,DWORD PTR [ebp+0x4]
  44bb89:	add    DWORD PTR [ebp+0x8],eax
  44bb8c:	mov    edx,0x18
  44bb91:	mov    eax,DWORD PTR [ebp+0x4]
  44bb94:	call   0x44a48c
  44bb99:	mov    DWORD PTR [ebp+0x4],eax
  44bb9c:	mov    eax,DWORD PTR [ebp+0x4]
  44bb9f:	shr    eax,0x8
  44bba2:	and    eax,0xff
  44bba7:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bbae:	xor    DWORD PTR [ebp+0x0],eax
  44bbb1:	mov    eax,DWORD PTR [ebp+0x4]
  44bbb4:	shr    eax,0x10
  44bbb7:	and    eax,0xff
  44bbbc:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bbc3:	add    DWORD PTR [ebp+0x0],eax
  44bbc6:	mov    eax,DWORD PTR [ebp+0x4]
  44bbc9:	shr    eax,0x18
  44bbcc:	and    eax,0xff
  44bbd1:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bbd8:	add    DWORD PTR [ebp+0xc],eax
  44bbdb:	mov    eax,DWORD PTR [ebp+0x4]
  44bbde:	and    eax,0xff
  44bbe3:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bbea:	xor    DWORD PTR [ebp+0x8],eax
  44bbed:	mov    edx,0x18
  44bbf2:	mov    eax,DWORD PTR [ebp+0x0]
  44bbf5:	call   0x44a48c
  44bbfa:	mov    DWORD PTR [ebp+0x0],eax
  44bbfd:	mov    eax,DWORD PTR [ebp+0x0]
  44bc00:	shr    eax,0x8
  44bc03:	and    eax,0xff
  44bc08:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bc0f:	xor    DWORD PTR [ebp+0xc],eax
  44bc12:	mov    eax,DWORD PTR [ebp+0x0]
  44bc15:	shr    eax,0x10
  44bc18:	and    eax,0xff
  44bc1d:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bc24:	add    DWORD PTR [ebp+0xc],eax
  44bc27:	mov    eax,DWORD PTR [ebp+0x0]
  44bc2a:	shr    eax,0x18
  44bc2d:	and    eax,0xff
  44bc32:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44bc39:	add    DWORD PTR [ebp+0x8],eax
  44bc3c:	mov    eax,DWORD PTR [ebp+0x0]
  44bc3f:	and    eax,0xff
  44bc44:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44bc4b:	xor    DWORD PTR [ebp+0x4],eax
  44bc4e:	mov    edx,0xd
  44bc53:	mov    eax,DWORD PTR [ebp+0xc]
  44bc56:	call   0x44a48c
  44bc5b:	mov    ebx,eax
  44bc5d:	mov    DWORD PTR [ebp+0xc],ebx
  44bc60:	mov    eax,DWORD PTR [esp]
  44bc63:	mov    edi,DWORD PTR [eax+0xe0]
  44bc69:	add    edi,ebx
  44bc6b:	mov    edx,0xd
  44bc70:	mov    eax,ebx
  44bc72:	call   0x44a474
  44bc77:	mov    edx,DWORD PTR [esp]
  44bc7a:	imul   DWORD PTR [edx+0xe4]
  44bc80:	mov    ebx,eax
  44bc82:	mov    eax,edi
  44bc84:	and    eax,0x1ff
  44bc89:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bc90:	mov    edx,0x5
  44bc95:	mov    eax,ebx
  44bc97:	call   0x44a474
  44bc9c:	mov    ebx,eax
  44bc9e:	mov    eax,ebx
  44bca0:	and    eax,0x1f
  44bca3:	mov    edx,eax
  44bca5:	mov    eax,edi
  44bca7:	call   0x44a474
  44bcac:	mov    edi,eax
  44bcae:	xor    esi,ebx
  44bcb0:	mov    edx,0x5
  44bcb5:	mov    eax,ebx
  44bcb7:	call   0x44a474
  44bcbc:	mov    ebx,eax
  44bcbe:	xor    esi,ebx
  44bcc0:	mov    eax,ebx
  44bcc2:	and    eax,0x1f
  44bcc5:	mov    edx,eax
  44bcc7:	mov    eax,esi
  44bcc9:	call   0x44a474
  44bcce:	mov    esi,eax
  44bcd0:	sub    DWORD PTR [ebp+0x8],esi
  44bcd3:	sub    DWORD PTR [ebp+0x4],edi
  44bcd6:	xor    DWORD PTR [ebp+0x0],ebx
  44bcd9:	mov    edx,0xd
  44bcde:	mov    eax,DWORD PTR [ebp+0x8]
  44bce1:	call   0x44a48c
  44bce6:	mov    ebx,eax
  44bce8:	mov    DWORD PTR [ebp+0x8],ebx
  44bceb:	mov    eax,DWORD PTR [esp]
  44bcee:	mov    edi,DWORD PTR [eax+0xd8]
  44bcf4:	add    edi,ebx
  44bcf6:	mov    edx,0xd
  44bcfb:	mov    eax,ebx
  44bcfd:	call   0x44a474
  44bd02:	mov    edx,DWORD PTR [esp]
  44bd05:	imul   DWORD PTR [edx+0xdc]
  44bd0b:	mov    ebx,eax
  44bd0d:	mov    eax,edi
  44bd0f:	and    eax,0x1ff
  44bd14:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bd1b:	mov    edx,0x5
  44bd20:	mov    eax,ebx
  44bd22:	call   0x44a474
  44bd27:	mov    ebx,eax
  44bd29:	mov    eax,ebx
  44bd2b:	and    eax,0x1f
  44bd2e:	mov    edx,eax
  44bd30:	mov    eax,edi
  44bd32:	call   0x44a474
  44bd37:	mov    edi,eax
  44bd39:	xor    esi,ebx
  44bd3b:	mov    edx,0x5
  44bd40:	mov    eax,ebx
  44bd42:	call   0x44a474
  44bd47:	mov    ebx,eax
  44bd49:	xor    esi,ebx
  44bd4b:	mov    eax,ebx
  44bd4d:	and    eax,0x1f
  44bd50:	mov    edx,eax
  44bd52:	mov    eax,esi
  44bd54:	call   0x44a474
  44bd59:	mov    esi,eax
  44bd5b:	sub    DWORD PTR [ebp+0x4],esi
  44bd5e:	sub    DWORD PTR [ebp+0x0],edi
  44bd61:	xor    DWORD PTR [ebp+0xc],ebx
  44bd64:	mov    edx,0xd
  44bd69:	mov    eax,DWORD PTR [ebp+0x4]
  44bd6c:	call   0x44a48c
  44bd71:	mov    ebx,eax
  44bd73:	mov    DWORD PTR [ebp+0x4],ebx
  44bd76:	mov    eax,DWORD PTR [esp]
  44bd79:	mov    edi,DWORD PTR [eax+0xd0]
  44bd7f:	add    edi,ebx
  44bd81:	mov    edx,0xd
  44bd86:	mov    eax,ebx
  44bd88:	call   0x44a474
  44bd8d:	mov    edx,DWORD PTR [esp]
  44bd90:	imul   DWORD PTR [edx+0xd4]
  44bd96:	mov    ebx,eax
  44bd98:	mov    eax,edi
  44bd9a:	and    eax,0x1ff
  44bd9f:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bda6:	mov    edx,0x5
  44bdab:	mov    eax,ebx
  44bdad:	call   0x44a474
  44bdb2:	mov    ebx,eax
  44bdb4:	mov    eax,ebx
  44bdb6:	and    eax,0x1f
  44bdb9:	mov    edx,eax
  44bdbb:	mov    eax,edi
  44bdbd:	call   0x44a474
  44bdc2:	mov    edi,eax
  44bdc4:	xor    esi,ebx
  44bdc6:	mov    edx,0x5
  44bdcb:	mov    eax,ebx
  44bdcd:	call   0x44a474
  44bdd2:	mov    ebx,eax
  44bdd4:	xor    esi,ebx
  44bdd6:	mov    eax,ebx
  44bdd8:	and    eax,0x1f
  44bddb:	mov    edx,eax
  44bddd:	mov    eax,esi
  44bddf:	call   0x44a474
  44bde4:	mov    esi,eax
  44bde6:	sub    DWORD PTR [ebp+0x0],esi
  44bde9:	sub    DWORD PTR [ebp+0xc],edi
  44bdec:	xor    DWORD PTR [ebp+0x8],ebx
  44bdef:	mov    edx,0xd
  44bdf4:	mov    eax,DWORD PTR [ebp+0x0]
  44bdf7:	call   0x44a48c
  44bdfc:	mov    ebx,eax
  44bdfe:	mov    DWORD PTR [ebp+0x0],ebx
  44be01:	mov    eax,DWORD PTR [esp]
  44be04:	mov    edi,DWORD PTR [eax+0xc8]
  44be0a:	add    edi,ebx
  44be0c:	mov    edx,0xd
  44be11:	mov    eax,ebx
  44be13:	call   0x44a474
  44be18:	mov    edx,DWORD PTR [esp]
  44be1b:	imul   DWORD PTR [edx+0xcc]
  44be21:	mov    ebx,eax
  44be23:	mov    eax,edi
  44be25:	and    eax,0x1ff
  44be2a:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44be31:	mov    edx,0x5
  44be36:	mov    eax,ebx
  44be38:	call   0x44a474
  44be3d:	mov    ebx,eax
  44be3f:	mov    eax,ebx
  44be41:	and    eax,0x1f
  44be44:	mov    edx,eax
  44be46:	mov    eax,edi
  44be48:	call   0x44a474
  44be4d:	mov    edi,eax
  44be4f:	xor    esi,ebx
  44be51:	mov    edx,0x5
  44be56:	mov    eax,ebx
  44be58:	call   0x44a474
  44be5d:	mov    ebx,eax
  44be5f:	xor    esi,ebx
  44be61:	mov    eax,ebx
  44be63:	and    eax,0x1f
  44be66:	mov    edx,eax
  44be68:	mov    eax,esi
  44be6a:	call   0x44a474
  44be6f:	mov    esi,eax
  44be71:	sub    DWORD PTR [ebp+0xc],esi
  44be74:	sub    DWORD PTR [ebp+0x8],edi
  44be77:	xor    DWORD PTR [ebp+0x4],ebx
  44be7a:	mov    edx,0xd
  44be7f:	mov    eax,DWORD PTR [ebp+0xc]
  44be82:	call   0x44a48c
  44be87:	mov    ebx,eax
  44be89:	mov    DWORD PTR [ebp+0xc],ebx
  44be8c:	mov    eax,DWORD PTR [esp]
  44be8f:	mov    edi,DWORD PTR [eax+0xc0]
  44be95:	add    edi,ebx
  44be97:	mov    edx,0xd
  44be9c:	mov    eax,ebx
  44be9e:	call   0x44a474
  44bea3:	mov    edx,DWORD PTR [esp]
  44bea6:	imul   DWORD PTR [edx+0xc4]
  44beac:	mov    ebx,eax
  44beae:	mov    eax,edi
  44beb0:	and    eax,0x1ff
  44beb5:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bebc:	mov    edx,0x5
  44bec1:	mov    eax,ebx
  44bec3:	call   0x44a474
  44bec8:	mov    ebx,eax
  44beca:	mov    eax,ebx
  44becc:	and    eax,0x1f
  44becf:	mov    edx,eax
  44bed1:	mov    eax,edi
  44bed3:	call   0x44a474
  44bed8:	mov    edi,eax
  44beda:	xor    esi,ebx
  44bedc:	mov    edx,0x5
  44bee1:	mov    eax,ebx
  44bee3:	call   0x44a474
  44bee8:	mov    ebx,eax
  44beea:	xor    esi,ebx
  44beec:	mov    eax,ebx
  44beee:	and    eax,0x1f
  44bef1:	mov    edx,eax
  44bef3:	mov    eax,esi
  44bef5:	call   0x44a474
  44befa:	mov    esi,eax
  44befc:	sub    DWORD PTR [ebp+0x8],esi
  44beff:	sub    DWORD PTR [ebp+0x4],edi
  44bf02:	xor    DWORD PTR [ebp+0x0],ebx
  44bf05:	mov    edx,0xd
  44bf0a:	mov    eax,DWORD PTR [ebp+0x8]
  44bf0d:	call   0x44a48c
  44bf12:	mov    ebx,eax
  44bf14:	mov    DWORD PTR [ebp+0x8],ebx
  44bf17:	mov    eax,DWORD PTR [esp]
  44bf1a:	mov    edi,DWORD PTR [eax+0xb8]
  44bf20:	add    edi,ebx
  44bf22:	mov    edx,0xd
  44bf27:	mov    eax,ebx
  44bf29:	call   0x44a474
  44bf2e:	mov    edx,DWORD PTR [esp]
  44bf31:	imul   DWORD PTR [edx+0xbc]
  44bf37:	mov    ebx,eax
  44bf39:	mov    eax,edi
  44bf3b:	and    eax,0x1ff
  44bf40:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bf47:	mov    edx,0x5
  44bf4c:	mov    eax,ebx
  44bf4e:	call   0x44a474
  44bf53:	mov    ebx,eax
  44bf55:	mov    eax,ebx
  44bf57:	and    eax,0x1f
  44bf5a:	mov    edx,eax
  44bf5c:	mov    eax,edi
  44bf5e:	call   0x44a474
  44bf63:	mov    edi,eax
  44bf65:	xor    esi,ebx
  44bf67:	mov    edx,0x5
  44bf6c:	mov    eax,ebx
  44bf6e:	call   0x44a474
  44bf73:	mov    ebx,eax
  44bf75:	xor    esi,ebx
  44bf77:	mov    eax,ebx
  44bf79:	and    eax,0x1f
  44bf7c:	mov    edx,eax
  44bf7e:	mov    eax,esi
  44bf80:	call   0x44a474
  44bf85:	mov    esi,eax
  44bf87:	sub    DWORD PTR [ebp+0x4],esi
  44bf8a:	sub    DWORD PTR [ebp+0x0],edi
  44bf8d:	xor    DWORD PTR [ebp+0xc],ebx
  44bf90:	mov    edx,0xd
  44bf95:	mov    eax,DWORD PTR [ebp+0x4]
  44bf98:	call   0x44a48c
  44bf9d:	mov    ebx,eax
  44bf9f:	mov    DWORD PTR [ebp+0x4],ebx
  44bfa2:	mov    eax,DWORD PTR [esp]
  44bfa5:	mov    edi,DWORD PTR [eax+0xb0]
  44bfab:	add    edi,ebx
  44bfad:	mov    edx,0xd
  44bfb2:	mov    eax,ebx
  44bfb4:	call   0x44a474
  44bfb9:	mov    edx,DWORD PTR [esp]
  44bfbc:	imul   DWORD PTR [edx+0xb4]
  44bfc2:	mov    ebx,eax
  44bfc4:	mov    eax,edi
  44bfc6:	and    eax,0x1ff
  44bfcb:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44bfd2:	mov    edx,0x5
  44bfd7:	mov    eax,ebx
  44bfd9:	call   0x44a474
  44bfde:	mov    ebx,eax
  44bfe0:	mov    eax,ebx
  44bfe2:	and    eax,0x1f
  44bfe5:	mov    edx,eax
  44bfe7:	mov    eax,edi
  44bfe9:	call   0x44a474
  44bfee:	mov    edi,eax
  44bff0:	xor    esi,ebx
  44bff2:	mov    edx,0x5
  44bff7:	mov    eax,ebx
  44bff9:	call   0x44a474
  44bffe:	mov    ebx,eax
  44c000:	xor    esi,ebx
  44c002:	mov    eax,ebx
  44c004:	and    eax,0x1f
  44c007:	mov    edx,eax
  44c009:	mov    eax,esi
  44c00b:	call   0x44a474
  44c010:	mov    esi,eax
  44c012:	sub    DWORD PTR [ebp+0x0],esi
  44c015:	sub    DWORD PTR [ebp+0xc],edi
  44c018:	xor    DWORD PTR [ebp+0x8],ebx
  44c01b:	mov    edx,0xd
  44c020:	mov    eax,DWORD PTR [ebp+0x0]
  44c023:	call   0x44a48c
  44c028:	mov    ebx,eax
  44c02a:	mov    DWORD PTR [ebp+0x0],ebx
  44c02d:	mov    eax,DWORD PTR [esp]
  44c030:	mov    edi,DWORD PTR [eax+0xa8]
  44c036:	add    edi,ebx
  44c038:	mov    edx,0xd
  44c03d:	mov    eax,ebx
  44c03f:	call   0x44a474
  44c044:	mov    edx,DWORD PTR [esp]
  44c047:	imul   DWORD PTR [edx+0xac]
  44c04d:	mov    ebx,eax
  44c04f:	mov    eax,edi
  44c051:	and    eax,0x1ff
  44c056:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c05d:	mov    edx,0x5
  44c062:	mov    eax,ebx
  44c064:	call   0x44a474
  44c069:	mov    ebx,eax
  44c06b:	mov    eax,ebx
  44c06d:	and    eax,0x1f
  44c070:	mov    edx,eax
  44c072:	mov    eax,edi
  44c074:	call   0x44a474
  44c079:	mov    edi,eax
  44c07b:	xor    esi,ebx
  44c07d:	mov    edx,0x5
  44c082:	mov    eax,ebx
  44c084:	call   0x44a474
  44c089:	mov    ebx,eax
  44c08b:	xor    esi,ebx
  44c08d:	mov    eax,ebx
  44c08f:	and    eax,0x1f
  44c092:	mov    edx,eax
  44c094:	mov    eax,esi
  44c096:	call   0x44a474
  44c09b:	mov    esi,eax
  44c09d:	sub    DWORD PTR [ebp+0xc],esi
  44c0a0:	sub    DWORD PTR [ebp+0x8],edi
  44c0a3:	xor    DWORD PTR [ebp+0x4],ebx
  44c0a6:	mov    edx,0xd
  44c0ab:	mov    eax,DWORD PTR [ebp+0xc]
  44c0ae:	call   0x44a48c
  44c0b3:	mov    ebx,eax
  44c0b5:	mov    DWORD PTR [ebp+0xc],ebx
  44c0b8:	mov    eax,DWORD PTR [esp]
  44c0bb:	mov    edi,DWORD PTR [eax+0xa0]
  44c0c1:	add    edi,ebx
  44c0c3:	mov    edx,0xd
  44c0c8:	mov    eax,ebx
  44c0ca:	call   0x44a474
  44c0cf:	mov    edx,DWORD PTR [esp]
  44c0d2:	imul   DWORD PTR [edx+0xa4]
  44c0d8:	mov    ebx,eax
  44c0da:	mov    eax,edi
  44c0dc:	and    eax,0x1ff
  44c0e1:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c0e8:	mov    edx,0x5
  44c0ed:	mov    eax,ebx
  44c0ef:	call   0x44a474
  44c0f4:	mov    ebx,eax
  44c0f6:	mov    eax,ebx
  44c0f8:	and    eax,0x1f
  44c0fb:	mov    edx,eax
  44c0fd:	mov    eax,edi
  44c0ff:	call   0x44a474
  44c104:	mov    edi,eax
  44c106:	xor    esi,ebx
  44c108:	mov    edx,0x5
  44c10d:	mov    eax,ebx
  44c10f:	call   0x44a474
  44c114:	mov    ebx,eax
  44c116:	xor    esi,ebx
  44c118:	mov    eax,ebx
  44c11a:	and    eax,0x1f
  44c11d:	mov    edx,eax
  44c11f:	mov    eax,esi
  44c121:	call   0x44a474
  44c126:	mov    esi,eax
  44c128:	sub    DWORD PTR [ebp+0x0],esi
  44c12b:	sub    DWORD PTR [ebp+0x4],edi
  44c12e:	xor    DWORD PTR [ebp+0x8],ebx
  44c131:	mov    edx,0xd
  44c136:	mov    eax,DWORD PTR [ebp+0x8]
  44c139:	call   0x44a48c
  44c13e:	mov    ebx,eax
  44c140:	mov    DWORD PTR [ebp+0x8],ebx
  44c143:	mov    eax,DWORD PTR [esp]
  44c146:	mov    edi,DWORD PTR [eax+0x98]
  44c14c:	add    edi,ebx
  44c14e:	mov    edx,0xd
  44c153:	mov    eax,ebx
  44c155:	call   0x44a474
  44c15a:	mov    edx,DWORD PTR [esp]
  44c15d:	imul   DWORD PTR [edx+0x9c]
  44c163:	mov    ebx,eax
  44c165:	mov    eax,edi
  44c167:	and    eax,0x1ff
  44c16c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c173:	mov    edx,0x5
  44c178:	mov    eax,ebx
  44c17a:	call   0x44a474
  44c17f:	mov    ebx,eax
  44c181:	mov    eax,ebx
  44c183:	and    eax,0x1f
  44c186:	mov    edx,eax
  44c188:	mov    eax,edi
  44c18a:	call   0x44a474
  44c18f:	mov    edi,eax
  44c191:	xor    esi,ebx
  44c193:	mov    edx,0x5
  44c198:	mov    eax,ebx
  44c19a:	call   0x44a474
  44c19f:	mov    ebx,eax
  44c1a1:	xor    esi,ebx
  44c1a3:	mov    eax,ebx
  44c1a5:	and    eax,0x1f
  44c1a8:	mov    edx,eax
  44c1aa:	mov    eax,esi
  44c1ac:	call   0x44a474
  44c1b1:	mov    esi,eax
  44c1b3:	sub    DWORD PTR [ebp+0xc],esi
  44c1b6:	sub    DWORD PTR [ebp+0x0],edi
  44c1b9:	xor    DWORD PTR [ebp+0x4],ebx
  44c1bc:	mov    edx,0xd
  44c1c1:	mov    eax,DWORD PTR [ebp+0x4]
  44c1c4:	call   0x44a48c
  44c1c9:	mov    ebx,eax
  44c1cb:	mov    DWORD PTR [ebp+0x4],ebx
  44c1ce:	mov    eax,DWORD PTR [esp]
  44c1d1:	mov    edi,DWORD PTR [eax+0x90]
  44c1d7:	add    edi,ebx
  44c1d9:	mov    edx,0xd
  44c1de:	mov    eax,ebx
  44c1e0:	call   0x44a474
  44c1e5:	mov    edx,DWORD PTR [esp]
  44c1e8:	imul   DWORD PTR [edx+0x94]
  44c1ee:	mov    ebx,eax
  44c1f0:	mov    eax,edi
  44c1f2:	and    eax,0x1ff
  44c1f7:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c1fe:	mov    edx,0x5
  44c203:	mov    eax,ebx
  44c205:	call   0x44a474
  44c20a:	mov    ebx,eax
  44c20c:	mov    eax,ebx
  44c20e:	and    eax,0x1f
  44c211:	mov    edx,eax
  44c213:	mov    eax,edi
  44c215:	call   0x44a474
  44c21a:	mov    edi,eax
  44c21c:	xor    esi,ebx
  44c21e:	mov    edx,0x5
  44c223:	mov    eax,ebx
  44c225:	call   0x44a474
  44c22a:	mov    ebx,eax
  44c22c:	xor    esi,ebx
  44c22e:	mov    eax,ebx
  44c230:	and    eax,0x1f
  44c233:	mov    edx,eax
  44c235:	mov    eax,esi
  44c237:	call   0x44a474
  44c23c:	mov    esi,eax
  44c23e:	sub    DWORD PTR [ebp+0x8],esi
  44c241:	sub    DWORD PTR [ebp+0xc],edi
  44c244:	xor    DWORD PTR [ebp+0x0],ebx
  44c247:	mov    edx,0xd
  44c24c:	mov    eax,DWORD PTR [ebp+0x0]
  44c24f:	call   0x44a48c
  44c254:	mov    ebx,eax
  44c256:	mov    DWORD PTR [ebp+0x0],ebx
  44c259:	mov    eax,DWORD PTR [esp]
  44c25c:	mov    edi,DWORD PTR [eax+0x88]
  44c262:	add    edi,ebx
  44c264:	mov    edx,0xd
  44c269:	mov    eax,ebx
  44c26b:	call   0x44a474
  44c270:	mov    edx,DWORD PTR [esp]
  44c273:	imul   DWORD PTR [edx+0x8c]
  44c279:	mov    ebx,eax
  44c27b:	mov    eax,edi
  44c27d:	and    eax,0x1ff
  44c282:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c289:	mov    edx,0x5
  44c28e:	mov    eax,ebx
  44c290:	call   0x44a474
  44c295:	mov    ebx,eax
  44c297:	mov    eax,ebx
  44c299:	and    eax,0x1f
  44c29c:	mov    edx,eax
  44c29e:	mov    eax,edi
  44c2a0:	call   0x44a474
  44c2a5:	mov    edi,eax
  44c2a7:	xor    esi,ebx
  44c2a9:	mov    edx,0x5
  44c2ae:	mov    eax,ebx
  44c2b0:	call   0x44a474
  44c2b5:	mov    ebx,eax
  44c2b7:	xor    esi,ebx
  44c2b9:	mov    eax,ebx
  44c2bb:	and    eax,0x1f
  44c2be:	mov    edx,eax
  44c2c0:	mov    eax,esi
  44c2c2:	call   0x44a474
  44c2c7:	mov    esi,eax
  44c2c9:	sub    DWORD PTR [ebp+0x4],esi
  44c2cc:	sub    DWORD PTR [ebp+0x8],edi
  44c2cf:	xor    DWORD PTR [ebp+0xc],ebx
  44c2d2:	mov    edx,0xd
  44c2d7:	mov    eax,DWORD PTR [ebp+0xc]
  44c2da:	call   0x44a48c
  44c2df:	mov    ebx,eax
  44c2e1:	mov    DWORD PTR [ebp+0xc],ebx
  44c2e4:	mov    eax,DWORD PTR [esp]
  44c2e7:	mov    edi,DWORD PTR [eax+0x80]
  44c2ed:	add    edi,ebx
  44c2ef:	mov    edx,0xd
  44c2f4:	mov    eax,ebx
  44c2f6:	call   0x44a474
  44c2fb:	mov    edx,DWORD PTR [esp]
  44c2fe:	imul   DWORD PTR [edx+0x84]
  44c304:	mov    ebx,eax
  44c306:	mov    eax,edi
  44c308:	and    eax,0x1ff
  44c30d:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c314:	mov    edx,0x5
  44c319:	mov    eax,ebx
  44c31b:	call   0x44a474
  44c320:	mov    ebx,eax
  44c322:	mov    eax,ebx
  44c324:	and    eax,0x1f
  44c327:	mov    edx,eax
  44c329:	mov    eax,edi
  44c32b:	call   0x44a474
  44c330:	mov    edi,eax
  44c332:	xor    esi,ebx
  44c334:	mov    edx,0x5
  44c339:	mov    eax,ebx
  44c33b:	call   0x44a474
  44c340:	mov    ebx,eax
  44c342:	xor    esi,ebx
  44c344:	mov    eax,ebx
  44c346:	and    eax,0x1f
  44c349:	mov    edx,eax
  44c34b:	mov    eax,esi
  44c34d:	call   0x44a474
  44c352:	mov    esi,eax
  44c354:	sub    DWORD PTR [ebp+0x0],esi
  44c357:	sub    DWORD PTR [ebp+0x4],edi
  44c35a:	xor    DWORD PTR [ebp+0x8],ebx
  44c35d:	mov    edx,0xd
  44c362:	mov    eax,DWORD PTR [ebp+0x8]
  44c365:	call   0x44a48c
  44c36a:	mov    ebx,eax
  44c36c:	mov    DWORD PTR [ebp+0x8],ebx
  44c36f:	mov    eax,DWORD PTR [esp]
  44c372:	mov    edi,DWORD PTR [eax+0x78]
  44c375:	add    edi,ebx
  44c377:	mov    edx,0xd
  44c37c:	mov    eax,ebx
  44c37e:	call   0x44a474
  44c383:	mov    edx,DWORD PTR [esp]
  44c386:	imul   DWORD PTR [edx+0x7c]
  44c389:	mov    ebx,eax
  44c38b:	mov    eax,edi
  44c38d:	and    eax,0x1ff
  44c392:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c399:	mov    edx,0x5
  44c39e:	mov    eax,ebx
  44c3a0:	call   0x44a474
  44c3a5:	mov    ebx,eax
  44c3a7:	mov    eax,ebx
  44c3a9:	and    eax,0x1f
  44c3ac:	mov    edx,eax
  44c3ae:	mov    eax,edi
  44c3b0:	call   0x44a474
  44c3b5:	mov    edi,eax
  44c3b7:	xor    esi,ebx
  44c3b9:	mov    edx,0x5
  44c3be:	mov    eax,ebx
  44c3c0:	call   0x44a474
  44c3c5:	mov    ebx,eax
  44c3c7:	xor    esi,ebx
  44c3c9:	mov    eax,ebx
  44c3cb:	and    eax,0x1f
  44c3ce:	mov    edx,eax
  44c3d0:	mov    eax,esi
  44c3d2:	call   0x44a474
  44c3d7:	mov    esi,eax
  44c3d9:	sub    DWORD PTR [ebp+0xc],esi
  44c3dc:	sub    DWORD PTR [ebp+0x0],edi
  44c3df:	xor    DWORD PTR [ebp+0x4],ebx
  44c3e2:	mov    edx,0xd
  44c3e7:	mov    eax,DWORD PTR [ebp+0x4]
  44c3ea:	call   0x44a48c
  44c3ef:	mov    ebx,eax
  44c3f1:	mov    DWORD PTR [ebp+0x4],ebx
  44c3f4:	mov    eax,DWORD PTR [esp]
  44c3f7:	mov    edi,DWORD PTR [eax+0x70]
  44c3fa:	add    edi,ebx
  44c3fc:	mov    edx,0xd
  44c401:	mov    eax,ebx
  44c403:	call   0x44a474
  44c408:	mov    edx,DWORD PTR [esp]
  44c40b:	imul   DWORD PTR [edx+0x74]
  44c40e:	mov    ebx,eax
  44c410:	mov    eax,edi
  44c412:	and    eax,0x1ff
  44c417:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c41e:	mov    edx,0x5
  44c423:	mov    eax,ebx
  44c425:	call   0x44a474
  44c42a:	mov    ebx,eax
  44c42c:	mov    eax,ebx
  44c42e:	and    eax,0x1f
  44c431:	mov    edx,eax
  44c433:	mov    eax,edi
  44c435:	call   0x44a474
  44c43a:	mov    edi,eax
  44c43c:	xor    esi,ebx
  44c43e:	mov    edx,0x5
  44c443:	mov    eax,ebx
  44c445:	call   0x44a474
  44c44a:	mov    ebx,eax
  44c44c:	xor    esi,ebx
  44c44e:	mov    eax,ebx
  44c450:	and    eax,0x1f
  44c453:	mov    edx,eax
  44c455:	mov    eax,esi
  44c457:	call   0x44a474
  44c45c:	mov    esi,eax
  44c45e:	sub    DWORD PTR [ebp+0x8],esi
  44c461:	sub    DWORD PTR [ebp+0xc],edi
  44c464:	xor    DWORD PTR [ebp+0x0],ebx
  44c467:	mov    edx,0xd
  44c46c:	mov    eax,DWORD PTR [ebp+0x0]
  44c46f:	call   0x44a48c
  44c474:	mov    ebx,eax
  44c476:	mov    DWORD PTR [ebp+0x0],ebx
  44c479:	mov    eax,DWORD PTR [esp]
  44c47c:	mov    edi,DWORD PTR [eax+0x68]
  44c47f:	add    edi,ebx
  44c481:	mov    edx,0xd
  44c486:	mov    eax,ebx
  44c488:	call   0x44a474
  44c48d:	mov    edx,DWORD PTR [esp]
  44c490:	imul   DWORD PTR [edx+0x6c]
  44c493:	mov    ebx,eax
  44c495:	mov    eax,edi
  44c497:	and    eax,0x1ff
  44c49c:	mov    esi,DWORD PTR [eax*4+0x468c8c]
  44c4a3:	mov    edx,0x5
  44c4a8:	mov    eax,ebx
  44c4aa:	call   0x44a474
  44c4af:	mov    ebx,eax
  44c4b1:	mov    eax,ebx
  44c4b3:	and    eax,0x1f
  44c4b6:	mov    edx,eax
  44c4b8:	mov    eax,edi
  44c4ba:	call   0x44a474
  44c4bf:	mov    edi,eax
  44c4c1:	xor    esi,ebx
  44c4c3:	mov    edx,0x5
  44c4c8:	mov    eax,ebx
  44c4ca:	call   0x44a474
  44c4cf:	mov    ebx,eax
  44c4d1:	xor    esi,ebx
  44c4d3:	mov    eax,ebx
  44c4d5:	and    eax,0x1f
  44c4d8:	mov    edx,eax
  44c4da:	mov    eax,esi
  44c4dc:	call   0x44a474
  44c4e1:	mov    esi,eax
  44c4e3:	sub    DWORD PTR [ebp+0x4],esi
  44c4e6:	sub    DWORD PTR [ebp+0x8],edi
  44c4e9:	xor    DWORD PTR [ebp+0xc],ebx
  44c4ec:	mov    edx,0x18
  44c4f1:	mov    eax,DWORD PTR [ebp+0xc]
  44c4f4:	call   0x44a474
  44c4f9:	mov    DWORD PTR [ebp+0xc],eax
  44c4fc:	mov    eax,DWORD PTR [ebp+0xc]
  44c4ff:	shr    eax,0x18
  44c502:	and    eax,0xff
  44c507:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c50e:	xor    DWORD PTR [ebp+0x8],eax
  44c511:	mov    eax,DWORD PTR [ebp+0xc]
  44c514:	shr    eax,0x10
  44c517:	and    eax,0xff
  44c51c:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c523:	sub    DWORD PTR [ebp+0x4],eax
  44c526:	mov    eax,DWORD PTR [ebp+0xc]
  44c529:	shr    eax,0x8
  44c52c:	and    eax,0xff
  44c531:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c538:	sub    DWORD PTR [ebp+0x0],eax
  44c53b:	mov    eax,DWORD PTR [ebp+0xc]
  44c53e:	and    eax,0xff
  44c543:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c54a:	xor    DWORD PTR [ebp+0x0],eax
  44c54d:	mov    edx,0x18
  44c552:	mov    eax,DWORD PTR [ebp+0x8]
  44c555:	call   0x44a474
  44c55a:	mov    DWORD PTR [ebp+0x8],eax
  44c55d:	mov    eax,DWORD PTR [ebp+0x8]
  44c560:	shr    eax,0x18
  44c563:	and    eax,0xff
  44c568:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c56f:	xor    DWORD PTR [ebp+0x4],eax
  44c572:	mov    eax,DWORD PTR [ebp+0x8]
  44c575:	shr    eax,0x10
  44c578:	and    eax,0xff
  44c57d:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c584:	sub    DWORD PTR [ebp+0x0],eax
  44c587:	mov    eax,DWORD PTR [ebp+0x8]
  44c58a:	shr    eax,0x8
  44c58d:	and    eax,0xff
  44c592:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c599:	sub    DWORD PTR [ebp+0xc],eax
  44c59c:	mov    eax,DWORD PTR [ebp+0x8]
  44c59f:	and    eax,0xff
  44c5a4:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c5ab:	xor    DWORD PTR [ebp+0xc],eax
  44c5ae:	mov    eax,DWORD PTR [ebp+0x8]
  44c5b1:	sub    DWORD PTR [ebp+0x4],eax
  44c5b4:	mov    edx,0x18
  44c5b9:	mov    eax,DWORD PTR [ebp+0x4]
  44c5bc:	call   0x44a474
  44c5c1:	mov    DWORD PTR [ebp+0x4],eax
  44c5c4:	mov    eax,DWORD PTR [ebp+0x4]
  44c5c7:	shr    eax,0x18
  44c5ca:	and    eax,0xff
  44c5cf:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c5d6:	xor    DWORD PTR [ebp+0x0],eax
  44c5d9:	mov    eax,DWORD PTR [ebp+0x4]
  44c5dc:	shr    eax,0x10
  44c5df:	and    eax,0xff
  44c5e4:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c5eb:	sub    DWORD PTR [ebp+0xc],eax
  44c5ee:	mov    eax,DWORD PTR [ebp+0x4]
  44c5f1:	shr    eax,0x8
  44c5f4:	and    eax,0xff
  44c5f9:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c600:	sub    DWORD PTR [ebp+0x8],eax
  44c603:	mov    eax,DWORD PTR [ebp+0x4]
  44c606:	and    eax,0xff
  44c60b:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c612:	xor    DWORD PTR [ebp+0x8],eax
  44c615:	mov    eax,DWORD PTR [ebp+0xc]
  44c618:	sub    DWORD PTR [ebp+0x0],eax
  44c61b:	mov    edx,0x18
  44c620:	mov    eax,DWORD PTR [ebp+0x0]
  44c623:	call   0x44a474
  44c628:	mov    DWORD PTR [ebp+0x0],eax
  44c62b:	mov    eax,DWORD PTR [ebp+0x0]
  44c62e:	shr    eax,0x18
  44c631:	and    eax,0xff
  44c636:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c63d:	xor    DWORD PTR [ebp+0xc],eax
  44c640:	mov    eax,DWORD PTR [ebp+0x0]
  44c643:	shr    eax,0x10
  44c646:	and    eax,0xff
  44c64b:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c652:	sub    DWORD PTR [ebp+0x8],eax
  44c655:	mov    eax,DWORD PTR [ebp+0x0]
  44c658:	shr    eax,0x8
  44c65b:	and    eax,0xff
  44c660:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c667:	sub    DWORD PTR [ebp+0x4],eax
  44c66a:	mov    eax,DWORD PTR [ebp+0x0]
  44c66d:	and    eax,0xff
  44c672:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c679:	xor    DWORD PTR [ebp+0x4],eax
  44c67c:	mov    edx,0x18
  44c681:	mov    eax,DWORD PTR [ebp+0xc]
  44c684:	call   0x44a474
  44c689:	mov    DWORD PTR [ebp+0xc],eax
  44c68c:	mov    eax,DWORD PTR [ebp+0xc]
  44c68f:	shr    eax,0x18
  44c692:	and    eax,0xff
  44c697:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c69e:	xor    DWORD PTR [ebp+0x8],eax
  44c6a1:	mov    eax,DWORD PTR [ebp+0xc]
  44c6a4:	shr    eax,0x10
  44c6a7:	and    eax,0xff
  44c6ac:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c6b3:	sub    DWORD PTR [ebp+0x4],eax
  44c6b6:	mov    eax,DWORD PTR [ebp+0xc]
  44c6b9:	shr    eax,0x8
  44c6bc:	and    eax,0xff
  44c6c1:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c6c8:	sub    DWORD PTR [ebp+0x0],eax
  44c6cb:	mov    eax,DWORD PTR [ebp+0xc]
  44c6ce:	and    eax,0xff
  44c6d3:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c6da:	xor    DWORD PTR [ebp+0x0],eax
  44c6dd:	mov    edx,0x18
  44c6e2:	mov    eax,DWORD PTR [ebp+0x8]
  44c6e5:	call   0x44a474
  44c6ea:	mov    DWORD PTR [ebp+0x8],eax
  44c6ed:	mov    eax,DWORD PTR [ebp+0x8]
  44c6f0:	shr    eax,0x18
  44c6f3:	and    eax,0xff
  44c6f8:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c6ff:	xor    DWORD PTR [ebp+0x4],eax
  44c702:	mov    eax,DWORD PTR [ebp+0x8]
  44c705:	shr    eax,0x10
  44c708:	and    eax,0xff
  44c70d:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c714:	sub    DWORD PTR [ebp+0x0],eax
  44c717:	mov    eax,DWORD PTR [ebp+0x8]
  44c71a:	shr    eax,0x8
  44c71d:	and    eax,0xff
  44c722:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c729:	sub    DWORD PTR [ebp+0xc],eax
  44c72c:	mov    eax,DWORD PTR [ebp+0x8]
  44c72f:	and    eax,0xff
  44c734:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c73b:	xor    DWORD PTR [ebp+0xc],eax
  44c73e:	mov    eax,DWORD PTR [ebp+0x8]
  44c741:	sub    DWORD PTR [ebp+0x4],eax
  44c744:	mov    edx,0x18
  44c749:	mov    eax,DWORD PTR [ebp+0x4]
  44c74c:	call   0x44a474
  44c751:	mov    DWORD PTR [ebp+0x4],eax
  44c754:	mov    eax,DWORD PTR [ebp+0x4]
  44c757:	shr    eax,0x18
  44c75a:	and    eax,0xff
  44c75f:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c766:	xor    DWORD PTR [ebp+0x0],eax
  44c769:	mov    eax,DWORD PTR [ebp+0x4]
  44c76c:	shr    eax,0x10
  44c76f:	and    eax,0xff
  44c774:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c77b:	sub    DWORD PTR [ebp+0xc],eax
  44c77e:	mov    eax,DWORD PTR [ebp+0x4]
  44c781:	shr    eax,0x8
  44c784:	and    eax,0xff
  44c789:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c790:	sub    DWORD PTR [ebp+0x8],eax
  44c793:	mov    eax,DWORD PTR [ebp+0x4]
  44c796:	and    eax,0xff
  44c79b:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c7a2:	xor    DWORD PTR [ebp+0x8],eax
  44c7a5:	mov    eax,DWORD PTR [ebp+0xc]
  44c7a8:	sub    DWORD PTR [ebp+0x0],eax
  44c7ab:	mov    edx,0x18
  44c7b0:	mov    eax,DWORD PTR [ebp+0x0]
  44c7b3:	call   0x44a474
  44c7b8:	mov    DWORD PTR [ebp+0x0],eax
  44c7bb:	mov    eax,DWORD PTR [ebp+0x0]
  44c7be:	shr    eax,0x18
  44c7c1:	and    eax,0xff
  44c7c6:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c7cd:	xor    DWORD PTR [ebp+0xc],eax
  44c7d0:	mov    eax,DWORD PTR [ebp+0x0]
  44c7d3:	shr    eax,0x10
  44c7d6:	and    eax,0xff
  44c7db:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c7e2:	sub    DWORD PTR [ebp+0x8],eax
  44c7e5:	mov    eax,DWORD PTR [ebp+0x0]
  44c7e8:	shr    eax,0x8
  44c7eb:	and    eax,0xff
  44c7f0:	mov    eax,DWORD PTR [eax*4+0x46908c]
  44c7f7:	sub    DWORD PTR [ebp+0x4],eax
  44c7fa:	mov    eax,DWORD PTR [ebp+0x0]
  44c7fd:	and    eax,0xff
  44c802:	mov    eax,DWORD PTR [eax*4+0x468c8c]
  44c809:	xor    DWORD PTR [ebp+0x4],eax
  44c80c:	mov    eax,DWORD PTR [esp]
  44c80f:	mov    eax,DWORD PTR [eax+0x58]
  44c812:	sub    DWORD PTR [ebp+0x0],eax
  44c815:	mov    eax,DWORD PTR [esp]
  44c818:	mov    eax,DWORD PTR [eax+0x5c]
  44c81b:	sub    DWORD PTR [ebp+0x4],eax
  44c81e:	mov    eax,DWORD PTR [esp]
  44c821:	mov    eax,DWORD PTR [eax+0x60]
  44c824:	sub    DWORD PTR [ebp+0x8],eax
  44c827:	mov    eax,DWORD PTR [esp]
  44c82a:	mov    eax,DWORD PTR [eax+0x64]
  44c82d:	sub    DWORD PTR [ebp+0xc],eax
  44c830:	mov    eax,DWORD PTR [esp+0x4]
  44c834:	mov    edx,DWORD PTR [ebp+0x0]
  44c837:	mov    DWORD PTR [eax],edx
  44c839:	mov    eax,DWORD PTR [esp+0x4]
  44c83d:	add    eax,0x4
  44c840:	mov    edx,DWORD PTR [ebp+0x4]
  44c843:	mov    DWORD PTR [eax],edx
  44c845:	mov    eax,DWORD PTR [esp+0x4]
  44c849:	add    eax,0x8
  44c84c:	mov    edx,DWORD PTR [ebp+0x8]
  44c84f:	mov    DWORD PTR [eax],edx
  44c851:	mov    eax,DWORD PTR [esp+0x4]
  44c855:	add    eax,0xc
  44c858:	mov    edx,DWORD PTR [ebp+0xc]
  44c85b:	mov    DWORD PTR [eax],edx
  44c85d:	add    esp,0x18
  44c860:	pop    ebp
  44c861:	pop    edi
  44c862:	pop    esi
  44c863:	pop    ebx
  44c864:	ret    
  44c865:	add    BYTE PTR [eax],al
  44c867:	add    bh,bh
  44c869:	(bad)  
  44c86a:	(bad)  
  44c86b:	call   DWORD PTR [esi]
  44c86d:	add    BYTE PTR [eax],al
  44c86f:	add    BYTE PTR [ebx+0x69],al
  44c872:	jo     0x44c8dc
  44c874:	gs jb  0x44c897
  44c877:	outs   dx,BYTE PTR ds:[esi]
  44c878:	outs   dx,DWORD PTR ds:[esi]
  44c879:	je     0x44c89b
  44c87b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44c882:	imul   edi,DWORD PTR [edx+0x65],0xd4000064
  44c889:	enter  0x44,0x0
	...
  44c895:	add    BYTE PTR [eax],al
  44c897:	add    BYTE PTR [eax+0x44c9],al
	...
  44c8a5:	add    BYTE PTR [eax],al
  44c8a7:	add    BYTE PTR [eax-0x37],dh
  44c8aa:	inc    esp
  44c8ab:	add    al,cl
  44c8ad:	add    BYTE PTR [eax],al
  44c8af:	add    BYTE PTR [eax+0x18004423],al
  44c8b5:	test   eax,0x42dc0041
  44c8ba:	inc    eax
  44c8bb:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44c8c1:	inc    edx
  44c8c2:	inc    eax
  44c8c3:	add    al,bl
  44c8c5:	inc    edx
  44c8c6:	inc    eax
  44c8c7:	add    BYTE PTR [eax],bh
  44c8c9:	inc    eax
  44c8ca:	inc    eax
  44c8cb:	add    BYTE PTR [eax+eax*2+0x40],dl
  44c8cf:	add    BYTE PTR [eax+0x20],bh
  44c8d2:	inc    esp
  44c8d3:	add    BYTE PTR [eax+0x41],ch
  44c8d6:	inc    ecx
  44c8d7:	add    BYTE PTR [eax-0x5b],dh
  44c8da:	inc    ecx
  44c8db:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44c8e2:	inc    ecx
  44c8e3:	add    BYTE PTR [eax],dl
  44c8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c8e6:	inc    ecx
  44c8e7:	add    BYTE PTR [eax-0x5a],bl
  44c8ea:	inc    ecx
  44c8eb:	add    BYTE PTR [eax-0x59],dl
  44c8ee:	inc    ecx
  44c8ef:	add    BYTE PTR [eax],dh
  44c8f1:	test   eax,0xa6680041
  44c8f6:	inc    ecx
  44c8f7:	add    BYTE PTR [eax-0x5a],ah
  44c8fa:	inc    ecx
  44c8fb:	add    BYTE PTR [eax],bh
  44c8fd:	test   eax,0x231c0041
  44c902:	inc    esp
  44c903:	add    al,bl
  44c905:	leave  
  44c906:	inc    esp
  44c907:	add    al,ah
  44c909:	leave  
  44c90a:	inc    esp
  44c90b:	add    BYTE PTR [edx+ecx*8],al
  44c90e:	inc    esp
  44c90f:	add    BYTE PTR [edx+ecx*8],cl
  44c912:	inc    esp
  44c913:	add    BYTE PTR [eax],cl
  44c915:	es inc esp
  44c917:	add    BYTE PTR [eax],ch
  44c919:	int    0x44
  44c91b:	add    BYTE PTR [eax],ah
  44c91d:	daa    
  44c91e:	inc    esp
  44c91f:	add    ah,al
  44c921:	and    BYTE PTR [eax+eax*1+0x38],al
  44c925:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44c929:	and    DWORD PTR [eax+eax*1-0x14],eax
  44c92d:	and    DWORD PTR [eax+eax*1-0x64],eax
  44c931:	int3   
  44c932:	inc    esp
  44c933:	add    BYTE PTR [eax],al
  44c935:	es inc esp
  44c937:	add    BYTE PTR [esi+eiz*1+0x44],bh
  44c93b:	add    ah,dl
  44c93d:	es inc esp
  44c93f:	add    BYTE PTR [ebp+ecx*8+0x44],al
  44c943:	add    BYTE PTR [esi+ecx*8],ch
  44c946:	inc    esp
  44c947:	add    BYTE PTR [eax-0x6bffbbd9],ah
  44c94d:	sub    BYTE PTR [eax+eax*1-0x64],al
  44c951:	sub    DWORD PTR [eax+eax*1+0x38],eax
  44c955:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44c959:	sub    al,BYTE PTR [eax+eax*1-0x38]
  44c95d:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  44c961:	sub    al,0x44
  44c963:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44c969:	cs inc esp
  44c96b:	add    BYTE PTR [eax+0x2f],bh
  44c96e:	inc    esp
  44c96f:	add    BYTE PTR [ebx],cl
  44c971:	push   esp
  44c972:	inc    esp
  44c973:	inc    ebx
  44c974:	push   eax
  44c975:	pop    edi
  44c976:	ins    DWORD PTR es:[edi],dx
  44c977:	imul   esi,DWORD PTR [ebx+0x74],0xc9803179
  44c97e:	inc    esp
  44c97f:	add    BYTE PTR [edi],al
  44c981:	or     edx,DWORD PTR [esp+eax*2+0x43]
  44c985:	push   eax
  44c986:	pop    edi
  44c987:	ins    DWORD PTR es:[edi],dx
  44c988:	imul   esi,DWORD PTR [ebx+0x74],0xc8d43179
  44c98f:	inc    esp
  44c990:	add    BYTE PTR [esp+0x44],bh
  44c994:	add    BYTE PTR [edi],al
  44c996:	add    BYTE PTR [ecx],cl
  44c998:	inc    esp
  44c999:	inc    ebx
  44c99a:	push   eax
  44c99b:	ins    DWORD PTR es:[edi],dx
  44c99c:	imul   esi,DWORD PTR [ebx+0x74],0x3179
  44c9a3:	nop
  44c9a4:	mov    edx,eax
  44c9a6:	and    edx,0xff
  44c9ac:	shl    edx,0x18
  44c9af:	mov    ecx,eax
  44c9b1:	and    ecx,0xff00
  44c9b7:	shl    ecx,0x8
  44c9ba:	or     edx,ecx
  44c9bc:	mov    ecx,eax
  44c9be:	and    ecx,0xff0000
  44c9c4:	shr    ecx,0x8
  44c9c7:	or     edx,ecx
  44c9c9:	and    eax,0xff000000
  44c9ce:	shr    eax,0x18
  44c9d1:	or     edx,eax
  44c9d3:	mov    eax,edx
  44c9d5:	ret    
  44c9d6:	mov    eax,eax
  44c9d8:	mov    eax,0xb
  44c9dd:	ret    
  44c9de:	mov    eax,eax
  44c9e0:	push   ebx
  44c9e1:	mov    ebx,edx
  44c9e3:	mov    eax,ebx
  44c9e5:	mov    edx,0x44c9fc
  44c9ea:	call   0x404fdc
  44c9ef:	pop    ebx
  44c9f0:	ret    
  44c9f1:	add    BYTE PTR [eax],al
  44c9f3:	add    bh,bh
  44c9f5:	(bad)  
  44c9f6:	(bad)  
  44c9f7:	inc    DWORD PTR [esi]
  44c9f9:	add    BYTE PTR [eax],al
  44c9fb:	add    BYTE PTR [ebp+0x69],cl
  44c9fe:	jae    0x44ca74
  44ca00:	jns    0x44ca33
  44ca02:	add    BYTE PTR [eax],al
  44ca04:	mov    eax,0x80
  44ca09:	ret    
  44ca0a:	mov    eax,eax
  44ca0c:	push   ebx
  44ca0d:	push   esi
  44ca0e:	push   edi
  44ca0f:	add    esp,0xfffffff8
  44ca12:	xor    ecx,ecx
  44ca14:	mov    dl,0x1
  44ca16:	mov    eax,ds:0x44c888
  44ca1b:	call   0x44231c
  44ca20:	mov    esi,eax
  44ca22:	push   0x0
  44ca24:	mov    edx,0x469dd0
  44ca29:	mov    ecx,0x80
  44ca2e:	mov    eax,esi
  44ca30:	mov    ebx,DWORD PTR [eax]
  44ca32:	call   DWORD PTR [ebx+0x40]
  44ca35:	mov    ecx,esp
  44ca37:	mov    edx,0x469de0
  44ca3c:	mov    eax,esi
  44ca3e:	mov    ebx,DWORD PTR [eax]
  44ca40:	call   DWORD PTR [ebx+0x6c]
  44ca43:	mov    edx,esp
  44ca45:	mov    eax,0x469df0
  44ca4a:	mov    ecx,0x8
  44ca4f:	call   0x408538
  44ca54:	mov    ebx,eax
  44ca56:	mov    ecx,esp
  44ca58:	mov    edx,esp
  44ca5a:	mov    eax,esi
  44ca5c:	mov    edi,DWORD PTR [eax]
  44ca5e:	call   DWORD PTR [edi+0x70]
  44ca61:	test   bl,bl
  44ca63:	je     0x44ca7a
  44ca65:	mov    edx,esp
  44ca67:	mov    eax,0x469de0
  44ca6c:	mov    ecx,0x8
  44ca71:	call   0x408538
  44ca76:	test   al,al
  44ca78:	jne    0x44ca7e
  44ca7a:	xor    eax,eax
  44ca7c:	jmp    0x44ca80
  44ca7e:	mov    al,0x1
  44ca80:	mov    ebx,eax
  44ca82:	mov    ecx,esp
  44ca84:	mov    edx,0x469de8
  44ca89:	mov    eax,esi
  44ca8b:	mov    edi,DWORD PTR [eax]
  44ca8d:	call   DWORD PTR [edi+0x6c]
  44ca90:	test   bl,bl
  44ca92:	je     0x44caa9
  44ca94:	mov    edx,esp
  44ca96:	mov    eax,0x469df8
  44ca9b:	mov    ecx,0x8
  44caa0:	call   0x408538
  44caa5:	test   al,al
  44caa7:	jne    0x44caad
  44caa9:	xor    eax,eax
  44caab:	jmp    0x44caaf
  44caad:	mov    al,0x1
  44caaf:	mov    ebx,eax
  44cab1:	mov    ecx,esp
  44cab3:	mov    edx,esp
  44cab5:	mov    eax,esi
  44cab7:	mov    edi,DWORD PTR [eax]
  44cab9:	call   DWORD PTR [edi+0x70]
  44cabc:	test   bl,bl
  44cabe:	je     0x44cad5
  44cac0:	mov    edx,esp
  44cac2:	mov    eax,0x469de8
  44cac7:	mov    ecx,0x8
  44cacc:	call   0x408538
  44cad1:	test   al,al
  44cad3:	jne    0x44cad9
  44cad5:	xor    eax,eax
  44cad7:	jmp    0x44cadb
  44cad9:	mov    al,0x1
  44cadb:	mov    ebx,eax
  44cadd:	mov    eax,esi
  44cadf:	mov    edx,DWORD PTR [eax]
  44cae1:	call   DWORD PTR [edx+0x44]
  44cae4:	mov    eax,esi
  44cae6:	call   0x4040a0
  44caeb:	mov    eax,ebx
  44caed:	pop    ecx
  44caee:	pop    edx
  44caef:	pop    edi
  44caf0:	pop    esi
  44caf1:	pop    ebx
  44caf2:	ret    
  44caf3:	nop
  44caf4:	push   ebx
  44caf5:	mov    eax,edx
  44caf7:	shr    eax,0x7
  44cafa:	and    eax,0x1ff
  44caff:	and    edx,0x7f
  44cb02:	mov    eax,DWORD PTR [eax*4+0x4695d0]
  44cb09:	xor    eax,edx
  44cb0b:	movzx  edx,BYTE PTR [edx+0x469550]
  44cb12:	xor    edx,eax
  44cb14:	and    edx,0x7f
  44cb17:	mov    ebx,ecx
  44cb19:	shr    ebx,0x9
  44cb1c:	and    ebx,0x7f
  44cb1f:	xor    edx,ebx
  44cb21:	and    ecx,0x1ff
  44cb27:	xor    eax,ecx
  44cb29:	mov    eax,DWORD PTR [eax*4+0x4695d0]
  44cb30:	xor    eax,edx
  44cb32:	shl    edx,0x9
  44cb35:	or     eax,edx
  44cb37:	pop    ebx
  44cb38:	ret    
  44cb39:	lea    eax,[eax+0x0]
  44cb3c:	push   ebx
  44cb3d:	push   esi
  44cb3e:	push   edi
  44cb3f:	push   ebp
  44cb40:	push   ecx
  44cb41:	mov    ebp,ecx
  44cb43:	mov    DWORD PTR [esp],edx
  44cb46:	mov    ebx,eax
  44cb48:	mov    esi,DWORD PTR [esp]
  44cb4b:	shr    esi,0x10
  44cb4e:	mov    edi,DWORD PTR [esp]
  44cb51:	and    edi,0xffff
  44cb57:	xor    esi,DWORD PTR [ebx+ebp*4+0x48]
  44cb5b:	lea    eax,[ebp+0x5]
  44cb5e:	and    eax,0x7
  44cb61:	mov    ecx,DWORD PTR [ebx+eax*4+0x68]
  44cb65:	mov    edx,esi
  44cb67:	mov    eax,ebx
  44cb69:	call   0x44caf4
  44cb6e:	mov    esi,eax
  44cb70:	xor    esi,edi
  44cb72:	lea    eax,[ebp+0x2]
  44cb75:	and    eax,0x7
  44cb78:	xor    edi,DWORD PTR [ebx+eax*4+0x48]
  44cb7c:	lea    eax,[ebp+0x1]
  44cb7f:	and    eax,0x7
  44cb82:	mov    ecx,DWORD PTR [ebx+eax*4+0x68]
  44cb86:	mov    edx,edi
  44cb88:	mov    eax,ebx
  44cb8a:	call   0x44caf4
  44cb8f:	mov    edi,eax
  44cb91:	xor    edi,esi
  44cb93:	lea    eax,[ebp+0x7]
  44cb96:	and    eax,0x7
  44cb99:	xor    esi,DWORD PTR [ebx+eax*4+0x48]
  44cb9d:	lea    eax,[ebp+0x3]
  44cba0:	and    eax,0x7
  44cba3:	mov    ecx,DWORD PTR [ebx+eax*4+0x68]
  44cba7:	mov    edx,esi
  44cba9:	mov    eax,ebx
  44cbab:	call   0x44caf4
  44cbb0:	mov    esi,eax
  44cbb2:	xor    esi,edi
  44cbb4:	add    ebp,0x4
  44cbb7:	and    ebp,0x7
  44cbba:	xor    edi,DWORD PTR [ebx+ebp*4+0x48]
  44cbbe:	mov    eax,edi
  44cbc0:	shl    eax,0x10
  44cbc3:	or     eax,esi
  44cbc5:	pop    edx
  44cbc6:	pop    ebp
  44cbc7:	pop    edi
  44cbc8:	pop    esi
  44cbc9:	pop    ebx
  44cbca:	ret    
  44cbcb:	nop
  44cbcc:	push   ebx
  44cbcd:	push   esi
  44cbce:	push   edi
  44cbcf:	mov    esi,edx
  44cbd1:	shr    esi,0x10
  44cbd4:	and    edx,0xffff
  44cbda:	mov    ebx,ecx
  44cbdc:	and    ebx,0x1
  44cbdf:	test   ebx,ebx
  44cbe1:	je     0x44cc09
  44cbe3:	dec    ecx
  44cbe4:	shr    ecx,1
  44cbe6:	movzx  ebx,cl
  44cbe9:	mov    edi,ebx
  44cbeb:	add    edi,0x2
  44cbee:	and    edi,0x7
  44cbf1:	mov    edi,DWORD PTR [eax+edi*4+0x68]
  44cbf5:	and    edi,esi
  44cbf7:	xor    edx,edi
  44cbf9:	add    ebx,0x4
  44cbfc:	and    ebx,0x7
  44cbff:	mov    eax,DWORD PTR [eax+ebx*4+0x48]
  44cc03:	or     eax,edx
  44cc05:	xor    esi,eax
  44cc07:	jmp    0x44cc27
  44cc09:	shr    ecx,1
  44cc0b:	movzx  ebx,cl
  44cc0e:	mov    ebx,DWORD PTR [eax+ebx*4+0x48]
  44cc12:	and    ebx,esi
  44cc14:	xor    edx,ebx
  44cc16:	movzx  ecx,cl
  44cc19:	add    ecx,0x6
  44cc1c:	and    ecx,0x7
  44cc1f:	mov    eax,DWORD PTR [eax+ecx*4+0x68]
  44cc23:	or     eax,edx
  44cc25:	xor    esi,eax
  44cc27:	mov    eax,esi
  44cc29:	shl    eax,0x10
  44cc2c:	or     eax,edx
  44cc2e:	pop    edi
  44cc2f:	pop    esi
  44cc30:	pop    ebx
  44cc31:	ret    
  44cc32:	mov    eax,eax
  44cc34:	push   ebx
  44cc35:	push   esi
  44cc36:	push   edi
  44cc37:	mov    esi,edx
  44cc39:	shr    esi,0x10
  44cc3c:	and    edx,0xffff
  44cc42:	mov    ebx,ecx
  44cc44:	and    ebx,0x1
  44cc47:	test   ebx,ebx
  44cc49:	je     0x44cc71
  44cc4b:	dec    ecx
  44cc4c:	shr    ecx,1
  44cc4e:	movzx  ebx,cl
  44cc51:	mov    edi,ebx
  44cc53:	add    edi,0x4
  44cc56:	and    edi,0x7
  44cc59:	mov    edi,DWORD PTR [eax+edi*4+0x48]
  44cc5d:	or     edi,edx
  44cc5f:	xor    esi,edi
  44cc61:	add    ebx,0x2
  44cc64:	and    ebx,0x7
  44cc67:	mov    eax,DWORD PTR [eax+ebx*4+0x68]
  44cc6b:	and    eax,esi
  44cc6d:	xor    edx,eax
  44cc6f:	jmp    0x44cc8f
  44cc71:	shr    ecx,1
  44cc73:	movzx  ebx,cl
  44cc76:	add    ebx,0x6
  44cc79:	and    ebx,0x7
  44cc7c:	mov    ebx,DWORD PTR [eax+ebx*4+0x68]
  44cc80:	or     ebx,edx
  44cc82:	xor    esi,ebx
  44cc84:	movzx  ecx,cl
  44cc87:	mov    eax,DWORD PTR [eax+ecx*4+0x48]
  44cc8b:	and    eax,esi
  44cc8d:	xor    edx,eax
  44cc8f:	mov    eax,esi
  44cc91:	shl    eax,0x10
  44cc94:	or     eax,edx
  44cc96:	pop    edi
  44cc97:	pop    esi
  44cc98:	pop    ebx
  44cc99:	ret    
  44cc9a:	mov    eax,eax
  44cc9c:	push   ebx
  44cc9d:	push   esi
  44cc9e:	push   edi
  44cc9f:	add    esp,0xfffffff0
  44cca2:	mov    edi,ecx
  44cca4:	mov    ebx,edx
  44cca6:	mov    esi,eax
  44cca8:	mov    eax,esp
  44ccaa:	xor    ecx,ecx
  44ccac:	mov    edx,0x10
  44ccb1:	call   0x4037c8
  44ccb6:	mov    ecx,edi
  44ccb8:	shr    ecx,0x3
  44ccbb:	mov    edx,esp
  44ccbd:	mov    eax,ebx
  44ccbf:	call   0x403090
  44ccc4:	xor    ebx,ebx
  44ccc6:	mov    eax,esp
  44ccc8:	movzx  edx,BYTE PTR [eax]
  44cccb:	shl    edx,0x8
  44ccce:	movzx  ecx,BYTE PTR [eax+0x1]
  44ccd2:	add    edx,ecx
  44ccd4:	mov    DWORD PTR [esi+ebx*4+0x48],edx
  44ccd8:	inc    ebx
  44ccd9:	add    eax,0x2
  44ccdc:	cmp    ebx,0x8
  44ccdf:	jne    0x44ccc8
  44cce1:	xor    ebx,ebx
  44cce3:	lea    eax,[ebx+0x1]
  44cce6:	and    eax,0x7
  44cce9:	mov    ecx,DWORD PTR [esi+eax*4+0x48]
  44cced:	mov    edx,DWORD PTR [esi+ebx*4+0x48]
  44ccf1:	mov    eax,esi
  44ccf3:	call   0x44caf4
  44ccf8:	mov    edi,eax
  44ccfa:	mov    DWORD PTR [esi+ebx*4+0x68],edi
  44ccfe:	and    edi,0x1ff
  44cd04:	mov    DWORD PTR [esi+ebx*4+0x88],edi
  44cd0b:	mov    eax,DWORD PTR [esi+ebx*4+0x68]
  44cd0f:	shr    eax,0x9
  44cd12:	mov    DWORD PTR [esi+ebx*4+0xa8],eax
  44cd19:	inc    ebx
  44cd1a:	cmp    ebx,0x8
  44cd1d:	jne    0x44cce3
  44cd1f:	add    esp,0x10
  44cd22:	pop    edi
  44cd23:	pop    esi
  44cd24:	pop    ebx
  44cd25:	ret    
  44cd26:	mov    eax,eax
  44cd28:	push   ebx
  44cd29:	mov    ebx,eax
  44cd2b:	lea    eax,[ebx+0x48]
  44cd2e:	xor    ecx,ecx
  44cd30:	mov    edx,0x80
  44cd35:	call   0x4037c8
  44cd3a:	mov    eax,ebx
  44cd3c:	call   0x442770
  44cd41:	pop    ebx
  44cd42:	ret    
  44cd43:	nop
  44cd44:	push   ebx
  44cd45:	push   esi
  44cd46:	push   edi
  44cd47:	push   ebp
  44cd48:	push   ecx
  44cd49:	mov    DWORD PTR [esp],ecx
  44cd4c:	mov    ebx,edx
  44cd4e:	mov    esi,eax
  44cd50:	cmp    BYTE PTR [esi+0x30],0x0
  44cd54:	jne    0x44cd6c
  44cd56:	mov    ecx,0x44ce14
  44cd5b:	mov    dl,0x1
  44cd5d:	mov    eax,ds:0x441af8
  44cd62:	call   0x40c8b4
  44cd67:	call   0x4048fc
  44cd6c:	mov    eax,DWORD PTR [ebx]
  44cd6e:	call   0x44c9a4
  44cd73:	mov    edi,eax
  44cd75:	add    ebx,0x4
  44cd78:	mov    eax,DWORD PTR [ebx]
  44cd7a:	call   0x44c9a4
  44cd7f:	mov    ebp,eax
  44cd81:	xor    ebx,ebx
  44cd83:	mov    eax,ebx
  44cd85:	and    eax,0x1
  44cd88:	test   eax,eax
  44cd8a:	jne    0x44cdb6
  44cd8c:	mov    ecx,ebx
  44cd8e:	mov    edx,edi
  44cd90:	mov    eax,esi
  44cd92:	call   0x44cbcc
  44cd97:	mov    edi,eax
  44cd99:	lea    ecx,[ebx+0x1]
  44cd9c:	mov    edx,ebp
  44cd9e:	mov    eax,esi
  44cda0:	call   0x44cbcc
  44cda5:	mov    ebp,eax
  44cda7:	mov    ecx,ebx
  44cda9:	mov    edx,edi
  44cdab:	mov    eax,esi
  44cdad:	call   0x44cb3c
  44cdb2:	xor    ebp,eax
  44cdb4:	jmp    0x44cdc3
  44cdb6:	mov    ecx,ebx
  44cdb8:	mov    edx,ebp
  44cdba:	mov    eax,esi
  44cdbc:	call   0x44cb3c
  44cdc1:	xor    edi,eax
  44cdc3:	inc    ebx
  44cdc4:	cmp    ebx,0x8
  44cdc7:	jne    0x44cd83
  44cdc9:	mov    ecx,0x8
  44cdce:	mov    edx,edi
  44cdd0:	mov    eax,esi
  44cdd2:	call   0x44cbcc
  44cdd7:	mov    edi,eax
  44cdd9:	mov    ecx,0x9
  44cdde:	mov    edx,ebp
  44cde0:	mov    eax,esi
  44cde2:	call   0x44cbcc
  44cde7:	mov    ebp,eax
  44cde9:	mov    eax,ebp
  44cdeb:	call   0x44c9a4
  44cdf0:	mov    edx,DWORD PTR [esp]
  44cdf3:	mov    DWORD PTR [edx],eax
  44cdf5:	mov    eax,edi
  44cdf7:	call   0x44c9a4
  44cdfc:	mov    edx,DWORD PTR [esp]
  44cdff:	add    edx,0x4
  44ce02:	mov    DWORD PTR [edx],eax
  44ce04:	pop    edx
  44ce05:	pop    ebp
  44ce06:	pop    edi
  44ce07:	pop    esi
  44ce08:	pop    ebx
  44ce09:	ret    
  44ce0a:	add    BYTE PTR [eax],al
  44ce0c:	(bad)  
  44ce0d:	(bad)  
  44ce0e:	(bad)  
  44ce0f:	call   DWORD PTR [esi]
  44ce11:	add    BYTE PTR [eax],al
  44ce13:	add    BYTE PTR [ebx+0x69],al
  44ce16:	jo     0x44ce80
  44ce18:	gs jb  0x44ce3b
  44ce1b:	outs   dx,BYTE PTR ds:[esi]
  44ce1c:	outs   dx,DWORD PTR ds:[esi]
  44ce1d:	je     0x44ce3f
  44ce1f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44ce26:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44ce2d:	push   esi
  44ce2e:	push   edi
  44ce2f:	push   ebp
  44ce30:	push   ecx
  44ce31:	mov    DWORD PTR [esp],ecx
  44ce34:	mov    ebx,edx
  44ce36:	mov    esi,eax
  44ce38:	cmp    BYTE PTR [esi+0x30],0x0
  44ce3c:	jne    0x44ce54
  44ce3e:	mov    ecx,0x44cf00
  44ce43:	mov    dl,0x1
  44ce45:	mov    eax,ds:0x441af8
  44ce4a:	call   0x40c8b4
  44ce4f:	call   0x4048fc
  44ce54:	mov    eax,DWORD PTR [ebx]
  44ce56:	call   0x44c9a4
  44ce5b:	mov    ebp,eax
  44ce5d:	add    ebx,0x4
  44ce60:	mov    eax,DWORD PTR [ebx]
  44ce62:	call   0x44c9a4
  44ce67:	mov    edi,eax
  44ce69:	mov    ecx,0x9
  44ce6e:	mov    edx,ebp
  44ce70:	mov    eax,esi
  44ce72:	call   0x44cc34
  44ce77:	mov    ebp,eax
  44ce79:	mov    ecx,0x8
  44ce7e:	mov    edx,edi
  44ce80:	mov    eax,esi
  44ce82:	call   0x44cc34
  44ce87:	mov    edi,eax
  44ce89:	mov    ebx,0x7
  44ce8e:	mov    eax,ebx
  44ce90:	and    eax,0x1
  44ce93:	test   eax,eax
  44ce95:	jne    0x44cec1
  44ce97:	mov    ecx,ebx
  44ce99:	mov    edx,edi
  44ce9b:	mov    eax,esi
  44ce9d:	call   0x44cb3c
  44cea2:	xor    ebp,eax
  44cea4:	mov    ecx,ebx
  44cea6:	mov    edx,edi
  44cea8:	mov    eax,esi
  44ceaa:	call   0x44cc34
  44ceaf:	mov    edi,eax
  44ceb1:	lea    ecx,[ebx+0x1]
  44ceb4:	mov    edx,ebp
  44ceb6:	mov    eax,esi
  44ceb8:	call   0x44cc34
  44cebd:	mov    ebp,eax
  44cebf:	jmp    0x44cece
  44cec1:	mov    ecx,ebx
  44cec3:	mov    edx,ebp
  44cec5:	mov    eax,esi
  44cec7:	call   0x44cb3c
  44cecc:	xor    edi,eax
  44cece:	dec    ebx
  44cecf:	cmp    ebx,0xffffffff
  44ced2:	jne    0x44ce8e
  44ced4:	mov    eax,edi
  44ced6:	call   0x44c9a4
  44cedb:	mov    edx,DWORD PTR [esp]
  44cede:	mov    DWORD PTR [edx],eax
  44cee0:	mov    eax,ebp
  44cee2:	call   0x44c9a4
  44cee7:	mov    edx,DWORD PTR [esp]
  44ceea:	add    edx,0x4
  44ceed:	mov    DWORD PTR [edx],eax
  44ceef:	pop    edx
  44cef0:	pop    ebp
  44cef1:	pop    edi
  44cef2:	pop    esi
  44cef3:	pop    ebx
  44cef4:	ret    
  44cef5:	add    BYTE PTR [eax],al
  44cef7:	add    bh,bh
  44cef9:	(bad)  
  44cefa:	(bad)  
  44cefb:	call   DWORD PTR [esi]
  44cefd:	add    BYTE PTR [eax],al
  44ceff:	add    BYTE PTR [ebx+0x69],al
  44cf02:	jo     0x44cf6c
  44cf04:	gs jb  0x44cf27
  44cf07:	outs   dx,BYTE PTR ds:[esi]
  44cf08:	outs   dx,DWORD PTR ds:[esi]
  44cf09:	je     0x44cf2b
  44cf0b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44cf12:	imul   edi,DWORD PTR [edx+0x65],0x64000064
  44cf19:	iret   
  44cf1a:	inc    esp
	...
  44cf27:	add    BYTE PTR [eax],dl
  44cf29:	rol    BYTE PTR [eax+eax*1+0x0],1
	...
  44cf39:	rol    BYTE PTR [eax+eax*1-0x38],1
  44cf3d:	add    BYTE PTR [eax],al
  44cf3f:	add    BYTE PTR [eax+0x18004423],al
  44cf45:	test   eax,0x42dc0041
  44cf4a:	inc    eax
  44cf4b:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44cf51:	inc    edx
  44cf52:	inc    eax
  44cf53:	add    al,bl
  44cf55:	inc    edx
  44cf56:	inc    eax
  44cf57:	add    BYTE PTR [eax],bh
  44cf59:	inc    eax
  44cf5a:	inc    eax
  44cf5b:	add    BYTE PTR [eax+eax*2+0x40],dl
  44cf5f:	add    BYTE PTR [eax+0x20],bh
  44cf62:	inc    esp
  44cf63:	add    BYTE PTR [eax+0x41],ch
  44cf66:	inc    ecx
  44cf67:	add    BYTE PTR [eax-0x5b],dh
  44cf6a:	inc    ecx
  44cf6b:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44cf72:	inc    ecx
  44cf73:	add    BYTE PTR [eax],dl
  44cf75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cf76:	inc    ecx
  44cf77:	add    BYTE PTR [eax-0x5a],bl
  44cf7a:	inc    ecx
  44cf7b:	add    BYTE PTR [eax-0x59],dl
  44cf7e:	inc    ecx
  44cf7f:	add    BYTE PTR [eax],dh
  44cf81:	test   eax,0xa6680041
  44cf86:	inc    ecx
  44cf87:	add    BYTE PTR [eax-0x5a],ah
  44cf8a:	inc    ecx
  44cf8b:	add    BYTE PTR [eax],bh
  44cf8d:	test   eax,0x231c0041
  44cf92:	inc    esp
  44cf93:	add    BYTE PTR [eax-0x30],bh
  44cf96:	inc    esp
  44cf97:	add    BYTE PTR [eax+0x700044d0],al
  44cf9d:	rol    BYTE PTR [eax+eax*1-0x60],1
  44cfa1:	rol    BYTE PTR [eax+eax*1+0x8],1
  44cfa5:	es inc esp
  44cfa7:	add    al,dh
  44cfa9:	rol    DWORD PTR [eax+eax*1+0x20],1
  44cfad:	daa    
  44cfae:	inc    esp
  44cfaf:	add    ah,al
  44cfb1:	and    BYTE PTR [eax+eax*1+0x38],al
  44cfb5:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44cfb9:	and    DWORD PTR [eax+eax*1-0x14],eax
  44cfbd:	and    DWORD PTR [eax+eax*1+0x78],eax
  44cfc1:	rol    DWORD PTR [eax+eax*1+0x0],1
  44cfc5:	es inc esp
  44cfc7:	add    BYTE PTR [esi+eiz*1+0x44],bh
  44cfcb:	add    ah,dl
  44cfcd:	es inc esp
  44cfcf:	add    BYTE PTR [edx+edx*8],cl
  44cfd2:	inc    esp
  44cfd3:	add    BYTE PTR [eax-0x5fffbb2d],bl
  44cfd9:	daa    
  44cfda:	inc    esp
  44cfdb:	add    BYTE PTR [eax+ebp*1+0x299c0044],dl
  44cfe2:	inc    esp
  44cfe3:	add    BYTE PTR [eax],bh
  44cfe5:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44cfe9:	sub    al,BYTE PTR [eax+eax*1-0x38]
  44cfed:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  44cff1:	sub    al,0x44
  44cff3:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44cff9:	cs inc esp
  44cffb:	add    BYTE PTR [eax+0x2f],bh
  44cffe:	inc    esp
  44cfff:	add    BYTE PTR [eax],cl
  44d001:	push   esp
  44d002:	inc    esp
  44d003:	inc    ebx
  44d004:	push   eax
  44d005:	pop    edi
  44d006:	jb     0x44d06b
  44d008:	xor    cl,BYTE PTR [ebp-0x2fefffc0]
  44d00e:	inc    esp
  44d00f:	add    BYTE PTR [edi],al
  44d011:	or     BYTE PTR [esp+eax*2+0x43],dl
  44d015:	push   eax
  44d016:	pop    edi
  44d017:	jb     0x44d07c
  44d019:	xor    ah,BYTE PTR [edi+ecx*8+0x44]
  44d01d:	add    BYTE PTR [esp+0x44],bh
  44d021:	add    BYTE PTR [edi],al
  44d023:	add    BYTE PTR [esi],al
  44d025:	inc    esp
  44d026:	inc    ebx
  44d027:	push   eax
  44d028:	jb     0x44d08d
  44d02a:	xor    al,BYTE PTR [eax]
  44d02c:	add    BYTE PTR [ebp+0xf530040],cl
  44d032:	mov    bh,0xca
  44d034:	push   ecx
  44d035:	mov    ecx,0x10
  44d03a:	pop    ebx
  44d03b:	sub    ecx,ebx
  44d03d:	movzx  ebx,ax
  44d040:	shr    ebx,cl
  44d042:	mov    ecx,edx
  44d044:	shl    ax,cl
  44d047:	or     bx,ax
  44d04a:	mov    eax,ebx
  44d04c:	pop    ebx
  44d04d:	ret    
  44d04e:	mov    eax,eax
  44d050:	push   ebx
  44d051:	movzx  ecx,dx
  44d054:	push   ecx
  44d055:	mov    ecx,0x10
  44d05a:	pop    ebx
  44d05b:	sub    ecx,ebx
  44d05d:	mov    ebx,eax
  44d05f:	shl    bx,cl
  44d062:	mov    ecx,edx
  44d064:	movzx  eax,ax
  44d067:	shr    eax,cl
  44d069:	or     bx,ax
  44d06c:	mov    eax,ebx
  44d06e:	pop    ebx
  44d06f:	ret    
  44d070:	mov    eax,0x400
  44d075:	ret    
  44d076:	mov    eax,eax
  44d078:	mov    eax,0x1
  44d07d:	ret    
  44d07e:	mov    eax,eax
  44d080:	push   ebx
  44d081:	mov    ebx,edx
  44d083:	mov    eax,ebx
  44d085:	mov    edx,0x44d09c
  44d08a:	call   0x404fdc
  44d08f:	pop    ebx
  44d090:	ret    
  44d091:	add    BYTE PTR [eax],al
  44d093:	add    bh,bh
  44d095:	(bad)  
  44d096:	(bad)  
  44d097:	inc    DWORD PTR [ebx]
  44d099:	add    BYTE PTR [eax],al
  44d09b:	add    BYTE PTR [edx+0x43],dl
  44d09e:	xor    al,BYTE PTR [eax]
  44d0a0:	push   ebx
  44d0a1:	push   esi
  44d0a2:	push   edi
  44d0a3:	add    esp,0xfffffff8
  44d0a6:	xor    ecx,ecx
  44d0a8:	mov    dl,0x1
  44d0aa:	mov    eax,ds:0x44cf18
  44d0af:	call   0x44231c
  44d0b4:	mov    esi,eax
  44d0b6:	push   0x0
  44d0b8:	mov    edx,0x469f00
  44d0bd:	mov    ecx,0x80
  44d0c2:	mov    eax,esi
  44d0c4:	mov    ebx,DWORD PTR [eax]
  44d0c6:	call   DWORD PTR [ebx+0x40]
  44d0c9:	mov    ecx,esp
  44d0cb:	mov    edx,0x469f10
  44d0d0:	mov    eax,esi
  44d0d2:	mov    ebx,DWORD PTR [eax]
  44d0d4:	call   DWORD PTR [ebx+0x6c]
  44d0d7:	mov    edx,0x469f18
  44d0dc:	mov    eax,esp
  44d0de:	mov    ecx,0x8
  44d0e3:	call   0x408538
  44d0e8:	mov    ebx,eax
  44d0ea:	mov    ecx,esp
  44d0ec:	mov    edx,esp
  44d0ee:	mov    eax,esi
  44d0f0:	mov    edi,DWORD PTR [eax]
  44d0f2:	call   DWORD PTR [edi+0x70]
  44d0f5:	mov    edx,0x469f10
  44d0fa:	mov    eax,esp
  44d0fc:	mov    ecx,0x8
  44d101:	call   0x408538
  44d106:	and    bl,al
  44d108:	mov    eax,esi
  44d10a:	mov    edx,DWORD PTR [eax]
  44d10c:	call   DWORD PTR [edx+0x44]
  44d10f:	push   0x0
  44d111:	mov    edx,0x469f20
  44d116:	mov    ecx,0x80
  44d11b:	mov    eax,esi
  44d11d:	mov    edi,DWORD PTR [eax]
  44d11f:	call   DWORD PTR [edi+0x40]
  44d122:	mov    ecx,esp
  44d124:	mov    edx,0x469f30
  44d129:	mov    eax,esi
  44d12b:	mov    edi,DWORD PTR [eax]
  44d12d:	call   DWORD PTR [edi+0x6c]
  44d130:	mov    edx,0x469f38
  44d135:	mov    eax,esp
  44d137:	mov    ecx,0x8
  44d13c:	call   0x408538
  44d141:	and    bl,al
  44d143:	mov    ecx,esp
  44d145:	mov    edx,esp
  44d147:	mov    eax,esi
  44d149:	mov    edi,DWORD PTR [eax]
  44d14b:	call   DWORD PTR [edi+0x70]
  44d14e:	mov    edx,0x469f30
  44d153:	mov    eax,esp
  44d155:	mov    ecx,0x8
  44d15a:	call   0x408538
  44d15f:	and    bl,al
  44d161:	mov    eax,esi
  44d163:	mov    edx,DWORD PTR [eax]
  44d165:	call   DWORD PTR [edx+0x44]
  44d168:	mov    eax,esi
  44d16a:	call   0x4040a0
  44d16f:	mov    eax,ebx
  44d171:	pop    ecx
  44d172:	pop    edx
  44d173:	pop    edi
  44d174:	pop    esi
  44d175:	pop    ebx
  44d176:	ret    
  44d177:	nop
  44d178:	push   ebx
  44d179:	push   esi
  44d17a:	push   edi
  44d17b:	add    esp,0xffffff80
  44d17e:	mov    ebx,ecx
  44d180:	mov    esi,eax
  44d182:	mov    edi,ebx
  44d184:	shr    edi,0x3
  44d187:	mov    ecx,edi
  44d189:	mov    eax,edx
  44d18b:	mov    edx,esp
  44d18d:	call   0x403090
  44d192:	mov    edx,edi
  44d194:	cmp    edx,0x7f
  44d197:	ja     0x44d1c9
  44d199:	lea    eax,[esp+edx*1-0x1]
  44d19d:	mov    ecx,ebx
  44d19f:	shr    ecx,0x3
  44d1a2:	mov    edi,edx
  44d1a4:	sub    edi,ecx
  44d1a6:	movzx  ecx,BYTE PTR [esp+edi*1]
  44d1aa:	movzx  edi,BYTE PTR [eax]
  44d1ad:	add    ecx,edi
  44d1af:	and    ecx,0xff
  44d1b5:	movzx  ecx,BYTE PTR [ecx+0x469e00]
  44d1bc:	mov    BYTE PTR [eax+0x1],cl
  44d1bf:	inc    edx
  44d1c0:	inc    eax
  44d1c1:	cmp    edx,0x80
  44d1c7:	jne    0x44d19d
  44d1c9:	movzx  eax,BYTE PTR [esp]
  44d1cd:	movzx  eax,BYTE PTR [eax+0x469e00]
  44d1d4:	mov    BYTE PTR [esp],al
  44d1d7:	lea    edx,[esi+0x48]
  44d1da:	mov    eax,esp
  44d1dc:	mov    ecx,0x80
  44d1e1:	call   0x403090
  44d1e6:	add    esp,0x80
  44d1ec:	pop    edi
  44d1ed:	pop    esi
  44d1ee:	pop    ebx
  44d1ef:	ret    
  44d1f0:	push   ebx
  44d1f1:	mov    ebx,eax
  44d1f3:	lea    eax,[ebx+0x48]
  44d1f6:	xor    ecx,ecx
  44d1f8:	mov    edx,0x80
  44d1fd:	call   0x4037c8
  44d202:	mov    eax,ebx
  44d204:	call   0x442770
  44d209:	pop    ebx
  44d20a:	ret    
  44d20b:	nop
  44d20c:	push   ebx
  44d20d:	push   esi
  44d20e:	push   edi
  44d20f:	push   ebp
  44d210:	add    esp,0xfffffff4
  44d213:	mov    DWORD PTR [esp],ecx
  44d216:	mov    ebx,eax
  44d218:	lea    esi,[esp+0x4]
  44d21c:	cmp    BYTE PTR [ebx+0x30],0x0
  44d220:	jne    0x44d238
  44d222:	mov    ecx,0x44d380
  44d227:	mov    dl,0x1
  44d229:	mov    eax,ds:0x441af8
  44d22e:	call   0x40c8b4
  44d233:	call   0x4048fc
  44d238:	mov    eax,DWORD PTR [edx]
  44d23a:	mov    DWORD PTR [esi],eax
  44d23c:	add    edx,0x4
  44d23f:	mov    eax,DWORD PTR [edx]
  44d241:	lea    edx,[esi+0x4]
  44d244:	mov    DWORD PTR [edx],eax
  44d246:	xor    edi,edi
  44d248:	mov    ebp,edi
  44d24a:	add    ebp,ebp
  44d24c:	add    ebp,ebp
  44d24e:	movzx  eax,WORD PTR [esi+0x6]
  44d252:	not    ax
  44d255:	and    ax,WORD PTR [esi+0x2]
  44d259:	add    ax,WORD PTR [esi]
  44d25c:	movzx  edx,WORD PTR [esi+0x4]
  44d260:	and    dx,WORD PTR [esi+0x6]
  44d264:	add    ax,dx
  44d267:	add    ax,WORD PTR [ebx+ebp*2+0x48]
  44d26c:	mov    dx,0x1
  44d270:	call   0x44d030
  44d275:	mov    WORD PTR [esi],ax
  44d278:	movzx  eax,WORD PTR [esi]
  44d27b:	not    ax
  44d27e:	and    ax,WORD PTR [esi+0x4]
  44d282:	add    ax,WORD PTR [esi+0x2]
  44d286:	movzx  edx,WORD PTR [esi+0x6]
  44d28a:	and    dx,WORD PTR [esi]
  44d28d:	add    ax,dx
  44d290:	add    ax,WORD PTR [ebx+ebp*2+0x4a]
  44d295:	mov    dx,0x2
  44d299:	call   0x44d030
  44d29e:	mov    WORD PTR [esi+0x2],ax
  44d2a2:	movzx  eax,WORD PTR [esi+0x2]
  44d2a6:	not    ax
  44d2a9:	and    ax,WORD PTR [esi+0x6]
  44d2ad:	add    ax,WORD PTR [esi+0x4]
  44d2b1:	movzx  edx,WORD PTR [esi]
  44d2b4:	and    dx,WORD PTR [esi+0x2]
  44d2b8:	add    ax,dx
  44d2bb:	add    ax,WORD PTR [ebx+ebp*2+0x4c]
  44d2c0:	mov    dx,0x3
  44d2c4:	call   0x44d030
  44d2c9:	mov    WORD PTR [esi+0x4],ax
  44d2cd:	movzx  eax,WORD PTR [esi+0x4]
  44d2d1:	not    ax
  44d2d4:	and    ax,WORD PTR [esi]
  44d2d7:	add    ax,WORD PTR [esi+0x6]
  44d2db:	movzx  edx,WORD PTR [esi+0x2]
  44d2df:	and    dx,WORD PTR [esi+0x4]
  44d2e3:	add    ax,dx
  44d2e6:	add    ax,WORD PTR [ebx+ebp*2+0x4e]
  44d2eb:	mov    dx,0x5
  44d2ef:	call   0x44d030
  44d2f4:	mov    WORD PTR [esi+0x6],ax
  44d2f8:	cmp    edi,0x4
  44d2fb:	je     0x44d302
  44d2fd:	cmp    edi,0xa
  44d300:	jne    0x44d350
  44d302:	movzx  eax,WORD PTR [esi+0x6]
  44d306:	and    ax,0x3f
  44d30a:	movzx  eax,ax
  44d30d:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d312:	add    WORD PTR [esi],ax
  44d315:	movzx  eax,WORD PTR [esi]
  44d318:	and    ax,0x3f
  44d31c:	movzx  eax,ax
  44d31f:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d324:	add    WORD PTR [esi+0x2],ax
  44d328:	movzx  eax,WORD PTR [esi+0x2]
  44d32c:	and    ax,0x3f
  44d330:	movzx  eax,ax
  44d333:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d338:	add    WORD PTR [esi+0x4],ax
  44d33c:	movzx  eax,WORD PTR [esi+0x4]
  44d340:	and    ax,0x3f
  44d344:	movzx  eax,ax
  44d347:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d34c:	add    WORD PTR [esi+0x6],ax
  44d350:	inc    edi
  44d351:	cmp    edi,0x10
  44d354:	jne    0x44d248
  44d35a:	mov    eax,DWORD PTR [esi]
  44d35c:	mov    edx,DWORD PTR [esp]
  44d35f:	mov    DWORD PTR [edx],eax
  44d361:	lea    eax,[esi+0x4]
  44d364:	mov    eax,DWORD PTR [eax]
  44d366:	mov    edx,DWORD PTR [esp]
  44d369:	add    edx,0x4
  44d36c:	mov    DWORD PTR [edx],eax
  44d36e:	add    esp,0xc
  44d371:	pop    ebp
  44d372:	pop    edi
  44d373:	pop    esi
  44d374:	pop    ebx
  44d375:	ret    
  44d376:	add    BYTE PTR [eax],al
  44d378:	(bad)  
  44d379:	(bad)  
  44d37a:	(bad)  
  44d37b:	call   DWORD PTR [esi]
  44d37d:	add    BYTE PTR [eax],al
  44d37f:	add    BYTE PTR [ebx+0x69],al
  44d382:	jo     0x44d3ec
  44d384:	gs jb  0x44d3a7
  44d387:	outs   dx,BYTE PTR ds:[esi]
  44d388:	outs   dx,DWORD PTR ds:[esi]
  44d389:	je     0x44d3ab
  44d38b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44d392:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44d399:	push   esi
  44d39a:	push   edi
  44d39b:	push   ebp
  44d39c:	add    esp,0xfffffff4
  44d39f:	mov    DWORD PTR [esp],ecx
  44d3a2:	mov    ebx,eax
  44d3a4:	lea    esi,[esp+0x4]
  44d3a8:	cmp    BYTE PTR [ebx+0x30],0x0
  44d3ac:	jne    0x44d3c4
  44d3ae:	mov    ecx,0x44d51c
  44d3b3:	mov    dl,0x1
  44d3b5:	mov    eax,ds:0x441af8
  44d3ba:	call   0x40c8b4
  44d3bf:	call   0x4048fc
  44d3c4:	mov    eax,DWORD PTR [edx]
  44d3c6:	mov    DWORD PTR [esi],eax
  44d3c8:	add    edx,0x4
  44d3cb:	mov    eax,DWORD PTR [edx]
  44d3cd:	lea    edx,[esi+0x4]
  44d3d0:	mov    DWORD PTR [edx],eax
  44d3d2:	mov    edi,0xf
  44d3d7:	mov    ebp,edi
  44d3d9:	add    ebp,ebp
  44d3db:	add    ebp,ebp
  44d3dd:	mov    dx,0x5
  44d3e1:	movzx  eax,WORD PTR [esi+0x6]
  44d3e5:	call   0x44d050
  44d3ea:	movzx  edx,WORD PTR [esi+0x4]
  44d3ee:	not    dx
  44d3f1:	and    dx,WORD PTR [esi]
  44d3f4:	sub    ax,dx
  44d3f7:	movzx  edx,WORD PTR [esi+0x2]
  44d3fb:	and    dx,WORD PTR [esi+0x4]
  44d3ff:	sub    ax,dx
  44d402:	sub    ax,WORD PTR [ebx+ebp*2+0x4e]
  44d407:	mov    WORD PTR [esi+0x6],ax
  44d40b:	mov    dx,0x3
  44d40f:	movzx  eax,WORD PTR [esi+0x4]
  44d413:	call   0x44d050
  44d418:	movzx  edx,WORD PTR [esi+0x2]
  44d41c:	not    dx
  44d41f:	and    dx,WORD PTR [esi+0x6]
  44d423:	sub    ax,dx
  44d426:	movzx  edx,WORD PTR [esi]
  44d429:	and    dx,WORD PTR [esi+0x2]
  44d42d:	sub    ax,dx
  44d430:	sub    ax,WORD PTR [ebx+ebp*2+0x4c]
  44d435:	mov    WORD PTR [esi+0x4],ax
  44d439:	mov    dx,0x2
  44d43d:	movzx  eax,WORD PTR [esi+0x2]
  44d441:	call   0x44d050
  44d446:	movzx  edx,WORD PTR [esi]
  44d449:	not    dx
  44d44c:	and    dx,WORD PTR [esi+0x4]
  44d450:	sub    ax,dx
  44d453:	movzx  edx,WORD PTR [esi+0x6]
  44d457:	and    dx,WORD PTR [esi]
  44d45a:	sub    ax,dx
  44d45d:	sub    ax,WORD PTR [ebx+ebp*2+0x4a]
  44d462:	mov    WORD PTR [esi+0x2],ax
  44d466:	mov    dx,0x1
  44d46a:	movzx  eax,WORD PTR [esi]
  44d46d:	call   0x44d050
  44d472:	movzx  edx,WORD PTR [esi+0x6]
  44d476:	not    dx
  44d479:	and    dx,WORD PTR [esi+0x2]
  44d47d:	sub    ax,dx
  44d480:	movzx  edx,WORD PTR [esi+0x4]
  44d484:	and    dx,WORD PTR [esi+0x6]
  44d488:	sub    ax,dx
  44d48b:	sub    ax,WORD PTR [ebx+ebp*2+0x48]
  44d490:	mov    WORD PTR [esi],ax
  44d493:	cmp    edi,0x5
  44d496:	je     0x44d49d
  44d498:	cmp    edi,0xb
  44d49b:	jne    0x44d4eb
  44d49d:	movzx  eax,WORD PTR [esi+0x4]
  44d4a1:	and    ax,0x3f
  44d4a5:	movzx  eax,ax
  44d4a8:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d4ad:	sub    WORD PTR [esi+0x6],ax
  44d4b1:	movzx  eax,WORD PTR [esi+0x2]
  44d4b5:	and    ax,0x3f
  44d4b9:	movzx  eax,ax
  44d4bc:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d4c1:	sub    WORD PTR [esi+0x4],ax
  44d4c5:	movzx  eax,WORD PTR [esi]
  44d4c8:	and    ax,0x3f
  44d4cc:	movzx  eax,ax
  44d4cf:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d4d4:	sub    WORD PTR [esi+0x2],ax
  44d4d8:	movzx  eax,WORD PTR [esi+0x6]
  44d4dc:	and    ax,0x3f
  44d4e0:	movzx  eax,ax
  44d4e3:	movzx  eax,WORD PTR [ebx+eax*2+0x48]
  44d4e8:	sub    WORD PTR [esi],ax
  44d4eb:	dec    edi
  44d4ec:	cmp    edi,0xffffffff
  44d4ef:	jne    0x44d3d7
  44d4f5:	mov    eax,DWORD PTR [esi]
  44d4f7:	mov    edx,DWORD PTR [esp]
  44d4fa:	mov    DWORD PTR [edx],eax
  44d4fc:	lea    eax,[esi+0x4]
  44d4ff:	mov    eax,DWORD PTR [eax]
  44d501:	mov    edx,DWORD PTR [esp]
  44d504:	add    edx,0x4
  44d507:	mov    DWORD PTR [edx],eax
  44d509:	add    esp,0xc
  44d50c:	pop    ebp
  44d50d:	pop    edi
  44d50e:	pop    esi
  44d50f:	pop    ebx
  44d510:	ret    
  44d511:	add    BYTE PTR [eax],al
  44d513:	add    bh,bh
  44d515:	(bad)  
  44d516:	(bad)  
  44d517:	call   DWORD PTR [esi]
  44d519:	add    BYTE PTR [eax],al
  44d51b:	add    BYTE PTR [ebx+0x69],al
  44d51e:	jo     0x44d588
  44d520:	gs jb  0x44d543
  44d523:	outs   dx,BYTE PTR ds:[esi]
  44d524:	outs   dx,DWORD PTR ds:[esi]
  44d525:	je     0x44d547
  44d527:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44d52e:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  44d535:	aad    0x44
	...
  44d543:	add    ah,ch
  44d545:	aad    0x44
	...
  44d553:	add    ah,bl
  44d555:	aad    0x44
  44d557:	add    BYTE PTR [edx+eax*1],dh
  44d55a:	add    BYTE PTR [eax],al
  44d55c:	pusha  
  44d55d:	sbb    DWORD PTR [eax+eax*1+0x18],eax
  44d561:	test   eax,0x42dc0041
  44d566:	inc    eax
  44d567:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44d56d:	inc    edx
  44d56e:	inc    eax
  44d56f:	add    al,bl
  44d571:	inc    edx
  44d572:	inc    eax
  44d573:	add    BYTE PTR [eax],bh
  44d575:	inc    eax
  44d576:	inc    eax
  44d577:	add    BYTE PTR [eax+eax*2+0x40],dl
  44d57b:	add    BYTE PTR [eax+0x20],bh
  44d57e:	inc    esp
  44d57f:	add    BYTE PTR [eax+0x41],ch
  44d582:	inc    ecx
  44d583:	add    BYTE PTR [eax-0x5b],dh
  44d586:	inc    ecx
  44d587:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44d58e:	inc    ecx
  44d58f:	add    BYTE PTR [eax],dl
  44d591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d592:	inc    ecx
  44d593:	add    BYTE PTR [eax-0x5a],bl
  44d596:	inc    ecx
  44d597:	add    BYTE PTR [eax-0x59],dl
  44d59a:	inc    ecx
  44d59b:	add    BYTE PTR [eax],dh
  44d59d:	test   eax,0xa6680041
  44d5a2:	inc    ecx
  44d5a3:	add    BYTE PTR [eax-0x5a],ah
  44d5a6:	inc    ecx
  44d5a7:	add    BYTE PTR [eax],bh
  44d5a9:	test   eax,0x203c0041
  44d5ae:	inc    esp
  44d5af:	add    BYTE PTR [esi+edx*8],cl
  44d5b2:	inc    esp
  44d5b3:	add    BYTE PTR [esi+edx*8],dl
  44d5b6:	inc    esp
  44d5b7:	add    BYTE PTR [esi+edx*8],dh
  44d5ba:	inc    esp
  44d5bb:	add    BYTE PTR [esi+edx*8],bh
  44d5be:	inc    esp
  44d5bf:	add    ah,cl
  44d5c1:	(bad)  
  44d5c2:	inc    esp
  44d5c3:	add    BYTE PTR [ecx+ebx*8-0x267fffbc],dl
  44d5ca:	inc    esp
  44d5cb:	add    al,cl
  44d5cd:	fld    DWORD PTR [eax+eax*1-0x7c]
  44d5d1:	fiadd  DWORD PTR [eax+eax*1+0x50]
  44d5d5:	pop    ds
  44d5d6:	inc    esp
  44d5d7:	add    al,dh
  44d5d9:	pop    ds
  44d5da:	inc    esp
  44d5db:	add    BYTE PTR [eax],cl
  44d5dd:	push   esp
  44d5de:	inc    esp
  44d5df:	inc    ebx
  44d5e0:	push   eax
  44d5e1:	pop    edi
  44d5e2:	jb     0x44d647
  44d5e4:	xor    al,0x8d
  44d5e6:	inc    eax
  44d5e7:	add    ah,ch
  44d5e9:	aad    0x44
  44d5eb:	add    BYTE PTR [edi],al
  44d5ed:	or     BYTE PTR [esp+eax*2+0x43],dl
  44d5f1:	push   eax
  44d5f2:	pop    edi
  44d5f3:	jb     0x44d658
  44d5f5:	xor    al,0x80
  44d5f7:	aad    0x44
  44d5f9:	add    BYTE PTR [edx+ebx*1],dl
  44d5fc:	inc    esp
  44d5fd:	add    BYTE PTR ds:0x43440600,al
  44d603:	push   eax
  44d604:	jb     0x44d669
  44d606:	xor    al,0x0
  44d608:	add    BYTE PTR [ebp+0x13b80040],cl
  44d60e:	add    BYTE PTR [eax],al
  44d610:	add    bl,al
  44d612:	mov    eax,eax
  44d614:	push   ebx
  44d615:	mov    ebx,edx
  44d617:	mov    eax,ebx
  44d619:	mov    edx,0x44d630
  44d61e:	call   0x404fdc
  44d623:	pop    ebx
  44d624:	ret    
  44d625:	add    BYTE PTR [eax],al
  44d627:	add    bh,bh
  44d629:	(bad)  
  44d62a:	(bad)  
  44d62b:	inc    DWORD PTR [ebx]
  44d62d:	add    BYTE PTR [eax],al
  44d62f:	add    BYTE PTR [edx+0x43],dl
  44d632:	xor    al,0x0
  44d634:	mov    eax,0x800
  44d639:	ret    
  44d63a:	mov    eax,eax
  44d63c:	push   ebx
  44d63d:	push   esi
  44d63e:	push   edi
  44d63f:	add    esp,0xfffffff8
  44d642:	xor    ecx,ecx
  44d644:	mov    dl,0x1
  44d646:	mov    eax,ds:0x44d534
  44d64b:	call   0x44203c
  44d650:	mov    esi,eax
  44d652:	push   0x0
  44d654:	mov    edx,0x469f40
  44d659:	mov    ecx,0x28
  44d65e:	mov    eax,esi
  44d660:	mov    ebx,DWORD PTR [eax]
  44d662:	call   DWORD PTR [ebx+0x40]
  44d665:	push   0x5
  44d667:	lea    ecx,[esp+0x4]
  44d66b:	mov    edx,0x469f48
  44d670:	mov    eax,esi
  44d672:	mov    ebx,DWORD PTR [eax]
  44d674:	call   DWORD PTR [ebx+0x4c]
  44d677:	mov    edx,0x469f50
  44d67c:	mov    eax,esp
  44d67e:	mov    ecx,0x5
  44d683:	call   0x408538
  44d688:	mov    ebx,eax
  44d68a:	mov    eax,esi
  44d68c:	mov    edx,DWORD PTR [eax]
  44d68e:	call   DWORD PTR [edx+0x48]
  44d691:	push   0x5
  44d693:	lea    ecx,[esp+0x4]
  44d697:	lea    edx,[esp+0x4]
  44d69b:	mov    eax,esi
  44d69d:	mov    edi,DWORD PTR [eax]
  44d69f:	call   DWORD PTR [edi+0x50]
  44d6a2:	mov    edx,0x469f48
  44d6a7:	mov    eax,esp
  44d6a9:	mov    ecx,0x5
  44d6ae:	call   0x408538
  44d6b3:	and    bl,al
  44d6b5:	mov    eax,esi
  44d6b7:	mov    edx,DWORD PTR [eax]
  44d6b9:	call   DWORD PTR [edx+0x44]
  44d6bc:	mov    eax,esi
  44d6be:	call   0x4040a0
  44d6c3:	mov    eax,ebx
  44d6c5:	pop    ecx
  44d6c6:	pop    edx
  44d6c7:	pop    edi
  44d6c8:	pop    esi
  44d6c9:	pop    ebx
  44d6ca:	ret    
  44d6cb:	nop
  44d6cc:	push   ebp
  44d6cd:	mov    ebp,esp
  44d6cf:	add    esp,0xfffffefc
  44d6d5:	push   ebx
  44d6d6:	push   esi
  44d6d7:	mov    esi,ecx
  44d6d9:	mov    DWORD PTR [ebp-0x4],edx
  44d6dc:	mov    ebx,eax
  44d6de:	cmp    BYTE PTR [ebx+0x30],0x0
  44d6e2:	je     0x44d6eb
  44d6e4:	mov    eax,ebx
  44d6e6:	mov    edx,DWORD PTR [eax]
  44d6e8:	call   DWORD PTR [edx+0x44]
  44d6eb:	push   0x0
  44d6ed:	mov    edx,DWORD PTR [ebp-0x4]
  44d6f0:	mov    ecx,esi
  44d6f2:	mov    eax,ebx
  44d6f4:	call   0x441e00
  44d6f9:	mov    ecx,0x8
  44d6fe:	mov    eax,esi
  44d700:	xor    edx,edx
  44d702:	div    ecx
  44d704:	mov    esi,eax
  44d706:	xor    ecx,ecx
  44d708:	mov    BYTE PTR [ebx+ecx*1+0x34],cl
  44d70c:	mov    eax,ecx
  44d70e:	xor    edx,edx
  44d710:	div    esi
  44d712:	mov    eax,DWORD PTR [ebp-0x4]
  44d715:	add    edx,eax
  44d717:	movzx  eax,BYTE PTR [edx]
  44d71a:	mov    BYTE PTR [ebp+ecx*1-0x104],al
  44d721:	mov    eax,ecx
  44d723:	inc    eax
  44d724:	mov    BYTE PTR [ebx+ecx*1+0x35],al
  44d728:	lea    eax,[ecx+0x1]
  44d72b:	xor    edx,edx
  44d72d:	div    esi
  44d72f:	mov    eax,DWORD PTR [ebp-0x4]
  44d732:	add    edx,eax
  44d734:	movzx  eax,BYTE PTR [edx]
  44d737:	mov    BYTE PTR [ebp+ecx*1-0x103],al
  44d73e:	mov    eax,ecx
  44d740:	add    al,0x2
  44d742:	mov    BYTE PTR [ebx+ecx*1+0x36],al
  44d746:	lea    eax,[ecx+0x2]
  44d749:	xor    edx,edx
  44d74b:	div    esi
  44d74d:	mov    eax,DWORD PTR [ebp-0x4]
  44d750:	add    edx,eax
  44d752:	movzx  eax,BYTE PTR [edx]
  44d755:	mov    BYTE PTR [ebp+ecx*1-0x102],al
  44d75c:	mov    eax,ecx
  44d75e:	add    al,0x3
  44d760:	mov    BYTE PTR [ebx+ecx*1+0x37],al
  44d764:	lea    eax,[ecx+0x3]
  44d767:	xor    edx,edx
  44d769:	div    esi
  44d76b:	mov    eax,DWORD PTR [ebp-0x4]
  44d76e:	add    edx,eax
  44d770:	movzx  eax,BYTE PTR [edx]
  44d773:	mov    BYTE PTR [ebp+ecx*1-0x101],al
  44d77a:	mov    eax,ecx
  44d77c:	add    al,0x4
  44d77e:	mov    BYTE PTR [ebx+ecx*1+0x38],al
  44d782:	lea    eax,[ecx+0x4]
  44d785:	xor    edx,edx
  44d787:	div    esi
  44d789:	mov    eax,DWORD PTR [ebp-0x4]
  44d78c:	add    edx,eax
  44d78e:	movzx  eax,BYTE PTR [edx]
  44d791:	mov    BYTE PTR [ebp+ecx*1-0x100],al
  44d798:	mov    eax,ecx
  44d79a:	add    al,0x5
  44d79c:	mov    BYTE PTR [ebx+ecx*1+0x39],al
  44d7a0:	lea    eax,[ecx+0x5]
  44d7a3:	xor    edx,edx
  44d7a5:	div    esi
  44d7a7:	mov    eax,DWORD PTR [ebp-0x4]
  44d7aa:	add    edx,eax
  44d7ac:	movzx  eax,BYTE PTR [edx]
  44d7af:	mov    BYTE PTR [ebp+ecx*1-0xff],al
  44d7b6:	mov    eax,ecx
  44d7b8:	add    al,0x6
  44d7ba:	mov    BYTE PTR [ebx+ecx*1+0x3a],al
  44d7be:	lea    eax,[ecx+0x6]
  44d7c1:	xor    edx,edx
  44d7c3:	div    esi
  44d7c5:	mov    eax,DWORD PTR [ebp-0x4]
  44d7c8:	add    edx,eax
  44d7ca:	movzx  eax,BYTE PTR [edx]
  44d7cd:	mov    BYTE PTR [ebp+ecx*1-0xfe],al
  44d7d4:	mov    eax,ecx
  44d7d6:	add    al,0x7
  44d7d8:	mov    BYTE PTR [ebx+ecx*1+0x3b],al
  44d7dc:	lea    eax,[ecx+0x7]
  44d7df:	xor    edx,edx
  44d7e1:	div    esi
  44d7e3:	mov    eax,DWORD PTR [ebp-0x4]
  44d7e6:	add    edx,eax
  44d7e8:	movzx  eax,BYTE PTR [edx]
  44d7eb:	mov    BYTE PTR [ebp+ecx*1-0xfd],al
  44d7f2:	add    ecx,0x8
  44d7f5:	cmp    ecx,0xff
  44d7fb:	jb     0x44d708
  44d801:	xor    eax,eax
  44d803:	xor    ecx,ecx
  44d805:	movzx  edx,BYTE PTR [ebx+ecx*1+0x34]
  44d80a:	add    eax,edx
  44d80c:	movzx  edx,BYTE PTR [ebp+ecx*1-0x104]
  44d814:	add    eax,edx
  44d816:	and    eax,0xff
  44d81b:	movzx  esi,BYTE PTR [ebx+ecx*1+0x34]
  44d820:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d825:	mov    BYTE PTR [ebx+ecx*1+0x34],dl
  44d829:	mov    edx,esi
  44d82b:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d82f:	movzx  edx,BYTE PTR [ebx+ecx*1+0x35]
  44d834:	add    eax,edx
  44d836:	movzx  edx,BYTE PTR [ebp+ecx*1-0x103]
  44d83e:	add    eax,edx
  44d840:	and    eax,0xff
  44d845:	movzx  esi,BYTE PTR [ebx+ecx*1+0x35]
  44d84a:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d84f:	mov    BYTE PTR [ebx+ecx*1+0x35],dl
  44d853:	mov    edx,esi
  44d855:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d859:	movzx  edx,BYTE PTR [ebx+ecx*1+0x36]
  44d85e:	add    eax,edx
  44d860:	movzx  edx,BYTE PTR [ebp+ecx*1-0x102]
  44d868:	add    eax,edx
  44d86a:	and    eax,0xff
  44d86f:	movzx  esi,BYTE PTR [ebx+ecx*1+0x36]
  44d874:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d879:	mov    BYTE PTR [ebx+ecx*1+0x36],dl
  44d87d:	mov    edx,esi
  44d87f:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d883:	movzx  edx,BYTE PTR [ebx+ecx*1+0x37]
  44d888:	add    eax,edx
  44d88a:	movzx  edx,BYTE PTR [ebp+ecx*1-0x101]
  44d892:	add    eax,edx
  44d894:	and    eax,0xff
  44d899:	movzx  esi,BYTE PTR [ebx+ecx*1+0x37]
  44d89e:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d8a3:	mov    BYTE PTR [ebx+ecx*1+0x37],dl
  44d8a7:	mov    edx,esi
  44d8a9:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d8ad:	movzx  edx,BYTE PTR [ebx+ecx*1+0x38]
  44d8b2:	add    eax,edx
  44d8b4:	movzx  edx,BYTE PTR [ebp+ecx*1-0x100]
  44d8bc:	add    eax,edx
  44d8be:	and    eax,0xff
  44d8c3:	movzx  esi,BYTE PTR [ebx+ecx*1+0x38]
  44d8c8:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d8cd:	mov    BYTE PTR [ebx+ecx*1+0x38],dl
  44d8d1:	mov    edx,esi
  44d8d3:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d8d7:	movzx  edx,BYTE PTR [ebx+ecx*1+0x39]
  44d8dc:	add    eax,edx
  44d8de:	movzx  edx,BYTE PTR [ebp+ecx*1-0xff]
  44d8e6:	add    eax,edx
  44d8e8:	and    eax,0xff
  44d8ed:	movzx  esi,BYTE PTR [ebx+ecx*1+0x39]
  44d8f2:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d8f7:	mov    BYTE PTR [ebx+ecx*1+0x39],dl
  44d8fb:	mov    edx,esi
  44d8fd:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d901:	movzx  edx,BYTE PTR [ebx+ecx*1+0x3a]
  44d906:	add    eax,edx
  44d908:	movzx  edx,BYTE PTR [ebp+ecx*1-0xfe]
  44d910:	add    eax,edx
  44d912:	and    eax,0xff
  44d917:	movzx  esi,BYTE PTR [ebx+ecx*1+0x3a]
  44d91c:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d921:	mov    BYTE PTR [ebx+ecx*1+0x3a],dl
  44d925:	mov    edx,esi
  44d927:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d92b:	movzx  edx,BYTE PTR [ebx+ecx*1+0x3b]
  44d930:	add    eax,edx
  44d932:	movzx  edx,BYTE PTR [ebp+ecx*1-0xfd]
  44d93a:	add    eax,edx
  44d93c:	and    eax,0xff
  44d941:	movzx  esi,BYTE PTR [ebx+ecx*1+0x3b]
  44d946:	movzx  edx,BYTE PTR [ebx+eax*1+0x34]
  44d94b:	mov    BYTE PTR [ebx+ecx*1+0x3b],dl
  44d94f:	mov    edx,esi
  44d951:	mov    BYTE PTR [ebx+eax*1+0x34],dl
  44d955:	add    ecx,0x8
  44d958:	cmp    ecx,0xff
  44d95e:	jb     0x44d805
  44d964:	lea    edx,[ebx+0x134]
  44d96a:	lea    eax,[ebx+0x34]
  44d96d:	mov    ecx,0x100
  44d972:	call   0x403090
  44d977:	pop    esi
  44d978:	pop    ebx
  44d979:	mov    esp,ebp
  44d97b:	pop    ebp
  44d97c:	ret    0x4
  44d97f:	nop
  44d980:	lea    edx,[eax+0x34]
  44d983:	add    eax,0x134
  44d988:	mov    ecx,0x100
  44d98d:	call   0x403090
  44d992:	ret    
  44d993:	nop
  44d994:	push   ebx
  44d995:	mov    ebx,eax
  44d997:	lea    eax,[ebx+0x134]
  44d99d:	mov    ecx,0xff
  44d9a2:	mov    edx,0x100
  44d9a7:	call   0x4037c8
  44d9ac:	lea    eax,[ebx+0x34]
  44d9af:	mov    ecx,0xff
  44d9b4:	mov    edx,0x100
  44d9b9:	call   0x4037c8
  44d9be:	mov    eax,ebx
  44d9c0:	call   0x441e6c
  44d9c5:	pop    ebx
  44d9c6:	ret    
  44d9c7:	nop
  44d9c8:	push   ebp
  44d9c9:	mov    ebp,esp
  44d9cb:	add    esp,0xfffffff0
  44d9ce:	push   ebx
  44d9cf:	push   esi
  44d9d0:	push   edi
  44d9d1:	mov    DWORD PTR [ebp-0x8],ecx
  44d9d4:	mov    DWORD PTR [ebp-0x4],edx
  44d9d7:	cmp    BYTE PTR [eax+0x30],0x0
  44d9db:	jne    0x44d9f3
  44d9dd:	mov    ecx,0x44da6c
  44d9e2:	mov    dl,0x1
  44d9e4:	mov    eax,ds:0x441908
  44d9e9:	call   0x40c8b4
  44d9ee:	call   0x4048fc
  44d9f3:	xor    ecx,ecx
  44d9f5:	xor    edx,edx
  44d9f7:	mov    ebx,DWORD PTR [ebp+0x8]
  44d9fa:	dec    ebx
  44d9fb:	test   ebx,ebx
  44d9fd:	jb     0x44da5a
  44d9ff:	inc    ebx
  44da00:	mov    DWORD PTR [ebp-0x10],ebx
  44da03:	mov    DWORD PTR [ebp-0xc],0x0
  44da0a:	inc    ecx
  44da0b:	and    ecx,0xff
  44da11:	movzx  esi,BYTE PTR [eax+ecx*1+0x34]
  44da16:	lea    edx,[esi+edx*1]
  44da19:	and    edx,0xff
  44da1f:	movzx  ebx,BYTE PTR [eax+edx*1+0x34]
  44da24:	mov    BYTE PTR [eax+ecx*1+0x34],bl
  44da28:	mov    ebx,esi
  44da2a:	mov    BYTE PTR [eax+edx*1+0x34],bl
  44da2e:	movzx  ebx,BYTE PTR [eax+ecx*1+0x34]
  44da33:	add    esi,ebx
  44da35:	and    esi,0xff
  44da3b:	mov    ebx,DWORD PTR [ebp-0x4]
  44da3e:	mov    edi,DWORD PTR [ebp-0xc]
  44da41:	movzx  ebx,BYTE PTR [ebx+edi*1]
  44da45:	xor    bl,BYTE PTR [eax+esi*1+0x34]
  44da49:	mov    esi,DWORD PTR [ebp-0x8]
  44da4c:	mov    edi,DWORD PTR [ebp-0xc]
  44da4f:	mov    BYTE PTR [esi+edi*1],bl
  44da52:	inc    DWORD PTR [ebp-0xc]
  44da55:	dec    DWORD PTR [ebp-0x10]
  44da58:	jne    0x44da0a
  44da5a:	pop    edi
  44da5b:	pop    esi
  44da5c:	pop    ebx
  44da5d:	mov    esp,ebp
  44da5f:	pop    ebp
  44da60:	ret    0x4
  44da63:	add    bh,bh
  44da65:	(bad)  
  44da66:	(bad)  
  44da67:	call   DWORD PTR [esi]
  44da69:	add    BYTE PTR [eax],al
  44da6b:	add    BYTE PTR [ebx+0x69],al
  44da6e:	jo     0x44dad8
  44da70:	gs jb  0x44da93
  44da73:	outs   dx,BYTE PTR ds:[esi]
  44da74:	outs   dx,DWORD PTR ds:[esi]
  44da75:	je     0x44da97
  44da77:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44da7e:	imul   edi,DWORD PTR [edx+0x65],0x55000064
  44da85:	mov    ebp,esp
  44da87:	add    esp,0xfffffff0
  44da8a:	push   ebx
  44da8b:	push   esi
  44da8c:	push   edi
  44da8d:	mov    DWORD PTR [ebp-0x8],ecx
  44da90:	mov    DWORD PTR [ebp-0x4],edx
  44da93:	cmp    BYTE PTR [eax+0x30],0x0
  44da97:	jne    0x44daaf
  44da99:	mov    ecx,0x44db28
  44da9e:	mov    dl,0x1
  44daa0:	mov    eax,ds:0x441908
  44daa5:	call   0x40c8b4
  44daaa:	call   0x4048fc
  44daaf:	xor    ecx,ecx
  44dab1:	xor    edx,edx
  44dab3:	mov    ebx,DWORD PTR [ebp+0x8]
  44dab6:	dec    ebx
  44dab7:	test   ebx,ebx
  44dab9:	jb     0x44db16
  44dabb:	inc    ebx
  44dabc:	mov    DWORD PTR [ebp-0x10],ebx
  44dabf:	mov    DWORD PTR [ebp-0xc],0x0
  44dac6:	inc    ecx
  44dac7:	and    ecx,0xff
  44dacd:	movzx  esi,BYTE PTR [eax+ecx*1+0x34]
  44dad2:	lea    edx,[esi+edx*1]
  44dad5:	and    edx,0xff
  44dadb:	movzx  ebx,BYTE PTR [eax+edx*1+0x34]
  44dae0:	mov    BYTE PTR [eax+ecx*1+0x34],bl
  44dae4:	mov    ebx,esi
  44dae6:	mov    BYTE PTR [eax+edx*1+0x34],bl
  44daea:	movzx  ebx,BYTE PTR [eax+ecx*1+0x34]
  44daef:	add    esi,ebx
  44daf1:	and    esi,0xff
  44daf7:	mov    ebx,DWORD PTR [ebp-0x4]
  44dafa:	mov    edi,DWORD PTR [ebp-0xc]
  44dafd:	movzx  ebx,BYTE PTR [ebx+edi*1]
  44db01:	xor    bl,BYTE PTR [eax+esi*1+0x34]
  44db05:	mov    esi,DWORD PTR [ebp-0x8]
  44db08:	mov    edi,DWORD PTR [ebp-0xc]
  44db0b:	mov    BYTE PTR [esi+edi*1],bl
  44db0e:	inc    DWORD PTR [ebp-0xc]
  44db11:	dec    DWORD PTR [ebp-0x10]
  44db14:	jne    0x44dac6
  44db16:	pop    edi
  44db17:	pop    esi
  44db18:	pop    ebx
  44db19:	mov    esp,ebp
  44db1b:	pop    ebp
  44db1c:	ret    0x4
  44db1f:	add    bh,bh
  44db21:	(bad)  
  44db22:	(bad)  
  44db23:	call   DWORD PTR [esi]
  44db25:	add    BYTE PTR [eax],al
  44db27:	add    BYTE PTR [ebx+0x69],al
  44db2a:	jo     0x44db94
  44db2c:	gs jb  0x44db4f
  44db2f:	outs   dx,BYTE PTR ds:[esi]
  44db30:	outs   dx,DWORD PTR ds:[esi]
  44db31:	je     0x44db53
  44db33:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44db3a:	imul   edi,DWORD PTR [edx+0x65],0x8c000064
  44db41:	fild   DWORD PTR [eax+eax*1+0x0]
	...
  44db4d:	add    BYTE PTR [eax],al
  44db4f:	add    BYTE PTR [eax],bh
  44db51:	fadd   QWORD PTR [eax+eax*1+0x0]
	...
  44db5d:	add    BYTE PTR [eax],al
  44db5f:	add    BYTE PTR [eax],ch
  44db61:	fadd   QWORD PTR [eax+eax*1-0x50]
  44db65:	add    BYTE PTR [eax],al
  44db67:	add    BYTE PTR [eax+0x18004423],al
  44db6d:	test   eax,0x42dc0041
  44db72:	inc    eax
  44db73:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44db79:	inc    edx
  44db7a:	inc    eax
  44db7b:	add    al,bl
  44db7d:	inc    edx
  44db7e:	inc    eax
  44db7f:	add    BYTE PTR [eax],bh
  44db81:	inc    eax
  44db82:	inc    eax
  44db83:	add    BYTE PTR [eax+eax*2+0x40],dl
  44db87:	add    BYTE PTR [eax+0x20],bh
  44db8a:	inc    esp
  44db8b:	add    BYTE PTR [eax+0x41],ch
  44db8e:	inc    ecx
  44db8f:	add    BYTE PTR [eax-0x5b],dh
  44db92:	inc    ecx
  44db93:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44db9a:	inc    ecx
  44db9b:	add    BYTE PTR [eax],dl
  44db9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44db9e:	inc    ecx
  44db9f:	add    BYTE PTR [eax-0x5a],bl
  44dba2:	inc    ecx
  44dba3:	add    BYTE PTR [eax-0x59],dl
  44dba6:	inc    ecx
  44dba7:	add    BYTE PTR [eax],dh
  44dba9:	test   eax,0xa6680041
  44dbae:	inc    ecx
  44dbaf:	add    BYTE PTR [eax-0x5a],ah
  44dbb2:	inc    ecx
  44dbb3:	add    BYTE PTR [eax],bh
  44dbb5:	test   eax,0x231c0041
  44dbba:	inc    esp
  44dbbb:	add    BYTE PTR [eax-0x6fffbb24],cl
  44dbc1:	fadd   QWORD PTR [eax+eax*1-0x50]
  44dbc5:	fadd   QWORD PTR [eax+eax*1-0x48]
  44dbc9:	fadd   QWORD PTR [eax+eax*1+0x8]
  44dbcd:	es inc esp
  44dbcf:	add    ah,al
  44dbd1:	fiadd  WORD PTR [eax+eax*1+0x20]
  44dbd5:	daa    
  44dbd6:	inc    esp
  44dbd7:	add    ah,al
  44dbd9:	and    BYTE PTR [eax+eax*1+0x38],al
  44dbdd:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44dbe1:	and    DWORD PTR [eax+eax*1-0x14],eax
  44dbe5:	and    DWORD PTR [eax+eax*1-0x44],eax
  44dbe9:	fld    QWORD PTR [eax+eax*1+0x0]
  44dbed:	es inc esp
  44dbef:	add    BYTE PTR [esi+eiz*1+0x44],bh
  44dbf3:	add    ah,dl
  44dbf5:	es inc esp
  44dbf7:	add    ah,ah
  44dbf9:	fiadd  WORD PTR [eax+eax*1-0x70]
  44dbfd:	fild   WORD PTR [eax+eax*1-0x60]
  44dc01:	daa    
  44dc02:	inc    esp
  44dc03:	add    BYTE PTR [eax+ebp*1+0x299c0044],dl
  44dc0a:	inc    esp
  44dc0b:	add    BYTE PTR [eax],bh
  44dc0d:	sub    al,BYTE PTR [eax+eax*1-0x24]
  44dc11:	sub    al,BYTE PTR [eax+eax*1-0x38]
  44dc15:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  44dc19:	sub    al,0x44
  44dc1b:	add    BYTE PTR [eax-0x77ffbbd3],ch
  44dc21:	cs inc esp
  44dc23:	add    BYTE PTR [eax+0x2f],bh
  44dc26:	inc    esp
  44dc27:	add    BYTE PTR [eax],cl
  44dc29:	push   esp
  44dc2a:	inc    esp
  44dc2b:	inc    ebx
  44dc2c:	push   eax
  44dc2d:	pop    edi
  44dc2e:	jb     0x44dc93
  44dc30:	xor    eax,0x3800408d
  44dc35:	fadd   QWORD PTR [eax+eax*1+0x7]
  44dc39:	or     BYTE PTR [esp+eax*2+0x43],dl
  44dc3d:	push   eax
  44dc3e:	pop    edi
  44dc3f:	jb     0x44dca4
  44dc41:	xor    eax,0x44db8c
  44dc46:	jl     0x44dc6c
  44dc48:	inc    esp
  44dc49:	add    BYTE PTR [edi],al
  44dc4b:	add    BYTE PTR [esi],al
  44dc4d:	inc    esp
  44dc4e:	inc    ebx
  44dc4f:	push   eax
  44dc50:	jb     0x44dcb5
  44dc52:	xor    eax,0x408d0000
  44dc57:	add    BYTE PTR [ebx-0x75],dl
  44dc5a:	retf   0xd88b
  44dc5d:	shl    ebx,cl
  44dc5f:	mov    ecx,0x20
  44dc64:	sub    ecx,edx
  44dc66:	shr    eax,cl
  44dc68:	or     ebx,eax
  44dc6a:	mov    eax,ebx
  44dc6c:	pop    ebx
  44dc6d:	ret    
  44dc6e:	mov    eax,eax
  44dc70:	push   ebx
  44dc71:	mov    ecx,edx
  44dc73:	mov    ebx,eax
  44dc75:	shr    ebx,cl
  44dc77:	mov    ecx,0x20
  44dc7c:	sub    ecx,edx
  44dc7e:	shl    eax,cl
  44dc80:	or     ebx,eax
  44dc82:	mov    eax,ebx
  44dc84:	pop    ebx
  44dc85:	ret    
  44dc86:	mov    eax,eax
  44dc88:	mov    eax,0x3
  44dc8d:	ret    
  44dc8e:	mov    eax,eax
  44dc90:	push   ebx
  44dc91:	mov    ebx,edx
  44dc93:	mov    eax,ebx
  44dc95:	mov    edx,0x44dcac
  44dc9a:	call   0x404fdc
  44dc9f:	pop    ebx
  44dca0:	ret    
  44dca1:	add    BYTE PTR [eax],al
  44dca3:	add    bh,bh
  44dca5:	(bad)  
  44dca6:	(bad)  
  44dca7:	inc    DWORD PTR [ebx]
  44dca9:	add    BYTE PTR [eax],al
  44dcab:	add    BYTE PTR [edx+0x43],dl
  44dcae:	xor    eax,0x800b800
  44dcb3:	add    BYTE PTR [eax],al
  44dcb5:	ret    
  44dcb6:	mov    eax,eax
  44dcb8:	push   ebx
  44dcb9:	push   esi
  44dcba:	push   edi
  44dcbb:	add    esp,0xfffffff8
  44dcbe:	xor    ecx,ecx
  44dcc0:	mov    dl,0x1
  44dcc2:	mov    eax,ds:0x44db40
  44dcc7:	call   0x44231c
  44dccc:	mov    esi,eax
  44dcce:	push   0x0
  44dcd0:	mov    edx,0x469fe0
  44dcd5:	mov    ecx,0x80
  44dcda:	mov    eax,esi
  44dcdc:	mov    ebx,DWORD PTR [eax]
  44dcde:	call   DWORD PTR [ebx+0x40]
  44dce1:	mov    ecx,esp
  44dce3:	mov    edx,0x469ff0
  44dce8:	mov    eax,esi
  44dcea:	mov    ebx,DWORD PTR [eax]
  44dcec:	call   DWORD PTR [ebx+0x6c]
  44dcef:	mov    edx,0x469ff8
  44dcf4:	mov    eax,esp
  44dcf6:	mov    ecx,0x8
  44dcfb:	call   0x408538
  44dd00:	mov    ebx,eax
  44dd02:	mov    ecx,esp
  44dd04:	mov    edx,esp
  44dd06:	mov    eax,esi
  44dd08:	mov    edi,DWORD PTR [eax]
  44dd0a:	call   DWORD PTR [edi+0x70]
  44dd0d:	test   bl,bl
  44dd0f:	je     0x44dd26
  44dd11:	mov    edx,0x469ff0
  44dd16:	mov    eax,esp
  44dd18:	mov    ecx,0x8
  44dd1d:	call   0x408538
  44dd22:	test   al,al
  44dd24:	jne    0x44dd2a
  44dd26:	xor    eax,eax
  44dd28:	jmp    0x44dd2c
  44dd2a:	mov    al,0x1
  44dd2c:	mov    ebx,eax
  44dd2e:	mov    eax,esi
  44dd30:	mov    edx,DWORD PTR [eax]
  44dd32:	call   DWORD PTR [edx+0x44]
  44dd35:	push   0x0
  44dd37:	mov    edx,0x46a000
  44dd3c:	mov    ecx,0x80
  44dd41:	mov    eax,esi
  44dd43:	mov    edi,DWORD PTR [eax]
  44dd45:	call   DWORD PTR [edi+0x40]
  44dd48:	mov    ecx,esp
  44dd4a:	mov    edx,0x46a010
  44dd4f:	mov    eax,esi
  44dd51:	mov    edi,DWORD PTR [eax]
  44dd53:	call   DWORD PTR [edi+0x6c]
  44dd56:	test   bl,bl
  44dd58:	je     0x44dd6f
  44dd5a:	mov    edx,0x46a018
  44dd5f:	mov    eax,esp
  44dd61:	mov    ecx,0x8
  44dd66:	call   0x408538
  44dd6b:	test   al,al
  44dd6d:	jne    0x44dd73
  44dd6f:	xor    eax,eax
  44dd71:	jmp    0x44dd75
  44dd73:	mov    al,0x1
  44dd75:	mov    ebx,eax
  44dd77:	mov    ecx,esp
  44dd79:	mov    edx,esp
  44dd7b:	mov    eax,esi
  44dd7d:	mov    edi,DWORD PTR [eax]
  44dd7f:	call   DWORD PTR [edi+0x70]
  44dd82:	test   bl,bl
  44dd84:	je     0x44dd9b
  44dd86:	mov    edx,0x46a010
  44dd8b:	mov    eax,esp
  44dd8d:	mov    ecx,0x8
  44dd92:	call   0x408538
  44dd97:	test   al,al
  44dd99:	jne    0x44dd9f
  44dd9b:	xor    eax,eax
  44dd9d:	jmp    0x44dda1
  44dd9f:	mov    al,0x1
  44dda1:	mov    ebx,eax
  44dda3:	mov    eax,esi
  44dda5:	mov    edx,DWORD PTR [eax]
  44dda7:	call   DWORD PTR [edx+0x44]
  44ddaa:	mov    eax,esi
  44ddac:	call   0x4040a0
  44ddb1:	mov    eax,ebx
  44ddb3:	pop    ecx
  44ddb4:	pop    edx
  44ddb5:	pop    edi
  44ddb6:	pop    esi
  44ddb7:	pop    ebx
  44ddb8:	ret    
  44ddb9:	lea    eax,[eax+0x0]
  44ddbc:	push   ebx
  44ddbd:	push   esi
  44ddbe:	push   edi
  44ddbf:	push   ebp
  44ddc0:	add    esp,0xfffffef4
  44ddc6:	mov    ebx,ecx
  44ddc8:	mov    esi,edx
  44ddca:	mov    DWORD PTR [esp],eax
  44ddcd:	lea    eax,[esp+0xc]
  44ddd1:	xor    ecx,ecx
  44ddd3:	mov    edx,0x100
  44ddd8:	call   0x4037c8
  44dddd:	mov    ecx,0x8
  44dde2:	mov    eax,ebx
  44dde4:	xor    edx,edx
  44dde6:	div    ecx
  44dde8:	mov    ebx,eax
  44ddea:	lea    edx,[esp+0xc]
  44ddee:	mov    eax,esi
  44ddf0:	mov    ecx,ebx
  44ddf2:	call   0x403090
  44ddf7:	mov    eax,ebx
  44ddf9:	shr    eax,0x2
  44ddfc:	mov    DWORD PTR [esp+0x8],eax
  44de00:	and    ebx,0x3
  44de03:	test   ebx,ebx
  44de05:	je     0x44de0b
  44de07:	inc    DWORD PTR [esp+0x8]
  44de0b:	mov    eax,DWORD PTR [esp]
  44de0e:	lea    edx,[eax+0x48]
  44de11:	mov    eax,0x469f58
  44de16:	mov    ecx,0x68
  44de1b:	call   0x403090
  44de20:	xor    edi,edi
  44de22:	xor    ebp,ebp
  44de24:	xor    ebx,ebx
  44de26:	xor    esi,esi
  44de28:	cmp    DWORD PTR [esp+0x8],0x1a
  44de2d:	jbe    0x44de3c
  44de2f:	mov    eax,DWORD PTR [esp+0x8]
  44de33:	lea    eax,[eax+eax*2]
  44de36:	mov    DWORD PTR [esp+0x4],eax
  44de3a:	jmp    0x44de44
  44de3c:	mov    DWORD PTR [esp+0x4],0x4e
  44de44:	mov    eax,DWORD PTR [esp+0x4]
  44de48:	cmp    eax,0x1
  44de4b:	jb     0x44dea9
  44de4d:	mov    DWORD PTR [esp+0x4],eax
  44de51:	mov    eax,DWORD PTR [esp]
  44de54:	mov    eax,DWORD PTR [eax+edi*4+0x48]
  44de58:	add    eax,ebx
  44de5a:	add    eax,esi
  44de5c:	mov    edx,0x3
  44de61:	call   0x44dc58
  44de66:	mov    ebx,eax
  44de68:	mov    eax,DWORD PTR [esp]
  44de6b:	mov    DWORD PTR [eax+edi*4+0x48],ebx
  44de6f:	lea    edx,[esi+ebx*1]
  44de72:	mov    eax,DWORD PTR [esp+ebp*4+0xc]
  44de76:	add    eax,ebx
  44de78:	add    eax,esi
  44de7a:	call   0x44dc58
  44de7f:	mov    esi,eax
  44de81:	mov    DWORD PTR [esp+ebp*4+0xc],esi
  44de85:	lea    eax,[edi+0x1]
  44de88:	mov    ecx,0x1a
  44de8d:	xor    edx,edx
  44de8f:	div    ecx
  44de91:	mov    edi,edx
  44de93:	lea    eax,[ebp+0x1]
  44de96:	xor    edx,edx
  44de98:	div    DWORD PTR [esp+0x8]
  44de9c:	mov    ebp,edx
  44de9e:	dec    DWORD PTR [esp+0x4]
  44dea2:	cmp    DWORD PTR [esp+0x4],0x0
  44dea7:	jne    0x44de51
  44dea9:	lea    eax,[esp+0xc]
  44dead:	xor    ecx,ecx
  44deaf:	mov    edx,0x100
  44deb4:	call   0x4037c8
  44deb9:	add    esp,0x10c
  44debf:	pop    ebp
  44dec0:	pop    edi
  44dec1:	pop    esi
  44dec2:	pop    ebx
  44dec3:	ret    
  44dec4:	push   ebx
  44dec5:	mov    ebx,eax
  44dec7:	lea    eax,[ebx+0x48]
  44deca:	mov    ecx,0xff
  44decf:	mov    edx,0x68
  44ded4:	call   0x4037c8
  44ded9:	mov    eax,ebx
  44dedb:	call   0x442770
  44dee0:	pop    ebx
  44dee1:	ret    
  44dee2:	mov    eax,eax
  44dee4:	push   ebx
  44dee5:	push   esi
  44dee6:	push   edi
  44dee7:	push   ebp
  44dee8:	add    esp,0xfffffff8
  44deeb:	mov    DWORD PTR [esp+0x4],ecx
  44deef:	mov    DWORD PTR [esp],edx
  44def2:	mov    ebp,eax
  44def4:	cmp    BYTE PTR [ebp+0x30],0x0
  44def8:	jne    0x44df10
  44defa:	mov    ecx,0x44df78
  44deff:	mov    dl,0x1
  44df01:	mov    eax,ds:0x441af8
  44df06:	call   0x40c8b4
  44df0b:	call   0x4048fc
  44df10:	mov    eax,DWORD PTR [esp]
  44df13:	mov    ebx,DWORD PTR [eax]
  44df15:	add    ebx,DWORD PTR [ebp+0x48]
  44df18:	mov    edx,DWORD PTR [esp]
  44df1b:	add    eax,0x4
  44df1e:	mov    esi,DWORD PTR [eax]
  44df20:	add    esi,DWORD PTR [ebp+0x4c]
  44df23:	mov    edi,0x1
  44df28:	xor    ebx,esi
  44df2a:	mov    edx,esi
  44df2c:	mov    eax,ebx
  44df2e:	call   0x44dc58
  44df33:	mov    edx,edi
  44df35:	add    edx,edx
  44df37:	add    eax,DWORD PTR [ebp+edx*4+0x48]
  44df3b:	mov    ebx,eax
  44df3d:	xor    esi,ebx
  44df3f:	mov    edx,ebx
  44df41:	mov    eax,esi
  44df43:	call   0x44dc58
  44df48:	mov    edx,edi
  44df4a:	add    edx,edx
  44df4c:	add    eax,DWORD PTR [ebp+edx*4+0x4c]
  44df50:	mov    esi,eax
  44df52:	inc    edi
  44df53:	cmp    edi,0xd
  44df56:	jne    0x44df28
  44df58:	mov    eax,DWORD PTR [esp+0x4]
  44df5c:	mov    DWORD PTR [eax],ebx
  44df5e:	mov    eax,DWORD PTR [esp+0x4]
  44df62:	add    eax,0x4
  44df65:	mov    DWORD PTR [eax],esi
  44df67:	pop    ecx
  44df68:	pop    edx
  44df69:	pop    ebp
  44df6a:	pop    edi
  44df6b:	pop    esi
  44df6c:	pop    ebx
  44df6d:	ret    
  44df6e:	add    BYTE PTR [eax],al
  44df70:	(bad)  
  44df71:	(bad)  
  44df72:	(bad)  
  44df73:	call   DWORD PTR [esi]
  44df75:	add    BYTE PTR [eax],al
  44df77:	add    BYTE PTR [ebx+0x69],al
  44df7a:	jo     0x44dfe4
  44df7c:	gs jb  0x44df9f
  44df7f:	outs   dx,BYTE PTR ds:[esi]
  44df80:	outs   dx,DWORD PTR ds:[esi]
  44df81:	je     0x44dfa3
  44df83:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44df8a:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44df91:	push   esi
  44df92:	push   edi
  44df93:	push   ebp
  44df94:	push   ecx
  44df95:	mov    DWORD PTR [esp],ecx
  44df98:	mov    ebp,eax
  44df9a:	cmp    BYTE PTR [ebp+0x30],0x0
  44df9e:	jne    0x44dfb6
  44dfa0:	mov    ecx,0x44e01c
  44dfa5:	mov    dl,0x1
  44dfa7:	mov    eax,ds:0x441af8
  44dfac:	call   0x40c8b4
  44dfb1:	call   0x4048fc
  44dfb6:	mov    eax,edx
  44dfb8:	mov    ebx,DWORD PTR [eax]
  44dfba:	add    eax,0x4
  44dfbd:	mov    esi,DWORD PTR [eax]
  44dfbf:	mov    edi,0xc
  44dfc4:	mov    eax,edi
  44dfc6:	add    eax,eax
  44dfc8:	push   DWORD PTR [ebp+eax*4+0x4c]
  44dfcc:	mov    eax,esi
  44dfce:	pop    edx
  44dfcf:	sub    eax,edx
  44dfd1:	mov    edx,ebx
  44dfd3:	call   0x44dc70
  44dfd8:	mov    esi,eax
  44dfda:	xor    esi,ebx
  44dfdc:	mov    eax,edi
  44dfde:	add    eax,eax
  44dfe0:	push   DWORD PTR [ebp+eax*4+0x48]
  44dfe4:	mov    eax,ebx
  44dfe6:	pop    edx
  44dfe7:	sub    eax,edx
  44dfe9:	mov    edx,esi
  44dfeb:	call   0x44dc70
  44dff0:	mov    ebx,eax
  44dff2:	xor    ebx,esi
  44dff4:	dec    edi
  44dff5:	test   edi,edi
  44dff7:	jne    0x44dfc4
  44dff9:	sub    ebx,DWORD PTR [ebp+0x48]
  44dffc:	mov    eax,DWORD PTR [esp]
  44dfff:	mov    DWORD PTR [eax],ebx
  44e001:	sub    esi,DWORD PTR [ebp+0x4c]
  44e004:	mov    eax,DWORD PTR [esp]
  44e007:	add    eax,0x4
  44e00a:	mov    DWORD PTR [eax],esi
  44e00c:	pop    edx
  44e00d:	pop    ebp
  44e00e:	pop    edi
  44e00f:	pop    esi
  44e010:	pop    ebx
  44e011:	ret    
  44e012:	add    BYTE PTR [eax],al
  44e014:	(bad)  
  44e015:	(bad)  
  44e016:	(bad)  
  44e017:	call   DWORD PTR [esi]
  44e019:	add    BYTE PTR [eax],al
  44e01b:	add    BYTE PTR [ebx+0x69],al
  44e01e:	jo     0x44e088
  44e020:	gs jb  0x44e043
  44e023:	outs   dx,BYTE PTR ds:[esi]
  44e024:	outs   dx,DWORD PTR ds:[esi]
  44e025:	je     0x44e047
  44e027:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44e02e:	imul   edi,DWORD PTR [edx+0x65],0x80000064
  44e035:	loopne 0x44e07b
	...
  44e043:	add    BYTE PTR [ecx+eiz*8],ch
  44e046:	inc    esp
	...
  44e053:	add    BYTE PTR [ecx+eiz*8],bl
  44e056:	inc    esp
  44e057:	add    BYTE PTR [eax],cl
  44e059:	add    DWORD PTR [eax],eax
  44e05b:	add    BYTE PTR [eax+0x18004424],dh
  44e061:	test   eax,0x42dc0041
  44e066:	inc    eax
  44e067:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44e06d:	inc    edx
  44e06e:	inc    eax
  44e06f:	add    al,bl
  44e071:	inc    edx
  44e072:	inc    eax
  44e073:	add    BYTE PTR [eax],bh
  44e075:	inc    eax
  44e076:	inc    eax
  44e077:	add    BYTE PTR [eax+eax*2+0x40],dl
  44e07b:	add    BYTE PTR [eax+0x20],bh
  44e07e:	inc    esp
  44e07f:	add    BYTE PTR [eax+0x41],ch
  44e082:	inc    ecx
  44e083:	add    BYTE PTR [eax-0x5b],dh
  44e086:	inc    ecx
  44e087:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44e08e:	inc    ecx
  44e08f:	add    BYTE PTR [eax],dl
  44e091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e092:	inc    ecx
  44e093:	add    BYTE PTR [eax-0x5a],bl
  44e096:	inc    ecx
  44e097:	add    BYTE PTR [eax-0x59],dl
  44e09a:	inc    ecx
  44e09b:	add    BYTE PTR [eax],dh
  44e09d:	test   eax,0xa6680041
  44e0a2:	inc    ecx
  44e0a3:	add    BYTE PTR [eax-0x5a],ah
  44e0a6:	inc    ecx
  44e0a7:	add    BYTE PTR [eax],bh
  44e0a9:	test   eax,0x231c0041
  44e0ae:	inc    esp
  44e0af:	add    BYTE PTR [ecx+eiz*8+0x44],bh
  44e0b3:	add    BYTE PTR [ecx+eiz*8-0x1e5bffbc],al
  44e0ba:	inc    esp
  44e0bb:	add    BYTE PTR [ecx+eiz*8+0x308c0044],ch
  44e0c2:	inc    esp
  44e0c3:	add    BYTE PTR [eax-0x5bffbb1d],ch
  44e0c9:	xor    DWORD PTR [eax+eax*1-0x3c],eax
  44e0cd:	and    BYTE PTR [eax+eax*1+0x38],al
  44e0d1:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44e0d5:	and    DWORD PTR [eax+eax*1-0x14],eax
  44e0d9:	and    DWORD PTR [eax+eax*1-0x50],eax
  44e0dd:	loop   0x44e123
  44e0df:	add    BYTE PTR [eax+esi*1+0x31000044],al
  44e0e6:	inc    esp
  44e0e7:	add    BYTE PTR [eax+0x31],bl
  44e0ea:	inc    esp
  44e0eb:	add    al,cl
  44e0ed:	jecxz  0x44e133
  44e0ef:	add    BYTE PTR [eax],bl
  44e0f1:	in     eax,0x44
  44e0f3:	add    BYTE PTR [edx+esi*1],ah
  44e0f6:	inc    esp
  44e0f7:	add    BYTE PTR [eax],bl
  44e0f9:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  44e0fd:	xor    al,0x44
  44e0ff:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  44e106:	inc    esp
  44e107:	add    BYTE PTR [esi+esi*1+0x44],cl
  44e10b:	add    BYTE PTR [edi+esi*1+0x44],cl
  44e10f:	add    BYTE PTR [eax+edi*1],ch
  44e112:	inc    esp
  44e113:	add    BYTE PTR [ecx+edi*1],cl
  44e116:	inc    esp
  44e117:	add    ah,bh
  44e119:	cmp    DWORD PTR [eax+eax*1+0x8],eax
  44e11d:	push   esp
  44e11e:	inc    esp
  44e11f:	inc    ebx
  44e120:	push   eax
  44e121:	pop    edi
  44e122:	jb     0x44e187
  44e124:	lea    eax,ss:[eax+0x0]
  44e128:	sub    al,0xe1
  44e12a:	inc    esp
  44e12b:	add    BYTE PTR [edi],al
  44e12d:	or     BYTE PTR [esp+eax*2+0x43],dl
  44e131:	push   eax
  44e132:	pop    edi
  44e133:	jb     0x44e198
  44e135:	ss and al,0x44
  44e139:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  44e140:	push   es
  44e141:	inc    esp
  44e142:	inc    ebx
  44e143:	push   eax
  44e144:	jb     0x44e1a9
  44e146:	add    BYTE PTR ss:[eax],al
  44e149:	lea    eax,[eax+0x0]
  44e14c:	push   ebx
  44e14d:	mov    ecx,edx
  44e14f:	mov    ebx,eax
  44e151:	shl    ebx,cl
  44e153:	mov    ecx,0x20
  44e158:	sub    ecx,edx
  44e15a:	shr    eax,cl
  44e15c:	or     ebx,eax
  44e15e:	mov    eax,ebx
  44e160:	pop    ebx
  44e161:	ret    
  44e162:	mov    eax,eax
  44e164:	push   ebx
  44e165:	mov    ecx,edx
  44e167:	mov    ebx,eax
  44e169:	shr    ebx,cl
  44e16b:	mov    ecx,0x20
  44e170:	sub    ecx,edx
  44e172:	shl    eax,cl
  44e174:	or     ebx,eax
  44e176:	mov    eax,ebx
  44e178:	pop    ebx
  44e179:	ret    
  44e17a:	mov    eax,eax
  44e17c:	mov    eax,0x4
  44e181:	ret    
  44e182:	mov    eax,eax
  44e184:	push   ebx
  44e185:	mov    ebx,edx
  44e187:	mov    eax,ebx
  44e189:	mov    edx,0x44e1a0
  44e18e:	call   0x404fdc
  44e193:	pop    ebx
  44e194:	ret    
  44e195:	add    BYTE PTR [eax],al
  44e197:	add    bh,bh
  44e199:	(bad)  
  44e19a:	(bad)  
  44e19b:	inc    DWORD PTR [ebx]
  44e19d:	add    BYTE PTR [eax],al
  44e19f:	add    BYTE PTR [edx+0x43],dl
  44e1a2:	add    BYTE PTR ss:[eax+0x800],bh
  44e1a9:	ret    
  44e1aa:	mov    eax,eax
  44e1ac:	push   ebx
  44e1ad:	push   esi
  44e1ae:	push   edi
  44e1af:	add    esp,0xfffffff0
  44e1b2:	xor    ecx,ecx
  44e1b4:	mov    dl,0x1
  44e1b6:	mov    eax,ds:0x44e034
  44e1bb:	call   0x44231c
  44e1c0:	mov    esi,eax
  44e1c2:	push   0x0
  44e1c4:	mov    edx,0x46a0f0
  44e1c9:	mov    ecx,0x80
  44e1ce:	mov    eax,esi
  44e1d0:	mov    ebx,DWORD PTR [eax]
  44e1d2:	call   DWORD PTR [ebx+0x40]
  44e1d5:	mov    ecx,esp
  44e1d7:	mov    edx,0x46a100
  44e1dc:	mov    eax,esi
  44e1de:	mov    ebx,DWORD PTR [eax]
  44e1e0:	call   DWORD PTR [ebx+0x6c]
  44e1e3:	mov    edx,0x46a110
  44e1e8:	mov    eax,esp
  44e1ea:	mov    ecx,0x10
  44e1ef:	call   0x408538
  44e1f4:	mov    ebx,eax
  44e1f6:	mov    ecx,esp
  44e1f8:	mov    edx,esp
  44e1fa:	mov    eax,esi
  44e1fc:	mov    edi,DWORD PTR [eax]
  44e1fe:	call   DWORD PTR [edi+0x70]
  44e201:	test   bl,bl
  44e203:	je     0x44e21a
  44e205:	mov    edx,0x46a100
  44e20a:	mov    eax,esp
  44e20c:	mov    ecx,0x10
  44e211:	call   0x408538
  44e216:	test   al,al
  44e218:	jne    0x44e21e
  44e21a:	xor    eax,eax
  44e21c:	jmp    0x44e220
  44e21e:	mov    al,0x1
  44e220:	mov    ebx,eax
  44e222:	mov    eax,esi
  44e224:	mov    edx,DWORD PTR [eax]
  44e226:	call   DWORD PTR [edx+0x44]
  44e229:	push   0x0
  44e22b:	mov    edx,0x46a120
  44e230:	mov    ecx,0x100
  44e235:	mov    eax,esi
  44e237:	mov    edi,DWORD PTR [eax]
  44e239:	call   DWORD PTR [edi+0x40]
  44e23c:	mov    ecx,esp
  44e23e:	mov    edx,0x46a140
  44e243:	mov    eax,esi
  44e245:	mov    edi,DWORD PTR [eax]
  44e247:	call   DWORD PTR [edi+0x6c]
  44e24a:	test   bl,bl
  44e24c:	je     0x44e263
  44e24e:	mov    edx,0x46a150
  44e253:	mov    eax,esp
  44e255:	mov    ecx,0x10
  44e25a:	call   0x408538
  44e25f:	test   al,al
  44e261:	jne    0x44e267
  44e263:	xor    eax,eax
  44e265:	jmp    0x44e269
  44e267:	mov    al,0x1
  44e269:	mov    ebx,eax
  44e26b:	mov    ecx,esp
  44e26d:	mov    edx,esp
  44e26f:	mov    eax,esi
  44e271:	mov    edi,DWORD PTR [eax]
  44e273:	call   DWORD PTR [edi+0x70]
  44e276:	test   bl,bl
  44e278:	je     0x44e28f
  44e27a:	mov    edx,0x46a140
  44e27f:	mov    eax,esp
  44e281:	mov    ecx,0x10
  44e286:	call   0x408538
  44e28b:	test   al,al
  44e28d:	jne    0x44e293
  44e28f:	xor    eax,eax
  44e291:	jmp    0x44e295
  44e293:	mov    al,0x1
  44e295:	mov    ebx,eax
  44e297:	mov    eax,esi
  44e299:	mov    edx,DWORD PTR [eax]
  44e29b:	call   DWORD PTR [edx+0x44]
  44e29e:	mov    eax,esi
  44e2a0:	call   0x4040a0
  44e2a5:	mov    eax,ebx
  44e2a7:	add    esp,0x10
  44e2aa:	pop    edi
  44e2ab:	pop    esi
  44e2ac:	pop    ebx
  44e2ad:	ret    
  44e2ae:	mov    eax,eax
  44e2b0:	push   ebx
  44e2b1:	push   esi
  44e2b2:	push   edi
  44e2b3:	push   ebp
  44e2b4:	add    esp,0xfffffef4
  44e2ba:	mov    ebx,ecx
  44e2bc:	mov    esi,edx
  44e2be:	mov    DWORD PTR [esp],eax
  44e2c1:	mov    ecx,0x8
  44e2c6:	mov    eax,ebx
  44e2c8:	xor    edx,edx
  44e2ca:	div    ecx
  44e2cc:	mov    ebx,eax
  44e2ce:	lea    eax,[esp+0xc]
  44e2d2:	xor    ecx,ecx
  44e2d4:	mov    edx,0x100
  44e2d9:	call   0x4037c8
  44e2de:	lea    edx,[esp+0xc]
  44e2e2:	mov    eax,esi
  44e2e4:	mov    ecx,ebx
  44e2e6:	call   0x403090
  44e2eb:	mov    eax,ebx
  44e2ed:	shr    eax,0x2
  44e2f0:	mov    DWORD PTR [esp+0x4],eax
  44e2f4:	and    ebx,0x3
  44e2f7:	test   ebx,ebx
  44e2f9:	je     0x44e2ff
  44e2fb:	inc    DWORD PTR [esp+0x4]
  44e2ff:	mov    eax,DWORD PTR [esp]
  44e302:	lea    edx,[eax+0x58]
  44e305:	mov    eax,0x46a020
  44e30a:	mov    ecx,0xb0
  44e30f:	call   0x403090
  44e314:	xor    edi,edi
  44e316:	xor    ebp,ebp
  44e318:	xor    ebx,ebx
  44e31a:	xor    esi,esi
  44e31c:	cmp    DWORD PTR [esp+0x4],0x2c
  44e321:	jbe    0x44e32c
  44e323:	mov    eax,DWORD PTR [esp+0x4]
  44e327:	lea    eax,[eax+eax*2]
  44e32a:	jmp    0x44e331
  44e32c:	mov    eax,0x84
  44e331:	test   eax,eax
  44e333:	jbe    0x44e38c
  44e335:	mov    DWORD PTR [esp+0x8],eax
  44e339:	mov    eax,DWORD PTR [esp]
  44e33c:	mov    eax,DWORD PTR [eax+edi*4+0x58]
  44e340:	add    eax,ebx
  44e342:	add    eax,esi
  44e344:	mov    edx,0x3
  44e349:	call   0x44e14c
  44e34e:	mov    ebx,eax
  44e350:	mov    eax,DWORD PTR [esp]
  44e353:	mov    DWORD PTR [eax+edi*4+0x58],ebx
  44e357:	lea    edx,[esi+ebx*1]
  44e35a:	mov    eax,DWORD PTR [esp+ebp*4+0xc]
  44e35e:	add    eax,ebx
  44e360:	add    eax,esi
  44e362:	call   0x44e14c
  44e367:	mov    esi,eax
  44e369:	mov    DWORD PTR [esp+ebp*4+0xc],esi
  44e36d:	lea    eax,[edi+0x1]
  44e370:	mov    ecx,0x2c
  44e375:	xor    edx,edx
  44e377:	div    ecx
  44e379:	mov    edi,edx
  44e37b:	lea    eax,[ebp+0x1]
  44e37e:	xor    edx,edx
  44e380:	div    DWORD PTR [esp+0x4]
  44e384:	mov    ebp,edx
  44e386:	dec    DWORD PTR [esp+0x8]
  44e38a:	jne    0x44e339
  44e38c:	lea    eax,[esp+0xc]
  44e390:	xor    ecx,ecx
  44e392:	mov    edx,0x100
  44e397:	call   0x4037c8
  44e39c:	add    esp,0x10c
  44e3a2:	pop    ebp
  44e3a3:	pop    edi
  44e3a4:	pop    esi
  44e3a5:	pop    ebx
  44e3a6:	ret    
  44e3a7:	nop
  44e3a8:	push   ebx
  44e3a9:	mov    ebx,eax
  44e3ab:	lea    eax,[ebx+0x58]
  44e3ae:	mov    ecx,0xff
  44e3b3:	mov    edx,0xb0
  44e3b8:	call   0x4037c8
  44e3bd:	mov    eax,ebx
  44e3bf:	call   0x4431f4
  44e3c4:	pop    ebx
  44e3c5:	ret    
  44e3c6:	mov    eax,eax
  44e3c8:	push   ebx
  44e3c9:	push   esi
  44e3ca:	push   edi
  44e3cb:	push   ebp
  44e3cc:	add    esp,0xffffffe8
  44e3cf:	mov    DWORD PTR [esp+0x8],ecx
  44e3d3:	mov    DWORD PTR [esp+0x4],edx
  44e3d7:	mov    DWORD PTR [esp],eax
  44e3da:	mov    eax,DWORD PTR [esp]
  44e3dd:	cmp    BYTE PTR [eax+0x30],0x0
  44e3e1:	jne    0x44e3f9
  44e3e3:	mov    ecx,0x44e500
  44e3e8:	mov    dl,0x1
  44e3ea:	mov    eax,ds:0x441af8
  44e3ef:	call   0x40c8b4
  44e3f4:	call   0x4048fc
  44e3f9:	mov    edx,DWORD PTR [esp+0x4]
  44e3fd:	mov    esi,DWORD PTR [edx]
  44e3ff:	mov    eax,DWORD PTR [esp+0x4]
  44e403:	mov    eax,edx
  44e405:	mov    edx,eax
  44e407:	add    edx,0x4
  44e40a:	mov    edi,DWORD PTR [edx]
  44e40c:	mov    edx,DWORD PTR [esp+0x4]
  44e410:	mov    edx,eax
  44e412:	add    edx,0x8
  44e415:	mov    ebp,DWORD PTR [edx]
  44e417:	mov    edx,DWORD PTR [esp+0x4]
  44e41b:	add    eax,0xc
  44e41e:	mov    eax,DWORD PTR [eax]
  44e420:	mov    DWORD PTR [esp+0xc],eax
  44e424:	mov    eax,DWORD PTR [esp]
  44e427:	add    edi,DWORD PTR [eax+0x58]
  44e42a:	mov    eax,DWORD PTR [esp]
  44e42d:	mov    eax,DWORD PTR [eax+0x5c]
  44e430:	add    DWORD PTR [esp+0xc],eax
  44e434:	mov    DWORD PTR [esp+0x14],0x1
  44e43c:	mov    eax,edi
  44e43e:	add    eax,eax
  44e440:	inc    eax
  44e441:	imul   edi
  44e443:	mov    edx,0x5
  44e448:	call   0x44e14c
  44e44d:	mov    ebx,eax
  44e44f:	mov    eax,DWORD PTR [esp+0xc]
  44e453:	add    eax,eax
  44e455:	inc    eax
  44e456:	imul   DWORD PTR [esp+0xc]
  44e45a:	mov    edx,0x5
  44e45f:	call   0x44e14c
  44e464:	mov    DWORD PTR [esp+0x10],eax
  44e468:	mov    eax,ebx
  44e46a:	xor    eax,esi
  44e46c:	mov    edx,DWORD PTR [esp+0x10]
  44e470:	call   0x44e14c
  44e475:	mov    edx,DWORD PTR [esp+0x14]
  44e479:	add    edx,edx
  44e47b:	mov    ecx,DWORD PTR [esp]
  44e47e:	add    eax,DWORD PTR [ecx+edx*4+0x58]
  44e482:	mov    esi,eax
  44e484:	mov    eax,DWORD PTR [esp+0x10]
  44e488:	xor    eax,ebp
  44e48a:	mov    edx,ebx
  44e48c:	call   0x44e14c
  44e491:	mov    edx,DWORD PTR [esp+0x14]
  44e495:	add    edx,edx
  44e497:	mov    ecx,DWORD PTR [esp]
  44e49a:	add    eax,DWORD PTR [ecx+edx*4+0x5c]
  44e49e:	mov    ebp,eax
  44e4a0:	mov    ebx,esi
  44e4a2:	mov    esi,edi
  44e4a4:	mov    edi,ebp
  44e4a6:	mov    ebp,DWORD PTR [esp+0xc]
  44e4aa:	mov    DWORD PTR [esp+0xc],ebx
  44e4ae:	inc    DWORD PTR [esp+0x14]
  44e4b2:	cmp    DWORD PTR [esp+0x14],0x15
  44e4b7:	jne    0x44e43c
  44e4b9:	mov    eax,DWORD PTR [esp]
  44e4bc:	add    esi,DWORD PTR [eax+0x100]
  44e4c2:	mov    eax,DWORD PTR [esp]
  44e4c5:	add    ebp,DWORD PTR [eax+0x104]
  44e4cb:	mov    eax,DWORD PTR [esp+0x8]
  44e4cf:	mov    DWORD PTR [eax],esi
  44e4d1:	mov    eax,DWORD PTR [esp+0x8]
  44e4d5:	add    eax,0x4
  44e4d8:	mov    DWORD PTR [eax],edi
  44e4da:	mov    eax,DWORD PTR [esp+0x8]
  44e4de:	add    eax,0x8
  44e4e1:	mov    DWORD PTR [eax],ebp
  44e4e3:	mov    eax,DWORD PTR [esp+0x8]
  44e4e7:	add    eax,0xc
  44e4ea:	mov    edx,DWORD PTR [esp+0xc]
  44e4ee:	mov    DWORD PTR [eax],edx
  44e4f0:	add    esp,0x18
  44e4f3:	pop    ebp
  44e4f4:	pop    edi
  44e4f5:	pop    esi
  44e4f6:	pop    ebx
  44e4f7:	ret    
  44e4f8:	(bad)  
  44e4f9:	(bad)  
  44e4fa:	(bad)  
  44e4fb:	call   DWORD PTR [esi]
  44e4fd:	add    BYTE PTR [eax],al
  44e4ff:	add    BYTE PTR [ebx+0x69],al
  44e502:	jo     0x44e56c
  44e504:	gs jb  0x44e527
  44e507:	outs   dx,BYTE PTR ds:[esi]
  44e508:	outs   dx,DWORD PTR ds:[esi]
  44e509:	je     0x44e52b
  44e50b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44e512:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44e519:	push   esi
  44e51a:	push   edi
  44e51b:	push   ebp
  44e51c:	add    esp,0xffffffec
  44e51f:	mov    DWORD PTR [esp+0x4],ecx
  44e523:	mov    DWORD PTR [esp],eax
  44e526:	mov    eax,DWORD PTR [esp]
  44e529:	cmp    BYTE PTR [eax+0x30],0x0
  44e52d:	jne    0x44e545
  44e52f:	mov    ecx,0x44e648
  44e534:	mov    dl,0x1
  44e536:	mov    eax,ds:0x441af8
  44e53b:	call   0x40c8b4
  44e540:	call   0x4048fc
  44e545:	mov    ecx,edx
  44e547:	mov    esi,DWORD PTR [ecx]
  44e549:	mov    eax,ecx
  44e54b:	mov    ecx,eax
  44e54d:	add    ecx,0x4
  44e550:	mov    edi,DWORD PTR [ecx]
  44e552:	mov    ecx,eax
  44e554:	add    ecx,0x8
  44e557:	mov    ebp,DWORD PTR [ecx]
  44e559:	add    eax,0xc
  44e55c:	mov    eax,DWORD PTR [eax]
  44e55e:	mov    DWORD PTR [esp+0x8],eax
  44e562:	mov    eax,DWORD PTR [esp]
  44e565:	sub    ebp,DWORD PTR [eax+0x104]
  44e56b:	mov    eax,DWORD PTR [esp]
  44e56e:	sub    esi,DWORD PTR [eax+0x100]
  44e574:	mov    DWORD PTR [esp+0x10],0x14
  44e57c:	mov    ebx,esi
  44e57e:	mov    esi,DWORD PTR [esp+0x8]
  44e582:	mov    DWORD PTR [esp+0x8],ebp
  44e586:	mov    ebp,edi
  44e588:	mov    edi,ebx
  44e58a:	mov    eax,DWORD PTR [esp+0x8]
  44e58e:	add    eax,eax
  44e590:	inc    eax
  44e591:	imul   DWORD PTR [esp+0x8]
  44e595:	mov    edx,0x5
  44e59a:	call   0x44e14c
  44e59f:	mov    DWORD PTR [esp+0xc],eax
  44e5a3:	mov    eax,edi
  44e5a5:	add    eax,eax
  44e5a7:	inc    eax
  44e5a8:	imul   edi
  44e5aa:	mov    edx,0x5
  44e5af:	call   0x44e14c
  44e5b4:	mov    ebx,eax
  44e5b6:	mov    eax,DWORD PTR [esp+0x10]
  44e5ba:	add    eax,eax
  44e5bc:	mov    edx,DWORD PTR [esp]
  44e5bf:	push   DWORD PTR [edx+eax*4+0x5c]
  44e5c3:	mov    eax,ebp
  44e5c5:	pop    edx
  44e5c6:	sub    eax,edx
  44e5c8:	mov    edx,ebx
  44e5ca:	call   0x44e164
  44e5cf:	xor    eax,DWORD PTR [esp+0xc]
  44e5d3:	mov    ebp,eax
  44e5d5:	mov    eax,DWORD PTR [esp+0x10]
  44e5d9:	add    eax,eax
  44e5db:	mov    edx,DWORD PTR [esp]
  44e5de:	push   DWORD PTR [edx+eax*4+0x58]
  44e5e2:	mov    eax,esi
  44e5e4:	pop    edx
  44e5e5:	sub    eax,edx
  44e5e7:	mov    edx,DWORD PTR [esp+0xc]
  44e5eb:	call   0x44e164
  44e5f0:	xor    ebx,eax
  44e5f2:	mov    esi,ebx
  44e5f4:	dec    DWORD PTR [esp+0x10]
  44e5f8:	cmp    DWORD PTR [esp+0x10],0x0
  44e5fd:	jne    0x44e57c
  44e603:	mov    eax,DWORD PTR [esp]
  44e606:	mov    eax,DWORD PTR [eax+0x5c]
  44e609:	sub    DWORD PTR [esp+0x8],eax
  44e60d:	mov    eax,DWORD PTR [esp]
  44e610:	sub    edi,DWORD PTR [eax+0x58]
  44e613:	mov    eax,DWORD PTR [esp+0x4]
  44e617:	mov    DWORD PTR [eax],esi
  44e619:	mov    eax,DWORD PTR [esp+0x4]
  44e61d:	add    eax,0x4
  44e620:	mov    DWORD PTR [eax],edi
  44e622:	mov    eax,DWORD PTR [esp+0x4]
  44e626:	add    eax,0x8
  44e629:	mov    DWORD PTR [eax],ebp
  44e62b:	mov    eax,DWORD PTR [esp+0x4]
  44e62f:	add    eax,0xc
  44e632:	mov    edx,DWORD PTR [esp+0x8]
  44e636:	mov    DWORD PTR [eax],edx
  44e638:	add    esp,0x14
  44e63b:	pop    ebp
  44e63c:	pop    edi
  44e63d:	pop    esi
  44e63e:	pop    ebx
  44e63f:	ret    
  44e640:	(bad)  
  44e641:	(bad)  
  44e642:	(bad)  
  44e643:	call   DWORD PTR [esi]
  44e645:	add    BYTE PTR [eax],al
  44e647:	add    BYTE PTR [ebx+0x69],al
  44e64a:	jo     0x44e6b4
  44e64c:	gs jb  0x44e66f
  44e64f:	outs   dx,BYTE PTR ds:[esi]
  44e650:	outs   dx,DWORD PTR ds:[esi]
  44e651:	je     0x44e673
  44e653:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44e65a:	imul   edi,DWORD PTR [edx+0x65],0xac000064
  44e661:	out    0x44,al
	...
  44e66f:	add    BYTE PTR [edi+eiz*8+0x44],bl
	...
  44e67f:	add    BYTE PTR [eax-0x19],cl
  44e682:	inc    esp
  44e683:	add    BYTE PTR [esp+eax*1],bl
  44e686:	add    BYTE PTR [eax],al
  44e688:	mov    al,0x24
  44e68a:	inc    esp
  44e68b:	add    BYTE PTR [eax],bl
  44e68d:	test   eax,0x42dc0041
  44e692:	inc    eax
  44e693:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44e699:	inc    edx
  44e69a:	inc    eax
  44e69b:	add    al,bl
  44e69d:	inc    edx
  44e69e:	inc    eax
  44e69f:	add    BYTE PTR [eax],bh
  44e6a1:	inc    eax
  44e6a2:	inc    eax
  44e6a3:	add    BYTE PTR [eax+eax*2+0x40],dl
  44e6a7:	add    BYTE PTR [eax+0x20],bh
  44e6aa:	inc    esp
  44e6ab:	add    BYTE PTR [eax+0x41],ch
  44e6ae:	inc    ecx
  44e6af:	add    BYTE PTR [eax-0x5b],dh
  44e6b2:	inc    ecx
  44e6b3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44e6ba:	inc    ecx
  44e6bb:	add    BYTE PTR [eax],dl
  44e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e6be:	inc    ecx
  44e6bf:	add    BYTE PTR [eax-0x5a],bl
  44e6c2:	inc    ecx
  44e6c3:	add    BYTE PTR [eax-0x59],dl
  44e6c6:	inc    ecx
  44e6c7:	add    BYTE PTR [eax],dh
  44e6c9:	test   eax,0xa6680041
  44e6ce:	inc    ecx
  44e6cf:	add    BYTE PTR [eax-0x5a],ah
  44e6d2:	inc    ecx
  44e6d3:	add    BYTE PTR [eax],bh
  44e6d5:	test   eax,0x231c0041
  44e6da:	inc    esp
  44e6db:	add    BYTE PTR [edi+eiz*8-0x186bffbc],cl
  44e6e2:	inc    esp
  44e6e3:	add    BYTE PTR [edi+eiz*8-0x1843ffbc],al
  44e6ea:	inc    esp
  44e6eb:	add    BYTE PTR [eax+esi*1-0x13dbffbc],cl
  44e6f2:	inc    esp
  44e6f3:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  44e6fa:	inc    esp
  44e6fb:	add    BYTE PTR [eax],bh
  44e6fd:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44e701:	and    DWORD PTR [eax+eax*1-0x14],eax
  44e705:	and    DWORD PTR [eax+eax*1-0x70],eax
  44e709:	jmp    0x30c8e752
  44e70e:	inc    esp
  44e70f:	add    BYTE PTR [eax],al
  44e711:	xor    DWORD PTR [eax+eax*1+0x58],eax
  44e715:	xor    DWORD PTR [eax+eax*1+0x58],eax
  44e719:	in     al,dx
  44e71a:	inc    esp
  44e71b:	add    BYTE PTR [eax+0x240044ef],bh
  44e721:	xor    al,BYTE PTR [eax+eax*1+0x18]
  44e725:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  44e729:	xor    al,0x44
  44e72b:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  44e732:	inc    esp
  44e733:	add    BYTE PTR [esi+esi*1+0x44],cl
  44e737:	add    BYTE PTR [edi+esi*1+0x44],cl
  44e73b:	add    BYTE PTR [eax+edi*1],ch
  44e73e:	inc    esp
  44e73f:	add    BYTE PTR [ecx+edi*1],cl
  44e742:	inc    esp
  44e743:	add    ah,bh
  44e745:	cmp    DWORD PTR [eax+eax*1+0xd],eax
  44e749:	push   esp
  44e74a:	inc    esp
  44e74b:	inc    ebx
  44e74c:	push   eax
  44e74d:	pop    edi
  44e74e:	jb     0x44e7b9
  44e750:	push   0x6e
  44e752:	fs popa 
  44e754:	gs ins BYTE PTR es:[edi],dx
  44e756:	mov    eax,eax
  44e758:	pop    esp
  44e759:	out    0x44,eax
  44e75b:	add    BYTE PTR [edi],al
  44e75d:	or     eax,0x50434454
  44e762:	pop    edi
  44e763:	jb     0x44e7ce
  44e765:	push   0x6e
  44e767:	fs popa 
  44e769:	gs ins BYTE PTR es:[edi],dx
  44e76b:	lods   al,BYTE PTR ds:[esi]
  44e76c:	out    0x44,al
  44e76e:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  44e775:	or     eax,DWORD PTR [ebx+eax*2+0x50]
  44e779:	jb     0x44e7e4
  44e77b:	push   0x6e
  44e77d:	fs popa 
  44e77f:	gs ins BYTE PTR es:[edi],dx
  44e781:	add    BYTE PTR [eax],al
  44e783:	nop
  44e784:	mov    eax,0x100
  44e789:	ret    
  44e78a:	mov    eax,eax
  44e78c:	mov    eax,0x9
  44e791:	ret    
  44e792:	mov    eax,eax
  44e794:	push   ebx
  44e795:	mov    ebx,edx
  44e797:	mov    eax,ebx
  44e799:	mov    edx,0x44e7b0
  44e79e:	call   0x404fdc
  44e7a3:	pop    ebx
  44e7a4:	ret    
  44e7a5:	add    BYTE PTR [eax],al
  44e7a7:	add    bh,bh
  44e7a9:	(bad)  
  44e7aa:	(bad)  
  44e7ab:	dec    DWORD PTR [eax]
  44e7ad:	add    BYTE PTR [eax],al
  44e7af:	add    BYTE PTR [edx+0x69],dl
  44e7b2:	push   0x6e
  44e7b4:	fs popa 
  44e7b6:	gs ins BYTE PTR es:[edi],dx
  44e7b8:	add    BYTE PTR [eax],al
  44e7ba:	add    BYTE PTR [eax],al
  44e7bc:	push   ebx
  44e7bd:	push   esi
  44e7be:	push   edi
  44e7bf:	push   ebp
  44e7c0:	add    esp,0xfffffff0
  44e7c3:	mov    edi,esp
  44e7c5:	xor    ecx,ecx
  44e7c7:	mov    dl,0x1
  44e7c9:	mov    eax,ds:0x44e660
  44e7ce:	call   0x44231c
  44e7d3:	mov    esi,eax
  44e7d5:	push   0x0
  44e7d7:	mov    edx,0x46d3d8
  44e7dc:	mov    ecx,0x80
  44e7e1:	mov    eax,esi
  44e7e3:	mov    ebx,DWORD PTR [eax]
  44e7e5:	call   DWORD PTR [ebx+0x40]
  44e7e8:	mov    ecx,edi
  44e7ea:	mov    edx,0x46d3e8
  44e7ef:	mov    eax,esi
  44e7f1:	mov    ebx,DWORD PTR [eax]
  44e7f3:	call   DWORD PTR [ebx+0x6c]
  44e7f6:	mov    edx,0x46d3f8
  44e7fb:	mov    eax,edi
  44e7fd:	mov    ecx,0x10
  44e802:	call   0x408538
  44e807:	mov    ebx,eax
  44e809:	mov    ecx,edi
  44e80b:	mov    edx,edi
  44e80d:	mov    eax,esi
  44e80f:	mov    ebp,DWORD PTR [eax]
  44e811:	call   DWORD PTR [ebp+0x70]
  44e814:	mov    eax,esi
  44e816:	mov    edx,DWORD PTR [eax]
  44e818:	call   DWORD PTR [edx+0x44]
  44e81b:	test   bl,bl
  44e81d:	je     0x44e834
  44e81f:	mov    edx,0x46d3e8
  44e824:	mov    eax,edi
  44e826:	mov    ecx,0x10
  44e82b:	call   0x408538
  44e830:	test   al,al
  44e832:	jne    0x44e838
  44e834:	xor    eax,eax
  44e836:	jmp    0x44e83a
  44e838:	mov    al,0x1
  44e83a:	mov    ebx,eax
  44e83c:	push   0x0
  44e83e:	mov    edx,0x46d408
  44e843:	mov    ecx,0xc0
  44e848:	mov    eax,esi
  44e84a:	mov    ebp,DWORD PTR [eax]
  44e84c:	call   DWORD PTR [ebp+0x40]
  44e84f:	mov    ecx,edi
  44e851:	mov    edx,0x46d420
  44e856:	mov    eax,esi
  44e858:	mov    ebp,DWORD PTR [eax]
  44e85a:	call   DWORD PTR [ebp+0x6c]
  44e85d:	test   bl,bl
  44e85f:	je     0x44e876
  44e861:	mov    edx,0x46d430
  44e866:	mov    eax,edi
  44e868:	mov    ecx,0x10
  44e86d:	call   0x408538
  44e872:	test   al,al
  44e874:	jne    0x44e87a
  44e876:	xor    eax,eax
  44e878:	jmp    0x44e87c
  44e87a:	mov    al,0x1
  44e87c:	mov    ebx,eax
  44e87e:	mov    ecx,edi
  44e880:	mov    edx,edi
  44e882:	mov    eax,esi
  44e884:	mov    ebp,DWORD PTR [eax]
  44e886:	call   DWORD PTR [ebp+0x70]
  44e889:	mov    eax,esi
  44e88b:	mov    edx,DWORD PTR [eax]
  44e88d:	call   DWORD PTR [edx+0x44]
  44e890:	test   bl,bl
  44e892:	je     0x44e8a9
  44e894:	mov    edx,0x46d420
  44e899:	mov    eax,edi
  44e89b:	mov    ecx,0x10
  44e8a0:	call   0x408538
  44e8a5:	test   al,al
  44e8a7:	jne    0x44e8ad
  44e8a9:	xor    eax,eax
  44e8ab:	jmp    0x44e8af
  44e8ad:	mov    al,0x1
  44e8af:	mov    ebx,eax
  44e8b1:	push   0x0
  44e8b3:	mov    edx,0x46d440
  44e8b8:	mov    ecx,0x100
  44e8bd:	mov    eax,esi
  44e8bf:	mov    ebp,DWORD PTR [eax]
  44e8c1:	call   DWORD PTR [ebp+0x40]
  44e8c4:	mov    ecx,edi
  44e8c6:	mov    edx,0x46d460
  44e8cb:	mov    eax,esi
  44e8cd:	mov    ebp,DWORD PTR [eax]
  44e8cf:	call   DWORD PTR [ebp+0x6c]
  44e8d2:	test   bl,bl
  44e8d4:	je     0x44e8eb
  44e8d6:	mov    edx,0x46d470
  44e8db:	mov    eax,edi
  44e8dd:	mov    ecx,0x10
  44e8e2:	call   0x408538
  44e8e7:	test   al,al
  44e8e9:	jne    0x44e8ef
  44e8eb:	xor    eax,eax
  44e8ed:	jmp    0x44e8f1
  44e8ef:	mov    al,0x1
  44e8f1:	mov    ebx,eax
  44e8f3:	mov    ecx,edi
  44e8f5:	mov    edx,edi
  44e8f7:	mov    eax,esi
  44e8f9:	mov    ebp,DWORD PTR [eax]
  44e8fb:	call   DWORD PTR [ebp+0x70]
  44e8fe:	mov    eax,esi
  44e900:	mov    edx,DWORD PTR [eax]
  44e902:	call   DWORD PTR [edx+0x44]
  44e905:	test   bl,bl
  44e907:	je     0x44e91e
  44e909:	mov    edx,0x46d460
  44e90e:	mov    eax,edi
  44e910:	mov    ecx,0x10
  44e915:	call   0x408538
  44e91a:	test   al,al
  44e91c:	jne    0x44e922
  44e91e:	xor    eax,eax
  44e920:	jmp    0x44e924
  44e922:	mov    al,0x1
  44e924:	mov    ebx,eax
  44e926:	mov    eax,esi
  44e928:	call   0x4040a0
  44e92d:	mov    eax,ebx
  44e92f:	add    esp,0x10
  44e932:	pop    ebp
  44e933:	pop    edi
  44e934:	pop    esi
  44e935:	pop    ebx
  44e936:	ret    
  44e937:	nop
  44e938:	push   ebx
  44e939:	push   esi
  44e93a:	push   edi
  44e93b:	movzx  ebx,dl
  44e93e:	dec    ebx
  44e93f:	test   ebx,ebx
  44e941:	jb     0x44e98c
  44e943:	inc    ebx
  44e944:	xor    edx,edx
  44e946:	mov    ecx,edx
  44e948:	add    ecx,ecx
  44e94a:	add    ecx,ecx
  44e94c:	movzx  esi,BYTE PTR [eax+ecx*1]
  44e950:	lea    esi,[esi*4+0x46c360]
  44e957:	mov    esi,DWORD PTR [esi]
  44e959:	movzx  edi,BYTE PTR [eax+ecx*1+0x1]
  44e95e:	lea    edi,[edi*4+0x46c760]
  44e965:	xor    esi,DWORD PTR [edi]
  44e967:	movzx  edi,BYTE PTR [eax+ecx*1+0x2]
  44e96c:	lea    edi,[edi*4+0x46cb60]
  44e973:	xor    esi,DWORD PTR [edi]
  44e975:	movzx  edi,BYTE PTR [eax+ecx*1+0x3]
  44e97a:	lea    edi,[edi*4+0x46cf60]
  44e981:	xor    esi,DWORD PTR [edi]
  44e983:	lea    ecx,[eax+ecx*1]
  44e986:	mov    DWORD PTR [ecx],esi
  44e988:	inc    edx
  44e989:	dec    ebx
  44e98a:	jne    0x44e946
  44e98c:	pop    edi
  44e98d:	pop    esi
  44e98e:	pop    ebx
  44e98f:	ret    
  44e990:	push   ebx
  44e991:	push   esi
  44e992:	push   edi
  44e993:	push   ebp
  44e994:	add    esp,0xffffffc8
  44e997:	mov    ebx,ecx
  44e999:	mov    edi,edx
  44e99b:	mov    esi,eax
  44e99d:	mov    ecx,0x8
  44e9a2:	mov    eax,ebx
  44e9a4:	xor    edx,edx
  44e9a6:	div    ecx
  44e9a8:	mov    ebx,eax
  44e9aa:	lea    eax,[esp+0x18]
  44e9ae:	xor    ecx,ecx
  44e9b0:	mov    edx,0x20
  44e9b5:	call   0x4037c8
  44e9ba:	lea    edx,[esp+0x18]
  44e9be:	mov    eax,edi
  44e9c0:	mov    ecx,ebx
  44e9c2:	call   0x403090
  44e9c7:	cmp    ebx,0x10
  44e9ca:	ja     0x44e9da
  44e9cc:	mov    ecx,0x4
  44e9d1:	mov    DWORD PTR [esp],0xa
  44e9d8:	jmp    0x44e9f9
  44e9da:	cmp    ebx,0x18
  44e9dd:	ja     0x44e9ed
  44e9df:	mov    ecx,0x6
  44e9e4:	mov    DWORD PTR [esp],0xc
  44e9eb:	jmp    0x44e9f9
  44e9ed:	mov    ecx,0x8
  44e9f2:	mov    DWORD PTR [esp],0xe
  44e9f9:	mov    eax,DWORD PTR [esp]
  44e9fc:	mov    DWORD PTR [esi+0x58],eax
  44e9ff:	xor    edi,edi
  44ea01:	xor    edx,edx
  44ea03:	xor    eax,eax
  44ea05:	jmp    0x44ea30
  44ea07:	jmp    0x44ea1f
  44ea09:	mov    ebx,edi
  44ea0b:	add    ebx,ebx
  44ea0d:	add    ebx,ebx
  44ea0f:	lea    ebx,[esi+ebx*8]
  44ea12:	lea    ebp,[esp+eax*4+0x18]
  44ea16:	mov    ebp,DWORD PTR [ebp+0x0]
  44ea19:	mov    DWORD PTR [ebx+edx*4+0x5c],ebp
  44ea1d:	inc    eax
  44ea1e:	inc    edx
  44ea1f:	cmp    ecx,eax
  44ea21:	jbe    0x44ea28
  44ea23:	cmp    edx,0x4
  44ea26:	jb     0x44ea09
  44ea28:	cmp    edx,0x4
  44ea2b:	jne    0x44ea30
  44ea2d:	xor    edx,edx
  44ea2f:	inc    edi
  44ea30:	cmp    ecx,eax
  44ea32:	jbe    0x44ea3c
  44ea34:	mov    ebx,DWORD PTR [esp]
  44ea37:	inc    ebx
  44ea38:	cmp    edi,ebx
  44ea3a:	jb     0x44ea1f
  44ea3c:	xor    eax,eax
  44ea3e:	mov    DWORD PTR [esp+0x4],eax
  44ea42:	jmp    0x44ebd1
  44ea47:	movzx  eax,BYTE PTR [esp+ecx*4+0x15]
  44ea4c:	movzx  eax,BYTE PTR [eax+0x46a160]
  44ea53:	xor    BYTE PTR [esp+0x18],al
  44ea57:	movzx  eax,BYTE PTR [esp+ecx*4+0x16]
  44ea5c:	movzx  eax,BYTE PTR [eax+0x46a160]
  44ea63:	xor    BYTE PTR [esp+0x19],al
  44ea67:	movzx  eax,BYTE PTR [esp+ecx*4+0x17]
  44ea6c:	movzx  eax,BYTE PTR [eax+0x46a160]
  44ea73:	xor    BYTE PTR [esp+0x1a],al
  44ea77:	movzx  eax,BYTE PTR [esp+ecx*4+0x14]
  44ea7c:	movzx  eax,BYTE PTR [eax+0x46a160]
  44ea83:	xor    BYTE PTR [esp+0x1b],al
  44ea87:	mov    eax,DWORD PTR [esp+0x4]
  44ea8b:	movzx  eax,BYTE PTR [eax*4+0x46d360]
  44ea93:	xor    BYTE PTR [esp+0x18],al
  44ea97:	inc    DWORD PTR [esp+0x4]
  44ea9b:	cmp    ecx,0x8
  44ea9e:	je     0x44ead6
  44eaa0:	mov    eax,ecx
  44eaa2:	dec    eax
  44eaa3:	test   eax,eax
  44eaa5:	jbe    0x44eb98
  44eaab:	mov    DWORD PTR [esp+0x8],eax
  44eaaf:	lea    eax,[esp+0x18]
  44eab3:	mov    DWORD PTR [esp+0xc],eax
  44eab7:	mov    eax,DWORD PTR [esp+0xc]
  44eabb:	mov    eax,DWORD PTR [eax]
  44eabd:	mov    ebx,DWORD PTR [esp+0xc]
  44eac1:	add    ebx,0x4
  44eac4:	xor    DWORD PTR [ebx],eax
  44eac6:	add    DWORD PTR [esp+0xc],0x4
  44eacb:	dec    DWORD PTR [esp+0x8]
  44eacf:	jne    0x44eab7
  44ead1:	jmp    0x44eb98
  44ead6:	mov    eax,ecx
  44ead8:	shr    eax,1
  44eada:	dec    eax
  44eadb:	test   eax,eax
  44eadd:	jbe    0x44eb05
  44eadf:	mov    DWORD PTR [esp+0x8],eax
  44eae3:	lea    eax,[esp+0x18]
  44eae7:	mov    DWORD PTR [esp+0x10],eax
  44eaeb:	mov    eax,DWORD PTR [esp+0x10]
  44eaef:	mov    eax,DWORD PTR [eax]
  44eaf1:	mov    ebx,DWORD PTR [esp+0x10]
  44eaf5:	add    ebx,0x4
  44eaf8:	xor    DWORD PTR [ebx],eax
  44eafa:	add    DWORD PTR [esp+0x10],0x4
  44eaff:	dec    DWORD PTR [esp+0x8]
  44eb03:	jne    0x44eaeb
  44eb05:	mov    eax,ecx
  44eb07:	shr    eax,1
  44eb09:	movzx  eax,BYTE PTR [esp+eax*4+0x14]
  44eb0e:	movzx  eax,BYTE PTR [eax+0x46a160]
  44eb15:	mov    ebx,ecx
  44eb17:	shr    ebx,1
  44eb19:	xor    BYTE PTR [esp+ebx*4+0x18],al
  44eb1d:	mov    eax,ecx
  44eb1f:	shr    eax,1
  44eb21:	movzx  eax,BYTE PTR [esp+eax*4+0x15]
  44eb26:	movzx  eax,BYTE PTR [eax+0x46a160]
  44eb2d:	mov    ebx,ecx
  44eb2f:	shr    ebx,1
  44eb31:	xor    BYTE PTR [esp+ebx*4+0x19],al
  44eb35:	mov    eax,ecx
  44eb37:	shr    eax,1
  44eb39:	movzx  eax,BYTE PTR [esp+eax*4+0x16]
  44eb3e:	movzx  eax,BYTE PTR [eax+0x46a160]
  44eb45:	mov    ebx,ecx
  44eb47:	shr    ebx,1
  44eb49:	xor    BYTE PTR [esp+ebx*4+0x1a],al
  44eb4d:	mov    eax,ecx
  44eb4f:	shr    eax,1
  44eb51:	movzx  eax,BYTE PTR [esp+eax*4+0x17]
  44eb56:	movzx  eax,BYTE PTR [eax+0x46a160]
  44eb5d:	mov    ebx,ecx
  44eb5f:	shr    ebx,1
  44eb61:	xor    BYTE PTR [esp+ebx*4+0x1b],al
  44eb65:	mov    eax,ecx
  44eb67:	shr    eax,1
  44eb69:	inc    eax
  44eb6a:	mov    ebx,ecx
  44eb6c:	dec    ebx
  44eb6d:	sub    ebx,eax
  44eb6f:	jb     0x44eb98
  44eb71:	inc    ebx
  44eb72:	mov    DWORD PTR [esp+0x8],ebx
  44eb76:	lea    eax,[esp+eax*4+0x14]
  44eb7a:	mov    DWORD PTR [esp+0x14],eax
  44eb7e:	mov    eax,DWORD PTR [esp+0x14]
  44eb82:	mov    eax,DWORD PTR [eax]
  44eb84:	mov    ebx,DWORD PTR [esp+0x14]
  44eb88:	add    ebx,0x4
  44eb8b:	xor    DWORD PTR [ebx],eax
  44eb8d:	add    DWORD PTR [esp+0x14],0x4
  44eb92:	dec    DWORD PTR [esp+0x8]
  44eb96:	jne    0x44eb7e
  44eb98:	xor    eax,eax
  44eb9a:	jmp    0x44ebc5
  44eb9c:	jmp    0x44ebb4
  44eb9e:	mov    ebx,edi
  44eba0:	add    ebx,ebx
  44eba2:	add    ebx,ebx
  44eba4:	lea    ebx,[esi+ebx*8]
  44eba7:	lea    ebp,[esp+eax*4+0x18]
  44ebab:	mov    ebp,DWORD PTR [ebp+0x0]
  44ebae:	mov    DWORD PTR [ebx+edx*4+0x5c],ebp
  44ebb2:	inc    eax
  44ebb3:	inc    edx
  44ebb4:	cmp    ecx,eax
  44ebb6:	jbe    0x44ebbd
  44ebb8:	cmp    edx,0x4
  44ebbb:	jb     0x44eb9e
  44ebbd:	cmp    edx,0x4
  44ebc0:	jne    0x44ebc5
  44ebc2:	inc    edi
  44ebc3:	xor    edx,edx
  44ebc5:	cmp    ecx,eax
  44ebc7:	jbe    0x44ebd1
  44ebc9:	mov    ebx,DWORD PTR [esp]
  44ebcc:	inc    ebx
  44ebcd:	cmp    edi,ebx
  44ebcf:	jb     0x44ebb4
  44ebd1:	mov    eax,DWORD PTR [esp]
  44ebd4:	inc    eax
  44ebd5:	cmp    edi,eax
  44ebd7:	jb     0x44ea47
  44ebdd:	lea    edx,[esi+0x23c]
  44ebe3:	lea    eax,[esi+0x5c]
  44ebe6:	mov    ecx,0x1e0
  44ebeb:	call   0x403090
  44ebf0:	mov    eax,DWORD PTR [esi+0x58]
  44ebf3:	dec    eax
  44ebf4:	test   eax,eax
  44ebf6:	jbe    0x44ec1c
  44ebf8:	mov    DWORD PTR [esp+0x8],eax
  44ebfc:	mov    edi,0x1
  44ec01:	mov    eax,edi
  44ec03:	add    eax,eax
  44ec05:	add    eax,eax
  44ec07:	lea    eax,[esi+eax*8+0x23c]
  44ec0e:	mov    dl,0x4
  44ec10:	call   0x44e938
  44ec15:	inc    edi
  44ec16:	dec    DWORD PTR [esp+0x8]
  44ec1a:	jne    0x44ec01
  44ec1c:	add    esp,0x38
  44ec1f:	pop    ebp
  44ec20:	pop    edi
  44ec21:	pop    esi
  44ec22:	pop    ebx
  44ec23:	ret    
  44ec24:	push   ebx
  44ec25:	mov    ebx,eax
  44ec27:	xor    eax,eax
  44ec29:	mov    DWORD PTR [ebx+0x58],eax
  44ec2c:	lea    eax,[ebx+0x5c]
  44ec2f:	xor    ecx,ecx
  44ec31:	mov    edx,0x1e0
  44ec36:	call   0x4037c8
  44ec3b:	lea    eax,[ebx+0x23c]
  44ec41:	xor    ecx,ecx
  44ec43:	mov    edx,0x1e0
  44ec48:	call   0x4037c8
  44ec4d:	mov    eax,ebx
  44ec4f:	call   0x4431f4
  44ec54:	pop    ebx
  44ec55:	ret    
  44ec56:	mov    eax,eax
  44ec58:	push   ebx
  44ec59:	push   esi
  44ec5a:	push   edi
  44ec5b:	push   ebp
  44ec5c:	add    esp,0xffffffb4
  44ec5f:	mov    DWORD PTR [esp],ecx
  44ec62:	lea    esi,[esp+0x8]
  44ec66:	lea    edi,[esp+0x28]
  44ec6a:	cmp    BYTE PTR [eax+0x30],0x0
  44ec6e:	jne    0x44ec86
  44ec70:	mov    ecx,0x44efa0
  44ec75:	mov    dl,0x1
  44ec77:	mov    eax,ds:0x441af8
  44ec7c:	call   0x40c8b4
  44ec81:	call   0x4048fc
  44ec86:	mov    ecx,DWORD PTR [edx]
  44ec88:	mov    DWORD PTR [edi],ecx
  44ec8a:	mov    ecx,edx
  44ec8c:	add    ecx,0x4
  44ec8f:	mov    ecx,DWORD PTR [ecx]
  44ec91:	lea    ebx,[edi+0x4]
  44ec94:	mov    DWORD PTR [ebx],ecx
  44ec96:	mov    ecx,edx
  44ec98:	add    ecx,0x8
  44ec9b:	mov    ecx,DWORD PTR [ecx]
  44ec9d:	lea    ebx,[edi+0x8]
  44eca0:	mov    DWORD PTR [ebx],ecx
  44eca2:	add    edx,0xc
  44eca5:	mov    edx,DWORD PTR [edx]
  44eca7:	lea    ecx,[edi+0xc]
  44ecaa:	mov    DWORD PTR [ecx],edx
  44ecac:	mov    edx,DWORD PTR [eax+0x58]
  44ecaf:	sub    edx,0x2
  44ecb2:	test   edx,edx
  44ecb4:	jb     0x44ede6
  44ecba:	inc    edx
  44ecbb:	mov    DWORD PTR [esp+0x4],edx
  44ecbf:	xor    edx,edx
  44ecc1:	mov    ecx,DWORD PTR [edi]
  44ecc3:	mov    ebx,edx
  44ecc5:	add    ebx,ebx
  44ecc7:	add    ebx,ebx
  44ecc9:	xor    ecx,DWORD PTR [eax+ebx*8+0x5c]
  44eccd:	mov    DWORD PTR [esi],ecx
  44eccf:	lea    ecx,[edi+0x4]
  44ecd2:	mov    ecx,DWORD PTR [ecx]
  44ecd4:	xor    ecx,DWORD PTR [eax+ebx*8+0x60]
  44ecd8:	lea    ebp,[esi+0x4]
  44ecdb:	mov    DWORD PTR [ebp+0x0],ecx
  44ecde:	lea    ecx,[edi+0x8]
  44ece1:	mov    ecx,DWORD PTR [ecx]
  44ece3:	xor    ecx,DWORD PTR [eax+ebx*8+0x64]
  44ece7:	lea    ebp,[esi+0x8]
  44ecea:	mov    DWORD PTR [ebp+0x0],ecx
  44eced:	lea    ecx,[edi+0xc]
  44ecf0:	mov    ecx,DWORD PTR [ecx]
  44ecf2:	xor    ecx,DWORD PTR [eax+ebx*8+0x68]
  44ecf6:	lea    ebx,[esi+0xc]
  44ecf9:	mov    DWORD PTR [ebx],ecx
  44ecfb:	movzx  ecx,BYTE PTR [esi]
  44ecfe:	lea    ecx,[ecx*4+0x46a260]
  44ed05:	mov    ecx,DWORD PTR [ecx]
  44ed07:	movzx  ebx,BYTE PTR [esi+0x5]
  44ed0b:	lea    ebx,[ebx*4+0x46a660]
  44ed12:	xor    ecx,DWORD PTR [ebx]
  44ed14:	movzx  ebx,BYTE PTR [esi+0xa]
  44ed18:	lea    ebx,[ebx*4+0x46aa60]
  44ed1f:	xor    ecx,DWORD PTR [ebx]
  44ed21:	movzx  ebx,BYTE PTR [esi+0xf]
  44ed25:	lea    ebx,[ebx*4+0x46ae60]
  44ed2c:	xor    ecx,DWORD PTR [ebx]
  44ed2e:	mov    DWORD PTR [edi],ecx
  44ed30:	movzx  ecx,BYTE PTR [esi+0x4]
  44ed34:	lea    ecx,[ecx*4+0x46a260]
  44ed3b:	mov    ecx,DWORD PTR [ecx]
  44ed3d:	movzx  ebx,BYTE PTR [esi+0x9]
  44ed41:	lea    ebx,[ebx*4+0x46a660]
  44ed48:	xor    ecx,DWORD PTR [ebx]
  44ed4a:	movzx  ebx,BYTE PTR [esi+0xe]
  44ed4e:	lea    ebx,[ebx*4+0x46aa60]
  44ed55:	xor    ecx,DWORD PTR [ebx]
  44ed57:	movzx  ebx,BYTE PTR [esi+0x3]
  44ed5b:	lea    ebx,[ebx*4+0x46ae60]
  44ed62:	xor    ecx,DWORD PTR [ebx]
  44ed64:	lea    ebx,[edi+0x4]
  44ed67:	mov    DWORD PTR [ebx],ecx
  44ed69:	movzx  ecx,BYTE PTR [esi+0x8]
  44ed6d:	lea    ecx,[ecx*4+0x46a260]
  44ed74:	mov    ecx,DWORD PTR [ecx]
  44ed76:	movzx  ebx,BYTE PTR [esi+0xd]
  44ed7a:	lea    ebx,[ebx*4+0x46a660]
  44ed81:	xor    ecx,DWORD PTR [ebx]
  44ed83:	movzx  ebx,BYTE PTR [esi+0x2]
  44ed87:	lea    ebx,[ebx*4+0x46aa60]
  44ed8e:	xor    ecx,DWORD PTR [ebx]
  44ed90:	movzx  ebx,BYTE PTR [esi+0x7]
  44ed94:	lea    ebx,[ebx*4+0x46ae60]
  44ed9b:	xor    ecx,DWORD PTR [ebx]
  44ed9d:	lea    ebx,[edi+0x8]
  44eda0:	mov    DWORD PTR [ebx],ecx
  44eda2:	movzx  ecx,BYTE PTR [esi+0xc]
  44eda6:	lea    ecx,[ecx*4+0x46a260]
  44edad:	mov    ecx,DWORD PTR [ecx]
  44edaf:	movzx  ebx,BYTE PTR [esi+0x1]
  44edb3:	lea    ebx,[ebx*4+0x46a660]
  44edba:	xor    ecx,DWORD PTR [ebx]
  44edbc:	movzx  ebx,BYTE PTR [esi+0x6]
  44edc0:	lea    ebx,[ebx*4+0x46aa60]
  44edc7:	xor    ecx,DWORD PTR [ebx]
  44edc9:	movzx  ebx,BYTE PTR [esi+0xb]
  44edcd:	lea    ebx,[ebx*4+0x46ae60]
  44edd4:	xor    ecx,DWORD PTR [ebx]
  44edd6:	lea    ebx,[edi+0xc]
  44edd9:	mov    DWORD PTR [ebx],ecx
  44eddb:	inc    edx
  44eddc:	dec    DWORD PTR [esp+0x4]
  44ede0:	jne    0x44ecc1
  44ede6:	mov    edx,DWORD PTR [edi]
  44ede8:	mov    ecx,DWORD PTR [eax+0x58]
  44edeb:	add    ecx,ecx
  44eded:	add    ecx,ecx
  44edef:	xor    edx,DWORD PTR [eax+ecx*8+0x3c]
  44edf3:	mov    DWORD PTR [esi],edx
  44edf5:	lea    edx,[edi+0x4]
  44edf8:	mov    edx,DWORD PTR [edx]
  44edfa:	mov    ecx,DWORD PTR [eax+0x58]
  44edfd:	add    ecx,ecx
  44edff:	add    ecx,ecx
  44ee01:	xor    edx,DWORD PTR [eax+ecx*8+0x40]
  44ee05:	lea    ecx,[esi+0x4]
  44ee08:	mov    DWORD PTR [ecx],edx
  44ee0a:	lea    edx,[edi+0x8]
  44ee0d:	mov    edx,DWORD PTR [edx]
  44ee0f:	mov    ecx,DWORD PTR [eax+0x58]
  44ee12:	add    ecx,ecx
  44ee14:	add    ecx,ecx
  44ee16:	xor    edx,DWORD PTR [eax+ecx*8+0x44]
  44ee1a:	lea    ecx,[esi+0x8]
  44ee1d:	mov    DWORD PTR [ecx],edx
  44ee1f:	lea    edx,[edi+0xc]
  44ee22:	mov    edx,DWORD PTR [edx]
  44ee24:	mov    ecx,DWORD PTR [eax+0x58]
  44ee27:	add    ecx,ecx
  44ee29:	add    ecx,ecx
  44ee2b:	xor    edx,DWORD PTR [eax+ecx*8+0x48]
  44ee2f:	lea    ecx,[esi+0xc]
  44ee32:	mov    DWORD PTR [ecx],edx
  44ee34:	movzx  edx,BYTE PTR [esi]
  44ee37:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee3f:	mov    BYTE PTR [edi],dl
  44ee41:	movzx  edx,BYTE PTR [esi+0x5]
  44ee45:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee4d:	mov    BYTE PTR [edi+0x1],dl
  44ee50:	movzx  edx,BYTE PTR [esi+0xa]
  44ee54:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee5c:	mov    BYTE PTR [edi+0x2],dl
  44ee5f:	movzx  edx,BYTE PTR [esi+0xf]
  44ee63:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee6b:	mov    BYTE PTR [edi+0x3],dl
  44ee6e:	movzx  edx,BYTE PTR [esi+0x4]
  44ee72:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee7a:	mov    BYTE PTR [edi+0x4],dl
  44ee7d:	movzx  edx,BYTE PTR [esi+0x9]
  44ee81:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee89:	mov    BYTE PTR [edi+0x5],dl
  44ee8c:	movzx  edx,BYTE PTR [esi+0xe]
  44ee90:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ee98:	mov    BYTE PTR [edi+0x6],dl
  44ee9b:	movzx  edx,BYTE PTR [esi+0x3]
  44ee9f:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eea7:	mov    BYTE PTR [edi+0x7],dl
  44eeaa:	movzx  edx,BYTE PTR [esi+0x8]
  44eeae:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eeb6:	mov    BYTE PTR [edi+0x8],dl
  44eeb9:	movzx  edx,BYTE PTR [esi+0xd]
  44eebd:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eec5:	mov    BYTE PTR [edi+0x9],dl
  44eec8:	movzx  edx,BYTE PTR [esi+0x2]
  44eecc:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eed4:	mov    BYTE PTR [edi+0xa],dl
  44eed7:	movzx  edx,BYTE PTR [esi+0x7]
  44eedb:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eee3:	mov    BYTE PTR [edi+0xb],dl
  44eee6:	movzx  edx,BYTE PTR [esi+0xc]
  44eeea:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44eef2:	mov    BYTE PTR [edi+0xc],dl
  44eef5:	movzx  edx,BYTE PTR [esi+0x1]
  44eef9:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ef01:	mov    BYTE PTR [edi+0xd],dl
  44ef04:	movzx  edx,BYTE PTR [esi+0x6]
  44ef08:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ef10:	mov    BYTE PTR [edi+0xe],dl
  44ef13:	movzx  edx,BYTE PTR [esi+0xb]
  44ef17:	movzx  edx,BYTE PTR [edx*4+0x46a261]
  44ef1f:	mov    BYTE PTR [edi+0xf],dl
  44ef22:	mov    edx,DWORD PTR [eax+0x58]
  44ef25:	add    edx,edx
  44ef27:	add    edx,edx
  44ef29:	mov    edx,DWORD PTR [eax+edx*8+0x5c]
  44ef2d:	xor    DWORD PTR [edi],edx
  44ef2f:	mov    edx,DWORD PTR [eax+0x58]
  44ef32:	add    edx,edx
  44ef34:	add    edx,edx
  44ef36:	mov    edx,DWORD PTR [eax+edx*8+0x60]
  44ef3a:	lea    ecx,[edi+0x4]
  44ef3d:	xor    DWORD PTR [ecx],edx
  44ef3f:	mov    edx,DWORD PTR [eax+0x58]
  44ef42:	add    edx,edx
  44ef44:	add    edx,edx
  44ef46:	mov    edx,DWORD PTR [eax+edx*8+0x64]
  44ef4a:	lea    ecx,[edi+0x8]
  44ef4d:	xor    DWORD PTR [ecx],edx
  44ef4f:	mov    edx,DWORD PTR [eax+0x58]
  44ef52:	add    edx,edx
  44ef54:	add    edx,edx
  44ef56:	mov    eax,DWORD PTR [eax+edx*8+0x68]
  44ef5a:	lea    edx,[edi+0xc]
  44ef5d:	xor    DWORD PTR [edx],eax
  44ef5f:	mov    eax,DWORD PTR [edi]
  44ef61:	mov    edx,DWORD PTR [esp]
  44ef64:	mov    DWORD PTR [edx],eax
  44ef66:	lea    eax,[edi+0x4]
  44ef69:	mov    eax,DWORD PTR [eax]
  44ef6b:	mov    edx,DWORD PTR [esp]
  44ef6e:	add    edx,0x4
  44ef71:	mov    DWORD PTR [edx],eax
  44ef73:	lea    eax,[edi+0x8]
  44ef76:	mov    eax,DWORD PTR [eax]
  44ef78:	mov    edx,DWORD PTR [esp]
  44ef7b:	add    edx,0x8
  44ef7e:	mov    DWORD PTR [edx],eax
  44ef80:	lea    eax,[edi+0xc]
  44ef83:	mov    eax,DWORD PTR [eax]
  44ef85:	mov    edx,DWORD PTR [esp]
  44ef88:	add    edx,0xc
  44ef8b:	mov    DWORD PTR [edx],eax
  44ef8d:	add    esp,0x4c
  44ef90:	pop    ebp
  44ef91:	pop    edi
  44ef92:	pop    esi
  44ef93:	pop    ebx
  44ef94:	ret    
  44ef95:	add    BYTE PTR [eax],al
  44ef97:	add    bh,bh
  44ef99:	(bad)  
  44ef9a:	(bad)  
  44ef9b:	call   DWORD PTR [esi]
  44ef9d:	add    BYTE PTR [eax],al
  44ef9f:	add    BYTE PTR [ebx+0x69],al
  44efa2:	jo     0x44f00c
  44efa4:	gs jb  0x44efc7
  44efa7:	outs   dx,BYTE PTR ds:[esi]
  44efa8:	outs   dx,DWORD PTR ds:[esi]
  44efa9:	je     0x44efcb
  44efab:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44efb2:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  44efb9:	push   esi
  44efba:	push   edi
  44efbb:	push   ebp
  44efbc:	add    esp,0xffffffb8
  44efbf:	mov    DWORD PTR [esp],ecx
  44efc2:	lea    esi,[esp+0x4]
  44efc6:	lea    edi,[esp+0x24]
  44efca:	cmp    BYTE PTR [eax+0x30],0x0
  44efce:	jne    0x44efe6
  44efd0:	mov    ecx,0x44f2c8
  44efd5:	mov    dl,0x1
  44efd7:	mov    eax,ds:0x441af8
  44efdc:	call   0x40c8b4
  44efe1:	call   0x4048fc
  44efe6:	mov    ecx,DWORD PTR [edx]
  44efe8:	mov    DWORD PTR [edi],ecx
  44efea:	mov    ecx,edx
  44efec:	add    ecx,0x4
  44efef:	mov    ecx,DWORD PTR [ecx]
  44eff1:	lea    ebx,[edi+0x4]
  44eff4:	mov    DWORD PTR [ebx],ecx
  44eff6:	mov    ecx,edx
  44eff8:	add    ecx,0x8
  44effb:	mov    ecx,DWORD PTR [ecx]
  44effd:	lea    ebx,[edi+0x8]
  44f000:	mov    DWORD PTR [ebx],ecx
  44f002:	add    edx,0xc
  44f005:	mov    edx,DWORD PTR [edx]
  44f007:	lea    ecx,[edi+0xc]
  44f00a:	mov    DWORD PTR [ecx],edx
  44f00c:	mov    edx,DWORD PTR [eax+0x58]
  44f00f:	cmp    edx,0x2
  44f012:	jb     0x44f148
  44f018:	mov    ecx,DWORD PTR [edi]
  44f01a:	mov    ebx,edx
  44f01c:	add    ebx,ebx
  44f01e:	add    ebx,ebx
  44f020:	xor    ecx,DWORD PTR [eax+ebx*8+0x23c]
  44f027:	mov    DWORD PTR [esi],ecx
  44f029:	lea    ecx,[edi+0x4]
  44f02c:	mov    ecx,DWORD PTR [ecx]
  44f02e:	xor    ecx,DWORD PTR [eax+ebx*8+0x240]
  44f035:	lea    ebp,[esi+0x4]
  44f038:	mov    DWORD PTR [ebp+0x0],ecx
  44f03b:	lea    ecx,[edi+0x8]
  44f03e:	mov    ecx,DWORD PTR [ecx]
  44f040:	xor    ecx,DWORD PTR [eax+ebx*8+0x244]
  44f047:	lea    ebp,[esi+0x8]
  44f04a:	mov    DWORD PTR [ebp+0x0],ecx
  44f04d:	lea    ecx,[edi+0xc]
  44f050:	mov    ecx,DWORD PTR [ecx]
  44f052:	xor    ecx,DWORD PTR [eax+ebx*8+0x248]
  44f059:	lea    ebx,[esi+0xc]
  44f05c:	mov    DWORD PTR [ebx],ecx
  44f05e:	movzx  ecx,BYTE PTR [esi]
  44f061:	lea    ecx,[ecx*4+0x46b260]
  44f068:	mov    ecx,DWORD PTR [ecx]
  44f06a:	movzx  ebx,BYTE PTR [esi+0xd]
  44f06e:	lea    ebx,[ebx*4+0x46b660]
  44f075:	xor    ecx,DWORD PTR [ebx]
  44f077:	movzx  ebx,BYTE PTR [esi+0xa]
  44f07b:	lea    ebx,[ebx*4+0x46ba60]
  44f082:	xor    ecx,DWORD PTR [ebx]
  44f084:	movzx  ebx,BYTE PTR [esi+0x7]
  44f088:	lea    ebx,[ebx*4+0x46be60]
  44f08f:	xor    ecx,DWORD PTR [ebx]
  44f091:	mov    DWORD PTR [edi],ecx
  44f093:	movzx  ecx,BYTE PTR [esi+0x4]
  44f097:	lea    ecx,[ecx*4+0x46b260]
  44f09e:	mov    ecx,DWORD PTR [ecx]
  44f0a0:	movzx  ebx,BYTE PTR [esi+0x1]
  44f0a4:	lea    ebx,[ebx*4+0x46b660]
  44f0ab:	xor    ecx,DWORD PTR [ebx]
  44f0ad:	movzx  ebx,BYTE PTR [esi+0xe]
  44f0b1:	lea    ebx,[ebx*4+0x46ba60]
  44f0b8:	xor    ecx,DWORD PTR [ebx]
  44f0ba:	movzx  ebx,BYTE PTR [esi+0xb]
  44f0be:	lea    ebx,[ebx*4+0x46be60]
  44f0c5:	xor    ecx,DWORD PTR [ebx]
  44f0c7:	lea    ebx,[edi+0x4]
  44f0ca:	mov    DWORD PTR [ebx],ecx
  44f0cc:	movzx  ecx,BYTE PTR [esi+0x8]
  44f0d0:	lea    ecx,[ecx*4+0x46b260]
  44f0d7:	mov    ecx,DWORD PTR [ecx]
  44f0d9:	movzx  ebx,BYTE PTR [esi+0x5]
  44f0dd:	lea    ebx,[ebx*4+0x46b660]
  44f0e4:	xor    ecx,DWORD PTR [ebx]
  44f0e6:	movzx  ebx,BYTE PTR [esi+0x2]
  44f0ea:	lea    ebx,[ebx*4+0x46ba60]
  44f0f1:	xor    ecx,DWORD PTR [ebx]
  44f0f3:	movzx  ebx,BYTE PTR [esi+0xf]
  44f0f7:	lea    ebx,[ebx*4+0x46be60]
  44f0fe:	xor    ecx,DWORD PTR [ebx]
  44f100:	lea    ebx,[edi+0x8]
  44f103:	mov    DWORD PTR [ebx],ecx
  44f105:	movzx  ecx,BYTE PTR [esi+0xc]
  44f109:	lea    ecx,[ecx*4+0x46b260]
  44f110:	mov    ecx,DWORD PTR [ecx]
  44f112:	movzx  ebx,BYTE PTR [esi+0x9]
  44f116:	lea    ebx,[ebx*4+0x46b660]
  44f11d:	xor    ecx,DWORD PTR [ebx]
  44f11f:	movzx  ebx,BYTE PTR [esi+0x6]
  44f123:	lea    ebx,[ebx*4+0x46ba60]
  44f12a:	xor    ecx,DWORD PTR [ebx]
  44f12c:	movzx  ebx,BYTE PTR [esi+0x3]
  44f130:	lea    ebx,[ebx*4+0x46be60]
  44f137:	xor    ecx,DWORD PTR [ebx]
  44f139:	lea    ebx,[edi+0xc]
  44f13c:	mov    DWORD PTR [ebx],ecx
  44f13e:	dec    edx
  44f13f:	cmp    edx,0x1
  44f142:	jne    0x44f018
  44f148:	mov    edx,DWORD PTR [edi]
  44f14a:	xor    edx,DWORD PTR [eax+0x25c]
  44f150:	mov    DWORD PTR [esi],edx
  44f152:	lea    edx,[edi+0x4]
  44f155:	mov    edx,DWORD PTR [edx]
  44f157:	xor    edx,DWORD PTR [eax+0x260]
  44f15d:	lea    ecx,[esi+0x4]
  44f160:	mov    DWORD PTR [ecx],edx
  44f162:	lea    edx,[edi+0x8]
  44f165:	mov    edx,DWORD PTR [edx]
  44f167:	xor    edx,DWORD PTR [eax+0x264]
  44f16d:	lea    ecx,[esi+0x8]
  44f170:	mov    DWORD PTR [ecx],edx
  44f172:	lea    edx,[edi+0xc]
  44f175:	mov    edx,DWORD PTR [edx]
  44f177:	xor    edx,DWORD PTR [eax+0x268]
  44f17d:	lea    ecx,[esi+0xc]
  44f180:	mov    DWORD PTR [ecx],edx
  44f182:	movzx  edx,BYTE PTR [esi]
  44f185:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f18c:	mov    BYTE PTR [edi],dl
  44f18e:	movzx  edx,BYTE PTR [esi+0xd]
  44f192:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f199:	mov    BYTE PTR [edi+0x1],dl
  44f19c:	movzx  edx,BYTE PTR [esi+0xa]
  44f1a0:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1a7:	mov    BYTE PTR [edi+0x2],dl
  44f1aa:	movzx  edx,BYTE PTR [esi+0x7]
  44f1ae:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1b5:	mov    BYTE PTR [edi+0x3],dl
  44f1b8:	movzx  edx,BYTE PTR [esi+0x4]
  44f1bc:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1c3:	mov    BYTE PTR [edi+0x4],dl
  44f1c6:	movzx  edx,BYTE PTR [esi+0x1]
  44f1ca:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1d1:	mov    BYTE PTR [edi+0x5],dl
  44f1d4:	movzx  edx,BYTE PTR [esi+0xe]
  44f1d8:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1df:	mov    BYTE PTR [edi+0x6],dl
  44f1e2:	movzx  edx,BYTE PTR [esi+0xb]
  44f1e6:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1ed:	mov    BYTE PTR [edi+0x7],dl
  44f1f0:	movzx  edx,BYTE PTR [esi+0x8]
  44f1f4:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f1fb:	mov    BYTE PTR [edi+0x8],dl
  44f1fe:	movzx  edx,BYTE PTR [esi+0x5]
  44f202:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f209:	mov    BYTE PTR [edi+0x9],dl
  44f20c:	movzx  edx,BYTE PTR [esi+0x2]
  44f210:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f217:	mov    BYTE PTR [edi+0xa],dl
  44f21a:	movzx  edx,BYTE PTR [esi+0xf]
  44f21e:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f225:	mov    BYTE PTR [edi+0xb],dl
  44f228:	movzx  edx,BYTE PTR [esi+0xc]
  44f22c:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f233:	mov    BYTE PTR [edi+0xc],dl
  44f236:	movzx  edx,BYTE PTR [esi+0x9]
  44f23a:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f241:	mov    BYTE PTR [edi+0xd],dl
  44f244:	movzx  edx,BYTE PTR [esi+0x6]
  44f248:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f24f:	mov    BYTE PTR [edi+0xe],dl
  44f252:	movzx  edx,BYTE PTR [esi+0x3]
  44f256:	movzx  edx,BYTE PTR [edx+0x46c260]
  44f25d:	mov    BYTE PTR [edi+0xf],dl
  44f260:	mov    edx,DWORD PTR [eax+0x23c]
  44f266:	xor    DWORD PTR [edi],edx
  44f268:	lea    edx,[edi+0x4]
  44f26b:	mov    ecx,DWORD PTR [eax+0x240]
  44f271:	xor    DWORD PTR [edx],ecx
  44f273:	lea    edx,[edi+0x8]
  44f276:	mov    ecx,DWORD PTR [eax+0x244]
  44f27c:	xor    DWORD PTR [edx],ecx
  44f27e:	lea    edx,[edi+0xc]
  44f281:	mov    eax,DWORD PTR [eax+0x248]
  44f287:	xor    DWORD PTR [edx],eax
  44f289:	mov    eax,DWORD PTR [edi]
  44f28b:	mov    edx,DWORD PTR [esp]
  44f28e:	mov    DWORD PTR [edx],eax
  44f290:	lea    eax,[edi+0x4]
  44f293:	mov    eax,DWORD PTR [eax]
  44f295:	mov    edx,DWORD PTR [esp]
  44f298:	add    edx,0x4
  44f29b:	mov    DWORD PTR [edx],eax
  44f29d:	lea    eax,[edi+0x8]
  44f2a0:	mov    eax,DWORD PTR [eax]
  44f2a2:	mov    edx,DWORD PTR [esp]
  44f2a5:	add    edx,0x8
  44f2a8:	mov    DWORD PTR [edx],eax
  44f2aa:	lea    eax,[edi+0xc]
  44f2ad:	mov    eax,DWORD PTR [eax]
  44f2af:	mov    edx,DWORD PTR [esp]
  44f2b2:	add    edx,0xc
  44f2b5:	mov    DWORD PTR [edx],eax
  44f2b7:	add    esp,0x48
  44f2ba:	pop    ebp
  44f2bb:	pop    edi
  44f2bc:	pop    esi
  44f2bd:	pop    ebx
  44f2be:	ret    
  44f2bf:	add    bh,bh
  44f2c1:	(bad)  
  44f2c2:	(bad)  
  44f2c3:	call   DWORD PTR [esi]
  44f2c5:	add    BYTE PTR [eax],al
  44f2c7:	add    BYTE PTR [ebx+0x69],al
  44f2ca:	jo     0x44f334
  44f2cc:	gs jb  0x44f2ef
  44f2cf:	outs   dx,BYTE PTR ds:[esi]
  44f2d0:	outs   dx,DWORD PTR ds:[esi]
  44f2d1:	je     0x44f2f3
  44f2d3:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  44f2da:	imul   edi,DWORD PTR [edx+0x65],0x2c000064
  44f2e1:	repz inc esp
	...
  44f2ef:	add    ah,bl
  44f2f1:	repz inc esp
	...
  44f2ff:	add    al,cl
  44f301:	repz inc esp
  44f303:	add    BYTE PTR [eax+0x2],ch
  44f306:	add    BYTE PTR [eax],al
  44f308:	mov    al,0x24
  44f30a:	inc    esp
  44f30b:	add    BYTE PTR [eax],bl
  44f30d:	test   eax,0x42dc0041
  44f312:	inc    eax
  44f313:	add    BYTE PTR [eax-0x1bffbe5e],ch
  44f319:	inc    edx
  44f31a:	inc    eax
  44f31b:	add    al,bl
  44f31d:	inc    edx
  44f31e:	inc    eax
  44f31f:	add    BYTE PTR [eax],bh
  44f321:	inc    eax
  44f322:	inc    eax
  44f323:	add    BYTE PTR [eax+eax*2+0x40],dl
  44f327:	add    BYTE PTR [eax+0x20],bh
  44f32a:	inc    esp
  44f32b:	add    BYTE PTR [eax+0x41],ch
  44f32e:	inc    ecx
  44f32f:	add    BYTE PTR [eax-0x5b],dh
  44f332:	inc    ecx
  44f333:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  44f33a:	inc    ecx
  44f33b:	add    BYTE PTR [eax],dl
  44f33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f33e:	inc    ecx
  44f33f:	add    BYTE PTR [eax-0x5a],bl
  44f342:	inc    ecx
  44f343:	add    BYTE PTR [eax-0x59],dl
  44f346:	inc    ecx
  44f347:	add    BYTE PTR [eax],dh
  44f349:	test   eax,0xa6680041
  44f34e:	inc    ecx
  44f34f:	add    BYTE PTR [eax-0x5a],ah
  44f352:	inc    ecx
  44f353:	add    BYTE PTR [eax],bh
  44f355:	test   eax,0x231c0041
  44f35a:	inc    esp
  44f35b:	add    BYTE PTR [esp+esi*8],al
  44f35e:	inc    esp
  44f35f:	add    BYTE PTR [esp+esi*8],cl
  44f362:	inc    esp
  44f363:	add    BYTE PTR [eax],dh
  44f365:	hlt    
  44f366:	inc    esp
  44f367:	add    BYTE PTR [eax],bh
  44f369:	hlt    
  44f36a:	inc    esp
  44f36b:	add    BYTE PTR [eax+esi*1-0x283ffbc],cl
  44f372:	inc    esp
  44f373:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  44f37a:	inc    esp
  44f37b:	add    BYTE PTR [eax],bh
  44f37d:	and    al,BYTE PTR [eax+eax*1+0x4c]
  44f381:	and    DWORD PTR [eax+eax*1-0x14],eax
  44f385:	and    DWORD PTR [eax+eax*1-0x4c],eax
  44f389:	cmc    
  44f38a:	inc    esp
  44f38b:	add    BYTE PTR [eax+esi*1+0x31000044],al
  44f392:	inc    esp
  44f393:	add    BYTE PTR [eax+0x31],bl
  44f396:	inc    esp
  44f397:	add    BYTE PTR [eax+0x680044fd],bl
  44f39d:	or     al,BYTE PTR [ebp+0x0]
  44f3a0:	and    al,0x32
  44f3a2:	inc    esp
  44f3a3:	add    BYTE PTR [eax],bl
  44f3a5:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  44f3a9:	xor    al,0x44
  44f3ab:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  44f3b2:	inc    esp
  44f3b3:	add    BYTE PTR [esi+esi*1+0x44],cl
  44f3b7:	add    BYTE PTR [edi+esi*1+0x44],cl
  44f3bb:	add    BYTE PTR [eax+edi*1],ch
  44f3be:	inc    esp
  44f3bf:	add    BYTE PTR [ecx+edi*1],cl
  44f3c2:	inc    esp
  44f3c3:	add    ah,bh
  44f3c5:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  44f3c9:	push   esp
  44f3ca:	inc    esp
  44f3cb:	inc    ebx
  44f3cc:	push   eax
  44f3cd:	pop    edi
  44f3ce:	jae    0x44f435
  44f3d0:	jb     0x44f442
  44f3d2:	outs   dx,BYTE PTR gs:[esi]
  44f3d4:	je     0x44f363
  44f3d6:	inc    eax
  44f3d7:	add    ah,bl
  44f3d9:	repz inc esp
  44f3db:	add    BYTE PTR [edi],al
  44f3dd:	or     al,0x54
  44f3df:	inc    esp
  44f3e0:	inc    ebx
  44f3e1:	push   eax
  44f3e2:	pop    edi
  44f3e3:	jae    0x44f44a
  44f3e5:	jb     0x44f457
  44f3e7:	outs   dx,BYTE PTR gs:[esi]
  44f3e9:	je     0x44f417
  44f3eb:	repz inc esp
  44f3ed:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  44f3f4:	or     al,BYTE PTR [ebx+eax*2+0x50]
  44f3f8:	jae    0x44f45f
  44f3fa:	jb     0x44f46c
  44f3fc:	outs   dx,BYTE PTR gs:[esi]
  44f3fe:	je     0x44f400
  44f400:	add    BYTE PTR [ebp+0x1ab80040],cl
  44f406:	add    BYTE PTR [eax],al
  44f408:	add    bl,al
  44f40a:	mov    eax,eax
  44f40c:	push   ebx
  44f40d:	mov    ebx,edx
  44f40f:	mov    eax,ebx
  44f411:	mov    edx,0x44f428
  44f416:	call   0x404fdc
  44f41b:	pop    ebx
  44f41c:	ret    
  44f41d:	add    BYTE PTR [eax],al
  44f41f:	add    bh,bh
  44f421:	(bad)  
  44f422:	(bad)  
  44f423:	inc    DWORD PTR [edi]
  44f425:	add    BYTE PTR [eax],al
  44f427:	add    BYTE PTR [ebx+0x65],dl
  44f42a:	jb     0x44f49c
  44f42c:	outs   dx,BYTE PTR gs:[esi]
  44f42e:	je     0x44f430
  44f430:	mov    eax,0x100
  44f435:	ret    
  44f436:	mov    eax,eax
  44f438:	push   ebx
  44f439:	push   esi
  44f43a:	push   edi
  44f43b:	push   ebp
  44f43c:	add    esp,0xfffffff0
  44f43f:	mov    edi,esp
  44f441:	xor    ecx,ecx
  44f443:	mov    dl,0x1
  44f445:	mov    eax,ds:0x44f2e0
  44f44a:	call   0x44231c
  44f44f:	mov    esi,eax
  44f451:	push   0x0
  44f453:	mov    edx,0x46d480
  44f458:	mov    ecx,0x80
  44f45d:	mov    eax,esi
  44f45f:	mov    ebx,DWORD PTR [eax]
  44f461:	call   DWORD PTR [ebx+0x40]
  44f464:	mov    ecx,edi
  44f466:	mov    edx,0x46d490
  44f46b:	mov    eax,esi
  44f46d:	mov    ebx,DWORD PTR [eax]
  44f46f:	call   DWORD PTR [ebx+0x6c]
  44f472:	mov    edx,0x46d4a0
  44f477:	mov    eax,edi
  44f479:	mov    ecx,0x10
  44f47e:	call   0x408538
  44f483:	mov    ebx,eax
  44f485:	mov    ecx,edi
  44f487:	mov    edx,edi
  44f489:	mov    eax,esi
  44f48b:	mov    ebp,DWORD PTR [eax]
  44f48d:	call   DWORD PTR [ebp+0x70]
  44f490:	mov    eax,esi
  44f492:	mov    edx,DWORD PTR [eax]
  44f494:	call   DWORD PTR [edx+0x44]
  44f497:	test   bl,bl
  44f499:	je     0x44f4b0
  44f49b:	mov    edx,0x46d490
  44f4a0:	mov    eax,edi
  44f4a2:	mov    ecx,0x10
  44f4a7:	call   0x408538
  44f4ac:	test   al,al
  44f4ae:	jne    0x44f4b4
  44f4b0:	xor    eax,eax
  44f4b2:	jmp    0x44f4b6
  44f4b4:	mov    al,0x1
  44f4b6:	mov    ebx,eax
  44f4b8:	push   0x0
  44f4ba:	mov    edx,0x46d4b0
  44f4bf:	mov    ecx,0xc0
  44f4c4:	mov    eax,esi
  44f4c6:	mov    ebp,DWORD PTR [eax]
  44f4c8:	call   DWORD PTR [ebp+0x40]
  44f4cb:	mov    ecx,edi
  44f4cd:	mov    edx,0x46d4c8
  44f4d2:	mov    eax,esi
  44f4d4:	mov    ebp,DWORD PTR [eax]
  44f4d6:	call   DWORD PTR [ebp+0x6c]
  44f4d9:	test   bl,bl
  44f4db:	je     0x44f4f2
  44f4dd:	mov    edx,0x46d4d8
  44f4e2:	mov    eax,edi
  44f4e4:	mov    ecx,0x10
  44f4e9:	call   0x408538
  44f4ee:	test   al,al
  44f4f0:	jne    0x44f4f6
  44f4f2:	xor    eax,eax
  44f4f4:	jmp    0x44f4f8
  44f4f6:	mov    al,0x1
  44f4f8:	mov    ebx,eax
  44f4fa:	mov    ecx,edi
  44f4fc:	mov    edx,edi
  44f4fe:	mov    eax,esi
  44f500:	mov    ebp,DWORD PTR [eax]
  44f502:	call   DWORD PTR [ebp+0x70]
  44f505:	mov    eax,esi
  44f507:	mov    edx,DWORD PTR [eax]
  44f509:	call   DWORD PTR [edx+0x44]
  44f50c:	test   bl,bl
  44f50e:	je     0x44f525
  44f510:	mov    edx,0x46d4c8
  44f515:	mov    eax,edi
  44f517:	mov    ecx,0x10
  44f51c:	call   0x408538
  44f521:	test   al,al
  44f523:	jne    0x44f529
  44f525:	xor    eax,eax
  44f527:	jmp    0x44f52b
  44f529:	mov    al,0x1
  44f52b:	mov    ebx,eax
  44f52d:	push   0x0
  44f52f:	mov    edx,0x46d4e8
  44f534:	mov    ecx,0x100
  44f539:	mov    eax,esi
  44f53b:	mov    ebp,DWORD PTR [eax]
  44f53d:	call   DWORD PTR [ebp+0x40]
  44f540:	mov    ecx,edi
  44f542:	mov    edx,0x46d508
  44f547:	mov    eax,esi
  44f549:	mov    ebp,DWORD PTR [eax]
  44f54b:	call   DWORD PTR [ebp+0x6c]
  44f54e:	test   bl,bl
  44f550:	je     0x44f567
  44f552:	mov    edx,0x46d518
  44f557:	mov    eax,edi
  44f559:	mov    ecx,0x10
  44f55e:	call   0x408538
  44f563:	test   al,al
  44f565:	jne    0x44f56b
  44f567:	xor    eax,eax
  44f569:	jmp    0x44f56d
  44f56b:	mov    al,0x1
  44f56d:	mov    ebx,eax
  44f56f:	mov    ecx,edi
  44f571:	mov    edx,edi
  44f573:	mov    eax,esi
  44f575:	mov    ebp,DWORD PTR [eax]
  44f577:	call   DWORD PTR [ebp+0x70]
  44f57a:	mov    eax,esi
  44f57c:	mov    edx,DWORD PTR [eax]
  44f57e:	call   DWORD PTR [edx+0x44]
  44f581:	test   bl,bl
  44f583:	je     0x44f59a
  44f585:	mov    edx,0x46d508
  44f58a:	mov    eax,edi
  44f58c:	mov    ecx,0x10
  44f591:	call   0x408538
  44f596:	test   al,al
  44f598:	jne    0x44f59e
  44f59a:	xor    eax,eax
  44f59c:	jmp    0x44f5a0
  44f59e:	mov    al,0x1
  44f5a0:	mov    ebx,eax
  44f5a2:	mov    eax,esi
  44f5a4:	call   0x4040a0
  44f5a9:	mov    eax,ebx
  44f5ab:	add    esp,0x10
  44f5ae:	pop    ebp
  44f5af:	pop    edi
  44f5b0:	pop    esi
  44f5b1:	pop    ebx
  44f5b2:	ret    
  44f5b3:	nop
  44f5b4:	push   ebx
  44f5b5:	push   esi
  44f5b6:	push   edi
  44f5b7:	push   ebp
  44f5b8:	add    esp,0xfffffd94
  44f5be:	mov    DWORD PTR [esp+0x8],ecx
  44f5c2:	mov    DWORD PTR [esp+0x4],edx
  44f5c6:	mov    DWORD PTR [esp],eax
  44f5c9:	lea    eax,[esp+0x3c]
  44f5cd:	xor    ecx,ecx
  44f5cf:	mov    edx,0x20
  44f5d4:	call   0x4037c8
  44f5d9:	mov    ecx,DWORD PTR [esp+0x8]
  44f5dd:	shr    ecx,0x3
  44f5e0:	lea    edx,[esp+0x3c]
  44f5e4:	mov    eax,DWORD PTR [esp+0x4]
  44f5e8:	call   0x403090
  44f5ed:	cmp    DWORD PTR [esp+0x8],0x100
  44f5f5:	jae    0x44f627
  44f5f7:	mov    eax,DWORD PTR [esp+0x8]
  44f5fb:	shr    eax,0x5
  44f5fe:	mov    DWORD PTR [esp+0xc],eax
  44f602:	mov    ecx,DWORD PTR [esp+0x8]
  44f606:	and    ecx,0x1f
  44f609:	mov    edx,0x1
  44f60e:	shl    edx,cl
  44f610:	mov    eax,DWORD PTR [esp+0xc]
  44f614:	mov    eax,DWORD PTR [esp+eax*4+0x3c]
  44f618:	mov    ecx,edx
  44f61a:	dec    ecx
  44f61b:	and    eax,ecx
  44f61d:	or     edx,eax
  44f61f:	mov    eax,DWORD PTR [esp+0xc]
  44f623:	mov    DWORD PTR [esp+eax*4+0x3c],edx
  44f627:	mov    DWORD PTR [esp+0xc],0x8
  44f62f:	lea    eax,[esp+0x3c]
  44f633:	mov    edx,DWORD PTR [eax]
  44f635:	xor    edx,DWORD PTR [eax+0xc]
  44f638:	xor    edx,DWORD PTR [eax+0x14]
  44f63b:	xor    edx,DWORD PTR [eax+0x1c]
  44f63e:	xor    edx,0x9e3779b9
  44f644:	mov    ecx,DWORD PTR [esp+0xc]
  44f648:	sub    ecx,0x8
  44f64b:	xor    edx,ecx
  44f64d:	mov    ecx,edx
  44f64f:	shl    ecx,0xb
  44f652:	shr    edx,0x15
  44f655:	or     ecx,edx
  44f657:	mov    DWORD PTR [eax+0x20],ecx
  44f65a:	inc    DWORD PTR [esp+0xc]
  44f65e:	add    eax,0x4
  44f661:	cmp    DWORD PTR [esp+0xc],0x8c
  44f669:	jne    0x44f633
  44f66b:	xor    eax,eax
  44f66d:	mov    DWORD PTR [esp+0xc],eax
  44f671:	mov    eax,DWORD PTR [esp+0xc]
  44f675:	shl    eax,0x5
  44f678:	lea    ebx,[eax]
  44f67a:	mov    edx,DWORD PTR [esp+ebx*4+0x5c]
  44f67e:	mov    ecx,DWORD PTR [esp+ebx*4+0x60]
  44f682:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44f686:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44f68a:	mov    edi,esi
  44f68c:	xor    edi,edx
  44f68e:	mov    DWORD PTR [esp+0x10],edi
  44f692:	mov    edi,ebx
  44f694:	or     edi,edx
  44f696:	mov    DWORD PTR [esp+0x14],edi
  44f69a:	mov    edi,ecx
  44f69c:	and    edi,edx
  44f69e:	mov    DWORD PTR [esp+0x18],edi
  44f6a2:	and    edx,ebx
  44f6a4:	mov    DWORD PTR [esp+0x1c],edx
  44f6a8:	mov    edx,DWORD PTR [esp+0x1c]
  44f6ac:	or     edx,ecx
  44f6ae:	mov    DWORD PTR [esp+0x20],edx
  44f6b2:	mov    edx,DWORD PTR [esp+0x10]
  44f6b6:	and    edx,DWORD PTR [esp+0x14]
  44f6ba:	mov    DWORD PTR [esp+0x24],edx
  44f6be:	mov    edx,DWORD PTR [esp+0x20]
  44f6c2:	xor    edx,DWORD PTR [esp+0x24]
  44f6c6:	lea    edi,[eax+0x9]
  44f6c9:	mov    DWORD PTR [esp+edi*4+0x3c],edx
  44f6cd:	xor    ecx,ebx
  44f6cf:	mov    DWORD PTR [esp+0x2c],ecx
  44f6d3:	mov    edx,DWORD PTR [esp+0x18]
  44f6d7:	or     edx,esi
  44f6d9:	mov    DWORD PTR [esp+0x30],edx
  44f6dd:	mov    edx,DWORD PTR [esp+0x24]
  44f6e1:	xor    edx,DWORD PTR [esp+0x2c]
  44f6e5:	mov    DWORD PTR [esp+0x34],edx
  44f6e9:	mov    edx,DWORD PTR [esp+0x30]
  44f6ed:	xor    edx,DWORD PTR [esp+0x34]
  44f6f1:	lea    ecx,[eax+0xb]
  44f6f4:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44f6f8:	xor    esi,DWORD PTR [esp+0x18]
  44f6fc:	lea    edx,[eax+0xb]
  44f6ff:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f703:	and    edx,DWORD PTR [esp+0x14]
  44f707:	xor    esi,edx
  44f709:	lea    edx,[eax+0xa]
  44f70c:	mov    DWORD PTR [esp+edx*4+0x3c],esi
  44f710:	lea    edx,[eax+0xa]
  44f713:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f717:	not    edx
  44f719:	mov    ebx,DWORD PTR [esp+0x14]
  44f71d:	xor    ebx,DWORD PTR [esp+0x18]
  44f721:	lea    ecx,[eax+0x9]
  44f724:	and    edx,DWORD PTR [esp+ecx*4+0x3c]
  44f728:	xor    ebx,edx
  44f72a:	lea    edx,[eax+0x8]
  44f72d:	mov    DWORD PTR [esp+edx*4+0x3c],ebx
  44f731:	lea    edx,[eax+0x4]
  44f734:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44f738:	lea    ebx,[eax+0x4]
  44f73b:	mov    ecx,DWORD PTR [esp+ebx*4+0x60]
  44f73f:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44f743:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44f747:	mov    edi,edx
  44f749:	not    edi
  44f74b:	mov    DWORD PTR [esp+0x10],edi
  44f74f:	mov    edi,ebx
  44f751:	xor    edi,ecx
  44f753:	mov    DWORD PTR [esp+0x14],edi
  44f757:	mov    edi,DWORD PTR [esp+0x10]
  44f75b:	and    edi,esi
  44f75d:	mov    DWORD PTR [esp+0x18],edi
  44f761:	mov    edi,DWORD PTR [esp+0x14]
  44f765:	xor    edi,DWORD PTR [esp+0x18]
  44f769:	lea    ebp,[eax+0xc]
  44f76c:	mov    DWORD PTR [esp+ebp*4+0x3c],edi
  44f770:	mov    edi,DWORD PTR [esp+0x10]
  44f774:	xor    edi,esi
  44f776:	mov    DWORD PTR [esp+0x20],edi
  44f77a:	lea    edi,[eax+0xc]
  44f77d:	xor    esi,DWORD PTR [esp+edi*4+0x3c]
  44f781:	mov    DWORD PTR [esp+0x24],esi
  44f785:	and    ecx,DWORD PTR [esp+0x24]
  44f789:	mov    DWORD PTR [esp+0x28],ecx
  44f78d:	mov    ecx,DWORD PTR [esp+0x20]
  44f791:	xor    ecx,DWORD PTR [esp+0x28]
  44f795:	lea    esi,[eax+0xf]
  44f798:	mov    DWORD PTR [esp+esi*4+0x3c],ecx
  44f79c:	mov    ecx,DWORD PTR [esp+0x28]
  44f7a0:	or     ecx,ebx
  44f7a2:	mov    DWORD PTR [esp+0x30],ecx
  44f7a6:	lea    ecx,[eax+0xc]
  44f7a9:	mov    ecx,DWORD PTR [esp+ecx*4+0x3c]
  44f7ad:	or     ecx,DWORD PTR [esp+0x20]
  44f7b1:	mov    DWORD PTR [esp+0x34],ecx
  44f7b5:	mov    ecx,DWORD PTR [esp+0x30]
  44f7b9:	and    ecx,DWORD PTR [esp+0x34]
  44f7bd:	mov    DWORD PTR [esp+0x38],ecx
  44f7c1:	xor    edx,DWORD PTR [esp+0x38]
  44f7c5:	lea    ecx,[eax+0xe]
  44f7c8:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44f7cc:	mov    edx,DWORD PTR [esp+0x10]
  44f7d0:	or     edx,ebx
  44f7d2:	lea    ecx,[eax+0xf]
  44f7d5:	mov    ecx,DWORD PTR [esp+ecx*4+0x3c]
  44f7d9:	xor    ecx,DWORD PTR [esp+0x14]
  44f7dd:	lea    ebx,[eax+0xe]
  44f7e0:	xor    edx,DWORD PTR [esp+ebx*4+0x3c]
  44f7e4:	xor    ecx,edx
  44f7e6:	lea    edx,[eax+0xd]
  44f7e9:	mov    DWORD PTR [esp+edx*4+0x3c],ecx
  44f7ed:	lea    edx,[eax+0x8]
  44f7f0:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44f7f4:	lea    ebx,[eax+0x8]
  44f7f7:	mov    ecx,DWORD PTR [esp+ebx*4+0x60]
  44f7fb:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44f7ff:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44f803:	mov    edi,ebx
  44f805:	xor    edi,edx
  44f807:	mov    DWORD PTR [esp+0x10],edi
  44f80b:	mov    edi,ebx
  44f80d:	xor    edi,ecx
  44f80f:	mov    DWORD PTR [esp+0x14],edi
  44f813:	mov    edi,ecx
  44f815:	and    edi,edx
  44f817:	mov    DWORD PTR [esp+0x18],edi
  44f81b:	mov    edi,esi
  44f81d:	not    edi
  44f81f:	mov    DWORD PTR [esp+0x1c],edi
  44f823:	mov    edi,DWORD PTR [esp+0x14]
  44f827:	xor    edi,DWORD PTR [esp+0x18]
  44f82b:	mov    DWORD PTR [esp+0x20],edi
  44f82f:	mov    edi,DWORD PTR [esp+0x1c]
  44f833:	xor    edi,DWORD PTR [esp+0x20]
  44f837:	lea    ebp,[eax+0x12]
  44f83a:	mov    DWORD PTR [esp+ebp*4+0x3c],edi
  44f83e:	xor    edx,DWORD PTR [esp+0x14]
  44f842:	mov    DWORD PTR [esp+0x28],edx
  44f846:	or     ecx,DWORD PTR [esp+0x1c]
  44f84a:	mov    DWORD PTR [esp+0x2c],ecx
  44f84e:	lea    edx,[eax+0x12]
  44f851:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f855:	or     edx,ebx
  44f857:	mov    DWORD PTR [esp+0x30],edx
  44f85b:	mov    edx,DWORD PTR [esp+0x28]
  44f85f:	and    edx,DWORD PTR [esp+0x30]
  44f863:	mov    DWORD PTR [esp+0x34],edx
  44f867:	mov    edx,DWORD PTR [esp+0x2c]
  44f86b:	xor    edx,DWORD PTR [esp+0x34]
  44f86f:	lea    ecx,[eax+0x11]
  44f872:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44f876:	xor    esi,ebx
  44f878:	mov    edx,DWORD PTR [esp+0x10]
  44f87c:	or     edx,DWORD PTR [esp+0x14]
  44f880:	lea    ecx,[eax+0x11]
  44f883:	mov    ecx,DWORD PTR [esp+ecx*4+0x3c]
  44f887:	xor    ecx,esi
  44f889:	xor    edx,ecx
  44f88b:	lea    ebx,[eax+0x13]
  44f88e:	mov    DWORD PTR [esp+ebx*4+0x3c],edx
  44f892:	lea    edx,[eax+0x12]
  44f895:	mov    ebx,DWORD PTR [esp+edx*4+0x3c]
  44f899:	or     ebx,DWORD PTR [esp+0x10]
  44f89d:	mov    edx,DWORD PTR [esp+0x2c]
  44f8a1:	xor    edx,ecx
  44f8a3:	xor    ebx,edx
  44f8a5:	lea    edx,[eax+0x10]
  44f8a8:	mov    DWORD PTR [esp+edx*4+0x3c],ebx
  44f8ac:	lea    edx,[eax+0xc]
  44f8af:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44f8b3:	lea    ebx,[eax+0xc]
  44f8b6:	mov    ecx,DWORD PTR [esp+ebx*4+0x60]
  44f8ba:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44f8be:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44f8c2:	mov    edi,ebx
  44f8c4:	xor    edi,ecx
  44f8c6:	mov    DWORD PTR [esp+0x10],edi
  44f8ca:	mov    edi,DWORD PTR [esp+0x10]
  44f8ce:	not    edi
  44f8d0:	mov    DWORD PTR [esp+0x14],edi
  44f8d4:	or     ebx,edx
  44f8d6:	mov    DWORD PTR [esp+0x18],ebx
  44f8da:	mov    ebx,esi
  44f8dc:	xor    ebx,ecx
  44f8de:	mov    DWORD PTR [esp+0x1c],ebx
  44f8e2:	mov    ebx,DWORD PTR [esp+0x18]
  44f8e6:	xor    ebx,DWORD PTR [esp+0x1c]
  44f8ea:	lea    edi,[eax+0x17]
  44f8ed:	mov    DWORD PTR [esp+edi*4+0x3c],ebx
  44f8f1:	mov    ebx,ecx
  44f8f3:	xor    ebx,edx
  44f8f5:	mov    DWORD PTR [esp+0x24],ebx
  44f8f9:	mov    ebx,DWORD PTR [esp+0x1c]
  44f8fd:	or     ebx,edx
  44f8ff:	mov    DWORD PTR [esp+0x28],ebx
  44f903:	and    esi,DWORD PTR [esp+0x24]
  44f907:	mov    DWORD PTR [esp+0x2c],esi
  44f90b:	mov    ebx,DWORD PTR [esp+0x14]
  44f90f:	or     ebx,DWORD PTR [esp+0x2c]
  44f913:	mov    DWORD PTR [esp+0x30],ebx
  44f917:	mov    ebx,DWORD PTR [esp+0x28]
  44f91b:	xor    ebx,DWORD PTR [esp+0x30]
  44f91f:	lea    esi,[eax+0x14]
  44f922:	mov    DWORD PTR [esp+esi*4+0x3c],ebx
  44f926:	lea    ebx,[eax+0x17]
  44f929:	xor    edx,DWORD PTR [esp+ebx*4+0x3c]
  44f92d:	mov    DWORD PTR [esp+0x38],edx
  44f931:	mov    esi,DWORD PTR [esp+0x10]
  44f935:	and    esi,DWORD PTR [esp+0x24]
  44f939:	lea    edx,[eax+0x14]
  44f93c:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f940:	xor    edx,DWORD PTR [esp+0x38]
  44f944:	xor    esi,edx
  44f946:	lea    edx,[eax+0x15]
  44f949:	mov    DWORD PTR [esp+edx*4+0x3c],esi
  44f94d:	lea    edx,[eax+0x14]
  44f950:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f954:	lea    ebx,[eax+0x15]
  44f957:	or     edx,DWORD PTR [esp+ebx*4+0x3c]
  44f95b:	mov    ebx,DWORD PTR [esp+0x18]
  44f95f:	and    ebx,edx
  44f961:	xor    ecx,ebx
  44f963:	lea    edx,[eax+0x16]
  44f966:	mov    DWORD PTR [esp+edx*4+0x3c],ecx
  44f96a:	lea    edx,[eax+0x10]
  44f96d:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44f971:	lea    ebx,[eax+0x10]
  44f974:	mov    ecx,DWORD PTR [esp+ebx*4+0x60]
  44f978:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44f97c:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44f980:	mov    edi,esi
  44f982:	not    edi
  44f984:	mov    DWORD PTR [esp+0x10],edi
  44f988:	xor    esi,ecx
  44f98a:	mov    DWORD PTR [esp+0x14],esi
  44f98e:	mov    esi,DWORD PTR [esp+0x10]
  44f992:	or     esi,ecx
  44f994:	mov    DWORD PTR [esp+0x18],esi
  44f998:	mov    esi,DWORD PTR [esp+0x18]
  44f99c:	xor    esi,ebx
  44f99e:	mov    DWORD PTR [esp+0x1c],esi
  44f9a2:	mov    esi,DWORD PTR [esp+0x1c]
  44f9a6:	and    esi,edx
  44f9a8:	mov    DWORD PTR [esp+0x20],esi
  44f9ac:	mov    esi,DWORD PTR [esp+0x14]
  44f9b0:	xor    esi,DWORD PTR [esp+0x20]
  44f9b4:	lea    edi,[eax+0x1b]
  44f9b7:	mov    DWORD PTR [esp+edi*4+0x3c],esi
  44f9bb:	xor    edx,ebx
  44f9bd:	mov    DWORD PTR [esp+0x28],edx
  44f9c1:	xor    ecx,DWORD PTR [esp+0x20]
  44f9c5:	mov    DWORD PTR [esp+0x2c],ecx
  44f9c9:	mov    edx,DWORD PTR [esp+0x14]
  44f9cd:	or     edx,DWORD PTR [esp+0x2c]
  44f9d1:	mov    DWORD PTR [esp+0x30],edx
  44f9d5:	mov    edx,DWORD PTR [esp+0x28]
  44f9d9:	xor    edx,DWORD PTR [esp+0x30]
  44f9dd:	lea    ecx,[eax+0x19]
  44f9e0:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44f9e4:	and    ebx,DWORD PTR [esp+0x18]
  44f9e8:	mov    DWORD PTR [esp+0x38],ebx
  44f9ec:	lea    edx,[eax+0x19]
  44f9ef:	mov    esi,DWORD PTR [esp+edx*4+0x3c]
  44f9f3:	xor    esi,DWORD PTR [esp+0x20]
  44f9f7:	lea    edx,[eax+0x1b]
  44f9fa:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44f9fe:	and    edx,esi
  44fa00:	xor    edx,DWORD PTR [esp+0x38]
  44fa04:	lea    ecx,[eax+0x1a]
  44fa07:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44fa0b:	mov    edx,DWORD PTR [esp+0x10]
  44fa0f:	or     edx,DWORD PTR [esp+0x1c]
  44fa13:	lea    ecx,[eax+0x1a]
  44fa16:	mov    ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fa1a:	xor    ebx,esi
  44fa1c:	xor    edx,ebx
  44fa1e:	lea    ecx,[eax+0x18]
  44fa21:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44fa25:	lea    edx,[eax+0x14]
  44fa28:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44fa2c:	lea    ecx,[eax+0x14]
  44fa2f:	mov    ecx,DWORD PTR [esp+ecx*4+0x60]
  44fa33:	lea    ebx,[eax+0x14]
  44fa36:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44fa3a:	lea    ebx,[eax+0x14]
  44fa3d:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44fa41:	mov    edi,esi
  44fa43:	xor    edi,edx
  44fa45:	mov    DWORD PTR [esp+0x10],edi
  44fa49:	mov    edi,ebx
  44fa4b:	or     edi,ecx
  44fa4d:	mov    DWORD PTR [esp+0x14],edi
  44fa51:	mov    edi,esi
  44fa53:	xor    edi,ecx
  44fa55:	mov    DWORD PTR [esp+0x18],edi
  44fa59:	mov    edi,DWORD PTR [esp+0x18]
  44fa5d:	not    edi
  44fa5f:	mov    DWORD PTR [esp+0x1c],edi
  44fa63:	and    edx,ebx
  44fa65:	mov    DWORD PTR [esp+0x20],edx
  44fa69:	mov    edx,DWORD PTR [esp+0x1c]
  44fa6d:	xor    edx,DWORD PTR [esp+0x20]
  44fa71:	lea    edi,[eax+0x1d]
  44fa74:	mov    DWORD PTR [esp+edi*4+0x3c],edx
  44fa78:	or     ecx,esi
  44fa7a:	mov    DWORD PTR [esp+0x28],ecx
  44fa7e:	xor    ebx,DWORD PTR [esp+0x10]
  44fa82:	mov    DWORD PTR [esp+0x2c],ebx
  44fa86:	mov    edx,DWORD PTR [esp+0x28]
  44fa8a:	and    edx,DWORD PTR [esp+0x2c]
  44fa8e:	mov    DWORD PTR [esp+0x30],edx
  44fa92:	mov    edx,DWORD PTR [esp+0x14]
  44fa96:	xor    edx,DWORD PTR [esp+0x30]
  44fa9a:	lea    ecx,[eax+0x1f]
  44fa9d:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44faa1:	mov    edx,DWORD PTR [esp+0x10]
  44faa5:	and    edx,DWORD PTR [esp+0x28]
  44faa9:	mov    DWORD PTR [esp+0x38],edx
  44faad:	mov    esi,DWORD PTR [esp+0x1c]
  44fab1:	xor    esi,DWORD PTR [esp+0x2c]
  44fab5:	lea    edx,[eax+0x1f]
  44fab8:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44fabc:	and    edx,DWORD PTR [esp+0x38]
  44fac0:	xor    edx,esi
  44fac2:	lea    ecx,[eax+0x1c]
  44fac5:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44fac9:	mov    edx,DWORD PTR [esp+0x18]
  44facd:	xor    edx,DWORD PTR [esp+0x38]
  44fad1:	lea    ecx,[eax+0x1f]
  44fad4:	mov    ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fad8:	or     ebx,edx
  44fada:	xor    esi,ebx
  44fadc:	lea    edx,[eax+0x1e]
  44fadf:	mov    DWORD PTR [esp+edx*4+0x3c],esi
  44fae3:	lea    edx,[eax+0x18]
  44fae6:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44faea:	lea    ecx,[eax+0x18]
  44faed:	mov    ecx,DWORD PTR [esp+ecx*4+0x60]
  44faf1:	lea    ebx,[eax+0x18]
  44faf4:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44faf8:	lea    ebx,[eax+0x18]
  44fafb:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44faff:	mov    edi,edx
  44fb01:	not    edi
  44fb03:	mov    DWORD PTR [esp+0x10],edi
  44fb07:	mov    edi,ecx
  44fb09:	xor    edi,edx
  44fb0b:	mov    DWORD PTR [esp+0x14],edi
  44fb0f:	xor    edx,ebx
  44fb11:	mov    DWORD PTR [esp+0x18],edx
  44fb15:	mov    edx,DWORD PTR [esp+0x10]
  44fb19:	xor    edx,esi
  44fb1b:	mov    DWORD PTR [esp+0x1c],edx
  44fb1f:	mov    edx,DWORD PTR [esp+0x14]
  44fb23:	or     edx,DWORD PTR [esp+0x18]
  44fb27:	mov    DWORD PTR [esp+0x20],edx
  44fb2b:	mov    edx,DWORD PTR [esp+0x1c]
  44fb2f:	xor    edx,DWORD PTR [esp+0x20]
  44fb33:	lea    edi,[eax+0x20]
  44fb36:	mov    DWORD PTR [esp+edi*4+0x3c],edx
  44fb3a:	mov    edx,ebx
  44fb3c:	not    edx
  44fb3e:	mov    DWORD PTR [esp+0x28],edx
  44fb42:	lea    edx,[eax+0x20]
  44fb45:	mov    edx,DWORD PTR [esp+edx*4+0x3c]
  44fb49:	and    edx,DWORD PTR [esp+0x28]
  44fb4d:	mov    DWORD PTR [esp+0x2c],edx
  44fb51:	mov    edx,DWORD PTR [esp+0x14]
  44fb55:	xor    edx,DWORD PTR [esp+0x2c]
  44fb59:	lea    edi,[eax+0x21]
  44fb5c:	mov    DWORD PTR [esp+edi*4+0x3c],edx
  44fb60:	lea    edx,[eax+0x21]
  44fb63:	or     ecx,DWORD PTR [esp+edx*4+0x3c]
  44fb67:	mov    DWORD PTR [esp+0x34],ecx
  44fb6b:	lea    edx,[eax+0x20]
  44fb6e:	or     esi,DWORD PTR [esp+edx*4+0x3c]
  44fb72:	mov    DWORD PTR [esp+0x38],esi
  44fb76:	mov    esi,DWORD PTR [esp+0x28]
  44fb7a:	xor    esi,DWORD PTR [esp+0x34]
  44fb7e:	xor    esi,DWORD PTR [esp+0x38]
  44fb82:	lea    edx,[eax+0x23]
  44fb85:	mov    DWORD PTR [esp+edx*4+0x3c],esi
  44fb89:	lea    edx,[eax+0x21]
  44fb8c:	mov    ecx,DWORD PTR [esp+edx*4+0x3c]
  44fb90:	or     ecx,ebx
  44fb92:	mov    edx,DWORD PTR [esp+0x10]
  44fb96:	xor    edx,ecx
  44fb98:	lea    ecx,[eax+0x20]
  44fb9b:	mov    ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fb9f:	lea    ecx,[eax+0x23]
  44fba2:	or     ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fba6:	xor    edx,ebx
  44fba8:	lea    ecx,[eax+0x22]
  44fbab:	mov    DWORD PTR [esp+ecx*4+0x3c],edx
  44fbaf:	lea    edx,[eax+0x1c]
  44fbb2:	mov    edx,DWORD PTR [esp+edx*4+0x5c]
  44fbb6:	lea    ecx,[eax+0x1c]
  44fbb9:	mov    ecx,DWORD PTR [esp+ecx*4+0x60]
  44fbbd:	lea    ebx,[eax+0x1c]
  44fbc0:	mov    esi,DWORD PTR [esp+ebx*4+0x64]
  44fbc4:	lea    ebx,[eax+0x1c]
  44fbc7:	mov    ebx,DWORD PTR [esp+ebx*4+0x68]
  44fbcb:	mov    edi,edx
  44fbcd:	not    edi
  44fbcf:	mov    DWORD PTR [esp+0x10],edi
  44fbd3:	xor    ebx,edx
  44fbd5:	mov    DWORD PTR [esp+0x14],ebx
  44fbd9:	mov    ebx,ecx
  44fbdb:	xor    ebx,edx
  44fbdd:	mov    DWORD PTR [esp+0x18],ebx
  44fbe1:	xor    esi,DWORD PTR [esp+0x10]
  44fbe5:	mov    DWORD PTR [esp+0x1c],esi
  44fbe9:	mov    ebx,DWORD PTR [esp+0x14]
  44fbed:	or     ebx,DWORD PTR [esp+0x18]
  44fbf1:	mov    DWORD PTR [esp+0x20],ebx
  44fbf5:	mov    ebx,DWORD PTR [esp+0x1c]
  44fbf9:	xor    ebx,DWORD PTR [esp+0x20]
  44fbfd:	lea    esi,[eax+0x24]
  44fc00:	mov    DWORD PTR [esp+esi*4+0x3c],ebx
  44fc04:	lea    ebx,[eax+0x24]
  44fc07:	mov    ebx,DWORD PTR [esp+ebx*4+0x3c]
  44fc0b:	not    ebx
  44fc0d:	mov    DWORD PTR [esp+0x28],ebx
  44fc11:	mov    ebx,DWORD PTR [esp+0x28]
  44fc15:	or     ebx,ecx
  44fc17:	mov    DWORD PTR [esp+0x2c],ebx
  44fc1b:	mov    ebx,DWORD PTR [esp+0x14]
  44fc1f:	xor    ebx,DWORD PTR [esp+0x2c]
  44fc23:	lea    esi,[eax+0x27]
  44fc26:	mov    DWORD PTR [esp+esi*4+0x3c],ebx
  44fc2a:	lea    ebx,[eax+0x24]
  44fc2d:	mov    ebx,DWORD PTR [esp+ebx*4+0x3c]
  44fc31:	and    ebx,edx
  44fc33:	mov    DWORD PTR [esp+0x34],ebx
  44fc37:	lea    ebx,[eax+0x27]
  44fc3a:	xor    ecx,DWORD PTR [esp+ebx*4+0x3c]
  44fc3e:	mov    DWORD PTR [esp+0x38],ecx
  44fc42:	mov    esi,DWORD PTR [esp+0x2c]
  44fc46:	and    esi,DWORD PTR [esp+0x38]
  44fc4a:	xor    esi,DWORD PTR [esp+0x34]
  44fc4e:	lea    ecx,[eax+0x26]
  44fc51:	mov    DWORD PTR [esp+ecx*4+0x3c],esi
  44fc55:	mov    ecx,DWORD PTR [esp+0x28]
  44fc59:	or     ecx,edx
  44fc5b:	mov    edx,DWORD PTR [esp+0x18]
  44fc5f:	xor    edx,ecx
  44fc61:	lea    ecx,[eax+0x27]
  44fc64:	mov    ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fc68:	lea    ecx,[eax+0x26]
  44fc6b:	and    ebx,DWORD PTR [esp+ecx*4+0x3c]
  44fc6f:	xor    edx,ebx
  44fc71:	add    eax,0x25
  44fc74:	mov    DWORD PTR [esp+eax*4+0x3c],edx
  44fc78:	inc    DWORD PTR [esp+0xc]
  44fc7c:	cmp    DWORD PTR [esp+0xc],0x4
  44fc81:	jne    0x44f671
  44fc87:	mov    edx,DWORD PTR [esp+0x25c]
  44fc8e:	mov    ecx,DWORD PTR [esp+0x260]
  44fc95:	mov    esi,DWORD PTR [esp+0x264]
  44fc9c:	mov    ebx,DWORD PTR [esp+0x268]
  44fca3:	mov    eax,esi
  44fca5:	xor    eax,edx
  44fca7:	mov    DWORD PTR [esp+0x10],eax
  44fcab:	mov    eax,ebx
  44fcad:	or     eax,edx
  44fcaf:	mov    DWORD PTR [esp+0x14],eax
  44fcb3:	mov    eax,ecx
  44fcb5:	and    eax,edx
  44fcb7:	mov    DWORD PTR [esp+0x18],eax
  44fcbb:	and    edx,ebx
  44fcbd:	mov    DWORD PTR [esp+0x1c],edx
  44fcc1:	mov    eax,DWORD PTR [esp+0x1c]
  44fcc5:	or     eax,ecx
  44fcc7:	mov    DWORD PTR [esp+0x20],eax
  44fccb:	mov    eax,DWORD PTR [esp+0x10]
  44fccf:	and    eax,DWORD PTR [esp+0x14]
  44fcd3:	mov    DWORD PTR [esp+0x24],eax
  44fcd7:	mov    eax,DWORD PTR [esp+0x20]
  44fcdb:	xor    eax,DWORD PTR [esp+0x24]
  44fcdf:	mov    DWORD PTR [esp+0x260],eax
  44fce6:	xor    ecx,ebx
  44fce8:	mov    DWORD PTR [esp+0x2c],ecx
  44fcec:	mov    eax,DWORD PTR [esp+0x18]
  44fcf0:	or     eax,esi
  44fcf2:	mov    DWORD PTR [esp+0x30],eax
  44fcf6:	mov    eax,DWORD PTR [esp+0x24]
  44fcfa:	xor    eax,DWORD PTR [esp+0x2c]
  44fcfe:	mov    DWORD PTR [esp+0x34],eax
  44fd02:	mov    eax,DWORD PTR [esp+0x30]
  44fd06:	xor    eax,DWORD PTR [esp+0x34]
  44fd0a:	mov    DWORD PTR [esp+0x268],eax
  44fd11:	xor    esi,DWORD PTR [esp+0x18]
  44fd15:	mov    edx,DWORD PTR [esp+0x14]
  44fd19:	and    edx,DWORD PTR [esp+0x268]
  44fd20:	xor    esi,edx
  44fd22:	mov    DWORD PTR [esp+0x264],esi
  44fd29:	mov    edx,DWORD PTR [esp+0x264]
  44fd30:	not    edx
  44fd32:	mov    ebx,DWORD PTR [esp+0x14]
  44fd36:	xor    ebx,DWORD PTR [esp+0x18]
  44fd3a:	and    edx,DWORD PTR [esp+0x260]
  44fd41:	xor    ebx,edx
  44fd43:	mov    DWORD PTR [esp+0x25c],ebx
  44fd4a:	mov    eax,DWORD PTR [esp]
  44fd4d:	lea    edx,[eax+0x58]
  44fd50:	lea    eax,[esp+0x5c]
  44fd54:	mov    ecx,0x210
  44fd59:	call   0x403090
  44fd5e:	lea    eax,[esp+0x3c]
  44fd62:	xor    ecx,ecx
  44fd64:	mov    edx,0x230
  44fd69:	call   0x4037c8
  44fd6e:	add    esp,0x26c
  44fd74:	pop    ebp
  44fd75:	pop    edi
  44fd76:	pop    esi
  44fd77:	pop    ebx
  44fd78:	ret    
  44fd79:	lea    eax,[eax+0x0]
  44fd7c:	push   ebx
  44fd7d:	mov    ebx,eax
  44fd7f:	lea    eax,[ebx+0x58]
  44fd82:	xor    ecx,ecx
  44fd84:	mov    edx,0x210
  44fd89:	call   0x4037c8
  44fd8e:	mov    eax,ebx
  44fd90:	call   0x4431f4
  44fd95:	pop    ebx
  44fd96:	ret    
  44fd97:	nop
  44fd98:	push   ebx
  44fd99:	push   esi
  44fd9a:	add    esp,0xffffffa0
  44fd9d:	mov    DWORD PTR [esp+0x8],ecx
  44fda1:	mov    DWORD PTR [esp+0x4],edx
  44fda5:	mov    DWORD PTR [esp],eax
  44fda8:	mov    eax,DWORD PTR [esp]
  44fdab:	cmp    BYTE PTR [eax+0x30],0x0
  44fdaf:	jne    0x44fdc7
  44fdb1:	mov    ecx,0x450a50
  44fdb6:	mov    dl,0x1
  44fdb8:	mov    eax,ds:0x441af8
  44fdbd:	call   0x40c8b4
  44fdc2:	call   0x4048fc
  44fdc7:	mov    eax,DWORD PTR [esp+0x4]
  44fdcb:	mov    ecx,DWORD PTR [eax]
  44fdcd:	mov    eax,DWORD PTR [esp+0x4]
  44fdd1:	add    eax,0x4
  44fdd4:	mov    eax,DWORD PTR [eax]
  44fdd6:	mov    DWORD PTR [esp+0x10],eax
  44fdda:	mov    eax,DWORD PTR [esp+0x4]
  44fdde:	add    eax,0x8
  44fde1:	mov    esi,DWORD PTR [eax]
  44fde3:	mov    eax,DWORD PTR [esp+0x4]
  44fde7:	add    eax,0xc
  44fdea:	mov    eax,DWORD PTR [eax]
  44fdec:	mov    DWORD PTR [esp+0x14],eax
  44fdf0:	xor    eax,eax
  44fdf2:	mov    DWORD PTR [esp+0xc],eax
  44fdf6:	cmp    DWORD PTR [esp+0xc],0x20
  44fdfb:	jge    0x4509ea
  44fe01:	mov    eax,DWORD PTR [esp+0xc]
  44fe05:	add    eax,eax
  44fe07:	add    eax,eax
  44fe09:	mov    edx,DWORD PTR [esp]
  44fe0c:	xor    ecx,DWORD PTR [edx+eax*4+0x58]
  44fe10:	mov    eax,DWORD PTR [esp+0xc]
  44fe14:	add    eax,eax
  44fe16:	add    eax,eax
  44fe18:	mov    edx,DWORD PTR [esp]
  44fe1b:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  44fe1f:	xor    DWORD PTR [esp+0x10],eax
  44fe23:	mov    eax,DWORD PTR [esp+0xc]
  44fe27:	add    eax,eax
  44fe29:	add    eax,eax
  44fe2b:	mov    edx,DWORD PTR [esp]
  44fe2e:	xor    esi,DWORD PTR [edx+eax*4+0x60]
  44fe32:	mov    eax,DWORD PTR [esp+0xc]
  44fe36:	add    eax,eax
  44fe38:	add    eax,eax
  44fe3a:	mov    edx,DWORD PTR [esp]
  44fe3d:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  44fe41:	xor    DWORD PTR [esp+0x14],eax
  44fe45:	mov    eax,DWORD PTR [esp+0x10]
  44fe49:	xor    eax,DWORD PTR [esp+0x14]
  44fe4d:	mov    DWORD PTR [esp+0x1c],eax
  44fe51:	mov    eax,DWORD PTR [esp+0x1c]
  44fe55:	not    eax
  44fe57:	mov    DWORD PTR [esp+0x20],eax
  44fe5b:	mov    eax,DWORD PTR [esp+0x14]
  44fe5f:	or     eax,ecx
  44fe61:	mov    DWORD PTR [esp+0x24],eax
  44fe65:	mov    eax,DWORD PTR [esp+0x10]
  44fe69:	xor    eax,esi
  44fe6b:	mov    DWORD PTR [esp+0x28],eax
  44fe6f:	mov    eax,DWORD PTR [esp+0x24]
  44fe73:	xor    eax,DWORD PTR [esp+0x28]
  44fe77:	mov    edx,DWORD PTR [esp+0x10]
  44fe7b:	xor    edx,ecx
  44fe7d:	mov    DWORD PTR [esp+0x30],edx
  44fe81:	mov    edx,DWORD PTR [esp+0x28]
  44fe85:	or     edx,ecx
  44fe87:	mov    DWORD PTR [esp+0x34],edx
  44fe8b:	and    esi,DWORD PTR [esp+0x30]
  44fe8f:	mov    DWORD PTR [esp+0x38],esi
  44fe93:	mov    edx,DWORD PTR [esp+0x20]
  44fe97:	or     edx,DWORD PTR [esp+0x38]
  44fe9b:	mov    DWORD PTR [esp+0x3c],edx
  44fe9f:	mov    edx,DWORD PTR [esp+0x34]
  44fea3:	xor    edx,DWORD PTR [esp+0x3c]
  44fea7:	xor    ecx,eax
  44fea9:	mov    DWORD PTR [esp+0x44],ecx
  44fead:	mov    ecx,DWORD PTR [esp+0x1c]
  44feb1:	and    ecx,DWORD PTR [esp+0x30]
  44feb5:	mov    DWORD PTR [esp+0x48],ecx
  44feb9:	mov    ecx,DWORD PTR [esp+0x44]
  44febd:	xor    ecx,edx
  44febf:	mov    DWORD PTR [esp+0x4c],ecx
  44fec3:	mov    ecx,DWORD PTR [esp+0x48]
  44fec7:	xor    ecx,DWORD PTR [esp+0x4c]
  44fecb:	mov    DWORD PTR [esp+0x18],ecx
  44fecf:	mov    ecx,DWORD PTR [esp+0x18]
  44fed3:	or     ecx,edx
  44fed5:	mov    DWORD PTR [esp+0x54],ecx
  44fed9:	mov    ecx,DWORD PTR [esp+0x24]
  44fedd:	and    ecx,DWORD PTR [esp+0x54]
  44fee1:	mov    DWORD PTR [esp+0x58],ecx
  44fee5:	mov    ebx,DWORD PTR [esp+0x10]
  44fee9:	xor    ebx,DWORD PTR [esp+0x58]
  44feed:	mov    ecx,edx
  44feef:	shl    ecx,0xd
  44fef2:	shr    edx,0x13
  44fef5:	or     ecx,edx
  44fef7:	mov    edx,ecx
  44fef9:	mov    ecx,ebx
  44fefb:	add    ecx,ecx
  44fefd:	add    ecx,ecx
  44feff:	add    ecx,ecx
  44ff01:	shr    ebx,0x1d
  44ff04:	or     ecx,ebx
  44ff06:	mov    ebx,ecx
  44ff08:	mov    ecx,DWORD PTR [esp+0x18]
  44ff0c:	xor    ecx,edx
  44ff0e:	xor    ecx,ebx
  44ff10:	mov    DWORD PTR [esp+0x18],ecx
  44ff14:	xor    eax,ebx
  44ff16:	mov    ecx,edx
  44ff18:	add    ecx,ecx
  44ff1a:	add    ecx,ecx
  44ff1c:	add    ecx,ecx
  44ff1e:	xor    eax,ecx
  44ff20:	mov    ecx,DWORD PTR [esp+0x18]
  44ff24:	add    ecx,ecx
  44ff26:	mov    esi,DWORD PTR [esp+0x18]
  44ff2a:	shr    esi,0x1f
  44ff2d:	or     ecx,esi
  44ff2f:	mov    DWORD PTR [esp+0x18],ecx
  44ff33:	mov    ecx,eax
  44ff35:	shl    ecx,0x7
  44ff38:	shr    eax,0x19
  44ff3b:	or     ecx,eax
  44ff3d:	mov    eax,ecx
  44ff3f:	xor    edx,DWORD PTR [esp+0x18]
  44ff43:	xor    edx,eax
  44ff45:	xor    ebx,eax
  44ff47:	mov    ecx,DWORD PTR [esp+0x18]
  44ff4b:	shl    ecx,0x7
  44ff4e:	xor    ebx,ecx
  44ff50:	mov    ecx,edx
  44ff52:	shl    ecx,0x5
  44ff55:	shr    edx,0x1b
  44ff58:	or     ecx,edx
  44ff5a:	mov    edx,ecx
  44ff5c:	mov    ecx,ebx
  44ff5e:	shl    ecx,0x16
  44ff61:	shr    ebx,0xa
  44ff64:	or     ecx,ebx
  44ff66:	mov    ebx,ecx
  44ff68:	mov    ecx,DWORD PTR [esp+0xc]
  44ff6c:	inc    ecx
  44ff6d:	add    ecx,ecx
  44ff6f:	add    ecx,ecx
  44ff71:	mov    esi,DWORD PTR [esp]
  44ff74:	xor    edx,DWORD PTR [esi+ecx*4+0x58]
  44ff78:	mov    ecx,DWORD PTR [esp+0xc]
  44ff7c:	inc    ecx
  44ff7d:	add    ecx,ecx
  44ff7f:	add    ecx,ecx
  44ff81:	mov    esi,DWORD PTR [esp]
  44ff84:	mov    ecx,DWORD PTR [esi+ecx*4+0x5c]
  44ff88:	xor    DWORD PTR [esp+0x18],ecx
  44ff8c:	mov    ecx,DWORD PTR [esp+0xc]
  44ff90:	inc    ecx
  44ff91:	add    ecx,ecx
  44ff93:	add    ecx,ecx
  44ff95:	mov    esi,DWORD PTR [esp]
  44ff98:	xor    ebx,DWORD PTR [esi+ecx*4+0x60]
  44ff9c:	mov    ecx,DWORD PTR [esp+0xc]
  44ffa0:	inc    ecx
  44ffa1:	add    ecx,ecx
  44ffa3:	add    ecx,ecx
  44ffa5:	mov    esi,DWORD PTR [esp]
  44ffa8:	xor    eax,DWORD PTR [esi+ecx*4+0x64]
  44ffac:	mov    ecx,eax
  44ffae:	xor    ecx,edx
  44ffb0:	mov    DWORD PTR [esp+0x1c],ecx
  44ffb4:	mov    ecx,DWORD PTR [esp+0x18]
  44ffb8:	xor    ecx,eax
  44ffba:	mov    DWORD PTR [esp+0x20],ecx
  44ffbe:	mov    ecx,DWORD PTR [esp+0x18]
  44ffc2:	and    ecx,edx
  44ffc4:	mov    DWORD PTR [esp+0x24],ecx
  44ffc8:	mov    ecx,ebx
  44ffca:	not    ecx
  44ffcc:	mov    DWORD PTR [esp+0x28],ecx
  44ffd0:	mov    ecx,DWORD PTR [esp+0x20]
  44ffd4:	xor    ecx,DWORD PTR [esp+0x24]
  44ffd8:	mov    DWORD PTR [esp+0x2c],ecx
  44ffdc:	mov    esi,DWORD PTR [esp+0x28]
  44ffe0:	xor    esi,DWORD PTR [esp+0x2c]
  44ffe4:	xor    edx,DWORD PTR [esp+0x20]
  44ffe8:	mov    DWORD PTR [esp+0x34],edx
  44ffec:	mov    edx,DWORD PTR [esp+0x18]
  44fff0:	or     edx,DWORD PTR [esp+0x28]
  44fff4:	mov    DWORD PTR [esp+0x38],edx
  44fff8:	mov    edx,esi
  44fffa:	or     edx,eax
  44fffc:	mov    DWORD PTR [esp+0x3c],edx
  450000:	mov    edx,DWORD PTR [esp+0x34]
  450004:	and    edx,DWORD PTR [esp+0x3c]
  450008:	mov    DWORD PTR [esp+0x40],edx
  45000c:	mov    edx,DWORD PTR [esp+0x38]
  450010:	xor    edx,DWORD PTR [esp+0x40]
  450014:	mov    DWORD PTR [esp+0x10],edx
  450018:	xor    ebx,eax
  45001a:	mov    DWORD PTR [esp+0x48],ebx
  45001e:	mov    eax,DWORD PTR [esp+0x1c]
  450022:	or     eax,DWORD PTR [esp+0x20]
  450026:	mov    DWORD PTR [esp+0x4c],eax
  45002a:	mov    eax,DWORD PTR [esp+0x10]
  45002e:	xor    eax,DWORD PTR [esp+0x48]
  450032:	mov    DWORD PTR [esp+0x50],eax
  450036:	mov    eax,DWORD PTR [esp+0x4c]
  45003a:	xor    eax,DWORD PTR [esp+0x50]
  45003e:	mov    DWORD PTR [esp+0x14],eax
  450042:	mov    eax,DWORD PTR [esp+0x1c]
  450046:	or     eax,esi
  450048:	mov    DWORD PTR [esp+0x58],eax
  45004c:	mov    eax,DWORD PTR [esp+0x38]
  450050:	xor    eax,DWORD PTR [esp+0x50]
  450054:	mov    DWORD PTR [esp+0x5c],eax
  450058:	mov    ecx,DWORD PTR [esp+0x58]
  45005c:	xor    ecx,DWORD PTR [esp+0x5c]
  450060:	mov    eax,ecx
  450062:	shl    eax,0xd
  450065:	shr    ecx,0x13
  450068:	or     eax,ecx
  45006a:	mov    ecx,eax
  45006c:	mov    eax,esi
  45006e:	add    eax,eax
  450070:	add    eax,eax
  450072:	add    eax,eax
  450074:	shr    esi,0x1d
  450077:	or     eax,esi
  450079:	mov    esi,eax
  45007b:	mov    eax,DWORD PTR [esp+0x10]
  45007f:	xor    eax,ecx
  450081:	xor    eax,esi
  450083:	mov    DWORD PTR [esp+0x10],eax
  450087:	mov    eax,DWORD PTR [esp+0x14]
  45008b:	xor    eax,esi
  45008d:	mov    edx,ecx
  45008f:	add    edx,edx
  450091:	add    edx,edx
  450093:	add    edx,edx
  450095:	xor    eax,edx
  450097:	mov    DWORD PTR [esp+0x14],eax
  45009b:	mov    eax,DWORD PTR [esp+0x10]
  45009f:	add    eax,eax
  4500a1:	mov    edx,DWORD PTR [esp+0x10]
  4500a5:	shr    edx,0x1f
  4500a8:	or     eax,edx
  4500aa:	mov    DWORD PTR [esp+0x10],eax
  4500ae:	mov    eax,DWORD PTR [esp+0x14]
  4500b2:	shl    eax,0x7
  4500b5:	mov    edx,DWORD PTR [esp+0x14]
  4500b9:	shr    edx,0x19
  4500bc:	or     eax,edx
  4500be:	mov    DWORD PTR [esp+0x14],eax
  4500c2:	xor    ecx,DWORD PTR [esp+0x10]
  4500c6:	xor    ecx,DWORD PTR [esp+0x14]
  4500ca:	xor    esi,DWORD PTR [esp+0x14]
  4500ce:	mov    eax,DWORD PTR [esp+0x10]
  4500d2:	shl    eax,0x7
  4500d5:	xor    esi,eax
  4500d7:	mov    eax,ecx
  4500d9:	shl    eax,0x5
  4500dc:	shr    ecx,0x1b
  4500df:	or     eax,ecx
  4500e1:	mov    ecx,eax
  4500e3:	mov    eax,esi
  4500e5:	shl    eax,0x16
  4500e8:	shr    esi,0xa
  4500eb:	or     eax,esi
  4500ed:	mov    esi,eax
  4500ef:	mov    eax,DWORD PTR [esp+0xc]
  4500f3:	add    eax,0x2
  4500f6:	add    eax,eax
  4500f8:	add    eax,eax
  4500fa:	mov    edx,DWORD PTR [esp]
  4500fd:	xor    ecx,DWORD PTR [edx+eax*4+0x58]
  450101:	mov    eax,DWORD PTR [esp+0xc]
  450105:	add    eax,0x2
  450108:	add    eax,eax
  45010a:	add    eax,eax
  45010c:	mov    edx,DWORD PTR [esp]
  45010f:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  450113:	xor    DWORD PTR [esp+0x10],eax
  450117:	mov    eax,DWORD PTR [esp+0xc]
  45011b:	add    eax,0x2
  45011e:	add    eax,eax
  450120:	add    eax,eax
  450122:	mov    edx,DWORD PTR [esp]
  450125:	xor    esi,DWORD PTR [edx+eax*4+0x60]
  450129:	mov    eax,DWORD PTR [esp+0xc]
  45012d:	add    eax,0x2
  450130:	add    eax,eax
  450132:	add    eax,eax
  450134:	mov    edx,DWORD PTR [esp]
  450137:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  45013b:	xor    DWORD PTR [esp+0x14],eax
  45013f:	mov    eax,ecx
  450141:	not    eax
  450143:	mov    DWORD PTR [esp+0x1c],eax
  450147:	mov    eax,DWORD PTR [esp+0x10]
  45014b:	xor    eax,DWORD PTR [esp+0x14]
  45014f:	mov    DWORD PTR [esp+0x20],eax
  450153:	mov    eax,DWORD PTR [esp+0x1c]
  450157:	and    eax,esi
  450159:	mov    DWORD PTR [esp+0x24],eax
  45015d:	mov    edx,DWORD PTR [esp+0x20]
  450161:	xor    edx,DWORD PTR [esp+0x24]
  450165:	mov    eax,DWORD PTR [esp+0x1c]
  450169:	xor    eax,esi
  45016b:	mov    DWORD PTR [esp+0x2c],eax
  45016f:	xor    esi,edx
  450171:	mov    DWORD PTR [esp+0x30],esi
  450175:	mov    eax,DWORD PTR [esp+0x10]
  450179:	and    eax,DWORD PTR [esp+0x30]
  45017d:	mov    DWORD PTR [esp+0x34],eax
  450181:	mov    eax,DWORD PTR [esp+0x2c]
  450185:	xor    eax,DWORD PTR [esp+0x34]
  450189:	mov    ebx,DWORD PTR [esp+0x14]
  45018d:	or     ebx,DWORD PTR [esp+0x34]
  450191:	mov    DWORD PTR [esp+0x3c],ebx
  450195:	mov    ebx,DWORD PTR [esp+0x2c]
  450199:	or     ebx,edx
  45019b:	mov    DWORD PTR [esp+0x40],ebx
  45019f:	mov    ebx,DWORD PTR [esp+0x3c]
  4501a3:	and    ebx,DWORD PTR [esp+0x40]
  4501a7:	mov    DWORD PTR [esp+0x44],ebx
  4501ab:	mov    ebx,DWORD PTR [esp+0x44]
  4501af:	xor    ebx,ecx
  4501b1:	mov    ecx,DWORD PTR [esp+0x14]
  4501b5:	or     ecx,DWORD PTR [esp+0x1c]
  4501b9:	mov    DWORD PTR [esp+0x4c],ecx
  4501bd:	mov    ecx,DWORD PTR [esp+0x20]
  4501c1:	xor    ecx,eax
  4501c3:	mov    DWORD PTR [esp+0x50],ecx
  4501c7:	mov    ecx,DWORD PTR [esp+0x4c]
  4501cb:	xor    ecx,ebx
  4501cd:	mov    DWORD PTR [esp+0x54],ecx
  4501d1:	mov    ecx,DWORD PTR [esp+0x50]
  4501d5:	xor    ecx,DWORD PTR [esp+0x54]
  4501d9:	mov    DWORD PTR [esp+0x18],ecx
  4501dd:	mov    ecx,edx
  4501df:	shl    ecx,0xd
  4501e2:	shr    edx,0x13
  4501e5:	or     ecx,edx
  4501e7:	mov    edx,ecx
  4501e9:	mov    ecx,ebx
  4501eb:	add    ecx,ecx
  4501ed:	add    ecx,ecx
  4501ef:	add    ecx,ecx
  4501f1:	shr    ebx,0x1d
  4501f4:	or     ecx,ebx
  4501f6:	mov    ebx,ecx
  4501f8:	mov    ecx,DWORD PTR [esp+0x18]
  4501fc:	xor    ecx,edx
  4501fe:	xor    ecx,ebx
  450200:	mov    DWORD PTR [esp+0x18],ecx
  450204:	xor    eax,ebx
  450206:	mov    ecx,edx
  450208:	add    ecx,ecx
  45020a:	add    ecx,ecx
  45020c:	add    ecx,ecx
  45020e:	xor    eax,ecx
  450210:	mov    ecx,DWORD PTR [esp+0x18]
  450214:	add    ecx,ecx
  450216:	mov    esi,DWORD PTR [esp+0x18]
  45021a:	shr    esi,0x1f
  45021d:	or     ecx,esi
  45021f:	mov    DWORD PTR [esp+0x18],ecx
  450223:	mov    ecx,eax
  450225:	shl    ecx,0x7
  450228:	shr    eax,0x19
  45022b:	or     ecx,eax
  45022d:	mov    eax,ecx
  45022f:	xor    edx,DWORD PTR [esp+0x18]
  450233:	xor    edx,eax
  450235:	xor    ebx,eax
  450237:	mov    ecx,DWORD PTR [esp+0x18]
  45023b:	shl    ecx,0x7
  45023e:	xor    ebx,ecx
  450240:	mov    ecx,edx
  450242:	shl    ecx,0x5
  450245:	shr    edx,0x1b
  450248:	or     ecx,edx
  45024a:	mov    edx,ecx
  45024c:	mov    ecx,ebx
  45024e:	shl    ecx,0x16
  450251:	shr    ebx,0xa
  450254:	or     ecx,ebx
  450256:	mov    ebx,ecx
  450258:	mov    ecx,DWORD PTR [esp+0xc]
  45025c:	add    ecx,0x3
  45025f:	add    ecx,ecx
  450261:	add    ecx,ecx
  450263:	mov    esi,DWORD PTR [esp]
  450266:	xor    edx,DWORD PTR [esi+ecx*4+0x58]
  45026a:	mov    ecx,DWORD PTR [esp+0xc]
  45026e:	add    ecx,0x3
  450271:	add    ecx,ecx
  450273:	add    ecx,ecx
  450275:	mov    esi,DWORD PTR [esp]
  450278:	mov    ecx,DWORD PTR [esi+ecx*4+0x5c]
  45027c:	xor    DWORD PTR [esp+0x18],ecx
  450280:	mov    ecx,DWORD PTR [esp+0xc]
  450284:	add    ecx,0x3
  450287:	add    ecx,ecx
  450289:	add    ecx,ecx
  45028b:	mov    esi,DWORD PTR [esp]
  45028e:	xor    ebx,DWORD PTR [esi+ecx*4+0x60]
  450292:	mov    ecx,DWORD PTR [esp+0xc]
  450296:	add    ecx,0x3
  450299:	add    ecx,ecx
  45029b:	add    ecx,ecx
  45029d:	mov    esi,DWORD PTR [esp]
  4502a0:	xor    eax,DWORD PTR [esi+ecx*4+0x64]
  4502a4:	mov    ecx,ebx
  4502a6:	xor    ecx,edx
  4502a8:	mov    DWORD PTR [esp+0x1c],ecx
  4502ac:	mov    ecx,eax
  4502ae:	or     ecx,edx
  4502b0:	mov    DWORD PTR [esp+0x20],ecx
  4502b4:	mov    ecx,DWORD PTR [esp+0x18]
  4502b8:	and    ecx,edx
  4502ba:	mov    DWORD PTR [esp+0x24],ecx
  4502be:	and    edx,eax
  4502c0:	mov    DWORD PTR [esp+0x28],edx
  4502c4:	mov    edx,DWORD PTR [esp+0x18]
  4502c8:	or     edx,DWORD PTR [esp+0x28]
  4502cc:	mov    DWORD PTR [esp+0x2c],edx
  4502d0:	mov    edx,DWORD PTR [esp+0x1c]
  4502d4:	and    edx,DWORD PTR [esp+0x20]
  4502d8:	mov    DWORD PTR [esp+0x30],edx
  4502dc:	mov    edx,DWORD PTR [esp+0x2c]
  4502e0:	xor    edx,DWORD PTR [esp+0x30]
  4502e4:	mov    DWORD PTR [esp+0x10],edx
  4502e8:	xor    eax,DWORD PTR [esp+0x18]
  4502ec:	mov    DWORD PTR [esp+0x38],eax
  4502f0:	mov    eax,DWORD PTR [esp+0x24]
  4502f4:	or     eax,ebx
  4502f6:	mov    DWORD PTR [esp+0x3c],eax
  4502fa:	mov    eax,DWORD PTR [esp+0x30]
  4502fe:	xor    eax,DWORD PTR [esp+0x38]
  450302:	mov    DWORD PTR [esp+0x40],eax
  450306:	mov    eax,DWORD PTR [esp+0x3c]
  45030a:	xor    eax,DWORD PTR [esp+0x40]
  45030e:	mov    DWORD PTR [esp+0x14],eax
  450312:	xor    ebx,DWORD PTR [esp+0x24]
  450316:	mov    DWORD PTR [esp+0x48],ebx
  45031a:	mov    eax,DWORD PTR [esp+0x20]
  45031e:	and    eax,DWORD PTR [esp+0x14]
  450322:	mov    DWORD PTR [esp+0x4c],eax
  450326:	mov    esi,DWORD PTR [esp+0x48]
  45032a:	xor    esi,DWORD PTR [esp+0x4c]
  45032e:	mov    eax,esi
  450330:	not    eax
  450332:	mov    DWORD PTR [esp+0x54],eax
  450336:	mov    eax,DWORD PTR [esp+0x20]
  45033a:	xor    eax,DWORD PTR [esp+0x24]
  45033e:	mov    DWORD PTR [esp+0x58],eax
  450342:	mov    eax,DWORD PTR [esp+0x10]
  450346:	and    eax,DWORD PTR [esp+0x54]
  45034a:	mov    DWORD PTR [esp+0x5c],eax
  45034e:	mov    ecx,DWORD PTR [esp+0x58]
  450352:	xor    ecx,DWORD PTR [esp+0x5c]
  450356:	mov    eax,ecx
  450358:	shl    eax,0xd
  45035b:	shr    ecx,0x13
  45035e:	or     eax,ecx
  450360:	mov    ecx,eax
  450362:	mov    eax,esi
  450364:	add    eax,eax
  450366:	add    eax,eax
  450368:	add    eax,eax
  45036a:	shr    esi,0x1d
  45036d:	or     eax,esi
  45036f:	mov    esi,eax
  450371:	mov    eax,DWORD PTR [esp+0x10]
  450375:	xor    eax,ecx
  450377:	xor    eax,esi
  450379:	mov    DWORD PTR [esp+0x10],eax
  45037d:	mov    eax,DWORD PTR [esp+0x14]
  450381:	xor    eax,esi
  450383:	mov    edx,ecx
  450385:	add    edx,edx
  450387:	add    edx,edx
  450389:	add    edx,edx
  45038b:	xor    eax,edx
  45038d:	mov    DWORD PTR [esp+0x14],eax
  450391:	mov    eax,DWORD PTR [esp+0x10]
  450395:	add    eax,eax
  450397:	mov    edx,DWORD PTR [esp+0x10]
  45039b:	shr    edx,0x1f
  45039e:	or     eax,edx
  4503a0:	mov    DWORD PTR [esp+0x10],eax
  4503a4:	mov    eax,DWORD PTR [esp+0x14]
  4503a8:	shl    eax,0x7
  4503ab:	mov    edx,DWORD PTR [esp+0x14]
  4503af:	shr    edx,0x19
  4503b2:	or     eax,edx
  4503b4:	mov    DWORD PTR [esp+0x14],eax
  4503b8:	xor    ecx,DWORD PTR [esp+0x10]
  4503bc:	xor    ecx,DWORD PTR [esp+0x14]
  4503c0:	xor    esi,DWORD PTR [esp+0x14]
  4503c4:	mov    eax,DWORD PTR [esp+0x10]
  4503c8:	shl    eax,0x7
  4503cb:	xor    esi,eax
  4503cd:	mov    eax,ecx
  4503cf:	shl    eax,0x5
  4503d2:	shr    ecx,0x1b
  4503d5:	or     eax,ecx
  4503d7:	mov    ecx,eax
  4503d9:	mov    eax,esi
  4503db:	shl    eax,0x16
  4503de:	shr    esi,0xa
  4503e1:	or     eax,esi
  4503e3:	mov    esi,eax
  4503e5:	mov    eax,DWORD PTR [esp+0xc]
  4503e9:	add    eax,0x4
  4503ec:	add    eax,eax
  4503ee:	add    eax,eax
  4503f0:	mov    edx,DWORD PTR [esp]
  4503f3:	xor    ecx,DWORD PTR [edx+eax*4+0x58]
  4503f7:	mov    eax,DWORD PTR [esp+0xc]
  4503fb:	add    eax,0x4
  4503fe:	add    eax,eax
  450400:	add    eax,eax
  450402:	mov    edx,DWORD PTR [esp]
  450405:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  450409:	xor    DWORD PTR [esp+0x10],eax
  45040d:	mov    eax,DWORD PTR [esp+0xc]
  450411:	add    eax,0x4
  450414:	add    eax,eax
  450416:	add    eax,eax
  450418:	mov    edx,DWORD PTR [esp]
  45041b:	xor    esi,DWORD PTR [edx+eax*4+0x60]
  45041f:	mov    eax,DWORD PTR [esp+0xc]
  450423:	add    eax,0x4
  450426:	add    eax,eax
  450428:	add    eax,eax
  45042a:	mov    edx,DWORD PTR [esp]
  45042d:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  450431:	xor    DWORD PTR [esp+0x14],eax
  450435:	mov    eax,ecx
  450437:	not    eax
  450439:	mov    DWORD PTR [esp+0x1c],eax
  45043d:	mov    eax,DWORD PTR [esp+0x14]
  450441:	xor    eax,ecx
  450443:	mov    DWORD PTR [esp+0x20],eax
  450447:	mov    eax,DWORD PTR [esp+0x10]
  45044b:	xor    eax,ecx
  45044d:	mov    DWORD PTR [esp+0x24],eax
  450451:	xor    esi,DWORD PTR [esp+0x1c]
  450455:	mov    DWORD PTR [esp+0x28],esi
  450459:	mov    eax,DWORD PTR [esp+0x20]
  45045d:	or     eax,DWORD PTR [esp+0x24]
  450461:	mov    DWORD PTR [esp+0x2c],eax
  450465:	mov    edx,DWORD PTR [esp+0x28]
  450469:	xor    edx,DWORD PTR [esp+0x2c]
  45046d:	mov    eax,edx
  45046f:	not    eax
  450471:	mov    DWORD PTR [esp+0x34],eax
  450475:	mov    eax,DWORD PTR [esp+0x10]
  450479:	or     eax,DWORD PTR [esp+0x34]
  45047d:	mov    DWORD PTR [esp+0x38],eax
  450481:	mov    eax,DWORD PTR [esp+0x20]
  450485:	xor    eax,DWORD PTR [esp+0x38]
  450489:	mov    ebx,edx
  45048b:	and    ebx,ecx
  45048d:	mov    DWORD PTR [esp+0x40],ebx
  450491:	mov    ebx,DWORD PTR [esp+0x10]
  450495:	xor    ebx,eax
  450497:	mov    DWORD PTR [esp+0x44],ebx
  45049b:	mov    ebx,DWORD PTR [esp+0x38]
  45049f:	and    ebx,DWORD PTR [esp+0x44]
  4504a3:	mov    DWORD PTR [esp+0x48],ebx
  4504a7:	mov    ebx,DWORD PTR [esp+0x40]
  4504ab:	xor    ebx,DWORD PTR [esp+0x48]
  4504af:	or     ecx,DWORD PTR [esp+0x34]
  4504b3:	mov    DWORD PTR [esp+0x50],ecx
  4504b7:	mov    ecx,DWORD PTR [esp+0x24]
  4504bb:	xor    ecx,DWORD PTR [esp+0x50]
  4504bf:	mov    DWORD PTR [esp+0x54],ecx
  4504c3:	mov    ecx,ebx
  4504c5:	and    ecx,eax
  4504c7:	mov    DWORD PTR [esp+0x58],ecx
  4504cb:	mov    ecx,DWORD PTR [esp+0x54]
  4504cf:	xor    ecx,DWORD PTR [esp+0x58]
  4504d3:	mov    DWORD PTR [esp+0x18],ecx
  4504d7:	mov    ecx,edx
  4504d9:	shl    ecx,0xd
  4504dc:	shr    edx,0x13
  4504df:	or     ecx,edx
  4504e1:	mov    edx,ecx
  4504e3:	mov    ecx,ebx
  4504e5:	add    ecx,ecx
  4504e7:	add    ecx,ecx
  4504e9:	add    ecx,ecx
  4504eb:	shr    ebx,0x1d
  4504ee:	or     ecx,ebx
  4504f0:	mov    ebx,ecx
  4504f2:	mov    ecx,DWORD PTR [esp+0x18]
  4504f6:	xor    ecx,edx
  4504f8:	xor    ecx,ebx
  4504fa:	mov    DWORD PTR [esp+0x18],ecx
  4504fe:	xor    eax,ebx
  450500:	mov    ecx,edx
  450502:	add    ecx,ecx
  450504:	add    ecx,ecx
  450506:	add    ecx,ecx
  450508:	xor    eax,ecx
  45050a:	mov    ecx,DWORD PTR [esp+0x18]
  45050e:	add    ecx,ecx
  450510:	mov    esi,DWORD PTR [esp+0x18]
  450514:	shr    esi,0x1f
  450517:	or     ecx,esi
  450519:	mov    DWORD PTR [esp+0x18],ecx
  45051d:	mov    ecx,eax
  45051f:	shl    ecx,0x7
  450522:	shr    eax,0x19
  450525:	or     ecx,eax
  450527:	mov    eax,ecx
  450529:	xor    edx,DWORD PTR [esp+0x18]
  45052d:	xor    edx,eax
  45052f:	xor    ebx,eax
  450531:	mov    ecx,DWORD PTR [esp+0x18]
  450535:	shl    ecx,0x7
  450538:	xor    ebx,ecx
  45053a:	mov    ecx,edx
  45053c:	shl    ecx,0x5
  45053f:	shr    edx,0x1b
  450542:	or     ecx,edx
  450544:	mov    edx,ecx
  450546:	mov    ecx,ebx
  450548:	shl    ecx,0x16
  45054b:	shr    ebx,0xa
  45054e:	or     ecx,ebx
  450550:	mov    ebx,ecx
  450552:	mov    ecx,DWORD PTR [esp+0xc]
  450556:	add    ecx,0x5
  450559:	add    ecx,ecx
  45055b:	add    ecx,ecx
  45055d:	mov    esi,DWORD PTR [esp]
  450560:	xor    edx,DWORD PTR [esi+ecx*4+0x58]
  450564:	mov    ecx,DWORD PTR [esp+0xc]
  450568:	add    ecx,0x5
  45056b:	add    ecx,ecx
  45056d:	add    ecx,ecx
  45056f:	mov    esi,DWORD PTR [esp]
  450572:	mov    ecx,DWORD PTR [esi+ecx*4+0x5c]
  450576:	xor    DWORD PTR [esp+0x18],ecx
  45057a:	mov    ecx,DWORD PTR [esp+0xc]
  45057e:	add    ecx,0x5
  450581:	add    ecx,ecx
  450583:	add    ecx,ecx
  450585:	mov    esi,DWORD PTR [esp]
  450588:	xor    ebx,DWORD PTR [esi+ecx*4+0x60]
  45058c:	mov    ecx,DWORD PTR [esp+0xc]
  450590:	add    ecx,0x5
  450593:	add    ecx,ecx
  450595:	add    ecx,ecx
  450597:	mov    esi,DWORD PTR [esp]
  45059a:	xor    eax,DWORD PTR [esi+ecx*4+0x64]
  45059e:	mov    ecx,edx
  4505a0:	not    ecx
  4505a2:	mov    DWORD PTR [esp+0x1c],ecx
  4505a6:	mov    ecx,DWORD PTR [esp+0x18]
  4505aa:	xor    ecx,edx
  4505ac:	mov    DWORD PTR [esp+0x20],ecx
  4505b0:	xor    edx,eax
  4505b2:	mov    DWORD PTR [esp+0x24],edx
  4505b6:	mov    edx,DWORD PTR [esp+0x1c]
  4505ba:	xor    edx,ebx
  4505bc:	mov    DWORD PTR [esp+0x28],edx
  4505c0:	mov    edx,DWORD PTR [esp+0x20]
  4505c4:	or     edx,DWORD PTR [esp+0x24]
  4505c8:	mov    DWORD PTR [esp+0x2c],edx
  4505cc:	mov    ecx,DWORD PTR [esp+0x28]
  4505d0:	xor    ecx,DWORD PTR [esp+0x2c]
  4505d4:	mov    edx,eax
  4505d6:	not    edx
  4505d8:	mov    DWORD PTR [esp+0x34],edx
  4505dc:	mov    edx,DWORD PTR [esp+0x34]
  4505e0:	and    edx,ecx
  4505e2:	mov    DWORD PTR [esp+0x38],edx
  4505e6:	mov    edx,DWORD PTR [esp+0x20]
  4505ea:	xor    edx,DWORD PTR [esp+0x38]
  4505ee:	mov    DWORD PTR [esp+0x10],edx
  4505f2:	mov    edx,DWORD PTR [esp+0x18]
  4505f6:	or     edx,DWORD PTR [esp+0x10]
  4505fa:	mov    DWORD PTR [esp+0x40],edx
  4505fe:	or     ebx,ecx
  450600:	mov    DWORD PTR [esp+0x44],ebx
  450604:	mov    edx,DWORD PTR [esp+0x34]
  450608:	xor    edx,DWORD PTR [esp+0x40]
  45060c:	mov    DWORD PTR [esp+0x48],edx
  450610:	mov    edx,DWORD PTR [esp+0x44]
  450614:	xor    edx,DWORD PTR [esp+0x48]
  450618:	mov    DWORD PTR [esp+0x14],edx
  45061c:	or     eax,DWORD PTR [esp+0x10]
  450620:	mov    DWORD PTR [esp+0x50],eax
  450624:	mov    eax,DWORD PTR [esp+0x1c]
  450628:	xor    eax,DWORD PTR [esp+0x50]
  45062c:	mov    DWORD PTR [esp+0x54],eax
  450630:	mov    eax,DWORD PTR [esp+0x14]
  450634:	or     eax,ecx
  450636:	mov    DWORD PTR [esp+0x58],eax
  45063a:	mov    esi,DWORD PTR [esp+0x54]
  45063e:	xor    esi,DWORD PTR [esp+0x58]
  450642:	mov    eax,ecx
  450644:	shl    eax,0xd
  450647:	shr    ecx,0x13
  45064a:	or     eax,ecx
  45064c:	mov    ecx,eax
  45064e:	mov    eax,esi
  450650:	add    eax,eax
  450652:	add    eax,eax
  450654:	add    eax,eax
  450656:	shr    esi,0x1d
  450659:	or     eax,esi
  45065b:	mov    esi,eax
  45065d:	mov    eax,DWORD PTR [esp+0x10]
  450661:	xor    eax,ecx
  450663:	xor    eax,esi
  450665:	mov    DWORD PTR [esp+0x10],eax
  450669:	mov    eax,DWORD PTR [esp+0x14]
  45066d:	xor    eax,esi
  45066f:	mov    edx,ecx
  450671:	add    edx,edx
  450673:	add    edx,edx
  450675:	add    edx,edx
  450677:	xor    eax,edx
  450679:	mov    DWORD PTR [esp+0x14],eax
  45067d:	mov    eax,DWORD PTR [esp+0x10]
  450681:	add    eax,eax
  450683:	mov    edx,DWORD PTR [esp+0x10]
  450687:	shr    edx,0x1f
  45068a:	or     eax,edx
  45068c:	mov    DWORD PTR [esp+0x10],eax
  450690:	mov    eax,DWORD PTR [esp+0x14]
  450694:	shl    eax,0x7
  450697:	mov    edx,DWORD PTR [esp+0x14]
  45069b:	shr    edx,0x19
  45069e:	or     eax,edx
  4506a0:	mov    DWORD PTR [esp+0x14],eax
  4506a4:	xor    ecx,DWORD PTR [esp+0x10]
  4506a8:	xor    ecx,DWORD PTR [esp+0x14]
  4506ac:	xor    esi,DWORD PTR [esp+0x14]
  4506b0:	mov    eax,DWORD PTR [esp+0x10]
  4506b4:	shl    eax,0x7
  4506b7:	xor    esi,eax
  4506b9:	mov    eax,ecx
  4506bb:	shl    eax,0x5
  4506be:	shr    ecx,0x1b
  4506c1:	or     eax,ecx
  4506c3:	mov    ecx,eax
  4506c5:	mov    eax,esi
  4506c7:	shl    eax,0x16
  4506ca:	shr    esi,0xa
  4506cd:	or     eax,esi
  4506cf:	mov    esi,eax
  4506d1:	mov    eax,DWORD PTR [esp+0xc]
  4506d5:	add    eax,0x6
  4506d8:	add    eax,eax
  4506da:	add    eax,eax
  4506dc:	mov    edx,DWORD PTR [esp]
  4506df:	xor    ecx,DWORD PTR [edx+eax*4+0x58]
  4506e3:	mov    eax,DWORD PTR [esp+0xc]
  4506e7:	add    eax,0x6
  4506ea:	add    eax,eax
  4506ec:	add    eax,eax
  4506ee:	mov    edx,DWORD PTR [esp]
  4506f1:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  4506f5:	xor    DWORD PTR [esp+0x10],eax
  4506f9:	mov    eax,DWORD PTR [esp+0xc]
  4506fd:	add    eax,0x6
  450700:	add    eax,eax
  450702:	add    eax,eax
  450704:	mov    edx,DWORD PTR [esp]
  450707:	xor    esi,DWORD PTR [edx+eax*4+0x60]
  45070b:	mov    eax,DWORD PTR [esp+0xc]
  45070f:	add    eax,0x6
  450712:	add    eax,eax
  450714:	add    eax,eax
  450716:	mov    edx,DWORD PTR [esp]
  450719:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  45071d:	xor    DWORD PTR [esp+0x14],eax
  450721:	mov    eax,esi
  450723:	xor    eax,ecx
  450725:	mov    DWORD PTR [esp+0x1c],eax
  450729:	mov    eax,DWORD PTR [esp+0x10]
  45072d:	or     eax,DWORD PTR [esp+0x14]
  450731:	mov    DWORD PTR [esp+0x20],eax
  450735:	mov    eax,DWORD PTR [esp+0x10]
  450739:	xor    eax,esi
  45073b:	mov    DWORD PTR [esp+0x24],eax
  45073f:	mov    eax,DWORD PTR [esp+0x24]
  450743:	not    eax
  450745:	mov    DWORD PTR [esp+0x28],eax
  450749:	and    ecx,DWORD PTR [esp+0x14]
  45074d:	mov    DWORD PTR [esp+0x2c],ecx
  450751:	mov    eax,DWORD PTR [esp+0x28]
  450755:	xor    eax,DWORD PTR [esp+0x2c]
  450759:	mov    DWORD PTR [esp+0x18],eax
  45075d:	or     esi,DWORD PTR [esp+0x10]
  450761:	mov    DWORD PTR [esp+0x34],esi
  450765:	mov    eax,DWORD PTR [esp+0x14]
  450769:	xor    eax,DWORD PTR [esp+0x1c]
  45076d:	mov    DWORD PTR [esp+0x38],eax
  450771:	mov    eax,DWORD PTR [esp+0x34]
  450775:	and    eax,DWORD PTR [esp+0x38]
  450779:	mov    DWORD PTR [esp+0x3c],eax
  45077d:	mov    eax,DWORD PTR [esp+0x20]
  450781:	xor    eax,DWORD PTR [esp+0x3c]
  450785:	mov    edx,DWORD PTR [esp+0x1c]
  450789:	and    edx,DWORD PTR [esp+0x34]
  45078d:	mov    DWORD PTR [esp+0x44],edx
  450791:	mov    edx,DWORD PTR [esp+0x28]
  450795:	xor    edx,DWORD PTR [esp+0x38]
  450799:	mov    DWORD PTR [esp+0x48],edx
  45079d:	mov    edx,DWORD PTR [esp+0x44]
  4507a1:	and    edx,eax
  4507a3:	mov    DWORD PTR [esp+0x4c],edx
  4507a7:	mov    edx,DWORD PTR [esp+0x48]
  4507ab:	xor    edx,DWORD PTR [esp+0x4c]
  4507af:	mov    ecx,DWORD PTR [esp+0x24]
  4507b3:	xor    ecx,DWORD PTR [esp+0x44]
  4507b7:	mov    DWORD PTR [esp+0x54],ecx
  4507bb:	mov    ecx,DWORD PTR [esp+0x54]
  4507bf:	or     ecx,eax
  4507c1:	mov    DWORD PTR [esp+0x58],ecx
  4507c5:	mov    ebx,DWORD PTR [esp+0x48]
  4507c9:	xor    ebx,DWORD PTR [esp+0x58]
  4507cd:	mov    ecx,edx
  4507cf:	shl    ecx,0xd
  4507d2:	shr    edx,0x13
  4507d5:	or     ecx,edx
  4507d7:	mov    edx,ecx
  4507d9:	mov    ecx,ebx
  4507db:	add    ecx,ecx
  4507dd:	add    ecx,ecx
  4507df:	add    ecx,ecx
  4507e1:	shr    ebx,0x1d
  4507e4:	or     ecx,ebx
  4507e6:	mov    ebx,ecx
  4507e8:	mov    ecx,DWORD PTR [esp+0x18]
  4507ec:	xor    ecx,edx
  4507ee:	xor    ecx,ebx
  4507f0:	mov    DWORD PTR [esp+0x18],ecx
  4507f4:	xor    eax,ebx
  4507f6:	mov    ecx,edx
  4507f8:	add    ecx,ecx
  4507fa:	add    ecx,ecx
  4507fc:	add    ecx,ecx
  4507fe:	xor    eax,ecx
  450800:	mov    ecx,DWORD PTR [esp+0x18]
  450804:	add    ecx,ecx
  450806:	mov    esi,DWORD PTR [esp+0x18]
  45080a:	shr    esi,0x1f
  45080d:	or     ecx,esi
  45080f:	mov    DWORD PTR [esp+0x18],ecx
  450813:	mov    ecx,eax
  450815:	shl    ecx,0x7
  450818:	shr    eax,0x19
  45081b:	or     ecx,eax
  45081d:	mov    eax,ecx
  45081f:	xor    edx,DWORD PTR [esp+0x18]
  450823:	xor    edx,eax
  450825:	xor    ebx,eax
  450827:	mov    ecx,DWORD PTR [esp+0x18]
  45082b:	shl    ecx,0x7
  45082e:	xor    ebx,ecx
  450830:	mov    ecx,edx
  450832:	shl    ecx,0x5
  450835:	shr    edx,0x1b
  450838:	or     ecx,edx
  45083a:	mov    edx,ecx
  45083c:	mov    ecx,ebx
  45083e:	shl    ecx,0x16
  450841:	shr    ebx,0xa
  450844:	or     ecx,ebx
  450846:	mov    ebx,ecx
  450848:	mov    ecx,DWORD PTR [esp+0xc]
  45084c:	add    ecx,0x7
  45084f:	add    ecx,ecx
  450851:	add    ecx,ecx
  450853:	mov    esi,DWORD PTR [esp]
  450856:	xor    edx,DWORD PTR [esi+ecx*4+0x58]
  45085a:	mov    ecx,DWORD PTR [esp+0xc]
  45085e:	add    ecx,0x7
  450861:	add    ecx,ecx
  450863:	add    ecx,ecx
  450865:	mov    esi,DWORD PTR [esp]
  450868:	mov    ecx,DWORD PTR [esi+ecx*4+0x5c]
  45086c:	xor    DWORD PTR [esp+0x18],ecx
  450870:	mov    ecx,DWORD PTR [esp+0xc]
  450874:	add    ecx,0x7
  450877:	add    ecx,ecx
  450879:	add    ecx,ecx
  45087b:	mov    esi,DWORD PTR [esp]
  45087e:	xor    ebx,DWORD PTR [esi+ecx*4+0x60]
  450882:	mov    ecx,DWORD PTR [esp+0xc]
  450886:	add    ecx,0x7
  450889:	add    ecx,ecx
  45088b:	add    ecx,ecx
  45088d:	mov    esi,DWORD PTR [esp]
  450890:	xor    eax,DWORD PTR [esi+ecx*4+0x64]
  450894:	mov    ecx,ebx
  450896:	not    ecx
  450898:	mov    DWORD PTR [esp+0x1c],ecx
  45089c:	xor    ebx,DWORD PTR [esp+0x18]
  4508a0:	mov    DWORD PTR [esp+0x20],ebx
  4508a4:	mov    ecx,DWORD PTR [esp+0x18]
  4508a8:	or     ecx,DWORD PTR [esp+0x1c]
  4508ac:	mov    DWORD PTR [esp+0x24],ecx
  4508b0:	mov    ecx,DWORD PTR [esp+0x24]
  4508b4:	xor    ecx,eax
  4508b6:	mov    DWORD PTR [esp+0x28],ecx
  4508ba:	mov    ecx,DWORD PTR [esp+0x28]
  4508be:	and    ecx,edx
  4508c0:	mov    DWORD PTR [esp+0x2c],ecx
  4508c4:	mov    ecx,DWORD PTR [esp+0x20]
  4508c8:	xor    ecx,DWORD PTR [esp+0x2c]
  4508cc:	mov    DWORD PTR [esp+0x14],ecx
  4508d0:	xor    edx,eax
  4508d2:	mov    DWORD PTR [esp+0x34],edx
  4508d6:	mov    edx,DWORD PTR [esp+0x18]
  4508da:	xor    edx,DWORD PTR [esp+0x2c]
  4508de:	mov    DWORD PTR [esp+0x38],edx
  4508e2:	mov    edx,DWORD PTR [esp+0x20]
  4508e6:	or     edx,DWORD PTR [esp+0x38]
  4508ea:	mov    DWORD PTR [esp+0x3c],edx
  4508ee:	mov    edx,DWORD PTR [esp+0x34]
  4508f2:	xor    edx,DWORD PTR [esp+0x3c]
  4508f6:	mov    DWORD PTR [esp+0x10],edx
  4508fa:	and    eax,DWORD PTR [esp+0x24]
  4508fe:	mov    DWORD PTR [esp+0x44],eax
  450902:	mov    eax,DWORD PTR [esp+0x2c]
  450906:	xor    eax,DWORD PTR [esp+0x10]
  45090a:	mov    DWORD PTR [esp+0x48],eax
  45090e:	mov    eax,DWORD PTR [esp+0x14]
  450912:	and    eax,DWORD PTR [esp+0x48]
  450916:	mov    DWORD PTR [esp+0x4c],eax
  45091a:	mov    esi,DWORD PTR [esp+0x44]
  45091e:	xor    esi,DWORD PTR [esp+0x4c]
  450922:	mov    eax,DWORD PTR [esp+0x1c]
  450926:	or     eax,DWORD PTR [esp+0x28]
  45092a:	mov    DWORD PTR [esp+0x54],eax
  45092e:	mov    eax,DWORD PTR [esp+0x48]
  450932:	xor    eax,esi
  450934:	mov    DWORD PTR [esp+0x58],eax
  450938:	mov    ecx,DWORD PTR [esp+0x54]
  45093c:	xor    ecx,DWORD PTR [esp+0x58]
  450940:	add    DWORD PTR [esp+0xc],0x8
  450945:	cmp    DWORD PTR [esp+0xc],0x20
  45094a:	jge    0x4509df
  450950:	mov    eax,ecx
  450952:	shl    eax,0xd
  450955:	shr    ecx,0x13
  450958:	or     eax,ecx
  45095a:	mov    ecx,eax
  45095c:	mov    eax,esi
  45095e:	add    eax,eax
  450960:	add    eax,eax
  450962:	add    eax,eax
  450964:	shr    esi,0x1d
  450967:	or     eax,esi
  450969:	mov    esi,eax
  45096b:	mov    eax,DWORD PTR [esp+0x10]
  45096f:	xor    eax,ecx
  450971:	xor    eax,esi
  450973:	mov    DWORD PTR [esp+0x10],eax
  450977:	mov    eax,DWORD PTR [esp+0x14]
  45097b:	xor    eax,esi
  45097d:	mov    edx,ecx
  45097f:	add    edx,edx
  450981:	add    edx,edx
  450983:	add    edx,edx
  450985:	xor    eax,edx
  450987:	mov    DWORD PTR [esp+0x14],eax
  45098b:	mov    eax,DWORD PTR [esp+0x10]
  45098f:	add    eax,eax
  450991:	mov    edx,DWORD PTR [esp+0x10]
  450995:	shr    edx,0x1f
  450998:	or     eax,edx
  45099a:	mov    DWORD PTR [esp+0x10],eax
  45099e:	mov    eax,DWORD PTR [esp+0x14]
  4509a2:	shl    eax,0x7
  4509a5:	mov    edx,DWORD PTR [esp+0x14]
  4509a9:	shr    edx,0x19
  4509ac:	or     eax,edx
  4509ae:	mov    DWORD PTR [esp+0x14],eax
  4509b2:	xor    ecx,DWORD PTR [esp+0x10]
  4509b6:	xor    ecx,DWORD PTR [esp+0x14]
  4509ba:	xor    esi,DWORD PTR [esp+0x14]
  4509be:	mov    eax,DWORD PTR [esp+0x10]
  4509c2:	shl    eax,0x7
  4509c5:	xor    esi,eax
  4509c7:	mov    eax,ecx
  4509c9:	shl    eax,0x5
  4509cc:	shr    ecx,0x1b
  4509cf:	or     eax,ecx
  4509d1:	mov    ecx,eax
  4509d3:	mov    eax,esi
  4509d5:	shl    eax,0x16
  4509d8:	shr    esi,0xa
  4509db:	or     eax,esi
  4509dd:	mov    esi,eax
  4509df:	cmp    DWORD PTR [esp+0xc],0x20
  4509e4:	jl     0x44fe01
  4509ea:	mov    eax,DWORD PTR [esp]
  4509ed:	xor    ecx,DWORD PTR [eax+0x258]
  4509f3:	mov    eax,DWORD PTR [esp]
  4509f6:	mov    eax,DWORD PTR [eax+0x25c]
  4509fc:	xor    DWORD PTR [esp+0x10],eax
  450a00:	mov    eax,DWORD PTR [esp]
  450a03:	xor    esi,DWORD PTR [eax+0x260]
  450a09:	mov    eax,DWORD PTR [esp]
  450a0c:	mov    eax,DWORD PTR [eax+0x264]
  450a12:	xor    DWORD PTR [esp+0x14],eax
  450a16:	mov    eax,DWORD PTR [esp+0x8]
  450a1a:	mov    DWORD PTR [eax],ecx
  450a1c:	mov    eax,DWORD PTR [esp+0x8]
  450a20:	add    eax,0x4
  450a23:	mov    edx,DWORD PTR [esp+0x10]
  450a27:	mov    DWORD PTR [eax],edx
  450a29:	mov    eax,DWORD PTR [esp+0x8]
  450a2d:	add    eax,0x8
  450a30:	mov    DWORD PTR [eax],esi
  450a32:	mov    eax,DWORD PTR [esp+0x8]
  450a36:	add    eax,0xc
  450a39:	mov    edx,DWORD PTR [esp+0x14]
  450a3d:	mov    DWORD PTR [eax],edx
  450a3f:	add    esp,0x60
  450a42:	pop    esi
  450a43:	pop    ebx
  450a44:	ret    
  450a45:	add    BYTE PTR [eax],al
  450a47:	add    bh,bh
  450a49:	(bad)  
  450a4a:	(bad)  
  450a4b:	call   DWORD PTR [esi]
  450a4d:	add    BYTE PTR [eax],al
  450a4f:	add    BYTE PTR [ebx+0x69],al
  450a52:	jo     0x450abc
  450a54:	gs jb  0x450a77
  450a57:	outs   dx,BYTE PTR ds:[esi]
  450a58:	outs   dx,DWORD PTR ds:[esi]
  450a59:	je     0x450a7b
  450a5b:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  450a62:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  450a69:	push   esi
  450a6a:	add    esp,0xffffffa8
  450a6d:	mov    DWORD PTR [esp+0x4],ecx
  450a71:	mov    DWORD PTR [esp],eax
  450a74:	mov    eax,DWORD PTR [esp]
  450a77:	cmp    BYTE PTR [eax+0x30],0x0
  450a7b:	jne    0x450a93
  450a7d:	mov    ecx,0x4516f4
  450a82:	mov    dl,0x1
  450a84:	mov    eax,ds:0x441af8
  450a89:	call   0x40c8b4
  450a8e:	call   0x4048fc
  450a93:	mov    ecx,edx
  450a95:	mov    ebx,DWORD PTR [ecx]
  450a97:	mov    eax,ecx
  450a99:	mov    ecx,eax
  450a9b:	add    ecx,0x4
  450a9e:	mov    ecx,DWORD PTR [ecx]
  450aa0:	mov    DWORD PTR [esp+0xc],ecx
  450aa4:	mov    ecx,eax
  450aa6:	add    ecx,0x8
  450aa9:	mov    ecx,DWORD PTR [ecx]
  450aab:	add    eax,0xc
  450aae:	mov    eax,DWORD PTR [eax]
  450ab0:	mov    DWORD PTR [esp+0x10],eax
  450ab4:	mov    DWORD PTR [esp+0x8],0x20
  450abc:	mov    eax,DWORD PTR [esp]
  450abf:	xor    ebx,DWORD PTR [eax+0x258]
  450ac5:	mov    eax,DWORD PTR [esp]
  450ac8:	mov    eax,DWORD PTR [eax+0x25c]
  450ace:	xor    DWORD PTR [esp+0xc],eax
  450ad2:	mov    eax,DWORD PTR [esp]
  450ad5:	xor    ecx,DWORD PTR [eax+0x260]
  450adb:	mov    eax,DWORD PTR [esp]
  450ade:	mov    eax,DWORD PTR [eax+0x264]
  450ae4:	xor    DWORD PTR [esp+0x10],eax
  450ae8:	cmp    DWORD PTR [esp+0x8],0x0
  450aed:	jle    0x4516ba
  450af3:	cmp    DWORD PTR [esp+0x8],0x20
  450af8:	jge    0x450b8a
  450afe:	mov    eax,ecx
  450b00:	shr    eax,0x16
  450b03:	shl    ecx,0xa
  450b06:	or     eax,ecx
  450b08:	mov    ecx,eax
  450b0a:	mov    eax,ebx
  450b0c:	shr    eax,0x5
  450b0f:	shl    ebx,0x1b
  450b12:	or     eax,ebx
  450b14:	mov    ebx,eax
  450b16:	xor    ecx,DWORD PTR [esp+0x10]
  450b1a:	mov    eax,DWORD PTR [esp+0xc]
  450b1e:	shl    eax,0x7
  450b21:	xor    ecx,eax
  450b23:	xor    ebx,DWORD PTR [esp+0xc]
  450b27:	xor    ebx,DWORD PTR [esp+0x10]
  450b2b:	mov    eax,DWORD PTR [esp+0x10]
  450b2f:	shr    eax,0x7
  450b32:	mov    edx,DWORD PTR [esp+0x10]
  450b36:	shl    edx,0x19
  450b39:	or     eax,edx
  450b3b:	mov    DWORD PTR [esp+0x10],eax
  450b3f:	mov    eax,DWORD PTR [esp+0xc]
  450b43:	shr    eax,1
  450b45:	mov    edx,DWORD PTR [esp+0xc]
  450b49:	shl    edx,0x1f
  450b4c:	or     eax,edx
  450b4e:	mov    DWORD PTR [esp+0xc],eax
  450b52:	mov    eax,DWORD PTR [esp+0x10]
  450b56:	xor    eax,ecx
  450b58:	mov    edx,ebx
  450b5a:	add    edx,edx
  450b5c:	add    edx,edx
  450b5e:	add    edx,edx
  450b60:	xor    eax,edx
  450b62:	mov    DWORD PTR [esp+0x10],eax
  450b66:	mov    eax,DWORD PTR [esp+0xc]
  450b6a:	xor    eax,ebx
  450b6c:	xor    eax,ecx
  450b6e:	mov    DWORD PTR [esp+0xc],eax
  450b72:	mov    eax,ecx
  450b74:	shr    eax,0x3
  450b77:	shl    ecx,0x1d
  450b7a:	or     eax,ecx
  450b7c:	mov    ecx,eax
  450b7e:	mov    eax,ebx
  450b80:	shr    eax,0xd
  450b83:	shl    ebx,0x13
  450b86:	or     eax,ebx
  450b88:	mov    ebx,eax
  450b8a:	mov    eax,DWORD PTR [esp+0xc]
  450b8e:	and    eax,ebx
  450b90:	mov    DWORD PTR [esp+0x18],eax
  450b94:	mov    eax,DWORD PTR [esp+0xc]
  450b98:	or     eax,ebx
  450b9a:	mov    DWORD PTR [esp+0x1c],eax
  450b9e:	mov    eax,DWORD PTR [esp+0x18]
  450ba2:	or     eax,ecx
  450ba4:	mov    DWORD PTR [esp+0x20],eax
  450ba8:	mov    eax,DWORD PTR [esp+0x10]
  450bac:	and    eax,DWORD PTR [esp+0x1c]
  450bb0:	mov    DWORD PTR [esp+0x24],eax
  450bb4:	mov    eax,DWORD PTR [esp+0x20]
  450bb8:	xor    eax,DWORD PTR [esp+0x24]
  450bbc:	mov    edx,DWORD PTR [esp+0x10]
  450bc0:	not    edx
  450bc2:	mov    DWORD PTR [esp+0x2c],edx
  450bc6:	mov    edx,DWORD PTR [esp+0xc]
  450bca:	xor    edx,DWORD PTR [esp+0x24]
  450bce:	mov    DWORD PTR [esp+0x30],edx
  450bd2:	mov    edx,DWORD PTR [esp+0x2c]
  450bd6:	xor    edx,eax
  450bd8:	mov    DWORD PTR [esp+0x34],edx
  450bdc:	mov    edx,DWORD PTR [esp+0x30]
  450be0:	or     edx,DWORD PTR [esp+0x34]
  450be4:	mov    DWORD PTR [esp+0x38],edx
  450be8:	mov    edx,DWORD PTR [esp+0x38]
  450bec:	xor    edx,ebx
  450bee:	mov    DWORD PTR [esp+0x14],edx
  450bf2:	xor    ecx,DWORD PTR [esp+0x30]
  450bf6:	mov    DWORD PTR [esp+0x40],ecx
  450bfa:	mov    edx,DWORD PTR [esp+0x10]
  450bfe:	or     edx,DWORD PTR [esp+0x14]
  450c02:	mov    DWORD PTR [esp+0x44],edx
  450c06:	mov    edx,DWORD PTR [esp+0x40]
  450c0a:	xor    edx,DWORD PTR [esp+0x44]
  450c0e:	and    ebx,eax
  450c10:	mov    DWORD PTR [esp+0x4c],ebx
  450c14:	mov    ecx,DWORD PTR [esp+0x20]
  450c18:	xor    ecx,DWORD PTR [esp+0x14]
  450c1c:	mov    DWORD PTR [esp+0x50],ecx
  450c20:	mov    ecx,DWORD PTR [esp+0x4c]
  450c24:	xor    ecx,edx
  450c26:	mov    DWORD PTR [esp+0x54],ecx
  450c2a:	mov    esi,DWORD PTR [esp+0x50]
  450c2e:	xor    esi,DWORD PTR [esp+0x54]
  450c32:	mov    ecx,DWORD PTR [esp+0x8]
  450c36:	dec    ecx
  450c37:	add    ecx,ecx
  450c39:	add    ecx,ecx
  450c3b:	mov    ebx,DWORD PTR [esp]
  450c3e:	xor    edx,DWORD PTR [ebx+ecx*4+0x58]
  450c42:	mov    ecx,DWORD PTR [esp+0x8]
  450c46:	dec    ecx
  450c47:	add    ecx,ecx
  450c49:	add    ecx,ecx
  450c4b:	mov    ebx,DWORD PTR [esp]
  450c4e:	mov    ecx,DWORD PTR [ebx+ecx*4+0x5c]
  450c52:	xor    DWORD PTR [esp+0x14],ecx
  450c56:	mov    ecx,DWORD PTR [esp+0x8]
  450c5a:	dec    ecx
  450c5b:	add    ecx,ecx
  450c5d:	add    ecx,ecx
  450c5f:	mov    ebx,DWORD PTR [esp]
  450c62:	xor    esi,DWORD PTR [ebx+ecx*4+0x60]
  450c66:	mov    ecx,DWORD PTR [esp+0x8]
  450c6a:	dec    ecx
  450c6b:	add    ecx,ecx
  450c6d:	add    ecx,ecx
  450c6f:	mov    ebx,DWORD PTR [esp]
  450c72:	xor    eax,DWORD PTR [ebx+ecx*4+0x64]
  450c76:	mov    ecx,esi
  450c78:	shr    ecx,0x16
  450c7b:	shl    esi,0xa
  450c7e:	or     ecx,esi
  450c80:	mov    esi,ecx
  450c82:	mov    ecx,edx
  450c84:	shr    ecx,0x5
  450c87:	shl    edx,0x1b
  450c8a:	or     ecx,edx
  450c8c:	mov    edx,ecx
  450c8e:	xor    esi,eax
  450c90:	mov    ecx,DWORD PTR [esp+0x14]
  450c94:	shl    ecx,0x7
  450c97:	xor    esi,ecx
  450c99:	xor    edx,DWORD PTR [esp+0x14]
  450c9d:	xor    edx,eax
  450c9f:	mov    ecx,eax
  450ca1:	shr    ecx,0x7
  450ca4:	shl    eax,0x19
  450ca7:	or     ecx,eax
  450ca9:	mov    eax,ecx
  450cab:	mov    ecx,DWORD PTR [esp+0x14]
  450caf:	shr    ecx,1
  450cb1:	mov    ebx,DWORD PTR [esp+0x14]
  450cb5:	shl    ebx,0x1f
  450cb8:	or     ecx,ebx
  450cba:	mov    DWORD PTR [esp+0x14],ecx
  450cbe:	xor    eax,esi
  450cc0:	mov    ecx,edx
  450cc2:	add    ecx,ecx
  450cc4:	add    ecx,ecx
  450cc6:	add    ecx,ecx
  450cc8:	xor    eax,ecx
  450cca:	mov    ecx,DWORD PTR [esp+0x14]
  450cce:	xor    ecx,edx
  450cd0:	xor    ecx,esi
  450cd2:	mov    DWORD PTR [esp+0x14],ecx
  450cd6:	mov    ecx,esi
  450cd8:	shr    ecx,0x3
  450cdb:	shl    esi,0x1d
  450cde:	or     ecx,esi
  450ce0:	mov    esi,ecx
  450ce2:	mov    ecx,edx
  450ce4:	shr    ecx,0xd
  450ce7:	shl    edx,0x13
  450cea:	or     ecx,edx
  450cec:	mov    edx,ecx
  450cee:	mov    ecx,esi
  450cf0:	not    ecx
  450cf2:	mov    DWORD PTR [esp+0x18],ecx
  450cf6:	mov    ecx,esi
  450cf8:	xor    ecx,edx
  450cfa:	mov    DWORD PTR [esp+0x1c],ecx
  450cfe:	mov    ecx,DWORD PTR [esp+0x14]
  450d02:	xor    ecx,eax
  450d04:	mov    DWORD PTR [esp+0x20],ecx
  450d08:	mov    ecx,DWORD PTR [esp+0x18]
  450d0c:	or     ecx,edx
  450d0e:	mov    DWORD PTR [esp+0x24],ecx
  450d12:	mov    ecx,DWORD PTR [esp+0x20]
  450d16:	xor    ecx,DWORD PTR [esp+0x24]
  450d1a:	mov    DWORD PTR [esp+0xc],ecx
  450d1e:	or     edx,DWORD PTR [esp+0x14]
  450d22:	mov    DWORD PTR [esp+0x2c],edx
  450d26:	mov    edx,DWORD PTR [esp+0x14]
  450d2a:	and    edx,DWORD PTR [esp+0x1c]
  450d2e:	mov    DWORD PTR [esp+0x30],edx
  450d32:	mov    edx,DWORD PTR [esp+0xc]
  450d36:	xor    edx,DWORD PTR [esp+0x2c]
  450d3a:	mov    DWORD PTR [esp+0x34],edx
  450d3e:	mov    edx,DWORD PTR [esp+0x30]
  450d42:	or     edx,DWORD PTR [esp+0x34]
  450d46:	mov    DWORD PTR [esp+0x38],edx
  450d4a:	mov    ebx,DWORD PTR [esp+0x38]
  450d4e:	xor    ebx,esi
  450d50:	mov    edx,DWORD PTR [esp+0xc]
  450d54:	not    edx
  450d56:	mov    DWORD PTR [esp+0x40],edx
  450d5a:	or     eax,DWORD PTR [esp+0x1c]
  450d5e:	mov    DWORD PTR [esp+0x44],eax
  450d62:	mov    eax,DWORD PTR [esp+0x38]
  450d66:	xor    eax,DWORD PTR [esp+0x40]
  450d6a:	mov    DWORD PTR [esp+0x48],eax
  450d6e:	mov    eax,DWORD PTR [esp+0x44]
  450d72:	xor    eax,DWORD PTR [esp+0x48]
  450d76:	mov    DWORD PTR [esp+0x10],eax
  450d7a:	mov    eax,DWORD PTR [esp+0x14]
  450d7e:	xor    eax,DWORD PTR [esp+0x40]
  450d82:	mov    DWORD PTR [esp+0x50],eax
  450d86:	mov    eax,DWORD PTR [esp+0x10]
  450d8a:	and    eax,ebx
  450d8c:	mov    DWORD PTR [esp+0x54],eax
  450d90:	mov    ecx,DWORD PTR [esp+0x50]
  450d94:	xor    ecx,DWORD PTR [esp+0x54]
  450d98:	mov    eax,DWORD PTR [esp+0x8]
  450d9c:	sub    eax,0x2
  450d9f:	add    eax,eax
  450da1:	add    eax,eax
  450da3:	mov    edx,DWORD PTR [esp]
  450da6:	xor    ebx,DWORD PTR [edx+eax*4+0x58]
  450daa:	mov    eax,DWORD PTR [esp+0x8]
  450dae:	sub    eax,0x2
  450db1:	add    eax,eax
  450db3:	add    eax,eax
  450db5:	mov    edx,DWORD PTR [esp]
  450db8:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  450dbc:	xor    DWORD PTR [esp+0xc],eax
  450dc0:	mov    eax,DWORD PTR [esp+0x8]
  450dc4:	sub    eax,0x2
  450dc7:	add    eax,eax
  450dc9:	add    eax,eax
  450dcb:	mov    edx,DWORD PTR [esp]
  450dce:	xor    ecx,DWORD PTR [edx+eax*4+0x60]
  450dd2:	mov    eax,DWORD PTR [esp+0x8]
  450dd6:	sub    eax,0x2
  450dd9:	add    eax,eax
  450ddb:	add    eax,eax
  450ddd:	mov    edx,DWORD PTR [esp]
  450de0:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  450de4:	xor    DWORD PTR [esp+0x10],eax
  450de8:	mov    eax,ecx
  450dea:	shr    eax,0x16
  450ded:	shl    ecx,0xa
  450df0:	or     eax,ecx
  450df2:	mov    ecx,eax
  450df4:	mov    eax,ebx
  450df6:	shr    eax,0x5
  450df9:	shl    ebx,0x1b
  450dfc:	or     eax,ebx
  450dfe:	mov    ebx,eax
  450e00:	xor    ecx,DWORD PTR [esp+0x10]
  450e04:	mov    eax,DWORD PTR [esp+0xc]
  450e08:	shl    eax,0x7
  450e0b:	xor    ecx,eax
  450e0d:	xor    ebx,DWORD PTR [esp+0xc]
  450e11:	xor    ebx,DWORD PTR [esp+0x10]
  450e15:	mov    eax,DWORD PTR [esp+0x10]
  450e19:	shr    eax,0x7
  450e1c:	mov    edx,DWORD PTR [esp+0x10]
  450e20:	shl    edx,0x19
  450e23:	or     eax,edx
  450e25:	mov    DWORD PTR [esp+0x10],eax
  450e29:	mov    eax,DWORD PTR [esp+0xc]
  450e2d:	shr    eax,1
  450e2f:	mov    edx,DWORD PTR [esp+0xc]
  450e33:	shl    edx,0x1f
  450e36:	or     eax,edx
  450e38:	mov    DWORD PTR [esp+0xc],eax
  450e3c:	mov    eax,DWORD PTR [esp+0x10]
  450e40:	xor    eax,ecx
  450e42:	mov    edx,ebx
  450e44:	add    edx,edx
  450e46:	add    edx,edx
  450e48:	add    edx,edx
  450e4a:	xor    eax,edx
  450e4c:	mov    DWORD PTR [esp+0x10],eax
  450e50:	mov    eax,DWORD PTR [esp+0xc]
  450e54:	xor    eax,ebx
  450e56:	xor    eax,ecx
  450e58:	mov    DWORD PTR [esp+0xc],eax
  450e5c:	mov    eax,ecx
  450e5e:	shr    eax,0x3
  450e61:	shl    ecx,0x1d
  450e64:	or     eax,ecx
  450e66:	mov    ecx,eax
  450e68:	mov    eax,ebx
  450e6a:	shr    eax,0xd
  450e6d:	shl    ebx,0x13
  450e70:	or     eax,ebx
  450e72:	mov    ebx,eax
  450e74:	mov    eax,ecx
  450e76:	not    eax
  450e78:	mov    DWORD PTR [esp+0x18],eax
  450e7c:	mov    eax,DWORD PTR [esp+0xc]
  450e80:	and    eax,DWORD PTR [esp+0x18]
  450e84:	mov    DWORD PTR [esp+0x1c],eax
  450e88:	mov    eax,DWORD PTR [esp+0x10]
  450e8c:	xor    eax,DWORD PTR [esp+0x1c]
  450e90:	mov    DWORD PTR [esp+0x20],eax
  450e94:	mov    eax,DWORD PTR [esp+0x20]
  450e98:	and    eax,ebx
  450e9a:	mov    DWORD PTR [esp+0x24],eax
  450e9e:	mov    eax,DWORD PTR [esp+0xc]
  450ea2:	xor    eax,DWORD PTR [esp+0x18]
  450ea6:	mov    DWORD PTR [esp+0x28],eax
  450eaa:	mov    eax,DWORD PTR [esp+0x24]
  450eae:	xor    eax,DWORD PTR [esp+0x28]
  450eb2:	mov    edx,DWORD PTR [esp+0xc]
  450eb6:	or     edx,eax
  450eb8:	mov    DWORD PTR [esp+0x30],edx
  450ebc:	mov    edx,DWORD PTR [esp+0x30]
  450ec0:	and    edx,ebx
  450ec2:	mov    DWORD PTR [esp+0x34],edx
  450ec6:	mov    edx,DWORD PTR [esp+0x20]
  450eca:	xor    edx,DWORD PTR [esp+0x34]
  450ece:	mov    DWORD PTR [esp+0x14],edx
  450ed2:	mov    edx,DWORD PTR [esp+0x10]
  450ed6:	or     edx,ebx
  450ed8:	mov    DWORD PTR [esp+0x3c],edx
  450edc:	mov    edx,DWORD PTR [esp+0x18]
  450ee0:	xor    edx,DWORD PTR [esp+0x30]
  450ee4:	mov    DWORD PTR [esp+0x40],edx
  450ee8:	mov    edx,DWORD PTR [esp+0x3c]
  450eec:	xor    edx,DWORD PTR [esp+0x40]
  450ef0:	xor    ebx,ecx
  450ef2:	mov    DWORD PTR [esp+0x48],ebx
  450ef6:	mov    ecx,DWORD PTR [esp+0xc]
  450efa:	and    ecx,DWORD PTR [esp+0x3c]
  450efe:	mov    DWORD PTR [esp+0x4c],ecx
  450f02:	mov    ecx,DWORD PTR [esp+0x24]
  450f06:	or     ecx,DWORD PTR [esp+0x48]
  450f0a:	mov    DWORD PTR [esp+0x50],ecx
  450f0e:	mov    esi,DWORD PTR [esp+0x4c]
  450f12:	xor    esi,DWORD PTR [esp+0x50]
  450f16:	mov    ecx,DWORD PTR [esp+0x8]
  450f1a:	sub    ecx,0x3
  450f1d:	add    ecx,ecx
  450f1f:	add    ecx,ecx
  450f21:	mov    ebx,DWORD PTR [esp]
  450f24:	xor    edx,DWORD PTR [ebx+ecx*4+0x58]
  450f28:	mov    ecx,DWORD PTR [esp+0x8]
  450f2c:	sub    ecx,0x3
  450f2f:	add    ecx,ecx
  450f31:	add    ecx,ecx
  450f33:	mov    ebx,DWORD PTR [esp]
  450f36:	mov    ecx,DWORD PTR [ebx+ecx*4+0x5c]
  450f3a:	xor    DWORD PTR [esp+0x14],ecx
  450f3e:	mov    ecx,DWORD PTR [esp+0x8]
  450f42:	sub    ecx,0x3
  450f45:	add    ecx,ecx
  450f47:	add    ecx,ecx
  450f49:	mov    ebx,DWORD PTR [esp]
  450f4c:	xor    esi,DWORD PTR [ebx+ecx*4+0x60]
  450f50:	mov    ecx,DWORD PTR [esp+0x8]
  450f54:	sub    ecx,0x3
  450f57:	add    ecx,ecx
  450f59:	add    ecx,ecx
  450f5b:	mov    ebx,DWORD PTR [esp]
  450f5e:	xor    eax,DWORD PTR [ebx+ecx*4+0x64]
  450f62:	mov    ecx,esi
  450f64:	shr    ecx,0x16
  450f67:	shl    esi,0xa
  450f6a:	or     ecx,esi
  450f6c:	mov    esi,ecx
  450f6e:	mov    ecx,edx
  450f70:	shr    ecx,0x5
  450f73:	shl    edx,0x1b
  450f76:	or     ecx,edx
  450f78:	mov    edx,ecx
  450f7a:	xor    esi,eax
  450f7c:	mov    ecx,DWORD PTR [esp+0x14]
  450f80:	shl    ecx,0x7
  450f83:	xor    esi,ecx
  450f85:	xor    edx,DWORD PTR [esp+0x14]
  450f89:	xor    edx,eax
  450f8b:	mov    ecx,eax
  450f8d:	shr    ecx,0x7
  450f90:	shl    eax,0x19
  450f93:	or     ecx,eax
  450f95:	mov    eax,ecx
  450f97:	mov    ecx,DWORD PTR [esp+0x14]
  450f9b:	shr    ecx,1
  450f9d:	mov    ebx,DWORD PTR [esp+0x14]
  450fa1:	shl    ebx,0x1f
  450fa4:	or     ecx,ebx
  450fa6:	mov    DWORD PTR [esp+0x14],ecx
  450faa:	xor    eax,esi
  450fac:	mov    ecx,edx
  450fae:	add    ecx,ecx
  450fb0:	add    ecx,ecx
  450fb2:	add    ecx,ecx
  450fb4:	xor    eax,ecx
  450fb6:	mov    ecx,DWORD PTR [esp+0x14]
  450fba:	xor    ecx,edx
  450fbc:	xor    ecx,esi
  450fbe:	mov    DWORD PTR [esp+0x14],ecx
  450fc2:	mov    ecx,esi
  450fc4:	shr    ecx,0x3
  450fc7:	shl    esi,0x1d
  450fca:	or     ecx,esi
  450fcc:	mov    esi,ecx
  450fce:	mov    ecx,edx
  450fd0:	shr    ecx,0xd
  450fd3:	shl    edx,0x13
  450fd6:	or     ecx,edx
  450fd8:	mov    edx,ecx
  450fda:	mov    ecx,eax
  450fdc:	xor    ecx,esi
  450fde:	mov    DWORD PTR [esp+0x18],ecx
  450fe2:	mov    ecx,eax
  450fe4:	or     ecx,esi
  450fe6:	mov    DWORD PTR [esp+0x1c],ecx
  450fea:	mov    ecx,DWORD PTR [esp+0x14]
  450fee:	xor    ecx,DWORD PTR [esp+0x1c]
  450ff2:	mov    DWORD PTR [esp+0x20],ecx
  450ff6:	mov    ecx,DWORD PTR [esp+0x20]
  450ffa:	and    ecx,edx
  450ffc:	mov    DWORD PTR [esp+0x24],ecx
  451000:	mov    ecx,DWORD PTR [esp+0x18]
  451004:	xor    ecx,DWORD PTR [esp+0x24]
  451008:	mov    DWORD PTR [esp+0xc],ecx
  45100c:	mov    ecx,eax
  45100e:	xor    ecx,edx
  451010:	mov    DWORD PTR [esp+0x2c],ecx
  451014:	or     eax,DWORD PTR [esp+0x14]
  451018:	mov    DWORD PTR [esp+0x30],eax
  45101c:	mov    eax,DWORD PTR [esp+0x2c]
  451020:	and    eax,DWORD PTR [esp+0x30]
  451024:	mov    DWORD PTR [esp+0x34],eax
  451028:	mov    eax,DWORD PTR [esp+0x20]
  45102c:	xor    eax,DWORD PTR [esp+0x34]
  451030:	mov    DWORD PTR [esp+0x10],eax
  451034:	not    edx
  451036:	mov    DWORD PTR [esp+0x3c],edx
  45103a:	mov    eax,DWORD PTR [esp+0x10]
  45103e:	xor    eax,esi
  451040:	mov    DWORD PTR [esp+0x40],eax
  451044:	mov    eax,DWORD PTR [esp+0x3c]
  451048:	or     eax,DWORD PTR [esp+0x40]
  45104c:	mov    DWORD PTR [esp+0x44],eax
  451050:	mov    ebx,DWORD PTR [esp+0x20]
  451054:	xor    ebx,DWORD PTR [esp+0x44]
  451058:	or     esi,DWORD PTR [esp+0x24]
  45105c:	mov    DWORD PTR [esp+0x4c],esi
  451060:	mov    eax,DWORD PTR [esp+0x30]
  451064:	xor    eax,DWORD PTR [esp+0x4c]
  451068:	mov    DWORD PTR [esp+0x50],eax
  45106c:	mov    eax,DWORD PTR [esp+0x10]
  451070:	or     eax,DWORD PTR [esp+0x3c]
  451074:	mov    DWORD PTR [esp+0x54],eax
  451078:	mov    ecx,DWORD PTR [esp+0x50]
  45107c:	xor    ecx,DWORD PTR [esp+0x54]
  451080:	mov    eax,DWORD PTR [esp+0x8]
  451084:	sub    eax,0x4
  451087:	add    eax,eax
  451089:	add    eax,eax
  45108b:	mov    edx,DWORD PTR [esp]
  45108e:	xor    ebx,DWORD PTR [edx+eax*4+0x58]
  451092:	mov    eax,DWORD PTR [esp+0x8]
  451096:	sub    eax,0x4
  451099:	add    eax,eax
  45109b:	add    eax,eax
  45109d:	mov    edx,DWORD PTR [esp]
  4510a0:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  4510a4:	xor    DWORD PTR [esp+0xc],eax
  4510a8:	mov    eax,DWORD PTR [esp+0x8]
  4510ac:	sub    eax,0x4
  4510af:	add    eax,eax
  4510b1:	add    eax,eax
  4510b3:	mov    edx,DWORD PTR [esp]
  4510b6:	xor    ecx,DWORD PTR [edx+eax*4+0x60]
  4510ba:	mov    eax,DWORD PTR [esp+0x8]
  4510be:	sub    eax,0x4
  4510c1:	add    eax,eax
  4510c3:	add    eax,eax
  4510c5:	mov    edx,DWORD PTR [esp]
  4510c8:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  4510cc:	xor    DWORD PTR [esp+0x10],eax
  4510d0:	mov    eax,ecx
  4510d2:	shr    eax,0x16
  4510d5:	shl    ecx,0xa
  4510d8:	or     eax,ecx
  4510da:	mov    ecx,eax
  4510dc:	mov    eax,ebx
  4510de:	shr    eax,0x5
  4510e1:	shl    ebx,0x1b
  4510e4:	or     eax,ebx
  4510e6:	mov    ebx,eax
  4510e8:	xor    ecx,DWORD PTR [esp+0x10]
  4510ec:	mov    eax,DWORD PTR [esp+0xc]
  4510f0:	shl    eax,0x7
  4510f3:	xor    ecx,eax
  4510f5:	xor    ebx,DWORD PTR [esp+0xc]
  4510f9:	xor    ebx,DWORD PTR [esp+0x10]
  4510fd:	mov    eax,DWORD PTR [esp+0x10]
  451101:	shr    eax,0x7
  451104:	mov    edx,DWORD PTR [esp+0x10]
  451108:	shl    edx,0x19
  45110b:	or     eax,edx
  45110d:	mov    DWORD PTR [esp+0x10],eax
  451111:	mov    eax,DWORD PTR [esp+0xc]
  451115:	shr    eax,1
  451117:	mov    edx,DWORD PTR [esp+0xc]
  45111b:	shl    edx,0x1f
  45111e:	or     eax,edx
  451120:	mov    DWORD PTR [esp+0xc],eax
  451124:	mov    eax,DWORD PTR [esp+0x10]
  451128:	xor    eax,ecx
  45112a:	mov    edx,ebx
  45112c:	add    edx,edx
  45112e:	add    edx,edx
  451130:	add    edx,edx
  451132:	xor    eax,edx
  451134:	mov    DWORD PTR [esp+0x10],eax
  451138:	mov    eax,DWORD PTR [esp+0xc]
  45113c:	xor    eax,ebx
  45113e:	xor    eax,ecx
  451140:	mov    DWORD PTR [esp+0xc],eax
  451144:	mov    eax,ecx
  451146:	shr    eax,0x3
  451149:	shl    ecx,0x1d
  45114c:	or     eax,ecx
  45114e:	mov    ecx,eax
  451150:	mov    eax,ebx
  451152:	shr    eax,0xd
  451155:	shl    ebx,0x13
  451158:	or     eax,ebx
  45115a:	mov    ebx,eax
  45115c:	mov    eax,DWORD PTR [esp+0xc]
  451160:	xor    eax,ecx
  451162:	mov    DWORD PTR [esp+0x18],eax
  451166:	mov    eax,DWORD PTR [esp+0xc]
  45116a:	or     eax,ecx
  45116c:	mov    DWORD PTR [esp+0x1c],eax
  451170:	xor    ecx,ebx
  451172:	mov    DWORD PTR [esp+0x20],ecx
  451176:	mov    eax,DWORD PTR [esp+0x1c]
  45117a:	xor    eax,DWORD PTR [esp+0x20]
  45117e:	mov    DWORD PTR [esp+0x24],eax
  451182:	mov    eax,DWORD PTR [esp+0x10]
  451186:	or     eax,DWORD PTR [esp+0x24]
  45118a:	mov    DWORD PTR [esp+0x28],eax
  45118e:	mov    edx,DWORD PTR [esp+0x18]
  451192:	xor    edx,DWORD PTR [esp+0x28]
  451196:	mov    eax,DWORD PTR [esp+0x10]
  45119a:	xor    eax,ebx
  45119c:	mov    DWORD PTR [esp+0x30],eax
  4511a0:	mov    eax,DWORD PTR [esp+0x18]
  4511a4:	or     eax,DWORD PTR [esp+0x28]
  4511a8:	mov    DWORD PTR [esp+0x34],eax
  4511ac:	mov    eax,DWORD PTR [esp+0x1c]
  4511b0:	xor    eax,DWORD PTR [esp+0x30]
  4511b4:	mov    DWORD PTR [esp+0x38],eax
  4511b8:	mov    esi,DWORD PTR [esp+0x34]
  4511bc:	xor    esi,DWORD PTR [esp+0x38]
  4511c0:	mov    eax,DWORD PTR [esp+0x24]
  4511c4:	and    eax,ebx
  4511c6:	mov    DWORD PTR [esp+0x40],eax
  4511ca:	mov    eax,DWORD PTR [esp+0x38]
  4511ce:	or     eax,edx
  4511d0:	mov    DWORD PTR [esp+0x44],eax
  4511d4:	mov    eax,DWORD PTR [esp+0x40]
  4511d8:	xor    eax,DWORD PTR [esp+0x44]
  4511dc:	mov    DWORD PTR [esp+0x14],eax
  4511e0:	and    ebx,esi
  4511e2:	mov    DWORD PTR [esp+0x4c],ebx
  4511e6:	mov    eax,DWORD PTR [esp+0x1c]
  4511ea:	xor    eax,DWORD PTR [esp+0x4c]
  4511ee:	mov    DWORD PTR [esp+0x50],eax
  4511f2:	mov    eax,DWORD PTR [esp+0x50]
  4511f6:	and    eax,edx
  4511f8:	mov    DWORD PTR [esp+0x54],eax
  4511fc:	mov    eax,DWORD PTR [esp+0x24]
  451200:	xor    eax,DWORD PTR [esp+0x54]
  451204:	mov    ecx,DWORD PTR [esp+0x8]
  451208:	sub    ecx,0x5
  45120b:	add    ecx,ecx
  45120d:	add    ecx,ecx
  45120f:	mov    ebx,DWORD PTR [esp]
  451212:	xor    edx,DWORD PTR [ebx+ecx*4+0x58]
  451216:	mov    ecx,DWORD PTR [esp+0x8]
  45121a:	sub    ecx,0x5
  45121d:	add    ecx,ecx
  45121f:	add    ecx,ecx
  451221:	mov    ebx,DWORD PTR [esp]
  451224:	mov    ecx,DWORD PTR [ebx+ecx*4+0x5c]
  451228:	xor    DWORD PTR [esp+0x14],ecx
  45122c:	mov    ecx,DWORD PTR [esp+0x8]
  451230:	sub    ecx,0x5
  451233:	add    ecx,ecx
  451235:	add    ecx,ecx
  451237:	mov    ebx,DWORD PTR [esp]
  45123a:	xor    esi,DWORD PTR [ebx+ecx*4+0x60]
  45123e:	mov    ecx,DWORD PTR [esp+0x8]
  451242:	sub    ecx,0x5
  451245:	add    ecx,ecx
  451247:	add    ecx,ecx
  451249:	mov    ebx,DWORD PTR [esp]
  45124c:	xor    eax,DWORD PTR [ebx+ecx*4+0x64]
  451250:	mov    ecx,esi
  451252:	shr    ecx,0x16
  451255:	shl    esi,0xa
  451258:	or     ecx,esi
  45125a:	mov    esi,ecx
  45125c:	mov    ecx,edx
  45125e:	shr    ecx,0x5
  451261:	shl    edx,0x1b
  451264:	or     ecx,edx
  451266:	mov    edx,ecx
  451268:	xor    esi,eax
  45126a:	mov    ecx,DWORD PTR [esp+0x14]
  45126e:	shl    ecx,0x7
  451271:	xor    esi,ecx
  451273:	xor    edx,DWORD PTR [esp+0x14]
  451277:	xor    edx,eax
  451279:	mov    ecx,eax
  45127b:	shr    ecx,0x7
  45127e:	shl    eax,0x19
  451281:	or     ecx,eax
  451283:	mov    eax,ecx
  451285:	mov    ecx,DWORD PTR [esp+0x14]
  451289:	shr    ecx,1
  45128b:	mov    ebx,DWORD PTR [esp+0x14]
  45128f:	shl    ebx,0x1f
  451292:	or     ecx,ebx
  451294:	mov    DWORD PTR [esp+0x14],ecx
  451298:	xor    eax,esi
  45129a:	mov    ecx,edx
  45129c:	add    ecx,ecx
  45129e:	add    ecx,ecx
  4512a0:	add    ecx,ecx
  4512a2:	xor    eax,ecx
  4512a4:	mov    ecx,DWORD PTR [esp+0x14]
  4512a8:	xor    ecx,edx
  4512aa:	xor    ecx,esi
  4512ac:	mov    DWORD PTR [esp+0x14],ecx
  4512b0:	mov    ecx,esi
  4512b2:	shr    ecx,0x3
  4512b5:	shl    esi,0x1d
  4512b8:	or     ecx,esi
  4512ba:	mov    esi,ecx
  4512bc:	mov    ecx,edx
  4512be:	shr    ecx,0xd
  4512c1:	shl    edx,0x13
  4512c4:	or     ecx,edx
  4512c6:	mov    edx,ecx
  4512c8:	mov    ecx,DWORD PTR [esp+0x14]
  4512cc:	xor    ecx,eax
  4512ce:	mov    DWORD PTR [esp+0x18],ecx
  4512d2:	mov    ecx,DWORD PTR [esp+0x18]
  4512d6:	not    ecx
  4512d8:	mov    DWORD PTR [esp+0x1c],ecx
  4512dc:	mov    ecx,esi
  4512de:	xor    ecx,edx
  4512e0:	mov    DWORD PTR [esp+0x20],ecx
  4512e4:	xor    esi,DWORD PTR [esp+0x18]
  4512e8:	mov    DWORD PTR [esp+0x24],esi
  4512ec:	mov    ecx,DWORD PTR [esp+0x14]
  4512f0:	and    ecx,DWORD PTR [esp+0x24]
  4512f4:	mov    DWORD PTR [esp+0x28],ecx
  4512f8:	mov    ebx,DWORD PTR [esp+0x20]
  4512fc:	xor    ebx,DWORD PTR [esp+0x28]
  451300:	or     edx,DWORD PTR [esp+0x1c]
  451304:	mov    DWORD PTR [esp+0x30],edx
  451308:	mov    edx,DWORD PTR [esp+0x30]
  45130c:	xor    edx,eax
  45130e:	mov    DWORD PTR [esp+0x34],edx
  451312:	mov    edx,DWORD PTR [esp+0x20]
  451316:	or     edx,DWORD PTR [esp+0x34]
  45131a:	mov    DWORD PTR [esp+0x38],edx
  45131e:	mov    edx,DWORD PTR [esp+0x18]
  451322:	xor    edx,DWORD PTR [esp+0x38]
  451326:	mov    DWORD PTR [esp+0x10],edx
  45132a:	mov    edx,DWORD PTR [esp+0x24]
  45132e:	not    edx
  451330:	mov    DWORD PTR [esp+0x40],edx
  451334:	mov    edx,DWORD PTR [esp+0x10]
  451338:	or     edx,ebx
  45133a:	mov    DWORD PTR [esp+0x44],edx
  45133e:	mov    edx,DWORD PTR [esp+0x40]
  451342:	xor    edx,DWORD PTR [esp+0x44]
  451346:	mov    DWORD PTR [esp+0xc],edx
  45134a:	and    eax,DWORD PTR [esp+0x40]
  45134e:	mov    DWORD PTR [esp+0x4c],eax
  451352:	mov    eax,DWORD PTR [esp+0x20]
  451356:	xor    eax,DWORD PTR [esp+0x44]
  45135a:	mov    DWORD PTR [esp+0x50],eax
  45135e:	mov    ecx,DWORD PTR [esp+0x4c]
  451362:	xor    ecx,DWORD PTR [esp+0x50]
  451366:	mov    eax,DWORD PTR [esp+0x8]
  45136a:	sub    eax,0x6
  45136d:	add    eax,eax
  45136f:	add    eax,eax
  451371:	mov    edx,DWORD PTR [esp]
  451374:	xor    ebx,DWORD PTR [edx+eax*4+0x58]
  451378:	mov    eax,DWORD PTR [esp+0x8]
  45137c:	sub    eax,0x6
  45137f:	add    eax,eax
  451381:	add    eax,eax
  451383:	mov    edx,DWORD PTR [esp]
  451386:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  45138a:	xor    DWORD PTR [esp+0xc],eax
  45138e:	mov    eax,DWORD PTR [esp+0x8]
  451392:	sub    eax,0x6
  451395:	add    eax,eax
  451397:	add    eax,eax
  451399:	mov    edx,DWORD PTR [esp]
  45139c:	xor    ecx,DWORD PTR [edx+eax*4+0x60]
  4513a0:	mov    eax,DWORD PTR [esp+0x8]
  4513a4:	sub    eax,0x6
  4513a7:	add    eax,eax
  4513a9:	add    eax,eax
  4513ab:	mov    edx,DWORD PTR [esp]
  4513ae:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  4513b2:	xor    DWORD PTR [esp+0x10],eax
  4513b6:	mov    eax,ecx
  4513b8:	shr    eax,0x16
  4513bb:	shl    ecx,0xa
  4513be:	or     eax,ecx
  4513c0:	mov    ecx,eax
  4513c2:	mov    eax,ebx
  4513c4:	shr    eax,0x5
  4513c7:	shl    ebx,0x1b
  4513ca:	or     eax,ebx
  4513cc:	mov    ebx,eax
  4513ce:	xor    ecx,DWORD PTR [esp+0x10]
  4513d2:	mov    eax,DWORD PTR [esp+0xc]
  4513d6:	shl    eax,0x7
  4513d9:	xor    ecx,eax
  4513db:	xor    ebx,DWORD PTR [esp+0xc]
  4513df:	xor    ebx,DWORD PTR [esp+0x10]
  4513e3:	mov    eax,DWORD PTR [esp+0x10]
  4513e7:	shr    eax,0x7
  4513ea:	mov    edx,DWORD PTR [esp+0x10]
  4513ee:	shl    edx,0x19
  4513f1:	or     eax,edx
  4513f3:	mov    DWORD PTR [esp+0x10],eax
  4513f7:	mov    eax,DWORD PTR [esp+0xc]
  4513fb:	shr    eax,1
  4513fd:	mov    edx,DWORD PTR [esp+0xc]
  451401:	shl    edx,0x1f
  451404:	or     eax,edx
  451406:	mov    DWORD PTR [esp+0xc],eax
  45140a:	mov    eax,DWORD PTR [esp+0x10]
  45140e:	xor    eax,ecx
  451410:	mov    edx,ebx
  451412:	add    edx,edx
  451414:	add    edx,edx
  451416:	add    edx,edx
  451418:	xor    eax,edx
  45141a:	mov    DWORD PTR [esp+0x10],eax
  45141e:	mov    eax,DWORD PTR [esp+0xc]
  451422:	xor    eax,ebx
  451424:	xor    eax,ecx
  451426:	mov    DWORD PTR [esp+0xc],eax
  45142a:	mov    eax,ecx
  45142c:	shr    eax,0x3
  45142f:	shl    ecx,0x1d
  451432:	or     eax,ecx
  451434:	mov    ecx,eax
  451436:	mov    eax,ebx
  451438:	shr    eax,0xd
  45143b:	shl    ebx,0x13
  45143e:	or     eax,ebx
  451440:	mov    ebx,eax
  451442:	mov    eax,DWORD PTR [esp+0x10]
  451446:	xor    eax,ebx
  451448:	mov    DWORD PTR [esp+0x18],eax
  45144c:	mov    eax,DWORD PTR [esp+0xc]
  451450:	and    eax,ebx
  451452:	mov    DWORD PTR [esp+0x1c],eax
  451456:	mov    eax,DWORD PTR [esp+0xc]
  45145a:	xor    eax,ecx
  45145c:	mov    DWORD PTR [esp+0x20],eax
  451460:	mov    eax,DWORD PTR [esp+0x20]
  451464:	xor    eax,ebx
  451466:	mov    DWORD PTR [esp+0x24],eax
  45146a:	mov    eax,DWORD PTR [esp+0xc]
  45146e:	or     eax,DWORD PTR [esp+0x10]
  451472:	mov    DWORD PTR [esp+0x28],eax
  451476:	mov    eax,DWORD PTR [esp+0x24]
  45147a:	xor    eax,DWORD PTR [esp+0x28]
  45147e:	mov    edx,DWORD PTR [esp+0x18]
  451482:	or     edx,ecx
  451484:	mov    DWORD PTR [esp+0x30],edx
  451488:	mov    edx,DWORD PTR [esp+0xc]
  45148c:	xor    edx,DWORD PTR [esp+0x30]
  451490:	mov    DWORD PTR [esp+0x34],edx
  451494:	mov    edx,DWORD PTR [esp+0x24]
  451498:	and    edx,DWORD PTR [esp+0x34]
  45149c:	mov    DWORD PTR [esp+0x38],edx
  4514a0:	mov    edx,DWORD PTR [esp+0x18]
  4514a4:	xor    edx,DWORD PTR [esp+0x38]
  4514a8:	mov    DWORD PTR [esp+0x14],edx
  4514ac:	mov    edx,DWORD PTR [esp+0x1c]
  4514b0:	not    edx
  4514b2:	mov    DWORD PTR [esp+0x40],edx
  4514b6:	mov    edx,DWORD PTR [esp+0x14]
  4514ba:	and    edx,eax
  4514bc:	mov    DWORD PTR [esp+0x44],edx
  4514c0:	mov    edx,DWORD PTR [esp+0x38]
  4514c4:	xor    edx,DWORD PTR [esp+0x40]
  4514c8:	mov    DWORD PTR [esp+0x48],edx
  4514cc:	mov    esi,DWORD PTR [esp+0x44]
  4514d0:	xor    esi,DWORD PTR [esp+0x48]
  4514d4:	and    ebx,DWORD PTR [esp+0x10]
  4514d8:	mov    DWORD PTR [esp+0x50],ebx
  4514dc:	xor    ecx,DWORD PTR [esp+0x48]
  4514e0:	mov    DWORD PTR [esp+0x54],ecx
  4514e4:	mov    edx,DWORD PTR [esp+0x50]
  4514e8:	xor    edx,DWORD PTR [esp+0x54]
  4514ec:	mov    ecx,DWORD PTR [esp+0x8]
  4514f0:	sub    ecx,0x7
  4514f3:	add    ecx,ecx
  4514f5:	add    ecx,ecx
  4514f7:	mov    ebx,DWORD PTR [esp]
  4514fa:	xor    edx,DWORD PTR [ebx+ecx*4+0x58]
  4514fe:	mov    ecx,DWORD PTR [esp+0x8]
  451502:	sub    ecx,0x7
  451505:	add    ecx,ecx
  451507:	add    ecx,ecx
  451509:	mov    ebx,DWORD PTR [esp]
  45150c:	mov    ecx,DWORD PTR [ebx+ecx*4+0x5c]
  451510:	xor    DWORD PTR [esp+0x14],ecx
  451514:	mov    ecx,DWORD PTR [esp+0x8]
  451518:	sub    ecx,0x7
  45151b:	add    ecx,ecx
  45151d:	add    ecx,ecx
  45151f:	mov    ebx,DWORD PTR [esp]
  451522:	xor    esi,DWORD PTR [ebx+ecx*4+0x60]
  451526:	mov    ecx,DWORD PTR [esp+0x8]
  45152a:	sub    ecx,0x7
  45152d:	add    ecx,ecx
  45152f:	add    ecx,ecx
  451531:	mov    ebx,DWORD PTR [esp]
  451534:	xor    eax,DWORD PTR [ebx+ecx*4+0x64]
  451538:	mov    ecx,esi
  45153a:	shr    ecx,0x16
  45153d:	shl    esi,0xa
  451540:	or     ecx,esi
  451542:	mov    esi,ecx
  451544:	mov    ecx,edx
  451546:	shr    ecx,0x5
  451549:	shl    edx,0x1b
  45154c:	or     ecx,edx
  45154e:	mov    edx,ecx
  451550:	xor    esi,eax
  451552:	mov    ecx,DWORD PTR [esp+0x14]
  451556:	shl    ecx,0x7
  451559:	xor    esi,ecx
  45155b:	xor    edx,DWORD PTR [esp+0x14]
  45155f:	xor    edx,eax
  451561:	mov    ecx,eax
  451563:	shr    ecx,0x7
  451566:	shl    eax,0x19
  451569:	or     ecx,eax
  45156b:	mov    eax,ecx
  45156d:	mov    ecx,DWORD PTR [esp+0x14]
  451571:	shr    ecx,1
  451573:	mov    ebx,DWORD PTR [esp+0x14]
  451577:	shl    ebx,0x1f
  45157a:	or     ecx,ebx
  45157c:	mov    DWORD PTR [esp+0x14],ecx
  451580:	xor    eax,esi
  451582:	mov    ecx,edx
  451584:	add    ecx,ecx
  451586:	add    ecx,ecx
  451588:	add    ecx,ecx
  45158a:	xor    eax,ecx
  45158c:	mov    ecx,DWORD PTR [esp+0x14]
  451590:	xor    ecx,edx
  451592:	xor    ecx,esi
  451594:	mov    DWORD PTR [esp+0x14],ecx
  451598:	mov    ecx,esi
  45159a:	shr    ecx,0x3
  45159d:	shl    esi,0x1d
  4515a0:	or     ecx,esi
  4515a2:	mov    esi,ecx
  4515a4:	mov    ecx,edx
  4515a6:	shr    ecx,0xd
  4515a9:	shl    edx,0x13
  4515ac:	or     ecx,edx
  4515ae:	mov    edx,ecx
  4515b0:	mov    ecx,eax
  4515b2:	xor    ecx,edx
  4515b4:	mov    DWORD PTR [esp+0x18],ecx
  4515b8:	mov    ecx,eax
  4515ba:	xor    ecx,esi
  4515bc:	mov    DWORD PTR [esp+0x1c],ecx
  4515c0:	mov    ecx,DWORD PTR [esp+0x1c]
  4515c4:	not    ecx
  4515c6:	mov    DWORD PTR [esp+0x20],ecx
  4515ca:	mov    ecx,DWORD PTR [esp+0x14]
  4515ce:	or     ecx,edx
  4515d0:	mov    DWORD PTR [esp+0x24],ecx
  4515d4:	mov    ecx,DWORD PTR [esp+0x20]
  4515d8:	xor    ecx,DWORD PTR [esp+0x24]
  4515dc:	mov    ebx,DWORD PTR [esp+0x14]
  4515e0:	xor    ebx,DWORD PTR [esp+0x18]
  4515e4:	mov    DWORD PTR [esp+0x2c],ebx
  4515e8:	or     esi,DWORD PTR [esp+0x2c]
  4515ec:	mov    DWORD PTR [esp+0x30],esi
  4515f0:	xor    edx,DWORD PTR [esp+0x30]
  4515f4:	mov    DWORD PTR [esp+0x34],edx
  4515f8:	mov    edx,DWORD PTR [esp+0x1c]
  4515fc:	and    edx,DWORD PTR [esp+0x34]
  451600:	mov    DWORD PTR [esp+0x38],edx
  451604:	mov    edx,DWORD PTR [esp+0x2c]
  451608:	xor    edx,DWORD PTR [esp+0x38]
  45160c:	mov    DWORD PTR [esp+0xc],edx
  451610:	mov    edx,DWORD PTR [esp+0x34]
  451614:	not    edx
  451616:	mov    DWORD PTR [esp+0x40],edx
  45161a:	and    eax,DWORD PTR [esp+0x14]
  45161e:	mov    DWORD PTR [esp+0x44],eax
  451622:	mov    eax,DWORD PTR [esp+0xc]
  451626:	or     eax,DWORD PTR [esp+0x44]
  45162a:	mov    DWORD PTR [esp+0x48],eax
  45162e:	mov    eax,DWORD PTR [esp+0x40]
  451632:	xor    eax,DWORD PTR [esp+0x48]
  451636:	mov    DWORD PTR [esp+0x10],eax
  45163a:	mov    eax,DWORD PTR [esp+0x1c]
  45163e:	xor    eax,DWORD PTR [esp+0x44]
  451642:	mov    DWORD PTR [esp+0x50],eax
  451646:	mov    eax,DWORD PTR [esp+0xc]
  45164a:	or     eax,DWORD PTR [esp+0x10]
  45164e:	mov    DWORD PTR [esp+0x54],eax
  451652:	mov    ebx,DWORD PTR [esp+0x50]
  451656:	xor    ebx,DWORD PTR [esp+0x54]
  45165a:	mov    eax,DWORD PTR [esp+0x8]
  45165e:	sub    eax,0x8
  451661:	add    eax,eax
  451663:	add    eax,eax
  451665:	mov    edx,DWORD PTR [esp]
  451668:	xor    ebx,DWORD PTR [edx+eax*4+0x58]
  45166c:	mov    eax,DWORD PTR [esp+0x8]
  451670:	sub    eax,0x8
  451673:	add    eax,eax
  451675:	add    eax,eax
  451677:	mov    edx,DWORD PTR [esp]
  45167a:	mov    eax,DWORD PTR [edx+eax*4+0x5c]
  45167e:	xor    DWORD PTR [esp+0xc],eax
  451682:	mov    eax,DWORD PTR [esp+0x8]
  451686:	sub    eax,0x8
  451689:	add    eax,eax
  45168b:	add    eax,eax
  45168d:	mov    edx,DWORD PTR [esp]
  451690:	xor    ecx,DWORD PTR [edx+eax*4+0x60]
  451694:	mov    eax,DWORD PTR [esp+0x8]
  451698:	sub    eax,0x8
  45169b:	add    eax,eax
  45169d:	add    eax,eax
  45169f:	mov    edx,DWORD PTR [esp]
  4516a2:	mov    eax,DWORD PTR [edx+eax*4+0x64]
  4516a6:	xor    DWORD PTR [esp+0x10],eax
  4516aa:	sub    DWORD PTR [esp+0x8],0x8
  4516af:	cmp    DWORD PTR [esp+0x8],0x0
  4516b4:	jg     0x450af3
  4516ba:	mov    eax,DWORD PTR [esp+0x4]
  4516be:	mov    DWORD PTR [eax],ebx
  4516c0:	mov    eax,DWORD PTR [esp+0x4]
  4516c4:	add    eax,0x4
  4516c7:	mov    edx,DWORD PTR [esp+0xc]
  4516cb:	mov    DWORD PTR [eax],edx
  4516cd:	mov    eax,DWORD PTR [esp+0x4]
  4516d1:	add    eax,0x8
  4516d4:	mov    DWORD PTR [eax],ecx
  4516d6:	mov    eax,DWORD PTR [esp+0x4]
  4516da:	add    eax,0xc
  4516dd:	mov    edx,DWORD PTR [esp+0x10]
  4516e1:	mov    DWORD PTR [eax],edx
  4516e3:	add    esp,0x58
  4516e6:	pop    esi
  4516e7:	pop    ebx
  4516e8:	ret    
  4516e9:	add    BYTE PTR [eax],al
  4516eb:	add    bh,bh
  4516ed:	(bad)  
  4516ee:	(bad)  
  4516ef:	call   DWORD PTR [esi]
  4516f1:	add    BYTE PTR [eax],al
  4516f3:	add    BYTE PTR [ebx+0x69],al
  4516f6:	jo     0x451760
  4516f8:	gs jb  0x45171b
  4516fb:	outs   dx,BYTE PTR ds:[esi]
  4516fc:	outs   dx,DWORD PTR ds:[esi]
  4516fd:	je     0x45171f
  4516ff:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  451706:	imul   edi,DWORD PTR [edx+0x65],0x58000064
  45170d:	pop    ss
  45170e:	inc    ebp
	...
  45171b:	add    BYTE PTR [eax+ebx*1],al
  45171e:	inc    ebp
	...
  45172b:	add    ah,dh
  45172d:	pop    ss
  45172e:	inc    ebp
  45172f:	add    BYTE PTR [eax+0x0],bl
  451732:	add    BYTE PTR [eax],al
  451734:	and    BYTE PTR [ebx],0x44
  451737:	add    BYTE PTR [eax],bl
  451739:	test   eax,0x42dc0041
  45173e:	inc    eax
  45173f:	add    BYTE PTR [eax-0x1bffbe5e],ch
  451745:	inc    edx
  451746:	inc    eax
  451747:	add    al,bl
  451749:	inc    edx
  45174a:	inc    eax
  45174b:	add    BYTE PTR [eax],bh
  45174d:	inc    eax
  45174e:	inc    eax
  45174f:	add    BYTE PTR [eax+eax*2+0x40],dl
  451753:	add    BYTE PTR [eax+0x20],bh
  451756:	inc    esp
  451757:	add    BYTE PTR [eax+0x41],ch
  45175a:	inc    ecx
  45175b:	add    BYTE PTR [eax-0x5b],dh
  45175e:	inc    ecx
  45175f:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  451766:	inc    ecx
  451767:	add    BYTE PTR [eax],dl
  451769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45176a:	inc    ecx
  45176b:	add    BYTE PTR [eax-0x5a],bl
  45176e:	inc    ecx
  45176f:	add    BYTE PTR [eax-0x59],dl
  451772:	inc    ecx
  451773:	add    BYTE PTR [eax],dh
  451775:	test   eax,0xa6680041
  45177a:	inc    ecx
  45177b:	add    BYTE PTR [eax-0x5a],ah
  45177e:	inc    ecx
  45177f:	add    BYTE PTR [eax],bh
  451781:	test   eax,0x231c0041
  451786:	inc    esp
  451787:	add    BYTE PTR [eax+0x18],bl
  45178a:	inc    ebp
  45178b:	add    BYTE PTR [eax+0x18],ah
  45178e:	inc    ebp
  45178f:	add    BYTE PTR [eax-0x77ffbae8],al
  451795:	sbb    BYTE PTR [ebp+0x0],al
  451798:	or     BYTE PTR [esi],ah
  45179a:	inc    esp
  45179b:	add    BYTE PTR [eax+0x19],dh
  45179e:	inc    ebp
  45179f:	add    BYTE PTR [eax],ah
  4517a1:	daa    
  4517a2:	inc    esp
  4517a3:	add    ah,al
  4517a5:	and    BYTE PTR [eax+eax*1+0x38],al
  4517a9:	and    al,BYTE PTR [eax+eax*1+0x4c]
  4517ad:	and    DWORD PTR [eax+eax*1-0x14],eax
  4517b1:	and    DWORD PTR [eax+eax*1+0x18],eax
  4517b5:	sbb    DWORD PTR [ebp+0x0],eax
  4517b8:	add    BYTE PTR [esi],ah
  4517ba:	inc    esp
  4517bb:	add    BYTE PTR [esi+eiz*1+0x44],bh
  4517bf:	add    ah,dl
  4517c1:	es inc esp
  4517c3:	add    BYTE PTR [ecx+ebx*1+0x1a6c0045],cl
  4517ca:	inc    ebp
  4517cb:	add    BYTE PTR [eax-0x6bffbbd9],ah
  4517d1:	sub    BYTE PTR [eax+eax*1-0x64],al
  4517d5:	sub    DWORD PTR [eax+eax*1+0x38],eax
  4517d9:	sub    al,BYTE PTR [eax+eax*1-0x24]
  4517dd:	sub    al,BYTE PTR [eax+eax*1-0x38]
  4517e1:	sub    eax,DWORD PTR [eax+eax*1-0x38]
  4517e5:	sub    al,0x44
  4517e7:	add    BYTE PTR [eax-0x77ffbbd3],ch
  4517ed:	cs inc esp
  4517ef:	add    BYTE PTR [eax+0x2f],bh
  4517f2:	inc    esp
  4517f3:	add    BYTE PTR [eax],cl
  4517f5:	push   esp
  4517f6:	inc    esp
  4517f7:	inc    ebx
  4517f8:	push   eax
  4517f9:	pop    edi
  4517fa:	je     0x451861
  4517fc:	popa   
  4517fd:	lea    eax,[eax+0x0]
  451800:	add    al,0x18
  451802:	inc    ebp
  451803:	add    BYTE PTR [edi],al
  451805:	or     BYTE PTR [esp+eax*2+0x43],dl
  451809:	push   eax
  45180a:	pop    edi
  45180b:	je     0x451872
  45180d:	popa   
  45180e:	pop    eax
  45180f:	pop    ss
  451810:	inc    ebp
  451811:	add    BYTE PTR [esp+0x44],bh
  451815:	add    BYTE PTR [edi],al
  451817:	add    BYTE PTR [esi],al
  451819:	inc    esp
  45181a:	inc    ebx
  45181b:	push   eax
  45181c:	je     0x451883
  45181e:	popa   
  45181f:	add    BYTE PTR [eax],al
  451821:	lea    eax,[eax+0x0]
  451824:	mov    edx,eax
  451826:	and    edx,0xff
  45182c:	shl    edx,0x18
  45182f:	mov    ecx,eax
  451831:	and    ecx,0xff00
  451837:	shl    ecx,0x8
  45183a:	or     edx,ecx
  45183c:	mov    ecx,eax
  45183e:	and    ecx,0xff0000
  451844:	shr    ecx,0x8
  451847:	or     edx,ecx
  451849:	and    eax,0xff000000
  45184e:	shr    eax,0x18
  451851:	or     edx,eax
  451853:	mov    eax,edx
  451855:	ret    
  451856:	mov    eax,eax
  451858:	mov    eax,0x19
  45185d:	ret    
  45185e:	mov    eax,eax
  451860:	push   ebx
  451861:	mov    ebx,edx
  451863:	mov    eax,ebx
  451865:	mov    edx,0x45187c
  45186a:	call   0x404fdc
  45186f:	pop    ebx
  451870:	ret    
  451871:	add    BYTE PTR [eax],al
  451873:	add    bh,bh
  451875:	(bad)  
  451876:	(bad)  
  451877:	inc    DWORD PTR [ebx]
  451879:	add    BYTE PTR [eax],al
  45187b:	add    BYTE PTR [ebp+eiz*2+0x61],dl
  45187f:	add    BYTE PTR [eax+0x80],bh
  451885:	ret    
  451886:	mov    eax,eax
  451888:	push   ebx
  451889:	push   esi
  45188a:	push   edi
  45188b:	add    esp,0xfffffff8
  45188e:	xor    ecx,ecx
  451890:	mov    dl,0x1
  451892:	mov    eax,ds:0x45170c
  451897:	call   0x44231c
  45189c:	mov    esi,eax
  45189e:	push   0x0
  4518a0:	mov    edx,0x46d528
  4518a5:	mov    ecx,0x80
  4518aa:	mov    eax,esi
  4518ac:	mov    ebx,DWORD PTR [eax]
  4518ae:	call   DWORD PTR [ebx+0x40]
  4518b1:	mov    ecx,esp
  4518b3:	mov    edx,0x46d538
  4518b8:	mov    eax,esi
  4518ba:	mov    ebx,DWORD PTR [eax]
  4518bc:	call   DWORD PTR [ebx+0x6c]
  4518bf:	mov    edx,0x46d538
  4518c4:	mov    eax,esp
  4518c6:	mov    ecx,0x8
  4518cb:	call   0x408538
  4518d0:	mov    ebx,eax
  4518d2:	xor    bl,0x1
  4518d5:	mov    ecx,esp
  4518d7:	mov    edx,esp
  4518d9:	mov    eax,esi
  4518db:	mov    edi,DWORD PTR [eax]
  4518dd:	call   DWORD PTR [edi+0x70]
  4518e0:	test   bl,bl
  4518e2:	je     0x4518f9
  4518e4:	mov    edx,0x46d538
  4518e9:	mov    eax,esp
  4518eb:	mov    ecx,0x8
  4518f0:	call   0x408538
  4518f5:	test   al,al
  4518f7:	jne    0x4518fd
  4518f9:	xor    eax,eax
  4518fb:	jmp    0x4518ff
  4518fd:	mov    al,0x1
  4518ff:	mov    ebx,eax
  451901:	mov    eax,esi
  451903:	mov    edx,DWORD PTR [eax]
  451905:	call   DWORD PTR [edx+0x44]
  451908:	mov    eax,esi
  45190a:	call   0x4040a0
  45190f:	mov    eax,ebx
  451911:	pop    ecx
  451912:	pop    edx
  451913:	pop    edi
  451914:	pop    esi
  451915:	pop    ebx
  451916:	ret    
  451917:	nop
  451918:	push   ebx
  451919:	push   esi
  45191a:	push   edi
  45191b:	mov    edi,ecx
  45191d:	mov    esi,edx
  45191f:	mov    ebx,eax
  451921:	lea    eax,[ebx+0x48]
  451924:	xor    ecx,ecx
  451926:	mov    edx,0x10
  45192b:	call   0x4037c8
  451930:	mov    ecx,edi
  451932:	shr    ecx,0x3
  451935:	lea    edx,[ebx+0x48]
  451938:	mov    eax,esi
  45193a:	call   0x403090
  45193f:	mov    eax,DWORD PTR [ebx+0x48]
  451942:	call   0x451824
  451947:	mov    DWORD PTR [ebx+0x48],eax
  45194a:	mov    eax,DWORD PTR [ebx+0x4c]
  45194d:	call   0x451824
  451952:	mov    DWORD PTR [ebx+0x4c],eax
  451955:	mov    eax,DWORD PTR [ebx+0x50]
  451958:	call   0x451824
  45195d:	mov    DWORD PTR [ebx+0x50],eax
  451960:	mov    eax,DWORD PTR [ebx+0x54]
  451963:	call   0x451824
  451968:	mov    DWORD PTR [ebx+0x54],eax
  45196b:	pop    edi
  45196c:	pop    esi
  45196d:	pop    ebx
  45196e:	ret    
  45196f:	nop
  451970:	push   ebx
  451971:	mov    ebx,eax
  451973:	lea    eax,[ebx+0x48]
  451976:	xor    ecx,ecx
  451978:	mov    edx,0x10
  45197d:	call   0x4037c8
  451982:	mov    eax,ebx
  451984:	call   0x442770
  451989:	pop    ebx
  45198a:	ret    
  45198b:	nop
  45198c:	push   ebx
  45198d:	push   esi
  45198e:	push   edi
  45198f:	push   ebp
  451990:	add    esp,0xfffffff0
  451993:	mov    DWORD PTR [esp],ecx
  451996:	mov    esi,edx
  451998:	mov    edi,eax
  45199a:	cmp    BYTE PTR [edi+0x30],0x0
  45199e:	jne    0x4519b6
  4519a0:	mov    ecx,0x451a54
  4519a5:	mov    dl,0x1
  4519a7:	mov    eax,ds:0x441af8
  4519ac:	call   0x40c8b4
  4519b1:	call   0x4048fc
  4519b6:	mov    eax,DWORD PTR [esi]
  4519b8:	call   0x451824
  4519bd:	mov    ebx,eax
  4519bf:	add    esi,0x4
  4519c2:	mov    eax,DWORD PTR [esi]
  4519c4:	call   0x451824
  4519c9:	mov    esi,eax
  4519cb:	xor    eax,eax
  4519cd:	mov    ecx,DWORD PTR [edi+0x48]
  4519d0:	mov    edx,DWORD PTR [edi+0x4c]
  4519d3:	mov    DWORD PTR [esp+0x4],edx
  4519d7:	mov    edx,DWORD PTR [edi+0x50]
  4519da:	mov    DWORD PTR [esp+0x8],edx
  4519de:	mov    edx,DWORD PTR [edi+0x54]
  4519e1:	mov    DWORD PTR [esp+0xc],edx
  4519e5:	mov    edx,0x20
  4519ea:	add    eax,0x9e3779b9
  4519ef:	mov    edi,esi
  4519f1:	shl    edi,0x4
  4519f4:	mov    ebp,esi
  4519f6:	xor    ebp,ecx
  4519f8:	add    edi,ebp
  4519fa:	mov    ebp,esi
  4519fc:	shr    ebp,0x5
  4519ff:	xor    ebp,eax
  451a01:	add    edi,ebp
  451a03:	add    edi,DWORD PTR [esp+0x4]
  451a07:	add    ebx,edi
  451a09:	mov    edi,ebx
  451a0b:	shl    edi,0x4
  451a0e:	mov    ebp,DWORD PTR [esp+0x8]
  451a12:	xor    ebp,ebx
  451a14:	add    edi,ebp
  451a16:	mov    ebp,ebx
  451a18:	shr    ebp,0x5
  451a1b:	xor    ebp,eax
  451a1d:	add    edi,ebp
  451a1f:	add    edi,DWORD PTR [esp+0xc]
  451a23:	add    esi,edi
  451a25:	dec    edx
  451a26:	jne    0x4519ea
  451a28:	mov    eax,ebx
  451a2a:	call   0x451824
  451a2f:	mov    edx,DWORD PTR [esp]
  451a32:	mov    DWORD PTR [edx],eax
  451a34:	mov    eax,esi
  451a36:	call   0x451824
  451a3b:	mov    edx,DWORD PTR [esp]
  451a3e:	add    edx,0x4
  451a41:	mov    DWORD PTR [edx],eax
  451a43:	add    esp,0x10
  451a46:	pop    ebp
  451a47:	pop    edi
  451a48:	pop    esi
  451a49:	pop    ebx
  451a4a:	ret    
  451a4b:	add    bh,bh
  451a4d:	(bad)  
  451a4e:	(bad)  
  451a4f:	call   DWORD PTR [esi]
  451a51:	add    BYTE PTR [eax],al
  451a53:	add    BYTE PTR [ebx+0x69],al
  451a56:	jo     0x451ac0
  451a58:	gs jb  0x451a7b
  451a5b:	outs   dx,BYTE PTR ds:[esi]
  451a5c:	outs   dx,DWORD PTR ds:[esi]
  451a5d:	je     0x451a7f
  451a5f:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  451a66:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  451a6d:	push   esi
  451a6e:	push   edi
  451a6f:	push   ebp
  451a70:	add    esp,0xfffffff0
  451a73:	mov    DWORD PTR [esp],ecx
  451a76:	mov    esi,edx
  451a78:	mov    edi,eax
  451a7a:	cmp    BYTE PTR [edi+0x30],0x0
  451a7e:	jne    0x451a96
  451a80:	mov    ecx,0x451b38
  451a85:	mov    dl,0x1
  451a87:	mov    eax,ds:0x441af8
  451a8c:	call   0x40c8b4
  451a91:	call   0x4048fc
  451a96:	mov    eax,DWORD PTR [esi]
  451a98:	call   0x451824
  451a9d:	mov    ebx,eax
  451a9f:	add    esi,0x4
  451aa2:	mov    eax,DWORD PTR [esi]
  451aa4:	call   0x451824
  451aa9:	mov    esi,eax
  451aab:	mov    eax,0xc6ef3720
  451ab0:	mov    ecx,DWORD PTR [edi+0x48]
  451ab3:	mov    edx,DWORD PTR [edi+0x4c]
  451ab6:	mov    DWORD PTR [esp+0x4],edx
  451aba:	mov    edx,DWORD PTR [edi+0x50]
  451abd:	mov    DWORD PTR [esp+0x8],edx
  451ac1:	mov    edx,DWORD PTR [edi+0x54]
  451ac4:	mov    DWORD PTR [esp+0xc],edx
  451ac8:	mov    edx,0x20
  451acd:	mov    edi,ebx
  451acf:	shl    edi,0x4
  451ad2:	mov    ebp,DWORD PTR [esp+0x8]
  451ad6:	xor    ebp,ebx
  451ad8:	add    edi,ebp
  451ada:	mov    ebp,ebx
  451adc:	shr    ebp,0x5
  451adf:	xor    ebp,eax
  451ae1:	add    edi,ebp
  451ae3:	add    edi,DWORD PTR [esp+0xc]
  451ae7:	sub    esi,edi
  451ae9:	mov    edi,esi
  451aeb:	shl    edi,0x4
  451aee:	mov    ebp,esi
  451af0:	xor    ebp,ecx
  451af2:	add    edi,ebp
  451af4:	mov    ebp,esi
  451af6:	shr    ebp,0x5
  451af9:	xor    ebp,eax
  451afb:	add    edi,ebp
  451afd:	add    edi,DWORD PTR [esp+0x4]
  451b01:	sub    ebx,edi
  451b03:	sub    eax,0x9e3779b9
  451b08:	dec    edx
  451b09:	jne    0x451acd
  451b0b:	mov    eax,ebx
  451b0d:	call   0x451824
  451b12:	mov    edx,DWORD PTR [esp]
  451b15:	mov    DWORD PTR [edx],eax
  451b17:	mov    eax,esi
  451b19:	call   0x451824
  451b1e:	mov    edx,DWORD PTR [esp]
  451b21:	add    edx,0x4
  451b24:	mov    DWORD PTR [edx],eax
  451b26:	add    esp,0x10
  451b29:	pop    ebp
  451b2a:	pop    edi
  451b2b:	pop    esi
  451b2c:	pop    ebx
  451b2d:	ret    
  451b2e:	add    BYTE PTR [eax],al
  451b30:	(bad)  
  451b31:	(bad)  
  451b32:	(bad)  
  451b33:	call   DWORD PTR [esi]
  451b35:	add    BYTE PTR [eax],al
  451b37:	add    BYTE PTR [ebx+0x69],al
  451b3a:	jo     0x451ba4
  451b3c:	gs jb  0x451b5f
  451b3f:	outs   dx,BYTE PTR ds:[esi]
  451b40:	outs   dx,DWORD PTR ds:[esi]
  451b41:	je     0x451b63
  451b43:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  451b4a:	imul   edi,DWORD PTR [edx+0x65],0x9c000064
  451b51:	sbb    eax,DWORD PTR [ebp+0x0]
	...
  451b60:	dec    esp
  451b61:	sbb    al,0x45
	...
  451b6f:	add    BYTE PTR [eax],bh
  451b71:	sbb    al,0x45
  451b73:	add    al,bh
  451b75:	adc    BYTE PTR [eax],al
  451b77:	add    BYTE PTR [eax+0x18004424],dh
  451b7d:	test   eax,0x42dc0041
  451b82:	inc    eax
  451b83:	add    BYTE PTR [eax-0x1bffbe5e],ch
  451b89:	inc    edx
  451b8a:	inc    eax
  451b8b:	add    al,bl
  451b8d:	inc    edx
  451b8e:	inc    eax
  451b8f:	add    BYTE PTR [eax],bh
  451b91:	inc    eax
  451b92:	inc    eax
  451b93:	add    BYTE PTR [eax+eax*2+0x40],dl
  451b97:	add    BYTE PTR [eax+0x20],bh
  451b9a:	inc    esp
  451b9b:	add    BYTE PTR [eax+0x41],ch
  451b9e:	inc    ecx
  451b9f:	add    BYTE PTR [eax-0x5b],dh
  451ba2:	inc    ecx
  451ba3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  451baa:	inc    ecx
  451bab:	add    BYTE PTR [eax],dl
  451bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451bae:	inc    ecx
  451baf:	add    BYTE PTR [eax-0x5a],bl
  451bb2:	inc    ecx
  451bb3:	add    BYTE PTR [eax-0x59],dl
  451bb6:	inc    ecx
  451bb7:	add    BYTE PTR [eax],dh
  451bb9:	test   eax,0xa6680041
  451bbe:	inc    ecx
  451bbf:	add    BYTE PTR [eax-0x5a],ah
  451bc2:	inc    ecx
  451bc3:	add    BYTE PTR [eax],bh
  451bc5:	test   eax,0x301c0041
  451bca:	inc    ebp
  451bcb:	add    BYTE PTR [esp+ebx*1+0x45],dh
  451bcf:	add    BYTE PTR [esp+ebx*1+0x45],bh
  451bd3:	add    BYTE PTR [eax-0x57ffbae4],ah
  451bd9:	sbb    al,0x45
  451bdb:	add    BYTE PTR [eax+esi*1+0x2a180044],cl
  451be2:	inc    ebp
  451be3:	add    BYTE PTR [ecx+esi*1+0x20c40044],ah
  451bea:	inc    esp
  451beb:	add    BYTE PTR [eax],bh
  451bed:	and    al,BYTE PTR [eax+eax*1+0x4c]
  451bf1:	and    DWORD PTR [eax+eax*1-0x14],eax
  451bf5:	and    DWORD PTR [eax+eax*1-0x4c],eax
  451bf9:	and    DWORD PTR [ebp+0x0],eax
  451bfc:	test   BYTE PTR [eax],dh
  451bfe:	inc    esp
  451bff:	add    BYTE PTR [eax],al
  451c01:	xor    DWORD PTR [eax+eax*1+0x58],eax
  451c05:	xor    DWORD PTR [eax+eax*1+0x4c],eax
  451c09:	sub    al,BYTE PTR [ebp+0x0]
  451c0c:	mov    esp,0x2400452c
  451c11:	xor    al,BYTE PTR [eax+eax*1+0x18]
  451c15:	xor    eax,DWORD PTR [eax+eax*1+0x20]
  451c19:	xor    al,0x44
  451c1b:	add    BYTE PTR [esp+esi*1+0x35600044],bh
  451c22:	inc    esp
  451c23:	add    BYTE PTR [esi+esi*1+0x44],cl
  451c27:	add    BYTE PTR [edi+esi*1+0x44],cl
  451c2b:	add    BYTE PTR [eax+edi*1],ch
  451c2e:	inc    esp
  451c2f:	add    BYTE PTR [ecx+edi*1],cl
  451c32:	inc    esp
  451c33:	add    ah,bh
  451c35:	cmp    DWORD PTR [eax+eax*1+0xc],eax
  451c39:	push   esp
  451c3a:	inc    esp
  451c3b:	inc    ebx
  451c3c:	push   eax
  451c3d:	pop    edi
  451c3e:	je     0x451cb7
  451c40:	outs   dx,DWORD PTR ds:[esi]
  451c41:	imul   si,WORD PTR [ebx+0x68],0x408d
  451c47:	add    BYTE PTR [esp+ebx*1+0x45],cl
  451c4b:	add    BYTE PTR [edi],al
  451c4d:	or     al,0x54
  451c4f:	inc    esp
  451c50:	inc    ebx
  451c51:	push   eax
  451c52:	pop    edi
  451c53:	je     0x451ccc
  451c55:	outs   dx,DWORD PTR ds:[esi]
  451c56:	imul   si,WORD PTR [ebx+0x68],0x1b9c
  451c5c:	inc    ebp
  451c5d:	add    BYTE PTR [ebp+eiz*1+0x70044],ch
  451c64:	or     al,BYTE PTR [ebx+eax*2+0x50]
  451c68:	je     0x451ce1
  451c6a:	outs   dx,DWORD PTR ds:[esi]
  451c6b:	imul   si,WORD PTR [ebx+0x68],0x0
  451c71:	lea    eax,[eax+0x0]
  451c74:	mov    eax,0x6
  451c79:	ret    
  451c7a:	mov    eax,eax
  451c7c:	push   ebx
  451c7d:	mov    ebx,edx
  451c7f:	mov    eax,ebx
  451c81:	mov    edx,0x451c98
  451c86:	call   0x404fdc
  451c8b:	pop    ebx
  451c8c:	ret    
  451c8d:	add    BYTE PTR [eax],al
  451c8f:	add    bh,bh
  451c91:	(bad)  
  451c92:	(bad)  
  451c93:	inc    DWORD PTR [edi]
  451c95:	add    BYTE PTR [eax],al
  451c97:	add    BYTE PTR [edi+esi*2+0x6f],dl
  451c9b:	imul   si,WORD PTR [ebx+0x68],0xb800
  451ca1:	add    BYTE PTR [ecx],al
  451ca3:	add    BYTE PTR [eax],al
  451ca5:	ret    
  451ca6:	mov    eax,eax
  451ca8:	push   ebx
  451ca9:	push   esi
  451caa:	push   edi
  451cab:	push   ebp
  451cac:	add    esp,0xffffffcc
  451caf:	lea    edi,[esp+0x1]
  451cb3:	xor    ecx,ecx
  451cb5:	mov    dl,0x1
  451cb7:	mov    eax,ds:0x451b50
  451cbc:	call   0x45301c
  451cc1:	mov    ebx,eax
  451cc3:	mov    eax,edi
  451cc5:	xor    ecx,ecx
  451cc7:	mov    edx,0x20
  451ccc:	call   0x4037c8
  451cd1:	lea    eax,[esp+0x21]
  451cd5:	xor    ecx,ecx
  451cd7:	mov    edx,0x10
  451cdc:	call   0x4037c8
  451ce1:	mov    esi,0x31
  451ce6:	push   0x0
  451ce8:	mov    edx,edi
  451cea:	mov    ecx,0x80
  451cef:	mov    eax,ebx
  451cf1:	mov    ebp,DWORD PTR [eax]
  451cf3:	call   DWORD PTR [ebp+0x40]
  451cf6:	mov    edx,edi
  451cf8:	lea    eax,[esp+0x21]
  451cfc:	mov    ecx,0x10
  451d01:	call   0x403090
  451d06:	lea    ecx,[esp+0x21]
  451d0a:	lea    edx,[esp+0x21]
  451d0e:	mov    eax,ebx
  451d10:	mov    ebp,DWORD PTR [eax]
  451d12:	call   DWORD PTR [ebp+0x6c]
  451d15:	mov    eax,ebx
  451d17:	mov    edx,DWORD PTR [eax]
  451d19:	call   DWORD PTR [edx+0x44]
  451d1c:	dec    esi
  451d1d:	jne    0x451ce6
  451d1f:	mov    edx,0x46d740
  451d24:	lea    eax,[esp+0x21]
  451d28:	mov    ecx,0x10
  451d2d:	call   0x408538
  451d32:	mov    BYTE PTR [esp],al
  451d35:	mov    eax,edi
  451d37:	xor    ecx,ecx
  451d39:	mov    edx,0x20
  451d3e:	call   0x4037c8
  451d43:	lea    eax,[esp+0x21]
  451d47:	xor    ecx,ecx
  451d49:	mov    edx,0x10
  451d4e:	call   0x4037c8
  451d53:	mov    esi,0x31
  451d58:	push   0x0
  451d5a:	mov    edx,edi
  451d5c:	mov    ecx,0xc0
  451d61:	mov    eax,ebx
  451d63:	mov    ebp,DWORD PTR [eax]
  451d65:	call   DWORD PTR [ebp+0x40]
  451d68:	lea    edx,[edi+0x10]
  451d6b:	mov    eax,edi
  451d6d:	mov    ecx,0x8
  451d72:	call   0x403090
  451d77:	mov    edx,edi
  451d79:	lea    eax,[esp+0x21]
  451d7d:	mov    ecx,0x10
  451d82:	call   0x403090
  451d87:	lea    ecx,[esp+0x21]
  451d8b:	lea    edx,[esp+0x21]
  451d8f:	mov    eax,ebx
  451d91:	mov    ebp,DWORD PTR [eax]
  451d93:	call   DWORD PTR [ebp+0x6c]
  451d96:	mov    eax,ebx
  451d98:	mov    edx,DWORD PTR [eax]
  451d9a:	call   DWORD PTR [edx+0x44]
  451d9d:	dec    esi
  451d9e:	jne    0x451d58
  451da0:	cmp    BYTE PTR [esp],0x0
  451da4:	je     0x451dbd
  451da6:	mov    edx,0x46d750
  451dab:	lea    eax,[esp+0x21]
  451daf:	mov    ecx,0x10
  451db4:	call   0x408538
  451db9:	test   al,al
  451dbb:	jne    0x451dc1
  451dbd:	xor    eax,eax
  451dbf:	jmp    0x451dc3
  451dc1:	mov    al,0x1
  451dc3:	mov    BYTE PTR [esp],al
  451dc6:	mov    eax,edi
  451dc8:	xor    ecx,ecx
  451dca:	mov    edx,0x20
  451dcf:	call   0x4037c8
  451dd4:	lea    eax,[esp+0x21]
  451dd8:	xor    ecx,ecx
  451dda:	mov    edx,0x10
  451ddf:	call   0x4037c8
  451de4:	mov    esi,0x31
  451de9:	push   0x0
  451deb:	mov    edx,edi
  451ded:	mov    ecx,0x100
  451df2:	mov    eax,ebx
  451df4:	mov    ebp,DWORD PTR [eax]
  451df6:	call   DWORD PTR [ebp+0x40]
  451df9:	lea    edx,[edi+0x10]
  451dfc:	mov    eax,edi
  451dfe:	mov    ecx,0x10
  451e03:	call   0x403090
  451e08:	mov    edx,edi
  451e0a:	lea    eax,[esp+0x21]
  451e0e:	mov    ecx,0x10
  451e13:	call   0x403090
  451e18:	lea    ecx,[esp+0x21]
  451e1c:	lea    edx,[esp+0x21]
  451e20:	mov    eax,ebx
  451e22:	mov    ebp,DWORD PTR [eax]
  451e24:	call   DWORD PTR [ebp+0x6c]
  451e27:	mov    eax,ebx
  451e29:	mov    edx,DWORD PTR [eax]
  451e2b:	call   DWORD PTR [edx+0x44]
  451e2e:	dec    esi
  451e2f:	jne    0x451de9
  451e31:	cmp    BYTE PTR [esp],0x0
  451e35:	je     0x451e4e
  451e37:	mov    edx,0x46d760
  451e3c:	lea    eax,[esp+0x21]
  451e40:	mov    ecx,0x10
  451e45:	call   0x408538
  451e4a:	test   al,al
  451e4c:	jne    0x451e52
  451e4e:	xor    eax,eax
  451e50:	jmp    0x451e54
  451e52:	mov    al,0x1
  451e54:	mov    BYTE PTR [esp],al
  451e57:	mov    eax,ebx
  451e59:	mov    edx,DWORD PTR [eax]
  451e5b:	call   DWORD PTR [edx+0x44]
  451e5e:	mov    eax,ebx
  451e60:	call   0x4040a0
  451e65:	movzx  eax,BYTE PTR [esp]
  451e69:	add    esp,0x34
  451e6c:	pop    ebp
  451e6d:	pop    edi
  451e6e:	pop    esi
  451e6f:	pop    ebx
  451e70:	ret    
  451e71:	lea    eax,[eax+0x0]
  451e74:	test   al,0x1
  451e76:	je     0x451e80
  451e78:	shr    eax,1
  451e7a:	xor    eax,0xb4
  451e7f:	ret    
  451e80:	shr    eax,1
  451e82:	ret    
  451e83:	nop
  451e84:	test   al,0x2
  451e86:	je     0x451ea2
  451e88:	test   al,0x1
  451e8a:	je     0x451e99
  451e8c:	shr    eax,0x2
  451e8f:	xor    eax,0xb4
  451e94:	xor    eax,0x5a
  451e97:	jmp    0x451eb1
  451e99:	shr    eax,0x2
  451e9c:	xor    eax,0xb4
  451ea1:	ret    
  451ea2:	test   al,0x1
  451ea4:	je     0x451eae
  451ea6:	shr    eax,0x2
  451ea9:	xor    eax,0x5a
  451eac:	jmp    0x451eb1
  451eae:	shr    eax,0x2
  451eb1:	ret    
  451eb2:	mov    eax,eax
  451eb4:	push   ebx
  451eb5:	mov    ebx,eax
  451eb7:	mov    eax,ebx
  451eb9:	call   0x451e84
  451ebe:	xor    eax,ebx
  451ec0:	pop    ebx
  451ec1:	ret    
  451ec2:	mov    eax,eax
  451ec4:	push   ebx
  451ec5:	push   esi
  451ec6:	mov    ebx,eax
  451ec8:	mov    eax,ebx
  451eca:	call   0x451e74
  451ecf:	mov    esi,eax
  451ed1:	xor    esi,ebx
  451ed3:	mov    eax,ebx
  451ed5:	call   0x451e84
  451eda:	xor    esi,eax
  451edc:	mov    eax,esi
  451ede:	pop    esi
  451edf:	pop    ebx
  451ee0:	ret    
  451ee1:	lea    eax,[eax+0x0]
  451ee4:	push   ebx
  451ee5:	push   esi
  451ee6:	push   edi
  451ee7:	push   ecx
  451ee8:	mov    DWORD PTR [esp],eax
  451eeb:	mov    ecx,edx
  451eed:	mov    edi,0x4
  451ef2:	mov    edx,ecx
  451ef4:	shr    edx,0x18
  451ef7:	test   dl,0x80
  451efa:	je     0x451f0f
  451efc:	movzx  esi,dl
  451eff:	add    esi,esi
  451f01:	xor    esi,0x14d
  451f07:	and    esi,0xff
  451f0d:	jmp    0x451f1a
  451f0f:	movzx  esi,dl
  451f12:	add    esi,esi
  451f14:	and    esi,0xff
  451f1a:	test   dl,0x1
  451f1d:	je     0x451f31
  451f1f:	movzx  ebx,dl
  451f22:	shr    ebx,1
  451f24:	and    ebx,0x7f
  451f27:	xor    ebx,0xa6
  451f2d:	xor    ebx,esi
  451f2f:	jmp    0x451f3b
  451f31:	movzx  ebx,dl
  451f34:	shr    ebx,1
  451f36:	and    ebx,0x7f
  451f39:	xor    ebx,esi
  451f3b:	shl    ecx,0x8
  451f3e:	mov    eax,ebx
  451f40:	shl    eax,0x18
  451f43:	xor    ecx,eax
  451f45:	shl    esi,0x10
  451f48:	xor    ecx,esi
  451f4a:	shl    ebx,0x8
  451f4d:	xor    ecx,ebx
  451f4f:	movzx  eax,dl
  451f52:	xor    ecx,eax
  451f54:	dec    edi
  451f55:	jne    0x451ef2
  451f57:	xor    ecx,DWORD PTR [esp]
  451f5a:	mov    edi,0x4
  451f5f:	mov    edx,ecx
  451f61:	shr    edx,0x18
  451f64:	test   dl,0x80
  451f67:	je     0x451f7c
  451f69:	movzx  esi,dl
  451f6c:	add    esi,esi
  451f6e:	xor    esi,0x14d
  451f74:	and    esi,0xff
  451f7a:	jmp    0x451f87
  451f7c:	movzx  esi,dl
  451f7f:	add    esi,esi
  451f81:	and    esi,0xff
  451f87:	test   dl,0x1
  451f8a:	je     0x451f9e
  451f8c:	movzx  ebx,dl
  451f8f:	shr    ebx,1
  451f91:	and    ebx,0x7f
  451f94:	xor    ebx,0xa6
  451f9a:	xor    ebx,esi
  451f9c:	jmp    0x451fa8
  451f9e:	movzx  ebx,dl
  451fa1:	shr    ebx,1
  451fa3:	and    ebx,0x7f
  451fa6:	xor    ebx,esi
  451fa8:	shl    ecx,0x8
  451fab:	mov    eax,ebx
  451fad:	shl    eax,0x18
  451fb0:	xor    ecx,eax
  451fb2:	shl    esi,0x10
  451fb5:	xor    ecx,esi
  451fb7:	shl    ebx,0x8
  451fba:	xor    ecx,ebx
  451fbc:	movzx  eax,dl
  451fbf:	xor    ecx,eax
  451fc1:	dec    edi
  451fc2:	jne    0x451f5f
  451fc4:	mov    eax,ecx
  451fc6:	pop    edx
  451fc7:	pop    edi
  451fc8:	pop    esi
  451fc9:	pop    ebx
  451fca:	ret    
  451fcb:	nop
  451fcc:	push   ebx
  451fcd:	push   esi
  451fce:	push   edi
  451fcf:	add    esp,0xfffffff4
  451fd2:	mov    DWORD PTR [esp+0x4],ecx
  451fd6:	mov    DWORD PTR [esp],eax
  451fd9:	mov    ebx,DWORD PTR [esp]
  451fdc:	and    ebx,0xff
  451fe2:	mov    ecx,DWORD PTR [esp]
  451fe5:	shr    ecx,0x8
  451fe8:	and    ecx,0xff
  451fee:	mov    eax,DWORD PTR [esp]
  451ff1:	shr    eax,0x10
  451ff4:	and    eax,0xff
  451ff9:	mov    esi,DWORD PTR [esp]
  451ffc:	shr    esi,0x18
  451fff:	mov    DWORD PTR [esp+0x8],esi
  452003:	cmp    DWORD PTR [esp+0x4],0x100
  45200b:	jne    0x45205d
  45200d:	movzx  ebx,BYTE PTR [ebx+0x46d640]
  452014:	mov    esi,DWORD PTR [edx+0xc]
  452017:	mov    edi,esi
  452019:	and    edi,0xff
  45201f:	xor    ebx,edi
  452021:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452028:	mov    edi,esi
  45202a:	shr    edi,0x8
  45202d:	and    edi,0xff
  452033:	xor    ecx,edi
  452035:	movzx  eax,BYTE PTR [eax+0x46d540]
  45203c:	mov    edi,esi
  45203e:	shr    edi,0x10
  452041:	and    edi,0xff
  452047:	xor    eax,edi
  452049:	mov    edi,DWORD PTR [esp+0x8]
  45204d:	movzx  edi,BYTE PTR [edi+0x46d640]
  452054:	shr    esi,0x18
  452057:	xor    edi,esi
  452059:	mov    DWORD PTR [esp+0x8],edi
  45205d:	cmp    DWORD PTR [esp+0x4],0xc0
  452065:	jb     0x4520b7
  452067:	movzx  ebx,BYTE PTR [ebx+0x46d640]
  45206e:	mov    esi,DWORD PTR [edx+0x8]
  452071:	mov    edi,esi
  452073:	and    edi,0xff
  452079:	xor    ebx,edi
  45207b:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452082:	mov    edi,esi
  452084:	shr    edi,0x8
  452087:	and    edi,0xff
  45208d:	xor    ecx,edi
  45208f:	movzx  eax,BYTE PTR [eax+0x46d540]
  452096:	mov    edi,esi
  452098:	shr    edi,0x10
  45209b:	and    edi,0xff
  4520a1:	xor    eax,edi
  4520a3:	mov    edi,DWORD PTR [esp+0x8]
  4520a7:	movzx  edi,BYTE PTR [edi+0x46d540]
  4520ae:	shr    esi,0x18
  4520b1:	xor    edi,esi
  4520b3:	mov    DWORD PTR [esp+0x8],edi
  4520b7:	movzx  ebx,BYTE PTR [ebx+0x46d540]
  4520be:	mov    esi,DWORD PTR [edx+0x4]
  4520c1:	and    esi,0xff
  4520c7:	xor    ebx,esi
  4520c9:	movzx  ebx,BYTE PTR [ebx+0x46d540]
  4520d0:	mov    esi,DWORD PTR [edx]
  4520d2:	and    esi,0xff
  4520d8:	xor    ebx,esi
  4520da:	mov    ebx,DWORD PTR [ebx*4+0x4778ec]
  4520e1:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4520e8:	mov    esi,DWORD PTR [edx+0x4]
  4520eb:	shr    esi,0x8
  4520ee:	and    esi,0xff
  4520f4:	xor    ecx,esi
  4520f6:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  4520fd:	mov    esi,DWORD PTR [edx]
  4520ff:	shr    esi,0x8
  452102:	and    esi,0xff
  452108:	xor    ecx,esi
  45210a:	xor    ebx,DWORD PTR [ecx*4+0x477cec]
  452111:	movzx  eax,BYTE PTR [eax+0x46d540]
  452118:	mov    ecx,DWORD PTR [edx+0x4]
  45211b:	shr    ecx,0x10
  45211e:	and    ecx,0xff
  452124:	xor    eax,ecx
  452126:	movzx  eax,BYTE PTR [eax+0x46d640]
  45212d:	mov    ecx,DWORD PTR [edx]
  45212f:	shr    ecx,0x10
  452132:	and    ecx,0xff
  452138:	xor    eax,ecx
  45213a:	xor    ebx,DWORD PTR [eax*4+0x4780ec]
  452141:	mov    eax,DWORD PTR [esp+0x8]
  452145:	movzx  eax,BYTE PTR [eax+0x46d640]
  45214c:	mov    ecx,DWORD PTR [edx+0x4]
  45214f:	shr    ecx,0x18
  452152:	xor    eax,ecx
  452154:	movzx  eax,BYTE PTR [eax+0x46d640]
  45215b:	mov    edx,DWORD PTR [edx]
  45215d:	shr    edx,0x18
  452160:	xor    eax,edx
  452162:	xor    ebx,DWORD PTR [eax*4+0x4784ec]
  452169:	mov    eax,ebx
  45216b:	add    esp,0xc
  45216e:	pop    edi
  45216f:	pop    esi
  452170:	pop    ebx
  452171:	ret    
  452172:	mov    eax,eax
  452174:	push   ebx
  452175:	push   esi
  452176:	xor    ebx,ebx
  452178:	movzx  ecx,cl
  45217b:	imul   ecx,ecx,0x1010101
  452181:	mov    esi,DWORD PTR [edx+ebx*4]
  452184:	xor    esi,ecx
  452186:	mov    DWORD PTR [eax+ebx*4],esi
  452189:	mov    esi,DWORD PTR [edx+ebx*4+0x4]
  45218d:	xor    esi,ecx
  45218f:	mov    DWORD PTR [eax+ebx*4+0x4],esi
  452193:	mov    esi,DWORD PTR [edx+ebx*4+0x8]
  452197:	xor    esi,ecx
  452199:	mov    DWORD PTR [eax+ebx*4+0x8],esi
  45219d:	mov    esi,DWORD PTR [edx+ebx*4+0xc]
  4521a1:	xor    esi,ecx
  4521a3:	mov    DWORD PTR [eax+ebx*4+0xc],esi
  4521a7:	add    ebx,0x4
  4521aa:	cmp    ebx,0x40
  4521ad:	jb     0x452181
  4521af:	pop    esi
  4521b0:	pop    ebx
  4521b1:	ret    
  4521b2:	mov    eax,eax
  4521b4:	push   ebx
  4521b5:	push   esi
  4521b6:	push   edi
  4521b7:	push   ebp
  4521b8:	add    esp,0xfffffda0
  4521be:	mov    DWORD PTR [esp],ecx
  4521c1:	mov    ebx,edx
  4521c3:	mov    edi,eax
  4521c5:	lea    eax,[esp+0x10]
  4521c9:	xor    ecx,ecx
  4521cb:	mov    edx,0x20
  4521d0:	call   0x4037c8
  4521d5:	mov    ecx,DWORD PTR [esp]
  4521d8:	shr    ecx,0x3
  4521db:	lea    edx,[esp+0x10]
  4521df:	mov    eax,ebx
  4521e1:	call   0x403090
  4521e6:	cmp    DWORD PTR [esp],0x80
  4521ed:	ja     0x4521f8
  4521ef:	mov    DWORD PTR [esp],0x80
  4521f6:	jmp    0x452211
  4521f8:	cmp    DWORD PTR [esp],0xc0
  4521ff:	ja     0x45220a
  452201:	mov    DWORD PTR [esp],0xc0
  452208:	jmp    0x452211
  45220a:	mov    DWORD PTR [esp],0x100
  452211:	mov    eax,DWORD PTR [esp]
  452214:	shr    eax,0x6
  452217:	dec    eax
  452218:	mov    DWORD PTR [esp+0x4],eax
  45221c:	mov    eax,DWORD PTR [esp+0x4]
  452220:	test   eax,eax
  452222:	jb     0x452267
  452224:	inc    eax
  452225:	mov    DWORD PTR [esp+0xc],eax
  452229:	xor    ebx,ebx
  45222b:	lea    esi,[esp+0x30]
  45222f:	lea    ebp,[esp+0x40]
  452233:	mov    eax,ebx
  452235:	add    eax,eax
  452237:	mov    edx,DWORD PTR [esp+eax*4+0x10]
  45223b:	mov    DWORD PTR [esi],edx
  45223d:	mov    eax,DWORD PTR [esp+eax*4+0x14]
  452241:	mov    DWORD PTR [ebp+0x0],eax
  452244:	mov    edx,DWORD PTR [ebp+0x0]
  452247:	mov    eax,DWORD PTR [esi]
  452249:	call   0x451ee4
  45224e:	mov    edx,DWORD PTR [esp+0x4]
  452252:	mov    DWORD PTR [esp+edx*4+0x50],eax
  452256:	dec    DWORD PTR [esp+0x4]
  45225a:	inc    ebx
  45225b:	add    ebp,0x4
  45225e:	add    esi,0x4
  452261:	dec    DWORD PTR [esp+0xc]
  452265:	jne    0x452233
  452267:	xor    eax,eax
  452269:	mov    DWORD PTR [esp+0x8],eax
  45226d:	xor    ebx,ebx
  45226f:	lea    edx,[esp+0x30]
  452273:	mov    ecx,DWORD PTR [esp]
  452276:	mov    eax,DWORD PTR [esp+0x8]
  45227a:	call   0x451fcc
  45227f:	mov    esi,eax
  452281:	lea    edx,[esp+0x40]
  452285:	mov    eax,DWORD PTR [esp+0x8]
  452289:	add    eax,0x1010101
  45228e:	mov    ecx,DWORD PTR [esp]
  452291:	call   0x451fcc
  452296:	mov    edx,eax
  452298:	shl    edx,0x8
  45229b:	shr    eax,0x18
  45229e:	or     edx,eax
  4522a0:	mov    eax,edx
  4522a2:	mov    edx,ebx
  4522a4:	add    edx,edx
  4522a6:	lea    ecx,[eax+esi*1]
  4522a9:	mov    DWORD PTR [edi+edx*4+0x58],ecx
  4522ad:	add    eax,eax
  4522af:	add    esi,eax
  4522b1:	mov    eax,esi
  4522b3:	mov    ecx,eax
  4522b5:	shl    ecx,0x9
  4522b8:	shr    eax,0x17
  4522bb:	or     ecx,eax
  4522bd:	mov    DWORD PTR [edi+edx*4+0x5c],ecx
  4522c1:	add    DWORD PTR [esp+0x8],0x2020202
  4522c9:	inc    ebx
  4522ca:	cmp    ebx,0x14
  4522cd:	jne    0x45226f
  4522cf:	mov    eax,DWORD PTR [esp]
  4522d2:	sub    eax,0x80
  4522d7:	je     0x4522f0
  4522d9:	sub    eax,0x40
  4522dc:	je     0x4524a1
  4522e2:	sub    eax,0x40
  4522e5:	je     0x4526c2
  4522eb:	jmp    0x452a0d
  4522f0:	movzx  ecx,BYTE PTR [esp+0x54]
  4522f5:	and    cl,0xff
  4522f8:	mov    edx,0x46d540
  4522fd:	lea    eax,[esp+0x60]
  452301:	call   0x452174
  452306:	mov    esi,DWORD PTR [esp+0x50]
  45230a:	and    esi,0xff
  452310:	xor    ebx,ebx
  452312:	mov    eax,ebx
  452314:	add    eax,eax
  452316:	movzx  edx,BYTE PTR [esp+ebx*1+0x60]
  45231b:	movzx  edx,BYTE PTR [edx+0x46d540]
  452322:	xor    edx,esi
  452324:	mov    edx,DWORD PTR [edx*4+0x4778ec]
  45232b:	mov    DWORD PTR [edi+eax*4+0xf8],edx
  452332:	movzx  edx,BYTE PTR [esp+ebx*1+0x61]
  452337:	movzx  edx,BYTE PTR [edx+0x46d540]
  45233e:	xor    edx,esi
  452340:	mov    edx,DWORD PTR [edx*4+0x4778ec]
  452347:	mov    DWORD PTR [edi+eax*4+0x100],edx
  45234e:	add    ebx,0x2
  452351:	cmp    ebx,0x100
  452357:	jb     0x452312
  452359:	mov    ecx,DWORD PTR [esp+0x54]
  45235d:	shr    ecx,0x8
  452360:	and    cl,0xff
  452363:	mov    edx,0x46d640
  452368:	lea    eax,[esp+0x60]
  45236c:	call   0x452174
  452371:	mov    esi,DWORD PTR [esp+0x50]
  452375:	shr    esi,0x8
  452378:	and    esi,0xff
  45237e:	xor    ebx,ebx
  452380:	mov    eax,ebx
  452382:	add    eax,eax
  452384:	movzx  edx,BYTE PTR [esp+ebx*1+0x60]
  452389:	movzx  edx,BYTE PTR [edx+0x46d540]
  452390:	xor    edx,esi
  452392:	mov    edx,DWORD PTR [edx*4+0x477cec]
  452399:	mov    DWORD PTR [edi+eax*4+0xfc],edx
  4523a0:	inc    eax
  4523a1:	movzx  edx,BYTE PTR [esp+ebx*1+0x61]
  4523a6:	movzx  edx,BYTE PTR [edx+0x46d540]
  4523ad:	xor    edx,esi
  4523af:	mov    edx,DWORD PTR [edx*4+0x477cec]
  4523b6:	mov    DWORD PTR [edi+eax*4+0x100],edx
  4523bd:	add    ebx,0x2
  4523c0:	cmp    ebx,0x100
  4523c6:	jb     0x452380
  4523c8:	mov    ecx,DWORD PTR [esp+0x54]
  4523cc:	shr    ecx,0x10
  4523cf:	and    cl,0xff
  4523d2:	mov    edx,0x46d540
  4523d7:	lea    eax,[esp+0x60]
  4523db:	call   0x452174
  4523e0:	mov    esi,DWORD PTR [esp+0x50]
  4523e4:	shr    esi,0x10
  4523e7:	and    esi,0xff
  4523ed:	xor    ebx,ebx
  4523ef:	mov    eax,ebx
  4523f1:	add    eax,eax
  4523f3:	movzx  edx,BYTE PTR [esp+ebx*1+0x60]
  4523f8:	movzx  edx,BYTE PTR [edx+0x46d640]
  4523ff:	xor    edx,esi
  452401:	mov    edx,DWORD PTR [edx*4+0x4780ec]
  452408:	mov    DWORD PTR [edi+eax*4+0x8f8],edx
  45240f:	movzx  edx,BYTE PTR [esp+ebx*1+0x61]
  452414:	movzx  edx,BYTE PTR [edx+0x46d640]
  45241b:	xor    edx,esi
  45241d:	mov    edx,DWORD PTR [edx*4+0x4780ec]
  452424:	mov    DWORD PTR [edi+eax*4+0x900],edx
  45242b:	add    ebx,0x2
  45242e:	cmp    ebx,0x100
  452434:	jb     0x4523ef
  452436:	mov    ecx,DWORD PTR [esp+0x54]
  45243a:	shr    ecx,0x18
  45243d:	mov    edx,0x46d640
  452442:	lea    eax,[esp+0x60]
  452446:	call   0x452174
  45244b:	mov    esi,DWORD PTR [esp+0x50]
  45244f:	shr    esi,0x18
  452452:	xor    ebx,ebx
  452454:	mov    eax,ebx
  452456:	add    eax,eax
  452458:	movzx  edx,BYTE PTR [esp+ebx*1+0x60]
  45245d:	movzx  edx,BYTE PTR [edx+0x46d640]
  452464:	xor    edx,esi
  452466:	mov    edx,DWORD PTR [edx*4+0x4784ec]
  45246d:	mov    DWORD PTR [edi+eax*4+0x8fc],edx
  452474:	inc    eax
  452475:	movzx  edx,BYTE PTR [esp+ebx*1+0x61]
  45247a:	movzx  edx,BYTE PTR [edx+0x46d640]
  452481:	xor    edx,esi
  452483:	mov    edx,DWORD PTR [edx*4+0x4784ec]
  45248a:	mov    DWORD PTR [edi+eax*4+0x900],edx
  452491:	add    ebx,0x2
  452494:	cmp    ebx,0x100
  45249a:	jb     0x452454
  45249c:	jmp    0x452a0d
  4524a1:	movzx  ecx,BYTE PTR [esp+0x58]
  4524a6:	and    cl,0xff
  4524a9:	mov    edx,0x46d640
  4524ae:	lea    eax,[esp+0x60]
  4524b2:	call   0x452174
  4524b7:	mov    esi,DWORD PTR [esp+0x50]
  4524bb:	and    esi,0xff
  4524c1:	mov    eax,DWORD PTR [esp+0x54]
  4524c5:	and    eax,0xff
  4524ca:	xor    ebx,ebx
  4524cc:	mov    edx,ebx
  4524ce:	add    edx,edx
  4524d0:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  4524d5:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  4524dc:	xor    ecx,eax
  4524de:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  4524e5:	xor    ecx,esi
  4524e7:	mov    ecx,DWORD PTR [ecx*4+0x4778ec]
  4524ee:	mov    DWORD PTR [edi+edx*4+0xf8],ecx
  4524f5:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  4524fa:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452501:	xor    ecx,eax
  452503:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  45250a:	xor    ecx,esi
  45250c:	mov    ecx,DWORD PTR [ecx*4+0x4778ec]
  452513:	mov    DWORD PTR [edi+edx*4+0x100],ecx
  45251a:	add    ebx,0x2
  45251d:	cmp    ebx,0x100
  452523:	jb     0x4524cc
  452525:	mov    ecx,DWORD PTR [esp+0x58]
  452529:	shr    ecx,0x8
  45252c:	and    cl,0xff
  45252f:	mov    edx,0x46d640
  452534:	lea    eax,[esp+0x60]
  452538:	call   0x452174
  45253d:	mov    esi,DWORD PTR [esp+0x50]
  452541:	shr    esi,0x8
  452544:	and    esi,0xff
  45254a:	mov    eax,DWORD PTR [esp+0x54]
  45254e:	shr    eax,0x8
  452551:	and    eax,0xff
  452556:	xor    ebx,ebx
  452558:	mov    edx,ebx
  45255a:	add    edx,edx
  45255c:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  452561:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452568:	xor    ecx,eax
  45256a:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452571:	xor    ecx,esi
  452573:	mov    ecx,DWORD PTR [ecx*4+0x477cec]
  45257a:	mov    DWORD PTR [edi+edx*4+0xfc],ecx
  452581:	inc    edx
  452582:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452587:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  45258e:	xor    ecx,eax
  452590:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452597:	xor    ecx,esi
  452599:	mov    ecx,DWORD PTR [ecx*4+0x477cec]
  4525a0:	mov    DWORD PTR [edi+edx*4+0x100],ecx
  4525a7:	add    ebx,0x2
  4525aa:	cmp    ebx,0x100
  4525b0:	jb     0x452558
  4525b2:	mov    ecx,DWORD PTR [esp+0x58]
  4525b6:	shr    ecx,0x10
  4525b9:	and    cl,0xff
  4525bc:	mov    edx,0x46d540
  4525c1:	lea    eax,[esp+0x60]
  4525c5:	call   0x452174
  4525ca:	mov    esi,DWORD PTR [esp+0x50]
  4525ce:	shr    esi,0x10
  4525d1:	and    esi,0xff
  4525d7:	mov    eax,DWORD PTR [esp+0x54]
  4525db:	shr    eax,0x10
  4525de:	and    eax,0xff
  4525e3:	xor    ebx,ebx
  4525e5:	mov    edx,ebx
  4525e7:	add    edx,edx
  4525e9:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  4525ee:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  4525f5:	xor    ecx,eax
  4525f7:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4525fe:	xor    ecx,esi
  452600:	mov    ecx,DWORD PTR [ecx*4+0x4780ec]
  452607:	mov    DWORD PTR [edi+edx*4+0x8f8],ecx
  45260e:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452613:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  45261a:	xor    ecx,eax
  45261c:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452623:	xor    ecx,esi
  452625:	mov    ecx,DWORD PTR [ecx*4+0x4780ec]
  45262c:	mov    DWORD PTR [edi+edx*4+0x900],ecx
  452633:	add    ebx,0x2
  452636:	cmp    ebx,0x100
  45263c:	jb     0x4525e5
  45263e:	mov    ecx,DWORD PTR [esp+0x58]
  452642:	shr    ecx,0x18
  452645:	mov    edx,0x46d540
  45264a:	lea    eax,[esp+0x60]
  45264e:	call   0x452174
  452653:	mov    esi,DWORD PTR [esp+0x50]
  452657:	shr    esi,0x18
  45265a:	mov    eax,DWORD PTR [esp+0x54]
  45265e:	shr    eax,0x18
  452661:	xor    ebx,ebx
  452663:	mov    edx,ebx
  452665:	add    edx,edx
  452667:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  45266c:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452673:	xor    ecx,eax
  452675:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  45267c:	xor    ecx,esi
  45267e:	mov    ecx,DWORD PTR [ecx*4+0x4784ec]
  452685:	mov    DWORD PTR [edi+edx*4+0x8fc],ecx
  45268c:	inc    edx
  45268d:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452692:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452699:	xor    ecx,eax
  45269b:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4526a2:	xor    ecx,esi
  4526a4:	mov    ecx,DWORD PTR [ecx*4+0x4784ec]
  4526ab:	mov    DWORD PTR [edi+edx*4+0x900],ecx
  4526b2:	add    ebx,0x2
  4526b5:	cmp    ebx,0x100
  4526bb:	jb     0x452663
  4526bd:	jmp    0x452a0d
  4526c2:	movzx  ecx,BYTE PTR [esp+0x5c]
  4526c7:	and    cl,0xff
  4526ca:	mov    edx,0x46d640
  4526cf:	lea    eax,[esp+0x160]
  4526d6:	call   0x452174
  4526db:	xor    ebx,ebx
  4526dd:	movzx  eax,BYTE PTR [esp+ebx*1+0x160]
  4526e5:	movzx  eax,BYTE PTR [eax+0x46d640]
  4526ec:	mov    BYTE PTR [esp+ebx*1+0x60],al
  4526f0:	movzx  eax,BYTE PTR [esp+ebx*1+0x161]
  4526f8:	movzx  eax,BYTE PTR [eax+0x46d640]
  4526ff:	mov    BYTE PTR [esp+ebx*1+0x61],al
  452703:	add    ebx,0x2
  452706:	cmp    ebx,0x100
  45270c:	jb     0x4526dd
  45270e:	movzx  ecx,BYTE PTR [esp+0x58]
  452713:	and    cl,0xff
  452716:	lea    edx,[esp+0x60]
  45271a:	lea    eax,[esp+0x60]
  45271e:	call   0x452174
  452723:	mov    esi,DWORD PTR [esp+0x50]
  452727:	and    esi,0xff
  45272d:	mov    eax,DWORD PTR [esp+0x54]
  452731:	and    eax,0xff
  452736:	xor    ebx,ebx
  452738:	mov    edx,ebx
  45273a:	add    edx,edx
  45273c:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  452741:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452748:	xor    ecx,eax
  45274a:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452751:	xor    ecx,esi
  452753:	mov    ecx,DWORD PTR [ecx*4+0x4778ec]
  45275a:	mov    DWORD PTR [edi+edx*4+0xf8],ecx
  452761:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452766:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  45276d:	xor    ecx,eax
  45276f:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452776:	xor    ecx,esi
  452778:	mov    ecx,DWORD PTR [ecx*4+0x4778ec]
  45277f:	mov    DWORD PTR [edi+edx*4+0x100],ecx
  452786:	add    ebx,0x2
  452789:	cmp    ebx,0x100
  45278f:	jb     0x452738
  452791:	mov    ecx,DWORD PTR [esp+0x5c]
  452795:	shr    ecx,0x8
  452798:	and    cl,0xff
  45279b:	mov    edx,0x46d540
  4527a0:	lea    eax,[esp+0x160]
  4527a7:	call   0x452174
  4527ac:	xor    ebx,ebx
  4527ae:	movzx  eax,BYTE PTR [esp+ebx*1+0x160]
  4527b6:	movzx  eax,BYTE PTR [eax+0x46d640]
  4527bd:	mov    BYTE PTR [esp+ebx*1+0x60],al
  4527c1:	movzx  eax,BYTE PTR [esp+ebx*1+0x161]
  4527c9:	movzx  eax,BYTE PTR [eax+0x46d640]
  4527d0:	mov    BYTE PTR [esp+ebx*1+0x61],al
  4527d4:	add    ebx,0x2
  4527d7:	cmp    ebx,0x100
  4527dd:	jb     0x4527ae
  4527df:	mov    ecx,DWORD PTR [esp+0x58]
  4527e3:	shr    ecx,0x8
  4527e6:	and    cl,0xff
  4527e9:	lea    edx,[esp+0x60]
  4527ed:	lea    eax,[esp+0x60]
  4527f1:	call   0x452174
  4527f6:	mov    esi,DWORD PTR [esp+0x50]
  4527fa:	shr    esi,0x8
  4527fd:	and    esi,0xff
  452803:	mov    eax,DWORD PTR [esp+0x54]
  452807:	shr    eax,0x8
  45280a:	and    eax,0xff
  45280f:	xor    ebx,ebx
  452811:	mov    edx,ebx
  452813:	add    edx,edx
  452815:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  45281a:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452821:	xor    ecx,eax
  452823:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  45282a:	xor    ecx,esi
  45282c:	mov    ecx,DWORD PTR [ecx*4+0x477cec]
  452833:	mov    DWORD PTR [edi+edx*4+0xfc],ecx
  45283a:	inc    edx
  45283b:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452840:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452847:	xor    ecx,eax
  452849:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452850:	xor    ecx,esi
  452852:	mov    ecx,DWORD PTR [ecx*4+0x477cec]
  452859:	mov    DWORD PTR [edi+edx*4+0x100],ecx
  452860:	add    ebx,0x2
  452863:	cmp    ebx,0x100
  452869:	jb     0x452811
  45286b:	mov    ecx,DWORD PTR [esp+0x5c]
  45286f:	shr    ecx,0x10
  452872:	and    cl,0xff
  452875:	mov    edx,0x46d540
  45287a:	lea    eax,[esp+0x160]
  452881:	call   0x452174
  452886:	xor    ebx,ebx
  452888:	movzx  eax,BYTE PTR [esp+ebx*1+0x160]
  452890:	movzx  eax,BYTE PTR [eax+0x46d540]
  452897:	mov    BYTE PTR [esp+ebx*1+0x60],al
  45289b:	movzx  eax,BYTE PTR [esp+ebx*1+0x161]
  4528a3:	movzx  eax,BYTE PTR [eax+0x46d540]
  4528aa:	mov    BYTE PTR [esp+ebx*1+0x61],al
  4528ae:	add    ebx,0x2
  4528b1:	cmp    ebx,0x100
  4528b7:	jb     0x452888
  4528b9:	mov    ecx,DWORD PTR [esp+0x58]
  4528bd:	shr    ecx,0x10
  4528c0:	and    cl,0xff
  4528c3:	lea    edx,[esp+0x60]
  4528c7:	lea    eax,[esp+0x60]
  4528cb:	call   0x452174
  4528d0:	mov    esi,DWORD PTR [esp+0x50]
  4528d4:	shr    esi,0x10
  4528d7:	and    esi,0xff
  4528dd:	mov    eax,DWORD PTR [esp+0x54]
  4528e1:	shr    eax,0x10
  4528e4:	and    eax,0xff
  4528e9:	xor    ebx,ebx
  4528eb:	mov    edx,ebx
  4528ed:	add    edx,edx
  4528ef:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  4528f4:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  4528fb:	xor    ecx,eax
  4528fd:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452904:	xor    ecx,esi
  452906:	mov    ecx,DWORD PTR [ecx*4+0x4780ec]
  45290d:	mov    DWORD PTR [edi+edx*4+0x8f8],ecx
  452914:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  452919:	movzx  ecx,BYTE PTR [ecx+0x46d540]
  452920:	xor    ecx,eax
  452922:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  452929:	xor    ecx,esi
  45292b:	mov    ecx,DWORD PTR [ecx*4+0x4780ec]
  452932:	mov    DWORD PTR [edi+edx*4+0x900],ecx
  452939:	add    ebx,0x2
  45293c:	cmp    ebx,0x100
  452942:	jb     0x4528eb
  452944:	mov    ecx,DWORD PTR [esp+0x5c]
  452948:	shr    ecx,0x18
  45294b:	mov    edx,0x46d640
  452950:	lea    eax,[esp+0x160]
  452957:	call   0x452174
  45295c:	xor    ebx,ebx
  45295e:	movzx  eax,BYTE PTR [esp+ebx*1+0x160]
  452966:	movzx  eax,BYTE PTR [eax+0x46d540]
  45296d:	mov    BYTE PTR [esp+ebx*1+0x60],al
  452971:	movzx  eax,BYTE PTR [esp+ebx*1+0x161]
  452979:	movzx  eax,BYTE PTR [eax+0x46d540]
  452980:	mov    BYTE PTR [esp+ebx*1+0x61],al
  452984:	add    ebx,0x2
  452987:	cmp    ebx,0x100
  45298d:	jb     0x45295e
  45298f:	mov    ecx,DWORD PTR [esp+0x58]
  452993:	shr    ecx,0x18
  452996:	lea    edx,[esp+0x60]
  45299a:	lea    eax,[esp+0x60]
  45299e:	call   0x452174
  4529a3:	mov    esi,DWORD PTR [esp+0x50]
  4529a7:	shr    esi,0x18
  4529aa:	mov    eax,DWORD PTR [esp+0x54]
  4529ae:	shr    eax,0x18
  4529b1:	xor    ebx,ebx
  4529b3:	mov    edx,ebx
  4529b5:	add    edx,edx
  4529b7:	movzx  ecx,BYTE PTR [esp+ebx*1+0x60]
  4529bc:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4529c3:	xor    ecx,eax
  4529c5:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4529cc:	xor    ecx,esi
  4529ce:	mov    ecx,DWORD PTR [ecx*4+0x4784ec]
  4529d5:	mov    DWORD PTR [edi+edx*4+0x8fc],ecx
  4529dc:	inc    edx
  4529dd:	movzx  ecx,BYTE PTR [esp+ebx*1+0x61]
  4529e2:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4529e9:	xor    ecx,eax
  4529eb:	movzx  ecx,BYTE PTR [ecx+0x46d640]
  4529f2:	xor    ecx,esi
  4529f4:	mov    ecx,DWORD PTR [ecx*4+0x4784ec]
  4529fb:	mov    DWORD PTR [edi+edx*4+0x900],ecx
  452a02:	add    ebx,0x2
  452a05:	cmp    ebx,0x100
  452a0b:	jb     0x4529b3
  452a0d:	add    esp,0x260
  452a13:	pop    ebp
  452a14:	pop    edi
  452a15:	pop    esi
  452a16:	pop    ebx
  452a17:	ret    
  452a18:	push   ebx
  452a19:	mov    ebx,eax
  452a1b:	lea    eax,[ebx+0xf8]
  452a21:	mov    ecx,0xff
  452a26:	mov    edx,0x1000
  452a2b:	call   0x4037c8
  452a30:	lea    eax,[ebx+0x58]
  452a33:	mov    ecx,0xff
  452a38:	mov    edx,0xa0
  452a3d:	call   0x4037c8
  452a42:	mov    eax,ebx
  452a44:	call   0x4431f4
  452a49:	pop    ebx
  452a4a:	ret    
  452a4b:	nop
  452a4c:	push   ebx
  452a4d:	push   esi
  452a4e:	push   edi
  452a4f:	push   ebp
  452a50:	add    esp,0xffffffec
  452a53:	mov    DWORD PTR [esp],ecx
  452a56:	lea    esi,[esp+0x4]
  452a5a:	cmp    BYTE PTR [eax+0x30],0x0
  452a5e:	jne    0x452a76
  452a60:	mov    ecx,0x452ca4
  452a65:	mov    dl,0x1
  452a67:	mov    eax,ds:0x441af8
  452a6c:	call   0x40c8b4
  452a71:	call   0x4048fc
  452a76:	mov    ebx,edx
  452a78:	mov    ecx,DWORD PTR [ebx]
  452a7a:	xor    ecx,DWORD PTR [eax+0x58]
  452a7d:	mov    DWORD PTR [esi],ecx
  452a7f:	mov    ecx,ebx
  452a81:	mov    ebx,ecx
  452a83:	add    ebx,0x4
  452a86:	mov    ebx,DWORD PTR [ebx]
  452a88:	xor    ebx,DWORD PTR [eax+0x5c]
  452a8b:	mov    DWORD PTR [esi+0x4],ebx
  452a8e:	mov    ebx,ecx
  452a90:	add    ebx,0x8
  452a93:	mov    ebx,DWORD PTR [ebx]
  452a95:	xor    ebx,DWORD PTR [eax+0x60]
  452a98:	mov    DWORD PTR [esi+0x8],ebx
  452a9b:	add    ecx,0xc
  452a9e:	mov    edx,DWORD PTR [ecx]
  452aa0:	xor    edx,DWORD PTR [eax+0x64]
  452aa3:	mov    DWORD PTR [esi+0xc],edx
  452aa6:	xor    edx,edx
  452aa8:	mov    ecx,DWORD PTR [esi]
  452aaa:	add    ecx,ecx
  452aac:	and    ecx,0x1fe
  452ab2:	mov    ebx,DWORD PTR [eax+ecx*4+0xf8]
  452ab9:	mov    ecx,DWORD PTR [esi]
  452abb:	shr    ecx,0x7
  452abe:	and    ecx,0x1fe
  452ac4:	xor    ebx,DWORD PTR [eax+ecx*4+0xfc]
  452acb:	mov    ecx,DWORD PTR [esi]
  452acd:	shr    ecx,0xf
  452ad0:	and    ecx,0x1fe
  452ad6:	xor    ebx,DWORD PTR [eax+ecx*4+0x8f8]
  452add:	mov    ecx,DWORD PTR [esi]
  452adf:	shr    ecx,0x17
  452ae2:	and    ecx,0x1fe
  452ae8:	xor    ebx,DWORD PTR [eax+ecx*4+0x8fc]
  452aef:	mov    ecx,DWORD PTR [esi+0x4]
  452af2:	shr    ecx,0x17
  452af5:	and    ecx,0x1fe
  452afb:	mov    ecx,DWORD PTR [eax+ecx*4+0xf8]
  452b02:	mov    edi,DWORD PTR [esi+0x4]
  452b05:	add    edi,edi
  452b07:	and    edi,0x1fe
  452b0d:	xor    ecx,DWORD PTR [eax+edi*4+0xfc]
  452b14:	mov    edi,DWORD PTR [esi+0x4]
  452b17:	shr    edi,0x7
  452b1a:	and    edi,0x1fe
  452b20:	xor    ecx,DWORD PTR [eax+edi*4+0x8f8]
  452b27:	mov    edi,DWORD PTR [esi+0x4]
  452b2a:	shr    edi,0xf
  452b2d:	and    edi,0x1fe
  452b33:	xor    ecx,DWORD PTR [eax+edi*4+0x8fc]
  452b3a:	mov    edi,DWORD PTR [esi+0xc]
  452b3d:	add    edi,edi
  452b3f:	mov    ebp,DWORD PTR [esi+0xc]
  452b42:	shr    ebp,0x1f
  452b45:	or     edi,ebp
  452b47:	mov    DWORD PTR [esi+0xc],edi
  452b4a:	lea    edi,[ecx+ebx*1]
  452b4d:	mov    ebp,edx
  452b4f:	add    ebp,ebp
  452b51:	add    ebp,0x8
  452b54:	add    edi,DWORD PTR [eax+ebp*4+0x58]
  452b58:	xor    DWORD PTR [esi+0x8],edi
  452b5b:	add    ecx,ecx
  452b5d:	add    ebx,ecx
  452b5f:	mov    ecx,edx
  452b61:	add    ecx,ecx
  452b63:	add    ecx,0x8
  452b66:	add    ebx,DWORD PTR [eax+ecx*4+0x5c]
  452b6a:	xor    DWORD PTR [esi+0xc],ebx
  452b6d:	mov    ecx,DWORD PTR [esi+0x8]
  452b70:	shr    ecx,1
  452b72:	mov    ebx,DWORD PTR [esi+0x8]
  452b75:	shl    ebx,0x1f
  452b78:	or     ecx,ebx
  452b7a:	mov    DWORD PTR [esi+0x8],ecx
  452b7d:	mov    ecx,DWORD PTR [esi+0x8]
  452b80:	add    ecx,ecx
  452b82:	and    ecx,0x1fe
  452b88:	mov    ebx,DWORD PTR [eax+ecx*4+0xf8]
  452b8f:	mov    ecx,DWORD PTR [esi+0x8]
  452b92:	shr    ecx,0x7
  452b95:	and    ecx,0x1fe
  452b9b:	xor    ebx,DWORD PTR [eax+ecx*4+0xfc]
  452ba2:	mov    ecx,DWORD PTR [esi+0x8]
  452ba5:	shr    ecx,0xf
  452ba8:	and    ecx,0x1fe
  452bae:	xor    ebx,DWORD PTR [eax+ecx*4+0x8f8]
  452bb5:	mov    ecx,DWORD PTR [esi+0x8]
  452bb8:	shr    ecx,0x17
  452bbb:	and    ecx,0x1fe
  452bc1:	xor    ebx,DWORD PTR [eax+ecx*4+0x8fc]
  452bc8:	mov    ecx,DWORD PTR [esi+0xc]
  452bcb:	shr    ecx,0x17
  452bce:	and    ecx,0x1fe
  452bd4:	mov    ecx,DWORD PTR [eax+ecx*4+0xf8]
  452bdb:	mov    edi,DWORD PTR [esi+0xc]
  452bde:	add    edi,edi
  452be0:	and    edi,0x1fe
  452be6:	xor    ecx,DWORD PTR [eax+edi*4+0xfc]
  452bed:	mov    edi,DWORD PTR [esi+0xc]
  452bf0:	shr    edi,0x7
  452bf3:	and    edi,0x1fe
  452bf9:	xor    ecx,DWORD PTR [eax+edi*4+0x8f8]
  452c00:	mov    edi,DWORD PTR [esi+0xc]
  452c03:	shr    edi,0xf
  452c06:	and    edi,0x1fe
  452c0c:	xor    ecx,DWORD PTR [eax+edi*4+0x8fc]
  452c13:	mov    edi,DWORD PTR [esi+0x4]
  452c16:	add    edi,edi
  452c18:	mov    ebp,DWORD PTR [esi+0x4]
  452c1b:	shr    ebp,0x1f
  452c1e:	or     edi,ebp
  452c20:	mov    DWORD PTR [esi+0x4],edi
  452c23:	lea    edi,[ecx+ebx*1]
  452c26:	lea    ebp,[edx+0x1]
  452c29:	add    ebp,ebp
  452c2b:	add    ebp,0x8
  452c2e:	add    edi,DWORD PTR [eax+ebp*4+0x58]
  452c32:	xor    DWORD PTR [esi],edi
  452c34:	add    ecx,ecx
  452c36:	add    ebx,ecx
  452c38:	lea    ecx,[edx+0x1]
  452c3b:	add    ecx,ecx
  452c3d:	add    ecx,0x8
  452c40:	add    ebx,DWORD PTR [eax+ecx*4+0x5c]
  452c44:	xor    DWORD PTR [esi+0x4],ebx
  452c47:	mov    ecx,DWORD PTR [esi]
  452c49:	shr    ecx,1
  452c4b:	mov    ebx,DWORD PTR [esi]
  452c4d:	shl    ebx,0x1f
  452c50:	or     ecx,ebx
  452c52:	mov    DWORD PTR [esi],ecx
  452c54:	add    edx,0x2
  452c57:	cmp    edx,0xe
  452c5a:	jbe    0x452aa8
  452c60:	mov    edx,DWORD PTR [esi+0x8]
  452c63:	xor    edx,DWORD PTR [eax+0x68]
  452c66:	mov    ecx,DWORD PTR [esp]
  452c69:	mov    DWORD PTR [ecx],edx
  452c6b:	mov    edx,DWORD PTR [esi+0xc]
  452c6e:	xor    edx,DWORD PTR [eax+0x6c]
  452c71:	mov    ecx,DWORD PTR [esp]
  452c74:	add    ecx,0x4
  452c77:	mov    DWORD PTR [ecx],edx
  452c79:	mov    edx,DWORD PTR [esi]
  452c7b:	xor    edx,DWORD PTR [eax+0x70]
  452c7e:	mov    ecx,DWORD PTR [esp]
  452c81:	add    ecx,0x8
  452c84:	mov    DWORD PTR [ecx],edx
  452c86:	mov    edx,DWORD PTR [esi+0x4]
  452c89:	xor    edx,DWORD PTR [eax+0x74]
  452c8c:	mov    eax,DWORD PTR [esp]
  452c8f:	add    eax,0xc
  452c92:	mov    DWORD PTR [eax],edx
  452c94:	add    esp,0x14
  452c97:	pop    ebp
  452c98:	pop    edi
  452c99:	pop    esi
  452c9a:	pop    ebx
  452c9b:	ret    
  452c9c:	(bad)  
  452c9d:	(bad)  
  452c9e:	(bad)  
  452c9f:	call   DWORD PTR [esi]
  452ca1:	add    BYTE PTR [eax],al
  452ca3:	add    BYTE PTR [ebx+0x69],al
  452ca6:	jo     0x452d10
  452ca8:	gs jb  0x452ccb
  452cab:	outs   dx,BYTE PTR ds:[esi]
  452cac:	outs   dx,DWORD PTR ds:[esi]
  452cad:	je     0x452ccf
  452caf:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  452cb6:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  452cbd:	push   esi
  452cbe:	push   edi
  452cbf:	push   ebp
  452cc0:	add    esp,0xffffffec
  452cc3:	mov    DWORD PTR [esp],ecx
  452cc6:	lea    esi,[esp+0x4]
  452cca:	cmp    BYTE PTR [eax+0x30],0x0
  452cce:	jne    0x452ce6
  452cd0:	mov    ecx,0x452f18
  452cd5:	mov    dl,0x1
  452cd7:	mov    eax,ds:0x441af8
  452cdc:	call   0x40c8b4
  452ce1:	call   0x4048fc
  452ce6:	mov    ebx,edx
  452ce8:	mov    ecx,DWORD PTR [ebx]
  452cea:	xor    ecx,DWORD PTR [eax+0x68]
  452ced:	mov    DWORD PTR [esi+0x8],ecx
  452cf0:	mov    ecx,ebx
  452cf2:	mov    ebx,ecx
  452cf4:	add    ebx,0x4
  452cf7:	mov    ebx,DWORD PTR [ebx]
  452cf9:	xor    ebx,DWORD PTR [eax+0x6c]
  452cfc:	mov    DWORD PTR [esi+0xc],ebx
  452cff:	mov    ebx,ecx
  452d01:	add    ebx,0x8
  452d04:	mov    ebx,DWORD PTR [ebx]
  452d06:	xor    ebx,DWORD PTR [eax+0x70]
  452d09:	mov    DWORD PTR [esi],ebx
  452d0b:	add    ecx,0xc
  452d0e:	mov    edx,DWORD PTR [ecx]
  452d10:	xor    edx,DWORD PTR [eax+0x74]
  452d13:	mov    DWORD PTR [esi+0x4],edx
  452d16:	mov    edx,0xe
  452d1b:	mov    ecx,DWORD PTR [esi+0x8]
  452d1e:	add    ecx,ecx
  452d20:	and    ecx,0x1fe
  452d26:	mov    ebx,DWORD PTR [eax+ecx*4+0xf8]
  452d2d:	mov    ecx,DWORD PTR [esi+0x8]
  452d30:	shr    ecx,0x7
  452d33:	and    ecx,0x1fe
  452d39:	xor    ebx,DWORD PTR [eax+ecx*4+0xfc]
  452d40:	mov    ecx,DWORD PTR [esi+0x8]
  452d43:	shr    ecx,0xf
  452d46:	and    ecx,0x1fe
  452d4c:	xor    ebx,DWORD PTR [eax+ecx*4+0x8f8]
  452d53:	mov    ecx,DWORD PTR [esi+0x8]
  452d56:	shr    ecx,0x17
  452d59:	and    ecx,0x1fe
  452d5f:	xor    ebx,DWORD PTR [eax+ecx*4+0x8fc]
  452d66:	mov    ecx,DWORD PTR [esi+0xc]
  452d69:	shr    ecx,0x17
  452d6c:	and    ecx,0x1fe
  452d72:	mov    ecx,DWORD PTR [eax+ecx*4+0xf8]
  452d79:	mov    edi,DWORD PTR [esi+0xc]
  452d7c:	add    edi,edi
  452d7e:	and    edi,0x1fe
  452d84:	xor    ecx,DWORD PTR [eax+edi*4+0xfc]
  452d8b:	mov    edi,DWORD PTR [esi+0xc]
  452d8e:	shr    edi,0x7
  452d91:	and    edi,0x1fe
  452d97:	xor    ecx,DWORD PTR [eax+edi*4+0x8f8]
  452d9e:	mov    edi,DWORD PTR [esi+0xc]
  452da1:	shr    edi,0xf
  452da4:	and    edi,0x1fe
  452daa:	xor    ecx,DWORD PTR [eax+edi*4+0x8fc]
  452db1:	mov    edi,DWORD PTR [esi]
  452db3:	add    edi,edi
  452db5:	mov    ebp,DWORD PTR [esi]
  452db7:	shr    ebp,0x1f
  452dba:	or     edi,ebp
  452dbc:	mov    DWORD PTR [esi],edi
  452dbe:	lea    edi,[ecx+ebx*1]
  452dc1:	lea    ebp,[edx+0x1]
  452dc4:	add    ebp,ebp
  452dc6:	add    ebp,0x8
  452dc9:	add    edi,DWORD PTR [eax+ebp*4+0x58]
  452dcd:	xor    DWORD PTR [esi],edi
  452dcf:	add    ecx,ecx
  452dd1:	add    ebx,ecx
  452dd3:	lea    ecx,[edx+0x1]
  452dd6:	add    ecx,ecx
  452dd8:	add    ecx,0x8
  452ddb:	add    ebx,DWORD PTR [eax+ecx*4+0x5c]
  452ddf:	xor    DWORD PTR [esi+0x4],ebx
  452de2:	mov    ecx,DWORD PTR [esi+0x4]
  452de5:	shr    ecx,1
  452de7:	mov    ebx,DWORD PTR [esi+0x4]
  452dea:	shl    ebx,0x1f
  452ded:	or     ecx,ebx
  452def:	mov    DWORD PTR [esi+0x4],ecx
  452df2:	mov    ecx,DWORD PTR [esi]
  452df4:	add    ecx,ecx
  452df6:	and    ecx,0x1fe
  452dfc:	mov    ebx,DWORD PTR [eax+ecx*4+0xf8]
  452e03:	mov    ecx,DWORD PTR [esi]
  452e05:	shr    ecx,0x7
  452e08:	and    ecx,0x1fe
  452e0e:	xor    ebx,DWORD PTR [eax+ecx*4+0xfc]
  452e15:	mov    ecx,DWORD PTR [esi]
  452e17:	shr    ecx,0xf
  452e1a:	and    ecx,0x1fe
  452e20:	xor    ebx,DWORD PTR [eax+ecx*4+0x8f8]
  452e27:	mov    ecx,DWORD PTR [esi]
  452e29:	shr    ecx,0x17
  452e2c:	and    ecx,0x1fe
  452e32:	xor    ebx,DWORD PTR [eax+ecx*4+0x8fc]
  452e39:	mov    ecx,DWORD PTR [esi+0x4]
  452e3c:	shr    ecx,0x17
  452e3f:	and    ecx,0x1fe
  452e45:	mov    ecx,DWORD PTR [eax+ecx*4+0xf8]
  452e4c:	mov    edi,DWORD PTR [esi+0x4]
  452e4f:	add    edi,edi
  452e51:	and    edi,0x1fe
  452e57:	xor    ecx,DWORD PTR [eax+edi*4+0xfc]
  452e5e:	mov    edi,DWORD PTR [esi+0x4]
  452e61:	shr    edi,0x7
  452e64:	and    edi,0x1fe
  452e6a:	xor    ecx,DWORD PTR [eax+edi*4+0x8f8]
  452e71:	mov    edi,DWORD PTR [esi+0x4]
  452e74:	shr    edi,0xf
  452e77:	and    edi,0x1fe
  452e7d:	xor    ecx,DWORD PTR [eax+edi*4+0x8fc]
  452e84:	mov    edi,DWORD PTR [esi+0x8]
  452e87:	add    edi,edi
  452e89:	mov    ebp,DWORD PTR [esi+0x8]
  452e8c:	shr    ebp,0x1f
  452e8f:	or     edi,ebp
  452e91:	mov    DWORD PTR [esi+0x8],edi
  452e94:	lea    edi,[ecx+ebx*1]
  452e97:	mov    ebp,edx
  452e99:	add    ebp,ebp
  452e9b:	add    ebp,0x8
  452e9e:	add    edi,DWORD PTR [eax+ebp*4+0x58]
  452ea2:	xor    DWORD PTR [esi+0x8],edi
  452ea5:	add    ecx,ecx
  452ea7:	add    ebx,ecx
  452ea9:	mov    ecx,edx
  452eab:	add    ecx,ecx
  452ead:	add    ecx,0x8
  452eb0:	add    ebx,DWORD PTR [eax+ecx*4+0x5c]
  452eb4:	xor    DWORD PTR [esi+0xc],ebx
  452eb7:	mov    ecx,DWORD PTR [esi+0xc]
  452eba:	shr    ecx,1
  452ebc:	mov    ebx,DWORD PTR [esi+0xc]
  452ebf:	shl    ebx,0x1f
  452ec2:	or     ecx,ebx
  452ec4:	mov    DWORD PTR [esi+0xc],ecx
  452ec7:	sub    edx,0x2
  452eca:	test   edx,edx
  452ecc:	jge    0x452d1b
  452ed2:	mov    edx,DWORD PTR [esi]
  452ed4:	xor    edx,DWORD PTR [eax+0x58]
  452ed7:	mov    ecx,DWORD PTR [esp]
  452eda:	mov    DWORD PTR [ecx],edx
  452edc:	mov    edx,DWORD PTR [esi+0x4]
  452edf:	xor    edx,DWORD PTR [eax+0x5c]
  452ee2:	mov    ecx,DWORD PTR [esp]
  452ee5:	add    ecx,0x4
  452ee8:	mov    DWORD PTR [ecx],edx
  452eea:	mov    edx,DWORD PTR [esi+0x8]
  452eed:	xor    edx,DWORD PTR [eax+0x60]
  452ef0:	mov    ecx,DWORD PTR [esp]
  452ef3:	add    ecx,0x8
  452ef6:	mov    DWORD PTR [ecx],edx
  452ef8:	mov    edx,DWORD PTR [esi+0xc]
  452efb:	xor    edx,DWORD PTR [eax+0x64]
  452efe:	mov    eax,DWORD PTR [esp]
  452f01:	add    eax,0xc
  452f04:	mov    DWORD PTR [eax],edx
  452f06:	add    esp,0x14
  452f09:	pop    ebp
  452f0a:	pop    edi
  452f0b:	pop    esi
  452f0c:	pop    ebx
  452f0d:	ret    
  452f0e:	add    BYTE PTR [eax],al
  452f10:	(bad)  
  452f11:	(bad)  
  452f12:	(bad)  
  452f13:	call   DWORD PTR [esi]
  452f15:	add    BYTE PTR [eax],al
  452f17:	add    BYTE PTR [ebx+0x69],al
  452f1a:	jo     0x452f84
  452f1c:	gs jb  0x452f3f
  452f1f:	outs   dx,BYTE PTR ds:[esi]
  452f20:	outs   dx,DWORD PTR ds:[esi]
  452f21:	je     0x452f43
  452f23:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  452f2a:	imul   edi,DWORD PTR [edx+0x65],0x53000064
  452f31:	push   esi
  452f32:	push   edi
  452f33:	push   ebp
  452f34:	add    esp,0xffffffe4
  452f37:	mov    DWORD PTR [esp+0x18],0x100
  452f3f:	mov    esi,0x46d540
  452f44:	mov    ebx,0x4778ec
  452f49:	movzx  edi,BYTE PTR [esi]
  452f4c:	mov    DWORD PTR [esp],edi
  452f4f:	mov    eax,edi
  452f51:	call   0x451eb4
  452f56:	mov    DWORD PTR [esp+0x8],eax
  452f5a:	mov    eax,edi
  452f5c:	call   0x451ec4
  452f61:	mov    DWORD PTR [esp+0x10],eax
  452f65:	movzx  edi,BYTE PTR [esi+0x100]
  452f6c:	mov    DWORD PTR [esp+0x4],edi
  452f70:	mov    eax,edi
  452f72:	call   0x451eb4
  452f77:	mov    DWORD PTR [esp+0xc],eax
  452f7b:	mov    eax,edi
  452f7d:	call   0x451ec4
  452f82:	mov    ebp,eax
  452f84:	mov    DWORD PTR [esp+0x14],ebp
  452f88:	mov    eax,edi
  452f8a:	mov    edx,DWORD PTR [esp+0xc]
  452f8e:	shl    edx,0x8
  452f91:	or     eax,edx
  452f93:	mov    edx,ebp
  452f95:	shl    edx,0x10
  452f98:	or     eax,edx
  452f9a:	mov    edx,ebp
  452f9c:	shl    edx,0x18
  452f9f:	or     eax,edx
  452fa1:	mov    DWORD PTR [ebx],eax
  452fa3:	mov    eax,DWORD PTR [esp+0x10]
  452fa7:	mov    edx,eax
  452fa9:	mov    ecx,eax
  452fab:	shl    ecx,0x8
  452fae:	or     edx,ecx
  452fb0:	mov    ecx,DWORD PTR [esp+0x8]
  452fb4:	shl    ecx,0x10
  452fb7:	or     edx,ecx
  452fb9:	mov    ecx,DWORD PTR [esp]
  452fbc:	shl    ecx,0x18
  452fbf:	or     edx,ecx
  452fc1:	mov    DWORD PTR [ebx+0x400],edx
  452fc7:	mov    edx,DWORD PTR [esp+0xc]
  452fcb:	shl    ebp,0x8
  452fce:	or     edx,ebp
  452fd0:	shl    edi,0x10
  452fd3:	or     edx,edi
  452fd5:	mov    ecx,DWORD PTR [esp+0x14]
  452fd9:	shl    ecx,0x18
  452fdc:	or     edx,ecx
  452fde:	mov    DWORD PTR [ebx+0x800],edx
  452fe4:	mov    edx,DWORD PTR [esp+0x8]
  452fe8:	mov    ecx,DWORD PTR [esp]
  452feb:	shl    ecx,0x8
  452fee:	or     edx,ecx
  452ff0:	shl    eax,0x10
  452ff3:	or     edx,eax
  452ff5:	mov    eax,DWORD PTR [esp+0x8]
  452ff9:	shl    eax,0x18
  452ffc:	or     edx,eax
  452ffe:	mov    DWORD PTR [ebx+0xc00],edx
  453004:	add    ebx,0x4
  453007:	inc    esi
  453008:	dec    DWORD PTR [esp+0x18]
  45300c:	jne    0x452f49
  453012:	add    esp,0x1c
  453015:	pop    ebp
  453016:	pop    edi
  453017:	pop    esi
  453018:	pop    ebx
  453019:	ret    
  45301a:	mov    eax,eax
  45301c:	push   ebx
  45301d:	push   esi
  45301e:	test   dl,dl
  453020:	je     0x45302a
  453022:	add    esp,0xfffffff0
  453025:	call   0x4043ac
  45302a:	mov    ebx,edx
  45302c:	mov    esi,eax
  45302e:	xor    edx,edx
  453030:	mov    eax,esi
  453032:	call   0x44231c
  453037:	cmp    BYTE PTR ds:0x4788ec,0x0
  45303e:	jne    0x45304c
  453040:	call   0x452f30
  453045:	mov    BYTE PTR ds:0x4788ec,0x1
  45304c:	mov    eax,esi
  45304e:	test   bl,bl
  453050:	je     0x453061
  453052:	call   0x404404
  453057:	pop    DWORD PTR fs:0x0
  45305e:	add    esp,0xc
  453061:	mov    eax,esi
  453063:	pop    esi
  453064:	pop    ebx
  453065:	ret    
  453066:	mov    eax,eax
  453068:	push   ebp
  453069:	mov    ebp,esp
  45306b:	xor    eax,eax
  45306d:	push   ebp
  45306e:	push   0x45308d
  453073:	push   DWORD PTR fs:[eax]
  453076:	mov    DWORD PTR fs:[eax],esp
  453079:	inc    DWORD PTR ds:0x4778e8
  45307f:	xor    eax,eax
  453081:	pop    edx
  453082:	pop    ecx
  453083:	pop    ecx
  453084:	mov    DWORD PTR fs:[eax],edx
  453087:	push   0x453094
  45308c:	ret    
  45308d:	jmp    0x40481c
  453092:	jmp    0x45308c
  453094:	pop    ebp
  453095:	ret    
  453096:	mov    eax,eax
  453098:	in     al,0x30
  45309a:	inc    ebp
	...
  4530a7:	add    BYTE PTR [eax+0x31],cl
  4530aa:	inc    ebp
	...
  4530b7:	add    BYTE PTR [ecx+esi*1],dh
  4530ba:	inc    ebp
  4530bb:	add    BYTE PTR [eax],dl
  4530bd:	add    DWORD PTR [eax],eax
  4530bf:	add    ah,dl
  4530c1:	pop    ss
  4530c2:	inc    esp
  4530c3:	add    BYTE PTR [eax],bl
  4530c5:	test   eax,0x42dc0041
  4530ca:	inc    eax
  4530cb:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4530d1:	inc    edx
  4530d2:	inc    eax
  4530d3:	add    al,bl
  4530d5:	inc    edx
  4530d6:	inc    eax
  4530d7:	add    BYTE PTR [eax],bh
  4530d9:	inc    eax
  4530da:	inc    eax
  4530db:	add    BYTE PTR [eax+eax*2+0x40],dl
  4530df:	add    BYTE PTR [eax+0x1d],ch
  4530e2:	inc    esp
  4530e3:	add    BYTE PTR [eax+0x41],ch
  4530e6:	inc    ecx
  4530e7:	add    BYTE PTR [eax-0x5b],dh
  4530ea:	inc    ecx
  4530eb:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4530f2:	inc    ecx
  4530f3:	add    BYTE PTR [eax],dl
  4530f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4530f6:	inc    ecx
  4530f7:	add    BYTE PTR [eax-0x5a],bl
  4530fa:	inc    ecx
  4530fb:	add    BYTE PTR [eax-0x59],dl
  4530fe:	inc    ecx
  4530ff:	add    BYTE PTR [eax],dh
  453101:	test   eax,0xa6680041
  453106:	inc    ecx
  453107:	add    BYTE PTR [eax-0x5a],ah
  45310a:	inc    ecx
  45310b:	add    BYTE PTR [eax],bh
  45310d:	test   eax,0xa1e00041
  453112:	inc    ecx
  453113:	add    BYTE PTR [eax],bl
  453115:	sbb    eax,0x1d1c0044
  45311a:	inc    esp
  45311b:	add    BYTE PTR [eax],ch
  45311d:	sbb    eax,0x1d2c0044
  453122:	inc    esp
  453123:	add    BYTE PTR [eax],dh
  453125:	sbb    eax,0x1d340044
  45312a:	inc    esp
  45312b:	add    BYTE PTR [ebx+edx*8+0x45],ah
  45312f:	add    BYTE PTR [eax+0xf0045d3],dh
  453135:	push   esp
  453136:	inc    esp
  453137:	inc    ebx
  453138:	push   eax
  453139:	pop    edi
  45313a:	jae    0x4531a4
  45313c:	popa   
  45313d:	xor    eax,0x61623231
  453142:	jae    0x4531a9
  453144:	dec    eax
  453145:	xor    DWORD PTR [ebp+0x0],eax
  453148:	pop    es
  453149:	andps  xmm0,XMMWORD PTR [ebx+eax*2+0x50]
  45314e:	pop    edi
  45314f:	jae    0x4531b9
  453151:	popa   
  453152:	xor    eax,0x61623231
  453157:	jae    0x4531be
  453159:	in     al,0x30
  45315b:	inc    ebp
  45315c:	add    BYTE PTR [eax+ebx*1+0x44],bh
  453160:	add    BYTE PTR ds:0x43440900,al
  453166:	push   eax
  453167:	jae    0x4531d1
  453169:	popa   
  45316a:	xor    eax,0x3231
  45316f:	nop
  453170:	mov    esp,0x4531
	...
  45317d:	add    BYTE PTR [eax],al
  45317f:	add    BYTE PTR [edx+esi*1],bl
  453182:	inc    ebp
	...
  45318f:	add    BYTE PTR [edx+esi*1],cl
  453192:	inc    ebp
  453193:	add    BYTE PTR [eax],dl
  453195:	add    DWORD PTR [eax],eax
  453197:	add    BYTE PTR [eax+0x18004530],bl
  45319d:	test   eax,0x42dc0041
  4531a2:	inc    eax
  4531a3:	add    BYTE PTR [eax-0x1bffbe5e],ch
  4531a9:	inc    edx
  4531aa:	inc    eax
  4531ab:	add    al,bl
  4531ad:	inc    edx
  4531ae:	inc    eax
  4531af:	add    BYTE PTR [eax],bh
  4531b1:	inc    eax
  4531b2:	inc    eax
  4531b3:	add    BYTE PTR [eax+eax*2+0x40],dl
  4531b7:	add    BYTE PTR [eax+0x1d],ch
  4531ba:	inc    esp
  4531bb:	add    BYTE PTR [eax+0x41],ch
  4531be:	inc    ecx
  4531bf:	add    BYTE PTR [eax-0x5b],dh
  4531c2:	inc    ecx
  4531c3:	add    BYTE PTR [eax+eax*2-0x59b7ffbf],al
  4531ca:	inc    ecx
  4531cb:	add    BYTE PTR [eax],dl
  4531cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4531ce:	inc    ecx
  4531cf:	add    BYTE PTR [eax-0x5a],bl
  4531d2:	inc    ecx
  4531d3:	add    BYTE PTR [eax-0x59],dl
  4531d6:	inc    ecx
  4531d7:	add    BYTE PTR [eax],dh
  4531d9:	test   eax,0xa6680041
  4531de:	inc    ecx
  4531df:	add    BYTE PTR [eax-0x5a],ah
  4531e2:	inc    ecx
  4531e3:	add    BYTE PTR [eax],bh
  4531e5:	test   eax,0xa1e00041
  4531ea:	inc    ecx
  4531eb:	add    BYTE PTR [esp+edx*8-0x2b77ffbb],ch
  4531f2:	inc    ebp
  4531f3:	add    BYTE PTR [esp+edx*8-0x2b43ffbb],dh
  4531fa:	inc    ebp
  4531fb:	add    al,cl
  4531fd:	aad    0x45
  4531ff:	add    BYTE PTR [esi+edx*8+0x45],dl
  453203:	add    BYTE PTR [ebx+edx*8+0x45],ah
  453207:	add    BYTE PTR [eax+0xb0045d3],dh
  45320d:	push   esp
  45320e:	inc    esp
  45320f:	inc    ebx
  453210:	push   eax
  453211:	pop    edi
  453212:	jae    0x45327c
  453214:	popa   
  453215:	xor    eax,0x321c3231
  45321a:	inc    ebp
  45321b:	add    BYTE PTR [edi],al
  45321d:	or     edx,DWORD PTR [esp+eax*2+0x43]
  453221:	push   eax
  453222:	pop    edi
  453223:	jae    0x45328d
  453225:	popa   
  453226:	xor    eax,0x31bc3231
  45322b:	inc    ebp
  45322c:	add    BYTE PTR [ecx+esi*1+0x45],al
  453230:	add    BYTE PTR ds:0x43440900,al
  453236:	push   eax
  453237:	jae    0x4532a1
  453239:	popa   
  45323a:	xor    eax,0x3231
  45323f:	nop
  453240:	push   ebp
  453241:	mov    ebp,esp
  453243:	add    esp,0xfffffff8
  453246:	mov    eax,DWORD PTR [ebp+0x8]
  453249:	mov    edx,DWORD PTR [ebp+0xc]
  45324c:	and    eax,0xff
  453252:	xor    edx,edx
  453254:	mov    edx,eax
  453256:	shl    edx,0x18
  453259:	xor    eax,eax
  45325b:	push   edx
  45325c:	push   eax
  45325d:	mov    eax,DWORD PTR [ebp+0x8]
  453260:	mov    edx,DWORD PTR [ebp+0xc]
  453263:	and    eax,0xff00
  453269:	xor    edx,edx
  45326b:	mov    edx,eax
  45326d:	shl    edx,0x8
  453270:	xor    eax,eax
  453272:	or     eax,DWORD PTR [esp]
  453275:	or     edx,DWORD PTR [esp+0x4]
  453279:	add    esp,0x8
  45327c:	push   edx
  45327d:	push   eax
  45327e:	mov    eax,DWORD PTR [ebp+0x8]
  453281:	mov    edx,DWORD PTR [ebp+0xc]
  453284:	and    eax,0xff0000
  45328a:	xor    edx,edx
  45328c:	shld   edx,eax,0x18
  453290:	shl    eax,0x18
  453293:	or     eax,DWORD PTR [esp]
  453296:	or     edx,DWORD PTR [esp+0x4]
  45329a:	add    esp,0x8
  45329d:	push   edx
  45329e:	push   eax
  45329f:	mov    eax,DWORD PTR [ebp+0x8]
  4532a2:	mov    edx,DWORD PTR [ebp+0xc]
  4532a5:	and    eax,0xff000000
  4532ab:	xor    edx,edx
  4532ad:	shld   edx,eax,0x8
  4532b1:	shl    eax,0x8
  4532b4:	or     eax,DWORD PTR [esp]
  4532b7:	or     edx,DWORD PTR [esp+0x4]
  4532bb:	add    esp,0x8
  4532be:	push   edx
  4532bf:	push   eax
  4532c0:	mov    eax,DWORD PTR [ebp+0x8]
  4532c3:	mov    edx,DWORD PTR [ebp+0xc]
  4532c6:	xor    eax,eax
  4532c8:	and    edx,0xff
  4532ce:	shrd   eax,edx,0x8
  4532d2:	shr    edx,0x8
  4532d5:	or     eax,DWORD PTR [esp]
  4532d8:	or     edx,DWORD PTR [esp+0x4]
  4532dc:	add    esp,0x8
  4532df:	push   edx
  4532e0:	push   eax
  4532e1:	mov    eax,DWORD PTR [ebp+0x8]
  4532e4:	mov    edx,DWORD PTR [ebp+0xc]
  4532e7:	xor    eax,eax
  4532e9:	and    edx,0xff00
  4532ef:	shrd   eax,edx,0x18
  4532f3:	shr    edx,0x18
  4532f6:	or     eax,DWORD PTR [esp]
  4532f9:	or     edx,DWORD PTR [esp+0x4]
  4532fd:	add    esp,0x8
  453300:	push   edx
  453301:	push   eax
  453302:	mov    eax,DWORD PTR [ebp+0x8]
  453305:	mov    edx,DWORD PTR [ebp+0xc]
  453308:	xor    eax,eax
  45330a:	and    edx,0xff0000
  453310:	mov    eax,edx
  453312:	shr    eax,0x8
  453315:	xor    edx,edx
  453317:	or     eax,DWORD PTR [esp]
  45331a:	or     edx,DWORD PTR [esp+0x4]
  45331e:	add    esp,0x8
  453321:	push   edx
  453322:	push   eax
  453323:	mov    eax,DWORD PTR [ebp+0x8]
  453326:	mov    edx,DWORD PTR [ebp+0xc]
  453329:	xor    eax,eax
  45332b:	and    edx,0xff000000
  453331:	mov    eax,edx
  453333:	shr    eax,0x18
  453336:	xor    edx,edx
  453338:	or     eax,DWORD PTR [esp]
  45333b:	or     edx,DWORD PTR [esp+0x4]
  45333f:	add    esp,0x8
  453342:	mov    DWORD PTR [ebp-0x8],eax
  453345:	mov    DWORD PTR [ebp-0x4],edx
  453348:	mov    eax,DWORD PTR [ebp-0x8]
  45334b:	mov    edx,DWORD PTR [ebp-0x4]
  45334e:	pop    ecx
  45334f:	pop    ecx
  453350:	pop    ebp
  453351:	ret    0x8
  453354:	push   ebx
  453355:	push   esi
  453356:	push   edi
  453357:	add    esp,0xfffffd30
  45335d:	mov    esi,eax
  45335f:	xor    eax,eax
  453361:	mov    DWORD PTR [esi+0x48],eax
  453364:	mov    eax,DWORD PTR [esi+0x50]
  453367:	mov    DWORD PTR [esp],eax
  45336a:	mov    eax,DWORD PTR [esi+0x54]
  45336d:	mov    DWORD PTR [esp+0x4],eax
  453371:	mov    eax,DWORD PTR [esi+0x58]
  453374:	mov    DWORD PTR [esp+0x8],eax
  453378:	mov    eax,DWORD PTR [esi+0x5c]
  45337b:	mov    DWORD PTR [esp+0xc],eax
  45337f:	mov    eax,DWORD PTR [esi+0x60]
  453382:	mov    DWORD PTR [esp+0x10],eax
  453386:	mov    eax,DWORD PTR [esi+0x64]
  453389:	mov    DWORD PTR [esp+0x14],eax
  45338d:	mov    eax,DWORD PTR [esi+0x68]
  453390:	mov    DWORD PTR [esp+0x18],eax
  453394:	mov    eax,DWORD PTR [esi+0x6c]
  453397:	mov    DWORD PTR [esp+0x1c],eax
  45339b:	mov    eax,DWORD PTR [esi+0x70]
  45339e:	mov    DWORD PTR [esp+0x20],eax
  4533a2:	mov    eax,DWORD PTR [esi+0x74]
  4533a5:	mov    DWORD PTR [esp+0x24],eax
  4533a9:	mov    eax,DWORD PTR [esi+0x78]
  4533ac:	mov    DWORD PTR [esp+0x28],eax
  4533b0:	mov    eax,DWORD PTR [esi+0x7c]
  4533b3:	mov    DWORD PTR [esp+0x2c],eax
  4533b7:	mov    eax,DWORD PTR [esi+0x80]
  4533bd:	mov    DWORD PTR [esp+0x30],eax
  4533c1:	mov    eax,DWORD PTR [esi+0x84]
  4533c7:	mov    DWORD PTR [esp+0x34],eax
  4533cb:	mov    eax,DWORD PTR [esi+0x88]
  4533d1:	mov    DWORD PTR [esp+0x38],eax
  4533d5:	mov    eax,DWORD PTR [esi+0x8c]
  4533db:	mov    DWORD PTR [esp+0x3c],eax
  4533df:	lea    edx,[esp+0x50]
  4533e3:	lea    eax,[esi+0x90]
  4533e9:	mov    ecx,0x80
  4533ee:	call   0x403090
  4533f3:	mov    edi,0x10
  4533f8:	lea    ebx,[esp+0x50]
  4533fc:	push   DWORD PTR [ebx+0x4]
  4533ff:	push   DWORD PTR [ebx]
  453401:	call   0x453240
  453406:	mov    DWORD PTR [ebx],eax
  453408:	mov    DWORD PTR [ebx+0x4],edx
  45340b:	add    ebx,0x8
  45340e:	dec    edi
  45340f:	jne    0x4533fc
  453411:	mov    edi,0x40
  453416:	lea    ecx,[esp+0xc0]
  45341d:	mov    eax,DWORD PTR [ecx]
  45341f:	mov    edx,DWORD PTR [ecx+0x4]
  453422:	shrd   eax,edx,0x13
  453426:	shr    edx,0x13
  453429:	push   edx
  45342a:	push   eax
  45342b:	mov    edx,DWORD PTR [ecx]
  45342d:	shl    edx,0xd
  453430:	xor    eax,eax
  453432:	or     eax,DWORD PTR [esp]
  453435:	or     edx,DWORD PTR [esp+0x4]
  453439:	add    esp,0x8
  45343c:	push   edx
  45343d:	push   eax
  45343e:	mov    eax,DWORD PTR [ecx+0x4]
  453441:	shr    eax,0x1d
  453444:	xor    edx,edx
  453446:	push   edx
  453447:	push   eax
  453448:	mov    eax,DWORD PTR [ecx]
  45344a:	mov    edx,DWORD PTR [ecx+0x4]
  45344d:	shld   edx,eax,0x3
  453451:	add    eax,eax
  453453:	add    eax,eax
  453455:	add    eax,eax
  453457:	or     eax,DWORD PTR [esp]
  45345a:	or     edx,DWORD PTR [esp+0x4]
  45345e:	add    esp,0x8
  453461:	xor    eax,DWORD PTR [esp]
  453464:	xor    edx,DWORD PTR [esp+0x4]
  453468:	add    esp,0x8
  45346b:	push   edx
  45346c:	push   eax
  45346d:	mov    eax,DWORD PTR [ecx]
  45346f:	mov    edx,DWORD PTR [ecx+0x4]
  453472:	shrd   eax,edx,0x6
  453476:	shr    edx,0x6
  453479:	xor    eax,DWORD PTR [esp]
  45347c:	xor    edx,DWORD PTR [esp+0x4]
  453480:	add    esp,0x8
  453483:	add    eax,DWORD PTR [ecx-0x28]
  453486:	adc    edx,DWORD PTR [ecx-0x24]
  453489:	push   edx
  45348a:	push   eax
  45348b:	mov    eax,DWORD PTR [ecx-0x68]
  45348e:	mov    edx,DWORD PTR [ecx-0x64]
  453491:	shrd   eax,edx,0x1
  453495:	shr    edx,1
  453497:	push   edx
  453498:	push   eax
  453499:	mov    edx,DWORD PTR [ecx-0x68]
  45349c:	shl    edx,0x1f
  45349f:	xor    eax,eax
  4534a1:	or     eax,DWORD PTR [esp]
  4534a4:	or     edx,DWORD PTR [esp+0x4]
  4534a8:	add    esp,0x8
  4534ab:	push   edx
  4534ac:	push   eax
  4534ad:	mov    eax,DWORD PTR [ecx-0x68]
  4534b0:	mov    edx,DWORD PTR [ecx-0x64]
  4534b3:	shrd   eax,edx,0x8
  4534b7:	shr    edx,0x8
  4534ba:	push   edx
  4534bb:	push   eax
  4534bc:	mov    edx,DWORD PTR [ecx-0x68]
  4534bf:	shl    edx,0x18
  4534c2:	xor    eax,eax
  4534c4:	or     eax,DWORD PTR [esp]
  4534c7:	or     edx,DWORD PTR [esp+0x4]
  4534cb:	add    esp,0x8
  4534ce:	xor    eax,DWORD PTR [esp]
  4534d1:	xor    edx,DWORD PTR [esp+0x4]
  4534d5:	add    esp,0x8
  4534d8:	push   edx
  4534d9:	push   eax
  4534da:	mov    eax,DWORD PTR [ecx-0x68]
  4534dd:	mov    edx,DWORD PTR [ecx-0x64]
  4534e0:	shrd   eax,edx,0x7
  4534e4:	shr    edx,0x7
  4534e7:	xor    eax,DWORD PTR [esp]
  4534ea:	xor    edx,DWORD PTR [esp+0x4]
  4534ee:	add    esp,0x8
  4534f1:	add    eax,DWORD PTR [esp]
  4534f4:	adc    edx,DWORD PTR [esp+0x4]
  4534f8:	add    esp,0x8
  4534fb:	add    eax,DWORD PTR [ecx-0x70]
  4534fe:	adc    edx,DWORD PTR [ecx-0x6c]
  453501:	mov    DWORD PTR [ecx+0x10],eax
  453504:	mov    DWORD PTR [ecx+0x14],edx
  453507:	add    ecx,0x8
  45350a:	dec    edi
  45350b:	jne    0x45341d
  453511:	mov    eax,DWORD PTR [esp+0x20]
  453515:	mov    edx,DWORD PTR [esp+0x24]
  453519:	shrd   eax,edx,0xe
  45351d:	shr    edx,0xe
  453520:	push   edx
  453521:	push   eax
  453522:	mov    edx,DWORD PTR [esp+0x28]
  453526:	shl    edx,0x12
  453529:	xor    eax,eax
  45352b:	or     eax,DWORD PTR [esp]
  45352e:	or     edx,DWORD PTR [esp+0x4]
  453532:	add    esp,0x8
  453535:	push   edx
  453536:	push   eax
  453537:	mov    eax,DWORD PTR [esp+0x28]
  45353b:	mov    edx,DWORD PTR [esp+0x2c]
  45353f:	shrd   eax,edx,0x12
  453543:	shr    edx,0x12
  453546:	push   edx
  453547:	push   eax
  453548:	mov    edx,DWORD PTR [esp+0x30]
  45354c:	shl    edx,0xe
  45354f:	xor    eax,eax
  453551:	or     eax,DWORD PTR [esp]
  453554:	or     edx,DWORD PTR [esp+0x4]
  453558:	add    esp,0x8
  45355b:	xor    eax,DWORD PTR [esp]
  45355e:	xor    edx,DWORD PTR [esp+0x4]
  453562:	add    esp,0x8
  453565:	push   edx
  453566:	push   eax
  453567:	mov    eax,DWORD PTR [esp+0x2c]
  45356b:	shr    eax,0x9
  45356e:	xor    edx,edx
  453570:	push   edx
  453571:	push   eax
  453572:	mov    eax,DWORD PTR [esp+0x30]
  453576:	mov    edx,DWORD PTR [esp+0x34]
  45357a:	shld   edx,eax,0x17
  45357e:	shl    eax,0x17
  453581:	or     eax,DWORD PTR [esp]
  453584:	or     edx,DWORD PTR [esp+0x4]
  453588:	add    esp,0x8
  45358b:	xor    eax,DWORD PTR [esp]
  45358e:	xor    edx,DWORD PTR [esp+0x4]
  453592:	add    esp,0x8
  453595:	add    eax,DWORD PTR [esp+0x38]
  453599:	adc    edx,DWORD PTR [esp+0x3c]
  45359d:	push   edx
  45359e:	push   eax
  45359f:	mov    eax,DWORD PTR [esp+0x28]
  4535a3:	mov    edx,DWORD PTR [esp+0x2c]
  4535a7:	and    eax,DWORD PTR [esp+0x30]
  4535ab:	and    edx,DWORD PTR [esp+0x34]
  4535af:	push   edx
  4535b0:	push   eax
  4535b1:	mov    eax,DWORD PTR [esp+0x30]
  4535b5:	mov    edx,DWORD PTR [esp+0x34]
  4535b9:	not    eax
  4535bb:	not    edx
  4535bd:	and    eax,DWORD PTR [esp+0x40]
  4535c1:	and    edx,DWORD PTR [esp+0x44]
  4535c5:	xor    eax,DWORD PTR [esp]
  4535c8:	xor    edx,DWORD PTR [esp+0x4]
  4535cc:	add    esp,0x8
  4535cf:	add    eax,DWORD PTR [esp]
  4535d2:	adc    edx,DWORD PTR [esp+0x4]
  4535d6:	add    esp,0x8
  4535d9:	add    eax,0xd728ae22
  4535de:	adc    edx,0x428a2f98
  4535e4:	add    eax,DWORD PTR [esp+0x50]
  4535e8:	adc    edx,DWORD PTR [esp+0x54]
  4535ec:	mov    DWORD PTR [esp+0x40],eax
  4535f0:	mov    DWORD PTR [esp+0x44],edx
  4535f4:	mov    eax,DWORD PTR [esp]
  4535f7:	mov    edx,DWORD PTR [esp+0x4]
  4535fb:	shrd   eax,edx,0x1c
  4535ff:	shr    edx,0x1c
  453602:	push   edx
  453603:	push   eax
  453604:	mov    edx,DWORD PTR [esp+0x8]
  453608:	shl    edx,0x4
  45360b:	xor    eax,eax
  45360d:	or     eax,DWORD PTR [esp]
  453610:	or     edx,DWORD PTR [esp+0x4]
  453614:	add    esp,0x8
  453617:	push   edx
  453618:	push   eax
  453619:	mov    eax,DWORD PTR [esp+0xc]
  45361d:	shr    eax,0x2
  453620:	xor    edx,edx
  453622:	push   edx
  453623:	push   eax
  453624:	mov    eax,DWORD PTR [esp+0x10]
  453628:	mov    edx,DWORD PTR [esp+0x14]
  45362c:	shld   edx,eax,0x1e
  453630:	shl    eax,0x1e
  453633:	or     eax,DWORD PTR [esp]
  453636:	or     edx,DWORD PTR [esp+0x4]
  45363a:	add    esp,0x8
  45363d:	xor    eax,DWORD PTR [esp]
  453640:	xor    edx,DWORD PTR [esp+0x4]
  453644:	add    esp,0x8
  453647:	push   edx
  453648:	push   eax
  453649:	mov    eax,DWORD PTR [esp+0xc]
  45364d:	shr    eax,0x7
  453650:	xor    edx,edx
  453652:	push   edx
  453653:	push   eax
  453654:	mov    eax,DWORD PTR [esp+0x10]
  453658:	mov    edx,DWORD PTR [esp+0x14]
  45365c:	shld   edx,eax,0x19
  453660:	shl    eax,0x19
  453663:	or     eax,DWORD PTR [esp]
  453666:	or     edx,DWORD PTR [esp+0x4]
  45366a:	add    esp,0x8
  45366d:	xor    eax,DWORD PTR [esp]
  453670:	xor    edx,DWORD PTR [esp+0x4]
  453674:	add    esp,0x8
  453677:	push   edx
  453678:	push   eax
  453679:	mov    eax,DWORD PTR [esp+0x8]
  45367d:	mov    edx,DWORD PTR [esp+0xc]
  453681:	and    eax,DWORD PTR [esp+0x10]
  453685:	and    edx,DWORD PTR [esp+0x14]
  453689:	push   edx
  45368a:	push   eax
  45368b:	mov    eax,DWORD PTR [esp+0x10]
  45368f:	mov    edx,DWORD PTR [esp+0x14]
  453693:	and    eax,DWORD PTR [esp+0x20]
  453697:	and    edx,DWORD PTR [esp+0x24]
  45369b:	xor    eax,DWORD PTR [esp]
  45369e:	xor    edx,DWORD PTR [esp+0x4]
  4536a2:	add    esp,0x8
  4536a5:	push   edx
  4536a6:	push   eax
  4536a7:	mov    eax,DWORD PTR [esp+0x18]
  4536ab:	mov    edx,DWORD PTR [esp+0x1c]
  4536af:	and    eax,DWORD PTR [esp+0x20]
  4536b3:	and    edx,DWORD PTR [esp+0x24]
  4536b7:	xor    eax,DWORD PTR [esp]
  4536ba:	xor    edx,DWORD PTR [esp+0x4]
  4536be:	add    esp,0x8
  4536c1:	add    eax,DWORD PTR [esp]
  4536c4:	adc    edx,DWORD PTR [esp+0x4]
  4536c8:	add    esp,0x8
  4536cb:	mov    DWORD PTR [esp+0x48],eax
  4536cf:	mov    DWORD PTR [esp+0x4c],edx
  4536d3:	mov    eax,DWORD PTR [esp+0x18]
  4536d7:	mov    edx,DWORD PTR [esp+0x1c]
  4536db:	add    eax,DWORD PTR [esp+0x40]
  4536df:	adc    edx,DWORD PTR [esp+0x44]
  4536e3:	mov    DWORD PTR [esp+0x18],eax
  4536e7:	mov    DWORD PTR [esp+0x1c],edx
  4536eb:	mov    eax,DWORD PTR [esp+0x40]
  4536ef:	mov    edx,DWORD PTR [esp+0x44]
  4536f3:	add    eax,DWORD PTR [esp+0x48]
  4536f7:	adc    edx,DWORD PTR [esp+0x4c]
  4536fb:	mov    DWORD PTR [esp+0x38],eax
  4536ff:	mov    DWORD PTR [esp+0x3c],edx
  453703:	mov    eax,DWORD PTR [esp+0x18]
  453707:	mov    edx,DWORD PTR [esp+0x1c]
  45370b:	shrd   eax,edx,0xe
  45370f:	shr    edx,0xe
  453712:	push   edx
  453713:	push   eax
  453714:	mov    edx,DWORD PTR [esp+0x20]
  453718:	shl    edx,0x12
  45371b:	xor    eax,eax
  45371d:	or     eax,DWORD PTR [esp]
  453720:	or     edx,DWORD PTR [esp+0x4]
  453724:	add    esp,0x8
  453727:	push   edx
  453728:	push   eax
  453729:	mov    eax,DWORD PTR [esp+0x20]
  45372d:	mov    edx,DWORD PTR [esp+0x24]
  453731:	shrd   eax,edx,0x12
  453735:	shr    edx,0x12
  453738:	push   edx
  453739:	push   eax
  45373a:	mov    edx,DWORD PTR [esp+0x28]
  45373e:	shl    edx,0xe
  453741:	xor    eax,eax
  453743:	or     eax,DWORD PTR [esp]
  453746:	or     edx,DWORD PTR [esp+0x4]
  45374a:	add    esp,0x8
  45374d:	xor    eax,DWORD PTR [esp]
  453750:	xor    edx,DWORD PTR [esp+0x4]
  453754:	add    esp,0x8
  453757:	push   edx
  453758:	push   eax
  453759:	mov    eax,DWORD PTR [esp+0x24]
  45375d:	shr    eax,0x9
  453760:	xor    edx,edx
  453762:	push   edx
  453763:	push   eax
  453764:	mov    eax,DWORD PTR [esp+0x28]
  453768:	mov    edx,DWORD PTR [esp+0x2c]
  45376c:	shld   edx,eax,0x17
  453770:	shl    eax,0x17
  453773:	or     eax,DWORD PTR [esp]
  453776:	or     edx,DWORD PTR [esp+0x4]
  45377a:	add    esp,0x8
  45377d:	xor    eax,DWORD PTR [esp]
  453780:	xor    edx,DWORD PTR [esp+0x4]
  453784:	add    esp,0x8
  453787:	add    eax,DWORD PTR [esp+0x30]
  45378b:	adc    edx,DWORD PTR [esp+0x34]
  45378f:	push   edx
  453790:	push   eax
  453791:	mov    eax,DWORD PTR [esp+0x20]
  453795:	mov    edx,DWORD PTR [esp+0x24]
  453799:	and    eax,DWORD PTR [esp+0x28]
  45379d:	and    edx,DWORD PTR [esp+0x2c]
  4537a1:	push   edx
  4537a2:	push   eax
  4537a3:	mov    eax,DWORD PTR [esp+0x28]
  4537a7:	mov    edx,DWORD PTR [esp+0x2c]
  4537ab:	not    eax
  4537ad:	not    edx
  4537af:	and    eax,DWORD PTR [esp+0x38]
  4537b3:	and    edx,DWORD PTR [esp+0x3c]
  4537b7:	xor    eax,DWORD PTR [esp]
  4537ba:	xor    edx,DWORD PTR [esp+0x4]
  4537be:	add    esp,0x8
  4537c1:	add    eax,DWORD PTR [esp]
  4537c4:	adc    edx,DWORD PTR [esp+0x4]
  4537c8:	add    esp,0x8
  4537cb:	add    eax,0x23ef65cd
  4537d0:	adc    edx,0x71374491
  4537d6:	add    eax,DWORD PTR [esp+0x58]
  4537da:	adc    edx,DWORD PTR [esp+0x5c]
  4537de:	mov    DWORD PTR [esp+0x40],eax
  4537e2:	mov    DWORD PTR [esp+0x44],edx
  4537e6:	mov    eax,DWORD PTR [esp+0x38]
  4537ea:	mov    edx,DWORD PTR [esp+0x3c]
  4537ee:	shrd   eax,edx,0x1c
  4537f2:	shr    edx,0x1c
  4537f5:	push   edx
  4537f6:	push   eax
  4537f7:	mov    edx,DWORD PTR [esp+0x40]
  4537fb:	shl    edx,0x4
  4537fe:	xor    eax,eax
  453800:	or     eax,DWORD PTR [esp]
  453803:	or     edx,DWORD PTR [esp+0x4]
  453807:	add    esp,0x8
  45380a:	push   edx
  45380b:	push   eax
  45380c:	mov    eax,DWORD PTR [esp+0x44]
  453810:	shr    eax,0x2
  453813:	xor    edx,edx
  453815:	push   edx
  453816:	push   eax
  453817:	mov    eax,DWORD PTR [esp+0x48]
  45381b:	mov    edx,DWORD PTR [esp+0x4c]
  45381f:	shld   edx,eax,0x1e
  453823:	shl    eax,0x1e
  453826:	or     eax,DWORD PTR [esp]
  453829:	or     edx,DWORD PTR [esp+0x4]
  45382d:	add    esp,0x8
  453830:	xor    eax,DWORD PTR [esp]
  453833:	xor    edx,DWORD PTR [esp+0x4]
  453837:	add    esp,0x8
  45383a:	push   edx
  45383b:	push   eax
  45383c:	mov    eax,DWORD PTR [esp+0x44]
  453840:	shr    eax,0x7
  453843:	xor    edx,edx
  453845:	push   edx
  453846:	push   eax
  453847:	mov    eax,DWORD PTR [esp+0x48]
  45384b:	mov    edx,DWORD PTR [esp+0x4c]
  45384f:	shld   edx,eax,0x19
  453853:	shl    eax,0x19
  453856:	or     eax,DWORD PTR [esp]
  453859:	or     edx,DWORD PTR [esp+0x4]
  45385d:	add    esp,0x8
  453860:	xor    eax,DWORD PTR [esp]
  453863:	xor    edx,DWORD PTR [esp+0x4]
  453867:	add    esp,0x8
  45386a:	push   edx
  45386b:	push   eax
  45386c:	mov    eax,DWORD PTR [esp+0x40]
  453870:	mov    edx,DWORD PTR [esp+0x44]
  453874:	and    eax,DWORD PTR [esp+0x8]
  453878:	and    edx,DWORD PTR [esp+0xc]
  45387c:	push   edx
  45387d:	push   eax
  45387e:	mov    eax,DWORD PTR [esp+0x48]
  453882:	mov    edx,DWORD PTR [esp+0x4c]
  453886:	and    eax,DWORD PTR [esp+0x18]
  45388a:	and    edx,DWORD PTR [esp+0x1c]
  45388e:	xor    eax,DWORD PTR [esp]
  453891:	xor    edx,DWORD PTR [esp+0x4]
  453895:	add    esp,0x8
  453898:	push   edx
  453899:	push   eax
  45389a:	mov    eax,DWORD PTR [esp+0x10]
  45389e:	mov    edx,DWORD PTR [esp+0x14]
  4538a2:	and    eax,DWORD PTR [esp+0x18]
  4538a6:	and    edx,DWORD PTR [esp+0x1c]
  4538aa:	xor    eax,DWORD PTR [esp]
  4538ad:	xor    edx,DWORD PTR [esp+0x4]
  4538b1:	add    esp,0x8
  4538b4:	add    eax,DWORD PTR [esp]
  4538b7:	adc    edx,DWORD PTR [esp+0x4]
  4538bb:	add    esp,0x8
  4538be:	mov    DWORD PTR [esp+0x48],eax
  4538c2:	mov    DWORD PTR [esp+0x4c],edx
  4538c6:	mov    eax,DWORD PTR [esp+0x10]
  4538ca:	mov    edx,DWORD PTR [esp+0x14]
  4538ce:	add    eax,DWORD PTR [esp+0x40]
  4538d2:	adc    edx,DWORD PTR [esp+0x44]
  4538d6:	mov    DWORD PTR [esp+0x10],eax
  4538da:	mov    DWORD PTR [esp+0x14],edx
  4538de:	mov    eax,DWORD PTR [esp+0x40]
  4538e2:	mov    edx,DWORD PTR [esp+0x44]
  4538e6:	add    eax,DWORD PTR [esp+0x48]
  4538ea:	adc    edx,DWORD PTR [esp+0x4c]
  4538ee:	mov    DWORD PTR [esp+0x30],eax
  4538f2:	mov    DWORD PTR [esp+0x34],edx
  4538f6:	mov    eax,DWORD PTR [esp+0x10]
  4538fa:	mov    edx,DWORD PTR [esp+0x14]
  4538fe:	shrd   eax,edx,0xe
  453902:	shr    edx,0xe
  453905:	push   edx
  453906:	push   eax
  453907:	mov    edx,DWORD PTR [esp+0x18]
  45390b:	shl    edx,0x12
  45390e:	xor    eax,eax
  453910:	or     eax,DWORD PTR [esp]
  453913:	or     edx,DWORD PTR [esp+0x4]
  453917:	add    esp,0x8
  45391a:	push   edx
  45391b:	push   eax
  45391c:	mov    eax,DWORD PTR [esp+0x18]
  453920:	mov    edx,DWORD PTR [esp+0x1c]
  453924:	shrd   eax,edx,0x12
  453928:	shr    edx,0x12
  45392b:	push   edx
  45392c:	push   eax
  45392d:	mov    edx,DWORD PTR [esp+0x20]
  453931:	shl    edx,0xe
  453934:	xor    eax,eax
  453936:	or     eax,DWORD PTR [esp]
  453939:	or     edx,DWORD PTR [esp+0x4]
  45393d:	add    esp,0x8
  453940:	xor    eax,DWORD PTR [esp]
  453943:	xor    edx,DWORD PTR [esp+0x4]
  453947:	add    esp,0x8
  45394a:	push   edx
  45394b:	push   eax
  45394c:	mov    eax,DWORD PTR [esp+0x1c]
  453950:	shr    eax,0x9
  453953:	xor    edx,edx
  453955:	push   edx
  453956:	push   eax
  453957:	mov    eax,DWORD PTR [esp+0x20]
  45395b:	mov    edx,DWORD PTR [esp+0x24]
  45395f:	shld   edx,eax,0x17
  453963:	shl    eax,0x17
  453966:	or     eax,DWORD PTR [esp]
  453969:	or     edx,DWORD PTR [esp+0x4]
  45396d:	add    esp,0x8
  453970:	xor    eax,DWORD PTR [esp]
  453973:	xor    edx,DWORD PTR [esp+0x4]
  453977:	add    esp,0x8
  45397a:	add    eax,DWORD PTR [esp+0x28]
  45397e:	adc    edx,DWORD PTR [esp+0x2c]
  453982:	push   edx
  453983:	push   eax
  453984:	mov    eax,DWORD PTR [esp+0x18]
  453988:	mov    edx,DWORD PTR [esp+0x1c]
  45398c:	and    eax,DWORD PTR [esp+0x20]
  453990:	and    edx,DWORD PTR [esp+0x24]
  453994:	push   edx
  453995:	push   eax
  453996:	mov    eax,DWORD PTR [esp+0x20]
  45399a:	mov    edx,DWORD PTR [esp+0x24]
  45399e:	not    eax
  4539a0:	not    edx
  4539a2:	and    eax,DWORD PTR [esp+0x30]
  4539a6:	and    edx,DWORD PTR [esp+0x34]
  4539aa:	xor    eax,DWORD PTR [esp]
  4539ad:	xor    edx,DWORD PTR [esp+0x4]
  4539b1:	add    esp,0x8
  4539b4:	add    eax,DWORD PTR [esp]
  4539b7:	adc    edx,DWORD PTR [esp+0x4]
  4539bb:	add    esp,0x8
  4539be:	add    eax,0xec4d3b2f
  4539c3:	adc    edx,0xb5c0fbcf
  4539c9:	add    eax,DWORD PTR [esp+0x60]
  4539cd:	adc    edx,DWORD PTR [esp+0x64]
  4539d1:	mov    DWORD PTR [esp+0x40],eax
  4539d5:	mov    DWORD PTR [esp+0x44],edx
  4539d9:	mov    eax,DWORD PTR [esp+0x30]
  4539dd:	mov    edx,DWORD PTR [esp+0x34]
  4539e1:	shrd   eax,edx,0x1c
  4539e5:	shr    edx,0x1c
  4539e8:	push   edx
  4539e9:	push   eax
  4539ea:	mov    edx,DWORD PTR [esp+0x38]
  4539ee:	shl    edx,0x4
  4539f1:	xor    eax,eax
  4539f3:	or     eax,DWORD PTR [esp]
  4539f6:	or     edx,DWORD PTR [esp+0x4]
  4539fa:	add    esp,0x8
  4539fd:	push   edx
  4539fe:	push   eax
  4539ff:	mov    eax,DWORD PTR [esp+0x3c]
  453a03:	shr    eax,0x2
  453a06:	xor    edx,edx
  453a08:	push   edx
  453a09:	push   eax
  453a0a:	mov    eax,DWORD PTR [esp+0x40]
  453a0e:	mov    edx,DWORD PTR [esp+0x44]
  453a12:	shld   edx,eax,0x1e
  453a16:	shl    eax,0x1e
  453a19:	or     eax,DWORD PTR [esp]
  453a1c:	or     edx,DWORD PTR [esp+0x4]
  453a20:	add    esp,0x8
  453a23:	xor    eax,DWORD PTR [esp]
  453a26:	xor    edx,DWORD PTR [esp+0x4]
  453a2a:	add    esp,0x8
  453a2d:	push   edx
  453a2e:	push   eax
  453a2f:	mov    eax,DWORD PTR [esp+0x3c]
  453a33:	shr    eax,0x7
  453a36:	xor    edx,edx
  453a38:	push   edx
  453a39:	push   eax
  453a3a:	mov    eax,DWORD PTR [esp+0x40]
  453a3e:	mov    edx,DWORD PTR [esp+0x44]
  453a42:	shld   edx,eax,0x19
  453a46:	shl    eax,0x19
  453a49:	or     eax,DWORD PTR [esp]
  453a4c:	or     edx,DWORD PTR [esp+0x4]
  453a50:	add    esp,0x8
  453a53:	xor    eax,DWORD PTR [esp]
  453a56:	xor    edx,DWORD PTR [esp+0x4]
  453a5a:	add    esp,0x8
  453a5d:	push   edx
  453a5e:	push   eax
  453a5f:	mov    eax,DWORD PTR [esp+0x38]
  453a63:	mov    edx,DWORD PTR [esp+0x3c]
  453a67:	and    eax,DWORD PTR [esp+0x40]
  453a6b:	and    edx,DWORD PTR [esp+0x44]
  453a6f:	push   edx
  453a70:	push   eax
  453a71:	mov    eax,DWORD PTR [esp+0x40]
  453a75:	mov    edx,DWORD PTR [esp+0x44]
  453a79:	and    eax,DWORD PTR [esp+0x10]
  453a7d:	and    edx,DWORD PTR [esp+0x14]
  453a81:	xor    eax,DWORD PTR [esp]
  453a84:	xor    edx,DWORD PTR [esp+0x4]
  453a88:	add    esp,0x8
  453a8b:	push   edx
  453a8c:	push   eax
  453a8d:	mov    eax,DWORD PTR [esp+0x48]
  453a91:	mov    edx,DWORD PTR [esp+0x4c]
  453a95:	and    eax,DWORD PTR [esp+0x10]
  453a99:	and    edx,DWORD PTR [esp+0x14]
  453a9d:	xor    eax,DWORD PTR [esp]
  453aa0:	xor    edx,DWORD PTR [esp+0x4]
  453aa4:	add    esp,0x8
  453aa7:	add    eax,DWORD PTR [esp]
  453aaa:	adc    edx,DWORD PTR [esp+0x4]
  453aae:	add    esp,0x8
  453ab1:	mov    DWORD PTR [esp+0x48],eax
  453ab5:	mov    DWORD PTR [esp+0x4c],edx
  453ab9:	mov    eax,DWORD PTR [esp+0x8]
  453abd:	mov    edx,DWORD PTR [esp+0xc]
  453ac1:	add    eax,DWORD PTR [esp+0x40]
  453ac5:	adc    edx,DWORD PTR [esp+0x44]
  453ac9:	mov    DWORD PTR [esp+0x8],eax
  453acd:	mov    DWORD PTR [esp+0xc],edx
  453ad1:	mov    eax,DWORD PTR [esp+0x40]
  453ad5:	mov    edx,DWORD PTR [esp+0x44]
  453ad9:	add    eax,DWORD PTR [esp+0x48]
  453add:	adc    edx,DWORD PTR [esp+0x4c]
  453ae1:	mov    DWORD PTR [esp+0x28],eax
  453ae5:	mov    DWORD PTR [esp+0x2c],edx
  453ae9:	mov    eax,DWORD PTR [esp+0x8]
  453aed:	mov    edx,DWORD PTR [esp+0xc]
  453af1:	shrd   eax,edx,0xe
  453af5:	shr    edx,0xe
  453af8:	push   edx
  453af9:	push   eax
  453afa:	mov    edx,DWORD PTR [esp+0x10]
  453afe:	shl    edx,0x12
  453b01:	xor    eax,eax
  453b03:	or     eax,DWORD PTR [esp]
  453b06:	or     edx,DWORD PTR [esp+0x4]
  453b0a:	add    esp,0x8
  453b0d:	push   edx
  453b0e:	push   eax
  453b0f:	mov    eax,DWORD PTR [esp+0x10]
  453b13:	mov    edx,DWORD PTR [esp+0x14]
  453b17:	shrd   eax,edx,0x12
  453b1b:	shr    edx,0x12
  453b1e:	push   edx
  453b1f:	push   eax
  453b20:	mov    edx,DWORD PTR [esp+0x18]
  453b24:	shl    edx,0xe
  453b27:	xor    eax,eax
  453b29:	or     eax,DWORD PTR [esp]
  453b2c:	or     edx,DWORD PTR [esp+0x4]
  453b30:	add    esp,0x8
  453b33:	xor    eax,DWORD PTR [esp]
  453b36:	xor    edx,DWORD PTR [esp+0x4]
  453b3a:	add    esp,0x8
  453b3d:	push   edx
  453b3e:	push   eax
  453b3f:	mov    eax,DWORD PTR [esp+0x14]
  453b43:	shr    eax,0x9
  453b46:	xor    edx,edx
  453b48:	push   edx
  453b49:	push   eax
  453b4a:	mov    eax,DWORD PTR [esp+0x18]
  453b4e:	mov    edx,DWORD PTR [esp+0x1c]
  453b52:	shld   edx,eax,0x17
  453b56:	shl    eax,0x17
  453b59:	or     eax,DWORD PTR [esp]
  453b5c:	or     edx,DWORD PTR [esp+0x4]
  453b60:	add    esp,0x8
  453b63:	xor    eax,DWORD PTR [esp]
  453b66:	xor    edx,DWORD PTR [esp+0x4]
  453b6a:	add    esp,0x8
  453b6d:	add    eax,DWORD PTR [esp+0x20]
  453b71:	adc    edx,DWORD PTR [esp+0x24]
  453b75:	push   edx
  453b76:	push   eax
  453b77:	mov    eax,DWORD PTR [esp+0x10]
  453b7b:	mov    edx,DWORD PTR [esp+0x14]
  453b7f:	and    eax,DWORD PTR [esp+0x18]
  453b83:	and    edx,DWORD PTR [esp+0x1c]
  453b87:	push   edx
  453b88:	push   eax
  453b89:	mov    eax,DWORD PTR [esp+0x18]
  453b8d:	mov    edx,DWORD PTR [esp+0x1c]
  453b91:	not    eax
  453b93:	not    edx
  453b95:	and    eax,DWORD PTR [esp+0x28]
  453b99:	and    edx,DWORD PTR [esp+0x2c]
  453b9d:	xor    eax,DWORD PTR [esp]
  453ba0:	xor    edx,DWORD PTR [esp+0x4]
  453ba4:	add    esp,0x8
  453ba7:	add    eax,DWORD PTR [esp]
  453baa:	adc    edx,DWORD PTR [esp+0x4]
  453bae:	add    esp,0x8
  453bb1:	add    eax,0x8189dbbc
  453bb6:	adc    edx,0xe9b5dba5
  453bbc:	add    eax,DWORD PTR [esp+0x68]
  453bc0:	adc    edx,DWORD PTR [esp+0x6c]
  453bc4:	mov    DWORD PTR [esp+0x40],eax
  453bc8:	mov    DWORD PTR [esp+0x44],edx
  453bcc:	mov    eax,DWORD PTR [esp+0x28]
  453bd0:	mov    edx,DWORD PTR [esp+0x2c]
  453bd4:	shrd   eax,edx,0x1c
  453bd8:	shr    edx,0x1c
  453bdb:	push   edx
  453bdc:	push   eax
  453bdd:	mov    edx,DWORD PTR [esp+0x30]
  453be1:	shl    edx,0x4
  453be4:	xor    eax,eax
  453be6:	or     eax,DWORD PTR [esp]
  453be9:	or     edx,DWORD PTR [esp+0x4]
  453bed:	add    esp,0x8
  453bf0:	push   edx
  453bf1:	push   eax
  453bf2:	mov    eax,DWORD PTR [esp+0x34]
  453bf6:	shr    eax,0x2
  453bf9:	xor    edx,edx
  453bfb:	push   edx
  453bfc:	push   eax
  453bfd:	mov    eax,DWORD PTR [esp+0x38]
  453c01:	mov    edx,DWORD PTR [esp+0x3c]
  453c05:	shld   edx,eax,0x1e
  453c09:	shl    eax,0x1e
  453c0c:	or     eax,DWORD PTR [esp]
  453c0f:	or     edx,DWORD PTR [esp+0x4]
  453c13:	add    esp,0x8
  453c16:	xor    eax,DWORD PTR [esp]
  453c19:	xor    edx,DWORD PTR [esp+0x4]
  453c1d:	add    esp,0x8
  453c20:	push   edx
  453c21:	push   eax
  453c22:	mov    eax,DWORD PTR [esp+0x34]
  453c26:	shr    eax,0x7
  453c29:	xor    edx,edx
  453c2b:	push   edx
  453c2c:	push   eax
  453c2d:	mov    eax,DWORD PTR [esp+0x38]
  453c31:	mov    edx,DWORD PTR [esp+0x3c]
  453c35:	shld   edx,eax,0x19
  453c39:	shl    eax,0x19
  453c3c:	or     eax,DWORD PTR [esp]
  453c3f:	or     edx,DWORD PTR [esp+0x4]
  453c43:	add    esp,0x8
  453c46:	xor    eax,DWORD PTR [esp]
  453c49:	xor    edx,DWORD PTR [esp+0x4]
  453c4d:	add    esp,0x8
  453c50:	push   edx
  453c51:	push   eax
  453c52:	mov    eax,DWORD PTR [esp+0x30]
  453c56:	mov    edx,DWORD PTR [esp+0x34]
  453c5a:	and    eax,DWORD PTR [esp+0x38]
  453c5e:	and    edx,DWORD PTR [esp+0x3c]
  453c62:	push   edx
  453c63:	push   eax
  453c64:	mov    eax,DWORD PTR [esp+0x38]
  453c68:	mov    edx,DWORD PTR [esp+0x3c]
  453c6c:	and    eax,DWORD PTR [esp+0x48]
  453c70:	and    edx,DWORD PTR [esp+0x4c]
  453c74:	xor    eax,DWORD PTR [esp]
  453c77:	xor    edx,DWORD PTR [esp+0x4]
  453c7b:	add    esp,0x8
  453c7e:	push   edx
  453c7f:	push   eax
  453c80:	mov    eax,DWORD PTR [esp+0x40]
  453c84:	mov    edx,DWORD PTR [esp+0x44]
  453c88:	and    eax,DWORD PTR [esp+0x48]
  453c8c:	and    edx,DWORD PTR [esp+0x4c]
  453c90:	xor    eax,DWORD PTR [esp]
  453c93:	xor    edx,DWORD PTR [esp+0x4]
  453c97:	add    esp,0x8
  453c9a:	add    eax,DWORD PTR [esp]
  453c9d:	adc    edx,DWORD PTR [esp+0x4]
  453ca1:	add    esp,0x8
  453ca4:	mov    DWORD PTR [esp+0x48],eax
  453ca8:	mov    DWORD PTR [esp+0x4c],edx
  453cac:	mov    eax,DWORD PTR [esp]
  453caf:	mov    edx,DWORD PTR [esp+0x4]
  453cb3:	add    eax,DWORD PTR [esp+0x40]
  453cb7:	adc    edx,DWORD PTR [esp+0x44]
  453cbb:	mov    DWORD PTR [esp],eax
  453cbe:	mov    DWORD PTR [esp+0x4],edx
  453cc2:	mov    eax,DWORD PTR [esp+0x40]
  453cc6:	mov    edx,DWORD PTR [esp+0x44]
  453cca:	add    eax,DWORD PTR [esp+0x48]
  453cce:	adc    edx,DWORD PTR [esp+0x4c]
  453cd2:	mov    DWORD PTR [esp+0x20],eax
  453cd6:	mov    DWORD PTR [esp+0x24],edx
  453cda:	mov    eax,DWORD PTR [esp]
  453cdd:	mov    edx,DWORD PTR [esp+0x4]
  453ce1:	shrd   eax,edx,0xe
  453ce5:	shr    edx,0xe
  453ce8:	push   edx
  453ce9:	push   eax
  453cea:	mov    edx,DWORD PTR [esp+0x8]
  453cee:	shl    edx,0x12
  453cf1:	xor    eax,eax
  453cf3:	or     eax,DWORD PTR [esp]
  453cf6:	or     edx,DWORD PTR [esp+0x4]
  453cfa:	add    esp,0x8
  453cfd:	push   edx
  453cfe:	push   eax
  453cff:	mov    eax,DWORD PTR [esp+0x8]
  453d03:	mov    edx,DWORD PTR [esp+0xc]
  453d07:	shrd   eax,edx,0x12
  453d0b:	shr    edx,0x12
  453d0e:	push   edx
  453d0f:	push   eax
  453d10:	mov    edx,DWORD PTR [esp+0x10]
  453d14:	shl    edx,0xe
  453d17:	xor    eax,eax
  453d19:	or     eax,DWORD PTR [esp]
  453d1c:	or     edx,DWORD PTR [esp+0x4]
  453d20:	add    esp,0x8
  453d23:	xor    eax,DWORD PTR [esp]
  453d26:	xor    edx,DWORD PTR [esp+0x4]
  453d2a:	add    esp,0x8
  453d2d:	push   edx
  453d2e:	push   eax
  453d2f:	mov    eax,DWORD PTR [esp+0xc]
  453d33:	shr    eax,0x9
  453d36:	xor    edx,edx
  453d38:	push   edx
  453d39:	push   eax
  453d3a:	mov    eax,DWORD PTR [esp+0x10]
  453d3e:	mov    edx,DWORD PTR [esp+0x14]
  453d42:	shld   edx,eax,0x17
  453d46:	shl    eax,0x17
  453d49:	or     eax,DWORD PTR [esp]
  453d4c:	or     edx,DWORD PTR [esp+0x4]
  453d50:	add    esp,0x8
  453d53:	xor    eax,DWORD PTR [esp]
  453d56:	xor    edx,DWORD PTR [esp+0x4]
  453d5a:	add    esp,0x8
  453d5d:	add    eax,DWORD PTR [esp+0x18]
  453d61:	adc    edx,DWORD PTR [esp+0x1c]
  453d65:	push   edx
  453d66:	push   eax
  453d67:	mov    eax,DWORD PTR [esp+0x8]
  453d6b:	mov    edx,DWORD PTR [esp+0xc]
  453d6f:	and    eax,DWORD PTR [esp+0x10]
  453d73:	and    edx,DWORD PTR [esp+0x14]
  453d77:	push   edx
  453d78:	push   eax
  453d79:	mov    eax,DWORD PTR [esp+0x10]
  453d7d:	mov    edx,DWORD PTR [esp+0x14]
  453d81:	not    eax
  453d83:	not    edx
  453d85:	and    eax,DWORD PTR [esp+0x20]
  453d89:	and    edx,DWORD PTR [esp+0x24]
  453d8d:	xor    eax,DWORD PTR [esp]
  453d90:	xor    edx,DWORD PTR [esp+0x4]
  453d94:	add    esp,0x8
  453d97:	add    eax,DWORD PTR [esp]
  453d9a:	adc    edx,DWORD PTR [esp+0x4]
  453d9e:	add    esp,0x8
  453da1:	add    eax,0xf348b538
  453da6:	adc    edx,0x3956c25b
  453dac:	add    eax,DWORD PTR [esp+0x70]
  453db0:	adc    edx,DWORD PTR [esp+0x74]
  453db4:	mov    DWORD PTR [esp+0x40],eax
  453db8:	mov    DWORD PTR [esp+0x44],edx
  453dbc:	mov    eax,DWORD PTR [esp+0x20]
  453dc0:	mov    edx,DWORD PTR [esp+0x24]
  453dc4:	shrd   eax,edx,0x1c
  453dc8:	shr    edx,0x1c
  453dcb:	push   edx
  453dcc:	push   eax
  453dcd:	mov    edx,DWORD PTR [esp+0x28]
  453dd1:	shl    edx,0x4
  453dd4:	xor    eax,eax
  453dd6:	or     eax,DWORD PTR [esp]
  453dd9:	or     edx,DWORD PTR [esp+0x4]
  453ddd:	add    esp,0x8
  453de0:	push   edx
  453de1:	push   eax
  453de2:	mov    eax,DWORD PTR [esp+0x2c]
  453de6:	shr    eax,0x2
  453de9:	xor    edx,edx
  453deb:	push   edx
  453dec:	push   eax
  453ded:	mov    eax,DWORD PTR [esp+0x30]
  453df1:	mov    edx,DWORD PTR [esp+0x34]
  453df5:	shld   edx,eax,0x1e
  453df9:	shl    eax,0x1e
  453dfc:	or     eax,DWORD PTR [esp]
  453dff:	or     edx,DWORD PTR [esp+0x4]
  453e03:	add    esp,0x8
  453e06:	xor    eax,DWORD PTR [esp]
  453e09:	xor    edx,DWORD PTR [esp+0x4]
  453e0d:	add    esp,0x8
  453e10:	push   edx
  453e11:	push   eax
  453e12:	mov    eax,DWORD PTR [esp+0x2c]
  453e16:	shr    eax,0x7
  453e19:	xor    edx,edx
  453e1b:	push   edx
  453e1c:	push   eax
  453e1d:	mov    eax,DWORD PTR [esp+0x30]
  453e21:	mov    edx,DWORD PTR [esp+0x34]
  453e25:	shld   edx,eax,0x19
  453e29:	shl    eax,0x19
  453e2c:	or     eax,DWORD PTR [esp]
  453e2f:	or     edx,DWORD PTR [esp+0x4]
  453e33:	add    esp,0x8
  453e36:	xor    eax,DWORD PTR [esp]
  453e39:	xor    edx,DWORD PTR [esp+0x4]
  453e3d:	add    esp,0x8
  453e40:	push   edx
  453e41:	push   eax
  453e42:	mov    eax,DWORD PTR [esp+0x28]
  453e46:	mov    edx,DWORD PTR [esp+0x2c]
  453e4a:	and    eax,DWORD PTR [esp+0x30]
  453e4e:	and    edx,DWORD PTR [esp+0x34]
  453e52:	push   edx
  453e53:	push   eax
  453e54:	mov    eax,DWORD PTR [esp+0x30]
  453e58:	mov    edx,DWORD PTR [esp+0x34]
  453e5c:	and    eax,DWORD PTR [esp+0x40]
  453e60:	and    edx,DWORD PTR [esp+0x44]
  453e64:	xor    eax,DWORD PTR [esp]
  453e67:	xor    edx,DWORD PTR [esp+0x4]
  453e6b:	add    esp,0x8
  453e6e:	push   edx
  453e6f:	push   eax
  453e70:	mov    eax,DWORD PTR [esp+0x38]
  453e74:	mov    edx,DWORD PTR [esp+0x3c]
  453e78:	and    eax,DWORD PTR [esp+0x40]
  453e7c:	and    edx,DWORD PTR [esp+0x44]
  453e80:	xor    eax,DWORD PTR [esp]
  453e83:	xor    edx,DWORD PTR [esp+0x4]
  453e87:	add    esp,0x8
  453e8a:	add    eax,DWORD PTR [esp]
  453e8d:	adc    edx,DWORD PTR [esp+0x4]
  453e91:	add    esp,0x8
  453e94:	mov    DWORD PTR [esp+0x48],eax
  453e98:	mov    DWORD PTR [esp+0x4c],edx
  453e9c:	mov    eax,DWORD PTR [esp+0x38]
  453ea0:	mov    edx,DWORD PTR [esp+0x3c]
  453ea4:	add    eax,DWORD PTR [esp+0x40]
  453ea8:	adc    edx,DWORD PTR [esp+0x44]
  453eac:	mov    DWORD PTR [esp+0x38],eax
  453eb0:	mov    DWORD PTR [esp+0x3c],edx
  453eb4:	mov    eax,DWORD PTR [esp+0x40]
  453eb8:	mov    edx,DWORD PTR [esp+0x44]
  453ebc:	add    eax,DWORD PTR [esp+0x48]
  453ec0:	adc    edx,DWORD PTR [esp+0x4c]
  453ec4:	mov    DWORD PTR [esp+0x18],eax
  453ec8:	mov    DWORD PTR [esp+0x1c],edx
  453ecc:	mov    eax,DWORD PTR [esp+0x38]
  453ed0:	mov    edx,DWORD PTR [esp+0x3c]
  453ed4:	shrd   eax,edx,0xe
  453ed8:	shr    edx,0xe
  453edb:	push   edx
  453edc:	push   eax
  453edd:	mov    edx,DWORD PTR [esp+0x40]
  453ee1:	shl    edx,0x12
  453ee4:	xor    eax,eax
  453ee6:	or     eax,DWORD PTR [esp]
  453ee9:	or     edx,DWORD PTR [esp+0x4]
  453eed:	add    esp,0x8
  453ef0:	push   edx
  453ef1:	push   eax
  453ef2:	mov    eax,DWORD PTR [esp+0x40]
  453ef6:	mov    edx,DWORD PTR [esp+0x44]
  453efa:	shrd   eax,edx,0x12
  453efe:	shr    edx,0x12
  453f01:	push   edx
  453f02:	push   eax
  453f03:	mov    edx,DWORD PTR [esp+0x48]
  453f07:	shl    edx,0xe
  453f0a:	xor    eax,eax
  453f0c:	or     eax,DWORD PTR [esp]
  453f0f:	or     edx,DWORD PTR [esp+0x4]
  453f13:	add    esp,0x8
  453f16:	xor    eax,DWORD PTR [esp]
  453f19:	xor    edx,DWORD PTR [esp+0x4]
  453f1d:	add    esp,0x8
  453f20:	push   edx
  453f21:	push   eax
  453f22:	mov    eax,DWORD PTR [esp+0x44]
  453f26:	shr    eax,0x9
  453f29:	xor    edx,edx
  453f2b:	push   edx
  453f2c:	push   eax
  453f2d:	mov    eax,DWORD PTR [esp+0x48]
  453f31:	mov    edx,DWORD PTR [esp+0x4c]
  453f35:	shld   edx,eax,0x17
  453f39:	shl    eax,0x17
  453f3c:	or     eax,DWORD PTR [esp]
  453f3f:	or     edx,DWORD PTR [esp+0x4]
  453f43:	add    esp,0x8
  453f46:	xor    eax,DWORD PTR [esp]
  453f49:	xor    edx,DWORD PTR [esp+0x4]
  453f4d:	add    esp,0x8
  453f50:	add    eax,DWORD PTR [esp+0x10]
  453f54:	adc    edx,DWORD PTR [esp+0x14]
  453f58:	push   edx
  453f59:	push   eax
  453f5a:	mov    eax,DWORD PTR [esp+0x40]
  453f5e:	mov    edx,DWORD PTR [esp+0x44]
  453f62:	and    eax,DWORD PTR [esp+0x8]
  453f66:	and    edx,DWORD PTR [esp+0xc]
  453f6a:	push   edx
  453f6b:	push   eax
  453f6c:	mov    eax,DWORD PTR [esp+0x48]
  453f70:	mov    edx,DWORD PTR [esp+0x4c]
  453f74:	not    eax
  453f76:	not    edx
  453f78:	and    eax,DWORD PTR [esp+0x18]
  453f7c:	and    edx,DWORD PTR [esp+0x1c]
  453f80:	xor    eax,DWORD PTR [esp]
  453f83:	xor    edx,DWORD PTR [esp+0x4]
  453f87:	add    esp,0x8
  453f8a:	add    eax,DWORD PTR [esp]
  453f8d:	adc    edx,DWORD PTR [esp+0x4]
  453f91:	add    esp,0x8
  453f94:	add    eax,0xb605d019
  453f99:	adc    edx,0x59f111f1
  453f9f:	add    eax,DWORD PTR [esp+0x78]
  453fa3:	adc    edx,DWORD PTR [esp+0x7c]
  453fa7:	mov    DWORD PTR [esp+0x40],eax
  453fab:	mov    DWORD PTR [esp+0x44],edx
  453faf:	mov    eax,DWORD PTR [esp+0x18]
  453fb3:	mov    edx,DWORD PTR [esp+0x1c]
  453fb7:	shrd   eax,edx,0x1c
  453fbb:	shr    edx,0x1c
  453fbe:	push   edx
  453fbf:	push   eax
  453fc0:	mov    edx,DWORD PTR [esp+0x20]
  453fc4:	shl    edx,0x4
  453fc7:	xor    eax,eax
  453fc9:	or     eax,DWORD PTR [esp]
  453fcc:	or     edx,DWORD PTR [esp+0x4]
  453fd0:	add    esp,0x8
  453fd3:	push   edx
  453fd4:	push   eax
  453fd5:	mov    eax,DWORD PTR [esp+0x24]
  453fd9:	shr    eax,0x2
  453fdc:	xor    edx,edx
  453fde:	push   edx
  453fdf:	push   eax
  453fe0:	mov    eax,DWORD PTR [esp+0x28]
  453fe4:	mov    edx,DWORD PTR [esp+0x2c]
  453fe8:	shld   edx,eax,0x1e
  453fec:	shl    eax,0x1e
  453fef:	or     eax,DWORD PTR [esp]
  453ff2:	or     edx,DWORD PTR [esp+0x4]
  453ff6:	add    esp,0x8
  453ff9:	xor    eax,DWORD PTR [esp]
  453ffc:	xor    edx,DWORD PTR [esp+0x4]
  454000:	add    esp,0x8
  454003:	push   edx
  454004:	push   eax
  454005:	mov    eax,DWORD PTR [esp+0x24]
  454009:	shr    eax,0x7
  45400c:	xor    edx,edx
  45400e:	push   edx
  45400f:	push   eax
  454010:	mov    eax,DWORD PTR [esp+0x28]
  454014:	mov    edx,DWORD PTR [esp+0x2c]
  454018:	shld   edx,eax,0x19
  45401c:	shl    eax,0x19
  45401f:	or     eax,DWORD PTR [esp]
  454022:	or     edx,DWORD PTR [esp+0x4]
  454026:	add    esp,0x8
  454029:	xor    eax,DWORD PTR [esp]
  45402c:	xor    edx,DWORD PTR [esp+0x4]
  454030:	add    esp,0x8
  454033:	push   edx
  454034:	push   eax
  454035:	mov    eax,DWORD PTR [esp+0x20]
  454039:	mov    edx,DWORD PTR [esp+0x24]
  45403d:	and    eax,DWORD PTR [esp+0x28]
  454041:	and    edx,DWORD PTR [esp+0x2c]
  454045:	push   edx
  454046:	push   eax
  454047:	mov    eax,DWORD PTR [esp+0x28]
  45404b:	mov    edx,DWORD PTR [esp+0x2c]
  45404f:	and    eax,DWORD PTR [esp+0x38]
  454053:	and    edx,DWORD PTR [esp+0x3c]
  454057:	xor    eax,DWORD PTR [esp]
  45405a:	xor    edx,DWORD PTR [esp+0x4]
  45405e:	add    esp,0x8
  454061:	push   edx
  454062:	push   eax
  454063:	mov    eax,DWORD PTR [esp+0x30]
  454067:	mov    edx,DWORD PTR [esp+0x34]
  45406b:	and    eax,DWORD PTR [esp+0x38]
  45406f:	and    edx,DWORD PTR [esp+0x3c]
  454073:	xor    eax,DWORD PTR [esp]
  454076:	xor    edx,DWORD PTR [esp+0x4]
  45407a:	add    esp,0x8
  45407d:	add    eax,DWORD PTR [esp]
  454080:	adc    edx,DWORD PTR [esp+0x4]
  454084:	add    esp,0x8
  454087:	mov    DWORD PTR [esp+0x48],eax
  45408b:	mov    DWORD PTR [esp+0x4c],edx
  45408f:	mov    eax,DWORD PTR [esp+0x30]
  454093:	mov    edx,DWORD PTR [esp+0x34]
  454097:	add    eax,DWORD PTR [esp+0x40]
  45409b:	adc    edx,DWORD PTR [esp+0x44]
  45409f:	mov    DWORD PTR [esp+0x30],eax
  4540a3:	mov    DWORD PTR [esp+0x34],edx
  4540a7:	mov    eax,DWORD PTR [esp+0x40]
  4540ab:	mov    edx,DWORD PTR [esp+0x44]
  4540af:	add    eax,DWORD PTR [esp+0x48]
  4540b3:	adc    edx,DWORD PTR [esp+0x4c]
  4540b7:	mov    DWORD PTR [esp+0x10],eax
  4540bb:	mov    DWORD PTR [esp+0x14],edx
  4540bf:	mov    eax,DWORD PTR [esp+0x30]
  4540c3:	mov    edx,DWORD PTR [esp+0x34]
  4540c7:	shrd   eax,edx,0xe
  4540cb:	shr    edx,0xe
  4540ce:	push   edx
  4540cf:	push   eax
  4540d0:	mov    edx,DWORD PTR [esp+0x38]
  4540d4:	shl    edx,0x12
  4540d7:	xor    eax,eax
  4540d9:	or     eax,DWORD PTR [esp]
  4540dc:	or     edx,DWORD PTR [esp+0x4]
  4540e0:	add    esp,0x8
  4540e3:	push   edx
  4540e4:	push   eax
  4540e5:	mov    eax,DWORD PTR [esp+0x38]
  4540e9:	mov    edx,DWORD PTR [esp+0x3c]
  4540ed:	shrd   eax,edx,0x12
  4540f1:	shr    edx,0x12
  4540f4:	push   edx
  4540f5:	push   eax
  4540f6:	mov    edx,DWORD PTR [esp+0x40]
  4540fa:	shl    edx,0xe
  4540fd:	xor    eax,eax
  4540ff:	or     eax,DWORD PTR [esp]
  454102:	or     edx,DWORD PTR [esp+0x4]
  454106:	add    esp,0x8
  454109:	xor    eax,DWORD PTR [esp]
  45410c:	xor    edx,DWORD PTR [esp+0x4]
  454110:	add    esp,0x8
  454113:	push   edx
  454114:	push   eax
  454115:	mov    eax,DWORD PTR [esp+0x3c]
  454119:	shr    eax,0x9
  45411c:	xor    edx,edx
  45411e:	push   edx
  45411f:	push   eax
  454120:	mov    eax,DWORD PTR [esp+0x40]
  454124:	mov    edx,DWORD PTR [esp+0x44]
  454128:	shld   edx,eax,0x17
  45412c:	shl    eax,0x17
  45412f:	or     eax,DWORD PTR [esp]
  454132:	or     edx,DWORD PTR [esp+0x4]
  454136:	add    esp,0x8
  454139:	xor    eax,DWORD PTR [esp]
  45413c:	xor    edx,DWORD PTR [esp+0x4]
  454140:	add    esp,0x8
  454143:	add    eax,DWORD PTR [esp+0x8]
  454147:	adc    edx,DWORD PTR [esp+0xc]
  45414b:	push   edx
  45414c:	push   eax
  45414d:	mov    eax,DWORD PTR [esp+0x38]
  454151:	mov    edx,DWORD PTR [esp+0x3c]
  454155:	and    eax,DWORD PTR [esp+0x40]
  454159:	and    edx,DWORD PTR [esp+0x44]
  45415d:	push   edx
  45415e:	push   eax
  45415f:	mov    eax,DWORD PTR [esp+0x40]
  454163:	mov    edx,DWORD PTR [esp+0x44]
  454167:	not    eax
  454169:	not    edx
  45416b:	and    eax,DWORD PTR [esp+0x10]
  45416f:	and    edx,DWORD PTR [esp+0x14]
  454173:	xor    eax,DWORD PTR [esp]
  454176:	xor    edx,DWORD PTR [esp+0x4]
  45417a:	add    esp,0x8
  45417d:	add    eax,DWORD PTR [esp]
  454180:	adc    edx,DWORD PTR [esp+0x4]
  454184:	add    esp,0x8
  454187:	add    eax,0xaf194f9b
  45418c:	adc    edx,0x923f82a4
  454192:	add    eax,DWORD PTR [esp+0x80]
  454199:	adc    edx,DWORD PTR [esp+0x84]
  4541a0:	mov    DWORD PTR [esp+0x40],eax
  4541a4:	mov    DWORD PTR [esp+0x44],edx
  4541a8:	mov    eax,DWORD PTR [esp+0x10]
  4541ac:	mov    edx,DWORD PTR [esp+0x14]
  4541b0:	shrd   eax,edx,0x1c
  4541b4:	shr    edx,0x1c
  4541b7:	push   edx
  4541b8:	push   eax
  4541b9:	mov    edx,DWORD PTR [esp+0x18]
  4541bd:	shl    edx,0x4
  4541c0:	xor    eax,eax
  4541c2:	or     eax,DWORD PTR [esp]
  4541c5:	or     edx,DWORD PTR [esp+0x4]
  4541c9:	add    esp,0x8
  4541cc:	push   edx
  4541cd:	push   eax
  4541ce:	mov    eax,DWORD PTR [esp+0x1c]
  4541d2:	shr    eax,0x2
  4541d5:	xor    edx,edx
  4541d7:	push   edx
  4541d8:	push   eax
  4541d9:	mov    eax,DWORD PTR [esp+0x20]
  4541dd:	mov    edx,DWORD PTR [esp+0x24]
  4541e1:	shld   edx,eax,0x1e
  4541e5:	shl    eax,0x1e
  4541e8:	or     eax,DWORD PTR [esp]
  4541eb:	or     edx,DWORD PTR [esp+0x4]
  4541ef:	add    esp,0x8
  4541f2:	xor    eax,DWORD PTR [esp]
  4541f5:	xor    edx,DWORD PTR [esp+0x4]
  4541f9:	add    esp,0x8
  4541fc:	push   edx
  4541fd:	push   eax
  4541fe:	mov    eax,DWORD PTR [esp+0x1c]
  454202:	shr    eax,0x7
  454205:	xor    edx,edx
  454207:	push   edx
  454208:	push   eax
  454209:	mov    eax,DWORD PTR [esp+0x20]
  45420d:	mov    edx,DWORD PTR [esp+0x24]
  454211:	shld   edx,eax,0x19
  454215:	shl    eax,0x19
  454218:	or     eax,DWORD PTR [esp]
  45421b:	or     edx,DWORD PTR [esp+0x4]
  45421f:	add    esp,0x8
  454222:	xor    eax,DWORD PTR [esp]
  454225:	xor    edx,DWORD PTR [esp+0x4]
  454229:	add    esp,0x8
  45422c:	push   edx
  45422d:	push   eax
  45422e:	mov    eax,DWORD PTR [esp+0x18]
  454232:	mov    edx,DWORD PTR [esp+0x1c]
  454236:	and    eax,DWORD PTR [esp+0x20]
  45423a:	and    edx,DWORD PTR [esp+0x24]
  45423e:	push   edx
  45423f:	push   eax
  454240:	mov    eax,DWORD PTR [esp+0x20]
  454244:	mov    edx,DWORD PTR [esp+0x24]
  454248:	and    eax,DWORD PTR [esp+0x30]
  45424c:	and    edx,DWORD PTR [esp+0x34]
  454250:	xor    eax,DWORD PTR [esp]
  454253:	xor    edx,DWORD PTR [esp+0x4]
  454257:	add    esp,0x8
  45425a:	push   edx
  45425b:	push   eax
  45425c:	mov    eax,DWORD PTR [esp+0x28]
  454260:	mov    edx,DWORD PTR [esp+0x2c]
  454264:	and    eax,DWORD PTR [esp+0x30]
  454268:	and    edx,DWORD PTR [esp+0x34]
  45426c:	xor    eax,DWORD PTR [esp]
  45426f:	xor    edx,DWORD PTR [esp+0x4]
  454273:	add    esp,0x8
  454276:	add    eax,DWORD PTR [esp]
  454279:	adc    edx,DWORD PTR [esp+0x4]
  45427d:	add    esp,0x8
  454280:	mov    DWORD PTR [esp+0x48],eax
  454284:	mov    DWORD PTR [esp+0x4c],edx
  454288:	mov    eax,DWORD PTR [esp+0x28]
  45428c:	mov    edx,DWORD PTR [esp+0x2c]
  454290:	add    eax,DWORD PTR [esp+0x40]
  454294:	adc    edx,DWORD PTR [esp+0x44]
  454298:	mov    DWORD PTR [esp+0x28],eax
  45429c:	mov    DWORD PTR [esp+0x2c],edx
  4542a0:	mov    eax,DWORD PTR [esp+0x40]
  4542a4:	mov    edx,DWORD PTR [esp+0x44]
  4542a8:	add    eax,DWORD PTR [esp+0x48]
  4542ac:	adc    edx,DWORD PTR [esp+0x4c]
  4542b0:	mov    DWORD PTR [esp+0x8],eax
  4542b4:	mov    DWORD PTR [esp+0xc],edx
  4542b8:	mov    eax,DWORD PTR [esp+0x28]
  4542bc:	mov    edx,DWORD PTR [esp+0x2c]
  4542c0:	shrd   eax,edx,0xe
  4542c4:	shr    edx,0xe
  4542c7:	push   edx
  4542c8:	push   eax
  4542c9:	mov    edx,DWORD PTR [esp+0x30]
  4542cd:	shl    edx,0x12
  4542d0:	xor    eax,eax
  4542d2:	or     eax,DWORD PTR [esp]
  4542d5:	or     edx,DWORD PTR [esp+0x4]
  4542d9:	add    esp,0x8
  4542dc:	push   edx
  4542dd:	push   eax
  4542de:	mov    eax,DWORD PTR [esp+0x30]
  4542e2:	mov    edx,DWORD PTR [esp+0x34]
  4542e6:	shrd   eax,edx,0x12
  4542ea:	shr    edx,0x12
  4542ed:	push   edx
  4542ee:	push   eax
  4542ef:	mov    edx,DWORD PTR [esp+0x38]
  4542f3:	shl    edx,0xe
  4542f6:	xor    eax,eax
  4542f8:	or     eax,DWORD PTR [esp]
  4542fb:	or     edx,DWORD PTR [esp+0x4]
  4542ff:	add    esp,0x8
  454302:	xor    eax,DWORD PTR [esp]
  454305:	xor    edx,DWORD PTR [esp+0x4]
  454309:	add    esp,0x8
  45430c:	push   edx
  45430d:	push   eax
  45430e:	mov    eax,DWORD PTR [esp+0x34]
  454312:	shr    eax,0x9
  454315:	xor    edx,edx
  454317:	push   edx
  454318:	push   eax
  454319:	mov    eax,DWORD PTR [esp+0x38]
  45431d:	mov    edx,DWORD PTR [esp+0x3c]
  454321:	shld   edx,eax,0x17
  454325:	shl    eax,0x17
  454328:	or     eax,DWORD PTR [esp]
  45432b:	or     edx,DWORD PTR [esp+0x4]
  45432f:	add    esp,0x8
  454332:	xor    eax,DWORD PTR [esp]
  454335:	xor    edx,DWORD PTR [esp+0x4]
  454339:	add    esp,0x8
  45433c:	add    eax,DWORD PTR [esp]
  45433f:	adc    edx,DWORD PTR [esp+0x4]
  454343:	push   edx
  454344:	push   eax
  454345:	mov    eax,DWORD PTR [esp+0x30]
  454349:	mov    edx,DWORD PTR [esp+0x34]
  45434d:	and    eax,DWORD PTR [esp+0x38]
  454351:	and    edx,DWORD PTR [esp+0x3c]
  454355:	push   edx
  454356:	push   eax
  454357:	mov    eax,DWORD PTR [esp+0x38]
  45435b:	mov    edx,DWORD PTR [esp+0x3c]
  45435f:	not    eax
  454361:	not    edx
  454363:	and    eax,DWORD PTR [esp+0x48]
  454367:	and    edx,DWORD PTR [esp+0x4c]
  45436b:	xor    eax,DWORD PTR [esp]
  45436e:	xor    edx,DWORD PTR [esp+0x4]
  454372:	add    esp,0x8
  454375:	add    eax,DWORD PTR [esp]
  454378:	adc    edx,DWORD PTR [esp+0x4]
  45437c:	add    esp,0x8
  45437f:	add    eax,0xda6d8118
  454384:	adc    edx,0xab1c5ed5
  45438a:	add    eax,DWORD PTR [esp+0x88]
  454391:	adc    edx,DWORD PTR [esp+0x8c]
  454398:	mov    DWORD PTR [esp+0x40],eax
  45439c:	mov    DWORD PTR [esp+0x44],edx
  4543a0:	mov    eax,DWORD PTR [esp+0x8]
  4543a4:	mov    edx,DWORD PTR [esp+0xc]
  4543a8:	shrd   eax,edx,0x1c
  4543ac:	shr    edx,0x1c
  4543af:	push   edx
  4543b0:	push   eax
  4543b1:	mov    edx,DWORD PTR [esp+0x10]
  4543b5:	shl    edx,0x4
  4543b8:	xor    eax,eax
  4543ba:	or     eax,DWORD PTR [esp]
  4543bd:	or     edx,DWORD PTR [esp+0x4]
  4543c1:	add    esp,0x8
  4543c4:	push   edx
  4543c5:	push   eax
  4543c6:	mov    eax,DWORD PTR [esp+0x14]
  4543ca:	shr    eax,0x2
  4543cd:	xor    edx,edx
  4543cf:	push   edx
  4543d0:	push   eax
  4543d1:	mov    eax,DWORD PTR [esp+0x18]
  4543d5:	mov    edx,DWORD PTR [esp+0x1c]
  4543d9:	shld   edx,eax,0x1e
  4543dd:	shl    eax,0x1e
  4543e0:	or     eax,DWORD PTR [esp]
  4543e3:	or     edx,DWORD PTR [esp+0x4]
  4543e7:	add    esp,0x8
  4543ea:	xor    eax,DWORD PTR [esp]
  4543ed:	xor    edx,DWORD PTR [esp+0x4]
  4543f1:	add    esp,0x8
  4543f4:	push   edx
  4543f5:	push   eax
  4543f6:	mov    eax,DWORD PTR [esp+0x14]
  4543fa:	shr    eax,0x7
  4543fd:	xor    edx,edx
  4543ff:	push   edx
  454400:	push   eax
  454401:	mov    eax,DWORD PTR [esp+0x18]
  454405:	mov    edx,DWORD PTR [esp+0x1c]
  454409:	shld   edx,eax,0x19
  45440d:	shl    eax,0x19
  454410:	or     eax,DWORD PTR [esp]
  454413:	or     edx,DWORD PTR [esp+0x4]
  454417:	add    esp,0x8
  45441a:	xor    eax,DWORD PTR [esp]
  45441d:	xor    edx,DWORD PTR [esp+0x4]
  454421:	add    esp,0x8
  454424:	push   edx
  454425:	push   eax
  454426:	mov    eax,DWORD PTR [esp+0x10]
  45442a:	mov    edx,DWORD PTR [esp+0x14]
  45442e:	and    eax,DWORD PTR [esp+0x18]
  454432:	and    edx,DWORD PTR [esp+0x1c]
  454436:	push   edx
  454437:	push   eax
  454438:	mov    eax,DWORD PTR [esp+0x18]
  45443c:	mov    edx,DWORD PTR [esp+0x1c]
  454440:	and    eax,DWORD PTR [esp+0x28]
  454444:	and    edx,DWORD PTR [esp+0x2c]
  454448:	xor    eax,DWORD PTR [esp]
  45444b:	xor    edx,DWORD PTR [esp+0x4]
  45444f:	add    esp,0x8
  454452:	push   edx
  454453:	push   eax
  454454:	mov    eax,DWORD PTR [esp+0x20]
  454458:	mov    edx,DWORD PTR [esp+0x24]
  45445c:	and    eax,DWORD PTR [esp+0x28]
  454460:	and    edx,DWORD PTR [esp+0x2c]
  454464:	xor    eax,DWORD PTR [esp]
  454467:	xor    edx,DWORD PTR [esp+0x4]
  45446b:	add    esp,0x8
  45446e:	add    eax,DWORD PTR [esp]
  454471:	adc    edx,DWORD PTR [esp+0x4]
  454475:	add    esp,0x8
  454478:	mov    DWORD PTR [esp+0x48],eax
  45447c:	mov    DWORD PTR [esp+0x4c],edx
  454480:	mov    eax,DWORD PTR [esp+0x20]
  454484:	mov    edx,DWORD PTR [esp+0x24]
  454488:	add    eax,DWORD PTR [esp+0x40]
  45448c:	adc    edx,DWORD PTR [esp+0x44]
  454490:	mov    DWORD PTR [esp+0x20],eax
  454494:	mov    DWORD PTR [esp+0x24],edx
  454498:	mov    eax,DWORD PTR [esp+0x40]
  45449c:	mov    edx,DWORD PTR [esp+0x44]
  4544a0:	add    eax,DWORD PTR [esp+0x48]
  4544a4:	adc    edx,DWORD PTR [esp+0x4c]
  4544a8:	mov    DWORD PTR [esp],eax
  4544ab:	mov    DWORD PTR [esp+0x4],edx
  4544af:	mov    eax,DWORD PTR [esp+0x20]
  4544b3:	mov    edx,DWORD PTR [esp+0x24]
  4544b7:	shrd   eax,edx,0xe
  4544bb:	shr    edx,0xe
  4544be:	push   edx
  4544bf:	push   eax
  4544c0:	mov    edx,DWORD PTR [esp+0x28]
  4544c4:	shl    edx,0x12
  4544c7:	xor    eax,eax
  4544c9:	or     eax,DWORD PTR [esp]
  4544cc:	or     edx,DWORD PTR [esp+0x4]
  4544d0:	add    esp,0x8
  4544d3:	push   edx
  4544d4:	push   eax
  4544d5:	mov    eax,DWORD PTR [esp+0x28]
  4544d9:	mov    edx,DWORD PTR [esp+0x2c]
  4544dd:	shrd   eax,edx,0x12
  4544e1:	shr    edx,0x12
  4544e4:	push   edx
  4544e5:	push   eax
  4544e6:	mov    edx,DWORD PTR [esp+0x30]
  4544ea:	shl    edx,0xe
  4544ed:	xor    eax,eax
  4544ef:	or     eax,DWORD PTR [esp]
  4544f2:	or     edx,DWORD PTR [esp+0x4]
  4544f6:	add    esp,0x8
  4544f9:	xor    eax,DWORD PTR [esp]
  4544fc:	xor    edx,DWORD PTR [esp+0x4]
  454500:	add    esp,0x8
  454503:	push   edx
  454504:	push   eax
  454505:	mov    eax,DWORD PTR [esp+0x2c]
  454509:	shr    eax,0x9
  45450c:	xor    edx,edx
  45450e:	push   edx
  45450f:	push   eax
  454510:	mov    eax,DWORD PTR [esp+0x30]
  454514:	mov    edx,DWORD PTR [esp+0x34]
  454518:	shld   edx,eax,0x17
  45451c:	shl    eax,0x17
  45451f:	or     eax,DWORD PTR [esp]
  454522:	or     edx,DWORD PTR [esp+0x4]
  454526:	add    esp,0x8
  454529:	xor    eax,DWORD PTR [esp]
  45452c:	xor    edx,DWORD PTR [esp+0x4]
  454530:	add    esp,0x8
  454533:	add    eax,DWORD PTR [esp+0x38]
  454537:	adc    edx,DWORD PTR [esp+0x3c]
  45453b:	push   edx
  45453c:	push   eax
  45453d:	mov    eax,DWORD PTR [esp+0x28]
  454541:	mov    edx,DWORD PTR [esp+0x2c]
  454545:	and    eax,DWORD PTR [esp+0x30]
  454549:	and    edx,DWORD PTR [esp+0x34]
  45454d:	push   edx
  45454e:	push   eax
  45454f:	mov    eax,DWORD PTR [esp+0x30]
  454553:	mov    edx,DWORD PTR [esp+0x34]
  454557:	not    eax
  454559:	not    edx
  45455b:	and    eax,DWORD PTR [esp+0x40]
  45455f:	and    edx,DWORD PTR [esp+0x44]
  454563:	xor    eax,DWORD PTR [esp]
  454566:	xor    edx,DWORD PTR [esp+0x4]
  45456a:	add    esp,0x8
  45456d:	add    eax,DWORD PTR [esp]
  454570:	adc    edx,DWORD PTR [esp+0x4]
  454574:	add    esp,0x8
  454577:	add    eax,0xa3030242
  45457c:	adc    edx,0xd807aa98
  454582:	add    eax,DWORD PTR [esp+0x90]
  454589:	adc    edx,DWORD PTR [esp+0x94]
  454590:	mov    DWORD PTR [esp+0x40],eax
  454594:	mov    DWORD PTR [esp+0x44],edx
  454598:	mov    eax,DWORD PTR [esp]
  45459b:	mov    edx,DWORD PTR [esp+0x4]
  45459f:	shrd   eax,edx,0x1c
  4545a3:	shr    edx,0x1c
  4545a6:	push   edx
  4545a7:	push   eax
  4545a8:	mov    edx,DWORD PTR [esp+0x8]
  4545ac:	shl    edx,0x4
  4545af:	xor    eax,eax
  4545b1:	or     eax,DWORD PTR [esp]
  4545b4:	or     edx,DWORD PTR [esp+0x4]
  4545b8:	add    esp,0x8
  4545bb:	push   edx
  4545bc:	push   eax
  4545bd:	mov    eax,DWORD PTR [esp+0xc]
  4545c1:	shr    eax,0x2
  4545c4:	xor    edx,edx
  4545c6:	push   edx
  4545c7:	push   eax
  4545c8:	mov    eax,DWORD PTR [esp+0x10]
  4545cc:	mov    edx,DWORD PTR [esp+0x14]
  4545d0:	shld   edx,eax,0x1e
  4545d4:	shl    eax,0x1e
  4545d7:	or     eax,DWORD PTR [esp]
  4545da:	or     edx,DWORD PTR [esp+0x4]
  4545de:	add    esp,0x8
  4545e1:	xor    eax,DWORD PTR [esp]
  4545e4:	xor    edx,DWORD PTR [esp+0x4]
  4545e8:	add    esp,0x8
  4545eb:	push   edx
  4545ec:	push   eax
  4545ed:	mov    eax,DWORD PTR [esp+0xc]
  4545f1:	shr    eax,0x7
  4545f4:	xor    edx,edx
  4545f6:	push   edx
  4545f7:	push   eax
  4545f8:	mov    eax,DWORD PTR [esp+0x10]
  4545fc:	mov    edx,DWORD PTR [esp+0x14]
  454600:	shld   edx,eax,0x19
  454604:	shl    eax,0x19
  454607:	or     eax,DWORD PTR [esp]
  45460a:	or     edx,DWORD PTR [esp+0x4]
  45460e:	add    esp,0x8
  454611:	xor    eax,DWORD PTR [esp]
  454614:	xor    edx,DWORD PTR [esp+0x4]
  454618:	add    esp,0x8
  45461b:	push   edx
  45461c:	push   eax
  45461d:	mov    eax,DWORD PTR [esp+0x8]
  454621:	mov    edx,DWORD PTR [esp+0xc]
  454625:	and    eax,DWORD PTR [esp+0x10]
  454629:	and    edx,DWORD PTR [esp+0x14]
  45462d:	push   edx
  45462e:	push   eax
  45462f:	mov    eax,DWORD PTR [esp+0x10]
  454633:	mov    edx,DWORD PTR [esp+0x14]
  454637:	and    eax,DWORD PTR [esp+0x20]
  45463b:	and    edx,DWORD PTR [esp+0x24]
  45463f:	xor    eax,DWORD PTR [esp]
  454642:	xor    edx,DWORD PTR [esp+0x4]
  454646:	add    esp,0x8
  454649:	push   edx
  45464a:	push   eax
  45464b:	mov    eax,DWORD PTR [esp+0x18]
  45464f:	mov    edx,DWORD PTR [esp+0x1c]
  454653:	and    eax,DWORD PTR [esp+0x20]
  454657:	and    edx,DWORD PTR [esp+0x24]
  45465b:	xor    eax,DWORD PTR [esp]
  45465e:	xor    edx,DWORD PTR [esp+0x4]
  454662:	add    esp,0x8
  454665:	add    eax,DWORD PTR [esp]
  454668:	adc    edx,DWORD PTR [esp+0x4]
  45466c:	add    esp,0x8
  45466f:	mov    DWORD PTR [esp+0x48],eax
  454673:	mov    DWORD PTR [esp+0x4c],edx
  454677:	mov    eax,DWORD PTR [esp+0x18]
  45467b:	mov    edx,DWORD PTR [esp+0x1c]
  45467f:	add    eax,DWORD PTR [esp+0x40]
  454683:	adc    edx,DWORD PTR [esp+0x44]
  454687:	mov    DWORD PTR [esp+0x18],eax
  45468b:	mov    DWORD PTR [esp+0x1c],edx
  45468f:	mov    eax,DWORD PTR [esp+0x40]
  454693:	mov    edx,DWORD PTR [esp+0x44]
  454697:	add    eax,DWORD PTR [esp+0x48]
  45469b:	adc    edx,DWORD PTR [esp+0x4c]
  45469f:	mov    DWORD PTR [esp+0x38],eax
  4546a3:	mov    DWORD PTR [esp+0x3c],edx
  4546a7:	mov    eax,DWORD PTR [esp+0x18]
  4546ab:	mov    edx,DWORD PTR [esp+0x1c]
  4546af:	shrd   eax,edx,0xe
  4546b3:	shr    edx,0xe
  4546b6:	push   edx
  4546b7:	push   eax
  4546b8:	mov    edx,DWORD PTR [esp+0x20]
  4546bc:	shl    edx,0x12
  4546bf:	xor    eax,eax
  4546c1:	or     eax,DWORD PTR [esp]
  4546c4:	or     edx,DWORD PTR [esp+0x4]
  4546c8:	add    esp,0x8
  4546cb:	push   edx
  4546cc:	push   eax
  4546cd:	mov    eax,DWORD PTR [esp+0x20]
  4546d1:	mov    edx,DWORD PTR [esp+0x24]
  4546d5:	shrd   eax,edx,0x12
  4546d9:	shr    edx,0x12
  4546dc:	push   edx
  4546dd:	push   eax
  4546de:	mov    edx,DWORD PTR [esp+0x28]
  4546e2:	shl    edx,0xe
  4546e5:	xor    eax,eax
  4546e7:	or     eax,DWORD PTR [esp]
  4546ea:	or     edx,DWORD PTR [esp+0x4]
  4546ee:	add    esp,0x8
  4546f1:	xor    eax,DWORD PTR [esp]
  4546f4:	xor    edx,DWORD PTR [esp+0x4]
  4546f8:	add    esp,0x8
  4546fb:	push   edx
  4546fc:	push   eax
  4546fd:	mov    eax,DWORD PTR [esp+0x24]
  454701:	shr    eax,0x9
  454704:	xor    edx,edx
  454706:	push   edx
  454707:	push   eax
  454708:	mov    eax,DWORD PTR [esp+0x28]
  45470c:	mov    edx,DWORD PTR [esp+0x2c]
  454710:	shld   edx,eax,0x17
  454714:	shl    eax,0x17
  454717:	or     eax,DWORD PTR [esp]
  45471a:	or     edx,DWORD PTR [esp+0x4]
  45471e:	add    esp,0x8
  454721:	xor    eax,DWORD PTR [esp]
  454724:	xor    edx,DWORD PTR [esp+0x4]
  454728:	add    esp,0x8
  45472b:	add    eax,DWORD PTR [esp+0x30]
  45472f:	adc    edx,DWORD PTR [esp+0x34]
  454733:	push   edx
  454734:	push   eax
  454735:	mov    eax,DWORD PTR [esp+0x20]
  454739:	mov    edx,DWORD PTR [esp+0x24]
  45473d:	and    eax,DWORD PTR [esp+0x28]
  454741:	and    edx,DWORD PTR [esp+0x2c]
  454745:	push   edx
  454746:	push   eax
  454747:	mov    eax,DWORD PTR [esp+0x28]
  45474b:	mov    edx,DWORD PTR [esp+0x2c]
  45474f:	not    eax
  454751:	not    edx
  454753:	and    eax,DWORD PTR [esp+0x38]
  454757:	and    edx,DWORD PTR [esp+0x3c]
  45475b:	xor    eax,DWORD PTR [esp]
  45475e:	xor    edx,DWORD PTR [esp+0x4]
  454762:	add    esp,0x8
  454765:	add    eax,DWORD PTR [esp]
  454768:	adc    edx,DWORD PTR [esp+0x4]
  45476c:	add    esp,0x8
  45476f:	add    eax,0x45706fbe
  454774:	adc    edx,0x12835b01
  45477a:	add    eax,DWORD PTR [esp+0x98]
  454781:	adc    edx,DWORD PTR [esp+0x9c]
  454788:	mov    DWORD PTR [esp+0x40],eax
  45478c:	mov    DWORD PTR [esp+0x44],edx
  454790:	mov    eax,DWORD PTR [esp+0x38]
  454794:	mov    edx,DWORD PTR [esp+0x3c]
  454798:	shrd   eax,edx,0x1c
  45479c:	shr    edx,0x1c
  45479f:	push   edx
  4547a0:	push   eax
  4547a1:	mov    edx,DWORD PTR [esp+0x40]
  4547a5:	shl    edx,0x4
  4547a8:	xor    eax,eax
  4547aa:	or     eax,DWORD PTR [esp]
  4547ad:	or     edx,DWORD PTR [esp+0x4]
  4547b1:	add    esp,0x8
  4547b4:	push   edx
  4547b5:	push   eax
  4547b6:	mov    eax,DWORD PTR [esp+0x44]
  4547ba:	shr    eax,0x2
  4547bd:	xor    edx,edx
  4547bf:	push   edx
  4547c0:	push   eax
  4547c1:	mov    eax,DWORD PTR [esp+0x48]
  4547c5:	mov    edx,DWORD PTR [esp+0x4c]
  4547c9:	shld   edx,eax,0x1e
  4547cd:	shl    eax,0x1e
  4547d0:	or     eax,DWORD PTR [esp]
  4547d3:	or     edx,DWORD PTR [esp+0x4]
  4547d7:	add    esp,0x8
  4547da:	xor    eax,DWORD PTR [esp]
  4547dd:	xor    edx,DWORD PTR [esp+0x4]
  4547e1:	add    esp,0x8
  4547e4:	push   edx
  4547e5:	push   eax
  4547e6:	mov    eax,DWORD PTR [esp+0x44]
  4547ea:	shr    eax,0x7
  4547ed:	xor    edx,edx
  4547ef:	push   edx
  4547f0:	push   eax
  4547f1:	mov    eax,DWORD PTR [esp+0x48]
  4547f5:	mov    edx,DWORD PTR [esp+0x4c]
  4547f9:	shld   edx,eax,0x19
  4547fd:	shl    eax,0x19
  454800:	or     eax,DWORD PTR [esp]
  454803:	or     edx,DWORD PTR [esp+0x4]
  454807:	add    esp,0x8
  45480a:	xor    eax,DWORD PTR [esp]
  45480d:	xor    edx,DWORD PTR [esp+0x4]
  454811:	add    esp,0x8
  454814:	push   edx
  454815:	push   eax
  454816:	mov    eax,DWORD PTR [esp+0x40]
  45481a:	mov    edx,DWORD PTR [esp+0x44]
  45481e:	and    eax,DWORD PTR [esp+0x8]
  454822:	and    edx,DWORD PTR [esp+0xc]
  454826:	push   edx
  454827:	push   eax
  454828:	mov    eax,DWORD PTR [esp+0x48]
  45482c:	mov    edx,DWORD PTR [esp+0x4c]
  454830:	and    eax,DWORD PTR [esp+0x18]
  454834:	and    edx,DWORD PTR [esp+0x1c]
  454838:	xor    eax,DWORD PTR [esp]
  45483b:	xor    edx,DWORD PTR [esp+0x4]
  45483f:	add    esp,0x8
  454842:	push   edx
  454843:	push   eax
  454844:	mov    eax,DWORD PTR [esp+0x10]
  454848:	mov    edx,DWORD PTR [esp+0x14]
  45484c:	and    eax,DWORD PTR [esp+0x18]
  454850:	and    edx,DWORD PTR [esp+0x1c]
  454854:	xor    eax,DWORD PTR [esp]
  454857:	xor    edx,DWORD PTR [esp+0x4]
  45485b:	add    esp,0x8
  45485e:	add    eax,DWORD PTR [esp]
  454861:	adc    edx,DWORD PTR [esp+0x4]
  454865:	add    esp,0x8
  454868:	mov    DWORD PTR [esp+0x48],eax
  45486c:	mov    DWORD PTR [esp+0x4c],edx
  454870:	mov    eax,DWORD PTR [esp+0x10]
  454874:	mov    edx,DWORD PTR [esp+0x14]
  454878:	add    eax,DWORD PTR [esp+0x40]
  45487c:	adc    edx,DWORD PTR [esp+0x44]
  454880:	mov    DWORD PTR [esp+0x10],eax
  454884:	mov    DWORD PTR [esp+0x14],edx
  454888:	mov    eax,DWORD PTR [esp+0x40]
  45488c:	mov    edx,DWORD PTR [esp+0x44]
  454890:	add    eax,DWORD PTR [esp+0x48]
  454894:	adc    edx,DWORD PTR [esp+0x4c]
  454898:	mov    DWORD PTR [esp+0x30],eax
  45489c:	mov    DWORD PTR [esp+0x34],edx
  4548a0:	mov    eax,DWORD PTR [esp+0x10]
  4548a4:	mov    edx,DWORD PTR [esp+0x14]
  4548a8:	shrd   eax,edx,0xe
  4548ac:	shr    edx,0xe
  4548af:	push   edx
  4548b0:	push   eax
  4548b1:	mov    edx,DWORD PTR [esp+0x18]
  4548b5:	shl    edx,0x12
  4548b8:	xor    eax,eax
  4548ba:	or     eax,DWORD PTR [esp]
  4548bd:	or     edx,DWORD PTR [esp+0x4]
  4548c1:	add    esp,0x8
  4548c4:	push   edx
  4548c5:	push   eax
  4548c6:	mov    eax,DWORD PTR [esp+0x18]
  4548ca:	mov    edx,DWORD PTR [esp+0x1c]
  4548ce:	shrd   eax,edx,0x12
  4548d2:	shr    edx,0x12
  4548d5:	push   edx
  4548d6:	push   eax
  4548d7:	mov    edx,DWORD PTR [esp+0x20]
  4548db:	shl    edx,0xe
  4548de:	xor    eax,eax
  4548e0:	or     eax,DWORD PTR [esp]
  4548e3:	or     edx,DWORD PTR [esp+0x4]
  4548e7:	add    esp,0x8
  4548ea:	xor    eax,DWORD PTR [esp]
  4548ed:	xor    edx,DWORD PTR [esp+0x4]
  4548f1:	add    esp,0x8
  4548f4:	push   edx
  4548f5:	push   eax
  4548f6:	mov    eax,DWORD PTR [esp+0x1c]
  4548fa:	shr    eax,0x9
  4548fd:	xor    edx,edx
  4548ff:	push   edx
  454900:	push   eax
  454901:	mov    eax,DWORD PTR [esp+0x20]
  454905:	mov    edx,DWORD PTR [esp+0x24]
  454909:	shld   edx,eax,0x17
  45490d:	shl    eax,0x17
  454910:	or     eax,DWORD PTR [esp]
  454913:	or     edx,DWORD PTR [esp+0x4]
  454917:	add    esp,0x8
  45491a:	xor    eax,DWORD PTR [esp]
  45491d:	xor    edx,DWORD PTR [esp+0x4]
  454921:	add    esp,0x8
  454924:	add    eax,DWORD PTR [esp+0x28]
  454928:	adc    edx,DWORD PTR [esp+0x2c]
  45492c:	push   edx
  45492d:	push   eax
  45492e:	mov    eax,DWORD PTR [esp+0x18]
  454932:	mov    edx,DWORD PTR [esp+0x1c]
  454936:	and    eax,DWORD PTR [esp+0x20]
  45493a:	and    edx,DWORD PTR [esp+0x24]
  45493e:	push   edx
  45493f:	push   eax
  454940:	mov    eax,DWORD PTR [esp+0x20]
  454944:	mov    edx,DWORD PTR [esp+0x24]
  454948:	not    eax
  45494a:	not    edx
  45494c:	and    eax,DWORD PTR [esp+0x30]
  454950:	and    edx,DWORD PTR [esp+0x34]
  454954:	xor    eax,DWORD PTR [esp]
  454957:	xor    edx,DWORD PTR [esp+0x4]
  45495b:	add    esp,0x8
  45495e:	add    eax,DWORD PTR [esp]
  454961:	adc    edx,DWORD PTR [esp+0x4]
  454965:	add    esp,0x8
  454968:	add    eax,0x4ee4b28c
  45496d:	adc    edx,0x243185be
  454973:	add    eax,DWORD PTR [esp+0xa0]
  45497a:	adc    edx,DWORD PTR [esp+0xa4]
  454981:	mov    DWORD PTR [esp+0x40],eax
  454985:	mov    DWORD PTR [esp+0x44],edx
  454989:	mov    eax,DWORD PTR [esp+0x30]
  45498d:	mov    edx,DWORD PTR [esp+0x34]
  454991:	shrd   eax,edx,0x1c
  454995:	shr    edx,0x1c
  454998:	push   edx
  454999:	push   eax
  45499a:	mov    edx,DWORD PTR [esp+0x38]
  45499e:	shl    edx,0x4
  4549a1:	xor    eax,eax
  4549a3:	or     eax,DWORD PTR [esp]
  4549a6:	or     edx,DWORD PTR [esp+0x4]
  4549aa:	add    esp,0x8
  4549ad:	push   edx
  4549ae:	push   eax
  4549af:	mov    eax,DWORD PTR [esp+0x3c]
  4549b3:	shr    eax,0x2
  4549b6:	xor    edx,edx
  4549b8:	push   edx
  4549b9:	push   eax
  4549ba:	mov    eax,DWORD PTR [esp+0x40]
  4549be:	mov    edx,DWORD PTR [esp+0x44]
  4549c2:	shld   edx,eax,0x1e
  4549c6:	shl    eax,0x1e
  4549c9:	or     eax,DWORD PTR [esp]
  4549cc:	or     edx,DWORD PTR [esp+0x4]
  4549d0:	add    esp,0x8
  4549d3:	xor    eax,DWORD PTR [esp]
  4549d6:	xor    edx,DWORD PTR [esp+0x4]
  4549da:	add    esp,0x8
  4549dd:	push   edx
  4549de:	push   eax
  4549df:	mov    eax,DWORD PTR [esp+0x3c]
  4549e3:	shr    eax,0x7
  4549e6:	xor    edx,edx
  4549e8:	push   edx
  4549e9:	push   eax
  4549ea:	mov    eax,DWORD PTR [esp+0x40]
  4549ee:	mov    edx,DWORD PTR [esp+0x44]
  4549f2:	shld   edx,eax,0x19
  4549f6:	shl    eax,0x19
  4549f9:	or     eax,DWORD PTR [esp]
  4549fc:	or     edx,DWORD PTR [esp+0x4]
  454a00:	add    esp,0x8
  454a03:	xor    eax,DWORD PTR [esp]
  454a06:	xor    edx,DWORD PTR [esp+0x4]
  454a0a:	add    esp,0x8
  454a0d:	push   edx
  454a0e:	push   eax
  454a0f:	mov    eax,DWORD PTR [esp+0x38]
  454a13:	mov    edx,DWORD PTR [esp+0x3c]
  454a17:	and    eax,DWORD PTR [esp+0x40]
  454a1b:	and    edx,DWORD PTR [esp+0x44]
  454a1f:	push   edx
  454a20:	push   eax
  454a21:	mov    eax,DWORD PTR [esp+0x40]
  454a25:	mov    edx,DWORD PTR [esp+0x44]
  454a29:	and    eax,DWORD PTR [esp+0x10]
  454a2d:	and    edx,DWORD PTR [esp+0x14]
  454a31:	xor    eax,DWORD PTR [esp]
  454a34:	xor    edx,DWORD PTR [esp+0x4]
  454a38:	add    esp,0x8
  454a3b:	push   edx
  454a3c:	push   eax
  454a3d:	mov    eax,DWORD PTR [esp+0x48]
  454a41:	mov    edx,DWORD PTR [esp+0x4c]
  454a45:	and    eax,DWORD PTR [esp+0x10]
  454a49:	and    edx,DWORD PTR [esp+0x14]
  454a4d:	xor    eax,DWORD PTR [esp]
  454a50:	xor    edx,DWORD PTR [esp+0x4]
  454a54:	add    esp,0x8
  454a57:	add    eax,DWORD PTR [esp]
  454a5a:	adc    edx,DWORD PTR [esp+0x4]
  454a5e:	add    esp,0x8
  454a61:	mov    DWORD PTR [esp+0x48],eax
  454a65:	mov    DWORD PTR [esp+0x4c],edx
  454a69:	mov    eax,DWORD PTR [esp+0x8]
  454a6d:	mov    edx,DWORD PTR [esp+0xc]
  454a71:	add    eax,DWORD PTR [esp+0x40]
  454a75:	adc    edx,DWORD PTR [esp+0x44]
  454a79:	mov    DWORD PTR [esp+0x8],eax
  454a7d:	mov    DWORD PTR [esp+0xc],edx
  454a81:	mov    eax,DWORD PTR [esp+0x40]
  454a85:	mov    edx,DWORD PTR [esp+0x44]
  454a89:	add    eax,DWORD PTR [esp+0x48]
  454a8d:	adc    edx,DWORD PTR [esp+0x4c]
  454a91:	mov    DWORD PTR [esp+0x28],eax
  454a95:	mov    DWORD PTR [esp+0x2c],edx
  454a99:	mov    eax,DWORD PTR [esp+0x8]
  454a9d:	mov    edx,DWORD PTR [esp+0xc]
  454aa1:	shrd   eax,edx,0xe
  454aa5:	shr    edx,0xe
  454aa8:	push   edx
  454aa9:	push   eax
  454aaa:	mov    edx,DWORD PTR [esp+0x10]
  454aae:	shl    edx,0x12
  454ab1:	xor    eax,eax
  454ab3:	or     eax,DWORD PTR [esp]
  454ab6:	or     edx,DWORD PTR [esp+0x4]
  454aba:	add    esp,0x8
  454abd:	push   edx
  454abe:	push   eax
  454abf:	mov    eax,DWORD PTR [esp+0x10]
  454ac3:	mov    edx,DWORD PTR [esp+0x14]
  454ac7:	shrd   eax,edx,0x12
  454acb:	shr    edx,0x12
  454ace:	push   edx
  454acf:	push   eax
  454ad0:	mov    edx,DWORD PTR [esp+0x18]
  454ad4:	shl    edx,0xe
  454ad7:	xor    eax,eax
  454ad9:	or     eax,DWORD PTR [esp]
  454adc:	or     edx,DWORD PTR [esp+0x4]
  454ae0:	add    esp,0x8
  454ae3:	xor    eax,DWORD PTR [esp]
  454ae6:	xor    edx,DWORD PTR [esp+0x4]
  454aea:	add    esp,0x8
  454aed:	push   edx
  454aee:	push   eax
  454aef:	mov    eax,DWORD PTR [esp+0x14]
  454af3:	shr    eax,0x9
  454af6:	xor    edx,edx
  454af8:	push   edx
  454af9:	push   eax
  454afa:	mov    eax,DWORD PTR [esp+0x18]
  454afe:	mov    edx,DWORD PTR [esp+0x1c]
  454b02:	shld   edx,eax,0x17
  454b06:	shl    eax,0x17
  454b09:	or     eax,DWORD PTR [esp]
  454b0c:	or     edx,DWORD PTR [esp+0x4]
  454b10:	add    esp,0x8
  454b13:	xor    eax,DWORD PTR [esp]
  454b16:	xor    edx,DWORD PTR [esp+0x4]
  454b1a:	add    esp,0x8
  454b1d:	add    eax,DWORD PTR [esp+0x20]
  454b21:	adc    edx,DWORD PTR [esp+0x24]
  454b25:	push   edx
  454b26:	push   eax
  454b27:	mov    eax,DWORD PTR [esp+0x10]
  454b2b:	mov    edx,DWORD PTR [esp+0x14]
  454b2f:	and    eax,DWORD PTR [esp+0x18]
  454b33:	and    edx,DWORD PTR [esp+0x1c]
  454b37:	push   edx
  454b38:	push   eax
  454b39:	mov    eax,DWORD PTR [esp+0x18]
  454b3d:	mov    edx,DWORD PTR [esp+0x1c]
  454b41:	not    eax
  454b43:	not    edx
  454b45:	and    eax,DWORD PTR [esp+0x28]
  454b49:	and    edx,DWORD PTR [esp+0x2c]
  454b4d:	xor    eax,DWORD PTR [esp]
  454b50:	xor    edx,DWORD PTR [esp+0x4]
  454b54:	add    esp,0x8
  454b57:	add    eax,DWORD PTR [esp]
  454b5a:	adc    edx,DWORD PTR [esp+0x4]
  454b5e:	add    esp,0x8
  454b61:	add    eax,0xd5ffb4e2
  454b66:	adc    edx,0x550c7dc3
  454b6c:	add    eax,DWORD PTR [esp+0xa8]
  454b73:	adc    edx,DWORD PTR [esp+0xac]
  454b7a:	mov    DWORD PTR [esp+0x40],eax
  454b7e:	mov    DWORD PTR [esp+0x44],edx
  454b82:	mov    eax,DWORD PTR [esp+0x28]
  454b86:	mov    edx,DWORD PTR [esp+0x2c]
  454b8a:	shrd   eax,edx,0x1c
  454b8e:	shr    edx,0x1c
  454b91:	push   edx
  454b92:	push   eax
  454b93:	mov    edx,DWORD PTR [esp+0x30]
  454b97:	shl    edx,0x4
  454b9a:	xor    eax,eax
  454b9c:	or     eax,DWORD PTR [esp]
  454b9f:	or     edx,DWORD PTR [esp+0x4]
  454ba3:	add    esp,0x8
  454ba6:	push   edx
  454ba7:	push   eax
  454ba8:	mov    eax,DWORD PTR [esp+0x34]
  454bac:	shr    eax,0x2
  454baf:	xor    edx,edx
  454bb1:	push   edx
  454bb2:	push   eax
  454bb3:	mov    eax,DWORD PTR [esp+0x38]
  454bb7:	mov    edx,DWORD PTR [esp+0x3c]
  454bbb:	shld   edx,eax,0x1e
  454bbf:	shl    eax,0x1e
  454bc2:	or     eax,DWORD PTR [esp]
  454bc5:	or     edx,DWORD PTR [esp+0x4]
  454bc9:	add    esp,0x8
  454bcc:	xor    eax,DWORD PTR [esp]
  454bcf:	xor    edx,DWORD PTR [esp+0x4]
  454bd3:	add    esp,0x8
  454bd6:	push   edx
  454bd7:	push   eax
  454bd8:	mov    eax,DWORD PTR [esp+0x34]
  454bdc:	shr    eax,0x7
  454bdf:	xor    edx,edx
  454be1:	push   edx
  454be2:	push   eax
  454be3:	mov    eax,DWORD PTR [esp+0x38]
  454be7:	mov    edx,DWORD PTR [esp+0x3c]
  454beb:	shld   edx,eax,0x19
  454bef:	shl    eax,0x19
  454bf2:	or     eax,DWORD PTR [esp]
  454bf5:	or     edx,DWORD PTR [esp+0x4]
  454bf9:	add    esp,0x8
  454bfc:	xor    eax,DWORD PTR [esp]
  454bff:	xor    edx,DWORD PTR [esp+0x4]
  454c03:	add    esp,0x8
  454c06:	push   edx
  454c07:	push   eax
  454c08:	mov    eax,DWORD PTR [esp+0x30]
  454c0c:	mov    edx,DWORD PTR [esp+0x34]
  454c10:	and    eax,DWORD PTR [esp+0x38]
  454c14:	and    edx,DWORD PTR [esp+0x3c]
  454c18:	push   edx
  454c19:	push   eax
  454c1a:	mov    eax,DWORD PTR [esp+0x38]
  454c1e:	mov    edx,DWORD PTR [esp+0x3c]
  454c22:	and    eax,DWORD PTR [esp+0x48]
  454c26:	and    edx,DWORD PTR [esp+0x4c]
  454c2a:	xor    eax,DWORD PTR [esp]
  454c2d:	xor    edx,DWORD PTR [esp+0x4]
  454c31:	add    esp,0x8
  454c34:	push   edx
  454c35:	push   eax
  454c36:	mov    eax,DWORD PTR [esp+0x40]
  454c3a:	mov    edx,DWORD PTR [esp+0x44]
  454c3e:	and    eax,DWORD PTR [esp+0x48]
  454c42:	and    edx,DWORD PTR [esp+0x4c]
  454c46:	xor    eax,DWORD PTR [esp]
  454c49:	xor    edx,DWORD PTR [esp+0x4]
  454c4d:	add    esp,0x8
  454c50:	add    eax,DWORD PTR [esp]
  454c53:	adc    edx,DWORD PTR [esp+0x4]
  454c57:	add    esp,0x8
  454c5a:	mov    DWORD PTR [esp+0x48],eax
  454c5e:	mov    DWORD PTR [esp+0x4c],edx
  454c62:	mov    eax,DWORD PTR [esp]
  454c65:	mov    edx,DWORD PTR [esp+0x4]
  454c69:	add    eax,DWORD PTR [esp+0x40]
  454c6d:	adc    edx,DWORD PTR [esp+0x44]
  454c71:	mov    DWORD PTR [esp],eax
  454c74:	mov    DWORD PTR [esp+0x4],edx
  454c78:	mov    eax,DWORD PTR [esp+0x40]
  454c7c:	mov    edx,DWORD PTR [esp+0x44]
  454c80:	add    eax,DWORD PTR [esp+0x48]
  454c84:	adc    edx,DWORD PTR [esp+0x4c]
  454c88:	mov    DWORD PTR [esp+0x20],eax
  454c8c:	mov    DWORD PTR [esp+0x24],edx
  454c90:	mov    eax,DWORD PTR [esp]
  454c93:	mov    edx,DWORD PTR [esp+0x4]
  454c97:	shrd   eax,edx,0xe
  454c9b:	shr    edx,0xe
  454c9e:	push   edx
  454c9f:	push   eax
  454ca0:	mov    edx,DWORD PTR [esp+0x8]
  454ca4:	shl    edx,0x12
  454ca7:	xor    eax,eax
  454ca9:	or     eax,DWORD PTR [esp]
  454cac:	or     edx,DWORD PTR [esp+0x4]
  454cb0:	add    esp,0x8
  454cb3:	push   edx
  454cb4:	push   eax
  454cb5:	mov    eax,DWORD PTR [esp+0x8]
  454cb9:	mov    edx,DWORD PTR [esp+0xc]
  454cbd:	shrd   eax,edx,0x12
  454cc1:	shr    edx,0x12
  454cc4:	push   edx
  454cc5:	push   eax
  454cc6:	mov    edx,DWORD PTR [esp+0x10]
  454cca:	shl    edx,0xe
  454ccd:	xor    eax,eax
  454ccf:	or     eax,DWORD PTR [esp]
  454cd2:	or     edx,DWORD PTR [esp+0x4]
  454cd6:	add    esp,0x8
  454cd9:	xor    eax,DWORD PTR [esp]
  454cdc:	xor    edx,DWORD PTR [esp+0x4]
  454ce0:	add    esp,0x8
  454ce3:	push   edx
  454ce4:	push   eax
  454ce5:	mov    eax,DWORD PTR [esp+0xc]
  454ce9:	shr    eax,0x9
  454cec:	xor    edx,edx
  454cee:	push   edx
  454cef:	push   eax
  454cf0:	mov    eax,DWORD PTR [esp+0x10]
  454cf4:	mov    edx,DWORD PTR [esp+0x14]
  454cf8:	shld   edx,eax,0x17
  454cfc:	shl    eax,0x17
  454cff:	or     eax,DWORD PTR [esp]
  454d02:	or     edx,DWORD PTR [esp+0x4]
  454d06:	add    esp,0x8
  454d09:	xor    eax,DWORD PTR [esp]
  454d0c:	xor    edx,DWORD PTR [esp+0x4]
  454d10:	add    esp,0x8
  454d13:	add    eax,DWORD PTR [esp+0x18]
  454d17:	adc    edx,DWORD PTR [esp+0x1c]
  454d1b:	push   edx
  454d1c:	push   eax
  454d1d:	mov    eax,DWORD PTR [esp+0x8]
  454d21:	mov    edx,DWORD PTR [esp+0xc]
  454d25:	and    eax,DWORD PTR [esp+0x10]
  454d29:	and    edx,DWORD PTR [esp+0x14]
  454d2d:	push   edx
  454d2e:	push   eax
  454d2f:	mov    eax,DWORD PTR [esp+0x10]
  454d33:	mov    edx,DWORD PTR [esp+0x14]
  454d37:	not    eax
  454d39:	not    edx
  454d3b:	and    eax,DWORD PTR [esp+0x20]
  454d3f:	and    edx,DWORD PTR [esp+0x24]
  454d43:	xor    eax,DWORD PTR [esp]
  454d46:	xor    edx,DWORD PTR [esp+0x4]
  454d4a:	add    esp,0x8
  454d4d:	add    eax,DWORD PTR [esp]
  454d50:	adc    edx,DWORD PTR [esp+0x4]
  454d54:	add    esp,0x8
  454d57:	add    eax,0xf27b896f
  454d5c:	adc    edx,0x72be5d74
  454d62:	add    eax,DWORD PTR [esp+0xb0]
  454d69:	adc    edx,DWORD PTR [esp+0xb4]
  454d70:	mov    DWORD PTR [esp+0x40],eax
  454d74:	mov    DWORD PTR [esp+0x44],edx
  454d78:	mov    eax,DWORD PTR [esp+0x20]
  454d7c:	mov    edx,DWORD PTR [esp+0x24]
  454d80:	shrd   eax,edx,0x1c
  454d84:	shr    edx,0x1c
  454d87:	push   edx
  454d88:	push   eax
  454d89:	mov    edx,DWORD PTR [esp+0x28]
  454d8d:	shl    edx,0x4
  454d90:	xor    eax,eax
  454d92:	or     eax,DWORD PTR [esp]
  454d95:	or     edx,DWORD PTR [esp+0x4]
  454d99:	add    esp,0x8
  454d9c:	push   edx
  454d9d:	push   eax
  454d9e:	mov    eax,DWORD PTR [esp+0x2c]
  454da2:	shr    eax,0x2
  454da5:	xor    edx,edx
  454da7:	push   edx
  454da8:	push   eax
  454da9:	mov    eax,DWORD PTR [esp+0x30]
  454dad:	mov    edx,DWORD PTR [esp+0x34]
  454db1:	shld   edx,eax,0x1e
  454db5:	shl    eax,0x1e
  454db8:	or     eax,DWORD PTR [esp]
  454dbb:	or     edx,DWORD PTR [esp+0x4]
  454dbf:	add    esp,0x8
  454dc2:	xor    eax,DWORD PTR [esp]
  454dc5:	xor    edx,DWORD PTR [esp+0x4]
  454dc9:	add    esp,0x8
  454dcc:	push   edx
  454dcd:	push   eax
  454dce:	mov    eax,DWORD PTR [esp+0x2c]
  454dd2:	shr    eax,0x7
  454dd5:	xor    edx,edx
  454dd7:	push   edx
  454dd8:	push   eax
  454dd9:	mov    eax,DWORD PTR [esp+0x30]
  454ddd:	mov    edx,DWORD PTR [esp+0x34]
  454de1:	shld   edx,eax,0x19
  454de5:	shl    eax,0x19
  454de8:	or     eax,DWORD PTR [esp]
  454deb:	or     edx,DWORD PTR [esp+0x4]
  454def:	add    esp,0x8
  454df2:	xor    eax,DWORD PTR [esp]
  454df5:	xor    edx,DWORD PTR [esp+0x4]
  454df9:	add    esp,0x8
  454dfc:	push   edx
  454dfd:	push   eax
  454dfe:	mov    eax,DWORD PTR [esp+0x28]
  454e02:	mov    edx,DWORD PTR [esp+0x2c]
  454e06:	and    eax,DWORD PTR [esp+0x30]
  454e0a:	and    edx,DWORD PTR [esp+0x34]
  454e0e:	push   edx
  454e0f:	push   eax
  454e10:	mov    eax,DWORD PTR [esp+0x30]
  454e14:	mov    edx,DWORD PTR [esp+0x34]
  454e18:	and    eax,DWORD PTR [esp+0x40]
  454e1c:	and    edx,DWORD PTR [esp+0x44]
  454e20:	xor    eax,DWORD PTR [esp]
  454e23:	xor    edx,DWORD PTR [esp+0x4]
  454e27:	add    esp,0x8
  454e2a:	push   edx
  454e2b:	push   eax
  454e2c:	mov    eax,DWORD PTR [esp+0x38]
  454e30:	mov    edx,DWORD PTR [esp+0x3c]
  454e34:	and    eax,DWORD PTR [esp+0x40]
  454e38:	and    edx,DWORD PTR [esp+0x44]
  454e3c:	xor    eax,DWORD PTR [esp]
  454e3f:	xor    edx,DWORD PTR [esp+0x4]
  454e43:	add    esp,0x8
  454e46:	add    eax,DWORD PTR [esp]
  454e49:	adc    edx,DWORD PTR [esp+0x4]
  454e4d:	add    esp,0x8
  454e50:	mov    DWORD PTR [esp+0x48],eax
  454e54:	mov    DWORD PTR [esp+0x4c],edx
  454e58:	mov    eax,DWORD PTR [esp+0x38]
  454e5c:	mov    edx,DWORD PTR [esp+0x3c]
  454e60:	add    eax,DWORD PTR [esp+0x40]
  454e64:	adc    edx,DWORD PTR [esp+0x44]
  454e68:	mov    DWORD PTR [esp+0x38],eax
  454e6c:	mov    DWORD PTR [esp+0x3c],edx
  454e70:	mov    eax,DWORD PTR [esp+0x40]
  454e74:	mov    edx,DWORD PTR [esp+0x44]
  454e78:	add    eax,DWORD PTR [esp+0x48]
  454e7c:	adc    edx,DWORD PTR [esp+0x4c]
  454e80:	mov    DWORD PTR [esp+0x18],eax
  454e84:	mov    DWORD PTR [esp+0x1c],edx
  454e88:	mov    eax,DWORD PTR [esp+0x38]
  454e8c:	mov    edx,DWORD PTR [esp+0x3c]
  454e90:	shrd   eax,edx,0xe
  454e94:	shr    edx,0xe
  454e97:	push   edx
  454e98:	push   eax
  454e99:	mov    edx,DWORD PTR [esp+0x40]
  454e9d:	shl    edx,0x12
  454ea0:	xor    eax,eax
  454ea2:	or     eax,DWORD PTR [esp]
  454ea5:	or     edx,DWORD PTR [esp+0x4]
  454ea9:	add    esp,0x8
  454eac:	push   edx
  454ead:	push   eax
  454eae:	mov    eax,DWORD PTR [esp+0x40]
  454eb2:	mov    edx,DWORD PTR [esp+0x44]
  454eb6:	shrd   eax,edx,0x12
  454eba:	shr    edx,0x12
  454ebd:	push   edx
  454ebe:	push   eax
  454ebf:	mov    edx,DWORD PTR [esp+0x48]
  454ec3:	shl    edx,0xe
  454ec6:	xor    eax,eax
  454ec8:	or     eax,DWORD PTR [esp]
  454ecb:	or     edx,DWORD PTR [esp+0x4]
  454ecf:	add    esp,0x8
  454ed2:	xor    eax,DWORD PTR [esp]
  454ed5:	xor    edx,DWORD PTR [esp+0x4]
  454ed9:	add    esp,0x8
  454edc:	push   edx
  454edd:	push   eax
  454ede:	mov    eax,DWORD PTR [esp+0x44]
  454ee2:	shr    eax,0x9
  454ee5:	xor    edx,edx
  454ee7:	push   edx
  454ee8:	push   eax
  454ee9:	mov    eax,DWORD PTR [esp+0x48]
  454eed:	mov    edx,DWORD PTR [esp+0x4c]
  454ef1:	shld   edx,eax,0x17
  454ef5:	shl    eax,0x17
  454ef8:	or     eax,DWORD PTR [esp]
  454efb:	or     edx,DWORD PTR [esp+0x4]
  454eff:	add    esp,0x8
  454f02:	xor    eax,DWORD PTR [esp]
  454f05:	xor    edx,DWORD PTR [esp+0x4]
  454f09:	add    esp,0x8
  454f0c:	add    eax,DWORD PTR [esp+0x10]
  454f10:	adc    edx,DWORD PTR [esp+0x14]
  454f14:	push   edx
  454f15:	push   eax
  454f16:	mov    eax,DWORD PTR [esp+0x40]
  454f1a:	mov    edx,DWORD PTR [esp+0x44]
  454f1e:	and    eax,DWORD PTR [esp+0x8]
  454f22:	and    edx,DWORD PTR [esp+0xc]
  454f26:	push   edx
  454f27:	push   eax
  454f28:	mov    eax,DWORD PTR [esp+0x48]
  454f2c:	mov    edx,DWORD PTR [esp+0x4c]
  454f30:	not    eax
  454f32:	not    edx
  454f34:	and    eax,DWORD PTR [esp+0x18]
  454f38:	and    edx,DWORD PTR [esp+0x1c]
  454f3c:	xor    eax,DWORD PTR [esp]
  454f3f:	xor    edx,DWORD PTR [esp+0x4]
  454f43:	add    esp,0x8
  454f46:	add    eax,DWORD PTR [esp]
  454f49:	adc    edx,DWORD PTR [esp+0x4]
  454f4d:	add    esp,0x8
  454f50:	add    eax,0x3b1696b1
  454f55:	adc    edx,0x80deb1fe
  454f5b:	add    eax,DWORD PTR [esp+0xb8]
  454f62:	adc    edx,DWORD PTR [esp+0xbc]
  454f69:	mov    DWORD PTR [esp+0x40],eax
  454f6d:	mov    DWORD PTR [esp+0x44],edx
  454f71:	mov    eax,DWORD PTR [esp+0x18]
  454f75:	mov    edx,DWORD PTR [esp+0x1c]
  454f79:	shrd   eax,edx,0x1c
  454f7d:	shr    edx,0x1c
  454f80:	push   edx
  454f81:	push   eax
  454f82:	mov    edx,DWORD PTR [esp+0x20]
  454f86:	shl    edx,0x4
  454f89:	xor    eax,eax
  454f8b:	or     eax,DWORD PTR [esp]
  454f8e:	or     edx,DWORD PTR [esp+0x4]
  454f92:	add    esp,0x8
  454f95:	push   edx
  454f96:	push   eax
  454f97:	mov    eax,DWORD PTR [esp+0x24]
  454f9b:	shr    eax,0x2
  454f9e:	xor    edx,edx
  454fa0:	push   edx
  454fa1:	push   eax
  454fa2:	mov    eax,DWORD PTR [esp+0x28]
  454fa6:	mov    edx,DWORD PTR [esp+0x2c]
  454faa:	shld   edx,eax,0x1e
  454fae:	shl    eax,0x1e
  454fb1:	or     eax,DWORD PTR [esp]
  454fb4:	or     edx,DWORD PTR [esp+0x4]
  454fb8:	add    esp,0x8
  454fbb:	xor    eax,DWORD PTR [esp]
  454fbe:	xor    edx,DWORD PTR [esp+0x4]
  454fc2:	add    esp,0x8
  454fc5:	push   edx
  454fc6:	push   eax
  454fc7:	mov    eax,DWORD PTR [esp+0x24]
  454fcb:	shr    eax,0x7
  454fce:	xor    edx,edx
  454fd0:	push   edx
  454fd1:	push   eax
  454fd2:	mov    eax,DWORD PTR [esp+0x28]
  454fd6:	mov    edx,DWORD PTR [esp+0x2c]
  454fda:	shld   edx,eax,0x19
  454fde:	shl    eax,0x19
  454fe1:	or     eax,DWORD PTR [esp]
  454fe4:	or     edx,DWORD PTR [esp+0x4]
  454fe8:	add    esp,0x8
  454feb:	xor    eax,DWORD PTR [esp]
  454fee:	xor    edx,DWORD PTR [esp+0x4]
  454ff2:	add    esp,0x8
  454ff5:	push   edx
  454ff6:	push   eax
  454ff7:	mov    eax,DWORD PTR [esp+0x20]
  454ffb:	mov    edx,DWORD PTR [esp+0x24]
  454fff:	and    eax,DWORD PTR [esp+0x28]
  455003:	and    edx,DWORD PTR [esp+0x2c]
  455007:	push   edx
  455008:	push   eax
  455009:	mov    eax,DWORD PTR [esp+0x28]
  45500d:	mov    edx,DWORD PTR [esp+0x2c]
  455011:	and    eax,DWORD PTR [esp+0x38]
  455015:	and    edx,DWORD PTR [esp+0x3c]
  455019:	xor    eax,DWORD PTR [esp]
  45501c:	xor    edx,DWORD PTR [esp+0x4]
  455020:	add    esp,0x8
  455023:	push   edx
  455024:	push   eax
  455025:	mov    eax,DWORD PTR [esp+0x30]
  455029:	mov    edx,DWORD PTR [esp+0x34]
  45502d:	and    eax,DWORD PTR [esp+0x38]
  455031:	and    edx,DWORD PTR [esp+0x3c]
  455035:	xor    eax,DWORD PTR [esp]
  455038:	xor    edx,DWORD PTR [esp+0x4]
  45503c:	add    esp,0x8
  45503f:	add    eax,DWORD PTR [esp]
  455042:	adc    edx,DWORD PTR [esp+0x4]
  455046:	add    esp,0x8
  455049:	mov    DWORD PTR [esp+0x48],eax
  45504d:	mov    DWORD PTR [esp+0x4c],edx
  455051:	mov    eax,DWORD PTR [esp+0x30]
  455055:	mov    edx,DWORD PTR [esp+0x34]
  455059:	add    eax,DWORD PTR [esp+0x40]
  45505d:	adc    edx,DWORD PTR [esp+0x44]
  455061:	mov    DWORD PTR [esp+0x30],eax
  455065:	mov    DWORD PTR [esp+0x34],edx
  455069:	mov    eax,DWORD PTR [esp+0x40]
  45506d:	mov    edx,DWORD PTR [esp+0x44]
  455071:	add    eax,DWORD PTR [esp+0x48]
  455075:	adc    edx,DWORD PTR [esp+0x4c]
  455079:	mov    DWORD PTR [esp+0x10],eax
  45507d:	mov    DWORD PTR [esp+0x14],edx
  455081:	mov    eax,DWORD PTR [esp+0x30]
  455085:	mov    edx,DWORD PTR [esp+0x34]
  455089:	shrd   eax,edx,0xe
  45508d:	shr    edx,0xe
  455090:	push   edx
  455091:	push   eax
  455092:	mov    edx,DWORD PTR [esp+0x38]
  455096:	shl    edx,0x12
  455099:	xor    eax,eax
  45509b:	or     eax,DWORD PTR [esp]
  45509e:	or     edx,DWORD PTR [esp+0x4]
  4550a2:	add    esp,0x8
  4550a5:	push   edx
  4550a6:	push   eax
  4550a7:	mov    eax,DWORD PTR [esp+0x38]
  4550ab:	mov    edx,DWORD PTR [esp+0x3c]
  4550af:	shrd   eax,edx,0x12
  4550b3:	shr    edx,0x12
  4550b6:	push   edx
  4550b7:	push   eax
  4550b8:	mov    edx,DWORD PTR [esp+0x40]
  4550bc:	shl    edx,0xe
  4550bf:	xor    eax,eax
  4550c1:	or     eax,DWORD PTR [esp]
  4550c4:	or     edx,DWORD PTR [esp+0x4]
  4550c8:	add    esp,0x8
  4550cb:	xor    eax,DWORD PTR [esp]
  4550ce:	xor    edx,DWORD PTR [esp+0x4]
  4550d2:	add    esp,0x8
  4550d5:	push   edx
  4550d6:	push   eax
  4550d7:	mov    eax,DWORD PTR [esp+0x3c]
  4550db:	shr    eax,0x9
  4550de:	xor    edx,edx
  4550e0:	push   edx
  4550e1:	push   eax
  4550e2:	mov    eax,DWORD PTR [esp+0x40]
  4550e6:	mov    edx,DWORD PTR [esp+0x44]
  4550ea:	shld   edx,eax,0x17
  4550ee:	shl    eax,0x17
  4550f1:	or     eax,DWORD PTR [esp]
  4550f4:	or     edx,DWORD PTR [esp+0x4]
  4550f8:	add    esp,0x8
  4550fb:	xor    eax,DWORD PTR [esp]
  4550fe:	xor    edx,DWORD PTR [esp+0x4]
  455102:	add    esp,0x8
  455105:	add    eax,DWORD PTR [esp+0x8]
  455109:	adc    edx,DWORD PTR [esp+0xc]
  45510d:	push   edx
  45510e:	push   eax
  45510f:	mov    eax,DWORD PTR [esp+0x38]
  455113:	mov    edx,DWORD PTR [esp+0x3c]
  455117:	and    eax,DWORD PTR [esp+0x40]
  45511b:	and    edx,DWORD PTR [esp+0x44]
  45511f:	push   edx
  455120:	push   eax
  455121:	mov    eax,DWORD PTR [esp+0x40]
  455125:	mov    edx,DWORD PTR [esp+0x44]
  455129:	not    eax
  45512b:	not    edx
  45512d:	and    eax,DWORD PTR [esp+0x10]
  455131:	and    edx,DWORD PTR [esp+0x14]
  455135:	xor    eax,DWORD PTR [esp]
  455138:	xor    edx,DWORD PTR [esp+0x4]
  45513c:	add    esp,0x8
  45513f:	add    eax,DWORD PTR [esp]
  455142:	adc    edx,DWORD PTR [esp+0x4]
  455146:	add    esp,0x8
  455149:	add    eax,0x25c71235
  45514e:	adc    edx,0x9bdc06a7
  455154:	add    eax,DWORD PTR [esp+0xc0]
  45515b:	adc    edx,DWORD PTR [esp+0xc4]
  455162:	mov    DWORD PTR [esp+0x40],eax
  455166:	mov    DWORD PTR [esp+0x44],edx
  45516a:	mov    eax,DWORD PTR [esp+0x10]
  45516e:	mov    edx,DWORD PTR [esp+0x14]
  455172:	shrd   eax,edx,0x1c
  455176:	shr    edx,0x1c
  455179:	push   edx
  45517a:	push   eax
  45517b:	mov    edx,DWORD PTR [esp+0x18]
  45517f:	shl    edx,0x4
  455182:	xor    eax,eax
  455184:	or     eax,DWORD PTR [esp]
  455187:	or     edx,DWORD PTR [esp+0x4]
  45518b:	add    esp,0x8
  45518e:	push   edx
  45518f:	push   eax
  455190:	mov    eax,DWORD PTR [esp+0x1c]
  455194:	shr    eax,0x2
  455197:	xor    edx,edx
  455199:	push   edx
  45519a:	push   eax
  45519b:	mov    eax,DWORD PTR [esp+0x20]
  45519f:	mov    edx,DWORD PTR [esp+0x24]
  4551a3:	shld   edx,eax,0x1e
  4551a7:	shl    eax,0x1e
  4551aa:	or     eax,DWORD PTR [esp]
  4551ad:	or     edx,DWORD PTR [esp+0x4]
  4551b1:	add    esp,0x8
  4551b4:	xor    eax,DWORD PTR [esp]
  4551b7:	xor    edx,DWORD PTR [esp+0x4]
  4551bb:	add    esp,0x8
  4551be:	push   edx
  4551bf:	push   eax
  4551c0:	mov    eax,DWORD PTR [esp+0x1c]
  4551c4:	shr    eax,0x7
  4551c7:	xor    edx,edx
  4551c9:	push   edx
  4551ca:	push   eax
  4551cb:	mov    eax,DWORD PTR [esp+0x20]
  4551cf:	mov    edx,DWORD PTR [esp+0x24]
  4551d3:	shld   edx,eax,0x19
  4551d7:	shl    eax,0x19
  4551da:	or     eax,DWORD PTR [esp]
  4551dd:	or     edx,DWORD PTR [esp+0x4]
  4551e1:	add    esp,0x8
  4551e4:	xor    eax,DWORD PTR [esp]
  4551e7:	xor    edx,DWORD PTR [esp+0x4]
  4551eb:	add    esp,0x8
  4551ee:	push   edx
  4551ef:	push   eax
  4551f0:	mov    eax,DWORD PTR [esp+0x18]
  4551f4:	mov    edx,DWORD PTR [esp+0x1c]
  4551f8:	and    eax,DWORD PTR [esp+0x20]
  4551fc:	and    edx,DWORD PTR [esp+0x24]
  455200:	push   edx
  455201:	push   eax
  455202:	mov    eax,DWORD PTR [esp+0x20]
  455206:	mov    edx,DWORD PTR [esp+0x24]
  45520a:	and    eax,DWORD PTR [esp+0x30]
  45520e:	and    edx,DWORD PTR [esp+0x34]
  455212:	xor    eax,DWORD PTR [esp]
  455215:	xor    edx,DWORD PTR [esp+0x4]
  455219:	add    esp,0x8
  45521c:	push   edx
  45521d:	push   eax
  45521e:	mov    eax,DWORD PTR [esp+0x28]
  455222:	mov    edx,DWORD PTR [esp+0x2c]
  455226:	and    eax,DWORD PTR [esp+0x30]
  45522a:	and    edx,DWORD PTR [esp+0x34]
  45522e:	xor    eax,DWORD PTR [esp]
  455231:	xor    edx,DWORD PTR [esp+0x4]
  455235:	add    esp,0x8
  455238:	add    eax,DWORD PTR [esp]
  45523b:	adc    edx,DWORD PTR [esp+0x4]
  45523f:	add    esp,0x8
  455242:	mov    DWORD PTR [esp+0x48],eax
  455246:	mov    DWORD PTR [esp+0x4c],edx
  45524a:	mov    eax,DWORD PTR [esp+0x28]
  45524e:	mov    edx,DWORD PTR [esp+0x2c]
  455252:	add    eax,DWORD PTR [esp+0x40]
  455256:	adc    edx,DWORD PTR [esp+0x44]
  45525a:	mov    DWORD PTR [esp+0x28],eax
  45525e:	mov    DWORD PTR [esp+0x2c],edx
  455262:	mov    eax,DWORD PTR [esp+0x40]
  455266:	mov    edx,DWORD PTR [esp+0x44]
  45526a:	add    eax,DWORD PTR [esp+0x48]
  45526e:	adc    edx,DWORD PTR [esp+0x4c]
  455272:	mov    DWORD PTR [esp+0x8],eax
  455276:	mov    DWORD PTR [esp+0xc],edx
  45527a:	mov    eax,DWORD PTR [esp+0x28]
  45527e:	mov    edx,DWORD PTR [esp+0x2c]
  455282:	shrd   eax,edx,0xe
  455286:	shr    edx,0xe
  455289:	push   edx
  45528a:	push   eax
  45528b:	mov    edx,DWORD PTR [esp+0x30]
  45528f:	shl    edx,0x12
  455292:	xor    eax,eax
  455294:	or     eax,DWORD PTR [esp]
  455297:	or     edx,DWORD PTR [esp+0x4]
  45529b:	add    esp,0x8
  45529e:	push   edx
  45529f:	push   eax
  4552a0:	mov    eax,DWORD PTR [esp+0x30]
  4552a4:	mov    edx,DWORD PTR [esp+0x34]
  4552a8:	shrd   eax,edx,0x12
  4552ac:	shr    edx,0x12
  4552af:	push   edx
  4552b0:	push   eax
  4552b1:	mov    edx,DWORD PTR [esp+0x38]
  4552b5:	shl    edx,0xe
  4552b8:	xor    eax,eax
  4552ba:	or     eax,DWORD PTR [esp]
  4552bd:	or     edx,DWORD PTR [esp+0x4]
  4552c1:	add    esp,0x8
  4552c4:	xor    eax,DWORD PTR [esp]
  4552c7:	xor    edx,DWORD PTR [esp+0x4]
  4552cb:	add    esp,0x8
  4552ce:	push   edx
  4552cf:	push   eax
  4552d0:	mov    eax,DWORD PTR [esp+0x34]
  4552d4:	shr    eax,0x9
  4552d7:	xor    edx,edx
  4552d9:	push   edx
  4552da:	push   eax
  4552db:	mov    eax,DWORD PTR [esp+0x38]
  4552df:	mov    edx,DWORD PTR [esp+0x3c]
  4552e3:	shld   edx,eax,0x17
  4552e7:	shl    eax,0x17
  4552ea:	or     eax,DWORD PTR [esp]
  4552ed:	or     edx,DWORD PTR [esp+0x4]
  4552f1:	add    esp,0x8
  4552f4:	xor    eax,DWORD PTR [esp]
  4552f7:	xor    edx,DWORD PTR [esp+0x4]
  4552fb:	add    esp,0x8
  4552fe:	add    eax,DWORD PTR [esp]
  455301:	adc    edx,DWORD PTR [esp+0x4]
  455305:	push   edx
  455306:	push   eax
  455307:	mov    eax,DWORD PTR [esp+0x30]
  45530b:	mov    edx,DWORD PTR [esp+0x34]
  45530f:	and    eax,DWORD PTR [esp+0x38]
  455313:	and    edx,DWORD PTR [esp+0x3c]
  455317:	push   edx
  455318:	push   eax
  455319:	mov    eax,DWORD PTR [esp+0x38]
  45531d:	mov    edx,DWORD PTR [esp+0x3c]
  455321:	not    eax
  455323:	not    edx
  455325:	and    eax,DWORD PTR [esp+0x48]
  455329:	and    edx,DWORD PTR [esp+0x4c]
  45532d:	xor    eax,DWORD PTR [esp]
  455330:	xor    edx,DWORD PTR [esp+0x4]
  455334:	add    esp,0x8
  455337:	add    eax,DWORD PTR [esp]
  45533a:	adc    edx,DWORD PTR [esp+0x4]
  45533e:	add    esp,0x8
  455341:	add    eax,0xcf692694
  455346:	adc    edx,0xc19bf174
  45534c:	add    eax,DWORD PTR [esp+0xc8]
  455353:	adc    edx,DWORD PTR [esp+0xcc]
  45535a:	mov    DWORD PTR [esp+0x40],eax
  45535e:	mov    DWORD PTR [esp+0x44],edx
  455362:	mov    eax,DWORD PTR [esp+0x8]
  455366:	mov    edx,DWORD PTR [esp+0xc]
  45536a:	shrd   eax,edx,0x1c
  45536e:	shr    edx,0x1c
  455371:	push   edx
  455372:	push   eax
  455373:	mov    edx,DWORD PTR [esp+0x10]
  455377:	shl    edx,0x4
  45537a:	xor    eax,eax
  45537c:	or     eax,DWORD PTR [esp]
  45537f:	or     edx,DWORD PTR [esp+0x4]
  455383:	add    esp,0x8
  455386:	push   edx
  455387:	push   eax
  455388:	mov    eax,DWORD PTR [esp+0x14]
  45538c:	shr    eax,0x2
  45538f:	xor    edx,edx
  455391:	push   edx
  455392:	push   eax
  455393:	mov    eax,DWORD PTR [esp+0x18]
  455397:	mov    edx,DWORD PTR [esp+0x1c]
  45539b:	shld   edx,eax,0x1e
  45539f:	shl    eax,0x1e
  4553a2:	or     eax,DWORD PTR [esp]
  4553a5:	or     edx,DWORD PTR [esp+0x4]
  4553a9:	add    esp,0x8
  4553ac:	xor    eax,DWORD PTR [esp]
  4553af:	xor    edx,DWORD PTR [esp+0x4]
  4553b3:	add    esp,0x8
  4553b6:	push   edx
  4553b7:	push   eax
  4553b8:	mov    eax,DWORD PTR [esp+0x14]
  4553bc:	shr    eax,0x7
  4553bf:	xor    edx,edx
  4553c1:	push   edx
  4553c2:	push   eax
  4553c3:	mov    eax,DWORD PTR [esp+0x18]
  4553c7:	mov    edx,DWORD PTR [esp+0x1c]
  4553cb:	shld   edx,eax,0x19
  4553cf:	shl    eax,0x19
  4553d2:	or     eax,DWORD PTR [esp]
  4553d5:	or     edx,DWORD PTR [esp+0x4]
  4553d9:	add    esp,0x8
  4553dc:	xor    eax,DWORD PTR [esp]
  4553df:	xor    edx,DWORD PTR [esp+0x4]
  4553e3:	add    esp,0x8
  4553e6:	push   edx
  4553e7:	push   eax
  4553e8:	mov    eax,DWORD PTR [esp+0x10]
  4553ec:	mov    edx,DWORD PTR [esp+0x14]
  4553f0:	and    eax,DWORD PTR [esp+0x18]
  4553f4:	and    edx,DWORD PTR [esp+0x1c]
  4553f8:	push   edx
  4553f9:	push   eax
  4553fa:	mov    eax,DWORD PTR [esp+0x18]
  4553fe:	mov    edx,DWORD PTR [esp+0x1c]
  455402:	and    eax,DWORD PTR [esp+0x28]
  455406:	and    edx,DWORD PTR [esp+0x2c]
  45540a:	xor    eax,DWORD PTR [esp]
  45540d:	xor    edx,DWORD PTR [esp+0x4]
  455411:	add    esp,0x8
  455414:	push   edx
  455415:	push   eax
  455416:	mov    eax,DWORD PTR [esp+0x20]
  45541a:	mov    edx,DWORD PTR [esp+0x24]
  45541e:	and    eax,DWORD PTR [esp+0x28]
  455422:	and    edx,DWORD PTR [esp+0x2c]
  455426:	xor    eax,DWORD PTR [esp]
  455429:	xor    edx,DWORD PTR [esp+0x4]
  45542d:	add    esp,0x8
  455430:	add    eax,DWORD PTR [esp]
  455433:	adc    edx,DWORD PTR [esp+0x4]
  455437:	add    esp,0x8
  45543a:	mov    DWORD PTR [esp+0x48],eax
  45543e:	mov    DWORD PTR [esp+0x4c],edx
  455442:	mov    eax,DWORD PTR [esp+0x20]
  455446:	mov    edx,DWORD PTR [esp+0x24]
  45544a:	add    eax,DWORD PTR [esp+0x40]
  45544e:	adc    edx,DWORD PTR [esp+0x44]
  455452:	mov    DWORD PTR [esp+0x20],eax
  455456:	mov    DWORD PTR [esp+0x24],edx
  45545a:	mov    eax,DWORD PTR [esp+0x40]
  45545e:	mov    edx,DWORD PTR [esp+0x44]
  455462:	add    eax,DWORD PTR [esp+0x48]
  455466:	adc    edx,DWORD PTR [esp+0x4c]
  45546a:	mov    DWORD PTR [esp],eax
  45546d:	mov    DWORD PTR [esp+0x4],edx
  455471:	mov    eax,DWORD PTR [esp+0x20]
  455475:	mov    edx,DWORD PTR [esp+0x24]
  455479:	shrd   eax,edx,0xe
  45547d:	shr    edx,0xe
  455480:	push   edx
  455481:	push   eax
  455482:	mov    edx,DWORD PTR [esp+0x28]
  455486:	shl    edx,0x12
  455489:	xor    eax,eax
  45548b:	or     eax,DWORD PTR [esp]
  45548e:	or     edx,DWORD PTR [esp+0x4]
  455492:	add    esp,0x8
  455495:	push   edx
  455496:	push   eax
  455497:	mov    eax,DWORD PTR [esp+0x28]
  45549b:	mov    edx,DWORD PTR [esp+0x2c]
  45549f:	shrd   eax,edx,0x12
  4554a3:	shr    edx,0x12
  4554a6:	push   edx
  4554a7:	push   eax
  4554a8:	mov    edx,DWORD PTR [esp+0x30]
  4554ac:	shl    edx,0xe
  4554af:	xor    eax,eax
  4554b1:	or     eax,DWORD PTR [esp]
  4554b4:	or     edx,DWORD PTR [esp+0x4]
  4554b8:	add    esp,0x8
  4554bb:	xor    eax,DWORD PTR [esp]
  4554be:	xor    edx,DWORD PTR [esp+0x4]
  4554c2:	add    esp,0x8
  4554c5:	push   edx
  4554c6:	push   eax
  4554c7:	mov    eax,DWORD PTR [esp+0x2c]
  4554cb:	shr    eax,0x9
  4554ce:	xor    edx,edx
  4554d0:	push   edx
  4554d1:	push   eax
  4554d2:	mov    eax,DWORD PTR [esp+0x30]
  4554d6:	mov    edx,DWORD PTR [esp+0x34]
  4554da:	shld   edx,eax,0x17
  4554de:	shl    eax,0x17
  4554e1:	or     eax,DWORD PTR [esp]
  4554e4:	or     edx,DWORD PTR [esp+0x4]
  4554e8:	add    esp,0x8
  4554eb:	xor    eax,DWORD PTR [esp]
  4554ee:	xor    edx,DWORD PTR [esp+0x4]
  4554f2:	add    esp,0x8
  4554f5:	add    eax,DWORD PTR [esp+0x38]
  4554f9:	adc    edx,DWORD PTR [esp+0x3c]
  4554fd:	push   edx
  4554fe:	push   eax
  4554ff:	mov    eax,DWORD PTR [esp+0x28]
  455503:	mov    edx,DWORD PTR [esp+0x2c]
  455507:	and    eax,DWORD PTR [esp+0x30]
  45550b:	and    edx,DWORD PTR [esp+0x34]
  45550f:	push   edx
  455510:	push   eax
  455511:	mov    eax,DWORD PTR [esp+0x30]
  455515:	mov    edx,DWORD PTR [esp+0x34]
  455519:	not    eax
  45551b:	not    edx
  45551d:	and    eax,DWORD PTR [esp+0x40]
  455521:	and    edx,DWORD PTR [esp+0x44]
  455525:	xor    eax,DWORD PTR [esp]
  455528:	xor    edx,DWORD PTR [esp+0x4]
  45552c:	add    esp,0x8
  45552f:	add    eax,DWORD PTR [esp]
  455532:	adc    edx,DWORD PTR [esp+0x4]
  455536:	add    esp,0x8
  455539:	add    eax,0x9ef14ad2
  45553e:	adc    edx,0xe49b69c1
  455544:	add    eax,DWORD PTR [esp+0xd0]
  45554b:	adc    edx,DWORD PTR [esp+0xd4]
  455552:	mov    DWORD PTR [esp+0x40],eax
  455556:	mov    DWORD PTR [esp+0x44],edx
  45555a:	mov    eax,DWORD PTR [esp]
  45555d:	mov    edx,DWORD PTR [esp+0x4]
  455561:	shrd   eax,edx,0x1c
  455565:	shr    edx,0x1c
  455568:	push   edx
  455569:	push   eax
  45556a:	mov    edx,DWORD PTR [esp+0x8]
  45556e:	shl    edx,0x4
  455571:	xor    eax,eax
  455573:	or     eax,DWORD PTR [esp]
  455576:	or     edx,DWORD PTR [esp+0x4]
  45557a:	add    esp,0x8
  45557d:	push   edx
  45557e:	push   eax
  45557f:	mov    eax,DWORD PTR [esp+0xc]
  455583:	shr    eax,0x2
  455586:	xor    edx,edx
  455588:	push   edx
  455589:	push   eax
  45558a:	mov    eax,DWORD PTR [esp+0x10]
  45558e:	mov    edx,DWORD PTR [esp+0x14]
  455592:	shld   edx,eax,0x1e
  455596:	shl    eax,0x1e
  455599:	or     eax,DWORD PTR [esp]
  45559c:	or     edx,DWORD PTR [esp+0x4]
  4555a0:	add    esp,0x8
  4555a3:	xor    eax,DWORD PTR [esp]
  4555a6:	xor    edx,DWORD PTR [esp+0x4]
  4555aa:	add    esp,0x8
  4555ad:	push   edx
  4555ae:	push   eax
  4555af:	mov    eax,DWORD PTR [esp+0xc]
  4555b3:	shr    eax,0x7
  4555b6:	xor    edx,edx
  4555b8:	push   edx
  4555b9:	push   eax
  4555ba:	mov    eax,DWORD PTR [esp+0x10]
  4555be:	mov    edx,DWORD PTR [esp+0x14]
  4555c2:	shld   edx,eax,0x19
  4555c6:	shl    eax,0x19
  4555c9:	or     eax,DWORD PTR [esp]
  4555cc:	or     edx,DWORD PTR [esp+0x4]
  4555d0:	add    esp,0x8
  4555d3:	xor    eax,DWORD PTR [esp]
  4555d6:	xor    edx,DWORD PTR [esp+0x4]
  4555da:	add    esp,0x8
  4555dd:	push   edx
  4555de:	push   eax
  4555df:	mov    eax,DWORD PTR [esp+0x8]
  4555e3:	mov    edx,DWORD PTR [esp+0xc]
  4555e7:	and    eax,DWORD PTR [esp+0x10]
  4555eb:	and    edx,DWORD PTR [esp+0x14]
  4555ef:	push   edx
  4555f0:	push   eax
  4555f1:	mov    eax,DWORD PTR [esp+0x10]
  4555f5:	mov    edx,DWORD PTR [esp+0x14]
  4555f9:	and    eax,DWORD PTR [esp+0x20]
  4555fd:	and    edx,DWORD PTR [esp+0x24]
  455601:	xor    eax,DWORD PTR [esp]
  455604:	xor    edx,DWORD PTR [esp+0x4]
  455608:	add    esp,0x8
  45560b:	push   edx
  45560c:	push   eax
  45560d:	mov    eax,DWORD PTR [esp+0x18]
  455611:	mov    edx,DWORD PTR [esp+0x1c]
  455615:	and    eax,DWORD PTR [esp+0x20]
  455619:	and    edx,DWORD PTR [esp+0x24]
  45561d:	xor    eax,DWORD PTR [esp]
  455620:	xor    edx,DWORD PTR [esp+0x4]
  455624:	add    esp,0x8
  455627:	add    eax,DWORD PTR [esp]
  45562a:	adc    edx,DWORD PTR [esp+0x4]
  45562e:	add    esp,0x8
  455631:	mov    DWORD PTR [esp+0x48],eax
  455635:	mov    DWORD PTR [esp+0x4c],edx
  455639:	mov    eax,DWORD PTR [esp+0x18]
  45563d:	mov    edx,DWORD PTR [esp+0x1c]
  455641:	add    eax,DWORD PTR [esp+0x40]
  455645:	adc    edx,DWORD PTR [esp+0x44]
  455649:	mov    DWORD PTR [esp+0x18],eax
  45564d:	mov    DWORD PTR [esp+0x1c],edx
  455651:	mov    eax,DWORD PTR [esp+0x40]
  455655:	mov    edx,DWORD PTR [esp+0x44]
  455659:	add    eax,DWORD PTR [esp+0x48]
  45565d:	adc    edx,DWORD PTR [esp+0x4c]
  455661:	mov    DWORD PTR [esp+0x38],eax
  455665:	mov    DWORD PTR [esp+0x3c],edx
  455669:	mov    eax,DWORD PTR [esp+0x18]
  45566d:	mov    edx,DWORD PTR [esp+0x1c]
  455671:	shrd   eax,edx,0xe
  455675:	shr    edx,0xe
  455678:	push   edx
  455679:	push   eax
  45567a:	mov    edx,DWORD PTR [esp+0x20]
  45567e:	shl    edx,0x12
  455681:	xor    eax,eax
  455683:	or     eax,DWORD PTR [esp]
  455686:	or     edx,DWORD PTR [esp+0x4]
  45568a:	add    esp,0x8
  45568d:	push   edx
  45568e:	push   eax
  45568f:	mov    eax,DWORD PTR [esp+0x20]
  455693:	mov    edx,DWORD PTR [esp+0x24]
  455697:	shrd   eax,edx,0x12
  45569b:	shr    edx,0x12
  45569e:	push   edx
  45569f:	push   eax
  4556a0:	mov    edx,DWORD PTR [esp+0x28]
  4556a4:	shl    edx,0xe
  4556a7:	xor    eax,eax
  4556a9:	or     eax,DWORD PTR [esp]
  4556ac:	or     edx,DWORD PTR [esp+0x4]
  4556b0:	add    esp,0x8
  4556b3:	xor    eax,DWORD PTR [esp]
  4556b6:	xor    edx,DWORD PTR [esp+0x4]
  4556ba:	add    esp,0x8
  4556bd:	push   edx
  4556be:	push   eax
  4556bf:	mov    eax,DWORD PTR [esp+0x24]
  4556c3:	shr    eax,0x9
  4556c6:	xor    edx,edx
  4556c8:	push   edx
  4556c9:	push   eax
  4556ca:	mov    eax,DWORD PTR [esp+0x28]
  4556ce:	mov    edx,DWORD PTR [esp+0x2c]
  4556d2:	shld   edx,eax,0x17
  4556d6:	shl    eax,0x17
  4556d9:	or     eax,DWORD PTR [esp]
  4556dc:	or     edx,DWORD PTR [esp+0x4]
  4556e0:	add    esp,0x8
  4556e3:	xor    eax,DWORD PTR [esp]
  4556e6:	xor    edx,DWORD PTR [esp+0x4]
  4556ea:	add    esp,0x8
  4556ed:	add    eax,DWORD PTR [esp+0x30]
  4556f1:	adc    edx,DWORD PTR [esp+0x34]
  4556f5:	push   edx
  4556f6:	push   eax
  4556f7:	mov    eax,DWORD PTR [esp+0x20]
  4556fb:	mov    edx,DWORD PTR [esp+0x24]
  4556ff:	and    eax,DWORD PTR [esp+0x28]
  455703:	and    edx,DWORD PTR [esp+0x2c]
  455707:	push   edx
  455708:	push   eax
  455709:	mov    eax,DWORD PTR [esp+0x28]
  45570d:	mov    edx,DWORD PTR [esp+0x2c]
  455711:	not    eax
  455713:	not    edx
  455715:	and    eax,DWORD PTR [esp+0x38]
  455719:	and    edx,DWORD PTR [esp+0x3c]
  45571d:	xor    eax,DWORD PTR [esp]
  455720:	xor    edx,DWORD PTR [esp+0x4]
  455724:	add    esp,0x8
  455727:	add    eax,DWORD PTR [esp]
  45572a:	adc    edx,DWORD PTR [esp+0x4]
  45572e:	add    esp,0x8
  455731:	add    eax,0x384f25e3
  455736:	adc    edx,0xefbe4786
  45573c:	add    eax,DWORD PTR [esp+0xd8]
  455743:	adc    edx,DWORD PTR [esp+0xdc]
  45574a:	mov    DWORD PTR [esp+0x40],eax
  45574e:	mov    DWORD PTR [esp+0x44],edx
  455752:	mov    eax,DWORD PTR [esp+0x38]
  455756:	mov    edx,DWORD PTR [esp+0x3c]
  45575a:	shrd   eax,edx,0x1c
  45575e:	shr    edx,0x1c
  455761:	push   edx
  455762:	push   eax
  455763:	mov    edx,DWORD PTR [esp+0x40]
  455767:	shl    edx,0x4
  45576a:	xor    eax,eax
  45576c:	or     eax,DWORD PTR [esp]
  45576f:	or     edx,DWORD PTR [esp+0x4]
  455773:	add    esp,0x8
  455776:	push   edx
  455777:	push   eax
  455778:	mov    eax,DWORD PTR [esp+0x44]
  45577c:	shr    eax,0x2
  45577f:	xor    edx,edx
  455781:	push   edx
  455782:	push   eax
  455783:	mov    eax,DWORD PTR [esp+0x48]
  455787:	mov    edx,DWORD PTR [esp+0x4c]
  45578b:	shld   edx,eax,0x1e
  45578f:	shl    eax,0x1e
  455792:	or     eax,DWORD PTR [esp]
  455795:	or     edx,DWORD PTR [esp+0x4]
  455799:	add    esp,0x8
  45579c:	xor    eax,DWORD PTR [esp]
  45579f:	xor    edx,DWORD PTR [esp+0x4]
  4557a3:	add    esp,0x8
  4557a6:	push   edx
  4557a7:	push   eax
  4557a8:	mov    eax,DWORD PTR [esp+0x44]
  4557ac:	shr    eax,0x7
  4557af:	xor    edx,edx
  4557b1:	push   edx
  4557b2:	push   eax
  4557b3:	mov    eax,DWORD PTR [esp+0x48]
  4557b7:	mov    edx,DWORD PTR [esp+0x4c]
  4557bb:	shld   edx,eax,0x19
  4557bf:	shl    eax,0x19
  4557c2:	or     eax,DWORD PTR [esp]
  4557c5:	or     edx,DWORD PTR [esp+0x4]
  4557c9:	add    esp,0x8
  4557cc:	xor    eax,DWORD PTR [esp]
  4557cf:	xor    edx,DWORD PTR [esp+0x4]
  4557d3:	add    esp,0x8
  4557d6:	push   edx
  4557d7:	push   eax
  4557d8:	mov    eax,DWORD PTR [esp+0x40]
  4557dc:	mov    edx,DWORD PTR [esp+0x44]
  4557e0:	and    eax,DWORD PTR [esp+0x8]
  4557e4:	and    edx,DWORD PTR [esp+0xc]
  4557e8:	push   edx
  4557e9:	push   eax
  4557ea:	mov    eax,DWORD PTR [esp+0x48]
  4557ee:	mov    edx,DWORD PTR [esp+0x4c]
  4557f2:	and    eax,DWORD PTR [esp+0x18]
  4557f6:	and    edx,DWORD PTR [esp+0x1c]
  4557fa:	xor    eax,DWORD PTR [esp]
  4557fd:	xor    edx,DWORD PTR [esp+0x4]
  455801:	add    esp,0x8
  455804:	push   edx
  455805:	push   eax
  455806:	mov    eax,DWORD PTR [esp+0x10]
  45580a:	mov    edx,DWORD PTR [esp+0x14]
  45580e:	and    eax,DWORD PTR [esp+0x18]
  455812:	and    edx,DWORD PTR [esp+0x1c]
  455816:	xor    eax,DWORD PTR [esp]
  455819:	xor    edx,DWORD PTR [esp+0x4]
  45581d:	add    esp,0x8
  455820:	add    eax,DWORD PTR [esp]
  455823:	adc    edx,DWORD PTR [esp+0x4]
  455827:	add    esp,0x8
  45582a:	mov    DWORD PTR [esp+0x48],eax
  45582e:	mov    DWORD PTR [esp+0x4c],edx
  455832:	mov    eax,DWORD PTR [esp+0x10]
  455836:	mov    edx,DWORD PTR [esp+0x14]
  45583a:	add    eax,DWORD PTR [esp+0x40]
  45583e:	adc    edx,DWORD PTR [esp+0x44]
  455842:	mov    DWORD PTR [esp+0x10],eax
  455846:	mov    DWORD PTR [esp+0x14],edx
  45584a:	mov    eax,DWORD PTR [esp+0x40]
  45584e:	mov    edx,DWORD PTR [esp+0x44]
  455852:	add    eax,DWORD PTR [esp+0x48]
  455856:	adc    edx,DWORD PTR [esp+0x4c]
  45585a:	mov    DWORD PTR [esp+0x30],eax
  45585e:	mov    DWORD PTR [esp+0x34],edx
  455862:	mov    eax,DWORD PTR [esp+0x10]
  455866:	mov    edx,DWORD PTR [esp+0x14]
  45586a:	shrd   eax,edx,0xe
  45586e:	shr    edx,0xe
  455871:	push   edx
  455872:	push   eax
  455873:	mov    edx,DWORD PTR [esp+0x18]
  455877:	shl    edx,0x12
  45587a:	xor    eax,eax
  45587c:	or     eax,DWORD PTR [esp]
  45587f:	or     edx,DWORD PTR [esp+0x4]
  455883:	add    esp,0x8
  455886:	push   edx
  455887:	push   eax
  455888:	mov    eax,DWORD PTR [esp+0x18]
  45588c:	mov    edx,DWORD PTR [esp+0x1c]
  455890:	shrd   eax,edx,0x12
  455894:	shr    edx,0x12
  455897:	push   edx
  455898:	push   eax
  455899:	mov    edx,DWORD PTR [esp+0x20]
  45589d:	shl    edx,0xe
  4558a0:	xor    eax,eax
  4558a2:	or     eax,DWORD PTR [esp]
  4558a5:	or     edx,DWORD PTR [esp+0x4]
  4558a9:	add    esp,0x8
  4558ac:	xor    eax,DWORD PTR [esp]
  4558af:	xor    edx,DWORD PTR [esp+0x4]
  4558b3:	add    esp,0x8
  4558b6:	push   edx
  4558b7:	push   eax
  4558b8:	mov    eax,DWORD PTR [esp+0x1c]
  4558bc:	shr    eax,0x9
  4558bf:	xor    edx,edx
  4558c1:	push   edx
  4558c2:	push   eax
  4558c3:	mov    eax,DWORD PTR [esp+0x20]
  4558c7:	mov    edx,DWORD PTR [esp+0x24]
  4558cb:	shld   edx,eax,0x17
  4558cf:	shl    eax,0x17
  4558d2:	or     eax,DWORD PTR [esp]
  4558d5:	or     edx,DWORD PTR [esp+0x4]
  4558d9:	add    esp,0x8
  4558dc:	xor    eax,DWORD PTR [esp]
  4558df:	xor    edx,DWORD PTR [esp+0x4]
  4558e3:	add    esp,0x8
  4558e6:	add    eax,DWORD PTR [esp+0x28]
  4558ea:	adc    edx,DWORD PTR [esp+0x2c]
  4558ee:	push   edx
  4558ef:	push   eax
  4558f0:	mov    eax,DWORD PTR [esp+0x18]
  4558f4:	mov    edx,DWORD PTR [esp+0x1c]
  4558f8:	and    eax,DWORD PTR [esp+0x20]
  4558fc:	and    edx,DWORD PTR [esp+0x24]
  455900:	push   edx
  455901:	push   eax
  455902:	mov    eax,DWORD PTR [esp+0x20]
  455906:	mov    edx,DWORD PTR [esp+0x24]
  45590a:	not    eax
  45590c:	not    edx
  45590e:	and    eax,DWORD PTR [esp+0x30]
  455912:	and    edx,DWORD PTR [esp+0x34]
  455916:	xor    eax,DWORD PTR [esp]
  455919:	xor    edx,DWORD PTR [esp+0x4]
  45591d:	add    esp,0x8
  455920:	add    eax,DWORD PTR [esp]
  455923:	adc    edx,DWORD PTR [esp+0x4]
  455927:	add    esp,0x8
  45592a:	add    eax,0x8b8cd5b5
  45592f:	adc    edx,0xfc19dc6
  455935:	add    eax,DWORD PTR [esp+0xe0]
  45593c:	adc    edx,DWORD PTR [esp+0xe4]
  455943:	mov    DWORD PTR [esp+0x40],eax
  455947:	mov    DWORD PTR [esp+0x44],edx
  45594b:	mov    eax,DWORD PTR [esp+0x30]
  45594f:	mov    edx,DWORD PTR [esp+0x34]
  455953:	shrd   eax,edx,0x1c
  455957:	shr    edx,0x1c
  45595a:	push   edx
  45595b:	push   eax
  45595c:	mov    edx,DWORD PTR [esp+0x38]
  455960:	shl    edx,0x4
  455963:	xor    eax,eax
  455965:	or     eax,DWORD PTR [esp]
  455968:	or     edx,DWORD PTR [esp+0x4]
  45596c:	add    esp,0x8
  45596f:	push   edx
  455970:	push   eax
  455971:	mov    eax,DWORD PTR [esp+0x3c]
  455975:	shr    eax,0x2
  455978:	xor    edx,edx
  45597a:	push   edx
  45597b:	push   eax
  45597c:	mov    eax,DWORD PTR [esp+0x40]
  455980:	mov    edx,DWORD PTR [esp+0x44]
  455984:	shld   edx,eax,0x1e
  455988:	shl    eax,0x1e
  45598b:	or     eax,DWORD PTR [esp]
  45598e:	or     edx,DWORD PTR [esp+0x4]
  455992:	add    esp,0x8
  455995:	xor    eax,DWORD PTR [esp]
  455998:	xor    edx,DWORD PTR [esp+0x4]
  45599c:	add    esp,0x8
  45599f:	push   edx
  4559a0:	push   eax
  4559a1:	mov    eax,DWORD PTR [esp+0x3c]
  4559a5:	shr    eax,0x7
  4559a8:	xor    edx,edx
  4559aa:	push   edx
  4559ab:	push   eax
  4559ac:	mov    eax,DWORD PTR [esp+0x40]
  4559b0:	mov    edx,DWORD PTR [esp+0x44]
  4559b4:	shld   edx,eax,0x19
  4559b8:	shl    eax,0x19
  4559bb:	or     eax,DWORD PTR [esp]
  4559be:	or     edx,DWORD PTR [esp+0x4]
  4559c2:	add    esp,0x8
  4559c5:	xor    eax,DWORD PTR [esp]
  4559c8:	xor    edx,DWORD PTR [esp+0x4]
  4559cc:	add    esp,0x8
  4559cf:	push   edx
  4559d0:	push   eax
  4559d1:	mov    eax,DWORD PTR [esp+0x38]
  4559d5:	mov    edx,DWORD PTR [esp+0x3c]
  4559d9:	and    eax,DWORD PTR [esp+0x40]
  4559dd:	and    edx,DWORD PTR [esp+0x44]
  4559e1:	push   edx
  4559e2:	push   eax
  4559e3:	mov    eax,DWORD PTR [esp+0x40]
  4559e7:	mov    edx,DWORD PTR [esp+0x44]
  4559eb:	and    eax,DWORD PTR [esp+0x10]
  4559ef:	and    edx,DWORD PTR [esp+0x14]
  4559f3:	xor    eax,DWORD PTR [esp]
  4559f6:	xor    edx,DWORD PTR [esp+0x4]
  4559fa:	add    esp,0x8
  4559fd:	push   edx
  4559fe:	push   eax
  4559ff:	mov    eax,DWORD PTR [esp+0x48]
  455a03:	mov    edx,DWORD PTR [esp+0x4c]
  455a07:	and    eax,DWORD PTR [esp+0x10]
  455a0b:	and    edx,DWORD PTR [esp+0x14]
  455a0f:	xor    eax,DWORD PTR [esp]
  455a12:	xor    edx,DWORD PTR [esp+0x4]
  455a16:	add    esp,0x8
  455a19:	add    eax,DWORD PTR [esp]
  455a1c:	adc    edx,DWORD PTR [esp+0x4]
  455a20:	add    esp,0x8
  455a23:	mov    DWORD PTR [esp+0x48],eax
  455a27:	mov    DWORD PTR [esp+0x4c],edx
  455a2b:	mov    eax,DWORD PTR [esp+0x8]
  455a2f:	mov    edx,DWORD PTR [esp+0xc]
  455a33:	add    eax,DWORD PTR [esp+0x40]
  455a37:	adc    edx,DWORD PTR [esp+0x44]
  455a3b:	mov    DWORD PTR [esp+0x8],eax
  455a3f:	mov    DWORD PTR [esp+0xc],edx
  455a43:	mov    eax,DWORD PTR [esp+0x40]
  455a47:	mov    edx,DWORD PTR [esp+0x44]
  455a4b:	add    eax,DWORD PTR [esp+0x48]
  455a4f:	adc    edx,DWORD PTR [esp+0x4c]
  455a53:	mov    DWORD PTR [esp+0x28],eax
  455a57:	mov    DWORD PTR [esp+0x2c],edx
  455a5b:	mov    eax,DWORD PTR [esp+0x8]
  455a5f:	mov    edx,DWORD PTR [esp+0xc]
  455a63:	shrd   eax,edx,0xe
  455a67:	shr    edx,0xe
  455a6a:	push   edx
  455a6b:	push   eax
  455a6c:	mov    edx,DWORD PTR [esp+0x10]
  455a70:	shl    edx,0x12
  455a73:	xor    eax,eax
  455a75:	or     eax,DWORD PTR [esp]
  455a78:	or     edx,DWORD PTR [esp+0x4]
  455a7c:	add    esp,0x8
  455a7f:	push   edx
  455a80:	push   eax
  455a81:	mov    eax,DWORD PTR [esp+0x10]
  455a85:	mov    edx,DWORD PTR [esp+0x14]
  455a89:	shrd   eax,edx,0x12
  455a8d:	shr    edx,0x12
  455a90:	push   edx
  455a91:	push   eax
  455a92:	mov    edx,DWORD PTR [esp+0x18]
  455a96:	shl    edx,0xe
  455a99:	xor    eax,eax
  455a9b:	or     eax,DWORD PTR [esp]
  455a9e:	or     edx,DWORD PTR [esp+0x4]
  455aa2:	add    esp,0x8
  455aa5:	xor    eax,DWORD PTR [esp]
  455aa8:	xor    edx,DWORD PTR [esp+0x4]
  455aac:	add    esp,0x8
  455aaf:	push   edx
  455ab0:	push   eax
  455ab1:	mov    eax,DWORD PTR [esp+0x14]
  455ab5:	shr    eax,0x9
  455ab8:	xor    edx,edx
  455aba:	push   edx
  455abb:	push   eax
  455abc:	mov    eax,DWORD PTR [esp+0x18]
  455ac0:	mov    edx,DWORD PTR [esp+0x1c]
  455ac4:	shld   edx,eax,0x17
  455ac8:	shl    eax,0x17
  455acb:	or     eax,DWORD PTR [esp]
  455ace:	or     edx,DWORD PTR [esp+0x4]
  455ad2:	add    esp,0x8
  455ad5:	xor    eax,DWORD PTR [esp]
  455ad8:	xor    edx,DWORD PTR [esp+0x4]
  455adc:	add    esp,0x8
  455adf:	add    eax,DWORD PTR [esp+0x20]
  455ae3:	adc    edx,DWORD PTR [esp+0x24]
  455ae7:	push   edx
  455ae8:	push   eax
  455ae9:	mov    eax,DWORD PTR [esp+0x10]
  455aed:	mov    edx,DWORD PTR [esp+0x14]
  455af1:	and    eax,DWORD PTR [esp+0x18]
  455af5:	and    edx,DWORD PTR [esp+0x1c]
  455af9:	push   edx
  455afa:	push   eax
  455afb:	mov    eax,DWORD PTR [esp+0x18]
  455aff:	mov    edx,DWORD PTR [esp+0x1c]
  455b03:	not    eax
  455b05:	not    edx
  455b07:	and    eax,DWORD PTR [esp+0x28]
  455b0b:	and    edx,DWORD PTR [esp+0x2c]
  455b0f:	xor    eax,DWORD PTR [esp]
  455b12:	xor    edx,DWORD PTR [esp+0x4]
  455b16:	add    esp,0x8
  455b19:	add    eax,DWORD PTR [esp]
  455b1c:	adc    edx,DWORD PTR [esp+0x4]
  455b20:	add    esp,0x8
  455b23:	add    eax,0x77ac9c65
  455b28:	adc    edx,0x240ca1cc
  455b2e:	add    eax,DWORD PTR [esp+0xe8]
  455b35:	adc    edx,DWORD PTR [esp+0xec]
  455b3c:	mov    DWORD PTR [esp+0x40],eax
  455b40:	mov    DWORD PTR [esp+0x44],edx
  455b44:	mov    eax,DWORD PTR [esp+0x28]
  455b48:	mov    edx,DWORD PTR [esp+0x2c]
  455b4c:	shrd   eax,edx,0x1c
  455b50:	shr    edx,0x1c
  455b53:	push   edx
  455b54:	push   eax
  455b55:	mov    edx,DWORD PTR [esp+0x30]
  455b59:	shl    edx,0x4
  455b5c:	xor    eax,eax
  455b5e:	or     eax,DWORD PTR [esp]
  455b61:	or     edx,DWORD PTR [esp+0x4]
  455b65:	add    esp,0x8
  455b68:	push   edx
  455b69:	push   eax
  455b6a:	mov    eax,DWORD PTR [esp+0x34]
  455b6e:	shr    eax,0x2
  455b71:	xor    edx,edx
  455b73:	push   edx
  455b74:	push   eax
  455b75:	mov    eax,DWORD PTR [esp+0x38]
  455b79:	mov    edx,DWORD PTR [esp+0x3c]
  455b7d:	shld   edx,eax,0x1e
  455b81:	shl    eax,0x1e
  455b84:	or     eax,DWORD PTR [esp]
  455b87:	or     edx,DWORD PTR [esp+0x4]
  455b8b:	add    esp,0x8
  455b8e:	xor    eax,DWORD PTR [esp]
  455b91:	xor    edx,DWORD PTR [esp+0x4]
  455b95:	add    esp,0x8
  455b98:	push   edx
  455b99:	push   eax
  455b9a:	mov    eax,DWORD PTR [esp+0x34]
  455b9e:	shr    eax,0x7
  455ba1:	xor    edx,edx
  455ba3:	push   edx
  455ba4:	push   eax
  455ba5:	mov    eax,DWORD PTR [esp+0x38]
  455ba9:	mov    edx,DWORD PTR [esp+0x3c]
  455bad:	shld   edx,eax,0x19
  455bb1:	shl    eax,0x19
  455bb4:	or     eax,DWORD PTR [esp]
  455bb7:	or     edx,DWORD PTR [esp+0x4]
  455bbb:	add    esp,0x8
  455bbe:	xor    eax,DWORD PTR [esp]
  455bc1:	xor    edx,DWORD PTR [esp+0x4]
  455bc5:	add    esp,0x8
  455bc8:	push   edx
  455bc9:	push   eax
  455bca:	mov    eax,DWORD PTR [esp+0x30]
  455bce:	mov    edx,DWORD PTR [esp+0x34]
  455bd2:	and    eax,DWORD PTR [esp+0x38]
  455bd6:	and    edx,DWORD PTR [esp+0x3c]
  455bda:	push   edx
  455bdb:	push   eax
  455bdc:	mov    eax,DWORD PTR [esp+0x38]
  455be0:	mov    edx,DWORD PTR [esp+0x3c]
  455be4:	and    eax,DWORD PTR [esp+0x48]
  455be8:	and    edx,DWORD PTR [esp+0x4c]
  455bec:	xor    eax,DWORD PTR [esp]
  455bef:	xor    edx,DWORD PTR [esp+0x4]
  455bf3:	add    esp,0x8
  455bf6:	push   edx
  455bf7:	push   eax
  455bf8:	mov    eax,DWORD PTR [esp+0x40]
  455bfc:	mov    edx,DWORD PTR [esp+0x44]
  455c00:	and    eax,DWORD PTR [esp+0x48]
  455c04:	and    edx,DWORD PTR [esp+0x4c]
  455c08:	xor    eax,DWORD PTR [esp]
  455c0b:	xor    edx,DWORD PTR [esp+0x4]
  455c0f:	add    esp,0x8
  455c12:	add    eax,DWORD PTR [esp]
  455c15:	adc    edx,DWORD PTR [esp+0x4]
  455c19:	add    esp,0x8
  455c1c:	mov    DWORD PTR [esp+0x48],eax
  455c20:	mov    DWORD PTR [esp+0x4c],edx
  455c24:	mov    eax,DWORD PTR [esp]
  455c27:	mov    edx,DWORD PTR [esp+0x4]
  455c2b:	add    eax,DWORD PTR [esp+0x40]
  455c2f:	adc    edx,DWORD PTR [esp+0x44]
  455c33:	mov    DWORD PTR [esp],eax
  455c36:	mov    DWORD PTR [esp+0x4],edx
  455c3a:	mov    eax,DWORD PTR [esp+0x40]
  455c3e:	mov    edx,DWORD PTR [esp+0x44]
  455c42:	add    eax,DWORD PTR [esp+0x48]
  455c46:	adc    edx,DWORD PTR [esp+0x4c]
  455c4a:	mov    DWORD PTR [esp+0x20],eax
  455c4e:	mov    DWORD PTR [esp+0x24],edx
  455c52:	mov    eax,DWORD PTR [esp]
  455c55:	mov    edx,DWORD PTR [esp+0x4]
  455c59:	shrd   eax,edx,0xe
  455c5d:	shr    edx,0xe
  455c60:	push   edx
  455c61:	push   eax
  455c62:	mov    edx,DWORD PTR [esp+0x8]
  455c66:	shl    edx,0x12
  455c69:	xor    eax,eax
  455c6b:	or     eax,DWORD PTR [esp]
  455c6e:	or     edx,DWORD PTR [esp+0x4]
  455c72:	add    esp,0x8
  455c75:	push   edx
  455c76:	push   eax
  455c77:	mov    eax,DWORD PTR [esp+0x8]
  455c7b:	mov    edx,DWORD PTR [esp+0xc]
  455c7f:	shrd   eax,edx,0x12
  455c83:	shr    edx,0x12
  455c86:	push   edx
  455c87:	push   eax
  455c88:	mov    edx,DWORD PTR [esp+0x10]
  455c8c:	shl    edx,0xe
  455c8f:	xor    eax,eax
  455c91:	or     eax,DWORD PTR [esp]
  455c94:	or     edx,DWORD PTR [esp+0x4]
  455c98:	add    esp,0x8
  455c9b:	xor    eax,DWORD PTR [esp]
  455c9e:	xor    edx,DWORD PTR [esp+0x4]
  455ca2:	add    esp,0x8
  455ca5:	push   edx
  455ca6:	push   eax
  455ca7:	mov    eax,DWORD PTR [esp+0xc]
  455cab:	shr    eax,0x9
  455cae:	xor    edx,edx
  455cb0:	push   edx
  455cb1:	push   eax
  455cb2:	mov    eax,DWORD PTR [esp+0x10]
  455cb6:	mov    edx,DWORD PTR [esp+0x14]
  455cba:	shld   edx,eax,0x17
  455cbe:	shl    eax,0x17
  455cc1:	or     eax,DWORD PTR [esp]
  455cc4:	or     edx,DWORD PTR [esp+0x4]
  455cc8:	add    esp,0x8
  455ccb:	xor    eax,DWORD PTR [esp]
  455cce:	xor    edx,DWORD PTR [esp+0x4]
  455cd2:	add    esp,0x8
  455cd5:	add    eax,DWORD PTR [esp+0x18]
  455cd9:	adc    edx,DWORD PTR [esp+0x1c]
  455cdd:	push   edx
  455cde:	push   eax
  455cdf:	mov    eax,DWORD PTR [esp+0x8]
  455ce3:	mov    edx,DWORD PTR [esp+0xc]
  455ce7:	and    eax,DWORD PTR [esp+0x10]
  455ceb:	and    edx,DWORD PTR [esp+0x14]
  455cef:	push   edx
  455cf0:	push   eax
  455cf1:	mov    eax,DWORD PTR [esp+0x10]
  455cf5:	mov    edx,DWORD PTR [esp+0x14]
  455cf9:	not    eax
  455cfb:	not    edx
  455cfd:	and    eax,DWORD PTR [esp+0x20]
  455d01:	and    edx,DWORD PTR [esp+0x24]
  455d05:	xor    eax,DWORD PTR [esp]
  455d08:	xor    edx,DWORD PTR [esp+0x4]
  455d0c:	add    esp,0x8
  455d0f:	add    eax,DWORD PTR [esp]
  455d12:	adc    edx,DWORD PTR [esp+0x4]
  455d16:	add    esp,0x8
  455d19:	add    eax,0x592b0275
  455d1e:	adc    edx,0x2de92c6f
  455d24:	add    eax,DWORD PTR [esp+0xf0]
  455d2b:	adc    edx,DWORD PTR [esp+0xf4]
  455d32:	mov    DWORD PTR [esp+0x40],eax
  455d36:	mov    DWORD PTR [esp+0x44],edx
  455d3a:	mov    eax,DWORD PTR [esp+0x20]
  455d3e:	mov    edx,DWORD PTR [esp+0x24]
  455d42:	shrd   eax,edx,0x1c
  455d46:	shr    edx,0x1c
  455d49:	push   edx
  455d4a:	push   eax
  455d4b:	mov    edx,DWORD PTR [esp+0x28]
  455d4f:	shl    edx,0x4
  455d52:	xor    eax,eax
  455d54:	or     eax,DWORD PTR [esp]
  455d57:	or     edx,DWORD PTR [esp+0x4]
  455d5b:	add    esp,0x8
  455d5e:	push   edx
  455d5f:	push   eax
  455d60:	mov    eax,DWORD PTR [esp+0x2c]
  455d64:	shr    eax,0x2
  455d67:	xor    edx,edx
  455d69:	push   edx
  455d6a:	push   eax
  455d6b:	mov    eax,DWORD PTR [esp+0x30]
  455d6f:	mov    edx,DWORD PTR [esp+0x34]
  455d73:	shld   edx,eax,0x1e
  455d77:	shl    eax,0x1e
  455d7a:	or     eax,DWORD PTR [esp]
  455d7d:	or     edx,DWORD PTR [esp+0x4]
  455d81:	add    esp,0x8
  455d84:	xor    eax,DWORD PTR [esp]
  455d87:	xor    edx,DWORD PTR [esp+0x4]
  455d8b:	add    esp,0x8
  455d8e:	push   edx
  455d8f:	push   eax
  455d90:	mov    eax,DWORD PTR [esp+0x2c]
  455d94:	shr    eax,0x7
  455d97:	xor    edx,edx
  455d99:	push   edx
  455d9a:	push   eax
  455d9b:	mov    eax,DWORD PTR [esp+0x30]
  455d9f:	mov    edx,DWORD PTR [esp+0x34]
  455da3:	shld   edx,eax,0x19
  455da7:	shl    eax,0x19
  455daa:	or     eax,DWORD PTR [esp]
  455dad:	or     edx,DWORD PTR [esp+0x4]
  455db1:	add    esp,0x8
  455db4:	xor    eax,DWORD PTR [esp]
  455db7:	xor    edx,DWORD PTR [esp+0x4]
  455dbb:	add    esp,0x8
  455dbe:	push   edx
  455dbf:	push   eax
  455dc0:	mov    eax,DWORD PTR [esp+0x28]
  455dc4:	mov    edx,DWORD PTR [esp+0x2c]
  455dc8:	and    eax,DWORD PTR [esp+0x30]
  455dcc:	and    edx,DWORD PTR [esp+0x34]
  455dd0:	push   edx
  455dd1:	push   eax
  455dd2:	mov    eax,DWORD PTR [esp+0x30]
  455dd6:	mov    edx,DWORD PTR [esp+0x34]
  455dda:	and    eax,DWORD PTR [esp+0x40]
  455dde:	and    edx,DWORD PTR [esp+0x44]
  455de2:	xor    eax,DWORD PTR [esp]
  455de5:	xor    edx,DWORD PTR [esp+0x4]
  455de9:	add    esp,0x8
  455dec:	push   edx
  455ded:	push   eax
  455dee:	mov    eax,DWORD PTR [esp+0x38]
  455df2:	mov    edx,DWORD PTR [esp+0x3c]
  455df6:	and    eax,DWORD PTR [esp+0x40]
  455dfa:	and    edx,DWORD PTR [esp+0x44]
  455dfe:	xor    eax,DWORD PTR [esp]
  455e01:	xor    edx,DWORD PTR [esp+0x4]
  455e05:	add    esp,0x8
  455e08:	add    eax,DWORD PTR [esp]
  455e0b:	adc    edx,DWORD PTR [esp+0x4]
  455e0f:	add    esp,0x8
  455e12:	mov    DWORD PTR [esp+0x48],eax
  455e16:	mov    DWORD PTR [esp+0x4c],edx
  455e1a:	mov    eax,DWORD PTR [esp+0x38]
  455e1e:	mov    edx,DWORD PTR [esp+0x3c]
  455e22:	add    eax,DWORD PTR [esp+0x40]
  455e26:	adc    edx,DWORD PTR [esp+0x44]
  455e2a:	mov    DWORD PTR [esp+0x38],eax
  455e2e:	mov    DWORD PTR [esp+0x3c],edx
  455e32:	mov    eax,DWORD PTR [esp+0x40]
  455e36:	mov    edx,DWORD PTR [esp+0x44]
  455e3a:	add    eax,DWORD PTR [esp+0x48]
  455e3e:	adc    edx,DWORD PTR [esp+0x4c]
  455e42:	mov    DWORD PTR [esp+0x18],eax
  455e46:	mov    DWORD PTR [esp+0x1c],edx
  455e4a:	mov    eax,DWORD PTR [esp+0x38]
  455e4e:	mov    edx,DWORD PTR [esp+0x3c]
  455e52:	shrd   eax,edx,0xe
  455e56:	shr    edx,0xe
  455e59:	push   edx
  455e5a:	push   eax
  455e5b:	mov    edx,DWORD PTR [esp+0x40]
  455e5f:	shl    edx,0x12
  455e62:	xor    eax,eax
  455e64:	or     eax,DWORD PTR [esp]
  455e67:	or     edx,DWORD PTR [esp+0x4]
  455e6b:	add    esp,0x8
  455e6e:	push   edx
  455e6f:	push   eax
  455e70:	mov    eax,DWORD PTR [esp+0x40]
  455e74:	mov    edx,DWORD PTR [esp+0x44]
  455e78:	shrd   eax,edx,0x12
  455e7c:	shr    edx,0x12
  455e7f:	push   edx
  455e80:	push   eax
  455e81:	mov    edx,DWORD PTR [esp+0x48]
  455e85:	shl    edx,0xe
  455e88:	xor    eax,eax
  455e8a:	or     eax,DWORD PTR [esp]
  455e8d:	or     edx,DWORD PTR [esp+0x4]
  455e91:	add    esp,0x8
  455e94:	xor    eax,DWORD PTR [esp]
  455e97:	xor    edx,DWORD PTR [esp+0x4]
  455e9b:	add    esp,0x8
  455e9e:	push   edx
  455e9f:	push   eax
  455ea0:	mov    eax,DWORD PTR [esp+0x44]
  455ea4:	shr    eax,0x9
  455ea7:	xor    edx,edx
  455ea9:	push   edx
  455eaa:	push   eax
  455eab:	mov    eax,DWORD PTR [esp+0x48]
  455eaf:	mov    edx,DWORD PTR [esp+0x4c]
  455eb3:	shld   edx,eax,0x17
  455eb7:	shl    eax,0x17
  455eba:	or     eax,DWORD PTR [esp]
  455ebd:	or     edx,DWORD PTR [esp+0x4]
  455ec1:	add    esp,0x8
  455ec4:	xor    eax,DWORD PTR [esp]
  455ec7:	xor    edx,DWORD PTR [esp+0x4]
  455ecb:	add    esp,0x8
  455ece:	add    eax,DWORD PTR [esp+0x10]
  455ed2:	adc    edx,DWORD PTR [esp+0x14]
  455ed6:	push   edx
  455ed7:	push   eax
  455ed8:	mov    eax,DWORD PTR [esp+0x40]
  455edc:	mov    edx,DWORD PTR [esp+0x44]
  455ee0:	and    eax,DWORD PTR [esp+0x8]
  455ee4:	and    edx,DWORD PTR [esp+0xc]
  455ee8:	push   edx
  455ee9:	push   eax
  455eea:	mov    eax,DWORD PTR [esp+0x48]
  455eee:	mov    edx,DWORD PTR [esp+0x4c]
  455ef2:	not    eax
  455ef4:	not    edx
  455ef6:	and    eax,DWORD PTR [esp+0x18]
  455efa:	and    edx,DWORD PTR [esp+0x1c]
  455efe:	xor    eax,DWORD PTR [esp]
  455f01:	xor    edx,DWORD PTR [esp+0x4]
  455f05:	add    esp,0x8
  455f08:	add    eax,DWORD PTR [esp]
  455f0b:	adc    edx,DWORD PTR [esp+0x4]
  455f0f:	add    esp,0x8
  455f12:	add    eax,0x6ea6e483
  455f17:	adc    edx,0x4a7484aa
  455f1d:	add    eax,DWORD PTR [esp+0xf8]
  455f24:	adc    edx,DWORD PTR [esp+0xfc]
  455f2b:	mov    DWORD PTR [esp+0x40],eax
  455f2f:	mov    DWORD PTR [esp+0x44],edx
  455f33:	mov    eax,DWORD PTR [esp+0x18]
  455f37:	mov    edx,DWORD PTR [esp+0x1c]
  455f3b:	shrd   eax,edx,0x1c
  455f3f:	shr    edx,0x1c
  455f42:	push   edx
  455f43:	push   eax
  455f44:	mov    edx,DWORD PTR [esp+0x20]
  455f48:	shl    edx,0x4
  455f4b:	xor    eax,eax
  455f4d:	or     eax,DWORD PTR [esp]
  455f50:	or     edx,DWORD PTR [esp+0x4]
  455f54:	add    esp,0x8
  455f57:	push   edx
  455f58:	push   eax
  455f59:	mov    eax,DWORD PTR [esp+0x24]
  455f5d:	shr    eax,0x2
  455f60:	xor    edx,edx
  455f62:	push   edx
  455f63:	push   eax
  455f64:	mov    eax,DWORD PTR [esp+0x28]
  455f68:	mov    edx,DWORD PTR [esp+0x2c]
  455f6c:	shld   edx,eax,0x1e
  455f70:	shl    eax,0x1e
  455f73:	or     eax,DWORD PTR [esp]
  455f76:	or     edx,DWORD PTR [esp+0x4]
  455f7a:	add    esp,0x8
  455f7d:	xor    eax,DWORD PTR [esp]
  455f80:	xor    edx,DWORD PTR [esp+0x4]
  455f84:	add    esp,0x8
  455f87:	push   edx
  455f88:	push   eax
  455f89:	mov    eax,DWORD PTR [esp+0x24]
  455f8d:	shr    eax,0x7
  455f90:	xor    edx,edx
  455f92:	push   edx
  455f93:	push   eax
  455f94:	mov    eax,DWORD PTR [esp+0x28]
  455f98:	mov    edx,DWORD PTR [esp+0x2c]
  455f9c:	shld   edx,eax,0x19
  455fa0:	shl    eax,0x19
  455fa3:	or     eax,DWORD PTR [esp]
  455fa6:	or     edx,DWORD PTR [esp+0x4]
  455faa:	add    esp,0x8
  455fad:	xor    eax,DWORD PTR [esp]
  455fb0:	xor    edx,DWORD PTR [esp+0x4]
  455fb4:	add    esp,0x8
  455fb7:	push   edx
  455fb8:	push   eax
  455fb9:	mov    eax,DWORD PTR [esp+0x20]
  455fbd:	mov    edx,DWORD PTR [esp+0x24]
  455fc1:	and    eax,DWORD PTR [esp+0x28]
  455fc5:	and    edx,DWORD PTR [esp+0x2c]
  455fc9:	push   edx
  455fca:	push   eax
  455fcb:	mov    eax,DWORD PTR [esp+0x28]
  455fcf:	mov    edx,DWORD PTR [esp+0x2c]
  455fd3:	and    eax,DWORD PTR [esp+0x38]
  455fd7:	and    edx,DWORD PTR [esp+0x3c]
  455fdb:	xor    eax,DWORD PTR [esp]
  455fde:	xor    edx,DWORD PTR [esp+0x4]
  455fe2:	add    esp,0x8
  455fe5:	push   edx
  455fe6:	push   eax
  455fe7:	mov    eax,DWORD PTR [esp+0x30]
  455feb:	mov    edx,DWORD PTR [esp+0x34]
  455fef:	and    eax,DWORD PTR [esp+0x38]
  455ff3:	and    edx,DWORD PTR [esp+0x3c]
  455ff7:	xor    eax,DWORD PTR [esp]
  455ffa:	xor    edx,DWORD PTR [esp+0x4]
  455ffe:	add    esp,0x8
  456001:	add    eax,DWORD PTR [esp]
  456004:	adc    edx,DWORD PTR [esp+0x4]
  456008:	add    esp,0x8
  45600b:	mov    DWORD PTR [esp+0x48],eax
  45600f:	mov    DWORD PTR [esp+0x4c],edx
  456013:	mov    eax,DWORD PTR [esp+0x30]
  456017:	mov    edx,DWORD PTR [esp+0x34]
  45601b:	add    eax,DWORD PTR [esp+0x40]
  45601f:	adc    edx,DWORD PTR [esp+0x44]
  456023:	mov    DWORD PTR [esp+0x30],eax
  456027:	mov    DWORD PTR [esp+0x34],edx
  45602b:	mov    eax,DWORD PTR [esp+0x40]
  45602f:	mov    edx,DWORD PTR [esp+0x44]
  456033:	add    eax,DWORD PTR [esp+0x48]
  456037:	adc    edx,DWORD PTR [esp+0x4c]
  45603b:	mov    DWORD PTR [esp+0x10],eax
  45603f:	mov    DWORD PTR [esp+0x14],edx
  456043:	mov    eax,DWORD PTR [esp+0x30]
  456047:	mov    edx,DWORD PTR [esp+0x34]
  45604b:	shrd   eax,edx,0xe
  45604f:	shr    edx,0xe
  456052:	push   edx
  456053:	push   eax
  456054:	mov    edx,DWORD PTR [esp+0x38]
  456058:	shl    edx,0x12
  45605b:	xor    eax,eax
  45605d:	or     eax,DWORD PTR [esp]
  456060:	or     edx,DWORD PTR [esp+0x4]
  456064:	add    esp,0x8
  456067:	push   edx
  456068:	push   eax
  456069:	mov    eax,DWORD PTR [esp+0x38]
  45606d:	mov    edx,DWORD PTR [esp+0x3c]
  456071:	shrd   eax,edx,0x12
  456075:	shr    edx,0x12
  456078:	push   edx
  456079:	push   eax
  45607a:	mov    edx,DWORD PTR [esp+0x40]
  45607e:	shl    edx,0xe
  456081:	xor    eax,eax
  456083:	or     eax,DWORD PTR [esp]
  456086:	or     edx,DWORD PTR [esp+0x4]
  45608a:	add    esp,0x8
  45608d:	xor    eax,DWORD PTR [esp]
  456090:	xor    edx,DWORD PTR [esp+0x4]
  456094:	add    esp,0x8
  456097:	push   edx
  456098:	push   eax
  456099:	mov    eax,DWORD PTR [esp+0x3c]
  45609d:	shr    eax,0x9
  4560a0:	xor    edx,edx
  4560a2:	push   edx
  4560a3:	push   eax
  4560a4:	mov    eax,DWORD PTR [esp+0x40]
  4560a8:	mov    edx,DWORD PTR [esp+0x44]
  4560ac:	shld   edx,eax,0x17
  4560b0:	shl    eax,0x17
  4560b3:	or     eax,DWORD PTR [esp]
  4560b6:	or     edx,DWORD PTR [esp+0x4]
  4560ba:	add    esp,0x8
  4560bd:	xor    eax,DWORD PTR [esp]
  4560c0:	xor    edx,DWORD PTR [esp+0x4]
  4560c4:	add    esp,0x8
  4560c7:	add    eax,DWORD PTR [esp+0x8]
  4560cb:	adc    edx,DWORD PTR [esp+0xc]
  4560cf:	push   edx
  4560d0:	push   eax
  4560d1:	mov    eax,DWORD PTR [esp+0x38]
  4560d5:	mov    edx,DWORD PTR [esp+0x3c]
  4560d9:	and    eax,DWORD PTR [esp+0x40]
  4560dd:	and    edx,DWORD PTR [esp+0x44]
  4560e1:	push   edx
  4560e2:	push   eax
  4560e3:	mov    eax,DWORD PTR [esp+0x40]
  4560e7:	mov    edx,DWORD PTR [esp+0x44]
  4560eb:	not    eax
  4560ed:	not    edx
  4560ef:	and    eax,DWORD PTR [esp+0x10]
  4560f3:	and    edx,DWORD PTR [esp+0x14]
  4560f7:	xor    eax,DWORD PTR [esp]
  4560fa:	xor    edx,DWORD PTR [esp+0x4]
  4560fe:	add    esp,0x8
  456101:	add    eax,DWORD PTR [esp]
  456104:	adc    edx,DWORD PTR [esp+0x4]
  456108:	add    esp,0x8
  45610b:	add    eax,0xbd41fbd4
  456110:	adc    edx,0x5cb0a9dc
  456116:	add    eax,DWORD PTR [esp+0x100]
  45611d:	adc    edx,DWORD PTR [esp+0x104]
  456124:	mov    DWORD PTR [esp+0x40],eax
  456128:	mov    DWORD PTR [esp+0x44],edx
  45612c:	mov    eax,DWORD PTR [esp+0x10]
  456130:	mov    edx,DWORD PTR [esp+0x14]
  456134:	shrd   eax,edx,0x1c
  456138:	shr    edx,0x1c
  45613b:	push   edx
  45613c:	push   eax
  45613d:	mov    edx,DWORD PTR [esp+0x18]
  456141:	shl    edx,0x4
  456144:	xor    eax,eax
  456146:	or     eax,DWORD PTR [esp]
  456149:	or     edx,DWORD PTR [esp+0x4]
  45614d:	add    esp,0x8
  456150:	push   edx
  456151:	push   eax
  456152:	mov    eax,DWORD PTR [esp+0x1c]
  456156:	shr    eax,0x2
  456159:	xor    edx,edx
  45615b:	push   edx
  45615c:	push   eax
  45615d:	mov    eax,DWORD PTR [esp+0x20]
  456161:	mov    edx,DWORD PTR [esp+0x24]
  456165:	shld   edx,eax,0x1e
  456169:	shl    eax,0x1e
  45616c:	or     eax,DWORD PTR [esp]
  45616f:	or     edx,DWORD PTR [esp+0x4]
  456173:	add    esp,0x8
  456176:	xor    eax,DWORD PTR [esp]
  456179:	xor    edx,DWORD PTR [esp+0x4]
  45617d:	add    esp,0x8
  456180:	push   edx
  456181:	push   eax
  456182:	mov    eax,DWORD PTR [esp+0x1c]
  456186:	shr    eax,0x7
  456189:	xor    edx,edx
  45618b:	push   edx
  45618c:	push   eax
  45618d:	mov    eax,DWORD PTR [esp+0x20]
  456191:	mov    edx,DWORD PTR [esp+0x24]
  456195:	shld   edx,eax,0x19
  456199:	shl    eax,0x19
  45619c:	or     eax,DWORD PTR [esp]
  45619f:	or     edx,DWORD PTR [esp+0x4]
  4561a3:	add    esp,0x8
  4561a6:	xor    eax,DWORD PTR [esp]
  4561a9:	xor    edx,DWORD PTR [esp+0x4]
  4561ad:	add    esp,0x8
  4561b0:	push   edx
  4561b1:	push   eax
  4561b2:	mov    eax,DWORD PTR [esp+0x18]
  4561b6:	mov    edx,DWORD PTR [esp+0x1c]
  4561ba:	and    eax,DWORD PTR [esp+0x20]
  4561be:	and    edx,DWORD PTR [esp+0x24]
  4561c2:	push   edx
  4561c3:	push   eax
  4561c4:	mov    eax,DWORD PTR [esp+0x20]
  4561c8:	mov    edx,DWORD PTR [esp+0x24]
  4561cc:	and    eax,DWORD PTR [esp+0x30]
  4561d0:	and    edx,DWORD PTR [esp+0x34]
  4561d4:	xor    eax,DWORD PTR [esp]
  4561d7:	xor    edx,DWORD PTR [esp+0x4]
  4561db:	add    esp,0x8
  4561de:	push   edx
  4561df:	push   eax
  4561e0:	mov    eax,DWORD PTR [esp+0x28]
  4561e4:	mov    edx,DWORD PTR [esp+0x2c]
  4561e8:	and    eax,DWORD PTR [esp+0x30]
  4561ec:	and    edx,DWORD PTR [esp+0x34]
  4561f0:	xor    eax,DWORD PTR [esp]
  4561f3:	xor    edx,DWORD PTR [esp+0x4]
  4561f7:	add    esp,0x8
  4561fa:	add    eax,DWORD PTR [esp]
  4561fd:	adc    edx,DWORD PTR [esp+0x4]
  456201:	add    esp,0x8
  456204:	mov    DWORD PTR [esp+0x48],eax
  456208:	mov    DWORD PTR [esp+0x4c],edx
  45620c:	mov    eax,DWORD PTR [esp+0x28]
  456210:	mov    edx,DWORD PTR [esp+0x2c]
  456214:	add    eax,DWORD PTR [esp+0x40]
  456218:	adc    edx,DWORD PTR [esp+0x44]
  45621c:	mov    DWORD PTR [esp+0x28],eax
  456220:	mov    DWORD PTR [esp+0x2c],edx
  456224:	mov    eax,DWORD PTR [esp+0x40]
  456228:	mov    edx,DWORD PTR [esp+0x44]
  45622c:	add    eax,DWORD PTR [esp+0x48]
  456230:	adc    edx,DWORD PTR [esp+0x4c]
  456234:	mov    DWORD PTR [esp+0x8],eax
  456238:	mov    DWORD PTR [esp+0xc],edx
  45623c:	mov    eax,DWORD PTR [esp+0x28]
  456240:	mov    edx,DWORD PTR [esp+0x2c]
  456244:	shrd   eax,edx,0xe
  456248:	shr    edx,0xe
  45624b:	push   edx
  45624c:	push   eax
  45624d:	mov    edx,DWORD PTR [esp+0x30]
  456251:	shl    edx,0x12
  456254:	xor    eax,eax
  456256:	or     eax,DWORD PTR [esp]
  456259:	or     edx,DWORD PTR [esp+0x4]
  45625d:	add    esp,0x8
  456260:	push   edx
  456261:	push   eax
  456262:	mov    eax,DWORD PTR [esp+0x30]
  456266:	mov    edx,DWORD PTR [esp+0x34]
  45626a:	shrd   eax,edx,0x12
  45626e:	shr    edx,0x12
  456271:	push   edx
  456272:	push   eax
  456273:	mov    edx,DWORD PTR [esp+0x38]
  456277:	shl    edx,0xe
  45627a:	xor    eax,eax
  45627c:	or     eax,DWORD PTR [esp]
  45627f:	or     edx,DWORD PTR [esp+0x4]
  456283:	add    esp,0x8
  456286:	xor    eax,DWORD PTR [esp]
  456289:	xor    edx,DWORD PTR [esp+0x4]
  45628d:	add    esp,0x8
  456290:	push   edx
  456291:	push   eax
  456292:	mov    eax,DWORD PTR [esp+0x34]
  456296:	shr    eax,0x9
  456299:	xor    edx,edx
  45629b:	push   edx
  45629c:	push   eax
  45629d:	mov    eax,DWORD PTR [esp+0x38]
  4562a1:	mov    edx,DWORD PTR [esp+0x3c]
  4562a5:	shld   edx,eax,0x17
  4562a9:	shl    eax,0x17
  4562ac:	or     eax,DWORD PTR [esp]
  4562af:	or     edx,DWORD PTR [esp+0x4]
  4562b3:	add    esp,0x8
  4562b6:	xor    eax,DWORD PTR [esp]
  4562b9:	xor    edx,DWORD PTR [esp+0x4]
  4562bd:	add    esp,0x8
  4562c0:	add    eax,DWORD PTR [esp]
  4562c3:	adc    edx,DWORD PTR [esp+0x4]
  4562c7:	push   edx
  4562c8:	push   eax
  4562c9:	mov    eax,DWORD PTR [esp+0x30]
  4562cd:	mov    edx,DWORD PTR [esp+0x34]
  4562d1:	and    eax,DWORD PTR [esp+0x38]
  4562d5:	and    edx,DWORD PTR [esp+0x3c]
  4562d9:	push   edx
  4562da:	push   eax
  4562db:	mov    eax,DWORD PTR [esp+0x38]
  4562df:	mov    edx,DWORD PTR [esp+0x3c]
  4562e3:	not    eax
  4562e5:	not    edx
  4562e7:	and    eax,DWORD PTR [esp+0x48]
  4562eb:	and    edx,DWORD PTR [esp+0x4c]
  4562ef:	xor    eax,DWORD PTR [esp]
  4562f2:	xor    edx,DWORD PTR [esp+0x4]
  4562f6:	add    esp,0x8
  4562f9:	add    eax,DWORD PTR [esp]
  4562fc:	adc    edx,DWORD PTR [esp+0x4]
  456300:	add    esp,0x8
  456303:	add    eax,0x831153b5
  456308:	adc    edx,0x76f988da
  45630e:	add    eax,DWORD PTR [esp+0x108]
  456315:	adc    edx,DWORD PTR [esp+0x10c]
  45631c:	mov    DWORD PTR [esp+0x40],eax
  456320:	mov    DWORD PTR [esp+0x44],edx
  456324:	mov    eax,DWORD PTR [esp+0x8]
  456328:	mov    edx,DWORD PTR [esp+0xc]
  45632c:	shrd   eax,edx,0x1c
  456330:	shr    edx,0x1c
  456333:	push   edx
  456334:	push   eax
  456335:	mov    edx,DWORD PTR [esp+0x10]
  456339:	shl    edx,0x4
  45633c:	xor    eax,eax
  45633e:	or     eax,DWORD PTR [esp]
  456341:	or     edx,DWORD PTR [esp+0x4]
  456345:	add    esp,0x8
  456348:	push   edx
  456349:	push   eax
  45634a:	mov    eax,DWORD PTR [esp+0x14]
  45634e:	shr    eax,0x2
  456351:	xor    edx,edx
  456353:	push   edx
  456354:	push   eax
  456355:	mov    eax,DWORD PTR [esp+0x18]
  456359:	mov    edx,DWORD PTR [esp+0x1c]
  45635d:	shld   edx,eax,0x1e
  456361:	shl    eax,0x1e
  456364:	or     eax,DWORD PTR [esp]
  456367:	or     edx,DWORD PTR [esp+0x4]
  45636b:	add    esp,0x8
  45636e:	xor    eax,DWORD PTR [esp]
  456371:	xor    edx,DWORD PTR [esp+0x4]
  456375:	add    esp,0x8
  456378:	push   edx
  456379:	push   eax
  45637a:	mov    eax,DWORD PTR [esp+0x14]
  45637e:	shr    eax,0x7
  456381:	xor    edx,edx
  456383:	push   edx
  456384:	push   eax
  456385:	mov    eax,DWORD PTR [esp+0x18]
  456389:	mov    edx,DWORD PTR [esp+0x1c]
  45638d:	shld   edx,eax,0x19
  456391:	shl    eax,0x19
  456394:	or     eax,DWORD PTR [esp]
  456397:	or     edx,DWORD PTR [esp+0x4]
  45639b:	add    esp,0x8
  45639e:	xor    eax,DWORD PTR [esp]
  4563a1:	xor    edx,DWORD PTR [esp+0x4]
  4563a5:	add    esp,0x8
  4563a8:	push   edx
  4563a9:	push   eax
  4563aa:	mov    eax,DWORD PTR [esp+0x10]
  4563ae:	mov    edx,DWORD PTR [esp+0x14]
  4563b2:	and    eax,DWORD PTR [esp+0x18]
  4563b6:	and    edx,DWORD PTR [esp+0x1c]
  4563ba:	push   edx
  4563bb:	push   eax
  4563bc:	mov    eax,DWORD PTR [esp+0x18]
  4563c0:	mov    edx,DWORD PTR [esp+0x1c]
  4563c4:	and    eax,DWORD PTR [esp+0x28]
  4563c8:	and    edx,DWORD PTR [esp+0x2c]
  4563cc:	xor    eax,DWORD PTR [esp]
  4563cf:	xor    edx,DWORD PTR [esp+0x4]
  4563d3:	add    esp,0x8
  4563d6:	push   edx
  4563d7:	push   eax
  4563d8:	mov    eax,DWORD PTR [esp+0x20]
  4563dc:	mov    edx,DWORD PTR [esp+0x24]
  4563e0:	and    eax,DWORD PTR [esp+0x28]
  4563e4:	and    edx,DWORD PTR [esp+0x2c]
  4563e8:	xor    eax,DWORD PTR [esp]
  4563eb:	xor    edx,DWORD PTR [esp+0x4]
  4563ef:	add    esp,0x8
  4563f2:	add    eax,DWORD PTR [esp]
  4563f5:	adc    edx,DWORD PTR [esp+0x4]
  4563f9:	add    esp,0x8
  4563fc:	mov    DWORD PTR [esp+0x48],eax
  456400:	mov    DWORD PTR [esp+0x4c],edx
  456404:	mov    eax,DWORD PTR [esp+0x20]
  456408:	mov    edx,DWORD PTR [esp+0x24]
  45640c:	add    eax,DWORD PTR [esp+0x40]
  456410:	adc    edx,DWORD PTR [esp+0x44]
  456414:	mov    DWORD PTR [esp+0x20],eax
  456418:	mov    DWORD PTR [esp+0x24],edx
  45641c:	mov    eax,DWORD PTR [esp+0x40]
  456420:	mov    edx,DWORD PTR [esp+0x44]
  456424:	add    eax,DWORD PTR [esp+0x48]
  456428:	adc    edx,DWORD PTR [esp+0x4c]
  45642c:	mov    DWORD PTR [esp],eax
  45642f:	mov    DWORD PTR [esp+0x4],edx
  456433:	mov    eax,DWORD PTR [esp+0x20]
  456437:	mov    edx,DWORD PTR [esp+0x24]
  45643b:	shrd   eax,edx,0xe
  45643f:	shr    edx,0xe
  456442:	push   edx
  456443:	push   eax
  456444:	mov    edx,DWORD PTR [esp+0x28]
  456448:	shl    edx,0x12
  45644b:	xor    eax,eax
  45644d:	or     eax,DWORD PTR [esp]
  456450:	or     edx,DWORD PTR [esp+0x4]
  456454:	add    esp,0x8
  456457:	push   edx
  456458:	push   eax
  456459:	mov    eax,DWORD PTR [esp+0x28]
  45645d:	mov    edx,DWORD PTR [esp+0x2c]
  456461:	shrd   eax,edx,0x12
  456465:	shr    edx,0x12
  456468:	push   edx
  456469:	push   eax
  45646a:	mov    edx,DWORD PTR [esp+0x30]
  45646e:	shl    edx,0xe
  456471:	xor    eax,eax
  456473:	or     eax,DWORD PTR [esp]
  456476:	or     edx,DWORD PTR [esp+0x4]
  45647a:	add    esp,0x8
  45647d:	xor    eax,DWORD PTR [esp]
  456480:	xor    edx,DWORD PTR [esp+0x4]
  456484:	add    esp,0x8
  456487:	push   edx
  456488:	push   eax
  456489:	mov    eax,DWORD PTR [esp+0x2c]
  45648d:	shr    eax,0x9
  456490:	xor    edx,edx
  456492:	push   edx
  456493:	push   eax
  456494:	mov    eax,DWORD PTR [esp+0x30]
  456498:	mov    edx,DWORD PTR [esp+0x34]
  45649c:	shld   edx,eax,0x17
  4564a0:	shl    eax,0x17
  4564a3:	or     eax,DWORD PTR [esp]
  4564a6:	or     edx,DWORD PTR [esp+0x4]
  4564aa:	add    esp,0x8
  4564ad:	xor    eax,DWORD PTR [esp]
  4564b0:	xor    edx,DWORD PTR [esp+0x4]
  4564b4:	add    esp,0x8
  4564b7:	add    eax,DWORD PTR [esp+0x38]
  4564bb:	adc    edx,DWORD PTR [esp+0x3c]
  4564bf:	push   edx
  4564c0:	push   eax
  4564c1:	mov    eax,DWORD PTR [esp+0x28]
  4564c5:	mov    edx,DWORD PTR [esp+0x2c]
  4564c9:	and    eax,DWORD PTR [esp+0x30]
  4564cd:	and    edx,DWORD PTR [esp+0x34]
  4564d1:	push   edx
  4564d2:	push   eax
  4564d3:	mov    eax,DWORD PTR [esp+0x30]
  4564d7:	mov    edx,DWORD PTR [esp+0x34]
  4564db:	not    eax
  4564dd:	not    edx
  4564df:	and    eax,DWORD PTR [esp+0x40]
  4564e3:	and    edx,DWORD PTR [esp+0x44]
  4564e7:	xor    eax,DWORD PTR [esp]
  4564ea:	xor    edx,DWORD PTR [esp+0x4]
  4564ee:	add    esp,0x8
  4564f1:	add    eax,DWORD PTR [esp]
  4564f4:	adc    edx,DWORD PTR [esp+0x4]
  4564f8:	add    esp,0x8
  4564fb:	add    eax,0xee66dfab
  456500:	adc    edx,0x983e5152
  456506:	add    eax,DWORD PTR [esp+0x110]
  45650d:	adc    edx,DWORD PTR [esp+0x114]
  456514:	mov    DWORD PTR [esp+0x40],eax
  456518:	mov    DWORD PTR [esp+0x44],edx
  45651c:	mov    eax,DWORD PTR [esp]
  45651f:	mov    edx,DWORD PTR [esp+0x4]
  456523:	shrd   eax,edx,0x1c
  456527:	shr    edx,0x1c
  45652a:	push   edx
  45652b:	push   eax
  45652c:	mov    edx,DWORD PTR [esp+0x8]
  456530:	shl    edx,0x4
  456533:	xor    eax,eax
  456535:	or     eax,DWORD PTR [esp]
  456538:	or     edx,DWORD PTR [esp+0x4]
  45653c:	add    esp,0x8
  45653f:	push   edx
  456540:	push   eax
  456541:	mov    eax,DWORD PTR [esp+0xc]
  456545:	shr    eax,0x2
  456548:	xor    edx,edx
  45654a:	push   edx
  45654b:	push   eax
  45654c:	mov    eax,DWORD PTR [esp+0x10]
  456550:	mov    edx,DWORD PTR [esp+0x14]
  456554:	shld   edx,eax,0x1e
  456558:	shl    eax,0x1e
  45655b:	or     eax,DWORD PTR [esp]
  45655e:	or     edx,DWORD PTR [esp+0x4]
  456562:	add    esp,0x8
  456565:	xor    eax,DWORD PTR [esp]
  456568:	xor    edx,DWORD PTR [esp+0x4]
  45656c:	add    esp,0x8
  45656f:	push   edx
  456570:	push   eax
  456571:	mov    eax,DWORD PTR [esp+0xc]
  456575:	shr    eax,0x7
  456578:	xor    edx,edx
  45657a:	push   edx
  45657b:	push   eax
  45657c:	mov    eax,DWORD PTR [esp+0x10]
  456580:	mov    edx,DWORD PTR [esp+0x14]
  456584:	shld   edx,eax,0x19
  456588:	shl    eax,0x19
  45658b:	or     eax,DWORD PTR [esp]
  45658e:	or     edx,DWORD PTR [esp+0x4]
  456592:	add    esp,0x8
  456595:	xor    eax,DWORD PTR [esp]
  456598:	xor    edx,DWORD PTR [esp+0x4]
  45659c:	add    esp,0x8
  45659f:	push   edx
  4565a0:	push   eax
  4565a1:	mov    eax,DWORD PTR [esp+0x8]
  4565a5:	mov    edx,DWORD PTR [esp+0xc]
  4565a9:	and    eax,DWORD PTR [esp+0x10]
  4565ad:	and    edx,DWORD PTR [esp+0x14]
  4565b1:	push   edx
  4565b2:	push   eax
  4565b3:	mov    eax,DWORD PTR [esp+0x10]
  4565b7:	mov    edx,DWORD PTR [esp+0x14]
  4565bb:	and    eax,DWORD PTR [esp+0x20]
  4565bf:	and    edx,DWORD PTR [esp+0x24]
  4565c3:	xor    eax,DWORD PTR [esp]
  4565c6:	xor    edx,DWORD PTR [esp+0x4]
  4565ca:	add    esp,0x8
  4565cd:	push   edx
  4565ce:	push   eax
  4565cf:	mov    eax,DWORD PTR [esp+0x18]
  4565d3:	mov    edx,DWORD PTR [esp+0x1c]
  4565d7:	and    eax,DWORD PTR [esp+0x20]
  4565db:	and    edx,DWORD PTR [esp+0x24]
  4565df:	xor    eax,DWORD PTR [esp]
  4565e2:	xor    edx,DWORD PTR [esp+0x4]
  4565e6:	add    esp,0x8
  4565e9:	add    eax,DWORD PTR [esp]
  4565ec:	adc    edx,DWORD PTR [esp+0x4]
  4565f0:	add    esp,0x8
  4565f3:	mov    DWORD PTR [esp+0x48],eax
  4565f7:	mov    DWORD PTR [esp+0x4c],edx
  4565fb:	mov    eax,DWORD PTR [esp+0x18]
  4565ff:	mov    edx,DWORD PTR [esp+0x1c]
  456603:	add    eax,DWORD PTR [esp+0x40]
  456607:	adc    edx,DWORD PTR [esp+0x44]
  45660b:	mov    DWORD PTR [esp+0x18],eax
  45660f:	mov    DWORD PTR [esp+0x1c],edx
  456613:	mov    eax,DWORD PTR [esp+0x40]
  456617:	mov    edx,DWORD PTR [esp+0x44]
  45661b:	add    eax,DWORD PTR [esp+0x48]
  45661f:	adc    edx,DWORD PTR [esp+0x4c]
  456623:	mov    DWORD PTR [esp+0x38],eax
  456627:	mov    DWORD PTR [esp+0x3c],edx
  45662b:	mov    eax,DWORD PTR [esp+0x18]
  45662f:	mov    edx,DWORD PTR [esp+0x1c]
  456633:	shrd   eax,edx,0xe
  456637:	shr    edx,0xe
  45663a:	push   edx
  45663b:	push   eax
  45663c:	mov    edx,DWORD PTR [esp+0x20]
  456640:	shl    edx,0x12
  456643:	xor    eax,eax
  456645:	or     eax,DWORD PTR [esp]
  456648:	or     edx,DWORD PTR [esp+0x4]
  45664c:	add    esp,0x8
  45664f:	push   edx
  456650:	push   eax
  456651:	mov    eax,DWORD PTR [esp+0x20]
  456655:	mov    edx,DWORD PTR [esp+0x24]
  456659:	shrd   eax,edx,0x12
  45665d:	shr    edx,0x12
  456660:	push   edx
  456661:	push   eax
  456662:	mov    edx,DWORD PTR [esp+0x28]
  456666:	shl    edx,0xe
  456669:	xor    eax,eax
  45666b:	or     eax,DWORD PTR [esp]
  45666e:	or     edx,DWORD PTR [esp+0x4]
  456672:	add    esp,0x8
  456675:	xor    eax,DWORD PTR [esp]
  456678:	xor    edx,DWORD PTR [esp+0x4]
  45667c:	add    esp,0x8
  45667f:	push   edx
  456680:	push   eax
  456681:	mov    eax,DWORD PTR [esp+0x24]
  456685:	shr    eax,0x9
  456688:	xor    edx,edx
  45668a:	push   edx
  45668b:	push   eax
  45668c:	mov    eax,DWORD PTR [esp+0x28]
  456690:	mov    edx,DWORD PTR [esp+0x2c]
  456694:	shld   edx,eax,0x17
  456698:	shl    eax,0x17
  45669b:	or     eax,DWORD PTR [esp]
  45669e:	or     edx,DWORD PTR [esp+0x4]
  4566a2:	add    esp,0x8
  4566a5:	xor    eax,DWORD PTR [esp]
  4566a8:	xor    edx,DWORD PTR [esp+0x4]
  4566ac:	add    esp,0x8
  4566af:	add    eax,DWORD PTR [esp+0x30]
  4566b3:	adc    edx,DWORD PTR [esp+0x34]
  4566b7:	push   edx
  4566b8:	push   eax
  4566b9:	mov    eax,DWORD PTR [esp+0x20]
  4566bd:	mov    edx,DWORD PTR [esp+0x24]
  4566c1:	and    eax,DWORD PTR [esp+0x28]
  4566c5:	and    edx,DWORD PTR [esp+0x2c]
  4566c9:	push   edx
  4566ca:	push   eax
  4566cb:	mov    eax,DWORD PTR [esp+0x28]
  4566cf:	mov    edx,DWORD PTR [esp+0x2c]
  4566d3:	not    eax
  4566d5:	not    edx
  4566d7:	and    eax,DWORD PTR [esp+0x38]
  4566db:	and    edx,DWORD PTR [esp+0x3c]
  4566df:	xor    eax,DWORD PTR [esp]
  4566e2:	xor    edx,DWORD PTR [esp+0x4]
  4566e6:	add    esp,0x8
  4566e9:	add    eax,DWORD PTR [esp]
  4566ec:	adc    edx,DWORD PTR [esp+0x4]
  4566f0:	add    esp,0x8
  4566f3:	add    eax,0x2db43210
  4566f8:	adc    edx,0xa831c66d
  4566fe:	add    eax,DWORD PTR [esp+0x118]
  456705:	adc    edx,DWORD PTR [esp+0x11c]
  45670c:	mov    DWORD PTR [esp+0x40],eax
  456710:	mov    DWORD PTR [esp+0x44],edx
  456714:	mov    eax,DWORD PTR [esp+0x38]
  456718:	mov    edx,DWORD PTR [esp+0x3c]
  45671c:	shrd   eax,edx,0x1c
  456720:	shr    edx,0x1c
  456723:	push   edx
  456724:	push   eax
  456725:	mov    edx,DWORD PTR [esp+0x40]
  456729:	shl    edx,0x4
  45672c:	xor    eax,eax
  45672e:	or     eax,DWORD PTR [esp]
  456731:	or     edx,DWORD PTR [esp+0x4]
  456735:	add    esp,0x8
  456738:	push   edx
  456739:	push   eax
  45673a:	mov    eax,DWORD PTR [esp+0x44]
  45673e:	shr    eax,0x2
  456741:	xor    edx,edx
  456743:	push   edx
  456744:	push   eax
  456745:	mov    eax,DWORD PTR [esp+0x48]
  456749:	mov    edx,DWORD PTR [esp+0x4c]
  45674d:	shld   edx,eax,0x1e
  456751:	shl    eax,0x1e
  456754:	or     eax,DWORD PTR [esp]
  456757:	or     edx,DWORD PTR [esp+0x4]
  45675b:	add    esp,0x8
  45675e:	xor    eax,DWORD PTR [esp]
  456761:	xor    edx,DWORD PTR [esp+0x4]
  456765:	add    esp,0x8
  456768:	push   edx
  456769:	push   eax
  45676a:	mov    eax,DWORD PTR [esp+0x44]
  45676e:	shr    eax,0x7
  456771:	xor    edx,edx
  456773:	push   edx
  456774:	push   eax
  456775:	mov    eax,DWORD PTR [esp+0x48]
  456779:	mov    edx,DWORD PTR [esp+0x4c]
  45677d:	shld   edx,eax,0x19
  456781:	shl    eax,0x19
  456784:	or     eax,DWORD PTR [esp]
  456787:	or     edx,DWORD PTR [esp+0x4]
  45678b:	add    esp,0x8
  45678e:	xor    eax,DWORD PTR [esp]
  456791:	xor    edx,DWORD PTR [esp+0x4]
  456795:	add    esp,0x8
  456798:	push   edx
  456799:	push   eax
  45679a:	mov    eax,DWORD PTR [esp+0x40]
  45679e:	mov    edx,DWORD PTR [esp+0x44]
  4567a2:	and    eax,DWORD PTR [esp+0x8]
  4567a6:	and    edx,DWORD PTR [esp+0xc]
  4567aa:	push   edx
  4567ab:	push   eax
  4567ac:	mov    eax,DWORD PTR [esp+0x48]
  4567b0:	mov    edx,DWORD PTR [esp+0x4c]
  4567b4:	and    eax,DWORD PTR [esp+0x18]
  4567b8:	and    edx,DWORD PTR [esp+0x1c]
  4567bc:	xor    eax,DWORD PTR [esp]
  4567bf:	xor    edx,DWORD PTR [esp+0x4]
  4567c3:	add    esp,0x8
  4567c6:	push   edx
  4567c7:	push   eax
  4567c8:	mov    eax,DWORD PTR [esp+0x10]
  4567cc:	mov    edx,DWORD PTR [esp+0x14]
  4567d0:	and    eax,DWORD PTR [esp+0x18]
  4567d4:	and    edx,DWORD PTR [esp+0x1c]
  4567d8:	xor    eax,DWORD PTR [esp]
  4567db:	xor    edx,DWORD PTR [esp+0x4]
  4567df:	add    esp,0x8
  4567e2:	add    eax,DWORD PTR [esp]
  4567e5:	adc    edx,DWORD PTR [esp+0x4]
  4567e9:	add    esp,0x8
  4567ec:	mov    DWORD PTR [esp+0x48],eax
  4567f0:	mov    DWORD PTR [esp+0x4c],edx
  4567f4:	mov    eax,DWORD PTR [esp+0x10]
  4567f8:	mov    edx,DWORD PTR [esp+0x14]
  4567fc:	add    eax,DWORD PTR [esp+0x40]
  456800:	adc    edx,DWORD PTR [esp+0x44]
  456804:	mov    DWORD PTR [esp+0x10],eax
  456808:	mov    DWORD PTR [esp+0x14],edx
  45680c:	mov    eax,DWORD PTR [esp+0x40]
  456810:	mov    edx,DWORD PTR [esp+0x44]
  456814:	add    eax,DWORD PTR [esp+0x48]
  456818:	adc    edx,DWORD PTR [esp+0x4c]
  45681c:	mov    DWORD PTR [esp+0x30],eax
  456820:	mov    DWORD PTR [esp+0x34],edx
  456824:	mov    eax,DWORD PTR [esp+0x10]
  456828:	mov    edx,DWORD PTR [esp+0x14]
  45682c:	shrd   eax,edx,0xe
  456830:	shr    edx,0xe
  456833:	push   edx
  456834:	push   eax
  456835:	mov    edx,DWORD PTR [esp+0x18]
  456839:	shl    edx,0x12
  45683c:	xor    eax,eax
  45683e:	or     eax,DWORD PTR [esp]
  456841:	or     edx,DWORD PTR [esp+0x4]
  456845:	add    esp,0x8
  456848:	push   edx
  456849:	push   eax
  45684a:	mov    eax,DWORD PTR [esp+0x18]
  45684e:	mov    edx,DWORD PTR [esp+0x1c]
  456852:	shrd   eax,edx,0x12
  456856:	shr    edx,0x12
  456859:	push   edx
  45685a:	push   eax
  45685b:	mov    edx,DWORD PTR [esp+0x20]
  45685f:	shl    edx,0xe
  456862:	xor    eax,eax
  456864:	or     eax,DWORD PTR [esp]
  456867:	or     edx,DWORD PTR [esp+0x4]
  45686b:	add    esp,0x8
  45686e:	xor    eax,DWORD PTR [esp]
  456871:	xor    edx,DWORD PTR [esp+0x4]
  456875:	add    esp,0x8
  456878:	push   edx
  456879:	push   eax
  45687a:	mov    eax,DWORD PTR [esp+0x1c]
  45687e:	shr    eax,0x9
  456881:	xor    edx,edx
  456883:	push   edx
  456884:	push   eax
  456885:	mov    eax,DWORD PTR [esp+0x20]
  456889:	mov    edx,DWORD PTR [esp+0x24]
  45688d:	shld   edx,eax,0x17
  456891:	shl    eax,0x17
  456894:	or     eax,DWORD PTR [esp]
  456897:	or     edx,DWORD PTR [esp+0x4]
  45689b:	add    esp,0x8
  45689e:	xor    eax,DWORD PTR [esp]
  4568a1:	xor    edx,DWORD PTR [esp+0x4]
  4568a5:	add    esp,0x8
  4568a8:	add    eax,DWORD PTR [esp+0x28]
  4568ac:	adc    edx,DWORD PTR [esp+0x2c]
  4568b0:	push   edx
  4568b1:	push   eax
  4568b2:	mov    eax,DWORD PTR [esp+0x18]
  4568b6:	mov    edx,DWORD PTR [esp+0x1c]
  4568ba:	and    eax,DWORD PTR [esp+0x20]
  4568be:	and    edx,DWORD PTR [esp+0x24]
  4568c2:	push   edx
  4568c3:	push   eax
  4568c4:	mov    eax,DWORD PTR [esp+0x20]
  4568c8:	mov    edx,DWORD PTR [esp+0x24]
  4568cc:	not    eax
  4568ce:	not    edx
  4568d0:	and    eax,DWORD PTR [esp+0x30]
  4568d4:	and    edx,DWORD PTR [esp+0x34]
  4568d8:	xor    eax,DWORD PTR [esp]
  4568db:	xor    edx,DWORD PTR [esp+0x4]
  4568df:	add    esp,0x8
  4568e2:	add    eax,DWORD PTR [esp]
  4568e5:	adc    edx,DWORD PTR [esp+0x4]
  4568e9:	add    esp,0x8
  4568ec:	add    eax,0x98fb213f
  4568f1:	adc    edx,0xb00327c8
  4568f7:	add    eax,DWORD PTR [esp+0x120]
  4568fe:	adc    edx,DWORD PTR [esp+0x124]
  456905:	mov    DWORD PTR [esp+0x40],eax
  456909:	mov    DWORD PTR [esp+0x44],edx
  45690d:	mov    eax,DWORD PTR [esp+0x30]
  456911:	mov    edx,DWORD PTR [esp+0x34]
  456915:	shrd   eax,edx,0x1c
  456919:	shr    edx,0x1c
  45691c:	push   edx
  45691d:	push   eax
  45691e:	mov    edx,DWORD PTR [esp+0x38]
  456922:	shl    edx,0x4
  456925:	xor    eax,eax
  456927:	or     eax,DWORD PTR [esp]
  45692a:	or     edx,DWORD PTR [esp+0x4]
  45692e:	add    esp,0x8
  456931:	push   edx
  456932:	push   eax
  456933:	mov    eax,DWORD PTR [esp+0x3c]
  456937:	shr    eax,0x2
  45693a:	xor    edx,edx
  45693c:	push   edx
  45693d:	push   eax
  45693e:	mov    eax,DWORD PTR [esp+0x40]
  456942:	mov    edx,DWORD PTR [esp+0x44]
  456946:	shld   edx,eax,0x1e
  45694a:	shl    eax,0x1e
  45694d:	or     eax,DWORD PTR [esp]
  456950:	or     edx,DWORD PTR [esp+0x4]
  456954:	add    esp,0x8
  456957:	xor    eax,DWORD PTR [esp]
  45695a:	xor    edx,DWORD PTR [esp+0x4]
  45695e:	add    esp,0x8
  456961:	push   edx
  456962:	push   eax
  456963:	mov    eax,DWORD PTR [esp+0x3c]
  456967:	shr    eax,0x7
  45696a:	xor    edx,edx
  45696c:	push   edx
  45696d:	push   eax
  45696e:	mov    eax,DWORD PTR [esp+0x40]
  456972:	mov    edx,DWORD PTR [esp+0x44]
  456976:	shld   edx,eax,0x19
  45697a:	shl    eax,0x19
  45697d:	or     eax,DWORD PTR [esp]
  456980:	or     edx,DWORD PTR [esp+0x4]
  456984:	add    esp,0x8
  456987:	xor    eax,DWORD PTR [esp]
  45698a:	xor    edx,DWORD PTR [esp+0x4]
  45698e:	add    esp,0x8
  456991:	push   edx
  456992:	push   eax
  456993:	mov    eax,DWORD PTR [esp+0x38]
  456997:	mov    edx,DWORD PTR [esp+0x3c]
  45699b:	and    eax,DWORD PTR [esp+0x40]
  45699f:	and    edx,DWORD PTR [esp+0x44]
  4569a3:	push   edx
  4569a4:	push   eax
  4569a5:	mov    eax,DWORD PTR [esp+0x40]
  4569a9:	mov    edx,DWORD PTR [esp+0x44]
  4569ad:	and    eax,DWORD PTR [esp+0x10]
  4569b1:	and    edx,DWORD PTR [esp+0x14]
  4569b5:	xor    eax,DWORD PTR [esp]
  4569b8:	xor    edx,DWORD PTR [esp+0x4]
  4569bc:	add    esp,0x8
  4569bf:	push   edx
  4569c0:	push   eax
  4569c1:	mov    eax,DWORD PTR [esp+0x48]
  4569c5:	mov    edx,DWORD PTR [esp+0x4c]
  4569c9:	and    eax,DWORD PTR [esp+0x10]
  4569cd:	and    edx,DWORD PTR [esp+0x14]
  4569d1:	xor    eax,DWORD PTR [esp]
  4569d4:	xor    edx,DWORD PTR [esp+0x4]
  4569d8:	add    esp,0x8
  4569db:	add    eax,DWORD PTR [esp]
  4569de:	adc    edx,DWORD PTR [esp+0x4]
  4569e2:	add    esp,0x8
  4569e5:	mov    DWORD PTR [esp+0x48],eax
  4569e9:	mov    DWORD PTR [esp+0x4c],edx
  4569ed:	mov    eax,DWORD PTR [esp+0x8]
  4569f1:	mov    edx,DWORD PTR [esp+0xc]
  4569f5:	add    eax,DWORD PTR [esp+0x40]
  4569f9:	adc    edx,DWORD PTR [esp+0x44]
  4569fd:	mov    DWORD PTR [esp+0x8],eax
  456a01:	mov    DWORD PTR [esp+0xc],edx
  456a05:	mov    eax,DWORD PTR [esp+0x40]
  456a09:	mov    edx,DWORD PTR [esp+0x44]
  456a0d:	add    eax,DWORD PTR [esp+0x48]
  456a11:	adc    edx,DWORD PTR [esp+0x4c]
  456a15:	mov    DWORD PTR [esp+0x28],eax
  456a19:	mov    DWORD PTR [esp+0x2c],edx
  456a1d:	mov    eax,DWORD PTR [esp+0x8]
  456a21:	mov    edx,DWORD PTR [esp+0xc]
  456a25:	shrd   eax,edx,0xe
  456a29:	shr    edx,0xe
  456a2c:	push   edx
  456a2d:	push   eax
  456a2e:	mov    edx,DWORD PTR [esp+0x10]
  456a32:	shl    edx,0x12
  456a35:	xor    eax,eax
  456a37:	or     eax,DWORD PTR [esp]
  456a3a:	or     edx,DWORD PTR [esp+0x4]
  456a3e:	add    esp,0x8
  456a41:	push   edx
  456a42:	push   eax
  456a43:	mov    eax,DWORD PTR [esp+0x10]
  456a47:	mov    edx,DWORD PTR [esp+0x14]
  456a4b:	shrd   eax,edx,0x12
  456a4f:	shr    edx,0x12
  456a52:	push   edx
  456a53:	push   eax
  456a54:	mov    edx,DWORD PTR [esp+0x18]
  456a58:	shl    edx,0xe
  456a5b:	xor    eax,eax
  456a5d:	or     eax,DWORD PTR [esp]
  456a60:	or     edx,DWORD PTR [esp+0x4]
  456a64:	add    esp,0x8
  456a67:	xor    eax,DWORD PTR [esp]
  456a6a:	xor    edx,DWORD PTR [esp+0x4]
  456a6e:	add    esp,0x8
  456a71:	push   edx
  456a72:	push   eax
  456a73:	mov    eax,DWORD PTR [esp+0x14]
  456a77:	shr    eax,0x9
  456a7a:	xor    edx,edx
  456a7c:	push   edx
  456a7d:	push   eax
  456a7e:	mov    eax,DWORD PTR [esp+0x18]
  456a82:	mov    edx,DWORD PTR [esp+0x1c]
  456a86:	shld   edx,eax,0x17
  456a8a:	shl    eax,0x17
  456a8d:	or     eax,DWORD PTR [esp]
  456a90:	or     edx,DWORD PTR [esp+0x4]
  456a94:	add    esp,0x8
  456a97:	xor    eax,DWORD PTR [esp]
  456a9a:	xor    edx,DWORD PTR [esp+0x4]
  456a9e:	add    esp,0x8
  456aa1:	add    eax,DWORD PTR [esp+0x20]
  456aa5:	adc    edx,DWORD PTR [esp+0x24]
  456aa9:	push   edx
  456aaa:	push   eax
  456aab:	mov    eax,DWORD PTR [esp+0x10]
  456aaf:	mov    edx,DWORD PTR [esp+0x14]
  456ab3:	and    eax,DWORD PTR [esp+0x18]
  456ab7:	and    edx,DWORD PTR [esp+0x1c]
  456abb:	push   edx
  456abc:	push   eax
  456abd:	mov    eax,DWORD PTR [esp+0x18]
  456ac1:	mov    edx,DWORD PTR [esp+0x1c]
  456ac5:	not    eax
  456ac7:	not    edx
  456ac9:	and    eax,DWORD PTR [esp+0x28]
  456acd:	and    edx,DWORD PTR [esp+0x2c]
  456ad1:	xor    eax,DWORD PTR [esp]
  456ad4:	xor    edx,DWORD PTR [esp+0x4]
  456ad8:	add    esp,0x8
  456adb:	add    eax,DWORD PTR [esp]
  456ade:	adc    edx,DWORD PTR [esp+0x4]
  456ae2:	add    esp,0x8
  456ae5:	add    eax,0xbeef0ee4
  456aea:	adc    edx,0xbf597fc7
  456af0:	add    eax,DWORD PTR [esp+0x128]
  456af7:	adc    edx,DWORD PTR [esp+0x12c]
  456afe:	mov    DWORD PTR [esp+0x40],eax
  456b02:	mov    DWORD PTR [esp+0x44],edx
  456b06:	mov    eax,DWORD PTR [esp+0x28]
  456b0a:	mov    edx,DWORD PTR [esp+0x2c]
  456b0e:	shrd   eax,edx,0x1c
  456b12:	shr    edx,0x1c
  456b15:	push   edx
  456b16:	push   eax
  456b17:	mov    edx,DWORD PTR [esp+0x30]
  456b1b:	shl    edx,0x4
  456b1e:	xor    eax,eax
  456b20:	or     eax,DWORD PTR [esp]
  456b23:	or     edx,DWORD PTR [esp+0x4]
  456b27:	add    esp,0x8
  456b2a:	push   edx
  456b2b:	push   eax
  456b2c:	mov    eax,DWORD PTR [esp+0x34]
  456b30:	shr    eax,0x2
  456b33:	xor    edx,edx
  456b35:	push   edx
  456b36:	push   eax
  456b37:	mov    eax,DWORD PTR [esp+0x38]
  456b3b:	mov    edx,DWORD PTR [esp+0x3c]
  456b3f:	shld   edx,eax,0x1e
  456b43:	shl    eax,0x1e
  456b46:	or     eax,DWORD PTR [esp]
  456b49:	or     edx,DWORD PTR [esp+0x4]
  456b4d:	add    esp,0x8
  456b50:	xor    eax,DWORD PTR [esp]
  456b53:	xor    edx,DWORD PTR [esp+0x4]
  456b57:	add    esp,0x8
  456b5a:	push   edx
  456b5b:	push   eax
  456b5c:	mov    eax,DWORD PTR [esp+0x34]
  456b60:	shr    eax,0x7
  456b63:	xor    edx,edx
  456b65:	push   edx
  456b66:	push   eax
  456b67:	mov    eax,DWORD PTR [esp+0x38]
  456b6b:	mov    edx,DWORD PTR [esp+0x3c]
  456b6f:	shld   edx,eax,0x19
  456b73:	shl    eax,0x19
  456b76:	or     eax,DWORD PTR [esp]
  456b79:	or     edx,DWORD PTR [esp+0x4]
  456b7d:	add    esp,0x8
  456b80:	xor    eax,DWORD PTR [esp]
  456b83:	xor    edx,DWORD PTR [esp+0x4]
  456b87:	add    esp,0x8
  456b8a:	push   edx
  456b8b:	push   eax
  456b8c:	mov    eax,DWORD PTR [esp+0x30]
  456b90:	mov    edx,DWORD PTR [esp+0x34]
  456b94:	and    eax,DWORD PTR [esp+0x38]
  456b98:	and    edx,DWORD PTR [esp+0x3c]
  456b9c:	push   edx
  456b9d:	push   eax
  456b9e:	mov    eax,DWORD PTR [esp+0x38]
  456ba2:	mov    edx,DWORD PTR [esp+0x3c]
  456ba6:	and    eax,DWORD PTR [esp+0x48]
  456baa:	and    edx,DWORD PTR [esp+0x4c]
  456bae:	xor    eax,DWORD PTR [esp]
  456bb1:	xor    edx,DWORD PTR [esp+0x4]
  456bb5:	add    esp,0x8
  456bb8:	push   edx
  456bb9:	push   eax
  456bba:	mov    eax,DWORD PTR [esp+0x40]
  456bbe:	mov    edx,DWORD PTR [esp+0x44]
  456bc2:	and    eax,DWORD PTR [esp+0x48]
  456bc6:	and    edx,DWORD PTR [esp+0x4c]
  456bca:	xor    eax,DWORD PTR [esp]
  456bcd:	xor    edx,DWORD PTR [esp+0x4]
  456bd1:	add    esp,0x8
  456bd4:	add    eax,DWORD PTR [esp]
  456bd7:	adc    edx,DWORD PTR [esp+0x4]
  456bdb:	add    esp,0x8
  456bde:	mov    DWORD PTR [esp+0x48],eax
  456be2:	mov    DWORD PTR [esp+0x4c],edx
  456be6:	mov    eax,DWORD PTR [esp]
  456be9:	mov    edx,DWORD PTR [esp+0x4]
  456bed:	add    eax,DWORD PTR [esp+0x40]
  456bf1:	adc    edx,DWORD PTR [esp+0x44]
  456bf5:	mov    DWORD PTR [esp],eax
  456bf8:	mov    DWORD PTR [esp+0x4],edx
  456bfc:	mov    eax,DWORD PTR [esp+0x40]
  456c00:	mov    edx,DWORD PTR [esp+0x44]
  456c04:	add    eax,DWORD PTR [esp+0x48]
  456c08:	adc    edx,DWORD PTR [esp+0x4c]
  456c0c:	mov    DWORD PTR [esp+0x20],eax
  456c10:	mov    DWORD PTR [esp+0x24],edx
  456c14:	mov    eax,DWORD PTR [esp]
  456c17:	mov    edx,DWORD PTR [esp+0x4]
  456c1b:	shrd   eax,edx,0xe
  456c1f:	shr    edx,0xe
  456c22:	push   edx
  456c23:	push   eax
  456c24:	mov    edx,DWORD PTR [esp+0x8]
  456c28:	shl    edx,0x12
  456c2b:	xor    eax,eax
  456c2d:	or     eax,DWORD PTR [esp]
  456c30:	or     edx,DWORD PTR [esp+0x4]
  456c34:	add    esp,0x8
  456c37:	push   edx
  456c38:	push   eax
  456c39:	mov    eax,DWORD PTR [esp+0x8]
  456c3d:	mov    edx,DWORD PTR [esp+0xc]
  456c41:	shrd   eax,edx,0x12
  456c45:	shr    edx,0x12
  456c48:	push   edx
  456c49:	push   eax
  456c4a:	mov    edx,DWORD PTR [esp+0x10]
  456c4e:	shl    edx,0xe
  456c51:	xor    eax,eax
  456c53:	or     eax,DWORD PTR [esp]
  456c56:	or     edx,DWORD PTR [esp+0x4]
  456c5a:	add    esp,0x8
  456c5d:	xor    eax,DWORD PTR [esp]
  456c60:	xor    edx,DWORD PTR [esp+0x4]
  456c64:	add    esp,0x8
  456c67:	push   edx
  456c68:	push   eax
  456c69:	mov    eax,DWORD PTR [esp+0xc]
  456c6d:	shr    eax,0x9
  456c70:	xor    edx,edx
  456c72:	push   edx
  456c73:	push   eax
  456c74:	mov    eax,DWORD PTR [esp+0x10]
  456c78:	mov    edx,DWORD PTR [esp+0x14]
  456c7c:	shld   edx,eax,0x17
  456c80:	shl    eax,0x17
  456c83:	or     eax,DWORD PTR [esp]
  456c86:	or     edx,DWORD PTR [esp+0x4]
  456c8a:	add    esp,0x8
  456c8d:	xor    eax,DWORD PTR [esp]
  456c90:	xor    edx,DWORD PTR [esp+0x4]
  456c94:	add    esp,0x8
  456c97:	add    eax,DWORD PTR [esp+0x18]
  456c9b:	adc    edx,DWORD PTR [esp+0x1c]
  456c9f:	push   edx
  456ca0:	push   eax
  456ca1:	mov    eax,DWORD PTR [esp+0x8]
  456ca5:	mov    edx,DWORD PTR [esp+0xc]
  456ca9:	and    eax,DWORD PTR [esp+0x10]
  456cad:	and    edx,DWORD PTR [esp+0x14]
  456cb1:	push   edx
  456cb2:	push   eax
  456cb3:	mov    eax,DWORD PTR [esp+0x10]
  456cb7:	mov    edx,DWORD PTR [esp+0x14]
  456cbb:	not    eax
  456cbd:	not    edx
  456cbf:	and    eax,DWORD PTR [esp+0x20]
  456cc3:	and    edx,DWORD PTR [esp+0x24]
  456cc7:	xor    eax,DWORD PTR [esp]
  456cca:	xor    edx,DWORD PTR [esp+0x4]
  456cce:	add    esp,0x8
  456cd1:	add    eax,DWORD PTR [esp]
  456cd4:	adc    edx,DWORD PTR [esp+0x4]
  456cd8:	add    esp,0x8
  456cdb:	add    eax,0x3da88fc2
  456ce0:	adc    edx,0xc6e00bf3
  456ce6:	add    eax,DWORD PTR [esp+0x130]
  456ced:	adc    edx,DWORD PTR [esp+0x134]
  456cf4:	mov    DWORD PTR [esp+0x40],eax
  456cf8:	mov    DWORD PTR [esp+0x44],edx
  456cfc:	mov    eax,DWORD PTR [esp+0x20]
  456d00:	mov    edx,DWORD PTR [esp+0x24]
  456d04:	shrd   eax,edx,0x1c
  456d08:	shr    edx,0x1c
  456d0b:	push   edx
  456d0c:	push   eax
  456d0d:	mov    edx,DWORD PTR [esp+0x28]
  456d11:	shl    edx,0x4
  456d14:	xor    eax,eax
  456d16:	or     eax,DWORD PTR [esp]
  456d19:	or     edx,DWORD PTR [esp+0x4]
  456d1d:	add    esp,0x8
  456d20:	push   edx
  456d21:	push   eax
  456d22:	mov    eax,DWORD PTR [esp+0x2c]
  456d26:	shr    eax,0x2
  456d29:	xor    edx,edx
  456d2b:	push   edx
  456d2c:	push   eax
  456d2d:	mov    eax,DWORD PTR [esp+0x30]
  456d31:	mov    edx,DWORD PTR [esp+0x34]
  456d35:	shld   edx,eax,0x1e
  456d39:	shl    eax,0x1e
  456d3c:	or     eax,DWORD PTR [esp]
  456d3f:	or     edx,DWORD PTR [esp+0x4]
  456d43:	add    esp,0x8
  456d46:	xor    eax,DWORD PTR [esp]
  456d49:	xor    edx,DWORD PTR [esp+0x4]
  456d4d:	add    esp,0x8
  456d50:	push   edx
  456d51:	push   eax
  456d52:	mov    eax,DWORD PTR [esp+0x2c]
  456d56:	shr    eax,0x7
  456d59:	xor    edx,edx
  456d5b:	push   edx
  456d5c:	push   eax
  456d5d:	mov    eax,DWORD PTR [esp+0x30]
  456d61:	mov    edx,DWORD PTR [esp+0x34]
  456d65:	shld   edx,eax,0x19
  456d69:	shl    eax,0x19
  456d6c:	or     eax,DWORD PTR [esp]
  456d6f:	or     edx,DWORD PTR [esp+0x4]
  456d73:	add    esp,0x8
  456d76:	xor    eax,DWORD PTR [esp]
  456d79:	xor    edx,DWORD PTR [esp+0x4]
  456d7d:	add    esp,0x8
  456d80:	push   edx
  456d81:	push   eax
  456d82:	mov    eax,DWORD PTR [esp+0x28]
  456d86:	mov    edx,DWORD PTR [esp+0x2c]
  456d8a:	and    eax,DWORD PTR [esp+0x30]
  456d8e:	and    edx,DWORD PTR [esp+0x34]
  456d92:	push   edx
  456d93:	push   eax
  456d94:	mov    eax,DWORD PTR [esp+0x30]
  456d98:	mov    edx,DWORD PTR [esp+0x34]
  456d9c:	and    eax,DWORD PTR [esp+0x40]
  456da0:	and    edx,DWORD PTR [esp+0x44]
  456da4:	xor    eax,DWORD PTR [esp]
  456da7:	xor    edx,DWORD PTR [esp+0x4]
  456dab:	add    esp,0x8
  456dae:	push   edx
  456daf:	push   eax
  456db0:	mov    eax,DWORD PTR [esp+0x38]
  456db4:	mov    edx,DWORD PTR [esp+0x3c]
  456db8:	and    eax,DWORD PTR [esp+0x40]
  456dbc:	and    edx,DWORD PTR [esp+0x44]
  456dc0:	xor    eax,DWORD PTR [esp]
  456dc3:	xor    edx,DWORD PTR [esp+0x4]
  456dc7:	add    esp,0x8
  456dca:	add    eax,DWORD PTR [esp]
  456dcd:	adc    edx,DWORD PTR [esp+0x4]
  456dd1:	add    esp,0x8
  456dd4:	mov    DWORD PTR [esp+0x48],eax
  456dd8:	mov    DWORD PTR [esp+0x4c],edx
  456ddc:	mov    eax,DWORD PTR [esp+0x38]
  456de0:	mov    edx,DWORD PTR [esp+0x3c]
  456de4:	add    eax,DWORD PTR [esp+0x40]
  456de8:	adc    edx,DWORD PTR [esp+0x44]
  456dec:	mov    DWORD PTR [esp+0x38],eax
  456df0:	mov    DWORD PTR [esp+0x3c],edx
  456df4:	mov    eax,DWORD PTR [esp+0x40]
  456df8:	mov    edx,DWORD PTR [esp+0x44]
  456dfc:	add    eax,DWORD PTR [esp+0x48]
  456e00:	adc    edx,DWORD PTR [esp+0x4c]
  456e04:	mov    DWORD PTR [esp+0x18],eax
  456e08:	mov    DWORD PTR [esp+0x1c],edx
  456e0c:	mov    eax,DWORD PTR [esp+0x38]
  456e10:	mov    edx,DWORD PTR [esp+0x3c]
  456e14:	shrd   eax,edx,0xe
  456e18:	shr    edx,0xe
  456e1b:	push   edx
  456e1c:	push   eax
  456e1d:	mov    edx,DWORD PTR [esp+0x40]
  456e21:	shl    edx,0x12
  456e24:	xor    eax,eax
  456e26:	or     eax,DWORD PTR [esp]
  456e29:	or     edx,DWORD PTR [esp+0x4]
  456e2d:	add    esp,0x8
  456e30:	push   edx
  456e31:	push   eax
  456e32:	mov    eax,DWORD PTR [esp+0x40]
  456e36:	mov    edx,DWORD PTR [esp+0x44]
  456e3a:	shrd   eax,edx,0x12
  456e3e:	shr    edx,0x12
  456e41:	push   edx
  456e42:	push   eax
  456e43:	mov    edx,DWORD PTR [esp+0x48]
  456e47:	shl    edx,0xe
  456e4a:	xor    eax,eax
  456e4c:	or     eax,DWORD PTR [esp]
  456e4f:	or     edx,DWORD PTR [esp+0x4]
  456e53:	add    esp,0x8
  456e56:	xor    eax,DWORD PTR [esp]
  456e59:	xor    edx,DWORD PTR [esp+0x4]
  456e5d:	add    esp,0x8
  456e60:	push   edx
  456e61:	push   eax
  456e62:	mov    eax,DWORD PTR [esp+0x44]
  456e66:	shr    eax,0x9
  456e69:	xor    edx,edx
  456e6b:	push   edx
  456e6c:	push   eax
  456e6d:	mov    eax,DWORD PTR [esp+0x48]
  456e71:	mov    edx,DWORD PTR [esp+0x4c]
  456e75:	shld   edx,eax,0x17
  456e79:	shl    eax,0x17
  456e7c:	or     eax,DWORD PTR [esp]
  456e7f:	or     edx,DWORD PTR [esp+0x4]
  456e83:	add    esp,0x8
  456e86:	xor    eax,DWORD PTR [esp]
  456e89:	xor    edx,DWORD PTR [esp+0x4]
  456e8d:	add    esp,0x8
  456e90:	add    eax,DWORD PTR [esp+0x10]
  456e94:	adc    edx,DWORD PTR [esp+0x14]
  456e98:	push   edx
  456e99:	push   eax
  456e9a:	mov    eax,DWORD PTR [esp+0x40]
  456e9e:	mov    edx,DWORD PTR [esp+0x44]
  456ea2:	and    eax,DWORD PTR [esp+0x8]
  456ea6:	and    edx,DWORD PTR [esp+0xc]
  456eaa:	push   edx
  456eab:	push   eax
  456eac:	mov    eax,DWORD PTR [esp+0x48]
  456eb0:	mov    edx,DWORD PTR [esp+0x4c]
  456eb4:	not    eax
  456eb6:	not    edx
  456eb8:	and    eax,DWORD PTR [esp+0x18]
  456ebc:	and    edx,DWORD PTR [esp+0x1c]
  456ec0:	xor    eax,DWORD PTR [esp]
  456ec3:	xor    edx,DWORD PTR [esp+0x4]
  456ec7:	add    esp,0x8
  456eca:	add    eax,DWORD PTR [esp]
  456ecd:	adc    edx,DWORD PTR [esp+0x4]
  456ed1:	add    esp,0x8
  456ed4:	add    eax,0x930aa725
  456ed9:	adc    edx,0xd5a79147
  456edf:	add    eax,DWORD PTR [esp+0x138]
  456ee6:	adc    edx,DWORD PTR [esp+0x13c]
  456eed:	mov    DWORD PTR [esp+0x40],eax
  456ef1:	mov    DWORD PTR [esp+0x44],edx
  456ef5:	mov    eax,DWORD PTR [esp+0x18]
  456ef9:	mov    edx,DWORD PTR [esp+0x1c]
  456efd:	shrd   eax,edx,0x1c
  456f01:	shr    edx,0x1c
  456f04:	push   edx
  456f05:	push   eax
  456f06:	mov    edx,DWORD PTR [esp+0x20]
  456f0a:	shl    edx,0x4
  456f0d:	xor    eax,eax
  456f0f:	or     eax,DWORD PTR [esp]
  456f12:	or     edx,DWORD PTR [esp+0x4]
  456f16:	add    esp,0x8
  456f19:	push   edx
  456f1a:	push   eax
  456f1b:	mov    eax,DWORD PTR [esp+0x24]
  456f1f:	shr    eax,0x2
  456f22:	xor    edx,edx
  456f24:	push   edx
  456f25:	push   eax
  456f26:	mov    eax,DWORD PTR [esp+0x28]
  456f2a:	mov    edx,DWORD PTR [esp+0x2c]
  456f2e:	shld   edx,eax,0x1e
  456f32:	shl    eax,0x1e
  456f35:	or     eax,DWORD PTR [esp]
  456f38:	or     edx,DWORD PTR [esp+0x4]
  456f3c:	add    esp,0x8
  456f3f:	xor    eax,DWORD PTR [esp]
  456f42:	xor    edx,DWORD PTR [esp+0x4]
  456f46:	add    esp,0x8
  456f49:	push   edx
  456f4a:	push   eax
  456f4b:	mov    eax,DWORD PTR [esp+0x24]
  456f4f:	shr    eax,0x7
  456f52:	xor    edx,edx
  456f54:	push   edx
  456f55:	push   eax
  456f56:	mov    eax,DWORD PTR [esp+0x28]
  456f5a:	mov    edx,DWORD PTR [esp+0x2c]
  456f5e:	shld   edx,eax,0x19
  456f62:	shl    eax,0x19
  456f65:	or     eax,DWORD PTR [esp]
  456f68:	or     edx,DWORD PTR [esp+0x4]
  456f6c:	add    esp,0x8
  456f6f:	xor    eax,DWORD PTR [esp]
  456f72:	xor    edx,DWORD PTR [esp+0x4]
  456f76:	add    esp,0x8
  456f79:	push   edx
  456f7a:	push   eax
  456f7b:	mov    eax,DWORD PTR [esp+0x20]
  456f7f:	mov    edx,DWORD PTR [esp+0x24]
  456f83:	and    eax,DWORD PTR [esp+0x28]
  456f87:	and    edx,DWORD PTR [esp+0x2c]
  456f8b:	push   edx
  456f8c:	push   eax
  456f8d:	mov    eax,DWORD PTR [esp+0x28]
  456f91:	mov    edx,DWORD PTR [esp+0x2c]
  456f95:	and    eax,DWORD PTR [esp+0x38]
  456f99:	and    edx,DWORD PTR [esp+0x3c]
  456f9d:	xor    eax,DWORD PTR [esp]
  456fa0:	xor    edx,DWORD PTR [esp+0x4]
  456fa4:	add    esp,0x8
  456fa7:	push   edx
  456fa8:	push   eax
  456fa9:	mov    eax,DWORD PTR [esp+0x30]
  456fad:	mov    edx,DWORD PTR [esp+0x34]
  456fb1:	and    eax,DWORD PTR [esp+0x38]
  456fb5:	and    edx,DWORD PTR [esp+0x3c]
  456fb9:	xor    eax,DWORD PTR [esp]
  456fbc:	xor    edx,DWORD PTR [esp+0x4]
  456fc0:	add    esp,0x8
  456fc3:	add    eax,DWORD PTR [esp]
  456fc6:	adc    edx,DWORD PTR [esp+0x4]
  456fca:	add    esp,0x8
  456fcd:	mov    DWORD PTR [esp+0x48],eax
  456fd1:	mov    DWORD PTR [esp+0x4c],edx
  456fd5:	mov    eax,DWORD PTR [esp+0x30]
  456fd9:	mov    edx,DWORD PTR [esp+0x34]
  456fdd:	add    eax,DWORD PTR [esp+0x40]
  456fe1:	adc    edx,DWORD PTR [esp+0x44]
  456fe5:	mov    DWORD PTR [esp+0x30],eax
  456fe9:	mov    DWORD PTR [esp+0x34],edx
  456fed:	mov    eax,DWORD PTR [esp+0x40]
  456ff1:	mov    edx,DWORD PTR [esp+0x44]
  456ff5:	add    eax,DWORD PTR [esp+0x48]
  456ff9:	adc    edx,DWORD PTR [esp+0x4c]
  456ffd:	mov    DWORD PTR [esp+0x10],eax
  457001:	mov    DWORD PTR [esp+0x14],edx
  457005:	mov    eax,DWORD PTR [esp+0x30]
  457009:	mov    edx,DWORD PTR [esp+0x34]
  45700d:	shrd   eax,edx,0xe
  457011:	shr    edx,0xe
  457014:	push   edx
  457015:	push   eax
  457016:	mov    edx,DWORD PTR [esp+0x38]
  45701a:	shl    edx,0x12
  45701d:	xor    eax,eax
  45701f:	or     eax,DWORD PTR [esp]
  457022:	or     edx,DWORD PTR [esp+0x4]
  457026:	add    esp,0x8
  457029:	push   edx
  45702a:	push   eax
  45702b:	mov    eax,DWORD PTR [esp+0x38]
  45702f:	mov    edx,DWORD PTR [esp+0x3c]
  457033:	shrd   eax,edx,0x12
  457037:	shr    edx,0x12
  45703a:	push   edx
  45703b:	push   eax
  45703c:	mov    edx,DWORD PTR [esp+0x40]
  457040:	shl    edx,0xe
  457043:	xor    eax,eax
  457045:	or     eax,DWORD PTR [esp]
  457048:	or     edx,DWORD PTR [esp+0x4]
  45704c:	add    esp,0x8
  45704f:	xor    eax,DWORD PTR [esp]
  457052:	xor    edx,DWORD PTR [esp+0x4]
  457056:	add    esp,0x8
  457059:	push   edx
  45705a:	push   eax
  45705b:	mov    eax,DWORD PTR [esp+0x3c]
  45705f:	shr    eax,0x9
  457062:	xor    edx,edx
  457064:	push   edx
  457065:	push   eax
  457066:	mov    eax,DWORD PTR [esp+0x40]
  45706a:	mov    edx,DWORD PTR [esp+0x44]
  45706e:	shld   edx,eax,0x17
  457072:	shl    eax,0x17
  457075:	or     eax,DWORD PTR [esp]
  457078:	or     edx,DWORD PTR [esp+0x4]
  45707c:	add    esp,0x8
  45707f:	xor    eax,DWORD PTR [esp]
  457082:	xor    edx,DWORD PTR [esp+0x4]
  457086:	add    esp,0x8
  457089:	add    eax,DWORD PTR [esp+0x8]
  45708d:	adc    edx,DWORD PTR [esp+0xc]
  457091:	push   edx
  457092:	push   eax
  457093:	mov    eax,DWORD PTR [esp+0x38]
  457097:	mov    edx,DWORD PTR [esp+0x3c]
  45709b:	and    eax,DWORD PTR [esp+0x40]
  45709f:	and    edx,DWORD PTR [esp+0x44]
  4570a3:	push   edx
  4570a4:	push   eax
  4570a5:	mov    eax,DWORD PTR [esp+0x40]
  4570a9:	mov    edx,DWORD PTR [esp+0x44]
  4570ad:	not    eax
  4570af:	not    edx
  4570b1:	and    eax,DWORD PTR [esp+0x10]
  4570b5:	and    edx,DWORD PTR [esp+0x14]
  4570b9:	xor    eax,DWORD PTR [esp]
  4570bc:	xor    edx,DWORD PTR [esp+0x4]
  4570c0:	add    esp,0x8
  4570c3:	add    eax,DWORD PTR [esp]
  4570c6:	adc    edx,DWORD PTR [esp+0x4]
  4570ca:	add    esp,0x8
  4570cd:	add    eax,0xe003826f
  4570d2:	adc    edx,0x6ca6351
  4570d8:	add    eax,DWORD PTR [esp+0x140]
  4570df:	adc    edx,DWORD PTR [esp+0x144]
  4570e6:	mov    DWORD PTR [esp+0x40],eax
  4570ea:	mov    DWORD PTR [esp+0x44],edx
  4570ee:	mov    eax,DWORD PTR [esp+0x10]
  4570f2:	mov    edx,DWORD PTR [esp+0x14]
  4570f6:	shrd   eax,edx,0x1c
  4570fa:	shr    edx,0x1c
  4570fd:	push   edx
  4570fe:	push   eax
  4570ff:	mov    edx,DWORD PTR [esp+0x18]
  457103:	shl    edx,0x4
  457106:	xor    eax,eax
  457108:	or     eax,DWORD PTR [esp]
  45710b:	or     edx,DWORD PTR [esp+0x4]
  45710f:	add    esp,0x8
  457112:	push   edx
  457113:	push   eax
  457114:	mov    eax,DWORD PTR [esp+0x1c]
  457118:	shr    eax,0x2
  45711b:	xor    edx,edx
  45711d:	push   edx
  45711e:	push   eax
  45711f:	mov    eax,DWORD PTR [esp+0x20]
  457123:	mov    edx,DWORD PTR [esp+0x24]
  457127:	shld   edx,eax,0x1e
  45712b:	shl    eax,0x1e
  45712e:	or     eax,DWORD PTR [esp]
  457131:	or     edx,DWORD PTR [esp+0x4]
  457135:	add    esp,0x8
  457138:	xor    eax,DWORD PTR [esp]
  45713b:	xor    edx,DWORD PTR [esp+0x4]
  45713f:	add    esp,0x8
  457142:	push   edx
  457143:	push   eax
  457144:	mov    eax,DWORD PTR [esp+0x1c]
  457148:	shr    eax,0x7
  45714b:	xor    edx,edx
  45714d:	push   edx
  45714e:	push   eax
  45714f:	mov    eax,DWORD PTR [esp+0x20]
  457153:	mov    edx,DWORD PTR [esp+0x24]
  457157:	shld   edx,eax,0x19
  45715b:	shl    eax,0x19
  45715e:	or     eax,DWORD PTR [esp]
  457161:	or     edx,DWORD PTR [esp+0x4]
  457165:	add    esp,0x8
  457168:	xor    eax,DWORD PTR [esp]
  45716b:	xor    edx,DWORD PTR [esp+0x4]
  45716f:	add    esp,0x8
  457172:	push   edx
  457173:	push   eax
  457174:	mov    eax,DWORD PTR [esp+0x18]
  457178:	mov    edx,DWORD PTR [esp+0x1c]
  45717c:	and    eax,DWORD PTR [esp+0x20]
  457180:	and    edx,DWORD PTR [esp+0x24]
  457184:	push   edx
  457185:	push   eax
  457186:	mov    eax,DWORD PTR [esp+0x20]
  45718a:	mov    edx,DWORD PTR [esp+0x24]
  45718e:	and    eax,DWORD PTR [esp+0x30]
  457192:	and    edx,DWORD PTR [esp+0x34]
  457196:	xor    eax,DWORD PTR [esp]
  457199:	xor    edx,DWORD PTR [esp+0x4]
  45719d:	add    esp,0x8
  4571a0:	push   edx
  4571a1:	push   eax
  4571a2:	mov    eax,DWORD PTR [esp+0x28]
  4571a6:	mov    edx,DWORD PTR [esp+0x2c]
  4571aa:	and    eax,DWORD PTR [esp+0x30]
  4571ae:	and    edx,DWORD PTR [esp+0x34]
  4571b2:	xor    eax,DWORD PTR [esp]
  4571b5:	xor    edx,DWORD PTR [esp+0x4]
  4571b9:	add    esp,0x8
  4571bc:	add    eax,DWORD PTR [esp]
  4571bf:	adc    edx,DWORD PTR [esp+0x4]
  4571c3:	add    esp,0x8
  4571c6:	mov    DWORD PTR [esp+0x48],eax
  4571ca:	mov    DWORD PTR [esp+0x4c],edx
  4571ce:	mov    eax,DWORD PTR [esp+0x28]
  4571d2:	mov    edx,DWORD PTR [esp+0x2c]
  4571d6:	add    eax,DWORD PTR [esp+0x40]
  4571da:	adc    edx,DWORD PTR [esp+0x44]
  4571de:	mov    DWORD PTR [esp+0x28],eax
  4571e2:	mov    DWORD PTR [esp+0x2c],edx
  4571e6:	mov    eax,DWORD PTR [esp+0x40]
  4571ea:	mov    edx,DWORD PTR [esp+0x44]
  4571ee:	add    eax,DWORD PTR [esp+0x48]
  4571f2:	adc    edx,DWORD PTR [esp+0x4c]
  4571f6:	mov    DWORD PTR [esp+0x8],eax
  4571fa:	mov    DWORD PTR [esp+0xc],edx
  4571fe:	mov    eax,DWORD PTR [esp+0x28]
  457202:	mov    edx,DWORD PTR [esp+0x2c]
  457206:	shrd   eax,edx,0xe
  45720a:	shr    edx,0xe
  45720d:	push   edx
  45720e:	push   eax
  45720f:	mov    edx,DWORD PTR [esp+0x30]
  457213:	shl    edx,0x12
  457216:	xor    eax,eax
  457218:	or     eax,DWORD PTR [esp]
  45721b:	or     edx,DWORD PTR [esp+0x4]
  45721f:	add    esp,0x8
  457222:	push   edx
  457223:	push   eax
  457224:	mov    eax,DWORD PTR [esp+0x30]
  457228:	mov    edx,DWORD PTR [esp+0x34]
  45722c:	shrd   eax,edx,0x12
  457230:	shr    edx,0x12
  457233:	push   edx
  457234:	push   eax
  457235:	mov    edx,DWORD PTR [esp+0x38]
  457239:	shl    edx,0xe
  45723c:	xor    eax,eax
  45723e:	or     eax,DWORD PTR [esp]
  457241:	or     edx,DWORD PTR [esp+0x4]
  457245:	add    esp,0x8
  457248:	xor    eax,DWORD PTR [esp]
  45724b:	xor    edx,DWORD PTR [esp+0x4]
  45724f:	add    esp,0x8
  457252:	push   edx
  457253:	push   eax
  457254:	mov    eax,DWORD PTR [esp+0x34]
  457258:	shr    eax,0x9
  45725b:	xor    edx,edx
  45725d:	push   edx
  45725e:	push   eax
  45725f:	mov    eax,DWORD PTR [esp+0x38]
  457263:	mov    edx,DWORD PTR [esp+0x3c]
  457267:	shld   edx,eax,0x17
  45726b:	shl    eax,0x17
  45726e:	or     eax,DWORD PTR [esp]
  457271:	or     edx,DWORD PTR [esp+0x4]
  457275:	add    esp,0x8
  457278:	xor    eax,DWORD PTR [esp]
  45727b:	xor    edx,DWORD PTR [esp+0x4]
  45727f:	add    esp,0x8
  457282:	add    eax,DWORD PTR [esp]
  457285:	adc    edx,DWORD PTR [esp+0x4]
  457289:	push   edx
  45728a:	push   eax
  45728b:	mov    eax,DWORD PTR [esp+0x30]
  45728f:	mov    edx,DWORD PTR [esp+0x34]
  457293:	and    eax,DWORD PTR [esp+0x38]
  457297:	and    edx,DWORD PTR [esp+0x3c]
  45729b:	push   edx
  45729c:	push   eax
  45729d:	mov    eax,DWORD PTR [esp+0x38]
  4572a1:	mov    edx,DWORD PTR [esp+0x3c]
  4572a5:	not    eax
  4572a7:	not    edx
  4572a9:	and    eax,DWORD PTR [esp+0x48]
  4572ad:	and    edx,DWORD PTR [esp+0x4c]
  4572b1:	xor    eax,DWORD PTR [esp]
  4572b4:	xor    edx,DWORD PTR [esp+0x4]
  4572b8:	add    esp,0x8
  4572bb:	add    eax,DWORD PTR [esp]
  4572be:	adc    edx,DWORD PTR [esp+0x4]
  4572c2:	add    esp,0x8
  4572c5:	add    eax,0xa0e6e70
  4572ca:	adc    edx,0x14292967
  4572d0:	add    eax,DWORD PTR [esp+0x148]
  4572d7:	adc    edx,DWORD PTR [esp+0x14c]
  4572de:	mov    DWORD PTR [esp+0x40],eax
  4572e2:	mov    DWORD PTR [esp+0x44],edx
  4572e6:	mov    eax,DWORD PTR [esp+0x8]
  4572ea:	mov    edx,DWORD PTR [esp+0xc]
  4572ee:	shrd   eax,edx,0x1c
  4572f2:	shr    edx,0x1c
  4572f5:	push   edx
  4572f6:	push   eax
  4572f7:	mov    edx,DWORD PTR [esp+0x10]
  4572fb:	shl    edx,0x4
  4572fe:	xor    eax,eax
  457300:	or     eax,DWORD PTR [esp]
  457303:	or     edx,DWORD PTR [esp+0x4]
  457307:	add    esp,0x8
  45730a:	push   edx
  45730b:	push   eax
  45730c:	mov    eax,DWORD PTR [esp+0x14]
  457310:	shr    eax,0x2
  457313:	xor    edx,edx
  457315:	push   edx
  457316:	push   eax
  457317:	mov    eax,DWORD PTR [esp+0x18]
  45731b:	mov    edx,DWORD PTR [esp+0x1c]
  45731f:	shld   edx,eax,0x1e
  457323:	shl    eax,0x1e
  457326:	or     eax,DWORD PTR [esp]
  457329:	or     edx,DWORD PTR [esp+0x4]
  45732d:	add    esp,0x8
  457330:	xor    eax,DWORD PTR [esp]
  457333:	xor    edx,DWORD PTR [esp+0x4]
  457337:	add    esp,0x8
  45733a:	push   edx
  45733b:	push   eax
  45733c:	mov    eax,DWORD PTR [esp+0x14]
  457340:	shr    eax,0x7
  457343:	xor    edx,edx
  457345:	push   edx
  457346:	push   eax
  457347:	mov    eax,DWORD PTR [esp+0x18]
  45734b:	mov    edx,DWORD PTR [esp+0x1c]
  45734f:	shld   edx,eax,0x19
  457353:	shl    eax,0x19
  457356:	or     eax,DWORD PTR [esp]
  457359:	or     edx,DWORD PTR [esp+0x4]
  45735d:	add    esp,0x8
  457360:	xor    eax,DWORD PTR [esp]
  457363:	xor    edx,DWORD PTR [esp+0x4]
  457367:	add    esp,0x8
  45736a:	push   edx
  45736b:	push   eax
  45736c:	mov    eax,DWORD PTR [esp+0x10]
  457370:	mov    edx,DWORD PTR [esp+0x14]
  457374:	and    eax,DWORD PTR [esp+0x18]
  457378:	and    edx,DWORD PTR [esp+0x1c]
  45737c:	push   edx
  45737d:	push   eax
  45737e:	mov    eax,DWORD PTR [esp+0x18]
  457382:	mov    edx,DWORD PTR [esp+0x1c]
  457386:	and    eax,DWORD PTR [esp+0x28]
  45738a:	and    edx,DWORD PTR [esp+0x2c]
  45738e:	xor    eax,DWORD PTR [esp]
  457391:	xor    edx,DWORD PTR [esp+0x4]
  457395:	add    esp,0x8
  457398:	push   edx
  457399:	push   eax
  45739a:	mov    eax,DWORD PTR [esp+0x20]
  45739e:	mov    edx,DWORD PTR [esp+0x24]
  4573a2:	and    eax,DWORD PTR [esp+0x28]
  4573a6:	and    edx,DWORD PTR [esp+0x2c]
  4573aa:	xor    eax,DWORD PTR [esp]
  4573ad:	xor    edx,DWORD PTR [esp+0x4]
  4573b1:	add    esp,0x8
  4573b4:	add    eax,DWORD PTR [esp]
  4573b7:	adc    edx,DWORD PTR [esp+0x4]
  4573bb:	add    esp,0x8
  4573be:	mov    DWORD PTR [esp+0x48],eax
  4573c2:	mov    DWORD PTR [esp+0x4c],edx
  4573c6:	mov    eax,DWORD PTR [esp+0x20]
  4573ca:	mov    edx,DWORD PTR [esp+0x24]
  4573ce:	add    eax,DWORD PTR [esp+0x40]
  4573d2:	adc    edx,DWORD PTR [esp+0x44]
  4573d6:	mov    DWORD PTR [esp+0x20],eax
  4573da:	mov    DWORD PTR [esp+0x24],edx
  4573de:	mov    eax,DWORD PTR [esp+0x40]
  4573e2:	mov    edx,DWORD PTR [esp+0x44]
  4573e6:	add    eax,DWORD PTR [esp+0x48]
  4573ea:	adc    edx,DWORD PTR [esp+0x4c]
  4573ee:	mov    DWORD PTR [esp],eax
  4573f1:	mov    DWORD PTR [esp+0x4],edx
  4573f5:	mov    eax,DWORD PTR [esp+0x20]
  4573f9:	mov    edx,DWORD PTR [esp+0x24]
  4573fd:	shrd   eax,edx,0xe
  457401:	shr    edx,0xe
  457404:	push   edx
  457405:	push   eax
  457406:	mov    edx,DWORD PTR [esp+0x28]
  45740a:	shl    edx,0x12
  45740d:	xor    eax,eax
  45740f:	or     eax,DWORD PTR [esp]
  457412:	or     edx,DWORD PTR [esp+0x4]
  457416:	add    esp,0x8
  457419:	push   edx
  45741a:	push   eax
  45741b:	mov    eax,DWORD PTR [esp+0x28]
  45741f:	mov    edx,DWORD PTR [esp+0x2c]
  457423:	shrd   eax,edx,0x12
  457427:	shr    edx,0x12
  45742a:	push   edx
  45742b:	push   eax
  45742c:	mov    edx,DWORD PTR [esp+0x30]
  457430:	shl    edx,0xe
  457433:	xor    eax,eax
  457435:	or     eax,DWORD PTR [esp]
  457438:	or     edx,DWORD PTR [esp+0x4]
  45743c:	add    esp,0x8
  45743f:	xor    eax,DWORD PTR [esp]
  457442:	xor    edx,DWORD PTR [esp+0x4]
  457446:	add    esp,0x8
  457449:	push   edx
  45744a:	push   eax
  45744b:	mov    eax,DWORD PTR [esp+0x2c]
  45744f:	shr    eax,0x9
  457452:	xor    edx,edx
  457454:	push   edx
  457455:	push   eax
  457456:	mov    eax,DWORD PTR [esp+0x30]
  45745a:	mov    edx,DWORD PTR [esp+0x34]
  45745e:	shld   edx,eax,0x17
  457462:	shl    eax,0x17
  457465:	or     eax,DWORD PTR [esp]
  457468:	or     edx,DWORD PTR [esp+0x4]
  45746c:	add    esp,0x8
  45746f:	xor    eax,DWORD PTR [esp]
  457472:	xor    edx,DWORD PTR [esp+0x4]
  457476:	add    esp,0x8
  457479:	add    eax,DWORD PTR [esp+0x38]
  45747d:	adc    edx,DWORD PTR [esp+0x3c]
  457481:	push   edx
  457482:	push   eax
  457483:	mov    eax,DWORD PTR [esp+0x28]
  457487:	mov    edx,DWORD PTR [esp+0x2c]
  45748b:	and    eax,DWORD PTR [esp+0x30]
  45748f:	and    edx,DWORD PTR [esp+0x34]
  457493:	push   edx
  457494:	push   eax
  457495:	mov    eax,DWORD PTR [esp+0x30]
  457499:	mov    edx,DWORD PTR [esp+0x34]
  45749d:	not    eax
  45749f:	not    edx
  4574a1:	and    eax,DWORD PTR [esp+0x40]
  4574a5:	and    edx,DWORD PTR [esp+0x44]
  4574a9:	xor    eax,DWORD PTR [esp]
  4574ac:	xor    edx,DWORD PTR [esp+0x4]
  4574b0:	add    esp,0x8
  4574b3:	add    eax,DWORD PTR [esp]
  4574b6:	adc    edx,DWORD PTR [esp+0x4]
  4574ba:	add    esp,0x8
  4574bd:	add    eax,0x46d22ffc
  4574c2:	adc    edx,0x27b70a85
  4574c8:	add    eax,DWORD PTR [esp+0x150]
  4574cf:	adc    edx,DWORD PTR [esp+0x154]
  4574d6:	mov    DWORD PTR [esp+0x40],eax
  4574da:	mov    DWORD PTR [esp+0x44],edx
  4574de:	mov    eax,DWORD PTR [esp]
  4574e1:	mov    edx,DWORD PTR [esp+0x4]
  4574e5:	shrd   eax,edx,0x1c
  4574e9:	shr    edx,0x1c
  4574ec:	push   edx
  4574ed:	push   eax
  4574ee:	mov    edx,DWORD PTR [esp+0x8]
  4574f2:	shl    edx,0x4
  4574f5:	xor    eax,eax
  4574f7:	or     eax,DWORD PTR [esp]
  4574fa:	or     edx,DWORD PTR [esp+0x4]
  4574fe:	add    esp,0x8
  457501:	push   edx
  457502:	push   eax
  457503:	mov    eax,DWORD PTR [esp+0xc]
  457507:	shr    eax,0x2
  45750a:	xor    edx,edx
  45750c:	push   edx
  45750d:	push   eax
  45750e:	mov    eax,DWORD PTR [esp+0x10]
  457512:	mov    edx,DWORD PTR [esp+0x14]
  457516:	shld   edx,eax,0x1e
  45751a:	shl    eax,0x1e
  45751d:	or     eax,DWORD PTR [esp]
  457520:	or     edx,DWORD PTR [esp+0x4]
  457524:	add    esp,0x8
  457527:	xor    eax,DWORD PTR [esp]
  45752a:	xor    edx,DWORD PTR [esp+0x4]
  45752e:	add    esp,0x8
  457531:	push   edx
  457532:	push   eax
  457533:	mov    eax,DWORD PTR [esp+0xc]
  457537:	shr    eax,0x7
  45753a:	xor    edx,edx
  45753c:	push   edx
  45753d:	push   eax
  45753e:	mov    eax,DWORD PTR [esp+0x10]
  457542:	mov    edx,DWORD PTR [esp+0x14]
  457546:	shld   edx,eax,0x19
  45754a:	shl    eax,0x19
  45754d:	or     eax,DWORD PTR [esp]
  457550:	or     edx,DWORD PTR [esp+0x4]
  457554:	add    esp,0x8
  457557:	xor    eax,DWORD PTR [esp]
  45755a:	xor    edx,DWORD PTR [esp+0x4]
  45755e:	add    esp,0x8
  457561:	push   edx
  457562:	push   eax
  457563:	mov    eax,DWORD PTR [esp+0x8]
  457567:	mov    edx,DWORD PTR [esp+0xc]
  45756b:	and    eax,DWORD PTR [esp+0x10]
  45756f:	and    edx,DWORD PTR [esp+0x14]
  457573:	push   edx
  457574:	push   eax
  457575:	mov    eax,DWORD PTR [esp+0x10]
  457579:	mov    edx,DWORD PTR [esp+0x14]
  45757d:	and    eax,DWORD PTR [esp+0x20]
  457581:	and    edx,DWORD PTR [esp+0x24]
  457585:	xor    eax,DWORD PTR [esp]
  457588:	xor    edx,DWORD PTR [esp+0x4]
  45758c:	add    esp,0x8
  45758f:	push   edx
  457590:	push   eax
  457591:	mov    eax,DWORD PTR [esp+0x18]
  457595:	mov    edx,DWORD PTR [esp+0x1c]
  457599:	and    eax,DWORD PTR [esp+0x20]
  45759d:	and    edx,DWORD PTR [esp+0x24]
  4575a1:	xor    eax,DWORD PTR [esp]
  4575a4:	xor    edx,DWORD PTR [esp+0x4]
  4575a8:	add    esp,0x8
  4575ab:	add    eax,DWORD PTR [esp]
  4575ae:	adc    edx,DWORD PTR [esp+0x4]
  4575b2:	add    esp,0x8
  4575b5:	mov    DWORD PTR [esp+0x48],eax
  4575b9:	mov    DWORD PTR [esp+0x4c],edx
  4575bd:	mov    eax,DWORD PTR [esp+0x18]
  4575c1:	mov    edx,DWORD PTR [esp+0x1c]
  4575c5:	add    eax,DWORD PTR [esp+0x40]
  4575c9:	adc    edx,DWORD PTR [esp+0x44]
  4575cd:	mov    DWORD PTR [esp+0x18],eax
  4575d1:	mov    DWORD PTR [esp+0x1c],edx
  4575d5:	mov    eax,DWORD PTR [esp+0x40]
  4575d9:	mov    edx,DWORD PTR [esp+0x44]
  4575dd:	add    eax,DWORD PTR [esp+0x48]
  4575e1:	adc    edx,DWORD PTR [esp+0x4c]
  4575e5:	mov    DWORD PTR [esp+0x38],eax
  4575e9:	mov    DWORD PTR [esp+0x3c],edx
  4575ed:	mov    eax,DWORD PTR [esp+0x18]
  4575f1:	mov    edx,DWORD PTR [esp+0x1c]
  4575f5:	shrd   eax,edx,0xe
  4575f9:	shr    edx,0xe
  4575fc:	push   edx
  4575fd:	push   eax
  4575fe:	mov    edx,DWORD PTR [esp+0x20]
  457602:	shl    edx,0x12
  457605:	xor    eax,eax
  457607:	or     eax,DWORD PTR [esp]
  45760a:	or     edx,DWORD PTR [esp+0x4]
  45760e:	add    esp,0x8
  457611:	push   edx
  457612:	push   eax
  457613:	mov    eax,DWORD PTR [esp+0x20]
  457617:	mov    edx,DWORD PTR [esp+0x24]
  45761b:	shrd   eax,edx,0x12
  45761f:	shr    edx,0x12
  457622:	push   edx
  457623:	push   eax
  457624:	mov    edx,DWORD PTR [esp+0x28]
  457628:	shl    edx,0xe
  45762b:	xor    eax,eax
  45762d:	or     eax,DWORD PTR [esp]
  457630:	or     edx,DWORD PTR [esp+0x4]
  457634:	add    esp,0x8
  457637:	xor    eax,DWORD PTR [esp]
  45763a:	xor    edx,DWORD PTR [esp+0x4]
  45763e:	add    esp,0x8
  457641:	push   edx
  457642:	push   eax
  457643:	mov    eax,DWORD PTR [esp+0x24]
  457647:	shr    eax,0x9
  45764a:	xor    edx,edx
  45764c:	push   edx
  45764d:	push   eax
  45764e:	mov    eax,DWORD PTR [esp+0x28]
  457652:	mov    edx,DWORD PTR [esp+0x2c]
  457656:	shld   edx,eax,0x17
  45765a:	shl    eax,0x17
  45765d:	or     eax,DWORD PTR [esp]
  457660:	or     edx,DWORD PTR [esp+0x4]
  457664:	add    esp,0x8
  457667:	xor    eax,DWORD PTR [esp]
  45766a:	xor    edx,DWORD PTR [esp+0x4]
  45766e:	add    esp,0x8
  457671:	add    eax,DWORD PTR [esp+0x30]
  457675:	adc    edx,DWORD PTR [esp+0x34]
  457679:	push   edx
  45767a:	push   eax
  45767b:	mov    eax,DWORD PTR [esp+0x20]
  45767f:	mov    edx,DWORD PTR [esp+0x24]
  457683:	and    eax,DWORD PTR [esp+0x28]
  457687:	and    edx,DWORD PTR [esp+0x2c]
  45768b:	push   edx
  45768c:	push   eax
  45768d:	mov    eax,DWORD PTR [esp+0x28]
  457691:	mov    edx,DWORD PTR [esp+0x2c]
  457695:	not    eax
  457697:	not    edx
  457699:	and    eax,DWORD PTR [esp+0x38]
  45769d:	and    edx,DWORD PTR [esp+0x3c]
  4576a1:	xor    eax,DWORD PTR [esp]
  4576a4:	xor    edx,DWORD PTR [esp+0x4]
  4576a8:	add    esp,0x8
  4576ab:	add    eax,DWORD PTR [esp]
  4576ae:	adc    edx,DWORD PTR [esp+0x4]
  4576b2:	add    esp,0x8
  4576b5:	add    eax,0x5c26c926
  4576ba:	adc    edx,0x2e1b2138
  4576c0:	add    eax,DWORD PTR [esp+0x158]
  4576c7:	adc    edx,DWORD PTR [esp+0x15c]
  4576ce:	mov    DWORD PTR [esp+0x40],eax
  4576d2:	mov    DWORD PTR [esp+0x44],edx
  4576d6:	mov    eax,DWORD PTR [esp+0x38]
  4576da:	mov    edx,DWORD PTR [esp+0x3c]
  4576de:	shrd   eax,edx,0x1c
  4576e2:	shr    edx,0x1c
  4576e5:	push   edx
  4576e6:	push   eax
  4576e7:	mov    edx,DWORD PTR [esp+0x40]
  4576eb:	shl    edx,0x4
  4576ee:	xor    eax,eax
  4576f0:	or     eax,DWORD PTR [esp]
  4576f3:	or     edx,DWORD PTR [esp+0x4]
  4576f7:	add    esp,0x8
  4576fa:	push   edx
  4576fb:	push   eax
  4576fc:	mov    eax,DWORD PTR [esp+0x44]
  457700:	shr    eax,0x2
  457703:	xor    edx,edx
  457705:	push   edx
  457706:	push   eax
  457707:	mov    eax,DWORD PTR [esp+0x48]
  45770b:	mov    edx,DWORD PTR [esp+0x4c]
  45770f:	shld   edx,eax,0x1e
  457713:	shl    eax,0x1e
  457716:	or     eax,DWORD PTR [esp]
  457719:	or     edx,DWORD PTR [esp+0x4]
  45771d:	add    esp,0x8
  457720:	xor    eax,DWORD PTR [esp]
  457723:	xor    edx,DWORD PTR [esp+0x4]
  457727:	add    esp,0x8
  45772a:	push   edx
  45772b:	push   eax
  45772c:	mov    eax,DWORD PTR [esp+0x44]
  457730:	shr    eax,0x7
  457733:	xor    edx,edx
  457735:	push   edx
  457736:	push   eax
  457737:	mov    eax,DWORD PTR [esp+0x48]
  45773b:	mov    edx,DWORD PTR [esp+0x4c]
  45773f:	shld   edx,eax,0x19
  457743:	shl    eax,0x19
  457746:	or     eax,DWORD PTR [esp]
  457749:	or     edx,DWORD PTR [esp+0x4]
  45774d:	add    esp,0x8
  457750:	xor    eax,DWORD PTR [esp]
  457753:	xor    edx,DWORD PTR [esp+0x4]
  457757:	add    esp,0x8
  45775a:	push   edx
  45775b:	push   eax
  45775c:	mov    eax,DWORD PTR [esp+0x40]
  457760:	mov    edx,DWORD PTR [esp+0x44]
  457764:	and    eax,DWORD PTR [esp+0x8]
  457768:	and    edx,DWORD PTR [esp+0xc]
  45776c:	push   edx
  45776d:	push   eax
  45776e:	mov    eax,DWORD PTR [esp+0x48]
  457772:	mov    edx,DWORD PTR [esp+0x4c]
  457776:	and    eax,DWORD PTR [esp+0x18]
  45777a:	and    edx,DWORD PTR [esp+0x1c]
  45777e:	xor    eax,DWORD PTR [esp]
  457781:	xor    edx,DWORD PTR [esp+0x4]
  457785:	add    esp,0x8
  457788:	push   edx
  457789:	push   eax
  45778a:	mov    eax,DWORD PTR [esp+0x10]
  45778e:	mov    edx,DWORD PTR [esp+0x14]
  457792:	and    eax,DWORD PTR [esp+0x18]
  457796:	and    edx,DWORD PTR [esp+0x1c]
  45779a:	xor    eax,DWORD PTR [esp]
  45779d:	xor    edx,DWORD PTR [esp+0x4]
  4577a1:	add    esp,0x8
  4577a4:	add    eax,DWORD PTR [esp]
  4577a7:	adc    edx,DWORD PTR [esp+0x4]
  4577ab:	add    esp,0x8
  4577ae:	mov    DWORD PTR [esp+0x48],eax
  4577b2:	mov    DWORD PTR [esp+0x4c],edx
  4577b6:	mov    eax,DWORD PTR [esp+0x10]
  4577ba:	mov    edx,DWORD PTR [esp+0x14]
  4577be:	add    eax,DWORD PTR [esp+0x40]
  4577c2:	adc    edx,DWORD PTR [esp+0x44]
  4577c6:	mov    DWORD PTR [esp+0x10],eax
  4577ca:	mov    DWORD PTR [esp+0x14],edx
  4577ce:	mov    eax,DWORD PTR [esp+0x40]
  4577d2:	mov    edx,DWORD PTR [esp+0x44]
  4577d6:	add    eax,DWORD PTR [esp+0x48]
  4577da:	adc    edx,DWORD PTR [esp+0x4c]
  4577de:	mov    DWORD PTR [esp+0x30],eax
  4577e2:	mov    DWORD PTR [esp+0x34],edx
  4577e6:	mov    eax,DWORD PTR [esp+0x10]
  4577ea:	mov    edx,DWORD PTR [esp+0x14]
  4577ee:	shrd   eax,edx,0xe
  4577f2:	shr    edx,0xe
  4577f5:	push   edx
  4577f6:	push   eax
  4577f7:	mov    edx,DWORD PTR [esp+0x18]
  4577fb:	shl    edx,0x12
  4577fe:	xor    eax,eax
  457800:	or     eax,DWORD PTR [esp]
  457803:	or     edx,DWORD PTR [esp+0x4]
  457807:	add    esp,0x8
  45780a:	push   edx
  45780b:	push   eax
  45780c:	mov    eax,DWORD PTR [esp+0x18]
  457810:	mov    edx,DWORD PTR [esp+0x1c]
  457814:	shrd   eax,edx,0x12
  457818:	shr    edx,0x12
  45781b:	push   edx
  45781c:	push   eax
  45781d:	mov    edx,DWORD PTR [esp+0x20]
  457821:	shl    edx,0xe
  457824:	xor    eax,eax
  457826:	or     eax,DWORD PTR [esp]
  457829:	or     edx,DWORD PTR [esp+0x4]
  45782d:	add    esp,0x8
  457830:	xor    eax,DWORD PTR [esp]
  457833:	xor    edx,DWORD PTR [esp+0x4]
  457837:	add    esp,0x8
  45783a:	push   edx
  45783b:	push   eax
  45783c:	mov    eax,DWORD PTR [esp+0x1c]
  457840:	shr    eax,0x9
  457843:	xor    edx,edx
  457845:	push   edx
  457846:	push   eax
  457847:	mov    eax,DWORD PTR [esp+0x20]
  45784b:	mov    edx,DWORD PTR [esp+0x24]
  45784f:	shld   edx,eax,0x17
  457853:	shl    eax,0x17
  457856:	or     eax,DWORD PTR [esp]
  457859:	or     edx,DWORD PTR [esp+0x4]
  45785d:	add    esp,0x8
  457860:	xor    eax,DWORD PTR [esp]
  457863:	xor    edx,DWORD PTR [esp+0x4]
  457867:	add    esp,0x8
  45786a:	add    eax,DWORD PTR [esp+0x28]
  45786e:	adc    edx,DWORD PTR [esp+0x2c]
  457872:	push   edx
  457873:	push   eax
  457874:	mov    eax,DWORD PTR [esp+0x18]
  457878:	mov    edx,DWORD PTR [esp+0x1c]
  45787c:	and    eax,DWORD PTR [esp+0x20]
  457880:	and    edx,DWORD PTR [esp+0x24]
  457884:	push   edx
  457885:	push   eax
  457886:	mov    eax,DWORD PTR [esp+0x20]
  45788a:	mov    edx,DWORD PTR [esp+0x24]
  45788e:	not    eax
  457890:	not    edx
  457892:	and    eax,DWORD PTR [esp+0x30]
  457896:	and    edx,DWORD PTR [esp+0x34]
  45789a:	xor    eax,DWORD PTR [esp]
  45789d:	xor    edx,DWORD PTR [esp+0x4]
  4578a1:	add    esp,0x8
  4578a4:	add    eax,DWORD PTR [esp]
  4578a7:	adc    edx,DWORD PTR [esp+0x4]
  4578ab:	add    esp,0x8
  4578ae:	add    eax,0x5ac42aed
  4578b3:	adc    edx,0x4d2c6dfc
  4578b9:	add    eax,DWORD PTR [esp+0x160]
  4578c0:	adc    edx,DWORD PTR [esp+0x164]
  4578c7:	mov    DWORD PTR [esp+0x40],eax
  4578cb:	mov    DWORD PTR [esp+0x44],edx
  4578cf:	mov    eax,DWORD PTR [esp+0x30]
  4578d3:	mov    edx,DWORD PTR [esp+0x34]
  4578d7:	shrd   eax,edx,0x1c
  4578db:	shr    edx,0x1c
  4578de:	push   edx
  4578df:	push   eax
  4578e0:	mov    edx,DWORD PTR [esp+0x38]
  4578e4:	shl    edx,0x4
  4578e7:	xor    eax,eax
  4578e9:	or     eax,DWORD PTR [esp]
  4578ec:	or     edx,DWORD PTR [esp+0x4]
  4578f0:	add    esp,0x8
  4578f3:	push   edx
  4578f4:	push   eax
  4578f5:	mov    eax,DWORD PTR [esp+0x3c]
  4578f9:	shr    eax,0x2
  4578fc:	xor    edx,edx
  4578fe:	push   edx
  4578ff:	push   eax
  457900:	mov    eax,DWORD PTR [esp+0x40]
  457904:	mov    edx,DWORD PTR [esp+0x44]
  457908:	shld   edx,eax,0x1e
  45790c:	shl    eax,0x1e
  45790f:	or     eax,DWORD PTR [esp]
  457912:	or     edx,DWORD PTR [esp+0x4]
  457916:	add    esp,0x8
  457919:	xor    eax,DWORD PTR [esp]
  45791c:	xor    edx,DWORD PTR [esp+0x4]
  457920:	add    esp,0x8
  457923:	push   edx
  457924:	push   eax
  457925:	mov    eax,DWORD PTR [esp+0x3c]
  457929:	shr    eax,0x7
  45792c:	xor    edx,edx
  45792e:	push   edx
  45792f:	push   eax
  457930:	mov    eax,DWORD PTR [esp+0x40]
  457934:	mov    edx,DWORD PTR [esp+0x44]
  457938:	shld   edx,eax,0x19
  45793c:	shl    eax,0x19
  45793f:	or     eax,DWORD PTR [esp]
  457942:	or     edx,DWORD PTR [esp+0x4]
  457946:	add    esp,0x8
  457949:	xor    eax,DWORD PTR [esp]
  45794c:	xor    edx,DWORD PTR [esp+0x4]
  457950:	add    esp,0x8
  457953:	push   edx
  457954:	push   eax
  457955:	mov    eax,DWORD PTR [esp+0x38]
  457959:	mov    edx,DWORD PTR [esp+0x3c]
  45795d:	and    eax,DWORD PTR [esp+0x40]
  457961:	and    edx,DWORD PTR [esp+0x44]
  457965:	push   edx
  457966:	push   eax
  457967:	mov    eax,DWORD PTR [esp+0x40]
  45796b:	mov    edx,DWORD PTR [esp+0x44]
  45796f:	and    eax,DWORD PTR [esp+0x10]
  457973:	and    edx,DWORD PTR [esp+0x14]
  457977:	xor    eax,DWORD PTR [esp]
  45797a:	xor    edx,DWORD PTR [esp+0x4]
  45797e:	add    esp,0x8
  457981:	push   edx
  457982:	push   eax
  457983:	mov    eax,DWORD PTR [esp+0x48]
  457987:	mov    edx,DWORD PTR [esp+0x4c]
  45798b:	and    eax,DWORD PTR [esp+0x10]
  45798f:	and    edx,DWORD PTR [esp+0x14]
  457993:	xor    eax,DWORD PTR [esp]
  457996:	xor    edx,DWORD PTR [esp+0x4]
  45799a:	add    esp,0x8
  45799d:	add    eax,DWORD PTR [esp]
  4579a0:	adc    edx,DWORD PTR [esp+0x4]
  4579a4:	add    esp,0x8
  4579a7:	mov    DWORD PTR [esp+0x48],eax
  4579ab:	mov    DWORD PTR [esp+0x4c],edx
  4579af:	mov    eax,DWORD PTR [esp+0x8]
  4579b3:	mov    edx,DWORD PTR [esp+0xc]
  4579b7:	add    eax,DWORD PTR [esp+0x40]
  4579bb:	adc    edx,DWORD PTR [esp+0x44]
  4579bf:	mov    DWORD PTR [esp+0x8],eax
  4579c3:	mov    DWORD PTR [esp+0xc],edx
  4579c7:	mov    eax,DWORD PTR [esp+0x40]
  4579cb:	mov    edx,DWORD PTR [esp+0x44]
  4579cf:	add    eax,DWORD PTR [esp+0x48]
  4579d3:	adc    edx,DWORD PTR [esp+0x4c]
  4579d7:	mov    DWORD PTR [esp+0x28],eax
  4579db:	mov    DWORD PTR [esp+0x2c],edx
  4579df:	mov    eax,DWORD PTR [esp+0x8]
  4579e3:	mov    edx,DWORD PTR [esp+0xc]
  4579e7:	shrd   eax,edx,0xe
  4579eb:	shr    edx,0xe
  4579ee:	push   edx
  4579ef:	push   eax
  4579f0:	mov    edx,DWORD PTR [esp+0x10]
  4579f4:	shl    edx,0x12
  4579f7:	xor    eax,eax
  4579f9:	or     eax,DWORD PTR [esp]
  4579fc:	or     edx,DWORD PTR [esp+0x4]
  457a00:	add    esp,0x8
  457a03:	push   edx
  457a04:	push   eax
  457a05:	mov    eax,DWORD PTR [esp+0x10]
  457a09:	mov    edx,DWORD PTR [esp+0x14]
  457a0d:	shrd   eax,edx,0x12
  457a11:	shr    edx,0x12
  457a14:	push   edx
  457a15:	push   eax
  457a16:	mov    edx,DWORD PTR [esp+0x18]
  457a1a:	shl    edx,0xe
  457a1d:	xor    eax,eax
  457a1f:	or     eax,DWORD PTR [esp]
  457a22:	or     edx,DWORD PTR [esp+0x4]
  457a26:	add    esp,0x8
  457a29:	xor    eax,DWORD PTR [esp]
  457a2c:	xor    edx,DWORD PTR [esp+0x4]
  457a30:	add    esp,0x8
  457a33:	push   edx
  457a34:	push   eax
  457a35:	mov    eax,DWORD PTR [esp+0x14]
  457a39:	shr    eax,0x9
  457a3c:	xor    edx,edx
  457a3e:	push   edx
  457a3f:	push   eax
  457a40:	mov    eax,DWORD PTR [esp+0x18]
  457a44:	mov    edx,DWORD PTR [esp+0x1c]
  457a48:	shld   edx,eax,0x17
  457a4c:	shl    eax,0x17
  457a4f:	or     eax,DWORD PTR [esp]
  457a52:	or     edx,DWORD PTR [esp+0x4]
  457a56:	add    esp,0x8
  457a59:	xor    eax,DWORD PTR [esp]
  457a5c:	xor    edx,DWORD PTR [esp+0x4]
  457a60:	add    esp,0x8
  457a63:	add    eax,DWORD PTR [esp+0x20]
  457a67:	adc    edx,DWORD PTR [esp+0x24]
  457a6b:	push   edx
  457a6c:	push   eax
  457a6d:	mov    eax,DWORD PTR [esp+0x10]
  457a71:	mov    edx,DWORD PTR [esp+0x14]
  457a75:	and    eax,DWORD PTR [esp+0x18]
  457a79:	and    edx,DWORD PTR [esp+0x1c]
  457a7d:	push   edx
  457a7e:	push   eax
  457a7f:	mov    eax,DWORD PTR [esp+0x18]
  457a83:	mov    edx,DWORD PTR [esp+0x1c]
  457a87:	not    eax
  457a89:	not    edx
  457a8b:	and    eax,DWORD PTR [esp+0x28]
  457a8f:	and    edx,DWORD PTR [esp+0x2c]
  457a93:	xor    eax,DWORD PTR [esp]
  457a96:	xor    edx,DWORD PTR [esp+0x4]
  457a9a:	add    esp,0x8
  457a9d:	add    eax,DWORD PTR [esp]
  457aa0:	adc    edx,DWORD PTR [esp+0x4]
  457aa4:	add    esp,0x8
  457aa7:	add    eax,0x9d95b3df
  457aac:	adc    edx,0x53380d13
  457ab2:	add    eax,DWORD PTR [esp+0x168]
  457ab9:	adc    edx,DWORD PTR [esp+0x16c]
  457ac0:	mov    DWORD PTR [esp+0x40],eax
  457ac4:	mov    DWORD PTR [esp+0x44],edx
  457ac8:	mov    eax,DWORD PTR [esp+0x28]
  457acc:	mov    edx,DWORD PTR [esp+0x2c]
  457ad0:	shrd   eax,edx,0x1c
  457ad4:	shr    edx,0x1c
  457ad7:	push   edx
  457ad8:	push   eax
  457ad9:	mov    edx,DWORD PTR [esp+0x30]
  457add:	shl    edx,0x4
  457ae0:	xor    eax,eax
  457ae2:	or     eax,DWORD PTR [esp]
  457ae5:	or     edx,DWORD PTR [esp+0x4]
  457ae9:	add    esp,0x8
  457aec:	push   edx
  457aed:	push   eax
  457aee:	mov    eax,DWORD PTR [esp+0x34]
  457af2:	shr    eax,0x2
  457af5:	xor    edx,edx
  457af7:	push   edx
  457af8:	push   eax
  457af9:	mov    eax,DWORD PTR [esp+0x38]
  457afd:	mov    edx,DWORD PTR [esp+0x3c]
  457b01:	shld   edx,eax,0x1e
  457b05:	shl    eax,0x1e
  457b08:	or     eax,DWORD PTR [esp]
  457b0b:	or     edx,DWORD PTR [esp+0x4]
  457b0f:	add    esp,0x8
  457b12:	xor    eax,DWORD PTR [esp]
  457b15:	xor    edx,DWORD PTR [esp+0x4]
  457b19:	add    esp,0x8
  457b1c:	push   edx
  457b1d:	push   eax
  457b1e:	mov    eax,DWORD PTR [esp+0x34]
  457b22:	shr    eax,0x7
  457b25:	xor    edx,edx
  457b27:	push   edx
  457b28:	push   eax
  457b29:	mov    eax,DWORD PTR [esp+0x38]
  457b2d:	mov    edx,DWORD PTR [esp+0x3c]
  457b31:	shld   edx,eax,0x19
  457b35:	shl    eax,0x19
  457b38:	or     eax,DWORD PTR [esp]
  457b3b:	or     edx,DWORD PTR [esp+0x4]
  457b3f:	add    esp,0x8
  457b42:	xor    eax,DWORD PTR [esp]
  457b45:	xor    edx,DWORD PTR [esp+0x4]
  457b49:	add    esp,0x8
  457b4c:	push   edx
  457b4d:	push   eax
  457b4e:	mov    eax,DWORD PTR [esp+0x30]
  457b52:	mov    edx,DWORD PTR [esp+0x34]
  457b56:	and    eax,DWORD PTR [esp+0x38]
  457b5a:	and    edx,DWORD PTR [esp+0x3c]
  457b5e:	push   edx
  457b5f:	push   eax
  457b60:	mov    eax,DWORD PTR [esp+0x38]
  457b64:	mov    edx,DWORD PTR [esp+0x3c]
  457b68:	and    eax,DWORD PTR [esp+0x48]
  457b6c:	and    edx,DWORD PTR [esp+0x4c]
  457b70:	xor    eax,DWORD PTR [esp]
  457b73:	xor    edx,DWORD PTR [esp+0x4]
  457b77:	add    esp,0x8
  457b7a:	push   edx
  457b7b:	push   eax
  457b7c:	mov    eax,DWORD PTR [esp+0x40]
  457b80:	mov    edx,DWORD PTR [esp+0x44]
  457b84:	and    eax,DWORD PTR [esp+0x48]
  457b88:	and    edx,DWORD PTR [esp+0x4c]
  457b8c:	xor    eax,DWORD PTR [esp]
  457b8f:	xor    edx,DWORD PTR [esp+0x4]
  457b93:	add    esp,0x8
  457b96:	add    eax,DWORD PTR [esp]
  457b99:	adc    edx,DWORD PTR [esp+0x4]
  457b9d:	add    esp,0x8
  457ba0:	mov    DWORD PTR [esp+0x48],eax
  457ba4:	mov    DWORD PTR [esp+0x4c],edx
  457ba8:	mov    eax,DWORD PTR [esp]
  457bab:	mov    edx,DWORD PTR [esp+0x4]
  457baf:	add    eax,DWORD PTR [esp+0x40]
  457bb3:	adc    edx,DWORD PTR [esp+0x44]
  457bb7:	mov    DWORD PTR [esp],eax
  457bba:	mov    DWORD PTR [esp+0x4],edx
  457bbe:	mov    eax,DWORD PTR [esp+0x40]
  457bc2:	mov    edx,DWORD PTR [esp+0x44]
  457bc6:	add    eax,DWORD PTR [esp+0x48]
  457bca:	adc    edx,DWORD PTR [esp+0x4c]
  457bce:	mov    DWORD PTR [esp+0x20],eax
  457bd2:	mov    DWORD PTR [esp+0x24],edx
  457bd6:	mov    eax,DWORD PTR [esp]
  457bd9:	mov    edx,DWORD PTR [esp+0x4]
  457bdd:	shrd   eax,edx,0xe
  457be1:	shr    edx,0xe
  457be4:	push   edx
  457be5:	push   eax
  457be6:	mov    edx,DWORD PTR [esp+0x8]
  457bea:	shl    edx,0x12
  457bed:	xor    eax,eax
  457bef:	or     eax,DWORD PTR [esp]
  457bf2:	or     edx,DWORD PTR [esp+0x4]
  457bf6:	add    esp,0x8
  457bf9:	push   edx
  457bfa:	push   eax
  457bfb:	mov    eax,DWORD PTR [esp+0x8]
  457bff:	mov    edx,DWORD PTR [esp+0xc]
  457c03:	shrd   eax,edx,0x12
  457c07:	shr    edx,0x12
  457c0a:	push   edx
  457c0b:	push   eax
  457c0c:	mov    edx,DWORD PTR [esp+0x10]
  457c10:	shl    edx,0xe
  457c13:	xor    eax,eax
  457c15:	or     eax,DWORD PTR [esp]
  457c18:	or     edx,DWORD PTR [esp+0x4]
  457c1c:	add    esp,0x8
  457c1f:	xor    eax,DWORD PTR [esp]
  457c22:	xor    edx,DWORD PTR [esp+0x4]
  457c26:	add    esp,0x8
  457c29:	push   edx
  457c2a:	push   eax
  457c2b:	mov    eax,DWORD PTR [esp+0xc]
  457c2f:	shr    eax,0x9
  457c32:	xor    edx,edx
  457c34:	push   edx
  457c35:	push   eax
  457c36:	mov    eax,DWORD PTR [esp+0x10]
  457c3a:	mov    edx,DWORD PTR [esp+0x14]
  457c3e:	shld   edx,eax,0x17
  457c42:	shl    eax,0x17
  457c45:	or     eax,DWORD PTR [esp]
  457c48:	or     edx,DWORD PTR [esp+0x4]
  457c4c:	add    esp,0x8
  457c4f:	xor    eax,DWORD PTR [esp]
  457c52:	xor    edx,DWORD PTR [esp+0x4]
  457c56:	add    esp,0x8
  457c59:	add    eax,DWORD PTR [esp+0x18]
  457c5d:	adc    edx,DWORD PTR [esp+0x1c]
  457c61:	push   edx
  457c62:	push   eax
  457c63:	mov    eax,DWORD PTR [esp+0x8]
  457c67:	mov    edx,DWORD PTR [esp+0xc]
  457c6b:	and    eax,DWORD PTR [esp+0x10]
  457c6f:	and    edx,DWORD PTR [esp+0x14]
  457c73:	push   edx
  457c74:	push   eax
  457c75:	mov    eax,DWORD PTR [esp+0x10]
  457c79:	mov    edx,DWORD PTR [esp+0x14]
  457c7d:	not    eax
  457c7f:	not    edx
  457c81:	and    eax,DWORD PTR [esp+0x20]
  457c85:	and    edx,DWORD PTR [esp+0x24]
  457c89:	xor    eax,DWORD PTR [esp]
  457c8c:	xor    edx,DWORD PTR [esp+0x4]
  457c90:	add    esp,0x8
  457c93:	add    eax,DWORD PTR [esp]
  457c96:	adc    edx,DWORD PTR [esp+0x4]
  457c9a:	add    esp,0x8
  457c9d:	add    eax,0x8baf63de
  457ca2:	adc    edx,0x650a7354
  457ca8:	add    eax,DWORD PTR [esp+0x170]
  457caf:	adc    edx,DWORD PTR [esp+0x174]
  457cb6:	mov    DWORD PTR [esp+0x40],eax
  457cba:	mov    DWORD PTR [esp+0x44],edx
  457cbe:	mov    eax,DWORD PTR [esp+0x20]
  457cc2:	mov    edx,DWORD PTR [esp+0x24]
  457cc6:	shrd   eax,edx,0x1c
  457cca:	shr    edx,0x1c
  457ccd:	push   edx
  457cce:	push   eax
  457ccf:	mov    edx,DWORD PTR [esp+0x28]
  457cd3:	shl    edx,0x4
  457cd6:	xor    eax,eax
  457cd8:	or     eax,DWORD PTR [esp]
  457cdb:	or     edx,DWORD PTR [esp+0x4]
  457cdf:	add    esp,0x8
  457ce2:	push   edx
  457ce3:	push   eax
  457ce4:	mov    eax,DWORD PTR [esp+0x2c]
  457ce8:	shr    eax,0x2
  457ceb:	xor    edx,edx
  457ced:	push   edx
  457cee:	push   eax
  457cef:	mov    eax,DWORD PTR [esp+0x30]
  457cf3:	mov    edx,DWORD PTR [esp+0x34]
  457cf7:	shld   edx,eax,0x1e
  457cfb:	shl    eax,0x1e
  457cfe:	or     eax,DWORD PTR [esp]
  457d01:	or     edx,DWORD PTR [esp+0x4]
  457d05:	add    esp,0x8
  457d08:	xor    eax,DWORD PTR [esp]
  457d0b:	xor    edx,DWORD PTR [esp+0x4]
  457d0f:	add    esp,0x8
  457d12:	push   edx
  457d13:	push   eax
  457d14:	mov    eax,DWORD PTR [esp+0x2c]
  457d18:	shr    eax,0x7
  457d1b:	xor    edx,edx
  457d1d:	push   edx
  457d1e:	push   eax
  457d1f:	mov    eax,DWORD PTR [esp+0x30]
  457d23:	mov    edx,DWORD PTR [esp+0x34]
  457d27:	shld   edx,eax,0x19
  457d2b:	shl    eax,0x19
  457d2e:	or     eax,DWORD PTR [esp]
  457d31:	or     edx,DWORD PTR [esp+0x4]
  457d35:	add    esp,0x8
  457d38:	xor    eax,DWORD PTR [esp]
  457d3b:	xor    edx,DWORD PTR [esp+0x4]
  457d3f:	add    esp,0x8
  457d42:	push   edx
  457d43:	push   eax
  457d44:	mov    eax,DWORD PTR [esp+0x28]
  457d48:	mov    edx,DWORD PTR [esp+0x2c]
  457d4c:	and    eax,DWORD PTR [esp+0x30]
  457d50:	and    edx,DWORD PTR [esp+0x34]
  457d54:	push   edx
  457d55:	push   eax
  457d56:	mov    eax,DWORD PTR [esp+0x30]
  457d5a:	mov    edx,DWORD PTR [esp+0x34]
  457d5e:	and    eax,DWORD PTR [esp+0x40]
  457d62:	and    edx,DWORD PTR [esp+0x44]
  457d66:	xor    eax,DWORD PTR [esp]
  457d69:	xor    edx,DWORD PTR [esp+0x4]
  457d6d:	add    esp,0x8
  457d70:	push   edx
  457d71:	push   eax
  457d72:	mov    eax,DWORD PTR [esp+0x38]
  457d76:	mov    edx,DWORD PTR [esp+0x3c]
  457d7a:	and    eax,DWORD PTR [esp+0x40]
  457d7e:	and    edx,DWORD PTR [esp+0x44]
  457d82:	xor    eax,DWORD PTR [esp]
  457d85:	xor    edx,DWORD PTR [esp+0x4]
  457d89:	add    esp,0x8
  457d8c:	add    eax,DWORD PTR [esp]
  457d8f:	adc    edx,DWORD PTR [esp+0x4]
  457d93:	add    esp,0x8
  457d96:	mov    DWORD PTR [esp+0x48],eax
  457d9a:	mov    DWORD PTR [esp+0x4c],edx
  457d9e:	mov    eax,DWORD PTR [esp+0x38]
  457da2:	mov    edx,DWORD PTR [esp+0x3c]
  457da6:	add    eax,DWORD PTR [esp+0x40]
  457daa:	adc    edx,DWORD PTR [esp+0x44]
  457dae:	mov    DWORD PTR [esp+0x38],eax
  457db2:	mov    DWORD PTR [esp+0x3c],edx
  457db6:	mov    eax,DWORD PTR [esp+0x40]
  457dba:	mov    edx,DWORD PTR [esp+0x44]
  457dbe:	add    eax,DWORD PTR [esp+0x48]
  457dc2:	adc    edx,DWORD PTR [esp+0x4c]
  457dc6:	mov    DWORD PTR [esp+0x18],eax
  457dca:	mov    DWORD PTR [esp+0x1c],edx
  457dce:	mov    eax,DWORD PTR [esp+0x38]
  457dd2:	mov    edx,DWORD PTR [esp+0x3c]
  457dd6:	shrd   eax,edx,0xe
  457dda:	shr    edx,0xe
  457ddd:	push   edx
  457dde:	push   eax
  457ddf:	mov    edx,DWORD PTR [esp+0x40]
  457de3:	shl    edx,0x12
  457de6:	xor    eax,eax
  457de8:	or     eax,DWORD PTR [esp]
  457deb:	or     edx,DWORD PTR [esp+0x4]
  457def:	add    esp,0x8
  457df2:	push   edx
  457df3:	push   eax
  457df4:	mov    eax,DWORD PTR [esp+0x40]
  457df8:	mov    edx,DWORD PTR [esp+0x44]
  457dfc:	shrd   eax,edx,0x12
  457e00:	shr    edx,0x12
  457e03:	push   edx
  457e04:	push   eax
  457e05:	mov    edx,DWORD PTR [esp+0x48]
  457e09:	shl    edx,0xe
  457e0c:	xor    eax,eax
  457e0e:	or     eax,DWORD PTR [esp]
  457e11:	or     edx,DWORD PTR [esp+0x4]
  457e15:	add    esp,0x8
  457e18:	xor    eax,DWORD PTR [esp]
  457e1b:	xor    edx,DWORD PTR [esp+0x4]
  457e1f:	add    esp,0x8
  457e22:	push   edx
  457e23:	push   eax
  457e24:	mov    eax,DWORD PTR [esp+0x44]
  457e28:	shr    eax,0x9
  457e2b:	xor    edx,edx
  457e2d:	push   edx
  457e2e:	push   eax
  457e2f:	mov    eax,DWORD PTR [esp+0x48]
  457e33:	mov    edx,DWORD PTR [esp+0x4c]
  457e37:	shld   edx,eax,0x17
  457e3b:	shl    eax,0x17
  457e3e:	or     eax,DWORD PTR [esp]
  457e41:	or     edx,DWORD PTR [esp+0x4]
  457e45:	add    esp,0x8
  457e48:	xor    eax,DWORD PTR [esp]
  457e4b:	xor    edx,DWORD PTR [esp+0x4]
  457e4f:	add    esp,0x8
  457e52:	add    eax,DWORD PTR [esp+0x10]
  457e56:	adc    edx,DWORD PTR [esp+0x14]
  457e5a:	push   edx
  457e5b:	push   eax
  457e5c:	mov    eax,DWORD PTR [esp+0x40]
  457e60:	mov    edx,DWORD PTR [esp+0x44]
  457e64:	and    eax,DWORD PTR [esp+0x8]
  457e68:	and    edx,DWORD PTR [esp+0xc]
  457e6c:	push   edx
  457e6d:	push   eax
  457e6e:	mov    eax,DWORD PTR [esp+0x48]
  457e72:	mov    edx,DWORD PTR [esp+0x4c]
  457e76:	not    eax
  457e78:	not    edx
  457e7a:	and    eax,DWORD PTR [esp+0x18]
  457e7e:	and    edx,DWORD PTR [esp+0x1c]
  457e82:	xor    eax,DWORD PTR [esp]
  457e85:	xor    edx,DWORD PTR [esp+0x4]
  457e89:	add    esp,0x8
  457e8c:	add    eax,DWORD PTR [esp]
  457e8f:	adc    edx,DWORD PTR [esp+0x4]
  457e93:	add    esp,0x8
  457e96:	add    eax,0x3c77b2a8
  457e9b:	adc    edx,0x766a0abb
  457ea1:	add    eax,DWORD PTR [esp+0x178]
  457ea8:	adc    edx,DWORD PTR [esp+0x17c]
  457eaf:	mov    DWORD PTR [esp+0x40],eax
  457eb3:	mov    DWORD PTR [esp+0x44],edx
  457eb7:	mov    eax,DWORD PTR [esp+0x18]
  457ebb:	mov    edx,DWORD PTR [esp+0x1c]
  457ebf:	shrd   eax,edx,0x1c
  457ec3:	shr    edx,0x1c
  457ec6:	push   edx
  457ec7:	push   eax
  457ec8:	mov    edx,DWORD PTR [esp+0x20]
  457ecc:	shl    edx,0x4
  457ecf:	xor    eax,eax
  457ed1:	or     eax,DWORD PTR [esp]
  457ed4:	or     edx,DWORD PTR [esp+0x4]
  457ed8:	add    esp,0x8
  457edb:	push   edx
  457edc:	push   eax
  457edd:	mov    eax,DWORD PTR [esp+0x24]
  457ee1:	shr    eax,0x2
  457ee4:	xor    edx,edx
  457ee6:	push   edx
  457ee7:	push   eax
  457ee8:	mov    eax,DWORD PTR [esp+0x28]
  457eec:	mov    edx,DWORD PTR [esp+0x2c]
  457ef0:	shld   edx,eax,0x1e
  457ef4:	shl    eax,0x1e
  457ef7:	or     eax,DWORD PTR [esp]
  457efa:	or     edx,DWORD PTR [esp+0x4]
  457efe:	add    esp,0x8
  457f01:	xor    eax,DWORD PTR [esp]
  457f04:	xor    edx,DWORD PTR [esp+0x4]
  457f08:	add    esp,0x8
  457f0b:	push   edx
  457f0c:	push   eax
  457f0d:	mov    eax,DWORD PTR [esp+0x24]
  457f11:	shr    eax,0x7
  457f14:	xor    edx,edx
  457f16:	push   edx
  457f17:	push   eax
  457f18:	mov    eax,DWORD PTR [esp+0x28]
  457f1c:	mov    edx,DWORD PTR [esp+0x2c]
  457f20:	shld   edx,eax,0x19
  457f24:	shl    eax,0x19
  457f27:	or     eax,DWORD PTR [esp]
  457f2a:	or     edx,DWORD PTR [esp+0x4]
  457f2e:	add    esp,0x8
  457f31:	xor    eax,DWORD PTR [esp]
  457f34:	xor    edx,DWORD PTR [esp+0x4]
  457f38:	add    esp,0x8
  457f3b:	push   edx
  457f3c:	push   eax
  457f3d:	mov    eax,DWORD PTR [esp+0x20]
  457f41:	mov    edx,DWORD PTR [esp+0x24]
  457f45:	and    eax,DWORD PTR [esp+0x28]
  457f49:	and    edx,DWORD PTR [esp+0x2c]
  457f4d:	push   edx
  457f4e:	push   eax
  457f4f:	mov    eax,DWORD PTR [esp+0x28]
  457f53:	mov    edx,DWORD PTR [esp+0x2c]
  457f57:	and    eax,DWORD PTR [esp+0x38]
  457f5b:	and    edx,DWORD PTR [esp+0x3c]
  457f5f:	xor    eax,DWORD PTR [esp]
  457f62:	xor    edx,DWORD PTR [esp+0x4]
  457f66:	add    esp,0x8
  457f69:	push   edx
  457f6a:	push   eax
  457f6b:	mov    eax,DWORD PTR [esp+0x30]
  457f6f:	mov    edx,DWORD PTR [esp+0x34]
  457f73:	and    eax,DWORD PTR [esp+0x38]
  457f77:	and    edx,DWORD PTR [esp+0x3c]
  457f7b:	xor    eax,DWORD PTR [esp]
  457f7e:	xor    edx,DWORD PTR [esp+0x4]
  457f82:	add    esp,0x8
  457f85:	add    eax,DWORD PTR [esp]
  457f88:	adc    edx,DWORD PTR [esp+0x4]
  457f8c:	add    esp,0x8
  457f8f:	mov    DWORD PTR [esp+0x48],eax
  457f93:	mov    DWORD PTR [esp+0x4c],edx
  457f97:	mov    eax,DWORD PTR [esp+0x30]
  457f9b:	mov    edx,DWORD PTR [esp+0x34]
  457f9f:	add    eax,DWORD PTR [esp+0x40]
  457fa3:	adc    edx,DWORD PTR [esp+0x44]
  457fa7:	mov    DWORD PTR [esp+0x30],eax
  457fab:	mov    DWORD PTR [esp+0x34],edx
  457faf:	mov    eax,DWORD PTR [esp+0x40]
  457fb3:	mov    edx,DWORD PTR [esp+0x44]
  457fb7:	add    eax,DWORD PTR [esp+0x48]
  457fbb:	adc    edx,DWORD PTR [esp+0x4c]
  457fbf:	mov    DWORD PTR [esp+0x10],eax
  457fc3:	mov    DWORD PTR [esp+0x14],edx
  457fc7:	mov    eax,DWORD PTR [esp+0x30]
  457fcb:	mov    edx,DWORD PTR [esp+0x34]
  457fcf:	shrd   eax,edx,0xe
  457fd3:	shr    edx,0xe
  457fd6:	push   edx
  457fd7:	push   eax
  457fd8:	mov    edx,DWORD PTR [esp+0x38]
  457fdc:	shl    edx,0x12
  457fdf:	xor    eax,eax
  457fe1:	or     eax,DWORD PTR [esp]
  457fe4:	or     edx,DWORD PTR [esp+0x4]
  457fe8:	add    esp,0x8
  457feb:	push   edx
  457fec:	push   eax
  457fed:	mov    eax,DWORD PTR [esp+0x38]
  457ff1:	mov    edx,DWORD PTR [esp+0x3c]
  457ff5:	shrd   eax,edx,0x12
  457ff9:	shr    edx,0x12
  457ffc:	push   edx
  457ffd:	push   eax
  457ffe:	mov    edx,DWORD PTR [esp+0x40]
  458002:	shl    edx,0xe
  458005:	xor    eax,eax
  458007:	or     eax,DWORD PTR [esp]
  45800a:	or     edx,DWORD PTR [esp+0x4]
  45800e:	add    esp,0x8
  458011:	xor    eax,DWORD PTR [esp]
  458014:	xor    edx,DWORD PTR [esp+0x4]
  458018:	add    esp,0x8
  45801b:	push   edx
  45801c:	push   eax
  45801d:	mov    eax,DWORD PTR [esp+0x3c]
  458021:	shr    eax,0x9
  458024:	xor    edx,edx
  458026:	push   edx
  458027:	push   eax
  458028:	mov    eax,DWORD PTR [esp+0x40]
  45802c:	mov    edx,DWORD PTR [esp+0x44]
  458030:	shld   edx,eax,0x17
  458034:	shl    eax,0x17
  458037:	or     eax,DWORD PTR [esp]
  45803a:	or     edx,DWORD PTR [esp+0x4]
  45803e:	add    esp,0x8
  458041:	xor    eax,DWORD PTR [esp]
  458044:	xor    edx,DWORD PTR [esp+0x4]
  458048:	add    esp,0x8
  45804b:	add    eax,DWORD PTR [esp+0x8]
  45804f:	adc    edx,DWORD PTR [esp+0xc]
  458053:	push   edx
  458054:	push   eax
  458055:	mov    eax,DWORD PTR [esp+0x38]
  458059:	mov    edx,DWORD PTR [esp+0x3c]
  45805d:	and    eax,DWORD PTR [esp+0x40]
  458061:	and    edx,DWORD PTR [esp+0x44]
  458065:	push   edx
  458066:	push   eax
  458067:	mov    eax,DWORD PTR [esp+0x40]
  45806b:	mov    edx,DWORD PTR [esp+0x44]
  45806f:	not    eax
  458071:	not    edx
  458073:	and    eax,DWORD PTR [esp+0x10]
  458077:	and    edx,DWORD PTR [esp+0x14]
  45807b:	xor    eax,DWORD PTR [esp]
  45807e:	xor    edx,DWORD PTR [esp+0x4]
  458082:	add    esp,0x8
  458085:	add    eax,DWORD PTR [esp]
  458088:	adc    edx,DWORD PTR [esp+0x4]
  45808c:	add    esp,0x8
  45808f:	add    eax,0x47edaee6
  458094:	adc    edx,0x81c2c92e
  45809a:	add    eax,DWORD PTR [esp+0x180]
  4580a1:	adc    edx,DWORD PTR [esp+0x184]
  4580a8:	mov    DWORD PTR [esp+0x40],eax
  4580ac:	mov    DWORD PTR [esp+0x44],edx
  4580b0:	mov    eax,DWORD PTR [esp+0x10]
  4580b4:	mov    edx,DWORD PTR [esp+0x14]
  4580b8:	shrd   eax,edx,0x1c
  4580bc:	shr    edx,0x1c
  4580bf:	push   edx
  4580c0:	push   eax
  4580c1:	mov    edx,DWORD PTR [esp+0x18]
  4580c5:	shl    edx,0x4
  4580c8:	xor    eax,eax
  4580ca:	or     eax,DWORD PTR [esp]
  4580cd:	or     edx,DWORD PTR [esp+0x4]
  4580d1:	add    esp,0x8
  4580d4:	push   edx
  4580d5:	push   eax
  4580d6:	mov    eax,DWORD PTR [esp+0x1c]
  4580da:	shr    eax,0x2
  4580dd:	xor    edx,edx
  4580df:	push   edx
  4580e0:	push   eax
  4580e1:	mov    eax,DWORD PTR [esp+0x20]
  4580e5:	mov    edx,DWORD PTR [esp+0x24]
  4580e9:	shld   edx,eax,0x1e
  4580ed:	shl    eax,0x1e
  4580f0:	or     eax,DWORD PTR [esp]
  4580f3:	or     edx,DWORD PTR [esp+0x4]
  4580f7:	add    esp,0x8
  4580fa:	xor    eax,DWORD PTR [esp]
  4580fd:	xor    edx,DWORD PTR [esp+0x4]
  458101:	add    esp,0x8
  458104:	push   edx
  458105:	push   eax
  458106:	mov    eax,DWORD PTR [esp+0x1c]
  45810a:	shr    eax,0x7
  45810d:	xor    edx,edx
  45810f:	push   edx
  458110:	push   eax
  458111:	mov    eax,DWORD PTR [esp+0x20]
  458115:	mov    edx,DWORD PTR [esp+0x24]
  458119:	shld   edx,eax,0x19
  45811d:	shl    eax,0x19
  458120:	or     eax,DWORD PTR [esp]
  458123:	or     edx,DWORD PTR [esp+0x4]
  458127:	add    esp,0x8
  45812a:	xor    eax,DWORD PTR [esp]
  45812d:	xor    edx,DWORD PTR [esp+0x4]
  458131:	add    esp,0x8
  458134:	push   edx
  458135:	push   eax
  458136:	mov    eax,DWORD PTR [esp+0x18]
  45813a:	mov    edx,DWORD PTR [esp+0x1c]
  45813e:	and    eax,DWORD PTR [esp+0x20]
  458142:	and    edx,DWORD PTR [esp+0x24]
  458146:	push   edx
  458147:	push   eax
  458148:	mov    eax,DWORD PTR [esp+0x20]
  45814c:	mov    edx,DWORD PTR [esp+0x24]
  458150:	and    eax,DWORD PTR [esp+0x30]
  458154:	and    edx,DWORD PTR [esp+0x34]
  458158:	xor    eax,DWORD PTR [esp]
  45815b:	xor    edx,DWORD PTR [esp+0x4]
  45815f:	add    esp,0x8
  458162:	push   edx
  458163:	push   eax
  458164:	mov    eax,DWORD PTR [esp+0x28]
  458168:	mov    edx,DWORD PTR [esp+0x2c]
  45816c:	and    eax,DWORD PTR [esp+0x30]
  458170:	and    edx,DWORD PTR [esp+0x34]
  458174:	xor    eax,DWORD PTR [esp]
  458177:	xor    edx,DWORD PTR [esp+0x4]
  45817b:	add    esp,0x8
  45817e:	add    eax,DWORD PTR [esp]
  458181:	adc    edx,DWORD PTR [esp+0x4]
  458185:	add    esp,0x8
  458188:	mov    DWORD PTR [esp+0x48],eax
  45818c:	mov    DWORD PTR [esp+0x4c],edx
  458190:	mov    eax,DWORD PTR [esp+0x28]
  458194:	mov    edx,DWORD PTR [esp+0x2c]
  458198:	add    eax,DWORD PTR [esp+0x40]
  45819c:	adc    edx,DWORD PTR [esp+0x44]
  4581a0:	mov    DWORD PTR [esp+0x28],eax
  4581a4:	mov    DWORD PTR [esp+0x2c],edx
  4581a8:	mov    eax,DWORD PTR [esp+0x40]
  4581ac:	mov    edx,DWORD PTR [esp+0x44]
  4581b0:	add    eax,DWORD PTR [esp+0x48]
  4581b4:	adc    edx,DWORD PTR [esp+0x4c]
  4581b8:	mov    DWORD PTR [esp+0x8],eax
  4581bc:	mov    DWORD PTR [esp+0xc],edx
  4581c0:	mov    eax,DWORD PTR [esp+0x28]
  4581c4:	mov    edx,DWORD PTR [esp+0x2c]
  4581c8:	shrd   eax,edx,0xe
  4581cc:	shr    edx,0xe
  4581cf:	push   edx
  4581d0:	push   eax
  4581d1:	mov    edx,DWORD PTR [esp+0x30]
  4581d5:	shl    edx,0x12
  4581d8:	xor    eax,eax
  4581da:	or     eax,DWORD PTR [esp]
  4581dd:	or     edx,DWORD PTR [esp+0x4]
  4581e1:	add    esp,0x8
  4581e4:	push   edx
  4581e5:	push   eax
  4581e6:	mov    eax,DWORD PTR [esp+0x30]
  4581ea:	mov    edx,DWORD PTR [esp+0x34]
  4581ee:	shrd   eax,edx,0x12
  4581f2:	shr    edx,0x12
  4581f5:	push   edx
  4581f6:	push   eax
  4581f7:	mov    edx,DWORD PTR [esp+0x38]
  4581fb:	shl    edx,0xe
  4581fe:	xor    eax,eax
  458200:	or     eax,DWORD PTR [esp]
  458203:	or     edx,DWORD PTR [esp+0x4]
  458207:	add    esp,0x8
  45820a:	xor    eax,DWORD PTR [esp]
  45820d:	xor    edx,DWORD PTR [esp+0x4]
  458211:	add    esp,0x8
  458214:	push   edx
  458215:	push   eax
  458216:	mov    eax,DWORD PTR [esp+0x34]
  45821a:	shr    eax,0x9
  45821d:	xor    edx,edx
  45821f:	push   edx
  458220:	push   eax
  458221:	mov    eax,DWORD PTR [esp+0x38]
  458225:	mov    edx,DWORD PTR [esp+0x3c]
  458229:	shld   edx,eax,0x17
  45822d:	shl    eax,0x17
  458230:	or     eax,DWORD PTR [esp]
  458233:	or     edx,DWORD PTR [esp+0x4]
  458237:	add    esp,0x8
  45823a:	xor    eax,DWORD PTR [esp]
  45823d:	xor    edx,DWORD PTR [esp+0x4]
  458241:	add    esp,0x8
  458244:	add    eax,DWORD PTR [esp]
  458247:	adc    edx,DWORD PTR [esp+0x4]
  45824b:	push   edx
  45824c:	push   eax
  45824d:	mov    eax,DWORD PTR [esp+0x30]
  458251:	mov    edx,DWORD PTR [esp+0x34]
  458255:	and    eax,DWORD PTR [esp+0x38]
  458259:	and    edx,DWORD PTR [esp+0x3c]
  45825d:	push   edx
  45825e:	push   eax
  45825f:	mov    eax,DWORD PTR [esp+0x38]
  458263:	mov    edx,DWORD PTR [esp+0x3c]
  458267:	not    eax
  458269:	not    edx
  45826b:	and    eax,DWORD PTR [esp+0x48]
  45826f:	and    edx,DWORD PTR [esp+0x4c]
  458273:	xor    eax,DWORD PTR [esp]
  458276:	xor    edx,DWORD PTR [esp+0x4]
  45827a:	add    esp,0x8
  45827d:	add    eax,DWORD PTR [esp]
  458280:	adc    edx,DWORD PTR [esp+0x4]
  458284:	add    esp,0x8
  458287:	add    eax,0x1482353b
  45828c:	adc    edx,0x92722c85
  458292:	add    eax,DWORD PTR [esp+0x188]
  458299:	adc    edx,DWORD PTR [esp+0x18c]
  4582a0:	mov    DWORD PTR [esp+0x40],eax
  4582a4:	mov    DWORD PTR [esp+0x44],edx
  4582a8:	mov    eax,DWORD PTR [esp+0x8]
  4582ac:	mov    edx,DWORD PTR [esp+0xc]
  4582b0:	shrd   eax,edx,0x1c
  4582b4:	shr    edx,0x1c
  4582b7:	push   edx
  4582b8:	push   eax
  4582b9:	mov    edx,DWORD PTR [esp+0x10]
  4582bd:	shl    edx,0x4
  4582c0:	xor    eax,eax
  4582c2:	or     eax,DWORD PTR [esp]
  4582c5:	or     edx,DWORD PTR [esp+0x4]
  4582c9:	add    esp,0x8
  4582cc:	push   edx
  4582cd:	push   eax
  4582ce:	mov    eax,DWORD PTR [esp+0x14]
  4582d2:	shr    eax,0x2
  4582d5:	xor    edx,edx
  4582d7:	push   edx
  4582d8:	push   eax
  4582d9:	mov    eax,DWORD PTR [esp+0x18]
  4582dd:	mov    edx,DWORD PTR [esp+0x1c]
  4582e1:	shld   edx,eax,0x1e
  4582e5:	shl    eax,0x1e
  4582e8:	or     eax,DWORD PTR [esp]
  4582eb:	or     edx,DWORD PTR [esp+0x4]
  4582ef:	add    esp,0x8
  4582f2:	xor    eax,DWORD PTR [esp]
  4582f5:	xor    edx,DWORD PTR [esp+0x4]
  4582f9:	add    esp,0x8
  4582fc:	push   edx
  4582fd:	push   eax
  4582fe:	mov    eax,DWORD PTR [esp+0x14]
  458302:	shr    eax,0x7
  458305:	xor    edx,edx
  458307:	push   edx
  458308:	push   eax
  458309:	mov    eax,DWORD PTR [esp+0x18]
  45830d:	mov    edx,DWORD PTR [esp+0x1c]
  458311:	shld   edx,eax,0x19
  458315:	shl    eax,0x19
  458318:	or     eax,DWORD PTR [esp]
  45831b:	or     edx,DWORD PTR [esp+0x4]
  45831f:	add    esp,0x8
  458322:	xor    eax,DWORD PTR [esp]
  458325:	xor    edx,DWORD PTR [esp+0x4]
  458329:	add    esp,0x8
  45832c:	push   edx
  45832d:	push   eax
  45832e:	mov    eax,DWORD PTR [esp+0x10]
  458332:	mov    edx,DWORD PTR [esp+0x14]
  458336:	and    eax,DWORD PTR [esp+0x18]
  45833a:	and    edx,DWORD PTR [esp+0x1c]
  45833e:	push   edx
  45833f:	push   eax
  458340:	mov    eax,DWORD PTR [esp+0x18]
  458344:	mov    edx,DWORD PTR [esp+0x1c]
  458348:	and    eax,DWORD PTR [esp+0x28]
  45834c:	and    edx,DWORD PTR [esp+0x2c]
  458350:	xor    eax,DWORD PTR [esp]
  458353:	xor    edx,DWORD PTR [esp+0x4]
  458357:	add    esp,0x8
  45835a:	push   edx
  45835b:	push   eax
  45835c:	mov    eax,DWORD PTR [esp+0x20]
  458360:	mov    edx,DWORD PTR [esp+0x24]
  458364:	and    eax,DWORD PTR [esp+0x28]
  458368:	and    edx,DWORD PTR [esp+0x2c]
  45836c:	xor    eax,DWORD PTR [esp]
  45836f:	xor    edx,DWORD PTR [esp+0x4]
  458373:	add    esp,0x8
  458376:	add    eax,DWORD PTR [esp]
  458379:	adc    edx,DWORD PTR [esp+0x4]
  45837d:	add    esp,0x8
  458380:	mov    DWORD PTR [esp+0x48],eax
  458384:	mov    DWORD PTR [esp+0x4c],edx
  458388:	mov    eax,DWORD PTR [esp+0x20]
  45838c:	mov    edx,DWORD PTR [esp+0x24]
  458390:	add    eax,DWORD PTR [esp+0x40]
  458394:	adc    edx,DWORD PTR [esp+0x44]
  458398:	mov    DWORD PTR [esp+0x20],eax
  45839c:	mov    DWORD PTR [esp+0x24],edx
  4583a0:	mov    eax,DWORD PTR [esp+0x40]
  4583a4:	mov    edx,DWORD PTR [esp+0x44]
  4583a8:	add    eax,DWORD PTR [esp+0x48]
  4583ac:	adc    edx,DWORD PTR [esp+0x4c]
  4583b0:	mov    DWORD PTR [esp],eax
  4583b3:	mov    DWORD PTR [esp+0x4],edx
  4583b7:	mov    eax,DWORD PTR [esp+0x20]
  4583bb:	mov    edx,DWORD PTR [esp+0x24]
  4583bf:	shrd   eax,edx,0xe
  4583c3:	shr    edx,0xe
  4583c6:	push   edx
  4583c7:	push   eax
  4583c8:	mov    edx,DWORD PTR [esp+0x28]
  4583cc:	shl    edx,0x12
  4583cf:	xor    eax,eax
  4583d1:	or     eax,DWORD PTR [esp]
  4583d4:	or     edx,DWORD PTR [esp+0x4]
  4583d8:	add    esp,0x8
  4583db:	push   edx
  4583dc:	push   eax
  4583dd:	mov    eax,DWORD PTR [esp+0x28]
  4583e1:	mov    edx,DWORD PTR [esp+0x2c]
  4583e5:	shrd   eax,edx,0x12
  4583e9:	shr    edx,0x12
  4583ec:	push   edx
  4583ed:	push   eax
  4583ee:	mov    edx,DWORD PTR [esp+0x30]
  4583f2:	shl    edx,0xe
  4583f5:	xor    eax,eax
  4583f7:	or     eax,DWORD PTR [esp]
  4583fa:	or     edx,DWORD PTR [esp+0x4]
  4583fe:	add    esp,0x8
  458401:	xor    eax,DWORD PTR [esp]
  458404:	xor    edx,DWORD PTR [esp+0x4]
  458408:	add    esp,0x8
  45840b:	push   edx
  45840c:	push   eax
  45840d:	mov    eax,DWORD PTR [esp+0x2c]
  458411:	shr    eax,0x9
  458414:	xor    edx,edx
  458416:	push   edx
  458417:	push   eax
  458418:	mov    eax,DWORD PTR [esp+0x30]
  45841c:	mov    edx,DWORD PTR [esp+0x34]
  458420:	shld   edx,eax,0x17
  458424:	shl    eax,0x17
  458427:	or     eax,DWORD PTR [esp]
  45842a:	or     edx,DWORD PTR [esp+0x4]
  45842e:	add    esp,0x8
  458431:	xor    eax,DWORD PTR [esp]
  458434:	xor    edx,DWORD PTR [esp+0x4]
  458438:	add    esp,0x8
  45843b:	add    eax,DWORD PTR [esp+0x38]
  45843f:	adc    edx,DWORD PTR [esp+0x3c]
  458443:	push   edx
  458444:	push   eax
  458445:	mov    eax,DWORD PTR [esp+0x28]
  458449:	mov    edx,DWORD PTR [esp+0x2c]
  45844d:	and    eax,DWORD PTR [esp+0x30]
  458451:	and    edx,DWORD PTR [esp+0x34]
  458455:	push   edx
  458456:	push   eax
  458457:	mov    eax,DWORD PTR [esp+0x30]
  45845b:	mov    edx,DWORD PTR [esp+0x34]
  45845f:	not    eax
  458461:	not    edx
  458463:	and    eax,DWORD PTR [esp+0x40]
  458467:	and    edx,DWORD PTR [esp+0x44]
  45846b:	xor    eax,DWORD PTR [esp]
  45846e:	xor    edx,DWORD PTR [esp+0x4]
  458472:	add    esp,0x8
  458475:	add    eax,DWORD PTR [esp]
  458478:	adc    edx,DWORD PTR [esp+0x4]
  45847c:	add    esp,0x8
  45847f:	add    eax,0x4cf10364
  458484:	adc    edx,0xa2bfe8a1
  45848a:	add    eax,DWORD PTR [esp+0x190]
  458491:	adc    edx,DWORD PTR [esp+0x194]
  458498:	mov    DWORD PTR [esp+0x40],eax
  45849c:	mov    DWORD PTR [esp+0x44],edx
  4584a0:	mov    eax,DWORD PTR [esp]
  4584a3:	mov    edx,DWORD PTR [esp+0x4]
  4584a7:	shrd   eax,edx,0x1c
  4584ab:	shr    edx,0x1c
  4584ae:	push   edx
  4584af:	push   eax
  4584b0:	mov    edx,DWORD PTR [esp+0x8]
  4584b4:	shl    edx,0x4
  4584b7:	xor    eax,eax
  4584b9:	or     eax,DWORD PTR [esp]
  4584bc:	or     edx,DWORD PTR [esp+0x4]
  4584c0:	add    esp,0x8
  4584c3:	push   edx
  4584c4:	push   eax
  4584c5:	mov    eax,DWORD PTR [esp+0xc]
  4584c9:	shr    eax,0x2
  4584cc:	xor    edx,edx
  4584ce:	push   edx
  4584cf:	push   eax
  4584d0:	mov    eax,DWORD PTR [esp+0x10]
  4584d4:	mov    edx,DWORD PTR [esp+0x14]
  4584d8:	shld   edx,eax,0x1e
  4584dc:	shl    eax,0x1e
  4584df:	or     eax,DWORD PTR [esp]
  4584e2:	or     edx,DWORD PTR [esp+0x4]
  4584e6:	add    esp,0x8
  4584e9:	xor    eax,DWORD PTR [esp]
  4584ec:	xor    edx,DWORD PTR [esp+0x4]
  4584f0:	add    esp,0x8
  4584f3:	push   edx
  4584f4:	push   eax
  4584f5:	mov    eax,DWORD PTR [esp+0xc]
  4584f9:	shr    eax,0x7
  4584fc:	xor    edx,edx
  4584fe:	push   edx
  4584ff:	push   eax
  458500:	mov    eax,DWORD PTR [esp+0x10]
  458504:	mov    edx,DWORD PTR [esp+0x14]
  458508:	shld   edx,eax,0x19
  45850c:	shl    eax,0x19
  45850f:	or     eax,DWORD PTR [esp]
  458512:	or     edx,DWORD PTR [esp+0x4]
  458516:	add    esp,0x8
  458519:	xor    eax,DWORD PTR [esp]
  45851c:	xor    edx,DWORD PTR [esp+0x4]
  458520:	add    esp,0x8
  458523:	push   edx
  458524:	push   eax
  458525:	mov    eax,DWORD PTR [esp+0x8]
  458529:	mov    edx,DWORD PTR [esp+0xc]
  45852d:	and    eax,DWORD PTR [esp+0x10]
  458531:	and    edx,DWORD PTR [esp+0x14]
  458535:	push   edx
  458536:	push   eax
  458537:	mov    eax,DWORD PTR [esp+0x10]
  45853b:	mov    edx,DWORD PTR [esp+0x14]
  45853f:	and    eax,DWORD PTR [esp+0x20]
  458543:	and    edx,DWORD PTR [esp+0x24]
  458547:	xor    eax,DWORD PTR [esp]
  45854a:	xor    edx,DWORD PTR [esp+0x4]
  45854e:	add    esp,0x8
  458551:	push   edx
  458552:	push   eax
  458553:	mov    eax,DWORD PTR [esp+0x18]
  458557:	mov    edx,DWORD PTR [esp+0x1c]
  45855b:	and    eax,DWORD PTR [esp+0x20]
  45855f:	and    edx,DWORD PTR [esp+0x24]
  458563:	xor    eax,DWORD PTR [esp]
  458566:	xor    edx,DWORD PTR [esp+0x4]
  45856a:	add    esp,0x8
  45856d:	add    eax,DWORD PTR [esp]
  458570:	adc    edx,DWORD PTR [esp+0x4]
  458574:	add    esp,0x8
  458577:	mov    DWORD PTR [esp+0x48],eax
  45857b:	mov    DWORD PTR [esp+0x4c],edx
  45857f:	mov    eax,DWORD PTR [esp+0x18]
  458583:	mov    edx,DWORD PTR [esp+0x1c]
  458587:	add    eax,DWORD PTR [esp+0x40]
  45858b:	adc    edx,DWORD PTR [esp+0x44]
  45858f:	mov    DWORD PTR [esp+0x18],eax
  458593:	mov    DWORD PTR [esp+0x1c],edx
  458597:	mov    eax,DWORD PTR [esp+0x40]
  45859b:	mov    edx,DWORD PTR [esp+0x44]
  45859f:	add    eax,DWORD PTR [esp+0x48]
  4585a3:	adc    edx,DWORD PTR [esp+0x4c]
  4585a7:	mov    DWORD PTR [esp+0x38],eax
  4585ab:	mov    DWORD PTR [esp+0x3c],edx
  4585af:	mov    eax,DWORD PTR [esp+0x18]
  4585b3:	mov    edx,DWORD PTR [esp+0x1c]
  4585b7:	shrd   eax,edx,0xe
  4585bb:	shr    edx,0xe
  4585be:	push   edx
  4585bf:	push   eax
  4585c0:	mov    edx,DWORD PTR [esp+0x20]
  4585c4:	shl    edx,0x12
  4585c7:	xor    eax,eax
  4585c9:	or     eax,DWORD PTR [esp]
  4585cc:	or     edx,DWORD PTR [esp+0x4]
  4585d0:	add    esp,0x8
  4585d3:	push   edx
  4585d4:	push   eax
  4585d5:	mov    eax,DWORD PTR [esp+0x20]
  4585d9:	mov    edx,DWORD PTR [esp+0x24]
  4585dd:	shrd   eax,edx,0x12
  4585e1:	shr    edx,0x12
  4585e4:	push   edx
  4585e5:	push   eax
  4585e6:	mov    edx,DWORD PTR [esp+0x28]
  4585ea:	shl    edx,0xe
  4585ed:	xor    eax,eax
  4585ef:	or     eax,DWORD PTR [esp]
  4585f2:	or     edx,DWORD PTR [esp+0x4]
  4585f6:	add    esp,0x8
  4585f9:	xor    eax,DWORD PTR [esp]
  4585fc:	xor    edx,DWORD PTR [esp+0x4]
  458600:	add    esp,0x8
  458603:	push   edx
  458604:	push   eax
  458605:	mov    eax,DWORD PTR [esp+0x24]
  458609:	shr    eax,0x9
  45860c:	xor    edx,edx
  45860e:	push   edx
  45860f:	push   eax
  458610:	mov    eax,DWORD PTR [esp+0x28]
  458614:	mov    edx,DWORD PTR [esp+0x2c]
  458618:	shld   edx,eax,0x17
  45861c:	shl    eax,0x17
  45861f:	or     eax,DWORD PTR [esp]
  458622:	or     edx,DWORD PTR [esp+0x4]
  458626:	add    esp,0x8
  458629:	xor    eax,DWORD PTR [esp]
  45862c:	xor    edx,DWORD PTR [esp+0x4]
  458630:	add    esp,0x8
  458633:	add    eax,DWORD PTR [esp+0x30]
  458637:	adc    edx,DWORD PTR [esp+0x34]
  45863b:	push   edx
  45863c:	push   eax
  45863d:	mov    eax,DWORD PTR [esp+0x20]
  458641:	mov    edx,DWORD PTR [esp+0x24]
  458645:	and    eax,DWORD PTR [esp+0x28]
  458649:	and    edx,DWORD PTR [esp+0x2c]
  45864d:	push   edx
  45864e:	push   eax
  45864f:	mov    eax,DWORD PTR [esp+0x28]
  458653:	mov    edx,DWORD PTR [esp+0x2c]
  458657:	not    eax
  458659:	not    edx
  45865b:	and    eax,DWORD PTR [esp+0x38]
  45865f:	and    edx,DWORD PTR [esp+0x3c]
  458663:	xor    eax,DWORD PTR [esp]
  458666:	xor    edx,DWORD PTR [esp+0x4]
  45866a:	add    esp,0x8
  45866d:	add    eax,DWORD PTR [esp]
  458670:	adc    edx,DWORD PTR [esp+0x4]
  458674:	add    esp,0x8
  458677:	add    eax,0xbc423001
  45867c:	adc    edx,0xa81a664b
  458682:	add    eax,DWORD PTR [esp+0x198]
  458689:	adc    edx,DWORD PTR [esp+0x19c]
  458690:	mov    DWORD PTR [esp+0x40],eax
  458694:	mov    DWORD PTR [esp+0x44],edx
  458698:	mov    eax,DWORD PTR [esp+0x38]
  45869c:	mov    edx,DWORD PTR [esp+0x3c]
  4586a0:	shrd   eax,edx,0x1c
  4586a4:	shr    edx,0x1c
  4586a7:	push   edx
  4586a8:	push   eax
  4586a9:	mov    edx,DWORD PTR [esp+0x40]
  4586ad:	shl    edx,0x4
  4586b0:	xor    eax,eax
  4586b2:	or     eax,DWORD PTR [esp]
  4586b5:	or     edx,DWORD PTR [esp+0x4]
  4586b9:	add    esp,0x8
  4586bc:	push   edx
  4586bd:	push   eax
  4586be:	mov    eax,DWORD PTR [esp+0x44]
  4586c2:	shr    eax,0x2
  4586c5:	xor    edx,edx
  4586c7:	push   edx
  4586c8:	push   eax
  4586c9:	mov    eax,DWORD PTR [esp+0x48]
  4586cd:	mov    edx,DWORD PTR [esp+0x4c]
  4586d1:	shld   edx,eax,0x1e
  4586d5:	shl    eax,0x1e
  4586d8:	or     eax,DWORD PTR [esp]
  4586db:	or     edx,DWORD PTR [esp+0x4]
  4586df:	add    esp,0x8
  4586e2:	xor    eax,DWORD PTR [esp]
  4586e5:	xor    edx,DWORD PTR [esp+0x4]
  4586e9:	add    esp,0x8
  4586ec:	push   edx
  4586ed:	push   eax
  4586ee:	mov    eax,DWORD PTR [esp+0x44]
  4586f2:	shr    eax,0x7
  4586f5:	xor    edx,edx
  4586f7:	push   edx
  4586f8:	push   eax
  4586f9:	mov    eax,DWORD PTR [esp+0x48]
  4586fd:	mov    edx,DWORD PTR [esp+0x4c]
  458701:	shld   edx,eax,0x19
  458705:	shl    eax,0x19
  458708:	or     eax,DWORD PTR [esp]
  45870b:	or     edx,DWORD PTR [esp+0x4]
  45870f:	add    esp,0x8
  458712:	xor    eax,DWORD PTR [esp]
  458715:	xor    edx,DWORD PTR [esp+0x4]
  458719:	add    esp,0x8
  45871c:	push   edx
  45871d:	push   eax
  45871e:	mov    eax,DWORD PTR [esp+0x40]
  458722:	mov    edx,DWORD PTR [esp+0x44]
  458726:	and    eax,DWORD PTR [esp+0x8]
  45872a:	and    edx,DWORD PTR [esp+0xc]
  45872e:	push   edx
  45872f:	push   eax
  458730:	mov    eax,DWORD PTR [esp+0x48]
  458734:	mov    edx,DWORD PTR [esp+0x4c]
  458738:	and    eax,DWORD PTR [esp+0x18]
  45873c:	and    edx,DWORD PTR [esp+0x1c]
  458740:	xor    eax,DWORD PTR [esp]
  458743:	xor    edx,DWORD PTR [esp+0x4]
  458747:	add    esp,0x8
  45874a:	push   edx
  45874b:	push   eax
  45874c:	mov    eax,DWORD PTR [esp+0x10]
  458750:	mov    edx,DWORD PTR [esp+0x14]
  458754:	and    eax,DWORD PTR [esp+0x18]
  458758:	and    edx,DWORD PTR [esp+0x1c]
  45875c:	xor    eax,DWORD PTR [esp]
  45875f:	xor    edx,DWORD PTR [esp+0x4]
  458763:	add    esp,0x8
  458766:	add    eax,DWORD PTR [esp]
  458769:	adc    edx,DWORD PTR [esp+0x4]
  45876d:	add    esp,0x8
  458770:	mov    DWORD PTR [esp+0x48],eax
  458774:	mov    DWORD PTR [esp+0x4c],edx
  458778:	mov    eax,DWORD PTR [esp+0x10]
  45877c:	mov    edx,DWORD PTR [esp+0x14]
  458780:	add    eax,DWORD PTR [esp+0x40]
  458784:	adc    edx,DWORD PTR [esp+0x44]
  458788:	mov    DWORD PTR [esp+0x10],eax
  45878c:	mov    DWORD PTR [esp+0x14],edx
  458790:	mov    eax,DWORD PTR [esp+0x40]
  458794:	mov    edx,DWORD PTR [esp+0x44]
  458798:	add    eax,DWORD PTR [esp+0x48]
  45879c:	adc    edx,DWORD PTR [esp+0x4c]
  4587a0:	mov    DWORD PTR [esp+0x30],eax
  4587a4:	mov    DWORD PTR [esp+0x34],edx
  4587a8:	mov    eax,DWORD PTR [esp+0x10]
  4587ac:	mov    edx,DWORD PTR [esp+0x14]
  4587b0:	shrd   eax,edx,0xe
  4587b4:	shr    edx,0xe
  4587b7:	push   edx
  4587b8:	push   eax
  4587b9:	mov    edx,DWORD PTR [esp+0x18]
  4587bd:	shl    edx,0x12
  4587c0:	xor    eax,eax
  4587c2:	or     eax,DWORD PTR [esp]
  4587c5:	or     edx,DWORD PTR [esp+0x4]
  4587c9:	add    esp,0x8
  4587cc:	push   edx
  4587cd:	push   eax
  4587ce:	mov    eax,DWORD PTR [esp+0x18]
  4587d2:	mov    edx,DWORD PTR [esp+0x1c]
  4587d6:	shrd   eax,edx,0x12
  4587da:	shr    edx,0x12
  4587dd:	push   edx
  4587de:	push   eax
  4587df:	mov    edx,DWORD PTR [esp+0x20]
  4587e3:	shl    edx,0xe
  4587e6:	xor    eax,eax
  4587e8:	or     eax,DWORD PTR [esp]
  4587eb:	or     edx,DWORD PTR [esp+0x4]
  4587ef:	add    esp,0x8
  4587f2:	xor    eax,DWORD PTR [esp]
  4587f5:	xor    edx,DWORD PTR [esp+0x4]
  4587f9:	add    esp,0x8
  4587fc:	push   edx
  4587fd:	push   eax
  4587fe:	mov    eax,DWORD PTR [esp+0x1c]
  458802:	shr    eax,0x9
  458805:	xor    edx,edx
  458807:	push   edx
  458808:	push   eax
  458809:	mov    eax,DWORD PTR [esp+0x20]
  45880d:	mov    edx,DWORD PTR [esp+0x24]
  458811:	shld   edx,eax,0x17
  458815:	shl    eax,0x17
  458818:	or     eax,DWORD PTR [esp]
  45881b:	or     edx,DWORD PTR [esp+0x4]
  45881f:	add    esp,0x8
  458822:	xor    eax,DWORD PTR [esp]
  458825:	xor    edx,DWORD PTR [esp+0x4]
  458829:	add    esp,0x8
  45882c:	add    eax,DWORD PTR [esp+0x28]
  458830:	adc    edx,DWORD PTR [esp+0x2c]
  458834:	push   edx
  458835:	push   eax
  458836:	mov    eax,DWORD PTR [esp+0x18]
  45883a:	mov    edx,DWORD PTR [esp+0x1c]
  45883e:	and    eax,DWORD PTR [esp+0x20]
  458842:	and    edx,DWORD PTR [esp+0x24]
  458846:	push   edx
  458847:	push   eax
  458848:	mov    eax,DWORD PTR [esp+0x20]
  45884c:	mov    edx,DWORD PTR [esp+0x24]
  458850:	not    eax
  458852:	not    edx
  458854:	and    eax,DWORD PTR [esp+0x30]
  458858:	and    edx,DWORD PTR [esp+0x34]
  45885c:	xor    eax,DWORD PTR [esp]
  45885f:	xor    edx,DWORD PTR [esp+0x4]
  458863:	add    esp,0x8
  458866:	add    eax,DWORD PTR [esp]
  458869:	adc    edx,DWORD PTR [esp+0x4]
  45886d:	add    esp,0x8
  458870:	add    eax,0xd0f89791
  458875:	adc    edx,0xc24b8b70
  45887b:	add    eax,DWORD PTR [esp+0x1a0]
  458882:	adc    edx,DWORD PTR [esp+0x1a4]
  458889:	mov    DWORD PTR [esp+0x40],eax
  45888d:	mov    DWORD PTR [esp+0x44],edx
  458891:	mov    eax,DWORD PTR [esp+0x30]
  458895:	mov    edx,DWORD PTR [esp+0x34]
  458899:	shrd   eax,edx,0x1c
  45889d:	shr    edx,0x1c
  4588a0:	push   edx
  4588a1:	push   eax
  4588a2:	mov    edx,DWORD PTR [esp+0x38]
  4588a6:	shl    edx,0x4
  4588a9:	xor    eax,eax
  4588ab:	or     eax,DWORD PTR [esp]
  4588ae:	or     edx,DWORD PTR [esp+0x4]
  4588b2:	add    esp,0x8
  4588b5:	push   edx
  4588b6:	push   eax
  4588b7:	mov    eax,DWORD PTR [esp+0x3c]
  4588bb:	shr    eax,0x2
  4588be:	xor    edx,edx
  4588c0:	push   edx
  4588c1:	push   eax
  4588c2:	mov    eax,DWORD PTR [esp+0x40]
  4588c6:	mov    edx,DWORD PTR [esp+0x44]
  4588ca:	shld   edx,eax,0x1e
  4588ce:	shl    eax,0x1e
  4588d1:	or     eax,DWORD PTR [esp]
  4588d4:	or     edx,DWORD PTR [esp+0x4]
  4588d8:	add    esp,0x8
  4588db:	xor    eax,DWORD PTR [esp]
  4588de:	xor    edx,DWORD PTR [esp+0x4]
  4588e2:	add    esp,0x8
  4588e5:	push   edx
  4588e6:	push   eax
  4588e7:	mov    eax,DWORD PTR [esp+0x3c]
  4588eb:	shr    eax,0x7
  4588ee:	xor    edx,edx
  4588f0:	push   edx
  4588f1:	push   eax
  4588f2:	mov    eax,DWORD PTR [esp+0x40]
  4588f6:	mov    edx,DWORD PTR [esp+0x44]
  4588fa:	shld   edx,eax,0x19
  4588fe:	shl    eax,0x19
  458901:	or     eax,DWORD PTR [esp]
  458904:	or     edx,DWORD PTR [esp+0x4]
  458908:	add    esp,0x8
  45890b:	xor    eax,DWORD PTR [esp]
  45890e:	xor    edx,DWORD PTR [esp+0x4]
  458912:	add    esp,0x8
  458915:	push   edx
  458916:	push   eax
  458917:	mov    eax,DWORD PTR [esp+0x38]
  45891b:	mov    edx,DWORD PTR [esp+0x3c]
  45891f:	and    eax,DWORD PTR [esp+0x40]
  458923:	and    edx,DWORD PTR [esp+0x44]
  458927:	push   edx
  458928:	push   eax
  458929:	mov    eax,DWORD PTR [esp+0x40]
  45892d:	mov    edx,DWORD PTR [esp+0x44]
  458931:	and    eax,DWORD PTR [esp+0x10]
  458935:	and    edx,DWORD PTR [esp+0x14]
  458939:	xor    eax,DWORD PTR [esp]
  45893c:	xor    edx,DWORD PTR [esp+0x4]
  458940:	add    esp,0x8
  458943:	push   edx
  458944:	push   eax
  458945:	mov    eax,DWORD PTR [esp+0x48]
  458949:	mov    edx,DWORD PTR [esp+0x4c]
  45894d:	and    eax,DWORD PTR [esp+0x10]
  458951:	and    edx,DWORD PTR [esp+0x14]
  458955:	xor    eax,DWORD PTR [esp]
  458958:	xor    edx,DWORD PTR [esp+0x4]
  45895c:	add    esp,0x8
  45895f:	add    eax,DWORD PTR [esp]
  458962:	adc    edx,DWORD PTR [esp+0x4]
  458966:	add    esp,0x8
  458969:	mov    DWORD PTR [esp+0x48],eax
  45896d:	mov    DWORD PTR [esp+0x4c],edx
  458971:	mov    eax,DWORD PTR [esp+0x8]
  458975:	mov    edx,DWORD PTR [esp+0xc]
  458979:	add    eax,DWORD PTR [esp+0x40]
  45897d:	adc    edx,DWORD PTR [esp+0x44]
  458981:	mov    DWORD PTR [esp+0x8],eax
  458985:	mov    DWORD PTR [esp+0xc],edx
  458989:	mov    eax,DWORD PTR [esp+0x40]
  45898d:	mov    edx,DWORD PTR [esp+0x44]
  458991:	add    eax,DWORD PTR [esp+0x48]
  458995:	adc    edx,DWORD PTR [esp+0x4c]
  458999:	mov    DWORD PTR [esp+0x28],eax
  45899d:	mov    DWORD PTR [esp+0x2c],edx
  4589a1:	mov    eax,DWORD PTR [esp+0x8]
  4589a5:	mov    edx,DWORD PTR [esp+0xc]
  4589a9:	shrd   eax,edx,0xe
  4589ad:	shr    edx,0xe
  4589b0:	push   edx
  4589b1:	push   eax
  4589b2:	mov    edx,DWORD PTR [esp+0x10]
  4589b6:	shl    edx,0x12
  4589b9:	xor    eax,eax
  4589bb:	or     eax,DWORD PTR [esp]
  4589be:	or     edx,DWORD PTR [esp+0x4]
  4589c2:	add    esp,0x8
  4589c5:	push   edx
  4589c6:	push   eax
  4589c7:	mov    eax,DWORD PTR [esp+0x10]
  4589cb:	mov    edx,DWORD PTR [esp+0x14]
  4589cf:	shrd   eax,edx,0x12
  4589d3:	shr    edx,0x12
  4589d6:	push   edx
  4589d7:	push   eax
  4589d8:	mov    edx,DWORD PTR [esp+0x18]
  4589dc:	shl    edx,0xe
  4589df:	xor    eax,eax
  4589e1:	or     eax,DWORD PTR [esp]
  4589e4:	or     edx,DWORD PTR [esp+0x4]
  4589e8:	add    esp,0x8
  4589eb:	xor    eax,DWORD PTR [esp]
  4589ee:	xor    edx,DWORD PTR [esp+0x4]
  4589f2:	add    esp,0x8
  4589f5:	push   edx
  4589f6:	push   eax
  4589f7:	mov    eax,DWORD PTR [esp+0x14]
  4589fb:	shr    eax,0x9
  4589fe:	xor    edx,edx
  458a00:	push   edx
  458a01:	push   eax
  458a02:	mov    eax,DWORD PTR [esp+0x18]
  458a06:	mov    edx,DWORD PTR [esp+0x1c]
  458a0a:	shld   edx,eax,0x17
  458a0e:	shl    eax,0x17
  458a11:	or     eax,DWORD PTR [esp]
  458a14:	or     edx,DWORD PTR [esp+0x4]
  458a18:	add    esp,0x8
  458a1b:	xor    eax,DWORD PTR [esp]
  458a1e:	xor    edx,DWORD PTR [esp+0x4]
  458a22:	add    esp,0x8
  458a25:	add    eax,DWORD PTR [esp+0x20]
  458a29:	adc    edx,DWORD PTR [esp+0x24]
  458a2d:	push   edx
  458a2e:	push   eax
  458a2f:	mov    eax,DWORD PTR [esp+0x10]
  458a33:	mov    edx,DWORD PTR [esp+0x14]
  458a37:	and    eax,DWORD PTR [esp+0x18]
  458a3b:	and    edx,DWORD PTR [esp+0x1c]
  458a3f:	push   edx
  458a40:	push   eax
  458a41:	mov    eax,DWORD PTR [esp+0x18]
  458a45:	mov    edx,DWORD PTR [esp+0x1c]
  458a49:	not    eax
  458a4b:	not    edx
  458a4d:	and    eax,DWORD PTR [esp+0x28]
  458a51:	and    edx,DWORD PTR [esp+0x2c]
  458a55:	xor    eax,DWORD PTR [esp]
  458a58:	xor    edx,DWORD PTR [esp+0x4]
  458a5c:	add    esp,0x8
  458a5f:	add    eax,DWORD PTR [esp]
  458a62:	adc    edx,DWORD PTR [esp+0x4]
  458a66:	add    esp,0x8
  458a69:	add    eax,0x654be30
  458a6e:	adc    edx,0xc76c51a3
  458a74:	add    eax,DWORD PTR [esp+0x1a8]
  458a7b:	adc    edx,DWORD PTR [esp+0x1ac]
  458a82:	mov    DWORD PTR [esp+0x40],eax
  458a86:	mov    DWORD PTR [esp+0x44],edx
  458a8a:	mov    eax,DWORD PTR [esp+0x28]
  458a8e:	mov    edx,DWORD PTR [esp+0x2c]
  458a92:	shrd   eax,edx,0x1c
  458a96:	shr    edx,0x1c
  458a99:	push   edx
  458a9a:	push   eax
  458a9b:	mov    edx,DWORD PTR [esp+0x30]
  458a9f:	shl    edx,0x4
  458aa2:	xor    eax,eax
  458aa4:	or     eax,DWORD PTR [esp]
  458aa7:	or     edx,DWORD PTR [esp+0x4]
  458aab:	add    esp,0x8
  458aae:	push   edx
  458aaf:	push   eax
  458ab0:	mov    eax,DWORD PTR [esp+0x34]
  458ab4:	shr    eax,0x2
  458ab7:	xor    edx,edx
  458ab9:	push   edx
  458aba:	push   eax
  458abb:	mov    eax,DWORD PTR [esp+0x38]
  458abf:	mov    edx,DWORD PTR [esp+0x3c]
  458ac3:	shld   edx,eax,0x1e
  458ac7:	shl    eax,0x1e
  458aca:	or     eax,DWORD PTR [esp]
  458acd:	or     edx,DWORD PTR [esp+0x4]
  458ad1:	add    esp,0x8
  458ad4:	xor    eax,DWORD PTR [esp]
  458ad7:	xor    edx,DWORD PTR [esp+0x4]
  458adb:	add    esp,0x8
  458ade:	push   edx
  458adf:	push   eax
  458ae0:	mov    eax,DWORD PTR [esp+0x34]
  458ae4:	shr    eax,0x7
  458ae7:	xor    edx,edx
  458ae9:	push   edx
  458aea:	push   eax
  458aeb:	mov    eax,DWORD PTR [esp+0x38]
  458aef:	mov    edx,DWORD PTR [esp+0x3c]
  458af3:	shld   edx,eax,0x19
  458af7:	shl    eax,0x19
  458afa:	or     eax,DWORD PTR [esp]
  458afd:	or     edx,DWORD PTR [esp+0x4]
  458b01:	add    esp,0x8
  458b04:	xor    eax,DWORD PTR [esp]
  458b07:	xor    edx,DWORD PTR [esp+0x4]
  458b0b:	add    esp,0x8
  458b0e:	push   edx
  458b0f:	push   eax
  458b10:	mov    eax,DWORD PTR [esp+0x30]
  458b14:	mov    edx,DWORD PTR [esp+0x34]
  458b18:	and    eax,DWORD PTR [esp+0x38]
  458b1c:	and    edx,DWORD PTR [esp+0x3c]
  458b20:	push   edx
  458b21:	push   eax
  458b22:	mov    eax,DWORD PTR [esp+0x38]
  458b26:	mov    edx,DWORD PTR [esp+0x3c]
  458b2a:	and    eax,DWORD PTR [esp+0x48]
  458b2e:	and    edx,DWORD PTR [esp+0x4c]
  458b32:	xor    eax,DWORD PTR [esp]
  458b35:	xor    edx,DWORD PTR [esp+0x4]
  458b39:	add    esp,0x8
  458b3c:	push   edx
  458b3d:	push   eax
  458b3e:	mov    eax,DWORD PTR [esp+0x40]
  458b42:	mov    edx,DWORD PTR [esp+0x44]
  458b46:	and    eax,DWORD PTR [esp+0x48]
  458b4a:	and    edx,DWORD PTR [esp+0x4c]
  458b4e:	xor    eax,DWORD PTR [esp]
  458b51:	xor    edx,DWORD PTR [esp+0x4]
  458b55:	add    esp,0x8
  458b58:	add    eax,DWORD PTR [esp]
  458b5b:	adc    edx,DWORD PTR [esp+0x4]
  458b5f:	add    esp,0x8
  458b62:	mov    DWORD PTR [esp+0x48],eax
  458b66:	mov    DWORD PTR [esp+0x4c],edx
  458b6a:	mov    eax,DWORD PTR [esp]
  458b6d:	mov    edx,DWORD PTR [esp+0x4]
  458b71:	add    eax,DWORD PTR [esp+0x40]
  458b75:	adc    edx,DWORD PTR [esp+0x44]
  458b79:	mov    DWORD PTR [esp],eax
  458b7c:	mov    DWORD PTR [esp+0x4],edx
  458b80:	mov    eax,DWORD PTR [esp+0x40]
  458b84:	mov    edx,DWORD PTR [esp+0x44]
  458b88:	add    eax,DWORD PTR [esp+0x48]
  458b8c:	adc    edx,DWORD PTR [esp+0x4c]
  458b90:	mov    DWORD PTR [esp+0x20],eax
  458b94:	mov    DWORD PTR [esp+0x24],edx
  458b98:	mov    eax,DWORD PTR [esp]
  458b9b:	mov    edx,DWORD PTR [esp+0x4]
  458b9f:	shrd   eax,edx,0xe
  458ba3:	shr    edx,0xe
  458ba6:	push   edx
  458ba7:	push   eax
  458ba8:	mov    edx,DWORD PTR [esp+0x8]
  458bac:	shl    edx,0x12
  458baf:	xor    eax,eax
  458bb1:	or     eax,DWORD PTR [esp]
  458bb4:	or     edx,DWORD PTR [esp+0x4]
  458bb8:	add    esp,0x8
  458bbb:	push   edx
  458bbc:	push   eax
  458bbd:	mov    eax,DWORD PTR [esp+0x8]
  458bc1:	mov    edx,DWORD PTR [esp+0xc]
  458bc5:	shrd   eax,edx,0x12
  458bc9:	shr    edx,0x12
  458bcc:	push   edx
  458bcd:	push   eax
  458bce:	mov    edx,DWORD PTR [esp+0x10]
  458bd2:	shl    edx,0xe
  458bd5:	xor    eax,eax
  458bd7:	or     eax,DWORD PTR [esp]
  458bda:	or     edx,DWORD PTR [esp+0x4]
  458bde:	add    esp,0x8
  458be1:	xor    eax,DWORD PTR [esp]
  458be4:	xor    edx,DWORD PTR [esp+0x4]
  458be8:	add    esp,0x8
  458beb:	push   edx
  458bec:	push   eax
  458bed:	mov    eax,DWORD PTR [esp+0xc]
  458bf1:	shr    eax,0x9
  458bf4:	xor    edx,edx
  458bf6:	push   edx
  458bf7:	push   eax
  458bf8:	mov    eax,DWORD PTR [esp+0x10]
  458bfc:	mov    edx,DWORD PTR [esp+0x14]
  458c00:	shld   edx,eax,0x17
  458c04:	shl    eax,0x17
  458c07:	or     eax,DWORD PTR [esp]
  458c0a:	or     edx,DWORD PTR [esp+0x4]
  458c0e:	add    esp,0x8
  458c11:	xor    eax,DWORD PTR [esp]
  458c14:	xor    edx,DWORD PTR [esp+0x4]
  458c18:	add    esp,0x8
  458c1b:	add    eax,DWORD PTR [esp+0x18]
  458c1f:	adc    edx,DWORD PTR [esp+0x1c]
  458c23:	push   edx
  458c24:	push   eax
  458c25:	mov    eax,DWORD PTR [esp+0x8]
  458c29:	mov    edx,DWORD PTR [esp+0xc]
  458c2d:	and    eax,DWORD PTR [esp+0x10]
  458c31:	and    edx,DWORD PTR [esp+0x14]
  458c35:	push   edx
  458c36:	push   eax
  458c37:	mov    eax,DWORD PTR [esp+0x10]
  458c3b:	mov    edx,DWORD PTR [esp+0x14]
  458c3f:	not    eax
  458c41:	not    edx
  458c43:	and    eax,DWORD PTR [esp+0x20]
  458c47:	and    edx,DWORD PTR [esp+0x24]
  458c4b:	xor    eax,DWORD PTR [esp]
  458c4e:	xor    edx,DWORD PTR [esp+0x4]
  458c52:	add    esp,0x8
  458c55:	add    eax,DWORD PTR [esp]
  458c58:	adc    edx,DWORD PTR [esp+0x4]
  458c5c:	add    esp,0x8
  458c5f:	add    eax,0xd6ef5218
  458c64:	adc    edx,0xd192e819
  458c6a:	add    eax,DWORD PTR [esp+0x1b0]
  458c71:	adc    edx,DWORD PTR [esp+0x1b4]
  458c78:	mov    DWORD PTR [esp+0x40],eax
  458c7c:	mov    DWORD PTR [esp+0x44],edx
  458c80:	mov    eax,DWORD PTR [esp+0x20]
  458c84:	mov    edx,DWORD PTR [esp+0x24]
  458c88:	shrd   eax,edx,0x1c
  458c8c:	shr    edx,0x1c
  458c8f:	push   edx
  458c90:	push   eax
  458c91:	mov    edx,DWORD PTR [esp+0x28]
  458c95:	shl    edx,0x4
  458c98:	xor    eax,eax
  458c9a:	or     eax,DWORD PTR [esp]
  458c9d:	or     edx,DWORD PTR [esp+0x4]
  458ca1:	add    esp,0x8
  458ca4:	push   edx
  458ca5:	push   eax
  458ca6:	mov    eax,DWORD PTR [esp+0x2c]
  458caa:	shr    eax,0x2
  458cad:	xor    edx,edx
  458caf:	push   edx
  458cb0:	push   eax
  458cb1:	mov    eax,DWORD PTR [esp+0x30]
  458cb5:	mov    edx,DWORD PTR [esp+0x34]
  458cb9:	shld   edx,eax,0x1e
  458cbd:	shl    eax,0x1e
  458cc0:	or     eax,DWORD PTR [esp]
  458cc3:	or     edx,DWORD PTR [esp+0x4]
  458cc7:	add    esp,0x8
  458cca:	xor    eax,DWORD PTR [esp]
  458ccd:	xor    edx,DWORD PTR [esp+0x4]
  458cd1:	add    esp,0x8
  458cd4:	push   edx
  458cd5:	push   eax
  458cd6:	mov    eax,DWORD PTR [esp+0x2c]
  458cda:	shr    eax,0x7
  458cdd:	xor    edx,edx
  458cdf:	push   edx
  458ce0:	push   eax
  458ce1:	mov    eax,DWORD PTR [esp+0x30]
  458ce5:	mov    edx,DWORD PTR [esp+0x34]
  458ce9:	shld   edx,eax,0x19
  458ced:	shl    eax,0x19
  458cf0:	or     eax,DWORD PTR [esp]
  458cf3:	or     edx,DWORD PTR [esp+0x4]
  458cf7:	add    esp,0x8
  458cfa:	xor    eax,DWORD PTR [esp]
  458cfd:	xor    edx,DWORD PTR [esp+0x4]
  458d01:	add    esp,0x8
  458d04:	push   edx
  458d05:	push   eax
  458d06:	mov    eax,DWORD PTR [esp+0x28]
  458d0a:	mov    edx,DWORD PTR [esp+0x2c]
  458d0e:	and    eax,DWORD PTR [esp+0x30]
  458d12:	and    edx,DWORD PTR [esp+0x34]
  458d16:	push   edx
  458d17:	push   eax
  458d18:	mov    eax,DWORD PTR [esp+0x30]
  458d1c:	mov    edx,DWORD PTR [esp+0x34]
  458d20:	and    eax,DWORD PTR [esp+0x40]
  458d24:	and    edx,DWORD PTR [esp+0x44]
  458d28:	xor    eax,DWORD PTR [esp]
  458d2b:	xor    edx,DWORD PTR [esp+0x4]
  458d2f:	add    esp,0x8
  458d32:	push   edx
  458d33:	push   eax
  458d34:	mov    eax,DWORD PTR [esp+0x38]
  458d38:	mov    edx,DWORD PTR [esp+0x3c]
  458d3c:	and    eax,DWORD PTR [esp+0x40]
  458d40:	and    edx,DWORD PTR [esp+0x44]
  458d44:	xor    eax,DWORD PTR [esp]
  458d47:	xor    edx,DWORD PTR [esp+0x4]
  458d4b:	add    esp,0x8
  458d4e:	add    eax,DWORD PTR [esp]
  458d51:	adc    edx,DWORD PTR [esp+0x4]
  458d55:	add    esp,0x8
  458d58:	mov    DWORD PTR [esp+0x48],eax
  458d5c:	mov    DWORD PTR [esp+0x4c],edx
  458d60:	mov    eax,DWORD PTR [esp+0x38]
  458d64:	mov    edx,DWORD PTR [esp+0x3c]
  458d68:	add    eax,DWORD PTR [esp+0x40]
  458d6c:	adc    edx,DWORD PTR [esp+0x44]
  458d70:	mov    DWORD PTR [esp+0x38],eax
  458d74:	mov    DWORD PTR [esp+0x3c],edx
  458d78:	mov    eax,DWORD PTR [esp+0x40]
  458d7c:	mov    edx,DWORD PTR [esp+0x44]
  458d80:	add    eax,DWORD PTR [esp+0x48]
  458d84:	adc    edx,DWORD PTR [esp+0x4c]
  458d88:	mov    DWORD PTR [esp+0x18],eax
  458d8c:	mov    DWORD PTR [esp+0x1c],edx
  458d90:	mov    eax,DWORD PTR [esp+0x38]
  458d94:	mov    edx,DWORD PTR [esp+0x3c]
  458d98:	shrd   eax,edx,0xe
  458d9c:	shr    edx,0xe
  458d9f:	push   edx
  458da0:	push   eax
  458da1:	mov    edx,DWORD PTR [esp+0x40]
  458da5:	shl    edx,0x12
  458da8:	xor    eax,eax
  458daa:	or     eax,DWORD PTR [esp]
  458dad:	or     edx,DWORD PTR [esp+0x4]
  458db1:	add    esp,0x8
  458db4:	push   edx
  458db5:	push   eax
  458db6:	mov    eax,DWORD PTR [esp+0x40]
  458dba:	mov    edx,DWORD PTR [esp+0x44]
  458dbe:	shrd   eax,edx,0x12
  458dc2:	shr    edx,0x12
  458dc5:	push   edx
  458dc6:	push   eax
  458dc7:	mov    edx,DWORD PTR [esp+0x48]
  458dcb:	shl    edx,0xe
  458dce:	xor    eax,eax
  458dd0:	or     eax,DWORD PTR [esp]
  458dd3:	or     edx,DWORD PTR [esp+0x4]
  458dd7:	add    esp,0x8
  458dda:	xor    eax,DWORD PTR [esp]
  458ddd:	xor    edx,DWORD PTR [esp+0x4]
  458de1:	add    esp,0x8
  458de4:	push   edx
  458de5:	push   eax
  458de6:	mov    eax,DWORD PTR [esp+0x44]
  458dea:	shr    eax,0x9
  458ded:	xor    edx,edx
  458def:	push   edx
  458df0:	push   eax
  458df1:	mov    eax,DWORD PTR [esp+0x48]
  458df5:	mov    edx,DWORD PTR [esp+0x4c]
  458df9:	shld   edx,eax,0x17
  458dfd:	shl    eax,0x17
  458e00:	or     eax,DWORD PTR [esp]
  458e03:	or     edx,DWORD PTR [esp+0x4]
  458e07:	add    esp,0x8
  458e0a:	xor    eax,DWORD PTR [esp]
  458e0d:	xor    edx,DWORD PTR [esp+0x4]
  458e11:	add    esp,0x8
  458e14:	add    eax,DWORD PTR [esp+0x10]
  458e18:	adc    edx,DWORD PTR [esp+0x14]
  458e1c:	push   edx
  458e1d:	push   eax
  458e1e:	mov    eax,DWORD PTR [esp+0x40]
  458e22:	mov    edx,DWORD PTR [esp+0x44]
  458e26:	and    eax,DWORD PTR [esp+0x8]
  458e2a:	and    edx,DWORD PTR [esp+0xc]
  458e2e:	push   edx
  458e2f:	push   eax
  458e30:	mov    eax,DWORD PTR [esp+0x48]
  458e34:	mov    edx,DWORD PTR [esp+0x4c]
  458e38:	not    eax
  458e3a:	not    edx
  458e3c:	and    eax,DWORD PTR [esp+0x18]
  458e40:	and    edx,DWORD PTR [esp+0x1c]
  458e44:	xor    eax,DWORD PTR [esp]
  458e47:	xor    edx,DWORD PTR [esp+0x4]
  458e4b:	add    esp,0x8
  458e4e:	add    eax,DWORD PTR [esp]
  458e51:	adc    edx,DWORD PTR [esp+0x4]
  458e55:	add    esp,0x8
  458e58:	add    eax,0x5565a910
  458e5d:	adc    edx,0xd6990624
  458e63:	add    eax,DWORD PTR [esp+0x1b8]
  458e6a:	adc    edx,DWORD PTR [esp+0x1bc]
  458e71:	mov    DWORD PTR [esp+0x40],eax
  458e75:	mov    DWORD PTR [esp+0x44],edx
  458e79:	mov    eax,DWORD PTR [esp+0x18]
  458e7d:	mov    edx,DWORD PTR [esp+0x1c]
  458e81:	shrd   eax,edx,0x1c
  458e85:	shr    edx,0x1c
  458e88:	push   edx
  458e89:	push   eax
  458e8a:	mov    edx,DWORD PTR [esp+0x20]
  458e8e:	shl    edx,0x4
  458e91:	xor    eax,eax
  458e93:	or     eax,DWORD PTR [esp]
  458e96:	or     edx,DWORD PTR [esp+0x4]
  458e9a:	add    esp,0x8
  458e9d:	push   edx
  458e9e:	push   eax
  458e9f:	mov    eax,DWORD PTR [esp+0x24]
  458ea3:	shr    eax,0x2
  458ea6:	xor    edx,edx
  458ea8:	push   edx
  458ea9:	push   eax
  458eaa:	mov    eax,DWORD PTR [esp+0x28]
  458eae:	mov    edx,DWORD PTR [esp+0x2c]
  458eb2:	shld   edx,eax,0x1e
  458eb6:	shl    eax,0x1e
  458eb9:	or     eax,DWORD PTR [esp]
  458ebc:	or     edx,DWORD PTR [esp+0x4]
  458ec0:	add    esp,0x8
  458ec3:	xor    eax,DWORD PTR [esp]
  458ec6:	xor    edx,DWORD PTR [esp+0x4]
  458eca:	add    esp,0x8
  458ecd:	push   edx
  458ece:	push   eax
  458ecf:	mov    eax,DWORD PTR [esp+0x24]
  458ed3:	shr    eax,0x7
  458ed6:	xor    edx,edx
  458ed8:	push   edx
  458ed9:	push   eax
  458eda:	mov    eax,DWORD PTR [esp+0x28]
  458ede:	mov    edx,DWORD PTR [esp+0x2c]
  458ee2:	shld   edx,eax,0x19
  458ee6:	shl    eax,0x19
  458ee9:	or     eax,DWORD PTR [esp]
  458eec:	or     edx,DWORD PTR [esp+0x4]
  458ef0:	add    esp,0x8
  458ef3:	xor    eax,DWORD PTR [esp]
  458ef6:	xor    edx,DWORD PTR [esp+0x4]
  458efa:	add    esp,0x8
  458efd:	push   edx
  458efe:	push   eax
  458eff:	mov    eax,DWORD PTR [esp+0x20]
  458f03:	mov    edx,DWORD PTR [esp+0x24]
  458f07:	and    eax,DWORD PTR [esp+0x28]
  458f0b:	and    edx,DWORD PTR [esp+0x2c]
  458f0f:	push   edx
  458f10:	push   eax
  458f11:	mov    eax,DWORD PTR [esp+0x28]
  458f15:	mov    edx,DWORD PTR [esp+0x2c]
  458f19:	and    eax,DWORD PTR [esp+0x38]
  458f1d:	and    edx,DWORD PTR [esp+0x3c]
  458f21:	xor    eax,DWORD PTR [esp]
  458f24:	xor    edx,DWORD PTR [esp+0x4]
  458f28:	add    esp,0x8
  458f2b:	push   edx
  458f2c:	push   eax
  458f2d:	mov    eax,DWORD PTR [esp+0x30]
  458f31:	mov    edx,DWORD PTR [esp+0x34]
  458f35:	and    eax,DWORD PTR [esp+0x38]
  458f39:	and    edx,DWORD PTR [esp+0x3c]
  458f3d:	xor    eax,DWORD PTR [esp]
  458f40:	xor    edx,DWORD PTR [esp+0x4]
  458f44:	add    esp,0x8
  458f47:	add    eax,DWORD PTR [esp]
  458f4a:	adc    edx,DWORD PTR [esp+0x4]
  458f4e:	add    esp,0x8
  458f51:	mov    DWORD PTR [esp+0x48],eax
  458f55:	mov    DWORD PTR [esp+0x4c],edx
  458f59:	mov    eax,DWORD PTR [esp+0x30]
  458f5d:	mov    edx,DWORD PTR [esp+0x34]
  458f61:	add    eax,DWORD PTR [esp+0x40]
  458f65:	adc    edx,DWORD PTR [esp+0x44]
  458f69:	mov    DWORD PTR [esp+0x30],eax
  458f6d:	mov    DWORD PTR [esp+0x34],edx
  458f71:	mov    eax,DWORD PTR [esp+0x40]
  458f75:	mov    edx,DWORD PTR [esp+0x44]
  458f79:	add    eax,DWORD PTR [esp+0x48]
  458f7d:	adc    edx,DWORD PTR [esp+0x4c]
  458f81:	mov    DWORD PTR [esp+0x10],eax
  458f85:	mov    DWORD PTR [esp+0x14],edx
  458f89:	mov    eax,DWORD PTR [esp+0x30]
  458f8d:	mov    edx,DWORD PTR [esp+0x34]
  458f91:	shrd   eax,edx,0xe
  458f95:	shr    edx,0xe
  458f98:	push   edx
  458f99:	push   eax
  458f9a:	mov    edx,DWORD PTR [esp+0x38]
  458f9e:	shl    edx,0x12
  458fa1:	xor    eax,eax
  458fa3:	or     eax,DWORD PTR [esp]
  458fa6:	or     edx,DWORD PTR [esp+0x4]
  458faa:	add    esp,0x8
  458fad:	push   edx
  458fae:	push   eax
  458faf:	mov    eax,DWORD PTR [esp+0x38]
  458fb3:	mov    edx,DWORD PTR [esp+0x3c]
  458fb7:	shrd   eax,edx,0x12
  458fbb:	shr    edx,0x12
  458fbe:	push   edx
  458fbf:	push   eax
  458fc0:	mov    edx,DWORD PTR [esp+0x40]
  458fc4:	shl    edx,0xe
  458fc7:	xor    eax,eax
  458fc9:	or     eax,DWORD PTR [esp]
  458fcc:	or     edx,DWORD PTR [esp+0x4]
  458fd0:	add    esp,0x8
  458fd3:	xor    eax,DWORD PTR [esp]
  458fd6:	xor    edx,DWORD PTR [esp+0x4]
  458fda:	add    esp,0x8
  458fdd:	push   edx
  458fde:	push   eax
  458fdf:	mov    eax,DWORD PTR [esp+0x3c]
  458fe3:	shr    eax,0x9
  458fe6:	xor    edx,edx
  458fe8:	push   edx
  458fe9:	push   eax
  458fea:	mov    eax,DWORD PTR [esp+0x40]
  458fee:	mov    edx,DWORD PTR [esp+0x44]
  458ff2:	shld   edx,eax,0x17
  458ff6:	shl    eax,0x17
  458ff9:	or     eax,DWORD PTR [esp]
  458ffc:	or     edx,DWORD PTR [esp+0x4]
  459000:	add    esp,0x8
  459003:	xor    eax,DWORD PTR [esp]
  459006:	xor    edx,DWORD PTR [esp+0x4]
  45900a:	add    esp,0x8
  45900d:	add    eax,DWORD PTR [esp+0x8]
  459011:	adc    edx,DWORD PTR [esp+0xc]
  459015:	push   edx
  459016:	push   eax
  459017:	mov    eax,DWORD PTR [esp+0x38]
  45901b:	mov    edx,DWORD PTR [esp+0x3c]
  45901f:	and    eax,DWORD PTR [esp+0x40]
  459023:	and    edx,DWORD PTR [esp+0x44]
  459027:	push   edx
  459028:	push   eax
  459029:	mov    eax,DWORD PTR [esp+0x40]
  45902d:	mov    edx,DWORD PTR [esp+0x44]
  459031:	not    eax
  459033:	not    edx
  459035:	and    eax,DWORD PTR [esp+0x10]
  459039:	and    edx,DWORD PTR [esp+0x14]
  45903d:	xor    eax,DWORD PTR [esp]
  459040:	xor    edx,DWORD PTR [esp+0x4]
  459044:	add    esp,0x8
  459047:	add    eax,DWORD PTR [esp]
  45904a:	adc    edx,DWORD PTR [esp+0x4]
  45904e:	add    esp,0x8
  459051:	add    eax,0x5771202a
  459056:	adc    edx,0xf40e3585
  45905c:	add    eax,DWORD PTR [esp+0x1c0]
  459063:	adc    edx,DWORD PTR [esp+0x1c4]
  45906a:	mov    DWORD PTR [esp+0x40],eax
  45906e:	mov    DWORD PTR [esp+0x44],edx
  459072:	mov    eax,DWORD PTR [esp+0x10]
  459076:	mov    edx,DWORD PTR [esp+0x14]
  45907a:	shrd   eax,edx,0x1c
  45907e:	shr    edx,0x1c
  459081:	push   edx
  459082:	push   eax
  459083:	mov    edx,DWORD PTR [esp+0x18]
  459087:	shl    edx,0x4
  45908a:	xor    eax,eax
  45908c:	or     eax,DWORD PTR [esp]
  45908f:	or     edx,DWORD PTR [esp+0x4]
  459093:	add    esp,0x8
  459096:	push   edx
  459097:	push   eax
  459098:	mov    eax,DWORD PTR [esp+0x1c]
  45909c:	shr    eax,0x2
  45909f:	xor    edx,edx
  4590a1:	push   edx
  4590a2:	push   eax
  4590a3:	mov    eax,DWORD PTR [esp+0x20]
  4590a7:	mov    edx,DWORD PTR [esp+0x24]
  4590ab:	shld   edx,eax,0x1e
  4590af:	shl    eax,0x1e
  4590b2:	or     eax,DWORD PTR [esp]
  4590b5:	or     edx,DWORD PTR [esp+0x4]
  4590b9:	add    esp,0x8
  4590bc:	xor    eax,DWORD PTR [esp]
  4590bf:	xor    edx,DWORD PTR [esp+0x4]
  4590c3:	add    esp,0x8
  4590c6:	push   edx
  4590c7:	push   eax
  4590c8:	mov    eax,DWORD PTR [esp+0x1c]
  4590cc:	shr    eax,0x7
  4590cf:	xor    edx,edx
  4590d1:	push   edx
  4590d2:	push   eax
  4590d3:	mov    eax,DWORD PTR [esp+0x20]
  4590d7:	mov    edx,DWORD PTR [esp+0x24]
  4590db:	shld   edx,eax,0x19
  4590df:	shl    eax,0x19
  4590e2:	or     eax,DWORD PTR [esp]
  4590e5:	or     edx,DWORD PTR [esp+0x4]
  4590e9:	add    esp,0x8
  4590ec:	xor    eax,DWORD PTR [esp]
  4590ef:	xor    edx,DWORD PTR [esp+0x4]
  4590f3:	add    esp,0x8
  4590f6:	push   edx
  4590f7:	push   eax
  4590f8:	mov    eax,DWORD PTR [esp+0x18]
  4590fc:	mov    edx,DWORD PTR [esp+0x1c]
  459100:	and    eax,DWORD PTR [esp+0x20]
  459104:	and    edx,DWORD PTR [esp+0x24]
  459108:	push   edx
  459109:	push   eax
  45910a:	mov    eax,DWORD PTR [esp+0x20]
  45910e:	mov    edx,DWORD PTR [esp+0x24]
  459112:	and    eax,DWORD PTR [esp+0x30]
  459116:	and    edx,DWORD PTR [esp+0x34]
  45911a:	xor    eax,DWORD PTR [esp]
  45911d:	xor    edx,DWORD PTR [esp+0x4]
  459121:	add    esp,0x8
  459124:	push   edx
  459125:	push   eax
  459126:	mov    eax,DWORD PTR [esp+0x28]
  45912a:	mov    edx,DWORD PTR [esp+0x2c]
  45912e:	and    eax,DWORD PTR [esp+0x30]
  459132:	and    edx,DWORD PTR [esp+0x34]
  459136:	xor    eax,DWORD PTR [esp]
  459139:	xor    edx,DWORD PTR [esp+0x4]
  45913d:	add    esp,0x8
  459140:	add    eax,DWORD PTR [esp]
  459143:	adc    edx,DWORD PTR [esp+0x4]
  459147:	add    esp,0x8
  45914a:	mov    DWORD PTR [esp+0x48],eax
  45914e:	mov    DWORD PTR [esp+0x4c],edx
  459152:	mov    eax,DWORD PTR [esp+0x28]
  459156:	mov    edx,DWORD PTR [esp+0x2c]
  45915a:	add    eax,DWORD PTR [esp+0x40]
  45915e:	adc    edx,DWORD PTR [esp+0x44]
  459162:	mov    DWORD PTR [esp+0x28],eax
  459166:	mov    DWORD PTR [esp+0x2c],edx
  45916a:	mov    eax,DWORD PTR [esp+0x40]
  45916e:	mov    edx,DWORD PTR [esp+0x44]
  459172:	add    eax,DWORD PTR [esp+0x48]
  459176:	adc    edx,DWORD PTR [esp+0x4c]
  45917a:	mov    DWORD PTR [esp+0x8],eax
  45917e:	mov    DWORD PTR [esp+0xc],edx
  459182:	mov    eax,DWORD PTR [esp+0x28]
  459186:	mov    edx,DWORD PTR [esp+0x2c]
  45918a:	shrd   eax,edx,0xe
  45918e:	shr    edx,0xe
  459191:	push   edx
  459192:	push   eax
  459193:	mov    edx,DWORD PTR [esp+0x30]
  459197:	shl    edx,0x12
  45919a:	xor    eax,eax
  45919c:	or     eax,DWORD PTR [esp]
  45919f:	or     edx,DWORD PTR [esp+0x4]
  4591a3:	add    esp,0x8
  4591a6:	push   edx
  4591a7:	push   eax
  4591a8:	mov    eax,DWORD PTR [esp+0x30]
  4591ac:	mov    edx,DWORD PTR [esp+0x34]
  4591b0:	shrd   eax,edx,0x12
  4591b4:	shr    edx,0x12
  4591b7:	push   edx
  4591b8:	push   eax
  4591b9:	mov    edx,DWORD PTR [esp+0x38]
  4591bd:	shl    edx,0xe
  4591c0:	xor    eax,eax
  4591c2:	or     eax,DWORD PTR [esp]
  4591c5:	or     edx,DWORD PTR [esp+0x4]
  4591c9:	add    esp,0x8
  4591cc:	xor    eax,DWORD PTR [esp]
  4591cf:	xor    edx,DWORD PTR [esp+0x4]
  4591d3:	add    esp,0x8
  4591d6:	push   edx
  4591d7:	push   eax
  4591d8:	mov    eax,DWORD PTR [esp+0x34]
  4591dc:	shr    eax,0x9
  4591df:	xor    edx,edx
  4591e1:	push   edx
  4591e2:	push   eax
  4591e3:	mov    eax,DWORD PTR [esp+0x38]
  4591e7:	mov    edx,DWORD PTR [esp+0x3c]
  4591eb:	shld   edx,eax,0x17
  4591ef:	shl    eax,0x17
  4591f2:	or     eax,DWORD PTR [esp]
  4591f5:	or     edx,DWORD PTR [esp+0x4]
  4591f9:	add    esp,0x8
  4591fc:	xor    eax,DWORD PTR [esp]
  4591ff:	xor    edx,DWORD PTR [esp+0x4]
  459203:	add    esp,0x8
  459206:	add    eax,DWORD PTR [esp]
  459209:	adc    edx,DWORD PTR [esp+0x4]
  45920d:	push   edx
  45920e:	push   eax
  45920f:	mov    eax,DWORD PTR [esp+0x30]
  459213:	mov    edx,DWORD PTR [esp+0x34]
  459217:	and    eax,DWORD PTR [esp+0x38]
  45921b:	and    edx,DWORD PTR [esp+0x3c]
  45921f:	push   edx
  459220:	push   eax
  459221:	mov    eax,DWORD PTR [esp+0x38]
  459225:	mov    edx,DWORD PTR [esp+0x3c]
  459229:	not    eax
  45922b:	not    edx
  45922d:	and    eax,DWORD PTR [esp+0x48]
  459231:	and    edx,DWORD PTR [esp+0x4c]
  459235:	xor    eax,DWORD PTR [esp]
  459238:	xor    edx,DWORD PTR [esp+0x4]
  45923c:	add    esp,0x8
  45923f:	add    eax,DWORD PTR [esp]
  459242:	adc    edx,DWORD PTR [esp+0x4]
  459246:	add    esp,0x8
  459249:	add    eax,0x32bbd1b8
  45924e:	adc    edx,0x106aa070
  459254:	add    eax,DWORD PTR [esp+0x1c8]
  45925b:	adc    edx,DWORD PTR [esp+0x1cc]
  459262:	mov    DWORD PTR [esp+0x40],eax
  459266:	mov    DWORD PTR [esp+0x44],edx
  45926a:	mov    eax,DWORD PTR [esp+0x8]
  45926e:	mov    edx,DWORD PTR [esp+0xc]
  459272:	shrd   eax,edx,0x1c
  459276:	shr    edx,0x1c
  459279:	push   edx
  45927a:	push   eax
  45927b:	mov    edx,DWORD PTR [esp+0x10]
  45927f:	shl    edx,0x4
  459282:	xor    eax,eax
  459284:	or     eax,DWORD PTR [esp]
  459287:	or     edx,DWORD PTR [esp+0x4]
  45928b:	add    esp,0x8
  45928e:	push   edx
  45928f:	push   eax
  459290:	mov    eax,DWORD PTR [esp+0x14]
  459294:	shr    eax,0x2
  459297:	xor    edx,edx
  459299:	push   edx
  45929a:	push   eax
  45929b:	mov    eax,DWORD PTR [esp+0x18]
  45929f:	mov    edx,DWORD PTR [esp+0x1c]
  4592a3:	shld   edx,eax,0x1e
  4592a7:	shl    eax,0x1e
  4592aa:	or     eax,DWORD PTR [esp]
  4592ad:	or     edx,DWORD PTR [esp+0x4]
  4592b1:	add    esp,0x8
  4592b4:	xor    eax,DWORD PTR [esp]
  4592b7:	xor    edx,DWORD PTR [esp+0x4]
  4592bb:	add    esp,0x8
  4592be:	push   edx
  4592bf:	push   eax
  4592c0:	mov    eax,DWORD PTR [esp+0x14]
  4592c4:	shr    eax,0x7
  4592c7:	xor    edx,edx
  4592c9:	push   edx
  4592ca:	push   eax
  4592cb:	mov    eax,DWORD PTR [esp+0x18]
  4592cf:	mov    edx,DWORD PTR [esp+0x1c]
  4592d3:	shld   edx,eax,0x19
  4592d7:	shl    eax,0x19
  4592da:	or     eax,DWORD PTR [esp]
  4592dd:	or     edx,DWORD PTR [esp+0x4]
  4592e1:	add    esp,0x8
  4592e4:	xor    eax,DWORD PTR [esp]
  4592e7:	xor    edx,DWORD PTR [esp+0x4]
  4592eb:	add    esp,0x8
  4592ee:	push   edx
  4592ef:	push   eax
  4592f0:	mov    eax,DWORD PTR [esp+0x10]
  4592f4:	mov    edx,DWORD PTR [esp+0x14]
  4592f8:	and    eax,DWORD PTR [esp+0x18]
  4592fc:	and    edx,DWORD PTR [esp+0x1c]
  459300:	push   edx
  459301:	push   eax
  459302:	mov    eax,DWORD PTR [esp+0x18]
  459306:	mov    edx,DWORD PTR [esp+0x1c]
  45930a:	and    eax,DWORD PTR [esp+0x28]
  45930e:	and    edx,DWORD PTR [esp+0x2c]
  459312:	xor    eax,DWORD PTR [esp]
  459315:	xor    edx,DWORD PTR [esp+0x4]
  459319:	add    esp,0x8
  45931c:	push   edx
  45931d:	push   eax
  45931e:	mov    eax,DWORD PTR [esp+0x20]
  459322:	mov    edx,DWORD PTR [esp+0x24]
  459326:	and    eax,DWORD PTR [esp+0x28]
  45932a:	and    edx,DWORD PTR [esp+0x2c]
  45932e:	xor    eax,DWORD PTR [esp]
  459331:	xor    edx,DWORD PTR [esp+0x4]
  459335:	add    esp,0x8
  459338:	add    eax,DWORD PTR [esp]
  45933b:	adc    edx,DWORD PTR [esp+0x4]
  45933f:	add    esp,0x8
  459342:	mov    DWORD PTR [esp+0x48],eax
  459346:	mov    DWORD PTR [esp+0x4c],edx
  45934a:	mov    eax,DWORD PTR [esp+0x20]
  45934e:	mov    edx,DWORD PTR [esp+0x24]
  459352:	add    eax,DWORD PTR [esp+0x40]
  459356:	adc    edx,DWORD PTR [esp+0x44]
  45935a:	mov    DWORD PTR [esp+0x20],eax
  45935e:	mov    DWORD PTR [esp+0x24],edx
  459362:	mov    eax,DWORD PTR [esp+0x40]
  459366:	mov    edx,DWORD PTR [esp+0x44]
  45936a:	add    eax,DWORD PTR [esp+0x48]
  45936e:	adc    edx,DWORD PTR [esp+0x4c]
  459372:	mov    DWORD PTR [esp],eax
  459375:	mov    DWORD PTR [esp+0x4],edx
  459379:	mov    eax,DWORD PTR [esp+0x20]
  45937d:	mov    edx,DWORD PTR [esp+0x24]
  459381:	shrd   eax,edx,0xe
  459385:	shr    edx,0xe
  459388:	push   edx
  459389:	push   eax
  45938a:	mov    edx,DWORD PTR [esp+0x28]
  45938e:	shl    edx,0x12
  459391:	xor    eax,eax
  459393:	or     eax,DWORD PTR [esp]
  459396:	or     edx,DWORD PTR [esp+0x4]
  45939a:	add    esp,0x8
  45939d:	push   edx
  45939e:	push   eax
  45939f:	mov    eax,DWORD PTR [esp+0x28]
  4593a3:	mov    edx,DWORD PTR [esp+0x2c]
  4593a7:	shrd   eax,edx,0x12
  4593ab:	shr    edx,0x12
  4593ae:	push   edx
  4593af:	push   eax
  4593b0:	mov    edx,DWORD PTR [esp+0x30]
  4593b4:	shl    edx,0xe
  4593b7:	xor    eax,eax
  4593b9:	or     eax,DWORD PTR [esp]
  4593bc:	or     edx,DWORD PTR [esp+0x4]
  4593c0:	add    esp,0x8
  4593c3:	xor    eax,DWORD PTR [esp]
  4593c6:	xor    edx,DWORD PTR [esp+0x4]
  4593ca:	add    esp,0x8
  4593cd:	push   edx
  4593ce:	push   eax
  4593cf:	mov    eax,DWORD PTR [esp+0x2c]
  4593d3:	shr    eax,0x9
  4593d6:	xor    edx,edx
  4593d8:	push   edx
  4593d9:	push   eax
  4593da:	mov    eax,DWORD PTR [esp+0x30]
  4593de:	mov    edx,DWORD PTR [esp+0x34]
  4593e2:	shld   edx,eax,0x17
  4593e6:	shl    eax,0x17
  4593e9:	or     eax,DWORD PTR [esp]
  4593ec:	or     edx,DWORD PTR [esp+0x4]
  4593f0:	add    esp,0x8
  4593f3:	xor    eax,DWORD PTR [esp]
  4593f6:	xor    edx,DWORD PTR [esp+0x4]
  4593fa:	add    esp,0x8
  4593fd:	add    eax,DWORD PTR [esp+0x38]
  459401:	adc    edx,DWORD PTR [esp+0x3c]
  459405:	push   edx
  459406:	push   eax
  459407:	mov    eax,DWORD PTR [esp+0x28]
  45940b:	mov    edx,DWORD PTR [esp+0x2c]
  45940f:	and    eax,DWORD PTR [esp+0x30]
  459413:	and    edx,DWORD PTR [esp+0x34]
  459417:	push   edx
  459418:	push   eax
  459419:	mov    eax,DWORD PTR [esp+0x30]
  45941d:	mov    edx,DWORD PTR [esp+0x34]
  459421:	not    eax
  459423:	not    edx
  459425:	and    eax,DWORD PTR [esp+0x40]
  459429:	and    edx,DWORD PTR [esp+0x44]
  45942d:	xor    eax,DWORD PTR [esp]
  459430:	xor    edx,DWORD PTR [esp+0x4]
  459434:	add    esp,0x8
  459437:	add    eax,DWORD PTR [esp]
  45943a:	adc    edx,DWORD PTR [esp+0x4]
  45943e:	add    esp,0x8
  459441:	add    eax,0xb8d2d0c8
  459446:	adc    edx,0x19a4c116
  45944c:	add    eax,DWORD PTR [esp+0x1d0]
  459453:	adc    edx,DWORD PTR [esp+0x1d4]
  45945a:	mov    DWORD PTR [esp+0x40],eax
  45945e:	mov    DWORD PTR [esp+0x44],edx
  459462:	mov    eax,DWORD PTR [esp]
  459465:	mov    edx,DWORD PTR [esp+0x4]
  459469:	shrd   eax,edx,0x1c
  45946d:	shr    edx,0x1c
  459470:	push   edx
  459471:	push   eax
  459472:	mov    edx,DWORD PTR [esp+0x8]
  459476:	shl    edx,0x4
  459479:	xor    eax,eax
  45947b:	or     eax,DWORD PTR [esp]
  45947e:	or     edx,DWORD PTR [esp+0x4]
  459482:	add    esp,0x8
  459485:	push   edx
  459486:	push   eax
  459487:	mov    eax,DWORD PTR [esp+0xc]
  45948b:	shr    eax,0x2
  45948e:	xor    edx,edx
  459490:	push   edx
  459491:	push   eax
  459492:	mov    eax,DWORD PTR [esp+0x10]
  459496:	mov    edx,DWORD PTR [esp+0x14]
  45949a:	shld   edx,eax,0x1e
  45949e:	shl    eax,0x1e
  4594a1:	or     eax,DWORD PTR [esp]
  4594a4:	or     edx,DWORD PTR [esp+0x4]
  4594a8:	add    esp,0x8
  4594ab:	xor    eax,DWORD PTR [esp]
  4594ae:	xor    edx,DWORD PTR [esp+0x4]
  4594b2:	add    esp,0x8
  4594b5:	push   edx
  4594b6:	push   eax
  4594b7:	mov    eax,DWORD PTR [esp+0xc]
  4594bb:	shr    eax,0x7
  4594be:	xor    edx,edx
  4594c0:	push   edx
  4594c1:	push   eax
  4594c2:	mov    eax,DWORD PTR [esp+0x10]
  4594c6:	mov    edx,DWORD PTR [esp+0x14]
  4594ca:	shld   edx,eax,0x19
  4594ce:	shl    eax,0x19
  4594d1:	or     eax,DWORD PTR [esp]
  4594d4:	or     edx,DWORD PTR [esp+0x4]
  4594d8:	add    esp,0x8
  4594db:	xor    eax,DWORD PTR [esp]
  4594de:	xor    edx,DWORD PTR [esp+0x4]
  4594e2:	add    esp,0x8
  4594e5:	push   edx
  4594e6:	push   eax
  4594e7:	mov    eax,DWORD PTR [esp+0x8]
  4594eb:	mov    edx,DWORD PTR [esp+0xc]
  4594ef:	and    eax,DWORD PTR [esp+0x10]
  4594f3:	and    edx,DWORD PTR [esp+0x14]
  4594f7:	push   edx
  4594f8:	push   eax
  4594f9:	mov    eax,DWORD PTR [esp+0x10]
  4594fd:	mov    edx,DWORD PTR [esp+0x14]
  459501:	and    eax,DWORD PTR [esp+0x20]
  459505:	and    edx,DWORD PTR [esp+0x24]
  459509:	xor    eax,DWORD PTR [esp]
  45950c:	xor    edx,DWORD PTR [esp+0x4]
  459510:	add    esp,0x8
  459513:	push   edx
  459514:	push   eax
  459515:	mov    eax,DWORD PTR [esp+0x18]
  459519:	mov    edx,DWORD PTR [esp+0x1c]
  45951d:	and    eax,DWORD PTR [esp+0x20]
  459521:	and    edx,DWORD PTR [esp+0x24]
  459525:	xor    eax,DWORD PTR [esp]
  459528:	xor    edx,DWORD PTR [esp+0x4]
  45952c:	add    esp,0x8
  45952f:	add    eax,DWORD PTR [esp]
  459532:	adc    edx,DWORD PTR [esp+0x4]
  459536:	add    esp,0x8
  459539:	mov    DWORD PTR [esp+0x48],eax
  45953d:	mov    DWORD PTR [esp+0x4c],edx
  459541:	mov    eax,DWORD PTR [esp+0x18]
  459545:	mov    edx,DWORD PTR [esp+0x1c]
  459549:	add    eax,DWORD PTR [esp+0x40]
  45954d:	adc    edx,DWORD PTR [esp+0x44]
  459551:	mov    DWORD PTR [esp+0x18],eax
  459555:	mov    DWORD PTR [esp+0x1c],edx
  459559:	mov    eax,DWORD PTR [esp+0x40]
  45955d:	mov    edx,DWORD PTR [esp+0x44]
  459561:	add    eax,DWORD PTR [esp+0x48]
  459565:	adc    edx,DWORD PTR [esp+0x4c]
  459569:	mov    DWORD PTR [esp+0x38],eax
  45956d:	mov    DWORD PTR [esp+0x3c],edx
  459571:	mov    eax,DWORD PTR [esp+0x18]
  459575:	mov    edx,DWORD PTR [esp+0x1c]
  459579:	shrd   eax,edx,0xe
  45957d:	shr    edx,0xe
  459580:	push   edx
  459581:	push   eax
  459582:	mov    edx,DWORD PTR [esp+0x20]
  459586:	shl    edx,0x12
  459589:	xor    eax,eax
  45958b:	or     eax,DWORD PTR [esp]
  45958e:	or     edx,DWORD PTR [esp+0x4]
  459592:	add    esp,0x8
  459595:	push   edx
  459596:	push   eax
  459597:	mov    eax,DWORD PTR [esp+0x20]
  45959b:	mov    edx,DWORD PTR [esp+0x24]
  45959f:	shrd   eax,edx,0x12
  4595a3:	shr    edx,0x12
  4595a6:	push   edx
  4595a7:	push   eax
  4595a8:	mov    edx,DWORD PTR [esp+0x28]
  4595ac:	shl    edx,0xe
  4595af:	xor    eax,eax
  4595b1:	or     eax,DWORD PTR [esp]
  4595b4:	or     edx,DWORD PTR [esp+0x4]
  4595b8:	add    esp,0x8
  4595bb:	xor    eax,DWORD PTR [esp]
  4595be:	xor    edx,DWORD PTR [esp+0x4]
  4595c2:	add    esp,0x8
  4595c5:	push   edx
  4595c6:	push   eax
  4595c7:	mov    eax,DWORD PTR [esp+0x24]
  4595cb:	shr    eax,0x9
  4595ce:	xor    edx,edx
  4595d0:	push   edx
  4595d1:	push   eax
  4595d2:	mov    eax,DWORD PTR [esp+0x28]
  4595d6:	mov    edx,DWORD PTR [esp+0x2c]
  4595da:	shld   edx,eax,0x17
  4595de:	shl    eax,0x17
  4595e1:	or     eax,DWORD PTR [esp]
  4595e4:	or     edx,DWORD PTR [esp+0x4]
  4595e8:	add    esp,0x8
  4595eb:	xor    eax,DWORD PTR [esp]
  4595ee:	xor    edx,DWORD PTR [esp+0x4]
  4595f2:	add    esp,0x8
  4595f5:	add    eax,DWORD PTR [esp+0x30]
  4595f9:	adc    edx,DWORD PTR [esp+0x34]
  4595fd:	push   edx
  4595fe:	push   eax
  4595ff:	mov    eax,DWORD PTR [esp+0x20]
  459603:	mov    edx,DWORD PTR [esp+0x24]
  459607:	and    eax,DWORD PTR [esp+0x28]
  45960b:	and    edx,DWORD PTR [esp+0x2c]
  45960f:	push   edx
  459610:	push   eax
  459611:	mov    eax,DWORD PTR [esp+0x28]
  459615:	mov    edx,DWORD PTR [esp+0x2c]
  459619:	not    eax
  45961b:	not    edx
  45961d:	and    eax,DWORD PTR [esp+0x38]
  459621:	and    edx,DWORD PTR [esp+0x3c]
  459625:	xor    eax,DWORD PTR [esp]
  459628:	xor    edx,DWORD PTR [esp+0x4]
  45962c:	add    esp,0x8
  45962f:	add    eax,DWORD PTR [esp]
  459632:	adc    edx,DWORD PTR [esp+0x4]
  459636:	add    esp,0x8
  459639:	add    eax,0x5141ab53
  45963e:	adc    edx,0x1e376c08
  459644:	add    eax,DWORD PTR [esp+0x1d8]
  45964b:	adc    edx,DWORD PTR [esp+0x1dc]
  459652:	mov    DWORD PTR [esp+0x40],eax
  459656:	mov    DWORD PTR [esp+0x44],edx
  45965a:	mov    eax,DWORD PTR [esp+0x38]
  45965e:	mov    edx,DWORD PTR [esp+0x3c]
  459662:	shrd   eax,edx,0x1c
  459666:	shr    edx,0x1c
  459669:	push   edx
  45966a:	push   eax
  45966b:	mov    edx,DWORD PTR [esp+0x40]
  45966f:	shl    edx,0x4
  459672:	xor    eax,eax
  459674:	or     eax,DWORD PTR [esp]
  459677:	or     edx,DWORD PTR [esp+0x4]
  45967b:	add    esp,0x8
  45967e:	push   edx
  45967f:	push   eax
  459680:	mov    eax,DWORD PTR [esp+0x44]
  459684:	shr    eax,0x2
  459687:	xor    edx,edx
  459689:	push   edx
  45968a:	push   eax
  45968b:	mov    eax,DWORD PTR [esp+0x48]
  45968f:	mov    edx,DWORD PTR [esp+0x4c]
  459693:	shld   edx,eax,0x1e
  459697:	shl    eax,0x1e
  45969a:	or     eax,DWORD PTR [esp]
  45969d:	or     edx,DWORD PTR [esp+0x4]
  4596a1:	add    esp,0x8
  4596a4:	xor    eax,DWORD PTR [esp]
  4596a7:	xor    edx,DWORD PTR [esp+0x4]
  4596ab:	add    esp,0x8
  4596ae:	push   edx
  4596af:	push   eax
  4596b0:	mov    eax,DWORD PTR [esp+0x44]
  4596b4:	shr    eax,0x7
  4596b7:	xor    edx,edx
  4596b9:	push   edx
  4596ba:	push   eax
  4596bb:	mov    eax,DWORD PTR [esp+0x48]
  4596bf:	mov    edx,DWORD PTR [esp+0x4c]
  4596c3:	shld   edx,eax,0x19
  4596c7:	shl    eax,0x19
  4596ca:	or     eax,DWORD PTR [esp]
  4596cd:	or     edx,DWORD PTR [esp+0x4]
  4596d1:	add    esp,0x8
  4596d4:	xor    eax,DWORD PTR [esp]
  4596d7:	xor    edx,DWORD PTR [esp+0x4]
  4596db:	add    esp,0x8
  4596de:	push   edx
  4596df:	push   eax
  4596e0:	mov    eax,DWORD PTR [esp+0x40]
  4596e4:	mov    edx,DWORD PTR [esp+0x44]
  4596e8:	and    eax,DWORD PTR [esp+0x8]
  4596ec:	and    edx,DWORD PTR [esp+0xc]
  4596f0:	push   edx
  4596f1:	push   eax
  4596f2:	mov    eax,DWORD PTR [esp+0x48]
  4596f6:	mov    edx,DWORD PTR [esp+0x4c]
  4596fa:	and    eax,DWORD PTR [esp+0x18]
  4596fe:	and    edx,DWORD PTR [esp+0x1c]
  459702:	xor    eax,DWORD PTR [esp]
  459705:	xor    edx,DWORD PTR [esp+0x4]
  459709:	add    esp,0x8
  45970c:	push   edx
  45970d:	push   eax
  45970e:	mov    eax,DWORD PTR [esp+0x10]
  459712:	mov    edx,DWORD PTR [esp+0x14]
  459716:	and    eax,DWORD PTR [esp+0x18]
  45971a:	and    edx,DWORD PTR [esp+0x1c]
  45971e:	xor    eax,DWORD PTR [esp]
  459721:	xor    edx,DWORD PTR [esp+0x4]
  459725:	add    esp,0x8
  459728:	add    eax,DWORD PTR [esp]
  45972b:	adc    edx,DWORD PTR [esp+0x4]
  45972f:	add    esp,0x8
  459732:	mov    DWORD PTR [esp+0x48],eax
  459736:	mov    DWORD PTR [esp+0x4c],edx
  45973a:	mov    eax,DWORD PTR [esp+0x10]
  45973e:	mov    edx,DWORD PTR [esp+0x14]
  459742:	add    eax,DWORD PTR [esp+0x40]
  459746:	adc    edx,DWORD PTR [esp+0x44]
  45974a:	mov    DWORD PTR [esp+0x10],eax
  45974e:	mov    DWORD PTR [esp+0x14],edx
  459752:	mov    eax,DWORD PTR [esp+0x40]
  459756:	mov    edx,DWORD PTR [esp+0x44]
  45975a:	add    eax,DWORD PTR [esp+0x48]
  45975e:	adc    edx,DWORD PTR [esp+0x4c]
  459762:	mov    DWORD PTR [esp+0x30],eax
  459766:	mov    DWORD PTR [esp+0x34],edx
  45976a:	mov    eax,DWORD PTR [esp+0x10]
  45976e:	mov    edx,DWORD PTR [esp+0x14]
  459772:	shrd   eax,edx,0xe
  459776:	shr    edx,0xe
  459779:	push   edx
  45977a:	push   eax
  45977b:	mov    edx,DWORD PTR [esp+0x18]
  45977f:	shl    edx,0x12
  459782:	xor    eax,eax
  459784:	or     eax,DWORD PTR [esp]
  459787:	or     edx,DWORD PTR [esp+0x4]
  45978b:	add    esp,0x8
  45978e:	push   edx
  45978f:	push   eax
  459790:	mov    eax,DWORD PTR [esp+0x18]
  459794:	mov    edx,DWORD PTR [esp+0x1c]
  459798:	shrd   eax,edx,0x12
  45979c:	shr    edx,0x12
  45979f:	push   edx
  4597a0:	push   eax
  4597a1:	mov    edx,DWORD PTR [esp+0x20]
  4597a5:	shl    edx,0xe
  4597a8:	xor    eax,eax
  4597aa:	or     eax,DWORD PTR [esp]
  4597ad:	or     edx,DWORD PTR [esp+0x4]
  4597b1:	add    esp,0x8
  4597b4:	xor    eax,DWORD PTR [esp]
  4597b7:	xor    edx,DWORD PTR [esp+0x4]
  4597bb:	add    esp,0x8
  4597be:	push   edx
  4597bf:	push   eax
  4597c0:	mov    eax,DWORD PTR [esp+0x1c]
  4597c4:	shr    eax,0x9
  4597c7:	xor    edx,edx
  4597c9:	push   edx
  4597ca:	push   eax
  4597cb:	mov    eax,DWORD PTR [esp+0x20]
  4597cf:	mov    edx,DWORD PTR [esp+0x24]
  4597d3:	shld   edx,eax,0x17
  4597d7:	shl    eax,0x17
  4597da:	or     eax,DWORD PTR [esp]
  4597dd:	or     edx,DWORD PTR [esp+0x4]
  4597e1:	add    esp,0x8
  4597e4:	xor    eax,DWORD PTR [esp]
  4597e7:	xor    edx,DWORD PTR [esp+0x4]
  4597eb:	add    esp,0x8
  4597ee:	add    eax,DWORD PTR [esp+0x28]
  4597f2:	adc    edx,DWORD PTR [esp+0x2c]
  4597f6:	push   edx
  4597f7:	push   eax
  4597f8:	mov    eax,DWORD PTR [esp+0x18]
  4597fc:	mov    edx,DWORD PTR [esp+0x1c]
  459800:	and    eax,DWORD PTR [esp+0x20]
  459804:	and    edx,DWORD PTR [esp+0x24]
  459808:	push   edx
  459809:	push   eax
  45980a:	mov    eax,DWORD PTR [esp+0x20]
  45980e:	mov    edx,DWORD PTR [esp+0x24]
  459812:	not    eax
  459814:	not    edx
  459816:	and    eax,DWORD PTR [esp+0x30]
  45981a:	and    edx,DWORD PTR [esp+0x34]
  45981e:	xor    eax,DWORD PTR [esp]
  459821:	xor    edx,DWORD PTR [esp+0x4]
  459825:	add    esp,0x8
  459828:	add    eax,DWORD PTR [esp]
  45982b:	adc    edx,DWORD PTR [esp+0x4]
  45982f:	add    esp,0x8
  459832:	add    eax,0xdf8eeb99
  459837:	adc    edx,0x2748774c
  45983d:	add    eax,DWORD PTR [esp+0x1e0]
  459844:	adc    edx,DWORD PTR [esp+0x1e4]
  45984b:	mov    DWORD PTR [esp+0x40],eax
  45984f:	mov    DWORD PTR [esp+0x44],edx
  459853:	mov    eax,DWORD PTR [esp+0x30]
  459857:	mov    edx,DWORD PTR [esp+0x34]
  45985b:	shrd   eax,edx,0x1c
  45985f:	shr    edx,0x1c
  459862:	push   edx
  459863:	push   eax
  459864:	mov    edx,DWORD PTR [esp+0x38]
  459868:	shl    edx,0x4
  45986b:	xor    eax,eax
  45986d:	or     eax,DWORD PTR [esp]
  459870:	or     edx,DWORD PTR [esp+0x4]
  459874:	add    esp,0x8
  459877:	push   edx
  459878:	push   eax
  459879:	mov    eax,DWORD PTR [esp+0x3c]
  45987d:	shr    eax,0x2
  459880:	xor    edx,edx
  459882:	push   edx
  459883:	push   eax
  459884:	mov    eax,DWORD PTR [esp+0x40]
  459888:	mov    edx,DWORD PTR [esp+0x44]
  45988c:	shld   edx,eax,0x1e
  459890:	shl    eax,0x1e
  459893:	or     eax,DWORD PTR [esp]
  459896:	or     edx,DWORD PTR [esp+0x4]
  45989a:	add    esp,0x8
  45989d:	xor    eax,DWORD PTR [esp]
  4598a0:	xor    edx,DWORD PTR [esp+0x4]
  4598a4:	add    esp,0x8
  4598a7:	push   edx
  4598a8:	push   eax
  4598a9:	mov    eax,DWORD PTR [esp+0x3c]
  4598ad:	shr    eax,0x7
  4598b0:	xor    edx,edx
  4598b2:	push   edx
  4598b3:	push   eax
  4598b4:	mov    eax,DWORD PTR [esp+0x40]
  4598b8:	mov    edx,DWORD PTR [esp+0x44]
  4598bc:	shld   edx,eax,0x19
  4598c0:	shl    eax,0x19
  4598c3:	or     eax,DWORD PTR [esp]
  4598c6:	or     edx,DWORD PTR [esp+0x4]
  4598ca:	add    esp,0x8
  4598cd:	xor    eax,DWORD PTR [esp]
  4598d0:	xor    edx,DWORD PTR [esp+0x4]
  4598d4:	add    esp,0x8
  4598d7:	push   edx
  4598d8:	push   eax
  4598d9:	mov    eax,DWORD PTR [esp+0x38]
  4598dd:	mov    edx,DWORD PTR [esp+0x3c]
  4598e1:	and    eax,DWORD PTR [esp+0x40]
  4598e5:	and    edx,DWORD PTR [esp+0x44]
  4598e9:	push   edx
  4598ea:	push   eax
  4598eb:	mov    eax,DWORD PTR [esp+0x40]
  4598ef:	mov    edx,DWORD PTR [esp+0x44]
  4598f3:	and    eax,DWORD PTR [esp+0x10]
  4598f7:	and    edx,DWORD PTR [esp+0x14]
  4598fb:	xor    eax,DWORD PTR [esp]
  4598fe:	xor    edx,DWORD PTR [esp+0x4]
  459902:	add    esp,0x8
  459905:	push   edx
  459906:	push   eax
  459907:	mov    eax,DWORD PTR [esp+0x48]
  45990b:	mov    edx,DWORD PTR [esp+0x4c]
  45990f:	and    eax,DWORD PTR [esp+0x10]
  459913:	and    edx,DWORD PTR [esp+0x14]
  459917:	xor    eax,DWORD PTR [esp]
  45991a:	xor    edx,DWORD PTR [esp+0x4]
  45991e:	add    esp,0x8
  459921:	add    eax,DWORD PTR [esp]
  459924:	adc    edx,DWORD PTR [esp+0x4]
  459928:	add    esp,0x8
  45992b:	mov    DWORD PTR [esp+0x48],eax
  45992f:	mov    DWORD PTR [esp+0x4c],edx
  459933:	mov    eax,DWORD PTR [esp+0x8]
  459937:	mov    edx,DWORD PTR [esp+0xc]
  45993b:	add    eax,DWORD PTR [esp+0x40]
  45993f:	adc    edx,DWORD PTR [esp+0x44]
  459943:	mov    DWORD PTR [esp+0x8],eax
  459947:	mov    DWORD PTR [esp+0xc],edx
  45994b:	mov    eax,DWORD PTR [esp+0x40]
  45994f:	mov    edx,DWORD PTR [esp+0x44]
  459953:	add    eax,DWORD PTR [esp+0x48]
  459957:	adc    edx,DWORD PTR [esp+0x4c]
  45995b:	mov    DWORD PTR [esp+0x28],eax
  45995f:	mov    DWORD PTR [esp+0x2c],edx
  459963:	mov    eax,DWORD PTR [esp+0x8]
  459967:	mov    edx,DWORD PTR [esp+0xc]
  45996b:	shrd   eax,edx,0xe
  45996f:	shr    edx,0xe
  459972:	push   edx
  459973:	push   eax
  459974:	mov    edx,DWORD PTR [esp+0x10]
  459978:	shl    edx,0x12
  45997b:	xor    eax,eax
  45997d:	or     eax,DWORD PTR [esp]
  459980:	or     edx,DWORD PTR [esp+0x4]
  459984:	add    esp,0x8
  459987:	push   edx
  459988:	push   eax
  459989:	mov    eax,DWORD PTR [esp+0x10]
  45998d:	mov    edx,DWORD PTR [esp+0x14]
  459991:	shrd   eax,edx,0x12
  459995:	shr    edx,0x12
  459998:	push   edx
  459999:	push   eax
  45999a:	mov    edx,DWORD PTR [esp+0x18]
  45999e:	shl    edx,0xe
  4599a1:	xor    eax,eax
  4599a3:	or     eax,DWORD PTR [esp]
  4599a6:	or     edx,DWORD PTR [esp+0x4]
  4599aa:	add    esp,0x8
  4599ad:	xor    eax,DWORD PTR [esp]
  4599b0:	xor    edx,DWORD PTR [esp+0x4]
  4599b4:	add    esp,0x8
  4599b7:	push   edx
  4599b8:	push   eax
  4599b9:	mov    eax,DWORD PTR [esp+0x14]
  4599bd:	shr    eax,0x9
  4599c0:	xor    edx,edx
  4599c2:	push   edx
  4599c3:	push   eax
  4599c4:	mov    eax,DWORD PTR [esp+0x18]
  4599c8:	mov    edx,DWORD PTR [esp+0x1c]
  4599cc:	shld   edx,eax,0x17
  4599d0:	shl    eax,0x17
  4599d3:	or     eax,DWORD PTR [esp]
  4599d6:	or     edx,DWORD PTR [esp+0x4]
  4599da:	add    esp,0x8
  4599dd:	xor    eax,DWORD PTR [esp]
  4599e0:	xor    edx,DWORD PTR [esp+0x4]
  4599e4:	add    esp,0x8
  4599e7:	add    eax,DWORD PTR [esp+0x20]
  4599eb:	adc    edx,DWORD PTR [esp+0x24]
  4599ef:	push   edx
  4599f0:	push   eax
  4599f1:	mov    eax,DWORD PTR [esp+0x10]
  4599f5:	mov    edx,DWORD PTR [esp+0x14]
  4599f9:	and    eax,DWORD PTR [esp+0x18]
  4599fd:	and    edx,DWORD PTR [esp+0x1c]
  459a01:	push   edx
  459a02:	push   eax
  459a03:	mov    eax,DWORD PTR [esp+0x18]
  459a07:	mov    edx,DWORD PTR [esp+0x1c]
  459a0b:	not    eax
  459a0d:	not    edx
  459a0f:	and    eax,DWORD PTR [esp+0x28]
  459a13:	and    edx,DWORD PTR [esp+0x2c]
  459a17:	xor    eax,DWORD PTR [esp]
  459a1a:	xor    edx,DWORD PTR [esp+0x4]
  459a1e:	add    esp,0x8
  459a21:	add    eax,DWORD PTR [esp]
  459a24:	adc    edx,DWORD PTR [esp+0x4]
  459a28:	add    esp,0x8
  459a2b:	add    eax,0xe19b48a8
  459a30:	adc    edx,0x34b0bcb5
  459a36:	add    eax,DWORD PTR [esp+0x1e8]
  459a3d:	adc    edx,DWORD PTR [esp+0x1ec]
  459a44:	mov    DWORD PTR [esp+0x40],eax
  459a48:	mov    DWORD PTR [esp+0x44],edx
  459a4c:	mov    eax,DWORD PTR [esp+0x28]
  459a50:	mov    edx,DWORD PTR [esp+0x2c]
  459a54:	shrd   eax,edx,0x1c
  459a58:	shr    edx,0x1c
  459a5b:	push   edx
  459a5c:	push   eax
  459a5d:	mov    edx,DWORD PTR [esp+0x30]
  459a61:	shl    edx,0x4
  459a64:	xor    eax,eax
  459a66:	or     eax,DWORD PTR [esp]
  459a69:	or     edx,DWORD PTR [esp+0x4]
  459a6d:	add    esp,0x8
  459a70:	push   edx
  459a71:	push   eax
  459a72:	mov    eax,DWORD PTR [esp+0x34]
  459a76:	shr    eax,0x2
  459a79:	xor    edx,edx
  459a7b:	push   edx
  459a7c:	push   eax
  459a7d:	mov    eax,DWORD PTR [esp+0x38]
  459a81:	mov    edx,DWORD PTR [esp+0x3c]
  459a85:	shld   edx,eax,0x1e
  459a89:	shl    eax,0x1e
  459a8c:	or     eax,DWORD PTR [esp]
  459a8f:	or     edx,DWORD PTR [esp+0x4]
  459a93:	add    esp,0x8
  459a96:	xor    eax,DWORD PTR [esp]
  459a99:	xor    edx,DWORD PTR [esp+0x4]
  459a9d:	add    esp,0x8
  459aa0:	push   edx
  459aa1:	push   eax
  459aa2:	mov    eax,DWORD PTR [esp+0x34]
  459aa6:	shr    eax,0x7
  459aa9:	xor    edx,edx
  459aab:	push   edx
  459aac:	push   eax
  459aad:	mov    eax,DWORD PTR [esp+0x38]
  459ab1:	mov    edx,DWORD PTR [esp+0x3c]
  459ab5:	shld   edx,eax,0x19
  459ab9:	shl    eax,0x19
  459abc:	or     eax,DWORD PTR [esp]
  459abf:	or     edx,DWORD PTR [esp+0x4]
  459ac3:	add    esp,0x8
  459ac6:	xor    eax,DWORD PTR [esp]
  459ac9:	xor    edx,DWORD PTR [esp+0x4]
  459acd:	add    esp,0x8
  459ad0:	push   edx
  459ad1:	push   eax
  459ad2:	mov    eax,DWORD PTR [esp+0x30]
  459ad6:	mov    edx,DWORD PTR [esp+0x34]
  459ada:	and    eax,DWORD PTR [esp+0x38]
  459ade:	and    edx,DWORD PTR [esp+0x3c]
  459ae2:	push   edx
  459ae3:	push   eax
  459ae4:	mov    eax,DWORD PTR [esp+0x38]
  459ae8:	mov    edx,DWORD PTR [esp+0x3c]
  459aec:	and    eax,DWORD PTR [esp+0x48]
  459af0:	and    edx,DWORD PTR [esp+0x4c]
  459af4:	xor    eax,DWORD PTR [esp]
  459af7:	xor    edx,DWORD PTR [esp+0x4]
  459afb:	add    esp,0x8
  459afe:	push   edx
  459aff:	push   eax
  459b00:	mov    eax,DWORD PTR [esp+0x40]
  459b04:	mov    edx,DWORD PTR [esp+0x44]
  459b08:	and    eax,DWORD PTR [esp+0x48]
  459b0c:	and    edx,DWORD PTR [esp+0x4c]
  459b10:	xor    eax,DWORD PTR [esp]
  459b13:	xor    edx,DWORD PTR [esp+0x4]
  459b17:	add    esp,0x8
  459b1a:	add    eax,DWORD PTR [esp]
  459b1d:	adc    edx,DWORD PTR [esp+0x4]
  459b21:	add    esp,0x8
  459b24:	mov    DWORD PTR [esp+0x48],eax
  459b28:	mov    DWORD PTR [esp+0x4c],edx
  459b2c:	mov    eax,DWORD PTR [esp]
  459b2f:	mov    edx,DWORD PTR [esp+0x4]
  459b33:	add    eax,DWORD PTR [esp+0x40]
  459b37:	adc    edx,DWORD PTR [esp+0x44]
  459b3b:	mov    DWORD PTR [esp],eax
  459b3e:	mov    DWORD PTR [esp+0x4],edx
  459b42:	mov    eax,DWORD PTR [esp+0x40]
  459b46:	mov    edx,DWORD PTR [esp+0x44]
  459b4a:	add    eax,DWORD PTR [esp+0x48]
  459b4e:	adc    edx,DWORD PTR [esp+0x4c]
  459b52:	mov    DWORD PTR [esp+0x20],eax
  459b56:	mov    DWORD PTR [esp+0x24],edx
  459b5a:	mov    eax,DWORD PTR [esp]
  459b5d:	mov    edx,DWORD PTR [esp+0x4]
  459b61:	shrd   eax,edx,0xe
  459b65:	shr    edx,0xe
  459b68:	push   edx
  459b69:	push   eax
  459b6a:	mov    edx,DWORD PTR [esp+0x8]
  459b6e:	shl    edx,0x12
  459b71:	xor    eax,eax
  459b73:	or     eax,DWORD PTR [esp]
  459b76:	or     edx,DWORD PTR [esp+0x4]
  459b7a:	add    esp,0x8
  459b7d:	push   edx
  459b7e:	push   eax
  459b7f:	mov    eax,DWORD PTR [esp+0x8]
  459b83:	mov    edx,DWORD PTR [esp+0xc]
  459b87:	shrd   eax,edx,0x12
  459b8b:	shr    edx,0x12
  459b8e:	push   edx
  459b8f:	push   eax
  459b90:	mov    edx,DWORD PTR [esp+0x10]
  459b94:	shl    edx,0xe
  459b97:	xor    eax,eax
  459b99:	or     eax,DWORD PTR [esp]
  459b9c:	or     edx,DWORD PTR [esp+0x4]
  459ba0:	add    esp,0x8
  459ba3:	xor    eax,DWORD PTR [esp]
  459ba6:	xor    edx,DWORD PTR [esp+0x4]
  459baa:	add    esp,0x8
  459bad:	push   edx
  459bae:	push   eax
  459baf:	mov    eax,DWORD PTR [esp+0xc]
  459bb3:	shr    eax,0x9
  459bb6:	xor    edx,edx
  459bb8:	push   edx
  459bb9:	push   eax
  459bba:	mov    eax,DWORD PTR [esp+0x10]
  459bbe:	mov    edx,DWORD PTR [esp+0x14]
  459bc2:	shld   edx,eax,0x17
  459bc6:	shl    eax,0x17
  459bc9:	or     eax,DWORD PTR [esp]
  459bcc:	or     edx,DWORD PTR [esp+0x4]
  459bd0:	add    esp,0x8
  459bd3:	xor    eax,DWORD PTR [esp]
  459bd6:	xor    edx,DWORD PTR [esp+0x4]
  459bda:	add    esp,0x8
  459bdd:	add    eax,DWORD PTR [esp+0x18]
  459be1:	adc    edx,DWORD PTR [esp+0x1c]
  459be5:	push   edx
  459be6:	push   eax
  459be7:	mov    eax,DWORD PTR [esp+0x8]
  459beb:	mov    edx,DWORD PTR [esp+0xc]
  459bef:	and    eax,DWORD PTR [esp+0x10]
  459bf3:	and    edx,DWORD PTR [esp+0x14]
  459bf7:	push   edx
  459bf8:	push   eax
  459bf9:	mov    eax,DWORD PTR [esp+0x10]
  459bfd:	mov    edx,DWORD PTR [esp+0x14]
  459c01:	not    eax
  459c03:	not    edx
  459c05:	and    eax,DWORD PTR [esp+0x20]
  459c09:	and    edx,DWORD PTR [esp+0x24]
  459c0d:	xor    eax,DWORD PTR [esp]
  459c10:	xor    edx,DWORD PTR [esp+0x4]
  459c14:	add    esp,0x8
  459c17:	add    eax,DWORD PTR [esp]
  459c1a:	adc    edx,DWORD PTR [esp+0x4]
  459c1e:	add    esp,0x8
  459c21:	add    eax,0xc5c95a63
  459c26:	adc    edx,0x391c0cb3
  459c2c:	add    eax,DWORD PTR [esp+0x1f0]
  459c33:	adc    edx,DWORD PTR [esp+0x1f4]
  459c3a:	mov    DWORD PTR [esp+0x40],eax
  459c3e:	mov    DWORD PTR [esp+0x44],edx
  459c42:	mov    eax,DWORD PTR [esp+0x20]
  459c46:	mov    edx,DWORD PTR [esp+0x24]
  459c4a:	shrd   eax,edx,0x1c
  459c4e:	shr    edx,0x1c
  459c51:	push   edx
  459c52:	push   eax
  459c53:	mov    edx,DWORD PTR [esp+0x28]
  459c57:	shl    edx,0x4
  459c5a:	xor    eax,eax
  459c5c:	or     eax,DWORD PTR [esp]
  459c5f:	or     edx,DWORD PTR [esp+0x4]
  459c63:	add    esp,0x8
  459c66:	push   edx
  459c67:	push   eax
  459c68:	mov    eax,DWORD PTR [esp+0x2c]
  459c6c:	shr    eax,0x2
  459c6f:	xor    edx,edx
  459c71:	push   edx
  459c72:	push   eax
  459c73:	mov    eax,DWORD PTR [esp+0x30]
  459c77:	mov    edx,DWORD PTR [esp+0x34]
  459c7b:	shld   edx,eax,0x1e
  459c7f:	shl    eax,0x1e
  459c82:	or     eax,DWORD PTR [esp]
  459c85:	or     edx,DWORD PTR [esp+0x4]
  459c89:	add    esp,0x8
  459c8c:	xor    eax,DWORD PTR [esp]
  459c8f:	xor    edx,DWORD PTR [esp+0x4]
  459c93:	add    esp,0x8
  459c96:	push   edx
  459c97:	push   eax
  459c98:	mov    eax,DWORD PTR [esp+0x2c]
  459c9c:	shr    eax,0x7
  459c9f:	xor    edx,edx
  459ca1:	push   edx
  459ca2:	push   eax
  459ca3:	mov    eax,DWORD PTR [esp+0x30]
  459ca7:	mov    edx,DWORD PTR [esp+0x34]
  459cab:	shld   edx,eax,0x19
  459caf:	shl    eax,0x19
  459cb2:	or     eax,DWORD PTR [esp]
  459cb5:	or     edx,DWORD PTR [esp+0x4]
  459cb9:	add    esp,0x8
  459cbc:	xor    eax,DWORD PTR [esp]
  459cbf:	xor    edx,DWORD PTR [esp+0x4]
  459cc3:	add    esp,0x8
  459cc6:	push   edx
  459cc7:	push   eax
  459cc8:	mov    eax,DWORD PTR [esp+0x28]
  459ccc:	mov    edx,DWORD PTR [esp+0x2c]
  459cd0:	and    eax,DWORD PTR [esp+0x30]
  459cd4:	and    edx,DWORD PTR [esp+0x34]
  459cd8:	push   edx
  459cd9:	push   eax
  459cda:	mov    eax,DWORD PTR [esp+0x30]
  459cde:	mov    edx,DWORD PTR [esp+0x34]
  459ce2:	and    eax,DWORD PTR [esp+0x40]
  459ce6:	and    edx,DWORD PTR [esp+0x44]
  459cea:	xor    eax,DWORD PTR [esp]
  459ced:	xor    edx,DWORD PTR [esp+0x4]
  459cf1:	add    esp,0x8
  459cf4:	push   edx
  459cf5:	push   eax
  459cf6:	mov    eax,DWORD PTR [esp+0x38]
  459cfa:	mov    edx,DWORD PTR [esp+0x3c]
  459cfe:	and    eax,DWORD PTR [esp+0x40]
  459d02:	and    edx,DWORD PTR [esp+0x44]
  459d06:	xor    eax,DWORD PTR [esp]
  459d09:	xor    edx,DWORD PTR [esp+0x4]
  459d0d:	add    esp,0x8
  459d10:	add    eax,DWORD PTR [esp]
  459d13:	adc    edx,DWORD PTR [esp+0x4]
  459d17:	add    esp,0x8
  459d1a:	mov    DWORD PTR [esp+0x48],eax
  459d1e:	mov    DWORD PTR [esp+0x4c],edx
  459d22:	mov    eax,DWORD PTR [esp+0x38]
  459d26:	mov    edx,DWORD PTR [esp+0x3c]
  459d2a:	add    eax,DWORD PTR [esp+0x40]
  459d2e:	adc    edx,DWORD PTR [esp+0x44]
  459d32:	mov    DWORD PTR [esp+0x38],eax
  459d36:	mov    DWORD PTR [esp+0x3c],edx
  459d3a:	mov    eax,DWORD PTR [esp+0x40]
  459d3e:	mov    edx,DWORD PTR [esp+0x44]
  459d42:	add    eax,DWORD PTR [esp+0x48]
  459d46:	adc    edx,DWORD PTR [esp+0x4c]
  459d4a:	mov    DWORD PTR [esp+0x18],eax
  459d4e:	mov    DWORD PTR [esp+0x1c],edx
  459d52:	mov    eax,DWORD PTR [esp+0x38]
  459d56:	mov    edx,DWORD PTR [esp+0x3c]
  459d5a:	shrd   eax,edx,0xe
  459d5e:	shr    edx,0xe
  459d61:	push   edx
  459d62:	push   eax
  459d63:	mov    edx,DWORD PTR [esp+0x40]
  459d67:	shl    edx,0x12
  459d6a:	xor    eax,eax
  459d6c:	or     eax,DWORD PTR [esp]
  459d6f:	or     edx,DWORD PTR [esp+0x4]
  459d73:	add    esp,0x8
  459d76:	push   edx
  459d77:	push   eax
  459d78:	mov    eax,DWORD PTR [esp+0x40]
  459d7c:	mov    edx,DWORD PTR [esp+0x44]
  459d80:	shrd   eax,edx,0x12
  459d84:	shr    edx,0x12
  459d87:	push   edx
  459d88:	push   eax
  459d89:	mov    edx,DWORD PTR [esp+0x48]
  459d8d:	shl    edx,0xe
  459d90:	xor    eax,eax
  459d92:	or     eax,DWORD PTR [esp]
  459d95:	or     edx,DWORD PTR [esp+0x4]
  459d99:	add    esp,0x8
  459d9c:	xor    eax,DWORD PTR [esp]
  459d9f:	xor    edx,DWORD PTR [esp+0x4]
  459da3:	add    esp,0x8
  459da6:	push   edx
  459da7:	push   eax
  459da8:	mov    eax,DWORD PTR [esp+0x44]
  459dac:	shr    eax,0x9
  459daf:	xor    edx,edx
  459db1:	push   edx
  459db2:	push   eax
  459db3:	mov    eax,DWORD PTR [esp+0x48]
  459db7:	mov    edx,DWORD PTR [esp+0x4c]
  459dbb:	shld   edx,eax,0x17
  459dbf:	shl    eax,0x17
  459dc2:	or     eax,DWORD PTR [esp]
  459dc5:	or     edx,DWORD PTR [esp+0x4]
  459dc9:	add    esp,0x8
  459dcc:	xor    eax,DWORD PTR [esp]
  459dcf:	xor    edx,DWORD PTR [esp+0x4]
  459dd3:	add    esp,0x8
  459dd6:	add    eax,DWORD PTR [esp+0x10]
  459dda:	adc    edx,DWORD PTR [esp+0x14]
  459dde:	push   edx
  459ddf:	push   eax
  459de0:	mov    eax,DWORD PTR [esp+0x40]
  459de4:	mov    edx,DWORD PTR [esp+0x44]
  459de8:	and    eax,DWORD PTR [esp+0x8]
  459dec:	and    edx,DWORD PTR [esp+0xc]
  459df0:	push   edx
  459df1:	push   eax
  459df2:	mov    eax,DWORD PTR [esp+0x48]
  459df6:	mov    edx,DWORD PTR [esp+0x4c]
  459dfa:	not    eax
  459dfc:	not    edx
  459dfe:	and    eax,DWORD PTR [esp+0x18]
  459e02:	and    edx,DWORD PTR [esp+0x1c]
  459e06:	xor    eax,DWORD PTR [esp]
  459e09:	xor    edx,DWORD PTR [esp+0x4]
  459e0d:	add    esp,0x8
  459e10:	add    eax,DWORD PTR [esp]
  459e13:	adc    edx,DWORD PTR [esp+0x4]
  459e17:	add    esp,0x8
  459e1a:	add    eax,0xe3418acb
  459e1f:	adc    edx,0x4ed8aa4a
  459e25:	add    eax,DWORD PTR [esp+0x1f8]
  459e2c:	adc    edx,DWORD PTR [esp+0x1fc]
  459e33:	mov    DWORD PTR [esp+0x40],eax
  459e37:	mov    DWORD PTR [esp+0x44],edx
  459e3b:	mov    eax,DWORD PTR [esp+0x18]
  459e3f:	mov    edx,DWORD PTR [esp+0x1c]
  459e43:	shrd   eax,edx,0x1c
  459e47:	shr    edx,0x1c
  459e4a:	push   edx
  459e4b:	push   eax
  459e4c:	mov    edx,DWORD PTR [esp+0x20]
  459e50:	shl    edx,0x4
  459e53:	xor    eax,eax
  459e55:	or     eax,DWORD PTR [esp]
  459e58:	or     edx,DWORD PTR [esp+0x4]
  459e5c:	add    esp,0x8
  459e5f:	push   edx
  459e60:	push   eax
  459e61:	mov    eax,DWORD PTR [esp+0x24]
  459e65:	shr    eax,0x2
  459e68:	xor    edx,edx
  459e6a:	push   edx
  459e6b:	push   eax
  459e6c:	mov    eax,DWORD PTR [esp+0x28]
  459e70:	mov    edx,DWORD PTR [esp+0x2c]
  459e74:	shld   edx,eax,0x1e
  459e78:	shl    eax,0x1e
  459e7b:	or     eax,DWORD PTR [esp]
  459e7e:	or     edx,DWORD PTR [esp+0x4]
  459e82:	add    esp,0x8
  459e85:	xor    eax,DWORD PTR [esp]
  459e88:	xor    edx,DWORD PTR [esp+0x4]
  459e8c:	add    esp,0x8
  459e8f:	push   edx
  459e90:	push   eax
  459e91:	mov    eax,DWORD PTR [esp+0x24]
  459e95:	shr    eax,0x7
  459e98:	xor    edx,edx
  459e9a:	push   edx
  459e9b:	push   eax
  459e9c:	mov    eax,DWORD PTR [esp+0x28]
  459ea0:	mov    edx,DWORD PTR [esp+0x2c]
  459ea4:	shld   edx,eax,0x19
  459ea8:	shl    eax,0x19
  459eab:	or     eax,DWORD PTR [esp]
  459eae:	or     edx,DWORD PTR [esp+0x4]
  459eb2:	add    esp,0x8
  459eb5:	xor    eax,DWORD PTR [esp]
  459eb8:	xor    edx,DWORD PTR [esp+0x4]
  459ebc:	add    esp,0x8
  459ebf:	push   edx
  459ec0:	push   eax
  459ec1:	mov    eax,DWORD PTR [esp+0x20]
  459ec5:	mov    edx,DWORD PTR [esp+0x24]
  459ec9:	and    eax,DWORD PTR [esp+0x28]
  459ecd:	and    edx,DWORD PTR [esp+0x2c]
  459ed1:	push   edx
  459ed2:	push   eax
  459ed3:	mov    eax,DWORD PTR [esp+0x28]
  459ed7:	mov    edx,DWORD PTR [esp+0x2c]
  459edb:	and    eax,DWORD PTR [esp+0x38]
  459edf:	and    edx,DWORD PTR [esp+0x3c]
  459ee3:	xor    eax,DWORD PTR [esp]
  459ee6:	xor    edx,DWORD PTR [esp+0x4]
  459eea:	add    esp,0x8
  459eed:	push   edx
  459eee:	push   eax
  459eef:	mov    eax,DWORD PTR [esp+0x30]
  459ef3:	mov    edx,DWORD PTR [esp+0x34]
  459ef7:	and    eax,DWORD PTR [esp+0x38]
  459efb:	and    edx,DWORD PTR [esp+0x3c]
  459eff:	xor    eax,DWORD PTR [esp]
  459f02:	xor    edx,DWORD PTR [esp+0x4]
  459f06:	add    esp,0x8
  459f09:	add    eax,DWORD PTR [esp]
  459f0c:	adc    edx,DWORD PTR [esp+0x4]
  459f10:	add    esp,0x8
  459f13:	mov    DWORD PTR [esp+0x48],eax
  459f17:	mov    DWORD PTR [esp+0x4c],edx
  459f1b:	mov    eax,DWORD PTR [esp+0x30]
  459f1f:	mov    edx,DWORD PTR [esp+0x34]
  459f23:	add    eax,DWORD PTR [esp+0x40]
  459f27:	adc    edx,DWORD PTR [esp+0x44]
  459f2b:	mov    DWORD PTR [esp+0x30],eax
  459f2f:	mov    DWORD PTR [esp+0x34],edx
  459f33:	mov    eax,DWORD PTR [esp+0x40]
  459f37:	mov    edx,DWORD PTR [esp+0x44]
  459f3b:	add    eax,DWORD PTR [esp+0x48]
  459f3f:	adc    edx,DWORD PTR [esp+0x4c]
  459f43:	mov    DWORD PTR [esp+0x10],eax
  459f47:	mov    DWORD PTR [esp+0x14],edx
  459f4b:	mov    eax,DWORD PTR [esp+0x30]
  459f4f:	mov    edx,DWORD PTR [esp+0x34]
  459f53:	shrd   eax,edx,0xe
  459f57:	shr    edx,0xe
  459f5a:	push   edx
  459f5b:	push   eax
  459f5c:	mov    edx,DWORD PTR [esp+0x38]
  459f60:	shl    edx,0x12
  459f63:	xor    eax,eax
  459f65:	or     eax,DWORD PTR [esp]
  459f68:	or     edx,DWORD PTR [esp+0x4]
  459f6c:	add    esp,0x8
  459f6f:	push   edx
  459f70:	push   eax
  459f71:	mov    eax,DWORD PTR [esp+0x38]
  459f75:	mov    edx,DWORD PTR [esp+0x3c]
  459f79:	shrd   eax,edx,0x12
  459f7d:	shr    edx,0x12
  459f80:	push   edx
  459f81:	push   eax
  459f82:	mov    edx,DWORD PTR [esp+0x40]
  459f86:	shl    edx,0xe
  459f89:	xor    eax,eax
  459f8b:	or     eax,DWORD PTR [esp]
  459f8e:	or     edx,DWORD PTR [esp+0x4]
  459f92:	add    esp,0x8
  459f95:	xor    eax,DWORD PTR [esp]
  459f98:	xor    edx,DWORD PTR [esp+0x4]
  459f9c:	add    esp,0x8
  459f9f:	push   edx
  459fa0:	push   eax
  459fa1:	mov    eax,DWORD PTR [esp+0x3c]
  459fa5:	shr    eax,0x9
  459fa8:	xor    edx,edx
  459faa:	push   edx
  459fab:	push   eax
  459fac:	mov    eax,DWORD PTR [esp+0x40]
  459fb0:	mov    edx,DWORD PTR [esp+0x44]
  459fb4:	shld   edx,eax,0x17
  459fb8:	shl    eax,0x17
  459fbb:	or     eax,DWORD PTR [esp]
  459fbe:	or     edx,DWORD PTR [esp+0x4]
  459fc2:	add    esp,0x8
  459fc5:	xor    eax,DWORD PTR [esp]
  459fc8:	xor    edx,DWORD PTR [esp+0x4]
  459fcc:	add    esp,0x8
  459fcf:	add    eax,DWORD PTR [esp+0x8]
  459fd3:	adc    edx,DWORD PTR [esp+0xc]
  459fd7:	push   edx
  459fd8:	push   eax
  459fd9:	mov    eax,DWORD PTR [esp+0x38]
  459fdd:	mov    edx,DWORD PTR [esp+0x3c]
  459fe1:	and    eax,DWORD PTR [esp+0x40]
  459fe5:	and    edx,DWORD PTR [esp+0x44]
  459fe9:	push   edx
  459fea:	push   eax
  459feb:	mov    eax,DWORD PTR [esp+0x40]
  459fef:	mov    edx,DWORD PTR [esp+0x44]
  459ff3:	not    eax
  459ff5:	not    edx
  459ff7:	and    eax,DWORD PTR [esp+0x10]
  459ffb:	and    edx,DWORD PTR [esp+0x14]
  459fff:	xor    eax,DWORD PTR [esp]
  45a002:	xor    edx,DWORD PTR [esp+0x4]
  45a006:	add    esp,0x8
  45a009:	add    eax,DWORD PTR [esp]
  45a00c:	adc    edx,DWORD PTR [esp+0x4]
  45a010:	add    esp,0x8
  45a013:	add    eax,0x7763e373
  45a018:	adc    edx,0x5b9cca4f
  45a01e:	add    eax,DWORD PTR [esp+0x200]
  45a025:	adc    edx,DWORD PTR [esp+0x204]
  45a02c:	mov    DWORD PTR [esp+0x40],eax
  45a030:	mov    DWORD PTR [esp+0x44],edx
  45a034:	mov    eax,DWORD PTR [esp+0x10]
  45a038:	mov    edx,DWORD PTR [esp+0x14]
  45a03c:	shrd   eax,edx,0x1c
  45a040:	shr    edx,0x1c
  45a043:	push   edx
  45a044:	push   eax
  45a045:	mov    edx,DWORD PTR [esp+0x18]
  45a049:	shl    edx,0x4
  45a04c:	xor    eax,eax
  45a04e:	or     eax,DWORD PTR [esp]
  45a051:	or     edx,DWORD PTR [esp+0x4]
  45a055:	add    esp,0x8
  45a058:	push   edx
  45a059:	push   eax
  45a05a:	mov    eax,DWORD PTR [esp+0x1c]
  45a05e:	shr    eax,0x2
  45a061:	xor    edx,edx
  45a063:	push   edx
  45a064:	push   eax
  45a065:	mov    eax,DWORD PTR [esp+0x20]
  45a069:	mov    edx,DWORD PTR [esp+0x24]
  45a06d:	shld   edx,eax,0x1e
  45a071:	shl    eax,0x1e
  45a074:	or     eax,DWORD PTR [esp]
  45a077:	or     edx,DWORD PTR [esp+0x4]
  45a07b:	add    esp,0x8
  45a07e:	xor    eax,DWORD PTR [esp]
  45a081:	xor    edx,DWORD PTR [esp+0x4]
  45a085:	add    esp,0x8
  45a088:	push   edx
  45a089:	push   eax
  45a08a:	mov    eax,DWORD PTR [esp+0x1c]
  45a08e:	shr    eax,0x7
  45a091:	xor    edx,edx
  45a093:	push   edx
  45a094:	push   eax
  45a095:	mov    eax,DWORD PTR [esp+0x20]
  45a099:	mov    edx,DWORD PTR [esp+0x24]
  45a09d:	shld   edx,eax,0x19
  45a0a1:	shl    eax,0x19
  45a0a4:	or     eax,DWORD PTR [esp]
  45a0a7:	or     edx,DWORD PTR [esp+0x4]
  45a0ab:	add    esp,0x8
  45a0ae:	xor    eax,DWORD PTR [esp]
  45a0b1:	xor    edx,DWORD PTR [esp+0x4]
  45a0b5:	add    esp,0x8
  45a0b8:	push   edx
  45a0b9:	push   eax
  45a0ba:	mov    eax,DWORD PTR [esp+0x18]
  45a0be:	mov    edx,DWORD PTR [esp+0x1c]
  45a0c2:	and    eax,DWORD PTR [esp+0x20]
  45a0c6:	and    edx,DWORD PTR [esp+0x24]
  45a0ca:	push   edx
  45a0cb:	push   eax
  45a0cc:	mov    eax,DWORD PTR [esp+0x20]
  45a0d0:	mov    edx,DWORD PTR [esp+0x24]
  45a0d4:	and    eax,DWORD PTR [esp+0x30]
  45a0d8:	and    edx,DWORD PTR [esp+0x34]
  45a0dc:	xor    eax,DWORD PTR [esp]
  45a0df:	xor    edx,DWORD PTR [esp+0x4]
  45a0e3:	add    esp,0x8
  45a0e6:	push   edx
  45a0e7:	push   eax
  45a0e8:	mov    eax,DWORD PTR [esp+0x28]
  45a0ec:	mov    edx,DWORD PTR [esp+0x2c]
  45a0f0:	and    eax,DWORD PTR [esp+0x30]
  45a0f4:	and    edx,DWORD PTR [esp+0x34]
  45a0f8:	xor    eax,DWORD PTR [esp]
  45a0fb:	xor    edx,DWORD PTR [esp+0x4]
  45a0ff:	add    esp,0x8
  45a102:	add    eax,DWORD PTR [esp]
  45a105:	adc    edx,DWORD PTR [esp+0x4]
  45a109:	add    esp,0x8
  45a10c:	mov    DWORD PTR [esp+0x48],eax
  45a110:	mov    DWORD PTR [esp+0x4c],edx
  45a114:	mov    eax,DWORD PTR [esp+0x28]
  45a118:	mov    edx,DWORD PTR [esp+0x2c]
  45a11c:	add    eax,DWORD PTR [esp+0x40]
  45a120:	adc    edx,DWORD PTR [esp+0x44]
  45a124:	mov    DWORD PTR [esp+0x28],eax
  45a128:	mov    DWORD PTR [esp+0x2c],edx
  45a12c:	mov    eax,DWORD PTR [esp+0x40]
  45a130:	mov    edx,DWORD PTR [esp+0x44]
  45a134:	add    eax,DWORD PTR [esp+0x48]
  45a138:	adc    edx,DWORD PTR [esp+0x4c]
  45a13c:	mov    DWORD PTR [esp+0x8],eax
  45a140:	mov    DWORD PTR [esp+0xc],edx
  45a144:	mov    eax,DWORD PTR [esp+0x28]
  45a148:	mov    edx,DWORD PTR [esp+0x2c]
  45a14c:	shrd   eax,edx,0xe
  45a150:	shr    edx,0xe
  45a153:	push   edx
  45a154:	push   eax
  45a155:	mov    edx,DWORD PTR [esp+0x30]
  45a159:	shl    edx,0x12
  45a15c:	xor    eax,eax
  45a15e:	or     eax,DWORD PTR [esp]
  45a161:	or     edx,DWORD PTR [esp+0x4]
  45a165:	add    esp,0x8
  45a168:	push   edx
  45a169:	push   eax
  45a16a:	mov    eax,DWORD PTR [esp+0x30]
  45a16e:	mov    edx,DWORD PTR [esp+0x34]
  45a172:	shrd   eax,edx,0x12
  45a176:	shr    edx,0x12
  45a179:	push   edx
  45a17a:	push   eax
  45a17b:	mov    edx,DWORD PTR [esp+0x38]
  45a17f:	shl    edx,0xe
  45a182:	xor    eax,eax
  45a184:	or     eax,DWORD PTR [esp]
  45a187:	or     edx,DWORD PTR [esp+0x4]
  45a18b:	add    esp,0x8
  45a18e:	xor    eax,DWORD PTR [esp]
  45a191:	xor    edx,DWORD PTR [esp+0x4]
  45a195:	add    esp,0x8
  45a198:	push   edx
  45a199:	push   eax
  45a19a:	mov    eax,DWORD PTR [esp+0x34]
  45a19e:	shr    eax,0x9
  45a1a1:	xor    edx,edx
  45a1a3:	push   edx
  45a1a4:	push   eax
  45a1a5:	mov    eax,DWORD PTR [esp+0x38]
  45a1a9:	mov    edx,DWORD PTR [esp+0x3c]
  45a1ad:	shld   edx,eax,0x17
  45a1b1:	shl    eax,0x17
  45a1b4:	or     eax,DWORD PTR [esp]
  45a1b7:	or     edx,DWORD PTR [esp+0x4]
  45a1bb:	add    esp,0x8
  45a1be:	xor    eax,DWORD PTR [esp]
  45a1c1:	xor    edx,DWORD PTR [esp+0x4]
  45a1c5:	add    esp,0x8
  45a1c8:	add    eax,DWORD PTR [esp]
  45a1cb:	adc    edx,DWORD PTR [esp+0x4]
  45a1cf:	push   edx
  45a1d0:	push   eax
  45a1d1:	mov    eax,DWORD PTR [esp+0x30]
  45a1d5:	mov    edx,DWORD PTR [esp+0x34]
  45a1d9:	and    eax,DWORD PTR [esp+0x38]
  45a1dd:	and    edx,DWORD PTR [esp+0x3c]
  45a1e1:	push   edx
  45a1e2:	push   eax
  45a1e3:	mov    eax,DWORD PTR [esp+0x38]
  45a1e7:	mov    edx,DWORD PTR [esp+0x3c]
  45a1eb:	not    eax
  45a1ed:	not    edx
  45a1ef:	and    eax,DWORD PTR [esp+0x48]
  45a1f3:	and    edx,DWORD PTR [esp+0x4c]
  45a1f7:	xor    eax,DWORD PTR [esp]
  45a1fa:	xor    edx,DWORD PTR [esp+0x4]
  45a1fe:	add    esp,0x8
  45a201:	add    eax,DWORD PTR [esp]
  45a204:	adc    edx,DWORD PTR [esp+0x4]
  45a208:	add    esp,0x8
  45a20b:	add    eax,0xd6b2b8a3
  45a210:	adc    edx,0x682e6ff3
  45a216:	add    eax,DWORD PTR [esp+0x208]
  45a21d:	adc    edx,DWORD PTR [esp+0x20c]
  45a224:	mov    DWORD PTR [esp+0x40],eax
  45a228:	mov    DWORD PTR [esp+0x44],edx
  45a22c:	mov    eax,DWORD PTR [esp+0x8]
  45a230:	mov    edx,DWORD PTR [esp+0xc]
  45a234:	shrd   eax,edx,0x1c
  45a238:	shr    edx,0x1c
  45a23b:	push   edx
  45a23c:	push   eax
  45a23d:	mov    edx,DWORD PTR [esp+0x10]
  45a241:	shl    edx,0x4
  45a244:	xor    eax,eax
  45a246:	or     eax,DWORD PTR [esp]
  45a249:	or     edx,DWORD PTR [esp+0x4]
  45a24d:	add    esp,0x8
  45a250:	push   edx
  45a251:	push   eax
  45a252:	mov    eax,DWORD PTR [esp+0x14]
  45a256:	shr    eax,0x2
  45a259:	xor    edx,edx
  45a25b:	push   edx
  45a25c:	push   eax
  45a25d:	mov    eax,DWORD PTR [esp+0x18]
  45a261:	mov    edx,DWORD PTR [esp+0x1c]
  45a265:	shld   edx,eax,0x1e
  45a269:	shl    eax,0x1e
  45a26c:	or     eax,DWORD PTR [esp]
  45a26f:	or     edx,DWORD PTR [esp+0x4]
  45a273:	add    esp,0x8
  45a276:	xor    eax,DWORD PTR [esp]
  45a279:	xor    edx,DWORD PTR [esp+0x4]
  45a27d:	add    esp,0x8
  45a280:	push   edx
  45a281:	push   eax
  45a282:	mov    eax,DWORD PTR [esp+0x14]
  45a286:	shr    eax,0x7
  45a289:	xor    edx,edx
  45a28b:	push   edx
  45a28c:	push   eax
  45a28d:	mov    eax,DWORD PTR [esp+0x18]
  45a291:	mov    edx,DWORD PTR [esp+0x1c]
  45a295:	shld   edx,eax,0x19
  45a299:	shl    eax,0x19
  45a29c:	or     eax,DWORD PTR [esp]
  45a29f:	or     edx,DWORD PTR [esp+0x4]
  45a2a3:	add    esp,0x8
  45a2a6:	xor    eax,DWORD PTR [esp]
  45a2a9:	xor    edx,DWORD PTR [esp+0x4]
  45a2ad:	add    esp,0x8
  45a2b0:	push   edx
  45a2b1:	push   eax
  45a2b2:	mov    eax,DWORD PTR [esp+0x10]
  45a2b6:	mov    edx,DWORD PTR [esp+0x14]
  45a2ba:	and    eax,DWORD PTR [esp+0x18]
  45a2be:	and    edx,DWORD PTR [esp+0x1c]
  45a2c2:	push   edx
  45a2c3:	push   eax
  45a2c4:	mov    eax,DWORD PTR [esp+0x18]
  45a2c8:	mov    edx,DWORD PTR [esp+0x1c]
  45a2cc:	and    eax,DWORD PTR [esp+0x28]
  45a2d0:	and    edx,DWORD PTR [esp+0x2c]
  45a2d4:	xor    eax,DWORD PTR [esp]
  45a2d7:	xor    edx,DWORD PTR [esp+0x4]
  45a2db:	add    esp,0x8
  45a2de:	push   edx
  45a2df:	push   eax
  45a2e0:	mov    eax,DWORD PTR [esp+0x20]
  45a2e4:	mov    edx,DWORD PTR [esp+0x24]
  45a2e8:	and    eax,DWORD PTR [esp+0x28]
  45a2ec:	and    edx,DWORD PTR [esp+0x2c]
  45a2f0:	xor    eax,DWORD PTR [esp]
  45a2f3:	xor    edx,DWORD PTR [esp+0x4]
  45a2f7:	add    esp,0x8
  45a2fa:	add    eax,DWORD PTR [esp]
  45a2fd:	adc    edx,DWORD PTR [esp+0x4]
  45a301:	add    esp,0x8
  45a304:	mov    DWORD PTR [esp+0x48],eax
  45a308:	mov    DWORD PTR [esp+0x4c],edx
  45a30c:	mov    eax,DWORD PTR [esp+0x20]
  45a310:	mov    edx,DWORD PTR [esp+0x24]
  45a314:	add    eax,DWORD PTR [esp+0x40]
  45a318:	adc    edx,DWORD PTR [esp+0x44]
  45a31c:	mov    DWORD PTR [esp+0x20],eax
  45a320:	mov    DWORD PTR [esp+0x24],edx
  45a324:	mov    eax,DWORD PTR [esp+0x40]
  45a328:	mov    edx,DWORD PTR [esp+0x44]
  45a32c:	add    eax,DWORD PTR [esp+0x48]
  45a330:	adc    edx,DWORD PTR [esp+0x4c]
  45a334:	mov    DWORD PTR [esp],eax
  45a337:	mov    DWORD PTR [esp+0x4],edx
  45a33b:	mov    eax,DWORD PTR [esp+0x20]
  45a33f:	mov    edx,DWORD PTR [esp+0x24]
  45a343:	shrd   eax,edx,0xe
  45a347:	shr    edx,0xe
  45a34a:	push   edx
  45a34b:	push   eax
  45a34c:	mov    edx,DWORD PTR [esp+0x28]
  45a350:	shl    edx,0x12
  45a353:	xor    eax,eax
  45a355:	or     eax,DWORD PTR [esp]
  45a358:	or     edx,DWORD PTR [esp+0x4]
  45a35c:	add    esp,0x8
  45a35f:	push   edx
  45a360:	push   eax
  45a361:	mov    eax,DWORD PTR [esp+0x28]
  45a365:	mov    edx,DWORD PTR [esp+0x2c]
  45a369:	shrd   eax,edx,0x12
  45a36d:	shr    edx,0x12
  45a370:	push   edx
  45a371:	push   eax
  45a372:	mov    edx,DWORD PTR [esp+0x30]
  45a376:	shl    edx,0xe
  45a379:	xor    eax,eax
  45a37b:	or     eax,DWORD PTR [esp]
  45a37e:	or     edx,DWORD PTR [esp+0x4]
  45a382:	add    esp,0x8
  45a385:	xor    eax,DWORD PTR [esp]
  45a388:	xor    edx,DWORD PTR [esp+0x4]
  45a38c:	add    esp,0x8
  45a38f:	push   edx
  45a390:	push   eax
  45a391:	mov    eax,DWORD PTR [esp+0x2c]
  45a395:	shr    eax,0x9
  45a398:	xor    edx,edx
  45a39a:	push   edx
  45a39b:	push   eax
  45a39c:	mov    eax,DWORD PTR [esp+0x30]
  45a3a0:	mov    edx,DWORD PTR [esp+0x34]
  45a3a4:	shld   edx,eax,0x17
  45a3a8:	shl    eax,0x17
  45a3ab:	or     eax,DWORD PTR [esp]
  45a3ae:	or     edx,DWORD PTR [esp+0x4]
  45a3b2:	add    esp,0x8
  45a3b5:	xor    eax,DWORD PTR [esp]
  45a3b8:	xor    edx,DWORD PTR [esp+0x4]
  45a3bc:	add    esp,0x8
  45a3bf:	add    eax,DWORD PTR [esp+0x38]
  45a3c3:	adc    edx,DWORD PTR [esp+0x3c]
  45a3c7:	push   edx
  45a3c8:	push   eax
  45a3c9:	mov    eax,DWORD PTR [esp+0x28]
  45a3cd:	mov    edx,DWORD PTR [esp+0x2c]
  45a3d1:	and    eax,DWORD PTR [esp+0x30]
  45a3d5:	and    edx,DWORD PTR [esp+0x34]
  45a3d9:	push   edx
  45a3da:	push   eax
  45a3db:	mov    eax,DWORD PTR [esp+0x30]
  45a3df:	mov    edx,DWORD PTR [esp+0x34]
  45a3e3:	not    eax
  45a3e5:	not    edx
  45a3e7:	and    eax,DWORD PTR [esp+0x40]
  45a3eb:	and    edx,DWORD PTR [esp+0x44]
  45a3ef:	xor    eax,DWORD PTR [esp]
  45a3f2:	xor    edx,DWORD PTR [esp+0x4]
  45a3f6:	add    esp,0x8
  45a3f9:	add    eax,DWORD PTR [esp]
  45a3fc:	adc    edx,DWORD PTR [esp+0x4]
  45a400:	add    esp,0x8
  45a403:	add    eax,0x5defb2fc
  45a408:	adc    edx,0x748f82ee
  45a40e:	add    eax,DWORD PTR [esp+0x210]
  45a415:	adc    edx,DWORD PTR [esp+0x214]
  45a41c:	mov    DWORD PTR [esp+0x40],eax
  45a420:	mov    DWORD PTR [esp+0x44],edx
  45a424:	mov    eax,DWORD PTR [esp]
  45a427:	mov    edx,DWORD PTR [esp+0x4]
  45a42b:	shrd   eax,edx,0x1c
  45a42f:	shr    edx,0x1c
  45a432:	push   edx
  45a433:	push   eax
  45a434:	mov    edx,DWORD PTR [esp+0x8]
  45a438:	shl    edx,0x4
  45a43b:	xor    eax,eax
  45a43d:	or     eax,DWORD PTR [esp]
  45a440:	or     edx,DWORD PTR [esp+0x4]
  45a444:	add    esp,0x8
  45a447:	push   edx
  45a448:	push   eax
  45a449:	mov    eax,DWORD PTR [esp+0xc]
  45a44d:	shr    eax,0x2
  45a450:	xor    edx,edx
  45a452:	push   edx
  45a453:	push   eax
  45a454:	mov    eax,DWORD PTR [esp+0x10]
  45a458:	mov    edx,DWORD PTR [esp+0x14]
  45a45c:	shld   edx,eax,0x1e
  45a460:	shl    eax,0x1e
  45a463:	or     eax,DWORD PTR [esp]
  45a466:	or     edx,DWORD PTR [esp+0x4]
  45a46a:	add    esp,0x8
  45a46d:	xor    eax,DWORD PTR [esp]
  45a470:	xor    edx,DWORD PTR [esp+0x4]
  45a474:	add    esp,0x8
  45a477:	push   edx
  45a478:	push   eax
  45a479:	mov    eax,DWORD PTR [esp+0xc]
  45a47d:	shr    eax,0x7
  45a480:	xor    edx,edx
  45a482:	push   edx
  45a483:	push   eax
  45a484:	mov    eax,DWORD PTR [esp+0x10]
  45a488:	mov    edx,DWORD PTR [esp+0x14]
  45a48c:	shld   edx,eax,0x19
  45a490:	shl    eax,0x19
  45a493:	or     eax,DWORD PTR [esp]
  45a496:	or     edx,DWORD PTR [esp+0x4]
  45a49a:	add    esp,0x8
  45a49d:	xor    eax,DWORD PTR [esp]
  45a4a0:	xor    edx,DWORD PTR [esp+0x4]
  45a4a4:	add    esp,0x8
  45a4a7:	push   edx
  45a4a8:	push   eax
  45a4a9:	mov    eax,DWORD PTR [esp+0x8]
  45a4ad:	mov    edx,DWORD PTR [esp+0xc]
  45a4b1:	and    eax,DWORD PTR [esp+0x10]
  45a4b5:	and    edx,DWORD PTR [esp+0x14]
  45a4b9:	push   edx
  45a4ba:	push   eax
  45a4bb:	mov    eax,DWORD PTR [esp+0x10]
  45a4bf:	mov    edx,DWORD PTR [esp+0x14]
  45a4c3:	and    eax,DWORD PTR [esp+0x20]
  45a4c7:	and    edx,DWORD PTR [esp+0x24]
  45a4cb:	xor    eax,DWORD PTR [esp]
  45a4ce:	xor    edx,DWORD PTR [esp+0x4]
  45a4d2:	add    esp,0x8
  45a4d5:	push   edx
  45a4d6:	push   eax
  45a4d7:	mov    eax,DWORD PTR [esp+0x18]
  45a4db:	mov    edx,DWORD PTR [esp+0x1c]
  45a4df:	and    eax,DWORD PTR [esp+0x20]
  45a4e3:	and    edx,DWORD PTR [esp+0x24]
  45a4e7:	xor    eax,DWORD PTR [esp]
  45a4ea:	xor    edx,DWORD PTR [esp+0x4]
  45a4ee:	add    esp,0x8
  45a4f1:	add    eax,DWORD PTR [esp]
  45a4f4:	adc    edx,DWORD PTR [esp+0x4]
  45a4f8:	add    esp,0x8
  45a4fb:	mov    DWORD PTR [esp+0x48],eax
  45a4ff:	mov    DWORD PTR [esp+0x4c],edx
  45a503:	mov    eax,DWORD PTR [esp+0x18]
  45a507:	mov    edx,DWORD PTR [esp+0x1c]
  45a50b:	add    eax,DWORD PTR [esp+0x40]
  45a50f:	adc    edx,DWORD PTR [esp+0x44]
  45a513:	mov    DWORD PTR [esp+0x18],eax
  45a517:	mov    DWORD PTR [esp+0x1c],edx
  45a51b:	mov    eax,DWORD PTR [esp+0x40]
  45a51f:	mov    edx,DWORD PTR [esp+0x44]
  45a523:	add    eax,DWORD PTR [esp+0x48]
  45a527:	adc    edx,DWORD PTR [esp+0x4c]
  45a52b:	mov    DWORD PTR [esp+0x38],eax
  45a52f:	mov    DWORD PTR [esp+0x3c],edx
  45a533:	mov    eax,DWORD PTR [esp+0x18]
  45a537:	mov    edx,DWORD PTR [esp+0x1c]
  45a53b:	shrd   eax,edx,0xe
  45a53f:	shr    edx,0xe
  45a542:	push   edx
  45a543:	push   eax
  45a544:	mov    edx,DWORD PTR [esp+0x20]
  45a548:	shl    edx,0x12
  45a54b:	xor    eax,eax
  45a54d:	or     eax,DWORD PTR [esp]
  45a550:	or     edx,DWORD PTR [esp+0x4]
  45a554:	add    esp,0x8
  45a557:	push   edx
  45a558:	push   eax
  45a559:	mov    eax,DWORD PTR [esp+0x20]
  45a55d:	mov    edx,DWORD PTR [esp+0x24]
  45a561:	shrd   eax,edx,0x12
  45a565:	shr    edx,0x12
  45a568:	push   edx
  45a569:	push   eax
  45a56a:	mov    edx,DWORD PTR [esp+0x28]
  45a56e:	shl    edx,0xe
  45a571:	xor    eax,eax
  45a573:	or     eax,DWORD PTR [esp]
  45a576:	or     edx,DWORD PTR [esp+0x4]
  45a57a:	add    esp,0x8
  45a57d:	xor    eax,DWORD PTR [esp]
  45a580:	xor    edx,DWORD PTR [esp+0x4]
  45a584:	add    esp,0x8
  45a587:	push   edx
  45a588:	push   eax
  45a589:	mov    eax,DWORD PTR [esp+0x24]
  45a58d:	shr    eax,0x9
  45a590:	xor    edx,edx
  45a592:	push   edx
  45a593:	push   eax
  45a594:	mov    eax,DWORD PTR [esp+0x28]
  45a598:	mov    edx,DWORD PTR [esp+0x2c]
  45a59c:	shld   edx,eax,0x17
  45a5a0:	shl    eax,0x17
  45a5a3:	or     eax,DWORD PTR [esp]
  45a5a6:	or     edx,DWORD PTR [esp+0x4]
  45a5aa:	add    esp,0x8
  45a5ad:	xor    eax,DWORD PTR [esp]
  45a5b0:	xor    edx,DWORD PTR [esp+0x4]
  45a5b4:	add    esp,0x8
  45a5b7:	add    eax,DWORD PTR [esp+0x30]
  45a5bb:	adc    edx,DWORD PTR [esp+0x34]
  45a5bf:	push   edx
  45a5c0:	push   eax
  45a5c1:	mov    eax,DWORD PTR [esp+0x20]
  45a5c5:	mov    edx,DWORD PTR [esp+0x24]
  45a5c9:	and    eax,DWORD PTR [esp+0x28]
  45a5cd:	and    edx,DWORD PTR [esp+0x2c]
  45a5d1:	push   edx
  45a5d2:	push   eax
  45a5d3:	mov    eax,DWORD PTR [esp+0x28]
  45a5d7:	mov    edx,DWORD PTR [esp+0x2c]
  45a5db:	not    eax
  45a5dd:	not    edx
  45a5df:	and    eax,DWORD PTR [esp+0x38]
  45a5e3:	and    edx,DWORD PTR [esp+0x3c]
  45a5e7:	xor    eax,DWORD PTR [esp]
  45a5ea:	xor    edx,DWORD PTR [esp+0x4]
  45a5ee:	add    esp,0x8
  45a5f1:	add    eax,DWORD PTR [esp]
  45a5f4:	adc    edx,DWORD PTR [esp+0x4]
  45a5f8:	add    esp,0x8
  45a5fb:	add    eax,0x43172f60
  45a600:	adc    edx,0x78a5636f
  45a606:	add    eax,DWORD PTR [esp+0x218]
  45a60d:	adc    edx,DWORD PTR [esp+0x21c]
  45a614:	mov    DWORD PTR [esp+0x40],eax
  45a618:	mov    DWORD PTR [esp+0x44],edx
  45a61c:	mov    eax,DWORD PTR [esp+0x38]
  45a620:	mov    edx,DWORD PTR [esp+0x3c]
  45a624:	shrd   eax,edx,0x1c
  45a628:	shr    edx,0x1c
  45a62b:	push   edx
  45a62c:	push   eax
  45a62d:	mov    edx,DWORD PTR [esp+0x40]
  45a631:	shl    edx,0x4
  45a634:	xor    eax,eax
  45a636:	or     eax,DWORD PTR [esp]
  45a639:	or     edx,DWORD PTR [esp+0x4]
  45a63d:	add    esp,0x8
  45a640:	push   edx
  45a641:	push   eax
  45a642:	mov    eax,DWORD PTR [esp+0x44]
  45a646:	shr    eax,0x2
  45a649:	xor    edx,edx
  45a64b:	push   edx
  45a64c:	push   eax
  45a64d:	mov    eax,DWORD PTR [esp+0x48]
  45a651:	mov    edx,DWORD PTR [esp+0x4c]
  45a655:	shld   edx,eax,0x1e
  45a659:	shl    eax,0x1e
  45a65c:	or     eax,DWORD PTR [esp]
  45a65f:	or     edx,DWORD PTR [esp+0x4]
  45a663:	add    esp,0x8
  45a666:	xor    eax,DWORD PTR [esp]
  45a669:	xor    edx,DWORD PTR [esp+0x4]
  45a66d:	add    esp,0x8
  45a670:	push   edx
  45a671:	push   eax
  45a672:	mov    eax,DWORD PTR [esp+0x44]
  45a676:	shr    eax,0x7
  45a679:	xor    edx,edx
  45a67b:	push   edx
  45a67c:	push   eax
  45a67d:	mov    eax,DWORD PTR [esp+0x48]
  45a681:	mov    edx,DWORD PTR [esp+0x4c]
  45a685:	shld   edx,eax,0x19
  45a689:	shl    eax,0x19
  45a68c:	or     eax,DWORD PTR [esp]
  45a68f:	or     edx,DWORD PTR [esp+0x4]
  45a693:	add    esp,0x8
  45a696:	xor    eax,DWORD PTR [esp]
  45a699:	xor    edx,DWORD PTR [esp+0x4]
  45a69d:	add    esp,0x8
  45a6a0:	push   edx
  45a6a1:	push   eax
  45a6a2:	mov    eax,DWORD PTR [esp+0x40]
  45a6a6:	mov    edx,DWORD PTR [esp+0x44]
  45a6aa:	and    eax,DWORD PTR [esp+0x8]
  45a6ae:	and    edx,DWORD PTR [esp+0xc]
  45a6b2:	push   edx
  45a6b3:	push   eax
  45a6b4:	mov    eax,DWORD PTR [esp+0x48]
  45a6b8:	mov    edx,DWORD PTR [esp+0x4c]
  45a6bc:	and    eax,DWORD PTR [esp+0x18]
  45a6c0:	and    edx,DWORD PTR [esp+0x1c]
  45a6c4:	xor    eax,DWORD PTR [esp]
  45a6c7:	xor    edx,DWORD PTR [esp+0x4]
  45a6cb:	add    esp,0x8
  45a6ce:	push   edx
  45a6cf:	push   eax
  45a6d0:	mov    eax,DWORD PTR [esp+0x10]
  45a6d4:	mov    edx,DWORD PTR [esp+0x14]
  45a6d8:	and    eax,DWORD PTR [esp+0x18]
  45a6dc:	and    edx,DWORD PTR [esp+0x1c]
  45a6e0:	xor    eax,DWORD PTR [esp]
  45a6e3:	xor    edx,DWORD PTR [esp+0x4]
  45a6e7:	add    esp,0x8
  45a6ea:	add    eax,DWORD PTR [esp]
  45a6ed:	adc    edx,DWORD PTR [esp+0x4]
  45a6f1:	add    esp,0x8
  45a6f4:	mov    DWORD PTR [esp+0x48],eax
  45a6f8:	mov    DWORD PTR [esp+0x4c],edx
  45a6fc:	mov    eax,DWORD PTR [esp+0x10]
  45a700:	mov    edx,DWORD PTR [esp+0x14]
  45a704:	add    eax,DWORD PTR [esp+0x40]
  45a708:	adc    edx,DWORD PTR [esp+0x44]
  45a70c:	mov    DWORD PTR [esp+0x10],eax
  45a710:	mov    DWORD PTR [esp+0x14],edx
  45a714:	mov    eax,DWORD PTR [esp+0x40]
  45a718:	mov    edx,DWORD PTR [esp+0x44]
  45a71c:	add    eax,DWORD PTR [esp+0x48]
  45a720:	adc    edx,DWORD PTR [esp+0x4c]
  45a724:	mov    DWORD PTR [esp+0x30],eax
  45a728:	mov    DWORD PTR [esp+0x34],edx
  45a72c:	mov    eax,DWORD PTR [esp+0x10]
  45a730:	mov    edx,DWORD PTR [esp+0x14]
  45a734:	shrd   eax,edx,0xe
  45a738:	shr    edx,0xe
  45a73b:	push   edx
  45a73c:	push   eax
  45a73d:	mov    edx,DWORD PTR [esp+0x18]
  45a741:	shl    edx,0x12
  45a744:	xor    eax,eax
  45a746:	or     eax,DWORD PTR [esp]
  45a749:	or     edx,DWORD PTR [esp+0x4]
  45a74d:	add    esp,0x8
  45a750:	push   edx
  45a751:	push   eax
  45a752:	mov    eax,DWORD PTR [esp+0x18]
  45a756:	mov    edx,DWORD PTR [esp+0x1c]
  45a75a:	shrd   eax,edx,0x12
  45a75e:	shr    edx,0x12
  45a761:	push   edx
  45a762:	push   eax
  45a763:	mov    edx,DWORD PTR [esp+0x20]
  45a767:	shl    edx,0xe
  45a76a:	xor    eax,eax
  45a76c:	or     eax,DWORD PTR [esp]
  45a76f:	or     edx,DWORD PTR [esp+0x4]
  45a773:	add    esp,0x8
  45a776:	xor    eax,DWORD PTR [esp]
  45a779:	xor    edx,DWORD PTR [esp+0x4]
  45a77d:	add    esp,0x8
  45a780:	push   edx
  45a781:	push   eax
  45a782:	mov    eax,DWORD PTR [esp+0x1c]
  45a786:	shr    eax,0x9
  45a789:	xor    edx,edx
  45a78b:	push   edx
  45a78c:	push   eax
  45a78d:	mov    eax,DWORD PTR [esp+0x20]
  45a791:	mov    edx,DWORD PTR [esp+0x24]
  45a795:	shld   edx,eax,0x17
  45a799:	shl    eax,0x17
  45a79c:	or     eax,DWORD PTR [esp]
  45a79f:	or     edx,DWORD PTR [esp+0x4]
  45a7a3:	add    esp,0x8
  45a7a6:	xor    eax,DWORD PTR [esp]
  45a7a9:	xor    edx,DWORD PTR [esp+0x4]
  45a7ad:	add    esp,0x8
  45a7b0:	add    eax,DWORD PTR [esp+0x28]
  45a7b4:	adc    edx,DWORD PTR [esp+0x2c]
  45a7b8:	push   edx
  45a7b9:	push   eax
  45a7ba:	mov    eax,DWORD PTR [esp+0x18]
  45a7be:	mov    edx,DWORD PTR [esp+0x1c]
  45a7c2:	and    eax,DWORD PTR [esp+0x20]
  45a7c6:	and    edx,DWORD PTR [esp+0x24]
  45a7ca:	push   edx
  45a7cb:	push   eax
  45a7cc:	mov    eax,DWORD PTR [esp+0x20]
  45a7d0:	mov    edx,DWORD PTR [esp+0x24]
  45a7d4:	not    eax
  45a7d6:	not    edx
  45a7d8:	and    eax,DWORD PTR [esp+0x30]
  45a7dc:	and    edx,DWORD PTR [esp+0x34]
  45a7e0:	xor    eax,DWORD PTR [esp]
  45a7e3:	xor    edx,DWORD PTR [esp+0x4]
  45a7e7:	add    esp,0x8
  45a7ea:	add    eax,DWORD PTR [esp]
  45a7ed:	adc    edx,DWORD PTR [esp+0x4]
  45a7f1:	add    esp,0x8
  45a7f4:	add    eax,0xa1f0ab72
  45a7f9:	adc    edx,0x84c87814
  45a7ff:	add    eax,DWORD PTR [esp+0x220]
  45a806:	adc    edx,DWORD PTR [esp+0x224]
  45a80d:	mov    DWORD PTR [esp+0x40],eax
  45a811:	mov    DWORD PTR [esp+0x44],edx
  45a815:	mov    eax,DWORD PTR [esp+0x30]
  45a819:	mov    edx,DWORD PTR [esp+0x34]
  45a81d:	shrd   eax,edx,0x1c
  45a821:	shr    edx,0x1c
  45a824:	push   edx
  45a825:	push   eax
  45a826:	mov    edx,DWORD PTR [esp+0x38]
  45a82a:	shl    edx,0x4
  45a82d:	xor    eax,eax
  45a82f:	or     eax,DWORD PTR [esp]
  45a832:	or     edx,DWORD PTR [esp+0x4]
  45a836:	add    esp,0x8
  45a839:	push   edx
  45a83a:	push   eax
  45a83b:	mov    eax,DWORD PTR [esp+0x3c]
  45a83f:	shr    eax,0x2
  45a842:	xor    edx,edx
  45a844:	push   edx
  45a845:	push   eax
  45a846:	mov    eax,DWORD PTR [esp+0x40]
  45a84a:	mov    edx,DWORD PTR [esp+0x44]
  45a84e:	shld   edx,eax,0x1e
  45a852:	shl    eax,0x1e
  45a855:	or     eax,DWORD PTR [esp]
  45a858:	or     edx,DWORD PTR [esp+0x4]
  45a85c:	add    esp,0x8
  45a85f:	xor    eax,DWORD PTR [esp]
  45a862:	xor    edx,DWORD PTR [esp+0x4]
  45a866:	add    esp,0x8
  45a869:	push   edx
  45a86a:	push   eax
  45a86b:	mov    eax,DWORD PTR [esp+0x3c]
  45a86f:	shr    eax,0x7
  45a872:	xor    edx,edx
  45a874:	push   edx
  45a875:	push   eax
  45a876:	mov    eax,DWORD PTR [esp+0x40]
  45a87a:	mov    edx,DWORD PTR [esp+0x44]
  45a87e:	shld   edx,eax,0x19
  45a882:	shl    eax,0x19
  45a885:	or     eax,DWORD PTR [esp]
  45a888:	or     edx,DWORD PTR [esp+0x4]
  45a88c:	add    esp,0x8
  45a88f:	xor    eax,DWORD PTR [esp]
  45a892:	xor    edx,DWORD PTR [esp+0x4]
  45a896:	add    esp,0x8
  45a899:	push   edx
  45a89a:	push   eax
  45a89b:	mov    eax,DWORD PTR [esp+0x38]
  45a89f:	mov    edx,DWORD PTR [esp+0x3c]
  45a8a3:	and    eax,DWORD PTR [esp+0x40]
  45a8a7:	and    edx,DWORD PTR [esp+0x44]
  45a8ab:	push   edx
  45a8ac:	push   eax
  45a8ad:	mov    eax,DWORD PTR [esp+0x40]
  45a8b1:	mov    edx,DWORD PTR [esp+0x44]
  45a8b5:	and    eax,DWORD PTR [esp+0x10]
  45a8b9:	and    edx,DWORD PTR [esp+0x14]
  45a8bd:	xor    eax,DWORD PTR [esp]
  45a8c0:	xor    edx,DWORD PTR [esp+0x4]
  45a8c4:	add    esp,0x8
  45a8c7:	push   edx
  45a8c8:	push   eax
  45a8c9:	mov    eax,DWORD PTR [esp+0x48]
  45a8cd:	mov    edx,DWORD PTR [esp+0x4c]
  45a8d1:	and    eax,DWORD PTR [esp+0x10]
  45a8d5:	and    edx,DWORD PTR [esp+0x14]
  45a8d9:	xor    eax,DWORD PTR [esp]
  45a8dc:	xor    edx,DWORD PTR [esp+0x4]
  45a8e0:	add    esp,0x8
  45a8e3:	add    eax,DWORD PTR [esp]
  45a8e6:	adc    edx,DWORD PTR [esp+0x4]
  45a8ea:	add    esp,0x8
  45a8ed:	mov    DWORD PTR [esp+0x48],eax
  45a8f1:	mov    DWORD PTR [esp+0x4c],edx
  45a8f5:	mov    eax,DWORD PTR [esp+0x8]
  45a8f9:	mov    edx,DWORD PTR [esp+0xc]
  45a8fd:	add    eax,DWORD PTR [esp+0x40]
  45a901:	adc    edx,DWORD PTR [esp+0x44]
  45a905:	mov    DWORD PTR [esp+0x8],eax
  45a909:	mov    DWORD PTR [esp+0xc],edx
  45a90d:	mov    eax,DWORD PTR [esp+0x40]
  45a911:	mov    edx,DWORD PTR [esp+0x44]
  45a915:	add    eax,DWORD PTR [esp+0x48]
  45a919:	adc    edx,DWORD PTR [esp+0x4c]
  45a91d:	mov    DWORD PTR [esp+0x28],eax
  45a921:	mov    DWORD PTR [esp+0x2c],edx
  45a925:	mov    eax,DWORD PTR [esp+0x8]
  45a929:	mov    edx,DWORD PTR [esp+0xc]
  45a92d:	shrd   eax,edx,0xe
  45a931:	shr    edx,0xe
  45a934:	push   edx
  45a935:	push   eax
  45a936:	mov    edx,DWORD PTR [esp+0x10]
  45a93a:	shl    edx,0x12
  45a93d:	xor    eax,eax
  45a93f:	or     eax,DWORD PTR [esp]
  45a942:	or     edx,DWORD PTR [esp+0x4]
  45a946:	add    esp,0x8
  45a949:	push   edx
  45a94a:	push   eax
  45a94b:	mov    eax,DWORD PTR [esp+0x10]
  45a94f:	mov    edx,DWORD PTR [esp+0x14]
  45a953:	shrd   eax,edx,0x12
  45a957:	shr    edx,0x12
  45a95a:	push   edx
  45a95b:	push   eax
  45a95c:	mov    edx,DWORD PTR [esp+0x18]
  45a960:	shl    edx,0xe
  45a963:	xor    eax,eax
  45a965:	or     eax,DWORD PTR [esp]
  45a968:	or     edx,DWORD PTR [esp+0x4]
  45a96c:	add    esp,0x8
  45a96f:	xor    eax,DWORD PTR [esp]
  45a972:	xor    edx,DWORD PTR [esp+0x4]
  45a976:	add    esp,0x8
  45a979:	push   edx
  45a97a:	push   eax
  45a97b:	mov    eax,DWORD PTR [esp+0x14]
  45a97f:	shr    eax,0x9
  45a982:	xor    edx,edx
  45a984:	push   edx
  45a985:	push   eax
  45a986:	mov    eax,DWORD PTR [esp+0x18]
  45a98a:	mov    edx,DWORD PTR [esp+0x1c]
  45a98e:	shld   edx,eax,0x17
  45a992:	shl    eax,0x17
  45a995:	or     eax,DWORD PTR [esp]
  45a998:	or     edx,DWORD PTR [esp+0x4]
  45a99c:	add    esp,0x8
  45a99f:	xor    eax,DWORD PTR [esp]
  45a9a2:	xor    edx,DWORD PTR [esp+0x4]
  45a9a6:	add    esp,0x8
  45a9a9:	add    eax,DWORD PTR [esp+0x20]
  45a9ad:	adc    edx,DWORD PTR [esp+0x24]
  45a9b1:	push   edx
  45a9b2:	push   eax
  45a9b3:	mov    eax,DWORD PTR [esp+0x10]
  45a9b7:	mov    edx,DWORD PTR [esp+0x14]
  45a9bb:	and    eax,DWORD PTR [esp+0x18]
  45a9bf:	and    edx,DWORD PTR [esp+0x1c]
  45a9c3:	push   edx
  45a9c4:	push   eax
  45a9c5:	mov    eax,DWORD PTR [esp+0x18]
  45a9c9:	mov    edx,DWORD PTR [esp+0x1c]
  45a9cd:	not    eax
  45a9cf:	not    edx
  45a9d1:	and    eax,DWORD PTR [esp+0x28]
  45a9d5:	and    edx,DWORD PTR [esp+0x2c]
  45a9d9:	xor    eax,DWORD PTR [esp]
  45a9dc:	xor    edx,DWORD PTR [esp+0x4]
  45a9e0:	add    esp,0x8
  45a9e3:	add    eax,DWORD PTR [esp]
  45a9e6:	adc    edx,DWORD PTR [esp+0x4]
  45a9ea:	add    esp,0x8
  45a9ed:	add    eax,0x1a6439ec
  45a9f2:	adc    edx,0x8cc70208
  45a9f8:	add    eax,DWORD PTR [esp+0x228]
  45a9ff:	adc    edx,DWORD PTR [esp+0x22c]
  45aa06:	mov    DWORD PTR [esp+0x40],eax
  45aa0a:	mov    DWORD PTR [esp+0x44],edx
  45aa0e:	mov    eax,DWORD PTR [esp+0x28]
  45aa12:	mov    edx,DWORD PTR [esp+0x2c]
  45aa16:	shrd   eax,edx,0x1c
  45aa1a:	shr    edx,0x1c
  45aa1d:	push   edx
  45aa1e:	push   eax
  45aa1f:	mov    edx,DWORD PTR [esp+0x30]
  45aa23:	shl    edx,0x4
  45aa26:	xor    eax,eax
  45aa28:	or     eax,DWORD PTR [esp]
  45aa2b:	or     edx,DWORD PTR [esp+0x4]
  45aa2f:	add    esp,0x8
  45aa32:	push   edx
  45aa33:	push   eax
  45aa34:	mov    eax,DWORD PTR [esp+0x34]
  45aa38:	shr    eax,0x2
  45aa3b:	xor    edx,edx
  45aa3d:	push   edx
  45aa3e:	push   eax
  45aa3f:	mov    eax,DWORD PTR [esp+0x38]
  45aa43:	mov    edx,DWORD PTR [esp+0x3c]
  45aa47:	shld   edx,eax,0x1e
  45aa4b:	shl    eax,0x1e
  45aa4e:	or     eax,DWORD PTR [esp]
  45aa51:	or     edx,DWORD PTR [esp+0x4]
  45aa55:	add    esp,0x8
  45aa58:	xor    eax,DWORD PTR [esp]
  45aa5b:	xor    edx,DWORD PTR [esp+0x4]
  45aa5f:	add    esp,0x8
  45aa62:	push   edx
  45aa63:	push   eax
  45aa64:	mov    eax,DWORD PTR [esp+0x34]
  45aa68:	shr    eax,0x7
  45aa6b:	xor    edx,edx
  45aa6d:	push   edx
  45aa6e:	push   eax
  45aa6f:	mov    eax,DWORD PTR [esp+0x38]
  45aa73:	mov    edx,DWORD PTR [esp+0x3c]
  45aa77:	shld   edx,eax,0x19
  45aa7b:	shl    eax,0x19
  45aa7e:	or     eax,DWORD PTR [esp]
  45aa81:	or     edx,DWORD PTR [esp+0x4]
  45aa85:	add    esp,0x8
  45aa88:	xor    eax,DWORD PTR [esp]
  45aa8b:	xor    edx,DWORD PTR [esp+0x4]
  45aa8f:	add    esp,0x8
  45aa92:	push   edx
  45aa93:	push   eax
  45aa94:	mov    eax,DWORD PTR [esp+0x30]
  45aa98:	mov    edx,DWORD PTR [esp+0x34]
  45aa9c:	and    eax,DWORD PTR [esp+0x38]
  45aaa0:	and    edx,DWORD PTR [esp+0x3c]
  45aaa4:	push   edx
  45aaa5:	push   eax
  45aaa6:	mov    eax,DWORD PTR [esp+0x38]
  45aaaa:	mov    edx,DWORD PTR [esp+0x3c]
  45aaae:	and    eax,DWORD PTR [esp+0x48]
  45aab2:	and    edx,DWORD PTR [esp+0x4c]
  45aab6:	xor    eax,DWORD PTR [esp]
  45aab9:	xor    edx,DWORD PTR [esp+0x4]
  45aabd:	add    esp,0x8
  45aac0:	push   edx
  45aac1:	push   eax
  45aac2:	mov    eax,DWORD PTR [esp+0x40]
  45aac6:	mov    edx,DWORD PTR [esp+0x44]
  45aaca:	and    eax,DWORD PTR [esp+0x48]
  45aace:	and    edx,DWORD PTR [esp+0x4c]
  45aad2:	xor    eax,DWORD PTR [esp]
  45aad5:	xor    edx,DWORD PTR [esp+0x4]
  45aad9:	add    esp,0x8
  45aadc:	add    eax,DWORD PTR [esp]
  45aadf:	adc    edx,DWORD PTR [esp+0x4]
  45aae3:	add    esp,0x8
  45aae6:	mov    DWORD PTR [esp+0x48],eax
  45aaea:	mov    DWORD PTR [esp+0x4c],edx
  45aaee:	mov    eax,DWORD PTR [esp]
  45aaf1:	mov    edx,DWORD PTR [esp+0x4]
  45aaf5:	add    eax,DWORD PTR [esp+0x40]
  45aaf9:	adc    edx,DWORD PTR [esp+0x44]
  45aafd:	mov    DWORD PTR [esp],eax
  45ab00:	mov    DWORD PTR [esp+0x4],edx
  45ab04:	mov    eax,DWORD PTR [esp+0x40]
  45ab08:	mov    edx,DWORD PTR [esp+0x44]
  45ab0c:	add    eax,DWORD PTR [esp+0x48]
  45ab10:	adc    edx,DWORD PTR [esp+0x4c]
  45ab14:	mov    DWORD PTR [esp+0x20],eax
  45ab18:	mov    DWORD PTR [esp+0x24],edx
  45ab1c:	mov    eax,DWORD PTR [esp]
  45ab1f:	mov    edx,DWORD PTR [esp+0x4]
  45ab23:	shrd   eax,edx,0xe
  45ab27:	shr    edx,0xe
  45ab2a:	push   edx
  45ab2b:	push   eax
  45ab2c:	mov    edx,DWORD PTR [esp+0x8]
  45ab30:	shl    edx,0x12
  45ab33:	xor    eax,eax
  45ab35:	or     eax,DWORD PTR [esp]
  45ab38:	or     edx,DWORD PTR [esp+0x4]
  45ab3c:	add    esp,0x8
  45ab3f:	push   edx
  45ab40:	push   eax
  45ab41:	mov    eax,DWORD PTR [esp+0x8]
  45ab45:	mov    edx,DWORD PTR [esp+0xc]
  45ab49:	shrd   eax,edx,0x12
  45ab4d:	shr    edx,0x12
  45ab50:	push   edx
  45ab51:	push   eax
  45ab52:	mov    edx,DWORD PTR [esp+0x10]
  45ab56:	shl    edx,0xe
  45ab59:	xor    eax,eax
  45ab5b:	or     eax,DWORD PTR [esp]
  45ab5e:	or     edx,DWORD PTR [esp+0x4]
  45ab62:	add    esp,0x8
  45ab65:	xor    eax,DWORD PTR [esp]
  45ab68:	xor    edx,DWORD PTR [esp+0x4]
  45ab6c:	add    esp,0x8
  45ab6f:	push   edx
  45ab70:	push   eax
  45ab71:	mov    eax,DWORD PTR [esp+0xc]
  45ab75:	shr    eax,0x9
  45ab78:	xor    edx,edx
  45ab7a:	push   edx
  45ab7b:	push   eax
  45ab7c:	mov    eax,DWORD PTR [esp+0x10]
  45ab80:	mov    edx,DWORD PTR [esp+0x14]
  45ab84:	shld   edx,eax,0x17
  45ab88:	shl    eax,0x17
  45ab8b:	or     eax,DWORD PTR [esp]
  45ab8e:	or     edx,DWORD PTR [esp+0x4]
  45ab92:	add    esp,0x8
  45ab95:	xor    eax,DWORD PTR [esp]
  45ab98:	xor    edx,DWORD PTR [esp+0x4]
  45ab9c:	add    esp,0x8
  45ab9f:	add    eax,DWORD PTR [esp+0x18]
  45aba3:	adc    edx,DWORD PTR [esp+0x1c]
  45aba7:	push   edx
  45aba8:	push   eax
  45aba9:	mov    eax,DWORD PTR [esp+0x8]
  45abad:	mov    edx,DWORD PTR [esp+0xc]
  45abb1:	and    eax,DWORD PTR [esp+0x10]
  45abb5:	and    edx,DWORD PTR [esp+0x14]
  45abb9:	push   edx
  45abba:	push   eax
  45abbb:	mov    eax,DWORD PTR [esp+0x10]
  45abbf:	mov    edx,DWORD PTR [esp+0x14]
  45abc3:	not    eax
  45abc5:	not    edx
  45abc7:	and    eax,DWORD PTR [esp+0x20]
  45abcb:	and    edx,DWORD PTR [esp+0x24]
  45abcf:	xor    eax,DWORD PTR [esp]
  45abd2:	xor    edx,DWORD PTR [esp+0x4]
  45abd6:	add    esp,0x8
  45abd9:	add    eax,DWORD PTR [esp]
  45abdc:	adc    edx,DWORD PTR [esp+0x4]
  45abe0:	add    esp,0x8
  45abe3:	add    eax,0x23631e28
  45abe8:	adc    edx,0x90befffa
  45abee:	add    eax,DWORD PTR [esp+0x230]
  45abf5:	adc    edx,DWORD PTR [esp+0x234]
  45abfc:	mov    DWORD PTR [esp+0x40],eax
  45ac00:	mov    DWORD PTR [esp+0x44],edx
  45ac04:	mov    eax,DWORD PTR [esp+0x20]
  45ac08:	mov    edx,DWORD PTR [esp+0x24]
  45ac0c:	shrd   eax,edx,0x1c
  45ac10:	shr    edx,0x1c
  45ac13:	push   edx
  45ac14:	push   eax
  45ac15:	mov    edx,DWORD PTR [esp+0x28]
  45ac19:	shl    edx,0x4
  45ac1c:	xor    eax,eax
  45ac1e:	or     eax,DWORD PTR [esp]
  45ac21:	or     edx,DWORD PTR [esp+0x4]
  45ac25:	add    esp,0x8
  45ac28:	push   edx
  45ac29:	push   eax
  45ac2a:	mov    eax,DWORD PTR [esp+0x2c]
  45ac2e:	shr    eax,0x2
  45ac31:	xor    edx,edx
  45ac33:	push   edx
  45ac34:	push   eax
  45ac35:	mov    eax,DWORD PTR [esp+0x30]
  45ac39:	mov    edx,DWORD PTR [esp+0x34]
  45ac3d:	shld   edx,eax,0x1e
  45ac41:	shl    eax,0x1e
  45ac44:	or     eax,DWORD PTR [esp]
  45ac47:	or     edx,DWORD PTR [esp+0x4]
  45ac4b:	add    esp,0x8
  45ac4e:	xor    eax,DWORD PTR [esp]
  45ac51:	xor    edx,DWORD PTR [esp+0x4]
  45ac55:	add    esp,0x8
  45ac58:	push   edx
  45ac59:	push   eax
  45ac5a:	mov    eax,DWORD PTR [esp+0x2c]
  45ac5e:	shr    eax,0x7
  45ac61:	xor    edx,edx
  45ac63:	push   edx
  45ac64:	push   eax
  45ac65:	mov    eax,DWORD PTR [esp+0x30]
  45ac69:	mov    edx,DWORD PTR [esp+0x34]
  45ac6d:	shld   edx,eax,0x19
  45ac71:	shl    eax,0x19
  45ac74:	or     eax,DWORD PTR [esp]
  45ac77:	or     edx,DWORD PTR [esp+0x4]
  45ac7b:	add    esp,0x8
  45ac7e:	xor    eax,DWORD PTR [esp]
  45ac81:	xor    edx,DWORD PTR [esp+0x4]
  45ac85:	add    esp,0x8
  45ac88:	push   edx
  45ac89:	push   eax
  45ac8a:	mov    eax,DWORD PTR [esp+0x28]
  45ac8e:	mov    edx,DWORD PTR [esp+0x2c]
  45ac92:	and    eax,DWORD PTR [esp+0x30]
  45ac96:	and    edx,DWORD PTR [esp+0x34]
  45ac9a:	push   edx
  45ac9b:	push   eax
  45ac9c:	mov    eax,DWORD PTR [esp+0x30]
  45aca0:	mov    edx,DWORD PTR [esp+0x34]
  45aca4:	and    eax,DWORD PTR [esp+0x40]
  45aca8:	and    edx,DWORD PTR [esp+0x44]
  45acac:	xor    eax,DWORD PTR [esp]
  45acaf:	xor    edx,DWORD PTR [esp+0x4]
  45acb3:	add    esp,0x8
  45acb6:	push   edx
  45acb7:	push   eax
  45acb8:	mov    eax,DWORD PTR [esp+0x38]
  45acbc:	mov    edx,DWORD PTR [esp+0x3c]
  45acc0:	and    eax,DWORD PTR [esp+0x40]
  45acc4:	and    edx,DWORD PTR [esp+0x44]
  45acc8:	xor    eax,DWORD PTR [esp]
  45accb:	xor    edx,DWORD PTR [esp+0x4]
  45accf:	add    esp,0x8
  45acd2:	add    eax,DWORD PTR [esp]
  45acd5:	adc    edx,DWORD PTR [esp+0x4]
  45acd9:	add    esp,0x8
  45acdc:	mov    DWORD PTR [esp+0x48],eax
  45ace0:	mov    DWORD PTR [esp+0x4c],edx
  45ace4:	mov    eax,DWORD PTR [esp+0x38]
  45ace8:	mov    edx,DWORD PTR [esp+0x3c]
  45acec:	add    eax,DWORD PTR [esp+0x40]
  45acf0:	adc    edx,DWORD PTR [esp+0x44]
  45acf4:	mov    DWORD PTR [esp+0x38],eax
  45acf8:	mov    DWORD PTR [esp+0x3c],edx
  45acfc:	mov    eax,DWORD PTR [esp+0x40]
  45ad00:	mov    edx,DWORD PTR [esp+0x44]
  45ad04:	add    eax,DWORD PTR [esp+0x48]
  45ad08:	adc    edx,DWORD PTR [esp+0x4c]
  45ad0c:	mov    DWORD PTR [esp+0x18],eax
  45ad10:	mov    DWORD PTR [esp+0x1c],edx
  45ad14:	mov    eax,DWORD PTR [esp+0x38]
  45ad18:	mov    edx,DWORD PTR [esp+0x3c]
  45ad1c:	shrd   eax,edx,0xe
  45ad20:	shr    edx,0xe
  45ad23:	push   edx
  45ad24:	push   eax
  45ad25:	mov    edx,DWORD PTR [esp+0x40]
  45ad29:	shl    edx,0x12
  45ad2c:	xor    eax,eax
  45ad2e:	or     eax,DWORD PTR [esp]
  45ad31:	or     edx,DWORD PTR [esp+0x4]
  45ad35:	add    esp,0x8
  45ad38:	push   edx
  45ad39:	push   eax
  45ad3a:	mov    eax,DWORD PTR [esp+0x40]
  45ad3e:	mov    edx,DWORD PTR [esp+0x44]
  45ad42:	shrd   eax,edx,0x12
  45ad46:	shr    edx,0x12
  45ad49:	push   edx
  45ad4a:	push   eax
  45ad4b:	mov    edx,DWORD PTR [esp+0x48]
  45ad4f:	shl    edx,0xe
  45ad52:	xor    eax,eax
  45ad54:	or     eax,DWORD PTR [esp]
  45ad57:	or     edx,DWORD PTR [esp+0x4]
  45ad5b:	add    esp,0x8
  45ad5e:	xor    eax,DWORD PTR [esp]
  45ad61:	xor    edx,DWORD PTR [esp+0x4]
  45ad65:	add    esp,0x8
  45ad68:	push   edx
  45ad69:	push   eax
  45ad6a:	mov    eax,DWORD PTR [esp+0x44]
  45ad6e:	shr    eax,0x9
  45ad71:	xor    edx,edx
  45ad73:	push   edx
  45ad74:	push   eax
  45ad75:	mov    eax,DWORD PTR [esp+0x48]
  45ad79:	mov    edx,DWORD PTR [esp+0x4c]
  45ad7d:	shld   edx,eax,0x17
  45ad81:	shl    eax,0x17
  45ad84:	or     eax,DWORD PTR [esp]
  45ad87:	or     edx,DWORD PTR [esp+0x4]
  45ad8b:	add    esp,0x8
  45ad8e:	xor    eax,DWORD PTR [esp]
  45ad91:	xor    edx,DWORD PTR [esp+0x4]
  45ad95:	add    esp,0x8
  45ad98:	add    eax,DWORD PTR [esp+0x10]
  45ad9c:	adc    edx,DWORD PTR [esp+0x14]
  45ada0:	push   edx
  45ada1:	push   eax
  45ada2:	mov    eax,DWORD PTR [esp+0x40]
  45ada6:	mov    edx,DWORD PTR [esp+0x44]
  45adaa:	and    eax,DWORD PTR [esp+0x8]
  45adae:	and    edx,DWORD PTR [esp+0xc]
  45adb2:	push   edx
  45adb3:	push   eax
  45adb4:	mov    eax,DWORD PTR [esp+0x48]
  45adb8:	mov    edx,DWORD PTR [esp+0x4c]
  45adbc:	not    eax
  45adbe:	not    edx
  45adc0:	and    eax,DWORD PTR [esp+0x18]
  45adc4:	and    edx,DWORD PTR [esp+0x1c]
  45adc8:	xor    eax,DWORD PTR [esp]
  45adcb:	xor    edx,DWORD PTR [esp+0x4]
  45adcf:	add    esp,0x8
  45add2:	add    eax,DWORD PTR [esp]
  45add5:	adc    edx,DWORD PTR [esp+0x4]
  45add9:	add    esp,0x8
  45addc:	add    eax,0xde82bde9
  45ade1:	adc    edx,0xa4506ceb
  45ade7:	add    eax,DWORD PTR [esp+0x238]
  45adee:	adc    edx,DWORD PTR [esp+0x23c]
  45adf5:	mov    DWORD PTR [esp+0x40],eax
  45adf9:	mov    DWORD PTR [esp+0x44],edx
  45adfd:	mov    eax,DWORD PTR [esp+0x18]
  45ae01:	mov    edx,DWORD PTR [esp+0x1c]
  45ae05:	shrd   eax,edx,0x1c
  45ae09:	shr    edx,0x1c
  45ae0c:	push   edx
  45ae0d:	push   eax
  45ae0e:	mov    edx,DWORD PTR [esp+0x20]
  45ae12:	shl    edx,0x4
  45ae15:	xor    eax,eax
  45ae17:	or     eax,DWORD PTR [esp]
  45ae1a:	or     edx,DWORD PTR [esp+0x4]
  45ae1e:	add    esp,0x8
  45ae21:	push   edx
  45ae22:	push   eax
  45ae23:	mov    eax,DWORD PTR [esp+0x24]
  45ae27:	shr    eax,0x2
  45ae2a:	xor    edx,edx
  45ae2c:	push   edx
  45ae2d:	push   eax
  45ae2e:	mov    eax,DWORD PTR [esp+0x28]
  45ae32:	mov    edx,DWORD PTR [esp+0x2c]
  45ae36:	shld   edx,eax,0x1e
  45ae3a:	shl    eax,0x1e
  45ae3d:	or     eax,DWORD PTR [esp]
  45ae40:	or     edx,DWORD PTR [esp+0x4]
  45ae44:	add    esp,0x8
  45ae47:	xor    eax,DWORD PTR [esp]
  45ae4a:	xor    edx,DWORD PTR [esp+0x4]
  45ae4e:	add    esp,0x8
  45ae51:	push   edx
  45ae52:	push   eax
  45ae53:	mov    eax,DWORD PTR [esp+0x24]
  45ae57:	shr    eax,0x7
  45ae5a:	xor    edx,edx
  45ae5c:	push   edx
  45ae5d:	push   eax
  45ae5e:	mov    eax,DWORD PTR [esp+0x28]
  45ae62:	mov    edx,DWORD PTR [esp+0x2c]
  45ae66:	shld   edx,eax,0x19
  45ae6a:	shl    eax,0x19
  45ae6d:	or     eax,DWORD PTR [esp]
  45ae70:	or     edx,DWORD PTR [esp+0x4]
  45ae74:	add    esp,0x8
  45ae77:	xor    eax,DWORD PTR [esp]
  45ae7a:	xor    edx,DWORD PTR [esp+0x4]
  45ae7e:	add    esp,0x8
  45ae81:	push   edx
  45ae82:	push   eax
  45ae83:	mov    eax,DWORD PTR [esp+0x20]
  45ae87:	mov    edx,DWORD PTR [esp+0x24]
  45ae8b:	and    eax,DWORD PTR [esp+0x28]
  45ae8f:	and    edx,DWORD PTR [esp+0x2c]
  45ae93:	push   edx
  45ae94:	push   eax
  45ae95:	mov    eax,DWORD PTR [esp+0x28]
  45ae99:	mov    edx,DWORD PTR [esp+0x2c]
  45ae9d:	and    eax,DWORD PTR [esp+0x38]
  45aea1:	and    edx,DWORD PTR [esp+0x3c]
  45aea5:	xor    eax,DWORD PTR [esp]
  45aea8:	xor    edx,DWORD PTR [esp+0x4]
  45aeac:	add    esp,0x8
  45aeaf:	push   edx
  45aeb0:	push   eax
  45aeb1:	mov    eax,DWORD PTR [esp+0x30]
  45aeb5:	mov    edx,DWORD PTR [esp+0x34]
  45aeb9:	and    eax,DWORD PTR [esp+0x38]
  45aebd:	and    edx,DWORD PTR [esp+0x3c]
  45aec1:	xor    eax,DWORD PTR [esp]
  45aec4:	xor    edx,DWORD PTR [esp+0x4]
  45aec8:	add    esp,0x8
  45aecb:	add    eax,DWORD PTR [esp]
  45aece:	adc    edx,DWORD PTR [esp+0x4]
  45aed2:	add    esp,0x8
  45aed5:	mov    DWORD PTR [esp+0x48],eax
  45aed9:	mov    DWORD PTR [esp+0x4c],edx
  45aedd:	mov    eax,DWORD PTR [esp+0x30]
  45aee1:	mov    edx,DWORD PTR [esp+0x34]
  45aee5:	add    eax,DWORD PTR [esp+0x40]
  45aee9:	adc    edx,DWORD PTR [esp+0x44]
  45aeed:	mov    DWORD PTR [esp+0x30],eax
  45aef1:	mov    DWORD PTR [esp+0x34],edx
  45aef5:	mov    eax,DWORD PTR [esp+0x40]
  45aef9:	mov    edx,DWORD PTR [esp+0x44]
  45aefd:	add    eax,DWORD PTR [esp+0x48]
  45af01:	adc    edx,DWORD PTR [esp+0x4c]
  45af05:	mov    DWORD PTR [esp+0x10],eax
  45af09:	mov    DWORD PTR [esp+0x14],edx
  45af0d:	mov    eax,DWORD PTR [esp+0x30]
  45af11:	mov    edx,DWORD PTR [esp+0x34]
  45af15:	shrd   eax,edx,0xe
  45af19:	shr    edx,0xe
  45af1c:	push   edx
  45af1d:	push   eax
  45af1e:	mov    edx,DWORD PTR [esp+0x38]
  45af22:	shl    edx,0x12
  45af25:	xor    eax,eax
  45af27:	or     eax,DWORD PTR [esp]
  45af2a:	or     edx,DWORD PTR [esp+0x4]
  45af2e:	add    esp,0x8
  45af31:	push   edx
  45af32:	push   eax
  45af33:	mov    eax,DWORD PTR [esp+0x38]
  45af37:	mov    edx,DWORD PTR [esp+0x3c]
  45af3b:	shrd   eax,edx,0x12
  45af3f:	shr    edx,0x12
  45af42:	push   edx
  45af43:	push   eax
  45af44:	mov    edx,DWORD PTR [esp+0x40]
  45af48:	shl    edx,0xe
  45af4b:	xor    eax,eax
  45af4d:	or     eax,DWORD PTR [esp]
  45af50:	or     edx,DWORD PTR [esp+0x4]
  45af54:	add    esp,0x8
  45af57:	xor    eax,DWORD PTR [esp]
  45af5a:	xor    edx,DWORD PTR [esp+0x4]
  45af5e:	add    esp,0x8
  45af61:	push   edx
  45af62:	push   eax
  45af63:	mov    eax,DWORD PTR [esp+0x3c]
  45af67:	shr    eax,0x9
  45af6a:	xor    edx,edx
  45af6c:	push   edx
  45af6d:	push   eax
  45af6e:	mov    eax,DWORD PTR [esp+0x40]
  45af72:	mov    edx,DWORD PTR [esp+0x44]
  45af76:	shld   edx,eax,0x17
  45af7a:	shl    eax,0x17
  45af7d:	or     eax,DWORD PTR [esp]
  45af80:	or     edx,DWORD PTR [esp+0x4]
  45af84:	add    esp,0x8
  45af87:	xor    eax,DWORD PTR [esp]
  45af8a:	xor    edx,DWORD PTR [esp+0x4]
  45af8e:	add    esp,0x8
  45af91:	add    eax,DWORD PTR [esp+0x8]
  45af95:	adc    edx,DWORD PTR [esp+0xc]
  45af99:	push   edx
  45af9a:	push   eax
  45af9b:	mov    eax,DWORD PTR [esp+0x38]
  45af9f:	mov    edx,DWORD PTR [esp+0x3c]
  45afa3:	and    eax,DWORD PTR [esp+0x40]
  45afa7:	and    edx,DWORD PTR [esp+0x44]
  45afab:	push   edx
  45afac:	push   eax
  45afad:	mov    eax,DWORD PTR [esp+0x40]
  45afb1:	mov    edx,DWORD PTR [esp+0x44]
  45afb5:	not    eax
  45afb7:	not    edx
  45afb9:	and    eax,DWORD PTR [esp+0x10]
  45afbd:	and    edx,DWORD PTR [esp+0x14]
  45afc1:	xor    eax,DWORD PTR [esp]
  45afc4:	xor    edx,DWORD PTR [esp+0x4]
  45afc8:	add    esp,0x8
  45afcb:	add    eax,DWORD PTR [esp]
  45afce:	adc    edx,DWORD PTR [esp+0x4]
  45afd2:	add    esp,0x8
  45afd5:	add    eax,0xb2c67915
  45afda:	adc    edx,0xbef9a3f7
  45afe0:	add    eax,DWORD PTR [esp+0x240]
  45afe7:	adc    edx,DWORD PTR [esp+0x244]
  45afee:	mov    DWORD PTR [esp+0x40],eax
  45aff2:	mov    DWORD PTR [esp+0x44],edx
  45aff6:	mov    eax,DWORD PTR [esp+0x10]
  45affa:	mov    edx,DWORD PTR [esp+0x14]
  45affe:	shrd   eax,edx,0x1c
  45b002:	shr    edx,0x1c
  45b005:	push   edx
  45b006:	push   eax
  45b007:	mov    edx,DWORD PTR [esp+0x18]
  45b00b:	shl    edx,0x4
  45b00e:	xor    eax,eax
  45b010:	or     eax,DWORD PTR [esp]
  45b013:	or     edx,DWORD PTR [esp+0x4]
  45b017:	add    esp,0x8
  45b01a:	push   edx
  45b01b:	push   eax
  45b01c:	mov    eax,DWORD PTR [esp+0x1c]
  45b020:	shr    eax,0x2
  45b023:	xor    edx,edx
  45b025:	push   edx
  45b026:	push   eax
  45b027:	mov    eax,DWORD PTR [esp+0x20]
  45b02b:	mov    edx,DWORD PTR [esp+0x24]
  45b02f:	shld   edx,eax,0x1e
  45b033:	shl    eax,0x1e
  45b036:	or     eax,DWORD PTR [esp]
  45b039:	or     edx,DWORD PTR [esp+0x4]
  45b03d:	add    esp,0x8
  45b040:	xor    eax,DWORD PTR [esp]
  45b043:	xor    edx,DWORD PTR [esp+0x4]
  45b047:	add    esp,0x8
  45b04a:	push   edx
  45b04b:	push   eax
  45b04c:	mov    eax,DWORD PTR [esp+0x1c]
  45b050:	shr    eax,0x7
  45b053:	xor    edx,edx
  45b055:	push   edx
  45b056:	push   eax
  45b057:	mov    eax,DWORD PTR [esp+0x20]
  45b05b:	mov    edx,DWORD PTR [esp+0x24]
  45b05f:	shld   edx,eax,0x19
  45b063:	shl    eax,0x19
  45b066:	or     eax,DWORD PTR [esp]
  45b069:	or     edx,DWORD PTR [esp+0x4]
  45b06d:	add    esp,0x8
  45b070:	xor    eax,DWORD PTR [esp]
  45b073:	xor    edx,DWORD PTR [esp+0x4]
  45b077:	add    esp,0x8
  45b07a:	push   edx
  45b07b:	push   eax
  45b07c:	mov    eax,DWORD PTR [esp+0x18]
  45b080:	mov    edx,DWORD PTR [esp+0x1c]
  45b084:	and    eax,DWORD PTR [esp+0x20]
  45b088:	and    edx,DWORD PTR [esp+0x24]
  45b08c:	push   edx
  45b08d:	push   eax
  45b08e:	mov    eax,DWORD PTR [esp+0x20]
  45b092:	mov    edx,DWORD PTR [esp+0x24]
  45b096:	and    eax,DWORD PTR [esp+0x30]
  45b09a:	and    edx,DWORD PTR [esp+0x34]
  45b09e:	xor    eax,DWORD PTR [esp]
  45b0a1:	xor    edx,DWORD PTR [esp+0x4]
  45b0a5:	add    esp,0x8
  45b0a8:	push   edx
  45b0a9:	push   eax
  45b0aa:	mov    eax,DWORD PTR [esp+0x28]
  45b0ae:	mov    edx,DWORD PTR [esp+0x2c]
  45b0b2:	and    eax,DWORD PTR [esp+0x30]
  45b0b6:	and    edx,DWORD PTR [esp+0x34]
  45b0ba:	xor    eax,DWORD PTR [esp]
  45b0bd:	xor    edx,DWORD PTR [esp+0x4]
  45b0c1:	add    esp,0x8
  45b0c4:	add    eax,DWORD PTR [esp]
  45b0c7:	adc    edx,DWORD PTR [esp+0x4]
  45b0cb:	add    esp,0x8
  45b0ce:	mov    DWORD PTR [esp+0x48],eax
  45b0d2:	mov    DWORD PTR [esp+0x4c],edx
  45b0d6:	mov    eax,DWORD PTR [esp+0x28]
  45b0da:	mov    edx,DWORD PTR [esp+0x2c]
  45b0de:	add    eax,DWORD PTR [esp+0x40]
  45b0e2:	adc    edx,DWORD PTR [esp+0x44]
  45b0e6:	mov    DWORD PTR [esp+0x28],eax
  45b0ea:	mov    DWORD PTR [esp+0x2c],edx
  45b0ee:	mov    eax,DWORD PTR [esp+0x40]
  45b0f2:	mov    edx,DWORD PTR [esp+0x44]
  45b0f6:	add    eax,DWORD PTR [esp+0x48]
  45b0fa:	adc    edx,DWORD PTR [esp+0x4c]
  45b0fe:	mov    DWORD PTR [esp+0x8],eax
  45b102:	mov    DWORD PTR [esp+0xc],edx
  45b106:	mov    eax,DWORD PTR [esp+0x28]
  45b10a:	mov    edx,DWORD PTR [esp+0x2c]
  45b10e:	shrd   eax,edx,0xe
  45b112:	shr    edx,0xe
  45b115:	push   edx
  45b116:	push   eax
  45b117:	mov    edx,DWORD PTR [esp+0x30]
  45b11b:	shl    edx,0x12
  45b11e:	xor    eax,eax
  45b120:	or     eax,DWORD PTR [esp]
  45b123:	or     edx,DWORD PTR [esp+0x4]
  45b127:	add    esp,0x8
  45b12a:	push   edx
  45b12b:	push   eax
  45b12c:	mov    eax,DWORD PTR [esp+0x30]
  45b130:	mov    edx,DWORD PTR [esp+0x34]
  45b134:	shrd   eax,edx,0x12
  45b138:	shr    edx,0x12
  45b13b:	push   edx
  45b13c:	push   eax
  45b13d:	mov    edx,DWORD PTR [esp+0x38]
  45b141:	shl    edx,0xe
  45b144:	xor    eax,eax
  45b146:	or     eax,DWORD PTR [esp]
  45b149:	or     edx,DWORD PTR [esp+0x4]
  45b14d:	add    esp,0x8
  45b150:	xor    eax,DWORD PTR [esp]
  45b153:	xor    edx,DWORD PTR [esp+0x4]
  45b157:	add    esp,0x8
  45b15a:	push   edx
  45b15b:	push   eax
  45b15c:	mov    eax,DWORD PTR [esp+0x34]
  45b160:	shr    eax,0x9
  45b163:	xor    edx,edx
  45b165:	push   edx
  45b166:	push   eax
  45b167:	mov    eax,DWORD PTR [esp+0x38]
  45b16b:	mov    edx,DWORD PTR [esp+0x3c]
  45b16f:	shld   edx,eax,0x17
  45b173:	shl    eax,0x17
  45b176:	or     eax,DWORD PTR [esp]
  45b179:	or     edx,DWORD PTR [esp+0x4]
  45b17d:	add    esp,0x8
  45b180:	xor    eax,DWORD PTR [esp]
  45b183:	xor    edx,DWORD PTR [esp+0x4]
  45b187:	add    esp,0x8
  45b18a:	add    eax,DWORD PTR [esp]
  45b18d:	adc    edx,DWORD PTR [esp+0x4]
  45b191:	push   edx
  45b192:	push   eax
  45b193:	mov    eax,DWORD PTR [esp+0x30]
  45b197:	mov    edx,DWORD PTR [esp+0x34]
  45b19b:	and    eax,DWORD PTR [esp+0x38]
  45b19f:	and    edx,DWORD PTR [esp+0x3c]
  45b1a3:	push   edx
  45b1a4:	push   eax
  45b1a5:	mov    eax,DWORD PTR [esp+0x38]
  45b1a9:	mov    edx,DWORD PTR [esp+0x3c]
  45b1ad:	not    eax
  45b1af:	not    edx
  45b1b1:	and    eax,DWORD PTR [esp+0x48]
  45b1b5:	and    edx,DWORD PTR [esp+0x4c]
  45b1b9:	xor    eax,DWORD PTR [esp]
  45b1bc:	xor    edx,DWORD PTR [esp+0x4]
  45b1c0:	add    esp,0x8
  45b1c3:	add    eax,DWORD PTR [esp]
  45b1c6:	adc    edx,DWORD PTR [esp+0x4]
  45b1ca:	add    esp,0x8
  45b1cd:	add    eax,0xe372532b
  45b1d2:	adc    edx,0xc67178f2
  45b1d8:	add    eax,DWORD PTR [esp+0x248]
  45b1df:	adc    edx,DWORD PTR [esp+0x24c]
  45b1e6:	mov    DWORD PTR [esp+0x40],eax
  45b1ea:	mov    DWORD PTR [esp+0x44],edx
  45b1ee:	mov    eax,DWORD PTR [esp+0x8]
  45b1f2:	mov    edx,DWORD PTR [esp+0xc]
  45b1f6:	shrd   eax,edx,0x1c
  45b1fa:	shr    edx,0x1c
  45b1fd:	push   edx
  45b1fe:	push   eax
  45b1ff:	mov    edx,DWORD PTR [esp+0x10]
  45b203:	shl    edx,0x4
  45b206:	xor    eax,eax
  45b208:	or     eax,DWORD PTR [esp]
  45b20b:	or     edx,DWORD PTR [esp+0x4]
  45b20f:	add    esp,0x8
  45b212:	push   edx
  45b213:	push   eax
  45b214:	mov    eax,DWORD PTR [esp+0x14]
  45b218:	shr    eax,0x2
  45b21b:	xor    edx,edx
  45b21d:	push   edx
  45b21e:	push   eax
  45b21f:	mov    eax,DWORD PTR [esp+0x18]
  45b223:	mov    edx,DWORD PTR [esp+0x1c]
  45b227:	shld   edx,eax,0x1e
  45b22b:	shl    eax,0x1e
  45b22e:	or     eax,DWORD PTR [esp]
  45b231:	or     edx,DWORD PTR [esp+0x4]
  45b235:	add    esp,0x8
  45b238:	xor    eax,DWORD PTR [esp]
  45b23b:	xor    edx,DWORD PTR [esp+0x4]
  45b23f:	add    esp,0x8
  45b242:	push   edx
  45b243:	push   eax
  45b244:	mov    eax,DWORD PTR [esp+0x14]
  45b248:	shr    eax,0x7
  45b24b:	xor    edx,edx
  45b24d:	push   edx
  45b24e:	push   eax
  45b24f:	mov    eax,DWORD PTR [esp+0x18]
  45b253:	mov    edx,DWORD PTR [esp+0x1c]
  45b257:	shld   edx,eax,0x19
  45b25b:	shl    eax,0x19
  45b25e:	or     eax,DWORD PTR [esp]
  45b261:	or     edx,DWORD PTR [esp+0x4]
  45b265:	add    esp,0x8
  45b268:	xor    eax,DWORD PTR [esp]
  45b26b:	xor    edx,DWORD PTR [esp+0x4]
  45b26f:	add    esp,0x8
  45b272:	push   edx
  45b273:	push   eax
  45b274:	mov    eax,DWORD PTR [esp+0x10]
  45b278:	mov    edx,DWORD PTR [esp+0x14]
  45b27c:	and    eax,DWORD PTR [esp+0x18]
  45b280:	and    edx,DWORD PTR [esp+0x1c]
  45b284:	push   edx
  45b285:	push   eax
  45b286:	mov    eax,DWORD PTR [esp+0x18]
  45b28a:	mov    edx,DWORD PTR [esp+0x1c]
  45b28e:	and    eax,DWORD PTR [esp+0x28]
  45b292:	and    edx,DWORD PTR [esp+0x2c]
  45b296:	xor    eax,DWORD PTR [esp]
  45b299:	xor    edx,DWORD PTR [esp+0x4]
  45b29d:	add    esp,0x8
  45b2a0:	push   edx
  45b2a1:	push   eax
  45b2a2:	mov    eax,DWORD PTR [esp+0x20]
  45b2a6:	mov    edx,DWORD PTR [esp+0x24]
  45b2aa:	and    eax,DWORD PTR [esp+0x28]
  45b2ae:	and    edx,DWORD PTR [esp+0x2c]
  45b2b2:	xor    eax,DWORD PTR [esp]
  45b2b5:	xor    edx,DWORD PTR [esp+0x4]
  45b2b9:	add    esp,0x8
  45b2bc:	add    eax,DWORD PTR [esp]
  45b2bf:	adc    edx,DWORD PTR [esp+0x4]
  45b2c3:	add    esp,0x8
  45b2c6:	mov    DWORD PTR [esp+0x48],eax
  45b2ca:	mov    DWORD PTR [esp+0x4c],edx
  45b2ce:	mov    eax,DWORD PTR [esp+0x20]
  45b2d2:	mov    edx,DWORD PTR [esp+0x24]
  45b2d6:	add    eax,DWORD PTR [esp+0x40]
  45b2da:	adc    edx,DWORD PTR [esp+0x44]
  45b2de:	mov    DWORD PTR [esp+0x20],eax
  45b2e2:	mov    DWORD PTR [esp+0x24],edx
  45b2e6:	mov    eax,DWORD PTR [esp+0x40]
  45b2ea:	mov    edx,DWORD PTR [esp+0x44]
  45b2ee:	add    eax,DWORD PTR [esp+0x48]
  45b2f2:	adc    edx,DWORD PTR [esp+0x4c]
  45b2f6:	mov    DWORD PTR [esp],eax
  45b2f9:	mov    DWORD PTR [esp+0x4],edx
  45b2fd:	mov    eax,DWORD PTR [esp+0x20]
  45b301:	mov    edx,DWORD PTR [esp+0x24]
  45b305:	shrd   eax,edx,0xe
  45b309:	shr    edx,0xe
  45b30c:	push   edx
  45b30d:	push   eax
  45b30e:	mov    edx,DWORD PTR [esp+0x28]
  45b312:	shl    edx,0x12
  45b315:	xor    eax,eax
  45b317:	or     eax,DWORD PTR [esp]
  45b31a:	or     edx,DWORD PTR [esp+0x4]
  45b31e:	add    esp,0x8
  45b321:	push   edx
  45b322:	push   eax
  45b323:	mov    eax,DWORD PTR [esp+0x28]
  45b327:	mov    edx,DWORD PTR [esp+0x2c]
  45b32b:	shrd   eax,edx,0x12
  45b32f:	shr    edx,0x12
  45b332:	push   edx
  45b333:	push   eax
  45b334:	mov    edx,DWORD PTR [esp+0x30]
  45b338:	shl    edx,0xe
  45b33b:	xor    eax,eax
  45b33d:	or     eax,DWORD PTR [esp]
  45b340:	or     edx,DWORD PTR [esp+0x4]
  45b344:	add    esp,0x8
  45b347:	xor    eax,DWORD PTR [esp]
  45b34a:	xor    edx,DWORD PTR [esp+0x4]
  45b34e:	add    esp,0x8
  45b351:	push   edx
  45b352:	push   eax
  45b353:	mov    eax,DWORD PTR [esp+0x2c]
  45b357:	shr    eax,0x9
  45b35a:	xor    edx,edx
  45b35c:	push   edx
  45b35d:	push   eax
  45b35e:	mov    eax,DWORD PTR [esp+0x30]
  45b362:	mov    edx,DWORD PTR [esp+0x34]
  45b366:	shld   edx,eax,0x17
  45b36a:	shl    eax,0x17
  45b36d:	or     eax,DWORD PTR [esp]
  45b370:	or     edx,DWORD PTR [esp+0x4]
  45b374:	add    esp,0x8
  45b377:	xor    eax,DWORD PTR [esp]
  45b37a:	xor    edx,DWORD PTR [esp+0x4]
  45b37e:	add    esp,0x8
  45b381:	add    eax,DWORD PTR [esp+0x38]
  45b385:	adc    edx,DWORD PTR [esp+0x3c]
  45b389:	push   edx
  45b38a:	push   eax
  45b38b:	mov    eax,DWORD PTR [esp+0x28]
  45b38f:	mov    edx,DWORD PTR [esp+0x2c]
  45b393:	and    eax,DWORD PTR [esp+0x30]
  45b397:	and    edx,DWORD PTR [esp+0x34]
  45b39b:	push   edx
  45b39c:	push   eax
  45b39d:	mov    eax,DWORD PTR [esp+0x30]
  45b3a1:	mov    edx,DWORD PTR [esp+0x34]
  45b3a5:	not    eax
  45b3a7:	not    edx
  45b3a9:	and    eax,DWORD PTR [esp+0x40]
  45b3ad:	and    edx,DWORD PTR [esp+0x44]
  45b3b1:	xor    eax,DWORD PTR [esp]
  45b3b4:	xor    edx,DWORD PTR [esp+0x4]
  45b3b8:	add    esp,0x8
  45b3bb:	add    eax,DWORD PTR [esp]
  45b3be:	adc    edx,DWORD PTR [esp+0x4]
  45b3c2:	add    esp,0x8
  45b3c5:	add    eax,0xea26619c
  45b3ca:	adc    edx,0xca273ece
  45b3d0:	add    eax,DWORD PTR [esp+0x250]
  45b3d7:	adc    edx,DWORD PTR [esp+0x254]
  45b3de:	mov    DWORD PTR [esp+0x40],eax
  45b3e2:	mov    DWORD PTR [esp+0x44],edx
  45b3e6:	mov    eax,DWORD PTR [esp]
  45b3e9:	mov    edx,DWORD PTR [esp+0x4]
  45b3ed:	shrd   eax,edx,0x1c
  45b3f1:	shr    edx,0x1c
  45b3f4:	push   edx
  45b3f5:	push   eax
  45b3f6:	mov    edx,DWORD PTR [esp+0x8]
  45b3fa:	shl    edx,0x4
  45b3fd:	xor    eax,eax
  45b3ff:	or     eax,DWORD PTR [esp]
  45b402:	or     edx,DWORD PTR [esp+0x4]
  45b406:	add    esp,0x8
  45b409:	push   edx
  45b40a:	push   eax
  45b40b:	mov    eax,DWORD PTR [esp+0xc]
  45b40f:	shr    eax,0x2
  45b412:	xor    edx,edx
  45b414:	push   edx
  45b415:	push   eax
  45b416:	mov    eax,DWORD PTR [esp+0x10]
  45b41a:	mov    edx,DWORD PTR [esp+0x14]
  45b41e:	shld   edx,eax,0x1e
  45b422:	shl    eax,0x1e
  45b425:	or     eax,DWORD PTR [esp]
  45b428:	or     edx,DWORD PTR [esp+0x4]
  45b42c:	add    esp,0x8
  45b42f:	xor    eax,DWORD PTR [esp]
  45b432:	xor    edx,DWORD PTR [esp+0x4]
  45b436:	add    esp,0x8
  45b439:	push   edx
  45b43a:	push   eax
  45b43b:	mov    eax,DWORD PTR [esp+0xc]
  45b43f:	shr    eax,0x7
  45b442:	xor    edx,edx
  45b444:	push   edx
  45b445:	push   eax
  45b446:	mov    eax,DWORD PTR [esp+0x10]
  45b44a:	mov    edx,DWORD PTR [esp+0x14]
  45b44e:	shld   edx,eax,0x19
  45b452:	shl    eax,0x19
  45b455:	or     eax,DWORD PTR [esp]
  45b458:	or     edx,DWORD PTR [esp+0x4]
  45b45c:	add    esp,0x8
  45b45f:	xor    eax,DWORD PTR [esp]
  45b462:	xor    edx,DWORD PTR [esp+0x4]
  45b466:	add    esp,0x8
  45b469:	push   edx
  45b46a:	push   eax
  45b46b:	mov    eax,DWORD PTR [esp+0x8]
  45b46f:	mov    edx,DWORD PTR [esp+0xc]
  45b473:	and    eax,DWORD PTR [esp+0x10]
  45b477:	and    edx,DWORD PTR [esp+0x14]
  45b47b:	push   edx
  45b47c:	push   eax
  45b47d:	mov    eax,DWORD PTR [esp+0x10]
  45b481:	mov    edx,DWORD PTR [esp+0x14]
  45b485:	and    eax,DWORD PTR [esp+0x20]
  45b489:	and    edx,DWORD PTR [esp+0x24]
  45b48d:	xor    eax,DWORD PTR [esp]
  45b490:	xor    edx,DWORD PTR [esp+0x4]
  45b494:	add    esp,0x8
  45b497:	push   edx
  45b498:	push   eax
  45b499:	mov    eax,DWORD PTR [esp+0x18]
  45b49d:	mov    edx,DWORD PTR [esp+0x1c]
  45b4a1:	and    eax,DWORD PTR [esp+0x20]
  45b4a5:	and    edx,DWORD PTR [esp+0x24]
  45b4a9:	xor    eax,DWORD PTR [esp]
  45b4ac:	xor    edx,DWORD PTR [esp+0x4]
  45b4b0:	add    esp,0x8
  45b4b3:	add    eax,DWORD PTR [esp]
  45b4b6:	adc    edx,DWORD PTR [esp+0x4]
  45b4ba:	add    esp,0x8
  45b4bd:	mov    DWORD PTR [esp+0x48],eax
  45b4c1:	mov    DWORD PTR [esp+0x4c],edx
  45b4c5:	mov    eax,DWORD PTR [esp+0x18]
  45b4c9:	mov    edx,DWORD PTR [esp+0x1c]
  45b4cd:	add    eax,DWORD PTR [esp+0x40]
  45b4d1:	adc    edx,DWORD PTR [esp+0x44]
  45b4d5:	mov    DWORD PTR [esp+0x18],eax
  45b4d9:	mov    DWORD PTR [esp+0x1c],edx
  45b4dd:	mov    eax,DWORD PTR [esp+0x40]
  45b4e1:	mov    edx,DWORD PTR [esp+0x44]
  45b4e5:	add    eax,DWORD PTR [esp+0x48]
  45b4e9:	adc    edx,DWORD PTR [esp+0x4c]
  45b4ed:	mov    DWORD PTR [esp+0x38],eax
  45b4f1:	mov    DWORD PTR [esp+0x3c],edx
  45b4f5:	mov    eax,DWORD PTR [esp+0x18]
  45b4f9:	mov    edx,DWORD PTR [esp+0x1c]
  45b4fd:	shrd   eax,edx,0xe
  45b501:	shr    edx,0xe
  45b504:	push   edx
  45b505:	push   eax
  45b506:	mov    edx,DWORD PTR [esp+0x20]
  45b50a:	shl    edx,0x12
  45b50d:	xor    eax,eax
  45b50f:	or     eax,DWORD PTR [esp]
  45b512:	or     edx,DWORD PTR [esp+0x4]
  45b516:	add    esp,0x8
  45b519:	push   edx
  45b51a:	push   eax
  45b51b:	mov    eax,DWORD PTR [esp+0x20]
  45b51f:	mov    edx,DWORD PTR [esp+0x24]
  45b523:	shrd   eax,edx,0x12
  45b527:	shr    edx,0x12
  45b52a:	push   edx
  45b52b:	push   eax
  45b52c:	mov    edx,DWORD PTR [esp+0x28]
  45b530:	shl    edx,0xe
  45b533:	xor    eax,eax
  45b535:	or     eax,DWORD PTR [esp]
  45b538:	or     edx,DWORD PTR [esp+0x4]
  45b53c:	add    esp,0x8
  45b53f:	xor    eax,DWORD PTR [esp]
  45b542:	xor    edx,DWORD PTR [esp+0x4]
  45b546:	add    esp,0x8
  45b549:	push   edx
  45b54a:	push   eax
  45b54b:	mov    eax,DWORD PTR [esp+0x24]
  45b54f:	shr    eax,0x9
  45b552:	xor    edx,edx
  45b554:	push   edx
  45b555:	push   eax
  45b556:	mov    eax,DWORD PTR [esp+0x28]
  45b55a:	mov    edx,DWORD PTR [esp+0x2c]
  45b55e:	shld   edx,eax,0x17
  45b562:	shl    eax,0x17
  45b565:	or     eax,DWORD PTR [esp]
  45b568:	or     edx,DWORD PTR [esp+0x4]
  45b56c:	add    esp,0x8
  45b56f:	xor    eax,DWORD PTR [esp]
  45b572:	xor    edx,DWORD PTR [esp+0x4]
  45b576:	add    esp,0x8
  45b579:	add    eax,DWORD PTR [esp+0x30]
  45b57d:	adc    edx,DWORD PTR [esp+0x34]
  45b581:	push   edx
  45b582:	push   eax
  45b583:	mov    eax,DWORD PTR [esp+0x20]
  45b587:	mov    edx,DWORD PTR [esp+0x24]
  45b58b:	and    eax,DWORD PTR [esp+0x28]
  45b58f:	and    edx,DWORD PTR [esp+0x2c]
  45b593:	push   edx
  45b594:	push   eax
  45b595:	mov    eax,DWORD PTR [esp+0x28]
  45b599:	mov    edx,DWORD PTR [esp+0x2c]
  45b59d:	not    eax
  45b59f:	not    edx
  45b5a1:	and    eax,DWORD PTR [esp+0x38]
  45b5a5:	and    edx,DWORD PTR [esp+0x3c]
  45b5a9:	xor    eax,DWORD PTR [esp]
  45b5ac:	xor    edx,DWORD PTR [esp+0x4]
  45b5b0:	add    esp,0x8
  45b5b3:	add    eax,DWORD PTR [esp]
  45b5b6:	adc    edx,DWORD PTR [esp+0x4]
  45b5ba:	add    esp,0x8
  45b5bd:	add    eax,0x21c0c207
  45b5c2:	adc    edx,0xd186b8c7
  45b5c8:	add    eax,DWORD PTR [esp+0x258]
  45b5cf:	adc    edx,DWORD PTR [esp+0x25c]
  45b5d6:	mov    DWORD PTR [esp+0x40],eax
  45b5da:	mov    DWORD PTR [esp+0x44],edx
  45b5de:	mov    eax,DWORD PTR [esp+0x38]
  45b5e2:	mov    edx,DWORD PTR [esp+0x3c]
  45b5e6:	shrd   eax,edx,0x1c
  45b5ea:	shr    edx,0x1c
  45b5ed:	push   edx
  45b5ee:	push   eax
  45b5ef:	mov    edx,DWORD PTR [esp+0x40]
  45b5f3:	shl    edx,0x4
  45b5f6:	xor    eax,eax
  45b5f8:	or     eax,DWORD PTR [esp]
  45b5fb:	or     edx,DWORD PTR [esp+0x4]
  45b5ff:	add    esp,0x8
  45b602:	push   edx
  45b603:	push   eax
  45b604:	mov    eax,DWORD PTR [esp+0x44]
  45b608:	shr    eax,0x2
  45b60b:	xor    edx,edx
  45b60d:	push   edx
  45b60e:	push   eax
  45b60f:	mov    eax,DWORD PTR [esp+0x48]
  45b613:	mov    edx,DWORD PTR [esp+0x4c]
  45b617:	shld   edx,eax,0x1e
  45b61b:	shl    eax,0x1e
  45b61e:	or     eax,DWORD PTR [esp]
  45b621:	or     edx,DWORD PTR [esp+0x4]
  45b625:	add    esp,0x8
  45b628:	xor    eax,DWORD PTR [esp]
  45b62b:	xor    edx,DWORD PTR [esp+0x4]
  45b62f:	add    esp,0x8
  45b632:	push   edx
  45b633:	push   eax
  45b634:	mov    eax,DWORD PTR [esp+0x44]
  45b638:	shr    eax,0x7
  45b63b:	xor    edx,edx
  45b63d:	push   edx
  45b63e:	push   eax
  45b63f:	mov    eax,DWORD PTR [esp+0x48]
  45b643:	mov    edx,DWORD PTR [esp+0x4c]
  45b647:	shld   edx,eax,0x19
  45b64b:	shl    eax,0x19
  45b64e:	or     eax,DWORD PTR [esp]
  45b651:	or     edx,DWORD PTR [esp+0x4]
  45b655:	add    esp,0x8
  45b658:	xor    eax,DWORD PTR [esp]
  45b65b:	xor    edx,DWORD PTR [esp+0x4]
  45b65f:	add    esp,0x8
  45b662:	push   edx
  45b663:	push   eax
  45b664:	mov    eax,DWORD PTR [esp+0x40]
  45b668:	mov    edx,DWORD PTR [esp+0x44]
  45b66c:	and    eax,DWORD PTR [esp+0x8]
  45b670:	and    edx,DWORD PTR [esp+0xc]
  45b674:	push   edx
  45b675:	push   eax
  45b676:	mov    eax,DWORD PTR [esp+0x48]
  45b67a:	mov    edx,DWORD PTR [esp+0x4c]
  45b67e:	and    eax,DWORD PTR [esp+0x18]
  45b682:	and    edx,DWORD PTR [esp+0x1c]
  45b686:	xor    eax,DWORD PTR [esp]
  45b689:	xor    edx,DWORD PTR [esp+0x4]
  45b68d:	add    esp,0x8
  45b690:	push   edx
  45b691:	push   eax
  45b692:	mov    eax,DWORD PTR [esp+0x10]
  45b696:	mov    edx,DWORD PTR [esp+0x14]
  45b69a:	and    eax,DWORD PTR [esp+0x18]
  45b69e:	and    edx,DWORD PTR [esp+0x1c]
  45b6a2:	xor    eax,DWORD PTR [esp]
  45b6a5:	xor    edx,DWORD PTR [esp+0x4]
  45b6a9:	add    esp,0x8
  45b6ac:	add    eax,DWORD PTR [esp]
  45b6af:	adc    edx,DWORD PTR [esp+0x4]
  45b6b3:	add    esp,0x8
  45b6b6:	mov    DWORD PTR [esp+0x48],eax
  45b6ba:	mov    DWORD PTR [esp+0x4c],edx
  45b6be:	mov    eax,DWORD PTR [esp+0x10]
  45b6c2:	mov    edx,DWORD PTR [esp+0x14]
  45b6c6:	add    eax,DWORD PTR [esp+0x40]
  45b6ca:	adc    edx,DWORD PTR [esp+0x44]
  45b6ce:	mov    DWORD PTR [esp+0x10],eax
  45b6d2:	mov    DWORD PTR [esp+0x14],edx
  45b6d6:	mov    eax,DWORD PTR [esp+0x40]
  45b6da:	mov    edx,DWORD PTR [esp+0x44]
  45b6de:	add    eax,DWORD PTR [esp+0x48]
  45b6e2:	adc    edx,DWORD PTR [esp+0x4c]
  45b6e6:	mov    DWORD PTR [esp+0x30],eax
  45b6ea:	mov    DWORD PTR [esp+0x34],edx
  45b6ee:	mov    eax,DWORD PTR [esp+0x10]
  45b6f2:	mov    edx,DWORD PTR [esp+0x14]
  45b6f6:	shrd   eax,edx,0xe
  45b6fa:	shr    edx,0xe
  45b6fd:	push   edx
  45b6fe:	push   eax
  45b6ff:	mov    edx,DWORD PTR [esp+0x18]
  45b703:	shl    edx,0x12
  45b706:	xor    eax,eax
  45b708:	or     eax,DWORD PTR [esp]
  45b70b:	or     edx,DWORD PTR [esp+0x4]
  45b70f:	add    esp,0x8
  45b712:	push   edx
  45b713:	push   eax
  45b714:	mov    eax,DWORD PTR [esp+0x18]
  45b718:	mov    edx,DWORD PTR [esp+0x1c]
  45b71c:	shrd   eax,edx,0x12
  45b720:	shr    edx,0x12
  45b723:	push   edx
  45b724:	push   eax
  45b725:	mov    edx,DWORD PTR [esp+0x20]
  45b729:	shl    edx,0xe
  45b72c:	xor    eax,eax
  45b72e:	or     eax,DWORD PTR [esp]
  45b731:	or     edx,DWORD PTR [esp+0x4]
  45b735:	add    esp,0x8
  45b738:	xor    eax,DWORD PTR [esp]
  45b73b:	xor    edx,DWORD PTR [esp+0x4]
  45b73f:	add    esp,0x8
  45b742:	push   edx
  45b743:	push   eax
  45b744:	mov    eax,DWORD PTR [esp+0x1c]
  45b748:	shr    eax,0x9
  45b74b:	xor    edx,edx
  45b74d:	push   edx
  45b74e:	push   eax
  45b74f:	mov    eax,DWORD PTR [esp+0x20]
  45b753:	mov    edx,DWORD PTR [esp+0x24]
  45b757:	shld   edx,eax,0x17
  45b75b:	shl    eax,0x17
  45b75e:	or     eax,DWORD PTR [esp]
  45b761:	or     edx,DWORD PTR [esp+0x4]
  45b765:	add    esp,0x8
  45b768:	xor    eax,DWORD PTR [esp]
  45b76b:	xor    edx,DWORD PTR [esp+0x4]
  45b76f:	add    esp,0x8
  45b772:	add    eax,DWORD PTR [esp+0x28]
  45b776:	adc    edx,DWORD PTR [esp+0x2c]
  45b77a:	push   edx
  45b77b:	push   eax
  45b77c:	mov    eax,DWORD PTR [esp+0x18]
  45b780:	mov    edx,DWORD PTR [esp+0x1c]
  45b784:	and    eax,DWORD PTR [esp+0x20]
  45b788:	and    edx,DWORD PTR [esp+0x24]
  45b78c:	push   edx
  45b78d:	push   eax
  45b78e:	mov    eax,DWORD PTR [esp+0x20]
  45b792:	mov    edx,DWORD PTR [esp+0x24]
  45b796:	not    eax
  45b798:	not    edx
  45b79a:	and    eax,DWORD PTR [esp+0x30]
  45b79e:	and    edx,DWORD PTR [esp+0x34]
  45b7a2:	xor    eax,DWORD PTR [esp]
  45b7a5:	xor    edx,DWORD PTR [esp+0x4]
  45b7a9:	add    esp,0x8
  45b7ac:	add    eax,DWORD PTR [esp]
  45b7af:	adc    edx,DWORD PTR [esp+0x4]
  45b7b3:	add    esp,0x8
  45b7b6:	add    eax,0xcde0eb1e
  45b7bb:	adc    edx,0xeada7dd6
  45b7c1:	add    eax,DWORD PTR [esp+0x260]
  45b7c8:	adc    edx,DWORD PTR [esp+0x264]
  45b7cf:	mov    DWORD PTR [esp+0x40],eax
  45b7d3:	mov    DWORD PTR [esp+0x44],edx
  45b7d7:	mov    eax,DWORD PTR [esp+0x30]
  45b7db:	mov    edx,DWORD PTR [esp+0x34]
  45b7df:	shrd   eax,edx,0x1c
  45b7e3:	shr    edx,0x1c
  45b7e6:	push   edx
  45b7e7:	push   eax
  45b7e8:	mov    edx,DWORD PTR [esp+0x38]
  45b7ec:	shl    edx,0x4
  45b7ef:	xor    eax,eax
  45b7f1:	or     eax,DWORD PTR [esp]
  45b7f4:	or     edx,DWORD PTR [esp+0x4]
  45b7f8:	add    esp,0x8
  45b7fb:	push   edx
  45b7fc:	push   eax
  45b7fd:	mov    eax,DWORD PTR [esp+0x3c]
  45b801:	shr    eax,0x2
  45b804:	xor    edx,edx
  45b806:	push   edx
  45b807:	push   eax
  45b808:	mov    eax,DWORD PTR [esp+0x40]
  45b80c:	mov    edx,DWORD PTR [esp+0x44]
  45b810:	shld   edx,eax,0x1e
  45b814:	shl    eax,0x1e
  45b817:	or     eax,DWORD PTR [esp]
  45b81a:	or     edx,DWORD PTR [esp+0x4]
  45b81e:	add    esp,0x8
  45b821:	xor    eax,DWORD PTR [esp]
  45b824:	xor    edx,DWORD PTR [esp+0x4]
  45b828:	add    esp,0x8
  45b82b:	push   edx
  45b82c:	push   eax
  45b82d:	mov    eax,DWORD PTR [esp+0x3c]
  45b831:	shr    eax,0x7
  45b834:	xor    edx,edx
  45b836:	push   edx
  45b837:	push   eax
  45b838:	mov    eax,DWORD PTR [esp+0x40]
  45b83c:	mov    edx,DWORD PTR [esp+0x44]
  45b840:	shld   edx,eax,0x19
  45b844:	shl    eax,0x19
  45b847:	or     eax,DWORD PTR [esp]
  45b84a:	or     edx,DWORD PTR [esp+0x4]
  45b84e:	add    esp,0x8
  45b851:	xor    eax,DWORD PTR [esp]
  45b854:	xor    edx,DWORD PTR [esp+0x4]
  45b858:	add    esp,0x8
  45b85b:	push   edx
  45b85c:	push   eax
  45b85d:	mov    eax,DWORD PTR [esp+0x38]
  45b861:	mov    edx,DWORD PTR [esp+0x3c]
  45b865:	and    eax,DWORD PTR [esp+0x40]
  45b869:	and    edx,DWORD PTR [esp+0x44]
  45b86d:	push   edx
  45b86e:	push   eax
  45b86f:	mov    eax,DWORD PTR [esp+0x40]
  45b873:	mov    edx,DWORD PTR [esp+0x44]
  45b877:	and    eax,DWORD PTR [esp+0x10]
  45b87b:	and    edx,DWORD PTR [esp+0x14]
  45b87f:	xor    eax,DWORD PTR [esp]
  45b882:	xor    edx,DWORD PTR [esp+0x4]
  45b886:	add    esp,0x8
  45b889:	push   edx
  45b88a:	push   eax
  45b88b:	mov    eax,DWORD PTR [esp+0x48]
  45b88f:	mov    edx,DWORD PTR [esp+0x4c]
  45b893:	and    eax,DWORD PTR [esp+0x10]
  45b897:	and    edx,DWORD PTR [esp+0x14]
  45b89b:	xor    eax,DWORD PTR [esp]
  45b89e:	xor    edx,DWORD PTR [esp+0x4]
  45b8a2:	add    esp,0x8
  45b8a5:	add    eax,DWORD PTR [esp]
  45b8a8:	adc    edx,DWORD PTR [esp+0x4]
  45b8ac:	add    esp,0x8
  45b8af:	mov    DWORD PTR [esp+0x48],eax
  45b8b3:	mov    DWORD PTR [esp+0x4c],edx
  45b8b7:	mov    eax,DWORD PTR [esp+0x8]
  45b8bb:	mov    edx,DWORD PTR [esp+0xc]
  45b8bf:	add    eax,DWORD PTR [esp+0x40]
  45b8c3:	adc    edx,DWORD PTR [esp+0x44]
  45b8c7:	mov    DWORD PTR [esp+0x8],eax
  45b8cb:	mov    DWORD PTR [esp+0xc],edx
  45b8cf:	mov    eax,DWORD PTR [esp+0x40]
  45b8d3:	mov    edx,DWORD PTR [esp+0x44]
  45b8d7:	add    eax,DWORD PTR [esp+0x48]
  45b8db:	adc    edx,DWORD PTR [esp+0x4c]
  45b8df:	mov    DWORD PTR [esp+0x28],eax
  45b8e3:	mov    DWORD PTR [esp+0x2c],edx
  45b8e7:	mov    eax,DWORD PTR [esp+0x8]
  45b8eb:	mov    edx,DWORD PTR [esp+0xc]
  45b8ef:	shrd   eax,edx,0xe
  45b8f3:	shr    edx,0xe
  45b8f6:	push   edx
  45b8f7:	push   eax
  45b8f8:	mov    edx,DWORD PTR [esp+0x10]
  45b8fc:	shl    edx,0x12
  45b8ff:	xor    eax,eax
  45b901:	or     eax,DWORD PTR [esp]
  45b904:	or     edx,DWORD PTR [esp+0x4]
  45b908:	add    esp,0x8
  45b90b:	push   edx
  45b90c:	push   eax
  45b90d:	mov    eax,DWORD PTR [esp+0x10]
  45b911:	mov    edx,DWORD PTR [esp+0x14]
  45b915:	shrd   eax,edx,0x12
  45b919:	shr    edx,0x12
  45b91c:	push   edx
  45b91d:	push   eax
  45b91e:	mov    edx,DWORD PTR [esp+0x18]
  45b922:	shl    edx,0xe
  45b925:	xor    eax,eax
  45b927:	or     eax,DWORD PTR [esp]
  45b92a:	or     edx,DWORD PTR [esp+0x4]
  45b92e:	add    esp,0x8
  45b931:	xor    eax,DWORD PTR [esp]
  45b934:	xor    edx,DWORD PTR [esp+0x4]
  45b938:	add    esp,0x8
  45b93b:	push   edx
  45b93c:	push   eax
  45b93d:	mov    eax,DWORD PTR [esp+0x14]
  45b941:	shr    eax,0x9
  45b944:	xor    edx,edx
  45b946:	push   edx
  45b947:	push   eax
  45b948:	mov    eax,DWORD PTR [esp+0x18]
  45b94c:	mov    edx,DWORD PTR [esp+0x1c]
  45b950:	shld   edx,eax,0x17
  45b954:	shl    eax,0x17
  45b957:	or     eax,DWORD PTR [esp]
  45b95a:	or     edx,DWORD PTR [esp+0x4]
  45b95e:	add    esp,0x8
  45b961:	xor    eax,DWORD PTR [esp]
  45b964:	xor    edx,DWORD PTR [esp+0x4]
  45b968:	add    esp,0x8
  45b96b:	add    eax,DWORD PTR [esp+0x20]
  45b96f:	adc    edx,DWORD PTR [esp+0x24]
  45b973:	push   edx
  45b974:	push   eax
  45b975:	mov    eax,DWORD PTR [esp+0x10]
  45b979:	mov    edx,DWORD PTR [esp+0x14]
  45b97d:	and    eax,DWORD PTR [esp+0x18]
  45b981:	and    edx,DWORD PTR [esp+0x1c]
  45b985:	push   edx
  45b986:	push   eax
  45b987:	mov    eax,DWORD PTR [esp+0x18]
  45b98b:	mov    edx,DWORD PTR [esp+0x1c]
  45b98f:	not    eax
  45b991:	not    edx
  45b993:	and    eax,DWORD PTR [esp+0x28]
  45b997:	and    edx,DWORD PTR [esp+0x2c]
  45b99b:	xor    eax,DWORD PTR [esp]
  45b99e:	xor    edx,DWORD PTR [esp+0x4]
  45b9a2:	add    esp,0x8
  45b9a5:	add    eax,DWORD PTR [esp]
  45b9a8:	adc    edx,DWORD PTR [esp+0x4]
  45b9ac:	add    esp,0x8
  45b9af:	add    eax,0xee6ed178
  45b9b4:	adc    edx,0xf57d4f7f
  45b9ba:	add    eax,DWORD PTR [esp+0x268]
  45b9c1:	adc    edx,DWORD PTR [esp+0x26c]
  45b9c8:	mov    DWORD PTR [esp+0x40],eax
  45b9cc:	mov    DWORD PTR [esp+0x44],edx
  45b9d0:	mov    eax,DWORD PTR [esp+0x28]
  45b9d4:	mov    edx,DWORD PTR [esp+0x2c]
  45b9d8:	shrd   eax,edx,0x1c
  45b9dc:	shr    edx,0x1c
  45b9df:	push   edx
  45b9e0:	push   eax
  45b9e1:	mov    edx,DWORD PTR [esp+0x30]
  45b9e5:	shl    edx,0x4
  45b9e8:	xor    eax,eax
  45b9ea:	or     eax,DWORD PTR [esp]
  45b9ed:	or     edx,DWORD PTR [esp+0x4]
  45b9f1:	add    esp,0x8
  45b9f4:	push   edx
  45b9f5:	push   eax
  45b9f6:	mov    eax,DWORD PTR [esp+0x34]
  45b9fa:	shr    eax,0x2
  45b9fd:	xor    edx,edx
  45b9ff:	push   edx
  45ba00:	push   eax
  45ba01:	mov    eax,DWORD PTR [esp+0x38]
  45ba05:	mov    edx,DWORD PTR [esp+0x3c]
  45ba09:	shld   edx,eax,0x1e
  45ba0d:	shl    eax,0x1e
  45ba10:	or     eax,DWORD PTR [esp]
  45ba13:	or     edx,DWORD PTR [esp+0x4]
  45ba17:	add    esp,0x8
  45ba1a:	xor    eax,DWORD PTR [esp]
  45ba1d:	xor    edx,DWORD PTR [esp+0x4]
  45ba21:	add    esp,0x8
  45ba24:	push   edx
  45ba25:	push   eax
  45ba26:	mov    eax,DWORD PTR [esp+0x34]
  45ba2a:	shr    eax,0x7
  45ba2d:	xor    edx,edx
  45ba2f:	push   edx
  45ba30:	push   eax
  45ba31:	mov    eax,DWORD PTR [esp+0x38]
  45ba35:	mov    edx,DWORD PTR [esp+0x3c]
  45ba39:	shld   edx,eax,0x19
  45ba3d:	shl    eax,0x19
  45ba40:	or     eax,DWORD PTR [esp]
  45ba43:	or     edx,DWORD PTR [esp+0x4]
  45ba47:	add    esp,0x8
  45ba4a:	xor    eax,DWORD PTR [esp]
  45ba4d:	xor    edx,DWORD PTR [esp+0x4]
  45ba51:	add    esp,0x8
  45ba54:	push   edx
  45ba55:	push   eax
  45ba56:	mov    eax,DWORD PTR [esp+0x30]
  45ba5a:	mov    edx,DWORD PTR [esp+0x34]
  45ba5e:	and    eax,DWORD PTR [esp+0x38]
  45ba62:	and    edx,DWORD PTR [esp+0x3c]
  45ba66:	push   edx
  45ba67:	push   eax
  45ba68:	mov    eax,DWORD PTR [esp+0x38]
  45ba6c:	mov    edx,DWORD PTR [esp+0x3c]
  45ba70:	and    eax,DWORD PTR [esp+0x48]
  45ba74:	and    edx,DWORD PTR [esp+0x4c]
  45ba78:	xor    eax,DWORD PTR [esp]
  45ba7b:	xor    edx,DWORD PTR [esp+0x4]
  45ba7f:	add    esp,0x8
  45ba82:	push   edx
  45ba83:	push   eax
  45ba84:	mov    eax,DWORD PTR [esp+0x40]
  45ba88:	mov    edx,DWORD PTR [esp+0x44]
  45ba8c:	and    eax,DWORD PTR [esp+0x48]
  45ba90:	and    edx,DWORD PTR [esp+0x4c]
  45ba94:	xor    eax,DWORD PTR [esp]
  45ba97:	xor    edx,DWORD PTR [esp+0x4]
  45ba9b:	add    esp,0x8
  45ba9e:	add    eax,DWORD PTR [esp]
  45baa1:	adc    edx,DWORD PTR [esp+0x4]
  45baa5:	add    esp,0x8
  45baa8:	mov    DWORD PTR [esp+0x48],eax
  45baac:	mov    DWORD PTR [esp+0x4c],edx
  45bab0:	mov    eax,DWORD PTR [esp]
  45bab3:	mov    edx,DWORD PTR [esp+0x4]
  45bab7:	add    eax,DWORD PTR [esp+0x40]
  45babb:	adc    edx,DWORD PTR [esp+0x44]
  45babf:	mov    DWORD PTR [esp],eax
  45bac2:	mov    DWORD PTR [esp+0x4],edx
  45bac6:	mov    eax,DWORD PTR [esp+0x40]
  45baca:	mov    edx,DWORD PTR [esp+0x44]
  45bace:	add    eax,DWORD PTR [esp+0x48]
  45bad2:	adc    edx,DWORD PTR [esp+0x4c]
  45bad6:	mov    DWORD PTR [esp+0x20],eax
  45bada:	mov    DWORD PTR [esp+0x24],edx
  45bade:	mov    eax,DWORD PTR [esp]
  45bae1:	mov    edx,DWORD PTR [esp+0x4]
  45bae5:	shrd   eax,edx,0xe
  45bae9:	shr    edx,0xe
  45baec:	push   edx
  45baed:	push   eax
  45baee:	mov    edx,DWORD PTR [esp+0x8]
  45baf2:	shl    edx,0x12
  45baf5:	xor    eax,eax
  45baf7:	or     eax,DWORD PTR [esp]
  45bafa:	or     edx,DWORD PTR [esp+0x4]
  45bafe:	add    esp,0x8
  45bb01:	push   edx
  45bb02:	push   eax
  45bb03:	mov    eax,DWORD PTR [esp+0x8]
  45bb07:	mov    edx,DWORD PTR [esp+0xc]
  45bb0b:	shrd   eax,edx,0x12
  45bb0f:	shr    edx,0x12
  45bb12:	push   edx
  45bb13:	push   eax
  45bb14:	mov    edx,DWORD PTR [esp+0x10]
  45bb18:	shl    edx,0xe
  45bb1b:	xor    eax,eax
  45bb1d:	or     eax,DWORD PTR [esp]
  45bb20:	or     edx,DWORD PTR [esp+0x4]
  45bb24:	add    esp,0x8
  45bb27:	xor    eax,DWORD PTR [esp]
  45bb2a:	xor    edx,DWORD PTR [esp+0x4]
  45bb2e:	add    esp,0x8
  45bb31:	push   edx
  45bb32:	push   eax
  45bb33:	mov    eax,DWORD PTR [esp+0xc]
  45bb37:	shr    eax,0x9
  45bb3a:	xor    edx,edx
  45bb3c:	push   edx
  45bb3d:	push   eax
  45bb3e:	mov    eax,DWORD PTR [esp+0x10]
  45bb42:	mov    edx,DWORD PTR [esp+0x14]
  45bb46:	shld   edx,eax,0x17
  45bb4a:	shl    eax,0x17
  45bb4d:	or     eax,DWORD PTR [esp]
  45bb50:	or     edx,DWORD PTR [esp+0x4]
  45bb54:	add    esp,0x8
  45bb57:	xor    eax,DWORD PTR [esp]
  45bb5a:	xor    edx,DWORD PTR [esp+0x4]
  45bb5e:	add    esp,0x8
  45bb61:	add    eax,DWORD PTR [esp+0x18]
  45bb65:	adc    edx,DWORD PTR [esp+0x1c]
  45bb69:	push   edx
  45bb6a:	push   eax
  45bb6b:	mov    eax,DWORD PTR [esp+0x8]
  45bb6f:	mov    edx,DWORD PTR [esp+0xc]
  45bb73:	and    eax,DWORD PTR [esp+0x10]
  45bb77:	and    edx,DWORD PTR [esp+0x14]
  45bb7b:	push   edx
  45bb7c:	push   eax
  45bb7d:	mov    eax,DWORD PTR [esp+0x10]
  45bb81:	mov    edx,DWORD PTR [esp+0x14]
  45bb85:	not    eax
  45bb87:	not    edx
  45bb89:	and    eax,DWORD PTR [esp+0x20]
  45bb8d:	and    edx,DWORD PTR [esp+0x24]
  45bb91:	xor    eax,DWORD PTR [esp]
  45bb94:	xor    edx,DWORD PTR [esp+0x4]
  45bb98:	add    esp,0x8
  45bb9b:	add    eax,DWORD PTR [esp]
  45bb9e:	adc    edx,DWORD PTR [esp+0x4]
  45bba2:	add    esp,0x8
  45bba5:	add    eax,0x72176fba
  45bbaa:	adc    edx,0x6f067aa
  45bbb0:	add    eax,DWORD PTR [esp+0x270]
  45bbb7:	adc    edx,DWORD PTR [esp+0x274]
  45bbbe:	mov    DWORD PTR [esp+0x40],eax
  45bbc2:	mov    DWORD PTR [esp+0x44],edx
  45bbc6:	mov    eax,DWORD PTR [esp+0x20]
  45bbca:	mov    edx,DWORD PTR [esp+0x24]
  45bbce:	shrd   eax,edx,0x1c
  45bbd2:	shr    edx,0x1c
  45bbd5:	push   edx
  45bbd6:	push   eax
  45bbd7:	mov    edx,DWORD PTR [esp+0x28]
  45bbdb:	shl    edx,0x4
  45bbde:	xor    eax,eax
  45bbe0:	or     eax,DWORD PTR [esp]
  45bbe3:	or     edx,DWORD PTR [esp+0x4]
  45bbe7:	add    esp,0x8
  45bbea:	push   edx
  45bbeb:	push   eax
  45bbec:	mov    eax,DWORD PTR [esp+0x2c]
  45bbf0:	shr    eax,0x2
  45bbf3:	xor    edx,edx
  45bbf5:	push   edx
  45bbf6:	push   eax
  45bbf7:	mov    eax,DWORD PTR [esp+0x30]
  45bbfb:	mov    edx,DWORD PTR [esp+0x34]
  45bbff:	shld   edx,eax,0x1e
  45bc03:	shl    eax,0x1e
  45bc06:	or     eax,DWORD PTR [esp]
  45bc09:	or     edx,DWORD PTR [esp+0x4]
  45bc0d:	add    esp,0x8
  45bc10:	xor    eax,DWORD PTR [esp]
  45bc13:	xor    edx,DWORD PTR [esp+0x4]
  45bc17:	add    esp,0x8
  45bc1a:	push   edx
  45bc1b:	push   eax
  45bc1c:	mov    eax,DWORD PTR [esp+0x2c]
  45bc20:	shr    eax,0x7
  45bc23:	xor    edx,edx
  45bc25:	push   edx
  45bc26:	push   eax
  45bc27:	mov    eax,DWORD PTR [esp+0x30]
  45bc2b:	mov    edx,DWORD PTR [esp+0x34]
  45bc2f:	shld   edx,eax,0x19
  45bc33:	shl    eax,0x19
  45bc36:	or     eax,DWORD PTR [esp]
  45bc39:	or     edx,DWORD PTR [esp+0x4]
  45bc3d:	add    esp,0x8
  45bc40:	xor    eax,DWORD PTR [esp]
  45bc43:	xor    edx,DWORD PTR [esp+0x4]
  45bc47:	add    esp,0x8
  45bc4a:	push   edx
  45bc4b:	push   eax
  45bc4c:	mov    eax,DWORD PTR [esp+0x28]
  45bc50:	mov    edx,DWORD PTR [esp+0x2c]
  45bc54:	and    eax,DWORD PTR [esp+0x30]
  45bc58:	and    edx,DWORD PTR [esp+0x34]
  45bc5c:	push   edx
  45bc5d:	push   eax
  45bc5e:	mov    eax,DWORD PTR [esp+0x30]
  45bc62:	mov    edx,DWORD PTR [esp+0x34]
  45bc66:	and    eax,DWORD PTR [esp+0x40]
  45bc6a:	and    edx,DWORD PTR [esp+0x44]
  45bc6e:	xor    eax,DWORD PTR [esp]
  45bc71:	xor    edx,DWORD PTR [esp+0x4]
  45bc75:	add    esp,0x8
  45bc78:	push   edx
  45bc79:	push   eax
  45bc7a:	mov    eax,DWORD PTR [esp+0x38]
  45bc7e:	mov    edx,DWORD PTR [esp+0x3c]
  45bc82:	and    eax,DWORD PTR [esp+0x40]
  45bc86:	and    edx,DWORD PTR [esp+0x44]
  45bc8a:	xor    eax,DWORD PTR [esp]
  45bc8d:	xor    edx,DWORD PTR [esp+0x4]
  45bc91:	add    esp,0x8
  45bc94:	add    eax,DWORD PTR [esp]
  45bc97:	adc    edx,DWORD PTR [esp+0x4]
  45bc9b:	add    esp,0x8
  45bc9e:	mov    DWORD PTR [esp+0x48],eax
  45bca2:	mov    DWORD PTR [esp+0x4c],edx
  45bca6:	mov    eax,DWORD PTR [esp+0x38]
  45bcaa:	mov    edx,DWORD PTR [esp+0x3c]
  45bcae:	add    eax,DWORD PTR [esp+0x40]
  45bcb2:	adc    edx,DWORD PTR [esp+0x44]
  45bcb6:	mov    DWORD PTR [esp+0x38],eax
  45bcba:	mov    DWORD PTR [esp+0x3c],edx
  45bcbe:	mov    eax,DWORD PTR [esp+0x40]
  45bcc2:	mov    edx,DWORD PTR [esp+0x44]
  45bcc6:	add    eax,DWORD PTR [esp+0x48]
  45bcca:	adc    edx,DWORD PTR [esp+0x4c]
  45bcce:	mov    DWORD PTR [esp+0x18],eax
  45bcd2:	mov    DWORD PTR [esp+0x1c],edx
  45bcd6:	mov    eax,DWORD PTR [esp+0x38]
  45bcda:	mov    edx,DWORD PTR [esp+0x3c]
  45bcde:	shrd   eax,edx,0xe
  45bce2:	shr    edx,0xe
  45bce5:	push   edx
  45bce6:	push   eax
  45bce7:	mov    edx,DWORD PTR [esp+0x40]
  45bceb:	shl    edx,0x12
  45bcee:	xor    eax,eax
  45bcf0:	or     eax,DWORD PTR [esp]
  45bcf3:	or     edx,DWORD PTR [esp+0x4]
  45bcf7:	add    esp,0x8
  45bcfa:	push   edx
  45bcfb:	push   eax
  45bcfc:	mov    eax,DWORD PTR [esp+0x40]
  45bd00:	mov    edx,DWORD PTR [esp+0x44]
  45bd04:	shrd   eax,edx,0x12
  45bd08:	shr    edx,0x12
  45bd0b:	push   edx
  45bd0c:	push   eax
  45bd0d:	mov    edx,DWORD PTR [esp+0x48]
  45bd11:	shl    edx,0xe
  45bd14:	xor    eax,eax
  45bd16:	or     eax,DWORD PTR [esp]
  45bd19:	or     edx,DWORD PTR [esp+0x4]
  45bd1d:	add    esp,0x8
  45bd20:	xor    eax,DWORD PTR [esp]
  45bd23:	xor    edx,DWORD PTR [esp+0x4]
  45bd27:	add    esp,0x8
  45bd2a:	push   edx
  45bd2b:	push   eax
  45bd2c:	mov    eax,DWORD PTR [esp+0x44]
  45bd30:	shr    eax,0x9
  45bd33:	xor    edx,edx
  45bd35:	push   edx
  45bd36:	push   eax
  45bd37:	mov    eax,DWORD PTR [esp+0x48]
  45bd3b:	mov    edx,DWORD PTR [esp+0x4c]
  45bd3f:	shld   edx,eax,0x17
  45bd43:	shl    eax,0x17
  45bd46:	or     eax,DWORD PTR [esp]
  45bd49:	or     edx,DWORD PTR [esp+0x4]
  45bd4d:	add    esp,0x8
  45bd50:	xor    eax,DWORD PTR [esp]
  45bd53:	xor    edx,DWORD PTR [esp+0x4]
  45bd57:	add    esp,0x8
  45bd5a:	add    eax,DWORD PTR [esp+0x10]
  45bd5e:	adc    edx,DWORD PTR [esp+0x14]
  45bd62:	push   edx
  45bd63:	push   eax
  45bd64:	mov    eax,DWORD PTR [esp+0x40]
  45bd68:	mov    edx,DWORD PTR [esp+0x44]
  45bd6c:	and    eax,DWORD PTR [esp+0x8]
  45bd70:	and    edx,DWORD PTR [esp+0xc]
  45bd74:	push   edx
  45bd75:	push   eax
  45bd76:	mov    eax,DWORD PTR [esp+0x48]
  45bd7a:	mov    edx,DWORD PTR [esp+0x4c]
  45bd7e:	not    eax
  45bd80:	not    edx
  45bd82:	and    eax,DWORD PTR [esp+0x18]
  45bd86:	and    edx,DWORD PTR [esp+0x1c]
  45bd8a:	xor    eax,DWORD PTR [esp]
  45bd8d:	xor    edx,DWORD PTR [esp+0x4]
  45bd91:	add    esp,0x8
  45bd94:	add    eax,DWORD PTR [esp]
  45bd97:	adc    edx,DWORD PTR [esp+0x4]
  45bd9b:	add    esp,0x8
  45bd9e:	add    eax,0xa2c898a6
  45bda3:	adc    edx,0xa637dc5
  45bda9:	add    eax,DWORD PTR [esp+0x278]
  45bdb0:	adc    edx,DWORD PTR [esp+0x27c]
  45bdb7:	mov    DWORD PTR [esp+0x40],eax
  45bdbb:	mov    DWORD PTR [esp+0x44],edx
  45bdbf:	mov    eax,DWORD PTR [esp+0x18]
  45bdc3:	mov    edx,DWORD PTR [esp+0x1c]
  45bdc7:	shrd   eax,edx,0x1c
  45bdcb:	shr    edx,0x1c
  45bdce:	push   edx
  45bdcf:	push   eax
  45bdd0:	mov    edx,DWORD PTR [esp+0x20]
  45bdd4:	shl    edx,0x4
  45bdd7:	xor    eax,eax
  45bdd9:	or     eax,DWORD PTR [esp]
  45bddc:	or     edx,DWORD PTR [esp+0x4]
  45bde0:	add    esp,0x8
  45bde3:	push   edx
  45bde4:	push   eax
  45bde5:	mov    eax,DWORD PTR [esp+0x24]
  45bde9:	shr    eax,0x2
  45bdec:	xor    edx,edx
  45bdee:	push   edx
  45bdef:	push   eax
  45bdf0:	mov    eax,DWORD PTR [esp+0x28]
  45bdf4:	mov    edx,DWORD PTR [esp+0x2c]
  45bdf8:	shld   edx,eax,0x1e
  45bdfc:	shl    eax,0x1e
  45bdff:	or     eax,DWORD PTR [esp]
  45be02:	or     edx,DWORD PTR [esp+0x4]
  45be06:	add    esp,0x8
  45be09:	xor    eax,DWORD PTR [esp]
  45be0c:	xor    edx,DWORD PTR [esp+0x4]
  45be10:	add    esp,0x8
  45be13:	push   edx
  45be14:	push   eax
  45be15:	mov    eax,DWORD PTR [esp+0x24]
  45be19:	shr    eax,0x7
  45be1c:	xor    edx,edx
  45be1e:	push   edx
  45be1f:	push   eax
  45be20:	mov    eax,DWORD PTR [esp+0x28]
  45be24:	mov    edx,DWORD PTR [esp+0x2c]
  45be28:	shld   edx,eax,0x19
  45be2c:	shl    eax,0x19
  45be2f:	or     eax,DWORD PTR [esp]
  45be32:	or     edx,DWORD PTR [esp+0x4]
  45be36:	add    esp,0x8
  45be39:	xor    eax,DWORD PTR [esp]
  45be3c:	xor    edx,DWORD PTR [esp+0x4]
  45be40:	add    esp,0x8
  45be43:	push   edx
  45be44:	push   eax
  45be45:	mov    eax,DWORD PTR [esp+0x20]
  45be49:	mov    edx,DWORD PTR [esp+0x24]
  45be4d:	and    eax,DWORD PTR [esp+0x28]
  45be51:	and    edx,DWORD PTR [esp+0x2c]
  45be55:	push   edx
  45be56:	push   eax
  45be57:	mov    eax,DWORD PTR [esp+0x28]
  45be5b:	mov    edx,DWORD PTR [esp+0x2c]
  45be5f:	and    eax,DWORD PTR [esp+0x38]
  45be63:	and    edx,DWORD PTR [esp+0x3c]
  45be67:	xor    eax,DWORD PTR [esp]
  45be6a:	xor    edx,DWORD PTR [esp+0x4]
  45be6e:	add    esp,0x8
  45be71:	push   edx
  45be72:	push   eax
  45be73:	mov    eax,DWORD PTR [esp+0x30]
  45be77:	mov    edx,DWORD PTR [esp+0x34]
  45be7b:	and    eax,DWORD PTR [esp+0x38]
  45be7f:	and    edx,DWORD PTR [esp+0x3c]
  45be83:	xor    eax,DWORD PTR [esp]
  45be86:	xor    edx,DWORD PTR [esp+0x4]
  45be8a:	add    esp,0x8
  45be8d:	add    eax,DWORD PTR [esp]
  45be90:	adc    edx,DWORD PTR [esp+0x4]
  45be94:	add    esp,0x8
  45be97:	mov    DWORD PTR [esp+0x48],eax
  45be9b:	mov    DWORD PTR [esp+0x4c],edx
  45be9f:	mov    eax,DWORD PTR [esp+0x30]
  45bea3:	mov    edx,DWORD PTR [esp+0x34]
  45bea7:	add    eax,DWORD PTR [esp+0x40]
  45beab:	adc    edx,DWORD PTR [esp+0x44]
  45beaf:	mov    DWORD PTR [esp+0x30],eax
  45beb3:	mov    DWORD PTR [esp+0x34],edx
  45beb7:	mov    eax,DWORD PTR [esp+0x40]
  45bebb:	mov    edx,DWORD PTR [esp+0x44]
  45bebf:	add    eax,DWORD PTR [esp+0x48]
  45bec3:	adc    edx,DWORD PTR [esp+0x4c]
  45bec7:	mov    DWORD PTR [esp+0x10],eax
  45becb:	mov    DWORD PTR [esp+0x14],edx
  45becf:	mov    eax,DWORD PTR [esp+0x30]
  45bed3:	mov    edx,DWORD PTR [esp+0x34]
  45bed7:	shrd   eax,edx,0xe
  45bedb:	shr    edx,0xe
  45bede:	push   edx
  45bedf:	push   eax
  45bee0:	mov    edx,DWORD PTR [esp+0x38]
  45bee4:	shl    edx,0x12
  45bee7:	xor    eax,eax
  45bee9:	or     eax,DWORD PTR [esp]
  45beec:	or     edx,DWORD PTR [esp+0x4]
  45bef0:	add    esp,0x8
  45bef3:	push   edx
  45bef4:	push   eax
  45bef5:	mov    eax,DWORD PTR [esp+0x38]
  45bef9:	mov    edx,DWORD PTR [esp+0x3c]
  45befd:	shrd   eax,edx,0x12
  45bf01:	shr    edx,0x12
  45bf04:	push   edx
  45bf05:	push   eax
  45bf06:	mov    edx,DWORD PTR [esp+0x40]
  45bf0a:	shl    edx,0xe
  45bf0d:	xor    eax,eax
  45bf0f:	or     eax,DWORD PTR [esp]
  45bf12:	or     edx,DWORD PTR [esp+0x4]
  45bf16:	add    esp,0x8
  45bf19:	xor    eax,DWORD PTR [esp]
  45bf1c:	xor    edx,DWORD PTR [esp+0x4]
  45bf20:	add    esp,0x8
  45bf23:	push   edx
  45bf24:	push   eax
  45bf25:	mov    eax,DWORD PTR [esp+0x3c]
  45bf29:	shr    eax,0x9
  45bf2c:	xor    edx,edx
  45bf2e:	push   edx
  45bf2f:	push   eax
  45bf30:	mov    eax,DWORD PTR [esp+0x40]
  45bf34:	mov    edx,DWORD PTR [esp+0x44]
  45bf38:	shld   edx,eax,0x17
  45bf3c:	shl    eax,0x17
  45bf3f:	or     eax,DWORD PTR [esp]
  45bf42:	or     edx,DWORD PTR [esp+0x4]
  45bf46:	add    esp,0x8
  45bf49:	xor    eax,DWORD PTR [esp]
  45bf4c:	xor    edx,DWORD PTR [esp+0x4]
  45bf50:	add    esp,0x8
  45bf53:	add    eax,DWORD PTR [esp+0x8]
  45bf57:	adc    edx,DWORD PTR [esp+0xc]
  45bf5b:	push   edx
  45bf5c:	push   eax
  45bf5d:	mov    eax,DWORD PTR [esp+0x38]
  45bf61:	mov    edx,DWORD PTR [esp+0x3c]
  45bf65:	and    eax,DWORD PTR [esp+0x40]
  45bf69:	and    edx,DWORD PTR [esp+0x44]
  45bf6d:	push   edx
  45bf6e:	push   eax
  45bf6f:	mov    eax,DWORD PTR [esp+0x40]
  45bf73:	mov    edx,DWORD PTR [esp+0x44]
  45bf77:	not    eax
  45bf79:	not    edx
  45bf7b:	and    eax,DWORD PTR [esp+0x10]
  45bf7f:	and    edx,DWORD PTR [esp+0x14]
  45bf83:	xor    eax,DWORD PTR [esp]
  45bf86:	xor    edx,DWORD PTR [esp+0x4]
  45bf8a:	add    esp,0x8
  45bf8d:	add    eax,DWORD PTR [esp]
  45bf90:	adc    edx,DWORD PTR [esp+0x4]
  45bf94:	add    esp,0x8
  45bf97:	add    eax,0xbef90dae
  45bf9c:	adc    edx,0x113f9804
  45bfa2:	add    eax,DWORD PTR [esp+0x280]
  45bfa9:	adc    edx,DWORD PTR [esp+0x284]
  45bfb0:	mov    DWORD PTR [esp+0x40],eax
  45bfb4:	mov    DWORD PTR [esp+0x44],edx
  45bfb8:	mov    eax,DWORD PTR [esp+0x10]
  45bfbc:	mov    edx,DWORD PTR [esp+0x14]
  45bfc0:	shrd   eax,edx,0x1c
  45bfc4:	shr    edx,0x1c
  45bfc7:	push   edx
  45bfc8:	push   eax
  45bfc9:	mov    edx,DWORD PTR [esp+0x18]
  45bfcd:	shl    edx,0x4
  45bfd0:	xor    eax,eax
  45bfd2:	or     eax,DWORD PTR [esp]
  45bfd5:	or     edx,DWORD PTR [esp+0x4]
  45bfd9:	add    esp,0x8
  45bfdc:	push   edx
  45bfdd:	push   eax
  45bfde:	mov    eax,DWORD PTR [esp+0x1c]
  45bfe2:	shr    eax,0x2
  45bfe5:	xor    edx,edx
  45bfe7:	push   edx
  45bfe8:	push   eax
  45bfe9:	mov    eax,DWORD PTR [esp+0x20]
  45bfed:	mov    edx,DWORD PTR [esp+0x24]
  45bff1:	shld   edx,eax,0x1e
  45bff5:	shl    eax,0x1e
  45bff8:	or     eax,DWORD PTR [esp]
  45bffb:	or     edx,DWORD PTR [esp+0x4]
  45bfff:	add    esp,0x8
  45c002:	xor    eax,DWORD PTR [esp]
  45c005:	xor    edx,DWORD PTR [esp+0x4]
  45c009:	add    esp,0x8
  45c00c:	push   edx
  45c00d:	push   eax
  45c00e:	mov    eax,DWORD PTR [esp+0x1c]
  45c012:	shr    eax,0x7
  45c015:	xor    edx,edx
  45c017:	push   edx
  45c018:	push   eax
  45c019:	mov    eax,DWORD PTR [esp+0x20]
  45c01d:	mov    edx,DWORD PTR [esp+0x24]
  45c021:	shld   edx,eax,0x19
  45c025:	shl    eax,0x19
  45c028:	or     eax,DWORD PTR [esp]
  45c02b:	or     edx,DWORD PTR [esp+0x4]
  45c02f:	add    esp,0x8
  45c032:	xor    eax,DWORD PTR [esp]
  45c035:	xor    edx,DWORD PTR [esp+0x4]
  45c039:	add    esp,0x8
  45c03c:	push   edx
  45c03d:	push   eax
  45c03e:	mov    eax,DWORD PTR [esp+0x18]
  45c042:	mov    edx,DWORD PTR [esp+0x1c]
  45c046:	and    eax,DWORD PTR [esp+0x20]
  45c04a:	and    edx,DWORD PTR [esp+0x24]
  45c04e:	push   edx
  45c04f:	push   eax
  45c050:	mov    eax,DWORD PTR [esp+0x20]
  45c054:	mov    edx,DWORD PTR [esp+0x24]
  45c058:	and    eax,DWORD PTR [esp+0x30]
  45c05c:	and    edx,DWORD PTR [esp+0x34]
  45c060:	xor    eax,DWORD PTR [esp]
  45c063:	xor    edx,DWORD PTR [esp+0x4]
  45c067:	add    esp,0x8
  45c06a:	push   edx
  45c06b:	push   eax
  45c06c:	mov    eax,DWORD PTR [esp+0x28]
  45c070:	mov    edx,DWORD PTR [esp+0x2c]
  45c074:	and    eax,DWORD PTR [esp+0x30]
  45c078:	and    edx,DWORD PTR [esp+0x34]
  45c07c:	xor    eax,DWORD PTR [esp]
  45c07f:	xor    edx,DWORD PTR [esp+0x4]
  45c083:	add    esp,0x8
  45c086:	add    eax,DWORD PTR [esp]
  45c089:	adc    edx,DWORD PTR [esp+0x4]
  45c08d:	add    esp,0x8
  45c090:	mov    DWORD PTR [esp+0x48],eax
  45c094:	mov    DWORD PTR [esp+0x4c],edx
  45c098:	mov    eax,DWORD PTR [esp+0x28]
  45c09c:	mov    edx,DWORD PTR [esp+0x2c]
  45c0a0:	add    eax,DWORD PTR [esp+0x40]
  45c0a4:	adc    edx,DWORD PTR [esp+0x44]
  45c0a8:	mov    DWORD PTR [esp+0x28],eax
  45c0ac:	mov    DWORD PTR [esp+0x2c],edx
  45c0b0:	mov    eax,DWORD PTR [esp+0x40]
  45c0b4:	mov    edx,DWORD PTR [esp+0x44]
  45c0b8:	add    eax,DWORD PTR [esp+0x48]
  45c0bc:	adc    edx,DWORD PTR [esp+0x4c]
  45c0c0:	mov    DWORD PTR [esp+0x8],eax
  45c0c4:	mov    DWORD PTR [esp+0xc],edx
  45c0c8:	mov    eax,DWORD PTR [esp+0x28]
  45c0cc:	mov    edx,DWORD PTR [esp+0x2c]
  45c0d0:	shrd   eax,edx,0xe
  45c0d4:	shr    edx,0xe
  45c0d7:	push   edx
  45c0d8:	push   eax
  45c0d9:	mov    edx,DWORD PTR [esp+0x30]
  45c0dd:	shl    edx,0x12
  45c0e0:	xor    eax,eax
  45c0e2:	or     eax,DWORD PTR [esp]
  45c0e5:	or     edx,DWORD PTR [esp+0x4]
  45c0e9:	add    esp,0x8
  45c0ec:	push   edx
  45c0ed:	push   eax
  45c0ee:	mov    eax,DWORD PTR [esp+0x30]
  45c0f2:	mov    edx,DWORD PTR [esp+0x34]
  45c0f6:	shrd   eax,edx,0x12
  45c0fa:	shr    edx,0x12
  45c0fd:	push   edx
  45c0fe:	push   eax
  45c0ff:	mov    edx,DWORD PTR [esp+0x38]
  45c103:	shl    edx,0xe
  45c106:	xor    eax,eax
  45c108:	or     eax,DWORD PTR [esp]
  45c10b:	or     edx,DWORD PTR [esp+0x4]
  45c10f:	add    esp,0x8
  45c112:	xor    eax,DWORD PTR [esp]
  45c115:	xor    edx,DWORD PTR [esp+0x4]
  45c119:	add    esp,0x8
  45c11c:	push   edx
  45c11d:	push   eax
  45c11e:	mov    eax,DWORD PTR [esp+0x34]
  45c122:	shr    eax,0x9
  45c125:	xor    edx,edx
  45c127:	push   edx
  45c128:	push   eax
  45c129:	mov    eax,DWORD PTR [esp+0x38]
  45c12d:	mov    edx,DWORD PTR [esp+0x3c]
  45c131:	shld   edx,eax,0x17
  45c135:	shl    eax,0x17
  45c138:	or     eax,DWORD PTR [esp]
  45c13b:	or     edx,DWORD PTR [esp+0x4]
  45c13f:	add    esp,0x8
  45c142:	xor    eax,DWORD PTR [esp]
  45c145:	xor    edx,DWORD PTR [esp+0x4]
  45c149:	add    esp,0x8
  45c14c:	add    eax,DWORD PTR [esp]
  45c14f:	adc    edx,DWORD PTR [esp+0x4]
  45c153:	push   edx
  45c154:	push   eax
  45c155:	mov    eax,DWORD PTR [esp+0x30]
  45c159:	mov    edx,DWORD PTR [esp+0x34]
  45c15d:	and    eax,DWORD PTR [esp+0x38]
  45c161:	and    edx,DWORD PTR [esp+0x3c]
  45c165:	push   edx
  45c166:	push   eax
  45c167:	mov    eax,DWORD PTR [esp+0x38]
  45c16b:	mov    edx,DWORD PTR [esp+0x3c]
  45c16f:	not    eax
  45c171:	not    edx
  45c173:	and    eax,DWORD PTR [esp+0x48]
  45c177:	and    edx,DWORD PTR [esp+0x4c]
  45c17b:	xor    eax,DWORD PTR [esp]
  45c17e:	xor    edx,DWORD PTR [esp+0x4]
  45c182:	add    esp,0x8
  45c185:	add    eax,DWORD PTR [esp]
  45c188:	adc    edx,DWORD PTR [esp+0x4]
  45c18c:	add    esp,0x8
  45c18f:	add    eax,0x131c471b
  45c194:	adc    edx,0x1b710b35
  45c19a:	add    eax,DWORD PTR [esp+0x288]
  45c1a1:	adc    edx,DWORD PTR [esp+0x28c]
  45c1a8:	mov    DWORD PTR [esp+0x40],eax
  45c1ac:	mov    DWORD PTR [esp+0x44],edx
  45c1b0:	mov    eax,DWORD PTR [esp+0x8]
  45c1b4:	mov    edx,DWORD PTR [esp+0xc]
  45c1b8:	shrd   eax,edx,0x1c
  45c1bc:	shr    edx,0x1c
  45c1bf:	push   edx
  45c1c0:	push   eax
  45c1c1:	mov    edx,DWORD PTR [esp+0x10]
  45c1c5:	shl    edx,0x4
  45c1c8:	xor    eax,eax
  45c1ca:	or     eax,DWORD PTR [esp]
  45c1cd:	or     edx,DWORD PTR [esp+0x4]
  45c1d1:	add    esp,0x8
  45c1d4:	push   edx
  45c1d5:	push   eax
  45c1d6:	mov    eax,DWORD PTR [esp+0x14]
  45c1da:	shr    eax,0x2
  45c1dd:	xor    edx,edx
  45c1df:	push   edx
  45c1e0:	push   eax
  45c1e1:	mov    eax,DWORD PTR [esp+0x18]
  45c1e5:	mov    edx,DWORD PTR [esp+0x1c]
  45c1e9:	shld   edx,eax,0x1e
  45c1ed:	shl    eax,0x1e
  45c1f0:	or     eax,DWORD PTR [esp]
  45c1f3:	or     edx,DWORD PTR [esp+0x4]
  45c1f7:	add    esp,0x8
  45c1fa:	xor    eax,DWORD PTR [esp]
  45c1fd:	xor    edx,DWORD PTR [esp+0x4]
  45c201:	add    esp,0x8
  45c204:	push   edx
  45c205:	push   eax
  45c206:	mov    eax,DWORD PTR [esp+0x14]
  45c20a:	shr    eax,0x7
  45c20d:	xor    edx,edx
  45c20f:	push   edx
  45c210:	push   eax
  45c211:	mov    eax,DWORD PTR [esp+0x18]
  45c215:	mov    edx,DWORD PTR [esp+0x1c]
  45c219:	shld   edx,eax,0x19
  45c21d:	shl    eax,0x19
  45c220:	or     eax,DWORD PTR [esp]
  45c223:	or     edx,DWORD PTR [esp+0x4]
  45c227:	add    esp,0x8
  45c22a:	xor    eax,DWORD PTR [esp]
  45c22d:	xor    edx,DWORD PTR [esp+0x4]
  45c231:	add    esp,0x8
  45c234:	push   edx
  45c235:	push   eax
  45c236:	mov    eax,DWORD PTR [esp+0x10]
  45c23a:	mov    edx,DWORD PTR [esp+0x14]
  45c23e:	and    eax,DWORD PTR [esp+0x18]
  45c242:	and    edx,DWORD PTR [esp+0x1c]
  45c246:	push   edx
  45c247:	push   eax
  45c248:	mov    eax,DWORD PTR [esp+0x18]
  45c24c:	mov    edx,DWORD PTR [esp+0x1c]
  45c250:	and    eax,DWORD PTR [esp+0x28]
  45c254:	and    edx,DWORD PTR [esp+0x2c]
  45c258:	xor    eax,DWORD PTR [esp]
  45c25b:	xor    edx,DWORD PTR [esp+0x4]
  45c25f:	add    esp,0x8
  45c262:	push   edx
  45c263:	push   eax
  45c264:	mov    eax,DWORD PTR [esp+0x20]
  45c268:	mov    edx,DWORD PTR [esp+0x24]
  45c26c:	and    eax,DWORD PTR [esp+0x28]
  45c270:	and    edx,DWORD PTR [esp+0x2c]
  45c274:	xor    eax,DWORD PTR [esp]
  45c277:	xor    edx,DWORD PTR [esp+0x4]
  45c27b:	add    esp,0x8
  45c27e:	add    eax,DWORD PTR [esp]
  45c281:	adc    edx,DWORD PTR [esp+0x4]
  45c285:	add    esp,0x8
  45c288:	mov    DWORD PTR [esp+0x48],eax
  45c28c:	mov    DWORD PTR [esp+0x4c],edx
  45c290:	mov    eax,DWORD PTR [esp+0x20]
  45c294:	mov    edx,DWORD PTR [esp+0x24]
  45c298:	add    eax,DWORD PTR [esp+0x40]
  45c29c:	adc    edx,DWORD PTR [esp+0x44]
  45c2a0:	mov    DWORD PTR [esp+0x20],eax
  45c2a4:	mov    DWORD PTR [esp+0x24],edx
  45c2a8:	mov    eax,DWORD PTR [esp+0x40]
  45c2ac:	mov    edx,DWORD PTR [esp+0x44]
  45c2b0:	add    eax,DWORD PTR [esp+0x48]
  45c2b4:	adc    edx,DWORD PTR [esp+0x4c]
  45c2b8:	mov    DWORD PTR [esp],eax
  45c2bb:	mov    DWORD PTR [esp+0x4],edx
  45c2bf:	mov    eax,DWORD PTR [esp+0x20]
  45c2c3:	mov    edx,DWORD PTR [esp+0x24]
  45c2c7:	shrd   eax,edx,0xe
  45c2cb:	shr    edx,0xe
  45c2ce:	push   edx
  45c2cf:	push   eax
  45c2d0:	mov    edx,DWORD PTR [esp+0x28]
  45c2d4:	shl    edx,0x12
  45c2d7:	xor    eax,eax
  45c2d9:	or     eax,DWORD PTR [esp]
  45c2dc:	or     edx,DWORD PTR [esp+0x4]
  45c2e0:	add    esp,0x8
  45c2e3:	push   edx
  45c2e4:	push   eax
  45c2e5:	mov    eax,DWORD PTR [esp+0x28]
  45c2e9:	mov    edx,DWORD PTR [esp+0x2c]
  45c2ed:	shrd   eax,edx,0x12
  45c2f1:	shr    edx,0x12
  45c2f4:	push   edx
  45c2f5:	push   eax
  45c2f6:	mov    edx,DWORD PTR [esp+0x30]
  45c2fa:	shl    edx,0xe
  45c2fd:	xor    eax,eax
  45c2ff:	or     eax,DWORD PTR [esp]
  45c302:	or     edx,DWORD PTR [esp+0x4]
  45c306:	add    esp,0x8
  45c309:	xor    eax,DWORD PTR [esp]
  45c30c:	xor    edx,DWORD PTR [esp+0x4]
  45c310:	add    esp,0x8
  45c313:	push   edx
  45c314:	push   eax
  45c315:	mov    eax,DWORD PTR [esp+0x2c]
  45c319:	shr    eax,0x9
  45c31c:	xor    edx,edx
  45c31e:	push   edx
  45c31f:	push   eax
  45c320:	mov    eax,DWORD PTR [esp+0x30]
  45c324:	mov    edx,DWORD PTR [esp+0x34]
  45c328:	shld   edx,eax,0x17
  45c32c:	shl    eax,0x17
  45c32f:	or     eax,DWORD PTR [esp]
  45c332:	or     edx,DWORD PTR [esp+0x4]
  45c336:	add    esp,0x8
  45c339:	xor    eax,DWORD PTR [esp]
  45c33c:	xor    edx,DWORD PTR [esp+0x4]
  45c340:	add    esp,0x8
  45c343:	add    eax,DWORD PTR [esp+0x38]
  45c347:	adc    edx,DWORD PTR [esp+0x3c]
  45c34b:	push   edx
  45c34c:	push   eax
  45c34d:	mov    eax,DWORD PTR [esp+0x28]
  45c351:	mov    edx,DWORD PTR [esp+0x2c]
  45c355:	and    eax,DWORD PTR [esp+0x30]
  45c359:	and    edx,DWORD PTR [esp+0x34]
  45c35d:	push   edx
  45c35e:	push   eax
  45c35f:	mov    eax,DWORD PTR [esp+0x30]
  45c363:	mov    edx,DWORD PTR [esp+0x34]
  45c367:	not    eax
  45c369:	not    edx
  45c36b:	and    eax,DWORD PTR [esp+0x40]
  45c36f:	and    edx,DWORD PTR [esp+0x44]
  45c373:	xor    eax,DWORD PTR [esp]
  45c376:	xor    edx,DWORD PTR [esp+0x4]
  45c37a:	add    esp,0x8
  45c37d:	add    eax,DWORD PTR [esp]
  45c380:	adc    edx,DWORD PTR [esp+0x4]
  45c384:	add    esp,0x8
  45c387:	add    eax,0x23047d84
  45c38c:	adc    edx,0x28db77f5
  45c392:	add    eax,DWORD PTR [esp+0x290]
  45c399:	adc    edx,DWORD PTR [esp+0x294]
  45c3a0:	mov    DWORD PTR [esp+0x40],eax
  45c3a4:	mov    DWORD PTR [esp+0x44],edx
  45c3a8:	mov    eax,DWORD PTR [esp]
  45c3ab:	mov    edx,DWORD PTR [esp+0x4]
  45c3af:	shrd   eax,edx,0x1c
  45c3b3:	shr    edx,0x1c
  45c3b6:	push   edx
  45c3b7:	push   eax
  45c3b8:	mov    edx,DWORD PTR [esp+0x8]
  45c3bc:	shl    edx,0x4
  45c3bf:	xor    eax,eax
  45c3c1:	or     eax,DWORD PTR [esp]
  45c3c4:	or     edx,DWORD PTR [esp+0x4]
  45c3c8:	add    esp,0x8
  45c3cb:	push   edx
  45c3cc:	push   eax
  45c3cd:	mov    eax,DWORD PTR [esp+0xc]
  45c3d1:	shr    eax,0x2
  45c3d4:	xor    edx,edx
  45c3d6:	push   edx
  45c3d7:	push   eax
  45c3d8:	mov    eax,DWORD PTR [esp+0x10]
  45c3dc:	mov    edx,DWORD PTR [esp+0x14]
  45c3e0:	shld   edx,eax,0x1e
  45c3e4:	shl    eax,0x1e
  45c3e7:	or     eax,DWORD PTR [esp]
  45c3ea:	or     edx,DWORD PTR [esp+0x4]
  45c3ee:	add    esp,0x8
  45c3f1:	xor    eax,DWORD PTR [esp]
  45c3f4:	xor    edx,DWORD PTR [esp+0x4]
  45c3f8:	add    esp,0x8
  45c3fb:	push   edx
  45c3fc:	push   eax
  45c3fd:	mov    eax,DWORD PTR [esp+0xc]
  45c401:	shr    eax,0x7
  45c404:	xor    edx,edx
  45c406:	push   edx
  45c407:	push   eax
  45c408:	mov    eax,DWORD PTR [esp+0x10]
  45c40c:	mov    edx,DWORD PTR [esp+0x14]
  45c410:	shld   edx,eax,0x19
  45c414:	shl    eax,0x19
  45c417:	or     eax,DWORD PTR [esp]
  45c41a:	or     edx,DWORD PTR [esp+0x4]
  45c41e:	add    esp,0x8
  45c421:	xor    eax,DWORD PTR [esp]
  45c424:	xor    edx,DWORD PTR [esp+0x4]
  45c428:	add    esp,0x8
  45c42b:	push   edx
  45c42c:	push   eax
  45c42d:	mov    eax,DWORD PTR [esp+0x8]
  45c431:	mov    edx,DWORD PTR [esp+0xc]
  45c435:	and    eax,DWORD PTR [esp+0x10]
  45c439:	and    edx,DWORD PTR [esp+0x14]
  45c43d:	push   edx
  45c43e:	push   eax
  45c43f:	mov    eax,DWORD PTR [esp+0x10]
  45c443:	mov    edx,DWORD PTR [esp+0x14]
  45c447:	and    eax,DWORD PTR [esp+0x20]
  45c44b:	and    edx,DWORD PTR [esp+0x24]
  45c44f:	xor    eax,DWORD PTR [esp]
  45c452:	xor    edx,DWORD PTR [esp+0x4]
  45c456:	add    esp,0x8
  45c459:	push   edx
  45c45a:	push   eax
  45c45b:	mov    eax,DWORD PTR [esp+0x18]
  45c45f:	mov    edx,DWORD PTR [esp+0x1c]
  45c463:	and    eax,DWORD PTR [esp+0x20]
  45c467:	and    edx,DWORD PTR [esp+0x24]
  45c46b:	xor    eax,DWORD PTR [esp]
  45c46e:	xor    edx,DWORD PTR [esp+0x4]
  45c472:	add    esp,0x8
  45c475:	add    eax,DWORD PTR [esp]
  45c478:	adc    edx,DWORD PTR [esp+0x4]
  45c47c:	add    esp,0x8
  45c47f:	mov    DWORD PTR [esp+0x48],eax
  45c483:	mov    DWORD PTR [esp+0x4c],edx
  45c487:	mov    eax,DWORD PTR [esp+0x18]
  45c48b:	mov    edx,DWORD PTR [esp+0x1c]
  45c48f:	add    eax,DWORD PTR [esp+0x40]
  45c493:	adc    edx,DWORD PTR [esp+0x44]
  45c497:	mov    DWORD PTR [esp+0x18],eax
  45c49b:	mov    DWORD PTR [esp+0x1c],edx
  45c49f:	mov    eax,DWORD PTR [esp+0x40]
  45c4a3:	mov    edx,DWORD PTR [esp+0x44]
  45c4a7:	add    eax,DWORD PTR [esp+0x48]
  45c4ab:	adc    edx,DWORD PTR [esp+0x4c]
  45c4af:	mov    DWORD PTR [esp+0x38],eax
  45c4b3:	mov    DWORD PTR [esp+0x3c],edx
  45c4b7:	mov    eax,DWORD PTR [esp+0x18]
  45c4bb:	mov    edx,DWORD PTR [esp+0x1c]
  45c4bf:	shrd   eax,edx,0xe
  45c4c3:	shr    edx,0xe
  45c4c6:	push   edx
  45c4c7:	push   eax
  45c4c8:	mov    edx,DWORD PTR [esp+0x20]
  45c4cc:	shl    edx,0x12
  45c4cf:	xor    eax,eax
  45c4d1:	or     eax,DWORD PTR [esp]
  45c4d4:	or     edx,DWORD PTR [esp+0x4]
  45c4d8:	add    esp,0x8
  45c4db:	push   edx
  45c4dc:	push   eax
  45c4dd:	mov    eax,DWORD PTR [esp+0x20]
  45c4e1:	mov    edx,DWORD PTR [esp+0x24]
  45c4e5:	shrd   eax,edx,0x12
  45c4e9:	shr    edx,0x12
  45c4ec:	push   edx
  45c4ed:	push   eax
  45c4ee:	mov    edx,DWORD PTR [esp+0x28]
  45c4f2:	shl    edx,0xe
  45c4f5:	xor    eax,eax
  45c4f7:	or     eax,DWORD PTR [esp]
  45c4fa:	or     edx,DWORD PTR [esp+0x4]
  45c4fe:	add    esp,0x8
  45c501:	xor    eax,DWORD PTR [esp]
  45c504:	xor    edx,DWORD PTR [esp+0x4]
  45c508:	add    esp,0x8
  45c50b:	push   edx
  45c50c:	push   eax
  45c50d:	mov    eax,DWORD PTR [esp+0x24]
  45c511:	shr    eax,0x9
  45c514:	xor    edx,edx
  45c516:	push   edx
  45c517:	push   eax
  45c518:	mov    eax,DWORD PTR [esp+0x28]
  45c51c:	mov    edx,DWORD PTR [esp+0x2c]
  45c520:	shld   edx,eax,0x17
  45c524:	shl    eax,0x17
  45c527:	or     eax,DWORD PTR [esp]
  45c52a:	or     edx,DWORD PTR [esp+0x4]
  45c52e:	add    esp,0x8
  45c531:	xor    eax,DWORD PTR [esp]
  45c534:	xor    edx,DWORD PTR [esp+0x4]
  45c538:	add    esp,0x8
  45c53b:	add    eax,DWORD PTR [esp+0x30]
  45c53f:	adc    edx,DWORD PTR [esp+0x34]
  45c543:	push   edx
  45c544:	push   eax
  45c545:	mov    eax,DWORD PTR [esp+0x20]
  45c549:	mov    edx,DWORD PTR [esp+0x24]
  45c54d:	and    eax,DWORD PTR [esp+0x28]
  45c551:	and    edx,DWORD PTR [esp+0x2c]
  45c555:	push   edx
  45c556:	push   eax
  45c557:	mov    eax,DWORD PTR [esp+0x28]
  45c55b:	mov    edx,DWORD PTR [esp+0x2c]
  45c55f:	not    eax
  45c561:	not    edx
  45c563:	and    eax,DWORD PTR [esp+0x38]
  45c567:	and    edx,DWORD PTR [esp+0x3c]
  45c56b:	xor    eax,DWORD PTR [esp]
  45c56e:	xor    edx,DWORD PTR [esp+0x4]
  45c572:	add    esp,0x8
  45c575:	add    eax,DWORD PTR [esp]
  45c578:	adc    edx,DWORD PTR [esp+0x4]
  45c57c:	add    esp,0x8
  45c57f:	add    eax,0x40c72493
  45c584:	adc    edx,0x32caab7b
  45c58a:	add    eax,DWORD PTR [esp+0x298]
  45c591:	adc    edx,DWORD PTR [esp+0x29c]
  45c598:	mov    DWORD PTR [esp+0x40],eax
  45c59c:	mov    DWORD PTR [esp+0x44],edx
  45c5a0:	mov    eax,DWORD PTR [esp+0x38]
  45c5a4:	mov    edx,DWORD PTR [esp+0x3c]
  45c5a8:	shrd   eax,edx,0x1c
  45c5ac:	shr    edx,0x1c
  45c5af:	push   edx
  45c5b0:	push   eax
  45c5b1:	mov    edx,DWORD PTR [esp+0x40]
  45c5b5:	shl    edx,0x4
  45c5b8:	xor    eax,eax
  45c5ba:	or     eax,DWORD PTR [esp]
  45c5bd:	or     edx,DWORD PTR [esp+0x4]
  45c5c1:	add    esp,0x8
  45c5c4:	push   edx
  45c5c5:	push   eax
  45c5c6:	mov    eax,DWORD PTR [esp+0x44]
  45c5ca:	shr    eax,0x2
  45c5cd:	xor    edx,edx
  45c5cf:	push   edx
  45c5d0:	push   eax
  45c5d1:	mov    eax,DWORD PTR [esp+0x48]
  45c5d5:	mov    edx,DWORD PTR [esp+0x4c]
  45c5d9:	shld   edx,eax,0x1e
  45c5dd:	shl    eax,0x1e
  45c5e0:	or     eax,DWORD PTR [esp]
  45c5e3:	or     edx,DWORD PTR [esp+0x4]
  45c5e7:	add    esp,0x8
  45c5ea:	xor    eax,DWORD PTR [esp]
  45c5ed:	xor    edx,DWORD PTR [esp+0x4]
  45c5f1:	add    esp,0x8
  45c5f4:	push   edx
  45c5f5:	push   eax
  45c5f6:	mov    eax,DWORD PTR [esp+0x44]
  45c5fa:	shr    eax,0x7
  45c5fd:	xor    edx,edx
  45c5ff:	push   edx
  45c600:	push   eax
  45c601:	mov    eax,DWORD PTR [esp+0x48]
  45c605:	mov    edx,DWORD PTR [esp+0x4c]
  45c609:	shld   edx,eax,0x19
  45c60d:	shl    eax,0x19
  45c610:	or     eax,DWORD PTR [esp]
  45c613:	or     edx,DWORD PTR [esp+0x4]
  45c617:	add    esp,0x8
  45c61a:	xor    eax,DWORD PTR [esp]
  45c61d:	xor    edx,DWORD PTR [esp+0x4]
  45c621:	add    esp,0x8
  45c624:	push   edx
  45c625:	push   eax
  45c626:	mov    eax,DWORD PTR [esp+0x40]
  45c62a:	mov    edx,DWORD PTR [esp+0x44]
  45c62e:	and    eax,DWORD PTR [esp+0x8]
  45c632:	and    edx,DWORD PTR [esp+0xc]
  45c636:	push   edx
  45c637:	push   eax
  45c638:	mov    eax,DWORD PTR [esp+0x48]
  45c63c:	mov    edx,DWORD PTR [esp+0x4c]
  45c640:	and    eax,DWORD PTR [esp+0x18]
  45c644:	and    edx,DWORD PTR [esp+0x1c]
  45c648:	xor    eax,DWORD PTR [esp]
  45c64b:	xor    edx,DWORD PTR [esp+0x4]
  45c64f:	add    esp,0x8
  45c652:	push   edx
  45c653:	push   eax
  45c654:	mov    eax,DWORD PTR [esp+0x10]
  45c658:	mov    edx,DWORD PTR [esp+0x14]
  45c65c:	and    eax,DWORD PTR [esp+0x18]
  45c660:	and    edx,DWORD PTR [esp+0x1c]
  45c664:	xor    eax,DWORD PTR [esp]
  45c667:	xor    edx,DWORD PTR [esp+0x4]
  45c66b:	add    esp,0x8
  45c66e:	add    eax,DWORD PTR [esp]
  45c671:	adc    edx,DWORD PTR [esp+0x4]
  45c675:	add    esp,0x8
  45c678:	mov    DWORD PTR [esp+0x48],eax
  45c67c:	mov    DWORD PTR [esp+0x4c],edx
  45c680:	mov    eax,DWORD PTR [esp+0x10]
  45c684:	mov    edx,DWORD PTR [esp+0x14]
  45c688:	add    eax,DWORD PTR [esp+0x40]
  45c68c:	adc    edx,DWORD PTR [esp+0x44]
  45c690:	mov    DWORD PTR [esp+0x10],eax
  45c694:	mov    DWORD PTR [esp+0x14],edx
  45c698:	mov    eax,DWORD PTR [esp+0x40]
  45c69c:	mov    edx,DWORD PTR [esp+0x44]
  45c6a0:	add    eax,DWORD PTR [esp+0x48]
  45c6a4:	adc    edx,DWORD PTR [esp+0x4c]
  45c6a8:	mov    DWORD PTR [esp+0x30],eax
  45c6ac:	mov    DWORD PTR [esp+0x34],edx
  45c6b0:	mov    eax,DWORD PTR [esp+0x10]
  45c6b4:	mov    edx,DWORD PTR [esp+0x14]
  45c6b8:	shrd   eax,edx,0xe
  45c6bc:	shr    edx,0xe
  45c6bf:	push   edx
  45c6c0:	push   eax
  45c6c1:	mov    edx,DWORD PTR [esp+0x18]
  45c6c5:	shl    edx,0x12
  45c6c8:	xor    eax,eax
  45c6ca:	or     eax,DWORD PTR [esp]
  45c6cd:	or     edx,DWORD PTR [esp+0x4]
  45c6d1:	add    esp,0x8
  45c6d4:	push   edx
  45c6d5:	push   eax
  45c6d6:	mov    eax,DWORD PTR [esp+0x18]
  45c6da:	mov    edx,DWORD PTR [esp+0x1c]
  45c6de:	shrd   eax,edx,0x12
  45c6e2:	shr    edx,0x12
  45c6e5:	push   edx
  45c6e6:	push   eax
  45c6e7:	mov    edx,DWORD PTR [esp+0x20]
  45c6eb:	shl    edx,0xe
  45c6ee:	xor    eax,eax
  45c6f0:	or     eax,DWORD PTR [esp]
  45c6f3:	or     edx,DWORD PTR [esp+0x4]
  45c6f7:	add    esp,0x8
  45c6fa:	xor    eax,DWORD PTR [esp]
  45c6fd:	xor    edx,DWORD PTR [esp+0x4]
  45c701:	add    esp,0x8
  45c704:	push   edx
  45c705:	push   eax
  45c706:	mov    eax,DWORD PTR [esp+0x1c]
  45c70a:	shr    eax,0x9
  45c70d:	xor    edx,edx
  45c70f:	push   edx
  45c710:	push   eax
  45c711:	mov    eax,DWORD PTR [esp+0x20]
  45c715:	mov    edx,DWORD PTR [esp+0x24]
  45c719:	shld   edx,eax,0x17
  45c71d:	shl    eax,0x17
  45c720:	or     eax,DWORD PTR [esp]
  45c723:	or     edx,DWORD PTR [esp+0x4]
  45c727:	add    esp,0x8
  45c72a:	xor    eax,DWORD PTR [esp]
  45c72d:	xor    edx,DWORD PTR [esp+0x4]
  45c731:	add    esp,0x8
  45c734:	add    eax,DWORD PTR [esp+0x28]
  45c738:	adc    edx,DWORD PTR [esp+0x2c]
  45c73c:	push   edx
  45c73d:	push   eax
  45c73e:	mov    eax,DWORD PTR [esp+0x18]
  45c742:	mov    edx,DWORD PTR [esp+0x1c]
  45c746:	and    eax,DWORD PTR [esp+0x20]
  45c74a:	and    edx,DWORD PTR [esp+0x24]
  45c74e:	push   edx
  45c74f:	push   eax
  45c750:	mov    eax,DWORD PTR [esp+0x20]
  45c754:	mov    edx,DWORD PTR [esp+0x24]
  45c758:	not    eax
  45c75a:	not    edx
  45c75c:	and    eax,DWORD PTR [esp+0x30]
  45c760:	and    edx,DWORD PTR [esp+0x34]
  45c764:	xor    eax,DWORD PTR [esp]
  45c767:	xor    edx,DWORD PTR [esp+0x4]
  45c76b:	add    esp,0x8
  45c76e:	add    eax,DWORD PTR [esp]
  45c771:	adc    edx,DWORD PTR [esp+0x4]
  45c775:	add    esp,0x8
  45c778:	add    eax,0x15c9bebc
  45c77d:	adc    edx,0x3c9ebe0a
  45c783:	add    eax,DWORD PTR [esp+0x2a0]
  45c78a:	adc    edx,DWORD PTR [esp+0x2a4]
  45c791:	mov    DWORD PTR [esp+0x40],eax
  45c795:	mov    DWORD PTR [esp+0x44],edx
  45c799:	mov    eax,DWORD PTR [esp+0x30]
  45c79d:	mov    edx,DWORD PTR [esp+0x34]
  45c7a1:	shrd   eax,edx,0x1c
  45c7a5:	shr    edx,0x1c
  45c7a8:	push   edx
  45c7a9:	push   eax
  45c7aa:	mov    edx,DWORD PTR [esp+0x38]
  45c7ae:	shl    edx,0x4
  45c7b1:	xor    eax,eax
  45c7b3:	or     eax,DWORD PTR [esp]
  45c7b6:	or     edx,DWORD PTR [esp+0x4]
  45c7ba:	add    esp,0x8
  45c7bd:	push   edx
  45c7be:	push   eax
  45c7bf:	mov    eax,DWORD PTR [esp+0x3c]
  45c7c3:	shr    eax,0x2
  45c7c6:	xor    edx,edx
  45c7c8:	push   edx
  45c7c9:	push   eax
  45c7ca:	mov    eax,DWORD PTR [esp+0x40]
  45c7ce:	mov    edx,DWORD PTR [esp+0x44]
  45c7d2:	shld   edx,eax,0x1e
  45c7d6:	shl    eax,0x1e
  45c7d9:	or     eax,DWORD PTR [esp]
  45c7dc:	or     edx,DWORD PTR [esp+0x4]
  45c7e0:	add    esp,0x8
  45c7e3:	xor    eax,DWORD PTR [esp]
  45c7e6:	xor    edx,DWORD PTR [esp+0x4]
  45c7ea:	add    esp,0x8
  45c7ed:	push   edx
  45c7ee:	push   eax
  45c7ef:	mov    eax,DWORD PTR [esp+0x3c]
  45c7f3:	shr    eax,0x7
  45c7f6:	xor    edx,edx
  45c7f8:	push   edx
  45c7f9:	push   eax
  45c7fa:	mov    eax,DWORD PTR [esp+0x40]
  45c7fe:	mov    edx,DWORD PTR [esp+0x44]
  45c802:	shld   edx,eax,0x19
  45c806:	shl    eax,0x19
  45c809:	or     eax,DWORD PTR [esp]
  45c80c:	or     edx,DWORD PTR [esp+0x4]
  45c810:	add    esp,0x8
  45c813:	xor    eax,DWORD PTR [esp]
  45c816:	xor    edx,DWORD PTR [esp+0x4]
  45c81a:	add    esp,0x8
  45c81d:	push   edx
  45c81e:	push   eax
  45c81f:	mov    eax,DWORD PTR [esp+0x38]
  45c823:	mov    edx,DWORD PTR [esp+0x3c]
  45c827:	and    eax,DWORD PTR [esp+0x40]
  45c82b:	and    edx,DWORD PTR [esp+0x44]
  45c82f:	push   edx
  45c830:	push   eax
  45c831:	mov    eax,DWORD PTR [esp+0x40]
  45c835:	mov    edx,DWORD PTR [esp+0x44]
  45c839:	and    eax,DWORD PTR [esp+0x10]
  45c83d:	and    edx,DWORD PTR [esp+0x14]
  45c841:	xor    eax,DWORD PTR [esp]
  45c844:	xor    edx,DWORD PTR [esp+0x4]
  45c848:	add    esp,0x8
  45c84b:	push   edx
  45c84c:	push   eax
  45c84d:	mov    eax,DWORD PTR [esp+0x48]
  45c851:	mov    edx,DWORD PTR [esp+0x4c]
  45c855:	and    eax,DWORD PTR [esp+0x10]
  45c859:	and    edx,DWORD PTR [esp+0x14]
  45c85d:	xor    eax,DWORD PTR [esp]
  45c860:	xor    edx,DWORD PTR [esp+0x4]
  45c864:	add    esp,0x8
  45c867:	add    eax,DWORD PTR [esp]
  45c86a:	adc    edx,DWORD PTR [esp+0x4]
  45c86e:	add    esp,0x8
  45c871:	mov    DWORD PTR [esp+0x48],eax
  45c875:	mov    DWORD PTR [esp+0x4c],edx
  45c879:	mov    eax,DWORD PTR [esp+0x8]
  45c87d:	mov    edx,DWORD PTR [esp+0xc]
  45c881:	add    eax,DWORD PTR [esp+0x40]
  45c885:	adc    edx,DWORD PTR [esp+0x44]
  45c889:	mov    DWORD PTR [esp+0x8],eax
  45c88d:	mov    DWORD PTR [esp+0xc],edx
  45c891:	mov    eax,DWORD PTR [esp+0x40]
  45c895:	mov    edx,DWORD PTR [esp+0x44]
  45c899:	add    eax,DWORD PTR [esp+0x48]
  45c89d:	adc    edx,DWORD PTR [esp+0x4c]
  45c8a1:	mov    DWORD PTR [esp+0x28],eax
  45c8a5:	mov    DWORD PTR [esp+0x2c],edx
  45c8a9:	mov    eax,DWORD PTR [esp+0x8]
  45c8ad:	mov    edx,DWORD PTR [esp+0xc]
  45c8b1:	shrd   eax,edx,0xe
  45c8b5:	shr    edx,0xe
  45c8b8:	push   edx
  45c8b9:	push   eax
  45c8ba:	mov    edx,DWORD PTR [esp+0x10]
  45c8be:	shl    edx,0x12
  45c8c1:	xor    eax,eax
  45c8c3:	or     eax,DWORD PTR [esp]
  45c8c6:	or     edx,DWORD PTR [esp+0x4]
  45c8ca:	add    esp,0x8
  45c8cd:	push   edx
  45c8ce:	push   eax
  45c8cf:	mov    eax,DWORD PTR [esp+0x10]
  45c8d3:	mov    edx,DWORD PTR [esp+0x14]
  45c8d7:	shrd   eax,edx,0x12
  45c8db:	shr    edx,0x12
  45c8de:	push   edx
  45c8df:	push   eax
  45c8e0:	mov    edx,DWORD PTR [esp+0x18]
  45c8e4:	shl    edx,0xe
  45c8e7:	xor    eax,eax
  45c8e9:	or     eax,DWORD PTR [esp]
  45c8ec:	or     edx,DWORD PTR [esp+0x4]
  45c8f0:	add    esp,0x8
  45c8f3:	xor    eax,DWORD PTR [esp]
  45c8f6:	xor    edx,DWORD PTR [esp+0x4]
  45c8fa:	add    esp,0x8
  45c8fd:	push   edx
  45c8fe:	push   eax
  45c8ff:	mov    eax,DWORD PTR [esp+0x14]
  45c903:	shr    eax,0x9
  45c906:	xor    edx,edx
  45c908:	push   edx
  45c909:	push   eax
  45c90a:	mov    eax,DWORD PTR [esp+0x18]
  45c90e:	mov    edx,DWORD PTR [esp+0x1c]
  45c912:	shld   edx,eax,0x17
  45c916:	shl    eax,0x17
  45c919:	or     eax,DWORD PTR [esp]
  45c91c:	or     edx,DWORD PTR [esp+0x4]
  45c920:	add    esp,0x8
  45c923:	xor    eax,DWORD PTR [esp]
  45c926:	xor    edx,DWORD PTR [esp+0x4]
  45c92a:	add    esp,0x8
  45c92d:	add    eax,DWORD PTR [esp+0x20]
  45c931:	adc    edx,DWORD PTR [esp+0x24]
  45c935:	push   edx
  45c936:	push   eax
  45c937:	mov    eax,DWORD PTR [esp+0x10]
  45c93b:	mov    edx,DWORD PTR [esp+0x14]
  45c93f:	and    eax,DWORD PTR [esp+0x18]
  45c943:	and    edx,DWORD PTR [esp+0x1c]
  45c947:	push   edx
  45c948:	push   eax
  45c949:	mov    eax,DWORD PTR [esp+0x18]
  45c94d:	mov    edx,DWORD PTR [esp+0x1c]
  45c951:	not    eax
  45c953:	not    edx
  45c955:	and    eax,DWORD PTR [esp+0x28]
  45c959:	and    edx,DWORD PTR [esp+0x2c]
  45c95d:	xor    eax,DWORD PTR [esp]
  45c960:	xor    edx,DWORD PTR [esp+0x4]
  45c964:	add    esp,0x8
  45c967:	add    eax,DWORD PTR [esp]
  45c96a:	adc    edx,DWORD PTR [esp+0x4]
  45c96e:	add    esp,0x8
  45c971:	add    eax,0x9c100d4c
  45c976:	adc    edx,0x431d67c4
  45c97c:	add    eax,DWORD PTR [esp+0x2a8]
  45c983:	adc    edx,DWORD PTR [esp+0x2ac]
  45c98a:	mov    DWORD PTR [esp+0x40],eax
  45c98e:	mov    DWORD PTR [esp+0x44],edx
  45c992:	mov    eax,DWORD PTR [esp+0x28]
  45c996:	mov    edx,DWORD PTR [esp+0x2c]
  45c99a:	shrd   eax,edx,0x1c
  45c99e:	shr    edx,0x1c
  45c9a1:	push   edx
  45c9a2:	push   eax
  45c9a3:	mov    edx,DWORD PTR [esp+0x30]
  45c9a7:	shl    edx,0x4
  45c9aa:	xor    eax,eax
  45c9ac:	or     eax,DWORD PTR [esp]
  45c9af:	or     edx,DWORD PTR [esp+0x4]
  45c9b3:	add    esp,0x8
  45c9b6:	push   edx
  45c9b7:	push   eax
  45c9b8:	mov    eax,DWORD PTR [esp+0x34]
  45c9bc:	shr    eax,0x2
  45c9bf:	xor    edx,edx
  45c9c1:	push   edx
  45c9c2:	push   eax
  45c9c3:	mov    eax,DWORD PTR [esp+0x38]
  45c9c7:	mov    edx,DWORD PTR [esp+0x3c]
  45c9cb:	shld   edx,eax,0x1e
  45c9cf:	shl    eax,0x1e
  45c9d2:	or     eax,DWORD PTR [esp]
  45c9d5:	or     edx,DWORD PTR [esp+0x4]
  45c9d9:	add    esp,0x8
  45c9dc:	xor    eax,DWORD PTR [esp]
  45c9df:	xor    edx,DWORD PTR [esp+0x4]
  45c9e3:	add    esp,0x8
  45c9e6:	push   edx
  45c9e7:	push   eax
  45c9e8:	mov    eax,DWORD PTR [esp+0x34]
  45c9ec:	shr    eax,0x7
  45c9ef:	xor    edx,edx
  45c9f1:	push   edx
  45c9f2:	push   eax
  45c9f3:	mov    eax,DWORD PTR [esp+0x38]
  45c9f7:	mov    edx,DWORD PTR [esp+0x3c]
  45c9fb:	shld   edx,eax,0x19
  45c9ff:	shl    eax,0x19
  45ca02:	or     eax,DWORD PTR [esp]
  45ca05:	or     edx,DWORD PTR [esp+0x4]
  45ca09:	add    esp,0x8
  45ca0c:	xor    eax,DWORD PTR [esp]
  45ca0f:	xor    edx,DWORD PTR [esp+0x4]
  45ca13:	add    esp,0x8
  45ca16:	push   edx
  45ca17:	push   eax
  45ca18:	mov    eax,DWORD PTR [esp+0x30]
  45ca1c:	mov    edx,DWORD PTR [esp+0x34]
  45ca20:	and    eax,DWORD PTR [esp+0x38]
  45ca24:	and    edx,DWORD PTR [esp+0x3c]
  45ca28:	push   edx
  45ca29:	push   eax
  45ca2a:	mov    eax,DWORD PTR [esp+0x38]
  45ca2e:	mov    edx,DWORD PTR [esp+0x3c]
  45ca32:	and    eax,DWORD PTR [esp+0x48]
  45ca36:	and    edx,DWORD PTR [esp+0x4c]
  45ca3a:	xor    eax,DWORD PTR [esp]
  45ca3d:	xor    edx,DWORD PTR [esp+0x4]
  45ca41:	add    esp,0x8
  45ca44:	push   edx
  45ca45:	push   eax
  45ca46:	mov    eax,DWORD PTR [esp+0x40]
  45ca4a:	mov    edx,DWORD PTR [esp+0x44]
  45ca4e:	and    eax,DWORD PTR [esp+0x48]
  45ca52:	and    edx,DWORD PTR [esp+0x4c]
  45ca56:	xor    eax,DWORD PTR [esp]
  45ca59:	xor    edx,DWORD PTR [esp+0x4]
  45ca5d:	add    esp,0x8
  45ca60:	add    eax,DWORD PTR [esp]
  45ca63:	adc    edx,DWORD PTR [esp+0x4]
  45ca67:	add    esp,0x8
  45ca6a:	mov    DWORD PTR [esp+0x48],eax
  45ca6e:	mov    DWORD PTR [esp+0x4c],edx
  45ca72:	mov    eax,DWORD PTR [esp]
  45ca75:	mov    edx,DWORD PTR [esp+0x4]
  45ca79:	add    eax,DWORD PTR [esp+0x40]
  45ca7d:	adc    edx,DWORD PTR [esp+0x44]
  45ca81:	mov    DWORD PTR [esp],eax
  45ca84:	mov    DWORD PTR [esp+0x4],edx
  45ca88:	mov    eax,DWORD PTR [esp+0x40]
  45ca8c:	mov    edx,DWORD PTR [esp+0x44]
  45ca90:	add    eax,DWORD PTR [esp+0x48]
  45ca94:	adc    edx,DWORD PTR [esp+0x4c]
  45ca98:	mov    DWORD PTR [esp+0x20],eax
  45ca9c:	mov    DWORD PTR [esp+0x24],edx
  45caa0:	mov    eax,DWORD PTR [esp]
  45caa3:	mov    edx,DWORD PTR [esp+0x4]
  45caa7:	shrd   eax,edx,0xe
  45caab:	shr    edx,0xe
  45caae:	push   edx
  45caaf:	push   eax
  45cab0:	mov    edx,DWORD PTR [esp+0x8]
  45cab4:	shl    edx,0x12
  45cab7:	xor    eax,eax
  45cab9:	or     eax,DWORD PTR [esp]
  45cabc:	or     edx,DWORD PTR [esp+0x4]
  45cac0:	add    esp,0x8
  45cac3:	push   edx
  45cac4:	push   eax
  45cac5:	mov    eax,DWORD PTR [esp+0x8]
  45cac9:	mov    edx,DWORD PTR [esp+0xc]
  45cacd:	shrd   eax,edx,0x12
  45cad1:	shr    edx,0x12
  45cad4:	push   edx
  45cad5:	push   eax
  45cad6:	mov    edx,DWORD PTR [esp+0x10]
  45cada:	shl    edx,0xe
  45cadd:	xor    eax,eax
  45cadf:	or     eax,DWORD PTR [esp]
  45cae2:	or     edx,DWORD PTR [esp+0x4]
  45cae6:	add    esp,0x8
  45cae9:	xor    eax,DWORD PTR [esp]
  45caec:	xor    edx,DWORD PTR [esp+0x4]
  45caf0:	add    esp,0x8
  45caf3:	push   edx
  45caf4:	push   eax
  45caf5:	mov    eax,DWORD PTR [esp+0xc]
  45caf9:	shr    eax,0x9
  45cafc:	xor    edx,edx
  45cafe:	push   edx
  45caff:	push   eax
  45cb00:	mov    eax,DWORD PTR [esp+0x10]
  45cb04:	mov    edx,DWORD PTR [esp+0x14]
  45cb08:	shld   edx,eax,0x17
  45cb0c:	shl    eax,0x17
  45cb0f:	or     eax,DWORD PTR [esp]
  45cb12:	or     edx,DWORD PTR [esp+0x4]
  45cb16:	add    esp,0x8
  45cb19:	xor    eax,DWORD PTR [esp]
  45cb1c:	xor    edx,DWORD PTR [esp+0x4]
  45cb20:	add    esp,0x8
  45cb23:	add    eax,DWORD PTR [esp+0x18]
  45cb27:	adc    edx,DWORD PTR [esp+0x1c]
  45cb2b:	push   edx
  45cb2c:	push   eax
  45cb2d:	mov    eax,DWORD PTR [esp+0x8]
  45cb31:	mov    edx,DWORD PTR [esp+0xc]
  45cb35:	and    eax,DWORD PTR [esp+0x10]
  45cb39:	and    edx,DWORD PTR [esp+0x14]
  45cb3d:	push   edx
  45cb3e:	push   eax
  45cb3f:	mov    eax,DWORD PTR [esp+0x10]
  45cb43:	mov    edx,DWORD PTR [esp+0x14]
  45cb47:	not    eax
  45cb49:	not    edx
  45cb4b:	and    eax,DWORD PTR [esp+0x20]
  45cb4f:	and    edx,DWORD PTR [esp+0x24]
  45cb53:	xor    eax,DWORD PTR [esp]
  45cb56:	xor    edx,DWORD PTR [esp+0x4]
  45cb5a:	add    esp,0x8
  45cb5d:	add    eax,DWORD PTR [esp]
  45cb60:	adc    edx,DWORD PTR [esp+0x4]
  45cb64:	add    esp,0x8
  45cb67:	add    eax,0xcb3e42b6
  45cb6c:	adc    edx,0x4cc5d4be
  45cb72:	add    eax,DWORD PTR [esp+0x2b0]
  45cb79:	adc    edx,DWORD PTR [esp+0x2b4]
  45cb80:	mov    DWORD PTR [esp+0x40],eax
  45cb84:	mov    DWORD PTR [esp+0x44],edx
  45cb88:	mov    eax,DWORD PTR [esp+0x20]
  45cb8c:	mov    edx,DWORD PTR [esp+0x24]
  45cb90:	shrd   eax,edx,0x1c
  45cb94:	shr    edx,0x1c
  45cb97:	push   edx
  45cb98:	push   eax
  45cb99:	mov    edx,DWORD PTR [esp+0x28]
  45cb9d:	shl    edx,0x4
  45cba0:	xor    eax,eax
  45cba2:	or     eax,DWORD PTR [esp]
  45cba5:	or     edx,DWORD PTR [esp+0x4]
  45cba9:	add    esp,0x8
  45cbac:	push   edx
  45cbad:	push   eax
  45cbae:	mov    eax,DWORD PTR [esp+0x2c]
  45cbb2:	shr    eax,0x2
  45cbb5:	xor    edx,edx
  45cbb7:	push   edx
  45cbb8:	push   eax
  45cbb9:	mov    eax,DWORD PTR [esp+0x30]
  45cbbd:	mov    edx,DWORD PTR [esp+0x34]
  45cbc1:	shld   edx,eax,0x1e
  45cbc5:	shl    eax,0x1e
  45cbc8:	or     eax,DWORD PTR [esp]
  45cbcb:	or     edx,DWORD PTR [esp+0x4]
  45cbcf:	add    esp,0x8
  45cbd2:	xor    eax,DWORD PTR [esp]
  45cbd5:	xor    edx,DWORD PTR [esp+0x4]
  45cbd9:	add    esp,0x8
  45cbdc:	push   edx
  45cbdd:	push   eax
  45cbde:	mov    eax,DWORD PTR [esp+0x2c]
  45cbe2:	shr    eax,0x7
  45cbe5:	xor    edx,edx
  45cbe7:	push   edx
  45cbe8:	push   eax
  45cbe9:	mov    eax,DWORD PTR [esp+0x30]
  45cbed:	mov    edx,DWORD PTR [esp+0x34]
  45cbf1:	shld   edx,eax,0x19
  45cbf5:	shl    eax,0x19
  45cbf8:	or     eax,DWORD PTR [esp]
  45cbfb:	or     edx,DWORD PTR [esp+0x4]
  45cbff:	add    esp,0x8
  45cc02:	xor    eax,DWORD PTR [esp]
  45cc05:	xor    edx,DWORD PTR [esp+0x4]
  45cc09:	add    esp,0x8
  45cc0c:	push   edx
  45cc0d:	push   eax
  45cc0e:	mov    eax,DWORD PTR [esp+0x28]
  45cc12:	mov    edx,DWORD PTR [esp+0x2c]
  45cc16:	and    eax,DWORD PTR [esp+0x30]
  45cc1a:	and    edx,DWORD PTR [esp+0x34]
  45cc1e:	push   edx
  45cc1f:	push   eax
  45cc20:	mov    eax,DWORD PTR [esp+0x30]
  45cc24:	mov    edx,DWORD PTR [esp+0x34]
  45cc28:	and    eax,DWORD PTR [esp+0x40]
  45cc2c:	and    edx,DWORD PTR [esp+0x44]
  45cc30:	xor    eax,DWORD PTR [esp]
  45cc33:	xor    edx,DWORD PTR [esp+0x4]
  45cc37:	add    esp,0x8
  45cc3a:	push   edx
  45cc3b:	push   eax
  45cc3c:	mov    eax,DWORD PTR [esp+0x38]
  45cc40:	mov    edx,DWORD PTR [esp+0x3c]
  45cc44:	and    eax,DWORD PTR [esp+0x40]
  45cc48:	and    edx,DWORD PTR [esp+0x44]
  45cc4c:	xor    eax,DWORD PTR [esp]
  45cc4f:	xor    edx,DWORD PTR [esp+0x4]
  45cc53:	add    esp,0x8
  45cc56:	add    eax,DWORD PTR [esp]
  45cc59:	adc    edx,DWORD PTR [esp+0x4]
  45cc5d:	add    esp,0x8
  45cc60:	mov    DWORD PTR [esp+0x48],eax
  45cc64:	mov    DWORD PTR [esp+0x4c],edx
  45cc68:	mov    eax,DWORD PTR [esp+0x38]
  45cc6c:	mov    edx,DWORD PTR [esp+0x3c]
  45cc70:	add    eax,DWORD PTR [esp+0x40]
  45cc74:	adc    edx,DWORD PTR [esp+0x44]
  45cc78:	mov    DWORD PTR [esp+0x38],eax
  45cc7c:	mov    DWORD PTR [esp+0x3c],edx
  45cc80:	mov    eax,DWORD PTR [esp+0x40]
  45cc84:	mov    edx,DWORD PTR [esp+0x44]
  45cc88:	add    eax,DWORD PTR [esp+0x48]
  45cc8c:	adc    edx,DWORD PTR [esp+0x4c]
  45cc90:	mov    DWORD PTR [esp+0x18],eax
  45cc94:	mov    DWORD PTR [esp+0x1c],edx
  45cc98:	mov    eax,DWORD PTR [esp+0x38]
  45cc9c:	mov    edx,DWORD PTR [esp+0x3c]
  45cca0:	shrd   eax,edx,0xe
  45cca4:	shr    edx,0xe
  45cca7:	push   edx
  45cca8:	push   eax
  45cca9:	mov    edx,DWORD PTR [esp+0x40]
  45ccad:	shl    edx,0x12
  45ccb0:	xor    eax,eax
  45ccb2:	or     eax,DWORD PTR [esp]
  45ccb5:	or     edx,DWORD PTR [esp+0x4]
  45ccb9:	add    esp,0x8
  45ccbc:	push   edx
  45ccbd:	push   eax
  45ccbe:	mov    eax,DWORD PTR [esp+0x40]
  45ccc2:	mov    edx,DWORD PTR [esp+0x44]
  45ccc6:	shrd   eax,edx,0x12
  45ccca:	shr    edx,0x12
  45cccd:	push   edx
  45ccce:	push   eax
  45cccf:	mov    edx,DWORD PTR [esp+0x48]
  45ccd3:	shl    edx,0xe
  45ccd6:	xor    eax,eax
  45ccd8:	or     eax,DWORD PTR [esp]
  45ccdb:	or     edx,DWORD PTR [esp+0x4]
  45ccdf:	add    esp,0x8
  45cce2:	xor    eax,DWORD PTR [esp]
  45cce5:	xor    edx,DWORD PTR [esp+0x4]
  45cce9:	add    esp,0x8
  45ccec:	push   edx
  45cced:	push   eax
  45ccee:	mov    eax,DWORD PTR [esp+0x44]
  45ccf2:	shr    eax,0x9
  45ccf5:	xor    edx,edx
  45ccf7:	push   edx
  45ccf8:	push   eax
  45ccf9:	mov    eax,DWORD PTR [esp+0x48]
  45ccfd:	mov    edx,DWORD PTR [esp+0x4c]
  45cd01:	shld   edx,eax,0x17
  45cd05:	shl    eax,0x17
  45cd08:	or     eax,DWORD PTR [esp]
  45cd0b:	or     edx,DWORD PTR [esp+0x4]
  45cd0f:	add    esp,0x8
  45cd12:	xor    eax,DWORD PTR [esp]
  45cd15:	xor    edx,DWORD PTR [esp+0x4]
  45cd19:	add    esp,0x8
  45cd1c:	add    eax,DWORD PTR [esp+0x10]
  45cd20:	adc    edx,DWORD PTR [esp+0x14]
  45cd24:	push   edx
  45cd25:	push   eax
  45cd26:	mov    eax,DWORD PTR [esp+0x40]
  45cd2a:	mov    edx,DWORD PTR [esp+0x44]
  45cd2e:	and    eax,DWORD PTR [esp+0x8]
  45cd32:	and    edx,DWORD PTR [esp+0xc]
  45cd36:	push   edx
  45cd37:	push   eax
  45cd38:	mov    eax,DWORD PTR [esp+0x48]
  45cd3c:	mov    edx,DWORD PTR [esp+0x4c]
  45cd40:	not    eax
  45cd42:	not    edx
  45cd44:	and    eax,DWORD PTR [esp+0x18]
  45cd48:	and    edx,DWORD PTR [esp+0x1c]
  45cd4c:	xor    eax,DWORD PTR [esp]
  45cd4f:	xor    edx,DWORD PTR [esp+0x4]
  45cd53:	add    esp,0x8
  45cd56:	add    eax,DWORD PTR [esp]
  45cd59:	adc    edx,DWORD PTR [esp+0x4]
  45cd5d:	add    esp,0x8
  45cd60:	add    eax,0xfc657e2a
  45cd65:	adc    edx,0x597f299c
  45cd6b:	add    eax,DWORD PTR [esp+0x2b8]
  45cd72:	adc    edx,DWORD PTR [esp+0x2bc]
  45cd79:	mov    DWORD PTR [esp+0x40],eax
  45cd7d:	mov    DWORD PTR [esp+0x44],edx
  45cd81:	mov    eax,DWORD PTR [esp+0x18]
  45cd85:	mov    edx,DWORD PTR [esp+0x1c]
  45cd89:	shrd   eax,edx,0x1c
  45cd8d:	shr    edx,0x1c
  45cd90:	push   edx
  45cd91:	push   eax
  45cd92:	mov    edx,DWORD PTR [esp+0x20]
  45cd96:	shl    edx,0x4
  45cd99:	xor    eax,eax
  45cd9b:	or     eax,DWORD PTR [esp]
  45cd9e:	or     edx,DWORD PTR [esp+0x4]
  45cda2:	add    esp,0x8
  45cda5:	push   edx
  45cda6:	push   eax
  45cda7:	mov    eax,DWORD PTR [esp+0x24]
  45cdab:	shr    eax,0x2
  45cdae:	xor    edx,edx
  45cdb0:	push   edx
  45cdb1:	push   eax
  45cdb2:	mov    eax,DWORD PTR [esp+0x28]
  45cdb6:	mov    edx,DWORD PTR [esp+0x2c]
  45cdba:	shld   edx,eax,0x1e
  45cdbe:	shl    eax,0x1e
  45cdc1:	or     eax,DWORD PTR [esp]
  45cdc4:	or     edx,DWORD PTR [esp+0x4]
  45cdc8:	add    esp,0x8
  45cdcb:	xor    eax,DWORD PTR [esp]
  45cdce:	xor    edx,DWORD PTR [esp+0x4]
  45cdd2:	add    esp,0x8
  45cdd5:	push   edx
  45cdd6:	push   eax
  45cdd7:	mov    eax,DWORD PTR [esp+0x24]
  45cddb:	shr    eax,0x7
  45cdde:	xor    edx,edx
  45cde0:	push   edx
  45cde1:	push   eax
  45cde2:	mov    eax,DWORD PTR [esp+0x28]
  45cde6:	mov    edx,DWORD PTR [esp+0x2c]
  45cdea:	shld   edx,eax,0x19
  45cdee:	shl    eax,0x19
  45cdf1:	or     eax,DWORD PTR [esp]
  45cdf4:	or     edx,DWORD PTR [esp+0x4]
  45cdf8:	add    esp,0x8
  45cdfb:	xor    eax,DWORD PTR [esp]
  45cdfe:	xor    edx,DWORD PTR [esp+0x4]
  45ce02:	add    esp,0x8
  45ce05:	push   edx
  45ce06:	push   eax
  45ce07:	mov    eax,DWORD PTR [esp+0x20]
  45ce0b:	mov    edx,DWORD PTR [esp+0x24]
  45ce0f:	and    eax,DWORD PTR [esp+0x28]
  45ce13:	and    edx,DWORD PTR [esp+0x2c]
  45ce17:	push   edx
  45ce18:	push   eax
  45ce19:	mov    eax,DWORD PTR [esp+0x28]
  45ce1d:	mov    edx,DWORD PTR [esp+0x2c]
  45ce21:	and    eax,DWORD PTR [esp+0x38]
  45ce25:	and    edx,DWORD PTR [esp+0x3c]
  45ce29:	xor    eax,DWORD PTR [esp]
  45ce2c:	xor    edx,DWORD PTR [esp+0x4]
  45ce30:	add    esp,0x8
  45ce33:	push   edx
  45ce34:	push   eax
  45ce35:	mov    eax,DWORD PTR [esp+0x30]
  45ce39:	mov    edx,DWORD PTR [esp+0x34]
  45ce3d:	and    eax,DWORD PTR [esp+0x38]
  45ce41:	and    edx,DWORD PTR [esp+0x3c]
  45ce45:	xor    eax,DWORD PTR [esp]
  45ce48:	xor    edx,DWORD PTR [esp+0x4]
  45ce4c:	add    esp,0x8
  45ce4f:	add    eax,DWORD PTR [esp]
  45ce52:	adc    edx,DWORD PTR [esp+0x4]
  45ce56:	add    esp,0x8
  45ce59:	mov    DWORD PTR [esp+0x48],eax
  45ce5d:	mov    DWORD PTR [esp+0x4c],edx
  45ce61:	mov    eax,DWORD PTR [esp+0x30]
  45ce65:	mov    edx,DWORD PTR [esp+0x34]
  45ce69:	add    eax,DWORD PTR [esp+0x40]
  45ce6d:	adc    edx,DWORD PTR [esp+0x44]
  45ce71:	mov    DWORD PTR [esp+0x30],eax
  45ce75:	mov    DWORD PTR [esp+0x34],edx
  45ce79:	mov    eax,DWORD PTR [esp+0x40]
  45ce7d:	mov    edx,DWORD PTR [esp+0x44]
  45ce81:	add    eax,DWORD PTR [esp+0x48]
  45ce85:	adc    edx,DWORD PTR [esp+0x4c]
  45ce89:	mov    DWORD PTR [esp+0x10],eax
  45ce8d:	mov    DWORD PTR [esp+0x14],edx
  45ce91:	mov    eax,DWORD PTR [esp+0x30]
  45ce95:	mov    edx,DWORD PTR [esp+0x34]
  45ce99:	shrd   eax,edx,0xe
  45ce9d:	shr    edx,0xe
  45cea0:	push   edx
  45cea1:	push   eax
  45cea2:	mov    edx,DWORD PTR [esp+0x38]
  45cea6:	shl    edx,0x12
  45cea9:	xor    eax,eax
  45ceab:	or     eax,DWORD PTR [esp]
  45ceae:	or     edx,DWORD PTR [esp+0x4]
  45ceb2:	add    esp,0x8
  45ceb5:	push   edx
  45ceb6:	push   eax
  45ceb7:	mov    eax,DWORD PTR [esp+0x38]
  45cebb:	mov    edx,DWORD PTR [esp+0x3c]
  45cebf:	shrd   eax,edx,0x12
  45cec3:	shr    edx,0x12
  45cec6:	push   edx
  45cec7:	push   eax
  45cec8:	mov    edx,DWORD PTR [esp+0x40]
  45cecc:	shl    edx,0xe
  45cecf:	xor    eax,eax
  45ced1:	or     eax,DWORD PTR [esp]
  45ced4:	or     edx,DWORD PTR [esp+0x4]
  45ced8:	add    esp,0x8
  45cedb:	xor    eax,DWORD PTR [esp]
  45cede:	xor    edx,DWORD PTR [esp+0x4]
  45cee2:	add    esp,0x8
  45cee5:	push   edx
  45cee6:	push   eax
  45cee7:	mov    eax,DWORD PTR [esp+0x3c]
  45ceeb:	shr    eax,0x9
  45ceee:	xor    edx,edx
  45cef0:	push   edx
  45cef1:	push   eax
  45cef2:	mov    eax,DWORD PTR [esp+0x40]
  45cef6:	mov    edx,DWORD PTR [esp+0x44]
  45cefa:	shld   edx,eax,0x17
  45cefe:	shl    eax,0x17
  45cf01:	or     eax,DWORD PTR [esp]
  45cf04:	or     edx,DWORD PTR [esp+0x4]
  45cf08:	add    esp,0x8
  45cf0b:	xor    eax,DWORD PTR [esp]
  45cf0e:	xor    edx,DWORD PTR [esp+0x4]
  45cf12:	add    esp,0x8
  45cf15:	add    eax,DWORD PTR [esp+0x8]
  45cf19:	adc    edx,DWORD PTR [esp+0xc]
  45cf1d:	push   edx
  45cf1e:	push   eax
  45cf1f:	mov    eax,DWORD PTR [esp+0x38]
  45cf23:	mov    edx,DWORD PTR [esp+0x3c]
  45cf27:	and    eax,DWORD PTR [esp+0x40]
  45cf2b:	and    edx,DWORD PTR [esp+0x44]
  45cf2f:	push   edx
  45cf30:	push   eax
  45cf31:	mov    eax,DWORD PTR [esp+0x40]
  45cf35:	mov    edx,DWORD PTR [esp+0x44]
  45cf39:	not    eax
  45cf3b:	not    edx
  45cf3d:	and    eax,DWORD PTR [esp+0x10]
  45cf41:	and    edx,DWORD PTR [esp+0x14]
  45cf45:	xor    eax,DWORD PTR [esp]
  45cf48:	xor    edx,DWORD PTR [esp+0x4]
  45cf4c:	add    esp,0x8
  45cf4f:	add    eax,DWORD PTR [esp]
  45cf52:	adc    edx,DWORD PTR [esp+0x4]
  45cf56:	add    esp,0x8
  45cf59:	add    eax,0x3ad6faec
  45cf5e:	adc    edx,0x5fcb6fab
  45cf64:	add    eax,DWORD PTR [esp+0x2c0]
  45cf6b:	adc    edx,DWORD PTR [esp+0x2c4]
  45cf72:	mov    DWORD PTR [esp+0x40],eax
  45cf76:	mov    DWORD PTR [esp+0x44],edx
  45cf7a:	mov    eax,DWORD PTR [esp+0x10]
  45cf7e:	mov    edx,DWORD PTR [esp+0x14]
  45cf82:	shrd   eax,edx,0x1c
  45cf86:	shr    edx,0x1c
  45cf89:	push   edx
  45cf8a:	push   eax
  45cf8b:	mov    edx,DWORD PTR [esp+0x18]
  45cf8f:	shl    edx,0x4
  45cf92:	xor    eax,eax
  45cf94:	or     eax,DWORD PTR [esp]
  45cf97:	or     edx,DWORD PTR [esp+0x4]
  45cf9b:	add    esp,0x8
  45cf9e:	push   edx
  45cf9f:	push   eax
  45cfa0:	mov    eax,DWORD PTR [esp+0x1c]
  45cfa4:	shr    eax,0x2
  45cfa7:	xor    edx,edx
  45cfa9:	push   edx
  45cfaa:	push   eax
  45cfab:	mov    eax,DWORD PTR [esp+0x20]
  45cfaf:	mov    edx,DWORD PTR [esp+0x24]
  45cfb3:	shld   edx,eax,0x1e
  45cfb7:	shl    eax,0x1e
  45cfba:	or     eax,DWORD PTR [esp]
  45cfbd:	or     edx,DWORD PTR [esp+0x4]
  45cfc1:	add    esp,0x8
  45cfc4:	xor    eax,DWORD PTR [esp]
  45cfc7:	xor    edx,DWORD PTR [esp+0x4]
  45cfcb:	add    esp,0x8
  45cfce:	push   edx
  45cfcf:	push   eax
  45cfd0:	mov    eax,DWORD PTR [esp+0x1c]
  45cfd4:	shr    eax,0x7
  45cfd7:	xor    edx,edx
  45cfd9:	push   edx
  45cfda:	push   eax
  45cfdb:	mov    eax,DWORD PTR [esp+0x20]
  45cfdf:	mov    edx,DWORD PTR [esp+0x24]
  45cfe3:	shld   edx,eax,0x19
  45cfe7:	shl    eax,0x19
  45cfea:	or     eax,DWORD PTR [esp]
  45cfed:	or     edx,DWORD PTR [esp+0x4]
  45cff1:	add    esp,0x8
  45cff4:	xor    eax,DWORD PTR [esp]
  45cff7:	xor    edx,DWORD PTR [esp+0x4]
  45cffb:	add    esp,0x8
  45cffe:	push   edx
  45cfff:	push   eax
  45d000:	mov    eax,DWORD PTR [esp+0x18]
  45d004:	mov    edx,DWORD PTR [esp+0x1c]
  45d008:	and    eax,DWORD PTR [esp+0x20]
  45d00c:	and    edx,DWORD PTR [esp+0x24]
  45d010:	push   edx
  45d011:	push   eax
  45d012:	mov    eax,DWORD PTR [esp+0x20]
  45d016:	mov    edx,DWORD PTR [esp+0x24]
  45d01a:	and    eax,DWORD PTR [esp+0x30]
  45d01e:	and    edx,DWORD PTR [esp+0x34]
  45d022:	xor    eax,DWORD PTR [esp]
  45d025:	xor    edx,DWORD PTR [esp+0x4]
  45d029:	add    esp,0x8
  45d02c:	push   edx
  45d02d:	push   eax
  45d02e:	mov    eax,DWORD PTR [esp+0x28]
  45d032:	mov    edx,DWORD PTR [esp+0x2c]
  45d036:	and    eax,DWORD PTR [esp+0x30]
  45d03a:	and    edx,DWORD PTR [esp+0x34]
  45d03e:	xor    eax,DWORD PTR [esp]
  45d041:	xor    edx,DWORD PTR [esp+0x4]
  45d045:	add    esp,0x8
  45d048:	add    eax,DWORD PTR [esp]
  45d04b:	adc    edx,DWORD PTR [esp+0x4]
  45d04f:	add    esp,0x8
  45d052:	mov    DWORD PTR [esp+0x48],eax
  45d056:	mov    DWORD PTR [esp+0x4c],edx
  45d05a:	mov    eax,DWORD PTR [esp+0x28]
  45d05e:	mov    edx,DWORD PTR [esp+0x2c]
  45d062:	add    eax,DWORD PTR [esp+0x40]
  45d066:	adc    edx,DWORD PTR [esp+0x44]
  45d06a:	mov    DWORD PTR [esp+0x28],eax
  45d06e:	mov    DWORD PTR [esp+0x2c],edx
  45d072:	mov    eax,DWORD PTR [esp+0x40]
  45d076:	mov    edx,DWORD PTR [esp+0x44]
  45d07a:	add    eax,DWORD PTR [esp+0x48]
  45d07e:	adc    edx,DWORD PTR [esp+0x4c]
  45d082:	mov    DWORD PTR [esp+0x8],eax
  45d086:	mov    DWORD PTR [esp+0xc],edx
  45d08a:	mov    eax,DWORD PTR [esp+0x28]
  45d08e:	mov    edx,DWORD PTR [esp+0x2c]
  45d092:	shrd   eax,edx,0xe
  45d096:	shr    edx,0xe
  45d099:	push   edx
  45d09a:	push   eax
  45d09b:	mov    edx,DWORD PTR [esp+0x30]
  45d09f:	shl    edx,0x12
  45d0a2:	xor    eax,eax
  45d0a4:	or     eax,DWORD PTR [esp]
  45d0a7:	or     edx,DWORD PTR [esp+0x4]
  45d0ab:	add    esp,0x8
  45d0ae:	push   edx
  45d0af:	push   eax
  45d0b0:	mov    eax,DWORD PTR [esp+0x30]
  45d0b4:	mov    edx,DWORD PTR [esp+0x34]
  45d0b8:	shrd   eax,edx,0x12
  45d0bc:	shr    edx,0x12
  45d0bf:	push   edx
  45d0c0:	push   eax
  45d0c1:	mov    edx,DWORD PTR [esp+0x38]
  45d0c5:	shl    edx,0xe
  45d0c8:	xor    eax,eax
  45d0ca:	or     eax,DWORD PTR [esp]
  45d0cd:	or     edx,DWORD PTR [esp+0x4]
  45d0d1:	add    esp,0x8
  45d0d4:	xor    eax,DWORD PTR [esp]
  45d0d7:	xor    edx,DWORD PTR [esp+0x4]
  45d0db:	add    esp,0x8
  45d0de:	push   edx
  45d0df:	push   eax
  45d0e0:	mov    eax,DWORD PTR [esp+0x34]
  45d0e4:	shr    eax,0x9
  45d0e7:	xor    edx,edx
  45d0e9:	push   edx
  45d0ea:	push   eax
  45d0eb:	mov    eax,DWORD PTR [esp+0x38]
  45d0ef:	mov    edx,DWORD PTR [esp+0x3c]
  45d0f3:	shld   edx,eax,0x17
  45d0f7:	shl    eax,0x17
  45d0fa:	or     eax,DWORD PTR [esp]
  45d0fd:	or     edx,DWORD PTR [esp+0x4]
  45d101:	add    esp,0x8
  45d104:	xor    eax,DWORD PTR [esp]
  45d107:	xor    edx,DWORD PTR [esp+0x4]
  45d10b:	add    esp,0x8
  45d10e:	add    eax,DWORD PTR [esp]
  45d111:	adc    edx,DWORD PTR [esp+0x4]
  45d115:	push   edx
  45d116:	push   eax
  45d117:	mov    eax,DWORD PTR [esp+0x30]
  45d11b:	mov    edx,DWORD PTR [esp+0x34]
  45d11f:	and    eax,DWORD PTR [esp+0x38]
  45d123:	and    edx,DWORD PTR [esp+0x3c]
  45d127:	push   edx
  45d128:	push   eax
  45d129:	mov    eax,DWORD PTR [esp+0x38]
  45d12d:	mov    edx,DWORD PTR [esp+0x3c]
  45d131:	not    eax
  45d133:	not    edx
  45d135:	and    eax,DWORD PTR [esp+0x48]
  45d139:	and    edx,DWORD PTR [esp+0x4c]
  45d13d:	xor    eax,DWORD PTR [esp]
  45d140:	xor    edx,DWORD PTR [esp+0x4]
  45d144:	add    esp,0x8
  45d147:	add    eax,DWORD PTR [esp]
  45d14a:	adc    edx,DWORD PTR [esp+0x4]
  45d14e:	add    esp,0x8
  45d151:	add    eax,0x4a475817
  45d156:	adc    edx,0x6c44198c
  45d15c:	add    eax,DWORD PTR [esp+0x2c8]
  45d163:	adc    edx,DWORD PTR [esp+0x2cc]
  45d16a:	mov    DWORD PTR [esp+0x40],eax
  45d16e:	mov    DWORD PTR [esp+0x44],edx
  45d172:	mov    eax,DWORD PTR [esp+0x8]
  45d176:	mov    edx,DWORD PTR [esp+0xc]
  45d17a:	shrd   eax,edx,0x1c
  45d17e:	shr    edx,0x1c
  45d181:	push   edx
  45d182:	push   eax
  45d183:	mov    edx,DWORD PTR [esp+0x10]
  45d187:	shl    edx,0x4
  45d18a:	xor    eax,eax
  45d18c:	or     eax,DWORD PTR [esp]
  45d18f:	or     edx,DWORD PTR [esp+0x4]
  45d193:	add    esp,0x8
  45d196:	push   edx
  45d197:	push   eax
  45d198:	mov    eax,DWORD PTR [esp+0x14]
  45d19c:	shr    eax,0x2
  45d19f:	xor    edx,edx
  45d1a1:	push   edx
  45d1a2:	push   eax
  45d1a3:	mov    eax,DWORD PTR [esp+0x18]
  45d1a7:	mov    edx,DWORD PTR [esp+0x1c]
  45d1ab:	shld   edx,eax,0x1e
  45d1af:	shl    eax,0x1e
  45d1b2:	or     eax,DWORD PTR [esp]
  45d1b5:	or     edx,DWORD PTR [esp+0x4]
  45d1b9:	add    esp,0x8
  45d1bc:	xor    eax,DWORD PTR [esp]
  45d1bf:	xor    edx,DWORD PTR [esp+0x4]
  45d1c3:	add    esp,0x8
  45d1c6:	push   edx
  45d1c7:	push   eax
  45d1c8:	mov    eax,DWORD PTR [esp+0x14]
  45d1cc:	shr    eax,0x7
  45d1cf:	xor    edx,edx
  45d1d1:	push   edx
  45d1d2:	push   eax
  45d1d3:	mov    eax,DWORD PTR [esp+0x18]
  45d1d7:	mov    edx,DWORD PTR [esp+0x1c]
  45d1db:	shld   edx,eax,0x19
  45d1df:	shl    eax,0x19
  45d1e2:	or     eax,DWORD PTR [esp]
  45d1e5:	or     edx,DWORD PTR [esp+0x4]
  45d1e9:	add    esp,0x8
  45d1ec:	xor    eax,DWORD PTR [esp]
  45d1ef:	xor    edx,DWORD PTR [esp+0x4]
  45d1f3:	add    esp,0x8
  45d1f6:	push   edx
  45d1f7:	push   eax
  45d1f8:	mov    eax,DWORD PTR [esp+0x10]
  45d1fc:	mov    edx,DWORD PTR [esp+0x14]
  45d200:	and    eax,DWORD PTR [esp+0x18]
  45d204:	and    edx,DWORD PTR [esp+0x1c]
  45d208:	push   edx
  45d209:	push   eax
  45d20a:	mov    eax,DWORD PTR [esp+0x18]
  45d20e:	mov    edx,DWORD PTR [esp+0x1c]
  45d212:	and    eax,DWORD PTR [esp+0x28]
  45d216:	and    edx,DWORD PTR [esp+0x2c]
  45d21a:	xor    eax,DWORD PTR [esp]
  45d21d:	xor    edx,DWORD PTR [esp+0x4]
  45d221:	add    esp,0x8
  45d224:	push   edx
  45d225:	push   eax
  45d226:	mov    eax,DWORD PTR [esp+0x20]
  45d22a:	mov    edx,DWORD PTR [esp+0x24]
  45d22e:	and    eax,DWORD PTR [esp+0x28]
  45d232:	and    edx,DWORD PTR [esp+0x2c]
  45d236:	xor    eax,DWORD PTR [esp]
  45d239:	xor    edx,DWORD PTR [esp+0x4]
  45d23d:	add    esp,0x8
  45d240:	add    eax,DWORD PTR [esp]
  45d243:	adc    edx,DWORD PTR [esp+0x4]
  45d247:	add    esp,0x8
  45d24a:	mov    DWORD PTR [esp+0x48],eax
  45d24e:	mov    DWORD PTR [esp+0x4c],edx
  45d252:	mov    eax,DWORD PTR [esp+0x20]
  45d256:	mov    edx,DWORD PTR [esp+0x24]
  45d25a:	add    eax,DWORD PTR [esp+0x40]
  45d25e:	adc    edx,DWORD PTR [esp+0x44]
  45d262:	mov    DWORD PTR [esp+0x20],eax
  45d266:	mov    DWORD PTR [esp+0x24],edx
  45d26a:	mov    eax,DWORD PTR [esp+0x40]
  45d26e:	mov    edx,DWORD PTR [esp+0x44]
  45d272:	add    eax,DWORD PTR [esp+0x48]
  45d276:	adc    edx,DWORD PTR [esp+0x4c]
  45d27a:	mov    DWORD PTR [esp],eax
  45d27d:	mov    DWORD PTR [esp+0x4],edx
  45d281:	mov    eax,DWORD PTR [esi+0x50]
  45d284:	mov    edx,DWORD PTR [esi+0x54]
  45d287:	add    eax,DWORD PTR [esp]
  45d28a:	adc    edx,DWORD PTR [esp+0x4]
  45d28e:	mov    DWORD PTR [esi+0x50],eax
  45d291:	mov    DWORD PTR [esi+0x54],edx
  45d294:	mov    eax,DWORD PTR [esi+0x58]
  45d297:	mov    edx,DWORD PTR [esi+0x5c]
  45d29a:	add    eax,DWORD PTR [esp+0x8]
  45d29e:	adc    edx,DWORD PTR [esp+0xc]
  45d2a2:	mov    DWORD PTR [esi+0x58],eax
  45d2a5:	mov    DWORD PTR [esi+0x5c],edx
  45d2a8:	mov    eax,DWORD PTR [esi+0x60]
  45d2ab:	mov    edx,DWORD PTR [esi+0x64]
  45d2ae:	add    eax,DWORD PTR [esp+0x10]
  45d2b2:	adc    edx,DWORD PTR [esp+0x14]
  45d2b6:	mov    DWORD PTR [esi+0x60],eax
  45d2b9:	mov    DWORD PTR [esi+0x64],edx
  45d2bc:	mov    eax,DWORD PTR [esi+0x68]
  45d2bf:	mov    edx,DWORD PTR [esi+0x6c]
  45d2c2:	add    eax,DWORD PTR [esp+0x18]
  45d2c6:	adc    edx,DWORD PTR [esp+0x1c]
  45d2ca:	mov    DWORD PTR [esi+0x68],eax
  45d2cd:	mov    DWORD PTR [esi+0x6c],edx
  45d2d0:	mov    eax,DWORD PTR [esi+0x70]
  45d2d3:	mov    edx,DWORD PTR [esi+0x74]
  45d2d6:	add    eax,DWORD PTR [esp+0x20]
  45d2da:	adc    edx,DWORD PTR [esp+0x24]
  45d2de:	mov    DWORD PTR [esi+0x70],eax
  45d2e1:	mov    DWORD PTR [esi+0x74],edx
  45d2e4:	mov    eax,DWORD PTR [esi+0x78]
  45d2e7:	mov    edx,DWORD PTR [esi+0x7c]
  45d2ea:	add    eax,DWORD PTR [esp+0x28]
  45d2ee:	adc    edx,DWORD PTR [esp+0x2c]
  45d2f2:	mov    DWORD PTR [esi+0x78],eax
  45d2f5:	mov    DWORD PTR [esi+0x7c],edx
  45d2f8:	mov    eax,DWORD PTR [esi+0x80]
  45d2fe:	mov    edx,DWORD PTR [esi+0x84]
  45d304:	add    eax,DWORD PTR [esp+0x30]
  45d308:	adc    edx,DWORD PTR [esp+0x34]
  45d30c:	mov    DWORD PTR [esi+0x80],eax
  45d312:	mov    DWORD PTR [esi+0x84],edx
  45d318:	mov    eax,DWORD PTR [esi+0x88]
  45d31e:	mov    edx,DWORD PTR [esi+0x8c]
  45d324:	add    eax,DWORD PTR [esp+0x38]
  45d328:	adc    edx,DWORD PTR [esp+0x3c]
  45d32c:	mov    DWORD PTR [esi+0x88],eax
  45d332:	mov    DWORD PTR [esi+0x8c],edx
  45d338:	lea    eax,[esp+0x50]
  45d33c:	xor    ecx,ecx
  45d33e:	mov    edx,0x280
  45d343:	call   0x4037c8
  45d348:	lea    eax,[esi+0x90]
  45d34e:	xor    ecx,ecx
  45d350:	mov    edx,0x80
  45d355:	call   0x4037c8
  45d35a:	add    esp,0x2d0
  45d360:	pop    edi
  45d361:	pop    esi
  45d362:	pop    ebx
  45d363:	ret    
  45d364:	push   ebx
  45d365:	mov    ebx,eax
  45d367:	mov    DWORD PTR [ebx+0x38],0x0
  45d36e:	mov    DWORD PTR [ebx+0x3c],0x0
  45d375:	mov    DWORD PTR [ebx+0x40],0x0
  45d37c:	mov    DWORD PTR [ebx+0x44],0x0
  45d383:	xor    eax,eax
  45d385:	mov    DWORD PTR [ebx+0x48],eax
  45d388:	lea    eax,[ebx+0x90]
  45d38e:	xor    ecx,ecx
  45d390:	mov    edx,0x80
  45d395:	call   0x4037c8
  45d39a:	lea    eax,[ebx+0x50]
  45d39d:	xor    ecx,ecx
  45d39f:	mov    edx,0x40
  45d3a4:	call   0x4037c8
  45d3a9:	mov    BYTE PTR [ebx+0x30],0x0
  45d3ad:	pop    ebx
  45d3ae:	ret    
  45d3af:	nop
  45d3b0:	push   ebx
  45d3b1:	push   esi
  45d3b2:	push   edi
  45d3b3:	push   ebp
  45d3b4:	mov    esi,ecx
  45d3b6:	mov    edi,edx
  45d3b8:	mov    ebx,eax
  45d3ba:	cmp    BYTE PTR [ebx+0x30],0x0
  45d3be:	jne    0x45d3d6
  45d3c0:	mov    ecx,0x45d470
  45d3c5:	mov    dl,0x1
  45d3c7:	mov    eax,ds:0x44177c
  45d3cc:	call   0x40c8b4
  45d3d1:	call   0x4048fc
  45d3d6:	mov    ecx,esi
  45d3d8:	add    ecx,ecx
  45d3da:	add    ecx,ecx
  45d3dc:	add    ecx,ecx
  45d3de:	mov    eax,ecx
  45d3e0:	xor    edx,edx
  45d3e2:	add    DWORD PTR [ebx+0x40],eax
  45d3e5:	adc    DWORD PTR [ebx+0x44],edx
  45d3e8:	mov    eax,ecx
  45d3ea:	xor    edx,edx
  45d3ec:	cmp    edx,DWORD PTR [ebx+0x44]
  45d3ef:	jne    0x45d3f8
  45d3f1:	cmp    eax,DWORD PTR [ebx+0x40]
  45d3f4:	jbe    0x45d402
  45d3f6:	jmp    0x45d3fa
  45d3f8:	jle    0x45d402
  45d3fa:	add    DWORD PTR [ebx+0x38],0x1
  45d3fe:	adc    DWORD PTR [ebx+0x3c],0x0
  45d402:	test   esi,esi
  45d404:	jbe    0x45d460
  45d406:	mov    eax,0x80
  45d40b:	mov    ebp,DWORD PTR [ebx+0x48]
  45d40e:	sub    eax,ebp
  45d410:	cmp    esi,eax
  45d412:	jb     0x45d447
  45d414:	mov    ecx,0x80
  45d419:	sub    ecx,DWORD PTR [ebx+0x48]
  45d41c:	lea    edx,[ebx+ebp*1+0x90]
  45d423:	mov    eax,edi
  45d425:	call   0x403090
  45d42a:	mov    eax,0x80
  45d42f:	sub    eax,DWORD PTR [ebx+0x48]
  45d432:	sub    esi,eax
  45d434:	mov    eax,0x80
  45d439:	sub    eax,DWORD PTR [ebx+0x48]
  45d43c:	add    edi,eax
  45d43e:	mov    eax,ebx
  45d440:	call   0x453354
  45d445:	jmp    0x45d45c
  45d447:	lea    edx,[ebx+ebp*1+0x90]
  45d44e:	mov    eax,edi
  45d450:	mov    ecx,esi
  45d452:	call   0x403090
  45d457:	add    DWORD PTR [ebx+0x48],esi
  45d45a:	xor    esi,esi
  45d45c:	test   esi,esi
  45d45e:	ja     0x45d406
  45d460:	pop    ebp
  45d461:	pop    edi
  45d462:	pop    esi
  45d463:	pop    ebx
  45d464:	ret    
  45d465:	add    BYTE PTR [eax],al
  45d467:	add    bh,bh
  45d469:	(bad)  
  45d46a:	(bad)  
  45d46b:	call   DWORD PTR [eax+eax*1]
  45d46e:	add    BYTE PTR [eax],al
  45d470:	dec    eax
  45d471:	popa   
  45d472:	jae    0x45d4dc
  45d474:	and    BYTE PTR [esi+0x6f],ch
  45d477:	je     0x45d499
  45d479:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  45d480:	imul   edi,DWORD PTR [edx+0x65],0x64
  45d487:	add    BYTE PTR [ebx-0x75],dl
  45d48a:	fimul  DWORD PTR [ebx-0x2b5b453d]
  45d490:	inc    ebp
  45d491:	add    al,ch
  45d493:	inc    ebp
  45d494:	jnp    0x45d490
  45d496:	call   FWORD PTR [ebx-0x3d]
  45d499:	add    BYTE PTR [eax],al
  45d49b:	add    bh,bh
  45d49d:	(bad)  
  45d49e:	(bad)  
  45d49f:	inc    DWORD PTR [esi]
  45d4a1:	add    BYTE PTR [eax],al
  45d4a3:	add    BYTE PTR [ebx+0x48],dl
  45d4a6:	inc    ecx
  45d4a7:	xor    eax,0x3231
  45d4ac:	mov    eax,0x1e
  45d4b1:	ret    
  45d4b2:	mov    eax,eax
  45d4b4:	mov    eax,0x200
  45d4b9:	ret    
  45d4ba:	mov    eax,eax
  45d4bc:	push   ebx
  45d4bd:	push   esi
  45d4be:	add    esp,0xffffffc0
  45d4c1:	xor    ecx,ecx
  45d4c3:	mov    dl,0x1
  45d4c5:	mov    eax,ds:0x453170
  45d4ca:	call   0x41a1e0
  45d4cf:	mov    esi,eax
  45d4d1:	mov    eax,esi
  45d4d3:	mov    edx,DWORD PTR [eax]
  45d4d5:	call   DWORD PTR [edx+0x40]
  45d4d8:	mov    edx,0x45d548
  45d4dd:	mov    eax,esi
  45d4df:	call   0x441d40
  45d4e4:	mov    edx,esp
  45d4e6:	mov    eax,esi
  45d4e8:	mov    ecx,DWORD PTR [eax]
  45d4ea:	call   DWORD PTR [ecx+0x44]
  45d4ed:	mov    edx,0x46d770
  45d4f2:	mov    eax,esp
  45d4f4:	mov    ecx,0x40
  45d4f9:	call   0x408538
  45d4fe:	mov    ebx,eax
  45d500:	mov    eax,esi
  45d502:	mov    edx,DWORD PTR [eax]
  45d504:	call   DWORD PTR [edx+0x40]
  45d507:	mov    edx,0x45d554
  45d50c:	mov    eax,esi
  45d50e:	call   0x441d40
  45d513:	mov    edx,esp
  45d515:	mov    eax,esi
  45d517:	mov    ecx,DWORD PTR [eax]
  45d519:	call   DWORD PTR [ecx+0x44]
  45d51c:	mov    edx,0x46d7b0
  45d521:	mov    eax,esp
  45d523:	mov    ecx,0x40
  45d528:	call   0x408538
  45d52d:	and    bl,al
  45d52f:	mov    eax,esi
  45d531:	call   0x4040a0
  45d536:	mov    eax,ebx
  45d538:	add    esp,0x40
  45d53b:	pop    esi
  45d53c:	pop    ebx
  45d53d:	ret    
  45d53e:	add    BYTE PTR [eax],al
  45d540:	(bad)  
  45d541:	(bad)  
  45d542:	(bad)  
  45d543:	inc    DWORD PTR [ebx]
  45d545:	add    BYTE PTR [eax],al
  45d547:	add    BYTE PTR [ecx+0x62],ah
  45d54a:	arpl   WORD PTR [eax],ax
  45d54c:	(bad)  
  45d54d:	(bad)  
  45d54e:	(bad)  
  45d54f:	push   DWORD PTR [eax+0x0]
  45d552:	add    BYTE PTR [eax],al
  45d554:	popa   
  45d555:	bound  esp,QWORD PTR [ebx+0x64]
  45d558:	gs addr16 pushw 0x6362
  45d55e:	fs gs addr16 pushw 0x6369
  45d565:	fs gs addr16 pushw 0x6a69
  45d56c:	fs gs addr16 pushw 0x6a69
  45d573:	imul   esp,DWORD PTR [ebp+0x66],0x67
  45d577:	push   0x6c6b6a69
  45d57c:	addr16 pushw 0x6a69
  45d581:	imul   ebp,DWORD PTR [ebp+ebp*2+0x67],0x68
  45d586:	imul   ebp,DWORD PTR [edx+0x6b],0x686e6d6c
  45d58d:	imul   ebp,DWORD PTR [edx+0x6b],0x6f6e6d6c
  45d594:	imul   ebp,DWORD PTR [edx+0x6b],0x6f6e6d6c
  45d59b:	jo     0x45d607
  45d59d:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  45d5a2:	jo     0x45d615
  45d5a4:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  45d5a9:	jo     0x45d61c
  45d5ab:	jb     0x45d619
  45d5ad:	ins    DWORD PTR es:[edi],dx
  45d5ae:	outs   dx,BYTE PTR ds:[esi]
  45d5af:	outs   dx,DWORD PTR ds:[esi]
  45d5b0:	jo     0x45d623
  45d5b2:	jb     0x45d627
  45d5b4:	ins    DWORD PTR es:[edi],dx
  45d5b5:	outs   dx,BYTE PTR ds:[esi]
  45d5b6:	outs   dx,DWORD PTR ds:[esi]
  45d5b7:	jo     0x45d62a
  45d5b9:	jb     0x45d62e
  45d5bb:	je     0x45d62b
  45d5bd:	outs   dx,DWORD PTR ds:[esi]
  45d5be:	jo     0x45d631
  45d5c0:	jb     0x45d635
  45d5c2:	je     0x45d639
  45d5c4:	add    BYTE PTR [eax],al
  45d5c6:	add    BYTE PTR [eax],al
  45d5c8:	push   ebx
  45d5c9:	mov    ebx,eax
  45d5cb:	mov    eax,ebx
  45d5cd:	mov    edx,DWORD PTR [eax]
  45d5cf:	call   DWORD PTR [edx+0x48]
  45d5d2:	mov    DWORD PTR [ebx+0x50],0xf3bcc908
  45d5d9:	mov    DWORD PTR [ebx+0x54],0x6a09e667
  45d5e0:	mov    DWORD PTR [ebx+0x58],0x84caa73b
  45d5e7:	mov    DWORD PTR [ebx+0x5c],0xbb67ae85
  45d5ee:	mov    DWORD PTR [ebx+0x60],0xfe94f82b
  45d5f5:	mov    DWORD PTR [ebx+0x64],0x3c6ef372
  45d5fc:	mov    DWORD PTR [ebx+0x68],0x5f1d36f1
  45d603:	mov    DWORD PTR [ebx+0x6c],0xa54ff53a
  45d60a:	mov    DWORD PTR [ebx+0x70],0xade682d1
  45d611:	mov    DWORD PTR [ebx+0x74],0x510e527f
  45d618:	mov    DWORD PTR [ebx+0x78],0x2b3e6c1f
  45d61f:	mov    DWORD PTR [ebx+0x7c],0x9b05688c
  45d626:	mov    DWORD PTR [ebx+0x80],0xfb41bd6b
  45d630:	mov    DWORD PTR [ebx+0x84],0x1f83d9ab
  45d63a:	mov    DWORD PTR [ebx+0x88],0x137e2179
  45d644:	mov    DWORD PTR [ebx+0x8c],0x5be0cd19
  45d64e:	mov    BYTE PTR [ebx+0x30],0x1
  45d652:	pop    ebx
  45d653:	ret    
  45d654:	push   ebx
  45d655:	push   esi
  45d656:	mov    esi,edx
  45d658:	mov    ebx,eax
  45d65a:	cmp    BYTE PTR [ebx+0x30],0x0
  45d65e:	jne    0x45d676
  45d660:	mov    ecx,0x45d784
  45d665:	mov    dl,0x1
  45d667:	mov    eax,ds:0x44177c
  45d66c:	call   0x40c8b4
  45d671:	call   0x4048fc
  45d676:	mov    eax,DWORD PTR [ebx+0x48]
  45d679:	mov    BYTE PTR [ebx+eax*1+0x90],0x80
  45d681:	cmp    DWORD PTR [ebx+0x48],0x70
  45d685:	jb     0x45d68e
  45d687:	mov    eax,ebx
  45d689:	call   0x453354
  45d68e:	push   DWORD PTR [ebx+0x3c]
  45d691:	push   DWORD PTR [ebx+0x38]
  45d694:	call   0x453240
  45d699:	lea    ecx,[ebx+0x100]
  45d69f:	mov    DWORD PTR [ecx],eax
  45d6a1:	mov    DWORD PTR [ecx+0x4],edx
  45d6a4:	push   DWORD PTR [ebx+0x44]
  45d6a7:	push   DWORD PTR [ebx+0x40]
  45d6aa:	call   0x453240
  45d6af:	lea    ecx,[ebx+0x108]
  45d6b5:	mov    DWORD PTR [ecx],eax
  45d6b7:	mov    DWORD PTR [ecx+0x4],edx
  45d6ba:	mov    eax,ebx
  45d6bc:	call   0x453354
  45d6c1:	push   DWORD PTR [ebx+0x54]
  45d6c4:	push   DWORD PTR [ebx+0x50]
  45d6c7:	call   0x453240
  45d6cc:	mov    DWORD PTR [ebx+0x50],eax
  45d6cf:	mov    DWORD PTR [ebx+0x54],edx
  45d6d2:	push   DWORD PTR [ebx+0x5c]
  45d6d5:	push   DWORD PTR [ebx+0x58]
  45d6d8:	call   0x453240
  45d6dd:	mov    DWORD PTR [ebx+0x58],eax
  45d6e0:	mov    DWORD PTR [ebx+0x5c],edx
  45d6e3:	push   DWORD PTR [ebx+0x64]
  45d6e6:	push   DWORD PTR [ebx+0x60]
  45d6e9:	call   0x453240
  45d6ee:	mov    DWORD PTR [ebx+0x60],eax
  45d6f1:	mov    DWORD PTR [ebx+0x64],edx
  45d6f4:	push   DWORD PTR [ebx+0x6c]
  45d6f7:	push   DWORD PTR [ebx+0x68]
  45d6fa:	call   0x453240
  45d6ff:	mov    DWORD PTR [ebx+0x68],eax
  45d702:	mov    DWORD PTR [ebx+0x6c],edx
  45d705:	push   DWORD PTR [ebx+0x74]
  45d708:	push   DWORD PTR [ebx+0x70]
  45d70b:	call   0x453240
  45d710:	mov    DWORD PTR [ebx+0x70],eax
  45d713:	mov    DWORD PTR [ebx+0x74],edx
  45d716:	push   DWORD PTR [ebx+0x7c]
  45d719:	push   DWORD PTR [ebx+0x78]
  45d71c:	call   0x453240
  45d721:	mov    DWORD PTR [ebx+0x78],eax
  45d724:	mov    DWORD PTR [ebx+0x7c],edx
  45d727:	push   DWORD PTR [ebx+0x84]
  45d72d:	push   DWORD PTR [ebx+0x80]
  45d733:	call   0x453240
  45d738:	mov    DWORD PTR [ebx+0x80],eax
  45d73e:	mov    DWORD PTR [ebx+0x84],edx
  45d744:	push   DWORD PTR [ebx+0x8c]
  45d74a:	push   DWORD PTR [ebx+0x88]
  45d750:	call   0x453240
  45d755:	mov    DWORD PTR [ebx+0x88],eax
  45d75b:	mov    DWORD PTR [ebx+0x8c],edx
  45d761:	mov    edx,esi
  45d763:	lea    eax,[ebx+0x50]
  45d766:	mov    ecx,0x40
  45d76b:	call   0x403090
  45d770:	mov    eax,ebx
  45d772:	mov    edx,DWORD PTR [eax]
  45d774:	call   DWORD PTR [edx+0x48]
  45d777:	pop    esi
  45d778:	pop    ebx
  45d779:	ret    
  45d77a:	add    BYTE PTR [eax],al
  45d77c:	(bad)  
  45d77d:	(bad)  
  45d77e:	(bad)  
  45d77f:	call   DWORD PTR [eax+eax*1]
  45d782:	add    BYTE PTR [eax],al
  45d784:	dec    eax
  45d785:	popa   
  45d786:	jae    0x45d7f0
  45d788:	and    BYTE PTR [esi+0x6f],ch
  45d78b:	je     0x45d7ad
  45d78d:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  45d794:	imul   edi,DWORD PTR [edx+0x65],0x64
  45d79b:	add    bh,bh
  45d79d:	and    eax,0x4795c4
  45d7a2:	mov    eax,eax
  45d7a4:	push   ebp
  45d7a5:	mov    ebp,esp
  45d7a7:	add    esp,0xfffffff8
  45d7aa:	push   ebx
  45d7ab:	mov    ebx,ecx
  45d7ad:	mov    DWORD PTR [ebp-0x8],edx
  45d7b0:	mov    DWORD PTR [ebp-0x4],eax
  45d7b3:	mov    eax,DWORD PTR [ebp-0x4]
  45d7b6:	call   0x405408
  45d7bb:	mov    eax,DWORD PTR [ebp-0x8]
  45d7be:	call   0x405408
  45d7c3:	xor    eax,eax
  45d7c5:	push   ebp
  45d7c6:	push   0x45d82e
  45d7cb:	push   DWORD PTR fs:[eax]
  45d7ce:	mov    DWORD PTR fs:[eax],esp
  45d7d1:	push   0x45d844
  45d7d6:	push   DWORD PTR [ebp-0x4]
  45d7d9:	push   0x45da10
  45d7de:	push   0x45da54
  45d7e3:	push   0x45da6c
  45d7e8:	push   0x45dacc
  45d7ed:	push   DWORD PTR [ebp-0x8]
  45d7f0:	push   0x45dafc
  45d7f5:	push   0x45db14
  45d7fa:	push   0x45db84
  45d7ff:	push   0x45dbe4
  45d804:	push   DWORD PTR [ebp-0x4]
  45d807:	mov    eax,ebx
  45d809:	mov    edx,0xc
  45d80e:	call   0x40531c
  45d813:	xor    eax,eax
  45d815:	pop    edx
  45d816:	pop    ecx
  45d817:	pop    ecx
  45d818:	mov    DWORD PTR fs:[eax],edx
  45d81b:	push   0x45d835
  45d820:	lea    eax,[ebp-0x8]
  45d823:	mov    edx,0x2
  45d828:	call   0x404fac
  45d82d:	ret    
  45d82e:	jmp    0x40481c
  45d833:	jmp    0x45d820
  45d835:	pop    ebx
  45d836:	pop    ecx
  45d837:	pop    ecx
  45d838:	pop    ebp
  45d839:	ret    
  45d83a:	add    BYTE PTR [eax],al
  45d83c:	(bad)  
  45d83d:	(bad)  
  45d83e:	(bad)  
  45d83f:	inc    eax
  45d841:	add    DWORD PTR [eax],eax
  45d843:	add    dl,al
  45d845:	icebp  
  45d846:	in     eax,0x20
  45d848:	loop   0x45d82a
  45d84a:	clc    
  45d84b:	call   0xeb34bc70
  45d850:	repz in al,dx
  45d852:	in     eax,0xed
  45d854:	repnz sti 
  45d856:	and    cl,ah
  45d858:	sti    
  45d859:	jmp    0x45d843
  45d85b:	and    bh,ah
  45d85d:	loopne 0x45d857
  45d85f:	call   0xe334c958
  45d864:	loopne 0x45d853
  45d866:	sti    
  45d867:	and    dh,ch
  45d869:	in     al,0xed
  45d86b:	call   0xe82df95c
  45d870:	and    dl,ch
  45d872:	lock call 0xf234cb67
  45d878:	repnz out dx,al
  45d87a:	jmp    0x213bc169
  45d87f:	loopne 0x45d86c
  45d881:	jecxz  0x45d871
  45d883:	lock call 0xe334c57b
  45d889:	cs cmp al,0x62
  45d88c:	jb     0x45d8cc
  45d88e:	shl    al,1
  45d890:	icebp  
  45d891:	clc    
  45d892:	call   0xe334c98b
  45d897:	loopne 0x45d88b
  45d899:	cld    
  45d89a:	and    ah,dh
  45d89c:	loopne 0x45d887
  45d89e:	jmp    0x45d89b
  45d8a0:	and    ch,ch
  45d8a2:	in     eax,0x20
  45d8a4:	out    0xed,eax
  45d8a6:	loopne 0x45d8a7
  45d8a8:	and    bl,dh
  45d8aa:	in     eax,dx
  45d8ab:	call   0xfd31b99a
  45d8b0:	in     eax,dx
  45d8b1:	sti    
  45d8b2:	jmp    0x31bcd7
  45d8b7:	and    dl,ah
  45d8b9:	loopne 0x45d8b3
  45d8bb:	in     eax,0xe3
  45d8bd:	out    dx,al
  45d8be:	and    bh,cl
  45d8c0:	retf   0xef20
  45d8c3:	loopne 0x45d8b5
  45d8c5:	out    dx,al
  45d8c6:	jmp    0x45d8c4
  45d8c8:	and    ch,ch
  45d8ca:	in     eax,0xe2
  45d8cc:	out    dx,al
  45d8cd:	out    0xec,eax
  45d8cf:	out    dx,al
  45d8d0:	out    0xed,al
  45d8d2:	out    dx,al
  45d8d3:	and    DWORD PTR [edx+eiz*2],edi
  45d8d6:	jb     0x45d916
  45d8d8:	int    0xe5
  45d8da:	and    ah,ch
  45d8dc:	in     eax,0xed
  45d8de:	(bad)  
  45d8df:	jmp    0xed66bed6
  45d8e4:	loopne 0x45d8cd
  45d8e6:	loop   0x45d8c8
  45d8e8:	in     eax,dx
  45d8e9:	call   0xf16605d3
  45d8ee:	repnz lock repz jmp 0xf420:0xf3f0f3f2
  45d8f8:	loopne 0x45d8e3
  45d8fa:	jmp    0x45d8ea
  45d8fc:	loop   0x45d91e
  45d8fe:	call   0x212bc623
  45d903:	out    dx,eax
  45d904:	lock out dx,al
  45d906:	loope  0x45d8fb
  45d908:	jmp    0xf066beff
  45d90d:	loopne 0x45d900
  45d90f:	clc    
  45d910:	call   0xe334ca09
  45d915:	sti    
  45d916:	loop   0x45d8f8
  45d918:	repnz cld 
  45d91a:	and    ah,dh
  45d91c:	loopne 0x45d907
  45d91e:	jmp    0x45d91b
  45d920:	and    al,dh
  45d922:	loopne 0x45d90b
  45d924:	jmp    0x45d90e
  45d926:	imul   ebp
  45d928:	sti    
  45d929:	in     al,dx
  45d92a:	call   0xf92bbd4f
  45d92f:	call   0xf326ca28
  45d934:	out    dx,al
  45d935:	lock loopne 0x45d924
  45d938:	call   0xec41bb5d
  45d93d:	out    dx,al
  45d93e:	out    0xe5,al
  45d940:	in     eax,dx
  45d941:	sti    
  45d942:	in     al,dx
  45d943:	call   0xe866bb68
  45d948:	in     eax,dx
  45d949:	repnz in eax,0xf0
  45d94c:	in     eax,dx
  45d94d:	in     eax,0xf2
  45d94f:	in     eax,0x2c
  45d951:	and    ch,bh
  45d953:	bnd call 0xea2bbd79
  45d959:	icebp  
  45d95a:	repnz loop 0x45d945
  45d95d:	jmp    DWORD PTR [eax]
  45d95f:	in     al,dx
  45d960:	out    dx,al
  45d961:	jecxz  0x45d956
  45d963:	repnz and bh,ch
  45d966:	lock call 0xf337bf4e
  45d96c:	call   0xed66c391
  45d971:	in     eax,0xe2
  45d973:	out    dx,al
  45d974:	out    0xec,eax
  45d976:	out    dx,al
  45d977:	out    0xed,al
  45d979:	out    dx,al
  45d97a:	icebp  
  45d97b:	bnd call 0xf234bba1
  45d981:	icebp  
  45d982:	repnz loopne 0x45d972
  45d985:	out    dx,al
  45d986:	loop   0x45d973
  45d988:	in     eax,0xed
  45d98a:	call   0xe127fa8e
  45d98f:	clc    
  45d990:	call   0xe139fa8a
  45d995:	jmp    0x2f28c885
  45d99a:	cmp    al,0x62
  45d99c:	jb     0x45d9dc
  45d99e:	cmp    al,0x62
  45d9a0:	jb     0x45d9e0
  45d9a2:	vpor   xmm5,xmm1,xmm0
  45d9a6:	and    dl,ah
  45d9a8:	loopne 0x45d996
  45d9aa:	and    ch,ch
  45d9ac:	repz out 0xed,al
  45d9af:	out    dx,al
  45d9b0:	and    bl,dh
  45d9b2:	loope  0x45d999
  45d9b4:	in     al,0xe8
  45d9b6:	repnz icebp 
  45d9b8:	jmp    DWORD PTR [eax]
  45d9ba:	loop   0x45d9dc
  45d9bc:	loop   0x45d9ac
  45d9be:	out    0xec,eax
  45d9c0:	out    dx,al
  45d9c1:	out    0xed,al
  45d9c3:	out    dx,al
  45d9c4:	icebp  
  45d9c5:	bnd call 0xf226c9eb
  45d9cb:	clc    
  45d9cc:	call   0xe334cac5
  45d9d1:	jmp    0xe8f8:0xe0e220e8
  45d9d8:	cmc    
  45d9d9:	and    ah,dh
  45d9db:	loopne 0x45d9c6
  45d9dd:	jmp    0x45d9cd
  45d9df:	loop   0x45da0d
  45d9e1:	and    dl,al
  45d9e3:	sti    
  45d9e4:	and    ah,ch
  45d9e6:	out    dx,al
  45d9e7:	out    0xe5,al
  45d9e9:	repnz in eax,0x20
  45d9ec:	out    dx,al
  45d9ed:	repnz out dx,eax
  45d9ef:	lock loop 0x45d9da
  45d9f2:	repnz cld 
  45d9f4:	and    ch,ch
  45d9f6:	loopne 0x45d9e4
  45d9f8:	and    ch,ch
  45d9fa:	loopne 0x45da1c
  45d9fc:	gs ins DWORD PTR es:[edi],dx
  45d9fe:	popa   
  45d9ff:	imul   ebp,DWORD PTR [eax+eiz*1+0x2d],0x20
  45da07:	add    bh,bh
  45da09:	(bad)  
  45da0a:	(bad)  
  45da0b:	(bad)  
  45da0c:	cmp    eax,DWORD PTR [eax]
  45da0e:	add    BYTE PTR [eax],al
  45da10:	and    dh,ch
  45da12:	in     al,0xe8
  45da14:	in     eax,dx
  45da15:	and    bl,ch
  45da17:	(bad)  
  45da18:	loope  0x45da08
  45da1a:	jmp    0xea26ce3f
  45da1f:	jmp    0x45da41
  45da21:	call   0x2141c646
  45da26:	loop   0x45da0d
  45da28:	lock in eax,dx
  45da2a:	in     eax,0xec
  45da2c:	and    ch,ah
  45da2e:	jecxz  0x45da1e
  45da30:	and    dh,ch
  45da32:	lock call 0xe133c31b
  45da38:	jmp    0x45da36
  45da3a:	in     eax,dx
  45da3b:	repz (bad) 
  45da3d:	and    dl,ah
  45da3f:	in     eax,0xf0
  45da41:	icebp  
  45da42:	call   0x20660945
  45da47:	cmp    al,0x62
  45da49:	jb     0x45da89
  45da4b:	add    bh,bh
  45da4d:	(bad)  
  45da4e:	(bad)  
  45da4f:	dec    DWORD PTR [eax+eax*1]
  45da52:	add    BYTE PTR [eax],al
  45da54:	cmp    al,0x62
  45da56:	jb     0x45da96
  45da58:	cmp    al,0x62
  45da5a:	jb     0x45da9a
  45da5c:	cmp    al,0x62
  45da5e:	jb     0x45da9e
  45da60:	add    BYTE PTR [eax],al
  45da62:	add    BYTE PTR [eax],al
  45da64:	(bad)  
  45da65:	(bad)  
  45da66:	(bad)  
  45da67:	call   DWORD PTR [esi+0x0]
  45da6a:	add    BYTE PTR [eax],al
  45da6c:	shl    edx,1
  45da6e:	out    dx,al
  45da6f:	call   0xf337c960
  45da74:	cld    
  45da75:	and    ah,ah
  45da77:	in     eax,0xf8
  45da79:	call   0xf326cb72
  45da7e:	out    dx,al
  45da7f:	lock loopne 0x45daa2
  45da82:	in     al,0xeb
  45da84:	jmp    DWORD PTR [eax]
  45da86:	lock loopne 0x45da7a
  45da89:	clc    
  45da8a:	call   0xe334cb83
  45da8f:	jmp    0xe8f8:0xe0e220e8
  45da96:	cmc    
  45da97:	and    ah,dh
  45da99:	loopne 0x45da84
  45da9b:	jmp    0x45da8b
  45da9d:	loop   0x45dabf
  45da9f:	icebp  
  45daa0:	out    dx,al
  45daa1:	icebp  
  45daa2:	repnz loopne 0x45da87
  45daa5:	jmp    0x45daa6
  45daa7:	in     eax,0xf2
  45daa9:	and    BYTE PTR [edx+eiz*2],bh
  45daac:	xor    BYTE PTR ds:[edx+esi*1],ch
  45dab0:	and    BYTE PTR [edx+0x54],al
  45dab3:	inc    ebx
  45dab4:	and    BYTE PTR [eax],ch
  45dab6:	inc    edx
  45dab7:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x3c296e69
  45dabf:	das    
  45dac0:	bound  edi,QWORD PTR [esi]
  45dac2:	add    BYTE PTR [eax],al
  45dac4:	(bad)  
  45dac5:	(bad)  
  45dac6:	(bad)  
  45dac7:	jmp    DWORD PTR [eax+eax*1]
  45daca:	add    BYTE PTR [eax],al
  45dacc:	ret    0xf8e0
  45dacf:	and    BYTE PTR [edx+0x69],al
  45dad2:	je     0x45db37
  45dad4:	outs   dx,DWORD PTR ds:[esi]
  45dad5:	imul   ebp,DWORD PTR [esi+0x20],0xe5f8eeea
  45dadc:	jmp    0x45dac3
  45dade:	jmp    0xee20:0xffebe420
  45dae5:	out    dx,eax
  45dae6:	jmp    0x45dac8
  45dae8:	repnz sti 
  45daea:	and    BYTE PTR ds:0x3e623c20,ch
  45daf0:	add    BYTE PTR [eax],al
  45daf2:	add    BYTE PTR [eax],al
  45daf4:	(bad)  
  45daf5:	(bad)  
  45daf6:	(bad)  
  45daf7:	dec    DWORD PTR [eax+eax*1]
  45dafa:	add    BYTE PTR [eax],al
  45dafc:	cmp    al,0x2f
  45dafe:	bound  edi,QWORD PTR [esi]
  45db00:	cmp    al,0x62
  45db02:	jb     0x45db42
  45db04:	cmp    al,0x62
  45db06:	jb     0x45db46
  45db08:	add    BYTE PTR [eax],al
  45db0a:	add    BYTE PTR [eax],al
  45db0c:	(bad)  
  45db0d:	(bad)  
  45db0e:	(bad)  
  45db0f:	jmp    DWORD PTR [edi+0x0]
  45db12:	add    BYTE PTR [eax],al
  45db14:	ret    
  45db15:	in     al,0xe5
  45db17:	and    dl,ch
  45db19:	repz out dx,eax
  45db1b:	call   0x6266d812
  45db20:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0xe2206e69
  45db28:	sti    
  45db29:	and    ah,ch
  45db2b:	out    dx,al
  45db2c:	out    0xe5,al
  45db2e:	repnz in eax,0x20
  45db31:	in     eax,dx
  45db32:	loopne 0x45db1d
  45db34:	bnd call 0x2126c85a
  45db3a:	hlt    
  45db3b:	out    dx,al
  45db3c:	lock repz in al,dx
  45db3f:	in     eax,0x20
  45db41:	sub    eax,0x74746820
  45db46:	jo     0x45dbbb
  45db48:	cmp    ch,BYTE PTR [edi]
  45db4a:	das    
  45db4b:	outs   dx,WORD PTR ds:[esi]
  45db4d:	jb     0x45dbc4
  45db4f:	ins    DWORD PTR es:[edi],dx
  45db50:	bound  esi,QWORD PTR cs:[ebx+eiz*2+0x73]
  45db55:	arpl   WORD PTR gs:[esi],bp
  45db58:	arpl   WORD PTR [edi+0x6d],bp
  45db5b:	das    
  45db5c:	imul   ebp,DWORD PTR [esi+0x64],0x702e7865
  45db63:	push   0x662f3f70
  45db68:	outs   dx,DWORD PTR ds:[esi]
  45db69:	jb     0x45dbe0
  45db6b:	ins    DWORD PTR es:[edi],dx
  45db6c:	das    
  45db6d:	xor    esi,DWORD PTR ds:0x6d626f2d
  45db73:	outs   dx,BYTE PTR gs:[esi]
  45db75:	outs   dx,BYTE PTR ds:[esi]
  45db76:	imul   ebp,DWORD PTR [ebx+0x69],0xff00202f
  45db7d:	(bad)  
  45db7e:	(bad)  
  45db7f:	call   DWORD PTR [esi+0x0]
  45db82:	add    BYTE PTR [eax],al
  45db84:	shl    ch,1
  45db86:	jmp    0xf3e4:0xede5ecee
  45db8d:	in     eax,0xec
  45db8f:	and    dl,dh
  45db91:	loopne 0x45db7d
  45db93:	call   0xe233fc7d
  45db98:	in     al,dx
  45db99:	in     eax,0xed
  45db9b:	in     eax,dx
  45db9c:	call   0xea66c48b
  45dba1:	loopne 0x45db8d
  45dba3:	and    BYTE PTR [eax+0x74],ch
  45dba6:	je     0x45dc18
  45dba8:	jae    0x45dbe4
  45dbaa:	das    
  45dbab:	das    
  45dbac:	ja     0x45dc1b
  45dbae:	ins    BYTE PTR es:[di],dx
  45dbb0:	outs   dx,DWORD PTR ds:[esi]
  45dbb1:	bound  esi,QWORD PTR [ebp+0x73]
  45dbb4:	arpl   WORD PTR cs:[edi+0x6d],bp
  45dbb8:	das    
  45dbb9:	and    BYTE PTR [eax+eiz*1],ch
  45dbbc:	push   0x73707474
  45dbc1:	cmp    ch,BYTE PTR [edi]
  45dbc3:	das    
  45dbc4:	outs   dx,DWORD PTR ds:[esi]
  45dbc5:	jb     0x45dc28
  45dbc7:	outs   dx,BYTE PTR ds:[esi]
  45dbc8:	addr16 gs gs js 0x45dc30
  45dbcd:	push   0x65676e61
  45dbd2:	jo     0x45dc46
  45dbd4:	outs   dx,DWORD PTR ds:[esi]
  45dbd5:	arpl   WORD PTR cs:[edi+0x6d],bp
  45dbd9:	das    
  45dbda:	add    BYTE PTR [eax],al
  45dbdc:	(bad)  
  45dbdd:	(bad)  
  45dbde:	(bad)  
  45dbdf:	inc    DWORD PTR [edx-0x2e000000]
  45dbe5:	loopne 0x45dbd1
  45dbe7:	out    0xe5,al
  45dbe9:	and    ch,ah
  45dbeb:	icebp  
  45dbec:	repnz cld 
  45dbee:	and    dl,ah
  45dbf0:	out    dx,al
  45dbf1:	out    0xec,eax
  45dbf3:	out    dx,al
  45dbf4:	out    0xed,al
  45dbf6:	out    dx,al
  45dbf7:	icebp  
  45dbf8:	repnz cld 
  45dbfa:	and    dh,ch
  45dbfc:	out    dx,eax
  45dbfd:	jmp    0x45dbdf
  45dbff:	bnd call 0xed66d8f7
  45dc05:	loopne 0x45dc27
  45dc07:	jno    0x45dc72
  45dc09:	ja     0x45dc74
  45dc0b:	and    dl,ch
  45dc0d:	out    dx,al
  45dc0e:	clc    
  45dc0f:	in     eax,0xeb
  45dc11:	in     eax,0xea
  45dc13:	and    BYTE PTR [ebx],dh
  45dc15:	xor    eax,0xf0203030
  45dc1a:	repz loope 0x45dc08
  45dc1d:	in     eax,0xe9
  45dc1f:	sub    al,0x20
  45dc21:	in     al,0xeb
  45dc23:	jmp    DWORD PTR [eax]
  45dc25:	out    dx,eax
  45dc26:	out    dx,al
  45dc27:	jmp    0x45dc1c
  45dc29:	mul    ebp
  45dc2b:	in     eax,dx
  45dc2c:	call   0xef32fd30
  45dc31:	in     al,dx
  45dc32:	in     eax,0xf0
  45dc34:	loopne 0x45dc56
  45dc36:	jmp    0xeafc:0xebe5f8ee
  45dc3d:	loopne 0x45dc5f
  45dc3f:	in     eax,dx
  45dc40:	in     eax,0xee
  45dc42:	loope  0x45dc39
  45dc44:	out    dx,al
  45dc45:	in     al,0xe8
  45dc47:	in     al,dx
  45dc48:	out    dx,al
  45dc49:	and    cl,dh
  45dc4b:	loop   0x45dc4c
  45dc4d:	out    0xe0,eax
  45dc4f:	repnz cld 
  45dc51:	icebp  
  45dc52:	jmp    DWORD PTR [eax]
  45dc54:	icebp  
  45dc55:	and    ch,ch
  45dc57:	loopne 0x45dc45
  45dc59:	call   0x2134cb7e
  45dc5e:	gs ins DWORD PTR es:[edi],dx
  45dc60:	popa   
  45dc61:	imul   ebp,DWORD PTR [eax+eiz*1+0x2d],0x55000020
  45dc69:	mov    ebp,esp
  45dc6b:	add    esp,0xfffffff0
  45dc6e:	push   ebx
  45dc6f:	push   esi
  45dc70:	push   edi
  45dc71:	xor    ebx,ebx
  45dc73:	mov    DWORD PTR [ebp-0x10],ebx
  45dc76:	mov    DWORD PTR [ebp-0xc],ecx
  45dc79:	mov    DWORD PTR [ebp-0x8],edx
  45dc7c:	mov    DWORD PTR [ebp-0x4],eax
  45dc7f:	xor    eax,eax
  45dc81:	push   ebp
  45dc82:	push   0x45dcfa
  45dc87:	push   DWORD PTR fs:[eax]
  45dc8a:	mov    DWORD PTR fs:[eax],esp
  45dc8d:	mov    eax,DWORD PTR [ebp-0xc]
  45dc90:	call   0x404f88
  45dc95:	mov    esi,0x14ca48d0
  45dc9a:	mov    eax,DWORD PTR [ebp-0x4]
  45dc9d:	mov    edi,DWORD PTR [ebp-0x8]
  45dca0:	add    edi,DWORD PTR [ebp-0x4]
  45dca3:	dec    edi
  45dca4:	sub    edi,eax
  45dca6:	jl     0x45dce4
  45dca8:	inc    edi
  45dca9:	lea    ebx,[eax+0x46d7f0]
  45dcaf:	lea    eax,[ebp-0x10]
  45dcb2:	movzx  edx,BYTE PTR [ebx]
  45dcb5:	mov    ecx,esi
  45dcb7:	shr    ecx,0x8
  45dcba:	xor    dl,cl
  45dcbc:	call   0x405170
  45dcc1:	mov    edx,DWORD PTR [ebp-0x10]
  45dcc4:	mov    eax,DWORD PTR [ebp-0xc]
  45dcc7:	call   0x405254
  45dccc:	mov    eax,DWORD PTR [ebp-0xc]
  45dccf:	movzx  eax,BYTE PTR [ebx]
  45dcd2:	add    esi,eax
  45dcd4:	mov    eax,DWORD PTR [ebp-0x4]
  45dcd7:	add    eax,DWORD PTR [ebp-0x8]
  45dcda:	imul   esi,eax
  45dcdd:	add    esi,DWORD PTR [ebp-0x8]
  45dce0:	inc    ebx
  45dce1:	dec    edi
  45dce2:	jne    0x45dcaf
  45dce4:	xor    eax,eax
  45dce6:	pop    edx
  45dce7:	pop    ecx
  45dce8:	pop    ecx
  45dce9:	mov    DWORD PTR fs:[eax],edx
  45dcec:	push   0x45dd01
  45dcf1:	lea    eax,[ebp-0x10]
  45dcf4:	call   0x404f88
  45dcf9:	ret    
  45dcfa:	jmp    0x40481c
  45dcff:	jmp    0x45dcf1
  45dd01:	pop    edi
  45dd02:	pop    esi
  45dd03:	pop    ebx
  45dd04:	mov    esp,ebp
  45dd06:	pop    ebp
  45dd07:	ret    
  45dd08:	push   ebp
  45dd09:	mov    ebp,esp
  45dd0b:	add    esp,0xffffffec
  45dd0e:	xor    ecx,ecx
  45dd10:	mov    DWORD PTR [ebp-0x14],ecx
  45dd13:	mov    DWORD PTR [ebp-0x8],edx
  45dd16:	mov    DWORD PTR [ebp-0x4],eax
  45dd19:	mov    eax,DWORD PTR [ebp-0x4]
  45dd1c:	call   0x405408
  45dd21:	mov    eax,DWORD PTR [ebp-0x8]
  45dd24:	call   0x405408
  45dd29:	xor    eax,eax
  45dd2b:	push   ebp
  45dd2c:	push   0x45ddcb
  45dd31:	push   DWORD PTR fs:[eax]
  45dd34:	mov    DWORD PTR fs:[eax],esp
  45dd37:	mov    dl,0x1
  45dd39:	mov    eax,ds:0x434830
  45dd3e:	call   0x434930
  45dd43:	mov    DWORD PTR [ebp-0x10],eax
  45dd46:	xor    eax,eax
  45dd48:	push   ebp
  45dd49:	push   0x45dda1
  45dd4e:	push   DWORD PTR fs:[eax]
  45dd51:	mov    DWORD PTR fs:[eax],esp
  45dd54:	mov    edx,0x80000001
  45dd59:	mov    eax,DWORD PTR [ebp-0x10]
  45dd5c:	call   0x4349d0
  45dd61:	lea    ecx,[ebp-0x14]
  45dd64:	mov    edx,0x10
  45dd69:	xor    eax,eax
  45dd6b:	call   0x45dc68
  45dd70:	mov    edx,DWORD PTR [ebp-0x14]
  45dd73:	mov    cl,0x1
  45dd75:	mov    eax,DWORD PTR [ebp-0x10]
  45dd78:	call   0x434a34
  45dd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  45dd80:	mov    edx,DWORD PTR [ebp-0x4]
  45dd83:	mov    eax,DWORD PTR [ebp-0x10]
  45dd86:	call   0x434bd0
  45dd8b:	xor    eax,eax
  45dd8d:	pop    edx
  45dd8e:	pop    ecx
  45dd8f:	pop    ecx
  45dd90:	mov    DWORD PTR fs:[eax],edx
  45dd93:	push   0x45dda8
  45dd98:	mov    eax,DWORD PTR [ebp-0x10]
  45dd9b:	call   0x4040a0
  45dda0:	ret    
  45dda1:	jmp    0x40481c
  45dda6:	jmp    0x45dd98
  45dda8:	xor    eax,eax
  45ddaa:	pop    edx
  45ddab:	pop    ecx
  45ddac:	pop    ecx
  45ddad:	mov    DWORD PTR fs:[eax],edx
  45ddb0:	push   0x45ddd2
  45ddb5:	lea    eax,[ebp-0x14]
  45ddb8:	call   0x404f88
  45ddbd:	lea    eax,[ebp-0x8]
  45ddc0:	mov    edx,0x2
  45ddc5:	call   0x404fac
  45ddca:	ret    
  45ddcb:	jmp    0x40481c
  45ddd0:	jmp    0x45ddb5
  45ddd2:	movzx  eax,BYTE PTR [ebp-0x9]
  45ddd6:	mov    esp,ebp
  45ddd8:	pop    ebp
  45ddd9:	ret    
  45ddda:	mov    eax,eax
  45dddc:	push   ebp
  45dddd:	mov    ebp,esp
  45dddf:	add    esp,0xfffffff4
  45dde2:	push   ebx
  45dde3:	xor    ecx,ecx
  45dde5:	mov    DWORD PTR [ebp-0xc],ecx
  45dde8:	mov    ebx,edx
  45ddea:	mov    DWORD PTR [ebp-0x4],eax
  45dded:	mov    eax,DWORD PTR [ebp-0x4]
  45ddf0:	call   0x405408
  45ddf5:	xor    eax,eax
  45ddf7:	push   ebp
  45ddf8:	push   0x45de91
  45ddfd:	push   DWORD PTR fs:[eax]
  45de00:	mov    DWORD PTR fs:[eax],esp
  45de03:	mov    dl,0x1
  45de05:	mov    eax,ds:0x434830
  45de0a:	call   0x434930
  45de0f:	mov    DWORD PTR [ebp-0x8],eax
  45de12:	xor    eax,eax
  45de14:	push   ebp
  45de15:	push   0x45de6c
  45de1a:	push   DWORD PTR fs:[eax]
  45de1d:	mov    DWORD PTR fs:[eax],esp
  45de20:	mov    edx,0x80000001
  45de25:	mov    eax,DWORD PTR [ebp-0x8]
  45de28:	call   0x4349d0
  45de2d:	lea    ecx,[ebp-0xc]
  45de30:	mov    edx,0x10
  45de35:	xor    eax,eax
  45de37:	call   0x45dc68
  45de3c:	mov    edx,DWORD PTR [ebp-0xc]
  45de3f:	mov    cl,0x1
  45de41:	mov    eax,DWORD PTR [ebp-0x8]
  45de44:	call   0x434a34
  45de49:	mov    ecx,ebx
  45de4b:	mov    edx,DWORD PTR [ebp-0x4]
  45de4e:	mov    eax,DWORD PTR [ebp-0x8]
  45de51:	call   0x434c00
  45de56:	xor    eax,eax
  45de58:	pop    edx
  45de59:	pop    ecx
  45de5a:	pop    ecx
  45de5b:	mov    DWORD PTR fs:[eax],edx
  45de5e:	push   0x45de73
  45de63:	mov    eax,DWORD PTR [ebp-0x8]
  45de66:	call   0x4040a0
  45de6b:	ret    
  45de6c:	jmp    0x40481c
  45de71:	jmp    0x45de63
  45de73:	xor    eax,eax
  45de75:	pop    edx
  45de76:	pop    ecx
  45de77:	pop    ecx
  45de78:	mov    DWORD PTR fs:[eax],edx
  45de7b:	push   0x45de98
  45de80:	lea    eax,[ebp-0xc]
  45de83:	call   0x404f88
  45de88:	lea    eax,[ebp-0x4]
  45de8b:	call   0x404f88
  45de90:	ret    
  45de91:	jmp    0x40481c
  45de96:	jmp    0x45de80
  45de98:	pop    ebx
  45de99:	mov    esp,ebp
  45de9b:	pop    ebp
  45de9c:	ret    
  45de9d:	lea    eax,[eax+0x0]
  45dea0:	push   ebp
  45dea1:	mov    ebp,esp
  45dea3:	add    esp,0xfffffff4
  45dea6:	push   ebx
  45dea7:	push   esi
  45dea8:	push   edi
  45dea9:	mov    DWORD PTR [ebp-0xc],ecx
  45deac:	mov    DWORD PTR [ebp-0x8],edx
  45deaf:	mov    DWORD PTR [ebp-0x4],eax
  45deb2:	mov    edi,DWORD PTR [ebp+0x8]
  45deb5:	mov    eax,DWORD PTR [ebp-0x4]
  45deb8:	call   0x405408
  45debd:	mov    eax,DWORD PTR [ebp-0x8]
  45dec0:	call   0x405408
  45dec5:	mov    eax,DWORD PTR [ebp-0xc]
  45dec8:	call   0x405408
  45decd:	xor    eax,eax
  45decf:	push   ebp
  45ded0:	push   0x45df6f
  45ded5:	push   DWORD PTR fs:[eax]
  45ded8:	mov    DWORD PTR fs:[eax],esp
  45dedb:	mov    eax,edi
  45dedd:	call   0x404f88
  45dee2:	cmp    DWORD PTR [ebp-0x4],0x0
  45dee6:	je     0x45df54
  45dee8:	cmp    DWORD PTR [ebp-0x8],0x0
  45deec:	je     0x45df54
  45deee:	cmp    DWORD PTR [ebp-0xc],0x0
  45def2:	je     0x45df54
  45def4:	mov    edx,DWORD PTR [ebp-0x8]
  45def7:	mov    eax,DWORD PTR [ebp-0x4]
  45defa:	call   0x405564
  45deff:	mov    ebx,eax
  45df01:	test   ebx,ebx
  45df03:	je     0x45df54
  45df05:	mov    eax,DWORD PTR [ebp-0x4]
  45df08:	test   eax,eax
  45df0a:	je     0x45df11
  45df0c:	sub    eax,0x4
  45df0f:	mov    eax,DWORD PTR [eax]
  45df11:	add    ebx,eax
  45df13:	mov    esi,DWORD PTR [ebp-0x8]
  45df16:	test   esi,esi
  45df18:	je     0x45df1f
  45df1a:	sub    esi,0x4
  45df1d:	mov    esi,DWORD PTR [esi]
  45df1f:	lea    eax,[ebp-0x8]
  45df22:	push   eax
  45df23:	mov    ecx,esi
  45df25:	sub    ecx,ebx
  45df27:	inc    ecx
  45df28:	mov    edx,ebx
  45df2a:	mov    eax,DWORD PTR [ebp-0x8]
  45df2d:	call   0x405480
  45df32:	mov    edx,DWORD PTR [ebp-0x8]
  45df35:	mov    eax,DWORD PTR [ebp-0xc]
  45df38:	call   0x405564
  45df3d:	mov    ebx,eax
  45df3f:	test   ebx,ebx
  45df41:	jle    0x45df54
  45df43:	push   edi
  45df44:	mov    ecx,ebx
  45df46:	dec    ecx
  45df47:	mov    edx,0x1
  45df4c:	mov    eax,DWORD PTR [ebp-0x8]
  45df4f:	call   0x405480
  45df54:	xor    eax,eax
  45df56:	pop    edx
  45df57:	pop    ecx
  45df58:	pop    ecx
  45df59:	mov    DWORD PTR fs:[eax],edx
  45df5c:	push   0x45df76
  45df61:	lea    eax,[ebp-0xc]
  45df64:	mov    edx,0x3
  45df69:	call   0x404fac
  45df6e:	ret    
  45df6f:	jmp    0x40481c
  45df74:	jmp    0x45df61
  45df76:	pop    edi
  45df77:	pop    esi
  45df78:	pop    ebx
  45df79:	mov    esp,ebp
  45df7b:	pop    ebp
  45df7c:	ret    0x4
  45df7f:	nop
  45df80:	push   ebp
  45df81:	mov    ebp,esp
  45df83:	add    esp,0xfffffff4
  45df86:	push   ebx
  45df87:	xor    ecx,ecx
  45df89:	mov    DWORD PTR [ebp-0xc],ecx
  45df8c:	mov    DWORD PTR [ebp-0x8],edx
  45df8f:	mov    DWORD PTR [ebp-0x4],eax
  45df92:	mov    eax,DWORD PTR [ebp-0x4]
  45df95:	call   0x405408
  45df9a:	mov    eax,DWORD PTR [ebp-0x8]
  45df9d:	call   0x405408
  45dfa2:	xor    eax,eax
  45dfa4:	push   ebp
  45dfa5:	push   0x45dfe9
  45dfaa:	push   DWORD PTR fs:[eax]
  45dfad:	mov    DWORD PTR fs:[eax],esp
  45dfb0:	xor    ebx,ebx
  45dfb2:	lea    edx,[ebp-0xc]
  45dfb5:	mov    eax,DWORD PTR [ebp-0x4]
  45dfb8:	call   0x408448
  45dfbd:	mov    eax,DWORD PTR [ebp-0xc]
  45dfc0:	mov    edx,DWORD PTR [ebp-0x8]
  45dfc3:	call   0x405564
  45dfc8:	test   eax,eax
  45dfca:	je     0x45dfce
  45dfcc:	mov    bl,0x1
  45dfce:	xor    eax,eax
  45dfd0:	pop    edx
  45dfd1:	pop    ecx
  45dfd2:	pop    ecx
  45dfd3:	mov    DWORD PTR fs:[eax],edx
  45dfd6:	push   0x45dff0
  45dfdb:	lea    eax,[ebp-0xc]
  45dfde:	mov    edx,0x3
  45dfe3:	call   0x404fac
  45dfe8:	ret    
  45dfe9:	jmp    0x40481c
  45dfee:	jmp    0x45dfdb
  45dff0:	mov    eax,ebx
  45dff2:	pop    ebx
  45dff3:	mov    esp,ebp
  45dff5:	pop    ebp
  45dff6:	ret    
  45dff7:	nop
  45dff8:	push   ebp
  45dff9:	mov    ebp,esp
  45dffb:	add    esp,0xfffffe2c
  45e001:	push   ebx
  45e002:	mov    DWORD PTR [ebp-0x8],edx
  45e005:	mov    DWORD PTR [ebp-0x4],eax
  45e008:	mov    eax,DWORD PTR [ebp-0x4]
  45e00b:	call   0x405408
  45e010:	mov    eax,DWORD PTR [ebp-0x8]
  45e013:	call   0x405408
  45e018:	xor    eax,eax
  45e01a:	push   ebp
  45e01b:	push   0x45e0c5
  45e020:	push   DWORD PTR fs:[eax]
  45e023:	mov    DWORD PTR fs:[eax],esp
  45e026:	mov    edx,DWORD PTR [ebp-0x4]
  45e029:	lea    eax,[ebp-0x1d4]
  45e02f:	call   0x40361c
  45e034:	mov    eax,DWORD PTR [ebp-0x4]
  45e037:	call   0x408ecc
  45e03c:	test   al,al
  45e03e:	jne    0x45e060
  45e040:	lea    eax,[ebp-0x1d4]
  45e046:	call   0x4033ac
  45e04b:	call   0x402ffc
  45e050:	lea    eax,[ebp-0x1d4]
  45e056:	call   0x4036e4
  45e05b:	call   0x402ffc
  45e060:	lea    eax,[ebp-0x1d4]
  45e066:	call   0x4033b8
  45e06b:	call   0x402ffc
  45e070:	mov    edx,DWORD PTR [ebp-0x8]
  45e073:	lea    eax,[ebp-0x1d4]
  45e079:	call   0x405738
  45e07e:	call   0x403b18
  45e083:	call   0x402ffc
  45e088:	lea    eax,[ebp-0x1d4]
  45e08e:	call   0x4036cc
  45e093:	call   0x402ffc
  45e098:	lea    eax,[ebp-0x1d4]
  45e09e:	call   0x4036e4
  45e0a3:	call   0x402ffc
  45e0a8:	mov    bl,0x1
  45e0aa:	xor    eax,eax
  45e0ac:	pop    edx
  45e0ad:	pop    ecx
  45e0ae:	pop    ecx
  45e0af:	mov    DWORD PTR fs:[eax],edx
  45e0b2:	push   0x45e0cc
  45e0b7:	lea    eax,[ebp-0x8]
  45e0ba:	mov    edx,0x2
  45e0bf:	call   0x404fac
  45e0c4:	ret    
  45e0c5:	jmp    0x40481c
  45e0ca:	jmp    0x45e0b7
  45e0cc:	mov    eax,ebx
  45e0ce:	pop    ebx
  45e0cf:	mov    esp,ebp
  45e0d1:	pop    ebp
  45e0d2:	ret    
  45e0d3:	nop
  45e0d4:	push   ebp
  45e0d5:	mov    ebp,esp
  45e0d7:	add    esp,0xfffffe74
  45e0dd:	push   ebx
  45e0de:	push   esi
  45e0df:	push   edi
  45e0e0:	xor    ebx,ebx
  45e0e2:	mov    DWORD PTR [ebp-0x188],ebx
  45e0e8:	mov    DWORD PTR [ebp-0x18c],ebx
  45e0ee:	mov    DWORD PTR [ebp-0x180],ebx
  45e0f4:	mov    DWORD PTR [ebp-0x184],ebx
  45e0fa:	mov    DWORD PTR [ebp-0x178],ebx
  45e100:	mov    DWORD PTR [ebp-0x17c],ebx
  45e106:	mov    DWORD PTR [ebp-0x174],ebx
  45e10c:	mov    DWORD PTR [ebp-0xc],ecx
  45e10f:	mov    DWORD PTR [ebp-0x8],edx
  45e112:	mov    DWORD PTR [ebp-0x4],eax
  45e115:	mov    eax,DWORD PTR [ebp-0x4]
  45e118:	call   0x405408
  45e11d:	mov    eax,DWORD PTR [ebp-0x8]
  45e120:	call   0x405408
  45e125:	mov    eax,DWORD PTR [ebp-0xc]
  45e128:	call   0x405408
  45e12d:	lea    eax,[ebp-0x170]
  45e133:	mov    edx,DWORD PTR ds:0x4076d4
  45e139:	call   0x405a40
  45e13e:	xor    eax,eax
  45e140:	push   ebp
  45e141:	push   0x45e316
  45e146:	push   DWORD PTR fs:[eax]
  45e149:	mov    DWORD PTR fs:[eax],esp
  45e14c:	lea    eax,[ebp-0x174]
  45e152:	mov    ecx,0x45e330
  45e157:	mov    edx,DWORD PTR [ebp-0x4]
  45e15a:	call   0x4052a0
  45e15f:	mov    eax,DWORD PTR [ebp-0x174]
  45e165:	lea    ecx,[ebp-0x170]
  45e16b:	mov    edx,0x3f
  45e170:	call   0x408f74
  45e175:	mov    ebx,eax
  45e177:	test   ebx,ebx
  45e179:	jne    0x45e2cf
  45e17f:	mov    eax,DWORD PTR [ebp-0x160]
  45e185:	and    eax,0x10
  45e188:	cmp    eax,0x10
  45e18b:	jne    0x45e1b1
  45e18d:	mov    eax,DWORD PTR [ebp-0x15c]
  45e193:	mov    edx,0x45e33c
  45e198:	call   0x4053b0
  45e19d:	je     0x45e1ed
  45e19f:	mov    eax,DWORD PTR [ebp-0x15c]
  45e1a5:	mov    edx,0x45e348
  45e1aa:	call   0x4053b0
  45e1af:	je     0x45e1ed
  45e1b1:	lea    eax,[ebp-0x178]
  45e1b7:	mov    ecx,DWORD PTR [ebp-0x15c]
  45e1bd:	mov    edx,DWORD PTR [ebp-0x4]
  45e1c0:	call   0x4052a0
  45e1c5:	mov    eax,DWORD PTR [ebp-0x178]
  45e1cb:	push   eax
  45e1cc:	lea    eax,[ebp-0x17c]
  45e1d2:	mov    ecx,0x45e354
  45e1d7:	mov    edx,DWORD PTR [ebp-0x4]
  45e1da:	call   0x4052a0
  45e1df:	mov    edx,DWORD PTR [ebp-0x17c]
  45e1e5:	pop    eax
  45e1e6:	call   0x4053b0
  45e1eb:	jne    0x45e1ff
  45e1ed:	lea    eax,[ebp-0x170]
  45e1f3:	call   0x408fc4
  45e1f8:	mov    ebx,eax
  45e1fa:	jmp    0x45e2c7
  45e1ff:	mov    eax,DWORD PTR [ebp-0x160]
  45e205:	and    eax,0x10
  45e208:	cmp    eax,0x10
  45e20b:	jne    0x45e2ba
  45e211:	xor    eax,eax
  45e213:	push   ebp
  45e214:	push   0x45e26b
  45e219:	push   DWORD PTR fs:[eax]
  45e21c:	mov    DWORD PTR fs:[eax],esp
  45e21f:	lea    ecx,[ebp-0x180]
  45e225:	mov    edx,DWORD PTR [ebp-0xc]
  45e228:	mov    eax,DWORD PTR [ebp-0x8]
  45e22b:	call   0x45d7a4
  45e230:	mov    eax,DWORD PTR [ebp-0x180]
  45e236:	push   eax
  45e237:	push   DWORD PTR [ebp-0x4]
  45e23a:	push   DWORD PTR [ebp-0x15c]
  45e240:	push   0x45e364
  45e245:	lea    eax,[ebp-0x184]
  45e24b:	mov    edx,0x3
  45e250:	call   0x40531c
  45e255:	mov    eax,DWORD PTR [ebp-0x184]
  45e25b:	pop    edx
  45e25c:	call   0x45dff8
  45e261:	xor    eax,eax
  45e263:	pop    edx
  45e264:	pop    ecx
  45e265:	pop    ecx
  45e266:	mov    DWORD PTR fs:[eax],edx
  45e269:	jmp    0x45e275
  45e26b:	jmp    0x404568
  45e270:	call   0x404978
  45e275:	lea    eax,[ebp-0x188]
  45e27b:	push   eax
  45e27c:	push   DWORD PTR [ebp-0x4]
  45e27f:	push   DWORD PTR [ebp-0x15c]
  45e285:	push   0x45e38c
  45e28a:	lea    eax,[ebp-0x18c]
  45e290:	mov    edx,0x3
  45e295:	call   0x40531c
  45e29a:	mov    eax,DWORD PTR [ebp-0x18c]
  45e2a0:	mov    ecx,DWORD PTR [ebp-0xc]
  45e2a3:	mov    edx,DWORD PTR [ebp-0x8]
  45e2a6:	call   0x45e0d4
  45e2ab:	lea    eax,[ebp-0x170]
  45e2b1:	call   0x408fc4
  45e2b6:	mov    ebx,eax
  45e2b8:	jmp    0x45e2c7
  45e2ba:	lea    eax,[ebp-0x170]
  45e2c0:	call   0x408fc4
  45e2c5:	mov    ebx,eax
  45e2c7:	test   ebx,ebx
  45e2c9:	je     0x45e17f
  45e2cf:	lea    eax,[ebp-0x170]
  45e2d5:	call   0x408fe8
  45e2da:	xor    eax,eax
  45e2dc:	pop    edx
  45e2dd:	pop    ecx
  45e2de:	pop    ecx
  45e2df:	mov    DWORD PTR fs:[eax],edx
  45e2e2:	push   0x45e31d
  45e2e7:	lea    eax,[ebp-0x18c]
  45e2ed:	mov    edx,0x7
  45e2f2:	call   0x404fac
  45e2f7:	lea    eax,[ebp-0x170]
  45e2fd:	mov    edx,DWORD PTR ds:0x4076d4
  45e303:	call   0x405b04
  45e308:	lea    eax,[ebp-0xc]
  45e30b:	mov    edx,0x3
  45e310:	call   0x404fac
  45e315:	ret    
  45e316:	jmp    0x40481c
  45e31b:	jmp    0x45e2e7
  45e31d:	pop    edi
  45e31e:	pop    esi
  45e31f:	pop    ebx
  45e320:	mov    esp,ebp
  45e322:	pop    ebp
  45e323:	ret    0x4
  45e326:	add    BYTE PTR [eax],al
  45e328:	(bad)  
  45e329:	(bad)  
  45e32a:	(bad)  
  45e32b:	inc    DWORD PTR [ebx]
  45e32d:	add    BYTE PTR [eax],al
  45e32f:	add    BYTE PTR [edx],ch
  45e331:	sub    al,BYTE PTR cs:[eax]
  45e334:	(bad)  
  45e335:	(bad)  
  45e336:	(bad)  
  45e337:	inc    DWORD PTR [ecx]
  45e339:	add    BYTE PTR [eax],al
  45e33b:	add    BYTE PTR [esi],ch
  45e33d:	add    BYTE PTR [eax],al
  45e33f:	add    bh,bh
  45e341:	(bad)  
  45e342:	(bad)  
  45e343:	inc    DWORD PTR [edx]
  45e345:	add    BYTE PTR [eax],al
  45e347:	add    BYTE PTR [esi],ch
  45e349:	add    BYTE PTR cs:[eax],al
  45e34c:	(bad)  
  45e34d:	(bad)  
  45e34e:	(bad)  
  45e34f:	inc    DWORD PTR [edi]
  45e351:	add    BYTE PTR [eax],al
  45e353:	add    BYTE PTR [edi+0x69],dl
  45e356:	outs   dx,BYTE PTR ds:[esi]
  45e357:	outs   dx,DWORD PTR fs:[esi]
  45e359:	ja     0x45e3ce
  45e35b:	add    bh,bh
  45e35d:	(bad)  
  45e35e:	(bad)  
  45e35f:	call   FWORD PTR [eax+eax*1]
  45e362:	add    BYTE PTR [eax],al
  45e364:	pop    esp
  45e365:	jmp    0xf1e0:0xf02deae0
  45e36c:	clc    
  45e36d:	call   0xe334d466
  45e372:	loopne 0x45e366
  45e374:	cld    
  45e375:	sub    eax,0xebe9e0f4
  45e37a:	sti    
  45e37b:	cs push 0x6c6d74
  45e381:	add    BYTE PTR [eax],al
  45e383:	add    bh,bh
  45e385:	(bad)  
  45e386:	(bad)  
  45e387:	inc    DWORD PTR [ecx]
  45e389:	add    BYTE PTR [eax],al
  45e38b:	add    BYTE PTR [eax+eax*1+0x0],bl
  45e38f:	add    BYTE PTR [ebp-0x75],dl
  45e392:	in     al,dx
  45e393:	add    esp,0xfffffe74
  45e399:	push   ebx
  45e39a:	push   esi
  45e39b:	push   edi
  45e39c:	xor    ebx,ebx
  45e39e:	mov    DWORD PTR [ebp-0x18c],ebx
  45e3a4:	mov    DWORD PTR [ebp-0x188],ebx
  45e3aa:	mov    DWORD PTR [ebp-0x180],ebx
  45e3b0:	mov    DWORD PTR [ebp-0x184],ebx
  45e3b6:	mov    DWORD PTR [ebp-0x178],ebx
  45e3bc:	mov    DWORD PTR [ebp-0x17c],ebx
  45e3c2:	mov    DWORD PTR [ebp-0x174],ebx
  45e3c8:	mov    DWORD PTR [ebp-0x10],ebx
  45e3cb:	mov    DWORD PTR [ebp-0xc],ecx
  45e3ce:	mov    DWORD PTR [ebp-0x8],edx
  45e3d1:	mov    DWORD PTR [ebp-0x4],eax
  45e3d4:	mov    eax,DWORD PTR [ebp-0x4]
  45e3d7:	call   0x405408
  45e3dc:	mov    eax,DWORD PTR [ebp-0x8]
  45e3df:	call   0x405408
  45e3e4:	mov    eax,DWORD PTR [ebp-0xc]
  45e3e7:	call   0x405408
  45e3ec:	lea    eax,[ebp-0x170]
  45e3f2:	mov    edx,DWORD PTR ds:0x4076d4
  45e3f8:	call   0x405a40
  45e3fd:	xor    eax,eax
  45e3ff:	push   ebp
  45e400:	push   0x45e602
  45e405:	push   DWORD PTR fs:[eax]
  45e408:	mov    DWORD PTR fs:[eax],esp
  45e40b:	lea    eax,[ebp-0x174]
  45e411:	mov    ecx,0x45e61c
  45e416:	mov    edx,DWORD PTR [ebp-0x4]
  45e419:	call   0x4052a0
  45e41e:	mov    eax,DWORD PTR [ebp-0x174]
  45e424:	lea    ecx,[ebp-0x170]
  45e42a:	mov    edx,0x3f
  45e42f:	call   0x408f74
  45e434:	mov    ebx,eax
  45e436:	test   ebx,ebx
  45e438:	jne    0x45e5bb
  45e43e:	mov    eax,DWORD PTR [ebp-0x160]
  45e444:	and    eax,0x10
  45e447:	cmp    eax,0x10
  45e44a:	jne    0x45e4be
  45e44c:	mov    eax,DWORD PTR [ebp-0x15c]
  45e452:	mov    edx,0x45e628
  45e457:	call   0x4053b0
  45e45c:	je     0x45e4ac
  45e45e:	mov    eax,DWORD PTR [ebp-0x15c]
  45e464:	mov    edx,0x45e634
  45e469:	call   0x4053b0
  45e46e:	je     0x45e4ac
  45e470:	lea    eax,[ebp-0x178]
  45e476:	mov    ecx,DWORD PTR [ebp-0x15c]
  45e47c:	mov    edx,DWORD PTR [ebp-0x4]
  45e47f:	call   0x4052a0
  45e484:	mov    eax,DWORD PTR [ebp-0x178]
  45e48a:	push   eax
  45e48b:	lea    eax,[ebp-0x17c]
  45e491:	mov    ecx,0x45e640
  45e496:	mov    edx,DWORD PTR [ebp-0x4]
  45e499:	call   0x4052a0
  45e49e:	mov    edx,DWORD PTR [ebp-0x17c]
  45e4a4:	pop    eax
  45e4a5:	call   0x4053b0
  45e4aa:	jne    0x45e4be
  45e4ac:	lea    eax,[ebp-0x170]
  45e4b2:	call   0x408fc4
  45e4b7:	mov    ebx,eax
  45e4b9:	jmp    0x45e5b3
  45e4be:	mov    eax,DWORD PTR [ebp-0x160]
  45e4c4:	and    eax,0x10
  45e4c7:	cmp    eax,0x10
  45e4ca:	jne    0x45e514
  45e4cc:	lea    eax,[ebp-0x180]
  45e4d2:	push   eax
  45e4d3:	push   DWORD PTR [ebp-0x4]
  45e4d6:	push   DWORD PTR [ebp-0x15c]
  45e4dc:	push   0x45e650
  45e4e1:	lea    eax,[ebp-0x184]
  45e4e7:	mov    edx,0x3
  45e4ec:	call   0x40531c
  45e4f1:	mov    eax,DWORD PTR [ebp-0x184]
  45e4f7:	mov    ecx,DWORD PTR [ebp-0xc]
  45e4fa:	mov    edx,DWORD PTR [ebp-0x8]
  45e4fd:	call   0x45e390
  45e502:	lea    eax,[ebp-0x170]
  45e508:	call   0x408fc4
  45e50d:	mov    ebx,eax
  45e50f:	jmp    0x45e5b3
  45e514:	xor    eax,eax
  45e516:	push   ebp
  45e517:	push   0x45e59c
  45e51c:	push   DWORD PTR fs:[eax]
  45e51f:	mov    DWORD PTR fs:[eax],esp
  45e522:	lea    edx,[ebp-0x10]
  45e525:	mov    eax,DWORD PTR [ebp-0x15c]
  45e52b:	call   0x409090
  45e530:	lea    edx,[ebp-0x188]
  45e536:	mov    eax,DWORD PTR [ebp-0x10]
  45e539:	call   0x4083c0
  45e53e:	lea    eax,[ebp-0x188]
  45e544:	mov    edx,0x45e65c
  45e549:	call   0x405254
  45e54e:	mov    eax,DWORD PTR [ebp-0x188]
  45e554:	mov    edx,DWORD PTR [ebp-0x8]
  45e557:	call   0x45df80
  45e55c:	test   al,al
  45e55e:	je     0x45e592
  45e560:	mov    esi,DWORD PTR [ebp-0x10]
  45e563:	test   esi,esi
  45e565:	je     0x45e56c
  45e567:	sub    esi,0x4
  45e56a:	mov    esi,DWORD PTR [esi]
  45e56c:	test   esi,esi
  45e56e:	jle    0x45e592
  45e570:	lea    eax,[ebp-0x18c]
  45e576:	mov    ecx,DWORD PTR [ebp-0x15c]
  45e57c:	mov    edx,DWORD PTR [ebp-0x4]
  45e57f:	call   0x4052a0
  45e584:	mov    edx,DWORD PTR [ebp-0x18c]
  45e58a:	mov    eax,DWORD PTR [ebp-0xc]
  45e58d:	call   0x45dff8
  45e592:	xor    eax,eax
  45e594:	pop    edx
  45e595:	pop    ecx
  45e596:	pop    ecx
  45e597:	mov    DWORD PTR fs:[eax],edx
  45e59a:	jmp    0x45e5a6
  45e59c:	jmp    0x404568
  45e5a1:	call   0x404978
  45e5a6:	lea    eax,[ebp-0x170]
  45e5ac:	call   0x408fc4
  45e5b1:	mov    ebx,eax
  45e5b3:	test   ebx,ebx
  45e5b5:	je     0x45e43e
  45e5bb:	lea    eax,[ebp-0x170]
  45e5c1:	call   0x408fe8
  45e5c6:	xor    eax,eax
  45e5c8:	pop    edx
  45e5c9:	pop    ecx
  45e5ca:	pop    ecx
  45e5cb:	mov    DWORD PTR fs:[eax],edx
  45e5ce:	push   0x45e609
  45e5d3:	lea    eax,[ebp-0x18c]
  45e5d9:	mov    edx,0x7
  45e5de:	call   0x404fac
  45e5e3:	lea    eax,[ebp-0x170]
  45e5e9:	mov    edx,DWORD PTR ds:0x4076d4
  45e5ef:	call   0x405b04
  45e5f4:	lea    eax,[ebp-0x10]
  45e5f7:	mov    edx,0x4
  45e5fc:	call   0x404fac
  45e601:	ret    
  45e602:	jmp    0x40481c
  45e607:	jmp    0x45e5d3
  45e609:	pop    edi
  45e60a:	pop    esi
  45e60b:	pop    ebx
  45e60c:	mov    esp,ebp
  45e60e:	pop    ebp
  45e60f:	ret    0x4
  45e612:	add    BYTE PTR [eax],al
  45e614:	(bad)  
  45e615:	(bad)  
  45e616:	(bad)  
  45e617:	inc    DWORD PTR [ebx]
  45e619:	add    BYTE PTR [eax],al
  45e61b:	add    BYTE PTR [edx],ch
  45e61d:	sub    al,BYTE PTR cs:[eax]
  45e620:	(bad)  
  45e621:	(bad)  
  45e622:	(bad)  
  45e623:	inc    DWORD PTR [ecx]
  45e625:	add    BYTE PTR [eax],al
  45e627:	add    BYTE PTR [esi],ch
  45e629:	add    BYTE PTR [eax],al
  45e62b:	add    bh,bh
  45e62d:	(bad)  
  45e62e:	(bad)  
  45e62f:	inc    DWORD PTR [edx]
  45e631:	add    BYTE PTR [eax],al
  45e633:	add    BYTE PTR [esi],ch
  45e635:	add    BYTE PTR cs:[eax],al
  45e638:	(bad)  
  45e639:	(bad)  
  45e63a:	(bad)  
  45e63b:	inc    DWORD PTR [edi]
  45e63d:	add    BYTE PTR [eax],al
  45e63f:	add    BYTE PTR [edi+0x69],dl
  45e642:	outs   dx,BYTE PTR ds:[esi]
  45e643:	outs   dx,DWORD PTR fs:[esi]
  45e645:	ja     0x45e6ba
  45e647:	add    bh,bh
  45e649:	(bad)  
  45e64a:	(bad)  
  45e64b:	inc    DWORD PTR [ecx]
  45e64d:	add    BYTE PTR [eax],al
  45e64f:	add    BYTE PTR [eax+eax*1+0x0],bl
  45e653:	add    bh,bh
  45e655:	(bad)  
  45e656:	(bad)  
  45e657:	inc    DWORD PTR [ecx]
  45e659:	add    BYTE PTR [eax],al
  45e65b:	add    BYTE PTR [eax+eax*1],ch
  45e65e:	add    BYTE PTR [eax],al
  45e660:	fs out 0x45,al
  45e663:	add    BYTE PTR [ecx],dl
  45e665:	add    ch,BYTE PTR [esi]
  45e667:	xor    DWORD PTR [ecx],eax
  45e669:	add    BYTE PTR [eax],al
  45e66b:	add    BYTE PTR [eax],al
  45e66d:	add    BYTE PTR [eax],al
  45e66f:	add    BYTE PTR [ecx],dl
  45e671:	add    BYTE PTR [eax],al
  45e673:	add    BYTE PTR [eax+edx*1+0x40],dl
  45e677:	add    BYTE PTR [ebx],al
  45e679:	outs   dx,BYTE PTR gs:[esi]
  45e67b:	arpl   WORD PTR [eax+0x110045e6],ax
  45e681:	add    ch,BYTE PTR [esi]
  45e683:	xor    al,BYTE PTR [ecx]
  45e685:	add    BYTE PTR [eax],al
  45e687:	add    BYTE PTR [eax],al
  45e689:	add    BYTE PTR [eax],al
  45e68b:	add    BYTE PTR [ecx],dl
  45e68d:	add    BYTE PTR [eax],al
  45e68f:	add    BYTE PTR [eax+edx*1+0x40],dl
  45e693:	add    BYTE PTR [ebx],al
  45e695:	outs   dx,BYTE PTR gs:[esi]
  45e697:	arpl   WORD PTR [ebp-0x75],dx
  45e69a:	in     al,dx
  45e69b:	add    esp,0xffffffd4
  45e69e:	push   ebx
  45e69f:	push   esi
  45e6a0:	push   edi
  45e6a1:	xor    ebx,ebx
  45e6a3:	mov    DWORD PTR [ebp-0x10],ebx
  45e6a6:	mov    DWORD PTR [ebp-0x14],ebx
  45e6a9:	mov    DWORD PTR [ebp-0xc],ecx
  45e6ac:	mov    DWORD PTR [ebp-0x8],edx
  45e6af:	mov    DWORD PTR [ebp-0x4],eax
  45e6b2:	mov    eax,DWORD PTR [ebp-0x4]
  45e6b5:	call   0x405408
  45e6ba:	mov    eax,DWORD PTR [ebp-0x8]
  45e6bd:	call   0x405408
  45e6c2:	mov    eax,DWORD PTR [ebp-0xc]
  45e6c5:	call   0x405408
  45e6ca:	xor    eax,eax
  45e6cc:	push   ebp
  45e6cd:	push   0x45eadb
  45e6d2:	push   DWORD PTR fs:[eax]
  45e6d5:	mov    DWORD PTR fs:[eax],esp
  45e6d8:	xor    eax,eax
  45e6da:	mov    DWORD PTR [ebp-0x28],eax
  45e6dd:	xor    eax,eax
  45e6df:	mov    DWORD PTR [ebp-0x2c],eax
  45e6e2:	xor    edx,edx
  45e6e4:	push   ebp
  45e6e5:	push   0x45ea88
  45e6ea:	push   DWORD PTR fs:[edx]
  45e6ed:	mov    DWORD PTR fs:[edx],esp
  45e6f0:	push   0x0
  45e6f2:	mov    ecx,DWORD PTR [ebp-0x4]
  45e6f5:	mov    dl,0x1
  45e6f7:	mov    eax,ds:0x412ef0
  45e6fc:	call   0x41670c
  45e701:	mov    DWORD PTR [ebp-0x28],eax
  45e704:	push   0xffff
  45e709:	mov    ecx,DWORD PTR [ebp-0x8]
  45e70c:	mov    dl,0x1
  45e70e:	mov    eax,ds:0x412ef0
  45e713:	call   0x41670c
  45e718:	mov    DWORD PTR [ebp-0x2c],eax
  45e71b:	xor    ecx,ecx
  45e71d:	mov    dl,0x1
  45e71f:	mov    eax,ds:0x453170
  45e724:	call   0x41a1e0
  45e729:	mov    DWORD PTR [ebp-0x1c],eax
  45e72c:	mov    eax,DWORD PTR [ebp-0x1c]
  45e72f:	call   0x441d10
  45e734:	test   eax,eax
  45e736:	jns    0x45e73b
  45e738:	add    eax,0x7
  45e73b:	sar    eax,0x3
  45e73e:	push   eax
  45e73f:	lea    eax,[ebp-0x14]
  45e742:	mov    ecx,0x1
  45e747:	mov    edx,DWORD PTR ds:0x45e67c
  45e74d:	call   0x4063b0
  45e752:	add    esp,0x4
  45e755:	mov    esi,0x8
  45e75a:	lea    ebx,[ebp-0x24]
  45e75d:	mov    eax,0x100
  45e762:	call   0x4032ec
  45e767:	mov    BYTE PTR [ebx],al
  45e769:	inc    ebx
  45e76a:	dec    esi
  45e76b:	jne    0x45e75d
  45e76d:	lea    edx,[ebp-0x24]
  45e770:	mov    ecx,0x8
  45e775:	mov    eax,DWORD PTR [ebp-0x2c]
  45e778:	call   0x416610
  45e77d:	mov    eax,DWORD PTR [ebp-0x1c]
  45e780:	mov    edx,DWORD PTR [eax]
  45e782:	call   DWORD PTR [edx+0x40]
  45e785:	lea    edx,[ebp-0x24]
  45e788:	mov    ecx,0x8
  45e78d:	mov    eax,DWORD PTR [ebp-0x1c]
  45e790:	mov    ebx,DWORD PTR [eax]
  45e792:	call   DWORD PTR [ebx+0x4c]
  45e795:	mov    edx,DWORD PTR [ebp-0xc]
  45e798:	mov    eax,DWORD PTR [ebp-0x1c]
  45e79b:	call   0x441d40
  45e7a0:	mov    edx,DWORD PTR [ebp-0x14]
  45e7a3:	mov    eax,DWORD PTR [ebp-0x1c]
  45e7a6:	mov    ecx,DWORD PTR [eax]
  45e7a8:	call   DWORD PTR [ecx+0x44]
  45e7ab:	mov    eax,DWORD PTR [ebp+0x8]
  45e7ae:	cmp    eax,0x11
  45e7b1:	ja     0x45e97b
  45e7b7:	jmp    DWORD PTR [eax*4+0x45e7be]
  45e7be:	push   es
  45e7bf:	call   0xe861e809
  45e7c4:	inc    ebp
  45e7c5:	add    BYTE PTR [edx],dh
  45e7c7:	call   0xe88de811
  45e7cc:	inc    ebp
  45e7cd:	add    BYTE PTR [esi-0x18],bl
  45e7d0:	inc    ebp
  45e7d1:	add    BYTE PTR [eax+ebp*8+0x45],dh
  45e7d5:	add    BYTE PTR [edx-0x5fffba18],cl
  45e7db:	call   0xe8fbe825
  45e7e0:	inc    ebp
  45e7e1:	add    ah,cl
  45e7e3:	call   0xe927e82d
  45e7e8:	inc    ebp
  45e7e9:	add    al,bh
  45e7eb:	call   0xe950e835
  45e7f0:	inc    ebp
  45e7f1:	add    BYTE PTR [esi],bl
  45e7f3:	jmp    0xe976e83d
  45e7f8:	inc    ebp
  45e7f9:	add    BYTE PTR [ecx+ebp*8+0x45],al
  45e7fd:	add    BYTE PTR [edi-0x17],dl
  45e800:	inc    ebp
  45e801:	add    BYTE PTR [edx-0x17],ch
  45e804:	inc    ebp
  45e805:	add    BYTE PTR [ebx],dh
  45e807:	leave  
  45e808:	mov    dl,0x1
  45e80a:	mov    eax,ds:0x443aec
  45e80f:	call   0x44231c
  45e814:	mov    DWORD PTR [ebp-0x18],eax
  45e817:	jmp    0x45e97b
  45e81c:	xor    ecx,ecx
  45e81e:	mov    dl,0x1
  45e820:	mov    eax,ds:0x444a70
  45e825:	call   0x44231c
  45e82a:	mov    DWORD PTR [ebp-0x18],eax
  45e82d:	jmp    0x45e97b
  45e832:	xor    ecx,ecx
  45e834:	mov    dl,0x1
  45e836:	mov    eax,ds:0x44613c
  45e83b:	call   0x44231c
  45e840:	mov    DWORD PTR [ebp-0x18],eax
  45e843:	jmp    0x45e97b
  45e848:	xor    ecx,ecx
  45e84a:	mov    dl,0x1
  45e84c:	mov    eax,ds:0x44734c
  45e851:	call   0x44231c
  45e856:	mov    DWORD PTR [ebp-0x18],eax
  45e859:	jmp    0x45e97b
  45e85e:	xor    ecx,ecx
  45e860:	mov    dl,0x1
  45e862:	mov    eax,ds:0x448484
  45e867:	call   0x44231c
  45e86c:	mov    DWORD PTR [ebp-0x18],eax
  45e86f:	jmp    0x45e97b
  45e874:	xor    ecx,ecx
  45e876:	mov    dl,0x1
  45e878:	mov    eax,ds:0x44919c
  45e87d:	call   0x449810
  45e882:	mov    DWORD PTR [ebp-0x18],eax
  45e885:	jmp    0x45e97b
  45e88a:	xor    ecx,ecx
  45e88c:	mov    dl,0x1
  45e88e:	mov    eax,ds:0x44994c
  45e893:	call   0x44231c
  45e898:	mov    DWORD PTR [ebp-0x18],eax
  45e89b:	jmp    0x45e97b
  45e8a0:	xor    ecx,ecx
  45e8a2:	mov    dl,0x1
  45e8a4:	mov    eax,ds:0x44a35c
  45e8a9:	call   0x44231c
  45e8ae:	mov    DWORD PTR [ebp-0x18],eax
  45e8b1:	jmp    0x45e97b
  45e8b6:	xor    ecx,ecx
  45e8b8:	mov    dl,0x1
  45e8ba:	mov    eax,ds:0x44c888
  45e8bf:	call   0x44231c
  45e8c4:	mov    DWORD PTR [ebp-0x18],eax
  45e8c7:	jmp    0x45e97b
  45e8cc:	xor    ecx,ecx
  45e8ce:	mov    dl,0x1
  45e8d0:	mov    eax,ds:0x447464
  45e8d5:	call   0x44231c
  45e8da:	mov    DWORD PTR [ebp-0x18],eax
  45e8dd:	jmp    0x45e97b
  45e8e2:	xor    ecx,ecx
  45e8e4:	mov    dl,0x1
  45e8e6:	mov    eax,ds:0x44d534
  45e8eb:	call   0x44203c
  45e8f0:	mov    DWORD PTR [ebp-0x18],eax
  45e8f3:	jmp    0x45e97b
  45e8f8:	xor    ecx,ecx
  45e8fa:	mov    dl,0x1
  45e8fc:	mov    eax,ds:0x44db40
  45e901:	call   0x44231c
  45e906:	mov    DWORD PTR [ebp-0x18],eax
  45e909:	jmp    0x45e97b
  45e90b:	xor    ecx,ecx
  45e90d:	mov    dl,0x1
  45e90f:	mov    eax,ds:0x44e034
  45e914:	call   0x44231c
  45e919:	mov    DWORD PTR [ebp-0x18],eax
  45e91c:	jmp    0x45e97b
  45e91e:	xor    ecx,ecx
  45e920:	mov    dl,0x1
  45e922:	mov    eax,ds:0x44e660
  45e927:	call   0x44231c
  45e92c:	mov    DWORD PTR [ebp-0x18],eax
  45e92f:	jmp    0x45e97b
  45e931:	xor    ecx,ecx
  45e933:	mov    dl,0x1
  45e935:	mov    eax,ds:0x44f2e0
  45e93a:	call   0x44231c
  45e93f:	mov    DWORD PTR [ebp-0x18],eax
  45e942:	jmp    0x45e97b
  45e944:	xor    ecx,ecx
  45e946:	mov    dl,0x1
  45e948:	mov    eax,ds:0x45170c
  45e94d:	call   0x44231c
  45e952:	mov    DWORD PTR [ebp-0x18],eax
  45e955:	jmp    0x45e97b
  45e957:	xor    ecx,ecx
  45e959:	mov    dl,0x1
  45e95b:	mov    eax,ds:0x451b50
  45e960:	call   0x45301c
  45e965:	mov    DWORD PTR [ebp-0x18],eax
  45e968:	jmp    0x45e97b
  45e96a:	xor    ecx,ecx
  45e96c:	mov    dl,0x1
  45e96e:	mov    eax,ds:0x44cf18
  45e973:	call   0x44231c
  45e978:	mov    DWORD PTR [ebp-0x18],eax
  45e97b:	mov    eax,DWORD PTR [ebp-0x18]
  45e97e:	mov    edx,DWORD PTR ds:0x441b58
  45e984:	call   0x40422c
  45e989:	test   al,al
  45e98b:	je     0x45ea27
  45e991:	mov    eax,DWORD PTR [ebp-0x18]
  45e994:	call   0x4420b0
  45e999:	test   eax,eax
  45e99b:	jns    0x45e9a0
  45e99d:	add    eax,0x7
  45e9a0:	sar    eax,0x3
  45e9a3:	push   eax
  45e9a4:	lea    eax,[ebp-0x10]
  45e9a7:	mov    ecx,0x1
  45e9ac:	mov    edx,DWORD PTR ds:0x45e660
  45e9b2:	call   0x4063b0
  45e9b7:	add    esp,0x4
  45e9ba:	mov    eax,DWORD PTR [ebp-0x10]
  45e9bd:	call   0x4061f4
  45e9c2:	mov    ebx,eax
  45e9c4:	dec    ebx
  45e9c5:	test   ebx,ebx
  45e9c7:	jl     0x45e9e0
  45e9c9:	inc    ebx
  45e9ca:	xor    esi,esi
  45e9cc:	mov    eax,0x100
  45e9d1:	call   0x4032ec
  45e9d6:	mov    edx,DWORD PTR [ebp-0x10]
  45e9d9:	mov    BYTE PTR [edx+esi*1],al
  45e9dc:	inc    esi
  45e9dd:	dec    ebx
  45e9de:	jne    0x45e9cc
  45e9e0:	mov    eax,DWORD PTR [ebp-0x10]
  45e9e3:	call   0x4061f4
  45e9e8:	mov    ecx,eax
  45e9ea:	mov    edx,DWORD PTR [ebp-0x10]
  45e9ed:	mov    eax,DWORD PTR [ebp-0x2c]
  45e9f0:	call   0x416610
  45e9f5:	mov    eax,DWORD PTR [ebp-0x18]
  45e9f8:	call   0x441de0
  45e9fd:	mov    ebx,eax
  45e9ff:	mov    eax,DWORD PTR [ebp-0x1c]
  45ea02:	call   0x441d10
  45ea07:	cmp    eax,ebx
  45ea09:	jle    0x45ea0d
  45ea0b:	mov    eax,ebx
  45ea0d:	mov    edx,DWORD PTR [ebp-0x10]
  45ea10:	push   edx
  45ea11:	mov    edx,DWORD PTR [ebp-0x14]
  45ea14:	mov    ecx,eax
  45ea16:	mov    eax,DWORD PTR [ebp-0x18]
  45ea19:	mov    ebx,DWORD PTR [eax]
  45ea1b:	call   DWORD PTR [ebx+0x40]
  45ea1e:	mov    eax,DWORD PTR [ebp-0x18]
  45ea21:	mov    BYTE PTR [eax+0x34],0x0
  45ea25:	jmp    0x45ea4e
  45ea27:	mov    eax,DWORD PTR [ebp-0x18]
  45ea2a:	call   0x441de0
  45ea2f:	mov    ebx,eax
  45ea31:	mov    eax,DWORD PTR [ebp-0x1c]
  45ea34:	call   0x441d10
  45ea39:	cmp    eax,ebx
  45ea3b:	jle    0x45ea3f
  45ea3d:	mov    eax,ebx
  45ea3f:	push   0x0
  45ea41:	mov    edx,DWORD PTR [ebp-0x14]
  45ea44:	mov    ecx,eax
  45ea46:	mov    eax,DWORD PTR [ebp-0x18]
  45ea49:	mov    ebx,DWORD PTR [eax]
  45ea4b:	call   DWORD PTR [ebx+0x40]
  45ea4e:	mov    eax,DWORD PTR [ebp-0x28]
  45ea51:	mov    edx,DWORD PTR [eax]
  45ea53:	call   DWORD PTR [edx]
  45ea55:	push   eax
  45ea56:	mov    ecx,DWORD PTR [ebp-0x2c]
  45ea59:	mov    edx,DWORD PTR [ebp-0x28]
  45ea5c:	mov    eax,DWORD PTR [ebp-0x18]
  45ea5f:	call   0x441e88
  45ea64:	mov    eax,DWORD PTR [ebp-0x18]
  45ea67:	mov    edx,DWORD PTR [eax]
  45ea69:	call   DWORD PTR [edx+0x44]
  45ea6c:	mov    eax,DWORD PTR [ebp-0x28]
  45ea6f:	call   0x4040a0
  45ea74:	mov    eax,DWORD PTR [ebp-0x2c]
  45ea77:	call   0x4040a0
  45ea7c:	mov    bl,0x1
  45ea7e:	xor    eax,eax
  45ea80:	pop    edx
  45ea81:	pop    ecx
  45ea82:	pop    ecx
  45ea83:	mov    DWORD PTR fs:[eax],edx
  45ea86:	jmp    0x45eaa4
  45ea88:	jmp    0x404568
  45ea8d:	mov    eax,DWORD PTR [ebp-0x28]
  45ea90:	call   0x4040a0
  45ea95:	mov    eax,DWORD PTR [ebp-0x2c]
  45ea98:	call   0x4040a0
  45ea9d:	xor    ebx,ebx
  45ea9f:	call   0x404978
  45eaa4:	xor    eax,eax
  45eaa6:	pop    edx
  45eaa7:	pop    ecx
  45eaa8:	pop    ecx
  45eaa9:	mov    DWORD PTR fs:[eax],edx
  45eaac:	push   0x45eae2
  45eab1:	lea    eax,[ebp-0x14]
  45eab4:	mov    edx,DWORD PTR ds:0x45e67c
  45eaba:	call   0x4063bc
  45eabf:	lea    eax,[ebp-0x10]
  45eac2:	mov    edx,DWORD PTR ds:0x45e660
  45eac8:	call   0x4063bc
  45eacd:	lea    eax,[ebp-0xc]
  45ead0:	mov    edx,0x3
  45ead5:	call   0x404fac
  45eada:	ret    
  45eadb:	jmp    0x40481c
  45eae0:	jmp    0x45eab1
  45eae2:	mov    eax,ebx
  45eae4:	pop    edi
  45eae5:	pop    esi
  45eae6:	pop    ebx
  45eae7:	mov    esp,ebp
  45eae9:	pop    ebp
  45eaea:	ret    0x4
  45eaed:	lea    eax,[eax+0x0]
  45eaf0:	push   ebp
  45eaf1:	mov    ebp,esp
  45eaf3:	add    esp,0xfffffdec
  45eaf9:	mov    DWORD PTR [ebp-0x4],eax
  45eafc:	mov    eax,DWORD PTR [ebp-0x4]
  45eaff:	call   0x405408
  45eb04:	xor    eax,eax
  45eb06:	push   ebp
  45eb07:	push   0x45eb97
  45eb0c:	push   DWORD PTR fs:[eax]
  45eb0f:	mov    DWORD PTR fs:[eax],esp
  45eb12:	push   0x1
  45eb14:	call   0x4072f0
  45eb19:	mov    DWORD PTR [ebp-0xc],eax
  45eb1c:	xor    eax,eax
  45eb1e:	push   ebp
  45eb1f:	push   0x45eb7a
  45eb24:	push   DWORD PTR fs:[eax]
  45eb27:	mov    DWORD PTR fs:[eax],esp
  45eb2a:	push   0x100
  45eb2f:	lea    eax,[ebp-0x214]
  45eb35:	push   eax
  45eb36:	lea    eax,[ebp-0x14]
  45eb39:	push   eax
  45eb3a:	lea    eax,[ebp-0x10]
  45eb3d:	push   eax
  45eb3e:	push   0x0
  45eb40:	push   0x100
  45eb45:	lea    eax,[ebp-0x114]
  45eb4b:	push   eax
  45eb4c:	mov    eax,DWORD PTR [ebp-0x4]
  45eb4f:	call   0x405418
  45eb54:	push   eax
  45eb55:	call   0x407298
  45eb5a:	cmp    eax,0x1
  45eb5d:	sbb    eax,eax
  45eb5f:	inc    eax
  45eb60:	mov    BYTE PTR [ebp-0x5],al
  45eb63:	xor    eax,eax
  45eb65:	pop    edx
  45eb66:	pop    ecx
  45eb67:	pop    ecx
  45eb68:	mov    DWORD PTR fs:[eax],edx
  45eb6b:	push   0x45eb81
  45eb70:	mov    eax,DWORD PTR [ebp-0xc]
  45eb73:	push   eax
  45eb74:	call   0x4072f0
  45eb79:	ret    
  45eb7a:	jmp    0x40481c
  45eb7f:	jmp    0x45eb70
  45eb81:	xor    eax,eax
  45eb83:	pop    edx
  45eb84:	pop    ecx
  45eb85:	pop    ecx
  45eb86:	mov    DWORD PTR fs:[eax],edx
  45eb89:	push   0x45eb9e
  45eb8e:	lea    eax,[ebp-0x4]
  45eb91:	call   0x404f88
  45eb96:	ret    
  45eb97:	jmp    0x40481c
  45eb9c:	jmp    0x45eb8e
  45eb9e:	movzx  eax,BYTE PTR [ebp-0x5]
  45eba2:	mov    esp,ebp
  45eba4:	pop    ebp
  45eba5:	ret    
  45eba6:	mov    eax,eax
  45eba8:	push   ebp
  45eba9:	mov    ebp,esp
  45ebab:	push   ecx
  45ebac:	mov    ecx,0x6
  45ebb1:	push   0x0
  45ebb3:	push   0x0
  45ebb5:	dec    ecx
  45ebb6:	jne    0x45ebb1
  45ebb8:	xchg   DWORD PTR [ebp-0x4],ecx
  45ebbb:	push   ebx
  45ebbc:	push   esi
  45ebbd:	push   edi
  45ebbe:	mov    DWORD PTR [ebp-0xc],ecx
  45ebc1:	mov    DWORD PTR [ebp-0x8],edx
  45ebc4:	mov    DWORD PTR [ebp-0x4],eax
  45ebc7:	mov    eax,DWORD PTR [ebp-0x4]
  45ebca:	call   0x405408
  45ebcf:	mov    eax,DWORD PTR [ebp-0x8]
  45ebd2:	call   0x405408
  45ebd7:	mov    eax,DWORD PTR [ebp-0xc]
  45ebda:	call   0x405408
  45ebdf:	mov    eax,DWORD PTR [ebp+0x8]
  45ebe2:	call   0x405408
  45ebe7:	xor    eax,eax
  45ebe9:	push   ebp
  45ebea:	push   0x45ed9e
  45ebef:	push   DWORD PTR fs:[eax]
  45ebf2:	mov    DWORD PTR fs:[eax],esp
  45ebf5:	call   0x407248
  45ebfa:	mov    DWORD PTR [ebp-0x10],eax
  45ebfd:	mov    BYTE PTR [ebp-0x11],0x41
  45ec01:	xor    eax,eax
  45ec03:	push   ebp
  45ec04:	push   0x45ed62
  45ec09:	push   DWORD PTR fs:[eax]
  45ec0c:	mov    DWORD PTR fs:[eax],esp
  45ec0f:	cmp    DWORD PTR [ebp-0x10],0x0
  45ec13:	jbe    0x45ed58
  45ec19:	test   BYTE PTR [ebp-0x10],0x1
  45ec1d:	je     0x45ed48
  45ec23:	lea    eax,[ebp-0x18]
  45ec26:	movzx  edx,BYTE PTR [ebp-0x11]
  45ec2a:	call   0x405170
  45ec2f:	lea    eax,[ebp-0x18]
  45ec32:	mov    edx,0x45edb8
  45ec37:	call   0x405254
  45ec3c:	mov    eax,DWORD PTR [ebp-0x18]
  45ec3f:	call   0x405418
  45ec44:	push   eax
  45ec45:	call   0x407208
  45ec4a:	cmp    eax,0x3
  45ec4d:	je     0x45ecab
  45ec4f:	lea    eax,[ebp-0x1c]
  45ec52:	movzx  edx,BYTE PTR [ebp-0x11]
  45ec56:	call   0x405170
  45ec5b:	lea    eax,[ebp-0x1c]
  45ec5e:	mov    edx,0x45edb8
  45ec63:	call   0x405254
  45ec68:	mov    eax,DWORD PTR [ebp-0x1c]
  45ec6b:	call   0x405418
  45ec70:	push   eax
  45ec71:	call   0x407208
  45ec76:	cmp    eax,0x4
  45ec79:	je     0x45ecab
  45ec7b:	lea    eax,[ebp-0x20]
  45ec7e:	movzx  edx,BYTE PTR [ebp-0x11]
  45ec82:	call   0x405170
  45ec87:	lea    eax,[ebp-0x20]
  45ec8a:	mov    edx,0x45edb8
  45ec8f:	call   0x405254
  45ec94:	mov    eax,DWORD PTR [ebp-0x20]
  45ec97:	call   0x405418
  45ec9c:	push   eax
  45ec9d:	call   0x407208
  45eca2:	cmp    eax,0x2
  45eca5:	jne    0x45ed48
  45ecab:	xor    eax,eax
  45ecad:	push   ebp
  45ecae:	push   0x45ed3e
  45ecb3:	push   DWORD PTR fs:[eax]
  45ecb6:	mov    DWORD PTR fs:[eax],esp
  45ecb9:	lea    eax,[ebp-0x24]
  45ecbc:	movzx  edx,BYTE PTR [ebp-0x11]
  45ecc0:	call   0x405170
  45ecc5:	lea    eax,[ebp-0x24]
  45ecc8:	mov    edx,0x45edb8
  45eccd:	call   0x405254
  45ecd2:	mov    eax,DWORD PTR [ebp-0x24]
  45ecd5:	call   0x45eaf0
  45ecda:	test   al,al
  45ecdc:	je     0x45ed34
  45ecde:	lea    eax,[ebp-0x28]
  45ece1:	push   eax
  45ece2:	lea    eax,[ebp-0x2c]
  45ece5:	movzx  edx,BYTE PTR [ebp-0x11]
  45ece9:	call   0x405170
  45ecee:	lea    eax,[ebp-0x2c]
  45ecf1:	mov    edx,0x45edb8
  45ecf6:	call   0x405254
  45ecfb:	mov    eax,DWORD PTR [ebp-0x2c]
  45ecfe:	mov    ecx,DWORD PTR [ebp-0x8]
  45ed01:	mov    edx,DWORD PTR [ebp-0x4]
  45ed04:	call   0x45e390
  45ed09:	lea    eax,[ebp-0x30]
  45ed0c:	push   eax
  45ed0d:	lea    eax,[ebp-0x34]
  45ed10:	movzx  edx,BYTE PTR [ebp-0x11]
  45ed14:	call   0x405170
  45ed19:	lea    eax,[ebp-0x34]
  45ed1c:	mov    edx,0x45edb8
  45ed21:	call   0x405254
  45ed26:	mov    eax,DWORD PTR [ebp-0x34]
  45ed29:	mov    ecx,DWORD PTR [ebp+0x8]
  45ed2c:	mov    edx,DWORD PTR [ebp-0xc]
  45ed2f:	call   0x45e0d4
  45ed34:	xor    eax,eax
  45ed36:	pop    edx
  45ed37:	pop    ecx
  45ed38:	pop    ecx
  45ed39:	mov    DWORD PTR fs:[eax],edx
  45ed3c:	jmp    0x45ed48
  45ed3e:	jmp    0x404568
  45ed43:	call   0x404978
  45ed48:	shr    DWORD PTR [ebp-0x10],1
  45ed4b:	inc    BYTE PTR [ebp-0x11]
  45ed4e:	cmp    DWORD PTR [ebp-0x10],0x0
  45ed52:	ja     0x45ec19
  45ed58:	xor    eax,eax
  45ed5a:	pop    edx
  45ed5b:	pop    ecx
  45ed5c:	pop    ecx
  45ed5d:	mov    DWORD PTR fs:[eax],edx
  45ed60:	jmp    0x45ed6c
  45ed62:	jmp    0x404568
  45ed67:	call   0x404978
  45ed6c:	mov    bl,0x1
  45ed6e:	xor    eax,eax
  45ed70:	pop    edx
  45ed71:	pop    ecx
  45ed72:	pop    ecx
  45ed73:	mov    DWORD PTR fs:[eax],edx
  45ed76:	push   0x45eda5
  45ed7b:	lea    eax,[ebp-0x34]
  45ed7e:	mov    edx,0x8
  45ed83:	call   0x404fac
  45ed88:	lea    eax,[ebp-0xc]
  45ed8b:	mov    edx,0x3
  45ed90:	call   0x404fac
  45ed95:	lea    eax,[ebp+0x8]
  45ed98:	call   0x404f88
  45ed9d:	ret    
  45ed9e:	jmp    0x40481c
  45eda3:	jmp    0x45ed7b
  45eda5:	mov    eax,ebx
  45eda7:	pop    edi
  45eda8:	pop    esi
  45eda9:	pop    ebx
  45edaa:	mov    esp,ebp
  45edac:	pop    ebp
  45edad:	ret    0x4
  45edb0:	(bad)  
  45edb1:	(bad)  
  45edb2:	(bad)  
  45edb3:	inc    DWORD PTR [edx]
  45edb5:	add    BYTE PTR [eax],al
  45edb7:	add    BYTE PTR [edx],bh
  45edb9:	pop    esp
  45edba:	add    BYTE PTR [eax],al
  45edbc:	push   ebp
  45edbd:	mov    ebp,esp
  45edbf:	add    esp,0xfffffff4
  45edc2:	push   ebx
  45edc3:	xor    edx,edx
  45edc5:	mov    DWORD PTR [ebp-0x4],edx
  45edc8:	mov    ebx,eax
  45edca:	xor    eax,eax
  45edcc:	push   ebp
  45edcd:	push   0x45ee48
  45edd2:	push   DWORD PTR fs:[eax]
  45edd5:	mov    DWORD PTR fs:[eax],esp
  45edd8:	mov    eax,ebx
  45edda:	call   0x404f88
  45eddf:	xor    eax,eax
  45ede1:	mov    DWORD PTR [ebp-0x8],eax
  45ede4:	xor    eax,eax
  45ede6:	mov    DWORD PTR [ebp-0xc],eax
  45ede9:	mov    eax,ebx
  45edeb:	call   0x404f88
  45edf0:	push   0x0
  45edf2:	push   0x0
  45edf4:	lea    eax,[ebp-0xc]
  45edf7:	push   eax
  45edf8:	lea    eax,[ebp-0xc]
  45edfb:	push   eax
  45edfc:	lea    eax,[ebp-0x8]
  45edff:	push   eax
  45ee00:	push   0x0
  45ee02:	push   0x0
  45ee04:	push   0x45ee54
  45ee09:	call   0x407298
  45ee0e:	test   eax,eax
  45ee10:	je     0x45ee32
  45ee12:	lea    ecx,[ebp-0x4]
  45ee15:	mov    edx,0x8
  45ee1a:	mov    eax,DWORD PTR [ebp-0x8]
  45ee1d:	call   0x408b00
  45ee22:	push   ebx
  45ee23:	mov    ecx,0x8
  45ee28:	xor    edx,edx
  45ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  45ee2d:	call   0x405480
  45ee32:	xor    eax,eax
  45ee34:	pop    edx
  45ee35:	pop    ecx
  45ee36:	pop    ecx
  45ee37:	mov    DWORD PTR fs:[eax],edx
  45ee3a:	push   0x45ee4f
  45ee3f:	lea    eax,[ebp-0x4]
  45ee42:	call   0x404f88
  45ee47:	ret    
  45ee48:	jmp    0x40481c
  45ee4d:	jmp    0x45ee3f
  45ee4f:	pop    ebx
  45ee50:	mov    esp,ebp
  45ee52:	pop    ebp
  45ee53:	ret    
  45ee54:	inc    ebx
  45ee55:	cmp    bl,BYTE PTR [eax+eax*1+0x55]
  45ee59:	mov    ebp,esp
  45ee5b:	add    esp,0xfffffff8
  45ee5e:	push   ebx
  45ee5f:	push   esi
  45ee60:	push   edi
  45ee61:	mov    DWORD PTR [ebp-0x8],edx
  45ee64:	mov    DWORD PTR [ebp-0x4],eax
  45ee67:	mov    eax,DWORD PTR [ebp-0x4]
  45ee6a:	call   0x405408
  45ee6f:	xor    eax,eax
  45ee71:	push   ebp
  45ee72:	push   0x45eef3
  45ee77:	push   DWORD PTR fs:[eax]
  45ee7a:	mov    DWORD PTR fs:[eax],esp
  45ee7d:	xor    eax,eax
  45ee7f:	push   ebp
  45ee80:	push   0x45eec6
  45ee85:	push   DWORD PTR fs:[eax]
  45ee88:	mov    DWORD PTR fs:[eax],esp
  45ee8b:	mov    dl,0x1
  45ee8d:	mov    eax,ds:0x43e0f0
  45ee92:	call   0x42467c
  45ee97:	mov    ebx,eax
  45ee99:	mov    eax,ebx
  45ee9b:	call   0x440094
  45eea0:	add    eax,0x88
  45eea5:	mov    edx,0x45ef0c
  45eeaa:	call   0x404fdc
  45eeaf:	mov    ecx,DWORD PTR [ebp-0x8]
  45eeb2:	mov    edx,DWORD PTR [ebp-0x4]
  45eeb5:	mov    eax,ebx
  45eeb7:	call   0x43e650
  45eebc:	xor    eax,eax
  45eebe:	pop    edx
  45eebf:	pop    ecx
  45eec0:	pop    ecx
  45eec1:	mov    DWORD PTR fs:[eax],edx
  45eec4:	jmp    0x45eedd
  45eec6:	jmp    0x404568
  45eecb:	mov    eax,DWORD PTR [ebp-0x8]
  45eece:	mov    edx,0x45ef58
  45eed3:	call   0x404fdc
  45eed8:	call   0x404978
  45eedd:	xor    eax,eax
  45eedf:	pop    edx
  45eee0:	pop    ecx
  45eee1:	pop    ecx
  45eee2:	mov    DWORD PTR fs:[eax],edx
  45eee5:	push   0x45eefa
  45eeea:	lea    eax,[ebp-0x4]
  45eeed:	call   0x404f88
  45eef2:	ret    
  45eef3:	jmp    0x40481c
  45eef8:	jmp    0x45eeea
  45eefa:	pop    edi
  45eefb:	pop    esi
  45eefc:	pop    ebx
  45eefd:	pop    ecx
  45eefe:	pop    ecx
  45eeff:	pop    ebp
  45ef00:	ret    
  45ef01:	add    BYTE PTR [eax],al
  45ef03:	add    bh,bh
  45ef05:	(bad)  
  45ef06:	(bad)  
  45ef07:	inc    DWORD PTR [ecx+0x0]
  45ef0a:	add    BYTE PTR [eax],al
  45ef0c:	dec    ebp
  45ef0d:	outs   dx,DWORD PTR ds:[esi]
  45ef0e:	jp     0x45ef79
  45ef10:	ins    BYTE PTR es:[edi],dx
  45ef11:	ins    BYTE PTR es:[edi],dx
  45ef12:	popa   
  45ef13:	das    
  45ef14:	xor    eax,0x2820302e
  45ef19:	push   edi
  45ef1a:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  45ef21:	dec    esi
  45ef22:	push   esp
  45ef23:	and    BYTE PTR ds:0x203b312e,dh
  45ef29:	jb     0x45efa2
  45ef2b:	cmp    dh,BYTE PTR [edx]
  45ef2d:	cmp    DWORD PTR [esi],ebp
  45ef2f:	xor    BYTE PTR [ecx],ch
  45ef31:	and    BYTE PTR [edi+0x65],al
  45ef34:	arpl   WORD PTR [ebx+0x6f],bp
  45ef37:	das    
  45ef38:	xor    dh,BYTE PTR [eax]
  45ef3a:	xor    DWORD PTR [eax],esi
  45ef3c:	xor    BYTE PTR [eax],dh
  45ef3e:	xor    BYTE PTR [eax],dh
  45ef40:	and    BYTE PTR [esi+0x69],al
  45ef43:	jb     0x45efaa
  45ef45:	outs   dx,WORD PTR ds:[esi]
  45ef47:	js     0x45ef78
  45ef49:	xor    bh,BYTE PTR [ecx]
  45ef4b:	xor    DWORD PTR cs:[eax],eax
  45ef4e:	add    BYTE PTR [eax],al
  45ef50:	(bad)  
  45ef51:	(bad)  
  45ef52:	(bad)  
  45ef53:	inc    DWORD PTR ds:0x66000000
  45ef59:	popa   
  45ef5a:	ins    BYTE PTR es:[edi],dx
  45ef5b:	jae    0x45efc2
  45ef5d:	add    BYTE PTR [eax],al
  45ef5f:	add    BYTE PTR [ebp-0x75],dl
  45ef62:	in     al,dx
  45ef63:	add    esp,0xfffffff0
  45ef66:	push   ebx
  45ef67:	push   esi
  45ef68:	push   edi
  45ef69:	xor    ebx,ebx
  45ef6b:	mov    DWORD PTR [ebp-0x10],ebx
  45ef6e:	mov    DWORD PTR [ebp-0xc],ecx
  45ef71:	mov    DWORD PTR [ebp-0x8],edx
  45ef74:	mov    DWORD PTR [ebp-0x4],eax
  45ef77:	xor    eax,eax
  45ef79:	push   ebp
  45ef7a:	push   0x45eff2
  45ef7f:	push   DWORD PTR fs:[eax]
  45ef82:	mov    DWORD PTR fs:[eax],esp
  45ef85:	mov    eax,DWORD PTR [ebp-0xc]
  45ef88:	call   0x404f88
  45ef8d:	mov    esi,0x166ed955
  45ef92:	mov    eax,DWORD PTR [ebp-0x4]
  45ef95:	mov    edi,DWORD PTR [ebp-0x8]
  45ef98:	add    edi,DWORD PTR [ebp-0x4]
  45ef9b:	dec    edi
  45ef9c:	sub    edi,eax
  45ef9e:	jl     0x45efdc
  45efa0:	inc    edi
  45efa1:	lea    ebx,[eax+0x46d800]
  45efa7:	lea    eax,[ebp-0x10]
  45efaa:	movzx  edx,BYTE PTR [ebx]
  45efad:	mov    ecx,esi
  45efaf:	shr    ecx,0x8
  45efb2:	xor    dl,cl
  45efb4:	call   0x405170
  45efb9:	mov    edx,DWORD PTR [ebp-0x10]
  45efbc:	mov    eax,DWORD PTR [ebp-0xc]
  45efbf:	call   0x405254
  45efc4:	mov    eax,DWORD PTR [ebp-0xc]
  45efc7:	movzx  eax,BYTE PTR [ebx]
  45efca:	add    esi,eax
  45efcc:	mov    eax,DWORD PTR [ebp-0x4]
  45efcf:	add    eax,DWORD PTR [ebp-0x8]
  45efd2:	imul   esi,eax
  45efd5:	add    esi,DWORD PTR [ebp-0x8]
  45efd8:	inc    ebx
  45efd9:	dec    edi
  45efda:	jne    0x45efa7
  45efdc:	xor    eax,eax
  45efde:	pop    edx
  45efdf:	pop    ecx
  45efe0:	pop    ecx
  45efe1:	mov    DWORD PTR fs:[eax],edx
  45efe4:	push   0x45eff9
  45efe9:	lea    eax,[ebp-0x10]
  45efec:	call   0x404f88
  45eff1:	ret    
  45eff2:	jmp    0x40481c
  45eff7:	jmp    0x45efe9
  45eff9:	pop    edi
  45effa:	pop    esi
  45effb:	pop    ebx
  45effc:	mov    esp,ebp
  45effe:	pop    ebp
  45efff:	ret    
  45f000:	push   ebp
  45f001:	mov    ebp,esp
  45f003:	add    esp,0xfffffff8
  45f006:	push   ebx
  45f007:	xor    ecx,ecx
  45f009:	mov    DWORD PTR [ebp-0x8],ecx
  45f00c:	mov    ebx,edx
  45f00e:	mov    DWORD PTR [ebp-0x4],eax
  45f011:	mov    eax,DWORD PTR [ebp-0x4]
  45f014:	call   0x405408
  45f019:	xor    eax,eax
  45f01b:	push   ebp
  45f01c:	push   0x45f05e
  45f021:	push   DWORD PTR fs:[eax]
  45f024:	mov    DWORD PTR fs:[eax],esp
  45f027:	lea    ecx,[ebp-0x8]
  45f02a:	mov    edx,0x2a
  45f02f:	xor    eax,eax
  45f031:	call   0x45ef60
  45f036:	mov    edx,DWORD PTR [ebp-0x8]
  45f039:	mov    eax,ebx
  45f03b:	mov    ecx,DWORD PTR [ebp-0x4]
  45f03e:	call   0x4052a0
  45f043:	xor    eax,eax
  45f045:	pop    edx
  45f046:	pop    ecx
  45f047:	pop    ecx
  45f048:	mov    DWORD PTR fs:[eax],edx
  45f04b:	push   0x45f065
  45f050:	lea    eax,[ebp-0x8]
  45f053:	mov    edx,0x2
  45f058:	call   0x404fac
  45f05d:	ret    
  45f05e:	jmp    0x40481c
  45f063:	jmp    0x45f050
  45f065:	pop    ebx
  45f066:	pop    ecx
  45f067:	pop    ecx
  45f068:	pop    ebp
  45f069:	ret    
  45f06a:	mov    eax,eax
  45f06c:	push   ebp
  45f06d:	mov    ebp,esp
  45f06f:	add    esp,0xffffffe0
  45f072:	push   ebx
  45f073:	push   esi
  45f074:	push   edi
  45f075:	xor    ebx,ebx
  45f077:	mov    DWORD PTR [ebp-0x10],ebx
  45f07a:	mov    DWORD PTR [ebp-0x14],ebx
  45f07d:	mov    DWORD PTR [ebp-0xc],ecx
  45f080:	mov    DWORD PTR [ebp-0x8],edx
  45f083:	mov    DWORD PTR [ebp-0x4],eax
  45f086:	mov    eax,DWORD PTR [ebp-0x4]
  45f089:	call   0x405408
  45f08e:	mov    eax,DWORD PTR [ebp-0x8]
  45f091:	call   0x405408
  45f096:	mov    eax,DWORD PTR [ebp-0xc]
  45f099:	call   0x405408
  45f09e:	mov    eax,DWORD PTR [ebp+0xc]
  45f0a1:	call   0x405408
  45f0a6:	xor    eax,eax
  45f0a8:	push   ebp
  45f0a9:	push   0x45f1ad
  45f0ae:	push   DWORD PTR fs:[eax]
  45f0b1:	mov    DWORD PTR fs:[eax],esp
  45f0b4:	xor    eax,eax
  45f0b6:	push   ebp
  45f0b7:	push   0x45f17e
  45f0bc:	push   DWORD PTR fs:[eax]
  45f0bf:	mov    DWORD PTR fs:[eax],esp
  45f0c2:	mov    dl,0x1
  45f0c4:	mov    eax,ds:0x412cf0
  45f0c9:	call   0x404070
  45f0ce:	mov    DWORD PTR [ebp-0x18],eax
  45f0d1:	mov    edx,DWORD PTR [ebp+0xc]
  45f0d4:	mov    eax,DWORD PTR [ebp-0x18]
  45f0d7:	mov    ecx,DWORD PTR [eax]
  45f0d9:	call   DWORD PTR [ecx+0x68]
  45f0dc:	mov    eax,DWORD PTR [ebp-0x18]
  45f0df:	mov    edx,DWORD PTR [eax]
  45f0e1:	call   DWORD PTR [edx+0x14]
  45f0e4:	dec    eax
  45f0e5:	test   eax,eax
  45f0e7:	jl     0x45f174
  45f0ed:	inc    eax
  45f0ee:	mov    DWORD PTR [ebp-0x20],eax
  45f0f1:	mov    DWORD PTR [ebp-0x1c],0x0
  45f0f8:	lea    ecx,[ebp-0x10]
  45f0fb:	mov    edx,DWORD PTR [ebp-0x1c]
  45f0fe:	mov    eax,DWORD PTR [ebp-0x18]
  45f101:	mov    ebx,DWORD PTR [eax]
  45f103:	call   DWORD PTR [ebx+0xc]
  45f106:	push   DWORD PTR [ebp-0x10]
  45f109:	push   0x45f1c8
  45f10e:	push   DWORD PTR [ebp-0x8]
  45f111:	push   0x45f1d4
  45f116:	push   DWORD PTR [ebp-0xc]
  45f119:	lea    eax,[ebp-0x14]
  45f11c:	mov    edx,0x5
  45f121:	call   0x40531c
  45f126:	xor    eax,eax
  45f128:	push   ebp
  45f129:	push   0x45f162
  45f12e:	push   DWORD PTR fs:[eax]
  45f131:	mov    DWORD PTR fs:[eax],esp
  45f134:	mov    eax,DWORD PTR [ebp+0x8]
  45f137:	push   eax
  45f138:	mov    ecx,DWORD PTR [ebp-0x4]
  45f13b:	mov    edx,DWORD PTR [ebp-0x14]
  45f13e:	mov    eax,DWORD PTR [ebp-0x10]
  45f141:	call   0x45e698
  45f146:	test   al,al
  45f148:	je     0x45f158
  45f14a:	mov    eax,DWORD PTR [ebp-0x10]
  45f14d:	call   0x405418
  45f152:	push   eax
  45f153:	call   0x407178
  45f158:	xor    eax,eax
  45f15a:	pop    edx
  45f15b:	pop    ecx
  45f15c:	pop    ecx
  45f15d:	mov    DWORD PTR fs:[eax],edx
  45f160:	jmp    0x45f16c
  45f162:	jmp    0x404568
  45f167:	call   0x404978
  45f16c:	inc    DWORD PTR [ebp-0x1c]
  45f16f:	dec    DWORD PTR [ebp-0x20]
  45f172:	jne    0x45f0f8
  45f174:	xor    eax,eax
  45f176:	pop    edx
  45f177:	pop    ecx
  45f178:	pop    ecx
  45f179:	mov    DWORD PTR fs:[eax],edx
  45f17c:	jmp    0x45f188
  45f17e:	jmp    0x404568
  45f183:	call   0x404978
  45f188:	mov    bl,0x1
  45f18a:	xor    eax,eax
  45f18c:	pop    edx
  45f18d:	pop    ecx
  45f18e:	pop    ecx
  45f18f:	mov    DWORD PTR fs:[eax],edx
  45f192:	push   0x45f1b4
  45f197:	lea    eax,[ebp-0x14]
  45f19a:	mov    edx,0x5
  45f19f:	call   0x404fac
  45f1a4:	lea    eax,[ebp+0xc]
  45f1a7:	call   0x404f88
  45f1ac:	ret    
  45f1ad:	jmp    0x40481c
  45f1b2:	jmp    0x45f197
  45f1b4:	mov    eax,ebx
  45f1b6:	pop    edi
  45f1b7:	pop    esi
  45f1b8:	pop    ebx
  45f1b9:	mov    esp,ebp
  45f1bb:	pop    ebp
  45f1bc:	ret    0x8
  45f1bf:	add    bh,bh
  45f1c1:	(bad)  
  45f1c2:	(bad)  
  45f1c3:	inc    DWORD PTR [ecx]
  45f1c5:	add    BYTE PTR [eax],al
  45f1c7:	add    BYTE PTR [esi],ch
  45f1c9:	add    BYTE PTR [eax],al
  45f1cb:	add    bh,bh
  45f1cd:	(bad)  
  45f1ce:	(bad)  
  45f1cf:	inc    DWORD PTR [ecx]
  45f1d1:	add    BYTE PTR [eax],al
  45f1d3:	add    BYTE PTR [edi+0x0],bl
  45f1d6:	add    BYTE PTR [eax],al
  45f1d8:	push   ebp
  45f1d9:	mov    ebp,esp
  45f1db:	add    esp,0xfffffff0
  45f1de:	push   ebx
  45f1df:	push   esi
  45f1e0:	push   edi
  45f1e1:	xor    ebx,ebx
  45f1e3:	mov    DWORD PTR [ebp-0x10],ebx
  45f1e6:	mov    DWORD PTR [ebp-0xc],ecx
  45f1e9:	mov    DWORD PTR [ebp-0x8],edx
  45f1ec:	mov    DWORD PTR [ebp-0x4],eax
  45f1ef:	xor    eax,eax
  45f1f1:	push   ebp
  45f1f2:	push   0x45f26a
  45f1f7:	push   DWORD PTR fs:[eax]
  45f1fa:	mov    DWORD PTR fs:[eax],esp
  45f1fd:	mov    eax,DWORD PTR [ebp-0xc]
  45f200:	call   0x404f88
  45f205:	mov    esi,0x61e68a94
  45f20a:	mov    eax,DWORD PTR [ebp-0x4]
  45f20d:	mov    edi,DWORD PTR [ebp-0x8]
  45f210:	add    edi,DWORD PTR [ebp-0x4]
  45f213:	dec    edi
  45f214:	sub    edi,eax
  45f216:	jl     0x45f254
  45f218:	inc    edi
  45f219:	lea    ebx,[eax+0x46d82c]
  45f21f:	lea    eax,[ebp-0x10]
  45f222:	movzx  edx,BYTE PTR [ebx]
  45f225:	mov    ecx,esi
  45f227:	shr    ecx,0x8
  45f22a:	xor    dl,cl
  45f22c:	call   0x405170
  45f231:	mov    edx,DWORD PTR [ebp-0x10]
  45f234:	mov    eax,DWORD PTR [ebp-0xc]
  45f237:	call   0x405254
  45f23c:	mov    eax,DWORD PTR [ebp-0xc]
  45f23f:	movzx  eax,BYTE PTR [ebx]
  45f242:	add    esi,eax
  45f244:	mov    eax,DWORD PTR [ebp-0x4]
  45f247:	add    eax,DWORD PTR [ebp-0x8]
  45f24a:	imul   esi,eax
  45f24d:	add    esi,DWORD PTR [ebp-0x8]
  45f250:	inc    ebx
  45f251:	dec    edi
  45f252:	jne    0x45f21f
  45f254:	xor    eax,eax
  45f256:	pop    edx
  45f257:	pop    ecx
  45f258:	pop    ecx
  45f259:	mov    DWORD PTR fs:[eax],edx
  45f25c:	push   0x45f271
  45f261:	lea    eax,[ebp-0x10]
  45f264:	call   0x404f88
  45f269:	ret    
  45f26a:	jmp    0x40481c
  45f26f:	jmp    0x45f261
  45f271:	pop    edi
  45f272:	pop    esi
  45f273:	pop    ebx
  45f274:	mov    esp,ebp
  45f276:	pop    ebp
  45f277:	ret    
  45f278:	push   ebp
  45f279:	mov    ebp,esp
  45f27b:	xor    eax,eax
  45f27d:	push   ebp
  45f27e:	push   0x45f319
  45f283:	push   DWORD PTR fs:[eax]
  45f286:	mov    DWORD PTR fs:[eax],esp
  45f289:	mov    eax,0x4788f4
  45f28e:	call   0x404f88
  45f293:	mov    eax,0x4788f8
  45f298:	call   0x404f88
  45f29d:	mov    eax,0x4788fc
  45f2a2:	call   0x404f88
  45f2a7:	mov    eax,0x478900
  45f2ac:	call   0x404f88
  45f2b1:	mov    eax,0x478904
  45f2b6:	call   0x404f88
  45f2bb:	mov    eax,0x478908
  45f2c0:	call   0x404f88
  45f2c5:	mov    eax,0x47890c
  45f2ca:	call   0x404f88
  45f2cf:	mov    eax,0x478910
  45f2d4:	call   0x404f88
  45f2d9:	mov    eax,0x478a1c
  45f2de:	call   0x404f88
  45f2e3:	mov    eax,0x478a20
  45f2e8:	call   0x404f88
  45f2ed:	mov    eax,0x478a24
  45f2f2:	call   0x404f88
  45f2f7:	mov    eax,0x478a28
  45f2fc:	call   0x404f88
  45f301:	mov    eax,0x478a2c
  45f306:	call   0x404f88
  45f30b:	xor    eax,eax
  45f30d:	pop    edx
  45f30e:	pop    ecx
  45f30f:	pop    ecx
  45f310:	mov    DWORD PTR fs:[eax],edx
  45f313:	push   0x45f320
  45f318:	ret    
  45f319:	jmp    0x40481c
  45f31e:	jmp    0x45f318
  45f320:	pop    ebp
  45f321:	ret    
  45f322:	mov    eax,eax
  45f324:	push   0x0
  45f326:	add    BYTE PTR [eax],al
  45f328:	sub    al,0xf3
  45f32a:	inc    ebp
	...
  45f333:	add    BYTE PTR [eax],al
  45f335:	add    BYTE PTR [esi+0x0],al
  45f338:	test   al,0x6f
  45f33a:	inc    eax
	...
  45f343:	add    BYTE PTR [eax+0x70004600],bl
  45f349:	jae    0x45f38b
	...
  45f35b:	add    BYTE PTR [eax+eax*1-0x1907ffba],ch
  45f362:	inc    eax
	...
  45f36b:	add    BYTE PTR [edx+eax*1-0x498bffba],cl
  45f372:	inc    ecx
	...
  45f39b:	add    ah,bh
  45f39d:	add    al,BYTE PTR [esi+0x0]
  45f3a0:	mov    bh,bh
  45f3a2:	inc    ecx
  45f3a3:	add    BYTE PTR [ebx+eax*1],cl
  45f3a6:	inc    esi
  45f3a7:	add    BYTE PTR [eax+0x1],dl
  45f3aa:	inc    edx
	...
  45f3bb:	add    BYTE PTR [ecx+eax*1],dh
  45f3be:	inc    esi
  45f3bf:	add    BYTE PTR [eax-0x10],cl
  45f3c2:	inc    eax
  45f3c3:	add    BYTE PTR [ecx+eax*1+0x46],al
  45f3c7:	add    BYTE PTR [eax+0x4119],dl
  45f3cd:	add    BYTE PTR [eax],al
  45f3cf:	add    BYTE PTR [eax],al
  45f3d1:	add    BYTE PTR [eax],al
  45f3d3:	add    al,dh
  45f3d5:	add    DWORD PTR [esi+0x0],eax
  45f3d8:	jl     0x45f3fd
  45f3da:	inc    ecx
	...
  45f3e3:	add    al,bh
  45f3e5:	add    DWORD PTR [esi+0x0],eax
  45f3e8:	xor    BYTE PTR [edx+0x41],ch
	...
  45f402:	add    BYTE PTR [eax],al
  45f404:	xchg   esp,eax
  45f405:	add    al,BYTE PTR [esi+0x0]
  45f408:	and    dl,bl
  45f40a:	inc    ecx
	...
  45f41b:	add    BYTE PTR [ebx+eax*1],bl
  45f41e:	inc    esi
  45f41f:	add    BYTE PTR [ebx+esi*1+0x42],bh
  45f423:	add    BYTE PTR [eax+0x3],dl
  45f426:	inc    esi
  45f427:	add    BYTE PTR [eax+0x4244],dh
	...
  45f439:	add    BYTE PTR [eax],al
  45f43b:	add    BYTE PTR [eax+0x14004603],ch
  45f441:	inc    edi
  45f442:	inc    ebx
	...
  45f44b:	add    BYTE PTR [esp+eax*1],bl
  45f44e:	inc    esi
  45f44f:	add    BYTE PTR [eax+0x24004347],cl
  45f455:	add    al,0x46
  45f457:	add    BYTE PTR [ebp+ecx*2+0x43],ch
	...
  45f46b:	add    BYTE PTR [esp+eax*1],ch
  45f46e:	inc    esi
  45f46f:	add    BYTE PTR [ebx+eiz*2],cl
  45f472:	inc    ebx
	...
  45f48b:	add    BYTE PTR [eax*1-0x78dbffba],bl
  45f492:	inc    ebx
  45f493:	add    BYTE PTR [eax*1-0x6fafffba],bh
  45f49a:	inc    ebx
	...
  45f4c3:	add    BYTE PTR [eax+0x3],bh
  45f4c6:	inc    esi
  45f4c7:	add    BYTE PTR [edi+ecx*2],ch
  45f4ca:	inc    edx
	...
  45f4d3:	add    BYTE PTR [ebx+eax*1-0x684bffba],cl
  45f4da:	inc    edx
	...
  45f4f3:	add    BYTE PTR [ebx+eax*1-0x1a3ffba],dl
  45f4fa:	inc    edx
	...
  45f533:	add    BYTE PTR [eax+0x5],dh
  45f536:	inc    esi
  45f537:	add    BYTE PTR [eax+edi*4],bl
  45f53a:	inc    ebx
	...
  45f54b:	add    BYTE PTR [eax+0xc004605],ch
  45f551:	mov    edx,0x43
	...
  45f562:	add    BYTE PTR [eax],al
  45f564:	push   0x14004605
  45f569:	stos   BYTE PTR es:[edi],al
  45f56a:	inc    ebx
	...
  45f583:	add    ah,al
  45f585:	add    eax,0x13f00046
  45f58a:	inc    esp
	...
  45f5db:	add    ah,cl
  45f5dd:	add    eax,0x991c0046
  45f5e2:	inc    esp
	...
  45f633:	add    al,ah
  45f635:	add    eax,0x30680046
  45f63a:	inc    ebp
	...
  45f677:	add    BYTE PTR [eax-0xe],bh
  45f67a:	inc    ebp
	...

Disassembly of section .itext:

00460000 <.itext>:
  460000:	sub    DWORD PTR ds:0x46e5b0,0x1
  460007:	jae    0x460094
  46000d:	call   0x402c7c
  460012:	mov    BYTE PTR ds:0x46100c,0x2
  460019:	mov    DWORD PTR ds:0x46e014,0x40121c
  460023:	mov    DWORD PTR ds:0x46e018,0x40122c
  46002d:	mov    BYTE PTR ds:0x46e046,0x2
  460034:	mov    DWORD PTR ds:0x46e000,0x405f8c
  46003e:	call   0x403e68
  460043:	test   al,al
  460045:	je     0x46004c
  460047:	call   0x403e98
  46004c:	call   0x403f5c
  460051:	mov    WORD PTR ds:0x46e04c,0xd7b0
  46005a:	mov    WORD PTR ds:0x46e218,0xd7b0
  460063:	mov    WORD PTR ds:0x46e3e4,0xd7b0
  46006c:	call   0x40129c
  460071:	mov    ds:0x46e03c,eax
  460076:	call   0x40135c
  46007b:	mov    ds:0x46e038,eax
  460080:	call   0x406fa0
  460085:	mov    ds:0x46e5b4,eax
  46008a:	call   0x401354
  46008f:	mov    ds:0x46e030,eax
  460094:	ret    
  460095:	lea    eax,[eax+0x0]
  460098:	sub    DWORD PTR ds:0x4707f8,0x1
  46009f:	jae    0x4600a8
  4600a1:	xor    eax,eax
  4600a3:	mov    ds:0x4707fc,eax
  4600a8:	ret    
  4600a9:	lea    eax,[eax+0x0]
  4600ac:	push   ebp
  4600ad:	mov    ebp,esp
  4600af:	xor    eax,eax
  4600b1:	push   ebp
  4600b2:	push   0x46011e
  4600b7:	push   DWORD PTR fs:[eax]
  4600ba:	mov    DWORD PTR fs:[eax],esp
  4600bd:	sub    DWORD PTR ds:0x470910,0x1
  4600c4:	jae    0x460110
  4600c6:	mov    eax,0x40e428
  4600cb:	call   0x404c54
  4600d0:	mov    eax,0x40e514
  4600d5:	call   0x404c7c
  4600da:	cmp    BYTE PTR ds:0x4707ed,0x0
  4600e1:	je     0x4600f2
  4600e3:	mov    eax,0x461828
  4600e8:	mov    edx,0x460130
  4600ed:	call   0x404fdc
  4600f2:	call   0x40cf68
  4600f7:	mov    eax,0x40dc9c
  4600fc:	call   0x406938
  460101:	call   0x40d084
  460106:	call   0x40de94
  46010b:	call   0x40d74c
  460110:	xor    eax,eax
  460112:	pop    edx
  460113:	pop    ecx
  460114:	pop    ecx
  460115:	mov    DWORD PTR fs:[eax],edx
  460118:	push   0x460125
  46011d:	ret    
  46011e:	jmp    0x40481c
  460123:	jmp    0x46011d
  460125:	pop    ebp
  460126:	ret    
  460127:	add    bh,bh
  460129:	(bad)  
  46012a:	(bad)  
  46012b:	inc    DWORD PTR [edx]
  46012d:	add    BYTE PTR [eax],al
  46012f:	add    BYTE PTR [eax],dh
  460131:	js     0x460133
  460133:	add    BYTE PTR [ebx+0x4729602d],al
  460139:	add    BYTE PTR [ecx],al
  46013b:	jae    0x460142
  46013d:	call   0x40ed3c
  460142:	ret    
  460143:	nop
  460144:	push   ebp
  460145:	mov    ebp,esp
  460147:	xor    eax,eax
  460149:	push   ebp
  46014a:	push   0x4601e5
  46014f:	push   DWORD PTR fs:[eax]
  460152:	mov    DWORD PTR fs:[eax],esp
  460155:	sub    DWORD PTR ds:0x472984,0x1
  46015c:	jae    0x4601d7
  46015e:	mov    eax,0x472964
  460163:	call   0x411510
  460168:	mov    eax,0x40fb18
  46016d:	mov    ds:0x472974,eax
  460172:	mov    eax,0x40f740
  460177:	mov    ds:0x472978,eax
  46017c:	mov    edx,0x40f650
  460181:	mov    DWORD PTR ds:0x47297c,edx
  460187:	mov    ds:0x472980,eax
  46018c:	mov    eax,0x40fe18
  460191:	mov    edx,DWORD PTR ds:0x46dc9c
  460197:	mov    DWORD PTR [edx],eax
  460199:	mov    eax,0x411204
  46019e:	mov    edx,DWORD PTR ds:0x46da68
  4601a4:	mov    DWORD PTR [edx],eax
  4601a6:	mov    eax,0x41012c
  4601ab:	mov    edx,DWORD PTR ds:0x46dd28
  4601b1:	mov    DWORD PTR [edx],eax
  4601b3:	mov    eax,0x410460
  4601b8:	mov    edx,DWORD PTR ds:0x46de80
  4601be:	mov    DWORD PTR [edx],eax
  4601c0:	mov    eax,0x410b80
  4601c5:	mov    edx,DWORD PTR ds:0x46dd50
  4601cb:	mov    DWORD PTR [edx],eax
  4601cd:	push   0x47298c
  4601d2:	call   0x4072a0
  4601d7:	xor    eax,eax
  4601d9:	pop    edx
  4601da:	pop    ecx
  4601db:	pop    ecx
  4601dc:	mov    DWORD PTR fs:[eax],edx
  4601df:	push   0x4601ec
  4601e4:	ret    
  4601e5:	jmp    0x40481c
  4601ea:	jmp    0x4601e4
  4601ec:	pop    ebp
  4601ed:	ret    
  4601ee:	mov    eax,eax
  4601f0:	sub    DWORD PTR ds:0x4729a4,0x1
  4601f7:	ret    
  4601f8:	push   ebp
  4601f9:	mov    ebp,esp
  4601fb:	xor    eax,eax
  4601fd:	push   ebp
  4601fe:	push   0x460281
  460203:	push   DWORD PTR fs:[eax]
  460206:	mov    DWORD PTR fs:[eax],esp
  460209:	sub    DWORD PTR ds:0x4729b0,0x1
  460210:	jae    0x460273
  460212:	call   0x419964
  460217:	mov    eax,0x41aa28
  46021c:	call   0x406928
  460221:	mov    dl,0x1
  460223:	mov    eax,ds:0x4082f4
  460228:	call   0x40e058
  46022d:	mov    edx,eax
  46022f:	test   edx,edx
  460231:	je     0x460236
  460233:	sub    edx,0xffffffd4
  460236:	mov    eax,0x4729a8
  46023b:	call   0x406ab0
  460240:	mov    dl,0x1
  460242:	mov    eax,ds:0x413514
  460247:	call   0x41373c
  46024c:	mov    ds:0x4729b8,eax
  460251:	mov    dl,0x1
  460253:	mov    eax,ds:0x412844
  460258:	call   0x413ee0
  46025d:	mov    ds:0x4729b4,eax
  460262:	mov    dl,0x1
  460264:	mov    eax,ds:0x412844
  460269:	call   0x413ee0
  46026e:	mov    ds:0x4729c0,eax
  460273:	xor    eax,eax
  460275:	pop    edx
  460276:	pop    ecx
  460277:	pop    ecx
  460278:	mov    DWORD PTR fs:[eax],edx
  46027b:	push   0x460288
  460280:	ret    
  460281:	jmp    0x40481c
  460286:	jmp    0x460280
  460288:	pop    ebp
  460289:	ret    
  46028a:	mov    eax,eax
  46028c:	sub    DWORD PTR ds:0x4729e0,0x1
  460293:	ret    
  460294:	push   ebp
  460295:	mov    ebp,esp
  460297:	add    esp,0xffffffe0
  46029a:	sub    DWORD PTR ds:0x4729e4,0x1
  4602a1:	jae    0x4602d7
  4602a3:	lea    edx,[ebp-0x20]
  4602a6:	mov    eax,ds:0x41be90
  4602ab:	call   0x41b1bc
  4602b0:	lea    eax,[ebp-0x20]
  4602b3:	mov    edx,0x4602dc
  4602b8:	mov    cl,0x20
  4602ba:	call   0x403b60
  4602bf:	jne    0x4602cd
  4602c1:	mov    DWORD PTR ds:0x461b08,0x41d238
  4602cb:	jmp    0x4602d7
  4602cd:	mov    DWORD PTR ds:0x461b08,0x41d240
  4602d7:	mov    esp,ebp
  4602d9:	pop    ebp
  4602da:	ret    
	...
  4602fb:	add    BYTE PTR [ebx+0x472ba02d],al
  460301:	add    BYTE PTR [ecx],al
  460303:	jae    0x46030a
  460305:	call   0x41f8b8
  46030a:	ret    
  46030b:	nop
  46030c:	sub    DWORD PTR ds:0x472ba8,0x1
  460313:	jae    0x46031a
  460315:	call   0x42008c
  46031a:	ret    
  46031b:	nop
  46031c:	sub    DWORD PTR ds:0x472bb0,0x1
  460323:	jae    0x46034c
  460325:	mov    eax,ds:0x46dbe8
  46032a:	mov    edx,DWORD PTR ds:0x421168
  460330:	mov    DWORD PTR [eax],edx
  460332:	mov    eax,ds:0x41be90
  460337:	call   0x41c088
  46033c:	cmp    eax,0x2
  46033f:	jne    0x46034c
  460341:	mov    eax,ds:0x46dcc4
  460346:	mov    DWORD PTR [eax],0x421f4c
  46034c:	ret    
  46034d:	lea    eax,[eax+0x0]
  460350:	sub    DWORD PTR ds:0x472bb8,0x1
  460357:	jae    0x460374
  460359:	mov    eax,ds:0x4211f8
  46035e:	mov    ds:0x461b4c,eax
  460363:	mov    dl,0x1
  460365:	mov    eax,ds:0x41c4bc
  46036a:	call   0x41c164
  46036f:	mov    ds:0x472bbc,eax
  460374:	ret    
  460375:	lea    eax,[eax+0x0]
  460378:	sub    DWORD PTR ds:0x472bc0,0x1
  46037f:	jae    0x46038b
  460381:	mov    eax,0x424f74
  460386:	call   0x404c54
  46038b:	ret    
  46038c:	sub    DWORD PTR ds:0x472bc4,0x1
  460393:	ret    
  460394:	sub    DWORD PTR ds:0x472bc8,0x1
  46039b:	jae    0x4603a7
  46039d:	mov    eax,ds:0x42f3c4
  4603a2:	call   0x427fb4
  4603a7:	ret    
  4603a8:	push   ebp
  4603a9:	mov    ebp,esp
  4603ab:	push   0x0
  4603ad:	push   ebx
  4603ae:	push   esi
  4603af:	push   edi
  4603b0:	xor    eax,eax
  4603b2:	push   ebp
  4603b3:	push   0x46040f
  4603b8:	push   DWORD PTR fs:[eax]
  4603bb:	mov    DWORD PTR fs:[eax],esp
  4603be:	sub    DWORD PTR ds:0x472bcc,0x1
  4603c5:	jae    0x4603f9
  4603c7:	mov    di,0x317
  4603cb:	mov    ebx,0x461b84
  4603d0:	mov    esi,0x472bd0
  4603d5:	lea    ecx,[ebp-0x4]
  4603d8:	mov    edx,DWORD PTR [ebx]
  4603da:	mov    eax,ds:0x41be90
  4603df:	call   0x41b3e0
  4603e4:	mov    edx,DWORD PTR [ebp-0x4]
  4603e7:	mov    eax,esi
  4603e9:	call   0x404fdc
  4603ee:	add    esi,0x4
  4603f1:	add    ebx,0x4
  4603f4:	dec    di
  4603f7:	jne    0x4603d5
  4603f9:	xor    eax,eax
  4603fb:	pop    edx
  4603fc:	pop    ecx
  4603fd:	pop    ecx
  4603fe:	mov    DWORD PTR fs:[eax],edx
  460401:	push   0x460416
  460406:	lea    eax,[ebp-0x4]
  460409:	call   0x404f88
  46040e:	ret    
  46040f:	jmp    0x40481c
  460414:	jmp    0x460406
  460416:	pop    edi
  460417:	pop    esi
  460418:	pop    ebx
  460419:	pop    ecx
  46041a:	pop    ebp
  46041b:	ret    
  46041c:	sub    DWORD PTR ds:0x47382c,0x1
  460423:	ret    
  460424:	sub    DWORD PTR ds:0x473830,0x1
  46042b:	ret    
  46042c:	push   ebp
  46042d:	mov    ebp,esp
  46042f:	push   0x0
  460431:	xor    eax,eax
  460433:	push   ebp
  460434:	push   0x4604f1
  460439:	push   DWORD PTR fs:[eax]
  46043c:	mov    DWORD PTR fs:[eax],esp
  46043f:	sub    DWORD PTR ds:0x47383c,0x1
  460446:	jae    0x4604db
  46044c:	lea    eax,[ebp-0x4]
  46044f:	call   0x4357d8
  460454:	mov    edx,DWORD PTR [ebp-0x4]
  460457:	mov    eax,0x473840
  46045c:	call   0x404fdc
  460461:	push   0x1
  460463:	mov    eax,0x473834
  460468:	mov    ecx,0x1
  46046d:	mov    edx,DWORD PTR ds:0x434e98
  460473:	call   0x4063b0
  460478:	add    esp,0x4
  46047b:	xor    eax,eax
  46047d:	mov    edx,DWORD PTR ds:0x473834
  460483:	test   edx,edx
  460485:	je     0x46048c
  460487:	cmp    eax,DWORD PTR [edx-0x4]
  46048a:	jb     0x460491
  46048c:	call   0x403f68
  460491:	lea    eax,[edx+eax*4]
  460494:	mov    edx,0x460504
  460499:	call   0x404fdc
  46049e:	push   0x1
  4604a0:	mov    eax,0x473838
  4604a5:	mov    ecx,0x1
  4604aa:	mov    edx,DWORD PTR ds:0x434ec4
  4604b0:	call   0x4063b0
  4604b5:	add    esp,0x4
  4604b8:	xor    eax,eax
  4604ba:	mov    edx,DWORD PTR ds:0x473838
  4604c0:	test   edx,edx
  4604c2:	je     0x4604c9
  4604c4:	cmp    eax,DWORD PTR [edx-0x4]
  4604c7:	jb     0x4604ce
  4604c9:	call   0x403f68
  4604ce:	lea    eax,[edx+eax*4]
  4604d1:	mov    edx,0x460514
  4604d6:	call   0x404fdc
  4604db:	xor    eax,eax
  4604dd:	pop    edx
  4604de:	pop    ecx
  4604df:	pop    ecx
  4604e0:	mov    DWORD PTR fs:[eax],edx
  4604e3:	push   0x4604f8
  4604e8:	lea    eax,[ebp-0x4]
  4604eb:	call   0x404f88
  4604f0:	ret    
  4604f1:	jmp    0x40481c
  4604f6:	jmp    0x4604e8
  4604f8:	pop    ecx
  4604f9:	pop    ebp
  4604fa:	ret    
  4604fb:	add    bh,bh
  4604fd:	(bad)  
  4604fe:	(bad)  
  4604ff:	inc    DWORD PTR ds:0x46000000
  460505:	inc    ecx
  460506:	dec    esp
  460507:	push   ebx
  460508:	inc    ebp
  460509:	add    BYTE PTR [eax],al
  46050b:	add    bh,bh
  46050d:	(bad)  
  46050e:	(bad)  
  46050f:	inc    DWORD PTR [eax+eax*1]
  460512:	add    BYTE PTR [eax],al
  460514:	push   esp
  460515:	push   edx
  460516:	push   ebp
  460517:	inc    ebp
  460518:	add    BYTE PTR [eax],al
  46051a:	add    BYTE PTR [eax],al
  46051c:	sub    DWORD PTR ds:0x4738c4,0x1
  460523:	jae    0x46053a
  460525:	mov    ecx,0x473844
  46052a:	mov    edx,DWORD PTR ds:0x46283c
  460530:	mov    eax,ds:0x437834
  460535:	call   0x437934
  46053a:	ret    
  46053b:	nop
  46053c:	sub    DWORD PTR ds:0x4738c8,0x1
  460543:	jae    0x460555
  460545:	mov    edx,DWORD PTR ds:0x438820
  46054b:	mov    eax,0x460560
  460550:	call   0x4389d8
  460555:	ret    
  460556:	add    BYTE PTR [eax],al
  460558:	(bad)  
  460559:	(bad)  
  46055a:	(bad)  
  46055b:	inc    DWORD PTR ds:0x42000000
  460561:	popa   
  460562:	jae    0x4605cd
  460564:	arpl   WORD PTR [eax],ax
  460566:	add    BYTE PTR [eax],al
  460568:	sub    DWORD PTR ds:0x4738cc,0x1
  46056f:	ret    
  460570:	sub    DWORD PTR ds:0x4738d0,0x1
  460577:	jae    0x460594
  460579:	mov    eax,0x4605a0
  46057e:	call   0x41d258
  460583:	mov    dl,0x1
  460585:	mov    eax,ds:0x43b73c
  46058a:	call   0x43b7a4
  46058f:	mov    ds:0x462890,eax
  460594:	ret    
  460595:	add    BYTE PTR [eax],al
  460597:	add    bh,bh
  460599:	(bad)  
  46059a:	(bad)  
  46059b:	inc    DWORD PTR [eax+eax*1]
  46059e:	add    BYTE PTR [eax],al
  4605a0:	dec    ebp
  4605a1:	popa   
  4605a2:	imul   ebp,DWORD PTR [esi+0x0],0x83000000
  4605a9:	sub    eax,0x4738d8
  4605ae:	add    DWORD PTR [ebx+0x11],esi
  4605b1:	mov    dl,0x1
  4605b3:	mov    eax,ds:0x43b924
  4605b8:	call   0x43b9d0
  4605bd:	mov    ds:0x4738d4,eax
  4605c2:	ret    
  4605c3:	nop
  4605c4:	sub    DWORD PTR ds:0x4738dc,0x1
  4605cb:	ret    
  4605cc:	sub    DWORD PTR ds:0x4738e0,0x1
  4605d3:	jae    0x4605dc
  4605d5:	mov    BYTE PTR ds:0x4778e4,0x0
  4605dc:	ret    
  4605dd:	lea    eax,[eax+0x0]
  4605e0:	sub    DWORD PTR ds:0x4778e8,0x1
  4605e7:	jae    0x4605f0
  4605e9:	mov    BYTE PTR ds:0x4788ec,0x0
  4605f0:	ret    
  4605f1:	lea    eax,[eax+0x0]
  4605f4:	push   ebp
  4605f5:	mov    ebp,esp
  4605f7:	mov    ecx,0xc
  4605fc:	push   0x0
  4605fe:	push   0x0
  460600:	dec    ecx
  460601:	jne    0x4605fc
  460603:	push   ebx
  460604:	push   esi
  460605:	push   edi
  460606:	mov    eax,0x45f324
  46060b:	call   0x4070cc
  460610:	xor    eax,eax
  460612:	push   ebp
  460613:	push   0x460aa1
  460618:	push   DWORD PTR fs:[eax]
  46061b:	mov    DWORD PTR fs:[eax],esp
  46061e:	xor    edx,edx
  460620:	push   ebp
  460621:	push   0x460682
  460626:	push   DWORD PTR fs:[edx]
  460629:	mov    DWORD PTR fs:[edx],esp
  46062c:	lea    edx,[ebp-0x14]
  46062f:	mov    eax,0x1
  460634:	call   0x40328c
  460639:	cmp    DWORD PTR [ebp-0x14],0x0
  46063d:	jne    0x460652
  46063f:	push   0x0
  460641:	push   0x460ab0
  460646:	push   0x460ab8
  46064b:	push   0x0
  46064d:	call   0x407350
  460652:	mov    eax,ds:0x46db54
  460657:	mov    edx,0xd63c
  46065c:	call   0x403aec
  460661:	mov    edx,0x460ad4
  460666:	call   0x405738
  46066b:	call   0x403b18
  460670:	call   0x402ffc
  460675:	xor    eax,eax
  460677:	pop    edx
  460678:	pop    ecx
  460679:	pop    ecx
  46067a:	mov    DWORD PTR fs:[eax],edx
  46067d:	jmp    0x460a86
  460682:	jmp    0x404568
  460687:	lea    edx,[ebp-0x18]
  46068a:	mov    eax,0x460ae0
  46068f:	call   0x45dddc
  460694:	mov    edx,DWORD PTR [ebp-0x18]
  460697:	mov    eax,0x478904
  46069c:	call   0x404fdc
  4606a1:	lea    edx,[ebp-0x1c]
  4606a4:	mov    eax,0x460af0
  4606a9:	call   0x45dddc
  4606ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4606b1:	mov    edx,0x460b04
  4606b6:	call   0x4053b0
  4606bb:	jne    0x4606e3
  4606bd:	lea    edx,[ebp-0x20]
  4606c0:	xor    eax,eax
  4606c2:	call   0x40328c
  4606c7:	mov    eax,DWORD PTR [ebp-0x20]
  4606ca:	mov    edx,DWORD PTR ds:0x478904
  4606d0:	call   0x4053b0
  4606d5:	je     0x4606e3
  4606d7:	push   0x0
  4606d9:	call   0x407190
  4606de:	jmp    0x46081f
  4606e3:	lea    edx,[ebp-0x24]
  4606e6:	xor    eax,eax
  4606e8:	call   0x40328c
  4606ed:	mov    eax,DWORD PTR [ebp-0x24]
  4606f0:	mov    edx,DWORD PTR ds:0x478904
  4606f6:	call   0x4053b0
  4606fb:	jne    0x460709
  4606fd:	push   0x64
  4606ff:	call   0x40ddb4
  460704:	jmp    0x46081f
  460709:	push   0x0
  46070b:	push   0x1a
  46070d:	push   0x478914
  460712:	push   0x0
  460714:	call   0x45d79c
  460719:	mov    eax,0x478904
  46071e:	mov    edx,0x478914
  460723:	mov    ecx,0x105
  460728:	call   0x4051f8
  46072d:	mov    eax,0x478904
  460732:	mov    edx,0x460b14
  460737:	call   0x405254
  46073c:	mov    eax,0x478908
  460741:	mov    ecx,0x460b28
  460746:	mov    edx,DWORD PTR ds:0x478904
  46074c:	call   0x4052a0
  460751:	mov    eax,0x478910
  460756:	mov    ecx,0x460b40
  46075b:	mov    edx,DWORD PTR ds:0x478904
  460761:	call   0x4052a0
  460766:	mov    edx,DWORD PTR ds:0x478910
  46076c:	mov    eax,0x460b58
  460771:	call   0x45dd08
  460776:	mov    edx,DWORD PTR ds:0x478908
  46077c:	mov    eax,0x460b68
  460781:	call   0x45dd08
  460786:	mov    eax,ds:0x478904
  46078b:	call   0x409188
  460790:	mov    eax,0x478904
  460795:	mov    edx,0x460b7c
  46079a:	call   0x405254
  46079f:	push   0xffffffff
  4607a1:	mov    eax,ds:0x478904
  4607a6:	call   0x405418
  4607ab:	push   eax
  4607ac:	lea    edx,[ebp-0x28]
  4607af:	xor    eax,eax
  4607b1:	call   0x40328c
  4607b6:	mov    eax,DWORD PTR [ebp-0x28]
  4607b9:	call   0x405418
  4607be:	push   eax
  4607bf:	call   0x407150
  4607c4:	mov    edx,0x460b04
  4607c9:	mov    eax,0x460af0
  4607ce:	call   0x45dd08
  4607d3:	mov    edx,DWORD PTR ds:0x478904
  4607d9:	mov    eax,0x460ae0
  4607de:	call   0x45dd08
  4607e3:	lea    eax,[ebp-0x2c]
  4607e6:	call   0x45edbc
  4607eb:	mov    edx,DWORD PTR [ebp-0x2c]
  4607ee:	mov    eax,0x460b94
  4607f3:	call   0x45dd08
  4607f8:	push   0x5
  4607fa:	push   0x0
  4607fc:	push   0x460b98
  460801:	mov    eax,ds:0x478904
  460806:	call   0x405418
  46080b:	push   eax
  46080c:	push   0x460ba0
  460811:	push   0x0
  460813:	call   0x441438
  460818:	push   0x0
  46081a:	call   0x407190
  46081f:	lea    ecx,[ebp-0x30]
  460822:	mov    edx,0x1f0
  460827:	xor    eax,eax
  460829:	call   0x45f1d8
  46082e:	mov    edx,DWORD PTR [ebp-0x30]
  460831:	mov    eax,0x478a1c
  460836:	call   0x404fdc
  46083b:	xor    eax,eax
  46083d:	push   ebp
  46083e:	push   0x460883
  460843:	push   DWORD PTR fs:[eax]
  460846:	mov    DWORD PTR fs:[eax],esp
  460849:	lea    edx,[ebp-0x3c]
  46084c:	mov    eax,0x460b94
  460851:	call   0x45dddc
  460856:	mov    eax,DWORD PTR [ebp-0x3c]
  460859:	lea    edx,[ebp-0x38]
  46085c:	call   0x45f000
  460861:	mov    eax,DWORD PTR [ebp-0x38]
  460864:	lea    edx,[ebp-0x34]
  460867:	call   0x45ee58
  46086c:	mov    edx,DWORD PTR [ebp-0x34]
  46086f:	mov    eax,0x4788fc
  460874:	call   0x404fdc
  460879:	xor    eax,eax
  46087b:	pop    edx
  46087c:	pop    ecx
  46087d:	pop    ecx
  46087e:	mov    DWORD PTR fs:[eax],edx
  460881:	jmp    0x46088d
  460883:	jmp    0x404568
  460888:	call   0x404978
  46088d:	mov    eax,ds:0x4788fc
  460892:	mov    edx,0x460bb0
  460897:	call   0x4053b0
  46089c:	jne    0x4608a5
  46089e:	push   0x0
  4608a0:	call   0x407190
  4608a5:	xor    eax,eax
  4608a7:	push   ebp
  4608a8:	push   0x46097b
  4608ad:	push   DWORD PTR fs:[eax]
  4608b0:	mov    DWORD PTR fs:[eax],esp
  4608b3:	lea    eax,[ebp-0x40]
  4608b6:	push   eax
  4608b7:	mov    ecx,0x460bc0
  4608bc:	mov    edx,DWORD PTR ds:0x4788fc
  4608c2:	mov    eax,0x460bd0
  4608c7:	call   0x45dea0
  4608cc:	mov    eax,DWORD PTR [ebp-0x40]
  4608cf:	call   0x408b28
  4608d4:	mov    ds:0x4788f0,eax
  4608d9:	lea    eax,[ebp-0x44]
  4608dc:	push   eax
  4608dd:	mov    ecx,0x460be0
  4608e2:	mov    edx,DWORD PTR ds:0x4788fc
  4608e8:	mov    eax,0x460bf0
  4608ed:	call   0x45dea0
  4608f2:	mov    edx,DWORD PTR [ebp-0x44]
  4608f5:	mov    eax,0x478900
  4608fa:	call   0x404fdc
  4608ff:	lea    eax,[ebp-0x48]
  460902:	push   eax
  460903:	mov    ecx,0x460c00
  460908:	mov    edx,DWORD PTR ds:0x4788fc
  46090e:	mov    eax,0x460c14
  460913:	call   0x45dea0
  460918:	mov    edx,DWORD PTR [ebp-0x48]
  46091b:	mov    eax,0x478a2c
  460920:	call   0x404fdc
  460925:	lea    eax,[ebp-0x4c]
  460928:	push   eax
  460929:	mov    ecx,0x460c28
  46092e:	mov    edx,DWORD PTR ds:0x4788fc
  460934:	mov    eax,0x460c38
  460939:	call   0x45dea0
  46093e:	mov    edx,DWORD PTR [ebp-0x4c]
  460941:	mov    eax,0x4788f4
  460946:	call   0x404fdc
  46094b:	lea    eax,[ebp-0x50]
  46094e:	push   eax
  46094f:	mov    ecx,0x460c48
  460954:	mov    edx,DWORD PTR ds:0x4788fc
  46095a:	mov    eax,0x460c5c
  46095f:	call   0x45dea0
  460964:	mov    edx,DWORD PTR [ebp-0x50]
  460967:	mov    eax,0x4788f8
  46096c:	call   0x404fdc
  460971:	xor    eax,eax
  460973:	pop    edx
  460974:	pop    ecx
  460975:	pop    ecx
  460976:	mov    DWORD PTR fs:[eax],edx
  460979:	jmp    0x46098c
  46097b:	jmp    0x404568
  460980:	push   0x0
  460982:	call   0x407190
  460987:	call   0x404978
  46098c:	cmp    DWORD PTR ds:0x4788f4,0x0
  460993:	je     0x4609a7
  460995:	cmp    DWORD PTR ds:0x478900,0x0
  46099c:	je     0x4609a7
  46099e:	cmp    DWORD PTR ds:0x4788f8,0x0
  4609a5:	jne    0x4609ae
  4609a7:	push   0x0
  4609a9:	call   0x407190
  4609ae:	xor    eax,eax
  4609b0:	push   ebp
  4609b1:	push   0x460a77
  4609b6:	push   DWORD PTR fs:[eax]
  4609b9:	mov    DWORD PTR fs:[eax],esp
  4609bc:	xor    eax,eax
  4609be:	push   ebp
  4609bf:	push   0x460a01
  4609c4:	push   DWORD PTR fs:[eax]
  4609c7:	mov    DWORD PTR fs:[eax],esp
  4609ca:	lea    ecx,[ebp-0x54]
  4609cd:	mov    edx,DWORD PTR ds:0x478a2c
  4609d3:	mov    eax,ds:0x4788f8
  4609d8:	call   0x45d7a4
  4609dd:	mov    eax,DWORD PTR [ebp-0x54]
  4609e0:	push   eax
  4609e1:	lea    edx,[ebp-0x58]
  4609e4:	mov    eax,0x460b58
  4609e9:	call   0x45dddc
  4609ee:	mov    eax,DWORD PTR [ebp-0x58]
  4609f1:	pop    edx
  4609f2:	call   0x45dff8
  4609f7:	xor    eax,eax
  4609f9:	pop    edx
  4609fa:	pop    ecx
  4609fb:	pop    ecx
  4609fc:	mov    DWORD PTR fs:[eax],edx
  4609ff:	jmp    0x460a0b
  460a01:	jmp    0x404568
  460a06:	call   0x404978
  460a0b:	mov    eax,ds:0x478a2c
  460a10:	push   eax
  460a11:	lea    edx,[ebp-0x5c]
  460a14:	mov    eax,0x460b68
  460a19:	call   0x45dddc
  460a1e:	mov    edx,DWORD PTR [ebp-0x5c]
  460a21:	mov    ecx,DWORD PTR ds:0x4788f8
  460a27:	mov    eax,ds:0x478a1c
  460a2c:	call   0x45eba8
  460a31:	test   al,al
  460a33:	je     0x460a6d
  460a35:	lea    edx,[ebp-0x60]
  460a38:	mov    eax,0x460b68
  460a3d:	call   0x45dddc
  460a42:	mov    eax,DWORD PTR [ebp-0x60]
  460a45:	push   eax
  460a46:	mov    eax,ds:0x4788f0
  460a4b:	push   eax
  460a4c:	mov    ecx,DWORD PTR ds:0x478900
  460a52:	mov    edx,DWORD PTR ds:0x4788f8
  460a58:	mov    eax,ds:0x4788f4
  460a5d:	call   0x45f06c
  460a62:	test   al,al
  460a64:	je     0x460a6d
  460a66:	push   0x0
  460a68:	call   0x407190
  460a6d:	xor    eax,eax
  460a6f:	pop    edx
  460a70:	pop    ecx
  460a71:	pop    ecx
  460a72:	mov    DWORD PTR fs:[eax],edx
  460a75:	jmp    0x460a81
  460a77:	jmp    0x404568
  460a7c:	call   0x404978
  460a81:	call   0x404978
  460a86:	xor    eax,eax
  460a88:	pop    edx
  460a89:	pop    ecx
  460a8a:	pop    ecx
  460a8b:	mov    DWORD PTR fs:[eax],edx
  460a8e:	push   0x460aa8
  460a93:	lea    eax,[ebp-0x60]
  460a96:	mov    edx,0x14
  460a9b:	call   0x404fac
  460aa0:	ret    
  460aa1:	jmp    0x40481c
  460aa6:	jmp    0x460a93
  460aa8:	pop    edi
  460aa9:	pop    esi
  460aaa:	pop    ebx
  460aab:	call   0x404dc0
  460ab0:	into   
  460ab1:	clc    
  460ab2:	call   0x2f26f598
  460ab7:	add    BYTE PTR [ecx-0x10],al
  460aba:	js     0x460aa4
  460abc:	loop   0x460ade
  460abe:	out    dx,eax
  460abf:	outs   dx,DWORD PTR ds:[esi]
  460ac0:	loop   0x460ab2
  460ac2:	gs out 0xe4,al
  460ac5:	gs in  eax,dx
  460ac7:	add    BYTE PTR cs:[eax],al
  460aca:	add    BYTE PTR [eax],al
  460acc:	(bad)  
  460acd:	(bad)  
  460ace:	(bad)  
  460acf:	inc    DWORD PTR [edx]
  460ad1:	add    BYTE PTR [eax],al
  460ad3:	add    BYTE PTR [edi+0x66],ah
  460ad6:	add    BYTE PTR [eax],al
  460ad8:	(bad)  
  460ad9:	(bad)  
  460ada:	(bad)  
  460adb:	inc    DWORD PTR [eax+eax*1]
  460ade:	add    BYTE PTR [eax],al
  460ae0:	jo     0x460b43
  460ae2:	je     0x460b4c
  460ae4:	add    BYTE PTR [eax],al
  460ae6:	add    BYTE PTR [eax],al
  460ae8:	(bad)  
  460ae9:	(bad)  
  460aea:	(bad)  
  460aeb:	dec    DWORD PTR [ecx]
  460aed:	add    BYTE PTR [eax],al
  460aef:	add    BYTE PTR [ecx+0x6e],ch
  460af2:	jae    0x460b68
  460af4:	popa   
  460af5:	ins    BYTE PTR es:[edi],dx
  460af6:	ins    BYTE PTR es:[edi],dx
  460af7:	gs add BYTE PTR fs:[eax],al
  460afb:	add    bh,bh
  460afd:	(bad)  
  460afe:	(bad)  
  460aff:	inc    DWORD PTR [eax+eax*1]
  460b02:	add    BYTE PTR [eax],al
  460b04:	je     0x460b78
  460b06:	jne    0x460b6d
  460b08:	add    BYTE PTR [eax],al
  460b0a:	add    BYTE PTR [eax],al
  460b0c:	(bad)  
  460b0d:	(bad)  
  460b0e:	(bad)  
  460b0f:	dec    DWORD PTR [ebx]
  460b11:	add    BYTE PTR [eax],al
  460b13:	add    BYTE PTR [ebp+eiz*2+0x63],bl
  460b17:	outs   dx,BYTE PTR ds:[esi]
  460b18:	jb     0x460b93
  460b1a:	jo     0x460b90
  460b1c:	outs   dx,DWORD PTR ds:[esi]
  460b1d:	jb     0x460b7b
  460b1f:	add    bh,bh
  460b21:	(bad)  
  460b22:	(bad)  
  460b23:	dec    DWORD PTR ds:0x66000000
  460b29:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x7473696c
  460b31:	cs je  0x460bac
  460b34:	je     0x460b36
  460b36:	add    BYTE PTR [eax],al
  460b38:	(bad)  
  460b39:	(bad)  
  460b3a:	(bad)  
  460b3b:	dec    DWORD PTR [eax+eax*1]
  460b3e:	add    BYTE PTR [eax],al
  460b40:	ins    DWORD PTR es:[edi],dx
  460b41:	gs jae 0x460bb7
  460b44:	popa   
  460b45:	addr16 gs cs push 0x6c6d74
  460b4d:	add    BYTE PTR [eax],al
  460b4f:	add    bh,bh
  460b51:	(bad)  
  460b52:	(bad)  
  460b53:	inc    DWORD PTR [edi]
  460b55:	add    BYTE PTR [eax],al
  460b57:	add    BYTE PTR [ebp+0x65],ch
  460b5a:	jae    0x460bcf
  460b5c:	popa   
  460b5d:	addr16 gs add bh,bh
  460b61:	(bad)  
  460b62:	(bad)  
  460b63:	dec    DWORD PTR [ecx]
  460b65:	add    BYTE PTR [eax],al
  460b67:	add    BYTE PTR [esi+0x69],al
  460b6a:	ins    BYTE PTR es:[edi],dx
  460b6b:	gs jae 0x460bba
  460b6e:	imul   esi,DWORD PTR [ebx+0x74],0xff000000
  460b75:	(bad)  
  460b76:	(bad)  
  460b77:	dec    DWORD PTR [esi]
  460b79:	add    BYTE PTR [eax],al
  460b7b:	add    BYTE PTR [edx+0x69],bh
  460b7e:	jo     0x460be1
  460b80:	jb     0x460be5
  460b82:	push   0x2e657669
  460b87:	gs js  0x460bef
  460b8a:	add    BYTE PTR [eax],al
  460b8c:	(bad)  
  460b8d:	(bad)  
  460b8e:	(bad)  
  460b8f:	inc    DWORD PTR [edx]
  460b91:	add    BYTE PTR [eax],al
  460b93:	add    BYTE PTR [ecx+0x44],cl
  460b96:	add    BYTE PTR [eax],al
  460b98:	and    BYTE PTR ds:0x72617473,ch
  460b9e:	je     0x460ba0
  460ba0:	outs   dx,DWORD PTR ds:[esi]
  460ba1:	jo     0x460c08
  460ba3:	outs   dx,BYTE PTR ds:[esi]
  460ba4:	add    BYTE PTR [eax],al
  460ba6:	add    BYTE PTR [eax],al
  460ba8:	(bad)  
  460ba9:	(bad)  
  460baa:	(bad)  
  460bab:	inc    DWORD PTR ds:0x66000000
  460bb1:	popa   
  460bb2:	ins    BYTE PTR es:[edi],dx
  460bb3:	jae    0x460c1a
  460bb5:	add    BYTE PTR [eax],al
  460bb7:	add    bh,bh
  460bb9:	(bad)  
  460bba:	(bad)  
  460bbb:	inc    DWORD PTR [edi]
  460bbd:	add    BYTE PTR [eax],al
  460bbf:	add    BYTE PTR [edi+ebp*1],bh
  460bc2:	je     0x460c3d
  460bc4:	jo     0x460c2b
  460bc6:	ds add bh,bh
  460bc9:	(bad)  
  460bca:	(bad)  
  460bcb:	inc    DWORD PTR [esi]
  460bcd:	add    BYTE PTR [eax],al
  460bcf:	add    BYTE PTR [esp+esi*2],bh
  460bd2:	jns    0x460c44
  460bd4:	gs add BYTE PTR ds:[eax],al
  460bd8:	(bad)  
  460bd9:	(bad)  
  460bda:	(bad)  
  460bdb:	inc    DWORD PTR [esi]
  460bdd:	add    BYTE PTR [eax],al
  460bdf:	add    BYTE PTR [edi+ebp*1],bh
  460be2:	gs js  0x460c59
  460be5:	add    BYTE PTR ds:[eax],al
  460be8:	(bad)  
  460be9:	(bad)  
  460bea:	(bad)  
  460beb:	inc    DWORD PTR ds:0x3c000000
  460bf1:	gs js  0x460c68
  460bf4:	add    BYTE PTR ds:[eax],al
  460bf7:	add    bh,bh
  460bf9:	(bad)  
  460bfa:	(bad)  
  460bfb:	dec    DWORD PTR [ecx]
  460bfd:	add    BYTE PTR [eax],al
  460bff:	add    BYTE PTR [edi+ebp*1],bh
  460c02:	ja     0x460c65
  460c04:	ins    BYTE PTR es:[edi],dx
  460c05:	ins    BYTE PTR es:[edi],dx
  460c06:	gs je  0x460c47
  460c09:	add    BYTE PTR [eax],al
  460c0b:	add    bh,bh
  460c0d:	(bad)  
  460c0e:	(bad)  
  460c0f:	dec    DWORD PTR [eax]
  460c11:	add    BYTE PTR [eax],al
  460c13:	add    BYTE PTR [edi+esi*2],bh
  460c16:	popa   
  460c17:	ins    BYTE PTR es:[edi],dx
  460c18:	ins    BYTE PTR es:[edi],dx
  460c19:	gs je  0x460c5a
  460c1c:	add    BYTE PTR [eax],al
  460c1e:	add    BYTE PTR [eax],al
  460c20:	(bad)  
  460c21:	(bad)  
  460c22:	(bad)  
  460c23:	inc    DWORD PTR [esi]
  460c25:	add    BYTE PTR [eax],al
  460c27:	add    BYTE PTR [edi+ebp*1],bh
  460c2a:	imul   esp,DWORD PTR [ebp+0x79],0x3e
  460c2e:	add    BYTE PTR [eax],al
  460c30:	(bad)  
  460c31:	(bad)  
  460c32:	(bad)  
  460c33:	inc    DWORD PTR ds:0x3c000000
  460c39:	imul   esp,DWORD PTR [ebp+0x79],0x3e
  460c3d:	add    BYTE PTR [eax],al
  460c3f:	add    bh,bh
  460c41:	(bad)  
  460c42:	(bad)  
  460c43:	dec    DWORD PTR [eax]
  460c45:	add    BYTE PTR [eax],al
  460c47:	add    BYTE PTR [edi+ebp*1],bh
  460c4a:	gs ins DWORD PTR es:[edi],dx
  460c4c:	popa   
  460c4d:	imul   ebp,DWORD PTR [esi+edi*1+0x0],0xff000000
  460c55:	(bad)  
  460c56:	(bad)  
  460c57:	inc    DWORD PTR [edi]
  460c59:	add    BYTE PTR [eax],al
  460c5b:	add    BYTE PTR [eiz*2+0x6c69616d],bh
  460c62:	ds
	...
