
8cdd84911dbcfdabfa04ef6989abfc76fbd8bc421bb4d05a1244805709492a2e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	dec    esi
  4018d8:	das    
  4018d9:	sub    ah,bl
  4018db:	add    DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	lock jno 0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	daa    
  401987:	pusha  
  401988:	push   ss
  401989:	clc    
  40198a:	mov    edx,0xff70cc2b
  40198f:	pop    ebp
  401990:	(bad)  
  401991:	ficom  WORD PTR [eax]
  401993:	mov    bl,0xef
  401995:	push   edx
  401996:	push   ebx
  401997:	sahf   
  401998:	xchg   ebx,eax
  401999:	cmp    eax,0xffcf27b3
  40199e:	nop
  40199f:	and    eax,0xc5183f0a
  4019a4:	pushf  
  4019a5:	adc    BYTE PTR [edx+0x20],cl
  4019a8:	imul   ebx,DWORD PTR [edx+0x5246af26],0xfffffff6
  4019af:	mov    gs,ebp
  4019b1:	dec    ecx
  4019b2:	loope  0x4019bb
  4019b4:	xor    ch,BYTE PTR [eax]
  4019b6:	fcomip st,st(1)
  4019b8:	sub    DWORD PTR [ecx-0x616dbeb7],ebp
  4019be:	das    
  4019bf:	pop    ebx
  4019c0:	and    esp,esp
  4019c2:	mov    eax,ds:0x5faf9cc2
  4019c7:	adc    cl,BYTE PTR [esi]
  4019c9:	aad    0x97
  4019cb:	cmp    DWORD PTR ds:0xf58a06b9,edx
  4019d1:	cwde   
  4019d2:	data16 lods al,BYTE PTR ds:[esi]
  4019d4:	int3   
  4019d5:	sahf   
  4019d6:	adc    edi,DWORD PTR [esi-0x63]
  4019d9:	addr16 pop edi
  4019db:	mov    dh,0x65
  4019dd:	(bad)  
  4019de:	icebp  
  4019df:	add    DWORD PTR [esi],0xdb09bd3c
  4019e5:	pusha  
  4019e6:	xchg   ebp,eax
  4019e7:	retf   0xdc36
  4019ea:	jle    0x4019b6
  4019ec:	aam    0x11
  4019ee:	add    BYTE PTR [eax],bl
  4019f0:	push   cs
  4019f1:	call   0x53fecf65
  4019f6:	addr16 aaa 
  4019f8:	adc    al,0xe9
  4019fa:	fld    QWORD PTR [edi-0x198959a8]
  401a00:	and    eax,0xf8fc3a47
  401a05:	push   ss
  401a06:	add    BYTE PTR [edi-0x72abd131],0xc7
  401a0d:	ret    0xa598
  401a10:	clc    
  401a11:	cmp    eax,0xabe29435
  401a16:	inc    ebx
  401a17:	loope  0x401a8e
  401a19:	dec    esi
  401a1a:	inc    ebp
  401a1b:	stos   BYTE PTR es:[edi],al
  401a1c:	aad    0xba
  401a1e:	mov    ds:0x80bbc411,al
  401a23:	adc    DWORD PTR [ebp-0x7fe77479],esp
  401a29:	cld    
  401a2a:	sub    eax,0x9e529ce4
  401a2f:	mov    edi,0x316c64af
  401a34:	inc    esp
  401a35:	shr    BYTE PTR [edx],1
  401a37:	adc    bl,BYTE PTR [eax+0x751d6877]
  401a3d:	xchg   ebp,eax
  401a3e:	xor    eax,0xc2a1f358
  401a43:	fiadd  WORD PTR es:[esi+0x47]
  401a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a48:	lds    eax,FWORD PTR [eax]
  401a4a:	add    bh,BYTE PTR [ebx]
  401a4c:	xchg   esp,eax
  401a4d:	inc    ebx
  401a4e:	xor    eax,0x85b02f4
  401a53:	add    DWORD PTR [edx],edx
  401a55:	add    eax,0x40a79515
  401a5a:	push   edx
  401a5b:	jae    0x401ad9
  401a5d:	or     eax,0x7249cf07
  401a62:	ret    
  401a63:	push   ss
  401a64:	out    dx,eax
  401a65:	or     BYTE PTR [edi-0x600d1868],dl
  401a6b:	sbb    bh,BYTE PTR [ebx]
  401a6d:	nop
  401a6e:	sub    BYTE PTR [ebp-0x260053d1],dl
  401a74:	mov    eax,0x48d09144
  401a79:	inc    esi
  401a7a:	addr16 and eax,0xc1d86118
  401a80:	cmp    dh,BYTE PTR [bp+di]
  401a83:	sbb    eax,ecx
  401a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a87:	adc    DWORD PTR [ebx-0x42],0x8a09629d
  401a8e:	adc    DWORD PTR [ecx-0x5d],eax
  401a91:	xchg   esp,eax
  401a92:	and    edx,DWORD PTR [edi-0x68]
  401a95:	adc    al,0xa0
  401a97:	push   ebx
  401a98:	outs   dx,DWORD PTR ds:[esi]
  401a99:	leave  
  401a9a:	xor    eax,0xcb8e1cb6
  401a9f:	inc    esp
  401aa0:	fsubr  QWORD PTR [edi]
  401aa2:	jnp    0x401ae6
  401aa4:	dec    edi
  401aa5:	data16 and dl,ch
  401aa8:	push   edi
  401aa9:	sbb    BYTE PTR [ebx+0x6f],cl
  401aac:	xchg   edx,eax
  401aad:	fwait
  401aae:	fwait
  401aaf:	in     al,dx
  401ab0:	inc    ebp
  401ab1:	mov    ebx,0xa2acf153
  401ab6:	cdq    
  401ab7:	mov    ch,0x23
  401ab9:	and    al,0x3e
  401abb:	popa   
  401abc:	dec    edi
  401abd:	scas   eax,DWORD PTR es:[edi]
  401abe:	jbe    0x401a96
  401ac0:	call   0x965a1e77
  401ac5:	mov    ebp,0x77617c67
  401aca:	or     eax,esi
  401acc:	popa   
  401acd:	adc    esi,DWORD PTR [ebx-0x650cd735]
  401ad3:	adc    eax,DWORD PTR [ebp-0x38cb0471]
  401ad9:	push   cs
  401ada:	push   cs
  401adb:	js     0x401b55
  401add:	xchg   ebx,eax
  401ade:	push   0xffffffea
  401ae0:	movhps QWORD PTR [ebx],xmm0
  401ae3:	adc    al,0x85
  401ae5:	xor    DWORD PTR [ebx+0x3433dc0f],ecx
  401aeb:	sbb    al,0xae
  401aed:	in     al,dx
  401aee:	fcmovbe st,st(1)
  401af0:	jp     0x401b17
  401af2:	sub    ch,dl
  401af4:	cs pop edx
  401af6:	xchg   edi,eax
  401af7:	outs   dx,DWORD PTR ds:[esi]
  401af8:	jbe    0x401b05
  401afa:	push   es
  401afb:	bound  edi,QWORD PTR [eax]
  401afd:	test   al,0x10
  401aff:	mov    ebx,0xc9a7689b
  401b04:	lods   al,BYTE PTR ds:[esi]
  401b05:	(bad)  
  401b06:	clc    
  401b07:	cs xchg edx,eax
  401b09:	test   DWORD PTR [edx],eax
  401b0b:	hlt    
  401b0c:	adc    BYTE PTR [esi],dh
  401b0e:	adc    al,0xbb
  401b10:	jns    0x401afb
  401b12:	(bad)  
  401b13:	test   al,0xe
  401b15:	sub    ebx,eax
  401b17:	push   ss
  401b18:	xchg   ebp,eax
  401b19:	jle    0x401b12
  401b1b:	hlt    
  401b1c:	repnz retf 
  401b1e:	xor    al,0x5a
  401b20:	fcomi  st,st(0)
  401b22:	mov    ecx,0xcf73dc66
  401b27:	push   DWORD PTR [ebp-0x48]
  401b2a:	enter  0xd728,0x18
  401b2e:	mov    al,0x20
  401b30:	nop
  401b31:	repnz imul edi,DWORD PTR [ebx],0x1b01e1d0
  401b38:	data16 mov ds:0xf8bdf21b,al
  401b3e:	fistp  WORD PTR [ebx-0x13cd0d4e]
  401b44:	xchg   edx,eax
  401b45:	xchg   BYTE PTR [ebx+0x2a],ah
  401b48:	shl    BYTE PTR [eax-0x7a],cl
  401b4b:	sbb    DWORD PTR [ebx],esi
  401b4d:	cs sbb al,0xdb
  401b50:	dec    ecx
  401b51:	repz pusha 
  401b53:	fst    st(1)
  401b55:	push   ss
  401b56:	inc    ecx
  401b57:	rcr    DWORD PTR cs:[ecx+0x3c],0x93
  401b5c:	add    al,0xa
  401b5e:	cmp    dh,bl
  401b60:	push   ds
  401b61:	xchg   BYTE PTR [ecx-0x40204b41],bh
  401b67:	mov    ecx,0xc2a6bfec
  401b6c:	pop    es
  401b6d:	ins    BYTE PTR es:[edi],dx
  401b6e:	jbe    0x401b92
  401b70:	jno    0x401b91
  401b72:	pop    edx
  401b73:	call   0x9846:0x8ac91a35
  401b7a:	inc    esi
  401b7b:	pop    esi
  401b7c:	js     0x401b62
  401b7e:	aaa    
  401b7f:	pop    edx
  401b80:	repz push cs
  401b82:	jecxz  0x401b2e
  401b84:	data16 jae 0x401b67
  401b87:	fld    TBYTE PTR [esi+ebx*1-0x39a0e51e]
  401b8e:	push   es
  401b8f:	das    
  401b90:	adc    BYTE PTR [eax],dh
  401b92:	ret    
  401b93:	pop    esi
  401b94:	fidiv  DWORD PTR [edx-0x67]
  401b97:	in     eax,0x37
  401b99:	clc    
  401b9a:	sbb    edx,0x4a
  401b9d:	(bad)  
  401b9e:	cmp    eax,0xe91decc9
  401ba3:	ss stc 
  401ba5:	inc    edx
  401ba6:	fiadd  WORD PTR [ebp+0x7cfb8c04]
  401bac:	pop    esi
  401bad:	inc    edx
  401bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401baf:	mov    al,0x3d
  401bb1:	ror    DWORD PTR [ebp-0x2ab074cb],1
  401bb7:	outs   dx,DWORD PTR ds:[esi]
  401bb8:	jbe    0x401c20
  401bba:	push   ss
  401bbb:	pop    esp
  401bbc:	sbb    dl,BYTE PTR [edi+0x43044e6a]
  401bc2:	mov    dl,BYTE PTR [eax]
  401bc4:	jl     0x401b91
  401bc6:	pop    ebx
  401bc7:	xchg   DWORD PTR [esi+0x65280368],ebp
  401bcd:	out    0x7e,eax
  401bcf:	ds loop 0x401b9a
  401bd2:	adc    dh,bl
  401bd4:	pop    edi
  401bd5:	inc    ecx
  401bd6:	mov    ah,BYTE PTR [edi-0x3e29b657]
  401bdc:	nop
  401bdd:	(bad)
  401be0:	out    0x11,eax
  401be2:	les    esi,FWORD PTR [edi+ecx*1-0x50a06207]
  401be9:	push   edi
  401bea:	jge    0x401be5
  401bec:	fs pop esp
  401bee:	pop    edx
  401bef:	adc    eax,0x9e5ab30e
  401bf4:	sti    
  401bf5:	pop    eax
  401bf6:	fidivr DWORD PTR ds:0x8d781a95
  401bfc:	jns    0x401c43
  401bfe:	vhaddps xmm5,xmm7,XMMWORD PTR [ebp-0x2ac107]
  401c06:	cld    
  401c07:	mov    DWORD PTR [ebp-0x34],edx
  401c0a:	(bad)  [esi-0x30b6300f]
  401c10:	mov    esi,?
  401c12:	ja     0x401ba2
  401c14:	(bad)  
  401c15:	leave  
  401c16:	out    dx,al
  401c17:	ror    BYTE PTR [eax-0x7f],1
  401c1a:	test   al,0x12
  401c1c:	and    ebx,esi
  401c1e:	or     DWORD PTR [ebx],0xfffffff0
  401c21:	jle    0x401c97
  401c23:	push   esp
  401c24:	(bad)  
  401c26:	(bad)  
  401c27:	push   ebp
  401c28:	sub    eax,0xe615038a
  401c2d:	(bad)  
  401c2e:	and    al,0x19
  401c30:	in     eax,0x53
  401c32:	(bad)  
  401c33:	sbb    esi,eax
  401c35:	mov    ebx,0x9d8d1e9b
  401c3a:	push   ss
  401c3b:	fistp  WORD PTR [ecx-0x15]
  401c3e:	pop    eax
  401c3f:	js     0x401bd7
  401c41:	ja     0x401cbe
  401c43:	fcom   QWORD PTR [ebx]
  401c45:	test   eax,0x25b299c
  401c4a:	push   ebx
  401c4b:	imul   DWORD PTR [edi]
  401c4d:	cmp    DWORD PTR [ebp+0x5e774379],edx
  401c53:	jecxz  0x401c46
  401c55:	mov    ds:0x3d1b89e,al
  401c5a:	pop    eax
  401c5b:	loopne 0x401c4c
  401c5d:	push   eax
  401c5e:	add    ax,0xb3eb
  401c62:	sbb    DWORD PTR [eax+0x2de30704],edx
  401c68:	fiadd  WORD PTR [ecx+0x20]
  401c6b:	adc    al,0x36
  401c6d:	xor    edi,DWORD PTR ds:0x1539169e
  401c73:	cli    
  401c74:	(bad)  
  401c75:	mov    edx,0x7a0cb55f
  401c7a:	cmc    
  401c7b:	lods   al,BYTE PTR ds:[esi]
  401c7c:	imul   ebp,edx,0xf5a6993c
  401c82:	fist   WORD PTR es:[eax-0x56d828c3]
  401c89:	cld    
  401c8a:	inc    edx
  401c8b:	cwde   
  401c8c:	in     al,dx
  401c8d:	in     al,dx
  401c8e:	lds    esp,FWORD PTR [eax+ecx*4-0x367e14fc]
  401c95:	ds and al,0x8a
  401c98:	lock mov eax,0x6c6e1215
  401c9e:	xor    ebp,DWORD PTR [ebx]
  401ca0:	dec    eax
  401ca1:	mov    DWORD PTR [esi+0x43f2f0cf],ecx
  401ca7:	push   ebx
  401ca8:	in     eax,0x1
  401caa:	mov    ebp,0x63e2567a
  401caf:	inc    edi
  401cb0:	mov    ebx,0xfde32eb
  401cb5:	mov    ecx,0x5c868c22
  401cba:	jle    0x401cf0
  401cbc:	xor    ah,bl
  401cbe:	out    dx,eax
  401cbf:	inc    ecx
  401cc0:	adc    bh,0x93
  401cc3:	ret    0xabb4
  401cc6:	popa   
  401cc7:	push   cs
  401cc8:	pop    ebx
  401cc9:	lahf   
  401cca:	call   0xa8b1:0x759cefb3
  401cd1:	test   al,0x52
  401cd4:	call   0x8082c26f
  401cd9:	lds    esi,FWORD PTR [ecx]
  401cdb:	mov    ecx,0x9f61b37b
  401ce0:	leave  
  401ce1:	or     eax,0xc51dbd8d
  401ce6:	into   
  401ce7:	dec    esp
  401ce8:	in     eax,dx
  401ce9:	mov    eax,ds:0x91cfc02e
  401cee:	data16 test BYTE PTR es:[edx-0x7f74533c],al
  401cf6:	pop    esi
  401cf7:	push   ebx
  401cf8:	jns    0x401d40
  401cfa:	add    esp,ecx
  401cfc:	fdiv   DWORD PTR [edi]
  401cfe:	mov    eax,0xe868dc94
  401d03:	int    0xe7
  401d05:	or     DWORD PTR [eax+0x4a],0x69
  401d09:	popf   
  401d0a:	(bad)  
  401d0b:	cdq    
  401d0c:	mov    ds:0x38a4f60c,al
  401d11:	fnstsw WORD PTR [edx]
  401d13:	stc    
  401d14:	jle    0x401ccb
  401d16:	fistp  WORD PTR [ebp-0x217449]
  401d1c:	jecxz  0x401cba
  401d1e:	xchg   esi,eax
  401d1f:	stc    
  401d20:	js     0x401cc5
  401d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d23:	es jg  0x401d77
  401d26:	aas    
  401d27:	pop    ecx
  401d28:	xor    BYTE PTR [edi],0xd8
  401d2b:	pop    esp
  401d2c:	adc    eax,0xc8bedda0
  401d31:	sub    DWORD PTR [eax],ebp
  401d33:	push   edx
  401d34:	imul   edi,DWORD PTR [edi+0x78],0x2610955
  401d3b:	mov    eax,ds:0x4a37e2d7
  401d40:	(bad)  
  401d41:	dec    eax
  401d42:	aad    0xed
  401d44:	jb     0x401d51
  401d46:	adc    DWORD PTR [edx],ecx
  401d48:	jne    0x401d1e
  401d4a:	add    al,0xf9
  401d4c:	pop    edi
  401d4d:	not    BYTE PTR [edi-0x53d8cb5c]
  401d53:	pop    eax
  401d54:	pop    es
  401d55:	adc    eax,0xf79adc4b
  401d5a:	in     al,dx
  401d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d5c:	cld    
  401d5d:	sbb    BYTE PTR [ecx],cl
  401d5f:	pop    edi
  401d60:	popf   
  401d61:	aad    0xe8
  401d63:	sub    ecx,DWORD PTR [edi+0x15]
  401d66:	mov    edx,0xf45a35a0
  401d6b:	inc    edx
  401d6c:	fcomp  QWORD PTR [edi]
  401d6e:	(bad)  [ebx-0x47d89773]
  401d74:	je     0x401d06
  401d76:	loope  0x401cfa
  401d78:	push   0x2a
  401d7a:	aad    0x0
  401d7c:	sbb    BYTE PTR [ebx-0x7b685942],al
  401d82:	mov    esp,0x6a8141af
  401d87:	mov    al,0x6b
  401d89:	out    0x21,eax
  401d8b:	dec    esp
  401d8c:	iret   
  401d8d:	push   0x1d482849
  401d92:	cld    
  401d93:	sahf   
  401d94:	sbb    BYTE PTR [edi+eax*4-0x40],0x7e
  401d99:	adc    al,0xc4
  401d9b:	push   0x0
  401d9d:	jle    0x401d7b
  401d9f:	push   es
  401da0:	pop    esi
  401da1:	mov    al,0x35
  401da3:	push   esp
  401da4:	dec    ebx
  401da5:	mov    ds:0xd43ba06e,al
  401daa:	in     eax,0xc9
  401dac:	add    dl,bl
  401dae:	fsub   DWORD PTR gs:[ecx+ebx*4]
  401db2:	jmp    0x401e29
  401db4:	out    dx,al
  401db5:	jmp    0x71606eba
  401dba:	ror    DWORD PTR [ebx-0x548a8cf7],0x1b
  401dc1:	mov    ebp,0xbd29ec61
  401dc6:	pop    ebx
  401dc7:	push   edi
  401dc8:	sub    al,0x83
  401dca:	sub    edx,edx
  401dcc:	loopne 0x401db2
  401dce:	pop    ecx
  401dcf:	cmp    ecx,0x8b3d2847
  401dd5:	aaa    
  401dd6:	or     DWORD PTR [eax],esp
  401dd8:	and    BYTE PTR [ebx+0x4c],bh
  401ddb:	js     0x401de4
  401ddd:	test   DWORD PTR [ebx+0x1ba8cadd],ecx
  401de3:	mov    ds:0xca2dd94f,eax
  401de8:	daa    
  401de9:	pop    edx
  401dea:	cmp    dh,BYTE PTR [edx]
  401dec:	mov    esi,0x5645d72f
  401df1:	das    
  401df2:	dec    esi
  401df3:	sub    eax,0x988d312a
  401df8:	jp     0x401dab
  401dfa:	push   es
  401dfb:	push   ecx
  401dfc:	cmc    
  401dfd:	pop    ebx
  401dfe:	ret    0x8d9f
  401e01:	cmp    dh,bl
  401e03:	and    cl,BYTE PTR [eax+0x3deeb0ec]
  401e09:	xor    eax,0x50c46258
  401e0e:	pop    eax
  401e0f:	jl     0x401dd2
  401e11:	into   
  401e12:	inc    edx
  401e13:	xchg   edi,eax
  401e14:	mov    eax,0xe8802a7a
  401e19:	test   al,0xe5
  401e1b:	daa    
  401e1c:	stc    
  401e1d:	nop
  401e1e:	mov    al,0xd7
  401e20:	in     al,dx
  401e21:	push   0x68521953
  401e26:	mov    ebx,0xd50af8
  401e2b:	xchg   esi,eax
  401e2c:	adc    ebx,DWORD PTR [eax]
  401e2e:	ins    DWORD PTR es:[edi],dx
  401e2f:	ret    0x1fb8
  401e32:	jecxz  0x401e80
  401e34:	xchg   BYTE PTR [ebx],ch
  401e36:	mov    ebp,0xb85881c3
  401e3b:	cmp    bh,BYTE PTR [ebx+0x7e52c488]
  401e41:	out    0x66,al
  401e43:	mov    bl,BYTE PTR [ebx+0x4c8b59f2]
  401e49:	outs   dx,DWORD PTR ds:[esi]
  401e4a:	inc    esp
  401e4b:	not    BYTE PTR [eax+ebx*1-0x7af149b5]
  401e52:	push   ecx
  401e53:	mov    ebp,DWORD PTR [ebx-0x738787c0]
  401e59:	fisttp WORD PTR [ebp+0x19c62ff7]
  401e5f:	mov    BYTE PTR [edi+0x46fc87cc],bl
  401e65:	aad    0xfb
  401e67:	add    dh,0x56
  401e6a:	sub    al,0x36
  401e6c:	imul   ebx,DWORD PTR ds:0x561a0b8a,0x24
  401e73:	pop    ebx
  401e74:	fsub   st(4),st
  401e76:	popf   
  401e77:	mov    ebx,0x4241beb
  401e7c:	push   esi
  401e7d:	push   esp
  401e7e:	xor    al,0x56
  401e80:	sub    eax,DWORD PTR [edx-0x43]
  401e83:	sbb    BYTE PTR [edx-0x30],bh
  401e86:	sbb    BYTE PTR [edi+ecx*1-0x49],dh
  401e8a:	in     al,0x1c
  401e8c:	hlt    
  401e8d:	in     al,0x8e
  401e8f:	out    0xfe,eax
  401e91:	dec    eax
  401e92:	jo     0x401e6a
  401e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e95:	int    0x15
  401e97:	fwait
  401e98:	pop    edx
  401e99:	and    eax,0xc204c0a4
  401e9e:	xchg   ebx,eax
  401e9f:	mov    edi,0x94c4697f
  401ea4:	push   ecx
  401ea5:	les    ebp,FWORD PTR [esi-0x7906aa7f]
  401eab:	dec    ecx
  401eac:	repz addr16 rcl bl,cl
  401eb0:	outs   dx,BYTE PTR ds:[esi]
  401eb1:	lahf   
  401eb2:	adc    eax,0xe27c6753
  401eb7:	pop    ss
  401eb8:	jae    0x401eb7
  401eba:	mov    bl,0xa
  401ebc:	adc    BYTE PTR [edi],cl
  401ebe:	repz mov ecx,0x1eb3088
  401ec4:	imul   ebx,DWORD PTR [eax+0x613d483a],0x56
  401ecb:	scas   al,BYTE PTR es:[edi]
  401ecc:	mov    WORD PTR [ecx+0x4ee17781],gs
  401ed2:	(bad)  
  401ed3:	xor    al,0x17
  401ed5:	adc    BYTE PTR [ebp+0x6b],dl
  401ed8:	bound  edx,QWORD PTR [ebx-0x37]
  401edb:	pop    edi
  401edc:	mov    DWORD PTR es:[eax-0x59],ebx
  401ee0:	push   es
  401ee1:	or     eax,0x9c33c8ce
  401ee6:	lods   al,BYTE PTR ds:[esi]
  401ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ee8:	cmp    dl,dh
  401eea:	and    eax,DWORD PTR [edi+0x1b17c9f3]
  401ef0:	inc    edi
  401ef1:	in     al,0x9c
  401ef3:	arpl   WORD PTR [edx+0x47],sp
  401ef6:	mov    eax,DWORD PTR [esp+eax*2+0x56]
  401efa:	(bad)  
  401efb:	repnz ror DWORD PTR [ebx],0xb9
  401eff:	pusha  
  401f00:	sbb    ebp,DWORD PTR [ebx-0x22b3582b]
  401f06:	sbb    cl,BYTE PTR [bp+si-0x7033]
  401f0b:	mov    ?,WORD PTR [ebp+edi*2-0x3a31b483]
  401f12:	jl     0x401f0e
  401f14:	or     DWORD PTR [edx+0x2ae21858],ecx
  401f1a:	sbb    esp,DWORD PTR [ecx-0x25c1e344]
  401f20:	sbb    al,0xd1
  401f22:	xor    al,0xcc
  401f24:	and    esi,eax
  401f26:	pop    esi
  401f27:	xor    edi,esi
  401f29:	and    eax,0xad39959a
  401f2e:	xchg   ecx,eax
  401f2f:	dec    ebp
  401f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f31:	data16 and BYTE PTR [ecx],al
  401f34:	(bad)  
  401f35:	leave  
  401f36:	mov    edi,0x979783be
  401f3b:	sub    ecx,DWORD PTR [ecx-0xfb8372e]
  401f41:	imul   edx,DWORD PTR [ebx],0x1e
  401f44:	and    al,BYTE PTR [ebp-0x2cef60f6]
  401f4a:	mov    DWORD PTR [ecx-0x78a3c2a5],eax
  401f50:	xchg   edi,eax
  401f51:	push   ebp
  401f52:	add    ch,BYTE PTR [ebp+0x127af497]
  401f58:	push   esi
  401f59:	fcmovnu st,st(0)
  401f5b:	xlat   BYTE PTR ds:[ebx]
  401f5c:	adc    esp,DWORD PTR [esi]
  401f5e:	jns    0x401fbd
  401f60:	cmp    DWORD PTR [ecx+0x231e590b],0x22
  401f67:	cmp    esp,DWORD PTR ds:0x95d829e7
  401f6d:	mov    eax,0x610deb42
  401f72:	push   0x59
  401f74:	adc    eax,0x7810fab9
  401f79:	push   ss
  401f7a:	ja     0x401f7e
  401f7c:	inc    ebx
  401f7d:	cwde   
  401f7e:	int    0x8c
  401f80:	inc    esp
  401f81:	mov    ds:0x98dad0c1,eax
  401f86:	pop    ebp
  401f87:	cli    
  401f88:	int3   
  401f89:	dec    esi
  401f8a:	fcom   DWORD PTR [ecx]
  401f8c:	add    dl,BYTE PTR [ebp+0x79]
  401f8f:	shl    ah,cl
  401f91:	outs   dx,BYTE PTR ds:[esi]
  401f92:	pop    esi
  401f93:	fstp   TBYTE PTR [eax]
  401f95:	in     eax,0x0
  401f97:	bound  ebp,QWORD PTR [edx-0x5f]
  401f9a:	mov    WORD PTR [ebp-0x57],gs
  401f9d:	inc    edi
  401f9e:	jl     0x401fba
  401fa0:	test   DWORD PTR [ecx*1-0x62b983ed],esi
  401fa7:	lea    ebx,[edx+edi*2+0x53]
  401fab:	dec    ebx
  401fac:	leave  
  401fad:	dec    edx
  401fae:	pop    eax
  401faf:	repz call 0x3a1c:0x9c0b4233
  401fb7:	sub    eax,0x7f42c9d1
  401fbc:	fldcw  WORD PTR [ebp-0x5d]
  401fbf:	sbb    edi,DWORD PTR [edx]
  401fc1:	mov    ch,0x6
  401fc3:	jecxz  0x401f7b
  401fc5:	sub    DWORD PTR [esi-0x57],0x623c45b0
  401fcc:	test   bl,dl
  401fce:	mov    esi,0x12ba28ad
  401fd3:	pop    esp
  401fd4:	or     BYTE PTR [ecx],dh
  401fd6:	shl    BYTE PTR [esp+esi*2+0x43c051d4],cl
  401fdd:	popa   
  401fde:	call   0x3f94:0x31c4eb4a
  401fe5:	popa   
  401fe6:	dec    ebp
  401fe7:	out    dx,eax
  401fe8:	jmp    0xcf1010db
  401fed:	outs   dx,BYTE PTR fs:[esi]
  401fef:	js     0x401fb6
  401ff1:	add    esp,DWORD PTR [ebx-0x3d4e30a3]
  401ff7:	lods   eax,DWORD PTR ds:[esi]
  401ff8:	xchg   ebp,eax
  401ff9:	inc    ebx
  401ffa:	ja     0x402039
  401ffc:	mov    bl,0xe0
  401ffe:	mov    ebp,0xc9bd042b
  402003:	retf   
  402004:	fldenv [esp+eax*8+0x46]
  402008:	pop    edi
  402009:	data16 sahf 
  40200b:	xor    eax,0x76b2c372
  402010:	mov    dh,0x33
  402012:	xchg   esp,eax
  402013:	dec    ebp
  402014:	ds jmp 0x401f9a
  402017:	js     0x402081
  402019:	add    al,0x5
  40201b:	retf   
  40201c:	dec    DWORD PTR [ebx]
  40201e:	sbb    BYTE PTR [edx+0x3a29afa6],bl
  402024:	mov    ebp,0xec42c4d3
  402029:	push   es
  40202a:	das    
  40202b:	sub    eax,0xefd8b6ea
  402030:	inc    esp
  402031:	das    
  402032:	xchg   edi,eax
  402033:	jnp    0x401fc8
  402035:	test   BYTE PTR [ecx+0x39],0x33
  402039:	sbb    edx,DWORD PTR [edi+eiz*8-0x18]
  40203d:	adc    bh,BYTE PTR [ebx+0x8]
  402040:	push   0xde2acebe
  402045:	es stos BYTE PTR es:[edi],al
  402047:	pop    ss
  402048:	mov    bh,0x72
  40204a:	bound  edx,QWORD PTR [edx+ebx*4]
  40204d:	mov    bl,0x83
  40204f:	sub    BYTE PTR [edx+ebp*1-0x5a7fef0c],0x30
  402057:	push   ebp
  402058:	dec    ebx
  402059:	inc    eax
  40205a:	out    dx,al
  40205b:	js     0x4020b2
  40205d:	ds adc eax,0x97aa470a
  402063:	rcr    DWORD PTR [edx],1
  402065:	in     al,dx
  402066:	arpl   WORD PTR ds:0xd0412170,di
  40206c:	out    dx,al
  40206d:	xor    eax,0xc49c55ea
  402072:	shl    BYTE PTR [eax+0x70],0x62
  402076:	mov    eax,ds:0x3835bf20
  40207b:	mov    esp,0x6690a90c
  402080:	pushf  
  402081:	int    0x0
  402083:	xchg   esi,eax
  402084:	jmp    0xef00:0xfeb7f807
  40208b:	retf   0x97ce
  40208e:	inc    ebx
  40208f:	mov    edi,0x26dc9b60
  402094:	fcom   QWORD PTR [eax-0x78]
  402097:	mov    ebx,0xa062d331
  40209c:	mov    eax,0xcc598895
  4020a1:	mov    ebx,0x5c11181
  4020a6:	mov    ch,0x71
  4020a8:	cmp    eax,0x4a79a63c
  4020ad:	mov    esp,0x8e1c5c1c
  4020b2:	sub    ecx,DWORD PTR [edi+ecx*2]
  4020b5:	sti    
  4020b6:	rcl    BYTE PTR [ebp+0x4c6f2f9],0x74
  4020bd:	mov    edi,0x5ce706d3
  4020c2:	out    0x7e,eax
  4020c4:	sub    al,0x9f
  4020c6:	push   esp
  4020c7:	ins    BYTE PTR es:[edi],dx
  4020c8:	xor    DWORD PTR [eax+0x29],edx
  4020cb:	and    eax,0x7f23f63a
  4020d0:	mov    cl,0xd1
  4020d2:	mov    ss:0x1d86a314,eax
  4020d8:	pop    edx
  4020d9:	iret   
  4020da:	mov    bl,ah
  4020dc:	cli    
  4020dd:	scas   al,BYTE PTR es:[edi]
  4020de:	bnd jl 0x402069
  4020e1:	adc    BYTE PTR [edx],bl
  4020e3:	xchg   esp,eax
  4020e4:	sbb    eax,0xc4b5476f
  4020e9:	xlat   BYTE PTR ds:[ebx]
  4020ea:	xor    bh,ch
  4020ec:	cmp    ch,BYTE PTR [ebx]
  4020ee:	sub    BYTE PTR [ebp-0x7097789c],bh
  4020f4:	hlt    
  4020f5:	mov    dh,0x4f
  4020f7:	push   edi
  4020f8:	pop    edi
  4020f9:	imul   ebp,DWORD PTR [edx+0x78],0x54
  4020fd:	mov    cl,0x64
  4020ff:	lea    ebx,[esi+0x6]
  402102:	jmp    0x402149
  402104:	push   0x3d347bcd
  402109:	jno    0x40209c
  40210b:	and    ebx,DWORD PTR [eax+0x61973bc1]
  402111:	bound  esp,QWORD PTR [ebx]
  402113:	pop    ebp
  402114:	test   BYTE PTR [ebp+ecx*2-0x6c],bh
  402118:	cs call 0xfd8d:0x95e6bc4c
  402120:	clc    
  402121:	mov    ch,0x9e
  402123:	ror    BYTE PTR [edi],0xd6
  402126:	leave  
  402127:	dec    ebp
  402128:	js     0x4020ce
  40212a:	mov    al,0x84
  40212c:	or     BYTE PTR [eax+0x42049a82],cl
  402132:	pop    DWORD PTR [edi-0x285b38aa]
  402138:	daa    
  402139:	lods   eax,DWORD PTR ds:[esi]
  40213a:	out    0xff,eax
  40213c:	adc    eax,0x79bd99aa
  402141:	dec    edi
  402142:	or     dh,BYTE PTR [edx+0xe]
  402145:	inc    eax
  402146:	ins    WORD PTR es:[edi],dx
  402148:	mov    ecx,0x468bb45a
  40214d:	xchg   ebx,eax
  40214e:	push   edi
  40214f:	push   edx
  402150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402151:	mov    edx,0x56972af2
  402156:	mov    ch,0x74
  402158:	sub    BYTE PTR ds:0x447da9c6,dl
  40215e:	and    eax,0x64a6e048
  402163:	push   0xffffffd4
  402165:	bound  ecx,QWORD PTR [edx+0x1130de3e]
  40216b:	je     0x402176
  40216d:	lods   eax,DWORD PTR ds:[esi]
  40216e:	mov    cl,0xc9
  402170:	or     al,0x1c
  402172:	or     DWORD PTR [eax+edi*2+0xba709a8],eax
  402179:	xor    al,0x5e
  40217b:	fdivr  DWORD PTR [esi]
  40217d:	and    al,0x59
  40217f:	mov    bl,0x5b
  402181:	and    bl,BYTE PTR [edx-0x3f]
  402184:	push   0xffffffd7
  402186:	fwait
  402187:	mov    eax,ds:0x2763312
  40218c:	ins    BYTE PTR es:[edi],dx
  40218d:	fwait
  40218e:	imul   ebp,DWORD PTR [edi+edi*4-0x40],0xfffffff8
  402193:	mov    edi,0x2a5734dd
  402198:	test   edx,0x9fe58f43
  40219e:	ror    DWORD PTR [ecx-0x43c694da],1
  4021a4:	jp     0x4021b3
  4021a6:	mov    ds:0x2a637255,al
  4021ab:	sar    ecx,0xc4
  4021ae:	jnp    0x40219a
  4021b0:	lods   al,BYTE PTR ds:[esi]
  4021b1:	and    BYTE PTR [esi-0x5c],0x9a
  4021b5:	mov    bh,0x85
  4021b7:	xchg   esp,eax
  4021b8:	jo     0x40222e
  4021ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021bb:	out    0xe6,eax
  4021bd:	(bad)  
  4021be:	repnz sub BYTE PTR [ecx-0x47b855b8],cl
  4021c5:	imul   esi,eax,0x88f3b193
  4021cb:	imul   eax,DWORD PTR [ecx],0x150d4eb5
  4021d1:	sti    
  4021d2:	(bad)  
  4021d4:	push   0x34fc3a58
  4021d9:	add    BYTE PTR [edi-0x5dd1b7bb],ch
  4021df:	leave  
  4021e0:	push   ebx
  4021e1:	mov    edi,0xef87f718
  4021e6:	fs jo  0x4021b6
  4021e9:	or     al,0xce
  4021eb:	mov    si,0xa64e
  4021ef:	cmp    eax,0xead96c20
  4021f4:	adc    ecx,0xffffffa8
  4021f7:	inc    ebx
  4021f8:	(bad)  
  4021f9:	in     al,dx
  4021fa:	pop    es
  4021fb:	xchg   esp,eax
  4021fc:	inc    eax
  4021fd:	cmp    BYTE PTR [ebx+0x3743a105],dl
  402203:	lock push ecx
  402205:	pop    ds
  402206:	aas    
  402207:	dec    edx
  402208:	mov    esi,0x4e906c59
  40220d:	mov    eax,ds:0x67d72be5
  402212:	push   0x5fcb9ea2
  402217:	push   eax
  402218:	xor    DWORD PTR [esp+esi*1-0x6b],esi
  40221c:	retf   0x3967
  40221f:	cmp    BYTE PTR [ebp-0x65],dh
  402222:	je     0x402260
  402224:	and    al,0xa3
  402226:	inc    edx
  402227:	jae    0x402206
  402229:	mov    al,0x56
  40222b:	imul   ebx,DWORD PTR ds:0xd1b10d4f,0xffffffbd
  402232:	test   eax,0x8f573321
  402237:	ret    
  402238:	in     eax,0x1c
  40223a:	ret    0x65e2
  40223d:	(bad)  
  40223e:	cmp    esi,DWORD PTR [edi+0x5fc40796]
  402244:	push   ds
  402245:	out    dx,eax
  402246:	call   FWORD PTR [edx+ebx*8+0x7a]
  40224a:	(bad)  [eax]
  40224c:	popa   
  40224d:	sahf   
  40224e:	sti    
  40224f:	cwde   
  402250:	ss xchg esi,eax
  402252:	dec    ecx
  402253:	push   ss
  402254:	inc    edx
  402255:	add    al,0x46
  402257:	mov    ?,WORD PTR [esp+esi*4+0x1b]
  40225b:	(bad)  
  40225c:	push   0x42d60ca1
  402261:	lahf   
  402262:	jecxz  0x40224c
  402264:	adc    al,0x7a
  402266:	sbb    BYTE PTR [edx+0x5b07bdc0],bl
  40226c:	popf   
  40226d:	mov    eax,0x3f9e23bb
  402272:	sbb    al,0x8f
  402274:	int3   
  402275:	xor    bl,BYTE PTR [esi-0x77]
  402278:	aam    0xfb
  40227a:	jp     0x4022b6
  40227c:	xor    DWORD PTR [esp+esi*1+0x58370e54],esp
  402283:	push   esi
  402284:	push   es
  402285:	push   eax
  402286:	jle    0x4022a4
  402288:	inc    ebp
  402289:	push   0xffffffb6
  40228b:	popf   
  40228c:	dec    ebp
  40228d:	push   cs
  40228e:	inc    ebx
  40228f:	xchg   ecx,eax
  402290:	es fs int 0x56
  402294:	ret    0xd705
  402297:	cwde   
  402298:	mov    BYTE PTR [esp+eax*4+0x1e7a7cf8],ah
  40229f:	test   DWORD PTR [edx],edx
  4022a1:	pop    eax
  4022a2:	or     eax,DWORD PTR [esi]
  4022a4:	out    0xb9,al
  4022a6:	add    ch,BYTE PTR [edi]
  4022a8:	retf   0x95e5
  4022ab:	jl     0x402250
  4022ad:	push   eax
  4022ae:	sbb    DWORD PTR [edx+0x28],edx
  4022b1:	sbb    al,0x93
  4022b3:	test   eax,0xd05b32d3
  4022b8:	and    eax,0x577c624e
  4022bd:	loop   0x402337
  4022bf:	jne    0x402333
  4022c1:	inc    edx
  4022c2:	xchg   esp,eax
  4022c3:	lods   al,BYTE PTR ds:[esi]
  4022c4:	stos   DWORD PTR es:[edi],eax
  4022c5:	stos   DWORD PTR es:[edi],eax
  4022c6:	cmc    
  4022c7:	inc    edx
  4022c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c9:	call   0xf84:0xd953f923
  4022d0:	dec    DWORD PTR [edi+0x120676d2]
  4022d6:	aad    0x31
  4022d8:	es loop 0x4022ca
  4022db:	xchg   ecx,eax
  4022dc:	xchg   ebp,eax
  4022dd:	ins    BYTE PTR es:[edi],dx
  4022de:	xor    eax,0xb2c498a4
  4022e3:	cld    
  4022e4:	jg     0x4022ff
  4022e6:	mov    eax,0xaf21398e
  4022eb:	inc    ebp
  4022ec:	fistp  QWORD PTR [ecx-0x6d]
  4022ef:	mov    BYTE PTR [esi],0xef
  4022f2:	shl    DWORD PTR [ebx-0x4ac3f8f],1
  4022f8:	scas   al,BYTE PTR es:[edi]
  4022f9:	add    DWORD PTR [edi+0x392f1212],ebp
  4022ff:	or     bh,BYTE PTR [ecx]
  402301:	ins    DWORD PTR es:[edi],dx
  402302:	add    cl,ah
  402304:	cld    
  402305:	mov    dl,0xfe
  402307:	int3   
  402308:	(bad)  
  402309:	(bad)  
  40230a:	lea    eax,[ebp+0x69]
  40230d:	xchg   ebp,eax
  40230e:	loopne 0x4022bd
  402310:	cdq    
  402311:	lods   al,BYTE PTR ds:[esi]
  402312:	clc    
  402313:	daa    
  402314:	jno    0x4022db
  402316:	test   DWORD PTR [edx+0x26],0x87f9bcb4
  40231d:	jl     0x402373
  40231f:	(bad)  [bx+si-0x8]
  402323:	jae    0x4022af
  402325:	inc    esi
  402326:	or     al,0x64
  402328:	jno    0x402363
  40232a:	sbb    BYTE PTR [esp+eiz*2-0x3b136049],ch
  402331:	xchg   ecx,eax
  402332:	nop
  402333:	mov    eax,ds:0x1ad89d57
  402338:	xor    DWORD PTR [edx-0x72ea8ac2],ebx
  40233e:	push   ds
  40233f:	stc    
  402340:	addr16 pause 
  402343:	dec    edx
  402344:	jns    0x4022e4
  402346:	or     eax,0x7eeee253
  40234b:	(bad)  
  40234c:	push   ebp
  40234d:	sbb    al,0x9d
  40234f:	pop    ebp
  402350:	mov    dh,0x4
  402352:	out    dx,al
  402353:	jmp    0xe44f:0x8cb6918
  40235a:	mov    dl,0xd8
  40235c:	test   DWORD PTR [edx+0x28dab928],0x1a5e13f2
  402366:	aas    
  402367:	psubusb mm4,QWORD PTR ds:0xb9fa17d1
  40236e:	add    DWORD PTR [ebp-0x9fe08b5],eax
  402374:	or     al,0x97
  402376:	test   edx,ebx
  402378:	or     al,0x25
  40237a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40237c:	fmul   DWORD PTR [edx]
  40237e:	jecxz  0x402305
  402380:	mov    bl,BYTE PTR [edx-0x63]
  402383:	sbb    al,0x29
  402385:	test   BYTE PTR [eax+0x49a9a2d],bl
  40238b:	inc    edi
  40238c:	int    0x64
  40238e:	sahf   
  40238f:	call   0x6c9:0x7e465924
  402396:	jae    0x40237b
  402398:	jae    0x402340
  40239a:	and    cl,BYTE PTR [edx+0x7be1b3fa]
  4023a0:	ins    DWORD PTR es:[edi],dx
  4023a1:	push   ds
  4023a2:	out    dx,eax
  4023a3:	test   eax,0xe0e44e73
  4023a8:	(bad)  [ecx]
  4023aa:	retf   
  4023ab:	(bad)  [esi-0x73]
  4023ae:	dec    ecx
  4023af:	sub    dh,BYTE PTR [edx+eiz*8-0x37ea10c4]
  4023b6:	lods   eax,DWORD PTR ds:[esi]
  4023b7:	ja     0x402414
  4023b9:	sub    eax,0x77a26e3b
  4023be:	cmp    bl,BYTE PTR [ecx]
  4023c0:	xlat   BYTE PTR ds:[ebx]
  4023c1:	shl    DWORD PTR [eax],0x38
  4023c4:	cmp    eax,0xdee8c335
  4023c9:	cmp    BYTE PTR [edx-0x40],al
  4023cc:	outs   dx,DWORD PTR ds:[esi]
  4023cd:	in     eax,dx
  4023ce:	retf   0x5a58
  4023d1:	test   BYTE PTR [ecx],bh
  4023d3:	jb     0x402392
  4023d5:	xor    DWORD PTR [esi+eax*1+0x1],eax
  4023d9:	dec    eax
  4023da:	stos   DWORD PTR es:[edi],eax
  4023db:	push   0xaf46f119
  4023e0:	lods   al,BYTE PTR ds:[esi]
  4023e1:	dec    ecx
  4023e2:	push   0x65d971ad
  4023e7:	pop    ebx
  4023e8:	in     eax,0xe8
  4023ea:	add    ch,bl
  4023ec:	leave  
  4023ed:	test   al,0xca
  4023ef:	bts    DWORD PTR [ebp-0x5a94d211],edi
  4023f6:	inc    edi
  4023f7:	pop    es
  4023f8:	lods   eax,DWORD PTR ds:[esi]
  4023f9:	push   es
  4023fa:	pop    ss
  4023fb:	xchg   edx,eax
  4023fc:	cmp    dh,BYTE PTR [edx-0x24f25ce6]
  402402:	sub    dh,ch
  402404:	push   edx
  402405:	push   ss
  402406:	std    
  402407:	mov    edi,0xba170403
  40240c:	fwait
  40240d:	popa   
  40240e:	jl     0x402413
  402410:	lea    ecx,[eax-0x54]
  402413:	mov    dh,0x12
  402415:	mov    esi,0xa798cd14
  40241a:	inc    esp
  40241b:	and    edx,ebp
  40241d:	mov    ebp,0xdaf45b4a
  402422:	pop    DWORD PTR [edx]
  402424:	nop
  402425:	push   esp
  402426:	pop    esp
  402427:	icebp  
  402428:	lods   al,BYTE PTR ds:[esi]
  402429:	xchg   ebp,eax
  40242a:	and    al,0x6c
  40242c:	xor    eax,0x46adfc7f
  402431:	mov    ds:0xcd75c7d,eax
  402436:	mov    edx,0x2e0667dd
  40243b:	(bad)  
  40243d:	or     eax,0x679a9f61
  402442:	repz iret 
  402444:	(bad)  
  402445:	(bad)  
  402446:	xor    al,0xd
  402448:	test   ecx,0xb851db68
  40244e:	ret    0x60ee
  402451:	out    dx,al
  402452:	cmp    al,0x23
  402454:	ins    BYTE PTR es:[edi],dx
  402455:	arpl   WORD PTR [eax],sp
  402457:	jns    0x4023ee
  402459:	iret   
  40245a:	push   ecx
  40245b:	scas   al,BYTE PTR es:[edi]
  40245c:	or     al,0xaa
  40245e:	dec    esi
  40245f:	sbb    edi,DWORD PTR [ecx-0xe]
  402462:	loope  0x402450
  402464:	jmp    0xa6dc:0x5e10fcbd
  40246b:	fisub  WORD PTR [ecx+edi*2]
  40246e:	gs adc eax,0x2b856e17
  402474:	stc    
  402475:	pop    ss
  402476:	jne    0x402498
  402478:	and    DWORD PTR [ecx],ebp
  40247a:	icebp  
  40247b:	dec    ecx
  40247c:	mov    WORD PTR [edi],?
  40247e:	iret   
  40247f:	stos   DWORD PTR es:[edi],eax
  402480:	imul   DWORD PTR [eax-0x189fe04e]
  402486:	jmp    0x93f00b33
  40248b:	repz inc ebx
  40248d:	mov    ebx,0x687367d5
  402492:	cdq    
  402493:	add    DWORD PTR [edx+eax*2],ebx
  402496:	push   0xc50a37b
  40249b:	(bad)  
  40249c:	mov    ebx,0x4103bee8
  4024a1:	or     esp,DWORD PTR [eax]
  4024a3:	test   eax,0x51099e30
  4024a8:	call   0xbe1a:0x2b0b69f5
  4024af:	sar    BYTE PTR [ebx-0x142224b0],1
  4024b5:	and    al,0xe6
  4024b7:	cmp    ah,ch
  4024b9:	rol    DWORD PTR [eax+0x35316da9],0x4
  4024c0:	mov    ch,bh
  4024c2:	inc    ebp
  4024c3:	lods   al,BYTE PTR ds:[esi]
  4024c4:	lea    edi,[eax+ecx*2+0xa]
  4024c8:	adc    DWORD PTR [esi-0x615423b5],esp
  4024ce:	add    cl,BYTE PTR [edx+0x11]
  4024d1:	mov    esi,0x5db605a1
  4024d6:	sar    BYTE PTR [eax+0x42],1
  4024d9:	jecxz  0x40250c
  4024db:	cmc    
  4024dc:	ja     0x4024de
  4024de:	loope  0x4024bb
  4024e0:	jg     0x40254f
  4024e2:	sub    ecx,ebp
  4024e4:	not    BYTE PTR ds:0xdfe9997a
  4024ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024eb:	addr16 cld 
  4024ed:	loop   0x4024b4
  4024ef:	jbe    0x4024ac
  4024f1:	and    eax,0x2b2a7c50
  4024f6:	push   cs
  4024f7:	inc    ecx
  4024f8:	test   al,0xf4
  4024fa:	pop    ebp
  4024fb:	rcr    BYTE PTR [ebp+0x47],cl
  4024fe:	hlt    
  4024ff:	xor    al,0x6b
  402501:	jns    0x402545
  402503:	mov    al,0xdf
  402505:	arpl   WORD PTR [ecx],di
  402507:	sahf   
  402508:	mov    DWORD PTR [ebx+ecx*4+0x534f9bd5],edx
  40250f:	add    BYTE PTR [ecx-0x3c],0xe0
  402513:	(bad)  
  402515:	in     al,0x20
  402517:	jmp    0xb5ab:0xa1252e55
  40251e:	les    eax,FWORD PTR [ecx]
  402520:	pusha  
  402521:	xlat   BYTE PTR ds:[ebx]
  402522:	or     al,0x3c
  402524:	pop    ebx
  402525:	or     BYTE PTR [eax+esi*8-0x2d],dl
  402529:	xchg   ecx,eax
  40252a:	push   0x8c90e198
  40252f:	inc    ebx
  402530:	cs jbe 0x402523
  402533:	push   edi
  402534:	xchg   ebx,eax
  402535:	or     al,0x79
  402537:	sahf   
  402538:	retf   
  402539:	into   
  40253a:	mov    ?,WORD PTR [ebx]
  40253c:	bound  esi,QWORD PTR [ebx]
  40253e:	adc    bh,bh
  402540:	mov    edx,0x6250f835
  402545:	popf   
  402546:	mov    cl,0x55
  402548:	sub    ebp,esp
  40254a:	fisubr DWORD PTR [edi-0x4c]
  40254d:	cmp    ah,dh
  40254f:	xor    al,0x93
  402551:	inc    eax
  402552:	stos   DWORD PTR es:[edi],eax
  402553:	sbb    al,0xa7
  402555:	mov    dl,0xb3
  402557:	(bad)  
  402558:	loopne 0x40258f
  40255a:	and    bh,BYTE PTR [eax+0x142ca5db]
  402560:	shl    dl,cl
  402562:	in     al,dx
  402563:	rol    DWORD PTR [ecx+ebp*2],0xc4
  402567:	shl    DWORD PTR ds:0x547c87e8,1
  40256d:	xchg   edi,eax
  40256e:	inc    edi
  40256f:	lahf   
  402570:	xor    esi,DWORD PTR [ebx]
  402572:	push   edx
  402573:	pop    ebx
  402574:	pop    edx
  402575:	loop   0x402576
  402577:	aam    0x68
  402579:	pop    eax
  40257a:	jl     0x40254c
  40257c:	les    ebx,FWORD PTR [edi-0xc0792cc]
  402582:	cdq    
  402583:	push   0x4a
  402585:	aad    0x2d
  402587:	clc    
  402588:	fdivr  st,st(3)
  40258a:	int3   
  40258b:	dec    eax
  40258c:	rcl    dl,cl
  40258e:	out    dx,al
  40258f:	shl    BYTE PTR [edx-0x50126304],0x7
  402596:	aas    
  402597:	imul   edx,DWORD PTR [edx+0x41],0x5728bd82
  40259e:	(bad)  
  40259f:	fadd   QWORD PTR [eax+eax*4+0x36b8183]
  4025a6:	sahf   
  4025a7:	xor    bl,BYTE PTR [ebp-0x1e]
  4025aa:	aaa    
  4025ab:	lods   eax,DWORD PTR ds:[esi]
  4025ac:	jmp    0x7659:0xa3e3d380
  4025b3:	add    eax,0xe99e68fd
  4025b8:	sbb    edx,DWORD PTR [ebx]
  4025ba:	pop    ecx
  4025bb:	ins    BYTE PTR es:[edi],dx
  4025bc:	out    0x5a,al
  4025be:	addr16 dec edi
  4025c0:	jp     0x40259f
  4025c2:	outs   dx,BYTE PTR ds:[esi]
  4025c3:	mov    dh,0x21
  4025c5:	mov    ebp,0xfd35f228
  4025ca:	xchg   ebx,eax
  4025cb:	mov    ecx,0x86a184c2
  4025d0:	and    edx,DWORD PTR [eax+0x14]
  4025d3:	clc    
  4025d4:	in     eax,0x9
  4025d6:	into   
  4025d7:	int3   
  4025d8:	fst    st(1)
  4025da:	add    ecx,DWORD PTR [ecx-0x64]
  4025dd:	adc    al,0xbf
  4025df:	adc    DWORD PTR [ecx+edx*4-0x795b72e8],0xffffffb9
  4025e7:	call   0x135af4cd
  4025ec:	fimul  DWORD PTR [edi-0x1]
  4025ef:	mov    ds:0x4bb607f8,eax
  4025f4:	mov    edi,0x1aecea27
  4025f9:	outs   dx,DWORD PTR ds:[esi]
  4025fa:	retf   
  4025fb:	ja     0x402585
  4025fd:	or     ah,BYTE PTR [ebp+0x115d5c4b]
  402603:	repz and BYTE PTR [ebx-0xf525aed],0x26
  40260b:	sbb    BYTE PTR [ebx+0x26],ah
  40260e:	icebp  
  40260f:	jo     0x4025fe
  402611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402612:	and    DWORD PTR [edi],edx
  402614:	fcomp  QWORD PTR [ecx+0x4a9915a7]
  40261a:	in     eax,dx
  40261b:	mov    ebx,0x5b38fbf2
  402620:	scas   eax,DWORD PTR es:[edi]
  402621:	dec    ebp
  402622:	out    dx,eax
  402623:	mov    edx,0x30d0224
  402628:	call   0xb7f:0xd6898a9
  40262f:	fld    DWORD PTR [eax+ebp*2]
  402632:	or     al,0xfc
  402634:	xor    BYTE PTR [edx],ch
  402636:	cmp    BYTE PTR [ecx],ah
  402638:	mov    ebp,DWORD PTR [ecx+0x4a]
  40263b:	mov    ecx,0xfa80d902
  402640:	sbb    eax,0xaf314bda
  402645:	out    0x12,eax
  402647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402648:	call   0x34fe0c97
  40264d:	inc    ecx
  40264e:	lea    ebp,es:[ebp+0x6741a516]
  402655:	push   cs
  402656:	jo     0x402656
  402658:	fisttp DWORD PTR [edx]
  40265a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40265b:	sub    ah,cl
  40265d:	retf   
  40265e:	dec    ebp
  40265f:	adc    al,0xa4
  402661:	and    BYTE PTR [eax],dl
  402663:	out    0xb,al
  402665:	cmp    al,0xde
  402667:	xor    al,dh
  402669:	cmp    edx,DWORD PTR [ebp-0x4ea7f6f7]
  40266f:	and    DWORD PTR [ebx+0xe184a72],edx
  402675:	sbb    BYTE PTR [ebp-0x71ed547b],dh
  40267b:	dec    ebx
  40267c:	jo     0x4026cd
  40267e:	xchg   edi,eax
  40267f:	mov    al,ds:0x8e059a96
  402684:	and    eax,0xf6f322e2
  402689:	cmp    DWORD PTR [edi+edx*8-0x65],ecx
  40268d:	ror    DWORD PTR [eax+edx*1+0x3d],0x9d
  402692:	loop   0x402647
  402694:	arpl   WORD PTR [eax-0xed7f939],bp
  40269a:	jae    0x4026e5
  40269c:	sbb    DWORD PTR [edi-0x5ea23916],esi
  4026a2:	or     edx,DWORD PTR [edi+0x4f338c62]
  4026a8:	and    BYTE PTR [esi-0x5d925ca9],ah
  4026ae:	retf   0xf778
  4026b1:	mov    ebp,0xd9a61084
  4026b6:	repz jmp 0xa7a13f75
  4026bc:	arpl   WORD PTR [esi-0xaedc150],dx
  4026c2:	inc    edx
  4026c3:	xor    DWORD PTR [ebx+0x54c59c21],ebp
  4026c9:	aam    0x21
  4026cb:	ja     0x4026a2
  4026cd:	jmp    DWORD PTR ds:0x1c310375
  4026d3:	inc    edx
  4026d4:	inc    edi
  4026d6:	pop    edx
  4026d7:	sub    dl,dh
  4026d9:	ret    0x2399
  4026dc:	adc    al,0x3a
  4026de:	cmp    bl,BYTE PTR [ebp-0xf]
  4026e1:	inc    eax
  4026e2:	mov    ds:0xb79956f1,eax
  4026e7:	and    cl,BYTE PTR [esi+0x5d]
  4026ea:	dec    eax
  4026eb:	(bad)  
  4026ec:	adc    eax,0x8ff35cda
  4026f1:	lods   al,BYTE PTR ds:[esi]
  4026f2:	inc    ebp
  4026f3:	daa    
  4026f4:	jmp    0x402741
  4026f6:	out    dx,al
  4026f7:	sbb    DWORD PTR [ebx],ebx
  4026f9:	xlat   BYTE PTR ds:[ebx]
  4026fa:	pop    edi
  4026fc:	pop    esp
  4026fd:	lock xchg ebp,eax
  4026ff:	cs repnz pushf 
  402702:	sub    al,0xc1
  402704:	es xor dl,bl
  402707:	inc    esp
  402708:	mov    eax,ds:0x9a512ea8
  40270d:	lock pop edi
  40270f:	mov    ah,cl
  402711:	shl    BYTE PTR [ebp+0x50],0xc5
  402715:	adc    eax,0xeab1a9f1
  40271a:	mul    DWORD PTR [esi+0x75]
  40271d:	xchg   ebx,eax
  40271e:	xchg   ebp,eax
  40271f:	ins    BYTE PTR es:[edi],dx
  402720:	pop    edi
  402721:	icebp  
  402722:	inc    esp
  402723:	and    eax,edx
  402725:	lock scas al,BYTE PTR es:[edi]
  402727:	lods   al,BYTE PTR ds:[esi]
  402728:	jge    0x402795
  40272a:	mov    esp,0xe6a782b0
  40272f:	adc    al,BYTE PTR [ebp+eax*2+0x6bcc6025]
  402736:	cli    
  402737:	pop    ss
  402738:	mov    ss,WORD PTR [ebx-0x23]
  40273b:	cwde   
  40273c:	lds    eax,FWORD PTR [ecx+0x297c2c41]
  402742:	cdq    
  402743:	cmp    DWORD PTR [eax+0x6aae00f4],0x78
  40274a:	push   ss
  40274b:	(bad)  [eax+ebx*1-0x5a]
  40274f:	xchg   esi,eax
  402750:	push   ss
  402751:	(bad)  
  402752:	xor    esp,0xccb4d9d7
  402758:	fs xor al,ah
  40275b:	push   ebp
  40275c:	ror    BYTE PTR [ecx+0x6c],1
  40275f:	in     al,dx
  402760:	and    ecx,ecx
  402762:	(bad)  
  402763:	push   ebp
  402764:	scas   al,BYTE PTR es:[edi]
  402765:	cmp    ebx,edx
  402767:	push   ebp
  402768:	lods   al,BYTE PTR ds:[esi]
  402769:	sar    bh,1
  40276b:	int3   
  40276c:	sar    DWORD PTR [bx+si-0x51],0xd0
  402771:	sbb    esp,DWORD PTR [eax+edx*8+0x2f987c83]
  402778:	xchg   DWORD PTR [edi+0x7b54e389],esi
  40277e:	popf   
  40277f:	pop    esi
  402780:	fist   DWORD PTR [eax-0x18]
  402783:	mov    ds:0x2877e182,al
  402788:	sbb    al,0xfb
  40278a:	adc    BYTE PTR [ebx],ch
  40278c:	shl    BYTE PTR [edx-0x38a91b02],0x9
  402793:	pop    edi
  402794:	clc    
  402795:	rol    DWORD PTR [ebx+0xa57e619],cl
  40279b:	ficom  DWORD PTR [ebx+0x60806cea]
  4027a1:	daa    
  4027a2:	scas   eax,DWORD PTR es:[edi]
  4027a3:	pop    ecx
  4027a4:	jb     0x402745
  4027a6:	cmc    
  4027a7:	cmc    
  4027a8:	jg     0x4027f0
  4027aa:	dec    edx
  4027ab:	pop    edi
  4027ac:	dec    ecx
  4027ad:	add    dl,BYTE PTR [eax]
  4027af:	pop    ss
  4027b0:	clc    
  4027b1:	call   0x1624:0x5b71cd17
  4027b8:	sbb    edi,DWORD PTR [edx-0x4d0da5f4]
  4027be:	jno    0x4027f7
  4027c0:	mov    edx,0x447e491b
  4027c5:	fild   WORD PTR [esp+eiz*2+0x59aad3e6]
  4027cc:	aas    
  4027cd:	or     dh,BYTE PTR [ebp+0x7093c6f]
  4027d3:	mov    ch,0x71
  4027d5:	xchg   ecx,eax
  4027d6:	addr16 call 0x6c00:0xdbec84fa
  4027de:	adc    BYTE PTR [ebx+0xa9fa716],dl
  4027e4:	shl    BYTE PTR [esp+edi*2],0xf9
  4027e8:	mov    esp,0x5a5bdea4
  4027ed:	and    dh,BYTE PTR [esi]
  4027ef:	mov    dh,0xd2
  4027f1:	jnp    0x402820
  4027f3:	ins    BYTE PTR es:[edi],dx
  4027f4:	(bad)  
  4027f5:	leave  
  4027f6:	pmaxub mm6,QWORD PTR [esi+0x541502e]
  4027fd:	mov    DWORD PTR [edx+0x5e129b52],ebp
  402803:	stos   BYTE PTR es:[edi],al
  402804:	inc    edi
  402805:	or     BYTE PTR ds:0x47d25fc6,0x6
  40280c:	add    eax,0x3da9be89
  402811:	inc    ebx
  402812:	adc    ebp,eax
  402814:	xchg   edx,eax
  402815:	inc    edx
  402816:	xchg   edx,eax
  402817:	pop    ebp
  402818:	in     eax,dx
  402819:	mov    dl,0x5
  40281b:	cld    
  40281c:	sbb    DWORD PTR [ecx-0x4a541c10],edx
  402822:	push   ebx
  402823:	les    esp,FWORD PTR [esi]
  402825:	and    DWORD PTR ds:0xf384594,ebp
  40282b:	js     0x4027f4
  40282d:	xchg   ebx,eax
  40282e:	xchg   esp,eax
  40282f:	sub    ah,BYTE PTR ss:[edi-0xe3c6d1b]
  402836:	pop    es
  402837:	test   eax,0xdf39a2a2
  40283c:	cwde   
  40283d:	aaa    
  40283e:	jle    0x402831
  402840:	mov    eax,0x5a92e9a2
  402845:	fmul   QWORD PTR [eax-0x3b]
  402848:	mov    al,0x13
  40284a:	mov    cl,ah
  40284c:	mov    eax,DWORD PTR [edi]
  40284e:	lods   eax,DWORD PTR ds:[esi]
  40284f:	outs   dx,DWORD PTR ds:[esi]
  402850:	outs   dx,BYTE PTR ds:[esi]
  402851:	pop    ds
  402852:	popa   
  402853:	sti    
  402854:	adc    al,0xa2
  402856:	push   eax
  402857:	or     eax,0x4d208e91
  40285c:	cmp    bl,BYTE PTR [esi-0x67d70590]
  402862:	into   
  402863:	repz pop edx
  402865:	scas   al,BYTE PTR es:[edi]
  402866:	(bad)  
  402867:	sbb    DWORD PTR [ebp+0x69bfd7d7],esi
  40286d:	scas   eax,DWORD PTR es:[edi]
  40286e:	bound  esi,QWORD PTR [ebx+edi*1]
  402871:	xor    eax,0xe5a7cb7
  402876:	xchg   ecx,eax
  402877:	xchg   edx,eax
  402878:	out    0xdf,eax
  40287a:	inc    ebp
  40287c:	nop
  40287d:	push   cs
  40287e:	sbb    dl,BYTE PTR ds:0xe1dbe5a8
  402884:	mov    esp,0x34df3e7b
  402889:	dec    edx
  40288a:	xchg   esp,eax
  40288b:	adc    ebp,DWORD PTR [ebx+0x43f0d48a]
  402891:	mov    fs,WORD PTR [ecx+0x4bd82f1c]
  402897:	call   0x55e6:0xc58993bf
  40289e:	dec    ebp
  40289f:	xor    BYTE PTR [ecx],cl
  4028a1:	pop    ss
  4028a2:	sub    al,0x55
  4028a4:	call   0x89106f75
  4028a9:	and    DWORD PTR [edi+eax*4],edx
  4028ac:	jns    0x4028a3
  4028ae:	dec    edx
  4028af:	je     0x402917
  4028b1:	inc    esi
  4028b2:	ins    BYTE PTR es:[edi],dx
  4028b3:	test   DWORD PTR [eax],edi
  4028b5:	mov    dh,0xb5
  4028b7:	ret    
  4028b8:	jno    0x4028ef
  4028ba:	xor    cl,BYTE PTR [edi+ebp*1]
  4028bd:	fild   QWORD PTR [edx+eiz*2-0x3468c88e]
  4028c4:	mov    eax,0xf0c8f3be
  4028c9:	inc    ecx
  4028ca:	sar    DWORD PTR [esi],cl
  4028cc:	mov    ds:0x20381f7a,eax
  4028d1:	mov    esp,DWORD PTR [edi+0x47298bd6]
  4028d7:	and    eax,0xa3ed1c2b
  4028dc:	dec    ecx
  4028dd:	mov    ah,0x38
  4028df:	add    DWORD PTR [edi],ebx
  4028e1:	jae    0x402875
  4028e3:	dec    edx
  4028e4:	gs fneni(8087 only) 
  4028e7:	and    DWORD PTR [edi+ecx*4],0xeb89bb4c
  4028ee:	in     eax,0xc3
  4028f0:	clc    
  4028f1:	mov    ch,BYTE PTR [ebx+ebx*4+0x4e]
  4028f5:	adc    al,0xad
  4028f7:	shl    DWORD PTR [ebp*8-0x5df00ab2],0x66
  4028ff:	cli    
  402900:	call   0x40a2de84
  402905:	sub    eax,0xfa2ea76
  40290a:	popa   
  40290b:	pop    es
  40290c:	push   edi
  40290d:	adc    eax,0xdaf01c83
  402912:	into   
  402913:	fistp  DWORD PTR ds:0xb88fe823
  402919:	mov    eax,ds:0xd01bc07b
  40291e:	xlat   BYTE PTR ds:[ebx]
  40291f:	inc    eax
  402920:	sbb    bh,BYTE PTR ds:0xbf97e681
  402926:	ror    cl,cl
  402928:	test   BYTE PTR [eax+esi*8-0x42],dh
  40292c:	sbb    DWORD PTR es:[ebx+0x182fc107],ebp
  402933:	sti    
  402934:	pop    esp
  402935:	mov    dh,0x6e
  402937:	pop    ds
  402938:	and    eax,0x5b7e9793
  40293d:	xchg   edx,eax
  40293e:	add    bh,BYTE PTR [ecx-0x35887a88]
  402944:	jb     0x40291d
  402946:	arpl   bx,dx
  402948:	repz and edi,0xe5a897ee
  40294f:	into   
  402950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402951:	mov    ebx,0x8dfebd86
  402956:	js     0x402971
  402958:	sub    DWORD PTR [edi],esp
  40295a:	mov    eax,0x3fff1899
  40295f:	mov    al,ds:0xc39f7797
  402964:	pop    edi
  402965:	jg     0x4029e3
  402967:	mov    bh,0xc2
  402969:	ret    
  40296a:	mov    cl,0x9d
  40296c:	jg     0x402994
  40296e:	push   ss
  40296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402970:	push   ss
  402971:	neg    DWORD PTR [edi-0x5c8c10a7]
  402977:	xlat   BYTE PTR ds:[ebx]
  402978:	add    edx,edx
  40297a:	jle    0x402991
  40297c:	jb     0x402919
  40297e:	cmp    dl,bl
  402980:	xchg   esi,eax
  402981:	bound  esp,QWORD PTR [ebx+ebx*1]
  402984:	add    DWORD PTR fs:[esi+esi*2-0x29],eax
  402989:	or     BYTE PTR [esi+0x50],dh
  40298c:	int    0xf7
  40298e:	push   ds
  40298f:	add    eax,0xdf113c3f
  402994:	loope  0x40297f
  402996:	cwde   
  402997:	mov    ebp,0x8edc5753
  40299c:	pop    esi
  40299d:	pop    ecx
  40299e:	mov    ds:0x18dce547,al
  4029a3:	in     eax,dx
  4029a4:	out    0x15,eax
  4029a6:	out    0xef,al
  4029a8:	cld    
  4029a9:	outs   dx,DWORD PTR ds:[esi]
  4029aa:	daa    
  4029ab:	inc    ecx
  4029ac:	pop    esp
  4029ad:	or     DWORD PTR [edx],ecx
  4029af:	push   ebp
  4029b0:	mov    ds:0x4cb7696f,al
  4029b5:	mov    edx,0x63326cb4
  4029ba:	jl     0x402a05
  4029bc:	icebp  
  4029bd:	inc    esp
  4029be:	push   ds
  4029bf:	pop    edx
  4029c0:	ficomp DWORD PTR [edx]
  4029c2:	xor    al,0x4c
  4029c4:	push   ecx
  4029c5:	fs inc ebp
  4029c7:	sub    dh,BYTE PTR [esi-0x57ba916d]
  4029cd:	arpl   cx,dx
  4029cf:	nop
  4029d0:	mov    eax,0x947dc52f
  4029d5:	push   esp
  4029d6:	les    ebp,FWORD PTR [edx-0x5de131be]
  4029dc:	fisttp DWORD PTR [ecx]
  4029de:	cmp    ch,dh
  4029e0:	push   es
  4029e1:	mov    edi,0xa0330462
  4029e6:	ins    BYTE PTR es:[edi],dx
  4029e7:	sbb    bh,BYTE PTR [ebx]
  4029e9:	xor    ecx,DWORD PTR [eax+0x43]
  4029ec:	ss loopne 0x402a36
  4029ef:	xchg   esp,eax
  4029f0:	mov    dl,0x16
  4029f2:	popa   
  4029f3:	xlat   BYTE PTR ds:[ebx]
  4029f4:	daa    
  4029f5:	retf   
  4029f6:	push   cs
  4029f7:	shr    BYTE PTR [esi],1
  4029f9:	xor    DWORD PTR [eax],0x6c
  4029fc:	inc    esp
  4029fd:	inc    ebx
  4029fe:	nop
  4029ff:	push   esi
  402a00:	fild   QWORD PTR [ebx+0x69]
  402a03:	add    al,0x31
  402a05:	push   eax
  402a06:	jmp    0x747f6db7
  402a0b:	add    al,0x2e
  402a0d:	call   0x30bd2f43
  402a12:	push   edi
  402a13:	aaa    
  402a14:	sub    bl,al
  402a16:	sub    eax,0x103f3e93
  402a1b:	bound  ecx,QWORD PTR [ebx]
  402a1d:	fcomp  QWORD PTR [esi]
  402a1f:	outs   dx,BYTE PTR ds:[esi]
  402a20:	dec    ecx
  402a21:	(bad)  
  402a22:	test   al,0x15
  402a24:	daa    
  402a25:	loope  0x402a4e
  402a27:	dec    eax
  402a28:	inc    eax
  402a29:	sub    DWORD PTR [ebx+0x380f5247],edx
  402a2f:	cmp    ebp,ecx
  402a31:	test   eax,0x44d71944
  402a36:	mov    dh,0x7d
  402a38:	iret   
  402a39:	adc    eax,0xa6f97939
  402a3e:	adc    BYTE PTR [edi+ecx*8],0x1e
  402a42:	adc    bh,BYTE PTR [ebx]
  402a44:	jmp    0x18bc18c2
  402a49:	add    eax,0xbfe01fd8
  402a4e:	inc    eax
  402a4f:	mov    WORD PTR [esi],fs
  402a51:	lock mov ebp,0x7f75dc5c
  402a57:	jnp    0x402a16
  402a59:	imul   edi,DWORD PTR [edx+0x56],0x7824374b
  402a60:	mov    ah,0x97
  402a62:	or     eax,0x8972d4e9
  402a67:	or     bh,bh
  402a69:	icebp  
  402a6a:	xchg   BYTE PTR [ebx-0x1380c2f2],bl
  402a70:	mov    ecx,0x68700169
  402a75:	cmc    
  402a76:	mov    ds,ebx
  402a78:	int    0x45
  402a7a:	rep ins DWORD PTR es:[edi],dx
  402a7c:	(bad)
  402a81:	dec    eax
  402a82:	cdq    
  402a83:	rol    BYTE PTR gs:[edi-0x126c502d],cl
  402a8a:	pop    ss
  402a8b:	mov    edi,0x5e78068a
  402a90:	or     al,al
  402a92:	int3   
  402a93:	xchg   esp,eax
  402a94:	jp     0x402af1
  402a96:	inc    ebx
  402a97:	jnp    0x402ad1
  402a99:	xor    BYTE PTR [ebp-0x3087ee2],0x32
  402aa0:	inc    edi
  402aa1:	jg     0x402a99
  402aa3:	mov    ebp,ebp
  402aa5:	adc    eax,DWORD PTR [ebx]
  402aa7:	sub    al,0xf
  402aa9:	inc    ebx
  402aaa:	sbb    ah,dl
  402aac:	ret    
  402aad:	sub    ebp,ebp
  402aaf:	and    eax,0x390d6988
  402ab4:	mov    eax,ds:0xa2859f
  402ab9:	imul   esp,DWORD PTR [eax+0x5c690746],0x154e4e88
  402ac3:	xchg   ecx,eax
  402ac4:	sbb    DWORD PTR [ecx+eiz*4],edi
  402ac7:	repnz clc 
  402ac9:	ret    0xf89c
  402acc:	leave  
  402acd:	push   cs
  402ace:	arpl   WORD PTR [esi+edx*8+0x1458b8de],sp
  402ad5:	out    0xe2,eax
  402ad7:	enter  0x18c7,0x4c
  402adb:	ss push ebx
  402add:	loope  0x402acf
  402adf:	cmp    DWORD PTR [eax],esi
  402ae1:	test   eax,0x21ff250c
  402ae6:	dec    esp
  402ae7:	inc    esp
  402ae8:	add    esp,DWORD PTR [edi]
  402aea:	jl     0x402b45
  402aec:	sub    ebp,DWORD PTR [edi]
  402aee:	shl    DWORD PTR gs:[ecx+edx*8],cl
  402af2:	pop    es
  402af3:	mov    edi,0x4b24485e
  402af8:	sbb    BYTE PTR [ebp+0x19],0xa5
  402afc:	xchg   ebp,eax
  402afd:	test   edi,esp
  402aff:	cmc    
  402b00:	dec    esp
  402b01:	mov    WORD PTR [eax-0x2af6f513],fs
  402b07:	aaa    
  402b08:	mov    al,bh
  402b0a:	xchg   ecx,eax
  402b0b:	arpl   sp,sp
  402b0d:	shl    DWORD PTR [esp+edx*8+0x71090ccb],1
  402b14:	inc    eax
  402b15:	or     bl,ah
  402b17:	loop   0x402b82
  402b19:	mov    dh,0xed
  402b1b:	jmp    0x402b85
  402b1d:	mov    WORD PTR [ebp+0x60acc4ca],?
  402b23:	push   ebp
  402b24:	inc    esi
  402b25:	pop    ecx
  402b26:	popf   
  402b27:	push   edx
  402b28:	and    eax,0xd879a099
  402b2d:	push   ss
  402b2e:	xlat   BYTE PTR ds:[ebx]
  402b2f:	mov    esi,0x17a781b5
  402b34:	test   al,0x1c
  402b36:	or     al,0xe5
  402b38:	push   0x241476a5
  402b3d:	fild   QWORD PTR [edi-0x5e9d0ed9]
  402b43:	jmp    0x402adc
  402b45:	out    0x2,eax
  402b47:	repz adc BYTE PTR [eax+0x44],bl
  402b4b:	cwde   
  402b4c:	and    DWORD PTR [esi-0x9fc5cf7],ebx
  402b52:	push   0x1b460138
  402b57:	mov    BYTE PTR [ecx-0x5e],dl
  402b5a:	xor    edx,ecx
  402b5c:	adc    DWORD PTR [ebx],eax
  402b5e:	xchg   ecx,eax
  402b5f:	arpl   WORD PTR [ecx+0x3548b69e],bp
  402b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b66:	pop    ecx
  402b67:	pop    esi
  402b68:	mov    cs,WORD PTR [eax-0x5bfb0af1]
  402b6e:	and    al,ah
  402b70:	lea    ecx,[ebx]
  402b72:	jmp    0x402b55
  402b74:	cmc    
  402b75:	cmp    BYTE PTR [eax],ch
  402b77:	sub    edx,0xffffffbe
  402b7a:	outs   dx,BYTE PTR ds:[esi]
  402b7b:	mov    edi,0x6c7e36af
  402b80:	xchg   edx,eax
  402b81:	test   DWORD PTR [edi-0x64],esi
  402b84:	daa    
  402b85:	mov    bh,0x86
  402b87:	ret    0x3373
  402b8a:	push   esi
  402b8b:	call   0x949e:0x8c6dcbc2
  402b92:	pop    eax
  402b93:	lock test BYTE PTR [edi-0x25],0x0
  402b98:	retf   0xeeab
  402b9b:	fcomp  st(0)
  402b9d:	shl    DWORD PTR [esi+0x2d],cl
  402ba0:	jnp    0x402b83
  402ba2:	leave  
  402ba3:	ins    DWORD PTR es:[edi],dx
  402ba4:	dec    esi
  402ba5:	dec    esp
  402ba6:	cdq    
  402ba7:	jne    0x402c26
  402ba9:	sbb    eax,0x32d28634
  402bae:	dec    edx
  402baf:	mov    dh,0x3b
  402bb1:	stc    
  402bb2:	cmp    edi,DWORD PTR [eax+0x579e28af]
  402bb8:	and    eax,0x286b058f
  402bbd:	jecxz  0x402bfe
  402bbf:	or     dl,bl
  402bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bc2:	mov    dh,0xdd
  402bc4:	int    0x97
  402bc6:	inc    eax
  402bc7:	sub    BYTE PTR [edx-0x6d1ef156],bl
  402bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bce:	in     al,dx
  402bcf:	mov    bh,0x45
  402bd1:	scas   eax,DWORD PTR es:[edi]
  402bd2:	and    eax,0x191431aa
  402bd7:	jmp    0x3650:0x89225da1
  402bde:	aad    0xaa
  402be0:	loope  0x402bb6
  402be2:	addr16 dec ecx
  402be4:	cmp    esi,DWORD PTR [ecx]
  402be6:	fs dec edx
  402be8:	in     eax,0x4c
  402bea:	mov    ah,0x46
  402bec:	xchg   edx,eax
  402bed:	or     bl,dl
  402bef:	add    bl,BYTE PTR [ebx+0x79]
  402bf2:	sbb    esp,eax
  402bf4:	add    dl,BYTE PTR [edi+0x1f]
  402bf7:	iret   
  402bf8:	dec    ebx
  402bf9:	pushf  
  402bfa:	shl    BYTE PTR [ebp+0x7f],cl
  402bfd:	les    ebx,FWORD PTR [ebp+0x5c54409f]
  402c03:	scas   al,BYTE PTR es:[edi]
  402c04:	data16 aad 0x16
  402c07:	dec    ebp
  402c08:	push   ecx
  402c09:	(bad)  
  402c0a:	ins    DWORD PTR es:[edi],dx
  402c0b:	add    eax,0x71c3f258
  402c10:	adc    BYTE PTR [ebx+0x25],al
  402c13:	fsub   st(2),st
  402c15:	pop    ebx
  402c16:	les    ebx,FWORD PTR [ecx-0x56713811]
  402c1c:	and    DWORD PTR [esi],esp
  402c1e:	cwde   
  402c1f:	mov    ecx,0xf321e404
  402c24:	fild   QWORD PTR [eax]
  402c26:	mov    BYTE PTR [ebx+eiz*8-0xacc0948],bl
  402c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c2e:	stos   BYTE PTR es:[edi],al
  402c2f:	add    eax,0x7fa16f21
  402c34:	add    ecx,DWORD PTR [ecx+0x52]
  402c37:	lock pop ebx
  402c39:	xor    bh,bl
  402c3b:	addr16 das 
  402c3d:	pop    ebp
  402c3e:	inc    eax
  402c3f:	inc    ebp
  402c40:	fdivrp st(2),st
  402c42:	ss jno 0x402beb
  402c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c46:	and    ebx,ebp
  402c48:	aam    0x1b
  402c4a:	arpl   si,sp
  402c4c:	loope  0x402bfd
  402c4e:	std    
  402c4f:	repz jo 0x402c3e
  402c52:	aam    0x60
  402c54:	test   al,dh
  402c56:	mov    bl,0xbd
  402c58:	sbb    dl,dh
  402c5a:	ret    0xaed1
  402c5d:	in     eax,0xb2
  402c5f:	int    0xa6
  402c61:	jl     0x402cc4
  402c63:	stos   BYTE PTR es:[edi],al
  402c64:	shr    DWORD PTR [edx+0x1acd168f],1
  402c6a:	push   edx
  402c6b:	xchg   esp,eax
  402c6c:	and    eax,0x6daa02a5
  402c71:	jp     0x402cd9
  402c73:	retf   
  402c74:	outs   dx,BYTE PTR ds:[esi]
  402c75:	stc    
  402c76:	xor    DWORD PTR [ebp+0x76],ebp
  402c79:	jmp    0xeaba8348
  402c7e:	js     0x402c32
  402c80:	or     al,0xd9
  402c82:	add    BYTE PTR [edx-0x44ecb5de],al
  402c88:	mov    ecx,0x29fe3bad
  402c8d:	sub    BYTE PTR [edx-0x29],0xb8
  402c91:	xor    DWORD PTR [eax-0x75],ecx
  402c94:	mov    edx,0x774784d5
  402c99:	mov    ebp,0xe72ccf1a
  402c9e:	cs out dx,al
  402ca0:	stc    
  402ca1:	cmp    BYTE PTR [ebp-0x72d42a0a],ah
  402ca7:	xchg   edi,eax
  402ca8:	ja     0x402c58
  402caa:	jnp    0x402ca7
  402cac:	pop    ebx
  402cad:	push   ds
  402cae:	in     eax,0xa4
  402cb0:	in     al,0x39
  402cb2:	(bad)  
  402cb3:	sub    bl,bl
  402cb5:	sub    al,0x2
  402cb7:	in     al,dx
  402cb8:	fdiv   DWORD PTR [edi-0x10]
  402cbb:	xchg   DWORD PTR [eax],edi
  402cbd:	sbb    eax,esp
  402cbf:	cmp    BYTE PTR [esi],0x26
  402cc2:	pushf  
  402cc3:	push   0xffffffea
  402cc5:	add    al,0xea
  402cc7:	adc    DWORD PTR ds:[ebx+0x2d557c2b],0xc862f94e
  402cd2:	cmp    eax,0x2c66fbac
  402cd7:	push   edi
  402cd8:	dec    edi
  402cd9:	mov    ds:0xd4dca226,al
  402cde:	shl    cl,1
  402ce0:	out    0x8,al
  402ce2:	fisttp DWORD PTR [esi+ebp*2+0x1d0cbb49]
  402ce9:	xchg   ecx,eax
  402cea:	cs xchg dh,ch
  402ced:	and    DWORD PTR [esi+0x437cf25d],ebx
  402cf3:	cwde   
  402cf4:	mov    ebp,0xa69589cb
  402cf9:	jp     0x402cf3
  402cfb:	out    0xd0,al
  402cfd:	jle    0x402d4b
  402cff:	xchg   ecx,eax
  402d00:	push   cx
  402d02:	sbb    eax,DWORD PTR [esi-0x65642f88]
  402d08:	pop    ecx
  402d09:	or     BYTE PTR [ecx+0xb2a82d0],ch
  402d0f:	jg     0x402d80
  402d11:	shl    DWORD PTR [edi+0x55],cl
  402d14:	dec    eax
  402d15:	add    al,0xc4
  402d17:	mov    ch,0xd5
  402d19:	mov    esi,DWORD PTR [ebp-0x3c090df5]
  402d1f:	inc    eax
  402d20:	gs loopne 0x402d6c
  402d23:	scas   eax,DWORD PTR es:[edi]
  402d24:	jle    0x402cb5
  402d26:	int    0xe1
  402d28:	mov    ebx,0x5a4bc31b
  402d2d:	add    edx,DWORD PTR [ebx+0x1]
  402d30:	fsub   QWORD PTR [ecx+0x26]
  402d33:	or     BYTE PTR [eax+edi*2],0x37
  402d37:	sti    
  402d38:	xor    DWORD PTR [ebp-0x2651f6c9],edx
  402d3e:	pushf  
  402d3f:	dec    ebx
  402d40:	rol    DWORD PTR [eax-0x1a],0xb2
  402d44:	pop    ecx
  402d45:	out    dx,eax
  402d46:	test   al,0xe
  402d48:	(bad)  
  402d49:	jo     0x402cf5
  402d4b:	jbe    0x402d7c
  402d4d:	mov    WORD PTR [ecx+0x9],gs
  402d50:	jge    0x402dab
  402d52:	stos   BYTE PTR es:[edi],al
  402d53:	je     0x402cee
  402d55:	pop    es
  402d56:	dec    ebx
  402d57:	into   
  402d58:	pop    ds
  402d59:	adc    eax,0x44cff0f
  402d5e:	in     eax,dx
  402d5f:	hlt    
  402d60:	mov    ch,0x69
  402d62:	xor    eax,0xc649c9ab
  402d67:	fadd   st(5),st
  402d69:	cmp    eax,ecx
  402d6b:	into   
  402d6c:	jmp    DWORD PTR [eax+0x1242887f]
  402d72:	and    al,0x78
  402d74:	jge    0x402d01
  402d76:	lods   al,BYTE PTR ds:[esi]
  402d77:	mov    dh,0xd0
  402d79:	and    al,0x49
  402d7b:	push   ss
  402d7c:	bound  edi,QWORD PTR [eax+esi*8]
  402d7f:	out    dx,eax
  402d80:	lea    ebp,[ebx-0x34]
  402d83:	nop
  402d84:	cmp    al,0xcd
  402d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d87:	mov    ch,0xe3
  402d89:	fcmovnu st,st(7)
  402d8b:	mov    ebp,0x991454c5
  402d90:	aas    
  402d91:	xor    eax,0x54233177
  402d96:	mov    edi,0x373e28d5
  402d9b:	hlt    
  402d9c:	sub    BYTE PTR [ecx-0x9],cl
  402d9f:	or     BYTE PTR [ebx],0x16
  402da2:	rcl    BYTE PTR [eax+0x23ec1b81],cl
  402da8:	xor    al,0x4b
  402daa:	ins    DWORD PTR es:[edi],dx
  402dab:	and    BYTE PTR [esi],al
  402dad:	aas    
  402dae:	mov    eax,0x5aa61de7
  402db3:	loopne 0x402d39
  402db5:	push   0xe94ceba6
  402dba:	gs scas eax,DWORD PTR es:[edi]
  402dbc:	inc    eax
  402dbd:	(bad)  
  402dbe:	lock sar eax,1
  402dc1:	je     0x402d5b
  402dc3:	xor    DWORD PTR [edx-0x7ed99aac],ecx
  402dc9:	fnstsw WORD PTR [bx+si-0x3c52]
  402dce:	adc    cl,BYTE PTR [ebx+0x1f]
  402dd1:	mov    edx,0xd0e646da
  402dd6:	cmc    
  402dd7:	and    BYTE PTR [edi],bh
  402dd9:	popf   
  402dda:	xor    ebp,DWORD PTR [edx+0x543aa58b]
  402de0:	sub    al,0x9f
  402de2:	jno    0x402e43
  402de4:	daa    
  402de5:	loopne 0x402d6a
  402de7:	imul   eax,esp,0x2a6b1d79
  402ded:	(bad)  
  402dee:	out    dx,al
  402def:	xchg   edx,eax
  402df0:	int    0x1f
  402df2:	xchg   edx,eax
  402df3:	sub    DWORD PTR [ecx],ecx
  402df5:	aaa    
  402df6:	jo     0x402e37
  402df8:	mov    cl,0xbe
  402dfa:	cmp    al,0x67
  402dfc:	hlt    
  402dfd:	test   eax,0xf92cc6be
  402e02:	or     bh,bh
  402e04:	mov    ebx,DWORD PTR [esi-0x3]
  402e07:	das    
  402e08:	and    ebp,DWORD PTR ds:0xbe0b5f40
  402e0e:	pop    ds
  402e0f:	jbe    0x402dd5
  402e11:	mov    ss,esp
  402e13:	pushf  
  402e14:	jo     0x402e15
  402e16:	jg     0x402e5b
  402e18:	mov    ds:0x592ea75e,eax
  402e1d:	lds    edi,FWORD PTR [edi+eax*4-0x285b2882]
  402e24:	inc    DWORD PTR [bp+di+0x11b8]
  402e29:	jmp    0xe086:0x12ce5abf
  402e30:	leave  
  402e31:	push   cs
  402e32:	repz cmc 
  402e34:	pop    ebp
  402e35:	jno    0x402e41
  402e37:	fimul  WORD PTR [edx]
  402e39:	cli    
  402e3a:	nop
  402e3b:	out    dx,al
  402e3c:	aam    0x16
  402e3e:	jecxz  0x402e6b
  402e40:	and    DWORD PTR [edi+0x23],ebx
  402e43:	inc    DWORD PTR [ecx-0x52]
  402e46:	aaa    
  402e47:	mov    ah,0xa2
  402e49:	into   
  402e4a:	push   esi
  402e4b:	retf   0xaf41
  402e4e:	and    BYTE PTR [eax+0x3f491af8],dh
  402e54:	or     cl,BYTE PTR [ecx]
  402e56:	or     eax,0x9fef117b
  402e5b:	jnp    0x402e8a
  402e5d:	or     DWORD PTR [ebx],0x6cbc94a3
  402e63:	(bad)  
  402e64:	hlt    
  402e65:	add    cl,BYTE PTR [esp+esi*8-0x7e62ed86]
  402e6c:	or     edi,DWORD PTR [ebx]
  402e6e:	or     al,0x71
  402e70:	outs   dx,BYTE PTR ds:[esi]
  402e71:	cmp    eax,DWORD PTR [edi]
  402e73:	xor    edx,DWORD PTR [ebx+0x5dbb9d94]
  402e79:	push   eax
  402e7a:	jl     0x402e50
  402e7c:	imul   ebp,DWORD PTR [edx],0xb6ba1c7
  402e82:	jb     0x402e4b
  402e84:	dec    eax
  402e85:	lds    eax,FWORD PTR [ebx]
  402e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e88:	or     eax,0xf3920530
  402e8d:	dec    ecx
  402e8e:	xchg   ebp,eax
  402e8f:	xchg   ecx,ecx
  402e91:	pop    es
  402e92:	or     eax,0x793aa8fc
  402e97:	jecxz  0x402eb7
  402e99:	mov    gs,WORD PTR [ebp-0x59]
  402e9c:	xchg   BYTE PTR [edi],dh
  402e9e:	jb     0x402f01
  402ea0:	add    bh,dh
  402ea2:	enter  0x8910,0x90
  402ea6:	sbb    ebx,DWORD PTR [edi-0x141a0166]
  402eac:	jp     0x402e66
  402eae:	inc    ebx
  402eaf:	xlat   BYTE PTR ds:[ebx]
  402eb0:	dec    ebx
  402eb1:	mov    esi,0x64bd912
  402eb6:	jl     0x402eef
  402eb8:	jmp    0x54cb:0xc724b1b8
  402ebf:	mov    ds:0x6b7d29af,eax
  402ec4:	adc    eax,0x9dd4ef0d
  402ec9:	out    dx,eax
  402eca:	xor    DWORD PTR [eax+0x3],ecx
  402ecd:	cmp    eax,0x87a6f4f8
  402ed2:	test   DWORD PTR [ebx],edi
  402ed4:	push   ds
  402ed5:	scas   al,BYTE PTR es:[edi]
  402ed6:	add    al,0x30
  402ed8:	xchg   ebp,eax
  402ed9:	fwait
  402eda:	jle    0x402ea0
  402edc:	iret   
  402edd:	adc    BYTE PTR [edi],0xa6
  402ee0:	ret    0xd31f
  402ee3:	adc    BYTE PTR [edi-0x41],al
  402ee6:	inc    eax
  402ee7:	sbb    eax,0x6cad40b
  402eec:	rcl    edi,1
  402eee:	pop    eax
  402eef:	(bad)  
  402ef0:	fiadd  WORD PTR [edx]
  402ef2:	mov    al,0x93
  402ef4:	sub    ebp,DWORD PTR ds:0x59a4f3fc
  402efa:	jne    0x402ef3
  402efc:	mov    eax,ds:0x8b705226
  402f01:	ret    0x1cc9
  402f04:	test   BYTE PTR [edi-0x29],0xbd
  402f08:	jo     0x402ec3
  402f0a:	mov    DWORD PTR [eax-0x35336b88],ebp
  402f10:	outs   dx,DWORD PTR ds:[esi]
  402f11:	call   0xe6aab985
  402f16:	xchg   ecx,eax
  402f17:	xor    dh,al
  402f19:	les    edx,FWORD PTR [ebx+edx*2-0x26]
  402f1d:	sbb    eax,0x6be4f5ec
  402f22:	pop    ebp
  402f23:	jnp    0x402f07
  402f25:	jl     0x402f19
  402f27:	xchg   BYTE PTR [ebp-0x7f72434],bh
  402f2d:	inc    BYTE PTR [eax+0x2f458877]
  402f33:	test   eax,0xd61258f9
  402f38:	ss scas al,BYTE PTR es:[edi]
  402f3a:	(bad)  [esi+0x77d406d]
  402f40:	cmp    al,0x62
  402f42:	jmp    0x684c:0x33aeacb5
  402f49:	bound  ebp,QWORD PTR [eax+0x73]
  402f4c:	and    dh,BYTE PTR [ecx]
  402f4e:	jnp    0x402f08
  402f50:	push   ss
  402f51:	sbb    DWORD PTR [esi+0x6],ebp
  402f54:	sbb    ch,cl
  402f56:	or     ecx,DWORD PTR [esi-0x364bbcb9]
  402f5c:	fisttp WORD PTR [ebx-0x6c2eb585]
  402f62:	sub    bh,0x44
  402f65:	adc    DWORD PTR [edx],esp
  402f67:	sti    
  402f68:	fucom  st(6)
  402f6a:	outs   dx,DWORD PTR ds:[esi]
  402f6b:	in     al,0xe9
  402f6d:	xor    bh,BYTE PTR [ebx]
  402f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f70:	imul   ecx,DWORD PTR [ebp-0x3751f38b],0xbeb02111
  402f7a:	sub    eax,0xeaa25049
  402f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f80:	xchg   ebp,eax
  402f81:	lahf   
  402f82:	sbb    BYTE PTR [esi],al
  402f84:	jp     0x402f6f
  402f86:	jmp    0x1fb6cf8
  402f8b:	dec    esi
  402f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8d:	jno    0x402fc5
  402f8f:	push   ecx
  402f91:	push   0x91905660
  402f96:	cs iret 
  402f98:	sub    bh,ah
  402f9a:	stc    
  402f9b:	or     eax,DWORD PTR [edi-0x7a531bfd]
  402fa1:	or     eax,0xfbb092f0
  402fa6:	fdivr  QWORD PTR [esi-0x2]
  402fa9:	add    al,0x9e
  402fab:	adc    al,0x5b
  402fad:	sahf   
  402fae:	in     al,dx
  402faf:	jb     0x402ff4
  402fb1:	adc    bh,0xdf
  402fb4:	cld    
  402fb5:	out    0xec,eax
  402fb7:	out    0x9e,eax
  402fb9:	push   0xd7168316
  402fbe:	jl     0x402fd8
  402fc0:	std    
  402fc1:	call   0xf95ed52a
  402fc6:	data16 daa 
  402fc8:	xor    al,0x18
  402fca:	xor    eax,0x453f767f
  402fcf:	pusha  
  402fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd1:	fiadd  DWORD PTR [eax]
  402fd3:	dec    ebp
  402fd4:	cmp    BYTE PTR [edi],dl
  402fd6:	and    ah,BYTE PTR [ebx+0x7e]
  402fd9:	aam    0x29
  402fdb:	sti    
  402fdc:	std    
  402fdd:	ret    0x8237
  402fe0:	call   0xd5c9:0xbce7ce86
  402fe7:	inc    edi
  402fe8:	xchg   esp,eax
  402fe9:	xor    eax,0xce8b2edc
  402fee:	sbb    edx,DWORD PTR [edi+0xb248f5a]
  402ff4:	mov    ebp,0xa8cf29f7
  402ff9:	icebp  
  402ffa:	in     eax,dx
  402ffb:	or     esi,0x9a051118
  403001:	sub    ah,ch
  403003:	aas    
  403004:	lods   al,BYTE PTR ds:[esi]
  403005:	xor    esi,0xe5c035c8
  40300b:	adc    dh,bh
  40300d:	clc    
  40300e:	add    eax,0xb18f4c72
  403013:	rol    edx,1
  403015:	pop    es
  403016:	(bad)  
  403018:	sar    bl,0x6c
  40301b:	aas    
  40301c:	jae    0x402faf
  40301e:	adc    esi,DWORD PTR [eax-0xc07dbf5]
  403024:	sbb    DWORD PTR [edx+0x4b9ecafb],eax
  40302a:	sbb    BYTE PTR [ecx],0x0
  40302d:	lock aam 0x91
  403030:	aaa    
  403031:	xchg   esi,eax
  403032:	xor    eax,0x1c76582b
  403037:	daa    
  403038:	jmp    FWORD PTR [ecx+edx*1+0x6ca5ba4f]
  40303f:	inc    ebp
  403040:	aas    
  403041:	daa    
  403042:	cdq    
  403043:	jecxz  0x40301e
  403045:	aad    0xb4
  403047:	lods   eax,DWORD PTR ds:[esi]
  403048:	pop    esp
  403049:	ret    0xc94a
  40304c:	test   DWORD PTR [esi+0x3c],ecx
  40304f:	rcr    BYTE PTR [ebp+0x5],1
  403052:	add    dh,BYTE PTR [ebx+0x3a]
  403055:	shr    DWORD PTR ds:0x927a5850,0x18
  40305c:	hlt    
  40305d:	jns    0x40304d
  40305f:	cmp    al,0x75
  403061:	call   FWORD PTR ds:0xb69521b0
  403067:	sub    al,BYTE PTR [edi+0x5c]
  40306a:	push   ebp
  40306b:	xchg   esi,eax
  40306c:	out    0x9e,eax
  40306e:	dec    edi
  40306f:	cmp    al,0xf4
  403071:	imul   ebx,ecx,0x0
  403074:	mov    eax,0xb4d33f3
  403079:	test   BYTE PTR [ebx+0x10a7779a],ah
  40307f:	inc    ecx
  403080:	mov    WORD PTR [ebp-0x6eae5e01],gs
  403086:	adc    DWORD PTR ds:0x9160ab41,ecx
  40308c:	mov    ds:0x581927fc,eax
  403091:	not    DWORD PTR [eax-0x59]
  403094:	mov    ds:0xf422a95a,eax
  403099:	mov    ah,0xff
  40309b:	hlt    
  40309c:	and    dl,BYTE PTR [ebp+edi*1-0x6a]
  4030a0:	lahf   
  4030a1:	xchg   esi,eax
  4030a2:	mov    ecx,edi
  4030a4:	inc    ebx
  4030a5:	cmp    eax,0xb9286452
  4030aa:	movaps XMMWORD PTR [eax],xmm7
  4030ad:	pop    edi
  4030ae:	and    bl,ah
  4030b0:	addr16 call 0xbd365faa
  4030b6:	jns    0x40303c
  4030b8:	jno    0x4030d6
  4030ba:	ds mov ah,0x63
  4030bd:	mov    WORD PTR [edi-0x6b],fs
  4030c0:	int    0x91
  4030c2:	xchg   ecx,eax
  4030c3:	movlps xmm2,QWORD PTR [esi]
  4030c6:	int    0x7d
  4030c8:	dec    esp
  4030c9:	add    edi,DWORD PTR [edx-0x499c28e]
  4030cf:	mov    esi,0xf4500286
  4030d4:	jae    0x4030d1
  4030d6:	push   edi
  4030d7:	arpl   WORD PTR [eax+edi*2+0x31],di
  4030db:	test   DWORD PTR [edi*2+0x1dd387f],0x339dc2ac
  4030e6:	into   
  4030e7:	call   DWORD PTR [ebx+ecx*1-0x5f]
  4030eb:	rep outs dx,BYTE PTR ds:[esi]
  4030ed:	shr    dh,1
  4030ef:	stos   BYTE PTR es:[edi],al
  4030f0:	sub    BYTE PTR [edx-0x2f],dl
  4030f3:	sub    al,0x77
  4030f5:	retf   
  4030f6:	sub    esi,eax
  4030f8:	xchg   BYTE PTR [edi+eiz*4],al
  4030fb:	mov    esi,0xa0747089
  403100:	inc    edi
  403101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403102:	(bad)  
  403104:	dec    edi
  403105:	adc    ebp,DWORD PTR [esi-0x18]
  403108:	scas   al,BYTE PTR es:[edi]
  403109:	aas    
  40310a:	out    dx,al
  40310b:	and    eax,edx
  40310d:	jp     0x4030e0
  40310f:	fisttp QWORD PTR ds:0x2122323
  403115:	push   edi
  403116:	rcr    BYTE PTR [edx],cl
  403118:	cmp    BYTE PTR [edx+0x7d],cl
  40311b:	xchg   ebx,eax
  40311c:	inc    ebp
  40311d:	mov    dh,0xb8
  40311f:	mov    DWORD PTR [edi-0x29694910],edx
  403125:	jmp    0x345ef7c9
  40312a:	jns    0x403176
  40312c:	cmp    eax,0x3ad280b3
  403131:	mov    al,0x8d
  403133:	mov    al,0x5b
  403135:	jle    0x4030be
  403137:	out    0x24,eax
  403139:	and    BYTE PTR [eax+0x49],bl
  40313c:	das    
  40313d:	inc    ebx
  40313e:	pop    eax
  40313f:	imul   ecx,DWORD PTR [ebp+0x197cfc84],0xe88ac3ba
  403149:	fcmovb st,st(6)
  40314b:	sbb    ah,BYTE PTR [eax+eax*8+0xb585c96]
  403152:	cdq    
  403153:	rcr    DWORD PTR [edx],0x66
  403156:	arpl   WORD PTR [edx+0x52],bp
  403159:	mov    bl,0x3
  40315b:	push   0xffffff8b
  40315d:	or     bl,BYTE PTR [esi+0x611d905f]
  403163:	push   ecx
  403164:	push   0x76
  403166:	in     al,0xf4
  403168:	retf   0xb13a
  40316b:	imul   ecx,DWORD PTR [edx-0x57],0x5c
  40316f:	adc    ebx,DWORD PTR [edi-0x7a532b88]
  403175:	jmp    0x1a8afaa6
  40317a:	out    dx,al
  40317b:	mov    ecx,0x311088
  403180:	outs   dx,BYTE PTR ds:[esi]
  403181:	pop    esi
  403182:	mov    ds:0xfe81c5cb,eax
  403187:	test   BYTE PTR [edi+edi*4],cl
  40318a:	(bad)  
  40318b:	ins    BYTE PTR es:[edi],dx
  40318c:	ja     0x40313f
  40318e:	ins    DWORD PTR es:[edi],dx
  40318f:	mov    eax,0x59c9d2c6
  403194:	mov    DWORD PTR [esi],ebx
  403196:	push   ss
  403197:	push   es
  403198:	pop    ebp
  403199:	pop    ebx
  40319a:	ins    DWORD PTR es:[edi],dx
  40319b:	mov    eax,0xc35e96b6
  4031a0:	pop    edx
  4031a1:	inc    ebx
  4031a2:	je     0x4031e6
  4031a4:	cmp    BYTE PTR [ebx-0x73],dl
  4031a7:	(bad)  
  4031a8:	mov    ecx,0xa30b7b19
  4031ad:	jmp    0x403178
  4031af:	pop    es
  4031b0:	push   eax
  4031b1:	pop    esp
  4031b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b3:	enter  0xd6f6,0x49
  4031b7:	xor    BYTE PTR [ebp-0x69],al
  4031ba:	inc    ecx
  4031bb:	mov    ch,0xee
  4031bd:	adc    BYTE PTR [ecx-0x3a],bl
  4031c0:	mov    DWORD PTR [eax-0x55],ecx
  4031c3:	inc    ebx
  4031c4:	in     al,dx
  4031c5:	mov    bh,0x6c
  4031c7:	aam    0x5d
  4031c9:	xchg   esi,eax
  4031ca:	fdiv   st,st(1)
  4031cc:	pop    edi
  4031cd:	fild   WORD PTR [ecx]
  4031cf:	dec    eax
  4031d0:	ret    0xe482
  4031d3:	loope  0x4031d5
  4031d5:	jp     0x4031ec
  4031d7:	outs   dx,DWORD PTR ds:[esi]
  4031d8:	outs   dx,BYTE PTR ds:[esi]
  4031d9:	mov    eax,ds:0xb2b95aa0
  4031de:	and    DWORD PTR es:[ecx+0x77],esp
  4031e2:	fnstcw WORD PTR [ebp+0x59148f5a]
  4031e8:	stc    
  4031e9:	loope  0x403247
  4031eb:	ds sub eax,0x4508562
  4031f1:	push   ebp
  4031f2:	dec    ebx
  4031f3:	xor    ebp,DWORD PTR [eax+0x7e462942]
  4031f9:	inc    ecx
  4031fa:	mov    eax,ds:0xea004e42
  4031ff:	sbb    BYTE PTR [eax-0x3b58aacb],dl
  403205:	pop    edi
  403206:	cmp    dh,BYTE PTR [ebp+0x5c]
  403209:	icebp  
  40320a:	retf   0x49d0
  40320d:	jae    0x403248
  40320f:	sub    edi,DWORD PTR [edi+0x13]
  403212:	push   ebp
  403213:	arpl   dx,bp
  403215:	ror    dh,1
  403217:	pop    esi
  403218:	imul   ecx,DWORD PTR [eax],0x7e
  40321b:	jecxz  0x403225
  40321d:	ins    BYTE PTR es:[edi],dx
  40321e:	cmp    eax,0x21c77a62
  403223:	dec    ecx
  403224:	inc    esp
  403225:	dec    ebp
  403226:	lods   eax,DWORD PTR ds:[esi]
  403227:	add    DWORD PTR [edx],edi
  403229:	xchg   esp,eax
  40322a:	push   0xfffffffd
  40322c:	lea    esi,[esi-0x57bae25a]
  403232:	jmp    0x40325f
  403234:	(bad)  
  403235:	in     al,dx
  403236:	jecxz  0x403240
  403238:	(bad)  
  403239:	jl     0x403251
  40323b:	cmp    al,BYTE PTR [eax-0x2d]
  40323e:	repnz add cl,BYTE PTR [eax-0x6b]
  403242:	xchg   BYTE PTR ds:0xf35627ca,al
  403248:	mov    edi,0xb685afb8
  40324d:	xor    BYTE PTR [ebx-0x7b9735f9],al
  403253:	or     cl,BYTE PTR [eax]
  403255:	lds    eax,FWORD PTR [esi]
  403257:	imul   eax,DWORD PTR ds:[edi+0x7e54ca92],0xfffffff1
  40325f:	int3   
  403260:	loope  0x40328d
  403262:	mov    ecx,0xf43f5c8b
  403267:	cmp    eax,0x377aef31
  40326c:	and    DWORD PTR [edi+ebp*4],ecx
  40326f:	ds push ss
  403271:	stos   BYTE PTR es:[edi],al
  403272:	adc    DWORD PTR [bp+di+0x288a],esp
  403277:	cmc    
  403278:	test   DWORD PTR [ebx],esp
  40327a:	loopne 0x403233
  40327c:	and    dh,al
  40327e:	leave  
  40327f:	inc    edx
  403280:	sbb    DWORD PTR ds:0x3464564a,esp
  403286:	pop    ebp
  403287:	push   es
  403288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403289:	jae    0x403260
  40328b:	or     ch,ah
  40328d:	adc    esp,DWORD PTR [esi+ebx*4-0x2ea2cb50]
  403294:	in     al,dx
  403295:	sbb    eax,0x43257f9f
  40329a:	popf   
  40329b:	jl     0x4032a4
  40329d:	cli    
  40329e:	mov    eax,0xcb3b926b
  4032a3:	pop    edi
  4032a4:	cmp    ebp,esp
  4032a6:	mov    BYTE PTR [ecx+0x381d4e2e],0x9c
  4032ad:	jp     0x4032c7
  4032af:	lods   eax,DWORD PTR ds:[esi]
  4032b0:	(bad)  
  4032b2:	jno    0x4032ed
  4032b4:	test   BYTE PTR [ecx],0x8b
  4032b7:	rcl    BYTE PTR [edx+0x1e],0x99
  4032bb:	sbb    bl,dh
  4032bd:	outs   dx,DWORD PTR ds:[esi]
  4032be:	push   ebx
  4032bf:	repnz pop eax
  4032c1:	mov    ch,0x61
  4032c3:	repnz or al,0x32
  4032c6:	out    dx,al
  4032c7:	shr    dh,1
  4032c9:	mov    esi,0x22cf9987
  4032ce:	gs jo  0x4032b3
  4032d1:	pop    ss
  4032d2:	sub    ah,BYTE PTR [edi-0x20d86efa]
  4032d8:	xchg   edi,eax
  4032d9:	or     al,0x7c
  4032db:	mov    ah,0xec
  4032dd:	int    0x9e
  4032df:	push   esi
  4032e0:	mov    eax,0x8005abf0
  4032e5:	nop
  4032e6:	ins    DWORD PTR es:[edi],dx
  4032e7:	out    dx,al
  4032e8:	sbb    ah,BYTE PTR ds:0x973eb8a3
  4032ee:	test   al,0x79
  4032f0:	mov    eax,0xe2a98628
  4032f5:	ror    DWORD PTR [ecx-0x32],0xd1
  4032f9:	out    dx,al
  4032fa:	(bad)  
  4032fb:	or     ebx,esi
  4032fd:	pop    edx
  4032fe:	push   ds
  4032ff:	outs   dx,BYTE PTR ds:[esi]
  403300:	fstp   TBYTE PTR [edi+0x14]
  403303:	adc    BYTE PTR [eax],cl
  403305:	scas   eax,DWORD PTR es:[edi]
  403306:	fadd   st,st(7)
  403308:	call   0x6b490b29
  40330d:	jno    0x4032c8
  40330f:	and    eax,DWORD PTR [eax+0xd]
  403312:	repz iret 
  403314:	(bad)  
  403315:	dec    ebp
  403316:	scas   al,BYTE PTR es:[edi]
  403317:	and    ecx,esp
  403319:	inc    esp
  40331a:	jmp    0x6354:0x2a817e
  403321:	mov    ah,0xc7
  403323:	lds    esi,FWORD PTR [esp+edi*2+0x62400e05]
  40332a:	and    ch,dl
  40332c:	fdivr  st,st(6)
  40332e:	and    DWORD PTR ds:0x76c89964,ebp
  403334:	rcl    DWORD PTR [ebx+0x51],cl
  403337:	or     eax,0x9b9b6306
  40333c:	mov    edx,0xc2ff6dc2
  403341:	xor    DWORD PTR [eax],ebx
  403343:	mov    bh,0xb4
  403345:	hlt    
  403346:	pop    ss
  403347:	cmp    cl,ch
  403349:	int3   
  40334a:	imul   DWORD PTR [ebp+0x44]
  40334d:	adc    DWORD PTR [ebp+0x6e5fed8d],ebx
  403353:	sbb    edi,esp
  403355:	xchg   edi,eax
  403356:	jmp    0x83b2:0xe6b023a4
  40335d:	rcr    DWORD PTR [ebx+0xbc667d5],cl
  403363:	stos   BYTE PTR es:[edi],al
  403364:	sbb    BYTE PTR ds:0xf11f2570,al
  40336a:	in     al,dx
  40336b:	push   ebp
  40336c:	sahf   
  40336d:	mov    ebx,DWORD PTR [ecx]
  40336f:	add    esp,0x12
  403372:	shl    BYTE PTR [eax],0x45
  403375:	sub    DWORD PTR [esi+0x2dd8fcb1],esi
  40337b:	and    edi,DWORD PTR [ebx]
  40337d:	nop
  40337e:	in     al,dx
  40337f:	mov    dh,cl
  403381:	mov    ebp,ebp
  403383:	mov    ch,0xbb
  403385:	in     eax,0x1
  403387:	iret   
  403388:	fld    TBYTE PTR [edi]
  40338a:	(bad)  
  40338b:	jbe    0x4033fe
  40338d:	adc    BYTE PTR [esi],cl
  40338f:	call   edi
  403391:	fidivr DWORD PTR [esi]
  403393:	cld    
  403394:	xor    ah,BYTE PTR [esi-0x3f]
  403397:	mov    ds:0x718e893f,eax
  40339c:	pop    esp
  40339d:	pop    edi
  40339e:	es push 0xfffffff7
  4033a1:	inc    esi
  4033a2:	mov    bh,0x10
  4033a4:	xor    DWORD PTR [ecx+0x6422dd37],esi
  4033aa:	xor    ebp,ebp
  4033ac:	mov    esp,0x4c2af365
  4033b1:	retf   0x2fdf
  4033b4:	mov    eax,ds:0xb4a737d4
  4033b9:	dec    ebx
  4033ba:	addr16 xchg ecx,eax
  4033bc:	add    DWORD PTR [edx-0x23],0x6cb3c6a0
  4033c3:	xchg   esp,ebp
  4033c5:	out    0xaa,al
  4033c7:	lock mov ah,0xe3
  4033ca:	lea    ebp,[edi]
  4033cc:	jge    0x403354
  4033ce:	push   cs
  4033cf:	mov    ecx,0xda5929ed
  4033d4:	std    
  4033d5:	mov    esp,0xbaeed7ec
  4033da:	loop   0x40343b
  4033dc:	aas    
  4033dd:	xchg   esp,eax
  4033de:	add    edi,ebx
  4033e0:	fst    DWORD PTR [esi+edx*1+0x4e]
  4033e4:	or     ebx,DWORD PTR [edi+0x54]
  4033e7:	pop    esi
  4033e8:	repnz icebp 
  4033ea:	jb     0x40339e
  4033ec:	jp     0x40341f
  4033ee:	daa    
  4033ef:	or     BYTE PTR [eax-0x74f44d20],0x5a
  4033f6:	mov    al,ds:0xdac6d9e
  4033fb:	ret    
  4033fc:	pusha  
  4033fd:	repnz mov ah,0x29
  403400:	mov    WORD PTR [esi],fs
  403402:	or     ebp,DWORD PTR [edi-0x54]
  403405:	pop    edx
  403406:	mov    ecx,0x89fa53f
  40340b:	xor    dh,ch
  40340d:	popa   
  40340e:	pop    ebp
  40340f:	push   eax
  403410:	cwde   
  403411:	dec    edx
  403412:	in     al,dx
  403413:	adc    al,0x61
  403415:	xchg   esp,eax
  403416:	mov    eax,0x66384401
  40341b:	mov    eax,ecx
  40341d:	adc    al,BYTE PTR [edx]
  40341f:	jecxz  0x4033ed
  403421:	popa   
  403422:	dec    ecx
  403423:	xchg   esp,eax
  403424:	xchg   edx,eax
  403425:	sbb    esp,DWORD PTR [edi+0x589c920c]
  40342b:	jnp    0x403478
  40342d:	arpl   WORD PTR [esi-0x1e04f051],dx
  403433:	pop    ebp
  403434:	push   0xcd24fc01
  403439:	clc    
  40343a:	nop
  40343b:	lds    esi,FWORD PTR [edx-0x45518bce]
  403441:	adc    al,0x55
  403443:	test   DWORD PTR [eax],esp
  403445:	lds    edx,FWORD PTR [ecx+0x4]
  403448:	adc    al,ah
  40344a:	add    DWORD PTR [ebx],eax
  40344c:	mov    ebp,0xa27ce1d7
  403451:	adc    bl,BYTE PTR [eax]
  403453:	mov    al,ds:0xaf563442
  403458:	jbe    0x403473
  40345a:	push   cs
  40345b:	(bad)  
  40345d:	and    eax,0x69441176
  403462:	mov    ds:0x3a4efbe8,eax
  403467:	mov    eax,DWORD PTR [ebx]
  403469:	xchg   ebx,eax
  40346a:	push   edx
  40346b:	into   
  40346c:	cmp    ecx,DWORD PTR [esi-0x3e223a6]
  403472:	ret    
  403473:	popf   
  403474:	(bad)  
  403475:	call   DWORD PTR ds:0x98d7715c
  40347b:	dec    ebx
  40347c:	push   ebp
  40347d:	pusha  
  40347e:	adc    DWORD PTR [ebp+0x373d5d40],eax
  403484:	clc    
  403485:	popf   
  403486:	sbb    al,0x59
  403488:	mov    al,ds:0x22648464
  40348d:	dec    edx
  40348e:	mov    eax,ds:0x6b9273b3
  403493:	sbb    eax,0x3cb09bbd
  403498:	pop    ebx
  403499:	test   al,0x32
  40349b:	outs   dx,BYTE PTR ds:[esi]
  40349c:	loope  0x4034ec
  40349e:	data16 cld 
  4034a0:	jnp    0x403462
  4034a2:	mov    dh,0x83
  4034a4:	and    dh,0xb6
  4034a7:	mov    ebx,0xfd985e3b
  4034ad:	ret    0x8d8c
  4034b0:	call   0x65f6:0x27e8ca1b
  4034b7:	pop    ebx
  4034b8:	dec    esi
  4034b9:	adc    BYTE PTR [ecx+0x336d5bd0],bl
  4034bf:	and    DWORD PTR [edx],edx
  4034c1:	cld    
  4034c2:	push   cs
  4034c3:	mul    BYTE PTR [edx-0x597509ab]
  4034c9:	outs   dx,DWORD PTR ds:[esi]
  4034ca:	repz gs test DWORD PTR ss:[esi-0x3c72a20b],eax
  4034d3:	or     ch,dl
  4034d5:	jl     0x403479
  4034d7:	push   ecx
  4034d8:	add    al,0x9f
  4034da:	icebp  
  4034db:	lods   eax,DWORD PTR ds:[esi]
  4034dc:	xchg   BYTE PTR [esi+0x52237ba6],ah
  4034e2:	mov    dl,0x41
  4034e4:	ins    BYTE PTR es:[edi],dx
  4034e5:	inc    esi
  4034e6:	not    DWORD PTR [edi+0x37c00566]
  4034ec:	sub    al,0x16
  4034ee:	(bad)  
  4034ef:	std    
  4034f0:	sbb    bh,BYTE PTR [edx+0x32eb7d71]
  4034f6:	mov    ds:0xae5c539f,eax
  4034fb:	mov    ebx,?
  4034fd:	pop    ecx
  4034fe:	sbb    BYTE PTR [esi+eax*2],dl
  403501:	pop    esp
  403502:	fld    QWORD PTR [esi+0x2faa72b0]
  403508:	leave  
  403509:	mov    ecx,0x47003ec1
  40350e:	dec    edx
  40350f:	mov    edi,DWORD PTR [edi]
  403511:	imul   eax,DWORD PTR [eax-0x15],0x52
  403515:	xor    ebx,DWORD PTR [ebx-0x59]
  403518:	stc    
  403519:	int3   
  40351a:	or     DWORD PTR [edx],0x69
  40351d:	pop    edi
  40351e:	shr    BYTE PTR [ebx+0xb],1
  403521:	lods   al,BYTE PTR ds:[esi]
  403522:	es adc eax,0x1dcdc34e
  403528:	and    DWORD PTR [ebp+esi*8+0x70ad4531],esi
  40352f:	ja     0x4034f7
  403531:	inc    ecx
  403532:	xchg   esi,eax
  403533:	xchg   edi,eax
  403534:	sahf   
  403535:	adc    al,0xb3
  403537:	mov    edi,DWORD PTR [ecx]
  403539:	xor    DWORD PTR [ebp-0x77],ecx
  40353c:	aaa    
  40353d:	aad    0xa1
  40353f:	and    al,0x84
  403541:	inc    ecx
  403542:	leave  
  403543:	xor    bl,dh
  403545:	pop    edx
  403546:	adc    BYTE PTR [eax],0x5b
  403549:	rol    BYTE PTR [ecx],1
  40354b:	test   DWORD PTR [ebx],edx
  40354d:	mov    ebp,0xe0a6880f
  403552:	inc    ebx
  403553:	mov    ds:0x855ab613,al
  403558:	aam    0x81
  40355a:	arpl   WORD PTR [ecx+0x11],sp
  40355d:	jge    0x403596
  40355f:	dec    ebp
  403560:	push   0xe65ee9c4
  403565:	xchg   ecx,eax
  403566:	pop    es
  403567:	fldcw  WORD PTR [edx+0x7aa20e63]
  40356d:	push   esp
  40356e:	or     al,0xfb
  403570:	push   edx
  403571:	pop    ds
  403572:	adc    BYTE PTR [edx-0x56ea5674],0xe4
  403579:	icebp  
  40357a:	es call 0xad3ab10b
  403580:	mov    gs,WORD PTR [edx+0x35]
  403583:	frstor [ebx]
  403585:	xor    sp,si
  403588:	xchg   ebp,eax
  403589:	mov    dh,0xbc
  40358b:	out    0x25,eax
  40358d:	mov    WORD PTR [edx+0x6f],ds
  403590:	dec    eax
  403591:	sar    BYTE PTR [esi-0x11],1
  403594:	imul   esi,DWORD PTR [edi+esi*4-0x60dc5d7f],0x3ade73f
  40359f:	cld    
  4035a0:	and    al,0x6a
  4035a2:	dec    eax
  4035a3:	xor    BYTE PTR ds:[ecx],0xf1
  4035a7:	inc    edx
  4035a8:	mov    eax,0x597a01c5
  4035ad:	push   0x1f
  4035af:	xor    eax,0xc625b5b
  4035b4:	or     eax,0x5c16912f
  4035b9:	jae    0x40358c
  4035bb:	addr16 je 0x4035ec
  4035be:	push   0x3f
  4035c0:	inc    ebx
  4035c1:	inc    edi
  4035c2:	cmp    eax,0x78421b96
  4035c7:	daa    
  4035c8:	leave  
  4035c9:	pushf  
  4035ca:	sub    BYTE PTR [edi+ebx*2-0x1fc3dfe5],al
  4035d1:	push   esp
  4035d2:	fwait
  4035d3:	imul   eax,DWORD PTR [ecx],0xfffffff0
  4035d6:	out    dx,al
  4035d7:	xlat   BYTE PTR ds:[ebx]
  4035d8:	(bad)
  4035dc:	adc    dh,bh
  4035de:	cmp    edi,0x41c15f8
  4035e4:	mov    BYTE PTR [ecx+edi*8+0x3c7f535d],cl
  4035eb:	push   esp
  4035ec:	mov    dh,0xaa
  4035ee:	loope  0x4035d7
  4035f0:	stos   DWORD PTR es:[edi],eax
  4035f1:	jmp    0x40357d
  4035f3:	jae    0x4035b3
  4035f5:	dec    edx
  4035f6:	fnsave [eax]
  4035f8:	push   cs
  4035f9:	addr16 xor eax,edx
  4035fc:	mov    dl,0x81
  4035fe:	dec    edx
  4035ff:	pop    es
  403600:	daa    
  403601:	(bad)  
  403602:	(bad)  
  403603:	pop    ds
  403604:	push   ebx
  403605:	cmp    BYTE PTR [ebp-0xf],dh
  403608:	fnstsw WORD PTR [edx+0x42f20a79]
  40360e:	out    dx,al
  40360f:	add    BYTE PTR [esi],0x88
  403612:	xor    esi,DWORD PTR [edx-0x3e]
  403615:	lods   al,BYTE PTR ds:[esi]
  403616:	in     eax,dx
  403617:	fcomp  QWORD PTR [eax]
  403619:	xchg   ebx,eax
  40361a:	or     esi,esi
  40361c:	xor    dl,BYTE PTR [edi+0x64c97973]
  403622:	dec    ecx
  403623:	pop    ebx
  403624:	jne    0x40365e
  403626:	jecxz  0x4035ff
  403628:	scas   al,BYTE PTR es:[edi]
  403629:	out    0x3,eax
  40362b:	push   0x7b
  40362d:	dec    esi
  40362e:	call   0x609042ac
  403633:	jmp    0x4035f4
  403635:	xchg   ecx,eax
  403636:	fisubr DWORD PTR [esi+0xc]
  403639:	jae    0x403648
  40363b:	push   esi
  40363c:	enter  0xb591,0xd5
  403640:	imul   ecx,DWORD PTR [esi+esi*4+0xb0765ed],0x63
  403648:	push   ss
  403649:	lds    ebx,FWORD PTR [esi-0x20]
  40364c:	(bad)  
  40364d:	jecxz  0x403614
  40364f:	jnp    0x40365a
  403651:	mov    ebp,edx
  403653:	pop    eax
  403654:	mov    al,0x97
  403656:	lock and eax,0xe354ee83
  40365c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40365d:	add    BYTE PTR [ecx],dh
  40365f:	mov    ch,0x18
  403661:	leave  
  403662:	hlt    
  403663:	and    al,0x9d
  403665:	cmp    eax,0xeaac6535
  40366a:	mov    ebx,0xa3634ec4
  40366f:	std    
  403670:	sbb    eax,0xef717f50
  403675:	sti    
  403676:	push   ebp
  403677:	sub    DWORD PTR [ecx-0x7f66d89c],esp
  40367d:	push   ebx
  40367e:	jp     0x4036f8
  403680:	(bad)  
  403681:	ins    BYTE PTR es:[edi],dx
  403682:	sub    al,0x8a
  403684:	adc    cl,dl
  403686:	pop    edx
  403687:	push   ebx
  403688:	leave  
  403689:	aam    0x43
  40368b:	jmp    0x4036e5
  40368d:	mov    bh,0x43
  40368f:	mov    cs,WORD PTR [esi+eax*1-0x32]
  403693:	repz std 
  403695:	and    DWORD PTR [ebx-0x5b38bed7],edx
  40369b:	mov    ds:0x4344d682,al
  4036a0:	dec    eax
  4036a1:	mov    ah,0x1e
  4036a3:	fwait
  4036a4:	add    DWORD PTR [ecx],0x877c9f2b
  4036aa:	les    ebp,FWORD PTR [eax+0x19]
  4036ad:	dec    esi
  4036ae:	stos   DWORD PTR es:[edi],eax
  4036af:	sti    
  4036b0:	jle    0x403658
  4036b2:	jbe    0x403710
  4036b4:	loopne 0x40371a
  4036b6:	mov    ah,0x8b
  4036b8:	adc    esp,ecx
  4036ba:	push   esi
  4036bb:	cmp    ch,ah
  4036bd:	imul   eax,DWORD PTR [eax-0x40d39d93],0x98d6064b
  4036c7:	jo     0x403728
  4036c9:	ds mov cl,0x7
  4036cc:	xor    dl,BYTE PTR [edx-0x13951ff0]
  4036d2:	shl    BYTE PTR [ebp-0x6594fafa],1
  4036d8:	scas   al,BYTE PTR es:[edi]
  4036d9:	push   edx
  4036da:	cmc    
  4036db:	adc    eax,0x7d569e2e
  4036e0:	ss push ebx
  4036e2:	xlat   BYTE PTR ds:[ebx]
  4036e3:	daa    
  4036e4:	or     edx,0x7843311a
  4036ea:	ins    BYTE PTR es:[edi],dx
  4036eb:	jmp    0x631d:0x35389cbf
  4036f2:	mov    dl,0xe8
  4036f4:	sub    esp,DWORD PTR [ebx-0x11]
  4036f7:	push   eax
  4036f8:	pop    ebp
  4036f9:	jg     0x403768
  4036fb:	mov    ds:0x10327804,eax
  403700:	sbb    DWORD PTR [ecx+ebp*2-0x35],ebp
  403704:	adc    DWORD PTR [edx-0x27],edi
  403707:	mov    edi,0x459039ee
  40370c:	mov    ah,0xb
  40370e:	or     dl,bl
  403710:	xchg   BYTE PTR [edi+0x761c88d9],al
  403716:	mov    edi,0x1ca4ddd4
  40371b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371c:	mov    edi,0x89fc2c19
  403721:	pop    edi
  403722:	shl    DWORD PTR [ecx],cl
  403724:	imul   edi,DWORD PTR [esi-0x3],0x16cdf39a
  40372b:	mov    eax,ds:0xbb396afd
  403730:	jne    0x40374a
  403732:	(bad)  
  403733:	fistp  WORD PTR [edx]
  403735:	dec    esi
  403736:	inc    edx
  403737:	jb     0x40376b
  403739:	or     edi,DWORD PTR [ebp+ebp*4+0x6c0ab9c2]
  403740:	inc    ebp
  403741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403742:	and    al,0xd6
  403744:	in     al,0xbb
  403746:	mov    eax,ds:0xa053868b
  40374b:	mov    al,0xb7
  40374d:	dec    esp
  40374e:	mov    al,0xad
  403750:	in     eax,dx
  403751:	outs   dx,BYTE PTR ds:[esi]
  403752:	cmp    bh,BYTE PTR [eax-0x46]
  403755:	mov    esi,0x3d340ca7
  40375a:	in     al,dx
  40375b:	dec    bx
  40375d:	cwde   
  40375e:	cmp    esi,edi
  403760:	mov    ds:0x554d6451,al
  403765:	je     0x403771
  403767:	xchg   DWORD PTR [ecx+0x1c],ebx
  40376a:	xchg   edx,eax
  40376b:	sub    al,0x18
  40376d:	adc    al,0x68
  40376f:	push   ebp
  403770:	jne    0x40374e
  403772:	ss imul eax,ebp,0x1581f694
  403779:	pop    edx
  40377a:	es mov ah,0x2c
  40377d:	shl    DWORD PTR [eax-0x10],0xea
  403781:	jmp    0x2dafce45
  403786:	mov    edi,0x94d52439
  40378b:	js     0x4037ba
  40378d:	arpl   WORD PTR [esi-0x2aa659d8],di
  403793:	loopne 0x4037d6
  403795:	add    al,0x35
  403797:	les    ebp,FWORD PTR [ebp+0x27]
  40379a:	pcmpgtw mm2,QWORD PTR [ebx-0x7d]
  40379e:	jg     0x403804
  4037a0:	inc    esi
  4037a1:	jmp    0xd9e0f3dd
  4037a6:	xchg   edx,eax
  4037a7:	aam    0xb4
  4037a9:	xchg   ebx,eax
  4037aa:	jg     0x40373d
  4037ac:	sub    esi,DWORD PTR [edx+0x2969747e]
  4037b2:	call   0x71fa3d07
  4037b7:	outs   dx,DWORD PTR ds:[esi]
  4037b8:	shl    BYTE PTR [esp+edx*8-0x16],1
  4037bc:	cmp    BYTE PTR [eax],cl
  4037be:	dec    esp
  4037bf:	lahf   
  4037c0:	pop    esi
  4037c1:	adc    eax,0x8ccd96c9
  4037c6:	xor    BYTE PTR [ebp+ebx*1-0x489d8f6e],bl
  4037cd:	(bad)
  4037d0:	mov    edx,0xdc4c9dbd
  4037d5:	and    bh,BYTE PTR [esi+eiz*4-0xa]
  4037d9:	sub    eax,0xae540832
  4037de:	stos   BYTE PTR es:[edi],al
  4037df:	push   cs
  4037e0:	mov    eax,ds:0xd114a866
  4037e5:	mov    edi,0xe2fd33f2
  4037ea:	neg    DWORD PTR [ebp+0x17]
  4037ed:	in     al,0xf7
  4037ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037f0:	scas   al,BYTE PTR es:[edi]
  4037f1:	push   ds
  4037f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f3:	xchg   esp,eax
  4037f4:	inc    ecx
  4037f5:	dec    ebp
  4037f6:	mov    ebx,0xcb861d23
  4037fb:	test   eax,0x63494016
  403800:	push   ss
  403801:	push   edi
  403802:	in     eax,0x7e
  403804:	and    ebp,DWORD PTR [ebx+0x7f]
  403807:	cmp    BYTE PTR [esi+0x4b],0xc3
  40380b:	xor    al,0x4e
  40380d:	iret   
  40380e:	retf   0x9daf
  403811:	or     ah,cl
  403813:	mov    ebx,0x2b8b673a
  403818:	jecxz  0x403819
  40381a:	push   cs
  40381b:	ins    BYTE PTR es:[edi],dx
  40381c:	rol    DWORD PTR [ebx-0x2b],cl
  40381f:	xchg   esi,eax
  403820:	or     BYTE PTR ds:[esi-0x7e28435a],dl
  403827:	shr    BYTE PTR [esi+edi*2-0x5],1
  40382b:	clc    
  40382c:	(bad)  
  40382d:	push   0x32
  40382f:	cmp    DWORD PTR [edi-0x3f],ebx
  403832:	test   edx,ebx
  403834:	test   DWORD PTR [edx+0x50],0x27fd4938
  40383b:	pop    eax
  40383c:	ds cmp ecx,edx
  40383f:	loop   0x40383a
  403841:	fwait
  403842:	xor    eax,0xbb9e95f3
  403847:	sahf   
  403848:	and    dl,0x4
  40384b:	in     eax,dx
  40384c:	jbe    0x403898
  40384e:	cld    
  40384f:	mov    cl,0x71
  403851:	mov    WORD PTR [ecx-0x61],gs
  403854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403855:	jo     0x4037e4
  403857:	aaa    
  403858:	mov    eax,0xc3e41634
  40385d:	xchg   ebx,eax
  40385e:	adc    ah,BYTE PTR [ebp+0xc]
  403861:	fmul   st,st(1)
  403863:	push   esi
  403864:	nop
  403865:	mov    al,ds:0x9378d40e
  40386a:	cs ins BYTE PTR es:[edi],dx
  40386c:	jmp    0x65d2365e
  403871:	popw   es
  403873:	test   al,0x37
  403875:	sahf   
  403876:	loope  0x40385e
  403878:	in     al,dx
  403879:	sub    ebp,esi
  40387b:	cmp    al,BYTE PTR [edx]
  40387d:	jge    0x4038db
  40387f:	(bad)  
  403880:	cmp    eax,0xf5196225
  403885:	cld    
  403886:	sbb    BYTE PTR [edx],cl
  403888:	outs   dx,BYTE PTR ds:[esi]
  403889:	popf   
  40388a:	pop    es
  40388b:	(bad)  
  40388c:	daa    
  40388d:	int3   
  40388e:	push   ecx
  40388f:	cmp    eax,0xbb64ef87
  403894:	mov    bl,BYTE PTR [eax+0x1d]
  403897:	dec    ebp
  403898:	std    
  403899:	pop    ebp
  40389a:	das    
  40389b:	pop    ds
  40389c:	(bad)  
  40389d:	es das 
  40389f:	popf   
  4038a0:	mov    dh,0xb0
  4038a2:	out    dx,al
  4038a3:	and    eax,0xfcf4a6e8
  4038a8:	mov    ch,0xf
  4038aa:	xlat   BYTE PTR ds:[ebx]
  4038ab:	cmp    dh,0xf9
  4038ae:	cmp    al,0x7
  4038b0:	lock add ebp,DWORD PTR [edi-0x25]
  4038b4:	data16 and BYTE PTR [edi+0x5671e8e2],al
  4038bb:	test   BYTE PTR [edx],bh
  4038bd:	dec    eax
  4038be:	das    
  4038bf:	mov    bh,cl
  4038c1:	add    DWORD PTR [esp+ecx*8+0x44],esi
  4038c5:	fmul   DWORD PTR [edi]
  4038c7:	inc    ebp
  4038c8:	(bad)  
  4038c9:	jmp    0x82a2:0x2bf9e5b0
  4038d0:	mov    ecx,0xb92e1594
  4038d5:	add    ch,0x9b
  4038d8:	or     edx,DWORD PTR [ebx+0x7e8e44d0]
  4038de:	hlt    
  4038df:	imul   ecx,DWORD PTR [ecx+0x6d32b6f4],0xb32f92d4
  4038e9:	dec    esi
  4038ea:	mov    DWORD PTR [ebx+0x12],0x22d32148
  4038f1:	je     0x40391b
  4038f3:	push   ecx
  4038f4:	dec    ebp
  4038f5:	imul   ebx,DWORD PTR [ecx+0x18],0xffffff83
  4038f9:	cs in  al,dx
  4038fb:	mov    ecx,0x17a0bf84
  403900:	inc    eax
  403901:	iret   
  403902:	adc    DWORD PTR [esi+0x6],edi
  403905:	dec    esp
  403906:	pop    ds
  403907:	dec    ecx
  403908:	adc    DWORD PTR [edi-0x2f9bbcf2],ecx
  40390e:	jae    0x40394f
  403910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403911:	xor    eax,0x84d98204
  403916:	neg    BYTE PTR [edx+0x20]
  403919:	sub    eax,0x61479da9
  40391e:	push   0x97a71b6d
  403923:	lods   al,BYTE PTR ds:[esi]
  403924:	gs jg  0x403973
  403927:	outs   dx,BYTE PTR ds:[esi]
  403928:	xor    al,0xe
  40392a:	xchg   edx,eax
  40392b:	fcom   QWORD PTR [edi+0x969ef45]
  403931:	in     al,0x3c
  403933:	scas   eax,DWORD PTR es:[edi]
  403934:	repnz dec DWORD PTR [edx]
  403937:	sbb    DWORD PTR [ecx+0x1b842d3c],ebp
  40393d:	mov    dh,0x1f
  40393f:	adc    edx,edx
  403941:	push   ds
  403942:	neg    BYTE PTR ds:0xf26e0dde
  403948:	pushf  
  403949:	stos   BYTE PTR es:[edi],al
  40394a:	inc    eax
  40394b:	mov    ?,WORD PTR [eax]
  40394d:	cmp    eax,ebx
  40394f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403950:	ret    0x4115
  403953:	push   es
  403954:	push   edi
  403955:	stos   DWORD PTR es:[edi],eax
  403956:	cmc    
  403957:	inc    ebx
  403958:	inc    esp
  403959:	and    edx,esi
  40395b:	xor    ah,BYTE PTR [eax-0x59]
  40395e:	mov    ebx,0x5ca722cd
  403963:	push   ebx
  403964:	ss mov ah,0x58
  403967:	(bad)  
  403969:	sbb    DWORD PTR [edi-0x57f8bc12],ecx
  40396f:	out    dx,eax
  403970:	and    al,BYTE PTR [edx+0x8]
  403973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403974:	sbb    al,bh
  403976:	(bad)  
  403977:	xchg   esi,eax
  403978:	jle    0x403999
  40397a:	std    
  40397b:	sahf   
  40397c:	or     edi,eax
  40397e:	icebp  
  40397f:	(bad)  [edi-0x49d97d5d]
  403985:	pop    eax
  403986:	enter  0x95ba,0x1e
  40398a:	xchg   edx,eax
  40398b:	fdiv   DWORD PTR [ebx+eax*4+0x26]
  40398f:	jg     0x4039bb
  403991:	shl    ebx,1
  403993:	popa   
  403994:	popa   
  403995:	cli    
  403996:	push   ecx
  403997:	dec    sp
  403999:	jnp    0x40396d
  40399b:	sub    al,0xef
  40399d:	jmp    0x6602:0xcfe70c66
  4039a4:	mov    BYTE PTR [ecx-0x1e007d97],dl
  4039aa:	push   0xfffffff2
  4039ac:	out    0x6d,al
  4039ae:	in     eax,0xb1
  4039b0:	imul   BYTE PTR [eax-0x73e38623]
  4039b6:	cdq    
  4039b7:	xor    edi,DWORD PTR [ecx+esi*8-0x56]
  4039bb:	mul    DWORD PTR [bx+si-0x667c]
  4039c0:	dec    edi
  4039c1:	mov    edx,0xc3667292
  4039c6:	les    edi,FWORD PTR ds:0x8a78
  4039cb:	push   ecx
  4039cc:	jecxz  0x403a18
  4039ce:	cmp    eax,0x6c45dba1
  4039d3:	jne    0x40397e
  4039d5:	jl     0x4039b1
  4039d7:	xchg   ebx,eax
  4039d8:	inc    esi
  4039d9:	xchg   esp,eax
  4039da:	scas   al,BYTE PTR es:[edi]
  4039db:	data16 add BYTE PTR [ebx-0xb69febe],cl
  4039e2:	dec    edi
  4039e3:	mov    DWORD PTR [edx-0x1f],ebp
  4039e6:	adc    ch,BYTE PTR [esi]
  4039e8:	enter  0x14d3,0x3e
  4039ec:	jns    0x403a53
  4039ee:	xchg   edx,eax
  4039ef:	loope  0x4039ac
  4039f1:	sub    BYTE PTR [edi],0xe0
  4039f4:	(bad)  
  4039f5:	cmp    bh,dl
  4039f7:	mov    dl,0x5c
  4039f9:	pop    ds
  4039fa:	repz mov esp,0x92fe4697
  403a00:	dec    DWORD PTR ds:0x8adb30cd
  403a06:	imul   eax,edi,0x96e97072
  403a0c:	or     BYTE PTR [ebp-0xb],0x93
  403a10:	adc    DWORD PTR [ecx+0x5ea6156d],esi
  403a16:	enter  0x47e4,0x24
  403a1a:	shl    DWORD PTR [ebp-0x3c6244d6],1
  403a20:	les    ebx,FWORD PTR [ebp-0x9614369]
  403a26:	mov    ch,0xa6
  403a28:	xchg   ebx,eax
  403a29:	cmp    BYTE PTR [edi-0x3c],ah
  403a2c:	and    BYTE PTR [edx],al
  403a2e:	in     al,0xde
  403a30:	sub    cl,BYTE PTR ds:0xa4e1172c
  403a36:	adc    esp,DWORD PTR [ebp+ebx*1-0x422893e4]
  403a3d:	cld    
  403a3e:	mov    ecx,0xc88f2bfa
  403a43:	cmp    esi,0x2bc9cd48
  403a49:	retf   
  403a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a4c:	add    eax,DWORD PTR [edx-0x67583cd7]
  403a52:	push   cs
  403a53:	adc    eax,0xd1f90819
  403a58:	sbb    BYTE PTR [edx],0xef
  403a5b:	aad    0x54
  403a5d:	clc    
  403a5e:	imul   edi,DWORD PTR [ecx],0xe0453af0
  403a64:	pushf  
  403a65:	mov    ds:0x7640710a,eax
  403a6a:	sub    eax,0x75e87ec6
  403a6f:	hlt    
  403a70:	sbb    BYTE PTR [edi+ebp*2-0x67],al
  403a74:	sti    
  403a75:	cwde   
  403a76:	cmp    esi,DWORD PTR [eax]
  403a78:	cmp    al,0xd5
  403a7a:	aad    0x95
  403a7c:	jp     0x403aed
  403a7e:	mov    ds:0x9ce0d151,eax
  403a83:	(bad)  
  403a84:	jecxz  0x403a85
  403a86:	cmp    DWORD PTR [ecx+0x661a9acc],ebx
  403a8c:	pop    esi
  403a8d:	cmp    DWORD PTR [edx-0x6f52df7c],0xdb02dcec
  403a97:	xchg   edx,eax
  403a98:	sbb    dh,BYTE PTR [eax+0x6d]
  403a9b:	xor    esi,DWORD PTR [esi+ebp*2-0x5a149b66]
  403aa2:	cwde   
  403aa3:	sti    
  403aa4:	fiadd  DWORD PTR [ebx+0x23]
  403aa7:	dec    ebp
  403aa8:	pop    ecx
  403aa9:	das    
  403aaa:	adc    DWORD PTR [ebp+ebx*2+0x44],eax
  403aae:	aam    0x2e
  403ab0:	push   esi
  403ab1:	sub    al,0x49
  403ab3:	sbb    dl,BYTE PTR [edx]
  403ab5:	fild   WORD PTR [ecx+0x5c2b9b49]
  403abb:	xchg   edi,eax
  403abc:	ret    0x3104
  403abf:	lods   al,BYTE PTR ds:[esi]
  403ac0:	jl     0x403ac5
  403ac2:	add    al,0x3f
  403ac4:	jno    0x403b18
  403ac6:	es jg  0x403ad4
  403ac9:	jno    0x403b3c
  403acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403acc:	adc    al,0x51
  403ace:	rcl    bh,0x55
  403ad1:	mov    esi,0x81eb1a1e
  403ad6:	mov    dl,0x3a
  403ad8:	pop    ss
  403ad9:	repnz xchg ecx,eax
  403adb:	mov    dh,0x83
  403add:	ins    BYTE PTR es:[edi],dx
  403ade:	xchg   BYTE PTR [edx],bl
  403ae0:	mov    ds:0xcb1146a,eax
  403ae5:	push   ecx
  403ae6:	mov    edi,0xf3902b58
  403aeb:	shr    DWORD PTR [ebp+ebp*4+0x76],cl
  403aef:	leave  
  403af0:	pop    ds
  403af1:	xchg   esi,eax
  403af2:	xor    eax,0x1c88ae2c
  403af7:	dec    ebx
  403af8:	out    0xde,eax
  403afa:	out    dx,al
  403afb:	test   BYTE PTR [eax+ebp*2+0x1e38063a],al
  403b02:	dec    esi
  403b03:	or     al,BYTE PTR [eax]
  403b05:	cmp    ch,al
  403b07:	cwde   
  403b08:	jbe    0x403b01
  403b0a:	icebp  
  403b0b:	int3   
  403b0c:	adc    BYTE PTR [ebx],dh
  403b0e:	daa    
  403b0f:	(bad)  
  403b10:	rol    BYTE PTR [edx+0x17],cl
  403b13:	dec    eax
  403b14:	stos   BYTE PTR es:[edi],al
  403b15:	mov    edx,0x2200e7e
  403b1a:	lock mov ebx,0x4e53b4aa
  403b20:	arpl   WORD PTR [edx-0x7bca385],bx
  403b26:	pop    ebx
  403b27:	nop
  403b28:	jne    0x403b4a
  403b2a:	popa   
  403b2b:	xor    al,0x43
  403b2d:	mov    ch,dl
  403b2f:	push   esi
  403b30:	xor    ah,dh
  403b32:	mov    eax,0x1c138552
  403b37:	jl     0x403b2b
  403b39:	(bad)  
  403b3b:	cdq    
  403b3c:	cmp    al,0x41
  403b3e:	(bad)  
  403b3f:	xor    dl,dh
  403b41:	bound  esi,QWORD PTR [edi]
  403b43:	xchg   eax,esp
  403b45:	enter  0xea20,0x82
  403b49:	stc    
  403b4a:	mov    ebp,0x28945ffc
  403b4f:	out    dx,al
  403b50:	aaa    
  403b51:	mov    ds:0x868fba9d,eax
  403b56:	or     ch,BYTE PTR [eax+0x5b]
  403b59:	pop    esp
  403b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b5b:	pusha  
  403b5c:	cld    
  403b5d:	pop    edi
  403b5e:	mov    eax,0xc6d3e8b2
  403b63:	inc    edx
  403b64:	dec    esp
  403b65:	push   edi
  403b66:	aam    0x39
  403b68:	pop    ebp
  403b69:	adc    ch,BYTE PTR [eax-0x78540651]
  403b6f:	int    0xed
  403b71:	push   ebx
  403b72:	dec    ebx
  403b73:	sbb    BYTE PTR [esi+0x3691647c],0xcc
  403b7a:	mov    esi,0x97dafd67
  403b7f:	repz test eax,0x4bb6cb8
  403b85:	mov    DWORD PTR [ebp+0x1dfc92a7],edi
  403b8b:	inc    ebp
  403b8c:	imul   esp,DWORD PTR [edx],0x17
  403b8f:	gs call 0x55e1:0xe03317fc
  403b97:	add    ecx,ebp
  403b99:	mov    ds:0xc097e497,eax
  403b9e:	xchg   ecx,eax
  403b9f:	and    bl,cl
  403ba1:	out    0xf5,al
  403ba3:	pop    edx
  403ba4:	lods   eax,DWORD PTR ds:[esi]
  403ba5:	ds inc eax
  403ba7:	sub    esi,eax
  403ba9:	jp     0x403b9a
  403bab:	cmp    ecx,eax
  403bad:	push   eax
  403bae:	rol    DWORD PTR fs:[ebx],1
  403bb1:	lea    ebx,[ebx-0x3a]
  403bb4:	in     al,dx
  403bb5:	or     BYTE PTR [ecx-0x7b],dh
  403bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb9:	shr    BYTE PTR ds:0xedbb855b,1
  403bbf:	loopne 0x403bef
  403bc1:	push   0xffffffa0
  403bc3:	repz test BYTE PTR [esi+0x28],0x44
  403bc8:	stc    
  403bc9:	xchg   ebp,eax
  403bca:	cmp    al,0xcb
  403bcc:	lahf   
  403bcd:	inc    esi
  403bce:	push   ss
  403bcf:	in     al,0x6b
  403bd1:	or     al,ch
  403bd3:	je     0x403b6d
  403bd5:	gs test eax,0xcb64422b
  403bdb:	pop    eax
  403bdc:	addr16 arpl bp,bx
  403bdf:	xor    dl,BYTE PTR [edx+eiz*1-0x64]
  403be3:	sub    eax,0x92371716
  403be8:	shl    edi,0xe9
  403beb:	xor    ch,bh
  403bed:	mov    ah,0xe9
  403bef:	daa    
  403bf0:	icebp  
  403bf1:	cmp    DWORD PTR [ebp+0x4e],ebx
  403bf4:	add    bh,ch
  403bf6:	lock out 0x84,eax
  403bf9:	dec    esi
  403bfa:	pop    edx
  403bfb:	(bad)  
  403bfc:	adc    DWORD PTR [edi-0x80],esp
  403bff:	add    al,0xfc
  403c01:	je     0x403c7a
  403c03:	mov    edx,0xfbbe0b4f
  403c08:	rol    BYTE PTR cs:0x5e6d752f,1
  403c0f:	call   0x259c:0x2fef1e09
  403c16:	xor    eax,0xc9a55d89
  403c1b:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x67dd8915
  403dc4:	sbb    bl,BYTE PTR [edi]
  403dc6:	(bad)  
  403dc7:	dec    ebx
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x15
  403dd0:	xor    bh,dl
  403dd2:	cmp    ecx,DWORD PTR [esi]
  403dd4:	jmp    0xac36:0x5779646e
  403ddb:	push   0x118c4ca7
  403de0:	mov    ah,0xf9
  403de2:	or     ebp,DWORD PTR [edi+0x27d12a5b]
  403de8:	mov    ebp,0x9b46decc
  403ded:	stos   BYTE PTR es:[edi],al
  403dee:	adc    al,0x1c
  403df0:	sub    eax,0x4729a3b
  403df5:	rcr    DWORD PTR ds:0xa20ba7ae,1
  403dfb:	mov    al,ds:0x2bc74bd2
  403e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e01:	dec    ebx
  403e02:	mov    esi,0x3b531204
  403e07:	lar    esp,di
  403e0a:	lods   al,BYTE PTR cs:[esi]
  403e0c:	idiv   DWORD PTR [eax]
  403e0e:	push   eax
  403e0f:	sbb    dl,BYTE PTR [ebx-0x31]
  403e12:	pop    edi
  403e13:	cmp    BYTE PTR [esi],0xd2
  403e16:	jnp    0x403e22
  403e18:	inc    eax
  403e19:	ret    0xaaf7
  403e1c:	cmc    
  403e1d:	out    0xbe,al
  403e1f:	ins    BYTE PTR es:[edi],dx
  403e20:	jge    0x403dd3
  403e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e23:	adc    BYTE PTR [ebp+0x8f478a9],0x13
  403e2a:	and    al,0x8a
  403e2c:	inc    ebx
  403e2d:	xchg   edi,eax
  403e2e:	mov    al,bh
  403e30:	xchg   ebp,eax
  403e31:	imul   ecx,DWORD PTR ds:0x8a7ba29e,0x76
  403e38:	and    cl,BYTE PTR [esi]
  403e3a:	imul   ebp,DWORD PTR [ecx+0x77],0x425cfccf
  403e41:	jp     0x403dd8
  403e43:	fadd   st,st(1)
  403e45:	cli    
  403e46:	(bad)  
  403e47:	(bad)  
  403e48:	outs   dx,DWORD PTR ds:[esi]
  403e49:	inc    eax
  403e4a:	pop    ebx
  403e4b:	mov    ch,0x74
  403e4d:	xor    eax,0x60b820f1
  403e52:	pop    ebx
  403e53:	sub    ebx,eax
  403e55:	mov    al,ds:0xb62fcdb7
  403e5a:	sbb    bl,BYTE PTR [edx+0x8]
  403e5d:	dec    ebx
  403e5e:	push   ecx
  403e5f:	fpatan 
  403e61:	mov    esp,0x5594794c
  403e66:	pop    esp
  403e67:	aaa    
  403e68:	dec    ecx
  403e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e6a:	repnz (bad) 
  403e6c:	idiv   BYTE PTR ds:0x2d5857c1
  403e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e73:	jg     0x403e1f
  403e75:	lahf   
  403e76:	adc    eax,0x331234ea
  403e7b:	rcr    BYTE PTR [ebp-0x5eefd977],cl
  403e81:	call   FWORD PTR [edx+0x254357f3]
  403e87:	aad    0xc1
  403e89:	jo     0x403e9c
  403e8b:	(bad)  
  403e8c:	mov    eax,0x91f4aa27
  403e91:	loop   0x403e3c
  403e93:	dec    edx
  403e94:	cmp    DWORD PTR [eax],edx
  403e96:	retf   0xd1d7
  403e99:	imul   eax,DWORD PTR [ebx],0xf195e920
  403e9f:	adc    al,0x7
  403ea1:	imul   BYTE PTR gs:[ebx+0x48]
  403ea5:	xor    DWORD PTR [eax+0x730520fb],0x2705b228
  403eaf:	xor    dl,cl
  403eb1:	or     DWORD PTR [ebp+0x2e],0x3e6ef443
  403eb8:	fcomp  QWORD PTR [ebx+0x46ba103f]
  403ebe:	dec    ebp
  403ebf:	nop
  403ec0:	mov    al,ds:0x89583d1d
  403ec5:	xchg   esi,eax
  403ec6:	dec    ebp
  403ec7:	(bad)  
  403ec8:	(bad)  
  403ec9:	cli    
  403eca:	inc    esi
  403ecb:	and    eax,0x6e9749be
  403ed0:	cmp    eax,0x690bab4b
  403ed5:	bound  ecx,QWORD PTR [edi-0x4baa284e]
  403edb:	fstp   QWORD PTR [edx]
  403edd:	jmp    0x21a4:0xb19dd411
  403ee4:	add    eax,0x6ace68e0
  403ee9:	outs   dx,BYTE PTR ds:[esi]
  403eea:	fisubr WORD PTR [edi+0x592a34a9]
  403ef0:	mov    esp,0xc796b7eb
  403ef5:	out    0x3b,al
  403ef7:	or     DWORD PTR [ebx-0x58],esp
  403efa:	aaa    
  403efb:	mov    ?,WORD PTR [esi-0x36d58f61]
  403f01:	(bad)  
  403f03:	sub    BYTE PTR [edx+0x13],cl
  403f06:	push   0xffffffcb
  403f08:	nop
  403f09:	inc    ebx
  403f0a:	push   edi
  403f0b:	push   0x6710492c
  403f10:	test   eax,0x339e900c
  403f15:	xchg   edi,eax
  403f16:	aas    
  403f17:	mov    dl,bl
  403f19:	cmc    
  403f1a:	in     al,0x85
  403f1c:	arpl   WORD PTR [edx-0x3e],bp
  403f1f:	sub    DWORD PTR [edi-0x2c888213],0xf2635796
  403f29:	add    ah,BYTE PTR [esi]
  403f2b:	dec    ecx
  403f2c:	aam    0xc2
  403f2e:	imul   ebp,DWORD PTR [ebx+ebp*2-0x2a41ed5f],0x42a45baf
  403f39:	jmp    0x24986219
  403f3e:	in     eax,0xac
  403f40:	inc    eax
  403f41:	jp     0x403f3c
  403f43:	push   edx
  403f44:	mov    bh,0x8f
  403f46:	jg     0x403eee
  403f48:	retf   0xd9bd
  403f4b:	(bad)  
  403f4c:	cmp    al,0x3c
  403f4e:	sbb    BYTE PTR [ebx+0x4d],0xdb
  403f52:	xlat   BYTE PTR gs:[ebx]
  403f54:	mov    bh,0xe0
  403f56:	jmp    0x403ede
  403f58:	mov    esi,0xe3b73845
  403f5d:	jp     0x403f48
  403f5f:	mov    dh,ch
  403f61:	and    dl,BYTE PTR [ebx]
  403f63:	sub    BYTE PTR [esi+0x437d7672],al
  403f69:	mov    cl,0x18
  403f6b:	addr16 cli 
  403f6d:	fidivr DWORD PTR [eax]
  403f6f:	jecxz  0x403f2f
  403f71:	fidivr WORD PTR [ecx+0x65]
  403f74:	jecxz  0x403f3c
  403f76:	cmp    bl,BYTE PTR [ebx+ebx*4]
  403f79:	popf   
  403f7a:	enter  0x288,0xb3
  403f7e:	cdq    
  403f7f:	xor    DWORD PTR [esi+0x2fe8f2e6],edi
  403f85:	jae    0x403f22
  403f87:	dec    ecx
  403f88:	mov    ebp,0x6174c92b
  403f8d:	cwde   
  403f8e:	fwait
  403f8f:	rol    BYTE PTR [esi-0x2b31d979],1
  403f95:	out    0xf7,al
  403f97:	push   es
  403f98:	sub    BYTE PTR [ecx-0x3d],bl
  403f9b:	dec    esi
  403f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9d:	repz dec ecx
  403f9f:	out    0xdd,eax
  403fa1:	inc    ecx
  403fa2:	ins    DWORD PTR es:[edi],dx
  403fa3:	fwait
  403fa4:	mov    esp,0x3cc2b5d6
  403fa9:	sub    DWORD PTR [edx-0x12],edx
  403fac:	add    edi,esi
  403fae:	mov    eax,0x32af63b5
  403fb3:	pop    esp
  403fb4:	div    BYTE PTR [eax+0x45]
  403fb7:	push   es
  403fb8:	addr16 jb 0x404019
  403fbb:	push   eax
  403fbc:	(bad)  
  403fbe:	jnp    0x40401f
  403fc0:	dec    edx
  403fc1:	add    eax,DWORD PTR [edi+0xe]
  403fc4:	pop    ecx
  403fc5:	mov    ecx,0xe2f1552d
  403fca:	adc    ebp,DWORD PTR [edx+0x41d6abcb]
  403fd0:	fwait
  403fd1:	sub    edx,ecx
  403fd3:	push   esi
  403fd4:	mov    eax,0x5c912273
  403fd9:	jno    0x40400c
  403fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fdc:	mov    ah,0x79
  403fde:	push   0x8ebab94d
  403fe3:	xor    BYTE PTR [ecx-0x46f66781],ah
  403fe9:	js     0x40402b
  403feb:	xchg   esp,eax
  403fec:	xchg   edi,eax
  403fed:	and    esp,DWORD PTR [edx+0x7a]
  403ff0:	daa    
  403ff1:	pop    edi
  403ff2:	cli    
  403ff3:	inc    esi
  403ff4:	imul   eax,DWORD PTR [eax+0xbc14c72],0x36
  403ffb:	jmp    0xcc6b:0x1391d45d
  404002:	or     eax,esp
  404004:	loopne 0x403fb4
  404006:	call   0xc09704fd
  40400b:	jge    0x403fc1
  40400d:	ja     0x403fe0
  40400f:	xor    ecx,DWORD PTR [eax]
  404011:	sub    eax,0xdeef6c9a
  404016:	sbb    bl,bh
  404018:	sub    BYTE PTR [ebx],bh
  40401a:	jo     0x404013
  40401c:	inc    esi
  40401d:	sbb    esp,DWORD PTR [ebp+0xbf3dab9]
  404023:	jne    0x40400e
  404025:	inc    esi
  404026:	in     eax,dx
  404027:	aad    0xe2
  404029:	aad    0xd9
  40402b:	lahf   
  40402c:	pusha  
  40402d:	outs   dx,DWORD PTR ds:[esi]
  40402e:	add    eax,0x38fb358a
  404033:	push   esi
  404034:	sahf   
  404035:	lahf   
  404036:	outs   dx,BYTE PTR ds:[esi]
  404037:	and    dh,BYTE PTR [ecx+0x110f2fbe]
  40403d:	push   esi
  40403e:	cwde   
  40403f:	xchg   esi,eax
  404040:	push   edx
  404041:	xor    eax,0x87037983
  404046:	mov    ecx,0xb29e31f8
  40404b:	nop
  40404c:	and    eax,0x92c662cd
  404051:	cwde   
  404052:	mov    BYTE PTR [ecx],al
  404054:	pushf  
  404055:	cli    
  404056:	inc    ebx
  404057:	fdiv   QWORD PTR [ecx]
  404059:	rcr    BYTE PTR [esi-0x67],cl
  40405c:	mov    al,ds:0x2e61e52b
  404061:	push   esi
  404062:	push   ds
  404063:	repz and esi,DWORD PTR [edx-0x14a76215]
  40406a:	add    eax,0xe4f35a99
  40406f:	xchg   edi,eax
  404070:	adc    eax,0x67fb0d3
  404075:	mov    ebp,0x66274ca3
  40407a:	xchg   esp,eax
  40407b:	jae    0x404033
  40407d:	fadd   DWORD PTR [ebp+ecx*2+0x18]
  404081:	xchg   edi,eax
  404082:	(bad)  
  404083:	cmp    eax,0xe5b41dcd
  404088:	dec    ecx
  404089:	sbb    BYTE PTR [ebp-0x5761e1d5],ah
  40408f:	ins    DWORD PTR es:[edi],dx
  404090:	mov    al,0xc0
  404092:	adc    eax,0x3bc8b332
  404097:	inc    ebp
  404098:	rcr    BYTE PTR [ecx-0x462c78bc],0xab
  40409f:	add    DWORD PTR [edi],edx
  4040a1:	retf   
  4040a2:	jp     0x404097
  4040a4:	or     dh,0x77
  4040a7:	cwde   
  4040a8:	add    eax,0x1950e2a1
  4040ad:	clc    
  4040ae:	fs ror esi,0xe
  4040b2:	(bad)  
  4040b4:	lds    ebp,FWORD PTR [esi-0x7c714322]
  4040ba:	(bad)  [ebx-0x2d839628]
  4040c0:	pop    ss
  4040c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c2:	mov    ds:0xd05c9a9d,al
  4040c7:	mov    ds:0x5ece645d,al
  4040cc:	xchg   edi,eax
  4040cd:	mov    edi,edi
  4040cf:	stos   DWORD PTR es:[di],eax
  4040d1:	add    al,0xdf
  4040d3:	idiv   DWORD PTR [ecx]
  4040d5:	in     eax,0x74
  4040d7:	clc    
  4040d8:	les    esp,FWORD PTR [ecx]
  4040da:	add    DWORD PTR ds:0x7d3f532b,esp
  4040e0:	xchg   edi,eax
  4040e1:	fistp  WORD PTR ds:0x92a8d61b
  4040e7:	pop    ecx
  4040e8:	mov    bl,0x6a
  4040ea:	pop    ebp
  4040eb:	inc    eax
  4040ec:	xchg   esp,eax
  4040ed:	cvtdq2ps xmm2,xmm4
  4040f0:	in     eax,0x9b
  4040f2:	xor    eax,0xed814766
  4040f7:	inc    edx
  4040f8:	jb     0x404125
  4040fa:	ins    DWORD PTR es:[edi],dx
  4040fb:	mov    ah,0xd4
  4040fd:	push   edx
  4040fe:	sbb    eax,0xd825f639
  404103:	cs hlt 
  404105:	out    0xfc,eax
  404107:	lock lahf 
  404109:	adc    al,0xea
  40410b:	sub    eax,0xff80275
  404110:	dec    ecx
  404111:	dec    edx
  404112:	lahf   
  404113:	jo     0x40411c
  404115:	or     eax,DWORD PTR [edx]
  404117:	dec    ecx
  404118:	arpl   ax,bx
  40411a:	and    eax,0xbe6529dd
  40411f:	cmp    esp,DWORD PTR [eax+0x1eba1b54]
  404125:	iret   
  404126:	or     esi,DWORD PTR [ebx+0x16]
  404129:	sub    al,0xa6
  40412b:	sub    eax,0x3d446df0
  404130:	sti    
  404131:	and    DWORD PTR [eax-0x3a],ecx
  404134:	dec    BYTE PTR [esi-0x1d]
  404137:	pop    esp
  404138:	sbb    edi,DWORD PTR gs:[edx+0x609be9b9]
  40413f:	leave  
  404140:	mov    dl,0xec
  404142:	repnz les edx,FWORD PTR [esi-0x40]
  404146:	pop    eax
  404147:	sbb    bl,BYTE PTR [esi-0x31]
  40414a:	jae    0x40413a
  40414c:	stos   DWORD PTR es:[edi],eax
  40414d:	imul   eax,eax,0xecee4227
  404153:	jge    0x40417b
  404155:	jp     0x4041ac
  404157:	sti    
  404158:	sbb    eax,0x235ee3e7
  40415d:	clc    
  40415e:	push   ecx
  40415f:	sbb    al,al
  404161:	ret    
  404162:	cwde   
  404163:	es (bad) 
  404165:	iret   
  404166:	stos   DWORD PTR es:[edi],eax
  404167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404168:	pop    ebp
  404169:	push   eax
  40416a:	or     al,0x62
  40416c:	cmp    DWORD PTR [edx+edi*4],0x5b94f36b
  404173:	popf   
  404174:	fs adc al,0xd1
  404177:	xor    eax,0x8983a2a0
  40417c:	jnp    0x40410e
  40417e:	bswap  esi
  404180:	dec    eax
  404181:	mov    dl,0x41
  404183:	sub    BYTE PTR [ebx-0x5e367623],0xf9
  40418a:	rcl    BYTE PTR [ebp+0x35ede4b1],cl
  404190:	retf   
  404191:	xor    DWORD PTR [esi],0xb198a909
  404197:	fwait
  404198:	mov    ds:0x587aa57,al
  40419d:	mov    ds:0x1eb88592,al
  4041a2:	xor    eax,0xfe55392c
  4041a7:	(bad)
  4041aa:	adc    al,0x75
  4041ac:	jg     0x4041b4
  4041ae:	add    al,0x65
  4041b0:	push   edx
  4041b1:	je     0x4041b1
  4041b3:	iret   
  4041b4:	mov    edx,0xb84ceb0b
  4041b9:	dec    edx
  4041ba:	xchg   edx,eax
  4041bb:	mov    bl,0x5b
  4041bd:	mov    DWORD PTR [ecx],edx
  4041bf:	sahf   
  4041c0:	cmp    ah,BYTE PTR [edi+0x571b0729]
  4041c6:	cmc    
  4041c7:	nop
  4041c8:	cmp    edi,edi
  4041ca:	push   es
  4041cb:	adc    eax,0x6182d68c
  4041d0:	mov    al,0x24
  4041d2:	or     BYTE PTR [edx+ebp*8],0x74
  4041d6:	rcl    DWORD PTR [ebp-0x7e5bdfba],cl
  4041dc:	mov    cl,BYTE PTR [esi-0x260125c7]
  4041e2:	dec    esi
  4041e3:	push   eax
  4041e4:	das    
  4041e5:	sti    
  4041e6:	xchg   ebx,eax
  4041e7:	or     ebx,ecx
  4041e9:	iret   
  4041ea:	(bad)  
  4041eb:	sbb    BYTE PTR [eax-0x35],bh
  4041ee:	ds in  eax,0x3
  4041f1:	or     al,0x91
  4041f3:	(bad)  
  4041f4:	in     al,0x50
  4041f6:	push   es
  4041f7:	add    BYTE PTR [ecx],dl
  4041f9:	retf   0x690f
  4041fc:	in     eax,0xc5
  4041fe:	call   0xaa01:0xfc1052bf
  404205:	add    esi,eax
  404207:	dec    ebx
  404208:	fs cs jne 0x404225
  40420c:	push   0xffffffe2
  40420e:	or     esi,0x669e9054
  404214:	xchg   edi,eax
  404215:	leave  
  404216:	(bad)  
  404217:	sbb    ch,ah
  404219:	leave  
  40421a:	xchg   edi,eax
  40421b:	adc    eax,DWORD PTR [eax+0x1a1fb4f5]
  404221:	or     bl,dh
  404223:	xchg   ebp,eax
  404224:	fwait
  404225:	dec    ebx
  404226:	pop    edi
  404227:	retf   
  404228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404229:	or     bl,0x6
  40422c:	jecxz  0x40421c
  40422e:	xor    al,0x88
  404230:	icebp  
  404231:	outs   dx,BYTE PTR ds:[esi]
  404232:	test   DWORD PTR [ebp-0x74],ebp
  404235:	js     0x404270
  404237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404238:	push   0xdd8b22e4
  40423d:	adc    DWORD PTR [edx-0x61],eax
  404240:	hlt    
  404241:	retf   0xdf60
  404244:	(bad)  
  404245:	cwde   
  404246:	jg     0x4041d6
  404248:	mov    ebp,0x771907f5
  40424d:	fstp   QWORD PTR [eax+0x4]
  404250:	cli    
  404251:	rol    BYTE PTR [edi+ebp*8-0x13027c62],0x77
  404259:	xchg   edi,eax
  40425a:	jno    0x4042d4
  40425c:	cmp    eax,0x8d20720
  404261:	pushf  
  404262:	xor    bh,BYTE PTR [ebx+ebp*4]
  404265:	push   esp
  404266:	pop    ss
  404267:	add    al,0x45
  404269:	sub    dl,BYTE PTR [edx-0x33]
  40426c:	sbb    ecx,esp
  40426e:	scas   eax,DWORD PTR es:[edi]
  40426f:	in     eax,0xb2
  404271:	sar    BYTE PTR [bx+si+0x6e9],cl
  404276:	cmp    ecx,DWORD PTR [edx-0x5fe9c8c0]
  40427c:	in     eax,0x80
  40427e:	fcomp  DWORD PTR ds:0x655f5063
  404284:	mul    edx
  404286:	xchg   edi,eax
  404287:	bound  edi,QWORD PTR [ecx]
  404289:	mov    ebp,0x273fb880
  40428e:	nop
  40428f:	dec    edi
  404290:	pop    eax
  404291:	push   0xffffffb5
  404293:	out    0xcc,al
  404295:	aaa    
  404296:	inc    edi
  404297:	and    eax,0xb95ea978
  40429c:	stos   DWORD PTR es:[edi],eax
  40429d:	mov    dl,0xe7
  40429f:	inc    esp
  4042a0:	outs   dx,BYTE PTR ds:[esi]
  4042a1:	mov    cl,0xeb
  4042a3:	cld    
  4042a4:	out    0x67,al
  4042a6:	loope  0x4042f2
  4042a8:	cmp    eax,eax
  4042aa:	jb     0x404318
  4042ac:	dec    edi
  4042ad:	inc    ebx
  4042ae:	popa   
  4042af:	fldenv [ecx+0x30a7c674]
  4042b5:	cmp    DWORD PTR ds:0x971f53c6,esp
  4042bb:	mov    ah,0xa9
  4042bd:	mov    BYTE PTR [esi+0x42],cl
  4042c0:	ds and eax,0xe7a309ae
  4042c6:	das    
  4042c7:	push   0x8cc1a6d1
  4042cc:	lods   al,BYTE PTR ds:[esi]
  4042cd:	inc    ebp
  4042ce:	loop   0x4042d5
  4042d0:	mov    al,dh
  4042d2:	(bad)  
  4042d3:	mov    ebx,ebx
  4042d5:	mov    dl,0x3b
  4042d7:	loopne 0x40428c
  4042d9:	dec    edi
  4042da:	sub    BYTE PTR [eax+0x6c],cl
  4042dd:	(bad)  
  4042df:	mov    edi,0x76fa8441
  4042e4:	lock xor al,BYTE PTR [ebx]
  4042e7:	inc    edi
  4042e8:	inc    esp
  4042e9:	and    eax,0x436d3fe4
  4042ee:	(bad)
  4042f2:	cmp    edi,0xa0c5a8fc
  4042f8:	inc    ecx
  4042f9:	loop   0x40434e
  4042fb:	daa    
  4042fc:	je     0x40433d
  4042fe:	fisub  DWORD PTR ds:0xf745b4e
  404304:	sbb    al,0x1d
  404306:	cld    
  404307:	jns    0x4042f2
  404309:	daa    
  40430a:	mov    dl,BYTE PTR [edi-0x3b62ed13]
  404310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404311:	cmp    al,0x3a
  404313:	(bad)  
  404314:	repz dec esp
  404316:	and    dl,BYTE PTR [esi+0x273359c4]
  40431c:	retf   
  40431d:	mov    ds:0x7a6335cc,al
  404322:	sub    BYTE PTR [edi-0x4a],al
  404325:	pusha  
  404326:	add    edi,DWORD PTR [edi-0x71]
  404329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40432a:	jnp    0x4042ac
  40432c:	xor    al,0xf
  40432e:	test   BYTE PTR [edi],ah
  404330:	enter  0xd07a,0x8
  404334:	outs   dx,DWORD PTR ds:[esi]
  404335:	adc    BYTE PTR [ebp+ebx*4-0x5b],ah
  404339:	push   esp
  40433a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433b:	scas   eax,DWORD PTR es:[edi]
  40433c:	(bad)  
  40433d:	cmp    cl,ah
  40433f:	scas   eax,DWORD PTR es:[edi]
  404340:	pop    ds
  404341:	mov    ecx,edi
  404343:	sub    DWORD PTR ds:[esi],0xffffffaf
  404347:	ret    
  404348:	mov    dh,0x85
  40434a:	(bad)  
  40434b:	pop    ebp
  40434c:	pop    es
  40434d:	popa   
  40434e:	push   eax
  40434f:	xchg   DWORD PTR [eax],ebx
  404351:	imul   BYTE PTR [ecx+0x4dc31457]
  404357:	loop   0x4043d0
  404359:	shl    DWORD PTR [edx],cl
  40435b:	int    0x5c
  40435d:	xchg   esp,eax
  40435e:	xchg   ebx,eax
  40435f:	jl     0x404389
  404361:	ss scas al,BYTE PTR es:[edi]
  404363:	mov    dh,0xd7
  404365:	addr16 icebp 
  404367:	lods   eax,DWORD PTR ds:[esi]
  404368:	mov    eax,0x4dc148a5
  40436d:	xor    eax,0x467f1aed
  404372:	fadd   QWORD PTR [ebp+0x75025947]
  404378:	cli    
  404379:	cmovl  ebp,ebx
  40437c:	inc    DWORD PTR [edi+0x7a1db9b0]
  404382:	pushf  
  404383:	add    eax,0xbaabb9ab
  404388:	mov    eax,0xbc18ce0
  40438d:	mov    ebx,0x47936876
  404392:	pop    ss
  404393:	mov    bl,0x26
  404395:	mov    dh,0x19
  404397:	sti    
  404398:	into   
  404399:	xchg   ecx,eax
  40439a:	mov    eax,0xaf95654f
  40439f:	mov    ds:0xf78ae707,eax
  4043a4:	sbb    ch,BYTE PTR [ebx+eiz*1+0x6c29b33]
  4043ab:	jns    0x4043e4
  4043ad:	aam    0xfe
  4043af:	lods   al,BYTE PTR ds:[esi]
  4043b0:	outs   dx,BYTE PTR ds:[esi]
  4043b1:	rcr    BYTE PTR [eax+0x57],1
  4043b4:	clc    
  4043b5:	pop    esp
  4043b6:	(bad)  
  4043b7:	gs jmp 0x404371
  4043ba:	or     BYTE PTR [ecx+0x6783cf31],ah
  4043c0:	mov    ds:0xa6ed63c4,eax
  4043c5:	iret   
  4043c6:	je     0x40436b
  4043c8:	push   es
  4043c9:	push   0x7b
  4043cb:	mov    WORD PTR [ecx+0x7a98951b],ds
  4043d1:	mov    ah,0x37
  4043d3:	sbb    BYTE PTR [ecx-0x67],ah
  4043d6:	sub    BYTE PTR [eax-0x747c686],ch
  4043dc:	rcr    DWORD PTR [edx+0x6e],0xb2
  4043e0:	inc    ebx
  4043e1:	fwait
  4043e2:	pop    ebx
  4043e3:	xchg   ecx,eax
  4043e4:	iret   
  4043e5:	fucomi st,st(4)
  4043e7:	js     0x4043d2
  4043e9:	mov    dh,0xa3
  4043eb:	push   0x9c9ea8d9
  4043f0:	adc    al,0xff
  4043f2:	(bad)  
  4043f3:	out    dx,eax
  4043f4:	push   edi
  4043f5:	xchg   esp,eax
  4043f6:	push   esi
  4043f7:	push   esi
  4043f8:	push   ebp
  4043f9:	xchg   edi,eax
  4043fa:	adc    DWORD PTR [edi+0x10],ebx
  4043fd:	sti    
  4043fe:	mov    ds:0x45006ece,al
  404403:	sbb    bh,BYTE PTR [ecx]
  404405:	mov    cl,0xa5
  404407:	leave  
  404408:	int    0x94
  40440a:	dec    edi
  40440b:	xor    al,dh
  40440d:	pop    edx
  40440e:	(bad)  
  40440f:	xor    al,BYTE PTR [esi]
  404411:	je     0x4043cf
  404413:	pop    esp
  404414:	mov    ?,WORD PTR [edx]
  404416:	out    0xc7,al
  404418:	cmp    dh,ch
  40441a:	jmp    0x404422
  40441c:	test   al,0xba
  40441e:	jp     0x4043dc
  404420:	jno    0x4043ac
  404422:	xchg   ebp,eax
  404423:	cmp    ecx,DWORD PTR [edi+0x1508ed9]
  404429:	dec    ecx
  40442a:	mov    esi,0xd02214b1
  40442f:	push   ds
  404430:	sahf   
  404431:	pop    ecx
  404432:	pop    edx
  404433:	push   edi
  404434:	push   0xffffffec
  404436:	jmp    0xd288:0x92bef08c
  40443d:	mov    eax,0x99689b57
  404442:	mov    eax,0xb3109ee2
  404447:	jnp    0x404418
  404449:	fcmovnu st,st(2)
  40444b:	jae    0x404464
  40444d:	(bad)  
  40444e:	jmp    0x4bfd:0x369337cf
  404455:	xor    ecx,DWORD PTR [ecx+ecx*8-0x64674f82]
  40445c:	hlt    
  40445d:	neg    DWORD PTR [ecx+ecx*1+0x4d830ce]
  404464:	adc    BYTE PTR [edx+0x26cba4ac],0xe
  40446b:	add    al,dh
  40446d:	mov    bl,BYTE PTR [ebx+eiz*8-0x3742b674]
  404474:	jp     0x4044aa
  404476:	cs jns 0x4043ff
  404479:	ror    dh,1
  40447b:	repz cmp al,0x9a
  40447e:	mov    bl,0x27
  404480:	adc    bh,BYTE PTR [esi]
  404482:	fild   DWORD PTR [edi-0x1162eec3]
  404488:	jb     0x404427
  40448a:	fmul   DWORD PTR [edi-0xe]
  40448d:	push   0x5a87808a
  404492:	(bad)  
  404493:	ins    BYTE PTR es:[edi],dx
  404494:	shl    esi,1
  404496:	rol    dl,1
  404498:	test   eax,0xfdd4b2ab
  40449d:	push   esp
  40449e:	popa   
  40449f:	and    ch,bh
  4044a1:	xchg   edx,eax
  4044a2:	fcmovnbe st,st(2)
  4044a4:	dec    edx
  4044a5:	(bad)  
  4044a6:	retf   
  4044a7:	ds mov dh,0x1a
  4044aa:	adc    DWORD PTR [ecx+0xb],esi
  4044ad:	je     0x4044b6
  4044af:	popf   
  4044b0:	cmp    eax,0xe992e1c6
  4044b5:	stos   BYTE PTR es:[edi],al
  4044b6:	leave  
  4044b7:	shr    edi,1
  4044b9:	pop    ecx
  4044ba:	sahf   
  4044bb:	cmp    eax,0x2fb6eb9a
  4044c0:	inc    esi
  4044c1:	push   0xffffffdb
  4044c3:	(bad)  
  4044c5:	int    0xf4
  4044c7:	stos   BYTE PTR es:[edi],al
  4044c8:	push   ecx
  4044c9:	pop    ecx
  4044ca:	push   0xffffff9d
  4044cc:	ins    BYTE PTR es:[edi],dx
  4044cd:	xchg   esi,eax
  4044ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044cf:	inc    edx
  4044d0:	test   ch,dh
  4044d2:	push   esp
  4044d3:	mov    dl,0x48
  4044d5:	jmp    DWORD PTR [esi+0x1f0d4357]
  4044db:	cli    
  4044dc:	div    DWORD PTR [ebx-0x2f2d2f95]
  4044e2:	stos   BYTE PTR es:[edi],al
  4044e3:	aas    
  4044e4:	adc    ebp,edx
  4044e6:	les    ecx,FWORD PTR [esi+0x2ea29952]
  4044ec:	cmp    al,0x51
  4044ee:	push   0xffffff8e
  4044f0:	pop    esp
  4044f1:	mov    ebx,0xa80d2c8b
  4044f6:	mov    dh,bh
  4044f8:	in     eax,dx
  4044f9:	data16 (bad) 
  4044fb:	fidiv  WORD PTR [edi+ebp*4-0x2f]
  4044ff:	(bad)  
  404500:	mov    BYTE PTR [ebp+0x4b6ad9a9],dh
  404506:	mov    ecx,?
  404508:	dec    DWORD PTR [esi-0x53]
  40450b:	jmp    0xc455ed0d
  404510:	xchg   BYTE PTR fs:0x3a622359,dh
  404517:	jbe    0x4044d4
  404519:	rcr    DWORD PTR [ecx],cl
  40451b:	xchg   ecx,eax
  40451c:	sti    
  40451d:	jnp    0x40452a
  40451f:	xchg   edi,eax
  404520:	ja     0x40454d
  404522:	push   edi
  404523:	ds or  eax,eax
  404526:	mov    ebx,edx
  404528:	rcr    BYTE PTR [eax],1
  40452a:	sub    DWORD PTR gs:[ebp-0x36cd3405],ebx
  404531:	add    al,0x26
  404533:	(bad)  
  404534:	pop    ecx
  404535:	(bad)  
  404536:	stc    
  404537:	imul   edi,DWORD PTR [edi-0x7b],0x412f99f7
  40453e:	loope  0x4044e9
  404540:	xor    eax,edi
  404542:	sbb    ebp,DWORD PTR [eax+0x36d5b5a0]
  404548:	(bad)  
  404549:	mov    ah,0x9
  40454b:	leave  
  40454c:	pop    ebp
  40454d:	adc    eax,0x1fcd2a76
  404552:	jns    0x40455d
  404554:	xor    bl,dh
  404556:	out    0xc9,al
  404558:	mov    esp,0xabe327af
  40455d:	cli    
  40455e:	xchg   edx,eax
  40455f:	sbb    eax,0xb3f16c16
  404564:	push   ebp
  404565:	push   ss
  404566:	mov    ebx,?
  404568:	retf   0x4cb6
  40456b:	sbb    al,0xac
  40456d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40456e:	mov    BYTE PTR [ebx+0x37],cl
  404571:	dec    esi
  404572:	dec    ecx
  404573:	lahf   
  404574:	xchg   ebx,eax
  404575:	xor    DWORD PTR ds:0x154aa130,eax
  40457b:	outs   dx,DWORD PTR ds:[esi]
  40457c:	push   ebx
  40457d:	cmp    DWORD PTR [edx-0x7ee91e50],ebx
  404583:	adc    edx,edx
  404585:	hlt    
  404586:	push   eax
  404587:	lods   eax,DWORD PTR ds:[esi]
  404588:	dec    ebp
  404589:	jnp    0x40453c
  40458b:	loopne 0x4045b0
  40458d:	push   0xffffff97
  40458f:	sbb    ch,BYTE PTR [edx-0x48]
  404592:	lods   eax,DWORD PTR ds:[esi]
  404593:	xor    eax,0x61130db1
  404598:	cmp    dh,cl
  40459a:	lds    ebp,FWORD PTR [esi-0x4567830]
  4045a0:	xchg   edx,eax
  4045a1:	in     eax,dx
  4045a2:	inc    ebp
  4045a3:	mov    ds:0xc24d010f,eax
  4045a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a9:	mov    esp,0x82d3dfc1
  4045ae:	sub    edx,DWORD PTR [ebp-0x61622f8a]
  4045b4:	mul    cl
  4045b6:	das    
  4045b7:	lock dec ebx
  4045b9:	mov    ebp,0x3a4e2c93
  4045be:	mov    ah,0xc5
  4045c0:	sub    ecx,DWORD PTR [ebp+0x7e]
  4045c3:	jns    0x404545
  4045c5:	add    DWORD PTR [edi-0x31fea6ba],ebp
  4045cb:	jmp    0xfefe2743
  4045d0:	mov    cl,0x82
  4045d2:	call   0x3c77fd12
  4045d7:	cmc    
  4045d8:	jne    0x40455b
  4045da:	jns    0x40464a
  4045dc:	mov    bl,0xbd
  4045de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045df:	sti    
  4045e0:	adc    eax,0x86a367e9
  4045e5:	jnp    0x404606
  4045e7:	stos   BYTE PTR es:[edi],al
  4045e8:	dec    esi
  4045e9:	cld    
  4045ea:	(bad)  
  4045eb:	arpl   WORD PTR [ecx+ebp*1-0x26],cx
  4045ef:	xlat   BYTE PTR ds:[ebx]
  4045f0:	mov    eax,0xe90a818f
  4045f5:	sub    dh,BYTE PTR [ecx+0x62]
  4045f8:	inc    edi
  4045f9:	inc    edx
  4045fa:	fadd   QWORD PTR cs:[ebx+0xe]
  4045fe:	retf   0x5004
  404601:	repnz adc al,0x3b
  404604:	jecxz  0x40464e
  404606:	fidivr DWORD PTR [ebp-0x33]
  404609:	repz sbb DWORD PTR [ebx],0x968773ff
  404610:	mov    DWORD PTR gs:0x28b7587a,ecx
  404617:	pushf  
  404618:	inc    ebx
  404619:	cmp    BYTE PTR [ebx+edi*8+0x1b],bl
  40461d:	(bad)  
  40461e:	dec    ebp
  40461f:	rol    DWORD PTR [edi],1
  404621:	test   eax,0xa5898eeb
  404626:	(bad)  
  404627:	xor    dl,BYTE PTR [edi+0x1538a580]
  40462d:	and    DWORD PTR [esi-0x18b0e48],ebx
  404633:	sub    BYTE PTR [esi],dh
  404635:	stos   DWORD PTR es:[edi],eax
  404636:	pop    edi
  404637:	mov    ecx,0x9f67d881
  40463c:	les    esi,FWORD PTR [ebx-0x54172d55]
  404642:	out    dx,al
  404643:	sbb    eax,0xad364eb8
  404648:	xlat   BYTE PTR ds:[ebx]
  404649:	ins    BYTE PTR es:[edi],dx
  40464a:	ss popf 
  40464c:	fcom   DWORD PTR [ecx+0x3f]
  40464f:	xchg   edi,eax
  404650:	inc    ecx
  404651:	mov    ds:0x1b7c2da7,eax
  404656:	adc    dh,dh
  404658:	loop   0x4045f1
  40465a:	fdivr  DWORD PTR [edi+0x53]
  40465d:	xchg   BYTE PTR [ecx],ch
  40465f:	pusha  
  404660:	or     eax,eax
  404662:	inc    ebx
  404663:	inc    ecx
  404664:	mov    edx,0x5a014ded
  404669:	push   ebp
  40466a:	ds (bad) 
  40466c:	js     0x40467d
  40466e:	sub    dh,BYTE PTR [esi-0x78]
  404671:	imul   eax,DWORD PTR [eax],0x66911aae
  404677:	les    edi,FWORD PTR [ebp+0x33]
  40467a:	jl     0x404660
  40467c:	sbb    BYTE PTR [edx-0x2ba0d0c2],ah
  404682:	fnstenv [eax-0xa356360]
  404688:	mov    ecx,0xc7519a40
  40468d:	or     eax,0xf75ea69d
  404692:	push   eax
  404693:	mov    ch,0x35
  404695:	je     0x4046b6
  404697:	xchg   edi,eax
  404698:	leave  
  404699:	call   0xc20c:0x2a84eb53
  4046a0:	xchg   BYTE PTR [ebx-0x5b708c3],al
  4046a6:	or     BYTE PTR [esi+0x78935711],ch
  4046ac:	lahf   
  4046ad:	sub    ah,BYTE PTR [esi]
  4046af:	push   0x9d683489
  4046b4:	retf   0x3091
  4046b7:	cmp    al,0xa2
  4046b9:	pop    ecx
  4046ba:	int3   
  4046bb:	pop    esi
  4046bc:	cs icebp 
  4046be:	out    dx,eax
  4046bf:	rcr    bh,1
  4046c1:	sub    eax,0x901c65da
  4046c6:	xor    BYTE PTR [ebx],bh
  4046c8:	jmp    0x6fa4:0x58371bd8
  4046cf:	(bad)  
  4046d0:	mov    ch,0x8e
  4046d2:	stc    
  4046d3:	aaa    
  4046d4:	fs nop
  4046d6:	mov    bl,0x19
  4046d8:	jle    0x404683
  4046da:	ss push 0x45
  4046dd:	ins    DWORD PTR es:[edi],dx
  4046de:	xchg   ebx,eax
  4046df:	mov    esp,esi
  4046e1:	sub    bl,ah
  4046e3:	sbb    eax,0x604d93b1
  4046e8:	js     0x4046b3
  4046ea:	add    esp,DWORD PTR [ebp-0x6b]
  4046ed:	arpl   WORD PTR [edi+edx*8+0x65],di
  4046f1:	ins    DWORD PTR es:[edi],dx
  4046f2:	not    DWORD PTR [esi]
  4046f4:	sti    
  4046f5:	mov    eax,ds:0xc6ef085e
  4046fa:	dec    esp
  4046fb:	call   0x50b3c314
  404700:	push   cs
  404701:	xor    cl,dl
  404703:	xor    BYTE PTR [esi+0x16],bl
  404706:	call   0xa067:0x8c203438
  40470d:	ins    DWORD PTR es:[edi],dx
  40470e:	inc    esi
  40470f:	nop
  404710:	into   
  404711:	rol    DWORD PTR [ebx+esi*1-0x75d21f3e],0x76
  404719:	inc    esi
  40471a:	fwait
  40471b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471c:	pop    ebp
  40471d:	mov    al,0x2d
  40471f:	(bad)  
  404720:	pop    ss
  404721:	cld    
  404722:	and    ah,BYTE PTR [ecx]
  404724:	jmp    0x404747
  404726:	or     DWORD PTR [ebp-0x3f],0xc3a7c75d
  40472d:	repnz cmp DWORD PTR [edi],ecx
  404730:	(bad)  
  404732:	cli    
  404733:	sub    al,0xbf
  404735:	gs ds loope 0x4046eb
  404739:	cmp    al,0x59
  40473b:	imul   eax,DWORD PTR [ebp+0x44],0x49
  40473f:	jnp    0x40470a
  404741:	sub    esp,DWORD PTR [edi]
  404743:	cs xchg esp,eax
  404745:	mov    dl,0x9c
  404747:	jecxz  0x4046e6
  404749:	xchg   esi,eax
  40474a:	pop    esp
  40474b:	scas   al,BYTE PTR es:[edi]
  40474c:	or     eax,0x42cc07e5
  404751:	and    bh,BYTE PTR [ebp+0x741f6f41]
  404757:	out    dx,eax
  404758:	ret    
  404759:	outs   dx,DWORD PTR ds:[esi]
  40475a:	(bad)  
  40475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40475c:	stos   BYTE PTR es:[edi],al
  40475d:	xor    al,0xf8
  40475f:	cdq    
  404760:	mov    ecx,0x8cad6fe9
  404765:	xchg   BYTE PTR [edx+0x79061078],bl
  40476b:	inc    ecx
  40476c:	push   ds
  40476d:	call   0xd0004e7
  404772:	and    DWORD PTR cs:[eax-0x40],ebp
  404776:	xchg   esi,eax
  404777:	pop    ss
  404778:	push   ecx
  404779:	and    BYTE PTR [eax-0x19ed71a6],0x45
  404780:	ss mov ebp,0x1ee486f5
  404786:	fldcw  WORD PTR [ebx+edi*4-0x55]
  40478a:	xchg   DWORD PTR [esi],ecx
  40478c:	xor    BYTE PTR [edx-0x27],0xe5
  404790:	inc    ecx
  404791:	pop    es
  404792:	je     0x404742
  404794:	nop
  404795:	xor    edx,esi
  404797:	imul   DWORD PTR [ebx+0x5f9671f0]
  40479d:	(bad)  
  40479e:	int    0x68
  4047a0:	jmp    0xa4f70eb0
  4047a5:	fcomp  QWORD PTR [edi+0xd]
  4047a8:	(bad)  
  4047a9:	mov    bl,0xab
  4047ab:	cli    
  4047ac:	dec    edx
  4047ad:	sub    BYTE PTR [esp+eax*8],cl
  4047b0:	leave  
  4047b1:	fldcw  WORD PTR [esi+0x1ed9fc68]
  4047b7:	push   esi
  4047b8:	pop    ebx
  4047b9:	shl    BYTE PTR [esi+0x7bc4e09e],0xa
  4047c0:	xchg   ecx,eax
  4047c1:	popf   
  4047c2:	ficom  DWORD PTR [edx]
  4047c4:	pop    edi
  4047c5:	(bad)  
  4047c6:	cmc    
  4047c7:	or     BYTE PTR [edi+0x75b2224b],ah
  4047cd:	add    DWORD PTR [edx-0x74],edi
  4047d0:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4047d2:	push   eax
  4047d3:	sahf   
  4047d4:	in     al,0xbb
  4047d6:	imul   eax,DWORD PTR [edi+esi*4-0x64e5a274],0x909a3f07
  4047e1:	jmp    0x404839
  4047e3:	jle    0x4047aa
  4047e5:	das    
  4047e6:	push   0xeeadda8
  4047eb:	xor    ebx,DWORD PTR [ebx-0x70291977]
  4047f1:	mov    ds:0x6bf959e9,al
  4047f6:	add    al,0x2e
  4047f8:	das    
  4047f9:	ss fcomi st,st(0)
  4047fc:	or     bh,BYTE PTR [ebx+ebx*8+0xc71f4ca]
  404803:	push   ds
  404804:	out    dx,al
  404805:	das    
  404806:	dec    edi
  404807:	add    eax,edi
  404809:	cdq    
  40480a:	jnp    0x4047ca
  40480c:	mov    edi,0x212b63f2
  404811:	(bad)  
  404812:	pop    edi
  404813:	repnz fistp DWORD PTR [edx+0x329cb218]
  40481a:	xor    al,0x18
  40481c:	push   edx
  40481d:	pop    edi
  40481e:	inc    eax
  40481f:	cmp    edx,esp
  404821:	into   
  404822:	mov    bh,0x32
  404824:	fld    TBYTE PTR [edi+0x1fe52853]
  40482a:	ds mov ah,0x19
  40482d:	ss pop ds
  40482f:	xor    eax,0x35dbef7
  404834:	sbb    esi,ecx
  404836:	and    ch,bh
  404838:	mov    ebp,ecx
  40483a:	pop    esp
  40483b:	inc    edi
  40483c:	inc    ebp
  40483d:	push   ds
  40483e:	add    eax,eax
  404840:	sbb    eax,0xeff3615e
  404845:	enter  0xf7c1,0x36
  404849:	adc    al,0xd0
  40484b:	jg     0x4047e4
  40484d:	daa    
  40484e:	cld    
  40484f:	inc    esi
  404850:	sbb    DWORD PTR [ebx+ecx*8],0x396d8bd
  404857:	div    esi
  404859:	js     0x4047dd
  40485b:	add    edx,DWORD PTR [ebp-0x75db47e5]
  404861:	imul   esp,DWORD PTR [eax+0x29],0x11
  404865:	inc    edx
  404866:	mov    ebx,0x665b6540
  40486b:	pop    edx
  40486c:	idiv   cl
  40486e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40486f:	pop    esp
  404870:	mov    es,WORD PTR [eax]
  404872:	xchg   ebp,eax
  404873:	jnp    0x404832
  404875:	inc    ecx
  404876:	xlat   BYTE PTR ds:[ebx]
  404877:	cmp    DWORD PTR [esi-0x39119448],ebp
  40487d:	pop    esi
  40487e:	fcomp  DWORD PTR [ecx]
  404880:	std    
  404881:	mov    eax,0x8048829e
  404886:	mov    al,0xdd
  404888:	push   esp
  404889:	jp     0x404896
  40488b:	jl     0x40489d
  40488d:	push   esi
  40488e:	inc    eax
  40488f:	dec    esi
  404890:	jmp    0x4048f0
  404892:	sbb    al,0x6b
  404894:	dec    eax
  404895:	jge    0x404899
  404897:	ret    0xdb54
  40489a:	(bad)  
  40489b:	int3   
  40489c:	cli    
  40489d:	popf   
  40489e:	add    ah,0x9b
  4048a1:	sub    eax,DWORD PTR ds:0xdc3dfa6f
  4048a7:	push   cs
  4048a8:	sub    bl,BYTE PTR [ebx]
  4048aa:	mov    ebp,0x4b9b8412
  4048af:	aaa    
  4048b0:	pop    ebx
  4048b1:	cmp    eax,0x94ec91c5
  4048b6:	test   eax,0x88064249
  4048bb:	test   ebp,esp
  4048bd:	mov    ah,0x88
  4048bf:	shl    DWORD PTR [esi],1
  4048c1:	xchg   esi,eax
  4048c2:	lea    ebx,[edx-0x24]
  4048c5:	xor    DWORD PTR [eax],ebx
  4048c7:	add    bh,dh
  4048c9:	and    BYTE PTR [edx-0x2095c0db],dh
  4048cf:	xor    edx,eax
  4048d1:	xor    esi,DWORD PTR [ebp-0x73d65636]
  4048d7:	push   ds
  4048d8:	outs   dx,DWORD PTR ds:[esi]
  4048d9:	push   ebx
  4048da:	mov    bh,0x89
  4048dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048dd:	imul   esi,DWORD PTR [esi+ebx*8+0x7c],0x2aed3b35
  4048e5:	dec    ecx
  4048e6:	mov    bl,dl
  4048e8:	jge    0x4048c5
  4048ea:	in     al,0xd9
  4048ec:	inc    eax
  4048ed:	xchg   ebx,eax
  4048ee:	loop   0x4048a9
  4048f0:	cmp    al,0x73
  4048f2:	or     BYTE PTR [ebx],ah
  4048f4:	mov    cl,0xae
  4048f6:	cmp    eax,esp
  4048f8:	mov    bl,0x88
  4048fa:	inc    edx
  4048fb:	out    0xff,al
  4048fd:	xor    ch,bl
  4048ff:	das    
  404900:	mov    BYTE PTR [esi-0x427df97a],dh
  404906:	sbb    bh,bl
  404908:	pusha  
  404909:	push   esp
  40490a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490c:	push   es
  40490d:	lock or ebp,DWORD PTR [eax+ebx*2-0x34]
  404912:	dec    edi
  404913:	sbb    DWORD PTR [edx+0x91394c6],esi
  404919:	retf   0xc871
  40491c:	xchg   DWORD PTR [ecx],ebp
  40491e:	clc    
  40491f:	lods   al,BYTE PTR ds:[esi]
  404920:	dec    eax
  404921:	xchg   edx,eax
  404922:	test   BYTE PTR [ecx+0xa],dh
  404925:	pop    es
  404926:	jle    0x4048d7
  404928:	dec    esi
  404929:	out    0xed,eax
  40492b:	leave  
  40492c:	je     0x404916
  40492e:	dec    ebx
  40492f:	sbb    al,0xb6
  404931:	shl    DWORD PTR [esi-0x17f54bc6],cl
  404937:	repnz loopne 0x4048f3
  40493a:	inc    esp
  40493b:	sbb    ecx,edi
  40493d:	mov    esp,0x70a00067
  404942:	(bad)  
  404944:	mov    dl,0x84
  404946:	outs   dx,BYTE PTR ds:[esi]
  404947:	outs   dx,DWORD PTR ds:[esi]
  404948:	ficomp WORD PTR [edx-0x1f]
  40494b:	and    al,0x20
  40494d:	aam    0x84
  40494f:	repz aaa 
  404951:	cmp    eax,0x586f9c5c
  404956:	aam    0xe6
  404958:	sar    BYTE PTR [edx-0x4b],1
  40495b:	xor    al,0x2d
  40495d:	cmp    eax,0xa6e722d0
  404962:	xor    eax,0xe4ff5378
  404967:	push   esp
  404968:	jne    0x40495d
  40496a:	jge    0x40490d
  40496c:	loope  0x404958
  40496e:	xor    al,0x38
  404970:	pushf  
  404971:	sbb    edx,DWORD PTR [eax+0x7b105fdf]
  404977:	ins    BYTE PTR es:[edi],dx
  404978:	les    ebp,FWORD PTR [esi]
  40497a:	fs pop edi
  40497c:	xlat   BYTE PTR ds:[ebx]
  40497d:	sub    BYTE PTR [ebx-0x1e5c17dc],0xaa
  404984:	lods   eax,DWORD PTR ds:[esi]
  404985:	jmp    0x4049bc
  404987:	sub    bh,0x7
  40498a:	and    BYTE PTR [ebx-0x70],al
  40498d:	cmp    eax,0x64b8e7cf
  404992:	pop    edi
  404993:	xchg   ebx,eax
  404994:	jns    0x40498b
  404996:	mov    ds:0x423cc8d5,al
  40499b:	les    ecx,FWORD PTR [eax-0x8]
  40499e:	je     0x4049c3
  4049a0:	imul   DWORD PTR [ecx-0x26]
  4049a3:	dec    eax
  4049a4:	fcmovne st,st(3)
  4049a6:	push   ebx
  4049a7:	shl    cl,0xf0
  4049aa:	xor    eax,ebp
  4049ac:	xor    al,0x54
  4049ae:	and    ebp,DWORD PTR [esi-0x1c2e9a88]
  4049b4:	shl    DWORD PTR [ecx+ecx*1+0x6c88bb51],0xc5
  4049bc:	sbb    DWORD PTR [ebp+0x5925152a],0xa33a040c
  4049c6:	jno    0x404a0a
  4049c8:	sub    eax,0xd0f897ba
  4049cd:	dec    esp
  4049ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049cf:	fmulp  st(0),st
  4049d1:	fadd   DWORD PTR [ebx+0x609b677e]
  4049d7:	rol    DWORD PTR [ebp+0x1a],1
  4049da:	aad    0x1
  4049dc:	add    BYTE PTR [eax],dh
  4049de:	dec    edi
  4049df:	adc    al,0x5d
  4049e1:	pop    esp
  4049e2:	fdivr  DWORD PTR [edx+0x64]
  4049e5:	mov    al,ds:0x12734528
  4049ea:	sbb    BYTE PTR [ebp-0x24a3c62f],bh
  4049f0:	xor    al,0x8d
  4049f2:	nop
  4049f3:	sar    BYTE PTR [ebx],0x57
  4049f6:	in     al,dx
  4049f7:	ja     0x4049e4
  4049f9:	jmp    0x5865:0x1a30fab3
  404a00:	retf   
  404a01:	fs stos BYTE PTR es:[edi],al
  404a03:	lds    edi,FWORD PTR [ebp-0x796419aa]
  404a09:	dec    eax
  404a0a:	inc    edx
  404a0b:	ins    BYTE PTR es:[edi],dx
  404a0c:	shr    DWORD PTR [ecx],1
  404a0e:	out    dx,al
  404a0f:	dec    eax
  404a10:	pop    es
  404a11:	sbb    BYTE PTR [edx],bl
  404a13:	pop    edi
  404a14:	add    eax,0x670306f6
  404a19:	and    eax,0xd6123adc
  404a1e:	xor    BYTE PTR [esi],0x53
  404a21:	mov    cl,0x7d
  404a23:	(bad)  [edx-0x59]
  404a26:	dec    ebp
  404a27:	test   al,0xce
  404a29:	add    edi,DWORD PTR [ebp+0xe277098]
  404a2f:	sub    eax,0x68f6282c
  404a34:	dec    eax
  404a35:	(bad)  
  404a36:	fdiv   QWORD PTR [edi]
  404a38:	arpl   WORD PTR [edx+ebp*1+0x39f5f118],si
  404a3f:	push   cs
  404a40:	adc    dl,0x88
  404a43:	mov    cl,0x20
  404a45:	sti    
  404a46:	cld    
  404a47:	xchg   edi,eax
  404a48:	ret    
  404a49:	pop    ss
  404a4a:	int3   
  404a4b:	fisubr DWORD PTR [edi-0x220993c1]
  404a51:	cld    
  404a52:	adc    eax,0x34db3643
  404a57:	sub    BYTE PTR [ecx+0x713d4c43],cl
  404a5d:	push   0xb1b812fc
  404a62:	push   ss
  404a63:	std    
  404a64:	ret    
  404a65:	out    dx,al
  404a66:	sub    ebp,ebp
  404a68:	mov    BYTE PTR [ecx+eax*8-0x67],dl
  404a6c:	in     al,0x14
  404a6e:	jno    0x404a78
  404a70:	jmp    0x404a9f
  404a72:	sahf   
  404a73:	inc    ebx
  404a74:	jp     0x404a80
  404a76:	adc    al,0x22
  404a78:	fisub  DWORD PTR [ebx-0x4a]
  404a7b:	sub    al,0x86
  404a7d:	shl    DWORD PTR [esi-0x5e],0x99
  404a81:	mov    eax,0xfa819134
  404a86:	xchg   esi,eax
  404a87:	add    eax,0xe59d8550
  404a8c:	pop    eax
  404a8d:	jne    0x404a66
  404a8f:	push   ebp
  404a90:	push   ecx
  404a91:	call   0xef7f:0xbfe336fe
  404a98:	sub    eax,0xd1bd0de0
  404a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a9e:	dec    edi
  404a9f:	pop    ds
  404aa0:	lock aaa 
  404aa2:	jns    0x404aa3
  404aa4:	xor    al,BYTE PTR [ebp+edx*4+0x16]
  404aa8:	add    DWORD PTR [ebx],esi
  404aaa:	mov    bl,0x5d
  404aac:	jmp    0x34c8:0x416bd006
  404ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab4:	(bad)  
  404ab6:	lods   al,BYTE PTR ds:[esi]
  404ab7:	dec    ecx
  404ab8:	add    DWORD PTR [edi-0x6d],edx
  404abb:	icebp  
  404abc:	dec    ebx
  404abd:	pop    ss
  404abe:	sbb    DWORD PTR [eax+0x146c1ab9],ebx
  404ac4:	adc    edx,esp
  404ac6:	adc    ebx,DWORD PTR [edx-0x2a]
  404ac9:	push   ss
  404aca:	in     eax,dx
  404acb:	dec    ebx
  404acc:	add    eax,0x32
  404acf:	mov    esp,0x716239a1
  404ad4:	pop    es
  404ad5:	ret    0xf61a
  404ad8:	push   ebp
  404ad9:	pop    es
  404ada:	pop    ds
  404adb:	adc    ch,BYTE PTR [eax+0x6]
  404ade:	dec    esi
  404adf:	mov    dh,0x43
  404ae1:	mov    cl,0xb4
  404ae3:	retf   
  404ae4:	adc    BYTE PTR [edx],0x1b
  404ae7:	ins    DWORD PTR es:[edi],dx
  404ae8:	add    cl,BYTE PTR [ecx-0x7e]
  404aeb:	nop
  404aec:	int    0xd5
  404aee:	les    eax,FWORD PTR ds:0x63969ab7
  404af4:	cmc    
  404af5:	hlt    
  404af6:	jmp    0x6a22:0x93849e32
  404afd:	nop    DWORD PTR ds:0x89389f94
  404b04:	lahf   
  404b05:	out    0x51,eax
  404b07:	rol    BYTE PTR [eax],0x45
  404b0a:	pusha  
  404b0b:	cld    
  404b0c:	call   0xd376:0x64ab1903
  404b13:	mov    ah,0x32
  404b15:	in     eax,dx
  404b16:	pop    es
  404b17:	xor    ebp,eax
  404b19:	inc    ebx
  404b1a:	aam    0x22
  404b1c:	adc    al,0xbb
  404b1e:	cmp    BYTE PTR [ebp+0x7ac150e1],bh
  404b24:	and    ebx,edi
  404b26:	dec    ebx
  404b27:	(bad)  
  404b28:	stc    
  404b29:	scas   eax,DWORD PTR es:[edi]
  404b2a:	mov    BYTE PTR [edx-0x2c],dh
  404b2d:	and    bh,dh
  404b2f:	ret    0x6401
  404b32:	jnp    0x404b20
  404b34:	jp     0x404b24
  404b36:	jmp    0x4ab9:0xef42cd60
  404b3d:	out    0x9b,al
  404b3f:	inc    ebp
  404b40:	iret   
  404b41:	pop    esp
  404b42:	jno    0x404ae0
  404b44:	mov    edi,0x147997ec
  404b49:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404b4b:	loopne 0x404b31
  404b4d:	es jge 0x404ba8
  404b50:	or     ch,BYTE PTR [edx]
  404b52:	sub    eax,0x9435c54b
  404b57:	rcl    BYTE PTR [esi-0x138d219],cl
  404b5d:	cmp    BYTE PTR [ebx],0xb7
  404b60:	mov    ds:0x4cb1ad41,al
  404b65:	jmp    0xc246:0xcd57f9d6
  404b6c:	jmp    0x404b31
  404b6e:	mov    al,ds:0x174cc6d2
  404b73:	repz mov WORD PTR [eax-0x5fde3a15],ds
  404b7a:	stos   BYTE PTR es:[edi],al
  404b7b:	inc    eax
  404b7c:	das    
  404b7d:	(bad)  
  404b7e:	lahf   
  404b7f:	lahf   
  404b80:	stc    
  404b81:	mov    al,ds:0x4ae2ad62
  404b86:	test   al,0x35
  404b88:	jnp    0x404b96
  404b8a:	inc    dx
  404b8c:	aas    
  404b8d:	xchg   ebx,eax
  404b8e:	arpl   WORD PTR [eax-0x1f],di
  404b91:	mov    esp,0x71ba24e5
  404b96:	(bad)  
  404b97:	sub    ah,BYTE PTR [ecx+edx*4-0x3]
  404b9b:	fmul   QWORD PTR [ecx+0x6d5ecabe]
  404ba1:	lock aas 
  404ba3:	xor    al,0x9e
  404ba5:	add    dl,al
  404ba7:	fimul  DWORD PTR [ebp-0x52]
  404baa:	sub    eax,0xd7938ddb
  404baf:	mov    bl,0x4c
  404bb1:	and    dl,BYTE PTR [eax]
  404bb3:	scas   eax,DWORD PTR es:[edi]
  404bb4:	add    BYTE PTR ds:0xfef15be6,ah
  404bba:	clc    
  404bbb:	jne    0x404b95
  404bbd:	outs   dx,BYTE PTR ds:[esi]
  404bbe:	clc    
  404bbf:	jle    0x404bc1
  404bc1:	inc    ebx
  404bc2:	pushf  
  404bc3:	dec    edx
  404bc4:	sbb    edi,DWORD PTR [ebx+0x4e608dcb]
  404bca:	call   0x7d0bf759
  404bcf:	rcr    BYTE PTR [esi+eax*2+0x6a],cl
  404bd3:	dec    esi
  404bd4:	add    ah,ch
  404bd6:	mov    ds:0x1cd18a43,al
  404bdb:	adc    al,BYTE PTR [ebp+0x31]
  404bde:	and    BYTE PTR [ebx],cl
  404be0:	cmp    al,0x1
  404be2:	jns    0x404baa
  404be4:	(bad)  
  404be5:	and    edi,DWORD PTR [ecx+0x7b]
  404be8:	cmp    DWORD PTR [ecx+edx*4-0x193f0c4e],edx
  404bef:	jb     0x404ba3
  404bf1:	inc    esi
  404bf2:	inc    edx
  404bf3:	ja     0x404bee
  404bf5:	out    dx,al
  404bf6:	in     al,0xc6
  404bf8:	dec    edi
  404bf9:	mov    ecx,db2
  404bfc:	sbb    ebp,DWORD PTR [esi+ebx*4-0x45b1cccd]
  404c03:	scas   eax,DWORD PTR es:[di]
  404c05:	mov    edx,0x38732c47
  404c0a:	mov    esi,0x15f41b67
  404c0f:	out    dx,al
  404c10:	dec    eax
  404c11:	enter  0xfe21,0x84
  404c15:	mov    bh,0x5b
  404c17:	test   BYTE PTR [eax+0x3e],cl
  404c1a:	cmp    eax,0xc23a6405
  404c1f:	stos   DWORD PTR es:[edi],eax
  404c20:	pop    edi
  404c21:	(bad)  
  404c22:	call   0xf328fefc
  404c27:	cmp    BYTE PTR [edi+0x7dbd348],bl
  404c2d:	in     eax,dx
  404c2e:	lods   al,BYTE PTR ds:[esi]
  404c2f:	test   eax,0x37b86b39
  404c34:	mov    esp,0x26dcf852
  404c39:	jbe    0x404c73
  404c3b:	add    eax,0x45d49e39
  404c40:	add    bh,bl
  404c42:	inc    ecx
  404c43:	cld    
  404c44:	mov    eax,0x1ec2d44e
  404c49:	je     0x404cc6
  404c4b:	leave  
  404c4c:	fidiv  WORD PTR [ebx-0x2989d40f]
  404c52:	test   BYTE PTR [ebx+0x36],0x12
  404c56:	xlat   BYTE PTR ds:[ebx]
  404c57:	push   0x369c078
  404c5c:	sahf   
  404c5d:	call   0xf5de:0xc46e7d24
  404c64:	mov    ah,0xa7
  404c66:	push   esi
  404c67:	cs aad 0x25
  404c6a:	cwde   
  404c6b:	loop   0x404bf7
  404c6d:	push   es
  404c6e:	js     0x404c9e
  404c70:	mov    ?,WORD PTR [eax-0x6e119867]
  404c76:	in     eax,0xa0
  404c78:	and    DWORD PTR [ebp-0x5f],ebx
  404c7b:	aad    0x9f
  404c7d:	push   cs
  404c7e:	sti    
  404c7f:	cmp    eax,0xa6a1b4a7
  404c84:	sub    ecx,edi
  404c86:	xchg   DWORD PTR [ecx+0x7c],ebp
  404c89:	push   ebp
  404c8a:	in     al,dx
  404c8b:	mov    eax,0x17c7c0d9
  404c90:	xchg   esp,eax
  404c91:	dec    eax
  404c92:	dec    ebx
  404c93:	dec    eax
  404c94:	cmc    
  404c95:	hlt    
  404c96:	call   0x51ec8cb0
  404c9b:	(bad)  
  404c9c:	dec    edi
  404c9d:	in     al,dx
  404c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9f:	sub    DWORD PTR [eax+0x46],ecx
  404ca2:	stos   BYTE PTR es:[edi],al
  404ca3:	imul   edx,DWORD PTR [ecx],0xe96b43e1
  404ca9:	push   ebx
  404caa:	pop    ss
  404cab:	sar    DWORD PTR [esi+0x61],cl
  404cae:	dec    ecx
  404caf:	loop   0x404cda
  404cb1:	add    BYTE PTR [ebx-0x14],0xd
  404cb5:	jo     0x404cb1
  404cb7:	jg     0x404c39
  404cb9:	fucomi st,st(1)
  404cbb:	xor    esi,eax
  404cbd:	xchg   ebp,eax
  404cbe:	mov    cl,0xf7
  404cc0:	mov    cl,0x2c
  404cc2:	pop    edi
  404cc3:	rcr    edi,cl
  404cc5:	pop    ebp
  404cc6:	sub    BYTE PTR [edi+0x1a],dh
  404cc9:	inc    edi
  404cca:	jg     0x404cc0
  404ccc:	scas   eax,DWORD PTR es:[edi]
  404ccd:	mov    dl,0x83
  404ccf:	scas   eax,DWORD PTR es:[edi]
  404cd0:	xchg   ebp,eax
  404cd1:	pushf  
  404cd2:	cdq    
  404cd3:	dec    edi
  404cd4:	jnp    0x404ccb
  404cd6:	xchg   DWORD PTR [ecx],esi
  404cd8:	outs   dx,BYTE PTR ds:[esi]
  404cd9:	in     al,dx
  404cda:	(bad)  
  404cdc:	mov    eax,0x54274960
  404ce1:	daa    
  404ce2:	inc    ebx
  404ce3:	mov    esi,?
  404ce5:	mov    al,ds:0xb48278a1
  404cea:	push   ss
  404ceb:	mov    ah,0x8d
  404ced:	and    dh,BYTE PTR [ecx]
  404cef:	fnsave [ebx+0x60153e30]
  404cf5:	pop    ebx
  404cf6:	loop   0x404d5b
  404cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf9:	ja     0x404c8b
  404cfb:	lahf   
  404cfc:	inc    ebx
  404cfd:	daa    
  404cfe:	xor    DWORD PTR [edx+0x4a2e0792],ecx
  404d04:	mul    BYTE PTR [eax]
  404d06:	rcl    DWORD PTR [eax+0x2d],0x26
  404d0a:	adc    ebp,esp
  404d0c:	popa   
  404d0d:	sahf   
  404d0e:	push   ss
  404d0f:	ret    
  404d10:	(bad)  
  404d11:	(bad)  
  404d12:	(bad)  
  404d13:	jge    0x404d25
  404d15:	ret    
  404d16:	pop    ds
  404d17:	sub    dh,al
  404d19:	mov    ecx,DWORD PTR [edi]
  404d1b:	leave  
  404d1c:	cmp    BYTE PTR [ebx+0x6fc00385],ah
  404d22:	sbb    al,0x52
  404d24:	mov    al,BYTE PTR [ebp-0x476457e4]
  404d2a:	inc    eax
  404d2b:	ret    0xa551
  404d2e:	push   cs
  404d2f:	cmp    ah,bl
  404d31:	xchg   ecx,eax
  404d32:	popa   
  404d33:	ret    
  404d34:	stos   DWORD PTR es:[edi],eax
  404d35:	je     0x404cbf
  404d37:	pop    ss
  404d38:	sbb    DWORD PTR [ecx],ebp
  404d3a:	jbe    0x404d74
  404d3c:	push   ds
  404d3d:	dec    esi
  404d3e:	popa   
  404d3f:	dec    ecx
  404d40:	test   eax,0xdd7d4494
  404d45:	scas   eax,DWORD PTR es:[edi]
  404d46:	push   ebx
  404d47:	(bad)  
  404d48:	jecxz  0x404d42
  404d4a:	and    ebp,DWORD PTR [edi+eax*2+0x7e]
  404d4e:	ror    BYTE PTR [edi-0x72],cl
  404d51:	data16 jbe 0x404d5d
  404d54:	sbb    eax,DWORD PTR [esi+0xf]
  404d57:	dec    esp
  404d58:	test   BYTE PTR [eax-0x228ab8e0],ch
  404d5e:	jg     0x404d8e
  404d60:	mov    ah,0xe4
  404d62:	jp     0x404d4e
  404d64:	(bad)  
  404d65:	push   ebx
  404d66:	jp     0x404d6c
  404d68:	in     al,dx
  404d69:	int3   
  404d6a:	and    eax,DWORD PTR [esi-0x6b]
  404d6d:	pop    ebp
  404d6e:	(bad)  
  404d6f:	sahf   
  404d70:	and    ah,al
  404d72:	cmc    
  404d73:	xor    bl,BYTE PTR [ecx+0x27566b4e]
  404d79:	xchg   BYTE PTR [edi],dl
  404d7b:	add    eax,0xbb250545
  404d80:	int3   
  404d81:	ret    
  404d82:	ret    
  404d83:	mov    ds:0x87d2f3b4,al
  404d88:	ins    BYTE PTR es:[edi],dx
  404d89:	and    ecx,DWORD PTR [ebp*1-0x1da4b78b]
  404d90:	mov    fs,WORD PTR [ebx]
  404d92:	ins    BYTE PTR es:[edi],dx
  404d93:	int    0x3c
  404d95:	out    dx,al
  404d96:	call   FWORD PTR [edx]
  404d98:	cmp    bl,BYTE PTR [esi]
  404d9a:	push   esi
  404d9b:	leave  
  404d9c:	cmp    cl,al
  404d9e:	jne    0x404dfe
  404da0:	sub    ebp,esi
  404da2:	fnstcw WORD PTR [eax+0x59]
  404da5:	loopne 0x404d71
  404da7:	and    edx,DWORD PTR ds:0xd29fc84f
  404dad:	xor    eax,esp
  404daf:	mov    eax,0x5a1b4d25
  404db4:	mov    cl,0xd9
  404db6:	ror    BYTE PTR ds:0x41186ef9,1
  404dbc:	pop    ds
  404dbd:	or     dl,BYTE PTR [ebx+0x455af86]
  404dc3:	xlat   BYTE PTR ds:[ebx]
  404dc4:	jns    0x404d9f
  404dc6:	add    eax,0xf49f22c1
  404dcb:	mov    DWORD PTR [edi-0x45],esp
  404dce:	(bad)  
  404dcf:	dec    ebp
  404dd0:	pop    ebx
  404dd1:	or     dh,BYTE PTR [ebx+0x2a]
  404dd4:	icebp  
  404dd5:	mov    eax,0x8dde61ba
  404dda:	jg     0x404de9
  404ddc:	(bad)  
  404ddd:	loopne 0x404e05
  404ddf:	xchg   DWORD PTR [ebp-0x7627788b],edx
  404de5:	fist   WORD PTR [ebx+0x3cf5b7d5]
  404deb:	mov    ds:0x48b424a8,eax
  404df0:	popf   
  404df1:	jo     0x404e22
  404df3:	ficomp DWORD PTR [edx+0x3a995128]
  404df9:	jae    0x404e4e
  404dfb:	push   esp
  404dfc:	mov    esi,0x4a71d1df
  404e01:	jmp    0x404e49
  404e03:	pop    esp
  404e04:	shr    BYTE PTR [edi],cl
  404e06:	inc    edi
  404e07:	js     0x404de6
  404e09:	dec    ecx
  404e0a:	test   BYTE PTR [edx+0x61],cl
  404e0d:	push   eax
  404e0e:	jmp    0x2f76:0xa647bcdb
  404e15:	das    
  404e16:	fist   DWORD PTR ds:0xc791ee37
  404e1c:	pop    ebp
  404e1d:	xor    edx,DWORD PTR [eax-0x656506e0]
  404e23:	mov    ch,BYTE PTR [edx+0x1f153e6]
  404e29:	shl    BYTE PTR [ecx+edi*8-0x5a],cl
  404e2d:	lods   al,BYTE PTR ds:[esi]
  404e2e:	in     eax,0x6b
  404e30:	inc    esp
  404e31:	sbb    dh,bh
  404e33:	pop    esi
  404e34:	mov    dh,0x91
  404e36:	mov    dl,0x7a
  404e38:	rol    ebx,1
  404e3a:	jmp    0x3c78b2f4
  404e3f:	clc    
  404e40:	dec    ecx
  404e41:	pop    edx
  404e42:	idiv   BYTE PTR [ebx]
  404e44:	loope  0x404df3
  404e46:	aam    0x49
  404e48:	pop    ebp
  404e49:	mov    dh,0x58
  404e4b:	mov    esi,0x636fbe06
  404e50:	cli    
  404e51:	and    eax,0xbb9b26bd
  404e56:	and    DWORD PTR [edi],esp
  404e58:	pextrw ebp,(bad),0xc5
  404e5a:	sub    BYTE PTR [eax],ch
  404e5c:	xchg   BYTE PTR [ecx-0x1316f36f],dl
  404e62:	vmulsd xmm7,xmm5,xmm7
  404e66:	leave  
  404e67:	push   edi
  404e68:	pop    ebp
  404e69:	dec    ebx
  404e6a:	rcl    BYTE PTR [eax-0x36],cl
  404e6d:	pop    es
  404e6e:	test   BYTE PTR [eax+0x68],ah
  404e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e72:	xlat   BYTE PTR ds:[ebx]
  404e73:	jp     0x404e63
  404e75:	add    DWORD PTR [esi-0x2a7c5bd3],esi
  404e7b:	clc    
  404e7c:	imul   ebx,DWORD PTR [esi+eiz*8],0x21ae8cd
  404e83:	cdq    
  404e84:	sbb    BYTE PTR [edi],bh
  404e86:	icebp  
  404e87:	jnp    0x404ee4
  404e89:	mov    ebx,DWORD PTR [ecx]
  404e8b:	mov    ch,0x62
  404e8d:	(bad)  
  404e8e:	cmp    BYTE PTR [ebx],al
  404e90:	arpl   WORD PTR [edx-0x64],si
  404e93:	xor    BYTE PTR [eax+ebx*1],ah
  404e96:	sub    esi,DWORD PTR [eax-0x56]
  404e99:	out    0xe0,eax
  404e9b:	sbb    BYTE PTR [edi-0xe479b70],0xae
  404ea2:	lahf   
  404ea3:	aaa    
  404ea4:	stc    
  404ea5:	popf   
  404ea6:	cmp    BYTE PTR [eax+0x7d],0xc6
  404eaa:	sbb    esi,ebx
  404eac:	fnsave [ecx+0x38]
  404eaf:	add    DWORD PTR [esi],esp
  404eb1:	add    al,0x3c
  404eb3:	fdiv   DWORD PTR [edi+0x48]
  404eb6:	jno    0x404ea2
  404eb8:	jns    0x404ed8
  404eba:	push   esp
  404ebb:	cmp    BYTE PTR fs:[ebp+edi*4-0x1478a9bc],dh
  404ec3:	dec    esp
  404ec4:	mov    ds:0xa96798f,al
  404ec9:	jb     0x404e61
  404ecb:	push   ss
  404ecc:	push   eax
  404ecd:	push   cs
  404ece:	shl    BYTE PTR [edx-0x6],1
  404ed1:	pop    es
  404ed2:	jae    0x404e74
  404ed4:	sub    eax,0xe9457f22
  404ed9:	inc    ebp
  404eda:	or     eax,0x43f3e2ad
  404edf:	and    DWORD PTR [eax-0x1a74f6f8],0x3b
  404ee6:	(bad)  
  404ee7:	mov    edx,0x7f6e13f7
  404eec:	xor    al,0xcb
  404eee:	xor    ecx,ebp
  404ef0:	popa   
  404ef1:	xor    ebx,DWORD PTR [edx-0x1d2bd077]
  404ef7:	dec    esi
  404ef8:	test   DWORD PTR [ebp-0x7052eab6],eax
  404efe:	sbb    al,0x6
  404f00:	loop   0x404f11
  404f02:	in     eax,0x43
  404f04:	xchg   ecx,eax
  404f05:	sub    DWORD PTR [ebp-0x176fe855],ebp
  404f0b:	mov    esp,0x8e5bb7a1
  404f10:	pop    ds
  404f11:	or     eax,DWORD PTR [ebx]
  404f13:	enter  0x3ce0,0x63
  404f17:	repz push ebp
  404f19:	or     bl,dh
  404f1b:	mov    esi,0xc3d783e5
  404f20:	jmp    0xa763:0xeb9ff474
  404f27:	lahf   
  404f28:	jnp    0x404f58
  404f2a:	je     0x404f61
  404f2c:	push   ds
  404f2d:	mov    bh,0x98
  404f2f:	bound  ecx,QWORD PTR [eax-0x19]
  404f32:	and    dl,al
  404f34:	into   
  404f35:	retf   
  404f36:	out    0x98,al
  404f38:	sti    
  404f39:	pop    esi
  404f3a:	test   edi,edx
  404f3c:	retf   
  404f3d:	sbb    edx,ebx
  404f3f:	jecxz  0x404ec1
  404f41:	retf   0xeea2
  404f44:	inc    ebp
  404f45:	sub    eax,esp
  404f47:	out    0xc0,al
  404f49:	sbb    ebx,eax
  404f4b:	pop    esi
  404f4c:	push   ebp
  404f4d:	jmp    0x78d5dff0
  404f52:	and    eax,0xe34fc314
  404f57:	mov    ch,ch
  404f59:	stos   DWORD PTR es:[edi],eax
  404f5a:	das    
  404f5b:	sbb    BYTE PTR [edx-0x77dbd743],0x27
  404f62:	or     eax,0x3d58eeb8
  404f67:	fbld   TBYTE PTR [eax-0x5c3da71c]
  404f6d:	push   0xffffffb3
  404f6f:	adc    al,0x4
  404f71:	pop    ebp
  404f72:	inc    ebp
  404f73:	push   ecx
  404f74:	leave  
  404f75:	jnp    0x404f99
  404f77:	shl    edx,cl
  404f79:	jbe    0x404f0b
  404f7b:	stos   BYTE PTR es:[edi],al
  404f7c:	inc    edi
  404f7d:	lods   al,BYTE PTR ds:[esi]
  404f7e:	cdq    
  404f7f:	mov    ebx,0x6c16c5d4
  404f84:	out    0x1,al
  404f86:	cli    
  404f87:	add    dx,WORD PTR [ebx+0x7aacf951]
  404f8e:	ins    BYTE PTR es:[edi],dx
  404f8f:	jno    0x404f4a
  404f91:	mov    bh,0x3f
  404f93:	cmp    ebx,DWORD PTR [esi]
  404f95:	cli    
  404f96:	and    cl,al
  404f98:	iret   
  404f99:	js     0x404f36
  404f9b:	sub    ebx,DWORD PTR [eax-0x7c]
  404f9e:	jne    0x404f8a
  404fa0:	xor    edx,ebp
  404fa2:	jne    0x404ff1
  404fa4:	imul   esi,DWORD PTR [edi+0x5],0xa7e695bd
  404fab:	and    al,0xab
  404fad:	fucomi st,st(7)
  404faf:	in     eax,0x16
  404fb1:	push   ebp
  404fb2:	retf   
  404fb3:	cdq    
  404fb4:	mov    eax,ds:0xd75be0e
  404fb9:	xor    dl,BYTE PTR [esp+ebx*4+0x11]
  404fbd:	stos   DWORD PTR es:[edi],eax
  404fbe:	mov    dl,BYTE PTR [ebx+0x7f0b1e4d]
  404fc4:	jnp    0x40503a
  404fc6:	and    cl,al
  404fc8:	imul   ebx,DWORD PTR [edi+0x66],0xbe1c131c
  404fcf:	fcomi  st,st(6)
  404fd1:	cs aam 0x9
  404fd4:	ins    DWORD PTR es:[edi],dx
  404fd5:	pop    eax
  404fd6:	ds xor bl,dh
  404fd9:	dec    ebp
  404fda:	arpl   WORD PTR ds:0x3247aeb4,cx
  404fe0:	push   0xffffffcd
  404fe2:	pop    ds
  404fe3:	cdq    
  404fe4:	fdiv   DWORD PTR [edi-0x39]
  404fe7:	mov    DWORD PTR [edi+0x23156a98],edx
  404fed:	add    bl,BYTE PTR [eax+0x60]
  404ff0:	or     dl,ch
  404ff2:	leave  
  404ff3:	sub    al,0xfb
  404ff5:	xchg   ecx,eax
  404ff6:	das    
  404ff7:	pusha  
  404ff8:	adc    ecx,DWORD PTR [ebx-0x2aed2d8e]
  404ffe:	fadd   DWORD PTR [ecx-0x1d]
  405001:	fneni(8087 only) 
  405003:	or     DWORD PTR [esi-0x72],esi
  405006:	stc    
  405007:	mov    ecx,edx
  405009:	cmp    cl,BYTE PTR [edx]
  40500b:	xchg   ebp,eax
  40500c:	sbb    edi,DWORD PTR gs:[eax+0x41740416]
  405013:	scas   eax,DWORD PTR es:[edi]
  405014:	lods   eax,DWORD PTR ds:[esi]
  405015:	push   edi
  405016:	xchg   BYTE PTR [eax+0x78],ah
  405019:	pop    ebx
  40501a:	pop    es
  40501b:	lea    ebp,[esi]
  40501d:	add    eax,0x2b6d44b7
  405022:	inc    ebp
  405023:	stos   DWORD PTR es:[edi],eax
  405024:	add    BYTE PTR [eax+0x132ed631],dh
  40502a:	inc    eax
  40502c:	jge    0x405065
  40502e:	cmp    BYTE PTR [eax-0xee44062],0xac
  405035:	pop    ebp
  405036:	sub    DWORD PTR [esi+0x71],esp
  405039:	jmp    0xdce0:0xcf54d80b
  405040:	in     eax,dx
  405041:	adc    BYTE PTR [esi],cl
  405043:	xchg   edx,eax
  405044:	xchg   esi,eax
  405045:	imul   edi,DWORD PTR [eax+ecx*8-0x519abee],0x5d
  40504d:	push   eax
  40504e:	mov    cl,0xb4
  405050:	cmp    dl,bl
  405052:	fild   WORD PTR [ebx]
  405054:	push   cs
  405055:	mov    ?,WORD PTR [edi+0x6734a73]
  40505b:	frstor [ecx+0x6814ccfd]
  405061:	mov    dh,BYTE PTR [edi-0x78]
  405064:	xchg   esi,eax
  405065:	lods   al,BYTE PTR ds:[esi]
  405066:	add    ebx,DWORD PTR [edx+ebp*4]
  405069:	and    DWORD PTR [edi+0x17],edi
  40506c:	into   
  40506d:	jle    0x404ffd
  40506f:	jnp    0x40502c
  405071:	add    edi,0xffffffd5
  405074:	or     BYTE PTR [ebx+0x758469e2],ah
  40507a:	leave  
  40507b:	stc    
  40507c:	test   eax,0x6fd67ae6
  405081:	shl    DWORD PTR [esi+0x20adf42b],0x53
  405088:	gs xchg esp,eax
  40508a:	add    dh,BYTE PTR [esi]
  40508c:	cmp    ah,BYTE PTR [edx+0x35]
  40508f:	stos   DWORD PTR es:[edi],eax
  405090:	sub    BYTE PTR [eax],bh
  405092:	outs   dx,BYTE PTR ds:[esi]
  405093:	ins    BYTE PTR es:[edi],dx
  405094:	scas   eax,DWORD PTR es:[edi]
  405095:	mov    dh,0xd7
  405097:	sbb    ebp,DWORD PTR [esi-0x695c6610]
  40509d:	sbb    esp,DWORD PTR [eax]
  40509f:	add    ebx,DWORD PTR [esi]
  4050a1:	mov    eax,DWORD PTR [esi]
  4050a3:	aas    
  4050a4:	inc    esi
  4050a5:	cmp    al,0x8d
  4050a7:	(bad)  
  4050a8:	mov    al,ds:0xd2a9bd6a
  4050ad:	aas    
  4050ae:	jg     0x40506f
  4050b0:	fcom   DWORD PTR [eax+eax*1]
  4050b3:	sub    BYTE PTR [esi],0x4b
  4050b6:	outs   dx,BYTE PTR ds:[esi]
  4050b7:	ffreep st(4)
  4050b9:	dec    ebp
  4050ba:	(bad)  
  4050bb:	popa   
  4050bc:	sub    dl,dh
  4050be:	mov    bl,0x36
  4050c0:	sub    eax,0x5ac36177
  4050c5:	loopne 0x4050f5
  4050c7:	jmp    0x6852:0x3efea9e7
  4050ce:	rcl    BYTE PTR [eax+ebp*4+0x657aa9e6],1
  4050d5:	add    al,0xac
  4050d7:	gs rcl edx,cl
  4050da:	adc    al,0xcc
  4050dc:	dec    ebx
  4050dd:	push   es
  4050de:	mov    ebp,DWORD PTR [edx]
  4050e0:	mov    bh,0xc8
  4050e2:	ror    DWORD PTR [edi+0x7767d41c],0x25
  4050e9:	jle    0x40515f
  4050eb:	mov    edx,0xbe94bb5c
  4050f0:	inc    esi
  4050f1:	add    DWORD PTR [ebx-0x4a],ecx
  4050f4:	xchg   esi,eax
  4050f5:	mov    dh,0xef
  4050f7:	loop   0x405131
  4050f9:	xor    DWORD PTR [edi+0x25469054],eax
  4050ff:	jge    0x4050a7
  405101:	icebp  
  405102:	sub    ecx,DWORD PTR [esi+0x61]
  405105:	jnp    0x405128
  405107:	jp     0x405130
  405109:	int3   
  40510a:	aam    0xad
  40510c:	push   ebp
  40510d:	mov    al,ds:0xa44dde3e
  405112:	in     eax,0xe9
  405114:	mov    ch,0x9a
  405116:	sbb    BYTE PTR [ebp-0x1b0d6e4c],bh
  40511c:	ret    
  40511d:	push   ebx
  40511e:	pop    ebx
  40511f:	fisttp WORD PTR [ebp+0x16]
  405122:	lds    ebp,FWORD PTR [esi+0x27]
  405125:	loop   0x4050b1
  405127:	inc    ebp
  405128:	aas    
  405129:	(bad)  
  40512a:	jae    0x4050ac
  40512c:	iret   
  40512d:	mov    ds:0xaf788b5a,al
  405132:	pop    esp
  405133:	rcl    WORD PTR [esi-0x715f2b87],1
  40513a:	pusha  
  40513b:	cli    
  40513c:	repnz inc ebp
  40513e:	push   esp
  40513f:	jns    0x405126
  405141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405143:	je     0x405197
  405145:	mov    ah,0x5f
  405147:	cmp    al,0xaa
  405149:	mov    al,ds:0x6758df62
  40514e:	sbb    cl,BYTE PTR [edi]
  405150:	cwde   
  405151:	sbb    DWORD PTR ds:0x72710e37,edi
  405157:	dec    esp
  405158:	push   ecx
  405159:	dec    ebp
  40515a:	push   esi
  40515b:	dec    edi
  40515c:	mov    edi,0xbf132cba
  405161:	mov    al,0x8b
  405163:	les    edi,FWORD PTR [esi-0x24]
  405166:	sub    bh,BYTE PTR [ecx-0x180b9898]
  40516c:	stos   BYTE PTR es:[edi],al
  40516d:	pop    edi
  40516e:	neg    DWORD PTR [edi-0x46]
  405171:	sbb    al,0x1
  405173:	jnp    0x40511f
  405175:	std    
  405176:	test   eax,0x7053167f
  40517b:	jb     0x4051f2
  40517d:	xor    bh,BYTE PTR [edi-0x78549758]
  405183:	nop
  405184:	cmovl  eax,DWORD PTR [ecx]
  405187:	push   ss
  405188:	sbb    ecx,DWORD PTR [eax+ebx*1+0x7d279c74]
  40518f:	jp     0x4051d5
  405191:	mov    al,ds:0x518167a0
  405196:	gs sub bh,bh
  405199:	pop    sp
  40519b:	jnp    0x4051b2
  40519d:	xchg   ebx,eax
  40519e:	adc    al,0xfe
  4051a0:	xor    al,0x29
  4051a2:	out    dx,eax
  4051a3:	or     ebp,DWORD PTR [edi-0x78c9b0be]
  4051a9:	in     al,dx
  4051aa:	in     al,dx
  4051ab:	jg     0x4051d0
  4051ad:	mov    BYTE PTR [edx],dl
  4051af:	lds    esp,FWORD PTR [edi-0x420c023b]
  4051b5:	inc    esi
  4051b6:	xchg   DWORD PTR [edx+edi*1+0x10110d93],eax
  4051bd:	xor    al,al
  4051bf:	push   esi
  4051c0:	jns    0x405156
  4051c2:	add    bl,BYTE PTR [ebx+0x1d]
  4051c5:	xlat   BYTE PTR ds:[ebx]
  4051c6:	cmp    al,0x91
  4051c8:	ins    DWORD PTR es:[edi],dx
  4051c9:	sub    ebp,DWORD PTR [esi+0x52ebda78]
  4051cf:	or     DWORD PTR ds:0x81cedd19,esi
  4051d5:	pusha  
  4051d6:	pop    ss
  4051d7:	push   edi
  4051d8:	mov    eax,0x38622770
  4051dd:	call   0x2409844c
  4051e2:	lds    edi,FWORD PTR [ecx]
  4051e4:	xchg   al,bl
  4051e6:	xor    BYTE PTR [ecx+edx*4+0x1297f71e],cl
  4051ed:	mov    ecx,0x446824ef
  4051f2:	mov    eax,0x9f705a5
  4051f7:	stos   BYTE PTR es:[edi],al
  4051f8:	jle    0x4051ab
  4051fa:	retf   0x3bb3
  4051fd:	mov    edi,0x56cb9435
  405202:	jp     0x405218
  405204:	adc    eax,0xb90fe0e5
  405209:	es je  0x40518f
  40520c:	dec    edx
  40520d:	or     DWORD PTR [esi+0x65],esp
  405210:	outs   dx,DWORD PTR ds:[esi]
  405211:	mov    ds:0x3d8d41f1,eax
  405216:	mov    dl,0x53
  405218:	xchg   ebx,eax
  405219:	jne    0x4051cb
  40521b:	mov    ebx,0x1e312508
  405220:	cmp    al,0x4a
  405222:	or     DWORD PTR [edx],ebx
  405224:	test   DWORD PTR [ebx-0x47],ecx
  405227:	loop   0x4051e4
  405229:	sti    
  40522a:	add    esp,edx
  40522c:	jmp    0x405227
  40522e:	es (bad) 
  405231:	retf   
  405232:	test   eax,edx
  405234:	call   0xabccf300
  405239:	cmc    
  40523a:	stc    
  40523b:	mov    ecx,0xf261a8de
  405240:	mov    BYTE PTR [esi+0x3ce8b40b],0xdf
  405247:	pop    DWORD PTR [ecx]
  405249:	sbb    ebp,DWORD PTR [ebp-0x73165d75]
  40524f:	repz je 0x40522c
  405252:	fdivr  DWORD PTR [ebp+0x7851c89c]
  405258:	and    bl,BYTE PTR [esi+0x5735a82a]
  40525e:	pusha  
  40525f:	add    BYTE PTR [esi-0x71289097],bl
  405265:	fs inc edi
  405267:	mov    ecx,0xc618a4f0
  40526c:	imul   ebp,DWORD PTR [ebx-0x53e52b1f],0x2f
  405273:	bound  ebx,QWORD PTR [esi+edx*2]
  405276:	xor    BYTE PTR [eax],cl
  405278:	mov    ecx,DWORD PTR [edx]
  40527a:	xor    eax,ebx
  40527c:	mov    eax,0x9147c2db
  405281:	mov    eax,ds:0xec888138
  405286:	stos   DWORD PTR es:[edi],eax
  405287:	jecxz  0x4052f6
  405289:	push   edx
  40528a:	xchg   esp,eax
  40528b:	into   
  40528c:	jl     0x405221
  40528e:	mov    bl,BYTE PTR [ebp+0x784059ec]
  405294:	in     eax,dx
  405295:	pop    ss
  405296:	rol    edx,0xbd
  405299:	aad    0x9
  40529b:	dec    edi
  40529c:	and    DWORD PTR [ebp+0x50082889],0x4d7e9899
  4052a6:	sub    esp,DWORD PTR [ecx]
  4052a8:	les    ecx,FWORD PTR [esi-0x3f6b1909]
  4052ae:	clc    
  4052af:	xlat   BYTE PTR ds:[ebx]
  4052b0:	pop    esi
  4052b1:	lods   eax,DWORD PTR ds:[esi]
  4052b2:	test   DWORD PTR [edx],eax
  4052b4:	mov    al,ds:0x8abf04e9
  4052b9:	push   ebp
  4052ba:	gs push esi
  4052bc:	mov    al,ds:0xbf724b03
  4052c1:	sahf   
  4052c2:	retf   
  4052c3:	dec    edx
  4052c4:	pushf  
  4052c5:	fwait
  4052c6:	aaa    
  4052c7:	adc    bh,ah
  4052c9:	lds    esp,FWORD PTR [edi+eax*2]
  4052cc:	mov    bh,0xb6
  4052ce:	mov    ah,dl
  4052d0:	mov    ?,WORD PTR [eax]
  4052d2:	loop   0x405255
  4052d4:	fcom   DWORD PTR [esi]
  4052d6:	add    DWORD PTR ds:0x9c5a84f9,0xfffffff2
  4052dd:	mov    bl,0xfe
  4052df:	or     edx,ecx
  4052e1:	cld    
  4052e2:	retf   0x3c6c
  4052e5:	jnp    0x405335
  4052e7:	pop    ebx
  4052e8:	leave  
  4052e9:	outs   dx,BYTE PTR ds:[esi]
  4052ea:	fisttp WORD PTR [edx]
  4052ec:	adc    eax,0xdbadc41c
  4052f1:	jns    0x4052e8
  4052f3:	rcr    BYTE PTR [edx],1
  4052f5:	push   eax
  4052f6:	adc    al,0x77
  4052f8:	and    eax,ebx
  4052fa:	arpl   WORD PTR [ebx+esi*1-0x5566ec84],ax
  405301:	stos   BYTE PTR es:[edi],al
  405302:	mov    WORD PTR [ecx+0x36012e00],?
  405308:	add    eax,0x6a01bb59
  40530d:	and    eax,0x7fa7bca2
  405312:	push   ecx
  405313:	jne    0x405360
  405315:	ret    0x6bf3
  405318:	into   
  405319:	add    BYTE PTR [esi],0x51
  40531c:	push   ebp
  40531d:	aas    
  40531e:	enter  0xed10,0x79
  405322:	inc    esi
  405323:	rol    DWORD PTR [eax+0x19],cl
  405326:	aaa    
  405327:	test   eax,0xdb1f714e
  40532c:	xchg   ebx,eax
  40532d:	pop    es
  40532e:	pop    ds
  40532f:	lahf   
  405330:	sbb    DWORD PTR [ebx+0x3926ec0d],edx
  405336:	stc    
  405337:	sbb    BYTE PTR [ecx+0xf],0x5f
  40533b:	jecxz  0x4053a2
  40533d:	mov    BYTE PTR [esi-0x4b],bh
  405340:	(bad)  
  405341:	sub    esi,ecx
  405343:	dec    esi
  405344:	out    dx,al
  405345:	shl    DWORD PTR [edi],0xda
  405348:	popf   
  405349:	inc    esi
  40534a:	jmp    0xcab27bb6
  40534f:	std    
  405350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405351:	and    DWORD PTR [esi-0x45],0xffffffb1
  405355:	mov    BYTE PTR [ecx],bl
  405357:	ds ror dl,cl
  40535a:	fsubr  DWORD PTR ds:0x6a816952
  405360:	xchg   ecx,eax
  405361:	add    eax,0x2905ab2b
  405366:	(bad)  
  405367:	fdiv   DWORD PTR [edi+0x73c4d7eb]
  40536d:	daa    
  40536e:	cwde   
  40536f:	je     0x4053bd
  405371:	push   esp
  405372:	inc    edx
  405373:	(bad)  
  405374:	xchg   esi,eax
  405375:	and    ah,BYTE PTR [edi-0x62a47088]
  40537b:	inc    esi
  40537c:	sub    ebp,DWORD PTR [edx+ebp*4-0x28ea363]
  405383:	xor    al,dl
  405385:	add    DWORD PTR [edi-0x2819d758],esp
  40538b:	lods   al,BYTE PTR ds:[esi]
  40538c:	popf   
  40538d:	xchg   esp,eax
  40538e:	popa   
  40538f:	inc    edi
  405390:	out    0x7e,eax
  405392:	icebp  
  405393:	call   0xf461197d
  405398:	and    eax,0x6c72c873
  40539d:	into   
  40539e:	stos   BYTE PTR es:[edi],al
  40539f:	test   al,0xa8
  4053a1:	pushf  
  4053a2:	scas   eax,DWORD PTR es:[edi]
  4053a3:	xor    DWORD PTR [ebp+0x5c],0xdd630863
  4053aa:	or     al,0x61
  4053ac:	push   edx
  4053ad:	sbb    edx,edi
  4053af:	mov    al,ds:0x43dde9a5
  4053b4:	out    dx,al
  4053b5:	test   DWORD PTR ds:0xaa6695b,0xc83c27c2
  4053bf:	addr16 mov ebx,0xa401adac
  4053c5:	mov    edi,0x78f1f153
  4053ca:	lea    ecx,[ebx+0x78e216e9]
  4053d0:	jecxz  0x405445
  4053d2:	jecxz  0x405426
  4053d4:	(bad)  
  4053d6:	imul   esi,edi,0x630ba8e7
  4053dc:	ss jecxz 0x4053f6
  4053df:	xchg   ebx,eax
  4053e0:	into   
  4053e1:	and    al,0x4e
  4053e3:	repnz xlat BYTE PTR ds:[bx]
  4053e6:	push   cs
  4053e7:	jp     0x405437
  4053e9:	mov    WORD PTR [edx],?
  4053eb:	jl     0x4053bc
  4053ed:	daa    
  4053ee:	xor    al,0x9a
  4053f0:	loop   0x405424
  4053f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f3:	xchg   edi,eax
  4053f4:	or     dh,BYTE PTR [eax-0x7a]
  4053f7:	retf   
  4053f8:	adc    eax,0x35fda986
  4053fd:	jnp    0x40539d
  4053ff:	mov    cl,0x2f
  405401:	iret   
  405402:	mov    eax,0xf1fefaf0
  405407:	pusha  
  405408:	push   ds
  405409:	push   ecx
  40540a:	xor    bl,bh
  40540c:	sbb    ebx,DWORD PTR [ecx+esi*4+0x1]
  405410:	push   cs
  405411:	sti    
  405412:	out    dx,al
  405413:	adc    al,0xee
  405415:	or     eax,0xd526f5a8
  40541a:	sub    dh,ah
  40541c:	sahf   
  40541d:	test   eax,eax
  40541f:	enter  0xc5b2,0x82
  405423:	mov    edx,0x8d93faa1
  405428:	sbb    bl,BYTE PTR [ebx-0x73]
  40542b:	inc    ebx
  40542c:	jb     0x4053e0
  40542e:	gs pop eax
  405430:	mov    cl,0x1e
  405432:	pushf  
  405433:	xchg   edx,eax
  405434:	imul   esi,DWORD PTR [esi-0x2b1fbe6a],0xffffffbe
  40543b:	xor    al,bl
  40543d:	or     DWORD PTR [eax-0x1ee155c8],esp
  405443:	sbb    al,0x9e
  405445:	stos   DWORD PTR es:[edi],eax
  405446:	bound  esp,QWORD PTR [edi]
  405448:	xchg   ecx,eax
  405449:	mov    ds:0xc6a55a10,al
  40544e:	stos   DWORD PTR es:[edi],eax
  40544f:	iret   
  405450:	idiv   ecx
  405452:	and    al,0xca
  405454:	and    dh,0xfc
  405457:	and    DWORD PTR [ecx-0x4e],esp
  40545a:	les    ecx,FWORD PTR [ebp+0x21072f88]
  405460:	iret   
  405461:	jne    0x405478
  405463:	jbe    0x4054db
  405465:	icebp  
  405466:	sbb    esp,DWORD PTR [eax]
  405468:	and    al,0x31
  40546a:	out    0x9,eax
  40546c:	xchg   edx,eax
  40546d:	mov    ah,0x5b
  40546f:	cmp    BYTE PTR [esi+ebp*4-0x32],0x3f
  405474:	fst    QWORD PTR [ebx+eax*8]
  405477:	jae    0x4054b8
  405479:	enter  0x10c2,0x3d
  40547d:	mov    bh,BYTE PTR [edx-0x39]
  405480:	in     eax,dx
  405481:	push   esi
  405482:	adc    ecx,DWORD PTR [edi+0xe]
  405485:	sub    al,0x38
  405487:	rcl    DWORD PTR [ecx+0x5b],cl
  40548a:	or     eax,0xa9aaf0b2
  40548f:	adc    eax,0x8a606b21
  405494:	push   esi
  405495:	mov    edi,0xc8635cf3
  40549a:	push   es
  40549b:	div    eax
  40549d:	out    0xdc,al
  40549f:	sbb    al,0x32
  4054a1:	ror    bh,0x24
  4054a4:	repnz xor BYTE PTR [ecx],bl
  4054a7:	in     al,0xc2
  4054a9:	aad    0x12
  4054ab:	inc    ecx
  4054ac:	dec    eax
  4054ad:	push   ebx
  4054ae:	imul   ebx,DWORD PTR [esi-0x49],0x4b64f76f
  4054b5:	inc    ebx
  4054b6:	sbb    cl,BYTE PTR [edx]
  4054b8:	es inc ebx
  4054ba:	jp     0x40543d
  4054bc:	retf   0x79e5
  4054bf:	mov    WORD PTR [ebx-0xdb06680],?
  4054c5:	pushf  
  4054c6:	sub    eax,0x9258b87d
  4054cb:	and    DWORD PTR ds:0xddc1de2f,eax
  4054d1:	jp     0x405501
  4054d3:	dec    edi
  4054d4:	rcl    BYTE PTR [ecx+edx*4-0x37],0x37
  4054d9:	pop    DWORD PTR [edx+0x846447e]
  4054df:	mov    eax,0x37d1f961
  4054e4:	(bad)  
  4054e5:	xchg   ebx,eax
  4054e6:	out    dx,al
  4054e7:	sbb    DWORD PTR [edx-0x1e],ebx
  4054ea:	or     al,BYTE PTR [edi]
  4054ec:	mov    ah,bh
  4054ee:	xchg   edx,eax
  4054ef:	mov    eax,ds:0x5940dffe
  4054f4:	in     eax,dx
  4054f5:	out    0xd3,eax
  4054f7:	sub    DWORD PTR [ebp+0xe],edx
  4054fa:	leave  
  4054fb:	imul   esi,DWORD PTR [eax+edx*4],0x59c041ab
  405502:	adc    DWORD PTR [ecx],0xf
  405505:	loope  0x405487
  405507:	bound  ecx,QWORD PTR [eax+0x70]
  40550a:	nop
  40550b:	cmp    DWORD PTR [ebx+0x43864ab9],ecx
  405511:	shr    DWORD PTR [esi+ebx*2+0x32],cl
  405515:	jmp    0x15413114
  40551a:	push   ebx
  40551b:	shr    BYTE PTR [eax],1
  40551d:	add    ebx,esp
  40551f:	sub    ebp,DWORD PTR [eax+0x16]
  405522:	stc    
  405523:	mov    ebp,0x2bdc45b1
  405528:	(bad)  
  405529:	pop    esi
  40552a:	push   es
  40552b:	daa    
  40552c:	fist   DWORD PTR [edi+eax*1-0x600ddfbb]
  405533:	xchg   esi,eax
  405534:	fcomp  DWORD PTR [esi]
  405536:	pop    eax
  405537:	mov    ds:0x6a3f367e,al
  40553c:	cmp    eax,0xbacd7aab
  405541:	in     al,dx
  405542:	out    dx,eax
  405543:	push   0xffffffbd
  405545:	(bad)  
  405546:	mov    cl,0x3c
  405548:	xchg   esp,eax
  405549:	mov    esp,DWORD PTR [ecx]
  40554b:	push   ebp
  40554c:	aam    0x68
  40554e:	cli    
  40554f:	mov    ecx,eax
  405551:	pop    ebp
  405552:	sbb    dl,BYTE PTR [ebx]
  405554:	pop    edx
  405555:	adc    ah,BYTE PTR ds:0x7f18a62d
  40555b:	hlt    
  40555c:	out    dx,al
  40555d:	xor    eax,0xc99d6e8e
  405562:	retf   0x2cb9
  405565:	(bad)  
  405566:	xchg   esi,eax
  405567:	(bad)  
  405569:	arpl   WORD PTR [eax-0x7fff9f06],bx
  40556f:	(bad)  
  405570:	cmp    DWORD PTR [edi],ecx
  405572:	je     0x40550a
  405574:	or     eax,0x6343f68b
  405579:	mov    eax,ds:0xdc6c34cc
  40557e:	jle    0x40554a
  405580:	fcom   QWORD PTR [ebx+0x7f]
  405583:	loopne 0x405515
  405585:	jns    0x4055a8
  405587:	inc    edi
  405588:	mov    al,0x9
  40558a:	cli    
  40558b:	add    BYTE PTR [ebx+0x42],bh
  40558e:	es ins BYTE PTR es:[edi],dx
  405590:	dec    edx
  405591:	mov    ds:0x2a6a6e84,eax
  405596:	sbb    DWORD PTR [eax+edi*1-0x4b],ecx
  40559a:	in     al,0x74
  40559c:	sbb    BYTE PTR [edx],ah
  40559e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40559f:	lea    edi,[edi]
  4055a1:	sbb    al,0x1c
  4055a3:	cli    
  4055a4:	addr16 (bad) 
  4055a6:	(bad)  
  4055a7:	sti    
  4055a8:	ret    0xc248
  4055ab:	xchg   edi,eax
  4055ac:	mov    al,BYTE PTR [edi]
  4055ae:	xor    BYTE PTR [edx],0x64
  4055b1:	jnp    0x405617
  4055b3:	faddp  st(3),st
  4055b5:	sahf   
  4055b6:	iret   
  4055b7:	xor    al,0xad
  4055b9:	cwde   
  4055ba:	sub    eax,0xdefccdd8
  4055bf:	enter  0x3cf1,0x25
  4055c3:	test   esi,eax
  4055c5:	pusha  
  4055c6:	in     eax,dx
  4055c7:	sbb    eax,0x43469d6a
  4055cc:	xor    edi,DWORD PTR [ebp-0x5d5defe6]
  4055d2:	fldcw  WORD PTR [ebp+0x6ed42bd8]
  4055d8:	mov    BYTE PTR [esp+ebx*1],dh
  4055db:	pop    ebp
  4055dc:	retf   
  4055dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055de:	or     eax,0xdec676df
  4055e3:	adc    eax,0x9e7e105e
  4055e8:	cwde   
  4055e9:	scas   al,BYTE PTR es:[edi]
  4055ea:	ss inc esi
  4055ec:	mov    esi,0x7fb29b25
  4055f1:	dec    ebp
  4055f2:	mov    dl,0xb5
  4055f4:	ja     0x40562c
  4055f6:	loopne 0x4055ea
  4055f8:	push   edx
  4055f9:	leave  
  4055fa:	inc    eax
  4055fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fc:	dec    eax
  4055fd:	loop   0x405622
  4055ff:	fadd   QWORD PTR [edx-0x4f]
  405602:	dec    esi
  405603:	jp     0x4055fc
  405605:	fiadd  DWORD PTR [eax+0x28]
  405608:	sbb    bl,BYTE PTR [eax+0x4b]
  40560b:	inc    edx
  40560c:	lods   eax,DWORD PTR ds:[esi]
  40560d:	add    BYTE PTR [ebx+0x1a120643],bh
  405613:	mul    DWORD PTR ds:0xdc14d971
  405619:	call   0x553aa86b
  40561e:	inc    esi
  40561f:	mov    al,BYTE PTR [eax-0x52345dfd]
  405625:	ror    DWORD PTR [ecx+0x14],cl
  405628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405629:	adc    al,0xf6
  40562b:	jne    0x40569e
  40562d:	mov    bh,0xfa
  40562f:	inc    edi
  405630:	xchg   edx,eax
  405631:	mov    ebx,0x57b10de0
  405636:	dec    esi
  405637:	jnp    0x40562b
  405639:	mov    eax,DWORD PTR [edi-0x497ad962]
  40563f:	stc    
  405640:	fnstenv [esp+ebp*4+0x4e]
  405644:	adc    BYTE PTR [esi+0x6b0c9a6d],bl
  40564a:	pop    es
  40564b:	pop    edi
  40564c:	push   edx
  40564d:	mov    ebp,0x81827
  405652:	mov    bh,dh
  405654:	jns    0x40563d
  405656:	jp     0x4056c0
  405658:	leave  
  405659:	xchg   esi,eax
  40565a:	jle    0x405601
  40565c:	pop    ss
  40565d:	(bad)  
  40565e:	mov    edi,0x3d72161b
  405663:	or     al,0x55
  405665:	jbe    0x40569b
  405667:	and    edx,DWORD PTR [ecx+0x596382ca]
  40566d:	fs xchg edx,eax
  40566f:	clc    
  405670:	push   0x34
  405672:	xchg   edi,eax
  405673:	xor    al,0x6d
  405675:	sbb    eax,0xb01fa6dc
  40567a:	hlt    
  40567b:	packsswb mm1,QWORD PTR [edx]
  40567e:	shl    DWORD PTR [ecx-0x29],0x50
  405682:	xchg   BYTE PTR [ebx-0x43],al
  405685:	or     ch,dl
  405687:	sbb    eax,0x9df612ac
  40568c:	sbb    dh,BYTE PTR [esi]
  40568e:	add    eax,0xa9fbd54
  405693:	fist   DWORD PTR [ecx-0x7f]
  405696:	and    DWORD PTR [esi],ebp
  405698:	jmp    0xb3393139
  40569d:	inc    ebx
  40569e:	mov    WORD PTR [eax],?
  4056a0:	je     0x405667
  4056a2:	xchg   edx,eax
  4056a3:	ret    
  4056a4:	imul   ebx,DWORD PTR ds:0x6fab5f04,0x9ae40d4e
  4056ae:	and    al,0xd9
  4056b0:	cmp    DWORD PTR [ebp-0x7],eax
  4056b3:	imul   ebp,DWORD PTR [edi-0x61],0x28af833f
  4056ba:	std    
  4056bb:	pop    ebx
  4056bc:	cld    
  4056bd:	jns    0x40570e
  4056bf:	ds into 
  4056c1:	into   
  4056c2:	or     dh,ah
  4056c4:	loop   0x4056c6
  4056c6:	ja     0x4056c8
  4056c8:	or     esp,ebx
  4056ca:	(bad)  
  4056cb:	cmp    BYTE PTR [esi+ecx*2+0x710ce6c9],bh
  4056d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d3:	mov    edx,0xaa91c6c7
  4056d8:	sub    eax,DWORD PTR [ecx+0x4e]
  4056db:	test   BYTE PTR [ebp+0x74],0x9a
  4056df:	mov    al,ds:0x83cf6855
  4056e4:	pop    edi
  4056e5:	push   ss
  4056e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e7:	sub    dh,BYTE PTR [ebx-0x4847df37]
  4056ed:	xor    DWORD PTR [ebp-0x4a299399],ebp
  4056f3:	ins    BYTE PTR es:[edi],dx
  4056f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f5:	scas   al,BYTE PTR es:[edi]
  4056f6:	cmp    bl,BYTE PTR [ebp+0x5e]
  4056f9:	push   cs
  4056fa:	fsubrp st(5),st
  4056fc:	mov    edi,0x1e78cea7
  405701:	clc    
  405702:	bound  ebp,QWORD PTR [esi+0x16]
  405705:	push   ss
  405706:	sub    ah,BYTE PTR [esp+ebx*1]
  405709:	cmp    ebx,DWORD PTR [ecx-0x30]
  40570c:	mov    ecx,0x1c388204
  405711:	add    al,BYTE PTR [eax+ebx*8]
  405714:	or     al,0x83
  405716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405717:	imul   BYTE PTR [edx]
  405719:	xchg   esp,eax
  40571a:	loope  0x4056ed
  40571c:	mov    esi,0x233b1c9d
  405721:	(bad)  
  405723:	adc    al,0xc8
  405725:	adc    al,0x6
  405727:	jge    0x405757
  405729:	mov    ebp,0xf757187e
  40572e:	ret    0x595f
  405731:	and    esp,DWORD PTR [eax+0x1d]
  405734:	daa    
  405735:	pop    ecx
  405736:	(bad)  
  405737:	(bad)  
  405738:	popa   
  405739:	push   ss
  40573a:	inc    eax
  40573b:	xchg   ebp,eax
  40573c:	popa   
  40573d:	scas   eax,DWORD PTR es:[edi]
  40573e:	sub    eax,0xe95e755b
  405743:	setge  BYTE PTR [esi+0x7baa73f1]
  40574a:	sub    eax,0x1c0c5b71
  40574f:	mov    ds,WORD PTR [eax-0x16]
  405752:	jne    0x405701
  405754:	jl     0x4056fd
  405756:	dec    edx
  405757:	popa   
  405758:	mov    eax,ds:0x17c66832
  40575d:	gs in  eax,0xae
  405760:	ret    0xeeca
  405763:	push   es
  405764:	cs cwde 
  405766:	push   esp
  405767:	jns    0x4057a1
  405769:	add    edx,0x51
  40576c:	or     al,0x72
  40576e:	ins    BYTE PTR es:[edi],dx
  40576f:	lds    ecx,FWORD PTR [ebx-0x1f1121e2]
  405775:	jmp    FWORD PTR [edi-0x70]
  405778:	scas   eax,DWORD PTR es:[edi]
  405779:	jp     0x4057a0
  40577b:	mov    edx,0x195c6a18
  405780:	and    eax,DWORD PTR [ecx-0x1a]
  405783:	or     BYTE PTR [edi],0x12
  405786:	jecxz  0x405785
  405788:	add    dh,al
  40578a:	and    DWORD PTR [esi+eax*2+0x45],edi
  40578e:	xor    al,0xf9
  405790:	xor    edi,DWORD PTR [ebp+0x43]
  405793:	cmp    al,0x47
  405795:	or     al,al
  405797:	add    edx,ecx
  405799:	out    dx,eax
  40579a:	jbe    0x4057f3
  40579c:	cli    
  40579d:	pop    esp
  40579e:	and    eax,DWORD PTR ds:0x57c04066
  4057a4:	add    DWORD PTR [esi-0x75],esp
  4057a7:	js     0x4057ea
  4057a9:	popa   
  4057aa:	lea    ebx,[edi]
  4057ac:	inc    edi
  4057ad:	xchg   esi,eax
  4057ae:	xlat   BYTE PTR ds:[ebx]
  4057af:	cmp    BYTE PTR ds:0x90342c01,bh
  4057b5:	dec    edx
  4057b6:	cld    
  4057b7:	loopne 0x4057ed
  4057b9:	jnp    0x405766
  4057bb:	or     bh,BYTE PTR [esi+0x66]
  4057be:	imul   eax,ecx,0x4
  4057c1:	mov    bl,0xfe
  4057c3:	xor    al,0x68
  4057c5:	dec    edi
  4057c6:	and    dl,bl
  4057c8:	daa    
  4057c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ca:	out    dx,al
  4057cb:	adc    DWORD PTR [ecx+ecx*4+0x7d],edx
  4057cf:	pop    ss
  4057d0:	and    edx,DWORD PTR [eax+0x612f23ba]
  4057d6:	sbb    ebx,DWORD PTR [ecx+0xa]
  4057d9:	mov    bl,0x16
  4057db:	sbb    eax,0x3fa575b
  4057e0:	and    ebx,eax
  4057e2:	bound  edi,QWORD PTR [esi-0x6cba2800]
  4057e8:	das    
  4057e9:	pop    eax
  4057ea:	jne    0x4057f0
  4057ec:	mov    bh,0x31
  4057ee:	sub    al,0xf7
  4057f0:	enter  0xefa0,0x8b
  4057f4:	ret    0x60d6
  4057f7:	mov    ecx,esi
  4057f9:	xor    ebx,DWORD PTR [edi+0x24]
  4057fc:	dec    ebp
  4057fd:	popa   
  4057fe:	adc    al,bh
  405800:	pmulhuw mm1,QWORD PTR [edx]
  405803:	xchg   edi,eax
  405804:	add    al,0x88
  405806:	mov    esi,DWORD PTR [edi+0x68]
  405809:	stc    
  40580a:	xchg   edi,eax
  40580b:	aaa    
  40580c:	sbb    al,bl
  40580e:	and    al,0x9a
  405810:	ins    DWORD PTR es:[edi],dx
  405811:	inc    esi
  405812:	rcl    DWORD PTR [esi+0x10],0xd2
  405816:	xor    BYTE PTR [ebp+esi*4-0x6aee4787],cl
  40581d:	and    BYTE PTR [ebp-0x43b10149],bl
  405823:	jmp    0x405810
  405825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405826:	rcr    BYTE PTR [edx+edx*2],cl
  405829:	out    dx,eax
  40582a:	pushf  
  40582b:	jmp    0xceb3:0x91d015c2
  405832:	or     BYTE PTR [esi],ah
  405834:	add    eax,0x28d019f3
  405839:	(bad)  
  40583a:	out    0xc9,eax
  40583c:	lahf   
  40583d:	dec    esp
  40583e:	fs pop esp
  405840:	push   edx
  405841:	or     edi,ebp
  405843:	sbb    edi,DWORD PTR [eax]
  405845:	push   ebp
  405846:	xor    al,0xb
  405848:	in     eax,0xef
  40584a:	ds inc ebx
  40584c:	mov    al,BYTE PTR [ebx]
  40584e:	sbb    ah,BYTE PTR ds:0xfa586c47
  405854:	shl    BYTE PTR [esi],1
  405856:	mov    ecx,0xf89ac972
  40585b:	cmp    BYTE PTR [ebx+edx*2],ah
  40585e:	in     eax,dx
  40585f:	xchg   esp,eax
  405860:	test   eax,0xde36302b
  405865:	inc    ebx
  405866:	sahf   
  405867:	fstp   QWORD PTR [eax-0x3a]
  40586a:	pop    ebp
  40586b:	dec    edi
  40586c:	popf   
  40586d:	cdq    
  40586e:	or     eax,0x9c093903
  405873:	xor    BYTE PTR [ebx+0x3d4a1b05],bl
  405879:	data16 jecxz 0x4058a6
  40587c:	inc    esp
  40587d:	sub    eax,0xb9e80d17
  405882:	add    eax,0x5e6f7246
  405887:	dec    ecx
  405888:	sbb    ah,BYTE PTR ds:0x983ab28e
  40588e:	mov    eax,DWORD PTR [esi+0x6ff604cb]
  405894:	fadd   st(7),st
  405896:	mov    edx,0x14be23f2
  40589b:	(bad)  
  40589c:	or     DWORD PTR [ebp-0x35],eax
  40589f:	fs pop ebx
  4058a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a2:	mov    es,WORD PTR [ebp+0x6907a897]
  4058a8:	mov    ds:0xb04b52d7,eax
  4058ad:	pop    esi
  4058ae:	pop    es
  4058af:	mov    DWORD PTR [eax+0x6ef69bcb],ebp
  4058b5:	div    edx
  4058b7:	call   0x35c07307
  4058bc:	xor    al,0xd4
  4058be:	jl     0x405862
  4058c0:	jecxz  0x4058e6
  4058c2:	adc    dl,ch
  4058c4:	fcom   QWORD PTR [edi]
  4058c6:	stos   DWORD PTR es:[edi],eax
  4058c7:	and    eax,0x43f2324a
  4058cc:	jmp    0x862f39e1
  4058d1:	xor    eax,0x991fd3b9
  4058d6:	dec    esp
  4058d7:	out    0xff,al
  4058d9:	pop    eax
  4058da:	and    al,0x98
  4058dc:	mov    al,ds:0x6ae0e537
  4058e1:	jmp    0xe091:0x9b43608f
  4058e8:	mov    BYTE PTR [eax+ebx*8+0x17e494e9],bh
  4058ef:	dec    esi
  4058f0:	fbstp  TBYTE PTR [esi+0x4ca92243]
  4058f6:	add    esi,ebp
  4058f8:	push   0xffffff93
  4058fa:	mov    BYTE PTR [edx+0x3d2e0341],dl
  405900:	fist   DWORD PTR [edx]
  405902:	in     eax,0xe4
  405904:	inc    edx
  405905:	cdq    
  405906:	adc    DWORD PTR [ebx-0x46],ebp
  405909:	jo     0x4058c3
  40590b:	arpl   WORD PTR [edx-0xc9b94f3],bx
  405911:	xchg   edx,eax
  405912:	jne    0x405957
  405914:	mov    edi,0x472d7ec2
  405919:	(bad)  
  40591a:	(bad)  
  40591b:	sar    DWORD PTR [edx],cl
  40591d:	xor    BYTE PTR [eax+ebp*8+0x6e],bh
  405921:	cwde   
  405922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405923:	(bad)  
  405924:	out    dx,eax
  405925:	fcmovnbe st,st(0)
  405927:	pop    edi
  405928:	sub    al,0x1c
  40592a:	out    dx,eax
  40592b:	push   edx
  40592c:	sub    al,0xe5
  40592e:	dec    ecx
  40592f:	out    dx,eax
  405930:	xchg   DWORD PTR [edx+0x54],edx
  405933:	pop    edi
  405934:	or     esi,0x1a
  405937:	mov    ah,0xaf
  405939:	sub    edx,DWORD PTR [ebp+0x6d0a16de]
  40593f:	loope  0x405905
  405941:	cmp    al,0x8d
  405943:	pop    edx
  405944:	cmp    al,0xab
  405946:	jle    0x4058d9
  405948:	lods   eax,DWORD PTR ds:[esi]
  405949:	xchg   esi,eax
  40594a:	sbb    bh,BYTE PTR [esi]
  40594c:	and    al,0xb7
  40594e:	int    0x24
  405950:	sub    eax,0x9396587d
  405955:	jecxz  0x4058f9
  405957:	inc    esp
  405958:	fist   DWORD PTR [eax]
  40595a:	pop    es
  40595b:	adc    al,0xa7
  40595d:	adc    BYTE PTR ds:0xca179997,bh
  405963:	mov    edx,0x97c367f1
  405968:	outs   dx,DWORD PTR ds:[esi]
  405969:	xchg   BYTE PTR [esi-0x1e],bh
  40596c:	out    dx,al
  40596d:	push   es
  40596e:	xor    eax,0x22bc5f85
  405973:	cmp    BYTE PTR [ebp-0x5c78dc06],cl
  405979:	lock aas 
  40597b:	pop    ebp
  40597c:	ret    0x3f57
  40597f:	scas   eax,DWORD PTR es:[edi]
  405980:	add    al,0xf1
  405982:	dec    edi
  405983:	test   eax,0xa6e3d761
  405988:	add    BYTE PTR [ecx-0x672b9cb6],dh
  40598e:	and    BYTE PTR [ebx],0x49
  405991:	push   cs
  405992:	ins    BYTE PTR es:[edi],dx
  405993:	inc    edi
  405994:	pop    esp
  405995:	jne    0x4059dc
  405997:	retfw  0xba55
  40599b:	gs int3 
  40599d:	cs jae 0x405954
  4059a0:	adc    DWORD PTR [edx-0x46],0x1ff2dbf3
  4059a7:	test   BYTE PTR [ecx-0x5cfbb4f1],ch
  4059ad:	xor    al,0xa9
  4059af:	dec    eax
  4059b0:	mov    eax,0x5268d4c9
  4059b5:	jne    0x4059a1
  4059b7:	clc    
  4059b8:	sbb    eax,0x7675ded3
  4059bd:	mov    dl,0xe6
  4059bf:	sbb    esi,DWORD PTR [esi+0x6ba861b4]
  4059c5:	mov    dl,0xf2
  4059c7:	sahf   
  4059c8:	pop    eax
  4059c9:	aam    0x6b
  4059cb:	jae    0x4059be
  4059cd:	out    dx,al
  4059ce:	xor    al,0x34
  4059d0:	push   edi
  4059d1:	dec    esi
  4059d2:	clc    
  4059d3:	cmp    al,0x22
  4059d5:	in     al,0x95
  4059d7:	retf   
  4059d8:	pop    ebx
  4059d9:	into   
  4059da:	xchg   ecx,eax
  4059db:	call   0x585d74dd
  4059e0:	cmp    dl,BYTE PTR [eax]
  4059e2:	cmp    al,0xf9
  4059e4:	sbb    esp,ebp
  4059e6:	mov    eax,ds:0x348e29b8
  4059eb:	ret    0x3875
  4059ee:	xlat   BYTE PTR ds:[ebx]
  4059ef:	sub    BYTE PTR [eax],al
  4059f1:	or     DWORD PTR [edi-0x6c],edx
  4059f4:	call   0x608a:0x7a4b350f
  4059fb:	mov    al,0x5f
  4059fd:	sub    BYTE PTR [ecx+0x3],0x8c
  405a01:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a03:	popf   
  405a04:	push   ds
  405a05:	cmp    al,0x4f
  405a07:	fs pop es
  405a09:	pop    ss
  405a0a:	enter  0x522a,0x0
  405a0e:	sbb    al,0x22
  405a10:	xchg   esp,eax
  405a11:	rcl    BYTE PTR [edi],0xaf
  405a14:	mov    cl,0x88
  405a16:	or     al,0xee
  405a18:	outs   dx,BYTE PTR ds:[esi]
  405a19:	xchg   ebx,eax
  405a1a:	fcmovu st,st(2)
  405a1c:	mov    WORD PTR [edi+ebx*2-0x16],ss
  405a20:	and    bh,dl
  405a22:	inc    esi
  405a23:	inc    BYTE PTR [ecx-0x19]
  405a26:	fsubr  DWORD PTR [edi+0x2]
  405a29:	dec    ebp
  405a2a:	dec    eax
  405a2b:	test   DWORD PTR [ebx+edx*2+0x3a],edx
  405a2f:	adc    eax,DWORD PTR [esi]
  405a31:	pop    ebp
  405a32:	jmp    0x95f738e6
  405a37:	mov    ebp,0x8bc3815e
  405a3c:	shl    DWORD PTR [edi+0x43],0x89
  405a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a41:	pop    ss
  405a42:	mov    ds:0x54a0a6a3,eax
  405a47:	scas   eax,DWORD PTR es:[edi]
  405a48:	data16 stc 
  405a4a:	xor    ebx,ecx
  405a4c:	je     0x4059d9
  405a4e:	loope  0x405acc
  405a50:	mov    ch,0xc2
  405a52:	pusha  
  405a53:	cmp    al,0x5f
  405a55:	mov    BYTE PTR [eax],dh
  405a57:	xchg   edx,eax
  405a58:	call   0x359b:0x30ca0943
  405a5f:	imul   ebp,DWORD PTR [ecx-0x65],0xf0835fb
  405a66:	dec    ebx
  405a67:	xchg   edx,eax
  405a68:	mov    DWORD PTR [edx],0xca7f1fb4
  405a6e:	imul   esp,DWORD PTR [edi+eiz*4-0x61],0xfd594808
  405a76:	enter  0xcad7,0x9d
  405a7a:	dec    ebx
  405a7b:	mov    ecx,0x59912df7
  405a80:	jecxz  0x405a62
  405a82:	fisttp DWORD PTR [ebp+0x78]
  405a85:	sbb    ebx,DWORD PTR [esi]
  405a87:	in     al,0x77
  405a89:	xor    al,0x73
  405a8b:	je     0x405ae9
  405a8d:	cmp    ebx,ebp
  405a8f:	stos   BYTE PTR es:[edi],al
  405a90:	loope  0x405a8e
  405a92:	test   DWORD PTR [edi+ecx*8+0x1db2cbbc],edx
  405a99:	xchg   ebx,eax
  405a9a:	push   cs
  405a9b:	jno    0x405ad5
  405a9d:	sub    eax,0xfee92396
  405aa2:	test   DWORD PTR [eax],ebp
  405aa4:	xchg   edx,eax
  405aa5:	push   ds
  405aa6:	sbb    ebp,DWORD PTR [ebp+0x3f846d07]
  405aac:	fldpi  
  405aae:	xchg   esp,eax
  405aaf:	push   edx
  405ab0:	addr16 leave 
  405ab2:	xor    ah,ah
  405ab4:	jbe    0x405aa9
  405ab6:	ss pop ebx
  405ab8:	mov    al,0x86
  405aba:	jno    0x405a91
  405abc:	das    
  405abd:	sbb    esp,DWORD PTR [ecx]
  405abf:	inc    esi
  405ac0:	add    al,0x89
  405ac2:	jge    0x405adf
  405ac4:	jg     0x405a94
  405ac6:	hlt    
  405ac7:	jnp    0x405ae7
  405ac9:	or     eax,0x85291109
  405ace:	std    
  405acf:	test   dl,bh
  405ad1:	mov    ?,WORD PTR [ecx+esi*8]
  405ad4:	mov    cs,WORD PTR ds:0x1aaba384
  405ada:	inc    ebx
  405adb:	test   DWORD PTR [edx+ebp*1+0x3],0xf802f9b8
  405ae3:	adc    ch,dl
  405ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae6:	inc    esi
  405ae7:	cwde   
  405ae8:	std    
  405ae9:	xor    ebp,DWORD PTR [eax]
  405aeb:	icebp  
  405aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aed:	push   0x3db3a9bc
  405af2:	int    0xe2
  405af4:	mov    esi,ebp
  405af6:	xlat   BYTE PTR ds:[ebx]
  405af7:	pusha  
  405af8:	mov    edx,esi
  405afa:	retf   
  405afb:	popa   
  405afc:	mov    dl,0x26
  405afe:	pushf  
  405aff:	icebp  
  405b00:	push   esi
  405b01:	in     eax,dx
  405b02:	arpl   WORD PTR [esi+eax*4+0x7c],di
  405b06:	dec    eax
  405b07:	adc    ecx,DWORD PTR [edx-0x7565df55]
  405b0d:	ret    
  405b0e:	out    dx,eax
  405b0f:	add    bh,BYTE PTR [edx+0x5011280b]
  405b15:	jae    0x405af8
  405b17:	fistp  QWORD PTR [edx+ebx*4-0x3528f3d2]
  405b1e:	hlt    
  405b1f:	gs loopne 0x405b21
  405b22:	push   cs
  405b23:	shr    DWORD PTR [esi+0x22],1
  405b26:	mov    al,0x9f
  405b28:	pop    ds
  405b29:	lods   eax,DWORD PTR ds:[esi]
  405b2a:	jmp    0x31f8:0xef6ba616
  405b31:	fiadd  DWORD PTR [edi]
  405b33:	lods   eax,DWORD PTR ds:[esi]
  405b34:	sub    eax,0x23b74caf
  405b39:	ins    DWORD PTR es:[edi],dx
  405b3a:	mov    WORD PTR [ecx-0x2ebcb81a],ds
  405b40:	xchg   ebx,eax
  405b41:	scas   eax,DWORD PTR es:[edi]
  405b42:	mov    ebp,0x3ca94c0b
  405b47:	test   DWORD PTR [ecx-0x193c2db4],ebp
  405b4d:	inc    ebp
  405b4e:	jp     0x405ba0
  405b50:	outs   dx,BYTE PTR ds:[esi]
  405b51:	lods   al,BYTE PTR ds:[esi]
  405b52:	outs   dx,BYTE PTR ds:[esi]
  405b53:	dec    edi
  405b54:	iret   
  405b55:	out    0xb7,eax
  405b57:	aad    0xb9
  405b59:	adc    al,0x8b
  405b5b:	fs int3 
  405b5d:	ins    BYTE PTR es:[edi],dx
  405b5e:	sub    DWORD PTR [edi+0x74],edx
  405b61:	pop    es
  405b62:	xchg   BYTE PTR [eax+0x66b1010b],ch
  405b68:	xchg   ecx,eax
  405b69:	outs   dx,BYTE PTR ds:[esi]
  405b6a:	out    0xd2,eax
  405b6c:	leave  
  405b6d:	mov    ah,0x14
  405b6f:	jp     0x405b1d
  405b71:	mov    cl,0x99
  405b73:	outs   dx,BYTE PTR ds:[esi]
  405b74:	mov    al,ds:0x4fc194d6
  405b79:	mov    ch,0x16
  405b7b:	rcl    DWORD PTR [ebx+eax*8-0x58bb8075],1
  405b82:	mov    ch,0x80
  405b84:	mov    esi,0x56ebdc2b
  405b89:	ss jae 0x405b24
  405b8c:	sbb    ah,BYTE PTR [edi-0x4b7dcd06]
  405b92:	mov    DWORD PTR [edx-0x3c],edx
  405b95:	xor    ebx,DWORD PTR [edi-0x4975d0e7]
  405b9b:	dec    eax
  405b9c:	mov    eax,0x55504573
  405ba1:	sub    esp,DWORD PTR [edx+ebp*2+0x33]
  405ba5:	mov    esi,0x2dc89237
  405baa:	outs   dx,BYTE PTR ds:[esi]
  405bab:	mov    edx,eax
  405bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bae:	pop    esp
  405baf:	or     ebp,eax
  405bb1:	test   BYTE PTR [edi],cl
  405bb3:	sbb    bh,BYTE PTR [ecx+0x39]
  405bb6:	mov    esp,0x3c9e3315
  405bbb:	adc    DWORD PTR [edi+ecx*8-0x31],0x77
  405bc0:	lock cld 
  405bc2:	(bad)  
  405bc3:	out    0xb7,eax
  405bc5:	xchg   DWORD PTR [eax+0x11bdc3df],edx
  405bcb:	pop    edi
  405bcc:	shl    ebx,0xea
  405bcf:	in     al,dx
  405bd0:	add    esp,esp
  405bd2:	dec    ebx
  405bd3:	data16 loop 0x405bbc
  405bd6:	mov    edi,0x1c5caac2
  405bdb:	mov    eax,ds:0x5e798cb0
  405be0:	sbb    eax,0x49fe9b4e
  405be5:	mov    ebx,0xf857436f
  405bea:	daa    
  405beb:	(bad)  
  405bec:	mov    ds:0xcecca23e,eax
  405bf1:	adc    DWORD PTR [edx],edx
  405bf3:	call   0xe1658142
  405bf8:	xor    ebp,DWORD PTR [edx-0x65]
  405bfb:	fs and ebx,edi
  405bfe:	fadd   st(5),st
  405c00:	add    dh,al
  405c02:	das    
  405c03:	ja     0x405c67
  405c05:	ror    BYTE PTR [edi+0x6234dea1],cl
  405c0b:	aaa    
  405c0c:	shr    edx,cl
  405c0e:	and    al,0xe1
  405c10:	repnz sar BYTE PTR [ecx+0x1cea3bcd],0x3a
  405c18:	xor    DWORD PTR [esi-0x76d29580],edx
  405c1e:	cwde   
  405c1f:	pop    ecx
  405c20:	repnz nop
  405c22:	(bad)  
  405c23:	shr    BYTE PTR [esp+edi*8-0x617a8ab],1
  405c2a:	xlat   BYTE PTR ds:[ebx]
  405c2b:	mov    eax,ds:0xf10245bf
  405c30:	ja     0x405c62
  405c32:	and    ah,dh
  405c34:	stc    
  405c35:	mov    ah,0xfe
  405c37:	xor    dl,al
  405c39:	nop
  405c3a:	push   esi
  405c3b:	lods   eax,DWORD PTR ds:[esi]
  405c3c:	ins    DWORD PTR es:[edi],dx
  405c3d:	test   al,0xe6
  405c3f:	fmul   st,st(6)
  405c41:	daa    
  405c42:	arpl   WORD PTR [eax-0x25],dx
  405c45:	inc    ecx
  405c46:	inc    esi
  405c47:	and    DWORD PTR [ebp+ebx*8-0xee13970],edi
  405c4e:	cld    
  405c4f:	jge    0x405cc4
  405c51:	neg    DWORD PTR [ebp*8-0x391ae1af]
  405c58:	out    dx,eax
  405c59:	sbb    DWORD PTR [edi+0x3de66766],ebx
  405c5f:	xchg   esi,eax
  405c60:	out    0x2c,eax
  405c62:	dec    eax
  405c63:	and    BYTE PTR [ebx-0x15],bl
  405c66:	dec    esi
  405c67:	mov    bl,0xd3
  405c69:	(bad)  [eax]
  405c6b:	into   
  405c6c:	xor    ecx,ecx
  405c6e:	jl     0x405c22
  405c70:	idiv   DWORD PTR [ecx+0x4ba7004d]
  405c76:	jge    0x405c5d
  405c78:	jmp    FWORD PTR [esi+0x66c158fb]
  405c7e:	pop    es
  405c7f:	dec    esi
  405c80:	mov    esi,0xb239a33b
  405c85:	fisub  DWORD PTR ds:0x804720c5
  405c8b:	mov    al,ds:0xdc18720f
  405c90:	les    edi,FWORD PTR [edx-0x23]
  405c93:	or     al,bl
  405c95:	sub    BYTE PTR [ebp-0x3b],bh
  405c98:	clc    
  405c99:	into   
  405c9a:	mov    cl,0xef
  405c9c:	inc    eax
  405c9d:	hlt    
  405c9e:	je     0x405cf3
  405ca0:	in     eax,0xa2
  405ca2:	mov    ds:0xd0950c3f,al
  405ca7:	push   ss
  405ca8:	adc    al,0xa
  405caa:	stc    
  405cab:	or     BYTE PTR [ebp+0x77d4acb2],0xeb
  405cb2:	call   0x5c6348ba
  405cb7:	push   ds
  405cb8:	cdq    
  405cb9:	xor    BYTE PTR [ebx],bl
  405cbb:	mov    cl,0x90
  405cbd:	addr16 pop edx
  405cbf:	cmp    bh,BYTE PTR ds:0x3f2833b8
  405cc5:	or     bh,dh
  405cc7:	adc    ch,BYTE PTR [edi-0x62]
  405cca:	(bad)  
  405ccb:	out    dx,al
  405ccc:	iret   
  405ccd:	fbstp  TBYTE PTR [ecx+0x42]
  405cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd1:	scas   al,BYTE PTR es:[edi]
  405cd2:	cmp    BYTE PTR [edi+ebx*1-0x6fec623d],0xed
  405cda:	pop    esi
  405cdb:	pop    esi
  405cdc:	jb     0x405d11
  405cde:	mov    ah,ch
  405ce0:	pusha  
  405ce1:	dec    ecx
  405ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce3:	xor    BYTE PTR [eax-0x3b],0x8e
  405ce7:	xchg   esp,eax
  405ce8:	imul   edx,edi,0xffffffc3
  405ceb:	(bad)  
  405cec:	sbb    esi,DWORD PTR [esi+0x2960815]
  405cf2:	adc    ecx,DWORD PTR [ebx]
  405cf4:	mov    DWORD PTR [edi],edi
  405cf6:	cld    
  405cf7:	adc    eax,0x147b5e3
  405cfc:	in     eax,0xd7
  405cfe:	mov    edx,DWORD PTR [ecx]
  405d00:	sti    
  405d01:	jle    0x405d52
  405d03:	retf   
  405d04:	mov    WORD PTR [edi+0x6a1ad5fc],gs
  405d0a:	inc    eax
  405d0b:	dec    esi
  405d0c:	cmp    ch,BYTE PTR [edi]
  405d0e:	mov    bh,0xb2
  405d10:	mov    edx,0x51a5dada
  405d15:	es push esi
  405d17:	inc    ebp
  405d18:	xchg   DWORD PTR [ebx],esi
  405d1a:	shl    DWORD PTR [ecx-0xfeb1885],1
  405d20:	gs mov ebx,0x9ecc63b3
  405d26:	stc    
  405d27:	retf   0x97c3
  405d2a:	idiv   BYTE PTR [edi]
  405d2c:	daa    
  405d2d:	mov    ds:0xf6d8e8aa,eax
  405d32:	or     BYTE PTR [eax],ch
  405d34:	stos   BYTE PTR es:[edi],al
  405d35:	aaa    
  405d36:	push   ebx
  405d37:	add    al,0xcc
  405d39:	shl    ebx,cl
  405d3b:	rol    DWORD PTR [esi+0x5f12aa39],1
  405d41:	mov    ebx,0x13e9df1b
  405d46:	rol    BYTE PTR [ecx-0x6ec55af5],1
  405d4c:	inc    edi
  405d4d:	div    BYTE PTR [edi-0x44939df7]
  405d53:	add    eax,0x2e126753
  405d58:	add    ebx,edi
  405d5a:	push   0xa9bfde90
  405d5f:	cmp    bh,BYTE PTR [ebx+0x74]
  405d62:	in     al,dx
  405d63:	jo     0x405d9e
  405d65:	clc    
  405d66:	push   0x91772109
  405d6b:	xchg   ecx,eax
  405d6c:	shl    DWORD PTR [ebx],cl
  405d6e:	in     al,0xb1
  405d70:	sbb    eax,0xce66e639
  405d75:	jae    0x405dea
  405d77:	popa   
  405d78:	mov    eax,ds:0x32cb1f6c
  405d7d:	fyl2xp1 
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jne    0x405dc0
  405d82:	mov    ebp,0xca7f9985
  405d87:	imul   esi,DWORD PTR [edi+0x5],0xded15d0b
  405d8e:	add    eax,0x1c0d7359
  405d93:	mov    ebp,0xaa5f413
  405d98:	and    DWORD PTR [ecx+0x67],esi
  405d9b:	mov    al,ds:0x60663284
  405da0:	jecxz  0x405d92
  405da2:	and    BYTE PTR [esi-0xe5926d],al
  405da8:	push   eax
  405da9:	cmp    ebx,DWORD PTR [ebx]
  405dab:	fucom  st(5)
  405dad:	xchg   esi,eax
  405dae:	jp     0x405dda
  405db0:	push   ebp
  405db1:	pop    esp
  405db2:	iret   
  405db3:	in     al,dx
  405db4:	mov    ds:0xaf582ecc,al
  405db9:	push   esp
  405dba:	inc    edi
  405dbb:	aaa    
  405dbc:	(bad)  
  405dbd:	loope  0x405deb
  405dbf:	gs repnz clc 
  405dc2:	pop    esp
  405dc3:	add    dl,cl
  405dc5:	sub    eax,0x8fadce
  405dca:	fwait
  405dcb:	arpl   WORD PTR [esi],si
  405dcd:	stos   DWORD PTR es:[edi],eax
  405dce:	aad    0x5c
  405dd0:	xchg   DWORD PTR [ebx],edi
  405dd2:	push   0xa6a7c43d
  405dd7:	mov    cl,0x10
  405dd9:	fild   WORD PTR [ecx+eax*2]
  405ddc:	sti    
  405ddd:	mov    ds:0x9db229e,al
  405de2:	enter  0x197e,0x7e
  405de6:	push   esi
  405de7:	and    eax,0x4addec4d
  405dec:	arpl   WORD PTR [edi+0x40],si
  405def:	add    al,0x2f
  405df1:	scas   eax,DWORD PTR es:[edi]
  405df2:	cmp    edi,edi
  405df4:	dec    esi
  405df5:	sbb    DWORD PTR [ecx],edx
  405df7:	jp     0x405dce
  405df9:	push   ebx
  405dfa:	xor    cl,BYTE PTR [eax+eiz*1+0x651b415f]
  405e01:	fmul   DWORD PTR [eax-0x6d]
  405e04:	mov    es,WORD PTR cs:[edi+0x42b3c341]
  405e0b:	stos   DWORD PTR es:[edi],eax
  405e0c:	push   ecx
  405e0d:	dec    ebp
  405e0e:	inc    eax
  405e0f:	sbb    al,0xe6
  405e11:	add    eax,0xbfc2403b
  405e16:	mov    al,0x72
  405e18:	adc    ecx,DWORD PTR [edi+0x23110236]
  405e1e:	pop    esi
  405e1f:	test   DWORD PTR [eax],ecx
  405e21:	out    0x8,eax
  405e23:	arpl   WORD PTR [esi+ebp*1],bp
  405e26:	out    0x0,eax
  405e28:	push   ds
  405e29:	dec    ebx
  405e2a:	ret    0xbe48
  405e2d:	mov    ebx,0xb47b5dfb
  405e32:	pop    ecx
  405e33:	or     eax,0x5cc8d49e
  405e38:	fmul   QWORD PTR [esi+eiz*1+0x27]
  405e3c:	mov    esp,esp
  405e3e:	mov    ds:0x91470a08,eax
  405e43:	repz inc ebx
  405e45:	fs mov bl,0x45
  405e48:	inc    esp
  405e49:	sub    ebp,ecx
  405e4b:	cmp    edx,DWORD PTR [ebx-0x679f9b8b]
  405e51:	inc    ecx
  405e52:	pop    ebp
  405e53:	inc    eax
  405e54:	pop    ebx
  405e55:	call   0x71c3:0x57377800
  405e5c:	xchg   edi,eax
  405e5d:	out    dx,al
  405e5e:	gs pop eax
  405e60:	xor    eax,0x1891f83d
  405e65:	pusha  
  405e66:	mov    bh,0xdc
  405e68:	xchg   edi,eax
  405e69:	ds out dx,eax
  405e6b:	ret    0x46a9
  405e6e:	call   0xa21a:0xd37e1294
  405e75:	pop    ss
  405e76:	fdivp  st(7),st
  405e78:	shr    DWORD PTR [edi],0x6
  405e7b:	or     al,0xff
  405e7d:	mov    edx,0xd76df437
  405e82:	mov    esi,0xb168d226
  405e87:	or     esi,DWORD PTR [eax]
  405e89:	dec    ebx
  405e8a:	mov    edx,DWORD PTR [edx-0x33d729b8]
  405e90:	enter  0x38df,0x32
  405e94:	push   cs
  405e95:	and    BYTE PTR [eax],bh
  405e97:	mov    bl,0x16
  405e99:	in     eax,dx
  405e9a:	rcr    esp,1
  405e9c:	mov    al,ds:0xc2e70788
  405ea1:	scas   eax,DWORD PTR es:[edi]
  405ea2:	or     esi,DWORD PTR [esi-0x1095b089]
  405ea8:	cmp    eax,DWORD PTR [edi]
  405eaa:	call   0x921:0xe0416c4a
  405eb1:	mov    bl,0x69
  405eb3:	cli    
  405eb4:	sar    BYTE PTR [edi+0x70],1
  405eb7:	call   0x5b67:0xc51e07c
  405ebe:	fdiv   DWORD PTR cs:[ebp+0x6d597c67]
  405ec5:	retf   
  405ec6:	sub    al,0xfa
  405ec8:	ins    BYTE PTR es:[edi],dx
  405ec9:	iret   
  405eca:	imul   edx,DWORD PTR [esi],0x5c1c8f1b
  405ed0:	pop    es
  405ed1:	nop
  405ed2:	(bad)  
  405ed3:	retf   
  405ed4:	jmp    0x405f18
  405ed6:	loope  0x405f42
  405ed8:	aam    0x62
  405eda:	adc    bh,BYTE PTR [ecx]
  405edc:	mov    al,al
  405ede:	inc    esi
  405edf:	sar    DWORD PTR [edx+0x779405b3],cl
  405ee5:	addr16 pop ebp
  405ee7:	and    eax,0x2c06cb7f
  405eec:	hlt    
  405eed:	je     0x405eed
  405eef:	xor    DWORD PTR [edx+0x3a11d45c],ebp
  405ef5:	test   ch,bl
  405ef7:	inc    ecx
  405ef8:	call   0x5e4d963d
  405efd:	jge    0x405f38
  405eff:	into   
  405f00:	dec    esi
  405f01:	pop    ebx
  405f02:	cli    
  405f03:	inc    esi
  405f04:	fwait
  405f05:	dec    eax
  405f06:	inc    esp
  405f07:	mov    ds:0xa1e9c094,eax
  405f0c:	leave  
  405f0d:	push   ds
  405f0e:	dec    eax
  405f0f:	mov    ah,0x31
  405f11:	mov    BYTE PTR [ecx],0xb8
  405f14:	add    al,BYTE PTR [ebx]
  405f16:	sub    eax,0xad2caf68
  405f1b:	in     eax,0x85
  405f1d:	push   ss
  405f1e:	cmp    al,0x16
  405f20:	mov    eax,ds:0xd098ab5f
  405f25:	pop    eax
  405f26:	ds in  eax,0x1d
  405f29:	mov    ah,0x46
  405f2b:	adc    DWORD PTR [esi-0x36],ecx
  405f2e:	jg     0x405f28
  405f30:	jecxz  0x405f14
  405f32:	or     ebx,DWORD PTR ds:0x9690f346
  405f38:	loop   0x405f0d
  405f3a:	arpl   WORD PTR [ecx+0x20eed6d9],bp
  405f40:	out    0x95,al
  405f42:	aad    0xe3
  405f44:	push   ebp
  405f45:	sub    ch,bl
  405f47:	mov    ds:0xba54a7db,eax
  405f4c:	or     DWORD PTR [ebp-0x4f20c2ab],eax
  405f52:	pop    ecx
  405f53:	aad    0x69
  405f55:	neg    dh
  405f57:	lock and ebx,esi
  405f5a:	mov    edi,0x1cae9e2d
  405f5f:	xchg   esp,eax
  405f60:	sbb    eax,0xc2f2a252
  405f65:	in     al,dx
  405f66:	retf   0xdcbd
  405f69:	retf   0x77a8
  405f6c:	pop    esi
  405f6d:	pop    edi
  405f6e:	lahf   
  405f6f:	pop    ebx
  405f70:	je     0x405f10
  405f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f73:	adc    eax,0x5c279abe
  405f78:	shl    DWORD PTR ds:0x844b2c87,cl
  405f7e:	int3   
  405f7f:	or     bh,BYTE PTR [esi]
  405f81:	pop    edi
  405f82:	cdq    
  405f83:	or     eax,0x8413457f
  405f88:	out    dx,al
  405f89:	shr    DWORD PTR [esi],cl
  405f8b:	pop    edi
  405f8c:	xchg   edi,eax
  405f8d:	xor    BYTE PTR [eax+0x104c1d16],dl
  405f93:	cmc    
  405f94:	xor    ah,BYTE PTR [eax-0x3af945cc]
  405f9a:	ret    0x690b
  405f9d:	add    ch,BYTE PTR [eax]
  405f9f:	fisttp QWORD PTR [eax]
  405fa1:	push   esp
  405fa2:	(bad)  
  405fa3:	dec    edi
  405fa4:	in     al,dx
  405fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fa6:	and    esi,DWORD PTR [esi+esi*4+0x543e8644]
  405fad:	jns    0x405fb7
  405faf:	push   0xf4ad84e0
  405fb4:	arpl   WORD PTR [edi+0x5a5b1c3c],dx
  405fba:	or     dh,BYTE PTR [ecx+0x6c]
  405fbd:	jno    0x406035
  405fbf:	sar    BYTE PTR [eax-0x56f9c349],0x82
  405fc6:	sbb    DWORD PTR [esi-0x5b166355],ebx
  405fcc:	call   FWORD PTR [esi+0x1d173c80]
  405fd2:	sahf   
  405fd3:	call   0x39205558
  405fd8:	xor    DWORD PTR [eax-0x3cb1a926],esi
  405fde:	stos   BYTE PTR es:[edi],al
  405fdf:	cmp    al,0x31
  405fe1:	xor    BYTE PTR [edi-0x712df8d6],cl
  405fe7:	adc    dh,dl
  405fe9:	cmp    BYTE PTR [ecx+0x64],al
  405fec:	pop    ss
  405fed:	push   esi
  405fee:	lods   al,BYTE PTR ds:[esi]
  405fef:	shr    BYTE PTR [eax],1
  405ff1:	(bad)  
  405ff3:	repnz mul DWORD PTR [esi-0x1b3a1be]
  405ffa:	jge    0x405fc4
  405ffc:	div    ah
  405ffe:	add    ah,BYTE PTR [esi-0x3]
  406001:	sar    BYTE PTR [ecx+0xc],cl
  406004:	idiv   ecx
  406006:	in     eax,0x49
  406008:	push   es
  406009:	repz dec esi
  40600b:	div    BYTE PTR [edi+0x49]
  40600e:	out    dx,eax
  40600f:	mov    ebp,0x5b46e405
  406014:	les    ebp,FWORD PTR [edx+0x6f]
  406017:	mov    eax,DWORD PTR [eax]
  406019:	or     al,BYTE PTR [esi]
  40601b:	adc    bh,ch
  40601d:	jmp    0x67e0758a
  406022:	xor    al,0xb9
  406024:	in     eax,0x15
  406026:	fscale 
  406028:	mov    ebp,edx
  40602a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602b:	daa    
  40602c:	xchg   esp,eax
  40602d:	je     0x40606c
  40602f:	in     eax,0x28
  406031:	int3   
  406032:	xor    BYTE PTR [ebx-0x6b],bh
  406035:	popa   
  406036:	ror    BYTE PTR [eax-0x50b6748d],1
  40603c:	inc    edi
  40603d:	les    esp,FWORD PTR [esp+eax*2+0x5]
  406041:	rcr    dl,cl
  406043:	xchg   esi,eax
  406044:	repz xchg esi,eax
  406046:	sahf   
  406047:	add    al,0x93
  406049:	mov    eax,0xb2394b92
  40604e:	pop    esp
  40604f:	repz add edi,esi
  406052:	out    0x34,eax
  406054:	cdq    
  406055:	aam    0xc0
  406057:	scas   eax,DWORD PTR es:[edi]
  406058:	dec    ebp
  406059:	push   ss
  40605a:	pop    ds
  40605b:	int    0xe4
  40605d:	int    0xa5
  40605f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406060:	fidiv  DWORD PTR [ecx]
  406062:	push   cs
  406063:	out    0x28,al
  406065:	test   DWORD PTR [ecx],esp
  406067:	inc    ebx
  406068:	mov    eax,ds:0xb62f2d07
  40606d:	mov    bh,dh
  40606f:	xor    eax,DWORD PTR [edx]
  406071:	sub    dh,BYTE PTR [edx+eiz*1+0x149666d7]
  406078:	out    0x12,al
  40607a:	imul   eax,DWORD PTR [esi+eax*4],0x58
  40607e:	out    dx,al
  40607f:	es mov ch,0x8b
  406082:	sbb    al,0x7e
  406084:	arpl   WORD PTR [ebx+0x59],si
  406087:	xchg   esi,eax
  406088:	ins    BYTE PTR es:[edi],dx
  406089:	aas    
  40608a:	in     eax,0xe6
  40608c:	sub    BYTE PTR [ebx],bh
  40608e:	lds    edi,FWORD PTR [ebx+eiz*4]
  406091:	mov    ebx,cs
  406093:	dec    edx
  406094:	fwait
  406095:	cmp    DWORD PTR ds:0xb4edb71c,esp
  40609b:	imul   ebx,DWORD PTR es:[ecx-0x646edac9],0xffffffcf
  4060a3:	jl     0x40608f
  4060a5:	and    cl,BYTE PTR [edx+0x28]
  4060a8:	cmp    DWORD PTR [ecx],ebx
  4060aa:	imul   edx,DWORD PTR [ecx+0x2bbbc56c],0x6e
  4060b1:	push   ss
  4060b2:	gs inc edx
  4060b4:	hlt    
  4060b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b6:	fs mov bh,0xca
  4060b9:	jl     0x4060a5
  4060bb:	popf   
  4060bc:	or     al,BYTE PTR [ecx-0x4c464aa]
  4060c2:	or     eax,0xb35abf3f
  4060c7:	push   eax
  4060c8:	(bad)  
  4060c9:	pop    ebx
  4060ca:	sahf   
  4060cb:	mov    bl,cl
  4060cd:	ficom  DWORD PTR [eax]
  4060cf:	das    
  4060d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d1:	inc    ebp
  4060d2:	aaa    
  4060d3:	(bad)  
  4060d4:	in     eax,dx
  4060d5:	inc    ebx
  4060d6:	sahf   
  4060d7:	jle    0x4060c5
  4060d9:	mov    edi,0x9d1aa4b0
  4060de:	ret    
  4060df:	pushf  
  4060e0:	call   0xc035efbc
  4060e5:	out    0x6f,eax
  4060e7:	ss or  eax,0xcba092e7
  4060ed:	push   cs
  4060ee:	and    DWORD PTR [eax-0x1f254e1f],eax
  4060f4:	fmul   QWORD PTR [esi-0x4beff0a3]
  4060fa:	pusha  
  4060fb:	fild   DWORD PTR [ecx-0x7f]
  4060fe:	jmp    0x40611b
  406100:	cmc    
  406101:	sti    
  406102:	pop    esi
  406103:	jmp    0x40613e
  406105:	and    ch,bh
  406107:	mov    BYTE PTR [edx+ebx*1],al
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	pop    ss
  40688d:	jecxz  0x406864
  40688f:	mov    ebp,0x83833d13
  406894:	or     al,0x5e
  406896:	add    DWORD PTR [ebx-0x4b6a034f],0x2f
  40689d:	(bad)  [ecx+0x29]
  4068a0:	pop    ecx
  4068a1:	std    
  4068a2:	(bad)  
  4068a3:	rol    ah,0x2c
  4068a6:	ds test dh,dl
  4068a9:	add    eax,0x467656d9
  4068ae:	scas   al,BYTE PTR es:[edi]
  4068af:	(bad)
  4068b2:	xlat   BYTE PTR ds:[ebx]
  4068b3:	shl    ah,0x8d
  4068b6:	dec    ecx
  4068b7:	push   ss
  4068b8:	rol    DWORD PTR [esi-0x3c26a88f],cl
  4068be:	xchg   al,al
  4068c0:	hlt    
  4068c1:	pop    ebx
  4068c2:	std    
  4068c3:	sub    al,0xc
  4068c5:	mov    ch,0x5b
  4068c7:	scas   al,BYTE PTR es:[edi]
  4068c8:	pop    esi
  4068c9:	daa    
  4068ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cb:	imul   BYTE PTR [edi+0xa]
  4068ce:	ds dec ebx
  4068d0:	sbb    BYTE PTR [ecx+0x17a8c181],dh
  4068d6:	push   edi
  4068d7:	adc    ch,0x11
  4068da:	enter  0xd2d1,0xb6
  4068de:	sbb    DWORD PTR [edx-0x518747aa],0x52454712
  4068e8:	cs inc ebx
  4068ea:	rcl    DWORD PTR [esi+0xe1e99bc],0xf7
  4068f1:	push   es
  4068f2:	push   esp
  4068f3:	cwde   
  4068f4:	sbb    ebp,DWORD PTR [ebx]
  4068f6:	hlt    
  4068f7:	pop    ebp
  4068f8:	push   0x19
  4068fa:	(bad)  
  4068fb:	out    0x1f,al
  4068fd:	shl    DWORD PTR [eax+0x3e7328ad],cl
  406903:	stc    
  406904:	lods   eax,DWORD PTR ds:[esi]
  406905:	jl     0x406938
  406907:	aam    0x5b
  406909:	xchg   BYTE PTR [ebx],ch
  40690b:	mov    ch,0x7d
  40690d:	addr16 sahf 
  40690f:	mov    al,0xf5
  406911:	push   esi
  406912:	xor    ah,BYTE PTR [eax]
  406914:	jae    0x406918
  406916:	int3   
  406917:	imul   ebp,DWORD PTR [edx],0xd8e01052
  40691d:	sub    BYTE PTR [ebp-0x62],dl
  406920:	dec    ebp
  406921:	adc    DWORD PTR [edi-0x3fa9ed31],0x7c
  406928:	inc    edi
  406929:	adc    eax,0x955fedd3
  40692e:	ds cli 
  406930:	test   al,0xa1
  406932:	out    dx,al
  406933:	(bad)  
  406935:	push   esi
  406936:	rcr    DWORD PTR [eax],1
  406938:	stos   DWORD PTR es:[edi],eax
  406939:	aas    
  40693a:	lock jnp 0x4069a1
  40693d:	or     al,0x78
  40693f:	or     eax,0x4ce6a05a
  406944:	retf   0x80
  406947:	mov    eax,0xa04a7937
  40694c:	ficom  DWORD PTR [edi+0x29]
  40694f:	lods   al,BYTE PTR ds:[esi]
  406950:	xor    DWORD PTR [esi+edx*2+0x2a81485a],esi
  406957:	sahf   
  406958:	sbb    BYTE PTR [edi-0x102017e1],cl
  40695e:	jbe    0x40693a
  406960:	pop    eax
  406961:	fldcw  WORD PTR [edx-0x6f079f15]
  406967:	mov    fs,ebp
  406969:	(bad)  
  40696a:	jl     0x4069ce
  40696c:	mov    eax,ds:0xb9ee3dd2
  406971:	xor    DWORD PTR [ecx+ecx*1],ebx
  406974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406975:	je     0x40696d
  406977:	fucom  st(1)
  406979:	fcom   DWORD PTR [ecx]
  40697b:	and    ecx,ecx
  40697d:	jp     0x40691f
  40697f:	and    DWORD PTR [ebx+ebp*8],ebx
  406982:	jno    0x406a00
  406984:	xor    eax,0x5781f8ea
  406989:	sbb    al,BYTE PTR [ebx]
  40698b:	sub    DWORD PTR [edx+0x2fba17e1],esp
  406991:	mov    DWORD PTR [eax],esi
  406993:	out    0xf,eax
  406995:	pop    ecx
  406996:	push   ss
  406997:	mov    esp,0xdf32c4b6
  40699c:	sub    BYTE PTR [edx+0x44],dh
  40699f:	int3   
  4069a0:	inc    ebp
  4069a1:	cmp    DWORD PTR [ebp-0x61],ebx
  4069a4:	fyl2x  
  4069a6:	mov    eax,ds:0xbb4de96c
  4069ab:	cli    
  4069ac:	jmp    0x40697f
  4069ae:	fdivr  DWORD PTR [eax+0x67]
  4069b1:	fidivr WORD PTR [edx+0x60]
  4069b4:	dec    ebp
  4069b5:	fxch   st(1)
  4069b7:	sbb    BYTE PTR [ebp-0x3d],0x7e
  4069bb:	bound  edx,QWORD PTR [edi+0x2c183f4a]
  4069c1:	stc    
  4069c2:	loopne 0x406a1b
  4069c4:	cmp    DWORD PTR [esi+0x5441b900],ebx
  4069ca:	push   ss
  4069cb:	adc    eax,0x14c3e2e2
  4069d0:	pop    edi
  4069d1:	add    BYTE PTR [edi-0x74],dh
  4069d4:	test   DWORD PTR [ecx],esp
  4069d6:	mov    ch,0x24
  4069d8:	out    dx,al
  4069d9:	imul   esp,DWORD PTR [ebp-0x3e],0xf4b95c84
  4069e0:	scas   al,BYTE PTR es:[edi]
  4069e1:	hlt    
  4069e2:	cld    
  4069e3:	jle    0x4069d8
  4069e5:	ds out dx,al
  4069e7:	jl     0x406a30
  4069e9:	push   cs
  4069ea:	scas   eax,DWORD PTR es:[edi]
  4069eb:	jns    0x406a23
  4069ed:	fcom   QWORD PTR [esi-0x3c846aa2]
  4069f3:	rcr    DWORD PTR [edx+0x2e],1
  4069f6:	cmp    ch,dh
  4069f8:	pop    es
  4069f9:	cld    
  4069fa:	jecxz  0x406a67
  4069fc:	or     DWORD PTR [eax+edi*2+0xc],eax
  406a00:	fistp  WORD PTR [ebp+0x1d]
  406a03:	lahf   
  406a04:	adc    cl,BYTE PTR [ebx]
  406a06:	aam    0xfa
  406a08:	fnsave fs:[edi-0x79dbd96f]
  406a0f:	jmp    0x9253:0x304f6b31
  406a16:	sub    BYTE PTR [ebx+0x1c],ah
  406a19:	and    DWORD PTR [edx+0x2e],edi
  406a1c:	cwde   
  406a1d:	jg     0x4069af
  406a1f:	int3   
  406a20:	xor    DWORD PTR [edi],0x7bdbf3a1
  406a26:	jmp    0x6100:0xa5779c11
  406a2d:	leave  
  406a2e:	test   al,0x5
  406a30:	(bad)  
  406a31:	adc    eax,0x4faed8e7
  406a36:	test   BYTE PTR [esp+ebp*1+0x68],dh
  406a3a:	mov    edi,0x1ef26d74
  406a3f:	mov    cl,0xc8
  406a41:	adc    cl,BYTE PTR [ebp-0x380a06f7]
  406a47:	pop    es
  406a48:	fsub   QWORD PTR [eax+0x39]
  406a4b:	fnstcw WORD PTR [edi-0x42609034]
  406a51:	mov    cl,0x6f
  406a53:	retf   
  406a54:	sbb    eax,0x86703a15
  406a59:	jns    0x406a75
  406a5b:	test   ch,bh
  406a5d:	xchg   ebx,eax
  406a5e:	adc    eax,0x948f2565
  406a63:	stos   BYTE PTR es:[edi],al
  406a64:	cmp    al,0xeb
  406a66:	cmp    BYTE PTR [edi-0x2c],dl
  406a69:	sbb    al,0x6d
  406a6b:	test   BYTE PTR [edx+0x6dadbb27],bh
  406a71:	sbb    DWORD PTR [ebx],esi
  406a73:	adc    cl,BYTE PTR [esp+ecx*2-0x3d78d500]
  406a7a:	inc    edx
  406a7b:	mov    ch,0x40
  406a7d:	dec    edi
  406a7e:	test   DWORD PTR [ebx+0x3a84700c],edi
  406a84:	xor    al,0xc5
  406a86:	or     al,0xd9
  406a88:	inc    esi
  406a89:	adc    eax,0x369715be
  406a8e:	jbe    0x406a18
  406a90:	inc    esp
  406a91:	xlat   BYTE PTR ds:[ebx]
  406a92:	shl    esi,cl
  406a94:	leave  
  406a95:	inc    esp
  406a96:	pop    edx
  406a97:	popa   
  406a98:	and    al,0x3a
  406a9a:	mov    esi,0x15d37b24
  406a9f:	dec    edi
  406aa0:	jo     0x406ab8
  406aa2:	or     BYTE PTR [eax],bh
  406aa4:	add    al,0x78
  406aa6:	sbb    eax,0xc1cb9f1
  406aab:	ficomp WORD PTR [edx-0x5b]
  406aae:	out    dx,al
  406aaf:	sar    BYTE PTR [esi],0x76
  406ab2:	dec    edx
  406ab3:	sub    cl,BYTE PTR cs:[edi-0x72986433]
  406aba:	sub    bl,dh
  406abc:	add    ebp,edi
  406abe:	(bad)  
  406abf:	hlt    
  406ac0:	out    0xcc,al
  406ac2:	sbb    bh,bl
  406ac4:	cs ret 0x3ea2
  406ac8:	nop
  406ac9:	sub    eax,0x6e8273c9
  406ace:	(bad)  
  406acf:	out    0x74,al
  406ad1:	lods   eax,DWORD PTR ds:[esi]
  406ad2:	cmp    bh,cl
  406ad4:	loope  0x406b2f
  406ad6:	sbb    BYTE PTR [eax+0xb],ah
  406ad9:	rol    DWORD PTR [edi+0xe],1
  406adc:	hlt    
  406add:	push   edi
  406ade:	in     al,0x4f
  406ae0:	retf   0x4450
  406ae3:	test   DWORD PTR [ebp+0x639fbde6],edi
  406ae9:	or     ch,bh
  406aeb:	ja     0x406a99
  406aed:	mov    dl,0xfb
  406aef:	stc    
  406af0:	gs mov ebp,0x6862a2d7
  406af6:	mov    ebp,0x88a691da
  406afb:	jns    0x406af1
  406afd:	in     al,0x2b
  406aff:	sbb    edi,DWORD PTR [eax+0x6e]
  406b02:	mov    ebx,0xe56cc431
  406b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b08:	sub    al,0xd2
  406b0a:	les    ebp,FWORD PTR [ebx]
  406b0c:	mov    cl,0xc7
  406b0e:	mov    DWORD PTR ds:[edi-0x5d9f0b7e],ebx
  406b15:	xor    al,0x46
  406b17:	push   ebp
  406b18:	pop    ds
  406b19:	mov    WORD PTR [edx+0x55],fs
  406b1c:	and    DWORD PTR [eax],ebx
  406b1e:	in     eax,0xac
  406b20:	ret    0xfa7
  406b23:	sbb    al,0x6
  406b25:	mov    ds:0x260237ae,al
  406b2a:	inc    ebp
  406b2b:	je     0x406b4a
  406b2d:	inc    edx
  406b2e:	push   ds
  406b2f:	call   0xe89f:0x33ea2d03
  406b36:	fistp  DWORD PTR [ebx-0x4f]
  406b39:	mov    gs,ecx
  406b3b:	loopne 0x406ba3
  406b3d:	jae    0x406af9
  406b3f:	pop    edi
  406b40:	inc    esi
  406b41:	(bad)
  406b46:	pop    edi
  406b47:	cmp    esi,DWORD PTR [ecx+0x3d]
  406b4a:	push   ds
  406b4b:	mov    ds:0x71af880c,eax
  406b50:	repz push eax
  406b52:	cmp    eax,0x3a1d4bfb
  406b57:	fldenv [edi+esi*2-0x2b54d65d]
  406b5e:	jo     0x406bad
  406b60:	test   al,0xc9
  406b62:	(bad)  
  406b63:	imul   edi,DWORD PTR [ecx+0x7cd2c106],0xffffffdb
  406b6a:	add    ah,BYTE PTR ds:0x7fc95385
  406b70:	call   0xe487b0cd
  406b75:	repnz and DWORD PTR [ebp+0x2f],edi
  406b79:	and    DWORD PTR [ecx+0x6a6b2e57],esp
  406b7f:	in     al,dx
  406b80:	dec    esi
  406b81:	mov    fs,WORD PTR [esi-0x7]
  406b84:	push   eax
  406b85:	std    
  406b86:	fs jp  0x406b85
  406b89:	sub    dh,BYTE PTR [esi]
  406b8b:	bnd jmp 0x406b41
  406b8e:	jb     0x406b7a
  406b90:	daa    
  406b91:	mov    dl,0xb1
  406b93:	scas   al,BYTE PTR es:[edi]
  406b94:	push   cs
  406b95:	aas    
  406b96:	mov    edx,0xf63e7be7
  406b9b:	retf   0xc50e
  406b9e:	mov    ebp,0x92e8b5d3
  406ba3:	or     ebx,DWORD PTR [edi-0x21]
  406ba6:	cmp    bh,BYTE PTR [ebx]
  406ba8:	aas    
  406ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406baa:	dec    ebx
  406bab:	lods   eax,DWORD PTR ds:[esi]
  406bac:	enter  0x4448,0xa0
  406bb0:	int    0x60
  406bb2:	jl     0x406b90
  406bb4:	mov    ebx,0xf9480657
  406bb9:	and    BYTE PTR [edi],ch
  406bbb:	stos   DWORD PTR es:[edi],eax
  406bbc:	push   esi
  406bbd:	call   0x8d266122
  406bc2:	add    BYTE PTR [edi-0x1d],ah
  406bc5:	mov    al,ds:0xc990f99d
  406bca:	fs fwait
  406bcc:	sub    cl,ah
  406bce:	pop    es
  406bcf:	shr    BYTE PTR [ebp-0x42],0x96
  406bd3:	enter  0x3c5f,0x55
  406bd7:	mov    al,ds:0x10c558da
  406bdc:	or     eax,0x1319abdf
  406be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be2:	push   ds
  406be3:	sar    BYTE PTR [eax+eiz*1],0x6f
  406be7:	das    
  406be8:	mov    DWORD PTR [edi],ebp
  406bea:	(bad)  
  406bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bed:	sbb    al,0x71
  406bef:	je     0x406bd1
  406bf1:	mov    edx,0xa3284474
  406bf6:	bound  ecx,QWORD PTR [ecx]
  406bf8:	or     ebp,esp
  406bfa:	xchg   ebx,eax
  406bfb:	icebp  
  406bfc:	adc    ah,bh
  406bfe:	lds    edx,FWORD PTR [eax]
  406c00:	mov    ds:0xa850b1a4,eax
  406c05:	sub    al,0x3
  406c07:	xor    DWORD PTR [eax-0x67],0xad3e181c
  406c0e:	and    dl,BYTE PTR [ebp-0x14]
  406c11:	push   eax
  406c12:	fiadd  WORD PTR [ebx+0x4ef919a6]
  406c18:	pop    ss
  406c19:	push   ds
  406c1a:	dec    edi
  406c1b:	mov    esi,0xfd0909a1
  406c20:	pusha  
  406c21:	mov    bh,0x9d
  406c23:	mov    dl,al
  406c25:	rol    esp,1
  406c27:	out    0xa,eax
  406c29:	inc    edi
  406c2a:	xchg   ebp,eax
  406c2b:	pusha  
  406c2c:	dec    edx
  406c2d:	addr16 out 0x7d,al
  406c30:	je     0x406bff
  406c32:	pop    edi
  406c33:	shr    BYTE PTR [ecx+0x69],1
  406c36:	xor    bh,cl
  406c38:	aas    
  406c39:	fisttp QWORD PTR [esi+0x7b]
  406c3c:	sbb    al,0x36
  406c3e:	dec    edi
  406c3f:	jle    0x406c79
  406c41:	jne    0x406c64
  406c43:	fisttp DWORD PTR [ecx-0x45e6020c]
  406c49:	pop    esp
  406c4a:	in     al,0xd4
  406c4c:	push   ss
  406c4d:	ret    
  406c4e:	imul   esi,esi,0xa58ddbd3
  406c54:	nop
  406c55:	mov    DWORD PTR [ecx+ebx*4-0xe],edi
  406c59:	pushf  
  406c5a:	pop    ds
  406c5b:	mov    esp,esp
  406c5d:	mov    esp,0x73ec23a9
  406c62:	cwde   
  406c63:	cmc    
  406c64:	(bad)  
  406c65:	mov    esp,edi
  406c67:	mov    ds:0x6e87596b,eax
  406c6c:	push   edx
  406c6d:	pop    edi
  406c6e:	pop    es
  406c6f:	les    ebp,FWORD PTR [eax]
  406c71:	cwde   
  406c72:	jmp    0xe029:0xff468221
  406c79:	dec    DWORD PTR [edi+0x7df2dd38]
  406c7f:	(bad)  
  406c80:	dec    ebx
  406c81:	or     al,0xd6
  406c83:	sbb    dh,BYTE PTR [esi+eax*4+0x5b]
  406c87:	mov    ds:0x793573d1,eax
  406c8c:	cld    
  406c8d:	mov    dh,0x5d
  406c8f:	dec    edx
  406c90:	dec    esi
  406c91:	les    edx,FWORD PTR [ebp-0x63900eeb]
  406c97:	mov    eax,ds:0x1b71835
  406c9c:	pop    ecx
  406c9d:	pop    edx
  406c9e:	sbb    BYTE PTR [esi],0x56
  406ca1:	mov    edx,0x28a450a4
  406ca6:	cmp    BYTE PTR [eax+eax*8-0x35],ah
  406caa:	xchg   sp,ax
  406cac:	push   0x89768d1b
  406cb1:	or     DWORD PTR [edi+0x57],edx
  406cb4:	das    
  406cb5:	(bad)  
  406cb6:	adc    BYTE PTR [ecx-0x17],0xa7
  406cba:	ja     0x406d26
  406cbc:	lock or eax,0x17c082cd
  406cc2:	sbb    dh,BYTE PTR [edx+eiz*8]
  406cc5:	cld    
  406cc6:	stos   BYTE PTR es:[edi],al
  406cc7:	jnp    0x406cca
  406cc9:	ror    DWORD PTR [ebp+0x64],0xf8
  406ccd:	fcomp  QWORD PTR [ecx-0x18]
  406cd0:	cdq    
  406cd1:	daa    
  406cd2:	sub    DWORD PTR [ebp+0xa6e3983],0x1c3a2fa2
  406cdc:	out    0xd4,eax
  406cde:	adc    ebp,DWORD PTR [edi+0xccce983]
  406ce4:	fnsave [ecx-0xdbd5673]
  406cea:	loope  0x406d39
  406cec:	jmp    0x2a24d994
  406cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf2:	push   ebp
  406cf3:	mov    DWORD PTR [eax+0x1c0d8353],ebx
  406cf9:	add    bh,ah
  406cfb:	pop    ss
  406cfc:	dec    ebp
  406cfd:	mov    BYTE PTR [eax-0x279cb3e0],0x2
  406d04:	in     al,0x26
  406d06:	ins    DWORD PTR es:[edi],dx
  406d07:	push   ebp
  406d08:	in     al,dx
  406d09:	pop    esp
  406d0a:	sbb    al,0x6b
  406d0c:	inc    edi
  406d0d:	mov    ds:0x7c2c77a1,eax
  406d12:	loope  0x406ca4
  406d14:	out    0x30,eax
  406d16:	inc    ebx
  406d17:	test   bh,0x24
  406d1a:	cwde   
  406d1b:	pop    es
  406d1c:	jg     0x406d6f
  406d1e:	mov    ah,0xa7
  406d20:	mov    ch,0xa
  406d22:	into   
  406d23:	push   ecx
  406d24:	clc    
  406d25:	mov    esp,0x778f2ab8
  406d2a:	xlat   BYTE PTR ds:[ebx]
  406d2b:	loopne 0x406d51
  406d2d:	adc    al,0xbf
  406d2f:	outs   dx,BYTE PTR ds:[esi]
  406d30:	(bad)  
  406d31:	hlt    
  406d32:	pop    ss
  406d33:	cli    
  406d34:	sbb    dh,bh
  406d36:	cmp    bh,cl
  406d38:	mov    esi,0x7f7f63d6
  406d3d:	loopne 0x406cda
  406d3f:	inc    ebx
  406d40:	hlt    
  406d41:	(bad)  
  406d42:	repnz jmp 0x4d6f:0x79c93e24
  406d4a:	loope  0x406d14
  406d4c:	mov    dl,BYTE PTR [esi+0x64]
  406d4f:	pop    ds
  406d50:	mov    bh,0xe9
  406d52:	aad    0xc9
  406d54:	mov    ebx,0x40b25139
  406d59:	xchg   BYTE PTR [ecx],al
  406d5b:	inc    esp
  406d5c:	fiadd  DWORD PTR [ecx-0x6ea12331]
  406d62:	out    0x9a,al
  406d64:	leave  
  406d65:	sub    eax,DWORD PTR [ebp+0x52]
  406d68:	mov    BYTE PTR [ebx],bl
  406d6a:	bound  esi,QWORD PTR [eax]
  406d6c:	test   eax,0xbcf1d1d
  406d71:	enter  0xb3d,0xd4
  406d75:	iret   
  406d76:	push   ss
  406d77:	push   0xfffffff7
  406d79:	out    dx,al
  406d7a:	xchg   ebp,eax
  406d7b:	pushf  
  406d7c:	cmp    DWORD PTR [edx],eax
  406d7e:	inc    ecx
  406d7f:	test   BYTE PTR [esi],ch
  406d81:	xchg   esi,eax
  406d82:	sbb    ah,cl
  406d84:	ret    0x52a2
  406d87:	aaa    
  406d88:	enter  0x403c,0xd9
  406d8c:	popa   
  406d8d:	ret    0x5c31
  406d90:	dec    ebp
  406d91:	test   DWORD PTR [edx-0xf],ecx
  406d94:	push   cs
  406d95:	mov    bl,0xf
  406d97:	sbb    al,0xe3
  406d99:	rol    DWORD PTR [ebx+0x5a106774],cl
  406d9f:	popa   
  406da0:	sar    DWORD PTR [ecx-0x1415dc44],0x9d
  406da7:	ret    0xc055
  406daa:	cmp    DWORD PTR [ecx-0x348522c4],esp
  406db0:	xlat   BYTE PTR ds:[ebx]
  406db1:	dec    eax
  406db2:	out    dx,eax
  406db3:	loopne 0x406d7b
  406db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db6:	nop
  406db7:	aas    
  406db8:	in     al,dx
  406db9:	mov    cs,ebx
  406dbb:	repz or BYTE PTR [edx+ecx*8-0x6a],bh
  406dc0:	cmp    edi,DWORD PTR [esi]
  406dc2:	std    
  406dc3:	pop    ss
  406dc4:	int3   
  406dc5:	xor    al,0xcf
  406dc7:	and    al,BYTE PTR [ecx-0x58]
  406dca:	fld    TBYTE PTR [ebp+0x2e79818a]
  406dd0:	hlt    
  406dd1:	mov    cl,0x2e
  406dd3:	and    dh,dh
  406dd5:	jmp    0x406e3a
  406dd7:	test   al,0x50
  406dd9:	cmp    al,0x9e
  406ddb:	pop    esi
  406ddc:	test   DWORD PTR [ecx-0x4fce0d6a],ecx
  406de2:	jne    0x406e47
  406de4:	dec    ebx
  406de5:	sub    eax,0x5c1222eb
  406dea:	pop    ecx
  406deb:	lds    ebp,FWORD PTR [ecx-0x3a]
  406dee:	test   eax,0x3379c8f6
  406df3:	outs   dx,BYTE PTR ds:[esi]
  406df4:	ficomp WORD PTR [ecx-0x16]
  406df7:	sub    al,0x53
  406df9:	dec    eax
  406dfa:	fistp  QWORD PTR [ebp-0x3d]
  406dfd:	xchg   ebp,eax
  406dfe:	jl     0x406dec
  406e00:	inc    esi
  406e01:	and    DWORD PTR [ebp+eax*2-0x77],0x6b33632e
  406e09:	pop    esi
  406e0a:	xchg   edx,eax
  406e0b:	jb     0x406e81
  406e0d:	imul   BYTE PTR [edx-0x673d5dc]
  406e13:	push   edi
  406e14:	out    0x31,al
  406e16:	lock out dx,al
  406e18:	(bad)
  406e1b:	scas   al,BYTE PTR es:[edi]
  406e1c:	add    eax,0x4b5bdefc
  406e21:	jmp    0x406da6
  406e23:	pop    ss
  406e24:	std    
  406e25:	cli    
  406e26:	repz js 0x406e0b
  406e29:	jno    0x406e16
  406e2b:	(bad)  
  406e2c:	hlt    
  406e2d:	mov    dh,0xe7
  406e2f:	in     eax,0xce
  406e31:	mov    ds:0xddbace72,eax
  406e36:	inc    ebp
  406e37:	mov    ecx,DWORD PTR [ebp-0x4b5de689]
  406e3d:	mov    ds:0x73354802,eax
  406e42:	ror    WORD PTR [edx+0x7d95f8c0],1
  406e49:	jl     0x406ec9
  406e4b:	jecxz  0x406e24
  406e4d:	inc    ebp
  406e4e:	in     eax,dx
  406e4f:	data16 jb 0x406ddb
  406e52:	dec    ebp
  406e53:	add    ebx,ebp
  406e55:	cdq    
  406e56:	mov    ah,BYTE PTR [edx+0x3e2a5d7c]
  406e5c:	xchg   ebx,eax
  406e5d:	jle    0x406ec3
  406e5f:	repnz pop eax
  406e61:	xchg   bl,dh
  406e63:	or     DWORD PTR [eiz*4-0x2bdf9cc4],esi
  406e6a:	sti    
  406e6b:	push   es
  406e6c:	adc    ebp,DWORD PTR [ebx+0x407b4946]
  406e72:	xor    al,al
  406e74:	add    dl,BYTE PTR [esi+0x2072229a]
  406e7a:	and    eax,0x4c10f9ef
  406e7f:	test   eax,0x20f9a1ba
  406e84:	mov    al,ds:0xdcecc0fb
  406e89:	jmp    0x7545b0d9
  406e8e:	les    ebp,FWORD PTR [edx-0x21]
  406e91:	aad    0x9c
  406e93:	sub    bh,BYTE PTR fs:[edx-0x178a39c2]
  406e9a:	jmp    0x406e5a
  406e9c:	inc    eax
  406e9d:	jo     0x406e32
  406e9f:	mov    esp,0x8929a56b
  406ea4:	out    dx,al
  406ea5:	inc    edi
  406ea6:	dec    edi
  406ea7:	and    DWORD PTR [ebx-0x48],edx
  406eaa:	cdq    
  406eab:	pop    es
  406eac:	scas   al,BYTE PTR es:[edi]
  406ead:	retf   
  406eae:	dec    eax
  406eaf:	push   es
  406eb0:	push   0xc102c6a2
  406eb5:	not    BYTE PTR [ebx+eiz*1+0x7d]
  406eb9:	push   ebx
  406eba:	aaa    
  406ebb:	sub    BYTE PTR [ebx],dl
  406ebd:	sub    BYTE PTR [ecx],dh
  406ebf:	jecxz  0x406e9a
  406ec1:	shl    BYTE PTR [edx],0xae
  406ec4:	jb     0x406ec5
  406ec6:	fisubr DWORD PTR [edx]
  406ec8:	(bad)  
  406ec9:	jp     0x406e69
  406ecb:	mov    ah,0x39
  406ecd:	test   eax,0xc7d41317
  406ed2:	push   ss
  406ed3:	sub    DWORD PTR [edx+eiz*8+0x3c9e0588],edi
  406eda:	popf   
  406edb:	sub    al,0x3b
  406edd:	xor    esp,0xc732950c
  406ee3:	nop
  406ee4:	cmp    DWORD PTR ds:[edi+0xa2f1460],ecx
  406eeb:	sub    dh,dl
  406eed:	cmp    dl,ch
  406eef:	addr16 or al,0xd5
  406ef2:	mov    DWORD PTR [esi],ecx
  406ef4:	je     0x406f55
  406ef6:	rep stos DWORD PTR es:[edi],eax
  406ef8:	push   ss
  406ef9:	sub    edi,eax
  406efb:	push   0x94126a8b
  406f00:	jmp    0x406f2c
  406f02:	mov    dl,0xd8
  406f04:	loope  0x406f53
  406f06:	xor    DWORD PTR ds:0xf719d36c,0x8eb56547
  406f10:	cld    
  406f11:	std    
  406f12:	pop    ebp
  406f13:	mov    eax,ds:0xf120104f
  406f18:	cmp    DWORD PTR [edx],0xfc475bfe
  406f1e:	cdq    
  406f1f:	jne    0x406f76
  406f21:	and    edi,DWORD PTR [eax]
  406f23:	les    ecx,FWORD PTR [ecx+edx*1+0x64ddb071]
  406f2a:	fsub   st,st(4)
  406f2c:	mov    ebp,0x3848502b
  406f31:	pusha  
  406f32:	mov    bl,0x1e
  406f34:	scas   al,BYTE PTR es:[edi]
  406f35:	jge    0x406f94
  406f37:	test   DWORD PTR [edi-0x1ecf02ec],0x8cb4c0d8
  406f41:	iret   
  406f42:	inc    ebp
  406f43:	jl     0x406f6a
  406f45:	mov    ecx,0x114456b4
  406f4a:	jecxz  0x406f49
  406f4c:	xor    BYTE PTR [edi-0x163564d3],bh
  406f52:	fwait
  406f53:	sub    edi,eax
  406f55:	sub    BYTE PTR [edi],bh
  406f57:	lea    esi,[ebx+0x4d10d05]
  406f5d:	aad    0x46
  406f5f:	retf   0x4d25
  406f62:	outs   dx,DWORD PTR ds:[esi]
  406f63:	or     al,0x9c
  406f65:	ins    BYTE PTR es:[di],dx
  406f67:	hlt    
  406f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f69:	and    dh,BYTE PTR [ebx-0xc9d0470]
  406f6f:	push   0x5b02d66b
  406f74:	mov    dl,0x73
  406f76:	shl    BYTE PTR [edi-0x48],cl
  406f79:	fcmove st,st(5)
  406f7b:	sub    BYTE PTR [ebp-0x13],bh
  406f7e:	add    al,bh
  406f80:	jb     0x406f96
  406f82:	into   
  406f83:	sub    dl,BYTE PTR [ebp-0x2b697ae8]
  406f89:	clc    
  406f8a:	mov    gs,WORD PTR [esi-0x3351e99c]
  406f90:	add    DWORD PTR [edx-0x57743f5c],ebp
  406f96:	and    al,0xb8
  406f98:	adc    al,0x76
  406f9a:	cmc    
  406f9b:	dec    ebp
  406f9c:	dec    esp
  406f9d:	leave  
  406f9e:	scas   eax,DWORD PTR es:[edi]
  406f9f:	jmp    DWORD PTR ds:0x667e41cf
  406fa5:	pusha  
  406fa6:	dec    ecx
  406fa7:	cs cmp ebp,ebp
  406faa:	mov    DWORD PTR [eax+0x71],ebx
  406fad:	xchg   edi,eax
  406fae:	mov    eax,ds:0x24b35e4a
  406fb3:	dec    esp
  406fb4:	addr16 mov cl,ch
  406fb7:	fidiv  DWORD PTR [edx]
  406fb9:	(bad)  
  406fba:	xchg   esi,eax
  406fbb:	clc    
  406fbc:	mov    al,0xcb
  406fbe:	xchg   ebp,eax
  406fbf:	lock pop ds
  406fc1:	xor    al,0xb8
  406fc3:	fwait
  406fc4:	mov    ds:0x6ffa3de6,eax
  406fc9:	sub    eax,esp
  406fcb:	mov    ebp,0x412cfd8
  406fd0:	cmp    eax,0x9770f1df
  406fd5:	jno    0x406f62
  406fd7:	sbb    ebp,DWORD PTR [esp]
  406fda:	pop    ss
  406fdb:	jns    0x406f92
  406fdd:	xchg   esp,eax
  406fde:	mov    WORD PTR ds:0x5fa40e01,?
  406fe4:	in     eax,dx
  406fe5:	push   ebp
  406fe6:	outs   dx,DWORD PTR ds:[esi]
  406fe7:	sbb    dh,BYTE PTR [ecx+esi*1+0x775d023f]
  406fee:	iret   
  406fef:	pop    ds
  406ff0:	ret    0x1fd2
  406ff3:	jle    0x40704f
  406ff5:	cs pop ebp
  406ff7:	mov    dl,ah
  406ff9:	fyl2x  
  406ffb:	push   ebp
  406ffc:	xchg   BYTE PTR [ecx+0x30],cl
  406fff:	and    edi,DWORD PTR [ecx+ecx*1-0x3d]
  407003:	(bad)  
  407004:	iret   
  407005:	stos   BYTE PTR es:[edi],al
  407006:	lods   eax,DWORD PTR ds:[esi]
  407007:	or     eax,0x63e40143
  40700c:	add    DWORD PTR ds:0xdbb062fd,ebx
  407012:	rol    ebx,0xde
  407015:	sub    al,0x37
  407017:	pushf  
  407018:	or     ecx,DWORD PTR [edi]
  40701a:	add    eax,DWORD PTR [ebp-0xcd81640]
  407020:	push   ecx
  407021:	dec    DWORD PTR [ecx+0x53]
  407024:	pop    edx
  407025:	lods   eax,DWORD PTR ds:[esi]
  407026:	pop    edi
  407027:	or     eax,0xd70dea26
  40702c:	adc    dh,bl
  40702e:	add    al,0xa7
  407030:	enter  0x3db0,0x76
  407034:	lock in al,0x3b
  407037:	data16 jmp 0x40706d
  40703a:	or     DWORD PTR [esi-0x15754826],esi
  407040:	repz std 
  407042:	xchg   esp,eax
  407043:	jb     0x40709f
  407045:	push   ss
  407046:	inc    esi
  407047:	mov    eax,ds:0x46b344b3
  40704c:	fcomp  DWORD PTR [ebp-0x23875e0]
  407052:	adc    al,0x3
  407054:	popf   
  407055:	int    0x8e
  407057:	push   ds
  407058:	out    dx,eax
  407059:	test   al,0xd3
  40705b:	add    DWORD PTR ds:0x772e5fb2,esp
  407061:	repnz xchg ecx,eax
  407063:	(bad)  
  407064:	in     al,dx
  407065:	ds push eax
  407067:	bound  ebx,QWORD PTR [ecx+0x48cf5b70]
  40706d:	leave  
  40706e:	inc    esi
  40706f:	inc    esi
  407070:	mov    dl,0x35
  407072:	inc    esi
  407073:	xchg   ebx,eax
  407074:	and    eax,0x6432f9ec
  407079:	lods   eax,DWORD PTR ds:[esi]
  40707a:	shr    DWORD PTR [edi-0x6d96dc9d],cl
  407080:	enter  0xeaf5,0x1b
  407084:	test   BYTE PTR [edx+0x6ea3e3ba],0x40
  40708b:	push   0x80fe0ddc
  407090:	lods   eax,DWORD PTR ds:[esi]
  407091:	in     al,0x89
  407093:	in     al,dx
  407094:	test   BYTE PTR [esi],0x38
  407097:	mov    edi,0x310bd315
  40709c:	xchg   ebp,eax
  40709d:	imul   edi,ebx,0x9e297b6d
  4070a3:	sbb    ch,ch
  4070a5:	sbb    BYTE PTR [edi],dl
  4070a7:	int    0xe1
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	sbb    eax,0xa95a317f
  4070af:	lods   eax,DWORD PTR ds:[esi]
  4070b0:	test   dh,cl
  4070b2:	lea    esp,[edx-0x6db92671]
  4070b8:	sbb    BYTE PTR [eax],ah
  4070ba:	jle    0x40705c
  4070bc:	or     ebp,0xfffffff1
  4070bf:	inc    eax
  4070c0:	sub    bh,dh
  4070c2:	ins    DWORD PTR es:[edi],dx
  4070c3:	and    edx,DWORD PTR [eax-0xd]
  4070c6:	test   DWORD PTR [edi],esp
  4070c8:	shl    BYTE PTR [ebp-0x21],0xa7
  4070cc:	jo     0x4070cd
  4070ce:	gs dec edx
  4070d0:	fst    DWORD PTR [edx-0x50]
  4070d3:	ins    DWORD PTR es:[edi],dx
  4070d4:	mov    ?,WORD PTR [edi+0x6]
  4070d7:	xor    ch,BYTE PTR [edi-0x618cbd7c]
  4070dd:	xor    eax,0xf5c3f9b4
  4070e2:	mov    WORD PTR [ecx-0x6449e0e8],cs
  4070e8:	nop
  4070e9:	mov    al,ds:0x7f839b71
  4070ee:	and    DWORD PTR [ebx-0x5cdc0ff],edi
  4070f4:	and    al,0xbe
  4070f6:	jg     0x40709d
  4070f8:	push   ecx
  4070f9:	push   es
  4070fa:	mov    al,0x75
  4070fc:	xchg   esi,eax
  4070fd:	xlat   BYTE PTR ds:[ebx]
  4070fe:	loope  0x4070f2
  407100:	and    dl,BYTE PTR [edx+0x7b3aaddb]
  407106:	mov    DWORD PTR [edx+edx*2],esi
  407109:	inc    esp
  40710a:	ds leave 
  40710c:	rol    BYTE PTR [ecx+0x2e],cl
  40710f:	int    0x6e
  407111:	arpl   WORD PTR ds:0x6e8721ec,dx
  407117:	mov    cs,WORD PTR [ebx+0x1d]
  40711a:	(bad)  
  40711b:	loope  0x40717a
  40711d:	xchg   ebp,eax
  40711e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40711f:	mov    BYTE PTR [ebp-0x206eea49],cl
  407125:	xchg   esp,eax
  407126:	mov    al,0xec
  407128:	out    0x8f,al
  40712a:	xor    eax,0x301e0fa8
  40712f:	nop
  407130:	loop   0x407137
  407132:	outs   dx,BYTE PTR ds:[esi]
  407133:	xchg   BYTE PTR [ebx-0x4600a740],ah
  407139:	pop    esi
  40713a:	jge    0x407116
  40713c:	push   edi
  40713d:	push   0xffffffd7
  40713f:	test   al,0x97
  407141:	add    DWORD PTR es:[edi+eiz*1-0x18],eax
  407146:	int    0x5a
  407148:	inc    edi
  407149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40714a:	inc    ebx
  40714b:	inc    eax
  40714c:	adc    esi,DWORD PTR [ecx]
  40714e:	call   0x5eb3:0x106aacf
  407155:	jae    0x40710a
  407157:	(bad)  
  407159:	pop    esi
  40715a:	rol    dh,0xc0
  40715d:	push   ds
  40715e:	das    
  40715f:	jp     0x407184
  407161:	adc    ecx,DWORD PTR [ecx-0x5ca154e2]
  407167:	(bad)  
  407168:	push   ds
  407169:	pushf  
  40716a:	retf   0xc4e6
  40716d:	mov    dh,0x23
  40716f:	aam    0x26
  407171:	pushaw 
  407173:	cmp    edx,eax
  407175:	pop    ebp
  407176:	mov    eax,0x68c91486
  40717b:	xor    ebp,edi
  40717d:	into   
  40717e:	icebp  
  40717f:	retf   0xdf35
  407182:	xchg   esi,eax
  407183:	adc    DWORD PTR [ebx],esp
  407185:	test   DWORD PTR ds:0x82f4e04a,esp
  40718b:	lea    ecx,[ebx]
  40718d:	out    dx,eax
  40718e:	imul   edi,DWORD PTR [eax+edi*1-0x4c6424a5],0xffffffd2
  407196:	sbb    al,0x76
  407198:	mov    esp,0x6f7cf5eb
  40719d:	xchg   ebp,eax
  40719e:	cwde   
  40719f:	xlat   BYTE PTR ds:[ebx]
  4071a0:	clc    
  4071a1:	mov    al,ds:0x6293b5a0
  4071a6:	mov    esp,0x55d91c6f
  4071ab:	push   ss
  4071ac:	jbe    0x407219
  4071ae:	pop    es
  4071af:	rol    DWORD PTR [esi+0x15],cl
  4071b2:	mov    ebp,0xe1d1e199
  4071b7:	cmp    BYTE PTR [ebp-0x5787dcb8],0x1f
  4071be:	cdq    
  4071bf:	cmp    bh,BYTE PTR [ecx-0x50cea17f]
  4071c5:	int3   
  4071c6:	aaa    
  4071c7:	stc    
  4071c8:	fcmove st,st(0)
  4071ca:	sbb    ebx,esp
  4071cc:	jp     0x4071d8
  4071ce:	jo     0x407166
  4071d0:	les    esi,FWORD PTR [edi+ebx*2]
  4071d3:	mov    ch,BYTE PTR [eax+esi*8+0x7f]
  4071d7:	pop    edx
  4071d8:	idiv   dh
  4071da:	pushf  
  4071db:	(bad)  
  4071dc:	std    
  4071dd:	and    DWORD PTR [esi],esp
  4071df:	jmp    0x40722e
  4071e1:	fcom   DWORD PTR [edx+0x79]
  4071e4:	outs   dx,DWORD PTR ds:[esi]
  4071e5:	cmp    edx,DWORD PTR [ecx-0x41]
  4071e8:	sub    bl,dh
  4071ea:	cmp    edi,DWORD PTR [edi+ecx*2+0x64f95ffc]
  4071f1:	xor    DWORD PTR [edi+eiz*1+0xc],edx
  4071f5:	and    eax,0x14788967
  4071fa:	sub    eax,0x42e95148
  4071ff:	out    0xb5,al
  407201:	fs js  0x407214
  407204:	mov    bl,BYTE PTR [ecx-0x7b880f6b]
  40720a:	cmp    eax,0x7bdd861a
  40720f:	scas   eax,DWORD PTR es:[edi]
  407210:	xor    esi,DWORD PTR [edi]
  407212:	lods   al,BYTE PTR ds:[esi]
  407213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407214:	mov    esp,0x68189b1
  407219:	and    al,0xe0
  40721b:	fwait
  40721c:	pusha  
  40721d:	int    0xc8
  40721f:	mov    ebx,0xb04c2a6
  407224:	pop    esp
  407225:	push   esi
  407226:	es mov esp,0x26430ca0
  40722c:	sar    DWORD PTR [edx-0x2a],1
  40722f:	stc    
  407230:	fidivr WORD PTR [esi]
  407232:	cmp    BYTE PTR [eax],bh
  407234:	repnz test eax,0x8a169e85
  40723a:	les    ebp,FWORD PTR [edi+0x67]
  40723d:	pop    ebx
  40723e:	sub    al,0xb7
  407240:	stos   DWORD PTR es:[edi],eax
  407241:	out    0x3b,eax
  407243:	push   cs
  407244:	adc    DWORD PTR [ebx-0x48],eax
  407247:	popf   
  407248:	cmp    BYTE PTR [esi+edi*4-0x29],bh
  40724c:	inc    esp
  40724d:	xchg   esi,eax
  40724e:	mov    ecx,0xc62c8c9c
  407253:	arpl   dx,ax
  407255:	push   ebp
  407256:	aaa    
  407257:	cmp    BYTE PTR [ebp-0x69],ch
  40725a:	sbb    DWORD PTR [ecx],0xe858589c
  407260:	outs   dx,BYTE PTR ds:[esi]
  407261:	not    ebp
  407263:	cmp    al,0x53
  407265:	add    eax,0xccca039e
  40726a:	mov    WORD PTR [eax-0x2d],fs
  40726d:	xchg   esi,eax
  40726e:	sub    DWORD PTR ds:0x6f5ec0a7,esi
  407274:	xchg   ebx,eax
  407275:	or     BYTE PTR [ebp+0x1cbf2a29],dl
  40727b:	push   eax
  40727c:	aam    0x4f
  40727e:	lahf   
  40727f:	add    al,0x5b
  407281:	add    eax,0x716f79d8
  407286:	fldcw  WORD PTR [eax-0x3b1ce414]
  40728c:	jmp    0x336f:0x299d5897
  407293:	rol    BYTE PTR [eax-0x67e3c5f2],1
  407299:	xchg   ebp,eax
  40729a:	xchg   esp,eax
  40729b:	mov    bl,0x97
  40729d:	xlat   BYTE PTR ds:[ebx]
  40729e:	mov    ecx,0x7f1c0029
  4072a3:	mov    ecx,0x62ef00f9
  4072a8:	jp     0x407285
  4072aa:	stos   DWORD PTR es:[edi],eax
  4072ab:	arpl   WORD PTR [edi],bp
  4072ad:	ret    
  4072ae:	add    esp,DWORD PTR [esi+0x314f6d3d]
  4072b4:	inc    edx
  4072b5:	scas   eax,DWORD PTR es:[edi]
  4072b6:	adc    DWORD PTR [edx],edx
  4072b8:	lahf   
  4072b9:	clc    
  4072ba:	ror    ecx,0x58
  4072bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072be:	sub    cl,BYTE PTR [eax]
  4072c0:	xchg   ebp,eax
  4072c1:	mov    ecx,0xb1d898ac
  4072c6:	jnp    0x407263
  4072c8:	inc    esi
  4072c9:	aad    0x5
  4072cb:	daa    
  4072cc:	sbb    al,0xe7
  4072ce:	mov    al,0xe7
  4072d0:	clc    
  4072d1:	sub    eax,0x31551c09
  4072d6:	xchg   ebx,eax
  4072d7:	add    edx,edi
  4072d9:	sbb    al,0x62
  4072db:	popf   
  4072dc:	rcr    DWORD PTR [ecx],1
  4072de:	aaa    
  4072df:	dec    esi
  4072e0:	imul   ebx,DWORD PTR es:[esi-0xc],0x9e9135f5
  4072e8:	imul   edi,DWORD PTR [edi+0x556d9691],0x7515918f
  4072f2:	mov    ebp,0x51571ef2
  4072f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f8:	shr    bl,0xe
  4072fb:	and    al,0x88
  4072fd:	mov    al,0x25
  4072ff:	stos   BYTE PTR es:[edi],al
  407300:	out    0x27,eax
  407302:	icebp  
  407303:	hlt    
  407304:	hlt    
  407305:	sbb    esp,DWORD PTR [eax-0x66738533]
  40730b:	mov    bl,0x99
  40730d:	inc    edx
  40730e:	ins    BYTE PTR es:[edi],dx
  40730f:	push   esp
  407310:	or     esi,DWORD PTR ds:0x3177226b
  407316:	jb     0x407373
  407318:	xchg   edx,eax
  407319:	jmp    0xe3538640
  40731e:	pop    esi
  40731f:	nop    DWORD PTR [ecx]
  407322:	sub    eax,0x76a5a9e
  407327:	add    DWORD PTR [edx],0x11e0c925
  40732d:	inc    edi
  40732e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40732f:	les    ebx,FWORD PTR [edi-0x42]
  407332:	mov    ds:0xca9ac31c,eax
  407337:	and    eax,0xfe1c9540
  40733c:	out    0x7f,al
  40733e:	clc    
  40733f:	ja     0x407339
  407341:	push   ss
  407342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407343:	push   ecx
  407344:	mul    dl
  407346:	call   0xb781:0x596e7818
  40734d:	(bad)  
  40734e:	(bad)  
  40734f:	fldcw  WORD PTR [ecx-0x154bc870]
  407355:	dec    edx
  407356:	push   esi
  407357:	inc    ecx
  407358:	(bad)  
  407359:	call   0xae8f317d
  40735e:	leave  
  40735f:	imul   esi,edx,0xffffffae
  407362:	les    ecx,FWORD PTR [ecx-0x40206482]
  407368:	mov    ah,0xc9
  40736a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736b:	sub    edi,esi
  40736d:	(bad)  
  40736e:	cli    
  40736f:	imul   ebx,DWORD PTR es:[esi+0x4e42191f],0x93839aeb
  40737a:	scas   al,BYTE PTR es:[edi]
  40737b:	mov    ch,0xc9
  40737d:	(bad)  
  40737e:	sbb    edi,DWORD PTR [edi+0x62497d81]
  407384:	(bad)  
  407385:	(bad)  
  407386:	mov    edx,0x268cdcc5
  40738b:	cli    
  40738c:	(bad)  
  40738e:	enter  0xc41b,0x80
  407392:	jno    0x407405
  407394:	cmp    BYTE PTR [eax],bl
  407396:	adc    edi,DWORD PTR [ecx-0x3e]
  407399:	cld    
  40739a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739b:	stc    
  40739c:	and    ecx,DWORD PTR [ebx]
  40739e:	repz jecxz 0x4073e1
  4073a1:	push   edx
  4073a2:	cmp    al,0x62
  4073a4:	mov    eax,0xa4982550
  4073a9:	push   es
  4073aa:	pop    es
  4073ab:	out    0x85,al
  4073ad:	(bad)  
  4073ae:	imul   ecx,DWORD PTR [edx+edx*1+0x7d],0xc84921b0
  4073b6:	shl    BYTE PTR [esi+0x400c173a],1
  4073bc:	and    BYTE PTR [esi+edx*2],bl
  4073bf:	test   DWORD PTR [esi+ebp*2-0x2d],0x2a203b66
  4073c7:	cli    
  4073c8:	sub    BYTE PTR [ecx+0x31],ah
  4073cb:	mov    WORD PTR [edi],?
  4073cd:	daa    
  4073ce:	push   edx
  4073cf:	mov    al,ds:0x902d83c2
  4073d4:	rcl    DWORD PTR [eax+0x26e72b27],1
  4073da:	stos   DWORD PTR es:[edi],eax
  4073db:	in     eax,dx
  4073dc:	jmp    0xabae29fc
  4073e1:	add    eax,0xbbf46290
  4073e6:	out    dx,al
  4073e7:	neg    DWORD PTR [ecx-0x5c]
  4073ea:	hlt    
  4073eb:	dec    edx
  4073ec:	adc    ah,dh
  4073ee:	aam    0x98
  4073f0:	mov    BYTE PTR [ecx],al
  4073f2:	mov    esi,0xda62da22
  4073f7:	sbb    BYTE PTR [ebp+edi*1-0x62],0xdb
  4073fc:	push   edx
  4073fd:	js     0x4073d0
  4073ff:	dec    edx
  407400:	inc    edx
  407401:	jae    0x407441
  407403:	(bad)  
  407404:	aam    0xd4
  407406:	push   eax
  407407:	aad    0x55
  407409:	pop    esp
  40740a:	das    
  40740b:	mov    dh,BYTE PTR [edx+0x59]
  40740e:	mov    esp,0x91276c8e
  407413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407414:	sbb    dh,BYTE PTR [ecx+0x42]
  407417:	out    dx,al
  407418:	retf   
  407419:	rcr    DWORD PTR [ecx+0x4205ffc2],0x14
  407420:	xchg   ecx,eax
  407421:	jb     0x40747a
  407423:	outs   dx,BYTE PTR ds:[esi]
  407424:	sbb    ch,dl
  407426:	jbe    0x40740b
  407428:	mov    esp,DWORD PTR [ecx-0x26524322]
  40742e:	pop    es
  40742f:	push   ds
  407430:	sub    eax,0xa98020ab
  407435:	mov    al,0x3
  407437:	mov    dl,0x48
  407439:	add    al,0x6
  40743b:	pop    eax
  40743c:	or     eax,0x33587ed
  407441:	push   cs
  407442:	mov    dl,0x4e
  407444:	xchg   DWORD PTR [edi],esp
  407446:	cmp    al,0x50
  407448:	int    0x64
  40744a:	out    0x33,al
  40744c:	je     0x40748f
  40744e:	adc    eax,0x84e89626
  407453:	in     al,0xb3
  407455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407456:	out    dx,eax
  407457:	sub    eax,0x5dc8d788
  40745c:	adc    ah,BYTE PTR [edi]
  40745e:	jnp    0x40742f
  407460:	push   0x8050aa9
  407465:	mov    edi,0x3a311e81
  40746a:	jne    0x407429
  40746c:	out    dx,eax
  40746d:	xor    DWORD PTR [edi+eax*4+0x0],ebx
  407471:	adc    al,0xa1
  407473:	mov    ds,WORD PTR [eax+0x3aaadf59]
  407479:	dec    edi
  40747a:	fbld   TBYTE PTR ds:0xd28811f8
  407480:	dec    ecx
  407481:	pop    ss
  407482:	loop   0x4074a7
  407484:	sbb    cl,BYTE PTR ds:0xa89276f7
  40748a:	pop    esp
  40748b:	dec    edi
  40748c:	out    dx,eax
  40748d:	stos   BYTE PTR es:[edi],al
  40748e:	cmp    ebx,DWORD PTR [edx-0x51]
  407491:	ja     0x4074ff
  407493:	scas   al,BYTE PTR es:[edi]
  407494:	fs jp  0x4074d5
  407497:	mov    esi,0x3f831319
  40749c:	sbb    ecx,DWORD PTR ds:0xe5f1b439
  4074a2:	pop    ebx
  4074a3:	jns    0x4074ff
  4074a5:	push   eax
  4074a6:	pop    ecx
  4074a7:	dec    ebp
  4074a8:	ss jno 0x4074a0
  4074ab:	lea    ecx,[edx+0x75]
  4074ae:	sbb    cl,BYTE PTR [eax+0x36780b27]
  4074b4:	xor    eax,0xb323653e
  4074b9:	daa    
  4074ba:	sub    BYTE PTR [edx],0x89
  4074bd:	inc    ebx
  4074be:	test   al,0x8f
  4074c0:	jmp    0x2ca1:0x53b345e8
  4074c7:	xor    eax,0x3b4f9f0
  4074cc:	loop   0x4074a3
  4074ce:	or     DWORD PTR [ecx-0xfe842ba],esi
  4074d4:	scas   eax,DWORD PTR es:[edi]
  4074d5:	lea    esi,[esi]
  4074d7:	enter  0xadd8,0x36
  4074db:	leave  
  4074dc:	icebp  
  4074dd:	jae    0x4074b8
  4074df:	addr16 iret 
  4074e1:	cld    
  4074e2:	or     BYTE PTR ds:[esi],bl
  4074e5:	dec    esi
  4074e6:	adc    al,0x8e
  4074e8:	fsub   st,st(3)
  4074ea:	(bad)  
  4074eb:	fisubr WORD PTR [ecx+eax*8+0x30]
  4074ef:	dec    ebp
  4074f0:	out    dx,al
  4074f1:	mov    esp,0x1f1f28ea
  4074f6:	jle    0x40753b
  4074f8:	mov    ecx,0xf5323624
  4074fd:	fimul  DWORD PTR ds:0x566169de
  407503:	ret    
  407504:	mov    ah,0x20
  407506:	test   esp,0x33f43e1c
  40750c:	pop    edi
  40750d:	jmp    0xa47f0207
  407512:	sahf   
  407513:	ss jecxz 0x407516
  407516:	adc    edi,edi
  407518:	xchg   DWORD PTR [eax+0x7feb93d8],ebp
  40751e:	dec    edx
  40751f:	push   edx
  407520:	cli    
  407521:	pause  
  407523:	retf   0xbc0f
  407526:	gs (bad) 
  407528:	(bad)  [edi-0x10]
  40752b:	or     DWORD PTR [edx+edi*2],ebp
  40752e:	popf   
  40752f:	loop   0x40751a
  407531:	push   ds
  407532:	sbb    bh,BYTE PTR [edi+0x3a]
  407535:	hlt    
  407536:	jmp    0xd77f:0x55fa8727
  40753d:	lahf   
  40753e:	adc    al,BYTE PTR [ecx]
  407540:	pushf  
  407541:	xor    ah,BYTE PTR ds:0xc6805cfb
  407547:	mov    WORD PTR [ebx+0x19985384],?
  40754d:	push   es
  40754e:	int3   
  40754f:	jnp    0x4074ed
  407551:	jecxz  0x4074f3
  407553:	mov    DWORD PTR [esi],esi
  407555:	pop    edx
  407556:	add    al,BYTE PTR [esi-0x16e3c84c]
  40755c:	call   0x4eb4:0x9d801d58
  407563:	cs mov edi,0xc3f7014
  407569:	mov    BYTE PTR [eax-0x263a6b15],dl
  40756f:	dec    esp
  407570:	mul    DWORD PTR [ebp+0x6080327e]
  407576:	(bad)  
  407578:	xlat   BYTE PTR ds:[ebx]
  407579:	out    0xc5,eax
  40757b:	sbb    eax,0xff31cbd2
  407580:	xchg   DWORD PTR [eax+0x321055e0],ebp
  407586:	imul   ecx,eax,0x8994040d
  40758c:	push   0x14
  40758e:	cwde   
  40758f:	mov    WORD PTR [ecx],ds
  407591:	getsec 
  407593:	nop
  407594:	scas   eax,DWORD PTR es:[edi]
  407595:	aaa    
  407596:	aas    
  407597:	dec    eax
  407598:	adc    eax,DWORD PTR [edi+0x5a90783d]
  40759e:	dec    ebp
  40759f:	fidiv  WORD PTR [ebx]
  4075a1:	push   ss
  4075a2:	out    0xd4,eax
  4075a4:	outs   dx,BYTE PTR ds:[esi]
  4075a5:	pop    edx
  4075a6:	xlat   BYTE PTR ds:[ebx]
  4075a7:	ins    BYTE PTR es:[edi],dx
  4075a8:	xchg   edi,eax
  4075a9:	push   ebx
  4075aa:	inc    cx
  4075ac:	adc    ebx,ebp
  4075ae:	scas   eax,DWORD PTR es:[edi]
  4075af:	imul   edi,DWORD PTR [ecx],0xc62ed367
  4075b5:	fld    QWORD PTR [eax]
  4075b7:	jnp    0x407626
  4075b9:	cmp    al,0xa5
  4075bb:	out    dx,al
  4075bc:	pop    ds
  4075bd:	mov    DWORD PTR [ebp+eiz*8-0x60b21236],ebp
  4075c4:	xchg   ebx,eax
  4075c5:	imul   ecx,edx,0xfffffff5
  4075c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075c9:	mov    BYTE PTR [esi+0x576bbaa9],al
  4075cf:	lods   eax,DWORD PTR ds:[esi]
  4075d0:	jge    0x407571
  4075d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d3:	mov    edx,0x1007e684
  4075d8:	sbb    ch,BYTE PTR fs:[esp+eax*4]
  4075dc:	xchg   edx,edi
  4075de:	push   ebx
  4075df:	mov    BYTE PTR ss:[esi],al
  4075e2:	lea    esi,[edi+0x23c3281c]
  4075e8:	cmp    BYTE PTR [eax+ebp*1+0x4d],bl
  4075ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ed:	adc    cl,BYTE PTR [ecx-0x3ca3c8f0]
  4075f3:	cmp    edi,edx
  4075f5:	lea    eax,[edx+0x7b]
  4075f8:	lds    esp,FWORD PTR [ecx]
  4075fa:	add    dh,BYTE PTR [eax+0x37]
  4075fd:	sbb    DWORD PTR [esi],ebp
  4075ff:	adc    BYTE PTR [eax+esi*2-0x90ba240],cl
  407606:	mov    ch,0xde
  407608:	cmp    ebp,DWORD PTR [ebx]
  40760a:	fidivr WORD PTR [edi-0x6470c1]
  407610:	push   ebx
  407611:	ja     0x4075bb
  407613:	outs   dx,DWORD PTR ds:[esi]
  407614:	rcr    ch,cl
  407616:	adc    ebx,0xffffffe1
  407619:	jns    0x407646
  40761b:	push   es
  40761c:	add    bl,BYTE PTR [edx+eiz*4-0x1a55ae0c]
  407623:	out    dx,al
  407624:	mov    dl,0xe3
  407626:	and    edx,DWORD PTR ds:0x3b8a8dd
  40762c:	cmp    eax,0xbaf686
  407631:	mov    ds:0x1257d602,eax
  407636:	test   dl,ch
  407638:	dec    edi
  407639:	xchg   DWORD PTR [edi+0x48],eax
  40763c:	pop    edi
  40763d:	fnstenv [eax]
  40763f:	retf   
  407640:	mov    eax,0x99edb5b2
  407645:	xchg   edi,eax
  407646:	mov    ebp,0xb23eeab7
  40764b:	or     eax,0xb4490e97
  407650:	add    ebx,esp
  407652:	and    dh,BYTE PTR [ebx]
  407654:	int    0x3f
  407656:	loopne 0x40766c
  407658:	and    ah,BYTE PTR [eax]
  40765a:	gs test al,0xea
  40765d:	dec    ebx
  40765e:	int    0xf3
  407660:	sbb    DWORD PTR [edx],ecx
  407662:	pusha  
  407663:	sbb    BYTE PTR [eax-0x13],dh
  407666:	enter  0x9dae,0x34
  40766a:	push   ds
  40766b:	cmp    al,0xe
  40766d:	popf   
  40766e:	and    DWORD PTR [ecx],ebx
  407670:	xor    ah,ah
  407672:	jae    0x407650
  407674:	adc    BYTE PTR [edx-0x23662022],dh
  40767a:	fwait
  40767b:	mov    ah,ch
  40767d:	xchg   BYTE PTR [ecx+0x7a0e06b7],ch
  407683:	or     dh,0x74
  407686:	in     al,0x8c
  407688:	sbb    BYTE PTR [ecx-0x57abb67e],0x9f
  40768f:	addr16 inc eax
  407691:	cmp    edi,DWORD PTR [eax+0x2d983394]
  407697:	call   0x359847d
  40769c:	pop    ecx
  40769d:	xchg   BYTE PTR [esi],bl
  40769f:	mov    ah,0x40
  4076a1:	shl    edi,1
  4076a3:	jecxz  0x40768f
  4076a5:	mov    dh,0xc2
  4076a7:	inc    eax
  4076a8:	cmp    ebp,DWORD PTR [ecx-0x21c738a2]
  4076ae:	push   ecx
  4076af:	stos   BYTE PTR es:[edi],al
  4076b0:	sbb    eax,0xca77dc46
  4076b5:	rol    DWORD PTR [edx],0x7e
  4076b8:	dec    esi
  4076b9:	xchg   edx,eax
  4076ba:	stos   BYTE PTR es:[edi],al
  4076bb:	mov    dh,0x3e
  4076bd:	fld    QWORD PTR [edx]
  4076bf:	pusha  
  4076c0:	mov    ebx,0x3740cbcd
  4076c5:	ret    0x6c5c
  4076c8:	push   es
  4076c9:	mov    al,0x62
  4076cb:	bound  edx,QWORD PTR [ebp+0x22]
  4076ce:	int3   
  4076cf:	jae    0x407711
  4076d1:	sahf   
  4076d2:	lods   al,BYTE PTR ds:[esi]
  4076d3:	stc    
  4076d4:	xchg   edx,eax
  4076d5:	mov    bh,0x30
  4076d7:	inc    eax
  4076d8:	or     al,0x13
  4076da:	sbb    eax,0xd241fcde
  4076df:	mov    eax,ds:0xe6e2e256
  4076e4:	cmp    ecx,DWORD PTR [ebp+edx*4+0x627a7406]
  4076eb:	shr    DWORD PTR [eax-0x4e],1
  4076ee:	or     eax,DWORD PTR [eax+0x72]
  4076f1:	out    dx,eax
  4076f2:	nop
  4076f3:	(bad)  [edx-0x3a32cd17]
  4076f9:	sbb    eax,0xa1a2011e
  4076fe:	mov    dl,0x83
  407700:	in     al,dx
  407701:	pop    edi
  407702:	jl     0x407782
  407704:	scas   eax,DWORD PTR es:[edi]
  407705:	sbb    ebp,DWORD PTR [edx+0x11]
  407708:	pushf  
  407709:	mov    eax,ds:0x4c26a25d
  40770e:	fwait
  40770f:	adc    al,0x52
  407711:	icebp  
  407712:	leave  
  407713:	xchg   edi,eax
  407714:	out    dx,al
  407715:	lock add dh,BYTE PTR [edi+0x57957607]
  40771c:	iret   
  40771d:	(bad)  
  40771e:	adc    DWORD PTR [ebx-0x9],edi
  407721:	js     0x4076f3
  407723:	and    BYTE PTR [ecx+0x61],dh
  407726:	push   ebx
  407727:	call   0x3f154f45
  40772c:	fcom   DWORD PTR [eax+0x63]
  40772f:	mov    ch,0x94
  407731:	(bad)  
  407733:	mov    edx,0x1d6531a9
  407738:	add    BYTE PTR [esi+0x6f],cl
  40773b:	sbb    DWORD PTR [ecx+0x6c],0xffffffba
  40773f:	and    eax,0x8b8beb71
  407744:	xor    ebp,esp
  407746:	bound  edi,QWORD PTR [ebp-0x5beb8499]
  40774c:	ins    BYTE PTR es:[edi],dx
  40774d:	jae    0x407786
  40774f:	dec    edx
  407750:	je     0x407792
  407752:	cld    
  407753:	dec    esi
  407754:	fcom   DWORD PTR [eax-0x4b]
  407757:	cmp    eax,0xa92a12be
  40775c:	lahf   
  40775d:	(bad)  [edi]
  40775f:	cmp    DWORD PTR [ebx+0x5c487a15],edi
  407765:	push   esp
  407766:	jg     0x4077d1
  407768:	and    DWORD PTR [ecx+0x33],ebp
  40776b:	dec    ax
  40776d:	pop    ecx
  40776e:	stos   BYTE PTR es:[edi],al
  40776f:	(bad)  [esi-0x50]
  407772:	mov    ecx,0xcf836125
  407777:	xchg   edi,eax
  407778:	dec    ebx
  407779:	rol    DWORD PTR [eax-0x11042de9],cl
  40777f:	push   0x73bc4a66
  407784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407785:	add    ecx,DWORD PTR [eax-0x75]
  407788:	pop    esp
  407789:	aam    0xb3
  40778b:	out    dx,eax
  40778c:	clc    
  40778d:	into   
  40778e:	mov    eax,0x5741989a
  407793:	in     al,dx
  407794:	mov    edi,0xce7feceb
  407799:	out    0x31,al
  40779b:	call   0xed30:0x137aedbc
  4077a2:	mov    DWORD PTR [edi-0x547da7a4],edi
  4077a8:	or     eax,0x308100d0
  4077ad:	daa    
  4077ae:	popa   
  4077af:	inc    esp
  4077b0:	fwait
  4077b1:	and    dh,ch
  4077b3:	adc    al,0x2d
  4077b5:	in     eax,0xc5
  4077b7:	dec    eax
  4077b8:	and    eax,0x742cb118
  4077bd:	bound  eax,QWORD PTR [edi+esi*1-0x5ebb0411]
  4077c4:	jmp    0x407824
  4077c6:	mov    edx,0x3e8ed629
  4077cb:	cli    
  4077cc:	xchg   edi,eax
  4077cd:	and    ah,BYTE PTR [eax+0x1c]
  4077d0:	mov    ch,0x6c
  4077d2:	mov    ecx,0xba8c2aa2
  4077d7:	xor    DWORD PTR [ebx],edx
  4077d9:	scas   al,BYTE PTR es:[edi]
  4077da:	iret   
  4077db:	mov    eax,ds:0xdb3b7666
  4077e0:	shl    BYTE PTR [edx+0x35],1
  4077e3:	retf   
  4077e4:	outs   dx,DWORD PTR ds:[esi]
  4077e5:	jg     0x4077f7
  4077e7:	out    dx,eax
  4077e8:	xchg   BYTE PTR [eax+edx*4],bh
  4077eb:	xchg   BYTE PTR [ecx-0x27],cl
  4077ee:	div    DWORD PTR [esi-0x77d0f7e7]
  4077f4:	mov    dh,BYTE PTR [eax]
  4077f6:	mov    eax,0xe82ed9b
  4077fb:	test   eax,0x4908693
  407800:	mov    ah,BYTE PTR [ecx+edi*2+0x7d2a1602]
  407807:	shr    DWORD PTR [ecx-0x22315940],0xc6
  40780e:	or     ecx,DWORD PTR [eax]
  407810:	pop    esi
  407811:	xor    DWORD PTR [edi-0x282304c3],ebx
  407817:	jle    0x4077d4
  407819:	inc    esp
  40781a:	xor    eax,0xc9fd7166
  40781f:	imul   edx,DWORD PTR ds:0x218cc667,0x7bdf7b82
  407829:	cdq    
  40782a:	pop    edi
  40782b:	jle    0x407805
  40782d:	icebp  
  40782e:	icebp  
  40782f:	jecxz  0x407884
  407831:	scas   al,BYTE PTR es:[edi]
  407832:	cmp    DWORD PTR [edi+eiz*1-0x6c5924a7],eax
  407839:	pop    eax
  40783a:	pusha  
  40783b:	repnz stos DWORD PTR es:[edi],eax
  40783d:	xchg   ecx,eax
  40783e:	rep lods eax,DWORD PTR ds:[esi]
  407840:	cmp    BYTE PTR [ebx],dh
  407842:	iret   
  407843:	adc    edi,DWORD PTR [edx-0x60360ec5]
  407849:	jge    0x407813
  40784b:	frstor [ebx+0x12]
  40784e:	push   ss
  40784f:	adc    eax,0xdc319908
  407854:	cwde   
  407855:	jmp    0xab9785a4
  40785a:	icebp  
  40785b:	push   edi
  40785c:	push   eax
  40785d:	jmp    0xf40c:0x8599a725
  407864:	rcl    dl,cl
  407866:	or     ebp,DWORD PTR ds:0xeedabf9d
  40786c:	adc    DWORD PTR [ebp+0x61ae9b78],ebx
  407872:	jmp    0x4078c1
  407874:	and    bl,BYTE PTR [edx+0x389c9db]
  40787a:	imul   ebx,DWORD PTR [edi+0x3d265d17],0xffffffc3
  407881:	jnp    0x407859
  407883:	sub    al,0xf2
  407885:	scas   al,BYTE PTR es:[edi]
  407886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407887:	push   edx
  407888:	pusha  
  407889:	and    bh,dl
  40788b:	jle    0x407880
  40788d:	mov    dl,0x62
  40788f:	push   esi
  407890:	add    DWORD PTR [ebp+eax*2-0xd286896],0xe12195f5
  40789b:	push   esp
  40789c:	xor    al,0x44
  40789e:	push   ebx
  40789f:	add    BYTE PTR [esi],0x67
  4078a2:	push   ebp
  4078a3:	cmc    
  4078a4:	out    0xe8,al
  4078a6:	mov    DWORD PTR ds:0xd6bf106a,ebx
  4078ac:	inc    esp
  4078ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ae:	es gs and al,0x99
  4078b2:	xchg   ebp,eax
  4078b3:	ret    
  4078b4:	ja     0x4078c0
  4078b6:	in     eax,dx
  4078b7:	push   ebx
  4078b8:	rcl    cl,1
  4078ba:	cmp    eax,DWORD PTR [eax+esi*2-0xb]
  4078be:	and    DWORD PTR [edi],esi
  4078c0:	xor    eax,0x373444ab
  4078c5:	xor    bl,BYTE PTR [edi-0x6]
  4078c8:	add    eax,0x1c714605
  4078cd:	jnp    0x407855
  4078cf:	jl     0x407936
  4078d1:	icebp  
  4078d2:	mov    edi,0x1c462d92
  4078d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078d8:	or     al,0x3e
  4078da:	scas   al,BYTE PTR es:[edi]
  4078db:	pop    ebx
  4078dc:	inc    esi
  4078dd:	push   eax
  4078de:	ret    
  4078df:	sbb    dl,BYTE PTR [eax+0x190b92c]
  4078e5:	mov    edi,0xa9547b22
  4078ea:	(bad)  
  4078eb:	jmp    0x6e998d92
  4078f0:	pop    es
  4078f1:	lock pop es
  4078f3:	add    ch,ch
  4078f5:	test   BYTE PTR [ebp-0x6e],dh
  4078f8:	sub    DWORD PTR [edi],edx
  4078fa:	mov    cl,0x4f
  4078fc:	push   es
  4078fd:	std    
  4078fe:	mov    ch,0x2b
  407900:	outs   dx,DWORD PTR ds:[esi]
  407901:	aas    
  407902:	or     BYTE PTR [esi-0x398bf016],bl
  407908:	pop    esp
  407909:	cmp    DWORD PTR [ecx+ecx*2],esp
  40790c:	mov    eax,0x6fbaa86a
  407911:	loopne 0x40795a
  407913:	into   
  407914:	dec    ecx
  407915:	retf   0x1a68
  407918:	cmp    al,0xa2
  40791a:	jg     0x40792a
  40791c:	mov    cl,0x62
  40791e:	icebp  
  40791f:	stos   BYTE PTR es:[edi],al
  407920:	test   DWORD PTR [ebp+0x1c],eax
  407923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407924:	enter  0xab5e,0x7
  407928:	cmp    BYTE PTR [ecx-0x4e2de1d7],dl
  40792e:	aaa    
  40792f:	hlt    
  407930:	rcl    dl,0x2c
  407933:	jae    0x407970
  407935:	loope  0x40799e
  407937:	jb     0x40793c
  407939:	(bad)  
  40793a:	iret   
  40793b:	(bad)  
  40793c:	call   0x5950:0x127ccf26
  407943:	xchg   ebx,eax
  407944:	add    eax,DWORD PTR ds:0xeb44ce2a
  40794a:	cmp    cl,BYTE PTR ds:0xa30ac102
  407950:	and    eax,0x9d205813
  407955:	mov    dh,BYTE PTR [edx+0x4b258e76]
  40795b:	push   0x3b
  40795d:	sbb    DWORD PTR [edi+0x5ccd1611],eax
  407963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407964:	cmp    al,0xad
  407966:	add    al,0x7
  407968:	dec    esp
  407969:	shl    bl,0x9
  40796c:	xchg   DWORD PTR [eax],eax
  40796e:	xchg   edx,eax
  40796f:	imul   edi,esp,0xef541fc1
  407975:	das    
  407976:	push   esi
  407977:	dec    ecx
  407978:	or     al,ch
  40797a:	and    al,0x48
  40797c:	inc    ebx
  40797d:	jns    0x407917
  40797f:	sbb    ebp,ebx
  407981:	fild   WORD PTR [esi-0x59764fd6]
  407987:	dec    edx
  407988:	(bad)  
  407989:	in     eax,dx
  40798a:	xor    ecx,DWORD PTR [eax+0x2c14d905]
  407990:	ins    DWORD PTR es:[edi],dx
  407991:	rcl    bl,cl
  407993:	sti    
  407994:	cmp    bh,dh
  407996:	jge    0x4079d5
  407998:	rcr    BYTE PTR [ebp+ebp*1-0x22],1
  40799c:	fsubr  DWORD PTR [ebx+0x2eb35b0a]
  4079a2:	loop   0x4079e8
  4079a4:	xchg   ebx,eax
  4079a5:	xchg   edi,eax
  4079a6:	inc    esi
  4079a7:	jno    0x407a21
  4079a9:	xchg   ecx,eax
  4079aa:	(bad)  
  4079ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ac:	dec    esi
  4079ad:	jbe    0x4079ed
  4079af:	mov    al,0x23
  4079b1:	nop
  4079b2:	popa   
  4079b3:	cld    
  4079b4:	add    al,0x9a
  4079b6:	adc    ch,dl
  4079b8:	xor    al,0x6a
  4079ba:	test   BYTE PTR [ebp-0x35],0x2f
  4079be:	xchg   esp,eax
  4079bf:	add    DWORD PTR [ebx],ecx
  4079c1:	scas   al,BYTE PTR es:[edi]
  4079c2:	out    0x27,al
  4079c4:	out    dx,al
  4079c5:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4079c7:	push   ebx
  4079c8:	xor    cl,BYTE PTR [ecx-0x745734eb]
  4079ce:	mov    edx,0x56756f9b
  4079d3:	das    
  4079d4:	sbb    esi,ecx
  4079d6:	retf   0x4c68
  4079d9:	data16 scas al,BYTE PTR es:[edi]
  4079db:	inc    edi
  4079dc:	or     al,0x71
  4079de:	mov    dl,0x57
  4079e0:	jmp    0xbaaa0043
  4079e5:	(bad)  
  4079e6:	sahf   
  4079e7:	mov    ss,WORD PTR [eax]
  4079e9:	jb     0x4079eb
  4079eb:	mov    ebp,0x36533a1e
  4079f0:	and    BYTE PTR [edi-0x3099e9f3],dh
  4079f6:	in     eax,dx
  4079f7:	lock xor ch,BYTE PTR [ebx+edx*4]
  4079fb:	adc    DWORD PTR [esi],ecx
  4079fd:	jmp    0x407a7b
  4079ff:	jge    0x407a6c
  407a01:	cmp    eax,0xa55c7f8c
  407a06:	mov    dh,0x15
  407a08:	in     al,dx
  407a09:	in     al,0xa3
  407a0b:	call   0x65d9:0x2da44508
  407a12:	in     eax,dx
  407a13:	cmp    DWORD PTR [ecx+ebx*1],eax
  407a16:	fidivr WORD PTR [esi]
  407a18:	sti    
  407a19:	(bad)  
  407a1a:	xlat   BYTE PTR ds:[ebx]
  407a1b:	sub    esi,edi
  407a1d:	cwde   
  407a1e:	cmp    BYTE PTR [ecx],cl
  407a20:	jg     0x4079a2
  407a22:	aad    0x72
  407a24:	(bad)  
  407a25:	sub    dh,BYTE PTR [esi+edi*4-0x69]
  407a29:	fistp  QWORD PTR [ecx+0x56]
  407a2c:	jecxz  0x4079e0
  407a2e:	cmp    al,0xff
  407a30:	out    0xf,al
  407a32:	push   esi
  407a33:	test   al,0xb9
  407a35:	push   edi
  407a36:	and    eax,0xd7cf472c
  407a3b:	scas   al,BYTE PTR es:[edi]
  407a3c:	mov    eax,ds:0x9aafae74
  407a41:	imul   edi,DWORD PTR [ebx+0x1e400ed3],0xffffffb2
  407a48:	mov    esi,0x9a92fad6
  407a4d:	lods   al,BYTE PTR ds:[esi]
  407a4e:	loopne 0x4079f3
  407a50:	lock (bad) 
  407a52:	aad    0x7b
  407a54:	bound  ecx,QWORD PTR [ecx+0x23]
  407a57:	ss add al,0x23
  407a5a:	lods   eax,DWORD PTR ds:[esi]
  407a5b:	dec    ebp
  407a5c:	mov    ch,0x52
  407a5e:	pusha  
  407a5f:	(bad)
  407a63:	arpl   WORD PTR [ebp+esi*8-0x40e61ce],dx
  407a6a:	xchg   esi,eax
  407a6b:	ret    
  407a6c:	pushf  
  407a6d:	sbb    al,0x3d
  407a6f:	int3   
  407a70:	push   ebp
  407a71:	outs   dx,BYTE PTR ds:[esi]
  407a72:	pop    ecx
  407a73:	xchg   ecx,eax
  407a74:	iret   
  407a75:	call   0x1aff29fb
  407a7a:	sahf   
  407a7b:	add    DWORD PTR [edi-0x7ed9dffd],edi
  407a81:	add    ebp,DWORD PTR [edi]
  407a83:	jnp    0x407a6c
  407a85:	cwde   
  407a86:	cmp    cl,bh
  407a88:	push   ebp
  407a89:	pop    ebx
  407a8a:	mov    ebp,0x2fdbc5e9
  407a8f:	push   edx
  407a90:	outs   dx,BYTE PTR ds:[esi]
  407a91:	dec    eax
  407a92:	test   BYTE PTR [ebp+0x45535f73],ch
  407a98:	inc    edx
  407a99:	mov    ecx,0xf84a6daa
  407a9e:	cwde   
  407a9f:	es sbb edi,ecx
  407aa2:	jnp    0x407a9f
  407aa4:	or     ebx,0x3a
  407aa7:	stos   DWORD PTR es:[edi],eax
  407aa8:	int3   
  407aa9:	out    0xa3,al
  407aab:	jb     0x407ae4
  407aad:	data16 dec BYTE PTR [ecx+0x25]
  407ab1:	xchg   ebp,eax
  407ab2:	popa   
  407ab3:	ss retf 
  407ab5:	call   0xc669da36
  407aba:	and    eax,0xf987ef4c
  407abf:	je     0x407a66
  407ac1:	aaa    
  407ac2:	ss call 0x5451:0x4b59481c
  407aca:	cmovo  esp,DWORD PTR [esi+edi*1]
  407ace:	xor    esi,DWORD PTR [ebx-0x37]
  407ad1:	jle    0x407a8d
  407ad3:	pop    ebx
  407ad4:	jle    0x407a78
  407ad6:	aaa    
  407ad7:	jo     0x407aa5
  407ad9:	cmp    DWORD PTR [ecx+0x2],ebx
  407adc:	cmp    esi,DWORD PTR [esp+eax*1-0x7a]
  407ae0:	call   FWORD PTR [ecx]
  407ae2:	jg     0x407b4c
  407ae4:	ja     0x407a95
  407ae6:	push   ds
  407ae7:	dec    ebx
  407ae8:	inc    ebx
  407ae9:	(bad)  
  407aea:	jbe    0x407b2d
  407aec:	or     al,0x79
  407aee:	xor    dl,BYTE PTR ds:0x990efc41
  407af4:	pop    ds
  407af5:	bound  ecx,QWORD PTR [edi+ebp*4+0x69794861]
  407afc:	cwde   
  407afd:	xor    DWORD PTR [edx+0x311259e3],0x63a7aa81
  407b07:	dec    esp
  407b08:	sub    eax,0xfc011aa5
  407b0d:	mov    ebx,0x9439b9ba
  407b12:	data16 sbb BYTE PTR [ecx-0x61dafcf1],bl
  407b19:	std    
  407b1a:	jbe    0x407ad1
  407b1c:	push   0xa288961b
  407b21:	or     eax,0x2f0ad4f4
  407b26:	xchg   edi,eax
  407b27:	daa    
  407b28:	xchg   ebp,eax
  407b29:	aas    
  407b2a:	sub    esi,DWORD PTR [ebx]
  407b2c:	jne    0x407b45
  407b2e:	cld    
  407b2f:	dec    esp
  407b30:	mov    dl,0xd0
  407b32:	xchg   edx,eax
  407b33:	lods   al,BYTE PTR ds:[esi]
  407b34:	popf   
  407b35:	jg     0x407ad0
  407b37:	ficom  DWORD PTR [edx+0x15]
  407b3a:	rol    DWORD PTR [ebx],0xa8
  407b3d:	rcr    bh,cl
  407b3f:	aas    
  407b40:	dec    esi
  407b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b42:	sub    eax,0x499f7f9
  407b47:	xchg   ebx,eax
  407b48:	jnp    0x407ad0
  407b4a:	jne    0x407bb5
  407b4c:	sbb    BYTE PTR [ebp-0x148d3cd5],0x62
  407b53:	pop    esi
  407b54:	out    dx,eax
  407b55:	adc    ebp,DWORD PTR [eax]
  407b57:	mov    ds:0xfb347466,eax
  407b5c:	mov    ds:0xd0a0fc17,al
  407b61:	mov    ds:0xf7a56431,eax
  407b66:	sbb    DWORD PTR [ebp-0x1846b215],ecx
  407b6c:	lods   eax,DWORD PTR ds:[esi]
  407b6d:	jecxz  0x407b73
  407b6f:	mov    ecx,0x5a886a9e
  407b74:	mov    eax,0x3ee7f8ea
  407b79:	test   BYTE PTR [edx-0x61909668],cl
  407b7f:	scas   al,BYTE PTR es:[edi]
  407b80:	pop    ebp
  407b81:	stos   DWORD PTR es:[edi],eax
  407b82:	cmp    BYTE PTR [ebx],0x47
  407b85:	ds mov al,0xb6
  407b88:	jnp    0x407b0d
  407b8a:	into   
  407b8b:	or     BYTE PTR [edx-0x29],dh
  407b8e:	stos   DWORD PTR es:[edi],eax
  407b8f:	push   edx
  407b90:	int    0xfe
  407b92:	test   al,0xd3
  407b94:	pop    esi
  407b95:	shl    DWORD PTR [esp+ebx*1+0x47a7b229],0x2a
  407b9d:	mov    DWORD PTR [eax-0x26921fa8],esi
  407ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ba4:	mov    esp,0x7abf33ac
  407ba9:	mov    cs,WORD PTR [edx]
  407bab:	test   eax,0x5cb6e4b6
  407bb0:	mov    bh,0x47
  407bb2:	xchg   ebp,eax
  407bb3:	sti    
  407bb4:	ins    BYTE PTR es:[edi],dx
  407bb5:	push   edx
  407bb6:	imul   ecx,DWORD PTR [ebp+0x76],0xffffffa7
  407bba:	out    0x82,eax
  407bbc:	jo     0x407c21
  407bbe:	call   0xf40:0xfa9528f0
  407bc5:	inc    ebp
  407bc6:	(bad)  
  407bc7:	fsubr  DWORD PTR [ebp-0xf]
  407bca:	je     0x407b7a
  407bcc:	and    bl,BYTE PTR [ebp+0x5304176c]
  407bd2:	fsubp  st(5),st
  407bd4:	mov    eax,0xf42c75c3
  407bd9:	test   al,0xe2
  407bdb:	add    dl,BYTE PTR [ecx*2+0x7fc093e3]
  407be2:	sbb    BYTE PTR [edx-0x35],0x28
  407be6:	daa    
  407be7:	ins    BYTE PTR es:[edi],dx
  407be8:	fmul   QWORD PTR [ecx]
  407bea:	(bad)  
  407beb:	fcom   QWORD PTR [esi]
  407bed:	test   eax,0x21df1a03
  407bf2:	jmp    0x407bca
  407bf4:	out    dx,eax
  407bf5:	inc    edi
  407bf6:	pop    edx
  407bf7:	std    
  407bf8:	cmp    eax,0xc4ff0267
  407bfd:	xchg   esp,eax
  407bfe:	push   ebp
  407bff:	xchg   esi,eax
  407c00:	retf   
  407c01:	rcr    BYTE PTR [edx],0x22
  407c04:	adc    eax,0xd8f7deb6
  407c09:	xor    edi,eax
  407c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0c:	nop
  407c0d:	cmp    edx,DWORD PTR [ebp+0x3bd0f7a2]
  407c13:	and    DWORD PTR [eax+0x3d],eax
  407c16:	push   0xffffffc3
  407c18:	push   cs
  407c19:	scas   eax,DWORD PTR es:[edi]
  407c1a:	fadd   QWORD PTR [ecx+0x25]
  407c1d:	loopne 0x407c0a
  407c1f:	pop    eax
  407c20:	shl    DWORD PTR [ecx],0x4a
  407c23:	or     eax,ebp
  407c25:	into   
  407c26:	call   0xbc63abb9
  407c2b:	retf   0x3e15
  407c2e:	repnz fsub DWORD PTR [ebx-0x5]
  407c32:	arpl   WORD PTR [ebx-0x8],si
  407c35:	cmp    bh,BYTE PTR [edi+0x31bdb0a7]
  407c3b:	call   0x5c8009d0
  407c40:	or     al,0x5f
  407c42:	push   ss
  407c43:	xchg   ebp,eax
  407c44:	pop    esp
  407c45:	int    0x1f
  407c47:	mov    bl,0xc5
  407c49:	sti    
  407c4a:	sbb    ch,BYTE PTR [eax]
  407c4c:	xchg   edi,eax
  407c4d:	retf   0x5357
  407c50:	test   ebx,ebp
  407c52:	mul    DWORD PTR [eax+0x5637be33]
  407c58:	test   DWORD PTR [edi+0x5febc218],edx
  407c5e:	adc    al,0x68
  407c60:	fsubr  QWORD PTR [eax-0x2c]
  407c63:	push   esp
  407c64:	mov    BYTE PTR [eax],dh
  407c66:	adc    eax,0x24093e9
  407c6b:	mov    cl,0xc4
  407c6d:	hlt    
  407c6e:	rcr    ebp,cl
  407c70:	ins    DWORD PTR es:[edi],dx
  407c71:	lahf   
  407c72:	repz mov dh,0xb1
  407c75:	rcl    BYTE PTR [edx-0x43],1
  407c78:	xor    eax,0x8afecdec
  407c7d:	std    
  407c7e:	nop
  407c7f:	idiv   esp
  407c81:	leave  
  407c82:	push   esp
  407c83:	pop    DWORD PTR [ecx+0x2f]
  407c86:	in     eax,dx
  407c87:	and    BYTE PTR [eax+0x5d7fea1d],cl
  407c8d:	mov    edi,0xfea1f74f
  407c92:	sub    ebx,DWORD PTR [ebx]
  407c94:	push   es
  407c95:	fdivr  DWORD PTR [edx+0xf]
  407c98:	iret   
  407c99:	push   ebp
  407c9a:	jbe    0x407c96
  407c9c:	loopne 0x407c69
  407c9e:	push   ds
  407c9f:	cli    
  407ca0:	imul   ebp,DWORD PTR [ebp+0x8],0x4c313c2f
  407ca7:	sahf   
  407ca8:	out    dx,al
  407ca9:	int3   
  407caa:	lods   eax,DWORD PTR ds:[esi]
  407cab:	rol    DWORD PTR ds:0xa7869bd8,cl
  407cb1:	push   ss
  407cb2:	arpl   WORD PTR [ebp+0x44],di
  407cb5:	push   dx
  407cb7:	imul   esp,DWORD PTR [ebx+ebp*4],0x4e82d657
  407cbe:	lock stos DWORD PTR es:[edi],eax
  407cc0:	mov    BYTE PTR [esi+0x1f],al
  407cc3:	xchg   DWORD PTR [eax],eax
  407cc5:	leave  
  407cc6:	pop    edx
  407cc7:	pop    es
  407cc8:	call   0x5a330572
  407ccd:	in     al,dx
  407cce:	mov    ebx,0x230ef1d6
  407cd3:	mov    ds:0xb072b82b,eax
  407cd8:	outs   dx,DWORD PTR ds:[esi]
  407cd9:	sbb    al,0xd1
  407cdb:	mov    bh,0x88
  407cdd:	sbb    al,0x78
  407cdf:	mov    eax,0x524af965
  407ce4:	mov    ebx,0xc3c61328
  407ce9:	cmc    
  407cea:	dec    ecx
  407ceb:	mov    dh,0x1b
  407ced:	pop    ebp
  407cee:	mov    ah,0xa6
  407cf0:	jg     0x407c78
  407cf2:	mov    dh,0x56
  407cf4:	(bad)  
  407cf5:	mov    eax,ds:0x59c41e3a
  407cfa:	in     al,0x2f
  407cfc:	mov    esi,0x6f99a2cb
  407d01:	add    eax,0x6ecfb411
  407d06:	jp     0x407d81
  407d08:	les    esp,FWORD PTR [ebp+0x58]
  407d0b:	xchg   esi,eax
  407d0c:	mov    ds:0xe1001aab,al
  407d11:	mov    ebx,0xa574f10e
  407d16:	push   ebp
  407d17:	mov    esi,fs
  407d19:	adc    ch,BYTE PTR [ecx+0x35]
  407d1c:	xlat   BYTE PTR ds:[ebx]
  407d1d:	hlt    
  407d1e:	shl    ch,cl
  407d20:	xchg   edi,eax
  407d21:	scas   eax,DWORD PTR es:[edi]
  407d22:	ret    
  407d23:	int    0x67
  407d25:	stos   BYTE PTR es:[edi],al
  407d26:	mov    edi,0x4614e743
  407d2b:	mov    bl,BYTE PTR [ebp+0x18436c8e]
  407d31:	idiv   esp
  407d33:	cwde   
  407d34:	and    DWORD PTR [ebx],ebp
  407d36:	pusha  
  407d37:	xor    DWORD PTR [ecx],ecx
  407d39:	test   DWORD PTR [edi+0x26],0x245b5c0b
  407d40:	mov    DWORD PTR [eax+edi*8+0x11],ebx
  407d44:	popa   
  407d45:	out    dx,al
  407d46:	mov    edi,0x36d22f15
  407d4b:	rcl    BYTE PTR [ebx],1
  407d4d:	mov    ch,0x33
  407d4f:	jno    0x407d20
  407d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d52:	int3   
  407d53:	jle    0x407d38
  407d55:	popf   
  407d56:	aad    0x76
  407d58:	jae    0x407d09
  407d5a:	cwde   
  407d5b:	pop    edi
  407d5c:	pop    ds
  407d5d:	sbb    BYTE PTR [edx+edx*8+0x26],ch
  407d61:	mov    ebx,0xf8fdac43
  407d66:	add    bh,BYTE PTR ds:0xc4b50343
  407d6c:	arpl   WORD PTR [esp+0x27ea44ad],si
  407d73:	push   ebp
  407d74:	mov    ah,0x45
  407d76:	test   DWORD PTR [edi-0x46],ebp
  407d79:	add    al,0xbb
  407d7b:	test   BYTE PTR [ebp+ebp*8-0x6],ch
  407d7f:	mov    al,ds:0x503f892f
  407d84:	repz jmp 0x407de3
  407d87:	dec    esi
  407d88:	adc    DWORD PTR [esi+0x6fc3f03e],ebp
  407d8e:	scas   eax,DWORD PTR es:[edi]
  407d8f:	adc    eax,0x7cbe55c
  407d94:	sahf   
  407d95:	or     BYTE PTR [eax+0x65],ah
  407d98:	add    eax,0xcdbb628d
  407d9d:	jl     0x407d86
  407d9f:	mov    ebp,0x94e59a28
  407da4:	mov    ds:0xa9fd743d,al
  407da9:	mov    DWORD PTR [edx-0x9],eax
  407dac:	(bad)  
  407dad:	in     al,dx
  407dae:	jmp    FWORD PTR [esi+edi*8-0x60bf8486]
  407db5:	mov    edi,esp
  407db7:	mov    edi,0xf9422972
  407dbc:	and    ecx,DWORD PTR [eax]
  407dbe:	xchg   edi,eax
  407dbf:	imul   ebx,edi,0xffffff88
  407dc2:	lods   eax,DWORD PTR ds:[esi]
  407dc3:	jb     0x407dbb
  407dc5:	cwde   
  407dc6:	imul   ebp,DWORD PTR [edx+0x29],0xffffffa0
  407dca:	push   0xfffffff0
  407dcc:	mov    gs,ebp
  407dce:	mov    eax,ds:0xcfb529cd
  407dd3:	gs (bad) 
  407dd5:	dec    DWORD PTR [esi]
  407dd7:	xchg   esp,eax
  407dd8:	sub    BYTE PTR [edi-0x15d5e468],0xab
  407ddf:	test   edx,esp
  407de1:	add    dh,ah
  407de3:	push   ss
  407de4:	mov    ebp,0x8d85cb55
  407de9:	in     eax,0x98
  407deb:	in     eax,0xf8
  407ded:	fs out dx,eax
  407def:	push   ecx
  407df0:	or     ebx,eax
  407df2:	out    dx,eax
  407df3:	mov    edx,0xa7163f01
  407df8:	stos   BYTE PTR es:[edi],al
  407df9:	shl    BYTE PTR [esi-0x2f262e09],cl
  407dff:	iret   
  407e00:	arpl   WORD PTR [edi-0xe90f248],cx
  407e06:	mov    WORD PTR [ecx+0x37],es
  407e09:	loopne 0x407e00
  407e0b:	and    DWORD PTR [edx],esi
  407e0d:	pop    esi
  407e0e:	pop    esp
  407e0f:	pop    ss
  407e10:	icebp  
  407e11:	jns    0x407de7
  407e13:	mov    ah,0x2f
  407e15:	ret    0x2b93
  407e18:	pop    ss
  407e19:	cmp    al,0xe
  407e1b:	xchg   esi,eax
  407e1c:	out    dx,al
  407e1d:	lea    esi,[edx]
  407e1f:	push   ds
  407e20:	cmp    ch,BYTE PTR [edx+0x4dab533e]
  407e26:	sbb    dh,ah
  407e28:	cdq    
  407e29:	pop    edi
  407e2a:	mov    WORD PTR [esi],gs
  407e2c:	adc    DWORD PTR [ecx-0x6062b2a3],ebx
  407e32:	sbb    esi,DWORD PTR [ebx+0x79d79e27]
  407e38:	leave  
  407e39:	scas   eax,DWORD PTR es:[edi]
  407e3a:	mov    cl,0x7a
  407e3c:	adc    al,0xe3
  407e3e:	(bad)
  407e41:	xor    BYTE PTR [ebx+0x52ef590c],ch
  407e47:	xchg   ebp,eax
  407e48:	fdiv   DWORD PTR [edi-0x15725464]
  407e4e:	call   0xfe22:0xe7f2c1b4
  407e55:	retf   
  407e56:	xchg   edx,eax
  407e57:	fs pushf 
  407e59:	outs   dx,BYTE PTR ds:[esi]
  407e5a:	push   edx
  407e5b:	call   0x66776f99
  407e60:	jns    0x407e86
  407e62:	jns    0x407e0f
  407e64:	loopne 0x407ea7
  407e66:	call   0x663e:0x624240ab
  407e6d:	jno    0x407df4
  407e6f:	pop    ecx
  407e70:	(bad)  
  407e71:	(bad)  
  407e72:	les    esi,FWORD PTR [ebp+edi*4-0x62]
  407e76:	jmp    0xdd5c:0xb7dc4e0b
  407e7d:	sub    BYTE PTR [edi],al
  407e7f:	and    bl,BYTE PTR [edx+0x4ac4b99e]
  407e85:	nop
  407e86:	aad    0xc2
  407e88:	retf   0x5709
  407e8b:	test   eax,0xf82082d8
  407e90:	repnz xchg ebp,eax
  407e92:	fstp   TBYTE PTR [eax+0x45]
  407e95:	mov    ecx,0x450a3230
  407e9a:	(bad)  
  407e9b:	xlat   BYTE PTR ds:[ebx]
  407e9c:	shl    DWORD PTR [eax-0x17],cl
  407e9f:	and    ebx,edi
  407ea1:	mov    ch,BYTE PTR cs:[esi-0x7b]
  407ea5:	in     al,0xa0
  407ea7:	ss jnp 0x407e7b
  407eaa:	and    eax,0xc3f62ead
  407eaf:	dec    edi
  407eb0:	pusha  
  407eb1:	in     eax,dx
  407eb2:	xchg   esp,eax
  407eb3:	jne    0x407f2f
  407eb5:	int3   
  407eb6:	mov    edx,0xc8c5c4a0
  407ebb:	inc    BYTE PTR [ebx]
  407ebd:	inc    ecx
  407ebe:	push   es
  407ebf:	iret   
  407ec0:	addr16 in eax,0xc1
  407ec3:	mov    esp,0x3b9464be
  407ec8:	lahf   
  407ec9:	jae    0x407f18
  407ecb:	mov    eax,0xd8312fbd
  407ed0:	cwde   
  407ed1:	add    al,0x1e
  407ed3:	frstor [ecx-0x2c]
  407ed6:	in     al,0xf6
  407ed8:	sahf   
  407ed9:	pop    edi
  407eda:	test   BYTE PTR [eax-0x34f981a4],0x32
  407ee1:	(bad)  
  407ee2:	(bad)  
  407ee3:	shl    BYTE PTR [edi],0x3d
  407ee6:	aam    0xc9
  407ee8:	stc    
  407ee9:	cmp    eax,0xc593f49f
  407eee:	out    dx,al
  407eef:	mov    ecx,0xbce24f3a
  407ef4:	inc    edx
  407ef5:	mov    ch,0xa4
  407ef7:	sub    eax,0x7687c688
  407efc:	enter  0xccc8,0x8e
  407f00:	mov    WORD PTR [edx-0x7b],?
  407f03:	je     0x407e93
  407f05:	mov    DWORD PTR [ebx],ecx
  407f07:	adc    bl,BYTE PTR [ecx+0x55e2bd]
  407f0d:	cmc    
  407f0e:	lea    ebp,[eax]
  407f10:	pop    es
  407f11:	clc    
  407f12:	jmp    0x1d646da0
  407f17:	inc    esi
  407f18:	or     eax,0xb8463d2
  407f1d:	xchg   BYTE PTR [ebx],bh
  407f1f:	outs   dx,DWORD PTR ds:[esi]
  407f20:	cdq    
  407f21:	add    DWORD PTR [ecx],esp
  407f23:	fwait
  407f24:	jno    0x407f70
  407f26:	lahf   
  407f27:	and    al,0xfa
  407f29:	xor    eax,0xfbdfb8a1
  407f2e:	dec    ecx
  407f2f:	push   esp
  407f30:	in     al,0x30
  407f32:	mov    ch,0x82
  407f34:	pop    edi
  407f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f36:	mov    bl,0xca
  407f38:	pop    ecx
  407f39:	jle    0x407f2d
  407f3b:	fild   DWORD PTR [ebp-0x7]
  407f3e:	add    al,0x4d
  407f40:	cmc    
  407f41:	jne    0x407f7a
  407f43:	xchg   ecx,eax
  407f44:	pop    ebx
  407f45:	mul    BYTE PTR [esi+esi*4]
  407f48:	add    al,0x43
  407f4a:	push   ebx
  407f4b:	push   ebp
  407f4c:	(bad)  
  407f4e:	mov    ebp,0xcc01e388
  407f53:	pop    ecx
  407f54:	(bad)  
  407f55:	inc    eax
  407f56:	add    ah,bl
  407f58:	ins    DWORD PTR es:[edi],dx
  407f59:	es aas 
  407f5b:	int    0x4e
  407f5d:	arpl   si,di
  407f5f:	dec    ebx
  407f60:	loope  0x407ef2
  407f62:	push   eax
  407f63:	enter  0xfcf1,0x6b
  407f67:	retf   0xdb48
  407f6a:	aas    
  407f6b:	fisttp DWORD PTR [ebx]
  407f6d:	inc    ebp
  407f6e:	out    0xbb,al
  407f70:	push   ds
  407f71:	in     eax,dx
  407f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f73:	das    
  407f74:	jmp    0x407f43
  407f76:	cmc    
  407f77:	mov    esi,0x9f010171
  407f7c:	imul   ebp,DWORD PTR [ebx],0x4f098600
  407f82:	sub    DWORD PTR [ebp-0x60],edi
  407f85:	fnstsw WORD PTR [ebx+0x3c]
  407f88:	loop   0x407f4b
  407f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8b:	jno    0x407fba
  407f8d:	iret   
  407f8e:	xchg   edx,eax
  407f8f:	mov    edx,DWORD PTR [esi+0x17]
  407f92:	mov    ebp,0x50d77e8
  407f97:	xor    bh,bh
  407f99:	retf   
  407f9a:	ret    
  407f9b:	sahf   
  407f9c:	dec    edi
  407f9d:	repnz mov dl,0x7c
  407fa0:	adc    DWORD PTR [esi],esp
  407fa2:	mov    eax,ds:0x9ed8f82d
  407fa7:	dec    ebp
  407fa8:	test   BYTE PTR [si-0x3ee9],dl
  407fad:	data16 int3 
  407faf:	xor    al,0x89
  407fb1:	push   ds
  407fb2:	mov    dl,0xe3
  407fb4:	ret    0x9e09
  407fb7:	lods   eax,DWORD PTR ds:[esi]
  407fb8:	sbb    ebx,esp
  407fba:	add    DWORD PTR [esi-0x4c],ebx
  407fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fbe:	out    dx,eax
  407fbf:	or     al,0x6f
  407fc1:	mov    bl,0xdb
  407fc3:	inc    esp
  407fc4:	or     ecx,DWORD PTR [ecx+0x47]
  407fc7:	pop    es
  407fc8:	sub    al,0xc7
  407fca:	sbb    DWORD PTR [ecx+0x3a],ebx
  407fcd:	loop   0x407fb2
  407fcf:	ret    
  407fd0:	fdivr  QWORD PTR [eax+0x2]
  407fd3:	leave  
  407fd4:	int3   
  407fd5:	mov    BYTE PTR [esi+0x6e],bh
  407fd8:	ds pop eax
  407fda:	ins    BYTE PTR es:[edi],dx
  407fdb:	and    BYTE PTR [ecx-0x59d63445],ch
  407fe1:	push   ds
  407fe2:	or     DWORD PTR [ecx+0x9],0x29
  407fe6:	in     al,dx
  407fe7:	adc    dh,BYTE PTR [ebx+0x68e7dac0]
  407fed:	into   
  407fee:	leave  
  407fef:	mov    bl,0x4b
  407ff1:	mov    bl,0xc8
  407ff3:	dec    ebx
  407ff4:	loopne 0x40803d
  407ff6:	pop    es
  407ff7:	sti    
  407ff8:	sbb    ah,BYTE PTR [esi-0x3f28570f]
  407ffe:	lea    edi,[esi]
  408000:	adc    DWORD PTR [edi],edi
  408002:	push   ebp
  408003:	dec    edx
  408004:	jg     0x407fe8
  408006:	xor    DWORD PTR [ecx-0x5a],ebp
  408009:	and    dh,ch
  40800b:	out    dx,eax
  40800c:	mov    fs,WORD PTR ds:[eax+0x5d]
  408010:	scas   al,BYTE PTR es:[edi]
  408011:	shl    DWORD PTR [edx+0x2b5d52b1],1
  408017:	inc    edx
  408018:	adc    BYTE PTR [ecx-0x45],ah
  40801b:	call   0x626c3a95
  408020:	mov    eax,ds:0xc7c80b45
  408025:	xor    cl,al
  408027:	aad    0x5d
  408029:	inc    esp
  40802a:	mov    BYTE PTR [ebx-0x1321dfa7],dl
  408030:	push   ecx
  408031:	adc    al,0xab
  408033:	and    bl,bl
  408035:	xchg   ebp,eax
  408036:	data16 or al,0xa2
  408039:	jb     0x407fff
  40803b:	inc    eax
  40803c:	mov    cl,0x72
  40803e:	pop    edi
  40803f:	enter  0x8c5a,0xc1
  408043:	sbb    ch,cl
  408045:	adc    dl,BYTE PTR [edx+0xe]
  408048:	push   esi
  408049:	cmp    DWORD PTR [eax+0x6c],eax
  40804c:	jge    0x40809f
  40804e:	scas   al,BYTE PTR es:[edi]
  40804f:	push   edx
  408050:	xchg   esi,eax
  408051:	dec    DWORD PTR [ecx+0x2fbdb9f8]
  408057:	cwde   
  408058:	jmp    0x56a3:0x3b7efd3d
  40805f:	jns    0x408089
  408061:	(bad)  
  408062:	retf   0x48cb
  408065:	and    edx,DWORD PTR [ecx]
  408067:	fcom   st(6)
  408069:	loope  0x408054
  40806b:	fwait
  40806c:	xor    al,0x5b
  40806e:	repnz or eax,0xfe1507f1
  408074:	test   al,0x18
  408076:	retf   
  408077:	shr    BYTE PTR [eax+eax*4],0xb8
  40807b:	and    BYTE PTR [eax+0x7c],dh
  40807e:	push   0x31a19e79
  408083:	mov    edi,0xbc91481
  408088:	mov    ?,WORD PTR [edi-0x54e3ed9b]
  40808e:	into   
  40808f:	fdivr  QWORD PTR [edi+ecx*2]
  408092:	push   cs
  408093:	jmp    0x40808c
  408095:	xchg   esi,eax
  408096:	dec    ecx
  408097:	sbb    BYTE PTR [ebx-0x5a],0xfb
  40809b:	mov    cl,0xf7
  40809d:	add    al,0x13
  40809f:	enter  0x3110,0xc0
  4080a3:	dec    eax
  4080a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a5:	xor    al,0xa1
  4080a7:	mov    eax,ds:0xe8142a28
  4080ac:	div    ch
  4080ae:	int    0x30
  4080b0:	dec    ebx
  4080b1:	mov    al,ds:0xbeef069c
  4080b6:	lods   al,BYTE PTR ds:[esi]
  4080b7:	imul   edx,DWORD PTR [edx+edx*4-0x51],0x59c01226
  4080bf:	mov    edx,ebx
  4080c1:	push   0x64e5c338
  4080c6:	repnz pop es
  4080c8:	lods   al,BYTE PTR ds:[esi]
  4080c9:	push   ss
  4080ca:	mov    BYTE PTR [ebp-0x231287d2],dl
  4080d0:	xor    bh,ah
  4080d2:	loopne 0x408092
  4080d4:	repz call 0x432e:0xf1cc65c6
  4080dc:	mov    BYTE PTR [ebx-0x32],cl
  4080df:	mov    ch,0x59
  4080e1:	add    al,0xdf
  4080e3:	call   0x71044046
  4080e8:	sbb    bh,BYTE PTR [edi-0x1fe0566d]
  4080ee:	std    
  4080ef:	jne    0x4080da
  4080f1:	enter  0x5eb6,0x23
  4080f5:	ins    DWORD PTR es:[edi],dx
  4080f6:	pop    ebx
  4080f7:	dec    eax
  4080f8:	lock outs dx,DWORD PTR ds:[esi]
  4080fa:	outs   dx,BYTE PTR ds:[esi]
  4080fb:	call   0x3467:0x202a7ea7
  408102:	xor    cl,BYTE PTR [eax]
  408104:	inc    eax
  408105:	icebp  
  408106:	inc    esi
  408107:	ret    0x895
  40810a:	(bad)  
  40810b:	push   ebp
  40810c:	adc    edi,DWORD PTR cs:[edi-0x55fb6516]
  408113:	sbb    BYTE PTR [ebp-0x30c3fb5e],cl
  408119:	cwde   
  40811a:	jge    0x40810d
  40811c:	sti    
  40811d:	xchg   edi,eax
  40811e:	sbb    ecx,DWORD PTR [esi+0x371d0525]
  408124:	sub    BYTE PTR [ebx-0x10fdc23b],dl
  40812a:	mov    eax,0x8686f6ac
  40812f:	jg     0x408199
  408131:	mov    ebp,0x21c5bd20
  408136:	jne    0x408140
  408138:	sub    al,0x25
  40813a:	pop    esi
  40813b:	dec    ebp
  40813c:	push   edx
  40813d:	xor    ch,BYTE PTR [edi+0x38fd0348]
  408143:	lods   al,BYTE PTR ds:[esi]
  408144:	cmp    dl,0xfc
  408147:	outs   dx,BYTE PTR ds:[esi]
  408148:	test   eax,0x5fc493e3
  40814d:	mul    BYTE PTR [ebx-0x5c]
  408150:	out    0x6a,al
  408152:	xchg   esi,eax
  408153:	jno    0x4080dd
  408155:	enter  0xc3a7,0x32
  408159:	cdq    
  40815a:	xchg   DWORD PTR [ecx+0x50e8a8c9],ebx
  408160:	push   esp
  408161:	jg     0x40813e
  408163:	push   cs
  408164:	jge    0x4081c0
  408166:	jmp    0x1833:0x852c0af6
  40816d:	push   cs
  40816e:	pop    edx
  40816f:	test   DWORD PTR [eax-0x7b25faee],edi
  408175:	push   ecx
  408176:	jl     0x408180
  408178:	mov    ch,BYTE PTR [esi+eax*8-0x55249ead]
  40817f:	mov    bh,0x2b
  408181:	mov    ebx,0x87ecacc1
  408186:	test   DWORD PTR [ebp-0x17],esp
  408189:	sub    BYTE PTR [esi+ebp*8+0x57],bl
  40818d:	xor    cl,BYTE PTR [eax+ebx*1+0x61]
  408191:	or     bl,0x6b
  408194:	daa    
  408195:	test   eax,0xdd85b872
  40819a:	sbb    esi,esi
  40819c:	sub    ebp,DWORD PTR [ebp+ebp*4+0x7131a526]
  4081a3:	mov    BYTE PTR [edx],0xc3
  4081a6:	add    al,0x9c
  4081a8:	mov    dh,BYTE PTR [edx+0x4a8856f9]
  4081ae:	or     eax,0xad12ddd3
  4081b3:	and    ch,BYTE PTR [edi-0x4b005cac]
  4081b9:	xchg   ebx,eax
  4081ba:	cmp    eax,0x46348910
  4081bf:	mov    eax,0x1c1d5b16
  4081c4:	jle    0x40817a
  4081c6:	sbb    BYTE PTR [ebx],al
  4081c8:	ins    BYTE PTR es:[edi],dx
  4081c9:	sub    al,BYTE PTR [ecx-0x7]
  4081cc:	pusha  
  4081cd:	pop    ds
  4081ce:	or     dh,BYTE PTR [ebx-0x74bf1b13]
  4081d4:	popf   
  4081d5:	pop    es
  4081d6:	dec    eax
  4081d7:	dec    eax
  4081d8:	adc    al,0xf
  4081da:	stc    
  4081db:	add    BYTE PTR [bx+si-0x1a57],cl
  4081e0:	mov    edx,0xb61275c4
  4081e5:	mov    eax,0xcedf311e
  4081ea:	pop    es
  4081eb:	dec    esp
  4081ec:	sti    
  4081ed:	xchg   esi,eax
  4081ee:	pop    ecx
  4081ef:	push   ebx
  4081f0:	dec    esi
  4081f1:	add    al,0x2e
  4081f3:	xchg   ebp,eax
  4081f4:	push   0x1ab81d94
  4081f9:	adc    al,0xa1
  4081fb:	mov    ss,WORD PTR [esi-0x6de1c79b]
  408201:	push   es
  408202:	mov    ebp,0x4d2f3730
  408207:	inc    edx
  408208:	sbb    al,0x6a
  40820a:	(bad)  
  40820b:	(bad)  
  40820c:	and    al,BYTE PTR [esi+ecx*4-0x54f76124]
  408213:	sti    
  408214:	int    0xd6
  408216:	xchg   esi,eax
  408217:	sub    eax,0xcfb5d8ea
  40821c:	in     eax,0xe5
  40821e:	std    
  40821f:	sub    esp,DWORD PTR [ecx]
  408221:	fadd   QWORD PTR [edx+edi*4+0x37]
  408225:	jecxz  0x408201
  408227:	inc    ebp
  408228:	jns    0x4081cb
  40822a:	sar    DWORD PTR [edi],0xaf
  40822d:	xchg   edi,eax
  40822e:	sahf   
  40822f:	js     0x40822a
  408231:	popa   
  408232:	sar    ebp,0x54
  408235:	mov    al,ds:0x55fb9291
  40823a:	xchg   esp,eax
  40823b:	sub    DWORD PTR [ebx],eax
  40823d:	aaa    
  40823e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823f:	and    eax,0xfd0458c8
  408244:	fistp  QWORD PTR [ebx+0x284c0301]
  40824a:	cli    
  40824b:	dec    esi
  40824c:	loope  0x40822a
  40824e:	dec    ecx
  40824f:	loopne 0x4082a0
  408251:	push   0x72d55a23
  408256:	in     eax,0x7f
  408258:	addr16 mov cl,0x74
  40825b:	push   edi
  40825c:	jl     0x40826e
  40825e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40825f:	inc    edx
  408260:	addr16 in eax,0x30
  408263:	jno    0x4081fa
  408265:	shr    esp,1
  408267:	cld    
  408268:	push   ebp
  408269:	rol    DWORD PTR [si-0x50],cl
  40826d:	sahf   
  40826e:	hlt    
  40826f:	xchg   esi,eax
  408270:	inc    ebp
  408271:	cmp    BYTE PTR [edx],0x37
  408274:	push   ds
  408275:	xchg   BYTE PTR [ebp-0x2a],dh
  408278:	pop    es
  408279:	inc    esi
  40827a:	push   edi
  40827b:	ret    
  40827c:	clc    
  40827d:	dec    esp
  40827e:	jmp    0x40826b
  408280:	push   edi
  408281:	xor    al,0x82
  408283:	sbb    BYTE PTR ds:0x5e78e286,0x4
  40828a:	pop    ss
  40828b:	pop    edx
  40828c:	pop    ebp
  40828d:	(bad)  
  40828e:	mov    eax,ds:0xaf1ba804
  408293:	add    dl,cl
  408295:	loopne 0x4082a8
  408297:	inc    edi
  408298:	mov    edi,0x3cc067ec
  40829d:	mov    cs,WORD PTR [edx]
  40829f:	cmp    al,0xd0
  4082a1:	lods   al,BYTE PTR ds:[esi]
  4082a2:	pop    es
  4082a3:	ds out 0xca,al
  4082a6:	adc    al,0xc8
  4082a8:	pop    esp
  4082a9:	cdq    
  4082aa:	adc    esp,DWORD PTR [eax+0x43]
  4082ad:	push   esp
  4082ae:	jne    0x408328
  4082b0:	cs ins BYTE PTR es:[edi],dx
  4082b2:	and    al,0xe5
  4082b4:	adc    BYTE PTR [edx+esi*1+0x63],cl
  4082b8:	cmp    edx,edi
  4082ba:	fldcw  WORD PTR [esi-0x490bd8a7]
  4082c0:	retf   
  4082c1:	jne    0x408289
  4082c3:	in     al,dx
  4082c4:	data16 sahf 
  4082c6:	xchg   ebx,eax
  4082c7:	inc    eax
  4082c8:	(bad)  
  4082c9:	jmp    0x583:0x8aebcd2a
  4082d0:	sub    esi,DWORD PTR [eax+0x1c]
  4082d3:	sbb    ecx,DWORD PTR [ecx+0x58]
  4082d6:	out    dx,eax
  4082d7:	(bad)  
  4082d8:	cmp    DWORD PTR [edx],edi
  4082da:	mov    edx,0xafd1c565
  4082df:	(bad)
  4082e4:	add    DWORD PTR [edi-0x60],ecx
  4082e7:	sub    esi,esp
  4082e9:	pushf  
  4082ea:	or     bh,ah
  4082ec:	int    0x6
  4082ee:	push   es
  4082ef:	les    eax,FWORD PTR [ebp-0xd]
  4082f2:	scas   al,BYTE PTR es:[edi]
  4082f3:	ds std 
  4082f5:	scas   al,BYTE PTR es:[edi]
  4082f6:	scas   al,BYTE PTR es:[edi]
  4082f7:	push   cs
  4082f8:	lods   eax,DWORD PTR ds:[esi]
  4082f9:	and    DWORD PTR [eax],eax
  4082fb:	addr16 xchg ecx,eax
  4082fd:	ds pop eax
  4082ff:	stos   BYTE PTR es:[edi],al
  408300:	push   edx
  408301:	add    BYTE PTR [esi+0x35],cl
  408304:	dec    esp
  408305:	xor    eax,0x482e2fdb
  40830a:	ins    BYTE PTR es:[edi],dx
  40830b:	daa    
  40830c:	push   cs
  40830d:	inc    ecx
  40830e:	fsubr  st,st(4)
  408310:	repz xchg esp,eax
  408312:	neg    BYTE PTR [edi+0x71]
  408315:	or     DWORD PTR ds:0x6c5522b4,0xbc0c991b
  40831f:	mov    ds:0x14fd5358,al
  408324:	loopne 0x4082ee
  408326:	rcl    DWORD PTR [ecx],cl
  408328:	inc    ebp
  408329:	cmp    edx,DWORD PTR [edx-0x2a]
  40832c:	jno    0x408394
  40832e:	fsubr  st(7),st
  408330:	or     al,0xb8
  408332:	push   eax
  408333:	out    0x61,al
  408335:	por    mm1,QWORD PTR [esi+0x25]
  408339:	add    DWORD PTR [edi-0x38cb2238],esp
  40833f:	test   bl,cl
  408341:	and    edi,DWORD PTR [edi-0x23]
  408344:	mov    eax,0xdd364efa
  408349:	(bad)  
  40834a:	in     al,0x21
  40834c:	or     DWORD PTR [esi-0x48084538],edx
  408352:	push   es
  408353:	sbb    ch,BYTE PTR [esi+ebp*2+0xb]
  408357:	inc    ebx
  408358:	cmc    
  408359:	add    BYTE PTR [ecx],bh
  40835b:	and    ebp,0x2c1161cf
  408361:	repnz aas 
  408363:	fdivr  st,st(0)
  408365:	shl    BYTE PTR [ebp+0x77a1782c],0xad
  40836c:	sub    al,0xf
  40836e:	mov    WORD PTR [edi+0x6f],ds
  408371:	hlt    
  408372:	dec    eax
  408373:	dec    esi
  408374:	lea    ebp,[eax+0x19c711a]
  40837a:	sbb    BYTE PTR [esi],ch
  40837c:	adc    BYTE PTR ds:0x20099f4,cl
  408382:	xchg   ebp,eax
  408383:	adc    al,0x8d
  408386:	and    esi,DWORD PTR [eax]
  408388:	mov    ds:0x1ea6f632,eax
  40838d:	les    edi,FWORD PTR [ebp+edi*4+0x79d08f15]
  408394:	in     al,0xa4
  408396:	dec    eax
  408397:	mov    al,ds:0x270d0244
  40839c:	leave  
  40839d:	dec    ebx
  40839e:	or     esp,esp
  4083a0:	push   ecx
  4083a1:	push   0xfd363d49
  4083a6:	out    0xef,eax
  4083a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a9:	fsub   DWORD PTR [ecx+0x362c9444]
  4083af:	xor    al,0xff
  4083b1:	xor    edi,eax
  4083b3:	add    ebx,DWORD PTR [eax+0x7c77bc90]
  4083b9:	mov    ebp,0x5b0f8cdd
  4083be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083bf:	jge    0x4083f6
  4083c1:	aam    0x90
  4083c3:	mov    bl,BYTE PTR [esi]
  4083c5:	mov    cs,WORD PTR [esi]
  4083c7:	xor    dh,BYTE PTR [edx]
  4083c9:	pushf  
  4083ca:	scas   al,BYTE PTR es:[edi]
  4083cb:	repz xor DWORD PTR [edi+0x60],ecx
  4083cf:	mov    bh,0x1d
  4083d1:	mov    ecx,0xd3790674
  4083d6:	into   
  4083d7:	sub    BYTE PTR [edx],dh
  4083d9:	jecxz  0x408384
  4083db:	mov    esp,0x108620f9
  4083e0:	push   ds
  4083e1:	mov    ds:0xb50028e,eax
  4083e6:	sub    ebx,0xfd9de7f1
  4083ec:	repz mov dh,0xed
  4083ef:	cmp    ch,cl
  4083f1:	(bad)
  4083f5:	outs   dx,BYTE PTR ds:[esi]
  4083f6:	cmp    esi,DWORD PTR [edi+eax*2-0x48525566]
  4083fd:	inc    esi
  4083fe:	pop    ecx
  4083ff:	adc    ebx,DWORD PTR [ebx+0x0]
  408402:	mov    WORD PTR [edi-0x31],ss
  408405:	stos   DWORD PTR es:[edi],eax
  408406:	test   eax,0x941e8c43
  40840b:	aaa    
  40840c:	or     bl,BYTE PTR [edi-0x66]
  40840f:	push   ss
  408410:	sub    ecx,DWORD PTR [edi]
  408412:	push   ebx
  408413:	push   edi
  408414:	fcmovnb st,st(2)
  408416:	xor    dh,BYTE PTR [ebp-0x69ae2815]
  40841c:	dec    ecx
  40841d:	cwde   
  40841e:	xchg   ebp,eax
  40841f:	loop   0x4083e5
  408421:	lds    esp,FWORD PTR [ebx]
  408423:	mov    ebp,0xa6bc2e8f
  408428:	add    BYTE PTR [esp+ebp*8+0x8],ch
  40842c:	cld    
  40842d:	in     al,dx
  40842e:	out    dx,eax
  40842f:	mov    esi,DWORD PTR [esi+0x64]
  408432:	loope  0x4083d9
  408434:	stos   BYTE PTR es:[edi],al
  408435:	in     al,0x53
  408437:	fucomp st(6)
  408439:	inc    eax
  40843a:	xchg   esp,eax
  40843b:	inc    edx
  40843c:	retf   
  40843d:	jae    0x40847a
  40843f:	ja     0x4083d8
  408441:	cmp    al,0xb0
  408443:	push   esp
  408444:	in     eax,dx
  408445:	imul   edx,DWORD PTR [ebp+0x67],0xffffff9b
  408449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40844a:	mov    dh,0x8
  40844c:	mov    ds:0xc5cdeb45,eax
  408451:	imul   ebp,ebp,0x46a3e88d
  408457:	(bad)  
  408458:	sub    al,0xcd
  40845a:	push   0x320d16c
  40845f:	stos   BYTE PTR es:[edi],al
  408460:	pop    eax
  408461:	and    al,0xa0
  408463:	popf   
  408464:	out    0x22,al
  408466:	fld    DWORD PTR [ebx+0x33]
  408469:	scas   eax,DWORD PTR es:[edi]
  40846a:	xchg   DWORD PTR [ebx],edi
  40846c:	sbb    DWORD PTR [edx+0x3c],edx
  40846f:	push   es
  408470:	fdivr  DWORD PTR [ebx+ebp*2-0x534eea61]
  408477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408478:	frstor [esi-0x30]
  40847b:	ret    
  40847c:	xchg   esi,eax
  40847d:	mov    edx,0x5eb48b53
  408482:	scas   al,BYTE PTR es:[edi]
  408483:	sbb    edi,DWORD PTR [esi-0x754ea9d3]
  408489:	scas   eax,DWORD PTR es:[edi]
  40848a:	add    DWORD PTR [edx-0x5fb06f41],0xfffffffa
  408491:	inc    eax
  408492:	fxam   
  408494:	lds    ebp,FWORD PTR [ecx]
  408496:	and    eax,0x8a197ec1
  40849b:	mov    edx,0x64a9123e
  4084a0:	mov    eax,ds:0x19448714
  4084a5:	mov    esi,0x926b04ad
  4084aa:	adc    al,0xe0
  4084ac:	pop    edi
  4084ad:	jns    0x4084e4
  4084af:	in     al,0xdd
  4084b1:	jmp    0x91f4:0xc4ecf5b9
  4084b8:	test   DWORD PTR [ecx],ecx
  4084ba:	jns    0x40849b
  4084bc:	je     0x4084bf
  4084be:	test   dh,bl
  4084c0:	dec    ebp
  4084c1:	mov    dh,0xa
  4084c3:	pop    ebp
  4084c4:	repnz xor cl,BYTE PTR [eax]
  4084c7:	jle    0x4084fd
  4084c9:	xchg   bl,bh
  4084cb:	cs inc ebx
  4084cd:	sub    edi,DWORD PTR [ecx+0x7d]
  4084d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d1:	loopne 0x40845d
  4084d3:	mov    ?,edx
  4084d5:	jb     0x408495
  4084d7:	sub    dh,cl
  4084d9:	jecxz  0x408528
  4084db:	stos   BYTE PTR es:[edi],al
  4084dc:	arpl   bp,bp
  4084de:	pop    ebx
  4084df:	push   edx
  4084e0:	fimul  WORD PTR [ecx-0x34]
  4084e3:	jmp    0x48c4:0xd6713524
  4084ea:	dec    ecx
  4084eb:	leave  
  4084ec:	icebp  
  4084ed:	adc    ecx,ecx
  4084ef:	or     di,WORD PTR [ebx-0x6280381b]
  4084f6:	das    
  4084f7:	mov    dl,0xea
  4084f9:	lar    eax,WORD PTR [eax-0x5f]
  4084fd:	fwait
  4084fe:	pusha  
  4084ff:	xor    eax,0x81e8236a
  408504:	add    BYTE PTR [esi-0x79a9dc9f],0xd8
  40850b:	fsubp  st(6),st
  40850d:	mov    edx,0x4f5812e1
  408512:	shl    DWORD PTR [ecx-0x1c],0x9c
  408516:	add    al,0x2a
  408518:	mov    ds:0xc03c7fb5,al
  40851d:	inc    esp
  40851e:	pop    es
  40851f:	aam    0xff
  408521:	mov    edi,0x8172050b
  408526:	nop
  408527:	div    BYTE PTR [ebp+0x34212308]
  40852d:	(bad)  
  40852e:	(bad)  
  40852f:	push   esp
  408530:	sar    ebx,0x73
  408533:	jmp    0x6d0e6b68
  408538:	sub    BYTE PTR [ecx],bh
  40853a:	dec    esp
  40853b:	leave  
  40853c:	sub    ah,BYTE PTR [ebx]
  40853e:	cmp    dl,BYTE PTR [edi]
  408540:	(bad)  
  408542:	xor    dh,BYTE PTR [edi-0xcf193d1]
  408548:	fcmovbe st,st(5)
  40854a:	push   cs
  40854b:	and    DWORD PTR [edi-0x762a9cd3],edx
  408551:	push   esp
  408552:	retf   
  408553:	xchg   esi,eax
  408554:	or     eax,0xa05fdd89
  408559:	adc    al,0xc0
  40855b:	and    al,0x6b
  40855d:	sub    ah,0x7d
  408560:	daa    
  408561:	cmp    ah,BYTE PTR [edi+0x45890342]
  408567:	enter  0xc7f5,0x9c
  40856b:	sub    al,0xcf
  40856d:	test   al,0x1d
  40856f:	push   ecx
  408570:	inc    ebx
  408571:	das    
  408572:	pop    eax
  408573:	das    
  408574:	mov    WORD PTR [ecx-0x5f],cs
  408577:	arpl   WORD PTR [ebp+0x1983bc37],dx
  40857d:	sbb    esi,ecx
  40857f:	repz lds esi,FWORD PTR [eax+0x7ffe0811]
  408586:	outs   dx,DWORD PTR ds:[esi]
  408587:	and    edi,DWORD PTR [edx+0x2dc2efac]
  40858d:	sbb    ah,dh
  40858f:	mov    gs,WORD PTR [ecx+0x1a4f0f3c]
  408595:	xchg   ebx,eax
  408596:	cmp    dl,BYTE PTR [edi-0x2f]
  408599:	inc    edx
  40859a:	addr16 inc esi
  40859c:	cmp    DWORD PTR [edx],esi
  40859e:	dec    edx
  40859f:	hlt    
  4085a0:	das    
  4085a1:	dec    eax
  4085a2:	in     al,0xee
  4085a4:	nop
  4085a5:	or     BYTE PTR [edi-0x61],cl
  4085a8:	sar    DWORD PTR [ebx-0x5075ee49],cl
  4085ae:	stc    
  4085af:	xor    al,0x66
  4085b1:	in     eax,0x9f
  4085b3:	mov    dh,0x5
  4085b5:	inc    eax
  4085b6:	nop
  4085b7:	in     al,0xe4
  4085b9:	pop    es
  4085ba:	gs pop eax
  4085bc:	stc    
  4085bd:	pusha  
  4085be:	pop    es
  4085bf:	fisttp DWORD PTR [ecx]
  4085c1:	ror    bh,cl
  4085c3:	arpl   sp,dx
  4085c5:	dec    ebp
  4085c6:	rol    DWORD PTR [edi],0xb
  4085c9:	inc    ebx
  4085ca:	aas    
  4085cb:	mov    ebp,ecx
  4085cd:	inc    ebp
  4085ce:	aad    0x78
  4085d0:	pop    ecx
  4085d1:	jmp    0xf8d55608
  4085d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d7:	in     al,0xdb
  4085d9:	add    ebp,DWORD PTR [edx]
  4085db:	sbb    cl,cl
  4085dd:	push   eax
  4085de:	cdq    
  4085df:	or     edi,DWORD PTR [ebp+0x119113fa]
  4085e5:	add    DWORD PTR ds:0xac684c78,esi
  4085eb:	adc    dh,BYTE PTR [eax]
  4085ed:	cmp    al,BYTE PTR [esi-0x6b]
  4085f0:	ja     0x4085fc
  4085f2:	sbb    BYTE PTR [eax-0x25],al
  4085f5:	popf   
  4085f6:	(bad)  
  4085f7:	imul   edx,DWORD PTR [edx],0xd
  4085fa:	add    esp,ecx
  4085fc:	adc    eax,0x8291ac20
  408601:	dec    ebp
  408602:	and    DWORD PTR [edx-0x23d5709],0x26
  408609:	xchg   edi,eax
  40860a:	add    edx,DWORD PTR [edx-0x55b15348]
  408610:	aaa    
  408611:	outs   dx,BYTE PTR ds:[esi]
  408612:	and    DWORD PTR [eax],esi
  408614:	xor    eax,DWORD PTR [edx-0x70]
  408617:	fs das 
  408619:	ret    
  40861a:	lahf   
  40861b:	xchg   ecx,eax
  40861c:	mov    bl,0x1a
  40861e:	xor    edx,DWORD PTR [ecx-0xc]
  408621:	bound  ecx,QWORD PTR [ebx+0x35]
  408624:	pop    edx
  408625:	cmp    dl,BYTE PTR [ebx-0x3499f577]
  40862b:	mov    al,ds:0xcfc9d26d
  408630:	mov    dl,0xbc
  408632:	sti    
  408633:	sub    al,0xcb
  408635:	stc    
  408636:	or     BYTE PTR [esi-0x2a2eb3ef],0xa3
  40863d:	and    edx,DWORD PTR [eax+eax*4]
  408640:	fdiv   st,st(4)
  408642:	ins    DWORD PTR es:[edi],dx
  408643:	(bad)  
  408644:	out    dx,al
  408645:	jge    0x4085e7
  408647:	and    al,0x6d
  408649:	push   es
  40864a:	fcomp  st(4)
  40864c:	jge    0x408649
  40864e:	jns    0x40863f
  408650:	mov    esi,0x80bd51a5
  408655:	add    edi,edi
  408657:	adc    eax,0x4375e07
  40865c:	cmp    esp,DWORD PTR [edx-0x234dbb77]
  408662:	cli    
  408663:	retf   0x55fe
  408666:	cli    
  408667:	adc    DWORD PTR [ebp+0x25],edi
  40866a:	ds xchg edi,eax
  40866c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866d:	shl    ch,0x9f
  408670:	xchg   DWORD PTR [ebp+eiz*4+0x60],esi
  408674:	sub    ch,dh
  408676:	nop
  408677:	inc    esp
  408678:	cs pop ss
  40867a:	call   0x522c:0x9d2219d8
  408681:	fdivr  QWORD PTR [esi+ebx*4-0x33]
  408685:	retf   
  408686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408687:	and    esp,DWORD PTR [edx+0x1835f320]
  40868d:	ins    BYTE PTR es:[edi],dx
  40868e:	out    0x91,eax
  408690:	mov    ebp,0x44720a28
  408695:	int3   
  408696:	jmp    0x2b607836
  40869b:	mov    ah,0xfc
  40869d:	mov    dh,0x1e
  40869f:	or     BYTE PTR [ecx+0xd],0xd8
  4086a3:	popa   
  4086a4:	popf   
  4086a5:	fs xorps xmm1,xmm5
  4086a9:	push   0x71
  4086ab:	mov    dl,dl
  4086ad:	jmp    0x4086b2
  4086af:	popa   
  4086b0:	leave  
  4086b1:	add    al,0xee
  4086b3:	dec    edx
  4086b4:	rol    DWORD PTR ds:[edi+edi*2+0x58e6bc00],1
  4086bc:	dec    ebp
  4086bd:	add    eax,0x9d236c39
  4086c2:	xor    DWORD PTR [esi],edi
  4086c4:	mov    ds:0xf73369c8,eax
  4086c9:	adc    dl,al
  4086cb:	jge    0x4086dc
  4086cd:	dec    ebp
  4086ce:	lock fisttp DWORD PTR [ebx+0x5e]
  4086d2:	mov    ebp,0x1136da34
  4086d7:	inc    eax
  4086d8:	dec    esp
  4086d9:	mov    esp,0x6370981e
  4086de:	lock hlt 
  4086e0:	je     0x4086ee
  4086e2:	dec    esp
  4086e3:	mov    bl,0xf9
  4086e5:	pop    edx
  4086e6:	dec    ecx
  4086e7:	sub    BYTE PTR [edi+0x54],0x10
  4086eb:	popf   
  4086ec:	scas   eax,DWORD PTR es:[edi]
  4086ed:	in     al,dx
  4086ee:	mov    eax,0x422131bd
  4086f3:	loopne 0x40871e
  4086f5:	xlat   BYTE PTR ds:[ebx]
  4086f6:	cs das 
  4086f8:	loopne 0x4086a1
  4086fa:	mov    ebp,0x65830a1b
  4086ff:	jge    0x4086d6
  408701:	xchg   DWORD PTR [ecx-0x1],esi
  408704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408705:	sahf   
  408706:	out    0xda,eax
  408708:	add    eax,0xd20b3b43
  40870d:	and    DWORD PTR [edi],ecx
  40870f:	ja     0x4086be
  408711:	mov    cl,0x88
  408713:	jmp    0xcaab:0x85d412dd
  40871a:	repz ja 0x408723
  40871d:	push   edi
  40871e:	jge    0x40874d
  408720:	mov    ds,WORD PTR [ebx]
  408722:	mov    dh,0xc3
  408724:	test   al,0xd9
  408726:	cmp    BYTE PTR [ecx],ah
  408728:	pop    edi
  408729:	jle    0x408766
  40872b:	cmp    al,0xe9
  40872d:	fist   DWORD PTR [edx-0xd]
  408730:	pop    ss
  408731:	push   ss
  408732:	(bad)  
  408733:	lock adc DWORD PTR [esi-0x25],ebp
  408737:	push   cs
  408738:	mov    ebx,0xf598d972
  40873d:	push   cs
  40873e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873f:	xchg   DWORD PTR [edx],esp
  408741:	mov    ebp,0x2da055cf
  408746:	mov    esp,0x7c275bd9
  40874b:	mov    ss:0x6a7bbb74,eax
  408751:	outs   dx,BYTE PTR ds:[esi]
  408752:	fadd   st,st(4)
  408754:	mov    WORD PTR [eax+0x4a2095ab],ds
  40875a:	dec    esp
  40875b:	inc    edi
  40875c:	lahf   
  40875d:	and    BYTE PTR [edi+0x3fade450],ah
  408763:	sub    al,0x9c
  408765:	sub    edi,0x995ee7d
  40876b:	jae    0x4087b8
  40876d:	ins    DWORD PTR es:[edi],dx
  40876e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40876f:	cmp    ax,bp
  408772:	int    0x45
  408774:	and    DWORD PTR [edi+0x3e13145a],edx
  40877a:	stc    
  40877b:	push   0x64
  40877d:	in     al,dx
  40877e:	mov    ds:0x23184461,al
  408783:	(bad)  
  408784:	sbb    BYTE PTR [ebx-0x51],ch
  408787:	out    0x24,eax
  408789:	dec    edi
  40878a:	aaa    
  40878b:	loope  0x408763
  40878d:	data16 aam 0x40
  408790:	(bad)  
  408791:	cmp    DWORD PTR [ebx+esi*4],edi
  408794:	dec    esi
  408795:	push   esi
  408796:	cmp    bl,BYTE PTR [edx]
  408798:	sahf   
  408799:	push   esp
  40879a:	test   DWORD PTR [eax-0xf3db69e],0x86c9fb6a
  4087a4:	ins    DWORD PTR es:[edi],dx
  4087a5:	pop    esp
  4087a6:	leave  
  4087a7:	retf   
  4087a8:	pop    edi
  4087a9:	fwait
  4087aa:	aad    0x50
  4087ac:	and    cl,ah
  4087ae:	cmp    ch,BYTE PTR [ebx+0xa4fc123]
  4087b4:	pop    edx
  4087b5:	and    eax,eax
  4087b7:	mov    bh,0xe1
  4087b9:	(bad)  
  4087ba:	into   
  4087bb:	jle    0x4087e2
  4087bd:	add    DWORD PTR [ebp+ebp*1+0x4d],ebx
  4087c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087c2:	cs pushf 
  4087c4:	pop    es
  4087c5:	pop    ecx
  4087c6:	loopne 0x40882c
  4087c8:	pop    ss
  4087c9:	pushf  
  4087ca:	pop    ecx
  4087cb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4087cd:	in     eax,0x7e
  4087cf:	mov    esp,0x37557f30
  4087d4:	iret   
  4087d5:	pop    ds
  4087d6:	popa   
  4087d7:	das    
  4087d8:	lods   al,BYTE PTR ds:[esi]
  4087d9:	pop    es
  4087da:	dec    eax
  4087db:	add    eax,0xc81df0e2
  4087e0:	leave  
  4087e1:	aad    0xe0
  4087e3:	(bad)  
  4087e4:	fnsave [edi]
  4087e6:	daa    
  4087e7:	jb     0x4087a4
  4087e9:	dec    esp
  4087ea:	sbb    dh,dl
  4087ec:	xor    esp,edi
  4087ee:	sbb    eax,0x8ce8982
  4087f3:	in     al,dx
  4087f4:	mov    eax,ds:0x3bf50811
  4087f9:	push   0x4f129db2
  4087fe:	scas   eax,DWORD PTR es:[edi]
  4087ff:	dec    ecx
  408800:	and    bh,dh
  408802:	inc    edi
  408803:	rol    bh,1
  408805:	jmp    0x40882c
  408807:	jl     0x408866
  408809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880a:	dec    ebp
  40880b:	sbb    DWORD PTR [edi-0x3e],0x8aabd39c
  408812:	rol    BYTE PTR [esi-0x2a419992],1
  408818:	sub    dl,dh
  40881a:	add    bh,ah
  40881c:	mov    ecx,0x345a4535
  408821:	out    dx,al
  408822:	mov    WORD PTR [ebx],?
  408824:	iret   
  408825:	inc    ebx
  408826:	mov    ch,BYTE PTR [ebp-0x57712326]
  40882c:	jmp    FWORD PTR [edi-0x6f]
  40882f:	ds dec ebx
  408831:	add    DWORD PTR [ebx+0x3],0x53
  408835:	mov    edi,0xaecf00d1
  40883a:	cmp    esi,eax
  40883c:	jp     0x4087d2
  40883e:	or     eax,0x7251d173
  408843:	mov    ds:0xf468e448,al
  408848:	(bad)  [eax-0x1660a1df]
  40884e:	cs mov ecx,0x79d3cf21
  408854:	inc    ecx
  408855:	mov    DWORD PTR [ebx],eax
  408857:	dec    edx
  408858:	shl    DWORD PTR [eax-0x49],cl
  40885b:	clc    
  40885c:	cmp    al,0xfd
  40885e:	adc    cl,bl
  408860:	mov    cl,0x5b
  408862:	mov    ah,0x8b
  408864:	xor    eax,0xbd86d613
  408869:	ja     0x40888b
  40886b:	mov    dh,0xf6
  40886d:	sahf   
  40886e:	inc    edx
  40886f:	jp     0x40881f
  408871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408872:	int3   
  408873:	les    eax,FWORD PTR [edi-0x232af646]
  408879:	outs   dx,DWORD PTR ds:[esi]
  40887a:	mov    ds:0x626dc8b7,al
  40887f:	lods   al,BYTE PTR ds:[esi]
  408880:	fistp  DWORD PTR [ecx+0x32]
  408883:	iret   
  408884:	lahf   
  408885:	add    DWORD PTR [ebx+0x7],0xffffffc5
  408889:	inc    ebp
  40888a:	sub    bh,bl
  40888c:	test   BYTE PTR [ebp-0x2b4ce5ea],bh
  408892:	push   cs
  408893:	mov    esp,0x96c6a78f
  408898:	add    BYTE PTR [ebx-0x3c79b38e],bh
  40889e:	js     0x408853
  4088a0:	push   edi
  4088a1:	repnz dec ebx
  4088a3:	aam    0xc4
  4088a5:	loop   0x408876
  4088a7:	sub    al,0x94
  4088a9:	addr16 add eax,0x6c15035a
  4088af:	loope  0x4088e3
  4088b1:	jno    0x40884b
  4088b3:	bound  eax,QWORD PTR [esi-0x195a1e20]
  4088b9:	mov    esp,0x39254033
  4088be:	xchg   esp,eax
  4088bf:	test   DWORD PTR [edx+ebp*1+0x5398d19b],eax
  4088c6:	test   BYTE PTR [esp+edi*1-0x59],dl
  4088ca:	and    eax,0xb2bd23c6
  4088cf:	inc    ebx
  4088d0:	mov    edi,0xf13c7692
  4088d5:	fmul   QWORD PTR [ebx-0x551e40fd]
  4088db:	into   
  4088dc:	loopne 0x4088af
  4088de:	test   DWORD PTR [ebx-0xc],eax
  4088e1:	aad    0x6c
  4088e3:	sbb    bh,BYTE PTR [ebp+0x7c]
  4088e6:	test   al,0x26
  4088e8:	dec    esp
  4088e9:	jecxz  0x4088ad
  4088eb:	adc    edx,esp
  4088ed:	pop    ss
  4088ee:	cmc    
  4088ef:	add    cl,BYTE PTR [ebp-0x3e19be58]
  4088f5:	inc    edx
  4088f6:	iret   
  4088f7:	dec    eax
  4088f8:	sti    
  4088f9:	adc    ebp,DWORD PTR [edi-0x4d]
  4088fc:	xor    esi,DWORD PTR [esi+0x1e]
  4088ff:	mov    ebx,ebp
  408901:	inc    ecx
  408902:	dec    esi
  408903:	xor    eax,ebp
  408905:	add    esp,DWORD PTR [esi-0x17]
  408908:	jns    0x408947
  40890a:	sbb    edi,DWORD PTR [edx]
  40890c:	dec    ecx
  40890d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40890e:	bound  eax,QWORD PTR [ebp+0x35]
  408911:	jg     0x408905
  408913:	push   0x7b
  408915:	loop   0x4088b8
  408917:	inc    esi
  408918:	pushf  
  408919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891a:	call   0xae24:0xe0e5643d
  408921:	push   0x5f
  408923:	sub    al,0xc7
  408925:	or     eax,0xd47798b9
  40892a:	inc    ebx
  40892b:	cli    
  40892c:	push   ebp
  40892d:	sub    ebx,ecx
  40892f:	xor    eax,0x5138d37b
  408934:	sub    al,ah
  408936:	repz cwde 
  408938:	jg     0x408929
  40893a:	mov    bh,0x9b
  40893c:	dec    ecx
  40893d:	shl    BYTE PTR [edi+0x79],0x4d
  408941:	cli    
  408942:	cli    
  408943:	pop    esp
  408944:	cli    
  408945:	jle    0x4088e0
  408947:	adc    eax,0xed22f7d4
  40894c:	clc    
  40894d:	mov    edi,0xb379050d
  408952:	mov    cs,WORD PTR [ebp+0x1b981dfb]
  408958:	adc    eax,0x85fe3b7f
  40895d:	pop    esp
  40895e:	fidivr WORD PTR [eax+0x29159c00]
  408964:	ss out 0x2f,eax
  408967:	cmp    eax,DWORD PTR [eax]
  408969:	ret    
  40896a:	dec    ecx
  40896b:	cmc    
  40896c:	sbb    eax,esp
  40896e:	repz or esi,DWORD PTR [ebp-0x32]
  408972:	(bad)  
  408973:	fs mov ecx,0x603ba82c
  408979:	or     dl,BYTE PTR [ecx+0x76]
  40897c:	add    eax,0x90c0790c
  408981:	and    BYTE PTR [ebx+0x17],al
  408984:	or     al,0x54
  408986:	stc    
  408987:	mov    ds:0xfaf6a816,eax
  40898c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40898d:	mov    ecx,0xe07a0971
  408992:	xor    al,0x93
  408994:	xor    esi,DWORD PTR [edx+0x58]
  408997:	dec    esi
  408998:	pop    esi
  408999:	xchg   ecx,eax
  40899a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40899b:	inc    edi
  40899c:	aam    0xe5
  40899e:	xacquire xchg DWORD PTR [ebp-0x6d],ebx
  4089a2:	adc    ebx,DWORD PTR [edi+0x6e]
  4089a5:	inc    edx
  4089a6:	or     al,BYTE PTR [esi+0x54]
  4089a9:	jp     0x408a16
  4089ab:	leave  
  4089ac:	xchg   ebx,eax
  4089ad:	jge    0x408941
  4089af:	mov    dh,0x8a
  4089b1:	call   0x59242f98
  4089b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b7:	ins    DWORD PTR es:[edi],dx
  4089b8:	mov    bl,al
  4089ba:	es jno 0x408982
  4089bd:	push   ds
  4089be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bf:	fild   DWORD PTR [edi-0x617719da]
  4089c5:	adc    ch,bl
  4089c7:	add    DWORD PTR [ebx],ecx
  4089c9:	aam    0xdc
  4089cb:	dec    esi
  4089cc:	sbb    cl,bl
  4089ce:	enter  0xdab7,0x19
  4089d2:	pop    eax
  4089d3:	ins    BYTE PTR es:[edi],dx
  4089d4:	outs   dx,DWORD PTR ds:[esi]
  4089d5:	mov    eax,0xd3acf83a
  4089da:	sbb    dl,BYTE PTR [esp+esi*4-0x4b0ba278]
  4089e1:	push   esp
  4089e2:	xchg   esi,eax
  4089e3:	enter  0xef4e,0x5f
  4089e7:	call   0xe796:0x6effba9c
  4089ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ef:	and    eax,0x67aea0a8
  4089f4:	mov    ds:0x5d6d089d,al
  4089f9:	cmp    ah,BYTE PTR [esi+0x65485a20]
  4089ff:	lds    ecx,FWORD PTR [edi+0x740c0ce0]
  408a05:	jmp    0xe83d:0xd85ebc7f
  408a0c:	ret    
  408a0d:	cmp    ah,bl
  408a0f:	stos   DWORD PTR es:[edi],eax
  408a10:	mov    WORD PTR [eax],cs
  408a12:	scas   al,BYTE PTR es:[edi]
  408a13:	jne    0x408a06
  408a15:	cmp    edi,DWORD PTR [edx+0x287d090b]
  408a1b:	test   al,0xd8
  408a1d:	mov    bl,0x1b
  408a1f:	mov    cl,0xbc
  408a21:	jb     0x4089e9
  408a23:	dec    ebp
  408a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a25:	xchg   ecx,eax
  408a26:	mov    al,0x26
  408a28:	dec    ebx
  408a29:	sub    al,0xf0
  408a2b:	mov    WORD PTR [edi],fs
  408a2d:	jmp    0xd49e:0xb45d3836
  408a34:	popf   
  408a35:	xor    al,BYTE PTR [eax+0x20]
  408a38:	imul   esi,DWORD PTR [esi+0x43885e87],0x3aec9b48
  408a42:	adc    BYTE PTR [ebx-0x2b],dl
  408a45:	sub    ecx,esi
  408a47:	mov    edx,DWORD PTR [edx-0x63]
  408a4a:	mov    ebp,0xefec00bd
  408a4f:	lods   eax,DWORD PTR ds:[esi]
  408a50:	adc    edi,DWORD PTR [esi+0x72]
  408a53:	daa    
  408a54:	dec    ecx
  408a55:	mov    ebx,0x6b4c7be3
  408a5a:	mul    cl
  408a5c:	(bad)  
  408a5d:	and    dh,BYTE PTR ds:0x4f38446f
  408a63:	or     BYTE PTR [esi-0x16],cl
  408a66:	adc    eax,0xbe5f34c6
  408a6b:	rcl    BYTE PTR [esi+0x124b2752],cl
  408a71:	out    dx,eax
  408a72:	inc    ecx
  408a73:	mov    al,0x63
  408a75:	ficom  DWORD PTR [edi-0x12]
  408a78:	js     0x408a78
  408a7a:	xchg   ecx,eax
  408a7b:	fwait
  408a7c:	sbb    bh,BYTE PTR [ecx+0x60d9cfbc]
  408a82:	xor    ebx,edi
  408a84:	mov    ch,0xbb
  408a86:	inc    esi
  408a87:	sub    esi,DWORD PTR [esi+0x2d]
  408a8a:	(bad)  
  408a8b:	mov    esp,0xd32d7ea1
  408a90:	mov    al,ds:0xb9511d6a
  408a95:	loop   0x408ab4
  408a97:	stos   BYTE PTR es:[edi],al
  408a98:	mov    ebx,0xb533217
  408a9d:	jge    0x408a2d
  408a9f:	lea    ebx,[edx-0x6b2f193f]
  408aa5:	call   0x918b728
  408aaa:	pop    esp
  408aab:	inc    esi
  408aac:	not    DWORD PTR [esi-0x35b57624]
  408ab2:	ds stos DWORD PTR es:[edi],eax
  408ab4:	inc    esi
  408ab5:	in     al,0xf
  408ab7:	adc    ebp,ebp
  408ab9:	jmp    0xcf7c:0xd8b883c0
  408ac0:	sbb    eax,0xdfc7759b
  408ac5:	or     esp,ecx
  408ac7:	sub    al,0xc7
  408ac9:	pop    edi
  408aca:	inc    ebp
  408acb:	scas   eax,DWORD PTR es:[edi]
  408acc:	mov    eax,ds:0x4c6d2c1e
  408ad1:	mov    edi,0xaf18bf9
  408ad6:	gs inc esi
  408ad8:	sbb    BYTE PTR [edx+0x405de90],al
  408ade:	sbb    BYTE PTR [ecx],dl
  408ae0:	adc    DWORD PTR ds:0x6df85a01,eax
  408ae6:	out    0x2f,eax
  408ae8:	sbb    ebx,DWORD PTR [eax+0x6eb7d9ae]
  408aee:	pop    ebx
  408aef:	mov    ah,0x11
  408af1:	out    0x89,al
  408af3:	mov    cl,0xce
  408af5:	arpl   WORD PTR [ebx+0x19fdfdcf],dx
  408afb:	pop    ebx
  408afc:	jg     0x408b10
  408afe:	jmp    0x6088:0x8061a6d3
  408b05:	sub    BYTE PTR [eax],al
  408b07:	(bad)  
  408b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b09:	jp     0x408b5a
  408b0b:	(bad)  
  408b0c:	addr16 ja 0x408b59
  408b0f:	jecxz  0x408ab3
  408b11:	pop    ebx
  408b12:	pop    esp
  408b13:	test   eax,0x3dafb1e1
  408b18:	pop    edi
  408b19:	cli    
  408b1a:	jecxz  0x408b4f
  408b1c:	mov    al,al
  408b1e:	ds je  0x408b08
  408b21:	int3   
  408b22:	sbb    BYTE PTR [edi],bh
  408b24:	pop    eax
  408b25:	dec    eax
  408b26:	mov    eax,ds:0xb29cff8c
  408b2b:	ds fs into 
  408b2e:	lds    ecx,FWORD PTR ds:0xd4c2d61f
  408b34:	mov    edx,0x38825ab9
  408b39:	fisttp DWORD PTR [eax+edx*2+0x23]
  408b3d:	and    al,0x9c
  408b3f:	es inc esp
  408b41:	paddusw mm4,QWORD PTR [ebx-0xd99e667]
  408b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b49:	lods   al,BYTE PTR ds:[esi]
  408b4a:	imul   ebx,DWORD PTR ds:[eax-0x7209f460],0x77
  408b52:	repnz call 0x5ed0:0xdca4da2e
  408b5a:	mov    dh,0xb1
  408b5c:	sub    eax,0xde28470
  408b61:	lods   eax,DWORD PTR ds:[esi]
  408b62:	cld    
  408b63:	jp     0x408b57
  408b65:	cs fs sub al,0x40
  408b69:	push   ebx
  408b6a:	lods   eax,DWORD PTR ds:[esi]
  408b6b:	enter  0x1aa4,0x8f
  408b6f:	mov    BYTE PTR es:[ecx-0x6b],0xfa
  408b74:	cmp    esp,edi
  408b76:	sahf   
  408b77:	mov    eax,ds:0x33e1e4c
  408b7c:	scas   eax,DWORD PTR es:[edi]
  408b7d:	mov    dl,0xa4
  408b7f:	repz mov cl,0x6f
  408b82:	inc    esi
  408b83:	mov    dh,0xb2
  408b85:	adc    BYTE PTR [edi-0x45],dh
  408b88:	push   edi
  408b89:	dec    esp
  408b8a:	mul    BYTE PTR [esi-0x20]
  408b8d:	inc    edx
  408b8e:	inc    BYTE PTR [edx]
  408b90:	mov    dh,0xd2
  408b92:	xor    ebx,ecx
  408b94:	push   es
  408b95:	pop    esi
  408b96:	sub    ah,BYTE PTR [edx]
  408b98:	pop    edi
  408b99:	push   ebx
  408b9a:	loopne 0x408bfc
  408b9c:	call   0x390b:0x4d63bcd0
  408ba3:	outs   dx,BYTE PTR ds:[esi]
  408ba4:	adc    DWORD PTR [edi-0x63],0x4d
  408ba8:	popa   
  408ba9:	aad    0xc
  408bab:	inc    ebx
  408bac:	mov    bh,0x77
  408bae:	or     DWORD PTR [ecx+ebx*8],edx
  408bb1:	sbb    eax,DWORD PTR [esi+edx*2+0x2a9fc8b5]
  408bb8:	lods   eax,DWORD PTR ds:[esi]
  408bb9:	outs   dx,BYTE PTR ds:[esi]
  408bba:	shl    BYTE PTR [ecx],cl
  408bbc:	and    ch,BYTE PTR [edi]
  408bbe:	stos   DWORD PTR es:[edi],eax
  408bbf:	add    DWORD PTR [edx+0x75],0xffffffb7
  408bc3:	pushf  
  408bc4:	cs mov dl,0x4d
  408bc7:	lock rcl DWORD PTR [esp+ebx*8],0x25
  408bcc:	push   edx
  408bcd:	cmp    eax,0x9e6b7541
  408bd2:	mov    ebp,0x135538b7
  408bd7:	into   
  408bd8:	jmp    0x408bbd
  408bda:	push   ebx
  408bdb:	loopne 0x408b73
  408bdd:	lds    esp,FWORD PTR [edx+0x6cc8c535]
  408be3:	add    al,0x7b
  408be5:	imul   esp,DWORD PTR [ecx-0x344d7a30],0xffffffdb
  408bec:	or     eax,0x47b852fd
  408bf1:	repz data16 data16 or BYTE PTR [ebp+0x2ab64288],0xee
  408bfb:	mov    ecx,0xabc8aedb
  408c00:	dec    esp
  408c01:	xlat   BYTE PTR ds:[ebx]
  408c02:	mov    al,ds:0xd67f779e
  408c07:	inc    eax
  408c08:	add    ebx,DWORD PTR [ebp-0x79]
  408c0b:	and    BYTE PTR [ecx-0xaf77b73],0x72
  408c12:	xor    al,BYTE PTR [eax]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x1950e72a
  408c4f:	(bad)  
  408c50:	pushf  
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	and    edi,0x4
  408c5a:	pop    es
  408c5b:	xor    DWORD PTR [edi],ebx
  408c5d:	aas    
  408c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c5f:	add    ecx,DWORD PTR [edx+0x2fa7cfab]
  408c65:	jg     0x408c40
  408c67:	stc    
  408c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c69:	jnp    0x408c8e
  408c6b:	mov    ch,0x5b
  408c6d:	add    dl,0xa8
  408c70:	xchg   ebx,eax
  408c71:	xor    al,0xaf
  408c73:	add    eax,0x5d2b3594
  408c78:	scas   al,BYTE PTR es:[edi]
  408c79:	lock cmp bh,ah
  408c7c:	cmp    BYTE PTR [ebx-0x79],bh
  408c7f:	jp     0x408c7e
  408c81:	pop    ss
  408c82:	clc    
  408c83:	pand   mm1,QWORD PTR [edx-0x2eb36991]
  408c8a:	outs   dx,DWORD PTR ds:[esi]
  408c8b:	jge    0x408c7f
  408c8d:	push   0xa
  408c8f:	leave  
  408c90:	sar    BYTE PTR [eax],0x73
  408c93:	ret    0x3f05
  408c96:	ins    DWORD PTR es:[edi],dx
  408c97:	sub    ah,bl
  408c99:	add    al,0xea
  408c9b:	mov    ss,WORD PTR [eax-0x29deb553]
  408ca1:	sub    eax,DWORD PTR [edx+ecx*4-0x6505f9c1]
  408ca8:	pop    edx
  408ca9:	fisub  WORD PTR [edi-0x54]
  408cac:	ret    0xaee4
  408caf:	and    BYTE PTR [esp+edi*4+0x16a77ab5],ch
  408cb6:	adc    dh,al
  408cb8:	fs jae 0x408c3f
  408cbb:	loope  0x408cb1
  408cbd:	pop    edi
  408cbe:	or     dl,ch
  408cc0:	in     al,0x7a
  408cc2:	xor    BYTE PTR ds:0x8c44d6fd,ch
  408cc8:	rsm    
  408cca:	xor    al,0x6c
  408ccc:	mov    cs,WORD PTR [ebp-0x10]
  408ccf:	imul   esi,DWORD PTR [edi],0xae9d6737
  408cd5:	stos   BYTE PTR es:[edi],al
  408cd6:	stc    
  408cd7:	mov    ah,0x77
  408cd9:	inc    edi
  408cda:	sar    cl,0x80
  408cdd:	mov    gs,WORD PTR [esi-0x4e78b9fa]
  408ce3:	pop    edi
  408ce4:	out    0x11,eax
  408ce6:	push   edi
  408ce7:	adc    DWORD PTR [ebx+eax*4-0x22d79721],ebp
  408cee:	xor    edi,ebp
  408cf0:	cmp    eax,0xcd493672
  408cf5:	ins    DWORD PTR es:[edi],dx
  408cf6:	push   0xffffffd4
  408cf8:	inc    ebx
  408cf9:	lods   al,BYTE PTR ds:[esi]
  408cfa:	out    0xa5,eax
  408cfc:	nop
  408cfd:	xor    dh,cl
  408cff:	dec    ebx
  408d00:	jmp    0x408d2c
  408d02:	shr    BYTE PTR [edx+0x7e],cl
  408d05:	adc    edx,DWORD PTR [edi+0x1a]
  408d08:	aaa    
  408d09:	cmp    eax,0x17fcb7a9
  408d0e:	cmp    bh,0xbe
  408d11:	lods   al,BYTE PTR ds:[esi]
  408d12:	mov    ecx,0x739dd6a7
  408d17:	mov    al,ds:0xa76220c5
  408d1c:	mov    ebp,0xed760d48
  408d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d22:	fimul  WORD PTR [edx+0xe936a32]
  408d28:	aaa    
  408d29:	add    DWORD PTR [ebx-0x76],ecx
  408d2c:	loopne 0x408d10
  408d2e:	pop    ecx
  408d30:	fdivr  st(3),st
  408d32:	ds retf 
  408d34:	adc    DWORD PTR [ecx+edx*4+0x32a161a5],esi
  408d3b:	jae    0x408d1f
  408d3d:	cdq    
  408d3e:	in     eax,0x84
  408d40:	xchg   ebx,eax
  408d41:	jmp    0xbcfd:0x41442f78
  408d48:	stos   BYTE PTR es:[edi],al
  408d49:	push   cs
  408d4a:	sbb    ah,bl
  408d4c:	aad    0x1a
  408d4e:	inc    ebp
  408d4f:	cli    
  408d50:	pop    edx
  408d51:	cmp    BYTE PTR [ebp+ebp*8+0x3f],dh
  408d55:	push   eax
  408d56:	inc    edx
  408d57:	adc    DWORD PTR [eax-0x3e5c7aa3],eax
  408d5d:	stc    
  408d5e:	dec    eax
  408d5f:	lds    ebp,FWORD PTR [eax]
  408d61:	cmp    BYTE PTR [ebx-0x4c643232],al
  408d67:	idiv   BYTE PTR [ebx+0x24]
  408d6a:	push   edx
  408d6b:	neg    BYTE PTR [esi-0x45c94acb]
  408d71:	jp     0x408dc2
  408d73:	cmp    DWORD PTR [edx-0x106b28a7],esp
  408d79:	and    ch,BYTE PTR [ecx-0x3]
  408d7c:	jg     0x408df5
  408d7e:	out    0x68,al
  408d80:	aas    
  408d81:	push   ds
  408d82:	int    0xc4
  408d84:	jmp    0x244dc7d7
  408d89:	inc    esp
  408d8a:	scas   al,BYTE PTR es:[edi]
  408d8b:	repnz adc edx,DWORD PTR [edx-0x31]
  408d8f:	fimul  DWORD PTR ds:0xc87e8b4f
  408d95:	xchg   ebp,eax
  408d96:	cmp    eax,DWORD PTR [ebx+0x65]
  408d99:	cld    
  408d9a:	test   eax,0x83e37ca7
  408d9f:	mov    ah,ah
  408da1:	pop    esp
  408da2:	mov    eax,0xbda3305b
  408da7:	pushf  
  408da8:	mov    edi,0xe179f26b
  408dad:	in     al,dx
  408dae:	rcr    dh,1
  408db0:	pop    edi
  408db1:	out    dx,eax
  408db2:	push   ss
  408db3:	fsubr  QWORD PTR [eax+0x2b615308]
  408db9:	sbb    eax,DWORD PTR [eax-0x3669cbe2]
  408dbf:	test   DWORD PTR [edi],eax
  408dc1:	fs and DWORD PTR es:[esi-0x473d1147],esi
  408dc9:	jnp    0x408dae
  408dcb:	inc    edx
  408dcc:	daa    
  408dcd:	sbb    BYTE PTR [ebx+edi*1],bl
  408dd0:	inc    edx
  408dd1:	jne    0x408da3
  408dd3:	add    eax,0x85dc9db1
  408dd8:	cmp    eax,0x6408b4c5
  408ddd:	shl    bl,cl
  408ddf:	and    eax,0x477f3906
  408de4:	jp     0x408dac
  408de6:	jne    0x408dbd
  408de8:	xchg   edi,eax
  408de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dea:	js     0x408daa
  408dec:	sub    esp,DWORD PTR [eax-0x3a69817f]
  408df2:	lea    esp,[edx]
  408df4:	sbb    dl,BYTE PTR [ebx+ebx*8]
  408df7:	mov    esi,0xc125f651
  408dfc:	lds    esp,FWORD PTR [esi-0x20fc73be]
  408e02:	daa    
  408e03:	add    DWORD PTR [eax+0x5afa8919],0x6c76a46c
  408e0d:	pop    ebp
  408e0e:	(bad)  
  408e0f:	into   
  408e10:	fldz   
  408e12:	push   0x1ff8e03f
  408e17:	repnz hlt 
  408e19:	mov    edx,0x77d2859a
  408e1e:	push   0x3514777c
  408e23:	(bad)
  408e26:	in     eax,0xef
  408e28:	ficom  WORD PTR [ecx+0x57]
  408e2b:	add    DWORD PTR [eax],ebx
  408e2d:	inc    edx
  408e2e:	retf   
  408e2f:	fild   DWORD PTR [esi]
  408e31:	mul    DWORD PTR [ebx]
  408e33:	jb     0x408df1
  408e35:	and    BYTE PTR ds:0x6d8a8f8f,bh
  408e3b:	jbe    0x408e2b
  408e3d:	xchg   ecx,eax
  408e3e:	xchg   esi,eax
  408e3f:	(bad)  
  408e40:	pop    esi
  408e41:	in     al,0x51
  408e43:	leave  
  408e44:	inc    esi
  408e45:	push   ss
  408e46:	sub    BYTE PTR [esi+0x66ce98a2],bh
  408e4c:	(bad)  
  408e4d:	mov    al,ds:0x44982507
  408e52:	pop    ebp
  408e53:	pusha  
  408e54:	push   ebx
  408e55:	and    eax,0xde0cf0c6
  408e5a:	and    BYTE PTR [eax],dl
  408e5c:	jns    0x408eb8
  408e5e:	addr16 adc cl,ch
  408e61:	or     al,0x89
  408e63:	push   cs
  408e64:	cmp    BYTE PTR [edi-0xd],0xc1
  408e68:	scas   eax,DWORD PTR es:[edi]
  408e69:	and    bl,BYTE PTR [edi]
  408e6b:	outs   dx,BYTE PTR ds:[esi]
  408e6c:	sub    ebx,DWORD PTR [eax-0x43]
  408e6f:	test   BYTE PTR [ecx-0x3c],ah
  408e72:	adc    cl,BYTE PTR [ecx-0x2f8d274a]
  408e78:	iret   
  408e79:	mov    ecx,DWORD PTR [edx]
  408e7b:	loopne 0x408eed
  408e7d:	fsub   st,st(0)
  408e7f:	adc    bl,BYTE PTR [edi]
  408e81:	dec    eax
  408e82:	jecxz  0x408ed6
  408e84:	adc    edi,edx
  408e86:	sbb    edi,0x58
  408e89:	(bad)  
  408e8a:	lock add edx,edi
  408e8d:	daa    
  408e8e:	mov    dh,0x50
  408e90:	cmp    cl,BYTE PTR [ebx]
  408e92:	nop
  408e93:	sub    ch,BYTE PTR [ebx+0x7d]
  408e96:	fild   QWORD PTR ds:0xb98359a0
  408e9c:	inc    ebx
  408e9d:	imul   eax,DWORD PTR [ebx+0x367b2837],0x17
  408ea4:	adc    DWORD PTR [edi],esp
  408ea6:	call   0x1b3a6a08
  408eab:	xor    eax,0xcb4f36bc
  408eb0:	dec    eax
  408eb1:	sub    bl,BYTE PTR [ecx+0x3482c3]
  408eb7:	inc    edi
  408eb8:	inc    esi
  408eb9:	inc    ebp
  408eba:	push   esi
  408ebb:	fsubr  st(4),st
  408ebd:	dec    ebx
  408ebe:	push   0x8a1738ad
  408ec3:	push   edx
  408ec4:	sub    al,0x8c
  408ec6:	push   ebp
  408ec7:	in     al,0xb8
  408ec9:	dec    eax
  408eca:	adc    cl,BYTE PTR [ebx+0x54]
  408ecd:	sub    DWORD PTR [edi+esi*2-0x60d6a834],eax
  408ed4:	mov    DWORD PTR [eax-0x15],ebx
  408ed7:	ja     0x408ef5
  408ed9:	cld    
  408eda:	push   ebp
  408edb:	xor    eax,0x86fb029
  408ee0:	push   ecx
  408ee1:	mov    al,ds:0xd60b68c2
  408ee6:	(bad)  
  408ee7:	mov    ah,0x6
  408ee9:	(bad)  
  408eea:	leave  
  408eeb:	xor    cl,cl
  408eed:	mov    esp,0xe3569859
  408ef2:	cmp    al,0x5e
  408ef4:	cmc    
  408ef5:	pop    edx
  408ef6:	out    dx,eax
  408ef7:	jb     0x408f71
  408ef9:	and    BYTE PTR [edx-0x44],ch
  408efc:	add    BYTE PTR [edi-0x9ba5f71],al
  408f02:	inc    eax
  408f03:	cmp    BYTE PTR [esi-0x26],al
  408f06:	lahf   
  408f07:	dec    edi
  408f08:	pop    esp
  408f09:	sub    bh,BYTE PTR [ebx-0xb8def3a]
  408f0f:	js     0x408f1a
  408f11:	inc    esi
  408f12:	cdq    
  408f13:	push   0xffffffb8
  408f15:	call   0xfb9149fe
  408f1a:	js     0x408f6b
  408f1c:	fsubr  st(3),st
  408f1e:	in     eax,0x4
  408f20:	push   ebp
  408f21:	js     0x408fa0
  408f23:	sbb    edi,esp
  408f25:	push   eax
  408f26:	mov    DWORD PTR [ecx],edx
  408f28:	inc    ebp
  408f29:	int3   
  408f2a:	lahf   
  408f2b:	adc    al,0x46
  408f2d:	pop    ebp
  408f2e:	dec    edi
  408f2f:	adc    eax,0x2141a875
  408f34:	xchg   ebp,eax
  408f35:	das    
  408f36:	pop    ebx
  408f37:	std    
  408f38:	inc    ebx
  408f39:	repz in al,0xe
  408f3c:	xor    ch,bh
  408f3e:	jae    0x408ec5
  408f40:	xor    eax,0x2bde2cca
  408f45:	and    BYTE PTR [ebp+0x1],0xa1
  408f49:	adc    ebp,0xffffffc1
  408f4c:	call   0xe9d:0xbab9721d
  408f53:	adc    ebx,DWORD PTR [ebx+esi*1-0x25]
  408f57:	mov    eax,ds:0x9b0d2c66
  408f5c:	retf   
  408f5d:	outs   dx,DWORD PTR ds:[esi]
  408f5e:	retf   0xbf66
  408f61:	stos   BYTE PTR es:[edi],al
  408f62:	imul   ebx,ebp,0xffffffad
  408f65:	and    ebp,DWORD PTR [eax]
  408f67:	fisttp WORD PTR [esi-0x1d]
  408f6a:	adc    eax,0xf8c6fe0d
  408f6f:	(bad)  
  408f70:	cmp    BYTE PTR [edi],ch
  408f72:	(bad)  
  408f73:	ret    
  408f74:	int3   
  408f75:	in     eax,0x76
  408f77:	xchg   esp,eax
  408f78:	popf   
  408f79:	inc    eax
  408f7a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f7c:	sbb    eax,0x8e30d6f4
  408f81:	mov    ecx,eax
  408f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f84:	and    eax,0xba9672fd
  408f89:	pop    ebp
  408f8a:	iret   
  408f8b:	jo     0x408f5a
  408f8d:	mov    ch,dl
  408f8f:	popa   
  408f90:	fcomip st,st(7)
  408f92:	pop    ecx
  408f93:	dec    edi
  408f94:	cmp    DWORD PTR [ebx],esp
  408f96:	inc    edi
  408f97:	push   ecx
  408f98:	imul   esi,DWORD PTR [ebp+0x49402e83],0x6e1ccfb7
  408fa2:	ret    0x82b9
  408fa5:	jbe    0x408fe2
  408fa7:	mov    dh,0xc1
  408fa9:	js     0x408f72
  408fab:	hlt    
  408fac:	push   esi
  408fad:	xchg   ebx,eax
  408fae:	(bad)  
  408faf:	jmp    0x1cf6:0xc04926c7
  408fb6:	cdq    
  408fb7:	adc    BYTE PTR [eax+edx*8+0x69bf5d0c],bl
  408fbe:	cmp    DWORD PTR [edi+0x64],0x3c47df1d
  408fc5:	addr16 out dx,eax
  408fc7:	(bad)  
  408fc8:	mov    ebp,0xfea4db97
  408fcd:	add    ebp,eax
  408fcf:	or     DWORD PTR [ebx-0x4a0c52be],edi
  408fd5:	xor    edx,DWORD PTR [eax]
  408fd7:	lods   eax,DWORD PTR ds:[esi]
  408fd8:	leave  
  408fd9:	addr16 push ebp
  408fdb:	dec    eax
  408fdc:	lods   al,BYTE PTR ds:[esi]
  408fdd:	cli    
  408fde:	pop    ebx
  408fdf:	in     eax,0xfe
  408fe1:	xor    al,0xc0
  408fe3:	mov    WORD PTR [esi-0x2da225da],gs
  408fe9:	test   DWORD PTR [eax-0xf],ecx
  408fec:	nop
  408fed:	add    al,0x6d
  408fef:	ins    BYTE PTR es:[edi],dx
  408ff0:	daa    
  408ff1:	sahf   
  408ff2:	xchg   ecx,eax
  408ff3:	fistp  DWORD PTR [ebx-0x2cffcea3]
  408ff9:	xchg   edx,eax
  408ffa:	jnp    0x409047
  408ffc:	neg    bh
  408ffe:	mov    eax,0x4e818f81
  409003:	lea    esp,[esi]
  409005:	add    eax,0xaaa291ce
  40900a:	push   edx
  40900b:	dec    eax
  40900c:	dec    esp
  40900d:	(bad)  
  40900e:	arpl   WORD PTR [edx],sp
  409010:	add    eax,0x87b42be8
  409015:	pop    esi
  409016:	jno    0x409008
  409018:	add    BYTE PTR [esi+eiz*4-0x58],dl
  40901c:	sbb    DWORD PTR [esi+0x481dca94],0xa60214a3
  409026:	out    0xb3,eax
  409028:	dec    ebx
  409029:	mov    esi,0xd561295b
  40902e:	test   DWORD PTR [edx+edx*1-0x4e],ebx
  409032:	push   ebx
  409033:	out    dx,al
  409034:	daa    
  409035:	scas   al,BYTE PTR es:[edi]
  409036:	inc    edi
  409037:	jecxz  0x408fe1
  409039:	and    esp,esi
  40903b:	push   eax
  40903c:	pop    edx
  40903d:	inc    esp
  40903e:	mov    esi,0xedca10d9
  409043:	jecxz  0x40901d
  409045:	xor    esi,DWORD PTR [ecx]
  409047:	cmp    bh,dh
  409049:	mov    cl,0x52
  40904b:	xor    eax,0x857b6c64
  409050:	loop   0x408ff1
  409052:	mov    ds:0x6926d4c,al
  409057:	jl     0x40901e
  409059:	sbb    edi,DWORD PTR [esi]
  40905b:	repz add al,0x36
  40905e:	pusha  
  40905f:	and    ebx,DWORD PTR [eax+0x759e7f0a]
  409065:	mov    ebx,0xc598eac6
  40906a:	rcr    ebx,1
  40906c:	outs   dx,DWORD PTR ds:[esi]
  40906d:	dec    esp
  40906e:	push   ebp
  40906f:	mov    ecx,0x45531421
  409074:	push   esp
  409075:	rcr    bh,0x3b
  409078:	xchg   esi,eax
  409079:	ret    0xde9e
  40907c:	nop
  40907d:	sti    
  40907e:	pushf  
  40907f:	mov    al,ds:0x7da10566
  409084:	cs inc esp
  409086:	inc    ebx
  409087:	gs push cs
  409089:	dec    ebp
  40908a:	sbb    DWORD PTR [edi+0x3d],0x142ef3cb
  409091:	test   DWORD PTR [edx+0x38a99719],eax
  409097:	mov    dl,0x80
  409099:	jecxz  0x4090a8
  40909b:	xchg   ebp,eax
  40909c:	loopne 0x409093
  40909e:	pop    ss
  40909f:	pop    es
  4090a0:	jmp    0x409075
  4090a2:	cmp    BYTE PTR [edi+0x24],ah
  4090a5:	mov    al,0xf5
  4090a7:	idiv   BYTE PTR cs:[ecx+0x30]
  4090ab:	pop    ebp
  4090ac:	add    DWORD PTR [edi+0x56db7619],0xfbdcd3db
  4090b6:	aas    
  4090b7:	stc    
  4090b8:	(bad)  
  4090b9:	push   esi
  4090ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090bb:	xor    al,0xd4
  4090bd:	jae    0x40910d
  4090bf:	aaa    
  4090c0:	test   eax,0x3e41b8c2
  4090c5:	outs   dx,BYTE PTR ds:[esi]
  4090c6:	cmp    eax,0x45a2bac0
  4090cb:	adc    DWORD PTR [eax-0x344dedc5],ecx
  4090d1:	jmp    0x409099
  4090d3:	aaa    
  4090d4:	arpl   cx,si
  4090d6:	test   BYTE PTR [edi],bh
  4090d8:	imul   edi,DWORD PTR [esp+ecx*1+0xaa2fd10],0xffffff85
  4090e0:	leave  
  4090e1:	sbb    eax,DWORD PTR [ebp-0x6d]
  4090e4:	lock pop ebx
  4090e6:	daa    
  4090e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e8:	inc    ebp
  4090e9:	xchg   esi,eax
  4090ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090eb:	cmc    
  4090ec:	sub    DWORD PTR [ebx-0x7b],esp
  4090ef:	adc    eax,0x793073cb
  4090f4:	fild   DWORD PTR [esi-0x2b]
  4090f7:	gs (bad) 
  4090fa:	or     DWORD PTR [ebx],ebp
  4090fc:	call   0x512d:0x4b27b14a
  409103:	mov    ah,0x13
  409105:	jb     0x40911f
  409107:	pop    ds
  409108:	jge    0x4090d2
  40910a:	and    edi,DWORD PTR [ebx]
  40910c:	pop    edx
  40910d:	mov    al,0xe0
  40910f:	shl    al,0xfa
  409112:	jne    0x409162
  409114:	outs   dx,BYTE PTR ds:[esi]
  409115:	(bad)  
  409116:	outs   dx,DWORD PTR ds:[esi]
  409117:	shr    DWORD PTR [ecx-0x3a],1
  40911a:	stos   BYTE PTR es:[edi],al
  40911b:	and    BYTE PTR [ebx],bl
  40911d:	loope  0x4090d1
  40911f:	test   DWORD PTR [edx-0x26482a8c],edi
  409125:	ins    BYTE PTR es:[edi],dx
  409126:	scas   eax,DWORD PTR es:[edi]
  409127:	add    esi,ebx
  409129:	pop    ecx
  40912a:	std    
  40912b:	inc    eax
  40912c:	stos   DWORD PTR es:[edi],eax
  40912d:	clc    
  40912e:	xchg   ebp,eax
  40912f:	out    0x28,al
  409131:	test   BYTE PTR [edx-0x9],ch
  409134:	mov    bl,0xce
  409136:	fild   DWORD PTR [ebx-0x21]
  409139:	iret   
  40913a:	dec    esp
  40913b:	pusha  
  40913c:	add    DWORD PTR [edx+0x61546d96],ebx
  409142:	std    
  409143:	fmul   QWORD PTR [ebp-0x67]
  409146:	pop    ecx
  409147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409148:	push   eax
  409149:	call   0xaeaf:0x88f40c41
  409150:	nop
  409151:	sub    DWORD PTR [ebx],ecx
  409153:	dec    ebp
  409154:	pop    edx
  409155:	fcmovb st,st(4)
  409157:	out    dx,eax
  409158:	loope  0x409152
  40915a:	add    ebx,DWORD PTR [ebx+0x4f]
  40915d:	xchg   ebp,eax
  40915e:	lahf   
  40915f:	into   
  409160:	call   0x53b7:0x21f83aa
  409167:	test   edi,ebx
  409169:	test   BYTE PTR [ecx-0x78],ah
  40916c:	jecxz  0x4091a9
  40916e:	cmp    esi,DWORD PTR [esi+edi*8]
  409171:	test   al,0xe4
  409173:	sub    DWORD PTR [eax],0xffffffcb
  409176:	and    al,dl
  409178:	mov    ecx,0xb570c8f1
  40917d:	popa   
  40917e:	pop    ds
  40917f:	sub    esp,ebx
  409181:	(bad)
  409184:	dec    edi
  409185:	fsubr  QWORD PTR [ecx-0x16]
  409188:	pusha  
  409189:	mov    eax,0x8ecba46c
  40918e:	ins    DWORD PTR es:[edi],dx
  40918f:	js     0x409172
  409191:	dec    edx
  409192:	jnp    0x4091a1
  409194:	outs   dx,BYTE PTR ds:[esi]
  409195:	adc    bh,BYTE PTR [edi+0x7df1658d]
  40919b:	lea    ecx,[edi+ecx*4+0x17304389]
  4091a2:	imul   ebp,DWORD PTR [edi+0x3a],0x63bb9aa1
  4091a9:	mov    al,0x68
  4091ab:	dec    ebp
  4091ac:	ds xchg ecx,eax
  4091ae:	mov    ebp,0x2ee4368d
  4091b3:	enter  0xb4d7,0x5
  4091b7:	xor    BYTE PTR [ecx+0x7b693aa],dl
  4091bd:	mov    eax,0xde95d32c
  4091c2:	ficomp DWORD PTR [ecx-0x6d]
  4091c5:	ror    DWORD PTR [eax],0x3a
  4091c8:	and    dl,0xda
  4091cb:	jp     0x4091f9
  4091cd:	xchg   edx,eax
  4091ce:	xor    BYTE PTR [ecx-0x767ccb2d],al
  4091d4:	cmp    ecx,DWORD PTR [esi+0x57]
  4091d7:	scas   al,BYTE PTR es:[edi]
  4091d8:	sub    BYTE PTR [edi],al
  4091da:	mov    eax,0xee642c0c
  4091df:	push   edi
  4091e0:	shl    DWORD PTR [ebx+0x710b4ac9],1
  4091e6:	in     al,dx
  4091e7:	mov    al,ds:0xe952453c
  4091ec:	lock popf 
  4091ee:	outs   dx,BYTE PTR ds:[esi]
  4091ef:	mov    edi,DWORD PTR ss:[edx]
  4091f2:	cli    
  4091f3:	loopne 0x4091d5
  4091f5:	out    0xc1,eax
  4091f7:	sbb    cl,BYTE PTR [ebx-0x32]
  4091fa:	cmp    eax,0x464ffbf3
  4091ff:	dec    eax
  409200:	jmp    0x6b7b30d6
  409205:	popf   
  409206:	loop   0x40926d
  409208:	retf   0xb156
  40920b:	in     al,0x80
  40920d:	ret    
  40920e:	pop    DWORD PTR [edi]
  409210:	inc    eax
  409211:	sub    eax,0x362b4943
  409216:	in     al,dx
  409217:	or     eax,ebx
  409219:	imul   esi,DWORD PTR [ecx-0x444c3832],0x8e4a011e
  409223:	bound  esi,QWORD PTR [ebx]
  409225:	icebp  
  409226:	jle    0x4092a6
  409228:	jmp    0x4071:0x9fceee9
  40922f:	int3   
  409230:	cmp    dh,BYTE PTR [eax]
  409232:	(bad)  
  409233:	test   al,0xa1
  409235:	nop/reserved BYTE PTR [eax+0x28f77d89]
  40923c:	pop    ds
  40923d:	outs   dx,DWORD PTR ds:[esi]
  40923e:	mov    eax,gs
  409240:	imul   esi,DWORD PTR [eax],0xfffffff4
  409243:	out    dx,eax
  409244:	nop
  409245:	nop
  409246:	mov    bh,0xa
  409248:	clc    
  409249:	dec    edi
  40924a:	sbb    dl,BYTE PTR [eax]
  40924c:	push   ebp
  40924d:	ja     0x4091e2
  40924f:	mov    ds:0xfb1d5b89,al
  409254:	or     dh,BYTE PTR [ecx]
  409256:	dec    ebx
  409257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409258:	or     DWORD PTR [ebp+ecx*8+0x6d3d2e19],edi
  40925f:	dec    edx
  409260:	adc    ah,BYTE PTR [edi-0x65]
  409263:	mov    dh,0xf2
  409265:	es xchg ebx,eax
  409267:	and    BYTE PTR [edi],dl
  409269:	inc    ecx
  40926a:	dec    ebp
  40926b:	pop    ds
  40926c:	jo     0x40923d
  40926e:	push   edi
  40926f:	and    al,0x8c
  409271:	pop    fs
  409273:	inc    ebp
  409274:	sub    BYTE PTR [ecx-0x6d],0x8b
  409278:	sbb    al,0x99
  40927a:	lea    edx,[edx+0x3c]
  40927d:	js     0x4092af
  40927f:	push   ss
  409280:	sbb    DWORD PTR [eax],0x53
  409283:	mov    esp,ebx
  409285:	dec    ebx
  409286:	nop
  409287:	cmp    ebp,edi
  409289:	adc    al,0xfd
  40928b:	sti    
  40928c:	jmp    DWORD PTR [ebp+0x37b2e83a]
  409292:	out    dx,al
  409293:	push   eax
  409294:	mov    edx,0xb3fd3ad6
  409299:	lahf   
  40929a:	sahf   
  40929b:	xchg   ebp,eax
  40929c:	or     eax,0x6bc67ef3
  4092a1:	inc    esi
  4092a2:	in     al,0xbe
  4092a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a5:	sbb    BYTE PTR [edx+ebx*1-0x3a27d42e],dh
  4092ac:	push   ebx
  4092ad:	icebp  
  4092ae:	loop   0x4092af
  4092b0:	sub    eax,0xe117bc03
  4092b5:	mov    bl,0x35
  4092b7:	push   cs
  4092b8:	jp     0x4092cb
  4092ba:	outs   dx,DWORD PTR ds:[esi]
  4092bb:	ins    BYTE PTR es:[edi],dx
  4092bc:	cmp    dh,BYTE PTR [eax+0x4e]
  4092bf:	scas   eax,DWORD PTR es:[edi]
  4092c0:	mov    ebx,DWORD PTR [eax]
  4092c2:	xchg   esi,eax
  4092c3:	dec    esp
  4092c4:	sbb    ah,BYTE PTR ds:0xfbab7720
  4092ca:	adc    al,0xb1
  4092cc:	jge    0x4092ff
  4092ce:	push   edi
  4092cf:	pop    esi
  4092d0:	adc    cl,BYTE PTR [eax]
  4092d2:	loopne 0x4092ef
  4092d4:	mov    BYTE PTR [ebp+0x4e487859],bl
  4092da:	adc    DWORD PTR [eax-0x59],edx
  4092dd:	mov    dl,0x6b
  4092df:	ja     0x409293
  4092e1:	ja     0x4092f8
  4092e3:	or     DWORD PTR [ebx-0x30],ecx
  4092e6:	dec    ecx
  4092e7:	xchg   edi,eax
  4092e8:	dec    eax
  4092e9:	sub    al,0x63
  4092eb:	xor    esp,ebx
  4092ed:	lea    ebp,[ecx-0x3d]
  4092f0:	setl   BYTE PTR [ebp-0xe557d2f]
  4092f7:	shr    esi,0xf7
  4092fa:	(bad)  
  4092fb:	gs mov dh,0x23
  4092fe:	call   0xdf7a:0xe75bfe40
  409305:	mov    al,0x3a
  409307:	adc    DWORD PTR [ebx+0x6e309ff],edi
  40930d:	add    al,0x19
  40930f:	mov    edx,0xa0c5c5a2
  409314:	inc    ebp
  409315:	xchg   DWORD PTR [edx],ebx
  409317:	dec    ebx
  409318:	inc    eax
  409319:	bound  edx,QWORD PTR [eax]
  40931b:	retf   
  40931c:	fdivr  DWORD PTR [eax-0x406b0a43]
  409322:	add    DWORD PTR [esi-0x7a],esp
  409325:	leave  
  409326:	sub    eax,0x4aba94ca
  40932b:	dec    esi
  40932c:	lock aad 0x65
  40932f:	inc    esp
  409330:	mov    ds:0x13c04a36,eax
  409335:	mov    DWORD PTR [edi-0x45b188e2],0x40734c18
  40933f:	hlt    
  409340:	mov    esp,0x3a011733
  409345:	pop    eax
  409346:	icebp  
  409347:	and    eax,0xce9d759b
  40934c:	inc    eax
  40934d:	pop    ds
  40934e:	dec    ebx
  40934f:	sub    dh,BYTE PTR [ebp+0x291d11b4]
  409355:	in     al,0xd
  409357:	or     ebp,ebx
  409359:	xlat   BYTE PTR ds:[ebx]
  40935a:	push   ebx
  40935b:	stc    
  40935c:	and    BYTE PTR [edi],0x1f
  40935f:	push   esi
  409360:	dec    edx
  409361:	bound  edx,QWORD PTR [esi-0x2]
  409364:	hlt    
  409365:	push   cs
  409366:	push   cs
  409367:	cmp    BYTE PTR [edx-0x1e784fcf],cl
  40936d:	inc    ebx
  40936e:	inc    ebp
  40936f:	scas   eax,DWORD PTR es:[edi]
  409370:	cld    
  409371:	or     al,0x11
  409373:	sbb    al,0x3f
  409375:	out    0xda,eax
  409377:	adc    eax,0x2725af62
  40937c:	stc    
  40937d:	sahf   
  40937e:	inc    ebx
  40937f:	pop    ebx
  409380:	cmp    BYTE PTR [eiz*1+0x71f726fb],dh
  409387:	and    DWORD PTR [ecx+ebx*1-0x1d],0x521af7ab
  40938f:	outs   dx,DWORD PTR ds:[esi]
  409390:	loopne 0x4093ec
  409392:	cs pop eax
  409394:	cmp    al,0x11
  409396:	add    bh,BYTE PTR [ecx-0x4d]
  409399:	dec    ebx
  40939a:	aam    0xe7
  40939c:	inc    eax
  40939d:	ds in  eax,0x9e
  4093a0:	leave  
  4093a1:	lods   eax,DWORD PTR ds:[esi]
  4093a2:	dec    ebx
  4093a3:	ja     0x4093f2
  4093a5:	cwde   
  4093a6:	sbb    esp,DWORD PTR [ecx+0x200403b9]
  4093ac:	mov    ecx,0x7c47c1b3
  4093b1:	mov    ecx,0xa820c027
  4093b6:	xchg   DWORD PTR [ebx-0x25],ebx
  4093b9:	fisub  DWORD PTR [edi+0x54]
  4093bc:	nop
  4093bd:	jnp    0x4093f7
  4093bf:	popa   
  4093c0:	sub    eax,esp
  4093c2:	daa    
  4093c3:	loopne 0x4093c7
  4093c5:	scas   al,BYTE PTR es:[edi]
  4093c6:	or     al,0x5c
  4093c8:	jne    0x409385
  4093ca:	xor    BYTE PTR ds:[eax+esi*8-0x2a24d025],dh
  4093d2:	cld    
  4093d3:	loopne 0x409407
  4093d5:	add    al,0x6e
  4093d7:	cmp    BYTE PTR [edi+eax*4+0x2a79996b],bh
  4093de:	fstp   TBYTE PTR [eax+0x237b6f11]
  4093e4:	dec    ecx
  4093e5:	cld    
  4093e6:	clc    
  4093e7:	lods   al,BYTE PTR ds:[esi]
  4093e8:	add    bh,bl
  4093ea:	in     eax,0x8b
  4093ec:	and    DWORD PTR [eax+ecx*4+0x4c],eax
  4093f0:	scas   al,BYTE PTR es:[edi]
  4093f1:	push   edi
  4093f2:	out    0xdc,al
  4093f4:	sbb    al,0x3a
  4093f6:	sahf   
  4093f7:	lea    edx,ds:0xa53cf072
  4093fd:	sbb    eax,0x8ba2e10e
  409402:	dec    eax
  409403:	ror    DWORD PTR [eax],cl
  409405:	nop
  409406:	dec    eax
  409407:	add    bl,BYTE PTR [ebp+0x347d0b65]
  40940d:	pop    es
  40940e:	mov    edi,0xdc05c013
  409413:	push   edx
  409414:	mov    al,0x1e
  409416:	ror    eax,0x41
  409419:	hlt    
  40941a:	cmp    DWORD PTR [eax+0x7b],edx
  40941d:	sub    ebp,DWORD PTR [ebx+ebx*4-0x78]
  409421:	cli    
  409422:	mov    esp,0x7ea84450
  409427:	into   
  409428:	sbb    eax,0x8a33e86e
  40942d:	in     al,dx
  40942e:	cmp    dl,cl
  409430:	xchg   ecx,eax
  409431:	mov    bh,ch
  409433:	addr16 in al,dx
  409435:	add    al,0xb3
  409437:	dec    eax
  409438:	mov    DWORD PTR [ecx+0x1a],ecx
  40943b:	imul   ebx,DWORD PTR [ebx+0x5bbdd0e8],0x37
  409442:	jnp    0x4093cb
  409444:	inc    ebp
  409445:	repnz jecxz 0x409429
  409448:	xor    ecx,DWORD PTR [edx+ecx*1-0x17d24066]
  40944f:	pop    eax
  409450:	push   edx
  409451:	sub    DWORD PTR [eax+ebx*8],0x64
  409455:	dec    esp
  409456:	mov    DWORD PTR [edx-0x1382b097],0x4daeb7e5
  409460:	jle    0x4093e4
  409462:	mov    eax,ds:0x2710c1e3
  409467:	(bad)  
  409468:	in     eax,0xee
  40946a:	cmp    BYTE PTR [esi],al
  40946c:	jmp    0xd9ce:0x75316560
  409473:	lea    esi,[ecx+0xe]
  409476:	jmp    FWORD PTR ds:0x2d9a18d6
  40947c:	scas   al,BYTE PTR es:[edi]
  40947d:	push   eax
  40947e:	pop    es
  40947f:	sub    edi,ebp
  409481:	and    al,0x2a
  409483:	jns    0x409479
  409485:	xor    BYTE PTR [edi-0x56],ch
  409488:	inc    ecx
  409489:	aam    0x8f
  40948b:	ins    BYTE PTR es:[edi],dx
  40948c:	pop    edx
  40948d:	mul    BYTE PTR [edi-0x3b]
  409490:	mov    eax,ds:0x6558ed09
  409495:	fsub   DWORD PTR [ecx]
  409497:	or     cl,0x79
  40949a:	or     eax,0x121f91f6
  40949f:	jecxz  0x4094cc
  4094a1:	das    
  4094a2:	jae    0x409438
  4094a4:	push   ecx
  4094a5:	or     eax,0xb28026de
  4094aa:	cs mov ah,0xa4
  4094ad:	leave  
  4094ae:	jecxz  0x409495
  4094b0:	jmp    0xbbc7cd60
  4094b5:	test   cl,al
  4094b7:	adc    eax,0x46789c46
  4094bc:	sub    ecx,0x6e
  4094bf:	in     al,0x51
  4094c1:	shl    BYTE PTR [ebx-0x76982332],0x8b
  4094c8:	(bad)  
  4094ca:	ror    DWORD PTR [edi],0x2e
  4094cd:	jmp    0x409512
  4094cf:	push   esi
  4094d0:	icebp  
  4094d1:	jbe    0x4094a2
  4094d3:	aad    0x96
  4094d5:	das    
  4094d6:	outs   dx,BYTE PTR ds:[esi]
  4094d7:	push   0x924da289
  4094dc:	ins    BYTE PTR es:[edi],dx
  4094dd:	and    eax,0xc50e4f25
  4094e2:	inc    edi
  4094e3:	and    esi,DWORD PTR [edx]
  4094e5:	stc    
  4094e6:	push   ebp
  4094e7:	out    0x51,al
  4094e9:	jb     0x4094a4
  4094eb:	sahf   
  4094ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ed:	sub    DWORD PTR [edx],esp
  4094ef:	cli    
  4094f0:	xor    edi,DWORD PTR [esp+edx*4]
  4094f3:	dec    ecx
  4094f4:	call   0x93ca:0xb55bcf65
  4094fb:	sbb    DWORD PTR [eax],eax
  4094fd:	mov    ebx,0x5788fee8
  409502:	enter  0x8a96,0x22
  409506:	leave  
  409507:	into   
  409508:	dec    ecx
  409509:	mov    ebp,0xef757ab8
  40950e:	cmp    al,0x72
  409510:	dec    ecx
  409511:	pop    esp
  409512:	aad    0xd
  409514:	push   0x747ea100
  409519:	xor    BYTE PTR [ebx-0x78546aca],al
  40951f:	mov    ah,0xa8
  409521:	es pop esp
  409523:	xor    edi,DWORD PTR [edx+0x1052612c]
  409529:	add    esp,DWORD PTR [edi-0x47463283]
  40952f:	lahf   
  409530:	sar    DWORD PTR [esi],1
  409532:	mov    al,ds:0xfd0fa989
  409537:	pop    ebx
  409538:	mov    WORD PTR [esi+0x1058bb65],?
  40953e:	in     eax,0xb2
  409540:	test   BYTE PTR [esi],dl
  409542:	stc    
  409543:	sbb    eax,0x8a2e0736
  409548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409549:	sub    cl,BYTE PTR ds:0x3d1c6d12
  40954f:	sbb    bh,BYTE PTR [esi+eax*1-0x4a338bd2]
  409556:	test   DWORD PTR [ebx-0x7b],esp
  409559:	mov    ?,WORD PTR [esi-0x3cdee373]
  40955f:	enter  0xb29b,0x37
  409563:	ret    0x53af
  409566:	inc    eax
  409567:	mov    ch,0xa0
  409569:	test   eax,0xecd059dd
  40956e:	cmp    al,0x40
  409570:	out    dx,al
  409571:	mov    dl,0x44
  409573:	or     dh,BYTE PTR [ebp-0x1a1e38b7]
  409579:	add    ecx,esi
  40957b:	cdq    
  40957c:	adc    eax,0xd32fc3e
  409581:	mov    ds:0xfb7c060,eax
  409586:	and    al,0x26
  409588:	inc    ecx
  409589:	cmp    al,0x5
  40958b:	stos   BYTE PTR es:[edi],al
  40958c:	cmp    ebx,DWORD PTR [edx+edx*8+0x15]
  409590:	add    ebp,DWORD PTR [edi+0x7b8d2333]
  409596:	pop    ss
  409597:	sbb    eax,0x441dfb19
  40959c:	pushf  
  40959d:	mov    ebp,0xea1747e6
  4095a2:	pop    edi
  4095a3:	imul   esi,DWORD PTR [ecx+0x6ab871d1],0x70c69920
  4095ad:	aaa    
  4095ae:	inc    edx
  4095af:	mov    ch,0x74
  4095b1:	sbb    eax,0xcd32f482
  4095b6:	mov    ebp,0xdfb75f98
  4095bb:	shl    DWORD PTR [ebp+0x4a9f281e],1
  4095c1:	jbe    0x409595
  4095c3:	dec    eax
  4095c4:	fxch   st(6)
  4095c6:	adc    BYTE PTR [eax-0x10bc958e],ah
  4095cc:	pop    ebx
  4095cd:	(bad)  
  4095ce:	and    ecx,edx
  4095d0:	jecxz  0x409622
  4095d2:	lds    esp,FWORD PTR [eax+0x7e913510]
  4095d8:	or     eax,0x3e94174e
  4095dd:	pop    eax
  4095de:	loop   0x409563
  4095e0:	sti    
  4095e1:	(bad)  
  4095e2:	retf   
  4095e3:	imul   edi,DWORD PTR [edx-0x555e098c],0xffffffdf
  4095ea:	out    0x93,al
  4095ec:	js     0x4095f4
  4095ee:	fmul   DWORD PTR [eax+0x7e]
  4095f1:	jle    0x40964a
  4095f3:	xor    ebp,DWORD PTR [esi+0x5e]
  4095f6:	xor    DWORD PTR [edi],edi
  4095f8:	mov    BYTE PTR [ecx+0x3f1923e5],ah
  4095fe:	pusha  
  4095ff:	sbb    BYTE PTR [edx+0x6a4a891],0x8f
  409606:	test   cl,dl
  409608:	push   0x78
  40960a:	out    dx,al
  40960b:	inc    eax
  40960c:	xor    eax,0x89802c04
  409611:	pop    esi
  409612:	mov    al,0x58
  409614:	add    bl,cl
  409616:	daa    
  409617:	popa   
  409618:	jns    0x4095e6
  40961a:	mov    ds:0xa98e5d0f,eax
  40961f:	dec    edx
  409620:	xchg   edx,eax
  409621:	sar    DWORD PTR ds:0xd9c36b2d,cl
  409627:	dec    eax
  409628:	inc    eax
  409629:	arpl   si,bp
  40962b:	ficom  WORD PTR [edi+eiz*4+0x17853991]
  409632:	sbb    BYTE PTR [eax-0x462825],cl
  409638:	jg     0x4095df
  40963a:	(bad)  
  40963b:	iret   
  40963c:	pop    ebp
  40963d:	loop   0x40965c
  40963f:	adc    ebp,DWORD PTR [edx-0x59]
  409642:	in     eax,dx
  409643:	test   bh,ah
  409645:	adc    dh,ch
  409647:	addr16 pop es
  409649:	add    al,0x5
  40964b:	cdq    
  40964c:	xor    eax,0xf33484aa
  409651:	or     eax,0x634a19ed
  409656:	mov    al,0x95
  409658:	call   0x29d24c4f
  40965d:	out    0x9b,eax
  40965f:	adc    dh,bl
  409661:	aaa    
  409662:	inc    ecx
  409663:	sar    ecx,cl
  409665:	sub    esi,DWORD PTR [eax]
  409667:	aam    0x5f
  409669:	(bad)  
  40966a:	xlat   BYTE PTR ds:[ebx]
  40966b:	inc    ebp
  40966c:	sbb    al,0x37
  40966e:	mov    ebp,0xc97a0b7d
  409673:	pop    ecx
  409674:	in     al,dx
  409675:	push   edi
  409676:	out    0x1f,al
  409678:	sub    ecx,DWORD PTR [ebp+0x7eb42309]
  40967e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40967f:	jb     0x40963e
  409681:	cmc    
  409682:	inc    ebx
  409683:	xchg   ecx,eax
  409684:	in     eax,dx
  409685:	stos   BYTE PTR es:[edi],al
  409686:	xchg   esi,eax
  409687:	lock fist WORD PTR [ecx-0x1cc85c5b]
  40968e:	push   esp
  40968f:	and    DWORD PTR [eax-0x77192b27],esi
  409695:	pop    ecx
  409696:	fisttp QWORD PTR [edx]
  409698:	test   BYTE PTR [ebp-0x714d0eb0],al
  40969e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969f:	jno    0x409634
  4096a1:	stc    
  4096a2:	inc    eax
  4096a3:	push   0xffffffa7
  4096a5:	mov    dl,0x11
  4096a7:	sub    BYTE PTR [edi],bh
  4096a9:	fdivr  QWORD PTR [ecx+0x68a196c8]
  4096af:	test   eax,0xa3ac8edb
  4096b4:	call   0x5c24:0x9453fd6d
  4096bb:	mov    WORD PTR [edx-0x7510aaf4],ds
  4096c1:	jmp    0x20014407
  4096c6:	ins    BYTE PTR es:[edi],dx
  4096c7:	out    0xb4,al
  4096c9:	lock dec edi
  4096cb:	fwait
  4096cc:	push   cs
  4096cd:	sub    eax,0x67e8f1c0
  4096d2:	dec    edx
  4096d3:	das    
  4096d4:	in     eax,dx
  4096d5:	addr16 inc eax
  4096d7:	stos   DWORD PTR es:[edi],eax
  4096d8:	xor    cl,BYTE PTR [eax]
  4096da:	mov    dh,BYTE PTR [esi-0x2077e06]
  4096e0:	push   ecx
  4096e1:	out    dx,al
  4096e2:	sub    DWORD PTR [ecx+0x51dda926],ebx
  4096e8:	je     0x409712
  4096ea:	pop    esp
  4096eb:	adc    eax,0x6b5b3832
  4096f0:	mov    eax,0x548ddc5e
  4096f5:	fs js  0x40967a
  4096f8:	adc    DWORD PTR [edi+ebp*1],esp
  4096fb:	jns    0x4096f4
  4096fd:	mov    bh,BYTE PTR ds:[edi+0x74]
  409701:	sub    DWORD PTR [eax-0x2d96c5da],esi
  409707:	lahf   
  409708:	pop    ebx
  409709:	and    al,0x2d
  40970b:	xlat   BYTE PTR ds:[ebx]
  40970c:	pop    edx
  40970d:	test   eax,0x86c30981
  409712:	push   ebp
  409713:	add    dh,BYTE PTR [eax*1-0x2eccc4c9]
  40971a:	xor    esp,edx
  40971c:	ror    DWORD PTR [eax],1
  40971e:	inc    ecx
  40971f:	push   ebp
  409720:	mov    esp,0x3b15d642
  409725:	mov    ds:0x6bfa394e,al
  40972a:	jge    0x4097a4
  40972c:	inc    esi
  40972d:	lods   al,BYTE PTR ds:[esi]
  40972e:	mov    eax,ds:0x3c449f9d
  409733:	hlt    
  409734:	push   ebx
  409735:	cli    
  409736:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409738:	inc    esi
  409739:	jb     0x409704
  40973b:	inc    esp
  40973c:	jle    0x409786
  40973e:	or     BYTE PTR [ebp+0x53],bh
  409741:	(bad)  
  409742:	ss repnz das 
  409745:	aam    0x25
  409747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409748:	add    eax,0x6244f64c
  40974d:	(bad)  
  40974f:	mov    edx,0xaa6d753b
  409754:	scas   al,BYTE PTR es:[edi]
  409755:	jl     0x409782
  409757:	add    eax,0x21df01ca
  40975c:	das    
  40975d:	(bad)  [ebp-0x31]
  409760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409761:	fnsave [edx+ebx*8+0x76]
  409765:	mov    ds:0x48aa8645,eax
  40976a:	jg     0x409730
  40976c:	sub    ecx,DWORD PTR [esp+eiz*8-0x51]
  409770:	or     BYTE PTR [edi+0x20],dl
  409773:	imul   esp,DWORD PTR [ecx-0x2671781f],0x1323d758
  40977d:	pop    ecx
  40977e:	sub    eax,0x601c0724
  409783:	xor    al,0xa0
  409785:	ror    DWORD PTR [eax+0x7b],cl
  409788:	add    ebx,DWORD PTR [edi+esi*4-0x71]
  40978c:	mov    ah,0x65
  40978e:	fdivr  DWORD PTR [ebx+edi*1+0x1da520f1]
  409795:	or     al,dh
  409797:	or     ch,BYTE PTR [edi-0x4e]
  40979a:	inc    ebx
  40979b:	or     dh,BYTE PTR [edi]
  40979d:	jge    0x4097be
  40979f:	adc    al,0xaa
  4097a1:	sbb    al,0x68
  4097a3:	fmul   DWORD PTR [ebp-0x5f]
  4097a6:	dec    edx
  4097a7:	add    al,0xa8
  4097a9:	fwait
  4097aa:	test   eax,0x1d1d98ea
  4097af:	xchg   cl,al
  4097b1:	mov    BYTE PTR [eax],ah
  4097b3:	das    
  4097b4:	test   eax,0x9c4c587f
  4097b9:	push   esp
  4097ba:	test   esp,0x63f44607
  4097c0:	dec    ecx
  4097c1:	pushf  
  4097c2:	pop    esp
  4097c3:	(bad)  
  4097c4:	rcr    dl,0x8f
  4097c7:	int    0x94
  4097c9:	xchg   esp,eax
  4097ca:	xchg   ebp,eax
  4097cb:	lahf   
  4097cc:	ror    DWORD PTR [ecx],cl
  4097ce:	call   0x24b61d1f
  4097d3:	xchg   DWORD PTR [edi],eax
  4097d5:	sahf   
  4097d6:	rol    DWORD PTR [edi-0x50],0x2d
  4097da:	mov    bl,0x17
  4097dc:	outs   dx,BYTE PTR ds:[esi]
  4097dd:	jmp    0x409775
  4097df:	jbe    0x4097c6
  4097e1:	retf   
  4097e2:	loope  0x409786
  4097e4:	mov    eax,0x4ab1cdc8
  4097e9:	gs mov edx,0x13d8eaa0
  4097ef:	daa    
  4097f0:	cmp    BYTE PTR [eax+0x7],ch
  4097f3:	push   esi
  4097f4:	pop    edi
  4097f5:	test   DWORD PTR [ecx-0x65],ebx
  4097f8:	ja     0x4097cc
  4097fa:	cmp    DWORD PTR ds:0x206c3dc0,0xa926557d
  409804:	pop    eax
  409805:	cmc    
  409806:	and    eax,0xf651a068
  40980b:	out    dx,al
  40980c:	mov    eax,0x2fb28e43
  409811:	push   ss
  409812:	retf   0x57d5
  409815:	mov    bh,0xde
  409817:	mov    dl,al
  409819:	loope  0x409846
  40981b:	aam    0xcf
  40981d:	or     eax,edi
  40981f:	cdq    
  409820:	je     0x4097bc
  409822:	sbb    ah,BYTE PTR [ecx-0x72]
  409825:	or     eax,0x28eed358
  40982a:	sbb    esp,esi
  40982c:	(bad)  
  40982d:	int    0xa7
  40982f:	iret   
  409830:	fimul  WORD PTR [esi+eiz*4+0x6ab1362a]
  409837:	sar    DWORD PTR [ecx],cl
  409839:	cmp    BYTE PTR [ebx],0xe6
  40983c:	cmp    eax,DWORD PTR [edx-0x2f]
  40983f:	jl     0x40983a
  409841:	outs   dx,BYTE PTR ds:[esi]
  409842:	into   
  409843:	push   esi
  409844:	out    0x38,al
  409846:	(bad)  
  409847:	jle    0x409804
  409849:	sbb    al,0x67
  40984b:	pop    esp
  40984c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984d:	xchg   esi,eax
  40984e:	cmp    al,BYTE PTR [eax-0x57]
  409851:	mov    eax,?
  409853:	add    al,BYTE PTR [ecx]
  409855:	stc    
  409856:	lea    edi,ds:0xdda23a79
  40985c:	xor    ecx,DWORD PTR [edi-0x93a03e5]
  409862:	and    DWORD PTR [edx],ebp
  409864:	lods   eax,DWORD PTR ds:[esi]
  409865:	jmp    0x52f6:0x7b286fa9
  40986c:	pop    edi
  40986d:	fadd   QWORD PTR [esi+0x7a]
  409870:	xor    BYTE PTR [ebp-0x2c],bh
  409873:	pop    es
  409874:	sbb    ah,bh
  409876:	xor    eax,0xc605dd90
  40987b:	test   eax,0xd2b2697a
  409880:	dec    ecx
  409881:	jg     0x4098d3
  409883:	mov    bh,0x65
  409885:	push   ss
  409886:	push   edi
  409887:	push   esi
  409888:	fstp   QWORD PTR [edi+0x13]
  40988b:	xchg   DWORD PTR [ecx-0x49],ebx
  40988e:	pop    ds
  40988f:	stos   DWORD PTR es:[edi],eax
  409890:	pop    ds
  409891:	std    
  409892:	pusha  
  409893:	xor    al,0x2f
  409895:	dec    ecx
  409896:	gs jg  0x4098bc
  409899:	mov    ecx,0xc54c0cf
  40989e:	jns    0x40983f
  4098a0:	les    esp,FWORD PTR [ebx-0x54]
  4098a3:	ja     0x40991f
  4098a5:	std    
  4098a6:	mov    eax,0xf24dee7c
  4098ab:	mov    edi,0xfb8dc58b
  4098b0:	out    dx,al
  4098b1:	jmp    0x40984e
  4098b3:	sub    DWORD PTR [edi-0x7adbc938],ebp
  4098b9:	jp     0x40987f
  4098bb:	xchg   DWORD PTR [eax],ebp
  4098bd:	fs jmp 0xb320:0x93f9737e
  4098c5:	jbe    0x409858
  4098c7:	inc    ecx
  4098c8:	ins    DWORD PTR es:[edi],dx
  4098c9:	or     al,0x5a
  4098cb:	and    al,0xb1
  4098cd:	ins    DWORD PTR es:[edi],dx
  4098ce:	sbb    BYTE PTR [edx-0x35a6e5c0],bl
  4098d4:	inc    edi
  4098d5:	icebp  
  4098d6:	mov    cl,BYTE PTR [edx+0x21]
  4098d9:	xor    al,0xd6
  4098db:	ins    BYTE PTR es:[edi],dx
  4098dc:	in     al,dx
  4098dd:	lods   eax,DWORD PTR ds:[esi]
  4098de:	stc    
  4098df:	dec    ebx
  4098e0:	in     al,0xcc
  4098e2:	pop    ebx
  4098e3:	loope  0x409932
  4098e5:	aad    0xc2
  4098e7:	jecxz  0x4098cc
  4098e9:	in     al,dx
  4098ea:	icebp  
  4098eb:	inc    esi
  4098ec:	and    eax,0xd8bdf03d
  4098f1:	and    al,0x4b
  4098f3:	jbe    0x409889
  4098f5:	cmp    ecx,DWORD PTR [eax]
  4098f7:	push   0x11ed7dea
  4098fc:	out    0xb8,eax
  4098fe:	mov    ah,0x57
  409900:	and    eax,eax
  409902:	mov    eax,0x45d7d004
  409908:	push   edi
  409909:	inc    esi
  40990a:	mov    ebx,0xf4f98eb8
  40990f:	pop    edi
  409910:	xlat   BYTE PTR ds:[ebx]
  409911:	lahf   
  409912:	pmullw mm5,QWORD PTR [edi+0x55]
  409916:	stc    
  409917:	adc    DWORD PTR [edx+0x518b7370],esp
  40991d:	mov    dl,0x8
  40991f:	sub    BYTE PTR [esp+eiz*4+0x6e40ce9e],ah
  409926:	(bad)  
  409927:	imul   DWORD PTR [edx-0x64d19e72]
  40992d:	in     eax,dx
  40992e:	mov    ah,0xe
  409930:	inc    esi
  409931:	push   0x551b3e35
  409936:	and    bl,BYTE PTR [ebp+0x56726494]
  40993c:	pop    edi
  40993d:	sahf   
  40993e:	shl    DWORD PTR [eax+0x14],cl
  409941:	repnz test BYTE PTR [ebx-0x55],bh
  409945:	jnp    0x4098db
  409947:	mov    BYTE PTR [edi],0x26
  40994a:	mov    ebx,0x2adfbbb4
  40994f:	in     eax,0x64
  409951:	rcr    DWORD PTR [ecx],0xcd
  409954:	and    DWORD PTR [edi-0x1788789],eax
  40995a:	sar    DWORD PTR [ecx+0x621972f4],cl
  409960:	or     al,ch
  409962:	retf   
  409963:	and    esi,ebx
  409965:	ss mov bh,0xdb
  409968:	adc    al,0x45
  40996a:	(bad)  
  40996b:	jge    0x40995a
  40996d:	mov    bl,0x9f
  40996f:	ins    DWORD PTR es:[edi],dx
  409970:	leave  
  409971:	push   edi
  409972:	push   0xffffffa1
  409974:	daa    
  409975:	inc    ebp
  409976:	push   ecx
  409977:	add    DWORD PTR [esi+0x4c57c01f],0x5b
  40997e:	push   0xf9e1c40c
  409983:	dec    eax
  409984:	adc    dh,BYTE PTR [edi-0xe027739]
  40998a:	xor    bl,bh
  40998c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40998d:	inc    ebx
  40998e:	(bad)  
  409990:	jb     0x40996b
  409992:	rcr    BYTE PTR [ebx+0x6c4fee3c],0x9b
  409999:	pop    es
  40999a:	in     eax,0x8d
  40999c:	xchg   ebx,eax
  40999d:	jmp    0x40994f
  40999f:	pop    esi
  4099a0:	jnp    0x409a0d
  4099a2:	jae    0x409a1e
  4099a4:	xor    eax,0x71551db2
  4099a9:	sub    DWORD PTR [edi+0x7be991ec],0x31
  4099b0:	and    edx,DWORD PTR [edx]
  4099b2:	jbe    0x4099ed
  4099b4:	xor    BYTE PTR [esi+0x334a4289],dl
  4099ba:	mov    ds:0xa31b9e11,al
  4099bf:	rcr    BYTE PTR [esi-0x4f834152],1
  4099c5:	mov    cl,0xcc
  4099c7:	dec    esp
  4099c8:	jg     0x40999e
  4099ca:	rol    DWORD PTR ds:0x9005483a,1
  4099d0:	or     al,al
  4099d2:	jae    0x409a4e
  4099d4:	mov    edi,ebp
  4099d6:	cmc    
  4099d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d8:	sar    BYTE PTR [esi+0x1e],cl
  4099db:	mov    BYTE PTR [ecx],ah
  4099dd:	mov    cl,0x57
  4099df:	or     al,0xed
  4099e1:	fdivr  st,st(1)
  4099e3:	pushf  
  4099e4:	and    al,0x5d
  4099e6:	ret    0x31a
  4099e9:	stc    
  4099ea:	dec    esi
  4099eb:	call   0xd7f3:0x9caf811b
  4099f2:	push   0x52a272ef
  4099f7:	imul   esp,DWORD PTR [edx-0x1],0xffffffad
  4099fb:	sub    DWORD PTR [edi],eax
  4099fd:	call   0x4617:0x3cdea06d
  409a04:	sbb    edi,edi
  409a06:	mov    ds:0xc03d4cba,al
  409a0b:	hlt    
  409a0c:	and    eax,0xa50ce70
  409a11:	mov    ch,0xe
  409a13:	(bad)  
  409a14:	push   0xbd8dc963
  409a19:	ret    
  409a1a:	outs   dx,BYTE PTR ds:[esi]
  409a1b:	jge    0x409a4c
  409a1d:	jmp    0x4099fc
  409a1f:	ins    DWORD PTR es:[edi],dx
  409a20:	jbe    0x4099ee
  409a22:	sbb    DWORD PTR [edi],edx
  409a24:	(bad)  [ecx+0xed0d8a0]
  409a2a:	mov    ch,0x25
  409a2c:	push   0xffffffc4
  409a2e:	pop    ss
  409a2f:	(bad)  
  409a30:	lock pop edi
  409a32:	and    dh,dh
  409a34:	mov    cl,0xba
  409a36:	lods   al,BYTE PTR ds:[esi]
  409a37:	ror    BYTE PTR [eax-0x43],1
  409a3a:	imul   esi,esi,0xf660f546
  409a40:	mov    ds:0xde67049c,al
  409a45:	and    DWORD PTR [ecx],ecx
  409a47:	enter  0xd2c1,0x19
  409a4b:	int3   
  409a4c:	lea    ebp,[esi+0x44f6ee64]
  409a52:	lahf   
  409a53:	pop    edx
  409a54:	addr16 add edx,0x36
  409a58:	jle    0x409abf
  409a5a:	arpl   WORD PTR [esi+0x1405880f],dx
  409a60:	push   0xdab47883
  409a65:	ins    BYTE PTR es:[edi],dx
  409a66:	js     0x409a63
  409a68:	pop    edx
  409a69:	(bad)  
  409a6a:	int3   
  409a6b:	push   edi
  409a6c:	jbe    0x409a9d
  409a6e:	scas   eax,DWORD PTR es:[edi]
  409a6f:	(bad)  
  409a70:	icebp  
  409a71:	adc    BYTE PTR [eax-0x19],dl
  409a74:	retf   0x6347
  409a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a78:	test   eax,0x518ed6ec
  409a7d:	or     dh,cl
  409a7f:	mov    ebp,0x95321049
  409a84:	mov    WORD PTR [ecx],?
  409a86:	xchg   edi,eax
  409a87:	es xchg esp,eax
  409a89:	mov    dh,bl
  409a8b:	loopne 0x409a1a
  409a8d:	sbb    DWORD PTR [esi],0xa76cbbe0
  409a93:	jns    0x409a1a
  409a95:	in     al,dx
  409a96:	lods   al,BYTE PTR ds:[esi]
  409a97:	sub    bh,ah
  409a99:	call   0x82b7:0x9ae6c13f
  409aa0:	add    dh,BYTE PTR [edi-0x47]
  409aa3:	(bad)  [esi]
  409aa5:	stos   BYTE PTR es:[edi],al
  409aa6:	xchg   ebp,eax
  409aa7:	popf   
  409aa8:	fucomi st,st(7)
  409aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aab:	jmp    0xde6eb88d
  409ab0:	das    
  409ab1:	mov    bh,0xce
  409ab3:	sbb    al,0xcc
  409ab5:	adc    ecx,ebp
  409ab7:	sbb    dh,BYTE PTR [edx+0x7a0267d2]
  409abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abe:	or     dl,BYTE PTR [edx-0x7b]
  409ac1:	jbe    0x409b1d
  409ac3:	jb     0x409af9
  409ac5:	mov    ah,0x47
  409ac7:	lods   al,BYTE PTR ds:[esi]
  409ac8:	pop    esp
  409ac9:	cli    
  409aca:	push   ebp
  409acb:	ret    0x1a6b
  409ace:	jge    0x409b05
  409ad0:	out    dx,eax
  409ad1:	add    ecx,edx
  409ad3:	retf   
  409ad4:	test   al,0x9a
  409ad6:	adc    DWORD PTR [ecx],eax
  409ad8:	jne    0x409b18
  409ada:	mov    ebp,0x11838a65
  409adf:	jnp    0x409a94
  409ae1:	mov    dh,0x6d
  409ae3:	mov    eax,0x5d994aa7
  409ae8:	scas   al,BYTE PTR es:[edi]
  409ae9:	mov    esp,?
  409aeb:	je     0x409aee
  409aed:	lods   al,BYTE PTR ds:[esi]
  409aee:	push   es
  409aef:	sub    al,0xc8
  409af1:	aad    0x6f
  409af3:	dec    ecx
  409af4:	push   ecx
  409af5:	(bad)  
  409af7:	push   DWORD PTR [edi-0x76]
  409afa:	mov    ah,0x7
  409afc:	das    
  409afd:	fidivr WORD PTR [edx-0x61]
  409b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b01:	add    cl,BYTE PTR [esi+0x7d]
  409b04:	or     bh,ah
  409b06:	sbb    eax,0x87ccdbfc
  409b0b:	(bad)  
  409b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0d:	and    BYTE PTR [edi+ebx*8-0x1d],bl
  409b11:	jmp    0x409b3d
  409b13:	stos   BYTE PTR es:[edi],al
  409b14:	and    DWORD PTR [ecx],0x541123c2
  409b1a:	xor    al,0x91
  409b1c:	pop    esi
  409b1d:	pop    edx
  409b1e:	loopne 0x409aae
  409b20:	dec    esp
  409b21:	stc    
  409b22:	jns    0x409af6
  409b24:	mul    DWORD PTR [edi-0x5936b7d8]
  409b2a:	mov    WORD PTR [edx-0xd],fs
  409b2d:	in     al,dx
  409b2e:	jge    0x409ae0
  409b30:	add    ecx,esp
  409b32:	cmp    al,0xd7
  409b34:	mov    cl,0xa3
  409b36:	ins    BYTE PTR es:[edi],dx
  409b37:	mov    DWORD PTR [edx-0x3094994d],eax
  409b3d:	retf   0x64e
  409b40:	shr    DWORD PTR [ebp+0x72],1
  409b43:	or     cl,dl
  409b45:	add    eax,0xedc8fffe
  409b4a:	inc    ebx
  409b4b:	fcmovnbe st,st(2)
  409b4d:	push   ebp
  409b4e:	inc    ebx
  409b4f:	pop    edi
  409b50:	pop    ds
  409b51:	xchg   ebx,eax
  409b52:	clc    
  409b53:	jns    0x409bd1
  409b55:	jbe    0x409b34
  409b57:	sub    al,0xc5
  409b59:	loope  0x409b00
  409b5b:	xor    al,0xad
  409b5d:	and    DWORD PTR [ebp+0x68],ebp
  409b60:	adc    eax,DWORD PTR [esi-0x7b]
  409b63:	mov    dl,0x43
  409b65:	xor    eax,0xcde4a672
  409b6a:	mov    ds:0x4291380c,eax
  409b6f:	cmp    BYTE PTR [ecx+eax*2],cl
  409b72:	dec    esi
  409b73:	sub    DWORD PTR [edx],esp
  409b75:	or     DWORD PTR [eax],edx
  409b77:	test   eax,0x380d7c54
  409b7c:	pop    ebx
  409b7d:	pop    ebx
  409b7e:	call   0x90b0:0x6c00f64f
  409b85:	mov    al,ds:0xbf1ddd18
  409b8a:	mov    bl,0x58
  409b8c:	dec    ecx
  409b8d:	cmp    al,0x23
  409b8f:	test   esi,esi
  409b91:	das    
  409b92:	add    bh,BYTE PTR [edi]
  409b94:	push   edi
  409b95:	cmp    bh,BYTE PTR [ecx]
  409b97:	adc    eax,edx
  409b99:	mov    ah,0x37
  409b9b:	sahf   
  409b9c:	int3   
  409b9d:	(bad)  
  409b9e:	mov    al,ds:0xadec9fd
  409ba3:	push   esi
  409ba4:	sub    BYTE PTR [eax+0x7c],0xa8
  409ba8:	jp     0x409beb
  409baa:	ret    
  409bab:	aaa    
  409bac:	lods   al,BYTE PTR ds:[esi]
  409bad:	and    DWORD PTR [edx+0x29238be2],ebx
  409bb3:	loop   0x409b62
  409bb5:	scas   eax,DWORD PTR es:[edi]
  409bb6:	pop    eax
  409bb7:	int3   
  409bb8:	imul   edx,DWORD PTR es:[ebx+0x51],0xe101bf3d
  409bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc1:	clc    
  409bc2:	inc    ebx
  409bc3:	shr    DWORD PTR [esi-0x4836e2f4],0xf1
  409bca:	cmp    al,0x52
  409bcc:	mov    ch,0x7c
  409bce:	repz jb 0x409c40
  409bd1:	scas   al,BYTE PTR es:[edi]
  409bd2:	cdq    
  409bd3:	mov    al,0x99
  409bd5:	cmp    DWORD PTR [eax+0x62],0x411b25b9
  409bdc:	cmp    BYTE PTR [ebp+0x50],ah
  409bdf:	jmp    0x409c0c
  409be1:	jmp    0x25f:0x4d0f7e0b
  409be8:	fstp   TBYTE PTR [edi-0x20]
  409beb:	rol    BYTE PTR [ecx],0xc9
  409bee:	push   es
  409bef:	xor    al,0xb1
  409bf1:	xchg   DWORD PTR [ebx+0x8],esp
  409bf4:	mov    ds,WORD PTR ds:0x2bac1d0b
  409bfa:	cmp    eax,0x31b2e772
  409bff:	inc    ebp
  409c00:	std    
  409c01:	and    DWORD PTR [edx],0x63a749cc
  409c07:	adc    esi,DWORD PTR [eax]
  409c09:	(bad)
  409c0c:	push   es
  409c0d:	hlt    
  409c0e:	xchg   edx,eax
  409c0f:	pusha  
  409c10:	popa   
  409c11:	das    
  409c12:	aas    
  409c13:	cdq    
  409c14:	aaa    
  409c15:	jmp    0xd4241a89
  409c1a:	xchg   edi,eax
  409c1b:	sub    al,0xdd
  409c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c1e:	xchg   ebp,eax
  409c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c20:	push   0x1
  409c22:	mov    WORD PTR [edx+0x2d],ss
  409c25:	daa    
  409c26:	inc    edi
  409c27:	mov    ah,0x7e
  409c29:	data16 stos BYTE PTR es:[edi],al
  409c2b:	pop    edx
  409c2c:	ret    
  409c2d:	jmp    0xb7080b76
  409c32:	mov    dl,0x5e
  409c34:	dec    ebp
  409c35:	jmp    0xfc1e4b3c
  409c3a:	in     al,0x19
  409c3c:	fwait
  409c3d:	push   cx
  409c3f:	mov    esi,0x68959cc1
  409c44:	push   ebx
  409c45:	xor    BYTE PTR [ebx],bh
  409c47:	jl     0x409c4a
  409c49:	push   ecx
  409c4a:	bound  edi,QWORD PTR [eax+edx*2+0x43]
  409c4e:	pop    es
  409c4f:	jg     0x409c67
  409c51:	cmc    
  409c52:	push   ss
  409c53:	les    ecx,FWORD PTR [edx+0x44]
  409c56:	push   ss
  409c57:	jmp    0x247e:0x861c2442
  409c5e:	cmovo  eax,DWORD PTR [eax-0x1]
  409c62:	mov    ah,BYTE PTR [ebx]
  409c64:	sbb    ebp,DWORD PTR ds:0xd5e0b626
  409c6a:	fsub   DWORD PTR es:[esi]
  409c6d:	pop    edi
  409c6e:	jnp    0x409c26
  409c70:	mov    ebp,0xc25c8898
  409c75:	sbb    esi,0x6d
  409c78:	sub    esi,DWORD PTR [eax+0xe8fa768]
  409c7e:	cmp    esp,DWORD PTR [ebx-0x60]
  409c81:	pop    ebp
  409c82:	mov    ds:0x748b1043,al
  409c87:	mov    es,WORD PTR [eax-0x5f]
  409c8a:	mov    BYTE PTR [esi],0xec
  409c8d:	xor    ebx,esi
  409c8f:	adc    al,0x77
  409c91:	mov    eax,ds:0x7aaa5a82
  409c96:	add    bh,0xf
  409c99:	loope  0x409cf3
  409c9b:	dec    eax
  409c9c:	dec    esp
  409c9d:	or     al,BYTE PTR [ebx+0x76]
  409ca0:	mov    ebx,0xe3c45389
  409ca5:	dec    edi
  409ca6:	pop    ds
  409ca7:	repnz mov DWORD PTR [edi-0x1895ad80],0x91c2db6e
  409cb2:	shl    BYTE PTR [ebp-0x40],0x6a
  409cb6:	pushf  
  409cb7:	and    DWORD PTR cs:[ebx],ecx
  409cba:	out    0xac,eax
  409cbc:	stc    
  409cbd:	das    
  409cbe:	mov    dl,0x82
  409cc0:	push   es
  409cc1:	xlat   BYTE PTR ds:[ebx]
  409cc2:	cmp    DWORD PTR [esi],esp
  409cc4:	in     eax,dx
  409cc5:	(bad)  
  409cc7:	push   es
  409cc8:	dec    ecx
  409cc9:	outs   dx,DWORD PTR ds:[esi]
  409cca:	mov    edx,0x3f19a3c0
  409ccf:	adc    al,0x8b
  409cd1:	sbb    dl,BYTE PTR [ebp-0x2eda26f5]
  409cd7:	jo     0x409c70
  409cd9:	sub    al,0x9c
  409cdb:	in     al,dx
  409cdc:	adc    dh,BYTE PTR [ebx+0x2]
  409cdf:	sub    DWORD PTR [edx],ebp
  409ce1:	test   al,dh
  409ce3:	inc    edi
  409ce4:	mov    ebp,0x99f3907f
  409ce9:	and    al,0x86
  409ceb:	js     0x409cf1
  409ced:	nop
  409cee:	push   0x1c
  409cf0:	cmp    eax,0x977ceb07
  409cf5:	and    dl,al
  409cf7:	aas    
  409cf8:	adc    dl,ah
  409cfa:	or     eax,0xe69d16f2
  409cff:	leave  
  409d00:	xchg   esp,eax
  409d01:	dec    eax
  409d02:	fbstp  TBYTE PTR [edx-0x22]
  409d05:	popf   
  409d06:	jbe    0x409cdf
  409d08:	dec    ebx
  409d09:	sub    ebx,esi
  409d0b:	gs in  eax,0xda
  409d0e:	ja     0x409d2b
  409d10:	mov    dl,0x58
  409d12:	in     eax,0x12
  409d14:	mov    ebx,0x2faab743
  409d19:	add    bl,BYTE PTR [ebx-0x75ba63f2]
  409d1f:	dec    edi
  409d20:	mov    esp,0x16691e98
  409d25:	mov    BYTE PTR [eax],ch
  409d27:	cmp    bl,BYTE PTR [edx]
  409d29:	and    DWORD PTR [edx],0x4b
  409d2c:	cmc    
  409d2d:	cmp    ch,BYTE PTR ds:0x19fe96e6
  409d33:	loop   0x409cc7
  409d35:	inc    ebp
  409d36:	sub    edi,ebp
  409d38:	and    esp,DWORD PTR [ebx-0x529c2d83]
  409d3e:	data16 fmul QWORD PTR [edx-0x7d]
  409d42:	cs push ebp
  409d44:	and    al,0xda
  409d46:	mov    esp,0x784febc9
  409d4b:	pop    esi
  409d4c:	sahf   
  409d4d:	push   eax
  409d4e:	rcl    esp,cl
  409d50:	xchg   edx,eax
  409d51:	xor    BYTE PTR [eax+ecx*1],0xa8
  409d55:	enter  0x815a,0x86
  409d59:	xchg   ah,ah
  409d5b:	sar    eax,0xc7
  409d5e:	mov    ah,0x5d
  409d60:	repz xor eax,0x3e0b1895
  409d66:	mov    esi,0xf273a0d8
  409d6b:	adc    esi,DWORD PTR [edx+ebp*4]
  409d6e:	pusha  
  409d6f:	mov    ah,0x47
  409d71:	pop    es
  409d72:	inc    ecx
  409d73:	and    bl,BYTE PTR [ebp+0x3fc27ee8]
  409d79:	xor    esp,esp
  409d7b:	adc    al,BYTE PTR [edi-0x4599c9f4]
  409d81:	jnp    0x409db7
  409d83:	dec    ebp
  409d84:	mov    ch,0x4
  409d86:	enter  0xc24f,0x59
  409d8a:	xchg   esi,eax
  409d8b:	jp     0x409d31
  409d8d:	inc    esp
  409d8e:	and    edx,ebp
  409d90:	mov    ebp,DWORD PTR [ecx-0x4a]
  409d93:	xor    BYTE PTR [edi-0xf],ch
  409d96:	fisubr DWORD PTR [edi-0x73]
  409d99:	ja     0x409d23
  409d9b:	aad    0xef
  409d9d:	lds    edx,FWORD PTR [eax]
  409d9f:	cmp    eax,0x981f9f66
  409da4:	stos   DWORD PTR es:[edi],eax
  409da5:	(bad)  
  409da6:	mov    ds:0xa746ce25,eax
  409dab:	add    BYTE PTR [eax-0x12855561],bl
  409db1:	mov    WORD PTR [edx],gs
  409db3:	int3   
  409db4:	fs cmp eax,0x9436c2ac
  409dba:	jne    0x409d41
  409dbc:	add    BYTE PTR [ecx],cl
  409dbe:	in     al,dx
  409dbf:	data16 mov WORD PTR [ebx+0x293949ea],?
  409dc6:	xor    BYTE PTR [ecx+0x34],bh
  409dc9:	pop    ebx
  409dca:	push   ebp
  409dcb:	and    DWORD PTR [edx-0xdd23277],eax
  409dd1:	xchg   esp,eax
  409dd2:	clc    
  409dd3:	mov    esp,0x99b15f6c
  409dd8:	sbb    ecx,DWORD PTR [esi-0x36c38372]
  409dde:	xchg   BYTE PTR [edi+0x24],al
  409de1:	and    al,0x8b
  409de3:	cmc    
  409de4:	and    BYTE PTR [ebx],bh
  409de6:	xor    DWORD PTR [esi],edi
  409de8:	sub    dl,BYTE PTR [ecx-0x30]
  409deb:	and    al,0x4d
  409ded:	mov    eax,0x4292566b
  409df2:	call   0x1461c341
  409df7:	sbb    dh,al
  409df9:	cmp    al,0xfe
  409dfb:	add    dl,BYTE PTR [ebx-0x13236cec]
  409e01:	jb     0x409e58
  409e03:	inc    ebp
  409e04:	sahf   
  409e05:	mov    dl,0xe8
  409e07:	jno    0x409dd4
  409e09:	xor    al,BYTE PTR [esi]
  409e0b:	into   
  409e0c:	mov    gs,WORD PTR [edx-0x2082ee68]
  409e12:	mov    dl,0x90
  409e14:	sbb    esi,DWORD PTR [eax+0x33]
  409e17:	out    dx,al
  409e18:	mov    ds,WORD PTR [ebp-0x237b2b89]
  409e1e:	lea    esi,[ebx+0x73]
  409e21:	jg     0x409e4d
  409e23:	mov    dh,0x65
  409e25:	and    bh,BYTE PTR [eax-0x6e]
  409e28:	cmp    cl,BYTE PTR [esi-0x4d]
  409e2b:	shl    DWORD PTR [esi-0x6a],0x2d
  409e2f:	jo     0x409e6e
  409e31:	lea    ebx,[ecx+0x7f334f8c]
  409e37:	jbe    0x409dcb
  409e39:	outs   dx,BYTE PTR ds:[esi]
  409e3a:	mov    eax,ds:0xb0e396bc
  409e3f:	push   eax
  409e40:	jae    0x409e36
  409e42:	aaa    
  409e43:	push   ecx
  409e44:	push   ecx
  409e45:	xor    BYTE PTR [eax-0x3b],ah
  409e48:	add    BYTE PTR [ebx],bh
  409e4a:	cwde   
  409e4b:	push   0xf29d3045
  409e50:	fwait
  409e51:	jg     0x409e94
  409e53:	nop
  409e54:	adc    BYTE PTR ds:[edi-0x4],bl
  409e58:	pushf  
  409e59:	dec    eax
  409e5a:	dec    esp
  409e5b:	je     0x409dfe
  409e5d:	mov    ebx,0x26a5093d
  409e62:	push   ds
  409e63:	sub    eax,0xd1a3c719
  409e68:	mov    WORD PTR [eax+0x7a],ss
  409e6b:	push   ebp
  409e6c:	enter  0x38f7,0xce
  409e70:	xor    eax,0x132cc4dc
  409e75:	test   dl,cl
  409e77:	jecxz  0x409e14
  409e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e7a:	or     DWORD PTR [edx-0x7f],ecx
  409e7d:	out    dx,eax
  409e7e:	and    eax,0xa5e8e05c
  409e83:	jl     0x409e78
  409e85:	mov    ch,dh
  409e87:	in     al,dx
  409e88:	lods   eax,DWORD PTR ds:[esi]
  409e89:	adc    al,0x34
  409e8b:	sub    ecx,DWORD PTR [ebx+0x65b8a2f3]
  409e91:	jmp    0xa55411b0
  409e96:	js     0x409eac
  409e98:	pop    esi
  409e99:	in     al,dx
  409e9a:	mov    ds:0xb7fc7666,eax
  409e9f:	xor    DWORD PTR [ebp+0x42],esp
  409ea2:	cmp    BYTE PTR [ebx+edi*4],dl
  409ea5:	sar    BYTE PTR [ebp-0x78505fa5],cl
  409eab:	ds inc esp
  409ead:	pop    edx
  409eae:	(bad)  
  409eaf:	call   0xe410:0x9456537e
  409eb6:	and    dl,bl
  409eb8:	xor    BYTE PTR [edx+0x1b289dec],bh
  409ebe:	mov    bl,0xd0
  409ec0:	and    DWORD PTR ds:[ebp+0x413830ca],eax
  409ec7:	ins    BYTE PTR es:[edi],dx
  409ec8:	pusha  
  409ec9:	adc    BYTE PTR [edx+eax*4],al
  409ecc:	xchg   edi,eax
  409ecd:	mov    ebp,0x29a1163a
  409ed2:	fsub   DWORD PTR [edx-0x2f]
  409ed5:	stos   DWORD PTR es:[edi],eax
  409ed6:	pop    es
  409ed7:	push   esi
  409ed8:	sahf   
  409ed9:	sub    BYTE PTR [edx+0x7c],ch
  409edc:	imul   ebx,DWORD PTR [edx-0x5983fbe],0xffffffe3
  409ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee4:	sbb    al,cl
  409ee6:	aam    0x2d
  409ee8:	jmp    0x409f50
  409eea:	dec    ebp
  409eeb:	mov    esi,DWORD PTR [eax+0xc]
  409eee:	je     0x409f0b
  409ef0:	xlat   BYTE PTR ds:[ebx]
  409ef1:	jb     0x409e96
  409ef3:	lods   eax,DWORD PTR ds:[esi]
  409ef4:	jae    0x409ec8
  409ef6:	sti    
  409ef7:	adc    ah,dh
  409ef9:	mov    eax,0xf0b40b
  409efe:	or     bl,ah
  409f00:	xchg   esp,eax
  409f01:	sbb    dh,ch
  409f03:	stc    
  409f04:	mov    ecx,DWORD PTR [ebx]
  409f06:	dec    DWORD PTR [ecx]
  409f08:	xchg   DWORD PTR [ebx],ecx
  409f0a:	stc    
  409f0b:	and    edx,esp
  409f0d:	pop    ebx
  409f0e:	dec    eax
  409f0f:	(bad)  
  409f10:	loopne 0x409e95
  409f12:	cmp    al,BYTE PTR ds:0xd7d4030e
  409f18:	and    bl,BYTE PTR [esi]
  409f1a:	jo     0x409f1f
  409f1c:	into   
  409f1d:	fdivr  QWORD PTR [edx]
  409f1f:	rol    BYTE PTR [edi+0x78],1
  409f22:	hlt    
  409f23:	je     0x409f48
  409f25:	jl     0x409eb1
  409f27:	and    ah,BYTE PTR [edx+eiz*1-0x53]
  409f2b:	frstor [edx]
  409f2d:	or     dl,dh
  409f2f:	sub    al,0xa1
  409f31:	ja     0x409efd
  409f33:	add    ecx,DWORD PTR [edx]
  409f35:	test   eax,0x6765c914
  409f3a:	out    dx,al
  409f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3c:	sub    BYTE PTR [eax-0x73dfc872],dh
  409f42:	stos   BYTE PTR es:[edi],al
  409f43:	shl    bh,0x58
  409f46:	clc    
  409f47:	pop    ebp
  409f48:	mov    ebp,0x73fc4a7b
  409f4d:	pop    ds
  409f4e:	dec    ecx
  409f4f:	js     0x409f72
  409f51:	sbb    dh,BYTE PTR [edx-0x3b0b1c71]
  409f57:	rol    DWORD PTR [esi+eax*8],cl
  409f5a:	mov    cl,bl
  409f5c:	inc    esp
  409f5d:	adc    al,bl
  409f5f:	fs cs mov bh,0x53
  409f63:	sub    eax,0xcd936398
  409f68:	fisubr WORD PTR [edx]
  409f6a:	sbb    BYTE PTR [ebp+0x66],dl
  409f6d:	mov    BYTE PTR [esi*1-0x4b5cf68],ah
  409f74:	scas   eax,DWORD PTR es:[edi]
  409f75:	cdq    
  409f76:	jno    0x409f2f
  409f78:	jg     0x409fdd
  409f7a:	cmp    eax,0x7880754a
  409f7f:	sar    BYTE PTR [ebp+ecx*2+0x2d],0xe5
  409f84:	mov    edi,0xfb06f4ad
  409f89:	stos   DWORD PTR es:[edi],eax
  409f8a:	(bad)  
  409f8b:	test   al,0xbd
  409f8d:	adc    DWORD PTR [edi],ecx
  409f8f:	in     eax,dx
  409f90:	rcl    ebx,0xb5
  409f93:	adc    BYTE PTR [ebx],al
  409f95:	push   edi
  409f96:	inc    edx
  409f97:	sti    
  409f98:	mov    edi,ebx
  409f9a:	dec    edx
  409f9b:	mov    ecx,0x2a33cc3e
  409fa0:	outs   dx,DWORD PTR ds:[esi]
  409fa1:	xor    eax,0x75eb7fc9
  409fa6:	sub    BYTE PTR [ecx+ebx*1],al
  409fa9:	(bad)  
  409faa:	fimul  DWORD PTR [ebx-0x78144a2a]
  409fb0:	xor    BYTE PTR [ecx-0x5e],0x3b
  409fb4:	ja     0x409fb3
  409fb6:	imul   ecx,DWORD PTR [edi],0x2f
  409fb9:	or     cl,BYTE PTR [ebp-0x2c3429ad]
  409fbf:	push   ebx
  409fc0:	sub    eax,eax
  409fc2:	mov    BYTE PTR [ebp-0x647ab8dd],0x6d
  409fc9:	push   cs
  409fca:	jecxz  0x409f93
  409fcc:	dec    ecx
  409fcd:	lock and dh,BYTE PTR [esi+0x4c]
  409fd1:	mov    DWORD PTR [ebp+0x28b15900],esi
  409fd7:	mov    esp,0x360e2c75
  409fdc:	(bad)  
  409fdd:	arpl   WORD PTR [esi+0x35],dx
  409fe0:	stos   DWORD PTR es:[edi],eax
  409fe1:	mov    BYTE PTR [edi-0x5b],ah
  409fe4:	and    BYTE PTR [ebx+0x0],dl
  409fe7:	jo     0x409fd0
  409fe9:	mov    dl,0x68
  409feb:	dec    esp
  409fec:	adc    eax,ebp
  409fee:	es dec edx
  409ff0:	push   0x76
  409ff2:	popa   
  409ff3:	xchg   esp,eax
  409ff4:	sahf   
  409ff5:	stos   BYTE PTR es:[edi],al
  409ff6:	aas    
  409ff7:	jo     0x409fb8
  409ff9:	pop    es
  409ffa:	call   0xbf28:0xa553248e
  40a001:	out    dx,eax
  40a002:	adc    al,0x54
  40a004:	enter  0x2813,0x56
  40a008:	bound  ebp,QWORD PTR [ecx]
  40a00a:	lock leave 
  40a00c:	imul   eax,DWORD PTR [ebp-0x4b5d7124],0x6
  40a013:	fstp   QWORD PTR [ebp-0x1f8e1823]
  40a019:	mov    eax,ds:0xb9bb08e6
  40a01e:	aas    
  40a01f:	inc    eax
  40a020:	inc    ecx
  40a021:	add    BYTE PTR [ebx+edx*4+0x1f],ah
  40a025:	jno    0x40a060
  40a027:	xchg   ebp,eax
  40a028:	xor    ebp,edx
  40a02a:	dec    ebp
  40a02b:	dec    edx
  40a02c:	sbb    al,0xdc
  40a02e:	imul   esi,DWORD PTR [esi-0x74],0xd695e5d6
  40a035:	inc    cx
  40a037:	pop    eax
  40a038:	and    dh,dl
  40a03a:	sar    ebp,1
  40a03c:	icebp  
  40a03d:	test   DWORD PTR [ecx+0x13ac8350],esi
  40a043:	sub    eax,0x556432f1
  40a048:	and    al,BYTE PTR [esi-0x1c]
  40a04b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a04c:	fidivr DWORD PTR [ecx]
  40a04e:	sbb    al,0x5
  40a050:	scas   al,BYTE PTR es:[edi]
  40a051:	mov    edi,DWORD PTR [esi+ebx*2]
  40a054:	jmp    0x2d3be6da
  40a059:	ror    edx,1
  40a05b:	data16 add BYTE PTR [ebp+0x51],0x1
  40a060:	js     0x40a04a
  40a062:	mov    eax,ds:0xc3f157fa
  40a067:	loope  0x40a0c9
  40a069:	mov    eax,0xef2dcf84
  40a06e:	jnp    0x40a052
  40a070:	popa   
  40a071:	hlt    
  40a072:	pusha  
  40a073:	jns    0x40a02d
  40a075:	xchg   DWORD PTR [ecx],ebp
  40a077:	mov    al,ds:0x4de6abcc
  40a07c:	mov    bh,0x0
  40a07e:	stos   BYTE PTR es:[edi],al
  40a07f:	adc    BYTE PTR [ecx+0xf],bl
  40a082:	push   edi
  40a083:	or     DWORD PTR [ebx],esp
  40a085:	xchg   esp,eax
  40a086:	cmp    esp,DWORD PTR [ebp+0x48cd1cd6]
  40a08c:	dec    esi
  40a08d:	jg     0x40a088
  40a08f:	and    eax,0xe7ae3351
  40a094:	cmc    
  40a095:	mov    dh,dh
  40a097:	sub    DWORD PTR [esi],ebp
  40a099:	sti    
  40a09a:	xor    al,0xe3
  40a09c:	jg     0x40a057
  40a09e:	xor    BYTE PTR [eax+0x6854e379],dl
  40a0a4:	or     al,0x19
  40a0a6:	aas    
  40a0a7:	add    ebx,edi
  40a0a9:	gs or  ch,bl
  40a0ac:	add    ecx,DWORD PTR [edi]
  40a0ae:	pop    ebx
  40a0af:	jb     0x40a0e4
  40a0b1:	dec    ecx
  40a0b2:	jo     0x40a06f
  40a0b4:	lock sar BYTE PTR [ebp+ebx*8-0xa],1
  40a0b9:	popa   
  40a0ba:	test   BYTE PTR [edi],dh
  40a0bc:	fist   DWORD PTR [ebx]
  40a0be:	pop    ds
  40a0bf:	test   BYTE PTR [edi+0x12],ch
  40a0c2:	adc    al,0xa1
  40a0c4:	int3   
  40a0c5:	fst    QWORD PTR [ecx-0x59a5b63e]
  40a0cb:	mov    dh,0xb
  40a0cd:	mov    bh,0xd2
  40a0cf:	xor    edi,edx
  40a0d1:	(bad)  
  40a0d2:	fs mov ebx,0x91e41696
  40a0d8:	int    0x2c
  40a0da:	(bad)  
  40a0db:	ds push cs
  40a0dd:	lock cwde 
  40a0df:	add    ah,cl
  40a0e1:	ret    
  40a0e2:	sub    cl,bh
  40a0e4:	jecxz  0x40a165
  40a0e6:	jo     0x40a088
  40a0e8:	loopne 0x40a094
  40a0ea:	stos   BYTE PTR es:[edi],al
  40a0eb:	mov    eax,ds:0x5162bf45
  40a0f0:	cmp    DWORD PTR [ebx+0x3],ecx
  40a0f3:	ret    0xaf11
  40a0f6:	mov    ds:0xb322d87a,eax
  40a0fb:	sbb    BYTE PTR [edi+eiz*1+0x6c],dh
  40a0ff:	cmp    eax,0xabed6e8d
  40a104:	mov    esp,0xcbe51d4e
  40a109:	mov    dl,0x9d
  40a10b:	add    DWORD PTR [esi+ebx*4+0x67],edx
  40a10f:	(bad)  
  40a110:	jmp    0x1600:0xa260d475
  40a117:	(bad)  
  40a118:	mov    bh,0x5a
  40a11a:	ret    
  40a11b:	cmp    al,BYTE PTR [eax+0x46]
  40a11e:	fwait
  40a11f:	mov    ds:0xa6ecfe19,al
  40a124:	shl    DWORD PTR [ebp-0x7a],1
  40a127:	into   
  40a128:	add    edi,ecx
  40a12a:	jmp    0x53a3632d
  40a12f:	pop    ebp
  40a130:	and    DWORD PTR [edx],esi
  40a132:	jle    0x40a0f7
  40a134:	or     ebp,DWORD PTR [esi+0x6c09d8b6]
  40a13a:	sub    ebp,edi
  40a13c:	xchg   edx,eax
  40a13d:	nop
  40a13e:	inc    esp
  40a13f:	or     DWORD PTR [edi+0x148da73b],edi
  40a145:	neg    dl
  40a147:	cs ins DWORD PTR es:[edi],dx
  40a149:	inc    ebp
  40a14a:	xor    al,0xbb
  40a14c:	sub    DWORD PTR [ebx],ebp
  40a14e:	adc    ah,BYTE PTR [edx]
  40a150:	cli    
  40a151:	mov    dl,0xeb
  40a153:	and    al,0xea
  40a155:	loope  0x40a11f
  40a157:	mov    cl,BYTE PTR [ebp+0x4c60f0d1]
  40a15d:	lea    esp,[edi+0x6]
  40a160:	pop    ss
  40a161:	cmp    eax,0xcdc528b3
  40a166:	mov    ds:0x81e59764,al
  40a16b:	sbb    eax,0xcc040dc1
  40a170:	icebp  
  40a171:	clc    
  40a172:	outs   dx,BYTE PTR ds:[esi]
  40a173:	dec    edi
  40a174:	rcl    BYTE PTR [edi+0x22874d25],0xcb
  40a17b:	push   ss
  40a17c:	in     eax,dx
  40a17d:	xor    DWORD PTR [eax+0x7d6d88e9],edx
  40a183:	sub    edi,ebp
  40a185:	xor    edi,DWORD PTR [edx-0x6d]
  40a188:	push   cs
  40a189:	lahf   
  40a18a:	sahf   
  40a18b:	test   eax,0x74e6f041
  40a190:	(bad)  
  40a191:	fnsave [esi-0x6e515304]
  40a197:	pop    ebx
  40a198:	sub    DWORD PTR ds:0x460c035f,ebp
  40a19e:	out    0x32,eax
  40a1a0:	sub    eax,0x2aa19dff
  40a1a5:	shl    DWORD PTR ds:0x352ecea0,0x68
  40a1ac:	nop
  40a1ad:	lods   al,BYTE PTR ds:[esi]
  40a1ae:	xchg   esp,eax
  40a1af:	xchg   ebp,eax
  40a1b0:	(bad)
  40a1b3:	push   ds
  40a1b4:	arpl   WORD PTR [ebx],cx
  40a1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b7:	push   ss
  40a1b8:	es mov dl,0xa5
  40a1bb:	rol    DWORD PTR [eax-0x76ac567a],0x61
  40a1c2:	xchg   ecx,eax
  40a1c3:	outs   dx,BYTE PTR ds:[esi]
  40a1c4:	bound  ecx,QWORD PTR [ebp+edx*4+0x0]
  40a1c8:	dec    esp
  40a1c9:	jno    0x40a169
  40a1cb:	mov    al,ds:0x56f7ab9
  40a1d0:	mov    cl,0x34
  40a1d2:	adc    ebp,esp
  40a1d4:	jle    0x40a181
  40a1d6:	pop    ecx
  40a1d7:	and    BYTE PTR [edx+0x5c],bh
  40a1da:	adc    al,0xa7
  40a1dc:	and    bl,BYTE PTR [eax]
  40a1de:	xchg   ebp,eax
  40a1df:	stc    
  40a1e0:	add    DWORD PTR [ecx],ebp
  40a1e2:	(bad)  
  40a1e3:	call   0x54872f14
  40a1e8:	daa    
  40a1e9:	inc    edx
  40a1ea:	sbb    dl,0x34
  40a1ed:	ins    DWORD PTR es:[edi],dx
  40a1ee:	repnz (bad) 
  40a1f0:	mov    ecx,0xc5d4329
  40a1f5:	push   ecx
  40a1f6:	jl     0x40a1c1
  40a1f8:	ss mov ah,0x15
  40a1fb:	jp     0x40a256
  40a1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1fe:	stc    
  40a1ff:	mov    dh,0x9c
  40a201:	in     eax,0xbe
  40a203:	adc    BYTE PTR [ebx-0x5d9911c7],dl
  40a209:	jnp    0x40a202
  40a20b:	(bad)
  40a20e:	out    dx,al
  40a20f:	mov    bl,0x8e
  40a211:	mov    WORD PTR [ecx-0xc0d0b39],fs
  40a217:	add    DWORD PTR [ebp+0x4e],eax
  40a21a:	pop    ebp
  40a21b:	and    eax,0x225aa067
  40a220:	and    ch,0xf0
  40a223:	sbb    DWORD PTR [esp+ebp*1+0x5d],edx
  40a227:	dec    esi
  40a228:	mov    bh,0xf
  40a22a:	ins    BYTE PTR es:[edi],dx
  40a22b:	enter  0x66e1,0xdd
  40a22f:	test   eax,0x84a86e66
  40a234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a235:	pop    ds
  40a236:	mov    al,ah
  40a238:	icebp  
  40a239:	sub    ecx,DWORD PTR [edi]
  40a23b:	mov    edi,0xbb93d980
  40a240:	dec    esp
  40a241:	push   es
  40a242:	imul   eax,DWORD PTR [edi],0xfffffff2
  40a245:	adc    DWORD PTR [ebp+0x15bb27b7],esi
  40a24b:	cmp    al,0xb9
  40a24d:	adc    eax,0x8d39f9b8
  40a252:	jno    0x40a279
  40a254:	or     ah,bl
  40a256:	enter  0xfd56,0x28
  40a25a:	xchg   ecx,eax
  40a25b:	add    DWORD PTR [edi+0x7a],edi
  40a25e:	in     eax,dx
  40a25f:	add    DWORD PTR [ebp+ebx*4-0x29d2266f],edi
  40a266:	mov    eax,ds:0xeba235c4
  40a26b:	je     0x40a26e
  40a26d:	push   ecx
  40a26e:	push   eax
  40a26f:	or     al,bh
  40a271:	dec    edx
  40a272:	(bad)  [eax+0x24]
  40a275:	jmp    0x91d3c7c2
  40a27a:	fwait
  40a27b:	jl     0x40a230
  40a27d:	adc    bh,BYTE PTR [esi+0x748703af]
  40a283:	(bad)  
  40a284:	lods   eax,DWORD PTR ds:[esi]
  40a285:	daa    
  40a286:	stc    
  40a287:	xor    ch,BYTE PTR gs:[edx]
  40a28a:	xchg   BYTE PTR [ecx+ebx*8],cl
  40a28d:	fbstp  TBYTE PTR [ebp+0x220871a9]
  40a293:	dec    edx
  40a294:	cdq    
  40a295:	xchg   esp,eax
  40a296:	inc    esp
  40a297:	mov    bh,0xc8
  40a299:	and    BYTE PTR [edx],cl
  40a29b:	ins    BYTE PTR es:[edi],dx
  40a29c:	adc    eax,0xe2dc45aa
  40a2a1:	fdivr  DWORD PTR [edx+0x7c]
  40a2a4:	loopne 0x40a228
  40a2a6:	xor    eax,0x9f495e99
  40a2ab:	inc    esp
  40a2ac:	arpl   WORD PTR [eax+eiz*2],sp
  40a2af:	xchg   ecx,eax
  40a2b0:	pop    ds
  40a2b1:	rcl    DWORD PTR [esi],cl
  40a2b3:	dec    ebp
  40a2b4:	cmp    cl,BYTE PTR [eax-0x55b42d6a]
  40a2ba:	dec    ebx
  40a2bb:	stc    
  40a2bc:	cld    
  40a2bd:	jno    0x40a315
  40a2bf:	pop    ecx
  40a2c0:	inc    edi
  40a2c1:	aam    0x88
  40a2c3:	cwde   
  40a2c4:	test   DWORD PTR [esi-0x4b],0x7705e348
  40a2cb:	popa   
  40a2cc:	or     cl,BYTE PTR [ecx]
  40a2ce:	loope  0x40a340
  40a2d0:	fnsave [eax+0x76]
  40a2d3:	ja     0x40a27c
  40a2d5:	jno    0x40a303
  40a2d7:	jae    0x40a2d3
  40a2d9:	sub    ebx,DWORD PTR [ebx]
  40a2db:	cmp    al,0x9b
  40a2dd:	popf   
  40a2de:	ds jns 0x40a340
  40a2e1:	leave  
  40a2e2:	aas    
  40a2e3:	add    DWORD PTR [ebp-0x79567b6c],ecx
  40a2e9:	arpl   WORD PTR [ebp-0x9],bx
  40a2ec:	pop    ebp
  40a2ed:	inc    ecx
  40a2ee:	sub    DWORD PTR [edx],ebx
  40a2f0:	mov    esp,DWORD PTR ds:0x7e36f332
  40a2f6:	push   esi
  40a2f7:	scas   eax,DWORD PTR es:[edi]
  40a2f8:	dec    ecx
  40a2f9:	mov    ds:0x9491358e,eax
  40a2fe:	stos   BYTE PTR es:[edi],al
  40a2ff:	inc    eax
  40a300:	test   BYTE PTR [esi],dl
  40a302:	adc    BYTE PTR [ecx-0x1c],dl
  40a305:	call   0x39d8:0x45c8c619
  40a30c:	jae    0x40a378
  40a30e:	cmp    edi,DWORD PTR [edx+0x71]
  40a311:	es push edx
  40a313:	dec    edx
  40a314:	jle    0x40a35f
  40a316:	jecxz  0x40a385
  40a318:	sbb    ebp,DWORD PTR [ebp+0x21]
  40a31b:	fstp   st(3)
  40a31d:	jne    0x40a350
  40a31f:	jb     0x40a2b9
  40a321:	sbb    al,0xfc
  40a323:	fisttp WORD PTR [edx-0x7b]
  40a326:	jb     0x40a316
  40a328:	xchg   edx,eax
  40a329:	mov    bh,0xd2
  40a32b:	mov    WORD PTR ds:0x9051b4cd,es
  40a331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a332:	ss clc 
  40a334:	outs   dx,BYTE PTR ds:[esi]
  40a335:	mov    WORD PTR [edx],?
  40a337:	push   ds
  40a338:	dec    edx
  40a339:	dec    edi
  40a33a:	push   ebx
  40a33b:	pop    ds
  40a33c:	push   es
  40a33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a33e:	dec    esi
  40a33f:	push   eax
  40a340:	int    0x87
  40a342:	mov    edx,0x7100f346
  40a347:	daa    
  40a348:	sub    ah,BYTE PTR [edx]
  40a34a:	mov    eax,0x225649db
  40a34f:	mov    dh,0xae
  40a351:	data16 mov WORD PTR [ebp+0x26],cs
  40a355:	sti    
  40a356:	add    BYTE PTR [esi-0x4a21bbd2],dh
  40a35c:	pop    edx
  40a35d:	cmp    eax,0x26436f0c
  40a362:	mov    ss,WORD PTR [ecx]
  40a364:	mov    BYTE PTR [ecx-0x23],al
  40a367:	outs   dx,BYTE PTR ds:[esi]
  40a368:	push   eax
  40a369:	(bad)  
  40a36a:	enter  0x483d,0xbf
  40a36e:	sbb    eax,0xdcc71592
  40a373:	out    dx,al
  40a374:	sbb    bh,BYTE PTR [eax]
  40a376:	(bad)  
  40a377:	sub    eax,0xa2a4ae88
  40a37c:	fbld   TBYTE PTR [ebx+0x6652b2a5]
  40a382:	sub    DWORD PTR [eax-0x17e1c7d9],edx
  40a388:	retf   0xe3b1
  40a38b:	pop    ss
  40a38c:	mov    WORD PTR [esi+edi*2+0x32],?
  40a390:	arpl   sp,dx
  40a392:	inc    esp
  40a393:	mov    edx,0x2e7dd5a
  40a398:	add    DWORD PTR [ecx+ebp*2],ebx
  40a39b:	mov    fs,WORD PTR [edi]
  40a39d:	(bad)
  40a3a0:	cmp    bh,BYTE PTR [edx-0x71]
  40a3a3:	sbb    ah,bh
  40a3a5:	test   eax,0xcd38e9f0
  40a3aa:	sub    BYTE PTR [eax],ch
  40a3ac:	push   ds
  40a3ad:	adc    al,0xee
  40a3af:	sub    DWORD PTR [edx-0x6bbb8174],ebp
  40a3b5:	xor    cl,ah
  40a3b7:	xchg   esi,eax
  40a3b8:	loope  0x40a41b
  40a3ba:	lds    edi,FWORD PTR [edi-0x78548ac7]
  40a3c0:	dec    edx
  40a3c1:	xor    eax,0xcc3776ca
  40a3c6:	(bad)  
  40a3c7:	retf   0xd73e
  40a3ca:	data16 mov bh,BYTE PTR [eax]
  40a3cd:	adc    eax,0xcb83acf
  40a3d2:	sbb    eax,0xc597e874
  40a3d7:	push   esp
  40a3d8:	(bad)  
  40a3d9:	jbe    0x40a42d
  40a3db:	fcom   st(1)
  40a3dd:	and    dl,cl
  40a3df:	ins    DWORD PTR es:[edi],dx
  40a3e0:	loope  0x40a36e
  40a3e2:	es jle 0x40a3d0
  40a3e5:	dec    ecx
  40a3e6:	pop    ecx
  40a3e7:	xor    dh,BYTE PTR [edx]
  40a3e9:	jae    0x40a38e
  40a3eb:	push   ebx
  40a3ec:	das    
  40a3ed:	int    0xb4
  40a3ef:	fild   DWORD PTR [edi-0x44]
  40a3f2:	cmc    
  40a3f3:	pop    esi
  40a3f4:	cli    
  40a3f5:	push   0xbbc331c7
  40a3fa:	mov    al,ah
  40a3fc:	jmp    0xacb62b38
  40a401:	icebp  
  40a402:	loope  0x40a3d9
  40a404:	xchg   BYTE PTR [eax+ebx*2],al
  40a407:	out    0x86,eax
  40a409:	push   esp
  40a40a:	icebp  
  40a40b:	add    BYTE PTR [ecx+ebx*8-0xd6931af],bh
  40a412:	gs dec esi
  40a414:	mov    al,0xab
  40a416:	imul   ebx,DWORD PTR [ebx],0xe55f4715
  40a41c:	xchg   ebp,eax
  40a41d:	test   BYTE PTR [ebx],bh
  40a41f:	mov    dl,0xc9
  40a421:	retf   0x71e2
  40a424:	pusha  
  40a425:	fucomip st,st(0)
  40a427:	clc    
  40a428:	les    ecx,FWORD PTR [edi+0x16e6fbc1]
  40a42e:	xor    BYTE PTR [ecx-0x799018fd],dh
  40a434:	jae    0x40a463
  40a436:	and    al,0x38
  40a438:	call   0x261e7218
  40a43d:	xor    dh,BYTE PTR [ebx]
  40a43f:	dec    ecx
  40a440:	dec    edx
  40a441:	fist   DWORD PTR [esi+0x30b0ca35]
  40a447:	jmp    0x38fa9997
  40a44c:	(bad)  
  40a44d:	pop    ecx
  40a44e:	dec    esi
  40a44f:	mov    bl,0xa1
  40a451:	pop    ss
  40a452:	mov    esp,0x95303f98
  40a457:	ja     0x40a4c6
  40a459:	sbb    al,0xb7
  40a45b:	push   eax
  40a45c:	cld    
  40a45d:	(bad)  
  40a45e:	jnp    0x40a45d
  40a460:	sub    ebx,esi
  40a462:	cmp    DWORD PTR [ebx+0x38],esi
  40a465:	and    BYTE PTR [eax],dl
  40a467:	pop    edx
  40a468:	leave  
  40a469:	dec    esp
  40a46a:	cld    
  40a46b:	mov    esi,0xfda425c4
  40a470:	and    BYTE PTR [ebx+0x1e],dh
  40a473:	and    cl,BYTE PTR [ebp-0x6c]
  40a476:	or     al,0x6c
  40a478:	pop    ecx
  40a479:	(bad)  
  40a47b:	adc    dl,al
  40a47d:	sub    al,0x61
  40a47f:	test   DWORD PTR [edx],ebp
  40a481:	rol    BYTE PTR [edx+0x119824b7],cl
  40a487:	test   DWORD PTR [eax+0x48],esi
  40a48a:	xchg   edi,eax
  40a48b:	or     dl,dl
  40a48d:	push   esi
  40a48e:	enter  0x5421,0xfc
  40a492:	idiv   ah
  40a494:	pushf  
  40a495:	ins    BYTE PTR es:[edi],dx
  40a496:	(bad)  
  40a497:	mov    ah,0x3a
  40a499:	stos   DWORD PTR es:[edi],eax
  40a49a:	imul   edi,DWORD PTR [ecx],0x5eca1571
  40a4a0:	jmp    0x60a4:0x73e3f2d1
  40a4a7:	mov    ecx,0xd6ff3fa8
  40a4ac:	in     al,0x78
  40a4ae:	ds das 
  40a4b0:	push   0xffffffde
  40a4b2:	xchg   edx,eax
  40a4b3:	mov    eax,0xb76ca6ae
  40a4b8:	inc    ecx
  40a4b9:	out    dx,eax
  40a4ba:	loop   0x40a4a2
  40a4bc:	cmp    edx,DWORD PTR [edx+0x71]
  40a4bf:	out    dx,al
  40a4c0:	stc    
  40a4c1:	dec    edx
  40a4c2:	jmp    0x5b96:0x1d021711
  40a4c9:	(bad)  
  40a4ca:	(bad)  
  40a4cc:	sub    ebp,ebp
  40a4ce:	imul   DWORD PTR [edi+0x49]
  40a4d1:	out    0x5f,al
  40a4d3:	xor    DWORD PTR [ecx],0xd5c3625f
  40a4d9:	(bad)  
  40a4da:	push   ecx
  40a4db:	jmp    DWORD PTR [esi+0x54c53bfe]
  40a4e1:	fwait
  40a4e2:	daa    
  40a4e3:	cmp    bh,ch
  40a4e5:	fbld   TBYTE PTR [edi]
  40a4e7:	mov    ebx,0x7acebd0b
  40a4ec:	sbb    bh,dl
  40a4ee:	or     dl,BYTE PTR [edx-0x3571506]
  40a4f4:	stos   BYTE PTR es:[edi],al
  40a4f5:	inc    edi
  40a4f6:	pushf  
  40a4f7:	mov    eax,ds:0x7750f7e9
  40a4fc:	les    ecx,FWORD PTR [eax-0x4]
  40a4ff:	mov    ecx,0xce0f2d54
  40a504:	jp     0x40a547
  40a506:	mov    ebx,0xbe724d16
  40a50b:	push   ss
  40a50c:	adc    ch,cl
  40a50e:	(bad)  
  40a510:	in     eax,dx
  40a511:	pusha  
  40a512:	mov    ecx,0x4e1f57cd
  40a517:	and    DWORD PTR [edi+0x7d3b707e],eax
  40a51d:	repz jle 0x40a545
  40a520:	aad    0x19
  40a522:	add    ch,dl
  40a524:	sub    DWORD PTR [esi+ebx*1],ebp
  40a527:	shl    DWORD PTR [esi+0x28],0x18
  40a52b:	adc    eax,0x566b5d0a
  40a530:	or     dh,BYTE PTR [ecx]
  40a532:	jl     0x40a56d
  40a534:	mov    esi,0x4f0c313c
  40a539:	test   eax,0xadd7a4ac
  40a53e:	js     0x40a4ff
  40a540:	or     BYTE PTR [ebp+0x68d4f1e0],bh
  40a546:	or     eax,DWORD PTR [edi+0x58f06712]
  40a54c:	and    eax,0x40586890
  40a551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a552:	(bad)  
  40a553:	in     al,0xfd
  40a555:	or     al,0x43
  40a557:	in     al,dx
  40a558:	loop   0x40a586
  40a55a:	push   edx
  40a55b:	js     0x40a55b
  40a55d:	mov    ds:0x685ac6d2,eax
  40a562:	jbe    0x40a5cd
  40a564:	dec    ecx
  40a565:	scas   al,BYTE PTR es:[edi]
  40a566:	sub    dh,0x8b
  40a569:	push   ebp
  40a56a:	xor    DWORD PTR [edx-0x168e0e26],0xbc423a3f
  40a574:	lds    edi,FWORD PTR [esi-0x3b]
  40a577:	shl    DWORD PTR [edx],1
  40a579:	and    ebx,ebp
  40a57b:	or     eax,0x75072753
  40a580:	leave  
  40a581:	scas   eax,DWORD PTR es:[edi]
  40a582:	lods   eax,DWORD PTR ds:[esi]
  40a583:	cmova  ebp,DWORD PTR [ecx+ebx*8]
  40a587:	inc    esi
  40a588:	pcmpgtb mm7,QWORD PTR [esi]
  40a58b:	sbb    esi,esi
  40a58d:	mov    esi,0x44985f07
  40a592:	std    
  40a593:	mov    ch,0x68
  40a595:	ds jp  0x40a57c
  40a598:	in     eax,dx
  40a599:	outs   dx,BYTE PTR ds:[esi]
  40a59a:	aaa    
  40a59b:	es cld 
  40a59d:	lods   eax,DWORD PTR ds:[esi]
  40a59e:	mov    BYTE PTR [ebx+eax*1],ch
  40a5a1:	bound  ebx,QWORD PTR [ebx+0x7e1889f2]
  40a5a7:	and    eax,0x70401ed2
  40a5ac:	adc    DWORD PTR [edi-0xcc1ec63],ecx
  40a5b2:	push   ebx
  40a5b3:	in     al,dx
  40a5b4:	call   0xcc536499
  40a5b9:	dec    edx
  40a5ba:	popaw  
  40a5bc:	adc    al,0xa8
  40a5be:	add    ebx,DWORD PTR [ebp-0x55679e30]
  40a5c4:	(bad)  
  40a5c5:	or     al,0xd8
  40a5c7:	ins    DWORD PTR es:[edi],dx
  40a5c8:	data16 loop 0x40a569
  40a5cb:	(bad)
  40a5ce:	lock mov esi,0xc7f93ccb
  40a5d4:	iret   
  40a5d5:	lods   al,BYTE PTR ds:[esi]
  40a5d6:	xor    ch,BYTE PTR [ecx-0x4c522c6e]
  40a5dc:	or     BYTE PTR [eax-0x80],dl
  40a5df:	cmp    ch,dh
  40a5e1:	adc    BYTE PTR [eax+0x4a],cl
  40a5e4:	add    BYTE PTR [ecx+0x27088a9e],bh
  40a5ea:	mov    BYTE PTR [edi-0x3f],bh
  40a5ed:	sbb    eax,0x8e0092a8
  40a5f2:	daa    
  40a5f3:	cwde   
  40a5f4:	rcr    edi,1
  40a5f6:	or     DWORD PTR [edi+edi*1],edi
  40a5f9:	sub    eax,0xac8998fa
  40a5fe:	inc    ebx
  40a5ff:	or     BYTE PTR [edx],bl
  40a601:	and    edi,DWORD PTR [ebp+eiz*4+0x3049e08]
  40a608:	rcl    DWORD PTR [ebx+0x5d],1
  40a60b:	fdivr  st(6),st
  40a60d:	mov    bl,0xc7
  40a60f:	ror    DWORD PTR [esi+0x29],1
  40a612:	adc    ebp,DWORD PTR ds:0x770af0f1
  40a618:	mov    dh,0x38
  40a61a:	push   eax
  40a61b:	addr16 test eax,0xa28d85eb
  40a621:	mov    DWORD PTR [eax-0x38],ebx
  40a624:	cmp    edx,eax
  40a626:	stos   DWORD PTR es:[edi],eax
  40a627:	inc    eax
  40a628:	mov    ds:0x9d390533,al
  40a62d:	cmpps  xmm3,XMMWORD PTR [ebp+0x65],0xd8
  40a632:	in     eax,dx
  40a633:	das    
  40a634:	xor    al,0x60
  40a636:	xor    BYTE PTR ds:0x3d4c77b0,cl
  40a63c:	pop    edi
  40a63d:	sbb    eax,0xf975a900
  40a642:	mov    al,dl
  40a644:	xchg   BYTE PTR [ecx],dl
  40a646:	iret   
  40a647:	pop    eax
  40a648:	pop    edi
  40a649:	ss mov al,0x70
  40a64c:	sbb    edi,ecx
  40a64e:	adc    BYTE PTR [edx-0x3f],0x11
  40a652:	out    dx,al
  40a653:	mov    eax,ds:0x227a9f50
  40a658:	sahf   
  40a659:	ds dec ebp
  40a65b:	ins    BYTE PTR es:[edi],dx
  40a65c:	popa   
  40a65d:	cs mov cl,0x67
  40a660:	xor    eax,DWORD PTR [ebx+0x2c]
  40a663:	das    
  40a664:	push   eax
  40a665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a666:	lods   al,BYTE PTR ds:[esi]
  40a667:	inc    esp
  40a668:	mov    BYTE PTR [edx+ebp*2],al
  40a66b:	push   ebx
  40a66c:	popf   
  40a66d:	cld    
  40a66e:	lods   eax,DWORD PTR ds:[esi]
  40a66f:	sbb    BYTE PTR [edi],dh
  40a671:	(bad)  
  40a672:	push   eax
  40a673:	cmp    esi,DWORD PTR [esi]
  40a675:	mov    dh,0x21
  40a677:	mov    ds:0x8432cd59,eax
  40a67c:	aaa    
  40a67d:	jecxz  0x40a6d6
  40a67f:	(bad)  
  40a680:	call   0xc80ab958
  40a685:	sbb    edx,DWORD PTR [eax]
  40a687:	jl     0x40a6f7
  40a689:	sub    ebx,DWORD PTR [ebx-0x55056cc0]
  40a68f:	stos   BYTE PTR es:[edi],al
  40a690:	push   cs
  40a691:	sbb    eax,0xafb0dafc
  40a696:	cmp    al,0x13
  40a698:	test   eax,0xb46a51d3
  40a69d:	sbb    eax,0x9ac4286b
  40a6a2:	fwait
  40a6a3:	imul   esp,edi,0x684c39c4
  40a6a9:	in     al,0x4c
  40a6ab:	fild   DWORD PTR [edx]
  40a6ad:	enter  0xad02,0xde
  40a6b1:	mov    esp,0x62fbcb95
  40a6b6:	ja     0x40a64b
  40a6b8:	push   ecx
  40a6b9:	mov    edi,0x6f027b34
  40a6be:	mov    edi,0x8ccd4599
  40a6c3:	add    dl,ah
  40a6c5:	pop    gs
  40a6c7:	or     DWORD PTR [ecx+0xa],ecx
  40a6ca:	fwait
  40a6cb:	stc    
  40a6cc:	fcom   QWORD PTR [edi-0x2c]
  40a6cf:	push   ebp
  40a6d0:	push   ebp
  40a6d1:	xor    edi,DWORD PTR [ebx-0x19]
  40a6d4:	rcr    DWORD PTR [edx+0x47de1e59],0xea
  40a6db:	pop    ebx
  40a6dc:	mov    BYTE PTR ds:0x4911b676,dh
  40a6e2:	gs xor eax,0xc719394b
  40a6e8:	add    al,0xbd
  40a6ea:	add    BYTE PTR [ebx+0x4704361b],ch
  40a6f0:	js     0x40a701
  40a6f2:	in     al,dx
  40a6f3:	inc    ebx
  40a6f4:	jmp    0x40a69f
  40a6f6:	adc    DWORD PTR [ebp-0x2e42e08d],eax
  40a6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6fd:	in     al,dx
  40a6fe:	fnstenv [ebp-0x694981ff]
  40a704:	fcom   DWORD PTR [eax]
  40a706:	fistp  WORD PTR [esi+edi*1+0x34226a30]
  40a70d:	inc    esp
  40a70e:	push   ecx
  40a70f:	loope  0x40a6da
  40a711:	xchg   BYTE PTR [edx-0x5178ee2d],bl
  40a717:	das    
  40a718:	fwait
  40a719:	ins    DWORD PTR es:[edi],dx
  40a71a:	je     0x40a733
  40a71c:	call   DWORD PTR [ebx]
  40a71e:	into   
  40a71f:	push   edx
  40a720:	into   
  40a721:	or     esp,DWORD PTR [ecx-0x599c41ef]
  40a727:	scas   eax,DWORD PTR es:[edi]
  40a728:	mov    ds:0x253c43c5,eax
  40a72d:	shl    BYTE PTR [esi+0x39],0x9d
  40a731:	xchg   ebx,eax
  40a732:	test   DWORD PTR [esi+edi*4-0x9],edi
  40a736:	fldcw  WORD PTR [esp+ebx*2+0x70]
  40a73a:	(bad)  
  40a73b:	mov    esp,0x92aa8009
  40a740:	xor    DWORD PTR ds:0x635f4d47,ecx
  40a746:	out    0x6,al
  40a748:	mov    al,ds:0x512559dc
  40a74d:	out    dx,al
  40a74e:	aad    0xd3
  40a750:	aaa    
  40a751:	inc    esi
  40a752:	fild   QWORD PTR [ecx-0x31]
  40a755:	mov    DWORD PTR [esp+ebp*1+0x51],ebp
  40a759:	cmp    BYTE PTR [eax],ah
  40a75b:	cmp    eax,DWORD PTR [esi-0x3]
  40a75e:	xor    BYTE PTR [ebp-0x3f],bh
  40a761:	dec    edx
  40a763:	dec    ebp
  40a764:	xlat   BYTE PTR ds:[ebx]
  40a765:	add    al,0xcd
  40a767:	(bad)  
  40a768:	and    edx,DWORD PTR [edx+0x1]
  40a76b:	out    dx,eax
  40a76c:	mov    ebx,0x1b1e70f4
  40a771:	xlat   BYTE PTR ds:[ebx]
  40a772:	xchg   ebx,eax
  40a773:	clc    
  40a774:	sub    eax,0x54b0c37e
  40a779:	bound  ecx,QWORD PTR [ecx+0x7d87350f]
  40a77f:	xlat   BYTE PTR ds:[ebx]
  40a780:	pusha  
  40a781:	and    al,0xf7
  40a783:	push   edi
  40a784:	aam    0xc8
  40a786:	or     BYTE PTR [ebp+0x31],dl
  40a789:	stos   DWORD PTR es:[edi],eax
  40a78a:	cmp    dl,cl
  40a78c:	repz mov al,0xe8
  40a78f:	add    BYTE PTR [ecx+edx*1+0x2b554db4],0x4f
  40a797:	shl    DWORD PTR [ecx+0x1fbce385],cl
  40a79d:	push   ds
  40a79e:	leave  
  40a79f:	stos   DWORD PTR es:[edi],eax
  40a7a0:	popa   
  40a7a1:	push   esp
  40a7a2:	sahf   
  40a7a3:	push   cs
  40a7a4:	jecxz  0x40a822
  40a7a6:	or     ax,0x2325
  40a7aa:	mov    gs,WORD PTR [ecx+0x14b5dd84]
  40a7b0:	pop    esp
  40a7b1:	mov    ch,BYTE PTR [edx+0x5d4acf8a]
  40a7b7:	enter  0xaf6e,0x51
  40a7bb:	fnstcw WORD PTR [edx+eiz*1]
  40a7be:	push   es
  40a7bf:	loopne 0x40a759
  40a7c1:	leave  
  40a7c2:	jg     0x40a816
  40a7c4:	loop   0x40a7f5
  40a7c6:	das    
  40a7c7:	and    DWORD PTR [edx-0x6eb5cb0],ebx
  40a7cd:	push   edx
  40a7ce:	js     0x40a7ce
  40a7d0:	mov    ds:0xba91a24a,al
  40a7d5:	(bad)  
  40a7d6:	sub    al,0xcf
  40a7d8:	xor    al,0xf1
  40a7da:	lahf   
  40a7db:	xor    edi,DWORD PTR [ecx-0x35]
  40a7de:	mov    ch,0x53
  40a7e0:	jp     0x40a85c
  40a7e2:	ins    DWORD PTR es:[edi],dx
  40a7e3:	pop    ebp
  40a7e4:	jbe    0x40a7e2
  40a7e6:	xchg   DWORD PTR [esp+edi*4],edx
  40a7e9:	popa   
  40a7ea:	and    cl,0xb3
  40a7ed:	mov    DWORD PTR [esi+0x7ea3ba83],eax
  40a7f3:	lods   eax,DWORD PTR ds:[esi]
  40a7f4:	add    BYTE PTR [ebp-0x6c],cl
  40a7f7:	sbb    ebx,DWORD PTR [ecx-0x7cc78518]
  40a7fd:	xchg   edx,eax
  40a7fe:	mov    ah,bl
  40a800:	push   edx
  40a801:	and    dh,ch
  40a803:	ffreep st(1)
  40a805:	mov    fs,WORD PTR [ecx-0x75]
  40a808:	cwde   
  40a809:	hlt    
  40a80a:	mov    al,ds:0x8f00bebe
  40a80f:	and    ebp,ebp
  40a811:	push   ecx
  40a812:	(bad)
  40a817:	scas   eax,DWORD PTR es:[edi]
  40a818:	xor    BYTE PTR [ecx-0x6b],cl
  40a81b:	push   eax
  40a81c:	cmp    ah,BYTE PTR [edi]
  40a81e:	rol    DWORD PTR [esi-0x56109a94],0xc4
  40a825:	mov    bl,0xcb
  40a827:	xor    DWORD PTR [edx+0x18],esp
  40a82a:	mov    esp,?
  40a82c:	data16 (bad) 
  40a82e:	fcomp  st(2)
  40a830:	cmp    BYTE PTR [ebx-0x4a8164be],ch
  40a836:	or     BYTE PTR [edx+0x5a],bl
  40a839:	xchg   DWORD PTR [edi+0x7721177e],edi
  40a83f:	dec    ecx
  40a840:	jo     0x40a8a6
  40a842:	push   ecx
  40a843:	repz or eax,0xb9beb13c
  40a849:	and    DWORD PTR ds:0x561ffeab,0xffffffe9
  40a850:	mov    BYTE PTR [edi-0x714651b6],cl
  40a856:	xor    esp,DWORD PTR [esp+ebx*2+0xf]
  40a85a:	scas   eax,DWORD PTR es:[edi]
  40a85b:	inc    esi
  40a85c:	mov    BYTE PTR [ecx],ch
  40a85e:	xchg   esp,eax
  40a85f:	mov    al,0xd2
  40a861:	ins    BYTE PTR es:[edi],dx
  40a862:	push   ecx
  40a863:	cld    
  40a864:	shl    ch,1
  40a866:	fiadd  DWORD PTR [edi]
  40a868:	(bad)  
  40a86a:	jmp    0x8f33:0x62d5c344
  40a871:	test   al,0x99
  40a873:	sar    al,cl
  40a875:	sub    al,0x5e
  40a877:	jno    0x40a85c
  40a879:	pop    es
  40a87a:	pop    eax
  40a87b:	push   ebx
  40a87c:	pop    ss
  40a87d:	out    0x5e,eax
  40a87f:	mov    al,0x89
  40a881:	xor    edx,DWORD PTR [ebx+0x4019cc9f]
  40a887:	pop    eax
  40a888:	jb     0x40a821
  40a88a:	push   edi
  40a88b:	leave  
  40a88c:	mov    bl,ah
  40a88e:	push   eax
  40a88f:	enter  0x76ba,0x62
  40a893:	inc    DWORD PTR [esi]
  40a895:	xor    BYTE PTR [esi+0x1d],0x7
  40a899:	popa   
  40a89a:	mov    DWORD PTR [esi+0xe],esi
  40a89d:	mov    BYTE PTR [edi-0x405cade3],dh
  40a8a3:	adc    cl,dh
  40a8a5:	pop    es
  40a8a6:	icebp  
  40a8a7:	and    ch,BYTE PTR [edx]
  40a8a9:	out    0xcd,eax
  40a8ab:	or     al,0xbb
  40a8ad:	or     DWORD PTR [edi],0xffffff80
  40a8b0:	stc    
  40a8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b2:	rol    BYTE PTR [ecx-0x3957cadb],1
  40a8b8:	dec    ebp
  40a8b9:	adc    al,0xaa
  40a8bb:	inc    ecx
  40a8bc:	xchg   ebp,esi
  40a8be:	out    dx,eax
  40a8bf:	cdq    
  40a8c0:	xchg   DWORD PTR [edx-0x4b],eax
  40a8c3:	mov    cl,0x45
  40a8c5:	leave  
  40a8c6:	jge    0x40a8ce
  40a8c8:	dec    esi
  40a8c9:	bound  esp,QWORD PTR [eax]
  40a8cb:	inc    ebp
  40a8cc:	hlt    
  40a8cd:	mov    WORD PTR [eax-0x60],cs
  40a8d0:	jb     0x40a857
  40a8d2:	xlat   BYTE PTR ds:[ebx]
  40a8d3:	or     BYTE PTR [ecx],bh
  40a8d5:	sub    bl,cl
  40a8d7:	or     BYTE PTR [ecx+0x64ed5dd7],0x7a
  40a8de:	loop   0x40a92e
  40a8e0:	dec    edx
  40a8e1:	dec    esp
  40a8e2:	sbb    edx,DWORD PTR [eax-0x31]
  40a8e5:	jo     0x40a895
  40a8e7:	rol    cl,0x31
  40a8ea:	sub    ebp,0xba74df45
  40a8f0:	dec    ecx
  40a8f1:	add    esp,DWORD PTR [esi+0x15a03240]
  40a8f7:	jne    0x40a94e
  40a8f9:	push   edi
  40a8fa:	adc    ch,BYTE PTR [eax-0x7e31c8d3]
  40a900:	xor    ebx,DWORD PTR [ebp+esi*4-0x32]
  40a904:	call   0x1697:0xc5447b21
  40a90b:	cmp    esi,edx
  40a90d:	repz pop esi
  40a90f:	or     edx,DWORD PTR [ecx]
  40a911:	adc    eax,0xc17a9382
  40a916:	push   ss
  40a917:	push   esp
  40a918:	clc    
  40a919:	jbe    0x40a96d
  40a91b:	cwde   
  40a91c:	adc    edi,eax
  40a91e:	das    
  40a91f:	lods   al,BYTE PTR ds:[esi]
  40a920:	cmp    edx,DWORD PTR [edi+0xd]
  40a923:	add    al,0x7d
  40a925:	push   edx
  40a926:	xor    edi,eax
  40a928:	sbb    eax,0x416c1590
  40a92d:	mov    bh,0x41
  40a92f:	pop    ecx
  40a930:	aaa    
  40a931:	sub    BYTE PTR [edx-0x69],0xd2
  40a935:	add    edi,eax
  40a937:	icebp  
  40a938:	sbb    eax,0xb0d1c240
  40a93d:	cdq    
  40a93e:	xchg   ecx,eax
  40a93f:	rol    DWORD PTR [eax+0x60],0x88
  40a943:	ds and al,0xf8
  40a946:	push   ecx
  40a947:	mov    dl,0x95
  40a949:	retf   
  40a94a:	pusha  
  40a94b:	sbb    eax,0xaccac80c
  40a950:	pop    esi
  40a951:	popa   
  40a952:	mov    ds:0xbf2bc51a,eax
  40a957:	dec    edi
  40a958:	arpl   WORD PTR [ecx],cx
  40a95a:	ret    0x9c47
  40a95d:	jb     0x40a8ec
  40a95f:	scas   eax,DWORD PTR es:[edi]
  40a960:	sub    al,0xc9
  40a962:	xchg   ebx,eax
  40a963:	cmp    DWORD PTR [ecx+0x1659166d],esp
  40a969:	out    dx,eax
  40a96a:	mov    al,0xaa
  40a96c:	lds    edi,FWORD PTR ds:0x2f8dbced
  40a972:	inc    edi
  40a973:	call   0xb4590b5a
  40a978:	add    ebp,ecx
  40a97a:	in     eax,dx
  40a97b:	ror    BYTE PTR [edi-0x3f],1
  40a97e:	dec    ecx
  40a97f:	pop    eax
  40a980:	cmp    eax,0x8cd2dc00
  40a985:	lods   eax,DWORD PTR ds:[esi]
  40a986:	jp     0x40a98c
  40a988:	adc    ecx,ebx
  40a98a:	stc    
  40a98b:	and    al,0x6b
  40a98d:	xor    dh,al
  40a98f:	pusha  
  40a990:	data16 int3 
  40a992:	xor    al,0x84
  40a994:	inc    edi
  40a995:	bound  ebx,QWORD PTR [ebp-0x12a5b2e2]
  40a99b:	xchg   edi,eax
  40a99c:	inc    ebp
  40a99d:	xor    eax,DWORD PTR [eax]
  40a99f:	js     0x40a9cd
  40a9a1:	and    esi,DWORD PTR [ebp+edx*1+0x6]
  40a9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a6:	pop    es
  40a9a7:	sbb    cl,ah
  40a9a9:	jl     0x40aa0c
  40a9ab:	xor    BYTE PTR [eax+0x7b],dl
  40a9ae:	pop    edi
  40a9af:	hlt    
  40a9b0:	(bad)  
  40a9b1:	popa   
  40a9b2:	and    BYTE PTR [ebx],bh
  40a9b4:	fild   QWORD PTR [edx]
  40a9b6:	sub    DWORD PTR fs:[edi+edx*1+0x26],ecx
  40a9bb:	icebp  
  40a9bc:	daa    
  40a9bd:	das    
  40a9be:	imul   ebx,edi,0x218c9d28
  40a9c4:	mov    bl,0x9d
  40a9c6:	mov    al,0xce
  40a9c8:	jbe    0x40a95b
  40a9ca:	or     eax,0x5db6a065
  40a9cf:	fcmovnb st,st(4)
  40a9d1:	popa   
  40a9d2:	or     ch,BYTE PTR [esp+ebx*4-0x19]
  40a9d6:	pop    esi
  40a9d7:	inc    ecx
  40a9d8:	es ret 0xe526
  40a9dc:	mov    fs,esp
  40a9de:	ret    
  40a9df:	pusha  
  40a9e0:	or     al,0x48
  40a9e2:	loop   0x40aa11
  40a9e4:	inc    ecx
  40a9e5:	scas   al,BYTE PTR es:[edi]
  40a9e6:	mov    ecx,0xcb622f23
  40a9eb:	sbb    DWORD PTR [edi],ebx
  40a9ed:	sbb    DWORD PTR [ebx+0x27],edi
  40a9f0:	or     DWORD PTR [ebp+ebp*4+0x6c],esp
  40a9f4:	dec    eax
  40a9f5:	sahf   
  40a9f6:	gs push es
  40a9f8:	inc    ebx
  40a9f9:	popf   
  40a9fa:	repnz mov WORD PTR [edx],gs
  40a9fd:	add    DWORD PTR [edi-0x19],eax
  40aa00:	mov    al,0x8f
  40aa02:	xchg   ebx,eax
  40aa03:	daa    
  40aa04:	lea    esp,[eax+0xc9103a0]
  40aa0a:	sbb    BYTE PTR [eax-0x4db680e4],dl
  40aa10:	sub    eax,0x78641431
  40aa15:	shr    BYTE PTR [edi-0x62],cl
  40aa18:	push   eax
  40aa19:	sub    BYTE PTR [eax+ebp*2],0x42
  40aa1d:	pop    ebx
  40aa1e:	je     0x40aa4a
  40aa20:	das    
  40aa21:	push   edx
  40aa22:	mov    esp,0x6f0d1afc
  40aa27:	sub    al,0xe8
  40aa29:	outs   dx,DWORD PTR ds:[esi]
  40aa2a:	mov    BYTE PTR [esi-0x71],dl
  40aa2d:	sar    DWORD PTR [edi+0xfe7374c],1
  40aa33:	cld    
  40aa34:	jno    0x40aa9b
  40aa36:	push   edi
  40aa37:	or     esp,DWORD PTR [ecx+0x77cd0dc0]
  40aa3d:	iret   
  40aa3e:	mov    esp,0x1f8f37a5
  40aa43:	lods   eax,DWORD PTR ds:[esi]
  40aa44:	sahf   
  40aa45:	jmp    0x598d1844
  40aa4a:	adc    al,0x19
  40aa4c:	cld    
  40aa4d:	iret   
  40aa4e:	inc    esp
  40aa4f:	in     al,0x1e
  40aa51:	popf   
  40aa52:	pop    esi
  40aa53:	out    0x19,al
  40aa55:	outs   dx,BYTE PTR ds:[esi]
  40aa56:	mov    ss,WORD PTR [ebp-0x24]
  40aa59:	jnp    0x40aa4f
  40aa5b:	mov    db6,esi
  40aa5e:	fsub   DWORD PTR [eax+0x7]
  40aa61:	or     eax,0xe1498ce
  40aa66:	push   esp
  40aa67:	fdivp  st(4),st
  40aa69:	adc    DWORD PTR [edx],esi
  40aa6b:	jmp    0x40aab4
  40aa6d:	add    BYTE PTR [esi],dh
  40aa6f:	scas   al,BYTE PTR es:[edi]
  40aa70:	mov    esi,0xdab39db3
  40aa75:	cmovp  esp,ecx
  40aa78:	shl    BYTE PTR [ebx-0x61273ea9],1
  40aa7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7f:	fmul   QWORD PTR [esi]
  40aa81:	mov    eax,0xb04bceb1
  40aa86:	stos   DWORD PTR es:[edi],eax
  40aa87:	xor    al,0xb
  40aa89:	jp     0x40aab9
  40aa8b:	push   0x29
  40aa8d:	fbstp  TBYTE PTR [esi-0x71]
  40aa90:	mov    al,ds:0xdf8bf945
  40aa95:	(bad)  
  40aa96:	out    0x4a,eax
  40aa98:	jmp    0x40aa64
  40aa9a:	arpl   dx,cx
  40aa9c:	ret    0xc853
  40aa9f:	fwait
  40aaa0:	bts    DWORD PTR [eax-0x396943d5],eax
  40aaa7:	jns    0x40aa50
  40aaa9:	xchg   ecx,eax
  40aaaa:	cmp    al,0xa3
  40aaac:	int    0x4c
  40aaae:	pop    ecx
  40aaaf:	jg     0x40aa42
  40aab1:	ret    0x80e5
  40aab4:	push   ss
  40aab5:	(bad)  
  40aab6:	(bad)  
  40aab8:	sbb    eax,0x6e6dad89
  40aabd:	call   0x15b95eae
  40aac2:	mov    esi,0xf52aef8c
  40aac7:	xor    BYTE PTR [edx+0x7280e223],ah
  40aacd:	repnz xchg ebx,eax
  40aacf:	jae    0x40ab2b
  40aad1:	mov    ecx,0x7fc5158f
  40aad6:	and    al,0xa1
  40aad8:	sti    
  40aad9:	mov    al,ds:0xf6727de5
  40aade:	cmp    eax,0xa039f485
  40aae3:	mov    al,0x87
  40aae5:	jp     0x40ab59
  40aae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae8:	jb     0x40aaf9
  40aaea:	stos   DWORD PTR es:[edi],eax
  40aaeb:	push   ecx
  40aaec:	imul   ebp,DWORD PTR [edi+0x5041a3ab],0x8
  40aaf3:	test   BYTE PTR [edx-0x52],al
  40aaf6:	xchg   edi,eax
  40aaf7:	test   al,0xbb
  40aaf9:	jmp    0x40ab53
  40aafb:	push   0xf
  40aafd:	xchg   esi,eax
  40aafe:	and    DWORD PTR [ebx+0x50],0xf99838f9
  40ab05:	js     0x40ab7e
  40ab07:	mov    ebx,0x9ee36146
  40ab0c:	ret    
  40ab0d:	cs (bad) 
  40ab0f:	in     al,0x50
  40ab11:	out    0x76,eax
  40ab13:	cs mov al,0xa8
  40ab16:	and    dl,BYTE PTR [edx]
  40ab18:	inc    esi
  40ab19:	ror    BYTE PTR [edx-0x1f],1
  40ab1c:	bnd jg 0x40ab31
  40ab1f:	push   ebp
  40ab20:	push   es
  40ab21:	dec    esi
  40ab22:	inc    ecx
  40ab23:	gs test al,0xfc
  40ab26:	cmp    dl,BYTE PTR [ecx]
  40ab28:	mov    ds:0xcd061e2c,al
  40ab2d:	call   0x2936ea3
  40ab32:	lods   al,BYTE PTR ds:[esi]
  40ab33:	ret    0x6c74
  40ab36:	xor    DWORD PTR [esi],esp
  40ab38:	mov    ss,WORD PTR [ecx-0x41]
  40ab3b:	gs pushf 
  40ab3d:	adc    ebx,DWORD PTR [edi-0x37]
  40ab40:	mov    dh,0x18
  40ab42:	(bad)  
  40ab43:	cmp    BYTE PTR [esi+0x4b74ff9a],dh
  40ab49:	ja     0x40abc4
  40ab4b:	retf   0x2e58
  40ab4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4f:	mov    ebp,0x77294efa
  40ab54:	loop   0x40ab1e
  40ab56:	aad    0x92
  40ab58:	and    al,0x0
  40ab5a:	pop    eax
  40ab5b:	stc    
  40ab5c:	mov    eax,ds:0xb6d6aa7d
  40ab61:	aas    
  40ab62:	fldenv [ebx-0x2b]
  40ab65:	pop    eax
  40ab66:	imul   ecx,DWORD PTR [esi],0xffffff94
  40ab69:	call   0x9c2fda94
  40ab6e:	jae    0x40ab4f
  40ab70:	ffreep st(7)
  40ab72:	add    al,0xa1
  40ab74:	cdq    
  40ab75:	add    al,0xcc
  40ab77:	int3   
  40ab78:	in     al,0x1
  40ab7a:	xchg   ebp,eax
  40ab7b:	mov    ds:0x277db0e5,al
  40ab80:	or     ebp,DWORD PTR [ecx+0x2ff74975]
  40ab86:	sbb    DWORD PTR [ecx-0x351b991],ebp
  40ab8c:	pop    ebx
  40ab8d:	jle    0x40ab4a
  40ab8f:	cmp    al,0x2c
  40ab91:	out    dx,eax
  40ab92:	aam    0xa0
  40ab94:	xor    ch,BYTE PTR [ebx+0x2efa336d]
  40ab9a:	hlt    
  40ab9b:	(bad)  
  40ab9c:	jb     0x40ac1c
  40ab9e:	jne    0x40ab31
  40aba0:	mov    esi,0xa9ec346f
  40aba5:	in     al,0x7f
  40aba7:	dec    ebx
  40aba8:	pop    edx
  40aba9:	test   DWORD PTR [edi],0x3c9e1c7f
  40abaf:	fsub   DWORD PTR [ecx+0x18]
  40abb2:	bound  ebx,QWORD PTR [edx-0x3c]
  40abb5:	fs mov dh,BYTE PTR cs:[ecx]
  40abb9:	mov    DWORD PTR [esi-0x466b4cdd],edi
  40abbf:	aaa    
  40abc0:	add    DWORD PTR [esp+edx*1-0x24],esp
  40abc4:	adc    DWORD PTR [edi+0x26286af],0x65de8574
  40abce:	imul   esp,ebp,0x8007d994
  40abd4:	hlt    
  40abd5:	imul   ebx,DWORD PTR [esi+0x43edda71],0xffffffcc
  40abdc:	iret   
  40abdd:	cmp    ch,dl
  40abdf:	jge    0x40ab7f
  40abe1:	pop    ss
  40abe2:	or     DWORD PTR [eax-0x55f21fb6],esp
  40abe8:	sub    BYTE PTR [ebp+0x5c],al
  40abeb:	fsub   QWORD PTR [esi-0x4b]
  40abee:	fidiv  WORD PTR [edx]
  40abf0:	inc    edi
  40abf1:	push   es
  40abf2:	xlat   BYTE PTR ds:[ebx]
  40abf3:	int3   
  40abf4:	mov    ah,0x1e
  40abf6:	sub    ebx,DWORD PTR [esp+ebp*1]
  40abf9:	or     eax,0x9d2ce520
  40abfe:	addr16 sub al,0xa
  40ac01:	add    al,0xe4
  40ac03:	retf   
  40ac04:	sub    eax,0x378233ca
  40ac09:	jne    0x40abd3
  40ac0b:	shl    BYTE PTR [ebx+0xd],0xe1
  40ac0f:	xchg   DWORD PTR [edi-0x6605a94e],edx
  40ac15:	in     al,0xd0
  40ac17:	int3   
  40ac18:	push   eax
  40ac19:	inc    eax
  40ac1a:	mov    edi,0x5a81c9c5
  40ac1f:	(bad)  
  40ac20:	retf   0x729e
  40ac23:	test   DWORD PTR [ebx+0x62],ebx
  40ac26:	(bad)  
  40ac27:	loopne 0x40abd8
  40ac29:	cmp    edx,ebx
  40ac2b:	pop    ds
  40ac2c:	(bad)  
  40ac2d:	out    dx,al
  40ac2e:	popa   
  40ac2f:	pop    ss
  40ac30:	xchg   ecx,eax
  40ac31:	mov    bl,0x37
  40ac33:	jne    0x40ac43
  40ac35:	adc    BYTE PTR es:[ecx],dh
  40ac38:	ret    
  40ac39:	cs in  al,0x50
  40ac3c:	push   esi
  40ac3d:	mov    al,0xbc
  40ac3f:	rol    DWORD PTR [edi],1
  40ac41:	xchg   edx,eax
  40ac42:	loopne 0x40abe3
  40ac44:	pushf  
  40ac45:	mov    BYTE PTR [esi+0x5d],dl
  40ac48:	xor    BYTE PTR [edx+ebx*1],0xcc
  40ac4c:	and    DWORD PTR [esi-0x7c730424],esi
  40ac52:	out    dx,al
  40ac53:	ins    DWORD PTR es:[edi],dx
  40ac54:	add    bh,cl
  40ac56:	(bad)  
  40ac57:	sub    bh,ch
  40ac59:	xchg   esi,eax
  40ac5a:	or     eax,0x5b32cea1
  40ac5f:	push   es
  40ac60:	pop    ss
  40ac61:	mov    ch,BYTE PTR [esi+0x2bbb2ebf]
  40ac67:	cli    
  40ac68:	fisttp WORD PTR [ebx-0x78d864c8]
  40ac6e:	mov    dh,0xee
  40ac70:	and    eax,0x9250d1f9
  40ac75:	test   eax,0x76d344d4
  40ac7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac7b:	adc    bl,dh
  40ac7d:	arpl   WORD PTR [eax+0x5752ddc5],di
  40ac83:	mov    ds:0x84d1bc52,eax
  40ac88:	shr    ah,1
  40ac8a:	(bad)  
  40ac8b:	pushf  
  40ac8c:	outs   dx,BYTE PTR ds:[esi]
  40ac8d:	mov    ds:0x337092d6,eax
  40ac92:	repnz mov dl,0x19
  40ac95:	loopne 0x40ac9c
  40ac97:	and    BYTE PTR [esi+0x7f],cl
  40ac9a:	adc    BYTE PTR ds:0x255b79b8,0x5c
  40aca1:	sub    eax,0x41520b33
  40aca6:	sbb    DWORD PTR [edi],0xffffffc7
  40aca9:	fucomi st,st(2)
  40acab:	sbb    DWORD PTR [ebp+0x14],esp
  40acae:	dec    edx
  40acaf:	pop    eax
  40acb0:	cdq    
  40acb1:	je     0x40ac69
  40acb3:	add    al,BYTE PTR [edi+0xd8a44a9]
  40acb9:	xor    DWORD PTR [ebp+edi*2-0x380bf877],0x63
  40acc1:	daa    
  40acc2:	test   al,0x1d
  40acc4:	xor    BYTE PTR [ecx+0x62],dh
  40acc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc8:	pop    ecx
  40acc9:	call   0x8b55f34f
  40acce:	cdq    
  40accf:	jmp    0x40ad47
  40acd1:	sbb    ebx,DWORD PTR [edi*4+0x29b55100]
  40acd8:	iret   
  40acd9:	fisttp DWORD PTR [eax-0x63d97f6d]
  40acdf:	push   ss
  40ace0:	stc    
  40ace1:	loopne 0x40acdd
  40ace3:	ret    
  40ace4:	pop    ecx
  40ace5:	sub    DWORD PTR [edx+0x2757a29],ebx
  40aceb:	lea    edx,[ecx+edi*2]
  40acee:	icebp  
  40acef:	add    BYTE PTR [esi+ecx*8-0x7115219],0x9c
  40acf7:	sub    eax,0x666c7857
  40acfc:	xchg   esi,eax
  40acfd:	test   eax,0xb191e50
  40ad02:	ret    
  40ad03:	je     0x40ad2c
  40ad05:	adc    eax,0xd24edba
  40ad0a:	mov    BYTE PTR [eax-0x2fded420],dl
  40ad10:	cmp    DWORD PTR [ebx-0x27],edi
  40ad13:	pop    es
  40ad14:	inc    ecx
  40ad15:	xor    dh,BYTE PTR [edi+0x77ef5107]
  40ad1b:	les    ebp,FWORD PTR [esi-0x2a]
  40ad1e:	dec    ebp
  40ad1f:	imul   eax,DWORD PTR [esp+eax*1],0x79
  40ad23:	stos   DWORD PTR es:[edi],eax
  40ad24:	into   
  40ad25:	jns    0x40ad33
  40ad27:	inc    ecx
  40ad28:	rol    DWORD PTR [edi],cl
  40ad2a:	pop    edx
  40ad2b:	jp     0x40ad58
  40ad2d:	loope  0x40ad07
  40ad2f:	(bad)  
  40ad30:	fist   WORD PTR [ecx]
  40ad32:	int3   
  40ad33:	(bad)  
  40ad34:	pop    esp
  40ad35:	adc    al,0x6c
  40ad37:	jae    0x40ad6a
  40ad39:	xchg   esi,eax
  40ad3a:	fwait
  40ad3b:	sub    BYTE PTR [esi-0x6f],dl
  40ad3e:	mov    esp,0x2c144a21
  40ad43:	jecxz  0x40ad4b
  40ad45:	add    ecx,edx
  40ad47:	inc    eax
  40ad48:	ja     0x40ad92
  40ad4a:	or     al,0x2b
  40ad4c:	cld    
  40ad4d:	lea    eax,[ebx+0x31]
  40ad50:	outs   dx,DWORD PTR ds:[esi]
  40ad51:	sub    edi,DWORD PTR [edx-0x32d27c89]
  40ad57:	adc    eax,0x62618b3a
  40ad5c:	jno    0x40ad25
  40ad5e:	cmp    al,0xd3
  40ad60:	inc    ebx
  40ad61:	and    dl,BYTE PTR ds:0x5d5307fe
  40ad67:	sbb    al,BYTE PTR [esi-0x4a]
  40ad6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad6b:	imul   ebx,DWORD PTR [ebp-0x1f],0x8866abb3
  40ad72:	add    edx,edx
  40ad74:	sbb    ah,BYTE PTR [edi]
  40ad76:	xor    esp,DWORD PTR [ebx]
  40ad78:	or     eax,0x67f710eb
  40ad7d:	xchg   esp,eax
  40ad7e:	popf   
  40ad7f:	das    
  40ad80:	jno    0x40ada2
  40ad82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad83:	and    al,0x6a
  40ad85:	cmp    WORD PTR ds:0xd59e63f7,0xffc1
  40ad8d:	sub    ecx,edx
  40ad8f:	sbb    cl,BYTE PTR [edi]
  40ad91:	cs (bad) 
  40ad93:	aam    0x3e
  40ad95:	or     al,0xcb
  40ad97:	sub    al,0xa6
  40ad99:	sub    al,0xbd
  40ad9b:	ret    
  40ad9c:	(bad)  
  40ad9d:	jecxz  0x40adb6
  40ad9f:	(bad)  
  40ada0:	sub    dl,ch
  40ada2:	xor    BYTE PTR [ecx],dh
  40ada4:	imul   DWORD PTR [ebp-0x5b]
  40ada7:	fdivr  DWORD PTR [edi-0x5d8a3374]
  40adad:	mov    es,ebx
  40adaf:	pop    di
  40adb1:	pop    ss
  40adb2:	add    bl,dh
  40adb4:	(bad)  
  40adb5:	out    0xaf,eax
  40adb7:	in     al,dx
  40adb8:	daa    
  40adb9:	(bad)  
  40adba:	call   FWORD PTR [edx-0x621ec95a]
  40adc0:	fst    DWORD PTR [ebx-0x4d]
  40adc3:	ins    BYTE PTR es:[edi],dx
  40adc4:	stc    
  40adc5:	repnz push edi
  40adc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc8:	outs   dx,BYTE PTR ds:[esi]
  40adc9:	push   cs
  40adca:	and    bh,BYTE PTR [edx+eiz*2-0x2f8a104f]
  40add1:	push   es
  40add2:	pop    ecx
  40add3:	out    0xf6,al
  40add5:	pop    ebx
  40add6:	xchg   ecx,eax
  40add7:	pop    edx
  40add8:	enter  0x744b,0xe2
  40addc:	sub    eax,0xe989f39d
  40ade1:	pop    ebx
  40ade2:	mov    eax,ds:0xb440c1a3
  40ade7:	fnsetpm(287 only) 
  40ade9:	inc    esi
  40adea:	imul   ebx,DWORD PTR ss:[esi+0x1f],0x6a
  40adef:	xor    ch,BYTE PTR [edi]
  40adf1:	sti    
  40adf2:	sbb    al,0x6a
  40adf4:	xlat   BYTE PTR ds:[ebx]
  40adf5:	push   edi
  40adf6:	test   al,0xed
  40adf8:	sahf   
  40adf9:	les    edx,FWORD PTR [esi]
  40adfb:	pop    es
  40adfc:	(bad)  
  40adfe:	and    al,al
  40ae00:	cld    
  40ae01:	add    BYTE PTR [esi-0x1f],ch
  40ae04:	sub    ebp,DWORD PTR [esi]
  40ae06:	shld   DWORD PTR [edi+0x11],edi,0x37
  40ae0b:	dec    esi
  40ae0c:	ret    
  40ae0d:	jmp    0x40ae8c
  40ae0f:	mov    bh,0x5b
  40ae11:	shl    DWORD PTR [eax-0x3b],1
  40ae14:	rcr    ch,0xb5
  40ae17:	shl    DWORD PTR [eax],0xfd
  40ae1a:	jecxz  0x40ae7c
  40ae1c:	mov    cl,0x5b
  40ae1e:	test   eax,0x37d2aa86
  40ae23:	pop    esp
  40ae24:	stos   DWORD PTR es:[edi],eax
  40ae25:	test   dh,cl
  40ae27:	shl    BYTE PTR [ebp+0x40af9c88],cl
  40ae2d:	and    edx,DWORD PTR [eax]
  40ae2f:	fldcw  WORD PTR [ebx]
  40ae31:	push   eax
  40ae32:	jo     0x40ae9b
  40ae34:	cmp    eax,0x1a7dbd97
  40ae39:	lea    ebx,[ebp-0x6f]
  40ae3c:	outs   dx,DWORD PTR ds:[esi]
  40ae3d:	rcr    BYTE PTR [edi-0x13317034],cl
  40ae43:	jno    0x40ae32
  40ae45:	pop    edi
  40ae46:	into   
  40ae47:	pop    es
  40ae48:	cli    
  40ae49:	ins    DWORD PTR es:[edi],dx
  40ae4a:	cmp    eax,0xb30f1846
  40ae4f:	push   es
  40ae50:	fidiv  DWORD PTR gs:[di]
  40ae54:	scas   al,BYTE PTR es:[edi]
  40ae55:	inc    esi
  40ae56:	sti    
  40ae57:	mov    esp,0xa31b17d3
  40ae5c:	jb     0x40ae7c
  40ae5e:	rcr    bh,1
  40ae60:	cmp    DWORD PTR [ebp-0x7f1acd38],0xfda16b46
  40ae6a:	adc    eax,0x44e2dea
  40ae6f:	daa    
  40ae70:	push   ebx
  40ae71:	xor    eax,0x4cb34df2
  40ae76:	mov    bh,BYTE PTR ds:0x5171dd02
  40ae7c:	add    ebx,ebx
  40ae7e:	inc    esp
  40ae7f:	outs   dx,DWORD PTR ds:[esi]
  40ae80:	out    dx,al
  40ae81:	rcr    eax,1
  40ae83:	icebp  
  40ae84:	stc    
  40ae85:	je     0x40ae2d
  40ae87:	fstp   st(3)
  40ae89:	jmp    0xf708573f
  40ae8e:	push   ebx
  40ae8f:	xchg   DWORD PTR [ecx+0x12],eax
  40ae92:	mov    bh,0x59
  40ae94:	dec    eax
  40ae95:	nop
  40ae96:	dec    eax
  40ae97:	add    DWORD PTR [ebx],edi
  40ae99:	dec    DWORD PTR [eax+0xf6c740d]
  40ae9f:	hlt    
  40aea0:	inc    ebp
  40aea1:	fbld   TBYTE PTR [edi+ebx*4]
  40aea4:	sbb    al,0xe9
  40aea6:	adc    BYTE PTR [ebx+eax*4-0x4271d33a],bl
  40aead:	mov    ds:0x9d21477f,eax
  40aeb2:	test   eax,0xae1656c2
  40aeb7:	add    eax,DWORD PTR [eax+0x6d1a07e0]
  40aebd:	mov    ds:0x5199138e,al
  40aec2:	out    dx,al
  40aec3:	loop   0x40aee2
  40aec5:	and    bh,BYTE PTR [ecx]
  40aec7:	add    al,ah
  40aec9:	shl    BYTE PTR [esi-0x32],cl
  40aecc:	int3   
  40aecd:	mov    bl,0x67
  40aecf:	js     0x40aeb5
  40aed1:	add    dl,BYTE PTR [edx]
  40aed3:	(bad)  
  40aed4:	fisttp WORD PTR [ebp-0xc]
  40aed7:	fs mov dl,0x90
  40aeda:	popa   
  40aedb:	mov    edi,0x7429bcb7
  40aee0:	stos   BYTE PTR es:[edi],al
  40aee1:	lahf   
  40aee2:	push   ecx
  40aee3:	enter  0x2e57,0xde
  40aee7:	data16 mov BYTE PTR [ebp+0x4f220e86],bl
  40aeee:	cmp    al,0x7e
  40aef0:	iret   
  40aef1:	mov    ebx,0xc52bb961
  40aef6:	mov    BYTE PTR [edi+0x4],0x12
  40aefa:	ret    0x4fc7
  40aefd:	shl    bh,cl
  40aeff:	push   ds
  40af00:	not    BYTE PTR [edx]
  40af02:	stos   BYTE PTR es:[edi],al
  40af03:	push   eax
  40af04:	test   eax,0x92a98873
  40af09:	xchg   ebp,eax
  40af0a:	in     eax,0xe3
  40af0c:	or     ebp,ecx
  40af0e:	cmp    DWORD PTR [esi+0x3c994a1b],eax
  40af14:	push   edx
  40af15:	(bad)  
  40af16:	adc    DWORD PTR [edx+0x6d48ab6a],ebx
  40af1c:	fistp  QWORD PTR [edx*2-0x12820dd1]
  40af23:	stc    
  40af24:	pop    edx
  40af25:	scas   al,BYTE PTR es:[edi]
  40af26:	inc    ecx
  40af27:	inc    eax
  40af28:	test   BYTE PTR [ecx-0x2a2f67f1],cl
  40af2e:	jmp    0x40af32
  40af30:	jge    0x40af69
  40af32:	mov    ch,0x49
  40af34:	push   es
  40af35:	ins    BYTE PTR es:[edi],dx
  40af36:	xchg   ebx,eax
  40af37:	mov    ah,0xf6
  40af39:	or     BYTE PTR [edx-0x5f6d01fe],dh
  40af3f:	out    dx,eax
  40af40:	clc    
  40af41:	pop    edi
  40af42:	cmp    bp,WORD PTR [edx*1-0x5427927d]
  40af4a:	inc    edx
  40af4b:	arpl   WORD PTR [ebp-0x39e19f9c],dx
  40af51:	das    
  40af52:	xchg   DWORD PTR [edx+0x578c4462],eax
  40af58:	jg     0x40af45
  40af5a:	add    ah,BYTE PTR ds:0x39393c
  40af60:	clc    
  40af61:	dec    ebx
  40af62:	sbb    ebx,ebx
  40af64:	jo     0x40aef9
  40af66:	adc    BYTE PTR [eax+edx*2],0x24
  40af6a:	scas   eax,DWORD PTR es:[edi]
  40af6b:	clc    
  40af6c:	inc    esi
  40af6d:	(bad)  
  40af6e:	cli    
  40af6f:	jno    0x40afb5
  40af71:	cmc    
  40af72:	retf   0x6cca
  40af75:	cld    
  40af76:	xor    BYTE PTR [edi-0x2e0528f9],0xc6
  40af7d:	mov    esp,0x54988b77
  40af82:	rcr    BYTE PTR [edi-0x6b8922b3],0x2f
  40af89:	sbb    al,0xa8
  40af8b:	sub    BYTE PTR [ecx],dl
  40af8d:	jae    0x40af37
  40af8f:	imul   ecx,ebx,0x27
  40af92:	mov    esi,0xee8a8df6
  40af97:	lea    edx,[eax+0x32885fc2]
  40af9d:	aad    0x19
  40af9f:	(bad)  
  40afa0:	(bad)  
  40afa1:	xor    ah,cl
  40afa3:	scas   al,BYTE PTR es:[edi]
  40afa4:	(bad)  
  40afa5:	xchg   esi,eax
  40afa6:	aaa    
  40afa7:	sub    eax,0x38f53724
  40afac:	jbe    0x40b01b
  40afae:	lock dec esp
  40afb0:	(bad)  
  40afb1:	mov    ebx,0xd7cbf064
  40afb6:	mov    BYTE PTR ds:0xccc06283,ah
  40afbc:	mov    fs,WORD PTR [ebx+0x69393549]
  40afc2:	dec    eax
  40afc3:	and    edi,DWORD PTR [esi-0x7a]
  40afc6:	and    DWORD PTR [ecx],esp
  40afc8:	dec    dh
  40afca:	push   ebx
  40afcb:	push   edx
  40afcc:	in     eax,dx
  40afcd:	mov    eax,DWORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0x3929b0d0,0x55
  40afff:	push   esp
  40b000:	xlat   BYTE PTR ds:[ebx]
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffff8e
  40b00a:	sub    edi,DWORD PTR [edx+0x57e6a776]
  40b010:	jmp    DWORD PTR [esi+0x5b]
  40b013:	loop   0x40afd3
  40b015:	push   esi
  40b016:	sub    esp,edx
  40b018:	dec    esi
  40b019:	xchg   DWORD PTR ds:0x49f9b90,eax
  40b01f:	adc    BYTE PTR [edx+0x45935797],dl
  40b025:	aaa    
  40b026:	xchg   DWORD PTR [ebp+0x21fd008e],edx
  40b02c:	cmp    edx,DWORD PTR [edx+0x6b7ed637]
  40b032:	fcmovnb st,st(5)
  40b034:	das    
  40b035:	punpcklbw mm5,DWORD PTR [esp+ebp*1+0x11]
  40b03a:	xchg   BYTE PTR [edi-0x6b401cc0],ah
  40b040:	bound  ebp,QWORD PTR [ebx+0x3c07e48e]
  40b046:	xchg   edx,eax
  40b047:	adc    ch,dl
  40b049:	pop    edi
  40b04a:	dec    esp
  40b04b:	iret   
  40b04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b04d:	xor    DWORD PTR [eax],esp
  40b04f:	adc    al,0x9d
  40b051:	mov    DWORD PTR [ebx+0x29a169c6],0xad978595
  40b05b:	cmp    bl,dh
  40b05d:	ret    0x2a3
  40b060:	aam    0x2d
  40b062:	gs (bad) 
  40b064:	std    
  40b065:	(bad)  
  40b066:	hlt    
  40b067:	call   0x8bef:0x7d2d22d5
  40b06e:	test   DWORD PTR [eax-0x2de8eba6],ebx
  40b074:	xor    al,0x90
  40b076:	leave  
  40b077:	jge    0x40b051
  40b079:	arpl   WORD PTR [ecx+ebx*1-0x760015d1],di
  40b080:	shr    BYTE PTR [edi-0x41d7643b],1
  40b086:	ds scas al,BYTE PTR es:[edi]
  40b088:	fisttp WORD PTR [edi-0x1e]
  40b08b:	mov    cl,0x38
  40b08d:	xchg   edx,eax
  40b08e:	enter  0x3ff7,0xd
  40b092:	inc    eax
  40b093:	xor    eax,0x53ed00f9
  40b098:	ds fwait
  40b09a:	cmp    DWORD PTR gs:[esi-0x6b],0x4d21c059
  40b0a2:	sti    
  40b0a3:	imul   ebp,ebp,0x5e
  40b0a6:	shl    DWORD PTR [esi-0x28],0x9
  40b0aa:	in     eax,0x3d
  40b0ac:	lock xchg ebx,ecx
  40b0af:	aas    
  40b0b0:	into   
  40b0b1:	lahf   
  40b0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b3:	lea    esi,[esi+edi*2]
  40b0b6:	cmp    al,0xb9
  40b0b8:	and    BYTE PTR [edx+0xa],0x5c
  40b0bc:	sub    DWORD PTR [ecx],ebx
  40b0be:	pop    edx
  40b0bf:	cmc    
  40b0c0:	out    0x8,eax
  40b0c2:	xor    bl,BYTE PTR [ecx]
  40b0c4:	pop    edx
  40b0c5:	push   0x2f
  40b0c7:	adc    bl,dl
  40b0c9:	into   
  40b0ca:	repnz dec edi
  40b0cc:	retf   0x9c5c
  40b0cf:	fnsave [esp+ebx*2+0x37be079b]
  40b0d6:	jbe    0x40b0a6
  40b0d8:	mov    al,0x15
  40b0da:	jle    0x40b098
  40b0dc:	in     al,dx
  40b0dd:	lds    ecx,FWORD PTR [esi+ebx*2]
  40b0e0:	ficomp WORD PTR [ebp+0x4b2d2cc0]
  40b0e6:	add    eax,0x1c9b0334
  40b0eb:	mov    BYTE PTR [edx-0x1b3f5981],0xa
  40b0f2:	sub    eax,ecx
  40b0f4:	jmp    0x40b0ad
  40b0f6:	xchg   edi,eax
  40b0f7:	jmp    0xd12a620f
  40b0fc:	leave  
  40b0fd:	cld    
  40b0fe:	jb     0x40b147
  40b100:	jle    0x40b119
  40b102:	xor    BYTE PTR [ebx+esi*4+0x5f30a067],ch
  40b109:	pusha  
  40b10a:	int3   
  40b10b:	sbb    BYTE PTR [ecx+0x3ed5bffc],dh
  40b111:	(bad)  [edi-0x4c]
  40b114:	xchg   edx,eax
  40b115:	out    dx,al
  40b116:	lahf   
  40b117:	pushf  
  40b118:	cwde   
  40b119:	stos   DWORD PTR es:[edi],eax
  40b11a:	daa    
  40b11b:	pop    esi
  40b11c:	out    0xff,eax
  40b11e:	lods   eax,DWORD PTR ds:[esi]
  40b11f:	popf   
  40b120:	xchg   BYTE PTR [esi-0x6815c604],ch
  40b126:	mov    edi,0x865805f9
  40b12b:	dec    DWORD PTR [edx]
  40b12d:	and    esp,esi
  40b12f:	adc    ch,BYTE PTR ss:[edi+esi*2+0x7aa5f1b7]
  40b137:	test   DWORD PTR [edi+edi*4-0x5abc19ce],eax
  40b13e:	out    0x23,eax
  40b140:	cmc    
  40b141:	xor    DWORD PTR [eax-0x3a],0xffffffa3
  40b145:	or     bl,BYTE PTR ds:0x4f0ec014
  40b14b:	rcr    dh,cl
  40b14d:	xchg   ebx,eax
  40b14e:	xchg   esi,eax
  40b14f:	jo     0x40b10b
  40b151:	jo     0x40b17c
  40b153:	scas   eax,DWORD PTR es:[edi]
  40b154:	jl     0x40b10e
  40b156:	xor    al,0x63
  40b158:	mov    dh,0xc0
  40b15a:	xchg   ecx,eax
  40b15b:	js     0x40b1d8
  40b15d:	jno    0x40b178
  40b15f:	pop    ebp
  40b160:	(bad)  
  40b161:	and    BYTE PTR [ebx+0x74],al
  40b164:	jg     0x40b182
  40b166:	or     dl,BYTE PTR [eax]
  40b168:	rcr    BYTE PTR [si-0x5b],0x4b
  40b16d:	popf   
  40b16e:	pusha  
  40b16f:	mov    ebp,0xb6ec34c4
  40b174:	shl    BYTE PTR [esi],cl
  40b176:	ins    DWORD PTR es:[edi],dx
  40b177:	retf   0x2ad
  40b17a:	push   esp
  40b17b:	xchg   ecx,eax
  40b17c:	mov    eax,0xe3c8e02c
  40b181:	add    dl,al
  40b183:	cmp    ah,BYTE PTR [edi-0x4cc67e58]
  40b189:	je     0x40b13d
  40b18b:	xlat   BYTE PTR ds:[ebx]
  40b18c:	push   eax
  40b18d:	lahf   
  40b18e:	ret    
  40b18f:	xor    cl,BYTE PTR [ebp+0x60575da5]
  40b195:	repnz stc 
  40b197:	cmp    eax,0xad70059e
  40b19c:	shr    DWORD PTR [ebx+0x11880a07],1
  40b1a2:	or     eax,0x3eba1025
  40b1a7:	push   esi
  40b1a8:	add    BYTE PTR [esi-0x66],ch
  40b1ab:	push   esp
  40b1ac:	fld    st(7)
  40b1ae:	scas   eax,DWORD PTR es:[edi]
  40b1af:	in     al,dx
  40b1b0:	add    cl,bh
  40b1b2:	idiv   DWORD PTR [ebp-0x392b4a8d]
  40b1b8:	cwde   
  40b1b9:	pavgb  mm4,QWORD PTR [ebx]
  40b1bc:	in     al,0xca
  40b1be:	xor    DWORD PTR [ebp+0x15],edx
  40b1c1:	lds    ebp,FWORD PTR [edi]
  40b1c3:	push   eax
  40b1c4:	fsubr  DWORD PTR [edi]
  40b1c6:	xchg   esp,eax
  40b1c7:	js     0x40b155
  40b1c9:	dec    esi
  40b1ca:	adc    ecx,DWORD PTR [edx]
  40b1cc:	ja     0x40b216
  40b1ce:	(bad)  
  40b1cf:	fbld   TBYTE PTR [edx-0x67b599d6]
  40b1d5:	mov    esi,0xf6210353
  40b1da:	imul   edi,DWORD PTR [edx-0x30],0xc528b240
  40b1e1:	push   edi
  40b1e2:	(bad)  
  40b1e3:	mov    esi,0x8e7f7902
  40b1e8:	mov    cl,BYTE PTR [esi-0x65]
  40b1eb:	xlat   BYTE PTR ds:[ebx]
  40b1ec:	(bad)  
  40b1ed:	push   esp
  40b1ee:	push   es
  40b1ef:	lods   eax,DWORD PTR ds:[esi]
  40b1f0:	jecxz  0x40b186
  40b1f2:	fcomp  DWORD PTR [esi-0x1]
  40b1f5:	stc    
  40b1f6:	mov    edx,?
  40b1f8:	stc    
  40b1f9:	popf   
  40b1fa:	inc    ebp
  40b1fb:	popa   
  40b1fc:	hlt    
  40b1fd:	inc    ecx
  40b1fe:	push   cs
  40b1ff:	jmp    0x40b21c
  40b201:	lods   eax,DWORD PTR ds:[esi]
  40b202:	into   
  40b203:	stos   BYTE PTR es:[edi],al
  40b204:	sbb    eax,0x42cf7a54
  40b209:	clc    
  40b20a:	jb     0x40b1ca
  40b20c:	and    DWORD PTR [edi-0x21684949],0xcb640933
  40b216:	test   BYTE PTR [ebx],ah
  40b218:	mov    eax,ds:0x8d59bb4d
  40b21d:	fstp   TBYTE PTR [esi]
  40b21f:	pop    edx
  40b220:	xor    BYTE PTR [eax],0x2d
  40b223:	pushf  
  40b224:	(bad)  
  40b226:	test   eax,0x87d56088
  40b22b:	loop   0x40b21b
  40b22d:	jne    0x40b298
  40b22f:	add    BYTE PTR [edx-0x2d],dl
  40b232:	adc    al,0xbf
  40b234:	xor    ecx,DWORD PTR [edx]
  40b236:	sbb    DWORD PTR [eax],esp
  40b238:	cmp    eax,0xc935e09c
  40b23d:	push   cs
  40b23e:	mov    ebx,DWORD PTR [edx+0x6b511276]
  40b244:	(bad)  
  40b245:	dec    BYTE PTR [ecx]
  40b247:	call   ebp
  40b249:	sub    BYTE PTR [ebx-0x4c],bh
  40b24c:	call   0x10f1f970
  40b251:	xchg   esi,eax
  40b252:	rcr    DWORD PTR [esi+edx*4-0x22],1
  40b256:	bound  ebx,QWORD PTR [edi+ecx*2+0x52]
  40b25a:	push   edi
  40b25b:	xlat   BYTE PTR ds:[ebx]
  40b25c:	jno    0x40b244
  40b25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b260:	jle    0x40b24e
  40b262:	out    0x9,al
  40b264:	inc    ebx
  40b265:	cmp    eax,0xc9c93cba
  40b26a:	sbb    BYTE PTR [edi-0x34a00726],0x35
  40b271:	jnp    0x40b29b
  40b273:	sub    DWORD PTR [edx+0x23],0xb840341b
  40b27a:	push   es
  40b27b:	and    BYTE PTR [ebp+0x15db1f0f],dh
  40b281:	mov    dh,0xa3
  40b283:	lds    esp,FWORD PTR [edi+0x8b0420d]
  40b289:	repz jns 0x40b2ff
  40b28c:	call   0x7a5547de
  40b291:	mov    esi,0xe520d749
  40b296:	lahf   
  40b297:	ss xchg esi,eax
  40b299:	adc    edx,0x8c6a4d43
  40b29f:	retf   
  40b2a0:	stos   BYTE PTR es:[edi],al
  40b2a1:	ret    0x9e06
  40b2a4:	imul   ecx,DWORD PTR [edi],0x28b9c3a7
  40b2aa:	sub    al,0xa7
  40b2ac:	sbb    DWORD PTR [esi+0x1542a6d5],edx
  40b2b2:	pusha  
  40b2b3:	ja     0x40b31a
  40b2b5:	and    edx,0x178a92f3
  40b2bb:	add    DWORD PTR [ebx-0x61247dfe],ebx
  40b2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2c2:	push   edx
  40b2c3:	je     0x40b2c7
  40b2c5:	mov    ebx,0x19181288
  40b2ca:	inc    esi
  40b2cb:	imul   eax,DWORD PTR [edx-0x4],0xffffff8c
  40b2cf:	fimul  DWORD PTR [ebp*8-0x142c9ded]
  40b2d6:	shr    BYTE PTR [ebx],0xf2
  40b2d9:	jecxz  0x40b28d
  40b2db:	les    ebx,FWORD PTR [eax+0x63]
  40b2de:	sbb    bl,BYTE PTR [ecx+0x17f748df]
  40b2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2e5:	and    ebx,DWORD PTR [ecx-0x35]
  40b2e8:	nop
  40b2e9:	dec    edi
  40b2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2eb:	int3   
  40b2ec:	sbb    ecx,esp
  40b2ee:	xchg   ebx,eax
  40b2ef:	xor    BYTE PTR [edi-0x66b95f59],bl
  40b2f5:	add    bl,BYTE PTR [eax+edx*2+0x1a]
  40b2f9:	sahf   
  40b2fa:	das    
  40b2fb:	adc    eax,0x4551dcc8
  40b300:	mov    dh,0x5f
  40b302:	mov    ebx,0xeed7ea6f
  40b307:	pop    es
  40b308:	mov    ebx,0xa600ab41
  40b30d:	scas   eax,DWORD PTR es:[edi]
  40b30e:	xchg   esi,eax
  40b30f:	repnz test BYTE PTR [ecx+0x224a5c11],cl
  40b316:	(bad)  
  40b317:	mov    dl,0xa0
  40b319:	mov    ds:0x172f6694,al
  40b31e:	cmp    bh,BYTE PTR [eax-0x2578c40e]
  40b324:	sub    bl,ah
  40b326:	mov    WORD PTR [edi+0x41],?
  40b329:	cmp    eax,0xd29cbf45
  40b32e:	push   es
  40b32f:	test   eax,0xbde41c62
  40b334:	dec    eax
  40b335:	and    al,BYTE PTR [esp+ecx*4+0x7b]
  40b339:	jg     0x40b39e
  40b33b:	cli    
  40b33c:	push   ecx
  40b33d:	xor    ch,dh
  40b33f:	mov    eax,0x94378209
  40b344:	jbe    0x40b3ab
  40b346:	xor    DWORD PTR [ebx+ebx*8],esi
  40b349:	int3   
  40b34a:	jns    0x40b2dc
  40b34c:	adc    eax,0xe10465ea
  40b351:	mul    DWORD PTR [edx+ebx*2-0x63c4e9a2]
  40b358:	xor    ebp,ebx
  40b35a:	mov    ah,0x8f
  40b35c:	dec    ecx
  40b35d:	mov    ah,0x71
  40b35f:	cli    
  40b360:	jae    0x40b3bf
  40b362:	sub    edi,ebx
  40b364:	cmp    al,0xfd
  40b366:	jge    0x40b3e5
  40b368:	adc    eax,ecx
  40b36a:	mov    dl,0x55
  40b36c:	inc    eax
  40b36d:	test   eax,0xa6d67a74
  40b372:	mov    eax,ss:0xe0a7d116
  40b378:	and    cl,BYTE PTR [esi-0x50]
  40b37b:	pop    ss
  40b37c:	ss nop
  40b37e:	ss mov ch,0x7a
  40b381:	mov    esi,0xea45e42b
  40b386:	stos   DWORD PTR es:[edi],eax
  40b387:	cdq    
  40b388:	sub    ecx,DWORD PTR ds:0xf2674494
  40b38e:	or     eax,0x7f5113b8
  40b393:	ret    0x5874
  40b396:	scas   al,BYTE PTR es:[edi]
  40b397:	inc    ecx
  40b398:	aad    0xe7
  40b39a:	test   DWORD PTR [ecx+0x5c],esi
  40b39d:	je     0x40b3b9
  40b39f:	data16 aaa 
  40b3a1:	and    ebx,edx
  40b3a3:	add    eax,0xf167ee1a
  40b3a8:	sbb    esp,DWORD PTR [ecx+0x4d]
  40b3ab:	jg     0x40b409
  40b3ad:	push   cs
  40b3ae:	xchg   ecx,eax
  40b3af:	arpl   WORD PTR [eax*4-0x7e44bf74],dx
  40b3b6:	mov    eax,ds:0xba148135
  40b3bb:	push   cs
  40b3bc:	outs   dx,BYTE PTR ds:[esi]
  40b3bd:	and    esp,DWORD PTR [edx-0x2ab7ac1f]
  40b3c3:	mov    eax,0xfa458b74
  40b3c8:	cmp    eax,0x227d09e2
  40b3cd:	sub    BYTE PTR [ecx+0x1e43a581],ah
  40b3d3:	out    0x65,eax
  40b3d5:	outs   dx,BYTE PTR ds:[esi]
  40b3d6:	xor    esi,DWORD PTR [ecx-0x3176973b]
  40b3dc:	cld    
  40b3dd:	dec    eax
  40b3de:	mov    ah,0x3
  40b3e0:	dec    edi
  40b3e1:	jmp    FWORD PTR [esi]
  40b3e3:	rcr    DWORD PTR [edi+0x9],cl
  40b3e6:	and    ch,BYTE PTR [ebp-0x6b9983a4]
  40b3ec:	push   ecx
  40b3ed:	or     eax,0x41ffda86
  40b3f2:	adc    edx,DWORD PTR [esi-0x48afa837]
  40b3f8:	pop    edx
  40b3f9:	loopne 0x40b410
  40b3fb:	fsubr  st(5),st
  40b3fd:	push   0xffffffbc
  40b3ff:	iret   
  40b400:	cmp    eax,0xbf3314cb
  40b405:	ja     0x40b473
  40b407:	pop    esi
  40b408:	stc    
  40b409:	mov    ebx,edx
  40b40b:	div    BYTE PTR [ebx-0x5e]
  40b40e:	or     DWORD PTR [eax+0x11],edx
  40b411:	aam    0x4f
  40b413:	not    BYTE PTR [ecx]
  40b415:	icebp  
  40b416:	out    0x47,eax
  40b418:	test   BYTE PTR [ecx+eiz*8],bl
  40b41b:	dec    ebp
  40b41c:	and    al,0x48
  40b41e:	scas   al,BYTE PTR es:[edi]
  40b41f:	xor    BYTE PTR cs:[edx+0x38],dl
  40b423:	in     eax,dx
  40b424:	nop
  40b425:	push   esi
  40b426:	add    al,0x6c
  40b428:	in     al,dx
  40b429:	ins    BYTE PTR es:[edi],dx
  40b42a:	lahf   
  40b42b:	mov    bh,0xf2
  40b42d:	fidiv  DWORD PTR [eax]
  40b42f:	jp     0x40b4ab
  40b431:	or     ebx,DWORD PTR [ebx]
  40b433:	and    edi,DWORD PTR [ebx+ebx*8-0x61]
  40b437:	es jmp 0x668:0xbd359b5a
  40b43f:	add    eax,0x60754f41
  40b444:	or     ah,BYTE PTR [ebx+0x3874ceee]
  40b44a:	popa   
  40b44b:	daa    
  40b44c:	cmp    al,bh
  40b44e:	sub    DWORD PTR [eax],edi
  40b450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b451:	adc    eax,0x49cfc1f2
  40b456:	popf   
  40b457:	inc    ecx
  40b458:	sub    ch,BYTE PTR [ebx]
  40b45a:	fucom  st(2)
  40b45c:	mov    ebp,DWORD PTR [ebx-0x5e]
  40b45f:	sar    DWORD PTR [ebx+0x6aa597cf],0xdc
  40b466:	lods   eax,DWORD PTR ds:[esi]
  40b467:	and    DWORD PTR [esi+ebx*8],ebp
  40b46a:	and    eax,0x8b637e5
  40b46f:	stc    
  40b470:	leave  
  40b471:	fist   DWORD PTR [esp+ebp*4+0x26]
  40b475:	jge    0x40b43d
  40b477:	or     DWORD PTR [edx+0x4f],esp
  40b47a:	pop    eax
  40b47b:	daa    
  40b47c:	mov    ch,0x48
  40b47e:	push   eax
  40b47f:	clc    
  40b480:	push   ecx
  40b481:	dec    esi
  40b482:	and    BYTE PTR [ecx-0x6412b6cf],bl
  40b488:	or     bx,WORD PTR [edi-0x61922ee8]
  40b48f:	xor    BYTE PTR [esi-0x508df8e3],al
  40b495:	dec    ecx
  40b496:	loop   0x40b46e
  40b498:	sahf   
  40b499:	sub    al,al
  40b49b:	gs jns 0x40b50f
  40b49e:	sub    al,BYTE PTR [edx]
  40b4a0:	add    al,0xb
  40b4a2:	shr    DWORD PTR [edx+eax*4-0x2b],0xe5
  40b4a7:	push   0x18
  40b4a9:	pop    ecx
  40b4aa:	push   0xe5cedfb7
  40b4af:	daa    
  40b4b0:	xor    eax,0x517cb553
  40b4b5:	add    al,0x7f
  40b4b7:	or     ah,BYTE PTR [ebx]
  40b4b9:	aam    0xa1
  40b4bb:	aaa    
  40b4bc:	pop    ecx
  40b4bd:	fwait
  40b4be:	push   edx
  40b4bf:	lahf   
  40b4c0:	retf   
  40b4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c2:	(bad)  
  40b4c3:	adc    al,0x3f
  40b4c5:	inc    edx
  40b4c6:	pop    edi
  40b4c7:	(bad)  
  40b4c8:	pusha  
  40b4c9:	push   cs
  40b4ca:	add    ah,cl
  40b4cc:	retf   
  40b4cd:	add    al,0xa2
  40b4cf:	ins    BYTE PTR es:[edi],dx
  40b4d0:	outs   dx,BYTE PTR ds:[esi]
  40b4d1:	mov    dl,0x52
  40b4d3:	fnstenv [ecx-0x2b]
  40b4d6:	jae    0x40b4ff
  40b4d8:	pop    es
  40b4d9:	mov    ah,0xc5
  40b4db:	loop   0x40b4be
  40b4dd:	iret   
  40b4de:	inc    edx
  40b4df:	(bad)  
  40b4e0:	cmc    
  40b4e1:	retf   
  40b4e2:	jecxz  0x40b517
  40b4e4:	(bad)  
  40b4e5:	push   cs
  40b4e6:	push   ebp
  40b4e7:	cdq    
  40b4e8:	or     DWORD PTR [ebx+ebx*4-0x17],ebx
  40b4ec:	sub    BYTE PTR [edx],bl
  40b4ee:	add    al,0x15
  40b4f0:	push   esp
  40b4f1:	mov    ss,WORD PTR [eax+edi*4+0x5a]
  40b4f5:	js     0x40b4fc
  40b4f7:	mov    eax,0x48a18e02
  40b4fc:	mov    dl,al
  40b4fe:	inc    DWORD PTR [ebp-0x18]
  40b501:	push   es
  40b502:	jo     0x40b4a2
  40b504:	not    BYTE PTR [esi+0x73]
  40b507:	js     0x40b4c9
  40b509:	les    eax,FWORD PTR [edi+0x6a66e916]
  40b50f:	fsub   st(2),st
  40b511:	out    0x22,al
  40b513:	push   cs
  40b514:	frstor [esi]
  40b516:	jo     0x40b4b5
  40b518:	aad    0xfe
  40b51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b51b:	lods   al,BYTE PTR ds:[esi]
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	imul   ecx,ebx,0xffffff98
  40b520:	outs   dx,DWORD PTR ds:[esi]
  40b521:	rcl    edi,cl
  40b523:	cmp    DWORD PTR [ebx],ebx
  40b525:	cs das 
  40b527:	xchg   ecx,eax
  40b528:	gs scas al,BYTE PTR es:[edi]
  40b52a:	or     eax,0xed3db09e
  40b52f:	jbe    0x40b529
  40b531:	jmp    edi
  40b533:	or     BYTE PTR [eax-0x3],al
  40b536:	hlt    
  40b537:	mov    ds:0x4da2c16c,al
  40b53c:	addr16 je 0x40b5a3
  40b53f:	inc    ebx
  40b540:	dec    ebp
  40b541:	retf   
  40b542:	xor    al,ah
  40b544:	dec    edx
  40b545:	das    
  40b546:	mov    ecx,0xce14230b
  40b54b:	loope  0x40b569
  40b54d:	out    0xe7,eax
  40b54f:	sub    DWORD PTR [edx-0x46],esp
  40b552:	int3   
  40b553:	lock cld 
  40b555:	in     eax,0xd8
  40b557:	push   eax
  40b558:	inc    edi
  40b559:	hlt    
  40b55a:	ins    BYTE PTR es:[edi],dx
  40b55b:	call   0xbf9cd58
  40b560:	jmp    0xd1e4:0xa5ea7f0d
  40b567:	xor    eax,0xbf244786
  40b56c:	adc    al,0xa8
  40b56e:	xchg   esi,eax
  40b56f:	inc    edx
  40b570:	aaa    
  40b571:	lahf   
  40b572:	rol    BYTE PTR [esi],cl
  40b574:	bound  esi,QWORD PTR [esi+ecx*4-0x1a2fac5a]
  40b57b:	frstor [edx]
  40b57d:	dec    edx
  40b57e:	push   ss
  40b57f:	data16 arpl sp,ax
  40b582:	add    DWORD PTR [ecx+0x46],edx
  40b585:	push   edx
  40b586:	enter  0xaba7,0x2d
  40b58a:	jnp    0x40b514
  40b58c:	sbb    bh,al
  40b58e:	and    eax,DWORD PTR [edi]
  40b590:	jb     0x40b5a3
  40b592:	scas   al,BYTE PTR es:[edi]
  40b593:	fld    DWORD PTR [ebp-0x80]
  40b596:	fs xchg esp,eax
  40b598:	pop    es
  40b599:	out    dx,eax
  40b59a:	jb     0x40b596
  40b59c:	imul   esp,DWORD PTR [eax+eax*4+0x2600fe85],0xffffff98
  40b5a4:	les    esi,FWORD PTR [ebp+0x5a2e3413]
  40b5aa:	aaa    
  40b5ab:	pushf  
  40b5ac:	or     BYTE PTR [edx-0x952e6c9],dh
  40b5b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b3:	sbb    al,0x95
  40b5b5:	mov    ah,0xfb
  40b5b7:	push   edx
  40b5b8:	add    edi,eax
  40b5ba:	clc    
  40b5bb:	cmc    
  40b5bc:	aas    
  40b5bd:	jb     0x40b605
  40b5bf:	add    esp,edi
  40b5c1:	fmulp  st(4),st
  40b5c3:	jle    0x40b5cf
  40b5c5:	ins    DWORD PTR es:[edi],dx
  40b5c6:	lods   al,BYTE PTR ds:[esi]
  40b5c7:	aaa    
  40b5c8:	jae    0x40b562
  40b5ca:	imul   dl
  40b5cc:	mov    dh,0xa9
  40b5ce:	lea    ecx,[ecx+0x5]
  40b5d1:	jp     0x40b584
  40b5d3:	lea    esi,[esi-0x55]
  40b5d6:	cli    
  40b5d7:	or     al,BYTE PTR [ebx+0x7b]
  40b5da:	cs nop
  40b5dc:	pop    edi
  40b5dd:	mov    esi,0x9d1b2e1
  40b5e2:	pusha  
  40b5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e4:	mov    eax,0xccc8cb59
  40b5e9:	repz cmc 
  40b5eb:	retf   
  40b5ec:	push   ecx
  40b5ed:	out    dx,al
  40b5ee:	lods   al,BYTE PTR ds:[esi]
  40b5ef:	sub    bh,BYTE PTR [ebx-0x5]
  40b5f2:	push   edi
  40b5f3:	sahf   
  40b5f4:	int    0xcb
  40b5f6:	ret    
  40b5f7:	jno    0x40b59b
  40b5f9:	leave  
  40b5fa:	sar    DWORD PTR [ecx],cl
  40b5fc:	lahf   
  40b5fd:	adc    cl,BYTE PTR [eax+0xa976576]
  40b603:	jbe    0x40b61a
  40b605:	mov    al,0x69
  40b607:	(bad)  
  40b608:	cld    
  40b609:	test   DWORD PTR [ecx],0x8ca3abf
  40b60f:	dec    edx
  40b610:	mov    edx,0x9b6b2e24
  40b615:	jbe    0x40b621
  40b617:	(bad)  
  40b619:	add    eax,0x20db30cc
  40b61e:	mov    dh,bl
  40b620:	adc    al,0xaa
  40b622:	xchg   esi,eax
  40b623:	and    edi,DWORD PTR ds:0x1c6e59e0
  40b629:	repnz ror DWORD PTR [edx+0x23ff2ab3],cl
  40b630:	iret   
  40b631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b633:	ins    BYTE PTR es:[edi],dx
  40b634:	xchg   DWORD PTR [ebp+0x58],ebx
  40b637:	sar    BYTE PTR [esi-0x7a63caaa],0xc4
  40b63e:	mov    cl,0xc9
  40b640:	and    eax,0xea4c3652
  40b645:	pop    esp
  40b646:	sbb    DWORD PTR [edx*1-0x2ad70bd1],esi
  40b64d:	pop    ds
  40b64e:	pop    eax
  40b64f:	add    al,BYTE PTR [edx]
  40b651:	inc    eax
  40b652:	shl    BYTE PTR [ecx-0x62b3c3b1],cl
  40b658:	sar    ch,cl
  40b65a:	bound  ebp,QWORD PTR [bx+si-0x3443]
  40b65f:	mov    ecx,DWORD PTR [ebp+ebp*1+0x39]
  40b663:	mov    ds:0x30935b94,al
  40b668:	mov    eax,ds:0xb77949b
  40b66d:	mov    ch,0xd7
  40b66f:	aas    
  40b670:	jo     0x40b618
  40b672:	mov    eax,0xc322f5b
  40b678:	(bad)  
  40b679:	push   ebx
  40b67a:	lods   al,BYTE PTR ds:[esi]
  40b67b:	pop    ds
  40b67c:	repnz xchg esp,eax
  40b67e:	adc    WORD PTR ds:0x26418cce,dx
  40b685:	mov    al,0xd3
  40b687:	pop    ds
  40b688:	inc    ebp
  40b689:	adc    ah,BYTE PTR [ecx+0x50084dcb]
  40b68f:	(bad)  
  40b690:	jl     0x40b633
  40b692:	sbb    edx,esi
  40b694:	dec    esi
  40b695:	cld    
  40b696:	and    DWORD PTR [eax],edx
  40b698:	aam    0x8
  40b69a:	mov    eax,ebp
  40b69c:	loop   0x40b6ea
  40b69e:	push   ss
  40b69f:	(bad)  
  40b6a1:	pop    ds
  40b6a2:	call   0x5e83:0x7fbe0677
  40b6a9:	mov    ah,0x9b
  40b6ab:	aas    
  40b6ac:	add    DWORD PTR [ebp-0x28],ecx
  40b6af:	sar    DWORD PTR [eax-0x10],1
  40b6b2:	push   es
  40b6b3:	push   edi
  40b6b4:	loop   0x40b68e
  40b6b6:	mov    al,ds:0xda9a3cca
  40b6bb:	mov    ds:0x9f8906ec,al
  40b6c0:	xor    esp,ebp
  40b6c2:	push   DWORD PTR [ebx+0x4e03bf21]
  40b6c8:	mov    esp,0x4295a13b
  40b6cd:	mov    esp,0xf95c4113
  40b6d2:	pop    ebx
  40b6d3:	pushf  
  40b6d4:	shr    DWORD PTR [ebx+ecx*2-0x7],0xd2
  40b6d9:	aas    
  40b6da:	dec    edi
  40b6db:	sub    ebx,DWORD PTR [edi+0x1f]
  40b6de:	pop    edx
  40b6df:	call   0xa5a8:0x632eeea9
  40b6e6:	xchg   esi,eax
  40b6e7:	call   0x8a13:0x60da3ed2
  40b6ee:	fwait
  40b6ef:	in     eax,0x37
  40b6f1:	data16 fimul WORD PTR [edi+0x74ea8c02]
  40b6f8:	inc    edx
  40b6fa:	inc    esi
  40b6fb:	and    DWORD PTR [edx],ebp
  40b6fd:	loop   0x40b76e
  40b6ff:	sub    BYTE PTR [eax],dh
  40b701:	fst    DWORD PTR [ecx+eax*8]
  40b704:	scas   eax,DWORD PTR es:[edi]
  40b705:	(bad)  
  40b706:	icebp  
  40b707:	cld    
  40b708:	pop    eax
  40b709:	fld    QWORD PTR [edi-0x21918b20]
  40b70f:	push   ds
  40b710:	daa    
  40b711:	push   ds
  40b712:	cmp    BYTE PTR es:[ecx],dh
  40b715:	mov    bh,0x9
  40b717:	add    ah,BYTE PTR [ebp+esi*8+0x16]
  40b71b:	jns    0x40b756
  40b71d:	or     BYTE PTR [ebp+0x486fae6f],dl
  40b723:	loope  0x40b720
  40b725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b726:	adc    eax,0x1f1ff15c
  40b72b:	fidiv  WORD PTR [edx+eiz*1]
  40b72e:	push   ss
  40b72f:	into   
  40b730:	in     eax,0x36
  40b732:	fcomp  QWORD PTR [eax+eax*1+0xc]
  40b736:	jns    0x40b6df
  40b738:	imul   esi,DWORD PTR [eax-0x9],0x825fdc6d
  40b73f:	les    ebp,FWORD PTR [edi+0x1d]
  40b742:	ret    0x2ee9
  40b745:	mov    esp,0x6ff462b4
  40b74a:	xor    bl,BYTE PTR [ecx+esi*2+0x0]
  40b74e:	nop
  40b74f:	jns    0x40b6f9
  40b751:	xor    esi,DWORD PTR [edx-0x31b7ea5d]
  40b757:	repnz add BYTE PTR ds:0x30fa21e8,bl
  40b75e:	xchg   ecx,eax
  40b75f:	and    cl,BYTE PTR [ecx-0x2]
  40b762:	mov    ecx,0x999a8dbb
  40b767:	out    dx,eax
  40b768:	(bad)  
  40b769:	ins    DWORD PTR es:[edi],dx
  40b76a:	xor    al,0xb4
  40b76c:	xor    al,0xbc
  40b76e:	dec    edx
  40b76f:	inc    ecx
  40b770:	test   BYTE PTR [edx+esi*1],dh
  40b773:	rcl    DWORD PTR [eax-0x3bd0e9de],1
  40b779:	sbb    eax,0x8a7294e7
  40b77e:	inc    esp
  40b77f:	in     eax,0x54
  40b781:	(bad)
  40b784:	mov    ebp,0x33869abc
  40b789:	jb     0x40b803
  40b78b:	and    al,0x3c
  40b78d:	xor    BYTE PTR [eax-0xb],dl
  40b790:	and    al,0x91
  40b792:	mov    BYTE PTR [ecx+0x196e7f2],0x31
  40b799:	mov    esi,fs
  40b79b:	mov    ebp,0xcc1dcb3e
  40b7a0:	jp     0x40b78f
  40b7a2:	icebp  
  40b7a3:	es call 0x48b44f95
  40b7a9:	xchg   edx,eax
  40b7aa:	enter  0xe6bc,0x4a
  40b7ae:	mov    bh,0x75
  40b7b0:	out    dx,al
  40b7b1:	sbb    BYTE PTR [ebp+esi*8+0x3],dl
  40b7b5:	mov    edx,0x90adecac
  40b7ba:	or     DWORD PTR [edi+eax*4],ebp
  40b7bd:	(bad)
  40b7c0:	and    BYTE PTR [esi],bh
  40b7c2:	jae    0x40b7f6
  40b7c4:	daa    
  40b7c5:	les    ebp,FWORD PTR [edx]
  40b7c7:	push   ecx
  40b7c8:	xor    BYTE PTR [esi+0x5c],bh
  40b7cb:	mov    ds:0x23676f22,al
  40b7d0:	shl    ecx,1
  40b7d2:	stos   DWORD PTR es:[edi],eax
  40b7d3:	stc    
  40b7d4:	xor    ah,bl
  40b7d6:	retf   
  40b7d7:	inc    ebp
  40b7d8:	sub    BYTE PTR [edi+ebp*4-0x71175fd7],ch
  40b7df:	lock into 
  40b7e1:	inc    ebx
  40b7e2:	sar    edx,0x58
  40b7e5:	mov    al,ds:0x39480257
  40b7ea:	mov    ds:0x1148d4ca,eax
  40b7ef:	enter  0x260c,0xb8
  40b7f3:	(bad)
  40b7f6:	dec    eax
  40b7f7:	in     al,0x31
  40b7f9:	sbb    ebp,DWORD PTR [ecx+0x3fcda243]
  40b7ff:	dec    ebp
  40b800:	jne    0x40b83f
  40b802:	out    0x64,al
  40b804:	call   0x6cb8:0xc979bb4f
  40b80b:	inc    ecx
  40b80c:	test   DWORD PTR [ebx-0x2101b83e],eax
  40b812:	dec    esp
  40b813:	out    0x11,al
  40b815:	mov    eax,ds:0xbea0f4a1
  40b81a:	in     al,dx
  40b81b:	pop    edx
  40b81c:	(bad)  
  40b81e:	add    BYTE PTR [ebp+0x558deadd],bl
  40b824:	xchg   dl,ah
  40b826:	cmp    DWORD PTR [ebp+esi*4+0x3e],edi
  40b82a:	push   edx
  40b82b:	or     eax,0xea7c9157
  40b830:	add    ah,BYTE PTR ds:0xc0400c28
  40b836:	ins    BYTE PTR es:[edi],dx
  40b837:	xchg   ebp,eax
  40b838:	pop    ss
  40b839:	mov    ebp,0x69e2f439
  40b83e:	popa   
  40b83f:	jmp    0x8060:0xd67b6481
  40b846:	pop    ecx
  40b847:	iret   
  40b848:	sub    DWORD PTR [edi],edx
  40b84a:	or     cl,BYTE PTR [eax-0x5e1ad9a3]
  40b850:	nop    DWORD PTR [edx+0x450742c8]
  40b857:	daa    
  40b858:	sbb    BYTE PTR [eax+0x3dae00a8],cl
  40b85e:	lahf   
  40b85f:	xchg   edx,eax
  40b860:	lahf   
  40b861:	inc    edi
  40b862:	inc    esi
  40b863:	ror    dl,cl
  40b865:	add    DWORD PTR [edx-0x5b652e48],ebx
  40b86b:	test   DWORD PTR [esi],ebp
  40b86d:	and    esi,ebx
  40b86f:	into   
  40b870:	dec    esp
  40b871:	call   0x7b2de74a
  40b876:	inc    esp
  40b877:	popf   
  40b878:	cmp    eax,DWORD PTR [ecx+0x11]
  40b87b:	pop    eax
  40b87c:	fwait
  40b87d:	sub    eax,0x5385ebe6
  40b882:	cmp    eax,0xaadffc8b
  40b887:	dec    ecx
  40b888:	scas   al,BYTE PTR es:[edi]
  40b889:	and    eax,0xaf9033ec
  40b88e:	repz or BYTE PTR [ebx],0x48
  40b892:	inc    ebx
  40b893:	into   
  40b894:	imul   edx,eax,0xfffffffb
  40b897:	pop    edx
  40b898:	js     0x40b917
  40b89a:	mov    BYTE PTR [edx],cl
  40b89c:	pop    ss
  40b89d:	ret    
  40b89e:	dec    esp
  40b89f:	call   0xca36:0x7309b1d4
  40b8a6:	fdiv   DWORD PTR [ebx]
  40b8a8:	mov    BYTE PTR [ebp-0x1b],ch
  40b8ab:	xchg   ecx,eax
  40b8ac:	sti    
  40b8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ae:	adc    BYTE PTR [eax+eiz*1],bl
  40b8b1:	outs   dx,BYTE PTR ds:[esi]
  40b8b2:	or     al,0xf4
  40b8b4:	mov    bl,0xe9
  40b8b6:	sub    BYTE PTR [edx],dl
  40b8b8:	push   cs
  40b8b9:	out    dx,al
  40b8ba:	mov    DWORD PTR [edx-0x2b],esi
  40b8bd:	pop    edi
  40b8be:	mov    ebp,DWORD PTR [ebp+edi*8+0xe1dd62d]
  40b8c5:	in     eax,0x65
  40b8c7:	jmp    0x88e02523
  40b8cc:	mov    eax,ds:0x1f7a945
  40b8d1:	mov    gs,WORD PTR [edi-0x4553bbae]
  40b8d7:	and    BYTE PTR [esi+eiz*2+0x2fa09c26],bl
  40b8de:	lods   al,BYTE PTR ds:[esi]
  40b8df:	jecxz  0x40b8b6
  40b8e1:	loop   0x40b8c2
  40b8e3:	pop    es
  40b8e4:	dec    eax
  40b8e5:	xor    ch,BYTE PTR [edi+0x17b6896]
  40b8eb:	pop    es
  40b8ec:	sub    eax,0xd16c7a8c
  40b8f1:	loopne 0x40b962
  40b8f3:	int3   
  40b8f4:	call   0x87d146af
  40b8f9:	out    dx,eax
  40b8fa:	mov    ecx,0x711e8670
  40b8ff:	bound  ecx,QWORD PTR [esi-0x22]
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	push   ebp
  40b904:	pop    ss
  40b905:	and    DWORD PTR [ebx],ebp
  40b907:	xor    al,cl
  40b909:	into   
  40b90a:	rol    DWORD PTR [ebx-0x35],cl
  40b90d:	scas   al,BYTE PTR es:[edi]
  40b90e:	mov    ecx,0xae0630f8
  40b913:	cmp    BYTE PTR [ebx+0x33451df7],bh
  40b919:	lds    esp,FWORD PTR [edi-0x5c3c4b0e]
  40b91f:	test   BYTE PTR [ebx+0x6b6458ea],bh
  40b925:	test   bl,0xc7
  40b928:	jmp    0x40b964
  40b92a:	popf   
  40b92b:	or     eax,0x74d964dd
  40b930:	pop    edi
  40b931:	sbb    esi,DWORD PTR [ebx-0x25]
  40b934:	push   ebx
  40b935:	setno  BYTE PTR [ecx+edx*1+0x3aceedbf]
  40b93d:	pop    esp
  40b93e:	push   eax
  40b93f:	mul    bh
  40b941:	jne    0x40b9bc
  40b943:	fidiv  DWORD PTR [eax-0x7b443990]
  40b949:	int    0xe2
  40b94b:	xchg   BYTE PTR ds:0x3d923849,al
  40b951:	into   
  40b952:	mov    eax,DWORD PTR [edx-0x22]
  40b955:	xchg   edx,eax
  40b956:	outs   dx,BYTE PTR ds:[esi]
  40b957:	out    dx,al
  40b958:	push   ebp
  40b959:	lds    esi,FWORD PTR [esi-0x3b]
  40b95c:	aam    0xab
  40b95e:	xor    bh,cl
  40b960:	fstp   TBYTE PTR [edi-0x60f1a4b0]
  40b966:	(bad)  
  40b967:	jmp    0x40b9a0
  40b969:	mov    ebp,0xd8d5ede0
  40b96e:	sbb    al,0x3f
  40b970:	jns    0x40b94a
  40b972:	mov    edx,0x8c0b7c7
  40b977:	retf   0xb39
  40b97a:	in     al,dx
  40b97b:	push   ss
  40b97c:	loope  0x40b9f5
  40b97e:	rcr    BYTE PTR [esi-0x50],0xe3
  40b982:	ds in  eax,0x7e
  40b985:	sub    ebp,0x37383d32
  40b98b:	mov    edi,0xe841f709
  40b990:	nop
  40b991:	addr16 cld 
  40b993:	mov    ds:0x3043fc16,al
  40b998:	popf   
  40b999:	jbe    0x40b93b
  40b99b:	cs ins BYTE PTR es:[edi],dx
  40b99d:	(bad)  
  40b99f:	and    DWORD PTR [ecx],0x67867b5e
  40b9a5:	pop    edx
  40b9a6:	cmp    eax,DWORD PTR [ebp-0x61c48d33]
  40b9ac:	sbb    DWORD PTR [eax],ecx
  40b9ae:	adc    ah,ah
  40b9b0:	fcmovnbe st,st(7)
  40b9b2:	jp     0x40ba2b
  40b9b4:	aad    0xac
  40b9b6:	cmp    BYTE PTR [edx-0x30],0x72
  40b9ba:	(bad)  
  40b9bb:	jnp    0x40ba28
  40b9bd:	jne    0x40b9f0
  40b9bf:	test   ah,bl
  40b9c1:	dec    eax
  40b9c2:	xchg   edi,eax
  40b9c3:	int    0xbe
  40b9c5:	loopne 0x40b9e2
  40b9c7:	in     al,dx
  40b9c8:	push   eax
  40b9c9:	mov    esi,DWORD PTR [edx-0x4c002f7c]
  40b9cf:	xlat   BYTE PTR ds:[ebx]
  40b9d0:	aaa    
  40b9d1:	(bad)  
  40b9d2:	and    eax,0xfbc21fa5
  40b9d7:	sub    DWORD PTR [edx+0x2e],edi
  40b9da:	sub    al,0x5
  40b9dc:	loope  0x40ba44
  40b9de:	scas   al,BYTE PTR es:[edi]
  40b9df:	fdivr  DWORD PTR [edx+0x5d]
  40b9e2:	sahf   
  40b9e3:	add    bl,bl
  40b9e5:	cld    
  40b9e6:	stc    
  40b9e7:	add    al,0xd1
  40b9e9:	pop    edx
  40b9ea:	popf   
  40b9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ec:	pop    ebx
  40b9ed:	jecxz  0x40b9fb
  40b9ef:	rcr    DWORD PTR [edi-0x63],cl
  40b9f2:	and    ah,al
  40b9f4:	out    dx,al
  40b9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f6:	sub    al,0x8
  40b9f8:	clc    
  40b9f9:	xlat   BYTE PTR ds:[ebx]
  40b9fa:	and    eax,0xb2cdacf1
  40b9ff:	(bad)  
  40ba01:	ins    DWORD PTR es:[edi],dx
  40ba02:	pop    ebp
  40ba03:	pop    ss
  40ba04:	int    0x18
  40ba06:	dec    ebp
  40ba07:	cmp    al,0x11
  40ba09:	dec    ebx
  40ba0a:	out    0xab,al
  40ba0c:	cmp    BYTE PTR cs:[esi],ch
  40ba0f:	jnp    0x40b9b2
  40ba11:	push   ebp
  40ba12:	push   es
  40ba13:	add    al,0x6a
  40ba15:	sbb    DWORD PTR [ecx],ecx
  40ba17:	rcl    ecx,0xb4
  40ba1a:	push   esi
  40ba1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1c:	and    ecx,ebp
  40ba1e:	cwde   
  40ba1f:	mov    esp,0xf8352574
  40ba24:	(bad)  
  40ba25:	and    ah,BYTE PTR [ebx+0x61]
  40ba28:	aad    0xc4
  40ba2a:	dec    ebx
  40ba2b:	push   ecx
  40ba2c:	ss push ecx
  40ba2e:	out    0x7e,eax
  40ba30:	and    esp,ecx
  40ba32:	not    DWORD PTR [ebp+0x72]
  40ba35:	mov    edx,0x3a182a
  40ba3a:	or     bh,BYTE PTR [ebx-0x7d]
  40ba3d:	outs   dx,DWORD PTR ds:[esi]
  40ba3e:	call   0xf25fe415
  40ba43:	repz es inc ebx
  40ba46:	test   eax,0x4214ffd4
  40ba4b:	scas   al,BYTE PTR es:[edi]
  40ba4c:	mov    bh,0x63
  40ba4e:	mov    ebx,0xe9096863
  40ba53:	mov    dl,dh
  40ba55:	mov    WORD PTR [ebx-0x78e8702e],cs
  40ba5b:	dec    edi
  40ba5c:	iret   
  40ba5d:	mov    gs,ebx
  40ba5f:	loopne 0x40ba4e
  40ba61:	lahf   
  40ba62:	mov    bh,0x29
  40ba64:	or     al,0x6
  40ba66:	mov    esp,0x79112551
  40ba6b:	inc    edx
  40ba6c:	fild   DWORD PTR [eax]
  40ba6e:	pop    ebx
  40ba6f:	xor    ecx,DWORD PTR [esi+0x52]
  40ba72:	mov    bh,0xde
  40ba74:	mov    eax,ds:0x38ddb75e
  40ba79:	and    cl,dl
  40ba7b:	(bad)  
  40ba7c:	jmp    0x85269714
  40ba81:	pop    edi
  40ba82:	and    DWORD PTR [eax+0x35],ecx
  40ba85:	add    DWORD PTR [esi+ebp*2-0x72],ebp
  40ba89:	add    ah,BYTE PTR [ecx+0x77]
  40ba8c:	test   al,0xed
  40ba8e:	loopne 0x40bab2
  40ba90:	or     eax,0x1466e11e
  40ba95:	jmp    0x40bad2
  40ba97:	pop    es
  40ba98:	popa   
  40ba99:	or     eax,0xa2460b4
  40ba9e:	mov    eax,0xd3c811b9
  40baa3:	call   DWORD PTR [ebx]
  40baa5:	lods   al,BYTE PTR ds:[esi]
  40baa6:	retf   
  40baa7:	dec    eax
  40baa8:	popf   
  40baa9:	in     eax,0x14
  40baab:	dec    edi
  40baac:	pop    eax
  40baad:	and    eax,0x110e20b7
  40bab2:	jae    0x40babb
  40bab4:	lea    edx,[eax]
  40bab6:	hlt    
  40bab7:	sbb    BYTE PTR [ecx+0x70],0x37
  40babb:	sar    BYTE PTR [eax],cl
  40babd:	xchg   esp,eax
  40babe:	je     0x40bb16
  40bac0:	int3   
  40bac1:	mov    edx,0x28b961ef
  40bac6:	or     BYTE PTR [ecx],bl
  40bac8:	aam    0x10
  40baca:	jae    0x40bb2a
  40bacc:	mov    bl,0x0
  40bace:	dec    esi
  40bacf:	dec    ebx
  40bad0:	aaa    
  40bad1:	lea    esi,[edx]
  40bad3:	retf   0xf105
  40bad6:	cmp    DWORD PTR [ecx+0x5a],0x5627e4cb
  40badd:	mov    dl,0x99
  40badf:	jg     0x40baf0
  40bae1:	cmc    
  40bae2:	jb     0x40badc
  40bae4:	sub    al,0x29
  40bae6:	jne    0x40ba6a
  40bae8:	scas   al,BYTE PTR es:[edi]
  40bae9:	(bad)  
  40baea:	iret   
  40baeb:	ror    DWORD PTR [esp+eiz*4],0x7c
  40baef:	scas   eax,DWORD PTR es:[edi]
  40baf0:	push   ss
  40baf1:	ja     0x40bb64
  40baf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baf4:	call   0x92ee9bdd
  40baf9:	fcom   st(6)
  40bafb:	mov    ebx,DWORD PTR [ebp+0x2fea6548]
  40bb01:	test   DWORD PTR ds:0x908558bd,edi
  40bb07:	out    0x57,eax
  40bb09:	xor    eax,0xe8415c3e
  40bb0e:	pop    ss
  40bb0f:	xchg   ebx,eax
  40bb10:	adc    eax,0x656434a6
  40bb15:	leave  
  40bb16:	fadd   DWORD PTR [ebx+0x47]
  40bb19:	adc    edx,DWORD PTR [ebp+0x32]
  40bb1c:	mov    eax,0x91b834c3
  40bb21:	in     al,dx
  40bb22:	jb     0x40bb23
  40bb24:	addr16 inc ebx
  40bb26:	pushf  
  40bb27:	push   esi
  40bb28:	sar    DWORD PTR [edx-0x5b4c13d4],1
  40bb2e:	jmp    0x710d59ea
  40bb33:	inc    ebx
  40bb34:	and    edi,DWORD PTR [ebx-0x5f]
  40bb37:	in     eax,0x55
  40bb39:	(bad)  
  40bb3a:	push   edx
  40bb3b:	pop    es
  40bb3c:	mov    BYTE PTR [ecx+0x29015e2e],al
  40bb42:	push   edi
  40bb43:	dec    BYTE PTR [edi-0x52]
  40bb46:	cld    
  40bb47:	iret   
  40bb48:	push   edi
  40bb49:	repnz sub ebp,DWORD PTR [esi+0x560ad63c]
  40bb50:	call   0x474fb3d
  40bb55:	dec    ebp
  40bb56:	imul   edx,DWORD PTR [ecx-0x49],0xdc74fefb
  40bb5d:	and    al,0x8c
  40bb5f:	out    dx,eax
  40bb60:	jg     0x40bbcf
  40bb62:	xchg   BYTE PTR [esi-0x34],bl
  40bb65:	jmp    0x9291:0x6a0bf0b4
  40bb6c:	xchg   ebp,eax
  40bb6d:	xor    eax,0x642336f9
  40bb72:	enter  0x9fec,0xa
  40bb76:	es js  0x40bb08
  40bb79:	fs out dx,al
  40bb7b:	outs   dx,DWORD PTR ds:[esi]
  40bb7c:	rcr    BYTE PTR [ebp+0x10],1
  40bb7f:	arpl   WORD PTR [ebp-0x15281403],sp
  40bb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb86:	add    BYTE PTR [ebp-0x51],al
  40bb89:	jp     0x40bb38
  40bb8b:	inc    ebp
  40bb8c:	into   
  40bb8d:	jns    0x40bb45
  40bb8f:	push   0x27
  40bb91:	jno    0x40bba6
  40bb93:	ret    0x5c9d
  40bb96:	mov    dh,0x3d
  40bb98:	dec    ebp
  40bb99:	retf   
  40bb9a:	mov    al,0x4d
  40bb9c:	popa   
  40bb9d:	std    
  40bb9e:	in     al,0x38
  40bba0:	das    
  40bba1:	sub    dl,BYTE PTR [eax]
  40bba3:	pop    ds
  40bba4:	int3   
  40bba5:	xor    BYTE PTR [esi+eiz*2],ah
  40bba8:	inc    edx
  40bba9:	mov    cl,0x9b
  40bbab:	scas   eax,DWORD PTR es:[edi]
  40bbac:	jns    0x40bbb9
  40bbae:	lahf   
  40bbaf:	(bad)  
  40bbb0:	dec    esp
  40bbb1:	mov    ds:0x66a6b2fb,eax
  40bbb6:	es pop edx
  40bbb8:	push   esi
  40bbb9:	cmp    al,bh
  40bbbb:	scas   al,BYTE PTR es:[edi]
  40bbbc:	sbb    DWORD PTR [esi+esi*8-0x4f0a4a5],edi
  40bbc3:	sti    
  40bbc4:	arpl   WORD PTR [ebx],sp
  40bbc6:	dec    esp
  40bbc7:	imul   ebp,DWORD PTR [ebp+0x4f],0xffffff91
  40bbcb:	mov    ecx,0xf9fbb819
  40bbd0:	out    0x59,eax
  40bbd2:	ins    BYTE PTR es:[edi],dx
  40bbd3:	imul   ebp,DWORD PTR [edi-0x1d],0xffffffb3
  40bbd7:	jbe    0x40bbc5
  40bbd9:	push   esp
  40bbda:	mov    edx,ecx
  40bbdc:	ds pushf 
  40bbde:	sbb    BYTE PTR [edx+0x2b],dl
  40bbe1:	test   DWORD PTR [ebp-0x1d0fa8f9],edx
  40bbe7:	mov    BYTE PTR [eax+0x9],dh
  40bbea:	jbe    0x40bbbb
  40bbec:	sub    eax,0x4477cef2
  40bbf1:	cmp    dl,BYTE PTR [edi+0x2521d919]
  40bbf7:	and    al,0xbc
  40bbf9:	mov    ds:0xd8e231c5,eax
  40bbfe:	pop    edx
  40bbff:	jmp    0x40bba2
  40bc01:	fldpi  
  40bc03:	add    eax,0xc81b5c28
  40bc08:	ss fdivr st(7),st
  40bc0b:	xor    esp,ebx
  40bc0d:	popf   
  40bc0e:	repnz or ecx,DWORD PTR fs:[ecx+0x1477032a]
  40bc16:	iret   
  40bc17:	data16 scas al,BYTE PTR es:[edi]
  40bc19:	mov    eax,ebx
  40bc1b:	in     al,dx
  40bc1c:	sub    eax,0x8b9d86d5
  40bc21:	mov    ecx,0x805ad0d
  40bc26:	popf   
  40bc27:	cli    
  40bc28:	das    
  40bc29:	jno    0x40bbd5
  40bc2b:	mov    bh,0xbe
  40bc2d:	in     al,0x60
  40bc2f:	xor    esp,edx
  40bc31:	pop    edx
  40bc32:	mov    ebx,0xeb8aeeca
  40bc37:	imul   esi,ebx,0x42
  40bc3a:	ficom  DWORD PTR [ebx+0xb]
  40bc3d:	dec    ebp
  40bc3e:	test   esp,ebp
  40bc40:	aas    
  40bc41:	sti    
  40bc42:	les    edi,FWORD PTR [edx]
  40bc44:	test   eax,0x4a69ec3d
  40bc49:	lods   eax,DWORD PTR ds:[esi]
  40bc4a:	retf   
  40bc4b:	jg     0x40bc8f
  40bc4d:	push   DWORD PTR [edx+0x79]
  40bc50:	xlat   BYTE PTR ds:[ebx]
  40bc51:	call   0x8eaf:0xf3822a02
  40bc58:	cdq    
  40bc59:	mov    dh,0x1a
  40bc5b:	scas   al,BYTE PTR es:[edi]
  40bc5c:	push   es
  40bc5d:	nop
  40bc5e:	lahf   
  40bc5f:	dec    ebp
  40bc60:	out    0xdb,al
  40bc62:	inc    edx
  40bc63:	sub    DWORD PTR [ecx-0x7f56a1c3],esi
  40bc69:	shl    DWORD PTR [edx+0x14022169],cl
  40bc6f:	xchg   ebx,eax
  40bc70:	pusha  
  40bc71:	int    0x1
  40bc73:	mov    esp,0x4f5172e8
  40bc78:	(bad)  
  40bc79:	leave  
  40bc7a:	sub    edx,DWORD PTR [edx]
  40bc7c:	dec    esp
  40bc7d:	ret    0x1ee7
  40bc80:	jle    0x40bc50
  40bc82:	xlat   BYTE PTR ds:[ebx]
  40bc83:	jmp    0x40bcef
  40bc85:	dec    edx
  40bc86:	daa    
  40bc87:	inc    ebx
  40bc88:	test   DWORD PTR [ebx],0xe2812375
  40bc8e:	add    DWORD PTR [ebx-0x12],ebx
  40bc91:	ds stc 
  40bc93:	jo     0x40bd00
  40bc95:	jmp    0xe4efb365
  40bc9a:	xchg   esi,eax
  40bc9b:	xchg   esi,eax
  40bc9c:	pop    edi
  40bc9d:	in     al,0x7b
  40bc9f:	test   BYTE PTR [edx-0x45e1e360],bl
  40bca5:	test   al,0xe4
  40bca7:	and    dl,BYTE PTR ds:0x8c30856a
  40bcad:	cmp    BYTE PTR [ecx+eax*8-0x48],dh
  40bcb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb2:	hlt    
  40bcb3:	cs cld 
  40bcb5:	and    DWORD PTR [edx],esp
  40bcb7:	gs push edi
  40bcb9:	xor    eax,edx
  40bcbb:	mov    esp,0xe8dc6661
  40bcc0:	pop    ebp
  40bcc1:	out    0x1b,eax
  40bcc3:	mov    esi,0x15135ab0
  40bcc8:	push   eax
  40bcc9:	jmp    0x40bc6c
  40bccb:	call   0x48259846
  40bcd0:	loope  0x40bc84
  40bcd2:	or     eax,DWORD PTR [edx]
  40bcd4:	rol    BYTE PTR [edi-0x45ca7d1f],0x4f
  40bcdb:	xchg   BYTE PTR [ecx],cl
  40bcdd:	and    eax,DWORD PTR [edi]
  40bcdf:	and    edi,edi
  40bce1:	packuswb mm6,QWORD PTR [edi+0x3a01e0da]
  40bce8:	ins    DWORD PTR es:[edi],dx
  40bce9:	lock pop esp
  40bceb:	pop    ebx
  40bcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bced:	push   eax
  40bcee:	popa   
  40bcef:	push   esp
  40bcf0:	jo     0x40bd13
  40bcf2:	pop    ds
  40bcf3:	ffree  st(1)
  40bcf5:	ficom  DWORD PTR [esi*8-0x5d4cb1cb]
  40bcfc:	mov    edx,0xe89f66ba
  40bd01:	mov    al,0x8e
  40bd03:	xchg   edx,eax
  40bd04:	mov    edi,DWORD PTR [ebp+0x7723ad5d]
  40bd0a:	imul   esp,DWORD PTR [ebx*1-0xe748a2a],0xffffff8c
  40bd12:	test   eax,0x8aa6b45b
  40bd17:	sub    al,al
  40bd19:	aaa    
  40bd1a:	push   cs
  40bd1b:	loope  0x40bd02
  40bd1d:	ficomp DWORD PTR [ecx-0x7e]
  40bd20:	mov    eax,ds:0xcf8f60f8
  40bd25:	imul   esi,eax,0x76
  40bd28:	dec    esp
  40bd29:	add    bl,BYTE PTR [esi-0x41]
  40bd2c:	popa   
  40bd2d:	push   ecx
  40bd2e:	sbb    DWORD PTR [ebx+0x49],esi
  40bd31:	(bad)  
  40bd32:	sbb    ebp,DWORD PTR [esi-0x17]
  40bd35:	mov    ds:0xe2a05df6,al
  40bd3a:	loop   0x40bd33
  40bd3c:	into   
  40bd3d:	dec    edx
  40bd3e:	lock sub ecx,DWORD PTR ds:0xd34ce950
  40bd45:	add    dh,0xd7
  40bd48:	iret   
  40bd49:	push   esi
  40bd4a:	hlt    
  40bd4b:	mov    ds:0x4ced0867,eax
  40bd50:	add    eax,DWORD PTR [ecx-0x26]
  40bd53:	sub    al,BYTE PTR [edx]
  40bd55:	sub    ah,BYTE PTR [ebx]
  40bd57:	mov    ecx,0x236bb12
  40bd5c:	mov    dl,0xcb
  40bd5e:	mov    ecx,0x84ddeff2
  40bd63:	xchg   edi,eax
  40bd64:	outs   dx,DWORD PTR ds:[esi]
  40bd65:	ret    
  40bd66:	cmp    DWORD PTR [ebx+eax*2+0x4e463ee3],ecx
  40bd6d:	push   ebp
  40bd6e:	inc    ebp
  40bd6f:	inc    esp
  40bd70:	daa    
  40bd71:	das    
  40bd72:	sub    eax,0xd939cd19
  40bd77:	adc    eax,0x696b53ab
  40bd7c:	cs and eax,0xc04d3a30
  40bd82:	call   FWORD PTR [ebp-0x2c]
  40bd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd86:	not    DWORD PTR [esi]
  40bd88:	retf   
  40bd89:	imul   edi,DWORD PTR [ebx],0x8657cb67
  40bd8f:	in     eax,dx
  40bd90:	scas   al,BYTE PTR es:[edi]
  40bd91:	dec    edx
  40bd92:	sti    
  40bd93:	mov    ah,0xb8
  40bd95:	in     eax,dx
  40bd96:	inc    ebp
  40bd97:	nop
  40bd98:	pop    ss
  40bd99:	jbe    0x40bd3e
  40bd9b:	or     eax,0xee52fb9e
  40bda0:	aaa    
  40bda1:	mov    ecx,0x2c7db8dd
  40bda6:	jno    0x40bd63
  40bda8:	push   eax
  40bda9:	xor    ch,ch
  40bdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdac:	push   es
  40bdad:	mov    eax,0x2d4cb134
  40bdb2:	jb     0x40bdc4
  40bdb4:	ins    BYTE PTR es:[edi],dx
  40bdb5:	jnp    0x40bd90
  40bdb7:	ins    BYTE PTR es:[edi],dx
  40bdb8:	stos   DWORD PTR es:[edi],eax
  40bdb9:	test   eax,0xe4bb2aa1
  40bdbe:	js     0x40be05
  40bdc0:	fs pop ecx
  40bdc2:	inc    esi
  40bdc3:	retf   0x453b
  40bdc6:	xor    cl,BYTE PTR [edx-0x55]
  40bdc9:	(bad)  
  40bdca:	inc    esi
  40bdcb:	cs xor dh,al
  40bdce:	mov    ds,WORD PTR [eax]
  40bdd0:	(bad)  
  40bdd1:	je     0x40be2b
  40bdd3:	fisub  DWORD PTR [esi-0x3edc5dd4]
  40bdd9:	or     al,0xe
  40bddb:	xor    DWORD PTR [edi-0x34a69a9c],edi
  40bde1:	js     0x40bded
  40bde3:	les    eax,FWORD PTR [eax]
  40bde5:	in     eax,dx
  40bde6:	jns    0x40be5c
  40bde8:	adc    bl,BYTE PTR [ecx+eiz*1+0x47]
  40bdec:	fdivr  st(4),st
  40bdee:	sti    
  40bdef:	pop    ecx
  40bdf0:	mov    ebp,DWORD PTR [edi-0x7f90f39d]
  40bdf6:	adc    dh,bh
  40bdf8:	jb     0x40bdcc
  40bdfa:	add    BYTE PTR [esi+ebp*4],cl
  40bdfd:	lock lods al,BYTE PTR ds:[esi]
  40bdff:	loopne 0x40be10
  40be01:	arpl   WORD PTR [esp+ebp*8],cx
  40be04:	sbb    DWORD PTR [ebp-0x36],0xa7af8fc0
  40be0b:	dec    esi
  40be0c:	or     dh,BYTE PTR [edi-0x6ab37936]
  40be12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be14:	adc    BYTE PTR [edi-0x7aa89f0d],ah
  40be1a:	dec    edx
  40be1b:	lods   al,BYTE PTR ds:[esi]
  40be1c:	call   0xdb31266c
  40be21:	jge    0x40bde7
  40be23:	hlt    
  40be24:	mov    WORD PTR [ebp+0x62],fs
  40be27:	jmp    0x40bdb3
  40be29:	pop    esi
  40be2a:	fcomp  DWORD PTR [esi+0x2a]
  40be2d:	jne    0x40be06
  40be2f:	and    al,bl
  40be31:	pusha  
  40be32:	lahf   
  40be33:	js     0x40bdfe
  40be35:	jmp    0x3a1:0x40c5ed6d
  40be3c:	rol    dl,cl
  40be3e:	dec    esp
  40be3f:	push   esi
  40be40:	sub    eax,0x9d7fef7c
  40be45:	imul   cx,WORD PTR [esi+esi*8+0x7c],0xff83
  40be4b:	push   ebx
  40be4c:	into   
  40be4d:	fs dec ebp
  40be4f:	sbb    eax,ecx
  40be51:	mov    ch,BYTE PTR [ebx]
  40be53:	stos   BYTE PTR es:[edi],al
  40be54:	or     dh,BYTE PTR [ebx-0x40b9cddb]
  40be5a:	cmp    al,0x22
  40be5c:	jb     0x40beb7
  40be5e:	xor    BYTE PTR [ecx],dl
  40be60:	sbb    al,0xdc
  40be62:	dec    ebx
  40be63:	jmp    0xd651:0xcf862673
  40be6a:	mov    al,0xd5
  40be6c:	repz call 0x26dbe77
  40be72:	fcomp  DWORD PTR [ecx+0x68a8a025]
  40be78:	mov    bh,ch
  40be7a:	add    DWORD PTR [eax+0x7d8143e4],0xdb8faba4
  40be84:	fidiv  WORD PTR [edi-0x2c]
  40be87:	pusha  
  40be88:	sub    BYTE PTR [ecx+0x69a4a085],ch
  40be8e:	arpl   WORD PTR [edx+0x196f6abc],cx
  40be94:	xchg   esi,eax
  40be95:	cmp    DWORD PTR [ebx-0x2d],0x1fbb09da
  40be9c:	mov    dl,0x31
  40be9e:	inc    ebx
  40be9f:	cmp    BYTE PTR [esi],ch
  40bea1:	xchg   ebx,eax
  40bea2:	inc    eax
  40bea3:	and    ecx,esi
  40bea5:	xchg   ecx,eax
  40bea6:	mov    ecx,0xf1db98e9
  40beab:	call   0x502aed73
  40beb0:	cmp    DWORD PTR [eax],esi
  40beb2:	cli    
  40beb3:	ja     0x40be6d
  40beb5:	mov    ds:0x394a914,al
  40beba:	mov    ah,0xc1
  40bebc:	data16 (bad) 
  40bebe:	ins    BYTE PTR es:[edi],dx
  40bebf:	in     eax,0x89
  40bec1:	ftst   
  40bec3:	jmp    0xf88a:0xa031846e
  40beca:	call   0x2b5da49f
  40becf:	fnstcw WORD PTR [ebx]
  40bed1:	add    ch,bl
  40bed3:	xchg   edx,eax
  40bed4:	jg     0x40bf52
  40bed6:	cmp    eax,0xc6b77c3c
  40bedb:	mov    bh,0x28
  40bedd:	scas   al,BYTE PTR es:[edi]
  40bede:	test   al,0xc3
  40bee0:	and    BYTE PTR [edi+0x28],al
  40bee3:	xchg   ebx,eax
  40bee4:	icebp  
  40bee5:	in     al,dx
  40bee6:	imul   esi,edi,0x2d
  40bee9:	inc    ebp
  40beea:	out    dx,eax
  40beeb:	into   
  40beec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beed:	popf   
  40beee:	mov    al,ds:0x8e662478
  40bef3:	jno    0x40bf1b
  40bef5:	popf   
  40bef6:	mov    ebx,0xdbd84685
  40befb:	xor    eax,0x9edeb5d3
  40bf00:	cmp    edi,DWORD PTR [ebx+0x132b43ae]
  40bf06:	cmp    ah,dl
  40bf08:	dec    ebp
  40bf09:	lahf   
  40bf0a:	std    
  40bf0b:	fwait
  40bf0c:	mov    ch,0xf2
  40bf0e:	mov    ds:0xb12cae3d,eax
  40bf13:	je     0x40bec2
  40bf15:	mov    es,WORD PTR [eax]
  40bf17:	push   edi
  40bf18:	cmpps  xmm1,XMMWORD PTR [edi],0xc3
  40bf1c:	mov    eax,0xbf92b7c2
  40bf21:	imul   edx,DWORD PTR [eax+0x464cd7e9],0x49
  40bf28:	sub    ch,BYTE PTR [ebp-0x2d]
  40bf2b:	das    
  40bf2c:	ss mov bh,0xa5
  40bf2f:	repz jg 0x40bf72
  40bf32:	pop    ds
  40bf33:	in     al,dx
  40bf34:	rcl    DWORD PTR [ecx-0x5b87b983],1
  40bf3a:	mov    cl,BYTE PTR [ebp+ebx*1+0x3f33399b]
  40bf41:	mov    bh,0x2d
  40bf43:	lods   eax,DWORD PTR ds:[esi]
  40bf44:	add    al,0xd6
  40bf46:	ins    BYTE PTR es:[edi],dx
  40bf47:	jle    0x40bf37
  40bf49:	call   0xce62:0x130262ef
  40bf50:	jl     0x40bf10
  40bf52:	jb     0x40bfb6
  40bf54:	push   0xffffffb9
  40bf56:	cmp    BYTE PTR [esp+eiz*2+0x2a32e7c8],ah
  40bf5d:	inc    eax
  40bf5e:	mov    ebp,0x4d7cff2
  40bf63:	out    dx,al
  40bf64:	aad    0xa3
  40bf66:	mov    al,0x93
  40bf68:	mov    dl,0x6f
  40bf6a:	cmp    edi,ecx
  40bf6c:	pop    edi
  40bf6d:	(bad)  
  40bf6e:	xchg   edx,eax
  40bf6f:	push   cs
  40bf70:	mov    eax,ds:0xdd51f9cf
  40bf75:	push   ecx
  40bf76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf77:	mov    ds:0xee0d940d,eax
  40bf7c:	popa   
  40bf7d:	mov    ecx,0x437cc328
  40bf82:	pop    edx
  40bf83:	jl     0x40bf97
  40bf85:	sub    al,0xdc
  40bf87:	(bad)  
  40bf88:	(bad)  
  40bf89:	loope  0x40bf2a
  40bf8b:	cmp    bl,BYTE PTR [esi]
  40bf8d:	(bad)  [edi]
  40bf8f:	xor    BYTE PTR [edi-0x3c],cl
  40bf92:	fnsave [ebx]
  40bf94:	push   ecx
  40bf95:	into   
  40bf96:	pop    es
  40bf97:	xchg   esi,eax
  40bf98:	fcmovnb st,st(1)
  40bf9a:	cmp    ecx,DWORD PTR [esi-0x21]
  40bf9d:	xchg   esi,eax
  40bf9e:	or     DWORD PTR [eax+0x55],ebx
  40bfa1:	add    eax,DWORD PTR [ebx]
  40bfa3:	adc    BYTE PTR es:[ebx+eiz*4+0x40],al
  40bfa8:	test   al,0xe2
  40bfaa:	or     BYTE PTR [eax],ah
  40bfac:	ins    DWORD PTR es:[edi],dx
  40bfad:	in     eax,dx
  40bfae:	or     al,0x5c
  40bfb0:	imul   esp,DWORD PTR [ecx],0xffffffc8
  40bfb3:	fdiv   DWORD PTR [ecx+0x57]
  40bfb6:	ret    
  40bfb7:	sub    DWORD PTR [ebx+0x73],edi
  40bfba:	jg     0x40c021
  40bfbc:	(bad)  
  40bfbd:	mov    ds:0xc779aa6f,eax
  40bfc2:	bound  ebp,QWORD PTR [edx+edi*4-0x9]
  40bfc6:	imul   eax,DWORD PTR [esi-0x3c6b1b73],0x7c
  40bfcd:	icebp  
  40bfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfcf:	ret    0xc872
  40bfd2:	nop
  40bfd3:	xchg   edx,eax
  40bfd4:	xor    al,BYTE PTR [ebx-0x22]
  40bfd7:	daa    
  40bfd8:	aaa    
  40bfd9:	pop    ebx
  40bfda:	mov    al,0xbd
  40bfdc:	cli    
  40bfdd:	in     eax,dx
  40bfde:	sub    al,0x36
  40bfe0:	jno    0x40c01a
  40bfe2:	add    al,0x9d
  40bfe4:	(bad)  ds:0x85397378
  40bfea:	mov    ?,eax
  40bfec:	pusha  
  40bfed:	sub    BYTE PTR ds:0x5cb500e5,ah
  40bff3:	(bad)  
  40bff5:	outs   dx,BYTE PTR ds:[esi]
  40bff6:	add    al,0x50
  40bff8:	aam    0xfe
  40bffa:	and    DWORD PTR [ebp+0x4f],eax
  40bffd:	addr16 sbb eax,0xbec04942
  40c003:	and    eax,0x48a07c20
  40c008:	sub    DWORD PTR [ebp+0x721f5581],edx
  40c00e:	sub    BYTE PTR [edi+0x50],0xf4
  40c012:	sub    dl,al
  40c014:	lods   al,BYTE PTR ds:[esi]
  40c015:	popa   
  40c016:	(bad)  
  40c017:	out    dx,eax
  40c018:	int3   
  40c019:	call   0x2865f89e
  40c01e:	pop    eax
  40c01f:	push   ebx
  40c020:	push   edi
  40c021:	repnz rol cl,0xe5
  40c025:	int    0x5a
  40c027:	xlat   BYTE PTR ds:[ebx]
  40c028:	push   edi
  40c029:	xchg   edx,eax
  40c02a:	adc    ecx,DWORD PTR [ecx+esi*2]
  40c02d:	mov    esi,0xef003d53
  40c032:	inc    ecx
  40c033:	or     eax,0xc989556e
  40c038:	ins    BYTE PTR es:[edi],dx
  40c039:	mov    dl,0x7d
  40c03b:	je     0x40c0ba
  40c03d:	clc    
  40c03e:	mov    al,ds:0x299fde76
  40c043:	jb     0x40bff3
  40c045:	js     0x40bfe7
  40c047:	jmp    0xb1e:0x8208422c
  40c04e:	and    al,0xfe
  40c050:	retf   
  40c051:	cli    
  40c052:	adc    eax,DWORD PTR [edi-0x64]
  40c055:	ins    BYTE PTR es:[edi],dx
  40c056:	les    eax,FWORD PTR [ecx-0x34acefa6]
  40c05c:	adc    BYTE PTR [edi],0x6f
  40c05f:	dec    esi
  40c060:	mov    al,0x45
  40c062:	or     DWORD PTR [edi-0x4c],ecx
  40c065:	out    dx,al
  40c066:	sbb    eax,0x70997b6e
  40c06b:	arpl   dx,ax
  40c06d:	ins    DWORD PTR es:[edi],dx
  40c06e:	je     0x40c0d5
  40c070:	sbb    edx,DWORD PTR [ecx-0x54f5679e]
  40c076:	add    BYTE PTR [ebp-0xc],ch
  40c079:	(bad)  
  40c07a:	std    
  40c07b:	lock daa 
  40c07d:	jp     0x40c05e
  40c07f:	cmp    eax,0x3b0d2f7d
  40c084:	push   DWORD PTR [eax-0x56]
  40c087:	imul   ebx,DWORD PTR [edi+ebx*8-0x25],0xffffffd0
  40c08c:	push   0xffffffcf
  40c08e:	pop    ebx
  40c08f:	dec    esi
  40c090:	cmc    
  40c091:	pop    esi
  40c092:	mov    eax,0x32dfcb9f
  40c097:	xchg   esp,eax
  40c098:	loope  0x40c091
  40c09a:	test   BYTE PTR [ebx],bl
  40c09c:	in     eax,dx
  40c09d:	aas    
  40c09e:	fldcw  WORD PTR [esi-0x30]
  40c0a1:	cwde   
  40c0a2:	mov    ah,0x4f
  40c0a4:	xlat   BYTE PTR ds:[ebx]
  40c0a5:	fwait
  40c0a6:	xchg   BYTE PTR [ebx-0x5efb4487],cl
  40c0ac:	ret    0xb018
  40c0af:	mov    WORD PTR [edx+eiz*8+0x1d0ea767],ss
  40c0b6:	inc    BYTE PTR [esi-0x6824ed83]
  40c0bc:	mov    ebx,0xcb9f5218
  40c0c1:	and    bh,BYTE PTR [ecx]
  40c0c3:	mov    bh,0xab
  40c0c5:	daa    
  40c0c6:	lahf   
  40c0c7:	mov    esi,0xde72f8c9
  40c0cc:	and    eax,0x9f113d63
  40c0d1:	call   0x6fe26b9b
  40c0d6:	bound  ebp,QWORD PTR [esi+0x67e02867]
  40c0dc:	fld    QWORD PTR [esi+eax*8+0x42]
  40c0e0:	ret    
  40c0e1:	sub    al,0x17
  40c0e3:	add    al,0x1d
  40c0e5:	icebp  
  40c0e6:	mov    esi,0xc9bc8680
  40c0eb:	sbb    ecx,DWORD PTR [ecx]
  40c0ed:	mov    dl,0x84
  40c0ef:	xchg   edi,eax
  40c0f0:	or     BYTE PTR [ebx+ecx*4-0x2d399e87],ah
  40c0f7:	xchg   esp,eax
  40c0f8:	and    cl,BYTE PTR ds:0x6703dc93
  40c0fe:	test   ebp,ebp
  40c100:	xchg   edx,eax
  40c101:	mov    eax,DWORD PTR [ebx+ebp*8+0x3671f83a]
  40c108:	inc    edi
  40c109:	fisttp WORD PTR [esp+edi*8]
  40c10c:	jmp    edx
  40c10e:	jb     0x40c187
  40c110:	cdq    
  40c111:	loop   0x40c0ec
  40c113:	shr    esi,1
  40c115:	test   DWORD PTR [eax],ecx
  40c117:	xlat   BYTE PTR ds:[ebx]
  40c118:	inc    ebx
  40c119:	and    ch,BYTE PTR [ebx-0x6f7dc37]
  40c11f:	fdiv   QWORD PTR ds:[eax+ecx*1]
  40c123:	fadd   QWORD PTR [edi+0x5a6671d5]
  40c129:	lods   al,BYTE PTR ds:[esi]
  40c12a:	xchg   esi,eax
  40c12b:	in     al,0xae
  40c12d:	pop    es
  40c12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c12f:	ror    DWORD PTR [ecx],cl
  40c131:	inc    edx
  40c132:	ret    
  40c133:	stc    
  40c134:	imul   edi,edi,0x12
  40c137:	xchg   edx,eax
  40c138:	xor    BYTE PTR [ebp-0x44],ah
  40c13b:	dec    ebx
  40c13c:	jg     0x40c0f0
  40c13e:	jo     0x40c15c
  40c140:	loope  0x40c148
  40c142:	(bad)  
  40c143:	push   edi
  40c144:	xchg   edi,eax
  40c145:	jg     0xfb97553a
  40c14b:	sbb    BYTE PTR [edi+0x59de11de],cl
  40c151:	xchg   edi,eax
  40c152:	shr    BYTE PTR [esp+esi*8-0xf],1
  40c156:	cmp    cl,ah
  40c158:	ror    al,cl
  40c15a:	lods   al,BYTE PTR ds:[esi]
  40c15b:	and    dl,BYTE PTR [esi+0x2806e57b]
  40c161:	out    dx,al
  40c162:	sar    DWORD PTR [ebx+eiz*1+0x5b11df55],cl
  40c169:	std    
  40c16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c16b:	mov    edi,0xd054a36a
  40c170:	xor    BYTE PTR [edx],dh
  40c172:	sub    al,0x2f
  40c174:	lock test BYTE PTR [esi],0xb8
  40c178:	ins    BYTE PTR es:[edi],dx
  40c179:	or     eax,0xc3b3ef6b
  40c17e:	inc    esp
  40c17f:	leave  
  40c180:	gs pop eax
  40c182:	or     ch,BYTE PTR [edx]
  40c184:	push   esp
  40c185:	mov    ds:0xb04ba1b,eax
  40c18a:	fcomp  DWORD PTR [ecx+0x1f8685ed]
  40c190:	fstp   TBYTE PTR [ebx+0x7990f9ab]
  40c196:	scas   eax,DWORD PTR es:[edi]
  40c197:	out    dx,al
  40c198:	push   ebx
  40c199:	xor    edx,DWORD PTR [ebp-0x60]
  40c19c:	pop    ebp
  40c19d:	ret    
  40c19e:	mov    cl,ah
  40c1a0:	jg     0x40c1a1
  40c1a2:	jp     0x40c16f
  40c1a4:	or     edx,DWORD PTR [ebx+edi*1-0x21a0cb66]
  40c1ab:	xlat   BYTE PTR ds:[ebx]
  40c1ac:	sbb    edi,DWORD PTR [edx+0x59]
  40c1af:	arpl   WORD PTR [ebx],si
  40c1b1:	adc    DWORD PTR [edi-0x1a],ebx
  40c1b4:	jg     0x40c1e2
  40c1b6:	in     eax,dx
  40c1b7:	xor    ah,bh
  40c1b9:	aas    
  40c1ba:	sub    BYTE PTR [eax+0x6658fb5e],dl
  40c1c0:	inc    eax
  40c1c1:	retf   
  40c1c2:	into   
  40c1c3:	add    cl,0x90
  40c1c6:	fisubr WORD PTR [ebx-0x1f]
  40c1c9:	jle    0x40c16f
  40c1cb:	test   DWORD PTR [ecx+0x26c94572],esi
  40c1d1:	cmp    BYTE PTR [edi+0x50b82c6f],dh
  40c1d7:	imul   eax,ecx,0x91abada1
  40c1dd:	call   0xa7131bd4
  40c1e2:	jo     0x40c1c5
  40c1e4:	xor    ecx,DWORD PTR [edi+ebp*2+0x32f5de94]
  40c1eb:	retf   0x7f84
  40c1ee:	and    eax,0x46737738
  40c1f3:	lds    ebx,FWORD PTR [ebx]
  40c1f5:	lods   eax,DWORD PTR ds:[esi]
  40c1f6:	hlt    
  40c1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f8:	dec    esi
  40c1f9:	xchg   edi,eax
  40c1fa:	dec    eax
  40c1fb:	jno    0x40c1fb
  40c1fd:	pop    ebx
  40c1fe:	or     cl,BYTE PTR [edx+edi*4]
  40c201:	test   eax,0x56414a7f
  40c206:	hlt    
  40c207:	fsub   QWORD PTR [esi]
  40c209:	and    al,0x61
  40c20b:	mov    eax,ds:0x1265f595
  40c210:	pop    ecx
  40c211:	sub    edx,DWORD PTR [ecx]
  40c213:	and    esi,edi
  40c215:	dec    edi
  40c216:	cmp    al,0x5d
  40c218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c219:	mov    bh,0x6b
  40c21b:	call   0x34311e39
  40c220:	data16 xor al,0xd7
  40c224:	mov    ch,0xe1
  40c226:	fwait
  40c227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c228:	lock add bl,BYTE PTR [ebp+0x339f5f4e]
  40c22f:	xchg   DWORD PTR [eax-0x4e],edx
  40c232:	pop    ebp
  40c233:	inc    ecx
  40c234:	and    ecx,DWORD PTR [edx+0x44]
  40c237:	ret    0x8393
  40c23a:	adc    DWORD PTR [ebx+edx*8-0x4aae45c4],edi
  40c241:	adc    ch,BYTE PTR [edi]
  40c243:	xchg   edx,eax
  40c244:	push   eax
  40c245:	pusha  
  40c246:	ret    
  40c247:	xchg   esi,eax
  40c248:	pop    ecx
  40c249:	and    edi,esp
  40c24b:	int    0xa6
  40c24d:	and    DWORD PTR [ecx+0x37],edx
  40c250:	sar    dh,cl
  40c252:	jnp    0x40c22a
  40c254:	sar    BYTE PTR [ebp-0x39],1
  40c257:	jmp    0x4963:0x5c2ac220
  40c25e:	sub    DWORD PTR [edi+0x65],0xb2ee42c0
  40c265:	loop   0x40c2c9
  40c267:	loop   0x40c228
  40c269:	dec    ebp
  40c26a:	xchg   ebx,eax
  40c26b:	outs   dx,BYTE PTR ds:[esi]
  40c26c:	push   esp
  40c26d:	push   ds
  40c26e:	mov    dl,0x2d
  40c270:	in     eax,0x95
  40c272:	push   ds
  40c273:	dec    BYTE PTR [esp+ebx*4+0x7]
  40c277:	and    edi,DWORD PTR [esi-0x2f1842dc]
  40c27d:	adc    ebp,DWORD PTR [ebx]
  40c27f:	mov    cl,0xe0
  40c281:	push   esp
  40c282:	nop
  40c283:	sub    cl,bh
  40c285:	pop    edi
  40c286:	xchg   ecx,eax
  40c287:	dec    ebp
  40c288:	sar    ecx,0x11
  40c28b:	sub    al,0x17
  40c28d:	push   ecx
  40c28e:	aam    0x5a
  40c290:	imul   ebx,DWORD PTR [ecx-0x567fd6a4],0xffffff89
  40c297:	jbe    0x40c259
  40c299:	or     eax,0x857a8fb
  40c29e:	xor    al,0x5a
  40c2a0:	pop    esp
  40c2a1:	dec    ecx
  40c2a2:	sbb    ecx,ebx
  40c2a4:	adc    ebp,eax
  40c2a6:	mov    ds:0xded20110,eax
  40c2ab:	push   ecx
  40c2ac:	mov    ah,0x6f
  40c2ae:	pop    ebp
  40c2af:	test   eax,0x5019e74e
  40c2b4:	mov    dl,0x44
  40c2b6:	inc    edi
  40c2b7:	ins    DWORD PTR es:[edi],dx
  40c2b8:	jnp    0x40c2f6
  40c2ba:	loopne 0x40c302
  40c2bc:	add    al,0xda
  40c2be:	jns    0x40c2d2
  40c2c0:	mov    esi,0x755c9ea0
  40c2c5:	cmp    al,0x15
  40c2c7:	cwde   
  40c2c8:	ja     0x40c285
  40c2ca:	inc    DWORD PTR [ecx-0x1ee8d557]
  40c2d0:	mov    bl,0x53
  40c2d2:	push   0xffffff9a
  40c2d4:	mov    ah,0xa
  40c2d6:	jbe    0x40c262
  40c2d8:	(bad)  
  40c2da:	mov    ebx,0xe1ea1bc2
  40c2df:	into   
  40c2e0:	sub    al,0x53
  40c2e2:	test   BYTE PTR [edx+edi*1+0x18856ea2],bl
  40c2e9:	mov    ds,WORD PTR [eax]
  40c2eb:	pushf  
  40c2ec:	repz and DWORD PTR ds:0xf677de3d,ebx
  40c2f3:	fistp  WORD PTR [eax]
  40c2f5:	xor    edx,esp
  40c2f7:	lods   eax,DWORD PTR ds:[esi]
  40c2f8:	and    DWORD PTR [ebp+0x2c],esi
  40c2fb:	popa   
  40c2fc:	add    bl,BYTE PTR [ebx]
  40c2fe:	lock call 0xfa05:0x76e5b44f
  40c306:	and    ah,BYTE PTR [esi]
  40c308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c309:	cmp    dh,BYTE PTR [ebp+0x7e]
  40c30c:	fwait
  40c30d:	dec    edi
  40c30e:	cmp    bl,dh
  40c310:	cmp    DWORD PTR [edx],ecx
  40c312:	xor    BYTE PTR [edx],dl
  40c314:	lods   eax,DWORD PTR ds:[esi]
  40c315:	mov    ds:0xc5fbdd3b,eax
  40c31a:	fs xchg edx,eax
  40c31c:	add    ecx,DWORD PTR [edi]
  40c31e:	ret    0xa9b9
  40c321:	sbb    ecx,ebp
  40c323:	fst    QWORD PTR [ecx+0x22f0bd6c]
  40c329:	xor    al,BYTE PTR [edi-0x6ce90f07]
  40c32f:	xor    ch,bl
  40c331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c332:	add    DWORD PTR [eax],0x34
  40c335:	and    eax,0xe35d6f3a
  40c33a:	pop    edi
  40c33b:	outs   dx,DWORD PTR ds:[esi]
  40c33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33d:	push   edi
  40c33e:	test   eax,0x9adf4c8d
  40c343:	xchg   ebx,eax
  40c344:	popf   
  40c345:	dec    esi
  40c346:	sar    DWORD PTR [ecx-0x79],1
  40c349:	inc    edx
  40c34a:	xor    DWORD PTR [ebp-0x41],esi
  40c34d:	push   es
  40c34e:	cmp    eax,0x736b545c
  40c353:	fild   DWORD PTR [esi]
  40c355:	xchg   ebx,eax
  40c356:	pop    es
  40c357:	popf   
  40c358:	popf   
  40c359:	mov    DWORD PTR [eax+0x4f],ebx
  40c35c:	cli    
  40c35d:	scas   eax,DWORD PTR es:[edi]
  40c35e:	loopne 0x40c369
  40c360:	idiv   BYTE PTR [esp+ebp*2+0x5e1014bd]
  40c367:	inc    ebp
  40c368:	fcom   QWORD PTR [edx+edx*8]
  40c36b:	mov    esp,0x9cbfb932
  40c370:	sub    BYTE PTR [eax-0x4b8d4c4a],dh
  40c376:	outs   dx,BYTE PTR ds:[esi]
  40c377:	sub    ah,bl
  40c379:	sbb    al,0x18
  40c37b:	inc    edi
  40c37c:	mov    ebp,0xe56c7093
  40c381:	push   es
  40c382:	sbb    esp,DWORD PTR [ebx-0x7f]
  40c385:	icebp  
  40c386:	cwde   
  40c387:	pop    esi
  40c388:	nop
  40c389:	dec    esi
  40c38a:	cmp    DWORD PTR [ecx+0x1],ebx
  40c38d:	and    eax,0x9b1fa106
  40c392:	xor    al,0xbd
  40c394:	sbb    eax,0x385d400b
  40c399:	xchg   DWORD PTR [esi-0x19f75234],edx
  40c39f:	inc    esi
  40c3a0:	imul   ebx,DWORD PTR [ecx-0x5],0xd028e7b3
  40c3a7:	cmp    al,0x34
  40c3a9:	stos   BYTE PTR es:[edi],al
  40c3aa:	and    al,0x41
  40c3ac:	pushf  
  40c3ad:	cwde   
  40c3ae:	mov    edi,0x40116385
  40c3b3:	lock mov bl,0x2b
  40c3b6:	add    BYTE PTR [esi-0x18],0x5a
  40c3ba:	sub    DWORD PTR [ecx+edi*1],eax
  40c3bd:	repnz mov dh,0xd
  40c3c0:	imul   DWORD PTR [ebp-0xdb0e08d]
  40c3c6:	sti    
  40c3c7:	popf   
  40c3c8:	(bad)  
  40c3c9:	xchg   ebp,eax
  40c3ca:	sub    al,0x8
  40c3cc:	dec    ebp
  40c3cd:	enter  0x9e4c,0x8e
  40c3d1:	pop    esi
  40c3d2:	call   0xb04ab36
  40c3d7:	mov    ah,0xb5
  40c3d9:	(bad)  
  40c3da:	xchg   ebp,eax
  40c3db:	mov    cl,0x97
  40c3dd:	push   ebp
  40c3de:	adc    edi,ebx
  40c3e0:	adc    al,0x62
  40c3e2:	out    0x2,eax
  40c3e4:	in     eax,0x10
  40c3e6:	cmc    
  40c3e7:	push   eax
  40c3e8:	sbb    eax,DWORD PTR [edx]
  40c3ea:	out    dx,eax
  40c3eb:	or     ebx,DWORD PTR [edi+ecx*4]
  40c3ee:	dec    esp
  40c3ef:	xchg   BYTE PTR ds:0xcad37ace,al
  40c3f5:	inc    ebx
  40c3f6:	outs   dx,BYTE PTR ds:[esi]
  40c3f7:	fwait
  40c3f8:	jnp    0x40c41c
  40c3fa:	(bad)  
  40c3fb:	mov    eax,0x8f7e20b2
  40c400:	daa    
  40c401:	out    dx,eax
  40c402:	int    0x30
  40c404:	xchg   esi,eax
  40c405:	pop    es
  40c406:	test   DWORD PTR [esi+0x45],edx
  40c409:	xor    esi,ebp
  40c40b:	je     0x40c44e
  40c40d:	int3   
  40c40e:	iret   
  40c40f:	jl     0x40c3e0
  40c411:	mov    cl,0xcb
  40c413:	imul   BYTE PTR [esi-0x14]
  40c416:	sbb    eax,0x198942ce
  40c41b:	out    dx,eax
  40c41c:	sub    al,BYTE PTR [edi]
  40c41e:	ficomp DWORD PTR [eax-0x14]
  40c421:	les    eax,FWORD PTR [ebx-0x622bc65f]
  40c427:	sub    eax,0x5230b21d
  40c42c:	fwait
  40c42d:	pop    ecx
  40c42e:	or     DWORD PTR [ebx],ebp
  40c430:	adc    esi,DWORD PTR [esi+0x36]
  40c433:	dec    eax
  40c434:	push   edx
  40c435:	dec    edi
  40c436:	(bad)  
  40c437:	sbb    ebx,DWORD PTR [ebx+0x275609fc]
  40c43d:	cmc    
  40c43e:	rcl    DWORD PTR [edx-0x7bca8fb8],cl
  40c444:	xchg   ebp,eax
  40c445:	pop    edi
  40c446:	jmp    0x40c463
  40c448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c449:	mov    BYTE PTR [ecx+edx*8+0x29],ah
  40c44d:	ja     0x40c44b
  40c44f:	gs sub edi,0x4d53e684
  40c456:	mov    cl,0x22
  40c458:	mov    dh,BYTE PTR ds:0x33ee0cc5
  40c45e:	xchg   ebx,eax
  40c45f:	jge    0x40c3ec
  40c461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c462:	mov    dh,0x96
  40c464:	imul   esi,DWORD PTR [esi+0x27917d0f],0x28
  40c46b:	cmc    
  40c46c:	lahf   
  40c46d:	iret   
  40c46e:	aas    
  40c46f:	dec    edi
  40c470:	lahf   
  40c471:	popf   
  40c472:	xlat   BYTE PTR ds:[ebx]
  40c473:	out    dx,eax
  40c474:	lds    esi,FWORD PTR [edi-0x6c]
  40c477:	les    edi,FWORD PTR [edi-0x4]
  40c47a:	push   eax
  40c47b:	test   ecx,ecx
  40c47d:	inc    edi
  40c47e:	xchg   edx,eax
  40c47f:	cmp    esp,edx
  40c481:	div    DWORD PTR ds:0x43ea4a6d
  40c487:	pop    ss
  40c488:	call   0xa16ceb9
  40c48d:	or     ch,BYTE PTR ds:0x38fe3607
  40c493:	ja     0x40c463
  40c495:	enter  0x47cf,0x42
  40c499:	mov    dl,0x76
  40c49b:	mov    ah,0x65
  40c49d:	aam    0xec
  40c49f:	(bad)  
  40c4a0:	bound  edx,QWORD PTR [edi]
  40c4a2:	add    DWORD PTR [eax+0x4a],esp
  40c4a5:	mov    DWORD PTR [edi-0x74],esp
  40c4a8:	or     eax,DWORD PTR [esi]
  40c4aa:	or     al,0x3c
  40c4ac:	inc    esp
  40c4ad:	iret   
  40c4ae:	mov    ebx,0x13727d78
  40c4b3:	pop    ebp
  40c4b4:	add    DWORD PTR [edx+edx*8],eax
  40c4b7:	mov    al,ds:0xbc9f685b
  40c4bc:	sbb    cl,dl
  40c4be:	add    eax,0xe36d651e
  40c4c3:	push   ebx
  40c4c4:	jecxz  0x40c471
  40c4c6:	sar    DWORD PTR cs:[eax],0xe
  40c4ca:	popa   
  40c4cb:	enter  0xe45b,0x0
  40c4cf:	les    ebp,FWORD PTR [ebp-0x44a93c4f]
  40c4d5:	std    
  40c4d6:	xor    BYTE PTR [ecx],bh
  40c4d8:	mov    ebp,0x98b5b1c6
  40c4dd:	sbb    BYTE PTR [ebx+edx*8+0x1e23456e],al
  40c4e4:	(bad)  
  40c4e5:	in     eax,0xe0
  40c4e7:	xchg   DWORD PTR [ebx+eiz*1+0x57],esp
  40c4eb:	ss icebp 
  40c4ed:	mov    cl,0xc1
  40c4ef:	cmp    eax,0x51415db3
  40c4f4:	aad    0x32
  40c4f6:	sbb    al,0x99
  40c4f8:	sti    
  40c4f9:	shl    DWORD PTR [eax+eiz*2+0x4c],cl
  40c4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4fe:	std    
  40c4ff:	sar    DWORD PTR [eax],1
  40c501:	mov    ebp,0x48e499eb
  40c506:	sub    DWORD PTR [edx],edi
  40c508:	mov    ah,0xf
  40c50a:	retf   0xb161
  40c50d:	jbe    0x40c52b
  40c50f:	std    
  40c510:	dec    edx
  40c511:	cdq    
  40c512:	sbb    eax,0xbcffaee5
  40c517:	jne    0x40c52e
  40c519:	push   edi
  40c51a:	inc    ecx
  40c51b:	aam    0xd3
  40c51d:	data16 jns 0x40c58f
  40c520:	les    edx,FWORD PTR [edi-0x40]
  40c523:	jmp    0xe6d6f390
  40c528:	adc    esp,DWORD PTR [eax+0xaf4c027]
  40c52e:	je     0x40c569
  40c530:	imul   ecx,DWORD PTR [ecx],0x76
  40c533:	out    0x5c,eax
  40c535:	mov    bh,0x29
  40c537:	inc    ebp
  40c538:	sbb    BYTE PTR [esi+0x6b7dce9],bl
  40c53e:	and    edx,DWORD PTR [ebx+eiz*8]
  40c541:	stc    
  40c542:	xor    eax,0x10687bd5
  40c547:	inc    esi
  40c548:	lods   eax,DWORD PTR ds:[esi]
  40c549:	mov    BYTE PTR [esi-0x71c1dbe3],ah
  40c54f:	stos   BYTE PTR es:[edi],al
  40c550:	jg     0x40c4d7
  40c552:	jbe    0x40c54c
  40c554:	jg     0x40c52c
  40c556:	out    dx,al
  40c557:	cmp    ecx,DWORD PTR [edx+esi*4-0x77e89b6e]
  40c55e:	pop    es
  40c55f:	test   edx,ebp
  40c561:	call   0x71330a9f
  40c566:	mov    ds:0xd5464d01,al
  40c56b:	leave  
  40c56c:	int    0x99
  40c56e:	cdq    
  40c56f:	mov    edi,0xdf452221
  40c574:	sub    BYTE PTR [ecx],bh
  40c576:	lea    ebp,ss:[edi]
  40c579:	cmp    BYTE PTR [ebx-0x5e],cl
  40c57c:	mov    cl,0x23
  40c57e:	mov    bl,0x44
  40c580:	ret    0xb182
  40c583:	fstp   DWORD PTR [ebx+0x4a]
  40c586:	frstor [esi+0x6601acbd]
  40c58c:	xlat   BYTE PTR ds:[ebx]
  40c58d:	pop    ebp
  40c58e:	sbb    BYTE PTR [edx+eax*2],cl
  40c591:	xchg   esp,eax
  40c592:	stos   BYTE PTR es:[edi],al
  40c593:	dec    esp
  40c594:	push   ebp
  40c595:	adc    al,0xc0
  40c597:	mov    edi,0xc787d5e1
  40c59c:	addr16 mov al,0x60
  40c59f:	or     eax,0xdba169da
  40c5a4:	sti    
  40c5a5:	outs   dx,DWORD PTR ds:[esi]
  40c5a6:	jmp    0xc6bbafd
  40c5ab:	add    eax,0xe6b027a6
  40c5b0:	(bad)  
  40c5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5b2:	cwde   
  40c5b3:	jns    0x40c634
  40c5b5:	fisttp QWORD PTR ds:0x72c576b5
  40c5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5bc:	inc    esi
  40c5bd:	(bad)  
  40c5be:	mov    bh,0x37
  40c5c0:	and    eax,0xfe653f62
  40c5c5:	out    0xb1,eax
  40c5c7:	scas   eax,DWORD PTR es:[edi]
  40c5c8:	jnp    0x40c54e
  40c5ca:	je     0x40c5cc
  40c5cc:	jle    0x40c611
  40c5ce:	loop   0x40c61e
  40c5d0:	add    esi,DWORD PTR [edi-0x3e]
  40c5d3:	sbb    al,al
  40c5d5:	stc    
  40c5d6:	adc    esp,DWORD PTR [esi]
  40c5d8:	out    0x4e,eax
  40c5da:	push   edi
  40c5db:	lea    ebp,ds:0xa2b96c8e
  40c5e1:	hlt    
  40c5e2:	sbb    ecx,DWORD PTR [eax]
  40c5e4:	sub    BYTE PTR cs:[edx],bh
  40c5e7:	xor    al,0xbf
  40c5e9:	sub    dh,BYTE PTR [edx+0xd]
  40c5ec:	fdivp  st(0),st
  40c5ee:	inc    esp
  40c5ef:	rcl    DWORD PTR [eax],0xd0
  40c5f2:	xor    ebp,edx
  40c5f4:	adc    bh,bh
  40c5f6:	hlt    
  40c5f7:	xor    cl,BYTE PTR [edx]
  40c5f9:	imul   edi,DWORD PTR [ebx-0x55666176],0x72
  40c600:	inc    edi
  40c601:	pop    ebp
  40c602:	push   ebp
  40c603:	icebp  
  40c604:	sbb    BYTE PTR [ebx-0x27],0x52
  40c608:	adc    dl,BYTE PTR [ebp+0x4797d15b]
  40c60e:	add    BYTE PTR [esi],al
  40c610:	add    edi,DWORD PTR [edx+0x648c36e5]
  40c616:	or     DWORD PTR [esi-0x38],ebp
  40c619:	popa   
  40c61a:	bound  ecx,QWORD PTR [ecx-0x76]
  40c61d:	sbb    eax,0xf3ca8652
  40c622:	loope  0x40c628
  40c624:	inc    eax
  40c625:	ret    0x7d9
  40c628:	ja     0x40c675
  40c62a:	mov    esi,0xb7b1dedd
  40c62f:	aad    0x21
  40c631:	or     esp,eax
  40c633:	cmp    al,0x8a
  40c635:	into   
  40c636:	pop    eax
  40c637:	push   0xffffffc4
  40c639:	call   0xe0ba8817
  40c63e:	sub    al,0xe0
  40c640:	scas   eax,DWORD PTR es:[edi]
  40c641:	and    al,0xe7
  40c643:	dec    esp
  40c644:	retf   0x9a30
  40c647:	cmp    dl,al
  40c649:	push   ebp
  40c64a:	popa   
  40c64b:	ja     0x40c662
  40c64d:	jge    0x40c698
  40c64f:	loope  0x40c6c5
  40c651:	imul   ecx,DWORD PTR [esi+edx*4+0x67],0xfffffff5
  40c656:	mov    edi,0xbe2666e7
  40c65b:	push   eax
  40c65c:	xchg   ebp,eax
  40c65d:	jl     0x40c61e
  40c65f:	pop    ecx
  40c660:	imul   esi,DWORD PTR ds:0x125110d7,0x2c34c722
  40c66a:	push   ss
  40c66b:	xor    bh,al
  40c66d:	push   esp
  40c66e:	das    
  40c66f:	mov    al,0xa6
  40c671:	cmp    dh,BYTE PTR [ecx+0x53]
  40c674:	mov    ecx,0x7f427198
  40c679:	pop    DWORD PTR ds:[edx+0x37a970c5]
  40c680:	out    dx,eax
  40c681:	out    dx,al
  40c682:	(bad)  
  40c683:	mov    esi,0xb89d5dbe
  40c688:	out    0x8f,al
  40c68a:	(bad)  
  40c68b:	arpl   WORD PTR [edi],di
  40c68d:	sub    BYTE PTR [edi-0x79815883],ch
  40c693:	dec    esi
  40c694:	and    edx,DWORD PTR [edi]
  40c696:	xchg   BYTE PTR [esi+0x108ecd11],dh
  40c69c:	out    dx,al
  40c69d:	jmp    0xb311477d
  40c6a2:	mov    al,ds:0x9635de17
  40c6a7:	and    al,dl
  40c6a9:	cmc    
  40c6aa:	out    dx,al
  40c6ab:	fcom   st(6)
  40c6ad:	jbe    0x40c6dc
  40c6af:	aas    
  40c6b0:	out    dx,al
  40c6b1:	in     al,dx
  40c6b2:	add    eax,0xb773be35
  40c6b7:	pop    ss
  40c6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6b9:	push   0x8f7a4995
  40c6be:	push   edi
  40c6bf:	add    ch,BYTE PTR [edi-0x23c233c]
  40c6c5:	push   esi
  40c6c6:	push   cs
  40c6c7:	mov    edi,0xa7ba3a97
  40c6cc:	mov    eax,ds:0xf9c207db
  40c6d1:	fwait
  40c6d2:	daa    
  40c6d3:	pop    esp
  40c6d4:	js     0x40c688
  40c6d6:	scas   al,BYTE PTR es:[edi]
  40c6d7:	pusha  
  40c6d8:	cld    
  40c6d9:	xchg   esi,eax
  40c6da:	icebp  
  40c6db:	jg     0x40c6de
  40c6dd:	call   0xcce5:0xe7cacdde
  40c6e4:	out    0x1e,al
  40c6e6:	mov    eax,ds:0x25fbea08
  40c6eb:	push   edi
  40c6ec:	ret    0x23db
  40c6ef:	inc    eax
  40c6f0:	jle    0x40c6ed
  40c6f2:	xor    bl,BYTE PTR [eax+eiz*1+0x5]
  40c6f6:	push   cx
  40c6f8:	and    ch,al
  40c6fa:	popa   
  40c6fb:	xchg   ecx,eax
  40c6fc:	imul   edi,DWORD PTR [ebx-0x5d],0x157e3f65
  40c703:	jne    0x40c692
  40c705:	mov    edx,0x30b1a299
  40c70a:	pushf  
  40c70b:	imul   edi,edi,0x2e83cb8
  40c711:	pop    esp
  40c712:	cmp    cl,bh
  40c714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c715:	inc    esp
  40c716:	and    ecx,eax
  40c718:	(bad)  
  40c71a:	inc    esi
  40c71b:	in     eax,dx
  40c71c:	mov    ebx,0x657f5605
  40c721:	jmp    0x40c781
  40c723:	xchg   esp,eax
  40c724:	lds    ebx,FWORD PTR [edx+eiz*2]
  40c727:	scas   eax,DWORD PTR es:[edi]
  40c728:	adc    dl,BYTE PTR [edx]
  40c72a:	into   
  40c72b:	adc    al,0xd9
  40c72d:	dec    esp
  40c72e:	pop    ebx
  40c72f:	mov    ds:0xca505929,eax
  40c734:	scas   eax,DWORD PTR es:[edi]
  40c735:	fimul  WORD PTR [esi+0x1c0b608e]
  40c73b:	or     BYTE PTR [esi+0x16e71bde],bh
  40c741:	xchg   DWORD PTR [esi+0x33332820],esp
  40c747:	shr    DWORD PTR [ecx+0x54],cl
  40c74a:	jmp    0xaab9bf7e
  40c74f:	xchg   esi,ecx
  40c751:	push   edi
  40c752:	mov    ch,0x68
  40c754:	dec    esi
  40c755:	mov    esi,es
  40c757:	not    DWORD PTR [eax-0xd523efe]
  40c75d:	stos   DWORD PTR es:[edi],eax
  40c75e:	mov    al,ds:0x61a5e94
  40c763:	out    dx,al
  40c764:	sub    al,0x1f
  40c766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c767:	pusha  
  40c768:	inc    eax
  40c769:	push   esp
  40c76a:	push   eax
  40c76b:	push   ebp
  40c76c:	shl    DWORD PTR [ecx-0x28a91d40],1
  40c772:	fst    DWORD PTR [edi]
  40c774:	sub    BYTE PTR [edi+0x42],ch
  40c777:	lahf   
  40c778:	xor    esi,edi
  40c77a:	ins    DWORD PTR es:[edi],dx
  40c77b:	in     eax,dx
  40c77c:	dec    ecx
  40c77d:	and    eax,0xa5bd2176
  40c782:	dec    esi
  40c783:	in     eax,dx
  40c784:	jl     0x40c78c
  40c786:	and    DWORD PTR cs:[edx+esi*4-0x39],ebx
  40c78b:	aas    
  40c78c:	dec    eax
  40c78d:	mov    dl,0xd3
  40c78f:	retf   
  40c790:	lods   al,BYTE PTR ds:[esi]
  40c791:	ret    0x6535
  40c794:	in     al,dx
  40c795:	stos   BYTE PTR es:[edi],al
  40c796:	les    edx,FWORD PTR [ebx+0x3cd53fe]
  40c79c:	push   0x238a8131
  40c7a1:	jp     0x40c785
  40c7a3:	pop    edi
  40c7a4:	xor    eax,0xf125f8db
  40c7a9:	fdivr  st,st(0)
  40c7ab:	lock call 0xb17e:0x6c819506
  40c7b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b4:	inc    ecx
  40c7b5:	mov    eax,0x3609a9a0
  40c7ba:	pop    ss
  40c7bb:	cmc    
  40c7bc:	add    eax,0x1d826e62
  40c7c1:	push   edi
  40c7c2:	dec    ebp
  40c7c3:	push   esi
  40c7c4:	push   ebp
  40c7c5:	dec    ebp
  40c7c6:	std    
  40c7c7:	jg     0x40c7df
  40c7c9:	sbb    ebp,DWORD PTR [esi+0x2a]
  40c7cc:	or     DWORD PTR [esi+0xb],0xd83c6bbb
  40c7d3:	cmp    eax,edi
  40c7d5:	xchg   bl,ah
  40c7d7:	ror    BYTE PTR [ebp*4-0x64a03cd7],0xe5
  40c7df:	pop    ecx
  40c7e0:	hlt    
  40c7e1:	pop    edx
  40c7e2:	sti    
  40c7e3:	lock pop ds
  40c7e5:	lahf   
  40c7e6:	jb     0x40c771
  40c7e8:	shl    BYTE PTR [edx-0x586bb51c],0xdb
  40c7ef:	jno    0x40c863
  40c7f1:	test   BYTE PTR [ecx+ebx*8-0x2c],dl
  40c7f5:	ror    bh,cl
  40c7f7:	hlt    
  40c7f8:	pop    ss
  40c7f9:	cmp    bh,bl
  40c7fb:	test   BYTE PTR [ecx-0x1e],0x30
  40c7ff:	mov    ch,0xb3
  40c801:	mov    al,0x32
  40c803:	inc    edi
  40c804:	outs   dx,DWORD PTR ds:[esi]
  40c805:	loopne 0x40c7ab
  40c807:	enter  0xa5fd,0x14
  40c80b:	(bad)  
  40c80c:	stos   BYTE PTR es:[edi],al
  40c80d:	in     eax,dx
  40c80e:	cmc    
  40c80f:	aas    
  40c810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c811:	outs   dx,BYTE PTR ds:[esi]
  40c812:	loop   0x40c822
  40c814:	inc    esp
  40c815:	sbb    eax,0xaa33b7cd
  40c81a:	leave  
  40c81b:	(bad)  
  40c81c:	xlat   BYTE PTR ds:[ebx]
  40c81d:	iret   
  40c81e:	ss call ebx
  40c821:	inc    ebx
  40c822:	in     al,dx
  40c823:	mov    ds:0x8c42349,al
  40c828:	hlt    
  40c829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c82a:	(bad)  
  40c82b:	push   eax
  40c82c:	ror    dl,0xc7
  40c82f:	push   ebx
  40c830:	mov    DWORD PTR [ebx-0x70aff943],ebx
  40c836:	out    dx,al
  40c837:	xchg   esp,eax
  40c838:	mov    eax,0x2870b562
  40c83d:	das    
  40c83e:	in     al,0xc2
  40c840:	adc    dl,BYTE PTR [esi]
  40c842:	(bad)
  40c845:	dec    esi
  40c846:	arpl   dx,cx
  40c848:	shl    BYTE PTR [ebp-0x5124d6af],cl
  40c84e:	inc    ecx
  40c84f:	popf   
  40c850:	lock aad 0xbc
  40c853:	mov    cl,0x7c
  40c855:	js     0x40c7fc
  40c857:	mov    ebx,0xb520224f
  40c85c:	(bad)  
  40c85d:	ds retf 0x88f9
  40c861:	les    eax,FWORD PTR [eax]
  40c863:	fcmovne st,st(6)
  40c865:	dec    edi
  40c866:	push   esi
  40c867:	sbb    ebp,DWORD PTR [edi+0x6085876f]
  40c86d:	add    al,0x48
  40c86f:	or     eax,0x6d41f63
  40c874:	mov    ebx,0xd3608691
  40c879:	adc    DWORD PTR [esi],edi
  40c87b:	jge    0x40c877
  40c87d:	(bad)  ds:0xb771aa12
  40c883:	in     eax,dx
  40c884:	inc    ecx
  40c885:	mov    al,ds:0x160ffc88
  40c88a:	pop    ebx
  40c88b:	mov    BYTE PTR [edx+ebp*4-0x3972b232],bh
  40c892:	dec    edi
  40c893:	lock ins BYTE PTR es:[edi],dx
  40c895:	imul   ebx,DWORD PTR [edi-0x3f],0x9c749fbb
  40c89c:	sbb    eax,0x487c9dee
  40c8a1:	jp     0x40c922
  40c8a3:	pop    eax
  40c8a4:	dec    ebx
  40c8a5:	xchg   ecx,eax
  40c8a6:	mov    bl,0xc1
  40c8a8:	into   
  40c8a9:	xchg   ecx,eax
  40c8aa:	(bad)  
  40c8ab:	rol    BYTE PTR [ebx+0x1142ff64],0x1c
  40c8b2:	push   eax
  40c8b3:	nop
  40c8b4:	dec    BYTE PTR [eax+0xc]
  40c8b7:	mov    dl,BYTE PTR [ebp-0x50df2dcf]
  40c8bd:	es ror ah,cl
  40c8c0:	fwait
  40c8c1:	lock or eax,0x834a3ea4
  40c8c7:	sbb    BYTE PTR [esi],bl
  40c8c9:	daa    
  40c8ca:	into   
  40c8cb:	test   eax,0xd25eb64e
  40c8d0:	pop    ebx
  40c8d1:	in     al,dx
  40c8d2:	mov    edx,ecx
  40c8d4:	stos   BYTE PTR es:[edi],al
  40c8d5:	out    dx,eax
  40c8d6:	shl    DWORD PTR [eax],0x29
  40c8d9:	ret    0x7488
  40c8dc:	xchg   ecx,eax
  40c8dd:	pop    es
  40c8de:	mov    dl,cl
  40c8e0:	add    BYTE PTR [edx-0xc],ch
  40c8e3:	call   0x429f:0x6162fddc
  40c8ea:	fs or  eax,edi
  40c8ed:	push   esp
  40c8ee:	loop   0x40c8fe
  40c8f0:	push   ds
  40c8f1:	rcr    DWORD PTR ds:0x504a96cd,0xd2
  40c8f8:	mov    BYTE PTR [esi+0xe],dl
  40c8fb:	fidiv  WORD PTR [esi]
  40c8fd:	mov    ds,WORD PTR [edi+0x63199412]
  40c903:	push   ds
  40c904:	sub    ebp,esp
  40c906:	xchg   ebp,eax
  40c907:	inc    esi
  40c908:	sub    BYTE PTR [eax],cl
  40c90a:	stos   BYTE PTR es:[edi],al
  40c90b:	xor    cl,BYTE PTR [edi+0x58]
  40c90e:	push   cs
  40c90f:	test   DWORD PTR [esp+ecx*1],esi
  40c912:	push   ecx
  40c913:	jnp    0x40c96c
  40c915:	push   ebp
  40c916:	mov    ebx,0x7e547505
  40c91b:	mov    esp,0x7549cef8
  40c920:	pop    ebx
  40c921:	es call 0xd46a:0x7530338f
  40c929:	scas   eax,DWORD PTR es:[edi]
  40c92a:	mov    ebp,0xbdbfc4fa
  40c92f:	out    0xb2,al
  40c931:	neg    esi
  40c933:	push   esi
  40c934:	push   0x4c
  40c936:	mov    dh,0xd6
  40c938:	pop    ebp
  40c939:	pop    es
  40c93a:	ss pop esp
  40c93c:	cdq    
  40c93d:	pusha  
  40c93e:	scas   al,BYTE PTR es:[edi]
  40c93f:	or     ecx,ebx
  40c941:	enter  0xbaaf,0x76
  40c945:	push   ebx
  40c946:	or     edx,DWORD PTR [edi]
  40c948:	call   0x5d79:0x1f3bbdb7
  40c94f:	retf   0xec1
  40c952:	or     al,0xa3
  40c954:	(bad)  
  40c955:	sahf   
  40c956:	mov    ch,0x55
  40c958:	sbb    DWORD PTR [edi-0x7ea8f2d1],ebx
  40c95e:	popf   
  40c95f:	xchg   ebp,eax
  40c960:	jecxz  0x40c913
  40c962:	fwait
  40c963:	mov    ds:0xf105dfc4,eax
  40c968:	aad    0x2c
  40c96a:	int3   
  40c96b:	out    dx,eax
  40c96c:	cdq    
  40c96d:	mov    WORD PTR [ecx-0x9ed7588],ss
  40c973:	dec    DWORD PTR [ebx+0x459a0311]
  40c979:	js     0x40c950
  40c97b:	or     eax,0x6275b52d
  40c980:	idiv   DWORD PTR [edi-0x80]
  40c983:	test   BYTE PTR [ecx],cl
  40c985:	mov    esp,0x9523ec5f
  40c98a:	(bad)  
  40c98b:	pop    esp
  40c98c:	mov    ds:0x788cf985,al
  40c991:	xor    eax,0x3b00e2f2
  40c996:	mov    eax,ds:0x3cb0a42e
  40c99b:	cmp    BYTE PTR [edx+0xa797d93],dl
  40c9a1:	call   0xd0c2:0xe5041747
  40c9a8:	cli    
  40c9a9:	xor    al,0x9c
  40c9ab:	ja     0x40c9c2
  40c9ad:	int3   
  40c9ae:	xor    DWORD PTR [ecx+0x27],edi
  40c9b1:	fsubr  st,st(3)
  40c9b3:	sbb    eax,0x921dc3ed
  40c9b8:	add    dh,BYTE PTR [bp-0x3f]
  40c9bc:	(bad)  
  40c9be:	xchg   edi,eax
  40c9bf:	loopne 0x40ca2d
  40c9c1:	mov    dh,0xd8
  40c9c3:	dec    ebp
  40c9c4:	addr16 mov bh,0x51
  40c9c7:	je     0x40c952
  40c9c9:	cs inc eax
  40c9cb:	je     0x40c9fc
  40c9cd:	cmp    eax,0x7800863
  40c9d2:	or     eax,0x9c342c4
  40c9d7:	mov    ebx,0xfe07a334
  40c9dc:	xor    BYTE PTR [esi+edi*1+0x73],0xd8
  40c9e1:	(bad)  
  40c9e2:	outs   dx,DWORD PTR ds:[esi]
  40c9e3:	(bad)  
  40c9e4:	jmp    0xe809:0x84e0a773
  40c9eb:	(bad)  
  40c9ec:	cld    
  40c9ed:	into   
  40c9ee:	cmp    BYTE PTR [ebx-0x5d],0xc0
  40c9f2:	outs   dx,BYTE PTR ds:[esi]
  40c9f3:	in     al,dx
  40c9f4:	popf   
  40c9f5:	cmp    esp,esp
  40c9f7:	xor    ch,dh
  40c9f9:	jmp    0xed6c7786
  40c9fe:	mov    BYTE PTR [ecx-0x6c],dh
  40ca01:	aad    0xc0
  40ca03:	cmp    BYTE PTR [edx-0x44998aca],0x9a
  40ca0a:	into   
  40ca0b:	push   cs
  40ca0c:	sbb    BYTE PTR [ecx],ch
  40ca0e:	jbe    0x40ca72
  40ca10:	(bad)  
  40ca11:	fsubrp st(1),st
  40ca13:	or     esp,eax
  40ca15:	(bad)  
  40ca16:	cs int 0x94
  40ca19:	pop    eax
  40ca1a:	pop    eax
  40ca1b:	pop    edx
  40ca1c:	mov    dh,0x51
  40ca1e:	dec    eax
  40ca1f:	(bad)  
  40ca20:	push   ds
  40ca21:	xchg   ebp,eax
  40ca22:	push   ecx
  40ca23:	fmul   st,st(3)
  40ca25:	in     al,dx
  40ca26:	xchg   esi,eax
  40ca27:	dec    ebx
  40ca28:	ss lahf 
  40ca2a:	je     0x40ca59
  40ca2c:	push   edx
  40ca2d:	mov    ah,0x6b
  40ca2f:	(bad)  
  40ca30:	ret    0x664c
  40ca33:	cmp    esp,DWORD PTR [esi+0x39]
  40ca36:	aad    0xbf
  40ca38:	push   ds
  40ca39:	in     al,0x19
  40ca3b:	push   edi
  40ca3c:	jae    0x40ca81
  40ca3e:	push   edi
  40ca3f:	mov    al,0xf8
  40ca41:	jmp    0xf84a:0xbcc1403a
  40ca48:	repz (bad) 
  40ca4b:	push   eax
  40ca4c:	and    cl,al
  40ca4e:	xchg   ecx,eax
  40ca4f:	ins    DWORD PTR es:[edi],dx
  40ca50:	or     BYTE PTR [esi],0x8a
  40ca53:	daa    
  40ca54:	pop    esp
  40ca55:	push   ds
  40ca56:	mov    dh,0xb3
  40ca58:	rcr    BYTE PTR [edi],0xc6
  40ca5b:	mov    BYTE PTR [ecx+ebx*2],0x7a
  40ca5f:	inc    edi
  40ca60:	or     ecx,DWORD PTR [ebx+0x13]
  40ca63:	rol    BYTE PTR ds:0x30a98da3,0x48
  40ca6a:	ror    BYTE PTR [eax-0x92737f0],0xcc
  40ca71:	pusha  
  40ca72:	xlat   BYTE PTR ds:[ebx]
  40ca73:	adc    esi,ecx
  40ca75:	dec    ecx
  40ca76:	mov    esp,0x41b57462
  40ca7b:	fucomp st(5)
  40ca7d:	test   BYTE PTR [edi],dl
  40ca7f:	mov    edi,0xfe687dc8
  40ca84:	mov    edi,0xf7339d17
  40ca89:	cmp    al,0xb2
  40ca8b:	sub    DWORD PTR [ecx-0x7ab5be6f],ebx
  40ca91:	test   al,0x7d
  40ca93:	xchg   ebp,eax
  40ca94:	scas   al,BYTE PTR es:[edi]
  40ca95:	xchg   esi,eax
  40ca96:	cmp    BYTE PTR [esi],0xda
  40ca99:	test   BYTE PTR [eax+0x1a516205],al
  40ca9f:	mov    ah,0xd2
  40caa1:	mov    ecx,DWORD PTR [ebp-0x5d]
  40caa4:	add    eax,0x1be693dd
  40caa9:	cli    
  40caaa:	pop    edx
  40caab:	rep lods eax,DWORD PTR ds:[esi]
  40caad:	je     0x40ca9a
  40caaf:	lods   eax,DWORD PTR ds:[esi]
  40cab0:	jmp    0xa0eaa180
  40cab5:	outs   dx,BYTE PTR ds:[esi]
  40cab6:	jnp    0x40caee
  40cab8:	pushf  
  40cab9:	pop    ebp
  40caba:	jbe    0x40cab9
  40cabc:	xor    eax,0x691d73ec
  40cac1:	mov    bl,0xbd
  40cac3:	fwait
  40cac4:	sti    
  40cac5:	cs in  eax,0xe8
  40cac8:	or     al,0xe3
  40caca:	in     al,dx
  40cacb:	cdq    
  40cacc:	ja     0x40ca63
  40cace:	fsub   QWORD PTR [ebp+0x67e67c]
  40cad4:	lea    edx,[edi+ebx*2-0x5dde167f]
  40cadb:	pusha  
  40cadc:	jne    0x40cb4f
  40cade:	xor    al,0x11
  40cae0:	adc    eax,0xeaaf84ea
  40cae5:	aam    0xf2
  40cae7:	in     eax,dx
  40cae8:	adc    al,0x73
  40caea:	add    esp,DWORD PTR [edx+ecx*4]
  40caed:	(bad)  
  40caee:	fsubr  QWORD PTR [ebx-0x657771f6]
  40caf4:	call   0xd0b2:0x9c6bcf61
  40cafb:	aam    0xab
  40cafd:	push   ebx
  40cafe:	pop    ecx
  40caff:	ins    DWORD PTR es:[edi],dx
  40cb00:	(bad)  
  40cb01:	scas   al,BYTE PTR es:[edi]
  40cb02:	lods   al,BYTE PTR ds:[esi]
  40cb03:	jp     0x40cb36
  40cb05:	popf   
  40cb06:	jne    0x40cae5
  40cb08:	mov    bl,0x47
  40cb0a:	adc    BYTE PTR ds:[eax-0x741c67a3],bh
  40cb11:	jbe    0x40cb52
  40cb13:	fld    DWORD PTR [esi+0x47]
  40cb16:	shr    DWORD PTR [eax+0x59da05d6],0x81
  40cb1d:	ret    0x2ae2
  40cb20:	and    al,0x9c
  40cb22:	out    dx,al
  40cb23:	(bad)  
  40cb24:	std    
  40cb25:	jne    0x40cb23
  40cb27:	xchg   DWORD PTR [esi+eiz*1],ebp
  40cb2a:	push   eax
  40cb2b:	jg     0x40cb58
  40cb2d:	add    BYTE PTR [esi+0x4f],bl
  40cb30:	sub    DWORD PTR [eax-0x49],ebp
  40cb33:	stc    
  40cb34:	mov    WORD PTR [ecx+0x2d5cd163],?
  40cb3a:	jecxz  0x40cabd
  40cb3c:	ret    
  40cb3d:	jge    0x40cb4e
  40cb3f:	mov    ss,WORD PTR [ecx+0x3a]
  40cb42:	stos   BYTE PTR es:[edi],al
  40cb43:	scas   al,BYTE PTR es:[edi]
  40cb44:	(bad)  
  40cb45:	loopne 0x40cb82
  40cb47:	push   ebx
  40cb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb49:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb4b:	pop    ds
  40cb4c:	or     edx,edi
  40cb4e:	xor    ah,BYTE PTR [eax-0x27]
  40cb51:	pop    esi
  40cb52:	test   dl,dl
  40cb54:	sbb    eax,0x678901f8
  40cb59:	pop    esp
  40cb5a:	setb   BYTE PTR [eax+0x53770a1f]
  40cb61:	hlt    
  40cb62:	nop
  40cb63:	rcr    BYTE PTR [esi-0x54],cl
  40cb66:	ds out 0xd9,eax
  40cb69:	xchg   esi,eax
  40cb6a:	ja     0x40cba8
  40cb6c:	stos   DWORD PTR es:[edi],eax
  40cb6d:	test   eax,0x90cc530b
  40cb72:	test   edi,ebx
  40cb74:	adc    BYTE PTR [esi-0x3ec50c6b],bh
  40cb7a:	outs   dx,DWORD PTR ds:[esi]
  40cb7b:	mov    al,0xfe
  40cb7d:	test   BYTE PTR [ebx-0x5d],dh
  40cb80:	ds jmp 0x40cbcf
  40cb83:	or     DWORD PTR [ebp-0x5c9131cf],esi
  40cb89:	xchg   ebp,eax
  40cb8a:	xchg   edx,eax
  40cb8b:	push   esp
  40cb8c:	fs je  0x40cb4d
  40cb8f:	shl    ebx,1
  40cb91:	fisubr WORD PTR [ecx+0x63]
  40cb94:	xchg   edx,eax
  40cb95:	in     al,0xa2
  40cb97:	cmp    al,0xff
  40cb99:	or     esi,eax
  40cb9b:	mov    edx,0xb255d60a
  40cba0:	dec    ebp
  40cba1:	cmp    ch,bh
  40cba3:	shl    BYTE PTR ds:0x622f03b,1
  40cba9:	into   
  40cbaa:	arpl   WORD PTR [edi-0x718124b4],cx
  40cbb0:	sub    ch,bh
  40cbb2:	(bad)  
  40cbb3:	mov    cl,0xa3
  40cbb5:	fisub  DWORD PTR [esi+ecx*4+0x5909a723]
  40cbbc:	fidivr DWORD PTR [ebx-0x67]
  40cbbf:	sub    ebx,DWORD PTR [edi-0x39a2310]
  40cbc5:	out    0x23,al
  40cbc7:	loop   0x40cb94
  40cbc9:	aam    0xf1
  40cbcb:	push   0xb
  40cbcd:	ficomp WORD PTR [edi-0x514b23d0]
  40cbd3:	(bad)  
  40cbd4:	jae    0x40cbcf
  40cbd6:	sbb    al,0xa4
  40cbd8:	jl     0x40cc30
  40cbda:	icebp  
  40cbdb:	imul   esi,DWORD PTR [ecx],0x3bff6f40
  40cbe1:	sub    al,0x9f
  40cbe3:	dec    edi
  40cbe4:	jbe    0x40cc18
  40cbe6:	dec    ecx
  40cbe7:	rcr    DWORD PTR [ebp-0x1a647c09],1
  40cbed:	mov    cl,0xb1
  40cbef:	pusha  
  40cbf0:	dec    esi
  40cbf1:	cmp    eax,0xf09ba622
  40cbf6:	aaa    
  40cbf7:	dec    edi
  40cbf8:	push   ebp
  40cbf9:	sub    dh,BYTE PTR [ebp+0x4f46e95a]
  40cbff:	js     0x40cc24
  40cc01:	or     al,0x26
  40cc03:	mov    DWORD PTR [eax],esp
  40cc05:	enter  0xa0ac,0x1e
  40cc09:	xlat   BYTE PTR ds:[ebx]
  40cc0a:	jnp    0x40cbce
  40cc0c:	fiadd  WORD PTR [ecx+0xd]
  40cc0f:	dec    BYTE PTR [ebx+esi*8+0x3a]
  40cc13:	sub    dl,BYTE PTR ds:0xfc7d0406
  40cc19:	pushf  
  40cc1a:	inc    esp
  40cc1b:	pop    edi
  40cc1c:	dec    esi
  40cc1d:	lods   eax,DWORD PTR ds:[esi]
  40cc1e:	stos   BYTE PTR es:[edi],al
  40cc1f:	pop    edi
  40cc20:	daa    
  40cc21:	cmp    ah,al
  40cc23:	inc    edi
  40cc24:	pop    edi
  40cc25:	lock pop esi
  40cc27:	xor    ebx,DWORD PTR ds:0x16a2492b
  40cc2d:	adc    al,0xde
  40cc2f:	cdq    
  40cc30:	adc    bl,BYTE PTR [edx+0x51f44b25]
  40cc36:	mov    esp,0x3ec63d48
  40cc3b:	sbb    al,0x9a
  40cc3d:	sbb    BYTE PTR [esi-0x2ffb66a9],dh
  40cc43:	mov    ah,0x58
  40cc45:	(bad)  
  40cc46:	out    dx,eax
  40cc47:	pop    eax
  40cc48:	add    esp,DWORD PTR [eax+0x126f8cf0]
  40cc4e:	add    BYTE PTR [edx+eiz*4+0x58],bh
  40cc52:	aaa    
  40cc53:	ja     0x40cca8
  40cc55:	pop    eax
  40cc56:	fs xor di,sp
  40cc5a:	cld    
  40cc5b:	jbe    0x40cc84
  40cc5d:	xor    edi,esi
  40cc5f:	cmp    DWORD PTR ds:0xbda033e9,esi
  40cc65:	ss pusha 
  40cc67:	mov    DWORD PTR [edi+ebp*4],ebx
  40cc6a:	in     al,0x30
  40cc6c:	jmp    0x40cc0a
  40cc6e:	pop    ss
  40cc6f:	gs push edx
  40cc71:	lds    ebp,FWORD PTR [edi+0xa4a8f71]
  40cc77:	loop   0x40cc78
  40cc79:	xor    eax,0xed536dc9
  40cc7e:	mov    esp,0xf089d4c8
  40cc83:	cmp    esi,edx
  40cc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc86:	adc    edx,DWORD PTR [eax-0x449c5ad]
  40cc8c:	jge    0x40ccc1
  40cc8e:	call   0x274cd50d
  40cc93:	add    eax,0x6416b92a
  40cc98:	or     al,0x56
  40cc9a:	and    ecx,DWORD PTR [esi-0x64163aba]
  40cca0:	sti    
  40cca1:	mov    ss,ebx
  40cca3:	mov    ecx,0x1bea1904
  40cca8:	and    dl,BYTE PTR [edi+0x3ec603b7]
  40ccae:	push   ds
  40ccaf:	jg     0x40ccef
  40ccb1:	sub    DWORD PTR [eax-0x58],esp
  40ccb4:	jecxz  0x40cc9d
  40ccb6:	xor    dl,al
  40ccb8:	pop    esp
  40ccb9:	mov    ds:0xca8a9d22,eax
  40ccbe:	test   bl,ch
  40ccc0:	(bad)  
  40ccc1:	cmp    ebx,DWORD PTR [edi+0x7dd39567]
  40ccc7:	mov    edi,0xde068918
  40cccc:	pop    ss
  40cccd:	mov    ebx,0x5c9d42ef
  40ccd2:	mov    ecx,0x2572a77e
  40ccd7:	jmp    0x8bcc:0xf2c20151
  40ccde:	jle    0x40cd4a
  40cce0:	lahf   
  40cce1:	ds (bad) 
  40cce3:	(bad)  
  40cce5:	mov    cl,BYTE PTR [ecx-0x67da93c9]
  40cceb:	clc    
  40ccec:	dec    esp
  40cced:	out    0x81,eax
  40ccef:	mov    ch,BYTE PTR [esi+edx*8-0x58]
  40ccf3:	mov    al,0x78
  40ccf5:	mov    ch,0x99
  40ccf7:	mov    edi,0xf9c7f081
  40ccfc:	cld    
  40ccfd:	mov    edi,0xd404408e
  40cd02:	iret   
  40cd03:	clc    
  40cd04:	fistp  QWORD PTR [edx+0x34c11732]
  40cd0a:	xchg   ebx,eax
  40cd0b:	push   ebx
  40cd0c:	xchg   ecx,eax
  40cd0d:	cmp    ebp,esi
  40cd0f:	hlt    
  40cd10:	mov    eax,ecx
  40cd12:	add    DWORD PTR [eax-0x6e46e968],edx
  40cd18:	(bad)  
  40cd19:	cld    
  40cd1a:	fmul   st(0),st
  40cd1c:	sub    cl,ah
  40cd1e:	(bad)  
  40cd1f:	mov    ch,0x26
  40cd21:	cmp    DWORD PTR [edx+0x63],esp
  40cd24:	scas   al,BYTE PTR es:[edi]
  40cd25:	cmc    
  40cd26:	popa   
  40cd27:	pop    edi
  40cd28:	popa   
  40cd29:	jg     0x40cd42
  40cd2b:	je     0x40cd95
  40cd2d:	loope  0x40cd1b
  40cd2f:	xor    edi,DWORD PTR [edi-0x10ed7687]
  40cd35:	aam    0x95
  40cd37:	jl     0x40ccdd
  40cd39:	xchg   edi,eax
  40cd3a:	mov    bl,0xca
  40cd3c:	lods   al,BYTE PTR ds:[esi]
  40cd3d:	(bad)  
  40cd3e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd40:	pop    ecx
  40cd41:	or     al,0x3a
  40cd43:	fwait
  40cd44:	aad    0xb2
  40cd46:	or     DWORD PTR [eax],ebp
  40cd48:	mov    ah,0x0
  40cd4a:	xchg   edi,eax
  40cd4b:	jmp    0xbb39ea15
  40cd50:	or     eax,0x7cc3c759
  40cd55:	cs dec edx
  40cd57:	lods   al,BYTE PTR ds:[esi]
  40cd58:	aaa    
  40cd59:	leave  
  40cd5a:	(bad)  
  40cd5b:	pop    esi
  40cd5c:	jae    0x40cd28
  40cd5e:	dec    esp
  40cd5f:	cmp    al,0xd8
  40cd61:	loope  0x40cdc9
  40cd63:	jg     0x40cd47
  40cd65:	icebp  
  40cd66:	sub    esp,DWORD PTR [ecx-0x3b4867e2]
  40cd6c:	ss xchg edx,eax
  40cd6e:	(bad)  
  40cd6f:	cmp    eax,0xe5980d4
  40cd74:	ret    
  40cd75:	inc    edx
  40cd76:	in     eax,0xce
  40cd78:	(bad)  
  40cd79:	mov    esi,0xd6ffb7c7
  40cd7e:	pop    edx
  40cd7f:	fs das 
  40cd81:	sub    edx,DWORD PTR [esi]
  40cd83:	mov    dh,0x72
  40cd85:	stos   BYTE PTR es:[edi],al
  40cd86:	dec    ebp
  40cd87:	mov    eax,0x7ec5e31c
  40cd8c:	jle    0x40cdb8
  40cd8e:	sub    ebx,ebp
  40cd90:	lahf   
  40cd91:	pusha  
  40cd92:	jmp    0x54c583f1
  40cd97:	push   edi
  40cd98:	inc    ecx
  40cd99:	push   eax
  40cd9a:	lock neg DWORD PTR [ebx+0x67c44e46]
  40cda1:	add    BYTE PTR [ecx+ebx*2],dh
  40cda4:	mov    ds:0xa2af91dc,eax
  40cda9:	pop    esi
  40cdaa:	in     eax,0x12
  40cdac:	lock loop 0x40cd5b
  40cdaf:	dec    eax
  40cdb0:	cli    
  40cdb1:	pop    ebx
  40cdb2:	pop    esp
  40cdb3:	leave  
  40cdb4:	cmp    ebx,DWORD PTR [edx-0x7a]
  40cdb7:	sbb    al,0xd6
  40cdb9:	(bad)  
  40cdba:	pop    eax
  40cdbb:	mov    dh,0x68
  40cdbd:	sti    
  40cdbe:	test   al,0x50
  40cdc0:	dec    edx
  40cdc1:	and    BYTE PTR [edi+0x7f33c82b],0xb7
  40cdc8:	mov    ss,WORD PTR [edi+ebp*1+0x6601b408]
  40cdcf:	adc    al,0xa2
  40cdd1:	mov    cl,0x5c
  40cdd3:	cli    
  40cdd4:	inc    eax
  40cdd5:	inc    edx
  40cdd6:	test   eax,0x75316150
  40cddb:	xor    dh,0xd3
  40cdde:	jmp    0xf2d6:0x63e1394d
  40cde5:	inc    ebx
  40cde6:	retf   0x77d4
  40cde9:	jns    0x40ce0f
  40cdeb:	frstor [ecx-0x1b005292]
  40cdf1:	wrmsr  
  40cdf3:	jp     0x40ce22
  40cdf5:	ret    
  40cdf6:	dec    ebp
  40cdf7:	(bad)  
  40cdf9:	call   0x44cf:0x6a129f83
  40ce00:	adc    al,0x50
  40ce02:	mov    al,0x7
  40ce04:	mov    ebx,0x32f89596
  40ce09:	sbb    al,0xac
  40ce0b:	inc    esi
  40ce0c:	xchg   ebp,eax
  40ce0d:	mov    ecx,0x6f9bdf7
  40ce12:	and    bl,cl
  40ce14:	jmp    0x40ce85
  40ce16:	push   edx
  40ce17:	push   edi
  40ce18:	push   edi
  40ce19:	(bad)  
  40ce1b:	aad    0x3a
  40ce1d:	xchg   ebp,eax
  40ce1e:	stos   DWORD PTR es:[edi],eax
  40ce1f:	sahf   
  40ce20:	sub    eax,DWORD PTR [esi-0x57]
  40ce23:	bswap  ecx
  40ce25:	mov    eax,0x6a17a048
  40ce2a:	push   ds
  40ce2b:	into   
  40ce2c:	sbb    esi,eax
  40ce2e:	js     0x40ce9f
  40ce30:	sub    eax,0x5359cd0b
  40ce35:	ret    0xfc11
  40ce38:	pop    edi
  40ce39:	push   ecx
  40ce3a:	xor    DWORD PTR [eax],edx
  40ce3c:	inc    edi
  40ce3d:	test   eax,0x72dca0cf
  40ce42:	in     eax,dx
  40ce43:	sbb    eax,0x43522ec
  40ce48:	js     0x40ce5b
  40ce4a:	sahf   
  40ce4b:	iret   
  40ce4c:	test   ecx,esi
  40ce4e:	xor    DWORD PTR ds:0x5e33cac8,esp
  40ce54:	nop
  40ce55:	cs fdivr st,st(7)
  40ce58:	jmp    0xb34d1868
  40ce5d:	mov    BYTE PTR [esi+eax*4],ah
  40ce60:	stos   BYTE PTR es:[edi],al
  40ce61:	int    0x4e
  40ce63:	cmc    
  40ce64:	cwde   
  40ce65:	in     eax,dx
  40ce66:	mov    ebp,DWORD PTR [ebx+0x3e75b31c]
  40ce6c:	push   ebx
  40ce6d:	add    esp,DWORD PTR [esi+0x15ceaf81]
  40ce73:	pop    ss
  40ce74:	cmp    eax,DWORD PTR [edx-0x8da28c8]
  40ce7a:	fsubr  QWORD PTR [eax+ecx*8]
  40ce7d:	push   0x4419ed8e
  40ce82:	mov    eax,ds:0xe805bc66
  40ce87:	mov    ah,0xe8
  40ce89:	mov    dh,bh
  40ce8b:	ficom  DWORD PTR [eax+0x74]
  40ce8e:	sbb    ecx,DWORD PTR [edx+0x1b]
  40ce91:	mov    esi,0x892a8b20
  40ce96:	ja     0x40ce56
  40ce98:	(bad)  [ecx+ebx*8]
  40ce9b:	into   
  40ce9c:	(bad)  
  40ce9d:	jge    0x40cf1d
  40ce9f:	jb     0x40ce30
  40cea1:	mov    esp,ds
  40cea3:	and    ebp,DWORD PTR [edi+0x628bf756]
  40cea9:	ja     0x40ce96
  40ceab:	ret    0x8e22
  40ceae:	inc    ebp
  40ceaf:	mov    bh,0x52
  40ceb1:	popa   
  40ceb2:	cmp    al,0xb5
  40ceb4:	hlt    
  40ceb5:	mov    dh,0x59
  40ceb7:	sub    DWORD PTR [esi+0x1f],0x2b88f6e5
  40cebe:	sub    cl,BYTE PTR gs:[ebp+0x52]
  40cec2:	sbb    al,0x8e
  40cec4:	mov    al,ds:0x36b390d1
  40cec9:	push   eax
  40ceca:	push   0x55
  40cecc:	mov    al,BYTE PTR [edx-0x6]
  40cecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced0:	cmp    eax,0xfaea2046
  40ced5:	call   0x21ea:0x84912007
  40cedc:	lods   eax,DWORD PTR ds:[esi]
  40cedd:	adc    dl,bl
  40cedf:	push   esi
  40cee0:	add    al,0x5d
  40cee2:	bound  esp,QWORD PTR [eax+0x38]
  40cee5:	sbb    bh,dl
  40cee7:	mov    eax,ds:0x96cf9f4
  40ceec:	xchg   DWORD PTR [ebp+0x2f],ebp
  40ceef:	popa   
  40cef0:	pop    edi
  40cef1:	mov    WORD PTR [esi],ss
  40cef3:	jecxz  0x40cf0b
  40cef5:	stc    
  40cef6:	(bad)  
  40cef7:	mov    esp,0x466c65
  40cefc:	loope  0x40cf12
  40cefe:	pushf  
  40ceff:	ret    0x7733
  40cf02:	mov    ebp,es
  40cf04:	mov    edi,0xcc2d28e5
  40cf09:	lock xchg ebp,eax
  40cf0b:	push   edi
  40cf0c:	pop    esp
  40cf0d:	ins    DWORD PTR es:[edi],dx
  40cf0e:	lea    esp,[esi]
  40cf10:	push   ss
  40cf11:	sbb    DWORD PTR [edi-0x61aba7ab],ecx
  40cf17:	std    
  40cf18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf19:	jne    0x40cf41
  40cf1b:	add    al,0x14
  40cf1d:	test   BYTE PTR [ecx+ebp*2-0x3cd959b9],ch
  40cf24:	icebp  
  40cf25:	xlat   BYTE PTR ds:[ebx]
  40cf26:	xor    BYTE PTR [ebx],0x5c
  40cf29:	ins    BYTE PTR es:[edi],dx
  40cf2a:	push   esi
  40cf2b:	into   
  40cf2c:	sbb    BYTE PTR [edx+edx*8-0x2f],ah
  40cf30:	mov    dl,0x2d
  40cf32:	xchg   DWORD PTR [esi+0x59],esi
  40cf35:	pop    edx
  40cf36:	out    0x48,eax
  40cf38:	mov    edx,0xc6565a12
  40cf3d:	fdiv   DWORD PTR [edi*2-0x192b55aa]
  40cf44:	inc    ebp
  40cf45:	push   edi
  40cf46:	mov    ds:0x69f444a,eax
  40cf4b:	sub    eax,0x3d297586
  40cf50:	push   ss
  40cf51:	sbb    DWORD PTR [eax],eax
  40cf53:	jge    0x40cf25
  40cf55:	shr    BYTE PTR [ebp-0x66],cl
  40cf58:	cmp    BYTE PTR [ebx],bl
  40cf5a:	les    eax,FWORD PTR [esi-0x7081d8cc]
  40cf60:	mov    BYTE PTR [eax],dh
  40cf62:	mov    al,ds:0xc22e78bc
  40cf67:	or     BYTE PTR [edi+0x21],dl
  40cf6a:	mov    bl,0x82
  40cf6c:	pusha  
  40cf6d:	cdq    
  40cf6e:	in     al,0x29
  40cf70:	clc    
  40cf71:	aaa    
  40cf72:	xchg   esp,eax
  40cf73:	pop    ds
  40cf74:	test   DWORD PTR [eax+0x50],0x72449fc
  40cf7b:	push   edx
  40cf7c:	xchg   esi,eax
  40cf7d:	adc    DWORD PTR ds:0x982459d2,ecx
  40cf83:	mov    ebp,0xf6e68a6f
  40cf88:	push   0x47
  40cf8a:	lock mov DWORD PTR [esi+ebp*1+0x1d40e842],edi
  40cf92:	mov    WORD PTR [eax-0x63],cs
  40cf95:	popa   
  40cf96:	add    BYTE PTR [edi],cl
  40cf98:	cmp    bh,BYTE PTR [ebx+0x31aef9e5]
  40cf9e:	es mov esi,0x2c272225
  40cfa4:	sbb    ah,dl
  40cfa6:	mov    edi,0x96efa81
  40cfab:	loop   0x40cf2f
  40cfad:	or     al,0x29
  40cfaf:	ret    0x5ffb
  40cfb2:	pop    ebp
  40cfb3:	dec    esi
  40cfb4:	sar    DWORD PTR [ebx+0x2ebca752],cl
  40cfba:	cs jbe 0x40d00f
  40cfbd:	xchg   ebp,eax
  40cfbe:	popf   
  40cfbf:	jns    0x40d01b
  40cfc1:	std    
  40cfc2:	xor    ah,BYTE PTR [edi+0xb45ae71]
  40cfc8:	mov    ecx,0xae269d79
  40cfcd:	jmp    0x8038:0x472366a0
  40cfd4:	xchg   ebp,eax
  40cfd5:	cmc    
  40cfd6:	dec    eax
  40cfd7:	mov    bh,0x91
  40cfd9:	fwait
  40cfda:	dec    ebp
  40cfdb:	jecxz  0x40cfb1
  40cfdd:	xchg   BYTE PTR [ebx+0x7a311698],ah
  40cfe3:	fs hlt 
  40cfe5:	push   ecx
  40cfe6:	je     0x40cfe2
  40cfe8:	jmp    0x40cfec
  40cfea:	in     al,dx
  40cfeb:	lods   al,BYTE PTR ds:[esi]
  40cfec:	and    DWORD PTR [ebp-0x778a8e37],ebp
  40cff2:	push   0x13b994bd
  40cff7:	or     al,0x95
  40cff9:	fcomp  QWORD PTR ds:0x9c2e1616
  40d000:	stos   BYTE PTR es:[edi],al
  40d001:	jmp    0xcba6:0x504daf0d
  40d008:	xor    edx,eax
  40d00a:	fisttp DWORD PTR [edx-0x49e2ffd9]
  40d010:	(bad)  
  40d011:	scas   eax,DWORD PTR es:[edi]
  40d012:	mov    al,0x3
  40d014:	dec    ecx
  40d015:	cmp    eax,0xe226dc2a
  40d01a:	inc    esp
  40d01b:	imul   ecx,DWORD PTR [edx],0x77252bfc
  40d021:	push   esi
  40d022:	iret   
  40d023:	out    0x59,al
  40d025:	cmp    ebp,DWORD PTR [ebx-0x1b]
  40d028:	xchg   edx,eax
  40d029:	inc    eax
  40d02a:	sbb    bh,BYTE PTR ds:0x7b9f898d
  40d030:	fcomp  DWORD PTR [esi+0x152cc861]
  40d036:	push   ebp
  40d037:	adc    al,0x19
  40d039:	pop    esi
  40d03a:	js     0x40d031
  40d03c:	adc    DWORD PTR [ebx],ebx
  40d03e:	test   DWORD PTR [edx-0x24],edx
  40d041:	push   ds
  40d042:	retf   
  40d043:	loop   0x40d06c
  40d045:	dec    eax
  40d046:	cs sbb ebx,ebx
  40d049:	sahf   
  40d04a:	add    DWORD PTR [edx-0x72a0e70c],0xf0b238ac
  40d054:	dec    edx
  40d055:	cwde   
  40d056:	mov    eax,ds:0x6bd2df0a
  40d05b:	hlt    
  40d05c:	jbe    0x40d046
  40d05e:	jle    0x40d0d8
  40d060:	stc    
  40d061:	das    
  40d062:	sub    ch,BYTE PTR [edi]
  40d064:	sti    
  40d065:	repnz stos BYTE PTR es:[edi],al
  40d067:	int    0xe2
  40d069:	inc    esi
  40d06a:	into   
  40d06b:	xchg   edx,eax
  40d06c:	retf   0xe80c
  40d06f:	out    dx,al
  40d070:	div    DWORD PTR [ecx+0x5c245def]
  40d076:	push   0x55f0c7b9
  40d07b:	sub    BYTE PTR [edx-0x22],dh
  40d07e:	aas    
  40d07f:	mov    eax,ds:0xf7a3f720
  40d084:	std    
  40d085:	xlat   BYTE PTR ds:[ebx]
  40d086:	push   edi
  40d087:	mov    ch,0x67
  40d089:	xchg   esp,eax
  40d08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d08b:	or     esp,DWORD PTR ds:[eax-0x20]
  40d08f:	pop    ebx
  40d090:	jnp    0x40d05c
  40d092:	(bad)  
  40d093:	mov    al,0xb6
  40d095:	adc    bh,BYTE PTR gs:[edi+0x7c4dbabf]
  40d09c:	inc    ecx
  40d09d:	das    
  40d09e:	adc    bh,BYTE PTR [ebx-0x10f24271]
  40d0a4:	pop    eax
  40d0a5:	adc    ebp,DWORD PTR [edi-0x6ac012ff]
  40d0ab:	xchg   cl,dh
  40d0ad:	jl     0x40d082
  40d0af:	std    
  40d0b0:	in     al,0x5
  40d0b2:	or     esp,DWORD PTR [eax]
  40d0b4:	dec    ebx
  40d0b5:	jno    0x40d105
  40d0b7:	mov    DWORD PTR [edi+eax*8-0xeceb995],edx
  40d0be:	adc    DWORD PTR [ebp+0x68242439],edi
  40d0c4:	or     BYTE PTR [ecx+0x76ed101f],ch
  40d0ca:	lods   al,BYTE PTR ds:[esi]
  40d0cb:	sar    BYTE PTR [edx+ebp*1-0xc],0xb0
  40d0d0:	test   eax,0x46dffae4
  40d0d5:	mov    al,bl
  40d0d7:	jae    0x40d118
  40d0d9:	fistp  WORD PTR [edi+esi*2]
  40d0dc:	dec    ebx
  40d0dd:	ins    DWORD PTR es:[edi],dx
  40d0de:	es ret 
  40d0e0:	inc    DWORD PTR [edi]
  40d0e2:	pop    ebx
  40d0e3:	mov    es,WORD PTR [ebp-0x697bd3fb]
  40d0e9:	outs   dx,BYTE PTR ds:[esi]
  40d0ea:	jb     0x40d12f
  40d0ec:	lahf   
  40d0ed:	stos   BYTE PTR es:[edi],al
  40d0ee:	out    dx,al
  40d0ef:	(bad)  
  40d0f3:	inc    ecx
  40d0f4:	lods   al,BYTE PTR ds:[esi]
  40d0f5:	cld    
  40d0f6:	repnz mov bl,0x21
  40d0f9:	jl     0x40d176
  40d0fb:	mov    WORD PTR [esi+0x5a],fs
  40d0fe:	inc    esi
  40d0ff:	mov    ah,0xd2
  40d101:	xchg   ecx,eax
  40d102:	pop    ecx
  40d103:	jae    0x40d0af
  40d105:	(bad)  
  40d106:	retf   
  40d107:	into   
  40d108:	xchg   ebp,eax
  40d109:	jae    0x40d18a
  40d10b:	shl    ebx,1
  40d10d:	push   ss
  40d10e:	js     0x40d14a
  40d110:	in     al,0x6f
  40d112:	rol    BYTE PTR [ebx],0x33
  40d115:	sbb    DWORD PTR [ebx-0x77],esp
  40d118:	mov    edi,0x5ef75f42
  40d11d:	lods   al,BYTE PTR ds:[esi]
  40d11e:	in     al,dx
  40d11f:	leave  
  40d120:	clc    
  40d121:	(bad)  
  40d123:	sbb    DWORD PTR [eax],ecx
  40d125:	adc    ecx,ecx
  40d127:	push   ebx
  40d128:	shl    edi,cl
  40d12a:	shl    BYTE PTR [ecx],0x16
  40d12d:	xchg   ecx,eax
  40d12e:	loopne 0x40d17c
  40d130:	adc    eax,0x38
  40d133:	jbe    0x40d1a4
  40d135:	cmp    esi,DWORD PTR [esi+edi*2+0x17]
  40d139:	ins    DWORD PTR es:[edi],dx
  40d13a:	test   al,0xdf
  40d13c:	mov    edi,0x72cc499f
  40d141:	not    DWORD PTR [esi+0x48518565]
  40d147:	push   esp
  40d148:	sub    al,0xe2
  40d14a:	cmp    DWORD PTR [eax-0x24],edi
  40d14d:	inc    esi
  40d14e:	adc    bl,bl
  40d150:	out    dx,eax
  40d151:	clc    
  40d152:	mov    al,0xbe
  40d154:	cdq    
  40d155:	sub    ebp,edi
  40d157:	fst    QWORD PTR [edx+0x59666fb3]
  40d15d:	ret    0x7a38
  40d160:	mov    cl,0x4b
  40d162:	mov    ch,0x10
  40d164:	mov    esi,0xe07575ef
  40d169:	jg     0x40d147
  40d16b:	mov    cl,BYTE PTR [eax-0xb4bc56b]
  40d171:	call   0x7d1ecb31
  40d176:	pushf  
  40d177:	fcmovne st,st(1)
  40d179:	push   edi
  40d17a:	rcl    DWORD PTR [edi-0x3c1c751b],0x37
  40d181:	ret    
  40d182:	cld    
  40d183:	jnp    0x40d1fb
  40d185:	mov    ds:0x6f91d43a,al
  40d18a:	out    dx,al
  40d18b:	cmp    al,0x23
  40d18d:	dec    eax
  40d18e:	ins    DWORD PTR es:[edi],dx
  40d18f:	mov    dl,0x70
  40d191:	aam    0x6d
  40d193:	lock mov BYTE PTR ds:[edx-0x61e9e82c],cl
  40d19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19c:	cmp    al,0x8a
  40d19e:	sub    DWORD PTR [ecx+ecx*8],esi
  40d1a1:	dec    ebx
  40d1a2:	test   al,0xa3
  40d1a4:	push   esi
  40d1a5:	fstp   DWORD PTR [ecx+0xbb0506e]
  40d1ab:	popf   
  40d1ac:	xchg   esp,eax
  40d1ad:	mov    bl,0x76
  40d1af:	sub    edx,DWORD PTR [eax-0x3c]
  40d1b2:	lods   al,BYTE PTR ds:[esi]
  40d1b3:	fwait
  40d1b4:	add    BYTE PTR [ebx],0x5e
  40d1b7:	fs stos DWORD PTR es:[edi],eax
  40d1b9:	xlat   BYTE PTR ds:[ebx]
  40d1ba:	fwait
  40d1bb:	in     al,0xc5
  40d1bd:	(bad)
  40d1c1:	es pop esi
  40d1c3:	aam    0x5f
  40d1c5:	cmp    eax,0x2aa20bc1
  40d1ca:	enter  0x4677,0x92
  40d1ce:	push   esi
  40d1cf:	inc    ecx
  40d1d0:	cmp    BYTE PTR [edi-0x7af145e9],bl
  40d1d6:	ins    DWORD PTR es:[edi],dx
  40d1d7:	mov    ebp,cs
  40d1d9:	idiv   BYTE PTR [ebx-0x4f426a0]
  40d1df:	jno    0x40d211
  40d1e1:	push   ds
  40d1e2:	loope  0x40d184
  40d1e4:	jge    0x40d261
  40d1e6:	ficom  WORD PTR [ebp+0x58]
  40d1e9:	dec    ebp
  40d1ea:	dec    edi
  40d1eb:	imul   esp,DWORD PTR [ebx],0x5c
  40d1ee:	inc    edi
  40d1ef:	or     ebx,DWORD PTR [ebx]
  40d1f1:	test   BYTE PTR [ebp+edx*4+0x12],0x24
  40d1f6:	iret   
  40d1f7:	mov    ds:0xd1c7e3f9,al
  40d1fc:	sbb    edi,ebx
  40d1fe:	cli    
  40d1ff:	dec    edx
  40d200:	es dec esp
  40d202:	pop    esi
  40d203:	ins    DWORD PTR es:[edi],dx
  40d204:	mov    ebx,0x9995887f
  40d209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d20a:	mov    al,ds:0x3e38490f
  40d20f:	sbb    al,bl
  40d211:	sar    DWORD PTR [esi],cl
  40d213:	ror    DWORD PTR [edx-0xd42da6a],cl
  40d219:	cdq    
  40d21a:	xchg   DWORD PTR [ebp+0x68b210f4],ebx
  40d220:	ret    0x986
  40d223:	jl     0x40d279
  40d225:	in     al,dx
  40d226:	test   DWORD PTR [ebx-0x8],ebp
  40d229:	jbe    0x40d20f
  40d22b:	mov    ecx,0xa7028865
  40d230:	stc    
  40d231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d232:	mov    eax,ds:0xd5f710e9
  40d237:	jnp    0x40d1ca
  40d239:	mov    ebx,0xf9541221
  40d23e:	sbb    eax,0xbe8a813d
  40d243:	arpl   WORD PTR ds:0x103aa2af,si
  40d249:	aad    0x5c
  40d24b:	mov    esp,DWORD PTR [ecx+eax*2+0x7c81839e]
  40d252:	xchg   esp,eax
  40d253:	(bad)  
  40d255:	inc    ebx
  40d256:	sub    eax,0xd5aa3a8c
  40d25b:	retf   0xac83
  40d25e:	mov    dh,0x93
  40d260:	push   ss
  40d261:	and    eax,0x23634d8
  40d266:	sbb    eax,DWORD PTR [ebx+ecx*4+0x962136d]
  40d26d:	hlt    
  40d26e:	or     al,0x60
  40d270:	sbb    al,0x81
  40d272:	pushf  
  40d273:	(bad)  
  40d274:	mov    al,ds:0x52959406
  40d279:	dec    ecx
  40d27a:	scas   eax,DWORD PTR es:[edi]
  40d27b:	clc    
  40d27c:	or     ch,BYTE PTR [esi+0x23734983]
  40d282:	retf   0x2824
  40d285:	fistp  DWORD PTR [ecx+0x10]
  40d288:	std    
  40d289:	or     DWORD PTR [ebp+0x48],esp
  40d28c:	push   eax
  40d28d:	aaa    
  40d28e:	fmul   QWORD PTR [edx]
  40d290:	cmp    al,0x3b
  40d292:	les    esi,FWORD PTR [edx+0x60]
  40d295:	aas    
  40d296:	(bad)  
  40d298:	adc    al,0xc
  40d29a:	aaa    
  40d29b:	div    DWORD PTR [edx+ebp*2+0x43]
  40d29f:	inc    ebp
  40d2a0:	add    DWORD PTR [ecx+0x2a5a416a],0xffffffd7
  40d2a7:	sub    eax,DWORD PTR [ebp+0x444f9a71]
  40d2ad:	call   0x18844b90
  40d2b2:	test   BYTE PTR [edi],ch
  40d2b4:	int    0xda
  40d2b6:	push   esi
  40d2b7:	rcr    bl,0x38
  40d2ba:	mov    ds,WORD PTR [eax]
  40d2bc:	dec    esp
  40d2bd:	jo     0x40d28c
  40d2bf:	and    edi,DWORD PTR [ecx+0x7d]
  40d2c2:	bound  ebp,QWORD PTR [ebx]
  40d2c4:	call   0x5968:0x3bc9c785
  40d2cb:	or     al,0xf9
  40d2cd:	xlat   BYTE PTR ds:[ebx]
  40d2ce:	(bad)
  40d2d2:	mov    bl,0xb7
  40d2d4:	lahf   
  40d2d5:	or     esp,edx
  40d2d7:	mov    ds:0x4ee5ac91,al
  40d2dc:	call   0x67791008
  40d2e1:	leave  
  40d2e2:	or     eax,0xd5722462
  40d2e7:	sbb    edi,DWORD PTR ds:0x45b7ffda
  40d2ed:	xor    edx,DWORD PTR ds:0xd5f1dc3a
  40d2f3:	adc    al,0xd1
  40d2f5:	jae    0x40d2bc
  40d2f7:	and    ebx,edi
  40d2f9:	test   bl,ch
  40d2fb:	adc    al,0xde
  40d2fd:	mov    esp,0xc9a7b21b
  40d302:	pop    ebp
  40d303:	cs aad 0xe1
  40d306:	repnz sbb ah,BYTE PTR [ecx+0x38ab9190]
  40d30d:	xlat   BYTE PTR ds:[ebx]
  40d30e:	or     dl,bl
  40d310:	push   edx
  40d311:	sub    ch,BYTE PTR [edi*8+0x3db10d6d]
  40d318:	loop   0x40d2ca
  40d31a:	or     DWORD PTR [edx-0x161396e8],esp
  40d320:	or     ecx,DWORD PTR [eax+0x6f]
  40d323:	push   eax
  40d324:	add    eax,DWORD PTR [eax+ebx*4+0x2f]
  40d328:	(bad)  
  40d329:	dec    ebx
  40d32a:	mul    DWORD PTR [ecx+0x7d]
  40d32d:	lods   al,BYTE PTR ds:[esi]
  40d32e:	mov    ah,0xc6
  40d330:	push   esi
  40d331:	adc    eax,DWORD PTR [ebp+0x4c]
  40d334:	and    BYTE PTR [ebx+0x11d524a5],0xb3
  40d33b:	ret    
  40d33c:	pop    ss
  40d33d:	xor    eax,DWORD PTR [esi+edi*4+0x56]
  40d341:	push   edx
  40d342:	call   0x7f55:0x62f4ee01
  40d349:	push   ds
  40d34a:	cli    
  40d34b:	ret    
  40d34c:	inc    esi
  40d34d:	or     BYTE PTR [esi-0x6f],dl
  40d350:	push   0x6c
  40d352:	in     al,dx
  40d353:	lea    eax,[ecx-0x4a]
  40d356:	(bad)  
  40d357:	out    0xaf,eax
  40d359:	cld    
  40d35a:	xchg   BYTE PTR [eax-0x15],dl
  40d35d:	sbb    ch,BYTE PTR [esi]
  40d35f:	fmul   QWORD PTR [ebx-0x6e]
  40d362:	jl     0x40d33a
  40d364:	mov    ebp,0xb5f2f7dd
  40d369:	mov    al,0xab
  40d36b:	jb     0x40d3a1
  40d36d:	cwde   
  40d36e:	mov    ds,WORD PTR [esi-0x5c58a2e]
  40d374:	sub    al,0x7b
  40d376:	lahf   
  40d377:	int3   
  40d378:	dec    esp
  40d379:	mov    ds:0xfd187e0e,al
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	test   eax,0xb262f41e
  40d3d5:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d3db:	or     edi,0xffffff88
  40d3de:	mov    eax,DWORD PTR [edi+0x17]
  40d3e1:	xor    ecx,DWORD PTR [ebp+0x43d88c9a]
  40d3e7:	fdivr  DWORD PTR [esi]
  40d3e9:	lods   eax,DWORD PTR ds:[esi]
  40d3ea:	sbb    eax,ebx
  40d3ec:	pop    es
  40d3ed:	das    
  40d3ee:	retf   0xbc1b
  40d3f1:	(bad)  
  40d3f2:	in     al,0x16
  40d3f4:	cmc    
  40d3f5:	pop    ebp
  40d3f6:	add    bh,BYTE PTR [eax+0x3ee9db55]
  40d3fc:	pusha  
  40d3fd:	jg     0x40d406
  40d3ff:	int3   
  40d400:	nop
  40d401:	pop    ebx
  40d402:	mov    ecx,0x96e7ff20
  40d407:	dec    edi
  40d408:	sbb    DWORD PTR [edx],edx
  40d40a:	add    ah,bl
  40d40c:	test   al,0x5e
  40d40e:	jg     0x40d3d3
  40d410:	aas    
  40d411:	adc    eax,0x40b8a129
  40d416:	in     al,dx
  40d417:	jb     0x40d41b
  40d419:	mov    cl,0x54
  40d41b:	data16 add dl,BYTE PTR [edi]
  40d41e:	addr16 clc 
  40d420:	sub    DWORD PTR [ebx],ebx
  40d422:	push   ecx
  40d423:	and    eax,0x9f07bc47
  40d428:	stos   DWORD PTR es:[edi],eax
  40d429:	and    al,cl
  40d42b:	mov    edx,0x14297a9f
  40d430:	sub    ecx,esi
  40d432:	jmp    0xa3d873f8
  40d437:	jg     0x40d467
  40d439:	dec    ebx
  40d43a:	sub    DWORD PTR [ecx],edx
  40d43c:	js     0x40d411
  40d43e:	or     BYTE PTR [eax+0x468a0f02],dl
  40d444:	ret    0x2811
  40d447:	sbb    DWORD PTR [ebp-0x3b],ecx
  40d44a:	test   DWORD PTR ds:0x1bf0e216,esp
  40d450:	imul   eax,DWORD PTR [eax+0x4f0ba16a],0xffffff9a
  40d457:	(bad)  
  40d458:	cmp    BYTE PTR ds:0x7641caf3,bh
  40d45e:	push   ebp
  40d45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d460:	mov    eax,ds:0x5e3ffb04
  40d465:	jg     0x40d4bb
  40d467:	jno    0x40d482
  40d469:	or     dh,BYTE PTR [ebx+0x1e]
  40d46c:	lock push 0x49231926
  40d472:	loopne 0x40d482
  40d474:	cli    
  40d475:	ins    BYTE PTR es:[edi],dx
  40d476:	mov    BYTE PTR [edx+0x104804bf],cl
  40d47c:	push   ss
  40d47d:	mov    ds:0xa0bc90b2,eax
  40d482:	push   ss
  40d483:	out    dx,al
  40d484:	in     eax,0x8d
  40d486:	or     eax,0x747362fd
  40d48b:	inc    ecx
  40d48c:	and    al,BYTE PTR [eax]
  40d48e:	fnstsw WORD PTR [edi+0x6f]
  40d491:	test   al,0xaa
  40d493:	jns    0x40d4ba
  40d495:	xchg   esp,eax
  40d496:	cmp    DWORD PTR [ebx],esi
  40d498:	pop    ecx
  40d499:	dec    esp
  40d49a:	out    dx,eax
  40d49b:	jbe    0x40d4c6
  40d49d:	mov    dl,0x28
  40d49f:	jb     0x40d48a
  40d4a1:	test   DWORD PTR [ebp-0x71],ecx
  40d4a4:	pop    esi
  40d4a5:	pop    edi
  40d4a6:	in     al,dx
  40d4a7:	test   al,0xa6
  40d4a9:	retf   0xb5fa
  40d4ac:	fdiv   DWORD PTR [ecx+0x4832eab6]
  40d4b2:	loopne 0x40d4c2
  40d4b4:	inc    ebp
  40d4b5:	lock out dx,al
  40d4b7:	inc    esi
  40d4b8:	sub    eax,0x2d7be6ea
  40d4bd:	mov    ebx,0xc610c37f
  40d4c2:	lds    edi,FWORD PTR [eax+0x56]
  40d4c5:	mov    bl,0xae
  40d4c7:	lds    ebx,FWORD PTR [ebx+esi*4-0x26885068]
  40d4ce:	sub    esi,esi
  40d4d0:	add    BYTE PTR [eax+edx*2+0x37299f49],ah
  40d4d7:	cmc    
  40d4d8:	pop    es
  40d4d9:	and    DWORD PTR [eax-0x6a7ef124],ebx
  40d4df:	fild   DWORD PTR [ebx*2-0x3e61fa5e]
  40d4e6:	sbb    ecx,DWORD PTR [edi-0x5e531192]
  40d4ec:	xor    al,0x49
  40d4ee:	popf   
  40d4ef:	mov    ebp,DWORD PTR [edi+eiz*2+0x55a7788a]
  40d4f6:	outs   dx,DWORD PTR ds:[esi]
  40d4f7:	pop    ecx
  40d4f8:	cli    
  40d4f9:	fistp  QWORD PTR [ecx]
  40d4fb:	in     eax,0xbf
  40d4fd:	(bad)  
  40d4fe:	jno    0x40d49d
  40d500:	int3   
  40d501:	add    al,0xa5
  40d503:	adc    ch,BYTE PTR [ebx-0x4571f19e]
  40d509:	dec    ebp
  40d50a:	add    ebp,DWORD PTR [eax]
  40d50c:	jnp    0x40d52e
  40d50e:	inc    edi
  40d50f:	or     DWORD PTR [eax+0xf],esi
  40d512:	jecxz  0x40d501
  40d514:	xchg   ecx,eax
  40d515:	push   ecx
  40d516:	cmp    ah,BYTE PTR [edx+0x4df9c04b]
  40d51c:	mov    edx,0x20718576
  40d521:	pushf  
  40d522:	popf   
  40d523:	es in  eax,0x6d
  40d526:	stos   DWORD PTR es:[edi],eax
  40d527:	out    0x91,al
  40d529:	mov    ah,0xee
  40d52b:	hlt    
  40d52c:	pusha  
  40d52d:	push   cs
  40d52e:	adc    dl,BYTE PTR [ebx-0x24]
  40d531:	jge    0x40d58f
  40d533:	xchg   ebp,eax
  40d534:	or     al,0xa3
  40d536:	popa   
  40d537:	pop    edi
  40d538:	inc    ecx
  40d539:	inc    esp
  40d53a:	sti    
  40d53b:	sahf   
  40d53c:	imul   ebx,ebp,0x72
  40d53f:	mov    ch,BYTE PTR [ecx]
  40d541:	imul   eax,DWORD PTR [ecx],0xffffffa0
  40d544:	or     al,0xd
  40d546:	cli    
  40d547:	in     al,0xe1
  40d549:	inc    esp
  40d54a:	popf   
  40d54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d54c:	cmp    BYTE PTR [ebp+0x38],bl
  40d54f:	inc    DWORD PTR [ecx-0x76b43608]
  40d555:	fs in  eax,dx
  40d557:	call   0x9999:0x461506d5
  40d55e:	and    al,0x6b
  40d560:	cmp    al,0xf2
  40d562:	in     eax,0x82
  40d564:	mov    al,ds:0x4ef85e21
  40d569:	rol    BYTE PTR [edi+0x3985e762],cl
  40d56f:	test   BYTE PTR [ecx+edi*4-0xe74f638],ah
  40d576:	shr    DWORD PTR [esi],1
  40d578:	mov    bl,0xf8
  40d57a:	call   0xf7c988f3
  40d57f:	dec    esi
  40d580:	ret    0xffad
  40d583:	outs   dx,BYTE PTR ds:[esi]
  40d584:	push   0xfffffff5
  40d586:	add    DWORD PTR [ebp-0x646b59b2],eax
  40d58c:	aam    0xd9
  40d58e:	cdq    
  40d58f:	inc    ebx
  40d590:	cli    
  40d591:	dec    edx
  40d592:	sub    esi,DWORD PTR [esi+0x2e]
  40d595:	setb   BYTE PTR [edi+0x2e]
  40d599:	hlt    
  40d59a:	add    ebp,DWORD PTR [edx]
  40d59c:	(bad)  
  40d59d:	jne    0x40d60a
  40d59f:	andnps xmm0,XMMWORD PTR [edx]
  40d5a2:	inc    ebp
  40d5a3:	push   ecx
  40d5a4:	cdq    
  40d5a5:	in     eax,0x40
  40d5a7:	in     al,0x18
  40d5a9:	mov    ah,bl
  40d5ab:	bound  ebx,QWORD PTR [edx+0x2ec2f90b]
  40d5b1:	test   BYTE PTR [ebx],0x6e
  40d5b4:	pcmpgtd mm7,QWORD PTR [ecx+ecx*8+0x74]
  40d5b9:	shl    bh,1
  40d5bb:	cdq    
  40d5bc:	loop   0x40d626
  40d5be:	aaa    
  40d5bf:	inc    edx
  40d5c0:	mov    ecx,0xed2d85b4
  40d5c5:	cmp    esp,ebx
  40d5c7:	inc    eax
  40d5c8:	cmp    ebp,DWORD PTR [ebx+eax*8-0x78]
  40d5cc:	cmp    esp,DWORD PTR [edi-0x5d7269d1]
  40d5d2:	jle    0x40d5c5
  40d5d4:	pop    edx
  40d5d5:	dec    edx
  40d5d6:	addr16 fcomip st,st(4)
  40d5d9:	stos   DWORD PTR es:[di],eax
  40d5db:	or     al,0x10
  40d5dd:	retf   
  40d5de:	outs   dx,DWORD PTR ds:[esi]
  40d5df:	int    0xdc
  40d5e1:	pop    ebx
  40d5e2:	or     esi,DWORD PTR [edi-0x24657f89]
  40d5e8:	mov    esi,0x760ba5a6
  40d5ed:	and    eax,0xf118829b
  40d5f2:	xlat   BYTE PTR ds:[ebx]
  40d5f3:	jmp    0xabbb6662
  40d5f8:	adc    dh,BYTE PTR ss:[eax-0x64f8630b]
  40d5ff:	retf   0xf9dd
  40d602:	(bad)  
  40d603:	pop    ds
  40d604:	mov    eax,ds:0x339b5198
  40d609:	ret    
  40d60a:	xchg   ecx,eax
  40d60b:	jmp    0x483c:0xf11f0217
  40d612:	sbb    cl,BYTE PTR [esi]
  40d614:	(bad)  
  40d615:	in     eax,dx
  40d616:	or     eax,0xa364e323
  40d61b:	add    BYTE PTR [esi],0xbd
  40d61e:	aas    
  40d61f:	mov    edx,0x8cc32c7d
  40d624:	outs   dx,DWORD PTR ds:[esi]
  40d625:	dec    esp
  40d626:	data16 cld 
  40d628:	inc    BYTE PTR [ecx]
  40d62a:	add    al,0x55
  40d62c:	fisttp QWORD PTR [esi-0x63]
  40d62f:	test   eax,0x5ff11e17
  40d634:	fs inc esp
  40d636:	mov    bh,BYTE PTR [edi]
  40d638:	jns    0x40d5ed
  40d63a:	shr    DWORD PTR [eax-0x7f],cl
  40d63d:	out    dx,eax
  40d63e:	jnp    0x40d6a8
  40d640:	add    eax,0x2e93fb2f
  40d645:	jmp    0x760f:0x89a44ca3
  40d64c:	cmp    BYTE PTR [esi],cl
  40d64e:	xor    DWORD PTR [esi+esi*2-0x15],edx
  40d652:	pop    eax
  40d653:	push   esi
  40d654:	jmp    0x40d607
  40d656:	mov    BYTE PTR [esi-0x67c9fac0],al
  40d65c:	loopne 0x40d6c0
  40d65e:	imul   BYTE PTR [ecx]
  40d660:	je     0x40d690
  40d662:	test   BYTE PTR [ebx],ch
  40d664:	push   cs
  40d665:	jae    0x40d62b
  40d667:	and    esp,ecx
  40d669:	push   0xffffffe7
  40d66b:	mov    WORD PTR [ebx],fs
  40d66d:	pop    esp
  40d66e:	or     esp,DWORD PTR [edi]
  40d670:	or     ecx,edx
  40d672:	dec    edx
  40d673:	sbb    edi,eax
  40d675:	lds    ebx,FWORD PTR [ebx]
  40d677:	retf   
  40d678:	(bad)  [edx+0x45]
  40d67b:	dec    ecx
  40d67c:	cwde   
  40d67d:	and    DWORD PTR [edi-0x35],0x1eed6402
  40d684:	daa    
  40d685:	jmp    0xa626:0xd5ce947f
  40d68c:	jge    0x40d634
  40d68e:	fstp   st(2)
  40d690:	mov    al,BYTE PTR [ecx]
  40d692:	pop    esi
  40d693:	jge    0x40d63c
  40d695:	push   edx
  40d696:	ins    WORD PTR es:[edi],dx
  40d698:	add    dl,BYTE PTR [ebp-0x1ff00ada]
  40d69e:	pushw  ds
  40d6a0:	lods   eax,DWORD PTR ds:[esi]
  40d6a1:	outs   dx,BYTE PTR ds:[esi]
  40d6a2:	push   esi
  40d6a3:	loope  0x40d660
  40d6a5:	retf   0x3fba
  40d6a8:	stc    
  40d6a9:	push   0x16
  40d6ab:	retf   
  40d6ac:	xlat   BYTE PTR ds:[ebx]
  40d6ad:	idiv   BYTE PTR [edi]
  40d6af:	std    
  40d6b0:	jo     0x40d72b
  40d6b2:	rcl    ebx,0xf6
  40d6b5:	and    BYTE PTR ds:0xe98bb18f,al
  40d6bb:	fcomp  QWORD PTR [ebx-0x38c84302]
  40d6c1:	loope  0x40d6de
  40d6c3:	push   eax
  40d6c4:	div    BYTE PTR [ebx-0x5a76ec8d]
  40d6ca:	shl    ch,cl
  40d6cc:	aad    0x9a
  40d6ce:	mov    eax,0x21ae877a
  40d6d3:	dec    ecx
  40d6d4:	sub    al,0x2f
  40d6d6:	out    dx,al
  40d6d7:	or     ah,BYTE PTR [edx+0x7d]
  40d6da:	pop    ebp
  40d6db:	shl    ebx,cl
  40d6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6de:	cmp    dh,bh
  40d6e0:	loopne 0x40d6a9
  40d6e2:	and    al,0xed
  40d6e4:	xor    al,0x4f
  40d6e6:	test   eax,0x83782e5f
  40d6eb:	inc    esi
  40d6ec:	out    0x38,eax
  40d6ee:	sar    BYTE PTR [esi+0x1d51de4f],cl
  40d6f4:	shufps xmm1,XMMWORD PTR [edx-0x50],0xc4
  40d6f9:	clc    
  40d6fa:	push   ecx
  40d6fb:	shr    DWORD PTR [edi],0x88
  40d6fe:	shl    DWORD PTR [eax-0x53],cl
  40d701:	shl    BYTE PTR [edx],cl
  40d703:	pop    cx
  40d705:	sbb    al,0xf1
  40d707:	push   eax
  40d708:	arpl   WORD PTR [edx-0x40],dx
  40d70b:	jmp    0x40d6f0
  40d70d:	sbb    DWORD PTR [ecx],ebx
  40d70f:	cmp    al,0x77
  40d711:	outs   dx,BYTE PTR ds:[esi]
  40d712:	(bad)  
  40d713:	pmullw mm3,mm3
  40d716:	sub    bh,bl
  40d718:	nop
  40d719:	bound  eax,QWORD PTR [bx+si-0x4]
  40d71d:	int3   
  40d71e:	adc    DWORD PTR [eax-0x5b],esi
  40d721:	adc    al,0x1c
  40d723:	je     0x40d74d
  40d725:	jmp    0x40d6b6
  40d727:	ret    
  40d728:	popa   
  40d729:	mov    al,0x36
  40d72b:	jecxz  0x40d6ce
  40d72d:	cmc    
  40d72e:	push   0xb624136e
  40d733:	xchg   edi,eax
  40d734:	fisubr WORD PTR [ecx]
  40d736:	or     cl,BYTE PTR [edi-0x28]
  40d739:	mov    eax,0x7ce3db5
  40d73e:	test   al,0x51
  40d740:	mov    edx,0x21dd332f
  40d745:	and    al,BYTE PTR [edi]
  40d747:	scas   al,BYTE PTR es:[edi]
  40d748:	sahf   
  40d749:	ins    DWORD PTR es:[edi],dx
  40d74a:	add    ah,BYTE PTR [ebx+0x36f578e9]
  40d750:	jb     0x40d6d2
  40d752:	mov    ds:0x83486cd6,eax
  40d757:	cmp    DWORD PTR [edi+edi*1+0x12f6c28],0x50
  40d75f:	pop    edi
  40d760:	sbb    BYTE PTR [ebx],bl
  40d762:	push   es
  40d763:	jge    0x40d7ce
  40d765:	xor    eax,0x641d0144
  40d76a:	dec    ebp
  40d76b:	jl     0x40d718
  40d76d:	gs out 0xca,al
  40d770:	loop   0x40d7cc
  40d772:	mov    cl,0x8c
  40d774:	(bad)  
  40d775:	retf   
  40d776:	mov    ss,WORD PTR [ecx]
  40d778:	xor    BYTE PTR [esi+0x2f],cl
  40d77b:	cmp    al,0x81
  40d77d:	xor    al,0x44
  40d77f:	and    bh,cl
  40d781:	lods   eax,DWORD PTR ds:[esi]
  40d782:	xor    edi,DWORD PTR [edi]
  40d784:	aaa    
  40d785:	mov    edi,0xce8396cd
  40d78a:	xchg   ebp,eax
  40d78b:	ds push es
  40d78d:	jmp    0x40d71f
  40d78f:	and    DWORD PTR [edx],ebp
  40d791:	ret    0x8a7d
  40d794:	sahf   
  40d795:	mov    al,ds:0x8130854b
  40d79a:	and    bh,BYTE PTR [ecx+0x7c89981e]
  40d7a0:	and    DWORD PTR [edi],ecx
  40d7a2:	out    dx,al
  40d7a3:	and    dh,dl
  40d7a5:	ins    BYTE PTR es:[edi],dx
  40d7a6:	faddp  st(2),st
  40d7a8:	push   ax
  40d7aa:	rcl    DWORD PTR [eax+eax*8],1
  40d7ad:	mov    ebp,0x8ef9821d
  40d7b2:	adc    ch,BYTE PTR [esi+eax*8+0x3b]
  40d7b6:	outs   dx,BYTE PTR ds:[esi]
  40d7b7:	dec    edx
  40d7b8:	cs jl  0x40d7ba
  40d7bb:	call   0x5218991e
  40d7c0:	push   0x929d6c20
  40d7c5:	call   0xdd61e39
  40d7ca:	cdq    
  40d7cb:	(bad)
  40d7ce:	lods   eax,DWORD PTR ds:[esi]
  40d7cf:	loop   0x40d80c
  40d7d1:	ins    BYTE PTR es:[edi],dx
  40d7d2:	xor    al,0xc3
  40d7d4:	jns    0x40d840
  40d7d6:	mov    ebp,0xe723e365
  40d7db:	xor    dl,ch
  40d7dd:	jb     0x40d83e
  40d7df:	ins    DWORD PTR es:[edi],dx
  40d7e0:	pop    esp
  40d7e1:	add    DWORD PTR [edx-0x45d77557],0xd0d4a63d
  40d7eb:	push   edi
  40d7ec:	dec    esp
  40d7ed:	int3   
  40d7ee:	xchg   edi,eax
  40d7ef:	out    dx,eax
  40d7f0:	add    DWORD PTR [edi-0x77],edx
  40d7f3:	and    dh,BYTE PTR [esi-0x77a21e71]
  40d7f9:	push   eax
  40d7fa:	sbb    DWORD PTR [ecx+0x33f69541],ecx
  40d800:	daa    
  40d801:	ja     0x40d7f6
  40d803:	xlat   BYTE PTR ds:[ebx]
  40d804:	lods   al,BYTE PTR ds:[esi]
  40d805:	push   es
  40d806:	inc    esi
  40d807:	repnz sub DWORD PTR [edx+0x10],esp
  40d80b:	jo     0x40d7cf
  40d80d:	bound  ebx,QWORD PTR [eax+0x2f]
  40d810:	xor    al,0x88
  40d812:	xchg   ebx,eax
  40d813:	mov    ch,0x7a
  40d815:	cdq    
  40d816:	dec    eax
  40d817:	inc    esp
  40d818:	pop    edi
  40d819:	and    eax,DWORD PTR [ebp-0x41]
  40d81c:	int    0x25
  40d81e:	loop   0x40d885
  40d820:	in     eax,0xca
  40d822:	push   esi
  40d823:	mov    esi,0xa6643bde
  40d828:	mov    edx,0x7196c19e
  40d82d:	sub    BYTE PTR [ecx+ecx*1+0x16],0xda
  40d832:	fsubr  DWORD PTR [eax]
  40d834:	lahf   
  40d835:	sbb    BYTE PTR [ecx],bl
  40d837:	inc    eax
  40d838:	aaa    
  40d839:	xchg   ebx,eax
  40d83a:	and    al,cl
  40d83c:	push   eax
  40d83d:	push   esp
  40d83e:	mov    ?,esp
  40d840:	jns    0x40d7cb
  40d842:	mov    ebp,0xe44184e
  40d847:	adc    ebp,DWORD PTR [ebx+0x4e]
  40d84a:	imul   DWORD PTR [edi+0x39cfe793]
  40d850:	push   ebx
  40d851:	or     ch,BYTE PTR [esp+ebp*1]
  40d854:	cli    
  40d855:	cdq    
  40d856:	xchg   ebx,eax
  40d857:	mov    ecx,edx
  40d859:	inc    edi
  40d85a:	ins    BYTE PTR es:[edi],dx
  40d85b:	and    BYTE PTR ds:0x96c439a3,ah
  40d861:	cmp    BYTE PTR [ebx-0x2565e7b7],dh
  40d867:	pop    eax
  40d868:	inc    ebx
  40d869:	inc    esi
  40d86a:	mov    ds:0x9804e0f2,al
  40d86f:	mov    ds:0xf419fb8e,eax
  40d874:	mov    eax,ds:0x612b37d9
  40d879:	mov    ah,0xba
  40d87b:	push   es
  40d87c:	imul   ebx,ecx,0xbb5fd7c9
  40d882:	push   edx
  40d883:	repz jle 0x40d851
  40d886:	lahf   
  40d887:	lds    ecx,FWORD PTR [ecx]
  40d889:	and    al,0xc
  40d88b:	repz push 0x1e
  40d88e:	les    ebp,FWORD PTR [edx+0x1f7c9eac]
  40d894:	push   ss
  40d895:	push   es
  40d896:	jmp    0x6922:0xf8de5e30
  40d89d:	popf   
  40d89e:	mov    ebp,0x6b8b0d6d
  40d8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a6:	mov    eax,ds:0x2a6c888e
  40d8ab:	sub    dh,BYTE PTR [edi]
  40d8ad:	pushf  
  40d8ae:	push   es
  40d8af:	dec    edi
  40d8b0:	mov    al,0xb5
  40d8b2:	jne    0x40d8d8
  40d8b4:	xchg   esi,eax
  40d8b5:	xor    eax,0x7c170e09
  40d8ba:	inc    ebx
  40d8bb:	mov    ds:0xffc20f78,eax
  40d8c0:	mov    WORD PTR [ebx-0x1bf338f5],?
  40d8c6:	test   esp,ecx
  40d8c8:	rcr    BYTE PTR [eax-0x3e],0x46
  40d8cc:	scas   eax,DWORD PTR es:[edi]
  40d8cd:	ret    
  40d8ce:	popf   
  40d8cf:	into   
  40d8d0:	jl     0x40d936
  40d8d2:	xchg   ecx,eax
  40d8d3:	xor    edi,DWORD PTR ds:0x136442e5
  40d8d9:	arpl   WORD PTR [ebp+eiz*1-0x6d],si
  40d8dd:	jne    0x40d94e
  40d8df:	and    ebp,DWORD PTR [esi+0x4e]
  40d8e2:	(bad)  
  40d8e3:	xchg   edx,eax
  40d8e4:	adc    eax,0xd14cb1ca
  40d8e9:	push   esi
  40d8ea:	pop    ss
  40d8eb:	inc    edx
  40d8ec:	mov    ds:0x4fdc0c31,eax
  40d8f1:	adc    bl,ah
  40d8f3:	ds adc al,0xe0
  40d8f6:	fisub  DWORD PTR [esi+ecx*2-0x656870aa]
  40d8fd:	add    dl,bh
  40d8ff:	dec    esi
  40d900:	push   edi
  40d901:	ficomp WORD PTR [ebp+ecx*8-0x62dd3273]
  40d908:	fcom   QWORD PTR [edx+ebp*4]
  40d90b:	mov    edx,0x37f8a1e1
  40d910:	(bad)  
  40d911:	out    dx,eax
  40d912:	fwait
  40d913:	push   0x1f5be21e
  40d918:	jmp    0x49a6:0xdd3751a4
  40d91f:	(bad)  
  40d920:	xchg   esi,eax
  40d921:	aaa    
  40d922:	ss out dx,eax
  40d924:	add    ebx,ecx
  40d926:	mov    eax,ds:0xdd859c52
  40d92b:	add    DWORD PTR [edx],esp
  40d92d:	call   0xdc07b5ea
  40d932:	cmp    al,0xb4
  40d934:	lea    edi,[ebx+0x4adc46bd]
  40d93a:	stos   BYTE PTR es:[edi],al
  40d93b:	ss mov bl,0xd8
  40d93e:	int    0x12
  40d940:	dec    edi
  40d941:	pop    ecx
  40d942:	mov    dh,0x4e
  40d944:	data16 (bad) 
  40d946:	fimul  DWORD PTR [ebp+0x9ccf51d]
  40d94c:	mov    bh,0xfc
  40d94e:	(bad)  
  40d94f:	and    ch,BYTE PTR [eax-0x75]
  40d952:	cmp    BYTE PTR ds:0x4891a3b6,ch
  40d958:	cmp    eax,0x178f83bf
  40d95d:	xor    bh,BYTE PTR [edi-0x62]
  40d960:	xchg   BYTE PTR [edi],ch
  40d962:	push   0xfffffff9
  40d964:	push   0xffffff90
  40d966:	stc    
  40d967:	fwait
  40d968:	ins    DWORD PTR es:[edi],dx
  40d969:	mov    WORD PTR [edi+0x1caf1ab0],ss
  40d96f:	cmp    ch,al
  40d971:	mov    edi,0x2185d2f4
  40d976:	mov    ah,BYTE PTR [edi+0x6be0f75a]
  40d97c:	sbb    edi,0x261d6070
  40d982:	sub    dh,ah
  40d984:	sub    DWORD PTR [ebx-0x6e],ecx
  40d987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d988:	inc    edx
  40d989:	inc    esi
  40d98a:	and    dl,dh
  40d98c:	mul    DWORD PTR [eax+0xf]
  40d98f:	fbld   TBYTE PTR [ebp-0x73d836b9]
  40d995:	jl     0x40d962
  40d997:	in     eax,dx
  40d998:	sub    DWORD PTR ds:0x75779d12,ebx
  40d99e:	xchg   esp,eax
  40d99f:	cmp    ch,al
  40d9a1:	or     dh,ch
  40d9a3:	jae    0x40d9a6
  40d9a5:	aas    
  40d9a6:	xchg   edi,eax
  40d9a7:	inc    eax
  40d9a8:	mov    dh,0xb2
  40d9aa:	pop    ss
  40d9ab:	je     0x40d95d
  40d9ad:	xchg   DWORD PTR [esi-0x690c4211],ebp
  40d9b3:	(bad)  
  40d9b4:	sub    al,0xf5
  40d9b6:	dec    ecx
  40d9b7:	shr    BYTE PTR ds:0x22608ca5,cl
  40d9bd:	push   ds
  40d9be:	cmp    DWORD PTR [eax+0xa972da9],ebx
  40d9c4:	in     eax,dx
  40d9c5:	fstp   DWORD PTR [edi+eiz*2]
  40d9c8:	push   0xcfb91722
  40d9cd:	xlat   BYTE PTR ds:[ebx]
  40d9ce:	push   eax
  40d9cf:	xchg   edx,eax
  40d9d0:	push   0x33
  40d9d2:	push   0xc4d9ab27
  40d9d7:	xor    ecx,DWORD PTR [ebx+0x15e32458]
  40d9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9de:	bound  ecx,QWORD PTR [bx+di]
  40d9e1:	(bad)  
  40d9e2:	arpl   WORD PTR [esi-0xb],cx
  40d9e5:	icebp  
  40d9e6:	and    eax,0x487a7730
  40d9eb:	lahf   
  40d9ec:	bsr    edi,DWORD PTR [edx-0x5c832762]
  40d9f3:	mov    dh,0x16
  40d9f5:	bound  esp,QWORD PTR [edi+ebx*2-0x41]
  40d9f9:	test   DWORD PTR ds:0xc1c0709f,edx
  40d9ff:	push   ecx
  40da00:	cmp    eax,0x27e7ced5
  40da05:	into   
  40da06:	outs   dx,BYTE PTR ds:[esi]
  40da07:	ret    0x42fb
  40da0a:	jae    0x40d9c9
  40da0c:	adc    al,0x6d
  40da0e:	aad    0xd7
  40da10:	sbb    cl,BYTE PTR [ecx+0x79]
  40da13:	setns  BYTE PTR ds:0x2b646409
  40da1a:	das    
  40da1b:	(bad)  
  40da1c:	loopne 0x40da4d
  40da1e:	jg     0x40da11
  40da20:	dec    esp
  40da21:	frstpm(287 only) 
  40da23:	pop    ebx
  40da24:	inc    ebp
  40da25:	addr16 call 0xce45a714
  40da2b:	xchg   edx,eax
  40da2c:	jg     0x40d9f5
  40da2e:	xchg   edi,eax
  40da30:	in     eax,dx
  40da31:	sub    edi,DWORD PTR [ecx+0x3]
  40da34:	jl     0x40da85
  40da36:	push   ds
  40da37:	cld    
  40da38:	jne    0x40da2a
  40da3a:	sbb    al,0x18
  40da3c:	mov    ebp,0xfa5e0d01
  40da41:	sbb    cl,BYTE PTR [ebx]
  40da43:	or     al,0x87
  40da45:	fucom  st(0)
  40da47:	push   0x74bd1ad3
  40da4c:	jb     0x40da79
  40da4e:	repz adc BYTE PTR cs:[edx],0x58
  40da53:	ds dec ebx
  40da55:	rcl    BYTE PTR [edi-0x33],cl
  40da58:	leave  
  40da59:	lods   al,BYTE PTR ds:[esi]
  40da5a:	hlt    
  40da5b:	xor    ecx,DWORD PTR [ecx]
  40da5d:	pop    esp
  40da5e:	mul    BYTE PTR [eax]
  40da60:	xchg   ecx,eax
  40da61:	push   0x43
  40da63:	ins    BYTE PTR es:[edi],dx
  40da64:	sbb    eax,0x1c44243c
  40da69:	mov    esi,0xc77ec3ef
  40da6e:	popa   
  40da6f:	cli    
  40da70:	mov    esp,DWORD PTR [esi]
  40da72:	enter  0xd279,0xf5
  40da76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da77:	adc    eax,0xa732ae1d
  40da7c:	ret    0xf92b
  40da7f:	stos   DWORD PTR es:[edi],eax
  40da80:	mov    bh,0x56
  40da82:	push   esp
  40da83:	cmp    DWORD PTR [ebx-0x7],esp
  40da86:	(bad)  
  40da87:	das    
  40da88:	jecxz  0x40dab1
  40da8a:	sti    
  40da8b:	rcl    DWORD PTR [edi],0x8b
  40da8e:	mov    BYTE PTR [edi],al
  40da90:	icebp  
  40da91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da92:	mov    al,ds:0x3959e67f
  40da97:	ret    
  40da98:	mov    DWORD PTR ds:[eax],ebp
  40da9b:	es push esi
  40da9d:	scas   eax,DWORD PTR es:[edi]
  40da9e:	stos   BYTE PTR es:[edi],al
  40da9f:	dec    ebp
  40daa0:	stc    
  40daa1:	adc    cl,dl
  40daa3:	repz sub eax,edx
  40daa6:	retf   0x39f2
  40daa9:	js     0x40da44
  40daab:	call   0x93e8:0x3ead01bc
  40dab2:	add    al,0x6e
  40dab4:	(bad)  
  40dab5:	rol    DWORD PTR ds:0x9d2beb28,cl
  40dabb:	inc    esp
  40dabc:	popa   
  40dabd:	addr16 jmp 0x4096a427
  40dac3:	shr    ebp,0x26
  40dac6:	adc    BYTE PTR [eax-0x6d9dbffe],ch
  40dacc:	push   0x38
  40dace:	cdq    
  40dacf:	push   edx
  40dad0:	mov    ah,BYTE PTR [eax]
  40dad2:	lea    ecx,[ebx-0x52]
  40dad5:	jae    0x40db27
  40dad7:	sahf   
  40dad8:	out    0xd6,al
  40dada:	or     edi,DWORD PTR [edx+edx*4+0x6753864c]
  40dae1:	jae    0x40dae4
  40dae3:	fs mov dl,0x21
  40dae6:	stc    
  40dae7:	jmp    0x2cb37852
  40daec:	sub    eax,eax
  40daee:	jmp    0x57b8:0xf70878f1
  40daf5:	call   DWORD PTR [ebp-0x3add5f2e]
  40dafb:	jl     0x40da8f
  40dafd:	stos   BYTE PTR es:[edi],al
  40dafe:	popa   
  40daff:	loope  0x40daf5
  40db01:	test   eax,0xad2e51a3
  40db06:	and    esp,DWORD PTR [edi+0x61]
  40db09:	lds    ebp,FWORD PTR [edx-0x651747bb]
  40db0f:	aam    0xea
  40db11:	jmp    0x6d79:0xa4a02963
  40db18:	inc    ecx
  40db19:	adc    BYTE PTR [eax],al
  40db1b:	fmul   DWORD PTR ds:0x8ec34902
  40db21:	daa    
  40db22:	push   ebx
  40db23:	jp     0x40daa6
  40db25:	mov    DWORD PTR [edi+0x40d530b2],edi
  40db2b:	mov    esp,0xb3e850ab
  40db30:	cmovae ecx,DWORD PTR [edx]
  40db33:	imul   ebx,esp,0x55
  40db36:	push   ecx
  40db37:	call   0x548486f8
  40db3c:	jmp    0x7e3d:0x3497d1f
  40db43:	adc    BYTE PTR [ecx+ecx*8-0x593f741a],bl
  40db4a:	mov    bl,0x1d
  40db4c:	into   
  40db4d:	or     DWORD PTR [esi+0x39d2832f],edx
  40db53:	aad    0xc1
  40db55:	push   0xb42d1f76
  40db5a:	mov    ebp,0xd4eccee0
  40db5f:	scas   al,BYTE PTR es:[edi]
  40db60:	xor    bh,BYTE PTR [edx+0x1a31341b]
  40db66:	and    al,0x17
  40db68:	cwde   
  40db69:	and    edi,DWORD PTR [ecx-0x1e03024]
  40db6f:	push   ds
  40db70:	test   al,0x2b
  40db72:	sbb    eax,0x71e125ad
  40db77:	shl    BYTE PTR [esi+0x4554d800],0xd7
  40db7e:	or     eax,0xd4796d3
  40db83:	in     eax,0x43
  40db85:	clc    
  40db86:	cmc    
  40db87:	pop    ds
  40db88:	sub    al,0x1b
  40db8a:	sbb    BYTE PTR [ebx-0x7f],dh
  40db8d:	and    DWORD PTR [ebp+0x274ba14a],ebx
  40db93:	mov    cl,0x17
  40db95:	adc    edx,DWORD PTR ds:0xfb729870
  40db9b:	popf   
  40db9c:	jl     0x40dbeb
  40db9e:	(bad)
  40dba1:	add    edi,ecx
  40dba3:	daa    
  40dba4:	outs   dx,BYTE PTR ds:[esi]
  40dba5:	sbb    eax,0x603c00ae
  40dbaa:	stos   BYTE PTR es:[edi],al
  40dbab:	ret    
  40dbac:	lock dec esi
  40dbae:	test   eax,0xc7649c12
  40dbb3:	shl    DWORD PTR [edi+0x45],cl
  40dbb6:	push   edx
  40dbb7:	adc    dh,dh
  40dbb9:	in     eax,0x8b
  40dbbb:	sub    dl,BYTE PTR [esi]
  40dbbd:	xor    eax,0x77de3772
  40dbc2:	adc    BYTE PTR [esi+0x5011515a],al
  40dbc8:	adc    ebp,DWORD PTR [eax+edx*4-0x21]
  40dbcc:	cmp    eax,0xa3296a58
  40dbd1:	jno    0x40dbef
  40dbd3:	out    dx,eax
  40dbd4:	mov    ah,0x52
  40dbd6:	add    ecx,DWORD PTR [ebp+0x18dc1bdd]
  40dbdc:	mov    ah,0xa5
  40dbde:	(bad)  
  40dbdf:	out    dx,al
  40dbe0:	retf   0x3dd5
  40dbe3:	mov    ebp,0x181ae1b3
  40dbe8:	xchg   ebx,eax
  40dbe9:	(bad)  
  40dbea:	xchg   ebx,eax
  40dbeb:	test   BYTE PTR [ecx-0x2272628d],cl
  40dbf1:	dec    ebp
  40dbf2:	cwde   
  40dbf3:	fdivr  st,st(3)
  40dbf6:	cdq    
  40dbf7:	imul   ebx,DWORD PTR [ebx+0x5225db8b],0xffffff83
  40dbfe:	mov    bl,0x9a
  40dc00:	jo     0x40db8d
  40dc02:	cmp    eax,edx
  40dc04:	stos   BYTE PTR es:[edi],al
  40dc05:	(bad)  
  40dc06:	cld    
  40dc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc08:	jnp    0x40dc81
  40dc0a:	mov    ds:0x1ec3657,eax
  40dc0f:	imul   ecx,DWORD PTR ds:0x600d9282,0x61
  40dc16:	xchg   ebx,eax
  40dc17:	aaa    
  40dc18:	xchg   ecx,eax
  40dc19:	enter  0x4fa0,0xf7
  40dc1d:	imul   edx,DWORD PTR [edx+0x5b],0xffffffb6
  40dc21:	xor    ch,bh
  40dc23:	hlt    
  40dc24:	(bad)  
  40dc25:	std    
  40dc26:	rol    BYTE PTR [edi-0x458b3b2e],cl
  40dc2c:	pushf  
  40dc2d:	jecxz  0x40dbd0
  40dc2f:	out    0x51,eax
  40dc31:	push   cs
  40dc32:	push   0x37
  40dc34:	ja     0x40dc28
  40dc36:	and    DWORD PTR [eax-0x6b],ebx
  40dc39:	scas   eax,DWORD PTR es:[edi]
  40dc3a:	or     eax,0x90fdfbfe
  40dc3f:	sar    DWORD PTR [eax-0xd78dc51],1
  40dc45:	pop    ebx
  40dc46:	push   ebp
  40dc47:	push   cs
  40dc48:	je     0x40dc18
  40dc4a:	mov    DWORD PTR [ecx],0x5dcbede2
  40dc50:	inc    esi
  40dc51:	aam    0x65
  40dc53:	push   edi
  40dc54:	lea    edx,[ecx-0x2e6866ff]
  40dc5a:	inc    edx
  40dc5b:	rcr    DWORD PTR [ebx+0x2b6fdb87],cl
  40dc61:	enter  0x612a,0x8b
  40dc65:	push   esp
  40dc66:	jle    0x40dc0e
  40dc68:	jl     0x40dc51
  40dc6a:	xchg   esi,eax
  40dc6b:	and    edx,DWORD PTR [ecx-0x23c77f09]
  40dc71:	nop
  40dc72:	stc    
  40dc73:	sahf   
  40dc74:	int    0xe0
  40dc76:	cld    
  40dc77:	fistp  QWORD PTR [edi+edi*2+0x103ba119]
  40dc7e:	mov    eax,DWORD PTR [eax-0x4c]
  40dc81:	mov    ds:0x8f6d4853,eax
  40dc86:	mov    cl,ch
  40dc88:	dec    edx
  40dc89:	loope  0x40dc76
  40dc8b:	dec    eax
  40dc8c:	or     al,0xe9
  40dc8e:	mov    cl,0xc5
  40dc90:	retf   
  40dc91:	inc    ebx
  40dc92:	dec    esi
  40dc93:	test   DWORD PTR [edx+0x63],edx
  40dc96:	xor    ebp,DWORD PTR [eax]
  40dc98:	adc    al,BYTE PTR [eax]
  40dc9a:	mov    cl,0xbf
  40dc9c:	arpl   bp,bx
  40dc9e:	ss je  0x40dd08
  40dca1:	or     al,0xf4
  40dca3:	scas   eax,DWORD PTR es:[edi]
  40dca4:	jb     0x40dc58
  40dca6:	xchg   ebx,eax
  40dca7:	scas   al,BYTE PTR es:[edi]
  40dca8:	popf   
  40dca9:	inc    eax
  40dcaa:	xchg   ecx,eax
  40dcab:	retf   
  40dcac:	je     0x40dc44
  40dcae:	push   ebx
  40dcaf:	cwde   
  40dcb0:	push   ebx
  40dcb1:	mov    dl,0x59
  40dcb3:	leave  
  40dcb4:	imul   ecx,edx,0xffffffa4
  40dcb7:	bound  eax,QWORD PTR [ebx]
  40dcb9:	pusha  
  40dcba:	or     DWORD PTR [ebp+0x315f859e],esi
  40dcc0:	cmp    al,0xf2
  40dcc2:	loopne 0x40dd13
  40dcc4:	xchg   edi,eax
  40dcc5:	xchg   esi,eax
  40dcc6:	cmp    ah,BYTE PTR [esi+0x3b]
  40dcc9:	call   esi
  40dccb:	loopne 0x40dc93
  40dccd:	jo     0x40dc74
  40dccf:	jnp    0x40dcb3
  40dcd1:	inc    edx
  40dcd2:	push   0x15c4fcee
  40dcd7:	mov    esi,0x905cda8f
  40dcdc:	inc    edi
  40dcdd:	sub    DWORD PTR [esi],0xffffffae
  40dce0:	mov    bh,0x54
  40dce2:	or     al,0xe9
  40dce4:	dec    DWORD PTR [eax]
  40dce6:	shl    DWORD PTR [ecx-0x44],cl
  40dce9:	idiv   BYTE PTR [edx-0x75]
  40dcec:	jp     0x40dd3c
  40dcee:	mov    ah,0x91
  40dcf0:	adc    al,0xfe
  40dcf2:	(bad)  
  40dcf3:	aaa    
  40dcf4:	ss sbb eax,0x93d6640f
  40dcfa:	fnstcw WORD PTR [eax+ecx*8-0x70288204]
  40dd01:	pop    ecx
  40dd02:	or     al,0x91
  40dd04:	adc    esi,edi
  40dd06:	test   BYTE PTR [ebx],dl
  40dd08:	sbb    DWORD PTR [ebx],esi
  40dd0a:	int3   
  40dd0b:	int    0x24
  40dd0d:	sbb    bh,BYTE PTR [ebp-0x40adf87]
  40dd13:	psadbw mm4,QWORD PTR [eax-0x6ea6f17b]
  40dd1a:	xor    BYTE PTR [ecx+0x40],cl
  40dd1d:	fild   DWORD PTR [esp+esi*2-0x24]
  40dd21:	adc    eax,0xc1e0798a
  40dd26:	sbb    BYTE PTR [ebp-0x42],bl
  40dd29:	mov    edi,DWORD PTR [ebx]
  40dd2b:	push   ebp
  40dd2c:	and    eax,edx
  40dd2e:	shl    DWORD PTR [eax+0x3e],cl
  40dd31:	adc    ebx,esi
  40dd33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd34:	mov    al,0x15
  40dd36:	jmp    0x8fe05705
  40dd3b:	adc    al,0x6a
  40dd3d:	ror    BYTE PTR [ebp-0x287c6c64],cl
  40dd43:	ins    BYTE PTR es:[edi],dx
  40dd44:	in     eax,0x8d
  40dd46:	in     al,dx
  40dd47:	or     bl,BYTE PTR [ebx+0x1e]
  40dd4a:	rol    BYTE PTR [eax],1
  40dd4c:	cmp    ax,0xfcff
  40dd50:	xor    DWORD PTR ds:0x8c698ad3,edx
  40dd56:	stos   DWORD PTR es:[edi],eax
  40dd57:	jno    0x40dd3a
  40dd59:	mov    eax,0x32eb7d14
  40dd5e:	cmp    eax,0x5925e0d1
  40dd63:	adc    eax,0xe3a29f15
  40dd68:	adc    edx,DWORD PTR [ecx+ebp*2-0x6cfd990]
  40dd6f:	out    0xf8,al
  40dd71:	out    dx,al
  40dd72:	and    ch,BYTE PTR [esi-0x78]
  40dd75:	pop    esp
  40dd76:	in     eax,dx
  40dd77:	fwait
  40dd78:	add    cl,bh
  40dd7a:	mov    edi,0x754fbb7a
  40dd7f:	push   esi
  40dd80:	adc    edi,DWORD PTR [ebx-0x2e]
  40dd83:	dec    ebx
  40dd84:	push   esp
  40dd85:	xor    DWORD PTR [ecx-0x32],esp
  40dd88:	mov    bl,0x23
  40dd8a:	adc    DWORD PTR [ecx-0x446ce86d],0x48
  40dd91:	sbb    DWORD PTR [ebx+0x54c0740d],ebx
  40dd97:	test   al,0xd8
  40dd99:	sub    ecx,edx
  40dd9b:	dec    ebp
  40dd9c:	call   0x6531937c
  40dda1:	xor    al,0x81
  40dda3:	sub    DWORD PTR [edi+0x29],esi
  40dda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda7:	jns    0x40dd43
  40dda9:	dec    edx
  40ddaa:	cmc    
  40ddab:	mov    WORD PTR [eax],?
  40ddad:	jns    0x40de01
  40ddaf:	icebp  
  40ddb0:	jle    0x40ddbf
  40ddb2:	add    al,0x54
  40ddb4:	and    DWORD PTR ds:0x2528f8ad,0x48
  40ddbb:	inc    ebx
  40ddbc:	sub    al,0x5a
  40ddbe:	jmp    0xddb965a6
  40ddc3:	sbb    al,0xc4
  40ddc5:	loope  0x40dd61
  40ddc7:	jno    0x40dd91
  40ddc9:	add    DWORD PTR [edi-0x23a7c702],edi
  40ddcf:	xor    al,0xec
  40ddd1:	fmul   QWORD PTR [eax+0x4b0712c4]
  40ddd7:	jl     0x40ddee
  40ddd9:	sub    al,0xad
  40dddb:	aad    0x40
  40dddd:	imul   edi,DWORD PTR [edx],0xffffffae
  40dde0:	mov    edx,0xbf68107a
  40dde5:	in     eax,dx
  40dde6:	lock dec DWORD PTR [eax-0x2]
  40ddea:	fisttp WORD PTR [ebx]
  40ddec:	jge    0x40de35
  40ddee:	push   esp
  40ddef:	out    dx,al
  40ddf0:	adc    esp,DWORD PTR [eax+edi*8]
  40ddf3:	sbb    al,0x60
  40ddf5:	jbe    0x40dddb
  40ddf7:	imul   edi,DWORD PTR [edi-0x2f],0x376239
  40ddfe:	pusha  
  40ddff:	inc    esi
  40de00:	inc    edx
  40de01:	sar    BYTE PTR [ebx+0xa5210ce],1
  40de07:	sub    BYTE PTR [edi+0x5e],ch
  40de0a:	ss pusha 
  40de0c:	pop    ecx
  40de0d:	jb     0x40de7b
  40de0f:	stos   BYTE PTR es:[edi],al
  40de10:	xchg   ebx,eax
  40de11:	pop    ebp
  40de12:	mov    ds:0xc03f3bde,al
  40de17:	and    eax,0x852c0c68
  40de1c:	into   
  40de1d:	and    DWORD PTR [edi+0x6150ae83],0xffffff98
  40de24:	(bad)  
  40de26:	repz sbb dl,BYTE PTR [eax]
  40de29:	sub    eax,0xe293d50e
  40de2e:	(bad)  
  40de2f:	mov    edi,0xa6a83b9c
  40de34:	inc    edi
  40de35:	leave  
  40de36:	or     eax,edi
  40de38:	and    BYTE PTR [ecx-0x1089f3a9],dh
  40de3e:	ror    BYTE PTR [esi],cl
  40de40:	lods   eax,DWORD PTR ds:[si]
  40de42:	(bad)  [edi]
  40de44:	loope  0x40de1b
  40de46:	push   0x246f40a
  40de4b:	in     eax,0x8b
  40de4d:	fs (bad) 
  40de50:	mov    bh,0xa3
  40de52:	jb     0x40ddee
  40de54:	adc    BYTE PTR [ebp-0x49],ch
  40de57:	mov    ebx,0x3efebed6
  40de5c:	test   al,0xbb
  40de5e:	or     edi,edi
  40de60:	ins    BYTE PTR es:[edi],dx
  40de61:	call   FWORD PTR [edi+0x2fed920e]
  40de67:	xchg   esp,eax
  40de68:	adc    al,0x7a
  40de6a:	xor    eax,DWORD PTR [ebx]
  40de6c:	fstp   DWORD PTR [eax+0x14]
  40de6f:	cmp    dl,0xb5
  40de72:	neg    DWORD PTR [edi+edx*4]
  40de75:	sub    edx,DWORD PTR [eax+0x46]
  40de78:	add    eax,0x733c4097
  40de7d:	dec    esi
  40de7e:	dec    ecx
  40de7f:	cld    
  40de80:	mov    bl,0xd9
  40de82:	inc    edi
  40de83:	push   esi
  40de84:	push   cs
  40de85:	or     DWORD PTR [ecx+0x5127413c],ebx
  40de8b:	loope  0x40de47
  40de8d:	inc    ebx
  40de8e:	mov    cl,0x49
  40de90:	and    BYTE PTR [edi+0x70],dh
  40de93:	add    dl,cl
  40de95:	pop    ebp
  40de96:	outs   dx,BYTE PTR ds:[esi]
  40de97:	fsub   DWORD PTR [ecx-0x7c]
  40de9a:	aaa    
  40de9b:	or     BYTE PTR [edi],0x95
  40de9e:	mov    ds:0x746329e8,al
  40dea3:	arpl   WORD PTR [edi],sp
  40dea5:	repnz adc esp,DWORD PTR [edi]
  40dea8:	or     DWORD PTR [ebx-0x3c96350],ebx
  40deae:	stc    
  40deaf:	push   eax
  40deb0:	ins    BYTE PTR es:[edi],dx
  40deb1:	xor    dl,bh
  40deb3:	arpl   ax,bp
  40deb5:	aas    
  40deb6:	stos   BYTE PTR es:[edi],al
  40deb7:	adc    DWORD PTR [ebp-0x55],0x3b82008a
  40debe:	ins    DWORD PTR es:[edi],dx
  40debf:	pop    ecx
  40dec0:	cdq    
  40dec1:	pop    ecx
  40dec2:	leave  
  40dec3:	cmp    BYTE PTR [esi-0x443a7dad],dh
  40dec9:	idiv   DWORD PTR [edx]
  40decb:	add    dh,BYTE PTR [di+0x45ba]
  40ded0:	or     al,0x3e
  40ded2:	jbe    0x40de6f
  40ded4:	mov    eax,ds:0x506003c0
  40ded9:	test   BYTE PTR [eax-0x63],0x7b
  40dedd:	jmp    0x7114:0xfbfafdec
  40dee4:	xchg   edi,eax
  40dee5:	adc    BYTE PTR [eax],dl
  40dee7:	int3   
  40dee8:	xor    eax,0xb872aa87
  40deed:	std    
  40deee:	pop    ss
  40deef:	pop    esp
  40def0:	cs ret 0x36d5
  40def4:	mov    ch,0x7b
  40def6:	or     eax,DWORD PTR [eax+0x3a]
  40def9:	nop
  40defa:	xchg   eax,edi
  40defc:	test   eax,0x1c76aa2f
  40df01:	imul   ebp,DWORD PTR [edi+edi*4+0x5c2c587],0x42dc1e5e
  40df0c:	xchg   ecx,eax
  40df0d:	mov    edi,0x3e227422
  40df12:	stc    
  40df13:	pop    ecx
  40df14:	jbe    0x40df3a
  40df16:	ja     0x40df13
  40df18:	retf   0xada3
  40df1b:	inc    eax
  40df1c:	dec    ebp
  40df1d:	mov    bl,0x53
  40df1f:	out    dx,al
  40df20:	mov    edx,0xf25d3562
  40df25:	mov    ah,0x2e
  40df27:	addr16 (bad) 
  40df29:	jbe    0x40def1
  40df2b:	dec    ebp
  40df2c:	push   ebx
  40df2d:	out    0xcd,al
  40df2f:	mov    dh,0xcf
  40df31:	add    ebx,DWORD PTR [ebp-0x32efcb38]
  40df37:	in     eax,0x7a
  40df39:	iret   
  40df3a:	adc    DWORD PTR [ecx],esp
  40df3c:	jmp    0xcbbf670
  40df41:	push   edx
  40df42:	xchg   BYTE PTR [eax],cl
  40df44:	out    dx,eax
  40df45:	aas    
  40df46:	fwait
  40df47:	add    eax,0x122e694f
  40df4c:	fst    QWORD PTR [edx]
  40df4e:	sbb    ch,BYTE PTR [eax-0x53]
  40df51:	and    BYTE PTR [ecx+0x36c03c42],dl
  40df57:	and    eax,0xb9ed9c8b
  40df5c:	push   edx
  40df5d:	pop    ebp
  40df5e:	sub    DWORD PTR es:[esi],0x36
  40df62:	repnz out 0x69,eax
  40df65:	adc    DWORD PTR [edi-0x5a],eax
  40df68:	adc    al,ch
  40df6a:	sub    al,0x74
  40df6c:	or     BYTE PTR [ebx],0x69
  40df6f:	popa   
  40df70:	pop    esp
  40df71:	xchg   esi,eax
  40df72:	inc    ecx
  40df73:	rol    edx,0xad
  40df76:	jg     0x40dfd7
  40df78:	cld    
  40df79:	sbb    BYTE PTR [edi+0x4],ah
  40df7c:	loop   0x40df42
  40df7e:	int    0xba
  40df80:	div    BYTE PTR [ecx]
  40df82:	dec    edx
  40df83:	inc    esi
  40df84:	sub    al,0x79
  40df86:	sub    ebp,DWORD PTR [edi]
  40df88:	jmp    0x40df97
  40df8a:	cmp    DWORD PTR [edi+0x346bb8ec],edi
  40df90:	jb     0x40df86
  40df92:	jge    0x40df80
  40df94:	sbb    DWORD PTR es:[edx-0x44424c9],esp
  40df9b:	lea    edx,[eax]
  40df9d:	and    BYTE PTR [edi-0x1b324b30],ch
  40dfa3:	sbb    eax,DWORD PTR [ebp-0x6b]
  40dfa6:	cs mov dh,0xc8
  40dfa9:	cli    
  40dfaa:	div    BYTE PTR [ecx-0x772246a8]
  40dfb0:	add    al,0xf3
  40dfb2:	pushf  
  40dfb3:	cmp    bl,BYTE PTR [ebx]
  40dfb5:	ins    BYTE PTR es:[edi],dx
  40dfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb7:	in     al,0xd7
  40dfb9:	push   edi
  40dfba:	xchg   edx,eax
  40dfbb:	jne    0x40dfe1
  40dfbd:	sbb    edx,eax
  40dfbf:	adc    al,0x7a
  40dfc1:	test   DWORD PTR [ecx],ebp
  40dfc3:	dec    ebx
  40dfc4:	not    ah
  40dfc6:	lods   al,BYTE PTR ds:[esi]
  40dfc7:	pop    esp
  40dfc8:	jne    0x40dfc6
  40dfca:	out    dx,eax
  40dfcb:	sbb    eax,0x864b7550
  40dfd0:	loopne 0x40df6e
  40dfd2:	hlt    
  40dfd3:	mov    cl,BYTE PTR [esi+0x22]
  40dfd6:	xchg   ecx,eax
  40dfd7:	add    al,0xb0
  40dfd9:	mov    al,ds:0x5f961b4a
  40dfde:	mov    es,WORD PTR [edx]
  40dfe0:	mov    ah,0x80
  40dfe2:	jbe    0x40df7a
  40dfe4:	div    BYTE PTR [eax+0x18a18d39]
  40dfea:	cmp    ebp,DWORD PTR [bx+si+0x38ed]
  40dfef:	adc    DWORD PTR [eax+0x53d3d24e],ebx
  40dff5:	sub    al,BYTE PTR [edx-0x6a]
  40dff8:	ror    DWORD PTR [ecx-0x354f666b],1
  40dffe:	xchg   ebp,eax
  40dfff:	sbb    esp,DWORD PTR [edi+0x1a]
  40e002:	rol    DWORD PTR [ebp+0x484bdb8b],1
  40e008:	sub    eax,0x2b857f2e
  40e00d:	stc    
  40e00e:	(bad)  
  40e00f:	clc    
  40e010:	sbb    DWORD PTR [edx],0xa
  40e013:	and    ebp,esp
  40e015:	hlt    
  40e016:	out    dx,eax
  40e017:	sub    DWORD PTR [ebx-0x4c],ebp
  40e01a:	ret    0xf554
  40e01d:	mov    esi,0xa089fbd8
  40e022:	scas   eax,DWORD PTR es:[edi]
  40e023:	push   0x680cfb49
  40e028:	mov    edi,0x5a3de08e
  40e02d:	loope  0x40e00d
  40e02f:	adc    esp,eax
  40e031:	or     al,0x27
  40e033:	les    esi,FWORD PTR [ebx-0x37]
  40e036:	or     DWORD PTR [ebp+0x413bd56d],0x6c
  40e03d:	dec    edi
  40e03e:	inc    ebx
  40e03f:	retf   
  40e040:	lea    ecx,[ecx+0x217979d5]
  40e046:	cmp    BYTE PTR [edx+edx*8],0x22
  40e04a:	pushf  
  40e04b:	stc    
  40e04c:	xor    eax,0xf4d2b318
  40e051:	xor    eax,0x54e9e1f6
  40e056:	inc    esp
  40e057:	(bad)  
  40e058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e059:	(bad)  
  40e05a:	mov    cl,BYTE PTR [ebx+esi*1]
  40e05d:	icebp  
  40e05e:	mov    dl,0xe0
  40e060:	mov    ah,0x1a
  40e062:	push   0x2e7ff777
  40e067:	mov    bh,0x7a
  40e069:	and    al,0x4
  40e06b:	clc    
  40e06c:	dec    ecx
  40e06d:	clc    
  40e06e:	and    al,0x8
  40e070:	inc    edx
  40e071:	loopne 0x40e018
  40e073:	cmc    
  40e074:	jne    0x40e0a3
  40e076:	push   ds
  40e077:	xchg   bl,ch
  40e079:	sar    dh,0xdf
  40e07c:	dec    ebx
  40e07d:	xor    eax,0x5469d71
  40e082:	and    eax,0x72981086
  40e087:	(bad)  
  40e088:	dec    ebp
  40e089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e08a:	fimul  WORD PTR [eax-0x54fcfb7b]
  40e090:	xor    eax,0x91919c4a
  40e095:	lods   al,BYTE PTR ds:[esi]
  40e096:	mov    esi,0xb348cd99
  40e09b:	sahf   
  40e09c:	dec    ecx
  40e09d:	in     al,dx
  40e09e:	push   edx
  40e09f:	pop    edx
  40e0a0:	into   
  40e0a1:	jmp    0x97db:0x36d0ce7c
  40e0a8:	(bad)  
  40e0a9:	cmp    cl,BYTE PTR ds:0xdcfb1ab
  40e0af:	and    bl,0xb1
  40e0b2:	mov    dl,0x21
  40e0b4:	adc    DWORD PTR [esi-0x45c8d62a],ebp
  40e0ba:	pop    eax
  40e0bb:	ds jl  0x40e084
  40e0be:	pop    es
  40e0bf:	jb     0x40e087
  40e0c1:	mov    WORD PTR [ecx],gs
  40e0c3:	add    BYTE PTR [ebx+eiz*2+0x2b],0x14
  40e0c8:	mov    al,0x98
  40e0ca:	imul   ecx,DWORD PTR [edx-0x7d8f0d04],0xffffffe5
  40e0d1:	or     al,0x36
  40e0d3:	es test dl,bl
  40e0d6:	jp     0x40e0cb
  40e0d8:	fcom   DWORD PTR [ebx+0x5b]
  40e0db:	dec    esp
  40e0dc:	and    BYTE PTR [ebp-0x60e75f26],al
  40e0e2:	adc    BYTE PTR [eax+0x6bbd661a],bh
  40e0e8:	ror    DWORD PTR [edx],cl
  40e0ea:	mov    ecx,0x8a3f24fe
  40e0ef:	out    dx,eax
  40e0f0:	mov    edi,0x54fc9378
  40e0f5:	shl    BYTE PTR [eax+edx*2+0x5862756f],cl
  40e0fc:	dec    ebx
  40e0fd:	xchg   edx,eax
  40e0fe:	fld    TBYTE PTR [ecx+0x47]
  40e101:	es inc edi
  40e103:	aaa    
  40e104:	xchg   edi,eax
  40e105:	xchg   ebx,eax
  40e106:	ins    BYTE PTR es:[edi],dx
  40e107:	sub    al,0x2b
  40e109:	sahf   
  40e10a:	cmp    eax,esp
  40e10c:	xor    bh,BYTE PTR [esi+0x19fac1ed]
  40e112:	fstp   TBYTE PTR [ebp-0x20]
  40e115:	das    
  40e116:	xor    DWORD PTR [eax-0x3c14ee62],ebx
  40e11c:	inc    ebx
  40e11d:	les    ebp,FWORD PTR [edi+edi*1+0x72]
  40e121:	ret    
  40e122:	fwait
  40e123:	leave  
  40e124:	sub    al,0x23
  40e126:	mov    ds:0x131777e1,al
  40e12b:	mov    esp,ebx
  40e12d:	or     edx,DWORD PTR [eax-0x21c21b1c]
  40e133:	dec    ebx
  40e134:	jns    0x40e108
  40e136:	shl    DWORD PTR gs:[eax-0x3d],cl
  40e13a:	(bad)  
  40e13b:	cmp    BYTE PTR [edx],al
  40e13d:	mov    ecx,0x732b28af
  40e142:	mov    ds:0x280ebe8d,eax
  40e147:	cmp    DWORD PTR [edx],esp
  40e149:	in     al,dx
  40e14a:	mov    cl,0x9a
  40e14c:	call   0xe4b1:0xf701ae85
  40e153:	rcr    BYTE PTR [ebp-0x542313b3],1
  40e159:	mov    ebp,0x79bcaad3
  40e15e:	cmp    al,0x5c
  40e160:	jae    0x40e1d7
  40e162:	retf   0x569b
  40e165:	cdq    
  40e166:	pop    ebx
  40e167:	jnp    0x40e169
  40e169:	sbb    eax,0xc1045fb
  40e16e:	aas    
  40e16f:	into   
  40e170:	ins    DWORD PTR es:[edi],dx
  40e171:	or     bl,BYTE PTR [edi+eiz*1-0x2e]
  40e175:	jmp    0x4006:0xe7ca9eba
  40e17c:	sti    
  40e17d:	xchg   edx,eax
  40e17e:	jge    0x40e14d
  40e180:	sbb    esi,ebx
  40e182:	fisub  WORD PTR [eax-0x73bf6852]
  40e188:	jmp    DWORD PTR [ecx+0xb]
  40e18b:	repnz loop 0x40e130
  40e18e:	dec    ebx
  40e18f:	call   0x704a50fb
  40e194:	mov    ds:0x24275435,al
  40e199:	cli    
  40e19a:	push   ds
  40e19b:	sbb    eax,0xe0786c5d
  40e1a0:	add    al,0x72
  40e1a2:	jmp    0x38e4:0xacdfac7a
  40e1a9:	add    al,0x5d
  40e1ab:	hlt    
  40e1ac:	cmc    
  40e1ad:	add    BYTE PTR [edi+0x44359851],dl
  40e1b3:	fs inc edi
  40e1b5:	push   ds
  40e1b6:	ja     0x40e1c5
  40e1b8:	fst    st(3)
  40e1ba:	into   
  40e1bb:	and    DWORD PTR [ebp-0x1d],esp
  40e1be:	sbb    eax,0xa1cebd0a
  40e1c3:	imul   eax,eax,0xf3020169
  40e1c9:	and    ch,BYTE PTR [ebp+0x7d]
  40e1cc:	in     al,0x7e
  40e1ce:	sub    eax,0x352c2c2b
  40e1d3:	scas   eax,DWORD PTR es:[di]
  40e1d5:	iret   
  40e1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d7:	inc    esp
  40e1d8:	and    DWORD PTR [ebx],0x6a87e823
  40e1de:	enter  0xb38b,0x1d
  40e1e2:	pop    ax
  40e1e4:	mov    ah,0x78
  40e1e6:	xchg   BYTE PTR [eax-0x77],ch
  40e1e9:	ins    BYTE PTR es:[edi],dx
  40e1ea:	add    eax,0x2c91a0fd
  40e1ef:	mov    DWORD PTR [ebp+0x16],esp
  40e1f2:	mov    BYTE PTR [ecx],dl
  40e1f4:	jno    0x40e228
  40e1f6:	push   esp
  40e1f7:	push   ebx
  40e1f8:	fcom   QWORD PTR [edx-0x22]
  40e1fb:	dec    edx
  40e1fc:	les    ebp,FWORD PTR [ecx]
  40e1fe:	adc    eax,0x8a39e13d
  40e203:	inc    ebx
  40e204:	int3   
  40e205:	push   edi
  40e206:	sbb    ch,BYTE PTR [ecx-0x2db6f92]
  40e20c:	add    DWORD PTR [edx+0x6884fa54],edx
  40e212:	popa   
  40e213:	or     bl,BYTE PTR [eax-0x7cac5921]
  40e219:	mov    ds:0x8e005aa4,al
  40e21e:	mov    esi,0x85fa7218
  40e223:	lods   al,BYTE PTR ds:[esi]
  40e224:	mov    eax,DWORD PTR [ebx-0x60349703]
  40e22a:	pop    ebp
  40e22b:	pop    ds
  40e22c:	and    dh,dl
  40e22e:	repz push ebp
  40e230:	test   ebx,0xed6756bb
  40e236:	inc    eax
  40e237:	mov    ebp,0x40f23dfb
  40e23c:	sub    eax,0x65ae1162
  40e241:	sar    DWORD PTR [ebx],1
  40e243:	xchg   edx,ebp
  40e245:	and    DWORD PTR [edx-0xac5f46f],0xf
  40e24c:	xor    esi,0x59
  40e24f:	shl    ebp,0xcc
  40e252:	repnz loope 0x40e2ac
  40e255:	out    0x7d,al
  40e257:	ins    BYTE PTR es:[edi],dx
  40e258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e259:	aad    0x54
  40e25b:	adc    al,0x5e
  40e25d:	inc    esp
  40e25e:	ins    BYTE PTR es:[edi],dx
  40e25f:	inc    esi
  40e260:	sbb    BYTE PTR [edx],0xc6
  40e263:	fdivr  st,st(0)
  40e265:	mov    dl,0xe3
  40e267:	out    0xa2,eax
  40e269:	fidivr DWORD PTR [edx]
  40e26b:	cwde   
  40e26c:	dec    eax
  40e26d:	fsubr  DWORD PTR [esi-0x68]
  40e270:	sub    bh,BYTE PTR [ecx+0x2e]
  40e273:	push   edx
  40e274:	xchg   ebx,eax
  40e275:	mov    cs,WORD PTR [ecx-0x3b]
  40e278:	outs   dx,DWORD PTR ds:[esi]
  40e279:	retf   0x617f
  40e27c:	xchg   ecx,eax
  40e27d:	push   cs
  40e27e:	mov    ecx,0xa170dbf2
  40e283:	lea    eax,[edx-0x7e]
  40e286:	jbe    0x40e28f
  40e288:	ja     0x40e2cc
  40e28a:	sbb    ecx,ecx
  40e28c:	retf   
  40e28d:	ret    0x24f
  40e290:	mov    DWORD PTR ds:0x49992809,0x87a70b2f
  40e29a:	fdiv   st,st(7)
  40e29c:	xor    al,0xd3
  40e29e:	cs sbb eax,0x4c4721dc
  40e2a4:	xor    BYTE PTR [ebp+0x78bd039a],0x4e
  40e2ab:	pusha  
  40e2ac:	rol    BYTE PTR [edi+edx*4+0x1c3eed19],1
  40e2b3:	jecxz  0x40e2e2
  40e2b5:	cmp    eax,0xc7e71f53
  40e2ba:	adc    DWORD PTR [ecx],ebp
  40e2bc:	and    edx,DWORD PTR [ebp-0x18]
  40e2bf:	fidiv  WORD PTR [ebx+0x539cee91]
  40e2c5:	mov    BYTE PTR [eax+0x1e],ah
  40e2c8:	out    dx,eax
  40e2c9:	test   eax,0xc245d074
  40e2ce:	mov    edx,0xdbb8ec5a
  40e2d3:	jne    0x40e347
  40e2d5:	stos   DWORD PTR es:[edi],eax
  40e2d6:	jg     0x40e25f
  40e2d8:	pop    ss
  40e2d9:	sub    DWORD PTR [edx+0x2567de79],edi
  40e2df:	or     ch,BYTE PTR [esi]
  40e2e1:	xlat   BYTE PTR ds:[ebx]
  40e2e2:	cmp    DWORD PTR [ebx],ebp
  40e2e4:	fwait
  40e2e5:	bound  ecx,QWORD PTR [edx-0x24]
  40e2e8:	stc    
  40e2e9:	add    DWORD PTR [eax],eax
  40e2eb:	and    BYTE PTR [ebp+0x10],bl
  40e2ee:	sbb    ebx,DWORD PTR ds:0x55b14945
  40e2f4:	inc    edx
  40e2f5:	xor    DWORD PTR [ebx],esp
  40e2f7:	jmp    0x67be:0x5e7ff56e
  40e2fe:	add    dh,BYTE PTR [edi+0x3f]
  40e301:	jmp    0x57ad717c
  40e306:	xchg   ebp,eax
  40e307:	imul   esi,DWORD PTR [ecx],0xffffff92
  40e30a:	ds dec esp
  40e30c:	sub    BYTE PTR [ebp+eax*2-0x49],ch
  40e310:	push   esi
  40e311:	pop    ecx
  40e312:	ins    DWORD PTR es:[edi],dx
  40e313:	cdq    
  40e314:	aas    
  40e315:	mov    bl,0x6f
  40e317:	or     edx,eax
  40e319:	push   eax
  40e31a:	mov    ?,esi
  40e31c:	adc    ah,BYTE PTR [esi]
  40e31e:	mov    esp,0x9e7d0a3e
  40e323:	pusha  
  40e324:	sub    dl,BYTE PTR [eax-0x57856377]
  40e32a:	mov    esp,0x6cbf3d1a
  40e32f:	dec    edi
  40e330:	inc    edi
  40e331:	cli    
  40e332:	lds    esi,FWORD PTR [edx]
  40e334:	outs   dx,DWORD PTR ds:[esi]
  40e335:	adc    BYTE PTR [esi-0x283e91a5],bl
  40e33b:	shr    BYTE PTR [eax],1
  40e33d:	sub    ebx,DWORD PTR [esi-0x31730023]
  40e343:	lea    ebp,[eax-0xe]
  40e346:	mov    al,ds:0xe2d05944
  40e34b:	dec    ecx
  40e34c:	daa    
  40e34d:	daa    
  40e34e:	jmp    0x40e325
  40e350:	jmp    0x40e320
  40e352:	jmp    0xaf1ccd3
  40e357:	jb     0x40e37f
  40e359:	mov    eax,0x7bb3d6e1
  40e35e:	(bad)  
  40e35f:	jmp    0x6e50e36a
  40e364:	inc    edi
  40e365:	mov    bl,0x44
  40e367:	ret    
  40e368:	inc    edi
  40e369:	xor    al,0x16
  40e36b:	jmp    0x40e3cf
  40e36d:	out    0xfe,al
  40e36f:	fiadd  DWORD PTR ss:[ebp+0x6b]
  40e373:	mov    dl,0xa
  40e375:	xor    eax,0x427d6df
  40e37a:	sub    eax,DWORD PTR gs:[ebp+eax*2+0x40]
  40e37f:	icebp  
  40e380:	test   al,0x82
  40e382:	or     bl,0x97
  40e385:	mov    bh,BYTE PTR [edi+0x3c682ab4]
  40e38b:	dec    eax
  40e38c:	(bad)  [esi*1-0x57e46271]
  40e393:	cmp    eax,0x911d7a42
  40e398:	dec    eax
  40e399:	jbe    0x40e3d0
  40e39b:	fcmovne st,st(6)
  40e39d:	test   DWORD PTR ds:0x5dd06349,0x87b0a21a
  40e3a7:	pop    edi
  40e3a8:	inc    ebx
  40e3a9:	push   esi
  40e3aa:	jno    0x40e41a
  40e3ac:	xor    edi,ebp
  40e3ae:	ss (bad) 
  40e3b1:	sbb    DWORD PTR [edx-0x20],0xffffffe1
  40e3b5:	pop    esp
  40e3b6:	pop    eax
  40e3b7:	push   eax
  40e3b8:	xchg   edi,eax
  40e3b9:	pop    esp
  40e3ba:	pop    ebx
  40e3bb:	pop    esi
  40e3bc:	sub    eax,0x3bacfe2a
  40e3c1:	(bad)  
  40e3c2:	and    eax,0x3b3644c7
  40e3c7:	pop    ebx
  40e3c8:	ja     0x40e3de
  40e3ca:	mov    ds:0x87e12f59,eax
  40e3cf:	push   esp
  40e3d0:	inc    esi
  40e3d1:	js     0x40e438
  40e3d3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d5:	iret   
  40e3d6:	add    al,0x1b
  40e3d8:	std    
  40e3d9:	add    DWORD PTR [edx+0xb],edx
  40e3dc:	idiv   BYTE PTR [ebx]
  40e3de:	aam    0x8d
  40e3e0:	rol    BYTE PTR [edx+0x13],0xc4
  40e3e4:	mov    ebx,0x494ae69
  40e3e9:	xchg   ebx,eax
  40e3ea:	and    DWORD PTR [ecx+0x1bc2c9fa],ebx
  40e3f0:	fdiv   QWORD PTR [ecx-0x26]
  40e3f3:	call   0xc547:0x29c2dcf0
  40e3fa:	les    esi,FWORD PTR [ebx-0x1fea00a6]
  40e400:	add    al,0xfe
  40e402:	clc    
  40e403:	mov    edi,0x7d8a6e87
  40e408:	(bad)  
  40e40a:	or     eax,DWORD PTR [edi+0x1eb23176]
  40e410:	mov    ds:0x827b4ad0,al
  40e415:	xor    al,0x33
  40e417:	jecxz  0x40e3cb
  40e419:	sub    dl,BYTE PTR [ecx+eax*4-0x49]
  40e41d:	fwait
  40e41e:	jg     0x40e3f6
  40e420:	out    0xdf,al
  40e422:	es gs mov bl,0x61
  40e426:	retf   0xc250
  40e429:	pushf  
  40e42a:	jbe    0x40e3ac
  40e42c:	push   esi
  40e42e:	out    dx,al
  40e42f:	jle    0x40e48b
  40e431:	daa    
  40e432:	push   0xffffffa3
  40e434:	dec    esp
  40e435:	xlat   BYTE PTR ds:[ebx]
  40e436:	push   ecx
  40e437:	fidiv  DWORD PTR [esi+ebx*4-0x4cb8b66c]
  40e43e:	das    
  40e43f:	rcl    al,1
  40e441:	dec    eax
  40e442:	push   es
  40e443:	shr    BYTE PTR [edi+0x496214c8],0xa1
  40e44a:	lods   eax,DWORD PTR ds:[esi]
  40e44b:	(bad)  
  40e44c:	mov    ds:0xf3426011,eax
  40e451:	add    BYTE PTR [esi],0xe
  40e454:	je     0x40e41e
  40e456:	push   ebx
  40e457:	dec    edi
  40e458:	xor    edi,DWORD PTR [esi+0x3b5b5d80]
  40e45e:	push   edx
  40e45f:	mov    al,0x23
  40e461:	fisub  WORD PTR [esi]
  40e463:	jno    0x40e4ad
  40e465:	mov    ebp,0xf8aaf2c6
  40e46a:	add    eax,0xd8e9efa5
  40e46f:	sbb    bh,BYTE PTR [eax+0x48d6bd23]
  40e475:	sub    eax,DWORD PTR [ecx+0x33]
  40e478:	jecxz  0x40e4cd
  40e47a:	shl    DWORD PTR [ebp+0x42],0x65
  40e47e:	mov    ecx,0x97e1a852
  40e483:	adc    al,0xb3
  40e485:	mov    bl,0x56
  40e487:	mov    edi,cs
  40e489:	outs   dx,BYTE PTR ds:[esi]
  40e48a:	mov    edi,0xdda05dd6
  40e48f:	sbb    DWORD PTR [esi],eax
  40e491:	test   DWORD PTR [ecx+0x5],edx
  40e494:	aas    
  40e495:	cld    
  40e496:	fwait
  40e497:	adc    al,0x83
  40e499:	push   ds
  40e49a:	int3   
  40e49b:	leave  
  40e49c:	push   esp
  40e49d:	stos   DWORD PTR es:[edi],eax
  40e49e:	pusha  
  40e49f:	je     0x40e4f9
  40e4a1:	out    0xe0,al
  40e4a3:	push   esi
  40e4a4:	sar    bh,cl
  40e4a6:	or     ebp,DWORD PTR [di-0x5a]
  40e4aa:	pop    cx
  40e4ac:	jmp    0x40e4bb
  40e4ae:	push   DWORD PTR [ecx*2-0x1d30e2f]
  40e4b5:	cmp    eax,0xc994edc
  40e4ba:	cmc    
  40e4bb:	mov    eax,ds:0xed67f96a
  40e4c0:	mov    esp,0x342ca45c
  40e4c5:	test   DWORD PTR ds:0xd2e6e1ae,ebp
  40e4cb:	sar    DWORD PTR ds:0xcab7e996,0xe9
  40e4d2:	sub    BYTE PTR [esp+eax*2-0x40],bl
  40e4d6:	fist   DWORD PTR [edi-0x4b]
  40e4d9:	mov    eax,edx
  40e4db:	mov    ds:0x40e36257,eax
  40e4e0:	leave  
  40e4e1:	ffreep st(3)
  40e4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e4:	and    ecx,edx
  40e4e6:	sbb    eax,0x56c2592e
  40e4eb:	push   ds
  40e4ec:	aam    0xe
  40e4ee:	ds jecxz 0x40e4af
  40e4f1:	inc    edi
  40e4f2:	int3   
  40e4f3:	mov    ch,dh
  40e4f5:	fldenv [ebx-0x35c49f9e]
  40e4fb:	mov    bh,BYTE PTR [eax-0x4d0bae7f]
  40e501:	enter  0x4a5d,0xf2
  40e505:	aam    0x3f
  40e507:	add    eax,0x5bac934
  40e50c:	sub    DWORD PTR [ebp+0x59],esp
  40e50f:	cs push es
  40e511:	mov    dh,0xe1
  40e513:	xchg   ebp,eax
  40e514:	mov    edi,0x9dbae9a
  40e519:	(bad)  
  40e51a:	aad    0xb3
  40e51c:	dec    esi
  40e51d:	imul   esp,DWORD PTR [eax+edi*1-0x3567533a],0x1d7319e1
  40e528:	aam    0x37
  40e52a:	test   eax,0x112fdefc
  40e52f:	retf   0x2faf
  40e532:	test   edi,eax
  40e534:	add    eax,0xd64568c8
  40e539:	mov    bh,0x33
  40e53b:	fld    TBYTE PTR fs:[ebx]
  40e53e:	jbe    0x40e4c1
  40e540:	xor    eax,0x5698d8ed
  40e545:	add    edi,ecx
  40e547:	mov    cl,0xf2
  40e549:	fcmovbe st,st(3)
  40e54b:	popa   
  40e54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e54d:	push   cs
  40e54e:	jmp    0xb866:0xddd4d34
  40e555:	dec    eax
  40e556:	xor    ecx,DWORD PTR [ebx-0x7be139f3]
  40e55c:	cmp    ah,dh
  40e55e:	retf   
  40e55f:	int3   
  40e560:	fxch   st(4)
  40e562:	sbb    al,0x70
  40e564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e565:	mov    al,0xcc
  40e567:	pop    ecx
  40e568:	fwait
  40e569:	out    dx,al
  40e56a:	mov    edx,0xd032eb45
  40e56f:	inc    eax
  40e570:	cmc    
  40e571:	stc    
  40e572:	dec    esi
  40e573:	(bad)  
  40e574:	outs   dx,DWORD PTR ds:[esi]
  40e575:	ret    
  40e576:	sbb    BYTE PTR [esi+0x28b864d7],dh
  40e57c:	ja     0x40e56e
  40e57e:	outs   dx,BYTE PTR ds:[esi]
  40e57f:	out    0x61,eax
  40e581:	mov    edx,0xd8e498a6
  40e586:	mov    bl,0xef
  40e588:	fcmovb st,st(2)
  40e58a:	cdq    
  40e58b:	out    0xc3,eax
  40e58d:	cld    
  40e58e:	fld    TBYTE PTR [ebp*4-0x41bb3c5c]
  40e595:	mov    ds:0xef77acc4,al
  40e59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e59b:	mov    ecx,0x11f02176
  40e5a0:	les    edx,FWORD PTR [ebp+0x488b8434]
  40e5a6:	mov    dl,0x92
  40e5a8:	xor    esi,DWORD PTR [eax]
  40e5aa:	mov    dh,ah
  40e5ac:	retf   
  40e5ad:	add    BYTE PTR [ecx],ch
  40e5af:	sub    eax,0x99724ffd
  40e5b4:	sub    DWORD PTR [esi-0x4f55df07],esi
  40e5ba:	popa   
  40e5bb:	mov    eax,0xca7bb19e
  40e5c0:	iret   
  40e5c1:	or     eax,0xd29f0c93
  40e5c6:	sub    esp,DWORD PTR [eax*4+0x65a1c3af]
  40e5cd:	dec    esi
  40e5ce:	loope  0x40e579
  40e5d0:	xor    al,0xdf
  40e5d2:	dec    esi
  40e5d3:	adc    DWORD PTR [edi],eax
  40e5d5:	push   edx
  40e5d6:	inc    ebp
  40e5d7:	(bad)
  40e5db:	xor    eax,0xada10287
  40e5e0:	jae    0x40e5ff
  40e5e2:	pop    es
  40e5e3:	lods   eax,DWORD PTR ds:[esi]
  40e5e5:	fst    QWORD PTR [ecx+0x39718af1]
  40e5eb:	sbb    eax,0x67845c97
  40e5f0:	dec    esp
  40e5f1:	nop
  40e5f2:	sbb    edx,DWORD PTR [eax-0xb]
  40e5f5:	mov    al,ds:0x47a629f3
  40e5fa:	retf   0xd11f
  40e5fd:	dec    edi
  40e5fe:	mov    bh,0xf2
  40e600:	enter  0x142a,0x58
  40e604:	repnz sbb eax,0x559c7b9
  40e60a:	daa    
  40e60b:	mov    al,ds:0xe218c172
  40e610:	adc    BYTE PTR [edx+esi*2-0xd],0x4d
  40e615:	clc    
  40e616:	and    BYTE PTR [ebp+0x5a],0xb5
  40e61a:	aas    
  40e61b:	ds in  eax,0x75
  40e61e:	dec    ecx
  40e61f:	jmp    DWORD PTR [ecx+0x69]
  40e622:	neg    DWORD PTR [ecx+0x66ad83a2]
  40e628:	imul   edx,DWORD PTR [ecx+0x3cc7c58],0x70
  40e62f:	xor    bl,BYTE PTR [edx+ecx*4+0x472311f7]
  40e636:	adc    al,0xcf
  40e638:	cmp    al,0x49
  40e63a:	or     cl,al
  40e63c:	or     al,0x62
  40e63e:	sub    eax,0x88d5a681
  40e643:	nop
  40e644:	sbb    al,0x8b
  40e646:	adc    eax,0x8222e740
  40e64b:	popf   
  40e64c:	or     eax,0x2a55e31
  40e651:	mov    cl,0xb6
  40e653:	inc    ebp
  40e654:	lods   al,BYTE PTR ds:[esi]
  40e655:	fistp  WORD PTR [ebx+0x281f7a1c]
  40e65b:	in     al,0x37
  40e65d:	mov    bl,BYTE PTR ss:[ecx]
  40e660:	shr    BYTE PTR ds:0xb6e43497,0x1f
  40e667:	shl    dh,1
  40e669:	scas   eax,DWORD PTR es:[edi]
  40e66a:	mov    esi,0xacb506f5
  40e66f:	mov    ch,0xe1
  40e671:	cmp    al,0x29
  40e673:	(bad)
  40e678:	jno    0x40e6a7
  40e67a:	pusha  
  40e67b:	cmp    eax,0x1f8ca522
  40e680:	sahf   
  40e681:	mov    esp,esi
  40e683:	xchg   edi,eax
  40e684:	fisttp WORD PTR [ebp+ebp*8-0x46]
  40e688:	mov    ah,0xfb
  40e68a:	mov    cl,0x11
  40e68c:	adc    edi,DWORD PTR [eax-0x7d7e2cba]
  40e692:	outs   dx,BYTE PTR ds:[esi]
  40e693:	adc    al,BYTE PTR [edx]
  40e695:	adc    DWORD PTR [edi+ebx*2+0x3b6f13ca],eax
  40e69c:	or     ebx,DWORD PTR [edx+0x36e3f754]
  40e6a2:	xlat   BYTE PTR ds:[ebx]
  40e6a3:	lods   al,BYTE PTR ds:[esi]
  40e6a4:	scas   eax,DWORD PTR es:[edi]
  40e6a5:	les    esi,FWORD PTR [bp-0x42]
  40e6a9:	jnp    0x40e655
  40e6ab:	inc    ebx
  40e6ac:	xchg   DWORD PTR es:[edi],edx
  40e6af:	push   cs
  40e6b0:	idiv   DWORD PTR [esi-0x22]
  40e6b3:	add    DWORD PTR [ecx+0x1829535a],ebp
  40e6b9:	in     al,0x46
  40e6bb:	dec    ebp
  40e6bc:	(bad)  
  40e6bd:	addr16 mov al,ds:0x107c
  40e6c1:	adc    BYTE PTR [ebp+0x75],ah
  40e6c4:	inc    ebx
  40e6c5:	es out 0x64,al
  40e6c8:	lock (bad) 
  40e6ca:	retf   
  40e6cb:	fdiv   QWORD PTR [ecx-0x55]
  40e6ce:	push   bx
  40e6d0:	adc    al,0x44
  40e6d2:	pop    edx
  40e6d3:	jge    0x40e67c
  40e6d5:	pop    esi
  40e6d6:	mov    al,0x2c
  40e6d8:	das    
  40e6d9:	xchg   esp,eax
  40e6da:	pop    eax
  40e6dc:	dec    ebp
  40e6dd:	push   ecx
  40e6de:	sub    esp,DWORD PTR [edx]
  40e6e0:	mov    al,ds:0xec12d978
  40e6e5:	push   ebp
  40e6e6:	fldenv [edx-0x3fb01110]
  40e6ec:	dec    edi
  40e6ed:	dec    ebx
  40e6ee:	(bad)  
  40e6ef:	mov    ds:0xd79193b1,al
  40e6f4:	sbb    eax,0x589532bd
  40e6f9:	xor    eax,0x36eb6bb9
  40e6fe:	and    BYTE PTR [eax+0x3f],bh
  40e701:	dec    edx
  40e702:	sahf   
  40e703:	mov    eax,0xbed3ea85
  40e708:	fs hlt 
  40e70a:	adc    BYTE PTR [esi+0x41],al
  40e70d:	mov    edx,DWORD PTR [ebp+ecx*1+0x1a]
  40e711:	test   BYTE PTR [edx+0x6d],ch
  40e714:	or     eax,0x937e8f1f
  40e719:	sbb    al,0x6
  40e71b:	mov    ah,0x79
  40e71d:	pop    edi
  40e71e:	ja     0x40e750
  40e720:	sub    eax,0xa133d26e
  40e725:	(bad)  
  40e726:	test   edi,0xa1e09f4c
  40e72c:	popf   
  40e72d:	int3   
  40e72e:	(bad)  
  40e72f:	outs   dx,DWORD PTR ds:[esi]
  40e730:	stos   BYTE PTR es:[edi],al
  40e731:	out    dx,al
  40e732:	xchg   edi,eax
  40e733:	pushf  
  40e734:	mov    BYTE PTR [ebp+0x2bc28299],dh
  40e73a:	fdiv   DWORD PTR [esi]
  40e73c:	les    ebx,FWORD PTR [esi]
  40e73e:	fwait
  40e73f:	js     0x40e705
  40e741:	adc    ebx,edi
  40e743:	push   0xffffffbb
  40e745:	leave  
  40e746:	sar    DWORD PTR [eax],0xc4
  40e749:	inc    edi
  40e74a:	dec    eax
  40e74b:	mov    ebp,0xa82d2d5d
  40e750:	sti    
  40e751:	bound  ecx,QWORD PTR [eiz*1-0xfc89bd5]
  40e758:	and    dl,bh
  40e75a:	inc    ecx
  40e75b:	mov    esi,0x3a461edd
  40e760:	add    edx,esp
  40e762:	pop    ebp
  40e763:	add    bh,bh
  40e765:	daa    
  40e766:	xchg   esi,eax
  40e767:	lock cmp esi,DWORD PTR [eax+0x43]
  40e76b:	sub    al,0x38
  40e76d:	fcom   DWORD PTR [bp+di+0x164]
  40e772:	int    0xce
  40e774:	(bad)  
  40e775:	sbb    BYTE PTR [ebx-0x61],cl
  40e778:	mov    WORD PTR [edx+0x2f],ds
  40e77b:	stc    
  40e77c:	xchg   DWORD PTR [esi+ebp*2],eax
  40e77f:	xor    al,0xa5
  40e781:	call   0xe141:0xfe3cd293
  40e788:	jle    0x40e749
  40e78a:	add    eax,0x263e67ca
  40e78f:	xor    edi,edi
  40e791:	pop    ecx
  40e792:	iret   
  40e793:	shl    bl,1
  40e795:	es enter 0x9dd8,0xe9
  40e79a:	sti    
  40e79b:	push   0xffffffb1
  40e79d:	mov    edx,0xf8ffabeb
  40e7a2:	loop   0x40e75a
  40e7a4:	push   ss
  40e7a5:	stos   BYTE PTR es:[edi],al
  40e7a6:	mov    esi,0xdcb0e7dc
  40e7ab:	and    DWORD PTR [edi],ecx
  40e7ad:	cmp    ecx,edx
  40e7af:	cmp    eax,0xe79b2929
  40e7b4:	mov    esp,gs
  40e7b6:	sub    DWORD PTR [edx-0x28],ebx
  40e7b9:	es ja  0x40e796
  40e7bc:	push   esp
  40e7bd:	add    DWORD PTR [edi],eax
  40e7bf:	mov    ch,0xbd
  40e7c1:	adc    esi,DWORD PTR [ebx+0x36]
  40e7c4:	and    BYTE PTR [edx-0x6b98f0d3],bl
  40e7ca:	ret    0x8807
  40e7cd:	leave  
  40e7ce:	cmp    ebx,ebx
  40e7d0:	out    0x55,al
  40e7d2:	jnp    0x40e7e2
  40e7d4:	dec    eax
  40e7d5:	pop    ss
  40e7d6:	mov    esp,0xe425e145
  40e7db:	sub    dh,BYTE PTR [ecx]
  40e7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7de:	mov    al,ds:0x30771f16
  40e7e3:	fadd   DWORD PTR [edi-0x3d]
  40e7e6:	inc    eax
  40e7e7:	xchg   ebx,eax
  40e7e8:	out    dx,eax
  40e7e9:	add    esi,DWORD PTR [esi+0x48]
  40e7ec:	mov    ds:0x66c16d1c,eax
  40e7f1:	sar    DWORD PTR [ebp+eiz*4-0x6fa38983],cl
  40e7f8:	scas   al,BYTE PTR es:[edi]
  40e7f9:	ds xchg ebx,eax
  40e7fb:	mov    al,0xca
  40e7fd:	shl    bh,1
  40e7ff:	cmc    
  40e800:	and    al,0x92
  40e802:	adc    DWORD PTR [edx-0x588a7b40],eax
  40e808:	mov    eax,0x4771eec6
  40e80d:	dec    ebx
  40e80e:	popf   
  40e80f:	clc    
  40e810:	daa    
  40e811:	call   0xe3d2:0x6973f1d5
  40e818:	mov    ebp,0x4bdd5e67
  40e81d:	fwait
  40e81e:	mov    edx,0x8eeb73aa
  40e823:	test   edi,0x4bdc38d1
  40e829:	je     0x40e867
  40e82b:	mov    esi,0xb268a40f
  40e830:	(bad)  
  40e831:	adc    dl,BYTE PTR [edx+0x6a8e6cbf]
  40e837:	xlat   BYTE PTR fs:[ebx]
  40e839:	lahf   
  40e83a:	daa    
  40e83b:	leave  
  40e83c:	sbb    al,0x62
  40e83e:	jg     0x40e819
  40e840:	cmc    
  40e841:	scas   eax,DWORD PTR es:[edi]
  40e842:	call   0x7446:0xc0be05ad
  40e849:	jne    0x40e802
  40e84b:	xor    bh,bh
  40e84d:	out    dx,eax
  40e84e:	int3   
  40e84f:	sbb    ecx,DWORD PTR [eax]
  40e851:	fbstp  TBYTE PTR [ebp-0x3c]
  40e854:	and    cl,BYTE PTR [esi+0x58]
  40e857:	fwait
  40e858:	jns    0x40e7de
  40e85a:	int    0x79
  40e85c:	and    DWORD PTR [esi-0x7bead175],0x66b81a60
  40e866:	xor    dl,BYTE PTR [esi+eiz*1]
  40e869:	aaa    
  40e86a:	daa    
  40e86b:	out    0xaf,eax
  40e86d:	inc    ebx
  40e86e:	add    DWORD PTR [eax],0x44d84139
  40e874:	cld    
  40e875:	adc    al,0x9b
  40e877:	dec    edx
  40e878:	icebp  
  40e879:	jne    0x40e8c6
  40e87b:	jecxz  0x40e8bf
  40e87d:	mov    cl,0x8c
  40e87f:	jae    0x40e877
  40e881:	(bad)
  40e885:	bound  esp,QWORD PTR [edx+0x36a66c7c]
  40e88b:	inc    edx
  40e88c:	in     al,dx
  40e88d:	lock mov bl,cl
  40e890:	xchg   edx,eax
  40e891:	lods   eax,DWORD PTR ds:[esi]
  40e892:	adc    DWORD PTR [eax+0x52],edx
  40e895:	data16 std 
  40e897:	mov    esi,0xc91729a4
  40e89c:	inc    ebp
  40e89d:	and    DWORD PTR [edi+0x59cc4ab5],esp
  40e8a3:	add    eax,DWORD PTR [eax+0x14]
  40e8a6:	and    ah,BYTE PTR [ecx+0x5f0126d8]
  40e8ac:	rcl    DWORD PTR [edi+0x11],1
  40e8af:	push   es
  40e8b0:	jb     0x40e873
  40e8b2:	loop   0x40e924
  40e8b4:	dec    edi
  40e8b5:	icebp  
  40e8b6:	les    eax,FWORD PTR [ebp-0x1fe7644c]
  40e8bc:	jb     0x40e8bd
  40e8be:	repz test al,0xcd
  40e8c1:	shl    DWORD PTR [ebp+0x78],1
  40e8c4:	rol    DWORD PTR [ebx],cl
  40e8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8c7:	es aam 0xca
  40e8ca:	popa   
  40e8cb:	(bad)  
  40e8cc:	cmc    
  40e8cd:	or     al,0xb9
  40e8cf:	inc    esp
  40e8d0:	into   
  40e8d1:	lahf   
  40e8d2:	les    eax,FWORD PTR [edx]
  40e8d4:	push   ebx
  40e8d5:	fisttp DWORD PTR [ecx-0x79]
  40e8d8:	sbb    al,ah
  40e8da:	xchg   edi,eax
  40e8db:	pushf  
  40e8dc:	sbb    BYTE PTR [ecx+0x6691e67c],cl
  40e8e2:	cwde   
  40e8e3:	inc    esp
  40e8e4:	jl     0x40e8db
  40e8e6:	out    0x64,eax
  40e8e8:	dec    edx
  40e8e9:	scas   eax,DWORD PTR es:[edi]
  40e8ea:	cmp    esp,esp
  40e8ec:	and    DWORD PTR [ecx-0x35041742],esp
  40e8f2:	xchg   ebx,eax
  40e8f3:	out    dx,al
  40e8f4:	add    al,0x4c
  40e8f6:	and    al,0xb9
  40e8f8:	xor    esi,DWORD PTR [ebp+0x55]
  40e8fb:	dec    edx
  40e8fc:	sub    DWORD PTR [ebx+ecx*1],eax
  40e8ff:	sti    
  40e900:	out    0x6b,al
  40e902:	fdiv   DWORD PTR [eax]
  40e904:	or     DWORD PTR [ebx],0x37
  40e907:	cmp    DWORD PTR [ecx],edx
  40e909:	xor    al,0xf2
  40e90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e90c:	push   ecx
  40e90d:	retf   0xe866
  40e910:	xchg   esi,eax
  40e911:	pusha  
  40e912:	fsubr  QWORD PTR ds:0x410b648
  40e918:	push   ds
  40e919:	inc    esi
  40e91a:	pop    edi
  40e91b:	out    dx,al
  40e91c:	and    BYTE PTR [ecx+0x57],al
  40e91f:	mov    cl,BYTE PTR [ecx-0x2d]
  40e922:	lods   eax,DWORD PTR ds:[esi]
  40e923:	xor    bh,BYTE PTR [ebp+0x11]
  40e926:	bound  ebp,QWORD PTR [edi]
  40e928:	sbb    al,0x70
  40e92a:	jno    0x40e93b
  40e92c:	or     al,0xfd
  40e92e:	ins    DWORD PTR es:[edi],dx
  40e92f:	sti    
  40e930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e931:	hlt    
  40e932:	call   FWORD PTR [ebx]
  40e934:	loop   0x40e8c6
  40e936:	enter  0x7669,0x9
  40e93a:	stc    
  40e93b:	sub    edx,esi
  40e93d:	ret    
  40e93e:	pop    eax
  40e93f:	xchg   ebx,eax
  40e940:	test   BYTE PTR [ecx],dl
  40e942:	inc    edx
  40e943:	in     al,dx
  40e944:	div    DWORD PTR [ebx+0x2d]
  40e947:	lea    eax,[ecx+eax*4-0x1]
  40e94b:	pop    ebp
  40e94c:	stos   DWORD PTR es:[edi],eax
  40e94d:	dec    ebx
  40e94e:	loope  0x40e8fc
  40e950:	rol    BYTE PTR [edi-0x2],cl
  40e953:	inc    eax
  40e954:	rcr    DWORD PTR [esi],1
  40e956:	cmc    
  40e957:	popf   
  40e958:	pop    es
  40e959:	mov    edi,0x12170afc
  40e95e:	or     BYTE PTR [eax],bh
  40e960:	sbb    eax,0x3c1580ec
  40e965:	enter  0xfcfb,0x99
  40e969:	xor    al,0x75
  40e96b:	xor    edi,DWORD PTR [ecx+ebx*2+0x22]
  40e96f:	sub    al,0x73
  40e971:	(bad)  
  40e972:	pop    edi
  40e973:	(bad)  
  40e974:	rcr    ch,cl
  40e976:	pusha  
  40e977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e978:	in     eax,0x68
  40e97a:	aam    0x18
  40e97c:	xchg   ecx,eax
  40e97d:	cli    
  40e97e:	add    al,0xbc
  40e980:	lods   al,BYTE PTR ds:[esi]
  40e981:	sub    DWORD PTR [edx-0x5cb6faa4],ecx
  40e987:	mov    edx,0x5e8ec8bf
  40e98c:	pop    ebx
  40e98d:	xor    esi,DWORD PTR [ebp-0x44]
  40e990:	hlt    
  40e991:	xor    al,0x15
  40e993:	mov    al,0x1e
  40e995:	hlt    
  40e996:	push   ebp
  40e997:	mov    edi,0x6b71df30
  40e99c:	mov    WORD PTR [edi+0x1b],ss
  40e99f:	cdq    
  40e9a0:	or     BYTE PTR [ecx-0x5fb873ff],al
  40e9a6:	mov    ebp,0x45839dc0
  40e9ab:	sahf   
  40e9ac:	lds    ebp,FWORD PTR [esi-0x749dba61]
  40e9b2:	into   
  40e9b3:	js     0x40e9c2
  40e9b5:	mov    BYTE PTR [ecx-0x14],cl
  40e9b8:	xor    esi,DWORD PTR [edi+0x77199408]
  40e9be:	(bad)  
  40e9bf:	shl    DWORD PTR [ebp+0x3d44354d],1
  40e9c5:	stc    
  40e9c6:	mov    ebx,es
  40e9c8:	xchg   DWORD PTR [eax-0x27],edx
  40e9cb:	cs cmp al,0x21
  40e9ce:	sbb    al,0x5d
  40e9d0:	xor    eax,0xf0161a74
  40e9d5:	leave  
  40e9d6:	cwde   
  40e9d7:	jle    0x40ea08
  40e9d9:	shl    edi,0xdf
  40e9dc:	pop    edi
  40e9dd:	enter  0xc823,0x62
  40e9e1:	sbb    bl,ch
  40e9e3:	adc    al,0xc0
  40e9e5:	xchg   edi,eax
  40e9e6:	scas   eax,DWORD PTR es:[edi]
  40e9e7:	inc    esi
  40e9e8:	cmp    DWORD PTR [edi-0x4ccd7691],ecx
  40e9ee:	adc    eax,0x65d08dc7
  40e9f3:	xchg   edi,eax
  40e9f4:	jge    0x40ea27
  40e9f6:	mov    cl,0x7
  40e9f8:	cli    
  40e9f9:	ja     0x40e9bd
  40e9fb:	sar    BYTE PTR [eax+0x47aab5f4],0x2c
  40ea02:	sti    
  40ea03:	mov    ebp,0xabd7e626
  40ea08:	outs   dx,DWORD PTR ds:[esi]
  40ea09:	popa   
  40ea0a:	xchg   ebx,eax
  40ea0b:	cmp    esi,ebp
  40ea0d:	inc    ebx
  40ea0e:	dec    ecx
  40ea0f:	hlt    
  40ea10:	(bad)  
  40ea11:	jnp    0x40ea43
  40ea13:	in     al,0x2f
  40ea15:	dec    ebx
  40ea16:	pop    ds
  40ea17:	cld    
  40ea18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea19:	sbb    esp,ebx
  40ea1b:	aad    0x82
  40ea1d:	loopne 0x40e9fa
  40ea1f:	call   0xbad5:0x15c083e
  40ea26:	add    eax,0x3961cbaf
  40ea2b:	bound  edx,QWORD PTR [eax-0x7b]
  40ea2e:	push   edx
  40ea2f:	imul   esp,DWORD PTR [edi],0x75c2207b
  40ea35:	stos   DWORD PTR es:[edi],eax
  40ea36:	inc    ebx
  40ea37:	push   eax
  40ea38:	jae    0x40ea04
  40ea3a:	sar    BYTE PTR [ecx+0x7],1
  40ea3d:	or     BYTE PTR [ebx],bl
  40ea3f:	jo     0x40ea20
  40ea41:	adc    edx,0x4c
  40ea44:	mov    ebx,0xa1948d40
  40ea49:	pushf  
  40ea4a:	jae    0x40e9f3
  40ea4c:	cmp    ah,BYTE PTR [esi]
  40ea4e:	mov    esp,0x9e2f00cd
  40ea53:	es aaa 
  40ea55:	lock fs dec edx
  40ea58:	sub    al,0xd4
  40ea5a:	inc    esp
  40ea5b:	mov    al,ds:0xfb959eb0
  40ea60:	call   0xe5597c14
  40ea65:	lahf   
  40ea66:	or     BYTE PTR [edx],dl
  40ea68:	fstp   TBYTE PTR [ebx]
  40ea6a:	ror    DWORD PTR [ebx+ecx*8+0x8],1
  40ea6e:	call   0x8301305
  40ea73:	add    BYTE PTR [eax+0x7e],dl
  40ea76:	xchg   BYTE PTR [esi+0x44b17015],ah
  40ea7c:	fwait
  40ea7d:	push   cs
  40ea7e:	cmp    BYTE PTR [edi+0x52822741],al
  40ea84:	pminub mm3,QWORD PTR [edx+0x3f]
  40ea88:	in     al,dx
  40ea89:	push   edi
  40ea8a:	iret   
  40ea8b:	or     DWORD PTR [ecx],eax
  40ea8d:	fsubr  QWORD PTR [edi-0x13]
  40ea90:	xchg   edi,eax
  40ea91:	xchg   edi,eax
  40ea92:	cli    
  40ea93:	(bad)  
  40ea94:	stos   BYTE PTR es:[edi],al
  40ea95:	fadd   QWORD PTR [esi+esi*2+0x1e1e7880]
  40ea9c:	push   ecx
  40ea9d:	push   ebp
  40ea9e:	cld    
  40ea9f:	out    0x2a,al
  40eaa1:	mov    BYTE PTR [ebp+0x149333fb],cl
  40eaa7:	les    ebp,FWORD PTR [eax+0x5362555f]
  40eaad:	jg     0x40eaf1
  40eaaf:	jns    0x40eb2b
  40eab1:	das    
  40eab2:	xor    eax,0xda191056
  40eab7:	cmp    al,0x8c
  40eab9:	dec    ebx
  40eaba:	adc    al,0x59
  40eabc:	dec    ebx
  40eabd:	cmp    DWORD PTR [ebx],eax
  40eabf:	ret    
  40eac0:	mov    eax,DWORD PTR [edi+eax*2+0x53]
  40eac4:	sahf   
  40eac5:	mov    ecx,0xaaf8ca4a
  40eaca:	sub    esp,DWORD PTR [ebp+eax*4-0x1557c9b9]
  40ead1:	ins    DWORD PTR es:[edi],dx
  40ead2:	fadd   QWORD PTR [ecx+0x73]
  40ead5:	xchg   ecx,eax
  40ead6:	stos   BYTE PTR es:[edi],al
  40ead7:	mov    ds:0x361ee8b6,al
  40eadc:	adc    BYTE PTR [edx-0x6160b27d],bl
  40eae2:	inc    ebx
  40eae3:	jb     0x40eb0a
  40eae5:	xchg   ebp,eax
  40eae6:	dec    ebp
  40eae7:	retf   
  40eae8:	in     al,dx
  40eae9:	out    0xd5,al
  40eaeb:	sbb    BYTE PTR [ebx],ah
  40eaed:	test   eax,0x33983932
  40eaf2:	es gs mov ch,0x87
  40eaf6:	mov    bl,0x91
  40eaf8:	lea    eax,[edx+ebx*8+0x680d0972]
  40eaff:	xor    ebp,DWORD PTR [edx]
  40eb01:	and    DWORD PTR [esi-0x540b784b],eax
  40eb07:	mov    cl,0x8
  40eb09:	sbb    ah,BYTE PTR [ebx-0x32d4df01]
  40eb0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb10:	xchg   ebp,eax
  40eb11:	push   es
  40eb12:	push   ecx
  40eb13:	fiadd  DWORD PTR [ecx+0x1d07fc60]
  40eb19:	(bad)  
  40eb1a:	xchg   ebx,eax
  40eb1b:	xor    eax,0xa1234aa8
  40eb20:	in     al,dx
  40eb21:	dec    ebp
  40eb22:	sub    bh,BYTE PTR [edi-0x61]
  40eb25:	sar    DWORD PTR [edx-0x6b70806c],cl
  40eb2b:	dec    edi
  40eb2c:	sahf   
  40eb2d:	adc    edx,esi
  40eb2f:	or     BYTE PTR [edi+esi*8+0x1b],ch
  40eb33:	add    edx,ebx
  40eb35:	retf   
  40eb36:	scas   eax,DWORD PTR es:[edi]
  40eb37:	jp     0x40ebab
  40eb39:	aam    0x4e
  40eb3b:	das    
  40eb3c:	mov    bh,0x60
  40eb3e:	jle    0x40eb4a
  40eb40:	xor    ah,BYTE PTR [eax+0x20ab756]
  40eb46:	call   0x950b16d5
  40eb4b:	and    esp,DWORD PTR [esi-0x2bfce393]
  40eb51:	aad    0x95
  40eb53:	xor    al,0x7f
  40eb55:	xor    eax,0xd215ecb4
  40eb5a:	in     al,dx
  40eb5b:	pusha  
  40eb5c:	jg     0x40eb38
  40eb5e:	js     0x40ebc3
  40eb60:	test   dh,dl
  40eb62:	aad    0xea
  40eb64:	sub    al,0x80
  40eb66:	mov    WORD PTR ss:[edi+0x8],?
  40eb6a:	sub    eax,0x42a49092
  40eb6f:	jne    0x40ebec
  40eb71:	aaa    
  40eb72:	pushw  0x1d4e
  40eb76:	pushf  
  40eb77:	loop   0x40eb95
  40eb79:	fidivr WORD PTR [ebx+0x65bbc0a5]
  40eb7f:	pop    edx
  40eb80:	mov    esi,DWORD PTR [ecx]
  40eb82:	adc    esp,esi
  40eb84:	xchg   ebp,esp
  40eb86:	fisub  WORD PTR ds:0xf48778dd
  40eb8c:	ror    BYTE PTR [ebp+0x35],0xbb
  40eb90:	imul   ebp
  40eb92:	inc    esi
  40eb93:	inc    edi
  40eb94:	ds push ecx
  40eb96:	(bad)  
  40eb97:	repz (bad) 
  40eb99:	pop    esp
  40eb9a:	or     eax,0x8a5f3f7c
  40eb9f:	mov    ah,ch
  40eba1:	mov    esp,0xd67c4225
  40eba6:	addr16 cmc 
  40eba8:	push   ss
  40eba9:	fisttp QWORD PTR [esi+eax*8+0x7a3a5b8b]
  40ebb0:	addr16 inc ebx
  40ebb2:	(bad)  
  40ebb3:	push   ebx
  40ebb4:	not    DWORD PTR ds:0xee945b56
  40ebba:	dec    eax
  40ebbb:	cmc    
  40ebbc:	adc    DWORD PTR [ebx+0x23],edi
  40ebbf:	outs   dx,BYTE PTR ds:[esi]
  40ebc0:	fistp  WORD PTR [edi+ecx*8-0x76b02df4]
  40ebc7:	xor    ebp,DWORD PTR [ebp-0x10f1007]
  40ebcd:	lahf   
  40ebce:	jl     0x40ebd7
  40ebd0:	push   cs
  40ebd1:	and    bh,cl
  40ebd3:	pop    es
  40ebd4:	pop    ebx
  40ebd5:	jno    0x40ec06
  40ebd7:	xchg   esp,eax
  40ebd8:	das    
  40ebd9:	outs   dx,BYTE PTR ds:[si]
  40ebdb:	xor    al,0x26
  40ebdd:	pusha  
  40ebde:	les    eax,FWORD PTR [eax+esi*8]
  40ebe1:	cmc    
  40ebe2:	cmp    BYTE PTR [eax+0x2f67f88e],dl
  40ebe8:	push   0x48
  40ebea:	push   ecx
  40ebeb:	xchg   DWORD PTR [edi+0x69ff96],ecx
  40ebf1:	sahf   
  40ebf2:	or     dh,ah
  40ebf4:	fdivr  st,st(3)
  40ebf6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40ebf8:	out    0x22,eax
  40ebfa:	jmp    FWORD PTR [edi-0x5e]
  40ebfd:	rcl    DWORD PTR [edx+0x17c649d8],1
  40ec03:	aaa    
  40ec04:	sbb    eax,0x528cd613
  40ec09:	and    eax,ecx
  40ec0b:	inc    esp
  40ec0c:	nop
  40ec0d:	adc    BYTE PTR [eax-0x2d],dh
  40ec10:	mov    BYTE PTR [ecx+0x109bbcbe],cl
  40ec16:	push   esp
  40ec17:	ja     0x40ec75
  40ec19:	mov    eax,ds:0x57f042fe
  40ec1e:	mov    dl,0x37
  40ec20:	xchg   ebx,eax
  40ec21:	stos   DWORD PTR es:[edi],eax
  40ec22:	push   0xffffffa7
  40ec24:	neg    BYTE PTR [ecx+0x56]
  40ec27:	(bad)  [ebp+0x1452e78a]
  40ec2d:	mov    fs,WORD PTR [edi-0x23fca98c]
  40ec33:	(bad)  
  40ec34:	mov    ch,0xab
  40ec36:	mov    bl,0x47
  40ec38:	ret    
  40ec39:	and    esp,DWORD PTR [ebx-0xacbc8c5]
  40ec3f:	cwde   
  40ec40:	int3   
  40ec41:	mov    edi,edi
  40ec43:	ins    DWORD PTR es:[edi],dx
  40ec44:	sahf   
  40ec45:	or     DWORD PTR [ebx],ebx
  40ec47:	fwait
  40ec48:	popf   
  40ec49:	icebp  
  40ec4a:	call   FWORD PTR [esi-0x52]
  40ec4d:	push   cs
  40ec4e:	mov    BYTE PTR [ebx+0x69],ah
  40ec51:	(bad)  
  40ec52:	cwde   
  40ec53:	sub    bh,al
  40ec55:	sub    BYTE PTR [ebp+0x1766754c],bh
  40ec5b:	call   0x91fa026e
  40ec60:	add    ecx,DWORD PTR [edx+0x7941e3f1]
  40ec66:	stc    
  40ec67:	mov    dh,0x22
  40ec69:	sbb    DWORD PTR [edx],edx
  40ec6b:	iret   
  40ec6c:	int3   
  40ec6d:	das    
  40ec6e:	(bad)  
  40ec6f:	push   edi
  40ec70:	in     al,0x12
  40ec72:	jbe    0x40ec62
  40ec74:	inc    eax
  40ec75:	jns    0x40ecc1
  40ec77:	cmp    edi,ebp
  40ec79:	xchg   esi,eax
  40ec7a:	xchg   edx,eax
  40ec7b:	shl    BYTE PTR [ecx-0x189d9bd0],0x90
  40ec82:	sbb    al,0x46
  40ec84:	(bad)  
  40ec85:	cmp    ah,al
  40ec87:	xor    BYTE PTR [esi],dl
  40ec89:	test   DWORD PTR [ecx],eax
  40ec8b:	(bad)  
  40ec8c:	dec    ecx
  40ec8d:	test   ebp,ebx
  40ec8f:	aas    
  40ec90:	jl     0x40ec5f
  40ec92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec93:	cmp    dl,BYTE PTR [edx-0x35ca0db1]
  40ec99:	icebp  
  40ec9a:	or     BYTE PTR [ecx-0x4c6ddba8],dh
  40eca0:	jb     0x40ec2e
  40eca2:	adc    eax,0x3b1d7e68
  40eca7:	mov    cl,0x8e
  40eca9:	shl    ah,0xcd
  40ecac:	cmp    al,0x3b
  40ecae:	mov    ebp,0x26ae18d
  40ecb3:	ret    
  40ecb4:	in     al,dx
  40ecb5:	lahf   
  40ecb6:	daa    
  40ecb7:	sahf   
  40ecb8:	call   0x7f18fe8d
  40ecbd:	jns    0x40ec6e
  40ecbf:	lods   eax,DWORD PTR ds:[esi]
  40ecc0:	xchg   ecx,eax
  40ecc1:	mov    eax,fs:0x941b3e02
  40ecc7:	aaa    
  40ecc8:	sub    esi,DWORD PTR [edx-0x51bfe5b0]
  40ecce:	jne    0x40eca1
  40ecd0:	pop    esi
  40ecd1:	sti    
  40ecd2:	dec    edx
  40ecd3:	test   bh,ch
  40ecd5:	pop    edi
  40ecd6:	mov    cs,WORD PTR [edi+edx*2+0x6bc17696]
  40ecdd:	rol    bh,1
  40ecdf:	inc    ebx
  40ece0:	nop
  40ece1:	ss adc eax,0xaf643f8b
  40ece7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece8:	or     ah,bl
  40ecea:	fistp  DWORD PTR [esi+0x48a26110]
  40ecf0:	add    DWORD PTR [edx],ecx
  40ecf2:	repnz int 0x58
  40ecf5:	adc    BYTE PTR [eax+0x6a],0xec
  40ecf9:	(bad)  
  40ecfa:	xrelease mov DWORD PTR [edx+ebx*1-0x47c77509],ecx
  40ed02:	or     ch,ch
  40ed04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed05:	pusha  
  40ed06:	scas   eax,DWORD PTR es:[edi]
  40ed07:	sahf   
  40ed08:	arpl   sp,di
  40ed0a:	lods   al,BYTE PTR ds:[esi]
  40ed0b:	sub    eax,0x1098995b
  40ed10:	mov    DWORD PTR [ecx-0x473adf3b],ebx
  40ed16:	push   0xffffffd0
  40ed18:	mov    dh,0x63
  40ed1a:	mov    BYTE PTR [edx-0x6d],bl
  40ed1d:	std    
  40ed1e:	inc    eax
  40ed1f:	shl    DWORD PTR [ebx],0x5d
  40ed22:	aas    
  40ed23:	outs   dx,BYTE PTR ds:[esi]
  40ed24:	call   DWORD PTR [esi-0x6f]
  40ed27:	arpl   WORD PTR [ebx+eiz*8],sp
  40ed2a:	(bad)  
  40ed2d:	pop    esi
  40ed2e:	mov    eax,DWORD PTR [ecx+ebx*8-0xf4abaf]
  40ed35:	loopne 0x40ed5a
  40ed37:	adc    esi,edi
  40ed39:	repz gs mov esp,0x425ba238
  40ed40:	aaa    
  40ed41:	xchg   al,bh
  40ed43:	push   esp
  40ed44:	sbb    al,ah
  40ed46:	ss retf 
  40ed48:	sub    BYTE PTR [eax],bh
  40ed4a:	pop    edx
  40ed4b:	call   0x25af:0xcea7a9b7
  40ed52:	in     al,dx
  40ed53:	pop    esi
  40ed54:	add    DWORD PTR [edi],ecx
  40ed56:	xchg   esp,eax
  40ed57:	xor    eax,DWORD PTR [eax+0x2c]
  40ed5a:	add    BYTE PTR [edx-0x41],cl
  40ed5d:	stc    
  40ed5e:	stos   DWORD PTR es:[edi],eax
  40ed5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed60:	test   esp,ebx
  40ed62:	push   0x8c00b26e
  40ed67:	mov    ds:0x60084e02,al
  40ed6c:	rcr    DWORD PTR [eax+0x43],0x73
  40ed70:	fdiv   DWORD PTR [edx+0x75]
  40ed73:	loopne 0x40edf0
  40ed75:	add    edx,esi
  40ed77:	iret   
  40ed78:	mov    ecx,0xde307eb5
  40ed7d:	out    0xf,eax
  40ed7f:	sub    BYTE PTR [ebp-0x7c71c616],0x9c
  40ed86:	hlt    
  40ed87:	add    DWORD PTR [ebp-0x31d0e86],eax
  40ed8d:	sub    DWORD PTR ds:0x317b1bd7,0x3d17a117
  40ed97:	test   BYTE PTR [edx+0x47510dc1],0x1f
  40ed9e:	xchg   BYTE PTR [ecx+0x15480655],dh
  40eda4:	int3   
  40eda5:	cmp    BYTE PTR [eax+0x43],0x1
  40eda9:	jne    0x40ed5d
  40edab:	push   ds
  40edac:	inc    edi
  40edad:	scas   al,BYTE PTR es:[edi]
  40edae:	jno    0x40eda1
  40edb0:	jecxz  0x40ed66
  40edb2:	sbb    esp,DWORD PTR [eax+ecx*4]
  40edb5:	or     DWORD PTR [esi-0x56],edi
  40edb8:	leave  
  40edb9:	test   al,0xb
  40edbb:	jne    0x40ed4f
  40edbd:	sub    bl,0x6a
  40edc0:	cwde   
  40edc1:	pop    eax
  40edc2:	inc    esi
  40edc3:	mov    dl,dh
  40edc5:	aas    
  40edc6:	cmp    al,0xe7
  40edc8:	pop    ecx
  40edc9:	pop    ds
  40edca:	lock sub eax,0x4d7571e2
  40edd0:	push   eax
  40edd1:	int    0xce
  40edd3:	aas    
  40edd4:	js     0x40edbd
  40edd6:	inc    edx
  40edd7:	dec    eax
  40edd8:	out    dx,al
  40edd9:	inc    ecx
  40edda:	mov    ah,0xbc
  40eddc:	std    
  40eddd:	mov    bl,0x18
  40eddf:	or     eax,0x493dc845
  40ede4:	pop    ds
  40ede5:	jb     0x40edb6
  40ede7:	les    esp,FWORD PTR [eax-0x3f5f5105]
  40eded:	xchg   ebp,eax
  40edee:	adc    BYTE PTR [edx],ah
  40edf0:	cdq    
  40edf1:	iret   
  40edf2:	adc    cl,BYTE PTR [edi+0x4e7fd1d7]
  40edf8:	stc    
  40edf9:	pop    edi
  40edfa:	adc    al,0x32
  40edfc:	adc    BYTE PTR [ebp+0x6d2d0685],bl
  40ee02:	imul   esp,ebp,0xcf8c2a43
  40ee08:	imul   BYTE PTR [ecx-0x2d]
  40ee0b:	xor    DWORD PTR [ecx-0x28],ecx
  40ee0e:	jmp    0x40ede2
  40ee10:	pop    esi
  40ee11:	adc    DWORD PTR [ecx],eax
  40ee13:	sbb    dl,BYTE PTR [edi-0x35692b07]
  40ee19:	cs dec edx
  40ee1b:	sub    al,BYTE PTR [eax+eax*2+0x36]
  40ee1f:	add    edi,DWORD PTR [esi]
  40ee21:	not    BYTE PTR [edx]
  40ee23:	shl    DWORD PTR [eax+0x5e],cl
  40ee26:	and    edi,0x86b5da64
  40ee2c:	sbb    esi,ecx
  40ee2e:	mov    ecx,0xa77c03c2
  40ee33:	mov    bh,0x3d
  40ee35:	xor    eax,0x90e6584c
  40ee3a:	or     ecx,esp
  40ee3c:	inc    ebp
  40ee3d:	dec    ebx
  40ee3e:	mov    ebp,ss
  40ee40:	jne    0x40eea6
  40ee42:	add    ecx,DWORD PTR [ebx+ebx*4+0x2d00bcf2]
  40ee49:	fs in  al,dx
  40ee4b:	lock pop ds
  40ee4d:	push   ss
  40ee4e:	mov    dl,0xb6
  40ee50:	push   eax
  40ee51:	jmp    0xc762:0x8a881811
  40ee58:	cmp    ebx,DWORD PTR [eax+0x33]
  40ee5b:	std    
  40ee5c:	test   ebx,esp
  40ee5e:	fwait
  40ee5f:	retf   0x6e8d
  40ee62:	dec    BYTE PTR [edx+0x25]
  40ee65:	dec    edi
  40ee66:	push   edx
  40ee67:	or     bl,cl
  40ee69:	cli    
  40ee6a:	jg     0x40ee8c
  40ee6c:	pop    ds
  40ee6d:	ud1    ebp,eax
  40ee70:	mov    edx,0x55acb50a
  40ee75:	in     al,dx
  40ee76:	stos   DWORD PTR es:[edi],eax
  40ee77:	jge    0x40eeba
  40ee79:	inc    edx
  40ee7a:	sub    ebx,DWORD PTR [edx+0x45]
  40ee7d:	and    BYTE PTR [edi-0x59e31964],bh
  40ee83:	mov    edi,0xabb3982b
  40ee88:	push   ss
  40ee89:	in     eax,0xbf
  40ee8b:	leave  
  40ee8c:	(bad)  
  40ee8d:	(bad)  [edx-0x3cf6471c]
  40ee93:	xor    ebp,DWORD PTR [esi-0x5c]
  40ee96:	dec    edi
  40ee97:	(bad)  
  40ee99:	cld    
  40ee9a:	jge    0x40ee3a
  40ee9c:	push   esi
  40ee9d:	mov    ds:0x3d314860,al
  40eea2:	or     bh,BYTE PTR [ebp-0x7f2b4267]
  40eea8:	leave  
  40eea9:	loopne 0x40ee40
  40eeab:	xchg   ecx,eax
  40eeac:	pop    ss
  40eead:	loopne 0x40ee50
  40eeaf:	mov    esi,ebp
  40eeb1:	out    0xc8,eax
  40eeb3:	push   edi
  40eeb4:	push   ebx
  40eeb5:	xor    esp,DWORD PTR gs:[ebx+0x69ccc336]
  40eebc:	pop    ecx
  40eebd:	test   eax,0x2473dbc9
  40eec2:	popa   
  40eec3:	inc    ebx
  40eec4:	enter  0xaa04,0x8
  40eec8:	dec    ebx
  40eec9:	xchg   esp,eax
  40eeca:	xor    cl,ah
  40eecc:	pop    ds
  40eecd:	std    
  40eece:	cmp    al,0x6f
  40eed0:	mov    al,ds:0x9a11a8d3
  40eed5:	cmp    DWORD PTR [ebp-0x1b7c1e84],0x4f
  40eedc:	repnz push ebp
  40eede:	pop    esi
  40eedf:	cwde   
  40eee0:	sub    eax,0x9d031a25
  40eee5:	cmp    dh,BYTE PTR [edi-0x13]
  40eee8:	fbstp  TBYTE PTR [ebx+0x614a382b]
  40eeee:	mov    eax,ds:0x9918ca8b
  40eef3:	pop    es
  40eef4:	pushf  
  40eef5:	sbb    eax,0xa6499204
  40eefa:	(bad)  
  40eefb:	out    dx,eax
  40eefc:	fwait
  40eefd:	lea    edx,[esi+0x3fc36223]
  40ef03:	or     eax,0x5768f335
  40ef08:	jmp    0xa099:0x5e4e596d
  40ef0f:	jl     0x40eead
  40ef11:	cmp    bh,0xd4
  40ef14:	and    dl,BYTE PTR [ebp+0x655c2114]
  40ef1a:	shr    BYTE PTR [ebx+ebx*4],1
  40ef1d:	dec    edi
  40ef1e:	imul   ecx,esp,0xffffffb9
  40ef21:	fwait
  40ef22:	mov    ds:0x2962b45a,eax
  40ef27:	shr    BYTE PTR [edi+0x34d984bb],0x3
  40ef2e:	mov    dl,0x1b
  40ef30:	cmp    al,0x6a
  40ef32:	add    bh,BYTE PTR [ebx]
  40ef34:	in     eax,0x52
  40ef36:	out    0x65,eax
  40ef38:	out    0xb3,al
  40ef3a:	xchg   esi,eax
  40ef3b:	fidivr WORD PTR [esi+0x6cf64a51]
  40ef41:	stos   BYTE PTR es:[edi],al
  40ef42:	push   ebx
  40ef43:	mov    edx,edi
  40ef45:	mov    edx,0x740e9c42
  40ef4a:	stc    
  40ef4b:	dec    edi
  40ef4c:	cmc    
  40ef4d:	pop    ss
  40ef4e:	mov    edx,0xe09e037a
  40ef53:	ret    0xdee9
  40ef56:	fnstenv [edi-0xf]
  40ef59:	pop    esi
  40ef5a:	cwde   
  40ef5b:	fs pop ecx
  40ef5d:	dec    ecx
  40ef5e:	mov    ch,0x68
  40ef60:	(bad)  
  40ef61:	ins    DWORD PTR es:[edi],dx
  40ef62:	sti    
  40ef63:	jo     0x40ef53
  40ef65:	retf   0x96
  40ef68:	mov    ds:0x38543c5f,eax
  40ef6d:	push   ebp
  40ef6e:	sub    edi,esp
  40ef70:	test   eax,0x61b433c0
  40ef75:	stc    
  40ef76:	(bad)  
  40ef77:	cwde   
  40ef78:	leave  
  40ef79:	je     0x40ef09
  40ef7b:	ror    DWORD PTR [edi],cl
  40ef7d:	imul   ebx,DWORD PTR [eax],0x1b
  40ef80:	xchg   esp,eax
  40ef81:	mov    al,ds:0xdbeb802
  40ef86:	add    ah,BYTE PTR [eax]
  40ef88:	int3   
  40ef89:	in     al,0x76
  40ef8b:	clc    
  40ef8c:	pop    ecx
  40ef8d:	clc    
  40ef8e:	sbb    ebx,ebx
  40ef90:	in     eax,0x96
  40ef92:	or     al,0x82
  40ef94:	jb     0x40efd1
  40ef96:	and    dh,BYTE PTR [ebx+ebp*2+0x25]
  40ef9a:	mov    cl,0xf6
  40ef9c:	fsubr  st(1),st
  40ef9e:	push   esi
  40ef9f:	test   al,0x8e
  40efa1:	cmp    cl,BYTE PTR [eax+0x7c2ee5f4]
  40efa7:	sbb    eax,0x89a43cd1
  40efac:	mov    al,0x91
  40efae:	mov    bl,0x15
  40efb0:	sub    dh,BYTE PTR [edi+0x39]
  40efb3:	(bad)  
  40efb4:	cdq    
  40efb5:	arpl   bp,si
  40efb7:	lods   eax,DWORD PTR ds:[esi]
  40efb8:	jge    0x40ef7e
  40efba:	hlt    
  40efbb:	sub    bh,cl
  40efbd:	int3   
  40efbe:	cdq    
  40efbf:	mov    ds:0x8af45608,eax
  40efc4:	push   cs
  40efc5:	scas   al,BYTE PTR es:[edi]
  40efc6:	arpl   WORD PTR [ecx-0x5],cx
  40efc9:	in     eax,dx
  40efca:	clc    
  40efcb:	mov    al,0x24
  40efcd:	inc    ebp
  40efce:	sub    cl,BYTE PTR [esp+edi*4-0x7a]
  40efd2:	jmp    DWORD PTR [esi+0x38]
  40efd5:	and    al,0xba
  40efd7:	jmp    0xfa57:0xdc5c7575
  40efde:	test   BYTE PTR [esi],dh
  40efe0:	je     0x40efbd
  40efe2:	sbb    al,0x7a
  40efe4:	dec    esi
  40efe5:	xchg   esi,eax
  40efe6:	sub    eax,0x61316733
  40efeb:	cmp    al,0xb8
  40efed:	push   ecx
  40efee:	call   FWORD PTR [esi]
  40eff0:	and    al,0x23
  40eff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff3:	aaa    
  40eff4:	and    eax,0x772f79db
  40eff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40effa:	xor    DWORD PTR [esi+0x5522acde],esi
  40f000:	hlt    
  40f001:	(bad)  
  40f002:	mov    bh,0x8
  40f004:	sahf   
  40f005:	mov    ecx,0x99d74b3b
  40f00a:	inc    esi
  40f00b:	popf   
  40f00c:	jne    0x40efc7
  40f00e:	sti    
  40f00f:	push   esp
  40f010:	mov    WORD PTR [esi+esi*8],cs
  40f013:	mov    bh,0x36
  40f015:	inc    edi
  40f016:	nop
  40f017:	lds    edi,FWORD PTR [esi+0x2e]
  40f01a:	xchg   esi,eax
  40f01b:	retf   0x9ca7
  40f01e:	adc    BYTE PTR [ecx],ch
  40f020:	sbb    BYTE PTR [esi],ah
  40f022:	fs jno 0x40f045
  40f025:	sahf   
  40f026:	lods   eax,DWORD PTR ds:[esi]
  40f027:	loop   0x40efba
  40f029:	stos   DWORD PTR es:[edi],eax
  40f02a:	sbb    al,0x4b
  40f02c:	popa   
  40f02d:	xchg   esp,eax
  40f02e:	(bad)  
  40f02f:	push   cs
  40f030:	push   ecx
  40f031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f032:	fistp  QWORD PTR [edx+eax*2-0x6a]
  40f036:	mov    ds:0xe1496176,eax
  40f03b:	ror    DWORD PTR [eax-0x22],1
  40f03e:	mov    eax,ds:0xfef90ac6
  40f043:	out    dx,eax
  40f044:	pusha  
  40f045:	xchg   ebx,eax
  40f046:	(bad)  
  40f047:	mov    bh,0x1e
  40f049:	xchg   BYTE PTR [eax+0x13],bl
  40f04c:	sub    DWORD PTR [ebp-0x15],edx
  40f04f:	xchg   ebp,eax
  40f050:	pop    ebx
  40f051:	add    DWORD PTR [ecx],ebp
  40f053:	add    ecx,esp
  40f055:	pop    ss
  40f056:	jnp    0x40f065
  40f058:	pop    edx
  40f059:	aam    0x18
  40f05b:	mov    ds:0xfa79d2ac,al
  40f060:	pop    edx
  40f061:	push   edx
  40f062:	rcr    ecx,1
  40f064:	jmp    0x3705:0x28b7d7b9
  40f06b:	into   
  40f06c:	(bad)  
  40f06d:	popa   
  40f06e:	sahf   
  40f06f:	jg     0x40f066
  40f071:	inc    ebp
  40f072:	enter  0x927e,0xe3
  40f076:	or     ch,BYTE PTR [ebp+0x1f]
  40f079:	cwde   
  40f07a:	out    dx,al
  40f07b:	mov    ah,0xb9
  40f07d:	xor    DWORD PTR [ebp-0x16cbb919],0xffffffa8
  40f084:	push   ebx
  40f085:	sbb    ebp,DWORD PTR [edx]
  40f087:	daa    
  40f088:	cmp    ebp,eax
  40f08a:	xchg   ecx,eax
  40f08b:	pop    edx
  40f08c:	or     BYTE PTR [ecx-0x52],dl
  40f08f:	(bad)  
  40f090:	jge    0x40f04a
  40f092:	js     0x40f031
  40f094:	mov    eax,0x3c434415
  40f099:	dec    edi
  40f09a:	pop    ebp
  40f09b:	xchg   esp,eax
  40f09c:	outs   dx,BYTE PTR ds:[esi]
  40f09d:	cmp    BYTE PTR [ebx],ah
  40f09f:	jecxz  0x40f05b
  40f0a1:	int    0x41
  40f0a3:	and    DWORD PTR [ecx+0x5c7949e4],0xe786f218
  40f0ad:	cwde   
  40f0ae:	jmp    0x9112a643
  40f0b3:	xchg   dh,bl
  40f0b5:	cmp    dh,BYTE PTR [ebp-0x2317a6f3]
  40f0bb:	push   edi
  40f0bc:	xlat   BYTE PTR ds:[ebx]
  40f0bd:	mov    eax,0xbfd3f92d
  40f0c2:	loop   0x40f07f
  40f0c4:	xlat   BYTE PTR ds:[ebx]
  40f0c5:	pop    es
  40f0c6:	cs sub al,0xf3
  40f0c9:	jb     0x40f0fe
  40f0cb:	add    eax,0x6fa86ce1
  40f0d0:	mov    WORD PTR gs:[edi-0x2013a721],ss
  40f0d7:	mov    bh,ch
  40f0d9:	cmp    BYTE PTR [edx],al
  40f0db:	test   BYTE PTR [esi-0x321d8aec],0xcd
  40f0e2:	adc    BYTE PTR [eax+0x6],0x81
  40f0e6:	mov    edx,0xc47b8dc9
  40f0eb:	push   ebp
  40f0ec:	adc    BYTE PTR [esi+edi*1-0x41],al
  40f0f0:	test   BYTE PTR [ebx+eax*8],cl
  40f0f3:	xchg   DWORD PTR ds:0xb1697b61,ebp
  40f0f9:	mov    WORD PTR [ecx],gs
  40f0fb:	stos   DWORD PTR es:[edi],eax
  40f0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0fd:	xor    DWORD PTR [eax+edi*4+0x4f310e54],esp
  40f104:	xchg   ecx,eax
  40f105:	loope  0x40f176
  40f107:	xchg   ecx,eax
  40f108:	lock imul ecx,DWORD PTR [ecx+0x4d7a36e8],0x7932ad16
  40f113:	add    ah,bl
  40f115:	repnz icebp 
  40f117:	jb     0x40f0ca
  40f119:	sbb    BYTE PTR fs:[edx+0x48ddb183],al
  40f120:	sbb    eax,0x81ad90d5
  40f125:	shl    edi,1
  40f127:	aad    0xe5
  40f129:	out    0x3,al
  40f12b:	jns    0x40f12c
  40f12d:	test   BYTE PTR [ecx+0x5a],al
  40f130:	or     al,0xb4
  40f132:	and    al,0x57
  40f134:	push   ss
  40f135:	and    eax,0xd7196c
  40f13a:	nop
  40f13b:	jecxz  0x40f0cc
  40f13d:	popa   
  40f13e:	ret    0xb010
  40f141:	jg     0x40f100
  40f143:	jb     0x40f177
  40f145:	and    eax,0xbb0ce38b
  40f14a:	and    eax,0xaaa1d61e
  40f14f:	cmc    
  40f150:	push   ds
  40f151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f152:	mov    eax,ds:0x2410a8a2
  40f157:	pop    ebx
  40f158:	xchg   esp,eax
  40f159:	test   BYTE PTR [ebx],dl
  40f15b:	fadd   QWORD PTR [eax-0x50]
  40f15e:	lds    eax,FWORD PTR [edi+0x21f8b417]
  40f164:	cs push ebx
  40f166:	add    bh,ch
  40f168:	fisttp QWORD PTR [edx-0x4b27fd11]
  40f16e:	push   ebp
  40f16f:	add    eax,eax
  40f171:	sub    DWORD PTR [esi+0x796ba715],esp
  40f177:	sbb    DWORD PTR [esi+0x3ca8d88],eax
  40f17d:	sbb    al,0x6c
  40f17f:	retf   
  40f180:	mov    ebp,0x56f20a4c
  40f185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f186:	jmp    0xc3b1:0x641ae439
  40f18d:	stc    
  40f18e:	mov    ds:0x6cece29d,al
  40f193:	push   ebp
  40f194:	fstp   DWORD PTR [eax-0x3c39f12a]
  40f19a:	jmp    0x40f1e6
  40f19c:	dec    edx
  40f19d:	jmp    0x40f15a
  40f19f:	mov    al,ds:0x8fc84e
  40f1a4:	xchg   edx,eax
  40f1a5:	sbb    dl,BYTE PTR [esi+0x53]
  40f1a8:	retf   
  40f1a9:	push   cs
  40f1aa:	cld    
  40f1ab:	xor    ah,BYTE PTR [edx+0x9]
  40f1ae:	stos   BYTE PTR es:[edi],al
  40f1af:	shl    DWORD PTR [edi],cl
  40f1b1:	adc    eax,DWORD PTR [ebp+esi*8-0x46230d54]
  40f1b8:	sub    edi,esp
  40f1ba:	pop    ebx
  40f1bb:	hlt    
  40f1bc:	ror    DWORD PTR [edi],1
  40f1be:	shr    BYTE PTR [ebp-0x41],cl
  40f1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c2:	pop    ds
  40f1c3:	xor    BYTE PTR [esi],ch
  40f1c5:	push   ds
  40f1c6:	or     eax,DWORD PTR [ebp+ebp*4-0x21]
  40f1ca:	sub    bh,BYTE PTR [ecx]
  40f1cc:	dec    esi
  40f1cd:	and    eax,0xb65bcb77
  40f1d2:	dec    esi
  40f1d3:	lea    eax,[eax+0x45]
  40f1d6:	cmc    
  40f1d7:	mov    bl,0x27
  40f1d9:	(bad)  [eax]
  40f1db:	dec    ebx
  40f1dc:	rol    bh,1
  40f1de:	pop    ebp
  40f1df:	mov    edi,0x3dcded10
  40f1e4:	push   0x85e483f0
  40f1e9:	add    al,0x71
  40f1eb:	mov    edx,0xb68dd1c
  40f1f0:	inc    esi
  40f1f1:	mov    dl,0x41
  40f1f3:	mov    ?,ebp
  40f1f5:	scas   al,BYTE PTR es:[edi]
  40f1f6:	ja     0x40f1fb
  40f1f8:	fdiv   QWORD PTR [ebx-0x3b]
  40f1fb:	rol    ah,1
  40f1fd:	(bad)  
  40f1fe:	cmp    al,BYTE PTR [eax]
  40f200:	mov    DWORD PTR [ebx],ebx
  40f202:	jecxz  0x40f276
  40f204:	jbe    0x40f18f
  40f206:	cmp    eax,0x2e1e0471
  40f20b:	neg    dx
  40f20e:	and    DWORD PTR [edx-0x6501c2c5],ecx
  40f214:	xor    al,0x9a
  40f216:	adc    dl,BYTE PTR [ebx]
  40f218:	cmp    ch,BYTE PTR [esi-0x679064cf]
  40f21e:	inc    ebx
  40f21f:	adc    DWORD PTR [esi+ecx*1-0x4c],ecx
  40f223:	jnp    0x40f208
  40f225:	sbb    ch,al
  40f227:	mov    ch,0x92
  40f229:	(bad)  
  40f22a:	sub    DWORD PTR [edx+0x11834a07],edx
  40f230:	sahf   
  40f231:	sub    DWORD PTR [ecx-0x5c],edi
  40f234:	jb     0x40f1d7
  40f236:	faddp  st(5),st
  40f238:	cmp    eax,0xdb4851db
  40f23d:	pop    ebx
  40f23e:	cmp    ch,ch
  40f240:	aas    
  40f241:	into   
  40f242:	jo     0x40f237
  40f244:	push   ds
  40f245:	dec    eax
  40f246:	sub    DWORD PTR [esi+esi*1-0x17],eax
  40f24a:	enter  0xa91a,0xf6
  40f24e:	adc    ebp,DWORD PTR [edx+eax*8-0x7009070f]
  40f255:	test   eax,0xe90fb4f0
  40f25a:	xlat   BYTE PTR ds:[ebx]
  40f25b:	xchg   esi,eax
  40f25c:	je     0x40f274
  40f25e:	push   0xb47fbd38
  40f263:	in     eax,0x99
  40f265:	outs   dx,DWORD PTR ds:[esi]
  40f266:	xor    DWORD PTR [ebx+0x3d],ebx
  40f269:	ror    BYTE PTR [ebx+0x648ec4b3],cl
  40f26f:	dec    eax
  40f270:	sub    ebx,DWORD PTR [ebx+ebp*8+0x7d43c789]
  40f277:	add    dh,al
  40f279:	mul    cl
  40f27b:	mov    bl,0x8b
  40f27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27e:	add    BYTE PTR [ecx+0x38bef6c7],ah
  40f284:	adc    al,0xa1
  40f286:	(bad)  
  40f287:	sar    BYTE PTR [esi+0x16],cl
  40f28a:	fwait
  40f28b:	mov    esp,0xb0ef35a0
  40f290:	retf   0xcaf8
  40f293:	jle    0x40f249
  40f295:	adc    BYTE PTR [ebp+0x9656b42],ch
  40f29b:	test   BYTE PTR [ebp+0x41],cl
  40f29e:	retf   
  40f29f:	cmp    DWORD PTR [ecx],ebx
  40f2a1:	lea    esp,[ecx+0x22]
  40f2a4:	inc    edi
  40f2a5:	int3   
  40f2a6:	add    al,0x6c
  40f2a8:	pop    esi
  40f2a9:	mov    ah,0x48
  40f2ab:	jnp    0x40f2b2
  40f2ad:	mov    ds:0x59e495f0,eax
  40f2b2:	sbb    al,0x2e
  40f2b4:	in     al,0x92
  40f2b6:	fnstcw WORD PTR [ecx+0x7f8a7eff]
  40f2bc:	rcr    DWORD PTR ds:0xf9bdd59f,1
  40f2c2:	stos   DWORD PTR es:[edi],eax
  40f2c3:	inc    eax
  40f2c4:	xor    DWORD PTR [ebx+0x41],ebx
  40f2c7:	dec    esi
  40f2c8:	gs sub esi,esp
  40f2cb:	je     0x40f27d
  40f2cd:	xor    al,0x18
  40f2cf:	scas   al,BYTE PTR es:[edi]
  40f2d0:	and    dl,bh
  40f2d2:	adc    al,0x66
  40f2d4:	das    
  40f2d5:	jle    0x40f2e1
  40f2d7:	xchg   edi,eax
  40f2d8:	hlt    
  40f2d9:	sub    eax,0xae027924
  40f2de:	arpl   WORD PTR [esi],bx
  40f2e0:	lods   al,BYTE PTR ds:[esi]
  40f2e1:	aam    0x83
  40f2e3:	xchg   ecx,eax
  40f2e4:	mov    ds:0x9a45e928,eax
  40f2e9:	inc    esi
  40f2ea:	ins    DWORD PTR es:[edi],dx
  40f2eb:	lods   eax,DWORD PTR ds:[esi]
  40f2ec:	mov    dh,BYTE PTR [edx]
  40f2ee:	dec    eax
  40f2ef:	cli    
  40f2f0:	xor    eax,0x97f239b9
  40f2f5:	call   0x3375c638
  40f2fa:	cdq    
  40f2fb:	test   eax,0x4d5b1504
  40f300:	mov    esi,0x205c67ce
  40f305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f306:	pop    esi
  40f307:	sub    eax,0xd390edb6
  40f30c:	int    0x8b
  40f30e:	jne    0x40f2e1
  40f310:	dec    eax
  40f311:	imul   esi,DWORD PTR [edx-0x24],0x26
  40f315:	loope  0x40f304
  40f317:	xchg   edi,eax
  40f318:	add    ecx,DWORD PTR [eax]
  40f31a:	scas   al,BYTE PTR es:[edi]
  40f31b:	repz das 
  40f31d:	imul   BYTE PTR [eax+eiz*8]
  40f320:	xor    esp,eax
  40f322:	fld    TBYTE PTR ds:0x254efcd2
  40f328:	hlt    
  40f329:	mov    cl,0xa0
  40f32b:	shr    BYTE PTR [edi+0x1],0x3c
  40f32f:	pop    es
  40f330:	push   ebx
  40f331:	inc    esi
  40f332:	xor    eax,0x3c831a30
  40f337:	pop    edx
  40f338:	sbb    al,0x35
  40f33a:	pop    ecx
  40f33b:	jbe    0x40f2be
  40f33d:	into   
  40f33e:	and    ebp,ebx
  40f340:	cmp    eax,0xca70820d
  40f345:	dec    edi
  40f346:	mov    edi,0x3d026dd4
  40f34b:	ss test eax,0xb2086a17
  40f351:	add    ecx,esp
  40f353:	push   esi
  40f354:	scas   eax,DWORD PTR es:[edi]
  40f355:	and    al,0xfd
  40f357:	cmp    BYTE PTR [edi+0x41],ch
  40f35a:	dec    eax
  40f35b:	or     BYTE PTR [edi+0x1dd7da84],bl
  40f361:	xchg   DWORD PTR [ebp+edx*8-0x70],esi
  40f365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f366:	mov    esi,0xa9831a80
  40f36b:	ins    DWORD PTR es:[edi],dx
  40f36c:	ret    0x37b6
  40f36f:	fs iret 
  40f371:	imul   ebx,DWORD PTR [edi+0x587d9f9b],0x4f
  40f378:	sti    
  40f379:	mov    esp,0x801f0eff
  40f37e:	or     al,0xec
  40f380:	daa    
  40f381:	retf   
  40f382:	outs   dx,BYTE PTR ds:[esi]
  40f383:	out    dx,al
  40f384:	aas    
  40f385:	pop    esp
  40f386:	jb     0x40f3a5
  40f388:	pop    esp
  40f389:	cli    
  40f38a:	push   ss
  40f38b:	icebp  
  40f38c:	(bad)  
  40f38d:	aas    
  40f38e:	aad    0x14
  40f390:	and    eax,DWORD PTR [edi-0x64]
  40f393:	mov    ah,0x40
  40f395:	ficomp WORD PTR [edx]
  40f397:	xor    eax,0xf28a4303
  40f39c:	sbb    ecx,edi
  40f39e:	inc    edx
  40f39f:	outs   dx,BYTE PTR ds:[esi]
  40f3a0:	xor    edx,esi
  40f3a2:	int3   
  40f3a3:	jg     0x40f383
  40f3a5:	scas   al,BYTE PTR es:[edi]
  40f3a6:	add    eax,0x7bb33558
  40f3ab:	or     eax,0x1cbd45e5
  40f3b0:	pop    ebx
  40f3b1:	add    DWORD PTR [ebx+ebp*8+0x2b0dec74],edx
  40f3b8:	pop    edi
  40f3b9:	ins    BYTE PTR es:[edi],dx
  40f3ba:	sbb    BYTE PTR [ebx+0x52aca7da],0xae
  40f3c1:	fstp   TBYTE PTR [ebp+0x46]
  40f3c4:	xchg   ebx,eax
  40f3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c6:	pop    edx
  40f3c7:	push   0x40
  40f3c9:	loop   0x40f38d
  40f3cb:	stc    
  40f3cc:	std    
  40f3cd:	xchg   esi,eax
  40f3ce:	inc    esi
  40f3cf:	sub    BYTE PTR [edx],ch
  40f3d1:	jae    0x40f3db
  40f3d3:	push   edx
  40f3d4:	mov    edi,0x798b1976
  40f3d9:	imul   ecx,esi,0xfffffff2
  40f3dc:	addr16 test eax,0x3f637f18
  40f3e2:	pop    ss
  40f3e3:	inc    edi
  40f3e4:	mov    dl,0x3a
  40f3e6:	inc    edx
  40f3e7:	shl    eax,0x49
  40f3ea:	popf   
  40f3eb:	push   cs
  40f3ec:	repz xor eax,0xbe3d8a37
  40f3f2:	fdivp  st(1),st
  40f3f4:	dec    ebx
  40f3f5:	jle    0x40f3d0
  40f3f7:	inc    eax
  40f3f8:	nop
  40f3f9:	xor    esi,edi
  40f3fb:	xchg   edx,eax
  40f3fc:	jmp    0xed32b1ab
  40f401:	outs   dx,BYTE PTR ds:[esi]
  40f402:	mov    ch,0xa5
  40f404:	mov    ebp,0x37d4b7c3
  40f409:	fwait
  40f40a:	jnp    0x40f3e1
  40f40c:	es xchg esp,eax
  40f40e:	iret   
  40f40f:	scas   eax,DWORD PTR es:[edi]
  40f410:	retf   0x2e94
  40f413:	adc    esi,DWORD PTR [ebp+0x26e9419a]
  40f419:	and    ebp,DWORD PTR [edx+0x518d2fa8]
  40f41f:	cmp    DWORD PTR [ebx-0x27],ebp
  40f422:	mov    bl,0x2a
  40f424:	ret    0x7dda
  40f427:	mov    dh,0x62
  40f429:	enter  0x72cc,0xa1
  40f42d:	xchg   BYTE PTR [esi],ch
  40f42f:	ss popf 
  40f431:	stos   BYTE PTR es:[edi],al
  40f432:	lods   al,BYTE PTR ds:[esi]
  40f433:	ins    DWORD PTR es:[edi],dx
  40f434:	test   eax,0x417e7a83
  40f439:	aad    0xe
  40f43b:	lds    esp,FWORD PTR [ecx-0x7]
  40f43e:	int3   
  40f43f:	sbb    BYTE PTR [ebx],ah
  40f441:	mov    esi,0xb5cb948e
  40f446:	stos   BYTE PTR es:[edi],al
  40f447:	push   edi
  40f448:	out    0xa9,al
  40f44a:	fadd   QWORD PTR [edx]
  40f44c:	xchg   DWORD PTR ss:0x63efe297,edx
  40f453:	cmp    eax,0x551a20ea
  40f458:	ret    
  40f459:	retf   0x8e45
  40f45c:	test   edx,esp
  40f45e:	aad    0xca
  40f460:	sahf   
  40f461:	shr    DWORD PTR [edx-0x39],1
  40f464:	push   eax
  40f465:	mov    ebx,0x9b5b82a5
  40f46a:	lods   eax,DWORD PTR ds:[esi]
  40f46b:	dec    ebp
  40f46c:	fs pushf 
  40f46e:	leave  
  40f46f:	dec    esi
  40f470:	xor    edi,DWORD PTR [esi-0x5e004061]
  40f476:	test   al,0x47
  40f478:	mov    BYTE PTR fs:[ecx+0x346603f3],ah
  40f47f:	imul   edi,DWORD PTR [esi],0xe9bcf68d
  40f485:	xor    bh,BYTE PTR [ecx+0x7a731d19]
  40f48b:	retf   
  40f48c:	popa   
  40f48d:	adc    al,0x26
  40f48f:	es pop si
  40f492:	xor    al,0xbe
  40f494:	jmp    0x9ff7:0x66957be4
  40f49b:	shr    ecx,1
  40f49d:	es inc esp
  40f49f:	jo     0x40f444
  40f4a1:	(bad)  
  40f4a2:	iret   
  40f4a3:	and    eax,DWORD PTR [edx+0x1ad5a481]
  40f4a9:	das    
  40f4aa:	cmp    esi,DWORD PTR [ecx-0x518b6d8c]
  40f4b0:	xchg   ebp,eax
  40f4b1:	dec    edi
  40f4b2:	fbstp  TBYTE PTR [esi-0x7a]
  40f4b5:	retf   
  40f4b6:	jne    0x40f459
  40f4b8:	hlt    
  40f4b9:	cmp    eax,0x4c8ca710
  40f4be:	dec    eax
  40f4bf:	sub    BYTE PTR [ebp-0x6f],ch
  40f4c2:	lock pop esp
  40f4c4:	dec    ebp
  40f4c5:	pop    ebp
  40f4c6:	and    dh,dl
  40f4c8:	sub    esp,DWORD PTR [edi]
  40f4ca:	out    dx,al
  40f4cb:	pop    eax
  40f4cc:	inc    esi
  40f4cd:	loope  0x40f516
  40f4cf:	mov    ecx,0x37a2418d
  40f4d4:	and    bl,BYTE PTR [ebp+esi*1+0x3f8397e9]
  40f4db:	cwde   
  40f4dc:	pop    esp
  40f4dd:	loop   0x40f543
  40f4df:	std    
  40f4e0:	rcl    BYTE PTR [ebx],0x14
  40f4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e4:	sti    
  40f4e5:	sbb    edx,DWORD PTR [eax+0x15443e71]
  40f4eb:	cmp    DWORD PTR [edx+0x6b],eax
  40f4ee:	les    esi,FWORD PTR [esi]
  40f4f0:	mov    bh,al
  40f4f2:	bound  ebx,QWORD PTR [esi-0x50]
  40f4f5:	xchg   ebx,eax
  40f4f6:	pop    ecx
  40f4f7:	pop    es
  40f4f8:	adc    eax,0x1153cbbf
  40f4fd:	mov    ch,0x97
  40f4ff:	jne    0x40f4ce
  40f501:	mov    ds,WORD PTR [edx]
  40f503:	mov    es,WORD PTR [edx]
  40f505:	jne    0x40f4b6
  40f507:	push   edx
  40f508:	loope  0x40f548
  40f50a:	fdiv   QWORD PTR [esi]
  40f50c:	sub    DWORD PTR [edi-0x7a],ebx
  40f50f:	cmc    
  40f510:	dec    ebx
  40f511:	in     al,0x27
  40f513:	call   0xacb6:0x12ad0a21
  40f51a:	into   
  40f51b:	nop
  40f51c:	repz mov ebx,DWORD PTR [eax+0x3d8abd36]
  40f523:	dec    ecx
  40f524:	jbe    0x40f509
  40f526:	fs imul bl
  40f529:	mov    DWORD PTR [eax+0x70],esp
  40f52c:	out    dx,eax
  40f52d:	mov    al,0xcc
  40f52f:	inc    edi
  40f530:	inc    esp
  40f531:	cvtps2pd xmm0,QWORD PTR [ecx+eiz*4]
  40f535:	push   0x5ae66fd1
  40f53a:	push   0xfffffffe
  40f53c:	sti    
  40f53d:	jmp    0xfc1e9846
  40f542:	mov    WORD PTR [ecx+ebp*2-0x7bc957bc],fs
  40f549:	push   ecx
  40f54a:	lahf   
  40f54b:	sbb    ecx,edi
  40f54d:	pop    ebx
  40f54e:	sub    eax,0x323b5209
  40f553:	xor    eax,0xb82a88b9
  40f558:	push   0x36
  40f55a:	jp     0x40f533
  40f55c:	fmul   DWORD PTR [ebx+eax*4+0x4e]
  40f560:	aaa    
  40f561:	pop    edx
  40f562:	xor    eax,ebx
  40f564:	inc    ebp
  40f565:	dec    ebx
  40f566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f567:	fiadd  WORD PTR [ebp-0x278b6279]
  40f56d:	jno    0x40f58d
  40f56f:	es dec edx
  40f571:	dec    ebp
  40f572:	lds    esi,FWORD PTR [eax-0x9]
  40f575:	frstor [edx+0x2f]
  40f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f579:	dec    edi
  40f57a:	fucomi st,st(4)
  40f57c:	fsubr  QWORD PTR ds:0x1012fed2
  40f582:	pushf  
  40f583:	jno    0x40f53e
  40f585:	adc    eax,0xc69fa2ef
  40f58a:	xor    al,0x13
  40f58c:	add    DWORD PTR [eax],esi
  40f58e:	nop    DWORD PTR [esi+edx*4+0x2]
  40f593:	cli    
  40f594:	and    ah,bh
  40f596:	mov    esi,0x7c64462f
  40f59b:	lahf   
  40f59c:	dec    ebx
  40f59d:	mov    ecx,0xcd713e3b
  40f5a2:	xchg   dh,bh
  40f5a4:	jg     0x40f5ab
  40f5a6:	out    0x28,al
  40f5a8:	cmp    esp,ecx
  40f5aa:	inc    esp
  40f5ab:	push   0x85828c35
  40f5b0:	mov    ecx,0x4abee50
  40f5b5:	popa   
  40f5b6:	loope  0x40f567
  40f5b8:	jno    0x40f5f7
  40f5ba:	xchg   ebx,eax
  40f5bb:	sbb    al,0xf3
  40f5bd:	adc    eax,0xe907465e
  40f5c2:	stos   BYTE PTR es:[edi],al
  40f5c3:	retf   0xde43
  40f5c6:	sbb    BYTE PTR [edx+edx*2],cl
  40f5c9:	sub    eax,0x5af0dd8f
  40f5ce:	stc    
  40f5cf:	gs push edi
  40f5d1:	test   al,0x10
  40f5d3:	adc    BYTE PTR ds:0xc60d9d4,ch
  40f5d9:	scas   eax,DWORD PTR es:[edi]
  40f5da:	mov    esp,0x9b207ffd
  40f5df:	xchg   ecx,eax
  40f5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5e1:	mov    ah,0x2f
  40f5e3:	mov    bh,0xd6
  40f5e5:	mov    esp,0xc791e1f0
  40f5ea:	jnp    0x40f661
  40f5ec:	or     ebp,edx
  40f5ee:	mov    cl,0xa9
  40f5f0:	ret    
  40f5f1:	js     0x40f5b8
  40f5f3:	dec    edi
  40f5f4:	jecxz  0x40f63b
  40f5f6:	dec    edx
  40f5f7:	add    DWORD PTR [edi+0x2a8e9953],esi
  40f5fd:	and    ah,BYTE PTR [eax]
  40f5ff:	pop    eax
  40f600:	or     dl,BYTE PTR [esi-0x7c021588]
  40f606:	jo     0x40f679
  40f608:	daa    
  40f609:	in     eax,dx
  40f60a:	mov    WORD PTR [eax-0x6a],gs
  40f60d:	nop
  40f60e:	ror    DWORD PTR ds:0xe680e6b2,1
  40f614:	sub    dl,BYTE PTR [ecx-0x35]
  40f617:	in     eax,0x13
  40f619:	test   BYTE PTR [edx-0x6e46d1ce],ch
  40f61f:	and    eax,esp
  40f621:	mov    al,ds:0x97114213
  40f626:	or     ecx,DWORD PTR [ebx+edi*2-0x44136082]
  40f62d:	stos   BYTE PTR es:[edi],al
  40f62e:	shr    eax,cl
  40f630:	push   ds
  40f631:	in     eax,dx
  40f632:	dec    esp
  40f633:	pop    ss
  40f634:	add    BYTE PTR ds:0x56eebc77,0x1
  40f63b:	sar    BYTE PTR [edx+eax*2],0xe6
  40f63f:	cmp    cl,dh
  40f641:	call   0xa5c2:0xd2d09dc9
  40f648:	and    BYTE PTR [eax-0x533686a7],bh
  40f64e:	stc    
  40f64f:	call   0x14c8:0xd68a91c4
  40f656:	bound  edi,QWORD PTR [edi-0x45]
  40f659:	mov    ds:0x9616f9f4,al
  40f65e:	or     eax,0xc3b1c345
  40f663:	xchg   ebp,eax
  40f664:	mov    ds:0x54f2ef10,eax
  40f669:	out    dx,eax
  40f66a:	outs   dx,BYTE PTR ds:[esi]
  40f66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f66c:	mov    edx,0xff149e83
  40f671:	(bad)  
  40f672:	mov    ch,0x9c
  40f674:	imul   edi,DWORD PTR [esi+0x6ba8e81b],0xe0055378
  40f67e:	add    BYTE PTR [esi+0x2],bl
  40f681:	jno    0x40f6e3
  40f683:	pop    esp
  40f684:	out    0x79,eax
  40f686:	pop    es
  40f687:	xor    ch,dh
  40f689:	mov    bh,0x42
  40f68b:	sub    ah,bh
  40f68d:	push   edi
  40f68e:	jo     0x40f6af
  40f690:	pop    esp
  40f691:	ss add dh,al
  40f694:	cmp    esi,DWORD PTR [esi+0x2c4b0de2]
  40f69a:	mov    bh,0x86
  40f69c:	mov    ecx,0xdf6ddb6
  40f6a1:	sti    
  40f6a2:	jge    0x40f70c
  40f6a4:	adc    BYTE PTR [ebp+0x7e],cl
  40f6a7:	(bad)  
  40f6a8:	cmp    eax,0xd81842a8
  40f6ad:	pop    ecx
  40f6ae:	xchg   edx,eax
  40f6af:	mov    al,ds:0x7ab00db6
  40f6b4:	jo     0x40f71e
  40f6b6:	test   bh,al
  40f6b8:	pop    ecx
  40f6b9:	push   ds
  40f6ba:	xlat   BYTE PTR ds:[ebx]
  40f6bb:	pop    es
  40f6bc:	(bad)  
  40f6bd:	rol    DWORD PTR [ebp+edx*2+0x61],1
  40f6c1:	out    dx,eax
  40f6c2:	fdiv   st,st(5)
  40f6c4:	fld    QWORD PTR [eax+ebx*1]
  40f6c7:	mov    ebx,0xf6c66533
  40f6cc:	dec    esp
  40f6cd:	mov    al,ds:0x2b647af2
  40f6d2:	(bad)  
  40f6d3:	xor    esi,DWORD PTR [ebp+0x55]
  40f6d6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6d8:	pop    esi
  40f6d9:	(bad)  
  40f6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6db:	pop    ss
  40f6dc:	stc    
  40f6dd:	dec    ecx
  40f6de:	and    DWORD PTR [esi],edi
  40f6e0:	scas   eax,DWORD PTR es:[edi]
  40f6e1:	dec    edx
  40f6e2:	retf   
  40f6e3:	jnp    0x40f6cd
  40f6e5:	add    DWORD PTR [edi+0x5fabb386],edi
  40f6eb:	inc    eax
  40f6ec:	mov    ch,0x54
  40f6ee:	mov    ds:0x854ddf6,eax
  40f6f3:	mov    edi,DWORD PTR ds:0x290a3b1f
  40f6f9:	test   eax,0x20acc069
  40f6fe:	cwde   
  40f6ff:	mov    edx,0xeee9256c
  40f704:	lea    ebx,[esi]
  40f706:	shr    DWORD PTR [ecx],1
  40f708:	je     0x40f68a
  40f70a:	repnz pop ss
  40f70c:	pop    esp
  40f70d:	and    BYTE PTR ds:0xa102b7ca,0xd
  40f714:	dec    BYTE PTR [eax-0xf39a737]
  40f71a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f71b:	mov    ebx,0xa140be41
  40f720:	hlt    
  40f721:	mov    esi,0x5f5af2af
  40f726:	jmp    0x40f7a3
  40f728:	mov    al,0x0
  40f72a:	and    bh,dl
  40f72c:	cmp    al,0xb9
  40f72e:	outs   dx,BYTE PTR ds:[esi]
  40f72f:	cmp    bh,bl
  40f731:	mov    BYTE PTR [esi+0x5c],ah
  40f734:	and    ebx,DWORD PTR [edx-0x66]
  40f737:	arpl   WORD PTR [ecx+0x56],sp
  40f73a:	add    al,0x66
  40f73c:	lock dec esi
  40f73e:	in     eax,dx
  40f73f:	mov    eax,0x54b604a4
  40f744:	pop    esi
  40f745:	inc    edx
  40f746:	adc    al,0xa1
  40f748:	adc    al,0x2d
  40f74a:	or     eax,0x5542025c
  40f74f:	(bad)  
  40f750:	imul   eax,DWORD PTR [ebx],0xffffffe0
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0x5e55
  41000c:	dec    edx
  41000d:	out    dx,eax
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xffffff8e
  410017:	mov    cl,0x63
  410019:	jns    0x40ffd6
  41001b:	mov    esi,0x61b83a0a
  410020:	dec    ecx
  410021:	inc    esp
  410022:	jg     0x40ffff
  410024:	(bad)  
  410026:	leave  
  410027:	adc    al,0x7f
  410029:	cmp    al,0xb5
  41002b:	jecxz  0x41005c
  41002d:	not    BYTE PTR [ebp+0x57]
  410030:	xchg   edx,eax
  410031:	adc    esp,ebp
  410033:	test   dl,0x55
  410036:	sub    ah,cl
  410038:	push   ebp
  410039:	xor    dl,0x9c
  41003c:	lds    edx,FWORD PTR [eax]
  41003e:	adc    BYTE PTR [ecx],0xc5
  410041:	sub    BYTE PTR [ebx-0x6ef5f41b],bl
  410047:	mov    edx,DWORD PTR gs:[esi-0x1c]
  41004b:	cmp    esp,ecx
  41004d:	pop    eax
  41004e:	ficom  WORD PTR [ecx]
  410050:	and    DWORD PTR [edi],eax
  410052:	pop    ecx
  410053:	and    BYTE PTR [eax+0x23],dh
  410056:	ret    0x9dcd
  410059:	dec    edi
  41005a:	cmp    esp,DWORD PTR [ebx-0x22]
  41005d:	add    esp,DWORD PTR [edi+ebp*8-0x7b]
  410061:	stc    
  410062:	jne    0x4100d0
  410064:	sahf   
  410065:	jg     0x410066
  410067:	shl    BYTE PTR [eax+0x51],1
  41006a:	xchg   esi,eax
  41006b:	leave  
  41006c:	adc    ah,BYTE PTR [edx+0x5060ff78]
  410072:	les    edi,FWORD PTR [ecx+0x1]
  410075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410076:	jno    0x4100a1
  410078:	int3   
  410079:	push   ss
  41007a:	mov    ds:0xdf28858b,al
  41007f:	outs   dx,DWORD PTR ds:[esi]
  410080:	imul   ebp,DWORD PTR [ebx-0x19039fa8],0x4ce96643
  41008a:	out    0x37,eax
  41008c:	shl    BYTE PTR [edx],1
  41008e:	adc    eax,0x19b13008
  410093:	stos   DWORD PTR es:[edi],eax
  410094:	test   al,0x87
  410096:	jmp    esi
  410098:	push   ss
  410099:	dec    edx
  41009a:	leave  
  41009b:	inc    edi
  41009c:	jl     0x410113
  41009e:	push   ebp
  41009f:	sahf   
  4100a0:	sti    
  4100a1:	fdiv   DWORD PTR [ecx+ebp*1-0x1400e505]
  4100a8:	adc    al,0xbb
  4100aa:	adc    al,0x89
  4100ac:	mov    dl,0xc2
  4100ae:	mov    esp,0x45f8b88d
  4100b3:	into   
  4100b4:	xor    ebx,edx
  4100b6:	cmp    dl,BYTE PTR [ecx+0xa33228e]
  4100bc:	mov    ds:0x28280a7d,al
  4100c1:	dec    ecx
  4100c2:	enter  0x344e,0x94
  4100c6:	dec    edx
  4100c7:	mov    esp,0x8fe569a9
  4100cc:	jb     0x4100c4
  4100ce:	adc    eax,0x761a6f8
  4100d3:	cmc    
  4100d4:	add    eax,0x73a89276
  4100d9:	ins    BYTE PTR es:[edi],dx
  4100da:	jmp    0x1e3f:0x9781cf4a
  4100e1:	aam    0x51
  4100e3:	repz int3 
  4100e5:	jmp    0x4100ff
  4100e7:	cmp    BYTE PTR [eax],ah
  4100e9:	je     0x410144
  4100eb:	mov    dh,0xeb
  4100ed:	rcl    ah,cl
  4100ef:	dec    ecx
  4100f0:	sbb    al,0xd3
  4100f2:	jle    0x41008a
  4100f4:	je     0x410086
  4100f6:	(bad)  
  4100f7:	(bad)  
  4100f8:	imul   ebx,DWORD PTR [ebx],0x293671d3
  4100fe:	test   eax,0x96307371
  410103:	cdq    
  410104:	sbb    BYTE PTR [ecx],ch
  410106:	jb     0x410143
  410108:	xlat   BYTE PTR ds:[ebx]
  410109:	mov    ch,0x30
  41010b:	scas   eax,DWORD PTR es:[edi]
  41010c:	jmp    0xb95362cf
  410111:	arpl   WORD PTR [ebp+0x67],dx
  410114:	jae    0x41013b
  410116:	stos   DWORD PTR es:[edi],eax
  410117:	mul    DWORD PTR ds:[edi-0x2d9662ad]
  41011e:	enter  0x7b2f,0xe7
  410122:	xor    eax,0xb3d20bd4
  410127:	mov    edx,0x22e6e58b
  41012c:	mov    esi,0x627ca02a
  410131:	adc    dh,BYTE PTR [esi+0x3d499b65]
  410137:	adc    ebx,esi
  410139:	neg    DWORD PTR [edx]
  41013b:	pusha  
  41013c:	adc    DWORD PTR [eax],0xfffffffe
  41013f:	test   al,0x5a
  410141:	jbe    0x41012e
  410143:	cs popa 
  410145:	ss scas al,BYTE PTR es:[edi]
  410147:	retf   
  410148:	mov    eax,DWORD PTR [ebx-0x12542b69]
  41014e:	ins    BYTE PTR es:[edi],dx
  41014f:	into   
  410150:	rcr    DWORD PTR [esi+0x3d9997ed],1
  410156:	loopne 0x41013e
  410158:	inc    ebp
  410159:	pop    ecx
  41015a:	sub    al,0xd7
  41015c:	fild   DWORD PTR [edx+0x5019bd15]
  410162:	data16 js 0x4101d3
  410165:	ss add eax,0xc8b141af
  41016b:	fstp   QWORD PTR [edx]
  41016d:	dec    DWORD PTR [ebx-0x1a]
  410170:	gs out dx,eax
  410172:	test   al,0xa6
  410174:	pop    esi
  410175:	dec    edx
  410176:	shl    BYTE PTR [ecx-0x443a8eb4],cl
  41017c:	push   edx
  41017d:	pop    esi
  41017e:	popf   
  41017f:	jge    0x41011e
  410181:	cmp    DWORD PTR [esi+0x103746b4],ebx
  410187:	shl    BYTE PTR [ebx+0x169662b],cl
  41018d:	stc    
  41018e:	gs lock jae 0x4101a8
  410192:	jge    0x410126
  410194:	inc    esp
  410195:	jnp    0x410207
  410197:	enter  0xc723,0x47
  41019b:	push   0x88c5f8bc
  4101a0:	test   DWORD PTR [edx],ecx
  4101a2:	sub    al,al
  4101a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a5:	xchg   ebp,eax
  4101a6:	sbb    cl,BYTE PTR [edi]
  4101a8:	push   0x43
  4101aa:	addr16 aaa 
  4101ac:	mov    esp,0x8a1f17d
  4101b1:	sar    al,1
  4101b3:	or     al,0x7a
  4101b5:	cmp    eax,0x436c4ee4
  4101ba:	cs enter 0x23c2,0x32
  4101bf:	push   ecx
  4101c0:	stos   BYTE PTR es:[edi],al
  4101c1:	xor    eax,0x1d086dcd
  4101c6:	cmc    
  4101c7:	or     dl,BYTE PTR [ecx+0x2]
  4101ca:	add    eax,0xa6b1b486
  4101cf:	xor    ch,BYTE PTR [eax+0x40683def]
  4101d5:	mov    BYTE PTR [edi+0x65],dl
  4101d8:	fiadd  DWORD PTR [edi-0x3dc6b34e]
  4101de:	xor    BYTE PTR [eax-0x4706cb96],dh
  4101e4:	pop    eax
  4101e5:	mov    ebx,DWORD PTR [edx]
  4101e7:	dec    esi
  4101e8:	adc    edx,ecx
  4101ea:	cld    
  4101eb:	or     al,0xb3
  4101ed:	dec    esp
  4101ee:	pop    ebp
  4101ef:	mov    DWORD PTR [edx-0x576aceff],eax
  4101f5:	push   edi
  4101f6:	dec    edi
  4101f7:	jnp    0x410233
  4101f9:	and    BYTE PTR [eax],dh
  4101fb:	aad    0x1e
  4101fd:	mov    ah,0x9f
  4101ff:	or     al,0xb9
  410201:	js     0x410193
  410203:	sbb    edi,esp
  410205:	cld    
  410206:	cld    
  410207:	ds sub eax,0x420f0a8
  41020d:	pop    edi
  41020e:	add    DWORD PTR [ecx-0x7b],0x7278da9b
  410215:	fmul   DWORD PTR [eax]
  410217:	mov    ds:0xca059d03,eax
  41021c:	sbb    DWORD PTR [esi+0x1ca844d7],ecx
  410222:	(bad)  
  410224:	(bad)  
  410225:	sub    al,0x13
  410227:	dec    ecx
  410228:	push   ss
  410229:	push   cs
  41022a:	jnp    0x4101ed
  41022c:	outs   dx,BYTE PTR ds:[esi]
  41022d:	jge    0x4102ad
  41022f:	rcl    ebx,cl
  410231:	jle    0x410293
  410233:	sahf   
  410234:	cld    
  410235:	sahf   
  410236:	enter  0x4cc7,0x7a
  41023a:	jbe    0x4101eb
  41023c:	imul   esi,esp,0xd04eedb2
  410242:	sahf   
  410243:	(bad)  
  410244:	lahf   
  410245:	and    ecx,DWORD PTR [edx]
  410247:	dec    esi
  410248:	dec    BYTE PTR [esi]
  41024a:	iret   
  41024b:	fs push ds
  41024d:	repnz mov cl,dl
  410250:	ja     0x4102a6
  410252:	sub    dl,BYTE PTR [ebx-0x69]
  410255:	ret    0xf9c6
  410258:	fwait
  410259:	mov    esp,0x78e3a5d4
  41025e:	jl     0x4102af
  410260:	retf   0x58bf
  410263:	cdq    
  410264:	aaa    
  410265:	in     eax,dx
  410266:	push   ss
  410267:	and    al,0xc
  410269:	mov    ch,0x80
  41026b:	inc    esp
  41026c:	es mov eax,0xe0a3c459
  410272:	xchg   edi,eax
  410273:	int3   
  410274:	cmp    al,0xa1
  410276:	ret    0x5fec
  410279:	jle    0x41029d
  41027b:	mov    ch,0xb7
  41027d:	sbb    dh,al
  41027f:	arpl   WORD PTR [ebx+eiz*8],dx
  410282:	inc    esp
  410283:	cld    
  410284:	shr    dh,0x9b
  410287:	xlat   BYTE PTR ds:[ebx]
  410288:	je     0x4102f3
  41028a:	loop   0x410295
  41028c:	daa    
  41028d:	adc    BYTE PTR [ecx],bh
  41028f:	dec    ebp
  410290:	adc    DWORD PTR [ebp-0x52cbe48],ebx
  410296:	stos   DWORD PTR es:[edi],eax
  410297:	adc    bl,BYTE PTR [edx-0x3cbdfe47]
  41029d:	data16 das 
  41029f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102a0:	stos   BYTE PTR es:[edi],al
  4102a1:	mov    dl,0x77
  4102a3:	stos   DWORD PTR es:[edi],eax
  4102a4:	xchg   esp,eax
  4102a5:	loope  0x4102ab
  4102a7:	rcl    BYTE PTR [eax],cl
  4102a9:	cmc    
  4102aa:	and    al,0x4c
  4102ac:	call   0xfaff3fce
  4102b1:	xchg   edx,eax
  4102b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b3:	mov    al,ds:0x70f0e9f4
  4102b8:	test   BYTE PTR [ebx-0x3cba9ce0],bh
  4102be:	push   esp
  4102bf:	mov    al,ds:0xf10279c4
  4102c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102c5:	scas   eax,DWORD PTR es:[edi]
  4102c6:	and    ah,dl
  4102c8:	push   ecx
  4102c9:	(bad)
  4102cc:	ret    0x4657
  4102cf:	cmp    al,0xa6
  4102d1:	int    0x80
  4102d3:	ror    DWORD PTR [ebp-0x44],1
  4102d6:	mov    edi,0x2f44c257
  4102db:	mov    dl,0xd4
  4102dd:	push   edx
  4102de:	jae    0x410293
  4102e0:	repz loop 0x4102c4
  4102e3:	ret    
  4102e4:	jne    0x4102a2
  4102e6:	adc    dh,BYTE PTR [ecx]
  4102e8:	jno    0x41026c
  4102ea:	mov    DWORD PTR [ecx-0x496b0720],esp
  4102f0:	out    0xaf,eax
  4102f2:	push   ds
  4102f3:	shr    edx,0xd4
  4102f6:	iret   
  4102f7:	cmp    eax,0x5205504e
  4102fc:	out    dx,al
  4102fd:	xor    edx,DWORD PTR [eax+esi*2+0x1f]
  410301:	add    BYTE PTR [ebp-0x17],bh
  410304:	dec    esp
  410305:	adc    edi,DWORD PTR gs:[edi+0x41]
  410309:	jge    0x41032a
  41030b:	scas   eax,DWORD PTR es:[edi]
  41030c:	xchg   BYTE PTR ds:[edx+0x3d1e1758],ah
  410313:	jg     0x4102ce
  410315:	ret    
  410316:	test   al,0xec
  410318:	adc    eax,DWORD PTR [eiz*2-0x72d027e5]
  41031f:	setnp  BYTE PTR [ebx]
  410322:	sbb    al,0xb0
  410324:	cmp    dh,cl
  410326:	in     eax,0x54
  410328:	dec    edx
  410329:	inc    edi
  41032a:	sub    DWORD PTR [eax+esi*8+0x30],ebp
  41032e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032f:	pop    ebx
  410330:	ja     0x410323
  410332:	scas   al,BYTE PTR es:[edi]
  410333:	add    BYTE PTR [esi+0x17ccbc66],dl
  410339:	rcr    DWORD PTR [esi],cl
  41033b:	adc    eax,eax
  41033d:	jl     0x410354
  41033f:	hlt    
  410340:	fstp   QWORD PTR [edi-0x259cc73a]
  410346:	or     BYTE PTR [edi+ecx*1+0xb],dh
  41034a:	retf   0x2fcc
  41034d:	pop    ebx
  41034e:	mov    ds:0x8e222b82,eax
  410353:	jp     0x4103b3
  410355:	jp     0x4102fe
  410357:	mov    ds:0x59537c09,eax
  41035c:	xor    eax,0x1573f63e
  410361:	jne    0x410307
  410363:	cli    
  410364:	dec    ecx
  410365:	push   edx
  410366:	mov    esp,0x72e7c426
  41036b:	inc    edi
  41036c:	fbstp  TBYTE PTR [eax+0x2765c833]
  410372:	xlat   BYTE PTR ds:[ebx]
  410373:	jnp    0x41037a
  410375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410376:	popa   
  410377:	sub    DWORD PTR [ebp-0x4a],0x79f5e527
  41037e:	jmp    0x95e9:0xc1f929c4
  410385:	sbb    eax,0x25403c8
  41038a:	cli    
  41038b:	sub    ch,BYTE PTR [edi+eiz*1-0x4f]
  41038f:	mov    esi,0x9b282041
  410394:	push   esi
  410395:	ss dec ebp
  410397:	jne    0x41038f
  410399:	add    al,BYTE PTR [edi+0x7b38554c]
  41039f:	and    eax,0xe7bd8b21
  4103a4:	jp     0x4103de
  4103a6:	es ins DWORD PTR es:[edi],dx
  4103a8:	cli    
  4103a9:	ins    DWORD PTR es:[edi],dx
  4103aa:	aas    
  4103ab:	leave  
  4103ac:	add    eax,0x389430ff
  4103b1:	(bad)  
  4103b2:	shr    DWORD PTR [ebp-0x6c],0xbe
  4103b6:	lea    eax,[esi+0x233ae0e9]
  4103bc:	test   DWORD PTR [esi+eiz*2-0x5b],ebx
  4103c0:	in     al,dx
  4103c1:	xchg   ebx,edx
  4103c3:	int3   
  4103c4:	aam    0x5a
  4103c6:	popa   
  4103c7:	push   edi
  4103c8:	adc    DWORD PTR [ebp+0x7bf509ef],esp
  4103ce:	xor    bl,ah
  4103d0:	retf   
  4103d1:	cmc    
  4103d2:	rcl    BYTE PTR [ebp+0x68755e0b],1
  4103d8:	retf   0xf305
  4103db:	sbb    esi,ecx
  4103dd:	shr    ch,0xd2
  4103e0:	or     esp,DWORD PTR [edi+0x398209e5]
  4103e6:	in     eax,dx
  4103e7:	or     DWORD PTR [eax-0x26],esp
  4103ea:	mov    bh,0x63
  4103ec:	and    bl,BYTE PTR [eax]
  4103ee:	sbb    ebp,DWORD PTR [esi]
  4103f0:	and    edx,ecx
  4103f2:	push   0x64a07762
  4103f7:	mov    esp,0xad590b2
  4103fc:	mov    eax,0x44fb0412
  410401:	aad    0x1f
  410403:	bound  eax,QWORD PTR [ebx+0x3d]
  410406:	jne    0x410408
  410408:	test   dl,0x9
  41040b:	push   ss
  41040c:	es aad 0x8
  41040f:	or     eax,0x46d9981
  410414:	mov    bl,BYTE PTR [ebx+0x426fc735]
  41041a:	jmp    0xafa8f04a
  41041f:	out    dx,al
  410420:	push   0x557dc1b7
  410425:	les    ebx,FWORD PTR ds:0x2dff8f6b
  41042b:	ins    BYTE PTR es:[edi],dx
  41042c:	and    al,0x0
  41042e:	arpl   WORD PTR [eax],cx
  410430:	jbe    0x4103b5
  410432:	inc    esp
  410433:	inc    esi
  410434:	arpl   WORD PTR [edx+ebx*8+0x2fb5be8],bx
  41043b:	and    ecx,esp
  41043d:	and    al,al
  41043f:	loope  0x410443
  410441:	dec    ecx
  410442:	pop    esp
  410443:	or     DWORD PTR [edi],ebx
  410445:	push   es
  410446:	in     eax,0xfc
  410448:	fidiv  DWORD PTR [esi-0x51]
  41044b:	inc    esi
  41044c:	sub    ecx,0xa7a5d2a3
  410452:	sbb    al,0x72
  410454:	jno    0x4104a4
  410456:	stos   BYTE PTR es:[edi],al
  410457:	sbb    eax,0x1dd6f621
  41045c:	sub    DWORD PTR [esi+0x78],esp
  41045f:	jns    0x4104b9
  410461:	out    dx,al
  410462:	and    esi,DWORD PTR [edx]
  410464:	jnp    0x4104a7
  410466:	jae    0x41043b
  410468:	xchg   DWORD PTR [ecx+ebx*8-0x6b],eax
  41046c:	arpl   WORD PTR [ebx],si
  41046e:	je     0x41041c
  410470:	arpl   WORD PTR [edx],sp
  410472:	repz jg 0x41046b
  410475:	or     al,BYTE PTR [edx+0x5d0cabc9]
  41047b:	js     0x410417
  41047d:	dec    esi
  41047e:	test   al,0x62
  410480:	mov    ebp,0x3a54a13e
  410485:	or     DWORD PTR [edx+0x2a],ebp
  410488:	or     al,0xe2
  41048a:	leave  
  41048b:	sbb    al,0x76
  41048d:	cs sub bl,ch
  410490:	xchg   esp,eax
  410491:	mov    cl,0x75
  410493:	jnp    0x410423
  410495:	sub    DWORD PTR [edi],esp
  410497:	push   ss
  410498:	or     bl,BYTE PTR [ecx]
  41049a:	push   esp
  41049c:	sbb    al,0x5a
  41049e:	cmp    DWORD PTR [esi],ecx
  4104a0:	or     eax,0x397c1a3d
  4104a5:	fisub  DWORD PTR [ecx]
  4104a7:	mov    cl,0xc5
  4104a9:	mul    DWORD PTR [ebx]
  4104ab:	jle    0x410456
  4104ad:	add    eax,0xca293cc6
  4104b2:	and    ebx,DWORD PTR [ebp+0x314d36e8]
  4104b8:	jnp    0x41050c
  4104ba:	mov    esi,0xa41cdbb4
  4104bf:	pop    ss
  4104c0:	mov    cl,BYTE PTR [eax]
  4104c2:	scas   eax,DWORD PTR es:[edi]
  4104c3:	pusha  
  4104c4:	add    BYTE PTR [edi+0xdd2ea73],al
  4104ca:	call   0x8657:0x706212d
  4104d1:	mov    edi,0x5dc17662
  4104d6:	and    al,0x6b
  4104d8:	pop    esp
  4104d9:	not    ecx
  4104db:	jne    0x4104df
  4104dd:	sti    
  4104de:	or     al,0x46
  4104e0:	fstp   QWORD PTR [ecx-0x4e]
  4104e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e4:	inc    ecx
  4104e5:	repnz mov bh,0x85
  4104e8:	mov    ecx,0x57aa5d20
  4104ed:	iret   
  4104ee:	jmp    0xd848aa4e
  4104f3:	pusha  
  4104f4:	daa    
  4104f5:	xor    al,0x3
  4104f7:	out    0xc3,eax
  4104f9:	dec    edx
  4104fa:	fdiv   st(7),st
  4104fc:	ins    DWORD PTR es:[edi],dx
  4104fd:	inc    eax
  4104fe:	cmp    ecx,DWORD PTR [ecx+ebx*4-0x79]
  410502:	fcmovbe st,st(4)
  410504:	inc    edx
  410505:	sub    DWORD PTR [ebp+0x3e],esp
  410508:	pop    edi
  410509:	out    dx,al
  41050a:	loopne 0x4104e7
  41050c:	and    dl,BYTE PTR [esi-0x9]
  41050f:	loope  0x41054c
  410511:	cwde   
  410512:	out    dx,al
  410513:	(bad)  
  410514:	push   ecx
  410515:	dec    eax
  410516:	and    eax,0x97ec0c2f
  41051b:	lea    edx,[ecx]
  41051d:	aam    0x21
  41051f:	sbb    DWORD PTR [edi+0x41d7b6f9],esi
  410525:	scas   eax,DWORD PTR es:[edi]
  410526:	js     0x4104af
  410528:	outs   dx,BYTE PTR ds:[esi]
  410529:	nop
  41052a:	dec    edx
  41052b:	nop
  41052c:	pusha  
  41052d:	mov    ecx,0x5c0f5dc0
  410532:	inc    eax
  410533:	xchg   BYTE PTR [ecx-0xa0a36a4],bh
  410539:	mov    dh,cl
  41053b:	jns    0x410537
  41053d:	in     al,0x42
  41053f:	or     BYTE PTR [ebx+0x28cc229f],al
  410545:	test   al,0x20
  410547:	ss scas eax,DWORD PTR es:[edi]
  410549:	in     eax,dx
  41054a:	xchg   esi,eax
  41054b:	(bad)  
  41054c:	jmp    0x7c0edcc6
  410551:	mov    bh,0x69
  410553:	fcomp  QWORD PTR [edx-0x4f]
  410556:	xor    DWORD PTR [edi+eiz*8+0x46a715a0],esp
  41055d:	adc    BYTE PTR [ecx-0x6209611c],0x3
  410564:	pop    ebx
  410565:	pop    edi
  410566:	xchg   esp,eax
  410567:	popa   
  410568:	sbb    bh,ch
  41056a:	mov    gs,WORD PTR [edx-0x68c5d992]
  410570:	ret    0xeeb5
  410573:	push   edi
  410574:	lds    eax,FWORD PTR [ebx]
  410576:	fnstsw WORD PTR [ebp-0x2c]
  410579:	sbb    bh,BYTE PTR [edi+0x76957a2e]
  41057f:	cmp    eax,0x2e1c20e3
  410584:	retf   0x7bb2
  410587:	inc    esp
  410588:	cmc    
  410589:	and    al,BYTE PTR [edi]
  41058b:	pop    edi
  41058c:	cmp    DWORD PTR [edx+0x11],ebx
  41058f:	cmp    ecx,esi
  410591:	push   edx
  410592:	outs   dx,BYTE PTR ds:[esi]
  410593:	and    al,0x79
  410595:	repz xchg esp,eax
  410597:	xchg   esp,eax
  410598:	dec    esi
  410599:	sbb    bl,0x1b
  41059c:	and    DWORD PTR [ebx-0x4d],esp
  41059f:	outs   dx,BYTE PTR ds:[esi]
  4105a0:	adc    al,0xce
  4105a2:	ins    BYTE PTR es:[edi],dx
  4105a3:	xchg   edx,eax
  4105a4:	adc    bh,BYTE PTR [edi-0x62]
  4105a7:	sub    BYTE PTR [esi],dl
  4105a9:	pop    ebx
  4105aa:	out    0x2b,al
  4105ac:	outs   dx,BYTE PTR ds:[esi]
  4105ad:	push   esp
  4105ae:	sbb    DWORD PTR [ebx+0xe],ebx
  4105b1:	dec    edi
  4105b2:	addr16 (bad) 
  4105b4:	and    ebx,DWORD PTR es:[edi]
  4105b7:	inc    ecx
  4105b8:	and    ch,BYTE PTR [ebx-0x19100346]
  4105be:	in     al,0xc1
  4105c0:	adc    al,0x41
  4105c2:	sbb    al,0x27
  4105c4:	dec    esi
  4105c5:	clc    
  4105c6:	fisubr DWORD PTR [eax]
  4105c8:	mov    al,ds:0x1be21681
  4105cd:	add    DWORD PTR [esi],edi
  4105cf:	jp     0x4105e3
  4105d1:	pop    esp
  4105d2:	inc    esp
  4105d3:	fisub  WORD PTR [eax]
  4105d5:	xchg   ecx,eax
  4105d6:	sbb    eax,0x4b1f46ba
  4105db:	sbb    ecx,edi
  4105dd:	jmp    0x5349e9bc
  4105e2:	push   edx
  4105e3:	retf   0x8298
  4105e6:	and    al,0xf8
  4105e8:	dec    esi
  4105e9:	xor    BYTE PTR [ebp+esi*4-0x525a207e],ch
  4105f0:	bound  ecx,QWORD PTR [eax]
  4105f2:	fstp   DWORD PTR [ebx+eiz*4-0x6680e0b6]
  4105f9:	mov    ch,0x88
  4105fb:	push   esp
  4105fc:	iret   
  4105fd:	xchg   edx,ebp
  4105ff:	into   
  410600:	or     BYTE PTR [edi-0x5b],al
  410603:	mov    al,0x2b
  410605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410606:	sbb    DWORD PTR [edi+edi*2-0x25c7488e],ecx
  41060d:	xor    eax,0xc11276e2
  410612:	cs add al,0x9e
  410615:	pop    edx
  410616:	lods   al,BYTE PTR ds:[esi]
  410617:	jl     0x4105d9
  410619:	sub    bl,BYTE PTR [ecx+ecx*4+0x11]
  41061d:	dec    edi
  41061e:	xor    edx,DWORD PTR [eax-0x71cf34ca]
  410624:	call   0x36a5:0xf195b6f9
  41062b:	out    dx,al
  41062c:	lods   al,BYTE PTR ds:[esi]
  41062d:	jnp    0x410644
  41062f:	loope  0x410624
  410631:	sub    esp,DWORD PTR [edx-0x11ee14d4]
  410637:	sbb    dh,cl
  410639:	sbb    cl,bl
  41063b:	or     BYTE PTR [esi-0x2c],cl
  41063e:	lods   eax,DWORD PTR ds:[esi]
  41063f:	out    0x87,al
  410641:	aaa    
  410642:	xchg   ecx,eax
  410643:	add    eax,0x86e9682e
  410648:	pop    esi
  410649:	push   ecx
  41064a:	mov    ebx,0x369aeaa0
  41064f:	pop    ds
  410650:	popa   
  410651:	test   al,0x18
  410653:	inc    ebx
  410654:	push   ecx
  410655:	pusha  
  410656:	pop    es
  410657:	outs   dx,DWORD PTR ds:[esi]
  410658:	mov    DWORD PTR [ebp-0x7f],0x17aa7fa9
  41065f:	loope  0x41068e
  410661:	pop    eax
  410662:	retf   0x9805
  410665:	repnz imul ebx,DWORD PTR fs:[ecx+ecx*1],0x8414c0b6
  41066e:	ret    0x5a19
  410671:	and    al,0x65
  410673:	popa   
  410674:	sub    ecx,DWORD PTR [eax-0x6b]
  410677:	aas    
  410678:	sub    DWORD PTR [ecx+0x218235a1],0x7
  41067f:	shl    dh,0xa8
  410682:	fsub   st(7),st
  410684:	lods   eax,DWORD PTR ds:[esi]
  410685:	ja     0x410688
  410687:	pop    es
  410688:	push   edi
  410689:	inc    edx
  41068a:	mov    bl,0xe1
  41068c:	adc    al,0x9e
  41068e:	icebp  
  41068f:	add    ah,dl
  410691:	mov    cl,0x98
  410693:	mov    ch,0xde
  410695:	sbb    al,0x29
  410697:	inc    edi
  410698:	push   eax
  410699:	stc    
  41069a:	sub    eax,0x94f7ddb
  41069f:	inc    edx
  4106a0:	out    dx,eax
  4106a1:	aas    
  4106a2:	xchg   dh,cl
  4106a4:	push   ecx
  4106a5:	gs in  eax,dx
  4106a7:	stc    
  4106a8:	bound  ebp,QWORD PTR [eax+0x3a9d7e95]
  4106ae:	ja     0x410632
  4106b0:	test   al,0x4a
  4106b2:	sub    sp,WORD PTR [edi+0x6]
  4106b6:	mov    BYTE PTR [ebp-0x73],al
  4106b9:	or     eax,0x57e4ba27
  4106be:	push   edi
  4106bf:	and    DWORD PTR [eax-0x66a8351c],esp
  4106c5:	daa    
  4106c6:	in     al,0x51
  4106c8:	or     ebp,ebx
  4106ca:	imul   ebp,DWORD PTR [ebp-0x4ef5a31a],0x77
  4106d1:	or     BYTE PTR [edi],cl
  4106d3:	test   BYTE PTR [esi-0xb],dl
  4106d6:	or     DWORD PTR [esi+0x1b],ebx
  4106d9:	dec    eax
  4106da:	ins    DWORD PTR es:[edi],dx
  4106db:	jae    0x410709
  4106dd:	pushf  
  4106de:	(bad)
  4106e2:	jmp    0xd566:0xbd326657
  4106e9:	aad    0xda
  4106eb:	adc    BYTE PTR [eax+0x65],bh
  4106ee:	fstp   TBYTE PTR [ebp-0x7a]
  4106f1:	inc    esp
  4106f2:	cdq    
  4106f3:	repz jg 0x410696
  4106f6:	push   ds
  4106f7:	and    al,0x7b
  4106f9:	mov    al,BYTE PTR [ebx-0x5ad878aa]
  4106ff:	mov    dh,0xaa
  410701:	sbb    DWORD PTR [edi-0x57a5a954],esi
  410707:	imul   edi,edi,0xffffff99
  41070a:	pop    es
  41070b:	cld    
  41070c:	mov    cs,WORD PTR [edx-0x2c]
  41070f:	xchg   esp,eax
  410710:	fbld   TBYTE PTR [eax+eiz*2]
  410714:	call   0xcfa6:0x760ca24c
  41071b:	jge    0x410751
  41071d:	and    bl,BYTE PTR [ecx-0x50eafb3d]
  410723:	mov    edx,0xae1ecf00
  410728:	jg     0x4106b5
  41072a:	call   0xce72b1c9
  41072f:	or     DWORD PTR [ebp-0x5670553e],0xa3c2fe05
  410739:	icebp  
  41073a:	cmp    edi,DWORD PTR [ebx]
  41073c:	cmp    DWORD PTR [edx+0x57],0xffffffd3
  410740:	fwait
  410741:	ds shl ecx,0x42
  410745:	adc    DWORD PTR [edx],esi
  410747:	pop    edx
  410748:	fs scas al,BYTE PTR es:[edi]
  41074a:	cmp    DWORD PTR [edx],esp
  41074c:	mov    BYTE PTR [esi],ah
  41074e:	sbb    BYTE PTR [edx],al
  410750:	mov    esi,0x24882f29
  410755:	mov    ah,BYTE PTR [eax]
  410757:	adc    BYTE PTR [edx+0x5],ch
  41075a:	inc    esp
  41075b:	add    ecx,edi
  41075d:	test   al,0x4c
  41075f:	cmp    al,0x35
  410761:	jl     0x4107c5
  410763:	shl    DWORD PTR [ebx+0x4d],cl
  410766:	jecxz  0x410716
  410768:	pop    ds
  410769:	scas   eax,DWORD PTR es:[edi]
  41076a:	mov    BYTE PTR [esp+esi*8+0xc],0x8f
  41076f:	xchg   esi,eax
  410770:	sub    eax,0x34fef32d
  410775:	and    BYTE PTR [edx-0x4e],0xc7
  410779:	aam    0x85
  41077b:	xor    bh,cl
  41077d:	add    DWORD PTR [ecx-0x4a07e34c],0x2a
  410784:	call   0x2656:0x96b082d3
  41078b:	xor    eax,0x83555034
  410790:	push   ds
  410791:	es stos DWORD PTR es:[edi],eax
  410793:	sbb    BYTE PTR [ecx+0xf],cl
  410796:	jg     0x4107a2
  410798:	fnstenv [ebp-0x67]
  41079b:	dec    eax
  41079c:	(bad)  
  41079d:	clc    
  41079e:	jnp    0x4107ad
  4107a0:	aad    0xd
  4107a2:	xor    cl,bl
  4107a4:	shr    DWORD PTR [ebx],0x89
  4107a7:	ja     0x4107e7
  4107a9:	fnstsw WORD PTR [edx]
  4107ab:	fadd   DWORD PTR [edx]
  4107ad:	push   esi
  4107ae:	test   DWORD PTR [edi-0x33],edx
  4107b1:	fdivr  st(6),st
  4107b3:	mov    dl,0x25
  4107b5:	aas    
  4107b6:	xor    ebx,ecx
  4107b8:	push   es
  4107b9:	sbb    BYTE PTR [edx+eax*8],cl
  4107bc:	push   ss
  4107bd:	ret    0x2ce9
  4107c0:	push   ss
  4107c1:	jge    0x4107cc
  4107c3:	lea    edi,[ecx+0x32d0d51b]
  4107c9:	div    BYTE PTR [ebx]
  4107cb:	sbb    BYTE PTR [edi+0x1033f453],dl
  4107d1:	js     0x410804
  4107d3:	dec    ebp
  4107d4:	sbb    ebp,DWORD PTR [esi-0xb]
  4107d7:	add    al,0x80
  4107d9:	mov    ds:0x8332ec7a,eax
  4107de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107df:	stc    
  4107e0:	jne    0x4107ac
  4107e2:	iret   
  4107e3:	mov    edx,DWORD PTR [ebp-0x3a531d59]
  4107e9:	loope  0x410858
  4107eb:	dec    edi
  4107ec:	(bad)  
  4107ed:	daa    
  4107ee:	dec    edi
  4107ef:	neg    DWORD PTR [esi+ecx*4-0x38]
  4107f3:	mov    WORD PTR [edx-0xa],ds
  4107f6:	rol    BYTE PTR [ebx+0x68cc910d],1
  4107fc:	xchg   ch,ch
  4107fe:	adc    DWORD PTR [ebx-0x2ff8c81b],ecx
  410804:	lahf   
  410805:	dec    ebp
  410806:	pop    es
  410807:	pop    edx
  410808:	shr    DWORD PTR ds:0xd62ee163,1
  41080e:	cmp    BYTE PTR [ebx],ch
  410810:	les    edx,FWORD PTR [esi+ebp*4+0x7]
  410814:	jns    0x4107b9
  410816:	out    dx,eax
  410817:	pop    ds
  410818:	(bad)  
  410819:	gs pop ss
  41081b:	pop    edi
  41081c:	retf   
  41081d:	fidiv  DWORD PTR [ebx+0x64e18f]
  410823:	push   eax
  410824:	add    edi,DWORD PTR [ecx]
  410826:	or     ch,dl
  410828:	in     eax,0x1e
  41082a:	jb     0x41087a
  41082c:	or     eax,0x4c614cdd
  410831:	mov    ebx,0xa6726948
  410836:	adc    al,0xf3
  410838:	xchg   BYTE PTR [ebp-0xf],ch
  41083b:	pop    es
  41083c:	popa   
  41083d:	sub    BYTE PTR [edx-0x6a],0xb9
  410841:	push   ds
  410842:	jl     0x4107e3
  410844:	adc    dh,al
  410846:	dec    esi
  410847:	lock jge 0x410861
  41084a:	adc    al,0x3d
  41084c:	inc    ecx
  41084d:	pop    esp
  41084e:	push   esp
  41084f:	(bad)  
  410850:	dec    esi
  410851:	mov    ebp,ebp
  410853:	or     al,0xc2
  410855:	fisub  DWORD PTR [eax+eiz*1-0x6c]
  410859:	popa   
  41085a:	or     ecx,DWORD PTR [esi-0x46716166]
  410860:	push   0x30
  410862:	jnp    0x4108b3
  410864:	jns    0x4108b6
  410866:	stc    
  410867:	jge    0x410859
  410869:	mov    cl,0xe9
  41086b:	lahf   
  41086c:	in     al,dx
  41086d:	gs jno 0x410838
  410870:	fadd   st,st(4)
  410872:	xlat   BYTE PTR ds:[ebx]
  410873:	cld    
  410874:	jae    0x4108d1
  410876:	loop   0x410877
  410878:	add    DWORD PTR [ecx+edi*2],esi
  41087b:	mov    DWORD PTR [ebp+edi*2+0x1c],ebx
  41087f:	push   es
  410880:	jge    0x41086f
  410882:	dec    eax
  410883:	and    eax,0xe89d4667
  410888:	test   DWORD PTR [edx-0x1c],esi
  41088b:	xchg   ebp,eax
  41088c:	dec    ecx
  41088d:	retf   0x486f
  410890:	jno    0x4108b0
  410892:	or     eax,0xbc764a15
  410897:	retf   0x758a
  41089a:	dec    ecx
  41089b:	fild   QWORD PTR [edx-0x664e4f1c]
  4108a1:	adc    al,0xb4
  4108a3:	or     eax,0x4b04620e
  4108a8:	and    al,0xcc
  4108aa:	pop    ecx
  4108ab:	dec    esp
  4108ac:	or     cl,0xb3
  4108af:	push   ds
  4108b0:	pop    edx
  4108b2:	(bad)  
  4108b3:	loope  0x4108ea
  4108b5:	ja     0x41088e
  4108b7:	or     DWORD PTR [eax-0x59],esp
  4108ba:	jl     0x4108a9
  4108bc:	ficomp DWORD PTR [ebp+0x59]
  4108bf:	fiadd  DWORD PTR [ecx-0x69]
  4108c2:	sbb    eax,0x5920ae9e
  4108c7:	fcmovnb st,st(2)
  4108c9:	push   0xffffffe2
  4108cb:	pop    esi
  4108cc:	(bad)  ds:0x8c743c31
  4108d2:	pushf  
  4108d3:	and    eax,0x7d988afa
  4108d8:	inc    eax
  4108d9:	loop   0x41089f
  4108db:	inc    edi
  4108dc:	sub    dl,cl
  4108de:	(bad)  
  4108df:	lock rcr DWORD PTR [edi],0x37
  4108e3:	jo     0x410867
  4108e5:	push   edx
  4108e6:	test   DWORD PTR [eax-0x6e],eax
  4108e9:	hlt    
  4108ea:	xchg   ecx,eax
  4108eb:	sub    al,0x70
  4108ed:	sbb    eax,DWORD PTR [ebp-0x44]
  4108f0:	push   esi
  4108f1:	aas    
  4108f2:	hlt    
  4108f3:	arpl   WORD PTR [ebx-0x62],sp
  4108f6:	popa   
  4108f7:	and    al,0x57
  4108f9:	(bad)  
  4108fb:	loopne 0x4108b0
  4108fd:	add    al,0x0
  4108ff:	jecxz  0x41088f
  410901:	jae    0x41091c
  410903:	in     al,0xec
  410905:	mov    edx,0xbcab7841
  41090a:	push   ebx
  41090b:	test   DWORD PTR ds:0xa773963b,esi
  410911:	pop    eax
  410912:	out    0x26,eax
  410914:	pop    ds
  410915:	ins    DWORD PTR es:[edi],dx
  410916:	imul   ecx,edi,0xb2ea95c
  41091c:	lea    eax,[ecx+0x2915f2d0]
  410922:	outs   dx,BYTE PTR ds:[esi]
  410923:	push   ss
  410924:	call   0x56fc:0x3af2f55
  41092b:	xchg   ebx,eax
  41092c:	and    esi,DWORD PTR [ecx+ebp*2]
  41092f:	mov    fs,esp
  410931:	ins    DWORD PTR es:[edi],dx
  410932:	mov    cl,0x53
  410934:	pop    ecx
  410935:	dec    esi
  410936:	push   ebp
  410937:	(bad)  
  410938:	adc    BYTE PTR [ebp+0xd226322],bh
  41093e:	test   BYTE PTR [edx+0x3f83a096],0x85
  410945:	cwde   
  410946:	jecxz  0x4109a2
  410948:	sub    ah,al
  41094a:	mov    ds:0x6f5b4da6,eax
  41094f:	pop    ebp
  410950:	out    dx,al
  410951:	out    0x1d,al
  410953:	fist   DWORD PTR [ecx]
  410955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410956:	inc    edx
  410957:	pop    edi
  410958:	mov    esi,0x5da99ff3
  41095d:	sub    dl,ah
  41095f:	leave  
  410960:	(bad)  
  410961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410962:	pop    ebp
  410963:	pop    eax
  410964:	test   BYTE PTR [ebx+0x51],0x18
  410968:	xlat   BYTE PTR ds:[ebx]
  410969:	(bad)  
  41096a:	punpckldq mm1,DWORD PTR [esi]
  41096d:	xchg   ecx,eax
  41096e:	mov    esi,0xad3fcda5
  410973:	or     ah,BYTE PTR [esi-0x3b43539a]
  410979:	add    bl,BYTE PTR [esi-0x1c]
  41097c:	dec    ebp
  41097d:	cwde   
  41097e:	inc    ebx
  41097f:	cmp    edi,ebx
  410981:	cwde   
  410982:	loop   0x410988
  410984:	cmp    al,0xad
  410986:	push   eax
  410987:	xchg   ebp,eax
  410988:	add    bl,dh
  41098a:	sbb    eax,0xbe279f70
  41098f:	mov    dh,BYTE PTR [eax]
  410991:	fidiv  DWORD PTR [ecx+0x24]
  410994:	dec    esi
  410995:	out    dx,al
  410996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410997:	add    cl,BYTE PTR [eax+0x5f62a7f1]
  41099d:	xchg   ebp,eax
  41099e:	sub    ecx,DWORD PTR [edi-0xc92c0fc]
  4109a4:	add    DWORD PTR [ecx-0x14],0x25c597bc
  4109ab:	xor    eax,0x3449c44a
  4109b0:	ds push ebx
  4109b2:	jmp    0x7a37:0xd59f6f0
  4109b9:	call   0xef691f5e
  4109be:	sub    BYTE PTR [edi-0x41337864],dl
  4109c4:	xchg   esi,eax
  4109c5:	into   
  4109c6:	in     eax,dx
  4109c7:	les    edx,FWORD PTR [ebp+0x6d]
  4109ca:	and    ah,BYTE PTR [esi]
  4109cc:	stos   DWORD PTR es:[edi],eax
  4109cd:	push   0x34
  4109cf:	outs   dx,DWORD PTR ds:[esi]
  4109d0:	clc    
  4109d1:	aam    0xeb
  4109d3:	jns    0x4109b0
  4109d5:	inc    ebx
  4109d6:	fbld   TBYTE PTR [esi]
  4109d8:	xchg   edx,eax
  4109d9:	and    al,dl
  4109db:	sbb    al,0xa8
  4109dd:	jecxz  0x4109de
  4109df:	inc    ecx
  4109e0:	jmp    0xc88f:0x9bab22b6
  4109e7:	jnp    0x410a62
  4109e9:	scas   eax,DWORD PTR es:[edi]
  4109ea:	stos   BYTE PTR es:[edi],al
  4109eb:	cmp    edx,esp
  4109ed:	add    al,BYTE PTR [esi]
  4109ef:	fcomp  QWORD PTR [ebx+ecx*8-0x1f]
  4109f3:	jecxz  0x410993
  4109f5:	xor    DWORD PTR [ebx+0x6f],esi
  4109f8:	inc    esi
  4109f9:	jo     0x4109af
  4109fb:	rcr    BYTE PTR [edi],cl
  4109fd:	cmp    BYTE PTR [edx],al
  4109ff:	sbb    BYTE PTR [esi-0x56],0x3c
  410a03:	jge    0x4109be
  410a05:	jbe    0x4109f3
  410a07:	test   eax,0xe9bce040
  410a0c:	mov    dl,0xec
  410a0e:	lds    edx,FWORD PTR [ebp+0x1e77c0c1]
  410a14:	fwait
  410a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a16:	mov    bl,0xa9
  410a18:	or     BYTE PTR [eax],dh
  410a1a:	cld    
  410a1b:	icebp  
  410a1c:	inc    ebp
  410a1d:	lock cs out 0xba,al
  410a21:	mov    al,0xcd
  410a23:	mov    edi,0x724a816
  410a28:	fldenv ds:0xaf3275b6
  410a2e:	fimul  WORD PTR [eax]
  410a30:	add    DWORD PTR [ebp-0x27],ebp
  410a33:	cmc    
  410a34:	mov    dh,0x6b
  410a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a38:	mov    edi,0xa15388fd
  410a3d:	sti    
  410a3e:	hlt    
  410a3f:	mov    ecx,0xa915de60
  410a44:	call   0x265e8636
  410a49:	scas   eax,DWORD PTR es:[edi]
  410a4a:	dec    ebx
  410a4b:	retf   0x3b21
  410a4e:	pushf  
  410a4f:	adc    ebx,DWORD PTR [ecx+eax*8-0x6c7e5452]
  410a56:	cwde   
  410a57:	jne    0x410a1c
  410a59:	jg     0x410a84
  410a5b:	repz (bad) 
  410a5d:	adc    BYTE PTR [eax-0x19b7a573],dl
  410a63:	jl     0x410a2f
  410a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a66:	stos   BYTE PTR es:[edi],al
  410a67:	adc    eax,0xa19108b4
  410a6c:	dec    esi
  410a6d:	jo     0x410a6a
  410a6f:	clc    
  410a70:	sub    DWORD PTR [edx],0x1b
  410a73:	mov    edx,0x596cac09
  410a78:	arpl   bx,bx
  410a7a:	dec    esi
  410a7b:	(bad)  
  410a7c:	dec    ebx
  410a7d:	fwait
  410a7e:	inc    edx
  410a7f:	inc    edx
  410a80:	stos   DWORD PTR es:[edi],eax
  410a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a82:	mov    DWORD PTR [ecx],esi
  410a84:	rcl    DWORD PTR [edi],1
  410a86:	les    esi,FWORD PTR [esi-0x4d]
  410a89:	sub    BYTE PTR [esi],bl
  410a8b:	add    DWORD PTR [esi],ebx
  410a8d:	dec    esp
  410a8e:	pop    ds
  410a8f:	xchg   ebx,eax
  410a90:	xchg   ebx,eax
  410a91:	mov    cl,0xba
  410a93:	add    edi,esp
  410a95:	arpl   WORD PTR [esi+0x3a73c16c],bx
  410a9b:	je     0x410b16
  410a9d:	repnz in eax,dx
  410a9f:	leave  
  410aa0:	rcr    BYTE PTR [ebx],1
  410aa2:	sbb    ebp,DWORD PTR [ebx-0x1b528a57]
  410aa8:	sub    BYTE PTR [edx+0x25b56138],ch
  410aae:	xor    DWORD PTR [esi-0xb],ebx
  410ab1:	dec    esp
  410ab2:	cld    
  410ab3:	mov    edi,DWORD PTR [ebx+0x3fd206d8]
  410ab9:	mov    bh,0xd5
  410abb:	popa   
  410abc:	dec    edx
  410abd:	mov    WORD PTR [ebx],fs
  410abf:	shl    DWORD PTR [eax+0x23],0x6f
  410ac3:	xchg   esp,eax
  410ac4:	fs cwde 
  410ac6:	call   0x3cfc:0xbd3b2724
  410acd:	push   esp
  410ace:	adc    DWORD PTR [ebx],ebx
  410ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad1:	ror    BYTE PTR [eax],cl
  410ad3:	mov    dl,0xd4
  410ad5:	adc    esp,DWORD PTR [edi-0x1b2eb5c2]
  410adb:	add    esi,DWORD PTR [edi-0xc3e868a]
  410ae1:	adc    eax,0x921ac20e
  410ae6:	in     eax,0x4d
  410ae8:	arpl   WORD PTR [ebp-0x38],bp
  410aeb:	pop    edx
  410aec:	mov    bl,0xd1
  410aef:	sub    al,BYTE PTR [ebp+0x1c]
  410af2:	inc    esi
  410af3:	outs   dx,DWORD PTR ds:[esi]
  410af4:	fldenv [edx+0x2502ace5]
  410afa:	mov    esi,DWORD PTR [ecx-0xf0f7210]
  410b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b01:	add    BYTE PTR [edi-0x5b],ah
  410b04:	xchg   DWORD PTR [ebp-0x20],esi
  410b07:	xor    al,cl
  410b09:	push   esp
  410b0a:	cmp    cl,BYTE PTR ds:0xca9b35c7
  410b10:	add    eax,0x4540ab19
  410b15:	mov    DWORD PTR [ebp-0x4735cbc3],ebp
  410b1b:	add    edi,DWORD PTR [edi]
  410b1d:	cdq    
  410b1e:	cmp    bl,BYTE PTR [edi-0x66c223e1]
  410b24:	xchg   cl,ch
  410b26:	sbb    dl,0x72
  410b29:	aaa    
  410b2a:	adc    al,0xb2
  410b2c:	cmp    BYTE PTR [eax+0x146c7b0f],dh
  410b32:	pop    ss
  410b33:	cs out 0x1d,eax
  410b36:	push   edx
  410b37:	inc    eax
  410b38:	sbb    edx,ecx
  410b3a:	mov    BYTE PTR [edi-0x7a],0x72
  410b3e:	sahf   
  410b3f:	xchg   esp,eax
  410b40:	dec    eax
  410b41:	test   al,0x56
  410b43:	jo     0x410b8f
  410b45:	call   0x41691070
  410b4a:	xor    DWORD PTR [esi-0x37],eax
  410b4d:	daa    
  410b4e:	jno    0x410b30
  410b50:	ror    BYTE PTR [esi+eiz*1],cl
  410b53:	arpl   ax,cx
  410b55:	jae    0x410bcb
  410b57:	dec    edx
  410b58:	mov    ch,0xc8
  410b5a:	pop    ebx
  410b5b:	aam    0x6e
  410b5d:	fimul  DWORD PTR [eax+0x34]
  410b60:	sub    dh,BYTE PTR [ecx+0x111c951a]
  410b66:	push   ebp
  410b67:	adc    al,0x2b
  410b69:	jb     0x410b9e
  410b6b:	(bad)  
  410b6c:	aam    0xdd
  410b6e:	and    eax,0xc75f8565
  410b73:	cmp    eax,0x913054ce
  410b78:	cdq    
  410b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b7a:	push   ss
  410b7b:	pop    edx
  410b7c:	lea    ebp,[ebp+0x4b02d1f3]
  410b82:	push   0x40
  410b84:	cld    
  410b85:	pop    es
  410b86:	xor    edi,edi
  410b88:	push   ebp
  410b89:	mov    ebx,0xad82bb9c
  410b8e:	jnp    0x410bc9
  410b90:	das    
  410b91:	imul   esi,DWORD PTR [edi-0x74ea2e56],0xce6c53a3
  410b9b:	jg     0x410b2a
  410b9d:	push   esp
  410b9e:	leave  
  410b9f:	xchg   esi,eax
  410ba0:	sbb    ch,BYTE PTR [edx]
  410ba2:	pop    ecx
  410ba3:	push   esi
  410ba4:	mov    ah,0x15
  410ba6:	aam    0x4a
  410ba8:	jbe    0x410be5
  410baa:	jo     0x410b8d
  410bac:	mov    edx,0x24ad13e4
  410bb1:	inc    esp
  410bb2:	cld    
  410bb3:	jecxz  0x410c32
  410bb5:	add    BYTE PTR [edi],cl
  410bb7:	adc    ecx,DWORD PTR [ecx+0x6c7e388]
  410bbd:	shl    esi,1
  410bbf:	in     eax,0x57
  410bc1:	mov    edx,0xc7b40b
  410bc6:	jns    0x410b57
  410bc8:	jge    0x410b84
  410bca:	push   edx
  410bcb:	xlat   BYTE PTR ds:[ebx]
  410bcc:	aaa    
  410bcd:	jmp    0x422f8a77
  410bd2:	jbe    0x410bc8
  410bd4:	fadd   DWORD PTR [ebx]
  410bd6:	ror    DWORD PTR [edi-0x70],0x25
  410bda:	xor    ah,BYTE PTR [eax-0x70954d95]
  410be0:	xor    ecx,ebx
  410be2:	mov    WORD PTR [ebp-0x4946deb4],?
  410be8:	retf   
  410be9:	enter  0xf36d,0x5f
  410bed:	or     ah,BYTE PTR [eax]
  410bef:	std    
  410bf0:	in     al,0x68
  410bf2:	std    
  410bf3:	and    eax,0xd181e052
  410bf8:	in     al,0x47
  410bfa:	sbb    al,ah
  410bfc:	retf   0x757e
  410bff:	jns    0x410c78
  410c01:	pop    ebx
  410c02:	cwd    
  410c04:	push   edx
  410c05:	xchg   BYTE PTR [edx],dl
  410c07:	(bad)  
  410c08:	in     eax,dx
  410c09:	jmp    0xeb8a:0xc30a1b13
  410c10:	push   edi
  410c11:	cs arpl di,sp
  410c14:	xchg   DWORD PTR [ebx+esi*8-0x2b],ebx
  410c18:	jmp    0x5dbb:0x63784b91
  410c1f:	pop    edi
  410c20:	mov    ?,edx
  410c22:	cwde   
  410c23:	int3   
  410c24:	repnz fbstp TBYTE PTR [eax+0x7cc02bb6]
  410c2b:	dec    eax
  410c2c:	loop   0x410c37
  410c2e:	inc    edi
  410c2f:	clc    
  410c30:	imul   eax,esp,0x72
  410c33:	inc    esp
  410c34:	add    al,0x5e
  410c36:	aam    0x8a
  410c38:	jg     0x410bd0
  410c3a:	sti    
  410c3b:	xor    esi,DWORD PTR [edx]
  410c3d:	ja     0x410c63
  410c3f:	mov    edi,DWORD PTR [ebx-0x30]
  410c42:	popa   
  410c43:	pop    ds
  410c44:	rcl    BYTE PTR [ecx+0x36655420],1
  410c4a:	fsubr  QWORD PTR [ecx]
  410c4c:	call   0xa1b:0x3c8b43e3
  410c53:	xchg   DWORD PTR [edi+0x22e30fe5],ecx
  410c59:	rol    ecx,1
  410c5b:	mov    edi,0xef64a926
  410c60:	push   es
  410c61:	inc    eax
  410c62:	cwde   
  410c63:	pop    edx
  410c64:	mov    DWORD PTR [ecx+0x6e49ce04],esi
  410c6a:	stos   DWORD PTR es:[edi],eax
  410c6b:	pop    ecx
  410c6c:	lock shl ch,cl
  410c6f:	cmp    al,0xc2
  410c71:	dec    eax
  410c72:	enter  0xe151,0x9b
  410c76:	in     eax,0x4e
  410c78:	pop    ebp
  410c79:	rol    DWORD PTR [edi-0x36],cl
  410c7c:	jne    0x410c32
  410c7e:	and    al,0x7
  410c80:	pop    ds
  410c81:	data16 cli 
  410c83:	stos   DWORD PTR es:[edi],eax
  410c84:	pop    eax
  410c85:	je     0x410c19
  410c87:	les    edi,FWORD PTR [edx]
  410c89:	xor    DWORD PTR [edi-0x79bafa19],esi
  410c8f:	aas    
  410c90:	jno    0x410cf6
  410c92:	fs repz popf 
  410c95:	sbb    BYTE PTR [ebx+0x7e12def3],bl
  410c9b:	jbe    0x410cfa
  410c9d:	(bad)  
  410c9e:	jecxz  0x410c97
  410ca0:	adc    BYTE PTR [ecx+ebp*8-0x1a578107],ah
  410ca7:	xchg   esp,eax
  410ca8:	push   0x87a7bcba
  410cad:	repz push cs
  410caf:	(bad)  
  410cb1:	and    al,0x40
  410cb3:	dec    BYTE PTR [ebx+ebp*8]
  410cb6:	retf   
  410cb7:	pop    edx
  410cb8:	cmp    DWORD PTR [edx],0xf74b6559
  410cbe:	es fdiv st(1),st
  410cc1:	scas   al,BYTE PTR es:[edi]
  410cc2:	loopne 0x410cf0
  410cc4:	push   ebp
  410cc5:	(bad)  
  410cc6:	shr    BYTE PTR [ebx+edi*8-0x38],1
  410cca:	arpl   bp,bp
  410ccc:	cdq    
  410ccd:	mul    DWORD PTR [eax+0x6069228a]
  410cd3:	xor    al,0xfe
  410cd5:	jl     0x410d2b
  410cd7:	popa   
  410cd8:	jnp    0x410d05
  410cda:	sbb    dh,ch
  410cdc:	jne    0x410d59
  410cde:	pop    edi
  410cdf:	jno    0x410d09
  410ce1:	inc    eax
  410ce2:	cmp    al,BYTE PTR [edx+0x17586085]
  410ce8:	push   ecx
  410ce9:	imul   ebp,eax,0xcd3c532f
  410cef:	inc    esi
  410cf0:	mov    ds:0x6bfce0bd,eax
  410cf5:	mov    WORD PTR [edi-0x7e],ss
  410cf8:	mov    dl,0xe4
  410cfa:	outs   dx,DWORD PTR ds:[esi]
  410cfb:	xor    al,0xb2
  410cfd:	aas    
  410cfe:	inc    ebx
  410cff:	(bad)  
  410d00:	fcomi  st,st(5)
  410d02:	dec    esp
  410d03:	retf   0x14fe
  410d06:	(bad)  
  410d08:	mov    al,ds:0x1e096c61
  410d0d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0f:	inc    ecx
  410d10:	arpl   WORD PTR [edx-0x4fa7df42],dx
  410d16:	or     al,0x80
  410d18:	sbb    esi,ebx
  410d1a:	sub    bh,ch
  410d1c:	and    ch,al
  410d1e:	pop    ds
  410d1f:	adc    esp,DWORD PTR [edi+0x27]
  410d22:	xor    BYTE PTR [edx+0x6],cl
  410d25:	repz push ebx
  410d27:	ficomp DWORD PTR [eax-0x5a141663]
  410d2d:	push   eax
  410d2e:	sbb    dh,dh
  410d30:	adc    DWORD PTR [esi+0x6c02320b],edi
  410d36:	xchg   edx,eax
  410d37:	adc    BYTE PTR [eax+0x6a2a0409],ah
  410d3d:	cmp    DWORD PTR [eax],edi
  410d3f:	ins    DWORD PTR es:[edi],dx
  410d40:	xlat   BYTE PTR ds:[ebx]
  410d41:	sbb    BYTE PTR [ebp-0x52758384],dh
  410d47:	sub    ecx,DWORD PTR [ebx-0x58]
  410d4a:	adc    DWORD PTR [ebx],edx
  410d4c:	mov    BYTE PTR [edx],0xc
  410d4f:	cdq    
  410d50:	test   al,0xf4
  410d52:	fcom   DWORD PTR [edi-0x4c]
  410d55:	xchg   ebx,eax
  410d56:	pop    esi
  410d57:	call   0xf376:0xc2ed7b15
  410d5e:	adc    DWORD PTR [edx-0x54],ebp
  410d61:	push   esi
  410d62:	mov    esi,0x5eafc054
  410d67:	popa   
  410d68:	leave  
  410d69:	clc    
  410d6a:	icebp  
  410d6b:	or     al,al
  410d6d:	jg     0x410d48
  410d6f:	mov    ds:0x89651107,eax
  410d74:	adc    DWORD PTR [edx-0x1a3ae586],esi
  410d7a:	jno    0x410d65
  410d7c:	mov    ecx,0x6ac894eb
  410d81:	aas    
  410d82:	or     eax,0xb1350722
  410d87:	or     BYTE PTR [edx+ebx*1+0x6d04bb0b],0x5
  410d8f:	sbb    eax,0x3db136cc
  410d94:	rol    ecx,1
  410d96:	mov    edi,0x229a9cd1
  410d9b:	pushf  
  410d9c:	ds push cs
  410d9e:	or     dh,BYTE PTR fs:[edx]
  410da1:	lock mov dl,0x61
  410da4:	imul   ebx,DWORD PTR [esi+esi*4+0xa8c686],0x9309ecff
  410daf:	add    ebp,DWORD PTR [ebx-0x74]
  410db2:	xchg   edx,eax
  410db3:	push   ds
  410db4:	push   es
  410db5:	jb     0x410d38
  410db7:	les    ecx,FWORD PTR [ebx-0x46]
  410dba:	add    WORD PTR [edx+0x4f],cx
  410dbe:	dec    edx
  410dbf:	jmp    0x410dc8
  410dc1:	and    ebx,DWORD PTR [ebp-0x2]
  410dc4:	xor    DWORD PTR [esi+esi*8-0x3011b302],esi
  410dcb:	div    bl
  410dcd:	stc    
  410dce:	mov    eax,0x514b588e
  410dd3:	inc    eax
  410dd4:	nop
  410dd5:	dec    DWORD PTR [esi-0x75b4cb66]
  410ddb:	jmp    0x20c39998
  410de0:	test   al,0xde
  410de2:	mov    ecx,0x10e556c2
  410de7:	test   DWORD PTR [ebx+0x3f17729f],ebp
  410ded:	loop   0x410e58
  410def:	outs   dx,BYTE PTR ds:[esi]
  410df0:	(bad)  
  410df1:	push   esp
  410df2:	call   0xe780:0xb0f468ae
  410df9:	mov    bl,0x15
  410dfc:	imul   esi,ebx,0xffffff87
  410dff:	mov    gs,WORD PTR [edx-0x75f98e7e]
  410e05:	adc    eax,0xab3f62c2
  410e0a:	add    ebp,0x1d
  410e0d:	xchg   esp,eax
  410e0e:	add    esi,DWORD PTR ss:[ebp+0x26b95d49]
  410e15:	test   DWORD PTR [ebp+0x56],ecx
  410e18:	out    dx,eax
  410e19:	push   eax
  410e1a:	gs out dx,al
  410e1c:	sbb    DWORD PTR [ecx+ecx*4+0x62],0xffffff90
  410e21:	test   al,0x74
  410e23:	or     eax,0x930e1f70
  410e28:	xor    DWORD PTR [ebp-0x73bb292c],esp
  410e2e:	jno    0x410dcb
  410e30:	and    al,BYTE PTR [ecx-0x10d219ec]
  410e36:	sbb    ecx,DWORD PTR [edx+0x61]
  410e39:	cmp    dl,BYTE PTR [ebx]
  410e3b:	test   al,0xa0
  410e3d:	xchg   ebx,eax
  410e3e:	jo     0x410df2
  410e40:	ins    DWORD PTR es:[edi],dx
  410e41:	fnstcw WORD PTR [ecx-0x113a852a]
  410e47:	mov    cl,0x84
  410e49:	test   ah,dl
  410e4b:	xchg   edi,eax
  410e4c:	sub    al,0x5d
  410e4e:	sub    al,0x1
  410e50:	call   0xe2f6:0xd3257260
  410e57:	dec    esi
  410e58:	lahf   
  410e59:	fnstcw WORD PTR [ebx+0xc]
  410e5c:	fcomp  DWORD PTR [esi+0x1e1ba166]
  410e62:	adc    eax,0xf4ec81d
  410e67:	push   0x75f91fb2
  410e6c:	pop    edx
  410e6d:	mov    eax,0x2e67aeb8
  410e72:	stos   BYTE PTR es:[edi],al
  410e73:	push   esp
  410e74:	jl     0x410eda
  410e76:	popa   
  410e77:	scas   eax,DWORD PTR es:[edi]
  410e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e79:	shl    DWORD PTR [edi+esi*4-0x70],1
  410e7d:	loopne 0x410ea7
  410e7f:	(bad)  
  410e80:	mov    ch,0xe
  410e82:	scas   eax,DWORD PTR es:[edi]
  410e83:	out    dx,al
  410e84:	jne    0x410ec6
  410e86:	das    
  410e87:	mov    bh,0x67
  410e89:	sbb    DWORD PTR [edi],esi
  410e8b:	(bad)  
  410e8d:	jl     0x410e95
  410e8f:	pop    ebp
  410e90:	scas   eax,DWORD PTR es:[edi]
  410e91:	mov    edx,DWORD PTR [ebx+0x59245007]
  410e97:	mov    esp,0x59c57b8f
  410e9c:	push   esi
  410e9d:	mov    esp,0x3b7030ae
  410ea2:	out    dx,eax
  410ea3:	aam    0x59
  410ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea6:	stos   BYTE PTR es:[edi],al
  410ea7:	(bad)  
  410ea8:	sub    eax,0x45abd70b
  410ead:	adc    al,BYTE PTR [ebx+0x280d5692]
  410eb3:	mov    ah,0xbb
  410eb5:	dec    edi
  410eb6:	out    0x68,eax
  410eb8:	cmp    al,0xfb
  410eba:	inc    esi
  410ebb:	sub    DWORD PTR [esi-0x19561604],ebp
  410ec1:	add    BYTE PTR [ecx],0xbc
  410ec4:	ror    DWORD PTR [edx],cl
  410ec6:	jno    0x410e55
  410ec8:	loopne 0x410e75
  410eca:	cmp    dl,0x98
  410ecd:	or     edx,DWORD PTR [edi-0x7a]
  410ed0:	imul   esi,DWORD PTR [edx+0x45],0x2f5d6369
  410ed7:	sbb    eax,0x2243d006
  410edc:	xor    al,al
  410ede:	loopne 0x410ecd
  410ee0:	clc    
  410ee1:	les    ebx,FWORD PTR [esi+0x1e]
  410ee4:	jne    0x410f24
  410ee6:	aaa    
  410ee7:	int3   
  410ee8:	dec    esp
  410ee9:	xchg   DWORD PTR [edi+0x1beb53f5],ebx
  410eef:	cld    
  410ef0:	push   DWORD PTR [esi-0x3b]
  410ef3:	jl     0x410f48
  410ef5:	out    0x41,al
  410ef7:	imul   ebp,DWORD PTR [ecx+0x1e],0x64d7a73d
  410efe:	pop    ss
  410eff:	imul   ebp,DWORD PTR [ebx],0xffffff9a
  410f02:	imul   DWORD PTR [edx+eax*1]
  410f05:	lock (bad) 
  410f07:	popf   
  410f08:	stos   BYTE PTR es:[edi],al
  410f09:	cmp    DWORD PTR [di-0x27],ecx
  410f0d:	dec    eax
  410f0e:	dec    edx
  410f0f:	scas   eax,DWORD PTR es:[edi]
  410f10:	popa   
  410f11:	outs   dx,BYTE PTR ds:[esi]
  410f12:	call   0xc0a5:0x1317
  410f18:	jge    0x410e9b
  410f1a:	stos   BYTE PTR es:[edi],al
  410f1b:	bound  ebp,QWORD PTR [ecx-0x60]
  410f1e:	and    DWORD PTR [eax],ebp
  410f20:	sub    al,0xe
  410f22:	shl    DWORD PTR [ebx],cl
  410f24:	int3   
  410f25:	imul   edx,DWORD PTR [ebx-0x79fbf97e],0xffffff91
  410f2c:	retf   0x653f
  410f2f:	fild   WORD PTR [ebp*4+0x4ffb6781]
  410f36:	mov    ds:0xa06c5b44,al
  410f3b:	mov    ds:0xe65f83bd,al
  410f40:	hlt    
  410f41:	cmp    DWORD PTR [edx+0x7ef6ab13],ebp
  410f47:	pop    eax
  410f48:	dec    ebx
  410f49:	shr    BYTE PTR [edx+0x7f],cl
  410f4c:	push   cs
  410f4d:	es ds add al,0x76
  410f51:	and    BYTE PTR [esi+0x2bf3ccf4],al
  410f57:	test   BYTE PTR [edi+0x7],al
  410f5a:	in     al,dx
  410f5b:	mov    ds,WORD PTR [esi]
  410f5d:	(bad)  [ebx-0x6]
  410f60:	xchg   edx,eax
  410f61:	aas    
  410f62:	les    edi,FWORD PTR [ecx+0x3f]
  410f65:	push   ds
  410f66:	cwde   
  410f67:	push   0x13a29050
  410f6c:	xchg   esp,eax
  410f6d:	int    0xd4
  410f6f:	pop    edi
  410f70:	sub    ebx,ebx
  410f72:	mov    ebp,0x4fa9cbee
  410f77:	leave  
  410f78:	aam    0x62
  410f7a:	jne    0x410f56
  410f7c:	fdiv   st,st(2)
  410f7e:	ret    
  410f7f:	xor    bh,BYTE PTR [ebx]
  410f81:	fisubr DWORD PTR [eax+0x384c14f8]
  410f87:	pop    ecx
  410f88:	xor    dl,BYTE PTR [ecx-0xb48c1b0]
  410f8e:	xchg   ebx,eax
  410f8f:	push   ebp
  410f90:	add    dl,BYTE PTR [esi]
  410f92:	add    al,BYTE PTR [ebx]
  410f94:	bound  ebx,QWORD PTR [edi]
  410f96:	stos   DWORD PTR es:[edi],eax
  410f97:	push   ebx
  410f98:	pop    ss
  410f99:	cmp    DWORD PTR [esi-0x7],edi
  410f9c:	push   edx
  410f9d:	pop    esi
  410f9e:	icebp  
  410f9f:	or     al,al
  410fa1:	mov    ch,BYTE PTR [esi]
  410fa3:	dec    ebx
  410fa4:	psubsb mm6,QWORD PTR [edi]
  410fa7:	cmp    DWORD PTR [ecx+ebp*1-0x48],ecx
  410fab:	dec    edi
  410fac:	cmp    bl,BYTE PTR [ebx]
  410fae:	stos   BYTE PTR es:[edi],al
  410faf:	add    DWORD PTR [edx+0x2171d9fa],esp
  410fb5:	mov    dl,0xa6
  410fb7:	cmp    eax,eax
  410fb9:	mov    dh,0x90
  410fbb:	mov    ecx,0xc86da9b0
  410fc0:	pop    edx
  410fc1:	ja     0x411008
  410fc3:	les    ecx,FWORD PTR [ebx+esi*2]
  410fc6:	clc    
  410fc7:	imul   ebx,ecx,0xffffffe8
  410fca:	ret    
  410fcb:	test   eax,0x8ffb5794
  410fd0:	and    ecx,DWORD PTR ss:[eax]
  410fd3:	mov    esi,0x93413884
  410fd8:	out    0xe3,eax
  410fda:	mov    esi,0xd2fa7875
  410fdf:	pop    eax
  410fe1:	jmp    0x6375:0x5aac9c41
  410fe8:	mov    edi,0xee08c9cd
  410fed:	icebp  
  410fee:	mov    edi,0x58c51990
  410ff3:	sbb    eax,ecx
  410ff5:	sti    
  410ff6:	push   edi
  410ff7:	adc    ah,ch
  410ff9:	xlat   BYTE PTR ds:[ebx]
  410ffa:	ficomp WORD PTR ds:0x373381fd
  411000:	adc    al,dh
  411002:	mov    BYTE PTR [edi+edx*8+0x11],bh
  411006:	cmp    BYTE PTR [edx],dl
  411008:	xor    al,0x31
  41100a:	pop    esi
  41100b:	(bad)  
  41100c:	or     al,0x24
  41100e:	ja     0x410fff
  411010:	mov    esi,0x11caa6bb
  411015:	ins    BYTE PTR es:[edi],dx
  411016:	mov    dh,bl
  411018:	cmp    BYTE PTR [ecx-0x7e331dca],dl
  41101e:	ja     0x410fef
  411020:	cmp    al,0x55
  411022:	jb     0x411048
  411024:	mov    eax,ds:0x5d25fb23
  411029:	cmp    BYTE PTR ss:[edi],ah
  41102c:	shr    ecx,cl
  41102e:	lods   al,BYTE PTR ds:[esi]
  41102f:	jb     0x411009
  411031:	jbe    0x411077
  411033:	pop    edx
  411034:	popa   
  411035:	jmp    0x1743556a
  41103a:	scas   al,BYTE PTR es:[edi]
  41103b:	or     eax,0x78b51b6d
  411040:	push   ecx
  411041:	aas    
  411042:	fs mov esp,0xab1c151b
  411048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411049:	inc    edx
  41104a:	mov    BYTE PTR [eax],0xbd
  41104d:	jne    0x411077
  41104f:	popa   
  411050:	shr    DWORD PTR [eax],cl
  411052:	mov    al,dl
  411054:	lea    edi,[ecx]
  411056:	dec    eax
  411057:	and    BYTE PTR [ebx],0x2d
  41105a:	dec    edi
  41105b:	dec    ecx
  41105c:	jnp    0x41105b
  41105e:	addr16 cld 
  411060:	and    BYTE PTR [esi+0x1fdbe63d],bl
  411066:	or     ch,BYTE PTR [bp+0x4595]
  41106b:	aam    0x72
  41106d:	and    DWORD PTR [eax-0x93562ea],ebp
  411073:	sub    al,0x55
  411075:	call   0x3ab7767d
  41107a:	fld    TBYTE PTR [ebp+0x65d8463d]
  411080:	xchg   ebx,eax
  411081:	push   ss
  411082:	adc    al,0xc4
  411084:	outs   dx,BYTE PTR ds:[si]
  411086:	in     al,dx
  411087:	pop    ss
  411088:	outs   dx,BYTE PTR ds:[esi]
  411089:	loop   0x411036
  41108b:	arpl   ax,bx
  41108d:	dec    eax
  41108e:	fcmovb st,st(5)
  411090:	sub    DWORD PTR [eax+0x4c],esp
  411093:	int3   
  411094:	retf   
  411095:	adc    ebx,DWORD PTR [edx-0x3c]
  411098:	mov    bh,0x9
  41109a:	adc    edi,edx
  41109c:	add    bl,BYTE PTR ds:0x1b3a5e1c
  4110a2:	das    
  4110a3:	aaa    
  4110a4:	mov    esi,0x8d2c2680
  4110a9:	jge    0x411120
  4110ab:	aas    
  4110ac:	xor    dl,BYTE PTR ss:[edx-0x70]
  4110b0:	aas    
  4110b1:	add    bl,al
  4110b3:	add    eax,0xf6e73ecc
  4110b8:	xor    edi,DWORD PTR [edx]
  4110ba:	and    edi,DWORD PTR [edx+0x5df738e8]
  4110c0:	in     eax,0x35
  4110c2:	push   edx
  4110c3:	mov    ds:0x968bcbb1,eax
  4110c8:	or     al,0x53
  4110ca:	in     al,0x8f
  4110cc:	mov    eax,0x4916f8b
  4110d1:	rol    dh,0x44
  4110d4:	loope  0x41114a
  4110d6:	lods   al,BYTE PTR ds:[esi]
  4110d7:	int3   
  4110d8:	adc    dl,dh
  4110da:	pop    DWORD PTR [edi+0x10d55923]
  4110e0:	leave  
  4110e1:	dec    ebp
  4110e2:	cdq    
  4110e3:	ds jg  0x4110ae
  4110e6:	lods   eax,DWORD PTR ds:[esi]
  4110e7:	bt     DWORD PTR [edx-0x1fb2cc10],ecx
  4110ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ef:	xor    eax,0x22b89ce7
  4110f4:	mov    dl,0xf3
  4110f6:	xor    al,0x45
  4110f8:	int    0xfa
  4110fa:	arpl   cx,bx
  4110fc:	lods   al,BYTE PTR ds:[esi]
  4110fd:	test   BYTE PTR [ebp-0x76],ch
  411100:	sbb    BYTE PTR [edi+esi*1-0x45],bl
  411104:	std    
  411105:	mov    al,ds:0x94866b7
  41110a:	loope  0x4110eb
  41110c:	int    0x4a
  41110e:	ins    DWORD PTR es:[edi],dx
  41110f:	dec    ebx
  411110:	mov    BYTE PTR [ecx-0x5f],al
  411113:	push   ebp
  411114:	retf   
  411115:	fdiv   st(6),st
  411117:	push   0xc57760ab
  41111c:	xor    BYTE PTR [edx+0x267c4089],bh
  411122:	jp     0x4110cc
  411124:	ss push ss
  411126:	outs   dx,BYTE PTR ds:[esi]
  411127:	push   0x2b5cd94
  41112c:	lock jg 0x41114c
  41112f:	xchg   esi,eax
  411130:	int3   
  411131:	clc    
  411132:	mov    esp,edi
  411134:	push   cs
  411135:	xchg   edx,eax
  411136:	imul   ecx,ebp,0x7d
  411139:	mov    dh,0x3c
  41113b:	fcmovnb st,st(7)
  41113d:	or     dh,BYTE PTR [ebx+0x75]
  411140:	mov    ebx,0x460a8d8c
  411145:	(bad)  
  411146:	rcl    DWORD PTR [esi-0x68ccc71a],1
  41114c:	sub    DWORD PTR [ecx-0x53],ebx
  41114f:	int3   
  411150:	arpl   WORD PTR [eax],si
  411152:	dec    esi
  411153:	repz test eax,0x6f6bdef6
  411159:	or     al,BYTE PTR [ecx-0x39a48bc8]
  41115f:	dec    esi
  411160:	jns    0x41113f
  411162:	or     eax,0x6befa2c0
  411167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411168:	cmp    esi,DWORD PTR [edx+edx*1+0x36f2fe18]
  41116f:	jbe    0x41113b
  411171:	pop    ds
  411172:	das    
  411173:	mov    WORD PTR [ecx-0x1b7a8828],ds
  411179:	call   0x586f:0x97a9267
  411180:	inc    ebx
  411181:	xor    ebx,DWORD PTR [edi]
  411183:	xor    edi,DWORD PTR [ebx]
  411185:	cli    
  411186:	mov    al,ds:0x9b288a76
  41118b:	out    dx,eax
  41118c:	pop    edi
  41118d:	sbb    bl,BYTE PTR [edi]
  41118f:	fsin   
  411191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411192:	pop    ds
  411193:	retf   
  411194:	jbe    0x4111ac
  411196:	jle    0x4111e1
  411198:	xchg   esi,eax
  411199:	shl    edi,1
  41119b:	pop    ebp
  41119c:	inc    ebp
  41119d:	push   ss
  41119e:	(bad)  
  41119f:	pop    ss
  4111a0:	out    0x95,al
  4111a2:	in     eax,dx
  4111a3:	aas    
  4111a4:	cmp    BYTE PTR [esp+eax*8-0x79f48527],ah
  4111ab:	fldcw  WORD PTR [ecx+edx*4+0x3988ee28]
  4111b2:	pop    ss
  4111b3:	sub    al,0xf6
  4111b5:	mov    dl,0xe0
  4111b7:	push   ecx
  4111b8:	sbb    esp,DWORD PTR [ebp-0x77]
  4111bb:	daa    
  4111bc:	aas    
  4111bd:	add    cl,dh
  4111bf:	nop
  4111c0:	cmp    eax,0x662fb75f
  4111c5:	mov    WORD PTR [edx],?
  4111c7:	jbe    0x4111e3
  4111c9:	(bad)  
  4111ca:	in     eax,0x2a
  4111cc:	mov    dh,0x18
  4111ce:	fs mov edi,eax
  4111d1:	ret    
  4111d2:	jne    0x4111d1
  4111d4:	ror    eax,0x3a
  4111d7:	or     bl,BYTE PTR [ecx-0x3307c78e]
  4111dd:	jns    0x4111c1
  4111df:	mov    ?,WORD PTR [ebp-0xed27863]
  4111e5:	mul    BYTE PTR ds:0x132ba499
  4111eb:	cmp    cl,BYTE PTR [edi-0x66fab19f]
  4111f1:	adc    eax,0xc6ebf6a5
  4111f6:	out    dx,al
  4111f7:	adc    edx,DWORD PTR [eax+0x3e]
  4111fa:	push   0x8464ab39
  4111ff:	push   ebp
  411200:	mov    eax,0xc9ef74f8
  411205:	xor    eax,0x79905d5f
  41120a:	mov    dh,0x45
  41120c:	js     0x41123f
  41120e:	add    bh,BYTE PTR [eax-0x77]
  411211:	sar    ebp,cl
  411213:	in     eax,0x3a
  411215:	push   ebx
  411216:	dec    edx
  411217:	(bad)  
  411218:	rol    cl,cl
  41121a:	jecxz  0x4111bb
  41121c:	xchg   ebx,eax
  41121d:	and    ebx,edi
  41121f:	imul   ebx,DWORD PTR [ebp+0x6],0x511bb79b
  411226:	lods   al,BYTE PTR ds:[esi]
  411227:	iret   
  411228:	std    
  411229:	sar    DWORD PTR [ebp*8-0x58378274],0xdb
  411231:	(bad)  [edi+0x25dcdb20]
  411237:	xor    esi,edi
  411239:	fst    QWORD PTR [eax+0x47]
  41123c:	sub    DWORD PTR [edx-0x39],ebx
  41123f:	and    ecx,ebp
  411241:	add    al,0x5
  411243:	fidivr DWORD PTR [ebp+0x46]
  411246:	sub    DWORD PTR [ecx],ebp
  411248:	aad    0x7f
  41124a:	rol    DWORD PTR [ebp-0x778af633],1
  411250:	rep ins BYTE PTR es:[edi],dx
  411252:	mov    eax,0xc1d060f0
  411257:	sbb    DWORD PTR [edi-0x13],edi
  41125a:	jl     0x411280
  41125c:	sub    al,0xa7
  41125e:	mov    edx,ecx
  411260:	je     0x4112d2
  411262:	sbb    ah,dl
  411264:	ret    
  411265:	xor    BYTE PTR [ecx],0xee
  411268:	shr    ecx,cl
  41126a:	imul   edi,DWORD PTR ds:0x3defe02b,0xce78c711
  411274:	and    eax,0xb1a665d1
  411279:	outs   dx,BYTE PTR ds:[esi]
  41127a:	repz xchg edi,eax
  41127c:	call   0x4f91:0x3fd2ca2d
  411283:	push   ecx
  411284:	and    al,0xf1
  411286:	test   DWORD PTR [ecx],ebx
  411288:	xchg   edi,eax
  411289:	sub    dh,BYTE PTR [esi-0x3ac54f18]
  41128f:	mov    edi,0xa18ed53b
  411294:	inc    edx
  411295:	ins    BYTE PTR es:[edi],dx
  411296:	push   esi
  411297:	dec    esp
  411298:	cmc    
  411299:	xchg   ebx,eax
  41129a:	lea    edi,[ebp+eax*2+0x7c]
  41129e:	outs   dx,DWORD PTR ds:[esi]
  41129f:	sbb    esp,DWORD PTR [edi-0x2f1a6e3c]
  4112a5:	(bad)  
  4112a6:	add    BYTE PTR [edi-0x59e70b44],ch
  4112ac:	iret   
  4112ad:	fist   WORD PTR [ecx]
  4112af:	sbb    DWORD PTR [ebx],ebp
  4112b1:	std    
  4112b2:	sahf   
  4112b3:	sar    cl,cl
  4112b5:	jl     0x41129e
  4112b7:	in     al,dx
  4112b8:	fisub  DWORD PTR [eax]
  4112ba:	fsub   st,st(5)
  4112bc:	sbb    ecx,DWORD PTR [ecx-0x38aa1e4f]
  4112c2:	fisub  WORD PTR [edi-0x2f]
  4112c5:	stc    
  4112c6:	mov    dh,0xbe
  4112c8:	stos   BYTE PTR es:[edi],al
  4112c9:	and    BYTE PTR [esi-0x4b404cf6],al
  4112cf:	aas    
  4112d0:	fadd   DWORD PTR [ecx+0x7f9d5852]
  4112d6:	adc    BYTE PTR ds:0xc1422312,bl
  4112dc:	retf   
  4112dd:	jno    0x41127f
  4112df:	jecxz  0x41126c
  4112e1:	sub    al,0x73
  4112e3:	hlt    
  4112e4:	fst    QWORD PTR [esi-0x7532ee62]
  4112ea:	scas   eax,DWORD PTR es:[edi]
  4112eb:	push   esi
  4112ec:	sbb    al,0x20
  4112ee:	xchg   edx,eax
  4112ef:	push   ebp
  4112f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f1:	push   ebp
  4112f2:	xchg   edi,eax
  4112f3:	fsub   QWORD PTR [ebx-0x13598662]
  4112f9:	into   
  4112fa:	arpl   WORD PTR [ecx+0x54],bp
  4112fd:	inc    eax
  4112fe:	dec    ebx
  4112ff:	inc    ecx
  411300:	cmp    dl,dh
  411302:	mov    ch,0xbd
  411304:	stos   BYTE PTR es:[edi],al
  411305:	jmp    0x411384
  411307:	js     0x4112f5
  411309:	popf   
  41130a:	(bad)  
  41130b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41130c:	dec    esp
  41130d:	add    dl,BYTE PTR [edx-0x54ae3af8]
  411313:	das    
  411314:	int3   
  411315:	leave  
  411316:	and    DWORD PTR [ebp+0x3a],esp
  411319:	in     al,dx
  41131a:	mov    ebx,0xad1e0cba
  41131f:	mov    dl,0x1f
  411321:	ret    
  411322:	pop    esp
  411323:	cmp    dl,BYTE PTR [edx+0x1fd50bbd]
  411329:	dec    esp
  41132a:	add    ebx,ebx
  41132c:	sahf   
  41132d:	mov    dh,0x99
  41132f:	cmp    al,0x3b
  411331:	sub    BYTE PTR [edx],cl
  411333:	cmp    eax,0x3b278218
  411338:	adc    al,0x12
  41133a:	mov    BYTE PTR [edi+0x22e85984],0x94
  411341:	pop    esp
  411342:	cwde   
  411343:	in     eax,0xe7
  411345:	fwait
  411346:	cmp    al,0x39
  411348:	cld    
  411349:	loop   0x411346
  41134b:	pop    edi
  41134c:	push   ebp
  41134d:	scas   eax,DWORD PTR es:[edi]
  41134e:	and    edx,edx
  411350:	es jno 0x411398
  411353:	jge    0x4113a6
  411355:	aam    0xfe
  411357:	jmp    0x4113b6
  411359:	mov    edx,0x823c3fb9
  41135e:	jmp    0x411312
  411360:	inc    ebx
  411361:	mov    WORD PTR [edx+eiz*4],gs
  411364:	and    eax,0x46d309f5
  411369:	dec    edi
  41136a:	push   eax
  41136b:	dec    ebp
  41136c:	sub    BYTE PTR [edi],ch
  41136e:	lock leave 
  411370:	mov    dh,BYTE PTR [ebx-0x74c8c583]
  411376:	or     BYTE PTR [eax+0x61ccd0a7],0xc3
  41137d:	push   0x292c1c4
  411382:	pop    edi
  411383:	fs clc 
  411385:	icebp  
  411386:	mov    al,ds:0x6ce1f24d
  41138b:	push   0xffffffe4
  41138d:	xor    esi,edi
  41138f:	(bad)  
  411390:	and    ax,0x394b
  411394:	call   0x658d:0xc4168df
  41139b:	jmp    FWORD PTR [esi+edx*8-0x7845e0d5]
  4113a2:	xor    dh,BYTE PTR [esi]
  4113a4:	xchg   edx,eax
  4113a5:	jecxz  0x411361
  4113a7:	lea    esi,[ecx]
  4113a9:	mov    edi,0xa6c2b6bd
  4113ae:	repz mov cl,0xc3
  4113b1:	pop    ebx
  4113b2:	out    dx,al
  4113b3:	adc    al,BYTE PTR [ecx-0x7ab5e217]
  4113b9:	dec    ecx
  4113ba:	sub    ebx,esi
  4113bc:	mov    ds:0x6cc23ca1,al
  4113c1:	sub    BYTE PTR [edi+0x32],ch
  4113c4:	add    ah,BYTE PTR [edx]
  4113c6:	sub    eax,0x14819099
  4113cb:	mov    al,0xad
  4113cd:	xchg   esi,esi
  4113cf:	in     eax,0xb
  4113d1:	push   ds
  4113d2:	rcr    DWORD PTR [edi-0xad512a9],1
  4113d8:	pop    esi
  4113d9:	add    ecx,eax
  4113db:	mov    ecx,0x913fa5c0
  4113e0:	mov    eax,0xcb59bbc1
  4113e5:	mov    dh,0x59
  4113e7:	call   0x4c3:0xfc6a2acb
  4113ee:	fstp   st(5)
  4113f0:	mov    bh,0xc8
  4113f2:	ins    DWORD PTR es:[edi],dx
  4113f3:	dec    esi
  4113f4:	mov    al,0x51
  4113f6:	pop    ecx
  4113f7:	inc    esp
  4113f8:	and    BYTE PTR [edi-0x4e],ah
  4113fb:	dec    esi
  4113fc:	adc    al,0xa
  4113ff:	test   al,0x0
  411401:	sub    edx,ebx
  411403:	div    bl
  411405:	mov    esp,0x95e1b9c5
  41140a:	jg     0x4113f4
  41140c:	aam    0x18
  41140e:	push   es
  41140f:	pusha  
  411410:	lods   al,BYTE PTR ds:[esi]
  411411:	cs loop 0x411396
  411414:	(bad)  
  411415:	cmc    
  411416:	and    DWORD PTR [esi+ebx*4+0x202ce2f],eax
  41141d:	and    al,0x6c
  41141f:	fstp   QWORD PTR [esp+ecx*2-0x5]
  411423:	mov    edx,eax
  411425:	popf   
  411426:	ret    0x746e
  411429:	mov    esi,0x9018c436
  41142e:	push   ecx
  41142f:	mov    dl,0xc3
  411431:	pop    esi
  411432:	jo     0x411406
  411434:	push   edx
  411435:	js     0x4113fc
  411437:	popf   
  411438:	and    eax,0xaae8aef9
  41143d:	leave  
  41143e:	inc    edi
  41143f:	and    BYTE PTR [ebx+0x74],dh
  411442:	stos   BYTE PTR es:[edi],al
  411443:	fist   DWORD PTR [eax-0x154a2aa5]
  411449:	mov    ebp,0x9e1cc5c6
  41144e:	mov    edx,0xffb482a1
  411453:	dec    ebp
  411454:	pop    ss
  411455:	jp     0x4113fd
  411457:	repnz sbb al,0x12
  41145a:	pop    es
  41145b:	and    BYTE PTR [ebp-0x51],0x6f
  41145f:	pop    ds
  411460:	in     eax,0xc0
  411462:	push   ebx
  411463:	mov    dh,0x94
  411465:	and    BYTE PTR [eax],0xf6
  411468:	(bad)  
  411469:	cmp    eax,0x31584f0a
  41146e:	mov    DWORD PTR [ecx+eax*4+0x4d],edi
  411472:	jmp    0x411480
  411474:	adc    BYTE PTR [eax],0x8f
  411477:	lods   eax,DWORD PTR ds:[esi]
  411478:	mov    esp,0x6335c3c
  41147d:	jae    0x4114bc
  41147f:	fs (bad) 
  411481:	cmp    DWORD PTR [esp+ebx*2+0x18],edx
  411485:	out    dx,al
  411486:	loop   0x411442
  411488:	xchg   edx,eax
  411489:	pop    esp
  41148a:	and    DWORD PTR [edx],edi
  41148c:	mov    bl,0xd4
  41148e:	cmc    
  41148f:	push   ecx
  411490:	inc    ecx
  411491:	lds    eax,FWORD PTR [edx+eax*1+0x56]
  411495:	sub    bl,al
  411497:	inc    esi
  411498:	or     al,0x1d
  41149a:	inc    ecx
  41149b:	sar    DWORD PTR [ebp+0x3f],0x19
  41149f:	rcr    esi,0xec
  4114a2:	test   BYTE PTR [eax],cl
  4114a4:	xor    al,0x4a
  4114a6:	cmp    eax,0x20cb8040
  4114ab:	cdq    
  4114ac:	cmp    bl,BYTE PTR [ebx]
  4114ae:	and    DWORD PTR [esi+0xc50abec],ebx
  4114b4:	inc    eax
  4114b5:	add    eax,0x169d2f8
  4114ba:	inc    esp
  4114bb:	xadd   BYTE PTR [ebp-0x43],al
  4114bf:	(bad)  
  4114c0:	fucomi st,st(0)
  4114c2:	mov    dl,0x9
  4114c4:	pop    esi
  4114c5:	repz out 0x58,eax
  4114c8:	push   0xd
  4114ca:	xor    ah,BYTE PTR [ecx-0x7]
  4114cd:	ror    DWORD PTR [ebp+0x6c],0xd0
  4114d1:	pop    es
  4114d2:	pop    esp
  4114d3:	mov    bl,0x94
  4114d5:	mov    WORD PTR [ecx],ds
  4114d7:	rcr    DWORD PTR [eax+0x15],1
  4114da:	adc    ebp,DWORD PTR [eax-0x3b]
  4114dd:	loopne 0x4114f7
  4114df:	add    esi,0xa
  4114e2:	sbb    DWORD PTR [ecx-0x6b],esp
  4114e5:	or     ecx,DWORD PTR [ebx+0x3ba26619]
  4114eb:	mov    edx,DWORD PTR [eax+0x72cd55c8]
  4114f1:	sahf   
  4114f2:	andnps xmm1,XMMWORD PTR [esi+0x39]
  4114f6:	inc    ebp
  4114f7:	fs out 0x46,al
  4114fa:	test   cl,cl
  4114fc:	out    dx,eax
  4114fd:	adc    BYTE PTR [edx-0x25ab5631],al
  411503:	push   eax
  411504:	mov    ebp,0xbc39f4a7
  411509:	sub    eax,0x64e341a2
  41150e:	neg    BYTE PTR [esi]
  411510:	(bad)  
  411511:	push   ss
  411512:	fdivr  st(7),st
  411514:	mov    al,0xec
  411516:	daa    
  411517:	mov    esp,0x78976b70
  41151c:	push   ds
  41151d:	out    dx,al
  41151e:	fldenv [edx+0x4b]
  411521:	je     0x41158c
  411523:	fsubr  DWORD PTR [edi-0x25]
  411526:	hlt    
  411527:	div    BYTE PTR [edx]
  411529:	iret   
  41152a:	jbe    0x4114bc
  41152c:	ds shr DWORD PTR fs:[edx],0x42
  411531:	adc    eax,DWORD PTR [eax-0x54d0e768]
  411537:	test   DWORD PTR [edi+0x30],ebx
  41153a:	sub    esi,DWORD PTR [edi-0x9]
  41153d:	(bad)  
  41153e:	cld    
  41153f:	push   ebp
  411540:	mov    eax,ds:0x94e2dff8
  411545:	adc    DWORD PTR [ebx],esi
  411547:	imul   ebp,DWORD PTR [edx+0x26],0xffffff82
  41154b:	dec    eax
  41154c:	adc    ecx,ebp
  41154e:	cld    
  41154f:	xor    al,0x4c
  411551:	enter  0x2dda,0x9c
  411555:	test   eax,0xceb5bfa3
  41155a:	mov    ?,ebx
  41155c:	pop    eax
  41155d:	cdq    
  41155e:	imul   esi,DWORD PTR [ebx],0x287b05d0
  411564:	enter  0x37a0,0x5
  411568:	jp     0x4115b8
  41156a:	jne    0x411522
  41156c:	call   0x3bb7f34c
  411571:	and    DWORD PTR [edi+0x67],edx
  411574:	and    eax,0x164a1e1b
  411579:	mov    esi,0x76dbf90f
  41157e:	mov    dl,0x32
  411580:	mov    dh,0xeb
  411582:	xor    dl,ch
  411584:	mov    edx,0xaf995537
  411589:	push   cs
  41158a:	fnstsw WORD PTR [eax+ecx*1-0x4933c5ef]
  411591:	in     al,0x4a
  411593:	int3   
  411594:	call   0x627b:0xbf822306
  41159b:	push   0x11
  41159d:	cli    
  41159e:	rol    DWORD PTR [esi-0x43f88262],cl
  4115a4:	dec    eax
  4115a5:	mov    edx,0x51f5db2b
  4115aa:	adc    BYTE PTR [ecx+eiz*1],cl
  4115ad:	cmp    edx,eax
  4115af:	ds dec edi
  4115b1:	das    
  4115b2:	fisttp WORD PTR [ecx-0x5c8dce9a]
  4115b8:	push   cs
  4115b9:	xor    ebx,DWORD PTR [ebp+0x6d50efbe]
  4115bf:	lds    edx,FWORD PTR [edx+0x5b]
  4115c2:	stos   BYTE PTR es:[edi],al
  4115c3:	pop    esp
  4115c4:	add    DWORD PTR [eax],ebp
  4115c6:	inc    edi
  4115c7:	test   DWORD PTR [esi],esi
  4115c9:	retf   
  4115ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115cb:	in     al,0x12
  4115cd:	into   
  4115ce:	outs   dx,DWORD PTR ds:[esi]
  4115cf:	jbe    0x4115c3
  4115d1:	add    ebp,ecx
  4115d3:	sbb    dl,BYTE PTR [esi-0x4c]
  4115d6:	and    dl,BYTE PTR [eax]
  4115d8:	add    eax,0xa5393725
  4115dd:	inc    ebx
  4115de:	outs   dx,BYTE PTR ds:[esi]
  4115df:	mov    eax,ds:0x22581c99
  4115e4:	enter  0x7766,0xf2
  4115e8:	and    al,0x3c
  4115ea:	jl     0x4115f6
  4115ec:	push   ds
  4115ed:	(bad)  
  4115f0:	enter  0x6ee4,0x46
  4115f4:	jg     0x411673
  4115f6:	dec    ebx
  4115f7:	pop    esp
  4115f8:	jge    0x411676
  4115fa:	faddp  st(0),st
  4115fc:	push   ds
  4115fd:	jmp    0x4115f5
  4115ff:	cld    
  411600:	adc    BYTE PTR [esi+esi*2-0x5f38580],dh
  411607:	js     0x4115c3
  411609:	push   edi
  41160a:	bound  edx,QWORD PTR [ebx+ecx*1]
  41160d:	in     eax,dx
  41160e:	lods   eax,DWORD PTR ds:[esi]
  41160f:	cmc    
  411610:	out    0xb,al
  411612:	add    cl,BYTE PTR [esi+0x46]
  411615:	daa    
  411616:	pop    ebp
  411617:	xor    al,BYTE PTR [eax]
  411619:	stos   DWORD PTR es:[edi],eax
  41161a:	fsub   QWORD PTR [esi]
  41161c:	or     DWORD PTR [edx+0x2d],esi
  41161f:	mov    ebx,0xd0ea348
  411624:	pop    edx
  411625:	mov    dh,0xea
  411627:	jne    0x41168c
  411629:	push   edi
  41162a:	test   eax,0x60080c75
  41162f:	mov    eax,0x35305778
  411634:	jae    0x41162d
  411636:	xchg   ecx,eax
  411637:	fld    DWORD PTR [eax+0x622e1289]
  41163d:	jno    0x4115f7
  41163f:	pop    ebx
  411640:	ja     0x41165e
  411642:	or     eax,0x4ec635a5
  411647:	sbb    DWORD PTR [ebx-0x5f9c60a0],ebx
  41164d:	xor    DWORD PTR [ecx+0x4b],esp
  411650:	sahf   
  411651:	stos   DWORD PTR es:[edi],eax
  411652:	ret    0x1eaa
  411655:	out    0xce,al
  411657:	cmp    esp,ebp
  411659:	or     BYTE PTR [ecx],cl
  41165b:	dec    esp
  41165c:	mov    ch,0x34
  41165e:	aaa    
  41165f:	jmp    ebp
  411661:	xchg   ecx,eax
  411662:	sbb    al,0xbf
  411664:	or     eax,0x82d56f05
  411669:	aad    0x8f
  41166b:	das    
  41166c:	mov    dl,0x51
  41166e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166f:	outs   dx,DWORD PTR ds:[esi]
  411670:	push   0x56
  411672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411673:	mov    ebp,0x804ed0e2
  411678:	cmp    bh,BYTE PTR ss:[ecx+eiz*1]
  41167c:	pop    es
  41167d:	clc    
  41167e:	jge    0x4116e5
  411680:	mov    ebp,0x4ab68475
  411685:	mov    bh,0xf6
  411687:	cmp    edi,ecx
  411689:	retf   
  41168a:	xor    BYTE PTR [ecx+0x13adab33],0xa3
  411691:	retf   
  411692:	xor    BYTE PTR [ebp-0x62],bl
  411695:	push   ss
  411696:	das    
  411697:	mov    ebp,0x4f9010a7
  41169c:	xchg   edi,eax
  41169d:	jmp    0x3d7fe939
  4116a2:	xchg   ebx,eax
  4116a3:	fild   WORD PTR [ebp+0x257ba5cf]
  4116a9:	jl     0x41165b
  4116ab:	and    DWORD PTR [ebx+0x66],eax
  4116ae:	sbb    DWORD PTR [esi],esp
  4116b0:	jmp    FWORD PTR [ebx-0x9]
  4116b3:	inc    ecx
  4116b4:	sti    
  4116b5:	add    dh,ah
  4116b7:	(bad)  
  4116b8:	inc    ebx
  4116b9:	out    0xc8,eax
  4116bb:	cs nop
  4116bd:	das    
  4116be:	push   ebp
  4116bf:	adc    eax,0xa8737e4b
  4116c4:	and    BYTE PTR [edx],0xef
  4116c7:	(bad)  
  4116c8:	xlat   BYTE PTR ds:[ebx]
  4116c9:	cmp    eax,0x5df9d1ce
  4116ce:	cmp    eax,0xd9f60a13
  4116d3:	jb     0x4116fb
  4116d5:	push   ss
  4116d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d7:	dec    ebx
  4116d8:	lods   al,BYTE PTR ds:[esi]
  4116d9:	jmp    0x4b89a87c
  4116de:	adc    eax,eax
  4116e0:	pusha  
  4116e1:	int    0x9
  4116e3:	mov    bh,0xdb
  4116e5:	fidiv  DWORD PTR [eax-0x6d]
  4116e8:	(bad)  
  4116e9:	out    dx,al
  4116ea:	les    edi,FWORD PTR [edi+ebp*8]
  4116ed:	loopne 0x4116ad
  4116ef:	xor    esi,DWORD PTR [edi-0x69]
  4116f2:	dec    ecx
  4116f3:	ja     0x4116ef
  4116f5:	clc    
  4116f6:	rol    BYTE PTR ds:0x3b467fc3,1
  4116fc:	daa    
  4116fd:	push   esi
  4116fe:	test   eax,0xb34b2807
  411703:	and    bl,0x31
  411706:	(bad)  
  411707:	lods   al,BYTE PTR ds:[esi]
  411708:	shl    BYTE PTR [ebx-0x63],cl
  41170b:	lds    edx,FWORD PTR [eax+0x1]
  41170e:	push   ecx
  41170f:	ins    DWORD PTR es:[edi],dx
  411710:	and    dl,BYTE PTR [eax+edx*4-0x4e]
  411714:	jmp    0x92a:0x55699f53
  41171b:	in     al,dx
  41171c:	iret   
  41171d:	sub    al,0x36
  41171f:	adc    ah,0x56
  411722:	ss jo  0x41173d
  411725:	into   
  411726:	push   edi
  411727:	les    ebx,FWORD PTR ds:0xb53f7e8d
  41172d:	cmp    BYTE PTR [ebx+0x74],cl
  411730:	add    al,0xd7
  411732:	cs fwait
  411734:	pop    esi
  411735:	pusha  
  411736:	add    edx,eax
  411738:	and    cl,BYTE PTR ds:0x27306281
  41173e:	xor    DWORD PTR [ebx+0x4236bc04],esi
  411744:	sbb    BYTE PTR [esi-0x66a649a6],0x86
  41174b:	nop
  41174c:	iret   
  41174d:	dec    esi
  41174e:	outs   dx,DWORD PTR ds:[esi]
  41174f:	push   ss
  411750:	push   ebp
  411751:	les    ebx,FWORD PTR [edi-0x3c]
  411754:	(bad)  
  411755:	dec    ebx
  411756:	shl    ch,cl
  411758:	shr    BYTE PTR [ecx],cl
  41175a:	add    eax,0xca1c54da
  41175f:	jmp    0x7839:0x982128b3
  411766:	inc    ecx
  411767:	dec    DWORD PTR [edi+0x13be4b37]
  41176d:	sbb    al,0xd2
  41176f:	sbb    ebp,DWORD PTR [esi]
  411771:	or     eax,0x279f56b4
  411776:	je     0x4117ee
  411778:	sub    bh,al
  41177a:	push   esp
  41177b:	cwde   
  41177c:	mov    edi,DWORD PTR [ebp-0x52]
  41177f:	pop    ebp
  411780:	add    DWORD PTR [ebx-0x21c07d8],eax
  411786:	hlt    
  411787:	sub    eax,0xffffff8a
  41178a:	cmp    BYTE PTR [ebx],bh
  41178c:	scas   eax,DWORD PTR es:[edi]
  41178d:	adc    eax,0x3fe6b87e
  411792:	fwait
  411793:	je     0x4117d8
  411795:	push   esp
  411796:	ret    
  411797:	test   BYTE PTR [edi-0x7132542],dl
  41179d:	ja     0x4117b0
  41179f:	jge    0x4117b4
  4117a1:	mov    DWORD PTR [eax+0x1],ebp
  4117a4:	jmp    0x411761
  4117a6:	js     0x411792
  4117a8:	jle    0x411762
  4117aa:	mov    dl,0x73
  4117ac:	sti    
  4117ad:	je     0x4117a3
  4117af:	addr16 and eax,0xfaba50d1
  4117b5:	clc    
  4117b6:	sub    dl,cl
  4117b8:	aad    0x8d
  4117ba:	test   DWORD PTR [ecx+eax*8+0x73],esi
  4117be:	push   0xffffffa3
  4117c0:	jl     0x4117dd
  4117c2:	jno    0x41174c
  4117c4:	mov    ebx,0x670f9c05
  4117c9:	mov    fs,WORD PTR [ecx]
  4117cb:	mov    BYTE PTR [ecx+0x4ba61bd8],bh
  4117d1:	dec    ebx
  4117d2:	ficomp DWORD PTR [edx+0x6da507c9]
  4117d8:	test   DWORD PTR [ebx],eax
  4117da:	push   esp
  4117db:	leave  
  4117dc:	inc    eax
  4117dd:	dec    edi
  4117de:	push   edx
  4117df:	cdq    
  4117e0:	push   0x4
  4117e2:	push   ss
  4117e3:	lods   al,BYTE PTR ds:[esi]
  4117e4:	in     al,0x44
  4117e6:	es (bad) 
  4117e8:	call   0x5367:0xf7758a73
  4117ef:	stc    
  4117f0:	mov    edx,0xc17b120a
  4117f5:	inc    edi
  4117f6:	and    ah,BYTE PTR [edx-0x4b38d47b]
  4117fc:	mov    DWORD PTR [esi],edi
  4117fe:	pop    ss
  4117ff:	addr16 cdq 
  411801:	cmp    BYTE PTR [ebp+0x1b],ah
  411804:	inc    ebp
  411805:	out    dx,eax
  411806:	out    dx,al
  411807:	xor    bl,dh
  411809:	xor    eax,DWORD PTR [ebp-0xb]
  41180c:	test   eax,0x1e7d684a
  411811:	mov    ebp,0xc132d5b7
  411816:	and    bl,BYTE PTR [ecx+esi*2]
  411819:	and    al,0x72
  41181b:	test   BYTE PTR [ecx],cl
  41181d:	xlat   BYTE PTR ds:[ebx]
  41181e:	rcr    BYTE PTR [edi+ebp*2-0x943c0df],cl
  411825:	popf   
  411826:	call   0x4e6:0xe2dff52f
  41182d:	scas   eax,DWORD PTR es:[edi]
  41182e:	xchg   edi,eax
  41182f:	fst    st(6)
  411831:	(bad)  
  411833:	push   edi
  411834:	pop    es
  411835:	xchg   esp,eax
  411836:	cmp    al,0x48
  411838:	cmp    al,0x14
  41183a:	push   cs
  41183b:	push   0x74707a6b
  411840:	jg     0x4117cf
  411842:	adc    ch,BYTE PTR [edx+0x6257aebc]
  411848:	out    dx,al
  411849:	jmp    0x8fc0:0xcf9d9f93
  411850:	mov    esi,DWORD PTR [ebx+0x1c]
  411853:	dec    esp
  411854:	mov    ah,dl
  411856:	(bad)  
  411857:	daa    
  411858:	mov    dl,0x29
  41185a:	push   0x5dc903d9
  41185f:	dec    esp
  411860:	es mov edi,0x1220598b
  411866:	test   DWORD PTR [ebx],edi
  411868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411869:	jno    0x411863
  41186b:	add    al,BYTE PTR [ebx-0x52]
  41186e:	or     eax,DWORD PTR [edx]
  411870:	inc    ecx
  411871:	test   dh,dh
  411873:	inc    ebx
  411874:	push   es
  411875:	popa   
  411876:	mov    bl,0xdf
  411878:	dec    edi
  411879:	ret    0x41ff
  41187c:	adc    eax,0x1f827d1c
  411881:	adc    edx,DWORD PTR [eax+edx*4]
  411884:	add    edi,DWORD PTR [eax-0x92726b9]
  41188a:	push   edx
  41188b:	mov    esp,0x8b3ee595
  411890:	push   es
  411891:	mov    ds:0x260cb422,eax
  411896:	jae    0x411882
  411898:	sub    esp,edx
  41189a:	and    dh,bh
  41189c:	inc    eax
  41189d:	xor    DWORD PTR [edi-0x63],esi
  4118a0:	in     al,dx
  4118a1:	or     cl,dl
  4118a3:	jb     0x411923
  4118a5:	pop    ebp
  4118a6:	dec    esi
  4118a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a8:	retf   
  4118a9:	cmp    al,BYTE PTR [edx-0x2f256bca]
  4118af:	arpl   cx,dx
  4118b1:	xlat   BYTE PTR ds:[ebx]
  4118b2:	in     al,dx
  4118b3:	cli    
  4118b4:	jbe    0x4118a0
  4118b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b7:	aam    0xf9
  4118b9:	or     eax,0xa5757208
  4118be:	mov    ch,0x3e
  4118c0:	leave  
  4118c1:	inc    edi
  4118c2:	lds    ecx,FWORD PTR [edi]
  4118c4:	push   ss
  4118c5:	scas   al,BYTE PTR es:[edi]
  4118c6:	xchg   BYTE PTR ds:0xa9d97209,al
  4118cc:	nop
  4118cd:	adc    bh,BYTE PTR [esi-0xb]
  4118d0:	mov    ebx,0xc2841907
  4118d5:	push   esi
  4118d6:	loop   0x4118a8
  4118d8:	mov    ebx,ss
  4118da:	fild   QWORD PTR [eax-0x3d]
  4118dd:	test   DWORD PTR [esi],eax
  4118df:	ds nop
  4118e1:	xlat   BYTE PTR ds:[ebx]
  4118e2:	xchg   DWORD PTR [edi-0x568511a4],edx
  4118e8:	and    BYTE PTR [edx+ecx*1],al
  4118eb:	push   es
  4118ec:	or     ch,BYTE PTR [ecx+0x41]
  4118ef:	mov    esi,0xf4bee4f4
  4118f4:	aam    0x2f
  4118f6:	mov    edi,ss
  4118f8:	test   DWORD PTR [edx+0x3bbd130e],0x429649b
  411902:	xor    ebx,DWORD PTR [ebx-0x2688bb80]
  411908:	inc    esi
  411909:	inc    ebx
  41190a:	sub    eax,0x97ed62b5
  41190f:	fidiv  DWORD PTR [ebx-0x5af9e9dc]
  411915:	dec    ebx
  411916:	jnp    0x41196c
  411918:	aam    0xaa
  41191a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191b:	mov    cl,0x7f
  41191d:	sub    ebp,DWORD PTR [eax+0x10]
  411920:	lahf   
  411921:	les    edx,FWORD PTR ss:[edi]
  411924:	xchg   DWORD PTR [esi-0x2e49516a],ecx
  41192a:	shr    DWORD PTR [ebx],cl
  41192c:	push   eax
  41192d:	add    BYTE PTR [edx+0x77],al
  411930:	aas    
  411931:	add    BYTE PTR [eax],cl
  411933:	jmp    0xd3dfd096
  411938:	jnp    0x411917
  41193a:	mov    al,BYTE PTR [edi+0x1a155e95]
  411940:	inc    ebx
  411941:	fidivr DWORD PTR [edi+0x2b]
  411944:	std    
  411945:	dec    ebp
  411946:	push   esp
  411947:	fwait
  411948:	mov    ah,0x31
  41194a:	add    DWORD PTR [ebp-0x1e],esp
  41194d:	lods   eax,DWORD PTR ds:[esi]
  41194e:	inc    ebx
  41194f:	rcr    DWORD PTR [edx],1
  411951:	mov    ecx,0x418b42a
  411956:	aam    0xfb
  411958:	out    dx,eax
  411959:	mov    al,ds:0x2fb86d78
  41195e:	popf   
  41195f:	int3   
  411960:	jnp    0x411945
  411962:	fnstcw WORD PTR [eax]
  411964:	mov    ecx,0xc5e720fd
  411969:	cmp    bh,BYTE PTR [ebx+eiz*4+0x1f1a409a]
  411970:	fld    TBYTE PTR [ebp+edi*2-0x3859d3f9]
  411977:	push   0xffffff91
  411979:	push   ss
  41197a:	jmp    0x411974
  41197c:	dec    ebp
  41197d:	mov    al,ds:0x241c67c1
  411982:	cli    
  411983:	jle    0x411975
  411985:	jne    0x4119ce
  411987:	push   ds
  411988:	cmp    BYTE PTR [ecx],0x36
  41198b:	push   0x43a9a7ac
  411990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411991:	mov    ?,WORD PTR [esi+0x6c]
  411994:	ds fwait
  411996:	addr16 jo 0x4119b4
  411999:	gs int 0xfb
  41199c:	mov    ds:0xa6efe769,eax
  4119a1:	out    0x1,al
  4119a3:	outs   dx,BYTE PTR ds:[esi]
  4119a4:	fwait
  4119a5:	mov    ebx,0x7ae2e637
  4119aa:	push   esi
  4119ab:	push   edi
  4119ac:	loopne 0x411a0e
  4119ae:	and    al,0x96
  4119b0:	clc    
  4119b1:	push   es
  4119b2:	inc    edx
  4119b3:	stos   DWORD PTR es:[edi],eax
  4119b4:	xchg   esi,eax
  4119b5:	adc    BYTE PTR [ecx+0x41e7ac6e],bl
  4119bb:	pop    esi
  4119bc:	into   
  4119bd:	js     0x411976
  4119bf:	pusha  
  4119c0:	dec    edi
  4119c1:	pushf  
  4119c2:	mov    BYTE PTR [esi+0x3b],cl
  4119c5:	cmp    al,0x2a
  4119c7:	(bad)  
  4119c8:	jl     0x4119c3
  4119ca:	inc    esp
  4119cb:	hlt    
  4119cc:	mov    ds:0xb92122f8,eax
  4119d1:	in     eax,dx
  4119d2:	push   ebx
  4119d3:	jae    0x411a43
  4119d5:	jle    0x41199d
  4119d7:	scas   al,BYTE PTR es:[edi]
  4119d8:	push   0x6
  4119da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119db:	std    
  4119dc:	add    ebx,DWORD PTR [ebp+0x2d]
  4119df:	(bad)  
  4119e0:	mov    eax,0xe290dfe7
  4119e5:	fs int 0x4b
  4119e8:	stos   DWORD PTR es:[edi],eax
  4119e9:	sub    eax,0x811b2c37
  4119ee:	adc    dh,BYTE PTR [esi+eax*4-0x5abbee07]
  4119f5:	dec    edi
  4119f6:	dec    edi
  4119f7:	xor    ah,BYTE PTR [esi-0x9]
  4119fa:	loopne 0x4119d9
  4119fc:	xchg   esi,eax
  4119fd:	out    0xe9,eax
  4119ff:	xor    BYTE PTR [edx],bl
  411a01:	lock loopne 0x411a2c
  411a04:	or     eax,0x46b223cf
  411a09:	jg     0x4119ed
  411a0b:	pop    edi
  411a0c:	jge    0x411a74
  411a0e:	mov    edx,0x6d27a14f
  411a13:	iret   
  411a14:	sahf   
  411a15:	gs push esp
  411a17:	mov    eax,0x7682a
  411a1c:	dec    edi
  411a1d:	test   dl,0x24
  411a20:	out    dx,al
  411a21:	aaa    
  411a22:	mov    bl,0x4f
  411a24:	pop    esp
  411a25:	cmp    bl,al
  411a27:	push   edx
  411a28:	mul    ch
  411a2a:	sub    bl,BYTE PTR [ebx]
  411a2c:	leave  
  411a2d:	inc    edx
  411a2e:	mov    dl,0xe3
  411a30:	es dec ecx
  411a32:	ins    DWORD PTR es:[edi],dx
  411a33:	inc    esi
  411a34:	pushf  
  411a35:	test   ah,ah
  411a37:	dec    ecx
  411a38:	mov    ecx,DWORD PTR [ecx+0x3c]
  411a3b:	enter  0x68c7,0x25
  411a3f:	arpl   WORD PTR [eax-0x54],ax
  411a42:	lds    esp,FWORD PTR [esi+0x63]
  411a45:	in     eax,dx
  411a46:	mov    eax,ds:0x1d0233a8
  411a4b:	in     al,dx
  411a4c:	lds    ebp,FWORD PTR [edi+0x61160162]
  411a52:	rcl    BYTE PTR ds:0x91e5,1
  411a57:	xor    cl,0x89
  411a5a:	or     edx,DWORD PTR [eax-0x30]
  411a5d:	clc    
  411a5e:	bound  ebx,QWORD PTR [edx+0x30]
  411a61:	xor    BYTE PTR [ebp+0xd9cff96],dh
  411a67:	mov    edx,0xa5e9886b
  411a6c:	inc    ecx
  411a6d:	mov    ebp,0x77e920b6
  411a72:	in     al,dx
  411a73:	mov    ecx,0x435bfabb
  411a78:	sbb    BYTE PTR [esi+edi*4+0x228505ba],ah
  411a7f:	add    BYTE PTR [edx+0x4a],dl
  411a82:	adc    BYTE PTR [ebx+0x5b5672a2],cl
  411a88:	and    DWORD PTR [eax+0x76],esp
  411a8b:	sti    
  411a8c:	ins    DWORD PTR es:[edi],dx
  411a8d:	mov    dh,0xf1
  411a8f:	dec    eax
  411a90:	enter  0xbdac,0x16
  411a94:	rcl    DWORD PTR [edi-0x407a8c21],1
  411a9a:	or     eax,0xd6e918c3
  411a9f:	(bad)  
  411aa0:	arpl   cx,bp
  411aa2:	dec    ebx
  411aa3:	mov    esp,0x1d2b97b4
  411aa8:	ret    
  411aa9:	push   0xe75c6706
  411aae:	loopne 0x411aaa
  411ab0:	xchg   DWORD PTR [edx],edi
  411ab2:	mov    dh,BYTE PTR [ebx+edi*4+0x78]
  411ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab7:	add    BYTE PTR [esi-0x55],ah
  411aba:	arpl   WORD PTR [edx-0x4f],cx
  411abd:	imul   edx,DWORD PTR [edi+0x35],0x71c90015
  411ac4:	cs sahf 
  411ac6:	xor    edi,ebx
  411ac8:	arpl   WORD PTR [ecx+eiz*2-0x38],sp
  411acc:	push   cs
  411acd:	mov    ebp,0xc9ed52ba
  411ad2:	mov    dl,BYTE PTR [ebx]
  411ad4:	or     al,0xb
  411ad6:	dec    ebp
  411ad7:	inc    edi
  411ad8:	enter  0x2a22,0x58
  411adc:	nop
  411add:	and    DWORD PTR [edx],ebx
  411adf:	aam    0xa7
  411ae1:	(bad)  
  411ae2:	out    dx,al
  411ae3:	push   edx
  411ae4:	pop    edx
  411ae5:	xchg   ebp,eax
  411ae6:	push   ecx
  411ae7:	(bad)
  411aea:	dec    ebp
  411aeb:	scas   eax,DWORD PTR es:[edi]
  411aec:	cmp    DWORD PTR [ebx],esi
  411aee:	mov    ch,0xbb
  411af0:	int3   
  411af1:	sbb    eax,0x65aa323b
  411af6:	push   eax
  411af7:	rcl    DWORD PTR [ecx-0x4],0x92
  411afb:	pop    es
  411afc:	gs add eax,0x5b19ee3c
  411b02:	enter  0x880,0xef
  411b06:	dec    esp
  411b07:	scas   al,BYTE PTR es:[edi]
  411b08:	pop    edx
  411b09:	popf   
  411b0a:	sub    DWORD PTR ds:0x28c09d5,ecx
  411b10:	outs   dx,DWORD PTR ds:[esi]
  411b11:	call   FWORD PTR [edx+ebp*8-0x6a]
  411b15:	mov    al,BYTE PTR [ebp*1-0x279c360d]
  411b1c:	push   edx
  411b1d:	push   ecx
  411b1e:	imul   BYTE PTR [edx]
  411b20:	adc    cl,bl
  411b22:	sbb    eax,0xd8cc3fb0
  411b27:	fs mov dh,0x6
  411b2a:	stos   DWORD PTR es:[edi],eax
  411b2b:	loopne 0x411aee
  411b2d:	icebp  
  411b2e:	pop    ecx
  411b2f:	dec    BYTE PTR es:[ebx+0xcd1f584]
  411b36:	stos   BYTE PTR es:[edi],al
  411b37:	es (bad) 
  411b3a:	xchg   edi,eax
  411b3b:	and    DWORD PTR [esp+eax*2],edx
  411b3e:	sub    edi,DWORD PTR [eax-0x5a]
  411b41:	pusha  
  411b42:	jge    0x411b75
  411b44:	push   es
  411b45:	jecxz  0x411b58
  411b47:	lahf   
  411b48:	sub    ecx,DWORD PTR [eax+0x4b]
  411b4b:	push   edx
  411b4c:	in     al,0xa7
  411b4e:	dec    ebp
  411b4f:	(bad)  
  411b50:	or     DWORD PTR [ebx+eax*4-0xb],edx
  411b54:	adc    bl,BYTE PTR [ecx]
  411b56:	nop    DWORD PTR [eax+0x7485ee30]
  411b5d:	aad    0x9c
  411b5f:	in     al,dx
  411b60:	jg     0x411b17
  411b62:	das    
  411b63:	adc    edi,DWORD PTR [ecx+0x572bf81d]
  411b69:	add    BYTE PTR [ecx],ch
  411b6b:	ret    0x71ab
  411b6e:	call   0x2abd:0x37117c95
  411b75:	sahf   
  411b76:	mov    ecx,0x5b710b45
  411b7b:	leave  
  411b7c:	xrelease mov BYTE PTR [esi+0x6ca5eadc],dl
  411b83:	in     al,0x69
  411b85:	ror    DWORD PTR [esi-0x55],1
  411b88:	daa    
  411b89:	cdq    
  411b8a:	pop    ds
  411b8b:	mov    ch,0x37
  411b8d:	pop    ss
  411b8e:	fcomp  DWORD PTR [ebp-0x68f52689]
  411b94:	in     al,0xac
  411b96:	ficomp DWORD PTR [eax+ecx*4-0x55ed95d7]
  411b9d:	ret    
  411b9e:	xchg   edi,eax
  411b9f:	fisttp DWORD PTR [ebp-0x59]
  411ba2:	mov    bh,0x5e
  411ba4:	xor    al,0x55
  411ba6:	push   ecx
  411ba7:	fstp   st(5)
  411ba9:	adc    BYTE PTR [edi+0x59],ch
  411bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bad:	mov    ds:0x2aec54e7,al
  411bb2:	into   
  411bb3:	lock sar dh,0x47
  411bb7:	sahf   
  411bb8:	pop    ss
  411bb9:	pusha  
  411bba:	popf   
  411bbb:	pop    ss
  411bbc:	mov    bh,BYTE PTR [eax+0x597e4d08]
  411bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc3:	vpsadbw ymm0,ymm7,YMMWORD PTR [esi]
  411bc7:	(bad)  
  411bc9:	adc    DWORD PTR [ecx],0x1d2bc5c6
  411bcf:	test   BYTE PTR [ecx+0x6a3ab492],dl
  411bd5:	sub    DWORD PTR ss:[ecx+0x365adc95],0x924fcf04
  411be0:	test   BYTE PTR [eax-0x1a0163c9],bh
  411be6:	pop    edx
  411be7:	pushf  
  411be8:	fcomp  QWORD PTR [ebx-0x76dfa004]
  411bee:	mov    ebx,0xf8957a0c
  411bf3:	and    ebp,DWORD PTR [edi]
  411bf5:	pop    esi
  411bf6:	test   al,0xea
  411bf8:	and    al,0x5
  411bfa:	add    eax,0xa23d9cf9
  411bff:	cmp    al,0xd6
  411c01:	jp     0x411c02
  411c03:	imul   BYTE PTR [esi+0x2833fe9f]
  411c09:	es pop eax
  411c0b:	push   0xd3ded09e
  411c10:	gs in  eax,0x7
  411c13:	cmp    dh,BYTE PTR [eax-0x147797d2]
  411c19:	pop    edx
  411c1a:	xchg   edx,eax
  411c1b:	leave  
  411c1c:	out    0x8b,al
  411c1e:	and    ah,0xcb
  411c21:	inc    ecx
  411c22:	lods   eax,DWORD PTR ds:[esi]
  411c23:	or     DWORD PTR [edi],esi
  411c25:	icebp  
  411c26:	pop    ebp
  411c27:	jmp    0x411c9a
  411c29:	popf   
  411c2a:	ins    DWORD PTR es:[edi],dx
  411c2b:	pop    esp
  411c2c:	pop    ecx
  411c2d:	mov    ah,0xa2
  411c2f:	scas   eax,DWORD PTR es:[edi]
  411c30:	dec    esp
  411c31:	sub    cl,BYTE PTR [edi-0x3ef9acb2]
  411c37:	stc    
  411c38:	jmp    0x18a4d87c
  411c3d:	fs daa 
  411c3f:	leave  
  411c40:	addr16 leave 
  411c42:	xor    al,0xb2
  411c44:	or     eax,DWORD PTR cs:[esi]
  411c47:	sub    eax,esp
  411c49:	adc    al,0x60
  411c4b:	inc    eax
  411c4c:	les    ebx,FWORD PTR [ebx-0x778147f]
  411c52:	jb     0x411c32
  411c54:	ds jb  0x411c2e
  411c57:	std    
  411c58:	inc    edx
  411c59:	cli    
  411c5a:	imul   ebx,DWORD PTR [esi-0x8],0x14
  411c5e:	call   0xaddf891
  411c63:	pusha  
  411c64:	in     al,dx
  411c65:	je     0x411c6e
  411c67:	sub    al,BYTE PTR [ecx]
  411c69:	xchg   ecx,eax
  411c6a:	xchg   ebx,eax
  411c6b:	test   al,0x24
  411c6d:	mov    DWORD PTR [ecx],ebx
  411c6f:	jle    0x411c1c
  411c71:	sub    BYTE PTR [edi+0x3e464da2],al
  411c77:	retf   0x89a2
  411c7a:	and    al,0x8c
  411c7c:	sbb    DWORD PTR [edi+esi*4+0x25d7f42d],ecx
  411c83:	push   0x20
  411c85:	jnp    0x411ce6
  411c87:	xchg   edi,eax
  411c88:	jl     0x411c62
  411c8a:	xchg   edi,eax
  411c8b:	and    DWORD PTR [ebp+0x978e2d8],esi
  411c91:	ja     0x411c75
  411c93:	mov    al,0xe9
  411c95:	dec    esi
  411c96:	push   es
  411c97:	ins    DWORD PTR es:[edi],dx
  411c98:	(bad)  
  411c9a:	ret    
  411c9b:	mov    es,eax
  411c9d:	mov    ecx,0x624d398
  411ca2:	jns    0x411c31
  411ca4:	outs   dx,DWORD PTR ds:[esi]
  411ca5:	ds push 0x56
  411ca8:	adc    eax,0xe3901dcf
  411cad:	mov    esi,0x1a660b69
  411cb2:	outs   dx,BYTE PTR ds:[esi]
  411cb3:	and    esi,DWORD PTR [eax-0x1]
  411cb6:	stos   BYTE PTR es:[edi],al
  411cb7:	adc    esp,DWORD PTR [eax+eiz*8+0x25]
  411cbb:	retf   0x23fe
  411cbe:	retf   0x292a
  411cc1:	shr    ecx,cl
  411cc3:	add    eax,0x881c5af1
  411cc8:	shr    BYTE PTR [edi+0x73],0xae
  411ccc:	mov    bh,0xee
  411cce:	mov    ch,0xdb
  411cd0:	xchg   ebp,eax
  411cd1:	lock mov ebx,DWORD PTR ds:0x4cff2f5e
  411cd8:	push   eax
  411cd9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411cdb:	sbb    eax,0x8b06a7cb
  411ce0:	pop    es
  411ce1:	sar    bl,0x50
  411ce4:	mov    ebx,0x393cd314
  411ce9:	fdiv   st(4),st
  411ceb:	retf   0x5a68
  411cee:	mov    ebp,0xe55d8779
  411cf3:	out    0x62,al
  411cf5:	in     al,dx
  411cf6:	popf   
  411cf7:	repnz and al,0x20
  411cfa:	inc    edi
  411cfb:	lods   eax,DWORD PTR ds:[esi]
  411cfc:	enter  0x7f07,0x26
  411d00:	popf   
  411d01:	push   cs
  411d02:	outs   dx,BYTE PTR ds:[esi]
  411d03:	xchg   esi,eax
  411d04:	in     al,dx
  411d05:	imul   DWORD PTR [edx]
  411d07:	mov    ds:0xb1e9f26b,al
  411d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d0d:	fdecstp 
  411d0f:	mov    bl,0xac
  411d11:	sub    BYTE PTR ds:0x87b8f41a,ch
  411d17:	push   ds
  411d18:	adc    BYTE PTR [esi],dl
  411d1a:	stos   BYTE PTR es:[edi],al
  411d1b:	adc    dl,BYTE PTR [ebp-0x59]
  411d1e:	jg     0x411ce2
  411d20:	loop   0x411d7a
  411d22:	push   cs
  411d23:	int    0x3c
  411d25:	clc    
  411d26:	retf   0x2e2e
  411d29:	adc    ebx,DWORD PTR [edx]
  411d2b:	loope  0x411d2e
  411d2d:	out    dx,al
  411d2e:	or     eax,0x55ca7cdb
  411d33:	add    al,0xdc
  411d35:	cmp    ah,BYTE PTR [esi+0xa]
  411d38:	adc    DWORD PTR [edi-0x37d72d5a],esp
  411d3e:	and    al,0xf1
  411d40:	mov    WORD PTR [ebx],gs
  411d42:	jbe    0x411dc3
  411d44:	aad    0x43
  411d46:	jns    0x411d6b
  411d48:	mov    esi,0x874bb513
  411d4d:	es inc esi
  411d4f:	pop    esp
  411d50:	lods   eax,DWORD PTR ds:[esi]
  411d51:	sub    BYTE PTR [edx+ebx*1],bl
  411d54:	rol    BYTE PTR [ebx-0x646da08a],cl
  411d5a:	je     0x411d71
  411d5c:	mov    dh,0xb6
  411d5e:	mov    BYTE PTR [edx+ebp*1],dl
  411d61:	sbb    dh,BYTE PTR [esi+0x73]
  411d64:	rcl    BYTE PTR [ecx-0x2f],cl
  411d67:	ins    BYTE PTR es:[edi],dx
  411d68:	xchg   ebx,eax
  411d69:	test   al,0x61
  411d6b:	adc    dl,ch
  411d6d:	cmp    DWORD PTR gs:[edx+0x25d31bc2],0xe897fd0c
  411d78:	fild   DWORD PTR [ecx]
  411d7a:	mov    al,ds:0x2e19c872
  411d7f:	add    eax,0xbbac0362
  411d84:	push   esp
  411d85:	outs   dx,DWORD PTR ds:[esi]
  411d86:	jecxz  0x411d41
  411d88:	dec    esi
  411d89:	ds (bad) 
  411d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8d:	outs   dx,DWORD PTR ds:[esi]
  411d8e:	mov    ch,0xe1
  411d90:	xchg   esi,eax
  411d91:	jae    0x411d71
  411d93:	stc    
  411d94:	je     0xddd80af4
  411d9a:	inc    esp
  411d9b:	jmp    0x25a0:0x148f576f
  411da2:	dec    ebx
  411da3:	(bad)  
  411da4:	neg    esi
  411da6:	mov    ebp,0xd9a10535
  411dab:	or     eax,0x49ea7317
  411db0:	mov    esp,0xbd47db55
  411db5:	hlt    
  411db6:	push   ds
  411db7:	js     0x411d61
  411db9:	push   edi
  411dba:	dec    ebx
  411dbb:	adc    eax,0x924384a
  411dc0:	inc    esp
  411dc1:	mov    ebp,eax
  411dc3:	push   esp
  411dc4:	adc    al,0x7b
  411dc6:	(bad)  
  411dc7:	sbb    ch,ah
  411dc9:	mov    ah,0x66
  411dcb:	mov    al,0x62
  411dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dce:	aam    0xc0
  411dd0:	fwait
  411dd1:	xor    al,0x73
  411dd3:	and    eax,0x711aed62
  411dd8:	and    eax,0xc5458ad1
  411ddd:	clc    
  411dde:	call   0x3a40de93
  411de3:	jecxz  0x411db8
  411de5:	mov    ah,0x33
  411de7:	xchg   DWORD PTR [edx-0x5a68cf95],esi
  411ded:	aas    
  411dee:	adc    dl,al
  411df0:	adc    al,0xcd
  411df2:	loope  0x411ddf
  411df4:	cs pop ebx
  411df6:	out    dx,eax
  411df7:	xchg   ecx,eax
  411df8:	leave  
  411df9:	ror    BYTE PTR [edx+ecx*8+0x7f0d44fc],cl
  411e00:	shl    DWORD PTR [esi],1
  411e02:	jp     0x411df1
  411e04:	xchg   esp,eax
  411e05:	inc    ebp
  411e06:	test   BYTE PTR [ecx+0x55024fc0],bl
  411e0c:	pop    cx
  411e0e:	mov    ebp,0x39caad0b
  411e13:	es pop esp
  411e15:	push   edx
  411e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e17:	ja     0x411dfd
  411e19:	stos   BYTE PTR es:[edi],al
  411e1a:	inc    ecx
  411e1b:	dec    edx
  411e1c:	jle    0x411e0e
  411e1e:	jge    0x411dab
  411e20:	mov    bh,0x12
  411e22:	jl     0x411e13
  411e24:	sti    
  411e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e26:	dec    ecx
  411e27:	cmp    edx,ebp
  411e29:	mov    bl,0x79
  411e2b:	push   ecx
  411e2c:	jecxz  0x411e28
  411e2e:	inc    esp
  411e2f:	add    DWORD PTR [esi+0x61cb8609],edx
  411e35:	fistp  QWORD PTR [eax]
  411e37:	in     al,dx
  411e38:	stos   DWORD PTR es:[edi],eax
  411e39:	rsqrtps xmm3,XMMWORD PTR [ebx]
  411e3c:	mov    edi,0xe7dbdfe8
  411e41:	dec    ecx
  411e42:	test   al,0x37
  411e44:	jo     0x411e3d
  411e46:	dec    ebx
  411e47:	xchg   ecx,eax
  411e48:	es push ebx
  411e4a:	fldenv [esi]
  411e4c:	cmp    edi,DWORD PTR [edx]
  411e4e:	in     eax,dx
  411e4f:	repnz pop eax
  411e51:	push   ebx
  411e52:	mov    cl,BYTE PTR [edi-0x7b]
  411e55:	ins    DWORD PTR es:[edi],dx
  411e56:	lahf   
  411e57:	test   BYTE PTR [edi+0x7b],al
  411e5a:	(bad)  
  411e5c:	xor    bh,al
  411e5e:	pop    edx
  411e5f:	fimul  DWORD PTR [ebx-0x58]
  411e62:	pop    es
  411e63:	in     eax,0x79
  411e65:	push   esp
  411e66:	jp     0x411e21
  411e68:	xchg   edx,eax
  411e69:	or     BYTE PTR [esi-0x1e9745cc],dl
  411e6f:	aam    0xaa
  411e71:	mov    al,0x7c
  411e73:	clc    
  411e74:	pop    ecx
  411e75:	repnz iret 
  411e77:	cs sub eax,esi
  411e7a:	test   al,0xcf
  411e7c:	aad    0x38
  411e7e:	fnstenv [edi-0x35]
  411e81:	adc    bh,bh
  411e83:	fcmove st,st(4)
  411e85:	hlt    
  411e86:	xchg   ecx,eax
  411e87:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  411e89:	push   es
  411e8a:	xor    esp,DWORD PTR [eax]
  411e8c:	lea    esi,[ebx-0x7395fe6c]
  411e92:	and    DWORD PTR [edx+0x6c],0x42f242d0
  411e99:	lahf   
  411e9a:	adc    al,0x19
  411e9c:	cmp    DWORD PTR [esi+0x3b260ee0],ebx
  411ea2:	lods   al,BYTE PTR ds:[esi]
  411ea3:	(bad)  
  411ea5:	test   DWORD PTR [ecx-0x25102415],edi
  411eab:	cmp    DWORD PTR [eax],0xcf6ce627
  411eb1:	jl     0x411f14
  411eb3:	lods   al,BYTE PTR ds:[esi]
  411eb4:	sahf   
  411eb5:	dec    edx
  411eb6:	jmp    0x411f1e
  411eb8:	or     ch,bh
  411eba:	stos   DWORD PTR es:[edi],eax
  411ebb:	lock fsub QWORD PTR gs:[edi+0x69]
  411ec0:	add    BYTE PTR [edx-0x5322dc26],ch
  411ec6:	(bad)  
  411ec7:	cmp    al,0x57
  411ec9:	adc    BYTE PTR [ebx],0x45
  411ecc:	push   ebx
  411ecd:	test   BYTE PTR [edx+0x68],bl
  411ed0:	pop    ebx
  411ed1:	add    eax,DWORD PTR ds:0xe4d93a9c
  411ed7:	or     al,0x9a
  411ed9:	pop    edi
  411eda:	sub    DWORD PTR [edi-0xf],eax
  411edd:	pop    esp
  411ede:	fsub   QWORD PTR [ecx+0x7c]
  411ee1:	add    esi,edi
  411ee3:	inc    eax
  411ee4:	fstp   QWORD PTR [ebx]
  411ee6:	pop    edx
  411ee7:	stos   BYTE PTR es:[edi],al
  411ee8:	imul   esi,DWORD PTR [edx],0x2f510bff
  411eee:	retf   0xd132
  411ef1:	fbstp  TBYTE PTR [edx+0x4f3912f1]
  411ef7:	cdq    
  411ef8:	mov    eax,ds:0xbecae522
  411efd:	es push ds
  411eff:	scas   eax,DWORD PTR es:[edi]
  411f00:	jl     0x411f11
  411f02:	ds dec ecx
  411f04:	stos   DWORD PTR es:[edi],eax
  411f05:	punpckhbw mm7,QWORD PTR [esi-0x7a785e80]
  411f0c:	fsub   QWORD PTR [ebp-0x1f]
  411f0f:	pop    ds
  411f10:	loop   0x411f11
  411f12:	mov    bl,0x37
  411f14:	pop    ebp
  411f15:	mov    eax,ds:0xf0d8ced9
  411f1a:	fcom   QWORD PTR [ebx-0x687a5cf7]
  411f20:	sbb    eax,DWORD PTR [ebp-0x71]
  411f23:	test   eax,0x842ba868
  411f28:	aas    
  411f29:	div    BYTE PTR [ebp-0x15d89fd6]
  411f2f:	push   ecx
  411f30:	mov    dh,0xe3
  411f32:	mov    ecx,0x8501e164
  411f37:	je     0x411f2a
  411f39:	ja     0x411f80
  411f3b:	push   edi
  411f3c:	pop    esp
  411f3d:	aam    0x9d
  411f3f:	sub    dl,BYTE PTR [edi]
  411f41:	jmp    0x57d9b99e
  411f46:	and    ebp,DWORD PTR [ecx+ebx*4]
  411f49:	cmp    bh,BYTE PTR [ecx+0x60]
  411f4c:	xchg   ch,dl
  411f4e:	inc    eax
  411f4f:	mov    dh,0x2b
  411f51:	in     eax,0x74
  411f53:	fs (bad) 
  411f55:	fbstp  TBYTE PTR [edi-0x42fe5684]
  411f5b:	loope  0x411fa2
  411f5d:	(bad)  
  411f5e:	int3   
  411f5f:	popf   
  411f60:	loopne 0x411f42
  411f62:	pop    edx
  411f63:	mov    esi,0xa03247c5
  411f68:	(bad)  
  411f6a:	jecxz  0x411efd
  411f6c:	nop
  411f6d:	gs pop edi
  411f6f:	imul   ebx,DWORD PTR [edi-0x4f67bb30],0x24
  411f76:	aas    
  411f77:	xchg   ebx,eax
  411f78:	jno    0x411f04
  411f7a:	call   0x23bc:0x9c3ae7df
  411f81:	repz test al,0xf1
  411f84:	jl     0x411fe7
  411f86:	scas   al,BYTE PTR es:[edi]
  411f87:	(bad)  
  411f88:	repz repz or al,0x60
  411f8c:	scas   eax,DWORD PTR es:[edi]
  411f8d:	not    edi
  411f8f:	dec    ebp
  411f90:	in     eax,0xd7
  411f92:	(bad)  
  411f93:	out    dx,al
  411f94:	mov    bl,0x9b
  411f96:	iret   
  411f97:	dec    ebx
  411f98:	mov    dh,0x30
  411f9a:	nop
  411f9b:	jl     0x411f8e
  411f9d:	mov    ecx,0xd52b34b8
  411fa2:	pushf  
  411fa3:	iret   
  411fa4:	push   0x799269fc
  411fa9:	es adc ah,dh
  411fac:	adc    DWORD PTR [ebx],edi
  411fae:	rcr    BYTE PTR ds:0x904995c3,1
  411fb4:	xchg   esi,eax
  411fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb6:	imul   BYTE PTR [eax]
  411fb8:	inc    edx
  411fb9:	bound  edx,QWORD PTR [esi+0x63]
  411fbc:	push   ecx
  411fbd:	mov    cl,0x36
  411fbf:	adc    al,BYTE PTR [edx+0x2]
  411fc2:	(bad)  
  411fc3:	(bad)  
  411fc5:	dec    esi
  411fc6:	lods   al,BYTE PTR ds:[esi]
  411fc7:	or     ebx,0x1797caf3
  411fcd:	scas   eax,DWORD PTR es:[edi]
  411fce:	jle    0x411f7f
  411fd0:	jl     0x411f65
  411fd2:	push   0xffffffc2
  411fd4:	adc    BYTE PTR [esi],bh
  411fd6:	sub    BYTE PTR [eax],bh
  411fd8:	adc    eax,0x456b7604
  411fdd:	xor    al,0xe9
  411fdf:	mov    ah,0xc2
  411fe1:	sti    
  411fe2:	loop   0x41200f
  411fe4:	ins    BYTE PTR es:[edi],dx
  411fe5:	dec    edx
  411fe6:	or     al,ah
  411fe8:	(bad)  
  411fe9:	aam    0x3c
  411feb:	sahf   
  411fec:	lods   al,BYTE PTR ss:[esi]
  411fee:	test   BYTE PTR [ebp-0x712a5edf],bl
  411ff4:	xor    eax,0xa1adfd60
  411ff9:	test   BYTE PTR [ecx+0x40930c89],dh
  411fff:	xor    eax,0x4b722b47
  412004:	std    
  412005:	fisub  DWORD PTR [ebx+ebx*2]
  412008:	sub    dl,dh
  41200a:	test   DWORD PTR [edi-0x37],esi
  41200d:	jmp    0xab7e:0x59088239
  412014:	fs jl  0x411fdc
  412017:	pusha  
  412018:	adc    DWORD PTR [ebx],0xd7a4e399
  41201e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201f:	xor    DWORD PTR [edx+edi*8+0x3a],esi
  412023:	adc    al,0x4e
  412025:	dec    ecx
  412026:	ret    0x56de
  412029:	test   BYTE PTR [edi-0x5],dl
  41202c:	or     BYTE PTR [esi],dl
  41202e:	pusha  
  41202f:	cmp    bh,dl
  412031:	xor    BYTE PTR [eax+0x3e063a2a],cl
  412037:	cmp    DWORD PTR [ecx],edi
  412039:	cmp    BYTE PTR [edx],cl
  41203b:	inc    ebp
  41203c:	dec    ebx
  41203d:	stos   BYTE PTR es:[edi],al
  41203e:	and    DWORD PTR ss:[edx-0x326a2002],ebp
  412045:	sar    BYTE PTR [ebx+ecx*1],cl
  412048:	dec    eax
  412049:	test   DWORD PTR [ecx],ecx
  41204b:	sbb    DWORD PTR [esi+0x21],esp
  41204e:	in     al,0x1a
  412050:	and    DWORD PTR [esi-0x59043d55],ebp
  412056:	adc    ah,dh
  412058:	sbb    eax,0xbbfb06a7
  41205d:	pop    ecx
  41205e:	fsubr  QWORD PTR [edi-0x6f]
  412061:	or     al,0xcf
  412063:	pusha  
  412064:	mov    bh,0xe2
  412066:	jge    0x4120ae
  412068:	ret    
  412069:	enter  0x88d6,0x19
  41206d:	aam    0xe2
  41206f:	aam    0xc2
  412071:	pop    eax
  412072:	mov    al,ds:0x98bc4cfc
  412077:	jno    0x41207c
  412079:	sub    dl,BYTE PTR [ebx+0x69eb0933]
  41207f:	out    0xbf,al
  412081:	leave  
  412082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412083:	fst    DWORD PTR [eax+eax*2]
  412086:	xchg   ebp,eax
  412087:	inc    BYTE PTR [ebx+esi*8+0x401e6956]
  41208e:	jge    0x4120bd
  412090:	scas   eax,DWORD PTR es:[edi]
  412091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412092:	inc    esp
  412093:	mov    ds:0x7577cb03,al
  412098:	mov    ebx,0x647dc43a
  41209d:	(bad)  [eax]
  41209f:	out    dx,eax
  4120a0:	fs in  eax,0xac
  4120a3:	stc    
  4120a4:	jb     0x4120ce
  4120a6:	mov    DWORD PTR [ebx],edi
  4120a8:	iret   
  4120a9:	mov    edi,DWORD PTR [eax-0x77145be8]
  4120af:	cmp    bh,BYTE PTR [ecx-0x6b428489]
  4120b5:	lds    ebx,FWORD PTR [ebp-0x2c]
  4120b8:	and    DWORD PTR [esi],esp
  4120ba:	js     0x41211f
  4120bc:	xchg   edx,eax
  4120bd:	push   ss
  4120be:	ror    BYTE PTR ds:0x233c66fe,1
  4120c4:	call   0x7612:0x5b0cb2e1
  4120cb:	sub    eax,0x2eeafe2f
  4120d0:	in     eax,0x97
  4120d2:	call   0xe8809a34
  4120d7:	dec    edi
  4120d8:	fbld   TBYTE PTR [edx+edi*1]
  4120db:	push   es
  4120dc:	jns    0x412133
  4120de:	mov    dh,ch
  4120e0:	cmp    DWORD PTR [edi-0x19],edx
  4120e3:	pop    ebp
  4120e4:	outs   dx,DWORD PTR ds:[esi]
  4120e5:	retf   0x9e93
  4120e8:	mov    ebp,0x7e2f506a
  4120ed:	cdq    
  4120ee:	and    eax,0xb2cb7fb8
  4120f3:	inc    esp
  4120f4:	xchg   esp,eax
  4120f5:	pushf  
  4120f6:	push   cs
  4120f7:	popa   
  4120f8:	or     dl,al
  4120fa:	xor    cl,BYTE PTR [edx-0x770f3db3]
  412100:	dec    esi
  412101:	xchg   esi,eax
  412102:	div    BYTE PTR [edi]
  412104:	lds    ecx,FWORD PTR [ecx]
  412106:	add    DWORD PTR [esp+ebx*4+0x36],ebp
  41210a:	pop    ecx
  41210b:	mov    ch,BYTE PTR [eax-0x16647212]
  412111:	repz jp 0x4120b9
  412114:	xchg   esi,eax
  412115:	ret    0xbb74
  412118:	pop    eax
  412119:	stos   BYTE PTR es:[edi],al
  41211a:	push   esp
  41211b:	stc    
  41211c:	xchg   BYTE PTR [esi+0x5c],dl
  41211f:	arpl   WORD PTR [edx+ebx*2-0x3d],si
  412123:	dec    ecx
  412124:	icebp  
  412125:	and    BYTE PTR [eax+0x68],bh
  412128:	gs cs js 0x41217f
  41212c:	add    DWORD PTR [esi],edx
  41212e:	sbb    edi,ecx
  412130:	pop    ss
  412131:	(bad)  
  412132:	and    edi,DWORD PTR [ebx+0x560e7ff4]
  412138:	cld    
  412139:	mov    ds:0x4d629f0b,eax
  41213e:	data16 fmul DWORD PTR [eax+0x4da4fbcf]
  412145:	push   ecx
  412146:	pop    ecx
  412147:	cmp    ecx,ebp
  412149:	sbb    edx,DWORD PTR [ecx+0x7a12d645]
  41214f:	ffreep st(4)
  412151:	sub    al,0xc2
  412153:	sub    eax,DWORD PTR [ebp+0x7]
  412156:	cs sti 
  412158:	cmp    ecx,0x1e
  41215b:	addr16 dec esi
  41215d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215e:	lock and bl,dl
  412161:	jno    0x412134
  412163:	(bad)  
  412164:	sbb    eax,DWORD PTR [ebx-0x628cb93c]
  41216a:	cmp    ch,BYTE PTR [ebx-0x54]
  41216d:	adc    esp,DWORD PTR [esp+ebp*1]
  412170:	shl    BYTE PTR [ebp-0x1e],cl
  412173:	add    DWORD PTR [esi+0x21],0xffffffa8
  412177:	mov    dh,bh
  412179:	and    al,0xa2
  41217b:	mov    bh,0x3
  41217d:	loope  0x4121a4
  41217f:	jl     0x412125
  412181:	ins    BYTE PTR es:[edi],dx
  412182:	div    ebp
  412184:	pop    esp
  412185:	nop
  412186:	ja     0x412197
  412188:	mov    esp,0xb43f45e6
  41218d:	lods   eax,DWORD PTR ds:[esi]
  41218e:	imul   edx,DWORD PTR ds:0xca861bc2,0xdb6d23f5
  412198:	and    DWORD PTR [ecx-0x40],ebp
  41219b:	out    dx,al
  41219c:	or     BYTE PTR [ebp+0x5bfacb97],ah
  4121a2:	push   0x74
  4121a4:	icebp  
  4121a5:	mov    dl,0x4
  4121a7:	inc    esi
  4121a8:	fwait
  4121a9:	(bad)  
  4121aa:	into   
  4121ab:	cmp    DWORD PTR [ecx+0x2b],0xffffff94
  4121af:	jmp    0x6ac7:0x7d2df168
  4121b6:	call   0xd52b5592
  4121bb:	sbb    eax,0xebe36be
  4121c0:	xchg   esp,eax
  4121c1:	xor    al,BYTE PTR [edx]
  4121c3:	or     ah,ah
  4121c5:	fs (bad) 
  4121c8:	dec    edx
  4121c9:	jnp    0x412236
  4121cb:	sbb    ebp,ecx
  4121cd:	pop    edx
  4121ce:	pop    ds
  4121cf:	pop    ecx
  4121d0:	dec    edi
  4121d1:	dec    edi
  4121d2:	and    dh,dl
  4121d4:	lock sub al,0xe
  4121d7:	adc    BYTE PTR [esp+eax*8],dl
  4121da:	sub    eax,ebx
  4121dc:	pop    ebp
  4121dd:	or     BYTE PTR [edi-0x67],dh
  4121e0:	stos   BYTE PTR es:[edi],al
  4121e1:	test   DWORD PTR [edx],edx
  4121e3:	pop    ebp
  4121e4:	mov    esi,0x71dfeb26
  4121e9:	sbb    DWORD PTR [ecx+0x252f037a],ebx
  4121ef:	xchg   esi,eax
  4121f0:	test   DWORD PTR [esi-0x181da3c9],ecx
  4121f6:	add    eax,0x309839c1
  4121fb:	setae  BYTE PTR [ebx]
  4121fe:	lods   al,BYTE PTR ds:[esi]
  4121ff:	aaa    
  412200:	push   0xdb2b2806
  412205:	xor    edx,edi
  412207:	xor    DWORD PTR ds:0xc8d42958,esi
  41220d:	adc    bl,bh
  41220f:	in     al,dx
  412210:	scas   al,BYTE PTR es:[edi]
  412211:	or     cl,BYTE PTR [ecx+0x43]
  412214:	pop    edx
  412215:	shl    bh,0x28
  412218:	dec    ebp
  412219:	xchg   BYTE PTR [ecx-0x6c],dh
  41221c:	(bad)  
  41221d:	mov    ds:0x1ec77bba,al
  412222:	mov    ?,WORD PTR [ecx+0x47]
  412225:	cs inc esp
  412227:	ret    
  412228:	push   0x79cf8fc0
  41222d:	lock cmp al,0xbd
  412230:	push   esi
  412231:	sub    BYTE PTR [esi+0x70],dl
  412234:	xor    DWORD PTR [esi+0x1009b38b],ebp
  41223a:	dec    edi
  41223b:	push   esi
  41223c:	push   esp
  41223d:	xchg   esp,eax
  41223e:	aas    
  41223f:	sbb    ebp,DWORD PTR [ecx+0x1f]
  412242:	xchg   esi,eax
  412243:	adc    DWORD PTR [ebx],edx
  412245:	pop    ss
  412246:	das    
  412247:	fcomp  QWORD PTR [ecx+0x26340402]
  41224d:	into   
  41224e:	add    BYTE PTR [ebp-0x15],bh
  412251:	repz repz adc DWORD PTR [ecx-0x4b4c0a4e],edx
  412259:	mov    bl,0xed
  41225b:	mov    BYTE PTR [eax-0x3c034bfc],ch
  412261:	lods   eax,DWORD PTR ds:[esi]
  412262:	and    eax,0x321694de
  412267:	or     bh,BYTE PTR [ecx]
  412269:	out    0xb3,eax
  41226b:	test   DWORD PTR [ecx+0x506a14eb],edx
  412271:	ror    BYTE PTR [ebp-0x58ff224b],0xed
  412278:	inc    eax
  412279:	sub    BYTE PTR [edi-0x60],ch
  41227c:	nop
  41227d:	mov    edi,edx
  41227f:	cs test eax,0xba2e964d
  412285:	adc    BYTE PTR [ebp-0x6b],dl
  412288:	fimul  DWORD PTR [ecx]
  41228a:	xchg   edi,eax
  41228b:	mov    cs:0x1563da32,al
  412291:	adc    ebx,ebx
  412293:	and    ah,bh
  412295:	bnd jle 0x4122d3
  412298:	lods   eax,DWORD PTR ds:[esi]
  412299:	loopne 0x412222
  41229b:	dec    di
  41229d:	in     eax,0x24
  41229f:	shl    DWORD PTR [esi+eax*4+0x311ded1d],1
  4122a6:	pop    ebx
  4122a7:	jns    0x4122d7
  4122a9:	sub    eax,0x2d559afe
  4122ae:	mov    esi,0xd5071af6
  4122b3:	dec    esp
  4122b4:	pop    edx
  4122b5:	loop   0x4122fd
  4122b7:	xor    al,0x53
  4122b9:	inc    esi
  4122ba:	jmp    0x7094785a
  4122bf:	cmp    eax,0xf5d55dc5
  4122c4:	adc    dh,BYTE PTR ds:0x7d98f14e
  4122ca:	jle    0x41225c
  4122cc:	bound  ebp,QWORD PTR [esi+0x10]
  4122cf:	fstp   TBYTE PTR ds:0xa9837b1c
  4122d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d6:	test   DWORD PTR [ebx-0x3f54a25a],esi
  4122dc:	xor    al,0xa3
  4122de:	popa   
  4122df:	mov    ch,BYTE PTR [esi-0xb]
  4122e2:	and    al,0xda
  4122e4:	shl    BYTE PTR [ebp-0x14],1
  4122e7:	frstor [ebp+0x264f896c]
  4122ed:	loope  0x412328
  4122ef:	ror    ebp,cl
  4122f1:	adc    al,0xec
  4122f3:	(bad)  
  4122f4:	out    0xf9,al
  4122f6:	fsubp  st(2),st
  4122f8:	xor    ch,cl
  4122fa:	les    ecx,FWORD PTR [edi]
  4122fc:	jno    0x4122db
  4122fe:	cli    
  4122ff:	push   es
  412300:	sbb    eax,esi
  412302:	loopne 0x4122a3
  412304:	cmp    DWORD PTR [ebx*8-0x41cc6191],esi
  41230b:	aaa    
  41230c:	sub    DWORD PTR [ecx],esp
  41230e:	je     0x4122be
  412310:	mov    edx,0xbb3a6da1
  412315:	test   eax,0x421a2cf7
  41231a:	cwde   
  41231b:	jbe    0x412357
  41231d:	sbb    al,0x5c
  41231f:	pop    eax
  412320:	aas    
  412321:	(bad)  
  412322:	xor    BYTE PTR [edx+esi*2+0x4e],cl
  412326:	jg     0x4122e5
  412328:	jg     0x412310
  41232a:	mov    DWORD PTR [edi+0x4467074e],edi
  412330:	add    bl,al
  412332:	leave  
  412333:	inc    eax
  412334:	lods   al,BYTE PTR ds:[esi]
  412335:	xchg   ebx,eax
  412336:	adc    eax,0x52538db6
  41233b:	in     eax,0x12
  41233d:	sbb    DWORD PTR [ecx+ebp*8+0x77df8662],esp
  412344:	and    eax,0x44c2f78
  412349:	push   ecx
  41234a:	in     eax,0xc
  41234c:	pop    ebx
  41234d:	popf   
  41234e:	sbb    eax,0xb19777f3
  412353:	loop   0x412311
  412355:	ret    0x348e
  412358:	mov    edi,0x8108558b
  41235d:	and    eax,0x42b21a
  412362:	add    BYTE PTR [eax],al
  412364:	add    BYTE PTR [eax],al
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	not    BYTE PTR [ebp-0x5c]
  412568:	lahf   
  412569:	scas   al,BYTE PTR es:[edi]
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	or     DWORD PTR [esp+ebx*1+0x6462a14a],0xffffffbb
  412579:	pop    ebx
  41257a:	push   edi
  41257b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41257c:	jl     0x41254b
  41257e:	fwait
  41257f:	shr    BYTE PTR [eax-0x63],cl
  412582:	mov    ds:0x2895abd1,al
  412587:	sub    eax,0xcf1424e3
  41258c:	and    al,0xab
  41258e:	jo     0x6286d99c
  412594:	xchg   edx,eax
  412595:	mov    WORD PTR [edx],fs
  412597:	rcl    BYTE PTR [edx+0xbb70d04],cl
  41259d:	test   al,0xcf
  41259f:	out    dx,eax
  4125a0:	inc    ebp
  4125a1:	test   dl,0xaf
  4125a4:	push   edx
  4125a5:	aaa    
  4125a6:	loopne 0x41255a
  4125a8:	mov    ebp,0x99a4ff6c
  4125ad:	adc    edi,DWORD PTR [eax+0x13]
  4125b0:	hlt    
  4125b1:	cli    
  4125b2:	push   0xffffffae
  4125b4:	mov    ecx,eax
  4125b6:	xchg   ebx,eax
  4125b7:	mov    edx,0x4e15dac8
  4125bc:	push   cs
  4125bd:	daa    
  4125be:	loope  0x412607
  4125c0:	mov    dl,0xc6
  4125c2:	adc    eax,0xc4b11629
  4125c7:	jbe    0x4125d7
  4125c9:	push   cs
  4125ca:	jl     0x412579
  4125cc:	leave  
  4125cd:	add    al,0x43
  4125cf:	sub    BYTE PTR [eax-0x59593a87],dh
  4125d5:	xchg   edx,eax
  4125d6:	inc    ebx
  4125d7:	mov    ah,0x52
  4125d9:	aas    
  4125da:	outs   dx,BYTE PTR ds:[esi]
  4125db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125dc:	mov    al,0x60
  4125de:	push   ebp
  4125df:	sub    esi,DWORD PTR [esi+0x5]
  4125e2:	inc    edi
  4125e3:	leave  
  4125e4:	sub    bl,BYTE PTR [esi-0x71]
  4125e7:	fistp  QWORD PTR [edi-0x3ce8d60c]
  4125ed:	mov    eax,0xe11dcea0
  4125f2:	bnd ret 
  4125f4:	je     0x4125a9
  4125f6:	jb     0x412621
  4125f8:	push   DWORD PTR [ecx+0x6e]
  4125fb:	lds    ebp,FWORD PTR [edx+0x7650c1ce]
  412601:	cld    
  412602:	xchg   BYTE PTR [ecx-0x64d648fd],dh
  412608:	push   ds
  412609:	cmp    ah,BYTE PTR [ecx+0x0]
  41260c:	xchg   edi,eax
  41260d:	popa   
  41260e:	mov    edi,0xf2b54d30
  412613:	adc    al,0xa9
  412615:	in     eax,0xe8
  412617:	outs   dx,DWORD PTR ds:[esi]
  412618:	inc    esp
  412619:	loopne 0x412612
  41261b:	xor    al,0xb9
  41261d:	or     ch,BYTE PTR [edi-0x3765f335]
  412623:	ret    0x8c65
  412626:	inc    ecx
  412627:	add    BYTE PTR [ebx],ch
  412629:	aad    0x86
  41262b:	pop    edi
  41262c:	inc    ecx
  41262d:	sub    al,0x7
  41262f:	jmp    0x7075:0x4fcfd0af
  412636:	adc    eax,0x349d034f
  41263b:	les    edi,FWORD PTR [eax+0x975fd62]
  412641:	jo     0x412695
  412643:	inc    edx
  412644:	loope  0x412627
  412646:	les    edx,FWORD PTR [edx]
  412648:	gs icebp 
  41264a:	lods   al,BYTE PTR ds:[esi]
  41264b:	xchg   esi,eax
  41264c:	pop    esp
  41264d:	jp     0x412668
  41264f:	cs addr16 ror esi,cl
  412653:	push   esi
  412654:	cli    
  412655:	lock nop
  412657:	dec    DWORD PTR [edx-0x24]
  41265a:	push   eax
  41265b:	sub    BYTE PTR [ebx-0x1e],dl
  41265e:	ins    DWORD PTR es:[edi],dx
  41265f:	lock (bad) 
  412662:	stos   DWORD PTR es:[edi],eax
  412663:	jg     0x4126bc
  412665:	(bad)  
  412666:	out    0x1d,al
  412668:	jl     0x412689
  41266a:	push   ds
  41266b:	retf   
  41266c:	jmp    0x43fd03a7
  412671:	mov    ecx,0x9121576c
  412676:	hlt    
  412677:	xchg   esp,eax
  412678:	cmp    eax,0x355ebd41
  41267d:	and    bh,0x23
  412680:	cs sub eax,0xa9e0cac8
  412686:	mov    al,0x8c
  412688:	in     eax,dx
  412689:	hlt    
  41268a:	add    BYTE PTR [ebx],dl
  41268c:	fsub   QWORD PTR [eax-0x78]
  41268f:	loope  0x412635
  412691:	cmp    bh,BYTE PTR [esi+0x48038c29]
  412697:	aas    
  412698:	jnp    0x4126cb
  41269a:	cmp    DWORD PTR [edi+0xe8262e4],esp
  4126a0:	inc    eax
  4126a1:	xor    ah,dl
  4126a3:	pop    edx
  4126a4:	xchg   edi,eax
  4126a5:	inc    edx
  4126a6:	dec    ebx
  4126a7:	lea    ebp,[esi-0x196e2cb6]
  4126ad:	mov    ah,0x35
  4126af:	(bad)  [edi-0x35]
  4126b2:	add    BYTE PTR [edi+0x29],0xdf
  4126b6:	add    eax,0x30145a6e
  4126bb:	xor    ebx,ebp
  4126bd:	outs   dx,DWORD PTR ds:[esi]
  4126be:	pop    edx
  4126bf:	inc    ebp
  4126c0:	data16 rol BYTE PTR [ecx],1
  4126c3:	imul   ebx,DWORD PTR [edi],0x96132116
  4126c9:	aad    0x90
  4126cb:	jp     0x412679
  4126cd:	test   DWORD PTR [edx],esp
  4126cf:	jns    0x41266e
  4126d1:	cmp    eax,0xab691d6e
  4126d6:	xchg   edx,eax
  4126d7:	out    dx,eax
  4126d8:	pop    ebp
  4126d9:	add    DWORD PTR [edx],ecx
  4126db:	cmp    eax,0x98ac4dea
  4126e0:	adc    dh,BYTE PTR [ecx-0x26]
  4126e3:	pop    ebp
  4126e4:	adc    edx,ebp
  4126e6:	in     al,0xb
  4126e8:	or     DWORD PTR [edx+eiz*8-0x49],0xcba2c55e
  4126f0:	into   
  4126f1:	cmp    dl,BYTE PTR [esi]
  4126f3:	std    
  4126f4:	arpl   WORD PTR [ecx],cx
  4126f6:	jmp    0x412692
  4126f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f9:	jl     0x41269e
  4126fb:	inc    edx
  4126fc:	das    
  4126fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126fe:	mov    ebp,0x6589cd89
  412703:	mov    cl,0x77
  412705:	add    ch,0xdb
  412708:	jmp    0xafa0c35e
  41270d:	ror    BYTE PTR [ebp-0x599fc708],1
  412713:	mov    al,0x67
  412715:	mov    al,ds:0x4b545161
  41271a:	xchg   ebx,eax
  41271b:	inc    DWORD PTR [ecx+0x3f813052]
  412721:	mov    eax,ds:0x7599475b
  412726:	lods   al,BYTE PTR ds:[esi]
  412727:	push   ds
  412728:	ret    0xc45b
  41272b:	(bad)  
  41272c:	jmp    0x2e65:0xd2d453f9
  412733:	and    DWORD PTR [esi-0x48],ebp
  412736:	cmp    DWORD PTR [edx-0x51023f3],0x12
  41273d:	sbb    al,0x62
  41273f:	mov    ds:0x5f1628d1,al
  412744:	inc    eax
  412745:	out    dx,al
  412746:	fsubr  st(1),st
  412748:	ror    DWORD PTR [ecx-0x722f2e8],cl
  41274e:	ss push 0x5a
  412751:	add    al,0xf8
  412753:	pop    eax
  412754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412755:	sub    BYTE PTR [eax+0x1927b18f],0x52
  41275c:	loope  0x41278c
  41275e:	cmc    
  41275f:	pop    edi
  412760:	dec    eax
  412761:	sbb    eax,0x95b69b84
  412766:	cmp    ah,bl
  412768:	mov    ebp,ebp
  41276a:	mov    cl,0xb6
  41276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276d:	bsr    edx,DWORD PTR [ecx+ebx*8]
  412771:	cmp    bl,BYTE PTR [ebx+eax*1+0x59]
  412775:	mov    ds:0x3b61e4a7,eax
  41277a:	shr    ecx,cl
  41277c:	xor    BYTE PTR [ebx+0x4e],cl
  41277f:	(bad)
  412783:	loope  0x41274d
  412785:	div    BYTE PTR [ebx-0x2]
  412788:	and    ebp,eax
  41278a:	cmp    al,0xc
  41278c:	or     ebp,DWORD PTR ds:0x6a9b35d5
  412793:	mov    al,0xbf
  412795:	dec    edi
  412796:	jp     0x4127ce
  412798:	(bad)
  41279b:	enter  0xebba,0x5e
  41279f:	mov    bh,0x48
  4127a1:	mov    DWORD PTR [ebp+0x34faa0e8],esi
  4127a7:	stos   BYTE PTR es:[edi],al
  4127a8:	xor    BYTE PTR ds:0x7aaaedcc,dh
  4127ae:	dec    esp
  4127af:	and    DWORD PTR [edx-0x6b],ebp
  4127b2:	loop   0x4127e2
  4127b4:	das    
  4127b5:	inc    ecx
  4127b6:	inc    ecx
  4127b7:	call   0xe19fff4f
  4127bc:	xor    eax,0x1f6a1788
  4127c1:	lea    edx,[esi-0x2ce230f0]
  4127c7:	(bad)  
  4127c8:	pop    esi
  4127c9:	ins    DWORD PTR es:[edi],dx
  4127ca:	and    dh,BYTE PTR [ebp-0x5c]
  4127cd:	xchg   ebx,eax
  4127ce:	and    bl,BYTE PTR [edx]
  4127d0:	addr16 jnp 0x4127c2
  4127d3:	push   ds
  4127d4:	int3   
  4127d5:	add    DWORD PTR [ebp+0x3a],eax
  4127d8:	xchg   ecx,eax
  4127d9:	or     ah,BYTE PTR [esp+ecx*8]
  4127dc:	cs jo  0x412802
  4127df:	stc    
  4127e0:	fucom  st(2)
  4127e2:	std    
  4127e3:	jbe    0x41279a
  4127e5:	fisttp QWORD PTR [edx]
  4127e7:	xchg   edi,eax
  4127e8:	retf   
  4127e9:	cmp    BYTE PTR [esi-0x57],ah
  4127ec:	leave  
  4127ed:	cmc    
  4127ee:	call   0x2d4:0x7d7f9e9d
  4127f5:	mov    DWORD PTR [edx],eax
  4127f7:	js     0x41280f
  4127f9:	xor    dh,BYTE PTR [esi]
  4127fb:	pop    eax
  4127fc:	fimul  DWORD PTR [edx+0x270aad3d]
  412802:	jns    0x412849
  412804:	jge    0x412826
  412806:	shr    BYTE PTR [edi],0x5
  412809:	test   eax,0x40920757
  41280e:	leave  
  41280f:	xchg   BYTE PTR ds:0x2c4365f2,cl
  412815:	outs   dx,DWORD PTR ds:[esi]
  412816:	add    ebp,DWORD PTR [ebx+0x22]
  412819:	cdq    
  41281a:	pop    ss
  41281b:	mov    al,ds:0x7f2ffa14
  412820:	ret    0x9205
  412823:	cmp    al,BYTE PTR ds:0x66b3ac22
  412829:	mov    WORD PTR [esp+0xa],ds
  41282d:	jp     0x412834
  41282f:	out    0xe5,al
  412831:	fild   QWORD PTR fs:[ebp+0x2f698cd2]
  412838:	retf   0x63ad
  41283b:	sbb    al,bl
  41283d:	pop    ecx
  41283e:	pop    ebp
  41283f:	xor    eax,0x741d7f20
  412844:	sbb    edi,DWORD PTR [edx+0x29b70033]
  41284a:	sub    edi,0xfffffff8
  41284d:	or     bl,BYTE PTR [ecx-0x5ff9170e]
  412853:	push   ebx
  412854:	xchg   BYTE PTR [esi+eiz*8+0x7c],cl
  412858:	pop    esp
  412859:	and    eax,0xe6f1ff14
  41285e:	add    DWORD PTR [edi-0x235128f6],esp
  412864:	jmp    DWORD PTR [edx]
  412866:	iret   
  412867:	or     DWORD PTR [edx+0x6a17a67],esi
  41286d:	mov    al,ds:0xca48160e
  412872:	inc    edi
  412873:	mov    eax,0x81c071f9
  412878:	sub    edx,esp
  41287a:	mov    ds:0x8b817a79,eax
  41287f:	fdiv   QWORD PTR [esi-0x3c]
  412882:	aaa    
  412883:	lods   al,BYTE PTR ds:[esi]
  412884:	sbb    ch,ah
  412886:	mov    DWORD PTR [edx-0x4e],ebx
  412889:	ja     0x4128e1
  41288b:	stc    
  41288c:	ss in  al,dx
  41288e:	push   edx
  41288f:	mov    eax,ds:0x7371db6a
  412894:	mov    edi,0xe6f56fc1
  412899:	mov    eax,0xb6f1852f
  41289e:	mov    bl,0x2e
  4128a0:	mov    bh,bh
  4128a2:	dec    eax
  4128a3:	pop    ss
  4128a4:	push   0x4398fb9a
  4128a9:	ja     0x4128e8
  4128ab:	and    edi,edx
  4128ad:	pop    edx
  4128ae:	sub    al,0x79
  4128b0:	sbb    edx,DWORD PTR [ebx]
  4128b2:	and    edx,DWORD PTR [ebx]
  4128b4:	mov    dl,0x90
  4128b6:	push   0xffffffe6
  4128b8:	dec    esp
  4128b9:	xchg   DWORD PTR [edx],ecx
  4128bb:	test   al,0xfc
  4128bd:	add    BYTE PTR [eax+0x36],bh
  4128c0:	ins    DWORD PTR es:[edi],dx
  4128c1:	mov    dl,0x6f
  4128c3:	mov    bl,0xa1
  4128c5:	in     al,dx
  4128c6:	ret    0xc9b4
  4128c9:	sbb    al,0x85
  4128cb:	add    BYTE PTR [esi+0x76],0x33
  4128cf:	rcl    BYTE PTR [esi],1
  4128d1:	(bad)  
  4128d3:	out    dx,eax
  4128d4:	adc    edi,edi
  4128d6:	mov    dh,0x3e
  4128d8:	and    eax,0x15be9099
  4128dd:	mov    al,ds:0x15129624
  4128e2:	pop    esp
  4128e3:	cmc    
  4128e4:	ss in  al,dx
  4128e6:	xchg   ecx,eax
  4128e7:	xchg   esi,eax
  4128e8:	aad    0x15
  4128ea:	mov    esi,0x65fde441
  4128ef:	outs   dx,BYTE PTR ds:[esi]
  4128f0:	mov    esp,0xb1356d9d
  4128f5:	leave  
  4128f6:	test   BYTE PTR [ecx-0x5e0a8ed],dl
  4128fc:	out    0x40,al
  4128fe:	mov    ebx,0x71524603
  412903:	fnstsw WORD PTR [ecx-0x11]
  412906:	int3   
  412907:	shl    BYTE PTR [ecx],cl
  412909:	and    DWORD PTR ds:0xde0b04a2,esp
  41290f:	pop    ss
  412910:	inc    ebx
  412911:	clc    
  412912:	cmp    ah,BYTE PTR [edx+0x8]
  412915:	out    dx,al
  412916:	fs pop ecx
  412918:	dec    ebx
  412919:	xlat   BYTE PTR ds:[ebx]
  41291a:	fidivr DWORD PTR [ebx+0x72dced63]
  412920:	leave  
  412921:	ffree  st(2)
  412923:	inc    edx
  412924:	idiv   edi
  412926:	mov    eax,0x6333d178
  41292b:	sti    
  41292c:	push   ds
  41292d:	pop    edi
  41292e:	sub    DWORD PTR [ecx+0x63],esi
  412931:	enter  0x1f89,0xfb
  412935:	xchg   esp,eax
  412936:	hlt    
  412937:	into   
  412938:	push   edx
  412939:	inc    ebp
  41293a:	adc    DWORD PTR [esp+eax*4+0x0],ebp
  41293e:	cmp    BYTE PTR [ebx],cl
  412940:	xchg   esp,eax
  412941:	cmp    BYTE PTR [ebx+0x45],cl
  412944:	mov    eax,ds:0x30d5b649
  412949:	xor    dl,BYTE PTR cs:[ecx+edi*4]
  41294d:	gs sbb ch,bh
  412950:	adc    BYTE PTR [edx],0xb9
  412953:	out    0x83,eax
  412955:	push   es
  412956:	das    
  412957:	jp     0x41297a
  412959:	fwait
  41295a:	rol    DWORD PTR [ecx-0x6a],1
  41295d:	(bad)  
  41295e:	fs mov ch,0x4a
  412961:	add    eax,0x22bb75a5
  412966:	ret    0x2132
  412969:	cmp    bh,cl
  41296b:	rcr    BYTE PTR [ebp-0x4e],cl
  41296e:	pusha  
  41296f:	addr16 pop edi
  412971:	mov    edi,DWORD PTR [ebx+0x5a]
  412974:	das    
  412975:	dec    edi
  412976:	test   DWORD PTR [esi+0x1f],ebx
  412979:	jecxz  0x412914
  41297b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41297c:	mul    BYTE PTR [esp+ecx*2]
  41297f:	addr16 call 0xd71eeca
  412985:	fisubr WORD PTR [ecx+0xfff67a]
  41298b:	std    
  41298c:	ret    
  41298d:	loopne 0x4129fd
  41298f:	xchg   esi,eax
  412990:	or     BYTE PTR [ebx+0x3],bh
  412993:	mov    bl,0x9f
  412995:	push   ebx
  412996:	mov    bl,0x34
  412998:	and    ecx,DWORD PTR [edi]
  41299a:	loopne 0x412923
  41299c:	mov    esp,0x9c71e09e
  4129a1:	push   0x26
  4129a3:	mov    bl,cl
  4129a5:	pop    ecx
  4129a6:	loopne 0x412947
  4129a8:	sbb    BYTE PTR ss:[ebx],cl
  4129ab:	inc    edx
  4129ac:	enter  0x601,0x65
  4129b0:	mov    ah,0xc7
  4129b2:	mov    cl,0x8d
  4129b4:	push   ds
  4129b5:	push   edx
  4129b6:	in     al,0xf6
  4129b8:	call   0x1d0a:0xd676e07d
  4129bf:	xchg   edx,eax
  4129c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c1:	jle    0x412a28
  4129c3:	fdivr  st(2),st
  4129c5:	pop    ebp
  4129c6:	mov    esi,0x73144bc6
  4129cb:	and    al,0x3a
  4129cd:	fwait
  4129ce:	dec    edi
  4129cf:	imul   esi,DWORD PTR [esi-0x2d83fd25],0xffffffe8
  4129d6:	lea    esp,[eax-0x17]
  4129d9:	mov    BYTE PTR [ebp-0x78],cl
  4129dc:	jg     0x412a11
  4129de:	adc    bh,ah
  4129e0:	test   DWORD PTR [ebx-0x7aed189d],edi
  4129e6:	push   es
  4129e7:	jmp    0x412990
  4129e9:	stos   DWORD PTR es:[edi],eax
  4129ea:	jae    0x412974
  4129ec:	sbb    ch,BYTE PTR [ebp-0x24]
  4129ef:	sbb    BYTE PTR [esi+edi*1-0x2b],0xf5
  4129f4:	fcomp  QWORD PTR [ecx+eax*2]
  4129f7:	dec    esp
  4129f8:	xor    ebx,edi
  4129fa:	push   es
  4129fb:	xchg   ebp,eax
  4129fc:	xor    DWORD PTR ds:0x6862cb59,0x70
  412a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a04:	sar    ah,cl
  412a06:	dec    esi
  412a07:	(bad)  
  412a08:	test   al,0x28
  412a0a:	and    al,0xb9
  412a0c:	es xor eax,0x15c611e4
  412a12:	je     0x412a8d
  412a14:	leave  
  412a15:	aad    0x2a
  412a17:	in     al,0xd
  412a19:	jo     0x412a35
  412a1b:	mov    edx,0x5ed254f
  412a20:	dec    ebp
  412a21:	out    dx,eax
  412a22:	mov    eax,ds:0x7c11a260
  412a27:	imul   edi,DWORD PTR [edx+0x437f6a1],0xffffffc5
  412a2e:	sbb    eax,0xa3955983
  412a33:	add    esp,DWORD PTR [ebx+0x366b6db2]
  412a39:	aaa    
  412a3a:	add    bh,0x79
  412a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a3e:	int3   
  412a3f:	clc    
  412a40:	jnp    0x4129f1
  412a42:	outs   dx,DWORD PTR ds:[esi]
  412a43:	popa   
  412a44:	outs   dx,DWORD PTR ds:[esi]
  412a45:	xchg   ecx,eax
  412a46:	mov    edi,0x901f901d
  412a4b:	jae    0x4129d8
  412a4d:	cmp    DWORD PTR [ebx+0x50bae15d],0x8b3a30ef
  412a57:	or     BYTE PTR [ecx],dh
  412a59:	test   BYTE PTR [ebx+ecx*1],al
  412a5c:	inc    ecx
  412a5d:	sbb    BYTE PTR [ebp-0x4e],ah
  412a60:	mov    ecx,0xd1a25530
  412a65:	pop    es
  412a66:	call   0x399a:0xb443e0c
  412a6d:	scas   al,BYTE PTR es:[edi]
  412a6e:	xor    BYTE PTR [ecx-0x38],bh
  412a71:	nop
  412a72:	add    eax,eax
  412a74:	out    0x8a,eax
  412a76:	xor    DWORD PTR [esi],0x225ae5ff
  412a7c:	mov    ch,0xef
  412a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a7f:	(bad)  
  412a80:	call   DWORD PTR [ecx+0x0]
  412a83:	fsub   st,st(6)
  412a85:	leave  
  412a86:	in     al,dx
  412a87:	xchg   edi,eax
  412a88:	addr16 cs push ecx
  412a8b:	sub    BYTE PTR [ecx],ch
  412a8d:	jae    0x412a64
  412a8f:	popa   
  412a90:	mov    eax,0x167e6e43
  412a95:	mov    gs,WORD PTR [esi+0x2b]
  412a98:	push   ss
  412a99:	jb     0x412aac
  412a9b:	mov    ah,0x85
  412a9d:	dec    esi
  412a9e:	jmp    0x59b9a649
  412aa3:	and    DWORD PTR [edi+0x111eb474],ebx
  412aa9:	in     al,0x23
  412aab:	test   al,0xd7
  412aad:	stos   DWORD PTR es:[edi],eax
  412aae:	sub    eax,eax
  412ab0:	loop   0x412a80
  412ab2:	repz sub eax,0xed1572c8
  412ab8:	jp     0x412ad8
  412aba:	cmp    eax,DWORD PTR [edi-0x70cebfda]
  412ac0:	jo     0x412b02
  412ac2:	retf   
  412ac3:	inc    ebp
  412ac4:	push   ecx
  412ac5:	pop    ecx
  412ac6:	dec    ebx
  412ac7:	int    0x9c
  412ac9:	xor    al,0x9c
  412acb:	xchg   esp,eax
  412acc:	mov    ds:0x938560b8,al
  412ad1:	(bad)  
  412ad2:	fucomp st(2)
  412ad4:	fwait
  412ad5:	cmp    esp,edi
  412ad7:	sar    DWORD PTR [edi-0x29],0x69
  412adb:	jg     0x412ae6
  412add:	jne    0x412ad2
  412adf:	mov    eax,ds:0xb681192f
  412ae4:	and    bh,BYTE PTR [ecx+0x686a32d3]
  412aea:	stc    
  412aeb:	xchg   edi,eax
  412aec:	stos   DWORD PTR es:[edi],eax
  412aed:	push   eax
  412aee:	add    BYTE PTR [esi-0x31],bl
  412af1:	sub    al,0x75
  412af3:	add    eax,0xb3cd74ef
  412af8:	xor    esi,DWORD PTR [ebx+edi*2]
  412afb:	dec    edi
  412afc:	mov    al,ds:0xd38db9ac
  412b01:	add    BYTE PTR [edx-0x10],cl
  412b04:	pusha  
  412b05:	in     eax,dx
  412b06:	repz push ebx
  412b08:	fcomp  QWORD PTR [edx-0x7a]
  412b0b:	push   edx
  412b0c:	std    
  412b0d:	imul   ecx,esp,0x6a
  412b10:	fwait
  412b11:	mov    ebx,0x3757a96
  412b16:	xor    dl,BYTE PTR [ebx+eiz*1-0x75]
  412b1a:	jo     0x412ac3
  412b1c:	or     esp,edi
  412b1e:	mov    bl,0x35
  412b20:	adc    DWORD PTR [edx+edx*4-0x4b],edi
  412b24:	cmp    DWORD PTR [esi-0x17cdf087],esp
  412b2a:	loop   0x412b5c
  412b2c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412b2e:	in     eax,0x6e
  412b30:	mov    bh,0x96
  412b32:	mov    WORD PTR [eax-0x4422d517],?
  412b38:	fs mov esi,0x58342ffd
  412b3e:	hlt    
  412b3f:	mov    ebp,0x58557d88
  412b44:	jo     0x412b43
  412b46:	(bad)  
  412b47:	aad    0xf4
  412b49:	pop    edi
  412b4a:	fild   QWORD PTR [edi+0x51873a4e]
  412b50:	mov    eax,0x85178b9c
  412b55:	adc    eax,DWORD PTR [esi-0x590ea816]
  412b5b:	pop    edx
  412b5c:	sar    DWORD PTR [edi+0x1f0e7ba3],1
  412b62:	or     DWORD PTR [edx-0x15e85f12],0x0
  412b69:	xor    eax,0xd184c13f
  412b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b6f:	lods   eax,DWORD PTR ds:[esi]
  412b70:	pop    ebx
  412b71:	ret    
  412b72:	ins    BYTE PTR es:[edi],dx
  412b73:	jns    0x412b2c
  412b75:	in     eax,0xb0
  412b77:	mov    edx,0x42e898c0
  412b7c:	das    
  412b7d:	in     al,dx
  412b7e:	addr16 ds xor eax,0x762e47d5
  412b85:	sar    esp,cl
  412b87:	nop
  412b88:	cli    
  412b89:	pop    es
  412b8a:	push   ecx
  412b8b:	and    edx,ebp
  412b8d:	data16 in al,0x1c
  412b90:	dec    ebp
  412b91:	addr16 jae 0x412bff
  412b94:	jns    0x412b3c
  412b96:	call   0x6f5a0452
  412b9b:	jge    0x412b77
  412b9d:	je     0x412c1e
  412b9f:	push   esp
  412ba0:	pop    eax
  412ba1:	aaa    
  412ba2:	stc    
  412ba3:	lahf   
  412ba4:	sbb    BYTE PTR [eax],cl
  412ba6:	repz aas 
  412ba8:	je     0x412b34
  412baa:	sbb    dl,bl
  412bac:	popa   
  412bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bae:	sub    eax,0x76c2df3
  412bb3:	repnz cmp ebp,edi
  412bb6:	bnd jmp DWORD PTR [eax-0x6c]
  412bba:	push   ds
  412bbb:	mov    BYTE PTR [ebx+ebx*8],bh
  412bbe:	sbb    DWORD PTR [ecx+ecx*8+0x60],ecx
  412bc2:	add    al,0xc9
  412bc4:	push   edi
  412bc5:	xchg   esi,eax
  412bc6:	xor    edx,DWORD PTR [ebx+edx*1+0x21]
  412bca:	inc    ebx
  412bcb:	dec    esi
  412bcc:	repnz cmp DWORD PTR ds:0xf53bfdab,ebp
  412bd3:	cmp    bh,BYTE PTR [esi]
  412bd5:	test   al,0x7a
  412bd7:	in     eax,dx
  412bd8:	leave  
  412bd9:	xor    ebx,DWORD PTR [ecx+eiz*2-0x75]
  412bdd:	out    dx,al
  412bde:	or     ah,BYTE PTR [edi]
  412be0:	cdq    
  412be1:	dec    edx
  412be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be3:	test   BYTE PTR [edx-0x62513112],0x90
  412bea:	xor    al,0x15
  412bec:	mov    al,0x1
  412bee:	ss pusha 
  412bf0:	out    dx,eax
  412bf1:	and    DWORD PTR [esi-0xc],ebx
  412bf4:	imul   esi,DWORD PTR [edi+0x6fd0a568],0xa46342a6
  412bfe:	sbb    eax,0xb8508c10
  412c03:	pop    ebp
  412c04:	add    bl,dl
  412c06:	inc    ecx
  412c07:	mov    edx,0x9a21780b
  412c0c:	leave  
  412c0d:	adc    bh,cl
  412c0f:	jge    0x412c1d
  412c11:	je     0x412be2
  412c13:	xchg   esi,eax
  412c14:	pop    edx
  412c15:	mov    ch,0x8d
  412c17:	cwde   
  412c18:	cli    
  412c19:	cmp    ebp,esi
  412c1b:	data16 sub BYTE PTR [edi],cl
  412c1e:	stos   DWORD PTR es:[edi],eax
  412c1f:	lea    edx,[edi]
  412c21:	mov    al,ds:0xe9ae58a0
  412c26:	dec    ebp
  412c27:	or     esi,DWORD PTR [eax]
  412c29:	push   esp
  412c2a:	mov    ah,0x9d
  412c2c:	jno    0x412c50
  412c2e:	fsubr  DWORD PTR [ecx]
  412c30:	or     eax,0x2ca99a74
  412c35:	iret   
  412c36:	hlt    
  412c37:	xor    ah,0x7b
  412c3a:	cmc    
  412c3b:	and    DWORD PTR [ebp-0x28],0x4a6fbd98
  412c42:	xchg   edi,eax
  412c43:	xor    eax,0xffaebb7b
  412c48:	dec    eax
  412c49:	out    0x6e,al
  412c4b:	pop    edi
  412c4c:	cmc    
  412c4d:	cmp    eax,0xe66e7fad
  412c52:	add    DWORD PTR [edx],ecx
  412c54:	adc    DWORD PTR [ebp+0x27a4e2cc],ebx
  412c5a:	icebp  
  412c5b:	(bad)  
  412c5c:	mov    cl,0x61
  412c5e:	cmp    edi,eax
  412c60:	(bad)  [ebp+ebx*8+0xc026caf]
  412c67:	fsub   QWORD PTR [ebx+0x75]
  412c6a:	rcr    BYTE PTR [eax+0x497cd27f],0xe7
  412c71:	xor    BYTE PTR gs:[edi],al
  412c74:	nop
  412c75:	mov    bl,0x31
  412c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c78:	pop    ebp
  412c79:	add    DWORD PTR ds:0x4b7f91dc,0x4b
  412c80:	cs inc ebp
  412c82:	rcr    BYTE PTR [ebx+0x15],1
  412c85:	mov    al,ds:0xfbe64fc7
  412c8a:	mov    ds:0xe0579475,al
  412c8f:	inc    edx
  412c90:	mov    bh,0x51
  412c93:	jo     0x412cf4
  412c95:	sbb    DWORD PTR [edx-0x27ad2fd3],eax
  412c9b:	lds    eax,FWORD PTR [esi+0x7a9cc63a]
  412ca1:	cmp    dl,al
  412ca3:	iret   
  412ca4:	dec    edx
  412ca5:	sti    
  412ca6:	push   ecx
  412ca7:	lahf   
  412ca8:	mov    ebp,0x40b48e9d
  412cad:	jl     0x412d27
  412caf:	push   esi
  412cb0:	cs addr16 test dl,dh
  412cb4:	cld    
  412cb5:	test   al,0xdf
  412cb7:	jnp    0x412cfa
  412cb9:	inc    esp
  412cba:	pop    ebp
  412cbb:	xchg   DWORD PTR ds:0x39a6cd59,ebx
  412cc1:	pushf  
  412cc2:	lods   al,BYTE PTR ds:[esi]
  412cc3:	stos   BYTE PTR es:[edi],al
  412cc4:	int3   
  412cc5:	sbb    DWORD PTR [ecx],ecx
  412cc7:	popf   
  412cc8:	int3   
  412cc9:	in     al,dx
  412cca:	call   0xa476:0xf1c84224
  412cd1:	dec    esp
  412cd2:	gs not ebx
  412cd5:	xchg   esp,eax
  412cd6:	repz cmp esi,DWORD PTR [edx-0x43c5fc2a]
  412cdd:	cmp    eax,0x6288dd9d
  412ce2:	mov    BYTE PTR [edx+0x53253f21],bh
  412ce8:	sbb    ch,BYTE PTR [edx]
  412cea:	bnd jp 0x412d40
  412ced:	pop    ebp
  412cee:	mov    dl,0xa4
  412cf0:	push   cs
  412cf1:	fdiv   DWORD PTR ds:0x38ea98ac
  412cf7:	push   esp
  412cf8:	cmp    DWORD PTR [ecx-0x7a2d3f60],ecx
  412cfe:	loop   0x412d5b
  412d00:	dec    edx
  412d01:	out    dx,eax
  412d02:	mov    bh,0xa
  412d04:	xlat   BYTE PTR ds:[ebx]
  412d05:	pop    edi
  412d06:	sub    ebp,edx
  412d08:	mov    ecx,0x80db2065
  412d0d:	(bad)  
  412d0e:	in     al,dx
  412d0f:	xor    cl,BYTE PTR [ebx]
  412d11:	idiv   DWORD PTR ds:0x138011e1
  412d17:	out    0xd3,eax
  412d19:	fs ins BYTE PTR es:[edi],dx
  412d1b:	fnsetpm(287 only) 
  412d1d:	std    
  412d1e:	int3   
  412d1f:	adc    esp,DWORD PTR [ebx+ebp*2+0x6a]
  412d23:	and    edx,DWORD PTR [eax-0x77]
  412d26:	aaa    
  412d27:	push   es
  412d28:	pop    eax
  412d29:	cs adc al,0xd
  412d2c:	loop   0x412d8d
  412d2e:	fcomp  st(5)
  412d30:	pop    ss
  412d31:	js     0x412d92
  412d33:	ds clc 
  412d35:	out    dx,al
  412d36:	(bad)  
  412d37:	pop    ecx
  412d38:	sbb    al,0x74
  412d3a:	mov    ds:0x420d4ab1,al
  412d3f:	shl    BYTE PTR [esi+0x3fb644b4],0xa9
  412d46:	std    
  412d47:	into   
  412d48:	ficomp DWORD PTR [esi+ebp*2+0x262ae161]
  412d4f:	stos   DWORD PTR es:[edi],eax
  412d50:	out    dx,eax
  412d51:	stos   DWORD PTR es:[edi],eax
  412d52:	xchg   BYTE PTR [edi],al
  412d54:	iret   
  412d55:	into   
  412d56:	cmp    DWORD PTR [edx],edx
  412d58:	out    0xd9,al
  412d5a:	imul   ecx,DWORD PTR [ebx-0x20],0xffffffa8
  412d5e:	(bad)  
  412d5f:	jne    0x412cfc
  412d61:	repz popf 
  412d63:	stos   BYTE PTR es:[edi],al
  412d64:	outs   dx,BYTE PTR ds:[esi]
  412d65:	adc    dx,di
  412d68:	ficom  DWORD PTR [eax]
  412d6a:	fdiv   st(7),st
  412d6c:	pusha  
  412d6d:	jmp    0x69248489
  412d72:	cmp    esp,ebx
  412d74:	jno    0x412d20
  412d76:	retw   0xb192
  412d7a:	ret    
  412d7b:	scas   al,BYTE PTR es:[edi]
  412d7c:	mov    bh,BYTE PTR [ebx+ecx*4]
  412d7f:	call   0x4994c8f2
  412d84:	xchg   ebx,eax
  412d85:	xor    al,0x94
  412d87:	jbe    0x412d33
  412d89:	ds jae 0x412ddb
  412d8c:	xchg   esi,eax
  412d8d:	into   
  412d8e:	xchg   esi,eax
  412d8f:	sub    dh,BYTE PTR [eax+ebx*2+0x530e0531]
  412d96:	pusha  
  412d97:	cmc    
  412d98:	mov    ch,bh
  412d9a:	jecxz  0x412df1
  412d9c:	(bad)  [ecx+eax*8]
  412d9f:	mov    WORD PTR [esp+ecx*8+0x13],es
  412da3:	cld    
  412da4:	adc    al,0x38
  412da7:	cli    
  412da8:	jae    0x412e1f
  412daa:	jg     0x412ddc
  412dac:	dec    ebx
  412dad:	xor    al,bl
  412daf:	test   ebp,eax
  412db1:	dec    ecx
  412db2:	push   esi
  412db3:	aad    0x71
  412db5:	dec    edx
  412db6:	mov    eax,ds:0x1ab2e55c
  412dbb:	mov    DWORD PTR [esi-0x57],edx
  412dbe:	or     dh,dh
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	dec    eax
  412dc2:	aad    0x49
  412dc4:	lahf   
  412dc5:	test   bh,dl
  412dc7:	lock mov esi,0x4017c62c
  412dcd:	in     al,0x10
  412dcf:	retf   
  412dd0:	div    dl
  412dd2:	sbb    BYTE PTR [ebx+0x4ce36378],ah
  412dd8:	and    BYTE PTR [ebx-0x4353bc27],al
  412dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ddf:	ins    BYTE PTR es:[edi],dx
  412de0:	arpl   WORD PTR [esi],dx
  412de2:	nop
  412de3:	in     eax,0x8d
  412de5:	stc    
  412de6:	jns    0x412d7d
  412de8:	push   edi
  412de9:	pop    ecx
  412dea:	lods   eax,DWORD PTR ds:[esi]
  412deb:	and    ebx,DWORD PTR [esi+0x7b0df3bd]
  412df1:	mov    eax,0x92393062
  412df6:	push   esi
  412df7:	std    
  412df8:	ins    DWORD PTR es:[edi],dx
  412df9:	pop    esp
  412dfa:	and    DWORD PTR [esi-0x263a0ef9],ebx
  412e00:	and    eax,0x89592f90
  412e05:	sahf   
  412e06:	cmp    eax,0x966c8f09
  412e0b:	or     cl,BYTE PTR fs:[edx-0x51]
  412e0f:	sahf   
  412e10:	loopne 0x412e40
  412e12:	das    
  412e13:	dec    ebx
  412e14:	adc    eax,0x7d7905b5
  412e19:	inc    ebp
  412e1a:	adc    BYTE PTR [edx+eax*4-0x5d],ah
  412e1e:	mov    DWORD PTR [eax+ebp*2+0x264c7226],esp
  412e25:	popf   
  412e26:	into   
  412e27:	(bad)  
  412e28:	and    BYTE PTR [ecx-0x3dcc71ba],bh
  412e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2f:	out    0xa3,al
  412e31:	call   0x3978b84b
  412e36:	mov    ch,BYTE PTR [esi+0x47]
  412e39:	lds    esi,FWORD PTR [ecx+0x79]
  412e3c:	mov    eax,0xc3a4e1bb
  412e41:	xchg   ecx,eax
  412e42:	outs   dx,BYTE PTR ds:[esi]
  412e43:	sub    al,0x4a
  412e45:	out    dx,eax
  412e46:	jle    0x412dfd
  412e48:	rcl    edi,0x40
  412e4b:	xchg   ecx,eax
  412e4c:	mov    ebx,DWORD PTR [ebx]
  412e4e:	add    eax,0xf16c421c
  412e53:	jp     0x412e1d
  412e55:	jle    0x412ed6
  412e57:	retf   
  412e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e59:	ret    
  412e5a:	pop    eax
  412e5b:	pop    ss
  412e5c:	lock sub ebp,0xf0eb8059
  412e63:	mov    esi,0x349c31c3
  412e68:	mov    ch,0x6f
  412e6a:	push   eax
  412e6b:	pop    ebp
  412e6c:	pusha  
  412e6d:	es in  al,0x3a
  412e70:	adc    bh,BYTE PTR [ebp-0x6e152441]
  412e76:	jns    0x412e59
  412e78:	add    DWORD PTR [esi+0x14],esi
  412e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7c:	ja     0x412eb5
  412e7e:	jg     0x412e51
  412e80:	mov    ebx,ecx
  412e82:	push   esi
  412e83:	sbb    bh,al
  412e85:	push   0xffffffa7
  412e87:	mov    al,0xb0
  412e89:	dec    eax
  412e8a:	and    DWORD PTR [ebx],0x3093ad28
  412e90:	mov    ecx,0x8c316132
  412e95:	cld    
  412e96:	xlat   BYTE PTR ds:[ebx]
  412e97:	mov    ebx,0x18752c60
  412e9c:	lds    esi,FWORD PTR [ebx+ebp*4-0x4b]
  412ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea1:	xchg   DWORD PTR [edx-0x20],ecx
  412ea4:	xchg   DWORD PTR [ebx],ebx
  412ea6:	jecxz  0x412f15
  412ea8:	in     al,0xfc
  412eaa:	imul   esp,DWORD PTR [ebx],0x17856ac1
  412eb0:	ret    
  412eb1:	pop    esi
  412eb2:	sti    
  412eb3:	xchg   edi,eax
  412eb4:	add    ebx,DWORD PTR [esi+0x3869485c]
  412eba:	xor    al,0xbf
  412ebc:	add    al,0x14
  412ebe:	push   edi
  412ebf:	mov    ah,0xc
  412ec1:	add    eax,0xcc9c227c
  412ec6:	push   esp
  412ec7:	(bad)  
  412ec8:	cli    
  412ec9:	idiv   DWORD PTR [ebx-0xd]
  412ecc:	pushf  
  412ecd:	clc    
  412ece:	or     DWORD PTR [esi-0x4f6ca4d],ebp
  412ed4:	(bad)  
  412ed5:	fdiv   st(1),st
  412ed7:	daa    
  412ed8:	loop   0x412f27
  412eda:	aad    0xd
  412edc:	inc    esp
  412edd:	arpl   WORD PTR [edx+0x492faa18],ax
  412ee3:	daa    
  412ee4:	adc    al,0x91
  412ee6:	leave  
  412ee7:	lahf   
  412ee8:	ins    BYTE PTR es:[edi],dx
  412ee9:	mov    bl,BYTE PTR [ebp-0x6b9ce8ef]
  412eef:	jmp    0x412f69
  412ef1:	mov    al,ds:0x6827281a
  412ef6:	and    DWORD PTR [edi+0x1f],esi
  412ef9:	out    dx,eax
  412efa:	mov    BYTE PTR [edi+0x1f],ah
  412efd:	adc    DWORD PTR [ebx],0xa0997d3b
  412f03:	cli    
  412f04:	inc    edx
  412f05:	mov    al,ds:0x7fbfc66d
  412f0a:	ss aaa 
  412f0c:	in     al,0x2
  412f0e:	clc    
  412f0f:	xor    eax,0x3faea2e0
  412f14:	mov    edx,0x3f89846e
  412f19:	dec    ebp
  412f1a:	push   cs
  412f1b:	(bad)  
  412f1d:	shl    DWORD PTR [eax+0x5b],0xf3
  412f21:	jb     0x412f59
  412f23:	call   FWORD PTR ss:[edi+0x2bec0c06]
  412f2a:	daa    
  412f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f2c:	mov    edx,0xbc004e66
  412f31:	mov    cl,0x58
  412f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f34:	ret    0xea68
  412f37:	mov    BYTE PTR [edi+edi*4],0xe7
  412f3b:	sbb    dl,BYTE PTR [edx]
  412f3d:	inc    ebx
  412f3e:	xor    BYTE PTR [esi+0x69d66c9e],dl
  412f44:	out    dx,eax
  412f45:	mov    edx,0x91a7d485
  412f4a:	lods   al,BYTE PTR ds:[esi]
  412f4b:	rcr    DWORD PTR [ebp+0x35],0x7e
  412f4f:	outs   dx,BYTE PTR ds:[esi]
  412f50:	pop    edx
  412f51:	pop    ecx
  412f52:	fsubr  QWORD PTR [ebp+0x534ca31c]
  412f58:	loope  0x412fb4
  412f5a:	pop    ebp
  412f5b:	sub    al,0x24
  412f5d:	dec    ebx
  412f5e:	push   es
  412f5f:	xchg   ecx,eax
  412f60:	adc    al,0xe2
  412f62:	in     al,dx
  412f63:	test   DWORD PTR [ecx-0x3d81174],esi
  412f69:	(bad)  
  412f6a:	loop   0x412f5e
  412f6c:	and    BYTE PTR [ebx+0x62],0x68
  412f70:	sar    DWORD PTR [esi+ecx*2+0x43],cl
  412f74:	shl    DWORD PTR [ebp-0x15],cl
  412f77:	call   0xdcbc:0xec28f7b4
  412f7e:	imul   ebx,esi,0x79
  412f81:	mov    al,BYTE PTR [ebp-0x2e45db7b]
  412f87:	repnz xchg esi,eax
  412f89:	jae    0x412fec
  412f8b:	into   
  412f8c:	int3   
  412f8d:	xchg   edx,eax
  412f8e:	lods   al,BYTE PTR ds:[esi]
  412f8f:	xchg   BYTE PTR [ecx],dh
  412f91:	icebp  
  412f92:	pop    es
  412f93:	mov    eax,ds:0xbc0ebc29
  412f98:	sbb    eax,0x975d2994
  412f9d:	or     al,0x11
  412f9f:	lock iret 
  412fa1:	mov    ebp,0xca9b4580
  412fa6:	aad    0xb
  412fa8:	jbe    0x412f65
  412faa:	inc    ebp
  412fab:	sbb    bl,BYTE PTR [eax+ebp*2+0x1c]
  412faf:	sbb    bl,dh
  412fb1:	call   0x4e3c:0x8aecd257
  412fb8:	or     edi,ecx
  412fba:	loope  0x412f48
  412fbc:	out    0xca,eax
  412fbe:	jecxz  0x413035
  412fc0:	dec    ecx
  412fc1:	mov    esi,DWORD PTR [edx]
  412fc3:	sub    ebx,DWORD PTR [esi+0x78]
  412fc6:	fld    TBYTE PTR [edx+0x2e]
  412fc9:	push   0xfffffffe
  412fcb:	inc    ebp
  412fcc:	mov    ebx,0x286f7dc9
  412fd1:	pop    edx
  412fd2:	imul   edi,DWORD PTR [ecx+0x4e],0x20
  412fd6:	mov    edi,0xe2c4484b
  412fdb:	jae    0x412fa5
  412fdd:	rcr    BYTE PTR ds:0xf8e6cc59,1
  412fe3:	div    DWORD PTR [edi-0x56]
  412fe6:	sub    eax,DWORD PTR [esp+eiz*2]
  412fe9:	loope  0x413050
  412feb:	xchg   edx,eax
  412fec:	adc    al,BYTE PTR [eax-0x515a2631]
  412ff2:	and    DWORD PTR [ebx+ebx*1],ebp
  412ff5:	leave  
  412ff6:	add    al,0x3
  412ff8:	loop   0x412fa2
  412ffa:	bound  edx,QWORD PTR [edx-0x63]
  412ffd:	mov    edi,0x1f55b392
  413002:	xchg   edx,eax
  413003:	sahf   
  413004:	push   cs
  413005:	push   0xffffffba
  413007:	aam    0xc0
  413009:	loop   0x413080
  41300b:	aam    0x5b
  41300d:	and    edi,eax
  41300f:	jl     0x41307c
  413011:	xchg   edi,eax
  413012:	cdq    
  413013:	mov    bh,0xe4
  413015:	cmp    eax,0x6a72d79f
  41301a:	or     DWORD PTR [edx-0x32],0x66abb1c2
  413021:	mov    DWORD PTR [edi+0x1d],ebx
  413024:	xor    DWORD PTR [eax+0x41],ebp
  413027:	xor    esi,DWORD PTR gs:[edi]
  41302a:	push   0xffffffbd
  41302c:	retf   0xfe6d
  41302f:	repnz fiadd DWORD PTR [ecx+ecx*1-0x54e4e07c]
  413037:	jmp    0x41303d
  413039:	mov    ch,BYTE PTR [edx]
  41303b:	cld    
  41303c:	aam    0xab
  41303e:	add    al,0x39
  413040:	ins    DWORD PTR es:[edi],dx
  413041:	stos   DWORD PTR es:[edi],eax
  413042:	lods   al,BYTE PTR ds:[esi]
  413043:	outs   dx,BYTE PTR ds:[esi]
  413044:	out    dx,al
  413045:	sbb    al,bl
  413047:	dec    esp
  413048:	repz (bad) 
  41304a:	or     al,ch
  41304c:	add    DWORD PTR [esi],ebx
  41304e:	jae    0x413007
  413050:	mov    ecx,0xc8f090be
  413055:	jle    0x413043
  413057:	scas   eax,DWORD PTR es:[edi]
  413058:	cmp    al,0xd0
  41305a:	pop    ecx
  41305b:	(bad)  
  41305c:	sub    al,0x46
  41305e:	icebp  
  41305f:	sbb    DWORD PTR [edx-0x73a5b44a],edi
  413065:	mov    ch,0xeb
  413067:	xchg   DWORD PTR [edi+0xc3885d4],ebx
  41306d:	outs   dx,BYTE PTR ds:[esi]
  41306e:	rcl    BYTE PTR [ecx],0x4
  413071:	pushf  
  413072:	add    al,0x2d
  413074:	mov    edi,0xff649ee7
  413079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41307a:	fdivr  DWORD PTR [edx]
  41307c:	pop    es
  41307d:	mov    dl,0x71
  41307f:	loopne 0x413099
  413081:	lea    esi,[eax+ebx*1]
  413084:	mov    ds:0xb7dc38a,eax
  413089:	or     BYTE PTR [esi+0x68],dh
  41308c:	push   ss
  41308d:	cmp    eax,0x8ca2ebc7
  413092:	and    al,BYTE PTR [ecx]
  413094:	or     BYTE PTR [eax-0x15],cl
  413097:	cmc    
  413098:	cli    
  413099:	std    
  41309a:	popf   
  41309b:	call   0xb535685d
  4130a0:	lods   eax,DWORD PTR ds:[esi]
  4130a1:	dec    ecx
  4130a2:	mov    dh,0x3
  4130a4:	push   ebp
  4130a5:	xor    esi,DWORD PTR [esi]
  4130a7:	mov    ebx,0x24b8387
  4130ac:	je     0x413088
  4130ae:	fistp  QWORD PTR [edi-0x17736673]
  4130b4:	mov    dh,0x9e
  4130b6:	xlat   BYTE PTR fs:[ebx]
  4130b8:	mov    ah,BYTE PTR [ebx]
  4130ba:	icebp  
  4130bb:	mov    ds:0x8497a5b3,eax
  4130c0:	lea    eax,[ecx-0x11c4e751]
  4130c6:	aad    0x48
  4130c8:	or     BYTE PTR [eax+0x7d7b04fe],0x38
  4130cf:	std    
  4130d0:	xor    cl,bh
  4130d2:	aad    0xc3
  4130d4:	mov    BYTE PTR [ebp+0x30eadcc5],0xf0
  4130db:	mov    ch,0x41
  4130dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130de:	scas   eax,DWORD PTR es:[edi]
  4130df:	addr16 iret 
  4130e1:	rcl    BYTE PTR [ebp-0x28f17bad],0xf4
  4130e8:	repz cmp dh,bh
  4130eb:	shr    BYTE PTR [edx-0x663ef5c2],0x8a
  4130f2:	es or  eax,0x66b794be
  4130f8:	leave  
  4130f9:	ret    
  4130fa:	dec    edx
  4130fb:	jne    0x413124
  4130fd:	fcom   QWORD PTR [edx-0x7b1f80e9]
  413103:	jmp    0x169e:0x5ae05485
  41310a:	xor    dh,BYTE PTR [esi+0x50]
  41310d:	cmp    BYTE PTR [ebx],bh
  41310f:	adc    al,0x10
  413111:	in     al,0x80
  413113:	sbb    BYTE PTR [ebp+0x7b],bl
  413116:	pop    edi
  413117:	mov    ebp,0xf7689686
  41311c:	xchg   ebp,eax
  41311d:	add    eax,0xa120cffd
  413122:	push   es
  413123:	fistp  DWORD PTR [edx+ecx*2-0x1efce8c6]
  41312a:	xor    DWORD PTR [ecx-0x5a],0x5710d434
  413131:	outs   dx,BYTE PTR ds:[esi]
  413132:	clc    
  413133:	(bad)  
  413134:	jne    0x413148
  413136:	hlt    
  413137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413139:	dec    esp
  41313a:	inc    ecx
  41313b:	adc    eax,0x2a465411
  413140:	or     esi,DWORD PTR [esi+eax*1-0x51bce50e]
  413147:	fwait
  413148:	mov    DWORD PTR ds:0x41008eec,ebp
  41314e:	fcmovu st,st(0)
  413150:	(bad)  
  413151:	push   ds
  413152:	xor    BYTE PTR [ecx+edx*8-0x63],bh
  413156:	mov    DWORD PTR [edx+0x1c7d18fd],ecx
  41315c:	push   0xffffffd8
  41315e:	icebp  
  41315f:	in     eax,0x5d
  413161:	pop    ebp
  413162:	enter  0xa625,0x5e
  413166:	mov    ah,BYTE PTR [eax-0x6256495f]
  41316c:	or     DWORD PTR [ecx],0xf6be22dc
  413172:	adc    ch,ah
  413174:	xor    edx,DWORD PTR [ecx-0x1ece5c4b]
  41317a:	add    DWORD PTR [eax+0x1ce343ca],0xdcd0e4f0
  413184:	push   esp
  413185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413186:	pop    es
  413187:	(bad)  
  413188:	mov    esi,0x64ae32b9
  41318d:	pop    ebp
  41318e:	mov    cl,0xc1
  413190:	in     eax,0xfe
  413192:	push   esp
  413193:	dec    ebx
  413194:	ins    DWORD PTR es:[edi],dx
  413195:	cs pop ecx
  413197:	retf   
  413198:	test   BYTE PTR [ecx+eax*4],0x9b
  41319c:	mov    dl,0x3b
  41319e:	jp     0x4131d7
  4131a0:	das    
  4131a1:	pop    edx
  4131a2:	inc    ecx
  4131a3:	mov    esp,DWORD PTR [edx+0x54]
  4131a6:	sub    edi,ecx
  4131a8:	xor    bl,BYTE PTR [edi]
  4131aa:	adc    dh,cl
  4131ac:	pop    edi
  4131ad:	cli    
  4131ae:	arpl   WORD PTR [esi-0xc],bp
  4131b1:	test   edx,eax
  4131b3:	in     eax,0x1a
  4131b5:	mov    ds:0x3d9e35bf,al
  4131ba:	jmp    0xec0ba2ea
  4131bf:	dec    ebp
  4131c0:	mov    al,ds:0x73221763
  4131c5:	pushf  
  4131c6:	scas   al,BYTE PTR es:[edi]
  4131c7:	xchg   ebx,eax
  4131c8:	mov    dl,0x6f
  4131ca:	xor    DWORD PTR [edi],edx
  4131cc:	push   0x5bf49988
  4131d1:	dec    edx
  4131d2:	ins    BYTE PTR es:[edi],dx
  4131d3:	(bad)  
  4131d4:	jae    0x4131c4
  4131d6:	sbb    BYTE PTR [ecx],bh
  4131d8:	lods   eax,DWORD PTR ds:[esi]
  4131d9:	fnstenv [ebx]
  4131db:	stc    
  4131dc:	lock iret 
  4131de:	sbb    BYTE PTR [edi],bl
  4131e0:	jge    0x413242
  4131e2:	cmp    edi,DWORD PTR [esi+0x1b]
  4131e5:	ins    BYTE PTR es:[edi],dx
  4131e6:	ja     0x41319f
  4131e8:	addr16 pop ds
  4131ea:	push   esp
  4131eb:	mov    DWORD PTR [edi-0x73],esp
  4131ee:	loope  0x413234
  4131f0:	sbb    eax,0xe9b26b7
  4131f5:	cdq    
  4131f6:	rol    DWORD PTR fs:[ebx],0xd0
  4131fa:	mov    edi,0xeff20516
  4131ff:	call   0xad48ed79
  413204:	mov    db7,esp
  413207:	loop   0x413269
  413209:	pop    ds
  41320a:	adc    BYTE PTR [ecx-0x6d],al
  41320d:	inc    eax
  41320e:	pop    ebx
  41320f:	pop    esi
  413210:	arpl   WORD PTR [eax],di
  413212:	call   0xeb5e:0xc86c35ab
  413219:	push   edi
  41321a:	inc    edx
  41321b:	cmp    BYTE PTR [bp-0x1c],ah
  41321f:	mov    ecx,0x3e10c806
  413224:	loop   0x413242
  413226:	push   ebx
  413227:	xchg   esp,eax
  413228:	div    DWORD PTR [esp+eax*4+0x21]
  41322c:	sub    edi,DWORD PTR ds:0xd59d0de1
  413232:	cmp    DWORD PTR [edi-0x76],eax
  413235:	or     ecx,esp
  413237:	inc    edi
  413238:	icebp  
  413239:	jmp    0xb1bbe44e
  41323e:	inc    edi
  41323f:	out    0x2f,eax
  413241:	mov    di,0x7f4b
  413245:	loopne 0x413245
  413247:	xlat   BYTE PTR ds:[ebx]
  413248:	and    BYTE PTR [eax-0x3a],ah
  41324b:	loop   0x41328b
  41324d:	aaa    
  41324e:	sub    BYTE PTR ds:0x692579cb,dh
  413254:	pop    eax
  413255:	and    esp,DWORD PTR [edx]
  413257:	rol    DWORD PTR [ecx-0x609d8eb0],cl
  41325d:	sub    bh,dl
  41325f:	push   esp
  413260:	xchg   BYTE PTR [ebx+0x13],al
  413263:	sub    al,0xc0
  413265:	inc    edi
  413266:	mov    bl,0x58
  413268:	mov    dh,0x93
  41326a:	aas    
  41326b:	sub    BYTE PTR [esi+0x7f1a651d],dl
  413271:	and    bh,BYTE PTR [ebx]
  413273:	jo     0x413236
  413275:	and    DWORD PTR [eax],ecx
  413277:	push   ebx
  413278:	xchg   esi,eax
  413279:	mov    bl,0xbb
  41327b:	paddw  mm3,QWORD PTR [eax+0x3fcccf91]
  413282:	dec    eax
  413283:	(bad)  
  413284:	test   eax,0xf6acb109
  413289:	popa   
  41328a:	stc    
  41328b:	pop    edi
  41328c:	adc    cl,ch
  41328e:	or     DWORD PTR [eax-0x24],ecx
  413291:	dec    esp
  413292:	lahf   
  413293:	test   DWORD PTR [ecx-0x60],eax
  413296:	aas    
  413297:	clc    
  413298:	cmp    bl,BYTE PTR [edi+0x3f2bb36e]
  41329e:	pusha  
  41329f:	lahf   
  4132a0:	inc    ebp
  4132a1:	mov    ah,0x81
  4132a3:	cmp    bh,bl
  4132a5:	ss ret 
  4132a7:	lods   eax,DWORD PTR ds:[esi]
  4132a8:	or     DWORD PTR [ecx+0x54],edi
  4132ab:	in     al,dx
  4132ac:	xchg   BYTE PTR [ecx],dl
  4132ae:	in     al,0xfe
  4132b0:	jns    0x413310
  4132b2:	inc    ebx
  4132b3:	dec    BYTE PTR [esi+0x5945c135]
  4132b9:	lock adc eax,0xc995185b
  4132bf:	add    ch,BYTE PTR [ebx-0x166f6bbe]
  4132c5:	mov    dl,0xf9
  4132c7:	xor    dl,BYTE PTR [ebx+0x5a]
  4132ca:	lds    edi,FWORD PTR [edi]
  4132cc:	fcom   st(4)
  4132ce:	es jnp 0x4132e2
  4132d1:	mov    esp,0xb7e535ee
  4132d6:	pop    eax
  4132d7:	xor    eax,0x1d3d28d0
  4132dc:	into   
  4132dd:	mov    dh,0x72
  4132df:	scas   al,BYTE PTR es:[edi]
  4132e0:	dec    edi
  4132e1:	inc    ebp
  4132e2:	fs adc al,0x98
  4132e5:	xchg   edi,eax
  4132e6:	mov    ebx,edx
  4132e8:	jo     0x41330e
  4132ea:	pop    es
  4132eb:	mov    bh,0x34
  4132ee:	sbb    DWORD PTR [ebx],esi
  4132f0:	xor    ebp,DWORD PTR [eax+0x36]
  4132f3:	js     0x413326
  4132f5:	nop
  4132f6:	frstor [esi+0x6ff98598]
  4132fc:	loop   0x41327f
  4132fe:	loope  0x41332d
  413300:	dec    esi
  413301:	call   edx
  413303:	pop    edx
  413304:	es cld 
  413306:	or     eax,0x8273b450
  41330b:	add    DWORD PTR [edi],0xcb6d9457
  413311:	jmp    0xa122bbd0
  413316:	pop    eax
  413317:	(bad)  
  413318:	pushf  
  413319:	inc    ebx
  41331a:	push   0xa6035cd9
  41331f:	push   0x8
  413321:	lea    edi,[ebp+0x2b854d84]
  413327:	cmp    DWORD PTR [edi-0x58],esi
  41332a:	imul   cl
  41332c:	js     0x41336a
  41332e:	jmp    0x32e9:0x619c2b7b
  413335:	xchg   esp,eax
  413336:	mov    ds:0x788fed95,al
  41333b:	int3   
  41333c:	imul   esp,DWORD PTR [edi],0xfffffffe
  41333f:	popa   
  413340:	sbb    al,0xf1
  413343:	loopne 0x413367
  413345:	lods   eax,DWORD PTR ds:[esi]
  413346:	cwde   
  413347:	aaa    
  413348:	sti    
  413349:	push   ebp
  41334a:	pop    ds
  41334b:	sbb    eax,0x1131d87e
  413350:	clc    
  413351:	xor    eax,0xb3660e79
  413356:	sub    eax,0xae2b2957
  41335b:	mov    ecx,0x7ae18f0a
  413360:	sar    ah,1
  413362:	push   0x60
  413364:	sbb    dh,bl
  413366:	stc    
  413367:	push   edi
  413368:	test   DWORD PTR [ebx-0x436d7a17],edi
  41336e:	imul   esp,DWORD PTR [ebx-0x73],0xffffff96
  413372:	jne    0x41335a
  413374:	imul   esp,DWORD PTR [edx],0xa867d9f0
  41337a:	mov    DWORD PTR [eax+0x6a2da693],0xd7180cf1
  413384:	xchg   DWORD PTR [edx-0x3d],esp
  413387:	test   eax,0x224575a
  41338c:	jp     0x4133c8
  41338e:	push   0xffffffad
  413390:	loopne 0x413342
  413392:	inc    eax
  413393:	cs mov cl,0x6b
  413396:	gs gs adc dl,bh
  41339a:	mov    esp,0xcbc4d43b
  41339f:	sub    BYTE PTR [ebx-0x27],cl
  4133a2:	xchg   DWORD PTR [edx],eax
  4133a4:	(bad)  
  4133a5:	stos   BYTE PTR es:[edi],al
  4133a6:	sub    DWORD PTR [esi+0x6d3e45f0],edx
  4133ac:	stos   BYTE PTR es:[edi],al
  4133ad:	adc    esi,edi
  4133af:	test   BYTE PTR ds:0x9fde383c,0x6c
  4133b6:	mov    eax,0xd2c15332
  4133bb:	adc    ecx,DWORD PTR [ecx]
  4133bd:	in     al,0x90
  4133bf:	js     0x41334a
  4133c1:	enter  0xd0b5,0x9a
  4133c5:	add    BYTE PTR [ecx+ebp*8-0x4f],ch
  4133c9:	mov    bh,0x8e
  4133cb:	fsubr  QWORD PTR [eax-0x6d3c661c]
  4133d1:	sbb    edx,DWORD PTR [ebx-0x78]
  4133d4:	dec    ebp
  4133d5:	sbb    BYTE PTR [edx-0xc972b6],0x0
  4133dc:	push   edx
  4133dd:	dec    eax
  4133de:	inc    ecx
  4133df:	cld    
  4133e0:	clc    
  4133e1:	and    al,0x28
  4133e3:	mov    eax,eax
  4133e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e6:	mov    DWORD PTR [ecx-0xa],eax
  4133e9:	cmp    al,0x1b
  4133eb:	cmp    eax,ecx
  4133ed:	push   0x7276382c
  4133f2:	xor    DWORD PTR [ebp+0x610f4b45],0x34
  4133f9:	inc    ebp
  4133fa:	push   edi
  4133fb:	stc    
  4133fc:	mov    dl,0x3d
  4133fe:	or     dh,BYTE PTR [edi-0x55]
  413401:	pop    edx
  413402:	jnp    0x4133fa
  413404:	mov    dh,0xc
  413406:	sub    DWORD PTR [ebx+0x431f8d99],edx
  41340c:	dec    esi
  41340d:	xchg   esp,eax
  41340e:	scas   eax,DWORD PTR es:[edi]
  41340f:	adc    BYTE PTR [ecx+0x12a60f6a],ch
  413415:	les    eax,FWORD PTR [edx*2-0x4603912d]
  41341c:	jb     0x413475
  41341e:	mov    al,ds:0x88dceba2
  413423:	test   eax,0xdbcd3079
  413428:	popa   
  413429:	lods   eax,DWORD PTR ds:[esi]
  41342a:	aad    0x90
  41342c:	cmp    bh,bh
  41342e:	sti    
  41342f:	(bad)  
  413431:	add    DWORD PTR [edi],eax
  413433:	rol    eax,cl
  413435:	hlt    
  413436:	xor    al,0x26
  413438:	fwait
  413439:	pop    esp
  41343a:	dec    ecx
  41343b:	lahf   
  41343c:	adc    eax,0x62b1c61e
  413441:	cs add al,0x5b
  413444:	popa   
  413445:	les    eax,FWORD PTR [esi]
  413447:	das    
  413448:	xchg   BYTE PTR [esi-0x522bdf01],bl
  41344e:	sar    esi,0x48
  413451:	test   BYTE PTR [ebx+0x128bc6a1],al
  413457:	into   
  413458:	addr16 jle 0x413460
  41345b:	jb     0x4133f7
  41345d:	ds add bl,ah
  413460:	(bad)  [esp+ebx*8-0x72]
  413464:	popa   
  413465:	enter  0xf64a,0x72
  413469:	lea    edi,[edi+0x924196f]
  41346f:	hlt    
  413470:	push   ds
  413471:	bound  ebx,QWORD PTR [ebx-0x1eadfae9]
  413477:	cmp    eax,0x3a391edf
  41347c:	dec    edi
  41347d:	gs jmp 0x41341d
  413480:	shr    DWORD PTR [edi+0x79],1
  413483:	jae    0x413423
  413485:	test   BYTE PTR [edi],dh
  413487:	and    eax,0xa26b0e9
  41348c:	mov    ecx,0x3258c499
  413491:	lods   al,BYTE PTR ds:[esi]
  413492:	stos   BYTE PTR es:[edi],al
  413493:	in     al,0x83
  413495:	lods   al,BYTE PTR ds:[esi]
  413496:	fldenv [ebp+0x59]
  413499:	mov    ecx,DWORD PTR ds:0xfdbb2808
  41349f:	xor    DWORD PTR [edx],0xfa343d22
  4134a5:	mov    eax,ds:0x2cc6c866
  4134aa:	out    0x7,eax
  4134ac:	hlt    
  4134ad:	lods   eax,DWORD PTR ds:[esi]
  4134ae:	fwait
  4134af:	enter  0x6fc5,0x89
  4134b3:	scas   al,BYTE PTR es:[edi]
  4134b4:	dec    edx
  4134b5:	adc    DWORD PTR [eax+0x42],ebp
  4134b8:	call   0x29c9:0xdcd3fec3
  4134bf:	push   cs
  4134c0:	in     eax,0x93
  4134c2:	std    
  4134c3:	cmp    bh,BYTE PTR [eax+0x7d86d260]
  4134c9:	es scas eax,DWORD PTR es:[edi]
  4134cb:	inc    edx
  4134cc:	jae    0x41352a
  4134ce:	mov    al,0x94
  4134d0:	and    eax,0xbe83d9c4
  4134d5:	in     eax,dx
  4134d6:	push   esi
  4134d7:	repnz xchg ebx,eax
  4134d9:	add    DWORD PTR [esi-0x2f7e24fc],eax
  4134df:	xchg   esp,eax
  4134e0:	rol    BYTE PTR [esi+0x2ea7df2f],0x7b
  4134e7:	jmp    FWORD PTR [esi-0x194b24fa]
  4134ed:	add    ah,BYTE PTR [ecx-0x1d]
  4134f0:	test   al,0x71
  4134f2:	mov    bh,0x68
  4134f4:	push   esp
  4134f5:	jno    0x41347b
  4134f7:	js     0x413506
  4134f9:	cld    
  4134fa:	jle    0x413521
  4134fc:	test   al,0xc1
  4134fe:	outs   dx,DWORD PTR ds:[esi]
  4134ff:	outs   dx,BYTE PTR ds:[esi]
  413500:	int3   
  413501:	mov    edx,0xb56803cc
  413506:	xlat   BYTE PTR ds:[ebx]
  413507:	retf   0xa385
  41350a:	loop   0x41356b
  41350c:	mov    ebp,0x306d3c3e
  413511:	fucomp st(1)
  413513:	test   BYTE PTR ds:0x39235829,dh
  413519:	aad    0x1b
  41351b:	dec    ecx
  41351c:	sub    BYTE PTR [ebx],ah
  41351e:	sub    dl,BYTE PTR [edi-0x72]
  413521:	test   BYTE PTR [esi-0x760ae39c],0xce
  413528:	xor    BYTE PTR [ebx-0x5201502],dl
  41352e:	je     0x413529
  413530:	popf   
  413531:	sar    BYTE PTR [edx+0x483063dc],1
  413537:	nop
  413538:	les    eax,FWORD PTR [edi-0x62]
  41353b:	mov    ebx,0x872c45df
  413540:	fisub  WORD PTR [esp+ebx*1]
  413543:	sbb    eax,0x3a9cd328
  413548:	push   ds
  413549:	les    edx,FWORD PTR [esp+eax*4-0x68cb1f74]
  413550:	push   esp
  413551:	lds    edi,FWORD PTR ds:0x580d217f
  413557:	daa    
  413558:	xchg   edi,eax
  413559:	outs   dx,DWORD PTR ds:[esi]
  41355a:	xchg   esp,eax
  41355b:	retf   0x93eb
  41355e:	dec    esp
  41355f:	(bad)  
  413560:	pusha  
  413561:	dec    ebp
  413562:	xor    BYTE PTR [esi+ebp*4],al
  413565:	lea    ecx,[ebx-0x6777888f]
  41356b:	dec    ebp
  41356c:	mov    ds:0xb7473959,eax
  413571:	(bad)  
  413572:	out    dx,al
  413573:	out    0xe0,al
  413575:	jl     0x4135e7
  413577:	and    ebx,DWORD PTR [eax]
  413579:	jno    0x413565
  41357b:	or     al,0xfb
  41357d:	mov    ds:0x7ce07b0d,eax
  413582:	aam    0x80
  413584:	inc    ebp
  413585:	sub    eax,0x53a8ece
  41358a:	mov    WORD PTR [ecx],cs
  41358c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41358d:	std    
  41358e:	cwde   
  41358f:	inc    eax
  413590:	push   esp
  413591:	mov    dl,cl
  413593:	dec    edi
  413594:	addr16 ret 
  413596:	jle    0x413568
  413598:	mov    eax,0x3976ae79
  41359d:	jns    0x41357f
  41359f:	fild   DWORD PTR [ebx+0xc]
  4135a2:	mov    dh,0x4d
  4135a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a5:	xchg   BYTE PTR [edi+0x63982358],ah
  4135ab:	retf   
  4135ac:	inc    ebx
  4135ad:	lock in al,0x83
  4135b0:	mov    dl,0x3e
  4135b2:	inc    ebx
  4135b3:	ss push ecx
  4135b5:	repnz lahf 
  4135b7:	xchg   edx,eax
  4135b8:	xchg   BYTE PTR [ecx+edi*4-0x40],bl
  4135bc:	sti    
  4135bd:	ret    
  4135be:	out    0x3,eax
  4135c0:	idiv   DWORD PTR [ecx-0x3a]
  4135c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c4:	dec    edx
  4135c5:	fsubrp st(3),st
  4135c7:	pop    ds
  4135c8:	mov    dl,0x71
  4135ca:	xor    BYTE PTR [esp+ecx*8-0x55bf5407],dh
  4135d1:	neg    esi
  4135d3:	or     al,0xd4
  4135d5:	fcom   DWORD PTR [eax]
  4135d7:	mov    WORD PTR [edx],ss
  4135d9:	adc    bh,ah
  4135db:	inc    ebp
  4135dd:	xchg   edi,eax
  4135de:	inc    edi
  4135df:	or     eax,ecx
  4135e1:	jne    0x413643
  4135e3:	ficomp WORD PTR [ebp+0x24c3eb7c]
  4135e9:	cld    
  4135ea:	and    al,0xaa
  4135ec:	mov    ds:0x159baf,eax
  4135f1:	or     al,0xea
  4135f3:	popf   
  4135f4:	add    eax,0x121af2ea
  4135f9:	lahf   
  4135fa:	cmp    eax,0x7c7e3065
  4135ff:	adc    al,0xa9
  413601:	jo     0x41367b
  413603:	inc    edi
  413604:	inc    edx
  413605:	and    DWORD PTR [edx-0x37bf923d],ebp
  41360b:	repz mov bh,0xcb
  41360e:	ins    BYTE PTR es:[edi],dx
  41360f:	out    dx,eax
  413610:	call   0x4613:0xb0846af4
  413617:	repnz in al,0xd
  41361a:	add    ch,al
  41361c:	cmp    DWORD PTR [edx],edx
  41361e:	dec    ebx
  41361f:	jnp    0x413628
  413621:	dec    eax
  413622:	xor    eax,0x408d4d1f
  413627:	int3   
  413628:	stos   BYTE PTR es:[edi],al
  413629:	sti    
  41362a:	(bad)  
  41362b:	in     al,dx
  41362c:	gs out dx,al
  41362e:	stc    
  41362f:	sbb    ecx,edx
  413631:	dec    esi
  413632:	jecxz  0x413686
  413634:	push   ebp
  413635:	jns    0x4136b2
  413637:	iret   
  413638:	nop
  413639:	xchg   ebp,eax
  41363a:	xor    BYTE PTR [edx],cl
  41363c:	add    al,0xf6
  41363e:	and    BYTE PTR [ebp+0x2a1087c],al
  413644:	push   edx
  413645:	rol    DWORD PTR [esi],cl
  413647:	in     eax,0x24
  413649:	scas   al,BYTE PTR es:[edi]
  41364a:	xchg   esi,eax
  41364b:	sbb    bh,cl
  41364d:	pop    eax
  41364e:	jae    0x4135f8
  413650:	lock adc bh,BYTE PTR [ecx+0x36]
  413654:	jp     0x41367b
  413656:	push   0xffffff94
  413658:	jp     0x4136a9
  41365a:	push   esi
  41365b:	mov    esp,0x53dcf16d
  413660:	push   edx
  413661:	test   bl,bl
  413663:	outs   dx,BYTE PTR ds:[esi]
  413664:	inc    esp
  413665:	rcr    BYTE PTR [edi-0x5e],1
  413668:	aam    0x74
  41366a:	leave  
  41366b:	mov    ds:0xa13c41aa,al
  413670:	cli    
  413671:	adc    cl,BYTE PTR [ebx]
  413673:	and    eax,0x7dd484e1
  413678:	adc    esi,DWORD PTR [edi*2+0x31df6ba1]
  41367f:	dec    esi
  413680:	push   edx
  413681:	in     eax,0x1c
  413683:	jp     0x4136ff
  413685:	adc    dh,BYTE PTR [eax-0x7f]
  413688:	push   ebp
  413689:	(bad)  
  41368a:	(bad)  
  41368c:	imul   edi,DWORD PTR ds:0x497be642,0xffffff8f
  413693:	push   es
  413694:	jg     0x413694
  413696:	adc    eax,0x381516f
  41369b:	out    0x9b,al
  41369d:	sbb    eax,0x3c3ade63
  4136a2:	pop    ss
  4136a3:	mov    al,0x92
  4136a5:	scas   eax,DWORD PTR es:[edi]
  4136a6:	pop    ebx
  4136a7:	addr16 inc eax
  4136a9:	push   es
  4136aa:	dec    eax
  4136ab:	mov    esp,0xd0c0ac60
  4136b0:	mov    ch,BYTE PTR [edx+0x4c829fe5]
  4136b6:	fsub   st,st(3)
  4136b8:	dec    ebp
  4136b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bb:	push   ecx
  4136bc:	dec    eax
  4136bd:	shr    esi,1
  4136bf:	push   edx
  4136c0:	ins    DWORD PTR es:[edi],dx
  4136c1:	mov    dh,0xe9
  4136c3:	cmp    DWORD PTR [ecx],esp
  4136c5:	adc    eax,0x8bc8dc54
  4136ca:	sub    DWORD PTR [ebx+0x64d0195a],ebx
  4136d0:	add    eax,0xffffff91
  4136d3:	sub    DWORD PTR [edi],edx
  4136d5:	ret    0x6ef6
  4136d8:	cmp    ecx,DWORD PTR [edx+0x47334539]
  4136de:	jae    0x413686
  4136e0:	or     ch,ah
  4136e2:	pop    eax
  4136e3:	sub    cl,BYTE PTR [edx-0x6c]
  4136e6:	daa    
  4136e7:	scas   eax,DWORD PTR es:[edi]
  4136e8:	push   esp
  4136e9:	mov    eax,ds:0xfb14a99
  4136ee:	xchg   esp,eax
  4136ef:	inc    edi
  4136f0:	inc    ebx
  4136f1:	shl    DWORD PTR [eax-0x27],cl
  4136f4:	jmp    0x41374f
  4136f6:	mov    ebp,0x80f4a882
  4136fb:	jmp    0x4136b0
  4136fd:	sbb    DWORD PTR [edx],eax
  4136ff:	or     BYTE PTR [edx],cl
  413701:	fld    st(5)
  413703:	add    eax,0xa7cc1eab
  413708:	popf   
  413709:	ins    DWORD PTR es:[edi],dx
  41370a:	popf   
  41370b:	mov    esi,0xf7d29f6e
  413710:	(bad)  
  413711:	aad    0x80
  413713:	in     eax,0xc6
  413715:	mov    ch,0x56
  413717:	mov    ecx,0x921ddc7d
  41371c:	je     0x413797
  41371e:	jae    0x413786
  413720:	arpl   WORD PTR [ecx],cx
  413722:	xchg   DWORD PTR [eax+0x2b],ebp
  413725:	in     eax,0x6a
  413727:	xor    ecx,DWORD PTR [edx+esi*4+0x23b6460e]
  41372e:	repnz inc esp
  413730:	fsubrp st(2),st
  413732:	loop   0x41370b
  413734:	test   DWORD PTR [esi+0x77e9b3a8],ebx
  41373a:	mov    ebp,0x8a57ae19
  41373f:	(bad)  
  413740:	sub    BYTE PTR [edx-0x75],ch
  413743:	dec    ecx
  413744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413745:	mov    cl,0xbd
  413747:	inc    eax
  413748:	ds das 
  41374a:	adc    BYTE PTR [edi+0x21a0297a],ch
  413750:	(bad)  
  413751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413752:	adc    eax,esp
  413754:	mov    esp,0x99f9707
  413759:	fiadd  WORD PTR [edx-0x5319bd1b]
  41375f:	shl    BYTE PTR [ecx],1
  413761:	jnp    0x41378d
  413763:	rcr    BYTE PTR [esi+ebx*4+0x4426a881],cl
  41376a:	mov    bh,0x3f
  41376c:	xor    al,BYTE PTR [eax+edi*4]
  41376f:	lds    esi,FWORD PTR [edi-0x21487570]
  413775:	adc    BYTE PTR [eax+0x32],ah
  413778:	and    eax,0x60d7815e
  41377d:	xor    BYTE PTR [ecx-0x794875ab],dl
  413783:	inc    edi
  413784:	mov    cs,WORD PTR [ebx-0x6c]
  413787:	in     al,dx
  413788:	in     al,0xd
  41378a:	jno    0x41373f
  41378c:	xchg   ebx,eax
  41378d:	dec    edi
  41378e:	add    BYTE PTR [ebx+0x2d],bh
  413791:	retf   
  413792:	mov    ebp,0xfc319cb3
  413797:	adc    DWORD PTR [esi-0x2e],ebx
  41379a:	out    dx,eax
  41379b:	sbb    dl,BYTE PTR [edi+0x70f2cb83]
  4137a1:	cmp    eax,DWORD PTR [eax-0x704d3686]
  4137a7:	mov    ecx,0x70f998ed
  4137ac:	rcr    ecx,cl
  4137ae:	sahf   
  4137af:	ror    DWORD PTR [eax+ebx*2-0x34630933],cl
  4137b6:	mov    ds:0xd81a573d,al
  4137bb:	stc    
  4137bc:	mov    bh,0x3d
  4137be:	les    eax,FWORD PTR [ecx+0x4873e8c7]
  4137c4:	data16 and al,0x44
  4137c7:	inc    esi
  4137c8:	push   ss
  4137c9:	and    DWORD PTR [esi+0x54],0xffffffa5
  4137cd:	icebp  
  4137ce:	fidivr WORD PTR ds:0x7e36b06f
  4137d4:	test   DWORD PTR [esi+0x0],edi
  4137d7:	pop    ecx
  4137d8:	retf   
  4137d9:	rol    DWORD PTR [edi+eax*1],1
  4137dc:	lahf   
  4137dd:	es cs sbb dh,0xf4
  4137e2:	repz pop eax
  4137e4:	sub    eax,0xbe45fdd1
  4137e9:	enter  0x3ef5,0x76
  4137ed:	mov    ds:0xf5ada8e2,al
  4137f2:	(bad)
  4137f5:	adc    dh,dl
  4137f7:	out    0x9b,al
  4137f9:	pop    esi
  4137fa:	push   0x70f2bc21
  4137ff:	lea    ebx,[ebp+0x605c658b]
  413805:	sbb    DWORD PTR [ebx+0x5],esp
  413808:	adc    al,BYTE PTR [edx+0x5a]
  41380b:	pop    edx
  41380c:	dec    edx
  41380d:	lea    esi,[ecx+0x3c741ff]
  413813:	mov    ebp,0x4b3b4f17
  413818:	test   ecx,edx
  41381a:	mov    edi,gs
  41381c:	add    bh,bh
  41381e:	xchg   ebp,eax
  41381f:	sub    eax,0xd7609412
  413824:	mov    dl,0xe7
  413826:	enter  0x8515,0x43
  41382a:	push   ebp
  41382b:	sub    dl,0x41
  41382e:	dec    ebp
  41382f:	lods   eax,DWORD PTR ds:[esi]
  413830:	ret    0xdced
  413833:	in     al,dx
  413834:	repz mov ds:0xc5754ec5,eax
  41383a:	ficom  WORD PTR [eax]
  41383c:	aas    
  41383d:	fldenv [edi]
  41383f:	xor    DWORD PTR [ebp+0x7c3bf236],ebx
  413845:	je     0x413822
  413847:	and    edi,ecx
  413849:	daa    
  41384a:	bnd jns 0x41383c
  41384d:	push   esp
  41384e:	aas    
  41384f:	sub    DWORD PTR [edx+0x63546e9b],edx
  413855:	push   edi
  413856:	push   edx
  413857:	lods   al,BYTE PTR ds:[esi]
  413858:	pushf  
  413859:	or     dl,BYTE PTR [ebx]
  41385b:	xchg   DWORD PTR [ecx],esp
  41385d:	add    edx,eax
  41385f:	cmp    esi,DWORD PTR [edi+esi*1+0x72]
  413863:	pusha  
  413864:	or     eax,0xe41a2549
  413869:	jns    0x4138a5
  41386b:	pop    ebp
  41386c:	xlat   BYTE PTR ds:[ebx]
  41386d:	push   es
  41386e:	in     eax,dx
  41386f:	leave  
  413870:	loope  0x413866
  413872:	push   0x57c72cb3
  413877:	mov    ah,0xe
  413879:	cld    
  41387a:	xchg   DWORD PTR [ebp-0x7aff398a],edx
  413880:	sti    
  413881:	sbb    BYTE PTR [ecx-0x1fee1e77],bl
  413887:	rol    DWORD PTR [ecx+0x27],cl
  41388a:	call   0xd383:0x31f608ac
  413891:	int3   
  413892:	int    0x62
  413894:	popa   
  413895:	jnp    0x41381a
  413897:	push   eax
  413898:	enter  0xf57f,0x75
  41389c:	jns    0x4138ae
  41389e:	cwde   
  41389f:	fdiv   QWORD PTR [esi+ecx*1+0x472fca1b]
  4138a6:	popa   
  4138a7:	adc    BYTE PTR [ebx+0xb],ah
  4138aa:	(bad)  
  4138ab:	jp     0x41388a
  4138ad:	and    esi,DWORD PTR [ebp+0x44]
  4138b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b1:	outs   dx,DWORD PTR ds:[esi]
  4138b2:	arpl   dx,sp
  4138b4:	xor    edx,DWORD PTR [eax]
  4138b6:	mov    eax,0x24f80ce0
  4138bb:	ins    DWORD PTR es:[edi],dx
  4138bc:	pop    eax
  4138bd:	xchg   ebp,eax
  4138be:	stos   DWORD PTR es:[edi],eax
  4138bf:	ins    DWORD PTR es:[edi],dx
  4138c0:	pushf  
  4138c1:	(bad)  
  4138c2:	hlt    
  4138c3:	cld    
  4138c4:	adc    cl,dl
  4138c6:	inc    BYTE PTR [esi+0x7ba753c0]
  4138cc:	gs gs jns 0x413935
  4138d0:	lds    edi,FWORD PTR [eax+0x67]
  4138d3:	int    0xde
  4138d5:	mov    ecx,0xe19084e6
  4138da:	inc    ebx
  4138db:	rol    al,0xe6
  4138de:	ror    DWORD PTR [ebp-0x19],0xd2
  4138e2:	(bad)  [ecx+0x39f767df]
  4138e8:	icebp  
  4138e9:	lahf   
  4138ea:	mov    dh,BYTE PTR [ebp+0x3c]
  4138ed:	or     ch,al
  4138ef:	pop    ecx
  4138f0:	jns    0x4138a4
  4138f2:	(bad)  
  4138f3:	lahf   
  4138f4:	mov    BYTE PTR [edx+0x5d4a6c63],dl
  4138fa:	cld    
  4138fb:	shr    BYTE PTR [ecx],0xc9
  4138fe:	mov    eax,ds:0x6086cd9b
  413903:	lea    ecx,[esi]
  413905:	mov    dh,0xb2
  413907:	in     eax,0xa9
  413909:	mov    edx,0xc43e09d4
  41390e:	mov    dh,0x41
  413910:	push   ds
  413911:	cmp    ebp,edx
  413913:	inc    eax
  413914:	xor    bh,al
  413916:	jb     0x41390a
  413918:	in     al,0xb0
  41391a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41391b:	test   BYTE PTR [ecx+eiz*4],dl
  41391e:	int    0x2f
  413920:	cmp    bl,bh
  413922:	leave  
  413923:	shl    BYTE PTR [ecx],1
  413925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413926:	push   ss
  413927:	xchg   esp,eax
  413928:	ret    
  413929:	mov    edx,0xaddc1834
  41392e:	repnz add DWORD PTR ds:0x25f861a0,0x9d80b9ee
  413939:	xchg   edx,eax
  41393a:	ror    DWORD PTR [edx+0x618d53dd],cl
  413940:	ds nop
  413942:	loope  0x413996
  413944:	sub    al,0xeb
  413946:	clc    
  413947:	loopne 0x4138ca
  413949:	pusha  
  41394a:	mov    esi,edi
  41394c:	cmp    esp,ebp
  41394e:	das    
  41394f:	test   DWORD PTR [esi+ebp*1],ecx
  413952:	xchg   esp,eax
  413953:	sahf   
  413954:	fnstcw WORD PTR [ebx]
  413956:	imul   ebx,DWORD PTR [esi],0xffffffa3
  413959:	mov    eax,ds:0x469b808a
  41395e:	and    DWORD PTR [edi+0x5ebb8779],edx
  413964:	and    DWORD PTR [ebx+0x5afa0b04],0xbfa51d5c
  41396e:	lods   al,BYTE PTR ds:[esi]
  41396f:	addr16 stc 
  413971:	jmp    FWORD PTR [edx+0x1e1b3572]
  413977:	(bad)  
  413978:	mov    esp,0xebc34316
  41397d:	pop    ds
  41397e:	outs   dx,BYTE PTR ds:[esi]
  41397f:	fwait
  413980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413981:	enter  0x47ee,0xb7
  413985:	jmp    0xc6165bd9
  41398a:	cli    
  41398b:	mov    si,0xc926
  41398f:	adc    dh,0x6e
  413992:	aam    0x63
  413994:	jnp    0x41395a
  413996:	and    ebp,DWORD PTR [esi+0x36]
  413999:	xlat   BYTE PTR ds:[ebx]
  41399a:	adc    bh,BYTE PTR ds:[ebx]
  41399d:	fcomi  st,st(6)
  41399f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a0:	js     0x4139f4
  4139a2:	cmp    DWORD PTR [ebx-0x54],edi
  4139a5:	ret    
  4139a6:	xchg   esp,eax
  4139a7:	test   DWORD PTR [ebp+esi*4+0x2a6cfb12],eax
  4139ae:	mov    eax,ds:0x426b765b
  4139b3:	fidivr DWORD PTR [edi-0x71]
  4139b6:	stc    
  4139b7:	mov    ebx,0x3d62fee0
  4139bc:	mov    dl,0x9d
  4139be:	mov    eax,0xf22358c3
  4139c3:	jns    0x4139e1
  4139c5:	xchg   edi,eax
  4139c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c7:	rcl    DWORD PTR [edx],1
  4139c9:	sub    DWORD PTR [ebp+eax*8+0x65df9568],ecx
  4139d0:	cwde   
  4139d1:	sbb    BYTE PTR [ebx+edx*1+0x33a910c],ah
  4139d8:	les    ebp,FWORD PTR [eax]
  4139da:	jnp    0x413a50
  4139dc:	jp     0x4139da
  4139de:	repnz xchg ecx,eax
  4139e0:	(bad)  [ebx]
  4139e2:	mov    ebp,0xaf3f1a93
  4139e7:	in     al,0x88
  4139e9:	lahf   
  4139ea:	or     BYTE PTR [ecx-0x46],bh
  4139ed:	sub    BYTE PTR [ebp-0x1cd54e7d],bh
  4139f3:	adc    BYTE PTR [edx-0x53],dh
  4139f6:	fwait
  4139f7:	xor    esp,DWORD PTR [ecx]
  4139f9:	and    dh,BYTE PTR [ebp-0x6c2e1baf]
  4139ff:	sbb    edi,DWORD PTR [ecx]
  413a01:	imul   eax
  413a03:	std    
  413a04:	push   esi
  413a05:	out    dx,eax
  413a06:	ficom  WORD PTR [edx-0x6]
  413a09:	xor    ah,cl
  413a0b:	add    ebx,DWORD PTR [esi-0x7911f3c3]
  413a11:	aam    0x7
  413a13:	cld    
  413a14:	jno    0x4139a0
  413a16:	aam    0xce
  413a18:	and    bh,ch
  413a1a:	mov    DWORD PTR [edi+0x6e],ebp
  413a1d:	ss ss nop
  413a20:	push   esp
  413a21:	mov    dl,0x35
  413a23:	jp     0x4139eb
  413a25:	ins    BYTE PTR es:[edi],dx
  413a26:	(bad)  
  413a27:	mov    cl,0xf5
  413a29:	lahf   
  413a2a:	cld    
  413a2b:	xchg   esp,eax
  413a2c:	pop    edi
  413a2d:	cs inc eax
  413a2f:	and    eax,0x2e28dab4
  413a34:	push   ecx
  413a35:	pop    ss
  413a36:	push   ds
  413a37:	mov    cl,0xa7
  413a39:	jbe    0x413a12
  413a3b:	and    ebp,DWORD PTR [ebx]
  413a3d:	pop    es
  413a3e:	pop    ebx
  413a3f:	aad    0xe3
  413a41:	popf   
  413a42:	fidivr WORD PTR [ecx+0x505e9cb3]
  413a48:	retf   0xdc83
  413a4b:	enter  0x8526,0xcd
  413a4f:	in     eax,0xa2
  413a51:	scas   al,BYTE PTR es:[edi]
  413a52:	ret    
  413a53:	jo     0x413a0e
  413a55:	add    eax,0x84195be4
  413a5a:	out    dx,eax
  413a5b:	mov    ebx,0x90a9ac4b
  413a60:	or     edx,DWORD PTR [edi]
  413a62:	mov    edi,0xae6983d5
  413a67:	push   0x3a486e49
  413a6c:	jnp    0x413a82
  413a6e:	and    ecx,DWORD PTR [ecx]
  413a70:	sub    DWORD PTR [eax],eax
  413a72:	xor    DWORD PTR [esp+esi*8],edx
  413a75:	push   edx
  413a76:	inc    ebp
  413a77:	xor    bh,dh
  413a79:	jp     0x413a10
  413a7b:	adc    al,0xbe
  413a7d:	(bad)  
  413a7e:	fcomi  st,st(2)
  413a80:	pop    ebx
  413a81:	add    ch,BYTE PTR [edi]
  413a83:	dec    ebp
  413a84:	or     al,0xc5
  413a86:	int3   
  413a87:	cmp    eax,0x9d87386c
  413a8c:	xchg   BYTE PTR [edi+0x7e0c0d1f],dh
  413a92:	ror    DWORD PTR [esi],0xa3
  413a95:	fimul  WORD PTR [esi+edi*1+0x3339ce4e]
  413a9c:	mov    eax,0xf84bcfff
  413aa1:	add    DWORD PTR [edx+0x4f],eax
  413aa4:	imul   edi,DWORD PTR [ebp-0x19],0xc42a04b2
  413aab:	sbb    ch,BYTE PTR [ebx+0x5eda64a4]
  413ab1:	loop   0x413a8a
  413ab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab4:	and    eax,0x67e8953a
  413ab9:	dec    eax
  413aba:	dec    ebp
  413abb:	pusha  
  413abc:	shl    DWORD PTR [esp+edi*8+0x6c3f3f23],1
  413ac3:	lds    esp,FWORD PTR [ecx]
  413ac5:	lods   al,BYTE PTR ds:[esi]
  413ac6:	push   esp
  413ac7:	push   edx
  413ac8:	stos   DWORD PTR es:[edi],eax
  413ac9:	or     bh,BYTE PTR ds:0x49083405
  413acf:	enter  0xea87,0x7f
  413ad3:	jo     0x413b06
  413ad5:	aam    0xa9
  413ad7:	mov    eax,eax
  413ad9:	xor    bl,cl
  413adb:	lea    ecx,[esi-0x5a]
  413ade:	cmp    eax,0x4574e254
  413ae3:	dec    esp
  413ae4:	fdivr  st(3),st
  413ae6:	mov    dh,0xc7
  413ae8:	add    al,0xd9
  413aea:	jg     0x413ab8
  413aec:	add    al,0x14
  413aee:	cmp    bh,0x69
  413af1:	aas    
  413af2:	call   0x8280:0x5716ef13
  413af9:	out    0xc9,al
  413afb:	mov    ds:0xcc10744c,al
  413b00:	out    0xe4,al
  413b02:	aam    0x3e
  413b04:	add    edx,ecx
  413b06:	ins    BYTE PTR es:[edi],dx
  413b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b08:	data16 outs dx,BYTE PTR ds:[esi]
  413b0a:	outs   dx,BYTE PTR ds:[esi]
  413b0b:	mov    bh,0x55
  413b0d:	pop    edx
  413b0e:	mov    gs,WORD PTR [edi+eiz*2+0x2a]
  413b12:	mov    dl,0x3a
  413b14:	ret    
  413b15:	and    cl,bh
  413b17:	add    eax,0xdaec3347
  413b1c:	repnz test ah,0x30
  413b20:	cmp    edi,esi
  413b22:	addr16 add al,0x58
  413b25:	aaa    
  413b26:	outs   dx,BYTE PTR ds:[esi]
  413b27:	fstp   DWORD PTR [edx+0x69]
  413b2a:	ror    BYTE PTR [ebp-0x19f87fd6],0x33
  413b31:	sbb    eax,0x5bf08562
  413b36:	push   0x4c
  413b38:	fsub   st(5),st
  413b3a:	dec    ebx
  413b3b:	outs   dx,DWORD PTR ds:[esi]
  413b3c:	jmp    0x3eab:0x7465619f
  413b43:	mov    edi,0x384b3cbb
  413b48:	mov    eax,ds:0x2b618477
  413b4d:	mov    sp,0xe86
  413b51:	sub    al,0x5f
  413b53:	mov    bl,BYTE PTR [ebx+0x18]
  413b56:	int3   
  413b57:	xor    BYTE PTR [ecx-0x286a0119],al
  413b5d:	jl     0x413bc3
  413b5f:	into   
  413b60:	mov    ah,0x7b
  413b62:	in     al,dx
  413b63:	mov    esi,0xc3c0a35a
  413b68:	cmp    bl,BYTE PTR [edx+0x47]
  413b6b:	jae    0x413b5b
  413b6d:	pop    esi
  413b6e:	push   ds
  413b6f:	push   esp
  413b70:	mov    cl,0xee
  413b72:	fdiv   st(1),st
  413b74:	or     eax,0xd41070e0
  413b79:	dec    ecx
  413b7a:	out    dx,al
  413b7b:	mov    ah,0x88
  413b7d:	add    ebp,DWORD PTR [ecx-0x3a2a642b]
  413b83:	inc    edi
  413b84:	inc    edi
  413b85:	xchg   esi,eax
  413b86:	js     0x413b42
  413b88:	add    dl,BYTE PTR [esi-0x32]
  413b8b:	xlat   BYTE PTR ds:[ebx]
  413b8c:	push   ebp
  413b8d:	rcr    DWORD PTR [eax+0x19cb54f6],1
  413b93:	fwait
  413b94:	nop
  413b95:	pop    eax
  413b96:	outs   dx,BYTE PTR ds:[esi]
  413b97:	add    eax,esp
  413b99:	jno    0x413b9f
  413b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9c:	aaa    
  413b9d:	sbb    eax,0x31f174be
  413ba2:	fs out dx,eax
  413ba4:	and    al,0xcb
  413ba6:	scas   eax,DWORD PTR es:[edi]
  413ba7:	pusha  
  413ba8:	sub    BYTE PTR [ebx+0x46],dl
  413bab:	inc    edi
  413bac:	repz xchg ebp,eax
  413bae:	push   0xd6bb540
  413bb3:	enter  0x2f96,0x3f
  413bb7:	mov    al,BYTE PTR [eax]
  413bb9:	and    edi,DWORD PTR [ebx]
  413bbb:	push   eax
  413bbc:	push   ebx
  413bbd:	in     eax,dx
  413bbe:	(bad)  
  413bbf:	pop    ecx
  413bc0:	outs   dx,DWORD PTR ds:[esi]
  413bc1:	push   edi
  413bc2:	out    0xaa,eax
  413bc4:	jecxz  0x413be2
  413bc6:	xchg   esi,eax
  413bc7:	push   cs
  413bc8:	mov    dl,0xfe
  413bca:	ror    esp,1
  413bcc:	aas    
  413bcd:	inc    ebp
  413bce:	mov    ds:0xf01c8b3f,eax
  413bd3:	rol    BYTE PTR [esi+0x65919774],0x24
  413bda:	jg     0x413b96
  413bdc:	or     BYTE PTR [edi+edx*8+0x4a],ah
  413be0:	pop    eax
  413be1:	mov    ah,0xa1
  413be3:	mov    ebx,0x1575aaa
  413be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413be9:	call   0x4bdd02fa
  413bee:	jmp    0x413c3b
  413bf0:	add    bh,BYTE PTR [ebp+edi*2+0x72]
  413bf4:	and    al,0x92
  413bf6:	push   ebx
  413bf7:	arpl   WORD PTR [eax-0x34],dx
  413bfa:	push   edx
  413bfb:	and    edx,edi
  413bfd:	call   0x514fa9c4
  413c02:	dec    esi
  413c03:	dec    ebp
  413c04:	adc    DWORD PTR [ecx],ebp
  413c06:	dec    esp
  413c07:	jp     0x413bc3
  413c09:	xchg   edx,eax
  413c0a:	add    BYTE PTR [esi],cl
  413c0c:	jmp    0x413baf
  413c0e:	sahf   
  413c0f:	adc    DWORD PTR [ecx+eax*2-0x3c5ad0b6],ecx
  413c16:	dec    esp
  413c17:	xchg   ebp,eax
  413c18:	loope  0x413c95
  413c1a:	push   0x525aa343
  413c1f:	test   eax,0x3fcfaf18
  413c24:	add    DWORD PTR [ecx],esp
  413c26:	mov    edi,esi
  413c28:	call   0xb922:0xe8ff56f1
  413c2f:	sub    al,0x6a
  413c31:	cld    
  413c32:	call   0x6574d36b
  413c37:	pop    ss
  413c38:	mov    ebp,0xbc37034b
  413c3d:	inc    ecx
  413c3e:	jmp    0x413c24
  413c40:	test   BYTE PTR [edx-0x4f],0x8b
  413c44:	mov    dh,0x32
  413c46:	(bad)  
  413c48:	clc    
  413c49:	shl    BYTE PTR [esp+ebx*2-0x5dac1a6a],cl
  413c50:	sbb    bl,BYTE PTR [edi+0x10]
  413c53:	popa   
  413c54:	mov    esi,0x31e78cb8
  413c59:	shl    BYTE PTR [edx-0x401f5a10],0xd6
  413c60:	stos   BYTE PTR es:[edi],al
  413c61:	xor    bh,dh
  413c63:	dec    esi
  413c64:	mov    BYTE PTR [eax],cl
  413c66:	ja     0x413c87
  413c68:	sbb    DWORD PTR [edx-0x39ce49a6],0xe92b1eaf
  413c72:	leave  
  413c73:	rol    ebx,cl
  413c75:	and    ch,al
  413c77:	xor    edx,DWORD PTR [edx]
  413c79:	add    ebx,eax
  413c7b:	pop    eax
  413c7c:	inc    ebx
  413c7d:	sub    DWORD PTR ds:[eax+0x9],eax
  413c81:	sub    ecx,DWORD PTR [esi-0x1d]
  413c84:	jns    0x413c0e
  413c86:	loope  0x413c4e
  413c88:	xchg   ebp,eax
  413c89:	sub    BYTE PTR [ebp+edi*8-0x37],ah
  413c8d:	clc    
  413c8e:	(bad)  [ebp+0x7a]
  413c91:	pop    esi
  413c92:	and    BYTE PTR [esi-0x5b],bl
  413c95:	jp     0x413cef
  413c97:	xor    BYTE PTR [edi+0x1f],al
  413c9a:	pop    esi
  413c9b:	lods   eax,DWORD PTR ds:[esi]
  413c9c:	dec    eax
  413c9d:	shl    ebx,0xab
  413ca0:	retf   0x271e
  413ca3:	pop    edi
  413ca4:	push   esi
  413ca5:	dec    edx
  413ca6:	mov    eax,0x4dadf8d5
  413cab:	fsubr  QWORD PTR [edi-0x64b112dc]
  413cb1:	loope  0x413cf5
  413cb3:	adc    BYTE PTR [esi],ch
  413cb5:	ret    0xa78
  413cb8:	sub    al,0x80
  413cba:	mov    cs,WORD PTR [edi-0x7e]
  413cbd:	inc    esi
  413cbe:	std    
  413cbf:	inc    esp
  413cc0:	and    al,0xf8
  413cc2:	sub    al,cl
  413cc4:	pop    esi
  413cc5:	push   es
  413cc6:	xchg   edx,eax
  413cc7:	jns    0x413ccd
  413cc9:	into   
  413cca:	mov    BYTE PTR [ebx+0x1657e7bc],bh
  413cd0:	push   esp
  413cd1:	or     al,0xa9
  413cd3:	jbe    0x413cbf
  413cd5:	xor    cl,BYTE PTR [ebx+0x2f292330]
  413cdb:	pop    ecx
  413cdc:	xor    al,0x7d
  413cde:	dec    eax
  413cdf:	adc    DWORD PTR [ecx],ebx
  413ce1:	ret    
  413ce2:	lahf   
  413ce3:	into   
  413ce4:	rep outs dx,BYTE PTR ds:[esi]
  413ce6:	in     eax,0x48
  413ce8:	xor    esi,DWORD PTR [eax+edi*8+0x6130b74]
  413cef:	sar    DWORD PTR [edx-0x310fd287],0x2d
  413cf6:	bnd jns 0x413d66
  413cf9:	add    al,BYTE PTR [esi-0x2ec3cb3f]
  413cff:	scas   al,BYTE PTR es:[edi]
  413d00:	push   ds
  413d01:	fcomp  QWORD PTR [ebp+0x32]
  413d04:	imul   edi,DWORD PTR [esi+0x25],0xffffff80
  413d08:	ins    DWORD PTR es:[edi],dx
  413d09:	iret   
  413d0a:	inc    edx
  413d0b:	imul   ebx,DWORD PTR [edi],0xe3580f13
  413d11:	or     DWORD PTR [ebx+0x696f0eb1],ebx
  413d17:	adc    edi,DWORD PTR [eax+0x67]
  413d1a:	ins    DWORD PTR es:[edi],dx
  413d1b:	add    eax,0x2733a721
  413d20:	stc    
  413d21:	scas   eax,DWORD PTR es:[edi]
  413d22:	ret    
  413d23:	enter  0x2e0f,0xfe
  413d27:	cld    
  413d28:	mov    WORD PTR ds:0x7aef01a3,?
  413d2e:	cmp    eax,0x84339937
  413d33:	cmp    al,0x56
  413d35:	lea    ecx,[edx-0x53]
  413d38:	cdq    
  413d39:	jmp    0x413d5c
  413d3b:	mov    ebp,0xea4a3b82
  413d40:	dec    ebx
  413d41:	call   0x5a46:0x87bb77b5
  413d48:	js     0x413ccd
  413d4a:	sar    DWORD PTR [esi-0x1f],cl
  413d4d:	(bad)  
  413d4f:	js     0x413d5f
  413d51:	dec    esp
  413d52:	xchg   ecx,eax
  413d53:	retf   
  413d54:	xor    DWORD PTR [ebx+0x10],eax
  413d57:	js     0x413d08
  413d59:	shl    BYTE PTR [eax+0x784120bf],cl
  413d5f:	retf   0x306e
  413d62:	jns    0x413dbe
  413d64:	retf   0x7067
  413d67:	mov    DWORD PTR [edi+0x70b17085],esp
  413d6d:	xor    al,0x32
  413d6f:	mov    BYTE PTR [esi+0x4248eb05],ch
  413d75:	jb     0x413dd0
  413d77:	stos   DWORD PTR es:[edi],eax
  413d78:	xchg   DWORD PTR [ebx-0x6e],ebx
  413d7b:	or     esp,DWORD PTR [ecx+0x6dc74c63]
  413d81:	call   DWORD PTR [ecx+ebp*2]
  413d84:	je     0x413d07
  413d86:	dec    ebp
  413d87:	xor    DWORD PTR [edx+ebx*1+0x5bbbc14c],esi
  413d8e:	in     eax,dx
  413d8f:	jecxz  0x413d16
  413d91:	ret    0xa54e
  413d94:	or     eax,0x53cf51eb
  413d99:	nop
  413d9a:	mov    eax,0x977dd2a
  413d9f:	cdq    
  413da0:	push   edx
  413da1:	iret   
  413da2:	jne    0x413dc9
  413da4:	xchg   ebx,eax
  413da5:	ins    BYTE PTR es:[edi],dx
  413da6:	ror    DWORD PTR [esi+0x5d37b139],0x64
  413dad:	bound  ebx,QWORD PTR [ebx-0x2a2e51d3]
  413db3:	rol    DWORD PTR [ebx+0x4c],cl
  413db6:	and    DWORD PTR [eax+eiz*8-0x48],ebx
  413dba:	loop   0x413d5e
  413dbc:	imul   esp,DWORD PTR [ebp-0x80],0x473bde26
  413dc3:	inc    ebp
  413dc4:	retf   
  413dc5:	or     DWORD PTR [ecx-0x5905cbc],eax
  413dcb:	les    esi,FWORD PTR [ebp-0x9]
  413dce:	adc    dh,BYTE PTR [eax-0x5e]
  413dd1:	mov    ebp,0x277f94a0
  413dd6:	pop    esp
  413dd7:	shl    BYTE PTR [ebx+0x37],0x8b
  413ddb:	cmp    eax,0x13d4e193
  413de0:	test   bl,dh
  413de2:	push   0x33
  413de4:	xor    DWORD PTR [esi],0xe0fb43ce
  413dea:	jns    0x413e2e
  413dec:	jge    0x413e45
  413dee:	test   dh,0x2f
  413df1:	jmp    0x1f07e7af
  413df6:	jp     0x413e48
  413df8:	(bad)  
  413df9:	pusha  
  413dfa:	imul   edi,DWORD PTR [esi+0x5f99e42],0xfffffff9
  413e01:	bswap  esp
  413e03:	cmp    ch,BYTE PTR [edx-0x7ab82c33]
  413e09:	mov    bl,0x43
  413e0b:	sub    ebx,DWORD PTR [eax]
  413e0d:	rol    BYTE PTR ds:[ebp+0x69d5eeea],0xc9
  413e15:	pop    esi
  413e16:	push   edi
  413e17:	sub    edx,DWORD PTR [esi]
  413e19:	jbe    0x413df5
  413e1b:	mov    bh,0xf1
  413e1d:	fstp   QWORD PTR [edi+0x13664886]
  413e23:	push   ebx
  413e24:	jge    0x413dcd
  413e26:	sbb    DWORD PTR [edi+0x31a3df3a],ebp
  413e2c:	xor    bh,BYTE PTR [edx]
  413e2e:	sub    ebp,DWORD PTR [ebx-0x70]
  413e31:	push   esi
  413e32:	sbb    DWORD PTR [ebp+0x20],0xc
  413e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e37:	inc    ebp
  413e38:	sub    al,0xa8
  413e3a:	rcl    DWORD PTR [ebp+0x5b67826f],1
  413e40:	jae    0x413e0c
  413e42:	mov    ch,0x3d
  413e44:	push   edi
  413e45:	fnstcw WORD PTR [edx]
  413e47:	ins    BYTE PTR es:[edi],dx
  413e48:	push   ebp
  413e49:	fist   WORD PTR [esi]
  413e4b:	xlat   BYTE PTR ds:[ebx]
  413e4c:	push   ss
  413e4d:	cmp    al,0x21
  413e4f:	ror    DWORD PTR [edx+0x5d105bc0],0x11
  413e56:	sub    ebx,DWORD PTR [edi+0x22c856d0]
  413e5c:	inc    eax
  413e5d:	jp     0x413ed3
  413e5f:	(bad)
  413e63:	adc    esp,ecx
  413e65:	cli    
  413e66:	sub    ebx,edx
  413e68:	dec    eax
  413e69:	inc    esi
  413e6a:	out    0x63,eax
  413e6c:	in     al,dx
  413e6d:	repnz inc ecx
  413e6f:	push   0x0
  413e71:	fsub   DWORD PTR [ebx+edx*4-0x3624e988]
  413e78:	push   esp
  413e79:	scas   al,BYTE PTR es:[edi]
  413e7a:	ror    BYTE PTR [edx+0x12],cl
  413e7d:	adc    ebx,DWORD PTR [eax-0x53]
  413e80:	xor    al,0x5f
  413e82:	(bad)  
  413e85:	sub    al,0x13
  413e87:	in     eax,0xd5
  413e89:	ror    BYTE PTR [esi-0x53],0x7
  413e8d:	ss cld 
  413e8f:	mov    DWORD PTR [esi],0x1b01f5c7
  413e95:	pop    esi
  413e96:	sar    bl,0xa9
  413e99:	popa   
  413e9a:	addr16 xchg ebp,eax
  413e9c:	sbb    BYTE PTR [eax],dl
  413e9e:	push   ds
  413e9f:	mov    DWORD PTR [eax],ebx
  413ea1:	ins    DWORD PTR es:[edi],dx
  413ea2:	pop    ss
  413ea3:	test   BYTE PTR [ecx-0x2793ff2b],0x6c
  413eaa:	in     al,0x9b
  413eac:	enter  0xff8e,0xb6
  413eb0:	xchg   esp,eax
  413eb1:	jb     0x413e97
  413eb3:	ds inc ebx
  413eb5:	push   0xd9fd0901
  413eba:	mov    edi,fs
  413ebc:	fcomp  QWORD PTR [ebx+0x3d]
  413ebf:	ror    DWORD PTR [edi+0xf],cl
  413ec2:	adc    eax,0x24d0467e
  413ec7:	scas   eax,DWORD PTR es:[edi]
  413ec8:	dec    ebp
  413ec9:	xor    DWORD PTR [edi+edi*1],edi
  413ecc:	mov    edx,0x72f2d613
  413ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ed2:	add    DWORD PTR [ecx-0x5e],0x3a
  413ed6:	jge    0x413e69
  413ed8:	lods   al,BYTE PTR ds:[esi]
  413ed9:	mov    ebx,edx
  413edb:	scas   al,BYTE PTR es:[edi]
  413edc:	loopne 0x413e70
  413ede:	push   eax
  413edf:	enter  0xe398,0x45
  413ee3:	dec    esi
  413ee4:	pop    ebp
  413ee5:	es push 0xfffffff9
  413ee8:	scas   eax,DWORD PTR es:[edi]
  413ee9:	push   ebp
  413eea:	pusha  
  413eeb:	pusha  
  413eec:	js     0x413e97
  413eee:	mov    eax,0xed9fffb0
  413ef3:	mov    bh,0xbe
  413ef5:	rcr    BYTE PTR [esi],1
  413ef7:	push   ecx
  413ef8:	mov    ds:0x6ad36f96,al
  413efd:	dec    edi
  413efe:	scas   eax,DWORD PTR es:[edi]
  413eff:	call   0xcd8f:0xf054965
  413f06:	repnz sub ah,BYTE PTR [edx]
  413f09:	fisttp QWORD PTR [edx]
  413f0b:	lods   al,BYTE PTR ds:[esi]
  413f0c:	fnstenv [eax+0x1522256f]
  413f12:	mov    bh,0xc0
  413f14:	jmp    0x413ebe
  413f16:	sti    
  413f17:	xor    DWORD PTR [ebx-0x118825a7],edi
  413f1d:	push   cs
  413f1e:	bound  eax,QWORD PTR [esi-0x19d03ef2]
  413f24:	shl    DWORD PTR ds:0x9aed7e55,cl
  413f2a:	fsub   st,st(5)
  413f2c:	xlat   BYTE PTR ds:[ebx]
  413f2d:	sub    al,0xe3
  413f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f30:	ror    BYTE PTR [edx+ecx*1-0x6ff2830c],cl
  413f37:	dec    ebp
  413f38:	push   edi
  413f39:	daa    
  413f3a:	shr    BYTE PTR [ebp-0x647ac89a],1
  413f40:	dec    ecx
  413f41:	call   0x6c91:0x1aac1d5a
  413f48:	cwde   
  413f49:	loope  0x413f4e
  413f4b:	pusha  
  413f4c:	ret    
  413f4d:	mov    dl,BYTE PTR [ebp+0x58]
  413f50:	pop    ss
  413f51:	pop    ds
  413f52:	jb     0x413f72
  413f54:	lods   eax,DWORD PTR ds:[esi]
  413f55:	lds    ebx,FWORD PTR [ebp+0x45]
  413f58:	mov    BYTE PTR [edx-0x56],dl
  413f5b:	or     eax,0x12ee3ac5
  413f60:	ss retf 
  413f62:	mov    dl,dh
  413f64:	mov    ah,0xfb
  413f66:	popa   
  413f67:	add    ah,BYTE PTR [edx]
  413f69:	add    eax,0x18ca34aa
  413f6e:	adc    BYTE PTR [edi+0x6ded8b0d],0x59
  413f75:	cmp    BYTE PTR [edx-0x12732926],dh
  413f7b:	cmc    
  413f7c:	das    
  413f7d:	lods   al,BYTE PTR ds:[esi]
  413f7e:	push   eax
  413f7f:	push   ebx
  413f80:	mov    ah,0xcc
  413f82:	dec    ebp
  413f83:	and    eax,0x85949e0e
  413f88:	mov    BYTE PTR [esi],ch
  413f8a:	mov    eax,0x15c620ee
  413f8f:	mov    bh,0xec
  413f91:	cmp    edx,DWORD PTR [edi-0x44]
  413f94:	add    eax,DWORD PTR [ecx]
  413f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f97:	inc    edx
  413f98:	daa    
  413f99:	xchg   ebp,eax
  413f9a:	push   edx
  413f9b:	xor    al,0x7e
  413f9d:	add    eax,0xed7b4dcf
  413fa2:	inc    edx
  413fa3:	into   
  413fa4:	pop    ebx
  413fa5:	push   0xf
  413fa7:	in     al,dx
  413fa8:	lods   eax,DWORD PTR ds:[esi]
  413fa9:	sub    eax,0xc8ba6901
  413fae:	jecxz  0x413f67
  413fb0:	mov    ah,0xf4
  413fb2:	inc    esp
  413fb3:	xor    edi,DWORD PTR [eax]
  413fb5:	ror    BYTE PTR ds:0x2756d991,0x22
  413fbc:	sub    cl,BYTE PTR [ebp-0x72]
  413fbf:	push   ds
  413fc0:	jne    0x413f6f
  413fc2:	jle    0x414015
  413fc4:	mov    esp,ds
  413fc6:	xor    DWORD PTR [eax+0x6a185ea6],0x6d
  413fcd:	jg     0x414006
  413fcf:	inc    ebx
  413fd0:	jmp    0x577fa4d0
  413fd5:	mov    esp,0x40926ea
  413fda:	xlat   BYTE PTR ds:[ebx]
  413fdb:	cdq    
  413fdc:	pop    ecx
  413fdd:	mov    ds:0xeaed2653,eax
  413fe2:	sbb    al,0x22
  413fe4:	xor    BYTE PTR [eax-0xbfe681c],0xa6
  413feb:	sbb    ax,0x934e
  413fef:	ja     0x413fe1
  413ff1:	out    0xf,al
  413ff3:	repnz fcomi st,st(0)
  413ff6:	mov    bl,0xaf
  413ff8:	imul   ebp,eax,0x111f9b53
  413ffe:	mov    ah,0xe4
  414000:	cmp    bh,bh
  414002:	sub    eax,esi
  414004:	dec    ebx
  414005:	mov    ch,0xbb
  414007:	lahf   
  414008:	inc    eax
  414009:	mov    eax,ds:0xb813050c
  41400e:	push   edx
  41400f:	sbb    al,0x23
  414011:	aad    0xb7
  414013:	mov    cl,0xf8
  414015:	aas    
  414016:	sbb    DWORD PTR [ebx],ebp
  414018:	pop    edi
  414019:	sbb    eax,0x5fa9b01c
  41401e:	sub    eax,0xa19f132e
  414023:	arpl   WORD PTR [esi-0x4f],bx
  414026:	(bad)  
  414027:	mov    cs,WORD PTR [esi+0x53e33a40]
  41402d:	or     bl,BYTE PTR [ebp-0x7e]
  414030:	add    ch,BYTE PTR [ecx+0x8]
  414033:	push   0xffffffde
  414035:	rep outs dx,BYTE PTR ds:[esi]
  414037:	(bad)  
  414038:	jmp    0x4140b9
  41403a:	pop    ebp
  41403b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41403c:	fs cmp al,0x55
  41403f:	ror    DWORD PTR [edx+esi*8-0x2b314323],1
  414046:	jo     0x41402c
  414048:	fwait
  414049:	adc    BYTE PTR [edi+0x18],dh
  41404c:	or     al,0xde
  41404e:	(bad)  
  41404f:	fidivr WORD PTR es:[edx-0x65d1c6ef]
  414056:	jne    0x414024
  414058:	popa   
  414059:	test   DWORD PTR [esi],0xa45fcb34
  41405f:	(bad)  
  414060:	pushf  
  414061:	sbb    esp,edx
  414063:	pop    DWORD PTR [esp+edi*1-0x3]
  414067:	or     eax,0xa1a60622
  41406c:	inc    esi
  41406d:	shr    BYTE PTR [esi+0x6c],cl
  414070:	call   0x42ddef42
  414075:	push   ebx
  414076:	cmp    BYTE PTR [eax+0x21],dl
  414079:	sbb    cl,BYTE PTR [esi]
  41407b:	popf   
  41407c:	inc    ebx
  41407d:	jns    0x414060
  41407f:	stos   BYTE PTR es:[edi],al
  414080:	inc    edi
  414081:	mul    DWORD PTR [eax]
  414083:	icebp  
  414084:	pushf  
  414085:	mov    ch,0xfb
  414087:	out    dx,eax
  414088:	push   ebx
  414089:	push   0xffffffdc
  41408b:	div    DWORD PTR [ebx]
  41408d:	jb     0x4140e6
  41408f:	jp     0x414023
  414091:	lgs    esp,FWORD PTR [edi]
  414094:	sbb    eax,0xa1f0ad78
  414099:	xchg   ah,ch
  41409b:	pop    ebp
  41409c:	loope  0x4140c2
  41409e:	(bad)  
  41409f:	mul    ch
  4140a1:	stc    
  4140a2:	arpl   WORD PTR [ecx-0x8b529ea],si
  4140a8:	nop
  4140a9:	jmp    0xcf98:0x112f8813
  4140b0:	mov    ebx,0x592f30f3
  4140b5:	ret    0x8100
  4140b8:	ja     0x41404c
  4140ba:	ins    DWORD PTR es:[edi],dx
  4140bb:	mov    dl,BYTE PTR [eax]
  4140bd:	(bad)  
  4140be:	jecxz  0x4140f2
  4140c0:	sub    bl,ah
  4140c2:	inc    ebp
  4140c3:	stc    
  4140c4:	push   es
  4140c5:	(bad)  
  4140c6:	sub    al,0xeb
  4140c8:	in     al,0xca
  4140ca:	fidiv  DWORD PTR [edx+0x28]
  4140cd:	imul   ebp,DWORD PTR [edx],0x3d
  4140d0:	mov    ebp,0xe2b88d16
  4140d5:	add    ebx,esi
  4140d7:	mov    ebx,0xd7575941
  4140dc:	pop    ss
  4140dd:	add    BYTE PTR [ebp+ebx*2+0x68b6df3],ch
  4140e4:	sbb    al,0xe6
  4140e6:	aas    
  4140e7:	jne    0x41409d
  4140e9:	pushf  
  4140ea:	je     0x4140be
  4140ec:	mov    ds:0x7270f55b,eax
  4140f1:	retf   
  4140f2:	sub    eax,0x673a0d81
  4140f7:	shr    BYTE PTR [ecx+ebx*8-0xe],0xa3
  4140fc:	xor    al,0x35
  4140fe:	cmp    al,0x3e
  414100:	imul   edi,DWORD PTR [ebx+0x57],0xc34bc818
  414107:	jecxz  0x4140d9
  414109:	shl    BYTE PTR [ebp-0x38],1
  41410c:	inc    edi
  41410d:	mov    eax,0x8345693a
  414112:	xchg   edi,eax
  414113:	inc    eax
  414114:	daa    
  414115:	jns    0x414176
  414117:	in     eax,dx
  414118:	shr    ebx,1
  41411a:	ds jb  0x41418b
  41411d:	adc    al,0xa2
  41411f:	jmp    DWORD PTR [ecx+0x4a598880]
  414125:	cmp    edx,edi
  414127:	and    DWORD PTR [edi],ebx
  414129:	pushf  
  41412a:	pop    es
  41412b:	and    BYTE PTR [edi+0x223b2601],dh
  414131:	and    al,cl
  414133:	scas   eax,DWORD PTR es:[edi]
  414134:	pusha  
  414135:	jmp    0x3f8d:0x96c935ff
  41413c:	push   ebx
  41413d:	mov    ss,edi
  41413f:	(bad)  
  414140:	mov    edi,0x5a154adc
  414145:	pop    esp
  414146:	es xchg ecx,eax
  414148:	fwait
  414149:	outs   dx,BYTE PTR ds:[esi]
  41414a:	(bad)  
  41414b:	int    0x48
  41414d:	sar    DWORD PTR es:[ebx],0xab
  414151:	ficom  WORD PTR [ebx-0x23]
  414154:	mov    ds:0xfa376202,al
  414159:	repz int3 
  41415b:	jne    0x414166
  41415d:	adc    eax,0xbe850cfe
  414162:	xor    al,0xd9
  414164:	jl     0x414117
  414166:	fnstenv [edx-0x76]
  414169:	add    eax,DWORD PTR [ebp+0x39]
  41416c:	add    al,0x72
  41416e:	push   cs
  41416f:	je     0x414117
  414171:	cdq    
  414172:	jb     0x41417c
  414174:	inc    esi
  414175:	xchg   esp,eax
  414176:	mov    edx,0xaad267f7
  41417b:	and    dh,ah
  41417d:	xchg   esp,eax
  41417e:	lods   eax,DWORD PTR ds:[esi]
  41417f:	and    al,0xfc
  414181:	fisubr DWORD PTR [esi-0x2d]
  414184:	repz jge 0x414141
  414187:	shl    BYTE PTR [esi-0x6f89ef77],cl
  41418d:	dec    ebx
  41418e:	shl    BYTE PTR [esi],cl
  414190:	jne    0x4141e4
  414192:	lock aaa 
  414194:	iret   
  414195:	je     0x4141b3
  414197:	pop    esp
  414198:	jmp    ebp
  41419a:	popf   
  41419b:	push   es
  41419c:	ror    BYTE PTR [edi-0x5c],cl
  41419f:	inc    eax
  4141a0:	loop   0x41415e
  4141a2:	mov    ch,0x5e
  4141a4:	retf   0xdc04
  4141a7:	sub    BYTE PTR [eax],al
  4141a9:	xor    al,0xa9
  4141ab:	dec    esp
  4141ac:	and    eax,0x53a42053
  4141b1:	inc    BYTE PTR [ebx]
  4141b3:	in     eax,dx
  4141b4:	in     al,0x54
  4141b6:	xchg   esp,eax
  4141b7:	pushf  
  4141b8:	pop    edi
  4141b9:	or     BYTE PTR [edi+edx*8+0x46],al
  4141bd:	out    dx,al
  4141be:	pop    eax
  4141bf:	call   0x86b40a85
  4141c4:	leave  
  4141c5:	shl    BYTE PTR [edx+ebp*8-0x6d],1
  4141c9:	outs   dx,BYTE PTR ds:[esi]
  4141ca:	cs inc esi
  4141cc:	(bad)  
  4141cd:	and    ah,BYTE PTR [edx]
  4141cf:	jmp    0x6b8322f0
  4141d4:	adc    DWORD PTR [edx],ebp
  4141d6:	mov    ds:0xe911f9f1,al
  4141db:	pop    esi
  4141dc:	fmul   st,st(3)
  4141de:	push   es
  4141df:	jae    0x414235
  4141e1:	and    bh,BYTE PTR [eax+0x76]
  4141e4:	scas   al,BYTE PTR es:[edi]
  4141e5:	mov    bl,0x1c
  4141e7:	jb     0x41417b
  4141e9:	aam    0x3
  4141eb:	xor    ebx,esi
  4141ed:	xchg   esp,eax
  4141ee:	or     al,0x77
  4141f0:	push   ds
  4141f1:	cs cwde 
  4141f3:	dec    ebx
  4141f4:	xchg   ebx,eax
  4141f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141f6:	sub    edx,eax
  4141f8:	xor    al,0x2c
  4141fa:	xchg   ebp,eax
  4141fb:	push   esp
  4141fc:	mov    cl,0xc3
  4141fe:	sti    
  4141ff:	scas   eax,DWORD PTR es:[edi]
  414200:	mov    esi,0x8eb5ca99
  414205:	ret    
  414206:	push   esp
  414207:	cmc    
  414208:	push   edx
  414209:	into   
  41420a:	mov    ch,0xe6
  41420c:	push   esi
  41420d:	pop    edx
  41420e:	dec    edx
  41420f:	add    DWORD PTR [ecx-0xbb67af9],eax
  414215:	jl     0x414233
  414217:	sbb    BYTE PTR [ebp+0x541dfb7],bl
  41421d:	pop    edx
  41421e:	sub    esp,esi
  414220:	sahf   
  414221:	xor    eax,0xa919d3fa
  414226:	jg     0x414270
  414228:	inc    ebp
  414229:	xlat   BYTE PTR ds:[ebx]
  41422a:	pop    eax
  41422b:	xchg   ah,dh
  41422d:	jnp    0x4141ec
  41422f:	not    edx
  414231:	cli    
  414232:	sbb    DWORD PTR [esi],edi
  414234:	rcr    DWORD PTR [ebx-0x50],cl
  414237:	pop    ss
  414238:	push   ss
  414239:	xchg   esi,eax
  41423a:	and    BYTE PTR [edi-0x14c57f96],bl
  414240:	neg    BYTE PTR [ebp+0x52b66f0]
  414246:	loope  0x41423d
  414248:	mov    bl,0xd9
  41424a:	cmc    
  41424b:	in     al,0x95
  41424d:	int    0xe8
  41424f:	inc    ecx
  414250:	dec    edi
  414251:	ffree  st(1)
  414253:	loopne 0x414236
  414255:	aaa    
  414256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414257:	in     al,0xa3
  414259:	sbb    al,0x51
  41425b:	test   BYTE PTR [edx+ebp*8-0x37927897],al
  414262:	sub    edi,edx
  414264:	test   al,0xc9
  414266:	out    dx,al
  414267:	or     eax,0x7949c900
  41426c:	xchg   al,cl
  41426e:	ds mov dh,0xaf
  414271:	xor    al,0xb5
  414273:	push   ebp
  414274:	imul   esi,DWORD PTR [ebx+0x56a76785],0x86249d5b
  41427e:	mov    esi,DWORD PTR [ebp+0x74d732bb]
  414284:	mov    DWORD PTR [edi+0xc745907],edi
  41428a:	jp     0x414280
  41428c:	adc    DWORD PTR ds:0x3b5c5196,esp
  414292:	sbb    ch,BYTE PTR [edx]
  414294:	aam    0xb1
  414296:	xchg   BYTE PTR [eax+eax*2-0x3ab6b005],bh
  41429d:	cmp    cl,BYTE PTR [ebx]
  41429f:	cld    
  4142a0:	xchg   esp,eax
  4142a1:	fcomip st,st(4)
  4142a3:	inc    DWORD PTR [edi+0x42]
  4142a6:	(bad)  ds:0x4ff818d6
  4142ac:	mov    ds:0x34c6eef5,eax
  4142b1:	fcomip st,st(5)
  4142b3:	sub    al,0xd4
  4142b5:	or     esi,DWORD PTR [ecx+0x3b076d97]
  4142bb:	pop    ds
  4142bc:	inc    ecx
  4142bd:	or     ebx,DWORD PTR ds:0x3a50cdc4
  4142c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c4:	and    dh,BYTE PTR [eax-0x5f6f32a9]
  4142ca:	mov    ah,BYTE PTR [edi]
  4142cc:	leave  
  4142cd:	in     al,0x4
  4142cf:	or     ebp,DWORD PTR [esi+0x2f]
  4142d2:	sbb    eax,0xa5700bb1
  4142d7:	lea    ebp,[ebp+0x869406a]
  4142dd:	cmp    eax,0x1481b995
  4142e2:	and    eax,0xeda54d9e
  4142e7:	fst    DWORD PTR ds:0xdc7ee764
  4142ed:	aaa    
  4142ee:	das    
  4142ef:	into   
  4142f0:	jo     0x414351
  4142f2:	jo     0x9cccb61e
  4142f8:	jmp    0x41429c
  4142fa:	and    eax,0x647cdae2
  4142ff:	inc    ebx
  414300:	sub    BYTE PTR [eax],0x81
  414303:	loope  0x4142d2
  414305:	ins    BYTE PTR es:[edi],dx
  414306:	pushf  
  414307:	fsub   DWORD PTR [edx+0x63dbea6]
  41430d:	cmp    al,0x9d
  41430f:	(bad)  
  414310:	jns    0x414369
  414312:	xchg   BYTE PTR [esi+ebx*8+0x27],dh
  414316:	dec    esi
  414317:	cdq    
  414318:	jge    0x4142ad
  41431a:	out    dx,eax
  41431b:	addr16 aad 0x93
  41431e:	lahf   
  41431f:	mov    ecx,0x74218005
  414324:	pop    eax
  414325:	ds sbb al,0xf0
  414328:	js     0x4142ae
  41432a:	mov    bh,0x3
  41432c:	call   0xa2b01c15
  414331:	cmp    BYTE PTR gs:[ecx-0x6f43066e],dh
  414338:	mov    ecx,DWORD PTR [esi]
  41433a:	sbb    DWORD PTR [edi+esi*4],edi
  41433d:	push   0xffffffb5
  41433f:	dec    edi
  414340:	jnp    0x4142e6
  414342:	nop
  414343:	retf   0x2ac4
  414346:	push   ecx
  414347:	lahf   
  414348:	fwait
  414349:	lods   eax,DWORD PTR ds:[esi]
  41434a:	and    cl,cl
  41434c:	and    DWORD PTR [ecx],esi
  41434e:	loopne 0x41438a
  414350:	js     0x4142d4
  414352:	lock (bad) 
  414354:	jp     0x414380
  414356:	cmp    ah,BYTE PTR [eax]
  414358:	test   al,0x34
  41435a:	sub    al,0x38
  41435c:	xchg   edx,eax
  41435d:	loopne 0x4142ef
  41435f:	jnp    0x414308
  414361:	pusha  
  414362:	hlt    
  414363:	mov    ch,0x8d
  414365:	pushf  
  414366:	or     DWORD PTR [ebx-0x28ef3bf9],0xffffffd2
  41436d:	lds    ebp,FWORD PTR [edi]
  41436f:	les    di,DWORD PTR [esi-0x1584aea6]
  414376:	ss daa 
  414378:	sbb    BYTE PTR [esi+ebp*2],al
  41437b:	inc    edx
  41437c:	xchg   esp,eax
  41437d:	sar    DWORD PTR [ebx-0x7b26385],0x89
  414384:	xor    ch,bl
  414386:	inc    ecx
  414387:	cmp    bl,dl
  414389:	icebp  
  41438a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41438b:	xor    eax,0xb558cee5
  414390:	ret    0xab43
  414393:	call   0x5fe3:0xb7d92d82
  41439a:	loope  0x4143b1
  41439c:	rcr    DWORD PTR [ecx],0x67
  41439f:	push   ebp
  4143a0:	xor    ebp,DWORD PTR ds:0x9f41a243
  4143a6:	lahf   
  4143a7:	aam    0x62
  4143a9:	retf   
  4143aa:	add    eax,ecx
  4143ac:	test   DWORD PTR [esi-0x16],0x7ef42514
  4143b3:	adc    eax,0x2e6f63b0
  4143b8:	(bad)  
  4143b9:	icebp  
  4143ba:	sbb    DWORD PTR [esi+0xe],esi
  4143bd:	add    al,0x46
  4143bf:	icebp  
  4143c0:	mov    edi,0x3ddbe840
  4143c5:	mov    cl,0xc9
  4143c7:	inc    esp
  4143c8:	xchg   esi,ebx
  4143ca:	out    0xbf,al
  4143cc:	mov    dh,0x79
  4143ce:	ret    0x34cf
  4143d1:	stos   BYTE PTR es:[edi],al
  4143d2:	mov    bh,0x65
  4143d4:	pop    esp
  4143d5:	push   edi
  4143d6:	(bad)  
  4143d7:	pushf  
  4143d8:	mov    al,dh
  4143da:	(bad)  
  4143db:	sar    DWORD PTR [eax+eiz*8+0x24],1
  4143df:	push   ebx
  4143e0:	pop    ecx
  4143e1:	das    
  4143e2:	inc    ebp
  4143e3:	fcom   DWORD PTR ds:0x618f712f
  4143e9:	mov    WORD PTR [ebp+0x39d91932],cs
  4143ef:	fstp   DWORD PTR [edx+0x5c]
  4143f2:	cli    
  4143f3:	clc    
  4143f4:	ficom  DWORD PTR [ebx+0x67]
  4143f7:	aas    
  4143f8:	aad    0x45
  4143fa:	aas    
  4143fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143fc:	lds    esi,FWORD PTR [ecx-0x2d68ed72]
  414402:	sub    bl,BYTE PTR [edx]
  414404:	xchg   ebx,eax
  414405:	or     eax,0xdf9d60d5
  41440a:	inc    eax
  41440b:	fs mov esi,0xcb6e1212
  414411:	dec    ebp
  414412:	adc    ebx,DWORD PTR [ecx-0x11]
  414415:	jl     0x414447
  414417:	loope  0x414498
  414419:	jbe    0x4143fc
  41441b:	ret    
  41441c:	sbb    al,0x8d
  41441e:	mov    ecx,0x6465e343
  414423:	cmc    
  414424:	or     al,0x71
  414426:	inc    ebx
  414427:	sub    DWORD PTR [ebx-0x674f9091],edx
  41442d:	jno    0x4144a1
  41442f:	ss cli 
  414431:	fst    QWORD PTR [ecx+edi*2-0x33]
  414435:	pop    ebp
  414436:	jb     0x4143ba
  414438:	add    eax,0x429549a7
  41443d:	inc    esi
  41443e:	outs   dx,DWORD PTR ds:[esi]
  41443f:	inc    DWORD PTR [edx]
  414441:	xor    eax,0x506c4b07
  414446:	shr    DWORD PTR ds:0x58436eb8,cl
  41444c:	jp     0x414452
  41444e:	lea    ecx,[ebp-0x80]
  414451:	retf   
  414452:	fild   WORD PTR [edx+0x5d]
  414455:	mov    esp,gs
  414457:	jmp    0xfb7f:0x7ef79529
  41445e:	icebp  
  41445f:	stc    
  414460:	sub    eax,0x6268ee5b
  414465:	aad    0xe6
  414467:	arpl   sp,dx
  414469:	jmp    ecx
  41446b:	mov    ch,0x6d
  41446d:	push   esi
  41446e:	mov    DWORD PTR [ecx-0x18a5dc66],eax
  414474:	push   cs
  414475:	fisttp QWORD PTR [eax]
  414477:	cld    
  414478:	loop   0x4144da
  41447a:	test   DWORD PTR [ebx+ebx*1+0x4c],edx
  41447e:	or     DWORD PTR [eax+0x3b93b684],0xb398570d
  414488:	push   esp
  414489:	les    edx,FWORD PTR [edx+0x8ebd3dc]
  41448f:	mov    al,0x45
  414491:	hlt    
  414492:	mov    ?,WORD PTR [eax+0x39]
  414495:	mov    ah,0x77
  414497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414498:	lods   eax,DWORD PTR ds:[esi]
  414499:	xchg   esp,esi
  41449b:	stc    
  41449c:	es sti 
  41449e:	xchg   cl,al
  4144a0:	jno    0x4144c8
  4144a2:	jg     0x41450a
  4144a4:	lods   al,BYTE PTR ds:[esi]
  4144a5:	clc    
  4144a6:	or     dl,BYTE PTR [edi+0x46e32cf]
  4144ac:	shr    BYTE PTR [edx],0xf3
  4144af:	jne    0x4144b4
  4144b1:	mov    al,ds:0xd815ea1f
  4144b6:	outs   dx,DWORD PTR ds:[esi]
  4144b7:	(bad)  
  4144b8:	fidiv  WORD PTR [esi]
  4144ba:	ins    DWORD PTR es:[edi],dx
  4144bb:	pop    ebx
  4144bc:	or     al,ah
  4144be:	(bad)  
  4144bf:	enter  0xb13c,0x3f
  4144c3:	mov    dh,0x41
  4144c5:	jle    0x414458
  4144c7:	push   ecx
  4144c8:	jp     0x41453f
  4144ca:	jecxz  0x4144b3
  4144cc:	sbb    DWORD PTR [ebx],esi
  4144ce:	pop    es
  4144cf:	mov    esp,0x6ececa55
  4144d4:	rcr    edx,0x65
  4144d7:	xchg   BYTE PTR [ebp+0xb033c7d],ah
  4144dd:	scas   eax,DWORD PTR es:[edi]
  4144de:	xor    DWORD PTR [ebx],eax
  4144e0:	xchg   ebp,eax
  4144e1:	adc    ebp,DWORD PTR [eax+0x74a99c17]
  4144e7:	sbb    BYTE PTR [edx],0x4e
  4144ea:	xor    al,0xff
  4144ec:	jle    0x41453a
  4144ee:	cmp    eax,0x900b0471
  4144f3:	xchg   edi,eax
  4144f4:	jae    0x4144bc
  4144f6:	cmp    cl,ah
  4144f8:	repz lahf 
  4144fa:	test   eax,0x6bda1b72
  4144ff:	in     al,dx
  414500:	xchg   ebp,eax
  414501:	(bad)  
  414503:	xor    al,0xcc
  414505:	fistp  DWORD PTR [eax+0x31]
  414508:	jecxz  0x4144dd
  41450a:	pop    edi
  41450b:	push   eax
  41450c:	test   BYTE PTR [esi],bh
  41450e:	mov    edx,0xac3bf407
  414513:	cmovne esp,DWORD PTR [esi]
  414516:	pusha  
  414517:	push   ds
  414518:	fs into 
  41451a:	pop    edi
  41451b:	mov    edi,0x716a20d8
  414520:	jb     0x4144c5
  414522:	cmp    al,0x55
  414524:	cmp    ebp,DWORD PTR ds:0x9fac9baf
  41452a:	push   cs
  41452b:	std    
  41452c:	fldcw  WORD PTR [edi]
  41452e:	fnstcw WORD PTR ds:0x6b065a0b
  414534:	xor    al,0x8a
  414536:	das    
  414537:	int    0x25
  414539:	loop   0x414581
  41453b:	push   ds
  41453c:	xor    eax,0x14214c77
  414541:	mov    BYTE PTR [ebx],al
  414543:	cs aam 0xc4
  414546:	push   esi
  414547:	ins    BYTE PTR es:[edi],dx
  414548:	lahf   
  414549:	sbb    eax,0x1e3b8fc0
  41454e:	inc    esi
  41454f:	(bad)  
  414550:	mov    esp,0x8eafc9ae
  414555:	int    0x81
  414557:	lods   al,BYTE PTR ds:[esi]
  414558:	push   ss
  414559:	xchg   DWORD PTR [edx-0x56],ebp
  41455c:	ror    BYTE PTR [edx-0x7bb589ec],cl
  414562:	add    DWORD PTR [eax],ebp
  414564:	mov    ss,WORD PTR [eax]
  414566:	cmp    eax,0x4f53c83a
  41456b:	pusha  
  41456c:	das    
  41456d:	adc    DWORD PTR [eax+edi*4-0x3f],ebp
  414571:	ret    0xe2ef
  414574:	hlt    
  414575:	adc    eax,0xb5ba1064
  41457a:	(bad)  
  41457b:	gs cmp ecx,edi
  41457e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457f:	sub    eax,0xce3dd224
  414584:	xchg   dl,ch
  414586:	clc    
  414587:	into   
  414588:	(bad)  
  414589:	mov    eax,0xeb693751
  41458e:	addr16 push es
  414590:	adc    dh,dl
  414592:	int    0xd8
  414594:	cmp    edx,DWORD PTR cs:[ebx+0x27807b1f]
  41459b:	lods   eax,DWORD PTR ds:[esi]
  41459c:	dec    esi
  41459d:	cs mov edi,0xfbcfeb4a
  4145a3:	push   ebp
  4145a4:	cmp    al,0xa3
  4145a6:	dec    edi
  4145a7:	ins    DWORD PTR es:[edi],dx
  4145a8:	jmp    0x2a8a:0x95746f65
  4145af:	ret    0xd86c
  4145b2:	fcomip st,st(5)
  4145b4:	ficomp DWORD PTR ss:[edi]
  4145b7:	mov    ds:0xae1b5f02,eax
  4145bc:	int3   
  4145bd:	in     al,dx
  4145be:	sbb    ecx,DWORD PTR [ebx]
  4145c0:	(bad)  
  4145c1:	loope  0x414625
  4145c3:	jmp    DWORD PTR [ecx+0x7f]
  4145c6:	cmc    
  4145c7:	mov    ebp,0x9124f28
  4145cc:	loopne 0x414640
  4145ce:	push   cs
  4145cf:	shl    DWORD PTR [ebx-0x38b7127e],cl
  4145d5:	aaa    
  4145d6:	mov    eax,ds:0x773131a4
  4145db:	pop    ebx
  4145dc:	mov    bl,BYTE PTR [esi]
  4145de:	pop    es
  4145df:	adc    BYTE PTR [esi],bh
  4145e1:	mov    esi,DWORD PTR [edi-0x23]
  4145e4:	xor    BYTE PTR [eax+0x3a],ch
  4145e7:	dec    ebx
  4145e8:	xor    al,0x5b
  4145ea:	dec    esp
  4145eb:	imul   eax,DWORD PTR [edi-0x2ad6bb99],0xcd481c5b
  4145f5:	xchg   ebx,eax
  4145f6:	adc    al,0x45
  4145f8:	mov    ebp,0x1b1b5cf0
  4145fd:	mov    al,0x29
  4145ff:	das    
  414600:	mov    ebp,0x2eeddcbe
  414605:	and    esi,DWORD PTR ds:0xce87ca8b
  41460b:	pop    ebp
  41460c:	out    dx,eax
  41460d:	lahf   
  41460e:	jae    0x414595
  414610:	adc    al,BYTE PTR [edi-0x72]
  414613:	aaa    
  414614:	cs jae 0x414676
  414617:	jmp    0xa9c1ec2f
  41461c:	adc    al,0x4c
  41461e:	(bad)  
  41461f:	lahf   
  414620:	mov    ah,0x38
  414622:	ja     0x4145fe
  414624:	into   
  414625:	sub    DWORD PTR [ecx+0x41c73c04],esi
  41462b:	repz push 0xffffffec
  41462e:	ret    
  41462f:	and    al,BYTE PTR [ebp+0x7d217c39]
  414635:	mov    dl,0x8f
  414637:	in     eax,0x4e
  414639:	imul   ebp,DWORD PTR [edx+0x2614cedf],0x67f91192
  414643:	cmc    
  414644:	outs   dx,BYTE PTR ds:[esi]
  414645:	pop    ebx
  414646:	sbb    cl,BYTE PTR [edi+0x55]
  414649:	das    
  41464a:	xor    ebx,DWORD PTR [edi+0x2968d0f8]
  414650:	sub    DWORD PTR [esi-0x7a],edx
  414653:	dec    edx
  414654:	ret    0x5d4e
  414657:	iret   
  414658:	xchg   ebp,eax
  414659:	pop    esp
  41465a:	in     eax,0x6e
  41465c:	mov    ds:0x9e711a9f,al
  414661:	out    0x3f,al
  414663:	sub    ecx,DWORD PTR [eax+0x7461a47e]
  414669:	mov    bh,0x55
  41466b:	jns    0x4146d9
  41466d:	mov    edi,DWORD PTR [ebp+0x1b97d57a]
  414673:	sub    al,0x1c
  414675:	push   ds
  414676:	xchg   al,bh
  414678:	or     al,0xcd
  41467a:	xchg   ebp,eax
  41467b:	std    
  41467c:	push   ebx
  41467d:	mov    fs,eax
  41467f:	sti    
  414680:	dec    esp
  414681:	mov    DWORD PTR ds:0x343e9be2,edi
  414687:	push   es
  414688:	mov    esp,0x4d328ece
  41468d:	repnz in al,dx
  41468f:	adc    dl,bl
  414691:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414693:	cmp    eax,0x84ca086
  414698:	inc    edi
  414699:	and    esp,DWORD PTR [ebp-0x4258c8c0]
  41469f:	das    
  4146a0:	mov    edi,0x7497a138
  4146a5:	jmp    0x41463c
  4146a7:	or     eax,0x6ba5cac0
  4146ac:	retf   0xe06b
  4146af:	cmc    
  4146b0:	push   esi
  4146b1:	xor    al,BYTE PTR [eax]
  4146b3:	sbb    dl,dl
  4146b5:	add    al,0x8c
  4146b7:	repz js 0x4146dd
  4146ba:	(bad)  
  4146bc:	inc    BYTE PTR [esp+ebp*4+0x2b6a2f00]
  4146c3:	xchg   edi,eax
  4146c4:	add    eax,0x94e1fdc9
  4146c9:	ins    BYTE PTR es:[edi],dx
  4146ca:	jp     0x414715
  4146cc:	xchg   ecx,eax
  4146cd:	jmp    0x19df:0x11abbf78
  4146d4:	loop   0x41469f
  4146d6:	or     edx,ecx
  4146d8:	mov    ch,dl
  4146da:	inc    edx
  4146db:	dec    edx
  4146dc:	or     DWORD PTR [ecx+0x1160ea2b],esi
  4146e2:	xor    bl,BYTE PTR [ebp+0x27cae076]
  4146e8:	data16 adc al,dl
  4146eb:	cmp    ebp,edx
  4146ed:	div    BYTE PTR ds:0xc21f9921
  4146f3:	adc    al,0x6f
  4146f5:	push   edx
  4146f6:	mov    BYTE PTR ds:0xf88d2d5d,ch
  4146fc:	fidivr DWORD PTR [ebp-0x61]
  4146ff:	mov    esp,0x73123268
  414704:	jns    0x414692
  414706:	pop    ebx
  414707:	cmp    DWORD PTR [edx+0x2],ecx
  41470a:	inc    ebp
  41470b:	jns    0x414734
  41470d:	outs   dx,BYTE PTR ds:[esi]
  41470e:	pop    edi
  41470f:	loopne 0x414748
  414711:	pop    ebp
  414712:	inc    eax
  414713:	jae    0x4146e8
  414715:	add    ecx,DWORD PTR [esi-0x31976ee8]
  41471b:	lock mov eax,ds:0xf678120e
  414721:	mov    DWORD PTR [ebp+0x72a12fab],esi
  414727:	fimul  WORD PTR [ecx+0x7a75d8e0]
  41472d:	imul   DWORD PTR [esi+0x6d]
  414730:	push   ss
  414731:	pusha  
  414732:	sbb    al,BYTE PTR ds:0x3f30bcc2
  414738:	lods   eax,DWORD PTR ds:[esi]
  414739:	retf   
  41473a:	lock jl 0x41478d
  41473d:	add    DWORD PTR [eax-0x73],esp
  414740:	mov    bl,0x9b
  414742:	mov    bh,0x10
  414744:	xchg   ebp,eax
  414745:	loope  0x4147c0
  414747:	je     0x41472a
  414749:	xchg   esi,eax
  41474a:	push   0xffffff9a
  41474c:	ror    bh,0x3a
  41474f:	jl     0x4147bc
  414751:	add    eax,0xba8e2a05
  414756:	jmp    0xb463:0x59b9fb36
  41475d:	and    bh,BYTE PTR [edi+0x488c3b55]
  414763:	jae    0x414767
  414765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414766:	push   eax
  414767:	cmc    
  414768:	sahf   
  414769:	retf   
  41476a:	push   edx
  41476b:	fidivr DWORD PTR [esp+edi*4-0x6b]
  41476f:	shl    edx,1
  414771:	jl     0x414780
  414773:	cmp    al,0xe2
  414775:	enter  0x5885,0x9e
  414779:	outs   dx,BYTE PTR ds:[esi]
  41477a:	mov    ebx,0x948e148b
  41477f:	shl    DWORD PTR [eax-0x2],1
  414782:	fst    DWORD PTR [edi+0xb72043e]
  414788:	(bad)  
  414789:	adc    dl,al
  41478b:	dec    edx
  41478c:	xchg   edi,eax
  41478d:	inc    ebp
  41478e:	stos   DWORD PTR es:[edi],eax
  41478f:	xor    dl,cl
  414791:	iret   
  414792:	(bad)  
  414793:	imul   esi,eax,0x867b9671
  414799:	iret   
  41479a:	popa   
  41479b:	jle    0x414743
  41479d:	mov    esi,0xdd134970
  4147a2:	xchg   DWORD PTR [esi+0x1d93068e],eax
  4147a8:	bswap  esp
  4147aa:	(bad)  
  4147ab:	aad    0xc
  4147ad:	cmp    esp,ebp
  4147af:	scas   al,BYTE PTR es:[edi]
  4147b0:	enter  0xba84,0x8c
  4147b4:	test   al,0x43
  4147b6:	xor    eax,0x52592538
  4147bb:	in     al,0xa
  4147bd:	(bad)  
  4147be:	mov    bl,0xbc
  4147c0:	(bad)  
  4147c1:	mov    ebp,0x11fc3671
  4147c6:	mov    edi,0xea70e92
  4147cb:	pushf  
  4147cc:	jge    0x41478a
  4147ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147cf:	das    
  4147d0:	push   es
  4147d1:	xchg   ecx,eax
  4147d2:	jg     0x41475b
  4147d4:	or     esi,edx
  4147d6:	cmp    eax,DWORD PTR [ecx]
  4147d8:	sub    DWORD PTR [ecx+edi*2+0x24ae2650],0x20bec87a
  4147e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e4:	icebp  
  4147e5:	add    DWORD PTR [ebx+0x70e8b3cb],edi
  4147eb:	xchg   edi,eax
  4147ec:	ins    DWORD PTR es:[edi],dx
  4147ed:	mov    DWORD PTR [edi-0x38b240e8],ebx
  4147f3:	xlat   BYTE PTR ds:[ebx]
  4147f4:	xor    BYTE PTR [ebx*1+0x662f0b45],cl
  4147fb:	inc    ecx
  4147fc:	cdq    
  4147fd:	cmp    ch,0x78
  414800:	enter  0xd60e,0x3f
  414804:	xchg   ebp,eax
  414805:	sbb    bl,dl
  414807:	fmul   QWORD PTR [esp+eiz*8]
  41480a:	sbb    bl,BYTE PTR [esi-0x429f2c77]
  414810:	mov    al,ds:0xa1405284
  414815:	iret   
  414816:	sub    eax,0x20e490b5
  41481b:	test   eax,0x72782aaa
  414820:	sub    al,0xdf
  414822:	nop
  414823:	rol    al,0xdf
  414826:	mov    ch,0xb
  414828:	call   0x80e8:0xf872
  41482e:	sbb    BYTE PTR [edx],bl
  414830:	and    esi,DWORD PTR [edi-0x111b3b16]
  414836:	sub    ch,ch
  414838:	gs pop ss
  41483a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483b:	retf   0xd6db
  41483e:	pop    esi
  41483f:	arpl   WORD PTR [ebp-0x7d4ebd69],bp
  414845:	mov    esi,0x5a0affa6
  41484a:	shl    DWORD PTR [ebx],cl
  41484c:	mov    bl,BYTE PTR [edx+0x3a]
  41484f:	loope  0x4147f4
  414851:	add    eax,0x82dfb18b
  414856:	stc    
  414857:	(bad)  
  414858:	retf   0x7ac0
  41485b:	mov    esp,0xd71298ec
  414860:	xchg   BYTE PTR [eax-0x9],ch
  414863:	ins    BYTE PTR es:[edi],dx
  414864:	ror    DWORD PTR [ebx],cl
  414866:	pop    ss
  414867:	arpl   WORD PTR [esi-0x78ae67ee],si
  41486d:	retf   0x9a08
  414870:	rcr    BYTE PTR [edi+0x76],0x5d
  414874:	mov    dl,0xe3
  414876:	gs fnstcw WORD PTR fs:[eax]
  41487a:	jg     0x4148de
  41487c:	sub    bl,BYTE PTR [edi+0x205af966]
  414882:	outs   dx,BYTE PTR ds:[esi]
  414883:	jnp    0x41481a
  414885:	into   
  414886:	mov    ah,bh
  414888:	ret    0x9045
  41488b:	mov    al,0x53
  41488d:	(bad)  [edi-0x1e251aeb]
  414893:	add    DWORD PTR [ecx],eax
  414895:	fucomi st,st(5)
  414897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414898:	inc    edx
  414899:	push   es
  41489a:	pushf  
  41489b:	psrld  mm0,QWORD PTR [eax-0x63]
  41489f:	(bad)  
  4148a0:	out    dx,al
  4148a1:	stc    
  4148a2:	xchg   edx,eax
  4148a3:	loope  0x414923
  4148a5:	dec    edi
  4148a6:	pop    ecx
  4148a7:	stos   DWORD PTR es:[edi],eax
  4148a8:	call   0xc5aa:0x5c1a4745
  4148af:	int    0x86
  4148b1:	sub    DWORD PTR [edi+eax*2],edx
  4148b4:	mov    edx,DWORD PTR es:[ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xe2aef1dc
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x487821fd],0xb
  414952:	inc    esi
  414953:	sub    eax,DWORD PTR [ecx+eiz*1]
  414956:	mov    bh,0xa9
  414958:	stc    
  414959:	loope  0x4149c7
  41495b:	pop    edi
  41495c:	inc    ebx
  41495d:	lds    ecx,FWORD PTR [edx]
  41495f:	daa    
  414960:	cmp    eax,0xc4fbe76f
  414965:	popf   
  414966:	sub    bh,bl
  414968:	jmp    0x4312c66b
  41496d:	imul   DWORD PTR [eax+ebp*4]
  414970:	packsswb mm0,QWORD PTR [eax+ebx*1]
  414974:	sbb    eax,ebp
  414976:	(bad)  
  414977:	test   eax,0x3c213258
  41497c:	call   0x2bd5d2d7
  414981:	cld    
  414982:	cmp    eax,0x76466e20
  414987:	pop    ds
  414988:	mov    ah,0xa9
  41498a:	xchg   edi,eax
  41498b:	js     0x4149f4
  41498d:	xchg   ebx,eax
  41498e:	popf   
  41498f:	inc    ebx
  414990:	arpl   WORD PTR [edi+0x6366e2f2],dx
  414996:	stos   BYTE PTR es:[edi],al
  414997:	sahf   
  414998:	adc    eax,0x98ed66e5
  41499d:	aaa    
  41499e:	xor    bl,bh
  4149a0:	cmp    al,0x31
  4149a2:	push   0xa527263d
  4149a7:	mov    edi,0x69dfc8e
  4149ac:	mov    ds:0x66842aeb,al
  4149b1:	add    esi,eax
  4149b3:	pop    ecx
  4149b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b5:	loop   0x41496f
  4149b7:	or     eax,0xfccde92e
  4149bc:	mov    esp,0xb10b4dae
  4149c1:	and    cl,BYTE PTR [esi-0x5e]
  4149c4:	push   ebp
  4149c5:	sub    al,0x54
  4149c7:	ret    
  4149c8:	sbb    eax,0xa28ffa48
  4149cd:	icebp  
  4149ce:	push   es
  4149cf:	in     al,0xe2
  4149d1:	mov    esi,0x4b322ee1
  4149d6:	retf   
  4149d7:	and    al,ch
  4149d9:	lods   al,BYTE PTR ds:[esi]
  4149da:	(bad)  
  4149db:	retf   
  4149dc:	lahf   
  4149dd:	shr    DWORD PTR [edx],0x95
  4149e0:	mov    bl,0xff
  4149e2:	out    dx,eax
  4149e3:	mov    DWORD PTR [edx-0x20aafd2f],eax
  4149e9:	dec    DWORD PTR [eax]
  4149eb:	les    eax,FWORD PTR [esi]
  4149ed:	cmp    ecx,DWORD PTR [ebx+0x2af0de7e]
  4149f3:	push   eax
  4149f4:	imul   esi,DWORD PTR [ecx-0x7d1c66ee],0xffffffe0
  4149fb:	psadbw mm0,mm7
  4149fe:	shr    DWORD PTR [ecx-0x3b],cl
  414a01:	pusha  
  414a02:	xchg   ebp,eax
  414a03:	mov    esp,0x6c8c3ad0
  414a08:	int    0xad
  414a0a:	mov    esi,0x6e8b34a4
  414a0f:	dec    ebx
  414a10:	out    dx,al
  414a11:	mov    ecx,0x16dd0559
  414a16:	dec    esi
  414a17:	test   DWORD PTR [eax],0x684f9ac4
  414a1d:	fs shl bh,cl
  414a20:	fwait
  414a21:	popf   
  414a22:	clc    
  414a23:	add    eax,0xf3943cf
  414a28:	mov    bl,0xeb
  414a2a:	cld    
  414a2b:	mov    esi,0x970db8b7
  414a30:	sbb    eax,0xc99b2112
  414a35:	or     al,0x5
  414a37:	jecxz  0x414aaf
  414a39:	gs call 0x631b:0x6e55ed0f
  414a41:	jge    0x414a63
  414a43:	sbb    dl,bh
  414a45:	inc    ebp
  414a46:	dec    esi
  414a47:	add    BYTE PTR [eax-0x17a50d0],ch
  414a4d:	cmp    eax,0x32ab0cfe
  414a52:	fiadd  WORD PTR [ecx+ebx*4]
  414a55:	push   ebx
  414a56:	inc    esp
  414a57:	pushf  
  414a58:	out    0x73,eax
  414a5a:	pop    ebx
  414a5b:	jg     0x414ad3
  414a5d:	xor    bl,ah
  414a5f:	pop    ecx
  414a60:	add    BYTE PTR [ecx-0x4821c243],cl
  414a66:	in     eax,dx
  414a67:	xor    eax,0x8606d5a7
  414a6c:	es data16 (bad) 
  414a6f:	xor    al,0x79
  414a71:	outs   dx,DWORD PTR ds:[esi]
  414a72:	pop    ds
  414a73:	jno    0x414a63
  414a75:	mov    esp,0x2a70891a
  414a7a:	jmp    0x414ad2
  414a7c:	push   ebx
  414a7d:	xor    al,0x25
  414a7f:	loope  0x414ab4
  414a81:	xor    bh,dh
  414a83:	ret    
  414a84:	xor    ecx,DWORD PTR [edx+0x7c]
  414a87:	clc    
  414a88:	and    eax,0xffce7a57
  414a8d:	fs sub al,0x4d
  414a90:	sbb    DWORD PTR [esi-0x5dfa280c],ebx
  414a96:	and    al,0x15
  414a98:	push   ss
  414a99:	xchg   BYTE PTR [ecx+0x75],dl
  414a9c:	shl    BYTE PTR [ebx],1
  414a9e:	shl    DWORD PTR [ebx],1
  414aa0:	bound  esp,QWORD PTR [ecx]
  414aa2:	jecxz  0x414ac8
  414aa4:	mov    eax,0x6d122e74
  414aa9:	cmp    BYTE PTR [esi-0x2d24abf9],dl
  414aaf:	aaa    
  414ab0:	sub    eax,0xe178289e
  414ab5:	sub    al,BYTE PTR [edx]
  414ab7:	icebp  
  414ab8:	or     al,0x38
  414aba:	and    edi,DWORD PTR [eax]
  414abc:	xor    ah,al
  414abe:	mov    edx,0x68a48a61
  414ac3:	cdq    
  414ac4:	and    DWORD PTR [eax+0x1a],edi
  414ac7:	aad    0xfc
  414ac9:	fmul   DWORD PTR [ebx+0x563369f8]
  414acf:	mov    cl,0x5e
  414ad1:	or     eax,DWORD PTR [ebp-0x12]
  414ad4:	push   0xffffffcb
  414ad6:	adc    al,0x3d
  414ad8:	mov    ecx,0xa2c5facf
  414add:	shr    BYTE PTR [eax-0x52],cl
  414ae0:	and    edx,0xffffff96
  414ae3:	mov    ah,0x7f
  414ae5:	fld    QWORD PTR [edi]
  414ae7:	not    DWORD PTR [ecx+edi*1-0x61]
  414aeb:	test   DWORD PTR [esp+ebx*1-0x3fffb82d],esp
  414af2:	out    0xe,al
  414af4:	jg     0x414ab9
  414af6:	adc    BYTE PTR [esi],bh
  414af8:	pop    esi
  414af9:	dec    eax
  414afa:	shl    BYTE PTR [edi+0x25],cl
  414afd:	je     0x414b66
  414aff:	lock sub cl,BYTE PTR [esi-0xf]
  414b03:	xor    esi,DWORD PTR [ebx+0x69d7808c]
  414b09:	iret   
  414b0a:	add    esp,DWORD PTR [eax+0x6fd9fde]
  414b10:	mov    edi,0x8056e55a
  414b15:	sub    eax,0xa310d2c1
  414b1a:	cld    
  414b1b:	pop    esp
  414b1c:	jns    0x414ac7
  414b1e:	sbb    edi,DWORD PTR [ebx-0x621a8e32]
  414b24:	(bad)  
  414b25:	dec    eax
  414b26:	pop    ebp
  414b27:	mov    al,ds:0xd354ebdf
  414b2c:	jmp    0x414b25
  414b2e:	out    dx,al
  414b2f:	fwait
  414b30:	call   0x66c2:0x9a5e485d
  414b37:	adc    eax,0x2edb833f
  414b3c:	iret   
  414b3d:	sbb    dl,0x37
  414b40:	mov    BYTE PTR [bx+si+0x2b7f],dh
  414b45:	je     0x414b53
  414b47:	test   al,0x28
  414b49:	outs   dx,BYTE PTR ds:[esi]
  414b4a:	and    DWORD PTR [ebx],ebx
  414b4c:	call   0xc8af:0xe1ee67d0
  414b53:	sbb    esp,eax
  414b55:	scas   eax,DWORD PTR es:[edi]
  414b56:	leave  
  414b57:	aam    0xe
  414b59:	push   edx
  414b5a:	dec    ebx
  414b5b:	in     eax,0x74
  414b5d:	add    eax,0x560a414
  414b62:	outs   dx,DWORD PTR ds:[esi]
  414b63:	imul   ecx,DWORD PTR [eax+0x8],0xfffffff1
  414b67:	(bad)  
  414b68:	pop    esi
  414b69:	fld    st(0)
  414b6b:	enter  0xfd60,0xd3
  414b6f:	ins    BYTE PTR es:[edi],dx
  414b70:	aad    0x63
  414b72:	push   cs
  414b73:	in     eax,0xaf
  414b75:	call   0xc5ffcd60
  414b7a:	stos   BYTE PTR es:[edi],al
  414b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b7c:	cmovge ebx,DWORD PTR [esi]
  414b7f:	jle    0x414b5f
  414b81:	fist   WORD PTR [eax+0x4a4c1381]
  414b87:	(bad)  
  414b89:	dec    ebp
  414b8a:	shl    DWORD PTR [ebx+esi*2+0x1ca34fca],cl
  414b91:	or     ebx,ecx
  414b93:	cli    
  414b94:	aad    0xe9
  414b96:	lahf   
  414b97:	and    al,0x1b
  414b99:	ss (bad) 
  414b9b:	jmp    0xb55f:0x7253d4da
  414ba2:	lds    eax,FWORD PTR [edi]
  414ba4:	jecxz  0x414bcf
  414ba6:	sbb    ebx,DWORD PTR [esi-0x21]
  414ba9:	mov    fs,esp
  414bab:	pop    ss
  414bac:	mov    WORD PTR [edx+0x2a],?
  414baf:	addr16 dec ebx
  414bb1:	adc    al,0x19
  414bb3:	out    dx,eax
  414bb4:	ds dec ecx
  414bb6:	add    esi,DWORD PTR [ecx-0x74]
  414bb9:	dec    edi
  414bba:	xchg   DWORD PTR [ebp+0x78aba6ee],edx
  414bc0:	nop
  414bc1:	push   ecx
  414bc2:	xor    eax,0x33395e2b
  414bc7:	test   BYTE PTR [ecx-0x320d405c],dh
  414bcd:	sub    DWORD PTR [ecx],eax
  414bcf:	inc    ecx
  414bd0:	push   ds
  414bd1:	xor    esp,DWORD PTR [ebx-0x55]
  414bd4:	out    dx,al
  414bd5:	lods   al,BYTE PTR ds:[esi]
  414bd6:	repz aas 
  414bd8:	out    dx,al
  414bd9:	mov    al,ds:0xc24238f5
  414bde:	xlat   BYTE PTR ds:[ebx]
  414bdf:	mov    bh,0x7
  414be1:	xor    cl,al
  414be3:	ret    0x4a95
  414be6:	jnp    0x414bd0
  414be8:	and    DWORD PTR [ecx-0x69],esp
  414beb:	retf   0x9a48
  414bee:	push   esp
  414bef:	dec    ecx
  414bf0:	mov    DWORD PTR [ebx-0xd9db0bd],0xefb6a298
  414bfa:	std    
  414bfb:	aas    
  414bfc:	in     al,dx
  414bfd:	jmp    0x414bd8
  414bff:	and    ch,BYTE PTR [edi]
  414c01:	or     ebx,DWORD PTR [ecx]
  414c03:	inc    edx
  414c04:	ds fwait
  414c06:	or     eax,0x296352a0
  414c0b:	push   0x122ba546
  414c10:	pop    esp
  414c11:	scas   al,BYTE PTR es:[edi]
  414c12:	dec    esp
  414c13:	(bad)  
  414c14:	icebp  
  414c15:	call   0x3fc5:0xca537fc7
  414c1c:	in     eax,dx
  414c1d:	sub    bl,BYTE PTR [edx-0x7a]
  414c20:	bound  ebp,QWORD PTR cs:0x141602df
  414c27:	stc    
  414c28:	in     al,0xba
  414c2a:	adc    bl,BYTE PTR [eax-0x60e7f8f7]
  414c30:	cmp    eax,0xe2c9c81c
  414c35:	and    eax,ecx
  414c37:	xchg   esp,eax
  414c38:	pop    ds
  414c39:	int    0x4b
  414c3b:	sahf   
  414c3c:	adc    DWORD PTR [eax+0x76],eax
  414c3f:	cmp    BYTE PTR [edi+ecx*2],cl
  414c42:	jge    0x414c93
  414c44:	fcmovnu st,st(3)
  414c46:	add    ah,cl
  414c48:	push   esp
  414c49:	xor    DWORD PTR [ebx+0x1f],0x67
  414c4d:	inc    esp
  414c4e:	mov    cl,0xec
  414c50:	pop    ecx
  414c51:	jb     0x414be8
  414c53:	out    dx,eax
  414c54:	sub    al,0x62
  414c56:	into   
  414c57:	cmp    BYTE PTR [eax],dh
  414c59:	jge    0x414ccd
  414c5b:	sahf   
  414c5c:	mov    esp,0x94605d5
  414c61:	fcmovnb st,st(1)
  414c63:	into   
  414c64:	in     al,dx
  414c65:	loopne 0x414c49
  414c67:	sbb    eax,0x91319d6a
  414c6c:	les    ecx,FWORD PTR [ecx-0x2fe1d55c]
  414c72:	btr    DWORD PTR [esi],ebp
  414c75:	adc    ah,0xa6
  414c78:	pop    esp
  414c79:	sar    BYTE PTR [edi+0x76],cl
  414c7c:	add    al,0x15
  414c7e:	mov    bh,0x90
  414c80:	aaa    
  414c81:	sub    ch,BYTE PTR [esi-0x1d]
  414c84:	dec    esp
  414c85:	xchg   esi,eax
  414c86:	mov    esp,0x7bbb7489
  414c8b:	stos   DWORD PTR es:[edi],eax
  414c8c:	sub    esp,esp
  414c8e:	std    
  414c8f:	test   esp,eax
  414c91:	in     eax,0x8e
  414c93:	lds    esp,FWORD PTR [esi+0x52]
  414c96:	fdivp  st(7),st
  414c98:	cmp    DWORD PTR [esp+ebp*4],0xffffffd8
  414c9c:	out    0x9f,eax
  414c9e:	out    0x38,al
  414ca0:	outs   dx,BYTE PTR ds:[esi]
  414ca1:	call   0xe820:0x4e9be6ed
  414ca8:	add    edx,esi
  414caa:	mov    ds:0x8e468dec,al
  414caf:	test   al,0xb5
  414cb1:	mov    ah,0x69
  414cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb4:	cwde   
  414cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb6:	and    al,BYTE PTR [edx-0x1b1706d5]
  414cbc:	not    BYTE PTR ds:0x694f9b0d
  414cc2:	mov    ebx,esi
  414cc4:	jecxz  0x414d16
  414cc6:	ins    DWORD PTR es:[edi],dx
  414cc7:	jle    0x414d3a
  414cc9:	mov    esi,0xc1c12d96
  414cce:	mov    ebp,DWORD PTR [ebp+ecx*4-0x3f066966]
  414cd5:	mov    eax,0x9308ed95
  414cda:	mov    ebp,0x8fc97dc6
  414cdf:	or     al,BYTE PTR [ecx+0x1d]
  414ce2:	jbe    0x414c93
  414ce4:	leave  
  414ce5:	hlt    
  414ce6:	mov    dh,0x60
  414ce8:	xlat   BYTE PTR ds:[ebx]
  414ce9:	jae    0x414d69
  414ceb:	and    edi,DWORD PTR [ebx+0x23]
  414cee:	call   DWORD PTR [esi]
  414cf0:	shl    DWORD PTR [edi-0x7b],cl
  414cf3:	mov    ebp,0x965ad64d
  414cf8:	cmc    
  414cf9:	fsub   st,st(6)
  414cfb:	mov    edi,0x8a6a9389
  414d00:	inc    ecx
  414d01:	add    al,0x2e
  414d03:	mov    cl,0x3d
  414d05:	and    eax,0x9f4120bf
  414d0a:	sbb    bl,dh
  414d0c:	cli    
  414d0d:	xchg   esp,eax
  414d0e:	adc    eax,0x2d9c558e
  414d13:	jmp    0xa3c88269
  414d18:	cmp    dh,dh
  414d1a:	fisubr DWORD PTR [esi-0x7d]
  414d1d:	pop    edx
  414d1e:	gs inc ecx
  414d20:	(bad)
  414d24:	push   edx
  414d25:	leave  
  414d26:	out    dx,al
  414d27:	(bad)  
  414d28:	div    BYTE PTR [edi-0x5fc563a2]
  414d2e:	jecxz  0x414d5f
  414d30:	lods   eax,DWORD PTR ds:[esi]
  414d31:	dec    esp
  414d32:	hlt    
  414d33:	cmp    al,BYTE PTR [ebp-0x23]
  414d36:	(bad)  
  414d37:	addr16 lahf 
  414d39:	(bad)  
  414d3a:	sub    dh,ah
  414d3c:	push   cs
  414d3d:	and    BYTE PTR [ebx],dh
  414d3f:	pop    edx
  414d40:	push   0xffffff8f
  414d42:	cli    
  414d43:	jl     0x414d86
  414d45:	pop    esp
  414d46:	jg     0x414d1c
  414d48:	or     al,0xa
  414d4a:	dec    esi
  414d4b:	arpl   WORD PTR [ebx+esi*2-0x8],dx
  414d4f:	jmp    0xfc55:0x2114d58b
  414d56:	mov    WORD PTR [edx+eax*8-0x462ad020],?
  414d5d:	dec    eax
  414d5e:	inc    ecx
  414d5f:	inc    DWORD PTR es:[ecx-0x877315]
  414d66:	pop    ecx
  414d67:	lds    esp,FWORD PTR [eax-0x20]
  414d6a:	sub    eax,0xb651476c
  414d6f:	jns    0x414d6b
  414d71:	into   
  414d72:	sub    DWORD PTR [ebp+0x59cb1cce],edx
  414d78:	add    esi,0x2499eea5
  414d7e:	inc    esp
  414d7f:	xor    BYTE PTR [ecx-0x671c6ec7],cl
  414d85:	retf   
  414d86:	pop    esp
  414d87:	pop    edx
  414d88:	out    0xb2,eax
  414d8a:	mov    bl,0x4e
  414d8c:	cmp    eax,DWORD PTR [esi]
  414d8e:	or     al,0xe8
  414d90:	xor    BYTE PTR [ecx+0x60],0xe1
  414d94:	push   ebx
  414d95:	jmp    0xa4b45ea4
  414d9a:	and    esi,DWORD PTR [edi]
  414d9c:	push   ebp
  414d9d:	inc    ebp
  414d9e:	and    BYTE PTR ds:0x390419fe,bl
  414da4:	xor    DWORD PTR [ecx+0xe],ebp
  414da7:	mov    cl,0xf2
  414da9:	mov    al,ds:0x5f6f351a
  414dae:	jb     0x414dac
  414db0:	jns    0x414d8f
  414db2:	mov    eax,0x8b441436
  414db7:	jnp    0x414df8
  414db9:	shr    BYTE PTR [ebx-0x2c789764],cl
  414dbf:	sbb    al,BYTE PTR ds:0x7c3aa2a6
  414dc5:	inc    ebp
  414dc6:	jg     0x414e0f
  414dc8:	inc    eax
  414dc9:	(bad)  
  414dca:	mov    bl,0xcf
  414dcc:	cmp    ecx,edx
  414dce:	lods   eax,DWORD PTR ds:[esi]
  414dcf:	aam    0x11
  414dd1:	push   ebp
  414dd2:	mov    eax,ds:0xac7d301a
  414dd7:	(bad)  
  414dd8:	push   ss
  414dd9:	mov    ch,0x94
  414ddb:	(bad)  
  414ddc:	fisub  DWORD PTR [ecx-0x7bd3db6c]
  414de2:	jo     0x414e29
  414de4:	jne    0x414e5c
  414de6:	aad    0xf1
  414de8:	cmp    ch,dl
  414dea:	loope  0x414e11
  414dec:	daa    
  414ded:	scas   eax,DWORD PTR es:[edi]
  414dee:	jae    0x414e31
  414df0:	push   DWORD PTR [ecx+ebp*1]
  414df3:	mov    ebp,0xa8099832
  414df8:	sbb    esp,DWORD PTR [ebx-0x16db5288]
  414dfe:	shl    DWORD PTR ds:0x239f91a,cl
  414e04:	nop
  414e05:	push   0x4cb41364
  414e0a:	ret    
  414e0b:	adc    BYTE PTR [ebx+0x61],dh
  414e0e:	jmp    0x99c1:0xf88a673b
  414e15:	les    esp,FWORD PTR [ebx+0x464446cd]
  414e1b:	add    al,0x85
  414e1d:	or     BYTE PTR [esi+0x64],ch
  414e20:	push   ebx
  414e21:	in     al,0xf0
  414e23:	mov    ebx,0x53e5c9db
  414e28:	lock shl BYTE PTR [eax],0x27
  414e2c:	push   esp
  414e2d:	rcl    DWORD PTR [esi+0x1fc2b649],0x58
  414e34:	xchg   esp,eax
  414e35:	call   0x6d4a7645
  414e3a:	jl     0x414e97
  414e3c:	cld    
  414e3d:	or     BYTE PTR [ecx],ah
  414e3f:	in     al,dx
  414e40:	aaa    
  414e41:	xchg   edx,eax
  414e42:	sub    edx,DWORD PTR [esp+esi*1]
  414e45:	enter  0x4543,0x13
  414e49:	jecxz  0x414e1d
  414e4b:	inc    edx
  414e4c:	mov    ds:0xa0140ca5,eax
  414e51:	loope  0x414e79
  414e53:	jmp    0x2887:0xcb651433
  414e5a:	lods   al,BYTE PTR ds:[esi]
  414e5b:	mov    edi,0x80e4a4ec
  414e60:	rcl    cl,cl
  414e62:	xchg   ebp,eax
  414e63:	lock stos DWORD PTR es:[edi],eax
  414e65:	cs hlt 
  414e67:	punpckhwd mm1,mm3
  414e6a:	pop    ds
  414e6b:	inc    esp
  414e6c:	adc    al,cl
  414e6e:	cld    
  414e6f:	loope  0x414e50
  414e71:	or     al,BYTE PTR [ebp-0x44]
  414e74:	in     al,dx
  414e75:	adc    eax,0x611a9715
  414e7a:	lods   al,BYTE PTR ds:[esi]
  414e7b:	fistp  WORD PTR [eax+0x1883823]
  414e81:	pop    ebx
  414e82:	dec    edx
  414e83:	dec    eax
  414e84:	add    al,0x36
  414e86:	xor    ebx,edi
  414e88:	enter  0x3053,0x5c
  414e8c:	repz das 
  414e8e:	adc    cl,BYTE PTR [edx]
  414e90:	les    edx,FWORD PTR [ecx+eiz*2+0x38]
  414e94:	cmp    DWORD PTR [ebx],0xffffffe6
  414e97:	jg     0x414efd
  414e99:	test   eax,0x28c8b49f
  414e9e:	popa   
  414e9f:	fcomp  DWORD PTR [eax+ebx*8]
  414ea2:	cdq    
  414ea3:	imul   esi,DWORD PTR [edi-0xa],0x87927997
  414eaa:	add    dh,BYTE PTR [edx-0x62]
  414ead:	push   esp
  414eae:	xor    dl,ch
  414eb0:	loope  0x414e38
  414eb2:	jmp    0x9319eec4
  414eb7:	arpl   WORD PTR [edi+0x44999d53],ax
  414ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ebe:	out    0xb7,al
  414ec0:	pop    ss
  414ec1:	sti    
  414ec2:	mov    ch,0x7a
  414ec4:	or     BYTE PTR [esi],0xc6
  414ec7:	xchg   esi,eax
  414ec8:	neg    BYTE PTR [eax+esi*2-0x7d]
  414ecc:	inc    esi
  414ecd:	jg     0x414f22
  414ecf:	xlat   BYTE PTR ds:[ebx]
  414ed0:	mov    dl,0x32
  414ed2:	sbb    ecx,DWORD PTR gs:[ecx+0x39864917]
  414ed9:	test   BYTE PTR [ebx+esi*1+0x790c0bed],cl
  414ee0:	aam    0x3
  414ee2:	repz mov bh,0xdd
  414ee5:	jae    0x414eed
  414ee7:	daa    
  414ee8:	icebp  
  414ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eea:	lds    ecx,FWORD PTR [eax+0x45]
  414eed:	shl    BYTE PTR [edi-0x6b],cl
  414ef0:	xor    DWORD PTR ds:0x49bef1cf,0x36
  414ef7:	int    0x49
  414ef9:	xchg   esi,eax
  414efa:	int    0xcb
  414efc:	mov    bh,0x23
  414efe:	or     cl,BYTE PTR [edi*1-0x71bbe78e]
  414f05:	or     eax,DWORD PTR [ecx+0x1f]
  414f08:	pop    esp
  414f09:	dec    eax
  414f0a:	aad    0x2f
  414f0c:	stos   DWORD PTR es:[edi],eax
  414f0d:	jne    0x414ede
  414f0f:	inc    ecx
  414f10:	xchg   BYTE PTR [ebx+0x409f0f55],bl
  414f16:	outs   dx,DWORD PTR ds:[esi]
  414f17:	mov    bl,0xf6
  414f19:	stos   DWORD PTR es:[edi],eax
  414f1a:	icebp  
  414f1b:	call   0x769980a5
  414f20:	jg     0x414f9d
  414f22:	push   ecx
  414f23:	clc    
  414f24:	cmp    ebx,esi
  414f26:	pop    eax
  414f27:	fld    TBYTE PTR [ecx]
  414f29:	call   0x47f9:0xea1bf165
  414f30:	jmp    0x414ef8
  414f32:	pusha  
  414f33:	jnp    0x414ed9
  414f35:	int    0x55
  414f37:	mov    WORD PTR [eax],?
  414f39:	mov    edx,0x940fd082
  414f3e:	fld    QWORD PTR [esi+0xc]
  414f41:	sub    dh,BYTE PTR [ebp-0x1a]
  414f44:	cli    
  414f45:	mov    ds:0x617e05a5,al
  414f4a:	push   0x119c48d2
  414f4f:	les    esp,FWORD PTR [ebx-0x692979f0]
  414f55:	(bad)  
  414f56:	jp     0x414ee5
  414f58:	mov    bh,0x33
  414f5a:	jle    0x414fc2
  414f5c:	div    DWORD PTR [ecx]
  414f5e:	ret    0x564d
  414f61:	imul   esi,DWORD PTR [ecx-0x4],0xb6e9d795
  414f68:	sbb    al,0x16
  414f6a:	retf   
  414f6b:	inc    edi
  414f6c:	add    al,bh
  414f6e:	dec    eax
  414f6f:	adc    ebp,ebp
  414f71:	inc    edi
  414f72:	sub    al,0xd4
  414f74:	scas   al,BYTE PTR es:[edi]
  414f75:	out    0x3f,eax
  414f77:	scas   eax,DWORD PTR es:[edi]
  414f78:	push   es
  414f79:	mov    ds:0xc89b68d4,eax
  414f7e:	aad    0xd9
  414f80:	add    DWORD PTR [esi],0x27f1ab32
  414f86:	add    bl,ch
  414f88:	js     0x414f79
  414f8a:	pushf  
  414f8b:	sar    BYTE PTR [eax],0x7e
  414f8e:	jne    0x414fd9
  414f90:	mov    ds:0xe95b4739,eax
  414f95:	push   ds
  414f96:	fdiv   st,st(0)
  414f98:	cli    
  414f99:	(bad)  
  414f9a:	out    dx,al
  414f9b:	ins    DWORD PTR es:[edi],dx
  414f9c:	test   al,0x4b
  414f9e:	cli    
  414f9f:	jle    0x414fc8
  414fa1:	push   edx
  414fa2:	add    esp,DWORD PTR [edx+0x21]
  414fa5:	in     al,0xc2
  414fa7:	xor    bl,BYTE PTR [eax-0x7d4ef236]
  414fad:	cmp    dl,cl
  414faf:	out    0xff,al
  414fb1:	bound  edi,QWORD PTR [eax+0x57]
  414fb4:	aaa    
  414fb5:	inc    ebx
  414fb6:	call   0x9519:0xba105b74
  414fbd:	push   ebp
  414fbe:	jmp    0x2d12ebd4
  414fc3:	jg     0x414f51
  414fc5:	add    BYTE PTR [edx-0x1d],ah
  414fc8:	ror    DWORD PTR [ebp-0x4cc9f490],1
  414fce:	jbe    0x414ffb
  414fd0:	pop    ss
  414fd1:	or     eax,0x11cd1c4f
  414fd6:	mov    ah,0x3c
  414fd8:	push   ebx
  414fd9:	fnstsw WORD PTR [esp+ebx*1+0x74]
  414fdd:	inc    ebx
  414fde:	fstp   DWORD PTR [ebp+edx*2-0x7a968486]
  414fe5:	xchg   DWORD PTR [ebx+0x2c],edx
  414fe8:	fbstp  TBYTE PTR [ebp+0x66]
  414feb:	cwde   
  414fec:	mov    esi,0xf854a1c0
  414ff1:	stos   BYTE PTR es:[edi],al
  414ff2:	sbb    eax,0x75c7288e
  414ff7:	mov    ecx,0x9407a8f8
  414ffc:	(bad)  
  414ffe:	aas    
  414fff:	dec    edx
  415000:	fwait
  415001:	jns    0x415019
  415003:	imul   eax,edx,0xffffffd2
  415006:	jg     0x415066
  415008:	xchg   BYTE PTR [ecx+0x7291b7ea],ah
  41500e:	call   0x8feac448
  415013:	xor    esp,ebx
  415015:	inc    ebp
  415016:	repnz xchg ecx,ebp
  415019:	add    DWORD PTR [ebx+edx*4+0x3661c159],ecx
  415020:	or     DWORD PTR [edx-0x4a6ef141],ecx
  415026:	jns    0x414fb3
  415028:	in     al,0xa5
  41502a:	stc    
  41502b:	sbb    bh,al
  41502d:	adc    al,0xec
  41502f:	mov    ebx,0x1ae198e5
  415034:	std    
  415035:	and    DWORD PTR [eax],0xffa95e3f
  41503b:	jle    0x415056
  41503d:	inc    edx
  41503e:	push   esi
  41503f:	push   es
  415040:	xchg   ebp,eax
  415041:	repz sbb BYTE PTR [edi+0x4a2550db],ah
  415048:	sbb    ecx,edi
  41504a:	stos   DWORD PTR es:[edi],eax
  41504b:	jnp    0x414fd9
  41504d:	dec    ebx
  41504e:	push   eax
  41504f:	into   
  415050:	inc    esp
  415051:	inc    eax
  415052:	aad    0x33
  415054:	dec    eax
  415055:	ret    0xdf25
  415058:	bound  edx,QWORD PTR ds:0x53d928dc
  41505e:	mov    ds:0xdeaec308,al
  415063:	mov    cl,0xa4
  415065:	mov    dl,0x82
  415067:	les    ecx,FWORD PTR [ecx-0x1cda912e]
  41506d:	fs xchg ecx,eax
  41506f:	mov    WORD PTR [ecx],fs
  415071:	xchg   BYTE PTR [edx-0x46417be4],bh
  415077:	xlat   BYTE PTR ds:[ebx]
  415078:	stc    
  415079:	sub    eax,DWORD PTR [eax-0x43]
  41507c:	mov    ds:0xe1de1e2a,eax
  415081:	out    dx,eax
  415082:	out    0x84,eax
  415084:	push   0x8d6a3f43
  415089:	cmp    BYTE PTR [esi],ch
  41508b:	shl    ecx,1
  41508d:	or     ebp,edi
  41508f:	inc    ecx
  415090:	sbb    WORD PTR [esi+0x49],sp
  415094:	mov    ebp,0xa5ca2cd
  415099:	loope  0x415088
  41509b:	enter  0x19df,0x88
  41509f:	jbe    0x41506a
  4150a1:	not    DWORD PTR [eax]
  4150a3:	out    0x2e,al
  4150a5:	cmp    al,0xdd
  4150a7:	cmp    al,0x4e
  4150a9:	aad    0xf4
  4150ab:	xor    edi,DWORD PTR [ebp-0x77]
  4150ae:	xchg   edi,eax
  4150af:	in     al,0x31
  4150b1:	retf   
  4150b2:	adc    BYTE PTR [edi],0xa2
  4150b5:	xor    eax,0x1c3b606c
  4150ba:	scas   al,BYTE PTR es:[edi]
  4150bb:	loop   0x41510f
  4150bd:	test   DWORD PTR [edi+eiz*8-0x7e],ebp
  4150c1:	xchg   BYTE PTR ds:0x9059bb24,cl
  4150c7:	sub    eax,0x1d6f9a75
  4150cc:	pop    esp
  4150cd:	mov    ds:0x252159a7,eax
  4150d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d3:	imul   ecx,DWORD PTR [esi+0x2a531e67],0x7e
  4150da:	push   ebp
  4150db:	stc    
  4150dc:	js     0x41510e
  4150de:	sub    dh,BYTE PTR [edx-0x31]
  4150e1:	inc    sp
  4150e3:	pop    DWORD PTR [ecx-0x40]
  4150e6:	test   BYTE PTR [edi],0xe8
  4150e9:	das    
  4150ea:	adc    eax,0x40d0d9a1
  4150ef:	and    esi,edi
  4150f1:	sub    BYTE PTR [ebx],al
  4150f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f4:	cmp    BYTE PTR [edi-0x14],ch
  4150f7:	inc    ecx
  4150f8:	out    dx,al
  4150f9:	call   0x8fbc:0x8fcbeb1e
  415100:	loope  0x4150b5
  415102:	(bad)  
  415103:	call   0x4ba:0x20584e12
  41510a:	inc    esi
  41510b:	adc    BYTE PTR [edi+edx*2-0xfd77ee1],bh
  415112:	call   0x6ae99ff0
  415117:	call   0x6cb7:0x300b87a1
  41511e:	lods   eax,DWORD PTR ds:[esi]
  41511f:	jb     0x415154
  415121:	enter  0x2104,0x16
  415125:	fwait
  415126:	sar    DWORD PTR [ebx+0x78bba795],0xbc
  41512d:	sub    eax,0xe50c52bc
  415132:	push   ebp
  415133:	jle    0x41511d
  415135:	jne    0x4151a0
  415137:	test   DWORD PTR [eax+0x212fc8fb],ebp
  41513d:	push   edx
  41513e:	stc    
  41513f:	sub    eax,0xda21c3fc
  415144:	int3   
  415145:	cld    
  415146:	or     al,0x7
  415148:	inc    edx
  415149:	xchg   edx,eax
  41514a:	or     BYTE PTR [ebx-0x6bc8d06d],ah
  415150:	outs   dx,BYTE PTR ds:[esi]
  415151:	daa    
  415152:	pop    eax
  415153:	dec    ebx
  415154:	int    0x2f
  415156:	push   edx
  415157:	jne    0x4150f1
  415159:	pushf  
  41515a:	loop   0x4151c9
  41515c:	xchg   edx,eax
  41515d:	jle    0x4150fa
  41515f:	fcomp  QWORD PTR [eax-0x38c45318]
  415165:	pop    edx
  415166:	jmp    0x415184
  415168:	(bad)  
  415169:	push   eax
  41516a:	push   ecx
  41516b:	js     0x4151cf
  41516d:	adc    eax,0x47a0d5f9
  415172:	rcl    DWORD PTR ds:0x82ea8845,1
  415178:	in     eax,dx
  415179:	aaa    
  41517a:	rcr    BYTE PTR [eax+0x5097a5f6],1
  415180:	cmp    al,0xfa
  415182:	fs (bad) 
  415184:	pop    ecx
  415185:	xor    al,0xcd
  415187:	xor    edx,DWORD PTR [ecx]
  415189:	pop    ds
  41518a:	test   BYTE PTR [ebp+0x50427524],ah
  415190:	fucomp st(0)
  415192:	xor    cl,0x3b
  415195:	sub    DWORD PTR [ecx],0xffffffc6
  415198:	iret   
  415199:	mov    cl,0xf5
  41519b:	into   
  41519c:	gs inc edi
  41519e:	and    eax,0xc5857eb2
  4151a3:	rol    eax,cl
  4151a5:	mov    esp,0x76747156
  4151aa:	and    eax,ebp
  4151ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ad:	out    dx,eax
  4151ae:	and    BYTE PTR [ebx],dl
  4151b0:	jle    0x4151b7
  4151b2:	neg    BYTE PTR [esi+0x4671027b]
  4151b8:	sub    ebp,ebp
  4151ba:	stos   BYTE PTR es:[edi],al
  4151bb:	push   0x7a
  4151bd:	mov    ebx,0xcb3d938c
  4151c2:	sub    DWORD PTR [edx-0x294dc26e],eax
  4151c8:	jl     0x4151f7
  4151ca:	jb     0x415243
  4151cc:	inc    ebx
  4151cd:	jns    0x4151c3
  4151cf:	rcr    DWORD PTR [ebp-0x6ce7dc86],1
  4151d5:	jne    0x415196
  4151d7:	mov    ebx,0x746e390a
  4151dc:	sub    al,cl
  4151de:	mov    dl,0xe4
  4151e0:	sbb    al,0x25
  4151e2:	pop    ds
  4151e3:	int3   
  4151e4:	fistp  QWORD PTR [edi-0x36a7539b]
  4151ea:	xchg   ebx,eax
  4151eb:	mov    eax,ds:0xdc0d7ee4
  4151f0:	(bad)  
  4151f1:	gs jns 0x415224
  4151f4:	inc    ecx
  4151f5:	inc    ebx
  4151f6:	jb     0x4151fa
  4151f8:	in     al,dx
  4151f9:	jmp    0xe0b4da51
  4151fe:	js     0x41519e
  415200:	std    
  415201:	xlat   BYTE PTR ds:[ebx]
  415202:	popa   
  415203:	pop    esi
  415204:	add    ebp,DWORD PTR [esi+0x12bcb056]
  41520a:	pop    ecx
  41520b:	pop    ds
  41520c:	jmp    0x1012189
  415211:	das    
  415212:	inc    esp
  415213:	push   ss
  415214:	test   DWORD PTR ds:0xf247942d,esp
  41521a:	sub    al,0x5b
  41521c:	push   cs
  41521d:	stos   DWORD PTR es:[edi],eax
  41521e:	(bad)  
  41521f:	jae    0x4151cc
  415221:	adc    eax,0x4aa3476f
  415226:	jne    0x41528c
  415228:	dec    eax
  415229:	or     dl,BYTE PTR [ebp+ebp*4-0x31]
  41522d:	fucomp st(1)
  41522f:	call   0x46e1fdcc
  415234:	jle    0x415255
  415236:	dec    esi
  415237:	add    al,0xdd
  415239:	mov    esi,0xaeefb950
  41523e:	xor    edi,DWORD PTR [ebp+0x3]
  415241:	or     al,0xa9
  415243:	mov    bl,0x2b
  415245:	mov    ebx,0xa5c0a347
  41524a:	xchg   esi,eax
  41524b:	aad    0xca
  41524d:	cmp    al,0xc5
  41524f:	mov    dh,bl
  415251:	push   ds
  415252:	cmp    esp,eax
  415254:	in     eax,0xfa
  415256:	call   0x1092b148
  41525b:	sbb    BYTE PTR [ecx+0x40],bl
  41525e:	mov    ds:0xedb886f2,al
  415263:	xor    DWORD PTR [ebx],0x1803ef3f
  415269:	sbb    al,0xfd
  41526b:	cld    
  41526c:	lahf   
  41526d:	das    
  41526e:	pop    ebp
  41526f:	and    al,0x45
  415271:	inc    edx
  415272:	icebp  
  415273:	sub    DWORD PTR [edi-0x25ad8259],edx
  415279:	(bad)  
  41527a:	pop    eax
  41527b:	fstp   QWORD PTR es:[ecx+0x1c055c05]
  415282:	sub    DWORD PTR [eax-0x1d],esi
  415285:	adc    al,BYTE PTR [ebx]
  415287:	xchg   ebp,eax
  415288:	fidiv  DWORD PTR [ebp+0x47b5d310]
  41528e:	call   0x324ffd06
  415293:	inc    edi
  415294:	sbb    al,0x7b
  415296:	out    0x63,eax
  415298:	cmc    
  415299:	adc    DWORD PTR [esi-0xfb19cd5],ebx
  41529f:	jmp    0x87c:0xc6a234e9
  4152a6:	push   eax
  4152a7:	inc    ebp
  4152a8:	mov    bh,0xc8
  4152aa:	dec    ebx
  4152ab:	loopne 0x41523e
  4152ad:	mov    ch,0x64
  4152af:	es loope 0x4152d0
  4152b2:	scas   al,BYTE PTR es:[edi]
  4152b3:	sbb    ebp,DWORD PTR [esi+esi*8-0x57]
  4152b7:	jno    0x415275
  4152b9:	stos   BYTE PTR es:[edi],al
  4152ba:	mov    DWORD PTR [edx+0x64],esp
  4152bd:	jno    0x415303
  4152bf:	rcl    DWORD PTR [eax],cl
  4152c1:	jmp    0xbf092b33
  4152c6:	not    ebp
  4152c8:	push   0x10
  4152ca:	in     eax,0x3e
  4152cc:	mov    ah,0x61
  4152ce:	neg    BYTE PTR [ebx]
  4152d0:	pop    ebx
  4152d1:	pop    edi
  4152d2:	(bad)  
  4152d3:	in     eax,0xbd
  4152d5:	(bad)  
  4152d7:	icebp  
  4152d8:	adc    eax,0x40f92afa
  4152dd:	mov    bh,0x3d
  4152df:	popa   
  4152e0:	cmp    al,0xd
  4152e2:	and    ch,BYTE PTR [edi]
  4152e4:	arpl   bp,sp
  4152e6:	mov    ds:0x4bd63064,al
  4152eb:	jnp    0x415305
  4152ed:	push   ecx
  4152ee:	add    DWORD PTR [edi+ebp*1-0x21d38d30],esp
  4152f5:	sbb    cl,0x9e
  4152f8:	stc    
  4152f9:	loop   0x4152cf
  4152fb:	sar    DWORD PTR [ebx-0x4d],cl
  4152fe:	mov    esi,0x7ebefcaf
  415303:	push   ss
  415304:	pop    ecx
  415305:	sub    ecx,DWORD PTR [edx-0x37798545]
  41530b:	mov    dl,BYTE PTR [ecx]
  41530d:	mov    eax,0xff21fe63
  415312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415313:	xor    eax,0x3f0b6ea
  415318:	jnp    0x4152d2
  41531a:	cdq    
  41531b:	test   DWORD PTR [edi+0x0],0xa0cf2c12
  415322:	jbe    0x41530a
  415324:	mov    cl,0x63
  415326:	push   ds
  415327:	iret   
  415328:	inc    ecx
  415329:	loope  0x41538c
  41532b:	scas   al,BYTE PTR es:[edi]
  41532c:	fstp   QWORD PTR [ecx-0x4eec636d]
  415332:	push   esi
  415333:	add    eax,0x4554eeca
  415338:	ret    
  415339:	lss    ecx,FWORD PTR [ebx+0x686b77ac]
  415340:	clc    
  415341:	xchg   BYTE PTR [ebp-0x5d],bl
  415344:	out    0x7c,al
  415346:	std    
  415347:	inc    ecx
  415348:	sbb    DWORD PTR [edx+0xc],esi
  41534b:	cmp    al,0x93
  41534d:	les    ecx,FWORD PTR [edi-0x1f5eaa64]
  415353:	pushf  
  415354:	push   0xfe19b996
  415359:	mov    al,ds:0x68f088
  41535e:	cmp    eax,0xfdc484f4
  415363:	test   eax,0x1fe0ce9b
  415368:	sbb    eax,0xc3c36909
  41536d:	repz add cl,BYTE PTR [ecx]
  415370:	shl    DWORD PTR [edx+0xe],1
  415373:	sahf   
  415374:	out    0xa9,al
  415376:	mov    ch,0xda
  415378:	cmp    eax,ecx
  41537a:	in     al,0x9b
  41537c:	jb     0x41530c
  41537e:	(bad)  [edi+0x2e]
  415381:	pusha  
  415382:	add    esi,DWORD PTR [ecx-0x43]
  415385:	imul   edx,DWORD PTR [ebx-0x4],0x8c77ce69
  41538c:	in     eax,dx
  41538d:	add    DWORD PTR ds:0xd5f2101d,ecx
  415393:	inc    eax
  415394:	inc    ecx
  415395:	add    ebp,eax
  415397:	or     DWORD PTR [esi],esp
  415399:	in     al,0x27
  41539b:	cmovg  edx,DWORD PTR [edx]
  41539e:	push   0x2f
  4153a0:	inc    ecx
  4153a1:	xchg   esp,eax
  4153a2:	rcl    DWORD PTR [eax+0x57],0xd
  4153a6:	mov    ah,0x91
  4153a8:	(bad)  
  4153a9:	lods   al,BYTE PTR ds:[esi]
  4153aa:	stos   BYTE PTR es:[edi],al
  4153ab:	pushf  
  4153ac:	dec    ecx
  4153ad:	or     eax,0xff581ce0
  4153b2:	push   esp
  4153b3:	push   edi
  4153b4:	xor    eax,0x1be2ff9c
  4153ba:	mov    ah,0x3e
  4153bc:	std    
  4153bd:	mov    dl,0x2f
  4153bf:	cmp    edi,DWORD PTR [ebp+ebp*4-0x2a]
  4153c3:	or     eax,0xd242d063
  4153c8:	sbb    eax,0xc30e6c4d
  4153cd:	or     BYTE PTR [edi+0x26],bh
  4153d0:	dec    eax
  4153d1:	or     ch,bl
  4153d3:	repz jg 0x41544a
  4153d6:	mov    al,ds:0xb0c8e207
  4153db:	fbstp  TBYTE PTR [esi+0x56]
  4153de:	xchg   DWORD PTR [esi],eax
  4153e0:	imul   ebx,ebp,0x343341e
  4153e6:	sbb    dh,al
  4153e8:	push   es
  4153e9:	ret    
  4153ea:	jle    0x4153ea
  4153ec:	stc    
  4153ed:	push   eax
  4153ee:	cld    
  4153ef:	loope  0x4153a2
  4153f1:	into   
  4153f2:	out    0xe,al
  4153f4:	lods   al,BYTE PTR cs:[esi]
  4153f6:	and    DWORD PTR [ecx],ebx
  4153f8:	aad    0x5a
  4153fa:	in     al,0xb3
  4153fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153fd:	mov    ds:0xf34d1c3f,al
  415402:	(bad)  
  415403:	mov    gs:0xc0785567,eax
  415409:	and    eax,0x236df3b0
  41540e:	scas   eax,DWORD PTR es:[edi]
  41540f:	and    eax,0x4c25858a
  415414:	fs (bad) 
  415416:	fiadd  DWORD PTR [edx-0x42]
  415419:	push   eax
  41541a:	out    dx,al
  41541b:	inc    edi
  41541c:	ss mov eax,0x70437759
  415422:	mov    edi,DWORD PTR [eax]
  415424:	pop    edi
  415425:	add    al,0x1
  415427:	pop    ecx
  415428:	int3   
  415429:	call   0xc3b7fe1f
  41542e:	add    esp,esp
  415430:	xor    ah,BYTE PTR [edi]
  415432:	(bad)  
  415433:	xor    ah,cl
  415435:	scas   eax,DWORD PTR es:[edi]
  415436:	mov    ecx,0xf3d5092e
  41543b:	inc    eax
  41543c:	mov    cl,0x7c
  41543e:	jbe    0x4153f8
  415440:	out    0x95,al
  415442:	mov    edx,esp
  415444:	or     bl,al
  415446:	stos   BYTE PTR es:[edi],al
  415447:	mov    dl,0x61
  415449:	sub    esi,DWORD PTR [edx+0x56c2f589]
  41544f:	leave  
  415450:	pushf  
  415451:	fiadd  DWORD PTR [eax-0x61]
  415454:	sbb    ah,BYTE PTR [edi+0x4c]
  415457:	shl    DWORD PTR [edi-0x738981ca],1
  41545d:	repz xchg esi,eax
  41545f:	jno    0x415460
  415461:	add    esp,DWORD PTR [ecx-0x3e]
  415464:	out    0x45,al
  415466:	pop    ss
  415467:	mov    ds,edx
  415469:	push   ds
  41546a:	cmc    
  41546b:	ja     0x4154a7
  41546d:	imul   esi,DWORD PTR [ebx],0xffffff87
  415470:	adc    al,0x82
  415472:	push   0x5b
  415474:	call   0xb0fb:0x54e5b64
  41547b:	out    dx,eax
  41547c:	inc    edx
  41547d:	popf   
  41547e:	scas   eax,DWORD PTR es:[edi]
  41547f:	or     bl,bl
  415481:	pop    ecx
  415482:	(bad)  
  415483:	scas   eax,DWORD PTR es:[edi]
  415484:	bound  ebx,QWORD PTR [esi]
  415486:	je     0x41545f
  415488:	cmc    
  415489:	sbb    ecx,eax
  41548b:	push   ebx
  41548c:	neg    BYTE PTR [ebx-0x62]
  41548f:	mov    ebp,0x3552e1e0
  415494:	rcl    dh,0x52
  415497:	adc    al,0xba
  415499:	addr16 ror cl,0xff
  41549d:	in     eax,dx
  41549e:	jno    0x415510
  4154a0:	mov    ah,0x12
  4154a2:	or     eax,0x5ef2b1d4
  4154a7:	inc    esi
  4154a8:	fwait
  4154a9:	xchg   ebp,eax
  4154aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ab:	add    DWORD PTR [edx+0x1774f032],ebx
  4154b1:	daa    
  4154b2:	xchg   ebx,eax
  4154b3:	lods   al,BYTE PTR ds:[esi]
  4154b4:	imul   edi,esp,0x745fe2e0
  4154ba:	adc    eax,0x917e9d4a
  4154bf:	dec    edi
  4154c0:	stos   DWORD PTR es:[edi],eax
  4154c1:	sti    
  4154c2:	retf   0x202c
  4154c5:	into   
  4154c6:	mov    WORD PTR [edi-0x5b90b435],?
  4154cc:	push   0x7892a15c
  4154d1:	mov    bh,0x99
  4154d3:	fimul  WORD PTR [esi+0x77]
  4154d6:	sti    
  4154d7:	sbb    eax,0x2910609c
  4154dc:	or     edi,ebp
  4154de:	lods   al,BYTE PTR ds:[esi]
  4154df:	nop
  4154e0:	pushf  
  4154e1:	(bad)  
  4154e3:	arpl   bx,si
  4154e5:	in     al,0xc
  4154e7:	out    0xaf,al
  4154e9:	lahf   
  4154ea:	xchg   esi,eax
  4154eb:	int3   
  4154ec:	pop    ebx
  4154ed:	out    0x6a,al
  4154ef:	inc    edi
  4154f0:	cdq    
  4154f1:	inc    eax
  4154f2:	data16 fadd DWORD PTR [edx-0x12da307a]
  4154f9:	dec    ecx
  4154fa:	mov    ?,WORD PTR [esi-0x39]
  4154fd:	ins    BYTE PTR es:[edi],dx
  4154fe:	js     0x4154b5
  415500:	pop    es
  415501:	neg    BYTE PTR [edi+edx*4-0x3b04ab37]
  415508:	adc    BYTE PTR [eax+0x3e],dl
  41550b:	shl    esi,1
  41550d:	aas    
  41550e:	push   ss
  41550f:	dec    ecx
  415510:	gs push es
  415512:	(bad)  
  415513:	cld    
  415514:	mov    ebp,0x9f682d81
  415519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41551a:	inc    eax
  41551b:	mov    eax,0xdbe4c3d1
  415520:	mov    esi,0xde64346e
  415525:	and    ebp,esp
  415527:	xor    DWORD PTR [ecx-0x46],ebp
  41552a:	dec    ebp
  41552b:	mov    BYTE PTR [edi],al
  41552d:	out    0xdd,eax
  41552f:	mov    edi,0xc11e5448
  415534:	test   DWORD PTR [ebp+0x428eeabd],esp
  41553a:	sub    DWORD PTR [ecx],ebx
  41553c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41553d:	mov    dl,0xce
  41553f:	out    0x5e,eax
  415541:	iret   
  415542:	ret    
  415543:	push   esi
  415544:	xchg   edi,eax
  415545:	data16 jno 0x415531
  415548:	cdq    
  415549:	mov    DWORD PTR [eax],esp
  41554b:	xor    DWORD PTR [esi-0x67],edi
  41554e:	aad    0xdf
  415550:	pop    edi
  415551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415552:	pop    es
  415553:	sbb    esp,esi
  415555:	pop    ecx
  415556:	repz shl DWORD PTR [edx-0x6ee5fb39],cl
  41555d:	and    eax,0x22fb2e6d
  415562:	cwde   
  415563:	jmp    0x4155dd
  415565:	pop    eax
  415566:	mov    ds:0x52ea5992,al
  41556b:	loope  0x41553e
  41556d:	ret    
  41556e:	mov    dl,BYTE PTR [ebx]
  415570:	xor    eax,0xc2805eb2
  415575:	xor    al,BYTE PTR [ecx-0x46]
  415578:	mov    esi,0x7934f29
  41557d:	outs   dx,BYTE PTR ds:[esi]
  41557e:	push   es
  41557f:	js     0x415556
  415581:	clc    
  415582:	popf   
  415583:	jno    0x41557a
  415585:	out    0x15,eax
  415587:	test   al,0x74
  415589:	xor    esp,DWORD PTR [edx]
  41558b:	jl     0x41554f
  41558d:	mov    ch,0x6e
  41558f:	sar    BYTE PTR ds:0xaef694f6,1
  415595:	and    DWORD PTR [edi+0x67],ecx
  415598:	dec    edi
  415599:	mov    BYTE PTR [esi-0x25],bh
  41559c:	cmc    
  41559d:	or     al,0xbb
  41559f:	mov    bl,0x3e
  4155a1:	aaa    
  4155a2:	cwde   
  4155a3:	mov    DWORD PTR [ebp+eax*2+0x7809a97c],ecx
  4155aa:	sbb    eax,0x5dae9f32
  4155af:	scas   al,BYTE PTR es:[edi]
  4155b0:	and    ebx,DWORD PTR [edx-0x390910ef]
  4155b6:	cmp    cl,bh
  4155b8:	gs sar al,0x64
  4155bc:	loope  0x4155ca
  4155be:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4155c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c1:	mov    cl,0x48
  4155c3:	ins    DWORD PTR es:[edi],dx
  4155c4:	sar    eax,cl
  4155c6:	je     0x4155d5
  4155c8:	data16 (bad) 
  4155ca:	out    0xca,eax
  4155cc:	xor    edi,DWORD PTR [edx]
  4155ce:	nop
  4155cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d0:	xchg   edx,eax
  4155d1:	mov    BYTE PTR [edx],ch
  4155d3:	(bad)  
  4155d4:	addr16 test al,0xde
  4155d7:	sub    BYTE PTR [edi+0x6e],0xe1
  4155db:	outs   dx,DWORD PTR ds:[esi]
  4155dc:	das    
  4155dd:	cdq    
  4155de:	push   0x4d
  4155e0:	sub    ecx,DWORD PTR [edi+0x5]
  4155e3:	pop    ecx
  4155e4:	pop    edx
  4155e5:	arpl   si,si
  4155e7:	pop    ecx
  4155e8:	xchg   ecx,eax
  4155e9:	retf   
  4155ea:	pop    ebp
  4155eb:	inc    edi
  4155ec:	mov    eax,0x638fb144
  4155f1:	lock stos BYTE PTR es:[edi],al
  4155f3:	jae    0x415607
  4155f5:	and    eax,0x326feb09
  4155fa:	xor    edx,DWORD PTR [esi+0x682b999a]
  415600:	or     bl,BYTE PTR [ebx-0x1d]
  415603:	test   eax,0x1dbfc884
  415608:	into   
  415609:	int3   
  41560a:	xor    DWORD PTR [ecx-0x2f56678b],esp
  415610:	enter  0xaa46,0x8c
  415614:	dec    esi
  415615:	fs aad 0x58
  415618:	pop    ds
  415619:	ret    0x6962
  41561c:	icebp  
  41561d:	(bad)  
  41561e:	loop   0x4155ca
  415620:	aad    0xda
  415622:	rcr    DWORD PTR [ebp+0x70382cc7],cl
  415628:	sbb    DWORD PTR [edi],ebx
  41562a:	mov    ds:0x25fed4a0,eax
  41562f:	pop    edi
  415630:	jle    0x415624
  415632:	inc    edx
  415633:	daa    
  415634:	test   BYTE PTR [edx-0x74db94af],bh
  41563a:	jmp    0xb37a4d10
  41563f:	sub    esi,esp
  415641:	mov    bh,0xa3
  415643:	fcomp  DWORD PTR [esp+ebx*8+0x53]
  415647:	xchg   esi,eax
  415648:	ret    0x4bd8
  41564b:	add    ch,BYTE PTR [eax+edx*1-0x7129249f]
  415652:	jo     0x4155df
  415654:	stos   BYTE PTR es:[edi],al
  415655:	fwait
  415656:	out    0xc1,al
  415658:	cmovo  ebp,DWORD PTR [eax-0x53cbed84]
  41565f:	faddp  st(7),st
  415661:	cli    
  415662:	and    al,0xd8
  415664:	fistp  QWORD PTR [ebp+0x35]
  415667:	sahf   
  415668:	or     eax,0x7b3a1674
  41566d:	in     eax,0x5c
  41566f:	xchg   DWORD PTR [edx],ebx
  415671:	xor    ah,al
  415673:	fmul   QWORD PTR [edi+0x26]
  415676:	sbb    al,BYTE PTR [esi+0x36904ea3]
  41567c:	iret   
  41567d:	sub    esp,ecx
  41567f:	bound  ebp,QWORD PTR [edx+0x28]
  415682:	mov    ecx,0xf781817e
  415687:	not    dh
  415689:	or     ecx,DWORD PTR ds:0xd433ae9d
  41568f:	std    
  415690:	leave  
  415691:	inc    esi
  415692:	mov    dl,0xd
  415694:	fimul  WORD PTR [ecx]
  415696:	rcr    BYTE PTR [ebp-0x1b],cl
  415699:	fcom   QWORD PTR [eax+0x30]
  41569c:	sub    bh,dh
  41569e:	xor    BYTE PTR ds:0xe3abf1f0,0x84
  4156a5:	jae    0x41564b
  4156a7:	jp     0x415629
  4156a9:	ficom  DWORD PTR ds:0x636625bd
  4156af:	xchg   edi,eax
  4156b0:	jle    0x4156af
  4156b2:	(bad)  
  4156b4:	retf   
  4156b5:	jmp    0x4156b8
  4156b7:	inc    ebp
  4156b8:	inc    ecx
  4156b9:	js     0x415704
  4156bb:	adc    al,0x86
  4156bd:	sub    dl,BYTE PTR [ecx+0x74c4a549]
  4156c3:	push   0x56
  4156c5:	or     bh,BYTE PTR [ebx+0x6]
  4156c8:	push   esi
  4156c9:	fldenv [eax-0x1b]
  4156cc:	nop
  4156cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ce:	sti    
  4156cf:	mov    ecx,0x40f46bf0
  4156d4:	clc    
  4156d5:	mov    ebp,0xb5cac484
  4156da:	sar    bh,cl
  4156dc:	add    al,0x72
  4156de:	stc    
  4156df:	jno    0x415719
  4156e1:	cmp    eax,0x1b4b6717
  4156e6:	fcom   DWORD PTR [ebx]
  4156e8:	aaa    
  4156e9:	adc    DWORD PTR [edi-0x39],edi
  4156ec:	mov    BYTE PTR [eax],bh
  4156ee:	pop    esi
  4156ef:	aaa    
  4156f0:	das    
  4156f1:	adc    DWORD PTR [ebx],ecx
  4156f3:	ret    
  4156f4:	addr16 ret 0x4778
  4156f8:	add    eax,0x449919f0
  4156fd:	sub    eax,0xb4b11aa6
  415702:	imul   ebx,DWORD PTR [eax-0x55],0xffffff87
  415706:	hlt    
  415707:	shr    edx,1
  415709:	mov    al,0x22
  41570b:	cmp    al,0x65
  41570d:	xchg   DWORD PTR [ebx+0x56],edi
  415710:	add    dl,ah
  415712:	push   ss
  415713:	mov    eax,0x99562b72
  415718:	dec    esp
  415719:	sbb    BYTE PTR [edi],al
  41571b:	xchg   BYTE PTR [eax-0x1dd88d4d],ch
  415721:	sbb    BYTE PTR [ebx+0x7f],cl
  415724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415725:	jp     0x41577d
  415727:	jno    0x415751
  415729:	les    esp,FWORD PTR [esi+0x47dab00a]
  41572f:	mov    ebx,0xca048826
  415734:	pop    ecx
  415735:	pop    ebp
  415736:	push   ebx
  415737:	push   esi
  415738:	retf   
  415739:	fist   WORD PTR [eax]
  41573b:	or     BYTE PTR [ebx-0x73235a91],bh
  415741:	arpl   ax,bx
  415743:	scas   eax,DWORD PTR es:[edi]
  415744:	push   edi
  415745:	lahf   
  415746:	cwde   
  415747:	(bad)  
  415748:	adc    eax,0xf34f3829
  41574d:	(bad)  
  41574e:	fisub  WORD PTR [ecx-0x2b]
  415751:	retf   
  415752:	je     0x415795
  415754:	outs   dx,DWORD PTR ds:[esi]
  415755:	call   0x640595da
  41575a:	shl    eax,1
  41575c:	xchg   esp,eax
  41575d:	jae    0x4157c1
  41575f:	test   BYTE PTR [esi],cl
  415761:	pop    edx
  415762:	push   0xa2a4fc31
  415767:	xchg   edi,eax
  415768:	inc    ebp
  415769:	mov    ds:0x8ab0f707,al
  41576e:	mov    DWORD PTR cs:[esi-0x25],esi
  415772:	add    eax,0x2df51994
  415777:	add    eax,0x4984f74e
  41577c:	push   edi
  41577d:	pusha  
  41577e:	stos   DWORD PTR es:[edi],eax
  41577f:	xor    DWORD PTR [ebx-0x3e],edx
  415782:	pop    ebx
  415783:	sub    eax,0x8b74f1ec
  415788:	pop    esp
  415789:	mov    BYTE PTR [eax-0x751f760e],0x85
  415790:	leave  
  415791:	xor    bh,BYTE PTR ds:0x47aea40b
  415797:	push   esi
  415798:	and    eax,0x42c6ebd
  41579d:	(bad)  
  41579e:	pop    ebx
  41579f:	pop    edx
  4157a0:	push   ecx
  4157a1:	cdq    
  4157a2:	sahf   
  4157a3:	sub    ebp,DWORD PTR [ebx]
  4157a5:	data16 lock mov ds:0x3222fcef,al
  4157ac:	sub    BYTE PTR [edx],0xd9
  4157af:	aam    0x6c
  4157b1:	call   0x9604905f
  4157b6:	mov    bl,0x61
  4157b8:	call   0x7b77ac7e
  4157bd:	jne    0x4157ad
  4157bf:	mov    DWORD PTR [ebx+0x26],0xf4ed03ff
  4157c6:	mov    dh,0xc0
  4157c8:	mov    ds:0x66e87287,eax
  4157cd:	arpl   cx,bp
  4157cf:	dec    edi
  4157d0:	adc    BYTE PTR [ebx+0x61],al
  4157d3:	inc    ebp
  4157d4:	ds xchg ebx,eax
  4157d6:	lock sub ebx,ecx
  4157d9:	fistp  QWORD PTR [edi+0x1b459c71]
  4157df:	or     edx,DWORD PTR [eax-0x57f55d67]
  4157e5:	pop    ebp
  4157e6:	mov    esi,0x84831031
  4157eb:	xor    BYTE PTR [esi],cl
  4157ed:	add    dl,bh
  4157ef:	dec    ebx
  4157f0:	sar    BYTE PTR [esi+0x49],1
  4157f3:	leave  
  4157f4:	jns    0x4157b5
  4157f6:	pop    ecx
  4157f7:	in     eax,0x49
  4157f9:	fwait
  4157fa:	(bad)  
  4157fb:	clc    
  4157fc:	dec    edi
  4157fd:	and    BYTE PTR [esi-0x7a],bh
  415800:	add    ebx,DWORD PTR [eax-0x41aaede5]
  415806:	mov    ah,0xf2
  415808:	inc    eax
  415809:	mov    WORD PTR [ebx],bx
  41580c:	add    esi,esp
  41580e:	add    eax,0x3b3bd8d7
  415813:	adc    eax,DWORD PTR ds:[esi]
  415816:	cmp    eax,edi
  415818:	xchg   edx,eax
  415819:	xor    DWORD PTR [esi],0x52a14e34
  41581f:	push   ebx
  415820:	adc    ebp,DWORD PTR [edi-0xc1bcd21]
  415826:	pop    ecx
  415827:	lods   al,BYTE PTR ds:[esi]
  415828:	inc    esp
  415829:	pusha  
  41582a:	xchg   ebp,esp
  41582c:	cld    
  41582d:	(bad)  
  41582e:	inc    DWORD PTR [edi]
  415830:	fidiv  DWORD PTR [eax-0x59]
  415833:	sbb    ebp,edx
  415835:	add    edx,eax
  415837:	or     dh,BYTE PTR [ecx]
  415839:	adc    ah,BYTE PTR [eax+0x1]
  41583c:	(bad)  
  41583d:	retf   0x6815
  415840:	sub    eax,0xf2d3193f
  415845:	cmc    
  415846:	(bad)  
  415847:	jp     0x4157eb
  415849:	jnp    0x415879
  41584b:	inc    esp
  41584c:	test   DWORD PTR [ebx-0x1529376f],esp
  415852:	mov    eax,ds:0x1c051a57
  415857:	xchg   edi,eax
  415858:	retf   0x456b
  41585b:	aam    0x6c
  41585d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585e:	lahf   
  41585f:	cmp    eax,0x3881b03c
  415864:	xchg   ebp,eax
  415865:	or     esi,DWORD PTR [eax-0x16]
  415868:	dec    eax
  41586a:	cwde   
  41586b:	jmp    FWORD PTR [ebp+0x57]
  41586e:	mov    ah,0x33
  415870:	adc    eax,0x51dfab57
  415875:	push   esi
  415876:	(bad)  
  415878:	push   esi
  415879:	sbb    DWORD PTR [esi],ebp
  41587b:	mov    ebp,0xc27bc4db
  415880:	daa    
  415881:	sbb    eax,edi
  415883:	cli    
  415884:	push   esi
  415885:	imul   edi,DWORD PTR [ebp+edx*4+0x55],0x31
  41588a:	add    ah,ch
  41588c:	push   ebp
  41588d:	xor    al,cl
  41588f:	pop    edi
  415890:	cmp    eax,0x3f88e033
  415895:	pop    esi
  415896:	pop    edx
  415897:	loop   0x41590e
  415899:	and    eax,0xb8cb834a
  41589e:	pop    edx
  41589f:	ds jmp 0x415851
  4158a2:	add    cl,0x89
  4158a5:	call   0x7cc0ec72
  4158aa:	out    0xad,al
  4158ac:	stos   BYTE PTR es:[edi],al
  4158ad:	adc    eax,0xfe3e2daa
  4158b2:	cmp    BYTE PTR [ecx+0x36],ah
  4158b5:	ins    BYTE PTR es:[edi],dx
  4158b6:	lock ficomp WORD PTR [ebx+0x775f87b9]
  4158bd:	daa    
  4158be:	call   0xbbc9e16c
  4158c3:	mov    bl,0x5a
  4158c5:	xchg   ebx,eax
  4158c6:	je     0x4158b9
  4158c8:	cmp    BYTE PTR [eax+0x4cbd26a9],bl
  4158ce:	or     DWORD PTR [edx-0x3b],eax
  4158d1:	ss adc eax,0x6315567
  4158d7:	pop    ds
  4158d8:	out    dx,al
  4158d9:	in     al,0x29
  4158db:	test   al,0x55
  4158dd:	sbb    ch,BYTE PTR [ecx+0x8]
  4158e0:	mov    fs,WORD PTR ds:0xcad03c80
  4158e6:	cmc    
  4158e7:	sbb    DWORD PTR [eax+ebx*4-0x79319716],esi
  4158ee:	adc    dh,bh
  4158f0:	call   0xd6256667
  4158f5:	les    ebx,FWORD PTR [edi]
  4158f7:	dec    BYTE PTR [esi]
  4158f9:	xchg   DWORD PTR [ebx*8+0x19b4755d],esp
  415900:	(bad)  
  415901:	pushf  
  415902:	sbb    bh,bh
  415904:	xchg   edx,eax
  415905:	fidiv  DWORD PTR [esi-0x4dcdb2bd]
  41590b:	add    DWORD PTR [ecx+0x14],ebx
  41590e:	pop    ecx
  41590f:	push   ebp
  415910:	in     al,0x78
  415912:	mov    BYTE PTR [edi],0x7f
  415915:	xchg   ebp,eax
  415916:	pop    ebp
  415917:	retf   0x411
  41591a:	xchg   ecx,eax
  41591b:	in     eax,dx
  41591c:	ins    DWORD PTR es:[edi],dx
  41591d:	jns    0x4158dd
  41591f:	out    0x8,eax
  415921:	in     al,dx
  415922:	push   ebx
  415923:	loopne 0x41591e
  415925:	(bad)  
  415926:	jl     0x415950
  415928:	xchg   BYTE PTR [eax-0x6d],ah
  41592b:	mov    BYTE PTR gs:[ecx],cl
  41592e:	inc    edx
  41592f:	jno    0x415942
  415931:	outs   dx,BYTE PTR ds:[esi]
  415932:	adc    eax,0xe5324b5a
  415937:	dec    esp
  415938:	sti    
  415939:	int3   
  41593a:	dec    ebp
  41593b:	int3   
  41593c:	ins    DWORD PTR es:[edi],dx
  41593d:	es fadd st(2),st
  415940:	mov    gs,WORD PTR cs:[esi]
  415943:	in     al,dx
  415944:	es sub al,0x69
  415947:	shl    BYTE PTR [esi+0x2a453ff4],1
  41594d:	and    al,0x82
  41594f:	cdq    
  415950:	push   ecx
  415951:	jge    0x415926
  415953:	in     eax,0x8f
  415955:	mov    dl,BYTE PTR [ecx]
  415957:	mov    edi,0xcc838a74
  41595c:	push   cs
  41595d:	and    al,0x70
  41595f:	aad    0x12
  415961:	inc    edi
  415962:	out    dx,eax
  415963:	shr    DWORD PTR [ebx-0x23],1
  415966:	jg     0x4159ae
  415968:	xlat   BYTE PTR ds:[ebx]
  415969:	(bad)  [eax]
  41596b:	add    ah,BYTE PTR [ebp+ecx*8-0x13db4308]
  415972:	dec    esp
  415973:	addr16 pop ebx
  415975:	dec    esp
  415976:	push   esp
  415977:	pusha  
  415978:	jmp    0x2961:0xdf835775
  41597f:	pop    esi
  415980:	pop    esi
  415981:	push   ss
  415982:	xor    al,0xbe
  415984:	ret    0x68da
  415987:	mov    eax,0x17f92d1c
  41598c:	mov    cl,0xb4
  41598e:	dec    ebp
  41598f:	out    0xc3,eax
  415991:	cmp    BYTE PTR [edx-0x7bec4464],bh
  415997:	jp     0x415997
  415999:	xor    al,0x97
  41599b:	outs   dx,DWORD PTR ds:[esi]
  41599c:	(bad)  
  41599d:	xlat   BYTE PTR ds:[ebx]
  41599e:	outs   dx,DWORD PTR ds:[esi]
  41599f:	das    
  4159a0:	(bad)  
  4159a1:	ja     0x415a1a
  4159a3:	adc    DWORD PTR [edi+0x51],eax
  4159a6:	cli    
  4159a7:	cdq    
  4159a8:	out    dx,eax
  4159a9:	frstor [edi]
  4159ab:	mov    ebx,0x842c634c
  4159b0:	mov    bl,0x85
  4159b2:	adc    al,0x3c
  4159b4:	or     BYTE PTR [ebx-0x8],bh
  4159b7:	in     al,0xf0
  4159b9:	aas    
  4159ba:	scas   eax,DWORD PTR es:[edi]
  4159bb:	sbb    dh,BYTE PTR [ecx]
  4159bd:	frstor [esi]
  4159bf:	push   ss
  4159c0:	pop    ebp
  4159c1:	dec    edx
  4159c2:	dec    BYTE PTR [eax+0x44a57ff6]
  4159c8:	fs call 0xe2c70bd5
  4159ce:	stos   DWORD PTR es:[edi],eax
  4159cf:	(bad)  
  4159d0:	enter  0x26c5,0x49
  4159d4:	mov    ds:0xe066ed70,al
  4159d9:	(bad)  
  4159da:	mov    al,0xec
  4159dc:	mov    ds:0x75c7aba6,al
  4159e1:	mov    ch,0x85
  4159e3:	pop    ds
  4159e4:	adc    dl,cl
  4159e6:	(bad)  
  4159e7:	cmp    DWORD PTR [esi],edx
  4159e9:	mov    cl,0xbf
  4159eb:	enter  0xd286,0xff
  4159ef:	aas    
  4159f0:	fisub  WORD PTR [edi-0x6d9f3692]
  4159f6:	push   edi
  4159f7:	xlat   BYTE PTR ds:[ebx]
  4159f8:	and    al,0x2b
  4159fa:	rcr    BYTE PTR [edi+0x1e3023f8],0xbc
  415a01:	cmp    DWORD PTR [ecx+ecx*1-0x4513e1e3],0xa3be487d
  415a0c:	inc    esi
  415a0d:	jmp    0x2a17:0xc6b2a118
  415a14:	jnp    0x415a37
  415a16:	frstor [esi+0x12]
  415a19:	xor    edi,DWORD PTR [ebx+0x1ef42db4]
  415a1f:	jo     0x4159cf
  415a21:	mov    bl,0x53
  415a23:	test   eax,0x803ea4e3
  415a28:	scas   eax,DWORD PTR es:[edi]
  415a29:	inc    esp
  415a2a:	aad    0xdf
  415a2c:	xlat   BYTE PTR ds:[ebx]
  415a2d:	mov    DWORD PTR [edi],esi
  415a2f:	pop    ebx
  415a30:	or     al,0x3e
  415a32:	ds int 0x33
  415a35:	sub    DWORD PTR [esi+eax*8],0x99abeba7
  415a3c:	push   eax
  415a3d:	inc    edi
  415a3e:	imul   ebx,DWORD PTR [esi+0x16b89af5],0xffffffb0
  415a45:	lock inc esp
  415a47:	fs mov eax,0xa9103b91
  415a4d:	add    BYTE PTR ds:0xfc0de4b2,ch
  415a53:	cmp    eax,0x19758ad6
  415a58:	fsub   QWORD PTR [ebx-0x5e]
  415a5b:	xor    dh,0x40
  415a5e:	mov    esp,0x7459012
  415a63:	aaa    
  415a64:	or     DWORD PTR [ecx],ebx
  415a66:	jno    0x4159f8
  415a68:	push   0x2c
  415a6a:	add    ecx,ebp
  415a6c:	jo     0x415ae2
  415a6e:	cmp    esi,0xef69f410
  415a74:	dec    eax
  415a75:	cmp    eax,0x73a10ce8
  415a7a:	retf   0x1948
  415a7d:	dec    esp
  415a7e:	out    dx,eax
  415a7f:	pop    ss
  415a80:	mov    esp,0x92b9d39f
  415a85:	(bad)  
  415a86:	cmp    al,BYTE PTR [edi-0x2a]
  415a89:	or     DWORD PTR fs:[edi+ebx*4-0x3db9ae81],ecx
  415a91:	hlt    
  415a92:	fistp  DWORD PTR [edi]
  415a94:	sbb    bh,ch
  415a96:	mov    esp,0x84d07ca7
  415a9b:	and    DWORD PTR [ecx-0x30],edi
  415a9e:	sar    BYTE PTR [ecx],1
  415aa0:	cli    
  415aa1:	test   eax,0x1bd3049f
  415aa6:	or     bh,BYTE PTR [esi-0x61bab7b2]
  415aac:	add    DWORD PTR [edx+0x50de41fd],ebp
  415ab2:	push   ds
  415ab3:	xchg   ebp,eax
  415ab4:	(bad)  
  415ab5:	cmc    
  415ab6:	bswap  edx
  415ab8:	(bad)  
  415ab9:	jecxz  0x415b0b
  415abb:	aam    0x3c
  415abd:	icebp  
  415abe:	leave  
  415abf:	pop    esi
  415ac0:	in     eax,0xfd
  415ac2:	mov    ?,WORD PTR [ebp-0x16074662]
  415ac8:	or     al,BYTE PTR [edx]
  415aca:	hlt    
  415acb:	adc    dh,al
  415acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ace:	das    
  415acf:	(bad)  
  415ad0:	std    
  415ad1:	mov    ebx,0xfa42906
  415ad6:	mov    ds:0xffcbe95f,eax
  415adb:	jo     0x415aa4
  415add:	sbb    eax,0x51fb42e4
  415ae2:	jge    0x415af7
  415ae4:	pop    ebp
  415ae5:	fiadd  DWORD PTR [edx+eiz*4+0x7a42bc87]
  415aec:	mov    ch,0xd5
  415aee:	jmp    FWORD PTR [esi]
  415af0:	xor    ch,ah
  415af2:	(bad)  
  415af3:	sub    al,0x4a
  415af5:	repz ret 
  415af7:	sub    eax,0x4554d035
  415afc:	test   eax,0xeb283a28
  415b01:	lds    ebx,FWORD PTR [edi+eax*1-0x5e]
  415b05:	mov    bh,0xa8
  415b07:	mov    ch,0x43
  415b09:	jo     0x415b7d
  415b0b:	out    0x19,eax
  415b0d:	jge    0x415ac8
  415b0f:	mov    eax,DWORD PTR [ebp+0xb5b9b35]
  415b15:	jecxz  0x415b92
  415b17:	mov    al,0xdc
  415b19:	adc    DWORD PTR [ecx-0x404e5e99],0xd8d3507d
  415b23:	pushf  
  415b24:	push   ss
  415b25:	mov    ecx,edx
  415b27:	inc    edi
  415b28:	popf   
  415b29:	sub    eax,0xace6b343
  415b2e:	jl     0x415b8a
  415b30:	sub    al,0x2d
  415b32:	ins    DWORD PTR es:[edi],dx
  415b33:	and    bh,0x1d
  415b36:	or     DWORD PTR [eax+0x142f0b7f],esp
  415b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3d:	adc    cl,BYTE PTR [eax]
  415b3f:	push   es
  415b40:	gs push 0xffffff8c
  415b43:	jb     0x415afe
  415b45:	and    dl,BYTE PTR [eax-0x6c]
  415b48:	sub    BYTE PTR ds:0x66a1038e,bh
  415b4e:	pop    esp
  415b4f:	call   0xcfd0:0x4fb12dc
  415b56:	sub    esi,DWORD PTR [esi-0x52]
  415b59:	shl    DWORD PTR [esi-0x488fc7fb],0xbb
  415b60:	out    dx,al
  415b61:	adc    dh,BYTE PTR [edi+0x3e]
  415b64:	imul   esp,edi,0xb158d7f2
  415b6a:	loopne 0x415bcf
  415b6c:	mov    bh,0x93
  415b6e:	mov    eax,0xf2eb838d
  415b73:	lds    esi,FWORD PTR [ecx+0x351a1177]
  415b79:	add    al,0x5e
  415b7b:	icebp  
  415b7c:	xchg   esi,eax
  415b7d:	aas    
  415b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7f:	jmp    0x3fc25387
  415b84:	stos   BYTE PTR es:[edi],al
  415b85:	adc    BYTE PTR [esi-0x4e08eb18],ch
  415b8b:	rcr    DWORD PTR [edx+0x58],cl
  415b8e:	out    dx,al
  415b8f:	out    0x45,al
  415b91:	dec    eax
  415b92:	mov    WORD PTR [esi+0x5e],?
  415b95:	mov    ebp,0x439c012f
  415b9a:	jbe    0x415b38
  415b9c:	cmp    eax,ecx
  415b9e:	pop    ss
  415b9f:	mov    ebp,0xf79403f4
  415ba4:	pushf  
  415ba5:	outs   dx,BYTE PTR ds:[esi]
  415ba6:	call   0x667159f9
  415bab:	fmul   QWORD PTR [esi+0x2f]
  415bae:	jns    0x415bf4
  415bb0:	jne    0x415b4d
  415bb2:	fiadd  WORD PTR [ebx+0x112b3c1a]
  415bb8:	nop
  415bb9:	pop    ecx
  415bba:	pushf  
  415bbb:	and    cl,BYTE PTR [ecx]
  415bbd:	or     BYTE PTR [edi+0x2b],al
  415bc0:	loope  0x415bda
  415bc2:	loopne 0x415bd7
  415bc4:	mov    ecx,0x85a4985f
  415bc9:	xchg   edi,eax
  415bca:	sub    dl,dl
  415bcc:	iret   
  415bcd:	in     al,dx
  415bce:	sub    dl,al
  415bd0:	push   ebx
  415bd1:	int    0x79
  415bd3:	dec    ebx
  415bd4:	sub    bl,cl
  415bd6:	sar    DWORD PTR [ebx-0x3f5bab08],0xa9
  415bdd:	and    al,0x7b
  415bdf:	aas    
  415be0:	or     BYTE PTR [ecx+eax*4-0x752ef02f],cl
  415be7:	sti    
  415be8:	xor    BYTE PTR [eax+edi*4+0x4a],al
  415bec:	sub    al,0xc1
  415bee:	pop    eax
  415bef:	icebp  
  415bf0:	cdq    
  415bf1:	jl     0x415c16
  415bf3:	outs   dx,BYTE PTR ds:[esi]
  415bf4:	(bad)  
  415bf5:	nop
  415bf6:	nop
  415bf7:	adc    BYTE PTR [ecx-0x60],bl
  415bfa:	ror    DWORD PTR [ebp-0x78e1885],0x77
  415c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c02:	jecxz  0x415c18
  415c04:	jge    0x415bf5
  415c06:	rcr    al,1
  415c08:	addr16 add eax,0x53434fde
  415c0e:	sub    BYTE PTR [esi-0x2932f94c],bh
  415c14:	out    dx,al
  415c15:	sub    esp,0x44ceae1f
  415c1b:	jns    0x415be8
  415c1d:	mov    ah,BYTE PTR [ebp+0x16]
  415c20:	call   0x67a955ce
  415c25:	jb     0x415bc7
  415c27:	loop   0x415bf7
  415c29:	mov    ds:0xca5df931,al
  415c2e:	es js  0x415bfa
  415c31:	stc    
  415c32:	mov    al,0x12
  415c34:	daa    
  415c35:	adc    eax,0x472cf655
  415c3a:	mov    ds:0xcfff6174,eax
  415c3f:	call   0x3960:0x2488b960
  415c46:	out    0x3b,eax
  415c48:	popa   
  415c49:	sub    al,0xc2
  415c4b:	jne    0x415c1e
  415c4d:	aas    
  415c4e:	sub    eax,0x511529bd
  415c53:	fst    QWORD PTR [edx]
  415c55:	imul   esp,DWORD PTR [edx-0x660898d1],0xffffff8c
  415c5c:	ss test edi,0x98d6334f
  415c63:	xchg   DWORD PTR [edx-0x5d],ebp
  415c66:	sub    bh,ch
  415c68:	inc    eax
  415c69:	pop    es
  415c6a:	xchg   ebp,eax
  415c6b:	retf   
  415c6c:	repnz out dx,al
  415c6e:	inc    eax
  415c6f:	test   DWORD PTR ds:0x1c5c59d7,esp
  415c75:	or     DWORD PTR [ebp+esi*1+0x5285ef99],ecx
  415c7c:	dec    ebp
  415c7d:	inc    ebp
  415c7e:	call   0x1c30:0x5be5204f
  415c85:	and    bl,BYTE PTR [edx-0x542132b3]
  415c8b:	sub    cl,bh
  415c8d:	push   esp
  415c8e:	and    DWORD PTR [ecx+0x5ffb617],ebp
  415c94:	adc    DWORD PTR ds:0x93d211d7,0x4b
  415c9b:	ins    DWORD PTR es:[edi],dx
  415c9c:	mov    al,BYTE PTR [ebx]
  415c9e:	imul   edx,esp,0xffffff9c
  415ca1:	xor    BYTE PTR ds:0x561d8d4c,dh
  415ca7:	setle  al
  415caa:	pusha  
  415cab:	(bad)  
  415cad:	cli    
  415cae:	lahf   
  415caf:	aas    
  415cb0:	cmp    eax,0x72cf1539
  415cb5:	cmc    
  415cb6:	in     eax,0x2b
  415cb8:	push   esp
  415cb9:	cmp    ch,BYTE PTR [eax+0x1f061d12]
  415cbf:	fstp   TBYTE PTR [esi+0x4daffac1]
  415cc5:	fadd   st(4),st
  415cc7:	hlt    
  415cc8:	adc    ch,bl
  415cca:	and    DWORD PTR [ebp-0x69],0x369e19a5
  415cd1:	dec    edx
  415cd2:	pop    ds
  415cd3:	int    0x65
  415cd5:	mov    dl,0x9f
  415cd7:	outs   dx,DWORD PTR ds:[esi]
  415cd8:	mov    edx,0x7343b560
  415cdd:	lods   eax,DWORD PTR ds:[esi]
  415cde:	xchg   ecx,eax
  415cdf:	not    esi
  415ce1:	gs or  esi,edx
  415ce4:	add    eax,0x38
  415ce7:	repz jmp 0xa301:0xe527fe42
  415cef:	push   0xffffff89
  415cf1:	in     al,0x1
  415cf3:	sbb    bl,dl
  415cf5:	inc    edx
  415cf6:	sbb    eax,DWORD PTR [edx]
  415cf8:	jecxz  0x415c9b
  415cfa:	bound  ebx,QWORD PTR [ebx+0x115684c3]
  415d00:	inc    ebx
  415d01:	outs   dx,BYTE PTR ds:[esi]
  415d02:	fsub   DWORD PTR [edx]
  415d04:	(bad)  
  415d05:	cmc    
  415d06:	jns    0x415cf0
  415d08:	xor    al,0x95
  415d0a:	paddd  mm1,mm1
  415d0d:	xchg   BYTE PTR [esi+0x721b798],bl
  415d13:	add    al,0x20
  415d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d16:	mov    ah,0xfd
  415d18:	ins    DWORD PTR es:[edi],dx
  415d19:	adc    al,0x84
  415d1b:	inc    esi
  415d1c:	cmp    DWORD PTR [edi+0x3bbeb135],esp
  415d22:	xchg   edx,eax
  415d23:	and    esp,esi
  415d25:	push   cs
  415d26:	mov    WORD PTR [edx+esi*1+0x3099c865],?
  415d2d:	icebp  
  415d2e:	imul   ebp,DWORD PTR [edi],0xffffffd0
  415d31:	out    dx,eax
  415d32:	push   edx
  415d33:	sti    
  415d34:	mov    eax,fs
  415d36:	outs   dx,BYTE PTR ds:[esi]
  415d37:	lahf   
  415d38:	push   ecx
  415d39:	xor    al,0x55
  415d3b:	sub    al,BYTE PTR [edx+0x8a059c4]
  415d41:	je     0x415da9
  415d43:	clc    
  415d44:	sub    eax,0x1c9394a1
  415d49:	mov    eax,0x5c6f6cc7
  415d4e:	stc    
  415d4f:	sub    al,0xca
  415d52:	cmp    al,0xf5
  415d54:	xchg   esp,eax
  415d55:	xchg   esp,eax
  415d56:	test   eax,0xcc1abd6b
  415d5b:	inc    ebx
  415d5c:	div    dh
  415d5e:	inc    esi
  415d5f:	popf   
  415d60:	shl    ebp,0x5c
  415d63:	mov    esp,0xcb5f15dd
  415d68:	lahf   
  415d69:	inc    eax
  415d6a:	sbb    cl,BYTE PTR [ebx]
  415d6c:	pop    esi
  415d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6e:	mov    edx,0xf32b3714
  415d73:	xor    DWORD PTR [ebx-0x61],ebx
  415d76:	int3   
  415d77:	sub    BYTE PTR [edi],ah
  415d79:	mov    DWORD PTR [edi+0x5ef0ac0c],edi
  415d7f:	arpl   ax,dx
  415d81:	std    
  415d82:	adc    BYTE PTR [edi+0x23afcb37],ch
  415d88:	sub    cl,dl
  415d8a:	push   cs
  415d8b:	mov    ss,edi
  415d8d:	call   0xfde5:0x49d8e665
  415d94:	mov    ds:0x194d3102,al
  415d99:	xor    BYTE PTR [ebx],ah
  415d9b:	ror    dh,1
  415d9d:	mov    WORD PTR [esi-0x26],cs
  415da0:	jge    0x415dad
  415da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da3:	mov    ss:0xf85354b6,al
  415da9:	adc    eax,0x9164187e
  415dae:	aad    0xe8
  415db0:	pop    eax
  415db1:	cmp    eax,0xbbe4c046
  415db6:	inc    ecx
  415db7:	jno    0x415e03
  415db9:	aas    
  415dba:	pusha  
  415dbb:	mov    ebp,0x48ebebeb
  415dc0:	test   al,0x50
  415dc2:	shl    BYTE PTR [ebp-0x54],1
  415dc5:	push   ecx
  415dc6:	std    
  415dc7:	push   edx
  415dc8:	sbb    dl,ch
  415dca:	cdq    
  415dcb:	stos   BYTE PTR es:[edi],al
  415dcc:	or     DWORD PTR [ebx+0x5fdf7767],0xffffffc2
  415dd3:	or     cl,BYTE PTR [esi-0x538347ab]
  415dd9:	sbb    DWORD PTR [eax+esi*1+0x303c51ed],edi
  415de0:	lods   eax,DWORD PTR ds:[esi]
  415de1:	push   cs
  415de2:	loopne 0x415d95
  415de4:	sbb    DWORD PTR [ebp-0x6d],edx
  415de7:	push   ebp
  415de8:	or     al,0x6c
  415dea:	and    edi,DWORD PTR [ebx+0x2a]
  415ded:	and    eax,0xb0ceb05
  415df2:	and    ah,BYTE PTR [esi-0x57f7919e]
  415df8:	and    eax,0x417c749b
  415dfd:	loop   0x415e00
  415dff:	pop    ebx
  415e00:	push   edx
  415e01:	imul   ecx,DWORD PTR [ebx-0x2d],0xa7af2e50
  415e08:	popa   
  415e09:	fild   DWORD PTR [ecx+0x49]
  415e0c:	retf   
  415e0d:	mov    esi,0x6ef8083d
  415e12:	lods   eax,DWORD PTR ds:[esi]
  415e13:	into   
  415e14:	lock rcl bh,1
  415e17:	out    dx,eax
  415e18:	(bad)  
  415e19:	cwde   
  415e1a:	loope  0x415de6
  415e1c:	push   ds
  415e1d:	pop    ss
  415e1e:	jbe    0x415de9
  415e20:	adc    DWORD PTR [edi],ebp
  415e22:	mov    eax,DWORD PTR ds:0xfb008413
  415e28:	mov    esp,DWORD PTR [esi]
  415e2a:	xor    eax,0xedeb9d4f
  415e2f:	mov    ch,0x46
  415e31:	pop    edi
  415e32:	arpl   WORD PTR [ebx],di
  415e34:	les    esp,FWORD PTR [esi+0x7cabf72]
  415e3a:	sub    dh,cl
  415e3c:	rol    BYTE PTR [ebp+0x32],1
  415e3f:	retf   
  415e40:	in     al,dx
  415e41:	adc    al,0x5f
  415e43:	fs pop ecx
  415e45:	mov    edi,0x8ed8446c
  415e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e4b:	ret    0x7945
  415e4e:	jo     0x415e86
  415e50:	pop    eax
  415e51:	and    ch,BYTE PTR [ebp+0x786108c9]
  415e57:	cmp    eax,0xe58869e7
  415e5c:	(bad)  
  415e5d:	or     al,ah
  415e5f:	cli    
  415e60:	stc    
  415e61:	xchg   ebp,eax
  415e62:	cwde   
  415e63:	test   al,0x91
  415e65:	jmp    0x56c4f925
  415e6a:	idiv   edx
  415e6c:	adc    ebx,DWORD PTR [bp+di]
  415e6f:	jns    0x415e6d
  415e71:	sbb    BYTE PTR [edi],bl
  415e73:	stos   BYTE PTR es:[edi],al
  415e74:	fucomp st(0)
  415e76:	xlat   BYTE PTR ds:[ebx]
  415e77:	and    edi,DWORD PTR [eax]
  415e79:	dec    edx
  415e7a:	push   0x45
  415e7c:	loop   0x415ece
  415e7e:	retf   
  415e7f:	loopne 0x415e63
  415e81:	imul   esp,DWORD PTR [ecx+0x75],0x6f784537
  415e88:	dec    esp
  415e89:	pop    ebx
  415e8a:	push   ss
  415e8b:	inc    edx
  415e8d:	push   ebx
  415e8e:	(bad)  
  415e8f:	xor    al,0x74
  415e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e92:	jecxz  0x415ea0
  415e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e95:	stc    
  415e96:	and    DWORD PTR [eax],ebx
  415e98:	mov    ecx,0xc3387e43
  415e9d:	cmc    
  415e9e:	imul   ebx,edi,0x459f2cd6
  415ea4:	pop    ecx
  415ea5:	lods   al,BYTE PTR ds:[esi]
  415ea6:	cli    
  415ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea8:	rcr    esi,0x3e
  415eab:	call   0x2213f6be
  415eb0:	out    0x7b,eax
  415eb2:	pop    ds
  415eb3:	mov    cl,0x2e
  415eb5:	(bad)  
  415eb6:	jle    0x415e6f
  415eb8:	aaa    
  415eb9:	leave  
  415eba:	xor    eax,0xdb2678eb
  415ebf:	(bad)  
  415ec0:	(bad)  
  415ec2:	int3   
  415ec3:	mov    bl,bl
  415ec5:	inc    eax
  415ec6:	and    BYTE PTR [edx-0x5c],dl
  415ec9:	xor    DWORD PTR [ebx],ebp
  415ecb:	cld    
  415ecc:	mov    ebp,0x62f74d9c
  415ed1:	push   eax
  415ed2:	gs xchg esp,eax
  415ed4:	xchg   ebx,eax
  415ed5:	aaa    
  415ed6:	dec    esi
  415ed7:	mov    al,ds:0x9baf5eb7
  415edc:	fs in  eax,dx
  415ede:	daa    
  415edf:	es inc esi
  415ee1:	stos   DWORD PTR es:[edi],eax
  415ee2:	sub    eax,0x2f37d080
  415ee7:	cmc    
  415ee8:	call   0x8570ce78
  415eed:	cdq    
  415eee:	gs in  al,dx
  415ef0:	pop    esi
  415ef1:	dec    esi
  415ef2:	inc    ebp
  415ef3:	out    0x1a,eax
  415ef5:	test   DWORD PTR [edx-0x7d],0xe6c3435f
  415efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efd:	jmp    0xb946:0x40bb50d0
  415f04:	fimul  DWORD PTR [edx+0x5cd90b2f]
  415f0a:	pop    ss
  415f0b:	iret   
  415f0c:	mov    WORD PTR [edx+0x1b],es
  415f0f:	int3   
  415f10:	cmc    
  415f11:	int    0xdf
  415f13:	int    0x54
  415f15:	into   
  415f16:	push   edx
  415f17:	adc    ch,cl
  415f19:	push   edi
  415f1a:	adc    DWORD PTR [edi],ebp
  415f1c:	mov    ds:0xd642617e,al
  415f21:	jns    0x415ec4
  415f23:	sahf   
  415f24:	ins    BYTE PTR es:[edi],dx
  415f25:	loop   0x415f90
  415f27:	cmp    BYTE PTR [eax+0x77a4a2a1],0xe1
  415f2e:	add    ah,BYTE PTR [eax-0x41]
  415f31:	(bad)  
  415f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f34:	add    DWORD PTR [edi],0xfa82c4c4
  415f3a:	out    dx,eax
  415f3b:	dec    esp
  415f3c:	out    dx,eax
  415f3d:	in     eax,dx
  415f3e:	sub    ch,BYTE PTR [eax-0x448fa76e]
  415f44:	test   al,0x41
  415f46:	clc    
  415f47:	popa   
  415f48:	in     al,0xc0
  415f4a:	or     BYTE PTR [ebp-0x6f54f78b],bh
  415f50:	sar    BYTE PTR [eax],0x43
  415f53:	sbb    eax,0x7a2ce0f6
  415f58:	mov    ch,BYTE PTR [ebx+0x31]
  415f5b:	push   edi
  415f5c:	push   0x52
  415f5e:	outs   dx,DWORD PTR ds:[esi]
  415f5f:	push   0xffffff98
  415f61:	push   edx
  415f62:	fcmovnb st,st(0)
  415f64:	jo     0x415ef9
  415f66:	adc    BYTE PTR [ecx+0x16],dl
  415f69:	push   ss
  415f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6b:	out    0x37,eax
  415f6d:	aas    
  415f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f6f:	aad    0x56
  415f71:	pop    ebx
  415f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f73:	pop    ds
  415f74:	add    BYTE PTR [ebp-0x19],ch
  415f77:	adc    esp,ebx
  415f79:	mov    eax,ds:0x6d41638a
  415f7e:	pushf  
  415f7f:	mov    esi,0xcf40a160
  415f84:	lds    edi,FWORD PTR [ebx-0x6a1f3aff]
  415f8a:	cmp    DWORD PTR [ebx-0x541de58a],ebx
  415f90:	hlt    
  415f91:	jg     0x415fd9
  415f93:	mov    ebp,ebp
  415f95:	scas   eax,DWORD PTR es:[edi]
  415f96:	cmp    eax,0xa98c07d4
  415f9b:	or     dh,cl
  415f9d:	mov    edi,0x10ae352f
  415fa2:	imul   esp,ecx,0xfa85651
  415fa8:	ret    0xbf84
  415fab:	shl    BYTE PTR [eax],0x25
  415fae:	fsubp  st(1),st
  415fb0:	(bad)  
  415fb1:	xchg   ebx,eax
  415fb2:	xchg   BYTE PTR [ebx+ebp*1+0x134ff6af],ch
  415fb9:	call   0x49dc80f
  415fbe:	jae    0x415ffa
  415fc0:	adc    cl,bl
  415fc2:	fcomp  DWORD PTR [ecx]
  415fc4:	sbb    esp,DWORD PTR [edx+0x20]
  415fc7:	sahf   
  415fc8:	xor    al,0x93
  415fca:	xchg   ebx,eax
  415fcb:	dec    esi
  415fcc:	ret    0x15cd
  415fcf:	mov    dh,0x6e
  415fd1:	aaa    
  415fd2:	mov    bh,0xbf
  415fd4:	push   0xffffffd7
  415fd6:	push   0x6122c9a4
  415fdb:	popa   
  415fdc:	add    edx,DWORD PTR [eax+0x76]
  415fdf:	jg     0x415f6e
  415fe1:	mov    edi,0x5f784c63
  415fe6:	inc    BYTE PTR [eax+ebp*2+0x25]
  415fea:	xor    ch,BYTE PTR [ebp-0x313e3ad0]
  415ff0:	sti    
  415ff1:	sub    eax,0xace4d964
  415ff6:	lods   eax,DWORD PTR ds:[esi]
  415ff7:	pop    ss
  415ff8:	xor    eax,0x3e371275
  415ffd:	or     ebx,ebp
  415fff:	fistp  DWORD PTR [esi-0x3c]
  416002:	test   BYTE PTR [ecx],0xde
  416005:	lds    ecx,FWORD PTR [ebp-0x35]
  416008:	mov    edx,0xf8d84793
  41600d:	xchg   ebp,eax
  41600e:	nop
  41600f:	or     al,0x62
  416011:	ins    BYTE PTR es:[edi],dx
  416012:	mov    ecx,0x4efdc3ec
  416017:	mov    ?,edi
  416019:	retf   0x3cb5
  41601c:	cmp    eax,0xcf8418ab
  416021:	ja     0x415fd8
  416023:	ret    0xc1c4
  416026:	xchg   ebx,eax
  416027:	or     bl,ah
  416029:	mul    DWORD PTR [ebp+0x7]
  41602c:	sbb    dl,BYTE PTR [eax+0x79263b3d]
  416032:	xor    eax,0x3d9af7c8
  416037:	ins    DWORD PTR es:[edi],dx
  416038:	sbb    eax,0xb3922c49
  41603d:	cli    
  41603e:	rol    BYTE PTR [eax-0x1f569e04],0x14
  416045:	sub    eax,0x150ae0e6
  41604a:	inc    ebp
  41604b:	jns    0x41607e
  41604d:	push   cs
  41604e:	sub    DWORD PTR [edx-0x23439c90],ebx
  416054:	lea    edx,[esi+0x7f]
  416057:	cmp    edi,esi
  416059:	fisttp QWORD PTR [eax]
  41605b:	mov    cl,0x16
  41605d:	(bad)  
  41605e:	mov    al,0xd4
  416060:	sbb    DWORD PTR fs:[edi+0x53],esp
  416064:	xchg   edx,eax
  416065:	in     eax,0x3c
  416067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416068:	nop
  416069:	pop    ss
  41606a:	cmp    eax,0xe2358513
  41606f:	scas   al,BYTE PTR es:[edi]
  416070:	xor    al,0xa9
  416072:	push   edi
  416074:	jecxz  0x416036
  416076:	test   al,0x66
  416078:	outs   dx,DWORD PTR ds:[esi]
  416079:	or     DWORD PTR [edi],edi
  41607b:	add    bh,bh
  41607d:	adc    edx,DWORD PTR [esi+0x49c9dd91]
  416083:	dec    ecx
  416084:	mov    ds:0xa4684150,al
  416089:	(bad)  
  41608a:	test   al,0xb6
  41608c:	inc    esp
  41608d:	cmp    eax,DWORD PTR [eax-0x4c114afa]
  416093:	fcmovbe st,st(1)
  416095:	push   edx
  416096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416097:	nop
  416098:	inc    ecx
  416099:	pushf  
  41609a:	out    dx,al
  41609b:	xor    BYTE PTR [eax],0x50
  41609e:	(bad)  
  4160a0:	mov    cl,0xf1
  4160a2:	inc    ebp
  4160a3:	sbb    al,ah
  4160a5:	mov    ebx,DWORD PTR [edi]
  4160a7:	loopne 0x4160e3
  4160a9:	nop
  4160aa:	and    dl,bl
  4160ac:	mov    ebx,0x9fb03fc4
  4160b1:	retf   
  4160b2:	cmp    ebp,DWORD PTR [esi-0x32ba21ad]
  4160b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160b9:	adc    eax,0xfa586c32
  4160be:	sbb    ah,BYTE PTR [edi]
  4160c0:	jmp    0x4160dc
  4160c2:	(bad)  
  4160c4:	pop    esi
  4160c5:	fisubr WORD PTR [ecx]
  4160c7:	jp     0x416143
  4160c9:	xchg   esp,eax
  4160ca:	fdiv   QWORD PTR [ecx-0x18]
  4160cd:	(bad)  [esi+0x18]
  4160d0:	sbb    DWORD PTR [ebx+0x28b250ed],0x96463cea
  4160da:	je     0x4160b3
  4160dc:	test   BYTE PTR [ecx+0x3e41d0e8],ah
  4160e2:	or     DWORD PTR [esi],0x8dcdfc98
  4160e8:	hlt    
  4160e9:	fwait
  4160ea:	add    edx,DWORD PTR [eax+eax*1+0x19]
  4160ee:	xchg   ecx,eax
  4160ef:	xchg   esi,eax
  4160f0:	stc    
  4160f1:	mov    al,ds:0x42f1fbfd
  4160f6:	inc    ebp
  4160f7:	test   al,0x1c
  4160f9:	push   ecx
  4160fa:	cmp    eax,0xb1001130
  4160ff:	dec    eax
  416100:	jge    0x416160
  416102:	leave  
  416103:	icebp  
  416104:	pmaxub mm5,QWORD PTR [esi-0x5]
  416108:	xchg   esp,eax
  416109:	lods   al,BYTE PTR ds:[esi]
  41610a:	ins    BYTE PTR es:[edi],dx
  41610b:	push   edx
  41610c:	cmp    BYTE PTR [eiz*8-0x2c6a1f8],bl
  416113:	nop
  416114:	pusha  
  416115:	leave  
  416116:	and    DWORD PTR [ebx+0x6e536adc],0x9b06a4e8
  416120:	dec    edx
  416121:	mov    eax,0x63146970
  416126:	stos   BYTE PTR es:[edi],al
  416127:	dec    ebp
  416128:	test   eax,0x7269d8ee
  41612d:	out    0x63,al
  41612f:	sar    BYTE PTR [esi+0x25],0xf
  416133:	es aaa 
  416135:	in     al,dx
  416136:	imul   edx,DWORD PTR [ecx],0xffffffb5
  416139:	cmp    DWORD PTR [edi+0x4a3f6229],ebp
  41613f:	std    
  416140:	test   eax,0x53f53d6d
  416145:	push   ds
  416146:	pop    edx
  416147:	jmp    0x4161b7
  416149:	adc    cl,dh
  41614b:	mov    ds:0x57982a0b,al
  416150:	inc    esp
  416151:	ins    DWORD PTR es:[edi],dx
  416152:	ret    0x949c
  416155:	sahf   
  416156:	dec    ebp
  416157:	add    eax,0xd3ed704e
  41615c:	dec    eax
  41615d:	dec    esi
  41615e:	jb     0x41611c
  416160:	cmp    ebp,DWORD PTR [ecx]
  416162:	div    DWORD PTR [ecx+0x78]
  416165:	add    ebx,DWORD PTR [edx-0x2d429c91]
  41616b:	sub    ch,bh
  41616d:	adc    DWORD PTR [ebp-0x54c0d28d],ecx
  416173:	das    
  416174:	xchg   ebp,eax
  416175:	stos   DWORD PTR es:[edi],eax
  416176:	out    0xa9,eax
  416178:	mov    ecx,0xb9b9fa21
  41617d:	mov    eax,ds:0x984c45db
  416182:	push   0x1442c91d
  416187:	mov    dh,0x67
  416189:	shl    BYTE PTR [edx-0x57],cl
  41618c:	jmp    0x416183
  41618e:	mov    ds:0xcb903fb5,eax
  416193:	mov    ah,0x51
  416195:	mul    BYTE PTR [ebx-0x7c9a4caf]
  41619b:	mov    al,BYTE PTR [ebx]
  41619d:	in     eax,0x70
  41619f:	dec    eax
  4161a0:	aad    0x35
  4161a2:	lods   eax,DWORD PTR ds:[esi]
  4161a3:	pop    ecx
  4161a4:	xchg   BYTE PTR [ebp+0x6b],ah
  4161a7:	in     eax,0x68
  4161a9:	icebp  
  4161aa:	jge    0x416159
  4161ac:	add    bl,0xcb
  4161af:	push   0xab9925f4
  4161b4:	cli    
  4161b5:	pop    es
  4161b6:	sbb    eax,0x5c7d3ee7
  4161bb:	or     BYTE PTR [eax-0x41],dh
  4161be:	lock cmp dh,BYTE PTR [ebp-0x24]
  4161c2:	dec    ebx
  4161c3:	jecxz  0x41616a
  4161c5:	adc    ch,BYTE PTR ds:0x4e87b480
  4161cb:	mov    eax,0x33a1d7c5
  4161d0:	es xchg ebp,eax
  4161d2:	sbb    al,0xeb
  4161d4:	out    0x8e,al
  4161d6:	jp     0x416200
  4161d8:	rcr    ah,cl
  4161da:	nop
  4161db:	int3   
  4161dc:	mov    BYTE PTR ds:0x8cec672f,cl
  4161e2:	mov    edi,0x2cca86ae
  4161e7:	adc    eax,0x9cd6f832
  4161ec:	sbb    al,0xca
  4161ee:	dec    ebx
  4161ef:	imul   eax,ecx,0xfffffff5
  4161f2:	adc    eax,0x97b52737
  4161f7:	scas   al,BYTE PTR es:[edi]
  4161f8:	in     al,dx
  4161f9:	(bad)  
  4161fa:	imul   ebp,DWORD PTR [edx+0x35],0xffffffa2
  4161fe:	int3   
  4161ff:	lahf   
  416200:	or     DWORD PTR [edi],ebx
  416202:	fsqrt  
  416204:	inc    edx
  416205:	and    al,0xea
  416207:	ja     0x4161c4
  416209:	aam    0x12
  41620b:	es retf 
  41620d:	retf   
  41620e:	aas    
  41620f:	into   
  416210:	dec    esp
  416212:	lds    edx,FWORD PTR [esi-0x104c5c8d]
  416218:	inc    esi
  416219:	add    al,0xf2
  41621b:	scas   al,BYTE PTR es:[edi]
  41621c:	lods   al,BYTE PTR ds:[esi]
  41621d:	repz mov ecx,DWORD PTR [esi]
  416220:	cli    
  416221:	popa   
  416222:	test   BYTE PTR [ebx-0x4f],cl
  416225:	sub    al,0x50
  416227:	mov    ch,0xd4
  416229:	xchg   ebx,eax
  41622a:	xchg   esi,eax
  41622b:	xchg   DWORD PTR [eax+0x5],edx
  41622e:	or     edx,DWORD PTR [ebx+0x67a2410f]
  416234:	add    eax,0xfe2e07a2
  416239:	nop
  41623a:	lods   eax,DWORD PTR ds:[esi]
  41623b:	icebp  
  41623c:	or     dl,BYTE PTR [edi+0x6d]
  41623f:	or     eax,0x4d10248e
  416244:	shl    DWORD PTR [edx-0x2973f1aa],0xca
  41624b:	ja     0x41622b
  41624d:	pusha  
  41624e:	sub    BYTE PTR [edi],bh
  416250:	je     0x4161fc
  416252:	lahf   
  416253:	les    ebp,FWORD PTR [esi-0x11]
  416256:	inc    bl
  416258:	inc    edi
  416259:	loope  0x416286
  41625b:	ds cmp al,0x57
  41625e:	or     eax,eax
  416260:	cmp    ah,bl
  416262:	pop    es
  416263:	mov    ah,0x11
  416265:	ss inc ebx
  416267:	push   ebp
  416268:	or     DWORD PTR [edi-0x1083a678],edx
  41626e:	cli    
  41626f:	mov    esp,gs
  416271:	loopne 0x416290
  416273:	mov    bh,0xa3
  416275:	sub    eax,0x962175f2
  41627a:	add    eax,0x83895de0
  41627f:	lds    edx,FWORD PTR ds:0x4a942725
  416285:	xor    ch,ch
  416287:	loopne 0x416278
  416289:	xchg   DWORD PTR [eax+0x7b],ebx
  41628c:	sbb    ecx,DWORD PTR [ebp+0x4b]
  41628f:	mov    edx,0xde7cd9ae
  416294:	push   esi
  416295:	repnz push eax
  416297:	fs js  0x41624b
  41629a:	add    eax,esi
  41629c:	shr    DWORD PTR ds:0xc5e9db3a,1
  4162a2:	retf   
  4162a3:	push   ss
  4162a4:	rol    BYTE PTR [eax],cl
  4162a6:	xchg   DWORD PTR ds:0xc7ef72d3,ebx
  4162ac:	or     cl,BYTE PTR [eax+eiz*2]
  4162af:	cmp    eax,DWORD PTR [esi]
  4162b1:	xor    al,0x13
  4162b3:	fsubr  QWORD PTR [esp+ecx*4-0x2d78ab15]
  4162ba:	mov    cl,0x1e
  4162bc:	xor    BYTE PTR [eax+0x17],al
  4162bf:	mov    eax,0xaddaf3fb
  4162c4:	cwde   
  4162c5:	sub    eax,0xa589087c
  4162ca:	and    bh,0xc
  4162cd:	jns    0x416304
  4162cf:	add    DWORD PTR [ecx+ecx*1],ecx
  4162d2:	stos   BYTE PTR es:[edi],al
  4162d3:	dec    eax
  4162d4:	jae    0x4162fe
  4162d6:	ja     0x4162ba
  4162d8:	fadd   QWORD PTR [edi-0x34]
  4162db:	inc    ebx
  4162dc:	(bad)  
  4162dd:	addr16 sub eax,0x4a5571c0
  4162e3:	cmp    BYTE PTR [ecx+0x22ddbbe1],bh
  4162e9:	cdq    
  4162ea:	sub    BYTE PTR [eax+0x43],bl
  4162ed:	dec    esp
  4162ee:	(bad)  
  4162f0:	inc    ebp
  4162f1:	dec    esp
  4162f2:	ret    
  4162f3:	jne    0x4162ee
  4162f5:	dec    edx
  4162f6:	data16 (bad) 
  4162f8:	repz adc BYTE PTR [edx+0x728f4776],bl
  4162ff:	jo     0x416349
  416301:	test   BYTE PTR [ecx],ch
  416303:	jb     0x4162c6
  416305:	xchg   ecx,eax
  416306:	lods   eax,DWORD PTR ds:[esi]
  416307:	xor    cl,0xcd
  41630a:	sahf   
  41630b:	cmp    al,0x36
  41630d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41630e:	pop    ds
  41630f:	lods   al,BYTE PTR ds:[esi]
  416310:	arpl   bp,si
  416312:	int    0xb5
  416314:	xor    eax,0xa096647b
  416319:	cmp    DWORD PTR [edi+0x78],eax
  41631c:	test   eax,0xe298e125
  416321:	scas   eax,DWORD PTR es:[edi]
  416322:	addr16 out dx,al
  416324:	pop    ss
  416325:	pop    es
  416326:	and    BYTE PTR [eax],dl
  416328:	pushf  
  416329:	mov    ?,WORD PTR [ebp+0x2fd11fd0]
  41632f:	cld    
  416330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416331:	mov    ch,0xf1
  416333:	mov    al,ds:0xe79a72c7
  416338:	push   ss
  416339:	aas    
  41633a:	ss and al,0xca
  41633d:	call   DWORD PTR [ebp-0x1a5dacbf]
  416343:	jb     0x416308
  416345:	pop    ds
  416346:	push   esp
  416347:	fimul  DWORD PTR [ebx-0x6]
  41634a:	je     0x4163a3
  41634c:	out    dx,al
  41634d:	jmp    0x4162ff
  41634f:	xlat   BYTE PTR ds:[ebx]
  416350:	iret   
  416351:	ins    DWORD PTR es:[edi],dx
  416352:	add    ch,ah
  416354:	xchg   esi,eax
  416355:	repz cmc 
  416357:	lods   al,BYTE PTR ds:[esi]
  416358:	pop    es
  416359:	arpl   WORD PTR [ebx-0x21],cx
  41635c:	jl     0x416353
  41635e:	mov    ebp,0xc05b10d8
  416363:	jmp    0x8fcb:0xe627d088
  41636a:	rcl    DWORD PTR [edi],cl
  41636c:	cmc    
  41636d:	jge    0x416393
  41636f:	in     al,0x2e
  416371:	xor    al,0xf9
  416373:	pop    ds
  416374:	sbb    edx,DWORD PTR [ecx]
  416376:	pop    esp
  416377:	xchg   ebx,eax
  416378:	mov    WORD PTR [eax],ds
  41637a:	pop    es
  41637b:	aaa    
  41637c:	dec    esi
  41637d:	pop    ebp
  41637e:	mov    ds:0x62cfbdff,eax
  416383:	in     ax,dx
  416385:	mul    DWORD PTR [ebx]
  416387:	pusha  
  416388:	push   0xf54d6141
  41638d:	or     esp,DWORD PTR [edi-0x19]
  416390:	sbb    ebp,DWORD PTR [ebx]
  416392:	xor    esi,ecx
  416394:	int    0xd7
  416396:	sub    eax,0x6e4b07df
  41639b:	push   edi
  41639c:	nop
  41639d:	push   edi
  41639e:	inc    ebx
  41639f:	push   ebp
  4163a0:	into   
  4163a1:	jb     0x416329
  4163a3:	jne    0x4163a8
  4163a5:	test   DWORD PTR [edx+0x615f7ba5],eax
  4163ab:	sar    al,cl
  4163ad:	data16 xlat BYTE PTR ds:[ebx]
  4163af:	mov    al,ds:0xe20ab7b0
  4163b4:	jmp    0xedc9:0x2f4488fd
  4163bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bc:	dec    ebx
  4163bd:	inc    ebx
  4163be:	inc    edi
  4163bf:	jae    0x41634d
  4163c1:	cs and eax,0x3a5b0086
  4163c7:	popf   
  4163c8:	or     cl,BYTE PTR [ebx]
  4163ca:	or     WORD PTR [ebx],di
  4163cd:	pop    ecx
  4163ce:	pop    es
  4163cf:	sti    
  4163d0:	push   ds
  4163d1:	push   cs
  4163d2:	js     0x4163b1
  4163d4:	stc    
  4163d5:	cmp    cl,BYTE PTR ds:0x6fa0a7a4
  4163db:	mov    WORD PTR [ebx+0x2],?
  4163de:	and    BYTE PTR [edi],dh
  4163e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e1:	ss xchg ebp,eax
  4163e3:	mov    cl,cl
  4163e5:	inc    ebp
  4163e6:	inc    ebx
  4163e7:	jnp    0x416378
  4163e9:	xchg   BYTE PTR [eax+0x403fb814],cl
  4163ef:	xor    BYTE PTR [esi],bl
  4163f1:	(bad)  
  4163f2:	fstp   DWORD PTR [ecx]
  4163f4:	ret    
  4163f5:	mov    bl,0xcd
  4163f7:	mov    BYTE PTR [eax-0x76ea02b1],dh
  4163fd:	and    eax,0x6d5fbe27
  416402:	pop    es
  416403:	fidiv  WORD PTR [ecx]
  416405:	mov    ebx,0xaaeaf520
  41640a:	or     ch,cl
  41640c:	adc    BYTE PTR [edi+0x315fdc6d],dl
  416412:	int3   
  416413:	push   ecx
  416414:	test   al,0xf7
  416416:	mov    BYTE PTR [ecx+0x2c],ah
  416419:	mov    ebx,0x15d3a837
  41641e:	and    eax,0xcc09f5b
  416423:	sti    
  416424:	inc    edx
  416425:	xchg   ebx,eax
  416426:	jne    0x41648a
  416428:	add    eax,DWORD PTR [esi+0xd202c2]
  41642e:	dec    ebp
  41642f:	sbb    bl,bl
  416431:	mov    ch,0x42
  416433:	jnp    0x4163bd
  416435:	and    BYTE PTR [eax+0x7a],bh
  416438:	fs add al,0xf5
  41643b:	xor    DWORD PTR es:[ebp-0x25],esi
  41643f:	ins    BYTE PTR es:[edi],dx
  416440:	push   es
  416441:	mov    al,ds:0x6f525759
  416446:	(bad)  
  416447:	cmp    DWORD PTR [edx-0x3e],esi
  41644a:	mov    ds:0xc2a87f20,eax
  41644f:	dec    edx
  416450:	jns    0x4164c1
  416452:	outs   dx,BYTE PTR ds:[esi]
  416453:	add    edi,edx
  416455:	int    0xff
  416457:	scas   al,BYTE PTR es:[edi]
  416458:	sar    BYTE PTR [edi],1
  41645a:	rol    BYTE PTR [edi+0xb],0xfd
  41645e:	jne    0x4164da
  416460:	aad    0x27
  416462:	or     esi,DWORD PTR [edi+0x55]
  416465:	pop    ss
  416466:	add    eax,0xd3c1aa85
  41646b:	adc    al,0x3e
  41646d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41646e:	js     0x416465
  416470:	into   
  416471:	sti    
  416472:	cmp    edx,eax
  416474:	pop    edx
  416475:	pop    ds
  416476:	imul   edx,DWORD PTR [esi],0xffffffb8
  416479:	push   ecx
  41647a:	retf   0xc7fc
  41647d:	popf   
  41647e:	sbb    bl,BYTE PTR [edi]
  416480:	nop
  416481:	xor    BYTE PTR [ebx+0x43],dl
  416484:	imul   ebx,ecx,0x3e098920
  41648a:	jle    0x4164a4
  41648c:	inc    edx
  41648d:	int    0xd2
  41648f:	sub    esp,DWORD PTR cs:[ecx+0x4]
  416493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416494:	adc    BYTE PTR [eax-0x6e],al
  416497:	xor    esi,DWORD PTR [ecx-0x3d458fa3]
  41649d:	cmp    eax,0x296f75ce
  4164a2:	mov    ebp,0x8042b947
  4164a7:	mov    DWORD PTR fs:[esi-0x2c],esi
  4164ab:	rcl    DWORD PTR ds:[ebx+eax*1],cl
  4164af:	fsub   st(0),st
  4164b1:	add    BYTE PTR [ebx+edx*8-0x44],dh
  4164b5:	push   es
  4164b6:	test   edx,ebx
  4164b8:	loope  0x416454
  4164ba:	mov    eax,0x3747c01b
  4164bf:	pop    ecx
  4164c0:	es lahf 
  4164c2:	push   0xf633af41
  4164c7:	mov    cl,0xfc
  4164c9:	call   0xaf5c2ad8
  4164ce:	xor    BYTE PTR [ecx-0x76],0x81
  4164d2:	call   0x62e4cd5d
  4164d7:	cmc    
  4164d8:	inc    edi
  4164d9:	add    BYTE PTR [edi],bh
  4164db:	dec    ebx
  4164dc:	stc    
  4164dd:	aam    0x3d
  4164df:	mov    ds:0x709b2c64,eax
  4164e4:	mov    ecx,0xa93c87ec
  4164e9:	in     eax,0xcd
  4164eb:	pop    ebx
  4164ec:	popf   
  4164ed:	jmp    0xe0ccba23
  4164f2:	cmc    
  4164f3:	jmp    0xabf6de8d
  4164f8:	dec    ebx
  4164f9:	adc    eax,0x12e9b26
  4164fe:	sub    eax,0x7db57890
  416503:	ds push ebp
  416505:	test   ch,ah
  416507:	sahf   
  416508:	push   DWORD PTR [esi+0x61dff284]
  41650e:	fcom   QWORD PTR [esi+0x73]
  416511:	out    dx,eax
  416512:	or     ebp,DWORD PTR [edi+ebp*1+0x1d]
  416516:	sbb    al,0xd9
  416518:	sub    al,0x5e
  41651a:	sub    eax,0xa425e8b9
  41651f:	mov    al,ds:0xc0631bc5
  416524:	xchg   edx,eax
  416525:	mov    edi,0x42338231
  41652a:	mov    ?,WORD PTR [esi]
  41652c:	pop    ebp
  41652d:	lea    edi,[edi+0x9]
  416530:	and    cl,bl
  416532:	lahf   
  416533:	pop    ss
  416534:	adc    al,0x1c
  416536:	adc    al,0x7
  416538:	out    dx,al
  416539:	out    dx,al
  41653a:	xor    eax,0x8ea396c3
  41653f:	mov    bl,0x8a
  416541:	add    ah,ah
  416543:	or     BYTE PTR ds:0x80320a8c,bl
  416549:	retf   0x9a07
  41654c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654d:	adc    BYTE PTR [ecx+0x56],dl
  416550:	mov    DWORD PTR [ebp+0x6d00ea05],0xa791f9d0
  41655a:	daa    
  41655b:	adc    BYTE PTR gs:[esi+0x165e8d10],bh
  416562:	or     eax,0xad022fa1
  416567:	push   edi
  416568:	sbb    BYTE PTR [edi+ebx*1+0x7e9c267f],bl
  41656f:	ret    
  416570:	dec    eax
  416571:	sbb    dl,BYTE PTR [edi+0x7]
  416574:	and    al,BYTE PTR [ebp-0x411a9a63]
  41657a:	and    cl,dl
  41657c:	pop    ecx
  41657d:	xchg   ebx,eax
  41657e:	ins    BYTE PTR es:[edi],dx
  41657f:	scas   eax,DWORD PTR es:[edi]
  416580:	rol    BYTE PTR [eax+0x6d],cl
  416583:	cmp    al,0x2a
  416585:	adc    BYTE PTR [esi+ebx*2+0x79],ch
  416589:	sub    cl,bl
  41658b:	mov    ecx,0xafde72aa
  416590:	mov    ebx,0xf57b3981
  416595:	in     al,dx
  416596:	jno    0x4165cb
  416598:	adc    eax,0x2b274dc8
  41659d:	in     al,dx
  41659e:	mov    ds,WORD PTR [eax-0x35]
  4165a1:	jmp    0x416604
  4165a3:	add    dh,BYTE PTR [esi-0x3c7ae312]
  4165a9:	xchg   DWORD PTR [ecx-0x2fe6c5de],esp
  4165af:	and    BYTE PTR [edi-0x70c23154],bh
  4165b5:	lahf   
  4165b6:	adc    BYTE PTR [edx-0x17],cl
  4165b9:	mov    ch,0x30
  4165bb:	loope  0x4165e0
  4165bd:	or     al,BYTE PTR [edx+0x71]
  4165c0:	daa    
  4165c1:	stos   BYTE PTR es:[edi],al
  4165c2:	jnp    0x4165d8
  4165c4:	stc    
  4165c5:	stos   DWORD PTR es:[edi],eax
  4165c6:	loopne 0x416647
  4165c8:	and    DWORD PTR [ebp+0x39a0fca7],eax
  4165ce:	rcr    DWORD PTR [ecx-0x5160d713],cl
  4165d4:	pop    esp
  4165d5:	sahf   
  4165d6:	(bad)  
  4165d7:	retf   0x95b6
  4165da:	pop    ebx
  4165db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165dc:	ins    BYTE PTR es:[edi],dx
  4165dd:	dec    esp
  4165de:	push   ecx
  4165df:	(bad)  
  4165e0:	fmul   DWORD PTR [ecx+ecx*1-0xa]
  4165e4:	push   edi
  4165e5:	mov    edi,0xb1e0c499
  4165ea:	adc    dh,ch
  4165ec:	scas   al,BYTE PTR es:[edi]
  4165ed:	and    eax,0x852f59a8
  4165f2:	in     eax,0xc1
  4165f4:	or     BYTE PTR [ecx+0x4ec8a3ec],dl
  4165fa:	dec    ebx
  4165fb:	add    eax,0x6187e960
  416600:	div    ah
  416602:	mov    edx,0x5f3f0205
  416607:	stos   DWORD PTR es:[edi],eax
  416608:	dec    edi
  416609:	push   0x278366b4
  41660e:	xor    ecx,DWORD PTR [ebx+0x20]
  416611:	sbb    edx,eax
  416613:	push   ds
  416614:	add    eax,0xd2866a71
  416619:	xor    al,0x75
  41661b:	fsubr  QWORD PTR [ebp+0x40]
  41661e:	jecxz  0x416692
  416620:	adc    edi,DWORD PTR [ecx]
  416622:	adc    BYTE PTR [ebx+0x43ba13b8],cl
  416628:	sbb    DWORD PTR [eax+esi*8],ebp
  41662b:	(bad)  
  41662c:	repz add DWORD PTR [edx-0x71],0xffffffd4
  416631:	xor    cl,dl
  416633:	ret    
  416634:	imul   ebx,DWORD PTR [ebx],0x4caff3a7
  41663a:	dec    edi
  41663b:	mov    esp,0x4d600045
  416640:	pop    ebx
  416641:	mov    eax,0x320fb0c4
  416646:	xor    al,0x7a
  416648:	inc    ebx
  416649:	sahf   
  41664a:	in     al,dx
  41664b:	nop
  41664c:	jle    0x4165d2
  41664e:	sbb    BYTE PTR [eax-0x1f],bh
  416651:	loopne 0x4166ad
  416653:	sti    
  416654:	fiadd  DWORD PTR [ecx-0x73ea64c8]
  41665a:	and    BYTE PTR [ecx+0x1f55db2c],al
  416660:	imul   eax,DWORD PTR [edi-0x4c],0x98090369
  416667:	(bad)  
  416668:	neg    BYTE PTR [ecx+0x28]
  41666b:	jno    0x4166dd
  41666d:	mov    al,ds:0xc5ee4bdc
  416672:	nop
  416673:	xor    dl,BYTE PTR [eax+0x4b]
  416676:	and    esi,0x6ed589f5
  41667c:	cmp    cl,BYTE PTR [edi+esi*1-0x4ac90b53]
  416683:	adc    al,0x2f
  416685:	(bad)  
  416686:	cwde   
  416687:	jl     0x4166ca
  416689:	pop    ds
  41668a:	js     0x416666
  41668c:	lods   al,BYTE PTR ds:[esi]
  41668d:	xchg   ecx,eax
  41668e:	es mov ebx,0x58e495ed
  416694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416695:	xor    edx,DWORD PTR [esi-0x4f25c7fa]
  41669b:	sahf   
  41669c:	and    BYTE PTR [eax],0x64
  41669f:	mov    BYTE PTR [eax+eax*2],ah
  4166a2:	mov    eax,ds:0x9297aa44
  4166a7:	mov    ebx,0x5a16a5ee
  4166ac:	inc    esp
  4166ad:	ins    BYTE PTR es:[edi],dx
  4166ae:	sahf   
  4166af:	sahf   
  4166b0:	call   0x3c8f683a
  4166b5:	push   ecx
  4166b6:	or     eax,0xa73ff9bf
  4166bb:	(bad)  
  4166bc:	ins    BYTE PTR es:[edi],dx
  4166bd:	cmp    eax,DWORD PTR [edi-0x351e46c6]
  4166c3:	dec    ebx
  4166c4:	pop    ecx
  4166c5:	xchg   esp,eax
  4166c6:	lock adc bl,ah
  4166c9:	lds    ebp,FWORD PTR [esi]
  4166cb:	ins    BYTE PTR es:[edi],dx
  4166cc:	hlt    
  4166cd:	inc    edi
  4166ce:	int    0xd8
  4166d0:	fcmovb st,st(3)
  4166d2:	push   0xffffffd6
  4166d4:	fidivr DWORD PTR [ecx-0x593f59fa]
  4166da:	xor    edx,DWORD PTR [edi+0x7b61c2ca]
  4166e0:	addr16 and esp,eax
  4166e3:	repz dec esp
  4166e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e6:	cmp    al,0x15
  4166e8:	and    cl,BYTE PTR [ebp-0x10517be3]
  4166ee:	(bad)  
  4166ef:	test   BYTE PTR [ecx+ecx*1+0x40],0xaa
  4166f4:	sbb    ch,BYTE PTR gs:[eax+0x7d3aa74e]
  4166fb:	xchg   ebx,eax
  4166fc:	xchg   ecx,eax
  4166fd:	imul   ebp,DWORD PTR [ecx],0xffffffa6
  416700:	inc    edx
  416701:	lds    ecx,FWORD PTR [ecx]
  416703:	or     eax,0xc33fa192
  416708:	clc    
  416709:	or     DWORD PTR [ebx-0x7e481a9e],ebp
  41670f:	fild   DWORD PTR [ebx-0x47]
  416712:	sbb    al,0xcd
  416714:	inc    edi
  416715:	jno    0x416728
  416717:	cwde   
  416718:	mov    dl,0x67
  41671a:	inc    edx
  41671b:	and    BYTE PTR [ebp-0x9c70d26],dh
  416721:	xor    esp,esi
  416723:	mov    ds:0x493fe89e,eax
  416728:	jae    0x4166f0
  41672a:	fs ret 0xca4c
  41672e:	retf   0x7dde
  416731:	fnstsw WORD PTR [edi]
  416733:	fcomp  QWORD PTR [edx+0x28]
  416736:	mov    dl,0xf1
  416738:	mov    bh,0x26
  41673a:	imul   ebp,DWORD PTR [esp+edx*2-0x52],0xead93caf
  416742:	fimul  WORD PTR [edi+ebx*2]
  416745:	xchg   esi,eax
  416746:	mov    ebx,0x4782d1be
  41674c:	and    DWORD PTR [edx],esi
  41674e:	and    esp,DWORD PTR ds:0x7c851030
  416754:	cmc    
  416755:	xchg   edi,eax
  416756:	imul   edi,ecx,0x30
  416759:	jae    0x41672c
  41675b:	jbe    0x416721
  41675d:	jnp    0x416705
  41675f:	dec    ecx
  416760:	pushf  
  416761:	cli    
  416762:	jns    0x4166ff
  416764:	jo     0x4167b2
  416766:	cmp    al,0xab
  416768:	and    BYTE PTR [edx+edx*4+0x27dbfb55],bl
  41676f:	dec    edi
  416770:	sub    edi,esi
  416772:	scas   al,BYTE PTR es:[edi]
  416773:	mov    esi,0xc6e261af
  416778:	dec    esi
  416779:	or     eax,0xb0c5380e
  41677e:	inc    esi
  41677f:	clc    
  416780:	sar    ebx,1
  416782:	sub    DWORD PTR [esi],ebp
  416784:	jmp    0x85f:0xb050d9be
  41678b:	inc    edi
  41678c:	out    0x9c,al
  41678e:	xchg   cl,dh
  416790:	stos   DWORD PTR es:[edi],eax
  416791:	nop
  416792:	(bad)  
  416793:	sbb    DWORD PTR [ecx+edi*1+0xb],edi
  416797:	xchg   esp,eax
  416798:	add    ax,0xbec2
  41679c:	cld    
  41679d:	scas   eax,DWORD PTR es:[edi]
  41679e:	xchg   esi,eax
  41679f:	xchg   ebx,eax
  4167a0:	and    eax,0x257ed1dd
  4167a5:	inc    ebx
  4167a6:	push   eax
  4167a7:	into   
  4167a8:	jp     0x416735
  4167aa:	mov    ecx,0x22db5db3
  4167af:	cmp    DWORD PTR [esi],ecx
  4167b1:	ja     0x416770
  4167b3:	mov    edx,0x9308483b
  4167b8:	ret    
  4167b9:	cmp    BYTE PTR [eax],ah
  4167bb:	xchg   ecx,eax
  4167bc:	arpl   WORD PTR [ebx-0x4],bp
  4167bf:	pop    ss
  4167c0:	fadd   DWORD PTR [esi-0x7a9e34f2]
  4167c6:	loop   0x416792
  4167c8:	out    dx,eax
  4167c9:	xchg   esp,eax
  4167ca:	sti    
  4167cb:	mov    ecx,0x402d7e0b
  4167d0:	shl    DWORD PTR ds:0x8a7d8786,0xf8
  4167d7:	add    eax,0x77562f8c
  4167dc:	ret    
  4167dd:	adc    bl,BYTE PTR ds:0xf24de92f
  4167e3:	add    al,0xf6
  4167e5:	enter  0xe4f4,0x36
  4167e9:	setns  bl
  4167ec:	jmp    0xc21d:0xd0b35d88
  4167f3:	dec    ebp
  4167f4:	ins    BYTE PTR es:[edi],dx
  4167f5:	dec    esi
  4167f6:	hlt    
  4167f7:	add    DWORD PTR [ebx+0x6a],0x7e2055e6
  4167fe:	sbb    eax,0x8a8d9f7f
  416803:	and    al,0xb0
  416805:	fmul   st(6),st
  416807:	call   edi
  416809:	and    dh,BYTE PTR [eax+0x5d]
  41680c:	enter  0x6f4f,0x93
  416810:	xchg   ebp,eax
  416811:	cld    
  416812:	jmp    0x8c13:0xa5327cd3
  416819:	sub    ah,BYTE PTR [esi+0x7bdde9d3]
  41681f:	mov    bh,0xd1
  416821:	sub    edx,DWORD PTR [ebx+0x5f]
  416824:	call   0xd026db82
  416829:	add    ch,BYTE PTR [eax+0x5c981c55]
  41682f:	imul   edi,DWORD PTR [esi+0x56521943],0x5a2ffe13
  416839:	lea    ebp,[ecx+0x5601ed9f]
  41683f:	int3   
  416840:	push   ebp
  416841:	jbe    0x4168b7
  416843:	jecxz  0x41683c
  416845:	mov    ch,0xce
  416847:	es ret 0x47c5
  41684b:	cmp    ebp,DWORD PTR [esi+0x5c]
  41684e:	mov    fs:0x71e85b81,eax
  416854:	xor    BYTE PTR [ecx+esi*2-0x20],al
  416858:	les    edx,FWORD PTR [esi]
  41685a:	pop    esi
  41685b:	pop    ss
  41685c:	int3   
  41685d:	mov    al,ds:0xd2342c8a
  416862:	dec    edx
  416863:	sti    
  416864:	add    DWORD PTR [ecx+0x2f5ab5a9],ebx
  41686a:	mov    dl,ah
  41686c:	sub    al,0x6a
  41686e:	and    eax,0xe3e02ec8
  416873:	fdivr  st(7),st
  416875:	mov    eax,ds:0x4e429924
  41687a:	pop    edx
  41687b:	adc    eax,0xc54e19f2
  416880:	inc    dl
  416882:	frstor [edx-0x72591ca3]
  416888:	stmxcsr DWORD PTR ds:0x2fc819a
  41688f:	hlt    
  416890:	aam    0x47
  416892:	fcmovu st,st(6)
  416894:	adc    bh,dl
  416896:	sbb    BYTE PTR [ebp+eiz*1-0x20a8fddc],ch
  41689d:	mov    al,ds:0x7cff9d9b
  4168a2:	mul    BYTE PTR ds:0x47049a1f
  4168a8:	std    
  4168a9:	in     al,0x10
  4168ab:	pfmin  mm3,QWORD PTR ds:[esi+0x2b]
  4168b1:	jge    0x416844
  4168b3:	cld    
  4168b4:	(bad)  [ecx]
  4168b6:	xor    dl,dh
  4168b8:	fcomi  st,st(0)
  4168ba:	mov    dl,0xf7
  4168bc:	ret    
  4168bd:	mov    bh,0xf5
  4168bf:	repnz ds xchg esi,eax
  4168c2:	sti    
  4168c3:	jbe    0x41688d
  4168c5:	mov    ecx,0x3e48887f
  4168ca:	sub    DWORD PTR [edi],esp
  4168cc:	repnz les esp,FWORD PTR [bp+di]
  4168d0:	mov    bl,0xcf
  4168d2:	dec    edx
  4168d3:	add    BYTE PTR [esp],dl
  4168d6:	add    BYTE PTR [ecx+0x5ec03886],bl
  4168dc:	test   ebx,eax
  4168de:	loopne 0x416893
  4168e0:	or     al,0x9c
  4168e2:	int    0xeb
  4168e4:	adc    bh,al
  4168e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e7:	cmc    
  4168e8:	popa   
  4168e9:	sti    
  4168ea:	pop    esi
  4168eb:	test   DWORD PTR [ebx+ebx*1+0x2ac291f5],edx
  4168f2:	(bad)  
  4168f3:	cld    
  4168f4:	dec    edx
  4168f5:	cmc    
  4168f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f7:	pop    ebx
  4168f8:	dec    esi
  4168f9:	lods   al,BYTE PTR ds:[esi]
  4168fa:	scas   al,BYTE PTR es:[edi]
  4168fb:	mov    al,0x31
  4168fd:	or     edi,edx
  4168ff:	test   BYTE PTR [eax+0x5628955d],0x15
  416906:	xor    DWORD PTR [ecx-0x1e11917a],esp
  41690c:	arpl   WORD PTR [esi-0x6dd7d110],di
  416912:	aas    
  416913:	xchg   ebp,eax
  416914:	icebp  
  416915:	mov    esi,0x9fa7e040
  41691a:	fwait
  41691b:	lea    esp,[edx]
  41691d:	add    ah,BYTE PTR [ebp+0x32809421]
  416923:	and    dh,ah
  416925:	add    al,0xb
  416927:	(bad)  
  416929:	or     bl,BYTE PTR [esi-0x1]
  41692c:	lahf   
  41692d:	mov    al,ds:0xedbf2187
  416932:	cmp    DWORD PTR ds:0xbc365d66,eax
  416938:	xchg   edi,eax
  416939:	pop    es
  41693a:	cmc    
  41693b:	bound  esp,QWORD PTR [eax+0x51]
  41693e:	jb     0x416903
  416940:	cmp    eax,0x6175a033
  416945:	(bad)  
  416946:	out    dx,eax
  416947:	ins    BYTE PTR es:[edi],dx
  416948:	pusha  
  416949:	stos   BYTE PTR es:[edi],al
  41694a:	test   eax,0xf4ce872c
  41694f:	aam    0xea
  416951:	jg     0x4168dc
  416953:	cmp    DWORD PTR [eax-0x2d184e68],edx
  416959:	sbb    al,0xb6
  41695b:	sbb    eax,0x4f97b25e
  416960:	nop
  416961:	fstp   TBYTE PTR [edx+0x1733dcfb]
  416967:	call   0x3ae:0xfc90ea59
  41696e:	xor    DWORD PTR [ebx],ebx
  416970:	fadd   QWORD PTR [edx-0x56]
  416973:	jne    0x416901
  416975:	and    esp,eax
  416977:	push   edi
  416978:	hlt    
  416979:	jecxz  0x416946
  41697b:	outs   dx,BYTE PTR ds:[esi]
  41697c:	push   esi
  41697d:	out    0xbe,eax
  41697f:	mov    ds:0xf8e63631,al
  416984:	scas   eax,DWORD PTR es:[edi]
  416985:	cmp    DWORD PTR [ebp-0x80],ebx
  416988:	pop    es
  416989:	dec    DWORD PTR [esi+0x70225df6]
  41698f:	dec    eax
  416990:	shl    BYTE PTR [ebx+0x79],0x1b
  416994:	outs   dx,BYTE PTR ds:[esi]
  416995:	(bad)  
  416996:	fidiv  WORD PTR [ecx]
  416998:	dec    ecx
  416999:	cmp    BYTE PTR [edx+0x36bad1a3],dh
  41699f:	in     al,dx
  4169a0:	mov    dl,ch
  4169a2:	push   ecx
  4169a3:	js     0x416966
  4169a5:	outs   dx,BYTE PTR ds:[esi]
  4169a6:	push   eax
  4169a7:	popa   
  4169a8:	loopne 0x416985
  4169aa:	rcl    bh,1
  4169ac:	sub    al,0x25
  4169ae:	pushf  
  4169af:	shl    BYTE PTR [edi-0x1c],0xcf
  4169b3:	adc    cl,BYTE PTR [eax+0x12]
  4169b6:	push   eax
  4169b7:	push   edx
  4169b8:	cmc    
  4169b9:	cmp    ecx,DWORD PTR [edx-0x46401e97]
  4169bf:	jmp    0x9ddb3531
  4169c4:	or     ch,BYTE PTR [esi-0x2db3ff69]
  4169ca:	fdiv   st,st(7)
  4169cc:	jns    0x4169ac
  4169ce:	push   es
  4169cf:	pushf  
  4169d0:	mov    dl,0x9d
  4169d2:	dec    esp
  4169d3:	xor    BYTE PTR [edx+0x6b],cl
  4169d6:	pusha  
  4169d7:	cmp    eax,0x41b20985
  4169dc:	cmp    eax,0x86fc2b33
  4169e1:	in     eax,0x4e
  4169e3:	frstor [edi]
  4169e5:	push   edi
  4169e6:	xchg   ecx,eax
  4169e7:	in     eax,0x81
  4169e9:	sub    BYTE PTR [edx-0x7b],cl
  4169ec:	out    dx,eax
  4169ed:	cmc    
  4169ee:	push   cs
  4169ef:	mov    ecx,0x6fb33dc1
  4169f4:	lods   al,BYTE PTR ds:[esi]
  4169f5:	das    
  4169f6:	xchg   ebx,eax
  4169f7:	div    DWORD PTR [edx+0x7d]
  4169fa:	jae    0x416a18
  4169fc:	or     eax,0xcdc5e9fc
  416a01:	sbb    esp,edi
  416a03:	sub    ecx,DWORD PTR [ecx+ecx*8+0x5c]
  416a07:	sub    BYTE PTR [ecx+0x5419aa35],al
  416a0d:	jmp    0x2e1c:0xfe1839e8
  416a14:	mov    edi,0x63edcf41
  416a19:	int3   
  416a1a:	dec    edi
  416a1b:	sbb    ebp,esi
  416a1d:	cmp    al,0x5a
  416a1f:	cmp    DWORD PTR [edx],edx
  416a21:	cwde   
  416a22:	push   ds
  416a23:	or     BYTE PTR [eax-0x18],dh
  416a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a27:	dec    ebx
  416a28:	in     al,0x70
  416a2a:	pop    esi
  416a2b:	sbb    eax,0xedcd4624
  416a30:	icebp  
  416a31:	push   ss
  416a32:	(bad)  
  416a33:	push   edi
  416a34:	pop    ebp
  416a35:	and    al,0xdd
  416a37:	ficom  WORD PTR [edx+eax*4]
  416a3a:	mov    fs,esp
  416a3c:	into   
  416a3d:	out    dx,al
  416a3e:	jle    0x416a51
  416a40:	mov    dl,0x88
  416a42:	and    al,0x32
  416a44:	mov    ebp,0xec1a3705
  416a49:	jle    0x4169d5
  416a4b:	or     ebx,DWORD PTR [edi+0x8f73f3d]
  416a51:	cmp    ecx,eax
  416a53:	fdivrp st(1),st
  416a55:	fnsave [eax+0x79550666]
  416a5b:	mov    ch,0x64
  416a5d:	jl     0x416ace
  416a5f:	sub    ah,dl
  416a61:	dec    edx
  416a62:	sbb    DWORD PTR [edi],esi
  416a64:	xor    eax,0x68647435
  416a69:	(bad)
  416a6c:	add    ch,BYTE PTR [esi+0x7a32a33d]
  416a72:	mov    dl,0x45
  416a74:	mov    esi,0x3e4988f
  416a79:	neg    esp
  416a7b:	js     0x416a6a
  416a7d:	popf   
  416a7e:	ins    DWORD PTR es:[edi],dx
  416a7f:	enter  0xf928,0x51
  416a83:	mov    ah,0x2f
  416a85:	(bad)  
  416a86:	mov    ?,eax
  416a88:	xchg   edi,eax
  416a89:	xchg   ebp,eax
  416a8a:	les    ebp,FWORD PTR [ebx-0x67]
  416a8d:	sar    DWORD PTR [edx+0x61b01c47],1
  416a93:	mov    al,ds:0xff7928d7
  416a98:	xor    BYTE PTR [edi],al
  416a9a:	sub    al,0xb8
  416a9c:	ror    DWORD PTR [esi+0x13],1
  416a9f:	fidivr WORD PTR [bp+di-0x2200]
  416aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa5:	dec    esp
  416aa6:	(bad)  
  416aa8:	loope  0x416ad4
  416aaa:	jae    0x416a7b
  416aac:	cld    
  416aad:	gs cdq 
  416aaf:	mov    esp,0xae37285e
  416ab4:	(bad)  
  416ab5:	mov    bh,0xe4
  416ab7:	loop   0x416ae8
  416ab9:	loopne 0x416ac8
  416abb:	pop    esi
  416abc:	pop    ebx
  416abd:	xchg   ecx,eax
  416abe:	sub    cl,ch
  416ac0:	test   edi,ecx
  416ac2:	or     ah,BYTE PTR [ecx-0x70]
  416ac5:	adc    ebx,DWORD PTR [edi-0x36]
  416ac8:	mov    dh,0x2b
  416aca:	stos   BYTE PTR es:[edi],al
  416acb:	out    dx,al
  416acc:	aaa    
  416acd:	nop
  416ace:	out    0xbe,al
  416ad0:	inc    ecx
  416ad1:	es in  eax,0xa5
  416ad4:	out    dx,eax
  416ad5:	loope  0x416a65
  416ad7:	xchg   ebp,eax
  416ad8:	sub    eax,0xa2cf0e09
  416add:	mov    WORD PTR [edi-0x4a],ss
  416ae0:	lods   al,BYTE PTR ds:[esi]
  416ae1:	aad    0x99
  416ae3:	in     al,0xf9
  416ae5:	retf   0xdd73
  416ae8:	ss push es
  416aea:	jae    0x416a9f
  416aec:	je     0x416a99
  416aee:	add    eax,0x38e2b04
  416af3:	dec    edx
  416af4:	jg     0x416aca
  416af6:	out    dx,al
  416af7:	dec    ebx
  416af8:	sub    BYTE PTR [ebx+0x0],al
  416afb:	xchg   DWORD PTR [edx+0x5],ebx
  416afe:	pop    edi
  416aff:	outs   dx,BYTE PTR ds:[esi]
  416b00:	sub    DWORD PTR [ebx+ecx*4+0x1],eax
  416b04:	(bad)  
  416b05:	pop    ebx
  416b06:	push   edx
  416b07:	jno    0x416b2b
  416b09:	dec    ebx
  416b0a:	call   0xa670:0xb303d8dc
  416b11:	jb     0x416a95
  416b13:	in     eax,dx
  416b14:	dec    ebp
  416b15:	pop    DWORD PTR [ebp+0x10799287]
  416b1b:	mov    edx,0x97b230b6
  416b20:	int3   
  416b21:	addr16 mov ebp,0xbdea1f9d
  416b27:	(bad)  
  416b28:	outs   dx,BYTE PTR ds:[esi]
  416b29:	jecxz  0x416b39
  416b2b:	xchg   esi,eax
  416b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2d:	shl    DWORD PTR [edx+ebx*1],0x9a
  416b31:	xchg   esp,eax
  416b32:	push   ebp
  416b33:	pop    edi
  416b34:	sbb    dh,ch
  416b36:	xor    DWORD PTR [ecx+0x6],ebx
  416b39:	xlat   BYTE PTR ds:[ebx]
  416b3a:	xor    DWORD PTR [esi],esi
  416b3c:	xor    DWORD PTR ds:0x1146dc4e,edx
  416b42:	mov    dh,0xcf
  416b44:	mov    cl,0x5a
  416b46:	inc    edi
  416b47:	and    ebp,esp
  416b49:	retf   
  416b4a:	imul   ebp,esi,0xffffffef
  416b4d:	scas   al,BYTE PTR es:[edi]
  416b4e:	cmc    
  416b4f:	inc    edx
  416b50:	jle    0x416ad9
  416b52:	xor    BYTE PTR [ebp+0x71c0b62b],bh
  416b58:	std    
  416b59:	sbb    edx,edi
  416b5b:	pop    ds
  416b5c:	mov    ebp,es
  416b5e:	stos   DWORD PTR es:[edi],eax
  416b5f:	xor    al,0x43
  416b61:	adc    bh,dh
  416b63:	mov    ebx,0x5be4cb9e
  416b68:	das    
  416b69:	cmp    edi,DWORD PTR [eax]
  416b6b:	shr    edx,0xe1
  416b6e:	cmp    DWORD PTR [ebx-0x73e55dc],0xda023f1b
  416b78:	push   eax
  416b79:	div    BYTE PTR [ecx]
  416b7b:	mov    edx,0x5d3b7d3b
  416b80:	aaa    
  416b81:	mov    dl,0xb0
  416b83:	inc    ecx
  416b84:	ret    0xdb27
  416b87:	js     0x416b7d
  416b89:	dec    esp
  416b8a:	(bad)
  416b8d:	jae    0x416b4a
  416b8f:	(bad)  
  416b90:	pop    ss
  416b91:	dec    ebp
  416b92:	xchg   esi,eax
  416b93:	and    DWORD PTR [ecx+0x78],edx
  416b96:	dec    esi
  416b97:	adc    BYTE PTR [ebx+0x61a0e80],ch
  416b9d:	push   0x9639a4b3
  416ba2:	mov    bl,0x35
  416ba4:	sbb    dh,al
  416ba6:	xchg   edx,eax
  416ba7:	inc    ecx
  416ba8:	stos   DWORD PTR es:[edi],eax
  416ba9:	aas    
  416baa:	cwde   
  416bab:	mov    BYTE PTR [edi-0x25],ch
  416bae:	stos   BYTE PTR es:[edi],al
  416baf:	sub    DWORD PTR [esi],eax
  416bb1:	and    al,0x6e
  416bb3:	ins    BYTE PTR es:[edi],dx
  416bb4:	sub    ebp,DWORD PTR [edx-0x7]
  416bb7:	dec    edi
  416bb8:	js     0x416bb3
  416bba:	mov    edx,0x8634b384
  416bbf:	adc    eax,0xccc24f36
  416bc4:	jno    0x416b5d
  416bc6:	in     al,0xd4
  416bc8:	sbb    ecx,esi
  416bca:	mov    ds:0x86cb2ac0,eax
  416bcf:	inc    edi
  416bd0:	leave  
  416bd1:	rcr    bh,cl
  416bd3:	sahf   
  416bd4:	xor    WORD PTR [edx],di
  416bd7:	sbb    edi,ecx
  416bd9:	dec    esp
  416bda:	inc    esp
  416bdb:	int3   
  416bdc:	mov    al,ds:0x16c17ae9
  416be1:	inc    eax
  416be2:	fsubr  QWORD PTR [edi+0x7c]
  416be5:	ret    0x9c82
  416be8:	sti    
  416be9:	xor    DWORD PTR [edi-0x4192ae26],edi
  416bef:	jp     0x416b96
  416bf1:	stc    
  416bf2:	mov    edx,DWORD PTR [eax+0x7b]
  416bf5:	aam    0x10
  416bf7:	xchg   ecx,eax
  416bf8:	out    0x28,eax
  416bfa:	cmp    DWORD PTR [eax+0x1aab458c],0xf631070b
  416c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c05:	add    eax,0x7d93999
  416c0a:	popf   
  416c0b:	in     al,dx
  416c0c:	cs jae 0x416bfe
  416c0f:	push   cs
  416c10:	clc    
  416c11:	ror    BYTE PTR [edx],cl
  416c13:	(bad)  [edx+ebp*2]
  416c16:	jb     0x416bf5
  416c18:	push   ecx
  416c19:	std    
  416c1a:	xchg   ebp,eax
  416c1b:	jb     0x416bc7
  416c1d:	daa    
  416c1e:	push   edi
  416c1f:	sub    eax,edi
  416c21:	push   ebx
  416c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c23:	test   eax,0x51dda599
  416c28:	(bad)  
  416c2b:	ins    BYTE PTR es:[edi],dx
  416c2c:	pop    es
  416c2d:	push   ecx
  416c2e:	aad    0x5a
  416c30:	xchg   esi,eax
  416c31:	sub    esp,esi
  416c33:	dec    edx
  416c34:	stos   BYTE PTR es:[edi],al
  416c35:	cmp    ecx,DWORD PTR [ecx+0x1c16f776]
  416c3b:	add    al,0xf4
  416c3d:	stos   DWORD PTR es:[edi],eax
  416c3e:	push   es
  416c3f:	out    0x57,eax
  416c41:	add    WORD PTR [esi+ebx*4],si
  416c45:	dec    esi
  416c46:	nop
  416c47:	nop
  416c48:	bound  ecx,QWORD PTR [edi+0x33]
  416c4b:	ss (bad) 
  416c4d:	jecxz  0x416c5f
  416c4f:	fwait
  416c50:	jns    0x416c1b
  416c52:	fidiv  DWORD PTR [ecx-0x6c6e98fe]
  416c58:	in     eax,0x0
  416c5a:	ja     0x416cb6
  416c5c:	cmp    ebp,esi
  416c5e:	lods   eax,DWORD PTR ds:[esi]
  416c5f:	mov    edi,0xea52e2dd
  416c64:	adc    BYTE PTR [ebp+0x33603cc3],cl
  416c6a:	es addr16 pop ss
  416c6d:	retf   0x2908
  416c70:	loope  0x416ccb
  416c72:	mov    fs:0x784e21b1,al
  416c78:	(bad)  
  416c79:	push   ecx
  416c7a:	pop    ebx
  416c7b:	psllw  mm3,QWORD PTR [eax-0x21]
  416c7f:	sbb    al,0xb
  416c81:	push   ebp
  416c82:	ret    
  416c83:	sub    bl,BYTE PTR [ebp-0x36ccd1e0]
  416c89:	mov    ebp,0xbdf9db73
  416c8e:	addr16 or al,0x8b
  416c91:	pop    ebp
  416c92:	clc    
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [eax+0x74dcfd51],ah
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0xb4
  416e00:	enter  0x5b43,0x68
  416e04:	mov    al,al
  416e06:	lahf   
  416e07:	mov    al,ds:0x2a7b0bfe
  416e0c:	mov    eax,ds:0x518f349d
  416e11:	pop    ebp
  416e12:	daa    
  416e13:	cld    
  416e14:	rol    DWORD PTR [ebp-0x2f2b1fb0],0xcd
  416e1b:	mov    esp,0xa1c2f31b
  416e20:	inc    ebx
  416e21:	mov    dl,BYTE PTR [esi-0x6]
  416e24:	sub    al,0x9c
  416e26:	int3   
  416e27:	inc    eax
  416e28:	inc    ebp
  416e29:	mov    ebx,0xdbb89ec9
  416e2e:	mov    dh,0x56
  416e30:	sti    
  416e31:	mov    ebx,0x9334364c
  416e36:	jbe    0x416eaa
  416e38:	ret    
  416e39:	or     edi,eax
  416e3b:	pushf  
  416e3c:	adc    dl,bl
  416e3e:	(bad)  
  416e3f:	pushf  
  416e40:	push   0x910c912f
  416e45:	xchg   edi,eax
  416e46:	xchg   esp,eax
  416e47:	outs   dx,BYTE PTR ds:[esi]
  416e48:	xor    ah,al
  416e4a:	push   0x5e353271
  416e4f:	cmp    BYTE PTR [edi-0x411287f3],cl
  416e55:	sub    al,0x24
  416e57:	jmp    0xdbc3ae9b
  416e5c:	sub    al,0x13
  416e5e:	inc    eax
  416e5f:	xchg   ch,bl
  416e61:	mov    ebx,0xf09a833d
  416e66:	mov    ss,edi
  416e68:	iret   
  416e69:	mov    bh,dl
  416e6b:	and    dh,cl
  416e6d:	inc    ebx
  416e6e:	or     ebx,0x6d
  416e71:	outs   dx,DWORD PTR ds:[esi]
  416e72:	popa   
  416e73:	jbe    0x416ed4
  416e75:	call   FWORD PTR [ecx]
  416e77:	push   ds
  416e78:	mov    esi,0x5d73438a
  416e7d:	and    BYTE PTR [esi+0x69],ah
  416e80:	pushf  
  416e81:	addr16 ret 0x8db7
  416e85:	test   DWORD PTR [ebp+0xa372eda],edx
  416e8b:	push   esp
  416e8c:	je     0x416e43
  416e8e:	dec    ebx
  416e8f:	jge    0x416e5d
  416e91:	xor    al,0x96
  416e93:	stos   BYTE PTR es:[edi],al
  416e94:	(bad)  
  416e95:	les    ecx,FWORD PTR [ebx+0xfdc1595]
  416e9b:	sub    al,bl
  416e9d:	call   0x8cd1:0x6e47f51a
  416ea4:	adc    ecx,esp
  416ea6:	sbb    eax,0x972afad3
  416eab:	push   es
  416eac:	jl     0x416e6a
  416eae:	(bad)  
  416eaf:	outs   dx,BYTE PTR ds:[esi]
  416eb0:	jns    0x416ed7
  416eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb3:	jg     0x416ecb
  416eb5:	dec    ebx
  416eb6:	test   BYTE PTR [ebp+eax*1+0xc],ah
  416eba:	jbe    0x416e9f
  416ebc:	inc    di
  416ebe:	xchg   ebx,eax
  416ebf:	xchg   ebx,eax
  416ec0:	dec    ebp
  416ec1:	scas   al,BYTE PTR es:[edi]
  416ec2:	jb     0x416ee6
  416ec4:	and    eax,0x74c80926
  416ec9:	push   esp
  416eca:	and    ch,BYTE PTR ds:0x3f4c80f0
  416ed0:	jmp    0x416f08
  416ed2:	fistp  DWORD PTR [eax]
  416ed4:	jl     0x416f12
  416ed6:	sub    al,0x8d
  416ed8:	sbb    BYTE PTR [esi],ch
  416eda:	pushf  
  416edb:	popa   
  416edc:	fisub  DWORD PTR [edx+0x47]
  416edf:	push   edi
  416ee0:	jbe    0x416e78
  416ee2:	(bad)
  416ee5:	sub    DWORD PTR [eax],ebp
  416ee7:	cdq    
  416ee8:	pop    es
  416ee9:	xchg   esi,eax
  416eea:	push   esp
  416eeb:	xchg   esi,eax
  416eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eed:	cdq    
  416eee:	adc    dl,BYTE PTR [ecx]
  416ef0:	jg     0x416eef
  416ef2:	inc    edx
  416ef3:	lock loopne 0x416ef1
  416ef6:	inc    esi
  416ef7:	sub    ebx,DWORD PTR [ecx+0x78888533]
  416efd:	in     al,dx
  416efe:	push   ds
  416eff:	inc    ebx
  416f00:	dec    edi
  416f01:	jmp    0xa55:0x98044383
  416f08:	rcr    DWORD PTR [ebx],0x43
  416f0b:	xchg   edi,eax
  416f0c:	mov    al,ds:0xffd8a094
  416f11:	cmp    al,0x5b
  416f13:	jno    0x416ee3
  416f15:	ja     0x416f3a
  416f17:	popa   
  416f18:	and    ebx,DWORD PTR ds:0xb23ccb06
  416f1e:	mov    ebx,DWORD PTR [eax]
  416f20:	jb     0x416ea8
  416f22:	xor    BYTE PTR [eax+esi*4+0x754af5b4],cl
  416f29:	xchg   ebx,eax
  416f2a:	pop    ebx
  416f2b:	scas   al,BYTE PTR es:[edi]
  416f2c:	in     al,0x41
  416f2e:	or     ebp,DWORD PTR [edi-0x34]
  416f31:	jns    0x416f9f
  416f33:	cmp    ebp,DWORD PTR ds:0x4dc0f9af
  416f39:	dec    esi
  416f3a:	sbb    ecx,DWORD PTR [ebx-0x332c610f]
  416f40:	sbb    al,0x56
  416f42:	cmp    ecx,DWORD PTR [ebx+0x6f]
  416f45:	push   ebp
  416f46:	jmp    0xfe01:0x7480ff53
  416f4d:	es mov dh,0x4f
  416f50:	push   ecx
  416f51:	mov    eax,DWORD PTR [esp+esi*8]
  416f54:	loope  0x416f05
  416f56:	repnz scas eax,DWORD PTR es:[edi]
  416f58:	fistp  DWORD PTR [eax+eiz*2]
  416f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5c:	das    
  416f5d:	jmp    0xcf9f7727
  416f62:	(bad)  
  416f64:	xchg   BYTE PTR [ecx+ecx*4+0xfad57f],dl
  416f6b:	push   0xffffff98
  416f6d:	sti    
  416f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6f:	cli    
  416f70:	retf   
  416f71:	dec    ecx
  416f72:	inc    esi
  416f73:	xlat   BYTE PTR ds:[ebx]
  416f74:	mov    ebp,?
  416f76:	jns    0x416f5b
  416f78:	dec    ecx
  416f79:	aam    0x36
  416f7b:	in     al,dx
  416f7c:	jne    0x416ff8
  416f7e:	adc    al,0x47
  416f80:	and    DWORD PTR [ecx],ebp
  416f82:	or     BYTE PTR [eax+0x24],dl
  416f85:	out    0xc9,al
  416f87:	jp     0x416fa2
  416f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f8a:	jmp    0xf255ea1d
  416f8f:	lahf   
  416f90:	sahf   
  416f91:	jmp    0xaab6f009
  416f96:	les    edx,FWORD PTR [edi+0x5e026d63]
  416f9c:	jb     0x417014
  416f9e:	test   al,0x84
  416fa0:	push   es
  416fa1:	into   
  416fa2:	fisub  DWORD PTR [eax-0x24c8e5d7]
  416fa8:	mov    ebp,0xb9083e2b
  416fad:	js     0x416faf
  416faf:	pop    esp
  416fb0:	inc    ebx
  416fb1:	cs jl  0x416fb4
  416fb4:	test   BYTE PTR [eax+0x3c],dl
  416fb7:	(bad)  
  416fb8:	mov    ?,WORD PTR [ebx-0x29]
  416fbb:	push   ebp
  416fbc:	push   esi
  416fbd:	lahf   
  416fbe:	hlt    
  416fbf:	add    al,0xd1
  416fc1:	lods   al,BYTE PTR ds:[esi]
  416fc2:	aas    
  416fc3:	mov    esi,0xf430f1e0
  416fc8:	jg     0x41703f
  416fca:	sbb    DWORD PTR [ebx],eax
  416fcc:	fs shl cl,cl
  416fcf:	xlat   BYTE PTR es:[ebx]
  416fd1:	imul   ecx,DWORD PTR [esi-0x217e688a],0xac5084c0
  416fdb:	sbb    BYTE PTR [ebp+eax*2-0x77f66f3c],0xa0
  416fe3:	jp     0x417002
  416fe5:	sahf   
  416fe6:	or     DWORD PTR [ecx-0x6808080f],esp
  416fec:	mov    edi,0xee0ac410
  416ff1:	inc    esp
  416ff2:	pop    ds
  416ff3:	lea    esp,[esp+ebp*2]
  416ff6:	test   al,0xdc
  416ff8:	push   ss
  416ff9:	dec    edx
  416ffa:	(bad)  
  416ffb:	push   ebp
  416ffc:	jle    0x417071
  416ffe:	mov    ch,0x35
  417000:	popa   
  417001:	stc    
  417002:	pop    edi
  417003:	cmp    DWORD PTR [esi*2+0x2d85d869],esp
  41700a:	int3   
  41700b:	bound  edi,QWORD PTR [ecx+0x2b]
  41700e:	xchg   esi,eax
  41700f:	fs into 
  417011:	jmp    0x5e6133a8
  417016:	sub    ah,dh
  417018:	fwait
  417019:	leave  
  41701a:	call   0x7327:0x9314096
  417021:	inc    eax
  417022:	and    eax,0x839c74dd
  417027:	cdq    
  417028:	sub    eax,0xe52a2213
  41702d:	jbe    0x41708c
  41702f:	mov    WORD PTR [ebx+0x70d50838],es
  417035:	adc    BYTE PTR [ebp+0x21],0xe5
  417039:	add    BYTE PTR [esp+ebx*8-0x63],ch
  41703d:	(bad)  
  41703e:	stc    
  41703f:	or     BYTE PTR [esi],al
  417041:	sbb    BYTE PTR [esi+0x19f76fe],dl
  417047:	int3   
  417048:	nop
  417049:	mov    dh,0x3e
  41704b:	push   esp
  41704d:	push   ds
  41704e:	cmp    al,0x84
  417050:	iret   
  417051:	mov    ds:0x8b9edeb,eax
  417056:	das    
  417057:	adc    BYTE PTR [edx],dh
  417059:	std    
  41705a:	pop    ebx
  41705b:	std    
  41705c:	clc    
  41705d:	outs   dx,BYTE PTR ds:[esi]
  41705e:	pop    esp
  41705f:	xchg   ch,cl
  417061:	sub    bh,BYTE PTR [edx-0x2ca7a65f]
  417067:	fisttp DWORD PTR [edx+edi*4+0x32]
  41706b:	add    edx,edx
  41706d:	jl     0x416ffa
  41706f:	add    edx,ecx
  417071:	aas    
  417072:	or     bl,bl
  417074:	add    edi,DWORD PTR ds:0xebc6aa17
  41707a:	pop    ss
  41707b:	inc    ebp
  41707c:	sub    al,0x70
  41707e:	push   esp
  41707f:	jle    0x4170d7
  417081:	fist   WORD PTR [esi]
  417083:	mov    al,0x1
  417085:	xchg   esp,eax
  417086:	and    BYTE PTR [ebx+eiz*1-0x24fc709e],dl
  41708d:	ror    dh,1
  41708f:	mov    eax,0x823f0fac
  417094:	or     al,0xdc
  417096:	jmp    0x4170b8
  417098:	or     BYTE PTR [ebx],al
  41709a:	xchg   esp,eax
  41709b:	dec    ebx
  41709c:	aaa    
  41709d:	push   ebp
  41709e:	cmp    BYTE PTR [ebx+0x2],ah
  4170a1:	mov    bh,0xce
  4170a3:	retf   0xefd5
  4170a6:	sahf   
  4170a7:	test   DWORD PTR [ebx],edi
  4170a9:	cmp    bh,BYTE PTR [ecx+0x2575ddcd]
  4170af:	lods   eax,DWORD PTR ds:[esi]
  4170b0:	mov    edx,0x770d6508
  4170b5:	fwait
  4170b6:	sbb    eax,ebx
  4170b8:	push   0x2
  4170ba:	fdiv   st,st(2)
  4170bc:	ret    
  4170bd:	jnp    0x4170e4
  4170bf:	dec    ebp
  4170c0:	mov    cr7,ebp
  4170c3:	inc    ecx
  4170c4:	xchg   edi,eax
  4170c5:	outs   dx,BYTE PTR ds:[esi]
  4170c6:	cmp    DWORD PTR [ebx+0x4305e5dc],eax
  4170cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170cd:	ror    BYTE PTR [ebx+0x55771a52],1
  4170d3:	mov    ah,0xb1
  4170d5:	imul   ebp,DWORD PTR [eax-0x60097974],0x49
  4170dc:	out    0xcb,al
  4170de:	push   edx
  4170df:	lahf   
  4170e0:	retf   
  4170e1:	test   DWORD PTR [esp+ebp*8],edi
  4170e4:	gs pop ss
  4170e6:	mov    edx,0xb211310e
  4170eb:	adc    eax,0xcb48d21f
  4170f0:	ss jno 0x4170a1
  4170f3:	(bad)  [eax-0x6d]
  4170f6:	adc    al,0x5f
  4170f8:	data16 fst QWORD PTR [edx]
  4170fb:	dec    ebp
  4170fc:	mov    edx,0xf3976d28
  417101:	adc    ebp,edx
  417103:	sub    eax,0xb66adcef
  417108:	or     dh,BYTE PTR [edi-0x5e]
  41710b:	add    ebx,DWORD PTR [ebp-0xb687aa8]
  417111:	sub    ebp,DWORD PTR [edx+0x79]
  417114:	(bad)  
  417115:	or     bl,BYTE PTR [edx-0x749b05e2]
  41711b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711c:	push   ss
  41711d:	hlt    
  41711e:	inc    edi
  41711f:	mov    DWORD PTR [ebp-0x3d],ecx
  417122:	adc    al,0xd8
  417124:	ss mov bh,0xbb
  417127:	inc    edx
  417128:	mov    edi,DWORD PTR ds:0x1592b9e1
  41712e:	into   
  41712f:	sahf   
  417130:	inc    edi
  417131:	ret    0xad65
  417134:	mov    ch,0xd8
  417136:	test   DWORD PTR [edi+0x77218594],edi
  41713c:	div    DWORD PTR ds:0x3c0ff909
  417142:	scas   eax,DWORD PTR es:[edi]
  417143:	mov    ch,0xf
  417145:	inc    DWORD PTR [edx-0x306beaec]
  41714b:	les    edi,FWORD PTR [esi-0x64]
  41714e:	call   0x617c:0xf8f87f32
  417155:	test   al,0xb7
  417157:	or     dh,BYTE PTR [esi]
  417159:	test   cl,cl
  41715b:	dec    edx
  41715c:	xor    eax,0x3b1ba6c
  417161:	mov    ds:0xaa8ca372,eax
  417166:	test   BYTE PTR [ecx+0xa2997a7],ah
  41716c:	retf   0xa265
  41716f:	adc    DWORD PTR [edx-0x33],ebp
  417172:	inc    esi
  417173:	test   DWORD PTR [edx+0x32069db7],0x32f31eeb
  41717d:	push   cs
  41717e:	inc    esi
  41717f:	push   ds
  417180:	inc    ebx
  417181:	iret   
  417182:	int    0x6c
  417184:	xor    bl,ch
  417186:	pop    ss
  417187:	jmp    0xa3d8:0xfca9586f
  41718e:	xor    DWORD PTR [edi-0x72600dd2],esp
  417194:	imul   edx,DWORD PTR [esi],0x3c5bd053
  41719a:	mov    esi,0x55ed8f0
  41719f:	cld    
  4171a0:	adc    BYTE PTR [ebx+esi*1+0x7be05578],ah
  4171a7:	push   cs
  4171a8:	aad    0xea
  4171aa:	mov    al,0xdc
  4171ac:	sahf   
  4171ad:	add    esp,esp
  4171af:	retf   
  4171b0:	call   0xae09:0x747c
  4171b6:	xchg   esi,eax
  4171b7:	add    DWORD PTR [esi],esp
  4171b9:	repnz pop ecx
  4171bb:	test   eax,0x8d03ca64
  4171c0:	shr    BYTE PTR [esi],1
  4171c2:	aas    
  4171c3:	push   edx
  4171c4:	inc    ebx
  4171c5:	not    DWORD PTR [eax-0x4ee51f5d]
  4171cb:	sbb    al,0x6b
  4171cd:	out    dx,eax
  4171ce:	js     0x417167
  4171d0:	mov    DWORD PTR [ebp-0x4b],0x2972535d
  4171d7:	jmp    0x41722e
  4171d9:	mov    bh,0xe1
  4171db:	jo     0x4171aa
  4171dd:	pop    edx
  4171de:	in     eax,dx
  4171df:	ja     0x4171a2
  4171e1:	mov    cl,bh
  4171e3:	adc    al,0xc0
  4171e5:	stos   BYTE PTR es:[edi],al
  4171e6:	push   0xa229e002
  4171eb:	fnsave [edx-0x6c]
  4171ee:	rol    DWORD PTR [edi+0x3d],cl
  4171f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f2:	jle    0x417178
  4171f4:	and    al,0xf3
  4171f6:	mov    al,0xc2
  4171f8:	xor    DWORD PTR [ebp-0x6cc5ad58],edx
  4171fe:	or     eax,0x78463ca9
  417203:	xor    ebp,DWORD PTR [eax]
  417205:	mov    ecx,0xb46c42ec
  41720a:	sub    esi,DWORD PTR [eax-0x1361c850]
  417210:	popa   
  417211:	leave  
  417212:	sbb    ebp,DWORD PTR [edi+0x4738ff27]
  417218:	fsub   DWORD PTR [ecx]
  41721a:	inc    DWORD PTR [edi-0x9b1f783]
  417220:	jp     0x417206
  417222:	ror    DWORD PTR es:[eax+0x6c343fbe],cl
  417229:	outs   dx,DWORD PTR ds:[esi]
  41722a:	fld    DWORD PTR [ebx]
  41722c:	cmp    esp,DWORD PTR [ebp+0x26]
  41722f:	push   ecx
  417230:	add    eax,0xca79bbd7
  417235:	mov    edi,0xe75b526a
  41723a:	cmp    BYTE PTR [ebx-0x61],al
  41723d:	ret    
  41723e:	mov    ch,0x85
  417240:	jbe    0x417273
  417242:	adc    dl,BYTE PTR [edx]
  417244:	in     eax,0xc1
  417246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417247:	pop    edx
  417248:	ffree  st(2)
  41724a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724b:	mov    edx,0x95b0a8cc
  417250:	fild   QWORD PTR [esi]
  417252:	mov    BYTE PTR [ebx-0x63c3bfd4],bh
  417258:	scas   al,BYTE PTR es:[edi]
  417259:	mov    BYTE PTR [edx],cl
  41725b:	iret   
  41725c:	ja     0x41724b
  41725e:	mov    eax,0xa30b93eb
  417263:	adc    al,0x77
  417265:	add    DWORD PTR [edi-0x60],esi
  417268:	pusha  
  417269:	ins    DWORD PTR es:[edi],dx
  41726a:	loop   0x4172a4
  41726c:	(bad)
  417270:	iret   
  417271:	mov    BYTE PTR [edx-0x78],al
  417274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417275:	daa    
  417276:	loopne 0x4172ae
  417278:	or     DWORD PTR [esi-0x80],edx
  41727b:	btc    DWORD PTR [ecx+0x5b9ae168],esi
  417282:	call   DWORD PTR [edx]
  417284:	jno    0x417299
  417286:	mov    eax,0xa9600582
  41728b:	sub    ch,BYTE PTR [esi]
  41728d:	dec    esi
  41728e:	xor    ebp,DWORD PTR [bx+di+0x2b]
  417292:	pop    edx
  417293:	xchg   esp,eax
  417294:	fwait
  417295:	push   0x142682a4
  41729a:	int    0xd5
  41729c:	mov    DWORD PTR [eax-0x736f1b4b],eax
  4172a2:	in     al,dx
  4172a3:	push   0xd3d0179d
  4172a8:	sub    al,bh
  4172aa:	dec    edx
  4172ab:	or     eax,0x5a75f95d
  4172b0:	mov    bl,bh
  4172b2:	icebp  
  4172b3:	data16 icebp 
  4172b5:	fldenv [ebx]
  4172b7:	data16 sbb bh,BYTE PTR gs:[eax]
  4172bb:	mov    ah,0x41
  4172bd:	inc    esi
  4172be:	scas   al,BYTE PTR es:[edi]
  4172bf:	cli    
  4172c0:	or     edi,DWORD PTR [edi+0x12]
  4172c3:	in     al,0xdd
  4172c5:	pop    ecx
  4172c6:	cmp    ebp,DWORD PTR [edi]
  4172c8:	enter  0xea63,0xe3
  4172cc:	xor    DWORD PTR ds:0xd3d20305,ebx
  4172d2:	ds push es
  4172d4:	fstp   TBYTE PTR [edx-0x58]
  4172d7:	or     dl,bl
  4172d9:	mov    WORD PTR [edi+0x68],?
  4172dc:	popf   
  4172dd:	outs   dx,BYTE PTR ds:[esi]
  4172de:	xor    BYTE PTR [eax-0xa7e2874],0xd
  4172e5:	or     al,bl
  4172e7:	jecxz  0x4172f3
  4172e9:	mov    al,0x32
  4172eb:	mov    BYTE PTR [edx-0x56],bl
  4172ee:	pop    ss
  4172ef:	gs loopne 0x417277
  4172f2:	daa    
  4172f3:	mov    dh,0x53
  4172f5:	mov    al,0x1a
  4172f7:	sub    ecx,ebx
  4172f9:	xchg   DWORD PTR [edx+0x31],edx
  4172fc:	inc    edx
  4172fd:	jecxz  0x41737c
  4172ff:	int    0xf1
  417301:	sbb    bl,BYTE PTR [ebx]
  417303:	dec    edx
  417304:	or     eax,0x7893fe7e
  417309:	mov    esi,DWORD PTR [ebx]
  41730b:	add    eax,0xb7827e89
  417310:	sub    DWORD PTR ds:0x606592ec,esi
  417316:	jmp    0x75ca:0xdbc528e1
  41731d:	jnp    0x417359
  41731f:	out    dx,eax
  417320:	sub    DWORD PTR [ebp+0x2595e1b0],ebx
  417326:	in     al,0x8d
  417328:	in     eax,0xc0
  41732a:	popa   
  41732b:	sbb    ebx,DWORD PTR [ebx]
  41732d:	data16 outs dx,BYTE PTR ds:[esi]
  41732f:	(bad)  
  417330:	fstp   DWORD PTR [ebp+ecx*2+0x77]
  417334:	mov    ebp,DWORD PTR [ecx-0xd811b5c]
  41733a:	jmp    0x4172e1
  41733c:	mov    dl,0x33
  41733e:	(bad)  
  41733f:	jl     0x4172e2
  417341:	mov    esi,0x854cad7b
  417346:	add    ecx,DWORD PTR [esi]
  417348:	cmc    
  417349:	mov    cl,0x79
  41734b:	ret    
  41734c:	lahf   
  41734d:	ret    0xb100
  417350:	cmp    DWORD PTR [ebx+0x7d52dddc],esi
  417356:	ficom  DWORD PTR [ebx+0x19]
  417359:	mov    al,ds:0x5ed8f530
  41735e:	ficomp WORD PTR [edi+esi*1]
  417361:	ror    DWORD PTR [ecx],1
  417363:	sti    
  417364:	jge    0x417376
  417366:	ds stc 
  417368:	in     eax,dx
  417369:	mov    al,ds:0x47683884
  41736e:	add    dl,dh
  417370:	aaa    
  417371:	scas   eax,DWORD PTR es:[edi]
  417372:	(bad)  
  417374:	cmp    cl,bl
  417376:	les    edx,FWORD PTR [edi+eax*4-0x92d660f]
  41737d:	fs and eax,0x81481d3c
  417383:	mov    edi,ebp
  417385:	clc    
  417386:	les    eax,FWORD PTR [edi]
  417388:	inc    ebp
  417389:	sub    esi,eax
  41738b:	mov    ecx,0xbc08d29
  417390:	test   BYTE PTR [edx+0x9],bh
  417393:	stos   DWORD PTR es:[edi],eax
  417394:	enter  0x88fb,0x4c
  417398:	fcomp  st(5)
  41739a:	pop    ebx
  41739b:	pushf  
  41739c:	ror    DWORD PTR [ebp+eiz*8-0x1cf97bb3],0x9d
  4173a4:	pop    esi
  4173a5:	or     eax,0x54a00778
  4173aa:	add    ch,al
  4173ac:	or     dh,al
  4173ae:	xor    al,0xf2
  4173b0:	je     0x417363
  4173b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173b3:	xchg   ebp,eax
  4173b4:	pop    esp
  4173b5:	add    al,0x63
  4173b7:	mov    esi,0x67c8dea4
  4173bc:	mov    bh,0xb1
  4173be:	sahf   
  4173bf:	or     al,0xb4
  4173c1:	mov    esi,0x9cd2e71e
  4173c6:	sbb    esi,DWORD PTR [ebx+0x6d]
  4173c9:	add    al,0x9f
  4173cb:	mov    edx,0x8be0d9a2
  4173d0:	daa    
  4173d1:	sti    
  4173d2:	ret    0x97fe
  4173d5:	mov    cl,0x9
  4173d7:	sbb    DWORD PTR [eax*4+0x5d3b129d],ebx
  4173de:	xlat   BYTE PTR ds:[ebx]
  4173df:	mov    ch,0xfe
  4173e1:	ins    DWORD PTR es:[edi],dx
  4173e2:	das    
  4173e3:	repnz ss pop ds
  4173e6:	mov    bh,0xd9
  4173e8:	xchg   ebx,eax
  4173e9:	sub    dh,BYTE PTR [eax+0x36]
  4173ec:	add    ah,BYTE PTR [ebx+0x58]
  4173ef:	call   0xe6c0493c
  4173f4:	out    dx,eax
  4173f5:	hlt    
  4173f6:	adc    BYTE PTR [esi+0x5],ch
  4173f9:	iret   
  4173fa:	daa    
  4173fb:	popf   
  4173fc:	repnz dec ecx
  4173fe:	add    ecx,DWORD PTR [eax-0x289c146b]
  417404:	push   0xffffffbc
  417406:	xor    al,0x11
  417408:	push   edi
  417409:	mov    bl,0x9d
  41740b:	add    BYTE PTR [ecx],ah
  41740d:	int    0xc6
  41740f:	lods   al,BYTE PTR ds:[esi]
  417410:	or     edx,ebp
  417412:	ror    edi,0xcd
  417415:	and    al,0x33
  417417:	lods   al,BYTE PTR ds:[esi]
  417418:	hlt    
  417419:	aam    0x87
  41741b:	fs jo  0x417428
  41741e:	ret    0xc5da
  417421:	add    al,0x48
  417423:	aaa    
  417424:	adc    eax,0xd5fdc7ec
  417429:	jae    0x417494
  41742b:	pop    ecx
  41742c:	push   eax
  41742d:	pushf  
  41742e:	dec    ebx
  41742f:	repnz xor BYTE PTR [edi-0x4d0de1bb],cl
  417436:	fld    TBYTE PTR [edx]
  417438:	cli    
  417439:	jbe    0x417437
  41743b:	cli    
  41743c:	rcl    bl,1
  41743e:	xor    DWORD PTR [esi+0x5e],eax
  417441:	aaa    
  417442:	outs   dx,DWORD PTR ds:[esi]
  417443:	leave  
  417444:	add    DWORD PTR [edx],esp
  417446:	enter  0xb501,0xff
  41744a:	xor    esp,DWORD PTR [eax-0x6561fd32]
  417450:	data16 cmp BYTE PTR gs:[ebx-0x56],al
  417455:	(bad)  
  417457:	mov    ecx,0x4f05ebfb
  41745c:	clc    
  41745d:	inc    BYTE PTR [eax-0x6ae4f900]
  417463:	les    esp,FWORD PTR [esi-0x1728d945]
  417469:	xchg   esp,eax
  41746a:	add    dh,al
  41746c:	jmp    0x1ba7:0x16794ac4
  417473:	xor    ah,dh
  417475:	cmp    DWORD PTR [ebx+0x29],eax
  417478:	jp     0x4174f7
  41747a:	cmp    DWORD PTR [eax-0x6d],0xffffff8b
  41747e:	jae    0x41749e
  417480:	xchg   edi,eax
  417481:	cmc    
  417482:	inc    ebp
  417483:	push   ds
  417484:	mov    ebx,0x3a55e503
  417489:	in     al,0x42
  41748b:	cmp    bl,BYTE PTR [edi+eax*8+0x74]
  41748f:	into   
  417490:	in     eax,0x58
  417492:	mov    cl,0xe1
  417494:	jb     0x417507
  417496:	or     esi,edx
  417498:	mov    dh,0x8f
  41749a:	lea    ebp,[edi+eax*2]
  41749d:	adc    DWORD PTR [edi+esi*1+0x40],0xffffffd0
  4174a2:	pusha  
  4174a3:	add    ecx,ecx
  4174a5:	pop    ebp
  4174a6:	std    
  4174a7:	add    eax,DWORD PTR [ecx+ebx*2]
  4174aa:	dec    ebx
  4174ab:	mov    edx,0x285f87ae
  4174b0:	stos   DWORD PTR es:[edi],eax
  4174b1:	jns    0x417513
  4174b3:	fcmovb st,st(2)
  4174b5:	add    esp,ebx
  4174b7:	lahf   
  4174b8:	push   edi
  4174b9:	int3   
  4174ba:	js     0x41749d
  4174bc:	sti    
  4174bd:	or     dl,BYTE PTR [ebx]
  4174bf:	dec    edx
  4174c0:	pushf  
  4174c1:	shl    dl,1
  4174c3:	(bad)  
  4174c4:	(bad)  
  4174c5:	mov    ecx,0x8ffa8649
  4174ca:	push   edi
  4174cb:	out    0x3c,eax
  4174cd:	jl     0x417491
  4174cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d0:	mov    dl,al
  4174d2:	js     0x41750d
  4174d4:	or     al,0x1
  4174d6:	sti    
  4174d7:	sub    ah,dh
  4174d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174da:	mov    bh,0xcb
  4174dc:	adc    al,0xd1
  4174de:	imul   DWORD PTR [edi-0x40c1eccc]
  4174e4:	add    eax,0xf2e7a2a5
  4174e9:	icebp  
  4174ea:	sub    BYTE PTR [ecx-0x764f4cc1],al
  4174f0:	adc    eax,0x76f7e07d
  4174f5:	retf   
  4174f6:	mov    edi,0xaeb6a84c
  4174fb:	dec    eax
  4174fc:	aam    0x51
  4174fe:	cs jbe 0x41753e
  417501:	push   esi
  417502:	ins    DWORD PTR es:[edi],dx
  417503:	cmp    eax,0xa1bac4aa
  417508:	test   al,0x51
  41750a:	aas    
  41750b:	pop    ebx
  41750c:	xchg   ebp,eax
  41750d:	rol    DWORD PTR [edx+0x4692790c],1
  417513:	scas   eax,DWORD PTR es:[edi]
  417514:	push   esp
  417515:	fwait
  417516:	(bad)  
  417517:	test   eax,0x2fa0fe42
  41751d:	xchg   ebx,eax
  41751e:	jp     0x417530
  417520:	pop    ecx
  417521:	bound  edi,QWORD PTR [ebx]
  417523:	(bad)  
  417524:	jno    0x417573
  417526:	std    
  417527:	(bad)  
  417528:	xchg   esi,eax
  417529:	dec    ebx
  41752a:	adc    al,0xc4
  41752c:	enter  0xb7b0,0x31
  417530:	pushf  
  417531:	adc    al,0x85
  417533:	mov    ds:0xa6419647,eax
  417538:	sbb    al,0x57
  41753a:	popa   
  41753b:	mov    bh,0xb6
  41753d:	in     al,dx
  41753e:	mov    bl,0x42
  417540:	sub    dl,cl
  417542:	outs   dx,BYTE PTR ds:[esi]
  417543:	int    0x6f
  417545:	cs in  eax,0x5
  417548:	jnp    0x417583
  41754a:	call   ebp
  41754c:	out    0x4d,eax
  41754e:	scas   al,BYTE PTR es:[di]
  417550:	and    BYTE PTR [edx],0x51
  417553:	in     eax,0xa3
  417555:	adc    eax,0x4c2fef7e
  41755a:	mov    WORD PTR [ebp+0x26],es
  41755d:	je     0x417586
  41755f:	test   DWORD PTR [ecx+0x3a],ebp
  417562:	sbb    bh,ah
  417564:	fs sub eax,0x2c301075
  41756a:	xor    DWORD PTR [ecx+edx*2-0x4f03a030],ebx
  417571:	leave  
  417572:	xchg   edx,eax
  417573:	add    DWORD PTR ds:0x9131458e,ebp
  417579:	repz mov ds:0x8faead84,al
  41757f:	mov    ss,WORD PTR [esi]
  417581:	mov    al,ds:0x7fec4d90
  417586:	adc    bh,dh
  417588:	outs   dx,DWORD PTR ds:[esi]
  417589:	cld    
  41758a:	or     al,0xc6
  41758c:	lock into 
  41758e:	repz xor al,BYTE PTR [edx]
  417591:	les    edi,FWORD PTR [ecx+0x6cbfe489]
  417597:	ret    
  417598:	inc    esi
  417599:	ficom  WORD PTR [esi]
  41759b:	jle    0x417558
  41759d:	call   0x7edfcc80
  4175a2:	mov    edx,DWORD PTR [edi]
  4175a4:	dec    esp
  4175a5:	ins    DWORD PTR es:[edi],dx
  4175a6:	cmp    ah,dh
  4175a8:	call   0xb3f2d450
  4175ad:	out    0x90,eax
  4175af:	dec    edx
  4175b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b1:	test   BYTE PTR [ebx+0x446f3f6d],0x11
  4175b8:	jp     0x417603
  4175ba:	dec    ecx
  4175bb:	sbb    eax,0x44ee259b
  4175c0:	jecxz  0x41762f
  4175c2:	jns    0x4175a9
  4175c4:	adc    DWORD PTR ds:0xb269fccc,ebp
  4175ca:	add    edi,DWORD PTR [eax-0x48b760bd]
  4175d0:	xchg   esp,eax
  4175d1:	pop    ebp
  4175d2:	lods   eax,DWORD PTR ds:[esi]
  4175d3:	xlat   BYTE PTR ds:[ebx]
  4175d4:	inc    edx
  4175d5:	mov    al,0xa
  4175d7:	jmp    0x9b69:0x87ae7e7a
  4175de:	fwait
  4175df:	xor    DWORD PTR [eax-0x66],ebx
  4175e2:	dec    esi
  4175e3:	or     ebx,ebx
  4175e5:	cmp    BYTE PTR [edx],0x4e
  4175e8:	xchg   ebx,eax
  4175e9:	fist   WORD PTR [esi+0x20e1596a]
  4175ef:	cmp    eax,0x8223e258
  4175f4:	mov    edx,0x7147ba23
  4175f9:	in     al,dx
  4175fa:	xor    BYTE PTR [edi],ch
  4175fc:	push   esi
  4175fd:	mov    ebp,DWORD PTR [ebp-0x24]
  417600:	add    ebp,esi
  417602:	add    eax,0x80a88de
  417607:	push   ss
  417608:	ret    
  417609:	xchg   eax,edi
  41760b:	adc    esp,DWORD PTR [edi+0x10]
  41760e:	test   eax,0xc10f3cb9
  417613:	popf   
  417614:	imul   esp,eax,0xffffffe5
  417617:	add    edx,DWORD PTR [esp+eax*4-0x73]
  41761b:	pop    ds
  41761c:	or     ch,BYTE PTR [edx+0x4ce2a9d2]
  417622:	cmc    
  417623:	inc    esp
  417624:	ud0    eax,esp
  417627:	jmp    0x6efe:0x9d3fec93
  41762e:	cmp    eax,0x981e3edd
  417633:	(bad)  
  417634:	retf   
  417635:	and    eax,0x599221cf
  41763a:	pushf  
  41763b:	pop    ds
  41763c:	adc    ch,BYTE PTR ds:[esi-0x42bdf70]
  417643:	fdivr  DWORD PTR [ecx-0x3746793c]
  417649:	(bad)  
  41764a:	out    dx,eax
  41764b:	add    ch,dl
  41764d:	or     eax,0x4bb4fc77
  417652:	ja     0x4176b9
  417654:	inc    ebp
  417655:	or     dh,dl
  417657:	add    BYTE PTR [ebp-0x5f],al
  41765a:	push   0xd82eada9
  41765f:	shr    ah,cl
  417661:	bound  edi,QWORD PTR [ecx-0x3b70e30b]
  417667:	js     0x4176dd
  417669:	dec    edi
  41766a:	repnz push esp
  41766c:	sbb    bl,0x84
  41766f:	dec    ebp
  417670:	or     ebp,ebp
  417672:	cmp    ebp,ecx
  417674:	xor    edi,ecx
  417676:	fdiv   QWORD PTR [ecx]
  417678:	scas   al,BYTE PTR es:[edi]
  417679:	int3   
  41767a:	fistp  DWORD PTR [eax]
  41767c:	add    al,BYTE PTR [ecx+0x57]
  41767f:	cwde   
  417680:	(bad)  
  417681:	jp     0x4176fb
  417683:	les    esi,FWORD PTR [edx-0x5fd727a4]
  417689:	fldl2e 
  41768b:	push   cs
  41768c:	les    ecx,FWORD PTR [edi+0x2e8f0c46]
  417692:	add    al,0x45
  417694:	popa   
  417695:	xchg   ebx,eax
  417696:	das    
  417697:	call   0x3c4f:0x9e890ea4
  41769e:	popf   
  41769f:	jae    0x4176c8
  4176a1:	xchg   ebp,eax
  4176a2:	xchg   edx,eax
  4176a3:	push   esp
  4176a4:	xchg   BYTE PTR [edx-0x21],bh
  4176a7:	sbb    esi,ebp
  4176a9:	sub    ebp,DWORD PTR [ecx]
  4176ab:	sbb    DWORD PTR [esp+edi*2],eax
  4176ae:	jp     0x417725
  4176b0:	push   ecx
  4176b1:	cwde   
  4176b2:	addr16 div bh
  4176b5:	hlt    
  4176b6:	test   al,0xc5
  4176b8:	lods   eax,DWORD PTR ds:[esi]
  4176b9:	ins    BYTE PTR es:[edi],dx
  4176ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176bb:	(bad)  
  4176bc:	jmp    0x417673
  4176be:	mov    eax,0x587a406b
  4176c3:	setb   bl
  4176c6:	in     al,dx
  4176c7:	lock ins BYTE PTR es:[edi],dx
  4176c9:	mov    dl,0xcc
  4176cb:	(bad)  
  4176cc:	lods   eax,DWORD PTR ds:[esi]
  4176cd:	out    0x98,al
  4176cf:	popf   
  4176d0:	(bad)  
  4176d1:	hlt    
  4176d2:	jo     0x417704
  4176d4:	xor    eax,DWORD PTR [esi+0xf]
  4176d7:	punpcklbw mm3,DWORD PTR [edi+0x18]
  4176db:	pop    esi
  4176dc:	arpl   bx,bx
  4176de:	inc    edi
  4176df:	fdivr  QWORD PTR [eax-0x6c]
  4176e2:	sbb    dl,ch
  4176e4:	loop   0x4176c1
  4176e6:	sub    BYTE PTR [esi+ebx*2+0x43360cec],cl
  4176ed:	popa   
  4176ee:	sub    edx,DWORD PTR [ecx*8-0x1d557cda]
  4176f5:	cmp    esi,DWORD PTR [ecx]
  4176f7:	mov    ch,0x11
  4176f9:	jb     0x4176a0
  4176fb:	inc    ebx
  4176fc:	add    BYTE PTR [ebx-0x1c3a7a22],0xe3
  417703:	xchg   edx,eax
  417704:	test   DWORD PTR [ebx-0x2f],0x1117c4d6
  41770b:	add    esp,esi
  41770d:	jmp    0x52d6:0x54d75b1b
  417714:	pushf  
  417715:	mov    esi,0xf0853d4
  41771a:	mov    ebp,0xd227807b
  41771f:	lea    ebx,[ebp-0x20782f5e]
  417725:	fwait
  417726:	icebp  
  417727:	push   ss
  417728:	xchg   esi,eax
  417729:	fld    DWORD PTR [eax]
  41772b:	(bad)  
  41772c:	or     DWORD PTR [eax+0x1f],esp
  41772f:	frstor [ecx+0x42c2252]
  417735:	mov    dh,0xd0
  417737:	test   DWORD PTR [edx+eax*8-0x505eccd8],edi
  41773e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41773f:	jecxz  0x4176cf
  417741:	xchg   ecx,eax
  417742:	or     al,0x95
  417744:	and    dh,BYTE PTR [ebp+edi*8+0x1ab840fc]
  41774b:	jle    0x4176ef
  41774d:	mov    BYTE PTR [ebp+0x7c],al
  417750:	pop    ebp
  417751:	pusha  
  417752:	mov    eax,0x796c9885
  417757:	iret   
  417758:	mov    ah,0x4
  41775a:	xor    esp,edx
  41775c:	adc    dh,BYTE PTR [eax+edi*4+0x4a726c7d]
  417763:	inc    ebp
  417764:	xor    eax,0x992e7c6b
  417769:	add    cl,BYTE PTR ds:0x379269b2
  41776f:	outs   dx,BYTE PTR ds:[esi]
  417770:	mov    ecx,0x2a4a2318
  417775:	and    eax,0xa130332f
  41777a:	mov    cl,0xc2
  41777c:	add    DWORD PTR [ecx+0x543204ec],ebx
  417782:	jg     0x41772b
  417784:	add    ebx,ecx
  417786:	fsub   DWORD PTR [eax-0x75d98676]
  41778c:	call   0x64698ee4
  417791:	out    dx,al
  417792:	rcr    BYTE PTR [ebp+esi*2+0x7e],1
  417796:	sbb    al,0x2f
  417798:	addr16 ss (bad) 
  41779b:	adc    eax,0xb9e8ed94
  4177a0:	imul   ebx,DWORD PTR [edi+0x79b065ee],0x1c
  4177a7:	lds    esi,FWORD PTR [ebx-0x2d8aac8d]
  4177ad:	push   esi
  4177ae:	icebp  
  4177af:	cli    
  4177b0:	rol    BYTE PTR [esi+0x169e03ec],cl
  4177b6:	sbb    DWORD PTR [esi-0x6a],esp
  4177b9:	mov    dl,dh
  4177bb:	mov    bh,0x5
  4177bd:	inc    edi
  4177be:	pop    ebx
  4177bf:	lds    edx,FWORD PTR [edx-0x6d]
  4177c2:	in     eax,0x51
  4177c4:	iret   
  4177c5:	push   ebx
  4177c6:	hlt    
  4177c7:	jl     0x417800
  4177c9:	inc    eax
  4177ca:	inc    edi
  4177cb:	cmp    al,0xe9
  4177cd:	xor    eax,0x108180aa
  4177d2:	adc    ebp,0x4203993c
  4177d8:	std    
  4177d9:	imul   BYTE PTR [edi+ebp*1-0x28]
  4177dd:	xchg   edx,eax
  4177de:	push   ds
  4177df:	inc    edi
  4177e0:	and    al,0x57
  4177e2:	inc    ebx
  4177e3:	bound  esp,QWORD PTR [esi+ecx*2+0x69]
  4177e7:	jge    0x4177e5
  4177e9:	int    0xa5
  4177eb:	mov    esp,0x3f6ed472
  4177f0:	cmp    al,0x96
  4177f2:	jl     0x417816
  4177f4:	sbb    al,0x1e
  4177f6:	xor    ebp,DWORD PTR [edx]
  4177f8:	cmp    DWORD PTR [ebx-0x16],esp
  4177fb:	cmp    BYTE PTR [eax+esi*8+0x57],ah
  4177ff:	inc    ebx
  417800:	adc    eax,ecx
  417802:	ins    DWORD PTR es:[edi],dx
  417803:	adc    dh,ah
  417805:	xor    DWORD PTR [esp+eax*2-0x3fc819cc],0x27470100
  417810:	fld    DWORD PTR [ebx]
  417812:	sbb    DWORD PTR [eax-0x76a22cd3],ebp
  417818:	scas   eax,DWORD PTR es:[edi]
  417819:	dec    DWORD PTR [esi-0x1e6a73c0]
  41781f:	jg     0x4177ec
  417821:	out    dx,eax
  417822:	stos   DWORD PTR es:[edi],eax
  417823:	inc    esi
  417824:	xor    ebp,eax
  417826:	adc    ecx,DWORD PTR [edx-0xf]
  417829:	adc    DWORD PTR [eax+0x78570cd],ebp
  41782f:	hlt    
  417830:	jns    0x4177ef
  417832:	imul   esi,DWORD PTR [ebx-0x1a42110],0xffffffeb
  417839:	lahf   
  41783a:	fcomp  DWORD PTR [edi-0x67741d75]
  417840:	bound  ebp,QWORD PTR [esi+0x22118fd4]
  417846:	and    edx,DWORD PTR [eax+0x5a]
  417849:	add    eax,0xd32fc161
  41784f:	sbb    BYTE PTR [edx+0x68],ah
  417852:	inc    ebx
  417853:	adc    al,0x30
  417855:	xchg   edx,eax
  417856:	out    dx,eax
  417857:	mov    ebx,0xb97687dc
  41785c:	pop    ds
  41785d:	mov    ds:0xbe20a313,eax
  417862:	add    al,0x14
  417864:	cmp    eax,0xbcc937ec
  417869:	cmp    eax,0x40618c3f
  41786e:	rep stos DWORD PTR es:[edi],eax
  417870:	dec    ebx
  417871:	sbb    eax,esi
  417873:	clc    
  417874:	cmp    DWORD PTR [ecx-0x5ee97839],edi
  41787a:	xor    BYTE PTR [ebp+0x2d],ch
  41787d:	data16 neg BYTE PTR [esi+0x186376b1]
  417884:	std    
  417885:	and    esp,esp
  417887:	nop
  417888:	pop    esp
  417889:	mov    ebp,0xe3aae814
  41788e:	dec    ebp
  41788f:	push   0x6
  417891:	and    eax,0xd4cf002b
  417896:	fisttp DWORD PTR [esi+0x736cba3a]
  41789c:	inc    ebx
  41789d:	mov    ch,0x17
  41789f:	gs ret 0x92e1
  4178a3:	xchg   ecx,eax
  4178a4:	push   0xffffffad
  4178a6:	jg     0x417877
  4178a8:	sbb    eax,0xfe9ef729
  4178ad:	fcmovbe st,st(2)
  4178af:	in     al,dx
  4178b0:	push   edi
  4178b1:	sbb    DWORD PTR [eax-0x3d58ba25],esi
  4178b7:	dec    edi
  4178b8:	sbb    eax,0x959243fa
  4178bd:	jmp    0x832a7f01
  4178c2:	pop    esp
  4178c3:	gs push esi
  4178c5:	lods   eax,DWORD PTR ds:[esi]
  4178c6:	adc    edi,0x5447b959
  4178cc:	mov    ecx,0x20ec8e6a
  4178d1:	fistp  QWORD PTR [ebx-0x1f]
  4178d4:	icebp  
  4178d5:	jmp    0x7a137dbe
  4178da:	mov    WORD PTR [edi],cs
  4178dc:	push   esi
  4178dd:	clc    
  4178de:	clc    
  4178df:	sub    al,0xd4
  4178e1:	mov    bh,0x48
  4178e3:	and    edi,DWORD PTR [eax]
  4178e5:	loopne 0x4178d5
  4178e7:	pop    ebx
  4178e8:	mov    ch,0x39
  4178ea:	retf   
  4178eb:	jmp    0x620bd7a1
  4178f0:	jge    0x41789c
  4178f2:	into   
  4178f3:	jne    0x417959
  4178f5:	mov    ebp,0x53cbc2c1
  4178fa:	mov    dh,0xa5
  4178fc:	popf   
  4178fd:	lahf   
  4178fe:	ret    
  4178ff:	(bad)  
  417900:	fnsave [esi]
  417902:	out    0xfb,eax
  417904:	pop    eax
  417905:	and    esp,DWORD PTR ds:0xf242dbe0
  41790b:	pop    es
  41790c:	stc    
  41790d:	mov    dl,0x82
  41790f:	push   0x71
  417911:	inc    ebp
  417912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417913:	repz mov dl,0x5d
  417916:	ficom  DWORD PTR [ebx+0x26]
  417919:	fnstenv [ebx]
  41791b:	shl    BYTE PTR [ecx],0x11
  41791e:	mul    DWORD PTR [ebp-0x24225634]
  417924:	sbb    bl,bh
  417926:	stc    
  417927:	rep outs dx,DWORD PTR ds:[esi]
  417929:	push   ecx
  41792a:	sub    al,0x73
  41792c:	sub    DWORD PTR [edx+0x17f9cda3],ecx
  417932:	in     eax,dx
  417933:	inc    DWORD PTR [ebx+0x519f3402]
  417939:	and    esi,DWORD PTR [ecx]
  41793b:	cdq    
  41793c:	mov    edx,0x36ce062d
  417941:	pop    ebx
  417942:	pop    ebp
  417943:	sbb    ah,dh
  417945:	lahf   
  417946:	mov    esi,0xe1cc90fd
  41794b:	fsubr  QWORD PTR [ebp+ecx*2-0x75]
  41794f:	pusha  
  417950:	loope  0x4178e5
  417952:	or     eax,0xa643997d
  417957:	(bad)  
  417958:	or     al,0x35
  41795a:	mov    ecx,0xd03ae54c
  417960:	dec    ebx
  417961:	inc    ebp
  417962:	dec    esi
  417963:	fist   WORD PTR [edi-0x7e]
  417966:	push   eax
  417967:	add    BYTE PTR [esi],0xa5
  41796a:	pop    ebx
  41796b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796c:	or     al,0x10
  41796e:	sub    DWORD PTR [eax+0x36],edi
  417971:	nop
  417972:	repz push ss
  417974:	jbe    0x4179b8
  417976:	fisub  DWORD PTR [edx+ebx*2+0x31e30add]
  41797d:	div    ah
  41797f:	pop    eax
  417980:	in     al,dx
  417981:	mov    eax,ds:0xe2ef2416
  417986:	out    0x13,al
  417988:	ss leave 
  41798a:	outs   dx,BYTE PTR ds:[esi]
  41798b:	mov    ds:0xb90a1499,eax
  417990:	adc    bl,BYTE PTR [edx]
  417992:	sub    dl,dh
  417994:	xor    dl,BYTE PTR [edx-0x24975691]
  41799a:	dec    esp
  41799b:	daa    
  41799c:	pop    esp
  41799d:	lods   al,BYTE PTR ds:[esi]
  41799e:	fisttp QWORD PTR [edi]
  4179a0:	push   0xffffffd1
  4179a2:	jle    0x4179e8
  4179a4:	push   es
  4179a5:	loop   0x417996
  4179a7:	inc    ebx
  4179a8:	shl    DWORD PTR [edx+eax*4+0x3019a840],cl
  4179af:	(bad)  
  4179b0:	push   0x18
  4179b2:	dec    ebx
  4179b3:	(bad)  
  4179b4:	mov    WORD PTR ds:[bx+si],es
  4179b8:	cmp    BYTE PTR [edi],dh
  4179ba:	(bad)  
  4179bb:	dec    esi
  4179bc:	jl     0x417a18
  4179be:	pop    ebx
  4179bf:	jmp    0x417a04
  4179c1:	xlat   BYTE PTR ds:[ebx]
  4179c2:	sub    eax,0x172d92f
  4179c7:	sahf   
  4179c8:	pushf  
  4179c9:	jno    0x417a22
  4179cb:	adc    DWORD PTR [eax],edx
  4179cd:	hlt    
  4179ce:	leave  
  4179cf:	mov    esp,0x167ff4af
  4179d4:	nop
  4179d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d6:	push   esp
  4179d7:	hlt    
  4179d8:	repz xor DWORD PTR [edx+0x3ee3acf],esp
  4179df:	enter  0x1f50,0x2e
  4179e3:	fs add al,0x26
  4179e6:	or     ebx,ecx
  4179e8:	push   ss
  4179e9:	mov    eax,edx
  4179eb:	inc    ebx
  4179ec:	adc    DWORD PTR [edi+edi*2],0x35
  4179f0:	rcl    DWORD PTR [eax],1
  4179f2:	mov    ebp,0xdc14df6b
  4179f7:	push   esi
  4179f8:	inc    edx
  4179f9:	int3   
  4179fa:	and    al,0x9
  4179fc:	sbb    ah,ah
  4179fe:	scas   al,BYTE PTR es:[edi]
  4179ff:	push   ecx
  417a00:	and    al,0x52
  417a02:	sub    ecx,DWORD PTR [edx+0x1f]
  417a05:	mov    esp,DWORD PTR [esi-0xf4aad7f]
  417a0b:	jge    0x417a12
  417a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0e:	stos   DWORD PTR es:[edi],eax
  417a0f:	jmp    0xcbadd2e6
  417a14:	xchg   ebx,eax
  417a15:	pop    ebx
  417a16:	js     0x4179db
  417a18:	test   BYTE PTR [edx-0xd],ch
  417a1b:	or     eax,0xfcb4dca7
  417a20:	xor    DWORD PTR [bx],edi
  417a23:	mov    al,ds:0x1050417e
  417a28:	loope  0x4179ff
  417a2a:	ins    BYTE PTR es:[edi],dx
  417a2b:	dec    edx
  417a2c:	push   eax
  417a2d:	cld    
  417a2e:	pop    ebx
  417a2f:	pop    esp
  417a30:	jmp    0x417a69
  417a32:	repnz push es
  417a34:	mov    ch,0xf3
  417a36:	into   
  417a37:	xchg   esp,eax
  417a38:	pop    eax
  417a39:	pop    ecx
  417a3a:	push   esp
  417a3b:	mov    esp,0x90538424
  417a40:	dec    ebx
  417a41:	aaa    
  417a42:	and    al,0x12
  417a44:	xlat   BYTE PTR ds:[ebx]
  417a45:	aad    0xa9
  417a47:	test   BYTE PTR [edi],ah
  417a49:	mov    ah,0xb6
  417a4b:	jl     0x417ac9
  417a4d:	das    
  417a4e:	pop    esi
  417a4f:	adc    DWORD PTR [ebp+0x73948d1c],eax
  417a55:	loop   0x417a5e
  417a57:	stos   BYTE PTR es:[edi],al
  417a58:	xchg   esi,eax
  417a59:	fcomip st,st(6)
  417a5b:	ret    0x29ea
  417a5e:	ss xchg edi,eax
  417a60:	daa    
  417a61:	imul   eax,esp,0xffffff87
  417a64:	fadd   DWORD PTR [eax+0x5f]
  417a67:	outs   dx,BYTE PTR ds:[esi]
  417a68:	dec    ebp
  417a69:	pop    ebp
  417a6a:	xchg   ebp,eax
  417a6b:	dec    esp
  417a6c:	pop    esp
  417a6d:	(bad)  
  417a6e:	pop    ebp
  417a6f:	push   esp
  417a70:	fisub  WORD PTR [esi]
  417a72:	mov    dl,0x9c
  417a74:	inc    ebx
  417a75:	outs   dx,DWORD PTR ds:[esi]
  417a76:	(bad)  
  417a78:	adc    DWORD PTR [edi*8+0x459138e8],ebp
  417a7f:	test   DWORD PTR [eax],esp
  417a81:	xchg   edx,eax
  417a82:	or     ecx,DWORD PTR [eax+0x40a17c11]
  417a88:	add    BYTE PTR [esi+ecx*2+0x24],bh
  417a8c:	cli    
  417a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a8e:	jl     0x417a8d
  417a90:	mov    al,0x29
  417a92:	xor    ebp,DWORD PTR [edx]
  417a94:	fild   QWORD PTR [eax+0x59623d27]
  417a9a:	xor    eax,0x1ab8a463
  417a9f:	inc    ecx
  417aa0:	cli    
  417aa1:	and    ebx,DWORD PTR [edx]
  417aa3:	mov    al,ds:0xda53d27b
  417aa8:	mov    eax,0xad2cbc75
  417aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aae:	in     eax,dx
  417aaf:	pusha  
  417ab0:	or     BYTE PTR [eax+eax*1],dl
  417ab3:	cmp    ch,BYTE PTR [edi+esi*1+0x54]
  417ab7:	add    al,0x68
  417ab9:	int3   
  417aba:	fisubr DWORD PTR [edi+0x42fc1c72]
  417ac0:	cwde   
  417ac1:	daa    
  417ac2:	int    0xd1
  417ac4:	xchg   dl,dh
  417ac6:	into   
  417ac7:	dec    ebp
  417ac8:	cli    
  417ac9:	cli    
  417aca:	sbb    BYTE PTR [ebx-0x36b6671d],ah
  417ad0:	push   es
  417ad1:	or     DWORD PTR [edi+0x44307929],edi
  417ad7:	scas   al,BYTE PTR es:[edi]
  417ad8:	cmp    eax,0xba5aa008
  417add:	cmp    al,0x29
  417adf:	xor    edi,DWORD PTR [ecx-0x29]
  417ae2:	sbb    al,0xc6
  417ae4:	sti    
  417ae5:	loope  0x417a85
  417ae7:	ins    DWORD PTR es:[edi],dx
  417ae8:	mov    bl,0x81
  417aea:	adc    bh,BYTE PTR [esi-0x6]
  417aed:	mov    cl,0x73
  417aef:	aad    0xb9
  417af1:	add    ax,0xe6ae
  417af5:	ins    BYTE PTR es:[edi],dx
  417af6:	push   cs
  417af7:	mov    ?,WORD PTR [edx+eiz*1+0x24202373]
  417afe:	scas   al,BYTE PTR es:[edi]
  417aff:	fistp  DWORD PTR [ecx+0x3074e150]
  417b05:	std    
  417b06:	jbe    0x417ab8
  417b08:	jecxz  0x417b55
  417b0a:	xchg   edx,eax
  417b0b:	lods   eax,DWORD PTR ds:[esi]
  417b0c:	stc    
  417b0d:	test   al,0x53
  417b0f:	adc    DWORD PTR [ecx],0x6a4e73a2
  417b15:	imul   ebp,DWORD PTR [edx+ebp*2+0x1b767e85],0x3a7ce83f
  417b20:	call   0x50e0:0xdd0fb11f
  417b27:	mov    ch,0x44
  417b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b2a:	push   esp
  417b2b:	add    dl,ah
  417b2d:	ins    DWORD PTR es:[edi],dx
  417b2e:	fwait
  417b2f:	stos   BYTE PTR es:[edi],al
  417b30:	jmp    0x417b99
  417b32:	cld    
  417b33:	cmp    eax,0xae90dcab
  417b38:	adc    BYTE PTR [ecx+ecx*2+0x7f18a9a],bl
  417b3f:	mov    dh,0x85
  417b41:	sbb    ecx,DWORD PTR [esi-0x2fd8f632]
  417b47:	repz pop ds
  417b49:	out    dx,al
  417b4a:	jae    0x417ba0
  417b4c:	shr    esp,0xf2
  417b4f:	jl     0x417b00
  417b51:	iret   
  417b52:	sub    BYTE PTR [ebp-0x22],al
  417b55:	pop    ds
  417b56:	mov    bl,0xe7
  417b58:	(bad)  
  417b59:	mov    cl,0x50
  417b5b:	adc    al,0xcf
  417b5d:	fmul   QWORD PTR [edi+ebp*8+0x7746e647]
  417b64:	xchg   ecx,eax
  417b65:	arpl   ax,di
  417b67:	dec    esi
  417b68:	jg     0x417af7
  417b6a:	xor    eax,0x3069ba37
  417b6f:	outs   dx,DWORD PTR ds:[esi]
  417b70:	mov    eax,DWORD PTR ds:0xaedc5f88
  417b76:	fmul   DWORD PTR [eax+0x606e303e]
  417b7c:	add    ecx,ebx
  417b7e:	push   ecx
  417b7f:	jge    0x417be0
  417b81:	in     al,dx
  417b82:	(bad)  
  417b83:	mov    ds:0x78171d9c,al
  417b88:	add    DWORD PTR [ecx+esi*1+0x6827bbbd],ebx
  417b8f:	push   ecx
  417b90:	jl     0x417b60
  417b92:	loope  0x417bba
  417b94:	sub    al,0xc4
  417b96:	adc    eax,0x38cbadca
  417b9b:	clc    
  417b9c:	xchg   esi,eax
  417b9d:	jp     0x417b98
  417b9f:	test   DWORD PTR [ebx-0x4f],edx
  417ba2:	pop    eax
  417ba3:	ror    DWORD PTR [ebp-0x5a],0xbe
  417ba7:	das    
  417ba8:	fmul   st(1),st
  417baa:	mov    eax,0xc9db2a1e
  417baf:	jbe    0x417b87
  417bb1:	mov    ch,0x70
  417bb3:	nop
  417bb4:	(bad)  
  417bb5:	ja     0x417c1f
  417bb7:	je     0x417b64
  417bb9:	(bad)  
  417bba:	scas   al,BYTE PTR es:[edi]
  417bbb:	jp     0x417b9d
  417bbd:	into   
  417bbe:	pop    ecx
  417bbf:	and    al,0xe9
  417bc1:	(bad)  [esi-0x60]
  417bc4:	adc    al,bh
  417bc6:	mov    bh,0x89
  417bc8:	and    dl,BYTE PTR [edi-0x4b]
  417bcb:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417bcd:	push   ss
  417bce:	inc    edx
  417bcf:	or     BYTE PTR [ebx+ebp*8+0x6f],bh
  417bd3:	xchg   ebx,esp
  417bd5:	into   
  417bd6:	xor    DWORD PTR [ebx-0x41ab9db0],esi
  417bdc:	mov    ebp,0x4fc2a447
  417be1:	aam    0x55
  417be3:	hlt    
  417be4:	sbb    BYTE PTR [ebx-0x154da01f],bh
  417bea:	fcmove st,st(3)
  417bec:	xchg   edx,eax
  417bed:	in     al,dx
  417bee:	push   cs
  417bef:	sub    ch,BYTE PTR [esi]
  417bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf2:	lahf   
  417bf3:	inc    eax
  417bf4:	pop    es
  417bf5:	pushf  
  417bf6:	es sahf 
  417bf8:	int    0xf4
  417bfa:	add    BYTE PTR gs:[esi+0x9cb7911],al
  417c01:	(bad)  
  417c03:	and    eax,0x1dff39f
  417c08:	rol    ebp,0x69
  417c0b:	or     eax,0x98eb2391
  417c10:	or     al,0x4d
  417c12:	xchg   esp,eax
  417c13:	(bad)  
  417c14:	loopne 0x417bab
  417c16:	fcmove st,st(5)
  417c18:	loop   0x417c01
  417c1a:	xchg   edx,eax
  417c1b:	retf   
  417c1c:	test   DWORD PTR fs:[edx+ebx*1-0x45cf5f0f],esp
  417c24:	xor    ch,BYTE PTR [eax]
  417c26:	cmp    esi,DWORD PTR ds:[ecx]
  417c29:	inc    eax
  417c2a:	test   BYTE PTR [edx],cl
  417c2c:	and    cl,dl
  417c2e:	xchg   esi,eax
  417c2f:	jae    0x417c4e
  417c31:	push   ebp
  417c32:	(bad)  
  417c33:	ja     0x417c0e
  417c35:	or     eax,0xbd2d0ad3
  417c3a:	(bad)  
  417c3b:	shr    BYTE PTR [esi+0x11daee5c],1
  417c41:	sub    DWORD PTR [ebx-0x6d],0xbcf22dd8
  417c48:	loopne 0x417bce
  417c4a:	in     al,dx
  417c4b:	jno    0x417c08
  417c4d:	mov    edi,DWORD PTR ds:0x2a0393a5
  417c53:	imul   ebp,DWORD PTR es:[esi-0x7818ae57],0xac89e98a
  417c5e:	retf   
  417c5f:	lahf   
  417c60:	jnp    0x417c4b
  417c62:	pop    ebx
  417c63:	jo     0x417cca
  417c65:	repz shl DWORD PTR [edx],0x5
  417c69:	pop    ss
  417c6a:	mov    eax,ds:0xc2582288
  417c6f:	pop    edi
  417c70:	test   BYTE PTR [ecx+eiz*4-0x5d],0x54
  417c75:	or     al,0x7e
  417c77:	shl    DWORD PTR [ebx],cl
  417c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c7a:	mov    edx,0x36eacda9
  417c7f:	add    esi,edx
  417c81:	cmp    ah,BYTE PTR [edx]
  417c83:	pop    ebp
  417c84:	dec    ebx
  417c85:	out    0x32,al
  417c87:	jge    0x417c8b
  417c89:	xchg   edx,eax
  417c8a:	jmp    0x417c3b
  417c8c:	(bad)  
  417c8d:	aam    0x78
  417c8f:	xchg   esp,eax
  417c90:	leave  
  417c91:	fisubr WORD PTR [esi-0x50]
  417c94:	mov    eax,DWORD PTR [esi+0x2fa9e82d]
  417c9a:	pusha  
  417c9b:	jg     0x417c87
  417c9d:	cdq    
  417c9e:	ret    
  417c9f:	loopne 0x417cc4
  417ca1:	test   eax,0xeb08a4b1
  417ca6:	mov    WORD PTR [edx+0x7630b4d3],ds
  417cac:	adc    eax,0xb86d1fa7
  417cb1:	in     eax,0x5f
  417cb3:	not    BYTE PTR [ecx]
  417cb5:	leave  
  417cb6:	mov    ecx,0x4deb25f4
  417cbb:	js     0x417c7c
  417cbd:	fst    QWORD PTR ds:0xc00880d5
  417cc3:	imul   ebx,ecx,0xffffffc8
  417cc6:	loope  0x417c97
  417cc8:	repnz add al,0x68
  417ccb:	je     0x417cec
  417ccd:	in     eax,0xae
  417ccf:	ret    
  417cd0:	dec    ecx
  417cd1:	push   edi
  417cd2:	dec    ebp
  417cd3:	push   ebp
  417cd4:	sub    DWORD PTR [ecx+esi*2-0x45c95d7f],edx
  417cdb:	mov    ds:0x5f9ae2ab,eax
  417ce0:	aas    
  417ce1:	mov    ah,0xa
  417ce3:	pop    esi
  417ce4:	sti    
  417ce5:	adc    dh,dl
  417ce7:	rcr    DWORD PTR [edx],cl
  417ce9:	mov    esp,0x6576778
  417cee:	ret    0x4224
  417cf1:	fst    DWORD PTR [ebx-0xb]
  417cf4:	mov    eax,ds:0x53795b8a
  417cf9:	ja     0x417c7f
  417cfb:	nop
  417cfc:	loop   0x417d6f
  417cfe:	jmp    0x417d44
  417d00:	and    al,bl
  417d02:	sbb    eax,0x2cf82d29
  417d07:	shl    dl,0x79
  417d0a:	jae    0x417d56
  417d0c:	xchg   ecx,eax
  417d0d:	test   DWORD PTR [ecx],0xe2ede7e1
  417d13:	adc    edx,esi
  417d15:	std    
  417d16:	fwait
  417d17:	call   0x97385d3f
  417d1c:	das    
  417d1d:	out    0x8d,al
  417d1f:	adc    BYTE PTR [ebp+0x10],dh
  417d22:	cmp    bh,al
  417d24:	fwait
  417d25:	stc    
  417d26:	(bad)  
  417d27:	jle    0x417d80
  417d29:	sbb    DWORD PTR [ecx],ecx
  417d2b:	int3   
  417d2c:	ja     0x417d99
  417d2e:	add    ch,BYTE PTR [ebp+ebp*4-0x50202967]
  417d35:	mov    eax,0xc9e67131
  417d3a:	push   eax
  417d3b:	mov    al,ds:0xbeff7585
  417d40:	(bad)  
  417d41:	mul    DWORD PTR [ecx]
  417d43:	mov    dl,BYTE PTR [ecx+eiz*4-0x5089bddc]
  417d4a:	cmp    al,BYTE PTR [ebx+0x511d138d]
  417d50:	inc    edi
  417d51:	pop    esp
  417d52:	mov    ch,0x42
  417d54:	stos   DWORD PTR es:[edi],eax
  417d55:	mov    edi,0x9f9439e8
  417d5a:	fidivr WORD PTR [edx-0x3a]
  417d5d:	cli    
  417d5e:	pop    ds
  417d5f:	xchg   BYTE PTR [ebx-0x3d2b4160],dh
  417d65:	enter  0xfe62,0x85
  417d69:	sbb    ebx,ebx
  417d6b:	(bad)  
  417d6c:	lock pop es
  417d6e:	push   ds
  417d6f:	imul   ecx,ecx,0x69b07dc
  417d75:	inc    edi
  417d76:	sar    BYTE PTR [esi-0x10],1
  417d79:	sbb    ah,bh
  417d7b:	(bad)  
  417d7d:	fcmove st,st(7)
  417d7f:	adc    al,0x43
  417d81:	int    0xe2
  417d83:	push   esp
  417d84:	pop    ebx
  417d85:	xchg   esi,eax
  417d86:	push   eax
  417d87:	sub    DWORD PTR ds:0x1c239707,edx
  417d8d:	xor    al,0xfa
  417d8f:	pop    ebp
  417d90:	aad    0xe9
  417d92:	mov    ebx,DWORD PTR [ebx-0x2bc53f5b]
  417d98:	and    BYTE PTR [edx+eiz*2-0x68],ch
  417d9c:	xchg   DWORD PTR [edi-0x24],esp
  417d9f:	fst    DWORD PTR [edi-0x5]
  417da2:	sbb    eax,0x8008c672
  417da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da8:	cmp    eax,0x5ed34e3d
  417dad:	lods   al,BYTE PTR ds:[esi]
  417dae:	ins    BYTE PTR es:[edi],dx
  417daf:	jno    0x417d8b
  417db1:	mov    al,al
  417db3:	test   BYTE PTR [edx+0x2a],0x39
  417db7:	aam    0xa1
  417db9:	sub    cl,BYTE PTR [esi-0x4c]
  417dbc:	dec    edi
  417dbd:	scas   eax,DWORD PTR es:[edi]
  417dbe:	add    DWORD PTR [ebx+0x6f],ecx
  417dc1:	imul   ebp,DWORD PTR [esi+eiz*2],0x1090ed5f
  417dc8:	dec    DWORD PTR [edi]
  417dca:	pop    es
  417dcb:	and    eax,0xd44a7bf7
  417dd0:	mov    edi,0x50110e6
  417dd5:	xchg   BYTE PTR [esi+0x14],bh
  417dd8:	mov    dl,0x6
  417dda:	and    DWORD PTR [eax-0x7b],ebp
  417ddd:	(bad)  [ecx-0xd]
  417de0:	mov    dh,0xc1
  417de2:	lea    eax,[esi-0x60]
  417de5:	xor    bl,BYTE PTR [edx+0x23]
  417de8:	aad    0x97
  417dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417deb:	in     al,dx
  417dec:	dec    esi
  417ded:	jne    0x417e3b
  417def:	adc    eax,DWORD PTR [ecx-0x4b]
  417df2:	push   ebx
  417df3:	cdq    
  417df4:	aas    
  417df5:	or     BYTE PTR [ebx+0x8d2fb14],al
  417dfb:	jmp    0x417e66
  417dfd:	std    
  417dfe:	cld    
  417dff:	cmp    al,0xc8
  417e01:	or     DWORD PTR [edi],edi
  417e03:	cmp    DWORD PTR [ebp+eiz*8+0x78],0x2100fa3c
  417e0b:	push   edi
  417e0c:	xor    DWORD PTR [ebp-0x4d75a1e9],ebp
  417e12:	sbb    al,0xef
  417e14:	stos   BYTE PTR es:[edi],al
  417e15:	xchg   edi,eax
  417e16:	cdq    
  417e17:	mov    ebx,0xdc7f0b48
  417e1c:	jb     0x417e65
  417e1e:	jb     0x417e57
  417e20:	aam    0x48
  417e22:	out    dx,eax
  417e23:	ds adc bl,dh
  417e26:	(bad)  
  417e27:	outs   dx,DWORD PTR ds:[esi]
  417e28:	pop    es
  417e29:	add    eax,0xffc48d2b
  417e2e:	outs   dx,BYTE PTR ds:[esi]
  417e2f:	icebp  
  417e30:	out    dx,al
  417e31:	pop    ds
  417e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e33:	push   ss
  417e34:	gs mov DWORD PTR cs:[esi+0x7f],eax
  417e39:	fild   DWORD PTR [edx-0x580cc0df]
  417e3f:	pop    ebp
  417e40:	xor    eax,0xc08dd9d5
  417e45:	pushf  
  417e46:	adc    ecx,DWORD PTR [esp+ecx*2]
  417e49:	shl    DWORD PTR [edi+esi*8],cl
  417e4c:	lods   al,BYTE PTR ds:[esi]
  417e4d:	jns    0x417dd0
  417e4f:	outs   dx,BYTE PTR ds:[esi]
  417e50:	cmp    DWORD PTR [edi+0x2416ea6f],eax
  417e56:	or     eax,0x5e317c29
  417e5b:	sbb    al,0xc1
  417e5d:	pop    ebp
  417e5e:	jmp    0x417ec9
  417e60:	xor    BYTE PTR ds:0x30f041cb,bl
  417e66:	fnstsw WORD PTR [esi]
  417e68:	icebp  
  417e69:	pop    ecx
  417e6a:	jb     0x417dfa
  417e6c:	repz cwde 
  417e6e:	mov    al,0x1
  417e70:	mov    esp,0x8309ab7d
  417e75:	dec    eax
  417e76:	inc    ecx
  417e77:	scas   eax,DWORD PTR es:[edi]
  417e78:	(bad)  
  417e79:	test   eax,0x405ebcdf
  417e7e:	ficomp WORD PTR ds:0x3bb07986
  417e84:	inc    ebp
  417e85:	call   0x4773:0xbd306b65
  417e8c:	je     0x417e1d
  417e8e:	pop    eax
  417e8f:	loopne 0x417e45
  417e91:	int3   
  417e92:	out    0xf8,al
  417e94:	inc    ecx
  417e95:	push   0x72
  417e97:	jmp    0x417e44
  417e99:	mov    bl,0x36
  417e9b:	jns    0x417e34
  417e9d:	and    DWORD PTR [edx],edi
  417e9f:	xchg   ebx,eax
  417ea0:	dec    esp
  417ea1:	mov    edx,DWORD PTR [edx+0x35689b19]
  417ea7:	cmp    eax,0xb55be1a8
  417eac:	sub    eax,0xa9b02a5f
  417eb1:	mov    dh,0x13
  417eb3:	(bad)
  417eb6:	pop    ecx
  417eb7:	mov    ecx,0x1d64d2b3
  417ebc:	(bad)  
  417ebd:	xchg   DWORD PTR [ecx],eax
  417ebf:	mov    cl,BYTE PTR [ebx-0x78008509]
  417ec5:	inc    edx
  417ec6:	std    
  417ec7:	nop
  417ec8:	push   ebx
  417ec9:	inc    esi
  417eca:	xor    edx,DWORD PTR [ecx]
  417ecc:	je     0x417edd
  417ece:	xchg   BYTE PTR [ebx+0x4b],al
  417ed1:	ins    DWORD PTR es:[edi],dx
  417ed2:	cmp    DWORD PTR [edi-0x4d],0x30
  417ed6:	cmp    al,0x42
  417ed8:	sub    dl,BYTE PTR ds:0xb9f9d96c
  417ede:	js     0x417e7e
  417ee0:	jge    0x417ef1
  417ee2:	cmp    DWORD PTR ds:0x6d7b371c,ebx
  417ee8:	fimul  WORD PTR ds:0xf509b831
  417eee:	pop    ebp
  417eef:	mov    ds,ecx
  417ef1:	dec    edi
  417ef2:	inc    esi
  417ef3:	cmp    al,0x65
  417ef5:	adc    BYTE PTR [ebp-0x14aac1f],0x52
  417efc:	daa    
  417efd:	in     eax,dx
  417efe:	mov    edi,0x3cea1c16
  417f03:	jno    0x417f67
  417f05:	cdq    
  417f06:	dec    eax
  417f07:	add    cl,BYTE PTR [eax+0x53]
  417f0a:	pop    ds
  417f0b:	and    BYTE PTR [ebx],ah
  417f0d:	nop
  417f0e:	or     BYTE PTR [edi-0xb374276],bh
  417f14:	cdq    
  417f15:	out    dx,eax
  417f16:	mov    esp,0x4666bb27
  417f1b:	pop    edi
  417f1c:	pop    ss
  417f1d:	inc    eax
  417f1e:	jbe    0x417f2a
  417f20:	xchg   edi,eax
  417f21:	ds push cs
  417f23:	cli    
  417f24:	xor    bh,cl
  417f26:	push   0x19
  417f28:	pop    ecx
  417f29:	repz push eax
  417f2b:	test   al,0x15
  417f2d:	or     cl,BYTE PTR [esi-0x24]
  417f30:	mov    cl,0xfd
  417f32:	arpl   si,sp
  417f34:	test   dl,al
  417f36:	lock mov al,0x35
  417f39:	retf   0x7841
  417f3c:	jo     0x417f34
  417f3e:	pop    ebx
  417f3f:	dec    ecx
  417f40:	xchg   DWORD PTR [esi],ebx
  417f42:	cmp    BYTE PTR [esi-0x4e0cf5fe],dh
  417f48:	add    ah,BYTE PTR [esi+0x2abcc721]
  417f4e:	xor    BYTE PTR [edx-0x48],bh
  417f51:	cmp    al,0xc8
  417f54:	push   edi
  417f55:	enter  0x8d89,0x61
  417f59:	es mov edx,0xd342bbfc
  417f5f:	imul   esi,ebx,0x1f083127
  417f65:	mov    ebp,0xb4d7aff5
  417f6a:	retf   
  417f6b:	int    0x90
  417f6d:	(bad)  [eax]
  417f6f:	inc    esi
  417f70:	xor    eax,0x2efdb8c4
  417f75:	repnz lods al,BYTE PTR ds:[esi]
  417f77:	loope  0x417fc3
  417f79:	mov    bl,0x90
  417f7b:	dec    DWORD PTR [esi]
  417f7d:	mov    edi,0xadb18ff6
  417f82:	add    al,0x4d
  417f84:	out    0x4e,al
  417f86:	mov    bl,0x3a
  417f88:	xor    BYTE PTR [ebx],cl
  417f8a:	dec    ecx
  417f8b:	or     BYTE PTR [eax],dh
  417f8d:	cmp    eax,0x849e0420
  417f92:	push   ebp
  417f93:	pop    eax
  417f94:	sub    BYTE PTR [edx+0x6e],dh
  417f97:	cmp    eax,0xeb9bb5a5
  417f9c:	imul   edi,DWORD PTR [edi],0x6
  417f9f:	mov    edi,0xfa59745f
  417fa4:	adc    edi,esp
  417fa6:	xor    eax,0xafd47770
  417fab:	mov    bh,0x9b
  417fad:	sbb    DWORD PTR [edi+0x3e],0x96f07f0f
  417fb4:	lods   al,BYTE PTR ds:[esi]
  417fb5:	mov    ch,0x6b
  417fb7:	mov    edx,0xe1ede2b
  417fbc:	xor    DWORD PTR [ebx+eax*2-0x42],0xe
  417fc1:	cmp    al,0x25
  417fc3:	popa   
  417fc4:	(bad)  
  417fc5:	into   
  417fc6:	xor    ch,BYTE PTR [edi+0x2c]
  417fc9:	sahf   
  417fca:	cmp    cl,BYTE PTR [esi+0x1d]
  417fcd:	cmp    eax,0xa0e33741
  417fd2:	mov    cl,0x43
  417fd4:	xor    DWORD PTR [eax],eax
  417fd6:	pop    eax
  417fd7:	xchg   ebx,eax
  417fd8:	pusha  
  417fd9:	xchg   edx,eax
  417fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fdb:	nop
  417fdc:	pop    esi
  417fdd:	loopne 0x417fdf
  417fdf:	pop    edi
  417fe0:	dec    edx
  417fe1:	int    0x9a
  417fe3:	or     eax,ecx
  417fe5:	div    DWORD PTR [edx+0x47]
  417fe8:	addr16 jbe 0x41803b
  417feb:	stos   BYTE PTR es:[edi],al
  417fec:	xchg   ebp,eax
  417fed:	adc    cl,bl
  417fef:	jns    0x417f80
  417ff1:	sbb    BYTE PTR [esp+esi*4+0xb],dh
  417ff5:	push   ebp
  417ff6:	inc    sp
  417ff8:	mov    ch,BYTE PTR [esi+0x1e]
  417ffb:	inc    esp
  417ffc:	jp     0x417fac
  417ffe:	pop    edi
  417fff:	push   edi
  418000:	js     0x418066
  418002:	ret    0xcff2
  418005:	les    ecx,FWORD PTR [edx+esi*8]
  418008:	or     al,0xe2
  41800a:	pusha  
  41800b:	clc    
  41800c:	mov    esi,0xa463509b
  418011:	das    
  418012:	push   edi
  418013:	xor    bl,dh
  418015:	dec    ebp
  418016:	xchg   ebx,eax
  418017:	add    DWORD PTR [ecx+0x30],edi
  41801a:	jmp    0x97c7a7f9
  41801f:	inc    edx
  418020:	mov    esp,DWORD PTR [edi+0x36]
  418023:	enter  0x73a6,0x84
  418027:	xchg   esi,eax
  418028:	inc    edi
  418029:	std    
  41802a:	cld    
  41802b:	das    
  41802c:	pop    esi
  41802d:	mov    al,0x6c
  41802f:	aas    
  418030:	xor    eax,0x30f9f38
  418035:	mov    ebx,0x76c6c633
  41803a:	jle    0x418067
  41803c:	jle    0x418060
  41803e:	mov    esp,ebp
  418040:	ret    0xc135
  418043:	out    0x83,al
  418045:	outs   dx,BYTE PTR ds:[esi]
  418046:	sbb    al,0x5f
  418048:	xor    DWORD PTR [ecx+eax*8+0x44],edi
  41804c:	jae    0x418028
  41804e:	(bad)  
  418050:	test   al,0xc9
  418052:	jg     0x41804b
  418054:	loop   0x418096
  418056:	into   
  418057:	adc    dl,dl
  418059:	push   0xe4e6c0f
  41805e:	mov    dh,0x8d
  418060:	xchg   DWORD PTR [edi+0x21052c0e],esi
  418066:	pop    ecx
  418067:	loop   0x41807f
  418069:	pop    esi
  41806a:	jge    0x418013
  41806c:	or     DWORD PTR [edx*2-0x5fc3690e],esp
  418073:	add    al,0x16
  418075:	icebp  
  418076:	cmp    ebx,DWORD PTR [edi]
  418078:	nop
  418079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41807a:	arpl   WORD PTR gs:[esi+0x6eff7767],dx
  418081:	jge    0x4180d7
  418083:	xchg   edi,eax
  418084:	jp     0x4180b9
  418086:	fidivr WORD PTR [ebx+0x37]
  418089:	dec    edi
  41808a:	push   ebp
  41808b:	push   0x830a9beb
  418090:	or     BYTE PTR [edx+edi*4],bh
  418093:	aam    0x64
  418095:	jnp    0x4180dc
  418097:	sub    BYTE PTR [edx],cl
  418099:	in     al,dx
  41809a:	dec    edx
  41809b:	xchg   edi,eax
  41809c:	sbb    al,0x8c
  41809e:	icebp  
  41809f:	pop    edi
  4180a0:	xor    al,0xff
  4180a2:	dec    ecx
  4180a3:	into   
  4180a4:	div    BYTE PTR ds:0x4ab3b86c
  4180aa:	sbb    edx,edx
  4180ac:	data16 outs dx,BYTE PTR ds:[esi]
  4180ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180af:	outs   dx,DWORD PTR ds:[esi]
  4180b0:	sub    DWORD PTR [esp+eax*4+0x49],esp
  4180b4:	arpl   WORD PTR [ebx],ax
  4180b6:	retf   0x8a6e
  4180b9:	ds fwait
  4180bb:	daa    
  4180bc:	xor    ah,BYTE PTR [ecx]
  4180be:	sbb    BYTE PTR [edx],bl
  4180c0:	pop    ss
  4180c1:	scas   eax,DWORD PTR es:[edi]
  4180c2:	scas   al,BYTE PTR es:[edi]
  4180c3:	enter  0x94,0x76
  4180c7:	ja     0x41804b
  4180c9:	add    ch,bl
  4180cb:	mov    edi,0xe902487e
  4180d0:	pop    esp
  4180d1:	shr    BYTE PTR [edx],cl
  4180d3:	push   edi
  4180d4:	leave  
  4180d5:	dec    esp
  4180d6:	arpl   WORD PTR [edi+0x72],ax
  4180d9:	jmp    0x87b8df68
  4180de:	dec    edx
  4180df:	cmp    dl,bl
  4180e1:	std    
  4180e2:	(bad)  
  4180e3:	mov    ebx,esi
  4180e5:	sub    bl,BYTE PTR [edx]
  4180e7:	das    
  4180e8:	dec    esp
  4180e9:	mov    ebx,0x14b11f52
  4180ee:	sub    ebx,DWORD PTR ds:0xa96f7c61
  4180f4:	push   0x640ea996
  4180f9:	repnz arpl WORD PTR [ebp+0x66c4ab87],bx
  418100:	pop    esp
  418101:	push   es
  418102:	and    DWORD PTR [ebp+0x722000c7],edi
  418108:	out    dx,eax
  418109:	aas    
  41810a:	imul   ebx,ebp,0x2f
  41810d:	xor    al,0xb
  41810f:	sti    
  418110:	pusha  
  418111:	dec    esi
  418112:	cld    
  418113:	in     eax,0xb2
  418115:	push   edx
  418116:	inc    eax
  418117:	cmp    BYTE PTR [edx],dh
  418119:	push   edx
  41811a:	nop
  41811b:	sub    eax,0x3c0788e6
  418120:	or     BYTE PTR [eax],0x15
  418123:	mov    edi,0x77ed4a61
  418128:	mov    bl,0x0
  41812a:	dec    ebx
  41812b:	add    edx,esi
  41812d:	mov    edi,ebx
  41812f:	out    dx,eax
  418130:	in     eax,0x2
  418132:	or     bh,bh
  418134:	push   ebp
  418135:	mov    edx,0xb7eda275
  41813a:	in     al,0x60
  41813c:	mov    al,0x61
  41813e:	cmp    eax,ecx
  418140:	das    
  418141:	pop    es
  418142:	(bad)  
  418143:	aaa    
  418144:	push   ebx
  418145:	jno    0x878b9fe6
  41814b:	in     eax,0x7a
  41814d:	xchg   esi,eax
  41814e:	cmp    eax,0x479a7357
  418153:	stos   BYTE PTR es:[edi],al
  418154:	mov    edx,ecx
  418156:	xchg   ebx,eax
  418157:	jmp    0x41811d
  418159:	shr    BYTE PTR [esi-0x4edb1b45],1
  41815f:	or     eax,0xa4bb392b
  418164:	(bad)  
  418165:	mov    ?,WORD PTR [edi-0x4497180e]
  41816b:	mov    dl,BYTE PTR [eax+0x70]
  41816e:	cld    
  41816f:	jbe    0x4181d3
  418171:	loope  0x41810b
  418173:	test   bh,bl
  418175:	lahf   
  418176:	and    eax,0xc570eae8
  41817b:	push   cs
  41817c:	and    eax,DWORD PTR [edx+0x310df993]
  418182:	xchg   edi,eax
  418183:	je     0x418155
  418185:	ins    BYTE PTR es:[edi],dx
  418186:	cld    
  418187:	aam    0xfc
  418189:	test   DWORD PTR [esi+0x66],ebx
  41818c:	jae    0x4181a1
  41818e:	sbb    DWORD PTR [ecx+ebx*1-0x47],0xf9426137
  418196:	mov    al,ds:0xca993675
  41819b:	inc    esp
  41819c:	shr    DWORD PTR [esi-0x32],1
  41819f:	out    0xc0,eax
  4181a1:	and    ah,BYTE PTR [eax+0x3d119f2f]
  4181a7:	test   DWORD PTR [ebp+0x6f1fa3fa],0x839adcff
  4181b1:	fldenv [edi+edi*8]
  4181b4:	mov    dl,0x99
  4181b6:	call   0xa142:0x2f74527
  4181bd:	adc    bh,BYTE PTR [ebx+0x52]
  4181c0:	leave  
  4181c1:	and    eax,0x7306e6a9
  4181c6:	adc    DWORD PTR ds:0xfced42df,ebx
  4181cc:	add    eax,0x36128328
  4181d1:	jmp    0xb0428091
  4181d6:	dec    ebx
  4181d7:	in     eax,dx
  4181d8:	add    bl,dh
  4181da:	sub    BYTE PTR ds:0xcfe90df0,0x5d
  4181e1:	leave  
  4181e2:	dec    esp
  4181e3:	dec    ecx
  4181e4:	push   ebx
  4181e5:	xchg   ecx,eax
  4181e6:	mov    bl,BYTE PTR [ecx+0x67b9d482]
  4181ec:	fist   WORD PTR [ecx+0x6e]
  4181ef:	mov    al,ds:0xd04de8a
  4181f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181f5:	push   es
  4181f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f7:	jg     0x418275
  4181f9:	pusha  
  4181fa:	xor    ebp,DWORD PTR [ecx]
  4181fc:	mov    eax,ds:0x5febb900
  418201:	xor    eax,0xd77e718e
  418206:	shl    DWORD PTR [ebp-0x60],cl
  418209:	pusha  
  41820a:	shl    DWORD PTR [edi+ebp*2],cl
  41820d:	in     al,dx
  41820e:	mov    ah,0xe3
  418210:	les    esp,FWORD PTR [eax+esi*2-0x31]
  418214:	jle    0x4181cf
  418216:	ds in  al,dx
  418218:	add    DWORD PTR [ebp+0x63aea55a],0xfffffff5
  41821f:	sti    
  418220:	pop    ecx
  418221:	out    0x82,eax
  418223:	cld    
  418224:	popa   
  418225:	std    
  418226:	sub    al,BYTE PTR [ecx]
  418228:	mov    edx,0xa02f93b9
  41822d:	shl    DWORD PTR [eax+0x5ea4eb3e],0xd1
  418234:	and    BYTE PTR [edi+0x34bad276],dl
  41823a:	sub    bl,0x61
  41823d:	cli    
  41823e:	inc    ebx
  41823f:	sti    
  418240:	mov    dh,0x6
  418242:	or     cl,bl
  418244:	mov    BYTE PTR [edx+eax*1-0x2c0abdac],dh
  41824b:	dec    esi
  41824c:	adc    dh,0x3c
  41824f:	mov    ds:0xda541ca4,eax
  418254:	xor    DWORD PTR [edi-0x1d036d75],0x3b
  41825b:	gs es pop esp
  41825e:	pusha  
  41825f:	mov    eax,ds:0x65a83454
  418264:	(bad)  
  418265:	mov    ds:0xa43d1abf,al
  41826a:	sbb    esi,eax
  41826c:	adc    eax,0xab2c75a6
  418271:	out    0x97,al
  418273:	(bad)  
  418274:	ja     0x4182ef
  418276:	mov    bh,0x91
  418278:	cmp    edx,DWORD PTR [ecx-0x42]
  41827b:	jbe    0x418231
  41827d:	fdiv   QWORD PTR [eax-0x7b54075f]
  418283:	out    0x96,al
  418285:	adc    al,0x99
  418287:	arpl   WORD PTR [edi-0x48b7d7b1],cx
  41828d:	add    edi,ebx
  41828f:	aas    
  418290:	push   eax
  418291:	dec    edx
  418292:	jne    0x418234
  418294:	out    dx,eax
  418295:	inc    ebp
  418296:	jg     0x418242
  418298:	add    al,0x75
  41829a:	lahf   
  41829b:	(bad)  
  41829c:	not    edx
  41829e:	add    DWORD PTR [esp+ebp*1-0x1d93159e],0xf2c511f9
  4182a9:	in     al,0xc5
  4182ab:	cmc    
  4182ac:	xor    al,0x3b
  4182ae:	adc    dh,BYTE PTR [ebx]
  4182b0:	js     0x418303
  4182b2:	mov    ecx,0x448bea0d
  4182b7:	adc    edi,0xd53c7533
  4182bd:	adc    eax,0x36d999e3
  4182c2:	ret    0x5f48
  4182c5:	or     eax,0x9179e75f
  4182ca:	test   eax,0x49535813
  4182cf:	xor    eax,0x8d4d9e31
  4182d4:	push   cs
  4182d5:	std    
  4182d6:	mov    esi,0x54e63dc5
  4182db:	inc    eax
  4182dc:	jl     0x41828c
  4182de:	cmp    DWORD PTR [edx+0x3d40f73a],0x1a
  4182e5:	fisubr WORD PTR [edx+0xe]
  4182e8:	xor    al,0xff
  4182ea:	push   0x7b2c6ca6
  4182ef:	xor    ecx,DWORD PTR [edi]
  4182f1:	add    edi,eax
  4182f3:	xor    al,0xdb
  4182f5:	and    ecx,DWORD PTR [edi-0x3a05e7f5]
  4182fb:	mov    bh,0xbc
  4182fd:	dec    esi
  4182fe:	sbb    al,0x7e
  418300:	xchg   edx,eax
  418301:	fsubr  DWORD PTR [esp+eiz*8+0xc4f50cc]
  418308:	dec    esp
  418309:	xchg   DWORD PTR [ecx+0x31],ebp
  41830c:	repz cwde 
  41830e:	add    al,0xb6
  418310:	add    cl,cl
  418312:	add    al,0x79
  418314:	repz std 
  418316:	mov    edx,0xcf353c55
  41831b:	movs   WORD PTR es:[edi],WORD PTR es:[esi]
  41831e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831f:	xchg   ebp,eax
  418320:	(bad)  
  418321:	cmc    
  418322:	jns    0x418313
  418324:	lods   al,BYTE PTR ds:[esi]
  418325:	xchg   ecx,eax
  418326:	sbb    eax,0xfb9ba5cd
  41832b:	or     BYTE PTR [edx+0x3],0x4
  41832f:	mov    bh,BYTE PTR [edx]
  418331:	jbe    0x41839f
  418333:	mul    DWORD PTR [ebx-0x12f7c8ab]
  418339:	je     0x41832b
  41833b:	xor    BYTE PTR [eax+0xc],ch
  41833e:	push   0xd78d8ed5
  418343:	lock and ah,BYTE PTR [ebx+0x7c]
  418347:	sub    eax,0xf346d705
  41834c:	test   BYTE PTR [esi+edx*4],0x5a
  418350:	inc    esi
  418351:	xor    eax,DWORD PTR [edi+0x167d031e]
  418357:	cwde   
  418358:	retf   
  418359:	lea    esi,[ebp+0x49]
  41835c:	imul   ebx,DWORD PTR [edx],0xdb436227
  418362:	xchg   ecx,eax
  418363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418364:	pop    ebp
  418365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418366:	or     al,0x8d
  418368:	in     eax,dx
  418369:	ins    BYTE PTR es:[edi],dx
  41836a:	sub    bl,BYTE PTR ds:0xe4e72c35
  418370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418371:	xchg   esp,eax
  418372:	repz push edi
  418374:	jns    0x4182fa
  418376:	pop    esp
  418377:	xchg   edi,eax
  418378:	push   ebx
  418379:	add    al,0x9f
  41837b:	add    ah,0x12
  41837e:	popa   
  41837f:	repnz in eax,dx
  418381:	nop
  418382:	int3   
  418383:	sub    eax,0xfe4cb17a
  418388:	xor    DWORD PTR [ebx],ecx
  41838a:	lock mov esp,0x19dcee89
  418390:	sbb    eax,0x50d8579d
  418395:	popf   
  418396:	dec    ecx
  418397:	cli    
  418398:	xchg   edx,eax
  418399:	scas   eax,DWORD PTR es:[di]
  41839b:	popf   
  41839c:	push   esp
  41839d:	lods   eax,DWORD PTR ds:[esi]
  41839e:	sbb    al,0x21
  4183a0:	jmp    0x418377
  4183a2:	mov    al,0xc
  4183a4:	cld    
  4183a5:	fld    DWORD PTR [esi]
  4183a7:	dec    edx
  4183a8:	fcomp  QWORD PTR [ecx-0x7f]
  4183ab:	mov    ss,ecx
  4183ad:	xor    BYTE PTR [edi+edi*8-0x744da9af],cl
  4183b4:	inc    edi
  4183b5:	cmp    ah,ah
  4183b7:	int    0x93
  4183b9:	icebp  
  4183ba:	mov    eax,0x8c9f43b1
  4183bf:	push   ecx
  4183c0:	shl    DWORD PTR [edx+0x29],0xd6
  4183c4:	je     0x4183b5
  4183c6:	jns    0x4183be
  4183c8:	lahf   
  4183c9:	bound  ecx,QWORD PTR [ebp+0x2194cb1a]
  4183cf:	xchg   edx,eax
  4183d0:	add    eax,0x1bf3aff3
  4183d5:	inc    ebx
  4183d6:	sbb    ecx,ebp
  4183d8:	jp     0x418376
  4183da:	bound  esi,QWORD PTR [ebx+0x25761351]
  4183e0:	pop    esi
  4183e1:	dec    ebx
  4183e2:	jnp    0x41839a
  4183e4:	popf   
  4183e5:	enter  0xa89a,0xe8
  4183e9:	cmp    al,0x69
  4183eb:	lea    esi,[ebx-0x213a4630]
  4183f1:	add    ecx,DWORD PTR [esi+0x5b3834ab]
  4183f7:	nop
  4183f8:	jecxz  0x4183d3
  4183fa:	in     eax,0x1f
  4183fc:	xor    al,0x9d
  4183fe:	int3   
  4183ff:	lods   al,BYTE PTR ds:[esi]
  418400:	aam    0x1e
  418402:	fmul   DWORD PTR ss:[ecx+0x7a]
  418406:	repz out 0x52,eax
  418409:	fnsave [ebx]
  41840b:	jns    0x418445
  41840d:	mov    DWORD PTR [edi-0x20],edx
  418410:	hlt    
  418411:	stc    
  418412:	out    0xb0,al
  418414:	mov    ds:0x6e602eb9,eax
  418419:	(bad)  
  41841a:	in     eax,dx
  41841b:	das    
  41841c:	arpl   WORD PTR [eax],bx
  41841e:	and    eax,0xd11074a1
  418423:	imul   sp,ax,0x9ef6
  418428:	out    dx,eax
  418429:	jg     0x41843a
  41842b:	das    
  41842c:	aaa    
  41842d:	cli    
  41842e:	mov    eax,0xc05e9de3
  418433:	data16 add al,0x65
  418436:	int    0xc1
  418438:	sbb    al,0xaa
  41843a:	imul   edi,ebp,0x27
  41843d:	in     eax,dx
  41843e:	arpl   ax,sp
  418440:	fsubr  DWORD PTR [edi+0x7bd42007]
  418446:	sbb    BYTE PTR [ebx-0x78],dh
  418449:	aam    0xdc
  41844b:	nop
  41844c:	mov    ah,0x95
  41844e:	les    esp,FWORD PTR [ebx]
  418450:	pop    ebx
  418451:	repz (bad) 
  418453:	push   cs
  418454:	adc    dl,BYTE PTR [ebx+0x1b]
  418457:	mov    ebx,0x4c681a4e
  41845c:	mov    DWORD PTR [ebp-0x2e010e61],esi
  418462:	in     al,0x56
  418464:	(bad)  [esi-0x3]
  418467:	mov    al,0x3b
  418469:	jb     0x4183fb
  41846b:	in     eax,0xfa
  41846d:	inc    ebp
  41846e:	out    0x8d,al
  418470:	pusha  
  418471:	push   esi
  418472:	test   eax,0x1cba3dee
  418477:	cmp    dh,BYTE PTR ds:[edi+0x4d1b86e1]
  41847e:	test   BYTE PTR [edx-0x304798fc],0x37
  418485:	and    cl,BYTE PTR [edi]
  418487:	dec    ecx
  418488:	and    bh,bh
  41848a:	mov    ds:0xf60e5574,al
  41848f:	lahf   
  418490:	imul   esp,DWORD PTR [edi-0x2cedad36],0x253f1644
  41849a:	mov    esp,0x3775f1fe
  41849f:	shl    DWORD PTR [edi-0x2],1
  4184a2:	clc    
  4184a3:	xor    edi,0xfffffff1
  4184a6:	sub    eax,0x32453524
  4184ab:	xchg   ecx,eax
  4184ac:	and    DWORD PTR [ebx+0x41],ebx
  4184af:	inc    edi
  4184b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b1:	aad    0x8e
  4184b3:	cdq    
  4184b4:	lahf   
  4184b5:	mov    ds:0x2fd32f3b,eax
  4184ba:	xor    BYTE PTR [ecx],0x67
  4184bd:	mov    ebp,0xaae8f63a
  4184c2:	push   eax
  4184c3:	mov    bh,0x88
  4184c5:	rdtsc  
  4184c7:	pop    edi
  4184c8:	ror    BYTE PTR [ecx],1
  4184ca:	push   eax
  4184cb:	test   DWORD PTR [ecx-0x3a07b551],edi
  4184d1:	gs jle 0x41854d
  4184d4:	and    esi,DWORD PTR [ecx]
  4184d6:	js     0x418555
  4184d8:	into   
  4184d9:	mov    dl,BYTE PTR [edx+0x59]
  4184dc:	mov    bl,cl
  4184de:	cwde   
  4184df:	cmp    eax,0x4ea55901
  4184e4:	mov    eax,ds:0xfbd098bd
  4184e9:	sbb    al,0x16
  4184eb:	imul   ebx,DWORD PTR [eax],0x35
  4184ee:	jne    0x4184a5
  4184f0:	pusha  
  4184f1:	in     eax,dx
  4184f2:	xchg   BYTE PTR [ebx],ch
  4184f4:	adc    BYTE PTR [edi+esi*2-0x2a071470],0x92
  4184fc:	jg     0x41856c
  4184fe:	push   ecx
  4184ff:	mov    ebx,0xbbb8cdab
  418504:	push   esp
  418505:	inc    edi
  418506:	cmovne ebp,DWORD PTR [ecx+0x3ce83756]
  41850d:	xor    dh,BYTE PTR [ecx+ebx*8]
  418510:	scas   al,BYTE PTR es:[edi]
  418511:	xor    DWORD PTR [edx+0x5f2f519d],0x76
  418518:	mov    al,ds:0xec325524
  41851d:	inc    ecx
  41851e:	xlat   BYTE PTR ds:[ebx]
  41851f:	lahf   
  418520:	fild   DWORD PTR [edi-0x26]
  418523:	adc    cl,BYTE PTR [eax]
  418525:	cmp    ch,BYTE PTR ds:0x36822d11
  41852b:	dec    edi
  41852c:	adc    DWORD PTR [ebx+0x44],ebx
  41852f:	dec    edx
  418530:	stos   DWORD PTR es:[edi],eax
  418531:	pushf  
  418532:	mov    esi,0x7771073
  418537:	stos   BYTE PTR es:[edi],al
  418538:	cli    
  418539:	imul   esi,ebp,0xbff0fa63
  41853f:	inc    edi
  418540:	(bad)  
  418542:	xchg   ebx,eax
  418543:	inc    edi
  418544:	cmc    
  418545:	jo     0x4185b1
  418547:	push   ebx
  418548:	mov    ss,WORD PTR [esp+ecx*1+0x4b1c9a18]
  41854f:	jmp    0x4185a9
  418551:	test   eax,0xf1db8c20
  418556:	retf   
  418557:	mov    ah,0xe7
  418559:	mov    bl,0xf2
  41855b:	rcl    dh,cl
  41855d:	dec    BYTE PTR [ebp+0x100c72b2]
  418563:	mov    ah,BYTE PTR [esi]
  418565:	cmp    BYTE PTR [eax+0x4c],0x7a
  418569:	sub    BYTE PTR [eax-0x5a4ec306],ah
  41856f:	push   edi
  418570:	adc    eax,0x938b2705
  418575:	jmp    0x4185bb
  418577:	mov    al,ds:0x19b314d4
  41857c:	dec    DWORD PTR [ecx+0x4a344d39]
  418582:	test   al,0xcd
  418584:	push   ebp
  418585:	mov    cl,0x89
  418587:	and    DWORD PTR [esi-0x36b5a98a],esi
  41858d:	fdivrp st(7),st
  41858f:	popa   
  418590:	sbb    edx,DWORD PTR [ebx-0x67]
  418593:	cli    
  418594:	lods   eax,DWORD PTR ds:[esi]
  418595:	inc    esp
  418596:	xor    al,0x16
  418598:	into   
  418599:	test   eax,0x23de0a64
  41859e:	dec    edi
  41859f:	ss ret 
  4185a1:	in     al,dx
  4185a2:	ret    0xa7b9
  4185a5:	sar    ecx,cl
  4185a7:	in     eax,0x45
  4185a9:	cmp    al,0xc2
  4185ab:	inc    ebp
  4185ac:	push   es
  4185ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185ae:	sub    BYTE PTR [eax],al
  4185b0:	mov    eax,0xa3d23755
  4185b5:	xchg   ebx,eax
  4185b6:	cmp    BYTE PTR [edx-0x5a],bl
  4185b9:	add    dh,bh
  4185bb:	das    
  4185bc:	shld   DWORD PTR [edi-0x53d8ab7a],edx,cl
  4185c3:	lock sbb bl,BYTE PTR [edi-0x8a178f0]
  4185ca:	mov    cs,WORD PTR [edi+0x20]
  4185cd:	ds loop 0x418566
  4185d0:	ins    DWORD PTR es:[edi],dx
  4185d1:	mov    ecx,0xcf184c43
  4185d6:	shr    DWORD PTR [edi+0x12],1
  4185d9:	add    eax,ebp
  4185db:	or     ch,dh
  4185dd:	add    eax,0x381dbfec
  4185e2:	int    0xc9
  4185e4:	out    dx,eax
  4185e5:	arpl   WORD PTR [ebp+0x7819f4c0],ax
  4185eb:	call   0x34fa:0xde6c58d2
  4185f2:	cmp    BYTE PTR ss:[eax+0x6c],ch
  4185f6:	pop    ebp
  4185f7:	scas   eax,DWORD PTR es:[edi]
  4185f8:	imul   ebp,DWORD PTR ss:[esi],0x3f1a067b
  4185ff:	mov    BYTE PTR [ebx-0xc],dl
  418602:	pop    ebp
  418603:	nop
  418604:	neg    DWORD PTR [edx]
  418606:	add    al,0x96
  418608:	push   0x39
  41860a:	xor    ch,BYTE PTR [edx]
  41860c:	sahf   
  41860d:	and    dl,BYTE PTR [edx]
  41860f:	retf   0x8017
  418612:	xor    BYTE PTR [ecx],ah
  418614:	inc    ebx
  418615:	inc    eax
  418616:	pop    es
  418617:	call   0x1572:0xb04eed3c
  41861e:	daa    
  41861f:	scas   eax,DWORD PTR es:[edi]
  418620:	loop   0x4185d2
  418622:	and    BYTE PTR [ebx+ecx*2-0xdda76ba],ah
  418629:	clc    
  41862a:	ret    
  41862b:	loopne 0x41864f
  41862d:	add    ebx,edx
  41862f:	stc    
  418630:	or     bh,0x1a
  418633:	nop
  418634:	adc    edi,DWORD PTR [eax+0x64817cf]
  41863a:	into   
  41863b:	into   
  41863c:	sub    ch,BYTE PTR [ecx]
  41863e:	dec    ecx
  41863f:	mov    ch,0xe5
  418641:	mov    esp,DWORD PTR ds:0x787f449c
  418647:	pop    esi
  418648:	lods   eax,DWORD PTR ds:[esi]
  418649:	push   ds
  41864a:	lock xor ecx,DWORD PTR [edi+0x1f]
  41864e:	mov    eax,0x5d08a9a4
  418653:	push   ebx
  418654:	jns    0x418600
  418656:	idiv   BYTE PTR [ebp+0x546f78fb]
  41865c:	push   esi
  41865d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865e:	mov    eax,0x649bc153
  418663:	xchg   ecx,eax
  418664:	push   ds
  418665:	cmc    
  418666:	jb     0x4186b6
  418668:	pop    ebx
  418669:	jmp    0xbdf5:0x84fd97d6
  418670:	test   BYTE PTR [eax],al
  418672:	xchg   BYTE PTR [ebp-0x430f60c9],dl
  418678:	adc    al,0x98
  41867a:	into   
  41867b:	rcr    DWORD PTR [ecx-0x48],1
  41867e:	in     al,0xb3
  418680:	mov    esi,0xd4684ccf
  418685:	add    eax,0x9b1db1ed
  41868a:	test   al,bh
  41868c:	in     eax,dx
  41868d:	hlt    
  41868e:	dec    edx
  41868f:	in     eax,dx
  418690:	aam    0x68
  418692:	or     al,0xf5
  418694:	push   cs
  418695:	mov    ds:0x64842280,eax
  41869a:	stos   BYTE PTR es:[edi],al
  41869b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41869d:	sbb    ebx,DWORD PTR [eax]
  41869f:	es popf 
  4186a1:	inc    edi
  4186a2:	out    0x99,eax
  4186a4:	lods   al,BYTE PTR ds:[esi]
  4186a5:	xchg   ebx,edx
  4186a7:	fst    st(3)
  4186a9:	arpl   WORD PTR [ecx-0x30],sp
  4186ac:	fwait
  4186ad:	imul   ebp,DWORD PTR [ebp+0x56481e85],0x26
  4186b4:	mov    ch,0x98
  4186b6:	xor    edi,ecx
  4186b8:	cld    
  4186b9:	pushf  
  4186ba:	outs   dx,DWORD PTR ds:[esi]
  4186bb:	imul   ebp,DWORD PTR [edi+0x0],0x5d141e47
  4186c2:	pop    esi
  4186c3:	lock stos BYTE PTR es:[edi],al
  4186c5:	xor    BYTE PTR [edx+0x38],bh
  4186c8:	inc    dh
  4186ca:	ds call 0x41676803
  4186d0:	loope  0x41865a
  4186d2:	push   esp
  4186d3:	xchg   ebx,eax
  4186d4:	adc    esi,DWORD PTR [edx+0x223549b]
  4186da:	mov    ebx,0xcaf2ec09
  4186df:	cld    
  4186e0:	nop
  4186e1:	sub    al,0xe1
  4186e4:	test   DWORD PTR [edx+eax*2-0x3e],esi
  4186e8:	rcr    BYTE PTR [edx],0x7a
  4186eb:	jb     0x4186b7
  4186ed:	push   ds
  4186ee:	pop    ecx
  4186ef:	jns    0x4186ac
  4186f1:	mov    esp,0xf9d73de0
  4186f6:	xor    eax,0x191186f
  4186fb:	inc    esi
  4186fc:	xor    BYTE PTR [ebx],ah
  4186fe:	(bad)  
  4186ff:	ficomp DWORD PTR [edi+0x4]
  418702:	in     eax,0x84
  418704:	mul    ebx
  418706:	push   0xffffffd3
  418708:	ins    BYTE PTR es:[edi],dx
  418709:	mov    ecx,0x619a911e
  41870e:	mov    BYTE PTR [edx],dl
  418710:	fmul   st(6),st
  418712:	xor    BYTE PTR [edx+0x6d4381d],dh
  418718:	lods   al,BYTE PTR ds:[esi]
  418719:	mov    ch,0x50
  41871b:	add    ecx,ecx
  41871d:	(bad)  
  41871e:	sbb    ah,BYTE PTR [ecx-0x9]
  418721:	jo     0x418747
  418723:	or     DWORD PTR [eax+0xc],esi
  418726:	and    DWORD PTR ds:0x7781005,ebx
  41872c:	fmulp  st(0),st
  41872e:	lods   al,BYTE PTR ds:[esi]
  41872f:	pop    esi
  418730:	inc    eax
  418731:	xchg   esp,eax
  418732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418733:	cs fs push cs
  418736:	push   ebp
  418737:	scas   al,BYTE PTR es:[edi]
  418738:	jo     0x41870b
  41873a:	dec    edi
  41873b:	call   0x80cc3898
  418740:	and    DWORD PTR [ebp+ebp*8-0x7eb83eb5],0xe3852ac
  41874b:	lahf   
  41874c:	xchg   BYTE PTR [edx-0x5f887073],al
  418752:	dec    edi
  418753:	inc    ebx
  418754:	adc    DWORD PTR [ebp+0x30eb4b8f],edx
  41875a:	test   al,0x3b
  41875c:	adc    ah,bh
  41875e:	dec    edx
  41875f:	fmul   QWORD PTR [eax-0x39]
  418762:	mov    ebx,0x7214581d
  418767:	xchg   esi,eax
  418768:	into   
  418769:	add    al,0x46
  41876b:	in     eax,0xbc
  41876d:	jns    0x418760
  41876f:	dec    edi
  418770:	add    ebx,ecx
  418772:	xor    DWORD PTR [edx+0x648f6743],0x88d24af8
  41877c:	bound  eax,QWORD PTR [esi-0x3431eaf1]
  418782:	jp     0x418734
  418784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418785:	adc    ah,dl
  418787:	sbb    ch,BYTE PTR [edi+0x3ce6d2d5]
  41878d:	cmp    ah,BYTE PTR [eax]
  41878f:	jnp    0x418777
  418791:	xchg   edi,eax
  418792:	and    bl,bh
  418794:	adc    DWORD PTR [esi],0xf54dc1ca
  41879a:	fs sbb al,0x56
  41879d:	mov    cl,0xf8
  41879f:	ins    DWORD PTR es:[edi],dx
  4187a0:	fcmovu st,st(3)
  4187a2:	dec    ecx
  4187a3:	inc    esi
  4187a4:	mov    ds:0xf0cfee0c,eax
  4187a9:	lods   eax,DWORD PTR ds:[esi]
  4187aa:	xchg   ebp,eax
  4187ab:	outs   dx,BYTE PTR ds:[esi]
  4187ac:	xor    BYTE PTR [edx+0x25],al
  4187af:	leave  
  4187b0:	mov    al,BYTE PTR [edx]
  4187b2:	retf   
  4187b3:	jbe    0x418739
  4187b5:	cs aam 0xc2
  4187b8:	ins    BYTE PTR es:[edi],dx
  4187b9:	pop    ds
  4187ba:	mov    DWORD PTR [ebp+0x56],ecx
  4187bd:	mov    edi,0x637dbe7b
  4187c2:	popa   
  4187c3:	mov    edi,0x8e9237a4
  4187c8:	fild   WORD PTR es:[ebp-0x30bc85]
  4187cf:	dec    esi
  4187d0:	or     eax,0x9387f8d2
  4187d5:	aaa    
  4187d6:	add    al,0xed
  4187d8:	or     cl,BYTE PTR [eax+0x6a]
  4187db:	fisttp DWORD PTR [edi]
  4187dd:	rep lods eax,DWORD PTR ds:[esi]
  4187df:	mov    ds:0xbb31bdb4,eax
  4187e4:	test   BYTE PTR [edi+0x31],bh
  4187e7:	jge    0x418841
  4187e9:	(bad)  
  4187ea:	shl    BYTE PTR [edi-0x14fcb3f8],cl
  4187f0:	and    eax,0x913c91b4
  4187f5:	pop    es
  4187f6:	dec    esi
  4187f7:	popa   
  4187f8:	in     eax,0x56
  4187fa:	xor    esi,DWORD PTR [ebp-0x80]
  4187fd:	xchg   ebx,eax
  4187fe:	je     0x418797
  418800:	adc    DWORD PTR [edi-0x60],eax
  418803:	test   al,0x9d
  418805:	ja     0x41885f
  418807:	std    
  418808:	mov    cl,0x5
  41880a:	adc    esi,edx
  41880c:	inc    edx
  41880d:	shl    BYTE PTR [ebx],0x61
  418810:	mov    WORD PTR [ebp-0x68d4a73e],?
  418816:	ficomp WORD PTR [eax-0x64]
  418819:	mov    bh,0xe
  41881b:	sub    al,0x82
  41881d:	bnd jns 0x41889a
  418820:	push   ebp
  418821:	dec    ebx
  418822:	add    eax,0xad9b014c
  418827:	mov    DWORD PTR [ecx+0x5ae1020e],esp
  41882d:	mov    eax,ds:0x45d902f8
  418832:	mov    dl,0xf0
  418834:	(bad)  
  418835:	stos   BYTE PTR es:[edi],al
  418836:	neg    BYTE PTR [eax+0x7b4c44b6]
  41883c:	lahf   
  41883d:	push   ebx
  41883e:	push   ecx
  41883f:	or     BYTE PTR [esi+edi*8+0x4f429d34],ch
  418846:	sahf   
  418847:	call   0x32ca:0x22099bb8
  41884e:	stc    
  41884f:	sub    bl,dh
  418851:	sahf   
  418852:	sbb    BYTE PTR es:[esi],dl
  418855:	aaa    
  418856:	adc    al,0x13
  418858:	mov    edx,0x185f4247
  41885d:	mov    esp,0xc87893d5
  418862:	push   0x12
  418864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418865:	mov    edi,0xac8afcb3
  41886a:	(bad)  
  41886b:	test   BYTE PTR es:[edi+0x1c],ch
  41886f:	and    eax,0x261940ea
  418874:	jecxz  0x4188ab
  418876:	(bad)  [eax]
  418878:	inc    esp
  418879:	mov    edi,0x38716168
  41887e:	add    DWORD PTR [esi-0x619e98ba],eax
  418884:	test   al,0xf
  418886:	push   ebp
  418887:	cmp    BYTE PTR [ebx+eiz*8-0x48f23beb],ah
  41888e:	repnz (bad) 
  418890:	mov    cl,0x62
  418892:	cmp    eax,DWORD PTR [ebx]
  418894:	mov    eax,ds:0xe8cc94c0
  418899:	fnstsw WORD PTR [ecx]
  41889b:	neg    DWORD PTR [edi]
  41889d:	mov    ebp,es
  41889f:	add    BYTE PTR [ecx-0x41],0x59
  4188a3:	fs inc edx
  4188a5:	pop    esp
  4188a6:	mov    al,ds:0x593c4468
  4188ab:	mov    bl,0xd3
  4188ad:	inc    edi
  4188ae:	push   edi
  4188af:	jo     0x41885b
  4188b1:	or     ah,BYTE PTR [ecx+0x30763830]
  4188b7:	push   ss
  4188b8:	std    
  4188b9:	cmp    DWORD PTR [eax+ecx*4],esi
  4188bc:	sub    al,BYTE PTR [eax-0x3cc8b32]
  4188c2:	dec    ecx
  4188c3:	hlt    
  4188c4:	fisttp WORD PTR [edx+0xa883936]
  4188ca:	mov    eax,ds:0xea24d5d6
  4188cf:	mov    WORD PTR [edx+eiz*8+0xc],ss
  4188d3:	mov    ebp,0xb54ffafc
  4188d8:	push   ss
  4188d9:	mov    ebx,0x18ae53a9
  4188de:	inc    esi
  4188df:	push   ebx
  4188e0:	outs   dx,DWORD PTR ds:[esi]
  4188e1:	call   0x4cdf:0x6c1f9b03
  4188e8:	out    0xff,al
  4188ea:	pop    esp
  4188eb:	adc    eax,0xffffffaf
  4188ee:	sub    eax,DWORD PTR [esi]
  4188f0:	lock sub eax,0x78d035cd
  4188f6:	dec    esp
  4188f7:	jae    0x418931
  4188f9:	dec    ebp
  4188fa:	push   ebp
  4188fb:	jns    0x4188ed
  4188fd:	pushf  
  4188fe:	int    0x5f
  418900:	sub    BYTE PTR fs:[esi],dh
  418903:	sub    esp,DWORD PTR [esi]
  418905:	test   eax,0xe0cd889c
  41890a:	repz (bad) 
  41890c:	sar    DWORD PTR [ebp-0x53],0xe5
  418910:	lods   al,BYTE PTR ds:[esi]
  418911:	dec    ecx
  418912:	je     0x418974
  418914:	cmp    al,0x8d
  418916:	jo     0x418962
  418918:	mov    eax,0xd432fffa
  41891d:	shl    edi,cl
  41891f:	and    eax,DWORD PTR [ebx-0x33]
  418922:	push   ecx
  418923:	cmc    
  418924:	cmp    eax,0xe13b6760
  418929:	jp     0x4188e3
  41892b:	mov    cl,0xb
  41892d:	(bad)  
  41892e:	out    dx,al
  41892f:	xor    dh,BYTE PTR [ebp-0x21da8653]
  418935:	sahf   
  418936:	push   ebp
  418937:	pop    edx
  418939:	inc    edi
  41893a:	jp     0x41892c
  41893c:	sti    
  41893d:	fidiv  DWORD PTR [edi]
  41893f:	es and eax,0xc9ae86ff
  418945:	push   ds
  418946:	lock sbb BYTE PTR [esi+ebp*4-0x4c],0x4f
  41894c:	popa   
  41894d:	adc    ecx,DWORD PTR [ecx]
  41894f:	cdq    
  418950:	pushf  
  418951:	js     0x41892d
  418953:	mov    ebp,0xc007c82
  418958:	pop    ds
  418959:	pusha  
  41895a:	cmc    
  41895b:	shl    BYTE PTR [edx-0x788bf872],1
  418961:	mov    ebx,0x4a0642e7
  418966:	(bad)  
  418967:	cmp    eax,0x60ec0461
  41896c:	push   0x11
  41896e:	mov    eax,ds:0x4892f6ca
  418973:	mov    ebp,0xf6c1c02d
  418979:	inc    edi
  41897a:	addr16 retf 0x662c
  41897e:	jns    0x4189de
  418980:	mov    bh,0xad
  418982:	push   cs
  418983:	mov    ebx,0xf6b3b93e
  418988:	arpl   WORD PTR ds:0xc5bb240d,sp
  41898e:	(bad)  
  41898f:	mov    WORD PTR [edx+0x7f],gs
  418992:	rcr    ah,cl
  418994:	and    cl,ch
  418996:	stos   BYTE PTR es:[edi],al
  418997:	xchg   ecx,ebx
  418999:	int3   
  41899a:	add    al,0xe2
  41899c:	mov    edi,0xcde48590
  4189a1:	inc    ebp
  4189a2:	jl     0x4189ce
  4189a4:	dec    edi
  4189a5:	adc    eax,0xb925f4db
  4189aa:	int    0x56
  4189ac:	pop    edi
  4189ad:	jnp    0x41898f
  4189af:	imul   ecx,ebp,0x58
  4189b2:	inc    ecx
  4189b3:	pop    es
  4189b4:	push   edx
  4189b5:	sub    esi,DWORD PTR [eax+edx*1-0x7218bd]
  4189bc:	(bad)  
  4189bd:	pop    esp
  4189be:	or     al,0xe0
  4189c0:	mov    ch,0x5e
  4189c2:	mov    eax,ds:0x41156f12
  4189c7:	mov    BYTE PTR [edi],cl
  4189c9:	cld    
  4189ca:	cmp    esp,0xa
  4189cd:	je     0x418988
  4189cf:	outs   dx,BYTE PTR ds:[esi]
  4189d0:	pop    ebp
  4189d1:	lea    ebp,[ebx+0x5550c9c6]
  4189d7:	sbb    cl,dh
  4189d9:	in     al,dx
  4189da:	(bad)  
  4189db:	cld    
  4189dc:	aas    
  4189dd:	mov    edx,0x56931fe
  4189e2:	(bad)  
  4189e3:	test   eax,0x569203dc
  4189e8:	fs cli 
  4189ea:	push   ebp
  4189eb:	dec    esp
  4189ec:	inc    esi
  4189ed:	popa   
  4189ee:	push   ds
  4189ef:	sahf   
  4189f0:	imul   esp,DWORD PTR [edi-0x6b668017],0x17
  4189f7:	stos   DWORD PTR es:[edi],eax
  4189f8:	inc    esp
  4189f9:	cmp    dl,cl
  4189fb:	mov    ah,0x24
  4189fd:	sbb    BYTE PTR [esi],dl
  4189ff:	cmp    al,0x87
  418a01:	xchg   edx,eax
  418a02:	and    ebx,eax
  418a04:	out    dx,eax
  418a05:	push   0xad5cf3c7
  418a0a:	mov    dl,BYTE PTR [edx-0x10dc690f]
  418a10:	cld    
  418a11:	sti    
  418a12:	fisubr WORD PTR [edi+0x32]
  418a15:	mov    ebp,0x94c05c48
  418a1a:	push   ss
  418a1b:	cmp    eax,0x2c9e9912
  418a20:	int3   
  418a21:	mov    ds:0x2d5f696c,eax
  418a26:	fwait
  418a27:	test   DWORD PTR [ecx+edx*8-0x51],0x5a96578c
  418a2f:	dec    esi
  418a30:	icebp  
  418a31:	inc    edx
  418a32:	pop    ebx
  418a33:	or     ecx,DWORD PTR [esp+ecx*2-0x2a3b4050]
  418a3a:	iret   
  418a3b:	sub    DWORD PTR [edx+edx*4-0x51],esi
  418a3f:	ss leave 
  418a41:	jne    0x418ab3
  418a43:	loopne 0x418a78
  418a45:	data16 cld 
  418a47:	mov    esi,0xa7590dbf
  418a4c:	ins    DWORD PTR es:[edi],dx
  418a4d:	shl    BYTE PTR [ecx+ebx*2-0x36d53937],1
  418a54:	rcr    BYTE PTR [esi+0x64],1
  418a57:	mov    al,BYTE PTR [ecx]
  418a59:	mov    ds,ecx
  418a5b:	aam    0x72
  418a5d:	and    al,0x75
  418a5f:	adc    eax,0xaa222b7c
  418a64:	aam    0x2e
  418a66:	mov    ah,0x10
  418a68:	or     al,0x68
  418a6a:	inc    ecx
  418a6b:	push   eax
  418a6c:	dec    eax
  418a6d:	lahf   
  418a6e:	mov    es,WORD PTR [ebp+ebx*1-0x28]
  418a72:	sub    ch,BYTE PTR ds:0x20e11083
  418a78:	ss push ss
  418a7a:	fmul   DWORD PTR [ebx-0x2d537a32]
  418a80:	and    BYTE PTR [ecx],dh
  418a82:	adc    eax,0xd443c236
  418a87:	or     eax,0x13a24afa
  418a8c:	adc    ebp,edx
  418a8e:	cli    
  418a8f:	outs   dx,BYTE PTR ds:[esi]
  418a90:	or     BYTE PTR [edi],dl
  418a92:	push   esp
  418a93:	fcomp  st(6)
  418a95:	mov    ds:0x842a8593,al
  418a9a:	lock sub ebp,DWORD PTR [ecx]
  418a9d:	jecxz  0x418ae7
  418a9f:	and    DWORD PTR [edi],esp
  418aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa2:	push   es
  418aa3:	test   eax,esp
  418aa5:	enter  0x1493,0xe9
  418aa9:	sub    al,0x3c
  418aab:	or     bh,bh
  418aad:	xor    edx,DWORD PTR [edi-0x63e15c11]
  418ab3:	mov    bl,0xb3
  418ab5:	sbb    esi,DWORD PTR [esi]
  418ab7:	sbb    al,0xd2
  418ab9:	xchg   esi,eax
  418aba:	out    0xe1,al
  418abc:	in     eax,0xbd
  418abe:	repnz xchg ebx,eax
  418ac0:	pop    eax
  418ac1:	cmp    ecx,ebx
  418ac3:	push   eax
  418ac4:	dec    eax
  418ac5:	add    al,0xb2
  418ac7:	push   edx
  418ac8:	adc    BYTE PTR [edx+eax*8+0x53b01fdb],bh
  418acf:	jbe    0x418a6d
  418ad1:	lods   eax,DWORD PTR ds:[esi]
  418ad2:	sbb    BYTE PTR [edi-0x5de6d56b],0x30
  418ad9:	push   esi
  418ada:	inc    eax
  418adb:	xchg   ecx,eax
  418adc:	mov    DWORD PTR es:[esi-0x2a9c01c7],ebx
  418ae3:	pop    eax
  418ae4:	mov    esi,0x65f80fec
  418ae9:	repz icebp 
  418aeb:	mov    cl,0xdd
  418aed:	aas    
  418aee:	inc    ebx
  418aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af0:	cmp    ebp,eax
  418af2:	mov    bl,0x3e
  418af4:	ret    0x28c9
  418af7:	pop    esp
  418af8:	rcl    BYTE PTR [eax],0x8a
  418afb:	pop    eax
  418afc:	leave  
  418afd:	or     BYTE PTR [ebx-0x4],dh
  418b00:	or     ebp,eax
  418b02:	sar    BYTE PTR [ebp-0x29b1cd8f],0x92
  418b09:	push   esp
  418b0a:	div    ah
  418b0c:	push   esp
  418b0d:	out    0xa3,eax
  418b0f:	xchg   esp,eax
  418b10:	xchg   esp,eax
  418b11:	dec    edx
  418b12:	mov    ah,0x77
  418b14:	or     BYTE PTR [edi+ebx*4],dl
  418b17:	push   ecx
  418b18:	add    al,0x9c
  418b1a:	js     0x418aca
  418b1c:	and    eax,0xd1943bea
  418b21:	jmp    0x881e:0xf1a4f7b9
  418b28:	xchg   DWORD PTR es:[edx],edi
  418b2b:	pop    esp
  418b2c:	cmp    al,BYTE PTR [edi]
  418b2e:	mov    edi,0xd60d20d8
  418b33:	fst    DWORD PTR [ecx+0x38e40fa9]
  418b39:	in     eax,0x9c
  418b3b:	adc    BYTE PTR [esi],bl
  418b3d:	ins    DWORD PTR es:[edi],dx
  418b3e:	mov    ah,0x1a
  418b40:	push   ss
  418b41:	fcomp  QWORD PTR [ecx+0x55fdfd5e]
  418b47:	cmp    dl,BYTE PTR [edx]
  418b49:	or     ecx,0x20
  418b4c:	mov    BYTE PTR [ebx+0x39],dh
  418b4f:	inc    ebp
  418b50:	aam    0x57
  418b52:	push   esi
  418b53:	push   edx
  418b54:	outs   dx,DWORD PTR ds:[esi]
  418b55:	(bad)  
  418b56:	outs   dx,DWORD PTR ds:[esi]
  418b57:	push   ecx
  418b58:	xchg   edx,eax
  418b59:	mov    ebx,0x6281c479
  418b5e:	lea    ebp,[edx]
  418b60:	(bad)  
  418b61:	test   al,0x61
  418b63:	(bad)  
  418b64:	repnz fisubr WORD PTR [ecx-0x3359d199]
  418b6b:	arpl   sp,ax
  418b6d:	jmp    0x418af1
  418b6f:	jne    0x418be4
  418b71:	arpl   si,cx
  418b73:	inc    edx
  418b74:	std    
  418b75:	inc    eax
  418b76:	std    
  418b77:	dec    ebx
  418b78:	fs mov ecx,0x490e58f9
  418b7e:	adc    eax,0x5ec8129
  418b83:	jp     0x418b0c
  418b85:	mov    cl,bl
  418b87:	clc    
  418b88:	adc    DWORD PTR [ebp-0x5a],esi
  418b8b:	test   eax,0xfbcb6650
  418b90:	sub    al,0xcd
  418b92:	pop    ebx
  418b93:	(bad)  
  418b94:	out    0x3e,eax
  418b96:	and    esp,DWORD PTR ds:0x174a3738
  418b9c:	mov    bl,0x94
  418b9e:	inc    eax
  418b9f:	dec    ecx
  418ba0:	retf   0xdd6
  418ba3:	jbe    0x418b61
  418ba5:	mov    ch,0xb6
  418ba7:	mov    ebp,eax
  418ba9:	call   0xe16b24c6
  418bae:	into   
  418baf:	clc    
  418bb0:	fxch   st(1)
  418bb2:	nop
  418bb3:	lods   eax,DWORD PTR ds:[esi]
  418bb4:	pop    edx
  418bb5:	mov    DWORD PTR [edx],esp
  418bb7:	in     al,0x6c
  418bb9:	adc    ah,BYTE PTR [ebx-0xb]
  418bbc:	sub    eax,DWORD PTR [edx+edx*1-0x3526e8e0]
  418bc3:	add    eax,0x1f6e59cf
  418bc8:	xchg   edi,eax
  418bc9:	dec    esp
  418bca:	push   0xffffffb7
  418bcc:	fisubr WORD PTR [eax-0x36869771]
  418bd2:	(bad)  
  418bd4:	xchg   ebp,eax
  418bd5:	add    al,0x8f
  418bd7:	aam    0xd1
  418bd9:	in     al,dx
  418bda:	repnz pop ebp
  418bdc:	cmp    al,0x64
  418bde:	out    dx,eax
  418bdf:	sbb    edx,DWORD PTR [ebx]
  418be1:	test   bl,al
  418be3:	cmp    BYTE PTR [esi],0x66
  418be6:	or     ah,ch
  418be8:	mul    DWORD PTR [edx+0x2861825]
  418bee:	js     0x418b84
  418bf0:	jmp    0x418bd2
  418bf2:	mov    ch,0xc0
  418bf4:	add    BYTE PTR [esi+0x3a483cca],al
  418bfa:	push   0x21ce73d1
  418bff:	mov    ebx,0x1bc996d7
  418c04:	jmp    DWORD PTR [eax-0x2947d807]
  418c0a:	pop    esi
  418c0b:	xchg   DWORD PTR [esi],ecx
  418c0d:	mov    eax,ss:0xb9abc50a
  418c13:	repz adc eax,0xa230ad2c
  418c19:	jl     0x418c59
  418c1b:	sub    eax,0xce71dc6d
  418c20:	out    dx,al
  418c21:	in     eax,dx
  418c22:	xor    DWORD PTR [eax+ebp*4+0xe],0xfffffffc
  418c27:	cmc    
  418c28:	repnz loopne 0x418c30
  418c2b:	test   DWORD PTR [eax-0x4d],edi
  418c2e:	ret    
  418c2f:	push   esi
  418c30:	jg     0x418c75
  418c32:	pop    edi
  418c33:	adc    BYTE PTR [esi-0x69],cl
  418c36:	fsub   QWORD PTR [ebp+0x6b]
  418c39:	scas   al,BYTE PTR es:[edi]
  418c3a:	xor    esp,ebp
  418c3c:	xchg   esp,eax
  418c3d:	lock sahf 
  418c3f:	mov    bl,0xc8
  418c41:	cmp    al,0xc7
  418c43:	sbb    BYTE PTR [esi+0x3c6b5aff],ah
  418c49:	jb     0x418c6f
  418c4b:	pop    ebp
  418c4c:	lahf   
  418c4d:	cmp    DWORD PTR [esi+0x72],edi
  418c50:	push   esi
  418c51:	loopne 0x418c8c
  418c53:	jge    0x418c00
  418c55:	rol    BYTE PTR [ebx+0x32],0x6e
  418c59:	inc    ebx
  418c5a:	pushf  
  418c5b:	push   es
  418c5c:	shl    BYTE PTR [ebp+0x7c],0x35
  418c60:	stc    
  418c61:	cmp    eax,0x304997fe
  418c66:	mov    ds:0xf7b1cacd,eax
  418c6b:	adc    DWORD PTR [esi-0x6acb197e],0xfffffffc
  418c72:	fs clc 
  418c74:	cmp    DWORD PTR [eax],esi
  418c76:	jo     0x418cac
  418c78:	and    ecx,DWORD PTR [edi+0x5e842913]
  418c7e:	pop    es
  418c7f:	mov    DWORD PTR [ebx],edi
  418c81:	pop    eax
  418c82:	aad    0x93
  418c84:	retf   0xb289
  418c87:	aad    0x17
  418c89:	or     DWORD PTR [edi-0x39],0x27
  418c8d:	leave  
  418c8e:	pop    ebx
  418c8f:	out    dx,al
  418c90:	lock sti 
  418c92:	inc    ecx
  418c93:	test   ebx,0x2e8c966e
  418c99:	bound  esi,QWORD PTR [ebx+0x573f4759]
  418c9f:	add    BYTE PTR [edi-0x4f],0x18
  418ca3:	inc    ebx
  418ca4:	or     esp,DWORD PTR [esi-0x5e]
  418ca7:	nop
  418ca8:	lods   al,BYTE PTR ds:[esi]
  418ca9:	call   0x7ab413d0
  418cae:	cli    
  418caf:	cli    
  418cb0:	mov    BYTE PTR [ebp+0x36],dl
  418cb3:	add    al,0xa3
  418cb5:	dec    esp
  418cb6:	dec    edi
  418cb7:	adc    DWORD PTR [ebp+ecx*4+0x63],0x7e542350
  418cbf:	xchg   esp,eax
  418cc0:	retf   0xea10
  418cc3:	les    esi,FWORD PTR [ebx+ebx*1+0x3fc67bfb]
  418cca:	jno    0x418c53
  418ccc:	aaa    
  418ccd:	dec    edi
  418cce:	pusha  
  418ccf:	ror    BYTE PTR [eax-0x6f],1
  418cd2:	popf   
  418cd3:	xor    eax,0x75fbacd5
  418cd8:	and    bh,bh
  418cda:	add    ah,bh
  418cdc:	fdiv   st,st(4)
  418cde:	add    dh,bh
  418ce0:	out    0xc0,eax
  418ce2:	fstp   QWORD PTR [esi+0x63]
  418ce5:	xlat   BYTE PTR ds:[ebx]
  418ce6:	(bad)  
  418ce7:	mov    ebx,0xfcdfb7f8
  418cec:	or     BYTE PTR [ecx+0x14],bh
  418cef:	inc    esi
  418cf0:	int    0xd9
  418cf2:	sub    esi,eax
  418cf4:	outs   dx,DWORD PTR ds:[esi]
  418cf5:	jne    0x418ce5
  418cf7:	enter  0xda98,0x3b
  418cfb:	leave  
  418cfc:	cdq    
  418cfd:	sbb    BYTE PTR [ebp+0x52],al
  418d00:	adc    eax,0x6054624b
  418d05:	add    BYTE PTR [esp+ebx*8+0x48e7cc65],al
  418d0c:	scas   al,BYTE PTR es:[edi]
  418d0d:	push   esi
  418d0e:	sbb    dh,bl
  418d10:	xchg   edi,eax
  418d11:	or     ecx,edi
  418d13:	sub    ecx,ebp
  418d15:	adc    BYTE PTR fs:[ebp-0x1d07a6d],0x8e
  418d1d:	add    DWORD PTR [esi+0x4b],0xd3c91e79
  418d24:	fmulp  st(1),st
  418d26:	pop    eax
  418d27:	ds mov edx,0xec75b040
  418d2d:	fwait
  418d2e:	je     0x418d49
  418d30:	cdq    
  418d31:	pause  
  418d33:	jno    0x418dab
  418d35:	test   eax,0xdb326f59
  418d3a:	xchg   edx,eax
  418d3b:	dec    esi
  418d3c:	push   edx
  418d3d:	cmp    eax,0x1368b39b
  418d42:	out    dx,al
  418d43:	pop    edx
  418d44:	mov    al,0x65
  418d46:	std    
  418d47:	xchg   ebx,eax
  418d48:	push   0x57b03a82
  418d4d:	fistp  QWORD PTR [ebp+0x64]
  418d50:	sub    ah,bl
  418d52:	jecxz  0x418dc6
  418d54:	lahf   
  418d55:	das    
  418d56:	jbe    0x418d2c
  418d58:	leave  
  418d59:	sbb    DWORD PTR [edx+0x74],ebx
  418d5c:	addr16 pop ebx
  418d5e:	pusha  
  418d5f:	daa    
  418d60:	hlt    
  418d61:	mov    ds:0x3b6a7143,al
  418d66:	jo     0x418d4f
  418d68:	outs   dx,BYTE PTR ds:[esi]
  418d69:	(bad)  
  418d6a:	fld    TBYTE PTR [ebp+0xf4bfb1c]
  418d70:	push   ebx
  418d71:	dec    eax
  418d72:	inc    edx
  418d73:	inc    esi
  418d74:	out    0xdc,eax
  418d76:	fwait
  418d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d78:	dec    eax
  418d79:	aas    
  418d7a:	out    0xe5,eax
  418d7c:	loopne 0x418d27
  418d7e:	sub    edx,esp
  418d80:	mov    edx,0xb3936787
  418d85:	mov    bl,0x42
  418d87:	ins    DWORD PTR es:[edi],dx
  418d88:	pop    edi
  418d89:	repz push 0xffffffa5
  418d8c:	xchg   edx,eax
  418d8d:	in     al,dx
  418d8e:	out    0x0,eax
  418d90:	push   es
  418d91:	call   0x8d0a:0x3b6426ce
  418d98:	or     al,0xa9
  418d9a:	jae    0x418da6
  418d9c:	inc    ebp
  418d9d:	pop    ebx
  418d9e:	adc    ch,BYTE PTR [edx-0x64]
  418da1:	in     eax,dx
  418da2:	dec    ebx
  418da3:	cs inc edi
  418da5:	xlat   BYTE PTR ds:[ebx]
  418da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da8:	pop    ebp
  418da9:	cwde   
  418daa:	push   cs
  418dab:	sbb    ebx,DWORD PTR [edi]
  418dad:	pop    ds
  418dae:	fwait
  418daf:	push   es
  418db0:	mov    dh,0x4e
  418db2:	dec    ebx
  418db3:	aad    0xa4
  418db5:	push   0xa4d70126
  418dba:	or     eax,0x9dd9c9a6
  418dbf:	mov    dh,0xc1
  418dc1:	pop    ebx
  418dc2:	repnz and eax,DWORD PTR [edi-0x1d]
  418dc6:	(bad)  
  418dc7:	(bad)  
  418dc8:	pop    esi
  418dc9:	jg     0x418dd5
  418dcb:	jge    0x418e27
  418dcd:	cli    
  418dce:	(bad)  [ecx]
  418dd0:	mov    al,ds:0x5d1c3338
  418dd5:	inc    esp
  418dd6:	vpunpcklqdq xmm3,xmm3,XMMWORD PTR [esi-0x7c]
  418ddb:	inc    esp
  418ddc:	retf   
  418ddd:	xchg   DWORD PTR [ebp-0x1cea4670],edi
  418de3:	js     0x418e59
  418de5:	repz push ecx
  418de7:	mov    DWORD PTR [eax-0x49],ecx
  418dea:	pop    eax
  418deb:	(bad)  
  418dec:	lahf   
  418ded:	mov    ds:0x8844210c,al
  418df2:	mov    ds:0x9eed057a,al
  418df7:	fadd   QWORD PTR ds:0x17804b75
  418dfd:	push   esp
  418dfe:	add    eax,0x7961cc21
  418e03:	(bad)
  418e06:	test   BYTE PTR [ecx-0x4ab3509d],ah
  418e0c:	pop    esi
  418e0d:	loope  0x418db9
  418e0f:	pop    esp
  418e10:	fst    DWORD PTR [ecx+0x496e0848]
  418e16:	dec    esp
  418e17:	xor    DWORD PTR [ebx-0x37f413c1],ebx
  418e1d:	mov    al,0x48
  418e1f:	imul   edx,DWORD PTR [edx],0xffffff95
  418e22:	iret   
  418e23:	rcl    DWORD PTR [eax+0x493881a8],0x98
  418e2a:	retf   
  418e2b:	in     al,dx
  418e2c:	push   ecx
  418e2d:	jmp    0xc620:0x669b6259
  418e34:	mov    al,ds:0xdd1b6c44
  418e39:	js     0x418dcb
  418e3b:	rcr    DWORD PTR [edi+0x32],cl
  418e3e:	mov    DWORD PTR [ebp-0x44e95dd9],eax
  418e44:	fld    st(5)
  418e46:	sub    edi,ebp
  418e48:	xor    dl,BYTE PTR [edx]
  418e4a:	jmp    0xe7f2:0xc4e261b7
  418e51:	test   al,0xd7
  418e53:	cdq    
  418e54:	loope  0x418ed2
  418e56:	sbb    al,0x75
  418e58:	mov    edx,0x37684bb
  418e5d:	rol    dl,cl
  418e5f:	xor    al,0x1d
  418e61:	xor    al,0x29
  418e63:	outs   dx,DWORD PTR ds:[esi]
  418e64:	inc    ebp
  418e65:	add    DWORD PTR [edi],esi
  418e67:	mov    ch,BYTE PTR [edi+eax*1]
  418e6a:	bound  esp,QWORD PTR [edi-0x7ebfb825]
  418e70:	ins    DWORD PTR es:[edi],dx
  418e71:	adc    ecx,DWORD PTR [ebp+0x493d0518]
  418e77:	mov    ch,bl
  418e79:	sub    al,0x80
  418e7b:	into   
  418e7c:	aas    
  418e7d:	mov    WORD PTR [edi-0x1b],?
  418e80:	fisttp QWORD PTR [ebx+0x5f]
  418e83:	pop    edi
  418e84:	iret   
  418e85:	xchg   edi,eax
  418e86:	js     0x418edf
  418e88:	mov    WORD PTR [ecx-0x48],cs
  418e8b:	lods   eax,DWORD PTR ds:[esi]
  418e8c:	push   ecx
  418e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8e:	dec    ebx
  418e8f:	std    
  418e90:	jno    0x418ea7
  418e92:	xchg   edx,eax
  418e93:	lods   al,BYTE PTR ds:[esi]
  418e94:	or     esp,DWORD PTR [ebx+0x48af5d41]
  418e9a:	inc    ebp
  418e9b:	inc    ebx
  418e9c:	or     eax,0x9f2f441e
  418ea1:	arpl   WORD PTR [eax-0xc6c9255],sp
  418ea7:	cdq    
  418ea8:	jecxz  0x418f03
  418eaa:	imul   esi,DWORD PTR [ecx+0x15],0xc541dbd4
  418eb1:	not    cl
  418eb3:	add    dl,bl
  418eb5:	fucomi st,st(3)
  418eb7:	das    
  418eb8:	fld    TBYTE PTR [edi+0x32]
  418ebb:	fld    TBYTE PTR [ebx-0x59]
  418ebe:	adc    edx,DWORD PTR gs:[edx+0x10f115ad]
  418ec5:	scas   al,BYTE PTR es:[edi]
  418ec6:	je     0x418e7b
  418ec8:	stos   DWORD PTR es:[edi],eax
  418ec9:	enter  0x7116,0x62
  418ecd:	sti    
  418ece:	inc    esi
  418ecf:	sub    DWORD PTR [ebx-0x247eb9ae],eax
  418ed5:	popf   
  418ed6:	je     0x418f24
  418ed8:	push   es
  418ed9:	clc    
  418eda:	ret    
  418edb:	cmp    al,0xbf
  418edd:	push   ecx
  418ede:	add    DWORD PTR [ebp-0x74],esi
  418ee1:	or     BYTE PTR [ebx],al
  418ee3:	xor    BYTE PTR [ecx+0x286ea106],dl
  418ee9:	call   0xca2c:0xfc4cd8cc
  418ef0:	push   0x74cdf541
  418ef5:	test   BYTE PTR [ebx-0x7e],dl
  418ef8:	mov    al,ds:0x193749d8
  418efd:	lock pop ebx
  418eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f00:	nop
  418f01:	js     0x418e8c
  418f03:	and    eax,0x27816edc
  418f08:	shl    BYTE PTR [edx+0x244f0a88],0x8a
  418f0f:	shl    edi,0x1e
  418f12:	push   es
  418f13:	mov    al,ds:0x4b070961
  418f18:	fisttp WORD PTR [edx]
  418f1a:	and    eax,0xd91ec9fc
  418f1f:	xor    al,BYTE PTR [ebp-0x6c]
  418f22:	pop    edi
  418f23:	xchg   edx,eax
  418f24:	xlat   BYTE PTR fs:[ebx]
  418f26:	pop    edi
  418f27:	je     0x418f19
  418f29:	push   edx
  418f2a:	cmp    eax,0xc71ef269
  418f2f:	inc    ecx
  418f30:	out    0x15,eax
  418f32:	mov    dl,0xcf
  418f34:	pushf  
  418f35:	mov    edi,0xf1ba9c8a
  418f3a:	pop    edx
  418f3b:	xchg   edx,eax
  418f3c:	mov    ch,0x93
  418f3e:	mov    eax,0x70a30878
  418f43:	jbe    0x418f2d
  418f45:	(bad)  
  418f46:	mov    edx,0xdec232c6
  418f4b:	jmp    0x57aa0833
  418f50:	fisubr WORD PTR [edx+0x306f4796]
  418f56:	dec    ebp
  418f57:	xchg   DWORD PTR [edx+0x23e145b7],eax
  418f5d:	push   cs
  418f5e:	call   0x3559179e
  418f63:	je     0x418f12
  418f65:	enter  0x7a6f,0x13
  418f69:	loopne 0x418f1c
  418f6b:	icebp  
  418f6c:	pop    ebp
  418f6d:	mov    al,ch
  418f6f:	test   bl,bh
  418f71:	mov    dl,0x91
  418f73:	fistp  WORD PTR ds:0x6925dfe0
  418f79:	out    dx,eax
  418f7a:	cs jle 0x418f29
  418f7d:	jecxz  0x418fcb
  418f7f:	call   0x433a2c6e
  418f84:	loop   0x418f24
  418f86:	jmp    edi
  418f88:	mov    cs,esi
  418f8a:	js     0x418f39
  418f8c:	add    DWORD PTR [edx*2+0x778bb396],ebp
  418f93:	mov    ?,WORD PTR [ecx+0x5b]
  418f96:	sub    al,0xc8
  418f98:	cwde   
  418f99:	and    BYTE PTR [edi+0x45],dh
  418f9c:	pop    es
  418f9d:	xchg   ah,cl
  418f9f:	add    eax,0xd62fccc5
  418fa4:	pop    esp
  418fa5:	sahf   
  418fa6:	jae    0x419023
  418fa8:	aad    0xfd
  418faa:	xor    dh,BYTE PTR [esi-0x41]
  418fad:	push   edx
  418fae:	es inc edx
  418fb0:	cmp    al,0xd0
  418fb2:	and    al,0x41
  418fb4:	mov    BYTE PTR [ebx],dh
  418fb6:	test   DWORD PTR [ebx],edi
  418fb8:	sti    
  418fb9:	mov    dl,0x95
  418fbb:	dec    edi
  418fbc:	mov    es,WORD PTR [ecx+0x3f93c308]
  418fc2:	xchg   esp,eax
  418fc3:	cmp    DWORD PTR [ebp-0x67e12bcf],ebp
  418fc9:	xchg   esi,eax
  418fca:	cwde   
  418fcb:	inc    edx
  418fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fcd:	stos   DWORD PTR es:[edi],eax
  418fce:	jmp    0xb5b5908f
  418fd3:	fsubr  st,st(4)
  418fd5:	push   ss
  418fd6:	and    DWORD PTR [edx-0x6f],edx
  418fd9:	gs scas eax,DWORD PTR es:[edi]
  418fdb:	(bad)  
  418fdc:	dec    edi
  418fdd:	jg     0x419016
  418fdf:	stos   BYTE PTR es:[edi],al
  418fe0:	mov    ebp,0x1b2fedb5
  418fe5:	jno    0x418ff5
  418fe7:	lahf   
  418fe8:	inc    bx
  418fea:	mov    ah,0xf8
  418fec:	pop    edi
  418fed:	inc    edi
  418fee:	jo     0x41902b
  418ff0:	inc    esi
  418ff1:	lahf   
  418ff2:	fsub   DWORD PTR [ecx+0x4f]
  418ff5:	aad    0xbf
  418ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff8:	out    0x2,al
  418ffa:	push   ds
  418ffb:	jnp    0x418faa
  418ffd:	xor    al,0xda
  418fff:	push   ecx
  419000:	pop    edi
  419001:	pushf  
  419002:	mov    ds:0x2562744,al
  419007:	or     eax,DWORD PTR [ebp-0x771fcf8e]
  41900d:	lods   eax,DWORD PTR ds:[esi]
  41900e:	mov    edi,0x6e925e1b
  419013:	pop    eax
  419014:	jnp    0x418fdb
  419016:	sbb    eax,0x9e1596aa
  41901b:	add    BYTE PTR [esi+ecx*4-0x49],0x44
  419020:	dec    esi
  419021:	rcr    BYTE PTR [edx+0x11],0xd6
  419025:	call   0xbd95:0xa6ab096c
  41902c:	lds    ebx,FWORD PTR [esi+ebp*4]
  41902f:	inc    ebp
  419030:	push   ebp
  419031:	in     eax,dx
  419032:	loope  0x418feb
  419034:	adc    ebx,0x48
  419037:	fild   DWORD PTR ss:[eax-0x7d]
  41903b:	xor    bl,BYTE PTR ds:0x3e854098
  419041:	fwait
  419042:	in     eax,0xce
  419044:	pusha  
  419045:	nop
  419046:	outs   dx,BYTE PTR ds:[esi]
  419047:	xor    dh,BYTE PTR [ecx+0x411767e8]
  41904d:	loop   0x4190c0
  41904f:	mov    dl,0xb4
  419051:	dec    ecx
  419052:	inc    esi
  419053:	add    eax,0x480861ab
  419058:	adc    DWORD PTR [edx-0x5bd4bbae],edi
  41905e:	outs   dx,DWORD PTR ds:[esi]
  41905f:	pop    esp
  419060:	xor    ebp,ebp
  419062:	sbb    eax,0x611aa634
  419067:	imul   ebx,DWORD PTR [esi],0x66
  41906a:	fadd   DWORD PTR [ecx-0x1163eb71]
  419070:	cmp    al,0x43
  419072:	jo     0x4190d1
  419074:	jmp    0x4190ae
  419076:	mov    ch,0x4e
  419078:	iret   
  419079:	inc    ebx
  41907a:	jb     0x41908b
  41907c:	push   ebp
  41907d:	lds    ebp,FWORD PTR [ebx+0x46]
  419080:	mov    ?,eax
  419082:	xchg   edx,eax
  419083:	dec    ebp
  419084:	les    esi,FWORD PTR fs:[ebx-0x53]
  419088:	(bad)  
  419089:	pop    ss
  41908a:	retf   0xdc76
  41908d:	inc    ebp
  41908e:	push   ds
  41908f:	ds and BYTE PTR cs:[ecx-0x74],0xe7
  419095:	jmp    0x65700021
  41909a:	cwde   
  41909b:	adc    eax,0x3b94a93c
  4190a0:	mov    bh,0x1a
  4190a2:	xor    eax,0xb4d2c373
  4190a7:	(bad)  
  4190a8:	stos   DWORD PTR es:[edi],eax
  4190a9:	aaa    
  4190aa:	mov    dh,0xc8
  4190ac:	pop    ebx
  4190ad:	cmp    edx,DWORD PTR [ecx+0x3]
  4190b0:	xor    ah,BYTE PTR [ecx-0xf0f9cbf]
  4190b6:	test   BYTE PTR [eax+0x3ac165ab],cl
  4190bc:	or     BYTE PTR cs:[ebx-0x152c1865],al
  4190c3:	in     eax,0x71
  4190c5:	or     DWORD PTR [eax+eiz*2-0x10c40eb5],0xb4d21a1a
  4190d0:	and    dl,BYTE PTR [edi-0x1a]
  4190d3:	shl    DWORD PTR [edx+eiz*1+0x6c],0x46
  4190d8:	cmp    al,0x7d
  4190da:	test   eax,0x2bc8dcfa
  4190df:	mov    bh,0x58
  4190e1:	pusha  
  4190e2:	ret    
  4190e3:	xchg   edx,eax
  4190e4:	sub    eax,0xadf6eecf
  4190e9:	test   esp,0xc81915d9
  4190ef:	inc    esp
  4190f0:	dec    edi
  4190f1:	loope  0x419091
  4190f3:	loopne 0x419091
  4190f5:	imul   ebp,DWORD PTR [edx],0x72dd9c18
  4190fb:	mov    BYTE PTR [edi+edx*8+0x47],ah
  4190ff:	pop    eax
  419100:	in     al,0x2d
  419102:	mov    esi,0x83b3ae30
  419107:	adc    DWORD PTR [esi+0x1e],eax
  41910a:	cmp    BYTE PTR [bx+0x4f7e],bh
  41910f:	test   BYTE PTR [edi-0x65],bl
  419112:	in     al,0x70
  419114:	rcl    dl,1
  419116:	loope  0x419125
  419118:	sahf   
  419119:	out    dx,al
  41911a:	inc    edi
  41911b:	pop    edx
  41911c:	mov    eax,ds:0x756e4309
  419121:	sub    al,dl
  419123:	or     BYTE PTR [edx],ch
  419125:	adc    al,0x69
  419127:	call   0x6beb:0xe4deae80
  41912e:	push   ecx
  41912f:	js     0x419121
  419131:	and    esi,edx
  419133:	cdq    
  419134:	xchg   ebx,eax
  419135:	aad    0x72
  419137:	call   0x357e9167
  41913c:	push   ecx
  41913d:	push   esp
  41913e:	pushf  
  41913f:	ret    0x82d5
  419142:	mov    DWORD PTR [ebp-0x50],edx
  419145:	mov    edx,DWORD PTR [ebp+0x8]
  419148:	mov    ebx,DWORD PTR [ebp-0x4c]
  41914b:	add    edx,edi
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x6408d874]
  419207:	ins    BYTE PTR es:[edi],dx
  419208:	out    0x56,al
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0x57
  419213:	stc    
  419214:	push   es
  419215:	and    edi,DWORD PTR [esi+0x262a2322]
  41921b:	test   ebp,edx
  41921d:	pop    eax
  41921e:	mov    dl,0x2d
  419220:	sub    BYTE PTR [esi+edi*8-0x49975393],ah
  419227:	xchg   ebp,eax
  419228:	sub    DWORD PTR [ecx],esi
  41922a:	jb     0x4192a3
  41922c:	dec    edx
  41922e:	ret    0x8427
  419231:	loop   0x419275
  419233:	int3   
  419234:	mov    al,0x49
  419236:	stos   DWORD PTR es:[edi],eax
  419237:	jmp    0x41928a
  419239:	test   al,0x71
  41923b:	cmp    eax,0x28708a2d
  419240:	loopne 0x4191fd
  419242:	sti    
  419243:	push   ss
  419244:	rcr    BYTE PTR [ebx-0xa0e1cfb],1
  41924a:	pop    ebp
  41924b:	jae    0x4191ec
  41924d:	dec    edx
  41924e:	pushf  
  41924f:	jl     0x419257
  419251:	jle    0x4192c4
  419253:	stc    
  419254:	dec    edx
  419255:	cmc    
  419256:	(bad)  
  419258:	scas   eax,DWORD PTR es:[edi]
  419259:	repz das 
  41925b:	pop    esp
  41925c:	or     bh,BYTE PTR [edi-0x78]
  41925f:	ficomp WORD PTR [eax]
  419261:	pop    ebp
  419262:	push   0x35
  419264:	pop    ds
  419265:	sub    ebp,edi
  419267:	popf   
  419268:	mov    bh,0x64
  41926a:	ret    
  41926b:	dec    eax
  41926c:	adc    ebx,DWORD PTR [edi]
  41926e:	popa   
  41926f:	cmp    DWORD PTR [ebp+0x1a],eax
  419272:	xor    BYTE PTR [eax],dh
  419274:	xchg   bl,dh
  419276:	test   DWORD PTR [ecx+edx*1],0x4d04ffaf
  41927d:	sub    al,0x77
  41927f:	mov    dh,BYTE PTR [eax-0x4b]
  419282:	call   0xc6af:0xd512024b
  419289:	mov    edx,DWORD PTR [eax+eiz*2-0x6]
  41928d:	mov    bl,0x6d
  41928f:	sar    dh,1
  419291:	cmp    eax,0x204d0793
  419296:	sbb    ebp,esi
  419298:	mov    al,ds:0xe84e9dff
  41929d:	xchg   ebp,eax
  41929e:	sub    DWORD PTR ds:0xdcb9fe70,esi
  4192a4:	pop    edi
  4192a5:	outs   dx,BYTE PTR ds:[esi]
  4192a6:	jo     0x41929b
  4192a8:	shl    edx,cl
  4192aa:	push   ebp
  4192ab:	test   al,0x85
  4192ad:	cmp    BYTE PTR [edx-0x39],bl
  4192b0:	enter  0x4f50,0x2d
  4192b4:	adc    esp,ebx
  4192b6:	inc    ecx
  4192b7:	adc    al,0xff
  4192b9:	adc    ebp,esp
  4192bb:	sahf   
  4192bc:	mov    bh,0xae
  4192be:	fist   WORD PTR [ebx]
  4192c0:	mov    esp,0x6370c9f7
  4192c5:	test   eax,0xe7c7d713
  4192ca:	xchg   ebp,eax
  4192cb:	mov    ecx,0xab00bcad
  4192d0:	imul   esp
  4192d2:	sahf   
  4192d3:	mov    ebx,0x4e2d1bf6
  4192d8:	stos   DWORD PTR es:[edi],eax
  4192d9:	push   0x7afdcd3
  4192de:	mov    ecx,0x25c70d12
  4192e3:	test   al,0xe2
  4192e5:	loopne 0x41932e
  4192e7:	clc    
  4192e8:	cdq    
  4192e9:	mov    ecx,0xc35f1c14
  4192ee:	pop    ds
  4192ef:	fs push edx
  4192f1:	mov    edi,0xa50b87b3
  4192f6:	mov    bh,0x22
  4192f8:	sub    ch,BYTE PTR [ecx+0x28]
  4192fb:	and    ch,BYTE PTR [eax]
  4192fd:	push   0x30
  4192ff:	shl    BYTE PTR [edi+0x31413070],1
  419305:	ds push eax
  419307:	mov    esi,0xa4abd43d
  41930c:	ds (bad) 
  41930e:	push   eax
  41930f:	rcr    BYTE PTR ds:0xcedfef30,1
  419315:	repnz or eax,0x725c7a20
  41931b:	mov    al,0x99
  41931d:	lods   eax,DWORD PTR ds:[esi]
  41931e:	lea    edi,[ebx-0x3b]
  419321:	adc    BYTE PTR [edx+ecx*2-0x45],dh
  419325:	inc    edx
  419326:	dec    ebx
  419327:	mov    eax,ds:0x87cd1fa2
  41932c:	enter  0x4407,0x9
  419330:	jnp    0x4192bd
  419332:	sti    
  419333:	xor    DWORD PTR [ebp*4-0x38aec72],ecx
  41933a:	lods   al,BYTE PTR ds:[esi]
  41933b:	aaa    
  41933c:	ret    
  41933d:	xchg   ecx,eax
  41933e:	ins    BYTE PTR es:[edi],dx
  41933f:	test   al,0x44
  419341:	cmc    
  419342:	mov    ah,0x56
  419344:	data16 mov bh,0x5a
  419347:	inc    ecx
  419348:	sub    cl,BYTE PTR [eax*4-0x75a44544]
  41934f:	mov    dh,bl
  419351:	dec    eax
  419352:	xchg   esp,eax
  419353:	cwde   
  419354:	jmp    0x3eae:0x81443d30
  41935b:	cmp    al,0x34
  41935d:	push   ebp
  41935e:	ds push 0x46574c74
  419364:	je     0x419316
  419366:	mov    dh,0x3
  419368:	mov    ds:0xe48fc5c9,eax
  41936d:	jl     0x41936b
  41936f:	js     0x4193c5
  419371:	cld    
  419372:	push   esi
  419373:	repnz ins DWORD PTR es:[edi],dx
  419375:	adc    eax,0xa273fe2c
  41937a:	icebp  
  41937b:	cli    
  41937c:	fidiv  WORD PTR es:[edi]
  41937f:	retf   
  419380:	rol    dh,1
  419382:	out    0x66,al
  419384:	js     0x41934f
  419386:	cmc    
  419387:	xor    edx,DWORD PTR [edi+0x21f00ffa]
  41938d:	mov    esp,0x8aaf4970
  419392:	adc    bh,bl
  419394:	rcr    BYTE PTR [edi+eax*8-0x28359d7c],0xc4
  41939c:	dec    eax
  41939d:	adc    edi,DWORD PTR [ecx-0x5e26de47]
  4193a3:	sbb    ebx,edi
  4193a5:	mov    dh,0x43
  4193a7:	xor    DWORD PTR [ecx-0x75b16358],0xef150f78
  4193b1:	test   BYTE PTR [ebx-0x67],bh
  4193b4:	stos   BYTE PTR es:[edi],al
  4193b5:	inc    esi
  4193b6:	cmp    BYTE PTR [edx-0x58],ch
  4193b9:	enter  0x7fda,0x1d
  4193bd:	xor    eax,0xf750d5f4
  4193c2:	xor    DWORD PTR [esi-0xa],ebx
  4193c5:	pop    edx
  4193c6:	pop    ebx
  4193c7:	sbb    ebx,ebp
  4193c9:	xchg   edx,eax
  4193ca:	pop    ds
  4193cb:	(bad)  
  4193cc:	mov    ch,0x59
  4193ce:	or     edi,ecx
  4193d0:	sub    al,0x5a
  4193d2:	leave  
  4193d3:	dec    ebp
  4193d4:	xchg   edx,eax
  4193d5:	push   ebx
  4193d6:	clc    
  4193d7:	inc    esi
  4193d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d9:	leave  
  4193da:	push   eax
  4193db:	rcr    BYTE PTR [eax+edi*2-0x103f3ef9],0x88
  4193e3:	adc    eax,0x7561e5d1
  4193e8:	out    0x1c,al
  4193ea:	mov    al,0x39
  4193ec:	mov    ebp,0x65aa3704
  4193f1:	jmp    0x2c0a765c
  4193f6:	add    eax,DWORD PTR [ecx-0x644e3fb0]
  4193fc:	(bad)  
  4193fd:	outs   dx,BYTE PTR ds:[esi]
  4193fe:	mov    ebx,0x4e387755
  419403:	jne    0x4193be
  419405:	stc    
  419406:	jb     0x4193bd
  419408:	push   ds
  419409:	pop    edx
  41940a:	dec    edx
  41940b:	in     al,0x5e
  41940d:	cmovbe ebp,DWORD PTR [edi]
  419410:	popa   
  419411:	pop    ebp
  419412:	jns    0x41943f
  419414:	cdq    
  419415:	mov    esp,0x61b91442
  41941a:	cwde   
  41941b:	mov    esp,0x2689ad3e
  419420:	pop    esi
  419421:	pushf  
  419422:	fs or  eax,0x5c8cbb2e
  419428:	aas    
  419429:	pop    ecx
  41942a:	xor    BYTE PTR cs:[edx],cl
  41942d:	push   esp
  41942e:	fsub   QWORD PTR [ebp+0x7f]
  419431:	sub    eax,0x15bfdb45
  419436:	test   eax,0x870fcbe9
  41943b:	sbb    eax,0x6acd78dd
  419440:	mov    bl,0xfa
  419442:	mov    al,0xb4
  419444:	test   DWORD PTR [esi],esp
  419446:	ret    0x64f2
  419449:	in     eax,dx
  41944a:	aam    0xaa
  41944c:	sub    ch,bh
  41944e:	rcr    DWORD PTR [edx],1
  419450:	sbb    al,0xa7
  419452:	sahf   
  419453:	mov    eax,0xaee0eda2
  419458:	dec    eax
  419459:	sub    eax,0x8576c10
  41945e:	mov    ecx,0x6d0af196
  419463:	mov    ds:0x3fef495c,al
  419468:	in     eax,0xe3
  41946a:	mov    ch,0xa8
  41946c:	call   0x2f18:0x7b6bbbb8
  419473:	popf   
  419474:	hlt    
  419475:	lds    edi,FWORD PTR [edx]
  419477:	cmp    ch,ch
  419479:	lods   eax,DWORD PTR ds:[esi]
  41947a:	mov    ds:0xdb9ab795,eax
  41947f:	into   
  419480:	dec    esp
  419481:	jo     0x41949b
  419483:	lods   al,BYTE PTR ds:[esi]
  419484:	cs ss daa 
  419487:	rep lods eax,DWORD PTR ds:[esi]
  419489:	mov    ebx,0x6f25bebd
  41948e:	jae    0x41950e
  419490:	scas   al,BYTE PTR es:[edi]
  419491:	retf   
  419492:	lods   al,BYTE PTR ds:[esi]
  419493:	cmp    eax,0x3f402491
  419498:	jb     0x41947d
  41949a:	inc    esi
  41949b:	cmp    BYTE PTR ds:0x2933ff05,0xb4
  4194a2:	mov    DWORD PTR [eax],ebx
  4194a4:	xor    BYTE PTR [ecx+0x1b30cfc4],cl
  4194aa:	xchg   ebx,eax
  4194ab:	mov    esi,0x49000da2
  4194b0:	push   ecx
  4194b1:	lahf   
  4194b2:	jae    0x4194ea
  4194b4:	popf   
  4194b5:	and    eax,DWORD PTR [edi-0x2c885fd9]
  4194bb:	pusha  
  4194bc:	jns    0x41952a
  4194be:	fdiv   DWORD PTR [ebx+0x7a]
  4194c1:	push   esp
  4194c2:	push   DWORD PTR [esi-0x3983f278]
  4194c8:	cmp    eax,0xaf06417
  4194cd:	jle    0x4194fa
  4194cf:	jmp    0xcf2cc6e5
  4194d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d5:	ja     0x419540
  4194d7:	sbb    esi,DWORD PTR [ecx+0x3953297f]
  4194dd:	repz jp 0x41952f
  4194e0:	adc    ah,BYTE PTR [eax]
  4194e2:	jecxz  0x4194e3
  4194e4:	dec    ecx
  4194e5:	fld    QWORD PTR [edx]
  4194e7:	and    BYTE PTR [eax+0x1],bl
  4194ea:	retf   
  4194eb:	iret   
  4194ec:	loop   0x419502
  4194ee:	retf   0x5cd3
  4194f1:	shl    BYTE PTR [ebp-0x2c],0xb1
  4194f5:	rcl    BYTE PTR [edi],0x29
  4194f8:	add    BYTE PTR fs:[edi+0x154d3c86],0x21
  419500:	sti    
  419501:	fwait
  419502:	cdq    
  419503:	fdivp  st(7),st
  419505:	test   al,0xbb
  419507:	jmp    0x510ad942
  41950c:	push   ebx
  41950d:	xor    al,BYTE PTR [edi-0x79]
  419510:	out    0x33,eax
  419512:	aas    
  419513:	lods   eax,DWORD PTR ds:[esi]
  419514:	mov    esi,0xe5c88900
  419519:	mov    WORD PTR [eax],?
  41951b:	mov    eax,edx
  41951d:	sbb    al,0x7e
  41951f:	rol    cl,1
  419521:	out    dx,al
  419522:	hlt    
  419523:	lods   al,BYTE PTR ds:[esi]
  419524:	popa   
  419525:	xchg   ecx,eax
  419526:	out    dx,al
  419527:	mov    edi,0x63e2700d
  41952c:	sbb    BYTE PTR [esi+ecx*1+0x1904e172],bh
  419533:	jbe    0x419514
  419535:	mov    eax,0x5f53108e
  41953a:	in     eax,dx
  41953b:	and    BYTE PTR [eax-0x7],0xcf
  41953f:	(bad)  [eax+ebx*8-0x20]
  419543:	push   es
  419544:	or     ecx,ebp
  419546:	inc    edi
  419547:	pop    edx
  419548:	bound  esp,QWORD PTR [esi]
  41954a:	inc    ebp
  41954b:	mov    bl,BYTE PTR [ebp-0x4c]
  41954e:	push   cs
  41954f:	adc    eax,0xe5cfb683
  419554:	cmp    al,0xd9
  419556:	into   
  419557:	jne    0x4195c7
  419559:	lods   al,BYTE PTR ds:[esi]
  41955a:	out    0x68,al
  41955c:	jnp    0x4195af
  41955e:	das    
  41955f:	push   esi
  419560:	pop    edx
  419561:	test   DWORD PTR [ebx-0x540986c4],0xf0e2668c
  41956b:	aaa    
  41956c:	mov    bl,0xe1
  41956e:	test   eax,0x6d788391
  419573:	jmp    0x4195e2
  419575:	in     eax,dx
  419576:	test   BYTE PTR [ecx-0x51],al
  419579:	(bad)  
  41957a:	sub    eax,0xaf2d9e15
  41957f:	jne    0x41953b
  419581:	fs inc esi
  419583:	stos   DWORD PTR es:[edi],eax
  419584:	mov    eax,0xb997f6b9
  419589:	ins    DWORD PTR es:[edi],dx
  41958a:	inc    eax
  41958b:	mov    edx,0xd4d40757
  419590:	cmp    bh,BYTE PTR ds:0xb2deff53
  419596:	cld    
  419597:	pop    ebx
  419598:	sbb    BYTE PTR [eax+0x57],cl
  41959b:	sbb    esp,ebx
  41959d:	jp     0x4195a1
  41959f:	js     0x419612
  4195a1:	js     0x4195d2
  4195a3:	fadd   st,st(3)
  4195a5:	call   FWORD PTR [ebx-0x1ef73bb6]
  4195ab:	clc    
  4195ac:	cmp    eax,esi
  4195ae:	cmp    eax,0x835704a0
  4195b3:	rcl    DWORD PTR [ebx+0x79],0x9d
  4195b7:	arpl   WORD PTR [ebx+0x28b4d3b7],si
  4195bd:	ins    DWORD PTR es:[edi],dx
  4195be:	mov    eax,0x2f47ddab
  4195c3:	lock lods al,BYTE PTR ds:[esi]
  4195c5:	in     eax,dx
  4195c6:	inc    ebp
  4195c7:	sbb    bh,BYTE PTR [esp+esi*1-0x39e65464]
  4195ce:	shl    DWORD PTR [ebp+0x62],cl
  4195d1:	outs   dx,BYTE PTR ds:[esi]
  4195d2:	ret    0x2cb
  4195d5:	inc    ebp
  4195d6:	imul   esp,DWORD PTR [edx-0x20808fe3],0xffffffb5
  4195dd:	xor    DWORD PTR [ebx-0x6b],esp
  4195e0:	xor    al,0x1a
  4195e2:	or     bl,BYTE PTR [edx+0x46]
  4195e5:	add    eax,0xc1cf936f
  4195ea:	fwait
  4195eb:	nop
  4195ec:	loope  0x419571
  4195ee:	int3   
  4195ef:	xor    al,0xd8
  4195f1:	outs   dx,BYTE PTR ds:[esi]
  4195f2:	pop    esp
  4195f3:	leave  
  4195f4:	jmp    0x1b54af3a
  4195f9:	(bad)  
  4195fa:	push   ss
  4195fb:	hlt    
  4195fc:	adc    eax,0xf9e44aa0
  419601:	cmc    
  419602:	add    dl,ch
  419604:	pushf  
  419605:	repz leave 
  419607:	std    
  419608:	fwait
  419609:	call   0x944b:0xcd04da2b
  419610:	scas   al,BYTE PTR es:[edi]
  419611:	cmc    
  419612:	sub    bh,BYTE PTR [edx]
  419614:	and    edx,DWORD PTR [ebx-0x1a469b93]
  41961a:	mov    db3,ebp
  41961d:	xchg   ebx,eax
  41961e:	int    0x19
  419620:	sbb    esi,0x20
  419623:	pop    ebx
  419624:	arpl   WORD PTR [esi],bp
  419626:	into   
  419627:	pusha  
  419628:	cmp    edi,DWORD PTR [ebp-0xc]
  41962b:	mov    al,ds:0x55598cc
  419630:	(bad)  
  419631:	mul    BYTE PTR [ebx+ecx*8]
  419634:	rol    DWORD PTR [esi],1
  419636:	pushf  
  419637:	push   esi
  419638:	sub    ch,BYTE PTR [ebp+0x2eb797e0]
  41963e:	jl     0x419649
  419640:	push   0xbe579b4d
  419645:	inc    edx
  419646:	mov    WORD PTR [esp+ecx*4-0x19583fdf],ss
  41964d:	push   ss
  41964e:	lahf   
  41964f:	pop    esp
  419650:	ja     0x419666
  419652:	loop   0x41968c
  419654:	adc    cl,BYTE PTR [ebx-0x4f7ca2a6]
  41965a:	clc    
  41965b:	(bad)  
  41965c:	mov    esi,0xc9f97953
  419661:	call   0x63fbdf19
  419666:	loopne 0x4196c2
  419668:	adc    bh,dh
  41966a:	test   DWORD PTR [ebp-0x2f],edx
  41966d:	push   ebp
  41966e:	and    esp,DWORD PTR [ecx+eiz*8+0x4a]
  419672:	imul   eax,DWORD PTR ds:[edx+0x79],0xf
  419677:	pop    ebx
  419678:	(bad)  
  419679:	jo     0x4196e0
  41967b:	bound  edi,QWORD PTR [edx+edx*4+0x55]
  41967f:	pop    esp
  419680:	adc    ah,BYTE PTR [eax+0x5f073090]
  419686:	mov    bl,0xd9
  419688:	lock test ah,al
  41968b:	lods   eax,DWORD PTR ds:[esi]
  41968c:	retf   0x9c2f
  41968f:	pop    ebp
  419690:	iret   
  419691:	cdq    
  419692:	add    al,0xb4
  419694:	imul   eax,DWORD PTR [edx+0x18],0x6a
  419698:	idiv   DWORD PTR [ebp-0x2]
  41969b:	std    
  41969c:	push   0x4c9011d3
  4196a1:	mov    cs,WORD PTR [edx+0x1e]
  4196a4:	xchg   esp,eax
  4196a5:	mov    edi,0x68567a1e
  4196aa:	nop
  4196ab:	fsub   DWORD PTR [ebp+0x49]
  4196ae:	inc    edx
  4196af:	xchg   ch,bh
  4196b1:	and    eax,0x1442a5e5
  4196b6:	test   al,0xd3
  4196b8:	or     ebp,DWORD PTR [edx]
  4196ba:	sahf   
  4196bb:	shr    ebx,0x10
  4196be:	mov    eax,ds:0x725be444
  4196c3:	dec    edx
  4196c4:	jg     0x419722
  4196c6:	lahf   
  4196c7:	xchg   BYTE PTR [edi],dh
  4196c9:	pop    eax
  4196ca:	jnp    0x419717
  4196cc:	adc    eax,0xc79d982f
  4196d1:	shl    DWORD PTR [eax-0x66],1
  4196d4:	cwde   
  4196d5:	je     0x4196a5
  4196d7:	ret    0xb2d8
  4196da:	fadd   st(1),st
  4196dc:	cdq    
  4196dd:	mov    DWORD PTR [esp+edx*2],0x5721bf93
  4196e4:	sbb    DWORD PTR [edi-0x3db0192c],edi
  4196ea:	dec    eax
  4196eb:	mov    DWORD PTR [edi+0x78948f14],esi
  4196f1:	mov    eax,ds:0x6d4b4e03
  4196f6:	std    
  4196f7:	cs jle 0x419766
  4196fa:	xlat   BYTE PTR ds:[ebx]
  4196fb:	push   edi
  4196fc:	pop    esi
  4196fd:	jnp    0x419771
  4196ff:	fimul  WORD PTR [esp+ecx*8]
  419702:	mov    eax,ds:0xb4c5dbe6
  419707:	mov    dl,0xa3
  419709:	add    DWORD PTR [edi+0x2e],edi
  41970c:	adc    BYTE PTR ds:0xa4726490,ch
  419712:	ror    DWORD PTR [esi],0xb5
  419715:	dec    BYTE PTR [eax+0x6d7d21c]
  41971b:	and    al,0x2a
  41971d:	jge    0x419772
  41971f:	cs xchg ebx,eax
  419721:	callw  0xaf9c
  419725:	sub    eax,0xc0186f9e
  41972a:	and    ecx,DWORD PTR [ebp+0x63]
  41972d:	jb     0x419786
  41972f:	xor    dl,BYTE PTR [edx]
  419731:	mov    ebx,0x6a195dd4
  419736:	cld    
  419737:	lahf   
  419738:	in     eax,0x5
  41973a:	xor    al,0x0
  41973c:	inc    ebx
  41973d:	nop    DWORD PTR [ecx-0x2e]
  419741:	and    DWORD PTR [edx+0x99cedd3],0x21402269
  41974b:	mov    ebx,0xf2864a64
  419750:	mov    eax,ds:0x66c8cc92
  419755:	or     al,0x86
  419757:	adc    al,0x77
  419759:	xor    DWORD PTR [ebp+0x5b2f7272],0xb7bdb72f
  419763:	dec    esp
  419764:	std    
  419765:	inc    eax
  419766:	mov    ds,ebx
  419768:	jb     0x4197df
  41976a:	mov    edi,0xc040360f
  41976f:	or     BYTE PTR [eax-0x6dc888e0],dh
  419775:	dec    ebx
  419776:	(bad)  
  419777:	call   0x9b7c:0xacb4fcee
  41977e:	mov    ebp,0xced9a84a
  419783:	cmp    bl,BYTE PTR [ebx-0x7a655125]
  419789:	sub    al,0xaa
  41978b:	mov    eax,0x88d77a8d
  419790:	test   DWORD PTR [edi+ebp*1],edi
  419793:	xchg   edx,eax
  419794:	adc    edi,DWORD PTR [ebx+0x0]
  419797:	pop    ds
  419798:	test   eax,0xb4e49f67
  41979d:	push   ecx
  41979e:	aaa    
  41979f:	pushf  
  4197a0:	jnp    0x419752
  4197a2:	sub    eax,0x2ce4fa0
  4197a7:	and    eax,0x1655b2f7
  4197ac:	mov    ch,bl
  4197ae:	sub    eax,0xe0f064d5
  4197b3:	iret   
  4197b4:	xchg   ebp,eax
  4197b5:	pop    esi
  4197b6:	or     BYTE PTR [edi],ch
  4197b8:	sahf   
  4197b9:	or     BYTE PTR [ebx],cl
  4197bb:	call   0x6bbe2d75
  4197c0:	test   eax,0x22673ce0
  4197c5:	mov    ecx,0x523dc80c
  4197ca:	out    0x71,al
  4197cc:	pop    eax
  4197cd:	sub    bl,bh
  4197cf:	and    al,0xbb
  4197d1:	cmp    eax,0xfdee2f8b
  4197d6:	push   es
  4197d7:	and    DWORD PTR [ebx+0x4b],eax
  4197da:	mov    bl,0x80
  4197dc:	imul   ecx,DWORD PTR [esi+0x7],0xfb1d8f3e
  4197e3:	mov    ds:0xb38d15f8,al
  4197e8:	or     DWORD PTR [ecx],esp
  4197ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197eb:	mov    BYTE PTR [edi-0x71],cl
  4197ee:	mov    cl,0xe6
  4197f0:	or     edi,DWORD PTR [ebx]
  4197f2:	or     BYTE PTR [eax+eiz*8+0x1],0xdb
  4197f7:	and    edx,DWORD PTR [eax+0x6cbe597a]
  4197fd:	fst    DWORD PTR [edi+0x55]
  419800:	mov    ds:0x1d219525,al
  419805:	pop    ebx
  419806:	add    edi,DWORD PTR [esi+eiz*2+0xb5e574a]
  41980d:	xor    esp,edi
  41980f:	fucom  st(4)
  419811:	or     BYTE PTR [eax+0x47],al
  419814:	outs   dx,BYTE PTR ds:[esi]
  419815:	add    DWORD PTR [ebp+0x11],0x10ef4c7d
  41981c:	sbb    bl,ah
  41981e:	jns    0x419847
  419820:	mov    esi,0x2d5f0bc2
  419825:	pop    edx
  419826:	inc    eax
  419827:	pop    eax
  419828:	mov    al,ds:0x11317941
  41982d:	fxch   st(7)
  41982f:	dec    ebp
  419830:	xlat   BYTE PTR ds:[ebx]
  419831:	or     edi,DWORD PTR [esp+edi*2+0x1e]
  419835:	jp     0x4197f1
  419837:	pop    edi
  419838:	imul   ecx,DWORD PTR [ecx],0xb5f7c520
  41983e:	je     0x4197e3
  419840:	mov    ecx,0x2aff0deb
  419845:	ror    BYTE PTR [ecx-0x7a1387c8],0xf0
  41984c:	mov    eax,ds:0xf6396aa
  419851:	pop    ebp
  419852:	mul    DWORD PTR [esi-0xd371611]
  419858:	into   
  419859:	push   ebx
  41985a:	xor    bh,BYTE PTR [edx+0x41]
  41985d:	inc    esp
  41985e:	mov    edi,DWORD PTR [esi-0x5d]
  419861:	jo     0x41981a
  419863:	js     0x4198a9
  419865:	out    0x59,al
  419867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419868:	shl    esi,0x11
  41986b:	xor    dh,ch
  41986d:	inc    ecx
  41986e:	(bad)  
  41986f:	es daa 
  419871:	cld    
  419872:	cmp    ecx,DWORD PTR [ebx]
  419874:	shl    BYTE PTR [ebx+0x2d],1
  419877:	lea    ebp,[esi]
  419879:	jno    0x41987a
  41987b:	sbb    esp,DWORD PTR [eax-0x27b035d2]
  419881:	xor    bl,0xb6
  419884:	sahf   
  419885:	mov    bl,al
  419887:	in     al,0x6d
  419889:	ss in  al,dx
  41988b:	sbb    BYTE PTR [edx-0x72],ah
  41988e:	pop    ecx
  41988f:	outs   dx,BYTE PTR ds:[esi]
  419890:	out    dx,eax
  419891:	mov    dl,0x86
  419893:	fisttp QWORD PTR [esi+ecx*4]
  419896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419897:	xchg   edx,eax
  419898:	clc    
  419899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41989a:	out    0xfc,eax
  41989c:	cmove  eax,ecx
  41989f:	xchg   ecx,eax
  4198a0:	popf   
  4198a1:	add    DWORD PTR [ecx-0x35156c5b],0xffffff90
  4198a8:	pop    es
  4198a9:	push   ds
  4198aa:	pop    edx
  4198ab:	in     eax,dx
  4198ac:	push   edi
  4198ad:	inc    ecx
  4198ae:	sahf   
  4198af:	pop    ebp
  4198b0:	js     0x4198da
  4198b2:	xchg   edx,eax
  4198b3:	mov    al,0x1d
  4198b5:	sub    DWORD PTR [ecx+0x4cd306a2],0x0
  4198bc:	ret    0xf7b1
  4198bf:	imul   ecx,DWORD PTR [edi-0x43],0xffffffa7
  4198c3:	aad    0x1d
  4198c5:	inc    esp
  4198c6:	mov    ebp,0x6f234290
  4198cb:	ror    DWORD PTR [edi+0x2f],cl
  4198ce:	inc    ecx
  4198cf:	xchg   edi,eax
  4198d0:	pop    edi
  4198d1:	mov    ch,ch
  4198d3:	retf   0x4d58
  4198d6:	add    DWORD PTR [ebp+0x358fccf],0xffffff97
  4198dd:	(bad)  
  4198de:	pop    edi
  4198df:	outs   dx,BYTE PTR ds:[esi]
  4198e0:	clc    
  4198e1:	mov    bl,0x14
  4198e3:	les    ebx,FWORD PTR [edi+0x9841faf]
  4198e9:	pop    eax
  4198ea:	sbb    BYTE PTR [ecx+0x71],0x98
  4198ee:	sbb    bh,0x8
  4198f1:	xchg   ecx,eax
  4198f2:	sbb    DWORD PTR [ebp-0x56],edi
  4198f5:	enter  0xa8c9,0x96
  4198f9:	inc    edi
  4198fa:	je     0x419961
  4198fc:	or     BYTE PTR [edi+0x1a697e8d],dh
  419902:	retf   
  419903:	fldenv [edx+0x53ed116e]
  419909:	xchg   esp,eax
  41990a:	pop    es
  41990b:	ja     0x41994a
  41990d:	mov    BYTE PTR [ebx+eiz*1-0x85c4e1e],cl
  419914:	pop    ecx
  419915:	test   eax,0xf931df51
  41991a:	inc    ebp
  41991b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991d:	not    dh
  41991f:	sbb    BYTE PTR gs:[esi+0x57],dl
  419923:	mov    ecx,0x8ab93b8f
  419928:	call   0xb0343e6f
  41992d:	sub    esp,DWORD PTR [eax]
  41992f:	push   0xfffffffd
  419931:	mov    DWORD PTR [ebp-0x62ee79d4],0x4a986e28
  41993b:	inc    ebx
  41993c:	xchg   ebx,eax
  41993d:	rcl    BYTE PTR [edx],1
  41993f:	add    ebp,DWORD PTR [edx+ebx*8+0x354e7eb7]
  419946:	push   ss
  419947:	mov    al,ds:0x2f835457
  41994c:	and    al,0x8b
  41994e:	xlat   BYTE PTR ds:[ebx]
  41994f:	popf   
  419950:	or     bl,BYTE PTR [ecx-0x57bd3ef1]
  419956:	mov    edx,0xea8febff
  41995b:	push   edx
  41995c:	fild   QWORD PTR [ebx+0x324f8da7]
  419963:	inc    esi
  419964:	mov    cl,0x4f
  419966:	mov    ah,0xbc
  419968:	pop    eax
  419969:	push   eax
  41996a:	pop    esi
  41996b:	inc    edi
  41996c:	call   0x2c81746f
  419971:	xchg   BYTE PTR [eax-0x1958f2dc],bl
  419977:	loopne 0x4199de
  419979:	mov    ecx,0xb3641948
  41997e:	mov    ds:0xb17b3706,al
  419983:	sub    eax,DWORD PTR [ebx]
  419985:	jmp    0xf83b9bdf
  41998a:	and    BYTE PTR ss:[ebx-0x6c],cl
  41998e:	inc    esp
  41998f:	out    dx,eax
  419990:	xor    al,BYTE PTR [ecx]
  419992:	pusha  
  419993:	xlat   BYTE PTR ds:[ebx]
  419994:	jns    0x419952
  419996:	test   eax,0x2e407ec0
  41999b:	cld    
  41999c:	(bad)  
  41999d:	fiadd  DWORD PTR [ebx-0x15c368f9]
  4199a3:	bound  ebx,QWORD PTR [ebx-0x14a3fcd]
  4199a9:	enter  0x2126,0x5a
  4199ad:	jp     0x419962
  4199af:	call   0x7b7b:0xaf359852
  4199b6:	xchg   esi,eax
  4199b7:	stos   DWORD PTR es:[edi],eax
  4199b8:	jmp    0x215ddaa3
  4199bd:	xchg   esp,eax
  4199be:	jbe    0x4199a0
  4199c0:	adc    BYTE PTR [edx-0x47],0x47
  4199c4:	repz jns 0x4199b6
  4199c7:	outs   dx,DWORD PTR ds:[esi]
  4199c8:	or     eax,0x531a4f7a
  4199cd:	pop    ebx
  4199ce:	sub    eax,0xef97ea5f
  4199d3:	(bad)  
  4199d4:	in     al,dx
  4199d5:	xor    dh,dl
  4199d7:	popf   
  4199d8:	sbb    eax,0x172b634
  4199dd:	jno    0x419a21
  4199df:	call   0x74d48be0
  4199e4:	ret    
  4199e5:	jmp    0x385:0x3596ca70
  4199ec:	ret    
  4199ed:	outs   dx,DWORD PTR ds:[esi]
  4199ee:	clc    
  4199ef:	inc    edi
  4199f0:	adc    bl,bh
  4199f2:	inc    ecx
  4199f3:	arpl   WORD PTR [ebp+0x14],sp
  4199f6:	or     BYTE PTR [ebx+0x33e79ed2],dh
  4199fc:	test   eax,0x8c17eb2
  419a01:	pop    ebx
  419a02:	imul   edx,DWORD PTR [edx-0x1b26d66c],0xffffffc6
  419a09:	scas   al,BYTE PTR es:[edi]
  419a0a:	cmp    eax,0x98695ab8
  419a0f:	fidiv  WORD PTR [ecx-0xb]
  419a12:	adc    DWORD PTR [eax-0x486fdd11],edi
  419a18:	pop    ss
  419a19:	mov    BYTE PTR [ecx],bh
  419a1b:	xchg   esi,eax
  419a1c:	pop    ebx
  419a1d:	shl    DWORD PTR [ebp+ebx*1-0x4b1d90cf],1
  419a24:	cmp    BYTE PTR [edx+0x19d40ec],dh
  419a2a:	pop    es
  419a2b:	jmp    0x5237:0x9bee48cf
  419a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a33:	in     eax,0xca
  419a35:	(bad)  
  419a37:	gs loop 0x419a3c
  419a3a:	sar    BYTE PTR [esi],cl
  419a3c:	shl    DWORD PTR [esi],0x13
  419a3f:	std    
  419a40:	outs   dx,BYTE PTR ds:[esi]
  419a41:	xor    cl,BYTE PTR [eax+0x7d]
  419a44:	push   ebp
  419a45:	jl     0x419a21
  419a47:	fst    DWORD PTR [ecx-0x3b]
  419a4a:	cld    
  419a4b:	int3   
  419a4c:	mov    bh,0x42
  419a4e:	dec    ecx
  419a4f:	cdq    
  419a50:	add    DWORD PTR [ebp+0x22],ebx
  419a53:	mov    BYTE PTR [edx+0x2db2409a],dl
  419a59:	mov    esi,ebx
  419a5b:	sub    DWORD PTR [ebp-0x45f2186a],ecx
  419a61:	adc    BYTE PTR [ebx+ebp*4-0x4a],ch
  419a65:	out    0xe9,eax
  419a67:	fprem  
  419a69:	sbb    DWORD PTR [bx+si],0xabf5f23c
  419a70:	mov    dl,0xc2
  419a72:	retf   
  419a73:	mov    cl,0xcf
  419a75:	push   cs
  419a76:	xchg   si,ax
  419a78:	add    DWORD PTR [ebp+eax*4+0x1b],0xffffffd8
  419a7d:	nop
  419a7e:	aad    0xd4
  419a80:	inc    eax
  419a81:	out    0x47,eax
  419a83:	jle    0x419a7b
  419a85:	lds    esp,FWORD PTR [edx-0x5c]
  419a88:	or     ebp,ebp
  419a8a:	mov    ds:0xb3ded20e,eax
  419a8f:	mov    ebp,0xa8611c3e
  419a94:	test   dh,cl
  419a96:	mov    ebp,esi
  419a98:	jnp    0x419b0e
  419a9a:	retf   
  419a9b:	int    0x62
  419a9d:	cld    
  419a9e:	ret    
  419a9f:	aad    0xbe
  419aa1:	rcr    bl,0xbf
  419aa4:	jl     0x419a69
  419aa6:	and    ebx,esp
  419aa8:	int    0x61
  419aaa:	fidiv  WORD PTR [esi]
  419aac:	shl    edx,0x5c
  419aaf:	cmp    esp,DWORD PTR [ebx+0x3a]
  419ab2:	mov    esp,DWORD PTR [eax-0x770aaa16]
  419ab8:	int    0x36
  419aba:	jbe    0x419b09
  419abc:	sub    BYTE PTR [edx],dh
  419abe:	int3   
  419abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ac0:	and    DWORD PTR [edx+0x42],ebp
  419ac3:	adc    ch,dl
  419ac5:	aad    0x79
  419ac7:	loope  0x419ac5
  419ac9:	pop    ss
  419aca:	gs cdq 
  419acc:	int3   
  419acd:	or     BYTE PTR [edx],dh
  419acf:	mov    ebx,0xcd5a91b6
  419ad4:	std    
  419ad5:	out    0xaf,al
  419ad7:	cmp    BYTE PTR [ebp+0x8],al
  419ada:	and    ebx,DWORD PTR [eax]
  419adc:	aad    0xc5
  419ade:	push   cs
  419adf:	sbb    ecx,ebp
  419ae1:	retf   
  419ae2:	pop    edx
  419ae3:	jae    0x419b07
  419ae5:	aaa    
  419ae6:	aam    0x96
  419ae8:	jmp    0x419b16
  419aea:	push   cs
  419aeb:	ja     0x419b19
  419aed:	push   ds
  419aee:	xor    eax,0x61521ed3
  419af3:	aad    0xe7
  419af5:	push   esi
  419af6:	fcom   st(0)
  419af8:	mov    eax,0x791dde05
  419afd:	jmp    0x419b55
  419aff:	popa   
  419b00:	mov    ecx,0xa304874f
  419b05:	mov    bl,0x6
  419b07:	pop    esp
  419b08:	fldenv [esi+0x5f]
  419b0b:	stc    
  419b0c:	shl    ch,1
  419b0e:	mov    edi,0x3749080e
  419b13:	ins    BYTE PTR es:[edi],dx
  419b14:	xchg   esi,eax
  419b15:	rcl    DWORD PTR [ebp+0x12],1
  419b18:	mov    ecx,?
  419b1a:	mov    ds:0x48b1ee44,al
  419b1f:	inc    ebp
  419b20:	ficom  DWORD PTR [edx-0x7e]
  419b23:	jle    0x419b0c
  419b25:	mov    ds:0xecabccb4,eax
  419b2a:	(bad)  
  419b2b:	jne    0x419aad
  419b2d:	cld    
  419b2e:	enter  0x2c80,0xfa
  419b32:	cmp    al,0x5a
  419b34:	jmp    0x419b54
  419b36:	shl    DWORD PTR [ecx+0x50363a8e],cl
  419b3c:	(bad)  
  419b3d:	sahf   
  419b3e:	adc    DWORD PTR [edi+0x7c],edi
  419b41:	adc    al,ah
  419b43:	mov    dl,0x9a
  419b45:	clc    
  419b46:	pop    edi
  419b47:	ret    
  419b48:	imul   edx,DWORD PTR [edx],0x889d1175
  419b4e:	jo     0x419bb7
  419b50:	lods   eax,DWORD PTR ds:[esi]
  419b51:	jo     0x419af8
  419b53:	adc    al,0x5
  419b55:	outs   dx,BYTE PTR ds:[esi]
  419b56:	add    DWORD PTR [ebp-0x11],0x55
  419b5a:	xchg   ebp,eax
  419b5b:	fsubrp st(6),st
  419b5d:	jns    0x419bb2
  419b5f:	push   0x9fa42254
  419b64:	cli    
  419b65:	cmp    eax,0x4be097ae
  419b6a:	lods   al,BYTE PTR ds:[esi]
  419b6b:	popf   
  419b6c:	not    DWORD PTR [ebx]
  419b6e:	xor    bl,BYTE PTR [ecx+0x436ea7b0]
  419b74:	outs   dx,BYTE PTR ds:[esi]
  419b75:	icebp  
  419b76:	push   ebx
  419b77:	gs in  al,0xda
  419b7a:	scas   eax,DWORD PTR es:[edi]
  419b7b:	pop    es
  419b7c:	(bad)  
  419b7d:	mov    ds:0x4222229e,eax
  419b82:	enter  0x5dab,0x93
  419b86:	fsub   DWORD PTR [edi+0x3f]
  419b89:	fiadd  WORD PTR [edi+0x1e]
  419b8c:	adc    dh,BYTE PTR [edi+0xc]
  419b8f:	inc    eax
  419b90:	outs   dx,DWORD PTR ds:[esi]
  419b91:	mov    esi,0x593234a0
  419b96:	mov    esp,0x14ac7487
  419b9b:	mov    ecx,0xb4ebbab0
  419ba0:	cmp    cl,BYTE PTR [ecx]
  419ba2:	push   cs
  419ba3:	sub    al,0x2c
  419ba5:	pop    ebx
  419ba6:	aaa    
  419ba7:	jbe    0x419b9a
  419ba9:	adc    cl,bh
  419bab:	xchg   ebp,eax
  419bac:	add    al,0x1c
  419bae:	clc    
  419baf:	xor    dl,BYTE PTR [ecx-0x2c]
  419bb2:	mov    ds:0xd76ce8e4,eax
  419bb7:	jmp    0xebb7:0xb9b5626b
  419bbe:	sub    al,0xe
  419bc0:	cli    
  419bc1:	ror    edi,cl
  419bc3:	mov    esi,0x3c76d9b0
  419bc8:	stos   DWORD PTR es:[edi],eax
  419bc9:	or     BYTE PTR [esi-0x76],ah
  419bcc:	cmc    
  419bcd:	(bad)  
  419bce:	push   ebp
  419bcf:	cmc    
  419bd0:	std    
  419bd1:	sbb    cl,BYTE PTR [ecx+0x37313150]
  419bd7:	jbe    0x419b82
  419bd9:	loop   0x419bc9
  419bdb:	push   ecx
  419bdc:	imul   edi,DWORD PTR [ebx+0x103d112],0xd351fd06
  419be6:	cmp    bl,BYTE PTR [edx+ecx*2]
  419be9:	rcl    BYTE PTR ds:0x4a05f5b9,0x38
  419bf0:	repnz push ebx
  419bf2:	sbb    DWORD PTR [ebp+0xc],0x5c
  419bf6:	dec    edx
  419bf7:	ds pop edx
  419bf9:	cli    
  419bfa:	jb     0x419bb5
  419bfc:	rcr    DWORD PTR [edi+edi*4+0x7ed03fec],0x3c
  419c04:	mov    bh,0xf3
  419c06:	jecxz  0x419bf7
  419c08:	aad    0x1a
  419c0a:	jnp    0x419c2b
  419c0c:	int3   
  419c0d:	aaa    
  419c0e:	mov    bh,0x88
  419c10:	inc    ebx
  419c11:	xchg   ecx,eax
  419c12:	mov    ah,dl
  419c14:	add    DWORD PTR [ebx+ecx*1+0x5d4c0f76],0x984a9674
  419c1f:	cmp    cl,bh
  419c21:	cmp    al,BYTE PTR [edx+0x7102c35e]
  419c27:	push   ebp
  419c28:	scas   eax,DWORD PTR es:[edi]
  419c29:	lahf   
  419c2a:	xor    BYTE PTR [ebp-0x17742f61],ah
  419c30:	sbb    dh,BYTE PTR [eax+ebx*4-0x1563e999]
  419c37:	pop    esi
  419c38:	inc    esp
  419c39:	xor    DWORD PTR [ebp-0x7e10fdbe],0xfffffff3
  419c40:	inc    edi
  419c41:	out    0xd4,al
  419c43:	jbe    0x419bfb
  419c45:	pusha  
  419c46:	adc    DWORD PTR [edx],ecx
  419c48:	ficomp DWORD PTR [eax+edi*1-0x43]
  419c4c:	rcr    DWORD PTR [ebx+0x32],cl
  419c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c50:	std    
  419c51:	(bad)  
  419c52:	test   al,0x61
  419c54:	out    dx,al
  419c55:	push   ss
  419c56:	lock xor eax,0xea84a7db
  419c5c:	jl     0x419c1e
  419c5e:	mov    DWORD PTR [eax+edi*4],ebp
  419c61:	xchg   esp,eax
  419c62:	cmp    eax,0x57ba9e4b
  419c67:	ret    0x5208
  419c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6b:	sbb    esi,DWORD PTR [ebx]
  419c6d:	sub    ebp,DWORD PTR [eax+0x9a7f784]
  419c73:	sbb    BYTE PTR [eax],ah
  419c75:	push   ebp
  419c76:	lea    esp,[esp+esi*8]
  419c79:	loop   0x419bff
  419c7b:	dec    ebp
  419c7c:	ins    DWORD PTR es:[edi],dx
  419c7d:	mov    bl,0x4
  419c7f:	lods   al,BYTE PTR ds:[esi]
  419c80:	or     BYTE PTR [esi+0x7acde06a],dl
  419c86:	add    ebp,edx
  419c88:	repnz mov bl,0x17
  419c8b:	or     ah,ah
  419c8d:	aam    0xac
  419c8f:	lsl    edi,WORD PTR [eax+ebx*2-0x80]
  419c94:	adc    BYTE PTR [edi-0x1a],cl
  419c97:	cli    
  419c98:	popf   
  419c99:	int    0xf1
  419c9b:	mov    esi,0x831ce32c
  419ca0:	rcr    BYTE PTR [edi+0x4b],0x6f
  419ca4:	pop    ss
  419ca5:	xlat   BYTE PTR ds:[ebx]
  419ca6:	add    bh,BYTE PTR [edi+ebx*1]
  419ca9:	(bad)  [ebp-0x6f]
  419cac:	sbb    DWORD PTR [esi+0x5ddacc6c],ebp
  419cb2:	aam    0x97
  419cb4:	out    0xb6,eax
  419cb6:	adc    bl,bh
  419cb8:	sub    ah,bl
  419cba:	adc    dh,BYTE PTR [edx]
  419cbc:	and    ecx,DWORD PTR [eax+0x233d51e5]
  419cc2:	dec    esi
  419cc3:	xchg   ecx,eax
  419cc4:	(bad)  
  419cc5:	sahf   
  419cc6:	sub    BYTE PTR [eax+0x7d391ffb],dl
  419ccc:	scas   eax,DWORD PTR es:[edi]
  419ccd:	cmp    ebp,edx
  419ccf:	fcom   DWORD PTR [ebx]
  419cd1:	or     al,0x4
  419cd3:	adc    DWORD PTR [ebp+0x28f4dbd1],edi
  419cd9:	cmp    al,0x26
  419cdb:	test   ah,ah
  419cdd:	je     0x419c73
  419cdf:	clc    
  419ce0:	inc    ebx
  419ce1:	adc    BYTE PTR [esi-0x27],0xc6
  419ce5:	jmp    0x6b41e7df
  419cea:	xlat   BYTE PTR ds:[ebx]
  419ceb:	jmp    0xfb1b:0x4cb8c04
  419cf2:	push   cs
  419cf3:	or     eax,0x54cd73cd
  419cf8:	lds    edx,FWORD PTR [ecx]
  419cfa:	aam    0x78
  419cfc:	xchg   edx,eax
  419cfd:	ror    DWORD PTR ds:0xcfccc214,cl
  419d03:	fldenv [ebp-0x7a9875bb]
  419d09:	lods   eax,DWORD PTR ds:[esi]
  419d0a:	lea    edx,[eax-0x2d08a93c]
  419d10:	lea    esp,[ebp-0x3eddca0c]
  419d16:	ficom  WORD PTR [ecx]
  419d18:	add    BYTE PTR [edx+0x19787487],dh
  419d1e:	ror    BYTE PTR ds:0x725fbce8,cl
  419d24:	out    0x31,eax
  419d26:	in     al,dx
  419d27:	and    BYTE PTR [ebx-0x7],bh
  419d2a:	jmp    0x419cc6
  419d2c:	adc    eax,0x4b8629a9
  419d31:	ds jno 0x419d0d
  419d34:	stos   DWORD PTR es:[edi],eax
  419d35:	(bad)  
  419d36:	dec    ecx
  419d37:	cmp    bh,ah
  419d39:	mov    bh,0x59
  419d3b:	xchg   edi,eax
  419d3c:	fisubr DWORD PTR [ecx]
  419d3e:	out    0x17,al
  419d40:	aaa    
  419d41:	ds push ss
  419d43:	pop    ebx
  419d44:	xor    al,0xe9
  419d46:	pop    ecx
  419d47:	mov    BYTE PTR [ebp+0x77be8991],dh
  419d4d:	adc    eax,0x42903b94
  419d52:	imul   BYTE PTR [ebx-0x80]
  419d55:	dec    ebx
  419d56:	and    eax,0xc81100dc
  419d5b:	out    dx,al
  419d5c:	xchg   DWORD PTR [esi+ebp*4+0x2fcf0d26],ebx
  419d63:	cdq    
  419d64:	cmp    al,0x1c
  419d66:	iret   
  419d67:	xor    al,0x4e
  419d69:	xor    edx,DWORD PTR [edx]
  419d6b:	std    
  419d6c:	add    DWORD PTR [edi],0x54
  419d6f:	in     eax,dx
  419d70:	inc    ebp
  419d71:	pop    esp
  419d72:	dec    ebp
  419d73:	push   0x4f
  419d75:	or     dl,BYTE PTR [ebx]
  419d77:	xor    ah,BYTE PTR [esi]
  419d79:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419d7b:	lea    ebx,[edi+0x76]
  419d7e:	lods   eax,DWORD PTR ds:[esi]
  419d7f:	dec    ecx
  419d80:	push   es
  419d81:	sbb    al,BYTE PTR [edx-0xa42ef31]
  419d87:	fcomp  QWORD PTR [ecx+0x73]
  419d8a:	xor    ah,0x58
  419d8d:	sbb    esi,DWORD PTR [edx+0x9b688da]
  419d93:	xchg   esi,eax
  419d94:	jge    0x419d2f
  419d96:	cdq    
  419d97:	pop    ebp
  419d98:	data16 das 
  419d9a:	aad    0xbf
  419d9c:	stc    
  419d9d:	xor    al,0x68
  419d9f:	mov    WORD PTR [ebx],ss
  419da1:	dec    ebp
  419da2:	cwde   
  419da3:	aam    0xa7
  419da5:	jle    0x419d93
  419da7:	rol    DWORD PTR [ecx],cl
  419da9:	adc    DWORD PTR [edx+0x55330994],0xffffffd3
  419db0:	(bad)  
  419db2:	fs pusha 
  419db4:	xchg   DWORD PTR [ecx],ecx
  419db6:	or     DWORD PTR [edi+0x2188df70],ecx
  419dbc:	jmp    0xc864:0x4215fbb7
  419dc3:	inc    edi
  419dc4:	cmc    
  419dc5:	sbb    al,0x51
  419dc7:	mov    esi,0x817ae610
  419dcc:	add    dh,dh
  419dce:	(bad)  
  419dcf:	pop    eax
  419dd0:	mov    ah,0x7
  419dd2:	push   cs
  419dd3:	in     al,0x8a
  419dd5:	(bad)  
  419dd6:	pushf  
  419dd7:	pop    ecx
  419dd8:	mov    cl,0x7e
  419dda:	jecxz  0x419dba
  419ddc:	push   0xffffffc8
  419dde:	jmp    0x419e20
  419de0:	(bad)  
  419de1:	xchg   ebp,eax
  419de2:	in     al,0x4d
  419de4:	dec    esi
  419de5:	bnd jno 0x419dab
  419de8:	fcmove st,st(2)
  419dea:	and    BYTE PTR [ebp-0x7cb91a7d],0x39
  419df1:	ror    DWORD PTR [edi],1
  419df3:	mov    ebp,0xae7d5e07
  419df8:	inc    edi
  419df9:	and    eax,0x29641d0f
  419dfe:	mov    esi,0x75021b1f
  419e03:	test   BYTE PTR ds:0xfca66696,ah
  419e09:	ret    
  419e0a:	icebp  
  419e0b:	xchg   DWORD PTR [edx],esp
  419e0d:	jl     0x419d9e
  419e0f:	pop    esp
  419e10:	add    esi,0x7c1c5f26
  419e16:	xchg   ebx,eax
  419e17:	and    DWORD PTR [eax],ecx
  419e19:	add    eax,0xda0346a6
  419e1e:	in     eax,dx
  419e1f:	mov    eax,ds:0x25c6cb5d
  419e24:	jecxz  0x419e59
  419e26:	push   ds
  419e27:	inc    ebp
  419e28:	int3   
  419e29:	aad    0x26
  419e2b:	add    al,0xd3
  419e2d:	xor    ch,al
  419e2f:	gs push cs
  419e31:	or     cl,BYTE PTR [edi]
  419e33:	cmp    al,0xf9
  419e35:	(bad)  
  419e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e37:	xor    eax,0x79da7bb5
  419e3c:	sub    DWORD PTR [ebp+0x1d],esi
  419e3f:	into   
  419e40:	lods   al,BYTE PTR ds:[esi]
  419e41:	and    eax,0x60cdb03a
  419e46:	xor    edx,edi
  419e48:	add    BYTE PTR [edx],bh
  419e4a:	data16 cmp BYTE PTR ds:0x3a66a9ee,bh
  419e51:	mov    al,ds:0x71e6ac63
  419e56:	mov    eax,0xa093db69
  419e5b:	retf   0xbe8e
  419e5e:	pop    es
  419e5f:	jo     0x419e12
  419e61:	pop    ebp
  419e62:	stos   DWORD PTR es:[edi],eax
  419e63:	repz pop ebx
  419e65:	xor    eax,edi
  419e67:	lahf   
  419e68:	inc    edi
  419e69:	ja     0x419e19
  419e6b:	inc    ebp
  419e6c:	icebp  
  419e6d:	mov    ch,BYTE PTR [esi-0x31]
  419e70:	pop    es
  419e71:	xor    al,0xe2
  419e73:	out    0xa6,eax
  419e75:	test   eax,esp
  419e77:	dec    ecx
  419e78:	das    
  419e79:	jae    0x419e80
  419e7b:	push   esi
  419e7c:	mov    eax,0x6bfd46e7
  419e81:	jl     0x419ec4
  419e83:	ins    DWORD PTR es:[edi],dx
  419e84:	or     ch,BYTE PTR [esi-0x6c]
  419e87:	jns    0x419ed1
  419e89:	and    eax,0xbd7b631f
  419e8e:	int    0x7a
  419e90:	cmp    eax,0xc537496a
  419e95:	enter  0x676c,0xc8
  419e99:	in     eax,dx
  419e9a:	xchg   BYTE PTR [ecx],bh
  419e9c:	jne    0x419e1f
  419e9e:	mov    eax,ds:0xdd088114
  419ea3:	(bad)  
  419ea4:	jns    0x419e87
  419ea6:	jns    0x419e34
  419ea8:	jecxz  0x419e52
  419eaa:	and    al,0x31
  419eac:	sti    
  419ead:	shl    BYTE PTR [edx-0x55],cl
  419eb0:	jmp    0x1d559e39
  419eb5:	test   dl,0x76
  419eb8:	nop
  419eb9:	push   0xd980743a
  419ebe:	inc    ecx
  419ebf:	fdiv   QWORD PTR [edi+0x4c2ef429]
  419ec5:	(bad)  
  419ec7:	dec    edx
  419ec8:	xlat   BYTE PTR ds:[ebx]
  419ec9:	sbb    esp,DWORD PTR [ebx-0x1f]
  419ecc:	(bad)  
  419ecd:	push   esp
  419ece:	neg    DWORD PTR [esi]
  419ed0:	mov    BYTE PTR [edx+edi*4-0x56],bh
  419ed4:	xor    eax,0x8be43b85
  419ed9:	push   eax
  419eda:	push   0xbd6b19d8
  419edf:	stc    
  419ee0:	push   edx
  419ee1:	sub    al,0xb
  419ee3:	mov    edx,0xb87b8e7f
  419ee8:	icebp  
  419ee9:	(bad)  
  419eea:	rcr    DWORD PTR [edi],1
  419eec:	cdq    
  419eed:	fst    QWORD PTR [edi-0x2998ae78]
  419ef3:	cdq    
  419ef4:	or     BYTE PTR [ecx+0x25],cl
  419ef7:	int    0xff
  419ef9:	sahf   
  419efa:	imul   edx,eax,0x73
  419efd:	(bad)  
  419efe:	cli    
  419eff:	push   eax
  419f00:	(bad)
  419f04:	mov    bh,0xe8
  419f06:	mov    edx,0xedb41511
  419f0b:	dec    edi
  419f0c:	adc    eax,edx
  419f0e:	stos   BYTE PTR es:[edi],al
  419f0f:	test   al,0xbe
  419f11:	and    eax,0xeea5a03e
  419f16:	xlat   BYTE PTR ds:[ebx]
  419f17:	add    eax,0x34770cb8
  419f1c:	out    dx,eax
  419f1d:	cli    
  419f1e:	cmc    
  419f1f:	push   ss
  419f20:	lock and cl,0x5f
  419f24:	sti    
  419f25:	sbb    dl,BYTE PTR [ecx+0x39]
  419f28:	inc    esp
  419f29:	fnstcw WORD PTR [eax+0x66]
  419f2c:	(bad)  
  419f2d:	and    esi,esp
  419f2f:	les    esp,FWORD PTR es:[esi-0x19]
  419f33:	ret    
  419f34:	es inc eax
  419f36:	lock ret 
  419f38:	inc    edi
  419f39:	adc    esp,DWORD PTR [bp+0x2]
  419f3d:	pop    eax
  419f3e:	mov    al,ds:0x6876f8f9
  419f43:	mov    al,ds:0xeda3d2b0
  419f48:	popa   
  419f49:	cli    
  419f4a:	jmp    0x419fa0
  419f4c:	mov    dl,0xe7
  419f4e:	xor    DWORD PTR [edi],edi
  419f50:	and    al,0xfa
  419f52:	lods   eax,DWORD PTR ds:[esi]
  419f53:	call   0x8176:0x80938c86
  419f5a:	sahf   
  419f5b:	xor    DWORD PTR [eax],esi
  419f5d:	enter  0x30a0,0x98
  419f61:	mov    bl,0xc1
  419f63:	addr16 ja 0x419f67
  419f66:	(bad)  
  419f67:	jmp    0x331fff6f
  419f6c:	dec    edx
  419f6d:	pop    esi
  419f6e:	inc    ebx
  419f6f:	xchg   ebp,eax
  419f70:	hlt    
  419f71:	aad    0xac
  419f73:	popf   
  419f74:	mov    DWORD PTR [ebx],esi
  419f76:	leave  
  419f77:	xor    eax,0x70ef6244
  419f7c:	popa   
  419f7d:	in     al,dx
  419f7e:	add    BYTE PTR cs:[esi+0x6f],dl
  419f82:	sub    eax,0xd6d20eef
  419f87:	inc    eax
  419f88:	test   BYTE PTR [ecx+0x49],cl
  419f8b:	jno    0x419f61
  419f8d:	mov    ebp,0xe0406e4b
  419f92:	call   0x34da43dd
  419f97:	cmp    ah,BYTE PTR [esi+0x3477e607]
  419f9d:	jnp    0x419f95
  419f9f:	jle    0x419f42
  419fa1:	mov    eax,ds:0xe4c61b25
  419fa6:	mov    ds:0x7829b46d,eax
  419fab:	shl    ah,1
  419fad:	sub    bl,BYTE PTR [esi-0x7ecbb678]
  419fb3:	mov    edi,0xa7e7a188
  419fb8:	addr16 mov esi,?
  419fbb:	sbb    esp,0x9692bca
  419fc1:	and    bl,BYTE PTR [ebx-0x5a457f1f]
  419fc7:	arpl   WORD PTR [edx-0x1c],ax
  419fca:	push   edi
  419fcb:	lea    edx,[eax+0x40]
  419fce:	retf   
  419fcf:	cmc    
  419fd0:	mov    dh,0xd0
  419fd2:	sub    eax,0x8662e4dd
  419fd7:	mov    ds,WORD PTR [esi]
  419fd9:	xchg   edi,eax
  419fda:	push   ss
  419fdb:	inc    edx
  419fdc:	(bad)  
  419fdd:	xor    al,BYTE PTR [esi]
  419fdf:	adc    al,0x3c
  419fe1:	xor    DWORD PTR [edi-0x3b801eb6],0xbc4feed6
  419feb:	add    DWORD PTR [ebp-0x56ddf6aa],eax
  419ff1:	sub    al,0xd8
  419ff3:	sbb    DWORD PTR [edx],ebx
  419ff5:	scas   al,BYTE PTR es:[edi]
  419ff6:	daa    
  419ff7:	mov    ds:0xed3b3212,eax
  419ffc:	cdq    
  419ffd:	popa   
  419ffe:	es jns 0x419fe2
  41a001:	cli    
  41a002:	jmp    0x717ed4f3
  41a007:	sahf   
  41a008:	and    al,BYTE PTR [ecx-0x1e675f15]
  41a00e:	push   ecx
  41a00f:	mov    ebx,0x9a6bc18b
  41a014:	imul   eax,edx,0x2e
  41a017:	daa    
  41a018:	lock ins BYTE PTR es:[edi],dx
  41a01a:	fcom   QWORD PTR [eax-0x59]
  41a01d:	(bad)  
  41a01e:	and    BYTE PTR [edi+0x8],dh
  41a021:	(bad)  
  41a022:	out    0x67,al
  41a024:	ret    0xa6e1
  41a027:	aam    0x81
  41a029:	push   ecx
  41a02a:	cmp    DWORD PTR [eax+edx*8],ecx
  41a02d:	je     0x41a08a
  41a02f:	cmp    al,0x8
  41a031:	mov    ds:0xe1b05ab3,eax
  41a036:	cmc    
  41a037:	push   ebp
  41a038:	sbb    eax,0x176b9f75
  41a03d:	push   ebx
  41a03e:	leave  
  41a03f:	loopne 0x419fd6
  41a041:	cmp    ah,ch
  41a043:	dec    esp
  41a044:	ror    BYTE PTR [ebx-0x157fedb0],cl
  41a04a:	or     BYTE PTR [eax+edx*2+0x1374dde3],bh
  41a051:	fcmovu st,st(4)
  41a053:	jp     0x41a0ab
  41a055:	std    
  41a056:	or     edx,edx
  41a058:	(bad)  
  41a059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a05a:	mov    dl,0x6d
  41a05c:	fld    QWORD PTR [esi]
  41a05e:	dec    ecx
  41a05f:	aad    0x21
  41a061:	add    bl,BYTE PTR [esi+0x39816a96]
  41a067:	test   DWORD PTR [edx+0x5d09876a],esi
  41a06d:	outs   dx,DWORD PTR ds:[esi]
  41a06e:	jns    0x41a0de
  41a070:	dec    edi
  41a071:	sbb    BYTE PTR [eax-0x715e9a35],al
  41a077:	aaa    
  41a078:	mov    al,0xc5
  41a07a:	(bad)  
  41a07c:	pop    ds
  41a07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07e:	sti    
  41a07f:	pop    esp
  41a080:	pop    ecx
  41a081:	in     eax,dx
  41a082:	inc    ebp
  41a083:	call   0xfd33:0x553a3db2
  41a08a:	dec    edx
  41a08b:	xchg   edi,eax
  41a08c:	sbb    eax,0x2aab6d14
  41a091:	push   edx
  41a092:	xor    eax,DWORD PTR [ecx+0x14]
  41a095:	icebp  
  41a096:	jns    0x41a117
  41a098:	mov    bl,dh
  41a09a:	inc    esi
  41a09c:	(bad)  
  41a09e:	addr16 (bad) 
  41a0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a2:	aas    
  41a0a3:	sbb    eax,0xd6f17b69
  41a0a8:	inc    edx
  41a0a9:	cmc    
  41a0aa:	push   ss
  41a0ab:	jecxz  0x41a126
  41a0ad:	inc    ecx
  41a0ae:	iret   
  41a0af:	jne    0x41a06f
  41a0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b2:	sub    BYTE PTR [ecx+0x25fae04d],dl
  41a0b8:	aad    0xf7
  41a0ba:	imul   ebp,eax,0x6f8ed628
  41a0c0:	adc    DWORD PTR [edi+ebx*8-0x33],ebp
  41a0c4:	mov    WORD PTR [edi],ss
  41a0c6:	add    al,BYTE PTR [ebx+0x3b]
  41a0c9:	fs inc ebp
  41a0cb:	pop    ebx
  41a0cc:	(bad)  
  41a0cd:	(bad)  
  41a0ce:	scas   eax,DWORD PTR es:[edi]
  41a0cf:	fwait
  41a0d0:	ret    0xc75e
  41a0d3:	rcr    BYTE PTR [ebx-0x566e1c57],1
  41a0d9:	call   0xc4ec16dc
  41a0de:	sbb    cl,ah
  41a0e0:	test   al,0xd9
  41a0e2:	sub    BYTE PTR [edx],bh
  41a0e4:	call   0x9f34eea1
  41a0e9:	loope  0x41a135
  41a0eb:	mov    ebx,0x54598512
  41a0f0:	rcr    DWORD PTR [edi],cl
  41a0f2:	jl     0x41a145
  41a0f4:	add    eax,0x762bcc66
  41a0f9:	stos   DWORD PTR es:[di],eax
  41a0fb:	sbb    BYTE PTR [ecx+0x49],0x20
  41a0ff:	mov    ch,BYTE PTR [eax+edx*8]
  41a102:	mov    WORD PTR [eax-0x751d695d],fs
  41a108:	and    eax,0xf5b3fbd4
  41a10d:	cwde   
  41a10e:	cmp    al,BYTE PTR [edx]
  41a110:	mov    esp,0x37a61dd6
  41a115:	fisttp WORD PTR [eax*1-0x1ff7f4fe]
  41a11c:	outs   dx,DWORD PTR ds:[esi]
  41a11d:	xchg   ecx,eax
  41a11e:	push   esi
  41a11f:	mov    bh,0x62
  41a121:	mov    dh,BYTE PTR [edx+0x20e657de]
  41a127:	retf   0xd9b
  41a12a:	fdiv   st(4),st
  41a12c:	xlat   BYTE PTR ds:[ebx]
  41a12d:	int    0xe5
  41a12f:	in     al,dx
  41a130:	add    al,BYTE PTR [edi+0x7]
  41a133:	not    DWORD PTR [edi+0x41]
  41a136:	and    al,0xc0
  41a138:	or     DWORD PTR [edi],ebp
  41a13a:	inc    ecx
  41a13b:	and    BYTE PTR [esi+0x743f2256],0xe6
  41a142:	or     ch,BYTE PTR [ebx-0x2b]
  41a145:	jle    0x41a17f
  41a147:	mov    eax,gs:0x46442d20
  41a14d:	gs xchg ecx,eax
  41a14f:	pop    eax
  41a150:	xchg   edi,eax
  41a151:	lds    esp,FWORD PTR [edi-0x2e79e34b]
  41a157:	jb     0x41a11f
  41a159:	jbe    0x41a10b
  41a15b:	mov    ds:0xcbf1c4b8,eax
  41a160:	xchg   edx,eax
  41a161:	out    0x16,eax
  41a163:	sub    eax,0xeb784143
  41a168:	scas   eax,DWORD PTR es:[edi]
  41a169:	js     0x41a11f
  41a16b:	ds xchg edx,eax
  41a16d:	inc    esi
  41a16e:	shl    BYTE PTR [ebx+0x47163dd3],cl
  41a174:	(bad)  
  41a175:	popf   
  41a176:	mov    ebp,0xcaef2bfb
  41a17b:	xlat   BYTE PTR ds:[ebx]
  41a17c:	call   0xfd41:0xf258fa14
  41a183:	rcr    BYTE PTR [edi],0x11
  41a186:	in     al,dx
  41a187:	mov    ebx,DWORD PTR [ecx]
  41a189:	push   ecx
  41a18a:	mov    BYTE PTR [edi],al
  41a18c:	fst    DWORD PTR ds:0x18831533
  41a192:	rcl    DWORD PTR [esi-0x1bd977a],1
  41a198:	imul   edx,DWORD PTR [edx+esi*2],0x48
  41a19c:	dec    esi
  41a19d:	pop    ecx
  41a19e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a1a0:	call   0x5b29:0x41b85c15
  41a1a7:	ror    BYTE PTR [ecx],0x2b
  41a1aa:	mov    WORD PTR [edx-0x3a373a4],fs
  41a1b0:	mov    ah,0x8c
  41a1b2:	inc    ebx
  41a1b3:	and    dl,BYTE PTR [ecx-0x1da56e0c]
  41a1b9:	iret   
  41a1ba:	pop    edi
  41a1bb:	jmp    0x198e3cb
  41a1c0:	div    BYTE PTR [eax-0xd25fc2b]
  41a1c6:	xchg   BYTE PTR [esi],bl
  41a1c8:	add    edi,ebp
  41a1ca:	cli    
  41a1cb:	lahf   
  41a1cc:	mov    al,0xd7
  41a1ce:	out    dx,al
  41a1cf:	ja     0x41a239
  41a1d1:	sub    eax,edi
  41a1d3:	aam    0x61
  41a1d5:	lea    eax,[eax]
  41a1d7:	add    eax,0x54f53baa
  41a1dc:	cmc    
  41a1dd:	push   edx
  41a1de:	mov    BYTE PTR [edi+0x43],0xae
  41a1e2:	xchg   edi,eax
  41a1e3:	sub    BYTE PTR [ebx],ah
  41a1e5:	jne    0x41a222
  41a1e7:	test   eax,0x7062009a
  41a1ec:	in     al,dx
  41a1ed:	pushf  
  41a1ee:	lahf   
  41a1ef:	or     ecx,DWORD PTR [edi-0x2112fb88]
  41a1f5:	loope  0x41a1a8
  41a1f7:	gs cmc 
  41a1f9:	xor    DWORD PTR ds:0xe76478e,edx
  41a1ff:	jno    0x41a220
  41a201:	inc    edx
  41a202:	add    BYTE PTR [ebp-0x3e],0x4e
  41a206:	ror    DWORD PTR [edi+0x26542990],0xc1
  41a20d:	addr16 ds sbb eax,0xe31ad50b
  41a214:	push   eax
  41a215:	jge    0x41a246
  41a217:	xor    eax,0x12c70c46
  41a21c:	sbb    BYTE PTR [edi-0x4b],ch
  41a21f:	retf   
  41a220:	jb     0x20ff716e
  41a226:	push   ds
  41a227:	and    DWORD PTR [ecx+eiz*4+0x4169d2af],ebp
  41a22e:	ins    DWORD PTR es:[edi],dx
  41a22f:	xchg   DWORD PTR [edi],edi
  41a231:	mov    edi,0x1e8eee48
  41a236:	fs pop eax
  41a238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a239:	mov    cl,0xb
  41a23b:	push   esp
  41a23c:	push   edx
  41a23d:	ins    BYTE PTR es:[edi],dx
  41a23e:	mov    edx,eax
  41a240:	mov    dl,0xd
  41a242:	mov    dh,0x48
  41a244:	cmp    al,0x1e
  41a246:	push   eax
  41a248:	mov    fs,WORD PTR [esi]
  41a24a:	mov    bh,0x49
  41a24c:	out    0xcc,eax
  41a24e:	arpl   WORD PTR [eax+0x318cc7b3],bp
  41a254:	neg    DWORD PTR [edi+ecx*4+0x68]
  41a258:	psubusw mm7,QWORD PTR [edi]
  41a25b:	mov    ebp,0x5543c487
  41a260:	mov    ah,0x89
  41a262:	ins    DWORD PTR es:[edi],dx
  41a263:	mov    bh,0xb9
  41a265:	adc    al,0x74
  41a267:	mov    edx,0x6b801ae2
  41a26c:	cmc    
  41a26d:	mov    eax,0x32f47b08
  41a272:	test   eax,0x7946edac
  41a277:	mov    bl,0x9b
  41a279:	loopne 0x41a200
  41a27b:	sbb    al,0xc5
  41a27d:	adc    bl,bl
  41a27f:	inc    edi
  41a280:	das    
  41a281:	daa    
  41a282:	mov    dl,0x70
  41a284:	dec    edx
  41a285:	mov    ecx,0x6b8077a3
  41a28a:	inc    eax
  41a28b:	pop    esp
  41a28c:	cmp    ch,BYTE PTR [esi]
  41a28e:	sub    al,BYTE PTR [bx+si]
  41a291:	ins    DWORD PTR es:[edi],dx
  41a292:	dec    esp
  41a293:	mov    ecx,ebp
  41a295:	pop    es
  41a296:	das    
  41a297:	outs   dx,DWORD PTR ds:[esi]
  41a298:	mov    edx,eax
  41a29a:	mov    ch,0x9f
  41a29c:	push   0x41989b
  41a2a1:	pop    edx
  41a2a2:	sbb    al,bh
  41a2a4:	jno    0x41a2e0
  41a2a6:	lods   al,BYTE PTR ds:[esi]
  41a2a7:	fsubr  QWORD PTR [esi]
  41a2a9:	(bad)  
  41a2aa:	aas    
  41a2ab:	pushf  
  41a2ac:	sbb    BYTE PTR [esi+edx*4+0x4fa5b4b5],dh
  41a2b3:	js     0x41a29a
  41a2b5:	xor    eax,esi
  41a2b7:	cld    
  41a2b8:	gs ja  0x41a275
  41a2bb:	push   ss
  41a2bc:	jne    0x41a29f
  41a2be:	pushf  
  41a2bf:	(bad)
  41a2c2:	mov    dh,0x24
  41a2c4:	mov    ch,0x73
  41a2c6:	push   ss
  41a2c7:	xchg   ebx,eax
  41a2c8:	pushf  
  41a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ca:	sbb    eax,0x2160f01f
  41a2cf:	out    dx,al
  41a2d0:	inc    esi
  41a2d1:	mov    ebx,ss
  41a2d3:	add    eax,DWORD PTR [edi-0x75150ce5]
  41a2d9:	sub    BYTE PTR [eax+0x1444ca46],bh
  41a2df:	fcom   QWORD PTR ds:0xed676506
  41a2e5:	mov    edi,ss
  41a2e7:	fsubr  DWORD PTR [esi-0x18]
  41a2ea:	cwde   
  41a2eb:	xor    BYTE PTR [ecx+0x7c],bh
  41a2ee:	cwde   
  41a2ef:	neg    esp
  41a2f1:	mov    dh,BYTE PTR ds:0x229503b0
  41a2f7:	xchg   ebp,eax
  41a2f8:	sbb    dh,BYTE PTR [ebx+0x29d6adad]
  41a2fe:	inc    esi
  41a2ff:	jmp    0x9515:0x2c178188
  41a306:	and    al,0xed
  41a308:	inc    edi
  41a309:	sbb    dl,dl
  41a30b:	mov    WORD PTR [edx],es
  41a30d:	fmul   QWORD PTR [ebx]
  41a30f:	jns    0x41a30d
  41a311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a312:	js     0x41a31c
  41a314:	or     cl,BYTE PTR [edx+0x0]
  41a317:	jno    0x41a2c4
  41a319:	sar    BYTE PTR [ebp-0x16d86569],0x71
  41a320:	in     eax,dx
  41a321:	test   DWORD PTR [ebp+eax*8-0x37942acb],edi
  41a328:	jle    0x41a2dc
  41a32a:	jb     0x41a316
  41a32c:	sbb    DWORD PTR [ebx],edx
  41a32e:	jl     0x41a317
  41a330:	and    DWORD PTR [esi+0x22dbfe1],edi
  41a336:	push   edx
  41a337:	push   eax
  41a338:	lea    esp,[ebx+0x3a2315bd]
  41a33e:	push   edx
  41a33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a340:	dec    ebx
  41a341:	pop    es
  41a342:	cmp    bh,cl
  41a344:	or     dl,ah
  41a346:	int    0xfd
  41a348:	mov    dl,0xf5
  41a34a:	fsubr  QWORD PTR [edi+ebp*8]
  41a34d:	lock sub ah,BYTE PTR [ebp-0x5ac40cbd]
  41a354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a355:	lahf   
  41a356:	lea    edx,[edi-0xd]
  41a359:	mov    DWORD PTR [esi+eax*1-0x44],ebx
  41a35d:	xor    ebp,0x3e05ba93
  41a363:	mov    bl,0xf4
  41a365:	stos   DWORD PTR es:[edi],eax
  41a366:	pop    edi
  41a367:	loop   0x41a34f
  41a369:	shr    DWORD PTR [ebp+0x327fed3b],0x0
  41a370:	loop   0x41a38e
  41a372:	jbe    0x41a377
  41a374:	(bad)  
  41a377:	rcr    DWORD PTR [ebx+0x64],1
  41a37a:	rol    DWORD PTR [ebx+0x29dc22dd],0xd7
  41a381:	xor    edi,DWORD PTR [edi]
  41a383:	daa    
  41a384:	(bad)  
  41a385:	cmp    al,0x70
  41a387:	mov    dl,0xa6
  41a389:	pop    ebx
  41a38a:	inc    eax
  41a38b:	int    0x21
  41a38d:	mov    ecx,0x1bdf30a0
  41a392:	iret   
  41a393:	jp     0x41a32c
  41a395:	outs   dx,BYTE PTR ds:[esi]
  41a396:	xor    BYTE PTR [ebp-0x294ab1dd],al
  41a39c:	inc    edx
  41a39d:	push   ebp
  41a39e:	or     al,BYTE PTR [edi+0x53]
  41a3a1:	js     0x41a3c0
  41a3a3:	inc    ebx
  41a3a4:	stos   BYTE PTR es:[edi],al
  41a3a5:	and    al,0x84
  41a3a7:	sti    
  41a3a8:	xchg   ecx,eax
  41a3a9:	ss sub ecx,ecx
  41a3ac:	jge    0x41a3ce
  41a3ae:	das    
  41a3af:	ds repz xchg esp,ecx
  41a3b3:	repnz mov edi,0xcfb1e606
  41a3b9:	mov    ebp,0xcbf634a
  41a3be:	aas    
  41a3bf:	lahf   
  41a3c0:	pop    eax
  41a3c1:	(bad)  
  41a3c2:	fst    QWORD PTR [edx]
  41a3c4:	jge    0x41a377
  41a3c6:	adc    al,0x8
  41a3c9:	shl    BYTE PTR [edx-0x78],cl
  41a3cc:	inc    ecx
  41a3cd:	call   0xfd322c20
  41a3d2:	ror    BYTE PTR [edx+0x30],cl
  41a3d5:	pop    eax
  41a3d6:	fild   WORD PTR [edx-0x5405c507]
  41a3dc:	inc    esi
  41a3dd:	(bad)  
  41a3de:	out    0x3c,al
  41a3e0:	fdivrp st(0),st
  41a3e2:	ins    DWORD PTR es:[edi],dx
  41a3e3:	and    al,0x61
  41a3e5:	fild   DWORD PTR ds:0x4fb39411
  41a3eb:	and    DWORD PTR [edi],ecx
  41a3ed:	add    eax,0xa1ffd81
  41a3f2:	call   0xa811:0x1d299b79
  41a3f9:	dec    esi
  41a3fa:	pop    esp
  41a3fb:	push   0xce354cce
  41a400:	dec    edi
  41a401:	mov    BYTE PTR [ecx-0x7743396f],0xb7
  41a408:	add    BYTE PTR [ebx-0x7e],al
  41a40b:	ds sti 
  41a40d:	stos   BYTE PTR es:[edi],al
  41a40e:	mov    al,ds:0x19373c3c
  41a413:	or     cl,BYTE PTR [eax+0x25e11d46]
  41a419:	in     eax,dx
  41a41a:	int3   
  41a41b:	xor    al,0x23
  41a41d:	outs   dx,BYTE PTR ds:[esi]
  41a41e:	push   0x4e642481
  41a423:	or     ebx,ecx
  41a425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	pop    ebp
  41a427:	push   ds
  41a428:	mov    esi,?
  41a42a:	gs jmp 0x41a3fc
  41a42d:	sahf   
  41a42e:	mov    DWORD PTR [eax],edi
  41a430:	xor    ecx,esi
  41a432:	es enter 0xf2a3,0xc6
  41a437:	lods   al,BYTE PTR ds:[esi]
  41a438:	jecxz  0x41a4a1
  41a43a:	mov    dl,0x82
  41a43c:	nop
  41a43d:	dec    ebp
  41a43e:	mov    ch,0xd5
  41a440:	hlt    
  41a441:	imul   dh
  41a443:	push   eax
  41a444:	xlat   BYTE PTR ds:[ebx]
  41a445:	std    
  41a446:	xor    BYTE PTR [ecx-0x13],bl
  41a449:	les    ebp,FWORD PTR [esp+ecx*2-0x78]
  41a44d:	ret    
  41a44e:	test   BYTE PTR ds:0x372bd772,bh
  41a454:	mov    ch,0x99
  41a456:	sbb    cl,BYTE PTR [edx+0x7d]
  41a459:	add    BYTE PTR [ebp-0x7ca59b96],ch
  41a45f:	and    eax,DWORD PTR [edi+ebp*8+0x1cddfb3]
  41a466:	xchg   ecx,eax
  41a467:	dec    ebx
  41a468:	iret   
  41a469:	push   esp
  41a46a:	icebp  
  41a46b:	fcom   QWORD PTR [ebp-0x7]
  41a46e:	ret    
  41a46f:	sbb    eax,0xaf5a7c1b
  41a474:	fisttp DWORD PTR [ecx+ecx*2]
  41a477:	mov    bl,0x13
  41a479:	arpl   si,dx
  41a47b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a47c:	call   0x8fdc181c
  41a481:	mov    edx,0xaba7dc03
  41a486:	outs   dx,DWORD PTR ds:[esi]
  41a487:	pushf  
  41a488:	int    0x98
  41a48a:	cmp    dh,dl
  41a48c:	in     al,dx
  41a48d:	push   ebp
  41a48e:	add    ch,BYTE PTR [ebx]
  41a490:	pusha  
  41a491:	mov    cr6,edi
  41a494:	mov    ?,edi
  41a496:	inc    eax
  41a497:	or     al,0xde
  41a499:	push   ss
  41a49a:	mov    DWORD PTR [esi+0x67579762],ecx
  41a4a0:	repnz fimul DWORD PTR [ebp-0x318441b4]
  41a4a7:	aaa    
  41a4a8:	shl    DWORD PTR [ebp+0x7e],1
  41a4ab:	xchg   cl,bl
  41a4ad:	mov    ebp,0x32dfe5e2
  41a4b2:	fiadd  WORD PTR [ebp+0x44]
  41a4b5:	sub    BYTE PTR [edi-0x78f4f9c5],0xcf
  41a4bc:	test   eax,0xc83a3c3a
  41a4c1:	inc    eax
  41a4c2:	jle    0x41a509
  41a4c4:	or     al,0x16
  41a4c6:	or     edi,DWORD PTR [ebp+0x1538f262]
  41a4cc:	test   eax,0x4f0426b9
  41a4d1:	push   ds
  41a4d2:	pop    es
  41a4d3:	(bad)  [ecx]
  41a4d5:	ss aaa 
  41a4d7:	ret    
  41a4d8:	push   ss
  41a4d9:	test   al,0xcb
  41a4db:	cmp    edi,DWORD PTR [ebx+ebx*8]
  41a4de:	iret   
  41a4df:	jle    0x41a526
  41a4e1:	iret   
  41a4e2:	push   ebp
  41a4e3:	push   ebx
  41a4e4:	adc    edx,DWORD PTR [ecx+0x24]
  41a4e7:	jmp    0x9414431f
  41a4ec:	inc    DWORD PTR [ecx-0x41cf6429]
  41a4f2:	inc    esi
  41a4f3:	xchg   BYTE PTR [esi-0x3dac0a1c],dl
  41a4f9:	push   ds
  41a4fa:	mov    cl,0xaa
  41a4fc:	xor    DWORD PTR [esi-0x79],ecx
  41a4ff:	pop    ebx
  41a500:	lds    ebx,FWORD PTR [ecx]
  41a502:	inc    ebp
  41a503:	mov    al,0x6
  41a505:	in     eax,dx
  41a506:	adc    bl,ah
  41a508:	(bad)  
  41a509:	push   0xf125a9f8
  41a50e:	or     ecx,DWORD PTR [edi+0x2b]
  41a511:	cdq    
  41a512:	fwait
  41a513:	inc    ebp
  41a514:	pop    edi
  41a515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a516:	call   0x4e6b:0x99b3d51f
  41a51d:	das    
  41a51e:	pop    ebp
  41a51f:	call   DWORD PTR [ebx-0x1e9f868c]
  41a525:	push   esi
  41a526:	pinsrw mm7,ebx,0x9f
  41a52a:	mov    ecx,0xfdad1c8f
  41a52f:	jg     0x41a504
  41a531:	push   es
  41a532:	gs ss mov esp,0x3dad1249
  41a539:	xlat   BYTE PTR ds:[ebx]
  41a53a:	pop    ss
  41a53b:	or     DWORD PTR [ecx+0x6d6e66d],0xffffffa4
  41a542:	or     BYTE PTR ds:0x22fb6104,cl
  41a548:	pop    esp
  41a549:	push   0xbfef034f
  41a54e:	sar    BYTE PTR [esi],0x23
  41a551:	add    ch,BYTE PTR [eax+0x5b6b3167]
  41a557:	add    ecx,DWORD PTR [edi+edi*1+0x4fcbfb7a]
  41a55e:	jbe    0x41a507
  41a560:	adc    BYTE PTR [edx+0x4f],bl
  41a563:	push   es
  41a564:	jmp    0x41a5d8
  41a566:	cli    
  41a567:	mov    WORD PTR [edi+eiz*8],?
  41a56a:	fs inc edx
  41a56c:	push   esi
  41a56d:	shr    BYTE PTR [ecx],0xdf
  41a570:	xchg   DWORD PTR [eax-0x5d18e664],eax
  41a576:	lods   al,BYTE PTR ds:[esi]
  41a577:	stos   DWORD PTR es:[edi],eax
  41a578:	adc    ah,BYTE PTR [eax]
  41a57a:	xor    dh,BYTE PTR [ecx-0x7]
  41a57d:	repnz mov ecx,0x9e927060
  41a583:	and    bh,BYTE PTR [ecx-0x472203ce]
  41a589:	and    eax,0x4dcf5944
  41a58e:	cs inc ebx
  41a590:	call   0x39e2:0x6b4a1d1c
  41a597:	int3   
  41a598:	int    0xee
  41a59a:	jne    0x41a5b5
  41a59c:	bnd jle 0x41a5e5
  41a59f:	xchg   ebx,eax
  41a5a0:	push   es
  41a5a1:	cmp    al,0x82
  41a5a3:	xchg   DWORD PTR [esi+eax*4],edx
  41a5a6:	pop    ebx
  41a5a7:	inc    ebx
  41a5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a9:	push   esi
  41a5aa:	sub    eax,0xe730606e
  41a5af:	fnsave [ecx+ecx*1+0x42]
  41a5b3:	xchg   BYTE PTR cs:[edi+0x73],ah
  41a5b7:	dec    esp
  41a5b8:	lea    esp,[edx+0x51]
  41a5bb:	xchg   esi,eax
  41a5bc:	xchg   ecx,eax
  41a5bd:	ss mov cl,0x8
  41a5c0:	pop    ecx
  41a5c1:	nop
  41a5c2:	fist   DWORD PTR [ecx-0x18283dd6]
  41a5c8:	mov    dh,0x70
  41a5ca:	(bad)  
  41a5cb:	jo     0x41a602
  41a5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ce:	dec    ebx
  41a5cf:	lods   eax,DWORD PTR ds:[esi]
  41a5d0:	sub    eax,0xec5e6ef
  41a5d5:	in     al,0x70
  41a5d7:	mov    eax,ds:0xb01fac59
  41a5dc:	es push ds
  41a5de:	xchg   ebx,eax
  41a5df:	fs stc 
  41a5e1:	mov    ds:0xd81ef9ce,eax
  41a5e6:	jle    0x41a5f9
  41a5e8:	sbb    esi,DWORD PTR [edx-0x281afb4a]
  41a5ee:	ret    0x4a4f
  41a5f1:	pop    ss
  41a5f2:	scas   al,BYTE PTR es:[edi]
  41a5f3:	fstp   DWORD PTR [esi]
  41a5f5:	arpl   WORD PTR [edi],dx
  41a5f7:	test   BYTE PTR [edx+0x0],ah
  41a5fa:	mov    eax,ds:0x1cd4581f
  41a5ff:	jne    0x41a5b3
  41a601:	add    al,0x62
  41a603:	ins    DWORD PTR es:[edi],dx
  41a604:	mov    gs,WORD PTR [eax+0x61]
  41a607:	leave  
  41a608:	add    dl,BYTE PTR [edi]
  41a60a:	popf   
  41a60b:	dec    esi
  41a60c:	clc    
  41a60d:	hlt    
  41a60e:	inc    eax
  41a60f:	test   BYTE PTR [ebx+ebx*2],cl
  41a612:	fcomp  DWORD PTR [ecx-0x2f]
  41a615:	cmp    DWORD PTR cs:[edx],edx
  41a618:	rcr    DWORD PTR [ebx+0x61830e55],cl
  41a61e:	push   esp
  41a61f:	fsub   QWORD PTR [ebx+0x536b3b7d]
  41a625:	in     eax,0x59
  41a627:	xchg   ebp,eax
  41a628:	sbb    ebx,DWORD PTR ds:0x12f7c53b
  41a62e:	hlt    
  41a62f:	inc    edx
  41a630:	call   0x6e1a:0x69cca1e9
  41a637:	mov    bh,BYTE PTR [ebp+edx*8-0x3b]
  41a63b:	mov    ds:0x612057ff,al
  41a640:	and    ecx,DWORD PTR [edx+edx*2-0x6b06d0c8]
  41a647:	and    BYTE PTR [edi+0x5ba9522a],0xd5
  41a64e:	xor    BYTE PTR [ebp+0x6b964c5b],dh
  41a654:	fs push es
  41a656:	je     0x41a610
  41a658:	retf   0x8822
  41a65b:	js     0x41a699
  41a65d:	test   eax,0xcbfba2db
  41a662:	arpl   WORD PTR [esi],ax
  41a664:	imul   DWORD PTR ds:0x4745697b
  41a66a:	fwait
  41a66b:	xchg   ecx,eax
  41a66c:	sub    dh,bh
  41a66e:	je     0x41a64d
  41a670:	enter  0x5485,0xe
  41a674:	jae    0x41a68b
  41a676:	lods   eax,DWORD PTR ds:[esi]
  41a677:	push   esi
  41a678:	xchg   ebp,eax
  41a679:	fnstsw WORD PTR [ecx-0x7a694245]
  41a67f:	jno    0x41a6c7
  41a681:	add    BYTE PTR [bx-0x48],0x25
  41a686:	jecxz  0x41a6f1
  41a688:	jbe    0x41a613
  41a68a:	pop    ss
  41a68b:	jg     0x41a6ea
  41a68d:	icebp  
  41a68e:	fistp  QWORD PTR [esp+esi*8+0x2c]
  41a692:	mov    bh,0x8d
  41a694:	in     al,dx
  41a695:	data16 sub BYTE PTR [ebp-0x30],cl
  41a699:	pop    ds
  41a69a:	pop    di
  41a69c:	dec    edi
  41a69d:	imul   edi,DWORD PTR [ebx],0x6e
  41a6a0:	mov    edx,0x48e2769
  41a6a5:	jge    0x41a6e5
  41a6a7:	and    al,BYTE PTR [edx-0x4e5dbbd1]
  41a6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ae:	icebp  
  41a6af:	xlat   BYTE PTR ds:[ebx]
  41a6b0:	shl    DWORD PTR [ecx+0x44],1
  41a6b3:	jne    0x41a640
  41a6b5:	push   edi
  41a6b6:	jge    0x41a669
  41a6b8:	dec    ebp
  41a6b9:	repnz aad 0x20
  41a6bc:	push   es
  41a6bd:	jp     0x41a6b9
  41a6bf:	cs jl  0x41a67b
  41a6c2:	(bad)
  41a6c7:	inc    edx
  41a6c8:	jmp    0x3939f0
  41a6cd:	jmp    0xb521:0x14b31aa9
  41a6d4:	and    DWORD PTR [ecx-0x20b9ab1e],0x5f
  41a6db:	mov    eax,0x27553040
  41a6e0:	inc    edx
  41a6e1:	and    ah,BYTE PTR [edi+edi*1-0x79]
  41a6e5:	pop    eax
  41a6e6:	adc    cl,dl
  41a6e8:	add    BYTE PTR [ebx+ebp*2+0x22],0x3e
  41a6ed:	jo     0x41a704
  41a6ef:	mov    cl,0xe2
  41a6f1:	pop    ds
  41a6f2:	lods   al,BYTE PTR ds:[esi]
  41a6f3:	mov    dl,BYTE PTR [ebp+0x4f7201c2]
  41a6f9:	lea    edi,cs:[esi]
  41a6fc:	mov    edi,0xfc377888
  41a701:	xor    dl,BYTE PTR [eax+0x6]
  41a704:	add    esi,DWORD PTR [ecx-0x1f2c6778]
  41a70a:	clc    
  41a70b:	aam    0xcd
  41a70d:	ret    0xdd72
  41a710:	pop    edi
  41a711:	xchg   ecx,eax
  41a712:	pop    ebx
  41a713:	jle    0x41a761
  41a715:	sub    bl,bl
  41a717:	inc    ecx
  41a718:	and    eax,0xbd1655ce
  41a71d:	xor    DWORD PTR [ecx+edx*2],ecx
  41a720:	(bad)  
  41a721:	jge    0x41a742
  41a723:	cmc    
  41a724:	lahf   
  41a725:	xor    BYTE PTR [eax],al
  41a727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a728:	sbb    eax,0x91871360
  41a72d:	adc    BYTE PTR [eax+0x5110a2a1],ch
  41a733:	pop    DWORD PTR es:[esi]
  41a736:	(bad)  
  41a737:	xor    bh,ah
  41a739:	fdiv   DWORD PTR [eax]
  41a73b:	jo     0x41a775
  41a73d:	mov    dh,BYTE PTR [edx-0xd776fd9]
  41a743:	mov    WORD PTR [eax+0x46],es
  41a746:	pop    esi
  41a747:	jg     0x41a7c7
  41a749:	ror    BYTE PTR [esi+0x76],1
  41a74c:	dec    esp
  41a74d:	aaa    
  41a74e:	hlt    
  41a74f:	imul   edx,ebx,0xa92aea5b
  41a755:	xor    DWORD PTR [edx-0x57],edx
  41a758:	push   cs
  41a759:	dec    eax
  41a75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75b:	scas   eax,DWORD PTR es:[edi]
  41a75c:	cmp    eax,0xba38386f
  41a761:	icebp  
  41a762:	xchg   esi,eax
  41a763:	mov    ebp,0x1b174d2b
  41a768:	inc    ebp
  41a769:	adc    al,0xf
  41a76b:	sbb    al,ah
  41a76d:	cli    
  41a76e:	mov    esp,0x5268541d
  41a773:	adc    ebx,DWORD PTR ds:0x25b47197
  41a779:	cdq    
  41a77a:	in     eax,0x51
  41a77c:	aam    0x8c
  41a77e:	mov    dh,0xc6
  41a780:	xchg   WORD PTR [esp+edi*1-0x36c60ed0],cx
  41a788:	icebp  
  41a789:	popa   
  41a78a:	call   0xed73:0xd2a4b849
  41a791:	(bad)
  41a794:	xchg   esp,eax
  41a795:	in     eax,0x2a
  41a797:	fs pop ss
  41a799:	xchg   ebx,eax
  41a79a:	and    bh,ah
  41a79c:	lea    ebp,[ecx]
  41a79e:	mov    esp,0x6da1d065
  41a7a3:	sar    bl,cl
  41a7a5:	imul   edi,DWORD PTR [edi-0x60],0xd441ea95
  41a7ac:	mov    al,ds:0x23c83f83
  41a7b1:	test   BYTE PTR [esi],dl
  41a7b3:	ds leave 
  41a7b5:	aad    0x8b
  41a7b7:	test   BYTE PTR [edi],0xf
  41a7ba:	jno    0x41a80b
  41a7bc:	sbb    BYTE PTR [eax-0x16],ah
  41a7bf:	hlt    
  41a7c0:	mov    DWORD PTR [edx+0x1dd6cc60],esi
  41a7c6:	fwait
  41a7c7:	adc    eax,0x8ca3ba5c
  41a7cc:	mov    cl,0xba
  41a7ce:	ret    
  41a7cf:	sub    esi,DWORD PTR [eax-0x6b]
  41a7d2:	inc    esp
  41a7d3:	mov    dl,0xa8
  41a7d5:	outs   dx,DWORD PTR ds:[esi]
  41a7d6:	xrelease xchg BYTE PTR [eax-0x43f965a4],bh
  41a7dd:	repz cmc 
  41a7df:	or     eax,0xfb736a19
  41a7e4:	and    BYTE PTR [ecx-0x3df556d9],0xfb
  41a7eb:	not    DWORD PTR [edi+0x7f]
  41a7ee:	mov    esi,ecx
  41a7f0:	dec    ebx
  41a7f1:	inc    esp
  41a7f2:	push   ebp
  41a7f3:	call   0x86d8:0xb74f7867
  41a7fa:	stos   DWORD PTR es:[edi],eax
  41a7fb:	out    0x97,eax
  41a7fd:	adc    esp,DWORD PTR [edi]
  41a7ff:	or     bl,BYTE PTR [ecx+0x6d]
  41a802:	or     ebx,DWORD PTR [ebp-0x1b]
  41a805:	jl     0x41a7f1
  41a807:	iret   
  41a808:	pop    eax
  41a809:	inc    ebp
  41a80a:	sub    eax,DWORD PTR [ebx]
  41a80c:	lock shl dl,cl
  41a80f:	pop    esp
  41a810:	push   ds
  41a811:	push   ecx
  41a812:	rcr    BYTE PTR [edx+eax*8],1
  41a815:	push   ebp
  41a816:	lea    ebx,[ebx-0x5ef92482]
  41a81c:	retf   0x6421
  41a81f:	idiv   BYTE PTR [eax-0x234c659f]
  41a825:	cli    
  41a826:	imul   eax,DWORD PTR [ebx],0x649e43c7
  41a82c:	retf   
  41a82d:	es cmp eax,ebp
  41a830:	in     al,0x49
  41a832:	ins    BYTE PTR es:[edi],dx
  41a833:	xchg   edi,eax
  41a834:	jmp    0xe5a:0x18ec15f0
  41a83b:	adc    eax,0x87a15347
  41a840:	repz ja 0x41a81c
  41a843:	xchg   BYTE PTR ds:0xb72eb140,dl
  41a849:	rol    eax,1
  41a84b:	(bad)  
  41a84c:	fiadd  WORD PTR [esi]
  41a84e:	pop    ecx
  41a84f:	inc    ecx
  41a850:	pop    eax
  41a851:	scas   eax,DWORD PTR es:[edi]
  41a852:	gs push ss
  41a854:	iret   
  41a855:	mov    esi,0x4ac99f6
  41a85a:	dec    eax
  41a85b:	sub    al,0x57
  41a85d:	sar    al,0x44
  41a860:	adc    ebp,esi
  41a862:	xchg   ebx,eax
  41a863:	out    dx,eax
  41a864:	and    DWORD PTR [edx+0x65],esp
  41a867:	fiadd  DWORD PTR [ebx+0x35]
  41a86a:	aaa    
  41a86b:	mov    bh,0xca
  41a86d:	test   esi,0x6394c583
  41a873:	fadd   QWORD PTR [edi+0x3dd08e45]
  41a879:	popa   
  41a87a:	sbb    BYTE PTR [esi],0xfc
  41a87d:	mov    al,ds:0x4de10c73
  41a882:	std    
  41a883:	jno    0x41a86b
  41a885:	outs   dx,BYTE PTR ds:[esi]
  41a886:	loopne 0x41a85c
  41a888:	ins    BYTE PTR es:[edi],dx
  41a889:	pop    ebp
  41a88a:	xor    al,0x9b
  41a88c:	add    al,0x75
  41a88e:	mov    ebx,ecx
  41a890:	add    al,0x52
  41a892:	aaa    
  41a893:	mov    edx,0x901e9de5
  41a898:	rcl    BYTE PTR ds:[ebx],1
  41a89b:	lods   al,BYTE PTR ds:[esi]
  41a89c:	ss jbe 0x41a904
  41a89f:	retf   
  41a8a0:	iret   
  41a8a1:	or     bh,BYTE PTR [edx]
  41a8a3:	dec    esi
  41a8a4:	or     BYTE PTR [edi-0x6acb04d3],0xd8
  41a8ab:	mov    BYTE PTR [eax],ah
  41a8ad:	jp     0x41a92a
  41a8af:	adc    sp,bp
  41a8b2:	cmc    
  41a8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b4:	(bad)  
  41a8b5:	xchg   esi,eax
  41a8b6:	bound  dx,DWORD PTR [ebp-0x75]
  41a8ba:	pop    ebx
  41a8bb:	mov    ebx,0xcc1846a
  41a8c0:	sbb    BYTE PTR [edi+0x52],dh
  41a8c3:	sbb    DWORD PTR [edx],ebx
  41a8c5:	mov    DWORD PTR [edi-0x72],esi
  41a8c8:	cld    
  41a8c9:	push   edx
  41a8ca:	test   BYTE PTR fs:[edi-0xb24391c],0xf8
  41a8d2:	dec    esp
  41a8d3:	sbb    dh,al
  41a8d5:	pop    DWORD PTR [esp+ecx*2-0x6eb9035f]
  41a8dc:	aad    0xa3
  41a8de:	mov    esp,esi
  41a8e0:	lods   eax,DWORD PTR ds:[esi]
  41a8e1:	call   0x3e2d2fcf
  41a8e6:	mov    dl,0x4e
  41a8e8:	jo     0x41a8d3
  41a8ea:	aad    0x6f
  41a8ec:	outs   dx,DWORD PTR ds:[esi]
  41a8ed:	mov    bh,0x79
  41a8ef:	fwait
  41a8f0:	repz mov ch,0xb2
  41a8f3:	or     BYTE PTR [edi],ch
  41a8f5:	adc    ch,0xd4
  41a8f8:	into   
  41a8f9:	push   ss
  41a8fa:	ins    BYTE PTR es:[edi],dx
  41a8fb:	popf   
  41a8fc:	xchg   ebx,eax
  41a8fd:	cmp    DWORD PTR [ebp-0x39],ebx
  41a900:	test   DWORD PTR [ecx*4+0x6a97eba5],0x59e82900
  41a90b:	xchg   esi,eax
  41a90c:	dec    esp
  41a90d:	or     DWORD PTR [edi],edx
  41a90f:	loopne 0x41a92f
  41a911:	mov    ch,0x6e
  41a913:	outs   dx,BYTE PTR ds:[esi]
  41a914:	jmp    0x5958:0x692cfec6
  41a91b:	jmp    0x41a981
  41a91d:	retf   0x6279
  41a920:	ja     0x41a8cb
  41a922:	lock out 0x8a,eax
  41a925:	fwait
  41a926:	pop    eax
  41a927:	xchg   ecx,eax
  41a928:	push   ss
  41a929:	dec    eax
  41a92a:	mov    dl,0x23
  41a92c:	cwde   
  41a92d:	xor    BYTE PTR [ebp+0x431f5bdd],dl
  41a933:	popa   
  41a934:	dec    edi
  41a935:	push   0xcdc39b27
  41a93a:	pop    es
  41a93b:	test   eax,0x7e244c17
  41a940:	pushf  
  41a941:	ss adc al,0xb8
  41a944:	adc    eax,0xe067ae15
  41a949:	aam    0x18
  41a94b:	fmul   QWORD PTR [edx+0x1e0a52f3]
  41a951:	leave  
  41a952:	mov    DWORD PTR [ebx+0x71d01fa3],eax
  41a958:	imul   edi,DWORD PTR [ecx+0x12],0x8c2d3d1a
  41a95f:	cmp    bl,ah
  41a961:	(bad)  [ecx+ebx*2-0x6609b45a]
  41a968:	sbb    DWORD PTR [eax-0x738c3068],ebp
  41a96e:	jle    0x41a959
  41a970:	adc    DWORD PTR [ebp-0x5f9633ae],0xab6d8126
  41a97a:	retf   0xfecf
  41a97d:	mov    ds:0xad3ef5ec,eax
  41a982:	daa    
  41a983:	scas   al,BYTE PTR es:[edi]
  41a984:	(bad)  [eax+esi*4]
  41a987:	dec    ebx
  41a988:	jnp    0x41aa05
  41a98a:	add    edx,DWORD PTR [ebp+0x16]
  41a98d:	cmp    ebx,DWORD PTR [eax+0x7c]
  41a990:	push   ss
  41a991:	lahf   
  41a992:	jmp    0x600d:0xe3921fae
  41a999:	cli    
  41a99a:	dec    eax
  41a99b:	pop    ss
  41a99c:	sar    DWORD PTR [esi+0x7608e6c4],cl
  41a9a2:	sbb    BYTE PTR [edi],bh
  41a9a4:	pop    ds
  41a9a5:	adc    ecx,ecx
  41a9a7:	xor    eax,0x4d02805d
  41a9ac:	mov    al,ds:0x71cbb245
  41a9b1:	push   ebx
  41a9b2:	jo     0x41a9eb
  41a9b4:	popf   
  41a9b5:	pop    ebp
  41a9b6:	jne    0x41a9a5
  41a9b8:	out    dx,eax
  41a9b9:	or     ebp,DWORD PTR [edi+eax*4]
  41a9bc:	or     al,0x44
  41a9be:	pushf  
  41a9bf:	(bad)  
  41a9c1:	sub    BYTE PTR [ebx],0x73
  41a9c4:	fst    st(2)
  41a9c6:	or     al,0x1e
  41a9c8:	inc    eax
  41a9c9:	push   eax
  41a9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9cb:	xchg   ebp,eax
  41a9cc:	jno    0x41a982
  41a9ce:	push   ebx
  41a9cf:	pop    es
  41a9d0:	sbb    esi,esi
  41a9d2:	pop    ds
  41a9d3:	push   ds
  41a9d4:	jnp    0x41aa2d
  41a9d6:	add    al,0xde
  41a9d8:	ss mov ch,0x96
  41a9db:	inc    edi
  41a9dc:	mov    BYTE PTR [eax+0x12259f64],cl
  41a9e2:	pop    ebx
  41a9e3:	jmp    0xb9df:0x93b5e8ca
  41a9ea:	out    0x9a,eax
  41a9ec:	ror    BYTE PTR [edi+0x34f4702d],1
  41a9f2:	loopne 0x41a977
  41a9f4:	dec    edx
  41a9f5:	mov    ebp,0xdcd1afdc
  41a9fa:	popa   
  41a9fb:	lods   eax,DWORD PTR ds:[esi]
  41a9fc:	pusha  
  41a9fd:	sub    al,0x9a
  41a9ff:	inc    edx
  41aa00:	dec    ecx
  41aa01:	out    0xb1,al
  41aa03:	pop    ebp
  41aa04:	push   esi
  41aa05:	xchg   esp,eax
  41aa06:	mov    ebx,0xe5b4aec4
  41aa0b:	idiv   BYTE PTR [edi+edi*4-0x2b017f62]
  41aa12:	or     eax,0xb5607b6c
  41aa17:	jmp    0xcca57fe
  41aa1c:	stos   BYTE PTR es:[edi],al
  41aa1d:	mov    dh,bl
  41aa1f:	mov    cl,0x78
  41aa21:	stos   DWORD PTR es:[edi],eax
  41aa22:	or     eax,0x98ea315f
  41aa27:	lods   eax,DWORD PTR ds:[esi]
  41aa28:	xor    al,0x5c
  41aa2a:	xchg   ecx,eax
  41aa2b:	inc    eax
  41aa2c:	jecxz  0x41aa8a
  41aa2e:	and    ebx,0x3a3ad52f
  41aa34:	(bad)  
  41aa35:	jmp    0x41aa52
  41aa37:	fnsave [edx-0x42251c5f]
  41aa3d:	jecxz  0x41aa35
  41aa3f:	cmp    eax,0x8f1a3a9c
  41aa44:	repnz mov fs,WORD PTR [esi-0xe]
  41aa48:	xchg   edx,eax
  41aa49:	imul   edi,DWORD PTR [edi+0x1],0x97f3f82a
  41aa50:	push   0xd40e9666
  41aa55:	(bad)  
  41aa56:	mov    bh,0xee
  41aa58:	out    dx,eax
  41aa59:	or     DWORD PTR [ecx-0x13],ebx
  41aa5c:	aas    
  41aa5d:	ret    
  41aa5e:	jnp    0x41aa18
  41aa60:	adc    esp,edi
  41aa62:	(bad)  
  41aa63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa64:	or     BYTE PTR [ecx+0x509e58a4],0x8b
  41aa6b:	imul   ecx,esi,0x7d9e4ad5
  41aa71:	sbb    ch,BYTE PTR [ebx+0x35]
  41aa74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa75:	mov    ds:0x27d291b8,al
  41aa7a:	cmp    eax,DWORD PTR [ebx]
  41aa7c:	mov    cl,0xf2
  41aa7e:	lea    edx,[ecx+eiz*1]
  41aa81:	dec    edi
  41aa82:	mov    ebp,0xccdb04e0
  41aa87:	xchg   ebx,eax
  41aa88:	mov    ds:0x2fa5e0b9,al
  41aa8d:	ret    
  41aa8e:	int3   
  41aa8f:	or     eax,0xcb4cab59
  41aa94:	dec    edi
  41aa95:	cmc    
  41aa96:	dec    ebp
  41aa97:	lahf   
  41aa98:	test   DWORD PTR [eax+0x1314c463],edi
  41aa9e:	int    0xc3
  41aaa0:	fidivr DWORD PTR [edx+0x13]
  41aaa3:	jo     0x41ab15
  41aaa5:	(bad)  
  41aaa6:	push   ebp
  41aaa7:	or     eax,esp
  41aaa9:	loopne 0x41aa83
  41aaab:	fisttp DWORD PTR [ebx+0x317e9bed]
  41aab1:	jno    0x41aa55
  41aab3:	xchg   edx,eax
  41aab4:	inc    edx
  41aab5:	pop    es
  41aab6:	and    dl,dl
  41aab8:	xchg   esi,eax
  41aab9:	mov    DWORD PTR [ebx],edi
  41aabb:	sbb    al,BYTE PTR [ebp+0x210a31f3]
  41aac1:	jmp    0x41ab40
  41aac3:	mov    ecx,0x9f4830e4
  41aac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac9:	push   esp
  41aaca:	mov    ebx,0x32db9ad2
  41aacf:	std    
  41aad0:	pop    edi
  41aad1:	jmp    0xc0dd:0x6668170e
  41aad8:	cli    
  41aad9:	mov    dh,0xaf
  41aadb:	js     0x41aaa2
  41aadd:	fwait
  41aade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aadf:	sub    al,0xa4
  41aae1:	sbb    BYTE PTR [ebp*1-0x3891ce29],al
  41aae8:	fwait
  41aae9:	mov    ds:0xbd24eb52,al
  41aaee:	xchg   BYTE PTR [esi+edx*2],ch
  41aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf2:	jecxz  0x41aadf
  41aaf4:	xchg   ebp,eax
  41aaf5:	outs   dx,DWORD PTR ds:[esi]
  41aaf6:	ret    0xd530
  41aaf9:	inc    esi
  41aafa:	add    al,0xc5
  41aafc:	jmp    eax
  41aafe:	mov    dl,0x5a
  41ab00:	sub    al,0xff
  41ab02:	or     dh,BYTE PTR [ebx]
  41ab04:	sbb    edx,DWORD PTR [edx+0x202842e9]
  41ab0a:	sbb    al,0x49
  41ab0c:	lods   eax,DWORD PTR ds:[esi]
  41ab0d:	add    eax,0xb1443bd3
  41ab12:	adc    ch,BYTE PTR [ebx+0x54]
  41ab15:	or     ah,BYTE PTR [ebx+0x1f]
  41ab18:	add    bl,BYTE PTR [ecx+0x6a]
  41ab1b:	iret   
  41ab1c:	xchg   esp,eax
  41ab1d:	aam    0x4
  41ab1f:	sbb    bl,ah
  41ab21:	int3   
  41ab22:	lods   eax,DWORD PTR ds:[esi]
  41ab23:	push   cs
  41ab24:	jmp    0x7fc3:0xc67ed4ee
  41ab2b:	(bad)  
  41ab2c:	(bad)  
  41ab2d:	mov    edi,DWORD PTR [edi+0x2c5d939]
  41ab33:	mov    bl,0xb6
  41ab35:	adc    edx,esp
  41ab37:	cdq    
  41ab38:	shr    BYTE PTR [edx+0xa],cl
  41ab3b:	jp     0x41ab6b
  41ab3d:	jb     0x41aaf6
  41ab3f:	dec    ecx
  41ab40:	mov    ds:0x3644cb75,eax
  41ab45:	sbb    BYTE PTR [esp+edi*2-0x2a],al
  41ab49:	cs loopne 0x41abc5
  41ab4c:	push   cs
  41ab4d:	and    BYTE PTR [esi-0x11],bh
  41ab50:	inc    edi
  41ab51:	(bad)  
  41ab53:	in     al,0x79
  41ab55:	(bad)  
  41ab56:	js     0x41aaee
  41ab58:	popf   
  41ab59:	and    eax,DWORD PTR [ecx+ebx*8+0x11bee494]
  41ab60:	push   ecx
  41ab61:	dec    ebx
  41ab62:	iret   
  41ab63:	stc    
  41ab64:	dec    edx
  41ab65:	pop    esp
  41ab66:	scas   eax,DWORD PTR es:[edi]
  41ab67:	xor    bl,BYTE PTR [edx+0x6e]
  41ab6a:	mov    ah,0x28
  41ab6c:	dec    edi
  41ab6d:	ds rcr DWORD PTR es:[ebx+0x6df3e66e],0x7c
  41ab76:	cmp    DWORD PTR [ebp+0x169e3c6f],0x6eb303be
  41ab80:	test   al,0xce
  41ab82:	mov    WORD PTR [ebp+edx*2-0x392caf22],fs
  41ab89:	push   esp
  41ab8a:	add    esp,DWORD PTR [esi+0x78f5e774]
  41ab90:	and    edi,DWORD PTR [edi-0x1fc0bad1]
  41ab96:	add    eax,0x7385c1f
  41ab9b:	int    0x3e
  41ab9d:	and    DWORD PTR [edx+eax*8-0x42],ecx
  41aba1:	and    eax,0x83cbe826
  41aba6:	sbb    dl,ah
  41aba8:	test   DWORD PTR [edi+0x7d],ebp
  41abab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abad:	adc    al,0xbe
  41abaf:	(bad)  [eax-0x40]
  41abb2:	ret    
  41abb3:	es mov bh,0x48
  41abb6:	push   ebx
  41abb7:	jnp    0x41ab89
  41abb9:	sahf   
  41abba:	ja     0x41ab71
  41abbc:	push   ds
  41abbd:	mov    WORD PTR [esi+0xc49b544],fs
  41abc3:	jmp    0x41ac2e
  41abc5:	fist   DWORD PTR [edx+0x40d9f18b]
  41abcb:	sub    BYTE PTR [ebx],dh
  41abcd:	and    al,0x6
  41abcf:	push   esi
  41abd0:	(bad)  
  41abd2:	xlat   BYTE PTR ds:[ebx]
  41abd3:	cmp    al,0x3c
  41abd5:	lds    eax,FWORD PTR [esi]
  41abd7:	call   0x32f5a2aa
  41abdc:	cmc    
  41abdd:	test   dl,ch
  41abdf:	or     dl,dh
  41abe1:	test   BYTE PTR es:[ecx],bh
  41abe4:	dec    ecx
  41abe5:	mov    WORD PTR [eax+edi*4+0x1b],ss
  41abe9:	pop    es
  41abea:	cmp    eax,0xebf94229
  41abef:	call   DWORD PTR ds:0xdc560e03
  41abf5:	into   
  41abf6:	(bad)  
  41abf7:	repnz outs dx,DWORD PTR gs:[esi]
  41abfa:	fsubr  DWORD PTR [ecx+0xfe7328a]
  41ac00:	add    eax,0x69d7dfb8
  41ac05:	push   ebp
  41ac06:	push   0xfeaa372
  41ac0b:	ja     0x41abe9
  41ac0d:	call   0x184c:0xca498bd7
  41ac14:	jno    0x41ac76
  41ac16:	fisttp DWORD PTR [eax-0x16]
  41ac19:	sbb    al,0x2a
  41ac1b:	xor    eax,0x5c97ff0c
  41ac20:	leave  
  41ac21:	add    esi,ebx
  41ac23:	aam    0x4f
  41ac25:	ror    DWORD PTR [esi-0xf],cl
  41ac28:	inc    edi
  41ac29:	sub    al,0x7f
  41ac2b:	loope  0x41ac4c
  41ac2d:	adc    BYTE PTR [edx],bh
  41ac2f:	fldenv [edx+edi*1-0x30]
  41ac33:	scas   al,BYTE PTR es:[edi]
  41ac34:	push   0xc4065702
  41ac39:	dec    esp
  41ac3a:	and    ebp,DWORD PTR [esp]
  41ac3d:	mov    ch,0x5e
  41ac3f:	mov    ch,0x81
  41ac41:	xchg   ebx,eax
  41ac42:	and    DWORD PTR [ecx+edi*4+0x54],edi
  41ac46:	or     al,0xf0
  41ac48:	fs out dx,eax
  41ac4a:	inc    esp
  41ac4b:	and    dh,dl
  41ac4d:	mov    ds:0x444665ba,eax
  41ac52:	jmp    0x41accd
  41ac54:	int3   
  41ac55:	mov    cl,0x3a
  41ac57:	nop
  41ac58:	stos   DWORD PTR es:[edi],eax
  41ac59:	in     eax,dx
  41ac5a:	adc    al,0x1b
  41ac5c:	das    
  41ac5d:	jnp    0x41ac49
  41ac5f:	scas   eax,DWORD PTR es:[edi]
  41ac60:	add    dh,0x28
  41ac63:	fidiv  DWORD PTR ds:0x2c8c0e4d
  41ac69:	int    0x2d
  41ac6b:	xor    dl,BYTE PTR [edx]
  41ac6d:	gs test al,0x80
  41ac70:	mov    ebx,DWORD PTR [edi-0x60]
  41ac73:	mov    esp,0x22a03320
  41ac78:	mov    eax,ds:0x3fa15d72
  41ac7d:	into   
  41ac7e:	popa   
  41ac7f:	push   0x5971b205
  41ac84:	push   esi
  41ac85:	inc    edx
  41ac86:	retf   
  41ac87:	xchg   ecx,eax
  41ac88:	call   0x23d:0x7456c043
  41ac8f:	push   edi
  41ac90:	out    dx,eax
  41ac91:	push   esp
  41ac92:	pop    ebp
  41ac93:	pop    esi
  41ac94:	fidivr WORD PTR [eax+0x48]
  41ac97:	dec    ebp
  41ac98:	push   eax
  41ac99:	(bad)  
  41ac9a:	fucomp st(0)
  41ac9c:	mov    ecx,0x79f264d7
  41aca1:	nop
  41aca2:	(bad)  
  41aca3:	push   0xffffff8a
  41aca5:	sbb    al,0xe4
  41aca7:	inc    esi
  41aca8:	jmp    0x20e0d535
  41acad:	inc    edi
  41acae:	(bad)  
  41acaf:	fidivr DWORD PTR [edi+0x21]
  41acb2:	dec    eax
  41acb3:	mov    eax,ds:0x482ece03
  41acb8:	outs   dx,DWORD PTR ds:[esi]
  41acb9:	push   ds
  41acba:	es (bad) 
  41acbc:	sub    eax,0x71ebf740
  41acc1:	push   0xa
  41acc3:	sub    dl,BYTE PTR [edi-0x5da535ed]
  41acc9:	dec    edx
  41acca:	imul   BYTE PTR [ebx+0x19]
  41accd:	ret    
  41acce:	(bad)  
  41accf:	jecxz  0x41aca3
  41acd1:	js     0x41acd8
  41acd3:	mov    WORD PTR [eax+eiz*1-0x1],ds
  41acd7:	jecxz  0x41ac90
  41acd9:	cmp    eax,0xc805d978
  41acde:	mov    dl,0xad
  41ace0:	js     0x41acb6
  41ace2:	dec    edx
  41ace3:	popa   
  41ace4:	jecxz  0x41acd9
  41ace6:	jns    0x41ac77
  41ace8:	pop    esp
  41ace9:	fucomip st,st(5)
  41aceb:	pop    ecx
  41acec:	add    esp,ebp
  41acee:	cli    
  41acef:	(bad)  
  41acf0:	pushf  
  41acf1:	xor    esi,esi
  41acf3:	mov    BYTE PTR [ebp+0x6929e6e8],0x6b
  41acfa:	popf   
  41acfb:	pop    ecx
  41acfc:	dec    edi
  41acfd:	dec    ebp
  41acfe:	out    0x8d,eax
  41ad00:	xchg   ebp,eax
  41ad01:	je     0x41ad3c
  41ad03:	or     eax,0x47bea034
  41ad08:	stos   DWORD PTR es:[edi],eax
  41ad09:	pop    ebp
  41ad0a:	dec    ebp
  41ad0b:	in     eax,0x8
  41ad0d:	cmovle edx,DWORD PTR [ebx]
  41ad10:	add    eax,0xdfd7c88a
  41ad15:	pop    edi
  41ad16:	nop
  41ad17:	shl    DWORD PTR [ecx+0x3],cl
  41ad1a:	mov    dl,0xa
  41ad1c:	std    
  41ad1d:	pop    edx
  41ad1e:	add    eax,DWORD PTR [ebp-0x3c0d9bc5]
  41ad24:	sub    cl,ah
  41ad26:	jmp    0x76c2de38
  41ad2b:	setne  BYTE PTR [eax+0x9]
  41ad2f:	je     0xfcf5f530
  41ad35:	mov    bh,0xa6
  41ad37:	loop   0x41adaf
  41ad39:	(bad)  
  41ad3a:	aad    0x53
  41ad3c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ad3e:	pop    edi
  41ad3f:	icebp  
  41ad40:	jno    0x41ad05
  41ad42:	int3   
  41ad43:	pop    ecx
  41ad44:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ad46:	dec    edx
  41ad47:	adc    ebx,DWORD PTR [edi]
  41ad49:	sbb    al,0x45
  41ad4b:	scas   al,BYTE PTR es:[edi]
  41ad4c:	adc    dl,BYTE PTR [ecx]
  41ad4e:	pop    eax
  41ad4f:	daa    
  41ad50:	cli    
  41ad51:	jb     0x41ad40
  41ad53:	xor    bh,BYTE PTR [edi+ebx*1+0x2fb4fd85]
  41ad5a:	or     eax,0x217f35a6
  41ad5f:	fmul   st(4),st
  41ad61:	mov    al,BYTE PTR [edx+0x4019a11f]
  41ad67:	int    0x78
  41ad69:	out    0x6b,al
  41ad6b:	push   eax
  41ad6c:	push   ebx
  41ad6d:	or     eax,esi
  41ad6f:	pop    esi
  41ad70:	dec    esp
  41ad71:	sbb    BYTE PTR [ebx-0x5e],dh
  41ad74:	push   es
  41ad75:	ja     0x41ad7b
  41ad77:	xchg   edx,eax
  41ad78:	push   ecx
  41ad79:	iret   
  41ad7a:	nop
  41ad7b:	add    eax,0xcc2cf6a8
  41ad80:	add    BYTE PTR [ecx],ah
  41ad82:	push   esi
  41ad83:	jl     0x41ad1f
  41ad85:	daa    
  41ad86:	fiadd  WORD PTR [edx+0x3005e0b8]
  41ad8c:	dec    ecx
  41ad8d:	jge    0x41ade9
  41ad8f:	and    eax,0x8dce313
  41ad94:	rol    BYTE PTR [eax+esi*2+0xa],cl
  41ad98:	mov    ecx,0x6d850841
  41ad9d:	mov    ecx,0x861d9965
  41ada2:	dec    esp
  41ada3:	and    al,0xd4
  41ada5:	adc    edx,DWORD PTR [esi-0x641980c9]
  41adab:	and    al,0x5c
  41adad:	fimul  WORD PTR [edx-0x574b4231]
  41adb3:	pusha  
  41adb4:	pop    ds
  41adb5:	cmp    dl,ah
  41adb7:	push   0x87e5d162
  41adbc:	push   ebp
  41adbd:	lds    esp,FWORD PTR [ecx]
  41adbf:	push   eax
  41adc0:	icebp  
  41adc1:	mov    eax,0x86906b12
  41adc6:	xor    al,BYTE PTR [eax+0x24]
  41adc9:	xor    bh,al
  41adcb:	or     eax,esi
  41adcd:	gs jp  0x41adfd
  41add0:	cmp    BYTE PTR [esi+0x75],dl
  41add3:	xchg   ecx,eax
  41add4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41add5:	cmp    esp,DWORD PTR [ebp-0x606eeb6b]
  41addb:	adc    bl,bl
  41addd:	jmp    0x41ad82
  41addf:	mov    esp,0x134b84f1
  41ade4:	push   ebx
  41ade5:	jne    0x41ae2f
  41ade7:	pop    ecx
  41ade8:	jle    0x41ada5
  41adea:	(bad)  
  41adeb:	xchg   edx,eax
  41adec:	cmp    ecx,ecx
  41adee:	pop    ss
  41adef:	xchg   BYTE PTR [eax+eax*8+0x7e],ch
  41adf3:	cmp    al,0xa2
  41adf5:	in     al,0x61
  41adf7:	pusha  
  41adf8:	das    
  41adf9:	rol    BYTE PTR ds:0x88223a2b,1
  41adff:	mov    bh,0xab
  41ae01:	sub    al,0x6c
  41ae03:	xchg   ecx,eax
  41ae04:	adc    ecx,DWORD PTR [eax-0xa]
  41ae07:	mov    DWORD PTR [esi+0x63d4b436],esp
  41ae0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae0e:	into   
  41ae0f:	lds    eax,FWORD PTR [esi+ebp*2]
  41ae12:	xchg   ecx,eax
  41ae13:	and    ebp,DWORD PTR [ebx+edi*1-0xd30520d]
  41ae1a:	loop   0x41adc1
  41ae1c:	pop    ecx
  41ae1d:	icebp  
  41ae1e:	xchg   ebp,eax
  41ae1f:	lods   al,BYTE PTR ds:[esi]
  41ae20:	retf   0x4264
  41ae23:	push   esi
  41ae24:	mov    ebx,0xe31cc7a8
  41ae29:	jns    0x41ae56
  41ae2b:	cwde   
  41ae2c:	pop    ebp
  41ae2d:	sbb    eax,0x47f56cef
  41ae32:	(bad)  
  41ae33:	xchg   edx,eax
  41ae34:	sbb    DWORD PTR [ecx+0x7d],0xb9d3b05f
  41ae3b:	bnd jns 0x41ae08
  41ae3e:	jbe    0x41ae74
  41ae40:	push   cs
  41ae41:	jns    0x41ae97
  41ae43:	or     eax,0x3b852a9e
  41ae48:	pop    esi
  41ae49:	mov    bh,0x7
  41ae4b:	scas   al,BYTE PTR es:[edi]
  41ae4c:	mov    ah,ch
  41ae4e:	scas   eax,DWORD PTR es:[edi]
  41ae4f:	inc    esp
  41ae50:	xchg   edx,eax
  41ae51:	(bad)  
  41ae52:	rol    DWORD PTR [ecx+0x16],cl
  41ae55:	cmp    esi,DWORD PTR [ebx-0x51]
  41ae58:	ret    
  41ae59:	mov    esi,0x10abcbac
  41ae5e:	or     bh,bl
  41ae60:	dec    esi
  41ae61:	xchg   esp,eax
  41ae62:	pusha  
  41ae63:	or     ah,BYTE PTR [eax-0xb6342f6]
  41ae69:	loope  0x41aeaf
  41ae6b:	jbe    0x41ae91
  41ae6d:	mov    edi,0x72945483
  41ae72:	test   eax,0x6be75783
  41ae77:	fnstcw WORD PTR ds:[edx-0x19]
  41ae7b:	inc    ebp
  41ae7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae7d:	mov    edi,0xcb797edf
  41ae82:	dec    ebp
  41ae83:	sub    DWORD PTR [edx-0x613996fd],ebp
  41ae89:	dec    edi
  41ae8a:	stos   BYTE PTR es:[edi],al
  41ae8b:	popa   
  41ae8c:	inc    ebx
  41ae8d:	jmp    0xc4fcea60
  41ae92:	push   ebp
  41ae93:	add    dh,BYTE PTR [eiz*8+0x11526378]
  41ae9a:	pop    edx
  41ae9b:	cld    
  41ae9c:	hlt    
  41ae9d:	aaa    
  41ae9e:	pop    ss
  41ae9f:	repnz and BYTE PTR [esi+ecx*4+0x3f],dh
  41aea4:	xchg   BYTE PTR [ebx],al
  41aea6:	into   
  41aea7:	loopne 0x41ae34
  41aea9:	or     BYTE PTR [edx-0x1c],0xdb
  41aead:	(bad)  [ebx-0x2f3ea8fa]
  41aeb3:	xor    eax,0x233118e5
  41aeb8:	pop    ss
  41aeb9:	mov    bh,0x56
  41aebb:	jmp    0x41aeb4
  41aebd:	jnp    0x41af26
  41aebf:	xor    al,0x11
  41aec1:	sub    al,0x52
  41aec3:	out    dx,eax
  41aec4:	sub    eax,0x95db01ed
  41aec9:	in     al,0x35
  41aecb:	or     eax,0xf90c2f45
  41aed0:	lods   eax,DWORD PTR ds:[esi]
  41aed1:	rcr    DWORD PTR [edi-0x31882502],cl
  41aed7:	add    BYTE PTR [edi-0x55],bh
  41aeda:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41aedc:	push   ecx
  41aedd:	sbb    al,0x28
  41aedf:	dec    eax
  41aee0:	mov    edx,0xc5cdc1c2
  41aee5:	xlat   BYTE PTR ds:[ebx]
  41aee6:	addr16 mov ebp,0x6c9c4460
  41aeec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeed:	or     eax,0x54614d72
  41aef2:	lods   al,BYTE PTR ds:[esi]
  41aef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef5:	outs   dx,DWORD PTR ds:[esi]
  41aef6:	inc    eax
  41aef7:	jg     0x41aec0
  41aef9:	pop    ecx
  41aefa:	push   ss
  41aefb:	fwait
  41aefc:	retf   
  41aefd:	rcr    edi,1
  41aeff:	outs   dx,BYTE PTR ds:[esi]
  41af00:	and    dh,0xe2
  41af03:	sahf   
  41af04:	pop    esi
  41af05:	push   esp
  41af06:	ja     0x41aecb
  41af08:	jne    0x41af83
  41af0a:	jbe    0x41af30
  41af0c:	xlat   BYTE PTR ds:[ebx]
  41af0d:	ja     0x41aeea
  41af0f:	jge    0x41af66
  41af11:	imul   ebx,DWORD PTR [ebx-0xdfebd86],0x1401317a
  41af1b:	stos   DWORD PTR es:[edi],eax
  41af1c:	das    
  41af1d:	xlat   BYTE PTR ds:[ebx]
  41af1e:	neg    DWORD PTR [ebp+0x35]
  41af21:	jl     0x41af6c
  41af23:	sub    al,0xc7
  41af25:	or     edx,edi
  41af27:	imul   ebp,edx,0x6c
  41af2a:	ds xchg esi,eax
  41af2c:	cmp    ebp,DWORD PTR [edi+0x4a]
  41af2f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41af31:	(bad)  
  41af32:	dec    ebx
  41af33:	inc    ebp
  41af34:	mov    dl,0xc7
  41af36:	xchg   edi,eax
  41af37:	cs pop edi
  41af39:	jg     0x41af77
  41af3b:	xor    DWORD PTR [ebp-0x49eda224],esi
  41af41:	icebp  
  41af42:	(bad)  
  41af43:	in     eax,0x3d
  41af45:	popf   
  41af46:	adc    esp,esi
  41af48:	mov    cl,0x4b
  41af4a:	push   cs
  41af4b:	mov    bh,0x13
  41af4d:	ror    BYTE PTR [eax],0x4a
  41af50:	or     edi,0x54
  41af53:	std    
  41af54:	test   al,0xb7
  41af56:	sub    al,0x58
  41af58:	push   ebx
  41af59:	sbb    esp,edi
  41af5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af5c:	addr16 inc esi
  41af5e:	xor    edi,edx
  41af60:	adc    eax,0x32d475a1
  41af65:	cli    
  41af66:	add    edi,DWORD PTR [esi-0x139e8eb6]
  41af6c:	sbb    al,0x4
  41af6f:	fldpi  
  41af71:	dec    edx
  41af72:	sar    BYTE PTR [ebx],cl
  41af74:	xchg   DWORD PTR [ebx],ebx
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	or     al,0x15
  41af79:	out    dx,al
  41af7a:	out    dx,al
  41af7b:	loopne 0x41af7f
  41af7d:	sub    DWORD PTR [ecx-0x5d],esp
  41af80:	jecxz  0x41af41
  41af82:	sbb    eax,0xf543b678
  41af87:	leave  
  41af88:	mov    ah,0x73
  41af8a:	in     eax,dx
  41af8b:	and    cl,bl
  41af8d:	sti    
  41af8e:	cmp    BYTE PTR cs:[ebx],al
  41af91:	add    DWORD PTR [eax],eax
  41af93:	repz push eax
  41af95:	(bad)  
  41af96:	fidivr WORD PTR [ebx+0x52]
  41af99:	pop    edx
  41af9a:	sub    DWORD PTR [ecx],ebp
  41af9c:	cmp    cl,BYTE PTR [esi+0x14]
  41af9f:	jns    0x41af88
  41afa1:	sbb    dl,BYTE PTR [ebp+0x5d]
  41afa4:	dec    ecx
  41afa5:	jb     0x41affb
  41afa7:	pop    eax
  41afa8:	aam    0xcc
  41afaa:	fild   DWORD PTR [edi]
  41afac:	push   ebp
  41afad:	loope  0x41b011
  41afaf:	lea    esp,[ebx]
  41afb1:	lods   eax,DWORD PTR ds:[esi]
  41afb2:	xchg   edx,eax
  41afb3:	popf   
  41afb4:	(bad)  [ebx-0x7a1110c0]
  41afba:	repz ds or al,0x41
  41afbe:	pop    esi
  41afbf:	pop    ebx
  41afc0:	gs push ecx
  41afc2:	fcom   DWORD PTR [eax+ebx*2-0x7395f663]
  41afc9:	cmp    ah,0x8a
  41afcc:	xor    eax,0x9965c529
  41afd1:	(bad)  
  41afd2:	fisubr DWORD PTR [eax-0x5309af01]
  41afd8:	sub    eax,0x21d6d01d
  41afdd:	aaa    
  41afde:	fs clc 
  41afe0:	in     al,0x40
  41afe2:	inc    ebx
  41afe3:	mov    edi,0x5a5d734d
  41afe8:	cld    
  41afe9:	ror    esi,1
  41afeb:	test   BYTE PTR [ebx-0xa],dl
  41afee:	ins    BYTE PTR es:[edi],dx
  41afef:	mov    DWORD PTR [esi+0xa],esp
  41aff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aff3:	in     al,0x7b
  41aff5:	cmp    ebx,ecx
  41aff7:	lahf   
  41aff8:	jbe    0x41afe9
  41affa:	pop    ebx
  41affb:	ror    BYTE PTR [ebx],cl
  41affd:	add    ch,bl
  41afff:	inc    ebx
  41b000:	and    BYTE PTR [ebx+0x8],dh
  41b003:	js     0x41af97
  41b005:	sbb    al,0x1c
  41b007:	fst    QWORD PTR [edi+0x6318011]
  41b00d:	lahf   
  41b00e:	imul   eax,eax,0x7301beec
  41b014:	cmp    dh,BYTE PTR [ebx+0x47]
  41b017:	(bad)  
  41b018:	mov    ah,0xb0
  41b01a:	xchg   esp,eax
  41b01b:	pop    ss
  41b01c:	jg     0x41afe7
  41b01e:	(bad)  
  41b01f:	mov    al,ds:0x4c3273bf
  41b024:	mov    edi,0x3c27024b
  41b029:	dec    edi
  41b02a:	mov    ebx,0x3644ce9d
  41b02f:	dec    ebp
  41b030:	or     bl,ch
  41b032:	int3   
  41b033:	shl    DWORD PTR [eax],cl
  41b035:	mov    al,ds:0x222258f5
  41b03a:	test   BYTE PTR cs:[ecx],dl
  41b03d:	leave  
  41b03e:	dec    esp
  41b03f:	imul   ebp,DWORD PTR [esi],0xffffffa1
  41b042:	(bad)  [eax-0x4eaaeabd]
  41b048:	pop    ebx
  41b049:	outs   dx,BYTE PTR ds:[esi]
  41b04a:	pop    esi
  41b04b:	dec    ecx
  41b04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04d:	xchg   ah,bl
  41b04f:	cmp    cl,ah
  41b051:	cmp    al,0xbd
  41b053:	sub    DWORD PTR [ebx],edi
  41b055:	mov    dl,0xac
  41b057:	adc    eax,0x68efc540
  41b05c:	pop    edi
  41b05d:	mov    dh,0x9d
  41b05f:	arpl   sp,si
  41b061:	cld    
  41b062:	mov    ds:0x3feac4b1,al
  41b067:	and    esi,DWORD PTR [esi+0x18]
  41b06a:	dec    ebx
  41b06b:	inc    edx
  41b06c:	in     eax,dx
  41b06d:	das    
  41b06e:	push   es
  41b06f:	bound  edi,QWORD PTR [edi+0x4d407af]
  41b075:	pop    edx
  41b076:	push   ebp
  41b077:	pop    ecx
  41b078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b079:	int3   
  41b07a:	scas   al,BYTE PTR es:[edi]
  41b07b:	mov    DWORD PTR [ebx+0xc],edi
  41b07e:	mov    esp,0x48735c45
  41b083:	clc    
  41b084:	inc    esp
  41b085:	pop    ebp
  41b086:	cmc    
  41b087:	setbe  dl
  41b08a:	stos   BYTE PTR es:[di],al
  41b08c:	adc    al,0xa8
  41b08e:	lods   eax,DWORD PTR ds:[esi]
  41b08f:	loop   0x41b103
  41b091:	add    bh,dh
  41b093:	push   esp
  41b094:	mov    ebp,0x8e49b21a
  41b099:	mov    DWORD PTR [ebx-0x6e],esp
  41b09c:	inc    edi
  41b09d:	mov    eax,ds:0x8e045e80
  41b0a2:	mov    ch,0xa8
  41b0a4:	imul   ebp,DWORD PTR [ebp+0x64],0xa2368a11
  41b0ab:	inc    esp
  41b0ac:	xchg   edx,eax
  41b0ad:	repz push ebx
  41b0af:	(bad)  
  41b0b0:	in     eax,0xa6
  41b0b2:	adc    DWORD PTR [edi],ebp
  41b0b4:	mov    ch,0xf1
  41b0b6:	sub    al,0x27
  41b0b8:	scas   al,BYTE PTR es:[edi]
  41b0b9:	pusha  
  41b0ba:	mov    bh,0xef
  41b0bc:	pushf  
  41b0bd:	push   esi
  41b0be:	in     al,0xfe
  41b0c0:	mov    eax,ds:0x617026d3
  41b0c5:	push   ebp
  41b0c6:	pop    ss
  41b0c7:	sbb    eax,0xc641b7e1
  41b0cc:	dec    BYTE PTR [ecx-0x3c59272a]
  41b0d2:	xchg   edx,eax
  41b0d3:	sti    
  41b0d4:	jb     0x41b155
  41b0d6:	inc    ecx
  41b0d7:	cmp    eax,0x2714cc4f
  41b0dc:	xor    DWORD PTR [eax+0x3d],ebp
  41b0df:	jnp    0x41b14c
  41b0e1:	dec    esp
  41b0e2:	das    
  41b0e3:	dec    edx
  41b0e4:	out    0x9b,al
  41b0e6:	xchg   ebp,eax
  41b0e7:	pusha  
  41b0e8:	(bad)  
  41b0e9:	fsubr  st(6),st
  41b0eb:	das    
  41b0ec:	or     BYTE PTR [ecx+0x80ab9fa],dh
  41b0f2:	pop    ss
  41b0f3:	dec    ebx
  41b0f4:	int    0x0
  41b0f6:	(bad)  
  41b0f7:	mov    eax,0x3693022c
  41b0fc:	jl     0x41b11e
  41b0fe:	push   0x13
  41b100:	add    BYTE PTR [esi+ebp*4-0x19],dh
  41b104:	inc    ebx
  41b105:	xor    eax,0xd5bcb8d3
  41b10a:	fcomp  DWORD PTR [ebp+0x52228e17]
  41b110:	data16 jl 0x41b0c4
  41b113:	mov    cl,dl
  41b115:	nop
  41b116:	cs or  ebp,edx
  41b119:	mov    bl,dh
  41b11b:	push   0xf9947caa
  41b120:	lds    ecx,FWORD PTR [eax-0x5]
  41b123:	lods   al,BYTE PTR ds:[esi]
  41b124:	outs   dx,BYTE PTR ds:[esi]
  41b125:	xor    ah,al
  41b127:	fs mov al,0x3
  41b12a:	dec    eax
  41b12b:	pop    ecx
  41b12c:	inc    ebp
  41b12d:	loop   0x41b1a7
  41b12f:	inc    esi
  41b130:	dec    esp
  41b131:	sub    eax,0x88839a77
  41b136:	add    ch,BYTE PTR [eax]
  41b138:	mov    al,0x7f
  41b13a:	cmp    al,0x24
  41b13c:	ds aaa 
  41b13e:	jl     0x41b0cc
  41b140:	jns    0x41b0f7
  41b142:	aaa    
  41b143:	or     BYTE PTR [eax+ecx*2],al
  41b146:	push   0x1d
  41b148:	dec    ebp
  41b149:	push   es
  41b14a:	sbb    BYTE PTR [edx-0x77d1053d],ah
  41b150:	imul   ecx,DWORD PTR [edx-0x5a0e0aa5],0xcfaacf34
  41b15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b15b:	sbb    BYTE PTR [esi+0x6ed25254],cl
  41b161:	icebp  
  41b162:	shl    BYTE PTR [ecx+0x37],1
  41b165:	jecxz  0x41b0e7
  41b167:	pop    ds
  41b168:	fwait
  41b169:	cmp    al,0x8e
  41b16b:	je     0x41b171
  41b16d:	xchg   esi,eax
  41b16e:	icebp  
  41b16f:	xchg   BYTE PTR [edx],ch
  41b171:	stos   DWORD PTR es:[edi],eax
  41b172:	and    eax,0x716fc018
  41b177:	sub    esp,ebx
  41b179:	inc    esp
  41b17a:	int    0xf0
  41b17c:	data16 and al,0xf8
  41b17f:	sub    eax,ecx
  41b181:	pop    ebx
  41b182:	in     eax,0xee
  41b184:	mov    ds,WORD PTR [edx+0x5d]
  41b187:	lods   al,BYTE PTR ds:[esi]
  41b188:	cmp    BYTE PTR [esi+0x3f],0x8e
  41b18c:	(bad)  
  41b18d:	lock add eax,0x251dcd12
  41b193:	ds std 
  41b195:	shl    ah,cl
  41b197:	inc    eax
  41b198:	rcr    BYTE PTR [eax-0x10618fa4],0x1d
  41b19f:	fwait
  41b1a0:	mov    ah,dl
  41b1a2:	sub    BYTE PTR ds:0x447df38e,al
  41b1a8:	repnz mov eax,ds:0xb627dd55
  41b1ae:	int    0xbf
  41b1b0:	std    
  41b1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1b2:	pop    ebp
  41b1b3:	sub    BYTE PTR [ebx-0x78682f3a],0xd4
  41b1ba:	je     0x41b1d5
  41b1bc:	pop    ebp
  41b1bd:	mov    esi,0xe63665a8
  41b1c2:	mov    dh,BYTE PTR [eax-0x1e1b32ad]
  41b1c8:	gs not bl
  41b1cb:	addr16 pop ebx
  41b1cd:	add    al,0x9b
  41b1cf:	loopne 0x41b172
  41b1d1:	(bad)  
  41b1d2:	push   ebx
  41b1d3:	sub    eax,0x6712d40b
  41b1d8:	data16 add al,0x3c
  41b1db:	sbb    ebx,ebp
  41b1dd:	inc    esi
  41b1de:	iret   
  41b1df:	sbb    eax,0x98591326
  41b1e4:	sub    eax,0xbb8f6c0b
  41b1e9:	push   eax
  41b1ea:	dec    ebp
  41b1eb:	push   ss
  41b1ec:	stos   DWORD PTR es:[edi],eax
  41b1ed:	xchg   ecx,eax
  41b1ee:	ins    BYTE PTR es:[edi],dx
  41b1ef:	jnp    0x41b26d
  41b1f1:	sbb    DWORD PTR [edx+0x56],ecx
  41b1f4:	cmp    ch,BYTE PTR [eax+0x17]
  41b1f7:	dec    esi
  41b1f8:	mov    ds:0x612e5f91,eax
  41b1fd:	cmp    al,0x75
  41b1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b200:	rcr    ebx,0xaa
  41b203:	jmp    0x41b242
  41b205:	ret    
  41b206:	pop    ds
  41b207:	jl     0x41b1fb
  41b209:	ins    BYTE PTR es:[edi],dx
  41b20a:	in     al,dx
  41b20b:	fadd   DWORD PTR [edi]
  41b20d:	leave  
  41b20e:	fisubr DWORD PTR [edi-0x6886e2f2]
  41b214:	xchg   edi,eax
  41b215:	ins    DWORD PTR es:[edi],dx
  41b216:	in     al,0x2d
  41b218:	outs   dx,BYTE PTR ds:[esi]
  41b219:	aad    0xad
  41b21b:	retf   
  41b21c:	mov    WORD PTR [esi+ebx*2-0x4373654d],ds
  41b223:	ror    BYTE PTR ds:0xb982e043,cl
  41b229:	pop    ds
  41b22a:	gs jge 0x41b244
  41b22d:	add    eax,0x116dc74
  41b232:	inc    eax
  41b233:	fsubr  DWORD PTR [ecx]
  41b235:	scas   eax,DWORD PTR es:[edi]
  41b236:	xor    BYTE PTR [edi+0x4e],0xbc
  41b23a:	div    BYTE PTR [ecx]
  41b23c:	mov    si,0xeb0f
  41b240:	lock mov WORD PTR [edx-0x30],?
  41b244:	int3   
  41b245:	xchg   edi,eax
  41b246:	(bad)  
  41b24a:	in     eax,dx
  41b24b:	sub    eax,0x6957be58
  41b250:	sbb    eax,0xca4c1026
  41b255:	inc    ebx
  41b256:	inc    eax
  41b257:	in     al,dx
  41b258:	cmp    eax,edx
  41b25a:	cmp    BYTE PTR [edx],dh
  41b25c:	js     0x41b240
  41b25e:	outs   dx,BYTE PTR ds:[esi]
  41b25f:	jo     0x41b273
  41b261:	sub    DWORD PTR [ebp-0x5fff6a6e],edx
  41b267:	mov    edi,0x1b5f9e72
  41b26c:	test   DWORD PTR [eax-0x7adaa3bd],0x54346d3b
  41b276:	aam    0x6e
  41b278:	test   BYTE PTR [ecx-0x7c],cl
  41b27b:	pop    ebp
  41b27c:	mov    ebx,0x667350d1
  41b281:	das    
  41b282:	jp     0x41b271
  41b284:	retf   
  41b285:	or     ebp,edx
  41b287:	fld    QWORD PTR [esi+ecx*1+0x4e]
  41b28b:	stc    
  41b28c:	clc    
  41b28d:	mov    dl,0x2a
  41b28f:	out    0xfc,eax
  41b291:	inc    eax
  41b292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b293:	mov    esp,0xe6fbc842
  41b298:	push   ds
  41b299:	and    BYTE PTR [eax],bl
  41b29b:	nop
  41b29c:	push   ss
  41b29d:	sbb    DWORD PTR [ecx-0x2d2e4943],ebx
  41b2a3:	jg     0x41b293
  41b2a5:	mov    bh,0xa
  41b2a7:	lahf   
  41b2a8:	call   0xcc8a:0x5a8b0e89
  41b2af:	push   esi
  41b2b0:	hlt    
  41b2b1:	loop   0x41b2d4
  41b2b3:	repz or eax,0x7ef7b023
  41b2b9:	mov    ah,BYTE PTR [eax-0x6dc09ec5]
  41b2bf:	jl     0x41b2ef
  41b2c1:	sbb    DWORD PTR [edx-0x21],edx
  41b2c4:	push   esp
  41b2c5:	pop    ebx
  41b2c6:	add    edi,DWORD PTR [ebx+edx*4-0x5584920e]
  41b2cd:	and    DWORD PTR [esi-0x1024e1ea],ebx
  41b2d3:	imul   edi
  41b2d5:	bound  edx,QWORD PTR [ecx+eax*4]
  41b2d8:	pop    eax
  41b2d9:	pop    es
  41b2da:	aaa    
  41b2db:	push   eax
  41b2dc:	es daa 
  41b2de:	rcl    DWORD PTR [ecx+eiz*8+0x3053064b],cl
  41b2e5:	mov    esi,0x93b34a1
  41b2ea:	push   ds
  41b2eb:	lds    eax,FWORD PTR [eax+0x6ab9d27b]
  41b2f1:	mul    al
  41b2f3:	jbe    0x41b333
  41b2f5:	sbb    eax,0xadf58db8
  41b2fa:	sahf   
  41b2fb:	jno    0x41b2d0
  41b2fd:	inc    eax
  41b2fe:	nop
  41b2ff:	sub    eax,0xeb546b8b
  41b304:	adc    al,0xc
  41b306:	inc    esi
  41b307:	(bad)  [ebp+0x6c]
  41b30a:	addr16 ds retf 0xbb4
  41b30f:	sub    DWORD PTR [edx],ebp
  41b311:	fcmovb st,st(3)
  41b313:	nop
  41b314:	(bad)  
  41b315:	ins    BYTE PTR es:[edi],dx
  41b316:	add    edx,DWORD PTR [ecx]
  41b318:	test   BYTE PTR [edi+0xda26ee7],cl
  41b31e:	(bad)  
  41b320:	sbb    eax,0xbf63c58e
  41b325:	lock ret 
  41b327:	iret   
  41b328:	call   0xcea9d2d6
  41b32d:	mov    ebx,0xcf4bd822
  41b332:	fwait
  41b333:	push   ds
  41b334:	les    esp,FWORD PTR [edi+0x56]
  41b337:	sub    al,0x3e
  41b339:	adc    BYTE PTR [eax+0x7b62905f],al
  41b33f:	pop    ebx
  41b340:	aam    0xed
  41b342:	jbe    0x41b392
  41b344:	(bad)
  41b347:	out    dx,al
  41b348:	leave  
  41b349:	loope  0x41b2ce
  41b34b:	ds cwde 
  41b34d:	rol    DWORD PTR [edi+0x47],0x73
  41b351:	sbb    DWORD PTR [ebx],0xffffff97
  41b354:	sahf   
  41b355:	inc    ebx
  41b356:	stc    
  41b357:	rol    BYTE PTR [ebp-0x1ca79bde],0x9b
  41b35e:	dec    esi
  41b35f:	(bad)  
  41b361:	call   0xee4f8a5f
  41b366:	ins    DWORD PTR es:[edi],dx
  41b367:	pop    ds
  41b368:	in     al,0x35
  41b36a:	ins    BYTE PTR es:[edi],dx
  41b36b:	inc    ecx
  41b36c:	push   ss
  41b36d:	jns    0x41b3e7
  41b36f:	test   al,0x25
  41b371:	mov    ecx,0x4a7a4ced
  41b376:	push   esi
  41b377:	add    al,0x5b
  41b379:	out    dx,al
  41b37a:	jecxz  0x41b3ac
  41b37c:	test   eax,0x781cabbb
  41b381:	xrelease mov BYTE PTR [esi+0x2280877b],al
  41b388:	push   edi
  41b389:	adc    ebx,DWORD PTR [edi-0xa]
  41b38c:	test   eax,0x555d88c5
  41b391:	fst    QWORD PTR [edi+eiz*8]
  41b394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b395:	sbb    BYTE PTR [eax-0x30],0x0
  41b399:	fs int3 
  41b39b:	call   0xdc9ae4fe
  41b3a0:	xor    al,0xc8
  41b3a2:	dec    ebp
  41b3a3:	clc    
  41b3a4:	mov    esp,0x662a2f4c
  41b3a9:	lods   al,BYTE PTR ds:[esi]
  41b3aa:	cmp    DWORD PTR [eax-0x4e6bb884],eax
  41b3b0:	pop    ebx
  41b3b1:	mov    BYTE PTR ds:0xf527af19,bh
  41b3b7:	fild   DWORD PTR [ebx-0x20]
  41b3ba:	mov    WORD PTR ds:0x21e196fd,ds
  41b3c0:	retf   0x94f2
  41b3c3:	jb     0x41b439
  41b3c5:	xchg   ebx,eax
  41b3c6:	add    eax,0xeb3af3f3
  41b3cb:	shl    BYTE PTR ds:0xdf1949d5,1
  41b3d1:	wrmsr  
  41b3d3:	outs   dx,DWORD PTR ds:[esi]
  41b3d4:	pop    edi
  41b3d5:	pop    ebx
  41b3d6:	test   al,0x20
  41b3d8:	adc    al,bh
  41b3da:	mov    dl,0xa5
  41b3dc:	cli    
  41b3dd:	mov    eax,0x634d0d7d
  41b3e2:	enter  0x4b27,0x9f
  41b3e6:	mov    dl,0x32
  41b3e8:	(bad)  
  41b3e9:	fdivp  st(5),st
  41b3eb:	das    
  41b3ec:	clc    
  41b3ed:	mov    al,0x6d
  41b3ef:	pop    eax
  41b3f0:	in     al,dx
  41b3f1:	mov    al,ds:0x92b174f
  41b3f6:	sub    ecx,esi
  41b3f8:	imul   edi,edx,0xc6d66e28
  41b3fe:	pop    esi
  41b3ff:	dec    cl
  41b401:	adc    BYTE PTR [edi],ch
  41b403:	cmp    eax,0x2cdef4d6
  41b408:	mov    ah,0x4a
  41b40a:	test   eax,esi
  41b40c:	imul   ecx,DWORD PTR [esi],0x88696231
  41b412:	ds and ebp,ecx
  41b415:	fisttp WORD PTR [esi+0x6e]
  41b418:	rcl    DWORD PTR [edi+0x7b5b3b7e],cl
  41b41e:	ins    DWORD PTR es:[edi],dx
  41b41f:	xor    BYTE PTR [esi+0x1fb65b81],cl
  41b425:	xchg   ecx,eax
  41b426:	fnstcw WORD PTR [esi]
  41b428:	in     al,dx
  41b429:	int3   
  41b42a:	mov    ebx,0x179cd121
  41b42f:	cmp    DWORD PTR [eax+0xb],edi
  41b432:	mov    edx,DWORD PTR [edi-0x6a]
  41b435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b436:	add    esi,DWORD PTR [ebp+ebp*8-0x23]
  41b43a:	je     0x41b3c8
  41b43c:	sbb    al,0x28
  41b43e:	dec    edi
  41b43f:	xchg   esi,eax
  41b440:	cmp    esp,ebp
  41b442:	xor    al,0x74
  41b444:	mov    esp,0x14e2c1a9
  41b449:	dec    edi
  41b44a:	push   ecx
  41b44b:	xlat   BYTE PTR ds:[ebx]
  41b44c:	xchg   BYTE PTR [esi-0x10c54720],ch
  41b452:	xor    BYTE PTR [eax-0x2a2fe411],ch
  41b458:	dec    esp
  41b459:	mov    edx,0x2f3c0eab
  41b45e:	xor    ebp,ebx
  41b460:	pop    ds
  41b461:	add    eax,0xf604a14
  41b466:	ins    BYTE PTR es:[edi],dx
  41b467:	iret   
  41b468:	clc    
  41b469:	adc    ch,BYTE PTR [eax+ebp*2]
  41b46c:	or     dh,ch
  41b46e:	addr16 or eax,eax
  41b471:	cmp    ch,BYTE PTR [edi-0x68]
  41b474:	sbb    ch,BYTE PTR [ebp+0x83f572e]
  41b47a:	dec    edi
  41b47b:	gs or  al,0x48
  41b47e:	mov    DWORD PTR [esi],ebx
  41b480:	outs   dx,DWORD PTR ds:[esi]
  41b481:	xchg   ebx,eax
  41b482:	mov    al,0x35
  41b484:	cdq    
  41b485:	pop    ebx
  41b486:	inc    esp
  41b487:	sub    al,0xe0
  41b489:	xor    ebp,edx
  41b48b:	push   ds
  41b48c:	mov    ebp,0xd65c8f8c
  41b491:	jno    0x41b4ba
  41b493:	aas    
  41b494:	and    cl,bh
  41b496:	adc    edx,esp
  41b498:	daa    
  41b499:	adc    al,0x42
  41b49b:	shl    BYTE PTR [ebp+0x18],cl
  41b49e:	rol    DWORD PTR [eax+0x24],0x14
  41b4a2:	daa    
  41b4a3:	jae    0x41b44f
  41b4a5:	ss jb  0x41b4b8
  41b4a8:	adc    DWORD PTR [ebp+0x1d],eax
  41b4ab:	in     al,dx
  41b4ac:	push   ss
  41b4ad:	call   esi
  41b4af:	lods   eax,DWORD PTR ds:[esi]
  41b4b0:	in     al,0xa3
  41b4b2:	and    DWORD PTR es:[edx],eax
  41b4b5:	jg     0x41b493
  41b4b7:	clc    
  41b4b8:	arpl   ax,dx
  41b4ba:	ret    
  41b4bb:	push   0xff75607e
  41b4c0:	cs dec ecx
  41b4c2:	mov    esp,0x88cadd7
  41b4c7:	push   eax
  41b4c8:	jne    0x41b48f
  41b4ca:	jne    0x41b4d1
  41b4cc:	jge    0x41b511
  41b4ce:	icebp  
  41b4cf:	cmp    al,0xb2
  41b4d1:	imul   ecx,DWORD PTR [eax-0x4451eb00],0x7f52694a
  41b4db:	inc    edi
  41b4dc:	sub    ebp,DWORD PTR [edx+0x1d]
  41b4df:	sub    eax,esp
  41b4e1:	mov    dl,0xa3
  41b4e3:	sbb    al,0x7e
  41b4e5:	into   
  41b4e6:	imul   esi,DWORD PTR [eax-0x41],0x57
  41b4ea:	call   ecx
  41b4ec:	das    
  41b4ed:	int3   
  41b4ee:	mul    BYTE PTR [edx-0x20]
  41b4f1:	pusha  
  41b4f2:	xchg   ecx,eax
  41b4f3:	ds daa 
  41b4f5:	xchg   ebx,eax
  41b4f6:	mov    bh,0x3a
  41b4f8:	sti    
  41b4f9:	cmc    
  41b4fa:	ja     0x41b4e1
  41b4fc:	jge    0x41b4b9
  41b4fe:	je     0x41b52f
  41b500:	repz cmp eax,DWORD PTR [esi-0x1a]
  41b504:	ror    esp,1
  41b506:	sti    
  41b507:	push   edi
  41b508:	js     0x41b543
  41b50a:	(bad)  
  41b50b:	adc    ah,BYTE PTR [edx+ecx*2-0x6a]
  41b50f:	aaa    
  41b510:	pop    ebp
  41b511:	pop    edx
  41b512:	fidiv  DWORD PTR [edx+edi*8-0x19]
  41b516:	cwde   
  41b517:	adc    dh,cl
  41b519:	hlt    
  41b51a:	mov    ah,BYTE PTR [eax+0x16]
  41b51d:	and    eax,0x5607afaf
  41b522:	test   al,0x36
  41b524:	mov    eax,ds:0xb72280da
  41b529:	mov    ebp,ds
  41b52b:	push   es
  41b52c:	xlat   BYTE PTR ds:[ebx]
  41b52d:	jno    0x41b4ed
  41b52f:	outs   dx,BYTE PTR ds:[esi]
  41b530:	cmp    dh,BYTE PTR [edx+0x41]
  41b533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b534:	jb     0x41b4e2
  41b536:	cmp    dl,BYTE PTR [esi-0x2c]
  41b539:	lods   eax,DWORD PTR ds:[esi]
  41b53a:	add    bh,dh
  41b53c:	inc    edx
  41b53d:	adc    eax,0xe603b9a5
  41b542:	mov    eax,DWORD PTR [edx-0x77da8245]
  41b548:	add    al,0x6d
  41b54a:	add    DWORD PTR [ebp-0x28],edi
  41b54d:	mov    WORD PTR [edi-0x15],gs
  41b550:	leave  
  41b551:	outs   dx,BYTE PTR ds:[esi]
  41b552:	mov    cl,0xd8
  41b554:	push   ds
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	adc    edx,DWORD PTR [eax-0x116ff3]
  41b876:	add    BYTE PTR [ebx-0x7c7ca1f1],0x33
  41b87d:	rcr    DWORD PTR [ecx],cl
  41b87f:	out    0x8b,al
  41b881:	dec    edi
  41b882:	jbe    0xd003e36a
  41b888:	leave  
  41b889:	mov    ds:0xc10d054,al
  41b88e:	mov    eax,ds:0x7ce36bfb
  41b893:	add    cl,ch
  41b895:	push   ebp
  41b896:	cli    
  41b897:	scas   eax,DWORD PTR es:[edi]
  41b898:	hlt    
  41b899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89a:	(bad)  
  41b89b:	push   ebp
  41b89c:	mov    ebx,0x248f1ea7
  41b8a1:	es jnp 0x41b90b
  41b8a4:	popf   
  41b8a5:	sbb    eax,0x4772ea40
  41b8aa:	(bad)  [eax-0x3968bf6b]
  41b8b0:	data16 jno 0x41b8c0
  41b8b3:	rcl    DWORD PTR [eax+0x6f],1
  41b8b6:	dec    esi
  41b8b7:	fdivr  DWORD PTR [edi-0x6694faa9]
  41b8bd:	out    dx,al
  41b8be:	pop    edi
  41b8bf:	dec    ebx
  41b8c0:	jne    0x41b905
  41b8c2:	sti    
  41b8c3:	in     al,dx
  41b8c4:	dec    ebx
  41b8c5:	jge    0x41b8f4
  41b8c7:	xor    BYTE PTR [eax+0x1aa2f049],dl
  41b8cd:	(bad)  
  41b8ce:	sub    al,0x4c
  41b8d0:	pop    eax
  41b8d1:	mov    esp,0x6e073176
  41b8d6:	push   eax
  41b8d7:	mov    bl,0xeb
  41b8d9:	in     eax,0xe1
  41b8db:	das    
  41b8dc:	lods   eax,DWORD PTR ds:[esi]
  41b8dd:	imul   esi,DWORD PTR [edx-0x2f],0x7aa20b73
  41b8e4:	jo     0x41b90e
  41b8e6:	pop    esi
  41b8e7:	retf   0x2093
  41b8ea:	dec    edi
  41b8eb:	pop    edi
  41b8ec:	icebp  
  41b8ed:	pop    edi
  41b8ee:	xor    bh,BYTE PTR [ebp+0x24]
  41b8f1:	sub    al,0xd6
  41b8f3:	xchg   ebx,eax
  41b8f4:	jecxz  0x41b96e
  41b8f6:	mov    al,ds:0xa24d574a
  41b8fb:	push   ebp
  41b8fc:	out    0x2d,eax
  41b8fe:	ins    DWORD PTR es:[edi],dx
  41b8ff:	jmp    0x9e8945f8
  41b904:	lods   al,BYTE PTR ds:[esi]
  41b905:	nop
  41b906:	ds loop 0x41b944
  41b909:	test   eax,0x214b6fa7
  41b90e:	xchg   esp,eax
  41b90f:	popa   
  41b910:	xlat   BYTE PTR ds:[ebx]
  41b911:	sub    edx,DWORD PTR [edx+eiz*1-0x3a]
  41b915:	jl     0x41b91f
  41b917:	sub    DWORD PTR [eax+0x74],edi
  41b91a:	inc    esp
  41b91b:	add    al,0x16
  41b91d:	cmp    al,0x36
  41b91f:	sbb    ebx,DWORD PTR [edx]
  41b921:	stos   BYTE PTR es:[edi],al
  41b922:	push   esp
  41b923:	mov    ch,0x21
  41b925:	push   ecx
  41b926:	sub    DWORD PTR [ecx-0x2d615123],ecx
  41b92c:	adc    eax,0x1b8e9ade
  41b931:	adc    BYTE PTR [ecx-0x1e],dl
  41b934:	mov    eax,ds:0xfa6ec047
  41b939:	or     DWORD PTR [esi+0x2b7237c0],esp
  41b93f:	mov    ds:0xcd45653f,eax
  41b944:	inc    esi
  41b945:	jge    0x41b9bd
  41b947:	ficomp DWORD PTR [edx-0x7eab8063]
  41b94d:	out    dx,eax
  41b94e:	xchg   esp,eax
  41b94f:	cmp    ecx,DWORD PTR [ebp-0x1d]
  41b952:	add    al,0x82
  41b954:	fnstenv [esi+ebp*1+0x2d]
  41b958:	cmc    
  41b959:	cli    
  41b95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b95b:	push   eax
  41b95c:	mov    ds:0xde873792,eax
  41b961:	clc    
  41b962:	mov    cs,WORD PTR [eax-0x16]
  41b965:	pop    esi
  41b966:	jno    0x41b8fb
  41b968:	lock call 0x5b11:0x402247d2
  41b970:	sub    DWORD PTR [eax],0xf534d2dd
  41b976:	mov    ds:0xb2b62962,al
  41b97b:	jno    0x41b970
  41b97d:	cs sahf 
  41b97f:	sbb    edx,DWORD PTR [edx+ecx*4]
  41b982:	mov    esp,0x66562a94
  41b987:	cs jmp 0x41b989
  41b98a:	mov    BYTE PTR [esp+esi*2],al
  41b98d:	jecxz  0x41b949
  41b98f:	xor    BYTE PTR [esi],ch
  41b991:	lock mov DWORD PTR [eax+0x0],eax
  41b995:	push   ebx
  41b996:	or     DWORD PTR [esp+edx*4],0x57eb0b2a
  41b99d:	mov    esi,0xb212c803
  41b9a2:	or     esi,ebx
  41b9a4:	or     edi,esp
  41b9a6:	xlat   BYTE PTR ds:[ebx]
  41b9a7:	inc    ebx
  41b9a8:	inc    edx
  41b9a9:	mov    ch,0xb7
  41b9ab:	or     ch,BYTE PTR [edi]
  41b9ad:	cmp    ah,BYTE PTR [ebp-0x2b]
  41b9b0:	mov    ecx,ebp
  41b9b2:	jle    0x41b993
  41b9b4:	mov    esi,0x4c7af17f
  41b9b9:	mov    DWORD PTR [ecx-0x2f04026a],0xc485bae9
  41b9c3:	push   eax
  41b9c4:	mov    DWORD PTR [edi-0x7c],ecx
  41b9c7:	dec    edi
  41b9c8:	cli    
  41b9c9:	mov    dl,0x2
  41b9cb:	fst    DWORD PTR [esi+edx*1]
  41b9ce:	lods   al,BYTE PTR ds:[esi]
  41b9cf:	mov    ds:0x2b9b9758,eax
  41b9d4:	ins    BYTE PTR es:[edi],dx
  41b9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d6:	in     al,0x1e
  41b9d8:	cmp    edx,DWORD PTR [ebp+0x59]
  41b9db:	add    bh,BYTE PTR [eax-0x4bfd3815]
  41b9e1:	or     al,0x9d
  41b9e3:	das    
  41b9e4:	xlat   BYTE PTR cs:[ebx]
  41b9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e7:	sub    eax,0xa2562782
  41b9ec:	mov    DWORD PTR [esi],edx
  41b9ee:	imul   esi
  41b9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9f1:	xchg   BYTE PTR [ecx+0x4a],bl
  41b9f4:	mov    fs,WORD PTR [edi+eiz*8]
  41b9f7:	cmp    cl,bh
  41b9f9:	scas   eax,DWORD PTR es:[edi]
  41b9fa:	not    BYTE PTR [ebx]
  41b9fc:	cmp    al,0xd1
  41b9fe:	(bad)  
  41b9ff:	push   esp
  41ba00:	or     eax,0xca06c103
  41ba05:	leave  
  41ba06:	pusha  
  41ba07:	push   es
  41ba08:	and    esi,DWORD PTR [esi]
  41ba0a:	inc    ecx
  41ba0b:	scas   eax,DWORD PTR es:[edi]
  41ba0c:	dec    edx
  41ba0d:	pop    edi
  41ba0e:	xchg   esi,eax
  41ba0f:	rol    BYTE PTR [ecx+0x5092e47a],0xf1
  41ba16:	cli    
  41ba17:	cld    
  41ba18:	ret    0x4cca
  41ba1b:	mov    esp,0x8b47e2d3
  41ba20:	push   cs
  41ba21:	xor    eax,0xa970996e
  41ba26:	jmp    0xaec:0x6e230040
  41ba2d:	test   BYTE PTR [ebx+eax*1],al
  41ba30:	ins    DWORD PTR es:[edi],dx
  41ba31:	mov    eax,0xdc85a457
  41ba36:	inc    ch
  41ba38:	out    dx,eax
  41ba39:	call   0x25c7:0x27d42edd
  41ba40:	add    edi,edx
  41ba42:	pop    ebp
  41ba43:	pop    esp
  41ba44:	scas   eax,DWORD PTR es:[edi]
  41ba45:	arpl   WORD PTR [eax],cx
  41ba47:	mov    ebp,0x7d439d9d
  41ba4c:	aad    0x4
  41ba4e:	sub    cl,BYTE PTR [ebp+0x54]
  41ba51:	adc    BYTE PTR [ebx+0x405e2174],ah
  41ba57:	sti    
  41ba58:	(bad)  
  41ba59:	cmp    eax,0x3df97015
  41ba5e:	dec    eax
  41ba5f:	sti    
  41ba60:	mov    dl,BYTE PTR [ebx]
  41ba62:	je     0x41ba55
  41ba64:	push   ebx
  41ba65:	add    DWORD PTR [edx+0x3c7b1db5],0x7eb702c1
  41ba6f:	out    dx,al
  41ba70:	call   0xac8903ff
  41ba75:	sub    bh,cl
  41ba77:	xchg   DWORD PTR [ecx+0x12aebb71],ebx
  41ba7d:	retf   
  41ba7e:	mov    esp,0xfc33d494
  41ba83:	out    dx,eax
  41ba84:	iret   
  41ba85:	mov    bl,0x0
  41ba87:	sub    edi,DWORD PTR [ebp+0x9a0dad1]
  41ba8d:	mov    eax,ds:0x4c7ef29a
  41ba92:	adc    eax,0x711654aa
  41ba97:	outs   dx,BYTE PTR ds:[esi]
  41ba98:	mov    ah,0xf2
  41ba9a:	retw   
  41ba9c:	repnz cwde 
  41ba9e:	or     eax,0xcd5c25d9
  41baa3:	outs   dx,BYTE PTR ds:[esi]
  41baa4:	push   ebp
  41baa5:	adc    al,0xdd
  41baa7:	fsub   QWORD PTR [edi+0x40]
  41baaa:	pop    eax
  41baab:	bnd jbe 0x41baf2
  41baae:	adc    al,0xf0
  41bab0:	stc    
  41bab1:	aad    0x5a
  41bab3:	push   0x993c182d
  41bab8:	test   eax,0xf4de3959
  41babd:	push   eax
  41babe:	jg     0x41ba4f
  41bac0:	or     DWORD PTR [edx-0x5d9e0e8c],0x11d090a1
  41baca:	push   0xefbbe19
  41bacf:	aam    0x9e
  41bad1:	xchg   esi,eax
  41bad2:	sub    cl,BYTE PTR [esi]
  41bad4:	(bad)  [esi+edi*1+0x68]
  41bad8:	(bad)  
  41bad9:	sub    esp,DWORD PTR [esi]
  41badb:	mov    al,ds:0x80632ab9
  41bae0:	jno    0x41baa4
  41bae2:	ss stc 
  41bae4:	lods   eax,DWORD PTR ds:[esi]
  41bae5:	xchg   edi,eax
  41bae6:	mov    ebp,DWORD PTR [esi-0x1e120c91]
  41baec:	int3   
  41baed:	loop   0x41bb10
  41baef:	mov    ebp,0x118d3179
  41baf4:	lods   eax,DWORD PTR ds:[esi]
  41baf5:	adc    al,0xfd
  41baf7:	sbb    al,BYTE PTR [eax+eax*8-0x1324e394]
  41bafe:	mov    WORD PTR [ebp+0x6d],gs
  41bb01:	and    BYTE PTR [esi+edx*2-0x2a9c11d4],al
  41bb08:	ja     0x41baa7
  41bb0a:	(bad)  
  41bb0b:	(bad)  
  41bb0c:	mov    ebp,0xe7c0c97e
  41bb11:	not    DWORD PTR [ecx]
  41bb13:	(bad)  
  41bb14:	mov    al,0xbc
  41bb16:	or     eax,0xa4298244
  41bb1b:	xchg   esi,eax
  41bb1c:	outs   dx,DWORD PTR ds:[esi]
  41bb1d:	mov    eax,0x3f5fb52
  41bb22:	pop    edi
  41bb23:	mov    eax,ds:0x18ddc355
  41bb28:	mov    bl,0x5a
  41bb2a:	push   ebx
  41bb2b:	loopne 0x41bba6
  41bb2d:	test   BYTE PTR [ebx-0x671bf70f],dh
  41bb33:	jl     0x41baf2
  41bb35:	lds    ecx,FWORD PTR [ebp-0x3a]
  41bb38:	xchg   edi,eax
  41bb39:	push   es
  41bb3a:	and    dl,dh
  41bb3c:	jge    0x41bb71
  41bb3e:	rol    BYTE PTR [edi-0x56],1
  41bb41:	xchg   ebp,eax
  41bb42:	repz push ebx
  41bb44:	jbe    0x41bb58
  41bb46:	push   es
  41bb47:	popf   
  41bb48:	std    
  41bb49:	pop    edx
  41bb4a:	popf   
  41bb4b:	(bad)  
  41bb4c:	add    al,0x9c
  41bb4e:	cs mov eax,0xd49c4a9b
  41bb54:	(bad)
  41bb58:	jecxz  0x41bbc5
  41bb5a:	dec    eax
  41bb5b:	cwde   
  41bb5c:	imul   ecx,esi,0x661b229a
  41bb62:	lock loopne 0x41bb47
  41bb65:	push   edi
  41bb66:	xlat   BYTE PTR ds:[ebx]
  41bb67:	out    0xed,al
  41bb69:	loop   0x41bbc8
  41bb6b:	pushf  
  41bb6c:	jg     0x41bb88
  41bb6e:	cdq    
  41bb6f:	loope  0x41bbd4
  41bb71:	mov    al,0x5f
  41bb73:	cld    
  41bb74:	fwait
  41bb75:	gs sbb eax,edi
  41bb78:	mov    ds:0xf907a767,eax
  41bb7d:	aaa    
  41bb7e:	adc    BYTE PTR [eax+0x78],0xf9
  41bb82:	popa   
  41bb83:	inc    edi
  41bb84:	inc    ebp
  41bb85:	or     BYTE PTR [ecx+0x11b5d185],ah
  41bb8b:	mov    al,ds:0x5f2334f3
  41bb90:	adc    DWORD PTR [esi],esp
  41bb92:	mov    cs,WORD PTR [esi+0x6bc5eadf]
  41bb98:	push   es
  41bb99:	sub    DWORD PTR [edi+eax*2+0x2a0270f9],0xffffffd0
  41bba1:	jge    0x41bb71
  41bba3:	int3   
  41bba4:	xchg   edi,eax
  41bba5:	and    al,0xb2
  41bba7:	cld    
  41bba8:	mov    dh,0x32
  41bbaa:	inc    ebp
  41bbab:	nop
  41bbac:	sub    BYTE PTR [ecx-0xa53064c],al
  41bbb2:	cmp    eax,0x806f4164
  41bbb7:	outs   dx,DWORD PTR ds:[esi]
  41bbb8:	push   cs
  41bbb9:	sub    ah,cl
  41bbbb:	in     eax,dx
  41bbbc:	test   BYTE PTR [bx],bl
  41bbbf:	push   ds
  41bbc0:	scas   eax,DWORD PTR es:[edi]
  41bbc1:	jle    0x41bb75
  41bbc3:	push   edx
  41bbc4:	ins    DWORD PTR es:[edi],dx
  41bbc5:	mov    esi,0x8de9db23
  41bbca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbcb:	inc    edx
  41bbcc:	outs   dx,BYTE PTR ds:[esi]
  41bbcd:	leave  
  41bbce:	cdq    
  41bbcf:	ret    
  41bbd0:	stos   DWORD PTR es:[edi],eax
  41bbd1:	jno    0x41bb61
  41bbd3:	inc    ebx
  41bbd4:	jmp    0x7ad11faf
  41bbd9:	lock dec edx
  41bbdb:	mov    ah,0x5a
  41bbdd:	jnp    0x41bbbe
  41bbdf:	add    eax,0xf997f503
  41bbe4:	repnz test eax,0x3aa067b2
  41bbea:	push   edi
  41bbeb:	adc    DWORD PTR [edx-0x54],edx
  41bbee:	push   esp
  41bbef:	(bad)
  41bbf4:	mov    ecx,0x4dc3ff66
  41bbf9:	aam    0x5a
  41bbfb:	mov    ds:0x746eec02,eax
  41bc00:	pop    ebx
  41bc01:	out    dx,eax
  41bc02:	scas   al,BYTE PTR es:[edi]
  41bc03:	mov    esp,0x8943623c
  41bc08:	(bad)  
  41bc09:	outs   dx,DWORD PTR ds:[esi]
  41bc0a:	out    dx,eax
  41bc0b:	mov    dh,0xdd
  41bc0d:	jnp    0x41bbfa
  41bc0f:	mov    ebp,0xac95f9ea
  41bc14:	inc    esi
  41bc15:	repz dec edi
  41bc17:	cmp    DWORD PTR [edi+0x1b],ebp
  41bc1a:	addr16 pusha 
  41bc1c:	ficom  DWORD PTR [edi-0x15]
  41bc1f:	iret   
  41bc20:	outs   dx,BYTE PTR ds:[esi]
  41bc21:	iret   
  41bc22:	sub    eax,0xc5dc5ff7
  41bc27:	gs pop ss
  41bc29:	pop    edx
  41bc2a:	leave  
  41bc2b:	jp     0x41bbfb
  41bc2d:	ss (bad) 
  41bc2f:	push   ebx
  41bc30:	scas   eax,DWORD PTR es:[edi]
  41bc31:	cdq    
  41bc32:	inc    eax
  41bc33:	add    eax,0xdf0376a3
  41bc38:	push   cs
  41bc39:	outs   dx,BYTE PTR ds:[esi]
  41bc3a:	xor    al,0x31
  41bc3c:	and    al,0xa4
  41bc3e:	and    dl,BYTE PTR [esi-0x4e]
  41bc41:	aas    
  41bc42:	mov    cl,0x1c
  41bc44:	or     al,0x89
  41bc46:	xchg   ebx,esp
  41bc48:	aas    
  41bc49:	mov    esi,0xfab6cbc8
  41bc4e:	xor    esi,DWORD PTR [edi-0x4a]
  41bc51:	adc    ebx,edi
  41bc53:	out    0x9f,al
  41bc55:	lods   eax,DWORD PTR ds:[esi]
  41bc56:	stos   BYTE PTR es:[edi],al
  41bc57:	scas   al,BYTE PTR es:[edi]
  41bc58:	push   esi
  41bc59:	mov    cl,0x7f
  41bc5b:	shl    ecx,1
  41bc5d:	inc    edi
  41bc5e:	aam    0xa6
  41bc60:	out    0xbf,eax
  41bc62:	(bad)  
  41bc63:	sbb    al,0x3e
  41bc65:	into   
  41bc66:	sbb    al,0x90
  41bc68:	stos   BYTE PTR es:[edi],al
  41bc69:	cmc    
  41bc6a:	cmp    eax,ebx
  41bc6c:	mov    dl,cl
  41bc6e:	stos   BYTE PTR es:[edi],al
  41bc6f:	retf   0x83d3
  41bc72:	sbb    DWORD PTR [edx+0x79bebd5c],esp
  41bc78:	imul   esi,DWORD PTR [ecx-0x3b183f3f],0xc776c17
  41bc82:	lock adc ecx,esi
  41bc85:	lods   eax,DWORD PTR ds:[esi]
  41bc86:	pop    edi
  41bc87:	xchg   edi,eax
  41bc88:	outs   dx,BYTE PTR ds:[esi]
  41bc89:	xchg   esi,eax
  41bc8a:	retf   
  41bc8b:	push   ds
  41bc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc8d:	mov    ebp,ds
  41bc8f:	cmp    BYTE PTR [esp+ebx*1-0x26],cl
  41bc93:	mov    ebx,0xd68016ed
  41bc98:	lahf   
  41bc99:	dec    ebp
  41bc9a:	pop    ecx
  41bc9b:	inc    eax
  41bc9c:	loope  0x41bcd0
  41bc9e:	scas   eax,DWORD PTR es:[edi]
  41bc9f:	mov    eax,ds:0x2fb4cce8
  41bca4:	rcl    DWORD PTR [ecx-0x53],1
  41bca7:	mov    ds:0x6af68abe,eax
  41bcac:	push   ebp
  41bcad:	add    bh,BYTE PTR [edi-0x8]
  41bcb0:	mov    al,ds:0xf264b09d
  41bcb5:	pusha  
  41bcb6:	xor    DWORD PTR [ebp-0x2bd930d7],ebp
  41bcbc:	inc    esi
  41bcbd:	xchg   edx,eax
  41bcbe:	push   ebx
  41bcbf:	lahf   
  41bcc0:	inc    eax
  41bcc1:	sar    DWORD PTR [esi-0x715ff448],1
  41bcc7:	xor    eax,0x7deb6be3
  41bccc:	rcr    BYTE PTR [edi+0x1d183641],0xc7
  41bcd3:	imul   ebp,ecx,0xffffff8a
  41bcd6:	stos   BYTE PTR es:[edi],al
  41bcd7:	jo     0x41bc89
  41bcd9:	adc    al,0xd
  41bcdb:	fwait
  41bcdc:	(bad)  
  41bcdd:	mov    ecx,0x356e9f14
  41bce2:	ss mov dh,0x47
  41bce5:	cld    
  41bce6:	imul   DWORD PTR [esi+0x17]
  41bce9:	sbb    al,0x3b
  41bceb:	mov    eax,ds:0x2607ca8a
  41bcf0:	fist   WORD PTR [edx+0x44aa8b7]
  41bcf6:	mov    al,ds:0xc3206c85
  41bcfb:	imul   ebx,DWORD PTR [ecx+0x4c39e540],0xff432c3d
  41bd05:	mov    esi,0x2424437c
  41bd0a:	stos   DWORD PTR es:[edi],eax
  41bd0b:	xor    DWORD PTR [ecx-0x77],ebx
  41bd0e:	push   edi
  41bd0f:	fisttp WORD PTR [ebp+eiz*4+0x3]
  41bd13:	adc    eax,0x5cd0a7f0
  41bd18:	xor    BYTE PTR [ecx-0x1a],bl
  41bd1b:	into   
  41bd1c:	jns    0x41bcf6
  41bd1e:	repnz aaa 
  41bd20:	push   ss
  41bd21:	popa   
  41bd22:	inc    edi
  41bd23:	repz xlat BYTE PTR ds:[ebx]
  41bd25:	cmp    al,0xc4
  41bd27:	jmp    0x41bd75
  41bd29:	pop    edi
  41bd2a:	sub    al,0xed
  41bd2c:	cli    
  41bd2d:	sbb    dl,BYTE PTR [ecx-0x52]
  41bd30:	aad    0x64
  41bd32:	inc    esi
  41bd33:	(bad)  
  41bd34:	std    
  41bd35:	inc    esp
  41bd36:	lock out dx,al
  41bd38:	lahf   
  41bd39:	and    eax,0xa63c67c4
  41bd3e:	mov    eax,0xf79e4e58
  41bd43:	xchg   esp,eax
  41bd44:	dec    ebx
  41bd45:	jns    0x41bccb
  41bd47:	jne    0x41bd37
  41bd49:	lods   al,BYTE PTR ds:[esi]
  41bd4a:	xchg   esi,eax
  41bd4b:	mov    al,dl
  41bd4d:	jl     0x41bd46
  41bd4f:	data16 sbb al,0x31
  41bd52:	popf   
  41bd53:	aad    0xbc
  41bd55:	sub    al,dh
  41bd57:	stc    
  41bd58:	in     al,dx
  41bd59:	test   BYTE PTR [ecx+0x3fadd308],bh
  41bd5f:	into   
  41bd60:	inc    eax
  41bd61:	jno    0x41bd67
  41bd63:	enter  0xc6c5,0x3f
  41bd67:	dec    ebx
  41bd68:	ret    
  41bd69:	adc    BYTE PTR [ecx-0x2e1c81e9],dl
  41bd6f:	outs   dx,BYTE PTR ds:[esi]
  41bd70:	sbb    BYTE PTR [ebx],bh
  41bd72:	jl     0x41bd9d
  41bd74:	dec    ebx
  41bd75:	fstp   TBYTE PTR [esi]
  41bd77:	outs   dx,BYTE PTR ds:[esi]
  41bd78:	sahf   
  41bd79:	cmp    al,0xb
  41bd7b:	imul   esi,DWORD PTR [esi-0x5b],0x6ab0bebf
  41bd82:	scas   eax,DWORD PTR es:[edi]
  41bd83:	jmp    0xcb494dbd
  41bd88:	out    0xd3,eax
  41bd8a:	mov    eax,0x66d97f8
  41bd8f:	outs   dx,DWORD PTR ds:[esi]
  41bd90:	pop    es
  41bd91:	ret    
  41bd92:	stos   BYTE PTR es:[edi],al
  41bd93:	(bad)  
  41bd94:	leave  
  41bd95:	pop    edx
  41bd96:	fisubr WORD PTR [ebx+0x18]
  41bd99:	test   BYTE PTR [ecx+esi*1],dl
  41bd9c:	inc    edx
  41bd9d:	repz sub DWORD PTR [ecx+0x1e],ebp
  41bda1:	xlat   BYTE PTR ds:[ebx]
  41bda2:	sar    BYTE PTR [edi-0x2ac63840],1
  41bda8:	mov    ebx,0xe1244f87
  41bdad:	inc    esp
  41bdae:	lods   eax,DWORD PTR ds:[esi]
  41bdaf:	aas    
  41bdb0:	cmovne edi,DWORD PTR [ecx]
  41bdb3:	dec    edi
  41bdb4:	ss xchg ebp,eax
  41bdb6:	jb     0x41bd4a
  41bdb8:	pusha  
  41bdb9:	shl    BYTE PTR ds:0x89e517f,cl
  41bdbf:	in     eax,dx
  41bdc0:	adc    BYTE PTR [edi],dl
  41bdc2:	cwde   
  41bdc3:	adc    dl,bh
  41bdc5:	cmp    DWORD PTR [esi-0x658351da],edi
  41bdcb:	sahf   
  41bdcc:	call   0xe1b:0x5b62c407
  41bdd3:	ret    0x4d5
  41bdd6:	or     eax,0x241ac45e
  41bddb:	jmp    0x24497d44
  41bde0:	gs pop edi
  41bde2:	es jae 0x41be30
  41bde5:	fstp   DWORD PTR [ebx-0x3c]
  41bde8:	pushf  
  41bde9:	inc    esp
  41bdea:	fisttp DWORD PTR [eax+0x73]
  41bded:	mov    ds,WORD PTR [eax]
  41bdef:	je     0x41be0a
  41bdf1:	fucom  st(2)
  41bdf3:	ret    
  41bdf4:	and    ch,dh
  41bdf6:	xchg   ebx,eax
  41bdf7:	sbb    DWORD PTR [edx-0x1d404b7e],ebx
  41bdfd:	mov    esi,0xa8b7474c
  41be02:	pxor   mm6,mm4
  41be05:	cs dec esp
  41be07:	xor    esi,0xffffff9e
  41be0a:	sub    eax,DWORD PTR [ebx]
  41be0c:	(bad)  
  41be0d:	imul   edi,DWORD PTR [ebp+0x70],0xffffffc2
  41be11:	jae    0x41be69
  41be13:	jmp    0xc7a96784
  41be18:	out    dx,eax
  41be19:	popf   
  41be1a:	aad    0xa
  41be1c:	fstp   st(7)
  41be1e:	push   edx
  41be1f:	mov    ebx,0xc1278eb9
  41be24:	push   0x3c1d055
  41be29:	pop    ss
  41be2a:	ret    
  41be2b:	outs   dx,BYTE PTR ds:[esi]
  41be2c:	mov    BYTE PTR [ebx-0x33],cl
  41be2f:	mov    ds:0x2fb66e3b,al
  41be34:	xor    edi,DWORD PTR [esi+0x59451255]
  41be3a:	dec    ebp
  41be3b:	(bad)  
  41be3c:	adc    DWORD PTR ss:0xfebf17b3,edi
  41be43:	hlt    
  41be44:	mov    cl,0x84
  41be46:	pusha  
  41be47:	imul   DWORD PTR [ebx-0x7384ed86]
  41be4d:	daa    
  41be4e:	ins    DWORD PTR es:[edi],dx
  41be4f:	sbb    ebx,DWORD PTR [eax-0x2089de8d]
  41be55:	xor    DWORD PTR [ebp-0x34],eax
  41be58:	std    
  41be59:	fisub  WORD PTR [ecx+edi*1+0xd]
  41be5d:	fisubr WORD PTR [esi]
  41be5f:	dec    esp
  41be60:	out    dx,eax
  41be61:	popf   
  41be62:	and    al,0xa1
  41be64:	and    DWORD PTR [esp+eiz*8-0x52],ebx
  41be68:	inc    edi
  41be69:	je     0x41bec9
  41be6b:	shl    DWORD PTR [ecx],cl
  41be6d:	nop
  41be6e:	loopne 0x41bdfb
  41be70:	hlt    
  41be71:	and    al,0x86
  41be73:	stos   DWORD PTR es:[edi],eax
  41be74:	jne    0x41be9e
  41be76:	(bad)  
  41be78:	jp     0x41be0d
  41be7a:	and    al,0x96
  41be7c:	cmp    BYTE PTR [esi-0x1c],dh
  41be7f:	shl    BYTE PTR [edi+0x57117fe7],1
  41be85:	repnz enter 0xe2e9,0xe9
  41be8a:	cld    
  41be8b:	stos   BYTE PTR es:[edi],al
  41be8c:	in     eax,0xac
  41be8e:	add    ch,BYTE PTR [esi]
  41be90:	dec    ebx
  41be91:	mov    gs,WORD PTR [edi+ecx*2+0x2bbcf059]
  41be98:	add    dl,BYTE PTR [edi+0x6434e153]
  41be9e:	cdq    
  41be9f:	aas    
  41bea0:	aaa    
  41bea1:	inc    ebx
  41bea2:	mov    DWORD PTR [edx-0x459df558],0xcad81bf9
  41beac:	cwde   
  41bead:	jl     0x41be6b
  41beaf:	push   0xffffffd3
  41beb1:	mov    dl,0x32
  41beb3:	add    al,0xb4
  41beb5:	cld    
  41beb6:	cmp    BYTE PTR [ebx-0x241858b1],bl
  41bebc:	dec    edi
  41bebd:	mov    al,BYTE PTR [esi+0x1e]
  41bec0:	neg    BYTE PTR [esi+0x70]
  41bec3:	push   dx
  41bec5:	pop    esp
  41bec6:	jbe    0x41bedd
  41bec8:	pusha  
  41bec9:	pushf  
  41beca:	add    al,0xc3
  41becc:	dec    ebx
  41becd:	outs   dx,DWORD PTR ds:[esi]
  41bece:	mov    ah,0xa5
  41bed0:	and    edi,DWORD PTR [edx-0x1afee1c1]
  41bed6:	jne    0x41becc
  41bed8:	retf   
  41bed9:	hlt    
  41beda:	sub    bl,BYTE PTR [esi-0x62]
  41bedd:	in     eax,dx
  41bede:	in     al,dx
  41bedf:	xor    al,0x5d
  41bee1:	(bad)  
  41bee2:	mov    al,ds:0x8412a819
  41bee7:	pop    edi
  41bee8:	or     ch,BYTE PTR [ecx+edi*1]
  41beeb:	repnz and al,0xee
  41beee:	mov    al,0x71
  41bef0:	cmp    cl,BYTE PTR [ebx+0x78]
  41bef3:	add    dh,BYTE PTR [eax+0x2f]
  41bef6:	cmc    
  41bef7:	xor    eax,0xb790de69
  41befc:	push   esp
  41befd:	cmp    eax,0xf29585cb
  41bf02:	in     eax,0x66
  41bf04:	mov    bl,0x52
  41bf06:	adc    ebx,esp
  41bf08:	push   edx
  41bf09:	cdq    
  41bf0a:	lods   eax,DWORD PTR ds:[esi]
  41bf0b:	leave  
  41bf0c:	test   al,0x49
  41bf0e:	lods   eax,DWORD PTR ds:[esi]
  41bf0f:	xchg   ebp,eax
  41bf10:	loopne 0x41bed8
  41bf12:	push   cs
  41bf13:	stc    
  41bf14:	adc    bl,BYTE PTR [ecx-0x3f]
  41bf17:	push   0xffffffc7
  41bf19:	jmp    0xb4c7:0x63be9eaf
  41bf20:	or     eax,0x9e3da903
  41bf25:	pop    ebp
  41bf26:	fild   WORD PTR fs:[ecx+0x7d]
  41bf2a:	push   ebp
  41bf2b:	ficomp WORD PTR [esi]
  41bf2d:	mov    dl,0x2f
  41bf2f:	in     al,0x9b
  41bf31:	cli    
  41bf32:	(bad)
  41bf35:	lahf   
  41bf36:	pusha  
  41bf37:	xchg   ebx,eax
  41bf38:	rol    esi,0x1c
  41bf3b:	popa   
  41bf3c:	ret    
  41bf3d:	dec    edi
  41bf3e:	das    
  41bf3f:	das    
  41bf40:	cmp    dh,BYTE PTR [ecx-0x5c3a68df]
  41bf46:	mov    ecx,0x1c8a7856
  41bf4b:	xor    esp,edx
  41bf4d:	mov    ah,0x41
  41bf4f:	aad    0x5
  41bf51:	push   eax
  41bf52:	sub    al,0x17
  41bf54:	or     BYTE PTR [edi],dh
  41bf56:	pop    ebp
  41bf57:	mul    bx
  41bf5a:	sbb    ebx,DWORD PTR [eax-0x64a69b68]
  41bf60:	shl    BYTE PTR [esi+0x5317a20d],1
  41bf66:	add    DWORD PTR [eax+ecx*4+0x54],ebx
  41bf6a:	mov    DWORD PTR [edx+esi*8-0x17],esp
  41bf6e:	shl    DWORD PTR [ecx],cl
  41bf70:	xchg   ebx,eax
  41bf71:	test   al,0x60
  41bf73:	xor    ecx,DWORD PTR [ebp+0x5c]
  41bf76:	(bad)  
  41bf77:	in     al,0x46
  41bf79:	xor    DWORD PTR [ebx+0x94eb4c2],esi
  41bf7f:	sahf   
  41bf80:	inc    eax
  41bf81:	iret   
  41bf82:	or     ecx,DWORD PTR [edi+0x3b]
  41bf85:	shr    BYTE PTR [ecx-0x59de5af5],0xfc
  41bf8c:	mov    dl,0x0
  41bf8e:	xor    al,0x63
  41bf90:	and    BYTE PTR [edx],dh
  41bf92:	and    DWORD PTR [edi+0x82114d5],esp
  41bf98:	cmp    ah,cl
  41bf9a:	jo     0x41bfdf
  41bf9c:	push   ebx
  41bf9d:	out    dx,eax
  41bf9e:	push   ebx
  41bf9f:	adc    bl,BYTE PTR [ecx+ecx*4-0x596ebc2]
  41bfa6:	aaa    
  41bfa7:	adc    eax,0x7ac643a8
  41bfac:	sbb    ecx,DWORD PTR [edx+0x7e]
  41bfaf:	outs   dx,BYTE PTR ds:[esi]
  41bfb0:	sbb    al,0x85
  41bfb2:	sub    eax,0x36b493cf
  41bfb7:	mov    eax,0x785572e7
  41bfbc:	jbe    0x41c035
  41bfbe:	ror    DWORD PTR [esi-0x387d2779],0x6f
  41bfc5:	push   ebx
  41bfc6:	xchg   edx,eax
  41bfc7:	lea    edx,[edx]
  41bfc9:	jo     0x41c01c
  41bfcb:	mov    dl,0x35
  41bfcd:	xchg   esi,eax
  41bfce:	ret    
  41bfcf:	sub    ah,BYTE PTR [eax]
  41bfd1:	pop    eax
  41bfd2:	fadd   st,st(7)
  41bfd4:	lock and BYTE PTR [ebx],al
  41bfd7:	enter  0x6236,0xd6
  41bfdb:	push   ebp
  41bfdc:	ins    BYTE PTR es:[edi],dx
  41bfdd:	adc    al,0xbf
  41bfdf:	or     esp,DWORD PTR [esi]
  41bfe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfe2:	xchg   DWORD PTR [edi],eax
  41bfe4:	cmp    eax,0x97b633c2
  41bfe9:	push   ecx
  41bfea:	sub    BYTE PTR [eax],0x2a
  41bfed:	in     al,0x7e
  41bfef:	imul   BYTE PTR [esp+edx*8-0x37]
  41bff3:	fcom   QWORD PTR [ebp+0xe842005]
  41bff9:	mov    ds:0x2fcbef49,al
  41bffe:	test   al,0xcd
  41c000:	stos   BYTE PTR es:[edi],al
  41c001:	dec    eax
  41c002:	cmp    al,0xaf
  41c004:	fdivr  st(2),st
  41c006:	test   eax,0x4856e452
  41c00b:	ss jne 0x41bfda
  41c00e:	lods   eax,DWORD PTR ds:[esi]
  41c00f:	jg     0x41c03a
  41c011:	xor    ebx,0x6c771c
  41c017:	xlat   BYTE PTR ds:[ebx]
  41c018:	inc    edi
  41c019:	mov    dl,0xe1
  41c01b:	mov    eax,0x88555b35
  41c020:	cli    
  41c021:	jmp    0x41c085
  41c023:	test   BYTE PTR [edx+0x2c],dh
  41c026:	in     eax,0xc
  41c028:	je     0x41bffb
  41c02a:	aam    0x40
  41c02c:	popf   
  41c02d:	retf   
  41c02e:	add    eax,0x82fe56b
  41c033:	int3   
  41c034:	lods   al,BYTE PTR ds:[esi]
  41c035:	and    BYTE PTR [edi],cl
  41c037:	dec    edx
  41c038:	cmp    cl,BYTE PTR [esi-0x2d0fdbf1]
  41c03e:	sub    edi,DWORD PTR [edi-0x65bc9b84]
  41c044:	jmp    0x304a00c
  41c049:	xor    eax,0x83945279
  41c04e:	push   0xfffffff7
  41c050:	jmp    0x4e80:0x617eadb8
  41c057:	xor    al,0x94
  41c059:	icebp  
  41c05a:	stos   DWORD PTR es:[edi],eax
  41c05b:	dec    ecx
  41c05c:	mov    esp,0x55ffffef
  41c061:	loop   0x41c02d
  41c063:	dec    ebx
  41c064:	or     dl,BYTE PTR [esi]
  41c066:	mov    ebx,0xd8c21522
  41c06b:	push   edi
  41c06c:	push   eax
  41c06d:	(bad)  
  41c06e:	dec    esp
  41c06f:	jo     0x41c04a
  41c071:	mov    eax,DWORD PTR [esi]
  41c073:	add    DWORD PTR [esi],esi
  41c075:	add    eax,0x24aa0189
  41c07a:	xchg   ebx,eax
  41c07b:	lahf   
  41c07c:	cmp    BYTE PTR ds:0xa035782a,ch
  41c082:	leave  
  41c083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c084:	into   
  41c085:	loopne 0x41c0b5
  41c087:	cdq    
  41c088:	outs   dx,DWORD PTR ds:[esi]
  41c089:	mov    WORD PTR [eax+ecx*1+0x3d],es
  41c08d:	dec    edx
  41c08e:	add    cl,BYTE PTR [ebp-0x69]
  41c091:	call   0xbf25f581
  41c096:	dec    esi
  41c097:	jle    0x41c0a2
  41c099:	(bad)  
  41c09a:	lock shl BYTE PTR es:[edx],cl
  41c09e:	shl    BYTE PTR [esi],0xa8
  41c0a1:	push   ds
  41c0a2:	or     al,0xdd
  41c0a4:	adc    dl,BYTE PTR [ebx+0x400d22ce]
  41c0aa:	test   DWORD PTR [edi+eiz*4],esi
  41c0ad:	call   0x7a90:0x1a60d630
  41c0b4:	cmc    
  41c0b5:	lods   eax,DWORD PTR ds:[esi]
  41c0b6:	and    BYTE PTR [ebx],cl
  41c0b8:	pop    ecx
  41c0b9:	jg     0x41c05f
  41c0bb:	pop    es
  41c0bc:	inc    eax
  41c0bd:	ret    
  41c0be:	imul   edx,edi,0x3c
  41c0c1:	sbb    DWORD PTR [esi+0x61bb16bb],esi
  41c0c7:	mov    ebp,0x5ee38de9
  41c0cc:	and    ah,bl
  41c0ce:	sti    
  41c0cf:	int    0x62
  41c0d1:	sbb    al,0xf1
  41c0d3:	sub    edx,eax
  41c0d5:	mov    cl,0xf7
  41c0d7:	ss call 0xe8bfee1
  41c0dd:	aad    0xdd
  41c0df:	xchg   esi,eax
  41c0e0:	lahf   
  41c0e1:	xor    ecx,DWORD PTR [eax+0x652de04b]
  41c0e7:	iret   
  41c0e8:	repz gs jg 0x41c128
  41c0ec:	fld    TBYTE PTR [ebp+0x1ef046e1]
  41c0f2:	addr16 ret 0xd547
  41c0f6:	sub    DWORD PTR [edx+0x28],ecx
  41c0f9:	lods   al,BYTE PTR ds:[esi]
  41c0fa:	ret    
  41c0fb:	div    DWORD PTR [esi-0x3b]
  41c0fe:	inc    esi
  41c0ff:	dec    ecx
  41c100:	pop    edi
  41c101:	iret   
  41c102:	jmp    0x58a1e05a
  41c107:	fild   QWORD PTR [esi]
  41c109:	dec    ecx
  41c10a:	(bad)  
  41c10b:	mov    bh,BYTE PTR [ebx]
  41c10d:	jnp    0x41c12b
  41c10f:	data16 cmp al,0xdd
  41c112:	out    dx,al
  41c113:	cli    
  41c114:	in     eax,dx
  41c115:	sub    ebp,DWORD PTR [ebx+eax*4+0x24e7a625]
  41c11c:	xchg   ebp,eax
  41c11d:	nop
  41c11e:	and    BYTE PTR [esi+0x3c],cl
  41c121:	and    ecx,DWORD PTR [ebx+0x5e]
  41c124:	sti    
  41c125:	mov    DWORD PTR [edx-0x32],ecx
  41c128:	pusha  
  41c129:	daa    
  41c12a:	xchg   ecx,eax
  41c12b:	mov    ecx,0xa7db1489
  41c130:	(bad)
  41c133:	lahf   
  41c134:	imul   esp,ecx,0xf5354a84
  41c13a:	xchg   ebx,eax
  41c13b:	imul   eax,DWORD PTR ds:0xeea5992a,0x3403025f
  41c145:	pop    es
  41c146:	pusha  
  41c147:	mov    ch,0x3c
  41c149:	dec    edx
  41c14a:	jecxz  0x41c105
  41c14c:	in     eax,0x2a
  41c14e:	hlt    
  41c14f:	dec    eax
  41c150:	pop    ebp
  41c151:	js     0x41c19b
  41c153:	out    dx,eax
  41c154:	leave  
  41c155:	mov    ds:0xcf302ff5,eax
  41c15a:	mov    BYTE PTR [edx],dl
  41c15c:	cdq    
  41c15d:	inc    edx
  41c15e:	xchg   esi,eax
  41c15f:	adc    dh,BYTE PTR [edi]
  41c161:	add    dh,BYTE PTR [edi-0x51a10497]
  41c167:	aad    0x8b
  41c169:	in     eax,0x16
  41c16b:	test   eax,0x95ebd28c
  41c170:	inc    ecx
  41c171:	rcr    esi,0x61
  41c174:	push   0x717b82d5
  41c179:	jae    0x41c115
  41c17b:	call   0x16d4c8c5
  41c180:	pop    ecx
  41c181:	lods   eax,DWORD PTR ds:[esi]
  41c182:	push   esi
  41c183:	scas   eax,DWORD PTR es:[edi]
  41c184:	xchg   edx,eax
  41c185:	dec    esp
  41c186:	outs   dx,BYTE PTR ds:[esi]
  41c187:	(bad)  
  41c188:	and    eax,0xf4b235dc
  41c18d:	xor    al,0xca
  41c18f:	shl    BYTE PTR [ebx+0xff9c153],cl
  41c195:	loope  0x41c124
  41c197:	xchg   ebp,eax
  41c198:	mov    edx,0x384e45ec
  41c19d:	push   ebp
  41c19e:	jle    0x41c1a3
  41c1a0:	jo     0x41c1a9
  41c1a2:	pop    eax
  41c1a3:	mov    esp,0x97f15645
  41c1a8:	sbb    ch,bh
  41c1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ab:	out    0x8e,al
  41c1ad:	arpl   WORD PTR [edi+0x5b781ee5],dx
  41c1b3:	jle    0x41c159
  41c1b5:	xchg   esi,eax
  41c1b6:	or     ah,BYTE PTR [ebp+0x7c06f438]
  41c1bc:	push   cs
  41c1bd:	es call 0xe8fb5019
  41c1c3:	inc    ebx
  41c1c4:	xor    esp,esp
  41c1c6:	xchg   edx,eax
  41c1c7:	daa    
  41c1c8:	and    ebx,DWORD PTR [ebx-0x6ac59ff3]
  41c1ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1cf:	xchg   edx,eax
  41c1d0:	and    BYTE PTR [esi-0x1479998c],0xb4
  41c1d7:	pop    edi
  41c1d8:	mov    ds:0xd8a1f436,al
  41c1dd:	pop    edx
  41c1de:	jns    0x41c1b7
  41c1e0:	mov    ebx,0xda329c1e
  41c1e5:	(bad)  
  41c1e7:	inc    ebp
  41c1e8:	int3   
  41c1e9:	cdq    
  41c1ea:	out    dx,al
  41c1eb:	or     eax,0x2fe215da
  41c1f0:	test   al,0x45
  41c1f2:	sbb    BYTE PTR [eax-0xf9962a4],cl
  41c1f8:	in     eax,dx
  41c1f9:	bswap  eax
  41c1fb:	jle    0x41c1cf
  41c1fd:	nop
  41c1fe:	nop
  41c1ff:	xchg   DWORD PTR [ebx+0x2b],edx
  41c202:	add    DWORD PTR [eax+esi*2],edx
  41c205:	repz ret 0x830b
  41c209:	push   ss
  41c20a:	es pop eax
  41c20c:	dec    edi
  41c20d:	adc    DWORD PTR [ebx+0x72],ebp
  41c210:	pop    ds
  41c211:	sbb    esi,DWORD PTR [ecx-0x31789d67]
  41c217:	aaa    
  41c218:	push   eax
  41c219:	rcr    DWORD PTR [edi+0x7d8a24e8],cl
  41c21f:	inc    edi
  41c220:	lock dec esi
  41c222:	xchg   BYTE PTR [ecx+0x7cf2c9b6],bl
  41c228:	fimul  DWORD PTR [edi]
  41c22a:	jmp    0x7ac8:0xc5660112
  41c231:	xchg   esi,eax
  41c232:	pop    edx
  41c233:	inc    esi
  41c234:	push   edi
  41c235:	out    0x9e,eax
  41c237:	into   
  41c238:	ins    DWORD PTR es:[edi],dx
  41c239:	iret   
  41c23a:	ret    
  41c23b:	cwde   
  41c23c:	mov    bl,0x51
  41c23e:	add    DWORD PTR [ebx+0x38],0xffffffc0
  41c242:	fdiv   st,st(3)
  41c244:	sbb    BYTE PTR [esi+0x3e09ad0f],0x53
  41c24b:	test   BYTE PTR [ebx-0x34],cl
  41c24e:	jge    0x41c1df
  41c250:	retf   
  41c251:	inc    eax
  41c252:	std    
  41c253:	jb     0x41c1fb
  41c255:	sahf   
  41c256:	ror    dl,1
  41c258:	xor    bh,BYTE PTR [ecx]
  41c25a:	xchg   edi,eax
  41c25b:	sar    esp,0x4
  41c25e:	add    esi,DWORD PTR [ebp+0x61]
  41c261:	push   es
  41c262:	int3   
  41c263:	sar    BYTE PTR [ebp-0x27],cl
  41c266:	iret   
  41c267:	cmp    BYTE PTR [ebx-0x7f],cl
  41c26a:	es js  0x41c1f8
  41c26d:	ficom  DWORD PTR [esi]
  41c26f:	jmp    0x9e56:0x30082804
  41c276:	ficomp WORD PTR [edi-0x56e7127b]
  41c27c:	ins    BYTE PTR es:[edi],dx
  41c27d:	call   0x1ec47813
  41c282:	iret   
  41c283:	imul   eax,ebp,0x48409a97
  41c289:	and    esp,DWORD PTR [eax-0x370438fa]
  41c28f:	imul   esp,esp,0x50
  41c292:	jne    0x41c2f0
  41c294:	cmp    bl,ch
  41c296:	jl     0x41c2c9
  41c298:	dec    edi
  41c299:	mov    edi,0xe03390bc
  41c29e:	fdivrp st(7),st
  41c2a0:	cmp    al,0x6a
  41c2a2:	popa   
  41c2a3:	cmp    bh,ah
  41c2a5:	jnp    0x41c283
  41c2a7:	cwde   
  41c2a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a9:	xacquire xchg DWORD PTR [eax+0x5e],eax
  41c2ad:	loopne 0x41c262
  41c2af:	shl    BYTE PTR [edx+0x1b8b8fb4],0xf3
  41c2b6:	jbe    0x41c273
  41c2b8:	fsub   st(5),st
  41c2ba:	mov    WORD PTR [ecx+eax*8+0x76],ds
  41c2be:	push   DWORD PTR [ebx-0x68]
  41c2c1:	call   0x7f09:0xe882b55c
  41c2c8:	push   ds
  41c2c9:	call   0x35bc:0xd632aef6
  41c2d0:	mov    al,0x41
  41c2d2:	rcr    ebp,0xfd
  41c2d5:	pop    ebx
  41c2d6:	sar    DWORD PTR [esi+0x74],1
  41c2d9:	cmp    al,0x18
  41c2db:	jb     0x41c2d7
  41c2dd:	pop    ds
  41c2de:	lds    edx,FWORD PTR [ecx*4+0x3a701e3]
  41c2e5:	push   ecx
  41c2e6:	(bad)  
  41c2e7:	sub    eax,0x30329250
  41c2ec:	int    0xc5
  41c2ee:	es into 
  41c2f0:	iret   
  41c2f1:	in     eax,dx
  41c2f2:	in     eax,0xd3
  41c2f4:	xor    al,0x9a
  41c2f6:	adc    eax,0x6618027c
  41c2fb:	stc    
  41c2fc:	jno    0x41c313
  41c2fe:	lods   eax,DWORD PTR ds:[esi]
  41c2ff:	xchg   edi,eax
  41c300:	int3   
  41c301:	pushf  
  41c302:	lock out dx,al
  41c304:	mov    al,0x65
  41c306:	aam    0x1d
  41c308:	ret    0x20f
  41c30b:	pop    ss
  41c30c:	mov    ecx,0x77a8e41f
  41c311:	mov    ch,ch
  41c313:	out    dx,al
  41c314:	sbb    al,bh
  41c316:	jne    0x41c385
  41c318:	or     esi,DWORD PTR [ecx-0x6b]
  41c31b:	(bad)  
  41c31c:	aas    
  41c31d:	loope  0x41c2a5
  41c31f:	sub    eax,DWORD PTR [edx]
  41c321:	mov    BYTE PTR [ebx+esi*2+0x775a9ca9],0x61
  41c329:	push   esp
  41c32a:	jns    0x41c2db
  41c32c:	and    esi,DWORD PTR [eax-0x79]
  41c32f:	lea    esp,[edi-0x3973aaf]
  41c335:	mov    esp,0xc6136ad4
  41c33a:	mov    WORD PTR [edi+eiz*2+0x56],cs
  41c33e:	jnp    0x41c2ca
  41c340:	jl     0x41c396
  41c342:	xchg   esp,eax
  41c343:	inc    esi
  41c344:	mov    ah,0xa8
  41c346:	ret    
  41c347:	mov    ebx,0xc682b06e
  41c34c:	lock add BYTE PTR cs:[ebx],bh
  41c350:	fst    DWORD PTR [ebp+0x7a]
  41c353:	mov    ch,0xca
  41c355:	mov    edi,0x2e333bf4
  41c35a:	adc    eax,edi
  41c35c:	cld    
  41c35d:	out    0x51,al
  41c35f:	xchg   edi,eax
  41c360:	loopne 0x41c36e
  41c362:	mov    ebp,0x4f155d73
  41c367:	mov    DWORD PTR [esi+ebp*1],0x2a54a401
  41c36e:	(bad)  
  41c36f:	in     al,0x87
  41c371:	dec    ecx
  41c372:	cmc    
  41c373:	into   
  41c374:	mov    esp,0x7f500d73
  41c379:	inc    esp
  41c37a:	shl    BYTE PTR [esi-0x13f53d1d],cl
  41c380:	clc    
  41c381:	pop    ss
  41c382:	cmp    DWORD PTR [esp-0x405ab957],eax
  41c389:	or     ebx,esp
  41c38b:	inc    ebx
  41c38c:	(bad)  [edx+0x34b86482]
  41c392:	lea    edi,[edi+0x44a130e4]
  41c398:	sbb    dh,BYTE PTR [ebx+0x42dade92]
  41c39e:	scas   al,BYTE PTR es:[edi]
  41c39f:	fcmovnbe st,st(4)
  41c3a1:	out    dx,al
  41c3a2:	sbb    BYTE PTR [ebp-0x651dee20],0x8d
  41c3a9:	pop    eax
  41c3aa:	out    dx,eax
  41c3ab:	lea    eax,[edx]
  41c3ad:	mov    ds:0x91a209f3,eax
  41c3b2:	mov    esi,0x9e29e08
  41c3b7:	xor    eax,0x7544c05b
  41c3bc:	mov    ebx,0xa4b0a587
  41c3c1:	dec    ecx
  41c3c2:	pop    ds
  41c3c3:	mov    bh,BYTE PTR [ebp+0x361f2578]
  41c3c9:	adc    ah,BYTE PTR [esp+esi*2+0x6]
  41c3cd:	sbb    eax,DWORD PTR [edx-0x4e7df8da]
  41c3d3:	xor    DWORD PTR [ebp-0x2fbd1ebb],ebp
  41c3d9:	jne    0x41c3cb
  41c3db:	or     dl,BYTE PTR [edx]
  41c3dd:	pop    ds
  41c3de:	mov    esp,0x2e6c35a
  41c3e3:	rol    DWORD PTR [ebp-0x49],1
  41c3e6:	stos   DWORD PTR es:[edi],eax
  41c3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e8:	inc    edi
  41c3e9:	je     0x41c3e5
  41c3eb:	xchg   esp,eax
  41c3ec:	push   ecx
  41c3ed:	xchg   esi,eax
  41c3ee:	ins    BYTE PTR es:[edi],dx
  41c3ef:	inc    ebx
  41c3f0:	cmc    
  41c3f1:	fwait
  41c3f2:	mov    bh,0x6d
  41c3f4:	pushf  
  41c3f5:	in     eax,0x17
  41c3f7:	ror    DWORD PTR [edi-0x1d7d2e18],0x5e
  41c3fe:	ins    DWORD PTR es:[edi],dx
  41c3ff:	dec    edi
  41c400:	leave  
  41c401:	xchg   ebx,eax
  41c402:	aaa    
  41c403:	in     eax,dx
  41c404:	test   DWORD PTR cs:[ebp+0x5f],ebx
  41c408:	add    ah,BYTE PTR [ebp+0x67]
  41c40b:	add    al,0x67
  41c40d:	push   ds
  41c40e:	stos   BYTE PTR es:[edi],al
  41c40f:	fcomp  QWORD PTR [edi+0x35]
  41c412:	daa    
  41c413:	jecxz  0x41c3b8
  41c415:	add    eax,DWORD PTR [edi-0x29]
  41c418:	mov    ebp,fs
  41c41a:	lock add BYTE PTR [esi+edi*4],ah
  41c41e:	add    edi,DWORD PTR [edx+0x41e0a1f8]
  41c424:	retf   
  41c425:	cld    
  41c426:	or     eax,0x58a17d66
  41c42b:	das    
  41c42c:	mov    ebp,0x48bcbf05
  41c431:	outs   dx,BYTE PTR ds:[esi]
  41c432:	cmp    al,0x7c
  41c434:	dec    eax
  41c435:	pushf  
  41c436:	daa    
  41c437:	out    0xaa,al
  41c439:	or     esi,eax
  41c43b:	pop    ss
  41c43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c43d:	shl    BYTE PTR [eax+0x50],1
  41c440:	or     eax,0x7cf5ea95
  41c445:	stc    
  41c446:	add    eax,edx
  41c448:	xchg   ecx,eax
  41c449:	stos   DWORD PTR es:[edi],eax
  41c44a:	in     eax,dx
  41c44b:	mov    ebp,0xb7f865b5
  41c450:	adc    eax,0xf6928f78
  41c455:	jb     0x41c483
  41c457:	and    eax,0x9ef26d03
  41c45c:	les    ecx,FWORD PTR [edi+0xca5de9b]
  41c462:	or     edx,ebp
  41c464:	lds    esi,FWORD PTR [edx]
  41c466:	test   BYTE PTR [esi+ebx*4+0x69],ch
  41c46a:	or     eax,0xdd9341f3
  41c46f:	inc    ebp
  41c470:	and    ecx,esp
  41c472:	push   eax
  41c473:	push   0xe6f5d05f
  41c478:	aad    0xc1
  41c47a:	inc    ebp
  41c47b:	into   
  41c47c:	xor    eax,0x90d2e6d8
  41c481:	mov    al,0x68
  41c483:	cmc    
  41c484:	cmp    al,ah
  41c486:	mov    edi,0xfcb7cefe
  41c48b:	sub    ah,BYTE PTR [eax]
  41c48d:	sbb    eax,0xdf7787cd
  41c492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c493:	cli    
  41c494:	arpl   ax,di
  41c496:	loopne 0x41c430
  41c498:	xchg   ebp,eax
  41c499:	int3   
  41c49a:	hlt    
  41c49b:	xor    ebx,DWORD PTR [edi+0x6bcd74b1]
  41c4a1:	or     al,0x39
  41c4a3:	xchg   ecx,eax
  41c4a4:	sub    BYTE PTR [eax],dl
  41c4a6:	mov    edx,0x5946c7b1
  41c4ab:	xchg   al,bh
  41c4ad:	lds    esi,FWORD PTR [edi+0x14e523c5]
  41c4b3:	xchg   edx,eax
  41c4b4:	mul    BYTE PTR [ebx]
  41c4b6:	test   BYTE PTR [eax],0xa2
  41c4b9:	cs (bad) 
  41c4bc:	add    DWORD PTR [esi+0x552e567b],eax
  41c4c2:	cmp    eax,0x7a88abf3
  41c4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4c8:	ror    BYTE PTR [esi-0x32b3229c],cl
  41c4ce:	rcr    BYTE PTR [eax+0x34],0xce
  41c4d2:	and    al,BYTE PTR [ebp-0x117ad601]
  41c4d8:	cmp    eax,0x5cbeddb5
  41c4dd:	sar    DWORD PTR [ecx+0x783e8f4],1
  41c4e3:	inc    esp
  41c4e4:	mov    dh,0xd7
  41c4e6:	repnz xor ebp,DWORD PTR [edi]
  41c4e9:	pop    esp
  41c4ea:	dec    esi
  41c4eb:	jo     0x41c46f
  41c4ed:	jp     0x41c4bc
  41c4ef:	jle    0x41c4b9
  41c4f1:	cmp    BYTE PTR [ebp-0x524d3872],cl
  41c4f7:	lods   eax,DWORD PTR ds:[esi]
  41c4f8:	es pop esi
  41c4fa:	(bad)
  41c4fd:	xor    al,0x6b
  41c4ff:	outs   dx,BYTE PTR ds:[esi]
  41c500:	sub    DWORD PTR [esi-0x6f],esi
  41c503:	push   ds
  41c504:	push   cs
  41c505:	jo     0x41c531
  41c507:	rol    esp,0xf0
  41c50a:	in     al,dx
  41c50b:	cmp    bh,bh
  41c50d:	cld    
  41c50e:	xor    edi,DWORD PTR [edi+0x44]
  41c511:	fsub   st(0),st
  41c513:	jbe    0x41c4db
  41c515:	xchg   DWORD PTR [edi],edi
  41c517:	sub    al,BYTE PTR [edi]
  41c519:	xor    eax,0xfe903ddb
  41c51e:	outs   dx,BYTE PTR ds:[esi]
  41c51f:	or     ah,bl
  41c521:	or     esp,0xfffffff7
  41c524:	add    al,0xb
  41c526:	jae    0x41c517
  41c528:	not    DWORD PTR [ecx+0x38627fdb]
  41c52e:	mov    al,0x7
  41c530:	inc    ecx
  41c531:	mov    fs,WORD PTR ds:0xc7afb875
  41c537:	xchg   ecx,eax
  41c538:	(bad)  
  41c539:	dec    esi
  41c53a:	stos   DWORD PTR es:[edi],eax
  41c53b:	add    eax,0x3a0b4227
  41c540:	jmp    0x722c:0xf1f634d2
  41c547:	mov    ds:0xe904df4c,eax
  41c54c:	call   0xedf7:0x7ca758a5
  41c553:	pushf  
  41c554:	sub    eax,0x8bba926d
  41c559:	mov    WORD PTR es:[eax-0x40],?
  41c55d:	arpl   WORD PTR [ebx+0x454adc6c],bx
  41c563:	inc    edx
  41c564:	in     al,dx
  41c565:	xor    ebx,DWORD PTR [esi+0x39]
  41c568:	and    eax,esp
  41c56a:	ficom  WORD PTR [edx-0x80]
  41c56d:	jbe    0x41c573
  41c56f:	jns    0x41c5ef
  41c571:	fsub   st(1),st
  41c573:	push   ecx
  41c574:	shr    dl,1
  41c576:	and    bh,BYTE PTR [ecx+0x2c12ad9d]
  41c57c:	test   ch,al
  41c57e:	mov    cl,0x8c
  41c580:	iret   
  41c581:	scas   al,BYTE PTR es:[edi]
  41c582:	ja     0x41c510
  41c584:	jp     0x41c524
  41c586:	sub    eax,0x56269f5b
  41c58b:	(bad)  
  41c58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58e:	aam    0xdc
  41c590:	jmp    0x3795:0x6c85f926
  41c597:	push   0xffffff89
  41c599:	imul   esp,DWORD PTR [ebp-0x65c7f2],0x775d758a
  41c5a3:	mov    fs,WORD PTR [edi]
  41c5a5:	adc    edx,DWORD PTR [esi+0x33]
  41c5a8:	in     eax,dx
  41c5a9:	gs push esi
  41c5ab:	mov    bl,0xf6
  41c5ad:	cs mov bh,0xa4
  41c5b0:	data16 bnd jno 0x41c54e
  41c5b4:	mov    ebx,0xc21510e1
  41c5b9:	xor    DWORD PTR [edi+0x6cf0d3f4],0xffffffe6
  41c5c0:	mov    esp,0x623a7958
  41c5c5:	inc    ebx
  41c5c6:	ins    DWORD PTR es:[edi],dx
  41c5c7:	jmp    0x6054:0x69ac5119
  41c5ce:	xlat   BYTE PTR ds:[ebx]
  41c5cf:	sub    dh,0x65
  41c5d2:	push   edi
  41c5d3:	jo     0x41c5b1
  41c5d5:	xchg   esp,eax
  41c5d6:	icebp  
  41c5d7:	(bad)  
  41c5d8:	repz adc esp,DWORD PTR [ebx-0x80]
  41c5dc:	int3   
  41c5dd:	pop    ebp
  41c5de:	sbb    ebp,edi
  41c5e0:	xor    dh,BYTE PTR [edx]
  41c5e2:	sub    al,0x60
  41c5e4:	ds addr16 out 0x8,eax
  41c5e8:	inc    edi
  41c5e9:	push   ds
  41c5ea:	das    
  41c5eb:	daa    
  41c5ec:	xor    DWORD PTR [eax-0x60fba255],esp
  41c5f2:	inc    edi
  41c5f3:	scas   eax,DWORD PTR es:[edi]
  41c5f4:	hlt    
  41c5f5:	test   al,0xc0
  41c5f7:	adc    esi,eax
  41c5f9:	mov    ch,0x3
  41c5fb:	mov    esi,0xe3e38bb8
  41c600:	xchg   esi,eax
  41c601:	or     al,0x3e
  41c603:	mov    ds:0xa69794fe,eax
  41c608:	into   
  41c609:	dec    esi
  41c60a:	test   DWORD PTR [esi+ebx*8-0x3429232d],esp
  41c611:	(bad)  
  41c612:	clc    
  41c613:	sbb    dl,ah
  41c615:	sub    ch,dl
  41c617:	mov    dl,0x28
  41c619:	and    DWORD PTR [edi+0x1e],0x575513ea
  41c620:	das    
  41c621:	mov    esp,0x3282face
  41c626:	xor    dl,BYTE PTR [ebx-0x7eb308a]
  41c62c:	sbb    edx,DWORD PTR [edx+0x4d]
  41c62f:	ret    
  41c630:	repz neg DWORD PTR [esi+0x0]
  41c634:	fisttp WORD PTR [edi-0x17]
  41c637:	pop    ss
  41c638:	cmp    DWORD PTR [bp+di],eax
  41c63b:	adc    DWORD PTR [edi+0x7aea4a20],edx
  41c641:	cmp    BYTE PTR [edi-0x57],ch
  41c644:	pop    edx
  41c645:	push   esi
  41c646:	mov    eax,ds:0x819074c7
  41c64b:	mov    al,ds:0x1c169518
  41c650:	push   esp
  41c651:	push   ds
  41c652:	mov    ah,0xd1
  41c654:	in     eax,0x76
  41c656:	adc    edi,eax
  41c658:	add    BYTE PTR [ecx-0x64],dh
  41c65b:	out    0x6c,al
  41c65d:	arpl   WORD PTR [ecx+eax*2+0x52],di
  41c661:	jae    0x41c6a2
  41c663:	aas    
  41c664:	stc    
  41c665:	ret    
  41c666:	out    dx,eax
  41c667:	xor    al,0xee
  41c669:	in     al,0xe0
  41c66b:	loopne 0x41c6eb
  41c66d:	or     al,0xa7
  41c66f:	inc    edi
  41c670:	and    bh,BYTE PTR [ebx]
  41c672:	xor    edi,DWORD PTR [edi+edi*8+0x14335dd]
  41c679:	out    0xaa,eax
  41c67b:	data16 neg BYTE PTR [ecx-0x6a1f0ea4]
  41c682:	mov    ebx,?
  41c684:	jp     0x41c6c8
  41c686:	xor    DWORD PTR [ebp-0x6638f037],ebp
  41c68c:	mov    ebp,0x9664003
  41c691:	adc    DWORD PTR [esi],eax
  41c693:	lds    ebx,FWORD PTR [ecx]
  41c695:	xchg   ebx,eax
  41c696:	or     eax,0xfc8a1e52
  41c69b:	popf   
  41c69c:	fnstsw WORD PTR [ebx]
  41c69e:	push   ecx
  41c6a0:	pop    DWORD PTR [esi]
  41c6a2:	pop    edx
  41c6a3:	or     bh,cl
  41c6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6a6:	xor    BYTE PTR [esp+eiz*4-0x3cca93dd],dl
  41c6ad:	outs   dx,BYTE PTR ds:[esi]
  41c6ae:	scas   al,BYTE PTR es:[edi]
  41c6af:	xchg   edx,eax
  41c6b0:	inc    ecx
  41c6b1:	loope  0x41c6bd
  41c6b3:	aas    
  41c6b4:	or     DWORD PTR [edx+0x43],edi
  41c6b7:	sbb    ch,BYTE PTR [esi+0x71f86e15]
  41c6bd:	sbb    BYTE PTR [edx-0x2d3adf7b],al
  41c6c3:	jae    0x41c6ef
  41c6c5:	shl    dl,cl
  41c6c7:	xchg   esi,eax
  41c6c8:	les    edi,FWORD PTR [edx-0x1a0bb85b]
  41c6ce:	cmp    eax,0x54ef8bf1
  41c6d3:	push   cs
  41c6d4:	lea    eax,[esi+ebp*4+0x1a]
  41c6d8:	mov    BYTE PTR [edx],ch
  41c6da:	repnz sbb BYTE PTR [eax-0x1fb00249],dl
  41c6e1:	and    edx,0xffffffd6
  41c6e4:	mov    dl,0x71
  41c6e6:	pop    es
  41c6e7:	ins    BYTE PTR es:[edi],dx
  41c6e8:	popa   
  41c6e9:	and    DWORD PTR [edi+0x68],ebx
  41c6ec:	pop    eax
  41c6ed:	xlat   BYTE PTR fs:[ebx]
  41c6ef:	and    eax,ecx
  41c6f1:	jbe    0x41c700
  41c6f3:	add    eax,0x3e87f688
  41c6f8:	push   0xffffff8a
  41c6fa:	je     0x41c6df
  41c6fc:	mov    eax,0x90eb0201
  41c701:	fdiv   st,st(6)
  41c703:	mov    bl,BYTE PTR [ebp+ebx*1+0x4a]
  41c707:	jmp    0xe1ad7ea2
  41c70c:	cmp    BYTE PTR [eax-0x6a],dh
  41c70f:	sbb    esi,DWORD PTR [eax]
  41c711:	mov    al,gs:0x87dfbbd
  41c717:	add    DWORD PTR [edx-0x1],0xffffff94
  41c71b:	inc    esp
  41c71c:	lahf   
  41c71d:	outs   dx,BYTE PTR ds:[esi]
  41c71e:	jns    0x41c720
  41c720:	jbe    0x41c71f
  41c722:	fdiv   DWORD PTR [ebx+0x70]
  41c725:	in     al,0xb9
  41c727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c728:	pop    ebx
  41c729:	inc    edi
  41c72a:	int    0x85
  41c72c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c72d:	mov    ch,0x47
  41c72f:	cmp    ch,al
  41c731:	test   BYTE PTR [ebx-0xfde640a],ch
  41c737:	mov    al,0xfd
  41c739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73a:	jnp    0x41c6c0
  41c73c:	mov    bl,0x91
  41c73e:	mov    al,0x4d
  41c740:	adc    cl,BYTE PTR [ebx-0x7cecab43]
  41c746:	fst    DWORD PTR [edi+0x65c769cb]
  41c74c:	ja     0x41c6df
  41c74e:	or     BYTE PTR [eax-0x31],0xca
  41c752:	push   esp
  41c753:	loope  0x41c701
  41c755:	push   0xffffffda
  41c757:	push   0x2292246
  41c75c:	out    0xc5,al
  41c75e:	mov    DWORD PTR [ebx-0x17],0x2268f90c
  41c765:	retf   0x56da
  41c768:	jmp    DWORD PTR [edx+0x73]
  41c76b:	js     0x41c779
  41c76d:	add    DWORD PTR [ecx-0x453df6cc],edx
  41c773:	fwait
  41c774:	jle    0x41c75f
  41c776:	dec    ebp
  41c777:	mov    cl,0xed
  41c779:	mov    edx,edx
  41c77b:	pop    ebx
  41c77c:	imul   edi,DWORD PTR [ebp-0x21f4c891],0x77b01555
  41c786:	daa    
  41c787:	pop    ss
  41c788:	sub    al,dh
  41c78a:	push   es
  41c78b:	push   0xd9bfe3c6
  41c790:	mov    edx,0x589bd075
  41c795:	mov    esi,0x3097fa2c
  41c79a:	test   BYTE PTR [edx-0x2a],cl
  41c79d:	dec    ebx
  41c79e:	push   ss
  41c79f:	fist   DWORD PTR [edi-0x3695933a]
  41c7a5:	xchg   ebx,eax
  41c7a7:	fdiv   DWORD PTR ds:0xecd945db
  41c7ad:	cmc    
  41c7ae:	stos   DWORD PTR es:[edi],eax
  41c7af:	mov    eax,0xf03e98c4
  41c7b4:	leave  
  41c7b5:	jecxz  0x41c7ca
  41c7b7:	and    ecx,DWORD PTR [ecx+esi*4+0x7e]
  41c7bb:	jno    0x41c787
  41c7bd:	jne    0x41c812
  41c7bf:	out    0x9d,al
  41c7c1:	pop    es
  41c7c2:	sar    dh,0x33
  41c7c5:	loopne 0x41c791
  41c7c7:	jo     0x41c792
  41c7c9:	xchg   edx,eax
  41c7ca:	xchg   ecx,eax
  41c7cb:	out    dx,al
  41c7cc:	mov    ebx,0xe1d54a8e
  41c7d1:	aaa    
  41c7d2:	dec    edx
  41c7d3:	xchg   edi,esp
  41c7d5:	fcom   QWORD PTR [edi]
  41c7d7:	test   eax,0xdb093968
  41c7dc:	jb     0x41c7af
  41c7de:	add    eax,0x9f67bd42
  41c7e3:	jae    0x41c814
  41c7e5:	sbb    dl,BYTE PTR fs:[edi]
  41c7e8:	cwde   
  41c7e9:	ds pop ebx
  41c7eb:	inc    ecx
  41c7ec:	cmc    
  41c7ed:	adc    al,0x5c
  41c7ef:	mov    esi,0x6651bd1c
  41c7f4:	outs   dx,BYTE PTR es:[esi]
  41c7f6:	cs pop es
  41c7f8:	scas   al,BYTE PTR es:[edi]
  41c7f9:	fbstp  TBYTE PTR ss:[ebx-0x78]
  41c7fd:	lods   al,BYTE PTR ds:[esi]
  41c7fe:	pop    ecx
  41c7ff:	(bad)  
  41c800:	ss push ebx
  41c802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c803:	das    
  41c804:	mov    eax,0x15a15095
  41c809:	cmp    BYTE PTR [ecx],al
  41c80b:	cdq    
  41c80c:	call   0x624a:0xc3fe0f17
  41c813:	xchg   ecx,eax
  41c814:	push   esi
  41c815:	mov    ds:0xc74b3d6c,al
  41c81a:	aaa    
  41c81b:	pop    es
  41c81c:	test   BYTE PTR [eax+0x58],ch
  41c81f:	inc    edx
  41c820:	sbb    eax,0x73b24ef8
  41c825:	and    eax,0xd06ab591
  41c82a:	lds    ebp,FWORD PTR [ecx]
  41c82c:	test   eax,0xcd75770
  41c831:	clc    
  41c832:	mov    dh,0x7d
  41c834:	inc    ebp
  41c835:	mov    al,0x59
  41c837:	in     al,dx
  41c838:	sti    
  41c839:	lea    esi,[ebp-0x6239f637]
  41c83f:	and    al,0xec
  41c841:	add    eax,0x34041dab
  41c846:	mov    dl,0xd4
  41c848:	arpl   sp,sp
  41c84a:	xlat   BYTE PTR ds:[ebx]
  41c84b:	jb     0x41c874
  41c84d:	push   ecx
  41c84e:	jnp    0x41c823
  41c850:	dec    ebp
  41c851:	(bad)  
  41c852:	in     al,0x32
  41c854:	ret    0x63b9
  41c857:	sbb    ebx,DWORD PTR [ebp-0x742b1eda]
  41c85d:	sub    bl,BYTE PTR [edx]
  41c85f:	shl    DWORD PTR [eax+0x2e],0x45
  41c863:	add    ah,bh
  41c865:	(bad)  
  41c866:	jmp    0x7062f9e4
  41c86b:	outs   dx,BYTE PTR ds:[esi]
  41c86c:	jge    0x41c875
  41c86e:	ret    0xf574
  41c871:	loop   0x41c8eb
  41c873:	in     eax,0x75
  41c875:	enter  0xe660,0xb6
  41c879:	push   ebp
  41c87a:	cs jmp 0x41c837
  41c87d:	dec    ecx
  41c87e:	sbb    al,0xfb
  41c880:	ror    BYTE PTR [eax],1
  41c882:	dec    edx
  41c883:	or     ebx,DWORD PTR [esi-0xd472368]
  41c889:	xor    BYTE PTR [ebp+0x1f6af578],bl
  41c88f:	ret    0xc822
  41c892:	mov    ebx,DWORD PTR [eax+0x339fc453]
  41c898:	sub    DWORD PTR [edi],edx
  41c89a:	jl     0x41c86d
  41c89c:	fisub  WORD PTR [ebx]
  41c89e:	jecxz  0x41c90d
  41c8a0:	imul   edi,DWORD PTR [ebx+eax*4-0x3e],0xffffffb4
  41c8a5:	mov    ah,0xe1
  41c8a7:	mov    al,ds:0x34b1f2b3
  41c8ac:	pop    ss
  41c8ad:	retf   0x3faa
  41c8b0:	test   DWORD PTR [esi+edx*1],eax
  41c8b3:	bound  ebp,QWORD PTR [ebx+ebx*4]
  41c8b6:	add    DWORD PTR [eax],esp
  41c8b8:	xchg   esi,eax
  41c8b9:	hlt    
  41c8ba:	cld    
  41c8bb:	and    al,ch
  41c8bd:	cli    
  41c8be:	(bad)  
  41c8bf:	out    dx,eax
  41c8c0:	adc    dl,0x88
  41c8c3:	xchg   edx,eax
  41c8c4:	(bad)
  41c8c7:	cwde   
  41c8c8:	hlt    
  41c8c9:	out    dx,al
  41c8ca:	in     al,0xe1
  41c8cc:	push   cs
  41c8cd:	add    DWORD PTR [edx+0x66],0x3
  41c8d1:	iret   
  41c8d2:	xchg   ebp,eax
  41c8d3:	pop    esi
  41c8d4:	jl     0x41c910
  41c8d6:	xchg   DWORD PTR [ebx],ebx
  41c8d8:	test   DWORD PTR [edi],ebp
  41c8da:	(bad)  
  41c8db:	int    0xc1
  41c8dd:	loopne 0x41c95b
  41c8df:	cmp    edx,DWORD PTR [ebx-0x2d]
  41c8e2:	inc    ecx
  41c8e3:	(bad)  
  41c8e4:	or     BYTE PTR [esi],dh
  41c8e6:	cld    
  41c8e7:	pop    ss
  41c8e8:	push   eax
  41c8e9:	inc    edx
  41c8ea:	adc    eax,DWORD PTR [ecx-0x3ab34a3f]
  41c8f0:	pop    ebx
  41c8f1:	shr    BYTE PTR [ebp+0x5d097803],1
  41c8f7:	jo     0x41c926
  41c8f9:	sbb    al,0x72
  41c8fb:	mov    ebx,DWORD PTR [edx+0x72c43ade]
  41c901:	mov    DWORD PTR [esi+ebx*4+0x29e47883],ebp
  41c908:	leave  
  41c909:	pop    es
  41c90a:	je     0x41c8a1
  41c90c:	jmp    0x41c933
  41c90e:	push   ebx
  41c90f:	inc    esp
  41c910:	xchg   ebx,eax
  41c911:	stos   DWORD PTR es:[edi],eax
  41c912:	outs   dx,BYTE PTR ds:[esi]
  41c913:	stos   DWORD PTR es:[edi],eax
  41c914:	mov    ebx,0xa5317734
  41c919:	das    
  41c91a:	int3   
  41c91b:	or     edx,DWORD PTR [edx]
  41c91d:	xchg   DWORD PTR [eax],ebx
  41c91f:	mov    ds:0x200835c6,eax
  41c924:	push   esi
  41c925:	mov    es,esi
  41c927:	mov    ebp,0x6f5fb252
  41c92c:	mov    esi,0x70fbfada
  41c931:	lods   eax,DWORD PTR ds:[esi]
  41c932:	pop    ecx
  41c933:	mov    ebp,0x5ec24c2a
  41c938:	or     eax,0xc2f47516
  41c93d:	in     al,dx
  41c93e:	dec    esi
  41c93f:	sti    
  41c940:	pop    eax
  41c941:	xor    BYTE PTR [ecx-0x61],dh
  41c944:	pop    edi
  41c945:	cmp    al,0x11
  41c947:	cld    
  41c948:	jns    0x41c90e
  41c94a:	(bad)  
  41c94b:	pop    ds
  41c94c:	push   eax
  41c94d:	mov    edx,0x410cf72a
  41c952:	(bad)  
  41c953:	mov    cs,WORD PTR [esi-0x56]
  41c956:	psadbw mm4,mm1
  41c959:	dec    ecx
  41c95a:	lahf   
  41c95b:	mov    edx,0x547b31
  41c960:	mov    dl,0x5
  41c962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c963:	sub    eax,0xecedbcc9
  41c968:	pop    edx
  41c969:	daa    
  41c96a:	push   cs
  41c96b:	push   ecx
  41c96c:	outs   dx,BYTE PTR ds:[esi]
  41c96d:	loope  0x41c8f2
  41c96f:	(bad)  
  41c970:	clc    
  41c971:	fadd   QWORD PTR [ecx]
  41c973:	je     0x41c9b3
  41c975:	mov    ebx,DWORD PTR [esi+esi*2-0x658d0ba5]
  41c97c:	imul   edi,edx,0xfffffff5
  41c97f:	loope  0x41c9dd
  41c981:	pushf  
  41c982:	fild   WORD PTR [ebp+0x40]
  41c985:	loop   0x41c912
  41c987:	pop    eax
  41c988:	xchg   esp,eax
  41c989:	call   0xdd21c1d0
  41c98e:	inc    edi
  41c98f:	mov    al,0x94
  41c991:	jl     0x41c9c6
  41c993:	je     0x41c98d
  41c995:	xor    bl,0xb9
  41c998:	out    0x2d,eax
  41c99a:	lock cmp al,0x6f
  41c99d:	sbb    dl,ah
  41c99f:	fs pop edi
  41c9a1:	(bad)  
  41c9a2:	mov    esi,0x7e2773c1
  41c9a7:	mov    ds:0x5461e6c8,eax
  41c9ac:	jno    0x41c9e8
  41c9ae:	inc    edx
  41c9af:	in     eax,dx
  41c9b0:	adc    dh,BYTE PTR [edx+0x407bec41]
  41c9b6:	add    BYTE PTR [esi-0x31],bl
  41c9b9:	mov    al,0x8
  41c9bb:	ja     0x41c9a6
  41c9bd:	test   eax,0x35bceac
  41c9c2:	and    DWORD PTR [edi+0x9684482],edx
  41c9c8:	stos   BYTE PTR es:[edi],al
  41c9c9:	jecxz  0x41c9e6
  41c9cb:	mov    al,ds:0x1f0baafa
  41c9d0:	test   DWORD PTR [eax-0x59],0x994ee6ac
  41c9d7:	mov    bh,0xde
  41c9d9:	fld    QWORD PTR [ebx-0x6aa0f252]
  41c9df:	pop    esi
  41c9e0:	shl    dl,1
  41c9e2:	fadd   DWORD PTR [ebx+0x5ef50956]
  41c9e8:	mov    WORD PTR [edx+edx*1],ss
  41c9eb:	adc    al,0xbb
  41c9ed:	retf   0xc82c
  41c9f0:	adc    al,0xa5
  41c9f2:	(bad)  
  41c9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f5:	fincstp 
  41c9f7:	test   al,0x5b
  41c9f9:	xchg   DWORD PTR [ecx-0x34],eax
  41c9fc:	ret    0xb2c
  41c9ff:	lods   al,BYTE PTR ds:[esi]
  41ca00:	jp     0x41ca09
  41ca02:	mov    eax,ds:0x935d1450
  41ca07:	pusha  
  41ca08:	jo     0x41ca19
  41ca0a:	aad    0xab
  41ca0c:	xor    eax,0xfe427d06
  41ca11:	pusha  
  41ca12:	cld    
  41ca13:	scas   al,BYTE PTR es:[edi]
  41ca14:	inc    ecx
  41ca15:	mov    bl,BYTE PTR [ebp+0x1380daa8]
  41ca1b:	ror    BYTE PTR [edx],cl
  41ca1d:	mov    al,0xe2
  41ca1f:	sbb    al,0x87
  41ca21:	cdq    
  41ca22:	push   esi
  41ca23:	in     al,dx
  41ca24:	xor    BYTE PTR [ebx+0x28b33619],0xd9
  41ca2b:	sbb    DWORD PTR [ecx+0x6f6d3af5],esp
  41ca31:	stos   BYTE PTR es:[edi],al
  41ca32:	sahf   
  41ca33:	pop    ecx
  41ca34:	fwait
  41ca35:	les    esi,FWORD PTR [esi]
  41ca37:	lods   al,BYTE PTR ds:[esi]
  41ca38:	pop    esi
  41ca39:	xchg   DWORD PTR [edi+edi*8+0x1a],ebp
  41ca3d:	je     0x41ca9d
  41ca3f:	sbb    al,0x28
  41ca41:	pop    ds
  41ca42:	enter  0x9ead,0x89
  41ca46:	mov    cl,0xa
  41ca48:	jp     0x41ca09
  41ca4a:	sub    al,0xa4
  41ca4c:	mov    WORD PTR [eax],cs
  41ca4e:	and    eax,0x94fe2d78
  41ca53:	mov    ch,0xc6
  41ca55:	int    0x56
  41ca57:	jo     0x41ca06
  41ca59:	xor    DWORD PTR [esi],ebp
  41ca5b:	rcr    DWORD PTR [eax],0x4e
  41ca5e:	ds loope 0x41cad1
  41ca61:	into   
  41ca62:	cmp    dl,BYTE PTR [esi-0x32]
  41ca65:	jbe    0x41ca74
  41ca67:	ds in  eax,dx
  41ca69:	mov    ecx,0x915b3be7
  41ca6e:	mov    ebp,0xa7baf8c7
  41ca73:	pop    es
  41ca74:	or     edx,DWORD PTR [esi-0x6828dae8]
  41ca7a:	into   
  41ca7b:	es pop eax
  41ca7d:	and    esi,esp
  41ca7f:	dec    edx
  41ca80:	sbb    DWORD PTR ds:0x5487542b,ebx
  41ca86:	cmp    al,0xcc
  41ca88:	xor    DWORD PTR [esi-0x401b8436],0x8dc79799
  41ca92:	add    DWORD PTR [ebx],0x20
  41ca95:	sbb    eax,0x9f5c3550
  41ca9a:	lea    esi,[edi-0x18]
  41ca9d:	daa    
  41ca9e:	cmp    bh,bl
  41caa0:	push   ecx
  41caa1:	nop
  41caa2:	call   FWORD PTR [ebp+0x26fd2331]
  41caa8:	xchg   BYTE PTR [ecx],dh
  41caaa:	mov    ch,0x6c
  41caac:	imul   edi,eax,0xeb46c102
  41cab2:	(bad)  
  41cab3:	or     dh,BYTE PTR [esi-0x70]
  41cab6:	das    
  41cab7:	sbb    BYTE PTR [eax-0x6af4209d],bl
  41cabd:	sbb    cl,BYTE PTR [esi-0x59]
  41cac0:	ficomp DWORD PTR [ebp-0x4e]
  41cac3:	cwde   
  41cac4:	cli    
  41cac5:	and    ah,al
  41cac7:	enter  0xa165,0x84
  41cacb:	leave  
  41cacc:	mov    ebp,0x76ed000c
  41cad1:	xchg   edx,eax
  41cad2:	xchg   ebx,eax
  41cad3:	mov    eax,0x79a8e924
  41cad8:	pop    ds
  41cad9:	dec    ebp
  41cada:	retf   0x844e
  41cadd:	popa   
  41cade:	sbb    DWORD PTR [ecx+0x197ad8ca],ebp
  41cae4:	mov    edx,0xdb7d0c26
  41cae9:	hlt    
  41caea:	mov    dh,0x4d
  41caec:	jbe    0x41cb3d
  41caee:	pop    es
  41caef:	into   
  41caf0:	or     DWORD PTR [ebp+ecx*4-0xf],ecx
  41caf4:	rol    BYTE PTR [edx-0x53],1
  41caf7:	pop    ebp
  41caf8:	ror    BYTE PTR [eax+0x29369dbe],cl
  41cafe:	scas   al,BYTE PTR es:[edi]
  41caff:	mov    dh,dh
  41cb01:	push   ebp
  41cb02:	in     eax,dx
  41cb03:	lea    eax,[eax]
  41cb05:	push   ebx
  41cb06:	fadd   st(1),st
  41cb08:	imul   esp,DWORD PTR [edi+0x680af290],0xe8b8c923
  41cb12:	sub    esi,DWORD PTR [edi+0x5072675e]
  41cb18:	xlat   BYTE PTR ds:[ebx]
  41cb19:	cmp    eax,0x3daecf00
  41cb1e:	icebp  
  41cb1f:	(bad)  [edx+0xb5f69a1]
  41cb25:	ror    ebp,cl
  41cb27:	test   DWORD PTR [ecx-0x28],esp
  41cb2a:	jne    0x41cb01
  41cb2c:	mov    ebx,0xa4c4f0bc
  41cb31:	outs   dx,BYTE PTR ds:[esi]
  41cb32:	aad    0x2e
  41cb34:	es inc ebx
  41cb36:	fidivr WORD PTR [esi-0x635dd550]
  41cb3c:	hlt    
  41cb3d:	in     eax,0x96
  41cb3f:	xchg   ecx,eax
  41cb40:	call   0xb73b:0x7250b81b
  41cb47:	mov    esp,0x1362408c
  41cb4c:	sahf   
  41cb4d:	sub    al,0x71
  41cb4f:	jmp    0xa1c4ec2
  41cb54:	call   0xdc20:0xc9cf447a
  41cb5b:	fwait
  41cb5c:	pop    ebp
  41cb5d:	popa   
  41cb5e:	outs   dx,BYTE PTR fs:[esi]
  41cb60:	ret    
  41cb61:	iret   
  41cb62:	xor    BYTE PTR [ebx+0x216744c4],bh
  41cb68:	int    0xd
  41cb6a:	and    dl,BYTE PTR [eax-0x71d2b0cc]
  41cb70:	sbb    ebx,eax
  41cb72:	mov    ebp,0xc52d53be
  41cb77:	cmp    eax,0x55ee7ec1
  41cb7c:	adc    ah,BYTE PTR [esi+0x3f6aab6]
  41cb82:	pop    edi
  41cb83:	xchg   edi,eax
  41cb84:	jp     0x41cb44
  41cb86:	bound  esp,QWORD PTR [ebx-0x65188ef0]
  41cb8c:	jmp    0x41cc01
  41cb8e:	fnstcw WORD PTR [eax-0x3f]
  41cb91:	je     0x41cb55
  41cb93:	jp     0x41cb92
  41cb95:	push   cs
  41cb96:	popf   
  41cb97:	and    esi,edx
  41cb99:	xchg   ecx,eax
  41cb9a:	jbe    0x41cbce
  41cb9c:	cmp    BYTE PTR [ebx+edi*2],bl
  41cb9f:	mov    WORD PTR [eax-0x329bdf37],ds
  41cba5:	dec    edi
  41cba6:	pop    edx
  41cba7:	sti    
  41cba8:	push   0x53
  41cbaa:	popf   
  41cbab:	and    bl,bl
  41cbad:	add    ch,ch
  41cbaf:	in     al,dx
  41cbb0:	das    
  41cbb1:	aaa    
  41cbb2:	pop    edx
  41cbb3:	bound  ebp,QWORD PTR [esi-0x23cd9520]
  41cbb9:	call   0x7fcc:0xa8dc0d0f
  41cbc0:	jmp    0xcd7fbb32
  41cbc5:	retf   
  41cbc6:	push   eax
  41cbc7:	fadd   st(4),st
  41cbc9:	lock int3 
  41cbcb:	pop    ecx
  41cbcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbcd:	inc    ecx
  41cbce:	outs   dx,DWORD PTR ds:[si]
  41cbd0:	stos   DWORD PTR es:[edi],eax
  41cbd1:	dec    ecx
  41cbd2:	add    DWORD PTR [esp+esi*2-0x4a],esi
  41cbd6:	mov    ds:0x353adade,al
  41cbdb:	mov    ch,0xa6
  41cbdd:	or     eax,0xe0e8a9cf
  41cbe2:	sub    DWORD PTR [ecx+0x7],0xffffffb4
  41cbe6:	inc    esp
  41cbe7:	fcmovnu st,st(6)
  41cbe9:	mov    ds:0xedfac9a2,al
  41cbee:	xor    cl,cl
  41cbf0:	push   0xfffffff8
  41cbf2:	aad    0xd9
  41cbf4:	nop
  41cbf5:	or     eax,0xb71595ca
  41cbfa:	xchg   esi,eax
  41cbfb:	repnz pop ecx
  41cbfd:	call   0x6e71:0xa896794e
  41cc04:	ret    
  41cc05:	sub    dl,BYTE PTR [edi]
  41cc07:	push   ss
  41cc08:	enter  0x5d22,0x5c
  41cc0c:	or     ch,dl
  41cc0e:	xor    bl,ch
  41cc10:	xchg   ecx,eax
  41cc11:	test   eax,0x8d46513a
  41cc16:	push   ecx
  41cc17:	pushf  
  41cc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc19:	inc    edi
  41cc1a:	jp     0x41cbed
  41cc1c:	jg     0x41cbd4
  41cc1e:	mov    ebx,0xefcc1c1a
  41cc23:	xchg   esi,eax
  41cc24:	cwde   
  41cc25:	es jp  0x41cbfb
  41cc28:	xor    bl,BYTE PTR [edi+0x7c]
  41cc2b:	mov    ecx,0xd0916dc9
  41cc30:	popf   
  41cc31:	jo     0x41cbcc
  41cc33:	imul   edx,ebx,0xffffff92
  41cc36:	add    DWORD PTR [esi],ebx
  41cc38:	jle    0x41cc7d
  41cc3a:	inc    esi
  41cc3b:	test   eax,0x57a9301f
  41cc40:	adc    al,0x1
  41cc42:	cli    
  41cc43:	inc    edx
  41cc44:	int    0xc0
  41cc46:	outs   dx,DWORD PTR ds:[esi]
  41cc47:	in     eax,dx
  41cc48:	(bad)  [esi]
  41cc4a:	stos   DWORD PTR es:[edi],eax
  41cc4b:	sahf   
  41cc4c:	jno    0x41cc5d
  41cc4e:	push   edx
  41cc4f:	jae    0x41cc27
  41cc51:	xor    BYTE PTR [ebx+ebp*2-0x53d247ba],dh
  41cc58:	cmp    BYTE PTR [ecx],ch
  41cc5a:	jno    0x41cc4a
  41cc5c:	out    dx,eax
  41cc5d:	sbb    edx,ecx
  41cc5f:	push   ebp
  41cc60:	aam    0x29
  41cc62:	outs   dx,BYTE PTR ds:[esi]
  41cc63:	lods   al,BYTE PTR ds:[esi]
  41cc64:	pop    ss
  41cc65:	adc    ebx,esp
  41cc67:	(bad)  
  41cc68:	sar    DWORD PTR [esi-0x62126432],1
  41cc6e:	xor    al,0x2a
  41cc70:	addr16 enter 0xb462,0xdb
  41cc75:	test   BYTE PTR [esi+0x4],0x81
  41cc79:	fistp  QWORD PTR [ecx+ebx*4-0xb]
  41cc7d:	dec    ebp
  41cc7e:	add    DWORD PTR [ecx-0x5cbf5a02],0x1
  41cc85:	in     eax,0x59
  41cc87:	(bad)  
  41cc88:	dec    esp
  41cc89:	pop    ebx
  41cc8a:	fs jnp 0x41cc8c
  41cc8d:	inc    ebx
  41cc8e:	jle    0x41ccba
  41cc90:	(bad)  [edi-0x41194243]
  41cc96:	ror    DWORD PTR [ebx+ebp*2-0x12],1
  41cc9a:	(bad)  
  41cc9b:	mov    WORD PTR [ecx-0x66],gs
  41cc9e:	push   esp
  41cc9f:	repz repz push esi
  41cca2:	fldenv [ebx]
  41cca4:	or     eax,0x11ae5d45
  41cca9:	inc    eax
  41ccaa:	shl    DWORD PTR [ecx-0x69cf32d9],cl
  41ccb0:	repz jne 0x41ccd3
  41ccb3:	popf   
  41ccb4:	dec    ebp
  41ccb5:	jmp    0x7713:0x21bfa2d6
  41ccbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbd:	sahf   
  41ccbe:	jge    0x41cca2
  41ccc0:	jo     0x41cc5b
  41ccc2:	cmp    al,0xc9
  41ccc4:	(bad)  
  41ccc5:	push   ss
  41ccc6:	mov    dh,0xb4
  41ccc8:	iret   
  41ccc9:	in     eax,0x5d
  41cccb:	push   esi
  41cccc:	sub    edi,DWORD PTR [ecx-0x2b]
  41cccf:	pop    ecx
  41ccd0:	mov    dl,0x43
  41ccd2:	push   0x26
  41ccd4:	xor    ch,BYTE PTR [edx+0x25]
  41ccd7:	jb     0x41cd12
  41ccd9:	or     eax,0xf289cdc6
  41ccde:	arpl   WORD PTR [ecx],bx
  41cce0:	xor    eax,0x64ea0fd8
  41cce5:	inc    edx
  41cce6:	icebp  
  41cce7:	mov    bh,0x2b
  41cce9:	adc    bl,BYTE PTR [edx+0x64d0f400]
  41ccef:	adc    al,dl
  41ccf1:	xor    DWORD PTR [eax+edx*1],esi
  41ccf4:	mov    cl,0x32
  41ccf6:	out    0x5b,eax
  41ccf8:	imul   eax,DWORD PTR [esi+0x6e2ba33b],0xffffffbc
  41ccff:	rol    bl,1
  41cd01:	or     BYTE PTR [ebp+0x1b],bh
  41cd04:	into   
  41cd05:	(bad)  
  41cd06:	xchg   ebp,eax
  41cd07:	(bad)  
  41cd08:	mov    ds:0x812ee15a,eax
  41cd0d:	mov    WORD PTR [edx+0x6bde6994],ds
  41cd13:	cli    
  41cd14:	push   0xe39205b7
  41cd19:	rcl    DWORD PTR [ecx-0x6d],cl
  41cd1c:	ficomp DWORD PTR ds:0x45800bab
  41cd22:	mov    eax,ds:0x9f6a56
  41cd27:	mov    esi,0x5694fb66
  41cd2c:	pop    ecx
  41cd2d:	out    dx,eax
  41cd2e:	xor    al,0x53
  41cd30:	and    BYTE PTR [edi+0x3ae6f605],cl
  41cd36:	out    dx,al
  41cd37:	scas   eax,DWORD PTR es:[edi]
  41cd38:	or     eax,0xcb525774
  41cd3d:	adc    BYTE PTR [ebp-0x5a117e64],dl
  41cd43:	ja     0x41cd94
  41cd45:	out    dx,al
  41cd46:	enter  0x10e7,0x37
  41cd4a:	mov    eax,0xf65ea2bc
  41cd4f:	out    dx,eax
  41cd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd51:	loopne 0x41cd5f
  41cd53:	iret   
  41cd54:	mov    ebx,0xd6a5db17
  41cd59:	mov    cl,0x41
  41cd5b:	rol    DWORD PTR [edx+edi*8-0x3a7eee61],0xe8
  41cd63:	call   0xbe49:0xd69f9ac4
  41cd6a:	cdq    
  41cd6b:	ret    
  41cd6c:	lahf   
  41cd6d:	ins    DWORD PTR es:[edi],dx
  41cd6e:	aam    0x93
  41cd70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd71:	adc    dh,0x40
  41cd74:	mov    bl,0x4a
  41cd76:	or     DWORD PTR [eax],esi
  41cd78:	cmp    ebp,DWORD PTR [ebp-0x24b104b7]
  41cd7e:	aaa    
  41cd7f:	mov    al,ds:0xdd1c4a47
  41cd84:	pop    esi
  41cd85:	or     al,0xe7
  41cd87:	in     eax,dx
  41cd88:	dec    esi
  41cd89:	fnsave [ecx+0x65]
  41cd8c:	xchg   BYTE PTR [ebp-0x7a],bl
  41cd8f:	xchg   edi,eax
  41cd90:	scas   al,BYTE PTR es:[edi]
  41cd91:	push   es
  41cd92:	call   0xaf75:0x810a5234
  41cd99:	cmp    DWORD PTR [edx],0xffffff99
  41cd9c:	les    ecx,FWORD PTR [edx]
  41cd9e:	pop    esi
  41cd9f:	pop    ecx
  41cda0:	xchg   esp,eax
  41cda1:	test   eax,0xb074e696
  41cda6:	jle    0x41ce1b
  41cda8:	shr    DWORD PTR [edx-0x7b1dba6d],1
  41cdae:	stc    
  41cdaf:	mov    dh,0x6c
  41cdb1:	jl     0x41cdc2
  41cdb3:	shl    DWORD PTR [ecx-0x2acac527],0x3e
  41cdba:	retf   
  41cdbb:	ret    0x67aa
  41cdbe:	mov    ecx,0x94b3ded7
  41cdc3:	adc    eax,DWORD PTR [edi]
  41cdc5:	inc    ecx
  41cdc6:	jb     0x41ce10
  41cdc8:	pop    ss
  41cdc9:	(bad)  
  41cdca:	sbb    ebx,esi
  41cdcc:	mov    dl,0xf0
  41cdce:	imul   ebp,DWORD PTR [edi+0x4f],0xb855e20e
  41cdd5:	lock push cs
  41cdd7:	cmp    al,0xa4
  41cdd9:	xor    eax,0xc396686d
  41cdde:	adc    DWORD PTR [ecx],0x6d
  41cde1:	(bad)
  41cde5:	sbb    BYTE PTR [ebp-0x1ab86702],ah
  41cdeb:	das    
  41cdec:	and    al,0x32
  41cdee:	push   DWORD PTR [ebp-0x4edf5f2]
  41cdf4:	imul   edx,ebx,0x25ef881
  41cdfa:	add    al,0xa5
  41cdfc:	or     bh,0x75
  41cdff:	mov    bh,0x2f
  41ce02:	pop    ebp
  41ce03:	jge    0x41cdf2
  41ce05:	cld    
  41ce06:	(bad)  
  41ce08:	inc    ecx
  41ce09:	or     BYTE PTR [ebx],0xd6
  41ce0c:	add    al,dl
  41ce0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce0f:	push   ebx
  41ce10:	and    ebp,DWORD PTR [ecx]
  41ce12:	outs   dx,DWORD PTR ds:[esi]
  41ce13:	in     al,dx
  41ce14:	jns    0x41ce5c
  41ce16:	jo     0x41ce87
  41ce18:	iret   
  41ce19:	je     0x41ce61
  41ce1b:	pop    eax
  41ce1c:	ficomp DWORD PTR [edx-0x650b691]
  41ce22:	pop    ss
  41ce23:	scas   eax,DWORD PTR es:[edi]
  41ce24:	cmp    edi,eax
  41ce26:	jno    0x41cdda
  41ce28:	xchg   BYTE PTR [esi-0x4d9ed9e4],dl
  41ce2e:	add    ah,BYTE PTR [esi]
  41ce30:	fldenv [edx]
  41ce32:	repnz pop ebx
  41ce34:	shl    DWORD PTR [edx-0x47],1
  41ce37:	aam    0x38
  41ce39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3a:	ret    0x5479
  41ce3d:	add    dh,BYTE PTR [eax+ebp*8+0x22]
  41ce41:	fnstenv ds:0xc01ed4dd
  41ce47:	enter  0xecf7,0x9f
  41ce4b:	xlat   BYTE PTR ds:[ebx]
  41ce4c:	rol    BYTE PTR [edx+ebp*1+0x2b],cl
  41ce50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce51:	ret    0xdd45
  41ce54:	lods   eax,DWORD PTR ds:[esi]
  41ce55:	lahf   
  41ce56:	test   cl,dl
  41ce58:	inc    esp
  41ce59:	and    eax,0xc12f6b2f
  41ce5e:	loope  0x41ce98
  41ce60:	out    0xda,eax
  41ce62:	inc    edx
  41ce63:	add    al,BYTE PTR [eax+0x57]
  41ce66:	fidivr DWORD PTR [esi+0x2e]
  41ce69:	and    ecx,ebp
  41ce6b:	mov    BYTE PTR [esi-0x71],dl
  41ce6e:	or     DWORD PTR [esi+ebx*1],edx
  41ce71:	lods   al,BYTE PTR ds:[esi]
  41ce72:	xor    eax,0x36d72264
  41ce77:	shl    DWORD PTR [ecx-0x2c],cl
  41ce7a:	xchg   ebp,eax
  41ce7b:	scas   al,BYTE PTR es:[edi]
  41ce7c:	sub    eax,0x3a2c1d84
  41ce81:	cmp    al,0xde
  41ce83:	pop    edi
  41ce84:	xchg   esp,eax
  41ce85:	push   0x23
  41ce87:	or     BYTE PTR [esi+0xeb4c1b6],ah
  41ce8d:	and    al,0x6c
  41ce8f:	and    dl,BYTE PTR [eax-0x21]
  41ce92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce93:	das    
  41ce94:	or     dl,BYTE PTR [edx+0x4f250f9f]
  41ce9a:	popa   
  41ce9b:	xor    eax,0x4d156d23
  41cea0:	in     al,0x88
  41cea2:	lods   al,BYTE PTR ds:[esi]
  41cea3:	in     al,dx
  41cea4:	push   ecx
  41cea5:	push   ebx
  41cea6:	int    0x33
  41cea8:	pop    ds
  41cea9:	cmc    
  41ceaa:	mov    ds:0xc8f1c3d2,eax
  41ceaf:	jmp    0x7943:0x1981de41
  41ceb6:	mov    BYTE PTR [eax],bh
  41ceb8:	pop    ecx
  41ceb9:	popa   
  41ceba:	mov    ecx,0x67240307
  41cebf:	mov    dh,0xde
  41cec1:	retf   
  41cec2:	pop    esi
  41cec3:	push   0xffffff8b
  41cec5:	and    BYTE PTR [ebp-0x617207d8],bl
  41cecb:	push   0xa15a2e59
  41ced0:	popa   
  41ced1:	sbb    ebp,DWORD PTR cs:[eax+0x7c]
  41ced5:	clc    
  41ced6:	xor    BYTE PTR [edx+0x11ff09b2],bl
  41cedc:	or     BYTE PTR [ecx],bl
  41cede:	add    BYTE PTR [edi+0x38],0x5f
  41cee2:	lds    ebp,FWORD PTR ds:0x42f2f686
  41cee8:	test   al,0x21
  41ceea:	mov    esi,0xf06e91f
  41ceef:	ret    
  41cef0:	or     al,ch
  41cef2:	and    BYTE PTR [edi+eiz*2+0x52],cl
  41cef6:	push   ds
  41cef7:	test   edi,ebp
  41cef9:	nop
  41cefa:	adc    eax,0xc1a434de
  41ceff:	xchg   ebx,eax
  41cf00:	(bad)  
  41cf02:	inc    ebx
  41cf03:	hlt    
  41cf04:	jmp    0x9a5e:0x38e019ea
  41cf0b:	inc    edi
  41cf0c:	int3   
  41cf0d:	adc    cl,dl
  41cf0f:	inc    ebx
  41cf10:	shl    BYTE PTR [eax-0x4ebb4bb3],0xee
  41cf17:	xchg   edi,eax
  41cf18:	out    0x54,al
  41cf1a:	ror    BYTE PTR [esp+eax*1+0x72df1dd],1
  41cf21:	add    eax,0x171f2a14
  41cf26:	int3   
  41cf27:	sub    bh,dh
  41cf29:	pop    es
  41cf2a:	pusha  
  41cf2b:	stos   DWORD PTR es:[edi],eax
  41cf2c:	fsubr  st,st(1)
  41cf2e:	jl     0x41cee0
  41cf30:	rol    DWORD PTR [esi],cl
  41cf32:	push   0xafe352b4
  41cf37:	sbb    ah,BYTE PTR [esi+0x7b12aa02]
  41cf3d:	xor    ecx,eax
  41cf3f:	jmp    0x6abf:0x4b3bcf25
  41cf46:	sahf   
  41cf47:	xchg   ebx,eax
  41cf48:	fdivr  QWORD PTR [ebx]
  41cf4a:	imul   ecx,DWORD PTR [eax],0xc2a7e7bb
  41cf50:	aaa    
  41cf51:	xor    BYTE PTR [ebx],dh
  41cf53:	jp     0x41cfcf
  41cf55:	ror    BYTE PTR [ebp-0x4019b09e],1
  41cf5b:	sub    eax,0x41e60cd2
  41cf60:	or     BYTE PTR [ecx+0x78b820c0],bl
  41cf66:	xor    ecx,DWORD PTR [edx+0x602a76d3]
  41cf6c:	mov    edx,0xd4ab5d69
  41cf71:	or     esp,edx
  41cf73:	outs   dx,DWORD PTR ds:[esi]
  41cf74:	stos   DWORD PTR es:[edi],eax
  41cf75:	or     DWORD PTR [ebx-0xf],esi
  41cf78:	outs   dx,BYTE PTR ds:[esi]
  41cf79:	xchg   esi,eax
  41cf7a:	push   es
  41cf7b:	jle    0x41cf99
  41cf7d:	sbb    ebp,ebp
  41cf7f:	jg     0x41cf2c
  41cf81:	leave  
  41cf82:	js     0x41cf63
  41cf84:	pop    ds
  41cf85:	sti    
  41cf86:	xchg   ebx,eax
  41cf87:	add    dh,bl
  41cf89:	bnd jb 0x41cf15
  41cf8c:	ffreep st(6)
  41cf8e:	push   esi
  41cf8f:	iret   
  41cf90:	fstp   TBYTE PTR [edx]
  41cf92:	jl     0x41cfe3
  41cf94:	aad    0x1d
  41cf96:	cmp    ah,BYTE PTR [eax-0x523a82fd]
  41cf9c:	inc    ebp
  41cf9d:	push   ds
  41cf9e:	fwait
  41cf9f:	mov    ecx,0xbb01ebbe
  41cfa4:	out    0x2d,eax
  41cfa6:	jb     0x41d018
  41cfa8:	pop    ecx
  41cfa9:	pop    ebp
  41cfaa:	pop    ebx
  41cfab:	imul   esi,DWORD PTR [edx+esi*4+0x3b],0xffffffe2
  41cfb0:	out    dx,al
  41cfb1:	lods   eax,DWORD PTR ds:[esi]
  41cfb2:	(bad)  
  41cfb3:	cmp    dl,BYTE PTR [eax-0x2c15a744]
  41cfb9:	pop    ebp
  41cfba:	(bad)  
  41cfbb:	ins    DWORD PTR es:[edi],dx
  41cfbc:	mov    edi,0xd6de7000
  41cfc1:	mov    ebx,0x995262d
  41cfc6:	(bad)  
  41cfc7:	fidiv  DWORD PTR [edx]
  41cfc9:	loope  0x41cf98
  41cfcb:	fs sub al,0x96
  41cfce:	sub    ch,ch
  41cfd0:	arpl   dx,sp
  41cfd2:	in     al,dx
  41cfd3:	jnp    0x41cfb5
  41cfd5:	xchg   edi,eax
  41cfd6:	push   0xa94bdbb8
  41cfdb:	sbb    bh,BYTE PTR [ebx+edx*8+0x3f3b74b3]
  41cfe2:	les    edi,FWORD PTR [ebp-0x59b00c59]
  41cfe8:	retf   0xc79a
  41cfeb:	xchg   ebp,eax
  41cfec:	test   eax,0x8de3a1e3
  41cff1:	pop    ds
  41cff2:	nop
  41cff3:	in     al,dx
  41cff4:	jmp    0x9ec33e4d
  41cff9:	xor    eax,0x729dac9f
  41cffe:	mov    WORD PTR [ebx-0x5679d097],es
  41d004:	dec    esi
  41d005:	add    DWORD PTR [ebx+0x69],eax
  41d008:	mov    bl,0x3d
  41d00a:	les    edx,FWORD PTR [edi+eiz*4]
  41d00d:	rcr    DWORD PTR [ebx],cl
  41d00f:	inc    ebx
  41d010:	loope  0x41d03d
  41d012:	fwait
  41d013:	inc    edx
  41d014:	test   BYTE PTR [edx-0x80],cl
  41d017:	jle    0x41d052
  41d019:	call   0x6c73:0xb5ab
  41d01f:	jmp    0x8b3b10a4
  41d024:	lods   al,BYTE PTR ds:[esi]
  41d025:	in     al,0xe4
  41d027:	shl    BYTE PTR [ecx],cl
  41d029:	fs push ebp
  41d02b:	mov    ecx,0x305238ac
  41d030:	jne    0x41cfd6
  41d032:	push   esi
  41d033:	fisub  WORD PTR [edi+0x36159c91]
  41d039:	sahf   
  41d03a:	mov    ebx,0x7ced1eb0
  41d03f:	pop    ds
  41d040:	cmp    edi,esi
  41d042:	xor    ecx,eax
  41d044:	adc    eax,0x56bcb399
  41d049:	ficom  DWORD PTR [edx-0x46]
  41d04c:	xor    ebp,ebp
  41d04e:	fsubr  st,st(1)
  41d050:	mov    esp,0x6f956d1e
  41d055:	xor    bl,BYTE PTR [ebx]
  41d057:	and    DWORD PTR [ebp-0x3e],ebx
  41d05a:	cmp    eax,0x6059780e
  41d05f:	jg     0x41d081
  41d061:	in     al,dx
  41d062:	rcr    al,1
  41d064:	sub    al,0xc8
  41d066:	and    al,0xd8
  41d068:	cli    
  41d069:	jae    0x41d04a
  41d06b:	pop    esp
  41d06c:	rcl    dh,0x54
  41d06f:	mov    es,esp
  41d071:	lods   eax,DWORD PTR ds:[esi]
  41d072:	jno    0x41d008
  41d074:	sbb    cl,0x84
  41d077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d078:	push   cs
  41d079:	xchg   ebp,eax
  41d07a:	cli    
  41d07b:	fild   QWORD PTR [edi+0x46329429]
  41d081:	or     ebx,DWORD PTR [eax]
  41d083:	and    esi,DWORD PTR [edi+0x72]
  41d086:	pop    eax
  41d087:	shr    BYTE PTR [edx+0x33],cl
  41d08a:	pusha  
  41d08b:	mov    edi,0xcd78f0b8
  41d090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d091:	imul   eax,DWORD PTR [ecx+0x61cbfa5e],0x57fb4914
  41d09b:	fnstcw WORD PTR [ebx+0x20]
  41d09e:	adc    ch,BYTE PTR [edi]
  41d0a0:	add    ch,ah
  41d0a2:	sbb    DWORD PTR [edi],ecx
  41d0a4:	out    0xcb,eax
  41d0a6:	pop    ss
  41d0a7:	sbb    al,0x17
  41d0a9:	stos   DWORD PTR es:[edi],eax
  41d0aa:	js     0x41d082
  41d0ac:	fbld   TBYTE PTR [eax-0xb]
  41d0af:	scas   eax,DWORD PTR es:[edi]
  41d0b0:	jne    0x41d0b1
  41d0b2:	shl    edi,cl
  41d0b4:	(bad)  
  41d0b5:	lock (bad) 
  41d0b8:	push   eax
  41d0b9:	xchg   ecx,eax
  41d0ba:	fmul   DWORD PTR [edx]
  41d0bc:	pop    edi
  41d0bd:	test   DWORD PTR [eax],edi
  41d0bf:	push   ds
  41d0c0:	jo     0x41d0b3
  41d0c2:	jb     0x41d0f6
  41d0c4:	inc    ecx
  41d0c5:	int3   
  41d0c6:	and    edi,DWORD PTR [eax+eax*1-0x3]
  41d0ca:	sbb    ebx,0x23bfde4c
  41d0d0:	jbe    0x41d10c
  41d0d2:	inc    edx
  41d0d3:	sahf   
  41d0d4:	mov    dl,0x22
  41d0d6:	push   DWORD PTR [edx+0x471d425c]
  41d0dc:	fist   WORD PTR [eax+eiz*8]
  41d0df:	stos   BYTE PTR es:[edi],al
  41d0e0:	inc    edx
  41d0e1:	ret    
  41d0e2:	(bad)  
  41d0e3:	shl    BYTE PTR [esi],cl
  41d0e5:	xchg   ebp,eax
  41d0e6:	clc    
  41d0e7:	push   ebp
  41d0e8:	ds je  0x41d14e
  41d0eb:	dec    ecx
  41d0ec:	sub    dl,BYTE PTR [edx+0x67773fa6]
  41d0f2:	fbstp  TBYTE PTR [edi-0x40]
  41d0f5:	stc    
  41d0f6:	inc    ebp
  41d0f7:	mov    al,ds:0x753dd000
  41d0fc:	ja     0x41d14d
  41d0fe:	dec    eax
  41d0ff:	sub    ecx,DWORD PTR [ecx]
  41d101:	pop    eax
  41d102:	clc    
  41d103:	shr    ebx,cl
  41d105:	outs   dx,DWORD PTR ds:[esi]
  41d106:	push   esi
  41d107:	ds xor al,0x79
  41d10a:	xlat   BYTE PTR ds:[ebx]
  41d10b:	(bad)  ds:0xba9eb94f
  41d111:	mov    ebp,0x6ba352e9
  41d116:	push   ebx
  41d117:	pop    es
  41d118:	xchg   ecx,eax
  41d119:	dec    edx
  41d11a:	and    eax,0xfd5d1229
  41d11f:	mov    edi,DWORD PTR [eax+0x10b65b3d]
  41d125:	rol    BYTE PTR [ecx+0x25],cl
  41d128:	pusha  
  41d129:	out    dx,eax
  41d12a:	mul    bl
  41d12c:	sub    al,0xd7
  41d12e:	mov    esp,0xdde16e48
  41d133:	iret   
  41d134:	push   eax
  41d135:	jne    0x41d16f
  41d137:	or     eax,0xbfc0536f
  41d13c:	bound  esi,QWORD PTR [ecx-0x632ccd67]
  41d142:	jle    0x41d0ff
  41d144:	inc    edi
  41d145:	dec    eax
  41d146:	mov    ch,0x58
  41d148:	add    ebx,ebp
  41d14a:	sub    ch,BYTE PTR [ebp-0x47]
  41d14d:	pop    eax
  41d14e:	jle    0x41d164
  41d150:	mov    edx,0x5b996081
  41d155:	jns    0x41d1b9
  41d157:	lds    ecx,FWORD PTR [esi+0x5235ce40]
  41d15d:	jle    0x41d1b8
  41d15f:	stos   WORD PTR es:[edi],ax
  41d161:	in     eax,0xb9
  41d163:	xor    al,0x79
  41d165:	sbb    al,0x30
  41d167:	(bad)  
  41d168:	push   edi
  41d169:	dec    ebp
  41d16a:	xchg   esi,eax
  41d16b:	in     eax,0x55
  41d16d:	test   eax,0x67a54494
  41d172:	test   al,0x73
  41d174:	ja     0x41d1a1
  41d176:	and    ebx,eax
  41d178:	sub    dh,cl
  41d17a:	pop    es
  41d17b:	jle    0x41d1c3
  41d17d:	mov    dl,0x12
  41d17f:	faddp  st(2),st
  41d181:	outs   dx,BYTE PTR ds:[esi]
  41d182:	stos   DWORD PTR es:[edi],eax
  41d183:	pop    esp
  41d184:	xor    ebp,0xad93b061
  41d18a:	cmp    esi,DWORD PTR [ebp-0x7]
  41d18d:	cmp    eax,0x20141942
  41d192:	lock jle 0x41d1fa
  41d195:	add    ecx,DWORD PTR [esi]
  41d197:	add    dl,BYTE PTR [edi]
  41d199:	mov    ds:0x98fe6775,al
  41d19e:	lds    ebx,FWORD PTR ds:0xdfe42537
  41d1a4:	jle    0x41d145
  41d1a6:	sub    ebp,ebx
  41d1a8:	adc    edi,ecx
  41d1aa:	jo     0x41d18f
  41d1ac:	retf   0xd816
  41d1af:	(bad)  
  41d1b0:	or     bl,BYTE PTR [eax-0xb]
  41d1b3:	mov    ds:0xba03b7fc,eax
  41d1b8:	outs   dx,BYTE PTR ds:[esi]
  41d1b9:	out    0xc6,al
  41d1bb:	xchg   cl,dh
  41d1bd:	icebp  
  41d1be:	pop    es
  41d1bf:	sbb    dh,BYTE PTR [ebx-0x36]
  41d1c2:	xor    al,0x43
  41d1c4:	push   edi
  41d1c5:	loop   0x41d159
  41d1c7:	call   0x870232f0
  41d1cc:	(bad)  
  41d1cd:	(bad)  
  41d1cf:	shl    BYTE PTR [ecx],cl
  41d1d1:	mov    ds:0x1db8569c,eax
  41d1d6:	in     al,0x24
  41d1d8:	shl    ebp,cl
  41d1da:	sub    al,BYTE PTR [ebx-0x5fddec29]
  41d1e0:	dec    edi
  41d1e1:	loope  0x41d1e3
  41d1e3:	xchg   BYTE PTR [eax],dh
  41d1e5:	jmp    0x41d232
  41d1e7:	fisub  WORD PTR [edx-0x398e38f6]
  41d1ed:	xchg   DWORD PTR [edi],ebx
  41d1ef:	repz loop 0x41d1b4
  41d1f2:	(bad)  
  41d1f3:	daa    
  41d1f4:	sahf   
  41d1f5:	fwait
  41d1f6:	repnz sbb DWORD PTR [ecx+0x37],ecx
  41d1fa:	inc    esi
  41d1fb:	pop    ebp
  41d1fc:	jns    0x41d1a2
  41d1fe:	in     al,0x73
  41d200:	ds pop ss
  41d202:	add    DWORD PTR [ebp+0x77],eax
  41d205:	xor    al,0xaa
  41d207:	or     eax,0x3cade711
  41d20c:	aaa    
  41d20d:	xor    BYTE PTR [ecx],dl
  41d20f:	sbb    eax,0x7745008f
  41d214:	lds    eax,FWORD PTR [edi]
  41d216:	push   ecx
  41d217:	xchg   edi,eax
  41d218:	inc    esi
  41d219:	mov    esp,0x1bc2c386
  41d21e:	push   cs
  41d21f:	outs   dx,BYTE PTR ds:[esi]
  41d220:	enter  0x581e,0x2f
  41d224:	(bad)  
  41d225:	out    0xf,al
  41d227:	mov    ebp,0x4f80133c
  41d22c:	fbld   TBYTE PTR [edx]
  41d22e:	std    
  41d22f:	sbb    dh,BYTE PTR [ecx+edx*8-0x32b8321a]
  41d236:	xor    esp,ecx
  41d238:	pushw  cs
  41d23a:	ret    
  41d23b:	xchg   ebp,eax
  41d23c:	dec    edx
  41d23d:	dec    edi
  41d23e:	xchg   ecx,eax
  41d23f:	shr    BYTE PTR [ecx+ebp*2+0x59a22c7f],cl
  41d246:	lods   eax,DWORD PTR ds:[esi]
  41d247:	fisubr DWORD PTR [esi+ebx*1+0x4b83d8b]
  41d24e:	gs mov dl,0xab
  41d251:	add    bh,BYTE PTR [ecx+0x63]
  41d254:	xor    bh,BYTE PTR [esi]
  41d256:	mov    edx,0xccbb865e
  41d25b:	in     al,dx
  41d25c:	sbb    al,0xf1
  41d25e:	and    al,0x6d
  41d260:	dec    DWORD PTR [eax-0x296d8de7]
  41d266:	mov    DWORD PTR [edi-0x18],ebx
  41d269:	pop    esp
  41d26a:	mov    ecx,0x1b5a0712
  41d26f:	jmp    0x41d224
  41d271:	cld    
  41d272:	adc    eax,0x4e856f67
  41d277:	pop    es
  41d278:	rcl    BYTE PTR [esi+0x6c],cl
  41d27b:	daa    
  41d27c:	sub    DWORD PTR [edx],esp
  41d27e:	dec    edx
  41d27f:	sub    esp,DWORD PTR [eax-0x25c88c46]
  41d285:	jmp    0xcd99ca0c
  41d28a:	lahf   
  41d28b:	ds jnp 0x41d2f8
  41d28e:	inc    esp
  41d28f:	jle    0x41d23e
  41d291:	in     al,0x2
  41d293:	mov    esp,0x559b4398
  41d298:	out    0xb4,al
  41d29a:	lock or edi,DWORD PTR [ecx*1+0x18eacfcc]
  41d2a2:	in     al,dx
  41d2a3:	jne    0x41d25f
  41d2a5:	aas    
  41d2a6:	xchg   ebp,eax
  41d2a7:	loop   0x41d310
  41d2a9:	adc    bl,bl
  41d2ab:	dec    ebp
  41d2ac:	sbb    DWORD PTR [esp+edi*8],edi
  41d2af:	mov    dl,0xc2
  41d2b1:	push   0x95fe51a4
  41d2b6:	retf   
  41d2b7:	test   BYTE PTR [ebp+0x6a],0x56
  41d2bb:	sahf   
  41d2bc:	sub    DWORD PTR [edi+0x21],ecx
  41d2bf:	stos   BYTE PTR es:[edi],al
  41d2c0:	(bad)
  41d2c4:	lods   al,BYTE PTR ds:[esi]
  41d2c5:	xchg   edx,eax
  41d2c6:	inc    ecx
  41d2c7:	ror    DWORD PTR [edi],0x28
  41d2ca:	mov    dh,0x49
  41d2cc:	mov    esp,0x605bd917
  41d2d1:	mov    ds:0xd4fa1a38,eax
  41d2d6:	xchg   edi,eax
  41d2d7:	pop    ebp
  41d2d8:	xchg   ebx,eax
  41d2d9:	cmc    
  41d2da:	call   0xd4dd:0x64d99908
  41d2e1:	inc    ebp
  41d2e2:	fnstcw WORD PTR [edi-0x340be8bc]
  41d2e8:	adc    ebx,DWORD PTR [eax-0x559a450a]
  41d2ee:	sub    ah,BYTE PTR [ebx-0x627e12ce]
  41d2f4:	popf   
  41d2f5:	mov    bh,0x3d
  41d2f7:	mul    BYTE PTR [edi-0x61]
  41d2fa:	xor    ah,BYTE PTR [ebx]
  41d2fc:	popf   
  41d2fd:	jmp    0x774c4709
  41d302:	adc    bl,BYTE PTR [edx-0x7aaa76de]
  41d308:	js     0x41d30a
  41d30a:	jo     0x41d2b2
  41d30c:	icebp  
  41d30d:	mov    edx,DWORD PTR [ebp-0x74e46337]
  41d313:	enter  0xd6c2,0x17
  41d317:	xchg   edi,eax
  41d318:	pop    edi
  41d319:	cli    
  41d31a:	pop    edi
  41d31b:	stos   BYTE PTR es:[edi],al
  41d31c:	xor    al,0x5a
  41d31e:	mov    dh,0xfe
  41d320:	(bad)  
  41d322:	or     BYTE PTR [ebx],dl
  41d324:	retf   0x60e2
  41d327:	mov    ebp,0xcc935ab2
  41d32c:	mov    edi,0x2bcee8ee
  41d331:	add    DWORD PTR [ebx-0x455f1dc7],edx
  41d337:	mov    es,WORD PTR [eax]
  41d339:	cmp    al,0xf3
  41d33b:	mov    ecx,ebp
  41d33d:	cld    
  41d33e:	shl    ecx,cl
  41d340:	icebp  
  41d341:	push   ds
  41d342:	int    0xd2
  41d344:	(bad)  [edi]
  41d346:	and    eax,0x1180f979
  41d34b:	mov    ebp,DWORD PTR [eax]
  41d34d:	sbb    DWORD PTR [eax],0xffffffc1
  41d350:	xchg   ebx,eax
  41d351:	inc    edx
  41d352:	cld    
  41d353:	hlt    
  41d354:	cmp    eax,0x7679a744
  41d359:	ins    DWORD PTR es:[edi],dx
  41d35a:	mov    bl,0xc5
  41d35c:	inc    ebx
  41d35d:	cld    
  41d35e:	adc    eax,0xd0074398
  41d363:	(bad)  
  41d365:	xchg   ebp,eax
  41d366:	int3   
  41d367:	mov    edi,0xa0fa004
  41d36c:	xchg   esp,eax
  41d36d:	push   ebp
  41d36e:	retf   
  41d36f:	sbb    BYTE PTR [edi+0x2622f21e],bh
  41d375:	sub    eax,0x15245213
  41d37a:	cmp    DWORD PTR [esi],0xa4c12907
  41d380:	cmc    
  41d381:	mov    edi,0xb7078d3f
  41d387:	cmp    ebx,DWORD PTR [esi-0x4e2af05a]
  41d38d:	mov    dh,0x20
  41d38f:	pop    edx
  41d390:	sar    BYTE PTR [edx-0x2f5b8c52],1
  41d396:	jno    0x41d3e6
  41d398:	adc    DWORD PTR [esi-0x20],edi
  41d39b:	iret   
  41d39c:	xor    eax,0x28cd4698
  41d3a1:	and    DWORD PTR [esi-0x32],edi
  41d3a4:	popf   
  41d3a5:	push   ss
  41d3a6:	inc    edi
  41d3a7:	mov    al,0x65
  41d3a9:	in     al,dx
  41d3aa:	and    BYTE PTR [eax-0xf52f360],ch
  41d3b0:	nop
  41d3b1:	xchg   esp,eax
  41d3b2:	in     eax,0xda
  41d3b4:	pop    edx
  41d3b5:	(bad)  
  41d3b6:	sub    eax,0x2253f923
  41d3bb:	pop    esi
  41d3bc:	xor    DWORD PTR [edx],ebx
  41d3be:	sahf   
  41d3bf:	xchg   ecx,eax
  41d3c0:	imul   esi,esp,0x6eaf6062
  41d3c6:	ins    DWORD PTR es:[edi],dx
  41d3c7:	xchg   esi,eax
  41d3c8:	mov    esp,0x7c2c2d9e
  41d3cd:	retf   0xccb
  41d3d0:	inc    edi
  41d3d1:	sbb    eax,edx
  41d3d3:	inc    esi
  41d3d4:	mov    eax,ds:0xabe4b6dd
  41d3d9:	xchg   edi,eax
  41d3da:	popf   
  41d3db:	mov    ds:0x6cba8650,eax
  41d3e0:	into   
  41d3e1:	idiv   DWORD PTR [edx+0x6d]
  41d3e4:	sbb    al,0xcf
  41d3e6:	out    0xbd,al
  41d3e8:	imul   edi,DWORD PTR [edi+0x9b86f00],0xacd1c77e
  41d3f2:	fs sbb eax,0x1876f83e
  41d3f8:	fld    DWORD PTR ds:0xf01e
  41d3fd:	mov    edi,0xbf95ba60
  41d402:	test   al,0x34
  41d404:	xor    DWORD PTR [edi],ebp
  41d406:	sar    DWORD PTR [ecx+0xd30a767],cl
  41d40c:	mov    ds,ecx
  41d40e:	mov    esi,DWORD PTR [edi-0x74de40e4]
  41d414:	shl    DWORD PTR [esp+ecx*8+0x5f],cl
  41d418:	lahf   
  41d419:	fcomp  QWORD PTR [edi-0x15]
  41d41c:	hlt    
  41d41d:	mov    WORD PTR [edx-0x205c64b3],ds
  41d423:	cld    
  41d424:	cmp    eax,0xb4e72867
  41d429:	mov    ah,BYTE PTR ds:0x792af41
  41d42f:	stos   DWORD PTR es:[edi],eax
  41d430:	mov    al,0x9a
  41d432:	sbb    eax,0x657c2e74
  41d437:	jnp    0x41d45d
  41d439:	sbb    eax,0xf035ccf7
  41d43e:	xor    ebp,ebp
  41d440:	cmp    cl,BYTE PTR [ebp+0x44]
  41d443:	shl    bl,1
  41d445:	adc    ah,BYTE PTR [eax+0x5c4041fa]
  41d44b:	pcmpeqb mm6,mm2
  41d44e:	adc    bh,ch
  41d450:	mov    al,0x45
  41d452:	lea    edx,[ecx]
  41d454:	int    0x66
  41d456:	addr16 push eax
  41d458:	call   0x5c63:0x3cef727
  41d45f:	fstp   DWORD PTR [esi+0x23bb5027]
  41d465:	loope  0x41d400
  41d467:	dec    eax
  41d468:	xor    DWORD PTR [ebp+0x4c],edi
  41d46b:	cld    
  41d46c:	pop    ds
  41d46d:	cdq    
  41d46e:	mov    DWORD PTR [esi+0x73],edx
  41d471:	stc    
  41d472:	mov    bh,0xcf
  41d474:	pop    es
  41d475:	aam    0x1c
  41d477:	mov    ds:0xacca6a09,al
  41d47c:	mov    dl,0x46
  41d47e:	dec    eax
  41d47f:	push   ds
  41d480:	jmp    0x41d402
  41d482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d483:	mov    al,ds:0x1ed0cb1
  41d488:	push   0xffffffe0
  41d48a:	mov    ebx,0x79725169
  41d48f:	xlat   BYTE PTR ds:[ebx]
  41d490:	push   esi
  41d491:	addr16 lahf 
  41d493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d494:	xchg   ebx,eax
  41d495:	xor    BYTE PTR [ebp-0x52],ch
  41d498:	mov    bl,0x43
  41d49a:	dec    edx
  41d49b:	imul   esp,DWORD PTR [ebx],0x25
  41d49e:	cmp    al,bh
  41d4a0:	call   0x7d9:0x661c4b6f
  41d4a7:	lods   eax,DWORD PTR ds:[esi]
  41d4a8:	cli    
  41d4a9:	loop   0x41d46e
  41d4ab:	test   BYTE PTR [ebx],0x96
  41d4ae:	inc    ecx
  41d4af:	cmc    
  41d4b0:	aas    
  41d4b1:	pop    esp
  41d4b2:	inc    ebx
  41d4b3:	(bad)  
  41d4b4:	fdiv   DWORD PTR [edi-0x9094f11]
  41d4ba:	push   ds
  41d4bb:	sahf   
  41d4bc:	cmp    ebx,edi
  41d4be:	inc    edx
  41d4bf:	add    BYTE PTR [edi+0x66f0c9fd],bh
  41d4c5:	in     eax,0x9e
  41d4c7:	aaa    
  41d4c8:	push   esp
  41d4c9:	retf   0xe16d
  41d4cc:	xlat   BYTE PTR ds:[ebx]
  41d4cd:	leave  
  41d4ce:	xor    eax,0xda067a2f
  41d4d3:	xchg   esp,eax
  41d4d4:	mov    ebp,0xdf263da5
  41d4d9:	push   0x1a14c19f
  41d4de:	mov    ds:0x24fb536c,al
  41d4e3:	inc    ecx
  41d4e4:	xchg   edx,eax
  41d4e5:	jl     0x41d490
  41d4e7:	cmp    DWORD PTR [ebx],0xfffffff4
  41d4ea:	adc    DWORD PTR cs:[esi],ecx
  41d4ed:	pop    esi
  41d4ee:	cmovns edi,DWORD PTR [esi+eax*4]
  41d4f2:	out    0xc4,al
  41d4f4:	fcom   QWORD PTR [edx]
  41d4f6:	sbb    eax,0xa687fe14
  41d4fb:	stc    
  41d4fc:	sar    DWORD PTR [ebx-0x1bb51193],cl
  41d502:	push   fs
  41d504:	cmp    BYTE PTR [eax],ch
  41d506:	out    0x55,al
  41d508:	mov    dl,0x18
  41d50a:	ss push eax
  41d50c:	xor    BYTE PTR [edx+0x3c62c66f],0x8a
  41d513:	stc    
  41d514:	cmp    BYTE PTR [edx],dl
  41d516:	bound  esp,QWORD PTR [ebx-0x402b1315]
  41d51c:	inc    edi
  41d51d:	dec    eax
  41d51e:	xor    DWORD PTR [esp+edi*4-0x1e07605b],ecx
  41d525:	or     ebp,DWORD PTR [ecx+0x46b95c8f]
  41d52b:	imul   esi,DWORD PTR [esi],0x5d
  41d52e:	push   0x2b
  41d530:	leave  
  41d531:	cld    
  41d532:	mov    dh,0xd5
  41d534:	and    al,0x1b
  41d536:	mov    ds,WORD PTR cs:[esi]
  41d539:	sbb    esi,eax
  41d53b:	out    0xe6,al
  41d53d:	mov    ebx,0x96cfc73b
  41d542:	pop    ecx
  41d543:	push   es
  41d544:	adc    al,0x7e
  41d546:	stc    
  41d547:	loopne 0x41d519
  41d549:	stos   BYTE PTR es:[edi],al
  41d54a:	std    
  41d54b:	(bad)  
  41d54d:	jo     0x41d59e
  41d54f:	out    dx,eax
  41d550:	and    dl,0x75
  41d553:	enter  0x3730,0xc3
  41d557:	or     dl,bh
  41d559:	leave  
  41d55a:	stc    
  41d55b:	shr    DWORD PTR [esi],cl
  41d55d:	and    eax,0x48f0d29d
  41d562:	xor    DWORD PTR [edx-0x67200d66],ebp
  41d568:	fmul   st,st(0)
  41d56a:	mov    bl,0xec
  41d56c:	sbb    dh,cl
  41d56e:	cmp    eax,0xa4140eae
  41d573:	iret   
  41d574:	xchg   esi,eax
  41d575:	mov    ch,BYTE PTR [esi+0x24]
  41d578:	jecxz  0x41d538
  41d57a:	gs xchg ebp,eax
  41d57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57d:	sub    eax,0x9096f2ce
  41d582:	sbb    ecx,DWORD PTR [ecx-0x6ccada6]
  41d588:	fnsave [edi-0x25]
  41d58b:	jge    0x41d564
  41d58d:	add    BYTE PTR [esi],bl
  41d58f:	or     BYTE PTR [ecx+0x3e],0xbc
  41d593:	aas    
  41d594:	out    dx,al
  41d595:	adc    DWORD PTR [eax+0xf],0x4c785dd7
  41d59c:	xchg   edi,eax
  41d59d:	push   esp
  41d59e:	dec    ebp
  41d59f:	adc    ebx,DWORD PTR [edi-0x47ce37c9]
  41d5a5:	sub    al,0x12
  41d5a7:	out    0x8a,eax
  41d5a9:	cdq    
  41d5aa:	jno    0x41d610
  41d5ac:	jmp    0x2aa9:0xc9e2c266
  41d5b3:	pop    es
  41d5b4:	jge    0x41d620
  41d5b6:	rcr    DWORD PTR [edi+0x10],1
  41d5b9:	and    BYTE PTR [edx],0x64
  41d5bc:	dec    esp
  41d5bd:	add    ch,bl
  41d5bf:	or     al,0x5d
  41d5c1:	stos   BYTE PTR es:[edi],al
  41d5c2:	jno    0x41d56a
  41d5c4:	std    
  41d5c5:	test   eax,0xba435d37
  41d5ca:	stos   BYTE PTR es:[edi],al
  41d5cb:	or     bl,BYTE PTR [esi-0x28e1afbd]
  41d5d1:	push   ecx
  41d5d2:	dec    ecx
  41d5d3:	inc    edx
  41d5d4:	push   esp
  41d5d5:	icebp  
  41d5d6:	rcl    BYTE PTR [edx+0x3d],0x3f
  41d5da:	les    ebp,FWORD PTR [edx+0x3d]
  41d5dd:	sub    DWORD PTR [esi+eiz*4-0x77],edx
  41d5e1:	jne    0x41d64d
  41d5e3:	or     BYTE PTR [ecx+ecx*4+0x5bf99580],ah
  41d5ea:	bound  edi,QWORD PTR [edi+0x2b37b35]
  41d5f0:	mov    DWORD PTR [ebx],edi
  41d5f2:	push   ebp
  41d5f3:	mov    al,ds:0x66c93877
  41d5f8:	jns    0x41d5d0
  41d5fa:	seto   BYTE PTR [ebx+0x6856adea]
  41d601:	in     eax,dx
  41d602:	das    
  41d603:	jns    0x41d63d
  41d605:	in     eax,dx
  41d606:	sub    DWORD PTR [edi+0x199a7a07],edi
  41d60c:	in     al,dx
  41d60d:	add    eax,0x7420d883
  41d612:	pushf  
  41d613:	push   esp
  41d614:	xor    eax,0x7881ebbe
  41d619:	popf   
  41d61a:	xchg   esi,eax
  41d61b:	mov    ds:0x1fcd42ea,al
  41d620:	cmp    ebx,DWORD PTR [ecx+edi*2+0x40e18267]
  41d627:	xchg   ebx,eax
  41d628:	mov    dl,0xee
  41d62a:	imul   esp,DWORD PTR [ecx-0x5f],0xfffffffa
  41d62e:	inc    bl
  41d630:	or     al,0x73
  41d632:	icebp  
  41d633:	sub    cl,BYTE PTR [edi]
  41d635:	mov    cl,0xf8
  41d637:	in     eax,0x5a
  41d639:	cmp    al,0x23
  41d63b:	fdiv   QWORD PTR [esi]
  41d63d:	jg     0x41d69c
  41d63f:	enter  0xd039,0x85
  41d643:	push   ss
  41d644:	pop    ss
  41d645:	push   ebx
  41d646:	pop    ebx
  41d647:	xchg   ebx,eax
  41d648:	sub    al,BYTE PTR [edi]
  41d64a:	pop    esp
  41d64b:	xor    al,BYTE PTR [edi*4-0x3adff9cf]
  41d652:	xlat   BYTE PTR ds:[ebx]
  41d653:	mov    ch,0xa7
  41d655:	ins    DWORD PTR es:[edi],dx
  41d656:	int    0x74
  41d658:	xchg   BYTE PTR [eax-0x61],dl
  41d65b:	fs jmp 0x41d68d
  41d65e:	or     eax,0xef81b18b
  41d663:	cmp    ebp,0x67
  41d666:	push   esi
  41d667:	jmp    0x41d60b
  41d669:	push   es
  41d66a:	xor    al,0x52
  41d66c:	in     al,0x1f
  41d66e:	push   edx
  41d66f:	mov    bl,0x31
  41d671:	pop    ebx
  41d672:	clc    
  41d673:	inc    edx
  41d674:	test   eax,0x48294a1e
  41d679:	sbb    DWORD PTR [edi-0x4ce2a6ef],ecx
  41d67f:	jo     0x41d6ea
  41d681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d682:	mov    cl,0xae
  41d684:	cmp    DWORD PTR [edi-0xb],esi
  41d687:	and    BYTE PTR [eax],ah
  41d689:	int    0xaf
  41d68b:	mov    edi,0x7120ed6
  41d690:	ret    0x5561
  41d693:	call   0xeaf64b89
  41d698:	lods   al,BYTE PTR ds:[esi]
  41d699:	or     esp,DWORD PTR ds:0xbef1c167
  41d69f:	int3   
  41d6a0:	jbe    0x41d687
  41d6a2:	es and eax,0xfb92753
  41d6a8:	sbb    ah,ch
  41d6aa:	stos   BYTE PTR es:[edi],al
  41d6ab:	sbb    eax,0x5142b954
  41d6b0:	jmp    0x411c:0xc2e028d1
  41d6b7:	push   0x4f
  41d6b9:	mov    dh,0x3c
  41d6bb:	int3   
  41d6bc:	loope  0x41d67b
  41d6be:	and    BYTE PTR [edi+0x1f],al
  41d6c1:	cwde   
  41d6c2:	rcr    BYTE PTR [edi+0x15],0xec
  41d6c6:	xchg   DWORD PTR [esp+ebp*8+0x79],edi
  41d6ca:	mov    al,0x7d
  41d6cc:	mov    cl,BYTE PTR [edx-0x24]
  41d6cf:	stc    
  41d6d0:	jnp    0xa94d227a
  41d6d6:	mov    ds:0xf978c1e3,eax
  41d6db:	push   ds
  41d6dc:	das    
  41d6dd:	in     eax,0xac
  41d6df:	or     eax,0x5d0212b
  41d6e4:	mov    ecx,0x5ec9a3e1
  41d6e9:	ins    DWORD PTR es:[edi],dx
  41d6ea:	cmp    al,0x2f
  41d6ec:	mov    ?,ebp
  41d6ee:	xlat   BYTE PTR ds:[ebx]
  41d6ef:	loop   0x41d6b7
  41d6f1:	pop    edx
  41d6f2:	sbb    BYTE PTR [edx],0xe8
  41d6f5:	xchg   DWORD PTR ds:0x56183ca2,ebx
  41d6fb:	rcl    dh,0xc0
  41d6fe:	mov    al,ds:0xada47e85
  41d703:	jbe    0x41d707
  41d705:	add    eax,0x6e304d75
  41d70a:	sub    ebx,DWORD PTR [eax+0x3fd3923b]
  41d710:	or     DWORD PTR [edx+0x60edc5b4],esi
  41d716:	shl    DWORD PTR [ebp-0x4568282f],1
  41d71c:	lods   al,BYTE PTR ds:[esi]
  41d71d:	outs   dx,BYTE PTR ds:[esi]
  41d71e:	adc    eax,0x3f1531fa
  41d723:	ja     0x41d6b8
  41d725:	sbb    BYTE PTR [ebp+0x44df78d3],ch
  41d72b:	aaa    
  41d72c:	mov    ah,0xae
  41d72e:	sub    eax,0x559d9473
  41d733:	push   eax
  41d734:	sbb    ah,BYTE PTR [eax]
  41d736:	mov    ecx,0x59821802
  41d73b:	jnp    0x41d74f
  41d73d:	sahf   
  41d73e:	mov    esp,0x8178bdc
  41d743:	out    0x43,al
  41d745:	loop   0x41d75d
  41d747:	mov    bl,0xa4
  41d749:	rol    ecx,1
  41d74b:	add    DWORD PTR [edi-0x17],edi
  41d74e:	cmc    
  41d74f:	lea    edi,[ebp+0x2b3260d9]
  41d755:	push   ds
  41d756:	lods   eax,DWORD PTR ds:[esi]
  41d757:	adc    ebx,esp
  41d759:	jbe    0x41d744
  41d75b:	pop    es
  41d75c:	dec    edx
  41d75d:	and    DWORD PTR [eax-0x2c],esi
  41d760:	xchg   ebx,eax
  41d761:	nop
  41d762:	ss mov al,0x4
  41d765:	sub    al,0x2a
  41d767:	jl     0x41d7dd
  41d769:	and    eax,0x87642792
  41d76e:	sub    al,0xbd
  41d770:	cmp    dh,0x5e
  41d773:	icebp  
  41d774:	sti    
  41d775:	sub    edx,0xffffffc3
  41d778:	add    DWORD PTR [edi-0x68],eax
  41d77b:	retf   
  41d77c:	sbb    DWORD PTR [eax-0x15],ebp
  41d77f:	outs   dx,BYTE PTR ds:[esi]
  41d780:	mov    DWORD PTR [edi+0x6c],ebp
  41d783:	call   0xa25d89e2
  41d788:	push   edx
  41d789:	sub    DWORD PTR ds:0x20a412d1,esi
  41d78f:	dec    esi
  41d790:	adc    DWORD PTR [edx],ebp
  41d792:	test   BYTE PTR [ebp+0x51],bl
  41d795:	push   cs
  41d796:	fwait
  41d797:	or     al,0x75
  41d799:	pop    ds
  41d79a:	fs add esp,0x63
  41d79e:	pop    ebx
  41d79f:	(bad)  
  41d7a0:	sbb    BYTE PTR [ebx+0x26],bl
  41d7a3:	in     al,0x7f
  41d7a5:	sbb    ah,bl
  41d7a7:	inc    edx
  41d7a8:	adc    al,BYTE PTR [edx-0x9ba0177]
  41d7ae:	mov    eax,0xec1aaf8c
  41d7b3:	add    eax,DWORD PTR [ebx-0x14]
  41d7b6:	sbb    ebx,DWORD PTR [esi-0x710eefb]
  41d7bc:	jbe    0x41d78b
  41d7be:	stos   BYTE PTR es:[edi],al
  41d7bf:	shl    DWORD PTR [esi+0x290b0a73],cl
  41d7c5:	lods   al,BYTE PTR ds:[esi]
  41d7c6:	xor    edx,DWORD PTR [edx]
  41d7c8:	in     eax,0x6f
  41d7ca:	rol    DWORD PTR [eax],1
  41d7cc:	pushw  ds
  41d7ce:	fcom   QWORD PTR [ebp+0x5a]
  41d7d1:	jb     0x41d7f2
  41d7d3:	push   eax
  41d7d4:	in     eax,dx
  41d7d5:	ds int 0xe0
  41d7d8:	rcl    BYTE PTR [eax],cl
  41d7da:	or     eax,0x508f104d
  41d7df:	adc    DWORD PTR [eax],0xffffffd2
  41d7e2:	shl    DWORD PTR [ebx+0x52],cl
  41d7e5:	cmp    ch,al
  41d7e7:	add    ebp,DWORD PTR [ebx+eax*8+0x428c5225]
  41d7ee:	inc    esp
  41d7ef:	addr16 push ebx
  41d7f1:	pushf  
  41d7f2:	jb     0x41d790
  41d7f4:	rcr    DWORD PTR [ecx+0x4d],cl
  41d7f7:	mov    esp,0x136f0862
  41d7fc:	pop    ss
  41d7fd:	mov    ch,bh
  41d7ff:	cmp    BYTE PTR [esi+0x3deada4f],ah
  41d805:	popa   
  41d806:	repz and eax,0xf774713a
  41d80c:	je     0x41d7b4
  41d80e:	inc    edi
  41d80f:	std    
  41d810:	jb     0x41d7fb
  41d812:	and    DWORD PTR ds:0xcdc1342,ecx
  41d818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d819:	pop    ecx
  41d81a:	pop    esp
  41d81b:	ins    BYTE PTR es:[edi],dx
  41d81c:	adc    ecx,DWORD PTR [edi-0xa4d3041]
  41d822:	in     eax,0x61
  41d824:	jo     0x41d7ad
  41d826:	inc    esp
  41d827:	push   edi
  41d828:	inc    edx
  41d829:	pop    ecx
  41d82a:	pop    ecx
  41d82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82c:	or     DWORD PTR [eax],ebp
  41d82e:	xor    al,cl
  41d830:	loopne 0x41d820
  41d832:	push   edx
  41d833:	xchg   di,ax
  41d835:	add    eax,0xd025bcd1
  41d83a:	das    
  41d83b:	stos   DWORD PTR es:[edi],eax
  41d83c:	add    edx,ebx
  41d83e:	dec    ebp
  41d83f:	xchg   ebx,eax
  41d840:	call   0x6ae05445
  41d845:	add    esp,DWORD PTR [ebx+ebp*2+0x75]
  41d849:	aas    
  41d84a:	lahf   
  41d84b:	in     al,dx
  41d84c:	mov    edx,0xf2258449
  41d851:	dec    ebx
  41d852:	cmp    eax,0xbac68e76
  41d857:	xchg   DWORD PTR ds:[edi+0x5a],ecx
  41d85b:	stc    
  41d85c:	pop    ds
  41d85d:	jne    0x41d845
  41d85f:	jecxz  0x41d888
  41d861:	test   DWORD PTR [eax+eiz*4-0x24],edi
  41d865:	js     0x41d8a4
  41d867:	mov    bh,0x3f
  41d869:	sbb    bl,BYTE PTR [esi]
  41d86b:	(bad)  
  41d86c:	xchg   esi,eax
  41d86d:	mov    edi,0x539b5173
  41d872:	inc    esi
  41d873:	jne    0x41d8f4
  41d875:	jne    0x41d877
  41d877:	xchg   ebp,eax
  41d878:	adc    eax,0x910ed498
  41d87d:	jb     0x41d853
  41d87f:	xor    eax,0x560a569e
  41d884:	xor    eax,0xc5d54a90
  41d889:	ins    DWORD PTR es:[edi],dx
  41d88a:	add    BYTE PTR [ecx],0x81
  41d88d:	push   esp
  41d88e:	addr16 sti 
  41d890:	scas   al,BYTE PTR es:[edi]
  41d891:	iret   
  41d892:	leave  
  41d893:	sbb    eax,0x18023a1b
  41d898:	(bad)  
  41d899:	sub    ch,ch
  41d89b:	(bad)  
  41d89c:	mov    bl,dl
  41d89e:	jno    0x41d821
  41d8a0:	cmp    al,0xd0
  41d8a2:	inc    eax
  41d8a3:	push   edx
  41d8a4:	loopne 0x41d8f3
  41d8a6:	cmp    eax,0x9bd5fee7
  41d8ab:	mov    ebp,0xc87f20ee
  41d8b0:	and    al,0xb4
  41d8b2:	aaa    
  41d8b3:	test   DWORD PTR ds:0xe54dac8a,esp
  41d8b9:	aam    0xfe
  41d8bb:	dec    esi
  41d8bc:	loopne 0x41d83f
  41d8be:	and    DWORD PTR [ecx+0x6b55444f],ebx
  41d8c4:	outs   dx,BYTE PTR ds:[esi]
  41d8c5:	and    al,0xce
  41d8c7:	test   eax,0x80cb04e2
  41d8cc:	inc    eax
  41d8cd:	icebp  
  41d8ce:	test   eax,0xf00c571a
  41d8d3:	push   ss
  41d8d4:	dec    ebx
  41d8d5:	mov    eax,ds:0xb87c59fa
  41d8da:	xlat   BYTE PTR ds:[ebx]
  41d8db:	(bad)  
  41d8de:	dec    eax
  41d8df:	std    
  41d8e0:	js     0x41d93e
  41d8e2:	push   ds
  41d8e3:	mov    ds:0xeb4cdd92,eax
  41d8e8:	stc    
  41d8e9:	adc    eax,0x275dfc0a
  41d8ee:	fcomp  DWORD PTR [ecx]
  41d8f0:	int3   
  41d8f1:	add    DWORD PTR [edi+0x4a053b68],esi
  41d8f7:	cs inc ecx
  41d8f9:	sub    ch,0x5b
  41d8fc:	jnp    0x41d91a
  41d8fe:	mov    ah,BYTE PTR [ecx+0xb067a6c]
  41d904:	xor    DWORD PTR [eax+0x76],esp
  41d907:	cmp    DWORD PTR [edx],0xfffffffc
  41d90a:	jg     0x41d93b
  41d90c:	and    ecx,DWORD PTR [ecx-0x7c]
  41d90f:	sbb    cl,al
  41d911:	nop
  41d912:	mov    ecx,0x81918948
  41d917:	xchg   edi,eax
  41d918:	test   DWORD PTR [edx+0x58],0x1a09fe50
  41d91f:	out    dx,eax
  41d920:	test   al,0x46
  41d922:	cmp    al,0x30
  41d924:	les    ecx,FWORD PTR [eax]
  41d926:	inc    ecx
  41d927:	cmp    dl,0x3f
  41d92a:	test   ebp,0x82dcd7ae
  41d930:	(bad)  
  41d931:	out    dx,al
  41d932:	xchg   esp,eax
  41d933:	cmp    ebp,ebp
  41d935:	(bad)  
  41d936:	cli    
  41d937:	aad    0x21
  41d939:	dec    ecx
  41d93a:	(bad)  
  41d93c:	out    0x6d,eax
  41d93e:	outs   dx,BYTE PTR ds:[esi]
  41d93f:	int3   
  41d940:	and    DWORD PTR [ebx-0xcbf7d2a],esi
  41d946:	and    dl,BYTE PTR [edx]
  41d948:	sub    al,BYTE PTR [edx+0x1b]
  41d94b:	mov    eax,0xcce35775
  41d950:	test   bl,cl
  41d952:	or     eax,DWORD PTR [eax]
  41d954:	js     0x41d94f
  41d956:	xor    bh,BYTE PTR [esi-0x5f]
  41d959:	mov    ah,0x9a
  41d95b:	and    al,0x70
  41d95d:	cld    
  41d95e:	sub    eax,0x35099be6
  41d963:	pushf  
  41d964:	dec    edi
  41d965:	int    0xed
  41d967:	je     0x41d93d
  41d969:	mov    al,ds:0x678ca91
  41d96e:	fs icebp 
  41d970:	retf   
  41d971:	pusha  
  41d972:	out    dx,al
  41d973:	add    DWORD PTR ds:0x79faae74,ebx
  41d979:	jnp    0x41d9c9
  41d97b:	fistp  WORD PTR [esi]
  41d97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97e:	dec    ecx
  41d97f:	and    eax,0x9d24c0c4
  41d984:	je     0x41d9c5
  41d986:	pop    ebx
  41d987:	mov    edx,0x29c40f45
  41d98c:	mov    WORD PTR [eax],ds
  41d98e:	setns  cl
  41d991:	inc    edx
  41d992:	dec    ecx
  41d993:	jge    0x41d9ab
  41d995:	adc    BYTE PTR [eax-0x29],ch
  41d998:	or     eax,0xb9042a08
  41d99d:	aam    0xd9
  41d99f:	popf   
  41d9a0:	aas    
  41d9a1:	xchg   ecx,eax
  41d9a2:	mov    dh,0xee
  41d9a4:	ret    
  41d9a5:	or     al,0x97
  41d9a7:	aam    0xa
  41d9a9:	arpl   di,ax
  41d9ab:	jp     0x41d9c1
  41d9ad:	inc    edx
  41d9ae:	cmp    ebp,DWORD PTR [edx-0x3]
  41d9b1:	loopne 0x41d9f6
  41d9b3:	sbb    DWORD PTR [edx-0x37],esi
  41d9b6:	jge    0x41d960
  41d9b8:	add    ebp,DWORD PTR [bp+si-0x73]
  41d9bc:	add    bh,BYTE PTR [eax-0x6116e796]
  41d9c2:	mov    esp,0xbf27bfb0
  41d9c7:	cmp    ah,BYTE PTR [ecx+0x58dbf56e]
  41d9cd:	push   edi
  41d9ce:	mov    esp,0xe4a05ec9
  41d9d3:	or     al,0xb0
  41d9d5:	xor    eax,0x90503298
  41d9da:	lea    edi,[esi+ecx*2+0x10]
  41d9de:	or     BYTE PTR [esi+0x6c],0xe1
  41d9e2:	mov    ecx,es
  41d9e4:	fld    DWORD PTR [eax-0x80]
  41d9e7:	fld    DWORD PTR [eax-0x37bf5708]
  41d9ed:	loopne 0x41d9d9
  41d9ef:	and    BYTE PTR [edi-0x47],al
  41d9f2:	or     bl,BYTE PTR [edx+0x2fee0643]
  41d9f8:	mov    edi,0xb4dae786
  41d9fd:	inc    ebp
  41d9fe:	mov    bl,0x3a
  41da00:	std    
  41da01:	into   
  41da02:	sbb    BYTE PTR [esi-0x18],cl
  41da05:	push   0x5ab3b6e9
  41da0a:	jbe    0x41da19
  41da0c:	clc    
  41da0d:	xlat   BYTE PTR ds:[ebx]
  41da0e:	mov    ebx,0xe8d44599
  41da13:	stos   DWORD PTR es:[edi],eax
  41da14:	lods   al,BYTE PTR ds:[esi]
  41da15:	sbb    DWORD PTR [eax*8+0x732a8ca6],eax
  41da1c:	loopne 0x41d9f6
  41da1e:	or     BYTE PTR [ecx-0x76],cl
  41da21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da22:	pop    ss
  41da23:	aam    0x6b
  41da25:	out    dx,eax
  41da26:	out    0xee,eax
  41da28:	(bad)  
  41da29:	and    BYTE PTR [edx],dh
  41da2b:	xchg   esi,eax
  41da2c:	jl     0x41daa9
  41da2e:	or     DWORD PTR [esi-0x1c5580de],0x5b
  41da35:	jmp    0x4cbc:0x2df6a306
  41da3c:	fcomip st,st(3)
  41da3e:	dec    esp
  41da3f:	jno    0x41da8f
  41da41:	adc    eax,eax
  41da43:	repnz inc edx
  41da45:	xchg   edx,eax
  41da46:	jle    0x41dab5
  41da48:	das    
  41da49:	cmp    bh,BYTE PTR [edi+0x4451d633]
  41da4f:	or     esi,DWORD PTR [bp+di+0xcc4]
  41da54:	lahf   
  41da55:	into   
  41da56:	shl    BYTE PTR [ebp-0x1a],0x51
  41da5a:	cwde   
  41da5b:	inc    eax
  41da5c:	ret    0x5a76
  41da5f:	xor    edx,DWORD PTR [eax-0x30]
  41da62:	cli    
  41da63:	xchg   ebx,eax
  41da64:	(bad)  
  41da65:	enter  0x31ad,0x1b
  41da69:	mov    BYTE PTR [esi-0x10],dl
  41da6c:	push   ecx
  41da6d:	dec    ecx
  41da6e:	enter  0x7492,0x44
  41da72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da73:	rol    DWORD PTR [edi+ecx*4],0x31
  41da77:	(bad)  
  41da78:	dec    ebp
  41da79:	push   ebp
  41da7a:	xchg   ebx,eax
  41da7b:	xor    al,0x14
  41da7d:	push   eax
  41da7e:	outs   dx,DWORD PTR ds:[esi]
  41da7f:	adc    al,dl
  41da81:	and    BYTE PTR [esp+eiz*8-0x6ebaa42d],dl
  41da88:	shl    BYTE PTR [ecx],0xde
  41da8b:	xor    BYTE PTR [esi+0x38],bh
  41da8e:	das    
  41da8f:	lods   eax,DWORD PTR ds:[esi]
  41da90:	outs   dx,BYTE PTR ds:[esi]
  41da91:	ss push ebx
  41da93:	push   ss
  41da94:	mov    eax,0xde3e0a2f
  41da99:	mov    ah,0xbc
  41da9b:	bnd jb 0x41da8e
  41da9e:	fst    QWORD PTR [esi-0x2a36fad0]
  41daa4:	sbb    BYTE PTR [edx+eiz*2+0x43f66d0a],0x8c
  41daac:	inc    edi
  41daad:	sub    BYTE PTR [esi-0x5d],bl
  41dab0:	push   esp
  41dab1:	pushf  
  41dab2:	fs in  eax,dx
  41dab4:	bound  eax,QWORD PTR [ecx]
  41dab6:	pop    esp
  41dab7:	aam    0x2e
  41dab9:	int    0xb9
  41dabb:	pop    esi
  41dabc:	arpl   WORD PTR [ecx+0x69],di
  41dabf:	mov    ah,BYTE PTR [ebx-0x4e]
  41dac2:	pop    ds
  41dac3:	mov    ch,0x1f
  41dac5:	repz imul edi,DWORD PTR [eax-0x69992dd6],0x5201d90e
  41dad0:	lods   al,BYTE PTR ds:[esi]
  41dad1:	adc    edx,esp
  41dad3:	mov    ah,0x32
  41dad5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41dad7:	adc    eax,0x84fd210c
  41dadc:	hlt    
  41dadd:	bound  edi,QWORD PTR [esi+0x7c9a3e5c]
  41dae3:	mov    dh,0xb6
  41dae5:	and    bh,BYTE PTR [edx+ebp*1+0x54d0d163]
  41daec:	out    0xe2,eax
  41daee:	leave  
  41daef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf0:	jmp    DWORD PTR [edi+0x67]
  41daf3:	pusha  
  41daf4:	jb     0x41da7a
  41daf6:	jle    0x41db11
  41daf8:	scas   eax,DWORD PTR es:[edi]
  41daf9:	das    
  41dafa:	or     eax,0x56ec2cef
  41daff:	cwde   
  41db00:	aad    0x80
  41db02:	out    0x1a,al
  41db04:	and    BYTE PTR [edx+0x5b],dl
  41db07:	xor    al,0x9
  41db09:	cmp    cl,BYTE PTR [eax]
  41db0b:	(bad)  
  41db0c:	jp     0x41dae5
  41db0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db0f:	or     ebp,DWORD PTR [edx+0x53]
  41db12:	lods   al,BYTE PTR ds:[esi]
  41db13:	test   edx,esi
  41db15:	cmp    ecx,DWORD PTR [ebx-0x32381d11]
  41db1b:	sub    al,0x29
  41db1d:	sub    bl,BYTE PTR [edx+0x72]
  41db20:	jmp    0x9cae:0x3ea45e49
  41db27:	pop    ecx
  41db28:	(bad)  
  41db29:	mov    bh,0x19
  41db2b:	or     BYTE PTR [ebx+0x3fc04b26],cl
  41db31:	adc    BYTE PTR [ebx],bl
  41db33:	add    al,0x92
  41db35:	inc    ecx
  41db36:	push   edi
  41db37:	gs lahf 
  41db39:	adc    eax,0x95d79269
  41db3e:	pushf  
  41db3f:	stos   BYTE PTR es:[edi],al
  41db40:	inc    ebp
  41db41:	sbb    edi,DWORD PTR [edx+esi*1]
  41db44:	loope  0x41db4e
  41db46:	push   0xffffffe3
  41db48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db49:	or     esp,ebx
  41db4b:	fisub  WORD PTR [edx]
  41db4d:	jae    0x41db47
  41db4f:	dec    ebp
  41db50:	std    
  41db51:	mov    ch,0x21
  41db53:	jo     0x41db31
  41db55:	mov    ch,0x1c
  41db57:	jl     0x41dadd
  41db59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5a:	repnz loop 0x41daf6
  41db5d:	mov    dh,dl
  41db5f:	mov    WORD PTR [ebx+edi*8+0x3dc73108],?
  41db66:	xchg   DWORD PTR [eax-0x20],ecx
  41db69:	add    BYTE PTR [esi+0x671fa572],bh
  41db6f:	mov    WORD PTR [ecx],ss
  41db71:	pusha  
  41db72:	(bad)  
  41db75:	cmp    eax,0xae8154ac
  41db7a:	jmp    0xa320:0x559db4fe
  41db81:	fdivr  QWORD PTR [edi]
  41db83:	scas   eax,DWORD PTR es:[edi]
  41db84:	popf   
  41db85:	add    DWORD PTR fs:[eax-0x639f361b],ebp
  41db8c:	fisttp WORD PTR [ecx+0x7d]
  41db8f:	in     al,dx
  41db90:	outs   dx,BYTE PTR ds:[esi]
  41db91:	xchg   esi,eax
  41db92:	adc    DWORD PTR [esi-0x6f],ebx
  41db95:	sar    BYTE PTR [edx+ebp*2+0x75],0x13
  41db9a:	sbb    BYTE PTR [eax+eax*2],0x2b
  41db9e:	pushf  
  41db9f:	sbb    esi,edx
  41dba1:	sub    DWORD PTR [edi],edx
  41dba3:	cli    
  41dba4:	sbb    eax,0x47d14031
  41dba9:	ins    BYTE PTR es:[edi],dx
  41dbaa:	cmp    dl,BYTE PTR [ebp-0x80]
  41dbad:	mov    esp,DWORD PTR [edx]
  41dbaf:	rcl    BYTE PTR ds:0xf687a856,0x49
  41dbb6:	jge    0x41dbc9
  41dbb8:	add    bl,al
  41dbba:	jmp    0x77ca56c2
  41dbbf:	jecxz  0x41dc35
  41dbc1:	in     al,dx
  41dbc2:	dec    esi
  41dbc3:	bound  esi,QWORD PTR [ecx+0x4764f7ca]
  41dbc9:	push   esi
  41dbca:	xor    eax,0x86120d32
  41dbcf:	les    esi,FWORD PTR [ecx-0x62c52781]
  41dbd5:	enter  0xb316,0x8b
  41dbd9:	xchg   esi,eax
  41dbda:	and    BYTE PTR [eax],cl
  41dbdc:	push   0x85557fbb
  41dbe1:	push   esi
  41dbe2:	xchg   DWORD PTR [edx-0x27c61d71],ebp
  41dbe8:	rcl    BYTE PTR [edx-0x6abc755e],0x24
  41dbef:	or     DWORD PTR [ecx+0xd8bf045],0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	fild   DWORD PTR cs:[esi]
  41dc7c:	test   cl,dh
  41dc7e:	jp     0x41dc5b
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0xa0
  41dc87:	jne    0x41dd07
  41dc89:	lods   eax,DWORD PTR ds:[esi]
  41dc8a:	dec    esp
  41dc8b:	or     BYTE PTR [eax+0x61],bl
  41dc8e:	das    
  41dc8f:	sar    edi,1
  41dc91:	pop    es
  41dc92:	stos   BYTE PTR es:[edi],al
  41dc93:	iret   
  41dc94:	sub    BYTE PTR [edi],al
  41dc96:	cmovs  ebp,DWORD PTR [edi]
  41dc99:	mov    BYTE PTR [eax+0x9],0x64
  41dc9d:	cmp    BYTE PTR [ebx],cl
  41dc9f:	and    al,ch
  41dca1:	stos   DWORD PTR es:[edi],eax
  41dca2:	(bad)  
  41dca3:	dec    edx
  41dca4:	push   eax
  41dca5:	call   0xffdd:0x1cb4d1ec
  41dcac:	xor    bh,BYTE PTR ds:0x29ac1c87
  41dcb2:	test   BYTE PTR [edx],al
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	call   0xe20b5445
  41dcba:	mov    al,0xc7
  41dcbc:	add    BYTE PTR [ecx],ch
  41dcbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcbf:	mov    ds:0x76d7f047,eax
  41dcc4:	fisub  WORD PTR [eax]
  41dcc6:	mov    esp,DWORD PTR [edx]
  41dcc8:	jo     0x41dc54
  41dcca:	loopne 0x41dc8a
  41dccc:	or     edx,DWORD PTR [ebx+0x75bd3a]
  41dcd2:	xchg   ecx,eax
  41dcd3:	inc    ecx
  41dcd4:	dec    esp
  41dcd5:	mov    eax,0x7027f772
  41dcda:	gs mov dh,0x3a
  41dcdd:	push   cs
  41dcde:	lods   eax,DWORD PTR ds:[esi]
  41dcdf:	into   
  41dce0:	popa   
  41dce1:	mov    al,0xb4
  41dce3:	cmp    bl,BYTE PTR ds:0x25c496a
  41dce9:	mov    bl,0xcf
  41dceb:	daa    
  41dcec:	inc    ebp
  41dced:	push   cs
  41dcee:	or     DWORD PTR [ebx+ecx*8],esp
  41dcf1:	pop    ecx
  41dcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf3:	inc    ebp
  41dcf4:	jb     0x41dc8d
  41dcf6:	imul   esp,ebp,0xffffffba
  41dcf9:	(bad)  
  41dcfa:	js     0x41dd77
  41dcfc:	push   es
  41dcfd:	dec    ebp
  41dcfe:	retf   
  41dcff:	int    0x7c
  41dd01:	mov    esi,DWORD PTR [ebx]
  41dd03:	loope  0x41dce2
  41dd05:	xor    al,0xb
  41dd07:	sub    al,0xcb
  41dd09:	in     al,0x7c
  41dd0b:	push   0xe2f9b0
  41dd10:	inc    ebx
  41dd11:	pushf  
  41dd12:	pop    esi
  41dd13:	inc    esi
  41dd14:	lock dec ebp
  41dd16:	inc    ebx
  41dd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd18:	test   eax,0x8a8f200
  41dd1d:	sub    BYTE PTR [ecx-0x69d119c4],dh
  41dd23:	pop    esp
  41dd24:	jae    0x41dd9b
  41dd26:	scas   eax,DWORD PTR es:[edi]
  41dd27:	jb     0x41dd0a
  41dd29:	push   fs
  41dd2b:	sbb    BYTE PTR [ebx+ecx*4-0x51a37d40],bh
  41dd32:	dec    edi
  41dd33:	imul   BYTE PTR [edi+0x55]
  41dd36:	xchg   ecx,eax
  41dd37:	sub    eax,ecx
  41dd39:	push   cs
  41dd3a:	xchg   ebp,eax
  41dd3b:	pop    eax
  41dd3c:	cld    
  41dd3d:	jg     0x41dd09
  41dd3f:	xchg   ebp,eax
  41dd40:	gs ins BYTE PTR es:[edi],dx
  41dd42:	or     BYTE PTR [edx-0x213e3d8d],0x4c
  41dd49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd4a:	xchg   edi,eax
  41dd4b:	xchg   ebx,eax
  41dd4c:	mov    es:0x5483712f,al
  41dd52:	addr16 jb 0x41dd95
  41dd55:	fsubr  st,st(5)
  41dd57:	dec    eax
  41dd58:	fwait
  41dd59:	std    
  41dd5a:	mov    al,ds:0x4169af55
  41dd5f:	mov    bh,0x4c
  41dd61:	xlat   BYTE PTR ds:[ebx]
  41dd62:	rol    DWORD PTR [edx+0x60d9e1d2],0xf9
  41dd69:	mov    ecx,0xdf78822a
  41dd6e:	sbb    DWORD PTR [ebp-0x3b724320],esp
  41dd74:	pop    edi
  41dd75:	pop    ss
  41dd76:	push   ss
  41dd77:	ret    0xb443
  41dd7a:	inc    ebp
  41dd7b:	jbe    0x41dd7c
  41dd7d:	jns    0x41dd5e
  41dd7f:	or     ch,BYTE PTR ds:0x970b26b6
  41dd85:	js     0x41dda9
  41dd87:	and    DWORD PTR [edi+0x28dccf5a],0x13294584
  41dd91:	xchg   DWORD PTR [ecx-0x1f3832d6],ebp
  41dd97:	jle    0x41de17
  41dd99:	mov    WORD PTR [ebp-0x24],ss
  41dd9c:	scas   eax,DWORD PTR es:[edi]
  41dd9d:	xor    DWORD PTR [esi-0x5c],ebx
  41dda0:	add    al,0x9f
  41dda2:	mov    eax,edx
  41dda4:	pop    ss
  41dda5:	jmp    0x41ddf3
  41dda7:	(bad)  
  41dda8:	and    BYTE PTR [ebx+0x3a48ac20],bl
  41ddae:	mov    al,0xb3
  41ddb0:	lods   al,BYTE PTR ds:[esi]
  41ddb1:	(bad)  
  41ddb2:	cmp    BYTE PTR [ebx],ah
  41ddb4:	add    esi,DWORD PTR [ebp+0x1089d055]
  41ddba:	pop    ds
  41ddbb:	outs   dx,DWORD PTR ds:[esi]
  41ddbc:	(bad)  
  41ddbd:	shl    edi,0x8a
  41ddc0:	push   ebp
  41ddc1:	push   eax
  41ddc2:	pop    ecx
  41ddc3:	push   ebp
  41ddc4:	aam    0x72
  41ddc6:	and    esp,DWORD PTR [eax]
  41ddc8:	fdiv   DWORD PTR [eax+0x5d]
  41ddcb:	xor    edi,esi
  41ddcd:	pop    esi
  41ddce:	pop    ebx
  41ddcf:	call   0x51b92b25
  41ddd4:	lods   al,BYTE PTR ds:[si]
  41ddd6:	mov    eax,ds:0xd0b40d29
  41dddb:	xchg   edi,eax
  41dddc:	sbb    BYTE PTR [edi+ecx*2+0x6f560fc1],ah
  41dde3:	xchg   ebx,eax
  41dde4:	pop    esp
  41dde5:	or     al,0x74
  41dde7:	icebp  
  41dde8:	js     0x41de4a
  41ddea:	mov    bh,0x9f
  41ddec:	ins    BYTE PTR es:[edi],dx
  41dded:	add    DWORD PTR [ebx-0x73],edx
  41ddf0:	loope  0x41ddce
  41ddf2:	ss (bad) 
  41ddf4:	jp     0x41dd8b
  41ddf6:	mov    ds:0xee8b0acb,al
  41ddfb:	frstor [ecx+ebp*8+0x40]
  41ddff:	jne    0x41de4c
  41de01:	test   al,0xe
  41de03:	call   0x1b92a9e1
  41de08:	cwde   
  41de09:	daa    
  41de0a:	gs jp  0x41ddb5
  41de0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de0e:	clc    
  41de0f:	retf   
  41de10:	mul    edi
  41de12:	mov    eax,0xc221ba34
  41de17:	push   0xffffffd8
  41de19:	scas   eax,DWORD PTR es:[edi]
  41de1a:	mov    ds:0xe89a78c1,al
  41de1f:	or     dl,bl
  41de21:	arpl   cx,di
  41de23:	push   ss
  41de24:	sub    ch,BYTE PTR [eax-0x17087275]
  41de2a:	pusha  
  41de2b:	or     BYTE PTR [esi-0x2e],ah
  41de2e:	cmp    DWORD PTR [eax-0x7c],0xeb2a98e1
  41de35:	sub    al,0xf4
  41de37:	mov    eax,ds:0x6b3ce6e2
  41de3c:	cmp    eax,0xd672b6c6
  41de41:	aam    0x17
  41de43:	and    al,BYTE PTR [esi+ebx*4+0x79]
  41de47:	jnp    0x41de9f
  41de49:	push   ebp
  41de4a:	or     ecx,0x22
  41de4d:	ret    
  41de4e:	(bad)  
  41de4f:	mov    dl,0xdc
  41de51:	icebp  
  41de52:	mov    bh,0xdd
  41de54:	aaa    
  41de55:	mov    eax,0xe2b6944f
  41de5b:	retf   0xdc81
  41de5e:	ror    cl,1
  41de60:	les    eax,FWORD PTR es:[edi-0x5e81e794]
  41de67:	mov    ch,0xa2
  41de69:	popf   
  41de6a:	scas   eax,DWORD PTR es:[edi]
  41de6b:	dec    esp
  41de6c:	out    0x63,eax
  41de6e:	pop    ds
  41de6f:	(bad)  
  41de70:	fist   WORD PTR [edi+0x131813c5]
  41de76:	push   DWORD PTR [ebx+0x6d]
  41de79:	aaa    
  41de7a:	shr    dh,0x2d
  41de7d:	lock lods al,BYTE PTR ds:[esi]
  41de7f:	pop    ebx
  41de80:	fs ret 0xf430
  41de84:	in     eax,dx
  41de85:	mov    dh,0xe2
  41de87:	pop    edi
  41de88:	and    DWORD PTR [ecx+0x43],ebp
  41de8b:	mov    ebx,ss
  41de8d:	cmp    BYTE PTR ds:[esi-0x80],dl
  41de91:	shl    DWORD PTR ds:0xac95b37b,1
  41de97:	out    dx,al
  41de98:	(bad)  
  41de99:	mov    eax,ds:0x8e802029
  41de9e:	mov    bh,0xaf
  41dea0:	inc    edx
  41dea1:	jmp    0xce0ae597
  41dea6:	frstor [eax-0x2f]
  41dea9:	ret    0xf5f8
  41deac:	xchg   ecx,eax
  41dead:	call   0xf4b0a360
  41deb2:	add    eax,edx
  41deb4:	mov    ?,WORD PTR [edx+0x7d603160]
  41deba:	xchg   esp,eax
  41debb:	mov    ds:0xa0882af7,al
  41dec0:	popf   
  41dec1:	mov    ebx,0x5005e25b
  41dec6:	ins    DWORD PTR es:[edi],dx
  41dec7:	sbb    DWORD PTR [edx+edi*1],0x53
  41decb:	jns    0x41df1f
  41decd:	cmp    ebx,DWORD PTR [ecx+0x29]
  41ded0:	test   BYTE PTR [eax+ebp*4+0x20],cl
  41ded4:	cmp    DWORD PTR [eax+0x43],0xffffffd2
  41ded8:	push   esi
  41ded9:	pushf  
  41deda:	mov    al,0xd7
  41dedc:	pop    edi
  41dedd:	sub    BYTE PTR [edi-0x78ec730b],al
  41dee3:	mov    bp,0x2330
  41dee7:	cdq    
  41dee8:	mov    al,0xf0
  41deeb:	call   0xc91b5eb0
  41def0:	sbb    bh,ah
  41def2:	dec    eax
  41def3:	adc    eax,0xeec39b95
  41def8:	les    esi,FWORD PTR [ebx-0x35c98af3]
  41defe:	pinsrw mm1,esp,0x5d
  41df02:	xchg   esp,eax
  41df03:	sbb    dl,dh
  41df05:	or     al,0x2a
  41df07:	std    
  41df08:	in     al,dx
  41df09:	fiadd  DWORD PTR [esi-0x5e5d5ea2]
  41df0f:	jbe    0x41df8b
  41df11:	dec    ecx
  41df12:	fwait
  41df13:	jno    0x41df06
  41df15:	in     eax,0xef
  41df17:	sbb    dh,ah
  41df19:	(bad)  
  41df1a:	repz je 0x41df05
  41df1d:	fisttp DWORD PTR [ebx+0x63ebc989]
  41df23:	scas   al,BYTE PTR es:[edi]
  41df24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df25:	cli    
  41df26:	mov    ch,0x3b
  41df28:	sub    al,0xd4
  41df2a:	hlt    
  41df2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2c:	repnz outs dx,DWORD PTR ds:[esi]
  41df2e:	ins    DWORD PTR es:[edi],dx
  41df2f:	xor    bl,BYTE PTR [ebx]
  41df31:	adc    BYTE PTR [ebp+0x36],0x97
  41df35:	inc    ecx
  41df36:	mov    edi,0x6710f390
  41df3b:	sti    
  41df3c:	cmp    al,0xd
  41df3e:	push   ss
  41df3f:	push   edx
  41df40:	jb     0x41df6a
  41df42:	mov    al,0xa8
  41df44:	fdivr  QWORD PTR [ebx]
  41df46:	cdq    
  41df47:	push   es
  41df48:	xor    eax,0x4885630a
  41df4d:	pop    esp
  41df4e:	pop    ecx
  41df4f:	daa    
  41df50:	inc    ecx
  41df51:	jmp    0x41df6f
  41df53:	aad    0x40
  41df55:	push   0x73
  41df57:	mov    dl,BYTE PTR [ebx+0x1de436f6]
  41df5d:	sti    
  41df5e:	cdq    
  41df5f:	cwde   
  41df60:	adc    dh,BYTE PTR [ecx-0x22]
  41df63:	jae    0x41def7
  41df65:	ret    0x4d5b
  41df68:	mov    eax,ds:0x617e4baa
  41df6d:	mov    al,0xf9
  41df6f:	mov    cl,0x1b
  41df71:	fbld   TBYTE PTR [edi-0x24]
  41df74:	push   ebx
  41df75:	icebp  
  41df76:	mov    ch,0x87
  41df78:	cdq    
  41df79:	dec    ebp
  41df7a:	gs in  eax,dx
  41df7c:	add    DWORD PTR [ebp+0xa],eax
  41df7f:	ret    
  41df80:	stos   BYTE PTR es:[edi],al
  41df81:	add    edi,eax
  41df83:	or     BYTE PTR [ecx-0x42],bl
  41df86:	stos   BYTE PTR es:[edi],al
  41df87:	stos   BYTE PTR es:[edi],al
  41df88:	mov    ch,0x83
  41df8a:	fimul  WORD PTR [ecx+0x4ff20465]
  41df90:	pusha  
  41df91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df92:	pop    ecx
  41df93:	ret    
  41df94:	icebp  
  41df95:	scas   eax,DWORD PTR es:[edi]
  41df96:	in     eax,0x4b
  41df98:	xchg   esi,eax
  41df99:	loop   0x41df7b
  41df9b:	pop    edi
  41df9c:	jg     0x41df1e
  41df9e:	neg    BYTE PTR [edi]
  41dfa0:	fiadd  WORD PTR [ebp+0x503fc68d]
  41dfa6:	xlat   BYTE PTR ds:[ebx]
  41dfa7:	cs dec esp
  41dfa9:	aaa    
  41dfaa:	inc    ebx
  41dfab:	clc    
  41dfac:	stos   DWORD PTR es:[edi],eax
  41dfad:	test   eax,0xbcbd50d3
  41dfb2:	jo     0x41dfff
  41dfb4:	jae    0x41e021
  41dfb6:	sub    al,0xb9
  41dfb8:	aad    0xf1
  41dfba:	jne    0x41dfac
  41dfbc:	dec    esi
  41dfbd:	adc    ebx,ebx
  41dfbf:	mov    ds:0xb6d8de47,eax
  41dfc4:	jle    0x41df74
  41dfc6:	mov    dh,0xb3
  41dfc8:	sbb    eax,0x645e40db
  41dfcd:	lock mov edx,0x8ba23f12
  41dfd3:	xchg   ecx,eax
  41dfd4:	xchg   ecx,eax
  41dfd5:	jno    0x41e005
  41dfd7:	jno    0x41e020
  41dfd9:	iret   
  41dfda:	xor    DWORD PTR [edx+0x42],esp
  41dfdd:	add    ebp,DWORD PTR [edi-0x60f2a43c]
  41dfe3:	mov    BYTE PTR [esp+ebx*1+0x10],ah
  41dfe7:	xlat   BYTE PTR ds:[ebx]
  41dfe8:	jl     0x41dfb5
  41dfea:	ins    BYTE PTR es:[edi],dx
  41dfeb:	cs and ebp,esp
  41dfee:	mov    ds:0xfdab1454,eax
  41dff3:	not    DWORD PTR [ebp+edx*4-0x13]
  41dff7:	ret    0x6533
  41dffa:	cmp    eax,0x7c329b3
  41dfff:	xor    BYTE PTR [eax],dh
  41e001:	(bad)  
  41e002:	add    al,0x3
  41e004:	adc    DWORD PTR ds:0x9838aeba,ebp
  41e00a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41e00c:	sub    DWORD PTR [edx+ebp*4-0x4d5ac4b2],eax
  41e013:	mov    eax,ecx
  41e015:	cmp    al,BYTE PTR [ebp-0x7a]
  41e018:	shl    BYTE PTR [ecx-0x27],cl
  41e01b:	ficomp DWORD PTR [eax]
  41e01d:	pop    es
  41e01e:	cmp    DWORD PTR [edx-0x29],ebx
  41e021:	pop    ebp
  41e022:	xor    DWORD PTR [ebp+0x1c132c28],0xffffff8d
  41e029:	aad    0xba
  41e02b:	cmp    esi,DWORD PTR [ebx]
  41e02d:	mov    eax,edx
  41e02f:	fisttp WORD PTR [esi+0x2dc2271e]
  41e035:	out    dx,eax
  41e036:	inc    ebp
  41e037:	sbb    DWORD PTR ds:0x9fd59885,0xbe885157
  41e041:	push   ebx
  41e042:	cwde   
  41e043:	cld    
  41e044:	dec    ebp
  41e045:	mov    ah,0x6c
  41e047:	add    ecx,0xd276a41a
  41e04d:	popa   
  41e04e:	leave  
  41e04f:	lea    ebx,[eax]
  41e051:	test   al,0x8e
  41e053:	push   eax
  41e054:	mov    ds:0xceb2fb23,eax
  41e059:	int3   
  41e05a:	adc    dl,BYTE PTR [eax+0x47e5ffcb]
  41e060:	or     BYTE PTR [esi-0x2d],0x90
  41e064:	gs jl  0x41e09d
  41e067:	ss push es
  41e069:	jle    0x41e0e0
  41e06b:	aam    0x83
  41e06d:	es clc 
  41e06f:	mov    esp,0x15071f85
  41e074:	pop    edi
  41e075:	push   ebp
  41e076:	push   ss
  41e077:	sub    edi,ecx
  41e079:	lods   eax,DWORD PTR ds:[esi]
  41e07a:	rol    BYTE PTR [eax+0x71],cl
  41e07d:	pusha  
  41e07e:	clc    
  41e07f:	call   esp
  41e081:	repnz sbb BYTE PTR [edi+edi*2],cl
  41e085:	fisub  DWORD PTR [ecx+0x50]
  41e088:	stos   BYTE PTR es:[edi],al
  41e089:	loope  0x41e0f8
  41e08b:	mov    es,WORD PTR [ebp+0x1f0d9909]
  41e091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e092:	outs   dx,DWORD PTR ds:[esi]
  41e093:	je     0x41e0a9
  41e095:	call   0x3fee:0xc8c8c8fa
  41e09c:	in     eax,0xd5
  41e09e:	shl    DWORD PTR [eax+esi*2-0x1e],0x95
  41e0a3:	mov    esi,0x8a401629
  41e0a8:	out    dx,eax
  41e0a9:	cmc    
  41e0aa:	jnp    0x41e06f
  41e0ac:	push   ebp
  41e0ad:	and    dl,cl
  41e0af:	mov    ebx,0x52d65326
  41e0b4:	xchg   esi,eax
  41e0b5:	fisub  WORD PTR [ecx]
  41e0b7:	cmp    dh,BYTE PTR [edx+0x2d6015d3]
  41e0bd:	xchg   esi,edx
  41e0bf:	lds    edi,FWORD PTR [esi+0x50]
  41e0c2:	cmp    eax,0xdfb0cc4d
  41e0c7:	sbb    al,ch
  41e0c9:	leave  
  41e0ca:	dec    ecx
  41e0cb:	sbb    ebp,DWORD PTR [edx-0x460279cd]
  41e0d1:	jl     0x41e0f4
  41e0d3:	mov    ds:0x11626df0,al
  41e0d8:	jmp    0x41e129
  41e0da:	jns    0x41e0d5
  41e0dc:	stos   BYTE PTR es:[edi],al
  41e0dd:	and    edi,edi
  41e0df:	dec    ebp
  41e0e0:	minps  xmm4,XMMWORD PTR [edi]
  41e0e3:	inc    ebx
  41e0e4:	ss test eax,0xed2a1ebb
  41e0ea:	xchg   esp,eax
  41e0eb:	adc    ch,bl
  41e0ed:	ins    BYTE PTR es:[edi],dx
  41e0ee:	lods   al,BYTE PTR ds:[esi]
  41e0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f0:	mov    edi,0x638fbbb4
  41e0f5:	test   eax,0x3f5b9075
  41e0fa:	inc    DWORD PTR [ebx+0x2a2878b6]
  41e100:	pop    ds
  41e101:	xchg   esp,eax
  41e102:	jg     0x41e0fd
  41e104:	mov    eax,ds
  41e106:	outs   dx,DWORD PTR ds:[esi]
  41e107:	xor    eax,0xbea65168
  41e10c:	pop    edi
  41e10d:	push   ss
  41e10e:	pop    edx
  41e10f:	ret    0x3450
  41e112:	scas   al,BYTE PTR es:[edi]
  41e113:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41e115:	sub    al,0x8d
  41e117:	or     eax,0x41a13c01
  41e11c:	adc    ah,bh
  41e11e:	imul   esi,DWORD PTR [edi],0x49
  41e121:	sbb    esi,ecx
  41e123:	aas    
  41e124:	call   0x1428:0x685df5a4
  41e12b:	fisttp QWORD PTR [eax]
  41e12d:	xor    dh,BYTE PTR [edi+0x4f]
  41e130:	and    eax,DWORD PTR [edx]
  41e132:	sbb    DWORD PTR [ecx-0x65bdc597],ebx
  41e138:	in     eax,0x6
  41e13a:	aas    
  41e13b:	adc    eax,0x92cea78a
  41e140:	inc    esp
  41e141:	mov    al,ds:0x9f28d381
  41e146:	(bad)  
  41e147:	ins    BYTE PTR es:[edi],dx
  41e148:	inc    ebp
  41e149:	xor    eax,0x54ecef6f
  41e14e:	into   
  41e14f:	dec    eax
  41e150:	ret    0x8f71
  41e153:	dec    ebp
  41e154:	out    dx,al
  41e155:	in     al,0x9c
  41e157:	xor    BYTE PTR [ecx],dl
  41e159:	push   0xd1682067
  41e15e:	xor    esi,DWORD PTR [edi]
  41e160:	mov    edi,0x12e8ebb0
  41e165:	retf   0x83c9
  41e168:	cmp    eax,0x420b2ec5
  41e16d:	loopne 0x41e1c2
  41e16f:	daa    
  41e170:	mov    ebx,0x7af45d05
  41e175:	fstp   QWORD PTR [edx-0x55808838]
  41e17b:	jns    0x41e1a7
  41e17d:	inc    ebp
  41e17e:	es jbe 0x41e1aa
  41e181:	mov    BYTE PTR [ecx-0x633bca2a],dl
  41e187:	and    ch,BYTE PTR [ebp+0x41]
  41e18a:	aaa    
  41e18b:	push   edx
  41e18c:	jb     0x41e1c5
  41e18e:	or     bl,ah
  41e190:	rcl    BYTE PTR [edi-0x26b1e950],cl
  41e196:	jo     0x41e1f5
  41e198:	ja     0x41e170
  41e19a:	fdiv   st(4),st
  41e19c:	jmp    0xc85e1fad
  41e1a1:	aad    0xb7
  41e1a3:	ss jne 0x41e144
  41e1a6:	adc    eax,0xc8677c42
  41e1ab:	pop    ebp
  41e1ac:	ins    BYTE PTR es:[edi],dx
  41e1ad:	fild   DWORD PTR [ebp+0x35]
  41e1b0:	mov    ch,0x53
  41e1b2:	std    
  41e1b3:	inc    ebx
  41e1b4:	leave  
  41e1b5:	jg     0x41e1b9
  41e1b7:	mov    al,ds:0x18e2ea73
  41e1bc:	cwde   
  41e1bd:	mul    esp
  41e1bf:	push   ebp
  41e1c0:	call   0xb3342c5b
  41e1c5:	ins    BYTE PTR es:[edi],dx
  41e1c6:	mov    esp,0xb96d04b0
  41e1cb:	fisttp WORD PTR [eax+0x238d54df]
  41e1d1:	sub    DWORD PTR [ebp+0x4b],esp
  41e1d4:	xchg   edx,eax
  41e1d5:	mov    ecx,0xfdbb2421
  41e1da:	add    al,0xc0
  41e1dc:	popa   
  41e1dd:	sbb    DWORD PTR [ebp+0x28],ecx
  41e1e0:	imul   ecx,ebx,0x4447b4b
  41e1e6:	push   ebp
  41e1e7:	add    ah,0xdc
  41e1ea:	inc    ecx
  41e1eb:	ss add eax,0x7cc9f8cb
  41e1f1:	inc    eax
  41e1f2:	dec    edx
  41e1f3:	pop    edx
  41e1f4:	mov    ch,0x3f
  41e1f6:	xor    eax,edx
  41e1f8:	pop    ebx
  41e1f9:	jmp    0x41e25f
  41e1fb:	cmp    al,0xca
  41e1fd:	retf   
  41e1fe:	or     DWORD PTR [ebx+0x2212c472],esp
  41e204:	jmp    0xc143914b
  41e209:	fst    DWORD PTR [eax]
  41e20b:	jnp    0x41e27d
  41e20d:	push   ebp
  41e20e:	pop    eax
  41e20f:	in     al,dx
  41e210:	aad    0x51
  41e212:	das    
  41e213:	hlt    
  41e214:	mov    edi,0xa0ec243d
  41e219:	sbb    cl,dh
  41e21b:	sbb    BYTE PTR [edi-0x67659b8],0x90
  41e222:	mov    eax,ds:0x69ef4cfb
  41e227:	test   al,0x48
  41e22a:	mov    ds,WORD PTR [esi+0x62]
  41e22d:	xor    DWORD PTR [ebp+0x41],eax
  41e230:	outs   dx,BYTE PTR ds:[esi]
  41e231:	frstor [ebp-0x2f73fce5]
  41e237:	dec    ebp
  41e238:	xor    BYTE PTR [bx],bl
  41e23b:	mov    ebx,0xefc223e6
  41e240:	imul   eax,DWORD PTR [ebp+eiz*4+0x79],0x22
  41e245:	ss nop
  41e247:	or     BYTE PTR [ecx-0xb5dfe95],0xee
  41e24e:	cdq    
  41e24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e250:	shl    DWORD PTR [eax],0x92
  41e253:	sbb    al,0x19
  41e255:	or     eax,0x39a38bfb
  41e25a:	inc    ecx
  41e25b:	dec    eax
  41e25c:	add    ecx,DWORD PTR [edi]
  41e25e:	fidiv  DWORD PTR [edx-0x19bd6c45]
  41e264:	xor    edi,DWORD PTR [ebp-0x7a]
  41e267:	add    eax,0xdbd69ccf
  41e26c:	push   0x2e
  41e26e:	mov    ah,0x61
  41e270:	and    ah,cl
  41e272:	clc    
  41e273:	std    
  41e274:	test   DWORD PTR [ecx-0x3dec2498],esp
  41e27a:	(bad)  
  41e27c:	retf   
  41e27d:	in     al,0xf8
  41e27f:	mov    edi,0xfd6468cd
  41e284:	cmp    dh,BYTE PTR [esi]
  41e286:	(bad)  
  41e287:	mov    dl,0xdd
  41e289:	dec    esp
  41e28a:	add    DWORD PTR [ebp-0x47bb3d3b],ebp
  41e290:	xlat   BYTE PTR ds:[ebx]
  41e291:	xchg   esp,eax
  41e292:	cdq    
  41e293:	popa   
  41e294:	in     eax,dx
  41e295:	in     eax,0x89
  41e297:	das    
  41e298:	pusha  
  41e299:	fst    QWORD PTR [ebp+0x4463c6b1]
  41e29f:	or     al,cl
  41e2a1:	pop    ds
  41e2a2:	pop    eax
  41e2a3:	mov    WORD PTR [edx],cs
  41e2a5:	push   cs
  41e2a6:	jl     0x41e2cb
  41e2a8:	mov    al,ds:0xfa90f220
  41e2ad:	fistp  QWORD PTR [esi+0x23]
  41e2b0:	inc    ecx
  41e2b1:	cmp    ebp,DWORD PTR [esi]
  41e2b3:	xor    al,0xa5
  41e2b5:	push   0xf1dcbd2c
  41e2ba:	loope  0x41e272
  41e2bc:	add    eax,DWORD PTR [eax-0x7]
  41e2bf:	or     BYTE PTR [eax-0x41ae9075],ah
  41e2c5:	cmp    ah,dh
  41e2c7:	push   ebp
  41e2c8:	lea    esi,[ebx-0x52]
  41e2cb:	out    dx,eax
  41e2cc:	mov    ebp,0x98e446cf
  41e2d1:	test   eax,0xd63480bc
  41e2d6:	pop    es
  41e2d7:	and    eax,0x47435916
  41e2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2dd:	push   0xffffffc1
  41e2df:	popa   
  41e2e0:	adc    al,0xed
  41e2e2:	jmp    0x256f211d
  41e2e7:	pop    ds
  41e2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e9:	inc    ebp
  41e2ea:	les    eax,FWORD PTR [ecx-0x14]
  41e2ed:	pop    es
  41e2ee:	jno    0x41e340
  41e2f0:	xchg   BYTE PTR [ecx-0x211266f4],bl
  41e2f6:	mov    al,ds:0x9b34beef
  41e2fb:	pop    ebx
  41e2fc:	mov    cl,0x4a
  41e2fe:	mov    edi,0x4623087e
  41e303:	xchg   bl,al
  41e305:	and    ah,BYTE PTR [esi+ecx*2-0x1f5cccf4]
  41e30c:	or     al,0xf5
  41e30e:	nop
  41e30f:	int3   
  41e310:	xor    al,BYTE PTR ds:0x1278fb02
  41e316:	mov    ch,0xb1
  41e318:	call   0x51bd9c65
  41e31d:	cmp    BYTE PTR fs:0x21704e70,cl
  41e324:	and    al,0xd8
  41e326:	and    edx,DWORD PTR [ecx]
  41e328:	sahf   
  41e329:	out    0xdb,al
  41e32b:	cmc    
  41e32c:	ss repnz pop ecx
  41e32f:	jns    0x41e323
  41e331:	xlat   BYTE PTR ds:[ebx]
  41e332:	pop    eax
  41e333:	xchg   DWORD PTR [ecx-0x4fc8800b],edx
  41e339:	nop
  41e33a:	or     BYTE PTR [eax+eax*4+0x10],ch
  41e33e:	out    dx,eax
  41e33f:	push   ebx
  41e340:	mov    ds:0x208ec65b,eax
  41e345:	(bad)  
  41e346:	or     BYTE PTR [eax+0x13],dh
  41e349:	dec    esp
  41e34a:	inc    ebx
  41e34b:	and    BYTE PTR [edi+0x2815858e],ah
  41e351:	and    ebx,esi
  41e353:	sbb    BYTE PTR [edi+ebx*1-0x30572b27],dh
  41e35a:	xchg   BYTE PTR [edx+esi*8],al
  41e35d:	repz cmp bh,BYTE PTR [esi+edi*2-0x55]
  41e362:	ds call 0xc2a8:0x30d8974a
  41e36a:	aam    0x28
  41e36c:	ins    BYTE PTR es:[edi],dx
  41e36d:	pop    edi
  41e36e:	cmp    eax,0x45c40bcb
  41e373:	jne    0x41e382
  41e375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e376:	mov    ecx,0xca5f7be8
  41e37b:	gs es ja 0x41e39d
  41e37f:	cmc    
  41e380:	(bad)  
  41e381:	(bad)  
  41e382:	mov    cl,0xc2
  41e384:	out    dx,eax
  41e385:	int3   
  41e386:	and    BYTE PTR ds:0x2e01ca3b,0xcd
  41e38d:	sub    bh,dl
  41e38f:	inc    ecx
  41e390:	mov    esp,DWORD PTR [edx+0x2dd897d]
  41e396:	inc    eax
  41e397:	mov    edi,0x8a3e7030
  41e39c:	iret   
  41e39d:	lea    edi,[esi-0x1b720056]
  41e3a3:	adc    ecx,ebp
  41e3a5:	inc    ebp
  41e3a6:	aas    
  41e3a7:	pushf  
  41e3a8:	cs inc esi
  41e3aa:	mov    ebp,ebx
  41e3ac:	call   0xecff:0x7c2ee1d6
  41e3b3:	fbld   TBYTE PTR [eax-0x39]
  41e3b6:	aam    0xf2
  41e3b8:	xchg   esp,eax
  41e3b9:	and    BYTE PTR [esi-0x17f4c65d],cl
  41e3bf:	jnp    0x41e397
  41e3c1:	jnp    0x41e42f
  41e3c3:	iret   
  41e3c4:	fld    QWORD PTR [ebx-0x72]
  41e3c7:	xchg   ecx,eax
  41e3c8:	jae    0x41e3b0
  41e3ca:	gs pop ebx
  41e3cc:	sbb    al,0xf8
  41e3ce:	jb     0x41e416
  41e3d0:	mov    DWORD PTR [edx+0x60],ebx
  41e3d3:	fs in  al,0xb4
  41e3d6:	add    ch,cl
  41e3d8:	ficom  DWORD PTR [ecx]
  41e3da:	aad    0xf1
  41e3dc:	js     0x41e366
  41e3de:	mov    bl,0xd7
  41e3e0:	jmp    0x522a:0xf841a41
  41e3e7:	add    DWORD PTR [ebx+0x16],eax
  41e3ea:	add    ebx,ebx
  41e3ec:	hlt    
  41e3ed:	inc    esi
  41e3ee:	ret    
  41e3ef:	sti    
  41e3f0:	andps  xmm0,XMMWORD PTR [esi+edx*8+0x2180976b]
  41e3f8:	mov    ds:0x7d44ae0f,eax
  41e3fd:	hlt    
  41e3fe:	shl    edx,1
  41e400:	outs   dx,BYTE PTR ds:[esi]
  41e401:	jmp    0x41e46c
  41e403:	jno    0x41e41b
  41e405:	sahf   
  41e406:	std    
  41e407:	call   0x1883:0x52f5c300
  41e40e:	fisubr WORD PTR [esi]
  41e410:	jp     0x41e3f1
  41e412:	add    DWORD PTR ds:0x16a71ad7,0xdc1d0ad2
  41e41c:	outs   dx,DWORD PTR ds:[esi]
  41e41d:	mov    WORD PTR [ebx-0x31],gs
  41e420:	fmul   st(1),st
  41e422:	rol    DWORD PTR ss:[esi+0xc541d72],cl
  41e429:	aas    
  41e42a:	cmc    
  41e42b:	mov    eax,ds:0x9560b96b
  41e430:	push   ecx
  41e431:	mov    bl,0xf0
  41e433:	push   ds
  41e434:	add    eax,0xf6cfddb9
  41e439:	or     ebp,ebx
  41e43b:	or     bl,dh
  41e43d:	mov    ch,ch
  41e43f:	jne    0x41e466
  41e441:	mov    ds:0xba6759c9,al
  41e446:	cmp    eax,0x4c5c200a
  41e44b:	(bad)  
  41e44c:	loope  0x41e4ac
  41e44e:	fild   DWORD PTR [edi+0x20f54cc8]
  41e454:	in     al,dx
  41e455:	ins    DWORD PTR es:[edi],dx
  41e456:	xchg   DWORD PTR [ebp-0x8],edx
  41e459:	push   0xf20c6999
  41e45e:	ret    
  41e45f:	shl    BYTE PTR [edi+ebx*2],1
  41e462:	sub    esi,edx
  41e464:	mov    eax,ds:0xb6d915e1
  41e469:	xor    edx,esp
  41e46b:	call   0x765d:0xf0d89640
  41e472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e473:	bound  ebx,QWORD PTR [eax]
  41e475:	pop    ebx
  41e476:	inc    ebp
  41e477:	pop    edi
  41e478:	push   DWORD PTR [ebx]
  41e47a:	mov    ecx,ebx
  41e47c:	les    eax,FWORD PTR [ebp-0x1c]
  41e47f:	int3   
  41e480:	jmp    0x17acd9f7
  41e485:	or     al,0x1e
  41e488:	adc    DWORD PTR [edx],0x5e
  41e48b:	jmp    0x86ed:0x4cfe4f8
  41e492:	mov    edi,0xda0904b4
  41e497:	or     DWORD PTR [edi],esi
  41e499:	repz xchg esi,eax
  41e49b:	enter  0xb2a6,0xe6
  41e49f:	rol    ebx,1
  41e4a1:	xchg   ebx,eax
  41e4a2:	jp     0x41e4dd
  41e4a4:	mov    eax,ds:0x76be2644
  41e4a9:	xchg   esi,eax
  41e4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ab:	mov    dh,0xcc
  41e4ad:	jno    0x41e46d
  41e4af:	cdq    
  41e4b0:	out    dx,eax
  41e4b1:	jbe    0x41e4c8
  41e4b3:	cmp    eax,0x46e9575e
  41e4b8:	mov    esp,0x4c10a210
  41e4bd:	call   0xd41a98fc
  41e4c2:	add    ecx,ebp
  41e4c4:	jns    0x41e524
  41e4c6:	das    
  41e4c7:	push   ecx
  41e4c8:	dec    ecx
  41e4c9:	jno    0x41e502
  41e4cb:	mov    BYTE PTR [edi+0x60],cl
  41e4ce:	stos   DWORD PTR es:[edi],eax
  41e4cf:	stos   BYTE PTR es:[edi],al
  41e4d0:	jge    0x41e508
  41e4d2:	inc    esp
  41e4d3:	xchg   esi,eax
  41e4d4:	test   BYTE PTR [eax],bh
  41e4d6:	enter  0x7289,0x58
  41e4da:	enter  0xceae,0x6a
  41e4de:	or     edx,DWORD PTR [ebx+eax*4]
  41e4e1:	sbb    ebx,DWORD PTR [ecx+0x4]
  41e4e4:	fst    st(6)
  41e4e6:	lods   eax,DWORD PTR ds:[esi]
  41e4e7:	jl     0x41e557
  41e4e9:	je     0x41e53d
  41e4eb:	mov    al,0x5e
  41e4ed:	jecxz  0x41e480
  41e4ef:	mov    al,0x77
  41e4f1:	sbb    al,0x7a
  41e4f3:	fnsave [edi-0x4f]
  41e4f6:	fld    DWORD PTR [esi]
  41e4f8:	lea    eax,[edi]
  41e4fa:	aaa    
  41e4fb:	push   0xffffffb4
  41e4fd:	pop    ss
  41e4fe:	jle    0x41e491
  41e500:	mov    edx,0x82a87ff6
  41e505:	daa    
  41e506:	fnstsw ax
  41e508:	push   ds
  41e509:	scas   eax,DWORD PTR es:[edi]
  41e50a:	ret    0xe335
  41e50d:	or     edi,DWORD PTR ds:0xf39baefb
  41e513:	pop    eax
  41e514:	dec    ebx
  41e515:	shl    esp,0x5d
  41e518:	mov    ecx,fs
  41e51a:	lods   al,BYTE PTR ds:[esi]
  41e51b:	in     al,0xa
  41e51d:	sub    edx,DWORD PTR [eax-0x5f]
  41e520:	stos   DWORD PTR es:[edi],eax
  41e521:	sub    edx,esp
  41e523:	mov    bl,0x5e
  41e525:	jmp    0x27b4:0x62125d06
  41e52c:	fldenv [edx-0x26]
  41e52f:	imul   eax,edi,0x33
  41e532:	ins    DWORD PTR es:[edi],dx
  41e533:	and    ch,BYTE PTR [edx+edx*2-0x77f5f130]
  41e53a:	mov    bh,0xaf
  41e53c:	push   ds
  41e53d:	push   edx
  41e53e:	aad    0xf7
  41e540:	mov    eax,0xc9938444
  41e545:	(bad)  
  41e546:	dec    ecx
  41e547:	inc    ebx
  41e548:	mov    DWORD PTR [ebx+0x7ebb77ae],edx
  41e54e:	cmp    DWORD PTR [edx],ecx
  41e550:	cdq    
  41e551:	xchg   DWORD PTR [edx],esi
  41e553:	cmp    esp,DWORD PTR [ecx+ecx*2+0x73d4d7de]
  41e55a:	sub    BYTE PTR [esi],0xfb
  41e55d:	aas    
  41e55e:	jb     0x41e5cc
  41e560:	hlt    
  41e561:	int3   
  41e562:	fnstenv [eax+0x11beda16]
  41e568:	xlat   BYTE PTR ds:[ebx]
  41e569:	cmp    bh,dl
  41e56b:	das    
  41e56c:	jmp    0x41e503
  41e56e:	pusha  
  41e56f:	xlat   BYTE PTR ds:[ebx]
  41e570:	sbb    dl,BYTE PTR [edi]
  41e572:	in     eax,0x9
  41e574:	dec    ebp
  41e575:	cwde   
  41e576:	mov    DWORD PTR ss:[edx],edi
  41e579:	pushf  
  41e57a:	test   al,0x64
  41e57c:	stos   DWORD PTR es:[edi],eax
  41e57d:	adc    ebp,DWORD PTR [ebx]
  41e57f:	or     eax,0x49566fcf
  41e584:	inc    ecx
  41e585:	xor    BYTE PTR [esp+ecx*4],cl
  41e588:	outs   dx,BYTE PTR ds:[esi]
  41e589:	push   cs
  41e58a:	add    BYTE PTR [esi+0xd],dl
  41e58d:	pop    ecx
  41e58e:	add    al,0xe9
  41e590:	mov    ah,0x43
  41e592:	or     ebx,DWORD PTR [ecx]
  41e594:	sub    BYTE PTR [esi+0x3fe6a725],0x32
  41e59b:	sti    
  41e59c:	(bad)  
  41e59d:	sbb    al,0x95
  41e59f:	jo     0x41e5f7
  41e5a1:	adc    eax,0xb126e6aa
  41e5a6:	fnstcw WORD PTR [ebp+0x13]
  41e5a9:	enter  0x2660,0x23
  41e5ad:	pop    esp
  41e5ae:	dec    edi
  41e5af:	cmp    al,0x24
  41e5b1:	push   ss
  41e5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b3:	xor    ch,BYTE PTR [esi*4+0x302c45e9]
  41e5ba:	leave  
  41e5bb:	outs   dx,BYTE PTR ds:[esi]
  41e5bc:	stos   DWORD PTR es:[edi],eax
  41e5bd:	jnp    0x41e618
  41e5bf:	mov    eax,0xb1abf592
  41e5c4:	loopne 0x41e58e
  41e5c6:	ror    BYTE PTR [esp+ecx*4-0x75ea27b6],cl
  41e5cd:	lods   eax,DWORD PTR ds:[esi]
  41e5ce:	mov    bh,0x33
  41e5d0:	pop    edi
  41e5d1:	mov    BYTE PTR [esi],ah
  41e5d3:	in     al,0xf5
  41e5d5:	shl    BYTE PTR [ecx+0x39291e22],1
  41e5db:	jnp    0x41e5a8
  41e5dd:	xor    esp,DWORD PTR [ebx+0x2d]
  41e5e0:	sub    eax,0x2d3e71e8
  41e5e5:	lea    edi,[ebx]
  41e5e7:	jmp    0xe1b6:0x60edc7b5
  41e5ee:	lahf   
  41e5ef:	xchg   esi,eax
  41e5f0:	push   ss
  41e5f1:	sbb    bh,BYTE PTR [ecx]
  41e5f3:	data16 mov al,al
  41e5f6:	add    al,0xef
  41e5f8:	xor    al,0x28
  41e5fa:	jno    0x41e5df
  41e5fc:	int3   
  41e5fd:	mov    ch,0xef
  41e5ff:	div    BYTE PTR [edi-0x4a]
  41e602:	out    0xf6,eax
  41e604:	ret    0x8c3d
  41e607:	jmp    0xb6fd:0x3a573d78
  41e60e:	and    ebx,eax
  41e610:	data16 stos BYTE PTR es:[edi],al
  41e612:	fisttp WORD PTR [ebx]
  41e614:	mov    dl,0x5c
  41e616:	ins    DWORD PTR es:[edi],dx
  41e617:	dec    esp
  41e618:	rcl    DWORD PTR [ebp+0x4f],1
  41e61b:	imul   esi,DWORD PTR [ebp+0x5f3c8515],0x3e
  41e622:	xchg   ebp,eax
  41e623:	sbb    al,0x1b
  41e625:	ss das 
  41e627:	xor    DWORD PTR [ecx+0x3],eax
  41e62a:	mov    esp,0xda7c766e
  41e62f:	push   ecx
  41e630:	hlt    
  41e631:	sbb    eax,0x3b6cde12
  41e636:	(bad)  
  41e637:	add    edx,DWORD PTR [esi]
  41e639:	mov    esp,0x21878261
  41e63e:	mov    ebp,DWORD PTR fs:[ebx-0x6497023a]
  41e645:	(bad)  
  41e646:	out    0x84,al
  41e648:	sub    ch,BYTE PTR es:[esi]
  41e64b:	lds    ebp,FWORD PTR [edx-0x1c8e8cf]
  41e651:	stos   BYTE PTR es:[edi],al
  41e652:	enter  0x6356,0xc7
  41e656:	adc    ch,bl
  41e658:	iret   
  41e659:	sar    DWORD PTR [ecx],1
  41e65b:	pop    edx
  41e65c:	push   esi
  41e65d:	xor    esi,ebx
  41e65f:	data16 sbb dh,dh
  41e662:	shr    BYTE PTR [eax+0x5c],0x4f
  41e666:	mov    dh,BYTE PTR [eax+0x5e6df60c]
  41e66c:	push   ax
  41e66e:	loopne 0x41e605
  41e670:	cs push ecx
  41e672:	push   es
  41e673:	xchg   DWORD PTR ds:0x997fe0f6,esi
  41e679:	setbe  BYTE PTR [esi+0x23]
  41e67d:	out    0x8e,al
  41e67f:	repnz pop edx
  41e681:	popf   
  41e682:	fisubr WORD PTR [edi-0x4d]
  41e685:	xor    al,0x3d
  41e687:	fs xchg esp,eax
  41e689:	push   ecx
  41e68a:	ficom  DWORD PTR [esi]
  41e68c:	push   0xffffffb0
  41e68e:	inc    esp
  41e68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e690:	in     eax,dx
  41e691:	leave  
  41e692:	jns    0x41e6a2
  41e694:	ins    DWORD PTR es:[edi],dx
  41e695:	mov    edi,DWORD PTR [ecx+0x7d]
  41e698:	xor    bl,BYTE PTR [edi-0x1da93efe]
  41e69e:	adc    DWORD PTR [ebx],eax
  41e6a0:	fsub   QWORD PTR [ecx]
  41e6a2:	retfw  
  41e6a4:	shl    DWORD PTR [edx-0x69efc33c],cl
  41e6aa:	dec    esi
  41e6ab:	mov    ah,0x47
  41e6ad:	jae    0x41e6e7
  41e6af:	mov    al,0xff
  41e6b1:	lock and BYTE PTR gs:[ecx+0x4b],ch
  41e6b6:	std    
  41e6b7:	inc    eax
  41e6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6b9:	(bad)  
  41e6ba:	arpl   sp,bx
  41e6bc:	push   ebp
  41e6bd:	outs   dx,DWORD PTR ds:[esi]
  41e6be:	sbb    al,0x95
  41e6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c1:	repnz in eax,0xcd
  41e6c4:	add    al,0xd7
  41e6c6:	inc    edi
  41e6c7:	mov    al,0xca
  41e6c9:	mov    dl,bh
  41e6cb:	xchg   ebx,eax
  41e6cc:	dec    edi
  41e6cd:	add    eax,DWORD PTR [esp+esi*4-0x6c69cc2]
  41e6d4:	in     al,dx
  41e6d5:	int3   
  41e6d6:	xor    bh,BYTE PTR ds:0xf9c17b14
  41e6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6dd:	mov    bl,0x7f
  41e6df:	and    eax,0x1366df04
  41e6e4:	push   eax
  41e6e5:	inc    esp
  41e6e6:	sub    al,0x4
  41e6e8:	les    edx,FWORD PTR [eax-0x3]
  41e6eb:	mov    al,ds:0x56050772
  41e6f0:	or     ah,BYTE PTR [esp+ebx*8]
  41e6f3:	rcr    esp,1
  41e6f5:	pop    esi
  41e6f6:	and    bh,ch
  41e6f8:	lods   al,BYTE PTR ds:[esi]
  41e6f9:	add    edx,edx
  41e6fb:	cmp    al,0x48
  41e6fd:	bound  eax,QWORD PTR [edi+0x1a]
  41e700:	adc    ch,BYTE PTR [ebx]
  41e702:	jp     0x41e780
  41e704:	sbb    dh,BYTE PTR [edx]
  41e706:	jno    0x41e70d
  41e708:	push   0x3c
  41e70a:	and    ah,bl
  41e70c:	iret   
  41e70d:	repnz inc esi
  41e70f:	addr16 push edi
  41e711:	out    0xc5,eax
  41e713:	test   DWORD PTR [ebx-0x2c6990f6],esi
  41e719:	iret   
  41e71a:	or     esi,DWORD PTR [edi]
  41e71c:	jge    0x41e6a0
  41e71e:	aam    0xef
  41e720:	into   
  41e721:	cmp    dl,bl
  41e723:	(bad)  
  41e724:	daa    
  41e725:	add    cl,ch
  41e727:	call   0xbeb4:0x19bdc341
  41e72e:	inc    edi
  41e72f:	mov    ebp,0xba43bd74
  41e734:	fsubr  QWORD PTR ds:0x7d8ab583
  41e73a:	sbb    dl,BYTE PTR [esi]
  41e73c:	(bad)  
  41e73d:	mov    edx,0xda91512
  41e742:	not    BYTE PTR [edx-0x46]
  41e745:	pop    esp
  41e746:	pop    esi
  41e747:	push   eax
  41e748:	adc    eax,0x10ae4a4
  41e74d:	mov    bh,0x1e
  41e74f:	ret    0xad0b
  41e752:	sbb    eax,DWORD PTR [ecx+0x59fc87a1]
  41e758:	add    BYTE PTR [ecx],bh
  41e75a:	inc    esp
  41e75b:	(bad)  
  41e75c:	mov    dh,0xc8
  41e75e:	fild   QWORD PTR [esi+0x40]
  41e761:	mov    esp,0x49a1a8cd
  41e766:	push   es
  41e767:	shl    BYTE PTR [edi+0x6d],0x47
  41e76b:	ror    BYTE PTR [edx+0x78],0xe3
  41e76f:	mov    ebx,0xa9ba0694
  41e774:	shr    BYTE PTR [esi-0x7b63b486],0x11
  41e77b:	pop    ebx
  41e77c:	xlat   BYTE PTR fs:[ebx]
  41e77e:	add    esp,esi
  41e780:	out    0x40,al
  41e782:	nop
  41e783:	fdivr  QWORD PTR [ebx+edx*4]
  41e786:	int3   
  41e787:	push   es
  41e788:	jge    0x41e764
  41e78a:	pop    ebp
  41e78b:	inc    edi
  41e78c:	jmp    0x41e771
  41e78e:	test   DWORD PTR [ebx-0x248511b6],esp
  41e794:	(bad)  
  41e795:	mov    cl,0x5e
  41e797:	leave  
  41e798:	adc    DWORD PTR [esi+0x79c8696],esi
  41e79e:	mov    bh,0x8f
  41e7a0:	mov    esp,0x6b50d3aa
  41e7a5:	ss popf 
  41e7a7:	xchg   esi,eax
  41e7a8:	sub    esp,DWORD PTR [esi+0x7c]
  41e7ab:	les    ebp,FWORD PTR [esi-0x744c4c45]
  41e7b1:	and    al,0xb3
  41e7b3:	sub    al,0x9a
  41e7b5:	and    eax,0xb118a4f7
  41e7ba:	out    dx,al
  41e7bb:	rol    DWORD PTR [edx-0x4b],0x51
  41e7bf:	shr    DWORD PTR [esi],1
  41e7c1:	dec    ebp
  41e7c2:	add    esp,edi
  41e7c4:	and    DWORD PTR [edx+0x1a],edx
  41e7c7:	inc    edi
  41e7c8:	mov    al,ds:0x9f4577c5
  41e7cd:	mov    al,ds:0x18f3fff6
  41e7d2:	dec    esp
  41e7d3:	and    edi,DWORD PTR [esi+esi*2-0x3ab284be]
  41e7da:	inc    esi
  41e7db:	pop    ebx
  41e7dc:	(bad)  
  41e7dd:	push   0xffffffd4
  41e7df:	aaa    
  41e7e0:	pop    ebp
  41e7e1:	jge    0x41e85d
  41e7e3:	cmp    BYTE PTR [edx+edi*2],dh
  41e7e6:	pop    eax
  41e7e7:	or     DWORD PTR [ebp+0x34],edi
  41e7ea:	repz dec eax
  41e7ec:	jmp    0x3181fd5
  41e7f1:	jns    0x41e858
  41e7f3:	(bad)  
  41e7f4:	imul   edx,ebp,0x2eb64b80
  41e7fa:	pop    es
  41e7fb:	sub    BYTE PTR [ecx+0x6cdbda6a],dl
  41e801:	mov    BYTE PTR [edi+ebp*1-0x5e],ch
  41e805:	stos   BYTE PTR es:[edi],al
  41e806:	push   esi
  41e807:	in     eax,dx
  41e808:	dec    edi
  41e809:	fimul  WORD PTR [ecx]
  41e80b:	push   ss
  41e80c:	cdq    
  41e80d:	out    dx,eax
  41e80e:	cwde   
  41e80f:	push   ecx
  41e810:	mov    ds:0x34b4f195,al
  41e815:	int    0x35
  41e817:	retf   
  41e818:	mov    esi,DWORD PTR [ebx+edx*2+0x5a519fd7]
  41e81f:	xor    DWORD PTR [edx-0x2e],ecx
  41e822:	dec    ecx
  41e823:	sub    bh,BYTE PTR [edx]
  41e825:	mov    WORD PTR [ebp-0x80],ss
  41e828:	daa    
  41e829:	lock or eax,DWORD PTR [edx+0x6c]
  41e82d:	js     0x41e7f4
  41e82f:	rcr    BYTE PTR [eax-0x44c9b925],1
  41e835:	cmp    edx,DWORD PTR [esi-0x36410107]
  41e83b:	jmp    0x77199eac
  41e840:	leave  
  41e841:	test   BYTE PTR [esi-0x69538db9],cl
  41e847:	and    esi,DWORD PTR [ecx+esi*2+0x2d]
  41e84b:	imul   edi,DWORD PTR [ebx+0x19b93846],0x46edc425
  41e855:	popa   
  41e856:	in     eax,dx
  41e857:	dec    ecx
  41e858:	(bad)  
  41e859:	mov    dh,0xc3
  41e85b:	pop    eax
  41e85c:	pop    esp
  41e85d:	out    dx,al
  41e85e:	nop
  41e85f:	rol    BYTE PTR [ecx-0x5],cl
  41e862:	pop    ecx
  41e863:	out    dx,eax
  41e864:	inc    ecx
  41e865:	shl    BYTE PTR [ebp+0xf3092f2],0x98
  41e86c:	push   edx
  41e86d:	in     al,dx
  41e86e:	jae    0x41e8a8
  41e870:	adc    al,0x7e
  41e872:	test   DWORD PTR [ebx-0x73aa930d],0xdc4398a4
  41e87c:	pop    ss
  41e87d:	cdq    
  41e87e:	mov    cl,0xa5
  41e880:	rcl    BYTE PTR [edx],cl
  41e882:	xor    eax,0x327a928c
  41e887:	mov    esp,0xa3206b72
  41e88c:	inc    eax
  41e88d:	or     al,0xc4
  41e88f:	push   ds
  41e890:	lods   al,BYTE PTR ds:[esi]
  41e891:	sub    BYTE PTR [edx-0x1b],ah
  41e894:	jmp    0x41e901
  41e896:	out    dx,eax
  41e897:	push   ss
  41e898:	fst    DWORD PTR fs:[ebp-0x1d974ed3]
  41e89f:	sbb    edi,DWORD PTR [ebx]
  41e8a1:	and    BYTE PTR [edi+0x6e8539c3],cl
  41e8a7:	pop    es
  41e8a8:	pop    eax
  41e8a9:	jnp    0x41e886
  41e8ab:	pop    esp
  41e8ac:	inc    eax
  41e8ad:	dec    ebp
  41e8ae:	adc    eax,0x6d6cbe7c
  41e8b3:	and    al,0x36
  41e8b5:	mov    dl,0x5e
  41e8b7:	leave  
  41e8b8:	sti    
  41e8b9:	pusha  
  41e8ba:	repnz out dx,al
  41e8bc:	sbb    al,0x65
  41e8be:	shr    BYTE PTR ds:0x9ac08851,1
  41e8c4:	aaa    
  41e8c5:	lds    ebp,FWORD PTR [esi]
  41e8c7:	ins    BYTE PTR es:[edi],dx
  41e8c8:	xchg   esp,eax
  41e8c9:	sub    al,0x81
  41e8cb:	rcl    DWORD PTR [edx-0x4d6e2610],1
  41e8d1:	xchg   DWORD PTR [esp+ebp*2],ecx
  41e8d4:	pop    edi
  41e8d5:	pop    ds
  41e8d6:	dec    edx
  41e8d7:	mov    edi,0x11d4b122
  41e8dc:	adc    cl,BYTE PTR [ecx]
  41e8de:	jo     0x41e94a
  41e8e0:	or     eax,0xb796b684
  41e8e5:	mov    eax,ds:0xd3aa77d7
  41e8ea:	mov    ch,0x2f
  41e8ec:	or     ebx,ebp
  41e8ee:	cdq    
  41e8ef:	dec    esi
  41e8f0:	xor    ah,BYTE PTR [ebx+esi*8-0x94921b2]
  41e8f7:	push   ecx
  41e8f8:	out    dx,eax
  41e8f9:	adc    ebx,esi
  41e8fb:	(bad)  
  41e8fc:	jmp    0x812d:0xa1bb4c45
  41e903:	test   eax,0x5aea94d8
  41e908:	das    
  41e909:	cdq    
  41e90a:	ja     0x41e92f
  41e90c:	xor    cl,BYTE PTR [esi]
  41e90e:	sar    dl,1
  41e910:	jle    0x41e92e
  41e912:	xor    ah,BYTE PTR ss:[ecx+0x7]
  41e916:	mov    al,0x15
  41e918:	retf   0x616c
  41e91b:	pop    ecx
  41e91c:	xor    ah,BYTE PTR [edi+ebp*1+0x3c]
  41e920:	mov    ch,0x80
  41e922:	bound  ecx,QWORD PTR [ebx-0x2c]
  41e925:	dec    ebp
  41e926:	mov    ecx,eax
  41e928:	mov    ebp,0x865bf5e
  41e92d:	add    al,0x3e
  41e92f:	and    BYTE PTR [esi],ch
  41e931:	arpl   WORD PTR [ecx+0x2d],bp
  41e934:	stc    
  41e935:	jbe    0x41e8d1
  41e937:	mov    bh,0xfa
  41e939:	cmp    eax,0x3c2da0f2
  41e93e:	fstp   DWORD PTR [esi-0x6be15d49]
  41e944:	cdq    
  41e945:	sbb    bl,BYTE PTR ds:0x28d7ded9
  41e94b:	push   ss
  41e94c:	xchg   edi,eax
  41e94d:	in     al,0x68
  41e94f:	lods   eax,DWORD PTR ds:[esi]
  41e950:	popf   
  41e951:	xor    eax,0xf3ce1ce7
  41e956:	loopne 0x41e8f4
  41e958:	ror    DWORD PTR [ebx+ebp*4+0x15],cl
  41e95c:	mov    ds:0x4403395f,al
  41e961:	jl     0x41e925
  41e963:	test   DWORD PTR [ecx],ebx
  41e965:	in     al,dx
  41e966:	sub    al,0x3c
  41e968:	mov    bh,0xd2
  41e96a:	out    0xf5,al
  41e96c:	xchg   esp,eax
  41e96d:	add    DWORD PTR [esi],ecx
  41e96f:	adc    esi,DWORD PTR [ecx+ecx*1+0x998e341]
  41e976:	or     DWORD PTR [ecx-0x60],edi
  41e979:	sbb    eax,0x7770e811
  41e97e:	cld    
  41e97f:	call   0xb5e9:0x28358f9d
  41e986:	icebp  
  41e987:	jmp    FWORD PTR [ebp+ebx*1+0x2fbe8b6d]
  41e98e:	popf   
  41e98f:	inc    ecx
  41e990:	lods   eax,DWORD PTR ds:[esi]
  41e991:	rcl    BYTE PTR [esi+0x1d83d7af],1
  41e997:	mov    eax,ds:0x87154ac2
  41e99c:	mov    ah,0x2
  41e99e:	mov    al,ds:0x15c456d0
  41e9a3:	mov    esp,DWORD PTR ds:0x33efa7d6
  41e9a9:	and    al,BYTE PTR [ebx-0x640d8fb9]
  41e9af:	jl     0x41e9c7
  41e9b1:	pop    es
  41e9b2:	and    al,0x15
  41e9b4:	mov    ebp,0x442e6665
  41e9b9:	das    
  41e9ba:	ret    
  41e9bb:	int3   
  41e9bc:	inc    eax
  41e9bd:	push   esp
  41e9be:	pop    edx
  41e9bf:	aaa    
  41e9c0:	sahf   
  41e9c1:	mov    ebp,DWORD PTR [esi-0x7658b14d]
  41e9c7:	mov    dh,0xe7
  41e9c9:	jae    0x41ea48
  41e9cb:	or     BYTE PTR [edx+0x278aa5f1],dh
  41e9d1:	push   esi
  41e9d2:	daa    
  41e9d3:	mov    cl,0xd
  41e9d5:	out    dx,al
  41e9d6:	lds    ebx,FWORD PTR [edi-0x2a2e1c5b]
  41e9dc:	aam    0x75
  41e9de:	cdq    
  41e9df:	retf   0xa744
  41e9e2:	out    0xcb,al
  41e9e4:	adc    DWORD PTR [ebp+0x1cf09d0],eax
  41e9ea:	dec    ebx
  41e9eb:	outs   dx,DWORD PTR ds:[esi]
  41e9ec:	popa   
  41e9ed:	push   ebp
  41e9ee:	xor    al,0x2d
  41e9f0:	dec    esi
  41e9f1:	jae    0x41e9a4
  41e9f3:	loope  0x41ea41
  41e9f5:	mov    ebp,0xea7ce8a4
  41e9fa:	in     al,dx
  41e9fb:	mov    WORD PTR [esi+0x20],fs
  41e9fe:	aas    
  41e9ff:	jl     0x41ea12
  41ea01:	mov    esp,0x68323a8
  41ea06:	sahf   
  41ea07:	pusha  
  41ea08:	adc    bl,BYTE PTR [edx]
  41ea0a:	je     0x41e9ff
  41ea0c:	test   eax,0x503a3a92
  41ea11:	ins    DWORD PTR es:[edi],dx
  41ea12:	stos   BYTE PTR es:[edi],al
  41ea13:	int    0x3d
  41ea15:	mov    eax,esp
  41ea17:	jge    0x41e9c3
  41ea19:	cld    
  41ea1a:	(bad)  [ecx]
  41ea1c:	lods   eax,DWORD PTR ds:[esi]
  41ea1d:	les    esi,FWORD PTR [ecx-0x5b0ed744]
  41ea23:	js     0x41e9b0
  41ea25:	push   es
  41ea26:	adc    BYTE PTR [ebx],ah
  41ea28:	retf   
  41ea29:	mov    ss,WORD PTR [ebx+eiz*2]
  41ea2c:	jp     0x41ea84
  41ea2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea2f:	ret    
  41ea30:	push   eax
  41ea31:	fnsave [eax+0x1e]
  41ea34:	sti    
  41ea35:	enter  0x7690,0x1b
  41ea39:	push   ecx
  41ea3a:	push   ds
  41ea3b:	std    
  41ea3c:	mov    al,ds:0xd977e015
  41ea41:	xchg   cl,al
  41ea43:	cmc    
  41ea44:	mov    bh,0xa7
  41ea46:	xchg   esp,eax
  41ea47:	arpl   WORD PTR [eax+0x4e86c661],si
  41ea4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea4e:	popf   
  41ea4f:	mov    ah,0x32
  41ea51:	call   0xcd6b:0x6bd03c62
  41ea58:	gs jecxz 0x41e9f6
  41ea5b:	sub    al,0xb5
  41ea5d:	cmp    ebp,ecx
  41ea5f:	xchg   edx,eax
  41ea60:	rcr    DWORD PTR [esi],cl
  41ea62:	(bad)  
  41ea64:	stos   DWORD PTR es:[edi],eax
  41ea65:	xchg   ecx,eax
  41ea66:	sbb    ah,ch
  41ea68:	cmp    dh,dh
  41ea6a:	pushf  
  41ea6b:	mov    ch,0xde
  41ea6d:	out    dx,al
  41ea6e:	call   0xef1d:0x1c23c2e6
  41ea75:	dec    ebx
  41ea76:	jnp    0x41ea7e
  41ea78:	or     BYTE PTR [eax],dh
  41ea7a:	xor    BYTE PTR ds:0x74b72c3,ah
  41ea80:	adc    ebx,DWORD PTR ds:0x12062f8
  41ea86:	pop    edi
  41ea87:	xor    bh,bl
  41ea89:	dec    ebx
  41ea8a:	xchg   ebp,eax
  41ea8b:	aaa    
  41ea8c:	jmp    0x245c:0x54ec65e2
  41ea93:	idiv   ebp
  41ea95:	(bad)  
  41ea96:	jecxz  0x41eb07
  41ea98:	jbe    0x41ea8e
  41ea9a:	(bad)  
  41ea9c:	cmp    eax,DWORD PTR [ecx+0x17]
  41ea9f:	mov    ch,0xe3
  41eaa1:	mov    edx,DWORD PTR [ebp-0x41]
  41eaa4:	xor    al,0x5e
  41eaa6:	nop
  41eaa7:	pop    esi
  41eaa8:	inc    esp
  41eaa9:	adc    ah,bl
  41eaab:	or     al,0xc
  41eaad:	in     al,dx
  41eaae:	out    0x51,al
  41eab0:	outs   dx,DWORD PTR ds:[esi]
  41eab1:	int    0x2
  41eab3:	mov    ebx,0x123a03fb
  41eab8:	add    edx,DWORD PTR ds:0xf64e2240
  41eabe:	dec    ecx
  41eabf:	test   DWORD PTR [edx],ebx
  41eac1:	mov    ecx,0x86cbce31
  41eac6:	fisttp DWORD PTR [esi]
  41eac8:	lea    eax,[eax+0x15]
  41eacb:	ins    DWORD PTR es:[edi],dx
  41eacc:	or     BYTE PTR [eax+0x75],bh
  41eacf:	inc    ebx
  41ead0:	push   0x306516f7
  41ead5:	scas   al,BYTE PTR es:[edi]
  41ead6:	push   ss
  41ead7:	cmp    DWORD PTR [ecx],esi
  41ead9:	out    dx,al
  41eada:	mov    cl,0x4c
  41eadc:	mov    eax,ds:0x5ada3571
  41eae1:	scas   al,BYTE PTR es:[edi]
  41eae2:	les    eax,FWORD PTR es:[ecx+0x38c697fb]
  41eae9:	inc    ebp
  41eaea:	inc    ebx
  41eaeb:	pop    ds
  41eaec:	mov    ds:0xc4e72b3a,eax
  41eaf1:	ud0    esi,DWORD PTR [edi+ebp*2-0x47dc43dd]
  41eaf9:	lds    edx,FWORD PTR [ecx-0x52]
  41eafc:	ja     0x41eb48
  41eafe:	in     al,dx
  41eaff:	and    eax,0xc30a7c06
  41eb04:	in     al,dx
  41eb05:	jnp    0x41eb2c
  41eb07:	loope  0x41eab3
  41eb09:	(bad)  
  41eb0a:	retf   
  41eb0b:	mov    al,0x1
  41eb0d:	pop    eax
  41eb0e:	dec    edi
  41eb0f:	and    BYTE PTR [ecx-0x66],al
  41eb12:	cmp    DWORD PTR [ebx+0x2c81c5a3],edi
  41eb18:	clc    
  41eb19:	xchg   edx,eax
  41eb1a:	int    0xc7
  41eb1c:	push   edi
  41eb1d:	jg     0x41eb09
  41eb1f:	es shr dh,cl
  41eb22:	icebp  
  41eb23:	sub    BYTE PTR [ebx+0x1afaa715],0x69
  41eb2a:	jmp    0x70ee:0x51c40803
  41eb31:	jbe    0x41eb56
  41eb33:	repz add al,0xa3
  41eb36:	pop    es
  41eb37:	mov    bh,0x5e
  41eb39:	jmp    0x41eb98
  41eb3b:	daa    
  41eb3c:	sbb    eax,0xc7b432d1
  41eb41:	ja     0x41eb0c
  41eb43:	ins    DWORD PTR es:[edi],dx
  41eb44:	les    esi,FWORD PTR [esi*8+0x53fc9cd2]
  41eb4b:	pop    es
  41eb4c:	pop    esp
  41eb4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb4e:	adc    BYTE PTR [edx+0x3442ad77],bh
  41eb54:	rcl    ch,0x67
  41eb57:	fsubr  st,st(5)
  41eb59:	mov    eax,ds:0x225cd19
  41eb5e:	fidiv  WORD PTR [edx+eiz*2+0x2f]
  41eb62:	mov    al,0x2d
  41eb64:	(bad)  
  41eb65:	retf   
  41eb66:	outs   dx,DWORD PTR ds:[esi]
  41eb67:	dec    edi
  41eb68:	cmp    BYTE PTR [edi-0xf],cl
  41eb6b:	and    cl,cl
  41eb6d:	sbb    bh,BYTE PTR [ecx-0x7f]
  41eb70:	sbb    al,0xaa
  41eb72:	test   al,0x12
  41eb74:	loope  0x41ebc3
  41eb76:	loopne 0x41ebed
  41eb78:	retf   0x34b9
  41eb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb7c:	lds    ebp,FWORD PTR [edi+0x4f]
  41eb7f:	push   edi
  41eb80:	addr16 mov ebx,0x2f6a54b3
  41eb86:	nop
  41eb87:	sti    
  41eb88:	add    BYTE PTR [edi+0x63f0187a],0xe2
  41eb8f:	in     eax,0x6
  41eb91:	cmc    
  41eb92:	ins    BYTE PTR es:[edi],dx
  41eb93:	inc    ebx
  41eb94:	aad    0xee
  41eb96:	hlt    
  41eb97:	iret   
  41eb98:	mov    bl,0xd
  41eb9a:	xor    cl,0xa5
  41eb9d:	(bad)  
  41eb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb9f:	ja     0x41eb6e
  41eba1:	loopne 0x41ec15
  41eba3:	and    ebx,ebp
  41eba5:	and    esi,eax
  41eba7:	les    ebp,FWORD PTR [ebx]
  41eba9:	icebp  
  41ebaa:	popa   
  41ebab:	sbb    DWORD PTR [ecx-0x78],eax
  41ebae:	and    ch,BYTE PTR [ecx-0x43]
  41ebb1:	push   esi
  41ebb2:	dec    eax
  41ebb3:	je     0x41eb7a
  41ebb5:	sbb    ch,bl
  41ebb7:	sar    DWORD PTR [edx+0xf5dd293],0x39
  41ebbe:	fsubp  st(5),st
  41ebc0:	dec    ebp
  41ebc1:	sti    
  41ebc2:	arpl   WORD PTR [edi+0x364fe64],sp
  41ebc8:	adc    cl,BYTE PTR [edi-0x2d]
  41ebcb:	jne    0x41ebb7
  41ebcd:	xor    esp,DWORD PTR [edx]
  41ebcf:	icebp  
  41ebd0:	xchg   ecx,eax
  41ebd1:	loop   0x41ebfd
  41ebd3:	fdiv   QWORD PTR [edx]
  41ebd5:	inc    DWORD PTR [edi+0x73]
  41ebd8:	jae    0x41ec15
  41ebda:	jbe    0x41eb78
  41ebdc:	daa    
  41ebdd:	das    
  41ebde:	cmp    dl,BYTE PTR [ecx]
  41ebe0:	das    
  41ebe1:	enter  0xb908,0x63
  41ebe5:	icebp  
  41ebe6:	(bad)  [ebp+0x70]
  41ebe9:	adc    ah,BYTE PTR [esi]
  41ebeb:	inc    edi
  41ebec:	inc    ecx
  41ebed:	mov    ds:0x2e34ee42,al
  41ebf2:	and    dh,BYTE PTR [edx-0x17af1d7e]
  41ebf8:	pop    edi
  41ebf9:	fs clc 
  41ebfb:	inc    eax
  41ebfc:	stc    
  41ebfd:	ret    0x5757
  41ec00:	cmp    dh,BYTE PTR [edi]
  41ec02:	adc    DWORD PTR [esi],edx
  41ec04:	pop    ds
  41ec05:	add    eax,0x12fa3cf7
  41ec0a:	ds ret 0xbef4
  41ec0e:	out    0x2b,al
  41ec10:	mov    ds:0xa80eaab4,al
  41ec15:	xchg   esi,eax
  41ec16:	retf   
  41ec17:	hlt    
  41ec18:	inc    esi
  41ec19:	xor    ebp,esi
  41ec1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1c:	inc    edi
  41ec1d:	call   0xc4d7:0xe5c2a27a
  41ec24:	mov    cl,cl
  41ec26:	mov    ebp,edx
  41ec28:	loopne 0x41ec4a
  41ec2a:	fist   DWORD PTR [edx+0x35]
  41ec2d:	repnz sbb al,0x3b
  41ec30:	shl    bh,0xde
  41ec33:	adc    DWORD PTR [ebx+esi*1+0xa824501],ecx
  41ec3a:	xor    BYTE PTR [eax-0x55],bh
  41ec3d:	stos   DWORD PTR es:[edi],eax
  41ec3e:	and    edx,DWORD PTR [ecx-0x310c3617]
  41ec44:	outs   dx,BYTE PTR ds:[esi]
  41ec45:	scas   al,BYTE PTR es:[edi]
  41ec46:	mov    ds:0xf2f15c3c,al
  41ec4b:	lea    edx,[edx-0x38]
  41ec4e:	jb     0x41ec31
  41ec50:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ec52:	inc    esp
  41ec53:	inc    edx
  41ec54:	mov    BYTE PTR ds:0x1192ea2e,0x38
  41ec5b:	pop    esi
  41ec5c:	jp     0x41ec93
  41ec5e:	clc    
  41ec5f:	xor    dh,BYTE PTR [ebx]
  41ec61:	ins    DWORD PTR es:[edi],dx
  41ec62:	pop    ecx
  41ec63:	lea    edi,[esi-0x28]
  41ec66:	xor    eax,0xbeb47584
  41ec6b:	inc    eax
  41ec6c:	ret    0x64ac
  41ec6f:	data16 adc dh,BYTE PTR [ebx]
  41ec72:	(bad)  
  41ec73:	pushf  
  41ec74:	mov    eax,ds:0xcdbe455c
  41ec79:	ds inc ecx
  41ec7b:	xchg   ebx,eax
  41ec7c:	push   0x7f
  41ec7e:	jno    0x41ecb7
  41ec80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec81:	inc    ebx
  41ec82:	dec    ecx
  41ec83:	dec    edi
  41ec84:	mov    ch,0x35
  41ec86:	cmp    eax,0x141aaced
  41ec8b:	(bad)  
  41ec8c:	mov    ds:0xcb697026,al
  41ec91:	into   
  41ec92:	jg     0x41ec9f
  41ec94:	(bad)  
  41ec95:	retf   
  41ec96:	push   eax
  41ec97:	cmp    eax,0xb4cb7df8
  41ec9c:	out    dx,eax
  41ec9d:	inc    ecx
  41ec9e:	jno    0x41ecdc
  41eca0:	mov    BYTE PTR [ebx+eiz*2],dh
  41eca3:	test   ecx,esp
  41eca5:	cmp    ch,BYTE PTR [ebp-0x28da73bd]
  41ecab:	(bad)  
  41ecac:	cmp    DWORD PTR [ecx-0x3f],esp
  41ecaf:	add    BYTE PTR ss:[ebp+0x19036abc],ch
  41ecb6:	pusha  
  41ecb7:	pop    edx
  41ecb8:	(bad)  
  41ecb9:	mov    esp,0x6b2b0e72
  41ecbe:	imul   esp,DWORD PTR [ebx-0x4a8cec67],0xffffffe7
  41ecc5:	mov    edx,0xb770a310
  41ecca:	stos   DWORD PTR es:[edi],eax
  41eccb:	fistp  QWORD PTR [ecx]
  41eccd:	mov    WORD PTR [edx+0x3e],ss
  41ecd0:	in     eax,0xd
  41ecd2:	pop    ecx
  41ecd3:	clc    
  41ecd4:	and    ecx,DWORD PTR [ebp+0x52]
  41ecd7:	test   BYTE PTR [ecx],bl
  41ecd9:	nop
  41ecda:	jno    0x41ec72
  41ecdc:	fnsave [edx+0xcc43179]
  41ece2:	jo     0x41ec97
  41ece4:	pop    edx
  41ece5:	loope  0x41ece2
  41ece7:	push   0x6d7ca3b9
  41ecec:	adc    eax,0x9e1739a3
  41ecf1:	sbb    al,0x6
  41ecf3:	(bad)  
  41ecf4:	jns    0x41eca2
  41ecf6:	pop    esp
  41ecf7:	fisub  DWORD PTR [edi-0x149f7505]
  41ecfd:	jns    0x41ecb3
  41ecff:	neg    edi
  41ed01:	dec    edx
  41ed02:	pop    ecx
  41ed03:	fdiv   DWORD PTR [esi+0x7c]
  41ed06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed07:	push   ss
  41ed08:	fwait
  41ed09:	out    dx,al
  41ed0a:	and    BYTE PTR [esi],cl
  41ed0c:	in     al,dx
  41ed0d:	cmc    
  41ed0e:	push   0xd9c89de5
  41ed13:	inc    edi
  41ed14:	xchg   edx,eax
  41ed15:	(bad)  
  41ed16:	jb     0x41ed46
  41ed18:	and    al,0x52
  41ed1a:	pop    ebp
  41ed1b:	pop    eax
  41ed1c:	jle    0x41ece8
  41ed1e:	cmp    eax,0x70f9d6cc
  41ed23:	ins    BYTE PTR es:[edi],dx
  41ed24:	repnz xchg ebx,eax
  41ed26:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ed28:	inc    esi
  41ed29:	mov    ch,0xe7
  41ed2b:	out    0xe1,eax
  41ed2d:	mov    WORD PTR [esi-0x5241d4a0],?
  41ed33:	pop    esi
  41ed34:	sti    
  41ed35:	loop   0x41ed08
  41ed37:	ss push esp
  41ed39:	pusha  
  41ed3a:	leave  
  41ed3b:	fprem  
  41ed3d:	mov    ds:0x92c32265,al
  41ed42:	jne    0x41ed9b
  41ed44:	xor    BYTE PTR [ecx],0xfc
  41ed47:	test   eax,0x395d5e8b
  41ed4c:	scas   eax,DWORD PTR es:[edi]
  41ed4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed4e:	push   ds
  41ed4f:	test   BYTE PTR ds:0x2884c934,ch
  41ed55:	stos   DWORD PTR es:[edi],eax
  41ed56:	mov    al,ds:0xfef06db1
  41ed5b:	mov    al,ds:0x5e58d1f8
  41ed60:	ja     0x41ed88
  41ed62:	rcl    BYTE PTR ds:0x5eaf6e,cl
  41ed68:	loope  0x41ed72
  41ed6a:	add    BYTE PTR [ebp-0x5bf92c54],ch
  41ed70:	popf   
  41ed71:	imul   eax,DWORD PTR [ebp+0x68305cb2],0xfffffff0
  41ed78:	sbb    ah,cl
  41ed7a:	cld    
  41ed7b:	push   es
  41ed7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed7d:	jb     0x41ed30
  41ed7f:	cwde   
  41ed80:	inc    ebp
  41ed81:	enter  0x6748,0x2a
  41ed85:	cmc    
  41ed86:	hlt    
  41ed87:	retf   0xbbfe
  41ed8a:	jmp    0xa33414ca
  41ed8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed90:	push   eax
  41ed91:	lods   eax,DWORD PTR ds:[esi]
  41ed92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed93:	or     al,0xb7
  41ed95:	or     eax,0x8d6ef208
  41ed9a:	outs   dx,BYTE PTR ds:[esi]
  41ed9b:	mov    dl,0xcf
  41ed9d:	fimul  WORD PTR [ebx-0x2d58b6a5]
  41eda3:	push   edi
  41eda4:	sub    ah,BYTE PTR [eax-0x5f9ebc07]
  41edaa:	push   ecx
  41edab:	and    al,0x28
  41edad:	leave  
  41edae:	aaa    
  41edaf:	aaa    
  41edb0:	shl    ebp,0xe8
  41edb3:	fisttp DWORD PTR [si]
  41edb6:	and    BYTE PTR [edi+0x7a],ch
  41edb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edba:	and    BYTE PTR [eax-0x62],dh
  41edbd:	cmp    DWORD PTR [edx],ebp
  41edbf:	aad    0x57
  41edc1:	test   al,0x7
  41edc3:	pop    esp
  41edc4:	mov    edi,0x4622365c
  41edc9:	(bad)
  41edcc:	test   eax,0x81f55917
  41edd1:	(bad)  
  41edd4:	mov    ecx,DWORD PTR ss:[esi-0x67b7ac0b]
  41eddb:	pop    edx
  41eddc:	imul   edx,DWORD PTR [esi+0x55],0xd3f7522c
  41ede3:	jp     0x41ed70
  41ede5:	inc    ebx
  41ede6:	mov    bl,BYTE PTR [edi]
  41ede8:	mov    cl,BYTE PTR [ebx+0xc28b740]
  41edee:	mov    al,0x37
  41edf0:	sbb    esi,DWORD PTR [ebp-0x7cc4ffec]
  41edf6:	(bad)  
  41edf7:	xor    BYTE PTR [edi-0x4f065600],bl
  41edfd:	mov    DWORD PTR [edi+esi*8+0x3af0bea2],edx
  41ee04:	popa   
  41ee05:	lods   eax,DWORD PTR ds:[esi]
  41ee06:	mov    al,ds:0xf880e86e
  41ee0b:	add    al,0x5
  41ee0d:	xor    al,0xb1
  41ee0f:	mov    al,0xe2
  41ee11:	in     al,0x10
  41ee13:	cs cld 
  41ee15:	mov    edx,0x98a02cac
  41ee1a:	scas   al,BYTE PTR es:[edi]
  41ee1b:	cmovbe ebp,DWORD PTR [ecx]
  41ee1e:	pop    es
  41ee1f:	add    edi,DWORD PTR [edi-0x13]
  41ee22:	push   esp
  41ee23:	inc    esp
  41ee24:	pop    edi
  41ee25:	push   ebp
  41ee26:	pop    eax
  41ee27:	mov    ah,0xd2
  41ee29:	mov    ebx,0x9924e8c0
  41ee2e:	jno    0x41edfd
  41ee30:	loope  0x41edb2
  41ee32:	lods   eax,DWORD PTR ds:[esi]
  41ee33:	xor    dh,BYTE PTR [eax+ebp*8+0x69]
  41ee37:	or     BYTE PTR [eax+edx*2+0x27cf5109],0xb3
  41ee3f:	push   cs
  41ee40:	dec    ebp
  41ee41:	or     edi,ebx
  41ee43:	cmovle ecx,DWORD PTR [ebx+0x4c34adb1]
  41ee4a:	and    DWORD PTR [eax],ecx
  41ee4c:	sbb    dl,ah
  41ee4e:	call   0xa0bc:0xc2f7d25
  41ee55:	cmp    eax,0xbb2077d6
  41ee5a:	mov    eax,0x2e1fdf7e
  41ee5f:	adc    ebx,DWORD PTR [ebx-0x63e0a7c9]
  41ee65:	call   0xcbae:0xf93fbfda
  41ee6c:	or     eax,0x1add60d1
  41ee71:	lods   al,BYTE PTR ds:[esi]
  41ee72:	add    bh,BYTE PTR [edi]
  41ee74:	xor    DWORD PTR [ecx],edx
  41ee76:	sub    esi,DWORD PTR [ecx]
  41ee78:	std    
  41ee79:	out    0x77,eax
  41ee7b:	cdq    
  41ee7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee7d:	fld    QWORD PTR [ecx]
  41ee7f:	or     BYTE PTR [edx+0x6361e30f],0x68
  41ee86:	loopne 0x41ee28
  41ee88:	push   eax
  41ee89:	add    eax,0xe10e75ed
  41ee8e:	in     al,dx
  41ee8f:	mov    bh,0x7c
  41ee91:	test   DWORD PTR [ebp+0x5fd7be9a],edx
  41ee97:	(bad)  
  41ee98:	mov    WORD PTR [ebp-0x1ad0fee],ds
  41ee9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee9f:	xlat   BYTE PTR ds:[ebx]
  41eea0:	inc    esp
  41eea1:	jb     0x41eee3
  41eea3:	call   0xa0e9c4e0
  41eea8:	outs   dx,DWORD PTR ds:[esi]
  41eea9:	pop    ss
  41eeaa:	jmp    0x41ee75
  41eeac:	adc    BYTE PTR [edx+0x23],dh
  41eeaf:	lahf   
  41eeb0:	sub    dh,bl
  41eeb2:	dec    ebx
  41eeb3:	cdq    
  41eeb4:	sub    DWORD PTR [eax-0x545ae7a3],0x593fad36
  41eebe:	dec    edx
  41eebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eec0:	imul   edx,ebp,0xc426382c
  41eec6:	mov    edx,DWORD PTR [eax+0x7]
  41eec9:	(bad)  
  41eeca:	fnstenv [eax-0xede0449]
  41eed0:	cdq    
  41eed1:	pop    ss
  41eed2:	sbb    al,0x1
  41eed4:	inc    ebx
  41eed5:	pop    edi
  41eed6:	adc    al,0xf2
  41eed8:	dec    esi
  41eed9:	test   BYTE PTR [edi-0x1d6419b8],bl
  41eedf:	add    eax,eax
  41eee1:	cs loop 0x41eeab
  41eee4:	out    dx,eax
  41eee5:	js     0x41ee99
  41eee7:	lods   al,BYTE PTR ds:[esi]
  41eee8:	sbb    bl,BYTE PTR [ecx]
  41eeea:	cmp    BYTE PTR [edx+0x333ea4a8],0x54
  41eef1:	push   0xffffffa3
  41eef3:	dec    esp
  41eef4:	jae    0x41ef5f
  41eef6:	arpl   WORD PTR [ecx],si
  41eef8:	aad    0x7a
  41eefa:	ret    
  41eefb:	dec    eax
  41eefc:	mov    ebp,0xdceab0d5
  41ef01:	fist   WORD PTR [ecx]
  41ef03:	stc    
  41ef04:	and    eax,0x44f125c4
  41ef09:	xor    eax,DWORD PTR [edi+0x28]
  41ef0c:	pop    ecx
  41ef0d:	xchg   ebp,eax
  41ef0e:	push   es
  41ef0f:	shl    edi,1
  41ef11:	jmp    0x5c00:0xe215657e
  41ef18:	test   eax,0x28ffb7b8
  41ef1d:	shr    cl,1
  41ef1f:	lea    esp,ds:0xcf6c96df
  41ef25:	(bad)  
  41ef26:	in     al,0xd9
  41ef28:	push   ss
  41ef29:	hlt    
  41ef2a:	enter  0x7e1e,0x8f
  41ef2e:	mov    edi,DWORD PTR [edx-0x3d321891]
  41ef34:	add    esp,DWORD PTR [eax-0x3eede360]
  41ef3a:	jb     0x41eed0
  41ef3c:	inc    esi
  41ef3d:	retf   0x7d72
  41ef40:	setge  BYTE PTR [eax-0x27]
  41ef44:	hlt    
  41ef45:	push   ecx
  41ef46:	inc    BYTE PTR [ebx+0x77c79e10]
  41ef4c:	mov    ah,BYTE PTR [ebp+0x38]
  41ef4f:	sub    ecx,DWORD PTR [edx-0x3ed4015c]
  41ef55:	push   0xb81f608f
  41ef5a:	pop    eax
  41ef5b:	mov    dl,0x38
  41ef5d:	pushf  
  41ef5e:	pop    es
  41ef5f:	add    BYTE PTR [ebp-0x64e978d0],dl
  41ef65:	psubd  mm5,QWORD PTR [ecx+0x642c0ef0]
  41ef6c:	mov    bl,0xc6
  41ef6e:	mov    ch,0x6a
  41ef70:	pop    esp
  41ef71:	pop    eax
  41ef72:	mov    DWORD PTR [esp+eax*8-0x6e36b541],esp
  41ef79:	clc    
  41ef7a:	push   es
  41ef7b:	dec    edx
  41ef7c:	stos   BYTE PTR es:[edi],al
  41ef7d:	fsubr  QWORD PTR [edx-0x35]
  41ef80:	mov    esp,0xa23284d6
  41ef85:	and    eax,0xae721fe1
  41ef8a:	ret    0xe1bc
  41ef8d:	(bad)  
  41ef8f:	icebp  
  41ef90:	xchg   esi,eax
  41ef91:	cmp    esp,DWORD PTR [ecx-0x65]
  41ef94:	js     0x41ef54
  41ef96:	test   DWORD PTR [ebx+ecx*4+0x2e65bb10],ecx
  41ef9d:	dec    ebp
  41ef9e:	mov    cr0,eax
  41efa1:	gs xchg esi,eax
  41efa3:	xchg   ecx,eax
  41efa4:	dec    esp
  41efa5:	adc    esp,edx
  41efa7:	fdiv   QWORD PTR [ebx+0x30]
  41efaa:	xchg   DWORD PTR [ebx+0x5c],ecx
  41efad:	sub    al,0x9
  41efaf:	les    esp,FWORD PTR [ebx+ecx*4+0x5]
  41efb3:	cmp    al,0xf6
  41efb5:	gs ds mov esi,0x52a6040f
  41efbc:	or     bh,BYTE PTR [eax-0x77]
  41efbf:	shr    BYTE PTR [edx+0x4ac7ecf3],1
  41efc5:	ret    0xdb2b
  41efc8:	stos   DWORD PTR es:[edi],eax
  41efc9:	jle    0x41efbb
  41efcb:	fwait
  41efcc:	cmp    DWORD PTR [edx-0x22a8b12f],ecx
  41efd2:	jg     0x41f008
  41efd4:	xchg   esi,eax
  41efd5:	or     esi,DWORD PTR [eax+0x5954b297]
  41efdb:	add    eax,0x9796286d
  41efe0:	jb     0x41ef85
  41efe2:	inc    ebx
  41efe3:	pop    DWORD PTR [esp+ebp*2]
  41efe6:	popa   
  41efe7:	addr16 pusha 
  41efe9:	push   esi
  41efea:	std    
  41efeb:	sbb    ah,cl
  41efed:	scas   eax,DWORD PTR es:[edi]
  41efee:	push   ecx
  41efef:	arpl   WORD PTR [ebp+eax*1-0x6a],dx
  41eff3:	pusha  
  41eff4:	arpl   WORD PTR [edi+0x71],dx
  41eff7:	lods   eax,DWORD PTR ds:[esi]
  41eff8:	lahf   
  41eff9:	stos   BYTE PTR es:[edi],al
  41effa:	outs   dx,DWORD PTR ds:[esi]
  41effb:	(bad)  
  41effd:	cmp    DWORD PTR [edx],esi
  41efff:	inc    edi
  41f000:	pop    ss
  41f001:	pop    edx
  41f002:	stos   BYTE PTR es:[edi],al
  41f003:	add    cl,BYTE PTR [ecx-0x3b6c48af]
  41f009:	in     al,dx
  41f00a:	add    BYTE PTR [eax-0x48cb87c4],cl
  41f010:	mov    edx,0x56ecd03d
  41f015:	mov    DWORD PTR [edx+0x42],ecx
  41f018:	push   esi
  41f019:	xor    ecx,esp
  41f01b:	nop
  41f01c:	push   edx
  41f01d:	xchg   ebp,eax
  41f01e:	nop
  41f01f:	add    ecx,esi
  41f021:	dec    ecx
  41f022:	fmul   st(5),st
  41f024:	imul   edx
  41f026:	mov    edx,0x75b83fb8
  41f02b:	push   ebp
  41f02c:	popa   
  41f02d:	in     al,dx
  41f02e:	sbb    eax,0x928a2e55
  41f033:	dec    ecx
  41f035:	mov    ds:0x3155437c,al
  41f03a:	shr    BYTE PTR [edx],0x75
  41f03d:	ret    0x4b53
  41f040:	xor    bl,ah
  41f042:	stc    
  41f043:	or     al,0x84
  41f045:	or     ch,0xf3
  41f048:	mov    cl,0x52
  41f04a:	inc    ebx
  41f04b:	pushf  
  41f04c:	pushf  
  41f04d:	xchg   ecx,eax
  41f04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f04f:	mov    edi,0xe4db11b1
  41f054:	loop   0x41f06c
  41f056:	add    DWORD PTR [edx+esi*8+0xbced167],esp
  41f05d:	sbb    edi,esi
  41f05f:	daa    
  41f060:	sub    BYTE PTR [ecx+0x45],bl
  41f063:	jo     0x41f04d
  41f065:	fcmovne st,st(5)
  41f067:	pusha  
  41f068:	out    0xf5,eax
  41f06a:	xchg   BYTE PTR [esi-0x23],dh
  41f06d:	push   cs
  41f06e:	pop    ebx
  41f06f:	or     DWORD PTR [eax-0x2fafce6b],0x3f
  41f076:	aas    
  41f077:	jno    0x41f0c2
  41f079:	cmp    eax,0xa68fda38
  41f07e:	pop    eax
  41f07f:	test   al,0x14
  41f081:	pop    ebx
  41f082:	or     ah,dl
  41f084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f085:	push   edi
  41f086:	jo     0x41f064
  41f088:	mov    cs,WORD PTR [edx-0x5691cbf0]
  41f08e:	in     eax,dx
  41f08f:	pop    eax
  41f090:	dec    esi
  41f091:	fs push ebp
  41f093:	pushf  
  41f094:	repnz (bad) 
  41f096:	out    0xcd,al
  41f098:	jno    0x41f042
  41f09a:	in     al,0x76
  41f09c:	fstp   DWORD PTR ds:0xfe17978d
  41f0a2:	mov    edi,0x42733492
  41f0a7:	sub    eax,0x5746d98b
  41f0ac:	inc    esp
  41f0ad:	fwait
  41f0ae:	std    
  41f0af:	pop    esp
  41f0b0:	inc    edx
  41f0b1:	ins    BYTE PTR es:[edi],dx
  41f0b2:	add    ebx,DWORD PTR ds:0x87f50504
  41f0b8:	fs inc esp
  41f0ba:	jbe    0x41f111
  41f0bc:	lods   eax,DWORD PTR ds:[esi]
  41f0bd:	pop    ss
  41f0be:	jbe    0x41f073
  41f0c0:	jno    0x41f060
  41f0c2:	xor    edi,DWORD PTR [esi-0x35]
  41f0c5:	loopne 0x41f093
  41f0c7:	js     0x41f052
  41f0c9:	je     0x41f095
  41f0cb:	mov    BYTE PTR [ecx-0x13f23c2c],bl
  41f0d1:	sub    dh,ch
  41f0d3:	jp     0x41f11f
  41f0d5:	data16 or al,0x3e
  41f0d8:	push   edi
  41f0d9:	dec    ebx
  41f0da:	push   0xdd4129e9
  41f0df:	hlt    
  41f0e0:	popa   
  41f0e1:	ins    BYTE PTR es:[edi],dx
  41f0e2:	jb     0x41f0a2
  41f0e4:	mov    es,WORD PTR [esi-0x76]
  41f0e7:	xor    BYTE PTR [edi],cl
  41f0e9:	pop    ecx
  41f0ea:	test   BYTE PTR [edx-0x41],bh
  41f0ed:	lods   al,BYTE PTR ds:[esi]
  41f0ee:	xchg   BYTE PTR [edi],ch
  41f0f0:	push   es
  41f0f1:	mov    ?,WORD PTR [ebx+esi*4-0x13]
  41f0f5:	xor    BYTE PTR [eax-0xe],dl
  41f0f8:	not    BYTE PTR [ecx+0x5b7a6c83]
  41f0fe:	xlat   BYTE PTR ds:[ebx]
  41f0ff:	test   edi,ecx
  41f101:	ja     0x41f0ab
  41f103:	ret    0xba9e
  41f106:	push   ebx
  41f107:	pop    esp
  41f108:	push   0xaf91f88f
  41f10d:	push   ebx
  41f10e:	ss (bad) 
  41f110:	les    esi,FWORD PTR [ebp-0x73]
  41f113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f114:	mov    al,ds:0xaff6d201
  41f119:	and    al,0xe5
  41f11b:	cwde   
  41f11c:	pushf  
  41f11d:	fbld   TBYTE PTR [esi+0x58]
  41f120:	(bad)
  41f124:	sub    al,0x90
  41f126:	dec    ebp
  41f127:	nop
  41f128:	(bad)  
  41f129:	xor    DWORD PTR [eax+0x24e022be],eax
  41f12f:	jae    0x41f184
  41f131:	jbe    0x41f199
  41f133:	bound  edi,QWORD PTR [ecx+0x4f]
  41f136:	push   es
  41f137:	xchg   ecx,eax
  41f138:	inc    eax
  41f139:	push   esp
  41f13a:	and    BYTE PTR [edx-0x57],al
  41f13d:	add    bh,0xc4
  41f140:	cs call 0xcd17399d
  41f146:	sub    BYTE PTR [edi+0x51db7d21],ah
  41f14c:	push   edx
  41f14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14e:	pop    edx
  41f14f:	sub    ch,al
  41f151:	jmp    0x41f0fe
  41f153:	loop   0x41f0ff
  41f155:	cmp    eax,0xbfe44109
  41f15a:	jge    0x41f152
  41f15c:	sub    DWORD PTR [edx],0xffffff89
  41f15f:	bound  edi,QWORD PTR [ebx+0x10]
  41f162:	bt     DWORD PTR [ebp+0x1a07a83a],eax
  41f169:	fmul   st,st(7)
  41f16b:	xchg   WORD PTR [ebx],bx
  41f16e:	push   0x11
  41f170:	mov    al,0x39
  41f172:	not    BYTE PTR [ecx+0x302bcc02]
  41f178:	jnp    0x41f18e
  41f17a:	inc    DWORD PTR [eax+edi*4+0x48]
  41f17e:	add    dh,0xd7
  41f181:	mov    ds:0xe9347806,al
  41f186:	lahf   
  41f187:	pop    ss
  41f188:	je     0x41f209
  41f18a:	test   DWORD PTR [eax-0x5077bd6f],esp
  41f190:	data16 addr16 jp 0x41f125
  41f194:	pop    edi
  41f195:	fisttp QWORD PTR [esi+esi*2]
  41f198:	jb     0x41f1e4
  41f19a:	cmp    eax,0x4008352a
  41f19f:	mov    bl,0xf7
  41f1a1:	or     BYTE PTR [eax+eiz*4+0x4e],cl
  41f1a5:	in     al,0xbe
  41f1a7:	xchg   esi,eax
  41f1a8:	push   esp
  41f1a9:	test   edi,ebp
  41f1ab:	sub    eax,0x2365c194
  41f1b0:	pop    esp
  41f1b1:	dec    ebp
  41f1b2:	dec    esi
  41f1b3:	pusha  
  41f1b4:	or     al,0x85
  41f1b6:	jl     0x41f213
  41f1b8:	in     eax,0x42
  41f1ba:	(bad)  
  41f1bc:	mov    esp,DWORD PTR [edx+0x172b4bdd]
  41f1c2:	xor    BYTE PTR [esi-0xc9cb511],al
  41f1c8:	sub    al,0x19
  41f1ca:	out    dx,eax
  41f1cb:	mov    esi,0x99d65542
  41f1d0:	enter  0xbeb6,0xb3
  41f1d4:	push   es
  41f1d5:	aam    0xd8
  41f1d7:	(bad)  
  41f1d8:	ss inc eax
  41f1da:	or     esi,edx
  41f1dc:	jge    0x41f234
  41f1de:	dec    esi
  41f1df:	je     0x41f221
  41f1e1:	leave  
  41f1e2:	cmp    eax,0xe239199f
  41f1e7:	sbb    DWORD PTR [edi+0x7e],edi
  41f1ea:	(bad)  
  41f1ed:	dec    edx
  41f1ee:	pop    ecx
  41f1ef:	and    al,0x75
  41f1f1:	sub    DWORD PTR [edx],ebx
  41f1f3:	cmp    eax,0x644b6174
  41f1f8:	inc    eax
  41f1f9:	push   edi
  41f1fa:	(bad)  [esi]
  41f1fc:	jecxz  0x41f1c3
  41f1fe:	push   0x4c
  41f200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f201:	xchg   edi,eax
  41f202:	push   eax
  41f203:	pop    eax
  41f204:	aad    0x98
  41f206:	sub    DWORD PTR [ecx-0x7c40db53],0xffffffae
  41f20d:	out    0x4,eax
  41f20f:	and    al,0x2
  41f211:	fsub   DWORD PTR [esi-0xb]
  41f214:	sub    BYTE PTR [ebx+0x7e],al
  41f217:	(bad)  
  41f218:	jg     0x41f290
  41f21a:	fisubr WORD PTR [edi+0x7c]
  41f21d:	inc    esi
  41f21e:	lahf   
  41f21f:	push   ecx
  41f220:	mov    bh,0xa0
  41f222:	sub    edi,DWORD PTR [eax-0x2951c70e]
  41f228:	cs jg  0x41f257
  41f22b:	daa    
  41f22c:	pushf  
  41f22d:	sbb    al,0x7c
  41f22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f230:	retf   
  41f231:	ret    0x2cf1
  41f234:	mov    eax,DWORD PTR ds:0x5df609a9
  41f23a:	mov    bh,0xe5
  41f23c:	adc    eax,0x9304d00e
  41f241:	int    0x28
  41f243:	sbb    ecx,DWORD PTR [ecx+eax*1+0x3e4c8de6]
  41f24a:	mov    al,ds:0xf9b61880
  41f24f:	outs   dx,BYTE PTR ds:[esi]
  41f250:	mov    ah,0x10
  41f252:	xchg   ecx,ebp
  41f254:	test   DWORD PTR [ebx+0x5ba6a812],edx
  41f25a:	inc    edx
  41f25b:	and    esi,0xffffffe9
  41f25e:	sbb    al,0x7d
  41f260:	jb     0x41f287
  41f262:	or     eax,0x5f86b37c
  41f267:	sar    BYTE PTR [esi-0x6f],cl
  41f26a:	add    ah,BYTE PTR [eax-0x4f]
  41f26d:	dec    esi
  41f26e:	sbb    esi,DWORD PTR [esi-0x21]
  41f271:	push   cs
  41f272:	mov    BYTE PTR [ebx+0x4d],dl
  41f275:	aad    0x3b
  41f277:	sub    eax,0x5da7df3
  41f27c:	cwde   
  41f27d:	(bad)  
  41f27e:	pushf  
  41f27f:	or     BYTE PTR [edi+0x733fe697],ah
  41f285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f286:	cmp    al,0x1c
  41f288:	call   0x17fe487c
  41f28d:	idiv   BYTE PTR [esi+0x5]
  41f290:	jmp    0x6206:0xa4b20306
  41f297:	add    cl,BYTE PTR [edi-0x695fe077]
  41f29d:	das    
  41f29e:	cdq    
  41f29f:	adc    DWORD PTR [edx+0x3b667002],edi
  41f2a5:	adc    bl,BYTE PTR [edx]
  41f2a7:	adc    esi,ecx
  41f2a9:	enter  0xe87,0x8c
  41f2ad:	jae    0x41f30e
  41f2af:	cmc    
  41f2b0:	cld    
  41f2b1:	push   edx
  41f2b2:	cli    
  41f2b3:	xor    DWORD PTR [edx+0x5f],esi
  41f2b6:	sar    ch,cl
  41f2b8:	mov    esp,0x6a51fd41
  41f2bd:	xchg   BYTE PTR [edx+ebp*1-0x3d],ah
  41f2c1:	js     0x41f308
  41f2c3:	call   0xb43c8e65
  41f2c8:	jbe    0x41f313
  41f2ca:	mov    dh,BYTE PTR [ebx-0x2652e1df]
  41f2d0:	xchg   ebp,eax
  41f2d1:	lea    esi,[ecx+0x6f680dbf]
  41f2d7:	mov    esp,0x7fe39c2f
  41f2dc:	cmp    bl,bl
  41f2de:	jae    0x41f340
  41f2e0:	xchg   edx,eax
  41f2e1:	sbb    cl,BYTE PTR ds:0x8f6a09a0
  41f2e7:	mov    DWORD PTR [ecx],edi
  41f2e9:	mov    esp,0x6376d889
  41f2ee:	sbb    al,0x5b
  41f2f0:	mov    cl,0xe3
  41f2f2:	xchg   esi,eax
  41f2f3:	dec    ebx
  41f2f4:	mov    edi,0x7b036914
  41f2f9:	jge    0x41f375
  41f2fb:	repnz scas al,BYTE PTR es:[edi]
  41f2fd:	mov    dh,BYTE PTR [esi-0x2fd5194a]
  41f303:	lea    edi,[edi+0x40a82f3b]
  41f309:	push   ss
  41f30a:	dec    ebx
  41f30b:	test   al,0x94
  41f30d:	inc    eax
  41f30e:	scas   al,BYTE PTR es:[edi]
  41f30f:	je     0x41f326
  41f311:	jno    0x41f2d0
  41f313:	arpl   WORD PTR [eax],dx
  41f315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f316:	retf   
  41f317:	stos   BYTE PTR es:[edi],al
  41f318:	imul   esp,DWORD PTR [ebp+0xe],0x17f8bba5
  41f31f:	pop    eax
  41f320:	mov    edx,0xc0751122
  41f325:	cdq    
  41f326:	pop    ecx
  41f327:	das    
  41f328:	xor    ebp,DWORD PTR [ebp+0x26]
  41f32b:	push   esi
  41f32c:	sbb    ebx,edi
  41f32e:	cmp    DWORD PTR [ebp+0x203ce128],ebx
  41f334:	fwait
  41f335:	std    
  41f336:	fs push cs
  41f338:	sbb    al,0xe6
  41f33a:	or     esi,edi
  41f33c:	xchg   BYTE PTR [edi],ah
  41f33e:	rol    BYTE PTR ds:[esi],0xa5
  41f342:	inc    esi
  41f343:	push   ds
  41f344:	into   
  41f345:	in     al,dx
  41f346:	push   ecx
  41f347:	cmp    ecx,esi
  41f349:	gs add eax,eax
  41f34c:	icebp  
  41f34d:	add    esp,DWORD PTR [edi+ebx*4+0x511fce97]
  41f354:	clc    
  41f355:	xor    al,BYTE PTR [ebx-0x7c]
  41f358:	mov    ebx,0xf31601e8
  41f35d:	test   DWORD PTR ds:0xdcabd9fd,edx
  41f363:	(bad)  
  41f364:	pop    eax
  41f365:	ds aaa 
  41f367:	aam    0x35
  41f369:	dec    edx
  41f36a:	into   
  41f36b:	xor    al,0xea
  41f36d:	ins    DWORD PTR es:[edi],dx
  41f36e:	gs stos DWORD PTR es:[edi],eax
  41f370:	cmp    BYTE PTR [edx-0x71],0x9c
  41f374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f375:	scas   ax,WORD PTR es:[edi]
  41f377:	lahf   
  41f378:	ret    0xe74f
  41f37b:	out    0xbc,al
  41f37d:	cmp    DWORD PTR [edx],ecx
  41f37f:	scas   al,BYTE PTR es:[edi]
  41f380:	lock or cl,BYTE PTR [edi-0x4b]
  41f384:	ffreep st(3)
  41f386:	ins    DWORD PTR es:[edi],dx
  41f387:	repnz mov edi,0x70d5ebb4
  41f38d:	iret   
  41f38e:	icebp  
  41f38f:	mov    dl,0xad
  41f391:	into   
  41f392:	std    
  41f393:	xlat   BYTE PTR ds:[ebx]
  41f394:	(bad)  
  41f395:	into   
  41f396:	adc    dh,BYTE PTR [ebx-0x59]
  41f399:	psllw  mm3,mm6
  41f39c:	dec    ecx
  41f39d:	mov    ebx,DWORD PTR [ebp-0x67]
  41f3a0:	pop    ss
  41f3a1:	test   al,0x84
  41f3a3:	lahf   
  41f3a4:	inc    ebp
  41f3a5:	jmp    0x41f40c
  41f3a7:	xchg   edi,eax
  41f3a8:	nop
  41f3a9:	test   al,0xff
  41f3ab:	ins    BYTE PTR es:[edi],dx
  41f3ac:	fistp  QWORD PTR [edx-0x387ba4b0]
  41f3b2:	jl     0x41f371
  41f3b4:	aam    0x4c
  41f3b6:	adc    DWORD PTR [ebx+ebp*4],eax
  41f3b9:	inc    esi
  41f3ba:	pop    esp
  41f3bb:	shl    DWORD PTR [esi+0x76],1
  41f3be:	sub    BYTE PTR [esp+ebp*1],dh
  41f3c1:	int    0x28
  41f3c3:	mov    cl,0x82
  41f3c5:	dec    ebx
  41f3c6:	repnz clc 
  41f3c8:	and    DWORD PTR [esi-0x1c],esp
  41f3cb:	pop    eax
  41f3cc:	popa   
  41f3cd:	xlat   BYTE PTR ds:[ebx]
  41f3ce:	ins    DWORD PTR es:[edi],dx
  41f3cf:	push   ds
  41f3d0:	pop    esp
  41f3d1:	pop    esp
  41f3d2:	jno    0x41f35a
  41f3d4:	rcl    DWORD PTR [ebx+eax*1],1
  41f3d7:	push   0x105e15b5
  41f3dc:	xchg   ebx,eax
  41f3dd:	daa    
  41f3de:	in     al,dx
  41f3df:	dec    esi
  41f3e0:	jmp    0x41f3fa
  41f3e2:	add    eax,0x15827df5
  41f3e7:	cwde   
  41f3e8:	or     BYTE PTR [ebx+eax*8],al
  41f3eb:	pop    esi
  41f3ec:	into   
  41f3ed:	jbe    0x41f413
  41f3ef:	push   cs
  41f3f0:	sub    al,0x3d
  41f3f2:	in     al,0xea
  41f3f4:	call   0x9692:0x7518abde
  41f3fb:	scas   eax,DWORD PTR es:[edi]
  41f3fc:	cwde   
  41f3fd:	shr    cl,cl
  41f3ff:	shl    BYTE PTR [ebp+0x417a14a2],1
  41f405:	cmp    DWORD PTR [ecx+eiz*2],edx
  41f408:	fsubr  DWORD PTR [edi-0x69e1b105]
  41f40e:	ins    DWORD PTR es:[edi],dx
  41f40f:	sub    al,0x1c
  41f411:	ret    0x8
  41f414:	scas   eax,DWORD PTR es:[edi]
  41f415:	in     eax,0xa6
  41f417:	retf   
  41f418:	pop    ebp
  41f419:	jbe    0x41f3ed
  41f41b:	iret   
  41f41c:	jp     0x41f495
  41f41e:	add    eax,edi
  41f420:	daa    
  41f421:	mov    dl,0x19
  41f423:	adc    ch,BYTE PTR [ebx]
  41f425:	ins    DWORD PTR es:[edi],dx
  41f426:	xor    cl,BYTE PTR ds:0xb7b05251
  41f42c:	add    eax,0x60edff3
  41f431:	ja     0x41f44f
  41f433:	in     eax,0xb6
  41f435:	mov    ebx,0x1c37495d
  41f43a:	ror    BYTE PTR ds:0xe5f40a92,cl
  41f440:	xor    dl,BYTE PTR [eax-0x3f]
  41f443:	outs   dx,DWORD PTR ds:[esi]
  41f444:	cld    
  41f445:	jne    0x41f3e4
  41f447:	pop    esp
  41f448:	dec    edx
  41f449:	jp     0x41f49a
  41f44b:	mov    ebp,0x1d3db9bd
  41f450:	fisubr WORD PTR [ecx+0x1b]
  41f453:	sub    al,0x19
  41f455:	mov    ah,0x19
  41f457:	mov    ch,0x1c
  41f459:	fisub  WORD PTR [ebp+0x4830b125]
  41f45f:	adc    BYTE PTR [edi+0x769ea372],bh
  41f465:	jne    0x41f415
  41f467:	jbe    0x41f466
  41f469:	shl    DWORD PTR [edx],0x14
  41f46c:	pusha  
  41f46d:	sub    cl,BYTE PTR [edi+0x7936ee95]
  41f473:	sbb    BYTE PTR [ebx],bh
  41f475:	pop    es
  41f476:	pop    esp
  41f477:	xchg   BYTE PTR [esp+eax*1-0x29cd1579],bl
  41f47e:	mov    WORD PTR [edi-0x54],fs
  41f481:	clc    
  41f482:	xchg   ecx,eax
  41f483:	(bad)  
  41f484:	popf   
  41f485:	xor    eax,0xdfae818c
  41f48a:	sbb    BYTE PTR [ebp-0x492dc94a],al
  41f490:	jle    0x41f504
  41f492:	movaps xmm4,XMMWORD PTR [edx-0x1d]
  41f496:	jns    0x41f4af
  41f498:	jge    0x41f4ad
  41f49a:	inc    ecx
  41f49b:	in     al,dx
  41f49c:	retf   0x958b
  41f49f:	popf   
  41f4a0:	test   eax,0xe2a264ad
  41f4a5:	cld    
  41f4a6:	pop    es
  41f4a7:	sub    eax,0xd7b77a06
  41f4ac:	and    al,0xa
  41f4ae:	js     0x41f43b
  41f4b0:	ss in  eax,0x39
  41f4b3:	mov    ebp,0x3ed167da
  41f4b8:	and    eax,0x650f9519
  41f4bd:	pop    ss
  41f4be:	jle    0x41f446
  41f4c0:	mul    BYTE PTR [edx+0x309a25ce]
  41f4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c7:	ins    BYTE PTR es:[edi],dx
  41f4c8:	aas    
  41f4c9:	or     BYTE PTR [eax+ecx*8+0x78],ah
  41f4cd:	xlat   BYTE PTR ds:[ebx]
  41f4ce:	jo     0x41f52e
  41f4d0:	loopne 0x41f4fe
  41f4d2:	dec    edx
  41f4d3:	inc    edi
  41f4d4:	inc    ecx
  41f4d5:	jns    0x41f4f0
  41f4d7:	inc    esp
  41f4d8:	jge    0x41f45f
  41f4da:	(bad)  
  41f4db:	and    dl,bh
  41f4dd:	jmp    0x9001:0xb87028a8
  41f4e4:	xchg   esp,eax
  41f4e5:	js     0x41f4ae
  41f4e7:	(bad)  
  41f4e8:	idiv   DWORD PTR [esi-0x78]
  41f4eb:	jns    0x41f476
  41f4ed:	dec    eax
  41f4ee:	dec    edi
  41f4ef:	addr16 mov esi,0xc9a88097
  41f4f5:	test   eax,0xf7d8ae10
  41f4fa:	cmp    bl,BYTE PTR [ecx]
  41f4fc:	pusha  
  41f4fd:	jb     0x41f4c0
  41f4ff:	xor    BYTE PTR [ebx+0x2caa95f7],0x76
  41f506:	sub    BYTE PTR [eax+0x59],dh
  41f509:	stos   DWORD PTR es:[edi],eax
  41f50a:	sub    ch,ch
  41f50c:	icebp  
  41f50d:	sub    dl,cl
  41f50f:	jl     0x41f54f
  41f511:	push   0xb54a0ab8
  41f516:	xchg   edx,eax
  41f517:	out    0x69,eax
  41f519:	pop    esp
  41f51a:	repnz cli 
  41f51c:	shr    bl,0x2f
  41f51f:	and    eax,DWORD PTR [ebx]
  41f521:	repz xchg ecx,eax
  41f523:	iret   
  41f524:	int3   
  41f525:	pop    edx
  41f526:	cld    
  41f527:	add    BYTE PTR [edi+0x4f],ch
  41f52a:	into   
  41f52b:	jecxz  0x41f555
  41f52d:	aaa    
  41f52e:	push   esi
  41f52f:	xchg   esp,eax
  41f530:	fwait
  41f531:	rcl    ebp,1
  41f533:	adc    al,0x56
  41f535:	adc    ecx,DWORD PTR [ecx-0x66b6dfde]
  41f53b:	sti    
  41f53c:	cmp    ch,al
  41f53e:	fwait
  41f53f:	push   edi
  41f540:	jmp    0x41f500
  41f542:	sub    BYTE PTR [eax+0x7b94d6e2],0x4e
  41f549:	gs sti 
  41f54b:	add    edi,DWORD PTR [eax]
  41f54d:	out    dx,al
  41f54e:	sub    eax,0xde92a891
  41f553:	cwde   
  41f554:	shl    BYTE PTR [esi],1
  41f556:	push   es
  41f557:	call   0x9c91a794
  41f55c:	test   eax,0x40f65b41
  41f561:	sbb    ch,BYTE PTR [edi+0x16]
  41f564:	xor    DWORD PTR [esi+0x1df56ef3],0xffffffa4
  41f56b:	sub    edi,ecx
  41f56d:	adc    BYTE PTR [ebx],ch
  41f56f:	xchg   esi,eax
  41f570:	mov    dh,0x64
  41f572:	inc    ecx
  41f573:	and    esp,esi
  41f575:	mov    DWORD PTR [eax+0x474a6a43],esi
  41f57b:	aam    0x26
  41f57d:	shr    edx,0x52
  41f580:	push   eax
  41f581:	mov    ecx,gs
  41f583:	popf   
  41f584:	test   al,0x2b
  41f586:	jb     0x41f5cd
  41f588:	int3   
  41f589:	mov    bl,0x4d
  41f58b:	pop    ebx
  41f58c:	aas    
  41f58d:	sbb    edx,DWORD PTR [eax-0x76]
  41f590:	push   edx
  41f591:	cmp    BYTE PTR [edi+0x44],al
  41f594:	cli    
  41f595:	ins    BYTE PTR es:[edi],dx
  41f596:	mov    WORD PTR [edx],gs
  41f598:	jecxz  0x41f593
  41f59a:	into   
  41f59b:	and    eax,ebx
  41f59d:	add    eax,0x592e33ec
  41f5a2:	sbb    esi,DWORD PTR [eax+eiz*4-0x3c]
  41f5a6:	fistp  WORD PTR [ecx+ebx*8+0x2969ee7]
  41f5ad:	pusha  
  41f5ae:	stos   DWORD PTR es:[edi],eax
  41f5af:	jb     0x41f5cb
  41f5b1:	sbb    eax,0xe1579c8e
  41f5b6:	inc    edi
  41f5b7:	push   es
  41f5b8:	push   esp
  41f5b9:	push   ebx
  41f5ba:	popa   
  41f5bb:	(bad)  
  41f5bc:	(bad)  
  41f5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5be:	or     edx,DWORD PTR [ebp-0x29]
  41f5c1:	in     al,0x15
  41f5c3:	xor    DWORD PTR [ecx-0x627a8b5e],esi
  41f5c9:	into   
  41f5ca:	in     eax,0xf4
  41f5cc:	popa   
  41f5cd:	sub    dh,BYTE PTR [ecx]
  41f5cf:	clc    
  41f5d0:	sti    
  41f5d1:	push   ebp
  41f5d2:	out    dx,eax
  41f5d3:	fsubp  st(4),st
  41f5d5:	mov    al,ds:0xf54fdcb
  41f5da:	les    esi,FWORD PTR [ecx]
  41f5dc:	ins    BYTE PTR es:[edi],dx
  41f5dd:	ins    BYTE PTR es:[edi],dx
  41f5de:	out    dx,eax
  41f5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e0:	jge    0x41f5ed
  41f5e2:	std    
  41f5e3:	jns    0x41f64f
  41f5e5:	pop    esi
  41f5e6:	repnz pushf 
  41f5e8:	add    al,0x61
  41f5ea:	enter  0x673f,0xe3
  41f5ee:	lods   eax,DWORD PTR ds:[esi]
  41f5ef:	inc    edi
  41f5f0:	fwait
  41f5f1:	inc    eax
  41f5f2:	loope  0x41f5b0
  41f5f4:	aad    0x85
  41f5f6:	mov    BYTE PTR [eax-0xcfc88a7],bl
  41f5fc:	fdivr  DWORD PTR [edi+ebx*4]
  41f5ff:	mov    BYTE PTR [ebp+eiz*4-0x26],bh
  41f603:	sub    al,0xb0
  41f605:	les    ecx,FWORD PTR [ebp+eiz*2-0x79]
  41f609:	hlt    
  41f60a:	fidivr WORD PTR [ebx+ebx*2+0x2e]
  41f60e:	test   edx,ebx
  41f610:	cld    
  41f611:	jp     0x41f598
  41f613:	stos   DWORD PTR es:[edi],eax
  41f614:	inc    esi
  41f615:	test   al,0x76
  41f617:	lock jmp 0x7f65:0x509cb8db
  41f61f:	rcr    BYTE PTR [edx-0x22e6f46e],cl
  41f625:	or     al,BYTE PTR [edi]
  41f627:	jp     0x41f6a4
  41f629:	and    DWORD PTR [eax],ebp
  41f62b:	fbstp  TBYTE PTR [esi]
  41f62d:	xor    DWORD PTR [ebp+0x47],0xffffffa4
  41f631:	mov    ds:0xa14b333c,eax
  41f636:	fld    DWORD PTR [edi+0x2c]
  41f639:	inc    esp
  41f63a:	scas   al,BYTE PTR es:[edi]
  41f63b:	push   ebx
  41f63c:	and    DWORD PTR [ebx-0x5c],ebx
  41f63f:	std    
  41f640:	mov    edx,0x800d6dbf
  41f645:	or     al,0x94
  41f647:	(bad)  
  41f648:	std    
  41f649:	cmp    edi,DWORD PTR [ebp+0x50]
  41f64c:	jbe    0x41f69c
  41f64e:	push   eax
  41f64f:	in     al,0x19
  41f651:	or     ebx,DWORD PTR [ebx+0x59]
  41f654:	(bad)  
  41f655:	xor    BYTE PTR [edi],bl
  41f657:	sbb    al,0x38
  41f659:	mov    ds:0x9f9d8d90,eax
  41f65e:	ret    
  41f65f:	ja     0x41f6b2
  41f661:	add    ebp,DWORD PTR [ebp+ecx*8+0x58]
  41f665:	repz adc esi,edx
  41f668:	in     al,0xfc
  41f66a:	xor    cl,bl
  41f66c:	dec    edi
  41f66d:	mov    WORD PTR [edi],es
  41f66f:	popf   
  41f670:	xchg   edx,eax
  41f671:	arpl   WORD PTR [eax+0x13],sp
  41f674:	jne    0x41f646
  41f676:	(bad)  
  41f677:	ins    BYTE PTR es:[edi],dx
  41f678:	push   ss
  41f679:	jmp    0x625b49ad
  41f67e:	in     eax,dx
  41f67f:	call   0x4e61:0x89c34577
  41f686:	pop    ss
  41f687:	push   cs
  41f688:	sub    BYTE PTR ds:0x71f32aff,ah
  41f68e:	pushf  
  41f68f:	cmp    DWORD PTR [edx],edi
  41f691:	scas   al,BYTE PTR es:[edi]
  41f692:	mov    ecx,0xeac223b5
  41f697:	inc    esi
  41f698:	sub    eax,DWORD PTR [edi]
  41f69a:	cmp    BYTE PTR [edi+0x66],cl
  41f69d:	xchg   ecx,eax
  41f69e:	mov    bl,0xae
  41f6a0:	icebp  
  41f6a1:	imul   eax,esp,0x3d
  41f6a4:	inc    ecx
  41f6a5:	outs   dx,DWORD PTR ds:[esi]
  41f6a6:	scas   al,BYTE PTR es:[edi]
  41f6a7:	cli    
  41f6a8:	enter  0x9fe6,0xad
  41f6ac:	add    eax,0x47667666
  41f6b1:	inc    ebp
  41f6b2:	and    BYTE PTR [ecx-0x49],0xa0
  41f6b6:	daa    
  41f6b7:	sub    al,0x68
  41f6b9:	fdivr  QWORD PTR [ebx+0x35cd22bc]
  41f6bf:	sub    ebx,ebx
  41f6c1:	lea    ebp,[ebx]
  41f6c3:	call   0x16ac462d
  41f6c8:	push   cs
  41f6c9:	out    dx,al
  41f6ca:	out    0xea,eax
  41f6cc:	in     al,0x17
  41f6ce:	cmp    eax,0xdaa412cd
  41f6d3:	mov    eax,0x32cfdaee
  41f6d8:	ret    0xc258
  41f6db:	sub    edi,edi
  41f6dd:	mov    DWORD PTR [edi-0x44],edx
  41f6e0:	sbb    eax,0xd2d0499c
  41f6e5:	jl     0x41f75d
  41f6e7:	test   al,0xa7
  41f6e9:	rcl    BYTE PTR [edi],cl
  41f6eb:	push   ds
  41f6ec:	sub    dl,BYTE PTR [ecx+0x1ae84b81]
  41f6f2:	or     eax,0x4ec5eea6
  41f6f7:	ret    
  41f6f8:	push   0x1a87e2e6
  41f6fd:	rcl    DWORD PTR [edx-0x17],cl
  41f700:	adc    BYTE PTR [esi+ebx*2],bl
  41f703:	mov    ch,BYTE PTR [ebp-0x12]
  41f706:	popa   
  41f707:	lds    ecx,FWORD PTR [ecx-0x5df08b9]
  41f70d:	xor    DWORD PTR [ecx],ebx
  41f70f:	push   ds
  41f710:	mov    al,ds:0x8e9074d1
  41f715:	into   
  41f716:	pushf  
  41f717:	add    eax,0x277bd90a
  41f71c:	jmp    0xe004072a
  41f721:	dec    ebx
  41f722:	in     al,0xba
  41f724:	mov    bh,0xbb
  41f726:	ins    DWORD PTR es:[edi],dx
  41f727:	jne    0x41f795
  41f729:	pop    esp
  41f72a:	jno    0x41f6f5
  41f72c:	iret   
  41f72d:	ret    0xba6b
  41f730:	xor    eax,DWORD PTR [eax]
  41f732:	xchg   ebx,eax
  41f733:	pop    edx
  41f734:	adc    eax,0x18dee307
  41f739:	ss jle 0x41f751
  41f73c:	push   edi
  41f73d:	fimul  DWORD PTR [ecx]
  41f73f:	imul   esi,eax,0xffffff82
  41f742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f743:	rcr    DWORD PTR [eax+0x6c],cl
  41f746:	test   DWORD PTR [ecx-0x67f9599f],0x7cd3e313
  41f750:	nop
  41f751:	jb     0x41f78b
  41f753:	adc    DWORD PTR [eax-0x2b],0x35
  41f757:	pushf  
  41f758:	sbb    ebx,ecx
  41f75a:	ret    
  41f75b:	cs mov ebx,0xed7c306a
  41f761:	inc    edx
  41f762:	das    
  41f763:	inc    esp
  41f764:	(bad)  
  41f765:	out    dx,eax
  41f766:	sti    
  41f767:	retf   
  41f768:	xchg   BYTE PTR gs:[edi],ah
  41f76b:	sub    BYTE PTR [ebx+ebx*4],dl
  41f76e:	mov    dh,0x3a
  41f770:	add    eax,0x9862c9ce
  41f775:	leave  
  41f776:	stos   BYTE PTR es:[edi],al
  41f777:	out    0xd2,al
  41f779:	leave  
  41f77a:	pop    esp
  41f77b:	pop    ds
  41f77c:	out    0xca,al
  41f77e:	xchg   ecx,eax
  41f77f:	jne    0x41f75d
  41f781:	(bad)  
  41f782:	xchg   ebp,eax
  41f783:	xchg   ecx,ecx
  41f785:	fwait
  41f786:	cmp    eax,0xdccaefb1
  41f78b:	and    edi,DWORD PTR [edi]
  41f78d:	sbb    eax,0x688ac98c
  41f792:	or     al,0x57
  41f794:	bound  esp,QWORD PTR [eax+0x3f]
  41f797:	jno    0x41f7b3
  41f799:	cpuid  
  41f79b:	inc    ebx
  41f79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79d:	xor    ah,ah
  41f79f:	lea    esi,[eiz*2-0x51bd74cf]
  41f7a6:	mov    BYTE PTR [ecx+edx*8],bh
  41f7a9:	fild   DWORD PTR [ecx-0x79c62817]
  41f7af:	(bad)  
  41f7b0:	sbb    BYTE PTR ds:0x4aed3cfe,dh
  41f7b6:	mov    ds:0x72abbac7,al
  41f7bb:	pop    ecx
  41f7bc:	out    dx,al
  41f7bd:	add    BYTE PTR gs:[edi-0x72dc15b3],al
  41f7c4:	gs aas 
  41f7c6:	push   ecx
  41f7c7:	sahf   
  41f7c8:	stc    
  41f7c9:	ja     0x41f7d1
  41f7cb:	out    dx,al
  41f7cc:	jb     0x41f7d3
  41f7ce:	sbb    eax,0x5e26ec70
  41f7d3:	cdq    
  41f7d4:	stos   DWORD PTR es:[edi],eax
  41f7d5:	mov    ds:0x25e1da67,al
  41f7da:	pop    ss
  41f7db:	xchg   esp,eax
  41f7dc:	mov    ds:0x456da0db,al
  41f7e1:	pop    ds
  41f7e2:	stos   DWORD PTR es:[edi],eax
  41f7e3:	jno    0x41f821
  41f7e5:	mov    dl,0xd7
  41f7e7:	js     0x7adc8017
  41f7ed:	adc    al,0xeb
  41f7ef:	mov    al,ds:0x55e2da0a
  41f7f4:	mov    dl,0x5f
  41f7f6:	fistp  QWORD PTR [edx-0x54625ad7]
  41f7fc:	xor    al,0x1f
  41f7fe:	xor    cl,BYTE PTR [ebx]
  41f800:	or     DWORD PTR [ecx+eax*8-0x10620dcb],0xcfeb8200
  41f80b:	push   0xd219a52e
  41f810:	iret   
  41f811:	retf   0x218d
  41f814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f815:	inc    esi
  41f816:	mov    ah,0xfe
  41f818:	call   0x4b13883f
  41f81d:	xor    eax,0xa1e8484
  41f822:	jo     0x41f892
  41f824:	or     eax,0xe1dc7158
  41f829:	daa    
  41f82a:	pop    es
  41f82b:	cmp    edx,DWORD PTR [ecx]
  41f82d:	aam    0x1e
  41f82f:	or     eax,0xb664c69b
  41f834:	cmp    eax,0x4f6260e9
  41f839:	push   eax
  41f83a:	pop    esi
  41f83b:	pushf  
  41f83c:	cmp    dl,BYTE PTR [esi]
  41f83e:	jne    0x41f890
  41f840:	call   0x115a:0xb99a5d4d
  41f847:	and    bl,bl
  41f849:	loope  0x41f8c4
  41f84b:	loop   0x41f859
  41f84d:	jo     0x41f898
  41f84f:	cli    
  41f850:	adc    eax,0xd74272ce
  41f855:	std    
  41f856:	fldcw  WORD PTR ds:0x53e60a61
  41f85c:	leave  
  41f85d:	mov    dh,0xb6
  41f85f:	mov    al,0x4a
  41f861:	mov    eax,DWORD PTR [edi]
  41f863:	mov    ch,0xc8
  41f865:	(bad)  
  41f866:	cld    
  41f867:	ins    DWORD PTR es:[edi],dx
  41f868:	jno    0x41f8ac
  41f86a:	not    ebx
  41f86c:	adc    al,0x4
  41f86e:	outs   dx,DWORD PTR ds:[esi]
  41f86f:	pop    eax
  41f870:	push   edx
  41f871:	inc    edi
  41f872:	pop    esp
  41f873:	clc    
  41f874:	sub    bh,BYTE PTR es:[eax-0x65c4bec]
  41f87b:	mov    eax,0x1a3eba38
  41f880:	add    ch,BYTE PTR [edx+0x545a11f1]
  41f886:	jp     0x41f8f5
  41f888:	das    
  41f889:	cmc    
  41f88a:	test   eax,0x83bfdfaf
  41f88f:	mov    edi,edx
  41f891:	or     esp,edx
  41f893:	push   edx
  41f894:	adc    ebx,DWORD PTR cs:[edi-0x3970fab3]
  41f89b:	in     eax,dx
  41f89c:	lahf   
  41f89d:	and    al,0xd3
  41f89f:	enter  0x200c,0x12
  41f8a3:	nop    DWORD PTR [ecx]
  41f8a6:	ja     0x41f8bd
  41f8a8:	gs sti 
  41f8aa:	lods   al,BYTE PTR ds:[esi]
  41f8ab:	inc    esp
  41f8ac:	lods   eax,DWORD PTR ds:[esi]
  41f8ad:	mov    dl,0x23
  41f8af:	xchg   BYTE PTR [esi+0x75aca4d3],ch
  41f8b5:	bound  esi,QWORD PTR [esp+esi*2-0xf178bd4]
  41f8bc:	call   0x244a:0x1a9c90f4
  41f8c3:	popf   
  41f8c4:	(bad)  
  41f8c5:	ret    0x4cbf
  41f8c8:	icebp  
  41f8c9:	fwait
  41f8ca:	jne    0x41f890
  41f8cc:	out    0x44,al
  41f8ce:	pop    ebp
  41f8cf:	or     al,BYTE PTR [esp+ecx*2+0x6c]
  41f8d3:	push   cs
  41f8d4:	iret   
  41f8d5:	ds pop edi
  41f8d7:	int3   
  41f8d8:	inc    ebx
  41f8d9:	mov    esi,0xb5ef0f6
  41f8df:	and    BYTE PTR [edx-0x5cee97a0],cl
  41f8e5:	ret    
  41f8e6:	sbb    eax,0x9d2e510d
  41f8eb:	lds    esp,FWORD PTR ds:0x6b5c3ffc
  41f8f1:	ss fs dec ebp
  41f8f4:	mov    WORD PTR ds:0x7df10b7b,ds
  41f8fa:	sbb    DWORD PTR [ecx+0x2508e3e6],esi
  41f900:	mov    esi,0x78092518
  41f905:	repz mov esp,DWORD PTR [eax]
  41f908:	es retf 
  41f90a:	imul   ebx,DWORD PTR [eax-0x3c],0xffffffc5
  41f90e:	add    edx,esp
  41f910:	jb     0x41f986
  41f912:	mov    eax,0x9fdb87a4
  41f917:	and    dh,BYTE PTR [eax]
  41f919:	out    0x2b,eax
  41f91b:	push   ecx
  41f91c:	adc    BYTE PTR [esp+eiz*4],al
  41f91f:	cmp    bh,BYTE PTR [eax]
  41f921:	ss loopne 0x41f929
  41f924:	(bad)  
  41f925:	enter  0x926a,0xd6
  41f929:	je     0x41f93d
  41f92b:	out    dx,eax
  41f92c:	xchg   edi,eax
  41f92d:	ret    
  41f92e:	jle    0x41f934
  41f930:	push   es
  41f931:	cwde   
  41f932:	xchg   edi,eax
  41f933:	mov    bh,0xdc
  41f935:	mov    WORD PTR [eax-0x46f42e17],fs
  41f93b:	or     al,al
  41f93d:	xor    edx,DWORD PTR [edx+0x50]
  41f940:	cmp    BYTE PTR es:[edx],al
  41f943:	(bad)  
  41f944:	cmp    esi,DWORD PTR [ecx+0x28]
  41f947:	or     DWORD PTR [esi-0x7],ebx
  41f94a:	push   0x32
  41f94c:	nop
  41f94d:	adc    eax,DWORD PTR [edi+0x28daa73f]
  41f953:	pusha  
  41f954:	fdivp  st(5),st
  41f956:	and    DWORD PTR [edi-0x77],ebp
  41f959:	xor    eax,0x92bf7773
  41f95e:	cld    
  41f95f:	xchg   ecx,eax
  41f960:	inc    esi
  41f961:	int    0xde
  41f963:	or     edi,ebp
  41f965:	or     BYTE PTR [esi-0x2e2d6f86],bh
  41f96b:	add    BYTE PTR [eax],bh
  41f96d:	fisttp QWORD PTR [ebp-0x62]
  41f970:	rcl    ch,1
  41f972:	popa   
  41f973:	cs mov ebx,0xcc9ff2af
  41f979:	scas   al,BYTE PTR es:[edi]
  41f97a:	xor    ax,0xabaf
  41f97e:	dec    ebx
  41f97f:	les    ecx,FWORD PTR [esp+eax*2]
  41f982:	add    eax,0x63d96a37
  41f987:	imul   BYTE PTR [ebx]
  41f989:	(bad)  
  41f98a:	fnstenv ds:0x53f81273
  41f990:	pop    ds
  41f991:	lods   al,BYTE PTR ds:[esi]
  41f992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f993:	arpl   WORD PTR [ecx+ecx*8],bx
  41f996:	adc    cl,BYTE PTR [ebp-0x6ae8a7bf]
  41f99c:	adc    edx,DWORD PTR [ebp+0x49387bb1]
  41f9a2:	shr    DWORD PTR [esi-0x2f70a688],0xab
  41f9a9:	mov    esi,0xf968dfd8
  41f9ae:	and    BYTE PTR [ebp+0x510ae6ee],0x3a
  41f9b5:	push   edx
  41f9b6:	hlt    
  41f9b7:	test   al,0xa
  41f9b9:	cmp    esp,DWORD PTR [edx+0x2d]
  41f9bc:	jb     0x41f98b
  41f9be:	jo     0x41f98b
  41f9c0:	je     0x41f9db
  41f9c2:	push   0x3b
  41f9c4:	mov    esp,0xcae99933
  41f9c9:	gs in  al,0xf7
  41f9cc:	jg     0x41fa1c
  41f9ce:	mov    ah,0xa7
  41f9d0:	xlat   BYTE PTR ds:[ebx]
  41f9d1:	and    DWORD PTR [eax+0x6fdc159f],edi
  41f9d7:	retf   
  41f9d8:	cwde   
  41f9d9:	sti    
  41f9da:	call   0xbee190d4
  41f9df:	pop    ebp
  41f9e1:	mov    ds:0x6eae3f2b,al
  41f9e6:	popa   
  41f9e7:	adc    al,ah
  41f9e9:	mov    esp,0x9b447562
  41f9ee:	mov    esi,0xd5883404
  41f9f3:	xchg   ebx,eax
  41f9f4:	stc    
  41f9f5:	cli    
  41f9f6:	xchg   edi,eax
  41f9f7:	jns    0x41fa49
  41f9f9:	mov    ds:0x4699827e,eax
  41f9fe:	lahf   
  41f9ff:	jbe    0x41fa21
  41fa01:	sub    bh,dh
  41fa03:	xlat   BYTE PTR ds:[ebx]
  41fa04:	outs   dx,DWORD PTR ds:[esi]
  41fa05:	sub    eax,0x4c58649c
  41fa0a:	cwde   
  41fa0b:	jbe    0x41fa65
  41fa0d:	push   edx
  41fa0e:	push   es
  41fa0f:	(bad)  
  41fa10:	dec    edx
  41fa11:	xor    ecx,eax
  41fa13:	jecxz  0x41f9d2
  41fa15:	ins    DWORD PTR es:[edi],dx
  41fa16:	mov    cl,0x67
  41fa18:	jo     0x41fa93
  41fa1a:	daa    
  41fa1b:	scas   eax,DWORD PTR es:[edi]
  41fa1c:	sbb    al,0x1a
  41fa1e:	mov    ecx,0xf55c8e84
  41fa23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa24:	xchg   ebx,eax
  41fa25:	outs   dx,BYTE PTR ds:[esi]
  41fa26:	pop    edi
  41fa27:	ret    0x2633
  41fa2a:	nop
  41fa2b:	pop    ebp
  41fa2c:	lods   eax,DWORD PTR ds:[esi]
  41fa2d:	dec    edx
  41fa2e:	fst    DWORD PTR cs:[ecx-0x75]
  41fa32:	mov    ebx,0x4a13f5fa
  41fa37:	mov    WORD PTR [ebx+0x42d115db],fs
  41fa3d:	bound  ebx,QWORD PTR [ecx-0x3a35351]
  41fa43:	xchg   ebp,eax
  41fa44:	and    BYTE PTR [edi],al
  41fa46:	xor    DWORD PTR [edx-0x2c],edi
  41fa49:	push   0x17
  41fa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa4c:	hlt    
  41fa4d:	cmp    BYTE PTR [eax],dh
  41fa4f:	xchg   esp,eax
  41fa50:	dec    edi
  41fa51:	adc    al,dh
  41fa53:	xor    BYTE PTR [edi+0x7b91c727],dh
  41fa59:	hlt    
  41fa5a:	scas   eax,DWORD PTR es:[edi]
  41fa5b:	out    0x26,al
  41fa5d:	out    dx,eax
  41fa5e:	test   eax,0x6837dd51
  41fa63:	adc    eax,0xdaa7c602
  41fa68:	ins    DWORD PTR es:[edi],dx
  41fa69:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41fa6b:	arpl   WORD PTR [edx+0x77],sp
  41fa6e:	or     al,0xcb
  41fa70:	test   BYTE PTR [ebp+0x6a],dh
  41fa73:	push   ebx
  41fa74:	mov    al,ds:0xb00a957f
  41fa79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7a:	sti    
  41fa7b:	ret    0x4335
  41fa7e:	mov    DWORD PTR [edi-0x78045bc7],ebp
  41fa84:	cmp    al,0x36
  41fa86:	mov    ecx,0xec06da4c
  41fa8b:	xor    DWORD PTR [eax+0x40],ebx
  41fa8e:	sahf   
  41fa8f:	inc    esp
  41fa90:	inc    ecx
  41fa91:	inc    esi
  41fa92:	dec    esi
  41fa93:	popa   
  41fa94:	scas   al,BYTE PTR es:[edi]
  41fa95:	(bad)  
  41fa97:	fsubr  st(5),st
  41fa99:	leave  
  41fa9a:	out    0x77,eax
  41fa9c:	adc    BYTE PTR [ebx-0x255dd9a2],al
  41faa2:	xor    dh,BYTE PTR [eax]
  41faa4:	jne    0x41fadb
  41faa6:	(bad)  
  41faa7:	push   ecx
  41faa8:	mov    al,BYTE PTR [edi-0x47bc40db]
  41faae:	jae    0x41fac8
  41fab0:	xchg   ecx,eax
  41fab1:	push   ebp
  41fab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab3:	ins    BYTE PTR es:[edi],dx
  41fab4:	or     al,0x9d
  41fab6:	add    eax,0xbac154e4
  41fabb:	test   bh,dl
  41fabd:	or     eax,eax
  41fabf:	mov    edx,0xa1c5e7de
  41fac4:	retf   
  41fac5:	cdq    
  41fac6:	jl     0x41fa74
  41fac8:	xchg   edx,eax
  41fac9:	mov    DWORD PTR [ecx],esp
  41facb:	sbb    eax,0xebe5b52c
  41fad0:	mov    ah,0xfc
  41fad2:	int    0x14
  41fad4:	xor    BYTE PTR [edx-0x5bbc646c],bh
  41fada:	inc    eax
  41fadb:	sub    eax,0x433246b5
  41fae0:	test   ebx,0x518d6f47
  41fae6:	xor    al,0x33
  41fae8:	icebp  
  41fae9:	jg     0x41faaf
  41faeb:	jle    0x41fabf
  41faed:	xchg   BYTE PTR [edi+0x58],ch
  41faf0:	xchg   BYTE PTR [edx+0x25],cl
  41faf3:	ins    DWORD PTR es:[edi],dx
  41faf4:	test   al,0x92
  41faf6:	inc    ecx
  41faf7:	dec    ebp
  41faf8:	aaa    
  41faf9:	ja     0x41fb29
  41fafb:	aam    0x3
  41fafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fafe:	bnd jle 0x41fa82
  41fb01:	daa    
  41fb02:	push   edi
  41fb03:	imul   ecx,DWORD PTR [edi+0x67cc0d56],0x57e920dd
  41fb0d:	bound  ebx,QWORD PTR [bp+si+0x6]
  41fb11:	lea    esp,[ecx-0x29]
  41fb14:	sahf   
  41fb15:	fsubr  DWORD PTR [ebx+0x59]
  41fb18:	repnz sub esp,0x637cdee4
  41fb1f:	int    0xab
  41fb21:	xchg   BYTE PTR [esi-0x65608dc8],bl
  41fb27:	inc    esi
  41fb28:	jne    0x41fba6
  41fb2a:	push   ds
  41fb2b:	test   al,0x31
  41fb2d:	mov    al,ds:0x52cf8f05
  41fb32:	xor    al,ch
  41fb34:	inc    esi
  41fb35:	xlat   BYTE PTR ds:[ebx]
  41fb36:	adc    eax,0x5547ed90
  41fb3b:	test   DWORD PTR [ecx],edi
  41fb3d:	popa   
  41fb3e:	sahf   
  41fb3f:	pusha  
  41fb40:	add    dl,BYTE PTR [esi+0x2da0e862]
  41fb46:	fnstenv [ebx]
  41fb48:	jle    0x41faf2
  41fb4a:	icebp  
  41fb4b:	push   0xa8b1cf6
  41fb50:	inc    eax
  41fb51:	pop    esi
  41fb52:	or     al,ah
  41fb54:	leave  
  41fb55:	mov    WORD PTR [eax+0x78b2126f],cs
  41fb5b:	(bad)  
  41fb5c:	sub    al,0x50
  41fb5e:	ins    DWORD PTR es:[edi],dx
  41fb5f:	mov    edx,0xf14ceab8
  41fb64:	lds    esi,FWORD PTR [esi-0x4f777178]
  41fb6a:	push   eax
  41fb6b:	and    eax,0x2f9a9e85
  41fb70:	ror    DWORD PTR [edx+0x6f183129],0x39
  41fb77:	sbb    esi,0xef181b2d
  41fb7d:	add    BYTE PTR [edi-0x769ffd6e],bl
  41fb83:	sbb    ch,BYTE PTR [ebx+0x22]
  41fb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb87:	dec    edi
  41fb88:	js     0x41fb9e
  41fb8a:	sub    al,0x47
  41fb8c:	call   0x66eaffa2
  41fb91:	leave  
  41fb92:	xchg   ebx,eax
  41fb93:	stc    
  41fb94:	pop    eax
  41fb95:	nop
  41fb96:	mov    ebx,0x4da8e7c6
  41fb9b:	sub    ch,bl
  41fb9d:	xchg   esp,eax
  41fb9e:	cmc    
  41fb9f:	mov    BYTE PTR [edx],cl
  41fba1:	jmp    0xd7bdfa43
  41fba6:	into   
  41fba7:	popf   
  41fba8:	in     al,0x23
  41fbaa:	mov    esi,0xa4aafe3d
  41fbaf:	hlt    
  41fbb0:	and    DWORD PTR [ebp+0x65],edx
  41fbb3:	jns    0x41fc0e
  41fbb5:	lods   al,BYTE PTR ds:[esi]
  41fbb6:	push   esp
  41fbb7:	shl    esi,cl
  41fbb9:	mov    edi,0xa3a55aab
  41fbbe:	enter  0x93fa,0x77
  41fbc2:	inc    ebp
  41fbc3:	or     DWORD PTR [esp+edi*4-0x7],edx
  41fbc7:	or     BYTE PTR [edx+0x12dcd8f3],bh
  41fbcd:	fmul   st,st(3)
  41fbcf:	dec    eax
  41fbd0:	imul   esi,DWORD PTR [eax-0x2b445ae7],0x746df6fd
  41fbda:	lock mov cl,0x1e
  41fbdd:	cmp    DWORD PTR [edi-0x24],esi
  41fbe0:	scas   al,BYTE PTR es:[edi]
  41fbe1:	dec    esp
  41fbe2:	pop    esi
  41fbe3:	jmp    0xedc4:0x32ac8511
  41fbea:	int    0x21
  41fbec:	inc    edx
  41fbed:	mov    ecx,0x94b5a467
  41fbf2:	push   0x10c02db2
  41fbf7:	test   eax,0x87d823ef
  41fbfc:	in     eax,dx
  41fbfd:	mov    ecx,0x28cf40ee
  41fc02:	lahf   
  41fc03:	jae    0x41fbf8
  41fc05:	lock (bad) [esi]
  41fc08:	jne    0x41fbe5
  41fc0a:	inc    edx
  41fc0b:	or     ecx,ebp
  41fc0d:	pop    ss
  41fc0e:	out    dx,eax
  41fc0f:	pop    ds
  41fc10:	into   
  41fc11:	add    eax,0x99cac0ff
  41fc16:	cmp    eax,0x28fd13bb
  41fc1b:	inc    esp
  41fc1c:	cwde   
  41fc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc1e:	call   0x5bdc:0x2cf99ec4
  41fc25:	push   ss
  41fc26:	or     ah,BYTE PTR [eax+eax*2-0x7d49b22a]
  41fc2d:	aaa    
  41fc2e:	test   DWORD PTR [eax+eiz*4-0x39],esi
  41fc32:	mov    ds:0x70a6c50e,eax
  41fc37:	dec    eax
  41fc38:	dec    esp
  41fc39:	in     eax,0xe6
  41fc3b:	out    dx,al
  41fc3c:	mov    ds:0x7cc46b,eax
  41fc41:	sbb    DWORD PTR [ebx+0x329d7245],0xd446ec9a
  41fc4b:	adc    DWORD PTR [ecx+0x11],0xffffffa5
  41fc4f:	data16 mov dl,0x62
  41fc52:	outs   dx,WORD PTR ds:[esi]
  41fc54:	jmp    0x3314:0x51781f0c
  41fc5b:	mov    ebp,eax
  41fc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc5e:	imul   esi,DWORD PTR [esi],0xffffffad
  41fc61:	jecxz  0x41fcd6
  41fc63:	loop   0x41fca5
  41fc65:	push   ds
  41fc66:	fisttp WORD PTR [ecx]
  41fc68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6a:	mov    dl,0xf5
  41fc6c:	push   DWORD PTR [esi-0x22]
  41fc6f:	fistp  WORD PTR gs:[esi+0x5829940a]
  41fc77:	test   al,0x46
  41fc79:	(bad)  
  41fc7a:	iret   
  41fc7b:	mov    edx,0xd30d2aca
  41fc80:	pop    ss
  41fc81:	dec    esi
  41fc82:	jecxz  0x41fc46
  41fc84:	jnp    0x41fc8b
  41fc86:	lods   al,BYTE PTR ds:[esi]
  41fc87:	in     al,0x6a
  41fc89:	xchg   esp,eax
  41fc8a:	fmul   st,st(2)
  41fc8c:	jmp    0x756c:0x8edf9a79
  41fc93:	mov    eax,DWORD PTR [edi]
  41fc95:	sahf   
  41fc96:	loop   0x41fc1b
  41fc98:	xchg   esi,eax
  41fc99:	jno    0x41fcdd
  41fc9b:	rcl    al,1
  41fc9d:	cdq    
  41fc9e:	dec    edi
  41fc9f:	mov    ebx,0x1a0873fb
  41fca4:	xchg   esp,eax
  41fca5:	in     al,dx
  41fca6:	out    dx,al
  41fca7:	mov    bl,0xb6
  41fca9:	pop    eax
  41fcaa:	in     al,0xcd
  41fcac:	xchg   esp,eax
  41fcad:	test   al,0x94
  41fcaf:	outs   dx,BYTE PTR ds:[esi]
  41fcb0:	cmp    edx,esi
  41fcb2:	sub    BYTE PTR [edx],al
  41fcb4:	cmp    DWORD PTR [esi-0x45],edi
  41fcb7:	or     dl,BYTE PTR [edx+0x1d]
  41fcba:	mov    ebp,0x629d9412
  41fcbf:	sub    DWORD PTR [esi],esi
  41fcc1:	dec    edx
  41fcc2:	xchg   ebp,eax
  41fcc3:	pop    edx
  41fcc4:	add    eax,0x7bb37de1
  41fcc9:	cmp    al,0x7d
  41fccb:	jl     0x41fc90
  41fccd:	in     al,0xfb
  41fccf:	jmp    0x41fd3b
  41fcd1:	fsubp  st(4),st
  41fcd3:	and    BYTE PTR [eax+0x7565148c],dh
  41fcd9:	out    dx,eax
  41fcda:	pushf  
  41fcdb:	in     al,dx
  41fcdc:	loop   0x41fd22
  41fcde:	sahf   
  41fcdf:	adc    ah,BYTE PTR [esp+esi*4-0x75557ebb]
  41fce6:	mov    eax,ds:0x57f5b96b
  41fceb:	adc    eax,0xb4a67890
  41fcf0:	rol    ebx,0xd6
  41fcf3:	sbb    al,0x80
  41fcf5:	push   esp
  41fcf6:	sub    bh,ah
  41fcf8:	dec    edx
  41fcf9:	xchg   BYTE PTR [edi],ah
  41fcfb:	cs add eax,0xc2d3ee4f
  41fd01:	pop    ds
  41fd02:	dec    DWORD PTR [ecx-0x6b1e3b78]
  41fd08:	jg     0x41fce9
  41fd0a:	rol    edx,cl
  41fd0c:	stos   DWORD PTR es:[edi],eax
  41fd0d:	mov    fs,ebx
  41fd0f:	pop    esp
  41fd10:	out    0x9c,eax
  41fd12:	into   
  41fd13:	push   cs
  41fd14:	mov    ebp,0x5f61229
  41fd19:	mov    eax,ds:0x8c644cb1
  41fd1e:	loop   0x41fcdd
  41fd20:	imul   ebp,DWORD PTR [esi+edx*1],0x41ed132c
  41fd27:	(bad)  
  41fd28:	out    0xf5,eax
  41fd2a:	jmp    0xd6ae:0xee148350
  41fd31:	fs into 
  41fd33:	cmp    edx,ebx
  41fd35:	push   ebx
  41fd36:	sahf   
  41fd37:	loop   0x41fcec
  41fd39:	add    dh,BYTE PTR [ebp-0x766a0843]
  41fd3f:	mov    esi,0xc829dfc
  41fd44:	imul   edi,DWORD PTR [eax-0x328bd659],0xffffffb8
  41fd4b:	gs mov cl,0xd9
  41fd4e:	dec    ecx
  41fd4f:	test   DWORD PTR [ecx+0x14],0xd449a6e
  41fd56:	(bad)  
  41fd57:	stos   DWORD PTR es:[edi],eax
  41fd58:	rcr    BYTE PTR [edx+ecx*4+0x10],cl
  41fd5c:	sbb    al,0x5e
  41fd5e:	mov    edx,0xef6ad415
  41fd63:	mov    al,0x84
  41fd65:	test   al,0xce
  41fd67:	clc    
  41fd68:	mov    esi,0x6c4496dc
  41fd6d:	gs cmc 
  41fd6f:	mov    gs,eax
  41fd71:	rol    DWORD PTR [ecx+0x7b],cl
  41fd74:	aaa    
  41fd75:	ja     0x41fd6a
  41fd77:	adc    eax,0x4bb0b48d
  41fd7c:	pop    esi
  41fd7d:	and    al,0x35
  41fd7f:	push   edi
  41fd80:	sub    ebp,edi
  41fd82:	pushf  
  41fd83:	xchg   BYTE PTR [ecx+0x18],ch
  41fd86:	mov    ebx,0xb96a044f
  41fd8b:	or     eax,0xf3fa08a9
  41fd90:	scas   eax,DWORD PTR es:[edi]
  41fd91:	mov    al,0x1c
  41fd93:	xor    eax,0x74d0f543
  41fd98:	add    al,0xd3
  41fd9a:	sbb    DWORD PTR [ebx+0x7b],edi
  41fd9d:	adc    DWORD PTR ds:0xae0b34b,0x86509a55
  41fda7:	int    0xeb
  41fda9:	push   eax
  41fdaa:	bound  edx,QWORD PTR [ebp+0x2f]
  41fdad:	xchg   esp,eax
  41fdae:	jmp    0x4270e7cd
  41fdb3:	inc    edx
  41fdb4:	in     al,0x8a
  41fdb6:	xor    esp,DWORD PTR [ebp+edi*1+0x73]
  41fdba:	fcomip st,st(0)
  41fdbc:	mov    edi,0x8584bdda
  41fdc1:	push   ebp
  41fdc2:	mov    eax,ds:0xa7fdf8a4
  41fdc7:	ror    dh,1
  41fdc9:	sbb    ebp,DWORD PTR [esi+0x3e4770fb]
  41fdcf:	pop    ds
  41fdd0:	(bad)  
  41fdd1:	pop    edx
  41fdd2:	mov    cl,0xac
  41fdd4:	scas   eax,DWORD PTR es:[edi]
  41fdd5:	dec    esi
  41fdd6:	rcr    BYTE PTR [ebp+edi*8-0x19],cl
  41fdda:	sbb    bh,bl
  41fddc:	xor    DWORD PTR [ecx+0x37bcc9b4],eax
  41fde2:	jmp    0xa0c:0x837858af
  41fde9:	aaa    
  41fdea:	inc    ebx
  41fdeb:	out    0x46,al
  41fded:	icebp  
  41fdee:	pop    edi
  41fdef:	push   0x1444ea4a
  41fdf4:	adc    al,0xc9
  41fdf6:	inc    esi
  41fdf7:	imul   esi,DWORD PTR [esp+eax*4+0x1c93e7b8],0x2dbb3017
  41fe02:	jne    0x41fe05
  41fe04:	mov    al,0xca
  41fe06:	leave  
  41fe07:	push   es
  41fe08:	mov    ecx,0x35b72fcb
  41fe0d:	nop
  41fe0e:	or     BYTE PTR [eax+0x5330a8e2],bl
  41fe14:	pop    ebp
  41fe15:	or     BYTE PTR [esi+ecx*1-0x51],0xb9
  41fe1a:	pop    edi
  41fe1b:	into   
  41fe1c:	jnp    0x41fe32
  41fe1e:	rcr    BYTE PTR [eax+ecx*1+0x1401f89],1
  41fe25:	xchg   ebx,eax
  41fe26:	and    al,0x19
  41fe28:	lods   eax,DWORD PTR ds:[esi]
  41fe29:	imul   esp,edi,0x71f00b57
  41fe2f:	xlat   BYTE PTR ds:[ebx]
  41fe30:	mov    bl,al
  41fe32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe33:	sub    al,0xfa
  41fe35:	out    dx,al
  41fe36:	mov    ecx,DWORD PTR ds:0xea93c8dc
  41fe3c:	sub    cl,BYTE PTR [eax]
  41fe3e:	inc    edx
  41fe3f:	daa    
  41fe40:	jne    0x41fe57
  41fe42:	lea    edx,[edi-0x136ebe6f]
  41fe48:	push   es
  41fe49:	aas    
  41fe4a:	or     edi,esi
  41fe4c:	mov    bl,0xa6
  41fe4e:	aaa    
  41fe4f:	sahf   
  41fe50:	xor    DWORD PTR [ebp-0x263a3e8f],ebx
  41fe56:	mov    cl,0x81
  41fe58:	aad    0x1b
  41fe5a:	mov    al,ds:0xc8aab242
  41fe5f:	cld    
  41fe60:	fidivr DWORD PTR [esi]
  41fe62:	xchg   esi,eax
  41fe63:	inc    edx
  41fe64:	shl    BYTE PTR [ebp+0xbc95b53],1
  41fe6a:	mov    esi,0x52615efa
  41fe6f:	add    DWORD PTR [ebx+ecx*2+0x39531a0],ebp
  41fe76:	push   ebp
  41fe77:	inc    edi
  41fe78:	jg     0x41fef5
  41fe7a:	inc    esp
  41fe7b:	sbb    dh,BYTE PTR [edx-0x260c5d85]
  41fe81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe82:	aad    0x93
  41fe84:	iret   
  41fe85:	adc    edi,ebx
  41fe87:	and    eax,0x7492efd3
  41fe8c:	push   ebx
  41fe8d:	je     0x41feac
  41fe8f:	sub    ebx,DWORD PTR [ecx]
  41fe91:	jbe    0x41fe1c
  41fe93:	add    DWORD PTR [ebp+0x35c14e58],edx
  41fe99:	jnp    0x41fec1
  41fe9b:	jge    0x41fe99
  41fe9d:	(bad)  
  41fe9e:	out    dx,eax
  41fe9f:	inc    esp
  41fea0:	pusha  
  41fea1:	and    ebx,DWORD PTR [esi]
  41fea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea4:	shl    DWORD PTR [edx+0xab9948],cl
  41feaa:	cmc    
  41feab:	popf   
  41feac:	loopne 0x41ff1a
  41feae:	jae    0x41fef5
  41feb0:	inc    eax
  41feb1:	mov    eax,ds:0xe1bfd6bc
  41feb7:	dec    edx
  41feb8:	mov    DWORD PTR [edi+ebp*2+0x50fec981],0x383b6422
  41fec3:	(bad)
  41fec7:	inc    ebx
  41fec8:	ret    
  41fec9:	out    dx,al
  41feca:	je     0x41fe65
  41fecc:	xchg   BYTE PTR [eax],bl
  41fece:	mov    ebp,0xcc56e8ad
  41fed3:	mov    ds,WORD PTR [ecx]
  41fed5:	jp     0x41ff0c
  41fed7:	jle    0x41feb8
  41fed9:	in     al,0x8
  41fedb:	dec    ecx
  41fedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fedd:	retf   
  41fede:	pop    ds
  41fedf:	stos   BYTE PTR es:[edi],al
  41fee0:	cli    
  41fee1:	jns    0x41fe8c
  41fee3:	lds    edi,FWORD PTR ds:0x43c02af
  41fee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feea:	sahf   
  41feeb:	add    eax,DWORD PTR [edx-0x61]
  41feee:	pop    eax
  41feef:	sti    
  41fef0:	mov    esp,0x773449a1
  41fef5:	jle    0x41fefd
  41fef7:	out    dx,al
  41fef8:	dec    eax
  41fef9:	neg    DWORD PTR ds:0x4619072a
  41feff:	retf   
  41ff00:	mov    esp,0x8c84ea64
  41ff05:	mov    eax,0xdb417c1
  41ff0a:	aas    
  41ff0b:	pop    ebp
  41ff0c:	jo     0x41ff79
  41ff0e:	push   eax
  41ff0f:	mov    ah,0xf5
  41ff11:	adc    esi,DWORD PTR [edi+edx*2+0x31]
  41ff15:	xor    edi,eax
  41ff17:	and    eax,0x5d3a7cdf
  41ff1c:	mov    dl,0xad
  41ff1e:	add    eax,0xc4225e7b
  41ff23:	mov    al,0x49
  41ff25:	hlt    
  41ff26:	je     0x41ff7e
  41ff28:	je     0x41febc
  41ff2a:	daa    
  41ff2b:	(bad)  
  41ff2c:	es fwait
  41ff2e:	push   ds
  41ff2f:	xchg   ebp,eax
  41ff30:	outs   dx,BYTE PTR ds:[esi]
  41ff31:	js     0x41febd
  41ff33:	mov    eax,0xf19716a2
  41ff38:	jno    0x41ffac
  41ff3a:	xchg   ecx,eax
  41ff3b:	xchg   ebx,ebp
  41ff3d:	or     eax,0x82f17217
  41ff42:	sti    
  41ff43:	shl    BYTE PTR [edx+0x13],cl
  41ff46:	mov    ds:0xae9a0ebf,al
  41ff4b:	retf   0x6a89
  41ff4e:	arpl   WORD PTR ds:0x9389e1b1,bx
  41ff54:	test   eax,0xe4e30b00
  41ff59:	pop    ebx
  41ff5a:	sub    dl,BYTE PTR fs:[ecx-0x3]
  41ff5e:	sub    DWORD PTR [esi],edi
  41ff60:	jo     0x41feef
  41ff62:	jno    0x41ff2b
  41ff64:	loope  0x41ffa5
  41ff66:	lods   al,BYTE PTR ds:[esi]
  41ff67:	xor    al,0x17
  41ff69:	in     eax,dx
  41ff6a:	nop
  41ff6b:	push   esi
  41ff6c:	dec    ebx
  41ff6d:	pop    es
  41ff6e:	aad    0x32
  41ff70:	int3   
  41ff71:	in     al,dx
  41ff72:	fnstsw WORD PTR [edx-0x3009a8d1]
  41ff78:	std    
  41ff79:	aad    0x1f
  41ff7b:	jnp    0x41ff7e
  41ff7d:	xor    DWORD PTR [ebp-0x323c64b0],esp
  41ff83:	mov    bh,0x19
  41ff85:	or     al,0xc4
  41ff87:	dec    esp
  41ff88:	adc    BYTE PTR [ebx+0x23],ch
  41ff8b:	adc    cl,0xd8
  41ff8e:	jp     0x41ff61
  41ff90:	inc    esi
  41ff91:	jmp    0x41fff2
  41ff93:	mov    ecx,0xd1f67137
  41ff98:	push   esp
  41ff99:	add    cl,BYTE PTR [edx+0x2f]
  41ff9c:	pusha  
  41ff9d:	(bad)  
  41ff9e:	xchg   ecx,eax
  41ff9f:	sar    ebp,1
  41ffa1:	ins    DWORD PTR es:[edi],dx
  41ffa2:	cmp    bh,cl
  41ffa4:	test   ah,bh
  41ffa6:	inc    DWORD PTR [esi+0x3e]
  41ffa9:	pop    ecx
  41ffaa:	lods   eax,DWORD PTR ds:[esi]
  41ffab:	enter  0xebf6,0x8e
  41ffaf:	retf   
  41ffb0:	inc    DWORD PTR ss:[edi]
  41ffb3:	mov    esp,0x307f08ab
  41ffb8:	test   DWORD PTR [ebx],0x43ca209f
  41ffbe:	jb     0x41ff5c
  41ffc0:	adc    al,0x20
  41ffc2:	or     BYTE PTR [esi],0x6c
  41ffc5:	and    BYTE PTR [eax-0x5bc5c6d7],0x78
  41ffcc:	push   edi
  41ffcd:	and    ecx,DWORD PTR [eax]
  41ffcf:	sbb    ch,BYTE PTR [edi+ebp*1+0x53a617aa]
  41ffd6:	mov    ds,WORD PTR [eax]
  41ffd8:	push   edx
  41ffd9:	sub    DWORD PTR [ebp-0x4a],ebp
  41ffdc:	(bad)  
  41ffde:	adc    eax,DWORD PTR [eax-0x5fbae3e8]
  41ffe4:	pop    edi
  41ffe5:	pop    edx
  41ffe6:	aaa    
  41ffe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe8:	out    0xef,eax
  41ffea:	mov    ebx,0x52eb658d
  41ffef:	inc    esi
  41fff0:	(bad)  
  41fff1:	mov    edi,0xb5cd105b
  41fff6:	adc    al,0xd2
  41fff8:	sbb    DWORD PTR cs:[ebx-0x3ed417b3],ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x6a73d30a
  420121:	test   eax,0x8380b606
  420126:	divps  xmm0,XMMWORD PTR [ebx+0x29220583]
  42012d:	test   BYTE PTR [ecx-0xb],bl
  420130:	int    0x4c
  420132:	not    BYTE PTR [ebp+0xc]
  420135:	(bad)  
  420136:	in     al,0xc4
  420138:	pop    ds
  420139:	lea    eax,[esp+ebp*2-0x4f]
  42013d:	dec    ecx
  42013e:	and    bh,BYTE PTR [ebp-0x1f]
  420141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420142:	sub    DWORD PTR [ebx],esi
  420144:	mov    ch,0x1d
  420146:	mov    cl,0x3e
  420148:	shr    DWORD PTR [edx+ecx*8+0x20],1
  42014c:	xchg   edi,eax
  42014d:	loopne 0x420169
  42014f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420150:	jno    0x420199
  420152:	test   al,0x55
  420154:	ins    BYTE PTR es:[edi],dx
  420155:	adc    edx,esp
  420157:	sti    
  420158:	push   es
  420159:	ins    BYTE PTR es:[edi],dx
  42015a:	test   DWORD PTR [eax+0x16fa4f96],0x7af49b3a
  420164:	mov    al,BYTE PTR [ebx-0x6c123e48]
  42016a:	in     eax,dx
  42016b:	test   eax,0x8bc34b7a
  420170:	xchg   DWORD PTR [edx-0x1c],esp
  420173:	mov    ecx,ds
  420175:	aad    0xe9
  420177:	sbb    edx,DWORD PTR [edx-0x33]
  42017a:	xchg   ebp,eax
  42017b:	jecxz  0x420143
  42017d:	nop
  42017e:	and    cl,BYTE PTR [edi+0x59]
  420181:	add    ebx,DWORD PTR ds:0xbd0855f1
  420187:	push   ebp
  420188:	mov    WORD PTR ds:0x48b98e57,fs
  42018e:	lods   al,BYTE PTR ds:[esi]
  42018f:	rep outs dx,DWORD PTR ds:[esi]
  420191:	jecxz  0x42019d
  420193:	das    
  420194:	mov    ah,0x3a
  420196:	in     eax,0xee
  420198:	or     al,0x81
  42019a:	pusha  
  42019b:	and    bl,BYTE PTR [esi]
  42019d:	cmc    
  42019e:	cld    
  42019f:	sti    
  4201a0:	xor    ah,bh
  4201a2:	cmc    
  4201a3:	and    eax,0x33498c09
  4201a8:	repnz mov ebp,0x630656a5
  4201ae:	les    esp,FWORD PTR [ebp+0x9c3063e]
  4201b4:	inc    ebp
  4201b5:	adc    eax,0x28de51ec
  4201ba:	sar    BYTE PTR [ebp+0x69180fb0],1
  4201c0:	mov    ch,0x8
  4201c2:	sbb    al,0xe0
  4201c4:	(bad)  [ecx-0x2d]
  4201c7:	mov    BYTE PTR [ecx+0x7503bdca],bh
  4201cd:	xchg   edx,eax
  4201ce:	mov    esp,0x5dd6fc03
  4201d3:	lahf   
  4201d4:	mov    esp,0x139a20c6
  4201d9:	mov    ds:0xe6f18c4d,eax
  4201de:	and    BYTE PTR [edi-0x5908c791],bh
  4201e4:	cld    
  4201e5:	or     ch,bh
  4201e7:	fisubr DWORD PTR [edi+esi*4-0x28]
  4201eb:	jmp    0xeac1:0xacca074f
  4201f2:	add    bl,bl
  4201f4:	inc    ebx
  4201f5:	mov    ebx,0xfa7d38e0
  4201fa:	lock idiv BYTE PTR [ebx]
  4201fd:	xor    eax,0x9e77c1aa
  420202:	shl    BYTE PTR [edx],cl
  420204:	das    
  420205:	add    eax,0x186ce9f8
  42020a:	inc    edi
  42020b:	rcr    DWORD PTR [ecx],cl
  42020d:	and    edx,edx
  42020f:	fwait
  420210:	sub    ah,BYTE PTR [edx+0x24]
  420213:	rcl    BYTE PTR [esi+0x77],0x93
  420217:	xor    BYTE PTR [edx-0x70],bl
  42021a:	sub    ah,BYTE PTR [ebp+0x28]
  42021d:	sbb    DWORD PTR [edi+0x79fc3505],ecx
  420223:	in     al,dx
  420224:	enter  0xfaac,0x49
  420228:	or     al,0x18
  42022a:	out    0xff,al
  42022c:	mov    ds:0x2f15cc8b,al
  420231:	call   FWORD PTR [ecx]
  420233:	sbb    DWORD PTR [ebp-0x18],0x93716eae
  42023a:	stos   BYTE PTR es:[edi],al
  42023b:	mov    ecx,0x179884ba
  420240:	adc    DWORD PTR [edx+eiz*1-0x4cf9fa2a],0x5d
  420248:	push   edi
  420249:	cli    
  42024a:	mov    edx,0x8374fe32
  42024f:	push   es
  420250:	mov    es,edx
  420252:	jmp    DWORD PTR [edx+edx*4]
  420255:	pop    ecx
  420256:	add    eax,0x93a7485c
  42025b:	jmp    0x99068d90
  420260:	jg     0x420204
  420262:	loope  0x4202d8
  420264:	dec    ebp
  420265:	add    al,0x93
  420267:	inc    esp
  420268:	pop    ds
  420269:	push   ebp
  42026a:	adc    al,0xb0
  42026c:	xor    al,BYTE PTR [edi-0x5b]
  42026f:	adc    BYTE PTR [edi+0xf],dl
  420272:	or     edi,DWORD PTR [eax]
  420274:	sbb    bl,bl
  420276:	js     0x420286
  420278:	je     0x420201
  42027a:	xchg   esp,eax
  42027b:	xchg   esi,eax
  42027c:	sbb    ah,bh
  42027e:	lods   eax,DWORD PTR ds:[esi]
  42027f:	sub    eax,0x30af53cc
  420284:	xchg   DWORD PTR [ebx],edx
  420286:	cdq    
  420287:	test   dl,dh
  420289:	adc    al,0x81
  42028b:	les    edx,FWORD PTR [ebx]
  42028d:	pop    edi
  42028e:	dec    ecx
  42028f:	test   al,0x55
  420291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420292:	sub    al,0xae
  420294:	jns    0x420268
  420296:	mov    dh,0xa7
  420298:	xchg   esi,eax
  420299:	mov    al,0x73
  42029b:	xor    al,0x71
  42029d:	aaa    
  42029e:	aad    0xcb
  4202a0:	sbb    ecx,DWORD PTR [edx-0x258ce86a]
  4202a6:	aad    0xf3
  4202a8:	push   edi
  4202a9:	inc    edi
  4202aa:	stos   BYTE PTR es:[edi],al
  4202ab:	push   ss
  4202ac:	lods   al,BYTE PTR ds:[esi]
  4202ad:	inc    ecx
  4202ae:	xor    DWORD PTR [ebx],0xffffffab
  4202b1:	dec    esi
  4202b2:	dec    ecx
  4202b3:	(bad)  
  4202b5:	rol    BYTE PTR [edx],0x1
  4202b8:	dec    ebp
  4202b9:	int    0x8b
  4202bb:	test   al,0xa4
  4202bd:	pop    eax
  4202be:	ret    0x3acb
  4202c1:	fld    st(4)
  4202c3:	sub    BYTE PTR [edi+0x5125d15c],ah
  4202c9:	jecxz  0x4202df
  4202cb:	jo     0x4202d1
  4202cd:	aas    
  4202ce:	retf   0xcc3b
  4202d1:	fsubr  DWORD PTR [edi-0x7b]
  4202d4:	pop    ss
  4202d5:	sar    BYTE PTR [esi],1
  4202d7:	int3   
  4202d8:	inc    edi
  4202d9:	int    0x38
  4202db:	mov    edi,0x20834853
  4202e0:	jne    0x420309
  4202e2:	xor    BYTE PTR [ecx+eiz*1-0x57],dl
  4202e6:	rcl    DWORD PTR [edx],1
  4202e8:	imul   edi,DWORD PTR [edx],0xffffffaa
  4202eb:	iret   
  4202ec:	push   edi
  4202ed:	push   ebp
  4202ee:	loop   0x4202f0
  4202f0:	mov    bh,0x59
  4202f2:	mov    ebx,0x671b8a18
  4202f7:	sbb    dh,BYTE PTR [edi+0x365f464e]
  4202fd:	or     BYTE PTR [eax],bh
  4202ff:	jl     0x420380
  420301:	aaa    
  420302:	xchg   ecx,eax
  420303:	inc    edx
  420304:	std    
  420305:	fstp   QWORD PTR [ecx-0x4c]
  420308:	(bad)  
  420309:	in     al,dx
  42030a:	bound  ebx,QWORD PTR [ecx]
  42030c:	sbb    dl,BYTE PTR [eax-0x4e]
  42030f:	mov    ah,0x66
  420311:	(bad)  [esi]
  420313:	fidivr WORD PTR [edi+0x3]
  420316:	xor    BYTE PTR [esi],bl
  420318:	push   edx
  420319:	pusha  
  42031a:	call   0x9815d84b
  42031f:	mov    edx,0x99423849
  420324:	aam    0xed
  420326:	pop    ds
  420327:	ins    BYTE PTR es:[edi],dx
  420328:	jo     0x420311
  42032a:	add    ebp,DWORD PTR [esi+0x7a107206]
  420330:	lahf   
  420331:	clc    
  420332:	lock sub eax,0xc032f009
  420338:	push   es
  420339:	and    dl,dh
  42033b:	popa   
  42033c:	popf   
  42033d:	arpl   WORD PTR [ebp-0x2a962089],cx
  420343:	pop    esi
  420344:	adc    ch,BYTE PTR [eax+0x6c6195af]
  42034a:	rol    BYTE PTR [ecx+edi*4-0x69],0xbb
  42034f:	ja     0x4203b6
  420351:	retf   
  420352:	addr16 xor al,0x6
  420355:	pushf  
  420356:	pushf  
  420357:	pop    es
  420358:	xchg   edx,eax
  420359:	aas    
  42035a:	stos   DWORD PTR es:[edi],eax
  42035b:	cmp    cl,BYTE PTR [edx]
  42035d:	xlat   BYTE PTR ds:[ebx]
  42035e:	call   0xe526967a
  420363:	cmp    edx,DWORD PTR [eax+0xdc4178c]
  420369:	sbb    eax,0x9130c431
  42036e:	sbb    al,0xe2
  420370:	fidivr DWORD PTR [edx-0x33f752e2]
  420376:	mov    al,0xad
  420378:	test   eax,0x2da7c4de
  42037d:	aad    0x7a
  42037f:	sbb    ebp,esi
  420381:	shl    DWORD PTR [edi+0x78],0x1d
  420385:	sub    al,0xe2
  420387:	test   al,0xd0
  420389:	leave  
  42038a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42038b:	int3   
  42038c:	add    eax,0x45b9ced2
  420391:	pop    esi
  420392:	nop
  420393:	and    eax,0x3335c4c
  420398:	(bad)  
  420399:	pop    ecx
  42039a:	xchg   edx,eax
  42039b:	fs call 0xd8ca:0x90c2fc8c
  4203a3:	jg     0x4203a1
  4203a5:	inc    eax
  4203a6:	sub    al,0xa4
  4203a8:	adc    al,cl
  4203aa:	lods   al,BYTE PTR ds:[esi]
  4203ab:	inc    ecx
  4203ac:	loopne 0x420384
  4203ae:	jmp    0x2089542a
  4203b3:	push   esi
  4203b4:	ja     0x4203df
  4203b6:	jnp    0x420356
  4203b8:	ret    
  4203b9:	xor    edi,esp
  4203bb:	mov    bh,0x6
  4203bd:	add    DWORD PTR [edi],0x1
  4203c0:	push   edx
  4203c1:	aad    0x98
  4203c3:	and    BYTE PTR [ebx+0x23a9a932],dl
  4203c9:	jns    0x4203d9
  4203cb:	je     0x420399
  4203cd:	fwait
  4203ce:	sbb    dl,al
  4203d0:	gs out dx,al
  4203d2:	jg     0x420417
  4203d4:	addr16 pop ecx
  4203d6:	pop    edi
  4203d7:	ret    0x3cbd
  4203da:	and    ebx,0xffffffb8
  4203dd:	cmp    esi,edi
  4203df:	inc    ebp
  4203e0:	push   ebp
  4203e1:	test   bh,cl
  4203e3:	mov    eax,0x497045b5
  4203e8:	sub    DWORD PTR [edi],0xe595e034
  4203ee:	mov    ebp,0xe2350d71
  4203f3:	adc    ch,BYTE PTR [esi+0x3ed56a7f]
  4203f9:	xor    eax,0x714b531a
  4203fe:	jecxz  0x4203c2
  420400:	jecxz  0x420432
  420402:	pop    ebx
  420403:	mov    ecx,0x9326dc93
  420408:	sbb    DWORD PTR [ebx],ebx
  42040a:	xchg   ebx,eax
  42040b:	push   esi
  42040c:	xchg   ecx,eax
  42040d:	push   ebx
  42040e:	cmp    ah,ch
  420410:	dec    ebx
  420411:	lds    esp,FWORD PTR [ecx]
  420413:	mov    ah,BYTE PTR [edx+eiz*8-0x2e414dd]
  42041a:	ret    0xcb52
  42041d:	rol    DWORD PTR [ebp-0x2c9926c7],0x1c
  420424:	js     0x420407
  420426:	add    al,0xf0
  420428:	push   ebp
  420429:	repz add eax,DWORD PTR [edx]
  42042c:	int3   
  42042d:	fsubr  DWORD PTR [edi]
  42042f:	mov    BYTE PTR ds:0x91dec6dc,al
  420435:	test   DWORD PTR [esi-0x7b],ebx
  420438:	ins    DWORD PTR es:[edi],dx
  420439:	ror    BYTE PTR [ebx-0x74],0xf8
  42043d:	dec    ebx
  42043e:	fcomp  DWORD PTR [ebx-0x57b8ed1f]
  420444:	nop
  420445:	ins    BYTE PTR es:[edi],dx
  420446:	cmp    esi,DWORD PTR [ebx]
  420448:	xor    ch,BYTE PTR [ecx+esi*1]
  42044b:	dec    ebp
  42044c:	retf   
  42044d:	or     eax,0x8de01b29
  420452:	fisubr DWORD PTR [ecx+0x59b9246]
  420458:	call   0xa6a0ae8f
  42045d:	rol    BYTE PTR [edx+esi*2+0x3f],cl
  420461:	mov    eax,0xee3bec4e
  420466:	pop    es
  420467:	lds    ebx,FWORD PTR [ebp+0x63]
  42046a:	int    0x23
  42046c:	xor    BYTE PTR [ebx+edi*2],al
  42046f:	(bad)  
  420470:	cdq    
  420471:	(bad)  
  420472:	scas   al,BYTE PTR es:[edi]
  420473:	call   0x6ea7:0x2c71e962
  42047a:	xor    BYTE PTR [edi-0x3f3555fe],ah
  420480:	sbb    cl,BYTE PTR [edx]
  420482:	sbb    DWORD PTR [ebx-0x18],ebp
  420485:	push   es
  420486:	lock adc al,0x2f
  420489:	jle    0x42045b
  42048b:	jmp    0x3598:0xc4819cde
  420492:	pop    eax
  420493:	adc    WORD PTR [esi],ax
  420496:	jge    0x42048a
  420498:	icebp  
  420499:	inc    edx
  42049a:	cmp    eax,0xe304cf1c
  42049f:	test   BYTE PTR [eax-0x30],dl
  4204a2:	lea    esi,[edx-0x484f5915]
  4204a8:	jmp    0x4204b0
  4204aa:	stc    
  4204ab:	push   0xd551dddd
  4204b0:	rcr    DWORD PTR [esi],0x68
  4204b3:	out    0x1f,al
  4204b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204b6:	inc    ecx
  4204b7:	sub    esp,0x30
  4204ba:	xchg   ecx,eax
  4204bb:	mov    dl,0x84
  4204bd:	ss data16 ds jle 0x420524
  4204c2:	stos   BYTE PTR es:[edi],al
  4204c3:	and    BYTE PTR [ebx+0x42],bl
  4204c6:	je     0x420450
  4204c8:	inc    esi
  4204ca:	xor    eax,0xf68803dc
  4204cf:	inc    ebp
  4204d0:	aad    0xf5
  4204d2:	sbb    al,0x76
  4204d4:	mov    BYTE PTR [esp+ebx*8+0x5b183d7d],ah
  4204db:	cwde   
  4204dc:	retf   
  4204dd:	mov    ch,0x82
  4204df:	fnstsw WORD PTR [eax]
  4204e1:	leave  
  4204e2:	in     al,0x42
  4204e4:	mov    dh,BYTE PTR [eax-0x4b25a1d1]
  4204ea:	mov    bl,BYTE PTR [edi]
  4204ec:	xchg   esp,eax
  4204ed:	push   0xc4d1ac5c
  4204f2:	aad    0x22
  4204f4:	adc    al,0x17
  4204f6:	enter  0x4e66,0x3c
  4204fa:	and    BYTE PTR [ecx+0x1d35b43c],ah
  420500:	daa    
  420501:	(bad)  
  420502:	and    al,0xf2
  420504:	(bad)  
  420507:	nop
  420508:	div    DWORD PTR [edi-0x54]
  42050b:	xchg   DWORD PTR [ecx],ebp
  42050d:	and    DWORD PTR [esp+edx*2],edx
  420510:	fs mov al,0xac
  420513:	sahf   
  420514:	mov    eax,0x67940a15
  420519:	leave  
  42051a:	and    edi,DWORD PTR ds:0xfaca9d0d
  420520:	out    0x9d,eax
  420522:	ret    0xdd2
  420525:	xchg   ebx,eax
  420526:	push   0xea3b84b9
  42052b:	lock aad 0x2e
  42052e:	(bad)  
  42052f:	aad    0x2
  420531:	jmp    0x420587
  420533:	fmul   DWORD PTR [edi+0xd]
  420536:	dec    esi
  420537:	mov    BYTE PTR [esi+0x63d1b92f],bl
  42053d:	loopne 0x420586
  42053f:	loopne 0x420566
  420541:	xor    ah,BYTE PTR [ebp+edi*8+0x395fa2d0]
  420548:	je     0x4204e3
  42054a:	sub    eax,0x84754925
  42054f:	or     eax,0x488412fc
  420554:	(bad)  
  420555:	pop    edx
  420556:	scas   eax,DWORD PTR es:[edi]
  420557:	cmc    
  420558:	scas   eax,DWORD PTR es:[edi]
  420559:	push   eax
  42055a:	push   ds
  42055b:	mov    BYTE PTR [edx],dh
  42055d:	or     BYTE PTR [esi-0x67],al
  420560:	sbb    dh,cl
  420562:	int    0xff
  420564:	out    0x57,eax
  420566:	aaa    
  420567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420568:	push   eax
  420569:	xor    ebp,DWORD PTR [ecx+0x77]
  42056c:	mov    ebx,0x774bc9d5
  420571:	push   DWORD PTR [eax]
  420573:	popf   
  420574:	xor    al,bh
  420576:	sbb    BYTE PTR [ecx-0x29359bb8],dh
  42057c:	das    
  42057d:	sbb    al,BYTE PTR [ebx]
  42057f:	sbb    ebp,DWORD PTR [edx+0x6e]
  420582:	adc    dl,cl
  420584:	xchg   bh,cl
  420586:	retf   0x876a
  420589:	rcr    DWORD PTR [edx-0x2c5435e7],1
  42058f:	or     ch,BYTE PTR [ecx+0xb2229ed]
  420595:	lods   eax,DWORD PTR ds:[esi]
  420596:	mov    dl,0xf7
  420598:	aas    
  420599:	mov    esp,DWORD PTR [ebx+ebp*4]
  42059c:	inc    ebx
  42059d:	xchg   esi,eax
  42059e:	icebp  
  42059f:	cdq    
  4205a0:	or     ecx,edi
  4205a2:	fidivr WORD PTR [ecx]
  4205a4:	sub    BYTE PTR [esi-0x1e1f5472],bh
  4205aa:	or     ecx,DWORD PTR [eax]
  4205ac:	dec    ebx
  4205ad:	mov    bh,0x9c
  4205af:	mov    WORD PTR [esi+0x17031eb5],dx
  4205b6:	adc    esi,DWORD PTR [esi+0x118eaa85]
  4205bc:	cmp    bh,bl
  4205be:	pop    edi
  4205bf:	test   BYTE PTR [edi],0xa2
  4205c2:	pop    ebp
  4205c3:	(bad)  
  4205c4:	sbb    BYTE PTR [edx+0x2],ch
  4205c7:	call   0xecfa:0xccd9d002
  4205ce:	mov    ah,BYTE PTR [esi-0x80]
  4205d1:	mov    esi,0x9e339540
  4205d6:	lods   al,BYTE PTR ds:[esi]
  4205d7:	retf   
  4205d8:	and    dl,al
  4205da:	sub    BYTE PTR [eax+0x2a1eb5e2],0x2a
  4205e1:	int3   
  4205e2:	cmp    al,BYTE PTR [ebx+0x2e]
  4205e5:	call   0x1e343127
  4205ea:	sub    edi,DWORD PTR [edx]
  4205ec:	pushf  
  4205ed:	out    dx,eax
  4205ee:	pop    esi
  4205ef:	xor    al,0x85
  4205f1:	add    BYTE PTR [ebp-0xe5f17a3],dh
  4205f7:	mov    al,ds:0x74adcfd8
  4205fc:	test   DWORD PTR [eax-0x40a7ad81],esi
  420602:	cmp    al,0x80
  420604:	cld    
  420605:	out    0xec,al
  420607:	or     eax,DWORD PTR [ecx-0x722a583a]
  42060d:	xlat   BYTE PTR ds:[ebx]
  42060e:	clc    
  42060f:	pop    ebp
  420610:	in     al,dx
  420611:	test   al,0xcf
  420613:	pop    es
  420614:	leave  
  420615:	aam    0xa4
  420617:	loop   0x42065c
  420619:	xchg   DWORD PTR [edi+0x6ea4cdc0],eax
  42061f:	mov    eax,ds:0xb2079135
  420624:	pop    edx
  420625:	dec    edi
  420626:	out    dx,al
  420627:	mov    ds:0xb1b85432,al
  42062c:	(bad)  
  42062d:	in     al,dx
  42062e:	inc    esi
  42062f:	or     al,BYTE PTR [edi-0x4c]
  420632:	push   ecx
  420633:	pop    eax
  420634:	fmul   DWORD PTR [esi+esi*2+0x50]
  420638:	leave  
  420639:	repz mov bl,0x46
  42063c:	mov    WORD PTR [ecx-0x695f0846],?
  420642:	mov    ds:0x7ff519ff,al
  420647:	mov    bh,0xda
  420649:	pusha  
  42064a:	daa    
  42064b:	add    eax,0xcf4b8ee6
  420650:	sub    DWORD PTR [ebx-0x6ba56e25],edi
  420656:	sahf   
  420657:	cld    
  420658:	in     eax,dx
  420659:	scas   eax,DWORD PTR es:[edi]
  42065a:	loopne 0x42067d
  42065c:	in     eax,dx
  42065d:	or     al,0x82
  42065f:	push   edx
  420660:	stos   DWORD PTR es:[edi],eax
  420661:	inc    edi
  420662:	(bad)  
  420663:	aad    0x95
  420665:	and    eax,0x9b287078
  42066a:	mov    ch,BYTE PTR [edx]
  42066c:	(bad)  
  42066d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42066e:	and    dh,BYTE PTR [edx]
  420670:	leave  
  420671:	and    esi,DWORD PTR [esi+eax*1]
  420674:	fistp  WORD PTR [ebp+ebx*8+0x7c]
  420678:	inc    edi
  420679:	les    ebx,FWORD PTR [edx+0x6ba698c2]
  42067f:	aam    0x51
  420681:	mov    edi,0x78e327df
  420686:	icebp  
  420687:	repnz test al,0x82
  42068a:	mov    ebx,0xf1e726bb
  42068f:	into   
  420690:	dec    ebx
  420691:	call   0xfcb52c95
  420696:	data16 jae 0x42064d
  420699:	dec    edx
  42069a:	and    al,0x6d
  42069c:	gs call 0x9f74a647
  4206a2:	shl    BYTE PTR [ecx+eiz*8],1
  4206a5:	outs   dx,DWORD PTR ds:[esi]
  4206a6:	retf   
  4206a7:	mov    ds:0x2a7f8d7b,al
  4206ac:	rol    DWORD PTR ds:0x9a9608f,0x5d
  4206b3:	dec    eax
  4206b4:	int    0xfc
  4206b6:	xchg   edx,eax
  4206b7:	(bad)  
  4206b8:	shr    BYTE PTR [ebx-0x2c],1
  4206bb:	pushf  
  4206bc:	inc    ebx
  4206bd:	imul   BYTE PTR [ebp+ecx*1+0x4f7103da]
  4206c4:	(bad)  
  4206c5:	in     eax,0x11
  4206c7:	les    edi,FWORD PTR [edi]
  4206c9:	and    DWORD PTR [edi-0x21],ecx
  4206cc:	or     DWORD PTR [edx],esi
  4206ce:	sub    ebx,DWORD PTR [ecx+0x7]
  4206d1:	cmp    bh,BYTE PTR [edi-0x369ebf33]
  4206d7:	xor    al,BYTE PTR [ebp+0x523444d9]
  4206dd:	push   0x91538ce6
  4206e2:	adc    dh,BYTE PTR [eax]
  4206e4:	mov    ch,dl
  4206e6:	scas   al,BYTE PTR es:[edi]
  4206e7:	mov    DWORD PTR [edx+0x19],edi
  4206ea:	jmp    0x8c082e10
  4206ef:	xor    eax,0x550a4aee
  4206f4:	pusha  
  4206f5:	repz jno 0x42069a
  4206f8:	paddusb mm3,QWORD PTR [edi+0x1b]
  4206fc:	and    ch,BYTE PTR [ebx+0x38]
  4206ff:	adc    al,0x7d
  420701:	mov    edx,0xee53397a
  420706:	push   ds
  420707:	pop    edx
  420708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420709:	push   ss
  42070a:	test   BYTE PTR [ebx+0x65],al
  42070d:	cmp    DWORD PTR [esi+0xf6e15d1],edx
  420713:	int    0xe8
  420715:	sbb    DWORD PTR [ebx+0x1c3b7c93],ebp
  42071b:	test   eax,0x80da9c7b
  420720:	pop    ecx
  420721:	or     al,0xe9
  420723:	aad    0x95
  420725:	aas    
  420726:	popf   
  420727:	jecxz  0x42072f
  420729:	aad    0x3e
  42072b:	lahf   
  42072c:	push   cs
  42072d:	dec    ebx
  42072e:	inc    eax
  42072f:	je     0x4206bf
  420731:	das    
  420732:	bound  esi,QWORD PTR [esi-0x24b2499a]
  420738:	loope  0x4207ac
  42073a:	and    BYTE PTR [bx+di-0x7ee6],bl
  42073f:	lea    esi,[edx-0x7b133bc0]
  420745:	lods   eax,DWORD PTR ds:[esi]
  420746:	sub    DWORD PTR [edi-0xf53c175],0x666fe1af
  420750:	fincstp 
  420752:	lods   al,BYTE PTR ds:[esi]
  420753:	push   ss
  420754:	bound  edi,QWORD PTR [ebp+0x55]
  420757:	sahf   
  420758:	gs aas 
  42075a:	cmc    
  42075b:	and    edi,DWORD PTR [edi+0x25]
  42075e:	push   ds
  42075f:	sub    ecx,DWORD PTR [ebx+0x5c79c423]
  420765:	test   al,0x5f
  420767:	push   esp
  420768:	inc    esp
  420769:	mov    gs,WORD PTR [edx+0x63]
  42076c:	adc    eax,0x27b33bdf
  420771:	sub    DWORD PTR [eax],ebx
  420773:	ficomp WORD PTR [edx]
  420775:	mov    ebp,0x50b5303f
  42077a:	cs push edi
  42077c:	or     eax,0xf9136291
  420781:	fcomp  QWORD PTR [di]
  420784:	dec    edx
  420785:	inc    ecx
  420786:	mov    bh,0xf7
  420788:	out    0x78,eax
  42078a:	add    ah,ch
  42078c:	ss or  eax,0x616091f4
  420792:	xlat   BYTE PTR ds:[ebx]
  420793:	or     edx,DWORD PTR [eax]
  420795:	std    
  420796:	or     al,0x48
  420798:	idiv   DWORD PTR [esi+0x36]
  42079b:	hlt    
  42079c:	mov    cl,0x21
  42079e:	dec    esi
  42079f:	call   0x7b8f0555
  4207a4:	jne    0x420752
  4207a6:	ins    BYTE PTR es:[edi],dx
  4207a7:	mov    esp,0x7ac0dd95
  4207ac:	jne    0x420753
  4207ae:	inc    ebx
  4207af:	inc    eax
  4207b0:	xchg   DWORD PTR [eax-0xb],ecx
  4207b3:	scas   al,BYTE PTR es:[edi]
  4207b4:	jmp    0x4207b1
  4207b6:	xor    DWORD PTR [edx],esi
  4207b8:	aad    0x9e
  4207ba:	shl    ah,0x4e
  4207bd:	scas   al,BYTE PTR es:[edi]
  4207be:	sub    al,BYTE PTR [edi+0x67]
  4207c1:	bound  eax,QWORD PTR [ecx-0x54b65877]
  4207c7:	and    eax,esp
  4207c9:	sub    al,BYTE PTR [ecx-0x5506ac3c]
  4207cf:	test   al,0x4a
  4207d1:	shr    BYTE PTR [ebx+0x1f],cl
  4207d4:	push   0xffffffd1
  4207d6:	popa   
  4207d7:	sub    dh,BYTE PTR [esi]
  4207d9:	lea    ecx,[edx]
  4207db:	pop    ss
  4207dc:	jb     0x4207d8
  4207de:	mov    ebx,ebp
  4207e0:	hlt    
  4207e1:	add    BYTE PTR [esi],bl
  4207e3:	in     al,0x3d
  4207e5:	push   ecx
  4207e6:	add    ch,BYTE PTR [edx-0x7d]
  4207e9:	mov    al,ds:0xf2f7604
  4207ee:	jl     0x42086a
  4207f0:	or     dh,BYTE PTR [esi-0x5cd239fb]
  4207f6:	cmc    
  4207f7:	or     ah,dh
  4207f9:	mov    cl,BYTE PTR [ecx]
  4207fb:	pop    eax
  4207fc:	push   ebx
  4207fd:	sar    BYTE PTR [edi-0x5fa3a565],0xad
  420804:	sbb    esi,DWORD PTR [edi-0x7b]
  420807:	es add eax,eax
  42080a:	(bad)  
  42080b:	(bad)  
  42080c:	test   BYTE PTR [eax],ch
  42080e:	or     esi,eax
  420810:	in     eax,dx
  420811:	mov    ecx,0x5b9a682c
  420817:	mov    ch,0x4a
  420819:	jle    0x420825
  42081b:	mov    ecx,0xb27cafdb
  420820:	in     al,0xf
  420822:	jl     0x420825
  420824:	mov    ds,ebp
  420826:	fiadd  DWORD PTR [esi-0xbf9853]
  42082c:	xlat   BYTE PTR ds:[ebx]
  42082d:	cmp    al,0xef
  42082f:	pop    ss
  420830:	lods   al,BYTE PTR ds:[esi]
  420831:	jle    0x4208aa
  420833:	loop   0x42086c
  420835:	and    BYTE PTR [edx+0x430ef6f0],dl
  42083b:	xor    al,0xb0
  42083d:	push   0xffffffd6
  42083f:	dec    ecx
  420840:	ss pop ebp
  420842:	mov    edx,0x1e944036
  420847:	inc    ebx
  420848:	push   edi
  420849:	mov    dh,ch
  42084b:	push   ds
  42084c:	stos   DWORD PTR es:[edi],eax
  42084d:	push   es
  42084e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084f:	add    al,cl
  420851:	and    ecx,DWORD PTR [ebx+0x61]
  420854:	imul   esp,DWORD PTR [edi-0x77a328b7],0xfffffffa
  42085b:	push   eax
  42085c:	and    DWORD PTR ds:0xaf5569b2,edi
  420862:	repnz push edx
  420864:	sub    DWORD PTR [esi],ebp
  420866:	hlt    
  420867:	dec    esp
  420868:	int    0xe7
  42086a:	pop    es
  42086b:	fldenv [esi-0x18afa059]
  420871:	mov    dl,0x62
  420873:	mul    BYTE PTR [edx]
  420875:	adc    al,0xb2
  420877:	jne    0x4208ae
  420879:	xchg   ebx,eax
  42087a:	inc    edi
  42087b:	ror    DWORD PTR [eax+0x4b],1
  42087e:	sub    BYTE PTR [edi+0x35a10040],bh
  420884:	cmp    dh,BYTE PTR [edx-0x29]
  420887:	and    BYTE PTR [ebx+0x71a1381a],al
  42088d:	jle    0x420845
  42088f:	sub    DWORD PTR [edi+0x35522d6d],0x6f61d5e6
  420899:	nop
  42089a:	fsubr  DWORD PTR [eax]
  42089c:	mov    ch,BYTE PTR [ecx+0x44]
  42089f:	pop    esp
  4208a0:	cmp    cl,ah
  4208a2:	jb     0x420890
  4208a4:	add    ecx,ecx
  4208a6:	mov    ebp,0xe562b752
  4208ab:	out    dx,al
  4208ac:	mov    ebx,?
  4208ae:	dec    ebp
  4208af:	dec    edi
  4208b0:	jle    0x420866
  4208b2:	sub    eax,DWORD PTR [ebx-0x1e]
  4208b5:	les    esi,FWORD PTR [ebp-0x66c88914]
  4208bb:	mov    esi,0xa02d9248
  4208c0:	sbb    edi,ebx
  4208c2:	pop    esp
  4208c3:	aad    0x8f
  4208c5:	ret    
  4208c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c7:	call   DWORD PTR [edi-0x43340589]
  4208cd:	adc    DWORD PTR [ecx-0x27],edi
  4208d0:	aad    0x5d
  4208d2:	out    dx,eax
  4208d3:	stos   BYTE PTR es:[edi],al
  4208d4:	inc    eax
  4208d5:	das    
  4208d6:	or     eax,0x6350119a
  4208db:	das    
  4208dc:	fsubr  QWORD PTR [edi+0x78]
  4208df:	iret   
  4208e0:	mov    edx,0x6366eddf
  4208e5:	scas   eax,DWORD PTR es:[edi]
  4208e6:	shl    BYTE PTR [esi+0x7b],0xea
  4208ea:	ja     0x4208fd
  4208ec:	add    dh,BYTE PTR [edi]
  4208ee:	and    ebp,edi
  4208f0:	mov    edi,0x2645c9c7
  4208f5:	sbb    eax,0xdde12db3
  4208fa:	add    eax,0x52e7201f
  4208ff:	ror    bl,cl
  420901:	or     eax,0xb039c705
  420906:	out    dx,al
  420907:	pop    ds
  420908:	cmp    eax,0x6af73bfc
  42090d:	push   0xffffffd1
  42090f:	ss push edi
  420911:	jno    0x420899
  420913:	ret    
  420914:	lea    esi,[ebx+0x6293e232]
  42091a:	in     eax,dx
  42091b:	fwait
  42091c:	pusha  
  42091d:	sar    BYTE PTR [esi-0x3],0xdf
  420921:	sahf   
  420922:	stc    
  420923:	add    ecx,0xddbd5a8c
  420929:	dec    ebx
  42092a:	or     al,0x7d
  42092c:	arpl   WORD PTR [esi-0x2d],dx
  42092f:	and    DWORD PTR [ebp+0x69],ecx
  420932:	lods   al,BYTE PTR ds:[esi]
  420933:	sbb    bh,bl
  420935:	pop    esi
  420936:	or     esp,DWORD PTR [edi+0x144b6fa1]
  42093c:	imul   esp,DWORD PTR ds:0x2fa7c936,0x6ed02bc6
  420946:	(bad)  [ecx]
  420948:	repz cmp bl,0xec
  42094c:	add    ebp,DWORD PTR [ebp-0x54]
  42094f:	ja     0x420965
  420951:	inc    ecx
  420952:	mov    al,ds:0x91ee3f7f
  420957:	outs   dx,BYTE PTR ss:[esi]
  420959:	cmp    esp,DWORD PTR ds:0xc7d0ef2f
  42095f:	addr16 (bad) 
  420961:	in     eax,dx
  420962:	mov    ecx,0x8c2ba1f3
  420967:	pop    edx
  420968:	cmp    bl,bl
  42096a:	cmp    DWORD PTR [eax-0x3d],edx
  42096d:	jae    0x42094e
  42096f:	push   cs
  420970:	popf   
  420971:	popf   
  420972:	shr    bh,0x8
  420975:	push   0x276baf2
  42097a:	(bad)  [esi+0x56]
  42097d:	pusha  
  42097e:	jle    0x420988
  420980:	mov    ecx,0x845eebbb
  420985:	(bad)
  42098a:	das    
  42098b:	and    esp,ebp
  42098d:	pop    ecx
  42098e:	mov    DWORD PTR [eax-0x12e121d5],0x8528eeae
  420998:	sub    al,0xfb
  42099a:	call   0x2e3e5c53
  42099f:	push   ecx
  4209a0:	stos   DWORD PTR es:[edi],eax
  4209a1:	pmulhw mm7,mm5
  4209a4:	scas   al,BYTE PTR es:[edi]
  4209a5:	or     DWORD PTR [ebp+0x31],edx
  4209a8:	int3   
  4209a9:	sub    DWORD PTR [ebx+eax*4-0x6e6ce790],esi
  4209b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b1:	imul   edx,ebp,0x3b
  4209b4:	in     eax,dx
  4209b5:	mov    BYTE PTR [eax],ch
  4209b7:	xchg   DWORD PTR [ebx],ebp
  4209b9:	lods   eax,DWORD PTR ds:[esi]
  4209ba:	mov    ebx,0xe35c6d1a
  4209bf:	push   ds
  4209c0:	fist   WORD PTR [esp+edx*1+0x7ae3aae4]
  4209c7:	push   eax
  4209c8:	mov    esp,0x59b41dca
  4209cd:	repnz (bad) 
  4209d0:	sti    
  4209d1:	push   es
  4209d2:	dec    esi
  4209d3:	stos   BYTE PTR es:[edi],al
  4209d4:	ss (bad) 
  4209d6:	addr16 and eax,0x72df8f12
  4209dc:	xor    DWORD PTR [ebx+0x26],0x8b116acb
  4209e3:	mov    edi,0xd6c83392
  4209e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e9:	mov    esp,0x6517da8a
  4209ee:	(bad)  
  4209ef:	mov    eax,0xef00fcfb
  4209f4:	in     eax,dx
  4209f5:	iret   
  4209f6:	stos   BYTE PTR es:[edi],al
  4209f7:	loope  0x420a05
  4209f9:	or     dl,BYTE PTR [edx-0x757e034c]
  4209ff:	push   edx
  420a00:	mov    eax,DWORD PTR [edx-0x53b3ec8a]
  420a06:	push   cs
  420a07:	(bad)  
  420a09:	(bad)  
  420a0a:	pop    ss
  420a0b:	dec    eax
  420a0c:	hlt    
  420a0d:	mov    ah,0x4d
  420a0f:	sbb    edi,esp
  420a11:	jmp    0x420993
  420a13:	cwde   
  420a14:	jbe    0x420a1f
  420a16:	out    dx,eax
  420a17:	mov    ds:0x67636be4,al
  420a1c:	add    eax,0x8ba7f102
  420a21:	rol    BYTE PTR [esi],1
  420a23:	xchg   esp,eax
  420a24:	jnp    0x4209a6
  420a26:	push   ss
  420a27:	push   0xfffffff3
  420a29:	shr    BYTE PTR [edx],1
  420a2b:	push   ecx
  420a2c:	cli    
  420a2d:	mov    cl,0x6a
  420a2f:	(bad)  
  420a30:	sbb    bl,BYTE PTR [ecx]
  420a32:	(bad)  
  420a33:	mul    BYTE PTR [edi+0x5f4edb9]
  420a39:	dec    edx
  420a3b:	jl     0x420a33
  420a3d:	sti    
  420a3e:	jbe    0x420a49
  420a40:	pushf  
  420a41:	fiadd  DWORD PTR [ebx+0xf6fd6f]
  420a47:	cmp    ah,BYTE PTR [edx-0x36ebe6f1]
  420a4d:	shl    DWORD PTR [ecx+0xba4a62],0xc2
  420a54:	jo     0x420a3b
  420a56:	dec    edi
  420a57:	call   0x3d3ef9a9
  420a5c:	sbb    eax,0xfb7f3211
  420a61:	jle    0x420a71
  420a63:	(bad)  
  420a64:	aam    0xb7
  420a66:	imul   edx,DWORD PTR [edx],0xffffff91
  420a69:	xor    BYTE PTR [ecx+ebp*1],al
  420a6c:	adc    BYTE PTR [ebx+ebx*2+0x15],al
  420a70:	mov    ch,0x5a
  420a72:	enter  0xa69c,0x22
  420a76:	mov    ds:0x8cf99d22,eax
  420a7b:	fstp   TBYTE PTR [ebp+ebx*2-0x17910423]
  420a82:	arpl   cx,sp
  420a84:	loope  0x420a49
  420a86:	push   ecx
  420a87:	cmc    
  420a88:	stos   BYTE PTR es:[edi],al
  420a89:	pushf  
  420a8a:	add    bh,BYTE PTR [ebp-0x5c1d5c49]
  420a90:	xlat   BYTE PTR ds:[ebx]
  420a91:	out    dx,eax
  420a92:	sar    BYTE PTR [ebp+0x3b],cl
  420a95:	sub    al,0x0
  420a97:	ss push cs
  420a99:	xchg   ebp,eax
  420a9a:	xlat   BYTE PTR ds:[ebx]
  420a9b:	mov    edx,0x7c44d0d2
  420aa0:	push   esi
  420aa1:	aaa    
  420aa2:	sbb    BYTE PTR [eax-0x2e],ch
  420aa5:	loopne 0x420a74
  420aa7:	cmp    al,0xae
  420aa9:	xchg   edi,eax
  420aaa:	xlat   BYTE PTR ds:[ebx]
  420aab:	lods   al,BYTE PTR ds:[esi]
  420aac:	mov    dh,BYTE PTR [eax+0x357a271f]
  420ab2:	ret    0x94d7
  420ab5:	sub    ebx,DWORD PTR [edi+edx*4]
  420ab8:	jmp    0x6dd6:0xc497b781
  420abf:	xchg   edi,eax
  420ac0:	xor    eax,0x653d6ceb
  420ac5:	jmp    0x9be685e2
  420aca:	jecxz  0x420b38
  420acc:	jmp    DWORD PTR [esi]
  420ace:	ins    DWORD PTR es:[edi],dx
  420acf:	jbe    0x420ac4
  420ad1:	retf   
  420ad2:	rcr    BYTE PTR [ecx+esi*1-0x3a],1
  420ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ad7:	nop
  420ad8:	adc    DWORD PTR [eax+0x157ab235],0xa1c13514
  420ae2:	push   es
  420ae3:	pushf  
  420ae4:	idiv   DWORD PTR [ebx-0x65]
  420ae7:	lea    edi,[eax+0x16d89320]
  420aed:	retf   0xb5e6
  420af0:	hlt    
  420af1:	mov    ebp,0x8ce974f2
  420af6:	aas    
  420af7:	shl    DWORD PTR [edi+0x11],cl
  420afa:	icebp  
  420afb:	and    ebx,DWORD PTR [ecx-0x1]
  420afe:	jg     0x420aca
  420b00:	jle    0x420ab6
  420b02:	push   eax
  420b03:	int3   
  420b04:	les    edx,FWORD PTR [edi-0x47]
  420b07:	je     0x420adf
  420b09:	lods   al,BYTE PTR ds:[esi]
  420b0a:	sbb    BYTE PTR [ebx-0x4011f5aa],al
  420b10:	fsub   st(0),st
  420b12:	and    eax,0x2803b98a
  420b17:	adc    dl,BYTE PTR [edx+eax*1]
  420b1a:	push   ebp
  420b1b:	sbb    DWORD PTR [esi],esp
  420b1d:	pop    esp
  420b1e:	mov    WORD PTR [ecx+0x79abf73c],ss
  420b24:	inc    edx
  420b25:	xchg   esp,eax
  420b26:	mov    ch,0xec
  420b28:	(bad)  
  420b29:	not    BYTE PTR [ecx-0x54]
  420b2c:	add    al,0x15
  420b2e:	add    edi,DWORD PTR [ebx]
  420b30:	into   
  420b31:	adc    BYTE PTR [ecx+edx*4+0x35],al
  420b35:	mov    edi,0xe5e05ad9
  420b3a:	or     DWORD PTR [esi-0x17aa9dc7],eax
  420b40:	push   0x3d
  420b42:	push   es
  420b43:	dec    ecx
  420b44:	xchg   ebp,eax
  420b45:	retf   
  420b46:	mov    ecx,0x1df980f7
  420b4b:	loopne 0x420b8c
  420b4d:	jmp    0xbbdabf
  420b52:	adc    edi,ebx
  420b54:	sub    al,0xcf
  420b56:	fild   WORD PTR [edi+0x2e29ad85]
  420b5c:	mov    ebx,0xcdf8645
  420b61:	pusha  
  420b62:	xor    eax,0x6fffa76f
  420b67:	mov    ?,esi
  420b69:	lods   al,BYTE PTR ds:[esi]
  420b6a:	outs   dx,DWORD PTR ds:[esi]
  420b6b:	adc    BYTE PTR [ebx+0xd],al
  420b6e:	jmp    0x420be1
  420b70:	sbb    DWORD PTR [edi-0x12],0x69
  420b74:	pop    es
  420b75:	mov    ds:0x44b1753e,eax
  420b7a:	push   edi
  420b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b7c:	mov    BYTE PTR [ecx-0x60793636],al
  420b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b83:	(bad)  
  420b84:	in     eax,dx
  420b85:	inc    ebp
  420b86:	xchg   edi,eax
  420b87:	cli    
  420b88:	push   es
  420b89:	cdq    
  420b8a:	mov    al,BYTE PTR [esi]
  420b8c:	(bad)  
  420b8d:	pusha  
  420b8e:	mov    al,0x3f
  420b90:	and    ecx,0xc07d05cf
  420b96:	add    DWORD PTR [ebx+0x425dba13],eax
  420b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b9d:	mov    ecx,0xa09a55e3
  420ba2:	sub    al,0x76
  420ba4:	not    BYTE PTR [esi-0xb]
  420ba7:	lahf   
  420ba8:	cs inc eax
  420baa:	sbb    eax,0x4a6cc2aa
  420baf:	pop    edi
  420bb0:	pop    edi
  420bb1:	xchg   ebp,eax
  420bb2:	hlt    
  420bb3:	gs das 
  420bb5:	in     al,dx
  420bb6:	repnz and al,0x7f
  420bb9:	ja     0x420ba4
  420bbb:	ins    BYTE PTR es:[edi],dx
  420bbc:	sbb    DWORD PTR [eax+0x7c],esp
  420bbf:	jmp    0x6b8b76f
  420bc4:	adc    dh,ah
  420bc6:	(bad)  
  420bc7:	outs   dx,BYTE PTR ds:[esi]
  420bc8:	out    dx,al
  420bc9:	add    ch,BYTE PTR [ebp-0x21de0046]
  420bcf:	mov    al,0xf6
  420bd1:	cmp    dh,dh
  420bd3:	and    al,0xda
  420bd5:	pop    eax
  420bd6:	xlat   BYTE PTR ds:[ebx]
  420bd7:	xor    BYTE PTR [eax+ebp*4+0x73],ah
  420bdb:	adc    DWORD PTR [bx-0x6],0xd6b3f965
  420be3:	jg     0x420bfc
  420be5:	cmc    
  420be6:	jnp    0x420bab
  420be8:	ins    DWORD PTR es:[edi],dx
  420be9:	inc    edx
  420bea:	cmp    esp,esi
  420bec:	adc    BYTE PTR [esi],ah
  420bee:	(bad)  
  420bf0:	shr    DWORD PTR [edi],cl
  420bf2:	ss cwde 
  420bf4:	cld    
  420bf5:	scas   al,BYTE PTR es:[edi]
  420bf6:	push   ds
  420bf7:	int3   
  420bf8:	dec    edi
  420bf9:	(bad)  
  420bfb:	loopne 0x420c20
  420bfd:	mov    edx,0xccba6950
  420c02:	ret    0x218f
  420c05:	mov    ds:0x2a5afc72,al
  420c0a:	imul   ecx,edi,0xd5c67a9e
  420c10:	add    edi,esp
  420c12:	cmp    DWORD PTR [esi+0x3f109248],edi
  420c18:	sub    esp,ebx
  420c1a:	cmp    esi,eax
  420c1c:	lock xchg ebx,eax
  420c1e:	jno    0x420c72
  420c20:	cs or  eax,0x76893fd2
  420c26:	out    dx,eax
  420c27:	xchg   ebp,eax
  420c28:	sub    DWORD PTR [esi+0x4a],0x65
  420c2c:	jns    0x420c89
  420c2e:	ret    
  420c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c30:	pop    ecx
  420c31:	mov    ds:0x66e64b20,eax
  420c36:	xchg   ecx,eax
  420c37:	pop    esi
  420c38:	add    DWORD PTR [ecx],ebx
  420c3a:	dec    esp
  420c3b:	xchg   esi,eax
  420c3c:	pushf  
  420c3d:	mov    eax,ds:0x5edac3ba
  420c42:	mov    ebx,ebx
  420c44:	pop    ds
  420c45:	pop    ss
  420c46:	cmp    al,0x8d
  420c48:	push   edi
  420c49:	mov    ch,0x42
  420c4b:	or     eax,0xa7da91bc
  420c50:	enter  0x2d4a,0x5e
  420c54:	call   0xa83d81ea
  420c59:	dec    ebx
  420c5a:	(bad)  
  420c5b:	jmp    0x47b9:0x5568e229
  420c62:	out    dx,al
  420c63:	pop    ecx
  420c64:	ret    
  420c65:	jne    0x420c62
  420c67:	jle    0x420c56
  420c69:	dec    ecx
  420c6a:	sub    ah,dh
  420c6c:	mov    bl,0x78
  420c6e:	mov    al,0x47
  420c70:	sbb    cl,bl
  420c72:	mov    bl,0xf2
  420c74:	fisubr DWORD PTR [eax+0x2d1fbdba]
  420c7a:	div    BYTE PTR [esi+0x4c0ca2f7]
  420c80:	fsubr  DWORD PTR [esi]
  420c82:	mov    bh,0x89
  420c84:	cld    
  420c85:	stos   BYTE PTR es:[edi],al
  420c86:	mov    ecx,0xccd04991
  420c8b:	push   esp
  420c8c:	repnz ins BYTE PTR es:[edi],dx
  420c8e:	adc    eax,0x721f416e
  420c93:	add    al,0x6b
  420c95:	call   DWORD PTR [ebx-0x34]
  420c98:	lea    esi,[edx]
  420c9a:	out    dx,eax
  420c9b:	or     eax,0xebca0683
  420ca0:	les    bx,DWORD PTR [edi-0x76]
  420ca4:	mov    ds:0x84665c92,eax
  420ca9:	push   es
  420caa:	in     eax,0xa6
  420cac:	repnz cmp al,0xf
  420caf:	jg     0x420c48
  420cb1:	imul   edi,DWORD PTR [esi],0x14a71349
  420cb7:	adc    BYTE PTR [esp+ecx*1],dh
  420cba:	pop    ecx
  420cbb:	lock mov eax,ds:0xd8789fc3
  420cc1:	and    al,0x8a
  420cc3:	sub    DWORD PTR [eax],0xbedb5d5b
  420cc9:	sahf   
  420cca:	dec    edi
  420ccb:	stc    
  420ccc:	ja     0x420ce5
  420cce:	(bad)  
  420ccf:	imul   ecx,DWORD PTR [eax+eiz*2],0xffffffc2
  420cd3:	mov    al,ds:0x289f8b6b
  420cd8:	jae    0x420ce0
  420cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cdb:	sbb    eax,0x50c8e41a
  420ce0:	push   ebp
  420ce1:	xchg   edx,eax
  420ce2:	and    al,0x29
  420ce4:	fwait
  420ce5:	lahf   
  420ce6:	mov    eax,0xa2e7149b
  420ceb:	mov    eax,ds:0x81a6087a
  420cf0:	push   ecx
  420cf1:	jb     0x420cba
  420cf3:	push   esi
  420cf4:	arpl   bp,di
  420cf6:	sub    al,0x8f
  420cf8:	pop    ebx
  420cf9:	loopne 0x420d55
  420cfb:	loopne 0x420d48
  420cfd:	xchg   esp,eax
  420cfe:	ret    0xe429
  420d01:	or     edx,esi
  420d03:	mov    ch,0xf4
  420d05:	pop    ecx
  420d06:	fcmovbe st,st(6)
  420d08:	mov    WORD PTR cs:[ecx+0x73],gs
  420d0c:	mov    dh,0x2c
  420d0e:	add    eax,0x4b1b49db
  420d13:	pop    edx
  420d14:	jo     0x420d62
  420d16:	inc    ebx
  420d17:	adc    eax,0x3bb965aa
  420d1c:	sbb    BYTE PTR [edi+0x3dd8c190],bh
  420d22:	mov    dh,bh
  420d24:	xchg   BYTE PTR [eax+ebp*1-0x75],cl
  420d28:	pop    ebx
  420d29:	in     eax,dx
  420d2a:	mov    ds:0x17062b8f,eax
  420d2f:	sub    DWORD PTR ds:[ebp+0x1c],esi
  420d33:	ss adc bh,bl
  420d36:	and    al,0x60
  420d38:	sbb    al,0x51
  420d3a:	sar    eax,cl
  420d3c:	scas   al,BYTE PTR es:[edi]
  420d3d:	mov    ds:0xc12898d1,al
  420d42:	hlt    
  420d43:	push   edx
  420d45:	repnz aas 
  420d47:	xor    DWORD PTR [ebx-0x1d],ebp
  420d4a:	xchg   ecx,eax
  420d4b:	mov    esp,0x4f6039c6
  420d50:	adc    edi,DWORD PTR [esi+0x4a7b1cb9]
  420d56:	or     al,0xe7
  420d58:	repnz jecxz 0x420dd7
  420d5b:	aaa    
  420d5c:	les    ebx,FWORD PTR [ebp-0xa]
  420d5f:	fst    QWORD PTR [edx+0x2]
  420d62:	test   edi,ebp
  420d64:	call   0x6180b786
  420d69:	sti    
  420d6a:	mov    ch,0xe1
  420d6c:	rol    dh,1
  420d6e:	xchg   ch,ch
  420d70:	push   esi
  420d71:	jmp    0x518b0a3b
  420d76:	mov    dh,0x72
  420d78:	adc    eax,0xcb2ab67e
  420d7d:	daa    
  420d7e:	test   edx,ecx
  420d80:	lock ins BYTE PTR es:[edi],dx
  420d82:	add    cl,ch
  420d84:	xor    esp,DWORD PTR [eax]
  420d86:	aam    0x8c
  420d88:	dec    edx
  420d89:	dec    BYTE PTR [ebp+eax*2+0x3e0c75fa]
  420d90:	pusha  
  420d91:	cwde   
  420d92:	pop    esp
  420d93:	jbe    0x420d59
  420d95:	jl     0x420dbd
  420d97:	push   ss
  420d98:	pop    edx
  420d99:	or     bx,si
  420d9c:	daa    
  420d9d:	int    0xdd
  420d9f:	std    
  420da0:	in     eax,dx
  420da1:	arpl   sp,si
  420da3:	mov    bh,bl
  420da5:	je     0x420e17
  420da7:	and    bh,dl
  420da9:	jno    0x420dbb
  420dab:	es ret 0xa0c7
  420daf:	xor    ebx,esp
  420db1:	push   edx
  420db2:	adc    eax,0x38198b1a
  420db7:	and    al,0x7c
  420db9:	xchg   ecx,eax
  420dba:	adc    dh,BYTE PTR [esi+0x29]
  420dbd:	lahf   
  420dbe:	jmp    0x420d43
  420dc0:	add    BYTE PTR [edx+0x37],ah
  420dc3:	fstp   QWORD PTR [edx]
  420dc5:	mov    WORD PTR [eax],es
  420dc7:	adc    bl,ah
  420dc9:	gs out dx,eax
  420dcb:	rcl    BYTE PTR [ecx-0x39356e4],cl
  420dd1:	int    0xa7
  420dd3:	sbb    al,ch
  420dd5:	jg     0x420dc6
  420dd7:	mov    esp,0xc654086a
  420ddc:	test   DWORD PTR gs:[eax+0x7],ecx
  420de0:	mov    dh,0x44
  420de2:	adc    eax,0x14b955d6
  420de7:	add    eax,0xb3927139
  420dec:	test   BYTE PTR [edx],bl
  420dee:	xlat   BYTE PTR ds:[ebx]
  420def:	xchg   ebx,eax
  420df0:	sbb    DWORD PTR [eax-0x2a],esp
  420df3:	shl    edx,0x84
  420df6:	jmp    0xb748f76
  420dfb:	push   edi
  420dfc:	sbb    ecx,esi
  420dfe:	sbb    BYTE PTR [esi],al
  420e00:	cmp    ebp,DWORD PTR [ebx-0x8]
  420e03:	shr    ch,0x56
  420e06:	outs   dx,BYTE PTR ds:[esi]
  420e07:	mul    BYTE PTR [ebp+0x35]
  420e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e0b:	mov    al,0x51
  420e0d:	cmp    DWORD PTR ds:0xcce5fff5,ebp
  420e13:	xchg   ebx,eax
  420e14:	out    dx,al
  420e15:	inc    si
  420e17:	pop    es
  420e18:	ja     0x420e31
  420e1a:	push   esp
  420e1b:	mov    dl,0xce
  420e1d:	je     0x420e58
  420e1f:	mov    ebx,0x1feb2b34
  420e24:	dec    ecx
  420e25:	outs   dx,BYTE PTR ds:[esi]
  420e26:	or     DWORD PTR [edi-0x30],esi
  420e29:	pop    es
  420e2a:	add    eax,0xf5908732
  420e2f:	xchg   ebx,eax
  420e30:	push   edi
  420e31:	daa    
  420e32:	jae    0x420e58
  420e34:	jno    0x420e6c
  420e36:	push   ebx
  420e37:	stc    
  420e38:	test   DWORD PTR [ebp+0x21],ecx
  420e3b:	(bad)  
  420e3c:	leave  
  420e3d:	add    al,0x81
  420e3f:	and    DWORD PTR [ecx-0x2d9a84aa],esi
  420e45:	inc    BYTE PTR [edi]
  420e47:	fmul   st,st(6)
  420e49:	ins    DWORD PTR es:[edi],dx
  420e4a:	sub    DWORD PTR [edi-0x25],ecx
  420e4d:	pop    eax
  420e4e:	mov    dh,BYTE PTR [edi]
  420e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e51:	loope  0x420ea5
  420e53:	pop    ebx
  420e54:	data16 mov al,0xcb
  420e57:	loopne 0x420dfa
  420e59:	push   eax
  420e5a:	idiv   BYTE PTR [eax+0x5432dd0c]
  420e60:	pop    edx
  420e61:	inc    edx
  420e62:	aas    
  420e63:	push   ecx
  420e64:	fidivr DWORD PTR [edi+edi*1-0x4e2145f2]
  420e6b:	mov    dh,0xeb
  420e6d:	ret    0xde6
  420e70:	hlt    
  420e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e72:	xlat   BYTE PTR ds:[ebx]
  420e73:	xlat   BYTE PTR ds:[ebx]
  420e74:	ret    
  420e75:	int3   
  420e76:	sbb    eax,0xb07152b1
  420e7b:	jle    0x420e40
  420e7d:	imul   ebx,DWORD PTR [edx+0x10],0xffffffd3
  420e81:	push   0x39
  420e83:	shr    BYTE PTR [ebx+ecx*8],0xc7
  420e87:	adc    ecx,ecx
  420e89:	jb     0x420ebf
  420e8b:	add    ch,dh
  420e8d:	call   0xbbac:0x359286cb
  420e94:	inc    edx
  420e95:	fcomp  QWORD PTR [ecx+0x483ef468]
  420e9b:	mov    esi,0xd4006e9
  420ea0:	inc    edx
  420ea1:	jl     0x420ed7
  420ea3:	jp     0x420ee9
  420ea5:	cmp    ecx,edx
  420ea7:	rcr    DWORD PTR [edx],1
  420ea9:	aam    0x9b
  420eab:	mov    ecx,0xae6e8204
  420eb0:	icebp  
  420eb1:	retf   
  420eb2:	push   es
  420eb3:	je     0x420e85
  420eb5:	fs sub edx,ecx
  420eb8:	mov    ds:0x668fc4a3,eax
  420ebd:	cmp    DWORD PTR [ecx+0x203bf592],ecx
  420ec3:	xchg   DWORD PTR [edx-0x17cecbf9],ecx
  420ec9:	pop    edx
  420eca:	fsubr  DWORD PTR [ecx]
  420ecc:	xor    cl,BYTE PTR [eax-0xc5983b3]
  420ed2:	std    
  420ed3:	jb     0x420e76
  420ed5:	add    al,cl
  420ed7:	in     al,dx
  420ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed9:	jo     0x420eb8
  420edb:	and    edi,DWORD PTR ds:0x79a259ad
  420ee1:	push   ds
  420ee2:	adc    DWORD PTR [eax+ebx*8-0x21],esi
  420ee6:	fsub   QWORD PTR [esi+edi*2]
  420ee9:	mov    BYTE PTR [ecx],0x56
  420eec:	jp     0x420f2c
  420eee:	shl    DWORD PTR [eax],0x9f
  420ef1:	push   ss
  420ef2:	(bad)  
  420ef3:	push   esp
  420ef4:	and    al,0x7a
  420ef6:	mov    bl,0x3d
  420ef8:	mov    DWORD PTR [edi],esi
  420efa:	jnp    0x420f6a
  420efc:	bswap  edi
  420efe:	scas   eax,DWORD PTR es:[edi]
  420eff:	out    0xf5,eax
  420f01:	xchg   esp,eax
  420f02:	lea    ebx,ds:0xa437d7cb
  420f08:	push   edx
  420f09:	test   eax,0x5ff8c385
  420f0e:	cmp    eax,0xf774bc77
  420f13:	mov    esp,0xa7ba3030
  420f18:	cdq    
  420f19:	ss call 0x6dece996
  420f1f:	sbb    al,BYTE PTR [ecx]
  420f21:	outs   dx,BYTE PTR ds:[esi]
  420f22:	outs   dx,BYTE PTR ds:[esi]
  420f23:	lods   al,BYTE PTR ds:[esi]
  420f24:	mov    DWORD PTR [edx+edx*8],ebx
  420f27:	lods   al,BYTE PTR ds:[esi]
  420f28:	dec    esp
  420f29:	sbb    al,0x67
  420f2b:	sub    bl,ah
  420f2d:	int3   
  420f2e:	sbb    BYTE PTR [edi+0x7b837c4e],al
  420f34:	fwait
  420f35:	push   ecx
  420f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f37:	ds in  eax,dx
  420f39:	fld    QWORD PTR [esi]
  420f3b:	(bad)  
  420f3c:	int    0x1b
  420f3e:	shl    DWORD PTR [eax+0x4c],cl
  420f41:	div    BYTE PTR [ecx+0x545bddf8]
  420f47:	aas    
  420f48:	pop    ebp
  420f49:	outs   dx,BYTE PTR ds:[esi]
  420f4a:	pop    ebx
  420f4b:	jmp    0x420ee7
  420f4d:	iret   
  420f4e:	inc    eax
  420f4f:	pop    edi
  420f50:	repz out 0x35,al
  420f53:	mov    dh,0x5a
  420f55:	std    
  420f56:	sub    DWORD PTR [esi-0x1029d274],edx
  420f5c:	push   ecx
  420f5d:	adc    al,BYTE PTR [ecx+eiz*4+0x5a]
  420f61:	in     eax,0x31
  420f63:	pop    edi
  420f64:	sub    al,0x1
  420f66:	aaa    
  420f67:	retf   
  420f68:	je     0x420f2f
  420f6a:	xor    eax,0x9ba9ae51
  420f6f:	out    dx,eax
  420f70:	lods   eax,DWORD PTR ds:[esi]
  420f71:	jne    0x420fbb
  420f73:	not    DWORD PTR [ebx-0xddfbd2d]
  420f79:	inc    ecx
  420f7a:	push   ax
  420f7c:	inc    edx
  420f7d:	dec    ecx
  420f7e:	repz mov esi,0xe93b6ab9
  420f84:	nop
  420f85:	xchg   ebx,eax
  420f86:	mov    DWORD PTR [eax-0x23],esi
  420f89:	push   cs
  420f8a:	nop
  420f8b:	mov    al,0xcf
  420f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f8e:	cmc    
  420f8f:	sbb    BYTE PTR [esi],ch
  420f91:	pop    edx
  420f92:	dec    eax
  420f93:	ret    
  420f94:	mov    cl,0x24
  420f96:	jmp    0x98b2:0x8f19923b
  420f9d:	sbb    eax,0xa3df57bf
  420fa2:	addr16 add al,0x4d
  420fa5:	sub    al,0xd5
  420fa7:	sbb    eax,0x4dc3a8e
  420fac:	mov    dl,0x40
  420fae:	mov    ds:0x2570c4e,al
  420fb3:	sbb    ebp,ecx
  420fb5:	xor    BYTE PTR [esi],bl
  420fb7:	faddp  st(6),st
  420fb9:	popf   
  420fba:	pop    ds
  420fbb:	fiadd  DWORD PTR [ebp-0x3]
  420fbe:	iret   
  420fbf:	in     al,0xa3
  420fc1:	jle    0x420fc1
  420fc3:	rol    DWORD PTR [esp+eax*1-0x2b],0xfc
  420fc8:	into   
  420fc9:	js     0x420fc0
  420fcb:	test   eax,0x347418a6
  420fd0:	(bad)  ds:0x1c64061
  420fd6:	ins    BYTE PTR es:[edi],dx
  420fd7:	mov    ch,0xa1
  420fd9:	lea    ecx,[esi+0x96ca8a1]
  420fdf:	xor    bh,BYTE PTR [esi]
  420fe1:	jl     0x420fbf
  420fe3:	(bad)  [ecx-0x5ef7536f]
  420fe9:	jle    0x42102b
  420feb:	femms  
  420fed:	cli    
  420fee:	push   0x21b7fefc
  420ff3:	test   bl,0x6c
  420ff6:	jne    0x42104e
  420ff8:	mov    ds:0xb0635fc7,eax
  420ffd:	mov    bh,0x35
  420fff:	out    0x39,al
  421001:	je     0x420f99
  421003:	dec    ecx
  421004:	(bad)  
  421005:	jge    0x420fa7
  421007:	jge    0x42100c
  421009:	xor    DWORD PTR [esi+0x31a4a924],ebx
  42100f:	in     al,dx
  421010:	(bad)  
  421011:	mov    esp,0xfd13a107
  421016:	xchg   ebx,eax
  421017:	jecxz  0x420fa2
  421019:	mov    eax,0x67b7ec3d
  42101e:	in     eax,0xb6
  421020:	cmp    BYTE PTR [eax+0xdde2b20],dh
  421026:	inc    ebp
  421027:	inc    eax
  421028:	mov    ds:0x2099ba6c,eax
  42102d:	push   cs
  42102e:	popf   
  42102f:	dec    edi
  421030:	jmp    ebp
  421032:	push   esp
  421033:	cwde   
  421034:	es js  0x42106e
  421037:	(bad)  
  421038:	out    0x1c,eax
  42103a:	push   cs
  42103b:	pop    edx
  42103c:	mov    al,0xd7
  42103e:	cmc    
  42103f:	cwde   
  421040:	push   esp
  421041:	popf   
  421042:	jp     0x4210ad
  421044:	pop    esi
  421045:	cmc    
  421046:	in     al,dx
  421047:	push   esi
  421048:	add    al,ch
  42104a:	call   DWORD PTR [eax+ebx*8+0xf]
  42104e:	ds in  eax,dx
  421050:	addr16 ss (bad) 
  421053:	fisubr DWORD PTR [edx+0x1852c88b]
  421059:	out    0xd8,eax
  42105b:	repz pop ecx
  42105d:	jmp    0x96d83c42
  421062:	addr16 push 0x72
  421065:	sub    DWORD PTR [esi],edi
  421067:	repnz mov cl,0xa7
  42106a:	pop    ds
  42106b:	call   0x893fc728
  421070:	adc    eax,0x43ae357e
  421075:	fistp  DWORD PTR [edx]
  421077:	jb     0x4210ca
  421079:	inc    eax
  42107a:	cmp    eax,0x7a31d0df
  42107f:	inc    eax
  421080:	imul   ebx,DWORD PTR [ecx-0x1],0xffffff94
  421084:	shl    BYTE PTR [ebx+0x1a],cl
  421087:	cmp    edx,DWORD PTR [edi]
  421089:	cdq    
  42108a:	dec    ecx
  42108b:	push   esi
  42108c:	jp     0x421093
  42108e:	dec    ebp
  42108f:	lea    esp,[edx+0x7f]
  421092:	sbb    al,0x85
  421094:	scas   al,BYTE PTR es:[edi]
  421095:	in     eax,0xf0
  421097:	shl    DWORD PTR [ebx],cl
  421099:	stos   BYTE PTR es:[edi],al
  42109a:	lods   al,BYTE PTR ds:[esi]
  42109b:	pop    ebx
  42109c:	push   ebx
  42109d:	mov    BYTE PTR [edx+0x3b54c9c1],ah
  4210a3:	loope  0x42104e
  4210a5:	pop    esi
  4210a6:	xchg   ebp,eax
  4210a7:	arpl   WORD PTR ds:0xc30d069b,sp
  4210ad:	adc    DWORD PTR [ebx-0x5275cea7],edi
  4210b3:	je     0x4210a5
  4210b5:	mov    ebp,0x5f0d3272
  4210ba:	dec    ebx
  4210bb:	jp     0x421046
  4210bd:	xor    DWORD PTR [eax+0x6e],ebx
  4210c0:	aad    0x3b
  4210c2:	leave  
  4210c3:	or     DWORD PTR [ecx-0x4b3383cb],esi
  4210c9:	mov    ah,BYTE PTR [ebx]
  4210cb:	inc    esp
  4210cc:	pop    ss
  4210cd:	push   ebp
  4210ce:	mov    al,ds:0x5871e226
  4210d3:	mov    bl,0xfe
  4210d5:	mov    al,ds:0x8f720260
  4210da:	in     eax,0x79
  4210dc:	cwde   
  4210dd:	fidivr WORD PTR [ecx+0x5a]
  4210e0:	inc    edx
  4210e1:	sub    BYTE PTR [eax*1+0x484b396f],dl
  4210e8:	xchg   esi,eax
  4210e9:	std    
  4210ea:	frstor [edi-0x57]
  4210ed:	mov    eax,ds:0x7d613427
  4210f2:	push   esp
  4210f3:	retf   0x8617
  4210f6:	pop    edx
  4210f7:	stc    
  4210f8:	cmp    al,0x2b
  4210fa:	inc    edx
  4210fb:	xchg   ebp,eax
  4210fc:	lahf   
  4210fd:	shr    DWORD PTR [ebx+0x3f],cl
  421100:	mov    edx,0xbcf3a502
  421105:	shl    al,0xfc
  421108:	pop    ebx
  421109:	mov    bh,0x41
  42110b:	dec    ecx
  42110c:	add    al,0xa7
  42110e:	add    BYTE PTR es:[ecx-0x2f],0x7e
  421113:	jno    0x4210e4
  421115:	cmp    DWORD PTR [eax+eiz*1-0x17570846],0x163081df
  421120:	(bad)  
  421121:	repnz add eax,0xf7d4a8d1
  421127:	jne    0x421111
  421129:	adc    eax,0xa22c9bcf
  42112e:	pop    edi
  42112f:	(bad)  
  421130:	stc    
  421131:	int3   
  421132:	dec    ebp
  421133:	xor    al,BYTE PTR [esi+0x75]
  421136:	adc    eax,0x199242ba
  42113b:	xchg   esp,eax
  42113c:	enter  0x7750,0x48
  421140:	xor    bl,BYTE PTR [esi+ebp*4]
  421143:	cmp    al,0x8d
  421145:	jo     0x4210fc
  421147:	(bad)  
  421148:	loop   0x4210f7
  42114a:	xchg   esi,eax
  42114b:	push   ecx
  42114c:	mov    ds:0x9977a0ff,al
  421151:	lds    ecx,FWORD PTR fs:[edi+0x4c6ceb24]
  421158:	fninit 
  42115a:	inc    ecx
  42115b:	(bad)  
  42115c:	push   ebp
  42115d:	add    ebp,DWORD PTR [edi+0x16905c6f]
  421163:	cmp    eax,0x9668cef1
  421168:	bound  edx,QWORD PTR [ebx-0x5d61e4d4]
  42116e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42116f:	inc    ecx
  421170:	cs hlt 
  421172:	icebp  
  421173:	ss jmp 0x42116c
  421176:	pop    esp
  421177:	sbb    edx,0x6af6d324
  42117d:	sbb    al,0xfa
  42117f:	imul   DWORD PTR [ebx+edx*4-0x30]
  421183:	mov    bh,0xe0
  421185:	fidiv  WORD PTR [eax+0x33]
  421188:	outs   dx,DWORD PTR ds:[esi]
  421189:	sbb    ch,BYTE PTR [esi+ebp*8]
  42118c:	mov    bl,0xe8
  42118e:	pminub mm7,QWORD PTR [ecx-0x123dd86d]
  421195:	daa    
  421196:	(bad)  
  421197:	ja     0x4211c3
  421199:	sbb    al,BYTE PTR [edx+0x6ab4d4d3]
  42119f:	mov    ds:0xf4c84da8,al
  4211a4:	push   0x44
  4211a6:	ret    
  4211a7:	es push cs
  4211a9:	daa    
  4211aa:	or     eax,0x21c47ad8
  4211af:	out    0xf8,eax
  4211b1:	push   ebp
  4211b2:	outs   dx,DWORD PTR ds:[esi]
  4211b3:	inc    ebx
  4211b4:	xor    al,0xea
  4211b6:	xchg   esi,eax
  4211b7:	sub    esp,eax
  4211b9:	xor    al,ah
  4211bb:	retf   
  4211bc:	cli    
  4211bd:	sub    al,0x21
  4211bf:	lods   eax,DWORD PTR ds:[esi]
  4211c0:	or     eax,0xfbc357fc
  4211c5:	add    eax,DWORD PTR [ebx+0x411eee44]
  4211cb:	neg    BYTE PTR [ebp-0x1a06d09f]
  4211d1:	xchg   DWORD PTR [edx-0x74],edx
  4211d4:	inc    esi
  4211d5:	popf   
  4211d6:	(bad)  
  4211d8:	sar    DWORD PTR [edi-0x79],1
  4211db:	loopne 0x421209
  4211dd:	not    DWORD PTR [eax]
  4211df:	push   ss
  4211e0:	sbb    esi,edx
  4211e2:	les    edx,FWORD PTR [edx+eax*8+0x7e]
  4211e6:	sub    DWORD PTR [edx-0x2b],0x2a928403
  4211ed:	jno    0x4211c0
  4211ef:	pusha  
  4211f0:	jmp    0x4211ff
  4211f2:	add    bl,dh
  4211f4:	out    0x48,eax
  4211f6:	stos   BYTE PTR es:[edi],al
  4211f7:	(bad)  
  4211f8:	jnp    0x4211bb
  4211fa:	xchg   ah,dh
  4211fc:	jmp    0x94331439
  421201:	leave  
  421202:	inc    ecx
  421203:	data16 repz cmp BYTE PTR [ebp-0x19ce458f],0x22
  42120c:	jns    0x421273
  42120e:	pushw  0xffec
  421211:	xor    eax,0x71d91cf8
  421216:	stos   BYTE PTR es:[edi],al
  421217:	xchg   esp,eax
  421218:	add    BYTE PTR [edx+ebp*8+0x25],cl
  42121c:	mov    eax,0xadf2f3b8
  421221:	fwait
  421222:	jns    0x421266
  421224:	and    bh,al
  421226:	ds pop edx
  421228:	popa   
  421229:	arpl   WORD PTR [ebx+0x3c],ax
  42122c:	mov    es:0x77b8b3aa,eax
  421232:	or     DWORD PTR [edi],ebx
  421234:	jle    0x42124c
  421236:	mul    BYTE PTR [ebx]
  421238:	call   FWORD PTR [eax]
  42123a:	or     al,0xd2
  42123c:	and    al,0x9f
  42123e:	add    al,0x20
  421240:	xchg   esi,eax
  421241:	xchg   DWORD PTR [esi-0x45],edx
  421244:	cmp    DWORD PTR [esi+0x60],edx
  421247:	sbb    BYTE PTR [ebx+0x41ff838d],ch
  42124d:	jne    0x421233
  42124f:	push   esp
  421250:	pop    ecx
  421251:	aaa    
  421252:	xor    ch,BYTE PTR [edx+edi*2-0x3d]
  421256:	shr    ch,0x28
  421259:	inc    eax
  42125a:	js     0x421264
  42125c:	std    
  42125d:	(bad)  
  42125e:	xchg   edi,eax
  42125f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421260:	into   
  421261:	ret    0xc377
  421264:	in     eax,0x36
  421266:	mov    cl,0xba
  421268:	(bad)  
  421269:	clc    
  42126a:	gs cmc 
  42126c:	stos   BYTE PTR es:[edi],al
  42126d:	xchg   esi,eax
  42126e:	sub    al,0x87
  421270:	jmp    0x109e:0x8ac76a35
  421277:	jbe    0x4212a5
  421279:	fld    TBYTE PTR [ebx+0xd1ae90d]
  42127f:	sub    dh,BYTE PTR [ebp+0x2b81af6d]
  421285:	mov    ebx,0x1633b020
  42128a:	add    eax,0x833f7331
  42128f:	bound  ebp,QWORD PTR [esi+ebp*2]
  421292:	push   es
  421293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421294:	adc    eax,0x256cf745
  421299:	inc    edx
  42129a:	rcr    BYTE PTR [eax+0x4],0xd1
  42129e:	mov    esp,0x109b29fc
  4212a3:	pop    ss
  4212a4:	lods   eax,DWORD PTR ds:[esi]
  4212a5:	jns    0x4212c5
  4212a7:	popf   
  4212a8:	ja     0x421312
  4212aa:	(bad)  
  4212ab:	jge    0x421239
  4212ad:	ds jp  0x421250
  4212b0:	leave  
  4212b1:	aam    0xa
  4212b3:	jb     0x42130f
  4212b5:	and    eax,0x4eca154e
  4212ba:	mov    bh,0x83
  4212bc:	pusha  
  4212bd:	inc    ecx
  4212be:	push   es
  4212bf:	jae    0x4212f1
  4212c1:	popf   
  4212c2:	fcomp  DWORD PTR [ebp+0x34bd868c]
  4212c8:	mov    BYTE PTR [edx-0x47],bh
  4212cb:	inc    esi
  4212cc:	les    ebp,FWORD PTR [eax+0x2c]
  4212cf:	push   eax
  4212d0:	add    DWORD PTR [eax+ebp*8+0x1c0c3f06],ebx
  4212d7:	cmp    eax,0x33caa6c7
  4212dc:	push   ebx
  4212dd:	(bad)  
  4212de:	inc    esp
  4212df:	mov    eax,DWORD PTR [edx]
  4212e1:	(bad)  
  4212e2:	pop    ebp
  4212e3:	test   eax,0xc70c4f1a
  4212e8:	pusha  
  4212e9:	mov    dl,BYTE PTR [esi]
  4212eb:	adc    al,0xa9
  4212ed:	mov    ebp,0x8fa30aa3
  4212f2:	arpl   WORD PTR [eax-0x76edc528],di
  4212f8:	xchg   edi,eax
  4212f9:	mov    ebx,0x7da4f540
  4212fe:	adc    esi,DWORD PTR [ecx+0x44]
  421301:	dec    esi
  421302:	push   esi
  421303:	lock adc dh,BYTE PTR [edx+0x61ad281c]
  42130a:	mov    cl,0xd1
  42130c:	cmp    BYTE PTR [edx-0x65],0xed
  421310:	cwde   
  421311:	clc    
  421312:	nop
  421313:	out    dx,eax
  421314:	mov    DWORD PTR ds:0x57e096bc,esi
  42131a:	pop    es
  42131b:	pop    esp
  42131c:	mov    ecx,0x6856602a
  421321:	adc    BYTE PTR [edi],0xc
  421324:	aaa    
  421325:	aad    0x22
  421327:	(bad)  
  421328:	aad    0x4
  42132a:	or     BYTE PTR [edx],0xca
  42132d:	ins    BYTE PTR es:[edi],dx
  42132e:	scas   al,BYTE PTR es:[edi]
  42132f:	xchg   ebx,eax
  421330:	pop    edx
  421331:	mov    dl,al
  421333:	xchg   ecx,eax
  421334:	sub    eax,0xe081a874
  421339:	test   BYTE PTR [ebp-0x23378c50],bl
  42133f:	push   edx
  421340:	dec    esi
  421341:	adc    ebx,DWORD PTR cs:[ebp+eiz*2-0x1d]
  421346:	clc    
  421347:	lds    ebx,FWORD PTR [ecx]
  421349:	cmp    eax,0x6070f138
  42134e:	outs   dx,DWORD PTR ds:[esi]
  42134f:	pop    es
  421350:	inc    ecx
  421351:	sub    bh,BYTE PTR [ebp-0x27]
  421354:	add    edi,edx
  421356:	mov    dh,0xba
  421358:	xchg   ebx,eax
  421359:	lahf   
  42135a:	dec    eax
  42135b:	mov    eax,0xf2b68f06
  421360:	ror    BYTE PTR [ebp-0x4fbd4e2a],1
  421366:	jmp    0x4213d3
  421368:	pop    edi
  421369:	inc    edi
  42136a:	das    
  42136b:	push   ss
  42136c:	lock aam 0x7
  42136f:	ror    DWORD PTR ss:[ebx],0x4
  421373:	div    BYTE PTR [edi]
  421375:	pop    esp
  421376:	and    cl,BYTE PTR [ecx-0x1ccd6a87]
  42137c:	xchg   edi,eax
  42137d:	pop    edx
  42137e:	jp     0x42138e
  421380:	pop    sp
  421382:	mov    DWORD PTR [edx+edi*8],esp
  421385:	xchg   edi,eax
  421386:	xor    esp,DWORD PTR [ecx-0x1b]
  421389:	or     eax,DWORD PTR [edi+0x53]
  42138c:	scas   eax,DWORD PTR es:[edi]
  42138d:	and    DWORD PTR [edx+0x74],esi
  421390:	jecxz  0x42134d
  421392:	loope  0x421396
  421394:	daa    
  421395:	repz jbe 0x4213b7
  421398:	cmp    bh,bl
  42139a:	jmp    0x42138a
  42139c:	and    DWORD PTR [ecx],0x6a
  42139f:	gs mov ch,0x2f
  4213a2:	add    al,0x61
  4213a4:	out    dx,eax
  4213a5:	stos   BYTE PTR es:[edi],al
  4213a6:	push   ebp
  4213a7:	aas    
  4213a8:	daa    
  4213a9:	and    DWORD PTR [edx-0x73f86701],0x5a
  4213b0:	sbb    BYTE PTR [edi+0x24],al
  4213b3:	mov    dh,0x77
  4213b5:	lahf   
  4213b6:	xor    DWORD PTR [edi],ebp
  4213b8:	sub    BYTE PTR [eax+0x62],bl
  4213bb:	dec    eax
  4213bc:	ret    
  4213bd:	dec    edx
  4213be:	mov    esi,DWORD PTR [esi]
  4213c0:	mov    bh,dh
  4213c2:	call   FWORD PTR [edi-0x4394a6f5]
  4213c8:	inc    edi
  4213c9:	test   al,dl
  4213cb:	outs   dx,BYTE PTR ds:[esi]
  4213cc:	add    DWORD PTR ds:0xfdfd9d03,ebp
  4213d2:	pushf  
  4213d3:	mov    eax,ds:0x6b6d4ac5
  4213d8:	int    0x23
  4213da:	mov    ah,0xb
  4213dc:	dec    ebx
  4213dd:	lock push ecx
  4213df:	pop    ebp
  4213e0:	mov    ecx,DWORD PTR [ebp-0xf]
  4213e3:	xor    bh,BYTE PTR [edx+ebp*4-0x5cc3f519]
  4213ea:	dec    BYTE PTR [esi+0x6b59604e]
  4213f0:	add    BYTE PTR [edx+0x4a47073],dl
  4213f6:	sbb    edx,ecx
  4213f8:	pop    ebp
  4213f9:	nop
  4213fa:	iret   
  4213fb:	ss aam 0x78
  4213fe:	mov    eax,0x881f2f5d
  421403:	lock jle 0x4213b5
  421406:	aam    0x3a
  421408:	mov    al,0xd7
  42140a:	imul   ecx,DWORD PTR [ebx-0x326b4b75],0xffffff96
  421411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421412:	adc    dl,dh
  421414:	rcr    DWORD PTR [eax+0x1af9795c],cl
  42141a:	int    0x41
  42141c:	push   0x8
  42141e:	push   edi
  42141f:	push   edx
  421420:	leave  
  421421:	xchg   esp,eax
  421422:	scas   eax,DWORD PTR es:[edi]
  421423:	lea    ecx,[edi-0x36]
  421426:	cmp    eax,DWORD PTR [eax+0x190efe85]
  42142c:	mov    eax,0x4e2c071d
  421431:	sbb    BYTE PTR [esi-0x5a],bh
  421434:	and    bl,0x5d
  421437:	or     al,0x16
  421439:	shr    BYTE PTR [ecx-0x7dc94b13],1
  42143f:	jl     0x421462
  421441:	push   esi
  421442:	gs ret 
  421444:	hlt    
  421445:	fcmovnu st,st(2)
  421447:	jbe    0x421472
  421449:	int    0x9c
  42144b:	rol    DWORD PTR [edi+eiz*8],cl
  42144e:	adc    DWORD PTR [edi],0xffffffd6
  421451:	leave  
  421452:	jns    0x42147b
  421454:	jl     0x4214a3
  421456:	in     al,dx
  421457:	bound  edx,QWORD PTR [ebx-0x28]
  42145a:	inc    esi
  42145b:	loop   0x4213e7
  42145d:	and    BYTE PTR [esi-0xa],0x29
  421461:	test   eax,0xb93011a8
  421466:	repz retf 0xea62
  42146a:	sahf   
  42146b:	sub    DWORD PTR [esi+0x5],0x5d44cbca
  421472:	das    
  421473:	jmp    0x7fd19b6a
  421478:	js     0x42142d
  42147a:	aad    0x82
  42147c:	ficom  WORD PTR [edx]
  42147e:	mov    ds:0x1188a0db,eax
  421483:	nop
  421484:	cmp    al,0x5
  421486:	sbb    DWORD PTR [edx],ebp
  421488:	ss loop 0x4214fb
  42148b:	ss inc ecx
  42148d:	mov    ebp,0x296210d6
  421492:	mov    eax,0x8600e57
  421497:	and    esp,DWORD PTR [eax-0x71342823]
  42149d:	rcr    BYTE PTR [ebx+0x31ea7ab2],cl
  4214a3:	xchg   edx,eax
  4214a4:	dec    edi
  4214a5:	pushf  
  4214a6:	jne    0x421452
  4214a8:	outs   dx,DWORD PTR ds:[esi]
  4214a9:	pop    ds
  4214aa:	xchg   ebx,eax
  4214ab:	and    eax,0x824a1b2
  4214b0:	cmc    
  4214b1:	mov    dh,BYTE PTR ds:0x517edc1d
  4214b7:	adc    bl,al
  4214b9:	fidiv  DWORD PTR [esi-0x3c059485]
  4214bf:	cwde   
  4214c0:	xor    ecx,ebp
  4214c2:	mov    ebp,0xb23fd0c2
  4214c7:	jbe    0x421541
  4214c9:	enter  0x3bda,0x66
  4214cd:	out    0x40,eax
  4214cf:	push   ss
  4214d0:	out    0xd0,eax
  4214d2:	pop    ds
  4214d3:	mov    esi,0x9f2e016
  4214d8:	ja     0x4214d7
  4214da:	iret   
  4214db:	popf   
  4214dc:	sar    ch,0x5a
  4214df:	dec    ebp
  4214e0:	cmp    ebx,DWORD PTR [edi+0x5928ab85]
  4214e6:	retf   
  4214e7:	rcr    DWORD PTR ds:0xfb4e9b50,1
  4214ed:	pop    edi
  4214ee:	mov    bh,0x84
  4214f0:	sbb    DWORD PTR [eax-0x54],esi
  4214f3:	in     eax,0xed
  4214f5:	rcl    DWORD PTR [edx+0x1488d2a1],1
  4214fb:	ins    BYTE PTR es:[edi],dx
  4214fc:	lea    eax,[ecx-0x7d]
  4214ff:	cwde   
  421500:	iret   
  421501:	aas    
  421502:	cli    
  421503:	les    edx,FWORD PTR [esi+0x3b]
  421506:	(bad)  
  421507:	cmp    cl,dl
  421509:	jge    0x421554
  42150b:	adc    eax,0x210775ce
  421510:	pop    es
  421511:	les    ebx,FWORD PTR [eax+0x4ad29ba0]
  421517:	mov    ebp,0x4e8940b4
  42151c:	retf   
  42151d:	adc    al,0x8e
  42151f:	lods   al,BYTE PTR ds:[esi]
  421520:	ja     0x4214d4
  421522:	retf   0xa544
  421525:	inc    esp
  421526:	cmp    ebx,ecx
  421528:	cmp    dl,bl
  42152a:	test   eax,0x8d70c902
  42152f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421530:	(bad)  
  421531:	repz rol esp,cl
  421534:	jo     0x4214b8
  421536:	inc    edi
  421537:	pusha  
  421538:	int3   
  421539:	test   DWORD PTR [ecx],ecx
  42153b:	test   al,0x26
  42153d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42153e:	aad    0xe9
  421540:	mov    edx,eax
  421542:	push   cs
  421543:	inc    ebx
  421544:	outs   dx,BYTE PTR ds:[esi]
  421545:	pop    esp
  421546:	sbb    ch,dl
  421548:	test   DWORD PTR [edx-0x5f015da],esi
  42154e:	or     ebx,edi
  421550:	or     edx,eax
  421552:	xor    dl,BYTE PTR [ebx+0x4ffe9a0b]
  421558:	jno    0x4215b6
  42155a:	sbb    al,0xd3
  42155c:	xchg   BYTE PTR [edi],ah
  42155e:	data16 jbe 0x421532
  421561:	pop    ecx
  421562:	dec    edx
  421563:	popa   
  421564:	xchg   ebx,eax
  421565:	mov    ch,0x33
  421567:	out    0xfe,eax
  421569:	mov    ds,WORD PTR [eax+0x42]
  42156c:	add    edx,esi
  42156e:	ins    DWORD PTR es:[edi],dx
  42156f:	add    dh,0xcc
  421572:	xchg   esp,eax
  421573:	mov    bl,0x35
  421575:	sub    eax,0xada85aef
  42157a:	adc    ah,ch
  42157c:	pop    edi
  42157d:	mov    ah,0xc0
  42157f:	cmp    bl,BYTE PTR [esi]
  421581:	or     ah,BYTE PTR [ebx+ebp*4+0x6d]
  421585:	and    al,0xbd
  421587:	and    al,0xb2
  421589:	popa   
  42158a:	stc    
  42158b:	xchg   esi,eax
  42158c:	pushf  
  42158d:	stc    
  42158e:	or     edi,esi
  421590:	adc    DWORD PTR [ebp+0x18],edx
  421593:	fwait
  421594:	cmp    ebp,DWORD PTR [edx]
  421596:	call   0x438e46ea
  42159b:	aad    0x4f
  42159d:	push   esp
  42159e:	test   eax,0x3d8e13b9
  4215a3:	ins    DWORD PTR es:[edi],dx
  4215a4:	mov    ds:0x8ffa1aa8,eax
  4215a9:	cmc    
  4215aa:	mov    esi,DWORD PTR [edx]
  4215ac:	push   esp
  4215ad:	mov    dh,0xd5
  4215af:	xchg   ecx,eax
  4215b0:	es popa 
  4215b2:	pop    es
  4215b3:	mov    al,ds:0xdd4ff85a
  4215b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215b9:	retf   
  4215ba:	xchg   BYTE PTR [ebx-0x305d4578],ah
  4215c0:	inc    DWORD PTR [edx-0x68]
  4215c3:	xor    cl,BYTE PTR [eax]
  4215c5:	call   0xd7db:0x46e4290
  4215cc:	pop    ecx
  4215cd:	mov    ecx,0x8079ad5c
  4215d2:	ret    
  4215d3:	inc    eax
  4215d4:	(bad)  
  4215d5:	fmul   DWORD PTR [esi-0x3a]
  4215d8:	cmc    
  4215d9:	jle    0x421639
  4215db:	and    al,0x6d
  4215dd:	ins    DWORD PTR es:[edi],dx
  4215de:	mov    ch,0x42
  4215e0:	enter  0x925c,0x65
  4215e4:	fbstp  TBYTE PTR [ebx]
  4215e6:	sbb    BYTE PTR [ebx+edi*4+0x7d],dh
  4215ea:	push   0x37
  4215ec:	addr16 sub dl,0x69
  4215f0:	bound  ebp,QWORD PTR [eax]
  4215f2:	push   ebx
  4215f3:	inc    eax
  4215f4:	sbb    al,0x3
  4215f6:	imul   ecx,DWORD PTR [eax-0x4549077c],0x4b414cff
  421600:	mov    ecx,ebx
  421602:	sar    BYTE PTR [edi+0x2e540a76],0x7f
  421609:	adc    dh,al
  42160b:	push   dx
  42160d:	stos   DWORD PTR es:[edi],eax
  42160e:	mov    ecx,0x121716ee
  421613:	popa   
  421614:	inc    esp
  421615:	js     0x4215b8
  421617:	aaa    
  421618:	test   al,0x33
  42161a:	cmp    eax,0xa3abadd4
  42161f:	in     al,dx
  421620:	in     eax,0x52
  421622:	ss idiv esp
  421625:	jl     0x4215f1
  421627:	push   esi
  421628:	and    dl,BYTE PTR [ebp+0x7d03e65a]
  42162e:	push   ebx
  42162f:	sbb    dh,BYTE PTR gs:[esi+0xcf4fde2]
  421636:	mov    eax,ds:0xdf268960
  42163b:	fisttp WORD PTR [esi+0x1ab92abb]
  421641:	jae    0x4216b9
  421643:	and    BYTE PTR [edx+0x796d292e],ch
  421649:	and    eax,0xd73ed322
  42164e:	dec    edi
  42164f:	dec    ebx
  421650:	xchg   edx,eax
  421651:	dec    edi
  421652:	mov    esi,gs
  421654:	xchg   ebp,eax
  421655:	and    eax,0x3d747e38
  42165a:	and    edi,DWORD PTR ds:0xb8d27a6b
  421660:	outs   dx,DWORD PTR ds:[esi]
  421661:	jno    0x42165f
  421663:	in     al,0x82
  421665:	jns    0x4215e9
  421667:	loopne 0x42169c
  421669:	jno    0x4215f2
  42166b:	popa   
  42166c:	jecxz  0x4216e2
  42166e:	or     BYTE PTR [edx-0x2152aaf7],0x8a
  421675:	sbb    edx,DWORD PTR [ecx-0x1dec3df7]
  42167b:	out    dx,eax
  42167c:	cmp    dh,ah
  42167e:	clc    
  42167f:	retf   
  421680:	loopne 0x4216b0
  421682:	adc    ah,bl
  421684:	mov    ds,WORD PTR [ebp-0x78]
  421687:	imul   ebp,DWORD PTR [edx+0x70],0xf25a5320
  42168e:	xchg   ebx,eax
  42168f:	mov    dl,ch
  421691:	cmp    al,0x23
  421693:	call   0x31b420c6
  421698:	adc    DWORD PTR [ecx],esp
  42169a:	pop    ebp
  42169b:	pop    DWORD PTR [eax-0x64]
  42169e:	inc    ebp
  42169f:	mov    ah,0x90
  4216a1:	add    dh,al
  4216a3:	jmp    0x9aa4:0xcc4927d6
  4216aa:	sub    edx,DWORD PTR fs:[ecx+0x7ed3d0ab]
  4216b1:	push   ds
  4216b2:	and    BYTE PTR [ecx-0x340c093c],ah
  4216b8:	adc    ch,BYTE PTR [ebp+ecx*1+0x6f258a23]
  4216bf:	cmp    BYTE PTR [edi],bl
  4216c1:	dec    esp
  4216c2:	popf   
  4216c3:	data16 sub ah,dh
  4216c6:	leave  
  4216c7:	clc    
  4216c8:	call   0xe28f:0xd3e9fd07
  4216cf:	arpl   WORD PTR [ecx-0x7323b8dd],dx
  4216d5:	gs retf 
  4216d7:	fcmovne st,st(3)
  4216d9:	inc    edx
  4216da:	loopne 0x421700
  4216dc:	adc    BYTE PTR [ecx+0x46],dl
  4216df:	mov    DWORD PTR [edi+0x3e1a3868],edx
  4216e5:	sub    eax,0xd2720162
  4216ea:	leave  
  4216eb:	lds    edi,FWORD PTR [ebp+ebx*8-0x421a4e3b]
  4216f2:	pop    eax
  4216f3:	mov    ds:0x50178c68,al
  4216f8:	mov    es,WORD PTR [ecx]
  4216fa:	mov    ds:0xb1b37b51,eax
  4216ff:	sbb    ebp,eax
  421701:	push   esp
  421702:	push   ebx
  421703:	pop    eax
  421704:	pop    esp
  421705:	test   eax,0x26115d7e
  42170a:	pop    ebx
  42170b:	push   cs
  42170c:	fldz   
  42170e:	out    dx,eax
  42170f:	jo     0x42170e
  421711:	fwait
  421712:	and    esp,edx
  421714:	inc    ebp
  421715:	or     ecx,DWORD PTR [esi]
  421717:	jo     0x4216fa
  421719:	scas   al,BYTE PTR es:[edi]
  42171a:	xor    ebx,DWORD PTR es:[edi+0x3b]
  42171e:	mov    DWORD PTR [eax-0x2],ecx
  421721:	mov    cs,WORD PTR [esp+eiz*8+0x408659a6]
  421728:	imul   ebx,esi,0x78
  42172b:	mov    al,0xe
  42172d:	fisttp QWORD PTR [esi-0x4cf49aa7]
  421733:	test   eax,0x58cb19cd
  421738:	cmp    DWORD PTR [ebp-0x6a],ecx
  42173b:	xor    BYTE PTR [edi+eiz*8-0x7d344ea8],0x9a
  421743:	sahf   
  421744:	cmp    BYTE PTR [ebp+0x7d6bacd7],0xd5
  42174b:	mov    WORD PTR [ecx],fs
  42174d:	out    dx,al
  42174e:	sbb    ebp,ecx
  421750:	inc    ecx
  421751:	out    dx,al
  421752:	adc    al,0xcc
  421754:	test   BYTE PTR [esi-0x4ace2f63],al
  42175a:	add    eax,0xe778690f
  42175f:	sbb    cl,BYTE PTR [ebx-0xbad75b4]
  421765:	lods   eax,DWORD PTR ds:[esi]
  421766:	sub    eax,edi
  421768:	adc    edi,DWORD PTR [esi]
  42176a:	mov    ds:0x6668975f,al
  42176f:	adc    cl,ah
  421771:	pusha  
  421772:	jp     0x42172d
  421774:	sbb    DWORD PTR ds:0xa2d51412,ecx
  42177a:	push   ss
  42177b:	push   cs
  42177c:	jne    0x4217b3
  42177e:	xchg   ebx,eax
  42177f:	test   DWORD PTR [ebx+0x3078afa7],edx
  421785:	fist   DWORD PTR [ebp-0x54]
  421788:	jno    0x42177d
  42178a:	and    eax,0x330d1ff9
  42178f:	not    ecx
  421791:	mov    WORD PTR [edi+edi*1],gs
  421794:	push   ebp
  421795:	sub    eax,0x556aeb5a
  42179a:	(bad)  
  42179b:	es push edi
  42179d:	or     dl,BYTE PTR [ebx+0x71ddcf38]
  4217a3:	and    al,0x24
  4217a5:	xchg   esi,eax
  4217a6:	adc    DWORD PTR [esp+edx*1],0xffffffbe
  4217aa:	mov    al,ds:0x11b95c3b
  4217af:	daa    
  4217b0:	add    DWORD PTR [edx-0x693362fa],esi
  4217b6:	sbb    edi,DWORD PTR [esp+esi*8-0x7dd60184]
  4217bd:	ret    
  4217be:	(bad)  
  4217bf:	mov    ds:0xab9650ec,eax
  4217c4:	repnz ss inc ebp
  4217c7:	jp     0x4217fb
  4217c9:	popa   
  4217ca:	dec    edx
  4217cb:	popa   
  4217cc:	(bad)  
  4217cd:	mov    ah,BYTE PTR [edx]
  4217cf:	mov    bl,0x6f
  4217d1:	jg     0x421821
  4217d3:	sbb    eax,0xbbf400f2
  4217d8:	es call 0xd1f6:0xd19ce7f9
  4217e0:	clc    
  4217e1:	jmp    0x2c4b:0x7e81277d
  4217e8:	pop    esi
  4217e9:	push   cs
  4217ea:	xchg   edi,ebp
  4217ec:	mov    ch,dh
  4217ee:	adc    eax,ebp
  4217f0:	addr16 pop es
  4217f2:	(bad)  
  4217f3:	std    
  4217f4:	push   ds
  4217f5:	sbb    BYTE PTR [ebp-0x4a5a2fbd],0xe6
  4217fc:	push   cs
  4217fd:	push   es
  4217fe:	mov    BYTE PTR [eax-0x4de8761e],0x84
  421805:	mov    DWORD PTR [ecx],ecx
  421807:	cmp    BYTE PTR [ebx],dh
  421809:	jmp    0x1c7f:0x1898137c
  421810:	(bad)  
  421811:	fist   WORD PTR [edi+ebp*4+0x23]
  421815:	nop
  421816:	in     eax,dx
  421817:	or     al,bh
  421819:	xchg   esi,eax
  42181a:	cmp    ebp,ecx
  42181c:	add    eax,0x300ed2b5
  421821:	rcl    DWORD PTR [ecx+0x67],cl
  421824:	dec    edx
  421825:	sar    WORD PTR [edi+edi*2+0x1ec254],cl
  42182d:	xor    al,0xdf
  42182f:	addr16 xor ebp,esp
  421832:	mov    bl,0x79
  421834:	or     esi,DWORD PTR [edx-0xf]
  421837:	div    BYTE PTR [ebp+0x6f]
  42183a:	or     esi,DWORD PTR [ecx-0x69]
  42183d:	xchg   esi,eax
  42183e:	dec    ebp
  42183f:	test   eax,0x7838350c
  421844:	std    
  421845:	pusha  
  421846:	test   al,0xa5
  421848:	add    ebx,DWORD PTR [ebx-0x7bf06eb2]
  42184e:	js     0x421885
  421850:	mov    WORD PTR ds:0x54c27702,cs
  421856:	lods   al,BYTE PTR ds:[esi]
  421857:	push   ebx
  421858:	dec    ecx
  421859:	rcl    DWORD PTR [ebx+ebp*2],0xa7
  42185d:	mov    al,0x38
  42185f:	push   ebx
  421860:	or     eax,esp
  421862:	push   ebx
  421863:	pop    ds
  421864:	imul   esi
  421866:	jle    0x4218e7
  421868:	sub    ecx,DWORD PTR ds:0x626959fa
  42186e:	rcl    DWORD PTR [esi-0x3d],cl
  421871:	shl    BYTE PTR [esi-0xdf48648],1
  421877:	pop    ebx
  421878:	ins    BYTE PTR es:[edi],dx
  421879:	(bad)  
  42187a:	and    cl,BYTE PTR [eax-0x61]
  42187d:	inc    ebx
  42187e:	xchg   DWORD PTR [eax+0x2a],esp
  421881:	mov    esp,0xbfbf93e8
  421886:	inc    esp
  421887:	mov    WORD PTR [ecx+edi*1-0x42],gs
  42188b:	pop    ecx
  42188c:	and    dh,0xd7
  42188f:	stc    
  421890:	mov    ebx,esp
  421892:	mov    BYTE PTR [ecx],bl
  421894:	xchg   esp,eax
  421895:	sbb    al,0x43
  421897:	shl    BYTE PTR [esi-0x7c],0x82
  42189b:	cdq    
  42189c:	je     0x4218ac
  42189e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42189f:	(bad)  
  4218a0:	mov    esp,0x88ed4ed7
  4218a5:	mov    esp,0x7c941cc6
  4218aa:	mov    bl,ah
  4218ac:	push   ecx
  4218ad:	ins    BYTE PTR es:[edi],dx
  4218ae:	jbe    0x4218b7
  4218b0:	test   eax,0x6a606cf7
  4218b5:	icebp  
  4218b6:	xor    BYTE PTR gs:[edi],0xe2
  4218ba:	pop    ecx
  4218bb:	dec    ecx
  4218bc:	rcr    DWORD PTR [esi+0x14],cl
  4218bf:	sti    
  4218c0:	jb     0x4218b6
  4218c2:	jb     0x421933
  4218c4:	adc    al,0x26
  4218c6:	ror    BYTE PTR ds:0xf1f643a6,1
  4218cc:	mov    BYTE PTR [edi-0x59678f89],cl
  4218d2:	sub    ch,bl
  4218d4:	out    dx,eax
  4218d5:	add    eax,0xb70c09df
  4218da:	dec    esi
  4218db:	bound  ebp,QWORD PTR [edi]
  4218dd:	mov    ecx,0x9183cbbe
  4218e2:	lods   al,BYTE PTR ds:[esi]
  4218e3:	jbe    0x4218be
  4218e5:	mov    eax,ds:0x4a4a4072
  4218ea:	stc    
  4218eb:	mov    eax,0xfb894a5d
  4218f0:	sub    ebp,esp
  4218f2:	add    DWORD PTR [esi+0x58],eax
  4218f5:	fwait
  4218f6:	cmp    al,0xc0
  4218f8:	xchg   DWORD PTR [ecx+ecx*4-0x29],ecx
  4218fc:	add    BYTE PTR [ecx-0xcba8cb8],al
  421902:	sbb    al,0x9b
  421904:	ficom  WORD PTR [edi+0x2c]
  421907:	shr    DWORD PTR [edi+0x39],cl
  42190a:	lods   al,BYTE PTR ds:[esi]
  42190b:	stos   DWORD PTR es:[edi],eax
  42190c:	mov    DWORD PTR [esi+0x787253a1],ecx
  421912:	xor    edi,DWORD PTR [eax-0x7d163ed6]
  421918:	cdq    
  421919:	xor    BYTE PTR [ebp+0x54],dl
  42191c:	enter  0xae28,0xed
  421920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421921:	loop   0x421919
  421923:	sub    eax,ebp
  421925:	add    ebx,esi
  421927:	pop    esp
  421928:	outs   dx,BYTE PTR ds:[esi]
  421929:	rol    esp,cl
  42192b:	xchg   edx,eax
  42192c:	out    0xc2,al
  42192e:	call   0xf112:0x7d8eb082
  421935:	xor    DWORD PTR [ecx],ecx
  421937:	mov    edi,0x39b6258a
  42193c:	push   ecx
  42193d:	jne    0x4218ec
  42193f:	xchg   esi,eax
  421940:	sbb    bl,cl
  421942:	paddusb mm4,mm5
  421945:	sub    al,0x85
  421947:	mov    al,ds:0xf18b446f
  42194c:	sub    dl,0xc2
  42194f:	xor    al,0x9c
  421951:	test   al,0x7
  421953:	rcl    bh,0x9b
  421956:	inc    ecx
  421957:	jle    0x4218e2
  421959:	repz inc ecx
  42195b:	fimul  DWORD PTR [esi]
  42195d:	mov    cl,0xf7
  42195f:	cwde   
  421960:	push   ecx
  421962:	dec    ebx
  421963:	or     DWORD PTR [ebp+0x51],esp
  421966:	ret    
  421967:	dec    edi
  421968:	ds pop esp
  42196a:	jno    0x4219e2
  42196c:	sbb    dl,BYTE PTR [esp+edx*4]
  42196f:	bound  edi,QWORD PTR [esp+edi*2+0x57d15803]
  421976:	int    0x2a
  421978:	fisttp DWORD PTR [eax+esi*2]
  42197b:	sbb    DWORD PTR [edx],eax
  42197d:	lods   al,BYTE PTR ds:[esi]
  42197e:	adc    cl,BYTE PTR [ebp+esi*4-0x1d]
  421982:	dec    esi
  421983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421984:	fucomip st,st(6)
  421986:	dec    ebx
  421987:	jno    0x421940
  421989:	out    dx,al
  42198a:	int    0x85
  42198c:	sahf   
  42198d:	in     eax,0x4a
  42198f:	cdq    
  421990:	jecxz  0x421920
  421992:	push   ss
  421993:	inc    ebx
  421994:	sbb    ch,BYTE PTR [esi+0x2cff92ec]
  42199a:	jne    0x42191d
  42199c:	fsub   DWORD PTR [edx-0x10]
  42199f:	ss jb  0x4219e9
  4219a2:	fistp  QWORD PTR [ebx]
  4219a4:	std    
  4219a5:	test   al,0x7
  4219a7:	retf   0x984e
  4219aa:	sbb    eax,DWORD PTR [ebp-0x72051f09]
  4219b0:	ja     0x421a26
  4219b2:	icebp  
  4219b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219b4:	neg    BYTE PTR [eax+0x7]
  4219b7:	pop    esi
  4219b8:	xchg   ebx,eax
  4219b9:	(bad)  
  4219ba:	outs   dx,DWORD PTR ds:[esi]
  4219bb:	pop    edx
  4219bc:	sbb    eax,0x2ca5e912
  4219c1:	or     bh,BYTE PTR [eax]
  4219c3:	mov    edi,0x6a379ae7
  4219c8:	jnp    0x4219a3
  4219ca:	sbb    ah,BYTE PTR [ecx]
  4219cc:	adc    al,0xbe
  4219ce:	leave  
  4219cf:	fidivr WORD PTR [eax-0x61]
  4219d2:	pusha  
  4219d3:	pop    ebx
  4219d4:	add    ecx,DWORD PTR [ecx-0x354b0ea2]
  4219da:	rol    eax,1
  4219dc:	mov    esp,0xb5db4261
  4219e1:	je     0x4219af
  4219e3:	sub    al,0xb2
  4219e5:	mov    dl,0x4a
  4219e7:	call   edi
  4219e9:	popf   
  4219ea:	es out dx,eax
  4219ec:	test   cl,dh
  4219ee:	out    dx,al
  4219ef:	and    DWORD PTR [eax+edx*8-0x28],eax
  4219f3:	push   0x16
  4219f5:	adc    eax,DWORD PTR [esi-0xe]
  4219f8:	inc    ebp
  4219f9:	inc    edi
  4219fa:	dec    ebx
  4219fb:	inc    ecx
  4219fc:	js     0x4219b6
  4219fe:	int    0xf8
  421a00:	pop    es
  421a01:	inc    edi
  421a02:	call   DWORD PTR ds:0x197d7cc7
  421a08:	idiv   DWORD PTR [esp+esi*4]
  421a0b:	add    bl,al
  421a0d:	mov    DWORD PTR [edi*8-0x4ff5d237],edi
  421a14:	xchg   ebp,eax
  421a15:	push   ds
  421a16:	push   ds
  421a17:	sbb    al,0x1b
  421a19:	jmp    0x4219a5
  421a1b:	xor    BYTE PTR [eax],cl
  421a1d:	repz popf 
  421a1f:	xchg   BYTE PTR [ebp-0x6e],bl
  421a22:	add    al,0x24
  421a24:	and    DWORD PTR [edx+0x23],esp
  421a27:	inc    ecx
  421a28:	shl    BYTE PTR [ecx],1
  421a2a:	int    0x9d
  421a2c:	mov    ebx,0xedf3be16
  421a31:	sar    BYTE PTR [esi],cl
  421a33:	mov    esp,0x3c67e593
  421a38:	test   eax,esi
  421a3a:	jno    0x4219eb
  421a3c:	call   0xf32c:0x7119f549
  421a43:	pop    es
  421a44:	imul   edx,DWORD PTR [esi],0x5afe8237
  421a4a:	jle    0x421a7b
  421a4c:	test   eax,0x3b6bda9c
  421a51:	stos   DWORD PTR es:[edi],eax
  421a52:	dec    esp
  421a53:	lods   al,BYTE PTR ds:[esi]
  421a54:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421a56:	out    0x73,al
  421a58:	ret    
  421a59:	add    DWORD PTR [edi-0x4e],ebp
  421a5c:	and    al,0x17
  421a5e:	je     0x421a41
  421a60:	jo     0x421ad3
  421a62:	mov    DWORD PTR [ecx-0x22],edi
  421a65:	add    DWORD PTR [eax+0x7a29c494],edx
  421a6b:	test   eax,0xef92df
  421a70:	push   ss
  421a71:	cmp    cl,bh
  421a73:	xchg   edx,eax
  421a74:	pop    ebp
  421a75:	sbb    DWORD PTR [ebp-0x5c7c6bfa],eax
  421a7b:	dec    esp
  421a7c:	js     0x912ed87
  421a82:	mov    ah,0x73
  421a84:	arpl   bp,ax
  421a86:	or     bh,BYTE PTR [esi-0x27]
  421a89:	fwait
  421a8a:	retf   0xec0c
  421a8d:	popa   
  421a8e:	jmp    0xda00774f
  421a93:	in     eax,0xa9
  421a95:	mov    bl,0xa0
  421a97:	fxch   st(1)
  421a99:	xor    al,0x41
  421a9b:	mov    eax,ds:0x9da75a8e
  421aa0:	ficomp DWORD PTR [ebx-0x4d]
  421aa3:	pop    esp
  421aa4:	test   al,0xfd
  421aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa7:	fstp   QWORD PTR [edi+0x3df066d8]
  421aad:	inc    ebp
  421aae:	lahf   
  421aaf:	in     eax,0x3a
  421ab1:	adc    esp,edx
  421ab3:	mov    esi,DWORD PTR [bp-0x33]
  421ab7:	dec    edx
  421ab8:	jmp    0x421a52
  421aba:	out    0x8b,al
  421abc:	lahf   
  421abd:	xchg   esi,eax
  421abe:	fmul   QWORD PTR [eax-0x37]
  421ac1:	aad    0x1c
  421ac3:	cdq    
  421ac4:	and    BYTE PTR [ecx+edi*1+0x78bf194e],bl
  421acb:	(bad)  
  421acc:	jo     0x421a70
  421ace:	je     0x421b40
  421ad0:	nop
  421ad1:	out    0x32,al
  421ad3:	cmc    
  421ad4:	int    0xd4
  421ad6:	inc    edi
  421ad7:	std    
  421ad8:	aad    0x2a
  421ada:	mov    cl,0x65
  421adc:	pop    esi
  421add:	or     al,al
  421adf:	or     BYTE PTR [eax+0x5b],cl
  421ae2:	adc    BYTE PTR [ecx+0x9],bh
  421ae5:	adc    al,0x69
  421ae7:	in     eax,0x39
  421ae9:	add    BYTE PTR [eax],0x7e
  421aec:	fwait
  421aed:	call   0x673:0xa24cc3ac
  421af4:	sahf   
  421af5:	xchg   ebp,edi
  421af7:	jbe    0x421b57
  421af9:	adc    al,0x47
  421afb:	xor    al,BYTE PTR [ecx+0x3044d71c]
  421b01:	in     al,dx
  421b02:	iret   
  421b03:	push   ds
  421b04:	mov    eax,ds:0x8e9e737b
  421b09:	push   eax
  421b0a:	adc    al,BYTE PTR [esi]
  421b0c:	scas   eax,DWORD PTR es:[edi]
  421b0d:	jno    0x421ad5
  421b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b10:	lahf   
  421b11:	iret   
  421b12:	repnz inc ebx
  421b14:	sbb    eax,ebp
  421b16:	mov    dh,0x48
  421b18:	inc    ebp
  421b19:	jae    0x421b8c
  421b1b:	jmp    0x421ab8
  421b1d:	jmp    0x421b8e
  421b1f:	jmp    0x46e4:0x4ce14d7c
  421b26:	xor    cl,ah
  421b28:	adc    eax,0xa5e216d9
  421b2d:	sub    al,0xda
  421b2f:	jmp    0x73df0fe3
  421b34:	cld    
  421b35:	loopne 0x421b7e
  421b37:	push   edi
  421b38:	and    al,0x34
  421b3a:	xchg   esp,eax
  421b3b:	fsubr  st,st(2)
  421b3d:	ret    0x8c88
  421b40:	lods   al,BYTE PTR ds:[esi]
  421b41:	xchg   edi,eax
  421b42:	jmp    0x421adf
  421b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b45:	xchg   ebx,eax
  421b46:	cmp    eax,0x2ee0aec2
  421b4b:	cld    
  421b4c:	out    dx,eax
  421b4d:	in     eax,dx
  421b4e:	sbb    eax,DWORD PTR [eax+0x24]
  421b51:	leave  
  421b52:	fimul  DWORD PTR [edx+0x65]
  421b55:	lods   al,BYTE PTR ds:[esi]
  421b56:	add    DWORD PTR [esi+0x1bb01515],edi
  421b5c:	cmp    esi,DWORD PTR [eax-0x330af242]
  421b62:	repz push ss
  421b64:	mov    esp,0x67d7399
  421b69:	test   al,0x92
  421b6b:	mov    ebx,0x573ad49e
  421b70:	mov    edi,0xcfa95d54
  421b75:	stos   BYTE PTR es:[edi],al
  421b76:	pop    ebx
  421b77:	sub    ebp,esi
  421b79:	loop   0x421b88
  421b7b:	mov    ebx,ebx
  421b7d:	js     0x421b46
  421b7f:	in     al,dx
  421b80:	mov    edx,0x6cf3512a
  421b85:	scas   al,BYTE PTR es:[edi]
  421b86:	xchg   esp,eax
  421b87:	shl    BYTE PTR [ebx+ecx*4+0x36],1
  421b8b:	or     DWORD PTR [eax+0x3f],eax
  421b8e:	mov    ah,0xea
  421b90:	(bad)  
  421b91:	push   ds
  421b92:	mov    eax,0x2509bf6a
  421b97:	add    bh,BYTE PTR [esi+0x39]
  421b9a:	inc    edx
  421b9b:	lods   eax,DWORD PTR ds:[esi]
  421b9c:	dec    edi
  421b9d:	jmp    0x421c03
  421b9f:	out    0x22,al
  421ba1:	lods   al,BYTE PTR ds:[esi]
  421ba2:	add    BYTE PTR [ecx+eiz*4-0x6b1d99cb],ch
  421ba9:	and    cl,0x16
  421bac:	je     0x421c05
  421bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421baf:	push   ecx
  421bb0:	cmp    al,0x28
  421bb2:	sbb    bh,BYTE PTR [ebp+0x2d533bad]
  421bb8:	sti    
  421bb9:	push   esi
  421bba:	and    al,BYTE PTR [edi-0x13bfa2e7]
  421bc0:	mov    BYTE PTR [ecx-0x73],cl
  421bc3:	mov    BYTE PTR [eax+0x76388816],ah
  421bc9:	pop    eax
  421bca:	fcom   DWORD PTR [esi-0x551bbc34]
  421bd0:	cmp    bl,BYTE PTR [esi]
  421bd2:	xor    DWORD PTR [edx+0x3d],edx
  421bd5:	cmp    eax,0x51e34586
  421bda:	sbb    esp,DWORD PTR [eax]
  421bdc:	sti    
  421bdd:	shr    DWORD PTR [ebp+0x7c],cl
  421be0:	add    ch,bh
  421be2:	mov    eax,ds:0xde3b53df
  421be7:	loopne 0x421c2e
  421be9:	(bad)  
  421beb:	sbb    BYTE PTR [ebx-0x2d],dh
  421bee:	xlat   BYTE PTR ds:[ebx]
  421bef:	adc    al,0xc5
  421bf1:	cmc    
  421bf2:	cmc    
  421bf3:	into   
  421bf4:	rol    esi,cl
  421bf6:	imul   ebx,DWORD PTR [ebx-0x29],0xa54d73ae
  421bfd:	mov    bh,0xdd
  421bff:	and    DWORD PTR [edi-0x54],esp
  421c02:	call   0xe519:0x6a72e20f
  421c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c0a:	stos   DWORD PTR es:[edi],eax
  421c0b:	imul   esi,DWORD PTR gs:[ebx+0xa103703],0xffffff83
  421c13:	mov    ds:0x405de03b,eax
  421c18:	call   DWORD PTR [edi]
  421c1a:	adc    BYTE PTR [esi],dl
  421c1c:	dec    ebx
  421c1d:	ja     0x421c6a
  421c1f:	mov    DWORD PTR [edx],ecx
  421c21:	xor    BYTE PTR [ebx-0x25],dl
  421c24:	mov    ecx,0x324a05c9
  421c29:	shl    BYTE PTR [ecx+0x21a22fbd],cl
  421c2f:	pop    ss
  421c30:	enter  0x7e7c,0x5b
  421c34:	mov    ah,bl
  421c36:	loope  0x421c7c
  421c38:	push   ebx
  421c39:	sub    DWORD PTR [edx-0x29],esi
  421c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c3d:	xor    DWORD PTR [edi+0x570abf1e],edi
  421c43:	pop    edx
  421c44:	xchg   edx,eax
  421c45:	jae    0x421c9a
  421c47:	cwde   
  421c48:	dec    ebp
  421c49:	shl    DWORD PTR [edx],cl
  421c4b:	push   ds
  421c4c:	gs icebp 
  421c4e:	mov    DWORD PTR [esi-0x6e],edx
  421c51:	hlt    
  421c52:	repz xchg edx,eax
  421c54:	enter  0xc7e4,0xdd
  421c58:	and    al,0x98
  421c5a:	fdiv   QWORD PTR [edx-0x10]
  421c5d:	inc    ebp
  421c5e:	pop    ecx
  421c5f:	fadd   DWORD PTR [edx]
  421c61:	mov    eax,ds:0xaf419200
  421c66:	mov    ecx,0x662dd2af
  421c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6c:	push   edx
  421c6d:	mov    ds:0x48b90dd0,eax
  421c72:	neg    BYTE PTR [edi-0x6506d48]
  421c78:	cmp    eax,0x89d4d8a6
  421c7d:	xchg   esi,eax
  421c7e:	in     eax,0x90
  421c80:	enter  0xadd3,0xee
  421c84:	jp     0x421cf5
  421c86:	xchg   ecx,eax
  421c87:	rol    BYTE PTR [edi],1
  421c89:	push   edx
  421c8a:	cmp    ebp,DWORD PTR [edx+0x4d61c4fb]
  421c90:	dec    ecx
  421c91:	or     dh,BYTE PTR [edi-0x40]
  421c94:	push   ecx
  421c95:	inc    edi
  421c96:	pop    ds
  421c97:	mov    al,ds:0xb81dd207
  421c9c:	dec    ecx
  421c9d:	sahf   
  421c9e:	iret   
  421c9f:	mov    al,ds:0xd2fd9381
  421ca4:	js     0x421d1e
  421ca6:	retf   0x6a98
  421ca9:	or     edi,DWORD PTR [ebx+edi*2-0x54]
  421cad:	xor    al,0xbb
  421caf:	push   esp
  421cb0:	jge    0x421c3f
  421cb2:	push   0x21
  421cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb5:	stos   BYTE PTR es:[edi],al
  421cb6:	mov    al,ds:0x92bbd786
  421cbb:	mov    al,0x49
  421cbd:	int    0x51
  421cbf:	les    edx,FWORD PTR [edi+0xd]
  421cc2:	leave  
  421cc3:	and    al,0x98
  421cc5:	mov    eax,eax
  421cc7:	mov    bl,BYTE PTR [eax]
  421cc9:	fmul   st,st(2)
  421ccb:	or     al,0xea
  421ccd:	or     bl,0xf5
  421cd0:	stc    
  421cd1:	fimul  DWORD PTR [edx]
  421cd3:	jl     0x421c85
  421cd5:	shl    bh,cl
  421cd7:	neg    cl
  421cd9:	ficomp WORD PTR [esi-0x31eef721]
  421cdf:	dec    ebx
  421ce0:	fidiv  WORD PTR [eax-0x73]
  421ce3:	xchg   esi,eax
  421ce4:	jns    0x421c73
  421ce6:	pop    esp
  421ce7:	lahf   
  421ce8:	mov    WORD PTR [ecx],fs
  421cea:	pop    ds
  421ceb:	xchg   ecx,eax
  421cec:	jne    0x421c8c
  421cee:	fadd   st,st(3)
  421cf0:	mov    BYTE PTR [eax],bh
  421cf2:	popa   
  421cf3:	fldcw  WORD PTR [ecx]
  421cf5:	lea    esp,[ebp-0x23]
  421cf8:	jmp    0x2683:0x37c4b5b0
  421cff:	les    edx,FWORD PTR [ecx-0x12020e8f]
  421d05:	outs   dx,DWORD PTR ds:[esi]
  421d06:	lahf   
  421d07:	pop    ebx
  421d08:	and    BYTE PTR [eax],0x85
  421d0b:	mov    al,ds:0x9ca78dc1
  421d10:	fisttp QWORD PTR [ebx-0x56a601bc]
  421d16:	sbb    esp,edx
  421d18:	mov    es:0x8731504d,eax
  421d1e:	adc    DWORD PTR [ebx],esp
  421d20:	popf   
  421d21:	rcr    BYTE PTR [eax+0x60f68b1b],0x7
  421d28:	mov    ebp,0xf1c107dd
  421d2d:	xor    dh,BYTE PTR [eax-0x64]
  421d30:	inc    ecx
  421d31:	mov    bh,0xa5
  421d33:	std    
  421d34:	pop    ss
  421d35:	sub    cl,BYTE PTR [edi]
  421d37:	fist   DWORD PTR [ebx+0x6bc9ed82]
  421d3d:	mov    bh,0xce
  421d3f:	mov    es,edi
  421d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d42:	inc    eax
  421d43:	pusha  
  421d44:	cmc    
  421d45:	ja     0x421d38
  421d47:	pop    esi
  421d48:	or     DWORD PTR [eax-0x38],ecx
  421d4b:	lods   al,BYTE PTR ds:[esi]
  421d4c:	pop    esp
  421d4d:	inc    ecx
  421d4e:	(bad)  
  421d4f:	mov    eax,0xc5ecdb24
  421d54:	jno    0x421d2f
  421d56:	das    
  421d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d58:	cdq    
  421d59:	dec    ebx
  421d5a:	out    dx,eax
  421d5b:	lahf   
  421d5c:	adc    al,0xe6
  421d5e:	hlt    
  421d5f:	rcr    DWORD PTR [ebx-0x7],0xf4
  421d63:	(bad)  
  421d64:	cs dec edi
  421d66:	mov    BYTE PTR [ebp-0x3543fb53],cl
  421d6c:	push   0xffffffcd
  421d6e:	sub    al,0x51
  421d70:	pusha  
  421d71:	outs   dx,DWORD PTR ds:[esi]
  421d72:	(bad)  
  421d73:	jecxz  0x421d12
  421d75:	retf   0xc6e6
  421d78:	xor    ah,ch
  421d7a:	mov    ch,0x62
  421d7c:	es dec ebx
  421d7e:	ret    
  421d7f:	mov    cl,0x86
  421d81:	xchg   ecx,eax
  421d82:	imul   ebx,DWORD PTR [eax+0x3ee2303d],0x3f6d10c6
  421d8c:	dec    esi
  421d8d:	mov    ds:0x26d8fedd,al
  421d92:	fcomp  DWORD PTR [ebx+0x4d664133]
  421d98:	adc    cl,BYTE PTR [eax+0x18]
  421d9b:	mov    fs:0xec8e35c5,eax
  421da1:	cmp    BYTE PTR [eax],0x58
  421da4:	sbb    BYTE PTR [edi-0x43c848f8],cl
  421daa:	pushf  
  421dab:	pop    edx
  421dac:	test   al,0x62
  421dae:	imul   esp,DWORD PTR [edx],0x13
  421db1:	stos   BYTE PTR es:[edi],al
  421db2:	in     al,dx
  421db3:	mov    BYTE PTR [ecx+edx*2-0x3d532cdd],ah
  421dba:	ret    0xc511
  421dbd:	sub    esi,DWORD PTR [edi+0x797abb8a]
  421dc3:	in     al,0x88
  421dc5:	push   ebx
  421dc6:	xchg   ebx,eax
  421dc7:	ja     0x421da1
  421dc9:	mov    ebx,0x3dff763f
  421dce:	add    al,0xaa
  421dd0:	jg     0x421d8c
  421dd2:	mov    edi,0xa9b4c9be
  421dd7:	loop   0x421d83
  421dd9:	sti    
  421dda:	ret    
  421ddb:	inc    esp
  421ddc:	pop    esp
  421ddd:	shl    BYTE PTR [edx+ebp*8-0x56a8fe5d],0x6f
  421de5:	push   ds
  421de6:	sub    DWORD PTR [ebp+0x3c165e25],ebp
  421dec:	pop    ds
  421ded:	out    0x51,eax
  421def:	mov    al,0xcd
  421df1:	cmc    
  421df2:	lds    ebp,FWORD PTR [edi+0x64]
  421df5:	je     0x421e53
  421df7:	pop    eax
  421df8:	xor    eax,0x709342c2
  421dfd:	cmp    al,0x41
  421dff:	add    al,0x4
  421e01:	shl    BYTE PTR [ecx],cl
  421e03:	inc    ebx
  421e04:	and    BYTE PTR [edi],dh
  421e06:	and    BYTE PTR [edx],al
  421e08:	or     DWORD PTR [edi-0xe],eax
  421e0b:	lds    edi,FWORD PTR [edx-0x7138f525]
  421e11:	mov    edx,DWORD PTR [edi]
  421e13:	aaa    
  421e14:	xchg   ecx,eax
  421e15:	in     al,dx
  421e16:	ins    DWORD PTR es:[edi],dx
  421e17:	mov    edx,0xad4a3a94
  421e1c:	push   edx
  421e1d:	test   BYTE PTR [ebx-0x74],ah
  421e20:	jnp    0x421da9
  421e22:	aam    0x8d
  421e24:	imul   esi,esp,0x1e7b6938
  421e2a:	lea    eax,[edi]
  421e2c:	bound  edi,QWORD PTR [eax+0x11674049]
  421e32:	jae    0x421dd3
  421e34:	jne    0x421df1
  421e36:	pop    esp
  421e37:	sbb    DWORD PTR [ecx],0x3d
  421e3a:	out    0x60,eax
  421e3c:	popa   
  421e3d:	push   ecx
  421e3e:	pop    edx
  421e3f:	and    BYTE PTR [eax-0x98cb8df],ah
  421e45:	shl    BYTE PTR ds:0x9af0b570,0x79
  421e4c:	cmp    ax,0x7907
  421e50:	aas    
  421e51:	mov    ds:0x1ca145e9,al
  421e56:	pusha  
  421e57:	add    al,0x7b
  421e59:	mov    ds:0xb344f50f,eax
  421e5e:	jmp    0x421eca
  421e60:	bound  esi,QWORD PTR [eax+0x75dc4e5e]
  421e66:	mov    al,ds:0xd04889d
  421e6b:	jg     0x421ea9
  421e6d:	jg     0x421e20
  421e6f:	sub    edi,DWORD PTR [edx+0x3f9f283b]
  421e75:	fst    st(5)
  421e77:	fist   DWORD PTR [edi-0x19fa92ff]
  421e7d:	aam    0x7f
  421e7f:	sbb    ah,BYTE PTR [esi-0x22]
  421e82:	xchg   ebp,eax
  421e83:	inc    edx
  421e84:	sbb    al,0xe
  421e86:	test   eax,0x500ef64a
  421e8b:	or     BYTE PTR [eax],cl
  421e8d:	inc    edx
  421e8e:	stos   BYTE PTR es:[edi],al
  421e8f:	dec    ebp
  421e90:	test   ch,dl
  421e92:	xchg   esi,eax
  421e93:	inc    ecx
  421e94:	jnp    0x421ed1
  421e96:	js     0x421e8d
  421e98:	pushf  
  421e99:	jno    0x421edb
  421e9b:	add    al,0xf8
  421e9d:	stos   BYTE PTR es:[edi],al
  421e9e:	mov    al,ds:0x40cedc36
  421ea3:	mov    bl,0xa
  421ea5:	outs   dx,BYTE PTR es:[esi]
  421ea7:	ja     0x421ead
  421ea9:	mov    dh,0x54
  421eab:	test   BYTE PTR [ebp+ecx*4+0x1b8c9306],0xb7
  421eb3:	test   DWORD PTR ds:0xca6e4ee1,ecx
  421eb9:	mov    al,ds:0x2d719091
  421ebe:	enter  0xd9db,0x43
  421ec2:	cdq    
  421ec3:	push   ecx
  421ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ec5:	mov    esi,0xd807277c
  421eca:	or     eax,0x6dd97fc
  421ecf:	pop    es
  421ed0:	sbb    DWORD PTR [ebp-0x562dfc68],esp
  421ed6:	cmp    eax,0xf9d712e3
  421edb:	push   ebp
  421edc:	mov    ds:0xbdbacd8a,al
  421ee1:	arpl   dx,bx
  421ee3:	icebp  
  421ee4:	lods   eax,DWORD PTR ds:[esi]
  421ee5:	jge    0x421e76
  421ee7:	arpl   WORD PTR [edi+0x73],ax
  421eea:	xchg   edx,eax
  421eeb:	popf   
  421eec:	loopne 0x421f48
  421eee:	mov    cl,0xe8
  421ef0:	popa   
  421ef1:	mov    BYTE PTR [eax+0x1496bee7],dl
  421ef7:	in     al,0x5d
  421ef9:	fs aad 0x22
  421efc:	stc    
  421efd:	or     DWORD PTR [ecx],edi
  421eff:	mov    esi,0xadd8cfce
  421f04:	in     al,dx
  421f05:	sahf   
  421f06:	dec    eax
  421f07:	cmp    bh,BYTE PTR [esi]
  421f09:	(bad)  
  421f0a:	ja     0x421f09
  421f0c:	mov    cl,0xd8
  421f0e:	out    0xef,al
  421f10:	adc    BYTE PTR [ebp-0x70],ch
  421f13:	lods   eax,DWORD PTR ds:[esi]
  421f14:	inc    eax
  421f15:	sub    DWORD PTR [eax],0xffffffbb
  421f18:	inc    ebx
  421f19:	out    dx,eax
  421f1a:	mov    ebp,0xdcf510ae
  421f1f:	xor    cl,ch
  421f21:	jae    0x421f8a
  421f23:	(bad)  
  421f24:	rol    DWORD PTR [edx+0x4f3fa16d],cl
  421f2a:	sub    DWORD PTR [ebp-0x50],edi
  421f2d:	or     edi,DWORD PTR [ebx]
  421f2f:	(bad)  
  421f30:	call   0xcfe2:0x64d1cb1
  421f37:	push   0x5fa6a923
  421f3c:	daa    
  421f3d:	js     0x421eef
  421f3f:	or     dl,ch
  421f41:	shl    bh,cl
  421f43:	pop    edx
  421f44:	xor    ecx,DWORD PTR [eax+ebp*8]
  421f47:	dec    edi
  421f48:	sbb    DWORD PTR [ecx+0x2d607016],esp
  421f4e:	adc    eax,0x50ad1acc
  421f53:	int3   
  421f54:	je     0x421f5b
  421f56:	jb     0x421f4e
  421f58:	add    BYTE PTR [ebp+0x7118edaf],bl
  421f5e:	mov    ah,0x62
  421f60:	mov    dl,0xf6
  421f62:	out    dx,eax
  421f63:	mov    ds:0x22b3eb4f,al
  421f68:	jne    0x421ef6
  421f6a:	adc    eax,0xf1cf7151
  421f6f:	or     eax,0x3766bf29
  421f74:	or     al,0x5
  421f77:	retf   
  421f78:	lock outs dx,DWORD PTR ds:[esi]
  421f7a:	add    ecx,DWORD PTR [eax-0x3c99df0e]
  421f80:	cmc    
  421f81:	mov    esp,0x4ad736
  421f86:	fld    QWORD PTR [eax+ebx*1]
  421f89:	adc    eax,0x3bdb3830
  421f8e:	adc    DWORD PTR [eax+0xb271ddc],0x8c73b1d7
  421f98:	bound  ecx,QWORD PTR ds:0x4a2eb67
  421f9e:	xchg   ebx,eax
  421f9f:	cli    
  421fa0:	in     al,0x80
  421fa2:	inc    ecx
  421fa3:	mov    esp,0x42d83398
  421fa8:	popa   
  421fa9:	sub    cl,BYTE PTR [eax+edx*4-0x3a]
  421fad:	cld    
  421fae:	push   edi
  421faf:	repnz scas eax,DWORD PTR es:[edi]
  421fb1:	mov    esp,0xe45eb4ce
  421fb6:	mov    dh,0x48
  421fb8:	cmp    bl,ah
  421fba:	cld    
  421fbb:	hlt    
  421fbc:	jo     0x421f77
  421fbe:	test   al,0x3c
  421fc0:	inc    ebp
  421fc1:	lock sub ebx,DWORD PTR [edx+0x3f]
  421fc5:	xor    eax,DWORD PTR [ebp-0x238dbb85]
  421fcb:	je     0x421fd1
  421fcd:	mov    ds:0x61748d61,al
  421fd2:	and    al,0xe7
  421fd4:	(bad)  
  421fd5:	jl     0x421f6d
  421fd7:	push   ebp
  421fd8:	ins    DWORD PTR es:[edi],dx
  421fd9:	sub    al,0x3d
  421fdb:	dec    edi
  421fdc:	loop   0x421fce
  421fde:	gs loope 0x421fc0
  421fe1:	shr    BYTE PTR [ecx+edx*8],0x7
  421fe5:	(bad)  
  421fe6:	dec    esi
  421fe7:	pop    esi
  421fe8:	bound  ebp,QWORD PTR [edx+0x63]
  421feb:	ins    DWORD PTR es:[edi],dx
  421fec:	mov    dh,BYTE PTR [ecx]
  421fee:	aam    0x35
  421ff0:	std    
  421ff1:	sar    DWORD PTR [esi-0x28],cl
  421ff4:	push   ecx
  421ff5:	push   0xaf59c59b
  421ffa:	jb     0x422025
  421ffc:	imul   ebx,DWORD PTR [ecx+0xb],0xebca81c5
  422003:	adc    BYTE PTR [eax-0x57a28d7b],dh
  422009:	enter  0xf54a,0x18
  42200d:	adc    DWORD PTR [eax],edx
  42200f:	jl     0x422000
  422011:	dec    ecx
  422012:	pop    esp
  422013:	sbb    eax,0x36560c35
  422018:	cmc    
  422019:	test   al,0x44
  42201b:	push   ds
  42201c:	inc    esp
  42201d:	stos   BYTE PTR es:[edi],al
  42201e:	jnp    0x422045
  422020:	fst    QWORD PTR [ebx-0x237e83b3]
  422026:	retf   
  422027:	dec    BYTE PTR [ebx+0x58755a5a]
  42202d:	sub    eax,0x8e4eded1
  422032:	cmp    ah,bh
  422034:	fld    QWORD PTR [eax+ecx*1-0x34f442e4]
  42203b:	js     0x42207f
  42203d:	shr    BYTE PTR [ebp+ebp*2+0xd],1
  422041:	jo     0x422058
  422043:	fadd   DWORD PTR [edi]
  422045:	mov    esp,0x9fe89d7f
  42204a:	or     eax,0x4fe05969
  42204f:	clc    
  422050:	dec    edx
  422051:	mov    edi,0x3ac1401d
  422056:	cmp    ah,BYTE PTR [eax]
  422058:	jmp    0x421fdf
  42205a:	inc    edx
  42205b:	inc    esi
  42205c:	jne    0x4220d4
  42205e:	push   ebp
  42205f:	cld    
  422060:	cmp    ebx,ebp
  422062:	das    
  422063:	xchg   ecx,eax
  422064:	mov    eax,0x722efae4
  422069:	das    
  42206a:	xchg   ebp,eax
  42206b:	scas   al,BYTE PTR es:[edi]
  42206c:	adc    esp,DWORD PTR [edi-0x1]
  42206f:	cmp    eax,0xfd99dd75
  422074:	inc    esi
  422075:	dec    ebx
  422076:	in     eax,0xd8
  422078:	jb     0x422056
  42207a:	lds    eax,FWORD PTR [ecx]
  42207c:	mov    bh,0x94
  42207e:	data16 jne 0x42209d
  422081:	push   esi
  422082:	into   
  422083:	sub    eax,0x44a42e13
  422088:	cmp    dh,BYTE PTR [esi+esi*8-0x49]
  42208c:	jnp    0x42203a
  42208e:	pop    ebx
  42208f:	and    al,0xf2
  422091:	xchg   BYTE PTR [esi],bl
  422093:	mov    DWORD PTR ds:0x33892a63,esi
  422099:	inc    ebp
  42209a:	call   0xb7302888
  42209f:	scas   eax,DWORD PTR es:[edi]
  4220a0:	imul   ecx,ebx,0xbddbf0b3
  4220a6:	adc    BYTE PTR [esi],0x2e
  4220a9:	in     eax,0x1c
  4220ab:	or     eax,0x2048c8a0
  4220b0:	scas   eax,DWORD PTR es:[edi]
  4220b1:	mov    bl,0x4a
  4220b3:	mov    dl,0xa6
  4220b5:	and    eax,0x12d4030e
  4220ba:	push   ebp
  4220bb:	mov    ds:0x4086312,al
  4220c0:	mov    al,ds:0x2f4fe24d
  4220c5:	mov    ebx,0x4397e3b9
  4220ca:	out    dx,al
  4220cb:	sub    bh,BYTE PTR [ebx]
  4220cd:	pushf  
  4220ce:	clc    
  4220cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d0:	fild   DWORD PTR [ebx-0x6a]
  4220d3:	mov    eax,0x2e92342b
  4220d8:	pop    eax
  4220d9:	addr16 iret 
  4220db:	pop    edi
  4220dc:	xor    eax,0x60c34184
  4220e1:	addr16 aas 
  4220e3:	jns    0x422158
  4220e5:	fstp   TBYTE PTR [ebp-0x2b5d702b]
  4220eb:	mov    bl,0x5d
  4220ed:	lea    eax,[edi+edx*8-0x102d70c8]
  4220f4:	in     al,dx
  4220f5:	mov    eax,ds:0xfa1a6fa0
  4220fa:	shl    BYTE PTR [eax+0x3b],1
  4220fd:	inc    esp
  4220fe:	sbb    BYTE PTR [edx-0x4c00d8ed],ch
  422104:	mov    WORD PTR [edi+0x3f],es
  422107:	call   0x2cd:0xcc17e2b4
  42210e:	jo     0x4220c2
  422110:	or     bh,BYTE PTR [edi]
  422112:	retf   0x5eeb
  422115:	mov    eax,DWORD PTR [edi]
  422117:	dec    edi
  422118:	add    bl,BYTE PTR [esi]
  42211a:	and    ch,ch
  42211c:	sub    DWORD PTR [edx],ebx
  42211e:	lods   al,BYTE PTR ds:[esi]
  42211f:	sub    edi,esp
  422121:	(bad)  
  422122:	dec    esp
  422123:	xlat   BYTE PTR ds:[ebx]
  422124:	mov    al,0x8e
  422126:	jl     0x422116
  422128:	xchg   edx,eax
  422129:	arpl   WORD PTR [edi+0x49],di
  42212c:	mov    eax,ds:0x9a4f9913
  422131:	jmp    0xade6:0x51724d8b
  422138:	sti    
  422139:	add    BYTE PTR [eax],0x67
  42213c:	cmp    BYTE PTR [eax],0x77
  42213f:	popa   
  422140:	mov    ah,0x29
  422142:	std    
  422143:	push   0xc82b36a6
  422148:	cmp    ecx,eax
  42214a:	stos   BYTE PTR es:[edi],al
  42214b:	in     eax,dx
  42214c:	gs push 0x1c
  42214f:	mov    ch,0x70
  422151:	aas    
  422152:	std    
  422153:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422155:	cmp    BYTE PTR [edi+eax*1-0x7],dh
  422159:	jge    0x4221cd
  42215b:	aas    
  42215c:	cmovg  eax,DWORD PTR [eax]
  42215f:	std    
  422160:	retf   0x9662
  422163:	out    dx,al
  422164:	rcl    DWORD PTR [eax+0x58319d93],cl
  42216a:	sbb    DWORD PTR [eax-0x23949b3a],0x91bae7a0
  422174:	push   es
  422175:	adc    dl,BYTE PTR [ebx-0x505018b5]
  42217b:	enter  0x8ae4,0x3d
  42217f:	imul   ebx,DWORD PTR [ecx],0x58239178
  422185:	push   edx
  422186:	fiadd  DWORD PTR [ecx]
  422188:	pop    esp
  422189:	xchg   DWORD PTR [edx-0x783d53d6],edi
  42218f:	int3   
  422190:	shl    BYTE PTR [eax-0x4],0x49
  422194:	cmc    
  422195:	sbb    bl,BYTE PTR [edx+0x7]
  422198:	ins    DWORD PTR es:[edi],dx
  422199:	dec    ebx
  42219a:	test   eax,0x8a783b66
  42219f:	mov    ebx,ecx
  4221a1:	mov    ds:0xb8b8d787,al
  4221a6:	add    eax,0xb1215f3d
  4221ab:	fwait
  4221ac:	jmp    0x592c:0x8e8d55a5
  4221b3:	shl    DWORD PTR [eax-0x2efe86f],cl
  4221b9:	call   0x92a:0xe13b1dab
  4221c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c1:	shl    BYTE PTR ds:0xb9218ce7,cl
  4221c7:	mov    al,0x2a
  4221c9:	ret    
  4221ca:	mov    al,0x55
  4221cc:	xchg   ebp,eax
  4221cd:	in     eax,dx
  4221ce:	and    ecx,edx
  4221d0:	(bad)  
  4221d1:	pop    es
  4221d2:	jp     0x42224a
  4221d4:	jne    0x422204
  4221d6:	mov    esi,0x23ea61d5
  4221db:	ret    
  4221dc:	jmp    0xffa6:0xf5e1033e
  4221e3:	ret    
  4221e4:	fistp  QWORD PTR [ecx+0x47]
  4221e7:	mov    edi,0x987db2d3
  4221ec:	shl    BYTE PTR [ebp+eiz*4-0x1f70758f],cl
  4221f3:	(bad)  
  4221f4:	and    ecx,edx
  4221f6:	leave  
  4221f7:	fwait
  4221f8:	mov    al,0x1a
  4221fa:	xchg   esi,eax
  4221fb:	outs   dx,DWORD PTR ds:[esi]
  4221fc:	inc    esp
  4221fd:	pop    ebx
  4221fe:	mov    ch,0x18
  422200:	xchg   ecx,eax
  422201:	cmp    DWORD PTR [edx],0x69721c3b
  422207:	push   ebx
  422208:	xor    al,0xed
  42220a:	in     eax,0x77
  42220c:	and    dl,BYTE PTR [edi]
  42220e:	jne    0x4221eb
  422210:	shl    eax,cl
  422212:	adc    DWORD PTR [ebx-0x4c],edi
  422215:	xor    DWORD PTR [ecx+0x3c9ca9d5],esp
  42221b:	sbb    al,0xec
  42221d:	(bad)  
  42221e:	ror    DWORD PTR [ebp+0x58],cl
  422221:	fadd   st,st(2)
  422223:	enter  0xfc64,0x38
  422227:	jl     0x4221c5
  422229:	xchg   edi,eax
  42222a:	inc    edi
  42222b:	xor    edi,edi
  42222d:	inc    esp
  42222e:	sahf   
  42222f:	jmp    0x2f0df808
  422234:	mov    ds:0x878607a,eax
  422239:	(bad)  
  42223b:	add    DWORD PTR [ecx],eax
  42223d:	pop    eax
  42223e:	inc    eax
  42223f:	xor    BYTE PTR [ebp+0x4887de57],al
  422245:	xor    ch,dl
  422247:	xchg   edi,eax
  422248:	rcr    BYTE PTR [edx-0x50],1
  42224b:	push   ebx
  42224c:	std    
  42224d:	lods   eax,DWORD PTR ds:[esi]
  42224e:	xchg   ebx,eax
  42224f:	std    
  422250:	adc    al,0xb4
  422252:	xchg   edx,ecx
  422254:	or     esi,ebp
  422256:	cmc    
  422257:	fwait
  422258:	test   eax,0x4b51c344
  42225d:	ja     0x4222c8
  42225f:	lahf   
  422260:	jge    0x422274
  422262:	cdq    
  422263:	xchg   edx,eax
  422264:	mov    ss,WORD PTR [edx]
  422266:	push   edi
  422267:	mov    ebx,0x839cbfd9
  42226c:	inc    eax
  42226d:	in     al,dx
  42226e:	lods   eax,DWORD PTR ds:[esi]
  42226f:	hlt    
  422270:	dec    esp
  422271:	pushf  
  422272:	dec    ebx
  422273:	xchg   edi,eax
  422274:	push   edx
  422275:	mov    cl,0x76
  422277:	mov    edi,DWORD PTR [edi]
  422279:	mov    dl,0x4b
  42227b:	jp     0x42226e
  42227d:	mov    bl,0xb
  42227f:	inc    eax
  422280:	pusha  
  422281:	mov    al,0x83
  422283:	sbb    DWORD PTR [edx+0x3c133cd0],edi
  422289:	xchg   ebp,eax
  42228a:	jmp    0xf168dce7
  42228f:	stc    
  422290:	inc    bp
  422292:	das    
  422293:	out    0xa5,al
  422295:	mov    dh,0x60
  422297:	lds    eax,FWORD PTR [edi]
  422299:	add    al,0x28
  42229b:	push   ss
  42229c:	mov    cl,0xa4
  42229e:	and    al,0x41
  4222a0:	inc    esi
  4222a1:	sub    al,0x6
  4222a3:	test   eax,0x44c08f57
  4222a8:	jl     0x42222c
  4222aa:	hlt    
  4222ab:	into   
  4222ac:	mov    ebp,0x22f66e8a
  4222b1:	fidiv  WORD PTR [edx-0x7a568ead]
  4222b7:	(bad)  
  4222b8:	xlat   BYTE PTR ds:[ebx]
  4222b9:	into   
  4222ba:	(bad)  
  4222bb:	sub    DWORD PTR [ecx+0x2b],esp
  4222be:	repnz cmp al,0x8
  4222c1:	add    bh,BYTE PTR [edi]
  4222c3:	mov    BYTE PTR [ebp-0xfe89f55],ah
  4222c9:	jns    0x4222f8
  4222cb:	push   esp
  4222cc:	out    0xc2,al
  4222ce:	mov    esi,0xf45818cb
  4222d3:	cmc    
  4222d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d5:	lock cmp BYTE PTR [eax+0xa773841],ah
  4222dc:	push   edi
  4222dd:	mov    ds,WORD PTR [edi+0x7b5d88f1]
  4222e3:	and    ebp,ebp
  4222e5:	retf   
  4222e6:	ret    0x1e85
  4222e9:	dec    esi
  4222ea:	iret   
  4222eb:	xchg   BYTE PTR [ecx-0x30],bh
  4222ee:	sbb    eax,0x6c122bdb
  4222f3:	mov    esi,0x16de7bac
  4222f8:	in     al,0xab
  4222fa:	popf   
  4222fb:	mov    edi,0xeaececb
  422300:	ficomp DWORD PTR [esi-0x6a]
  422303:	sahf   
  422304:	add    BYTE PTR [edi],al
  422306:	push   eax
  422307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422308:	adc    eax,0x19add3ea
  42230d:	cs enter 0x785d,0x86
  422312:	jg     0x422311
  422314:	lock cmp BYTE PTR [ebx],dh
  422317:	mov    ecx,0x663fa294
  42231c:	adc    al,0x28
  42231e:	addr16 push edx
  422320:	cpuid  
  422322:	push   ebp
  422323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422324:	inc    ebx
  422325:	push   edi
  422326:	popf   
  422327:	cmp    bl,BYTE PTR [esi*2-0x550f5cfd]
  42232e:	push   ebp
  42232f:	sub    eax,0xa15c1bdd
  422334:	pop    ebx
  422335:	ja     0x4222cf
  422337:	push   DWORD PTR [edx]
  422339:	fild   DWORD PTR [edi]
  42233b:	loope  0x4222d9
  42233d:	jo     0x422329
  42233f:	cli    
  422340:	pushf  
  422341:	jge    0x4222f4
  422343:	popa   
  422344:	mov    dl,0x28
  422346:	test   al,0xc1
  422348:	(bad)  
  422349:	xchg   edi,eax
  42234a:	rcl    DWORD PTR [ecx+ecx*4-0x41],cl
  42234e:	mov    DWORD PTR [ebp+esi*1+0x7c810292],edi
  422355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422356:	shl    BYTE PTR [edx-0x64],0xf5
  42235a:	add    edx,DWORD PTR [esi-0x41b15c4c]
  422360:	int    0xbf
  422362:	add    al,0xdc
  422364:	popa   
  422365:	mov    esp,0x250e096a
  42236a:	sahf   
  42236b:	mov    esp,0x44def4a1
  422370:	push   0x60
  422372:	ins    DWORD PTR es:[edi],dx
  422373:	dec    ebp
  422374:	out    0x15,eax
  422376:	ret    
  422377:	push   ecx
  422378:	mov    WORD PTR [edx-0x74316e0],ds
  42237e:	lods   eax,DWORD PTR ds:[esi]
  42237f:	mov    WORD PTR [ebp-0x75],cs
  422382:	jae    0x42232f
  422384:	adc    DWORD PTR [edx+0x610c4f3b],ebp
  42238a:	ins    BYTE PTR es:[edi],dx
  42238b:	push   0xa82e459
  422390:	fcmovnb st,st(3)
  422392:	xlat   BYTE PTR ds:[ebx]
  422393:	adc    edx,edi
  422395:	inc    ebx
  422396:	pop    ebx
  422397:	jne    0x4223e0
  422399:	(bad)  
  42239a:	xor    eax,0x219face9
  42239f:	adc    dl,cl
  4223a1:	mov    bl,0xdc
  4223a3:	lods   eax,DWORD PTR ds:[esi]
  4223a4:	mov    cl,0x1c
  4223a6:	adc    DWORD PTR [eax+0x54],esp
  4223a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223aa:	or     eax,0xa4fa1ce4
  4223af:	ins    BYTE PTR es:[edi],dx
  4223b0:	mov    ds:0x2d61d419,eax
  4223b5:	sub    eax,0x3a03e615
  4223ba:	int3   
  4223bb:	dec    esp
  4223bc:	mov    esi,0x952a3274
  4223c1:	pop    es
  4223c2:	aam    0xc3
  4223c4:	pop    ebp
  4223c5:	int    0x7a
  4223c7:	jmp    0x422386
  4223c9:	cmc    
  4223ca:	lds    eax,FWORD PTR ds:0x893505c4
  4223d0:	mov    ebx,0x43898d10
  4223d5:	shr    BYTE PTR ds:0x4691a6d2,0x3c
  4223dc:	(bad)  
  4223dd:	mov    bl,0x41
  4223df:	or     al,0xa7
  4223e1:	dec    ebp
  4223e2:	push   ss
  4223e3:	dec    edi
  4223e4:	cmp    esi,DWORD PTR [ecx+0x20fa7196]
  4223ea:	mov    ebp,DWORD PTR [ebx+0x2c]
  4223ed:	imul   ebp,DWORD PTR [edi+0xba06b5],0xffffffca
  4223f4:	push   esi
  4223f5:	sub    ch,bh
  4223f7:	les    ebx,FWORD PTR [ecx-0x39e49672]
  4223fd:	loop   0x42240a
  4223ff:	pop    ebx
  422400:	sub    edi,DWORD PTR [edi-0x5]
  422403:	fsubp  st(5),st
  422405:	add    al,BYTE PTR [eax+0x2110565]
  42240b:	das    
  42240c:	aas    
  42240d:	fidiv  DWORD PTR [edi+eiz*1]
  422410:	outs   dx,BYTE PTR ds:[esi]
  422411:	pop    eax
  422412:	arpl   bx,bp
  422414:	xor    esi,0xc7ac1d7
  42241a:	js     0x422466
  42241c:	fst    DWORD PTR [edi+0x5]
  42241f:	mov    dh,0xd
  422421:	(bad)  
  422423:	push   eax
  422424:	mul    bh
  422426:	sub    DWORD PTR [ebx-0x23],esp
  422429:	loop   0x4223d0
  42242b:	push   0xffffffd3
  42242d:	xor    eax,0xd96adbd6
  422432:	add    BYTE PTR [esi],0xc4
  422435:	scas   eax,DWORD PTR es:[edi]
  422436:	and    DWORD PTR [ecx+esi*8+0x73cc9784],ebx
  42243d:	sbb    eax,DWORD PTR [edx+0x79cf02bf]
  422443:	icebp  
  422444:	div    DWORD PTR [esi+0xa]
  422447:	push   edi
  422448:	adc    eax,0x6b17132b
  42244d:	and    ch,0x1a
  422450:	fs cld 
  422452:	or     ch,BYTE PTR [ecx+0x38]
  422455:	repz xor ah,BYTE PTR [ebp+0x43]
  422459:	fdivr  st(3),st
  42245b:	cmp    esp,ebx
  42245d:	inc    esi
  42245e:	push   0xffffffc8
  422460:	adc    ah,bh
  422462:	and    eax,0xf0874842
  422467:	out    0xd4,al
  422469:	lods   al,BYTE PTR ds:[esi]
  42246a:	push   ds
  42246b:	dec    cl
  42246d:	push   ecx
  42246e:	stc    
  42246f:	pusha  
  422470:	jle    0x422438
  422472:	push   eax
  422473:	xor    eax,0x95acaff7
  422478:	call   DWORD PTR [edx+ecx*2-0x49]
  42247c:	popf   
  42247d:	and    edx,0x32
  422480:	imul   esp,DWORD PTR [esi-0x29],0xffffffb6
  422484:	(bad)  
  422485:	adc    BYTE PTR es:[ebx-0xfa4fbeb],0x30
  42248d:	mov    ds:0x1dfccb6c,al
  422492:	mov    ecx,0x957e9355
  422497:	jb     0x4224f8
  422499:	and    ebp,edi
  42249b:	sbb    esp,edx
  42249d:	sahf   
  42249e:	push   DWORD PTR [ebp-0x24]
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425879
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x512776ec
  4242c9:	mov    dl,0x30
  4242cb:	dec    eax
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c9324],0xd6
  4242d5:	ins    DWORD PTR es:[edi],dx
  4242d6:	fmul   DWORD PTR [eax+edx*1]
  4242d9:	lods   eax,DWORD PTR ds:[esi]
  4242da:	pusha  
  4242db:	and    esi,ebp
  4242dd:	push   esp
  4242de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242df:	push   ebp
  4242e0:	cs jns 0x42433a
  4242e3:	dec    ecx
  4242e4:	std    
  4242e5:	mov    edx,0xdfd37b2d
  4242ea:	and    ecx,DWORD PTR [esp+esi*2-0x4e]
  4242ee:	out    0xc1,al
  4242f0:	in     al,0x52
  4242f2:	adc    dl,dh
  4242f4:	pusha  
  4242f5:	aas    
  4242f6:	fbstp  TBYTE PTR [ecx+0x5d]
  4242f9:	(bad)  
  4242fa:	jno    0x42428a
  4242fc:	mov    ebp,0xbf5b11b9
  424301:	jp     0x424320
  424303:	adc    DWORD PTR [ebx],ecx
  424305:	ds xchg esi,eax
  424307:	ins    BYTE PTR es:[edi],dx
  424308:	(bad)  
  424309:	hlt    
  42430a:	mov    bl,0x97
  42430c:	dec    ebx
  42430d:	sub    eax,DWORD PTR [esp+ebp*8]
  424310:	mov    eax,ds:0x7d0a3ebd
  424315:	mov    fs,eax
  424317:	retf   
  424318:	mov    WORD PTR [ebp+0x61ec923d],es
  42431e:	pop    ebx
  42431f:	test   bh,cl
  424321:	mov    ebp,0xfaa75dc6
  424326:	fwait
  424327:	dec    esi
  424328:	pop    esp
  424329:	ss in  al,0xb0
  42432c:	sbb    BYTE PTR [ecx+0x79cd732],bl
  424332:	stc    
  424333:	loop   0x4242e7
  424335:	cmp    DWORD PTR [ebx+0x18],ecx
  424338:	xlat   BYTE PTR ds:[ebx]
  424339:	mov    WORD PTR ds:0xa4da8590,es
  42433f:	loopne 0x424343
  424341:	cmp    eax,0xdb400861
  424346:	js     0x42433f
  424348:	(bad)  
  42434a:	pop    ss
  42434b:	mov    ds:0x8a16eb3b,al
  424350:	repz sub ch,BYTE PTR [ebx+ebx*2-0x19ff761e]
  424358:	pop    ebp
  424359:	retf   0xfd14
  42435c:	call   0x8392:0xd7fa2dcd
  424363:	add    bh,BYTE PTR [ebx+0x63]
  424366:	shl    ebp,1
  424368:	pop    ecx
  424369:	jle    0x4242f7
  42436b:	add    dl,BYTE PTR [ecx]
  42436d:	stos   DWORD PTR es:[edi],eax
  42436e:	push   ds
  42436f:	mov    al,ds:0xbfdd6ff7
  424374:	std    
  424375:	mov    eax,0x3a521b39
  42437a:	jl     0x42431c
  42437c:	pop    ecx
  42437d:	mov    ebp,0xda6ab769
  424382:	jecxz  0x4243cd
  424384:	leave  
  424385:	dec    edx
  424386:	sub    BYTE PTR [eax-0x5732abc1],ch
  42438c:	cmp    eax,0x7c08205
  424391:	xchg   esp,eax
  424392:	pushf  
  424393:	inc    edi
  424394:	call   0xcf549fe
  424399:	sbb    dh,BYTE PTR [esi+0x64]
  42439c:	popa   
  42439d:	pop    ebx
  42439e:	adc    edi,esp
  4243a0:	sbb    al,0x5d
  4243a2:	pop    edx
  4243a3:	pop    ds
  4243a4:	(bad)  
  4243a5:	stos   DWORD PTR es:[edi],eax
  4243a6:	pusha  
  4243a7:	popf   
  4243a8:	cmp    edi,edx
  4243aa:	out    0x1,eax
  4243ac:	fwait
  4243ad:	cwde   
  4243ae:	stos   BYTE PTR es:[edi],al
  4243af:	dec    edi
  4243b0:	inc    esi
  4243b1:	mov    eax,DWORD PTR [edx+0x1e]
  4243b4:	in     eax,0x71
  4243b6:	pop    ebx
  4243b7:	dec    esi
  4243b8:	jo     0x424350
  4243ba:	mov    eax,ds:0x53948fa5
  4243bf:	push   cs
  4243c0:	loope  0x424391
  4243c2:	inc    ebx
  4243c3:	mov    esp,0x2c62515e
  4243c8:	leave  
  4243c9:	leave  
  4243ca:	push   es
  4243cb:	mov    DWORD PTR [edx+eiz*2+0x266d50ea],eax
  4243d2:	xchg   edi,eax
  4243d3:	pop    eax
  4243d4:	xor    DWORD PTR [ebp+eiz*2-0x19],edx
  4243d8:	iret   
  4243d9:	fstp   QWORD PTR ds:0xa7a3a795
  4243df:	outs   dx,DWORD PTR ds:[esi]
  4243e0:	adc    eax,0x189a8331
  4243e5:	add    ah,al
  4243e7:	cs pop ebx
  4243e9:	pop    edi
  4243ea:	scas   eax,DWORD PTR es:[edi]
  4243eb:	mov    cl,0xdd
  4243ed:	push   es
  4243ee:	bound  edi,QWORD PTR [eax-0x47]
  4243f1:	push   ds
  4243f2:	in     al,dx
  4243f3:	dec    edi
  4243f4:	pop    ebp
  4243f5:	pop    ecx
  4243f6:	in     al,0xdc
  4243f8:	cmp    DWORD PTR [edi],ebp
  4243fa:	scas   al,BYTE PTR es:[edi]
  4243fb:	jp     0x42437d
  4243fd:	inc    BYTE PTR [eax]
  4243ff:	mov    eax,ds:0x70e6e798
  424404:	fs cs or eax,0xcc796a45
  42440b:	lods   eax,DWORD PTR ds:[esi]
  42440c:	jnp    0x4243fb
  42440e:	pop    ds
  42440f:	add    DWORD PTR [esi-0x13],0x65b9e923
  424416:	sub    eax,0xad9901c0
  42441b:	jp     0x4243d8
  42441d:	jns    0x424495
  42441f:	pusha  
  424420:	js     0x4243fc
  424422:	loop   0x424469
  424424:	xor    al,0xc2
  424426:	inc    ecx
  424427:	cmp    al,0x67
  424429:	mov    ah,0x68
  42442b:	jle    0x424434
  42442d:	cs jno 0x4243b0
  424430:	sub    BYTE PTR [esi-0x2e],ah
  424433:	mov    dl,0x80
  424435:	xchg   edx,eax
  424436:	sbb    ecx,DWORD PTR [edi-0x458feebb]
  42443c:	(bad)  
  42443d:	jmp    0x424476
  42443f:	dec    ebp
  424440:	dec    eax
  424441:	sub    al,0xc4
  424443:	sbb    eax,0x823a8d29
  424448:	mov    esi,DWORD PTR [esi+0x2b719447]
  42444e:	(bad)  
  42444f:	call   FWORD PTR [esi]
  424451:	daa    
  424452:	(bad)  
  424453:	js     0x424422
  424455:	sbb    ch,dl
  424457:	sbb    al,0x7
  424459:	xor    al,0xe0
  42445b:	in     eax,0xab
  42445d:	fcmovnu st,st(0)
  42445f:	adc    edx,DWORD PTR [ecx]
  424461:	xchg   ebx,eax
  424462:	(bad)  
  424463:	aad    0x12
  424465:	jmp    0x9df221f2
  42446a:	inc    esp
  42446b:	cld    
  42446c:	xchg   ecx,eax
  42446d:	imul   DWORD PTR [eax]
  42446f:	add    eax,0x7c055b07
  424474:	xchg   BYTE PTR [esi+0x1428259e],cl
  42447a:	xchg   ebp,eax
  42447b:	call   0xb1a84842
  424480:	mov    eax,ds:0xf3f0086f
  424485:	jnp    0x4244ea
  424487:	imul   ebx,DWORD PTR [edx+0x3984f863],0x6949be57
  424491:	jp     0x4244d7
  424493:	xor    BYTE PTR [esi-0x624622cb],ah
  424499:	xor    al,0xd9
  42449b:	sbb    BYTE PTR [esi-0x6],0x5a
  42449f:	mov    eax,ds:0x13f1fa56
  4244a4:	inc    eax
  4244a5:	imul   BYTE PTR [ebx]
  4244a7:	push   edx
  4244a8:	sahf   
  4244a9:	xchg   BYTE PTR [eax-0x4d],cl
  4244ac:	jnp    0x424432
  4244ae:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4244b0:	gs nop
  4244b2:	stos   BYTE PTR es:[edi],al
  4244b3:	out    0x32,al
  4244b5:	jmp    0xd868:0x38b744d2
  4244bc:	jne    0x424500
  4244be:	repnz pop edi
  4244c0:	add    ebx,DWORD PTR [ecx+0x41]
  4244c3:	stc    
  4244c4:	jmp    0x424502
  4244c6:	pop    ds
  4244c7:	icebp  
  4244c8:	sub    edx,DWORD PTR [edx]
  4244ca:	sti    
  4244cb:	or     al,dl
  4244cd:	inc    ebp
  4244ce:	test   BYTE PTR [ecx+0x11],dl
  4244d1:	popf   
  4244d2:	adc    al,ch
  4244d4:	dec    edx
  4244d5:	(bad)  
  4244d7:	pusha  
  4244d8:	push   es
  4244d9:	(bad)  
  4244da:	adc    BYTE PTR [esi+0x6b],bh
  4244dd:	out    dx,eax
  4244de:	adc    BYTE PTR [ebx],ah
  4244e0:	dec    edi
  4244e1:	lods   eax,DWORD PTR ds:[esi]
  4244e2:	stos   BYTE PTR es:[edi],al
  4244e3:	shl    DWORD PTR [esi+0x78],1
  4244e6:	dec    di
  4244e8:	mov    esp,0x494b158c
  4244ed:	jl     0x42455c
  4244ef:	inc    esi
  4244f0:	sbb    al,0x70
  4244f2:	leave  
  4244f3:	rol    DWORD PTR [edi+0x76538a0],cl
  4244f9:	aad    0x19
  4244fb:	jle    0x424538
  4244fd:	adc    DWORD PTR [esi+0x7dd6a793],esi
  424503:	xchg   edi,eax
  424504:	xchg   ecx,eax
  424505:	push   0xb05332f9
  42450a:	jle    0x4244fd
  42450c:	div    BYTE PTR [eax-0x155aac71]
  424512:	dec    ebx
  424513:	or     edx,DWORD PTR [edx+0x78124a7d]
  424519:	push   esp
  42451a:	jns    0x4244dc
  42451c:	jns    0x4244b4
  42451e:	sbb    dl,dl
  424520:	or     eax,0xd7ffe61e
  424525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424526:	push   eax
  424527:	daa    
  424528:	sbb    cl,cl
  42452a:	lds    ebp,FWORD PTR [ebp+0x5e6171ad]
  424530:	xor    cl,BYTE PTR [edx-0x10]
  424533:	jne    0x4245a9
  424535:	shr    bl,cl
  424537:	das    
  424538:	adc    cl,BYTE PTR [eax+0x3e]
  42453b:	fidivr WORD PTR [ebx+0x8a5748]
  424541:	cmp    DWORD PTR [ebx],eax
  424543:	inc    ebp
  424544:	dec    ecx
  424545:	popa   
  424546:	push   0x78
  424548:	xor    ebx,ebp
  42454a:	inc    edx
  42454b:	scas   eax,DWORD PTR es:[di]
  42454d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42454e:	push   edx
  42454f:	pop    es
  424550:	xchg   BYTE PTR [eax],ch
  424552:	je     0x424590
  424554:	rcr    DWORD PTR [ebx-0x84baeba],cl
  42455a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42455b:	je     0x42452d
  42455d:	mov    ebp,0x2e832b9d
  424562:	(bad)  
  424563:	jle    0x424564
  424565:	push   ds
  424566:	xchg   DWORD PTR [esi-0x17b344b6],edi
  42456c:	xchg   ebp,eax
  42456d:	bound  ebx,QWORD PTR [eax+0x67]
  424570:	push   cs
  424571:	mov    eax,0x9a6de310
  424576:	dec    ecx
  424577:	xor    al,dh
  424579:	cmp    al,0x46
  42457b:	fs dec ebp
  42457d:	aam    0x21
  42457f:	fist   WORD PTR [ebx+0x69]
  424582:	or     BYTE PTR [ebx+0xb],dl
  424585:	stc    
  424586:	xor    BYTE PTR [ecx],bl
  424588:	mov    ch,0x27
  42458a:	mov    edi,0x3c498125
  42458f:	jo     0x4245f9
  424591:	add    eax,0x69ff415f
  424596:	jno    0x424600
  424598:	xchg   BYTE PTR [ecx+0x74],ah
  42459b:	test   DWORD PTR ds:0x29d84a46,edx
  4245a1:	repnz dec esp
  4245a3:	add    BYTE PTR [edx],bl
  4245a5:	cli    
  4245a6:	test   edi,edi
  4245a8:	sub    eax,0x94b9310e
  4245ad:	jne    0x424570
  4245af:	bound  esi,QWORD PTR [ebx]
  4245b1:	mov    cl,0xf3
  4245b3:	ins    DWORD PTR es:[edi],dx
  4245b4:	sub    BYTE PTR ds:0x33141ea3,ch
  4245ba:	jecxz  0x4245de
  4245bc:	or     DWORD PTR [ebx-0x46],edx
  4245bf:	pop    ss
  4245c0:	(bad)  
  4245c1:	jp     0x42454a
  4245c3:	das    
  4245c4:	wrmsr  
  4245c6:	cdq    
  4245c7:	idiv   BYTE PTR [ebp+0x2]
  4245ca:	dec    ebx
  4245cb:	icebp  
  4245cc:	pusha  
  4245cd:	aaa    
  4245ce:	pusha  
  4245cf:	jp     0x424601
  4245d1:	jmp    0xb21c:0x6bfb5069
  4245d8:	jb     0x424641
  4245da:	or     eax,0xe6b6d960
  4245df:	mov    edx,0x62bbc545
  4245e4:	sbb    dl,dl
  4245e6:	fcmovu st,st(6)
  4245e8:	ja     0x4245bf
  4245ea:	aad    0x12
  4245ec:	cli    
  4245ed:	jbe    0x424575
  4245ef:	int    0x15
  4245f1:	and    DWORD PTR [ecx],edi
  4245f3:	in     al,0x67
  4245f5:	mov    dh,0x53
  4245f7:	mov    eax,ds:0xb678ab08
  4245fc:	in     eax,0x81
  4245fe:	daa    
  4245ff:	test   DWORD PTR [eax+0x3b762ec4],0x2d91005a
  424609:	or     ch,BYTE PTR [edi-0x69f90a98]
  42460f:	or     BYTE PTR [ebp+0x41],al
  424612:	cmp    al,0x2a
  424614:	outs   dx,BYTE PTR ds:[esi]
  424615:	sub    DWORD PTR [ebx-0x18],0xffffff90
  424619:	(bad)  
  42461a:	(bad)  
  42461b:	mov    esp,0xd5cc02a3
  424620:	push   edx
  424621:	dec    eax
  424623:	fistp  WORD PTR [edi+0x48]
  424626:	dec    esp
  424627:	jo     0x4245e2
  424629:	es retf 0x1f4e
  42462d:	add    al,0x26
  42462f:	repz mov edx,0x3d0dc0da
  424635:	xchg   esp,eax
  424636:	mov    cl,0xcd
  424638:	fs push eax
  42463a:	sar    BYTE PTR [ecx-0x2ed1af10],0x72
  424641:	or     eax,0x7e3cde6
  424646:	mov    eax,0xdf8b7ac1
  42464b:	aas    
  42464c:	jmp    0x4245e8
  42464e:	hlt    
  42464f:	in     al,0xf8
  424651:	push   cs
  424652:	mov    al,ds:0x177d9ae4
  424657:	inc    esi
  424658:	sub    bl,BYTE PTR [esi+0x14]
  42465b:	clc    
  42465c:	push   ebp
  42465d:	mov    ds:0x769d67ff,eax
  424662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424663:	mov    edi,0x8b5cc2c4
  424668:	ficomp WORD PTR [edi+0x5e1ab483]
  42466e:	mov    ecx,0xd1eeda2e
  424673:	sbb    al,0x6b
  424675:	loope  0x424685
  424677:	scas   eax,DWORD PTR es:[edi]
  424678:	sub    al,0x86
  42467a:	dec    ecx
  42467b:	mov    ds:0xd1e77d3a,al
  424680:	fs cmp eax,0x7ce58331
  424686:	lahf   
  424687:	add    DWORD PTR [eax-0x6],esi
  42468a:	es xchg esp,eax
  42468c:	or     eax,0x7061d347
  424691:	xchg   edi,eax
  424692:	jns    0x4246fb
  424694:	mov    al,ds:0x878c3198
  424699:	stc    
  42469a:	hlt    
  42469b:	out    dx,al
  42469c:	mov    esi,fs
  42469e:	stc    
  42469f:	push   ds
  4246a0:	xor    dl,BYTE PTR [edi+0x78]
  4246a3:	ret    
  4246a4:	pop    es
  4246a5:	or     DWORD PTR [edx-0x2e],eax
  4246a8:	xchg   ebx,eax
  4246a9:	into   
  4246aa:	cwde   
  4246ab:	psubb  mm5,QWORD PTR [ecx+ebp*4-0xe366cf7]
  4246b3:	aam    0x53
  4246b5:	shl    DWORD PTR [edi],cl
  4246b7:	imul   ebp,DWORD PTR [esi+0x646b9911],0xa75ce9ac
  4246c1:	lea    ebx,[edi+0x685c9d91]
  4246c7:	sbb    al,0x47
  4246c9:	ficom  DWORD PTR [ebx+0x64]
  4246cc:	push   0x1ae5b4de
  4246d1:	out    dx,eax
  4246d2:	ins    BYTE PTR es:[edi],dx
  4246d3:	pop    ecx
  4246d4:	sbb    al,0x9c
  4246d6:	xor    BYTE PTR [ebx+0x7f599050],dh
  4246dc:	dec    esp
  4246dd:	(bad)  [edi-0x65]
  4246e0:	sub    ecx,ecx
  4246e2:	call   0x143a:0x7adfadb5
  4246e9:	lahf   
  4246ea:	outs   dx,BYTE PTR ds:[esi]
  4246eb:	xchg   ebx,eax
  4246ec:	cmp    eax,0x99f44ebf
  4246f1:	jl     0x4246a1
  4246f3:	ins    BYTE PTR es:[edi],dx
  4246f4:	cmp    BYTE PTR [ebx+0x14bf623],ah
  4246fa:	add    al,0x34
  4246fc:	loop   0x424721
  4246fe:	scas   eax,DWORD PTR es:[edi]
  4246ff:	and    ch,BYTE PTR [edi+0x798ea897]
  424705:	add    dl,BYTE PTR [edi+edx*1]
  424708:	sbb    eax,0xc282f252
  42470d:	test   al,0xb3
  42470f:	mov    edx,0x3a666212
  424714:	inc    esp
  424715:	dec    esp
  424716:	mov    ebx,0x31272cd3
  42471b:	repnz ds clc 
  42471e:	xor    eax,0xb11ad424
  424723:	fiadd  WORD PTR [edx]
  424725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424726:	es cmp eax,0xe91ae900
  42472c:	xchg   ecx,eax
  42472d:	and    cl,BYTE PTR [edx]
  42472f:	dec    edi
  424730:	(bad)  
  424732:	rcl    BYTE PTR [edi],1
  424734:	clc    
  424735:	rcl    BYTE PTR [esi],1
  424737:	pop    ss
  424738:	cmp    DWORD PTR [edx],eax
  42473a:	jbe    0x4246c7
  42473c:	dec    esi
  42473d:	mov    ds:0x4de4c489,al
  424742:	ret    
  424743:	ror    DWORD PTR [edx+0x7a],1
  424746:	sti    
  424747:	push   ds
  424748:	dec    ebx
  424749:	in     al,dx
  42474a:	sub    ah,al
  42474c:	imul   eax,DWORD PTR [eax],0x3df54849
  424752:	and    al,BYTE PTR [eax-0x6c]
  424755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424756:	sub    al,bl
  424758:	std    
  424759:	and    al,0xf5
  42475b:	xor    bl,al
  42475d:	or     esi,DWORD PTR [eax+0x5a17f6ba]
  424763:	nop
  424764:	(bad)  
  424766:	inc    eax
  424767:	outs   dx,BYTE PTR ds:[esi]
  424768:	iret   
  424769:	pop    edi
  42476a:	mov    eax,ebx
  42476c:	loopne 0x424703
  42476e:	push   ebp
  42476f:	jo     0x42471a
  424771:	mov    ?,WORD PTR [ecx+0x50bc4be7]
  424777:	(bad)  
  424779:	fdivr  DWORD PTR [ecx]
  42477b:	jecxz  0x4247df
  42477d:	call   0x2ff8d46e
  424782:	jl     0x424789
  424784:	fisttp QWORD PTR [edx+0x11]
  424787:	arpl   WORD PTR [ebx],dx
  424789:	outs   dx,DWORD PTR ds:[esi]
  42478a:	pop    ebx
  42478b:	in     eax,dx
  42478c:	cwde   
  42478d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42478e:	nop
  42478f:	inc    edx
  424790:	jp     0x424737
  424792:	or     BYTE PTR [eax],al
  424794:	mov    DWORD PTR ds:0x4374680,0x898e8e49
  42479e:	lods   al,BYTE PTR ds:[esi]
  42479f:	push   es
  4247a0:	stc    
  4247a1:	mov    al,ds:0x9cb1ebc3
  4247a6:	stos   BYTE PTR es:[edi],al
  4247a7:	sbb    dl,cl
  4247a9:	sub    BYTE PTR [ebp+0x67c3b344],dh
  4247af:	(bad)  
  4247b0:	stc    
  4247b1:	or     bh,al
  4247b3:	sub    eax,0x8fa6830d
  4247b8:	push   0x569031b7
  4247bd:	cmp    eax,0x23765730
  4247c2:	mov    cl,0x59
  4247c4:	jo     0xa60ab063
  4247ca:	xchg   esi,eax
  4247cb:	xchg   BYTE PTR [eax-0xec6cfc1],al
  4247d1:	adc    al,BYTE PTR [ecx+0x3b]
  4247d4:	jne    0x424831
  4247d6:	pop    esi
  4247d7:	mov    WORD PTR [ebx-0x64adad19],fs
  4247dd:	jno    0x4247db
  4247df:	sbb    eax,0xb1762ab9
  4247e4:	xor    eax,0x341d8ec1
  4247e9:	xor    al,0xbc
  4247eb:	jnp    0x42485f
  4247ed:	mov    al,ds:0xd0874e94
  4247f2:	cmp    bl,BYTE PTR [esi-0x3b]
  4247f5:	or     DWORD PTR [ebx-0x260447ee],ebp
  4247fb:	imul   ebp,DWORD PTR [eax+edx*8-0x4da23347],0xffffffc2
  424803:	push   eax
  424804:	inc    ebp
  424805:	rcl    bl,cl
  424807:	sahf   
  424808:	imul   ebp,DWORD PTR [esi-0x6f],0x2b0aa14
  42480f:	fld    DWORD PTR [esi]
  424811:	sahf   
  424812:	jmp    0xf8841e8a
  424817:	clc    
  424818:	and    eax,0x316bcb0d
  42481d:	mov    edi,DWORD PTR [ebp+0x1fc9b2f6]
  424823:	out    dx,eax
  424824:	push   edx
  424825:	shl    dl,1
  424827:	(bad)  [ecx+0x24c917b3]
  42482d:	and    al,0x8e
  42482f:	xchg   ecx,eax
  424830:	mov    al,0x64
  424832:	pushf  
  424833:	jp     0x4247c3
  424835:	(bad)  
  424836:	rol    BYTE PTR [ebp-0x64cb2870],cl
  42483c:	jmp    0x59ca:0x9881c1a6
  424843:	mov    DWORD PTR [edx],edx
  424845:	test   al,0x14
  424847:	dec    ebx
  424848:	(bad)  [edi-0x7e83206c]
  42484e:	or     DWORD PTR [ebx+ebx*2-0x43],ecx
  424852:	mov    ch,0x16
  424854:	test   al,0xcb
  424856:	mov    ch,0x1a
  424858:	js     0x42481d
  42485a:	push   edi
  42485b:	push   ebp
  42485c:	inc    eax
  42485d:	ret    
  42485e:	aaa    
  42485f:	lahf   
  424860:	iret   
  424861:	xchg   ecx,eax
  424862:	xchg   DWORD PTR [esi+edi*4+0x20228a22],edx
  424869:	mov    WORD PTR [edx+ecx*4+0x5a],ds
  42486d:	shl    DWORD PTR [ecx-0x36f22028],cl
  424873:	in     eax,dx
  424874:	inc    edi
  424875:	lods   eax,DWORD PTR ds:[esi]
  424876:	cli    
  424877:	out    dx,al
  424878:	repnz gs pop ebx
  42487b:	jne    0x42480c
  42487d:	out    dx,eax
  42487e:	(bad)  
  42487f:	fcmovu st,st(1)
  424881:	xor    BYTE PTR [eax],0x6f
  424884:	ret    0x1d58
  424887:	stos   DWORD PTR es:[edi],eax
  424888:	enter  0x17da,0x77
  42488c:	pop    ecx
  42488d:	add    dh,bl
  42488f:	mov    ds:0x9f0b98,al
  424894:	mov    DWORD PTR [edi-0x6e],esp
  424897:	mov    ebx,0xcf250435
  42489c:	lds    esi,FWORD PTR [ecx+0x57665e26]
  4248a2:	push   cs
  4248a3:	sti    
  4248a4:	mov    al,ds:0xea95f807
  4248a9:	xchg   esp,eax
  4248aa:	and    eax,0xea55cd85
  4248af:	test   DWORD PTR [ecx-0x45797976],edx
  4248b5:	mov    cs,WORD PTR [eax+0x3f]
  4248b8:	dec    eax
  4248b9:	int    0x32
  4248bb:	(bad)  
  4248bc:	cmp    DWORD PTR [eax],0x7f96d0fb
  4248c2:	xchg   ebp,eax
  4248c3:	push   ecx
  4248c4:	pop    es
  4248c5:	push   eax
  4248c6:	xchg   DWORD PTR [ecx],edx
  4248c8:	fcomp  DWORD PTR [esi-0x56ce08a4]
  4248ce:	mov    ebp,0x5a09865c
  4248d3:	xor    al,0xf6
  4248d5:	add    ebp,DWORD PTR [esi-0x22]
  4248d8:	imul   esi,DWORD PTR [ecx],0x8cda8bcf
  4248de:	dec    ecx
  4248df:	jno    0x4248bd
  4248e1:	push   edi
  4248e2:	dec    esi
  4248e3:	push   0x255efaca
  4248e8:	add    eax,0xd6bf69b
  4248ed:	xor    BYTE PTR [ebx],dh
  4248ef:	stos   BYTE PTR es:[edi],al
  4248f0:	jo     0x42489d
  4248f2:	ss dec esp
  4248f4:	inc    ebx
  4248f5:	adc    cl,BYTE PTR [esi+ecx*1+0x4ae61801]
  4248fc:	hlt    
  4248fd:	fs jbe 0x4248dc
  424900:	push   es
  424901:	mov    ebp,0x9e4ab03d
  424906:	xchg   ebx,eax
  424907:	mov    ds:0xae27ab75,al
  42490c:	test   BYTE PTR ds:0x9eb1e23b,0x3a
  424913:	inc    edx
  424914:	int    0xd0
  424916:	adc    DWORD PTR ss:[ecx-0x6a06d1de],ebx
  42491d:	xchg   ebx,eax
  42491e:	mov    ebx,0xf55d6c1f
  424923:	inc    edx
  424924:	in     al,0x91
  424926:	repz fptan 
  424929:	pop    ecx
  42492a:	nop
  42492b:	dec    edx
  42492c:	rcl    DWORD PTR ds:0x6c35b3dc,0x98
  424933:	stc    
  424934:	fimul  DWORD PTR [ebx+0x61b29c4a]
  42493a:	stos   DWORD PTR es:[edi],eax
  42493b:	cwde   
  42493c:	repz das 
  42493e:	stos   BYTE PTR es:[edi],al
  42493f:	adc    BYTE PTR [edi+0x31],dl
  424942:	and    DWORD PTR [ebx],edx
  424944:	adc    eax,0x17dae945
  424949:	mov    eax,ds:0x692db5b5
  42494e:	add    dl,BYTE PTR [ebx+0x64]
  424951:	(bad)
  424954:	and    eax,0x56c81d50
  424959:	cs retf 
  42495b:	in     al,dx
  42495c:	aaa    
  42495d:	sbb    edi,DWORD PTR [edx+0x3b7a308]
  424963:	sub    ax,0xf63c
  424967:	sbb    dl,BYTE PTR [esi]
  424969:	(bad)  
  42496a:	inc    edi
  42496b:	lods   eax,DWORD PTR ds:[esi]
  42496c:	mov    esp,0x165436db
  424971:	inc    esi
  424972:	xchg   DWORD PTR [esi-0x70],esp
  424975:	ins    DWORD PTR es:[edi],dx
  424976:	jle    0x42493d
  424978:	aam    0x4a
  42497a:	test   al,0x9a
  42497c:	add    BYTE PTR [eax],dh
  42497e:	xor    al,0x7d
  424980:	cmp    eax,0x735b9709
  424985:	add    eax,0x5ea287bc
  42498a:	ret    
  42498b:	fldenv [edi+0x2]
  42498e:	xchg   BYTE PTR [edi+0x3a60f97f],dl
  424994:	dec    esp
  424995:	fmul   QWORD PTR [edi-0x3b]
  424998:	pop    edx
  424999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42499a:	sbb    eax,0x94a6f1d0
  42499f:	(bad)  
  4249a0:	hlt    
  4249a1:	pop    es
  4249a2:	dec    esi
  4249a3:	push   cs
  4249a4:	sub    BYTE PTR [eax+ebp*8-0x18],ah
  4249a8:	sbb    al,0xf1
  4249aa:	rcl    DWORD PTR [eax+0x60698f09],1
  4249b0:	in     al,dx
  4249b1:	int    0x90
  4249b3:	mov    ebx,0x990b94e9
  4249b8:	sahf   
  4249b9:	pop    edx
  4249ba:	scas   al,BYTE PTR es:[edi]
  4249bb:	lock sub ecx,DWORD PTR [eax+0x3bc686fb]
  4249c2:	and    al,0xef
  4249c4:	aam    0x7a
  4249c6:	inc    esi
  4249c7:	leave  
  4249c8:	shr    cl,1
  4249ca:	arpl   WORD PTR [edi],ax
  4249cc:	lea    edi,[esi-0x712118fb]
  4249d2:	jle    0x424980
  4249d4:	dec    esi
  4249d5:	minps  xmm2,XMMWORD PTR [edi-0x23abf42c]
  4249dc:	adc    BYTE PTR [edx-0x4b203657],ah
  4249e2:	sbb    ch,BYTE PTR [ecx+ebx*2]
  4249e5:	out    dx,eax
  4249e6:	loope  0x424a3f
  4249e8:	inc    esi
  4249e9:	mov    cs,WORD PTR [ebx]
  4249eb:	icebp  
  4249ec:	inc    ecx
  4249ed:	leave  
  4249ee:	loope  0x424a62
  4249f0:	push   es
  4249f1:	mov    ch,0x3e
  4249f3:	stc    
  4249f4:	dec    ebx
  4249f5:	add    ah,dl
  4249f7:	adc    BYTE PTR [ecx-0x67],0x8d
  4249fb:	sbb    al,0x36
  4249fd:	in     eax,0x10
  4249ff:	clc    
  424a00:	(bad)  
  424a02:	inc    edi
  424a03:	iret   
  424a04:	mov    ch,0x35
  424a06:	dec    ebp
  424a07:	pusha  
  424a08:	in     al,dx
  424a09:	dec    eax
  424a0a:	mov    bh,0xc3
  424a0c:	sbb    bl,BYTE PTR [esi]
  424a0e:	pop    ebp
  424a0f:	and    al,0x97
  424a11:	sbb    BYTE PTR [edi+ecx*2],cl
  424a14:	je     0x424a0e
  424a16:	mov    eax,ds:0x397edf58
  424a1b:	fistp  DWORD PTR [ebx+0xdc544ed]
  424a21:	sbb    edi,DWORD PTR [ecx-0xbb6a12c]
  424a27:	in     al,dx
  424a28:	mov    fs,WORD PTR [ecx]
  424a2a:	xchg   DWORD PTR es:[edi+0x117ac02e],esp
  424a31:	mov    bl,cl
  424a33:	popa   
  424a34:	add    al,0xc8
  424a36:	gs mov eax,0x6b87298a
  424a3c:	cmp    al,0xb0
  424a3e:	stos   DWORD PTR es:[edi],eax
  424a3f:	mov    eax,ds:0x94bd1456
  424a44:	test   eax,0xbdad2ff0
  424a49:	dec    edx
  424a4a:	dec    esi
  424a4b:	mov    eax,0xc468bb44
  424a50:	add    DWORD PTR fs:[esp+ecx*4],edi
  424a54:	pop    ss
  424a55:	and    esp,DWORD PTR [ebx+0x28ba041e]
  424a5b:	mov    esp,0x62ad2e12
  424a60:	cmc    
  424a61:	adc    DWORD PTR [ebx+0x31700f93],esp
  424a67:	aam    0x4f
  424a69:	stos   BYTE PTR es:[edi],al
  424a6a:	out    0x62,eax
  424a6c:	shl    DWORD PTR [edx+0x48c1d173],0x51
  424a73:	mov    esp,DWORD PTR [edi+0x51a0c642]
  424a79:	dec    eax
  424a7a:	cdq    
  424a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a7c:	fimul  DWORD PTR [edx-0x22]
  424a7f:	push   ebx
  424a80:	les    ecx,FWORD PTR [ebp-0x214dd13f]
  424a86:	outs   dx,DWORD PTR ds:[esi]
  424a87:	fldenv [ecx-0xd76967f]
  424a8d:	lods   eax,DWORD PTR ds:[esi]
  424a8e:	mov    WORD PTR [edx+0x63],fs
  424a91:	xchg   ecx,eax
  424a92:	jb     0x424af3
  424a94:	popa   
  424a95:	lahf   
  424a96:	fadd   DWORD PTR [edx]
  424a98:	cmp    al,BYTE PTR [edx+0x7466ef5]
  424a9e:	inc    ebx
  424a9f:	aas    
  424aa0:	(bad)  
  424aa1:	and    DWORD PTR [edx+0x4a],ebx
  424aa4:	or     BYTE PTR [edi-0x5e8c1d0e],al
  424aaa:	jge    0x424ad8
  424aac:	add    BYTE PTR [eax-0x30],al
  424aaf:	pushf  
  424ab0:	inc    ebp
  424ab1:	cmp    bh,BYTE PTR ds:0x4adfd04e
  424ab7:	sbb    al,0xdf
  424ab9:	xor    BYTE PTR [eax-0x5efe4055],0x52
  424ac0:	inc    esi
  424ac1:	in     eax,0xfb
  424ac3:	mov    edx,0x9ec8f624
  424ac8:	outs   dx,BYTE PTR ds:[esi]
  424ac9:	outs   dx,BYTE PTR ds:[esi]
  424aca:	rol    BYTE PTR [esi+0x4ee9978b],0x18
  424ad1:	or     eax,0x70d05d00
  424ad6:	packssdw mm3,QWORD PTR [ebp+0x5d]
  424ada:	(bad)  
  424adc:	or     ah,0x32
  424adf:	fucomi st,st(1)
  424ae1:	xchg   DWORD PTR [esi],eax
  424ae3:	aaa    
  424ae4:	outs   dx,DWORD PTR ds:[esi]
  424ae5:	push   0xffffffd2
  424ae7:	inc    ebx
  424ae8:	mov    cl,0x5c
  424aea:	mov    edi,0x47c1553d
  424aef:	arpl   WORD PTR ss:[edi+0x2c],sp
  424af3:	inc    eax
  424af4:	push   es
  424af5:	jp     0x424ab8
  424af7:	mov    ebp,0xa61c0fab
  424afc:	mov    ecx,ecx
  424afe:	or     eax,edi
  424b00:	add    eax,0x4ec83fd2
  424b05:	(bad)  
  424b06:	hlt    
  424b07:	mov    ebp,0x5ef0689f
  424b0c:	sub    edi,DWORD PTR ds:0x98184e99
  424b12:	test   bl,dl
  424b14:	push   edi
  424b15:	push   esp
  424b16:	push   cs
  424b17:	aam    0x34
  424b19:	adc    al,0x6c
  424b1b:	adc    cl,cl
  424b1d:	mov    edx,0x4e3b4f8
  424b22:	dec    eax
  424b23:	xchg   edx,eax
  424b24:	push   0xffffff83
  424b26:	pop    es
  424b27:	and    esp,ebp
  424b29:	add    edi,DWORD PTR [ebp+0x78]
  424b2c:	inc    edx
  424b2d:	mov    bl,0xa8
  424b2f:	jecxz  0x424aee
  424b31:	jmp    0x9bcd:0x9f234d5c
  424b38:	mov    ebx,0xeaca1fb9
  424b3d:	imul   esp,ebx,0x3b2dcb1c
  424b43:	repz (bad) 
  424b45:	adc    DWORD PTR [ebp+eax*4+0xc],esi
  424b49:	xor    BYTE PTR [esi+0x47380840],cl
  424b4f:	loope  0x424b85
  424b51:	fistp  QWORD PTR [esi]
  424b53:	push   ss
  424b54:	pop    esp
  424b55:	cmp    ah,0x28
  424b58:	pop    ebx
  424b59:	or     BYTE PTR [ecx-0x22d14643],0x5
  424b60:	loopne 0x424b07
  424b62:	in     al,dx
  424b63:	dec    ebp
  424b64:	inc    edi
  424b65:	dec    esp
  424b66:	push   edx
  424b67:	xor    eax,0xc625c773
  424b6c:	rol    ah,cl
  424b6e:	pop    esi
  424b6f:	shl    DWORD PTR [edi-0x3d81e5eb],1
  424b75:	xor    eax,0x6ca44f73
  424b7a:	fsubr  st,st(2)
  424b7c:	fsubp  st(3),st
  424b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b7f:	or     al,0x23
  424b81:	(bad)  
  424b82:	les    eax,FWORD PTR [edx+0xf19be42]
  424b88:	mov    bl,0x96
  424b8a:	mov    dl,0xc9
  424b8c:	pop    esi
  424b8d:	lods   al,BYTE PTR ds:[esi]
  424b8e:	xor    ch,BYTE PTR [ebp+eax*4-0x80]
  424b92:	out    dx,al
  424b93:	fnstcw WORD PTR [edi+0x77]
  424b96:	data16 gs cld 
  424b99:	jbe    0x424b30
  424b9b:	jg     0x424b45
  424b9d:	jmp    0xda2d:0x83f2e93f
  424ba4:	mov    esi,0x16539ea0
  424ba9:	jp     0x424b7a
  424bab:	fcmovnu st,st(7)
  424bad:	xlat   BYTE PTR ds:[ebx]
  424bae:	ja     0x424b53
  424bb0:	dec    esp
  424bb1:	ss inc eax
  424bb3:	cmp    DWORD PTR [esi-0x67],eax
  424bb6:	push   eax
  424bb7:	add    ebp,DWORD PTR [ecx]
  424bb9:	and    BYTE PTR [eax-0x5d0deffa],dh
  424bbf:	lock bound esp,QWORD PTR [edx-0x14afe208]
  424bc6:	test   DWORD PTR [ebp+0x4aecff9f],ebp
  424bcc:	mov    edi,0x642672a7
  424bd1:	xchg   esi,eax
  424bd2:	add    eax,0xca0fc810
  424bd7:	mov    eax,0xbbceb61
  424bdc:	out    dx,al
  424bdd:	adc    bl,bh
  424bdf:	mov    ebp,0xb4ae9758
  424be4:	cs hlt 
  424be6:	or     DWORD PTR [eax+0x3f],0x7df73f7a
  424bed:	test   eax,0xa714541f
  424bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bf3:	inc    ecx
  424bf4:	xchg   ecx,eax
  424bf5:	jmp    0x2737:0xb1c49ce5
  424bfc:	mov    cl,0xd8
  424bfe:	pop    ss
  424bff:	test   DWORD PTR [ebx+0x41aa6aa0],eax
  424c05:	push   ds
  424c06:	out    0x32,al
  424c08:	addr16 xor eax,0xa7b9b53e
  424c0e:	and    DWORD PTR [ebx],ebp
  424c10:	jge    0x424bb7
  424c12:	cmp    al,0x27
  424c14:	xchg   DWORD PTR [ebx+0x450353d6],esi
  424c1a:	iret   
  424c1b:	push   edx
  424c1c:	dec    esp
  424c1d:	add    ecx,DWORD PTR [ecx+0x12]
  424c20:	xchg   DWORD PTR [edx-0x5c],esi
  424c23:	sbb    DWORD PTR ds:[eax],ebx
  424c26:	sub    eax,0x86b35b8a
  424c2b:	mov    esp,0x17c49f1c
  424c30:	xchg   ebp,eax
  424c31:	out    0x6b,al
  424c33:	rcl    BYTE PTR [ebx+0x3c],cl
  424c36:	mov    dl,al
  424c38:	test   eax,0xd6701bdb
  424c3d:	mov    ebx,0xd93cb314
  424c42:	adc    esp,esp
  424c44:	pusha  
  424c45:	sahf   
  424c46:	sbb    BYTE PTR [ebx+eiz*2+0x7002d7a0],dh
  424c4d:	icebp  
  424c4e:	lahf   
  424c4f:	pop    ebp
  424c50:	pop    es
  424c51:	inc    edi
  424c52:	int    0x83
  424c54:	cs aas 
  424c56:	mov    ch,0xd3
  424c58:	ret    
  424c59:	fisub  WORD PTR [ebp-0x4f03c406]
  424c5f:	sahf   
  424c60:	cs cld 
  424c62:	inc    edi
  424c63:	push   edx
  424c64:	jmp    0x427f:0x5f2d6100
  424c6b:	nop
  424c6c:	arpl   sp,cx
  424c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c6f:	mov    cs,edx
  424c71:	push   edx
  424c72:	icebp  
  424c73:	sti    
  424c74:	mov    esi,DWORD PTR [edi]
  424c76:	xor    BYTE PTR [ebx],ah
  424c78:	inc    eax
  424c79:	popf   
  424c7a:	cwde   
  424c7b:	test   eax,0x269bca85
  424c80:	imul   ecx
  424c82:	retf   
  424c83:	mov    esi,0x6c62a063
  424c88:	mov    ds:0x6a8ddd59,eax
  424c8d:	push   ebp
  424c8e:	or     al,0x65
  424c90:	mov    dh,0xfc
  424c92:	lahf   
  424c93:	mov    ah,0xb2
  424c95:	repz jle 0x424cdf
  424c98:	pusha  
  424c99:	mov    esi,0x609c66d0
  424c9e:	sar    DWORD PTR [esp+ecx*4],1
  424ca1:	idiv   BYTE PTR [esi]
  424ca3:	xchg   edi,eax
  424ca4:	mov    ebp,0x59da82a
  424ca9:	int3   
  424caa:	pop    esi
  424cab:	aas    
  424cac:	jb     0x424d1d
  424cae:	fdivrp st(7),st
  424cb0:	dec    eax
  424cb1:	ret    0xb811
  424cb4:	inc    ecx
  424cb5:	mov    ah,0x3d
  424cb7:	jl     0x424cdc
  424cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cba:	adc    al,0xf3
  424cbc:	and    ebx,DWORD PTR [ebx+0x16]
  424cbf:	push   ss
  424cc0:	jg     0x424c54
  424cc2:	sub    ch,0xab
  424cc5:	sub    al,0x96
  424cc7:	xchg   esp,eax
  424cc8:	mov    ebx,0xd14d7505
  424ccd:	div    DWORD PTR [esi-0x45ec54ca]
  424cd3:	(bad)
  424cd6:	(bad)  [esi+ecx*1-0x7ca40c1a]
  424cdd:	mov    edi,0x11f3e8c6
  424ce2:	and    al,0x65
  424ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ce5:	lods   eax,DWORD PTR ds:[esi]
  424ce6:	mov    al,0x94
  424ce8:	mov    esp,0x7f7de03b
  424ced:	inc    ebp
  424cee:	xchg   ebp,eax
  424cef:	cwde   
  424cf0:	add    ah,ch
  424cf2:	adc    DWORD PTR [eax],0x10
  424cf5:	adc    DWORD PTR [edi*1+0x6150e2a8],edi
  424cfc:	jns    0x424d13
  424cfe:	cs aaa 
  424d00:	push   ecx
  424d01:	sti    
  424d02:	popf   
  424d03:	fisub  DWORD PTR [esp+edx*2]
  424d06:	jmp    0x9a69:0xa89a87f
  424d0d:	jg     0x424d2a
  424d0f:	imul   ebp,DWORD PTR [eax-0x33],0x2b632209
  424d16:	pop    ebp
  424d17:	ss arpl dx,dx
  424d1a:	out    dx,eax
  424d1b:	(bad)  
  424d1c:	scas   al,BYTE PTR es:[edi]
  424d1d:	push   es
  424d1e:	xchg   ebx,eax
  424d1f:	lea    ebx,[esi-0x6a]
  424d22:	cdq    
  424d23:	adc    BYTE PTR [esi-0x23767d90],dl
  424d29:	(bad)  
  424d2a:	pop    edx
  424d2b:	push   es
  424d2c:	xchg   ebx,eax
  424d2d:	test   eax,0x3ad2075c
  424d32:	fwait
  424d33:	dec    ebp
  424d34:	test   al,0x90
  424d36:	dec    esi
  424d37:	mov    DWORD PTR [ebp-0x14],ebp
  424d3a:	repnz mov dh,ah
  424d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d3e:	push   ecx
  424d3f:	pop    ecx
  424d40:	sbb    bl,ch
  424d42:	and    eax,0xf3e378b3
  424d47:	sub    al,0x8
  424d49:	mov    ch,0x51
  424d4b:	cld    
  424d4c:	in     al,dx
  424d4d:	and    BYTE PTR [esi],bh
  424d4f:	ret    
  424d50:	hlt    
  424d51:	popf   
  424d52:	mov    bl,0x4b
  424d54:	xor    eax,0xc31d8aea
  424d59:	xor    eax,0xb8cbc147
  424d5e:	xchg   esp,eax
  424d5f:	mov    ebx,0xcdf44711
  424d64:	or     BYTE PTR [ebp-0x1a7a66cc],al
  424d6a:	jmp    0xf22f9f8f
  424d6f:	ret    0xc049
  424d72:	push   esp
  424d73:	sbb    al,0xd5
  424d75:	dec    esi
  424d76:	push   edi
  424d77:	pop    esp
  424d78:	pop    ebp
  424d79:	sbb    al,0x41
  424d7b:	nop
  424d7c:	sbb    al,0xbd
  424d7e:	xor    esi,DWORD PTR [eax+ecx*8+0x721bb462]
  424d85:	and    al,0x17
  424d87:	dec    ecx
  424d88:	aam    0x60
  424d8a:	mov    bh,0xe6
  424d8c:	aas    
  424d8d:	jae    0x424dac
  424d8f:	fnsave [esi]
  424d91:	(bad)  
  424d92:	fidivr DWORD PTR [ebx-0x1f3c02e9]
  424d98:	xchg   esp,eax
  424d99:	mov    WORD PTR [ebp-0x49f6720c],ss
  424d9f:	mov    esp,0xa77947f7
  424da4:	popa   
  424da5:	inc    edi
  424da6:	push   edx
  424da7:	push   0xffffffa6
  424da9:	int    0x29
  424dab:	inc    eax
  424dac:	sbb    ah,BYTE PTR [ecx+0x52107704]
  424db2:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  424db6:	(bad)  
  424db7:	mov    al,ds:0x947e6342
  424dbc:	sbb    al,0x7e
  424dbe:	ds jbe 0x424dc7
  424dc1:	pop    eax
  424dc2:	jp     0x424e1d
  424dc4:	xor    BYTE PTR [edx-0x72726538],0x79
  424dcb:	les    esi,FWORD PTR [ecx-0x11]
  424dce:	pop    esi
  424dcf:	and    DWORD PTR [edx-0xc],edx
  424dd2:	aaa    
  424dd3:	mov    ds:0x355632fc,al
  424dd8:	jno    0x424e0e
  424dda:	cli    
  424ddb:	add    BYTE PTR [ecx-0x4633101f],al
  424de1:	aas    
  424de2:	stc    
  424de3:	jmp    0x424e45
  424de5:	add    dh,BYTE PTR [esi-0x40]
  424de8:	xchg   BYTE PTR [edi],al
  424dea:	adc    edi,esp
  424dec:	push   edi
  424ded:	retf   0x88e2
  424df0:	fnsave [edi-0x49]
  424df3:	jae    0x424e64
  424df5:	outs   dx,DWORD PTR ds:[esi]
  424df6:	mov    dh,0xe9
  424df8:	mov    DWORD PTR [eax],edx
  424dfa:	xchg   ebx,eax
  424dfb:	add    BYTE PTR [esi+ecx*2-0x7f],al
  424dff:	mov    eax,0xbf5c501f
  424e04:	imul   eax,DWORD PTR [ebx+0x76aebbcc],0x671efbfd
  424e0e:	jl     0x424e12
  424e10:	pop    esi
  424e11:	mov    bl,0x84
  424e13:	std    
  424e14:	ins    DWORD PTR es:[edi],dx
  424e15:	test   BYTE PTR [edx-0x84f5131],dh
  424e1b:	es retf 0x1037
  424e1f:	mov    cl,0x11
  424e21:	fs jmp 0xb0320f70
  424e27:	lock pop ecx
  424e29:	aam    0xf2
  424e2b:	out    0x71,eax
  424e2d:	cdq    
  424e2e:	add    DWORD PTR [eax-0x2c3a5620],ecx
  424e34:	addr16 jle 0x424dcd
  424e37:	add    ebp,DWORD PTR [esi]
  424e39:	(bad)  
  424e3a:	sub    ebx,ebp
  424e3c:	pop    ebp
  424e3d:	ret    
  424e3e:	lds    eax,FWORD PTR [ebp+0x26]
  424e41:	dec    ecx
  424e42:	cs xor ebp,ecx
  424e45:	adc    al,0x4e
  424e47:	lahf   
  424e48:	and    eax,0x5a54dda2
  424e4d:	shr    DWORD PTR [edi-0x9],0xc6
  424e51:	cld    
  424e52:	shl    DWORD PTR [edi-0x25101181],1
  424e58:	lock mov bl,0xe8
  424e5b:	sbb    eax,0x7eae4cb7
  424e60:	push   edi
  424e61:	pusha  
  424e62:	lods   eax,DWORD PTR ds:[esi]
  424e63:	mov    ch,0xba
  424e65:	mov    dl,0xf2
  424e67:	cdq    
  424e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e69:	push   ebx
  424e6a:	add    BYTE PTR [esi],cl
  424e6c:	in     eax,dx
  424e6d:	adc    edx,DWORD PTR [ecx+0x6c332429]
  424e73:	push   0x426ee602
  424e78:	nop
  424e79:	cmc    
  424e7a:	push   esp
  424e7b:	addr16 icebp 
  424e7d:	xor    BYTE PTR [esi-0x7a05144f],cl
  424e83:	dec    ebx
  424e84:	and    al,BYTE PTR [ecx+0x7564d9bb]
  424e8a:	and    DWORD PTR [ebx-0x70d516a5],ecx
  424e90:	push   ebp
  424e91:	sub    al,0xa5
  424e93:	inc    eax
  424e94:	addr16 inc edi
  424e96:	addr16 dec ebx
  424e98:	mov    bh,0x28
  424e9a:	pop    edi
  424e9b:	es pop esp
  424e9d:	das    
  424e9e:	lods   eax,DWORD PTR ds:[esi]
  424e9f:	dec    esp
  424ea0:	sbb    esi,ebp
  424ea2:	jecxz  0x424f10
  424ea4:	sar    BYTE PTR [ecx-0x1d],0xe7
  424ea8:	sbb    eax,0x4376f031
  424ead:	dec    edx
  424eae:	xchg   BYTE PTR [ebp+0x4c],al
  424eb1:	jge    0x424eea
  424eb3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  424eb5:	aam    0xd0
  424eb7:	and    eax,0xddb317ca
  424ebc:	(bad)  
  424ebd:	sub    esi,edx
  424ebf:	sar    BYTE PTR [eax+0x7b],cl
  424ec2:	dec    edx
  424ec3:	jl     0x424e60
  424ec5:	(bad)  
  424ec6:	and    BYTE PTR [ebp+ebp*1+0x59],ch
  424eca:	sbb    eax,0x3fa9e1d4
  424ecf:	sbb    ah,al
  424ed1:	popa   
  424ed2:	sub    eax,0xa50bccef
  424ed7:	popa   
  424ed8:	imul   ebx,DWORD PTR [esp+ebx*4+0x11],0x53ec831a
  424ee0:	fiadd  WORD PTR [edx-0x3a452f1]
  424ee6:	mov    esi,DWORD PTR cs:[eax]
  424ee9:	pop    ebp
  424eea:	mov    esi,0x6489c2f7
  424eef:	mov    ah,0xf4
  424ef1:	dec    ebx
  424ef2:	data16 mov dh,0xfc
  424ef5:	sub    BYTE PTR [edi],ah
  424ef7:	inc    BYTE PTR [eax]
  424ef9:	mov    edi,0xa96716aa
  424efe:	adc    cl,BYTE PTR [edx-0x64]
  424f01:	push   ecx
  424f02:	loop   0x424f71
  424f04:	push   0xffffff99
  424f06:	in     eax,dx
  424f07:	sahf   
  424f08:	rcr    BYTE PTR [ecx+0x17],1
  424f0b:	fdivr  st,st(3)
  424f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f0e:	fisttp QWORD PTR [esi+ebp*2-0x61281cbe]
  424f15:	jle    0x424eeb
  424f17:	pop    esi
  424f18:	test   al,0x24
  424f1a:	aas    
  424f1b:	mul    esp
  424f1d:	cs inc ecx
  424f1f:	std    
  424f20:	mov    ebp,0x8118c253
  424f25:	loope  0x424f12
  424f27:	lds    ebp,FWORD PTR [edx]
  424f29:	pop    ds
  424f2a:	xchg   edx,eax
  424f2b:	enter  0xacad,0xd
  424f2f:	xchg   ebx,edi
  424f31:	xchg   BYTE PTR [edi+0x30a191eb],cl
  424f37:	aad    0xe9
  424f39:	repnz adc bl,cl
  424f3c:	icebp  
  424f3d:	inc    bp
  424f3f:	adc    al,BYTE PTR [edx-0x4832a5f5]
  424f45:	jae    0x424ede
  424f47:	lds    eax,FWORD PTR [ebp-0x68d25057]
  424f4d:	cmp    bh,0xc5
  424f50:	out    dx,eax
  424f51:	in     eax,dx
  424f52:	fldcw  WORD PTR [ebx+0x72]
  424f55:	jecxz  0x424f33
  424f57:	adc    DWORD PTR [eax-0x4ebfe51b],0xffffffa0
  424f5e:	cdq    
  424f5f:	or     BYTE PTR ds:0xab287239,ch
  424f65:	rcr    DWORD PTR [ebx],1
  424f67:	js     0x424f4d
  424f69:	mov    dh,0xa5
  424f6b:	dec    ecx
  424f6c:	or     ah,ah
  424f6e:	sbb    eax,0x330e9739
  424f73:	inc    eax
  424f74:	cmp    DWORD PTR [edx],ebx
  424f76:	and    ah,BYTE PTR [edx+0x65]
  424f79:	mov    esi,esp
  424f7b:	rol    DWORD PTR [edi-0x17],1
  424f7e:	fisubr WORD PTR [edx+0x530b7c1b]
  424f84:	sub    BYTE PTR [edi],dl
  424f86:	mov    bl,0x1c
  424f88:	mov    BYTE PTR [eax+0x56],cl
  424f8b:	sbb    al,0x32
  424f8d:	std    
  424f8e:	push   esp
  424f8f:	loope  0x424f6f
  424f91:	stc    
  424f92:	push   edx
  424f93:	(bad)  
  424f94:	mov    ?,WORD PTR [ebp+0x33]
  424f97:	xor    DWORD PTR [ecx],0xffffffd3
  424f9a:	in     al,0xcf
  424f9c:	push   ss
  424f9d:	jbe    0x424f67
  424f9f:	adc    al,0xf
  424fa1:	push   0xffffffa9
  424fa3:	dec    ebx
  424fa4:	fcmovnb st,st(5)
  424fa6:	rol    cl,0x45
  424fa9:	test   al,0xcb
  424fab:	(bad)  
  424fad:	fstp   QWORD PTR [ebx+0x4d]
  424fb0:	mov    ch,0x45
  424fb2:	xchg   ebx,eax
  424fb3:	push   ecx
  424fb4:	and    eax,0x937e8a35
  424fb9:	xchg   edi,eax
  424fba:	mov    edx,0x8509adc1
  424fbf:	mov    WORD PTR [eax-0x2104439d],es
  424fc5:	loopne 0x424f68
  424fc7:	add    BYTE PTR [ebp-0x50],dl
  424fca:	adc    eax,0x449afae
  424fcf:	out    dx,eax
  424fd0:	dec    esp
  424fd1:	nop
  424fd2:	ret    0xc9a0
  424fd5:	inc    ebp
  424fd6:	pusha  
  424fd7:	call   0xbce6:0x5d01d781
  424fde:	aad    0x90
  424fe0:	mov    ebp,0x2a46d511
  424fe5:	cmp    ah,BYTE PTR [esi+edx*2]
  424fe8:	cmp    BYTE PTR [ecx],dh
  424fea:	ror    DWORD PTR [esi+esi*1+0x7abc90fe],1
  424ff1:	jnp    0x425036
  424ff3:	add    edx,eax
  424ff5:	push   0x4aaa444b
  424ffa:	xor    DWORD PTR [edi],ecx
  424ffc:	and    al,0x4a
  424ffe:	or     ebp,eax
  425000:	adc    eax,0xf0fbc29b
  425005:	jmp    0x424ff7
  425007:	imul   esi,ebp,0x41
  42500a:	int    0xa1
  42500c:	and    ecx,esp
  42500e:	mov    dl,0xbc
  425010:	outs   dx,DWORD PTR ds:[esi]
  425011:	mov    esp,0xabdefd3a
  425016:	mov    edi,0x2cb158fa
  42501b:	xchg   edi,eax
  42501c:	jns    0x424fec
  42501e:	call   DWORD PTR [edx+0xb12677]
  425024:	jge    0x42504c
  425026:	and    esp,DWORD PTR [edi+0x53]
  425029:	mov    DWORD PTR [esi],ebp
  42502b:	or     DWORD PTR [esi+0xf],ebp
  42502e:	inc    eax
  42502f:	pushf  
  425030:	adc    al,0xad
  425032:	adc    al,0xa
  425034:	lods   eax,DWORD PTR ds:[esi]
  425035:	jmp    0xb4eb:0xc47bb546
  42503c:	jne    0x42504c
  42503e:	popf   
  42503f:	aaa    
  425040:	sbb    BYTE PTR [esi+0x2b],ah
  425043:	jle    0x425010
  425045:	aaa    
  425046:	inc    esi
  425047:	mov    al,ds:0x41b7aeb6
  42504c:	not    BYTE PTR [edi]
  42504e:	sub    al,0x90
  425050:	dec    eax
  425051:	imul   ebp,DWORD PTR ds:0xe18c5d36,0x6b
  425058:	ja     0x4250b2
  42505a:	jae    0x42502d
  42505c:	ins    BYTE PTR es:[edi],dx
  42505d:	sbb    eax,DWORD PTR [edx+ebp*4]
  425060:	cvtdq2ps xmm0,xmm1
  425063:	push   es
  425064:	cli    
  425065:	xchg   esi,eax
  425066:	inc    esp
  425067:	sbb    bh,bl
  425069:	inc    ecx
  42506a:	fstp   QWORD PTR [esi+0x3f8df5e4]
  425070:	inc    ecx
  425071:	add    ch,al
  425073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425074:	mov    cl,0x97
  425076:	pushf  
  425077:	pushf  
  425078:	leave  
  425079:	push   0x139f7d33
  42507e:	pusha  
  42507f:	mov    esp,0x94043a60
  425084:	xchg   esi,eax
  425085:	jge    0x425064
  425087:	xchg   edi,eax
  425088:	jg     0x425033
  42508a:	je     0x4250f0
  42508c:	not    edi
  42508e:	ds xchg cl,dh
  425091:	nop
  425092:	fcmovbe st,st(3)
  425094:	mov    ah,0x83
  425096:	daa    
  425097:	cmp    al,0xd7
  425099:	sti    
  42509a:	std    
  42509b:	cdq    
  42509c:	add    DWORD PTR [ebx+eiz*1],edx
  42509f:	adc    al,0xcd
  4250a1:	cmp    esi,esp
  4250a3:	adc    eax,0xdf1ab42a
  4250a8:	enter  0xffae,0xf6
  4250ac:	les    esi,FWORD PTR [edi+0x457c0fcb]
  4250b2:	xlat   BYTE PTR ds:[ebx]
  4250b3:	imul   edx,edi,0xbb445423
  4250b9:	sbb    eax,0xc38be15e
  4250be:	and    DWORD PTR [edx],ecx
  4250c0:	nop
  4250c1:	cdq    
  4250c2:	add    ecx,DWORD PTR [edi+0x46d7b63]
  4250c8:	jecxz  0x4250d2
  4250ca:	xchg   BYTE PTR fs:[esi+0x38],dh
  4250ce:	add    ch,BYTE PTR [eax+edi*1-0x58e1962b]
  4250d5:	rcl    BYTE PTR [edx],1
  4250d7:	dec    ecx
  4250d8:	jl     0x425101
  4250da:	xor    BYTE PTR [esi],dl
  4250dc:	sbb    al,0x12
  4250de:	lea    edx,[eax-0x71]
  4250e1:	mov    edx,0x9c9d58b7
  4250e6:	or     BYTE PTR [edx+0x43],dl
  4250e9:	jbe    0x42513b
  4250eb:	sbb    DWORD PTR [eax-0x1f6065df],ebp
  4250f1:	(bad)  
  4250f2:	pop    esi
  4250f3:	int3   
  4250f4:	xchg   esp,eax
  4250f5:	fsub   st,st(5)
  4250f7:	inc    esp
  4250f8:	jno    0x4250e2
  4250fa:	xchg   dh,dl
  4250fc:	sar    BYTE PTR [edi-0x6f],1
  4250ff:	into   
  425100:	aad    0x19
  425102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425103:	lods   al,BYTE PTR ds:[esi]
  425104:	xchg   esi,eax
  425105:	ja     0x425181
  425107:	mov    eax,0x4c21b766
  42510c:	jle    0x4250b5
  42510e:	pop    esp
  42510f:	call   0x7847:0xc40c321f
  425116:	add    eax,0xfead0450
  42511b:	out    dx,eax
  42511c:	stos   DWORD PTR es:[edi],eax
  42511d:	push   ss
  42511e:	ins    DWORD PTR es:[edi],dx
  42511f:	sahf   
  425120:	loop   0x4250c6
  425122:	popa   
  425123:	dec    ebx
  425124:	push   cs
  425125:	pop    edi
  425126:	dec    eax
  425127:	mov    esi,ebp
  425129:	pop    ss
  42512a:	lock das 
  42512c:	jnp    0x42510c
  42512e:	imul   edi,ebp,0xbaf631f
  425134:	inc    ebp
  425135:	mov    ds:0x65b00991,al
  42513a:	sub    al,0x88
  42513c:	in     al,dx
  42513d:	out    dx,eax
  42513e:	adc    BYTE PTR [ebx+0x4c262143],cl
  425144:	das    
  425145:	dec    ebp
  425146:	fs xor al,0x38
  425149:	addr16 add eax,0x338a2d50
  42514f:	(bad)  
  425150:	adc    ebx,ecx
  425152:	pop    esi
  425153:	mov    ebp,ecx
  425155:	mov    ebp,0xf5463f1c
  42515a:	dec    esp
  42515b:	hlt    
  42515c:	or     al,0xb5
  42515e:	rol    DWORD PTR [ebx+0x51],1
  425161:	ins    DWORD PTR es:[edi],dx
  425162:	mov    ecx,0xc457434e
  425167:	xchg   edx,eax
  425168:	jo     0x4250ee
  42516a:	shl    DWORD PTR [eax],1
  42516c:	neg    BYTE PTR [edi+0x42851b29]
  425172:	push   eax
  425173:	xlat   BYTE PTR ds:[ebx]
  425174:	stos   BYTE PTR es:[edi],al
  425175:	push   ecx
  425176:	in     al,dx
  425177:	cmc    
  425178:	aaa    
  425179:	sub    ch,BYTE PTR [edi+0x41db5b66]
  42517f:	les    ecx,FWORD PTR [edx-0x35]
  425182:	call   0x137cd4e
  425187:	mov    ?,WORD PTR [eax]
  425189:	js     0x425134
  42518b:	leave  
  42518c:	xlat   BYTE PTR ds:[ebx]
  42518d:	and    ecx,DWORD PTR ss:[ebx+0x6f]
  425191:	jbe    0x425196
  425193:	add    esp,eax
  425195:	and    BYTE PTR [esi],bh
  425197:	xchg   edx,eax
  425198:	cwde   
  425199:	or     al,0xc0
  42519b:	mov    ebp,0x61f57eb4
  4251a0:	jb     0x4251c7
  4251a2:	out    0xd2,eax
  4251a4:	sar    BYTE PTR [esi],cl
  4251a6:	xchg   BYTE PTR [ecx],al
  4251a8:	inc    edi
  4251a9:	aam    0xff
  4251ab:	push   cs
  4251ac:	shl    DWORD PTR [ebx-0x55],1
  4251af:	mov    cl,0xb9
  4251b1:	mov    ah,BYTE PTR [ecx+edi*1+0x566b6635]
  4251b8:	inc    DWORD PTR [ecx+0x612f7795]
  4251be:	ror    BYTE PTR [ecx-0x1b3878e1],1
  4251c4:	and    edi,DWORD PTR [esi+esi*2]
  4251c7:	lahf   
  4251c8:	daa    
  4251c9:	imul   eax,DWORD PTR [ecx-0x6c],0x5b
  4251cd:	scas   al,BYTE PTR es:[edi]
  4251ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251cf:	ja     0x42515a
  4251d1:	mov    al,ds:0xf6674c38
  4251d6:	test   BYTE PTR [ecx+0x4cd2b9b7],ch
  4251dc:	loopne 0x425234
  4251de:	scas   eax,DWORD PTR es:[edi]
  4251df:	es stos BYTE PTR es:[edi],al
  4251e1:	jg     0x42522a
  4251e3:	fcmovnbe st,st(5)
  4251e5:	pop    eax
  4251e6:	push   0xffffffb3
  4251e8:	ret    0xfdf7
  4251eb:	popa   
  4251ec:	pushf  
  4251ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251ee:	in     al,0xb7
  4251f0:	cmp    al,0x46
  4251f2:	and    BYTE PTR [bp+si],ah
  4251f5:	mov    ebx,0x458ae202
  4251fa:	aaa    
  4251fb:	aam    0x72
  4251fd:	xchg   edi,eax
  4251fe:	mov    DWORD PTR [esi],esp
  425200:	mov    dl,0x6
  425202:	gs cdq 
  425204:	push   0xaefd5d17
  425209:	gs nop
  42520b:	adc    al,0xd2
  42520d:	out    0x6c,eax
  42520f:	mov    ah,BYTE PTR [edx-0x7216aa53]
  425215:	cmp    ebx,DWORD PTR ds:[ebx-0x45]
  425219:	cmp    DWORD PTR [esp],0x2031066a
  425220:	nop
  425221:	push   ebp
  425222:	cmp    eax,DWORD PTR [ebx+0x3]
  425225:	in     eax,dx
  425226:	test   eax,0xb74c9bd2
  42522b:	aaa    
  42522c:	scas   eax,DWORD PTR es:[edi]
  42522d:	xchg   cl,ch
  42522f:	(bad)  
  425230:	push   edx
  425231:	fcmovbe st,st(6)
  425233:	call   0x8eef:0xec8b589
  42523a:	paddq  mm6,mm7
  42523d:	dec    eax
  42523e:	scas   eax,DWORD PTR es:[edi]
  42523f:	jg     0x425278
  425241:	lods   eax,DWORD PTR ds:[esi]
  425242:	out    0x18,al
  425244:	es xchg edi,eax
  425246:	dec    edi
  425247:	cmp    DWORD PTR [edx],ebp
  425249:	in     al,0x36
  42524b:	sbb    eax,0xaa639a99
  425250:	push   cs
  425251:	adc    DWORD PTR [edx-0x33],esp
  425254:	dec    eax
  425255:	xlat   BYTE PTR ds:[ebx]
  425256:	pushf  
  425257:	imul   ebp,DWORD PTR [eax+ecx*2],0x1a
  42525b:	add    eax,0xbd628682
  425260:	xchg   esp,eax
  425261:	fbstp  TBYTE PTR ds:0x7d12c1d8
  425267:	sbb    al,0x9c
  425269:	mov    eax,0x3ebf9f77
  42526e:	dec    esi
  42526f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425270:	adc    dl,0x1f
  425273:	bound  ebp,QWORD PTR [edx-0x42]
  425276:	xor    dl,BYTE PTR [esi]
  425278:	scas   al,BYTE PTR es:[edi]
  425279:	pop    ebp
  42527a:	inc    edi
  42527b:	cmp    ah,BYTE PTR [esi]
  42527d:	cmp    ah,ah
  42527f:	lock adc BYTE PTR [edx+0x5695857d],bh
  425286:	xchg   edi,eax
  425287:	mov    ebx,0xf2e594e
  42528c:	rcr    BYTE PTR [edi-0x5d],0x6e
  425290:	hlt    
  425291:	jg     0x4252d2
  425293:	cld    
  425294:	jp     0x4252d1
  425296:	sub    cl,BYTE PTR [edi]
  425298:	dec    ebp
  425299:	push   esp
  42529a:	sahf   
  42529b:	imul   ecx,DWORD PTR [ecx],0xfffffffc
  42529e:	das    
  42529f:	mov    dh,BYTE PTR [esp+ebx*2-0x40]
  4252a3:	fs push cs
  4252a5:	rcr    BYTE PTR [eax-0x2a54fe4],cl
  4252ab:	cmp    esi,DWORD PTR [ecx+0x5b]
  4252ae:	(bad)  
  4252af:	imul   esp,DWORD PTR [edx],0x26
  4252b2:	pop    ebp
  4252b3:	ins    BYTE PTR es:[edi],dx
  4252b4:	sahf   
  4252b5:	(bad)  
  4252b6:	mov    dl,0x7c
  4252b8:	cmp    ebp,eax
  4252ba:	les    esi,FWORD PTR [edi+0x10]
  4252bd:	fisttp WORD PTR [edx+ebx*2-0x22]
  4252c1:	mov    esp,0xaf79a288
  4252c6:	push   eax
  4252c7:	scas   eax,DWORD PTR es:[edi]
  4252c8:	xor    bl,ah
  4252ca:	scas   al,BYTE PTR es:[edi]
  4252cb:	test   BYTE PTR [edi-0x7a],bl
  4252ce:	cmc    
  4252cf:	in     al,dx
  4252d0:	mov    bl,0xf5
  4252d2:	lahf   
  4252d3:	fadd   DWORD PTR [esi+ecx*1]
  4252d6:	mov    al,0x4c
  4252d8:	or     dh,bh
  4252da:	and    DWORD PTR [edx-0x3bbc06a0],ebx
  4252e0:	push   edx
  4252e1:	in     al,dx
  4252e2:	xchg   ebp,eax
  4252e3:	fiadd  DWORD PTR [esi-0x36c641ce]
  4252e9:	(bad)  
  4252eb:	and    eax,0x48d71556
  4252f0:	add    eax,0xb3297460
  4252f5:	jbe    0x4252cf
  4252f7:	pop    edx
  4252f8:	sub    bl,BYTE PTR [eax]
  4252fa:	mov    dh,BYTE PTR [edi]
  4252fc:	add    DWORD PTR [esp+ebx*2+0x3c],0x35
  425301:	add    ecx,ebx
  425303:	jns    0x425343
  425305:	add    dl,dl
  425307:	or     BYTE PTR [ecx+edi*1],0x69
  42530b:	sub    eax,0xb884ee09
  425310:	lds    ebx,FWORD PTR [esi+eax*1-0x61c44ead]
  425317:	cmp    ecx,0x5a
  42531a:	cmp    bl,0xc0
  42531d:	cmp    edx,DWORD PTR [ecx+0x44f9b752]
  425323:	enter  0xb81d,0xb1
  425327:	mov    bh,0xfd
  425329:	ins    DWORD PTR es:[edi],dx
  42532a:	int3   
  42532b:	pop    eax
  42532c:	xor    ah,BYTE PTR [edi+edi*1]
  42532f:	pop    esp
  425330:	sbb    al,al
  425332:	and    DWORD PTR ds:0xbe27c87b,ecx
  425338:	jns    0x425375
  42533a:	addr16 dec edi
  42533c:	gs mov esi,0x442b0348
  425342:	adc    esi,DWORD PTR [ecx-0x23a290ea]
  425348:	in     eax,0x46
  42534a:	jmp    0x4252ea
  42534c:	cdq    
  42534d:	into   
  42534e:	adc    al,BYTE PTR es:[esi]
  425351:	out    0xb0,eax
  425353:	adc    al,0x6c
  425355:	data16 mov cl,ch
  425358:	out    dx,eax
  425359:	shl    eax,0xe6
  42535c:	mov    edi,0xb7f0aec
  425361:	cmp    al,0x22
  425363:	mov    dl,0x6a
  425365:	pop    edx
  425366:	xor    DWORD PTR [eax-0x2],edi
  425369:	pop    es
  42536a:	push   0xa97b9837
  42536f:	mov    dh,0x1a
  425371:	jmp    FWORD PTR [edi-0x4f8d6d7c]
  425377:	aaa    
  425378:	stos   DWORD PTR es:[edi],eax
  425379:	pop    ecx
  42537a:	mov    ah,0x48
  42537c:	orps   xmm4,xmm0
  42537f:	stc    
  425380:	sti    
  425381:	in     eax,0x39
  425383:	retf   0x6b16
  425386:	fwait
  425387:	(bad)  
  425388:	(bad)  
  425389:	mov    ah,0xce
  42538b:	xor    BYTE PTR [ebx+0x42],al
  42538e:	mov    edx,0x768bd817
  425393:	inc    ebp
  425394:	ss loop 0x4253a2
  425397:	in     eax,dx
  425398:	aas    
  425399:	push   ecx
  42539a:	adc    ebp,DWORD PTR [eax]
  42539c:	mov    esp,0x4ab7cbf2
  4253a1:	dec    esi
  4253a2:	ins    BYTE PTR es:[edi],dx
  4253a3:	sbb    esi,ebp
  4253a5:	stc    
  4253a6:	dec    edx
  4253a7:	hlt    
  4253a8:	mov    bh,0x18
  4253aa:	mov    ch,0x29
  4253ac:	mov    esp,0x3116239f
  4253b1:	add    edi,eax
  4253b3:	rol    BYTE PTR [edx+edi*4+0x6c],0x58
  4253b8:	push   esp
  4253b9:	dec    edi
  4253ba:	retf   0xf8fc
  4253bd:	popa   
  4253be:	lods   eax,DWORD PTR ds:[esi]
  4253bf:	sub    cl,cl
  4253c1:	push   cs
  4253c2:	pop    ecx
  4253c3:	mov    esp,0x9c7abda5
  4253c8:	fnsave [edx-0x6d64ce12]
  4253ce:	mov    ebx,0x68aa1b16
  4253d3:	xchg   ebp,eax
  4253d4:	leave  
  4253d5:	(bad)  
  4253d6:	pop    esi
  4253d7:	retf   0xd7e6
  4253da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253db:	or     BYTE PTR [ecx-0x1c19a9a3],0xdc
  4253e2:	pop    ecx
  4253e3:	aam    0x5c
  4253e5:	jo     0x4253ad
  4253e7:	push   edi
  4253e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e9:	xchg   DWORD PTR [eax],edi
  4253eb:	push   esi
  4253ec:	loopne 0x425452
  4253ee:	jb     0x4253b9
  4253f0:	mov    bl,0xf5
  4253f2:	xor    cl,ch
  4253f4:	sub    edx,DWORD PTR [esi]
  4253f6:	or     BYTE PTR [ecx],bh
  4253f8:	push   ecx
  4253f9:	xor    dl,BYTE PTR [ecx]
  4253fb:	hlt    
  4253fc:	cmp    DWORD PTR [ecx],esp
  4253fe:	(bad)  
  4253ff:	cmp    DWORD PTR [esi-0x3e520e24],esp
  425405:	or     edi,esp
  425407:	jl     0x425402
  425409:	popa   
  42540a:	repnz cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42540e:	add    ebp,DWORD PTR [edi]
  425410:	and    al,0xf4
  425412:	jno    0x4253e5
  425414:	(bad)  
  425415:	pop    esp
  425416:	mov    al,0x1b
  425418:	out    dx,eax
  425419:	inc    ecx
  42541a:	ret    
  42541b:	xchg   BYTE PTR [ebx],ah
  42541d:	loop   0x4253a1
  42541f:	cdq    
  425420:	js     0x425422
  425422:	xor    dl,BYTE PTR [esi+0x11]
  425425:	les    ebp,FWORD PTR [ebp-0x129556d4]
  42542b:	push   ss
  42542c:	mov    bl,0xe9
  42542e:	sti    
  42542f:	inc    eax
  425430:	ret    0x1ecd
  425433:	and    al,0xd7
  425435:	fwait
  425436:	ds dec esp
  425438:	imul   ecx,ebx,0x6f73586d
  42543e:	mov    bl,0x20
  425440:	jp     0x42545f
  425442:	dec    esi
  425443:	mov    ecx,0xba6bc194
  425448:	or     dl,BYTE PTR [edx-0x285a3e72]
  42544e:	test   eax,0x4bbb554c
  425453:	push   eax
  425454:	hlt    
  425455:	xchg   ebp,eax
  425456:	xor    al,0x72
  425458:	mov    eax,ds:0xcd808d82
  42545d:	cld    
  42545e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42545f:	es mov dh,0xaa
  425462:	shl    DWORD PTR [edi-0x6ba611d3],0x7
  425469:	lods   al,BYTE PTR ds:[esi]
  42546a:	push   0xffffff8f
  42546c:	pop    ebp
  42546d:	stos   BYTE PTR es:[edi],al
  42546e:	sub    al,0x33
  425470:	in     al,0xf2
  425472:	ins    BYTE PTR es:[edi],dx
  425473:	scas   al,BYTE PTR es:[edi]
  425474:	mov    edx,0x2be6c46a
  425479:	or     ebx,ecx
  42547b:	push   edx
  42547c:	call   0xef5a6add
  425481:	ficom  DWORD PTR [ebx-0x7bc0d222]
  425487:	leave  
  425488:	sbb    al,0x23
  42548a:	add    BYTE PTR [ebx+0x2b],dh
  42548d:	mov    ds:0xafbc3915,al
  425492:	adc    al,0x59
  425494:	or     eax,0x22b8a224
  425499:	add    dl,BYTE PTR [esi+0x1184e290]
  42549f:	pop    esi
  4254a0:	pop    DWORD PTR [eax]
  4254a2:	mov    bh,0x80
  4254a4:	mov    al,ds:0xe7d4889
  4254a9:	push   es
  4254aa:	add    al,ch
  4254ac:	scas   eax,DWORD PTR es:[edi]
  4254ad:	pop    ecx
  4254ae:	push   eax
  4254af:	arpl   bp,dx
  4254b1:	icebp  
  4254b2:	sahf   
  4254b3:	hlt    
  4254b4:	ss cmp eax,0x422a0643
  4254ba:	dec    eax
  4254bb:	ja     0x42543f
  4254bd:	retf   0xe010
  4254c0:	es sbb eax,0x18e34398
  4254c6:	pop    DWORD PTR [ecx-0x77476658]
  4254cc:	or     esp,edx
  4254ce:	fld    DWORD PTR [edx]
  4254d0:	shl    DWORD PTR [ebp-0x733a09c9],cl
  4254d6:	lods   al,BYTE PTR ds:[esi]
  4254d7:	mov    BYTE PTR [edi],al
  4254d9:	sbb    eax,0x956861ec
  4254de:	and    al,cl
  4254e0:	loope  0x4254a8
  4254e2:	ret    0x45c7
  4254e5:	lods   al,BYTE PTR ds:[esi]
  4254e6:	(bad)  
  4254e7:	stos   DWORD PTR es:[edi],eax
  4254e8:	mov    bl,0x6f
  4254ea:	cmp    eax,0xc20d213c
  4254ef:	sub    BYTE PTR [ecx-0x16bf87b2],0x42
  4254f6:	mov    ah,0x25
  4254f8:	fs popf 
  4254fa:	or     eax,0xce9b2957
  4254ff:	push   esp
  425500:	test   BYTE PTR [esi-0x3ccd3c45],0xa5
  425507:	xchg   edx,eax
  425508:	mov    al,0xba
  42550a:	(bad)  
  42550b:	(bad)  
  42550c:	sbb    ch,cl
  42550e:	xor    DWORD PTR [ecx],0x954b7d82
  425514:	cmp    ebx,DWORD PTR [eax+0x5c6f7b9e]
  42551a:	out    0x5b,al
  42551c:	jno    0x4254be
  42551e:	js     0x425526
  425520:	cli    
  425521:	mov    esi,0x22eaad38
  425526:	xlat   BYTE PTR ds:[ebx]
  425527:	pusha  
  425528:	add    ebp,0x5fdc1b8d
  42552e:	mov    edx,0xe983d1f6
  425533:	pop    ecx
  425534:	test   al,0xb8
  425536:	push   eax
  425537:	cmovb  esp,ecx
  42553a:	ds mov eax,0x5a79c2dc
  425540:	(bad)  [ebx+eax*2+0x20]
  425544:	jl     0x4255b6
  425546:	pop    eax
  425547:	imul   ecx,DWORD PTR [edx+0x1973600f],0x2b
  42554e:	jns    0x4255c0
  425550:	iret   
  425551:	mov    ds:0x61c25626,eax
  425556:	and    eax,0x37498423
  42555b:	add    edi,ecx
  42555d:	imul   ebx,DWORD PTR [ecx-0x5d],0x55
  425561:	(bad)  
  425562:	cli    
  425563:	push   edi
  425564:	iret   
  425565:	push   esi
  425566:	push   eax
  425567:	add    dl,BYTE PTR [ebp+0x6f]
  42556a:	fimul  DWORD PTR [edi-0x56ef9f22]
  425570:	xor    edx,edx
  425572:	test   eax,0xc1a1c9c5
  425577:	cmp    al,0x60
  425579:	mov    dh,0x69
  42557b:	inc    esi
  42557c:	stos   BYTE PTR es:[edi],al
  42557d:	jecxz  0x425501
  42557f:	ins    DWORD PTR es:[edi],dx
  425580:	mov    ?,WORD PTR [ecx-0x52]
  425583:	pop    esi
  425584:	ds push ebx
  425586:	mov    al,ds:0x97fb97e0
  42558b:	imul   edi,DWORD PTR [eax],0x52
  42558e:	sbb    eax,0xeecb1db8
  425593:	mov    eax,0xd4ae9ec4
  425598:	xor    DWORD PTR fs:[esi],edi
  42559b:	retf   
  42559c:	sti    
  42559d:	sub    dl,BYTE PTR [edi+0x51]
  4255a0:	stos   DWORD PTR es:[edi],eax
  4255a1:	ss mov esi,0xee908e95
  4255a7:	push   edx
  4255a8:	(bad)  
  4255a9:	stc    
  4255aa:	loope  0x42555e
  4255ac:	je     0x4255e3
  4255ae:	imul   ebx,DWORD PTR [edx+0x5e2f3df7],0x448868f0
  4255b8:	and    DWORD PTR [edx],edx
  4255ba:	out    dx,eax
  4255bb:	(bad)  
  4255bc:	and    al,0xe5
  4255be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255bf:	icebp  
  4255c0:	popa   
  4255c1:	ja     0x4255b8
  4255c3:	add    edx,esp
  4255c5:	int3   
  4255c6:	push   es
  4255c7:	test   al,0x56
  4255c9:	push   cs
  4255ca:	shr    dh,cl
  4255cc:	mov    al,ds:0xb895a251
  4255d1:	es scas eax,DWORD PTR es:[edi]
  4255d3:	sub    eax,0xcdeaa064
  4255d8:	cmp    edx,esp
  4255da:	daa    
  4255db:	cmp    ah,ch
  4255dd:	into   
  4255de:	mov    ah,0xf1
  4255e0:	sub    al,0x84
  4255e2:	imul   ecx,DWORD PTR [esi+0x1df17eb4],0xe9a8f7f7
  4255ec:	in     eax,0x6f
  4255ee:	sbb    al,0xe8
  4255f0:	retf   
  4255f1:	or     BYTE PTR [eax+0x1a],bh
  4255f4:	shl    BYTE PTR [ebx-0x50b22328],1
  4255fa:	pushf  
  4255fb:	sbb    al,0xd5
  4255fd:	jp     0x42559f
  4255ff:	adc    dl,ah
  425601:	cmp    cl,BYTE PTR [ebp+0x7857970c]
  425607:	pop    es
  425608:	rol    ebp,1
  42560a:	pop    ebx
  42560b:	lahf   
  42560c:	sub    eax,0xca9cf7e1
  425611:	loop   0x42563d
  425613:	mov    DWORD PTR [ecx-0x52693d1],eax
  425619:	mov    ecx,0x4d01d3f1
  42561e:	xchg   esp,eax
  42561f:	xchg   esi,eax
  425620:	(bad)  
  425621:	mov    esp,0xf54c4a73
  425626:	scas   eax,DWORD PTR es:[edi]
  425627:	xchg   BYTE PTR [ebp-0x77],ah
  42562a:	push   eax
  42562b:	mov    dl,0x7c
  42562d:	xor    eax,0x7b85d75e
  425632:	inc    esp
  425633:	inc    BYTE PTR [ebx+0x5a578c0a]
  425639:	fsubrp st(0),st
  42563b:	in     eax,dx
  42563c:	xchg   edx,eax
  42563d:	push   cs
  42563e:	pop    es
  42563f:	mul    DWORD PTR [ebp+0x7d]
  425642:	clc    
  425643:	or     ebx,DWORD PTR [edi-0x1e4429c9]
  425649:	push   ebp
  42564a:	(bad)  
  42564b:	lods   eax,DWORD PTR ds:[esi]
  42564c:	mov    eax,eax
  42564e:	mov    dh,0xe1
  425650:	sub    al,0xaf
  425652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425653:	jo     0x425652
  425655:	rcr    DWORD PTR [esi],1
  425657:	mov    al,0x6d
  425659:	xor    DWORD PTR [esi],esp
  42565b:	dec    edx
  42565c:	xor    DWORD PTR [ebx-0x2e],esp
  42565f:	dec    ecx
  425660:	ss clc 
  425662:	adc    eax,0xfe2267a4
  425667:	ja     0x425615
  425669:	fisub  WORD PTR [edi-0x266a7e8b]
  42566f:	hlt    
  425670:	mov    al,ds:0x60a8b479
  425675:	sti    
  425676:	fistp  WORD PTR [esi+eax*4+0x60]
  42567a:	arpl   WORD PTR [ecx+ebx*8-0x35],bp
  42567e:	pop    ecx
  42567f:	and    ecx,DWORD PTR [ebx+0x2a]
  425682:	push   edi
  425683:	xchg   DWORD PTR [edx-0x27],ebx
  425686:	ins    DWORD PTR es:[edi],dx
  425687:	or     al,0xa0
  425689:	leave  
  42568a:	hlt    
  42568b:	test   BYTE PTR [ebx-0x3a05ae33],ah
  425691:	test   eax,0x76629f8c
  425696:	arpl   bp,sp
  425698:	emms   
  42569a:	cmp    DWORD PTR [ebp+0x7],ecx
  42569d:	sbb    cl,ah
  42569f:	fsubrp st(7),st
  4256a1:	iret   
  4256a2:	rcl    BYTE PTR [eax+0x57],0x99
  4256a6:	lds    esi,FWORD PTR [esi-0x52679cc5]
  4256ac:	test   eax,0x8756faf0
  4256b1:	les    esp,FWORD PTR [edx-0x13d9c2bd]
  4256b7:	dec    esp
  4256b8:	ds mov cl,0xd
  4256bb:	push   edi
  4256bc:	mov    edi,edx
  4256be:	popf   
  4256bf:	mov    BYTE PTR [edi+0x43],bl
  4256c2:	in     eax,0x14
  4256c4:	cmc    
  4256c5:	cli    
  4256c6:	sbb    DWORD PTR [eax+0x2fa03a27],edi
  4256cc:	enter  0xf39a,0xe1
  4256d0:	ret    
  4256d1:	push   esi
  4256d2:	std    
  4256d3:	mov    dx,0x6ab9
  4256d7:	xchg   ebp,eax
  4256d8:	fmul   DWORD PTR [esi]
  4256da:	cmc    
  4256db:	aas    
  4256dc:	or     edi,esi
  4256de:	imul   ecx,DWORD PTR [ecx-0x66e6fc86],0x71
  4256e5:	and    edi,edx
  4256e7:	(bad)  
  4256e8:	sub    DWORD PTR [ebx],edi
  4256ea:	push   edi
  4256eb:	adc    bl,BYTE PTR [edi+0x2fe4c751]
  4256f1:	adc    dl,BYTE PTR [edi+0x71247830]
  4256f7:	sbb    BYTE PTR [ebx-0x33],bl
  4256fa:	ja     0x425740
  4256fc:	cmp    al,0x43
  4256fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256ff:	in     al,dx
  425700:	icebp  
  425701:	push   cs
  425702:	das    
  425703:	add    DWORD PTR [ecx-0x329f9e18],ebx
  425709:	dec    edi
  42570a:	sbb    edi,DWORD PTR [edi-0x23455333]
  425710:	mov    ah,0x9a
  425712:	in     al,0xa0
  425714:	ficomp WORD PTR [ebp+0x45f58578]
  42571a:	inc    edx
  42571b:	mov    ah,0x49
  42571d:	ins    BYTE PTR es:[edi],dx
  42571e:	cmp    dh,dh
  425720:	mov    edi,0xf0a07fd1
  425725:	hlt    
  425726:	std    
  425727:	xor    dl,BYTE PTR [esi+0x41]
  42572a:	mov    ebx,DWORD PTR [ebx]
  42572c:	aad    0xac
  42572e:	inc    ebp
  42572f:	mov    esi,0x9eb3c579
  425734:	sub    eax,0x38b0d524
  425739:	les    ecx,FWORD PTR [edi+edi*8-0x22]
  42573d:	xchg   BYTE PTR [edx-0x3a],al
  425740:	push   edx
  425741:	and    al,0xb1
  425743:	cwde   
  425744:	xor    eax,0xfd920f7f
  425749:	test   al,0xc
  42574b:	es ret 
  42574d:	aam    0xdd
  42574f:	fimul  WORD PTR [edi-0x9c79f7e]
  425755:	push   ss
  425756:	jmp    0xefa3e562
  42575b:	aaa    
  42575c:	inc    ebp
  42575d:	xchg   esp,eax
  42575e:	push   edx
  42575f:	add    BYTE PTR [edi+ebx*1],bh
  425762:	cs jle 0x4256f9
  425765:	cmp    DWORD PTR [eax+0x3e3e2e26],esi
  42576b:	adc    DWORD PTR [ebx-0x7b],edx
  42576e:	int    0x22
  425770:	clc    
  425771:	ins    DWORD PTR es:[edi],dx
  425772:	sub    eax,eax
  425774:	test   bh,dl
  425776:	pop    esp
  425777:	xor    edx,edx
  425779:	ficomp DWORD PTR [esi+0x60]
  42577c:	(bad)  
  42577d:	xchg   esp,eax
  42577e:	push   ds
  42577f:	push   edx
  425780:	and    DWORD PTR [edi+0x28],ecx
  425783:	(bad)  
  425784:	push   0x7063a3f0
  425789:	mov    al,0xf8
  42578b:	push   edx
  42578c:	or     ch,BYTE PTR [ecx]
  42578e:	rcr    DWORD PTR [ebp+0x6f8f11cc],0xe1
  425795:	js     0x425724
  425797:	sbb    eax,0xcbf978
  42579c:	retf   0xeb92
  42579f:	add    ebp,DWORD PTR [ebp-0x46]
  4257a2:	push   0x571d96b5
  4257a7:	pop    edx
  4257a8:	push   ds
  4257a9:	push   ds
  4257aa:	and    bh,0x9f
  4257ad:	adc    al,0x37
  4257af:	mov    ds:0x117f8487,al
  4257b4:	sub    DWORD PTR [eax-0x2b102ae3],esp
  4257ba:	adc    ch,bh
  4257bc:	test   eax,0x61c3c915
  4257c1:	rcr    ch,0x27
  4257c4:	sbb    BYTE PTR [eax+edx*1-0x3f],bl
  4257c8:	scas   al,BYTE PTR es:[edi]
  4257c9:	xor    BYTE PTR [eax+0x3f9deb7b],ch
  4257cf:	pusha  
  4257d0:	sahf   
  4257d1:	lods   al,BYTE PTR ds:[esi]
  4257d2:	(bad)  
  4257d3:	in     al,dx
  4257d4:	mov    dh,0xf6
  4257d6:	out    0x3a,al
  4257d8:	repz inc ebx
  4257da:	dec    edi
  4257db:	dec    DWORD PTR [edi+ebx*8-0x6a]
  4257df:	mov    ds:0xc4dbef82,eax
  4257e4:	inc    ecx
  4257e5:	push   ebx
  4257e6:	inc    ebp
  4257e7:	mov    eax,0xe8e6df8a
  4257ec:	cmp    esp,DWORD PTR [edi+0x4a]
  4257ef:	jmp    0x46c6:0x937dd2ae
  4257f6:	push   edi
  4257f7:	or     esi,esp
  4257f9:	stos   BYTE PTR es:[edi],al
  4257fa:	and    al,0xf2
  4257fc:	out    dx,al
  4257fd:	maxps  xmm6,XMMWORD PTR [eax-0x38f48c48]
  425804:	pop    ecx
  425805:	mov    al,0x3
  425807:	mov    ecx,0xc0235eb1
  42580c:	inc    ecx
  42580d:	add    bl,dl
  42580f:	adc    dl,BYTE PTR [esp+esi*1-0x579852fc]
  425816:	mov    edx,0xb6e152e8
  42581b:	dec    ebp
  42581c:	xchg   DWORD PTR [ecx+esi*1],ecx
  42581f:	xchg   ebx,eax
  425820:	imul   ax,WORD PTR [ecx-0x67],0x3a01
  425826:	adc    al,0x3
  425828:	dec    eax
  425829:	jns    0x4257fc
  42582b:	popa   
  42582c:	in     eax,dx
  42582d:	hlt    
  42582e:	shr    DWORD PTR [ebx+ebx*4],1
  425831:	outs   dx,BYTE PTR ds:[esi]
  425832:	cmp    BYTE PTR [esp+edx*8],ch
  425835:	hlt    
  425836:	loopne 0x4257ec
  425838:	dec    eax
  425839:	and    DWORD PTR [ebx],ecx
  42583b:	jae    0x425860
  42583d:	div    BYTE PTR [ebx]
  42583f:	add    dh,BYTE PTR [ecx+0x173830]
  425845:	fiadd  WORD PTR [ebp+0x5ce7c8a2]
  42584b:	push   0x45
  42584d:	xchg   ebp,eax
  42584e:	jae    0x425882
  425850:	push   es
  425851:	sub    esp,DWORD PTR ds:0x48d50ae
  425857:	cli    
  425858:	mov    ah,0xc6
  42585a:	dec    ebx
  42585b:	push   ds
  42585c:	pop    esp
  42585d:	cdq    
  42585e:	mov    ch,0x3d
  425860:	dec    ebp
  425861:	xor    DWORD PTR [edi-0x536a5c5e],eax
  425867:	and    ebx,DWORD PTR [eax-0x49]
  42586a:	sar    ecx,1
  42586c:	ds xchg ebp,eax
  42586e:	out    0x3a,eax
  425870:	sahf   
  425871:	(bad)  
  425872:	int3   
  425873:	pop    ebx
  425874:	fs ret 
  425876:	(bad)  
  425877:	mov    ecx,0xff83b6f
  42587c:	test   BYTE PTR [edi+0x0],cl
  42587f:	add    BYTE PTR [eax],al
  425881:	mov    DWORD PTR [ebp-0xc],esi
  425884:	mov    eax,DWORD PTR [ebp-0xc]
  425887:	mov    esi,DWORD PTR [ebp+0xc]
  42588a:	xor    eax,ecx
  42588c:	lea    eax,[eax*8+0x1939820]
  425893:	mov    eax,DWORD PTR [esi+eax*1]
  425896:	mov    DWORD PTR [ebp+0xc],eax
  425899:	mov    eax,DWORD PTR [ebp-0x4]
  42589c:	mov    esi,DWORD PTR [ebp-0x8]
  42589f:	xor    eax,ecx
  4258a1:	xor    esi,ecx
  4258a3:	add    esi,edx
  4258a5:	add    eax,edx
  4258a7:	imul   eax,esi
  4258aa:	mov    esi,DWORD PTR [ebp+0xc]
  4258ad:	cmp    esi,eax
  4258af:	je     0x4258d0
  4258b5:	mov    eax,DWORD PTR [ebp-0x4]
  4258b8:	xor    eax,ecx
  4258ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4258bd:	add    eax,edx
  4258bf:	imul   eax,ecx
  4258c2:	add    eax,DWORD PTR [ebp+0x8]
  4258c5:	mov    DWORD PTR [ebp+0xc],eax
  4258c8:	mov    eax,DWORD PTR [ebp+0xc]
  4258cb:	jmp    0x4258e1
  4258d0:	mov    eax,DWORD PTR [ebp-0x4]
  4258d3:	mov    esi,DWORD PTR [ebp-0x8]
  4258d6:	xor    esi,ecx
  4258d8:	xor    eax,ecx
  4258da:	add    esi,edx
  4258dc:	add    eax,edx
  4258de:	imul   eax,esi
  4258e1:	pop    edi
  4258e2:	pop    esi
  4258e3:	leave  
  4258e4:	ret    0x8
	...
  4258f3:	add    ah,cl
  4258f5:	cmp    al,0xf3
  4258f7:	dec    ebp
  4258f8:	add    BYTE PTR [eax],al
  4258fa:	add    BYTE PTR [eax],al
  4258fc:	add    al,BYTE PTR [eax]
  4258fe:	add    BYTE PTR [eax],al
  425900:	add    BYTE PTR ss:[eax],al
  425903:	add    BYTE PTR [eax],dl
  425905:	pop    ecx
  425906:	add    al,BYTE PTR [eax]
  425908:	adc    BYTE PTR [ebp+0x2],cl
  42590b:	add    BYTE PTR [eax],al
  42590d:	add    BYTE PTR [eax],al
  42590f:	add    BYTE PTR [edx+0x53],dl
  425912:	inc    esp
  425913:	push   ebx
  425914:	pushf  
  425915:	push   ebp
  425916:	aaa    
  425917:	mov    ds:0x4fd361bf,al
  42591c:	lods   eax,DWORD PTR ds:[esi]
  42591d:	or     DWORD PTR [ebx-0x76ef2c94],ecx
  425923:	dec    esi
  425924:	add    DWORD PTR [eax],eax
  425926:	add    BYTE PTR [eax],al
  425928:	inc    edi
  425929:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42592d:	jae    0x42594f
  42592f:	inc    esp
  425930:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425937:	inc    esi
  425938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425940:	outs   dx,BYTE PTR ds:[esi]
  425941:	jae    0x4259ac
  425943:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42594b:	or     BYTE PTR [ecx],al
  42594d:	add    BYTE PTR [eax],al
  42594f:	push   ebx
  425950:	mov    eax,ebx
  425952:	xchg   ecx,eax
  425953:	mov    eax,DWORD PTR [ebp+0x8]
  425956:	cmp    eax,0xf89c85a5
  42595b:	jne    0x425e1c
  425961:	mov    eax,DWORD PTR [ebp+0xc]
  425964:	cmp    eax,0xf89c85a2
  425969:	jne    0x425e1c
  42596f:	mov    eax,DWORD PTR [ebp+0x24]
  425972:	mov    DWORD PTR [ebp-0x4],eax
  425975:	mov    eax,DWORD PTR [ebp-0x4]
  425978:	mov    eax,DWORD PTR [eax+0x1d8]
  42597e:	mov    eax,DWORD PTR [eax]
  425980:	mov    eax,DWORD PTR [eax]
  425982:	mov    DWORD PTR [ebp-0x8],eax
  425985:	mov    BYTE PTR [ebp-0x18],0x1a
  425989:	mov    BYTE PTR [ebp-0x17],0x1f
  42598d:	mov    BYTE PTR [ebp-0x16],0x18
  425991:	mov    BYTE PTR [ebp-0x15],0x4e
  425995:	mov    BYTE PTR [ebp-0x14],0x51
  425999:	mov    BYTE PTR [ebp-0x13],0x83
  42599d:	mov    BYTE PTR [ebp-0x20],0xc
  4259a1:	mov    BYTE PTR [ebp-0x1f],0xe
  4259a5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4259a9:	mov    BYTE PTR [ebp-0x1d],0x11
  4259ad:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259b1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259b5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259b9:	mov    BYTE PTR [ebp-0x28],0xe
  4259bd:	mov    BYTE PTR [ebp-0x27],0x1b
  4259c1:	mov    BYTE PTR [ebp-0x26],0x17
  4259c5:	mov    BYTE PTR [ebp-0x25],0xa
  4259c9:	mov    BYTE PTR [ebp-0x24],0x20
  4259cd:	mov    BYTE PTR [ebp-0x23],0x13
  4259d1:	mov    BYTE PTR [ebp-0x22],0x18
  4259d5:	mov    BYTE PTR [ebp-0x21],0x83
  4259d9:	xor    ecx,ecx
  4259db:	lea    eax,[ebp+ecx*1-0x18]
  4259df:	movzx  edx,BYTE PTR [eax]
  4259e2:	xor    edx,0x7e
  4259e5:	add    edx,0x3
  4259e8:	inc    ecx
  4259e9:	mov    BYTE PTR [eax],dl
  4259eb:	cmp    ecx,0x6
  4259ee:	jb     0x4259db
  4259f0:	xor    ecx,ecx
  4259f2:	lea    eax,[ebp+ecx*1-0x20]
  4259f6:	movzx  edx,BYTE PTR [eax]
  4259f9:	xor    edx,0x7e
  4259fc:	add    edx,0x3
  4259ff:	inc    ecx
  425a00:	mov    BYTE PTR [eax],dl
  425a02:	cmp    ecx,0x7
  425a05:	jb     0x4259f2
  425a07:	xor    ecx,ecx
  425a09:	lea    eax,[ebp+ecx*1-0x28]
  425a0d:	movzx  edx,BYTE PTR [eax]
  425a10:	xor    edx,0x7e
  425a13:	add    edx,0x3
  425a16:	inc    ecx
  425a17:	mov    BYTE PTR [eax],dl
  425a19:	cmp    ecx,0x8
  425a1c:	jb     0x425a09
  425a1e:	lea    eax,[ebp-0x2c]
  425a21:	mov    DWORD PTR [ebp-0x8],eax
  425a24:	mov    ecx,DWORD PTR [ebp-0x8]
  425a27:	mov    eax,0x7113fccf
  425a2c:	mov    DWORD PTR [ecx],eax
  425a2e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a31:	push   esi
  425a32:	push   edi
  425a33:	mov    esi,0x4e3e
  425a38:	mov    ebx,0x3272f5
  425a3d:	cmp    ecx,eax
  425a3f:	jne    0x425b0a
  425a45:	lea    eax,[esi+0x39]
  425a48:	mov    WORD PTR [ebp-0x78],ax
  425a4c:	mov    eax,esi
  425a4e:	mov    WORD PTR [ebp-0x76],ax
  425a52:	add    eax,0x3f
  425a55:	mov    WORD PTR [ebp-0x74],ax
  425a59:	lea    eax,[esi-0x2]
  425a5c:	mov    WORD PTR [ebp-0x72],ax
  425a60:	add    eax,0x43
  425a63:	mov    ecx,eax
  425a65:	lea    eax,[esi-0x9]
  425a68:	mov    WORD PTR [ebp-0x66],ax
  425a6c:	mov    eax,esi
  425a6e:	mov    WORD PTR [ebp-0x64],ax
  425a72:	add    eax,0xffffffec
  425a75:	mov    WORD PTR [ebp-0x62],ax
  425a79:	mov    eax,0x443
  425a7e:	mov    WORD PTR [ebp-0x60],ax
  425a82:	mov    eax,0x5670
  425a87:	mov    WORD PTR [ebp-0x5e],ax
  425a8b:	mov    eax,0x6110
  425a90:	mov    WORD PTR [ebp-0x5c],ax
  425a94:	lea    eax,[ebp-0xe0]
  425a9a:	push   eax
  425a9b:	mov    eax,DWORD PTR [ebp+0xc]
  425a9e:	mov    edi,0x75108ae
  425aa3:	xor    eax,edi
  425aa5:	add    eax,ebx
  425aa7:	push   eax
  425aa8:	mov    WORD PTR [ebp-0x70],cx
  425aac:	lea    ecx,[esi-0xe]
  425aaf:	mov    edx,ecx
  425ab1:	lea    eax,[ebp-0x78]
  425ab4:	push   eax
  425ab5:	mov    eax,DWORD PTR [ebp-0x4]
  425ab8:	mov    eax,DWORD PTR [eax+0x198]
  425abe:	mov    WORD PTR [ebp-0x6e],dx
  425ac2:	mov    edx,0x4f8a
  425ac7:	mov    WORD PTR [ebp-0x6c],dx
  425acb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ad2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ad9:	mov    DWORD PTR [ebp-0xe0],0x1
  425ae3:	mov    DWORD PTR [ebp-0xdc],0x255
  425aed:	push   DWORD PTR [eax]
  425aef:	mov    eax,DWORD PTR [ebp+0x10]
  425af2:	call   eax
  425af4:	mov    DWORD PTR [ebp-0x8],eax
  425af7:	mov    eax,DWORD PTR [ebp-0x8]
  425afa:	test   eax,eax
  425afc:	je     0x425b0f
  425afe:	xor    DWORD PTR ds:0x76586876,0x87687666
  425b08:	jmp    0x425b0f
  425b0a:	mov    edi,0x75108ae
  425b0f:	mov    eax,DWORD PTR [ebp-0x4]
  425b12:	mov    ecx,DWORD PTR [eax+0x18c]
  425b18:	xor    eax,eax
  425b1a:	cmp    DWORD PTR [ecx],eax
  425b1c:	jne    0x425d8f
  425b22:	mov    ecx,DWORD PTR [ebp-0x4]
  425b25:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b2b:	mov    DWORD PTR [ecx],eax
  425b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b30:	mov    ecx,DWORD PTR [ecx+0x180]
  425b36:	mov    DWORD PTR [ecx],eax
  425b38:	mov    eax,0x4e6d
  425b3d:	mov    WORD PTR [ebp-0x9c],ax
  425b44:	mov    eax,esi
  425b46:	mov    WORD PTR [ebp-0x9a],ax
  425b4d:	mov    eax,0x4e7d
  425b52:	mov    WORD PTR [ebp-0x98],ax
  425b59:	add    eax,0xffffffc0
  425b5c:	mov    WORD PTR [ebp-0x96],ax
  425b63:	mov    eax,0x4f8e
  425b68:	mov    WORD PTR [ebp-0x94],ax
  425b6f:	mov    eax,0x4e32
  425b74:	mov    WORD PTR [ebp-0x92],ax
  425b7b:	add    eax,0x4d
  425b7e:	mov    WORD PTR [ebp-0x90],ax
  425b85:	mov    eax,0x4e30
  425b8a:	mov    WORD PTR [ebp-0x8e],ax
  425b91:	mov    eax,esi
  425b93:	mov    WORD PTR [ebp-0x8c],ax
  425b9a:	mov    eax,0x4e31
  425b9f:	mov    WORD PTR [ebp-0x8a],ax
  425ba6:	mov    eax,0x99fd
  425bab:	mov    WORD PTR [ebp-0x88],ax
  425bb2:	mov    eax,0x8d62
  425bb7:	mov    WORD PTR [ebp-0x86],ax
  425bbe:	mov    eax,0xd66f
  425bc3:	mov    WORD PTR [ebp-0x84],ax
  425bca:	mov    eax,0xd783
  425bcf:	mov    WORD PTR [ebp-0x82],ax
  425bd6:	mov    eax,0x2780
  425bdb:	mov    WORD PTR [ebp-0x80],ax
  425bdf:	mov    eax,0x4780
  425be4:	mov    WORD PTR [ebp-0x7e],ax
  425be8:	mov    eax,0x4e33
  425bed:	push   0x8
  425bef:	mov    WORD PTR [ebp-0x7c],ax
  425bf3:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425bfa:	mov    DWORD PTR [ebp-0xc],0x83181320
  425c01:	lea    eax,[ebp-0x10]
  425c04:	pop    ecx
  425c05:	mov    dl,BYTE PTR [eax]
  425c07:	xor    dl,0x7e
  425c0a:	add    dl,0x3
  425c0d:	mov    BYTE PTR [eax],dl
  425c0f:	inc    eax
  425c10:	dec    ecx
  425c11:	jne    0x425c05
  425c13:	lea    eax,[ebp-0x10]
  425c16:	mov    DWORD PTR [ebp-0xdc],eax
  425c1c:	lea    eax,[ebp-0xe0]
  425c22:	push   eax
  425c23:	mov    eax,DWORD PTR [ebp+0xc]
  425c26:	xor    eax,edi
  425c28:	add    eax,ebx
  425c2a:	push   eax
  425c2b:	mov    eax,DWORD PTR [ebp-0x4]
  425c2e:	add    eax,0x66
  425c31:	push   eax
  425c32:	mov    eax,DWORD PTR [ebp-0x4]
  425c35:	mov    eax,DWORD PTR [eax+0x198]
  425c3b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c45:	push   DWORD PTR [eax]
  425c47:	mov    eax,DWORD PTR [ebp+0x10]
  425c4a:	call   eax
  425c4c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c4f:	xor    ecx,edi
  425c51:	add    ecx,ebx
  425c53:	mov    DWORD PTR [ebp-0x8],eax
  425c56:	cmp    eax,ecx
  425c58:	jne    0x425c73
  425c5a:	mov    eax,ds:0x33730bcc
  425c5f:	or     eax,0x22150bcf
  425c64:	mov    ds:0x33730bcc,eax
  425c69:	add    eax,0x3372e92f
  425c6e:	mov    ds:0x33730bcc,eax
  425c73:	mov    ecx,0x4e66
  425c78:	mov    eax,ecx
  425c7a:	mov    WORD PTR [ebp-0x40],ax
  425c7e:	add    eax,0x5
  425c81:	mov    edx,eax
  425c83:	mov    WORD PTR [ebp-0x3e],dx
  425c87:	mov    edx,0x4f93
  425c8c:	mov    WORD PTR [ebp-0x3c],dx
  425c90:	add    edx,0xfffffff8
  425c93:	mov    WORD PTR [ebp-0x3a],dx
  425c97:	mov    edx,0x4f89
  425c9c:	mov    WORD PTR [ebp-0x38],dx
  425ca0:	add    edx,0x3
  425ca3:	mov    WORD PTR [ebp-0x36],dx
  425ca7:	mov    edx,0x4f87
  425cac:	mov    WORD PTR [ebp-0x34],dx
  425cb0:	mov    WORD PTR [ebp-0x32],cx
  425cb4:	mov    ecx,esi
  425cb6:	mov    WORD PTR [ebp-0x30],cx
  425cba:	lea    ecx,[edx-0x1]
  425cbd:	mov    edx,ecx
  425cbf:	mov    WORD PTR [ebp-0x54],dx
  425cc3:	mov    edx,eax
  425cc5:	mov    WORD PTR [ebp-0x52],dx
  425cc9:	mov    edx,0x4e73
  425cce:	mov    WORD PTR [ebp-0x50],dx
  425cd2:	mov    WORD PTR [ebp-0x4e],ax
  425cd6:	lea    eax,[edx-0xa]
  425cd9:	mov    WORD PTR [ebp-0x4c],ax
  425cdd:	add    eax,0x3
  425ce0:	mov    WORD PTR [ebp-0x4a],ax
  425ce4:	lea    eax,[edx-0xc]
  425ce7:	mov    WORD PTR [ebp-0x48],ax
  425ceb:	mov    WORD PTR [ebp-0x46],cx
  425cef:	mov    WORD PTR [ebp-0x44],si
  425cf3:	mov    eax,DWORD PTR [ebp+0x8]
  425cf6:	movzx  ecx,WORD PTR [ebp-0x54]
  425cfa:	xor    eax,edi
  425cfc:	add    eax,ebx
  425cfe:	xor    eax,ecx
  425d00:	mov    WORD PTR [ebp-0x54],ax
  425d04:	mov    eax,DWORD PTR [ebp+0x8]
  425d07:	movzx  ecx,WORD PTR [ebp-0x40]
  425d0b:	xor    eax,edi
  425d0d:	add    eax,ebx
  425d0f:	xor    eax,ecx
  425d11:	mov    WORD PTR [ebp-0x40],ax
  425d15:	xor    eax,eax
  425d17:	mov    WORD PTR [ebp-0xf4],ax
  425d1e:	mov    WORD PTR [ebp-0x108],ax
  425d25:	mov    edi,DWORD PTR [ebp+0x24]
  425d28:	lea    eax,[ebp-0xf4]
  425d2e:	lea    edx,[ebp-0x54]
  425d31:	mov    DWORD PTR [ebp-0xe0],0x2
  425d3b:	mov    DWORD PTR [ebp-0xdc],eax
  425d41:	call   0x428779
  425d46:	mov    DWORD PTR [ebp-0xd8],eax
  425d4c:	lea    eax,[ebp-0xe0]
  425d52:	push   eax
  425d53:	mov    eax,DWORD PTR [ebp+0xc]
  425d56:	xor    eax,0x75108ae
  425d5b:	add    eax,ebx
  425d5d:	push   eax
  425d5e:	lea    eax,[ebp-0x9c]
  425d64:	push   eax
  425d65:	push   DWORD PTR [ebp-0x8]
  425d68:	mov    eax,DWORD PTR [ebp+0x10]
  425d6b:	call   eax
  425d6d:	mov    edi,DWORD PTR [ebp+0x24]
  425d70:	lea    eax,[ebp-0x108]
  425d76:	lea    edx,[ebp-0x40]
  425d79:	mov    DWORD PTR [ebp-0xdc],eax
  425d7f:	call   0x428779
  425d84:	mov    DWORD PTR [ebp-0xd8],eax
  425d8a:	mov    edi,0x75108ae
  425d8f:	mov    eax,DWORD PTR [ebp+0x14]
  425d92:	push   DWORD PTR [ebp-0x4]
  425d95:	push   DWORD PTR [ebp+0x20]
  425d98:	push   DWORD PTR [ebp+0x1c]
  425d9b:	push   DWORD PTR [ebp+0x18]
  425d9e:	push   DWORD PTR [ebp+0x10]
  425da1:	push   DWORD PTR [ebp+0x8]
  425da4:	push   DWORD PTR [ebp+0xc]
  425da7:	call   0x42701a
  425dac:	test   eax,eax
  425dae:	je     0x425df2
  425db0:	add    DWORD PTR [ebp-0x4],eax
  425db3:	push   DWORD PTR [ebp-0x4]
  425db6:	lea    esi,[ebp+0x4]
  425db9:	call   0x42620a
  425dbe:	mov    eax,DWORD PTR [ebp-0x4]
  425dc1:	mov    eax,DWORD PTR [eax+0x1c8]
  425dc7:	mov    eax,DWORD PTR [eax]
  425dc9:	xor    eax,edi
  425dcb:	add    eax,ebx
  425dcd:	mov    eax,DWORD PTR [ebp-0x4]
  425dd0:	jne    0x425de8
  425dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  425dd5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425ddb:	push   DWORD PTR [ecx]
  425ddd:	mov    eax,DWORD PTR [eax+0x1e0]
  425de3:	call   DWORD PTR [eax+0x28]
  425de6:	jmp    0x425df2
  425de8:	mov    eax,DWORD PTR [eax+0x17c]
  425dee:	mov    eax,DWORD PTR [eax]
  425df0:	add    DWORD PTR [esi],eax
  425df2:	mov    eax,DWORD PTR [ebp-0x4]
  425df5:	mov    eax,DWORD PTR [eax+0x1dc]
  425dfb:	dec    DWORD PTR [eax]
  425dfd:	mov    ecx,DWORD PTR [ebp-0x4]
  425e00:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425e06:	mov    eax,DWORD PTR [eax]
  425e08:	lea    eax,[ecx+eax*4]
  425e0b:	mov    ecx,DWORD PTR [ebp-0x4]
  425e0e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e14:	mov    eax,DWORD PTR [eax]
  425e16:	mov    ecx,DWORD PTR [ecx]
  425e18:	add    DWORD PTR [eax],ecx
  425e1a:	pop    edi
  425e1b:	pop    esi
  425e1c:	pop    ebx
  425e1d:	leave  
  425e1e:	ret    0x20
  425e21:	push   edi
  425e22:	push   esi
  425e23:	push   ebx
  425e24:	push   ebp
  425e25:	mov    ebp,esp
  425e27:	mov    eax,DWORD PTR [ebp+0x24]
  425e2a:	add    DWORD PTR [ebp+0x28],eax
  425e2d:	push   eax
  425e2e:	cld    
  425e2f:	mov    esi,DWORD PTR [ebp+0x18]
  425e32:	add    DWORD PTR [ebp+0x1c],esi
  425e35:	push   esi
  425e36:	mov    esi,DWORD PTR [ebp+0x14]
  425e39:	lods   eax,DWORD PTR ds:[esi]
  425e3a:	xchg   edx,eax
  425e3b:	push   edx
  425e3c:	mov    cl,BYTE PTR [esi-0x2]
  425e3f:	or     eax,0xffffffff
  425e42:	shl    eax,cl
  425e44:	not    eax
  425e46:	push   eax
  425e47:	mov    cl,dh
  425e49:	or     eax,0xffffffff
  425e4c:	shl    eax,cl
  425e4e:	not    eax
  425e50:	push   eax
  425e51:	add    cl,dl
  425e53:	mov    edi,esi
  425e55:	sub    esp,0xc
  425e58:	sub    eax,eax
  425e5a:	inc    eax
  425e5b:	push   eax
  425e5c:	push   eax
  425e5d:	push   eax
  425e5e:	push   eax
  425e5f:	push   eax
  425e60:	push   edi
  425e61:	sub    esi,esi
  425e63:	push   esi
  425e64:	or     ebx,0xffffffff
  425e67:	mov    eax,0x300
  425e6c:	shl    eax,cl
  425e6e:	lea    ecx,[eax+0x736]
  425e74:	mov    eax,0x4000400
  425e79:	shr    ecx,1
  425e7b:	rep stos DWORD PTR es:[edi],eax
  425e7d:	push   0x5
  425e7f:	pop    ecx
  425e80:	call   0x42616b
  425e85:	loop   0x425e80
  425e87:	lea    esi,[esi]
  425e89:	lea    edi,[edi]
  425e8b:	mov    edi,DWORD PTR [ebp-0x4]
  425e8e:	mov    eax,DWORD PTR [ebp-0x10]
  425e91:	sub    edi,DWORD PTR [ebp+0x24]
  425e94:	and    eax,edi
  425e96:	mov    DWORD PTR [ebp-0x18],eax
  425e99:	mov    al,0x0
  425e9b:	call   0x426183
  425ea0:	jne    0x425f3b
  425ea6:	mov    cl,BYTE PTR [ebp-0xc]
  425ea9:	and    edi,DWORD PTR [ebp-0x14]
  425eac:	shl    edi,cl
  425eae:	sub    cl,0x8
  425eb1:	neg    cl
  425eb3:	shr    esi,cl
  425eb5:	pop    eax
  425eb6:	add    edi,esi
  425eb8:	pop    esi
  425eb9:	lea    edi,[edi+edi*2]
  425ebc:	shl    edi,0x8
  425ebf:	cmp    al,0x7
  425ec1:	pop    edx
  425ec2:	lea    ecx,[esi+edi*2+0xe6c]
  425ec9:	push   ecx
  425eca:	push   esi
  425ecb:	mov    esi,0x100
  425ed0:	push   eax
  425ed1:	mov    al,0x1
  425ed3:	jb     0x425f09
  425ed5:	mov    edi,DWORD PTR [ebp-0x4]
  425ed8:	sub    edi,DWORD PTR [ebp-0x24]
  425edb:	movzx  edi,BYTE PTR [edi]
  425ede:	mov    ebp,DWORD PTR [ebp-0x34]
  425ee1:	shl    edi,1
  425ee3:	mov    ecx,esi
  425ee5:	and    esi,edi
  425ee7:	add    ecx,esi
  425ee9:	lea    ebp,[ebp+ecx*2+0x0]
  425eed:	call   0x4261a2
  425ef2:	mov    ecx,eax
  425ef4:	shr    esi,0x8
  425ef7:	and    ecx,0x1
  425efa:	cmp    esi,ecx
  425efc:	mov    esi,0x100
  425f01:	jne    0x425f11
  425f03:	cmp    eax,esi
  425f05:	jb     0x425ede
  425f07:	jmp    0x425f1d
  425f09:	mov    ebp,DWORD PTR [ebp-0x34]
  425f0c:	call   0x4261a2
  425f11:	inc    eax
  425f12:	inc    esi
  425f13:	sub    eax,0x1
  425f16:	sub    esi,0x1
  425f19:	cmp    eax,esi
  425f1b:	jb     0x425f09
  425f1d:	pop    edx
  425f1e:	inc    edx
  425f1f:	cmp    edx,0x5
  425f22:	dec    edx
  425f23:	mov    ecx,edx
  425f25:	jb     0x425f36
  425f27:	inc    edx
  425f28:	cmp    edx,0xb
  425f2b:	dec    edx
  425f2c:	mov    cl,0x4
  425f2e:	dec    cl
  425f30:	jb     0x425f36
  425f32:	mov    cl,0x7
  425f34:	dec    cl
  425f36:	sub    edx,ecx
  425f38:	push   edx
  425f39:	jmp    0x425f8a
  425f3b:	mov    al,0xc1
  425f3d:	dec    al
  425f3f:	call   0x426193
  425f44:	jne    0x425f5a
  425f46:	pop    eax
  425f47:	pop    edi
  425f48:	pop    edx
  425f49:	pop    ecx
  425f4a:	pop    edx
  425f4b:	pop    ecx
  425f4c:	push   DWORD PTR [esp]
  425f4f:	push   ecx
  425f50:	push   edx
  425f51:	mov    edx,0x664
  425f56:	mov    cl,0x0
  425f58:	jmp    0x425fcd
  425f5a:	mov    al,0xcd
  425f5c:	dec    al
  425f5e:	call   0x426193
  425f63:	jne    0x425f93
  425f65:	mov    al,0xf1
  425f67:	dec    al
  425f69:	call   0x426183
  425f6e:	jne    0x425fc3
  425f70:	pop    eax
  425f71:	cmp    al,0x7
  425f73:	mov    al,0x9
  425f75:	jb     0x425f79
  425f77:	mov    al,0xb
  425f79:	push   eax
  425f7a:	mov    esi,DWORD PTR [ebp-0x4]
  425f7d:	sub    esi,DWORD PTR [ebp-0x24]
  425f80:	cmp    esi,DWORD PTR [ebp+0x24]
  425f83:	jb     0x42615a
  425f89:	lods   al,BYTE PTR ds:[esi]
  425f8a:	mov    edi,DWORD PTR [ebp-0x4]
  425f8d:	stos   BYTE PTR es:[edi],al
  425f8e:	jmp    0x426121
  425f93:	mov    al,0xd8
  425f95:	call   0x426193
  425f9a:	mov    esi,DWORD PTR [ebp-0x28]
  425f9d:	je     0x425fba
  425f9f:	mov    al,0xe4
  425fa1:	call   0x426193
  425fa6:	mov    esi,DWORD PTR [ebp-0x2c]
  425fa9:	je     0x425fb4
  425fab:	mov    esi,DWORD PTR [ebp-0x30]
  425fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fb1:	mov    DWORD PTR [ebp-0x30],ecx
  425fb4:	mov    ecx,DWORD PTR [ebp-0x28]
  425fb7:	mov    DWORD PTR [ebp-0x2c],ecx
  425fba:	mov    ecx,DWORD PTR [ebp-0x24]
  425fbd:	mov    DWORD PTR [ebp-0x28],ecx
  425fc0:	mov    DWORD PTR [ebp-0x24],esi
  425fc3:	pop    eax
  425fc4:	pop    edi
  425fc5:	pop    ecx
  425fc6:	mov    edx,0xa68
  425fcb:	mov    cl,0x8
  425fcd:	add    edx,edi
  425fcf:	push   edx
  425fd0:	push   edi
  425fd1:	cmp    al,0x7
  425fd3:	mov    al,cl
  425fd5:	jb     0x425fd9
  425fd7:	add    al,0x3
  425fd9:	push   eax
  425fda:	mov    ebp,DWORD PTR [ebp-0x34]
  425fdd:	call   0x4261a0
  425fe2:	jne    0x425ff8
  425fe4:	mov    eax,DWORD PTR [ebp-0x18]
  425fe7:	mov    edi,DWORD PTR [ebp-0x34]
  425fea:	shl    eax,0x3
  425fed:	sub    ecx,ecx
  425fef:	push   0x8
  425ff1:	pop    esi
  425ff2:	lea    edi,[edi+eax*2+0x4]
  425ff6:	jmp    0x42602d
  425ff8:	mov    ebp,DWORD PTR [ebp-0x34]
  425ffb:	add    ebp,0x2
  425ffe:	call   0x4261a0
  426003:	jne    0x42601d
  426005:	mov    eax,DWORD PTR [ebp-0x18]
  426008:	mov    edi,DWORD PTR [ebp-0x34]
  42600b:	shl    eax,0x3
  42600e:	push   0x8
  426010:	pop    ecx
  426011:	push   0x8
  426013:	pop    esi
  426014:	lea    edi,[edi+eax*2+0x104]
  42601b:	jmp    0x42602d
  42601d:	mov    edi,0x204
  426022:	add    edi,DWORD PTR [ebp-0x34]
  426025:	push   0x10
  426027:	pop    ecx
  426028:	mov    esi,0x100
  42602d:	mov    DWORD PTR [ebp-0x1c],ecx
  426030:	sub    eax,eax
  426032:	inc    eax
  426033:	mov    ebp,edi
  426035:	call   0x4261a2
  42603a:	mov    ecx,eax
  42603c:	sub    ecx,esi
  42603e:	jb     0x426033
  426040:	add    DWORD PTR [ebp-0x1c],ecx
  426043:	cmp    DWORD PTR [ebp-0x3c],0x4
  426047:	jae    0x4260fd
  42604d:	add    DWORD PTR [ebp-0x3c],0x7
  426051:	mov    ecx,DWORD PTR [ebp-0x1c]
  426054:	cmp    ecx,0x4
  426057:	jb     0x42605c
  426059:	push   0x3
  42605b:	pop    ecx
  42605c:	mov    edi,DWORD PTR [ebp-0x38]
  42605f:	shl    ecx,0x6
  426062:	sub    eax,eax
  426064:	inc    eax
  426065:	push   0x40
  426067:	pop    esi
  426068:	lea    edi,[edi+ecx*2+0x360]
  42606f:	mov    ebp,edi
  426071:	call   0x4261a2
  426076:	mov    ecx,eax
  426078:	sub    ecx,esi
  42607a:	jb     0x42606f
  42607c:	mov    DWORD PTR [ebp-0x18],ecx
  42607f:	mov    DWORD PTR [ebp-0x24],ecx
  426082:	cmp    ecx,0x4
  426085:	jb     0x4260fa
  426087:	mov    esi,ecx
  426089:	and    DWORD PTR [ebp-0x24],0x1
  42608d:	shr    esi,1
  42608f:	or     DWORD PTR [ebp-0x24],0x2
  426093:	dec    esi
  426094:	cmp    ecx,0xe
  426097:	jae    0x4260b2
  426099:	mov    eax,0x2af
  42609e:	sub    eax,ecx
  4260a0:	mov    ecx,esi
  4260a2:	shl    BYTE PTR [ebp-0x24],cl
  4260a5:	add    eax,DWORD PTR [ebp-0x24]
  4260a8:	shl    eax,1
  4260aa:	add    eax,DWORD PTR [ebp-0x38]
  4260ad:	mov    DWORD PTR [ebp-0x34],eax
  4260b0:	jmp    0x4260df
  4260b2:	sub    esi,0x4
  4260b5:	call   0x42615f
  4260ba:	shr    ebx,1
  4260bc:	shl    DWORD PTR [ebp-0x24],1
  4260bf:	cmp    DWORD PTR [ebp-0x20],ebx
  4260c2:	jb     0x4260ca
  4260c4:	inc    DWORD PTR [ebp-0x24]
  4260c7:	sub    DWORD PTR [ebp-0x20],ebx
  4260ca:	dec    esi
  4260cb:	jne    0x4260b5
  4260cd:	mov    eax,0x644
  4260d2:	add    eax,DWORD PTR [ebp-0x38]
  4260d5:	mov    DWORD PTR [ebp-0x34],eax
  4260d8:	shl    DWORD PTR [ebp-0x24],0x4
  4260dc:	push   0x4
  4260de:	pop    esi
  4260df:	sub    edi,edi
  4260e1:	inc    edi
  4260e2:	mov    eax,edi
  4260e4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260e7:	call   0x4261a2
  4260ec:	test   al,0x1
  4260ee:	je     0x4260f3
  4260f0:	or     DWORD PTR [ebp-0x24],edi
  4260f3:	shl    edi,1
  4260f5:	dec    esi
  4260f6:	jne    0x4260e4
  4260f8:	jmp    0x4260fa
  4260fa:	inc    DWORD PTR [ebp-0x24]
  4260fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  426100:	add    ecx,0x2
  426103:	mov    edi,DWORD PTR [ebp-0x4]
  426106:	mov    eax,edi
  426108:	sub    eax,DWORD PTR [ebp+0x24]
  42610b:	cmp    DWORD PTR [ebp-0x24],eax
  42610e:	ja     0x42615a
  426110:	mov    esi,edi
  426112:	sub    esi,DWORD PTR [ebp-0x24]
  426115:	mov    edx,DWORD PTR [ebp+0x28]
  426118:	lods   al,BYTE PTR ds:[esi]
  426119:	stos   BYTE PTR es:[edi],al
  42611a:	cmp    edi,edx
  42611c:	jae    0x426121
  42611e:	dec    ecx
  42611f:	jne    0x426118
  426121:	mov    DWORD PTR [ebp-0x4],edi
  426124:	movzx  esi,al
  426127:	cmp    edi,DWORD PTR [ebp+0x28]
  42612a:	jb     0x425e8b
  426130:	call   0x42615f
  426135:	sub    eax,eax
  426137:	lea    ebp,[esp+0x3c]
  42613b:	mov    edx,DWORD PTR [ebp+0x20]
  42613e:	mov    esi,DWORD PTR [ebp-0x8]
  426141:	sub    esi,DWORD PTR [ebp+0x18]
  426144:	mov    DWORD PTR [edx],esi
  426146:	mov    dh,0xdd
  426148:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42614e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426154:	add    eax,0x188f893
  426159:	jmp    0x37cbec92
  42615e:	jmp    0x4260ee
  426160:	ja     0x4260ea
  426162:	mov    BYTE PTR [eax-0x6873ae74],cl
  426168:	(bad)  
  426169:	pop    ss
  42616a:	test   al,0xe1
  42616c:	mov    dh,0x5d
  42616e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426173:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426179:	test   al,0x3a
  42617b:	scas   al,BYTE PTR es:[edi]
  42617c:	popf   
  42617d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426183:	mov    dh,0xbd
  426185:	fwait
  426186:	les    esp,FWORD PTR [edx-0x75]
  426189:	(bad)  
  42618a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426192:	mov    al,ds:0x948b62c4
  426197:	popf   
  426198:	fwait
  426199:	mov    dh,0x3d
  42619b:	stos   DWORD PTR es:[edi],eax
  42619c:	mov    esi,0x34889d39
  4261a1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4261a7:	ja     0x426131
  4261a9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4261af:	mov    ecx,0x198f6818
  4261b4:	sbb    BYTE PTR [eax],cl
  4261b6:	test   al,0x74
  4261b8:	mov    ecx,0xfa55f918
  4261bd:	mov    dl,0xcc
  4261bf:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261c5:	test   al,0x88
  4261c7:	push   esp
  4261c8:	and    al,0x20
  4261ca:	mov    ecx,ebx
  4261cc:	movzx  edx,WORD PTR [ebp+0x0]
  4261d0:	shr    ecx,0xb
  4261d3:	imul   ecx,edx
  4261d6:	cmp    DWORD PTR [esp+0x20],ecx
  4261da:	jae    0x4261f3
  4261dc:	mov    ebx,ecx
  4261de:	mov    ecx,0x800
  4261e3:	sub    ecx,edx
  4261e5:	shr    ecx,0x5
  4261e8:	add    WORD PTR [ebp+0x0],cx
  4261ec:	add    eax,eax
  4261ee:	lea    ebp,[esp+0x40]
  4261f2:	ret    
  4261f3:	shr    edx,0x5
  4261f6:	sub    DWORD PTR [esp+0x20],ecx
  4261fa:	sub    ebx,ecx
  4261fc:	sub    WORD PTR [ebp+0x0],dx
  426200:	add    eax,eax
  426202:	add    eax,0x1
  426205:	lea    ebp,[esp+0x40]
  426209:	ret    
  42620a:	push   ebp
  42620b:	mov    ebp,esp
  42620d:	sub    esp,0x12c
  426213:	push   ebx
  426214:	push   esi
  426215:	push   edi
  426216:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42621d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	mov    DWORD PTR [ebp+0x8],eax
  42622a:	mov    ecx,DWORD PTR [ebp-0x10]
  42622d:	mov    ebx,0x75108ae
  426232:	xor    ecx,ebx
  426234:	mov    eax,0x3272f5
  426239:	add    ecx,eax
  42623b:	mov    DWORD PTR [ebp-0x24],ecx
  42623e:	mov    ecx,DWORD PTR [ebp-0x10]
  426241:	xor    ecx,ebx
  426243:	add    ecx,eax
  426245:	mov    DWORD PTR [ebp-0x40],ecx
  426248:	mov    ecx,DWORD PTR [ebp-0x10]
  42624b:	xor    ecx,ebx
  42624d:	add    ecx,eax
  42624f:	mov    DWORD PTR [ebp-0x3c],ecx
  426252:	mov    ecx,DWORD PTR [ebp-0x10]
  426255:	xor    ecx,ebx
  426257:	add    ecx,eax
  426259:	mov    DWORD PTR [ebp-0xd8],ecx
  42625f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426266:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42626d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426274:	push   0x25
  426276:	pop    ecx
  426277:	mov    DWORD PTR [ebp-0x30],ecx
  42627a:	mov    DWORD PTR [ebp-0x30],ecx
  42627d:	push   0x65
  42627f:	pop    ecx
  426280:	mov    DWORD PTR [ebp-0x30],ecx
  426283:	mov    DWORD PTR [ebp-0x30],ecx
  426286:	mov    DWORD PTR [ebp-0x30],0x4d
  42628d:	mov    DWORD PTR [ebp-0x30],0x43
  426294:	mov    ecx,DWORD PTR [ebp-0x10]
  426297:	xor    ecx,ebx
  426299:	add    ecx,eax
  42629b:	mov    DWORD PTR [ebp-0x30],ecx
  42629e:	mov    ecx,DWORD PTR [ebp-0x10]
  4262a1:	xor    ecx,ebx
  4262a3:	add    ecx,eax
  4262a5:	mov    DWORD PTR [ebp-0x30],ecx
  4262a8:	mov    DWORD PTR [ebp-0x28],0x258
  4262af:	mov    DWORD PTR [ebp-0x34],0x36
  4262b6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262bd:	lea    edi,[ebp-0x10c]
  4262c3:	lea    esi,[ebp-0x12c]
  4262c9:	call   0x426f89
  4262ce:	dec    DWORD PTR [ebp-0x14]
  4262d1:	jne    0x4262bd
  4262d3:	dec    DWORD PTR [ebp-0x34]
  4262d6:	jne    0x4262b6
  4262d8:	dec    DWORD PTR [ebp-0x28]
  4262db:	jne    0x4262af
  4262dd:	mov    DWORD PTR [ebp-0x28],0x400e
  4262e4:	mov    eax,DWORD PTR [ebp-0x10]
  4262e7:	xor    eax,ebx
  4262e9:	mov    esi,0x3272f5
  4262ee:	add    eax,esi
  4262f0:	mov    DWORD PTR [ebp-0x1c],eax
  4262f3:	mov    eax,DWORD PTR [ebp-0x10]
  4262f6:	and    DWORD PTR [ebp-0x94],0x0
  4262fd:	xor    eax,ebx
  4262ff:	add    eax,esi
  426301:	mov    DWORD PTR [ebp-0x38],eax
  426304:	mov    eax,fs:0x18
  42630a:	mov    DWORD PTR [ebp-0x94],eax
  426310:	mov    eax,DWORD PTR [eax+0x30]
  426313:	mov    DWORD PTR [ebp-0xcc],eax
  426319:	mov    eax,DWORD PTR [eax+0xc]
  42631c:	mov    DWORD PTR [ebp-0xc0],eax
  426322:	mov    eax,DWORD PTR [ebp+0x8]
  426325:	lea    ecx,[ebp-0x94]
  42632b:	mov    DWORD PTR [eax+0x1a0],ecx
  426331:	mov    eax,DWORD PTR [ebp+0x8]
  426334:	lea    ecx,[ebp-0xcc]
  42633a:	mov    DWORD PTR [eax+0x1a4],ecx
  426340:	mov    eax,DWORD PTR [ebp+0x8]
  426343:	push   DWORD PTR [ebp+0x8]
  426346:	lea    ecx,[ebp-0xc0]
  42634c:	mov    DWORD PTR [eax+0x1a8],ecx
  426352:	call   0x42874a
  426357:	mov    ecx,DWORD PTR [ebp-0x10]
  42635a:	xor    ecx,ebx
  42635c:	add    ecx,esi
  42635e:	cmp    ecx,eax
  426360:	je     0x4266e3
  426366:	mov    eax,DWORD PTR [ebp+0x8]
  426369:	mov    eax,DWORD PTR [eax+0x194]
  42636f:	mov    ecx,DWORD PTR [eax]
  426371:	mov    eax,DWORD PTR [ebp+0x8]
  426374:	mov    eax,DWORD PTR [eax+0x194]
  42637a:	mov    eax,DWORD PTR [eax]
  42637c:	add    eax,DWORD PTR [ecx+0x3c]
  42637f:	mov    ecx,DWORD PTR [ebp+0x8]
  426382:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426388:	lea    edx,[ebp-0xec]
  42638e:	push   edx
  42638f:	mov    edx,DWORD PTR [ebp+0x8]
  426392:	mov    edx,DWORD PTR [edx+0x18c]
  426398:	mov    edx,DWORD PTR [edx]
  42639a:	add    edx,DWORD PTR [eax+0x88]
  4263a0:	push   0x4
  4263a2:	push   DWORD PTR [eax+0x8c]
  4263a8:	push   edx
  4263a9:	call   DWORD PTR [ecx+0x1c]
  4263ac:	push   DWORD PTR [ebp+0x8]
  4263af:	xor    eax,eax
  4263b1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263bb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263c5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263cf:	mov    BYTE PTR [ebp-0x9c],0x83
  4263d6:	lea    edi,[ebp-0x9b]
  4263dc:	stos   DWORD PTR es:[edi],eax
  4263dd:	stos   WORD PTR es:[edi],ax
  4263df:	stos   BYTE PTR es:[edi],al
  4263e0:	xor    eax,eax
  4263e2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263ec:	mov    DWORD PTR [ebp-0xb8],0x12371120
  4263f6:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426400:	mov    BYTE PTR [ebp-0xb0],0x83
  426407:	lea    edi,[ebp-0xaf]
  42640d:	stos   DWORD PTR es:[edi],eax
  42640e:	stos   WORD PTR es:[edi],ax
  426410:	stos   BYTE PTR es:[edi],al
  426411:	mov    edi,DWORD PTR [ebp+0x8]
  426414:	mov    eax,DWORD PTR [ebp+0x8]
  426417:	mov    edx,DWORD PTR [eax+0x1b8]
  42641d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426424:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42642b:	mov    WORD PTR [ebp-0x60],0x8340
  426431:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42643b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426445:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42644f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426459:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426460:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426467:	mov    DWORD PTR [ebp-0x78],0x17401120
  42646e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426475:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42647c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426483:	call   0x428779
  426488:	push   eax
  426489:	mov    eax,DWORD PTR [ebp+0x8]
  42648c:	mov    eax,DWORD PTR [eax+0x1a8]
  426492:	push   DWORD PTR [eax]
  426494:	call   0x42841a
  426499:	test   eax,eax
  42649b:	jne    0x4264ed
  42649d:	mov    eax,DWORD PTR [ebp+0x8]
  4264a0:	mov    eax,DWORD PTR [eax+0x1e0]
  4264a6:	mov    edi,DWORD PTR [ebp+0x8]
  4264a9:	add    eax,0x4
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	mov    eax,DWORD PTR [ebp+0x8]
  4264b2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264b8:	call   0x428779
  4264bd:	push   eax
  4264be:	mov    eax,DWORD PTR [ebp-0x20]
  4264c1:	call   DWORD PTR [eax]
  4264c3:	test   eax,eax
  4264c5:	jne    0x4264ed
  4264c7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ca:	mov    eax,DWORD PTR [eax+0x1e0]
  4264d0:	mov    edi,DWORD PTR [ebp+0x8]
  4264d3:	add    eax,0x10
  4264d6:	mov    DWORD PTR [ebp-0x20],eax
  4264d9:	mov    eax,DWORD PTR [ebp+0x8]
  4264dc:	mov    edx,DWORD PTR [eax+0x1b8]
  4264e2:	call   0x428779
  4264e7:	push   eax
  4264e8:	mov    eax,DWORD PTR [ebp-0x20]
  4264eb:	call   DWORD PTR [eax]
  4264ed:	mov    eax,DWORD PTR [ebp-0x10]
  4264f0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264f3:	xor    eax,ebx
  4264f5:	add    eax,esi
  4264f7:	cmp    eax,ecx
  4264f9:	je     0x4266bc
  4264ff:	mov    eax,DWORD PTR [ebp-0x18]
  426502:	xor    eax,ebx
  426504:	mov    ecx,0xffcd8d0b
  426509:	sub    ecx,eax
  42650b:	add    ecx,DWORD PTR [ebp-0x28]
  42650e:	mov    eax,DWORD PTR [ebp-0x1c]
  426511:	cmp    eax,ecx
  426513:	ja     0x4266bc
  426519:	mov    DWORD PTR [ebp-0x34],0x0
  426520:	push   DWORD PTR [ebp+0x8]
  426523:	mov    edi,DWORD PTR [ebp+0x8]
  426526:	mov    eax,DWORD PTR [ebp+0x8]
  426529:	mov    edx,DWORD PTR [eax+0x1b4]
  42652f:	call   0x428779
  426534:	push   eax
  426535:	mov    eax,DWORD PTR [ebp+0x8]
  426538:	mov    eax,DWORD PTR [eax+0x1a8]
  42653e:	push   DWORD PTR [eax]
  426540:	call   0x42841a
  426545:	mov    ecx,DWORD PTR [ebp+0x8]
  426548:	mov    ecx,DWORD PTR [ecx+0x19c]
  42654e:	mov    DWORD PTR [ecx],eax
  426550:	mov    eax,DWORD PTR [ebp+0x8]
  426553:	mov    edi,DWORD PTR [eax+0x1e0]
  426559:	mov    esi,DWORD PTR [ebp+0x8]
  42655c:	xor    eax,eax
  42655e:	lea    edx,[ebp-0x7c]
  426561:	call   0x4287af
  426566:	push   eax
  426567:	mov    eax,DWORD PTR [ebp+0x8]
  42656a:	mov    eax,DWORD PTR [eax+0x19c]
  426570:	push   DWORD PTR [eax]
  426572:	call   DWORD PTR [edi+0x8]
  426575:	mov    DWORD PTR [ebp-0x20],eax
  426578:	mov    eax,DWORD PTR [ebp+0x8]
  42657b:	mov    edi,DWORD PTR [eax+0x1e0]
  426581:	mov    esi,DWORD PTR [ebp+0x8]
  426584:	xor    eax,eax
  426586:	lea    edx,[ebp-0x90]
  42658c:	call   0x4287af
  426591:	push   eax
  426592:	mov    eax,DWORD PTR [ebp+0x8]
  426595:	mov    eax,DWORD PTR [eax+0x19c]
  42659b:	push   DWORD PTR [eax]
  42659d:	call   DWORD PTR [edi+0x8]
  4265a0:	mov    eax,DWORD PTR [ebp+0x8]
  4265a3:	mov    edi,DWORD PTR [eax+0x1e0]
  4265a9:	mov    esi,DWORD PTR [ebp+0x8]
  4265ac:	xor    eax,eax
  4265ae:	lea    edx,[ebp-0xa8]
  4265b4:	call   0x4287af
  4265b9:	push   eax
  4265ba:	mov    eax,DWORD PTR [ebp+0x8]
  4265bd:	mov    eax,DWORD PTR [eax+0x19c]
  4265c3:	push   DWORD PTR [eax]
  4265c5:	call   DWORD PTR [edi+0x8]
  4265c8:	and    DWORD PTR [ebp-0x8],0x0
  4265cc:	mov    DWORD PTR [ebp-0x48],eax
  4265cf:	mov    eax,DWORD PTR [ebp-0x8]
  4265d2:	and    eax,0x7
  4265d5:	add    eax,0x31
  4265d8:	push   eax
  4265d9:	call   DWORD PTR [ebp-0x20]
  4265dc:	test   eax,eax
  4265de:	je     0x426622
  4265e0:	mov    eax,DWORD PTR [ebp-0x8]
  4265e3:	push   0x19
  4265e5:	xor    edx,edx
  4265e7:	pop    ecx
  4265e8:	div    ecx
  4265ea:	add    dl,0x41
  4265ed:	movzx  eax,dl
  4265f0:	push   eax
  4265f1:	call   DWORD PTR [ebp-0x48]
  4265f4:	test   eax,eax
  4265f6:	jne    0x426622
  4265f8:	mov    eax,DWORD PTR [ebp+0x8]
  4265fb:	mov    edi,DWORD PTR [eax+0x1e0]
  426601:	mov    esi,DWORD PTR [ebp+0x8]
  426604:	xor    eax,eax
  426606:	lea    edx,[ebp-0x68]
  426609:	call   0x4287af
  42660e:	push   eax
  42660f:	mov    eax,DWORD PTR [ebp+0x8]
  426612:	mov    eax,DWORD PTR [eax+0x198]
  426618:	push   DWORD PTR [eax]
  42661a:	call   DWORD PTR [edi+0x8]
  42661d:	mov    DWORD PTR [ebp-0x14],eax
  426620:	jmp    0x426626
  426622:	and    DWORD PTR [ebp-0x14],0x0
  426626:	inc    DWORD PTR [ebp-0x8]
  426629:	cmp    DWORD PTR [ebp-0x8],0x10
  42662d:	jb     0x4265cf
  42662f:	mov    eax,DWORD PTR [ebp-0x18]
  426632:	mov    esi,DWORD PTR [ebp+0x8]
  426635:	xor    eax,ebx
  426637:	mov    edi,0x3272f5
  42663c:	add    eax,edi
  42663e:	lea    edx,[ebp-0x10c]
  426644:	call   0x4287af
  426649:	push   eax
  42664a:	mov    eax,DWORD PTR [ebp-0x10]
  42664d:	mov    esi,DWORD PTR [ebp+0x8]
  426650:	xor    eax,ebx
  426652:	add    eax,edi
  426654:	lea    edx,[ebp-0x12c]
  42665a:	call   0x4287af
  42665f:	push   eax
  426660:	call   DWORD PTR [ebp-0x14]
  426663:	mov    ecx,DWORD PTR [ebp-0x10]
  426666:	xor    ecx,ebx
  426668:	add    ecx,edi
  42666a:	cmp    ecx,eax
  42666c:	jne    0x426675
  42666e:	mov    DWORD PTR [ebp-0x34],0x1
  426675:	mov    eax,DWORD PTR [ebp-0x18]
  426678:	mov    ecx,DWORD PTR [ebp-0x1c]
  42667b:	xor    eax,ebx
  42667d:	lea    eax,[eax+ecx*1+0x3272f5]
  426684:	mov    DWORD PTR [ebp-0x1c],eax
  426687:	mov    eax,DWORD PTR [ebp-0x34]
  42668a:	test   eax,eax
  42668c:	je     0x4266a0
  42668e:	mov    eax,DWORD PTR [ebp-0x18]
  426691:	mov    ecx,DWORD PTR [ebp-0x38]
  426694:	xor    eax,ebx
  426696:	lea    eax,[eax+ecx*1+0x3272f5]
  42669d:	mov    DWORD PTR [ebp-0x38],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x18]
  4266a3:	xor    eax,ebx
  4266a5:	mov    ecx,0xffcd8d0b
  4266aa:	sub    ecx,eax
  4266ac:	add    ecx,DWORD PTR [ebp-0x28]
  4266af:	mov    eax,DWORD PTR [ebp-0x1c]
  4266b2:	cmp    eax,ecx
  4266b4:	jbe    0x426519
  4266ba:	mov    esi,edi
  4266bc:	mov    eax,DWORD PTR [ebp-0x38]
  4266bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266c2:	cmp    ecx,eax
  4266c4:	jne    0x4266d7
  4266c6:	push   DWORD PTR [ebp+0x8]
  4266c9:	lea    eax,[ebp-0x40]
  4266cc:	push   eax
  4266cd:	call   0x42921e
  4266d2:	mov    DWORD PTR [ebp-0x24],eax
  4266d5:	jmp    0x4266e3
  4266d7:	mov    eax,DWORD PTR [ebp-0x24]
  4266da:	mov    ecx,DWORD PTR [ebp-0x18]
  4266dd:	xor    ecx,ebx
  4266df:	add    ecx,esi
  4266e1:	xor    DWORD PTR [eax],ecx
  4266e3:	mov    eax,DWORD PTR [ebp-0x10]
  4266e6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266e9:	xor    eax,ebx
  4266eb:	add    eax,esi
  4266ed:	cmp    eax,ecx
  4266ef:	je     0x426e67
  4266f5:	mov    eax,DWORD PTR [ebp-0x10]
  4266f8:	mov    ecx,DWORD PTR [ebp-0x40]
  4266fb:	xor    eax,ebx
  4266fd:	add    eax,esi
  4266ff:	cmp    eax,ecx
  426701:	je     0x426e67
  426707:	mov    eax,DWORD PTR [ebp-0x10]
  42670a:	xor    eax,ebx
  42670c:	add    eax,esi
  42670e:	jmp    0x42672c
  426710:	mov    edi,DWORD PTR [ebp-0x24]
  426713:	mov    cl,al
  426715:	and    cl,0x1f
  426718:	or     dl,0xff
  42671b:	sub    dl,cl
  42671d:	add    BYTE PTR [edi+eax*1],dl
  426720:	mov    ecx,DWORD PTR [ebp-0x18]
  426723:	xor    ecx,ebx
  426725:	lea    eax,[eax+ecx*1+0x3272f5]
  42672c:	mov    ecx,DWORD PTR [ebp-0x40]
  42672f:	cmp    eax,ecx
  426731:	jb     0x426710
  426733:	mov    eax,DWORD PTR [ebp-0x40]
  426736:	mov    DWORD PTR [ebp-0x28],eax
  426739:	mov    eax,DWORD PTR [ebp-0x24]
  42673c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426743:	mov    DWORD PTR [ebp-0xd4],eax
  426749:	mov    edi,0xf89c85a2
  42674e:	mov    DWORD PTR [ebp-0x2c],edi
  426751:	mov    eax,DWORD PTR [ebp-0x38]
  426754:	xor    eax,ebx
  426756:	add    eax,esi
  426758:	mov    DWORD PTR [ebp-0xc],eax
  42675b:	mov    eax,DWORD PTR [ebp-0x38]
  42675e:	xor    eax,ebx
  426760:	add    eax,esi
  426762:	mov    DWORD PTR [ebp-0x8],eax
  426765:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42676c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426773:	mov    eax,DWORD PTR [ebp-0x38]
  426776:	mov    ecx,DWORD PTR [ebp-0x28]
  426779:	xor    eax,ebx
  42677b:	add    eax,esi
  42677d:	cmp    ecx,eax
  42677f:	je     0x42697e
  426785:	jmp    0x42695a
  42678a:	mov    ecx,DWORD PTR [ebp-0xc]
  42678d:	mov    eax,DWORD PTR [ebp-0x28]
  426790:	sub    eax,ecx
  426792:	mov    ecx,DWORD PTR [ebp-0x48]
  426795:	xor    ecx,ebx
  426797:	add    ecx,esi
  426799:	xor    edx,edx
  42679b:	div    ecx
  42679d:	mov    DWORD PTR [ebp-0x8],eax
  4267a0:	mov    eax,DWORD PTR [ebp-0x4c]
  4267a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4267a6:	xor    eax,ebx
  4267a8:	add    eax,esi
  4267aa:	cmp    ecx,eax
  4267ac:	jbe    0x4267b8
  4267ae:	mov    eax,DWORD PTR [ebp-0x4c]
  4267b1:	xor    eax,ebx
  4267b3:	add    eax,esi
  4267b5:	mov    DWORD PTR [ebp-0x8],eax
  4267b8:	mov    eax,DWORD PTR [ebp-0x48]
  4267bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267be:	xor    eax,ebx
  4267c0:	add    eax,esi
  4267c2:	imul   eax,ecx
  4267c5:	mov    DWORD PTR [ebp-0x8],eax
  4267c8:	mov    eax,DWORD PTR [ebp-0x38]
  4267cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ce:	xor    eax,ebx
  4267d0:	add    eax,esi
  4267d2:	cmp    ecx,eax
  4267d4:	je     0x426948
  4267da:	mov    eax,DWORD PTR [ebp-0x8]
  4267dd:	mov    DWORD PTR [ebp-0x14],eax
  4267e0:	mov    eax,DWORD PTR [ebp-0xc]
  4267e3:	add    eax,DWORD PTR [ebp-0xd4]
  4267e9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4267f0:	mov    DWORD PTR [ebp-0x34],edi
  4267f3:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  4267fd:	mov    DWORD PTR [ebp-0x8],eax
  426800:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426807:	mov    DWORD PTR [ebp-0x1c],edi
  42680a:	mov    eax,DWORD PTR [ebp-0x20]
  42680d:	xor    eax,ebx
  42680f:	add    eax,esi
  426811:	jmp    0x426907
  426816:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426820:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42682a:	mov    eax,DWORD PTR [ebp-0x1c]
  42682d:	mov    ecx,DWORD PTR [ebp-0x44]
  426830:	xor    eax,ebx
  426832:	add    eax,esi
  426834:	imul   eax,ecx
  426837:	mov    ecx,DWORD PTR [ebp-0x8]
  42683a:	mov    al,BYTE PTR [eax+ecx*1]
  42683d:	mov    BYTE PTR [ebp-0x2],al
  426840:	mov    eax,DWORD PTR [ebp-0x1c]
  426843:	mov    ecx,DWORD PTR [ebp-0x44]
  426846:	xor    eax,ebx
  426848:	add    eax,esi
  42684a:	imul   eax,ecx
  42684d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426853:	xor    ecx,ebx
  426855:	add    eax,ecx
  426857:	mov    ecx,DWORD PTR [ebp-0x8]
  42685a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426862:	mov    ecx,DWORD PTR [ebp-0xe0]
  426868:	xor    ecx,ebx
  42686a:	lea    eax,[ecx+eax*1+0x3272f5]
  426871:	movzx  ecx,BYTE PTR [ebp-0x2]
  426875:	xor    ecx,eax
  426877:	mov    BYTE PTR [ebp-0x2],cl
  42687a:	mov    al,BYTE PTR [ebp-0x2]
  42687d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426880:	mov    edx,DWORD PTR [ebp-0x44]
  426883:	xor    ecx,ebx
  426885:	add    ecx,esi
  426887:	imul   ecx,edx
  42688a:	mov    edx,DWORD PTR [ebp-0x8]
  42688d:	mov    BYTE PTR [ecx+edx*1],al
  426890:	mov    eax,DWORD PTR [ebp-0x1c]
  426893:	mov    ecx,DWORD PTR [ebp-0x44]
  426896:	xor    eax,ebx
  426898:	add    eax,esi
  42689a:	imul   eax,ecx
  42689d:	mov    ecx,DWORD PTR [ebp-0x8]
  4268a0:	mov    al,BYTE PTR [eax+ecx*1]
  4268a3:	mov    BYTE PTR [ebp-0x2],al
  4268a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4268a9:	mov    ecx,DWORD PTR [ebp-0x44]
  4268ac:	xor    eax,ebx
  4268ae:	add    eax,esi
  4268b0:	imul   eax,ecx
  4268b3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268b6:	xor    ecx,ebx
  4268b8:	add    eax,ecx
  4268ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4268bd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268c5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268cb:	xor    ecx,ebx
  4268cd:	lea    eax,[ecx+eax*1+0x3272f5]
  4268d4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268d8:	xor    ecx,eax
  4268da:	mov    BYTE PTR [ebp-0x2],cl
  4268dd:	mov    al,BYTE PTR [ebp-0x2]
  4268e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268e3:	mov    edx,DWORD PTR [ebp-0x44]
  4268e6:	xor    ecx,ebx
  4268e8:	add    ecx,esi
  4268ea:	imul   ecx,edx
  4268ed:	mov    edx,DWORD PTR [ebp-0x8]
  4268f0:	mov    BYTE PTR [ecx+edx*1],al
  4268f3:	mov    eax,DWORD PTR [ebp-0x30]
  4268f6:	mov    ecx,DWORD PTR [ebp-0x34]
  4268f9:	xor    eax,ebx
  4268fb:	xor    ecx,ebx
  4268fd:	add    eax,esi
  4268ff:	add    ecx,esi
  426901:	imul   eax,ecx
  426904:	add    eax,DWORD PTR [ebp-0x44]
  426907:	mov    DWORD PTR [ebp-0x44],eax
  42690a:	mov    eax,DWORD PTR [ebp-0x44]
  42690d:	mov    ecx,DWORD PTR [ebp-0x14]
  426910:	cmp    ecx,eax
  426912:	jb     0x426816
  426918:	mov    eax,DWORD PTR [ebp-0x34]
  42691b:	mov    ecx,DWORD PTR [ebp-0x14]
  42691e:	xor    eax,ebx
  426920:	add    eax,esi
  426922:	imul   eax,ecx
  426925:	mov    ecx,DWORD PTR [ebp-0x20]
  426928:	xor    ecx,ebx
  42692a:	add    ecx,esi
  42692c:	or     eax,ecx
  42692e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426931:	xor    ecx,ebx
  426933:	add    eax,ecx
  426935:	mov    ecx,DWORD PTR [ebp-0x2c]
  426938:	xor    ecx,ebx
  42693a:	add    eax,ecx
  42693c:	mov    ecx,DWORD PTR [ebp-0xc]
  42693f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426946:	jmp    0x426957
  426948:	mov    eax,DWORD PTR [ebp-0x2c]
  42694b:	mov    ecx,DWORD PTR [ebp-0xc]
  42694e:	xor    eax,ebx
  426950:	lea    eax,[eax+ecx*1+0x3272f5]
  426957:	mov    DWORD PTR [ebp-0xc],eax
  42695a:	mov    eax,DWORD PTR [ebp-0x2c]
  42695d:	xor    eax,ebx
  42695f:	mov    ecx,0xffcd8d0b
  426964:	sub    ecx,eax
  426966:	add    ecx,DWORD PTR [ebp-0x28]
  426969:	mov    eax,DWORD PTR [ebp-0x2c]
  42696c:	mov    edx,DWORD PTR [ebp-0xc]
  42696f:	xor    eax,ebx
  426971:	add    eax,esi
  426973:	imul   eax,edx
  426976:	cmp    eax,ecx
  426978:	jbe    0x42678a
  42697e:	mov    eax,DWORD PTR [ebp-0x10]
  426981:	mov    ecx,DWORD PTR [ebp-0x40]
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	mov    edx,DWORD PTR [ebp-0x54]
  42698a:	mov    eax,DWORD PTR [eax+0x1e0]
  426990:	xor    edx,ebx
  426992:	add    edx,esi
  426994:	push   edx
  426995:	mov    edx,DWORD PTR [ebp-0x3c]
  426998:	xor    edx,ebx
  42699a:	add    edx,esi
  42699c:	push   edx
  42699d:	push   ecx
  42699e:	mov    DWORD PTR [ebp-0x30],ecx
  4269a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4269a4:	xor    ecx,ebx
  4269a6:	add    ecx,esi
  4269a8:	push   ecx
  4269a9:	call   DWORD PTR [eax+0x14]
  4269ac:	mov    edi,eax
  4269ae:	mov    eax,DWORD PTR [ebp-0x10]
  4269b1:	xor    eax,ebx
  4269b3:	add    eax,esi
  4269b5:	cmp    eax,edi
  4269b7:	je     0x426a12
  4269b9:	mov    eax,DWORD PTR [ebp-0x10]
  4269bc:	jmp    0x4269df
  4269be:	mov    ecx,DWORD PTR [ebp-0x24]
  4269c1:	xor    eax,ebx
  4269c3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269ca:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269d4:	xor    ecx,ebx
  4269d6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269dd:	xor    eax,ebx
  4269df:	mov    ecx,DWORD PTR [ebp-0x40]
  4269e2:	sub    ecx,esi
  4269e4:	xor    ecx,ebx
  4269e6:	cmp    eax,ecx
  4269e8:	jne    0x4269be
  4269ea:	mov    eax,DWORD PTR [ebp+0x8]
  4269ed:	mov    ecx,DWORD PTR [ebp-0x50]
  4269f0:	mov    eax,DWORD PTR [eax+0x1e0]
  4269f6:	xor    ecx,ebx
  4269f8:	add    ecx,esi
  4269fa:	push   ecx
  4269fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4269fe:	xor    ecx,ebx
  426a00:	add    ecx,esi
  426a02:	push   ecx
  426a03:	push   DWORD PTR [ebp-0x24]
  426a06:	call   DWORD PTR [eax+0x18]
  426a09:	mov    eax,DWORD PTR [ebp-0x30]
  426a0c:	mov    DWORD PTR [ebp-0x24],edi
  426a0f:	mov    DWORD PTR [ebp-0x40],eax
  426a12:	mov    edi,DWORD PTR [ebp-0x24]
  426a15:	mov    eax,DWORD PTR [ebp-0x18]
  426a18:	mov    ecx,DWORD PTR [ebp-0x10]
  426a1b:	xor    eax,ebx
  426a1d:	mov    DWORD PTR [ebp-0x30],edi
  426a20:	add    eax,esi
  426a22:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a29:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a30:	jmp    0x426a64
  426a32:	xor    ecx,ebx
  426a34:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a3b:	xor    dl,0x7e
  426a3e:	add    dl,0x3
  426a41:	mov    DWORD PTR [ebp-0x3c],ecx
  426a44:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a4c:	movzx  edx,dl
  426a4f:	cmp    ecx,edx
  426a51:	jne    0x426a6e
  426a53:	mov    ecx,DWORD PTR [ebp-0x18]
  426a56:	mov    edx,DWORD PTR [ebp-0x3c]
  426a59:	xor    ecx,ebx
  426a5b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a62:	xor    ecx,ebx
  426a64:	cmp    ecx,0xf89c85bd
  426a6a:	jne    0x426a32
  426a6c:	jmp    0x426a75
  426a6e:	mov    eax,DWORD PTR [ebp-0x10]
  426a71:	xor    eax,ebx
  426a73:	add    eax,esi
  426a75:	mov    ecx,DWORD PTR [ebp-0x10]
  426a78:	xor    ecx,ebx
  426a7a:	add    ecx,esi
  426a7c:	cmp    ecx,eax
  426a7e:	je     0x426bf1
  426a84:	mov    eax,DWORD PTR [edi+0x8]
  426a87:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a8e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a95:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a9c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426aa3:	mov    DWORD PTR [ebp-0x14],eax
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	mov    ecx,DWORD PTR [ebp-0x20]
  426aac:	xor    ecx,ebx
  426aae:	add    ecx,esi
  426ab0:	push   ecx
  426ab1:	mov    ecx,DWORD PTR [ebp-0x48]
  426ab4:	mov    eax,DWORD PTR [eax+0x1e0]
  426aba:	xor    ecx,ebx
  426abc:	add    ecx,esi
  426abe:	push   ecx
  426abf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ac2:	xor    ecx,ebx
  426ac4:	add    ecx,esi
  426ac6:	push   ecx
  426ac7:	mov    ecx,DWORD PTR [ebp-0xc]
  426aca:	xor    ecx,ebx
  426acc:	add    ecx,esi
  426ace:	push   ecx
  426acf:	call   DWORD PTR [eax+0x14]
  426ad2:	mov    edi,eax
  426ad4:	mov    eax,DWORD PTR [ebp+0x8]
  426ad7:	mov    ecx,DWORD PTR [ebp-0x20]
  426ada:	mov    eax,DWORD PTR [eax+0x1e0]
  426ae0:	xor    ecx,ebx
  426ae2:	add    ecx,esi
  426ae4:	push   ecx
  426ae5:	mov    ecx,DWORD PTR [ebp-0x48]
  426ae8:	xor    ecx,ebx
  426aea:	add    ecx,esi
  426aec:	push   ecx
  426aed:	mov    ecx,DWORD PTR [ebp-0xc]
  426af0:	push   DWORD PTR [ebp-0x14]
  426af3:	xor    ecx,ebx
  426af5:	add    ecx,esi
  426af7:	push   ecx
  426af8:	call   DWORD PTR [eax+0x14]
  426afb:	mov    ecx,DWORD PTR [ebp-0xc]
  426afe:	xor    ecx,ebx
  426b00:	add    ecx,esi
  426b02:	mov    DWORD PTR [ebp-0x20],eax
  426b05:	cmp    ecx,edi
  426b07:	je     0x426e94
  426b0d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b10:	xor    ecx,ebx
  426b12:	add    ecx,esi
  426b14:	cmp    ecx,eax
  426b16:	je     0x426e94
  426b1c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b23:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b2a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b2d:	xor    cl,0xae
  426b30:	sub    cl,0xb
  426b33:	mov    BYTE PTR [edi],cl
  426b35:	mov    ecx,DWORD PTR [ebp-0xc]
  426b38:	xor    cl,0xae
  426b3b:	sub    cl,0xb
  426b3e:	mov    BYTE PTR [edi+0x1],cl
  426b41:	mov    ecx,DWORD PTR [ebp-0x54]
  426b44:	xor    cl,0xae
  426b47:	sub    cl,0xb
  426b4a:	mov    BYTE PTR [edi+0x2],cl
  426b4d:	and    DWORD PTR [ebp-0xc8],0x0
  426b54:	and    DWORD PTR [ebp-0xdc],0x0
  426b5b:	lea    ecx,[ebp-0xdc]
  426b61:	push   ecx
  426b62:	push   DWORD PTR [ebp-0x14]
  426b65:	push   eax
  426b66:	lea    eax,[ebp-0xc8]
  426b6c:	push   eax
  426b6d:	mov    eax,DWORD PTR [ebp-0x30]
  426b70:	push   DWORD PTR [eax+0xc]
  426b73:	mov    eax,DWORD PTR [ebp-0x24]
  426b76:	add    eax,0x10
  426b79:	push   eax
  426b7a:	push   edi
  426b7b:	call   0x425e21
  426b80:	mov    DWORD PTR [ebp-0x3c],eax
  426b83:	mov    eax,DWORD PTR [ebp+0x8]
  426b86:	mov    ecx,DWORD PTR [ebp-0x50]
  426b89:	mov    eax,DWORD PTR [eax+0x1e0]
  426b8f:	xor    ecx,ebx
  426b91:	add    ecx,esi
  426b93:	push   ecx
  426b94:	mov    ecx,DWORD PTR [ebp-0xc]
  426b97:	xor    ecx,ebx
  426b99:	add    ecx,esi
  426b9b:	push   ecx
  426b9c:	push   edi
  426b9d:	call   DWORD PTR [eax+0x18]
  426ba0:	mov    eax,DWORD PTR [ebp-0x3c]
  426ba3:	add    eax,0xffcd8d0b
  426ba8:	xor    eax,ebx
  426baa:	cmp    eax,0xf89c85a5
  426baf:	mov    eax,DWORD PTR [ebp+0x8]
  426bb2:	mov    eax,DWORD PTR [eax+0x1e0]
  426bb8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bbb:	jne    0x426bde
  426bbd:	xor    ecx,ebx
  426bbf:	add    ecx,esi
  426bc1:	push   ecx
  426bc2:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc5:	xor    ecx,ebx
  426bc7:	add    ecx,esi
  426bc9:	push   ecx
  426bca:	push   DWORD PTR [ebp-0x24]
  426bcd:	call   DWORD PTR [eax+0x18]
  426bd0:	mov    eax,DWORD PTR [ebp-0x20]
  426bd3:	mov    DWORD PTR [ebp-0x24],eax
  426bd6:	mov    eax,DWORD PTR [ebp-0x14]
  426bd9:	mov    DWORD PTR [ebp-0x40],eax
  426bdc:	jmp    0x426bf1
  426bde:	xor    ecx,ebx
  426be0:	add    ecx,esi
  426be2:	push   ecx
  426be3:	mov    ecx,DWORD PTR [ebp-0xc]
  426be6:	xor    ecx,ebx
  426be8:	add    ecx,esi
  426bea:	push   ecx
  426beb:	push   DWORD PTR [ebp-0x20]
  426bee:	call   DWORD PTR [eax+0x18]
  426bf1:	mov    eax,DWORD PTR [ebp-0x40]
  426bf4:	mov    DWORD PTR [ebp-0x38],eax
  426bf7:	mov    eax,DWORD PTR [ebp-0x24]
  426bfa:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426c01:	mov    DWORD PTR [ebp-0x3c],eax
  426c04:	mov    edi,0xf89c85a2
  426c09:	mov    DWORD PTR [ebp-0x2c],edi
  426c0c:	mov    eax,DWORD PTR [ebp-0x28]
  426c0f:	xor    eax,ebx
  426c11:	add    eax,esi
  426c13:	mov    DWORD PTR [ebp-0xc],eax
  426c16:	mov    eax,DWORD PTR [ebp-0x28]
  426c19:	xor    eax,ebx
  426c1b:	add    eax,esi
  426c1d:	mov    DWORD PTR [ebp-0x14],eax
  426c20:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c27:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c2e:	mov    eax,DWORD PTR [ebp-0x28]
  426c31:	mov    ecx,DWORD PTR [ebp-0x38]
  426c34:	xor    eax,ebx
  426c36:	add    eax,esi
  426c38:	cmp    ecx,eax
  426c3a:	je     0x426e30
  426c40:	jmp    0x426e0c
  426c45:	mov    ecx,DWORD PTR [ebp-0xc]
  426c48:	mov    eax,DWORD PTR [ebp-0x38]
  426c4b:	sub    eax,ecx
  426c4d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c50:	xor    ecx,ebx
  426c52:	add    ecx,esi
  426c54:	xor    edx,edx
  426c56:	div    ecx
  426c58:	mov    DWORD PTR [ebp-0x14],eax
  426c5b:	mov    eax,DWORD PTR [ebp-0x20]
  426c5e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c61:	xor    eax,ebx
  426c63:	add    eax,esi
  426c65:	cmp    ecx,eax
  426c67:	jbe    0x426c73
  426c69:	mov    eax,DWORD PTR [ebp-0x20]
  426c6c:	xor    eax,ebx
  426c6e:	add    eax,esi
  426c70:	mov    DWORD PTR [ebp-0x14],eax
  426c73:	mov    eax,DWORD PTR [ebp-0x48]
  426c76:	mov    ecx,DWORD PTR [ebp-0x14]
  426c79:	xor    eax,ebx
  426c7b:	add    eax,esi
  426c7d:	imul   eax,ecx
  426c80:	mov    DWORD PTR [ebp-0x14],eax
  426c83:	mov    eax,DWORD PTR [ebp-0x28]
  426c86:	mov    ecx,DWORD PTR [ebp-0x14]
  426c89:	xor    eax,ebx
  426c8b:	add    eax,esi
  426c8d:	cmp    ecx,eax
  426c8f:	je     0x426dfa
  426c95:	mov    eax,DWORD PTR [ebp-0x14]
  426c98:	mov    DWORD PTR [ebp-0x34],eax
  426c9b:	mov    eax,DWORD PTR [ebp-0xc]
  426c9e:	add    eax,DWORD PTR [ebp-0x3c]
  426ca1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426ca8:	mov    DWORD PTR [ebp-0x14],edi
  426cab:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426cb2:	mov    DWORD PTR [ebp-0x1c],eax
  426cb5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426cbc:	mov    DWORD PTR [ebp-0x8],edi
  426cbf:	mov    eax,DWORD PTR [ebp-0x4c]
  426cc2:	xor    eax,ebx
  426cc4:	add    eax,esi
  426cc6:	jmp    0x426db9
  426ccb:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426cd5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426cdf:	mov    eax,DWORD PTR [ebp-0x8]
  426ce2:	mov    ecx,DWORD PTR [ebp-0x18]
  426ce5:	xor    eax,ebx
  426ce7:	add    eax,esi
  426ce9:	imul   eax,ecx
  426cec:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cef:	mov    al,BYTE PTR [eax+ecx*1]
  426cf2:	mov    BYTE PTR [ebp-0x1],al
  426cf5:	mov    eax,DWORD PTR [ebp-0x8]
  426cf8:	mov    ecx,DWORD PTR [ebp-0x18]
  426cfb:	xor    eax,ebx
  426cfd:	add    eax,esi
  426cff:	imul   eax,ecx
  426d02:	mov    ecx,DWORD PTR [ebp-0x54]
  426d05:	xor    ecx,ebx
  426d07:	add    eax,ecx
  426d09:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d0c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d14:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d1a:	xor    ecx,ebx
  426d1c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d23:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d27:	xor    ecx,eax
  426d29:	mov    BYTE PTR [ebp-0x1],cl
  426d2c:	mov    al,BYTE PTR [ebp-0x1]
  426d2f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d32:	mov    edx,DWORD PTR [ebp-0x18]
  426d35:	xor    ecx,ebx
  426d37:	add    ecx,esi
  426d39:	imul   ecx,edx
  426d3c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d3f:	mov    BYTE PTR [ecx+edx*1],al
  426d42:	mov    eax,DWORD PTR [ebp-0x8]
  426d45:	mov    ecx,DWORD PTR [ebp-0x18]
  426d48:	xor    eax,ebx
  426d4a:	add    eax,esi
  426d4c:	imul   eax,ecx
  426d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d52:	mov    al,BYTE PTR [eax+ecx*1]
  426d55:	mov    BYTE PTR [ebp-0x1],al
  426d58:	mov    eax,DWORD PTR [ebp-0x8]
  426d5b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d5e:	xor    eax,ebx
  426d60:	add    eax,esi
  426d62:	imul   eax,ecx
  426d65:	mov    ecx,DWORD PTR [ebp-0x14]
  426d68:	xor    ecx,ebx
  426d6a:	add    eax,ecx
  426d6c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d6f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d77:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d7d:	xor    ecx,ebx
  426d7f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d86:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d8a:	xor    ecx,eax
  426d8c:	mov    BYTE PTR [ebp-0x1],cl
  426d8f:	mov    al,BYTE PTR [ebp-0x1]
  426d92:	mov    ecx,DWORD PTR [ebp-0x8]
  426d95:	mov    edx,DWORD PTR [ebp-0x18]
  426d98:	xor    ecx,ebx
  426d9a:	add    ecx,esi
  426d9c:	imul   ecx,edx
  426d9f:	mov    edx,DWORD PTR [ebp-0x1c]
  426da2:	mov    BYTE PTR [ecx+edx*1],al
  426da5:	mov    eax,DWORD PTR [ebp-0x30]
  426da8:	mov    ecx,DWORD PTR [ebp-0x14]
  426dab:	xor    eax,ebx
  426dad:	xor    ecx,ebx
  426daf:	add    eax,esi
  426db1:	add    ecx,esi
  426db3:	imul   eax,ecx
  426db6:	add    eax,DWORD PTR [ebp-0x18]
  426db9:	mov    DWORD PTR [ebp-0x18],eax
  426dbc:	mov    eax,DWORD PTR [ebp-0x18]
  426dbf:	mov    ecx,DWORD PTR [ebp-0x34]
  426dc2:	cmp    ecx,eax
  426dc4:	jb     0x426ccb
  426dca:	mov    eax,DWORD PTR [ebp-0x14]
  426dcd:	mov    ecx,DWORD PTR [ebp-0x34]
  426dd0:	xor    eax,ebx
  426dd2:	add    eax,esi
  426dd4:	imul   eax,ecx
  426dd7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dda:	xor    ecx,ebx
  426ddc:	add    ecx,esi
  426dde:	or     eax,ecx
  426de0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426de3:	xor    ecx,ebx
  426de5:	add    eax,ecx
  426de7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dea:	xor    ecx,ebx
  426dec:	add    eax,ecx
  426dee:	mov    ecx,DWORD PTR [ebp-0xc]
  426df1:	lea    eax,[eax+ecx*1+0x64e5ea]
  426df8:	jmp    0x426e09
  426dfa:	mov    eax,DWORD PTR [ebp-0x2c]
  426dfd:	mov    ecx,DWORD PTR [ebp-0xc]
  426e00:	xor    eax,ebx
  426e02:	lea    eax,[eax+ecx*1+0x3272f5]
  426e09:	mov    DWORD PTR [ebp-0xc],eax
  426e0c:	mov    eax,DWORD PTR [ebp-0x2c]
  426e0f:	xor    eax,ebx
  426e11:	mov    ecx,0xffcd8d0b
  426e16:	sub    ecx,eax
  426e18:	add    ecx,DWORD PTR [ebp-0x38]
  426e1b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e1e:	mov    edx,DWORD PTR [ebp-0xc]
  426e21:	xor    eax,ebx
  426e23:	add    eax,esi
  426e25:	imul   eax,edx
  426e28:	cmp    eax,ecx
  426e2a:	jbe    0x426c45
  426e30:	push   DWORD PTR [ebp+0x8]
  426e33:	mov    eax,DWORD PTR [ebp+0x8]
  426e36:	push   DWORD PTR [eax+0x1cc]
  426e3c:	lea    eax,[ebp-0xd8]
  426e42:	push   eax
  426e43:	mov    eax,DWORD PTR [ebp+0x8]
  426e46:	mov    eax,DWORD PTR [eax+0x1c4]
  426e4c:	push   DWORD PTR [eax]
  426e4e:	mov    eax,DWORD PTR [ebp+0x8]
  426e51:	mov    eax,DWORD PTR [eax+0x1c0]
  426e57:	push   DWORD PTR [eax]
  426e59:	push   DWORD PTR [ebp-0x40]
  426e5c:	push   DWORD PTR [ebp-0x24]
  426e5f:	call   0x4278f6
  426e64:	mov    DWORD PTR [ebp-0x3c],eax
  426e67:	mov    eax,DWORD PTR [ebp-0x10]
  426e6a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e6d:	xor    eax,ebx
  426e6f:	add    eax,esi
  426e71:	cmp    eax,ecx
  426e73:	je     0x426e94
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	mov    ecx,DWORD PTR [ebp-0x50]
  426e7b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e81:	xor    ecx,ebx
  426e83:	add    ecx,esi
  426e85:	push   ecx
  426e86:	mov    ecx,DWORD PTR [ebp-0x10]
  426e89:	xor    ecx,ebx
  426e8b:	add    ecx,esi
  426e8d:	push   ecx
  426e8e:	push   DWORD PTR [ebp-0x24]
  426e91:	call   DWORD PTR [eax+0x18]
  426e94:	pop    edi
  426e95:	pop    esi
  426e96:	pop    ebx
  426e97:	leave  
  426e98:	ret    0x4
  426e9b:	push   ebp
  426e9c:	mov    ebp,esp
  426e9e:	push   ecx
  426e9f:	push   ecx
  426ea0:	lea    eax,[ebp-0x8]
  426ea3:	mov    DWORD PTR [ebp-0x4],eax
  426ea6:	push   esi
  426ea7:	mov    esi,DWORD PTR [ebp-0x4]
  426eaa:	mov    eax,0xf881ba2f
  426eaf:	mov    DWORD PTR [esi],eax
  426eb1:	mov    esi,DWORD PTR [ebp-0x8]
  426eb4:	cmp    esi,eax
  426eb6:	pop    esi
  426eb7:	jne    0x426ec1
  426eb9:	mov    BYTE PTR [ecx+0xa],0x83
  426ebd:	mov    BYTE PTR [edx+0x8],0x2e
  426ec1:	mov    BYTE PTR [edx+0xa],0x83
  426ec5:	mov    BYTE PTR [ecx+0x2],0x15
  426ec9:	leave  
  426eca:	ret    
  426ecb:	push   ebp
  426ecc:	mov    ebp,esp
  426ece:	push   ecx
  426ecf:	push   ecx
  426ed0:	lea    eax,[ebp-0x8]
  426ed3:	mov    DWORD PTR [ebp-0x4],eax
  426ed6:	mov    edx,DWORD PTR [ebp-0x4]
  426ed9:	mov    eax,0xf88b0bcb
  426ede:	mov    DWORD PTR [edx],eax
  426ee0:	mov    edx,DWORD PTR [ebp-0x8]
  426ee3:	cmp    edx,eax
  426ee5:	jne    0x426ef6
  426ee7:	mov    eax,DWORD PTR [ebp+0x8]
  426eea:	mov    BYTE PTR [ecx+0x9],0xf
  426eee:	mov    BYTE PTR [eax+0x7],0x56
  426ef2:	mov    BYTE PTR [ecx+0x6],0xe
  426ef6:	mov    BYTE PTR [ecx+0x3],0x1f
  426efa:	leave  
  426efb:	ret    0x4
  426efe:	push   ebp
  426eff:	mov    ebp,esp
  426f01:	push   ecx
  426f02:	push   ecx
  426f03:	lea    eax,[ebp-0x8]
  426f06:	mov    DWORD PTR [ebp-0x4],eax
  426f09:	mov    edx,DWORD PTR [ebp-0x4]
  426f0c:	mov    eax,0x7e0da2f
  426f11:	mov    DWORD PTR [edx],eax
  426f13:	mov    edx,DWORD PTR [ebp-0x8]
  426f16:	cmp    edx,eax
  426f18:	jne    0x426f1e
  426f1a:	mov    BYTE PTR [ecx+0x7],0x56
  426f1e:	mov    eax,DWORD PTR [ebp+0x8]
  426f21:	mov    BYTE PTR [ecx+0x1],0x18
  426f25:	mov    BYTE PTR [eax+0x9],0x2f
  426f29:	leave  
  426f2a:	ret    0x4
  426f2d:	push   ebp
  426f2e:	mov    ebp,esp
  426f30:	push   ecx
  426f31:	push   ecx
  426f32:	lea    eax,[ebp-0x8]
  426f35:	mov    DWORD PTR [ebp-0x4],eax
  426f38:	push   esi
  426f39:	mov    esi,DWORD PTR [ebp-0x4]
  426f3c:	mov    eax,0x7060e3c
  426f41:	mov    DWORD PTR [esi],eax
  426f43:	mov    esi,DWORD PTR [ebp-0x8]
  426f46:	cmp    esi,eax
  426f48:	pop    esi
  426f49:	jne    0x426f55
  426f4b:	mov    BYTE PTR [edx+0x4],0x12
  426f4f:	mov    WORD PTR [ecx+0x3],0x121f
  426f55:	mov    BYTE PTR [edx],0x3e
  426f58:	leave  
  426f59:	ret    
  426f5a:	push   ebp
  426f5b:	mov    ebp,esp
  426f5d:	push   ecx
  426f5e:	push   ecx
  426f5f:	lea    eax,[ebp-0x8]
  426f62:	mov    DWORD PTR [ebp-0x4],eax
  426f65:	mov    edx,DWORD PTR [ebp-0x4]
  426f68:	mov    eax,0xf8870b3f
  426f6d:	mov    DWORD PTR [edx],eax
  426f6f:	mov    edx,DWORD PTR [ebp-0x8]
  426f72:	cmp    edx,eax
  426f74:	jne    0x426f81
  426f76:	mov    eax,DWORD PTR [ebp+0x8]
  426f79:	mov    BYTE PTR [ecx+0x8],0xe
  426f7d:	mov    BYTE PTR [eax+0x1],0x18
  426f81:	mov    BYTE PTR [ecx+0x5],0xa
  426f85:	leave  
  426f86:	ret    0x4
  426f89:	push   esi
  426f8a:	mov    ecx,edi
  426f8c:	call   0x426f5a
  426f91:	mov    edx,edi
  426f93:	mov    ecx,esi
  426f95:	mov    BYTE PTR [esi],0x1e
  426f98:	call   0x426f2d
  426f9d:	push   esi
  426f9e:	mov    ecx,edi
  426fa0:	mov    BYTE PTR [esi+0x5],0xa
  426fa4:	call   0x426efe
  426fa9:	push   esi
  426faa:	mov    BYTE PTR [esi+0x6],0xe
  426fae:	call   0x426ecb
  426fb3:	mov    BYTE PTR [esi+0x2],0x15
  426fb7:	mov    edx,esi
  426fb9:	jmp    0x426e9b
  426fbe:	push   ebp
  426fbf:	mov    ebp,esp
  426fc1:	push   ecx
  426fc2:	mov    ecx,DWORD PTR [edx+0x194]
  426fc8:	push   esi
  426fc9:	mov    esi,DWORD PTR [ebp+0x8]
  426fcc:	mov    esi,DWORD PTR [esi]
  426fce:	mov    DWORD PTR [ecx],esi
  426fd0:	mov    ecx,DWORD PTR [edx+0x194]
  426fd6:	mov    ecx,DWORD PTR [ecx]
  426fd8:	mov    esi,DWORD PTR [edx+0x190]
  426fde:	mov    DWORD PTR [esi],ecx
  426fe0:	mov    eax,DWORD PTR [edx+0x194]
  426fe6:	mov    ecx,DWORD PTR [eax]
  426fe8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426feb:	add    ecx,DWORD PTR [eax]
  426fed:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426ff4:	mov    eax,DWORD PTR [ebp-0x4]
  426ff7:	movzx  ecx,WORD PTR [ecx+0x16]
  426ffb:	xor    eax,0x75108ae
  427000:	add    eax,0x3272f5
  427005:	pop    esi
  427006:	test   ecx,eax
  427008:	je     0x427016
  42700a:	mov    eax,DWORD PTR [edx+0x1c8]
  427010:	mov    DWORD PTR [eax],0xf89c85a2
  427016:	leave  
  427017:	ret    0x4
  42701a:	push   ebp
  42701b:	mov    ebp,esp
  42701d:	sub    esp,0x70
  427020:	and    DWORD PTR [ebp-0x20],0x0
  427024:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42702b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427032:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427039:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427040:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427047:	mov    eax,DWORD PTR [ebp+0x20]
  42704a:	mov    eax,DWORD PTR [eax+0x194]
  427050:	mov    DWORD PTR [ebp-0xc],eax
  427053:	mov    eax,DWORD PTR [ebp+0x20]
  427056:	push   ebx
  427057:	push   esi
  427058:	mov    esi,DWORD PTR [eax+0x190]
  42705e:	mov    eax,DWORD PTR [ebp+0x20]
  427061:	mov    eax,DWORD PTR [eax+0x18c]
  427067:	mov    DWORD PTR [ebp-0x8],eax
  42706a:	mov    eax,DWORD PTR [eax]
  42706c:	push   edi
  42706d:	mov    DWORD PTR [ebp-0x4],esi
  427070:	test   eax,eax
  427072:	jne    0x42707f
  427074:	push   DWORD PTR [ebp+0x1c]
  427077:	mov    edx,DWORD PTR [ebp+0x20]
  42707a:	call   0x426fbe
  42707f:	mov    eax,DWORD PTR [esi]
  427081:	mov    ebx,DWORD PTR [esi]
  427083:	add    ebx,DWORD PTR [eax+0x3c]
  427086:	mov    eax,DWORD PTR [ebp+0xc]
  427089:	mov    ecx,DWORD PTR [ebp-0x8]
  42708c:	mov    ecx,DWORD PTR [ecx]
  42708e:	mov    esi,0x75108ae
  427093:	xor    eax,esi
  427095:	mov    edi,0x3272f5
  42709a:	add    eax,edi
  42709c:	cmp    eax,ecx
  42709e:	jne    0x4272d6
  4270a4:	mov    eax,DWORD PTR [ebp-0xc]
  4270a7:	mov    eax,DWORD PTR [eax]
  4270a9:	mov    DWORD PTR [ebp-0x10],eax
  4270ac:	mov    eax,DWORD PTR [ebx+0x50]
  4270af:	mov    DWORD PTR [ebp-0x68],eax
  4270b2:	mov    eax,DWORD PTR [ebp-0x18]
  4270b5:	xor    eax,esi
  4270b7:	add    eax,edi
  4270b9:	mov    DWORD PTR [ebp-0x64],eax
  4270bc:	mov    eax,DWORD PTR [ebp-0x14]
  4270bf:	and    DWORD PTR [ebp-0x6c],0x0
  4270c3:	xor    eax,esi
  4270c5:	add    eax,edi
  4270c7:	mov    DWORD PTR [ebp-0x60],eax
  4270ca:	lea    eax,[ebp-0x70]
  4270cd:	push   eax
  4270ce:	mov    eax,DWORD PTR [ebp+0x8]
  4270d1:	xor    eax,esi
  4270d3:	add    eax,edi
  4270d5:	push   eax
  4270d6:	mov    eax,DWORD PTR [ebp+0x20]
  4270d9:	add    eax,0xaa
  4270de:	push   eax
  4270df:	mov    eax,DWORD PTR [ebp+0x20]
  4270e2:	mov    eax,DWORD PTR [eax+0x198]
  4270e8:	mov    DWORD PTR [ebp-0x70],0x4
  4270ef:	push   DWORD PTR [eax]
  4270f1:	mov    eax,DWORD PTR [ebp+0x10]
  4270f4:	call   eax
  4270f6:	mov    ecx,DWORD PTR [ebp-0xc]
  4270f9:	mov    ecx,DWORD PTR [ecx]
  4270fb:	mov    edx,DWORD PTR [ebp-0x8]
  4270fe:	mov    DWORD PTR [ebp-0x6c],eax
  427101:	mov    DWORD PTR [ebp+0x1c],eax
  427104:	mov    DWORD PTR [edx],ecx
  427106:	mov    ecx,DWORD PTR [ebp-0x4]
  427109:	mov    DWORD PTR [ecx],eax
  42710b:	mov    eax,DWORD PTR [ebx+0x50]
  42710e:	mov    DWORD PTR [ebp-0x68],eax
  427111:	mov    eax,DWORD PTR [ebp-0x1c]
  427114:	xor    eax,esi
  427116:	add    eax,edi
  427118:	mov    DWORD PTR [ebp-0x64],eax
  42711b:	lea    eax,[ebp-0x20]
  42711e:	mov    DWORD PTR [ebp-0x60],eax
  427121:	lea    eax,[ebp-0x70]
  427124:	push   eax
  427125:	mov    eax,DWORD PTR [ebp+0x8]
  427128:	xor    eax,esi
  42712a:	add    eax,edi
  42712c:	push   eax
  42712d:	mov    eax,DWORD PTR [ebp+0x20]
  427130:	add    eax,0xee
  427135:	push   eax
  427136:	mov    eax,DWORD PTR [ebp+0x20]
  427139:	mov    eax,DWORD PTR [eax+0x198]
  42713f:	mov    DWORD PTR [ebp-0x70],0x4
  427146:	push   DWORD PTR [eax]
  427148:	mov    eax,DWORD PTR [ebp+0x10]
  42714b:	call   eax
  42714d:	test   eax,eax
  42714f:	je     0x427174
  427151:	and    DWORD PTR [ebp+0xc],0x0
  427155:	cmp    DWORD PTR [ebx+0x50],0x0
  427159:	jbe    0x427174
  42715b:	mov    eax,DWORD PTR [ebp+0x1c]
  42715e:	mov    ecx,DWORD PTR [ebp-0x10]
  427161:	sub    ecx,eax
  427163:	mov    dl,BYTE PTR [ecx+eax*1]
  427166:	inc    DWORD PTR [ebp+0xc]
  427169:	mov    BYTE PTR [eax],dl
  42716b:	mov    edx,DWORD PTR [ebp+0xc]
  42716e:	inc    eax
  42716f:	cmp    edx,DWORD PTR [ebx+0x50]
  427172:	jb     0x427163
  427174:	mov    edx,DWORD PTR [ebp+0x1c]
  427177:	mov    ecx,DWORD PTR [edx+0x3c]
  42717a:	add    ecx,edx
  42717c:	mov    eax,DWORD PTR [ecx+0xa0]
  427182:	mov    ebx,DWORD PTR [ecx+0x28]
  427185:	add    eax,edx
  427187:	sub    edx,DWORD PTR [ebp-0x10]
  42718a:	add    ebx,DWORD PTR [ebp+0x1c]
  42718d:	mov    DWORD PTR [ebp+0xc],edx
  427190:	mov    DWORD PTR [ebp-0x2c],ecx
  427193:	mov    DWORD PTR [ebp-0x14],ebx
  427196:	mov    DWORD PTR [ebp-0x8],0x0
  42719d:	jmp    0x427219
  42719f:	add    edx,0xfffffff8
  4271a2:	shr    edx,1
  4271a4:	mov    DWORD PTR [ebp-0x18],edx
  4271a7:	je     0x427205
  4271a9:	lea    edx,[eax+0x8]
  4271ac:	mov    DWORD PTR [ebp-0x4],edx
  4271af:	mov    edx,DWORD PTR [ebp-0x18]
  4271b2:	mov    DWORD PTR [ebp-0x18],edx
  4271b5:	mov    edx,DWORD PTR [ebp-0x4]
  4271b8:	movzx  edx,WORD PTR [edx]
  4271bb:	mov    DWORD PTR [ebp-0x24],edx
  4271be:	and    edx,0xfff
  4271c4:	mov    DWORD PTR [ebp-0x28],edx
  4271c7:	mov    edx,DWORD PTR [ebp-0x24]
  4271ca:	shr    edx,0xc
  4271cd:	add    edx,0xffcd8d0b
  4271d3:	xor    edx,esi
  4271d5:	cmp    edx,0xf89c85a0
  4271db:	jne    0x4271fc
  4271dd:	mov    edx,DWORD PTR [ebp-0x28]
  4271e0:	add    edx,DWORD PTR [ebp+0x1c]
  4271e3:	mov    ebx,DWORD PTR [eax]
  4271e5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271e9:	je     0x4271f9
  4271eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ee:	add    ecx,DWORD PTR [ebx+edx*1]
  4271f1:	mov    ebx,DWORD PTR [eax]
  4271f3:	mov    DWORD PTR [edx+ebx*1],ecx
  4271f6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271fc:	add    DWORD PTR [ebp-0x4],0x2
  427200:	dec    DWORD PTR [ebp-0x18]
  427203:	jne    0x4271b5
  427205:	mov    edx,DWORD PTR [ebp-0xc]
  427208:	add    DWORD PTR [ebp-0x8],edx
  42720b:	mov    edx,DWORD PTR [ebp-0x8]
  42720e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427214:	jae    0x427227
  427216:	add    eax,DWORD PTR [ebp-0xc]
  427219:	mov    edx,DWORD PTR [eax+0x4]
  42721c:	mov    DWORD PTR [ebp-0xc],edx
  42721f:	test   edx,edx
  427221:	jne    0x42719f
  427227:	mov    eax,DWORD PTR [ebp-0x10]
  42722a:	mov    DWORD PTR [ebp-0x6c],eax
  42722d:	mov    DWORD PTR [ebp-0x70],0x4
  427234:	mov    eax,DWORD PTR [ecx+0x50]
  427237:	mov    DWORD PTR [ebp-0x68],eax
  42723a:	mov    eax,DWORD PTR [ebp-0x1c]
  42723d:	xor    eax,esi
  42723f:	add    eax,edi
  427241:	mov    DWORD PTR [ebp-0x64],eax
  427244:	lea    eax,[ebp-0x20]
  427247:	mov    DWORD PTR [ebp-0x60],eax
  42724a:	lea    eax,[ebp-0x70]
  42724d:	push   eax
  42724e:	mov    eax,DWORD PTR [ebp+0x8]
  427251:	xor    eax,esi
  427253:	add    eax,edi
  427255:	push   eax
  427256:	mov    eax,DWORD PTR [ebp+0x20]
  427259:	add    eax,0xee
  42725e:	push   eax
  42725f:	mov    eax,DWORD PTR [ebp+0x20]
  427262:	mov    eax,DWORD PTR [eax+0x198]
  427268:	push   DWORD PTR [eax]
  42726a:	mov    eax,DWORD PTR [ebp+0x10]
  42726d:	call   eax
  42726f:	mov    eax,DWORD PTR [ebp+0x20]
  427272:	mov    eax,DWORD PTR [eax+0x180]
  427278:	add    eax,DWORD PTR [ebp+0xc]
  42727b:	mov    ecx,DWORD PTR [ebp+0xc]
  42727e:	push   DWORD PTR [ebp+0x18]
  427281:	mov    DWORD PTR [eax],ecx
  427283:	push   DWORD PTR [ebp+0x14]
  427286:	push   DWORD PTR [ebp+0x1c]
  427289:	call   ebx
  42728b:	mov    ecx,DWORD PTR [ebp+0xc]
  42728e:	add    ecx,DWORD PTR [ebp+0x20]
  427291:	lea    eax,[ebp+0x4]
  427294:	mov    DWORD PTR [ebp+0x20],ecx
  427297:	mov    ecx,DWORD PTR [ebp+0x20]
  42729a:	mov    ecx,DWORD PTR [ebp+0x20]
  42729d:	mov    edx,DWORD PTR [ecx+0x190]
  4272a3:	mov    ecx,DWORD PTR [ebp+0x20]
  4272a6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4272ac:	mov    esi,DWORD PTR [ecx]
  4272ae:	cmp    DWORD PTR [eax],esi
  4272b0:	jb     0x4272d1
  4272b2:	mov    esi,DWORD PTR [edx]
  4272b4:	mov    edi,DWORD PTR [edx]
  4272b6:	mov    esi,DWORD PTR [esi+0x3c]
  4272b9:	lea    esi,[edi+esi*1+0x50]
  4272bd:	mov    edi,DWORD PTR [ecx]
  4272bf:	add    edi,DWORD PTR [esi]
  4272c1:	cmp    DWORD PTR [eax],edi
  4272c3:	jae    0x4272d1
  4272c5:	mov    esi,DWORD PTR [ecx]
  4272c7:	mov    ecx,DWORD PTR [eax]
  4272c9:	mov    edx,DWORD PTR [edx]
  4272cb:	sub    ecx,esi
  4272cd:	add    edx,ecx
  4272cf:	mov    DWORD PTR [eax],edx
  4272d1:	mov    eax,DWORD PTR [ebp+0xc]
  4272d4:	jmp    0x4272d8
  4272d6:	xor    eax,eax
  4272d8:	pop    edi
  4272d9:	pop    esi
  4272da:	pop    ebx
  4272db:	leave  
  4272dc:	ret    0x1c
  4272df:	push   ebp
  4272e0:	mov    ebp,esp
  4272e2:	sub    esp,0x1c
  4272e5:	push   esi
  4272e6:	mov    esi,eax
  4272e8:	mov    eax,DWORD PTR [ecx+0x190]
  4272ee:	cmp    DWORD PTR [eax],0x0
  4272f1:	je     0x427401
  4272f7:	test   edx,edx
  4272f9:	je     0x427401
  4272ff:	test   esi,esi
  427301:	je     0x427401
  427307:	mov    eax,DWORD PTR [esi+0x88]
  42730d:	test   eax,eax
  42730f:	je     0x4273fc
  427315:	cmp    DWORD PTR [esi+0x8c],0x10
  42731c:	je     0x4273fc
  427322:	cmp    DWORD PTR [esi+0x34],edx
  427325:	je     0x4273fc
  42732b:	mov    esi,DWORD PTR [ecx+0x18c]
  427331:	and    DWORD PTR [ebp-0x10],0x0
  427335:	mov    ecx,edx
  427337:	sub    ecx,DWORD PTR [esi]
  427339:	add    eax,edx
  42733b:	movzx  edx,WORD PTR [eax+0xc]
  42733f:	mov    DWORD PTR [ebp-0x1c],ecx
  427342:	movzx  ecx,WORD PTR [eax+0xe]
  427346:	add    ecx,edx
  427348:	je     0x4273fc
  42734e:	lea    ecx,[eax+0x14]
  427351:	push   ebx
  427352:	mov    DWORD PTR [ebp-0x18],ecx
  427355:	mov    esi,0x7fffffff
  42735a:	push   edi
  42735b:	test   DWORD PTR [ecx],esi
  42735d:	je     0x4273de
  42735f:	mov    edx,DWORD PTR [ecx]
  427361:	and    DWORD PTR [ebp-0xc],0x0
  427365:	and    edx,esi
  427367:	add    edx,eax
  427369:	movzx  edi,WORD PTR [edx+0xe]
  42736d:	movzx  ebx,WORD PTR [edx+0xc]
  427371:	add    edi,ebx
  427373:	je     0x4273de
  427375:	lea    ecx,[edx+0x14]
  427378:	mov    DWORD PTR [ebp-0x14],ecx
  42737b:	test   DWORD PTR [ecx],esi
  42737d:	je     0x4273c0
  42737f:	mov    ecx,DWORD PTR [ecx]
  427381:	and    DWORD PTR [ebp-0x8],0x0
  427385:	and    ecx,esi
  427387:	add    ecx,eax
  427389:	movzx  edi,WORD PTR [ecx+0xe]
  42738d:	movzx  ebx,WORD PTR [ecx+0xc]
  427391:	add    edi,ebx
  427393:	je     0x4273c0
  427395:	lea    edi,[ecx+0x14]
  427398:	mov    DWORD PTR [ebp-0x4],edi
  42739b:	mov    edi,DWORD PTR [ebp-0x4]
  42739e:	mov    edi,DWORD PTR [edi]
  4273a0:	test   edi,edi
  4273a2:	je     0x4273aa
  4273a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273a7:	add    DWORD PTR [edi+eax*1],ebx
  4273aa:	movzx  edi,WORD PTR [ecx+0xe]
  4273ae:	movzx  ebx,WORD PTR [ecx+0xc]
  4273b2:	inc    DWORD PTR [ebp-0x8]
  4273b5:	add    DWORD PTR [ebp-0x4],0x8
  4273b9:	add    edi,ebx
  4273bb:	cmp    DWORD PTR [ebp-0x8],edi
  4273be:	jb     0x42739b
  4273c0:	movzx  edi,WORD PTR [edx+0xe]
  4273c4:	movzx  ebx,WORD PTR [edx+0xc]
  4273c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273cb:	inc    DWORD PTR [ebp-0xc]
  4273ce:	add    ecx,0x8
  4273d1:	add    edi,ebx
  4273d3:	mov    DWORD PTR [ebp-0x14],ecx
  4273d6:	cmp    DWORD PTR [ebp-0xc],edi
  4273d9:	jb     0x42737b
  4273db:	mov    ecx,DWORD PTR [ebp-0x18]
  4273de:	movzx  edx,WORD PTR [eax+0xe]
  4273e2:	movzx  edi,WORD PTR [eax+0xc]
  4273e6:	inc    DWORD PTR [ebp-0x10]
  4273e9:	add    ecx,0x8
  4273ec:	add    edx,edi
  4273ee:	mov    DWORD PTR [ebp-0x18],ecx
  4273f1:	cmp    DWORD PTR [ebp-0x10],edx
  4273f4:	jb     0x42735b
  4273fa:	pop    edi
  4273fb:	pop    ebx
  4273fc:	xor    eax,eax
  4273fe:	inc    eax
  4273ff:	jmp    0x427403
  427401:	xor    eax,eax
  427403:	pop    esi
  427404:	leave  
  427405:	ret    
  427406:	push   ebp
  427407:	mov    ebp,esp
  427409:	mov    ecx,DWORD PTR [ecx+0x190]
  42740f:	mov    eax,DWORD PTR [ebp+0xc]
  427412:	sub    esp,0x10
  427415:	push   ebx
  427416:	xor    ebx,ebx
  427418:	push   esi
  427419:	push   edi
  42741a:	cmp    DWORD PTR [ecx],ebx
  42741c:	je     0x4274a4
  427422:	cmp    eax,ebx
  427424:	je     0x4274a4
  427426:	cmp    DWORD PTR [eax+0x78],ebx
  427429:	jne    0x427430
  42742b:	xor    eax,eax
  42742d:	inc    eax
  42742e:	jmp    0x4274a6
  427430:	mov    eax,DWORD PTR [eax+0x78]
  427433:	add    eax,DWORD PTR [ebp+0x8]
  427436:	mov    ecx,DWORD PTR [eax+0x1c]
  427439:	mov    edx,DWORD PTR [eax+0x24]
  42743c:	mov    esi,DWORD PTR [eax+0x14]
  42743f:	mov    edi,DWORD PTR [eax+0x18]
  427442:	add    ecx,DWORD PTR [ebp+0x8]
  427445:	add    edx,DWORD PTR [ebp+0x8]
  427448:	mov    DWORD PTR [ebp-0x4],esi
  42744b:	cmp    esi,edi
  42744d:	ja     0x427452
  42744f:	mov    DWORD PTR [ebp-0x4],edi
  427452:	mov    DWORD PTR [ebp-0x8],ebx
  427455:	cmp    DWORD PTR [ebp-0x4],ebx
  427458:	jbe    0x42742b
  42745a:	cmp    ebx,DWORD PTR [eax+0x14]
  42745d:	jae    0x427465
  42745f:	movzx  esi,WORD PTR [edx+ebx*2]
  427463:	jmp    0x427467
  427465:	mov    esi,ebx
  427467:	lea    esi,[ecx+esi*4]
  42746a:	mov    edi,DWORD PTR [esi]
  42746c:	test   edi,edi
  42746e:	je     0x427499
  427470:	add    edi,DWORD PTR [ebp+0x8]
  427473:	mov    DWORD PTR [ebp-0x10],edi
  427476:	cmp    edi,eax
  427478:	jbe    0x42748a
  42747a:	mov    ebx,DWORD PTR [ebp+0xc]
  42747d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427480:	add    ebx,eax
  427482:	cmp    edi,ebx
  427484:	jae    0x42748a
  427486:	mov    esi,DWORD PTR [esi]
  427488:	jmp    0x427492
  42748a:	sub    edi,DWORD PTR [ebp+0x8]
  42748d:	mov    DWORD PTR [esi],edi
  42748f:	mov    esi,DWORD PTR [ebp-0x10]
  427492:	test   esi,esi
  427494:	je     0x4274a4
  427496:	mov    ebx,DWORD PTR [ebp-0x8]
  427499:	inc    ebx
  42749a:	mov    DWORD PTR [ebp-0x8],ebx
  42749d:	cmp    ebx,DWORD PTR [ebp-0x4]
  4274a0:	jb     0x42745a
  4274a2:	jmp    0x42742b
  4274a4:	xor    eax,eax
  4274a6:	pop    edi
  4274a7:	pop    esi
  4274a8:	pop    ebx
  4274a9:	leave  
  4274aa:	ret    0x8
  4274ad:	push   ebp
  4274ae:	mov    ebp,esp
  4274b0:	sub    esp,0x2c
  4274b3:	mov    edx,0xf89c85a5
  4274b8:	mov    DWORD PTR [ebp-0x4],edx
  4274bb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274c2:	mov    eax,DWORD PTR [ebp-0x4]
  4274c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4274ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d4:	push   ebx
  4274d5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274d8:	push   esi
  4274d9:	mov    esi,0x75108ae
  4274de:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274ee:	push   edi
  4274ef:	mov    edi,0x3272f5
  4274f4:	xor    ecx,esi
  4274f6:	xor    eax,esi
  4274f8:	add    eax,edi
  4274fa:	add    ecx,edi
  4274fc:	mov    DWORD PTR [ebp-0x18],eax
  4274ff:	cmp    ecx,DWORD PTR [ebx]
  427501:	je     0x427782
  427507:	mov    ebx,DWORD PTR [ebp-0x4]
  42750a:	mov    ecx,DWORD PTR [ebp+0xc]
  42750d:	xor    ebx,esi
  42750f:	add    ebx,edi
  427511:	cmp    ebx,ecx
  427513:	je     0x427782
  427519:	mov    ebx,DWORD PTR [ebp-0x4]
  42751c:	mov    ecx,DWORD PTR [ecx+0x80]
  427522:	xor    ebx,esi
  427524:	add    ebx,edi
  427526:	cmp    ecx,ebx
  427528:	je     0x42777d
  42752e:	add    ecx,DWORD PTR [ebp+0x8]
  427531:	mov    DWORD PTR [ebp-0x2c],ecx
  427534:	mov    ebx,edx
  427536:	xor    ebx,esi
  427538:	add    ebx,edi
  42753a:	mov    DWORD PTR [ebp-0x10],ebx
  42753d:	mov    ebx,DWORD PTR [ebp-0x10]
  427540:	cmp    ebx,edx
  427542:	je     0x427556
  427544:	mov    edx,DWORD PTR [ebp-0x10]
  427547:	mov    ebx,DWORD PTR [ebp-0x4]
  42754a:	imul   edx,edx,0x14
  42754d:	xor    ebx,esi
  42754f:	add    ebx,edi
  427551:	cmp    DWORD PTR [edx+ecx*1],ebx
  427554:	jne    0x42756d
  427556:	mov    edx,DWORD PTR [ebp-0x10]
  427559:	mov    ebx,DWORD PTR [ebp-0x4]
  42755c:	imul   edx,edx,0x14
  42755f:	xor    ebx,esi
  427561:	add    ebx,edi
  427563:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427567:	je     0x42776f
  42756d:	mov    eax,DWORD PTR [ebp-0x4]
  427570:	mov    ebx,DWORD PTR [ebp-0x4]
  427573:	mov    eax,DWORD PTR [ebp-0x10]
  427576:	imul   eax,eax,0x14
  427579:	add    eax,ecx
  42757b:	mov    ecx,DWORD PTR [eax+0x10]
  42757e:	add    ecx,DWORD PTR [ebp+0x8]
  427581:	xor    ebx,esi
  427583:	mov    DWORD PTR [ebp-0x1c],ecx
  427586:	mov    ecx,DWORD PTR [ebp-0x4]
  427589:	mov    edx,DWORD PTR [ebp-0x4]
  42758c:	xor    ecx,esi
  42758e:	add    ecx,edi
  427590:	xor    edx,esi
  427592:	mov    DWORD PTR [ebp-0x24],ecx
  427595:	mov    ecx,DWORD PTR [eax]
  427597:	add    edx,edi
  427599:	add    ebx,edi
  42759b:	cmp    ecx,edx
  42759d:	je     0x4275a5
  42759f:	add    ecx,DWORD PTR [ebp+0x8]
  4275a2:	mov    DWORD PTR [ebp-0x24],ecx
  4275a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4275a8:	xor    ecx,esi
  4275aa:	add    ecx,DWORD PTR [eax+0xc]
  4275ad:	mov    eax,DWORD PTR [ebp+0x8]
  4275b0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275b7:	mov    DWORD PTR [ebp+0xc],eax
  4275ba:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275c1:	mov    eax,DWORD PTR [ebp+0x10]
  4275c4:	push   DWORD PTR [ebp+0xc]
  4275c7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275cd:	call   DWORD PTR [eax]
  4275cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4275d2:	xor    ecx,esi
  4275d4:	add    ecx,edi
  4275d6:	mov    DWORD PTR [ebp-0xc],eax
  4275d9:	cmp    ecx,eax
  4275db:	jne    0x4275ef
  4275dd:	mov    eax,DWORD PTR [ebp+0x10]
  4275e0:	push   DWORD PTR [ebp+0xc]
  4275e3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275e9:	call   DWORD PTR [eax+0xc]
  4275ec:	mov    DWORD PTR [ebp-0xc],eax
  4275ef:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  4275f6:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  4275fd:	mov    eax,DWORD PTR [ebp-0x4]
  427600:	xor    eax,esi
  427602:	add    eax,edi
  427604:	cmp    eax,DWORD PTR [ebp-0xc]
  427607:	jne    0x42762c
  427609:	mov    eax,DWORD PTR [ebp-0x8]
  42760c:	mov    ecx,DWORD PTR [ebp-0x20]
  42760f:	xor    eax,esi
  427611:	xor    ecx,esi
  427613:	lea    ebx,[ebx+eax*1+0x3272f5]
  42761a:	mov    eax,DWORD PTR [ebp+0x10]
  42761d:	mov    eax,DWORD PTR [eax+0x1e0]
  427623:	add    ecx,edi
  427625:	imul   ecx,ebx
  427628:	push   ecx
  427629:	call   DWORD PTR [eax+0x24]
  42762c:	mov    eax,DWORD PTR [ebp-0x4]
  42762f:	xor    eax,esi
  427631:	add    eax,edi
  427633:	cmp    eax,DWORD PTR [ebp-0xc]
  427636:	jne    0x427647
  427638:	mov    eax,DWORD PTR [ebp-0x28]
  42763b:	xor    eax,esi
  42763d:	add    eax,edi
  42763f:	cmp    ebx,eax
  427641:	jbe    0x4275c1
  427647:	mov    eax,DWORD PTR [ebp-0x4]
  42764a:	xor    eax,esi
  42764c:	add    eax,edi
  42764e:	cmp    eax,DWORD PTR [ebp-0xc]
  427651:	jne    0x42766a
  427653:	mov    eax,DWORD PTR [ebp-0x8]
  427656:	mov    ecx,DWORD PTR [ebp-0x18]
  427659:	xor    eax,esi
  42765b:	lea    eax,[ecx+eax*1+0x3272f5]
  427662:	mov    DWORD PTR [ebp-0x18],eax
  427665:	jmp    0x427759
  42766a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427671:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427678:	mov    ebx,DWORD PTR [ebp-0x4]
  42767b:	xor    ebx,esi
  42767d:	add    ebx,edi
  42767f:	jmp    0x427746
  427684:	mov    eax,DWORD PTR [ebp-0x4]
  427687:	xor    eax,esi
  427689:	add    eax,edi
  42768b:	mov    DWORD PTR [ebp-0x14],eax
  42768e:	mov    eax,DWORD PTR [ebp-0x4]
  427691:	xor    eax,esi
  427693:	add    eax,edi
  427695:	mov    DWORD PTR [ebp+0xc],eax
  427698:	mov    ecx,DWORD PTR [ebp-0x4]
  42769b:	mov    eax,DWORD PTR [ebp-0x24]
  42769e:	xor    ecx,esi
  4276a0:	add    ecx,edi
  4276a2:	cmp    ecx,eax
  4276a4:	je     0x4276ac
  4276a6:	mov    eax,DWORD PTR [eax+ebx*4]
  4276a9:	mov    DWORD PTR [ebp-0x14],eax
  4276ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4276af:	mov    eax,DWORD PTR [eax+ebx*4]
  4276b2:	mov    DWORD PTR [ebp+0xc],eax
  4276b5:	mov    eax,DWORD PTR [ebp-0x4]
  4276b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276bb:	xor    eax,esi
  4276bd:	add    eax,edi
  4276bf:	cmp    eax,ecx
  4276c1:	je     0x4276ec
  4276c3:	mov    eax,DWORD PTR [ebp-0x4]
  4276c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276c9:	xor    eax,esi
  4276cb:	add    eax,edi
  4276cd:	shr    ecx,0x1f
  4276d0:	cmp    eax,ecx
  4276d2:	je     0x4276ec
  4276d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276d7:	mov    eax,DWORD PTR [ebp+0x10]
  4276da:	mov    eax,DWORD PTR [eax+0x1e0]
  4276e0:	movzx  ecx,cx
  4276e3:	push   ecx
  4276e4:	push   DWORD PTR [ebp-0xc]
  4276e7:	call   DWORD PTR [eax+0x8]
  4276ea:	jmp    0x427705
  4276ec:	mov    eax,DWORD PTR [ebp+0xc]
  4276ef:	add    eax,DWORD PTR [ebp+0x8]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x10]
  4276f5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4276fb:	add    eax,0x2
  4276fe:	push   eax
  4276ff:	push   DWORD PTR [ebp-0xc]
  427702:	call   DWORD PTR [ecx+0x8]
  427705:	mov    DWORD PTR [ebp+0xc],eax
  427708:	mov    eax,DWORD PTR [ebp-0x4]
  42770b:	mov    ecx,DWORD PTR [ebp+0xc]
  42770e:	xor    eax,esi
  427710:	add    eax,edi
  427712:	cmp    eax,ecx
  427714:	mov    eax,DWORD PTR [ebp-0x8]
  427717:	jne    0x42772a
  427719:	mov    ecx,DWORD PTR [ebp-0x18]
  42771c:	xor    eax,esi
  42771e:	lea    eax,[ecx+eax*1+0x3272f5]
  427725:	mov    DWORD PTR [ebp-0x18],eax
  427728:	jmp    0x42773a
  42772a:	mov    ecx,DWORD PTR [ebp+0xc]
  42772d:	xor    eax,esi
  42772f:	add    eax,edi
  427731:	imul   eax,ecx
  427734:	mov    ecx,DWORD PTR [ebp-0x1c]
  427737:	mov    DWORD PTR [ecx+ebx*4],eax
  42773a:	mov    eax,DWORD PTR [ebp-0x8]
  42773d:	xor    eax,esi
  42773f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427746:	mov    eax,DWORD PTR [ebp-0x4]
  427749:	mov    ecx,DWORD PTR [ebp-0x1c]
  42774c:	xor    eax,esi
  42774e:	add    eax,edi
  427750:	cmp    DWORD PTR [ecx+ebx*4],eax
  427753:	jne    0x427684
  427759:	mov    edx,DWORD PTR [ebp-0x10]
  42775c:	mov    eax,DWORD PTR [ebp-0x18]
  42775f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427762:	sub    edx,0x3272f4
  427768:	xor    edx,esi
  42776a:	jmp    0x427534
  42776f:	mov    ecx,DWORD PTR [ebp-0x4]
  427772:	xor    ecx,esi
  427774:	add    ecx,edi
  427776:	cmp    eax,ecx
  427778:	mov    eax,DWORD PTR [ebp-0x4]
  42777b:	jne    0x427785
  42777d:	mov    eax,DWORD PTR [ebp-0x8]
  427780:	jmp    0x427785
  427782:	mov    eax,DWORD PTR [ebp-0x4]
  427785:	xor    eax,esi
  427787:	add    eax,edi
  427789:	pop    edi
  42778a:	pop    esi
  42778b:	pop    ebx
  42778c:	leave  
  42778d:	ret    0xc
  427790:	push   ebp
  427791:	mov    ebp,esp
  427793:	sub    esp,0x28
  427796:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42779d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4277a4:	mov    eax,DWORD PTR [ebp+0xc]
  4277a7:	mov    DWORD PTR [ebp+0xc],eax
  4277aa:	push   esi
  4277ab:	mov    eax,eax
  4277ad:	mov    eax,DWORD PTR [ebp-0x4]
  4277b0:	mov    esi,DWORD PTR [ebp+0x8]
  4277b3:	mov    ecx,0x75108ae
  4277b8:	xor    eax,ecx
  4277ba:	mov    edx,0x3272f5
  4277bf:	add    eax,edx
  4277c1:	cmp    esi,eax
  4277c3:	je     0x4278ea
  4277c9:	mov    eax,DWORD PTR [ebp+0x8]
  4277cc:	mov    esi,DWORD PTR [ebp+0x8]
  4277cf:	add    esi,DWORD PTR [eax+0x3c]
  4277d2:	push   edi
  4277d3:	mov    DWORD PTR [ebp+0xc],esi
  4277d6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277dd:	mov    eax,DWORD PTR [ebp-0x1c]
  4277e0:	mov    esi,DWORD PTR [ebp-0x4]
  4277e3:	mov    edi,DWORD PTR [ebp+0xc]
  4277e6:	xor    esi,ecx
  4277e8:	xor    eax,ecx
  4277ea:	add    esi,edx
  4277ec:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  4277f3:	je     0x4278e4
  4277f9:	mov    esi,DWORD PTR [ebp+0xc]
  4277fc:	mov    eax,DWORD PTR [ebp+0x8]
  4277ff:	add    eax,DWORD PTR [esi+0xa0]
  427805:	mov    esi,DWORD PTR [ebp+0x8]
  427808:	mov    edi,DWORD PTR [ebp+0xc]
  42780b:	sub    esi,DWORD PTR [edi+0x34]
  42780e:	mov    edi,DWORD PTR [ebp-0x4]
  427811:	xor    edi,ecx
  427813:	add    edi,edx
  427815:	mov    DWORD PTR [ebp-0x24],esi
  427818:	cmp    esi,edi
  42781a:	je     0x4278e4
  427820:	mov    esi,DWORD PTR [ebp-0x4]
  427823:	xor    esi,ecx
  427825:	add    esi,edx
  427827:	mov    DWORD PTR [ebp-0x8],esi
  42782a:	push   ebx
  42782b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427832:	jmp    0x4278ce
  427837:	mov    esi,DWORD PTR [ebp-0x4]
  42783a:	xor    esi,ecx
  42783c:	lea    edi,[ebx-0x8]
  42783f:	add    esi,edx
  427841:	shr    edi,1
  427843:	cmp    esi,edi
  427845:	jae    0x4278b4
  427847:	sub    edi,esi
  427849:	lea    ebx,[eax+esi*2+0x8]
  42784d:	mov    DWORD PTR [ebp-0x18],edi
  427850:	movzx  esi,WORD PTR [ebx]
  427853:	and    esi,0xfff
  427859:	mov    DWORD PTR [ebp-0x14],esi
  42785c:	mov    edi,DWORD PTR [ebp-0x14]
  42785f:	mov    esi,DWORD PTR [eax]
  427861:	sub    esi,edx
  427863:	add    edi,esi
  427865:	movzx  esi,WORD PTR [ebx]
  427868:	shr    esi,0xc
  42786b:	xor    edi,ecx
  42786d:	mov    DWORD PTR [ebp-0x20],edi
  427870:	mov    DWORD PTR [ebp-0x14],esi
  427873:	mov    esi,DWORD PTR [ebp-0x20]
  427876:	mov    edi,DWORD PTR [ebp+0x8]
  427879:	xor    esi,ecx
  42787b:	lea    esi,[esi+edi*1+0x3272f5]
  427882:	mov    DWORD PTR [ebp-0x20],esi
  427885:	mov    esi,DWORD PTR [ebp-0x10]
  427888:	mov    edi,DWORD PTR [ebp-0x14]
  42788b:	xor    esi,ecx
  42788d:	add    esi,edx
  42788f:	cmp    edi,esi
  427891:	jne    0x4278a9
  427893:	mov    esi,DWORD PTR [ebp-0x10]
  427896:	mov    edi,DWORD PTR [ebp-0x14]
  427899:	xor    esi,ecx
  42789b:	add    esi,edx
  42789d:	cmp    edi,esi
  42789f:	jne    0x4278a9
  4278a1:	mov    esi,DWORD PTR [ebp-0x20]
  4278a4:	mov    edi,DWORD PTR [ebp-0x24]
  4278a7:	add    DWORD PTR [esi],edi
  4278a9:	add    ebx,0x2
  4278ac:	dec    DWORD PTR [ebp-0x18]
  4278af:	jne    0x427850
  4278b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278b4:	add    DWORD PTR [ebp-0x8],ebx
  4278b7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278ba:	mov    edi,DWORD PTR [ebp-0x8]
  4278bd:	mov    ebx,DWORD PTR [ebp+0xc]
  4278c0:	xor    esi,ecx
  4278c2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278c9:	jae    0x4278e3
  4278cb:	add    eax,DWORD PTR [ebp-0xc]
  4278ce:	mov    esi,DWORD PTR [ebp-0x4]
  4278d1:	mov    ebx,DWORD PTR [eax+0x4]
  4278d4:	xor    esi,ecx
  4278d6:	add    esi,edx
  4278d8:	mov    DWORD PTR [ebp-0xc],ebx
  4278db:	cmp    ebx,esi
  4278dd:	jne    0x427837
  4278e3:	pop    ebx
  4278e4:	mov    eax,DWORD PTR [ebp-0x28]
  4278e7:	pop    edi
  4278e8:	jmp    0x4278ed
  4278ea:	mov    eax,DWORD PTR [ebp-0x4]
  4278ed:	xor    eax,ecx
  4278ef:	add    eax,edx
  4278f1:	pop    esi
  4278f2:	leave  
  4278f3:	ret    0x8
  4278f6:	push   ebp
  4278f7:	mov    ebp,esp
  4278f9:	sub    esp,0xd8
  4278ff:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427906:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42790d:	mov    eax,DWORD PTR [ebp-0x4]
  427910:	push   ebx
  427911:	push   esi
  427912:	mov    esi,0x75108ae
  427917:	xor    eax,esi
  427919:	push   edi
  42791a:	mov    edi,0x3272f5
  42791f:	add    eax,edi
  427921:	mov    DWORD PTR [ebp-0x18],eax
  427924:	mov    eax,DWORD PTR [ebp-0x4]
  427927:	xor    eax,esi
  427929:	add    eax,edi
  42792b:	mov    DWORD PTR [ebp-0x8],eax
  42792e:	mov    ebx,DWORD PTR [ebp+0x20]
  427931:	mov    eax,DWORD PTR [ebp-0x1c]
  427934:	mov    ecx,DWORD PTR [ebp-0x1c]
  427937:	xor    eax,ecx
  427939:	mov    DWORD PTR [ebp-0x1c],eax
  42793c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427943:	mov    eax,DWORD PTR [ebp-0xc]
  427946:	mov    ecx,DWORD PTR [ebp-0xc]
  427949:	xor    eax,ecx
  42794b:	mov    DWORD PTR [ebp-0xc],eax
  42794e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427955:	mov    eax,DWORD PTR [ebp-0x10]
  427958:	mov    ecx,DWORD PTR [ebp-0x10]
  42795b:	xor    eax,ecx
  42795d:	mov    DWORD PTR [ebp-0x10],eax
  427960:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427967:	mov    eax,DWORD PTR [ebp-0x28]
  42796a:	mov    ecx,DWORD PTR [ebp-0x28]
  42796d:	xor    eax,ecx
  42796f:	mov    DWORD PTR [ebp-0x28],eax
  427972:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427979:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427980:	mov    eax,DWORD PTR [ebp+0x8]
  427983:	test   eax,eax
  427985:	je     0x427e0c
  42798b:	mov    eax,DWORD PTR [ebp+0xc]
  42798e:	test   eax,eax
  427990:	je     0x427e0c
  427996:	mov    eax,DWORD PTR [ebp+0x18]
  427999:	test   eax,eax
  42799b:	je     0x427e0c
  4279a1:	mov    eax,DWORD PTR [ebp+0x20]
  4279a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4279a7:	xor    eax,0x8ae
  4279ac:	add    eax,0x72f5
  4279b1:	cmp    WORD PTR [ecx],ax
  4279b4:	jne    0x427e0c
  4279ba:	mov    eax,DWORD PTR [ebp-0x4]
  4279bd:	xor    eax,esi
  4279bf:	add    eax,edi
  4279c1:	mov    DWORD PTR [ebp-0x30],eax
  4279c4:	mov    eax,DWORD PTR [ebp-0x4]
  4279c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279ca:	mov    eax,DWORD PTR [ebp+0x8]
  4279cd:	add    eax,DWORD PTR [ecx+0x3c]
  4279d0:	mov    DWORD PTR [ebp+0xc],eax
  4279d3:	mov    eax,DWORD PTR [eax+0x50]
  4279d6:	test   eax,eax
  4279d8:	je     0x427e0c
  4279de:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279e8:	xor    eax,esi
  4279ea:	add    eax,edi
  4279ec:	mov    DWORD PTR [ebp-0x2c],eax
  4279ef:	mov    eax,DWORD PTR [ebp-0x4]
  4279f2:	mov    eax,DWORD PTR [ebx+0x190]
  4279f8:	mov    ecx,DWORD PTR [eax]
  4279fa:	mov    ecx,DWORD PTR [ecx+0x3c]
  4279fd:	add    ecx,DWORD PTR [eax]
  4279ff:	mov    eax,DWORD PTR [ebp-0x4]
  427a02:	mov    eax,DWORD PTR [ebx+0x18c]
  427a08:	mov    edx,DWORD PTR [eax]
  427a0a:	mov    DWORD PTR [ebp-0x20],ecx
  427a0d:	mov    DWORD PTR [ebp+0x20],edx
  427a10:	cmp    edx,edx
  427a12:	jne    0x427a46
  427a14:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a1a:	lea    edx,[ebp-0x18]
  427a1d:	push   edx
  427a1e:	mov    edx,DWORD PTR [ebp-0xc]
  427a21:	xor    edx,esi
  427a23:	add    edx,edi
  427a25:	push   edx
  427a26:	push   DWORD PTR [ecx+0x50]
  427a29:	push   DWORD PTR [ebp+0x20]
  427a2c:	call   DWORD PTR [eax+0x1c]
  427a2f:	mov    eax,DWORD PTR [ebp-0x20]
  427a32:	mov    ecx,DWORD PTR [eax+0x54]
  427a35:	mov    eax,DWORD PTR [eax+0x50]
  427a38:	sub    eax,ecx
  427a3a:	add    ecx,DWORD PTR [ebp+0x20]
  427a3d:	push   ecx
  427a3e:	call   0x4283a9
  427a43:	mov    edx,DWORD PTR [ebp+0x20]
  427a46:	mov    eax,DWORD PTR [ebx+0x194]
  427a4c:	mov    DWORD PTR [eax],edx
  427a4e:	mov    eax,DWORD PTR [ebp+0xc]
  427a51:	push   DWORD PTR [eax+0x54]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	push   edx
  427a58:	call   0x42829f
  427a5d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a60:	mov    eax,DWORD PTR [ecx+0x3c]
  427a63:	add    eax,ecx
  427a65:	movzx  ecx,WORD PTR [eax+0x14]
  427a69:	lea    ecx,[ecx+eax*1+0x18]
  427a6d:	mov    DWORD PTR [ebp+0x18],ecx
  427a70:	mov    ecx,DWORD PTR [ebp-0x4]
  427a73:	movzx  edx,WORD PTR [eax+0x6]
  427a77:	xor    ecx,esi
  427a79:	add    ecx,edi
  427a7b:	mov    DWORD PTR [ebp+0xc],eax
  427a7e:	cmp    edx,ecx
  427a80:	je     0x427b2d
  427a86:	mov    ecx,DWORD PTR [ebp-0x4]
  427a89:	xor    ecx,esi
  427a8b:	add    ecx,edi
  427a8d:	mov    DWORD PTR [ebp-0x8],ecx
  427a90:	mov    ecx,DWORD PTR [ebp-0x24]
  427a93:	movzx  edx,WORD PTR [eax+0x6]
  427a97:	xor    ecx,esi
  427a99:	sub    edx,ecx
  427a9b:	sub    edx,edi
  427a9d:	cmp    DWORD PTR [ebp-0x8],edx
  427aa0:	ja     0x427b2d
  427aa6:	mov    edx,DWORD PTR [ebp+0x18]
  427aa9:	add    edx,0x8
  427aac:	mov    DWORD PTR [ebp+0x18],edx
  427aaf:	jmp    0x427ab4
  427ab1:	mov    edx,DWORD PTR [ebp+0x18]
  427ab4:	mov    eax,DWORD PTR [eax+0x38]
  427ab7:	lea    ecx,[eax-0x1]
  427aba:	mov    DWORD PTR [ebp-0x38],eax
  427abd:	mov    eax,DWORD PTR [edx]
  427abf:	test   eax,ecx
  427ac1:	je     0x427aca
  427ac3:	not    ecx
  427ac5:	and    eax,ecx
  427ac7:	add    eax,DWORD PTR [ebp-0x38]
  427aca:	mov    ecx,DWORD PTR [edx+0x4]
  427acd:	add    ecx,DWORD PTR [ebp+0x20]
  427ad0:	push   ecx
  427ad1:	call   0x4283a9
  427ad6:	mov    edx,DWORD PTR [ebp-0x4]
  427ad9:	mov    eax,DWORD PTR [ebp+0x18]
  427adc:	mov    ecx,DWORD PTR [eax+0x8]
  427adf:	xor    edx,esi
  427ae1:	add    edx,edi
  427ae3:	cmp    ecx,edx
  427ae5:	je     0x427afe
  427ae7:	push   ecx
  427ae8:	mov    ecx,DWORD PTR [ebp+0x8]
  427aeb:	add    ecx,DWORD PTR [eax+0xc]
  427aee:	mov    eax,DWORD PTR [eax+0x4]
  427af1:	add    eax,DWORD PTR [ebp+0x20]
  427af4:	push   ecx
  427af5:	push   eax
  427af6:	call   0x42829f
  427afb:	mov    eax,DWORD PTR [ebp+0x18]
  427afe:	mov    ecx,DWORD PTR [ebp-0x24]
  427b01:	mov    edx,DWORD PTR [ebp-0x8]
  427b04:	add    eax,0x28
  427b07:	xor    ecx,esi
  427b09:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b10:	mov    edx,DWORD PTR [ebp+0xc]
  427b13:	mov    DWORD PTR [ebp+0x18],eax
  427b16:	mov    eax,DWORD PTR [ebp-0x24]
  427b19:	movzx  edx,WORD PTR [edx+0x6]
  427b1d:	xor    eax,esi
  427b1f:	sub    edx,eax
  427b21:	mov    eax,DWORD PTR [ebp+0xc]
  427b24:	sub    edx,edi
  427b26:	mov    DWORD PTR [ebp-0x8],ecx
  427b29:	cmp    ecx,edx
  427b2b:	jbe    0x427ab1
  427b2d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b33:	mov    ecx,DWORD PTR [ebp+0x20]
  427b36:	cmp    ecx,DWORD PTR [edx]
  427b38:	jne    0x427b61
  427b3a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b40:	lea    edx,[ebp-0x18]
  427b43:	push   edx
  427b44:	mov    edx,DWORD PTR [ebp-0x10]
  427b47:	xor    edx,esi
  427b49:	add    edx,edi
  427b4b:	push   edx
  427b4c:	mov    edx,DWORD PTR [ebp-0x20]
  427b4f:	push   DWORD PTR [edx+0x54]
  427b52:	push   ecx
  427b53:	call   DWORD PTR [eax+0x1c]
  427b56:	test   eax,eax
  427b58:	je     0x427dfd
  427b5e:	mov    eax,DWORD PTR [ebp+0xc]
  427b61:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b67:	mov    ecx,DWORD PTR [ecx]
  427b69:	xor    ecx,esi
  427b6b:	add    ecx,edi
  427b6d:	je     0x427d28
  427b73:	mov    eax,DWORD PTR [ebp-0x4]
  427b76:	xor    eax,esi
  427b78:	add    eax,edi
  427b7a:	and    DWORD PTR [ebp+0x8],0x0
  427b7e:	mov    DWORD PTR [ebp-0x14],eax
  427b81:	mov    eax,0xf89c85c1
  427b86:	lea    ecx,[eax+0x18]
  427b89:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b90:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b97:	mov    DWORD PTR [ebp-0x50],eax
  427b9a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b9d:	mov    DWORD PTR [ebp-0x48],ecx
  427ba0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427ba7:	mov    edx,DWORD PTR [ebp+0x8]
  427baa:	mov    ecx,0x8ae
  427baf:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427bb4:	mov    edx,0x72f5
  427bb9:	add    cx,dx
  427bbc:	mov    edx,DWORD PTR [ebp+0x8]
  427bbf:	inc    DWORD PTR [ebp+0x8]
  427bc2:	cmp    DWORD PTR [ebp+0x8],0x6
  427bc6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bce:	jb     0x427ba7
  427bd0:	mov    ecx,0xf89c85d3
  427bd5:	mov    DWORD PTR [ebp-0xb0],eax
  427bdb:	mov    DWORD PTR [ebp-0x9c],eax
  427be1:	mov    DWORD PTR [ebp-0x74],eax
  427be4:	mov    DWORD PTR [ebp-0x70],eax
  427be7:	lea    eax,[ecx-0x3]
  427bea:	lea    edx,[ecx+0x2c]
  427bed:	mov    DWORD PTR [ebp-0x64],eax
  427bf0:	mov    DWORD PTR [ebp-0x60],eax
  427bf3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427bfd:	mov    DWORD PTR [ebp-0xac],ecx
  427c03:	mov    DWORD PTR [ebp-0xa8],edx
  427c09:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c13:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c1d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c27:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c31:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c3b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c41:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c4b:	mov    DWORD PTR [ebp-0x84],edx
  427c51:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c58:	mov    DWORD PTR [ebp-0x7c],ecx
  427c5b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c62:	mov    DWORD PTR [ebp-0x6c],ecx
  427c65:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c6c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c73:	xor    eax,eax
  427c75:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c7c:	xor    cl,0xae
  427c7f:	sub    cl,0xb
  427c82:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c89:	inc    eax
  427c8a:	cmp    eax,0x17
  427c8d:	jb     0x427c75
  427c8f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c95:	lea    ecx,[ebp-0xc0]
  427c9b:	push   ecx
  427c9c:	call   DWORD PTR [eax+0x4]
  427c9f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427ca5:	lea    edx,[ebp-0xd8]
  427cab:	push   edx
  427cac:	push   eax
  427cad:	call   DWORD PTR [ecx+0x8]
  427cb0:	mov    DWORD PTR [ebp-0x40],eax
  427cb3:	lea    eax,[ebp-0x14]
  427cb6:	push   eax
  427cb7:	mov    eax,DWORD PTR [ebx+0x18c]
  427cbd:	push   DWORD PTR [eax]
  427cbf:	mov    eax,DWORD PTR [ebp-0x40]
  427cc2:	call   eax
  427cc4:	mov    eax,DWORD PTR [ebp-0x4]
  427cc7:	xor    eax,esi
  427cc9:	add    eax,edi
  427ccb:	mov    DWORD PTR [ebp-0x34],eax
  427cce:	mov    ecx,DWORD PTR [ebp-0x4]
  427cd1:	mov    eax,DWORD PTR [ebp-0x14]
  427cd4:	xor    ecx,esi
  427cd6:	add    ecx,edi
  427cd8:	cmp    eax,ecx
  427cda:	je     0x427d25
  427cdc:	mov    DWORD PTR [ebp-0x3c],eax
  427cdf:	jmp    0x427cf0
  427ce1:	mov    eax,DWORD PTR [eax]
  427ce3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427ce6:	mov    DWORD PTR [ebp-0x14],eax
  427ce9:	mov    eax,DWORD PTR [ebp-0x14]
  427cec:	cmp    eax,ecx
  427cee:	je     0x427cfd
  427cf0:	mov    edx,DWORD PTR [eax+0x18]
  427cf3:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cf9:	cmp    edx,DWORD PTR [ecx]
  427cfb:	jne    0x427ce1
  427cfd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d03:	mov    edx,DWORD PTR [eax+0x18]
  427d06:	cmp    edx,DWORD PTR [ecx]
  427d08:	jne    0x427d25
  427d0a:	mov    ecx,DWORD PTR [ebx+0x190]
  427d10:	mov    edx,DWORD PTR [ebp-0x20]
  427d13:	mov    edx,DWORD PTR [edx+0x28]
  427d16:	add    edx,DWORD PTR [ecx]
  427d18:	mov    DWORD PTR [eax+0x1c],edx
  427d1b:	mov    eax,DWORD PTR [ebp-0x24]
  427d1e:	xor    eax,esi
  427d20:	add    eax,edi
  427d22:	mov    DWORD PTR [ebp-0x34],eax
  427d25:	mov    eax,DWORD PTR [ebp+0xc]
  427d28:	push   ebx
  427d29:	push   eax
  427d2a:	push   DWORD PTR [ebp+0x20]
  427d2d:	call   0x4274ad
  427d32:	test   eax,eax
  427d34:	je     0x427dfd
  427d3a:	push   DWORD PTR [ebp+0xc]
  427d3d:	mov    ecx,ebx
  427d3f:	push   DWORD PTR [ebp+0x20]
  427d42:	call   0x427406
  427d47:	test   eax,eax
  427d49:	je     0x427dfd
  427d4f:	mov    eax,DWORD PTR [ebp+0xc]
  427d52:	mov    edx,DWORD PTR [ebp+0x20]
  427d55:	mov    ecx,ebx
  427d57:	call   0x4272df
  427d5c:	test   eax,eax
  427d5e:	je     0x427dfd
  427d64:	push   ebx
  427d65:	push   DWORD PTR [ebp+0x20]
  427d68:	call   0x427790
  427d6d:	test   eax,eax
  427d6f:	je     0x427dfd
  427d75:	mov    eax,DWORD PTR [ebx+0x18c]
  427d7b:	mov    edx,DWORD PTR [ebp+0x20]
  427d7e:	cmp    edx,DWORD PTR [eax]
  427d80:	jne    0x427d9c
  427d82:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d88:	lea    ecx,[ebp-0x18]
  427d8b:	push   ecx
  427d8c:	push   DWORD PTR [ebp-0x18]
  427d8f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d92:	push   DWORD PTR [ecx+0x54]
  427d95:	push   edx
  427d96:	call   DWORD PTR [eax+0x1c]
  427d99:	mov    edx,DWORD PTR [ebp+0x20]
  427d9c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427da2:	mov    eax,DWORD PTR [eax]
  427da4:	xor    eax,esi
  427da6:	add    eax,edi
  427da8:	je     0x427de1
  427daa:	mov    ecx,DWORD PTR [ebp+0xc]
  427dad:	mov    eax,DWORD PTR [ecx+0x28]
  427db0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427db7:	mov    esi,DWORD PTR [ebp+0x8]
  427dba:	push   DWORD PTR [ebp+0x14]
  427dbd:	xor    esi,0x8ae
  427dc3:	push   DWORD PTR [ebp+0x10]
  427dc6:	add    esi,0x72f5
  427dcc:	or     WORD PTR [ecx+0x16],si
  427dd0:	add    eax,edx
  427dd2:	push   edx
  427dd3:	call   eax
  427dd5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427ddf:	jmp    0x427deb
  427de1:	mov    eax,DWORD PTR [ebp+0xc]
  427de4:	mov    eax,DWORD PTR [eax+0x28]
  427de7:	add    eax,edx
  427de9:	call   eax
  427deb:	mov    DWORD PTR [ebp-0x8],eax
  427dee:	mov    eax,DWORD PTR [ebp-0x8]
  427df1:	mov    ecx,DWORD PTR [ebp+0x1c]
  427df4:	mov    DWORD PTR [ecx],eax
  427df6:	mov    DWORD PTR [ebp-0x30],0x1
  427dfd:	cmp    DWORD PTR [ebp-0x30],0x0
  427e01:	jne    0x427e07
  427e03:	and    DWORD PTR [ebp+0x20],0x0
  427e07:	mov    eax,DWORD PTR [ebp+0x20]
  427e0a:	jmp    0x427e0e
  427e0c:	xor    eax,eax
  427e0e:	pop    edi
  427e0f:	pop    esi
  427e10:	pop    ebx
  427e11:	leave  
  427e12:	ret    0x1c
  427e15:	push   ebp
  427e16:	mov    ebp,esp
  427e18:	movzx  edx,WORD PTR [ecx+0x6]
  427e1c:	movzx  eax,WORD PTR [ecx+0x14]
  427e20:	push   ebx
  427e21:	push   edi
  427e22:	xor    edi,edi
  427e24:	lea    eax,[eax+ecx*1+0x18]
  427e28:	test   edx,edx
  427e2a:	je     0x427e4b
  427e2c:	mov    ecx,DWORD PTR [eax+0xc]
  427e2f:	lea    ebx,[ecx+esi*1]
  427e32:	cmp    DWORD PTR [ebp+0x8],ebx
  427e35:	jb     0x427e43
  427e37:	mov    ebx,DWORD PTR [eax+0x8]
  427e3a:	add    ebx,ecx
  427e3c:	add    ebx,esi
  427e3e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e41:	jb     0x427e4d
  427e43:	add    eax,0x28
  427e46:	inc    edi
  427e47:	cmp    edi,edx
  427e49:	jb     0x427e2c
  427e4b:	xor    eax,eax
  427e4d:	pop    edi
  427e4e:	pop    ebx
  427e4f:	pop    ebp
  427e50:	ret    0x4
  427e53:	push   ebp
  427e54:	mov    ebp,esp
  427e56:	sub    esp,0x34
  427e59:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e60:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e67:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e6e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e75:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e7c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e83:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e8a:	mov    DWORD PTR [ebp-0x10],eax
  427e8d:	mov    eax,DWORD PTR [ebp+0x8]
  427e90:	mov    DWORD PTR [ebp-0x14],eax
  427e93:	mov    eax,DWORD PTR [ebp-0xc]
  427e96:	push   ebx
  427e97:	mov    ecx,0x75108ae
  427e9c:	xor    eax,ecx
  427e9e:	push   esi
  427e9f:	mov    esi,DWORD PTR [ebp-0x10]
  427ea2:	mov    edx,0x3272f5
  427ea7:	add    eax,edx
  427ea9:	push   edi
  427eaa:	cmp    esi,eax
  427eac:	je     0x42808b
  427eb2:	mov    eax,DWORD PTR [ebp-0xc]
  427eb5:	mov    esi,DWORD PTR [ebp-0x14]
  427eb8:	xor    eax,ecx
  427eba:	add    eax,edx
  427ebc:	cmp    esi,eax
  427ebe:	je     0x42808b
  427ec4:	mov    eax,DWORD PTR [ebp-0xc]
  427ec7:	xor    eax,ecx
  427ec9:	add    eax,edx
  427ecb:	mov    DWORD PTR [ebp-0x24],eax
  427ece:	mov    eax,DWORD PTR [ebp-0xc]
  427ed1:	xor    eax,ecx
  427ed3:	add    eax,edx
  427ed5:	mov    DWORD PTR [ebp-0x28],eax
  427ed8:	mov    edi,DWORD PTR [ebp-0x20]
  427edb:	mov    ebx,DWORD PTR [ebp-0x8]
  427ede:	mov    esi,0x8ae
  427ee3:	xor    edi,esi
  427ee5:	mov    eax,0x72f5
  427eea:	xor    ebx,esi
  427eec:	add    edi,eax
  427eee:	add    ebx,eax
  427ef0:	sub    ebx,edi
  427ef2:	mov    WORD PTR [ebp-0x8],bx
  427ef6:	jmp    0x427fbb
  427efb:	mov    edi,DWORD PTR [ebp-0xc]
  427efe:	mov    bx,WORD PTR [ebp-0x4]
  427f02:	xor    edi,esi
  427f04:	add    edi,eax
  427f06:	cmp    bx,di
  427f09:	je     0x427ffd
  427f0f:	mov    edi,DWORD PTR [ebp-0xc]
  427f12:	mov    ebx,DWORD PTR [ebp+0xc]
  427f15:	xor    edi,ecx
  427f17:	add    edi,edx
  427f19:	cmp    ebx,edi
  427f1b:	mov    di,WORD PTR [ebp-0x4]
  427f1f:	mov    bx,WORD PTR [ebp+0x8]
  427f23:	je     0x427f8e
  427f25:	cmp    bx,di
  427f28:	je     0x427f97
  427f2a:	mov    edi,DWORD PTR [ebp-0x20]
  427f2d:	mov    bx,WORD PTR [ebp+0x8]
  427f31:	xor    edi,esi
  427f33:	add    edi,eax
  427f35:	cmp    bx,di
  427f38:	jb     0x427f58
  427f3a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f3d:	mov    bx,WORD PTR [ebp+0x8]
  427f41:	xor    edi,esi
  427f43:	add    edi,eax
  427f45:	cmp    bx,di
  427f48:	ja     0x427f58
  427f4a:	movzx  edi,WORD PTR [ebp+0x8]
  427f4e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f52:	add    edi,ebx
  427f54:	mov    WORD PTR [ebp+0x8],di
  427f58:	mov    edi,DWORD PTR [ebp-0x20]
  427f5b:	mov    bx,WORD PTR [ebp-0x4]
  427f5f:	xor    edi,esi
  427f61:	add    edi,eax
  427f63:	cmp    bx,di
  427f66:	jb     0x427f86
  427f68:	mov    edi,DWORD PTR [ebp-0x2c]
  427f6b:	mov    bx,WORD PTR [ebp-0x4]
  427f6f:	xor    edi,esi
  427f71:	add    edi,eax
  427f73:	cmp    bx,di
  427f76:	ja     0x427f86
  427f78:	movzx  edi,WORD PTR [ebp-0x4]
  427f7c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f80:	add    edi,ebx
  427f82:	mov    WORD PTR [ebp-0x4],di
  427f86:	mov    di,WORD PTR [ebp-0x4]
  427f8a:	mov    bx,WORD PTR [ebp+0x8]
  427f8e:	cmp    bx,di
  427f91:	jne    0x42808b
  427f97:	mov    edi,DWORD PTR [ebp-0x1c]
  427f9a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f9d:	xor    edi,ecx
  427f9f:	lea    edi,[edi+ebx*1+0x3272f5]
  427fa6:	mov    DWORD PTR [ebp-0x10],edi
  427fa9:	mov    edi,DWORD PTR [ebp-0x1c]
  427fac:	mov    ebx,DWORD PTR [ebp-0x14]
  427faf:	xor    edi,ecx
  427fb1:	lea    edi,[edi+ebx*1+0x3272f5]
  427fb8:	mov    DWORD PTR [ebp-0x14],edi
  427fbb:	mov    edi,DWORD PTR [ebp-0x24]
  427fbe:	mov    ebx,DWORD PTR [ebp-0x10]
  427fc1:	mov    di,WORD PTR [ebx+edi*2]
  427fc5:	mov    WORD PTR [ebp+0x8],di
  427fc9:	mov    edi,DWORD PTR [ebp-0x28]
  427fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fcf:	mov    di,WORD PTR [ebx+edi*2]
  427fd3:	mov    WORD PTR [ebp-0x4],di
  427fd7:	mov    edi,DWORD PTR [ebp-0xc]
  427fda:	mov    bx,WORD PTR [ebp+0x8]
  427fde:	xor    edi,esi
  427fe0:	add    edi,eax
  427fe2:	cmp    bx,di
  427fe5:	jne    0x427efb
  427feb:	mov    eax,DWORD PTR [ebp-0x18]
  427fee:	mov    esi,DWORD PTR [ebp-0xc]
  427ff1:	xor    eax,ecx
  427ff3:	add    eax,edx
  427ff5:	imul   eax,esi
  427ff8:	mov    DWORD PTR [ebp-0xc],eax
  427ffb:	jmp    0x42800f
  427ffd:	mov    eax,DWORD PTR [ebp-0xc]
  428000:	mov    esi,DWORD PTR [ebp-0x18]
  428003:	xor    eax,ecx
  428005:	lea    eax,[eax+esi*1+0x3272f5]
  42800c:	mov    DWORD PTR [ebp-0x18],eax
  42800f:	mov    eax,DWORD PTR [ebp-0x24]
  428012:	sub    eax,edx
  428014:	xor    eax,ecx
  428016:	mov    DWORD PTR [ebp-0x30],eax
  428019:	mov    eax,DWORD PTR [ebp-0x28]
  42801c:	sub    eax,edx
  42801e:	xor    eax,ecx
  428020:	mov    DWORD PTR [ebp-0x34],eax
  428023:	mov    eax,DWORD PTR [ebp-0x34]
  428026:	mov    esi,DWORD PTR [ebp-0x1c]
  428029:	xor    esi,ecx
  42802b:	add    esi,edx
  42802d:	xor    eax,ecx
  42802f:	add    eax,0x3272f5
  428034:	imul   esi,eax
  428037:	mov    eax,DWORD PTR [ebp-0x14]
  42803a:	movzx  eax,WORD PTR [esi+eax*1]
  42803e:	mov    esi,DWORD PTR [ebp-0x30]
  428041:	mov    edi,DWORD PTR [ebp-0x1c]
  428044:	xor    esi,ecx
  428046:	add    esi,edx
  428048:	xor    edi,ecx
  42804a:	add    edi,edx
  42804c:	imul   edi,esi
  42804f:	mov    esi,DWORD PTR [ebp-0x10]
  428052:	movzx  esi,WORD PTR [edi+esi*1]
  428056:	sub    eax,edx
  428058:	sub    esi,edx
  42805a:	xor    eax,ecx
  42805c:	xor    esi,ecx
  42805e:	cmp    esi,eax
  428060:	jne    0x42808b
  428062:	mov    eax,DWORD PTR [ebp-0x30]
  428065:	mov    esi,DWORD PTR [ebp-0x1c]
  428068:	xor    eax,ecx
  42806a:	add    eax,0x3272f5
  42806f:	xor    esi,ecx
  428071:	add    esi,edx
  428073:	imul   esi,eax
  428076:	mov    eax,DWORD PTR [ebp-0x10]
  428079:	movzx  eax,WORD PTR [esi+eax*1]
  42807d:	mov    esi,DWORD PTR [ebp-0xc]
  428080:	sub    eax,edx
  428082:	xor    eax,ecx
  428084:	cmp    eax,esi
  428086:	mov    eax,DWORD PTR [ebp-0xc]
  428089:	je     0x42808e
  42808b:	mov    eax,DWORD PTR [ebp-0x18]
  42808e:	pop    edi
  42808f:	xor    eax,ecx
  428091:	pop    esi
  428092:	add    eax,edx
  428094:	pop    ebx
  428095:	leave  
  428096:	ret    0x8
  428099:	push   ebp
  42809a:	mov    ebp,esp
  42809c:	push   ecx
  42809d:	mov    cx,WORD PTR [eax]
  4280a0:	push   esi
  4280a1:	mov    esi,0x3b5c
  4280a6:	sub    cx,si
  4280a9:	mov    esi,0x8a9a
  4280ae:	xor    cx,si
  4280b1:	mov    esi,0x4e3e
  4280b6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280bd:	mov    edx,0xf89c85a5
  4280c2:	cmp    cx,si
  4280c5:	je     0x428124
  4280c7:	push   ebx
  4280c8:	push   edi
  4280c9:	movzx  ecx,cx
  4280cc:	mov    edi,0xffcd8d0b
  4280d1:	mov    esi,0x75108ae
  4280d6:	mov    ebx,0x4f9a
  4280db:	cmp    cx,bx
  4280de:	jne    0x4280e3
  4280e0:	mov    DWORD PTR [ebp-0x4],edx
  4280e3:	lea    edx,[edi+0x1]
  4280e6:	xor    edx,esi
  4280e8:	mov    edi,edx
  4280ea:	xor    edi,esi
  4280ec:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  4280f4:	mov    ebx,0x3b5c
  4280f9:	sub    cx,bx
  4280fc:	mov    ebx,0x8a9a
  428101:	xor    cx,bx
  428104:	mov    ebx,0x4e3e
  428109:	cmp    cx,bx
  42810c:	jne    0x4280d6
  42810e:	mov    ecx,DWORD PTR [ebp-0x4]
  428111:	pop    edi
  428112:	pop    ebx
  428113:	cmp    ecx,0xf89c85a4
  428119:	je     0x428124
  42811b:	xor    ecx,esi
  42811d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428124:	pop    esi
  428125:	leave  
  428126:	ret    
  428127:	push   ebp
  428128:	mov    ebp,esp
  42812a:	push   ecx
  42812b:	push   esi
  42812c:	push   edi
  42812d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428134:	mov    esi,0xf89c85a5
  428139:	call   0x428099
  42813e:	mov    edi,eax
  428140:	mov    al,BYTE PTR [edi]
  428142:	sub    al,0x3
  428144:	xor    al,0x7e
  428146:	cmp    al,0x83
  428148:	je     0x4281ab
  42814a:	mov    eax,edi
  42814c:	mov    edx,0xffcd8d0b
  428151:	mov    ecx,0x75108ae
  428156:	push   ebx
  428157:	mov    ax,WORD PTR [eax]
  42815a:	mov    ebx,0x3b5c
  42815f:	sub    ax,bx
  428162:	mov    ebx,0x8a9a
  428167:	xor    ax,bx
  42816a:	mov    ebx,0x4e48
  42816f:	cmp    ax,bx
  428172:	jne    0x428177
  428174:	mov    DWORD PTR [ebp-0x4],esi
  428177:	lea    esi,[edx+0x1]
  42817a:	xor    esi,ecx
  42817c:	mov    edx,esi
  42817e:	xor    edx,ecx
  428180:	lea    eax,[edi+edx*2+0x64e5ea]
  428187:	mov    bl,BYTE PTR [eax]
  428189:	sub    bl,0x3
  42818c:	xor    bl,0x7e
  42818f:	cmp    bl,0x83
  428192:	jne    0x428157
  428194:	mov    eax,DWORD PTR [ebp-0x4]
  428197:	pop    ebx
  428198:	cmp    eax,0xf89c85a4
  42819d:	je     0x4281ab
  42819f:	xor    eax,ecx
  4281a1:	xor    ecx,ecx
  4281a3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4281ab:	mov    eax,edi
  4281ad:	pop    edi
  4281ae:	pop    esi
  4281af:	leave  
  4281b0:	ret    
  4281b1:	push   ebp
  4281b2:	mov    ebp,esp
  4281b4:	push   ecx
  4281b5:	push   esi
  4281b6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281bd:	mov    esi,0xf89c85a5
  4281c2:	call   0x428099
  4281c7:	mov    cx,WORD PTR [eax]
  4281ca:	mov    edx,0x3b5c
  4281cf:	sub    cx,dx
  4281d2:	mov    edx,0x8a9a
  4281d7:	xor    cx,dx
  4281da:	mov    edx,0x4e3e
  4281df:	cmp    cx,dx
  4281e2:	je     0x42823b
  4281e4:	push   ebx
  4281e5:	push   edi
  4281e6:	movzx  ecx,cx
  4281e9:	mov    edx,0xffcd8d0b
  4281ee:	mov    edi,0x75108ae
  4281f3:	mov    ebx,0x4e48
  4281f8:	cmp    cx,bx
  4281fb:	jne    0x428200
  4281fd:	mov    DWORD PTR [ebp-0x4],esi
  428200:	lea    esi,[edx+0x1]
  428203:	xor    esi,edi
  428205:	mov    edx,esi
  428207:	xor    edx,edi
  428209:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428211:	mov    ebx,0x3b5c
  428216:	sub    cx,bx
  428219:	mov    ebx,0x8a9a
  42821e:	xor    cx,bx
  428221:	mov    ebx,0x4e3e
  428226:	cmp    cx,bx
  428229:	jne    0x4281f3
  42822b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428232:	pop    edi
  428233:	pop    ebx
  428234:	je     0x42823b
  428236:	xor    eax,eax
  428238:	inc    eax
  428239:	jmp    0x42823d
  42823b:	xor    eax,eax
  42823d:	pop    esi
  42823e:	leave  
  42823f:	ret    
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   ecx
  428244:	mov    eax,DWORD PTR [ebp+0x8]
  428247:	movzx  ecx,WORD PTR [eax]
  42824a:	push   esi
  42824b:	lea    eax,[ecx-0x3b5c]
  428251:	mov    esi,0x8a9a
  428256:	push   edi
  428257:	xor    eax,esi
  428259:	mov    edi,0x4e3e
  42825e:	mov    DWORD PTR [ebp-0x4],edx
  428261:	cmp    ax,di
  428264:	je     0x428291
  428266:	mov    eax,DWORD PTR [ebp+0x8]
  428269:	sub    eax,edx
  42826b:	mov    DWORD PTR [ebp+0x8],eax
  42826e:	jmp    0x428273
  428270:	mov    eax,DWORD PTR [ebp+0x8]
  428273:	mov    WORD PTR [edx],cx
  428276:	add    edx,0x2
  428279:	movzx  edi,WORD PTR [eax+edx*1]
  42827d:	mov    ecx,edi
  42827f:	add    edi,0xffffc4a4
  428285:	xor    edi,esi
  428287:	mov    eax,0x4e3e
  42828c:	cmp    di,ax
  42828f:	jne    0x428270
  428291:	xor    eax,eax
  428293:	pop    edi
  428294:	mov    WORD PTR [edx],ax
  428297:	mov    eax,DWORD PTR [ebp-0x4]
  42829a:	pop    esi
  42829b:	leave  
  42829c:	ret    0x4
  42829f:	push   ebp
  4282a0:	mov    ebp,esp
  4282a2:	sub    esp,0x18
  4282a5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4282ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282b6:	push   esi
  4282b7:	mov    eax,0x75108ae
  4282bc:	xor    ecx,eax
  4282be:	mov    esi,0x3272f5
  4282c3:	add    ecx,esi
  4282c5:	mov    DWORD PTR [ebp-0x4],ecx
  4282c8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282cf:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282d6:	push   edi
  4282d7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282de:	jmp    0x42837f
  4282e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282e6:	mov    edx,DWORD PTR [ebp+0x10]
  4282e9:	sub    edx,ecx
  4282eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ee:	xor    ecx,eax
  4282f0:	add    ecx,esi
  4282f2:	cmp    edx,ecx
  4282f4:	jbe    0x428311
  4282f6:	mov    edx,DWORD PTR [ebp-0x4]
  4282f9:	add    edx,DWORD PTR [ebp+0x8]
  4282fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4282ff:	add    ecx,DWORD PTR [ebp+0xc]
  428302:	mov    edi,DWORD PTR [ecx]
  428304:	mov    DWORD PTR [edx],edi
  428306:	mov    ecx,DWORD PTR [ecx+0x4]
  428309:	mov    DWORD PTR [edx+0x4],ecx
  42830c:	mov    ecx,DWORD PTR [ebp-0xc]
  42830f:	jmp    0x42835e
  428311:	mov    ecx,DWORD PTR [ebp-0x4]
  428314:	mov    edx,DWORD PTR [ebp+0x10]
  428317:	sub    edx,ecx
  428319:	mov    ecx,DWORD PTR [ebp-0x10]
  42831c:	xor    ecx,eax
  42831e:	add    ecx,esi
  428320:	cmp    edx,ecx
  428322:	mov    ecx,DWORD PTR [ebp-0x4]
  428325:	jbe    0x428339
  428327:	add    ecx,DWORD PTR [ebp+0x8]
  42832a:	mov    edx,DWORD PTR [ebp-0x4]
  42832d:	add    edx,DWORD PTR [ebp+0xc]
  428330:	mov    edx,DWORD PTR [edx]
  428332:	mov    DWORD PTR [ecx],edx
  428334:	mov    ecx,DWORD PTR [ebp-0x10]
  428337:	jmp    0x42835e
  428339:	mov    edx,DWORD PTR [ebp+0x10]
  42833c:	sub    edx,ecx
  42833e:	mov    ecx,DWORD PTR [ebp-0x14]
  428341:	xor    ecx,eax
  428343:	add    ecx,esi
  428345:	cmp    edx,ecx
  428347:	mov    ecx,DWORD PTR [ebp-0x4]
  42834a:	jbe    0x42836f
  42834c:	add    ecx,DWORD PTR [ebp+0x8]
  42834f:	mov    edx,DWORD PTR [ebp-0x4]
  428352:	add    edx,DWORD PTR [ebp+0xc]
  428355:	mov    dx,WORD PTR [edx]
  428358:	mov    WORD PTR [ecx],dx
  42835b:	mov    ecx,DWORD PTR [ebp-0x14]
  42835e:	mov    edx,DWORD PTR [ebp-0x4]
  428361:	xor    ecx,eax
  428363:	lea    ecx,[ecx+edx*1+0x3272f5]
  42836a:	mov    DWORD PTR [ebp-0x4],ecx
  42836d:	jmp    0x42837f
  42836f:	add    ecx,DWORD PTR [ebp+0x8]
  428372:	mov    edx,DWORD PTR [ebp-0x4]
  428375:	add    edx,DWORD PTR [ebp+0xc]
  428378:	mov    dl,BYTE PTR [edx]
  42837a:	mov    BYTE PTR [ecx],dl
  42837c:	inc    DWORD PTR [ebp-0x4]
  42837f:	mov    ecx,DWORD PTR [ebp-0x18]
  428382:	mov    edx,DWORD PTR [ebp+0x10]
  428385:	xor    ecx,eax
  428387:	add    ecx,esi
  428389:	imul   ecx,edx
  42838c:	mov    edx,DWORD PTR [ebp-0x8]
  42838f:	mov    edi,DWORD PTR [ebp-0x4]
  428392:	xor    edx,eax
  428394:	lea    edx,[edx+edi*1+0x3272f5]
  42839b:	cmp    edx,ecx
  42839d:	jb     0x4282e3
  4283a3:	pop    edi
  4283a4:	pop    esi
  4283a5:	leave  
  4283a6:	ret    0xc
  4283a9:	push   ebp
  4283aa:	mov    ebp,esp
  4283ac:	sub    esp,0xc
  4283af:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283b6:	push   esi
  4283b7:	mov    esi,eax
  4283b9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283c0:	mov    edx,DWORD PTR [ebp-0x4]
  4283c3:	mov    eax,0x75108ae
  4283c8:	xor    edx,eax
  4283ca:	mov    ecx,0x3272f5
  4283cf:	add    edx,ecx
  4283d1:	cmp    esi,edx
  4283d3:	je     0x428415
  4283d5:	push   ebx
  4283d6:	push   edi
  4283d7:	mov    edx,DWORD PTR [ebp-0x8]
  4283da:	mov    ebx,DWORD PTR [ebp+0x8]
  4283dd:	xor    edx,eax
  4283df:	mov    edi,0xffcd8d0b
  4283e4:	sub    edi,edx
  4283e6:	add    esi,edi
  4283e8:	lea    edx,[esi-0x3272f5]
  4283ee:	xor    edx,eax
  4283f0:	mov    DWORD PTR [ebp-0xc],edx
  4283f3:	mov    edx,DWORD PTR [ebp-0x4]
  4283f6:	mov    edi,DWORD PTR [ebp-0xc]
  4283f9:	xor    dl,0xae
  4283fc:	sub    dl,0xb
  4283ff:	xor    edi,eax
  428401:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428408:	mov    edx,DWORD PTR [ebp-0x4]
  42840b:	xor    edx,eax
  42840d:	add    edx,ecx
  42840f:	cmp    esi,edx
  428411:	jne    0x4283d7
  428413:	pop    edi
  428414:	pop    ebx
  428415:	pop    esi
  428416:	leave  
  428417:	ret    0x4
  42841a:	push   ebp
  42841b:	mov    ebp,esp
  42841d:	sub    esp,0x21c
  428423:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42842a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428431:	mov    eax,DWORD PTR [ebp+0x10]
  428434:	mov    eax,DWORD PTR [ebp-0x4]
  428437:	mov    ecx,DWORD PTR [ebp+0x8]
  42843a:	push   esi
  42843b:	push   edi
  42843c:	mov    edi,0x75108ae
  428441:	xor    eax,edi
  428443:	mov    esi,0x3272f5
  428448:	add    eax,esi
  42844a:	cmp    eax,ecx
  42844c:	mov    eax,DWORD PTR [ebp-0x4]
  42844f:	jne    0x42845a
  428451:	xor    eax,edi
  428453:	add    eax,esi
  428455:	jmp    0x428506
  42845a:	mov    ecx,DWORD PTR [ebp+0xc]
  42845d:	xor    eax,edi
  42845f:	add    eax,esi
  428461:	cmp    eax,ecx
  428463:	jne    0x42846a
  428465:	mov    eax,DWORD PTR [ebp-0x4]
  428468:	jmp    0x428451
  42846a:	lea    eax,[ebp-0x21c]
  428470:	mov    DWORD PTR [ebp-0x8],eax
  428473:	mov    eax,DWORD PTR [ebp+0xc]
  428476:	mov    DWORD PTR [ebp-0x10],eax
  428479:	mov    eax,DWORD PTR [ebp-0x4]
  42847c:	xor    eax,edi
  42847e:	add    eax,esi
  428480:	mov    DWORD PTR [ebp+0x10],eax
  428483:	mov    eax,DWORD PTR [ebp+0xc]
  428486:	push   ebx
  428487:	call   0x4281b1
  42848c:	mov    ebx,eax
  42848e:	mov    eax,DWORD PTR [ebp+0x8]
  428491:	mov    eax,DWORD PTR [eax+0x14]
  428494:	jmp    0x4284ee
  428496:	mov    eax,DWORD PTR [ebp+0xc]
  428499:	sub    eax,0x8
  42849c:	mov    DWORD PTR [ebp-0xc],eax
  42849f:	mov    eax,DWORD PTR [ebp-0xc]
  4284a2:	mov    eax,DWORD PTR [eax+0x28]
  4284a5:	call   0x428099
  4284aa:	mov    DWORD PTR [ebp+0x10],eax
  4284ad:	push   DWORD PTR [ebp+0x10]
  4284b0:	mov    edx,DWORD PTR [ebp-0x8]
  4284b3:	call   0x428240
  4284b8:	mov    eax,DWORD PTR [ebp-0x4]
  4284bb:	xor    eax,edi
  4284bd:	add    eax,esi
  4284bf:	cmp    eax,ebx
  4284c1:	jne    0x4284cb
  4284c3:	mov    eax,DWORD PTR [ebp-0x8]
  4284c6:	call   0x428127
  4284cb:	mov    eax,DWORD PTR [ebp-0x14]
  4284ce:	xor    eax,edi
  4284d0:	add    eax,esi
  4284d2:	push   eax
  4284d3:	push   DWORD PTR [ebp-0x10]
  4284d6:	mov    eax,DWORD PTR [ebp-0x8]
  4284d9:	call   0x427e53
  4284de:	mov    ecx,DWORD PTR [ebp-0x4]
  4284e1:	xor    ecx,edi
  4284e3:	add    ecx,esi
  4284e5:	cmp    eax,ecx
  4284e7:	je     0x42850c
  4284e9:	mov    eax,DWORD PTR [ebp+0xc]
  4284ec:	mov    eax,DWORD PTR [eax]
  4284ee:	mov    DWORD PTR [ebp+0xc],eax
  4284f1:	mov    eax,DWORD PTR [ebp+0x8]
  4284f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4284f7:	add    eax,0x14
  4284fa:	cmp    ecx,eax
  4284fc:	jne    0x428496
  4284fe:	mov    eax,DWORD PTR [ebp-0x4]
  428501:	xor    eax,edi
  428503:	add    eax,esi
  428505:	pop    ebx
  428506:	pop    edi
  428507:	pop    esi
  428508:	leave  
  428509:	ret    0xc
  42850c:	mov    eax,DWORD PTR [ebp-0xc]
  42850f:	mov    eax,DWORD PTR [eax+0x18]
  428512:	jmp    0x428505
  428514:	push   ebp
  428515:	mov    ebp,esp
  428517:	mov    eax,DWORD PTR [ebp+0xc]
  42851a:	sub    esp,0x10
  42851d:	cmp    DWORD PTR [ebp+0x8],0x0
  428521:	push   ebx
  428522:	push   esi
  428523:	push   edi
  428524:	je     0x4285d9
  42852a:	test   eax,eax
  42852c:	je     0x4285d9
  428532:	movzx  eax,WORD PTR [eax+0x20]
  428536:	mov    ecx,eax
  428538:	mov    DWORD PTR [ebp-0x10],eax
  42853b:	xor    edx,edx
  42853d:	and    DWORD PTR [ebp-0x8],edx
  428540:	mov    eax,0x8a9a
  428545:	xor    ecx,eax
  428547:	add    ecx,0x3b5c
  42854d:	mov    DWORD PTR [ebp-0xc],ecx
  428550:	and    DWORD PTR [ebp-0x4],0x0
  428554:	xor    ecx,ecx
  428556:	push   0xffffff81
  428558:	pop    edi
  428559:	cmp    cx,WORD PTR [ebp-0xc]
  42855d:	jae    0x4285c3
  42855f:	lea    esi,[edx-0x3b5c]
  428565:	xor    esi,eax
  428567:	movzx  ecx,WORD PTR [ebp-0x4]
  42856b:	mov    ebx,DWORD PTR [ebp+0xc]
  42856e:	lea    ecx,[ebx+ecx*4]
  428571:	cmp    WORD PTR [ecx+0x2],si
  428575:	jne    0x4285ae
  428577:	movzx  ecx,WORD PTR [ecx]
  42857a:	mov    edi,0x4e3e
  42857f:	cmp    cx,di
  428582:	jne    0x428590
  428584:	mov    ebx,DWORD PTR [ebp+0x8]
  428587:	movzx  edi,dx
  42858a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42858e:	je     0x4285bd
  428590:	mov    ebx,DWORD PTR [ebp+0x8]
  428593:	movzx  edi,dx
  428596:	movsx  di,BYTE PTR [edi+ebx*1]
  42859b:	mov    ebx,0x3b5c
  4285a0:	sub    di,bx
  4285a3:	xor    di,ax
  4285a6:	cmp    cx,di
  4285a9:	je     0x4285bd
  4285ab:	push   0xffffff83
  4285ad:	pop    edi
  4285ae:	inc    DWORD PTR [ebp-0x4]
  4285b1:	mov    cx,WORD PTR [ebp-0xc]
  4285b5:	cmp    WORD PTR [ebp-0x4],cx
  4285b9:	jb     0x428567
  4285bb:	jmp    0x4285c3
  4285bd:	inc    DWORD PTR [ebp-0x8]
  4285c0:	push   0xffffff80
  4285c2:	pop    edi
  4285c3:	mov    esi,DWORD PTR [ebp+0x8]
  4285c6:	movzx  ecx,dx
  4285c9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285cd:	je     0x4285e2
  4285cf:	inc    edx
  4285d0:	cmp    edi,0xffffff83
  4285d3:	jne    0x428550
  4285d9:	xor    eax,eax
  4285db:	pop    edi
  4285dc:	pop    esi
  4285dd:	pop    ebx
  4285de:	leave  
  4285df:	ret    0x8
  4285e2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285e5:	add    ecx,0xffffc4a4
  4285eb:	xor    cx,ax
  4285ee:	xor    eax,eax
  4285f0:	cmp    cx,WORD PTR [ebp-0x10]
  4285f4:	sete   al
  4285f7:	jmp    0x4285db
  4285f9:	push   ebp
  4285fa:	mov    ebp,esp
  4285fc:	sub    esp,0x50
  4285ff:	push   edi
  428600:	mov    edi,eax
  428602:	mov    eax,DWORD PTR [edi+0x1a8]
  428608:	cmp    DWORD PTR [eax],0x0
  42860b:	jne    0x428614
  42860d:	xor    eax,eax
  42860f:	jmp    0x428745
  428614:	push   DWORD PTR [ebp+0x8]
  428617:	push   0x2c
  428619:	pop    eax
  42861a:	call   0x4283a9
  42861f:	mov    edx,DWORD PTR [edi+0x1ac]
  428625:	lea    eax,[edi+0x22]
  428628:	mov    DWORD PTR [ebp-0x4c],eax
  42862b:	lea    eax,[edi+0x44]
  42862e:	mov    DWORD PTR [ebp-0x48],eax
  428631:	lea    eax,[edi+0x66]
  428634:	mov    DWORD PTR [ebp-0x44],eax
  428637:	lea    eax,[edi+0x88]
  42863d:	mov    DWORD PTR [ebp-0x40],eax
  428640:	lea    eax,[edi+0xaa]
  428646:	mov    DWORD PTR [ebp-0x3c],eax
  428649:	lea    eax,[edi+0xcc]
  42864f:	mov    DWORD PTR [ebp-0x38],eax
  428652:	lea    eax,[edi+0xee]
  428658:	mov    DWORD PTR [ebp-0x34],eax
  42865b:	lea    eax,[edi+0x110]
  428661:	mov    DWORD PTR [ebp-0x30],eax
  428664:	lea    eax,[edi+0x132]
  42866a:	mov    DWORD PTR [ebp-0x2c],eax
  42866d:	lea    eax,[edi+0x154]
  428673:	push   edi
  428674:	mov    DWORD PTR [ebp-0x50],edi
  428677:	mov    DWORD PTR [ebp-0x28],eax
  42867a:	call   0x428779
  42867f:	push   eax
  428680:	mov    eax,DWORD PTR [edi+0x1a8]
  428686:	push   DWORD PTR [eax]
  428688:	call   0x42841a
  42868d:	mov    DWORD PTR [ebp-0x10],eax
  428690:	test   eax,eax
  428692:	je     0x428745
  428698:	mov    ecx,DWORD PTR [eax+0x3c]
  42869b:	push   ebx
  42869c:	push   esi
  42869d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4286a1:	add    esi,eax
  4286a3:	mov    edi,DWORD PTR [esi+0x24]
  4286a6:	mov    ecx,DWORD PTR [esi+0x1c]
  4286a9:	mov    edx,DWORD PTR [esi+0x20]
  4286ac:	mov    ebx,DWORD PTR [esi+0x18]
  4286af:	add    edi,eax
  4286b1:	mov    DWORD PTR [ebp-0x20],edi
  4286b4:	mov    edi,DWORD PTR [esi+0x14]
  4286b7:	add    ecx,eax
  4286b9:	add    edx,eax
  4286bb:	mov    DWORD PTR [ebp-0xc],ecx
  4286be:	mov    DWORD PTR [ebp-0x1c],edx
  4286c1:	mov    DWORD PTR [ebp-0x8],edi
  4286c4:	cmp    edi,ebx
  4286c6:	ja     0x4286cb
  4286c8:	mov    DWORD PTR [ebp-0x8],ebx
  4286cb:	xor    ebx,ebx
  4286cd:	mov    DWORD PTR [ebp-0x18],ebx
  4286d0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286d3:	jbe    0x428743
  4286d5:	jmp    0x4286da
  4286d7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286da:	mov    edi,DWORD PTR [ebp-0x20]
  4286dd:	movzx  edi,WORD PTR [edi+ebx*2]
  4286e1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286e4:	jae    0x428743
  4286e6:	cmp    edi,DWORD PTR [esi+0x14]
  4286e9:	jae    0x428743
  4286eb:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286ee:	mov    edx,DWORD PTR [ebp+0x8]
  4286f1:	mov    edi,DWORD PTR [ecx+edi*4]
  4286f4:	mov    DWORD PTR [ebp-0x4],edx
  4286f7:	lea    edx,[ebp-0x50]
  4286fa:	add    ebx,eax
  4286fc:	add    edi,eax
  4286fe:	sub    edx,DWORD PTR [ebp+0x8]
  428701:	mov    DWORD PTR [ebp-0x14],0xb
  428708:	mov    DWORD PTR [ebp-0x24],edx
  42870b:	mov    edx,DWORD PTR [ebp-0x4]
  42870e:	cmp    DWORD PTR [edx],0x0
  428711:	jne    0x42872e
  428713:	mov    eax,DWORD PTR [ebp-0x24]
  428716:	push   DWORD PTR [eax+edx*1]
  428719:	push   ebx
  42871a:	call   0x428514
  42871f:	mov    ecx,DWORD PTR [ebp-0xc]
  428722:	test   eax,eax
  428724:	je     0x42872b
  428726:	mov    eax,DWORD PTR [ebp-0x4]
  428729:	mov    DWORD PTR [eax],edi
  42872b:	mov    eax,DWORD PTR [ebp-0x10]
  42872e:	add    DWORD PTR [ebp-0x4],0x4
  428732:	dec    DWORD PTR [ebp-0x14]
  428735:	jne    0x42870b
  428737:	mov    ebx,DWORD PTR [ebp-0x18]
  42873a:	inc    ebx
  42873b:	mov    DWORD PTR [ebp-0x18],ebx
  42873e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428741:	jb     0x4286d7
  428743:	pop    esi
  428744:	pop    ebx
  428745:	pop    edi
  428746:	leave  
  428747:	ret    0x4
  42874a:	push   ebp
  42874b:	mov    ebp,esp
  42874d:	mov    eax,DWORD PTR [ebp+0x8]
  428750:	push   esi
  428751:	push   DWORD PTR [eax+0x1e0]
  428757:	lea    esi,[eax+0x198]
  42875d:	mov    eax,DWORD PTR [ebp+0x8]
  428760:	call   0x4285f9
  428765:	mov    ecx,DWORD PTR [esi]
  428767:	mov    DWORD PTR [ecx],eax
  428769:	mov    eax,DWORD PTR [esi]
  42876b:	xor    ecx,ecx
  42876d:	cmp    DWORD PTR [eax],ecx
  42876f:	pop    esi
  428770:	setne  cl
  428773:	mov    eax,ecx
  428775:	pop    ebp
  428776:	ret    0x4
  428779:	mov    ecx,DWORD PTR [edi+0x188]
  42877f:	push   ebx
  428780:	jmp    0x428795
  428782:	xor    eax,0x8a9a
  428787:	add    eax,0x3b5c
  42878c:	mov    WORD PTR [ecx],ax
  42878f:	add    ecx,0x2
  428792:	add    edx,0x2
  428795:	movzx  eax,WORD PTR [edx]
  428798:	mov    ebx,0x4e3e
  42879d:	cmp    ax,bx
  4287a0:	jne    0x428782
  4287a2:	xor    eax,eax
  4287a4:	mov    WORD PTR [ecx],ax
  4287a7:	mov    eax,DWORD PTR [edi+0x188]
  4287ad:	pop    ebx
  4287ae:	ret    
  4287af:	push   edi
  4287b0:	mov    edi,eax
  4287b2:	mov    eax,DWORD PTR [esi+0x188]
  4287b8:	shl    edi,0x6
  4287bb:	add    eax,edi
  4287bd:	jmp    0x4287c9
  4287bf:	xor    cl,0x7e
  4287c2:	add    cl,0x3
  4287c5:	mov    BYTE PTR [eax],cl
  4287c7:	inc    eax
  4287c8:	inc    edx
  4287c9:	mov    cl,BYTE PTR [edx]
  4287cb:	cmp    cl,0x83
  4287ce:	jne    0x4287bf
  4287d0:	mov    BYTE PTR [eax],0x0
  4287d3:	mov    eax,DWORD PTR [esi+0x188]
  4287d9:	add    eax,edi
  4287db:	pop    edi
  4287dc:	ret    
  4287dd:	push   ebp
  4287de:	mov    ebp,esp
  4287e0:	sub    esp,0x14
  4287e3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287ea:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  4287f1:	mov    eax,DWORD PTR [ebx]
  4287f3:	mov    DWORD PTR [ebp-0x8],eax
  4287f6:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4287fd:	push   esi
  4287fe:	push   edi
  4287ff:	mov    DWORD PTR [ebp-0x14],0xead71885
  428806:	mov    edi,DWORD PTR [ebp-0x4]
  428809:	mov    ecx,DWORD PTR [ebp-0x10]
  42880c:	mov    eax,0x75108ae
  428811:	xor    edi,eax
  428813:	mov    edx,0x3272f5
  428818:	xor    ecx,eax
  42881a:	add    edi,edx
  42881c:	add    ecx,edx
  42881e:	imul   edi,ecx
  428821:	jmp    0x428869
  428823:	mov    ecx,DWORD PTR [ebp-0x8]
  428826:	mov    esi,DWORD PTR [ebp-0x4]
  428829:	xor    ecx,eax
  42882b:	xor    esi,eax
  42882d:	add    ecx,edx
  42882f:	add    esi,edx
  428831:	test   esi,ecx
  428833:	mov    esi,DWORD PTR [ebp-0x8]
  428836:	mov    ecx,DWORD PTR [ebp-0x4]
  428839:	je     0x428850
  42883b:	xor    ecx,eax
  42883d:	xor    esi,eax
  42883f:	add    ecx,edx
  428841:	add    esi,edx
  428843:	shr    esi,cl
  428845:	mov    ecx,DWORD PTR [ebp-0x14]
  428848:	xor    ecx,eax
  42884a:	add    ecx,edx
  42884c:	xor    esi,ecx
  42884e:	jmp    0x42885a
  428850:	xor    esi,eax
  428852:	xor    ecx,eax
  428854:	add    esi,edx
  428856:	add    ecx,edx
  428858:	shr    esi,cl
  42885a:	mov    DWORD PTR [ebp-0x8],esi
  42885d:	mov    ecx,DWORD PTR [ebp-0x4]
  428860:	xor    ecx,eax
  428862:	lea    edi,[edi+ecx*1+0x3272f5]
  428869:	mov    ecx,DWORD PTR [ebp-0xc]
  42886c:	mov    esi,DWORD PTR [ebp-0x4]
  42886f:	xor    esi,eax
  428871:	xor    ecx,eax
  428873:	sub    ecx,esi
  428875:	cmp    edi,ecx
  428877:	jbe    0x428823
  428879:	mov    eax,DWORD PTR [ebp-0x8]
  42887c:	pop    edi
  42887d:	mov    DWORD PTR [ebx],eax
  42887f:	mov    eax,DWORD PTR [ebp-0x8]
  428882:	pop    esi
  428883:	leave  
  428884:	ret    
  428885:	push   ebp
  428886:	mov    ebp,esp
  428888:	sub    esp,0x38
  42888b:	push   ebx
  42888c:	mov    ebx,0xf89c85a5
  428891:	mov    DWORD PTR [ebp-0x4],ebx
  428894:	lea    ecx,[ebx-0x3]
  428897:	mov    DWORD PTR [ebp-0x24],ecx
  42889a:	mov    eax,DWORD PTR [ebp-0x4]
  42889d:	mov    edx,DWORD PTR [ebp+0x8]
  4288a0:	push   esi
  4288a1:	mov    esi,0x75108ae
  4288a6:	xor    eax,esi
  4288a8:	push   edi
  4288a9:	mov    edi,0x3272f5
  4288ae:	add    eax,edi
  4288b0:	cmp    edx,eax
  4288b2:	mov    eax,DWORD PTR [ebp-0x4]
  4288b5:	je     0x428a1a
  4288bb:	mov    edx,DWORD PTR [ebp+0xc]
  4288be:	xor    eax,esi
  4288c0:	add    eax,edi
  4288c2:	cmp    edx,eax
  4288c4:	je     0x428a17
  4288ca:	mov    eax,DWORD PTR [ebp+0x10]
  4288cd:	mov    edx,DWORD PTR [ebp+0xc]
  4288d0:	mov    DWORD PTR [ebp-0x14],eax
  4288d3:	mov    eax,DWORD PTR [ebp+0x8]
  4288d6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288dd:	mov    DWORD PTR [ebp-0xc],eax
  4288e0:	lea    eax,[ebx-0x2]
  4288e3:	mov    DWORD PTR [ebp-0x1c],eax
  4288e6:	mov    DWORD PTR [ebp-0x10],ebx
  4288e9:	mov    DWORD PTR [ebp+0xc],ecx
  4288ec:	mov    DWORD PTR [ebp+0x10],eax
  4288ef:	mov    eax,DWORD PTR [ebp+0xc]
  4288f2:	xor    eax,esi
  4288f4:	mov    DWORD PTR [ebp-0x20],edx
  4288f7:	sub    edx,eax
  4288f9:	sub    edx,edi
  4288fb:	mov    DWORD PTR [ebp+0x8],edx
  4288fe:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428905:	jmp    0x428a07
  42890a:	mov    eax,DWORD PTR [ebp+0xc]
  42890d:	mov    ecx,DWORD PTR [ebp+0xc]
  428910:	xor    eax,esi
  428912:	xor    ecx,esi
  428914:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42891b:	mov    eax,DWORD PTR [ebp+0x8]
  42891e:	xor    edx,edx
  428920:	div    ecx
  428922:	mov    eax,DWORD PTR [ebp+0x10]
  428925:	mov    ecx,DWORD PTR [ebp+0xc]
  428928:	xor    eax,esi
  42892a:	xor    ecx,esi
  42892c:	sub    eax,ecx
  42892e:	cmp    edx,eax
  428930:	jne    0x4289c6
  428936:	mov    eax,DWORD PTR [ebp+0x8]
  428939:	mov    ecx,DWORD PTR [ebp-0xc]
  42893c:	mov    dl,BYTE PTR [eax+ecx*1]
  42893f:	mov    eax,DWORD PTR [ebp-0x10]
  428942:	mov    ecx,DWORD PTR [ebp-0x8]
  428945:	xor    eax,esi
  428947:	xor    ecx,esi
  428949:	add    eax,edi
  42894b:	add    ecx,edi
  42894d:	cmp    eax,ecx
  42894f:	jae    0x428997
  428951:	lea    ecx,[eax-0x3272f5]
  428957:	mov    DWORD PTR [ebp-0x4],ecx
  42895a:	mov    ebx,DWORD PTR [ebp-0x4]
  42895d:	xor    ebx,esi
  42895f:	add    ebx,0x7f55d8e3
  428965:	lea    ecx,[ebp+eax*4-0x38]
  428969:	mov    DWORD PTR [ecx],ebx
  42896b:	mov    ebx,DWORD PTR [ecx]
  42896d:	cmp    ebx,0x244ecb80
  428973:	jbe    0x42897d
  428975:	add    DWORD PTR [ecx],0x405fcc1
  42897b:	jmp    0x428983
  42897d:	add    DWORD PTR [ecx],0xfdaf433f
  428983:	mov    ecx,DWORD PTR [ebp-0x8]
  428986:	xor    ecx,esi
  428988:	inc    eax
  428989:	inc    DWORD PTR [ebp-0x4]
  42898c:	add    ecx,edi
  42898e:	cmp    eax,ecx
  428990:	jb     0x42895a
  428992:	mov    ebx,0xf89c85a5
  428997:	cmp    DWORD PTR [ebp-0x14],0x0
  42899b:	jne    0x4289a5
  42899d:	xor    dl,0x7e
  4289a0:	add    dl,0x3
  4289a3:	jmp    0x4289bb
  4289a5:	mov    eax,DWORD PTR [ebp-0x18]
  4289a8:	xor    al,0xae
  4289aa:	mov    cl,0xb
  4289ac:	sub    cl,al
  4289ae:	add    dl,cl
  4289b0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289b3:	xor    cl,0xae
  4289b6:	sub    cl,0xb
  4289b9:	ror    dl,cl
  4289bb:	xor    eax,eax
  4289bd:	mov    eax,DWORD PTR [ebp+0x8]
  4289c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289c3:	mov    BYTE PTR [eax+ecx*1],dl
  4289c6:	mov    eax,DWORD PTR [ebp+0x8]
  4289c9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289cc:	sub    eax,edi
  4289ce:	xor    eax,esi
  4289d0:	cmp    eax,ecx
  4289d2:	jne    0x4289f5
  4289d4:	mov    eax,DWORD PTR [ebp+0x10]
  4289d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289da:	xor    eax,esi
  4289dc:	xor    ecx,esi
  4289de:	sub    eax,ecx
  4289e0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289e3:	sub    eax,edi
  4289e5:	xor    eax,esi
  4289e7:	mov    DWORD PTR [ebp+0x10],eax
  4289ea:	mov    eax,DWORD PTR [ebp+0xc]
  4289ed:	xor    eax,esi
  4289ef:	sub    ecx,eax
  4289f1:	sub    ecx,edi
  4289f3:	jmp    0x428a04
  4289f5:	mov    eax,DWORD PTR [ebp+0xc]
  4289f8:	xor    eax,esi
  4289fa:	mov    ecx,0xffcd8d0b
  4289ff:	sub    ecx,eax
  428a01:	add    ecx,DWORD PTR [ebp+0x8]
  428a04:	mov    DWORD PTR [ebp+0x8],ecx
  428a07:	mov    eax,DWORD PTR [ebp+0x10]
  428a0a:	cmp    eax,ebx
  428a0c:	jne    0x42890a
  428a12:	mov    eax,DWORD PTR [ebp-0x24]
  428a15:	jmp    0x428a1a
  428a17:	mov    eax,DWORD PTR [ebp-0x4]
  428a1a:	xor    eax,esi
  428a1c:	add    eax,edi
  428a1e:	pop    edi
  428a1f:	pop    esi
  428a20:	pop    ebx
  428a21:	leave  
  428a22:	ret    0xc
  428a25:	push   ebp
  428a26:	mov    ebp,esp
  428a28:	sub    esp,0x420
  428a2e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a35:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a3c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a43:	push   ebx
  428a44:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a4b:	mov    eax,DWORD PTR [ebp-0x14]
  428a4e:	push   esi
  428a4f:	mov    esi,0x75108ae
  428a54:	push   edi
  428a55:	xor    eax,esi
  428a57:	mov    edi,0x3272f5
  428a5c:	add    eax,edi
  428a5e:	mov    DWORD PTR [ebp-0x8],eax
  428a61:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a68:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a6f:	mov    DWORD PTR [ebp-0x10],0x8
  428a76:	mov    ecx,ecx
  428a78:	mov    eax,DWORD PTR [ebp-0xc]
  428a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a7e:	xor    eax,esi
  428a80:	xor    ecx,esi
  428a82:	add    eax,edi
  428a84:	add    ecx,edi
  428a86:	imul   eax,ecx
  428a89:	jmp    0x428abc
  428a8b:	mov    eax,DWORD PTR [ebp-0x4]
  428a8e:	sub    eax,edi
  428a90:	xor    eax,esi
  428a92:	mov    DWORD PTR [ebp-0x8],eax
  428a95:	lea    ebx,[ebp-0x8]
  428a98:	call   0x4287dd
  428a9d:	mov    DWORD PTR [ebp-0x8],eax
  428aa0:	mov    eax,DWORD PTR [ebp-0x8]
  428aa3:	mov    ecx,DWORD PTR [ebp-0x4]
  428aa6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428aad:	mov    eax,DWORD PTR [ebp-0xc]
  428ab0:	mov    ecx,DWORD PTR [ebp-0x4]
  428ab3:	xor    eax,esi
  428ab5:	lea    eax,[eax+ecx*1+0x3272f5]
  428abc:	mov    DWORD PTR [ebp-0x4],eax
  428abf:	mov    eax,DWORD PTR [ebp-0x18]
  428ac2:	mov    ecx,DWORD PTR [ebp-0xc]
  428ac5:	xor    ecx,esi
  428ac7:	xor    eax,esi
  428ac9:	sub    eax,ecx
  428acb:	mov    ecx,DWORD PTR [ebp-0x4]
  428ace:	cmp    ecx,eax
  428ad0:	jbe    0x428a8b
  428ad2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ad5:	xor    eax,esi
  428ad7:	add    eax,edi
  428ad9:	mov    DWORD PTR [ebp-0x8],eax
  428adc:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428ae3:	mov    ebx,ebx
  428ae5:	jmp    0x428b48
  428ae7:	mov    ecx,DWORD PTR [ebp-0x20]
  428aea:	mov    eax,DWORD PTR [ebp-0x8]
  428aed:	xor    ecx,esi
  428aef:	add    ecx,edi
  428af1:	shr    eax,cl
  428af3:	mov    DWORD PTR [ebp-0x4],eax
  428af6:	mov    eax,DWORD PTR [ebp+0x8]
  428af9:	mov    cl,BYTE PTR [eax]
  428afb:	mov    BYTE PTR [ebp+0xb],cl
  428afe:	mov    cl,BYTE PTR [ebp+0xb]
  428b01:	mov    edx,DWORD PTR [ebp-0x8]
  428b04:	movzx  ecx,cl
  428b07:	xor    ecx,edx
  428b09:	mov    DWORD PTR [ebp+0x8],ecx
  428b0c:	mov    ecx,DWORD PTR [ebp-0x18]
  428b0f:	mov    edx,DWORD PTR [ebp+0x8]
  428b12:	xor    ecx,esi
  428b14:	add    ecx,edi
  428b16:	and    ecx,edx
  428b18:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b1f:	mov    edx,DWORD PTR [ebp-0x4]
  428b22:	xor    ecx,edx
  428b24:	mov    DWORD PTR [ebp-0x8],ecx
  428b27:	mov    ecx,DWORD PTR [ebp-0xc]
  428b2a:	xor    ecx,esi
  428b2c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b33:	mov    DWORD PTR [ebp+0x8],eax
  428b36:	mov    eax,DWORD PTR [ebp-0xc]
  428b39:	xor    eax,esi
  428b3b:	mov    ecx,0xffcd8d0b
  428b40:	sub    ecx,eax
  428b42:	add    ecx,DWORD PTR [ebp-0x10]
  428b45:	mov    DWORD PTR [ebp-0x10],ecx
  428b48:	mov    eax,DWORD PTR [ebp-0x14]
  428b4b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b4e:	xor    eax,esi
  428b50:	add    eax,edi
  428b52:	cmp    ecx,eax
  428b54:	jne    0x428ae7
  428b56:	mov    eax,DWORD PTR [ebp-0x1c]
  428b59:	mov    ecx,DWORD PTR [ebp-0x8]
  428b5c:	xor    eax,esi
  428b5e:	add    eax,edi
  428b60:	pop    edi
  428b61:	pop    esi
  428b62:	xor    eax,ecx
  428b64:	pop    ebx
  428b65:	leave  
  428b66:	ret    0x4
  428b69:	push   ebp
  428b6a:	mov    ebp,esp
  428b6c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b72:	mov    edx,DWORD PTR [ebp+0x10]
  428b75:	mov    eax,DWORD PTR [eax+0x190]
  428b7b:	mov    eax,DWORD PTR [eax]
  428b7d:	sub    esp,0x64
  428b80:	push   ebx
  428b81:	push   esi
  428b82:	push   edi
  428b83:	mov    edi,0x75108ae
  428b88:	xor    ecx,edi
  428b8a:	mov    ebx,0x3272f5
  428b8f:	add    ecx,ebx
  428b91:	cmp    ecx,edx
  428b93:	jne    0x428ba4
  428b95:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b9f:	jmp    0x4290a0
  428ba4:	mov    ecx,DWORD PTR [ebp+0x8]
  428ba7:	mov    esi,DWORD PTR [ebp+0x14]
  428baa:	mov    edx,DWORD PTR [esi]
  428bac:	xor    ecx,edi
  428bae:	add    ecx,ebx
  428bb0:	cmp    edx,ecx
  428bb2:	je     0x42905b
  428bb8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bbb:	mov    DWORD PTR [ebp-0x1c],eax
  428bbe:	mov    DWORD PTR [ebp+0x1c],ecx
  428bc1:	mov    ecx,DWORD PTR [ebp+0x18]
  428bc4:	mov    eax,DWORD PTR [esi]
  428bc6:	mov    DWORD PTR [ebp-0x20],eax
  428bc9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428bd0:	mov    edx,0xf89c85a2
  428bd5:	mov    DWORD PTR [ebp-0x8],edx
  428bd8:	mov    eax,DWORD PTR [ebp+0x1c]
  428bdb:	mov    DWORD PTR [ebp+0x1c],eax
  428bde:	mov    eax,DWORD PTR [ebp+0x1c]
  428be1:	mov    eax,DWORD PTR [eax+0x190]
  428be7:	mov    eax,DWORD PTR [eax]
  428be9:	mov    DWORD PTR [ebp-0x24],ecx
  428bec:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bef:	mov    ecx,DWORD PTR [ecx+0x190]
  428bf5:	mov    ecx,DWORD PTR [ecx]
  428bf7:	add    ecx,DWORD PTR [eax+0x3c]
  428bfa:	mov    DWORD PTR [ebp+0x10],ecx
  428bfd:	mov    eax,DWORD PTR [ebp+0x8]
  428c00:	xor    eax,edi
  428c02:	add    eax,ebx
  428c04:	mov    DWORD PTR [ebp-0x4],eax
  428c07:	mov    eax,DWORD PTR [ebp+0x8]
  428c0a:	xor    eax,edi
  428c0c:	add    eax,ebx
  428c0e:	mov    DWORD PTR [ebp+0x18],eax
  428c11:	mov    eax,DWORD PTR [ebp+0x10]
  428c14:	mov    eax,DWORD PTR [eax+0x50]
  428c17:	sub    eax,0xc
  428c1a:	mov    DWORD PTR [ebp-0x28],eax
  428c1d:	mov    eax,DWORD PTR [ebp+0x10]
  428c20:	mov    eax,DWORD PTR [eax+0x38]
  428c23:	mov    ecx,DWORD PTR [ebp+0x10]
  428c26:	dec    eax
  428c27:	test   DWORD PTR [ecx+0x54],eax
  428c2a:	mov    eax,DWORD PTR [ebp+0x10]
  428c2d:	je     0x428c47
  428c2f:	mov    eax,DWORD PTR [eax+0x38]
  428c32:	mov    ecx,DWORD PTR [ebp+0x10]
  428c35:	mov    ecx,DWORD PTR [ecx+0x54]
  428c38:	dec    eax
  428c39:	not    eax
  428c3b:	and    ecx,eax
  428c3d:	mov    eax,DWORD PTR [ebp+0x10]
  428c40:	mov    eax,DWORD PTR [eax+0x38]
  428c43:	add    eax,ecx
  428c45:	jmp    0x428c4a
  428c47:	mov    eax,DWORD PTR [eax+0x54]
  428c4a:	mov    DWORD PTR [ebp+0x1c],eax
  428c4d:	mov    eax,DWORD PTR [ebp+0x8]
  428c50:	xor    eax,edi
  428c52:	add    eax,ebx
  428c54:	mov    DWORD PTR [ebp+0x18],eax
  428c57:	mov    eax,DWORD PTR [ebp+0x8]
  428c5a:	xor    eax,edi
  428c5c:	add    eax,ebx
  428c5e:	mov    DWORD PTR [ebp+0x18],eax
  428c61:	mov    eax,DWORD PTR [ebp+0x8]
  428c64:	mov    ecx,DWORD PTR [ebp-0x24]
  428c67:	xor    eax,edi
  428c69:	add    eax,ebx
  428c6b:	mov    DWORD PTR [ecx],eax
  428c6d:	mov    DWORD PTR [ebp+0x18],edx
  428c70:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c77:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c7e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c85:	mov    eax,DWORD PTR [ebp-0x8]
  428c88:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c8b:	xor    eax,edi
  428c8d:	add    eax,ebx
  428c8f:	imul   eax,ecx
  428c92:	mov    ecx,DWORD PTR [ebp+0x8]
  428c95:	mov    edx,DWORD PTR [ebp-0x28]
  428c98:	xor    ecx,edi
  428c9a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428ca1:	cmp    eax,ecx
  428ca3:	jae    0x429054
  428ca9:	mov    eax,DWORD PTR [ebp+0x8]
  428cac:	xor    eax,edi
  428cae:	add    eax,ebx
  428cb0:	mov    DWORD PTR [ebp+0x18],eax
  428cb3:	mov    eax,DWORD PTR [ebp+0x1c]
  428cb6:	add    eax,DWORD PTR [ebp-0x1c]
  428cb9:	mov    DWORD PTR [ebp-0x4],eax
  428cbc:	push   DWORD PTR [ebp-0x4]
  428cbf:	mov    esi,DWORD PTR [ebp-0x1c]
  428cc2:	mov    ecx,DWORD PTR [ebp+0x10]
  428cc5:	call   0x427e15
  428cca:	mov    DWORD PTR [ebp+0xc],eax
  428ccd:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428cd4:	mov    eax,DWORD PTR [ebp-0x18]
  428cd7:	xor    eax,edi
  428cd9:	lea    ecx,[ebp-0x40]
  428cdc:	add    eax,ebx
  428cde:	push   ecx
  428cdf:	call   0x4283a9
  428ce4:	mov    eax,DWORD PTR [ebp+0xc]
  428ce7:	test   eax,eax
  428ce9:	je     0x428d39
  428ceb:	mov    eax,DWORD PTR [ebp-0x18]
  428cee:	xor    eax,edi
  428cf0:	add    eax,ebx
  428cf2:	push   eax
  428cf3:	push   DWORD PTR [ebp+0xc]
  428cf6:	lea    eax,[ebp-0x40]
  428cf9:	push   eax
  428cfa:	call   0x42829f
  428cff:	mov    eax,DWORD PTR [ebp-0x4]
  428d02:	mov    DWORD PTR [ebp-0x18],eax
  428d05:	mov    eax,DWORD PTR [ebp-0x18]
  428d08:	mov    ecx,DWORD PTR [ebp-0x1c]
  428d0b:	sub    eax,ecx
  428d0d:	mov    DWORD PTR [ebp-0x18],eax
  428d10:	mov    eax,DWORD PTR [ebp+0xc]
  428d13:	mov    ecx,DWORD PTR [ebp+0xc]
  428d16:	mov    eax,DWORD PTR [eax+0x10]
  428d19:	add    eax,DWORD PTR [ecx+0xc]
  428d1c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d1f:	cmp    ecx,eax
  428d21:	jb     0x428d39
  428d23:	mov    eax,DWORD PTR [ebp+0xc]
  428d26:	mov    eax,DWORD PTR [eax+0xc]
  428d29:	mov    ecx,DWORD PTR [ebp+0xc]
  428d2c:	add    eax,DWORD PTR [ecx+0x8]
  428d2f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d32:	sub    eax,ecx
  428d34:	jmp    0x429027
  428d39:	push   0xc
  428d3b:	push   DWORD PTR [ebp-0x4]
  428d3e:	lea    eax,[ebp-0x4c]
  428d41:	push   eax
  428d42:	call   0x42829f
  428d47:	mov    eax,0xf89c85a5
  428d4c:	mov    DWORD PTR [ebp-0x2c],eax
  428d4f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d56:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d5d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d64:	lea    ecx,[ebp-0x2c]
  428d67:	mov    DWORD PTR [ebp-0xc],ecx
  428d6a:	lea    ecx,[ebp-0x30]
  428d6d:	mov    DWORD PTR [ebp-0x10],ecx
  428d70:	lea    ecx,[ebp-0x34]
  428d73:	mov    DWORD PTR [ebp+0xc],ecx
  428d76:	lea    ecx,[ebp-0x38]
  428d79:	mov    DWORD PTR [ebp-0x14],ecx
  428d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d7f:	xor    ecx,edi
  428d81:	add    ecx,ebx
  428d83:	mov    DWORD PTR [ebp-0x18],ecx
  428d86:	jmp    0x428f82
  428d8b:	cmp    eax,0xf89c85a3
  428d90:	je     0x428f94
  428d96:	mov    ecx,DWORD PTR [ebp-0x8]
  428d99:	xor    ecx,edi
  428d9b:	mov    esi,eax
  428d9d:	add    ecx,ebx
  428d9f:	mov    DWORD PTR [ebp+0x18],ecx
  428da2:	mov    eax,DWORD PTR [ebp-0x18]
  428da5:	xor    esi,edi
  428da7:	lea    eax,[eax+esi*1+0x3272f5]
  428dae:	mov    DWORD PTR [ebp-0x18],eax
  428db1:	mov    eax,DWORD PTR [ebp-0x8]
  428db4:	mov    ecx,DWORD PTR [ebp-0x18]
  428db7:	xor    eax,edi
  428db9:	add    eax,ebx
  428dbb:	cmp    ecx,eax
  428dbd:	jne    0x428dd2
  428dbf:	mov    eax,DWORD PTR [ebp+0x8]
  428dc2:	xor    eax,edi
  428dc4:	add    eax,ebx
  428dc6:	push   eax
  428dc7:	push   0xc
  428dc9:	lea    eax,[ebp-0x4c]
  428dcc:	push   eax
  428dcd:	call   0x428885
  428dd2:	mov    eax,DWORD PTR [ebp-0xc]
  428dd5:	mov    eax,DWORD PTR [eax]
  428dd7:	xor    eax,edi
  428dd9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de0:	mov    ecx,DWORD PTR [ebp+0x8]
  428de3:	xor    ecx,edi
  428de5:	movzx  eax,al
  428de8:	add    ecx,ebx
  428dea:	cmp    eax,ecx
  428dec:	je     0x428f6a
  428df2:	mov    eax,DWORD PTR [ebp-0x10]
  428df5:	mov    eax,DWORD PTR [eax]
  428df7:	xor    eax,edi
  428df9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e00:	mov    ecx,DWORD PTR [ebp+0x8]
  428e03:	xor    ecx,edi
  428e05:	movzx  eax,al
  428e08:	add    ecx,ebx
  428e0a:	cmp    eax,ecx
  428e0c:	je     0x428f6a
  428e12:	mov    eax,DWORD PTR [ebp+0xc]
  428e15:	mov    eax,DWORD PTR [eax]
  428e17:	xor    eax,edi
  428e19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e20:	mov    ecx,DWORD PTR [ebp+0x8]
  428e23:	xor    ecx,edi
  428e25:	movzx  eax,al
  428e28:	add    ecx,ebx
  428e2a:	cmp    eax,ecx
  428e2c:	je     0x428f6a
  428e32:	mov    eax,DWORD PTR [ebp-0x14]
  428e35:	mov    eax,DWORD PTR [eax]
  428e37:	xor    eax,edi
  428e39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e40:	mov    ecx,DWORD PTR [ebp+0x8]
  428e43:	xor    ecx,edi
  428e45:	movzx  eax,al
  428e48:	add    ecx,ebx
  428e4a:	cmp    eax,ecx
  428e4c:	je     0x428f6a
  428e52:	mov    eax,DWORD PTR [ebp-0x10]
  428e55:	mov    eax,DWORD PTR [eax]
  428e57:	xor    eax,edi
  428e59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e60:	mov    ecx,DWORD PTR [ebp-0xc]
  428e63:	mov    ecx,DWORD PTR [ecx]
  428e65:	xor    ecx,edi
  428e67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e6e:	xor    al,cl
  428e70:	mov    ecx,DWORD PTR [ebp+0xc]
  428e73:	mov    ecx,DWORD PTR [ecx]
  428e75:	xor    ecx,edi
  428e77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e7e:	or     al,cl
  428e80:	mov    ecx,DWORD PTR [ebp-0xc]
  428e83:	mov    ecx,DWORD PTR [ecx]
  428e85:	xor    ecx,edi
  428e87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e8e:	cmp    cl,al
  428e90:	jne    0x428f6a
  428e96:	mov    eax,DWORD PTR [ebp+0xc]
  428e99:	mov    eax,DWORD PTR [eax]
  428e9b:	xor    eax,edi
  428e9d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ea4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ea7:	mov    ecx,DWORD PTR [ecx]
  428ea9:	xor    ecx,edi
  428eab:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb2:	xor    al,cl
  428eb4:	mov    ecx,DWORD PTR [ebp-0x14]
  428eb7:	mov    ecx,DWORD PTR [ecx]
  428eb9:	xor    ecx,edi
  428ebb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec2:	or     al,cl
  428ec4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ec7:	mov    ecx,DWORD PTR [ecx]
  428ec9:	xor    ecx,edi
  428ecb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ed2:	cmp    cl,al
  428ed4:	jne    0x428f6a
  428eda:	mov    eax,DWORD PTR [ebp-0x14]
  428edd:	mov    eax,DWORD PTR [eax]
  428edf:	xor    eax,edi
  428ee1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ee8:	mov    ecx,DWORD PTR [ebp+0xc]
  428eeb:	mov    ecx,DWORD PTR [ecx]
  428eed:	xor    ecx,edi
  428eef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ef6:	xor    al,cl
  428ef8:	mov    ecx,DWORD PTR [ebp-0xc]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f06:	or     al,cl
  428f08:	mov    ecx,DWORD PTR [ebp+0xc]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f16:	cmp    cl,al
  428f18:	jne    0x428f6a
  428f1a:	mov    eax,DWORD PTR [ebp-0x14]
  428f1d:	mov    eax,DWORD PTR [eax]
  428f1f:	xor    eax,edi
  428f21:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f28:	mov    ecx,DWORD PTR [ebp-0xc]
  428f2b:	mov    ecx,DWORD PTR [ecx]
  428f2d:	xor    ecx,edi
  428f2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f36:	xor    al,cl
  428f38:	mov    ecx,DWORD PTR [ebp-0x10]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f46:	or     al,cl
  428f48:	mov    ecx,DWORD PTR [ebp-0x14]
  428f4b:	mov    ecx,DWORD PTR [ecx]
  428f4d:	xor    ecx,edi
  428f4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f56:	cmp    cl,al
  428f58:	jne    0x428f6a
  428f5a:	lea    eax,[ebp-0x4c]
  428f5d:	push   eax
  428f5e:	call   0x428a25
  428f63:	mov    ecx,DWORD PTR [ebp-0x44]
  428f66:	cmp    eax,ecx
  428f68:	je     0x428f74
  428f6a:	mov    eax,DWORD PTR [ebp+0x8]
  428f6d:	xor    eax,edi
  428f6f:	add    eax,ebx
  428f71:	mov    DWORD PTR [ebp+0x18],eax
  428f74:	mov    eax,DWORD PTR [ebp-0x8]
  428f77:	xor    eax,edi
  428f79:	lea    eax,[eax+esi*1+0x3272f5]
  428f80:	xor    eax,edi
  428f82:	mov    ecx,DWORD PTR [ebp+0x8]
  428f85:	mov    edx,DWORD PTR [ebp+0x18]
  428f88:	xor    ecx,edi
  428f8a:	add    ecx,ebx
  428f8c:	cmp    edx,ecx
  428f8e:	je     0x428d8b
  428f94:	mov    eax,DWORD PTR [ebp+0x8]
  428f97:	mov    ecx,DWORD PTR [ebp+0x18]
  428f9a:	xor    eax,edi
  428f9c:	add    eax,ebx
  428f9e:	cmp    ecx,eax
  428fa0:	jne    0x428fb3
  428fa2:	mov    eax,DWORD PTR [ebp-0x8]
  428fa5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fa8:	xor    eax,edi
  428faa:	lea    eax,[eax+ecx*1+0x3272f5]
  428fb1:	jmp    0x42902a
  428fb3:	push   0x18
  428fb5:	push   DWORD PTR [ebp-0x4]
  428fb8:	lea    eax,[ebp-0x64]
  428fbb:	push   eax
  428fbc:	call   0x42829f
  428fc1:	mov    eax,DWORD PTR [ebp+0x8]
  428fc4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fc7:	xor    eax,edi
  428fc9:	add    eax,ebx
  428fcb:	cmp    eax,ecx
  428fcd:	je     0x428fe2
  428fcf:	mov    eax,DWORD PTR [ebp+0x8]
  428fd2:	xor    eax,edi
  428fd4:	add    eax,ebx
  428fd6:	push   eax
  428fd7:	push   0x18
  428fd9:	lea    eax,[ebp-0x64]
  428fdc:	push   eax
  428fdd:	call   0x428885
  428fe2:	mov    eax,DWORD PTR [ebp-0x4]
  428fe5:	add    eax,0x18
  428fe8:	mov    DWORD PTR [ebp+0x18],eax
  428feb:	push   DWORD PTR [ebp-0x50]
  428fee:	push   DWORD PTR [ebp+0x18]
  428ff1:	mov    eax,DWORD PTR [ebp-0x54]
  428ff4:	add    eax,DWORD PTR [ebp-0x20]
  428ff7:	push   eax
  428ff8:	call   0x42829f
  428ffd:	mov    eax,DWORD PTR [ebp+0x8]
  429000:	mov    ecx,DWORD PTR [ebp-0x18]
  429003:	xor    eax,edi
  429005:	add    eax,ebx
  429007:	cmp    eax,ecx
  429009:	je     0x42901c
  42900b:	push   0x0
  42900d:	push   DWORD PTR [ebp-0x50]
  429010:	mov    eax,DWORD PTR [ebp-0x54]
  429013:	add    eax,DWORD PTR [ebp-0x20]
  429016:	push   eax
  429017:	call   0x428885
  42901c:	mov    eax,DWORD PTR [ebp-0x24]
  42901f:	mov    ecx,DWORD PTR [ebp-0x50]
  429022:	add    DWORD PTR [eax],ecx
  429024:	mov    eax,DWORD PTR [ebp-0x50]
  429027:	add    eax,DWORD PTR [ebp+0x1c]
  42902a:	mov    DWORD PTR [ebp+0x1c],eax
  42902d:	mov    eax,DWORD PTR [ebp-0x8]
  429030:	mov    ecx,DWORD PTR [ebp+0x1c]
  429033:	xor    eax,edi
  429035:	add    eax,ebx
  429037:	imul   eax,ecx
  42903a:	mov    ecx,DWORD PTR [ebp+0x8]
  42903d:	mov    edx,DWORD PTR [ebp-0x28]
  429040:	xor    ecx,edi
  429042:	lea    ecx,[ecx+edx*1+0x3272f5]
  429049:	cmp    eax,ecx
  42904b:	jb     0x428ca9
  429051:	mov    esi,DWORD PTR [ebp+0x14]
  429054:	mov    eax,DWORD PTR [ebp-0x20]
  429057:	mov    DWORD PTR [esi],eax
  429059:	jmp    0x4290a0
  42905b:	mov    ecx,DWORD PTR [ebp+0x8]
  42905e:	mov    edx,DWORD PTR [ebp+0xc]
  429061:	xor    ecx,edi
  429063:	xor    edx,edi
  429065:	add    ecx,ebx
  429067:	add    edx,ebx
  429069:	cmp    ecx,edx
  42906b:	jne    0x42907f
  42906d:	mov    eax,ds:0x7f642ddc
  429072:	imul   eax,eax,0x9f15fccf
  429078:	mov    ds:0x7f642ddc,eax
  42907d:	jmp    0x4290a0
  42907f:	mov    ecx,DWORD PTR [ebp+0x8]
  429082:	xor    ecx,edi
  429084:	add    ecx,ebx
  429086:	cmp    eax,ecx
  429088:	je     0x429096
  42908a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429094:	jmp    0x4290a0
  429096:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4290a0:	pop    edi
  4290a1:	pop    esi
  4290a2:	pop    ebx
  4290a3:	leave  
  4290a4:	ret    0x18
  4290a7:	push   ebp
  4290a8:	mov    ebp,esp
  4290aa:	and    esp,0xfffffff8
  4290ad:	mov    eax,DWORD PTR [ebp+0x20]
  4290b0:	sub    esp,0x14
  4290b3:	push   ebx
  4290b4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290b7:	push   esi
  4290b8:	push   edi
  4290b9:	cmp    eax,0xf89c85a5
  4290be:	jne    0x4290ca
  4290c0:	push   0xf89c85a2
  4290c5:	jmp    0x4291fc
  4290ca:	mov    eax,DWORD PTR [ebp+0x20]
  4290cd:	cmp    eax,0xf89c85a2
  4290d2:	jne    0x4290de
  4290d4:	push   0xf89c85a3
  4290d9:	jmp    0x4291fc
  4290de:	mov    eax,DWORD PTR [ebp+0x20]
  4290e1:	cmp    eax,0xf89c85a3
  4290e6:	jne    0x4290f2
  4290e8:	push   0xf89c85a0
  4290ed:	jmp    0x4291fc
  4290f2:	mov    eax,DWORD PTR [ebp+0x20]
  4290f5:	cmp    eax,0xf89c85a0
  4290fa:	jne    0x429106
  4290fc:	push   0xf89c85a1
  429101:	jmp    0x4291fc
  429106:	mov    ecx,DWORD PTR [ebp+0x20]
  429109:	mov    eax,0xf89c85bc
  42910e:	cmp    ecx,eax
  429110:	jne    0x4291cc
  429116:	mov    eax,DWORD PTR [ebp+0x10]
  429119:	mov    DWORD PTR [esp+0xc],eax
  42911d:	mov    eax,DWORD PTR [ebp+0x18]
  429120:	mov    DWORD PTR [esp+0x14],eax
  429124:	mov    eax,DWORD PTR [ebp+0xc]
  429127:	mov    DWORD PTR [esp+0x18],eax
  42912b:	mov    eax,DWORD PTR [ebp+0x8]
  42912e:	mov    DWORD PTR [esp+0x10],eax
  429132:	mov    eax,DWORD PTR [esp+0x10]
  429136:	mov    ecx,DWORD PTR [esp+0x14]
  42913a:	mov    edi,0x75108ae
  42913f:	xor    eax,edi
  429141:	mov    esi,0x3272f5
  429146:	add    eax,esi
  429148:	mov    DWORD PTR [ecx],eax
  42914a:	mov    eax,DWORD PTR [esp+0xc]
  42914e:	mov    eax,DWORD PTR [eax+0x194]
  429154:	mov    ecx,DWORD PTR [eax]
  429156:	mov    eax,DWORD PTR [esp+0xc]
  42915a:	mov    eax,DWORD PTR [eax+0x194]
  429160:	mov    eax,DWORD PTR [eax]
  429162:	add    eax,DWORD PTR [ecx+0x3c]
  429165:	mov    ecx,DWORD PTR [esp+0xc]
  429169:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42916f:	mov    ecx,DWORD PTR [ecx+0x14]
  429172:	push   0x4
  429174:	push   0x3000
  429179:	push   DWORD PTR [eax+0x50]
  42917c:	push   0x0
  42917e:	call   ecx
  429180:	mov    DWORD PTR [ebx],eax
  429182:	mov    eax,DWORD PTR [esp+0x10]
  429186:	push   DWORD PTR [esp+0xc]
  42918a:	xor    eax,edi
  42918c:	add    eax,esi
  42918e:	mov    DWORD PTR [esp+0x20],eax
  429192:	lea    eax,[esp+0x20]
  429196:	push   eax
  429197:	push   ebx
  429198:	push   DWORD PTR [esp+0x20]
  42919c:	push   DWORD PTR [esp+0x28]
  4291a0:	push   DWORD PTR [esp+0x24]
  4291a4:	call   0x428b69
  4291a9:	mov    eax,DWORD PTR [esp+0x10]
  4291ad:	mov    ecx,DWORD PTR [ebx]
  4291af:	xor    eax,edi
  4291b1:	add    eax,esi
  4291b3:	cmp    ecx,eax
  4291b5:	je     0x429213
  4291b7:	mov    eax,DWORD PTR [esp+0x18]
  4291bb:	mov    ecx,DWORD PTR [esp+0x14]
  4291bf:	xor    eax,edi
  4291c1:	add    eax,esi
  4291c3:	imul   eax,DWORD PTR [esp+0x1c]
  4291c8:	mov    DWORD PTR [ecx],eax
  4291ca:	jmp    0x429213
  4291cc:	mov    ecx,DWORD PTR [ebp+0x20]
  4291cf:	cmp    ecx,0xf89c85a1
  4291d5:	jne    0x4291de
  4291d7:	push   0xf89c85be
  4291dc:	jmp    0x4291fc
  4291de:	mov    ecx,DWORD PTR [ebp+0x20]
  4291e1:	cmp    ecx,0xf89c85be
  4291e7:	jne    0x4291f0
  4291e9:	push   0xf89c85bf
  4291ee:	jmp    0x4291fc
  4291f0:	mov    ecx,DWORD PTR [ebp+0x20]
  4291f3:	cmp    ecx,0xf89c85bf
  4291f9:	jne    0x429213
  4291fb:	push   eax
  4291fc:	push   DWORD PTR [ebp+0x1c]
  4291ff:	push   DWORD PTR [ebp+0x18]
  429202:	push   ebx
  429203:	push   DWORD PTR [ebp+0x10]
  429206:	push   DWORD PTR [ebp+0xc]
  429209:	push   DWORD PTR [ebp+0x8]
  42920c:	call   0x4290a7
  429211:	mov    DWORD PTR [ebx],eax
  429213:	mov    eax,DWORD PTR [ebx]
  429215:	pop    edi
  429216:	pop    esi
  429217:	pop    ebx
  429218:	mov    esp,ebp
  42921a:	pop    ebp
  42921b:	ret    0x1c
  42921e:	push   ebp
  42921f:	mov    ebp,esp
  429221:	sub    esp,0xc
  429224:	mov    eax,0xf89c85a5
  429229:	mov    DWORD PTR [ebp-0x8],eax
  42922c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429233:	mov    ecx,DWORD PTR [ebp-0x8]
  429236:	xor    ecx,0x75108ae
  42923c:	add    ecx,0x3272f5
  429242:	mov    DWORD PTR [ebp-0x4],ecx
  429245:	mov    ecx,DWORD PTR [ebp+0xc]
  429248:	push   eax
  429249:	mov    DWORD PTR [ebp+0xc],ecx
  42924c:	push   DWORD PTR [ebp+0xc]
  42924f:	lea    eax,[ebp-0x4]
  429252:	push   DWORD PTR [ebp+0x8]
  429255:	push   eax
  429256:	push   DWORD PTR [ebp+0xc]
  429259:	push   DWORD PTR [ebp-0xc]
  42925c:	push   DWORD PTR [ebp-0x8]
  42925f:	call   0x4290a7
  429264:	mov    DWORD PTR [ebp-0x4],eax
  429267:	mov    eax,DWORD PTR [ebp-0x4]
  42926a:	leave  
  42926b:	ret    0x8
